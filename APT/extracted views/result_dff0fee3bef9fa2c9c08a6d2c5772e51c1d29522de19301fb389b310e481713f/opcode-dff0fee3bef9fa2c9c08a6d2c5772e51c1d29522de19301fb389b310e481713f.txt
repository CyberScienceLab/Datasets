(bad) mov in push push mov test jle mov add push dec xor pop (bad) (bad) (bad) div inc cmpl jge mov jmp push pop movzbl shr mov outsl (bad) (bad) mov sbb loop shl shr or xor int cmp jle inc lcall ds cmpsb jge push jmp mov inc add jle ds (bad) insl cld add add push add jne pop movb pop leave ret pop mov (bad) (bad) incl sub lea mov inc test jne sub (bad) lock and push push ljmp mov js cmp xchg xchg mov or (bad) mov sub mov mov inc add mov cmp jne in testl pop jmp fisttpl mov (bad) (bad) jg mov (bad) je dec dec jns mov mov mov shl sar mov std add rorl sar jecxz shl or decl push clc js inc hlt add lock sbb test add cmp pop cld clc mov pop pop mov add or jmp or inc mov push lea push call (bad) and int3 sub jne add or sub fistpl pusha add push je cmp je or je and lcall mov jmp mov hlt mov push or andl mov add xchg fmuls sbb scas mov (bad) ss movdqu sbb push pop mov rep loopne outsl insl imul add or sub or sbb xor (bad) loopne mov sbb mov add jg mov mov and push lea idivb xor adc cmp jne jecxz mull in sub xor jge repz jle add incl add je movb addr16 nop sti pop sarb ret incl jle jne push mov push aad (bad) xor add ljmp jo call loop pushl sbb xor ds sbb inc sbb add dec sub mov adc mov xchg outsb fcomps or jne (bad) jbe inc sbb leave mov jle push in je jbe adc inc pop iret int rcll (bad) es enter rcrb cmp cmp pusha and sub inc test sub push add push jne add jecxz cld stos les inc into nop sbb scas (bad) xor lods loop mov cltd cwtl pop add sar sub mov shl incb movb mov push adc mov repnz push je ret push or jne mov outsl mov (bad) enter or fsubr sbb jp stos fsubrs mov rorb mov sbb cs dec and xor test lods push mov lods (bad) js repnz cmp jmp mov and xchg or mov push push xchg icebp pusha rol call out adc mov mov add or inc and or cmpsb cmp xor push imul xchg scas or std pop js xor cmp jbe adc mov inc sub xor sti cmp je push loope sub dec jae int sbb and rcrb and sub or subl popl fnstcw jnp sbb mov xor lock iret mov scas add xor cwtl shlb mov std mov cmp jbe mov sbb xor enter xor sub jae in jp xor iret push jbe add sbb cvtpi2ps pop cli add jle call clc dec in call dec call mov and lods push sbb mov sub inc dec inc push adc pop xchg decb inc push inc inc inc jmp stc pop push pop jae mov shl or clc add movsl rcl jae cld mov sti (bad) clc push mov loop adc dec or add mov das incb mov call je adc cmp inc xor lea stos add mov loopne shlb lock or adc pop mov js dec lock movsl cmp pop pop push repz cmp xchg ljmp loop jle,pn movb ss and ret ss adc mov adc sbb idivb pop or push inc dec jae jbe or cld push and sarb and pushl mov adc mov mov and pushl inc cmp (bad) sbb mov dec lock inc jg mov pop fs and push sti rolb ret inc push ret pop xor push cmp sub leave push lea pop call pop xchg mul seto neg scas push cmp add addl mov mov pop or bound sbb and mov fild in and dec sbb sub xor insl roll jbe push cld push or push int3 mov jmp ljmp int3 and sbb outsb xchg mov and add jbe (bad) incl mov add push xor pop or mov dec sbb pop loopne or daa pushl insl insl call push push in ljmp fs pop jno mov jge or xchg (bad) in inc and mov xor fisttpl jnp sub sub add or or inc cltd mov unpckhps movsb pop push mov pop loopne aaa ret dec and push jle ficomp adc mov ret cmp or mov mov cli jmp cmp dec push stc mov cmpb sti fildll push cmp je cmp jb lea in mov and and cmp js inc adc push jle (bad) sbb fcmovu dec cmp (bad) aaa push ret andl lea iret mov scas rclb sub sbbb or mov sub mov push sahf mov loopne cmp and cmp cmpsb jns and push aaa jl sbb (bad) xor sbb cmpsl mov sbb stc and cld mov (bad) jne mov cmpb fbstp pop mov cli cmp mov push push sub cmpb mov je mov pushf jbe jo icebp cmc (bad) push jns inc mov pop cmp mov push lock jle rol adc cmp mov ret push sbb adc mov ret cli repnz dec jl fs jl xlat xor jl lea ret jnp mov jne mov shr cmp jne shr push push xchg inc inc fidivr into sahf nop mov rol or sub insb push or mov lret iret divl jle mov insl shll dec inc add ror or rorb nop and (bad) ds adc cmpsl dec push dec or clc add push mov movl dec inc in scas xchg in addl jg sbb (bad) repz fdivrp movzbl mov or fildl adc fdivr addr16 mov and add mov stos fsubrp jge faddl or cmp cli jle fistpll hlt jge insb lods loope jmp arpl mov mov pop in push insb and aas pop andl push into add mov push pusha dec dec jle push push pop cmp adc in (bad) (bad) jae out add (bad) mov jle fildl pop clc ficomp fnstcw jns add les xlat sarb (bad) push lret aam lock pusha outsl nop cmpl xor push pop push pop idivb sahf ljmp (bad) push push push lock cmp aam fsubrl dec pop data16 shrb loopne cwtl fwait mov enter and rcr dec pop fdivl sbb adc (bad) lock in pop jl push fsubrs xor inc cmpl (bad) push (bad) fildl inc adc or stc add aaa aad cmpsb loope inc inc sbb enter cmpsb mov call les add lcall loopne mov push outsb xor or js mov mov jg jbe subl mov cli mov ljmp (bad) dec divb push add add dec jne pusha or pusha jo test cmp xchg adc in add orl jge dec or mov push and insb add sub push sbb scas push jbe stc and adc sub enter adc dec stos jl,pn dec sbb mov dec sub adc fmull fwait sub adc push fidivl push push xlat jle adc mov mov mov add cmp (bad) sub push xor cmp addr16 (bad) push xor jmp mov lret add stos jo pop mov or jb and in scas mov or pop push test ss mov mov mov add lock les add (bad) ret in pop loopne in movsl push mov or sti mov sub push push add mov out hlt (bad) aas test xor jl push aaa cltd add loope or mov pop inc or sub jle lods mov or rorb int3 pop sbb movsb pop out or mov mov mov icebp cmp mov int3 iret loope lods loop jo xchg or or lods add dec cwtl outsb js orl or outsb sbb popa sarb in rcrb push imul prefetcht1 xor push xor cmp jne mov jg mov cmp sbb add je mov pop inc pop ja out xor fimull adc and ret imul add xchg cltd arpl sbb sub dec mov mov lock shrb leave outsl sbb mov or mov push sti fldt push es add sbb add push sub or add inc inc or jbe hlt mov pop sbb or setle or nop mov mov adc test push sahf hlt loope dec icebp nop or repz clc and mov xor mov add dec cwtl adc jmp push cmp lcall xor inc or or xchg incb sub jmp cmp jne (bad) jne divb jae push jmp inc jae les mov fidivr push pop out inc cmpb imul inc pusha xor pop cmp out dec or adc xor add sbb push arpl (bad) adcl xor adc daa jp dec hlt and out insb mov test or mov adc mov or add mov test lds faddl (bad) push sub xchg push sbb inc nop xchg and fmuls xchg in js ss mov cmp jne loope sbb je or mov mov pop ret add movb xor popa inc sub dec cwtl mov or or jmp sub fiadd add add out jg fimul cmp jb push inc movl inc sub roll cmp es mov pop sbbl or mov dec or or stos or sbb movsb pop cmpsb add repz inc ja cmp dec dec aaa repnz outsl jl fwait and cmp mov push push jne jno adc fildl mov imul dec add jne inc lea dec jo sub push pop dec cmpsb popf not and je stc call pop std je inc sbbl add shrb testb add addr16 dec add jb adc add into adc inc push std decb pop std xchg or push sbb adc xchg cmp gs jle adc push lcall push jb das std adc adc adc and adc sub mov and pop lods cli or data16 mov jmp clc je mov lea lea repz int3 in jmp xor pop adc push push add testb aaa lods pop orl jns jns fildll mov add mov decl les cmp xor mov sbb mov fsubr push xor push mov and mov xor jmp neg sbb push and push mov push xchg fdivl notb jge dec add push cmp es ss call clc push jecxz mov lods sub setne mov aas dec lea adc leave push inc pop sbb mov sbbl pop add je and sbb xchg stos cli jle push sbb out push lret in lods add sbb jno push mov push push or out push sbb data16 or cmpsl sbb pop jns ficompl rorb int dec lods call sbb hlt subl jg fidivl xor ds pop into adc or ljmpw cmp sti je push les dec adc and adc test les je push or mull jae es jmp push test bound cmp cmp xchg cmp pop push sub dec cmp jle mov je push and lahf jnp push mov adc mov inc xor dec dec sbb inc adc (bad) pop imulb negl ficomp push mov jge lret push xor sub jg adc push mov mov sbb aad xor sub repnz aas or pusha lret and xor adc and jbe mov shlb add dec push sub call adc xor ret loope pop insb sub xchg and out jo cmp or cmp sbb push aam stos mov repnz xor (bad) jnp pop jge adc inc cmp push cmpsl adc outsl shr sbb pop ret jmp mov rep movsw movsb mov push daa sarl cmpsb cwtl cmp sbb add xor aaa add adc add cmp fs pop int3 add jl pop sbbl lods js add sub clc ss outsb call cmp push in sbb pusha mov push pop cmp push rorb inc add pop push add push push mov mov jne push lds mov lods dec repnz push cmp hlt pop sub dec sub or andl sbb es jo insb xor fsubrl dec mov scas lods push dec cwtl fidivr mov (bad) clc testl sub cmovle sbb pop ret cmp lea cld push pop xchg lock (bad) mov bound cmpsl out rol repz pop into push sbb xchg push push pop pop jae fdivrl popf out je mov dec push cmpsb jmp or nopl les or fadd sub cmp je adc push sub outsb shrb xchg shrl nop insb mov or outsb cmp test jo mov sbb ret cmp inc push push cltd cs jb std cmp or sbb imul insb xor pop push loope ficoml adc inc sbb inc subl push pop dec das push loopne sbb test les inc addb xor cmp cwtl and inc dec imul arpl neg sbb push jne outsl mov jno ja add jmp test jl vpmuludq enter mov xor cmc mov test cmp enter mov aaa test xchg dec xor adc cmp mov addr16 nop sub iret negl mov pusha test or add dec jne lock jl push imul cmpl movsl mov push jo xchg jb icebp cmc mov enter and jb jmp xor fcomps arpl add dec mov bound push mulb pop push pop jmp sbb inc pushl push mov or rclb rdtsc popf cld and loopne jg pop xchg or cltd add cmp jl (bad) fbld add inc sar mov repz div pop lea ret outsb add or push pop add push mov add es mov call mov mov data16 mov (bad) in test jmp mov test adc and aaa push adc mov xor scas adc inc xchg fdivrp jmp mov ret stc adc push pop idiv mov mov or adc mov mov push or pop movlps pushf xor loopne sbb dec lea push mov ss (bad) jo xor pop inc lock xor push aam scas je pop mov fldt movsb lea rep push out push clc gs or stos lea inc add push fcoms mov out inc push adc outsl xchg (bad) push dec adc push lea jnp popf add add mov and and out icebp out xor and xchg lods adc jb add ret mov and adc and mov jbe jo lock popa mov les in cmpsb jb cmovl push popf cmp movsb daa nop xor jne (bad) shr mov scas ror or imul add jnp jmp movb cld sbb fsubs je sbb ret pop jo,pn inc and or sbb pushl adc cmp pop sbb add pop sbb repnz in sbb or jbe xchg call cmpsl push pop push or fsubl push cmpl xchg sbb pop movsb loope in cld fs push cld scas shlb je inc je,pt mov sbb or pop inc dec xor ret sarb adc bound add mov and je ja std and jb add clc (bad) nop mov inc add cmp add cmp xchg rorl and out push sbb (bad) decl push lea mov jle int3 dec xorb inc in sbb faddl mov inc sbb or (bad) je inc in mov lahf test push jbe sar xor fbstp arpl jl faddl neg dec lea js xchg dec movl int into sub pop bound test and xchg sub push mov xor or (bad) ljmp push adc out ja and mov add mov popf testb jb ret stos push idivl lods push outsb fucomp lock cmpsl mov jne mov or daa fidivl push cmp inc insb rclb add je orl cmpsb imul or push call pushw sbb adc mov sbb xor push rcrl stc sar nop jne or insl add xor add jo xor (bad) mov and loope lahf test mov sub inc sti lock mov adc adc fist jne das jmp jle push fisub jl or inc inc ss push pop and fcoms loope aam imul insl subl push xor xor lcall (bad) mov loope int3 sub mov aaa adc dec cmp pop repnz inc in dec add call loopne add sub inc lahf dec bound mov xor xchg and xchg in movl test xchg fisttpll mov clc or lea fsub cmp je imul jg and mov add and lods mov daa add rolb hlt cmp addr16 mov push or lea add cld sub leave idiv mov test jnp iret adc in mov std addl jg fimull test or xchg fcomp jmp adc out sub and pop cld and popa mov push loope sub popa (bad) dec sub jns cmpsl mov clc orl cmp cmpl pusha sub in xchg jmp push js subb or cmp shr mov cmp js out and or or popf jnp (bad) cltd jae sub mov inc and push cs add xor repnz call and cmc jne fcomps imul rcrl rclb aam loopne inc das cwtl add and sub lods (bad) addr16 mov imul or out rorl movb call or shr cmpl mov cmp lock call mov xchg push test mov and or stos jl mov mov arpl lea les mov lods sti or push addb push xchg mov loope adc daa (bad) mov push sub sbb and jmp or lret inc lock test cmp inc (bad) jbe adc cmp xchg (bad) cmp jo and jo mov jmp or insb insb jp ja mov (bad) xor idivb sbb pop js mov in and fstl xchg int3 sbb cmp shlb lods mov adc sbb push dec jecxz mov ret stos mov lods add (bad) inc cli sub add insl push test rorb sbb clc fistpl mov outsl sbb jl js push mov pusha mov imul add fdivr (bad) ljmp add scas push sahf jne jo push dec lahf mov pop cmpb repz imul pusha add cmp fwait jo clc push repnz data16 aaa ds ljmp jb mov xor push pop push cmp inc cld adc jmp je (bad) aaa push insb mov int3 cmp hlt daa cld aaa inc push fiadd jbe ljmp fadds fsubrs data16 mov mov or pop dec jge jmp inc imul into xchg jbe push insb aam or jmp scas icebp (bad) xor fs adc push mov or into jbe cmp loopne mov mov ds cmp jb push ss inc jae mov jb lea rorb fdivl push mov adc cvtpi2ps xchg lea dec (bad) xor fdivrp mov pop sbbb fiaddl add (bad) mov mov js sub xlat popa lock daa insb and xorl dec jg bound jo or into mov in and loopne lods sub sbb movsl int fwait into stos sbb movsl sbb pmaxub push mov xchg movsl sub jmp movsb cli inc mov jle das xor and out mov sbb add dec fisttp lock push dec or test pusha push mov pop pop push cmp or dec sbb out pop rclb cld cmp call mov push xor sarl jno lock sbb xlat repz clc push jno (bad) cwtl loop pop mov or sub addr16 add dec sub out mov push test fstps sbb pop lcall sbb sbb lods aas add int3 ret adcb and (bad) dec add or sti mov insb daa push test fistpll sbb mov or pop or arpl lret (bad) sti sub or xor add xchg aas cltd fs pop adc rcll dec jb xor add add dec insl mov test loopne adcb jecxz cmpsl clc mov add xorb test jg mov inc test jne jae push or pop add sahf jge mov (bad) jle push push and jo jbe shlb shl mov sub (bad) sbb add les subb imul push fstps or ds daa xor lcall adc pop push js push jle ja pop adc mov lea outsl dec js andl cs (bad) lcall lods es cmpl icebp out push into fwait mov cmp jl cltd test mov push mov mov add cmpl jb sub push add loopne inc (bad) repz std addb iret or add ss add sldt or int3 (bad) xchg fmuls test dec (bad) lea mov fwait jmp push test loope test xor and sub jae mov ljmp dec mov lods push mov cmp in (bad) pop or adc push je (bad) pop pop inc dec sti aam add lret pushf int3 es jecxz or sbb out test sub pop pop adc add or jb sub aaa or je (bad) (bad) pop pop test add mov loope mov std (bad) push (bad) cmp jae mov cmp inc inc cmp mov inc es add jo sub adc lods aas mov outsb or mov iret and (bad) add push pop pop (bad) lods or shrb sub cmp fndisi(8087 in hlt xchg add push adcl call xor push inc into add fsubr add lock inc xchg or icebp push rorl pop movb lea pop cs shlb lods aaa fsubs add push push fcoms sub and jle sub inc lret sbb push pusha sub out inc addb mov inc out adc enter in mov adc dec in adc or add outsb jl out lret push bound add stc (bad) icebp push push jle mov push push in add (bad) sti addr16 lcall sbb cmp sub mov hlt dec cmp sub loope sbb loope and ret je aam fldt pop sub fldt push negb jo aas push aam or aas mov mov mov test push js (bad) jg fldl xor mov push lock fadds int and iret mov ret push jl and jb push xor test arpl pop or jno sbb sbb sti push mov xor push call pop sbb and into in jo in mov nop push inc pop and pop mov cwtl push pop movsb xchg paddsb cmpsl xor push in stos rolb cmp push cli ds dec lea mov pop sbb pop icebp cmp push addr16 sti lock jae pushf xor cmp pusha test subl jb or fs iret lret inc pop pop add outsl enter add nop mov jb or jo xchg adc add push jbe js jns mov sbb xchg pop dec popa and or push mov inc roll and (bad) lock jae cmp sbb out imul sub or adc outsb pop push and sbb call cmp (bad) adc movsb sti out hlt or jmp cmp or mov add pushf mov inc inc push in and mov push add xchg cmpsl imul xor pusha jle insb pop pop lret mov into lea mov and sbb pop xchg xchg jl sub pop sbb mov js ja mov mov inc cmp outsb lea adc jnp aas jp test or fcomps xor loope out sbb mov adc mov push add cmp fidiv enter lret and push ret in mov jb or dec adc or add in add xchg push xor inc mov inc loopne adc lea sub push orb sbb rcrb xchg push (bad) xchg adc cmp mov xchg das or test add jno and mov mov jns rcl daa outsl int sbb sub dec adc mov mov push inc jbe out push push xchg loop add movsb into pop ss rorb dec je dec or dec imul mov pop test ss dec mov mov add cmp xchg ss daa mov mov sub and sub adc and mov mov push mov add dec jecxz dec js sub push popa cwtl aas cmp pusha cmp cmp (bad) sbb vcmpsd call loopne cmp (bad) in mov jno movb adc mov push je repz hlt jl adc and fdivrl sbb xor icebp xor inc cltd pop orb rolb sbb mov adc push pop into push scas sbb sbb add sbb aaa and mov (bad) jmp pop in pop call push inc pop int add mov fcmovbe xchg ret aas cs stc xor hlt adc jge insl xor sub xor or cmp fsubl sbb xchg and mov push stos adc imul cmp jb ja dec lret dec ds pushf push adcl and push xorl mov xor dec push pop add jl cmp jno cmp into nop mov loopne iret mov add dec mov adc mov ret lea adc and dec pop stos jmp mov and out cli insl fimull loopne lds movups pushf cmp mov lods jnp int3 or jmp loope adc or dec sub push mov mov pop add call pop inc lcall hlt in mov or fiadd dec addr16 call jne push out (bad) jnp out push push inc xchg push mov mov xor or add dec inc lods cmc push dec xor mov push testl pushf push bound cmp mov pop push push ja or sub jmp je (bad) iret aad cmpl je ret pop lock in js pop dec mov mov inc stos rolb push in mov mov adc daa xchg adc dec repnz sti cmp les and push pop xor push and out sbb movb mov xlat mov mov xlat test fidivr popf cmp xchg out (bad) pop xchg cmp xor div dec mov jne aas xor test sbb gs pop inc test mov das (bad) insb cmp jle incb jge mov lsl add test jmp or xor jge inc xchg jae xor jnp cmp cvtps2pi mov adc mov adc push in xchg test dec push sbb hlt mov or and adc lods adc push jbe lea cld scas pop clc jg je xor mov adc lods xchg sti mov enter xchg adcl (bad) push inc xchg adc addl mov test jno test mov and dec lock mov addl push push scas xlat xor test scas (bad) pop and adc push (bad) jae imul imul hlt gs push (bad) xor push out or jo mov enter clc out or popf loope push mov loopne divb ss adc dec stos mov xchg dec (bad) fsubs outsl lea and jecxz mov xor push roll inc frstor adc add orl icebp push fiaddl adc sarb hlt adc push adc adc push rcl adc adc stc ljmp ljmp cs cli sbb pop mov das fbld add jbe push sub jl add jo xchg adc push (bad) notl outsb and mov rcr mov push inc xchg mov test push pavgw mov mov imul cmpsl inc push rep fwait (bad) sub pusha mov cli stos scas gs icebp nop xchg add push dec pop mov aad jno subl stos lret sbb stos notl fmuls adc adc addb sub neg pop cmp rclb mov add out add cmp inc sub pushl sbb pop loop inc jb fstpl sbb and pop ds add movsb adc sarl loopne adc pop add sbb mov cld out imul dec test sbb add add xor out pusha hlt and or jle pop cld xchg push lea xor jg incl lea lea mov mov ljmpw cmp jl sbb cmpl jg mov jg in outsb insl imul sub mov dec dec mov sbb std mov std jg pop pop js push lahf cmpb data16 (bad) xchg mov repnz push mov mov pop xchg inc jno inc add ret mov gs pop xor mov inc lock movsl shlb push jl jecxz cmp je mov and ja add jne jb jle or sub je fdivrl out inc decl jne sbb push sub add jmp cmp inc and jp adc ds pop mov pop (bad) fnstsw jge add cs (bad) std lds push cmp jge psrad xor fadds push addr16 inc rolb mov sbb fmuls jo aas loopne xchg jle inc mov pop je pop aam pushf lret pop ret pop push adc push push js sbb hlt loope sub test add stc pushl jge aaa aam push in jb inc or and xchg mov lea or ljmp fist push push jns xchg mov roll sti pop addb xor adc inc popf clc jb push mov dec or cmp test mov pop ss dec mov (bad) aaa add and cmpsb xor test paddd adc or and ja mov lds ret lods cmovb mov mov push cmp jne (bad) (bad) add sub adc aad movl add push push call adc add xor mov push hlt add stc push mov pop (bad) push nop in in pusha stos push in sub mov insb and clc or (bad) dec clc jmp mov outsl fild shr mov out ljmp sti setbe lea jbe mov dec push push lea sub sub dec insb mov mov sbb roll dec in add jb inc and ficoml ret mov fs mov mov (bad) push push push and xor push cmp pop jp mov hlt rcl lods in (bad) cmp cmp mov mov into orl push test xchg insb clc cmp movb mov push cli pop push sub mov sbb das lret jae loop mov mov mov fs lret sbb neg pop lea shrl lods dec data16 xor fbstp inc push and dec pop sbb outsb enter inc and cmpsl ficom sbb or cwtl ss or xor clc in push sti xchg sub cmp jne sbb or mov sti pop dec dec push dec xchg mov adc (bad) mov (bad) jae imul cmpsl push push adc or jbe pop cmp fsubrs xor adc push pop mov push pop xor out scas rcrl push add sarl test sub inc jle cmpxchg sub dec push dec sbb int3 aas cmp xor xlat dec adc fnstcw out scas pop bound add cmp jbe daa pop ret cmovl push sub cwtl xchg push or mov xchg lcall xchg sbb and lock push pop mov xchg or or push push inc or mov cmp mov mov sbb xor roll jle sti ss pop pop lock rorl mov fstpt xchg jg ja aas int3 test int3 jb mov (bad) xor es push xor mov mov xor adc imul add nop pushf add repnz js jl pushf push push jmp hlt or add jl add jmp shrb jne jb ss es pushf inc lret add shr mov cmp mov mov in inc int3 push mov inc mov cli pop (bad) aaa sahf and add inc mov incb and (bad) inc and mov shl imul or ret ss ss rorb add aas mov adc ret jne ss dec push sbb pop push add adcl ret sub sbb call mov inc mov mov stos mov jp jo mov cmpsb inc sbb push adc ljmp add jno cmp and or cmp (bad) and pop pop jg or adc push inc lock ret icebp dec lock enter pop in or loopne add nopl ljmp or inc icebp lret inc add test aas mov cld mov lds inc or lea inc jge dec sub inc jbe dec jecxz sub and cmp (bad) inc sub push (bad) cwtl sub add push ss or stc shr push cmp and inc xor mov adc call jecxz or push xor or and aad test inc or pop or and xchg inc push ds or leave repnz in add add and movl pop or lds in push js clc add bound inc push adc cmp mov test cmp push or sysret leave inc ret (bad) sti rorl rorl push ret test lret push add or mov in or aad add in mov or push add jg je and add lret imull sbb mov rol (bad) adc lahf hlt idiv in ret push fstpt push loope pop jp add popf push pop push test jne or dec adc jne sub mov push notl pusha or pop cmp test roll popa nop les or adcl fbstp add jae cmp les xor cmp jp cmp pop pop adc xchg sub inc movsl int3 icebp dec add jae nop jae add ret push push push xchg aam xor loopne stos loope adc js nop push xchg ffreep sbb imul mov mov cmp and out sbb add in add or push inc and mov mov orb dec dec pop or add sub and out cltd xchg cmp shll and mov xor imul inc das aas test push aaa pusha pop mov adc mov les (bad) (bad) loop (bad) ss aas mov dec lods aas roll in jge bnd out test mov or or scas pop stc mov push test inc push dec out pusha inc nop mov sbb push sbb and test push sti adc (bad) pop push lock jns test xor push or ret andl or or or sarl cmp cmove inc lds loop movsb repnz push mov xor mov or or sub lea xor mov int3 add sbb xor push mov fidivr sbb jge or jge cmp and push les mov in dec adc shll je sub add cmp sbb sbb ret lahf push adc mov popf loope push cld pop mov jg cmpl add ficoml jle vunpcklps lock js popf je (bad) cmp adc movsl test dec dec pop pop mov mov stc movl cmp xchg aaa addl mov sarb adc test imul xchg push adcb pusha sbb mov jnp sahf add es push xor cltd push push and inc or dec dec (bad) xchg push mov ret push lret rclb loop jl inc ja xchg pop aaa mov enter or data16 cmp js rcll adc or hlt mov add push ret lahf jge jne stc lcall mov loope iret test cmp and sbb sub push dec mov push cld xchg popa adc mov xor push adc cs xor outsb les pop sbb inc xor sub nop push pop add call xchg fs sbb mov mov shr (bad) cmp pop add adc or adc clc sbb xor sbbb push ss or add sbb insl mov sub insl aaa push mov icebp mov push mov bound nop sbb jle cmp pop js leave aam cmp or mov or pushf ja mov inc sub ret stos int (bad) pusha or cmp mov hlt adc sbb cmpsl or xor mov repnz inc scas pusha adc lcall cmp dec adcb (bad) lock (bad) std sub add or fmuls push mov mov mov pop ret xor cmc or shlb sti jecxz or add mov push lahf mov xchg shl sahf roll mov dec and xor add loopne shrb jle inc mov jle jge sbb dec mov out and sahf inc push cmp add or lea neg and mov pop jbe loopne lea pop lret movsb pop jle and jg icebp mov or add xor stos pushaw cwtl sbb mov lea jecxz mov fistp mov ret sub cmp aas aam push push add add lods dec sbb test push jne inc sahf adc dec (bad) jae adc dec jne mov sbb je pusha bound dec sub lds lock or mov push roll dec popf push es add scas gs dec push add cld and jge pop inc lea adc pop icebp cmp pop mov xorl jp sub call pop pop add sti dec rclb andl inc or orl sbb loope pop or push and repz add hlt jle faddl jne inc push stos dec loopne lahf std push fs jge (bad) mov push lea cmp inc fisttpll or movsb lds pop pop push add or jne xor add pop sbb sbb lcall sbb nop/reserved jae notl sub mov sti add sub push sbb xabort (bad) jo std adc and pop cmc cmc lcall shrb rorb mov dec mov test jle inc cld mov cld jo (bad) cmp jne inc insl sti outsl cld fs fwait mov jmp add sbb test add push shrl xchg xor addb fildll dec push push add push mov pop bound push jle (bad) jg pop add mov push and cmp jle mov pop mov add or (bad) sti aam push or mov sti push pop xchg mov add aaa addl xchg les inc xchg shr addr16 add mov ret xchg out xchg cmova sbb decl add rclb add mov mov dec mov mov mov or pop jb sbb fs out loope push or mov jl ds ror mov lret cmp jne test jo outsb and (bad) mov jle sub popf xor sub mov cmp jne aad add ljmp and mov ret jge into ret mov adc push adc cmp jno sub and rol adc bound cmpsl jl repz pop loop push inc adc ljmp add add add cmp clc mov inc fwait and mov adc je mov shr aaa cmp jp pop xor cmp jge lods adc mov fiadd psrlq jl mov in mov and js sub stos inc (bad) mov ja pop jno lock aas adc and pop mov jmp jo cmp dec sub getsec out andl sub push jge or ja lea push add sbb push push sbb movsl rcll inc add sub push add rcr sub dec (bad) add add push sbb loop mov mov js xor cwtl pusha mov pusha movsl repz and add push notb push (bad) mov inc in adc push mov aas inc dec and adc js pop pop insb inc clc and mov fbstp or lds or jnp fisttpl jle push mov mov rclb adc ret cwtl push mov xchg out clc aam and clc and pushf add add mov in mov push lret adc and mov push adc jle dec in pop int3 push cltd push push adc pop int3 (bad) adc sarl dec leave sbb add cmp add push das rcll (bad) dec pop mov mov (bad) mov aas pop jle and clc jo push pop inc out adc loope xor xor ds add xor icebp stos jmp mov shll push and lods sbb (bad) aam outsl pop push sbb sub inc in dec jne push inc clc rcrb cmp inc push jle and xchg pop into sub sbb jp add push sbb les xchg xchg ret jg inc add xchg mov sub push dec iret outsb xlat call add and dec ret inc inc out mov fwait mov adc add stc or xchg xchg or xchg xchg pop jb addl loopne testl xor (bad) sbb cmpsl addl add js lea mov into adc and cmp fnop xor jge add jo ret lea fsubs add sub push pop cli hlt movl or or and sbb inc in adc cwtl cmp adc sbb lret adc cwtl push ret adc jne rclb dec push mov jne and xchg push adc inc mov jbe jno aas and ret push jo (bad) insl lea or sub test sbb stc hlt aas (bad) jg cmp jne aaa push pop call add stc dec push push and adc push or push dec mov xorl inc movsb add and pop push lods sbb cmp push fidiv xchg rclb enter adc inc xor push andl icebp ljmp neg sbb sar and loope add mov and data16 lea test jae sbb add test shll cs sti movl or pop adc fistpl inc test jbe je jle into sarl pop cmp and pop nop pop mov ss pop jle jae push inc in xchg or add sbb stos clc test cmpl adc rcrb pop mov mov sub dec sub test jne mov inc inc sarl pop aam ret sub lcall (bad) inc sbb cmp jl imul xchg sbb mov (bad) mov clc shll cmc pop push ds or adc jo xchg add ljmp or push test adc xor (bad) xchg adc mov or pop (bad) jbe push push or cmp xor test sub xor xor aaa xor lods inc push sbb pop sbb in and rorb icebp add sbb xor mov jge jb das hlt mov outsb mov mov cmp je xchg dec outsb repnz movsl (bad) sbb insl sub fistl inc lock enter push inc (bad) dec adc xchg or add mov pusha push or and push jge sub das sbb lods inc mov push push add push (bad) les add les mov dec cld out mov xchg dec (bad) jecxz mov add add mov cmpl dec sbb sbb adc mov pop sar outsb pop pop shrl (bad) sbb jbe or xor push mov push loop xchg push cmp in out xlat add cld and dec dec lea fisttpl add jo adc cmpsb popf roll xchg leave add fs push movb popaw sbb xor (bad) cmovb test add repz push shlb jae cmp cmp pop leave or pop or roll xchg push sahf or push movsl ret and pop xchg (bad) add and int3 enter or jmp lret out dec mov repz (bad) or cli add adc clc cmp (bad) push or cmp adc fist pop push enter and jl in clc stos push cmp jbe sub scas or inc cli push push inc adcl sub or or inc or clc mov mov ret inc sub (bad) cmc pushf xor daa adc mov mov mov xor sub decl pop jle add cmp in (bad) stos addl jge push xchg mov sbb addl popa pop mov mov sbb xchg xchg mov adc add shrb xor xor and outsb dec or add sub xchg xchg lock jo dec cmp cli add or push pop cmpl push push popa sbb sub add and jbe lods (bad) fistl or xchg mov sbb pop jmp add adc mov rorl sbb sar icebp addl lahf mov js xchg mov orb fiadd xorl inc pop jo repnz scas or pop push and lea push push scas movsl js or mov push sub jge das or and add cmc inc shr jne popf push adc (bad) mov lret adc rclb adc mov loopne in pop sahf push jo sbb lea push xlat jg nop inc imul cli movsb sbb xlat in scas push or push push gs pop push ds lods inc imul cld add inc add cmc cmp mov or or jge or push or and leave and sub push pop push sbb cmp pop adc add jo mov adc pusha dec call adc mov in push cmp and dec or inc push inc push or mov in inc pop adc test imul pop mov popf or xlat mov xlat sbb mov mov test add xchg daa sub flds xor (bad) je shlb add rolb xorl dec add pop or mov lds or sub or or sub inc aam icebp test pop push sbb rolb add mov test adc loop les in xchg push or push xor lahf pop lock pushf adc adc sbb add adc lcall lea pop mov pop dec xchg rorl xchg mov andl stos push add push mov (bad) dec sbb dec or and pushf or stc push push and (bad) sar xchg mov movb xor or dec in adc cmp xor or inc les cmp dec sbb sbb add adc (bad) pop nop enter mov cmc cmp gs inc ljmp push xchg incb push mov dec push push fldl sbb stc add push inc inc ret mov iret addps cli shl mov dec nop inc push jp fildll push pop cli add push push hlt adc or push cmp das notl gs rolb lea repnz xchg dec ret rcll sbb adc adc adc mov test xor adc pop and jne (bad) and jne mov add js sbb dec xor jns dec enter pop mov jge adc pop incb scas mov clc clc in push loopne sbb sbb sbb fwait es scas sbb sbb in and push movsl fs push xchg sub cld inc mov push push push std iret pop out push and movsl cmp mov xor and aam rcrb test pop adc push mov mov jl sub push push xchg nopl sbb pusha and and inc pop xchg push and or bound cmp push loop or and and pop loopne popa add add lods adcb sub inc sbb mov cmp jmp std jae inc fisttp add sbb pop mov cwtl mov add mov dec dec mov sbb or mov sub out mov jmp std out into jge bound orl popf xor or out and pop pop popf movsb jae andl sbb sub adc and and fs xor sbb sbb and mov lods xchg fcmovu mov aam sahf mov xchg add scas test inc in cmp aaa mov push or loope pop hlt (bad) push leave or jg mov mov push aaa movsb dec add or dec inc cmp lea push jb adc push jno mov mov test push push push js movsb xchg into or inc mov xchg push jo jns test inc mov adc push push inc nop add add push push add int3 jl mov cmpsb mov cmp push lret and aaa sbb aam icebp aaa mov jbe scas add les push push rorl test ret cmp (bad) dec sub pop push mov and jmp jl mov je push adc adc cmp lcall jne sbb lds stos mov test orb insl inc mov and aam push adc or inc pop xor mov pop and or add or sbb push push adc or sbb andnps cmpl rorb cmpsb adc scas adc sbb push subps or por push or fs sbb (bad) mov mov sub and popf iret dec fisttpll add in pop mov dec jns or fcompl mov mov or sub call rolb call mov decl shlb ret mov sub adc fwait xor dec inc xchg enter lahf add fildll test lea inc inc mov push outsb xor inc stc xchg add mov pop sbb test dec dec inc sub adcb mov faddl je mov mov aam sbb aas xor test call adc dec test add (bad) lret nop mov cmpsl cs mov call or sbb push jmp lock jmp or pushf or ffreep cmovne movq (bad) inc loopne out mov push sub (bad) mov mov lock adc adc mov and les mov addr16 das mov push (bad) sti xchg sub or or jge add mov mov cmp mov (bad) xor leave mov mov mov test call pop in jl dec loopne push sub push in pop jge sub daa push xor data16 rolb cmp jl lea xor lahf rorl pop mov mov xchg mov imul arpl or andl sub or ja sbb or sti repnz (bad) cmp jns or cmc cmpsb int sub in jo dec in mov add pop mov mov out mov sub nop loope repnz in adc ljmp ja cwtl cmp das call lea add outsb adc xor mov push js decb sub sub cld sbb testb and push or sbb dec pushf or jmp movsl insb and sbb xchg dec loopne fistp adc mov mov push push push push push rclb inc xor lret pop fiadd test adc pusha xor (bad) xor add add nop add aam popf cmp push fimull stc adc push stos mov fwait dec pop add pop dec mov push xor push sbb add daa jo mov or jmp cs aas mov mov jg sub test xchg js push push adc sbb int3 ljmp and push or sub stos lock aam pushf (bad) pop mov sbb push popa adc dec sbb ja movsl add lahf (bad) jmp movsl cmp test ljmp jecxz inc sbb js stos pushl inc push loop pop and add icebp xchg sbb xor or clc mov adc in xchg adc sbb mov xlat iret add test jmp and jo add add fmul xchg jno (bad) rep or sbb xor ljmp inc cwtl push add dec (bad) imul mov add sbb es and jae mov jb mov pop pusha xchg jno dec adc cmp icebp xorl add aad jle or add rolb push pop mov test pop fistpll cmp call add lock loopne push cmc rorl xchg inc xchg aas pop add je loope sbb add (bad) adc sbb lea aam sbb mov es or leave and and aam and cmp or mov adcl pop jo sbb ss and xchg (bad) jo adc push push push (bad) adc push repnz pop cmc out push in xor jg movsb sub sub lds movsb in pusha in xchg sub mov ss aad add sub and sbb fcoms aam add popl (bad) xlat lret dec pop or jne aas pop test inc cmpl push arpl jne pop pop sub and and pop pop push arpl dec adc ss inc jo inc jne sti or incb stos dec add jle lea mov cmp ret shrl mov pop jbe movsb addr16 jne adc pop inc inc movsl inc sub mov (bad) xchg cmp mov sub pushf adc insl enter fsubrl add sub out (bad) jge in cmp cmc call or or mov movsb aaa add dec aaa cmp or mov xchg les cmp mov or jno scas push or mov cmp or cwtl cwtl or mov adc pop mov subl les nop pop and test enter neg adc je push insb lret movsb inc flds dec js std (bad) fisubr inc inc std pop test mov jnp lods jl lock sbb out and inc nop int3 xchg loopne (bad) scas jecxz inc ret mov pop negb subb mov pop call or add add les js add stos sahf jnp repz out add (bad) xchg test cmpsl out cmp stos xor jmp lahf ret into sbb push or popa add dec pusha mov and xor add mov js dec add xchg xchg mov enter add je cmpl jne push insb sbbb hlt fwait stos xchg sbb andb inc push mov fs xchg push mov push xchg and mov lods push xchg mov add jl rcr sbb orl sub mov adc pusha test or or mov push push call sub std bound test (bad) mov pop or push pop (bad) push rcrl mov add adc imul sbb sbb cmp add (bad) mov mov call lcall imul xchg sar adc cmp pop insl ret jo or test inc dec push add stc xchg push popf mov or jle add mov pop sbb test (bad) lods aam adcb and pop (bad) mov adc shrb cmp bound inc mov pusha cmp cmp or addl pop add add roll xor in add dec push and popf call or or loopne mov and sub add pusha cld lods roll lock imul leave mov pop jo das pop add rcll cmp jge mov add repz cs popa add or xor add fstl push in dec frstor adc or ss movsl cmp push bound xor insb nop pusha jp call add sbb push and and adc das dec lea mov int3 and lds cmpsb jno addr16 or das mov rclb sti lods fsubl (bad) lods leave bound iret add jle xchg xor in daa nop or jnp in mov stos jne arpl adc mov add or sbb sub pop and (bad) cmpl add inc ficom pop sbb adc ret lds sub fcoml jne subl sub (bad) xchg es loope int push adc push fs pop push test pop into jno xor adc lock push sub and pop and in cwtl xchg xor stos lock gs pushf repnz gs in std xor fadd sub (bad) xchg fwait jae or mov out cmp push js cld mov sbb cmp adc cmp jne adc fwait sbb fisttp jns adc popl mov jb xchg fwait add mov sbb inc movsb jmp mov movl inc xchg adc dec push or cmp mov mov rcll mov push sbb xchg push jl push pusha sti dec pusha pop xlat mov xchg pop xor jmp das jno push sar out xchg sub es dec pop mov push cmp inc push mov aaa outsb sub xor fdiv pusha inc inc cltd inc xor pop sbb pop or aam bound jmp addl imul cmp dec and push push loopne loopne adc (bad) les sub inc loope mov movsl cmp dec es hlt mov or xchg xchg xor cld fld or sbb (bad) in cld or in mov mov fnstenv movsb mov mov popa pop push push decl movsb jno inc sbb jne rolb popf test adc add mov sub jne add or (bad) or cmp cmp push mov adcl add push aas test aas test cmp push lret push xchg testb pushf and or sub and sub inc sbbb rcrb sub bound nop rcrl and js cs add jnp jg ljmp sti inc inc addr16 ss cmp sub xor xchg xor jge,pt mov hlt scas cmp cltd (bad) fsubs into ds jle (bad) jne push clc adc jnp sti pop push or push xchg int3 inc pop xor pushl cmp jne mov cmp mov mov and or sub cmp jne xchg fdivrs movq aas in or inc xor jp dec (bad) adc push adc call push stos or repz mov adc jmp pop mov dec or add cmc sbb lea (bad) jecxz xor add or sbb xchg jnp xor push xchg loopne push adc push inc cmp inc popf add stos adc mov test pop jecxz sbb and scas or sbb dec dec jne push add inc mov mov lahf mov lea push sub jl dec mov cmp jne scas push stos sbb stc push movsb add jg inc inc lods mov sbb lcall adc loope inc sbb jne push push add sbbl push add lret scas dec outsl movsb push sbb mov or ljmp lods pop add add bound adc rcrl pop imul jno stc pop push adc mov xor push adc inc cmp ja mov push and fs lcall add sbb jl,pt push aam and in mov movb cmp (bad) loopne adc aas push push sub cmp pop insb pop sbb inc or push mov mov cltd idiv sub in movsb jle mov xorb and (bad) adc lret ret sub scas add push or pusha jecxz icebp jle mov mov roll bound sti int inc add and mov or add inc or or call in mov test sub sub push lock add mov jo pop (bad) pushf dec in xor (bad) pop leave lcall mov in lret adc jmp pushw add fcmovnb xor mov insl mov sub (bad) fist dec xchg into into fmull insl jnp fisttpll loope pop fnstcw xchg in roll clc pushf ret sub push xchg test inc (bad) push pop lret xor lods fs adc sbb leave cmp dec sbb push inc stos mov hlt fisubr or push mov jle fdiv and sub jg mov or (bad) and outsl ficompl jle clc hlt inc decl jne jmp pop std fisttp icebp aas mov (bad) fsubs cmpb mov je pop jo mov jge lea xor cmp jle lret xchg stc lea cld test ljmp adc into add push adc gs xor shll lahf mov mov cmp or adc adc wrmsr rcrb sub sbb idivb or push lret mov push push sub rol xor jp dec inc inc cmp jl jmp push mov rclb sbb cmp lock iret in les xchg push test std imul sbb cmp jp push sbb mov cmp mov and inc inc cmp pop push add hlt mov mov push cmp pop push pusha popa mov pop pop jg sbb jb insb cwtl addl cmpl push push test or cmpsb lret push lods daa sbb lock add lea adc rorb adc dec pop push jo test data16 xor xchg add ja (bad) adc mov hlt cmp loope inc xchg je fdivl cmp rolb jbe mov sar jbe lods jge xlat pop mov rorb fwait jbe int dec sub sbb rolb inc add repnz shll and mov movups sbb mov or mov adc addl adc and or xlat push xor clc jg pop js clc comiss jbe lea sub mov sbb ret cld fcmovnbe pop push or inc mov sbb inc add mov fadds lahf insl movsb ret dec imul (bad) jge js push stc jp (bad) push jae adc rorl jge inc inc push add (bad) ret roll and (bad) xor stos mov roll hlt (bad) push clc lea cmp push xor add fistp fdivrl (bad) mov jne mov pop jl es icebp push (bad) fldl outsl push stc push pop add push cltd xchg sbbl add mov adc das pusha (bad) mov ret and repz mov orl in fistl sbb xchg inc inc jo shlb push fs int leave mov fimul dec popl add fcomip jb inc jb cli mov lock pop adc lock les push rclb lods jns mov dec nop sbb lea dec adc inc jb fiaddl cltd or pushf push cmpsb jecxz jmp pop jne ja (bad) (bad) adc pop jnp and fcmovnu mov pop lock jmp pushl sbb aaa sbb push or inc or and xor xchg and adc sub jb xchg fs arpl xorl sub leave or xchg add and dec dec sub inc repnz mov (bad) jge,pt aas push jo xchg mov sahf and mov repnz sub inc sub shlb sub inc cmp or ja lcall dec push cld push mov cmp je xor jno cli add lods push jne push mov mov jbe jg outsl and push test jle add cmp cmp jne mov pop mov roll aas pop xchg fistp inc (bad) xchg pushf dec sti inc daa sbb pop push push or jp cmp loopne in nop inc xor mov and rorb rorl rorb mov or pop push push or jmp fs les cmp rcrl xor mov lea lcall or icebp imul or and sbb xor mov adc pop mov lds divl inc and iret enter pop imul jle mov jg inc push clc add test hlt dec push dec or adc push or mov dec mov jmp push orl sub bound sbb sbb imul xor pop gs mov addl lret (bad) mov ret add and jl sub fisttp or jbe mov push (bad) cli xchg add cmc adcl or (bad) je mov test sti or and (bad) inc arpl add pop xchg loopne cmpl je sub jmp and daa or imul cmc mov xorps in shll and or pop inc cmp add shrb inc pop dec call sbb mov lret addl (bad) cmpsb sbb push jecxz pushf mov and int3 aas sub movsb test mov mov jmp ficoml mov xchg sub and and push mov sub cmp es dec call add inc mov adc mov test pop mov inc adc xchg cs add gs divb insb or sbb aam adc mov mov pop dec push adc ds cmp negl jl mov scas and add sub pusha adc pop adc mov fwait xchg adc ljmp xor push mov ja push loopne mov aaa adcb push and pop loopne pop dec xchg dec xor add cmpb popa loopne dec sbb addl inc repz test adc fisub sub sub sbb sbb add push add pop inc xchg pop jne push adc fwait add or pop adcl and cmp add and push clc adc into dec push lea mov lock ret push sub div xchg inc add and daa mov inc and xchg js je jo repnz es jl scas mov test loop js jo das add add jmp xorb pushf jg je add cmp jne lcall jmp and jne jl mov imul popf cmp jbe mov pushw out xor jne xor mov push and push push pop cmc clc movsb xchg imul push cmp out mov mov dec in jbe cmp rcrl clc (bad) jne dec or dec imul pop imul xor je and movd xor dec daa test mov iret or rcr jo aad add mov xchg xchg loope pop add dec cmp jl mov cmp or rorb scas dec inc add xor cmovo loope sub pop jge lahf sbb xlat lret jbe jl fisttp inc subl jns mov jns idivb dec mov aas push fadds pop into mov cli jmp nop fbstp xchg stos (bad) inc pusha mov nop xchg pop sarb inc push ret adc les ret cwtl dec test push mov out ret and jl and pop test jl inc cmp add rolb and mov jge aam jo cmp mov inc lock dec lret mov adc xlat add adc add mov sub or rolb je movsb inc or inc in dec ds loopne lock out add jecxz,pn push mov push lea pop cmp add lock lret inc push xor xor sbb fild movsb mov xchg xor mov pusha jp and push push sbb add mov cld or and inc push bound fstl adc dec adc sub sti stos movsb lock cli dec incl xchg mov rcll pusha das inc loope shrb push call inc adc movsb loopne (bad) in or mov daa dec and xor cmpsb imul xor push mov adc sub iret mov xor mov movl imul add sar and rolb and xchg mov and xor or insb fcmovbe movsb inc sbb adc ds (bad) jae roll (bad) xor rclb test addb push in or cmp and push mov hlt test inc cmp shrb mov icebp sbb xor dec out xor or push pushf cmp push (bad) pusha mov mov push (bad) loope sub xorl push sbbl lahf rcrb lock mov test jne sar adc pop push out lea and les imul movsb (bad) jb mov lods mov out add push and and outsb setl sub ss (bad) mov cmp cmp pop jg cmpsl orl movl pop jge mov inc in mov or inc testl (bad) inc xor outsb push (bad) jle ret mov push or push cmpsb and cmp sub mov hlt push xor and dec xor out xor inc xor dec inc retw sub inc push lcall (bad) fldt jg and and sub sub and jne int mov iret (bad) cmp jb (bad) mov arpl push or (bad) out gs push adc ja and cmpsb arpl adc or in adc xor outsb adc das andb test fldcw or sbb mov ret dec xor add loop out or movb loop mov (bad) movl mov add and js xor lret lea nop rolb xchg data16 clc or or (bad) push jg push cmpl cmove setne dec and pop stos mov push mov dec add pop movsl mov adc mov sbb cmp pop jl add push adc sub ret pop push iret cmpl lea cld jg push cmp jne cmp jne push test pmaddwd cmp jne test add insb je clc in adc pushf std pop pop ret xchg push pop mov push jno and js xchg inc adc (bad) je mov pop lea stos push or rcll inc or cmpsl pop sar xor inc mov pop sub pop jns (bad) sti fisubl add add movl movsl or cmove and adc mov push icebp lods pushf add mov fldenv je adc popa jno sbb call pop push cmc mov adc in cmp shrl mov and sar cmp pop mov arpl ljmp adc push cld or push cs push out sbb add data16 push add outsb mov fsubs jl lea inc or and je adc inc inc in dec sub inc jecxz add shl inc xor (bad) mov addl imul outsb (bad) incb push (bad) mov jbe mov shr push sub cmp pusha cmpl jae xor or rclb dec pop push insl mov (bad) and or sbb inc out shrl fcoml sub cmp cmp je and mov cs or fistp jae mov sub inc sti loope xchg sbb mov sub aaa hlt sub je rep sub jo enter inc cwtl pusha je push inc pop je dec or dec jg lock jg jne test movsl inc (bad) sbb les lds push pop add add fwait addl shr fnstenv rorl push jg or cmp insl daa loopne xchg out rolb pop inc (bad) call xor movups push push mov jle push adc mov clc cwtl add sbb pop pop adc call test repnz test push rcr fwait daa push or or movb ja inc les or loope outsl pop adc or ja xlat and add push mov add add fcomps stos xchg and repz in pop aam push jno dec xlat push loopne dec ret add hlt cmp pop sbb les imul js adc icebp or pop jmp nop subl movsb dec std adc loopne sahf adc lea and push inc fbld push les and mov loopne mov push sbb push call or cmc (bad) sbb pop sbb outsb or adc jge inc jne jg push xor sbb scas adc (bad) sbb in rolb add lahf mov jg xchg stos xchg test in push inc add mov push icebp (bad) dec inc insl fxch add dec sbb adc lock stc lahf add ljmp subl adc lds push sahf mov add aaa mov pop pop jo xorl sub mov inc xchg aad jne sbb mov pop test ljmp inc stos mov lret push sbb add add add push mov and or xor movsl (bad) add adc adc rcrl dec adc push mov sub adc adc add rclb je sub push adc or sbb xchg mov mov andl addl push rorl or push mov cld cmc aam mov lea dec pop hlt pushf or lods or and sub and das addb inc dec sub (bad) push sbb jmp add clc andl xor and ret clc or inc push jge sbb push and add mov or shll sbb scas (bad) daa xchg orl push fisttpll dec stos mov adc sbb mov or ss sub push daa xor inc sub test pushl sub test aam inc mov sbb jge xor push bound mov mov (bad) aaa pushf inc add mov mov pop add add pop sub pop pushf mov add mov dec iret pop sbb push push push mov add ss xchg xor into dec mov pop sub adc push sbb outsl shrl push xor add xchg push adc inc cwtl es jne push icebp test or push mov dec outsb inc or inc rorl out pop add pop pop std push leave add or insl cmp aaa faddl inc push popf mov push mov test inc add lods fdivrs add pop mov dec and inc xor cmp and adc push mov enter push movsl inc fist sub in mov hlt (bad) mov nop cmc lods js dec clc and (bad) jg movsbl xor sub sar jmp pop add sahf xchg (bad) cmp (bad) jbe sbb ret add mov (bad) ja loopne sub jo sub jl push call adc aas mov rolb mov shl add or ljmp rclb add sti dec adc lock mov imul movsl xor dec or jl inc adc divps neg xor sbb (bad) cld ds inc xchg sub inc cld int3 add es inc popf add or sbb insb pusha nop pop jge sbb aam jae pushl pushf fsubp add jmp jmp push push data16 sbb jmp adc xchg (bad) xor mov mov clc and icebp xor inc lock inc or dec pusha push dec push push xchg and adc cmc fildl or fidivrl inc sub and mov mov xchg gs imul add pushf xchg outsb dec sub or cmpsb mov pop adc jne rol mov sti lds lcall cmp jb (bad) ja cltd testb outsl js mov (bad) mov jmp cltd es iret pop cmp int pop dec mov stos ficompl mov add inc push pop push and mov icebp daa jno vmaxps leave sbb xor test imul shrl adcb fbld pop sbb (bad) repz inc sub xor iret mov or adc sub loopne sub dec mov sub mov lret adc notb mov push add test sub or shrb dec add jb xchg adc inc inc movw das push jb add aas sub mov js icebp add imul movsl mov push sbb mov test adc loopne cmp dec lea sbb dec mov mov xchg sub sub xchg push push add inc pushf push addl or xor or pop or add fld1 test insb mov arpl sbb pop or cmpl sahf dec xor cli rolb push mov (bad) sub dec sbb add push mov sub mov or push sub push push xor aas inc jle cmp arpl test push push pop and ret inc lret pop or push and inc dec jnp pop xor and push scas fsqrt sarl mov or into and bound xor decb sbb dec cmp pop jge xor (bad) dec adc or xor lret inc and lock xchg outsb jg jbe or clc mov cmp nop jmp push jbe push adc xchg lock test cmp cmp (bad) pop cmpsb bound add mov (bad) dec cmp mov sbb stc lret cld sbb xchg (bad) push add add jo cmp adc add push or push cmp add stc xor adc pop dec sbb add hlt aad mov or or (bad) jno pop lahf jge mov push in idiv movsb push insl mov or or hlt mov (bad) cld mov lea rclb cltd lods adc jns mov scas out mov cmp sarb mov je in les add (bad) je and push mov test push nop lret movsb xchg add sub push mov jnp outsl mov cs and push add pop sbb stc int pusha sbb lods mov jecxz add lods (bad) push lret adc dec mov das add xchg or rorl add xor in (bad) sbb test or xchg push jl adc jp dec ja (bad) (bad) sbb (bad) xlat mul mov and test mov adc popa push cli mov cmpsb mov test sub hlt rcrl inc adc pop mov in add pop out je mov push sub push pop xlat xchg xor inc inc rolb cmc test gs testb fisttpl out xor lock pushf in aaa test mov and mov daa cmpsl adcb pop push push push idivl sti jae (bad) int inc sub imulb movsl push mov insl dec mov or test push hlt jmp aas loope sti lea mov sahf roll jb mov out and mov js push in jmp mov dec cmp push xchg sub xor add jmp and pop and dec mov in pusha mov fsts inc sub inc add fiadd push movsl loop out loopne pop push aas cmp pop mov (bad) out (bad) stc rorl cmp fnstsw pusha lods enter and pop fcomps imull mov mov pop popf rol enter insb out jae clc arpl popf adc pushf mov test test mov shrb stos pusha mov jle cli push pop xor lea sar push pmaxub jge add push push sarb xor mov std xor xchg xlat sub aam fidivl mov inc ss cmp jns dec add add jae arpl test lret cmp fxch mov fwait negb push fldpi dec cmp jle fwait jmp xchg fsubl loope in (bad) cltd pusha xchg jb pop sar sub mov aaa or clc inc and sbb int3 adc sub cmp xchg cld aaa inc lock mov mov inc pop test xorl inc loope mov cmpsl testl inc fwait inc xchg xchg mov add mov adc xor pop or dec ret (bad) loope sub adc and mov jge ja pop jns imul push push push xchg mov rorl (bad) std into jle xor cli add mov xor popf lahf loopne jg sbb add or cmp jne push push je lock cli jne mov sar daa sub sbb lcall sub nop add sub sub mov arpl (bad) lods lea pop into aaa inc ja andl jae add outsl xchg add mov addl sub pop daa daa daa mov fcomp loopne and add sti iret je in fild push adc mov mov mov sbb inc dec cmp fxch pop call push and jno int3 jb loopne add sarb out sbb sbb aaa lock mov leave insl fs imul leave leave loopne call xchg jg test mov mov loope gs call pop cld mov cmp sbbl shlb mov fs (bad) xor lds dec push cmp pop or lea enter rclb push shr pusha dec push pop jne or jns cmc inc push inc jo lds and arpl or lea or jb pop lock cwtl pop ja pop add mov cmp lock cwtl sahf and rclb test inc sub or sarl xor test add or aas imul cmp popa jp or xor shlb jp pop je xor pop add fisttp mov cmpsl xor lret loop jl mov mov rorl pop inc stos insb add popa dec (bad) aad dec or pop jg fwait ss adc xor push jmp pop adc push (bad) or and mov jl lock jl stos divb mov sbb jno pop jle clc push push rcrl push fmull push xor into mov xbegin pusha jo enter icebp xchg jle add mov cwtl pop enter imul push xchg pop mov (bad) mov dec and fcmove mov popa push mov inc insl cmp sbb outsl sub jnp cltd sub xlat imul xor sbb sub scas push pop (bad) fildll decb sbb mov stos ds pop dec jecxz test push imul in (bad) clc xchg sbb push ret push sbb xor add mov mov inc test mov mov adc shll mov clc or dec dec and scas and adc mov jns sub adcb add mov jg ret adc and enter push push or and ffreep or mov dec jns add cmp or inc movsb (bad) cli mov inc inc scas pop test aam rorb sarl call dec mov cmpl push push mov lea push sbbl outsl lods js or xchg jnp call push lret loop pop cmpb mov loope rolb dec pop loope xchg inc outsl in lcall sbb push ljmp fsub call shlb es adc mov mov or mov mov add stos popl pop xchg call fcom cmp rol mov cmp icebp push push sbb add repz sbb sbb dec pop in sbb jmp hlt add push in mov xchg arpl icebp and xchg pop and push movsl test in lret xor sbb mov mov dec adc aam das das sub xchg outsb mov insl jo and sub loopne xor xor push add mov lea inc mov dec xchg aaa xor mov fsubrl in ds jp cltd xor je cmp pop je iret mov loopne test cmp push clc rcr je jg sub loop outsb fnstenv and xchg xorl inc xor lock sbb jle loope xchg push xchg pop cli ret dec push dec jne in xchg xorb int and test or pop pop push aam adc int3 and pop push nop push sti inc leave insb jp inc cmp add jnp pop pop ret cmp pop popa in or jge (bad) je xor and sub test pop cmp cmp pop xchg fst inc jecxz xchg add or cwtl test fucom sbb cmp add inc enter fnop push mov mov mov or and or ror add jecxz cld stc insb and dec jl nop xchg icebp jl sub nop mov and stos pop les and popa aas pop or sbb push xchg mov mov or xchg add push xor ret mov inc outsl cmc sbb adc imul push or test push push jno sbb pop inc fisttpl push sarl sub fwait or incl dec out jnp sub ret sub add inc push test (bad) and test or dec or add xchg mov je loope push decb or mov jmp mov or js adc cmc cmp rcl pop or or cmp ja jne push icebp inc xchg ljmp mov xchg pop jl adc jg pushf mov mov insb fldenv xchg sub add mov xchg dec mov loop loop sub or push push insl add stos int3 shrb dec into mov negb sub mov pop sub int3 mov add lock ret rol pop add jo push push lret pop dec mov cs push clc stos pop hlt jno sub or add hlt (bad) jo or es inc (bad) rolb sub push sbb push jo js sub movb (bad) mov test mov xchg movsb add cmc cmp pop push add pusha adc push dec or jo inc dec xchg and cmp and sub and loopne inc add sar dec bnd sub mov shll daa push add push cwtl lea dec aam movsb sbb fisttpl xor dec jne and sub cld xchg inc or shrl ljmp sub mov pop mov test jns ret dec mov dec or adc push call adc mov or and ret pop stos add mov and pop ret push inc and fstl test sbbl jb xchg stc mov je mov jmp adc and mov cmp aam pop std push push leave dec mov push or sbb loope pusha cmp and mov inc xchg mov and aad pop mov jb mov cmp fld pop mov inc mov flds adc adc jge adc adc jecxz mov jecxz mov jecxz aam adc mov xor add sub xchg mov xchg imull rclb cli dec cli or xchg sub arpl and das mov dec add lret shll adc ja (bad) mov cmp cwtl add mov push jecxz ss or and push xor cmp xor dec mov dec ds mov cmp aad inc lods pop lcall inc out xor push pop pop call xchg xor dec aam lcall ja sbb push je (bad) in push or add test jg lret mov test jns fstpt js cmp cmovg fisub loope lods and rcl push push jns add in dec adc rclb add lcall fwait inc subl dec inc push ret dec jl inc int3 mov dec adc mov sub dec ror adc inc jg (bad) add js add sbb aas imul inc int3 (bad) jmp xchg subl insb xor cmpsl inc cmpsl push inc aas orl movsl adc and ds jb jb sub adc mov lea mov sbb or push push jmp or mov jle dec movl inc sbb add adc adc addl inc inc subl cs bound or (bad) test sar rclb sbb cld sub sub call jns cmp jae cmp stos mov jl mov jne push jecxz cltd divl ret pop inc add out add jae jp add loop insl mov subb jp or and pop loope (bad) sbb dec mov push pop fdiv lods jge call je jg mov jo andl add out inc call or clc sub das inc in xchg push in ss jp push push sbb cs (bad) call lret movb pusha xor pop xor jo pusha xor or dec push or adc mov mov push or lret daa mov jb adc adc lret or cmp adcl inc or adc or or jle add cmp dec cmp (bad) jbe pop or popa jl inc fisubrl xor and adcb ljmp lahf mov aas adc dec lea pop xchg sbb mov lea cmc call out stos mov jae inc and jae and inc sbb push xchg jp push push gs femms add xor add pop daa adc aam and cmp add repnz rorb cs test pop and test sahf fcmovnb push pop je imul and jp test push ss sub or add xchg jne push cmpsl lea test cmpsl cmp cli and orl icebp add push push daa inc pop mov (bad) inc je adc add xor (bad) and mov ds jne jp aam mov outsb sub sar jmp add cmp or inc sbb loopne int sub adc enter push push dec jo jle adc ja mov pop imul fild xchg mov cmpsl inc ja nop je adc fdivp je or je lcall or lret adc sbb data16 shlb adc stos sub xchg pop mov ss nop mov cmp fmuls popf xor (bad) mov arpl fs push xor popa xchg mov clc or lds push adc adc mov daa xchg test sub ret nop jne mov xor in mov sub add push push test cmp xchg addr16 stos cwtl lret jbe sbb loope mov test pop nop cmp cmpl or popf movsl xchg mov sub sub mov test jb xor or sub add mov push loope xchg aaa aaa pop mov loope push sub stos xchg dec and mov mov ret or inc dec sbb add jnp rolb pop and fsts jbe or shr js sti clc stc sub stos outsb fcoms push (bad) stc nop sbb inc push push jmp cmp jl push push (bad) xor ss movsb (bad) cld in loope pop test or add mov xchg nop inc push and push in push ret mov sbb push jmp orl mov mov mov lods adc mov lds mov enter push cmc xor lret xor data16 rclb cwtl (bad) repz mov push test inc cltd pop clc nop lods xchg mov lock push adc jne sbb call xchg add (bad) jne push push fmull in add sub add sbb jmp fucomp jle stos mov mov or fstpl push or jno adc push pop jp stc mov dec insl movsb push xor addps dec and insl add (bad) aas adc sub push insl movl cmp nop adc inc mov fadd and nop sbb out push lcall adc insl sbb scas inc mov aad inc dec push jno sub movl scas add add cmpl jl fdivrl add test jne lea pop xor lcall sub bound inc stos xchg test sub xor scas dec sub cwtl inc test inc out pop data16 adc lahf sbb inc xchg cmp mov jns insb loop pushf lahf pusha fdivs push inc inc sbb push enter ss inc push mov ss mov pop mov lds into sbb cmpsl inc push (bad) or or imul add rorl cmp add mov rolb sbbb add movl jecxz iret movl pop pop (bad) dec sbb int3 movsb daa in call sti mov inc or aad push lcall xor inc sub stos mov incl cmp mov xor (bad) push pop and rolb cmp sbb pop mov sbb jbe jl cmp pop or ss stos loope,pn (bad) (bad) std or push int3 add or sub imul xchg add inc cmc nop add xchg push into icebp push stos push lea in xorps mov lock inc push add or bound lods mov pop sub sahf in jne sbb cmpl pop cmp jno or iret lds add xchg sub pushf xor bound movsb add or xor ja insl adc cli aaa rclb es cmp nop mov jmp xchg imulb inc stos adc nop push pusha or dec pop mov pop mov push in lea or ret dec data16 lds pop int3 add inc cmp (bad) push fs add pop lods xor push call push sbb cmc adc sbb inc sub and and ret testl dec and pop dec and jmp clc mov push push jle sahf xor cli add lahf mov inc int3 add cmp adc stos push iret mov adc hlt add xchg shll std test iret mov out mov add or lahf orb adc cmpsl dec test into or cmp inc inc ret sbb or test roll mov movsb jl ja ret or inc sbb sub test je xchg data16 sbb xorb ljmp push inc sbb jo pop repz (bad) sub xor push adc pop or mov and and aas jg jle or dec pop mov adc mov cwtl inc jne and (bad) xor mov or inc pop (bad) fimull sub pop jge fnstsw and or mov mov or ds ret add xor jne push mov adc lcall mov sub xchg or adc sahf bound movl push cmp add or mov cwtl aam pop daa adc cmp push sbb dec cwtl push mov inc jnp and add add mov (bad) jno pop add pop or fcoml jns push fistpll xchg fistp lahf push and int3 sub dec lods dec dec aaa adc jmp sti push or fsts pop pop imul fnstcw xor hlt cmpsb xor xor popa jge sub xor in pop jl ja leave rorb fmul dec loope sub sub adc addr16 push mov xchg pop inc or pop inc (bad) adc mov jbe imulb loopne jge jb or add fbld xchg cmp fldl mov push inc push pop push add mov xchg jmp sahf or je aas aam (bad) mov mov sub mov jbe lock push add lahf push (bad) adc std pop jnp dec dec mov outsl iret adcb mov xor dec push xadd adc inc sbb nop xchg call cli movsb test out mov push fisttpl pop adc test inc mov jb pop inc mov rorl lcall mov xor les xchg dec data16 js dec xchg jo movl xor sub in jg arpl mov loope ljmp or lea add sub add mov mov mov cmp pop test jns movb lea in (bad) call sbb add inc xor stos jmp jmp mov and or add ss inc mov sahf push inc rcrb lea fcoml cmp ja fcomp je inc aaa je lock pusha jo pusha loopne adc adc adc outsl xchg rclb mov cmp jne adcl pusha imul add mov idivb cs add divl mov jl pop pop ja or fmull adc mov aam sbb push cmp dec pop addb mov mov call jmp add sub push mov mov and or inc push mov (bad) movsl sub ljmp aad lea bound lea or pop push add test nop rcrb push push lods mov inc push add fwait cs mov pop jle xor sub or loope (bad) adc cld pop lock loopne cmp je fnsave pop cld bound push leave inc dec sbb jg leave ucomisd lahf test jp push roll cmc fsubp push adc mov add decl cmc stos sbb inc mov pop cmp je cmp jne lea decl push sub cmp ja inc jmp cmpb (bad) mov ja jne push cs (bad) sbb push adc add test aaa jg lret push mov dec jbe mov add jle push adc jle je add push add add dec adc jo dec fcomip aam add je and cmp enter hlt stos (bad) jae hlt repz xchg test sar push push sub sub daa (bad) adc loopne mov adc xor pop adc dec xchg inc enter add into mov mov jne push outsb outsb bound mov and or ret cmp inc mov cmp enter in (bad) push aam add pop mov movsl test out cwtl out in mov mov rclb std shrl cmp jne cmp push and and dec dec jne push add cmp ret ret cltd (bad) jae lods fisttpl xchg pop pushl mov and adc mov xor rolb inc inc mov sahf rcll movsl (bad) push aad rcll popf into cwtl xor xchg rorb ffreep les pop adc push push sub test je xor aas jne,pn in outsb mov movb sub cmp jbe fmull imul fwait push cld push pusha adc jl jle inc cmp insl and test push mov shrl pop mov insl clc pop adc push or push loopne hlt add jecxz in dec push cmp jl or cmpsl subl jmp iret push jg mov outsl mov arpl in pop or push lcall xor scas shrb stc mov jne inc dec push push xor icebp push sub lahf fildll and dec and add cltd (bad) cmp rolb mov sbb mov loope aaa lahf and test bound add (bad) adc (bad) jg icebp scas dec push xor (bad) cmp shlb sarb fistp (bad) mov aam pop add pop roll ret outsl mov aam leave sbb sub lods push or pushaw sbb pop pop pop andl mov jne loopne mov jno mov cld pop sub push cltd int3 push sbb cwtl xor push iret fdivrs jg mov sahf or fwait add arpl jp lock or and adc adc pop rol loop jbe push fcmove add inc add mov sub in mov clc rcl jmp pusha jle nop repnz repz fiadd add mov ja xchg sub jg (bad) cwtl and out jmp es jo dec (bad) mov dec insb mov xchg xor dec imul jne mov jmp dec add pop cmpl pop mov or sbb pop mov ja pop cmp insb jmp (bad) and jae pop shrb xor jne or sbbl mov jg jbe mov cmp je mov and xchg or pop cli cmp subl gs (bad) in jecxz fsubl cld push orb push sub add pushf (bad) and adc or dec mov (bad) jno adc adc xor arpl mov dec bound cli movb mov mov push push xorb or dec push or push adc or or jle jle pop cmp jne movups dec jl je sbb pop shrb sbb mov sub jp and dec rolb push xor mov in xor dec enter fisubrl jb jmp insb lret shl inc sub mov and fs sbb lods (bad) sbb sbb mov fstl sti (bad) add in adc fwait or mov or pop aaa jo dec les push mov jecxz pop ss mov cmp je loop (bad) lahf push mov mov shr jbe mov out and sub and or jnp decl mov inc dec pop jne pushf outsb push lahf push push and add sub push or aas adc inc jecxz rclb push fldenv sbb adc and stos imul push out push inc push push add test cli cmp dec cmp lea mov jo inc ja xor push adc sub xchg xchg pop mov (bad) or push cmpsl (bad) aas or flds dec repnz dec sbb (bad) insl pusha cltd adc enter jo scas mov mov jae mov push icebp cmp ja mov inc jnp add add out sub adc outsl lret inc lea loope or adc subb cltd or lret pop fcmovbe jbe movsl push add push hlt add push dec les xchg lods cmp cld cli ja sar push repnz fsts push push rolb adc adc ds xor push cli stos popa push or decb jl stos iret cs lea mov dec jns inc xor ret push jp sar add add loopne iret mov sbb cld or adc cld dec add dec xor test pop and or and ds inc shrb inc mov mov or (bad) adc fisttpll adc xor mov pop aam ret lea push lea push xor add popa mov lds je xchg in enter dec xchg cmp or int jl movsl data16 sbb jmp iret jae push cld dec shrl push out xchg push cmp mov nop xor mov stc pusha mov sub in or adc sbb xchg or out lods rcll les xor and leave lock jl adc push push mov popa mov pop and adc adc das mov push jo ljmp and or add rorl loopne add adc rclb call push add lods scas cmp aam or out fsubrs cmpl pusha push pop push mov push push cltd pop mov lsl xchg add or cmp jbe mov mov push add lock loope imul push or and dec and int3 dec and xchg or or push push lcall jbe stos mov jg jae lret inc js push push push repz or pop sahf push movl lcall pop aad xchg adc jge mov jge mov adc add cwtl arpl jbe shll shl sub leave dec (bad) jae xchg rol and aas daa test insl mov inc cmp jecxz push mov inc cmp mov jb mov xchg test cli sti sub rorb imul (bad) mov xor sub or inc adc or jmp adc push inc xor aaa sub xor test cmp mov pop bound movsl mov test lods sub dec mov xor inc xchg iret push fist pusha test adc clc and dec jge and rcl and add sub psrlw pop mov add pop xor mov and mov lcall adc xchg push xchg shlb or fcmovnbe inc outsb movsl push aam movsb stos inc mov movsl test lods inc mov js mov (bad) test sub js pop jle and push cmp nop aam cmpsl data16 mov dec adc aad inc push push js fwait dec pop add mov add fmul jnp movsb loopne es cmp mov adc or por jb pusha insb adc addb push into push movsb push jmp sub ret or pop add nop add mov lcall xor cli sub or sbb cmpl pop inc dec dec scas test ret jge out lea enter and in inc inc add cwtl or mov dec sbb mov test arpl sbb test jb sbb sti mov or sbb jmp test or sti xor call xchg or aaa int3 pop xchg add rcl les mov fsubl (bad) jne push arpl movl add rorl push sbb jl pushf mov lret lds scas roll arpl and lret mov inc or pushf xchg (bad) rorb xchg roll insb add icebp push lcall fs clc pop jg movsb or adc inc fist outsl lea jp iret mov xchg xchg (bad) push mov add or stc push stos cld adc insb lea test pop frstor add xor (bad) cmp cmp lret daa push xchg jo push inc mov cmp add popf add cs inc adc dec jne imul adc scas inc dec sahf nop lret push clc lock jne xor xor daa jg xor xchg fwait mov jne into jno xchg push mov (bad) mov (bad) cmp xor push sbb and inc xchg (bad) dec jge jbe mov (bad) mov add roll sarl mov jmp mov outsl or (bad) testb or lcall xchg ja cmp or (bad) xchg loop popa dec and and cmp addb scas outsl scas (bad) or aas or insb pop adc xchg add push mov test addb lcall dec test mov ret dec mov or add (bad) adc mov inc nop add xchg mov mov add mov inc mov rolb lods (bad) (bad) daa rolb pop xor or nop sub adc mov mov mov inc xchg and imulb inc jne fdivs adc (bad) sbb xor and cmp daa dec inc and push js ds dec push push aad cltd jg lea lret (bad) mov xor mov mov incb adc and mov adc sub mov add nop je,pt adc cmp jne xchg (bad) adc cmp fimul mov jb pushf add addl pop mov ret add jae scas mov mov cmp jne nop xchg inc add dec sarb push and inc pop cmp push test test sub (bad) xor mov push pop mov push inc cmpsl jns push lret adc dec and push or sbb or add or sbb fldl and and push fwait pop mov xchg (bad) or xchg push fbstp add aas mov jp jnp je sbb ss push xor and ret mov add and inc inc aas mov and adc inc cmp dec (bad) sbb add sub cltd push sub aas pop pop or and pop inc adc cli mov inc clc dec shlb rolb jo pop jbe (bad) pushf cli movb jmp cmp jae push and cmp je cmp mov mov je or push cmp inc push leave stos test mov testb repnz mov enter dec xchg add mov stos lods mov add xor add pop decl cs nop hlt ss adc dec bound cmp mov dec push mov xchg lea cmp loope fdivrl es ljmp mov or incl js sub dec or push movsb inc dec scas es aad cmpsl push mov movsl add add and mov data16 push inc mov mov movb pop fistl stos frndint push dec pop mov lea ret and cmp iret and jae jne xchg xchg cmp inc push add xor and in in (bad) jb cmp jne jmp or sub jns adc movsl test add and cmpb inc cmp push xor nop sbb repz dec pop cld fldl stos pop insb sbb pop adc test mov pop or mov jmp inc xchg cmp add shll sbb mov mov fsub or sbb and add inc int3 dec sub insl cmc es out in jle loope nop mov cli aaa test clc mov mov stc and test gs aaa mov cmp jle inc adc dec jecxz inc and mov pop sub jne push ljmp jne pop inc jb ljmp (bad) push pop mov adc cld add ret test and mov fidiv pop cmpb jne or sti in lods jb lea data16 adc outsb jne inc or enter mov jle cmp out cmpsb xor popa jne mov jne push inc and mov cmp outsl dec cs sub jl int3 dec add mov inc sub andl sub mov inc je add push mov ljmp insb icebp cmpsb adc mov jbe loopne cmp mov adc inc push inc jmp dec rcrl push mov ret jns dec shlb sbb sub sub add ror jne pusha or add mov flds and jl sti pop sti push cmp or jp fildl ja pop cmpsb rcr idivb jbe add pop adc xor add jnp adc out icebp (bad) testl mov std (bad) orb aas and or aas push loopne add xchg pop jmp cmp out pop and ds iret push int3 ret cmp sub cs out loope mov xorb push mov test mov je or pop jne jmp or adc cmp je push mov sarl mov stos cmpsl cmc jecxz or or je add mov adc aad sub add fisubr lods cmp add dec imul dec pop mov sub jl ja je push repz push mov jg and mov push lea jmp enter nop inc call push sbb fwait clc addl mov push pop mov test mov xchg push loopne sub adcl test ficomp jne mov (bad) or mov dec shl testl xchg fistpll xchg or or je jl push sbb ret push mov mov sbb js adc add adc dec or ret or or icebp dec sbb pop and push add add mov testb je sub xchg dec xchg mov pop sub mov stos cltd sete popa imul mov (bad) fist push mov or dec or enter fs imul sub dec and add popf push lea jge pop mov jnp cmc jne or jge sub cmp push fidivl add and jp add inc sub add xchg in add fadd pop mov shl mov (bad) das inc fnsave (bad) push cmp mov or aas andl inc mov stos jle inc cmp xchg mov jge or sbb (bad) push sti adc loope sub push out push jecxz dec add out push in inc and into xor es test outsl mov sbb or loop rorl imulb inc loopne lods movl movl fistpll inc add mov jle mov lahf mov in pop dec xchg sbb je cmp jae jno jo bound cmp pop and jmp inc mov add and cmp mov pop mov inc cmp xchg jb pop jo cld movl cmp mov xchg popa push jp ss outsb lock jbe adc in imul inc call je ret pop pop hlt loope daa jne icebp lret mov jg mov sbb pop inc or and lret cli daa or js js (bad) aaa fcos inc enter cmp mov xor sub rcrb inc add (bad) xchg addb sub jnp orl add aas (bad) fcomps ljmp push (bad) fldcw (bad) test push push (bad) mov adc test sub dec js cmp adc mov dec scas flds rolb inc or mov imul mov flds xor test pusha je or or divb addr16 push dec stos movl jnp and mov in pop xchg inc and xor bound add clc jecxz sbb xor mov pusha adcl stos subl leave jg add sbb push adc ret sbb or or rorb xchg xchg and and xchg jne cmpb jne or popf je les les sahf sbb push lahf cli add sbb jp jne mov cmp sar cltd inc popf dec pusha dec pop add push test xchg cwtl pop cmp jne or je jmp add cli test mov hlt aas cmp cmp je cmpl mov xor add popf sbb add push fnstsw xor mov jmp cli add cmpb pop or (bad) add or inc lret sub insb fmuls decb mov add add or push sub xor adc mov cmp mov xchg dec push mov mov pop push lock jne sti mov fadds fimul int loop add (bad) add pushf add cmpsl xor add cmp enter mov rorl mov mov fsubrs fbstp hlt cmp mov aam cs call fisttp pop leave test pop mov dec add pop ss or sub popf cli dec je cmc push ja sub cmp (bad) aad inc inc cmp pop and popf fstl aam add pop das jmp push nop sbb mov push jle mov and xchg sbb jno mov incl sbbb and movl (bad) xlat int3 add adc sub pop cltd dec (bad) in es popa cmp ret mov mov push and lcall add sub daa and mov testb mov jl or shll adc jnp je das jne jne and addr16 inc mov sbb mov mov mov jecxz js cltd inc or push mov jo sarb clc mov sbb lahf xchg (bad) xchg fninit dec jb orb sbb cmpsl mov jae jae stos (bad) cmp inc mov imul push out pop dec je jmp jp mov push mov movl push jmp loope push mov pop loope push enter fistpll or inc jp inc add fdiv aas lea fdivl out je sub pusha dec cwtl dec sub dec and sbb dec mov jbe,pn cmpsb int3 sub ficoml ffree mov jle and xchg mov add cmp dec or aad in jmp lods mov iret and push add adc xchg int3 daa sarb lea jo or inc test push cmp push pop mov pop pop lods and test ja xchg aam inc mov mov mov (bad) call addl ret sbb pop dec xorb push incb jne pop inc sbb rcrl (bad) movsb adc fwait add inc dec jne add fdivrl scas push lret pop into push test cli jns subb es test movsl fisttp lcall js or push xor lea bound sbb cmp adc adc cmp cmp cmpsb les lods or mov pop loop out test or loope pop sbb inc xchg lods mov pop lods mov push jle sbb je sbb fisubl inc (bad) adc sbb inc sahf scas add xchg int push das rol xor or mov mov push and jne dec je adc pop mov sbb sub rcr ss adc ds xor (bad) inc popa aas pop insl adc add nop mov add add scas sbb xor pop pop (bad) push out dec jb movsb (bad) je mov add sub dec cld xchg xchg ljmp push add daa jmp add push add dec fs sub cmpsl lea pop dec ja push dec mov mov les add out shll inc sbbl add lods mov loope leave cmp lea pop adc and (bad) or pop daa inc (bad) jl inc sub loopne mov mov mov imul je pushf test inc push (bad) lcall outsb icebp call pushf adc xchg jge aad pop push test addr16 dec cmc xor mov inc cs lret mov sbb mov aam adc ss fstp mov sub aam movsb fdivrs push mov cwtl dec or add xchg add js mov add pop mov xor shr out add add push push push insb sahf es or or mov jg mov mov add jmp adc sub or push js lcall dec nop jno (bad) fisttpll inc fndisi(8087 test pop push test es in and and arpl xor js add cmp test mov add sbb push and roll clc sub add push repnz and call push es je mov inc xor cltd nop mov bound add adc adc or adc ss jns add jne stos iret push sub pop push push xor sub push dec loop je xor pusha jp aam inc and mov (bad) enter adc inc push mov out add push cmp push jle cmp arpl cmp or nop sahf cmp xchg iret addr16 out cltd out mov adc or (bad) je dec jno xor das mov xor push mov ds faddl ret test in push mov loop adc repz aam and or pushf jl rcrb inc imul neg sbb push insb (bad) out jo movsl movsb add push jg cwtl or mov jge inc push in and (bad) xor ret test or pop add dec add adc cmp imul cmpb je dec andb mov les bound scas sub xchg dec mov movsb mov comiss or insb aad call and pop push stc cmp and push add adc xchg test test adc push insb inc out aam inc movsb adc inc pop pop mov pusha aad in push dec fistpll hlt (bad) in sub fsubl (bad) sub push push adc xchg xchg mov adcb add dec sub cmp cltd ret ret mov subb push ss adc jl sahf adc sub push mov and mov subl push in cmp insl adc jmp pop or gs mov jns add pop mov (bad) sbb les inc sti cmpb je scas cmp pusha lods sti mov imul mov lahf test cmp daa and gs fdecstp ror xlat lret mov out inc in jb (bad) or mov mov push lea mov push add add cmpsl pop (bad) push dec mov inc gs jo xor ljmp call xchg or adc mov mov push insl push pop add jae fdivr inc loope,pn add adc aad mov push imul sbb enter (bad) sbb jne or cltd mov (bad) test cmp mov js or mov movl test test xchg or add loope mov or cmp add add mov aas inc inc jne mov xor push in (bad) rcll loopne popa inc es sub cltd cmpl push cmpb aad in pushf mov mov dec mov inc jmp scas xlat push xor inc test cmp popf cs jg push mov pop and mov inc fidivl sbb inc stc mov test mov (bad) jo popa or xor mov arpl clc mov mov and push xor cmp and dec ja imul push test add inc cmpsl add mov mov iret or xor add push pop adc and dec adc push xchg and xor xor or mov shrl xchg or (bad) sub adc (bad) xor dec testl mov test add adcl pop sub icebp add sbb sbb sub lds fs pop rcr push pop inc aam cmp ret shr test rorb jmp sub das or enter outsb call enter loope mov jge xor sti les bound mov aad test popf repz fs mov mov stos inc push and sbb mov add pop cli es sbbb (bad) push inc push push xchg aam mov xchg adc adc push mov or jmp and or (bad) shr insl push sbb jg xchg push adc sbb popa cmp mov lods test jmp and add xchg cli add push push in rolb adc and adc sub add in push inc or movsb add add add add or xor orl mov sub jne or gs add xchg pop and sbb pop sub in aaa sahf in xchg xchg or adc orb icebp dec push adc cmp add push xchg clc add dec add or xchg bound add and xor mov les xor dec sub mov movsb add stos cs sub popf pusha fs jl jo mov popa lock mov jg push lcall cmp push pop mov test (bad) mov test cmpsb mov stc ja gs sub dec mov and adc or imul jb int sub rorb daa add je ljmp inc addr16 jge pop fldenv dec mov pop mov sub mov aaa lahf push lea sub pop loope and inc leave sbb int3 aad aad push in aam xchg or enter sub push sarl inc mov roll and mov pop add mov clc or hlt jle pop aaa inc pop (bad) rolb or dec mov lcall jo test push cmp pusha sub movl push pop ja mov jle cmp cld mov adc push mov movl std jg jge push xor daa es sbb cltd out xchg adc addl and inc xor ret cmp ss adc das inc dec rorb (bad) loope call add call xchg ss sub pop or inc mov or inc xchg mull adc push pop jle mov lcall add pop (bad) mov cmc rorl loopne ja dec xorb dec cli xchg mov add sbb sbb mov inc push mov push sbb loop decl adc (bad) stc mov xlat and stc cmp jl pop or insl or insl push dec dec cmpb xchg orb test (bad) adc xchg add mov (bad) cld fadd test and iret cmp or out and insb (bad) mov rclb jno jg sbb adcl ja aam mov adc sahf mov imul mov and jmp cmpsb insl sub or nop fdivrl daa aad outsb and ret jns xchg je push mov add loope rcrb pop popf loopne adc xchg sbb dec xchg add xor jno sbb push push mov jne lock cmp clc lods das push xchg or ds add jle inc imul add or xchg sbb adc and (bad) sbb (bad) dec aaa pop repz in int sub xchg jecxz and push inc cld loope adc jp jno add cmp (bad) sti inc inc leave sbb fstps inc cld add cmp add push sbb push and lods loopne sub sbb int3 sarb push std pop movsb outsl in pop fiaddl rcll add push inc or lods dec (bad) mov jne sbb add mov adc aas push inc movsl or ja lds ds xchg mov add inc mov fdivr inc xchg jno jge jo push mov cmpsb lock pop jae adc sbb add add push sti add jmp push in cmpsb push cwtl mov pusha adc sub invd stos pop jp adc mulb push push mov push xor aam push aaa gs xor inc stos push adc jo jl outsb stos xor shlb sarb mov lcall lret mov faddl imul cmp test pop (bad) push lds dec iret mov jmp sub dec mov adc or dec sbb sbb adc dec and mov call popa jae shlb adc xchg sbb xor mov mov push jo ret push fimull decl (bad) (bad) adc sub and cld or xor (bad) pop add gs or adc and mov stos mov pop pop pop sbb pop popa add cmc cmp inc sub cmp outsb jle cmpsb push pusha out mov mov imul xor in lea mov adc fidivr lock (bad) and lea or add mov add push jo aam and or add ret adc mov mov inc fsubrs pop dec shrb movsb bound lea mov roll pop cld push cmp fadd adc test repnz test add sbb nop or jle loopne divl (bad) fistpl adc mov push sbb dec and pop lods shrl orl addb xor mov je dec je loop sbb movsb add call xchg or adc jb mov ss hlt or andl insb ja in mov push (bad) jne and mov les cld or add sbb cmp (bad) and mov push push loopne nop or movsl or mov mov shll jo xor pop sub push mov mov sbb inc sbb test push jo icebp addl cld mov les mov mov xchg dec adc pop push pop dec inc cmp or movsl cmc stos sub cmp fimull pop aad test mov sbbl cmp dec pop inc xchg jns xor adc clc inc add cltd adc or imul int add adc mov subb loopne int3 insb (bad) mov add mov adc pop insb xchg jne mov or rorb jle movsl mov fwait loope and (bad) push jmp pop iret jnp jns iret es push sub lock das inc adc add jo inc pop jge pop js je adc mov mov push push scas pop testl fbld cmp (bad) aaa jno push popf adc inc adc pop inc adc adc and jne add xchg (bad) push push js mov mov add or jmp dec sub imul sub push pop popa or mov es adc or pop or mov sub add xor pop xchg xchg push cmp xchg adc adc or sbb rcrl je adc cli mov add mov mulb add insb pop movsl pop push xchg lds add sbb push xorb adc (bad) out (bad) push sbb add les in cld cmp mov dec mov adc es pop jne jb scas insb sub je push rcrb clc pop dec es sub test jne fs xchg sub in xor fild (bad) jmp and inc add sbbb rclb mov xor or inc sbb lods mov inc in pusha arpl sub push sub ret sbbb jne sub push ljmp inc fisttpll mov add push adc cs or adc pop add xor div fiadd test pusha cmpsb lahf sbb mov popf es inc inc pop lock push mov pop xchg sbb inc dec cmpsb push inc imul sub pop or stc sbb lock and aaa sub or sbb adc sbbl mov cltd mov xchg jmp sub outsb mov je or je mov or jne dec xor dec xor mov sbb and mov add push pop inc add xchg pop sbb fmuls push imul lds popa mov push cltd xor or andl sbb loopne xor pop adc or test xchg mov lock add add jg sbb jae mov and out lret add adc xor push mov flds mov inc sub or test sbb and sarl inc jo shrl mov and add fxch push add movsl rclb adc sbb enter outsb inc sub and push inc fsubs adc sbb push mov mov out das into pop or xorl push rorb je orl pop pop sbb paddw push clc enter insb pop mov xor sbb ja shl testb push orl cwtl inc mov xor add adc push push push aas decb jne and (bad) int and pop adc loopne lods bound push shrb es bound inc (bad) adc inc pop add loopne mov lea mov xor sahf pop and call imul ss mov decl decl push add push sub push jo mov sbb mov cmpsl lea stos (bad) cmp out mov daa add fwait es push sbb (bad) addb mov (bad) or add popf xor or stc cmp push cmpsb lods or (bad) add and (bad) xlat and xor (bad) imul pushl or cmp mov pop repz jecxz add adc mov loopne jbe adc push jne xor inc xorl inc or mov mov push test push inc pop add aam shll dec daa pusha dec push or ljmp xchg adc push dec nop or adc add loop addb inc and insb stos (bad) movb leave dec pushf push test jecxz pop or sub mov lcall push insb and xchg aam mov push mov mov jge dec jne jb fiadd arpl cmpps leave sbb inc or add xchg rcrb xchg dec testl cwtl or (bad) in lock jmp add clc add jns and push mov cld (bad) mov add mov ljmp js inc aaa push (bad) xor jg xor cltd sahf mov fisttpl (bad) je shr inc mov in jmp adc mov mov fsub jmp leave and daa pop adc adc add add xor iret jl dec jl add movsb or scas cmp sbb cmpsl cwtl outsl cs jg cltd test add rol inc (bad) enter xor mov lds test jg addl push or mov fimull scas or sbb xor aad hlt cltd push sets add or push cltd test add adc out add dec mov or pop add mov scas xchg sbb sub cmp push lret or and cmpb sbb mov push pusha bound adc sbb sbb push mov push pusha cmp lock shrb dec adc or mov sbb rolb xor xchg scas arpl push mov or add sbb ret push sar jo aaa pusha mov pop jg push pusha sarl incb add or (bad) cmpsl sbb xchg addl sub pop push (bad) mov cmpsb ja xchg pop pshufw lods add sub and aas mov add and push dec push loop fbstp mov sbb sub jne cmpsb lcall xor jb fbstp inc popa ljmp adc int loope sub adcl sbb lret sbb dec dec push arpl mov int pop (bad) sbb jecxz pop xor dec or xchg inc sub push sti sub mov xor jo ret loopne inc adc ret and jle sub push std and cwtl mov inc cld add jge vmovaps mov (bad) mov pop sub xor sub cwtl ret inc xchg loop das add sbb insl pop mov xchg daa fbld pop mov addl xchg out mov dec jo cltd push lock xchg nop jb adc sbb test addr16 clc das aam sub sub sahf push dec inc or push inc mov push push or mov push push lea andl mov inc or imul mov mov push xor sti jle imul test movsl test inc xchg ds aam repz xchg sbb data16 push mov movsb (bad) pop add cwtl loopne sub fwait add imul push inc ret adc or sbb push test leave push dec mov shr movsl inc dec or sub and push mov nop lahf jae add mov inc pop dec mov mov xor roll add loope mov inc add ja pop aaa inc incl fdivrl sbb cmp clc and daa sub pop xchg or fidiv cmp xchg mov fisub xchg adc icebp lcall ja mov and (bad) fiaddl pop pushf dec mov jb lods and aam call xor icebp int test sub (bad) ficom ficomp ret xchg xchg test lcall icebp mov push fstl test rcrl imul pop xchg dec push pop dec dec or push bound test add loope test push xor jge (bad) loop movl xor push adc xchg push repnz push andb xchg xchg add xor sub sub sbb adc cmp add rcrl test mov es sub push inc push add pop rcl xchg adc push jns mov push inc lcall test xchg call dec or stos mov ss jecxz pusha call xchg push xor loopne enter xchg adc or or out mov mov cwtl mov pop xor sbb js push adc mov clc pop (bad) jne xor test (bad) dec lds inc jnp jp inc lcall push (bad) add movsb fadds or adc add nop jg jecxz and inc mov or mov xchg sbb nop subb jecxz pop pop rclb jge loop ficoml sbb icebp sub clc or mov test mov adc sub mov test aaa lock mov repz das pop les mov xlat add adc outsb ret jns out push cmp pop aaa call xor or sbb pop pop inc pop inc ret jmp pop fbld je fwait pop mov orb enter adcb sbb int3 mov in fisub mov xor aaa cmpsb into lret leave jns push mov or cld adc xor mov xorl mov lds icebp loop cmp jge scas cmp decl mov adc fwait mulb xchg mov sub lea inc or les js push inc dec or jl mov mov daa cmp inc pop push icebp divl (bad) xchg xchg sub (bad) cmp (bad) cmp cmp pop enter fnsave rolb outsl les test fildl and pop cmp test xchg mov push jnp lret push dec mov sub test dec aas cmpb add (bad) test and cmpsl pop xor mov jp sbb sbb (bad) adc mov add mov cwtl mov mov cwtl arpl xor jge push mov push lea push inc aam xchg inc mov loopne dec mov sahf sbb sbb xchg mov push sbb xor les sbb mov jmp mov das fsqrt adc andb pop divb push movl and je sub (bad) test cmc lock add aad or addb fnstcw sarb sub movsb test push inc add jecxz adc sub sbb xchg int and jne lahf adc sbb push inc jl or (bad) pushf push add cwtl iret add cmp push cmp or adc testl test das loope and jmp insl push push nop cmp push push or inc fwait push push pusha sub fwait add cmp int3 mov je or ret jo mov jo imul lret hlt push je sbb xor jnp add push outsb leave cmp push ljmp (bad) add add rcr xchg mov ret iret pop arpl test push push rorb lock add push mov and and dec sbb or inc inc pop mov sub (bad) cmpsl test xchg mov call test in test sbb jo adc add mov mov mov or mov call int rolb movsl lods in test push xor and jge push cmpl fstps sarl push dec jne and outsb mov mov jae pop int3 or mov fiaddl fwait sbb push sub mov sbb jle lahf fidivr sub test mov lret add test in std data16 mov mov cmp jl xchg pop sub aas or xchg dec mov mov dec loopne push sbb cmp aas xchg add or cmp mov push or std inc mov or jge jmp or mov push mov lret mov cld or popa rorl rorb lret cmp cld pop add cmc and push mov cmp cmp nop adc je cmp loop test movsl xor or mov cs push push dec in shrb stc push or cs xchg dec lods test xor sbb adc or test mov ret aaa sub ss or adcl add (bad) dec add add push mov imul arpl push pop imul add in and cmpsb and mov sbb xchg in test lret mov push cmp bound aad add xor mov dec ret mov mov add mov pop push (bad) mov pop cwtl mov bound pop pop bound xchg sub pop mov inc mov xchg ret mov sar push cmp sub dec push fadds xchg add int3 je jbe sahf add jae rcrb outsb shr or push adc and dec add in rcl std hlt pop dec nop push xor cmp or fisttpll pop stos cmp push (bad) inc inc aaa cmpl sbb xor xor pusha cld mov or push jmp adc push xor mov jp sub adc pop or mov jae mov lcall xchg hlt sbb stc movsb call sbb xor push dec or or roll push or inc mov push push rorb pop mov push jne sub fldenv in ror inc pop stos pusha pop adc sbb test ret ret adc dec dec adc xor dec std dec dec pop into bound inc add inc inc jle jle enter sahf sub pop test aad inc xchg adc xorb test pop push pop dec inc popa adc push pop movsb dec rolb clc pop jge in cs cmp dec and je mov push push jmp sbb mov cli (bad) inc cs test aas les or push and fcmovb add cmp jae fsubrl loope sub push ds loope nop cs icebp jle test dec adc pop dec jge arpl out mov xchg mov push mov mov lahf xchg mov nop out (bad) inc addr16 mov push in and pop lea icebp cwtl and clc inc dec jmp rorl push adc mov sbb push inc in adc dec inc cmp arpl (bad) loop in and popa add cmc inc cmp push aam test sbb or cltd rcrl daa push adc add xchg cmpsl and inc or gs sbb jl lea stos sarl imul shr cmc dec cmp adc adc xor lcall orb xor cmp dec cmpsb inc cmpsb and adc aam stos inc dec inc mov push inc push add adc or add adc (bad) int3 sub scas push and dec and loop (bad) negb push push cmp dec movlhps jae push pop aaa test daa sbb adc sub sbb inc test push lds add xchg (bad) mov clc xchg adc cs mull push dec adc pop mov popf movsl mov pop xchg push xor inc xor jne (bad) in lods aaa sub aas or test mov or pusha (bad) dec cwtl sub lret mov or or cwtl or add pop andl add data16 arpl std sub fs sub aaa add push stos adc sub xor xchg jge adc adc les add les loope in jle call adc push xchg fcoml clc or pop enter leave push push push or pop add sbb iret (bad) dec dec pop mov push jo or adc jmp mov dec imul out jg mov mov add pop or add inc cld add jmp dec push imul mov outsb xor add enter or sbb adc test sbb outsl push sub shlb pop pop rcrb out add push mov pusha cld mov cmp jle or adc sti sbb jmp jge sub dec aaa fiadd jne mov jge fbld mov mov or sub mov adc add mov xor add mov push sbb sbb imul pop or lock loopne pop pop pop (bad) jmp mov je sbb jmp sbb inc clc mov test js pop aaa lock sti pop pop mov cmovo lods push cmc nop pop nop xchg xchg and test insl mov xchg sti dec ja inc pop dec sti or or or mov mov scas les (bad) cmc mov fidivl inc imul sbb cmp or add xor andl push orb mov sbb inc cmpsb les mov cmpsl andl and loop cltd inc cld mov aam movsb daa lret (bad) icebp leave pushf jp les pop test sub lods fistl sbb inc mov movsbl push andb xchg pop xor mov push (bad) scas jo mov gs jae fsubrs je inc and push xor xchg cwtl inc pusha add mov nop add rcrl pushf aam sub add andl sub dec xor sbb add inc (bad) sub insl hlt pop mov adc push xor pusha pop or push mov mov push adc push mov test in data16 push push pop and (bad) mov adc adc push das and xor leave jb adc or push or repnz or enter ret leave or enter ljmp inc loope add int in cmp add mov push mov shrl push sbb cmpsl je repz in mov movsb dec sarl cs sbb lock lea outsl mov mov pop rorb out jecxz jg dec mov sub mov adc add push pushf les lds jl adc jno push adc sbb repz lods or pop es push push inc pop scas ja stos inc fcoms mov aaa pop add add fwait add push push js addb jecxz pop inc adc loop stos add adc test jp adc mov imul ret or addr16 and pop loop ret mov cmpsb jb outsb lea addr16 ljmp jb mov inc add je cmp or xor inc (bad) mov aad in sbb fmul xlat lods mov push call adc cmp cld sub mov cmp movzbw lea push xchg push rcrb cmp sbb and rclb pusha scas mov adc mov xchg cmp and mov sbb or push sub jbe mov pop fadds or add add subl jl dec jae ss adc jp adc sbb mov xchg xchg cmp push xor add jno lcall cs add and sti dec inc and dec add add dec or mov ljmp pushf xchg scas adc sbb add push in test cwtl push scas adc movsl mov and jb and jne mov xchg push sub dec sub pop jmp or adc loope add adc add push push push dec insl (bad) adc adc inc shr popf jg cmp mov xchg push and jnp mov cmp insb cmp imul xchg cmp cmp (bad) ds mov xchg sti adc jnp xchg mov inc andb pop orl xor ljmp stos sub dec cwtl cmc movsl push xchg jno or push push lret jle xchg pop pushf cltd jo xchg pop cmp cld push lcall jle adc push and inc pop push pop out aad push jl std cmp mov cmpsl ret stos xor fmuls aad inc push pusha sub dec lea (bad) je add sbb push adc insb rol add dec fs xlat je xor pop aas inc pop xor imul icebp jae xor (bad) sbb push test and push and fnsave bound cmp inc push sbb aaa sbb test inc enter push lea adc lret mov (bad) and xor or pop push sub pop dec sbb adc fs js out inc shlb sbb xchg pop cs adcb lds add push pop add and jecxz sti jl inc xchg jmp push loopne daa mov addl cwtl pop roll xchg pop arpl sbb movsb add mulb push pop das lret xchg sbb lods mov flds fstps push jbe sbb sbb push rorb dec not and jle cmpsl insb daa sbb mov lods int3 ljmp pushl jmp xchg push xor mov push popl xchg fwait adc cli mov jne add (bad) push push push pop ljmp mov add sahf mov les loope adc pop lea add xor pop gs push repz and inc into sqrtps into push xchg cmp adc pop jo dec or and cltd xor pop dec aad or add ss (bad) pop add xor cwtl sbb xchg push push sbb adc ja pop rorb adcb push lcall (bad) xor add test pop insb adc mov cmp inc xor fildl data16 xchg lea push jne inc sti push mov dec add inc add int aas add fidivrl dec pop sbb adc add mov jno fs pop (bad) mov sbb mov or inc add push push add sbb nop call cmp stc push adc xor test aas test adc sbb andb sbb and jg or inc jne inc jne cmp push cmp pusha nop adc pop jl sti lock jg mov sbb lock mov or push mov push inc in ljmp jb pusha jns movsl ljmp add cmp ja sbb dec dec jmp sub push sbb fs add mov push ror mov insb adc xchg popa (bad) and xor mov and jo (bad) mov adcl fstpl or addb and inc or xor push es mov adc mov cmp push and sbb and jno mov sbb mov mov test jns shrb or roll (bad) mov andl popa (bad) (bad) mov sub ret jne mov pusha std pop xchg mov aas popa mov pop movsl mov adc pop dec dec sub sbb pop xor or inc xor loopne sbb mov inc loopne lods or dec popa or xchg cmp adc bswap je repz or popa mov add repnz mov (bad) lock ret mov push aaa push dec push xchg inc or mov or aam lea push lea test xor add xchg cmp add xor mov mov sbb sbb addl dec inc and int3 jo inc jecxz pop pop xlat (bad) stc or add or mov lods mov push push sbb loopne inc cmpsb inc mov cmp and (bad) sub sub add and mov (bad) lock les flds or push popa les pop xchg or (bad) in pop ds mov push sub pop mov xor add or ret mov and movb inc jg xor inc dec add or jle fimull test es or jno jmp mov push lock and mov and xor mov sub adc mov fwait push sbb sbb add cmp cmc mov notl add lods jl add mov push push push add and popa inc sbb lods out aaa inc push cmp das push dec cld div es cmp jb sub fbstp mov dec pop addr16 xor jg jns mov cmp (bad) and mov aad ss and add sub adc mov xchg sbb das and mov dec addb adc and jne jl add adc push sub jne cmp les out jbe fsubrl mov cmc pop scas mov inc push push jb mov mov mov call (bad) xor (bad) das test mov add add in and push jecxz sub mov push xor or cmc cs rcll pop jno mov lea pop imul dec (bad) mov mov cmp sub or sub mov or push test pop pop adc pop push lods ret clc jecxz or or jmp (bad) pop test out xchg xor fwait sahf test incb mov sub mov dec lods adc ljmp jb mov mov pop mov lea pushf ss in adc pop movb ret lahf jmp xchg jno mov inc cwtl inc jmp dec jle cs jmp repz add insb add jb (bad) mov insl int3 jae inc add jno js jae seto xchg fadds push add ret or cwtl cmc and pusha or xchg jle jbe movsbl push push faddl xchg mov test cmp scas cmp jmp and cmpsb mov mov icebp xor add imul call sarb push and pusha and sbb out dec adc or sub dec push sub or jmp rolb add pop jnp lods or jg inc and pop mov xor rolb xchg fwait test push xor jns lcall push cwtl lea or push stos rclb push mov mov add sub movsb push pop and sub cltd add and cmp popf fwait (bad) testb sub sbb (bad) jbe and (bad) adc add inc mov mov pop pusha jmp sbb and add push xor je out gs (bad) out xchg or mov pop or in and aas loope jg test jne jmp add sbb icebp push mov cmpl jp push aas add jle cmp (bad) mov push jbe cmpl out movl sbbl das dec mov xchg mov pop mov dec ret push dec loop pop test xor xchg ds adc mov inc lahf es mov push mov lahf ret test test fimull jno lahf mov lods or adc lahf push push add or or clc mov hlt or mov jge fldl mov mov inc pushf mov and adc loopne lret movsl test mov push test dec sub fmuls in aam mov jne pop jg xchg (bad) xchg inc pop push imul insl push jne cld xor add je aam mov xchg gs pop daa xchg or or inc xchg aas mov rcrb aam mov shll fnstenv fdivl aas movl jl sub scas or mov in (bad) lret jo (bad) mov scas jo lods or add sub mov adc inc inc nop out cmp mov mov xchg xchg repz aaa pop insb adc and lock xchg and xchg es in xchg cmp daa movsl mov loope bound add mov mov je ret add add jne push cmp push jbe push sbb clc and cmp and ljmp je cmp je cmp je mov popf pushf (bad) lds sub mov jb inc or es stos and movb out cmp sti idivb jne push outsb jmp cmp adc sub je pop xor or cmp jl lea push push jmp movb ret mov mov jne push ret or sub ror jne,pn incl and add jne xchg pop push add iret outsb test decb ret xlat or push xor imul mov test lods add cwtl and pop inc ljmp cld rcll repz push stc inc enter or xchg and pusha popa mov and jne jo sahf push sbb aad add and imul pop lods and scas and mov sub ffreep push jl ja or sbb push cs scas je mov or into cmp jp out jne or ja je ja adc fild cmp lret jbe movw outsl mov xor mov push cmp je jge inc mov inc fcmovnb push pushw jecxz nop push ja dec add adc and ljmp ja and aam and or adc push add lea inc test add movsb rolb xor mov (bad) or test (bad) push push cld jmp cmp (bad) ficomp js pop mov xchg loopne add inc push sub xor repz nop scas inc movsb xchg stos adc lds sarb mov jae adc and xchg or nop xchg leave adc shl cltd pop xlat pop push and test mov dec dec mov enter fsubrl lds mov add (bad) sub push add mov lods test sbb pop jg pop pop ret jecxz sub mov popf mov jo adcb test clc mov and test leave out stos lret cmp push cvtps2pd shll push xor xchg push jns push add lcall mov jnp mov add ss or sub dec pop fisttpll push gs sbb mov or sbb or dec and inc (bad) or jne out and mov mov cmp aas pop cmpb into add pusha adc add mov jge iret movl add add pop adc sti inc and add or adc add cmpsl sub addb or ret aaa and clc sbbl jno or or xchg pop sbb jge dec or sub and rolb aaa adcl pop test inc (bad) add jo mov mov or add add pusha cmp cmp rolb mov add pop sub inc sbb test subl jg (bad) (bad) cmp pusha pop nop lcall fnsave cmp pop mov mov ror pop aam in pop cld aaa add push xchg push sbb mov mov out es sbb out repz mov sub adc js pop and adc dec inc xor scas or aas mov add jecxz push ret mov xchg roll bnd sbb or push lods adc (bad) jo sbb mov movsl inc pop fwait mov jp mov push adc and lahf push or lea cmp jb mov lret jae pop decb xchg push pop or fsts mov push xchg ds pop push xor xlat inc inc xchg movsl push and popa dec cmp aas loop push mov push push inc dec add fisttp and push xchg cmp and add lock ret (bad) incl lock jo test inc insb or cmpsl sbb dec mov lock repz xchg and jecxz inc lea mov roll dec mov jo sbb rorb pop add xchg lea inc jg mov mov aas jp lea ret (bad) loope andl aam push adc inc mov lret mov inc mov movsb inc or movsl lock or pop (bad) inc adc lock pop dec add add add stos inc adcl push or (bad) mov cmp mov sub ret and fisttp mov push and xchg sarb scas mov cmp jg negb fs add add jecxz movl and mov xor cmp mov test xchg pushf in mov arpl aam inc add add cmpsl sbb fs arpl aas cwtl inc and fstpt pop orb jo mov or lods pushl adc push mov movsb adc or adc push (bad) hlt push ret push push ds in loope sub pop push fs test xor fbld pop push xchg or or icebp fdiv int3 mov add inc pop cmp add dec mov movsb ret pop ret add jg movsb push imul inc fiaddl js inc js lock inc out add es xor icebp xchg scas mov mov repnz pop dec mov sbb inc and xor push jecxz sarb lock jp loop icebp mov rsm popa ljmp sbb or jg test add dec pushf loope mov adc pop or sbb jbe xor or adc adc push mov dec jmp xor and rclb lcall cmp in push mov aaa clc lea cmpsl das xchg movsb leave mov inc fs xchg fwait mov adc aas fistl outsb mov jns nop adc add stos dec out inc or sbb je inc cwtl call test and lahf test lock jg adc or or jg push lahf mov popf pushf mov mov mov out or add dec imul xchg xchg adc leave lcall lahf lahf (bad) mov mov sbbl xor rcrb (bad) cmp dec lret and arpl cmp cltd mulb dec push imul fistpll push xor add push bound sti aaa bswap gs popf add or push adc roll les cltd lahf sti and or cwtl sti mov pop ljmp xchg push add cmp les stos mov jmp add mov and cmpb pop clc add dec jecxz mov movsl adc or jle rclb aam mulb jae jb cmp xchg cmp mov es loopne fsts inc xor imul mov add and mov inc push loop ss decb jne mov or cwtl adc jl dec add sub aam push imul popa jo jae add cli sub jno outsl je inc push cmp add inc cmp inc pushl or inc inc cmp js jmp or int pop sbb call jo flds into push bound movsl and nop lret add mov pop xlat pusha mov jmp in movsl or inc popf adc add add adc or jne mov sbb add push mov test cmp or jp cwtl dec and dec add push push dec adc ret movb cmpb push sub pusha mov or sbb mov push mov call add mov insl inc insl lahf xor lods or sbb pusha and dec sub sbb add sub les pusha shll icebp push movsb adc cmp jo jno insl or and (bad) adc daa movb push lret xlat or adc lcall cmp jbe movb inc jmp jmp movsb sti dec pop push or push sbb out push aad cmp test dec (bad) dec add xchg (bad) js pusha mov mov push mov mov add mov inc xchg cmp fldl aad xchg cmp sbb dec jne mulb movsl jbe and adc pop movb lahf shlb cmc inc inc pop call mov push out push cmp push dec cltd mov xor fisttp dec sti lea jmp fdiv mov cwtl add sub add dec add mov mov inc push dec or push lods rorb push dec imul and add stc add loopne les pop push orb cs inc fildl jnp adc or dec adc dec inc dec lods fwait push sbb xor (bad) cmp dec and mov daa lock push (bad) enter mov push pop movl cmp cmp lds rorb std lds mov sub (bad) add pop loope cmp ss (bad) ret jg add jb mov add inc cwtl cli xor in adc mov dec clc xchg test mov (bad) xchg rorb test or mov xchg aas add dec push cmpsl adc sub sub fimul pusha imul pop sti rol daa cwtl sub and lds aam cmp pop cmp mov pop mov repnz xchg test jo jl xchg (bad) and mov mov bound jno add loop loop daa in push test fmull add nop xchg gs sub or inc fstps and imul mov xchg push pushf and fisubrl push jge adc cmp call and sub or adc fadds mov adc mov test inc leave inc push mov insl je lods inc cmp rcl and cmp add idivb push loope,pn paddb xchg push jne jg addr16 add loopne sar ret mov sbb add sub loopne mov cli roll pop cli les gs cld mov inc and cld xor imul test icebp lods mov pop push inc push push roll xor rcr add mov ss popf cmc mov dec and fiaddl xchg inc bound push (bad) cmpsl jbe mov mov push jae sbb ds popa dec dec dec mov sbb xchg mov add adc sub pop loopne push jge (bad) push dec cmp arpl nop test (bad) rolb add shll jecxz add sub pop rolb fcomi cld add aad xor xlat pusha mov pop pusha cmpsl mov mov add loopne clc dec insb xor mov mov xor add or fisttp (bad) neg sbb andb jmp add lea neg xor cmpsb jne (bad) rdpmc or (bad) rclb cmp lahf clc aam sub inc push xchg shr cmp es or mov jmp fldenv (bad) fstp sbb add cmp out jae pop sub add dec jo add std add movl push sbb or jl out cmp ror ret lcall mov inc jecxz sbb fmuls arpl pop adc test mov pop mov inc pop mov rclb movb daa pushf and nop push push add lcall pop loopne add cmp pop mov cmp je ss push pop push adc or inc push xorl scas add mov out add sub cli add ljmp ss dec sbb clc mov add push mov lcall mov add add dec add add dec fdivs test call loope orl jp rcr fisttpl test sar sub sub xchg or cmpl push mov mov adc add cmp test nopl jle mov cmpsb lret jmp inc nop and dec add inc popf pop out adc imul fdivs cmpl adc mov sub add jge jb xchg cmpsb les adc (bad) int3 (bad) add pop stc scas pusha shrl das jne xor add push cmp mov movsl clc inc call mov insl outsl add out adc cmp push je mov popf mov xchg push or add push jae (bad) sub add pop addr16 push pusha and imul (bad) push sub mov pop pop sub cmpsb dec jns movsb jne mov or xchg loop jne mov inc arpl fucomip lods add ds adcb xchg mov xor sbb pop xor push sub fmull cmpsl cld sbbl lcall subl subps mov mov insl or test mov add cmp push jb adc xorb adc (bad) adc scas mov lea and adc adc out enter sbb adc pop stc es mov sbb movl adc arpl xchg not in dec rclb dec and movsl jns inc nop clc push cmp or call mov mov xor mov int add cmpl (bad) xor xor enter sarb nop xor adc popa xchg sbb add adc push xchg mov es push mov mov aaa xchg jae call loopne and fwait cmp sbb sub int dec adc inc pop and clc std jbe and loope pop out jmp xor test mov lcall or stc or leave idivb mov int mov stos adc cmpsl int3 lea fwait sbb dec loopne gs xor mov add into or jle divl fidiv jle sub add ret shll mov push cwtl movb add (bad) js and jne or jno mov jmp or jmp pop loopne inc fdivr iret sbb nop xor lahf or push or lea lods mov sti sbb adc aas adc cwtl fbld add xor pop iret xor mov in pop mov or roll lock cmp pop (bad) negl pop mov popf mov lods and push dec mov mov int3 enter cs dec aas aam call in push cmp or test mov push orl inc orl imul lea xchg add loop pop mov pop xchg mov stos pop mov dec arpl bound inc loop in das pop add sti inc movl test insl and xchg pop leave sbb (bad) int xor shl xor addr16 pop adc sarl jl leave mov push pusha call jp jns jge pop push and mov or jnp pop mov mov add inc enter jno mov test or mov push add (bad) cmp or sbb test cmp and enter faddl push and flds and mov sub sbb int jp inc bound pop adc add lock adc or dec sub push loop test pop jle pushf rcr xchg std fstps imul and imul and adc and pop imul adc adc adc fldcw and aas scas mov sbbl imul add dec clc add movzbl push lea test add (bad) out pop es xchg jns add movb add add mov mov cmpl dec pop mov mov inc pop aam jb push rorb or loop add cmp pop (bad) jo adc sub shrb fs ret mov push out cmc adc mov jnp addr16 xor adc mov insl scas cmpsl jmp sbb (bad) fldl or loopne mov int3 in daa inc mov dec cli add (bad) repz je push add push pop cmp push outsb inc push (bad) xchg mov movsl inc and (bad) enter stc add add ja push push push jle leave push dec sbb push and dec lock sbb jle inc sbb mov dec test or and cmp rorb lcall inc cmpb jne pop cmp pop in push shlb leave movsb fldl or push push daa pusha add mov inc sub mov cmpsb jle ss and aas xchg or imul fmulp cld jo sti dec add and push in or xchg jo add in push mov add inc pop cmp fistp sbb inc mov fmull aad and lods inc (bad) mov pop dec sbb fdivl xchg sub loope repnz sub mov int3 (bad) clc rcll inc call mov jo push push push and dec cld or orb clc xor inc data16 sbb dec mov and (bad) add test push (bad) mov fcomps xchg js pop addr16 mov cs push pop add jp daa mov and mov bound (bad) jmp movq mov (bad) orl fdivl inc mov sbb pop inc push push push cmp sbb add dec js mov mov or repnz fs add leave push xor adc inc add fsubrl mov push movsl rolb int3 cwtl mov inc xor stos popf and repnz or inc je push insb push add or jl cli stos add mov or sahf add int3 aam int3 adc ret (bad) scas sbb or clc adc fmull popa clc (bad) shlb or mov (bad) sub pop or jl test shrl and sbb mov adc mov cmp mov cmp jb shrb mov jle mov pop and dec fdivrs adc push add inc push je fdivl cmp jge xor lds out cli dec test push jge call or mov inc das jl loop sub fcoms loop fsubrs jo loopne jo push push aam xchg pop sub fsub inc dec mov cmpsl fist cmp jl xor or fdivr hlt gs into sbb jecxz push ret roll hlt jae int3 (bad) pop xlat push inc add jg add cmp pushf shlb push mov mov xor das mov sub mov cmp push xor mov (bad) ss sbb aam inc inc les mov mov push or incl pusha push adc xchg mov jge mov rorl cltd jbe mov or push mov xchg in push push (bad) fnstsw ss xorps push cltd sbb movsl inc sub sub pop jns in lock and shl inc inc and in xor test test xor fldl push cmp in les lock xor faddl jo loopne subl imulb imul outsl insb xchg imul sbb xor mov pop decb mov mov or lods stos or pop dec pop shrb jo mov fucomip rcl push cmp sub setne sub iret (bad) jo or mov ja push lock lea and inc add cmc jns sti jne mov imulb mov jle cmpsb out xchg rcrb (bad) adc add pusha push jno sub jl pop test cmp pop adc into fist aam sarb aad mov rcrl sub pop inc and xorl push aaa jns pushl mov xchg movsl stc bound pop or cmp dec repz xchg test sbb outsb enter sub leave orl add icebp orb test test add add cmp push or inc mov cmpsb push inc push js inc add sub jb adc cmp pop or mov rorb dec js sbb inc adc test sbb cmpsb adc mov or in decl pop jne lret jne test xchg push cmp je mov mov inc mov push dec fs mov aaa push adc xchg dec test sarl pop dec fiadd (bad) pop dec and test imul xor outsb sub cmpl add shr dec movsb in call sbb jb push or popf sbb mov imull ret (bad) cmp cwtl sub mov cmp jae ret int3 add push push cs imul mov jnp mov ds pop inc jle mov cmp sub push jge clc test cmc xlat mov sbb cmp lcall lret push orl call add lret or dec sahf out dec andb mov inc pop dec pop mov add sub mov in scas imul push into mov lret mov cmpl xor fbstp scas sbb jmp mov mov cmp xchg test adc arpl xchg rcrb int3 lea pop clc ja push sbb stos mov adc roll add jns js xor xor and add mov adcl les pop sbb cmp jne mov aas icebp xchg mov cmp push cwtl andl mov int3 dec dec inc lods xchg mov and lds (bad) or dec or test pop jl lcall add sbb inc jmp xchg push sub push xlat nop push dec mov subl movsb mov in or push inc sub aaa daa xchg xor les jl jbe in and pusha sbb sub fiadd dec adc (bad) clc and hlt and dec sub shlb ljmp fadds jg mov mov xchg pushf inc loopne pop cld (bad) repnz cld inc cmp or inc mov je lret fs push xor test pop sub out rcrl adc and xor jg cmpl jl nop pop cmp mov xor mov imul pop (bad) push pop dec or pop rorl mov sbb pusha xchg pop mov out and lret pop dec mov cwtl pop pop scas push fs loopne mov xchg add or or sbb sti es or inc sub dec adc loope pop cmp nop xchg jmp sbb xchg jl push inc push sub add test movsb jne mov scas push jne jbe push xchg iret scas data16 les test cld aaa es pop cmp jnp xor mov pop jo sub or sbb je cmp in mov mov imul lods push push pop inc mov fnstsw arpl adc outsb jp dec inc xor enter ret pop roll mov in add das push push sar loop sti sub jne (bad) lcall mov fld inc cltd nop cld sub or outsb xor cmp sbb stos lock jb or pop jp push or mov push aaa into mov mov xchg cmp adc mov aaa mov xchg nop cli mov repnz jmp sar dec sbb adc cld mov sbb add add enter pop push add nop cmpl cmpsb and ja add cmpsl inc cmp sub int dec xchg je les adc dec pop xor or inc lods nop add jmp ljmp iret test cmp cmp cltd mov jne ror mov cmp add push movl aam test out pop xor in sbb (bad) test sbbl scas (bad) ficomp or mov inc add inc cmp adc or lea adc adc ljmp inc ret mov adc rcrl test enter rcr fnstenv pushf in sahf movsl jnp jl ja inc imul rolb sub adc cwtl sbb or adc xor sub adc pop lods cmpsl mov push (bad) jo push inc jnp aad mov push call pop ret adc cmp cmpsb pop aam push aas ret pop add adc dec and loopne pop ret push movsl sub push xchg dec lahf and cmpsl mov and xor aas rcll push adc stos cmp or dec loopne and mov (bad) jmp mov and dec xchg push mov mul jae mov cli dec cmp pop and les jbe dec xchg dec aam mov ljmp ret adc movsb lock inc out push sbb xor test repnz and daa rclb insl hlt jne es (bad) sbb mov cmp loopne rcr mov shrl push or aaa mov lea cmpb jge js cli cmp out in sub ds sarb and cmp adc mov and loopne adc add lcall dec inc lock neg inc loop sbb or stc mov pop or sarb mov dec mov cmp fisubrl dec rcll xor xadd insb add cli dec cli fbld mov and push mov mov pusha push fstps push xchg jl pop es ds int3 mov ds mov or (bad) fstpt fisubrl fs or and adc std adc jle add inc push (bad) (bad) loopne lret fist dec add mov sbb in int sahf push sbb push lock fsts mov adc popf jp fiadd push mov cmpsl sbb ss lods jbe pop fdivrl lcall in cs sbb out scas popa mov push add js out lea xor add add ret (bad) mov movsb ret xor cld movb pop popl mov lock dec xor cmp jge mov sbb mov jbe and add push cmpsl xor push cld and fsubl repz jne lods jmp pop ss sub and pop dec sbb (bad) or pop not xor jbe mov xor inc add jae push inc decl jne cld adcb xorl jne add (bad) sbb cs pusha lea fcomps mov shrb lea aad add mov (bad) dec imul dec add add adc push fdivr inc inc imul adc push test mov imul add add arpl es imul clc cmp ret cmp stos inc insl push cs mov add sbb or jl adc mov adc jle cli xchg mov cmp aas push rolb cld or sbb adc sahf adc or add cmp mov push sbb lcall mov lds insl sbb jmp movsb imul test add lea mov jne sbb add mov dec xchg and push jge lods sbb loopne adc and fsubs adc in pop jge movsb rol add shrb mov mov or cld push (bad) jl adc rcr ss adc cli and adc cmp mov neg jle dec decb cld dec (bad) pusha push cmp js insl lods adc and xor stos mov mul adc add sbb adc pushf xor repz sbb xor sbb (bad) jne (bad) pushf mov cs sbb pop addl rclb push in pop fcmovnbe sbb aas sbb xor icebp mov out and sbb push push xchg inc ret cmp negb push cmp push cmp sbb cmp outsb inc dec cmp not dec push xchg and adc sbb mov fildll out lret push bnd xor subl push decb fst add adc cli add (bad) jne adc mov sbb push add stos lock int icebp pop stos mov test push fisttpll cwtl int3 ljmp or (bad) add in lods jae (bad) xor fstpt addr16 xlat and mov inc pop in shr fsubl aam pop xchg lods xor and in push in mov push pop sbb lods mov (bad) sbb sbb lods mov rorb lret aam sbb (bad) jge ret jmp mov dec adc inc add add fdiv xor adc push mov and dec pop sahf ss jmp dec push fwait pushf mov add cmc (bad) sub mov add push pop jno adc cmp jmp lcall push mov mov push inc pop rcrb xchg pop hlt and mov inc dec aam ss or (bad) rolb and jo ss fs shlb add mov or pop or mov out inc mov jnp add mov sbb cmpsb cs cmp iret dec rorl movsb in sub pushf cwtl sub push in sets sub xor adc push test js xor ljmp addr16 pop cli (bad) push mov sbb std push cld mov subb push adc iret sti push cmp ret mull stc in call mov adc adc push lock stc mov sbb xchg push stc std and mov pop push std cmp jnp ss or dec pop ret or ljmp sbb xchg std xor pop add test cwtl fucom rclb mov ss in cmp cmp sub cmp jo jecxz loopne pop cmp jp hlt ret jmp lock (bad) pop int fisubl cmp lret (bad) jbe add pop add add xor push pop push popa incl scas adc addl outsb sub add mov add cld rclb test popa loope push cmpb mov mov adc add ret mov ss lcall stc push call mov cwtl sbb loopne sub cli cs or jnp mov dec cmp cld inc lcall int3 mov aas add data16 fcomps lock add jne push (bad) mov jp adc je aam dec je ljmp push bound dec test aas and xchg mov push cmp subb or pop repnz mov push sub enter ja mov out clc es xchg jnp cmp adc ds test jb lea call push leave cmpsb fistpll or dec sahf mov dec fst push or or adc dec add sub or pop jae xchg loop xchg inc add inc sbb add or adc pinsrw enter jo ss dec fiadd aam (bad) mov or mov jle adc add js add mov mov push add and in orps aas test inc cmpsl mov mov inc or cmpsl ret cltd enter ret les add movsb je add pop shl shlb add sbb mov push popa add es sub cld xchg push loope cmp or add call adc mov mov jp in test push mov adc in inc test rorl test js rorb js add mov stos mov sbb add inc loopne,pt push sub or test fwait sbb cld xchg jno push mov xor mov call adc sub mov adcl push call add fmul fidivl cmp stos rclb ja adc movsb jb adc fcompl add jo adc jne xor (bad) negl lods test (bad) mov lock ficoml or arpl mov mov scas jo pop add iret lahf push js adcb loopne ret mov test xchg push dec aam pushf pop sbb push shl or fisttpll or add inc mov test or inc mov loope sbb adc push add rolb and rorb fdivs jo jo pop clc xchg adc sub push add adc sarl int3 imul xchg pop lds nopl pop bound add ret mov and cmp js cmpsb scas and xchg sarl mov enter sarb jle dec add popf lret xchg mov lods nop or adc jo in jle enter add inc hlt cld cmpsl out aam mov jae add mov outsl sbb jo sub dec jg lcall dec in cwtl sub adc (bad) test sbb adc enter or in lds jecxz pop xor push hlt sahf rorl dec add sbb jo sahf cmpsl pop push repnz into dec stos (bad) adc jle push mov outsb cltd mov cli push mov pop add ds and adc pop (bad) pop imul dec push mov mov pop inc rorb and sub negb outsb jne cmpsl imul sub (bad) jbe cmpsl ret push aaa ss aaa add lret data16 je cltd sub push ss mov fisubr or lods or mov add dec xor mov add shlb fcmovbe mov mov lock insl push push mov loopne add inc imul fwait lcall pop jne pop loope popf popa or jl add jne inc add inc add or fistpl hlt mov and imul xlat xchg sbb push cmp push cmp add push push and cwtl sub repnz push mov insl xor aam push int3 sbb sbb jge or or jne scas aaa inc add mov mov test xlat scas push les into pop jbe adc push addr16 adc dec jne test enter (bad) in mov and icebp data16 lret add cwtl sbb pop imul clc clc push jns or dec sbb test add mov and call bound sub in cs cltd fnstsw mov lock ficom sbb adc push jo (bad) inc sbb adc sub aas and mov pop js xor ret push jg mov push js int3 hlt add inc orl or pop push ret dec js mov mov (bad) sub jp in add sub sbb gs ds repnz sysret js aas fmull jle lcall (bad) dec push dec clc mov jne push cld lock inc (bad) (bad) xor clc jp cmpsl mov sbb add push push or sbb test rcrb in shrb or gs movsb push mov aam aas int3 in (bad) mov jns sets or inc adc loopne lods loop sbb sub jnp adc or or dec loope mov mov ss push lock sbb clc mov mov and inc fmul push jle idiv cmc fcom pop lea repnz call (bad) in in mov js mov lods rclb js enter push xor pop mov push pop add or (bad) or (bad) jne js sbb pop scas adc (bad) and adc lods fcomps add cs and lock sahf rcr fmull idivb pusha repnz cltd cmpsb jb (bad) enter sbb fcoms lock mov (bad) ss push pop shlb sub or or mov xchg mov inc fs add aad scas xchg fisubrl mov pop out push lcall (bad) cs mov gs stos xor in sahf jae cmpsl repnz faddl pop pop push xchg push push add testb push sub mov int3 or or sbb testb dec imul push mov push clc ja rorl push out es jmp or pusha aad sub sahf (bad) clc adc mov xor mov clc inc sub pop fidivrl xor sbb sub es shrb xor push push adc xor inc mov test mov cmp xchg push enter sbb sbb cld add iret leave leave orl xlat and or or sbb push pop out test mov and cmc imul fdiv pop add adc call ljmp add add es faddl data16 adc cs and loopne ljmp sub jge pop es xor push xlat xor push push cmp in xlat sbb pop jl imul lods jge ja ljmp fsubrs pop or push fwait mov dec scas jl mov xchg inc lock pop mov fstps or cmp pusha and or or pushf sub push or or dec in xorb cld clc in cmpsl nop xchg mov rolb pushf xchg cwtl push xchg push sub jnp push sbb daa hlt jb mov inc sbb xchg jb lcall jnp sbb or lods cs pushf or xor xor clc dec push cmp jbe test inc add dec inc sbb push xor and inc or les mov inc call jnp rcrb loope scas inc enter mov addl sahf sbb std cltd add jne sub mov cld dec sub int3 int3 add mov rcl push or push loop xchg dec (bad) pop cld or jns mov lods fildll add into or call bound add add lcall xchg mov (bad) jg mov rorb push adc imul rol mov jns jbe mov cli mov rdtsc mov add jo add test test or or sbbb rclb adc cli mov lock jb jne mov jae or mov mov sub push popa and dec sbb mov sbbl jnp jo or in jne dec jb inc gs or in adc inc loopne clc cmp je movsl sub lahf inc daa push jmp adc dec mov pop mov lods inc rcrb or fdiv adc inc div sbb mov (bad) pop iret clc inc push into sbb adc shll xor xchg jno push arpl in pop out fwait pop lret repz pop rcr xlat push pop cs xor outsb aam pusha and in stos int3 les into sbb lock sbb jo xlat inc adc sbb addl sbb xchg mov out cpuid repz push repnz inc ds sub clc movsb fdiv insb mov movb mov sub stos mov mov push fsubrl adc out or add adc repnz pusha mov push rol sbb testb or mov mov pop inc push adc sahf inc jb subb adc push rcll loopne ret add adc adc popaw mov sub ret and int3 add lock add addb les pop lahf sbb jecxz mov shr int3 (bad) sbb popf dec or addl xor jecxz add mov xlat popa jg push aaa xchg jo rcll adc push rolb jne mov add xchg in xor (bad) pusha (bad) xor sub cmp sub fild xchg jl or ret out add int3 push movsb push (bad) sbb lock fdivrl inc and pop loop sarb sbb in loopne les (bad) mov jbe loopne mov add mov loopne or jmp dec int3 cmp push or call mov leave leave add add pop jp mov sub and lahf shlb xchg movl jb sarb xchg aas jle xchg mov leave adc and sub addl rolb adcb enter loopne aaa mov clc lret or sarb add adc sbb sbb adc add or loopne loopne jg loopne sbb dec sbb xchg fdivrl add dec call aaa inc in es clc adc sbb adcb and orb adc adc loope daa sbb mov orl aad xchg shr inc cld std push test adc scas jp jne (bad) push pusha add pusha push fadds pusha ja mov std adc ret xchg cmp int xchg call pop lret inc and lahf sbb rcr loopne je jmp mov or adc push pusha pop jge pop and adc inc sub mov and sub sarb inc xchg out inc pusha test out cmp dec pusha (bad) add ja out loope clc and cmp lods rcrb lods jne,pn repz lcall mov stos inc mov mov mov jmp mov push inc inc mov rcl inc loopne add pop daa lock push incb (bad) in push or mov xor add pusha imul and xchg lea das add or or (bad) jge jne sbb jge add add xchg inc add rorb popf sbb loopne mov cmp pop jmp cmc inc push add fsubs shll fsubl sub mov int sbb call (bad) data16 lret (bad) pop fcomps lods xor push add pop sbb icebp ds cmovae adc out add xchg push ficompl pop into add jecxz test jnp cwtl jmp mov rclb sbb (bad) and (bad) sbb (bad) loope lea sbb hlt push into and pop addr16 loope in xchg loopne repnz sub test loope push mov mov inc rolb inc nop enter rcrb nop inc enter nop inc push ror loopne insb sub jmp adc mov (bad) jo xor ret andb pop test jo test add fnstcw or clc inc xchg call push fsubrs out mov rclb or adc leave push pop or pop icebp hlt aaa sbb repnz adc sbb clc push mov sbb sub aam call mov popa sbb int3 cmp sbb out loopne add push popa mov jmp outsb pop sbb xchg sbb adc sbb mov xor loope xchg sbb and add addr16 pop add sbb popa xor (bad) pusha and (bad) or subl lods sbb fistpl rolb add addb rcl aam lods jno push scas jl lods repnz adc mov aas (bad) sbb shl add (bad) idivb in lock mov and sbb pop imul lock push sbb test push inc ja adc rcll loope jge int push xor cmp sbb and push ret mov insl (bad) rol test subl xor jo cwtl les sahf push rclb jb xor data16 subl cli add add shl (bad) cmp pop push mov inc mov cmp jl push mov (bad) dec push stos or in dec xchg (bad) daa jmp test or or fcmovnb in or cmp sbbb xor cmp jecxz lods shll or or insl ret sbb push sidtl cmp adc xor loope sbb dec cmp sub loope and movsb fistl adc jge ljmp dec add js pop jno jmp cmp mov pop shlb dec jne xchg cmc imul aam mov jo les pop pop sub incb add ljmp add add pshufw cli mov sbb (bad) das aas or inc adc jo mov sub sub xchg sbb sub xor xor adc jg inc repnz sti enter mov push add jo outsl cld pop pop push orl test add adc incl jno pop pop leave inc add mov dec aas pop sbb add add sbb xchg adc pop lahf inc (bad) cmp push or adcb add cmp lock add inc test lea insl dec adc test js lahf movl or jns repz pop fadd mov add fildll js leave push inc sub adc jg in icebp jl push lea cmp addb mov xor push or imul cmp jb dec call cmp xor or mov cltd push fimull xor mov inc and loopne fadd cmp lret or subl mov movsb movsb (bad) popw add pop or inc lock dec adc fistpl dec (bad) repnz add or sbb cmpl jle mov or mov lret dec sub imul aaa push or dec xor add in jle out pop pop ret pop adc je fld rorb rol xchg xchg mov js (bad) mov add inc in jg cmp pop mov dec (bad) shlb pop pusha imul dec sbb mov sbb (bad) mov push sbb push add or cmp xchg (bad) push enter xor jnp and fadd rorl pop xor pop or inc add nop adc daa dec push mov mov aad push push mov dec (bad) es or or mov push push mov test sahf and clc or inc xchg inc or and or adc in xchg mov (bad) jns add adc mov ds cmp (bad) mov imul mov call xchg jl adc or xor jge sbb push add (bad) cmp xchg icebp cmp jae hlt sub sbb inc adc ljmp ljmp add add push jmp xor jge,pn jae sub mov adc hlt pop clc jns das add adc sub bound sbb push into or je (bad) clc nop (bad) out hlt cmp cmp nop int3 int3 int3 test dec xor (bad) out pop emms adc loope stos or ud2 add adc ret jg addb lea cltd or adc dec sub loopne mov add dec pop inc jb hlt cmp pop add enter jb imul add add cltd mov or mov pop xor or test jo icebp popa and push mov adc pop ret add add and mov imul pop aas and inc inc iret lock xchg (bad) mov cwtl jne dec inc clc xchg pop lea cld idivl xchg lock jg (bad) mov mov mov jl sub in inc add cmp or add or xchg jne clc mov cmp fldl repnz sub fstpl repnz push add dec stos sbb (bad) xor out adc or loopne or add sarb rcrb lahf cmp xor dec inc xchg mov lods and andl adc and imul and sbb add es fwait sbb ret ds add syscall mov mov pop and inc mov pop push aad mov ja jg add adc repz add xrstors js dec adc nop jo mov or sbb imul imul imul cmpsb imul outsb lcall js sbb lcall and imul lcallw add adc sub cwtl adc cmp pop imul push jl push sbb xor mov mov or sub cmp push add out gs cmp or and pusha arpl sbb jo push cltd sub or fimul pop and sbb pop adc or and ja inc sbb and loopne arpl cmpsb cmp or sub sbb ret dec (bad) fs loope aam dec or jbe lods movsl adc add lret imul iret add nop cli cltd enter cmp mov rorl add (bad) pop inc mov sub stc cs or sub pop push jmp sub mov rorb push or push push rolb jge sbb lods call adc (bad) pusha pop sbb jmp or push xchg movsb adc cltd push pop pop sbb push aas cmp inc aaa test mov and xchg imul inc adc mov fadds add mov push imul and shlb dec push adc xor (bad) fcomps push pusha add and mov inc jmp mov or (bad) push or xlat mov insl or push lock lea out xchg jle and daa lea mov mov add adc inc or out fcoms push int test inc rcrb (bad) hlt xorl sbb enter mov xor (bad) call add adc sub (bad) adc cwtl add add add pop add loope push sbb jbe ret fimul or push fist fildll cmc push lods call xchg pop test or dec xlat out adc push test or mov dec dec xor or mov sbb jl push add inc ja mov test adc mov or (bad) push cmp (bad) lahf cmp pop adc xchg jge rol mov push add xchg or pusha adc pop and push or push add inc insl xor push push adc sbb insb sbb and rcll adc xchg jnp gs jl fdivrl sbb push mov sbb mov icebp adc lret sbb pop mov add inc jmp icebp adc test or sarl push pusha jl dec xchg push subb pop cmpsb in or mov lret dec or xor rclb xor leave loopne sbb push leave mov and lret mov and inc pop enter cwtl mov mov fs xchg adc lds (bad) aam sbb dec insb rcll push repnz cwtl mov mov mov addl adc jg in jo gs adcl xchg pop loop mov iret and push hlt in or outsl cmp fidivr and lea xchg mov mov pop sbb mov mov out xor mov push add sbb jne jb mov cld inc add add cwtl mov pop pop or and mov call in jle push push dec add lock into pop jo push mov cmp dec pusha iret add cmp (bad) sub inc (bad) push push jle dec jns sbb outsl inc test pop adc add and xchg add pusha add mov (bad) push in out scas dec clc sarb xor stos add cmp imul movl mov xchg loope mov jo or push cmc adc stos cmp data16 sbb (bad) dec pop push mov dec inc je fmuls sbb adc clc xor add inc lods jne pop bound and sub jmp lahf sub sub push adc icebp mov ja adc test xchg mov outsl push dec scas fmull dec xor jne je cmpsb lret imul enter test xchg xor xlat inc rcrb cmp pop iret fiadd push loop cmpsb xchg loop ja ret addb in aam fidivl cltd pop int3 add pusha mov clc dec std mov push jb in cmp sar jne fs imul cmp loopne mov add in out test mov sub inc xchg call roll into adc mov inc fsubl xchg mov jno mov mov and push pop xor (bad) lret lahf and (bad) mov sahf pop shl in cs aam in cs lret call test xchg lods inc in add test xor push sbb sbb rcl sbb dec (bad) pop dec insb inc jne pop or cmp test inc push out aam nop cmpsb sub pop enter test enter int3 out aas popa jns adc fdiv loopne xchg lret in or adc sbb test push ret ret xchg sbb xchg add adc and lahf inc mov lcall xchg sbb enter or or icebp push and push inc fs xchg push push jg or in mov mov jecxz push lock into jge mov inc jmp lcall adc aaa dec mov aas or into and inc stos push cwtl inc cmpsb pusha mov pop pusha mov mov mov dec fisub loopne xor adc xor cmp jl push lcall jb imul test imul pusha ret jae add pop test in es adc inc or and jle dec jae xor faddl pusha mov xchg loopne mov sbb jg and add lock add add fsubl aam in inc pop and inc cs data16 aam dec jae sbb aas sbb inc jb adc and dec xor or int3 adc enter xchg inc test dec mov add cmpsb and jg inc js push sbb stos push loopne,pn dec and jnp add pop pop shll les adcl ffreep fwait nop mov mov stos add jne fistp mov mov fist dec and xchg mov pop fucomi aas add add cs pop fmull and and faddl xor jns test pop fisttpll push sub pop fs pop out sub cmpsb test test pop and addl push lods inc or push jmp pop pop and fs add cwtl dec mov sar push push adc jg dec rcrb add out pushf jb pop push inc inc shrl arpl mov pushf jp pop sar lahf sar sub pop daa xchg movl or and and sbb (bad) lcall and add dec inc pop enter add cmp shrl repnz addb or push insb dec or or mov add pop inc enter into sub in enter add in shrb je pop shlb push nop add dec add mov push mov dec inc scas (bad) xchg inc sbb dec faddl enter and fstpl add mov inc enter mov cmp xor inc dec cmove push lods insb in inc and add mov daa sub sbb and dec les cmpl or pop and mov adc dec mov and fs ret rorl jg mov push es cmp (bad) fwait mov (bad) and pop pop gs and in mov loopne pop add sbb and repnz es jmp lret and std mov pop jb mov enter lods inc ret mov jg iret or xlat push mov mov lcall xor sarb xlat jbe push lea cmp cmp push js sub push fwait add daa lds cli adc cld (bad) push roll jecxz andl or test scas mov pop ret or inc enter enter loopne enter loope add enter cld adc mov je mov inc xchg out out mov (bad) xor pop inc sbb aam dec nop push jne mov test fist add jo push mov and dec xor adc pop in insb (bad) sar stos nop push xchg jo ja rclb mov cmp add dec jmp mov loopne arpl outsb and cs das push or lock inc sbb add xchg sub cmp out cli or push mov sub cld mov or movsb add lods and and inc or add mov inc cmpsb (bad) and and or nop mov mov jecxz fadds pop xchg push mov sub mov cmp adc or inc jno dec inc add pusha shll pop add mov fildll mov xchg test sti add or cmpb jno pop adc enter imul test adc mov fistp fsubrs sub dec pop (bad) js push sarl sub sar dec xchg nop in ficom aad stos sbb (bad) cwtl add shl cs cmpsb movsb out out inc inc lds inc jle or dec xor lea sarb add or cltd or add sbb subl mov lods adc pop mov pop add jns in add loopne ljmp andl jecxz cmp (bad) insb ljmp jg test add pop roll sub pop fildll inc push enter pop and jbe pushf or adc mov add addr16 fnsave push pop sbb inc mov jg add cld fs and cld push (bad) mov push stos lcall and rorb pop add dec adcb add rcrl lds shl lahf mov out movsl add (bad) xchg (bad) add inc xor or or xchg pop (bad) sbb fs xorb sbbl je sub aam xchg and or outsl (bad) ljmp mov inc sbb and sbb add dec push mov dec push add dec test inc add pop movb movsl jo push (bad) je (bad) mov fistpl xor sub lahf or lea jp xchg push jmp add inc mov push dec enter fadd or rorl jp popf and xchg adc and cltd dec into aas mov les outsl sbb cs loop and or adc mov add test adc pusha in aas cs call sahf mov add dec push cmp push add daa dec movsb rcrl aam and push test mov jmp sbb sbb push sub mov xor dec cmp jge mov cmp fcmovb pop (bad) std add popf scas sub xchg mov or cmp jge mov add cwtl call shrl imul insb std and fistl or add test movsl mov test data16 xchg adc mov loop add or test cmpl add lock inc cmpsl mov icebp xchg test aam dec adc pop jne pop pop sub mov mov add call inc jo shrb sbb jl push nop mov sbb mov rorl sbb push (bad) std loopne mov rorb pop push cmpsb rcr (bad) fnsave pusha push and and or jmp stos xchg adc add mov (bad) nop xchg and movl aaa xor push or jne aaa sbb add into xor adc lods into push add lods cltd inc push or xchg dec add push jne cmp add rolb or inc or decl jns insl inc sub (bad) fild xchg in ja dec cmpl test dec jge jp or xchg movsl aaa loopne or insb ja pop and inc push inc mov test lret clc cmp pusha adc inc lods xor bound test xchg ret js test push adc repnz bound add jne xchg js mov sbbl add xchg jo cmpsl and scas adc or mov add hlt pop cmp (bad) repz nop ss sbb inc jmp je bound rorb loopne (bad) ja jge inc mov lret inc pop inc in and (bad) popl imul mov enter mov inc stos and jne inc ds add ret adc and push push in not push dec clc loop (bad) xor loopne add lods test repnz inc or push mov les hlt add (bad) into adc mov pop loop pop sub loop push and or je (bad) and add sbb lahf adc mov push adc xchg inc cmp add lahf adc xor add aas sub (bad) or xor mov popa pop lods aam lods inc mov sbb jno xor mov pop cmpsb add in push roll sarb xor ja dec loope lds or aas jmp cmp hlt or in (bad) or popf xchg or pop mov dec jbe mov or adc dec lods stos (bad) jl adc popa or jne fild sub ds (bad) or lret cmp mov add roll popa lea xor sarl dec int3 jge jb sbb xlat aad jmp xorl sahf adc les ja movzwl jmp aad add mov sub pop sahf daa pop mov inc icebp mov add xor outsl lea mov mov add icebp xchg add rolb adc lea or cmpb pushf sbb pop test add and fistp sub aam fnstcw jno aas push cmpsl leave push pusha inc fiaddl fmul imul cmp jmp pop rolb popf add into inc pop inc clc sbb cld xor ja add add or sub adc sarl arpl pop jg add push add out (bad) sub imul shrl rolb mov enter fcomp and fistpll lea pop sahf xchg push jle sub fstps nop dec cmpsb imul or lock mov jne cltd (bad) sub push xchg flds inc fstps xor mov lock out pop mov das jmp sbb fiadd rclb inc xor mov lock and inc call sahf and fldl push add fmuls call push lock hlt sbb popf mov fldl push dec fstpl jne or add inc xor inc int adc sbb (bad) out push ret and inc and pop imul add in and js cmp adc (bad) fstp pop (bad) bound inc movsb mulb cmc push mov cmp push jo jecxz xor and test xor xchg or mov xor and out add add push add add aam sub add je test sbb add jge adc (bad) xor jo or add sbb loopne push je push pop mov add and ret aas add sub sbb mov push pop ds pop cmp adc sub jmp push iret movl add (bad) lock xchg sub xchg adc push and enter bound int3 fcomip xchg or mov ret adc adc enter call mov stos inc sti pop ja hlt or mov fsub sbb (bad) stc add test mov mov aad sub push inc jae daa mov and mov sbb imul addr16 adc mov popa jno mov adc adc les test sbb jl out add dec add mov fldl add stos sbb test push ret sub adc push push imul inc or ss adc add pop imul pop stc inc (bad) adc inc xchg xor adc push icebp adcb add imul test push xlat sti sbb dec add aam push or sahf push (bad) inc outsb add orb add popa jecxz or push movl adc lret sbb dec dec sbb jne mov shrb ds and add adc push cmp push push xor lahf js pop adc outsl aam xor imul sub lret sbb push clc mov or inc imul sbb or or mov ds mov add mov inc dec clc xchg adc repz mov enter push adc mov sub in addb add sub sar icebp scas mov adc push pusha xor js inc adc int ret adc fcoml inc inc adc addl fstl mov add or pop pop and add sub int push cltd inc mov movb pop sub and xchg adc lea nop push add dec in pop and pop adc add or sub mov sub jecxz add mov sub lea outsl or pop rorl add jb adc mov push adc bound cwtl or push xchg mov sub lea mov lret add mov movb sbb xchg (bad) lcall push add sbb inc dec fwait push cmp and orb adc jns jl add adc jns push lods or repz sbb adc or and xchg loopne add push sbb push adc or lahf jmp sbb in and aad adc jecxz es and mov jae mov jmp sub add sub mov add test rorl pop mov sub incl mov push mov jne stc enter test xor push test pop cwtl mov push ss js insl cmp add adc (bad) test aam movl hlt mov and daa inc or sahf adc sbb sbb mov sub or mov lods jo jl rcpps out sub enter inc loopne lcall addr16 dec xchg xor rolb icebp dec pop xor subl mov pop jnp into adc hlt fistpl insl add dec shlb sahf or rclb push cwtl mov xchg adc mov jne jne sbb popf mov mov js insb sbb test mov mov daa jb (bad) loop lea sbb dec mov mov rcrb fucom mov mov lds cmp dec jb leave add pop add ljmp mov insb pop orl adcb mov mov cwtl shl popa mov push rorb int jl add push pop or adc jb pop add cmpsl add push mov add cmpsl pushf push mov addw cbtw mov adc adc fnsave push pop popa xchg push inc add mov jo or dec or int mov test inc pop pop xor cs popf imul lret ficomp icebp aas adc pop xor inc (bad) (bad) ds adc push jnp sbb test add (bad) aam sbb add out dec je insl fcoms pop mov add mov pop or jne push in push stos xchg add mov jno pop sub (bad) pop mov add dec add or inc adc mov push std sti ret adc es scas jne mov inc and popf jae test jne faddl movsb mov adc pop mov push movsl jo push add push rorl mov rolb sbb fsubs mov dec rolb sbb xchg pusha cmp aam mov sub cmc or cld test test cmc inc es sbb outsl push adc movsl lods je (bad) hlt inc movsl adc inc or push jo ljmp test mov adc or or (bad) add test mov xchg dec out push mov xchg lea adc add ret mov push pop xor lahf dec or test (bad) cmp push (bad) pushl mov add mov cmp loopne lret dec pmaxsw or adc (bad) call and add lods add aaa ds or dec add pop push add or packssdw xchg in aam cld add nop bound movsl nop or push push cmp roll ljmp cwtl adc adc dec test lahf mov mov push out or mov cmp nop push pop mov and xor ja xchg lock cmp in and add arpl xchg mov sbb push pop stc and out xchg push popa mov mov sub jne or stc sub sbb push ds mov fadds pop sub add es cmp and mov lods bswap nop movups pop push or ret pushf mov adc pop (bad) pcmpgtw sbbl adc adc lods (bad) push push (bad) adcl jmp sub push push lods add mov loopne jecxz xchg test and orb push jle sbb cmp jne lock or mov and mov dec cmc cmp and add mov add sub push mov pushl push arpl pop enter incl cmp xchg ret inc or add mov test xor inc loopne push pop notb fmull add push mov xchg sub pushf lods inc sub push shll inc cmpsl aaa and and adc pop pop loopne popa movsb pop mov or insl movl xchg cwtl jecxz pop mov and jne cltd mov lods mov jo xchg and sbb out push cmp cmp loop cmp push pusha cmp in aam xorl cmp inc mov add mov xchg mov push jbe cmp or clc add rcrl negb outsl movsl inc int3 mov pop rorb scas daa les pusha jo mov arpl and cmp (bad) sbb adc adc (bad) idiv sti ret cmp push add inc or pop jp sub sbb cmpl xchg mov dec repnz push push pop push dec mov or jbe fnstcw jo dec jno mov inc pop stos add sti loope stos mov insb aas inc pop jo jl cmpsb jge adcl gs adc sbb sbb and or add sub sub push and adc inc push test mov xchg push adc mov movsl push adc sbb test les lahf mov add lahf imul rcrb inc xor insb push clc mov push scas dec mov add add out pop jnp leave ret add outsb js xchg push mov inc (bad) lock xor pop lock add mov sar enter inc sar push (bad) aam fwait jg in or push pop dec and popa call cli dec mov ljmp repnz (bad) loopne movsb fst and pop jo fmuls mov mov cmp (bad) cmovb fiaddl cmpps and mov pop leave mov (bad) in int3 jecxz or and or xchg jg leave (bad) xor jecxz out mov and or nop jecxz pop or out push out mov adc jmp inc dec jae add ss inc xor lock icebp nop push add and in pop add in loopne imul orl movsb mov lods and pop repnz incl xorl cmp (bad) test pushl mov ljmp inc repnz repz or cmp pop push lds ret test imul cld cld pop add nop and leave and cld and adc push in imul inc repnz cmc int3 and jb xor add or jns add negb fistpll jb cmp jg insb add fild inc (bad) mov sub sbbl sub dec aam push adc add lea push inc pop mov mov add or or xlat lea fildll mov mov sbb mov jg mov cmp or add outsb add fmull pushf or mov xchg insb mov fstpl jp outsl sub mov xchg rcr cmp adc ss and adc jo add inc dec lea sub sub and cwtl add mov repz mov (bad) cmp fdivs cmp dec and (bad) divl push xor (bad) push pop or and adc mov add jne lret pop int pop ret ffreep or or ret and mov jl pop jnp clc gs mov or xchg add adc add add or flds inc xchg aam pop and shrb in (bad) or adc lahf inc (bad) fist adc add into and mov mov divl sub adc pop lea pop mov pop push inc sub orb mov or add enter sbb nop pop xor sarl dec dec add aam inc dec aad aaa loop mov pop mov xor scas push add sub add insb or ljmp inc test and mov sbb xor movsl dec dec sub fcom les mov pop inc stos jne pop cmp pusha push xchg mov lods jge sti arpl nop xchg mov pushf adc je mov xchg cmpsl sbb test inc or ds pop (bad) mov int3 movsb inc insb add sbb inc and pop mov movl or mov dec outsl (bad) repnz addr16 xchg fist or call cmp add mov pop js jg dec sbb pop sub mov cld or push rclb cwtl add orl int3 int bound add push or pop and popa add add rcrb (bad) sub insl gs jmp push inc aam inc adc adc sbbl mov sarl cmpsb sbb jne or cmp scas inc rcll aam in sbb push cmp xchg adc ljmp je adc scas lods ds push sub movsb arpl sub jge (bad) mov outsl add mov push mov popa xchg cmpsl lahf cltd bound je add icebp push pusha add movsl fs adcl push sub jp dec lock or mov mov rolb sbb or and in pop jmp push add cwtl and lock add jmp cmovns inc movsl fstpl outsl test or xchg clc or ss jl push rorl test add lret add fnstcw mov lret pop adc and inc cwtl xlat scas pop sahf sbb or stos dec adc pop sub inc sti outsl dec pop dec cmp push cli popf or ret dec and add aad push std adc jle es mov dec inc jg mov cmp jne daa orl push mov arpl (bad) adc and and inc add adc push jge rclb cmp or lods jae and push bound cld push jns sub push and sbb pushf fisubl and test ret push adc push or or mov mov xchg adc push sub add cmp mov push push lods mov xchg pusha sub or push xor adc xchg cmp add je jecxz das and push adc (bad) (bad) mov rorb jae add movsb (bad) fild call push adcl (bad) shl das pusha ret test clc (bad) incb add cmp xor and mov aas stos loopne jmp jge inc popa les jmp jmp push cmp push push mov mov mov fs lcall cmp jmp inc adc xor addl dec shrb testl mov add adc add and clc cmp push enter and add or inc loope mov mov dec sbb or xor push push push pushf add ljmp adc dec or aad adc pop inc add insl pop in push push inc or test jmp lret inc sbb lea push adc shrb cmp pushf int3 add scas push sarl or dec pop sarl jmp push add fs subb cld xchg pusha jo adc dec cmp je mov jb in pop inc bound mov sub lock sbb mov test xor mov les jmp dec push push add mov fsubr push in mov inc adc push (bad) and mov (bad) je shlb jmp or xor (bad) inc mov aam aaa pop inc mov sbb sbb mov ret shlb popa add rolb xchg sub cmp lea test je inc (bad) nop push inc and fadd pusha mov (bad) mov popf jl lods mov lock (bad) jo or push mov xor add (bad) sarb mov sahf out lea ss inc js mov xor je mov or add lods pop outsb sbb mov add sub adc pusha jmp inc push and add sbb fs adc loopne loopne xor and mov rcrb add int3 add test lds add arpl or inc (bad) vcmpord_spd fsts mov and cmp mov mov jo into push addl adc ljmp dec test dec adc adc inc sti push jecxz adc dec mov cmp push sub push push loopne movsb sub mov xor out push ret jb and or in jecxz xor inc and in inc or mov dec sub and lock ret nop or sti or push and inc in ret xlat inc stos in (bad) icebp leave (bad) inc pop push add mov push test sbb stos sub or test xchg femms popa push sbb test mov sbb or lods dec pushf outsl dec and dec push fwait mov lock sub inc jb jg adc xchg add mov inc repz or jg adc lock or jg loopne xchg lock jne push rclb aaa inc add adc or xchg xchg cld lret test ret xchg push dec shl arpl mov lahf inc sbbl orl mov sbb jns fbld leave adc mov mov in push pop ljmp xchg insl sub or cmp xor xchg test mov arpl and sbb push aaa aaa push add jg fmuls ret loop (bad) mov movsl roll test and rorb add jl stos cmpb xchg popf add sbb jmp adc jp add mov jae movsb out std dec (bad) push or jmp gs (bad) adc mov adc add xor leave lods pop add leave dec mov (bad) shrb sahf mov andl dec mov bound adc push dec pop or mov fstl sub add mov (bad) pop leave or mov sub pop add rorl add sub inc dec push inc or iret xchg mov repnz movsb add mov push scas (bad) adc adc bound adc mov xchg jo add push push adc push enter je add add xor icebp scas inc adc imul ljmp les aam jno cmpsb sub sub mov fsts push push pop lahf push insl mov insb add mov push pop mov ret orl xchg scas jge icebp add mov sub jge and (bad) xor sub cmp lea iret nop mov inc dec mov add sbb leave scas dec sub xor sub jg push mov pop push jb xchg sub test push dec popf mov rclb mov sbb adc cmp adc sub adcl dec push pop js stos add mov loop mov mov lcall add or sub and and lcall inc test adc sub and jg and push sub rol sub or pop shlb shrl xor or push dec (bad) mov insb or lea mov mov ss vsqrtsd jg xchg mov inc add imul adc rclb dec ret (bad) jno cmp test clc push pcmpeqw sbb add mov sbb mov popa cmpsl pop mov ss movb call cld (bad) loope inc les jo mov inc stos add jg adc (bad) pop sbb dec jp xor lret mov nop ret stos es sub (bad) and pop mov inc jmp mov pop or push xor sahf xchg xor in lods or jo pop add fnop ret xor mov stos mov mov fldt add mov aad inc ret xorl push pop mov pop or int3 ret add (bad) addr16 rorb sbb sub (bad) sub dec clc ds repnz in inc add cmp jo test jl jmp rorb push or test rcl outsb cmp sub scas call insb enter rolb jb adc ffree lock movsb hlt cmpsl pusha nop pop and mov fcmovnbe pop lahf adc je pop aas pop add sub mov and inc loope push aaa push sbb mov push or sub or push ss sbb add cmp xor pop lea mov add cmp and je jecxz cmp xor sbb dec test (bad) jb into and pop popa imul (bad) out lea pop or idivl inc cmp jne cmp fimull repz popl addr16 call or xor xchg mov xchg nop pusha mov or sbb or pop sbb jp xor inc jl pop data16 clc and mov pop cmp dec xor add xor jne push movsl push or and xor jmp mov xor lret adc pop mov xchg sbb adc mov clc or mov addr16 cs cmp (bad) add jge or dec or pop push jno out outsl lret jle sub push xor mov clc push test mov xchg loope dec sahf stos repnz adcb jb pop mov loop hlt mov call into dec cld jne mov adc inc xor jmp scas mov cwtl pop xor xor push mov and stos push icebp adc notl push fs inc enter mov inc loop (bad) or jne,pt sbb jge,pt add xchg fsubs mov aaa insb movsb mov aaa jns mov and inc add or inc (bad) push rorb sub ret jae dec je mov inc xchg cmpsb dec dec and and mov adcb in and fcomps jg add sbb mov loop mov daa adc push add sbb sbbl sub xor and xchg dec jns pusha mov dec adc je jo jge cmp sbb or sub inc lds lahf adc imul cmp push inc fstps jmp fwait ljmp ror push sbb add ljmp or mov daa and dec mov or pop add xor into inc (bad) aas test adc adc add aas cmc push dec gs mov add push jle test or cltd sub sbb push mov and mov push stos scas sub jne jp sar inc outsl and inc adc adc adc or dec dec sub adc jns jmp add cmp sbb mov daa sbb in jmp inc fcompl xchg pop push add xor je xor adc inc dec arpl call mov or addr16 mov push mov adc out adc jbe jb andl jge add dec sub or (bad) sbb push aam sbb xchg inc cwtl lcall fdivl pusha das jnp mov sub pushf and mov fiaddl push aam cli add xchg mov add loop movl in rsqrtps out inc cmp push or inc xchg jge jae insl out jmp and mov xchg dec fildl and mov and or or cmp popl adc dec xchg or pusha mov rcll lret sbb ret (bad) dec sbb in mov in xchg add addb test call movsb loope insb movsl mov mov outsb push rcll inc pop andb (bad) fprem test dec mov xchg mov out out or cmp cmp mov shlb rcll rcll xchg insb lock scas xor cmpsl cmp mov rcll inc jecxz (bad) cmp cwtl adcl test adc arpl sub test push pop add lods sbb adc sbb dec or fimull inc inc add adc decl iret jbe lea cmp je sub rclb rclb movsl lods lock cli xor inc mov dec notl insb in in mov lahf pop nop jl xchg push lea push bound fisttpl fucom jl or and js sub ret pop fist xchg push rcrl roll adcl loope push jbe mov mov ljmp loopne je je aas sbb or ss les ljmp pop jae push inc xchg jle jo pop pop pop add lcall xor pop push jmp jns (bad) dec ret pushf push inc popa lock inc jecxz clc lea sahf cwtl and add jl cmp lahf stos stos stos sub test sbb adc sbb lret addl lahf arpl mov and add lahf fsubrs addl xchg movsl mov dec mov cs adc cs lds mov xorb insl (bad) sarl push or in imul addr16 sub addb and iret lock fmul xor xor mov clc mov mov sar arpl cmp (bad) (bad) xor pop rcrl pop or jo dec rorl call or pop int3 ret loopne adc test inc cmc adc mov hlt adcb jbe mov add (bad) jbe out xchg pop add js xor fadds fistpll cmp inc xchg adc and jae jp jns xchg pop lea or inc pop loope or cltd mov add xacquire push shlb js fbld (bad) xor stos popf and test enter scas hlt mov mov cltd in das cmpsb mov fisubrl push lret mov add or mov pop dec cmp clc ficom rol stos mov xor dec push add inc add pop adc xchg and shlb jns sub inc leave aas outsb mov test mov xchg out add add adc sub jg push popa cmp cmp sahf ds push inc js mov orl and mov pusha call loope jo leave add or adc mov stc push (bad) adc (bad) cmp push lock mov in push aas shrb rol inc mov movb clc jnp rep cmp jne pop test mov mov fsubl (bad) in mov or loopne popa (bad) ds sub xor lock inc xor icebp out push jae add cmp aas pop pop cmp sub mov sbb or xchg pop pop or nop push and jge inc dec dec out pop repnz rorl mov leave push lock int3 dec or popf add insb or mov xchg inc sbb or sbb jns cmpsb add and push jb cmp jmp push or cmp jle or aas inc mov in test push jnp aas sti jbe and add add mov xchg (bad) repnz add imul int3 dec mov xor and or test inc (bad) mov ffree mov dec inc and push pop leave je jmp push insl loope sub movsl test aas lahf sub mov sub (bad) cmp push or cmpsb and inc push pop cmp cld mov pop lods sahf mov pop scas and mov mov or movl push push iret add and jg adc add mov lea insb sbb (bad) cmc pop mov mov or xor or mov push sub aad adc mov inc sub and shlb xchg pushf and push inc stos outsl test pop or in arpl jns sub add jae cmp mov dec jmp pop and push xchg lods cmp fcomp popa sbb dec ret dec adc lret pushf and je dec lret xor loopne pusha popf add jle mov sub cmp dec adc adc sub adcb xchg push orb pop mov mov test push add xchg fiadd cmp test push cmp sub cmp adc xchg add jo test imul add or call sbb int3 push imul aam test push or sbb push and push pop (bad) fmulp popa or jecxz push pusha ljmp jno loopne adc pop fildl inc and mov and or push add adc or add orl xchg pop mov jl js nop repz sahf pop mov sbb das dec lret or add xor mov push and popl sbb or imul add fnstenv mov popa xchg movsl loope std lods dec mov frstor mov add or bound mov popf mov mov pop pop loop arpl cli mov push mov fsubr sbb jle mov pop jl dec in int3 pop or mov mov sub adc xor cltd cwtl (bad) aam aas mov mov sti jne mov cmc sbb loopne ss rcr rol add and and in (bad) sbb adc push out mov jge (bad) or popa lret or cmp xor mov cmp sub dec pop daa mov rolb cmpsb xor jnp (bad) fstps xchg xchg mov add lret mov lods add lea add add inc sbb or fsubs sbb outsb cmp daa or and xchg stos mov add push sub push add xchg and mov lcall mov subb xor inc add in mov add and and je dec cmp loope loope cld cmp fs push push jno pop pop out push or mov cld aas push push jecxz mov pushf add and sub inc (bad) xor gs xchg subl and aas mov bound sti add das mov jns sub push sub and subl mov adc cwtl pop cmp inc and rorb imul sbb dec lea sbb or subb push subb sub add push jle lea dec inc dec or jno and arpl in imul ret repnz add pop loop es and (bad) adc push add xchg ret aas jo or out add mov adc push or mov xor dec mov add out leave sub xchg pop sti or ret (bad) mov dec sti test movsl add stos pusha dec ret or sbb push sbb mov repz push stos out pop push or int mov sub add jo push addb aaa ret push jns or or sbb test add addb and and xchg mov sub inc dec adc pop jne mov sub andl aas icebp push or cmpsb or and movsl jge and xor inc mov push popf int3 sbb mov dec mov or add and js cmp call mov test or add sub fwait add lods pusha call add cld (bad) add mov add mov push insb hlt fadds push mov dec push clc xchg inc movsb aas add cld ljmp enter sbb mov test mov lods or enter je xorb imul cmp std imul sub cmpsl adc int mov mov inc loope shlb shrb cmp pop leave cmp icebp test or or addl addb mov mov mov add shr jmp or test adc and js jno sbb sub push mov (bad) lret fiadd dec (bad) daa and jo addl lods orl loope dec clc push mov shr test or dec rorb jb fs jne in xorl xchg jo add push notl cmp push mov jb push pop push stc aaa sbb adc push add adc add and movsb xchg cmpsb addl lds jp jae inc aas push dec sbb gs sub jg xor lea push push or push jg xchg add dec (bad) mov pushf leave pop test movsb mov xor mov mov test push sbb add mov mov push push sbb add dec add cmp jmp push cmp xor mov or xchg and mov add aam xor out adc sbbl inc xchg cmp out fs xor or add push mov mov adc xor xchg sub (bad) or ror stc adc addl mov mov (bad) xor pop xor fsubr push inc sbb inc iret addl push jg test test adc or inc std mov imul sub jecxz cltd jp mov sub imul aas dec sbb and ficompl shlb hlt shrb es jge push pop (bad) mov aas mov push push push jg leave mov out push and mov es sbb add shll mov stos dec add ss and push adc adc mov test pop popf and or cmp add xor outsl inc or add inc add sub xchg and dec push push push sub movsl push rolb dec push and xchg movhps popa pop imul mov pop xadd popa and push sbb push pop or ret sbb or rcll xchg data16 jle out enter aas sub pop inc mov xor xor in insl add pop add or push pop lds (bad) xor and mov test test mov push adc je ljmp int3 fmuls inc and repnz ret popa mov cmp xor add icebp mov add sbb loopne andl cmp outsb in add std stc inc sbbl adc idiv rorl and scas mov dec (bad) shr jl ret adc clc loop sbbb adc mov inc notl push xor sbbb push adc adc inc adc fnop and (bad) lock mov dec sbb loop sbb adc pop cmp dec or push mov dec push dec push sbb inc icebp test push out or and fs add sbb push (bad) xor sbb leave (bad) hlt sbb adc or roll push mov mov add roll inc stos mov inc sbb fcompl sbb cmpsb sbb in sbb jbe jo rcl and addb aam nop mov mov mov inc pop and xchg and leave test pop push inc out add arpl inc fiaddl sub add pop ret test loope and push iret xor xchg push int xor xchg das adc add stos push imul mov xor aaa jg or mov jecxz or adc test sbb inc dec imul sub push dec and enter outsb sub cs push jo fiadd xor pop cmc sub lcall mov push cmp pop xor jne repz adc movsl (bad) outsb pop add fild mov loop shrl cmp and mov add and sub andl inc sub or sub adc roll dec test adc push cmp lea mov pushf and adc adc sbb orb stc cmpsl mov add js (bad) cld adc or pop and test pop sub pushf rep add mov inc pusha mov rclb addr16 les add push add xchg pop jbe mov cmp js mov lcall push daa add add insb and add dec mov inc xlat add pop xor mov or jns mov or adc push test loopne push add push add sub sbb add sub or pop (bad) in out es pop mov fcoml enter jbe pop inc dec push jns fmull cmc bound punpcklbw incb icebp bound push aas jge arpl sbb dec ret cmp cmp rcrb and xchg insb es mov bound or dec ljmp popa xor adc mov inc sub cmp pop add mov jge sub mov dec (bad) push add sub (bad) mov nop mov lods lea xor loop push push push or daa xchg bound cmp loop adc test pushf call cmpb lret rcl les lods iret sbb sbb int3 add add jle mov insb jg add add and cmc pop outsb arpl out jecxz (bad) scas sub mov test outsl enter outsl insb xor stc fprem add push ret xchg out test pop xor xor sub dec or cmp test scas cwtl jne mov jnp iret call xchg cld xchg push sbb cmp iret or jge loopne xor aam mov fsubrs pushf sub rclb or dec icebp les ficompl sbb orl int3 cltd jmp pop andl inc dec pusha inc pop pop sub jns stc enter in or popa lahf out (bad) and pop pop enter dec jmp jne inc (bad) std rclb loopne push mov and adc inc add (bad) push mov ss dec pop add daa add ss xchg mov mov cld movsl int3 mov xchg dec call fs arpl incb bound scas cmp pop into mov mov inc idivl mov mov lahf int3 mov mov mov push mov push fstpl mov mov mov sub xor and shrl stos sub dec call loop movsl sbb (bad) add mov loop add jnp sbb enter xor mov iret cmp movsl sahf fcmovnbe (bad) mov popl enter jecxz aas and outsb je jo jg pop and xchg adc adc in push daa aad or add push sub push push jmp arpl jo xor aam mov sbb cmpsl aas push loopne add xchg aaa jb xchg mov lret add pop or lret out jbe inc add (bad) out jb inc add mov mov (bad) shl std outsl ret and into xor add rorl add adc pop push push jmp pop pop cs cmc inc jne mov orl push mov lds jns pop test icebp add ret jmp cmp sbb adc xchg (bad) mov pop pop add xchg push orb add in aaa sub fsubrl adc fcoms sub xchg sub xchg pop xchg xchg xchg jp mov or xor push cmp xchg or rcl sbb or loope ljmp test bound es imul rdpmc nop push les dec pop push add adc (bad) je int pop push pushf jp xchg mov mov cli hlt and leave ss lock popa lods fistl sbbb or or mov pusha add pop in adc or xor rclb lods dec sub xchg sbb cmp std add or insb in push outsl movsb mov mov insb mov xor add sub mov and pusha add sub xchg js in mov or mov test shlb mov add ret clc hlt jne (bad) mov mov push or (bad) lret dec lea sarl icebp ret cmp push push test pop stos inc aaa or daa mov lea adc mov xor dec add pop adc xchg or pop jbe ret sub push pop cmp mov add inc sbb cmp inc xor iret loope fwait and or sub sub stc mov mov icebp pop xchg mov jae dec add xor loop lock aad mov mov push or inc sub adc and push push mov lea mov aam in sbb xor or xor add or stos stos adc mov add lods ret push sub mov cwtl sub psrlq andl aad shll arpl inc insb sub sbb fnstcw xchg mov inc mov adc repz mov in xchg cmpb hlt movsb sbb test mov lods stos in loope xor adcl pusha movsb leave inc cmp mov fcomip dec sub xor lock pop clc push push outsl xchg ds dec add shrl les loop push push push xor add and test and daa push rol dec mov shl test stos inc xor (bad) sbb cmp repz add ja push lea test mov xchg rclb sbb inc adc orl xor (bad) pop sbb loope sub imul sahf or je cmp push dec dec (bad) adc add and cs cwtl loope sbb inc sbb sub stos shll push push mov cwtl (bad) nop or cltd ror inc or jmp or sbb lahf jno cmp and push arpl in jo jae xor push cmp adc sbb pushf das (bad) iret push jo dec inc shr adc or dec addl test inc inc inc sub mov rol dec xchg and jne inc pop popf inc push inc ret inc sub inc push jo sub inc xchg jno sbb pop adc imulb mov mov mov lcall mov stos leave lret cmp xchg mov pop nop out rorl push nop andl adc cltd dec dec fiadd into dec xorl pop push adc xchg iret adc fisttp adc add rcll adc xor in lret mov gs dec orb or sub inc dec in xchg or dec dec dec pop test mov (bad) lds jl lret inc or adc and pop lahf fiadd fildl sub mov inc mov add iret push icebp push aaa cmp out and sub pop mov hlt cld sbb push sub push repnz jno test push push rolb or add enter lahf fsubrs add dec jbe mov adc inc pop or inc repz push or push push pusha test push leave push sbb cltd push push push roll or movsb int3 xchg add push lock mov mov idivl mov jne sbb mov mov inc cmp xchg jl ret pop push and pop pop pop jp and push jmp call repz push lcall cld and jge call enter mov cmp mov mov ret rorl xchg outsb mov mov test inc xchg movsb dec and and fstpl or or push jnp fnsave test pop pop cmp or sbb pop inc imul leave add js pusha popa and jne push dec arpl or xchg pusha xor or jecxz mov in sub cmp cwtl orl ja push lock jne in mov xor test inc mov add jg mov test xor adc sub add sbb push lods xchg lret mov lods mov jecxz mov xor mov mov mov and push inc pop xor push adc mov orl inc and push cmpsl (bad) jge mov dec cmp xchg push and push rcrb loope inc lcall or jns mov add cmpsl push xchg lea (bad) mov cmp sbb bound enter mov loope jg cmpsl adc leave daa insl xor sub int add cltd sub mov push jno add sub inc mov in dec xor aam dec cmp fwait aam mov push cltd and arpl add and dec adc push pop xor cs xor movsl lea sub adc inc std push mov test imul or mov test cmpsb fs sub test into mov xor or pop cwtl sbb push lea jecxz or loope and in (bad) leave push add repz imul xchg mov rcll in push in xor add rolb (bad) jecxz xchg lea mov ja add xchg cmp xchg push mov jmp int3 scas cmp add mov addr16 sbb sbb push in pop sbb mov imul jo pop repnz insb outsb dec faddl mov scas cmp inc movsl inc xchg pop cmp loop inc imul mov cmp add inc add cmp and cmp (bad) adc or lods push aam ret cmp repz sub sub repz repz push pop push (bad) iret test fucomi imul push add add pop push add cmovle imul sub dec or inc fsts push push xor add imul test cmp leave sbb cli jno mov mov cmpsb push mov add clc rcrl push cmp call test push nop in add popf fs insb cvttps2pi push jl xlat push and add dec sbb shr and dec pop in push stc mov or lock in adc xchg or sarl je cmpxchg fiadd and mov aas dec pop cwtl loopne cmp inc pop fwait or inc jl lock add mov rorb out dec pop das pop mov inc cmp movsb (bad) jb les mov inc inc inc push xor add inc inc pop (bad) lods jl inc inc inc push sub (bad) rolb inc inc mov je popf inc inc inc cmp outsl ret loopne sbb cltd or test adc mov jns shrl ss sbb pop inc jmp int3 insb or out in repz pop mov iret repz pop push dec inc cmp cmp add sahf out mov int out out aam sbb mull loop (bad) repz repz ja jp pushf xchg dec jne add pop or inc (bad) incb movups adc add pop adc and and sbb and sub ret sbb push pop and test fs push lods dec icebp sbb movsb pushf mov pop mov add shrb add push push cmp cmp adc push in cwtl mov loop and pusha xor sub xadd dec xchg mov fbstp rolb add add fisubl fnop add pusha arpl pop bound (bad) int3 add xor mov sti xor push popa dec mov (bad) or and inc nop pop mov cwtl bound mov hlt push jecxz stos push dec cwtl push dec pop (bad) cli mov nop scas movq adc movsb jp mov add xor jno jg leave push test push push and fs nop ss jle test fs nop and rorl add je pop fs dec (bad) mov xchg pop dec cmp pop in mov ljmp mov cltd out dec and sbb outsl sbb push into xor andl int stc (bad) xor pop shrb add cmpsl mov cwtl adc or and push inc push sbb pand sbb push mov leave pusha shl or xchg dec mov or push sub mov cmp inc pop ja cmp mov (bad) xchg call in adc or fisub (bad) jne pop or sub cmp cltd nop jp adc cltd inc test add sbb sti mov jbe out lea sbb test adcl push xchg mov mov ret insb sub xor mov mov or std ss cwtl ss or cvtdq2ps jb mov nop int jno or inc push sbb sbb dec mov sbb sahf jg dec push push jb lods inc dec xchg mov and inc and mov jle jle add jle (bad) jbe inc jb add (bad) fdivrs push add or clc (bad) in test mov out test push sub cmp nop adc out rol rcrl or and add sub jle add sarl fisttpll pop push dec scas ljmp mov cmp call mov popa cmp dec or jne je mov mov les push out (bad) aam (bad) repnz push add data16 arpl mov push cmpsl fcompl loope adc push movsl xor addb xor sbb cli push fs push pop outsb lds pop push xor add and aad imul std or (bad) or pop push shlb pop xlat jbe test xor in stos jo shrl sbb ret mov andb or pop or push push orl lret cmp aam mov scas mov lea xchg sbb sbb xlat mov and mov push dec lahf push push ja sarl cmp inc ret das jo xchg or push mov (bad) arpl add xchg adc fdivrs (bad) push jge sbb mov add mov arpl outsl cmp int3 mov adc scas lret (bad) sbb sbb jo xor push mov adc mov inc push lea mov push adc add push push les pop jns xchg adc mov sbb xorl jp movsb into xor ret pop test xor push cmp movl lock (bad) dec les ret cmp cmp aas test fsubrl jne push mov adc and movsb push adc and ret inc in (bad) (bad) and mov decl pop dec sbb sub xor mov dec inc xchg leave mov sub adc ja,pn ljmp nop mov (bad) add or push sbb push je push cmp fimull jg (bad) lahf cmp fistp jge je pop inc inc cmp gs mov outsl (bad) adc cmp pushl cmpb test add xor cld jne jnp xor inc sbb jo rclb push adc nop icebp addl adc aas int xor sbb jb mov clc idivb ss xor xlat xchg add pushf adc or lods sbb push sbb aam movsb cmp or loope jge sbb idivl andl xor push dec xorl jge leave inc add adc repnz mov lret aas cs into add xor sub and push pushl fs es andl stos push lcall inc ret push sbb imul pop mov fstp push mov xor stc jne (bad) aam and lcall pop mov add lods cmp and test add push aas mov mov inc popf inc adc inc and xor pop sub mov (bad) or dec ljmp push mov mov mov incl mov shrb cld cs adc mov jnp or xor add add repz push es cmpsb cs sbb and xchg movsb inc jge std or add repnz cmp dec dec mov xor push add or jl jl sbb and sbb push test cmova push mov sbb (bad) pop test xchg adc xchg lahf fbld mov test enter sub sub jge rclb mov shll push into or out std (bad) cmp mov sbb aaa cld add and cmp xchg jbe out pusha repnz mov or inc mov sub mov and mov roll jne inc cmp jge jg xchg mov sarb mov push out and add data16 outsl pop fs decb (bad) data16 add add push (bad) call mov or push adc cmp sbb pop (bad) sub add int3 mov rorl push adc in pop push in pop and push pop in xor push pop ret push jae in sbb add jp imul loop shlb push clc push cltd loopne mov or sarl popa rcl iret and in lret leave mov inc add movsl leave inc roll mov or or clc lret aam scas inc fmull in add das cmp leave popa in sub or adc imulb pextrw sub daa dec repz and xor xchg sub pop xor (bad) fist lds test dec shl or inc sub mov xchg push and lahf add mov inc mov cmp mov pop dec es or rcll xchg inc (bad) xor push xorl and push cltd loope clc pop daa adc loopne fldl pop inc dec insl int3 mov mov xor nop fildl out xor adc inc adc in gs jns pop or inc push xor mov jb cmp ja stos mov adc cmp pop cmc gs dec adc dec xchg call pop pop and sbb clc mov xchg inc jno pusha cmp cmp jle nop sysret xor insl pop cmp sbb adc test add pushf pop es pusha sub aad sub xchg inc mov mov mov sbb add loopne (bad) or jb xor daa inc clc fsubl xchg adc jne sub xor xchg dec inc imul sub leave xchg push or (bad) mov test inc push insl or and sbb add mov pop push insb sbb enter rol and jg or leave fmull int lock cld lret cmp fmuls jg pop xchg pushf int3 sub and fmul mov iret ror xchg enter xor dec sbb (bad) imul aas or jo outsl dec das pop xchg add mov and fs push push pop push rolb outsl xchg addb dec clc xchg adc lods or and adc push adc add cs xor jbe sbb es inc call jo inc jb cmp dec andl jbe mov push ret sub jl insb mov fistpl enter andl mov lods and test lret mov pop jmp lock push cwtl cld jle pop add add repz adc adc adc and adc push mov fimul pop jg bound fildll push inc or push push jae or into mov inc pusha pop pop add scas bswap and or ror cmp sub adc push dec xchg (bad) (bad) or insl nop mov outsl rolb sub dec ret sbb mov sub or xor (bad) jmp add mov js add popl push or add mov iret shr sahf je xor into sub mov add popf xor inc repnz dec xor or je cmp fcomi int sub je cmp inc cmp and (bad) aaa adc (bad) xor outsb aam mov fdivs sbb xor add dec pop xor aas pop push adc xchg rcrb push icebp shl xor jne inc test es and xchg out mov popa sti mov push jmp sbb loopne push jnp sub and jl dec xor sub loopne gs cwtl sbb ret push adc (bad) enter push xor orl cld dec cmp push dec cmp bswap mov and xchg and aas or mov add and adc add enter xchg mov adc adc imul stos inc je adc fidivrl mov sbb adc lea add adc loop and dec or ss mov sti mov cmp fldt sbb stc sub loope sbb cmc mov cmpsb loope and outsl or insb out and roll xchg and push push xchg dec add js lds sbbl push je mov frstor inc mov mov ljmp jne mov imul fldenv pop inc bound js or aas xor pusha xor cld mov inc adc stos jae jle subb imul and mov xchg cmpb inc fcomp jecxz out or popf xor adc and andl stos cmp add mov shrl lret adc sbb adc dec hlt push inc daa or in lcall sub and sbb ret pop adc xor (bad) ret lock outsl fsubrs hlt mov mov dec and pop dec add rorl test push mov cmp push sarb jbe mov add mov and pop jb xor clc (bad) cmp add add les mov push ffreep add das jmp stc mov sbb pop jne pop fldpi add and adc sar inc test pop (bad) dec sub push mov add in mov xor (bad) sbb or aad insb dec fsubp or bswap xor jp loop aad add mov in pushf push mov mov sub psrlw add test and pavgb mov dec (bad) enter mov mov adc lds ljmp iret nop popa stos movsl inc cmp in je test push push sub inc fildll jb jecxz in jle or fdivl mov add pop es mov lea push add shrl add loope mov add sbb repz aaa je nop push mov rolb aaa jno or or enter mov wbinvd push and (bad) aaa or xchg pop xor sbb movsl fs lods xor cmp or ret loope push pusha scas scas dec std rorb aaa pop fmuls xchg push cmpsb sbb loope add dec push mov jbe hlt pop jnp add xchg js and outsl add outsl and mov sbb sbb pusha push lret and pop mov cmp cmp ret push sub mov push push sbb and xorl roll rcrb aad lea (bad) dec scas push push xlat repnz sbb mov mov adc pop or pop aaa push pop int3 inc mov mov cmpsl sarl push mov or pop jo dec add into leave dec add jl fs jecxz mov xor loop or or sbb jg mov adc or push les pop sub je mov (bad) int ret daa add cmp rcrl sub sbb jo adc mov sbb xchg lods clc push inc icebp jle push and dec loopne cmp adc cmp add push xor aam sbb and cmp cmp mov mov lret adc fwait out cmp jp and push add je mov into inc add orb pop sub adc sbb or fisub mov rcrl add xchg addr16 mov add aam lds push (bad) ret inc and mov xor ds jmp mov sahf inc xchg repnz mov scas pop out (bad) xlat or scas lret cltd nop push xchg and dec lds or popa sub dec cmp mov rcl xchg mov add out lahf mov packsswb out pop or ss or mov lods jae cmc push sub movsb test or sbb push mov inc mov or test lea jl sub push inc xchg cmpsb negl xor lcall push mov inc fidivl mov adc jecxz push call mov mov xchg adc push in push fwait cwtl push push or sbb or in xchg jnp or xchg sbb loopne sub add cmpsl sub into scas in and fcoms pop cmp jae jne cmp pop sub mov outsl xor js cmp xchg sbb add sbb mov push dec add cmpsb mov in movsl (bad) jbe mov movsb add fs pusha or dec int3 pop sbb sbb push add inc add aas cmp sub add in pop cmp js cmp inc lds movsl push stc lock (bad) out (bad) mov pop push inc cli pop sub sbb pop push sbb lea push fisttp sbb cmpsb mov sbb push lret xor mov dec clc add jg push sub fbld sbb and pop test add (bad) and mov sub jo fisubrl adc xchg and leave add mov and mov loopne push test ja mov cmp ljmp (bad) xor imul mov add push scas enter xor pop push fwait imul xchg sub shrb subl or addl lock xor push fs jo ret or adc int3 jg jne add (bad) cli mov sub scas outsl andb pop sub push dec dec mulb fcoms pop cwtl dec sarl pop pop jle jnp push cs popa push mov cmp shrb xchg pop push add mov add lock inc cmp jl cmp or jge sub mov cmp imul (bad) xlat dec add das sbb inc insl jl (bad) cld sbb add inc or loopne mov or insb xor sub mov and dec mov and cmpl mov cmp mov mov fadd and call sbb repz push push imul mov push lods dec in adc sahf add leave nop lahf add addl xor add xchg daa dec xchg pusha and movsl pop nop les imul jl inc pop lea popf mov sbb icebp push adc dec adc add mov or add cmp jl push adc addr16 jb inc fist sbb leave (bad) push mulb add lahf iret add clc pop cmc dec lods push push mov xchg add test fs mov bound mov lea jne bound mov sbb jle push testb dec and push mov inc inc lcall sbb add mov push push (bad) lahf rolb push inc daa jge das push xor jl lea xchg sbb lahf cmpsb push push inc sub ja add xor sbb push (bad) lds dec (bad) fdivr mov push loopne inc lods push and test inc dec jns mov aas pop or testb push push mov jo,pn mov pop cltd dec or jle repnz push push mov push test dec push adc jns and popf dec popa adc cmp xchg in cmp pop push jae pushf sbb mov imul lea xchg and ljmp push adc leave or adc xor or movsb lds push scas es lahf jo rclb mov ljmp pop les pop add and fdivl push fild sahf inc sbb and mov push out lea add (bad) neg in in xor push imul popl shr in inc add shlb adc in orl xchg xchg scas fmul or add push es adc xchg repnz aaa xorb push dec add push and jne imul dec adcb mov movnti lea loope dec push push mov jb pop mov push push or (bad) rolb shrb in dec and pop mov (bad) xor hlt inc lret aas adc fistpll push add inc clc xor xor push popf mov adc dec cmp mov rclb adc lcall mov and sub sub mov (bad) hlt inc outsl mov imul mov imul lret lea ror dec jo lods test dec cltd test push cmp dec lret insb add cmp xchg lea orb add or sub xchg je cmp sahf jne mov je jnp or enter add (bad) push add mov call push xchg adc pop push mov mov (bad) inc int3 add cmc cmp inc dec adc (bad) jo jbe ret mov aas test xor cmp (bad) push int3 jg idivb mov je push jl test test add test adc push movsb jg loope sbb adcl xor inc sub mov mov sahf rcrb push pop jecxz repnz or dec and sbb push xchg xchg sub in pop mov in and adc inc dec ret or add gs cwtl aad sub xor and and add inc andl xor sub sub dec cltd mov in sub shrb push push inc js inc imul xor pextrw cltd mov fwait aaa mov add dec ljmp add xchg inc push notl rcll fucomi mov xchg inc or xchg sbb xchg (bad) mov scas or pusha or add lcall jg jno test inc adc add jl ror jp sbb add adc mov dec add inc mov mov add mov mov jg ret lds mov mov cmpsb icebp imul pop add cmp mov nop pop and scas addr16 mov outsl mov dec cld adc test pop fwait rcrl test cmp jl adc and or jo cld pusha add fbstp dec ja pop mov test cld mov loope xor cld pause decl jne sub ficom add mov sub dec add adc push mov shrl jge jo jns jae adc mov push cmp je sahf data16 cmp lahf sub inc or jg sbb add (bad) xor mov gs fstpt push add mov dec lock scas ficom fcmovbe insl nop mov mov add mov pop lock inc popa aam rcrb sub adc push loopne test xor adc (bad) dec enter pop inc popa and rorb adc sub rorl adc pop or enter popa sti inc rolb aaa mov push or sbb pop adc mov xchg inc push lock (bad) cmp (bad) sub push sbb orl inc insb lock dec int3 xor icebp dec push nop add or add das js sub push cmp adc pop and sbb dec stos mov pop les push push cmpl (bad) inc push cltd dec les mov and (bad) or mov adc imul cld psadbw test cmp jne pop push insb (bad) jne or mov jp pop outsb fs jae adc inc adc sbb mov divb and and or inc (bad) cmpsb jno cmp imul mov sbb pop sbb loop push jo xchg outsb add mov adc nop pop lahf adc ret pop fcomps and adc das jg stos sbb sub test mov cmp hlt stos or push rorb pusha xlat sub ja xchg stos ret ja mov sub add lock pop mov ret jmp es push je sti push jmp mov dec xchg mov mov out dec add and or in or repnz test test hlt cmpsb (bad) cmp (bad) mov jge lea xchg enter test mov add shrb (bad) or and push fwait cmp sahf mov lea push sub dec cmpsb stos and adc and adc fildl xchg xchg pop cmp hlt jp push cmp adc andb call test cmp push mov clc mov inc jp je movl insl add les or add mov lret loopne pop lcall or mov push and fnstcw cmpsb adc dec int cmp push adc cmc or jl push lods push stos (bad) or (bad) out cmpsl add (bad) std push std push clc out lea lea or sahf lea cltd fistp and or add sbbb sbb fstpt jbe sub lahf cmp fs dec and push sub push lods or mov lock js ficompl cmp pop arpl or mov lods cmp rcll add (bad) lock cmp push hlt push shr inc add add push dec les inc ljmp or and adc cmp fwait (bad) and mov pop (bad) sti dec mov cmp sbb aaa shll xor out add mov insb ret add and push (bad) lock add test test add jo adc rcrl xchg mov dec insl sbb clc adc pop ljmp adc sub loope inc or and orl xor add stc aam mov cmpsl repnz dec aam rolb fwait xchg jbe add lcall adc inc jbe std mov mov scas mov mov fimul inc xchg push out roll inc daa insl pop inc mov pop sahf test jne hlt mov lea xchg addb push push jl push or xor pop add ret ss fmul rolb cs sbb or sarb cmp ss inc dec add push or (bad) inc and (bad) and notl sbb mov adc cmpsl cmpl dec pop mov test fcompl mov lcall adc addl dec mov cmp mov pop test add int3 push sub fs (bad) add or add xchg mov orb xchg sahf adc in pop daa xchg js or adc xchg or hlt pusha dec push sub das enter aam add sub jb or aaa push adc sti sub push lret jbe test mov mov clc jp push popl fistp test push addb xor push mov shlb mov fidiv xor push in adc pushf adcb (bad) push (bad) or fist xor cltd dec movsb and mov mov or adcl pop arpl fisubr lea in data16 lret adc cmpl sub cld inc xor stos xchg pop xor fdiv out and push dec repnz push loop fiaddl jl shlb dec loop mov iret sub out jle hlt jns pop add cmp jg out into or sub jo jb stos add add xor pusha jne or insb mov (bad) pop mov and and lods lea push hlt xchg dec mov lods mov inc (bad) test loopne js sti nop ljmp or hlt jo and call mov add mov clc insl xor sti or invd push inc ds rcl dec out push push push lret aaa es push shr fs dec (bad) and in jne sbb or in clc jg,pt pop cmp inc jl,pn or in jge fsubrp add adc add push xchg sahf jne pop xchg jle or aad xor add scas or jmp add ret jbe lret add int lods dec into sbb je add push mov or push add adc pop fsub std pop in mov sub push ljmp push push (bad) mov punpckhdq dec add ds mov fiaddl imul and add or dec mov and mov jmp and mov xor clc sub clc add mov mov nop cmpb inc add mov mov mov inc (bad) add aam test imul (bad) adc dec push pop aas sbb fadds or fcomp ret mov test sub inc stos mov inc enter mov sbb mov inc sub mov pop loop sbb push sbb jl mov jle int inc cmp cmp mov inc frstor sbb lock pushf insb dec adc and add (bad) cmp add lret mov jb jmp test xlat mov push aas cmp rorb inc adc jg out clc cmp jg pop scas jmp ja clc jg add add push xor lret jp sbb xchg ss jl jg jne mov sbb cld int3 or push lea or (bad) jbe je (bad) mov pop in (bad) or test mov pop lds add sbb (bad) clc mov push cs or mov ja je mov add scas pop mov add push pop mov aaa inc mov jae push add mov lea fcomip lods or xor lock mov (bad) (bad) mov cmp ficom test or jmp push stc xchg mov dec sbb (bad) mov add inc call (bad) pop shl orl sbb cmp out int3 bnd jle scas dec imul sbb fucomip call je jg mov xor pop rcrb adc jo sbb leave call push pop je aas xor mov dec cwtl bound xchg push inc cmp loopne shlb cmp ret das push mov (bad) dec inc push mov mov push push pop mov sub fucom out jp,pt xor push (bad) (bad) cmp mov inc push add enter push inc mov mov (bad) test (bad) lahf insb mov mov sbb mov leave jecxz int jnp lcall pop insb nop xor js jle push clc inc sub in fdivl inc iret loopne xorb jp mov (bad) std and andl or lahf push push arpl sbb test mov cltd inc js ret out adc ret lea test pop inc add pop fs pop ret and fsub xchg cli add shr pop xchg sahf ret pushf cmp out rcrb sahf pop add ret jbe ret sub adc xchg ja mov ds cmp dec add mov lret xor scas roll mov aad xchg push pop or add (bad) test sbb push pop push mov mov sarb sub or jns xor in pop dec insb sub aaa lock inc or push rclb and gs jmp mov mov pop in lock mov pop cld or and add add jl mov dec clc sbb xchg (bad) jae lret lea ret push sub add loopne add mov pop enter pop and ret lds fldl fistpl in das mov cmp dec add int sarl rcl sub call dec sub inc sub sub adc or divb or insl (bad) bswap xchg enter and xchg dec xor adc add cmpsb dec sarb adc pop arpl xchg xor mov mov jbe fnstenv mov pusha inc mov lea dec sub les int3 enter lock dec mov add mov sbbl cmp cmovbe jl sbb fisttp mov fist fs jmp pop push sbb mov aas gs push or je lods xchg adc mov mov fdiv cmp push out scas jl cmp pop cwtl inc cmc add or inc in out lret push push add push push and inc add fistl orl mov push enter or push mov push cmp adc das (bad) in or lcall stos cmp and addb jnp xor inc mov aas mov in mov or ret and dec inc mov push pop dec pop (bad) insl push cmp dec mov in pop mov roll add add add sub loopne mov add stos daa mov lock jno stos pop xchg (bad) jns add inc xor mov cmpb roll test arpl hlt fadds push lahf adc call or out shr cli test pop fimul inc repz imul sbb add lcall push or dec push mov rorb sarl lods adc cld inc adc jl dec dec fisubrl fmuls sub mov ljmp inc incb pop cli adc jmp xor jae sbbb aad sbb or pop aas or pop lretw ret mov or add mov (bad) fcom rcrb add dec jmp dec leave rol adc jb or daa fisubr ret push inc enter (bad) movsl ret lret or mov ja idivl (bad) sub xchg ss clc jae fimull push fdivrl mov add adc gs in rcrb mov jne push (bad) jbe ret push push in and mov lds icebp pop push xor repnz add hlt pop lcall inc leave add loop mov jmp call dec dec pop cli lea popa pop jo cld cmp (bad) xor push (bad) jae shl or jp movsb jnp jmp jmp loopne clc es mov jge xorl popf xlat rolb das in bound dec or adc push (bad) push test sbbl cli sub or xchg add aad jecxz out fmull mov rcl movsl add jl ret test ds dec lea scas cmpsb inc imul mov jge pop add push lds dec xchg mov dec roll fsubs sub sbb jmp neg fidivl rolb inc cli add jl sbb push cmpsl jne,pt mov int3 push mov and and xchg das sub mulb mov movswl push rorl stos inc jg nop pop daa test cmc shr pop lea dec xchg in je mov sbb sub lods pop jge cmp add jae in jae adc incb fmuls sbb pusha pop data16 pop and shlb pop idiv pushf adc mov sub incb push repnz pop add and dec mov mov xchg jo mov dec mov dec leave gs iret mov pop arpl inc enter mov sub scas push or jmp incl cmp nop xchg lret rcl pop sbb inc scas addr16 or mov pop lea xchg (bad) imulb leave adc add xchg pop pop jl and arpl and inc (bad) mov mov dec mov ds dec add movsl cmp pop sbb sub adc fmull mov movsl mov pop std test sbb (bad) mov lcall insb (bad) add jne push rorb js lcall (bad) (bad) mov add adc shlb pop xor sahf in adc in fimull (bad) fidiv fcomps rcll cmp mov xchg clc fimull dec jle incl pop jne bswap jge pushf or add dec cmp xor mov jns add lods test push dec lods (bad) int3 xor dec jmp push push add ja sarl mov fadds mov fnstcw mov adc faddl mov push data16 nop mov ffreep ret pop lds mov xor loopne jmp inc adc cli pushl mov cmp mov dec lcall sbb aas sub xchg and out movsb call xchg std std add xor inc xchg xchg hlt hlt sbb jb jmp xor push jge test push jo push xlat and mov or jl mov imul sub sub add je fimul es xor dec mov mov das movsl (bad) out leave and fldl aam imul push jmp or or inc inc js pusha mov test add jne add insl xor insl cld pop adc test jl lods sbb fstps jo push dec jp enter sbb inc cmp sbb iret in inc mov pushf jne aam mov ret rolb aad test clc ds sub add pop shrb adc mov leave arpl pusha sub fprem1 pop cmp rcl xor loop mov loopne int3 push ret mov cmp fldt push push pop xor (bad) add mov dec sbb push leave jne es bound add sub stos dec clc addl hlt scas sbb rcr je mov loope imul and sub and mov rolb nop call mov push add mov or mov jae shrb stos js jbe jae leave pop add adc xor fdivl sub test insl push add fnstsw adc and in rorb aam xor pop add ljmp aas loope inc lods std adc cmp das adc sbb mov repz mov push sub sahf int3 gs aam inc mov lock jl sbb adc ret es push sbb pop mov sub or adc subb les ret sub xor adcb dec (bad) iret mov push mov shll mov (bad) fisubr mov jle subb shrl movsbl or mov push lods inc and mov leave xor rclb stos jno ret jg insb mov adc pop decl pop cmp push test scas cwtl mov xchg test outsb aas scas test pop rorl pop mov notl ficoml mov inc shll stc orl pop (bad) test addb cmpsb xchg mov jg mov shr push andl and pop (bad) fimul inc inc addl or movsl push je ret inc (bad) loopne lock adcb fsubr adc ljmp lods push in in or pusha ret test out insl pop (bad) je xchg sbb mov lcall adc add cmp out nop nop cmp js cmp out or (bad) fadd or cmpsl sbb lock push push pop push std push pop add mov add inc sub rclb and (bad) clc and pop movsl jp int3 (bad) lea jb xchg pushf push lock bnd dec es inc xchg fwait cmpsb cmp enter incb repnz push loopne add mov pushf mov and adc inc and sub sbb mov mov cwtl lock push shr push jg daa adc fisub leave aaa mov cwtl rclb ja clc in add scas add lret or cld pcmpgtb les sub add fadds jecxz pop fbstp mov imul push shrb je pop lcall sbb and dec xlat push scas pusha nop pop jecxz adc xchg inc nop push test es adc stc jl cs add sbb movb dec jo fisttpl rcll jmp lahf cmp ret push in add push xor cmp (bad) jne push sbb dec sahf cltd and in call fwait into out cmp lret leave jbe adc lds data16 fldt clc mov xor sub pop add xlat jp or xchg jmp or addl sbb lret test dec loopne leave scas mov (bad) mov push lret int pop jge out or enter mov xor and int and xchg xchg or fdivr lret or cld add and lcall popa inc and test xchg lods add aad divl push xor cld sub cmpsb push ljmp or pop add pop adc bnd das and rorb lret mov test pop add jmp fdivrl fistl pop push xor inc (bad) add add jne add into ljmp lods push adc lods hlt rorb jl mov addl mov fsubrs inc add jl sti pop and add and jb lock or sbbb xchg xchg mov iret xchg cwtl dec xchg fcmovnu (bad) mov jae je inc mov and add jns mov push gs test xchg nop sub adc mov rcrl inc mov mov dec add cmp pop orb test lcall pop pop push dec ss pop andl add mov sbb adc cs insl cmp sbb add insb mov mov jo hlt call (bad) xorb or and add inc imul push jecxz dec sti addb in mov ret or add loopne aaa arpl enter (bad) arpl lock cli sti lret js jno push (bad) xchg notl inc mov adc lds mov fmul and and in (bad) jge orb dec mov sbb inc jg add dec add xchg cmp sbb cmc and leave std lret andb mov daa sbb into mov or ror repnz sub push mov and xor lock out test cmpl adc jns adc adc add pop movd or call and iret xrelease cmp in push mov rol insb dec hlt push bound dec and mov or xchg (bad) pop lret mov fstl enter or add pushf enter loopne in ds jno (bad) adc jl fidivrl adc or nop mov adc push sbb mov in mov je jbe jne sub mov dec push cmp sub data16 ret add add cld aad mov lods (bad) loopne cmp imul outsl movsl lea or fmuls push add fmuls call or fstp aam sbb jb fisubl (bad) gs adc push jne (bad) ljmp (bad) (bad) mov push sahf xchg push sub cmp scas or cs push push mov (bad) hlt dec jnp inc ja or inc cmp mov jmp jne dec cs add mov add cmp in xchg xor xchg mov add lods inc xor or sub pop dec lret stos mov mov lea imul ja subl arpl orl call cmp mov cmp mov mov xchg inc ret dec mov push xchg lahf jmp orb mov subl inc rcr dec mov mov lcall (bad) lods mov ror sbb mov fsubrl mov xchg (bad) sbb xchg jo and xor enter jmp cld jmp fbstp jmp push or nop push int3 incl push or mov inc xor cld xchg in mov pop pop push and test sbb lea sub das inc add inc cld data16 test movb inc push xchg mov (bad) mov ds sarb mov and mov push (bad) xor and sbb mov nop cmp popa add test adc cmp and clc adc lock stc add movl and sub pop std pop in cmp addr16 lret loope test les shl int3 dec mov (bad) test and (bad) xor sbbl jl xadd or das sbb pop in enter rclb xor sti add pop or fchs add popf cmc and mov pop popf (bad) xor ret push mov jnp mov adc push imul mov xor pushf or xor mov jge add lea sub lahf inc mov lds shrb das sbb stos into popf mov jl sahf call push push adc test mov mov jge pop push add stos pop push lahf inc pop mov sbb adcl sbb sbb and cwtl jg lods bound cmpsb (bad) into lea sbb fnop inc inc inc dec push mov ror (bad) icebp mov (bad) enter ljmp jo xchg mov inc call and pusha push mov fcoms jecxz movsl push addl mov and js or add hlt lods sub mov jns sub jge push jae jo mov stos add imul or push fdivl and adc and das mov add mov mov sbb jae cmp xchg scas dec loop cmp jmp ljmp jbe push pusha xlat leave sbbb cld leave lods inc xchg loopne mov cmpsb in push and lret ss inc ljmp aad enter in push cwtl xor xchg sub mov xchg inc cwtl push aas imul jne movsb nop fmull ret roll test lock inc js dec inc or rcrb jmp clc popa clc adc lret pop mov push add scas or pop sahf test mov push inc clc add in dec mov rol and rcrb jmp outsl or lret (bad) cs lea and loopne ret push stos movsl push cmp mov or push pop shll add aas sub out jo or cld dec cmp jge dec mov push inc inc arpl add out push or add imul pop jb mov jne lea wbinvd push movsb lock rolb mov xchg bound inc cmp sub cmp add fsubrs inc pop adc shll fiadd push dec or cs xchg rcl sub mov push leave sub fs dec push loop rclb xor inc push outsb jecxz xor (bad) fwait mov add mov mov imul mov push loope pop fdivl ret lea pusha nop lds or xchg (bad) dec cmpsb or (bad) adc in fsubl xor add fisubl add push dec jmp push push cltd dec xchg rol sbb inc lods xor dec jno mov inc jbe push jb sti jge xchg sub xchg pop add cmp mov mov add fs mov lret add cmp sub adc inc sbb jecxz icebp shrb inc sbb xor adc sbb sbb xchg jg push jp test pop xlat or sahf imul jae (bad) xchg mov stc inc (bad) addr16 fidivrl add cli aam adc sahf aam lock adc xchg lcall pop xor sbb inc and fs add mov hlt mov push add push cmpsl push pop mov xor jbe inc adc sbb jecxz repnz iret test call pop sbb push js movsb leave js loopne fbstp pop adc cltd cmp xor rol les loopne (bad) loopne jge fsubl and rclb pop push xor mov or fdivrs mov out add ja xor and inc cmp inc popa movsb nop/reserved nop sub push pop mov adc inc mov std mov xchg test inc and and mov pop xchg mov xor add mov xchg sbb test jp xor sbb or sub or movsb loopne push xchg out movsl inc add xchg adc loopne test data16 pop xor sbb sub aam (bad) mov inc loopne pop (bad) xor sbb push sbb or pop fdivrs inc dec loope lahf or nop (bad) enter cmp inc and mov sarb pop andb dec add add mov rclb sbb (bad) adc dec inc adc push sbb (bad) fs test and and insl pop xchg add add leave lret and and jl fbstp orb add mov add in or ficoml or jg sub add inc adc fldl pop adc mov pop lods adc sbb pushf mov lahf movsb fisubrl push cmp cmp mov push jl or leave pop sbb or lds add stos rcrb jb ret dec push pop out mov insl clc adc add and dec cmp (bad) out adc push push push outsl push push and sbb pop mov mov ja loope xlat or pop mov pop sbb movsl addb in inc das or dec mov sub lahf add push mov pushf sub mov adc xor insb bound push call es mov mov loope popa ffreep jns sbb test dec push sarb mov and inc mov or jl xchg sbb dec in loopne xchg adc imul xchg mov and pop (bad) push mov mov jns jmp push in idiv inc jl push out fisttpl mov cli add jmp dec cs ret xchg ljmp adc or mov sub add fcmovnu popa rorl clc cvtdq2ps or lret mulps xor aaa lods xor sar int (bad) cld addps insl lcall into jle inc xchg sahf imul js adc sbb and dec jne push ret adc or push outsl loopne xchg cld mov (bad) jg ja sub dec mov add lahf test sub fdivs lock lcall (bad) sbb add incl xchg xor movsb and cmp and test dec lea mov test add sbb push push gs fmul movsb mov lcall lock jmp call mov scas cmp xor and xor shl push lock dec add ret add add clc xchg push mov fbld test mov sbb push pop movsb rcrl clc mov inc xchg and fsubs (bad) xor cld decl cld cld adc sbb add sub sbb (bad) pusha test mov and dec jno shl ja xor sbb mov mov insb xchg xlat out jge adc jl push sbb aad xchg (bad) jg daa dec push dec cmp sub sbb pop jp sbb and repnz or ljmp movb lock movsl mov aas xlat lds lods sarb fiadd dec push stos fisubrl push clc xchg in xor push (bad) in jge addr16 jo popa or adc or inc (bad) icebp add hlt adc gs sarb sbb fadds jbe lahf sbb cmpsb cmpl movsb xchg jle or lods jnp loopne xor sahf test xor pop jnp ror scas lret inc push mov xor sbb (bad) (bad) mov add mov xor push push dec adc test sub lahf cld jecxz mov clc enter push lods or sbb push je push rcr andl dec mov sbb movsb sub mov sub test clc jmp cs xlat pop sub mul sub inc dec shll add arpl jg mov add ljmp mov push sbb insl inc sub mov xor pushf adc mov xchg adc jo mov adc and or adc adc sbb in or sbb push dec or lock fs add rorb in ja cli mov test mov lea lods fstpt bound sbb pop sbb or sbb in mov push fstpl jmp lret push or pop clc xor comiss scas pop or add call xchg jnp cmp mov daa adc cmp pop adc push cmp ret hlt fldl xchg mov or or inc mov jle loope fld out ljmp xchg lods ret push mulps pushw ja sub or adc sub aaa fiaddl decb pop push push loop or dec inc push sbb mov xlat hlt mov inc das dec sbb lea pop sahf jne add movb movsb lock fmul add in or adc test xorb push adc dec dec add or add push lret lcall outsb hlt jne dec in std mov sbb mov sub xchg in loopne nop dec enter jp inc imul add mov rclb cltd mov call in mov cmp in mov sub in daa and lock push push ja inc popa cmp xchg inc in xchg cmp mov rorl mov incb or push pop mov ja add add scas adc mov add cmp adc mov pop call push mov and leave hlt lock jmp je mov cmp (bad) push add cmpsl sbb in ret inc fs fmull shll test lea int3 add fsubrp xor add call adc sub sbb sub dec push xor adc fld fsts push orl sub pop dec add pop sub incb pop mov mov pop mov sub or pushf mov pop mov pop jno push mov pop mov jns adcl ja jno inc insl pop (bad) jb leave sub rclb mov mov not add dec and (bad) xor mov pop push pop xchg insb lret xor out cltd add inc testl pop sbb aas fisttp sub push mov or cli push loop fsub (bad) out jmp mov push outsl ret push idivb or mov pop add cmc pop add dec mov js cmp jg sbb add sarb adc mov mov ss les fcom int push (bad) adc or (bad) mov jne clc add xchg scas mov or iret dec adc lea sbb pop adc sub outsb (bad) jno (bad) and hlt ficom mov or jbe inc jmp es xor or mov inc cld add jmp sbb scas mov add add add mov mull mov inc clc sbb adcl roll (bad) subb jmp xor loopne push rcrl lret cltd push mov add pop push lods les xchg inc dec push or cmc jae sub jp push in imul jmp sub ljmp adc ret cmp test mov xchg sub mov mov sub dec adc int mov jns jp loopne std and inc cmp dec sub insl cs pusha jle rorb (bad) push call push ret jns pop add lret lret aam je cmpsl jbe aam jl dec cmpl les loopne add (bad) cmc inc lea insb xor push adc idivl ror enter loopne icebp push sub jb (bad) out add mov dec pop mov addl add xchg ror lret pop data16 adc jp inc cmp sbb movsb pop xchg test mov arpl mov sub test push inc aaa add add popl pushf pop dec sarb addb (bad) xchg popa add mov adc sub bnd loopne dec iret cmp subl test jb pop (bad) fs sbbl pusha fstl outsb sbb or orb daa rcrb push dec movb push mov into sbb inc mov add and jl lahf bound hlt cltd mov pop and sbb mov add push cmp aas xchg shrb (bad) repnz xchg push mov jo inc orb insb inc jmp aas sbb sbb xor pop jge and jmp (bad) sti aas fchs push idiv aas xor lcall aas ret popl test mov loop and and add ljmp mov lea imul fwait add rorl jo ror mov cmp jb cmp mov mov cmovs dec add insb out dec adc mov sub add mov pop in or inc push xor call xchg push add add inc sbb ficompl rclb pushf mov and inc jb and loopne pop jp ret or adc push push sbb sarb fdiv fldt sarl xchg add loop dec or add xchg in xchg sbb xor out orl dec fldl or jg cmpsl pop sarb add aam fdivrs in ror or push lcall dec mov adc rolb cmp ss mov mov add ljmp into jmp mov jmp dec jl xchg rcrb cmpsb (bad) mov and out jp or sarb and mov mov pushf lock arpl lock int3 and sbb outsl add dec psrld mov add leave inc cli pusha jne ret xor inc mov mov mov popa js mov xchg bound sar jge and ss ljmp add out fs mov push adc mov jg mov scas loopne xor test mov push je iret jne adc rorl jns (bad) mov mov xchg push and jmp and mov sbb jmp lods cltd leave mov mov sub adc add rcrl jmp divl (bad) pop and and rcll jle lea pop in xchg imul dec aaa sbb and movsl dec cmpl jbe or mov adc and (bad) or push sbb xchg xor mov lahf add or sahf jnp xor ror or or push sbb addb addr16 js push call or int dec pop push int3 add sarb or mov adc cli ret sub aam cmp fisttp xor data16 (bad) cmp fldenv push jg push loop sbb int cli push jg or fstl outsl int3 jne xor sub add push leave xor repz and xor or xchg jnp enter movsb in loopne mov call sbb (bad) rorb mov mov adc add sub sarb mov sub dec loopne add les jecxz jb or mov push subl xchg adc adc lds jae ss stos push test mov pop and xchg sub mov mov add add cld jne cmp add test jge jmp imul imul fs and mov jp or and mov inc jnp xor and add or or test mov outsl enter out fiaddl and ret rcrb inc and mov or (bad) rorb dec pop jnp subps add and mov or jno sub inc loopne or lds notb jmp js aad add ret jle pop adc add into adc mov jno out mov jmp loope pop loope xchg ss nop sarl insl jmp popf es lea jae jae and js gs lea in repz pop mov mov sbb push mov or (bad) out adc push rorl inc add push or imul cmp movsb test pop inc (bad) or ucomiss sbb add push push jp cmp or (bad) adc and and add xor dec (bad) jnp adc add cli aad repnz inc push imul add call cmc repnz cltd or cmp sbb push movb xchg dec or js rorl ja lock fisttpll loop adc out faddl mov aaa mov jno cld pop or pushw push pop mov and xchg bound loopne into sarl jge,pn in xchg js sbbl xor js jecxz cs xor cmp adc pop lock sub add je fistpll push ret repnz cltd mov push xor (bad) jne xor or xchg fnsave sbb int3 fld1 clc mov cmp xchg movsb cmp xor es mov cmc add insl (bad) stos loop repnz or or or (bad) jle push scas mov inc dec or and inc and jbe loopne lods (bad) push push loopne mov imul lea clc mov popa sbb rcrl shll insl loopne (bad) aaa push rolb mov popa pop push xchg cmpsb ss aaa mov add pop jle pusha shlb subl sbb fwait mov and in and jg sbb push mov xchg (bad) repz cmp sbb push or pop cmp push data16 or sahf and jp or pop movsl movsb insb mov xor mov sbb inc push lar push aam sahf sbb add add (bad) mov add inc int3 push pop lret mov jne cmp lock fbstp rclb adc (bad) jbe or and or sbb (bad) jae cmp push mov or lret in roll lcall add xor sub fs jmp inc push add or nop add or nop cmp in cmp and adc out or add out xor sbbb xor rclb adc or xchg pusha cmpsb inc xchg mov stc push loopne inc add push or call jg adc sbb jecxz rcl jmp adc or insl (bad) jle sarb sbb push add adc inc lea adc enter ret or dec jne popa or fnstsw jg pop rorl push imul not xchg push pop add loopne push xchg mov mov add rcrb clc scas add test xor sbb pop mov or pop xor rcrb clc (bad) repnz sbb loopne sbb sbbb insl jo rcr in dec sti out je mov gs pusha add out jmp addl or leave in call hlt xchg sub mov outsl lea pop fidivl cltd hlt andb lods pop stos pop xor or fstpt adc mov mov mov or sarb dec mov cmp or mov or or (bad) icebp xor jl idivl jp add push mov adc cld imul mov xor outsb xchg scas loopne fnsave ds dec xor push lock nop pushf pusha or jmp add leave (bad) lock or push add popa jmp lods or xchg test mov ret jp insl in dec add dec jmp add call sub in mov add gs adc ds inc or jo scas in popa mov jge or mov or push sti rol mov or fdivrl nop rclb ds and push jge,pt push cwtl loop das enter mov xchg xor mov jbe fstl mov jp and push cltd sti (bad) (bad) ljmp pop clc sub nop jnp jne jbe adc mov or lahf and adc nop rorl test sbb push push lods stos adc pop push sbb mov inc or inc or xchg sub ds xchg ret push fldl sub mov cld bnd (bad) lds cmc lcall add mov clc test sbb test add nop sub sahf std inc pusha nop sbb ds sbb pop (bad) xor into repz add lods (bad) insb ja adc xchg adc dec xor jo pop adc or mov out pusha daa in dec inc push sbb or push mov mov cld or push std mov aas pop and test js jge lea and lahf cmp bnd mov repnz jge cmp push or xor cmpl or icebp cmp (bad) cmp jg lds nop and or dec adc repz jg cmp dec call mov adc in mov adc (bad) or jle sub and xchg pop adc (bad) push sbb jle test aas jg lock dec fsts les and jno push add push mov incl jo dec (bad) add mov inc js jo (bad) loopne shrb fnstsw or pop js mov loopne,pt das mov sub xchg jbe movsb and (bad) jno and mov int shrl push inc outsl (bad) mov movaps repz pop rcrb and rcll (bad) pusha dec shlb addr16 pop push xchg lods mov jo push lret dec faddl mov sarl pop cld push outsl jecxz and inc mov sbb or push (bad) mov data16 xor or stos out pop push and cmc sbbb (bad) pop add addl and jnp mov mov lret aam adcl jb rcrb jp call movsl add (bad) (bad) (bad) or dec repz ftst jecxz push jnp ds add sbb popf test push fcmovnu or xor dec pop repnz icebp cmp je popf into push enter pop pusha or mov xchg cmp jo dec cmpsl or push daa (bad) mov push daa push jb (bad) icebp add or shll xchg sbb lods and sub adc fs pop push roll lret or add hlt mov out adc add or jns adc pusha mov fcoml jb inc xchg aas mov and cmpsl add sub pop or lds jecxz sbb xchg xchg imull cmp clc mov mov inc nop imul bound fisub iretw push aad outsl add push or add adc rorb (bad) rclb jp out std xchg inc call out xlat das ret cmc mov out mov xor (bad) jne inc addr16 out nopl out call push jno js jnp dec repnz inc sub fnstenv add push mov inc iret mov xchg rcl gs push push add int3 out pop fadd (bad) or push imul fidiv and rol adc rclb inc jns ljmp in lret sub aad std cmpsb sahf mov add pop addl mov fldt mov xchg fadds sub clc lea and dec sbb (bad) cmp cltd pop clc mov cld mov lahf and mov sbb ret andb pop sbb fiaddl lods dec aam out mov cmp fnsave add push sti add stc pushf add dec hlt push clc xchg das sbb mov sbb mov or jmp xor xchg dec cld ja xlat in or dec out or add bnd pop stos jmp pop adc jno hlt or xchg sbb cmp ret dec mov pusha mov jge pusha pusha ja out sub cwtl cwtl sub stc adc lods mov mov shlb or popl leave loopne nop loope lds fs sbb jb mov test cmp jns inc jnp sbb mov shlb jnp das sub add adc push iret and jcxz jnp (bad) idiv cmpsb jp fdivrs scas and es fidiv nop mov mov mov cmp fcmovb and fs or test out push pop adc cmp xlat xchg sbb cs pop pop or nop rclb dec orb sub ljmp inc jmp add cltd mov sbb loope fisub fbld lods add jge sbb inc jb sub stos or sub cmpsl push sbb pop in loop cli sar ret xchg pop inc popa enter inc sub fxch pop cmp add in xchg mov xor sarl xchg or or inc mov call xchg push sbb dec into aas sbb pop lock sbb leave push mov roll jp or dec jne jne add xchg push mov fidivrl or add sbb pop ds pop test fldl mov adc jbe mov or push and outsl jl fisub pop ret negl mov (bad) pop cs or push xor ja call pop pop sub ficomp out das stos cs cmp push addr16 push mov adc fsts push (bad) fist cmc and incl mov push pop sbb pusha int3 dec xchg pushf sub dec sbb jmp imul sub pushl add jae ljmp les cs jg jmp jg jg push repnz pop xor inc loope test lcall xor lcall lret push dec sub movsb into xchg and test sbb push fstpl mov inc test mov (bad) push daa cmc and int3 (bad) jg lods inc push mov mov push push icebp xchg sbb sub stc lcall and push dec stos pop (bad) test jb xchg inc pop or sbb and push pop push mov test js icebp push dec add or jae push or pop int3 ss push xchg inc fdiv pop divb mov push jmp cmp sbb or add loop and inc popl or fidiv aam sarl inc in inc mull bound pop je cmp adc ret lds push (bad) roll or outsl push lea inc adc sbb mov add add das lea insl xor in adc lea (bad) push je mov dec jecxz enter push clc clc adc jnp cs or adc pop jno or cmp sub (bad) neg xor pop enter pushl dec add or inc mov adc inc sbb adc dec dec cmc sub add jne mov pushl mov mov cltd loope cvtps2pd pop sbb cmp clc rolb fadd shl jo lock add enter cmp sbb lahf ss xchg inc inc push nop push add mov jg cld push inc adc mov adc push dec mov xor ljmp add and inc rolb xchg push notb icebp push cmp sti mov push sub inc jns lret call pop and mov jl js push loope clc scas loopne rol jno mulb lret inc dec dec dec popf jle (bad) or js cmp adc sub (bad) cld xor je loopne ret test pop mov and sub xor arpl ret add pop lock sbb fcomp (bad) mov testl mov sarl test or fnsave xor cmp shrl cmp xchg insl mov cmp mov or or loop mov push jl ret mov hlt add add cmp mov and adc popf test inc repnz xor xchg sub dec mov inc cmp dec test and lcall leave push add sub outsl (bad) test scas scas sarb mov sub es adc mov popf (bad) out and or and mov lcall adc loop or xchg data16 rcll push sub push inc addr16 push adc mov jmp jecxz sbb (bad) fcomi repz repz xchg cmpsl jge (bad) adc sub enter push (bad) ja lods inc and les dec inc test xor xchg mov cmp jb add jecxz add (bad) and push cmp or inc add xor sub ds cmp push (bad) aam mov les inc test sbb test xchg nop mov xor push ret inc push add les cmpsb mov (bad) dec push popa push xor (bad) dec xchg aas pop movsb mov das jg or popa cmp popa inc sti or pop add inc sahf nop pop sbb pop cmpsl or std mov adc lret xchg add adc and outsb pop dec clc stc sbb ret sldt (bad) adc mov inc or sbb push sbb or out and cmp push sbb shl jo and or lret mov sbb scas je in mov fs adc xchg popw or sbb jl or mov adc sbb pop dec lock movsl mov lods test xor pop xchg jo xlat xchg pop inc or in xchg dec or inc je fs and add or scas xor je cli cli orb daa add jb sub jb insl push mov sub jg adc test push cmpb pusha outsl jecxz mov adcl sub dec in lock cld jg subl push (bad) add nop pop add pop outsb jecxz dec or add add jg sbb pop sbb dec clc jg jo lea jne cmp pop mov inc and cmp add popa pop addr16 adc aaa jbe and daa cltd cmp push call sub add sbb jecxz and mov or enter scas add sub push int3 hlt pop int3 (bad) test jecxz push aam add xchg inc dec or pop dec getsec (bad) jno stos (bad) jnp lret push in daa pop les ret loopne dec enter ds jge sub adc enter sub push inc xchg and dec mov int3 inc pop lea sbb adc xor out shrl leave sub or jg inc outsl aam push sub inc inc shl jmp adc mov dec cmp mov push push (bad) push add or rcrl mov cmp adc inc mov bound js (bad) xor dec fmuls adc stos sub xadd or or xchg cmpsb imul call sub dec sarb add loopne negb in mov or and movsb pop mov or aam fildl shl push dec orb inc adc cmpxchg mov pushf inc fdivl (bad) (bad) mov fmuls inc inc fisubl sbb xor xor inc imul movsl pop jg add pushf mov enter jo jne ret bound pusha dec ret sbb ret sub pop scas sub jle mov push fs nop push movsl fnstsw lret cmp pop mov out (bad) cli jno aas push fstp out sbb decl inc and pop rorl test mov mov jae fcomp jp cmp adc or mov cmp pop inc cmpsb xor movsb out mov (bad) or cmpsl fcompl cmp popf fs test xchg fimull imul add push jns jae outsb push in cmp inc adc xchg fidivl add adc push mov lcall pop js (bad) inc adc dec test cs dec and mov cld cmpsb pop (bad) pushf incb pop fsubr adc fcomps adc mov aam popf mov adc push xchg ret (bad) dec sbb sarl sub sbb shlb sbb test or int jns push rorb fistp cmc insb loopne fadds xchg shl sti jo pop add add adc add dec xchg sbb lcall jg adcb mov std push and inc (bad) pop adc adc (bad) pusha cwtl pop test pop mov push out cmp sbb jp cmp (bad) ss inc cs shlb ljmp fidivr mov xchg dec pop mov flds mov clc push push jle cmpsl dec int3 out (bad) push pop xor push add cld cmp xor jb dec jne sbb jns jns push pop and sub aam data16 sub inc loopne push mov adc test jp sbb mulb xchg xchg ss pop addr16 cmp mov add ret movsl in out adc bound inc add jne dec dec arpl cld or pusha int3 in inc sahf fisttp in int3 inc les add kmovb inc add (bad) pop adc xlat fisttp push dec lahf push in (bad) into in mov movsb mov pushf mov xchg mov dec add pop push inc lods add andb enter cmp mov daa jecxz ror cltd test loopne jge mov pop inc outsl sbb adc inc outsb add cmp jne out in ret or sbb jnp lods lock cmp jne hlt mov aam xchg add pushf cmp orl cs jl xchg cmp sub mov ljmp mov mov and rcl mov add ret addb add lcall shlb je jmp cmp mov and loopne cmpsb rclb cld orb in jge mov xchg mov subl sbb xor jle inc test in xor xchg sub add or push add rorl push and out js (bad) pop subb sarb add rcll mov in mov sub in pushw mov mov inc andl xchg or dec and ficom dec mov addr16 mov inc cmp popa stc dec mov add mov adc mov repnz mov add cmp xor aad shrl jnp pop mov push adc sbbl pop add adc sbb shlb or add mov or add outsl lea adc es enter jno or test ja sbb push xor or or sbb aas mov add loope mov sbb push xor mov cmpsl mov loopne test jo sbb xor dec test lea loop add dec test (bad) nop cmpsb dec inc fistp inc cs xchg hlt xchg xor rcl or push inc loop sbb (bad) lea movsb aad inc loop dec cwtl pop xchg sbb dec ret lahf inc aas mov mov mov lock inc cwtl or repnz add cmp cmpsl mov or lahf sahf test addr16 dec inc insl mov xor sbb aam pop int test lea add or xor rcl test sub roll adc dec push push push in js sbb rorb aaa sti pop cli sbb dec jne xor rcl js shl call mov adc int3 or dec push cmp pushf dec jne dec mov out dec xchg out jns repnz test addr16 adc popa or in fcmovbe mov nop or inc cwtl dec nop fstl sti inc loopne sbb ror clc or sub cmpb cmp cmp lea orl mov mov ja push sub mov mov adc and cmpsb push mov inc pop mov cmp or or cmp cmc xchg xchg xchg pop ret sti repnz push xchg push test pop inc sub inc mov or mov (bad) sub dec dec enter sbb test out ljmp fs push out in adc jg jg xor and pop (bad) dec sub or dec push lret and sub ret push jmp test inc xor (bad) sarb xorl rorl jecxz add andw popa insb cltd push fcoms sbb xorl cmp pushf push and (bad) xor les add xor adcb or mov movsb xor fmul popl mov jl mov orl pop sbb inc xchg lret imul (bad) push xor adc scas shrb jne enter dec sarb aam movb mov pop cmpsb rcrb rolb sub cmp sbb cmp stos hlt and in hlt movsl dec mov inc fsubrl xchg dec mov orb push xchg cmp cmp pop aam pop aam popf or xchg hlt rolb push movsl xlat mov popf xchg lock sbb mov leave xchg dec arpl cmp xchg xchg movsb dec in sahf enter or shll scas out and xchg adc fistpll ljmp enter dec cs mov div sahf subl sub inc or mov sub (bad) dec scas lret mov pusha inc pop cmp adc repz or and in xlat xlat fs nop sub lret or pop add pop xchg mov cmp mov mov leave sub pop pop nop add xchg sub orl imul cli mov jecxz cmp and lock mov add mov std sub mov mov or out cli lcall and movsb pusha nop ja pop or mov push test adc je lods mov add in cmp mov pop sbb xchg xchg xchg mov or outsl jg fnstenv lret call ret neg xor mov mov insl loopne and mov push add add out idivb mov add mov addr16 inc sbb add pause leave xchg inc subb cmp aas jge jge add adc clc push rorl adc es movsl jno in mov cmp repnz ret sbb repnz add cmp cld loop adc cmp outsb xor adc dec xor sub xchg sub lahf lahf lahf pop and cmp cmp cmp fisttp (bad) adc inc lock insl (bad) flds xor insb das addb sub outsb xor mov sub add pop or (bad) testb aas or and xor adc jecxz in adc cmp mov or adc fbstp fidivrl pop push or cld shll pop decb sbb add pop add sahf imul push add push addl stos popa sbb pop pop xor nop dec sub push push mov add cmpsb jo repz jno xchg sbb jmp (bad) cmpsl inc jg mov (bad) sbb inc bnd dec imul cmp inc outsb add pop adc pop sbb in xchg adc and aaa cld aad push adc movups sbb or leave mov seta inc dec add or or xor xchg cwtl das repnz cmpl or sub (bad) decb and add fisttpll jecxz out adc or add enter inc cmp out loope jno xchg leave jnp ret mov add dec (bad) iret inc jbe ret icebp adc sbb test mov xorl cld xlat or pop or jae (bad) icebp lock adc add ret push lds clc into mov push adc pop mov or adc or push mov mov cs lahf push jb pop lahf lahf cmp push enter (bad) cmp xor mov rorl rorb and aaa sbb add xor add cmp mov mov lods mov in icebp mov cwtl add rorb mulb adc inc jle lret test out pop cmp inc adc xor or sbb inc cld cmp push adc in xor imul pop aas pusha fsubrl add mov add pop enter or push loope mov push xor adc andb mov inc lret inc ljmp adc ret inc pop add inc popf lret jl xchg movsl dec test pushf jne cmp fist sbb xor jo inc popf rol movsl jp sub pop dec inc mov mov mov imul out cmp pop aaa cmpsl jnp mov dec push jnp dec pop mov add add or (bad) jo lahf (bad) sahf push nop inc jl cs enter mov cmp addl adc add movsl pop out xchg ret jl lock dec or pop icebp cmpsl push sub (bad) ds or je test and imul sbb jb inc or inc push nop add push jp inc int jle dec sbb inc pop (bad) sub sbb aam or (bad) aas rol adc pop jl test mov inc lcallw adc clc add (bad) mov inc add inc shl cmpsb inc adc fildl js dec pop fiadd sub cmpsl mov cmp jge test add (bad) adc sbb loopne fistp xor out or jl add aam pop movsl cmp inc sahf movsl and cmp sub jmp lret shrl inc mov add lds inc mov inc test push movsl jle or push push cmp cmp inc or sbb and xchg lahf shll xchg add movsb ss inc or test push or or jl ds loope pushf cmp mov lcall movsl lahf cmpsl insb test cmp test fwait stos ljmp scas in mov cs mov dec aam pop mov pop adc inc sbb call jne (bad) pop dec aam sub add rolb pop into lret inc or inc lcall push and and dec pop add and or dec adc mov or sbb es ds (bad) call mov addl daa bound fcos fsubrs sub fistpll insl dec notb mov mov push mov ret scas test jbe aam (bad) jb mov xchg cmpl sub push daa test ret sarl addl and pop jno mov xchg mov push adc and cmpsb push xor movsl dec adc xchg or sub push pop add adcb fcomps pop xor rorb and jge ss mov xchg inc ud2 sub mov sahf pop sbb adc aaa pop fnsave lock add inc add adc jae xor inc pop xchg jno nop mov jge cltd mov aas inc stos sub xchg and cmp jae jmp sbbl pop mov inc push jb jmp dec lret cmp xor lcall mov ds and test push pop cmp cmc mov add inc ffreep xchg in push insl mov pushf push mov rorb sbb dec jp aaa cld push push int3 sub xchg gs sub cmc jb mov fdivrl mov (bad) out pushf xchg test adc lret sbb ficoml jg add mov mov cmp jne or jmp adc mov or dec cmp push inc inc xchg lods dec adc add scas ret cmp leave mov in sub insb imul (bad) mov and and add inc or sbb pop (bad) je adc cmp mov sub je popa xor mov sub sahf sbb xor sub inc rclb push mov xor xchg lcall movl or daa dec (bad) mov push jb addb push mov cli inc inc jo mov sbb addl jne push or or inc lcall inc rorb adc jno out cld and movsl scas cmc in xor push add mov mov sbb pop (bad) cmp nop mov adc in (bad) mov movsl jae xor int rcll in push mov sbb push cmc out cs lea lret xor add sbb jmp mov adc mov mov test leave sbb push xchg mov push sbb or out push mov js clc and push pop pop add in (bad) lea scas movsb je mov push and add push mov add and test stc std xchg call test in cmp cli xchg aam in daa push push sbb and rclb hlt mov lahf sub mov in add inc stos test inc jecxz mov push jns or lcall les sbb mov imul or inc test sub (bad) cld dec aaa fidivl inc pop loopne adc sub pop dec repnz push inc and mov xor int cmp or add dec add hlt inc push mov addl xchg (bad) aaa add mov xchg movsl and mov push gs sub or stos xchg pusha sub scas nop mov push addl addr16 push mov pop call or and lea (bad) and test pop pop outsb adc lret in in fmull lret pop mov and mov pusha mov xor pop adc push ficompl xor and add mov call rcrb add dec jmp jmp xlat mov mov adc push out daa dec dec adc xor fdivr xor dec adc inc xchg xchg push (bad) mov addr16 adc adc cs mov es dec rcrb or mov pop add test test dec lods es jmp push mov and add push minps cmp dec push push test mov scas ds enter xchg push cwtl in (bad) (bad) lret push add push es mov pop dec lods lock cmpsl pop stc imul (bad) xor push mov sub sub or aaa lock daa ficom cmp mov inc shlb sub add jbe pop mov stc imul xor or js shl fnstsw pop test sbb or xchg das popa insl stos andl sarb dec loopne or add (bad) lea aaa sub cmp push cmp jne call xchg fs xchg pop les fimull ret xchg (bad) jmp fsubl shlb movsl arpl push or dec xchg dec dec jmp jnp xlat pop add mov adc ucomiss add inc rcll jl add jns add add testb mov adcl mov push push test repz cmp in dec push mov push in inc lods (bad) rol mov mov or jecxz test mov adc inc pop dec bound mov sub bound rcrl pop or add push mov adcb scas push mov or cmp (bad) or cmp neg (bad) cwtl test loope jae pop (bad) clc sbb sub cmp cltd ljmp mov dec in mov add (bad) xchg arpl add and jmp xor xchg dec mov rolb mov (bad) rcll add xor outsb lret sbb or sarl xchg sub movsl popa mov mov sti test cli cmp (bad) or dec int inc inc mov or adc ret pop popa arpl sbb pusha movsl pusha inc or pusha dec cmp movsb pusha adc add dec mov inc or adc in lret testl pop rolb fprem idivb pop jmp mov ljmp lock negb sub popa shlb (bad) insl inc mov in sbb cld sbb sbb adc (bad) loopne in jle xchg lea mov and push mov sub lret ret (bad) cwtl ja push mov push inc test pop lea loop cmp pushf and sub and int sti add add and mov pop (bad) push imul loopne dec or push in movsl mov arpl xchg push push fcomp dec sti and push push les or dec sar jbe cmp fsubrs pop pusha mov scas jo inc mov adcb leave inc aas lea inc insl lahf aas test jno,pt sub or push popl cwtl movsl sbb sub je add cwtl frstor out movsb lods fisubr xchg into sbb test xor mov or pop int imul adc rorl add popf inc jge lret mov shlb shlb pop cli imul jmp inc imul push push jle in test dec ja push les dec add stos push ret pusha popf xchg aam (bad) mov (bad) mov jmp ljmp cmp aad or inc jge test xlat adc les outsb shl in jae pusha pop fwait cmpb xchg mov push xchg dec and push arpl lods std or je inc loopne fnsave and div sbb cmp mov jb insb push jns and adc jne es dec push or inc flds aam mov pop test pop push cmp push push fisttpl mov inc jmp ljmp xor adc (bad) cmc push out ret movsb lret push ss fldl fnstcw ja notb mov sbb sbb xor cwtl pop push xchg sub push icebp inc movsl inc add pop fisttpll (bad) xchg nopl aam imulb pop call jge aam test nop pop mov sldt inc dec lods cmp inc popf aad sbb fisttpl dec push lods inc push mov cmp add xor add mov dec and push adc sub xchg imul and lahf mov adc push lea roll add loopne icebp js test nop mov iret (bad) das rcll cwtl or dec push imul cmp (bad) fs stos dec cmp cmpsl cmp pop pop or sub or cmp push mov push and mov mov mov pop xor inc mov inc mov add inc iret cmpsl mov mov mov lds dec cltd mov (bad) movsl mov dec pop add sub or push and inc push or js jmp adc sahf cmpsl cmpsl inc xor add inc mov or (bad) mov insl add cltd add adc or add dec and add or add lods lret add add inc fwait cmp cmp mov pop pop andl cld push xchg push jge pop cmp inc bound push ret dec jns lds inc pop (bad) sti and dec pusha add scas mov add adc mov pop mov push cld pop stos jge paddsb xor test test or add or test fidivl and test push or or push push inc fwait or mov and mov cmp mov das out cmp dec or or inc stmxcsr pop mov fadds or pop insl sub out pop inc lods repnz (bad) and add add insb cli into rclb fcmovu dec pop (bad) push mov mov xchg and mov sbb xchg out fstl jb add jno std lods cmp mov (bad) test push xchg adcl ret sub movsb cmp sbb (bad) cmp push or cmp dec lcall test into dec aas jmp push push inc test inc iret clc mov or clc stc and lods jno mov out pop xchg push hlt push enter mov jl cmp sbb test repz xor inc into in jmp loopne xchg pop rclb sub jb test cmp orl add test addb push test xor dec add inc cmovg add test xchg cmp add aaa adc add sti add jge ret inc or adc pop adc add add nop adc cmp cmp sub jmp or and loopne add lods and xchg jg daa push pop xchg fwait daa pop push dec add test mov bound push or or jmp dec xchg mov push arpl xchg push clc lcall rorl pop push dec sbb adc (bad) popa sbb (bad) movsl jae adc sbb jb pop or je jns cmp xor lea lret cmp dec popa sbb bnd mov std fnsave dec sbb sub ss mov (bad) notl rcl inc add into test mov or mov cmpsl jecxz mulb xchg inc inc sbb mov cmp xchg or mov dec cltd pop aad inc jmp sbb je add loopne adc shrl sub or stc add in sti sbb je pop lret mov and les pop loopne out push mov xor rolb fwait sbb and imul pop mov lods cmc outsl (bad) mov lea push jl jb adc mov lret andl jl imul pusha mov lea xchg movsl mov push popa stc and mov inc pop dec fdivs shll into inc push mov cmc hlt pop loopne movsb and push xchg jo or lock (bad) js or dec popf pushf loope mov and into jne pop orb xor and mov inc clc test sub dec dec cmp add adc shrl pushf xchg sbb shlb out add nop out rorl ss jl push insb add push call add lods mov enter inc mov dec loopne xchg add push and xlat fadd sbb cmpsl push test jp nop mov jge or inc mov adc loope cmp nop push push pop push pusha sbb jnp mov cmp stos movsl mov div stos sub and xor push les pop pusha or rclb push aaa lds push xor adc nop neg popa mov xchg int (bad) xor inc roll and sbb push jg scas add test rolb stos add into add out lret lea dec jg sbb pusha mov jo ja sbb scas inc push adc mov adcb cmp pushl add sub mov or test push dec daa or (bad) jne and cltd cmp inc aaa jmp mov add or cli (bad) push push in inc shrl mov push or ljmp shr rorb sub mov in push popa es xchg xor dec mov jo dec or mov pop bound cmp sbb js pusha mov and inc pop call jb pop in pop int3 xor inc dec inc sub lea test inc cwtl xor push jge jo inc cmp push ss rcll xchg fldt lds pop outsl or mov and cmp add push push sbb cmp push ljmp bound lock mov in xchg jge cmc or push xchg mov stos into add xlat cwtl jl mov push fimull dec in (bad) push mov in xchg jge pop pop mov mov add jmp imull (bad) int lret sti mov mov stos push sub mov and pushl (bad) lret adcl pop or cmp insl add popf inc or jmp push fbld or gs and pushl add xchg mov clc fsubr pop xor inc add or faddl insb js clc (bad) pop mov pushl ljmp mov mov inc es add mov adcl push cmp mov rol clc or push mov pop add sbbb sub in dec jle jmp movsb or leave jmp lea arpl mov imul arpl add popa and or loopne and test sub nop aam js or jg sbb sub push pop sbb and pop push inc inc mov int pop push (bad) xor inc dec inc adc cltd pop inc xor xchg pop or fistpll cmp test jl pop pusha cmp imul sub hlt add xchg mov and out adc lds and femms clc popa add xchg push and adc xor ljmp push icebp mov adc push xchg outsb cmpsl jo adc xchg outsb push pushf aas push push sbb stos pusha mov sbb daa gs dec cld jne cmp push out arpl stos dec sbb jno enter out aaa js cmp jle ss push pop inc leave push pop dec xor or add add and lea (bad) or or rcrl and dec push adc sub dec pushf daa ret cmp sbbb cmp and pop mov inc cmp imul cwtl adc int3 push lods xchg push jmp dec imull adc mov sbb cmp jecxz loopne cmp ja or ret jg (bad) ret and mov test out or push ret xor bound sub lock xor jmp add mov aas xor push add sbb inc out dec push dec xchg (bad) daa je push les inc pop and daa scas mov (bad) pop mov ss add es sub imul aas add or pop add pop sbb xor dec lods testb mov pop jnp push xchg test aad fisubl cmpb push mov mov add scas jg xor pop test xchg xor test sbb xorl (bad) cmp andb int (bad) fist scas jmp mov adc sub popf sahf xchg mov or sahf jbe dec push xchg gs push and pop adc jb rcrb inc cmp mov arpl loopne mov pop cmp pop fldl out out pop or mov outsb mov fwait add pop enter mov test jl fwait sbb imul clc sub and or add rcll test mov adc add loop loopne inc add in test cmp and inc mov xor lods lea lea mov ret imul mov call push inc mov roll clc push jb rcrb adc adc adc adc lea in subl jp cmp mov push push pop adc push adc shrl jg adc outsl pusha and and pop push push xorl das push data16 loopne mov scas lock xchg fcmovbe pushf sbb mov sbb xor jne adc pop push inc mov cmc or adc rcrb xor nop push nop (bad) xchg add repnz add adc adc mov jl test push adc (bad) bound mov xchg lock mov aad movb js adc and xchg popf (bad) lock sbb sbb or jp push jmp outsb daa push call sarl shll movsl pushf aad je add cwtl je repz xorl rcl xchg cmp inc lock shr mov mov and in jl nop js xor fsubr or mov and dec les cmpsb (bad) mov and mov inc out add pop jle mov cmpsl mov mov mov cmc shlb lea pop jo add xlat mov cmp jp xor gs xor xor dec clc mov test cmc test add insb (bad) xor sti xor pop jb (bad) dec inc inc xchg cmp adc (bad) mov jb mov adc jae cmpsb sub or imul nop dec and xor inc mov sub stos ss lcall pop sub cmp lea mov inc les pusha add pop mov fsubs jo stc fildll pusha std push js pop dec push push jl fs jg sbb lret je push inc movsb aas test jne jge aam (bad) jns shrb dec sbb ja das sarl push mov push mov nop add cmp push mov sub insb (bad) mov lea bound mov mov test xor nop xchg movsb (bad) xor lea aaa pusha sbb dec daa mov add mov and adc xor mov push mov or inc xor push aaa add add adc pop push push pop and inc gs or imul jb xor xor add dec pop fiaddl add cmp xchg ljmp cmp test or in lea mov jno jge cmp insb decl sub test fsubr sbb arpl inc push fldenv loop jo imul add scas mov lahf fcomps add inc pusha dec and mov xlat mov (bad) movsl or xchg hlt push xchg fs mov mov push xchg sub shll mov pop adc popa loopne inc mov popa jno mov add cmp cltd dec and inc stos jmp push and (bad) aad or add jo cmpsb mov sbb push sbb cltd arpl cmpsb cbtw lods jl push cmc sub and dec pop push ljmp mov bsf test fwait push (bad) movsb fmull je jns into jmp xchg sbb sub inc add inc pusha mov add sbb add jne lcall inc add sub pusha and aas and lods stos (bad) enter and push out and lock and and bound inc jo push mov add push nop dec xor imulb push das dec mov and or outsb pop pop dec mov mov adc push sbb and nop xchg (bad) sub call in inc cld push loopne out mov xorb sbb fs push cld pop lock bound iret add pop pop in js imul dec dec sub sbbl test int mov div rorl xlat minps or or mov fadds adc jmp push out (bad) lret nop dec nop sbb int sti cmp lahf push xlat ret outsl add inc inc pop rcr and into (bad) je fcmovbe movlhps dec mov jnp repz (bad) cmp aam outsl movsl xchg mov out es fstl ret imul jno push test push sbb inc and std ret pop test rcrb fcmovnbe push out les ljmp sub pop add or arpl inc adc adc and aad pusha cmp inc (bad) sbb push test int test add sbb out data16 outsl ret mov ljmp scas fnsave pop mov fldt or cmp mov fdivrs fcoms sbb sbb cmpsb adc repnz insb fcmovu faddl aad loopne add pop rclb imul (bad) mov or inc lcall or test outsb fcomip adc pop add cmc jo xor ret hlt add mov test fsubl or lods lea xor dec ss repz push or push push data16 inc mov push sub jne pop add mov or inc imul out test loopne and dec or inc add lea cwtl xchg inc jle inc pop in push jns enter fwait xor adc aas rolb dec push rcl mov sub fadds loope inc add in loopne add lods shlb mov mov mov inc mov daa adc or mov int3 xor push sub aad and sub call aam or push jo clc inc pop in pop push sub je test loop push cwtl mov sub loopne lods (bad) mov xchg jl inc aam shll dec shll popf out push xor ds dec shufps jb mov pop dec lock popa nop xor lcall adcl inc xchg xchg out fisubr lret and into iret in jbe mov xchg ss and adc mov adc lock fcomps clc int mov movsb pop dec shufps loope or sbbl daa ffree adc pop sbb into mov lret jle mov es adc sub faddl xor jo xor cmpsl (bad) jbe roll pop fsubl xor es icebp inc or rcrb adc mov cmp ficom int3 pop sub jmp movsb mov sbb out dec sbb xchg jmp xchg cmp lahf jo sub add mov aaa (bad) pop rol pop mov call je and xchg loopne pop or mov enter nop xchg adc pop or jo int out mov jecxz pop int3 add mov mov test je or xor mov (bad) ss inc fild or add or jnp inc cld jnp inc sbb sbb sahf xchg daa xchg or neg mov cmc mov jmp rcrb inc inc jg push dec dec sub add dec pusha mov sub xchg or jo inc dec sbb adcb pop nop ret add mov lret in add mov outsb xchg or mov cmp cli je lea lock dec lock mov dec in int3 fs and and xor push in je adc and inc cmp lds sub sbb sbb or mov push jo aam fimul iret cs popf push mov mov ss mov mov outsl xor loope mov fistpl pop jb repnz mov and inc sbb pushl sbb out mov jb (bad) negb sub fstps pop nop mov loop inc jo ret pop pop clc in in inc repz fcoml outsb insl leave pusha cmpsl (bad) adc in sub daa imul fdivrs icebp push push jae xor fcompp scas repnz adc cmp (bad) mov add add mov (bad) xor mov cmpsb shrb adc sbb dec jle xor loopne lock lea pop xchg or aas lock mov icebp push inc add inc add hlt inc cmp es sbb xchg fdivs loop pop pop scas xchg jl incl push or dec dec or lret nop sub clc cld js pop xchg les outsl cli mov insb fstp addr16 xor and mov jo lods jns js pop jmp sbb lcall movsb pop mov mov movsb inc adc mov jo in inc add sub pop rcrl pop fdivrs test nop and clc dec mov bound fs adc jno leave test push xor jo mov imul and das pushf stos dec lds inc fldenv repz rcll les es popa fdiv (bad) push push pop cmp sub fcompl sbb mov xchg daa test and repnz cmp mov cmc (bad) jnp jns div adc jns pop pop fiaddl das cmpl and and addl negl push jnp scas mov push push ss pop mov jnp popa dec sti mov cmp mov pushf xchg push jge dec fcoms sbb xchg sbb cmp nop mov push call mov pop adcl insl cwtl outsb xorl daa jnp inc mov (bad) or out movsb push aam aam push add scas (bad) push adc add loop sbb leave std xor lret pop mov dec pop sbb nop/reserved imul mov cmpsb (bad) clc fwait add mov outsl mov mov out psllq push daa fs out mov mov in popa adc push jae lock cs dec into rolb imul push xchg or sar or jg scas add sbb addl cmpl imul lahf mov adc pop push js test lods cmp jmp pop and pop push add cwtl (bad) imul push mov ds jp inc mov pop mov pop adc mov xchg andl xchg xchg add imull cmp fild std lea pop les (bad) (bad) imul push lahf mov into rep and add sub clc test inc cmpsb aas jle js and jle nop test jnp call lret sar or ds cmp rcrb dec cmp dec repnz bound or xchg and mov imul fiaddl mov inc rolb and aaa notl mov or adc pushf dec fidivl mov cld cmp addb popf sarl inc int3 inc aas cmp fistl push jns inc pop (bad) add aas enter sub mov ljmp and (bad) jge insb jge cli sarl je add push jae (bad) js rcl push aaa pusha cmpsl rolb or push push sub loopne cs les mov pop inc in test adc mov add jl cmp push in inc sahf out inc cmp lods inc mov lret adc push add out imul cmp mov (bad) adc pop pushf push insl mov idiv push in rol sbb mov or add (bad) out sub mov dec int3 lahf sbb ret push jecxz push call and jl adc rcrb aaa mov jl shlb sub dec imul or or adc xor hlt adcl xchg ljmp mov dec add add jg jbe jg sbb roll push enter in in push sbb xchg sub inc xor dec rorl dec push dec das pop dec fcom jge and and (bad) lret gs lret push sahf and push das dec and and mov test je adc mov cmp ljmp and and add add xor add add xlat pop loop push and ret and stos cmpsl adc pop mov xchg in push sbb push mov inc push push mov xchg pusha mov and inc pop shll sbb in pop pop push cmp ret add jo pop (bad) xor or or jg jg enter es pop das (bad) in leave push mov and mov xchg dec add test sbb fcoms jg push push pop sbb dec pop lock das mov dec add adc mov xchg inc ss inc fldenv push pusha jmp inc andb push cs pop ret sar adc sbb data16 aas pop sbb adc mov pop pop cmp push pop ret adc push add orb lea pop into or in jle pop cmp mov sbbb gs loopne and push sahf and stos mov push fsubrl or jns fcoml dec insl push outsb cmpsl movsl mov mov incl dec and aas test push jg pushl in call clc push xor outsl rol fldl sub inc mov mov add pop add add xchg aam aad mov xor out add in add aaa cmp add pop cwtl or aaa sub aad add loopne adcb adc and movb push adc dec jo xorb lahf mov sub orb mov cwtl and std aaa ja push movsl xorb rolb fisub xlat inc xor pop jmp adc xchg iret sbb (bad) jp mov mov mov cld inc cmp outsb rcrl repnz mov adc lahf pop lea decl mov inc fadds call jns sbb or mov add inc test inc idiv (bad) dec das add pop push ljmp sbb mov pop call cs test jne xorl and xor sub mov add icebp or subl pop roll (bad) cld add in bound decl jne xchg pop andb xchg inc mov test add sub movsl push fistpl or mov xor or or push jp clc push mov sysret adc fimull push or xor mov push adc sbb push push sbb sub ja fcmovnu inc jecxz lret push inc jg pop ja cmpl xor dec mov lds addr16 mov and or or mov mov add sbb or pop bound jnp ret fild fs aam jno mov loope adc dec sti adc add not and jmp test add es bound adc inc or pop inc or or mov ds push mov jg ret mov jno push pop mov dec std xor sbb mov call inc popf imul loope jg push add jg mov pop adc push movsl sub inc xchg xor or cmp add sbb aam adc stc sti dec add or jmp push daa and fistpl shrb shrb xchg mov mov decl test adc cmp xchg les into mov call shl sbb nop xchg sbb inc nop out into pop and xor test insl mov fdivrl inc test inc or pop xor sub and push xchg jne sbb test mov clc insl loopne aaa outsl test je jo jecxz mov push jae add dec in sbb int push gs jle push add jl cld dec add xlat push inc jge pop and fs in sub add lds xchg sbbb inc adc icebp push xchg mov push mov push or fiadd (bad) mov cwtl call jo clc mov test lahf jg lock shrb add xchg inc cmp add add or or push pop pop ret fld mov dec add mov es xor negl and add pusha inc scas sbb push push pop mov jl rorb lret jne and lods lcall idivl mov mov pushf aas push cmp mov and rol xor mov pop or cmp repz add test dec and in pop lret xor in or faddl push add dec cmp aaa addb inc push cmp push aad dec xchg push push rol leave into or shlb jg adc aam addl push xor test mov or add adc sub mov add mov nopl shll loope mov mov (bad) jns jle or push addl iret inc xchg idivl inc pop xor je mov ljmp adc pop cwtl lea push mov imul arpl lret out add jmp stos sbb cwtl div inc rcll push scas xchg and mov inc xor adc push push xlat adc fabs dec lcall add cmp popa push adcb and xchg lods iret std pop mov jle lods insl bound add es dec sub mov outsb (bad) or pusha mov push faddl dec push or mov adc dec fmull adc xor or push push cs enter add ja test pop rclb add xor xchg adc mov inc sbb dec test int3 jl xor or push (bad) test rcrl pop repnz push sbb push pop (bad) faddl and insl les xchg cmp les sbb lea xchg and xchg movl in popf int3 sub rclb sub arpl jno mov test cwtl addr16 clc xchg xchg push or mov inc mov dec fcmovne push sahf sub aam sbb push add fidivl or rol push pushf clc push aam stos or push adc and or rolb cld add dec jno sub adc mov xor sub imul or nop (bad) inc packssdw (bad) push data16 shlb push orl sbb sub push cmc lret xchg jne xor cmc add sbb xchg stos inc pushf cld push mov out cltd add add mov add push mov mov pop fldenv lds rolb mov fisubr or add ja lods pop inc sbb push (bad) mov rorb aad add aas mov in sub popl add push enter sub mov cmp test leave inc and mov and mov push ret add and mov test cmp jg fcomip and loope fistp push lea cpuid sub mov (bad) repnz call or in add or pushf addr16 add mov or xchg sub adc shrb mov imul ret pusha adcl sbb ljmp dec dec jle mov (bad) mov push lea lock mov jo sbb mov and and sub mov or or cmpl or push in or sbb xchg mov scas lea cmovle rolb sub test sbb icebp inc dec xor (bad) add jns push sti mov push dec js fist fldl (bad) fstpl mov (bad) xchg lahf (bad) xchg pop jb jb enter sarl adc sub xchg push mov pop lock adc push sbb out out sub mov cmpsb jne mov push dec mov pushf or inc movb jge push cmp outsb ljmp push mov mov push dec (bad) mov dec push syscall adc adc inc lds iret add lahf or int3 push jb adc cmp push test enter mov or jne push push lods sub cmp pusha inc aas jp push roll xor sahf cmpsb xor mov add or and jmp mov fistpll or dec cmp jmp aaa ret pop pop je sbb adc inc stos cmp das mov adc in inc push lcall mov adc dec in gs mov xor sub push inc js js call aam mov jp inc add mov push es cmp dec adc lea and (bad) mov inc fcoms ret pop ret insb pusha loopne nop stc jle sbb push js add (bad) (bad) xor push fs mov pop pop rorb ret push mov loope sub ret scas jo in mov sub lret in rcl sbb leave or fnop push inc nop adc fmul dec inc leave mov rcr mov pop mov pop test dec xor sub rclb pop arpl cmp loop push test (bad) inc add xchg mov sbb into stc shl adc cmpsb or push je in lea in (bad) flds lock cmp mov and sti add and xor int3 popa mov dec xor (bad) cltd imul push mov pushf and mov mov addr16 inc shrb mov push mov add movl je push xor mov mov (bad) clc mov ret xchg rcl inc xchg push push nop mov cmp inc sub inc aaa push adc idiv ret dec rolb push adc stos adc iret add push dec aas xchg (bad) jmp (bad) ja dec sbb adc lahf test or test subl stos ss stos inc add sub lret push leave mov add stos (bad) mov divl xchg adc (bad) and adc aas add adc jg mov fistpl adc mov push loope add cltd lcall not not and imull xchg and add lods or cmp cld sbb and pop ret cmpsb inc insb aas mov jge push add push inc xor scas imul decb rorb in fstp and sub cmp push sub ja cmc inc pop and mov add cmp leave movsb mov push jmp add xchg cmpsl add or jl add fs sbb les jbe ret mov movsl out test sub xorl dec sbb pop add sbb sub xchg xchg fnsave rorb or enter add sbb sub push and and pop inc fiadd pop or jns cmp adc mov les and test enter xchg aaa shlb push adc mov sbb aad inc pop call in push add mov mov daa add sbb pop fisub fs (bad) je je fiadd add push push push add pop es lock add xchg sbb sbb dec pop or sub das pop mov or adc and cmp push dec mov ljmp jbe cmp popa aaa lea mov push add push and addb (bad) sbb out and pop xor add sbb mov inc pusha add lcall add sbb add lret xchg jb inc pop mov mov cmp pusha push dec inc mov adc dec lods pop lock (bad) add pop pushf cmp add cltd movsb movsl inc rcr push push lock cmp inc add cmovle rolb sbb or fucompp cmp dec sub push js js aaa dec sub lods and xor pop mov push imul xor sbb pop mov xchg sub push insl and or dec inc or mov xchg inc mov cmpsl sbb cmp adc xchg sub adc xor xchg outsb adc xchg fidivrl lock push push nop or fwait nop or sub jo mov lea push test and lahf add adc add add ds xchg and push dec push (bad) fsubl inc mov push enter pusha or xchg test sub mov in loopne cmp js adc adc pop mov dec loope sub imul add pop add inc js add ret cmpsb in jns cmp test push or in add or js or xor sbb mov mov flds mov adc stc add cld iret icebp xorb dec jecxz and inc mov rcr jb (bad) test inc movsb inc adc outsb and (bad) dec xor jno fisttp sbb add adc mov fdivr jmp mov movsb cmp mov lods sbb dec jmp or test mov push xchg cmp popf cmp mov andb notb dec adc rcrl adc mov cmp sbb fildll push loop pop sti or xorl fs push arpl js adc rorb dec xchg movsb mov mov push inc add mov mov (bad) xor rorb dec dec rcl inc add cld push dec adc inc mov cmp nop mov jl imul and sbb nop mov test dec (bad) popf dec mov cmp and rclb xor (bad) inc pop popa mov pop scas pop dec cwtl jg xchg inc cmp imul or jbe dec mov lret sub mov sbb pop mov cmp cmp or jns mov jp push or dec in sbb mov flds cmp imul insb push sbb rorl or sbb add jmp das (bad) jo jmp xor sub cmp pop test loop rcrl inc aad xor dec shrl inc mov jno or push popa lods mov test mov or mov fs fistpll fs fisubl add sub pop or xchg test inc push mov or xchg sbb int sub cwtl pop test inc adc pop xchg pop inc nop loop lock dec shr lar xor pop or mov push imul es arpl addb int3 inc jge push and sbb or and xchg xorl fcmove les cmpsl jae fs fiaddl dec push xor push sarl inc jp,pn push add gs push jnp dec jl inc xchg js and add mov (bad) mov int inc xchg push push mov xchg fwait sub pop xchg fild push or or ja sub pop nop pop xchg sbb pop or dec inc sarl push mov jg dec loopne xor or sub add add xor adc loopne adc and jge jge test aad rclb mov lcall es test add sbb sbb aam scas cltd daa loopne add sbbl push dec js push fs push mov mov sbb mov test and sbb notb ficomp sar test enter jo rorb loope push les mov push mov lock mov or arpl inc mov mov sub jmp dec insb push rclb mov jg fsubs inc sbb adc xorl xchg adc test push lret adc xor xchg in dec or cmp sbb cmp pand ja or (bad) xor test decl sbb aad shrl add jno stos mov sub xor add mov sub mov push clc adc and test push inc loop mov addl dec adc add rorl push popl pop test sbbl clc inc lock and (bad) adc dec push arpl or adc test xchg scas (bad) lahf pop add dec cmp repnz inc sub rolb push inc cmpsl xchg push adc push dec lret mov mov cltd insl fild inc in add mov dec jo lds inc hlt stos adc insl pop aad mov and pop mov sub and aas dec inc test sub cs popa insb les (bad) sub push jecxz outsb inc mov out cmpsb push loope push inc dec enter popf iret repnz mov cmpsl pop inc push cwtl or mov jo adc jg and push xchg mov push out jnp js popa add jne xor mov jo xor popa mov inc jne sbb mov xor push mov and sbb mov movsb jb cmp shl fsubs add call dec ret cwtl push jb add cmp xchg mov dec mov icebp and (bad) jge shlb imul test or shl loopne int push fmuls or sbb fwait cmp stos dec outsl lcall jne mov loopne or sub push and imul imul cwtl mov ds xor push mov fadd inc add or les pop mov sbb cmp mov mov cwtl xor xchg das adc jae jecxz (bad) aas add dec test inc inc pop les mov les iret shrl and fs test stos push jg aas jb push test mov push lea stos xchg dec imul push push lods inc cmc pop rol lods pop sarl test loopne loopne sbb stos add adc sub sbb xor xchg rorb push add cmp pop jge push add jnp adc adc cli jle fimull (bad) mov jg das lods jno aam andl lock and cwtl (bad) or pop inc adc mov popa daa adc adc xchg pop outsl dec pusha and add push sbb push call xlat ret (bad) pop sub test call pop push popa jecxz (bad) xchg jecxz iret add bound dec push fiadd pop loop imul dec outsb jmp ret or dec jne cmpl cmp int3 lret (bad) shrl mov sbb ret jmp mov pop add popa sub mov pop and cmp lea test pop leave push cmp adc pushf js aas dec add pop push adc xor xor push inc sub (bad) dec arpl out push jo enter pusha div movl push push insl push push inc ret adc lahf shll dec cwtl pop int3 or testl mov jb lods dec jne lahf push pop jne pcmpeqw cs (bad) xor dec cmpsl decb jmp xchg movsl loopne into xor jl inc pop push test inc push push mov jno xchg stos xor inc scas jo push cmp test mov (bad) aad push sub mov test ss push stos jno mov dec push push jno inc xor rclb dec push stos ret test or outsb decl je mov adc ret and jnp mov and fs in cmpsb lcall push fistp lea pop sbbb es and adc aas dec add adc pop lods and mov and jg aas cmp test fs ret xor xor gs pop push push mov call clc xchg test xchg mov mov sbb dec das test cmp lret clc push (bad) das ret and cwtl movntps pusha inc mov sub pusha sbbl push xchg orb fiadd lea (bad) push inc int3 sub dec and iret adc xor inc push insl in es adc sbb push xchg xor xchg lea dec xchg lahf mov or mov lret imul sbb push mov data16 int pop or mov push add jl popf (bad) xor adc mov mov dec sbb hlt cli cmp lahf or adc inc xor lea cs rorl les pop push mov sti lcall mov inc cmp lods adc daa ret xchg or push dec aam dec dec movsb pop xor sbb mov mov xchg rcrb mov ds pop lock sbb add dec out test icebp adc push jno mov jb jecxz add add push jns cltd (bad) loop xor jmp jno (bad) fildll arpl imul or sbb mov adc sub inc adcl movmskps (bad) add pop push cmpsl add test inc push addr16 and insb das mov push mov aaa scas jmp js cmc cmpsl xlat mov push sbb fldl notl ret push ja enter jp fcomps dec add leave test lcall int (bad) sti (bad) out ror push aam push cmp or in in pop hlt mov mov aad xchg dec or sbbb rcrb pop push loop aas sbb sub mov dec inc push popa push leave add jg xlat cmpsl sbb aad and pop xchg add test inc sbb add dec add das inc sbb lret cmp add mov nop pop push push xor iret pop mov test dec clc pop insl es add push add jle aas inc test mov xchg mov inc popf orl xchg dec cltd (bad) ds or jmp or xor mov (bad) std and mov loopne sti lcall dec ret or push orb popf mov mov (bad) (bad) cmpsl (bad) popa shrb push je jg mull mov in push xor rorl mov popf data16 jo cmc xchg inc adc and ss in xchg inc inc push xor inc sub dec mov outsl loope test rcll loopne mov pop xor dec rolb int3 mov pop inc xchg pusha mov or sti lock out in lock mov ret add adc and mov loop loopne or mov sub or cwtl or mov mov push arpl in mov jo push or push sub push push and addr16 push fdivrl lahf jge mov jge jne cmpl xchg aad mov sbb inc dec xchg fcompl or (bad) and adc adc mov push pop mov lcall mov dec xor xor mov outsb lea fcoms ret pop js test ss or sbb pop mov clc or pop lds add sub lea leave popf add xchg js mov and adc add add pop mov and xchg jo sub mov arpl mov popa pextrw push cmpsl nop push and jmp or pop or mov pop mov dec fistp lahf movsb xchg test inc rcll movsb jg arpl mov push loope cmp bnd inc mov inc in ror or inc adc dec sbb push jno add popf cltd sub cmp int push lret imul imul outsb rclb pushf or jmp push adc xor push mov mov jmp inc mov mov ret int3 mov inc sub jne inc stos xchg and and push push jo je cld adc ds mov mov inc sub jp lret sbb jne xchg jne jne pusha cmp dec shlb leave pop leave push pop fdivrl cmc lds push add sub lock sbb loopne and or dec sti add insb adc pop xor push add rolb shrl inc lock imul xor iret xor pop jnp pushf or jne leave jbe cmp negl faddl outsb jne imul outsl fidivl (bad) dec push lods nop dec sahf (bad) int3 dec enter jnp mov cmp movsl out mov inc fcoms jne adc xchg cmp pop (bad) push lea xchg push dec add sahf add push dec add or jmp lea sbb inc scas push mov pusha push xchg sbb rorb imul mov push add clc dec mov push inc ficompl test inc push popa inc add push xor adc jno add or cs ljmp jg cmp jne cmp jne add aas mov push fisubr mov or and push adc xor cmp push dec jecxz jge bound cmp jecxz or and jecxz push repnz inc mov dec adc lahf cmpl dec lods push ret mov or das leave movsl lea insb rcll in cmpsl imul stos inc mov push out inc dec mov push and push and movl decb inc mov dec lea cmp jb and mov cwtl push call mov push or ret jge sbb pop cmpsb aad rcrb ja xchg repz andl orl mov fimull lock mov mov push xor and add rol (bad) ja aas mov mov out mov sbb mov aaa dec test mov rcrb dec dec cwtl or pop and sbb inc mov push rol (bad) js or (bad) lea (bad) insl cmp sahf add (bad) hlt cmp jge enter sbb add seto mov xchg adc inc push sahf ret es sarb sbb jo pop imul insl or dec jne mov cmp cltd (bad) dec movsl shrb or inc or out incl in insb sbb push insb pop sbb cld cmp xor or inc jmp lahf dec push sub fdivr adc pusha xchg aam (bad) xor push sub push push hlt cmp push mov nop std aad or inc lret push leave ret jmp stc testb push lea fsubrp addl movl sbb cmp jge pop add lahf sub lahf es xchg inc adc call dec jge adc clc outsb lret adc mov cmp fimull mov jecxz ficompl loopne mov enter jb icebp fdivl sub pusha fmull add push dec arpl sub sbb or mov inc loopne (bad) xor das pop xchg dec repz inc pop push cmp mov cs das push or push cmp xorl sub dec mov cmpsb push inc (bad) xor push outsl and cwtl fucomp push andb daa lods push and sub fs imul inc lock clc test pop mov push clc add mov clc ret roll or mov dec dec dec add xor dec add bound add adc inc ret ljmp mov sar add popf das dec adc xchg dec call jne inc test mov pop lahf or sub add sbb add cmp pop shll cld adc push and or xorb lods cs pop aaa (bad) dec clc dec add outsl push xor insl or cld jmp sub mov movsb mov js add xchg pop add lcall mov push mov xor adc add dec inc push push pop cmp pop pop inc cmp addb push fist fist dec das xlat stc and inc mov or adc shlb sbb fwait das or mov rcrb dec add outsl (bad) cmp fldl addl ljmp push daa add or stos xchg out xchg mov insl adc push (bad) jbe jne xchg jge inc xchg lods dec aaa fldl adc pop cmp xchg sar push add test mull stos (bad) add inc sub pop and scas inc mov inc mov adc add arpl pop add push arpl sub pop fildll rolb add sbb pop inc inc mov push pusha clc push add sub push dec dec cmpsb test rorl inc and cs xchg lahf cmpsb xchg and sub mov cwtl pop sbb rcr test orb mov daa rcrb ljmp sbb movsl dec dec xchg cli insb sub pop xchg cmp jbe add add fcoml dec sti sbb lea pusha mov fwait roll and add or adcb xor inc or push (bad) rol (bad) das mov sub sti add inc pop jl add xor or mov daa shrl sub push dec pop js sub into push pop dec cmpsl xchg pop pcmpgtb jne rol add leave pop adc adc xorl imul mov or or add test mov adc sub out push cmp jno or inc shrl call (bad) inc es jmp sarl (bad) jb push inc jno add fadds xchg mov mov push inc in pop adc xor cmp inc pop test cmpb adc add test lds xor push or inc add nop (bad) jo jg hlt cld mov sbb jg xor jge cld mov push popa xorl hlt and dec imul add lock inc xchg mov add mov fs xor xchg stos in mov lea (bad) adc in in mov andl push and jge sbb loope push mov add (bad) add push shll inc add jle cmp incl pop or cld pop clc xor clc andb jo popa pop sub daa jno jmp adc sbb sarl push inc jp xor cltd xlat push xor mov jl sub or (bad) mov lahf iret mov sarb es or add cmp and adc sub popa push pop inc or mov push jecxz jp mov pusha mov xor mov pop xchg mov cld mov push jne js or mov mov aam mov rorb fidivrl or jns into adc js loop cmp fiadd sub add sub fs je push lret stos add js inc mov xchg fsubl outsb mov into jle push add shll outsl dec mov jne mov push or or pusha dec (bad) sub xor in sbb and inc cmp push ret adc test and mov push jle push mov sbb (bad) sub inc and (bad) iret push xor add cmp xor pop dec cs sarl jne sub add out fadds es dec add aas and mov add (bad) leave mov mov jle popa mov jne cwtl es inc ret sub in aas mov mov add add fstps push je pop sub add adc inc adc je hlt mov jl (bad) enter inc mov sti imul lods fstps sub in popf das sbb mov cmp clc mov pop xorl pop lea jle pop (bad) test lcall (bad) mov and inc lcall or push dec movsl clc add cwtl add push cld pop std sub ret (bad) mov adc cld inc sbb or add push mov clc pop jl divl std mov in add je out pusha lock int3 add movl and dec mov fist push stc xchg jg fldl fstpl adc dec in (bad) ficomp call fbstp lret pop sar ret clts add fstpl (bad) inc fcmovbe mov call inc cmp sub (bad) push leave add mov inc es int test add test pop add adc enter sarb dec shr shr or sbb and cmc insl xor or call rolb push fstpl mov push sbb clc fdivs jnp lds int3 shufps (bad) leave add pop shrb shlb lea jg pop add rolb inc add adc jecxz sti icebp es mov fistpl pop roll (bad) repz fldcw inc pop imul test cmpsl or divb add (bad) mov loope adc fbstp or daa mov enter hlt outsl or jl ret cmp inc cld pop adc test ret pop push mov and sbb add and mov test xchg cmpsl lods xor lahf jl sbb je loop lahf or inc js mov aas ret popa ret notl or jp push sbb xchg pop dec adc cmpl cmc push fcmovb jle inc repnz add nop js cmc cs mov jl push test pop adc ret pop ret pop inc inc sub lahf pop inc cmp mov cwtl jbe add rcr std fsubs outsb cld mov inc pop push xchg cmpsl mov lock add lcall xorl rorb icebp js leave xor jg or ss push or xchg sub (bad) cmp and lret stos dec adc ljmp pop inc test inc mov add ljmp xchg mov fstps fldl loop mov fcoms es add (bad) adcl xchg mov jg mov rcrb and mov sub or and cli in xchg dec xor or roll or sbb lret mov repz dec or clc lret and mov nop mov and lcall arpl les sbb pop (bad) jl and inc leave sbb or mov lock in xlat imul out in cmp mov lahf int3 mov loop xchg lahf fs shll fbstp mov inc adc add lahf pop in sub test pop add add pop adc (bad) movsl pop sarb mov test rcr in dec adc pop rorb push add sbb imul and fistl push clc (bad) sub inc add lcall pop adc push or in inc in pop cld cmp lea mov dec dec xor dec clc cmpl or push mov arpl shl adc xchg mov hlt dec add int3 add rclb push and shrl aam dec mov cmp idivl mov or aam rol jno test mov mov cmp sub or push inc cmp mov pop mov and mov mov inc jbe call leave data16 lods movsb hlt test test sbb rcl jo loopne inc aam and push pusha les fcoms or adc sbb pop or test inc adc mov inc mov adc push outsb pusha mov pop flds dec cmp popa fistp and or or mov scas mov sbb insl sbb sub xchg mov lahf mov adc rep sbb movsl rcll fimull xor insl xchg outsb les les and inc fist nop add andl aas pop or cmpsb nop dec loope sub xchg stos xor lea adc adc insb in mov lds xlat pop mov add int3 xor (bad) movsl add push pop ret xchg mov cmpsl pop jbe inc add lret add pop mov pop cmpsb push lock (bad) mov push sbb inc add imul inc arpl inc dec and push pop dec sbb xor mov sbb sub rcrl aas faddl sbb (bad) movsb or sbb push mov xor pop or shlb (bad) cmpsl imul rcl and (bad) sub punpcklwd pop mov outsl inc sbb clc pop or and sub inc add repnz add pop mov xchg inc add mov enter xchg or mov movsl call shrl xorb push test repz pusha dec test mov push fnstcw inc in iret add inc inc cmp and mov sub dec push lock sub adc iret addl inc leave inc and jne push sub les dec adc add sbb mov fs push adc push int fcomi inc dec adc enter inc push div incb pop aad push dec pop mov jno jmp and xor jp adc cmpsb lcall pusha dec xor movsb stos or aad repz mov scas adc (bad) rclb adc test jge mov dec insl movsb pop test pop jmp adc nop dec inc adc decb dec scas mov jle dec enter mov xchg mov dec and (bad) jg sub aad lea scas (bad) or addss push pop test fldt aas push mov inc and xchg stos or aaa (bad) xor add mov sbb aad adc in xor psubq inc insl add or or or (bad) mov push pop and cs mov adc (bad) and in xor ret push test jge fcompl push dec lcall mov push insl add arpl sar fistl or (bad) push add dec adc stos xor jne push jns shr and xchg add hlt sbb pop adc add add inc cmp inc mov adc shrl ret and mov sbb lret test pop or movb pusha pop add dec bound or (bad) (bad) aas cmp sbb dec cmpsb add test inc dec cltd aam lcall xor loopne jmp aad mov or jns cmp call cmpb adc icebp push dec movsl sub pop xor adc test clc lds sub test or inc sbb push sahf dec or f2xm1 inc and sub setae adc sub ret sbb (bad) mov pop cmp mov pop sub ficom dec adc add cmc movb push pop fnstcw movb dec push and add sub add dec and mov stos mov inc sub or mov push (bad) inc mov or push aam sub inc gs pop jmp mov sub scas add sub mov pop ret jg or mov push lahf iret sub (bad) and push and mov sbb cmp mov cmpsb in mov orl dec (bad) fisttp cmp or mov adc or add jmp fcomi mov (bad) or bound test jle lcall shr bound mov add add (bad) and test mov or rclb push push sbb adc xchg mov pop mov and lea daa ja xor pop mov test aas jg pop rcll push repz mov mov rclb mov push pusha xchg rcll outsb test inc or cs mov fimul push adc mov inc arpl in or mov pop sbb xor and rorb pushw adc outsb or lock mov jo lahf rolb mov ret or push sahf cmp sub cmp add or lahf wbinvd movsb int3 jl sarl cmp mov rol xchg test sbb xchg adc add inc ljmp jo and fnop push faddl inc mov mov pop pop movsb loop cmpsb int3 shll xchg xchg mov gs nop xchg pop rorb mov sbb mov cmp aas pop push add xor lahf xorl inc sbb pop add out (bad) mov aaa add pop mov aaa stos movsl sub cmpsb sbb sub or xchg pop sar arpl inc pop push incl mov mov add push pop in ja subl adc pop inc mov sbb inc xchg or test mov and mov pop inc push sub inc dec push inc inc cmp aam in dec pusha scas mov xor sbbl dec mov inc je add dec xchg mov test movsb lret or inc add enter dec out enter cmp jl mov or and push push fistp inc stos mov (bad) jl das jmp inc mov jg sbb in fs nop mov xor shr popf call dec xchg mov xlat sub pop and aas add sbb cmp xchg es aaa cld inc (bad) aam rcr jecxz xor (bad) call fwait and add daa or das aaa mov push pandn popa rcl shrl lcall add sbb push add ret push hlt pop sarl (bad) mov adc test push aam jnp inc rolb xor out add out xor mov daa adc aam cltd bound popf setg cmp add sahf adc xor xchg push sub push divb sub xor adc sub cmp arpl cmp loopne adc in repnz leave or ljmp mov push shr mov push lock pop push add das clc fildl fistl fcoms inc lea sub inc add stos push jae xor or add lods fisubl aam or mov push loope push fwait lret add and mov ret or js cwtl movzbl cmp and fildl outsl inc (bad) out ret mov inc cld adc pop and popa jb add pop rol shll add or mov neg loope loope add ljmp cld dec fstps mov fistpll mov xchg mov or push lock shr add mov les scas adc adc inc and imull adc sub cld orl cld mov adc sti mov pop inc inc dec push negl mov sbb xor cmp lods (bad) (bad) in sarb push mov cmp sub and add and mov leave mov jno rorb pop xchg cmc dec lea fistpll int3 xor xchg xor mov add repz inc inc rorb in ffreep or enter jb push xor loopne andl pop mov out sbb pop push lock arpl or jmp adc dec jne or mulb into dec push clc inc add test mov outsl loopne sub rcll loopne jg and jne and xorb pop and inc loop pop jnp sub pop sbb std inc sub and xor add in jmp add lret pop add pusha dec scas cmp fdivs push push inc je cmc xor cmp (bad) icebp dec cwtl popa adc adc (bad) mov int sbb imul push clc jne add sbb mov and and (bad) mov fs xor pop incl and or mov ja add into fwait mov es adc add jmp lea sbb into shr xchg push or fisubrl push pop (bad) loop les adc sbb jmp sbb sbb jle fisttpl push int int add jo inc adc sub fistpll mov in mov incl rcl lods or add jle xchg adc adc pop (bad) fistp adc and (bad) loope add incl add sahf add jb mov cmp (bad) mov add leave je rcrb faddl xchg xchg or pop test pop lret out add orb pop leave ret push mov xchg icebp or adc mov cs jno mov or mov sbbb sti xor mov add or enter sbb in add data16 mov inc push lahf adc inc and aam push inc mov lds mov sbb enter adc sahf or push mov popa add add (bad) (bad) push int3 inc sbb pop adc inc jne push clc dec jne mov adc xchg sub sbb or push (bad) add fmull mov clc mov (bad) rcl in cld jg js stos mov xchg mov inc sub jne push jge mov test mov xchg and add imul inc dec imul cmp cltd rclb test xor dec push rorb pusha jl es xor insl aas pop sub push in loope (bad) das (bad) pop mov mov mov (bad) cld fisttp dec adc adc stos repnz sub loopne sbb nop inc pop sub adc daa roll push mov daa imul mov roll push or jb dec lods xchg and shrb dec adc lret inc fist mov mov adc mov repnz and or aaa push xchg mov mov ret jns cli jb adc push lods mov jnp rol out into gs lea popf jo rclb mov xchg mov add mov push aad inc (bad) lea and dec lods repnz cmpl sbb lock out ret jge jg pusha pop dec pop inc lret or jg rolb push push out call jle push (bad) bound jb loopne cli add xchg adc clc jmp mov pop mov add push or shlb and jp dec (bad) lock adc cmp test jmp adcb push pop push add add jae popf shrb int and push add mov jmp push pop cs add push xchg test sbb add les sbb rcrl push mov ret jp jle xor or addb mov hlt lock in loopne inc and clc cmp lea adc jl mov mov inc cmp sti lea adc data16 add mov or (bad) arpl data16 xchg sbb in xor xor push add adc dec and cld je,pt mov int (bad) cmp dec insl adc pop or and pusha and push test mov and shr add push inc mov adc sbb or or mov jecxz mov fisubl sub inc lahf xchg add inc orl add sahf push cli mov cmp mov lea mov cmp add add mov (bad) pop (bad) xor out jl bound xor jno add pop sbb dec es jne and sbbb loopne inc sbb (bad) fldl fisubrl lret test in fwait add add push in js loopne inc ss add mov sahf jecxz jo orl std test xchg pop add lahf ffree add push aaa lea push cmp icebp (bad) js adc mov inc arpl pop cld (bad) mov sbb fwait dec jno sbb scas xchg push dec mov mov repnz lds mov mov jo daa cmp push push pop push jno negb inc gs sub push sbb adc and icebp xchg sub inc lahf and add push mov inc popf jae xor call cmp mov cmpsl jmp aas cmp pop mov jg jae sbb mov nop jg (bad) cmp mov fldcw loopne push mov add lock aas pop lock ljmp scas xchg sub hlt (bad) sbb mov add pop insb int3 repz or rolb lods nop dec sbb ds (bad) dec rcrb neg nop dec lds mov add mov lcall hlt adc adc mov push push ficoml inc or sbb push add or lahf sbb orl push xchg add jnp js xlat pusha lods cld enter cmp loopne popa test xlat and mov xchg jne movsb fidivr mov push mov xlat jl add pop or jns jg or mov pop movsb cmp cltd mov mov inc jb pop mov push push or ret dec clc push xorl xor inc or pop and adc cltd inc pminsw sub sub add or inc and add xchg stos js xchg or xor adcl into adc mov pop or jmp add xor (bad) (bad) push add lahf sub inc cmp mov xor cmpsb mov shrb sub (bad) hlt fidiv adc add mov sbb inc xlat or ret cmpl and or (bad) lahf add fs ljmp add inc pop cmpsb loope sbbb fwait add das sub add and xor rcrl fwait sub add paddsw and mov cmpsb dec sbb pop push lock pop inc lret repnz add inc xor inc or pop pusha adc pusha adc push mov ja adcl push xor adc xor adc leave stos js mov aaa fwait test add push lahf or add bound lahf and or dec lahf arpl mov mov cmpl push (bad) je daa jg leave push imul stos adc test xor stos dec daa mov cmp pop adc fistp xchg push pop dec pusha add inc cmpsb (bad) gs xchg lds leave add out inc xchg pusha cmp push test inc jo (bad) (bad) xchg push or fld mov cld push xor popf sub rcr dec adc pop or push mov fisttpll inc aas pop rcl xor pusha adc les fild lahf loopne jb nop adc cmp int3 pop adc add aas and faddl call enter sub enter in fsubr mov xor icebp fistp sbb repnz and inc and add pop push jne adc adc rcrb add pop and insb addl pop push add sub push add fist add push push in inc push add aas or push orb pop fistpll or push lahf push pop or addl sub paddb jo fisttpll in inc add lods inc sbb sbb rorb mov adc rolb loop jg sub aas (bad) nop pop shl aas inc lock and cld fcmovb xor dec pop adc dec lahf push call in and xor ficoml aas add andb lds ret sbb or or adc sbb aas cmp ds mov ds lahf dec jbe je (bad) lock inc call aas mov pop aam adc enter add pop rcrl lahf and dec pop in inc push push push push and mov jg and pop inc dec test popf push es lahf dec test jg pushf sub sub jmp stos mov (bad) push sbb shrl orl pop push dec add push je lea aas pop xchg jg lahf shrb and pop push xor and xor or andl push in xor push test push pop aaa pop mov aaa (bad) (bad) mov enter fbstp dec pop dec dec adc aas cmp mov jge clc sub mov ljmp or ficom test sub nop loope pop call cmp jg dec sbbl mov or push add add jb mov mov pop or add add imul xchg and aam pop fisubr hlt jle or sar add mov notl push lea adc xchg les out fdivs call scas test adc push cltd or cmc icebp sub push addb pop cld frstor xor or mov fldt pop or or xchg ret sub jne movsl sarl rcll and clc jecxz ja mov adc cmp add jbe addr16 ja cmc hlt xor add mov xor add or inc mov dec or jb sbb fistl push pusha lods and inc push mov pop sbb arpl dec ficompl lock into icebp dec lods sbb jg aam jecxz daa jmp lcall (bad) das dec movzbl or icebp mov loop in js jg mov cli mov pop adc jg ds sbb dec (bad) xor ret sbb push mov pop mov adc pusha jg pop es xor dec sbb pop out leave inc jb nop jg sub or in pop sbb je inc jg pop jg sub push xchg sub inc movl stc jg loope (bad) jo and push je mov adc jp dec int3 jg pop and jg enter pop mov lock push cld cmpl add inc movb rorl adc sbb cli mov cmp inc adc imul xchg clc or out (bad) (bad) decl cmp fimul je cmp fnstsw mov or cmp or das sbb add cmc (bad) das mov xor rorl or inc cwtl sub sbb addl insl and test dec adc push push pop pop jmp outsl mov rorb or cmp xor ret add sbb incb jo adc cmp or add xor popf test sbb add xchg push mov (bad) rcrl xchg pop test add push in mov or jle negb sti push add mov loopne mov out stos mov mov inc out notl jb mov mov inc push aas mov psubq sbb sbb or sarl jne rol add xchg xchg cmp addr16 bound xor mov xor add mov mov dec les aam xchg mov enter lods (bad) push mov and mov push push push add push add fwait add rolb repnz cmp mov push jb jmp adc xor daa ljmp (bad) mov xchg mulb test xor dec or lds (bad) psubusw and mov mov and shr jecxz add mov addr16 or push lea insl push arpl inc add dec or rclb or xor adc mov (bad) mov lahf les mov jmp mov mov add sbb jg add mov scas jne sub mov jo jl or mov push scas push pushf popf cmp and cwtl or and adc pop sub sbb or mov dec mov outsb arpl test pop or imul fnop add push cbtw enter sti cmpsb cmp inc sbb dec or out push or pop (bad) adc nop xorb pop mov mov sbb lds and popf cld mov add ljmp outsb xor mov (bad) or add xor aaa sub lock push in mov repz cmp mov sti scas inc icebp mov fist sahf jl add in cmp and out adc lea add xchg pop scas outsl add adc mov arpl mov jo pushf andb and push loopne mov mov div inc in adc ja sub mov jo lods xchg or or hlt adc push and cmp jo xchg pop lea enter fs mov lods jmp sahf aaa test mov mov fsub stos pop or pop mov adc in (bad) add push sahf add pop roll (bad) mov add (bad) daa movsl mov stos gs add loopne push sub add or mov or cmp (bad) mov or (bad) mov sbb push sub xor lret mov jmp test clc mov mov (bad) testl icebp sbb imul push es mov nopl sub orl aad mov or aas sbb pusha add cmpsb jae mov out outsl push or (bad) mov mov push (bad) dec das lret lods sti add sbb dec dec fldcw ja adc lcall roll lods sbb jmp rorl out jecxz mov fist mov bound add pushf loope arpl and loopne xorb cmpl jp adc out pop adc test mov sub and sbb repnz and inc out inc sbb addr16 mov jae inc test jmp adc in mov sub cmp mov rclb call add dec jl test add cmp cmp dec xchg out lods imul add dec clc and cmpsb mov or adc loop and loope imul or rcrb les (bad) js pop fimul (bad) popa or sub test nop pop cmpsl pop inc or gs sar sub mov insl push sbb or mov inc inc add (bad) call push mov fsubs je daa test inc xlat mov call pop loope fadds clc or xor cmp lods add fsubl lock dec pop addr16 sahf add popa add mov push bound mov xor adc into stos push add cltd sbb jl xchg nop sub jo enter ds fcmovnb mov aam dec fwait sbb mov into insl rolb push data16 lahf pop xchg roll push xchg push imul xchg fistl add pop push add lods xchg mov jb aam adc add pop fistpll add pop xchg sub add mov inc es xor ret aam adc fs push aam shlb aam xor fwait push xchg dec (bad) (bad) and rcll push (bad) hlt or mov jmp mov xor add adc xchg rolb mov jle jp xor adc popa jmp xor and fadds jns add adc cwtl jle and pop lock pop in push sarl adc unpckhps adc sarl add adc or push in ret pop (bad) hlt xchg dec or pop (bad) aam jo mov push xor inc dec jp rcll mov pop (bad) (bad) mov sbb mov sbb lret orl adc adc loopne mov jl jle sbb inc into sbb aas add pop in and add dec enter fcmovnbe aam cmp hlt ss cmpsl test cli mov inc mov (bad) adc push (bad) and or (bad) adc addb fidivl or pop (bad) mov xor cmp out daa js movsb inc fildll dec inc fmull outsb fcomi jmp test fcoms fcomp or cmp leave clc jo clc dec adc ret or (bad) lcall insb aam or mov and clc mov (bad) and dec xchg add adc pop test fnop lcall loopne call pop loopne call jl inc cmp jge add lret inc jl mov dec je dec sub push jmp add add fadds (bad) inc fstpt xchg mov xor mov sbb add enter in cmp or (bad) cmpsb jae push clc fmuls (bad) or dec pop inc fcomp push inc test lock fiadd (bad) imull test jbe adc jl pusha inc xor sbb xchg jge jo pop add add dec setnp mov (bad) shll outsl add inc mov or add pushf push mov lock adc fisttpll fistpll add sub mov int3 adc mov hlt not cmpsl and xor mov add dec test xor fildl pop clc or dec inc ret cld and adc and add cmp inc fdivl mov inc pop (bad) aaa pop fstps or mov (bad) sarb xchg mov or popa inc sub jbe cs adc mov scas and sahf pop aaa add xor repnz fiaddl push push mov cld test scas mov dec mov imul andb mov inc or pop and dec inc std enter add (bad) flds pop jb dec push xor lock or mov dec and stos sub sti sbb (bad) mov xor xchg add les sub icebp ret sub wrmsr cwtl (bad) (bad) mov jnp loopne icebp enter imul fistl mov cmp aas aas or imul shlb cmp sbb roll or add call ret (bad) xchg fs (bad) and roll push daa push and adc sarb cmc shl aaa mov push add adc push push xor nop jae mov xor adcl sub xchg in ret shr or add add inc call (bad) or add fdivr or jmp or pop cld cli iret cmp cltd shlb enter dec xchg sbb pop jo push cld pushf mov movsl add mov push enter test jecxz test shlb subl xor sbb adc inc repnz and add mov mov mov jo push call sub xchg push adc aaa daa add add outsl jnp xchg adc lcall push mov mov cld push push subl popa add or adc push mov xor sbb adc rorl adc mov adc ds mov and dec mov sbb push mov loope push mov faddl pop adc movsb test cltd dec nop pop notb adc mov pop roll sbb test loope sahf sti test repnz fsubrp adc divb mov lea sarb add (bad) mov mov cmp ljmp inc and add adc sub add mov push lock xchg data16 hlt fdivr dec js add or addr16 dec imul daa add sbb push add fsincos leave stos cmpb cmp fildl dec test sbb (bad) lcall fstps sbb push loopne push cmpsb ret jbe rol push xchg mov pop jns stos jge push and adc cmpsb fbld shll outsb sub mov mov add pop sub lret mov cmp mov andb xor xor sbb inc (bad) mov or mov stos inc sub sub test sbb adc data16 xor xor shlb add mov xchg or add adc lahf inc fwait adc daa push iret sbb xlat adc mov jl or jmp mov outsb mov xchg push xor rorb and jb cwtl (bad) notb ss (bad) js int3 test xchg test adc mov and jb bound mov popf cmp (bad) lea jp out pop sbb push jl sbb addr16 inc ret and xor mov inc cs xchg ret add and movsl dec xorb (bad) sar sbb jecxz and (bad) jo inc (bad) js xchg inc (bad) jp jnp (bad) xchg and jae (bad) loopne lock repnz adc and pusha lds fsts shlb (bad) adc and jbe jge and add adc shrb enter or in jg dec loope nop mov jb (bad) jl mov je inc add dec dec lea jbe or add (bad) adc ljmp gs pop sbb pop xchg push cli xchg sbb mov adc jge stos push add (bad) mov mov add inc cmp stos fidivl jge sub push loopne scas imul insb shll (bad) add fcompl mov add stos lods jle test or lret ljmp rolb mov push cld sub add mov cmpsb in ds pop or push push loope dec jge push nop sbb dec dec (bad) push test adc enter movsb mov mov in pushf pop sbb adc and xor cmpsl inc mov add or (bad) mov movaps and pop out jecxz dec cld cltd ret sbb (bad) mov mov loope arpl mov mov push lods inc add jecxz or clc push dec adc pop add inc jns jle or popa add inc mov adc cmp xor mov loopne jg push sbb xchg mov fs pusha lds inc cmpsl xchg xchg lea adc popf addb add subb pusha mulb add subb mov push js test int loop sbb fld1 (bad) jp repnz xlat fisttp add fcmovbe xlat sbb mov xchg wrmsr mov jle sbb cld jo std inc fmull and push add mov push repz popf pusha xor sub sbb clc mov sbb sarl adc mov and pop movd mov lea add and inc xor xchg (bad) adc (bad) or dec sub mov and shr push inc add test sub sub mov mov scas inc cmp pop call imulb lods fdivl or pop cld in xchg xchg cmpsl in cld icebp push scas pop cld sub add addl je adcl jg sub test and adc enter cld int3 and and pop add jb cmp clc xor mov xchg push sbb mov dec push inc enter inc leave test add lahf clc sub movsl inc xchg push inc sbb in and push inc mov js inc clc dec or icebp cld or dec jl rorb adc add stos add mov push clc xacquire arpl cld imul mov push mov add loopne jmp es pop or (bad) movzwl push adc movsl or add or add dec sbb xor (bad) mov or jmp pop adc cmpsl inc push mov (bad) jg fs stc add mov xchg cmp push mov add pop mov loope popf and daa push js mov pop xchg push rolb stos pop imul out jo xor add mov add xor test out ds lock into xchg cltd ret loop and out dec (bad) push sub dec clc dec add aaa mov adc xor add sub xchg andl enter cmpl rol mov lea inc xchg mov xor loop dec js icebp sar (bad) fidiv call xchg (bad) inc mov and or or add iret adcb add or stos push aas je js sbb in shr and pop or (bad) xor mov push sub aam jo pop ret in fisttpll dec pop out pop sbb sub cmp or mov adc pushf cs mov fnop inc (bad) or fdivl pusha addr16 shr or push les js jle and sbb pop rcrb hlt fisub mov xlat jl add popf adc push sbb ret nop or cmp adc xchg add jge cmp dec adc lcall pop cs add inc movl nop jo add pop ret dec cld and jnp or and std cmpsb ds add dec sub jne jno mov out ds inc mov or loopne lahf xchg or dec mov repz ds insb movntq and and push shrb adc sub push xor inc and mov pop pop jmp sbb pusha fistl movb lea adc sub sbb pop or mov add sbb jne sub xor test or or cltd nop sub aas imul or and push fidivl add cmpsb gs rcll repz or sbb pusha push push repz mov arpl push xchg xlat jne pop in adc lods dec lods xor fcomps adc pop push add das movsb repnz jne adc dec mov lcall mov adc or cld scas sub xor add jne pop ljmp inc dec cltd xor sbb clc sbb outsl lret pop sbb cli pop jno (bad) je (bad) cmp rclb mov and enter inc or or xchg add int inc mov les (bad) cmp jb pop enter mov push ds and sub jb ljmp inc js in (bad) jg or add push sbb adc pop (bad) cs xchg dec push inc ljmp sahf or or adc or adc sbb vpsubusb mov and fiaddl xchg repz (bad) mov js or call xchg jns fist stc add jecxz pop push (bad) ret shll sbb shrl mov pop jmp fmull push pusha das inc xor repnz mov jb or gs sbb shrl sbb xchg rolb int3 les mov daa or pop mov xor add fwait jmp lahf mov and push or loop movsb xchg leave jmp lods subb pop daa sbb stos and ds dec sub sbb inc inc or adc pop add sbb pop xor jb mov push mov or (bad) jb adc je dec dec jbe mov adc inc lea loopne push mov adc popa fisub lock adc imul or dec adc stos (bad) mov inc pop sbb push sub xorb mov cmpl pop iret push outsb jbe inc inc add pop xor lcall lods dec xor fnop punpckldq push icebp xor and (bad) fnstcw popl mov int3 fcoml ret push sbb js cwtl push inc mov xor ja push adc leave and out and sbb pop mov mov rcll dec or or outsb cmp jmp std mov cmp mov lea mov iret push icebp adc out fiaddl arpl test fsub sarl stos cmp mov popf popf (bad) mov (bad) lock and adcl lret push jle lret dec push xchg jns inc pop pop sbb (bad) push fcompl add mov cltd and pop lahf mov mov or in jecxz jnp out add mov push inc loopne lahf pop push (bad) xor shll xchg lret dec mov in jae add popf clc ret add pop dec dec lahf call pop loopne jle mov push push mov shlb mov add sbb adc repnz lret cmp adcl out push dec jo popf push lock mov cld adc enter adc mov or fisttpll cwtl inc cmp in mov stc inc inc jl pop fldz mov (bad) clc push cmp std fsubl push pop cwtl and adcl pop xor bound mov inc clc sub ficomp push call cld cmp add xor xor test cwtl push xor xlat cmp inc lret sbb adc xchg dec std fmull or mov sub es jge roll cs enter (bad) aaa sarl jecxz cmp loop lea fsts std pushf inc aad icebp (bad) add pop push inc rol xchg call xchg imul add or sahf out enter out dec cmp xchg add subb mov inc lahf in adc idiv outsl lea inc popa imul (bad) mov jg dec pop movsl cmpsl jne clc fwait add dec xchg push xchg lock xor repnz sbb add in dec das push faddl push jne fsubl pop mov (bad) sub or jne mov or push dec popa rorl jl push mov insb add rol and xor test mov jbe sbb js stc add pop push addr16 popa mov inc mov cli mov push push mov repnz lods outsl insb jb repnz push and int3 ja and in jp jge popa add jle cmp sub cmp mov inc sahf dec add pop in int3 fcomps sahf pop orl inc add push inc leave mov test xchg dec es mov rcll add mov push mov add int3 pop int3 fbld or cltd lahf or push dec jbe (bad) sub mov fist sbb and inc outsb (bad) clc add dec mov sub leave imul test adc subb aaa add sar add sbb jo add shlb bound mov (bad) xchg movsl push sbb sub push jl push call or xor mov dec (bad) outsb int pop mov jnp mov rcl mov push xchg les inc sbb dec mov enter sbb cmp lock (bad) push jl pop jp sbb js lea pushf roll (bad) pop add rolb add add cld addb or mov sub jo and dec rclb stos add (bad) push test inc sbb jne jg sub nop mov mov pop cmc ss sbb jecxz sbb pop cmp fnsave mov push pop insl ljmp mov xchg xchg push iret lcall and (bad) ss inc repnz or adc (bad) jns jo or pop adc adc js mov adc pop roll je mov lods (bad) push pop je pop sbb jge ret mov push mov add add or loopne push in adc notl es jl inc movsb xor inc call into inc lea cmp dec aam outsb jl dec adc mov adc mov xchg push push push inc push ss inc jo push add sbb fimul lret unpcklps jl (bad) jne inc push adc (bad) lea test jge (bad) adc lahf mov mov dec icebp add or add insb and adcl imul and lcall pop mov adc sub mov rclb dec jg insb add add scas pusha adc sbb adc push mov outsb adc call and add test std adc mov xor add flds mov lock pushf out jo loopne push shll fcmovu les or inc inc rolb push jne mov enter inc dec jo pop in and add aaa and or test insb add adc push jnp or data16 sbb shrl enter or inc or rolb pop xor pop mov (bad) xchg dec dec clc mov js mov pop mov das pop and adc lahf sahf sub jge sbb sub jl pop pop fadd pop push inc adc es mull xor mov (bad) cmp or push add pop xor mov sbb fistpll inc mov outsl and (bad) or inc rolb add call mov push rol rol int3 (bad) adc inc adc xchg (bad) push loopne ror or add repnz pop dec pusha xchg bound pop cwtl data16 sub ficompl sarb test div and and les mov adc push mov inc hlt push loopne ret cwtl push or mov or xor pop mov ss loopne gs scas inc loopne inc dec dec lret out and push dec adc clc ret jbe xor mov or and cmp and add ret sbb sbb dec inc push lea and loopne sub repz dec jae shl loopne jae pop pop push or cmp sbb enter or subb shll (bad) lods call mov mov push cmp mov mov arpl dec mov in xor adc or push fs sub sar mov movl or movsb cmovno test mov xor in pop fsubrs add or (bad) or es xchg add lods mov xor and jbe jbe sbb fcoms sub add loopne subl sbb hlt push clc das adc mov mov push and clc movb lret inc shlb adc xor jge adc cmp mov push aad clc cmc fisubrl aaa aad ss sub (bad) add xchg (bad) dec xchg rcrl pop test cwtl dec sahf cmp push scas cmp add data16 mov inc mov loop rcrb xchg cmp mov push test sarl xchg cmp lock call inc mov or dec add (bad) (bad) xor lock pop or push mov inc inc jl jbe xchg cmp push dec sub les xor mov repnz loop or push (bad) add ss mov xor lret dec adc lret mov test mov std call or cmp or dec loopne outsb mov mov sbb push fdivrs inc jecxz inc xor mov or cmp xor adc ficomp hlt pop adc xor mov mov mov je addr16 sti dec out hlt repnz sub lahf and mov and push pop jns adc arpl jmp nop push rol dec push fucomip jmp dec icebp jne mov loopne cli ljmp out sahf add or sbb mov ficoml in or ret mov add and adc cmpsl mov nop cltd or rdmsr sarb push loopne or add mov adc xor js fs pop xor shll jo sbb adc jp in test or call in sbb (bad) adc add ljmp xchg or loopne add adc xchg nop scas or cli and int3 int3 push add add js stos adc or imul push or add mov dec cmp inc xor push andl insl or pop cs adc adc mov test popf loop shrl mov lahf adc int xchg jbe in pushf lahf mov dec mov (bad) stc dec adc mov in sahf jne or inc push fs adc sub pop or int3 addb shrl dec movsb push inc sbb xchg clc push xchg stos rep jo cli or or mov jecxz test hlt mov add in and pop rcll je inc jmp lock add lahf adc inc or sahf rolb imul call xor pop loopne or sbb stc xor repz cld div repnz aam out (bad) js insb jmp stc sti dec pop enter and add add jnp or cwtl in out push mov pop (bad) je call imul mov outsl test orb subb push push clc out (bad) push daa cmp add jnp popa imul fisub (bad) loope in sbb mov fsubrp lods ljmp pop cmp mov iret adc shl ffree idivl add mov faddp call sub sub or jo and cmc pushf mov jge push out jne inc sub and loopne inc je lock test push push pusha into jl fdiv xchg out add and sarl adc sub pop es dec cmp outsb add inc xor pop adc and dec rcr call jl mov imul sub enter rorb add inc xor add dec jne xor inc aas in out mov test jnp orl cmp (bad) jp,pt fist or bound int3 adc push (bad) mov or adc mov loopne add mov aad inc pop sub lcall dec dec xlat mov push mov mov ror test data16 test (bad) pop int xlat sahf push or int cmpsb or pushf call jl adc movsb xor push mov imul iret or mov nop xchg leave xor adc sub subl jle cli dec insb pop movsb movhps add pop incl in xor lock test mov mov add jmp icebp movsb lock cs (bad) adc jmp in jb loop adc or mov les nop sub sbb lret mulb inc fisubr jl mov sti shrb aaa js dec pop scas and xchg movsl and mov jg or test (bad) xchg pop daa xchg cmpsb mov inc cwtl jae pop or jge clc popf or xchg adc sahf scas jmp xchg jle xor jp,pt arpl xor jns adc sub lock (bad) pop (bad) or imul jb adc or or sbb (bad) aad sarl sbb sbb shrl (bad) sub adc xchg pop or sbb sti add push call pop and pop cld ljmp movnti jo sbb push mov mov mov sub add lods cmpsl cli sbb mov insb add add dec jne lret sahf test add enter lods add movsl jo xor mov xor xor sbb in jmp push adc jmp or pusha mov (bad) adc jae push pushf je imul xlat test xchg ss call inc clc bound daa pop (bad) adc adc push cs pop or adc mov cmp and mov xchg sbb sbb mov add bound or cmp jnp push sbb out shlb xor xchg les add mov in or sbb mov lret jns sbb test xchg add cltd sub cmp rorb imul int3 rclb aam jmp sar lea mov push mov mov and push pop inc lea mov or and mov push pop stos enter repz add add insl jae int cmp adc cmp (bad) pusha test push movsl sbb mov xlat pop push add cmp push push fcoml shlb adc sbb push inc xlat fldenv sbb xchg addb or cltd imul add cld or dec ja int les adc adc or mov rorb and inc adc test sub jo loopne inc mov mov js xor stos and mov orb daa inc (bad) test xor jmp sti cld or add mov cld rclb mov jmp pop sub test sub insb lods mov sub ret imul popa lret ds add loop xchg test loope (bad) stc aad mov (bad) cld cmpsl mov adc (bad) add je xchg adc stc sbb mov das shl inc mull mov pop sub (bad) mov fs inc rcrl sub sub cld jnp dec xchg add or jb mov xchg stc push inc or fld incl sti lret add (bad) cmovo aas test (bad) dec mov cltd add add pop mov adc push mov inc jo pop arpl lea inc aas test push add or push loop repnz mov call test ret fs icebp push ds and sbb add add pop inc aam imul add and fldl fwait cmpsl in cmp pusha lahf cld testl (bad) iret add lret leave shll mov mov sub mov in mov dec insl add add cmp pop in fsub xchg mov roll adc notl xor sub (bad) rorb negb ret jge insl or pushf adc pop dec test leave (bad) in fldcw or mov dec add or sbb repnz inc cmp xchg loope dec stos dec scas sahf (bad) pop ret mov cld mov lds inc jae inc inc sub cmp jl push std or sbb (bad) cmp sbb mov adc lret add and in movsl lock cmp add int lds jno push aas movsb clc and orl push pop sub lret sbb ret mov adcl (bad) aad (bad) and int3 mov pop fldt popa aad inc mov mov in push loopne stos stc addl ljmp push test cli xor cmp mov cwtl std and fwait xchg jle push jno fmuls stos jo pushf push jmp enter jo or xchg add sbb ret mov out (bad) (bad) sti push (bad) jmp xchg imul imul enter fsubl add add sbb jle lea dec rorb add adc test nop mov pop jle mov adcb nop repz push cmpsb (bad) cmc shrb jmp iret jae dec inc sbb repz mov divl int3 jge xchg outsl or push cmp cmp mov pop fldenv pop (bad) adc push aad cmpsb hlt pop loop and jae nop nop inc sbb xchg xabort sbb outsl add popf mov sbb cltd xor inc lcall es adc dec pusha or add pop cmp mov lret xchg cmc jl icebp sub mov mov inc fadd pop cwtl or mov in mov mov xor xor mov mov ret es lret jecxz lock or inc dec inc adc push lods sub add (bad) stc inc and enter cmp and inc jbe jl jo inc push mov lods or sub stc mov jge mov xor (bad) out (bad) sub jmp shl das mov xlat loopne sub aad adc js mov adc jae ret cmp mov les mov insb or jecxz jne mov sub mov inc sbb mov mov lods (bad) mov scas mov repz push add pop ret es push add cmpxchg pop psubb push pop pop pop add jge test or xor xchg inc or cmpsl cmp jmp adc and addl or mov mov pop and std lret add xor xor out or push cs and inc or cmc mov stos loopne push pop mov cmc push ret or cmp adc sarb pusha insb or in popa xor adc push push xchg ret adc icebp ret inc cmp pop push adc call xchg test sub xor cmp push mov clc (bad) mov cmp psraw popa movsl or popa loopne gs cmp lret adcl ds subl nop inc inc add test mov inc hlt xchg and add xchg add popf cld cs mov dec loope bound lret cmp mov and in in jne idivl push push sbb neg (bad) lret jl or mov pop rcll fstps pop data16 pop mov jnp cmpsl cmp xor inc fisubr jge arpl aas fwait push pop inc ret rorb sarl xor cmpsb adc lock enter push roll les mov adc movsb fildll xchg jo pop ret hlt test push and rcr stos add and pop andl (bad) aam add mov dec test stos (bad) dec cmp cmp fldl or mov fs test mov xchg rolb call dec inc xlat js daa pop xor push jecxz add or test shrb jecxz add and push scas sub adc repnz jne jecxz sub and jb push sub jae dec ja or xor and xchg scas push xchg loope orb lods dec mov and in xlat lock add mov fstl clc or jne std push call mov jmp icebp add es cmpsb jno leave mov pop imul fdivr xchg ja loopne mov in lahf dec shrb call and pushf mov dec jnp pop pop fidivr mov repnz or xchg lahf fbld mov push clc les mov fidiv or cmp add inc (bad) add rorl jns stos or jne fistp adc jecxz,pt rorb ds jg adc fisttpll adc jns movsb push sub or pop jbe dec add ds pop xchg mov popf dec lret push loop mov fucom (bad) shll jno xchg int scas mov jne lds mov push les mov cmp dec movsl mov sbb popa jecxz jmp mov loop pop rcr adc iret adc popa aas iret push mov mov test ficoml hlt or jg clc lods (bad) dec ffree call in popa je sub lds addr16 push or pop jmp (bad) jo rcll or fcom inc mov add repnz test aaa xor ss mov jne push cmp daa sbb lods push sti iret jnp adcb pushf cli fsubl push neg add and daa mov adc pop add andl daa shlb test (bad) jmp push xor push cmp repnz lahf xor cmp test test cmp adc enter lock xor dec es popf add mov nop mov mov or mov cmp cmp dec add bound sarl and lret js test dec mov xchg cmp and pushf xor cmp push lret cmp push (bad) cmpsl cmp xor (bad) push adc or (bad) mov sub bound mov or nop mov xor or adc dec jle mov test ljmp leave repnz xor enter push cmp aam (bad) aas push mov pop adc cli aas enter sub movsb adc pop test addr16 mov aas testl and cmp sti es ss add (bad) mov pop sub sbb pop int mov shrb xchg leave mov lea inc in out fdivl in inc or pop lds or pop (bad) fistpll rcrb fbld js das push push adc or (bad) pop fisttpll pusha lea or add sbb repnz idivb or push or jmp sub aaa mov sub js or repz push lcall movsl out sti push js imul push repnz nop in push push add dec inc push mov (bad) adc or mov mov mov mov cmp xchg scas pop or popf push inc xchg lcall jne add loop mov call mov loope add mov test std sub inc enter xorl cmpsb add sbb fdivrl inc lock pop and lahf sbb leave mov or fwait cmp jno adc xchg int sub (bad) sbb mov mov aas cmp xchg fs adc mov push push push movsb lods or mov mov mov push sub mov and dec mov push adc cmp mov lahf sub ror sub add (bad) xchg fsub mov jmp test push (bad) out add inc mov mov mov fstpl loope lock cmpsl popf mov dec sub or mov mov sti xchg loope imul iret (bad) je push sub xchg xchg hlt push or pop xchg dec push pop (bad) sub int3 aam mov negb pop pop cltd jmp pop mov adc jmp movsb xor bound mov add add mov je cmp sbb mov iret cmc inc mov cmpsl pushl cmp mov or out push xchg mov cwtl or push insb jns inc mov mov pop loop mov xchg jecxz jo (bad) inc mov loopne or or or nop xchg rolb mov rcrb pop push jecxz fadd fistpl lahf fimull sbb add jns nopl test add or fbld pop mov mov cmp hlt xor int or jmp ja aas fisub cmp mov ror mov sbb cmp jb push adc push push adc shrl xchg and imul test mov add push mov mov clc inc xor cwtl cwtl cld sub rcrl jne inc js imul ljmp (bad) lock pop int3 push mov xor cmpsl pop sbb jge,pt inc movsl mov popf sbb je xchg push fstl insl xchg and rcrb test ret push aam clc cmp xor pushf xchg lods andl xor mov push sbb movsb xchg iret idivb (bad) mov adc loop fisubrl adc mov cmp mov test out loopne add xchg mov mov or and jo outsl jno mov into add ljmp (bad) (bad) push and xlat mov (bad) sub mov stos mov (bad) scas push out mov or lock mov mov fdivs mov xor cwtl push cld add xchg je mov loopew,pn add lret lods or jl adc aas data16 inc or xor adc inc add mov add dec push sub or pop inc mov add sub aad or fnstcw add in inc das (bad) sub push sub xchg add adc cmp add lock sub out jl sbb sbb outsl fld outsl popa push test test inc and xor mov fild add xchg shr in je dec fadd xor add (bad) inc or btc jno add add add jne inc push xchg jmp mov js push sub add or loop adcl inc stc add jecxz test push inc jb idiv test cwtl push nop lds xchg add cmpb push cmp lea lods dec in pusha lods movsb faddl pop cmp iret jecxz pop sub mov cli lds inc cmp pop clc sbb mov add pop movsl push mov jo,pt popf pusha enter das pushf cwtl pop or insb lea stc xchg movsl and sbb (bad) test lods divl xor mov or test add js xor xchg pushf jo mov mov insb popf les les lcall mov or leave inc inc mov gs in es mov add enter fcomi les jbe dec and daa ret mov mov inc mov addl fstl and jg imul jg jl mov loope stc add or bound popf je sbb adc stos pop mov and add mov dec mov insl enter sbbb pushf fcoms xchg cmp je and jecxz xor mov enter aaa jne sbb xor xchg dec mov pop dec sahf jbe adc xor (bad) int pusha inc mov imul loopne mov add pop clc add mov sub sbb adc pushf int or fldenv add and les ja jg push inc dec (bad) jg sub mov push cs (bad) cmpl dec or dec and add push rcll or add cld push cmpl jg or cmpl pusha jg push jg test sub adc rcll add roll add xor test xor jg sbb adc mov cs inc pop add cld jg xor outsl push (bad) jg push ret (bad) jg rcll cmp jg shll sbb xchg cmp sbbl inc test or rclb (bad) adc lock cmp push mov stos mov jno les nop cmp sbb cmpsb push shrb inc push mov or adc ret lret pop sub mov and or and jge lea push mov add mov loop adc pop movl push mov cmp jo mov incl mov outsl sbb subb out bound jno loope pop pop add mov jecxz mov fistp cwtl add sbb nop xlat sarl cs inc mov push inc cmpsb xchg mov mov add movsb dec in cltd fisubl push mov xlat adc dec push loop sub imul mul stos add or dec mov lcall fs cmpl imul mov sbb or add push sub xchg xchg (bad) mov adc jg pop push stos mov cltd sahf and xchg xchg mov cmp nop sets mov mov mov xor dec and loope mov lahf adc aad ror gs lock push imul lahf inc movsb sub add lahf cwtl jb lods mov add lahf mov xchg xor pop mov jb movsb adc test or lock mov repnz jg js mov jg les clc add xorps adc out mov adc cmpsb and xchg jg sbb orps or inc mov pop adc or jg jns and aam or mov mov subl cmpl dec adc add data16 bound sub jb (bad) dec mov stos aad push or mov inc jp les in mov out jg lret fsubrs sub cmp push sbb and lds pop mov shlb cmp call sub mov mov lods dec das mov mov popa sbb fisttpl pop dec data16 and cwtl xor neg add aad and and xchg arpl frstor dec mov push lcall leave push lret nop xchg pusha and add outsb (bad) repnz push ret cmp je lea fstl or loope popf les outsb (bad) aaa xor sbb nop fs or pop les sbb add stos mov icebp or (bad) and pop mov leave int int3 pop je out jb out leave cwtl out push stos and ja jb xor cmp mov jb jo out cmp repz test nop stos arpl loop pop or mov stos out movsl xor xor je imul or shrb das movsb out out push cmp mov mov fistp xchg and int fildl test inc les push mov aam adc sbb inc pop iret lods and inc pop lret mov pop xor pop and pop rcrl mov lret and outsb sbb push cs xchg and mov (bad) roll popa out insb add icebp push adc ret pop sbb dec push push pop adc xchg int3 pop sub imul inc dec pop pop test and pop or add pop mov inc inc add cmp pop pushf movsl and xor sbb std pop dec push sbb iret push adc mov push add mov mov lret fwait inc out enter inc pop imull lods inc popa adc jne test pop pushl push add lods fwait pushf dec imul push inc sbb (bad) dec adc in jne arpl push jmp js jno je xor mov mov inc jne xor lock xor mov jne xlat adc insl jg movsb pop inc les lret les in test xchg mov dec xor or jno fxch int3 int3 inc inc sub push adc and scas mov mov in mov add cmp sbb mov mov nop mov inc push mov xchg mov nop mov push add pop or mov mov es and add and push sbb lahf arpl sbb inc movsb xor xchg mov lahf or xchg sub xchg mov in mov and mov mov and mov mov sbb cmpl mov in and adc lahf mov and lahf lahf mov mov mov inc lock xchg and mov xchg jb inc add mov (bad) in xchg lahf mov add inc mov lret lahf mov push lods cmpl mov add inc lahf mov pop sbb jb mov fstpl inc mov pop adc lahf pop pop fnsave loopne push cmp cmp lahf out xchg dec adc mov aaa xchg stos mov push cmp in mov xchg fs cltd inc mov mov or mov mov and and or aas adc dec popf lret add mov call or push mov jp dec pop inc inc lahf fsubs push popf mov cltd mov shlb cmp das mov (bad) aam dec add dec push sbb pop jns mov loopne push subl xor insl movsl and push adc push imul cmp push std cmp lea cltd in in outsl rclb outsl das lods push inc int mov outsl rolb stos xchg outsl andl insl xchg lea stos pop inc popa jg les mov push pop mov mov inc mov shrl test xchg lret sbb pop xchg xor mov mov inc sub int ffreep push pushf mov add (bad) mov test das ds test jle mov mov in stos push pushf and sub in dec cmp xchg add ret daa rolb clc mov or push jp xlat xchg mov int (bad) pop test pop clc and push cs mov adc cmpsb lret lock mov aad cmp xchg dec xor jb mov (bad) cld mov jl les mov rorb movsb mov jne pop xchg nop push popa xor mov xorl pop mov pop xor rcr inc fimul int cmp outsb jmp das push jp fst pusha or push sub in sub stos movsl mov mov (bad) and sub movsl fcmovne test fimul and mov jmp lea or shrb or test mov lds lea or and cmp xlat lods dec jg mov aas nop push sbb xchg outsl scas or faddl pop pop mov xchg test mov sbb fistpl daa int3 loope pop arpl shll jbe sbb mov sbb xchg mov lods (bad) jno (bad) (bad) rcl adc aad loopne or cmp (bad) sub test in jmp sbb jmp dec add inc jl push dec pop jo pop sub fiadd or into repz or and dec add inc push bound mov jne daa sub xor xor lods adc (bad) jmp rclb movaps xlat mov sub or movsl cmp movsb dec scas sbb mov cmp (bad) jo or andl or mov and jo fwait loopne sbb pushf xchg cld movsb (bad) imul inc imul cmpsb sarl mov add sbb test cmpsb (bad) cmp pop dec cli mov and scas add (bad) jbe xchg mov pushf aas xor leave or subb pop push add js or mov mov sbb sbb cwtl mov stos mov fiadd bound mov (bad) cmp inc addl mov test pusha insl mov shll mov test xchg ja sub jmp cmpsl mov popa xchg mov (bad) xor rorb (bad) adc nop ds xchg cmp lods shrb nop pop pop mov xor test rcll in xchg dec rolb cmp jne push cmp nop jmp jl mov imul mov orb mov mov nop andl test imul inc pop jl adc xor push lea add enter rolb enter and bound pop sub movsb inc shlb or xchg test xor and arpl pop enter dec inc ffreep sbb sbb dec ror xchg aam fadds add loopne add sti (bad) pop xor movsb push and adc xor sbb mov pop cmp xor xor sub or sar dec jo and mov pop mov int or (bad) fcomps xchg in sbb dec stos jno and jnp roll lds out bound mov push or add sbb sbb pop mov ss mov mov cmpsl orl inc sbb iret jbe inc (bad) dec movsl ja test or lods dec clc jge jns sbb pop leave mov sbb lea pop stc fstps mov add pop pushf push aaa jl adc adc cwtl jmp loopne inc add aam (bad) hlt popf enter adc movsb and and sub mov fildll mov enter cmp mov dec fwait enter inc mov sbb dec in cmpsl inc xor out add add xor pop pushf push cmpsb insl or dec fmuls idivl (bad) out rcr add push dec sbb sti jl or lea jge cmpl imul inc or (bad) jmp xchg pusha lods outsl and cltd stos aas enter mov lods push stos mov add adc and sub in mov dec push add in je lea pop inc pusha inc les and mov les dec push mov pop addb lea inc push cmpb pusha dec xor mov pushf push das add sbb add mov push cli push or jmp pop fsubs (bad) insl sbb ja pop adc adc push outsb jl jecxz xchg lods les push cltd negb inc lock xchg das clc int jb mov rcr ret fwait sub js xlat and inc popf dec incb and mov (bad) cmc insb pusha jg mov inc imul jmp ret nop icebp mov add sub mov adc shrb imul (bad) les mov cmp jne movsb adc push or leave jns lods pop pop dec pop in jae lods test aad (bad) dec outsl repz arpl and in cmpsb xchg xchg ficoml das and push inc mull sub dec push movsl out arpl cmpsb stc pop scas and sahf addr16 ja bound js and stc div jns nop imul nop mov outsl jns push mov mov or cmc addb test dec loop and dec insl mov sub mov jbe in push push sbbl cmp push and or mov sti sub mov inc pushf imull cmpsb pop movb cmp pop lahf cli xor fisttpl cmp sbb icebp cmpsb push imul pop jb push sbb aaa push mov lock cmpsl pop xchg rorb jmp pusha sbb movsl push pusha sbb adc vmread mull test in adc aad and sub or jo scas add mov mov pcmpgtw lods test dec aaa dec pop mov insl pop mov inc test lods and mov add xchg push adc pop push lods sub jo js and popf adc pop pop nop jno and mov mov mov inc mov push sbb pop push dec xor icebp jecxz int cmp sbb push push cmp jae mov mov daa inc lods fstpl sbb pop jo sbb loope test in test mov adc ror cltd cmp pop dec jnp les inc gs (bad) sbb je imul inc inc shlb add or and or add inc and inc add cmp mov or test pop and xchg or and cmpsl xor aaa or add loope fistpl or mov mov aad pop mov push decl aas addr16 cli subl add cmp fstps flds add imull xor test add bound xchg xor adc jne mov icebp or sub sbb iret sbb xchg mov ljmp sbb in or out adc inc pop (bad) scas jge sbb mov fcoml lret into jp ret or dec push sbb fnstenv lock add (bad) int3 clc adc cli out add xor nop (bad) out clc outsb and adc imul cld clc and das or aas jecxz jecxz es cwtl (bad) dec xor enter rol aas xor mov add iret enter jns cmpsb dec add inc or adcl test loopne cltd add mov and aas aas popl imul mov movsl jge push and insb rorb (bad) dec aas nop out loop sub aas in rol xor sbb push dec dec jno aas pop dec add (bad) lods int3 and repz xchg out in xchg bound pop test sub test pop mov nop int3 int3 jmp dec aam (bad) cwtl imul inc and inc add dec sbb incl dec add lcall mov lods and and adc movsb add xorb sub iret mov stos lea (bad) cltd mov lret lods jo sbb lea sub or add lahf and or (bad) mov nop add push scas mov stos mov pop les add or addl push inc pop cmp rol inc xor mov cltd orl cmp lock cmc and xchg and imul cmp pop call adc movsl push jmp fisttp mov movsl fnstsw test pop push mov mov or sbb (bad) xor push loop mov push mov or and mov sbb adc loop xchg xchg xchg pushl xchg lods lods arpl rclb mov mov xor push les jne adc bound sbb cmpsl xchg add out iret or dec jge xchg jl fnsave and adc js xchg xchg pop push and mov push and add dec pop loop xchg mov adc add test and arpl jmp jmp push adc fmull ja sbb dec lock in xchg adcb mov in movsl and jb incb sbb adc push xchg addr16 adc adc ret lds sub jg adc (bad) add xchg in fadds jno lret cmp or mov cmp xchg mov mov mov ret and ds pop dec ret adc lret or sub mov and xchg mov inc add add inc ret mov adc add push lret lods mov mov pusha push mov cmpsl push and lahf je leave cmpsl sahf shrb movsb dec mov mov or jb adc (bad) and (bad) pusha jno cmp pushf scas adc cmp mov outsb mov adc pusha pop jae and add mov enter inc inc movsb add mov cmp xor int3 or nop and test add mov jg loop dec push mov lods dec add bound sbb push jb mov cmpsl jb mov pop les dec sbb mov cs test adcb pop (bad) and (bad) sub mov lds leave sbb sbb daa pushf and (bad) sub mov jnp enter arpl mov lds js (bad) xor fistpll test cmpsl inc jb jge popa sbb add sub nop sbb test add test (bad) lea pop enter dec jno enter ret roll or int3 lret add lds test lds lret mov mov jge leave shrl sub pop cmpsl jbe sub pop sbb das test sbb insb sbb addr16 cmp aam push inc cmp and sub popf hlt cmpsl mov (bad) adc push lahf ljmp in xchg inc xor pop clc adc lret sbb mov dec das je jl frstor jmp xorl adc ret add dec jle adc aam inc mov call xor and fnsave sub imul pop mov xchg fldenv movsb lret cld ds mov pushf mov aam loopne cmp rcrb xor shrl cmp push pop ljmp and loopne cmp adc punpckhwd test pop clc or push ljmp mov push movsl mov push sub mov dec lds pop cmpsl scas loopne adc je jns nop fbld fidivrl xor lods jge sub inc rolb test ja xchg shld movsl or scas test je cmpsb movsl push inc inc loope xchg push cmpsb cwtl or aas add add sub mov lcall call out mov pop ret int3 cwtl push or mov fs test sahf jno xor and push sti jecxz jb fbstp cld fs mov push push popa je paddq sbb (bad) or (bad) mov mov mov pop push or loope and es jl loope mov xor sub jle jl and mov jp cmp jbe (bad) jo sub adc das rclb mov dec pusha jns imul cmp add loop adc inc jecxz push and pop xor push mov nop test outsl cmp pop push jmp push adc pop and xchg jae fs mov inc xchg sahf mov mov xor fcomps or les ret pop jb out add push and test fstps push test je lock sub rdtsc mov sub jecxz aam inc xchg mov test and test cmp (bad) mov sbb mov jge xchg jne pop sub aaa sub mov inc adc xor xor incb fimul xor sarb mov or add and inc inc mov (bad) icebp pop fcoms out lock cmp mov push jb fxch dec pop cmp fmul (bad) lahf adc ljmp je or mov sub in push rcll out or enter pushf imul and (bad) in jge inc mov add jne dec sub (bad) push sub dec add cmp add daa or flds add lea adc leave add test mov xor clc mov int mov nop pop and std inc sub insl (bad) pop rol stc add hlt xor inc shrb lods jmp les test decl fwait mov fistp sub mov lcall arpl adc insl pop mov and adc pop mov test into adc je add cmp and out pop jg jno jmp sub push out out ljmp push cmpb inc dec in int pop movsb inc cs test push iret inc lahf pushf dec lds pop add sbb push leave and rclb rol xchg pop inc dec lea insb imul push stos pop xor or mov add cld sarb jmp xor pusha sub (bad) dec sbb and mov push sarl mov add add mov adc repnz xchg jl popl mov dec adc adc cmp dec and jo mov jns fsubrs pop adcl xchg mov add pop xchg pop int3 pop add rcll cld and adc movsl xchg lea pop jp int fistl mov ffree test pop push cmp add (bad) fistp or jl jns mov fbld cwtl out ficomp add jo cmp mov mov ficomp mov mov sub nop xchg mov pushf jo or leave dec lods pop std pusha pop and pusha inc fbstp aam inc or adc inc imul into rcll sub adc add xor in pusha add inc fistpll xlat into ret xlat dec inc mov lahf jns add fisub fldl adc xchg sbb cmpl fcompl movsb in sbb sarb mov call or push imul mov push popf adc sbb clc mov xchg inc push lret ret pop les jb mov mov mov js loopne mov mov sub and fistl pop rcrl dec ret adc xchg sti push pop mov mov inc clc sbb inc or push icebp pusha xor dec add mov add nop and push mov inc add or add in xchg (bad) loope mov dec pop dec push loope je mov dec icebp mov add neg jp pop dec mov pop sub divl lea push or je shrb mov push leave xchg dec lahf mov dec inc xor adc mov and jg pop test dec jg xlat (bad) adc dec xchg inc fs jg xchg jle popf cmp mov jns psllw push in hlt imul adc rcr fs fwait pop repnz add adc (bad) pusha lods adc jp add fldcw jne mov mov adcl xchg xchg and lahf xor fwait mov and jae lcall fbstp scas aam int3 mov aaa hlt jo es or and inc dec pop and jp das sub pop sti xor mov sub and dec pop sbb popa and (bad) cli lahf inc dec cs add jecxz mov dec shll push xchg fsub jo mov push (bad) cmc and lea adc (bad) call lret (bad) jne push cld dec add pop rcrl lea loopne xor push sbb insl add incl xor push mov bound and or sbb repnz mov pop (bad) adc mov add pop mov xchg loopne pop pop dec daa dec mov push gs rorb test adcb in je ftst in xor jnp xor ja sbb lods and cmp aad adc mov mov add cltd add cmc adc sub lods pop mov loopne js pop cmp out add popf push xchg cmp sub fldcw sbb outsb sbb add inc cmp lock adc mov lea gs sub mov inc jnp xor leave inc adc pop xor add data16 adc shl pop jne les xor or mov mov xchg in iret push lahf sbb add fs push cmpsb rcrb jl rcll or xlat test jge (bad) shlb sub jmp sub push xor lds or lods jnp pusha dec fild sbbl dec lret mov jae outsl and adc lea push push and ss inc mov and ror adc test lea and (bad) dec fstpt sti mov pop aad add push fiadd cld cmp mov push mov pop movups adc in subl push cmp mov cli rcrb gs mov sub imul mov rorl mov jo jo in call mov fnop lock (bad) or outsb push orl fisubrl ljmp scas mov aas (bad) adc adc cmp adc inc hlt das push and jo pop sub or sbb pop or pop jmp adc std adc and icebp and mov shrl push test xor push pop xchg jmp enter push or sbb gs mov push arpl mov adc add stc jecxz fadd push fildl (bad) popf (bad) mov stos iret pop int3 mov inc shld xor or into xchg pop dec pop ret lret dec cmpsl adc and add cmc lea mov imul daa cld js cmp incl sar xor test push and test pop jns das nop xor sub cmp (bad) and test scas mov jo pop das je fildll or jnp imul lock add push xor sbb push xor sbb cmp fcoml jbe mov call movntps notb cmp es inc pop add imul cld or out inc dec aaa aad adc adc test pop loop enter shll and aas xchg int3 mov add mov cmovne add popf and aaa jle in lea ljmp int call es jmp ret xchg xor push push xor xlat or inc push pop scas pop xor test fstps dec ret push jg sbb pop outsb fstp jo pop ja inc mov jmp les iret popf fcmovne test fcoml and inc ja adcl pop insl add clc aam lock aad rcrl mov jo fstl sbb pushf test or and sbb adc mov adc and shrb cmp ss (bad) loop ret pop jnp lock arpl repz xor hlt jnp xor and jbe shr and inc xchg cmp lods (bad) mov pop shll mov mov add aad xor sub bound xchg loop jno adc push mov xor mov mov push aas aaa or sahf pop test lahf mov add xchg mov lret imull sti ljmp jecxz or gs adc movsb (bad) das or and daa ror sbb repnz cmp (bad) hlt fdivrs inc inc cli xchg add mov (bad) push mov xor ljmp sbb add fildl jp test sti fmul push pushf lret dec adc lods mov inc sbb push int mov push sbb loopne add push xorl pop ffree adc in aad sbb mov or add enter ljmp lds mov and inc inc adcl xrelease inc cmc rorb xor subb xor sub into imul dec mov or sbb lock pop pop xor sbb inc sub adc clc and inc add mov pop cmp xchg inc pop lea add xchg pop pop and mov mov das movsl (bad) add xchg fidivl add iret jmp out call scas adc sbb push pop xchg push sub insb mov (bad) xor mov cld mov lea mov jg mov mov mov cmp loopne outsl (bad) test aam ficoml or icebp dec xor adc repnz loopew (bad) xchg in iret cwtl negb flds or xchg outsb sub xor add mov xchg mov mul out inc cmp movsb sub cmc pop jecxz pop pop or lret sbb ficomp lods mov sub cmpsl mov cmp pop (bad) jge push push mov in clc pusha ret cmp jmp pop mov shll movsl les daa out dec insl push (bad) aam fcmovb jl jg dec (bad) mov clts jno (bad) call adc in hlt xor lea test add pushf or or cld add push mov inc pop inc pop popf pushf pushf pop add push lock inc xor out mov jl mov mov sbb push lahf dec ds xor and clc gs mov out je mov aas mov jbe sbb imul mov pop sahf pushf cltd add push or in mov lret movntps sbb and sub inc inc insb sbb in std mov mov lahf adc add outsl aam adc mov mov xchg and call dec adc out popf inc jne das sub sbb push xchg dec sbb add dec shll ret pop or xchg xorl enter jp push jp inc icebp insl ret and ret and aas jno lods cmp jecxz movsl dec rclb notl fwait sub ss jle clc or ja sub or ja xchg pusha fisttpll push xor out push outsl and (bad) adc cmp pop dec iret xchg inc or xchg and inc adc sbb mov lods mov xor or sub push stos repz sub jle jp or and popa mov inc add lret push ror lret add inc fidiv imul jo and lds xor icebp (bad) repnz adc mov sbb ja mov popf fwait mov adc lock int push (bad) dec or clc subl or arpl inc cli xor xor insl out cmp inc push sbb notb xchg imul pushf sub sahf (bad) aas xor cmp in movsb mov push (bad) repz inc std push mov jne out rcl push out roll mov dec mov sbb dec sub cltd mov push pmaxub or xor ret xor jns jns push iret or mov sub adc cmpsl dec aad ret test popf neg fimull test push lods mov mov ljmp (bad) xchg scas xor sub xor add inc loop xlat inc (bad) mov rorl lea lea lea out add mov ds out sub sbb lea je int3 inc hlt outsl pop mov sbb call xchg and cmp xor ljmp popa sub jmp push insb loope cmp in sub popf imul jmp fisubrl push mul and cmpsb fs add add adc xor lock test js aas outsl push dec loopne adc test ss data16 aam cmp mov test sbbl xchg pop adc rorb push xchg xor mov pop fldenv adc sbb js and pop icebp fisubrl adc (bad) jmp aaa mov push or sub in push add xchg rorb aad inc add inc pop mov add rcrb ret clc xchg or fdivl sbb movsb or sbb test sbb aaa sbb mov in addr16 pop subb test adc cmp push inc out out out ljmp mov dec jle pop ss or lahf xor xor cmovnp imul push inc les sbb xor add arpl insb (bad) aaa lods pop xchg xor (bad) faddp sbb pop xor jns xchg (bad) jne cltd ret inc sahf mov inc ja test nop in pop xlat pop xlat shlb xchg out movsl jno imul mov sbb xchg imul jp adc xchg xsaves pop add xor insl and ds out aam imul xchg dec sub dec mov add arpl lods push adc adc sbb out stos adc mov add dec pop aad xchg xchg xchg imul jmp shll mov pop pop push aam repz cmp xor push (bad) rol jp and jbe mov add xor in enter and sbbb pop cmp add xor xchg aam clc cmp popa inc je dec pop in mov jg adc or pop and pop lods sub test or pop call push loope xchg cvtps2pi (bad) inc lock cltd push add adc xor adc xchg ss lahf pusha subl push mov cmp xor and test or or adc (bad) xor add dec in popf aam sbb cmp lods adc add icebp and dec jae sbb pop pop sub sbb mov jnp sbb pop inc test into mov xor clc or lea pop pop push ljmp sub aaa test test pop xor ret dec out and mov in iret xor adc (bad) sub ret int imul call inc jg sub xchg dec lcall cld fbld fs dec mov mov fidivl (bad) (bad) ds sarl pop pushf pop int in mov jns adc mov dec xor cltd test rorb mov add icebp xor loope dec mov loop je adc mov loopne xor and cmp cmp cmp ffreep xchg mov or cli clc push cmpsb jnp push pop push (bad) cltd sbb inc add jecxz pop movsl loopne gs xor xor and xchg (bad) inc push insb jg test out pop pusha pop out (bad) inc popa push test test or pop or xchg dec jg jo inc pusha xchg or js inc xor xchg mov xor xor jmp mov xor xor adc or cmp (bad) cmp je sbb dec xchg das fs fnstenv ss (bad) mov ret popf (bad) stc lea xchg mov mov adc js add je sub out movl out popf mov (bad) je ret cmp (bad) fs scas cmp adc pushf add add sub cmp pop inc data16 aam pop mov sub addr16 ret popa dec inc and add push rcrl imul fadds cmp loopne popa inc popa mov inc xor ss cmp nop pop and cmp pushf mov (bad) loopne inc push test loope fbstp pushf aam lea mov add jb xchg (bad) rorb (bad) xchg inc mov pop ljmp mov mov add jmp xchg pop xchg test test shll divl imul nop jmp orl mov insb push sbb rcrl popa and xor mov pop fist iret leave and adc push fucomi and jmp sub pop leave sub mov or popa fsubl iret mov add inc mov push cmp cs jp outsb inc sub cld add daa nop insl jno add fist enter fimull mov dec inc jmp fist out popl add in push push or pop xor cs pushf movb je faddp xchg push cltd ss and pop xlat popa cld daa sub add or dec nop pop mov (bad) jl stos arpl sarb add arpl enter ljmp adc subl jbe fiadd (bad) lea add (bad) lret imul sub sbb dec in add rorb call jae jbe aam add mov adc fadds sbb jge cmp mov push cmp int3 movsb cmp xor frstor or add and (bad) pop inc dec lods cld pop adc movsl and mov inc adc dec cltd in mov add je add xchg adc icebp shl lret or add popa and insl (bad) mov add dec ficom mov add (bad) outsb or add jmp jns mov xorl into jg mov sahf xchg std pop push add xlat daa lea ret test fadds xor mov or cmp mov decl (bad) fcomi ret lock rorl inc sub cld stc ror and fs insl lret cmp push call addb mov test dec scas nop aad test call js mov push incl or ljmp loope leave xchg int3 test mov or and sub jp sub (bad) popa and xchg mov jo dec test xchg cmp (bad) hlt rcll dec outsl mov xchg scas lock icebp push pushf repz idiv cmp mov pop pop jg and push divl inc test popa mov test imull push sub (bad) mov pop test and adc nop dec adc andb adc ret (bad) mov push pop in pop (bad) scas ljmp sub sub push dec call or xchg stos jmp movsb arpl pop add call inc dec ljmp sub aaa pop pop inc call push mov stos jo sub clc daa jmp sub push mov and or arpl or jmp or jg repnz repnz xor lret or loope adc test ret or sub xchg dec cmpsl hlt or fcoms lcall sub repnz jno orb jle popa movsl inc lock ret scas jb xor push xchg pop mov outsb add popa sbb jo add arpl add mov addr16 dec inc rcll mov ljmp les add add sub or xorl jne xor push jo test mov in push push cmp dec arpl lea outsl xchg pop popa nop (bad) inc (bad) mov daa xchg or lea jl stc or imul pop mov mov aad lcall inc mov mov sub rorl lods and mov xor sbb ror leave push fsubrs xor leave js and sbb jno pop pop lret or inc dec fdivp mov cmpsl jg add jo dec mov sahf add push sub add icebp add imul mov popa test or int lret popf mov or ret bound arpl jecxz das hlt fiaddl add add and mov flds pop mov rcrb int3 mov dec push sub mov arpl ja mov adc cli js arpl sbb mov add sub adc dec (bad) xchg dec sti cmp cmp lsl pop xor cmp aaa mov dec sbb daa loope xor lret call sub (bad) mov inc leave xor aad ja push pop inc push lods mov and mov ret cmpsl andl cmp and fistpl cmp adc xor add jne sub pop dec inc fistpl push adc rolb adc fiadd jnp movsb jne and fwait aaa and xlat lods (bad) mov sbb xchg call ficoml test fwait mov cmp jno pop or xor lahf inc arpl jp add rcl fist cltd (bad) out pushl jo (bad) (bad) outsb push xchg sahf pop mov lea lods pop mov sbb or dec shll out sub add sbb mov bound mov push jl sti out jge mov or sub dec or pop push loopne cmpsl mov jmp xor push mov sbbb xor wrmsr addb bound mov jne and xchg cmc sbb mov popa fcoms mulb xchg inc push pop lahf sahf ds sbb or add lock xchg roll inc fbstp pop jae or inc cld sub aam sbb jp pop add push inc push mov sahf popf lcall inc mov xchg pop popf and mov stos pop fmuls aas mov das daa iret (bad) dec xor mov inc push aaa pop nop xchg loopne pop xchg push ds js sbb loope mov outsb add pop jp iret adc push movb push out test and mov test push push sub adc incl cmp fldenv sub xchg movsl and fwait or fwait movsb mov sub xorl inc mov dec hlt mov inc test inc or incb inc mov or inc push orl imul fistpll je adc mov and sbb enter jl test dec mov lahf inc add mov pop xchg mov loop pop fstpl popf ret rcrl mov xchg and pop sar xor inc lcall ss aas push and mov leave pop adc jl mov and cmp ljmp add dec nop adc mov xchg jbe (bad) and mov xchg inc xchg pop rcrl push ja insb js mov pushf inc (bad) icebp vmwrite or fbld (bad) pushf scas and cltd or dec test sbb js rolb xor test test adc and and jg arpl jb test mov outsb xor lea (bad) ja jge inc cld xchg cmp cli sub ja inc mov mov stos sbb negl lds jecxz mov sbb sbb or jl andb cmp and cmp mov stos cmc mov in adc shrl or cltd fist sub inc inc dec xchg jmp test xchg mov inc movsb jb test mov (bad) cmc popf insl sbb (bad) pop xor movsb sbb bound sbb jns mov loopne in adc cmp or popa jns xor je jp sbb rclb jg mov (bad) test push add mov mov jg inc adc movsb popf adc lds (bad) bound insb sarl pop mov rcrl inc dec inc xchg mov dec je inc stos fsubs sub ret push loop pop pop dec mov mov push mov push mov mov jmp sarb int3 sub loop das mov sub icebp incl rorl or and jp mov xor adc in jne pop pop lock bnd adc das lds inc mov xchg das orl aam shll pop dec dec aam mov xchg in adc adc rcrb pop mov adc sub xlat and xchg mov xchg xor cmpsb jbe push dec shrl cmp loop mov jmp arpl adc ljmp push shrl sbb mov cmpl xchg mov lahf fistpll mov and mov fs jb and enter jns dec xchg mov cltd or xchg in mov mov cmpsb and sub scas mov jg shrb add push jg xor jg adc sbb jg stos (bad) aam mov push mov adc inc mov inc movsb jg xor mov mov mov and mov dec mov enter sub push decl mov pop jne pop adc dec popa mov inc lds xchg popa add or xchg pop lds xor test dec and and mov int sub push (bad) testl inc cwtl push mov inc add pop pop mov and mov or add dec sub inc mov enter adc sub xchg mov lds xchg adcb pop mov fisttp lahf pop and out popa cld mov jnp sbb pop fildl push ret inc xchg sbb add mov xlat adc (bad) mov (bad) mov jl add lock movsl and xchg and jo mov pop fistpl mov lds sub (bad) sub popf dec mov jb adc fcom (bad) jecxz xchg add jnp jl sbb sbb pop cmpsl nop imul int3 mov nop mov loope jecxz cmp roll test mov decb xchg rclb popa fadds mov test or and movsl jmp sti and in out nop dec mov fdivrs mov cld das add adc jne orl test rclb add mov iret lods mov jecxz dec movsl addl or aas out mov cmp mov lret inc push adc fs inc test xor lret dec jo jg xchg loopne xchg insb pop jbe jmp fldl lret sbb dec test mov jno add pop mov aad mov daa mov addl pop mov pop inc aas dec sub (bad) add dec mov ret xchg mov orl lock add jnp mov insb add mov xchg sbb mov pop push add pop sub aas fild sub daa xchg mov in lea mov jo mov and mov jmp lock xchg mov fchs out add pop cld push or hlt jae aas lahf add movl sub loope ja mov jo enter sub pop mov or pop mov mov (bad) or or bound fimul add mov aaa popa add and cltd mov sub fistl roll ret dec repnz lea loope mov icebp lods mov sub jp cmp jne mov mov fwait rclb sub push add outsl xor incl xor dec push and es or sbb sub sbb mov pop sub cmp pop pop push pop xor aas scas inc and and xor inc xchg add mov ficoml inc fcomip loop les pop cltd (bad) insl pusha add mov xorl add loopne mov push nop cmp and mov jg push inc mov jns aas inc mov adc xor inc adc loopw or in sbb cmp push popa movsb movsb out adc xor lea jg (bad) fadds mov test lea cmp sub cmp cwtl imul pop sbb (bad) jnp ljmp imull test lea call jnp jbe repz add adc add pop (bad) adc xchg add mov aas jl dec mov test lret daa testl pop inc xchg inc mov lahf xchg packssdw adc mov into lcall pop test sub mov loopne pop cmpsl nop dec das add int je dec test test lds (bad) btc jno ljmp pop rol mov or push mov cmp add adc xchg test xchg mov mov mov or sbb mov cltd data16 sub mov ficompl jl pop je std (bad) imul cli gs xorl outsb inc push pop jo mov (bad) or pop inc lret sub mov in or cld lods add push fisubl mov sahf adc dec jne or jl and add push nop aam mov pop cld lret xchg loope inc and sbb or adc mov out or stos sub xor xchg pop xchg daa adc ja (bad) pop pop jge mov mov pop ljmp incl popf sbb sahf mov sahf push sbb jns and sub scas lea nop adc jne inc jae shll fwait sub xor or cwtl xor xor jb cmp or jmp pushf ret fsts push inc addr16 fs inc mov jge push daa bound add sub inc mov adc arpl lods aas lret push jns xor enter (bad) sub repz pop sti pop pushf (bad) (bad) ss or lahf dec cli ret xchg in adc ret out dec pushf ret sub mov jmp pusha pop push fwait dec testb jge fisttp pushl mov or inc cmpsl lret push inc icebp mov lret push je inc or jecxz loop push sbb pusha sbb or sti xor rorb (bad) adc sub xor xor adc cs pop nop movsb pop xor popf xlat test test sbb push or lret xor movsb pop jge inc sbb stos adc stc test dec popf nop or push sub (bad) push xor pop ja jo add fistp dec and adc test push mov xor or xchg mov popa clc sbb and ret gs or xor jg,pt repz rclb push outsl ret or in push xlat sbb cli mov sbb dec rcl pusha pop add fwait sbb dec (bad) rorl push flds jge in rol in hlt into repnz sbb pop popa sub dec js loopne push mov mov xor movsl xchg andb cmp adc popa inc cmpsl sub mov repnz cmc push addl dec stc aas test repnz push inc scas push sub sub inc adcl sub add add jle pop imul sub sub adcl mov bound and xor rcrb lods and push test xchg or xchg (bad) es (bad) mov jbe sbb lds cltd mov movsb mov pushf mov shll lret pop shlb (bad) or adc (bad) lods pop rolb (bad) (bad) xor jnp imul sub lret push mov ret mov mov js pop xchg inc mov loopne pop cmpl sbb push mov pop mov xlat lods rcll add (bad) repnz rsqrtps mov imul ficom dec ret xchg push push aas pop jo mov and mov adc push ja add or pop dec cs movsl inc pop push mov loop and (bad) pop inc popa dec daa icebp test iret inc xchg rol in insl mov sub (bad) nop repnz adc push push repz cld xor pop cmpsb ret dec call ja test sbb and ret or and out inc inc mov das roll repz jge xchg call imul mov adc adc jne roll mov dec inc lods aad mov repz dec inc cmp push jle inc out int jmp js and (bad) je push sbb pop jecxz jno adc faddl jne mov inc pusha dec lahf js mov mov and or (bad) mov mov pop les and sub gs (bad) std add xor push or jns fist loopne (bad) fcmovb add sbb shlb pushf sbb fildll clc cmpsb sbb movsb lahf out jbe pop adc dec sub lea push test and push jecxz popa imul shll test pop add add or xchg sub inc pushf test mov mov jnp dec sub adc inc ss or push inc and daa mov popa sbb outsl lret aam roll and add mov (bad) repz jno dec lret pusha sub or in add sarb inc sbb adc stos enter push mov pop fsubr add flds add jnp jmp xor rcr inc lcall and and sub fdivs dec cmp popf inc dec popf jg add std pop addr16 push sbb and in xchg lret cld push sub ret adc xor outsb jne jne sub dec cmp xchg into jmp and pop bound fwait add and pop cmpsb sub pusha xor pop outsl inc arpl scas aam insb dec mov je push jnp ror scas addr16 fsts pop (bad) xchg xorb fidivrl jbe insb jle add mov ret neg or add sti add orl add xor loopne (bad) sbb outsl push popa xchg cmp jl lret loope into jb test push jno orb pop pop cmp gs neg mov mov sub fldt dec outsl and aam and sub stos int3 cld inc or lret in lret cmp sub fdivl add hlt add ds movl lret test dec sub pop cwtl imul xor psubsb lcall cltd push out pop lret popa sti dec push js inc sbb shrb aad adc cmp add roll test sub jg aas (bad) lret cmp push jmp fs mov ret jne fwait out dec ret mov and aad inc adc push sub lock mov adc cmp cmp icebp xchg push (bad) xor ret popf pop lgs addl aaa lds add stos andl jne mov fs mov and test pop pop mov pop dec sub cmp mov mov in imul add les pushf inc mov cli hlt push mov fisttpll sahf add sbb inc in push jne xchg sti stc inc cmc pop jmp flds (bad) pop gs lret and inc dec push xchg leave dec add mov sbb into xor mov xchg (bad) xor hlt pop xchg cmp mov pop mov or test push push mov sub arpl or nop add xor or or mov or push faddl addl addps ds dec arpl sarb stc cmp iret sub cmp clc (bad) sub lods rclb cld sub xlat push or push cmp dec movsb push pop int fild rol daa mov pop lea les js testl jg jle mov push popa adc nop mov add add adc lea dec ret daa daa xchg loopne mov mov mov pop jp sarl sub push inc pop jns xor repnz push mov into js rcrl or clc mov sahf add shrb out jbe pop mov inc dec pop and imul inc dec into hlt (bad) out jg stc inc push cmp or push rorl xor neg pop lret mov addb mov sarb mov inc mov sbb and adc out sub cmpsb (bad) push pop popf and and add sbb mov fildll add add outsl mov pop adc shlb and test jmp or pop aam dec pop push sbb aad add adcl movsl push rol inc jae pop lret rcr inc mov dec add imul mov popa jo cmp cli push bound mov lock mov mov test dec add and xorb pusha adc adc pop and cs push xor push mov push sub adc (bad) jmp lea rol cmp push xor orl (bad) lcall dec or (bad) xor pop xor xchg push (bad) push test mov cmp inc xor dec movl cmp xor xor shl sbb pop jnp icebp dec addr16 pop ret mov dec sub dec in add pop loope mov popa push popa push dec inc ret shll sbbl orl inc loop insl add push or inc (bad) aaa xlat sti imul add loope inc gs imull icebp (bad) jo add rclb pop fisubr and inc adc sub jae xchg xor add lods push pop js mov ds jle dec gs xor dec xchg inc mov popa sbbl inc inc pop add mov inc comiss popf popf pop pop loopne test xor adc rcr xchg mov push xor add add and adc lcall (bad) push add xor push mov mov pop jle lods fnstenv ja frstor jno cld and inc mov push lahf int3 lds inc mov adc lods mov pop fs mov lret xlat cmp inc adcl nop adc adc fbld loopne push rep (bad) fstps fs xor xor and mov jmp leave or gs pop ret xor add inc mov jo mov jb arpl or xor push xchg mov scas xlat rorb jne addr16 cmp or and or daa sub inc or jle add adc jne or xor and mov clc add adc xor add enter push lcall xchg out rorl sub clc jmp push sub shrb dec xorl inc pusha out mov or loope adc in push pop loop ss dec ljmp mov mov stos add ret test jne add repz and and hlt lcall dec cmp aam clc or insb or sbb push inc sbb (bad) mov popa pop (bad) xor and xlat loopne cmovp add ja mov xorb dec mov rorl andl sub or dec add (bad) repnz mov add inc cmpsl scas fildl adc ss fiaddl add lret nop pusha lea lcall xchg xor cs loopne sub xchg jo add xor ja jmp or pop movsl or fadds jl loope lock push jmp sbb jo jno adc imul (bad) push pop pop mov mov mov fildll inc test or add adc cmpsb xor jne xchg xchg xchg xor sub stos mov adc pop xorb add or lahf jne shr mov imul add add lahf sbb leave and and push orl sti lahf (bad) loope push and int3 (bad) and jo,pn pop sbb mov nop jb mov sbb sahf mov xchg lahf std loopne test mov add jmp jp dec push test xchg lock rorl mov or outsl xchg mov pusha loopne inc fistl push test ljmp cmp or fsubrl mov mull adc add mov add add aam xchg pop (bad) and adc sub iret fldl ljmp mov cmp sub add inc popa push or and sub mov push or imul mov outsl adc mov test (bad) les xchg jmp out addl push xbegin add jecxz lock jge or add mov pop push pop adc add repnz mov or sub std cld fidiv xor adc adc cmc test xor addr16 ret popa sub (bad) or push jp jo shrl scas or add rcll lret bnd mov jo insl outsl lock add pop dec les pusha (bad) ds (bad) push mov aam fs and shrd popa cmp jo xor (bad) jp add or sbbl in flds ss test dec jne js andl push jle mov int cmp insl decb addb or je push pop mov sbb mov push loop or mov mov cmp mov mov pop mov mov pop dec inc push xor mov adc or pop and mov add or pop push mov sub sub dec cmpsb sub daa and pop xchg (bad) xor fsubs sbb sub aam or push xor ret cmpsb in push fstp sub ret fiadd inc cli clc (bad) sti push xchg add sub pop add mov in add push (bad) or cmc pop mov ret movsl jnp lods sbb (bad) xor pop clc sbb add mov (bad) enter xchg dec pop rcrl rorb xchg popa inc add fstpt adc or cltd xor fstpl sbb push lahf adc lods (bad) fstpt lahf rcl jnp inc pop jg in mov ret cmp pop jge adc (bad) std je lods mov (bad) xchg inc xchg (bad) movsl cmpl push pop push mov mov ror sbb test std pop pushf add xchg pushf jmp or addr16 in push push dec jae mov or xchg inc mov adcl leave xor in xchg cmp cmp inc movsl notl sub sub scas add mov push mov add sub fisttp mov mov pop inc fsubs lret push or mov test loop push jge pop ja jno stc fcmovb push leave mov mov mov test test mov pop inc ljmp adc imul loope ret inc outsb xor add jecxz dec inc inc ret adc mov cmp lea pop in sub pusha mov and dec mov push mov adc fldenv push stos inc fsubrl push adc les aam and sahf push mov lret adc (bad) xchg fisttpl and jne cmp popa repnz shrb loop xor cmpl push jp sub inc mov inc cmp lea add pop sbb xor sbb mov pop (bad) xor and add jmp orb push fiadd ljmp xor inc scas xchg pop cli jmp or push mov scas gs xor aad daa push iret or shrb iret and xchg adc cli cli lea outsb adc mov in jecxz lock or popf push adc repz pop enter setb nop mov xor xchg and add adc (bad) popf leave dec push mov adcb rol adc lret add aas mov mov stc (bad) rorb xor adc xchg sub adc push push repnz add dec and pop aam cmp fmull jge push aaa mov imul cmpsl lods and mov (bad) fistp fstpl cmp jl lea sub xor xor xor lea sub push mov (bad) xor pop and mov pop xchg lods and lea jle insl jno xor leave push call sub or sub jp adc adc push fld cmpl test push fcoml and sub pop aaa pop sahf dec lock add aad adc (bad) lock pop xor lcall loopne mov sub and mov or icebp sbb cmp and adc inc xor fwait push mov pop push cmp inc add mov das mov mov jo inc inc fistpll and mov das add psubsb bound cmp cmp xor mov mov add xor xlat in bound int3 lock adc lahf (bad) sub mov add mov xor sbb loopne sub dec or mov outsl ret push (bad) aaa int3 cwtl mov sbb pop sub out iret xchg inc mov push push mov out cmp xchg push push lahf cmp insb loopne enter bound or lea cmp adc ss movsl add inc cmp adc inc cld add push sbbb nop lret inc dec dec sub inc fist pop or mov xor dec push xor pop loop cmp mov sub jo pusha into popf sbb aas sbb orb das and sub ret xchg ret fmull mov test fnstcw sbb movsl lock aas sbbl mov mov aaa (bad) mov jmp add dec mov lods or inc mov dec in jle insb jecxz dec test jge jl jne xor arpl fchs jae lods outsl push and lea inc clc lret xor or sbb inc cmp mov lock cmp mov cmp jbe je inc addr16 dec movsb xor sahf std adc lds daa sarl jg push mov das cs sub jns adc movl popf (bad) jle mov stc adc sti into test popa push mov and xchg or insl push ficomp inc push push jb fistpl cmp popl push push icebp xor or jl xchg cmp adc jbe mov dec xor inc mov arpl mov loope bound mov and mov adc jl mov (bad) (bad) lds pop push xchg ja loop jl mov fist inc and sub pop cmp je cwtl push xchg movsb das dec es fcomp mov xchg dec roll sbb popa and pop mov and or cmpsl mov cltd pop mov jge icebp pop mov arpl sub inc jmp adc mov adcb xor push or out pop fldl outsb push or pop daa or cmp jbe addr16 add fs sarl jbe adc rcrl clc jae test adc inc int3 jge cmpsl adc ret test xchg ret jno cmp lcall lock push push xchg out sub pop hlt add inc pop jecxz bound add mov js clc test fwait test add cwtl pop or pusha inc push dec cmp and and in mov sbb les lret inc fdivrs fmul lds mov inc or mov fs xor out mov and add dec mov jns add add xchg inc rcrl iret scas in (bad) fstpl or aas push push daa or dec or js fnstenv pop cmp outsb imul fcmovb add push sub sub lret cmp or cmp cmp ret rolb fcom mov pop adc int sbb in in call sub jp hlt nop and sub add aam jmp (bad) cmp jne cld xchg test test std add xchg sub or lock enter dec rolb push loopne push insb sub mov push testl test xchg les fldl fmuls cli ret inc add add push push or imul (bad) xor xor pop mov jge inc sub cmp repz icebp mov add andl fistpll in sarb jo js stc jne in sbbb sbb lods xor sub imul fs jle lock pop jnp int (bad) (bad) jnp daa clc push push and jo aas mov sub (bad) (bad) lea les rol lds scas in sbb in paddusb in inc in add and sub jb jb dec push cwtl cmp mov add jmp mov adc vpsubb aad cmp addb dec jecxz lds (bad) pop je jmp ficomp inc inc scas dec sti (bad) sahf fs lods insl insb nop movb mov dec call mov pop or dec mov jmp cwtl xor aam fwait pop push popf sub add mov xchg jbe bsr fldl xor jp cwtl sbb or mov pop adc int lods sbb hlt popf sbb mov inc or fdivrp (bad) xor lret pushf push dec or pop xchg dec (bad) cmc push adc lods cld dec (bad) inc cmp ret jnp mov mov jge lds loope (bad) jecxz lds (bad) mov movl mov sub xor cmpsb adc jb ret xor rclb inc push movsl (bad) xor xlat mov sub das fmulp lods nop lods aaa push pop lds pop (bad) adc arpl mov xor push sbb test push call not xchg loopne push (bad) mov aad mov xchg lret pop add xchg jne mov sbb lcall push stc test xchg into test por dec jne sbb pop lock sub inc js jmp cmp or mov je mov push ficoml or shlb pop add inc movsl pop in add push insb pop gs gs jecxz push ret in mov sbb and push cmc shrb movsl sbb faddl in and and test push mov sbb sbb mov pushf cmc adc mov fcomps mov push ret dec push (bad) rol sbb idivl andl imulb pop mov pop xor call movsl add mov mov ss and aad adc jecxz popf scas dec adc gs rorb std adc mov clc or das repnz mov (bad) xlat test push mov loopne pop adc ds data16 push popf pop stos inc mov mov cmp add jmp add jmp inc add sub repz dec adc lock loope int inc fxtract push mov jg xchg sbb jnp xor dec cmp fs sbb (bad) mov adc sub and lret sub lcall inc sbb test inc xchg xlat mov cltd fistp jbe mov jo add cmpsl imul jg cmpsl push mov mov push out jecxz or scas mov mov int3 sbb xor jecxz sub js adc or ret jae insl and imul pop iret sbb fiaddl nop pop dec and (bad) rcll mov add fcomps push pop cs push mov adc frstor push test mov jecxz rcll inc sbb addb xchg scas (bad) xchg stos jo std out aam and aaa out sbb aaa mov push test xchg fsub pop and loopne insb sbb insb mov jno add (bad) adc add out rcl loope lods ja jmp bound scas or nop bound cmp inc pushf fdivrl popl adc movl fdivrl lock pusha fwait push cmc loopne mov jecxz rclb les cmpsb or or (bad) fisub mov mov cmp test shll sbb or dec aas es push aas (bad) sub cwtl cmc xor lods cli out cwtl add ljmp inc add lea bound sbb jb adc mov loopne movsb rorl fisttpl inc cwtl or neg cld add sti test loopne popf mov js scas sub inc stos sbb repz (bad) ds xchg mov imul aaa push mov sub jns jmp loopne in in lcall ret fcmovnu mov test arpl imul xor pop jl and cltd xchg loope les mov mov jg xchg test mov cmp ret pop ljmp adc stos cmp cmp rep call add hlt pop in xorl jae rcrl push xchg or into pop subb push pop (bad) lock nop jae or rcr cmpsl lcall clc inc pop je mov inc divl jno aaa or mov (bad) shll outsb pushf pop mov pop add add mov fisub js jno lods or fbstp je fcomp jg rcr movsl push pop push lea enter xor mov cmp mov ja or enter dec or inc pop jne scas int3 js enter cmp test pop or sbb xlat lret fsubs xor dec or cwtl pushf je ss rcl xor les lds xchg dec sti rolb (bad) pushf jne adc loopne add (bad) add imul cmc (bad) int xor push add dec or fmull shll add and add loope (bad) cmp push les xor jecxz cmc popa sub and test jns push xlat mov (bad) jno xchg ficom sti imul imul sub dec sbbl mov sbb mov mov push sahf adc xchg fmul xchg cmp ficomp int stc dec adc inc xchg insl and roll int3 xlat lret movsl lds push out lods fs in xor sbb mov mov mov sub fisub jbe mov push push add in repz movsl das jge push jmp arpl ror ffreep sub movl shll xchg mov inc bound ds and pop fiadd and add cmp pop loop pop fisttpll xlat iret add xor jge cmpsl mov dec repz inc out inc repz mov push addl into loope mov imul repz xchg dec out pop int fisub or ds or dec push pop dec test ret add jno lds js cmp add add xchg sub pop dec inc dec cltd sbb je ljmp push jmp or sub lods push or push jmp inc ja lock push mov pop add pop mov test add arpl adcb bound jnp lcall push cmp mov not sbbl or and pusha rcll jmp daa scas movl jg das sar xor rorb imul ljmp pop fs es xchg insb int pop pop xchg mov mov sbb or dec cmpsl or movzbl rolb xor fdivp inc ja dec (bad) js (bad) and dec cli cmp arpl xchg add fsubs je pop clc arpl fadds mov in push hlt fwait clc mov fwait lock jle and loope fwait call (bad) fnstcw or cmp fadd pop sbb clc aaa mov mov or out sbb push imul sbb (bad) loope lret or add int fwait and jno sbb xor lods test add test mov add arpl lret sub mov cmp sub lea test rcll inc inc xchg push lahf fimull and arpl jno out inc insl or push loopne out or sub aam push fsubs mov mov popa sub inc addr16 xor std or add in inc es shrl dec xor mov pop push push shl call dec sub mov (bad) pusha mov sbb sbb arpl ret ret lcall roll adc mov adc insl mov adc hlt les loopne mov xchg (bad) fdivrl add mov mov dec adc ret ret xchg ret adc dec inc sbb subb xor (bad) or push jge cmp lds dec cli les or inc xor negl add aaa call call sbbb gs (bad) jg and fdivrl and lock in or pusha adc sahf jle mov adc xchg cmp addl ss adc jp rolb (bad) xchg enter cmp jbe mov mov xchg ret sarb fldt inc mov cmp les adc adc add mov inc add dec pop inc ja sub test xchg cs (bad) push adc das dec xchg fadd pop lret xchg loop or hlt hlt movsl mov sbb lock add fs enter clc and fs clc ret mov ja xchg xor xchg add sbb jnp ja mov sub mov sbb jnp ss and cwtl or lret or nop or adc jo xor ret movsb jecxz xchg mov mov and push push mov fldcw roll sbb and sbb inc test (bad) (bad) push loopne pop sbb (bad) adc andl pusha or movsl pop icebp xor loope movsl sub (bad) fldt das jecxz or inc cld add fistl add and aas cltd or (bad) inc test loop rcr push sbbl test jb xor xchg pusha loop cmp sbb mov cs xchg sub mov mov cmp jge outsb int sbb add js sarl and rorl add ja sub cmp fisubr dec add icebp insl adc add inc dec mov pop lods cmp mov repnz and (bad) cmpl push les sysret hlt movsb sub or daa decl es xchg xchg add insl loopne call lcall inc movsl push hlt movsb in xchg dec cmp jae loopne mov daa fisubr push dec mov cmpsl mov xchg mov mov adc addl add enter mov outsl mov popf push (bad) fldl xor lods sub and out xchg (bad) dec rol push out js xchg lret inc je test or xchg pop xchg inc (bad) push std xchg cmp mov adc mov cmpl data16 xchg push popa jmp and idivb mov (bad) pop cltd enter arpl inc xor inc pop cmp jno xor jl jp add jnp and mov mov (bad) dec and cltd mov cli adc jnp inc andb jg mov dec cltd out add cltd xchg add pushf test insl cmp mov ss mov aad lret pushf aad xchg gs mov rol xor pop inc loop mov xlat mov pop lret dec or adc adc inc ja cmp inc push jge subb cmpsb icebp les add popf lcall and mov lea (bad) inc or pop push (bad) ss cmp pushf (bad) cmp inc ret or cmp mov or lea js andl sbbl aam mov dec pop roll cltd insl add sub xchg push cld rcrl (bad) or mov incl lret getsec fs loope (bad) icebp ds xor es es jo pop cmpsl stos or pop push rcll push sbbl dec sbb push push push push xchg xchg dec iret sub mov loopne bound inc cs cltd and sbb mov cmp mov xchg pop js iret lret xchg out mov sub push add es dec mov punpckldq ljmp jl push imul mov push adc xchg es lods scas aaa xchg add sti pop call (bad) push ror leave leave insb push pop inc imul cli je push jp or aas mov ja mov imul dec adc adcl pop loop jle xchg cmp pop imul mov sahf outsb movups dec or sti adc sbb fld popf push push dec cmp es and and cmp lret data16 fsubl inc lods inc sahf roll cmc call sahf (bad) incb and cmp mov imul mov mov and ret inc aad fistpl pop pop pop ret xor inc mov fisubrl out je add xor add inc pop pop in icebp push div movsl (bad) xor add lods in sub xchg push push pop mov ljmp pop add adc pop addr16 test push shrb or xor xchg in loop inc subb cmp pop loope push imul test xchg sbb jmp sti xchg ret subl lea pop orb lock outsl jo (bad) int cmp or mov cmp jo pop jl neg or push and sbb and pop popa xor loope test aam nop fistp xor fstpt xor push repnz fsubp and movsb push shrb (bad) (bad) mov push cwtl (bad) pop sub xor mov and sbb xor gs outsl loope fcom rorl (bad) sub gs inc mov lret aaa enter movsl xchg (bad) lret sbb dec jecxz adc sbb outsb jecxz sub les (bad) and shll pop jno fadd repz jge push aas addr16 mov xlat loope push imul jmp (bad) dec mov pmullw aam push lret test fistpll (bad) pop inc pop out decb adc mov xor fidiv pop fwait jns dec pop jmp fwait pop lock xlat cmp xchg mov push lahf sub bound outsl inc or (bad) adc es xchg pop and and inc arpl inc or mov push xlat mov mov xlat sbb mov adc lds push or push test enter xchg scas and movsl mov mov adc dec jle mov (bad) dec mov aaa push adc xlat mov and sbb add rcr jmp pop adc js outsb xor pop lea mov mov or push and fild sub xor mov cmp push cmp mov push (bad) scas nop adc (bad) ja add out movsb fadd fildll and sub dec fadd and std mov push mov cmp xor mov pop repz loope fwait pop adc out and mov ss xlat xor pop dec cwtl in (bad) push mov cmc je adc or inc movsb dec loope adc push mov addr16 cltd cwtl enter mov je rolb pop fsubl jno and imul enter jne arpl pop sbb sub loope mov jecxz orl pusha cmp adc ja cld aaa mov inc insb arpl mov fwait shrb adc out dec adc idivl fstps in mov bound inc in test js or pop xor sti daa ret lret idivl adc in xchg sarb stos loope imul lock je cmp jmp xor dec cs pop lcall fs mov cmp add out inc mov loop cmp pop cltd arpl inc incb fisttp adc adc adc push pop or jb repnz dec test loopne cli mov and or les outsb fmuls jbe push jno sub cmp add int3 adc mov loope fcomp push insl nop mov mov add das jne adc sahf cwtl pop lods iret rclb loope aaa aad out push rcr xchg or mov add dec and dec ret or cmp pusha call sub daa push call sbb cltd nop inc fcom adc or lea leave dec les loopne in push add mov and mov push xlat (bad) (bad) dec loopne nop sahf xorl (bad) hlt and mov pop inc popf imul idivl lods aas aaa incl sbb loope sbb test cmpsb dec add aaa pop sub in jne xchg jno push call sub jns clc enter push xor push dec (bad) sbb dec lds ret dec push xor (bad) push and xor or lret sub xchg popa lods fs jno mov add leave xchg imul push pusha mov jno sbb xor ja or xchg pop push imul movsl jne arpl mov ss mull and scas xchg aad int3 data16 sbb sbb sub cmp add (bad) int3 add push adc lret std pop push rolb xor inc mov or jae push xor jno xor pop jge mov mov inc mov cmp cmp mov aas mov xor dec dec loopne pop pop leave lret cmp dec sub adc inc or dec add test aam jmp push pop mov push test mov jne mov add iret jo stos mov dec roll push cmp mov adc mov or movl adc imul xchg sbb adc push sub xchg call fdivrl jo jnp adc mov xlat mov int jmp push push push or mov add inc aaa and mov mov fisttpl rep adc inc jo arpl lods outsl test jmp sub fstp add mov mov jle mov das sbb ja pop iret insl ja dec xchg lock arpl push push loop mov xlat (bad) scas test pop push or inc inc and pop ret inc jno rcll pop shl or sub jno pop loope adc int mov sbb mov inc movsb nopl push inc sub inc jge or mov add inc sub jo lret add cmc xchg inc ret into ljmp aad mov dec aam loopne sbb sub enter or stos adc add mov jg adc popf sbbb cmpsl add mov cli add loope sarl mov and push add not dec call lret and adc sub dec or push adc add and mov pop cmp jo add jbe decl xchg push pop or aaa inc and jg sub sbb pop sbb test mov cmp sbb xor mov cwtl test push movsb aas pop das aam jno inc lock adc or call shl adc lds fs sbbl jne movsl xor inc dec jne clc in fstpt out jg (bad) push push ret xchg (bad) ss jo or shrl push adc (bad) or adc sahf std xor jo in and mov jb clc jge sub jle sbbl rcrl movsb daa xchg or js xor jge lock xor xchg pusha stc add sbb pusha push add (bad) and flds (bad) and fstps dec add (bad) in movl dec fstpl mov lods mov call push cmp xor and mov push mov out and mov mov test leave and jle pop ret mov leave inc and inc repnz or in ror cmc or cld mov adc sub sbb or mov or push push movsl inc bound pop jb xor add dec ljmp adc lea ja push into imul call or lods jmp sbb (bad) imul jnp enter sbb add xchg enter lods jnp inc push xchg push ss push ret lea insl in add add ljmp (bad) cmp dec (bad) movsl adc mov adc std jo cmp and scas cmp sbb stc jmp adc add add out jne ljmp into lret add sub and sub cmp push and sbb pop inc pop push dec leave push pop adc adc sti pop push inc sbb jl cmpsb adc push js inc fdivs mov push es out or xchg jp (bad) mov std ljmp ss sub dec add ljmp mov xchg or mov icebp out test add xchg into rol movsb mov inc mov xchg setne fistl mov out ret add push fcompl xchg mov xlat ja lret xor scas xlat xor add imul rcr aam sub mov fimul add and xchg and push inc ss add and dec mov dec jns dec adc clc xchg out mov ja inc repz adc leave and out cmp adc xorl test pusha rcr mull loop add cmp jnp adcb and adc es adc mov stos cmp fadds popf adc xchg sarl inc cmpb add fs xchg pop hlt pop pop cmp push xchg pop enter (bad) std mov scas inc lods fstps mov pop adc adc testl add add and sub inc mov adc ja push push (bad) jo (bad) sti loopne popa push pop and add or insl and shll or fiaddl cltd sbb mov add imul mov das fmuls sbb xor xor leave adc int3 test push lret sbb adc pusha ss popf arpl xchg adc test or push xchg push push jo fwait loopne push je pop fadd push and pop and mov cmp add sbb inc insl fcompl and jne mov adc gs cmp test pandn mov fwait sub (bad) cwtl xchg jb sbb movsl inc je adc fmuls fiadd push or xor fsts dec mov leave fnsave in xor cmp sbb mov add xor mov jg (bad) test push mov outsb inc ds sub rcrb dec or add addl mov push mov push push or pop mov or mov or adc int3 dec add jmp daa push clc ljmp rol or sbb adc fwait enter jne pop xor sbb jb xor jl xor and or movsl xor add inc xor les push push push mov fsubrs and jbe sbb inc push add repz cmp cltd movsb ficoml dec outsl dec sahf addl add jnp arpl loopne sub add ljmp dec (bad) in cmp cmp mov out pop pop jg or in push or (bad) jnp adc adc adc jge test dec (bad) adc sub repz or push dec adc add or sub aaa lods sti rcrl inc je sbb mov adc pop add rsqrtps test sbb in loope xor xchg adc (bad) lea xchg call roll xor add test je fistl pop inc mov (bad) cmp in pop adc popf dec cmp and sbb jae mov movl or (bad) addr16 cmp mov pop lahf dec or pop shrb jns rcr sbb pop mov push push xchg lahf mov ror cmp fdivs enter xchg mov jmp outsl dec sysenter sbb repnz lcall outsl fsubs sub sub jbe fucomi sbb pop xor pop mov popa out test popf ret mov or dec in fnstenv cmp (bad) cltd or pop and lcall cmp repnz or xchg sub fnsave ret and pop xchg in pusha push and push xchg insl aaa cmp popl je mov shl addr16 idivb dec or popa arpl push out lods or ljmp xchg in loope push xchg cmpsl ret rcrb rcl fsubl inc lret ficoml adc mov cmp ret jg jno mov addl int3 mov in push adc popa in dec cmp cmp pop ret sbb add add rolb fild add push sbb mov add xor lahf add inc data16 movsb or imul add adc and jg add dec test sbbb pop jg (bad) pop adc add shl jno cwtl adc les (bad) sub pop add mov mov add fistpl or inc xchg mov (bad) push pop es scas or jmp lods rclb xchg subl add dec and adcl inc (bad) sub inc or push leave sub or sbb jecxz cltd or or sti subb jb pop lcall cmp (bad) out (bad) jmp iret jbe mov mov mov stc nop pop push faddl and sub rcll sbb sbb cmc pcmpgtw and or push lret mov jecxz push pop pop inc lret mov cmp and push push es aaa lds leave pop pop pop scas aas jo mov rcr xor add push or cmp fdiv push or rcl jp ret inc clc cld es jp aaa out stos movsl imul andb sbb sub sbb andl shr jge adc pop xor roll daa adc inc pop out insl fidivl jb arpl cmp adc pop js sbb mov dec enter inc sbb cltd cmp and aaa call lds xor (bad) cmp repnz xlat add lods ret dec or mov adc and push add and mov rcl call es loop or mov cltd pop cmp ret jo push add fwait cmp clc push imul adc sbb add fsub and ja fiaddl sbb xlat mov mov xchg sbb jnp xchg mov fdivrl pop fidivr divb inc (bad) mov outsl xor ss aam xor lods insb dec shl jmp dec or push test adc stos std rcrb les mov add les inc (bad) (bad) movsl mov add add pop mov cmp mov imul adc outsl and sbb jge stos (bad) (bad) xchg lret and and jmp sbb cmp inc mov inc adc adc or inc shr add leave jns push mov adc (bad) mov jne (bad) push or outsb inc fs jge push out mov or mov and mov or cmp mov popa mov std leave outsl sbb xor (bad) jnp jge adcl adc jge cmp sbb arpl ljmp lock pop xor sub pop stc lock jl test push or xchg fdivs jmp xor xlat push or mov push pop xlat rcl xor (bad) fstpl (bad) jo sti adc jle xor fsubl ret mov imul cmp imul into dec pop push push ja jmp xor test cmp and jecxz mov in sbb mov or and dec jnp jae sub add inc rclb hlt jp push out aad jns push mov add sbb mov leave sbbl cwtl outsb cmpsl sub xlat push pop mov push mov mov movsl mov shlb sub jg call add ret inc sub pusha and shlb movsb mov adc inc sub adc popf xor lds cmp mov call (bad) popa push sbb cmp cli mov adc bound sbb xor stos jb push lds jmp xchg ss or pop push mov adc cmp jge and and hlt push cmc jp jge jg fbld sbb sbb adc xchg aam push addr16 aad push or and push addl dec scas inc sbb push lods lret mov sbb inc add shlb bound xchg imul cltd xchg les xchg xchg mov pop fbstp dec out divl sbb adc dec out test or aam loopne pop adc xor add mov inc adc jno xor call rol add mov mov sbb test inc clc adc adc subl xor pop dec lods (bad) xor cmp push and add cmc mul and sub or aas xor push mov test scas push stc sti xor fistpll xchg nop sbb call addr16 in outsl and aam mov popa and push gs jbe inc (bad) xor adc cli mov sub pop fmuls outsl pop pop scas mov sub xchg (bad) (bad) lret xchg or xlat and inc (bad) push xchg vunpcklps xor add int mov inc popf in cmp cmc pop (bad) sti orl aad cmp inc mov sub sbb adc sbb arpl (bad) cs add es cmp imul mov or mov sub je dec repnz inc inc cmpsl outsb in jnp icebp pop adcl xor fwait dec sub test mov sub jae (bad) mov lret ret or add movsl add dec jne fmuls jne add loop orb inc dec sbb loopne dec or nop (bad) xor push and and push add and lahf rclb ror js push and push add test mov popf sarb andl sbb nop and aas sbb lock (bad) pop cmp mov mov pop ret or push inc or mov icebp shl lret outsb xor or add insb dec cmp mov mov pop lret rclb push push cli pop jne mov shl pop cmp adc idivl dec xchg and arpl outsb iret jnp dec cwtl std jg and jg cmp pop pop or jle or fidivr test cmp stc psubq insl into inc or ret add and adc mov mov ljmp jmp sbb sbb dec inc add add fidiv jmp aad jl popf test fs shlb shll in rorb jmp lea mov icebp push lea rcll scas xchg jb inc mov daa mov (bad) rorb stos jne push pop add xlat fisubr ret stc pop jecxz insb mov mov lret xchg mov cmpb scas (bad) loope adc or je jl xorl out mov mov imulb imul mov imul jno xor sub mov (bad) das xchg lock movsl fisttpl dec mov add mov sarl add jg dec add orb add es push inc xchg push out mov xlat xchg loope jl lock je out mov bound xchg roll leave jecxz in mov lods insl adc fist mov stc and xchg (bad) cmp pop or jp sbb inc andl mov mov cmp or jne js jmp push not xor inc push pop aaa add mov pop adc pop jo push sub push dec addr16 lahf mov daa jno insl movsb pop scas and dec add hlt addl (bad) js add lea push add jge mov ret xchg cmp jle sbb aas fmull mov gs mov inc movsb pop rorb sbb mov popf sarl (bad) lcall pop or (bad) test pop lock (bad) lods xchg lods ljmp add dec add call (bad) jle lds add jbe psrlq push lahf jge mov jmp mov xlat adc sbb inc or out mov imul mov mov js jne,pn cmpsb jmp cmp sahf hlt sbb inc dec add sub mov mov enter adc sub (bad) (bad) or jbe negb lcall jnp mov jns xchg iret mov sbb rcll and fcoml loope xor repz dec mov loopne push dec sbb add push or pop xchg (bad) leave into xchg or fcom mov adc das add test int3 js add sub push nop or dec mov (bad) ja in mov push jge jne pop in push repnz push repnz pop packuswb cmp pop or xchg push sub and pop xchg loopne inc push add aaa xor fdivl cmc xor jmp es rolb sub jb enter fldl mov push or in dec adc cmp mov cmp aam push clc inc xlat add or push fstp sub jbe das in js cmp jge push push dec in inc insl adc mov adc jae xor push lods xor jmp inc adc fs xor lods sub pop adc or fnstsw dec fisttpl movsl fnstsw jmp jb cmp and sti and jl sbb je adc add test sbbb xchg push jo xchg xor sub dec loope pop pop test jg dec jmp repz adc mov mov pop (bad) lock push sahf adc mov push fstps mov mov adc or adc enter dec ffree in or sub repz cmc popa mov rcrb pop mov int3 adc jnp subl dec xchg test xlat inc xchg or mov fs outsb xchg add pushf jmp xor mov fs movsb imul sbb cmp repnz push pop pop or or cli or pop fs add mov loop repnz push in int3 enter in out mov test jb fcomp rolb gs clc add and or cld add shll xor sbb or (bad) call ficoml gs incl es push sbb dec pusha push dec sbb dec mov call aas add xchg loop push sbb add or mov xchg jp adc adcb les or divl test add adc sub xlat add sub or dec push or je mov (bad) mov cmc or aas pop gs mov inc adc add pop or sbb arpl psrlw (bad) cld cmpsl movl push add inc (bad) xlat sbb add add jl mov les mov loop pop mov and push loopne mov in jl mov rclb push and add adcl sarb fiadd repz inc adc jmp mov jg push xchg lock lea mov xor rorl imul push mov xor das mov cmpsb outsl fistpl mov pusha jo negl xor loopne mov pop scas loopne fnstenv jns stos adc aas loopne daa or push push jns rorb inc mov scas adc nop mov add cmp in mov xor jbe nop and popf sti pop xor sbb xchg pop mov jb push test fwait adc jne orl xchg mov rcrb clc jne mov push jmp mov popa cmp adc dec adc mov add test mov push lods jle out test mov xchg hlt sarl enter pop mov (bad) or bound pop dec push inc fcompl ss jo hlt sub xchg xor (bad) jmp pop add mov popa loope sub add jnp daa add cmp roll inc loopne notb cmp mov xchg add and pop out lds test rdtsc sub sub push clc xor jae push (bad) jp jecxz shrl pop stos sub lea movsl icebp adc ret xor rclb das and or xchg mov mov cmp add pushf sbb xor loop jo clc or imul jl imul add push push add cs or or inc or dec and add dec test sub or push lahf mov jne je mov push xchg pusha cmpsb mov and adc sbb sbb pusha mov lods cs sbb mov sbb adc cs lcall testl pop mov sub dec movsl cmp adc or mov addr16 roll popf xor push addl mov push je es scas push adc push loopne mov adc push rcll xchg add inc xchg clc add iret loopne shr add add jecxz mov repnz negb inc mov (bad) cltd xchg or or dec sar mov jmp cwtl inc imul sbb pop mov jne inc xor cs in add jmp mov mov fldl jne int cmp adc or push adc aas mov or sub add call loop add add push dec fs mov and les push sbb xchg jo sbb pop xchg rcll dec mov sub mov or and jne and dec adc pop sbb leave or mov xor outsb adcb pusha das and add inc mov adc incb push cmp jne adc xor leave pop dec xchg lea xor es xchg test or xchg popa lods pop rolb addr16 and shrl js xchg xor push adcb es movsb mov inc xchg sub xchg addr16 es sub dec enter and mov cmp and in mov in call adc cmp add mov xor pop and jl outsb jl jecxz push push ret fnsave insb xchg aaa push or add mov and lds mov lahf pop sub inc inc fbld and lret int xor pop adc add mov add test pop add or inc cmpsb (bad) cmpb cmp cmpl mov lahf cmp jle xor jb jl add lahf or shl jle push add (bad) push ret push add add cmp sub ja push or mov test dec add bound push lret fisttpl and (bad) fistl mov dec add pop add dec add dec aaa push add jno leave and lock jl push ja lds pop dec and xchg push mov sbb dec adc pusha repz testb fcomi or inc int sahf push push lods icebp add or sbb mov (bad) push add jmp mov push push pop ret add sbb adc xor xchg cli aas flds pop les cmp ret inc or xor pop and dec aas or mov sarb mov cmc cmp adc jp add ret sbb lock or inc and jne mov cltd aam in (bad) fstl and push lret cmp add es daa leave sbb cmpl mov pop leave jae sbb repnz adc das or mov and jnp push (bad) jae xor ret cltd lret fwait les or cwtl push call dec insb pop add jae xor jae jne add loopne or imul and dec add xchg xchg orb ret push mov adc push sbb add dec jb dec and sbb mov (bad) (bad) pop pop pop push mov sbbl jne aam sub movsl sahf orb inc add jmp or lret ja,pn inc sub test pop push insl dec popf pop icebp add clc loopne hlt push fdiv inc mov and pusha je icebp (bad) mov lcall mov mov arpl push dec jl inc test mov sub mov xchg or jbe inc jne and (bad) call dec jno scas dec push pusha adc repz fwait enter rorb or fs push mov pusha or clc sahf jp xor lret adc outsb mov dec or and loopne roll pop imul dec sbb fisubr push push fs or lret in nop pushw dec add call or adc lock lret push jo push enter inc and add mov sbb add add lea jae mov sub sub jg cmp mov ss dec popf fcmovnu lea (bad) ss add in adc imul add clc sub test pop sbb hlt (bad) ljmp faddl push lock (bad) addr16 mov (bad) sub sarl idivb pop sti cmovl xchg lahf (bad) neg lea lods andl add and xor pop pop push xor xchg mov or mov ds sub xchg pop mov hlt outsb inc adcl ret fcoms add push and ds inc sahf lret xor clc cld jne and (bad) and lea loop clc mov xor cwtl inc or lock cli sub add loopne mov fidivr fs mov jbe lahf (bad) es sarl xchg dec adc xchg aam push rorl and clc pop dec mov add movsb jne sub neg dec pop neg push or mov push push inc cbtw pop inc mov add or addl (bad) dec call jnp xor dec getsec ret pop and pop or inc lock xor lock dec orl (bad) adc pop add ret pusha fwait xchg (bad) fwait sub xchg mov repnz xchg xchg sbb ret add sub int decl cmc loopne inc imul lock test out jmp xchg inc scas fidivl inc sbb bswap dec add sbb repz sub push adcb cmp scas mov mov mov movsb or mov or popa out es or cmovs ret lret mov xchg cmpb sbb push rcll pop js ret inc dec cli cmp stos ljmp sbb add mov mov loopne add add call mov or imul adc enter sbb cmc lcall push xor lock or jge imul mov or dec imul pop or insb and add ss (bad) and in in xor (bad) sub sbb pusha xchg sub jg fwait push lods mov adc pop dec xor (bad) gs sbb out rol sbb leave push mov jp jp repz aas out adc repnz insl outsb lock sub andl pop inc sub nop jmp push xor inc leave jl push clc jl add pusha cmpsl or leave push pop add jbe pop hlt add mov sub dec mov mov adc in rol sahf rolb jo add fdivr in nop lret adc aad lock or add pop lahf push (bad) or mov call call cmp xchg xchg stos pusha push cltd inc sub ds jns std inc lock ret xchg mov inc popa mov mov mov inc ss clc repnz add cmp (bad) cmp rclb sbb inc fisttpl add mov pop bound lock jle cmc pop inc adc (bad) jmp inc mov push add dec js test add adc jl sbb jo xor inc pop or leave cmp and (bad) repnz xor jg outsl adc nop loope adc pop pop jns dec lret pop and cmp fcoms mov bnd mov or add je mov imul adc comiss fsubs ljmp pop fsubrl int3 das in push xor test add dec sarl add loopne xchg (bad) int3 push stos sbb pop pop dec adc add dec mov enter sub push stc stos ljmp add sub pop incl pop push mov jecxz sub sbb mov xlat lods mov pop push lahf lds add mov leave dec (bad) iret fcoms gs pop sub adc icebp inc or pop push jg mov aam jb xor inc fs inc xchg pusha mov fcoml xchg and aad dec clc loop adc sarl hlt mov adc cmpsb pop pop rcrl xchg test xor mov adc dec ret popa ja cmpsb cmp add test in and inc (bad) iret or fs (bad) xchg aas cltd adc negb movsb pop cltd pop insb xor cmp mov jmp bound scas lret arpl mov and add or sub fimul add and dec mov leave inc mov fistpll and mov lods or (bad) adc scas push and cld pusha gs rorb pop xor loope call subb inc (bad) inc jg ja add fisubrl idivb clc insl (bad) fwait dec pop popa adc je pop icebp or out inc dec enter xor xor mov inc mov popa aas cld outsl dec lock test addr16 mov cmpsl aas push xlat push dec xlat jg in jge push cmp es rcll jge mov (bad) jg lret and xor and mov inc pushl or rclb xchg jno and adc dec sbb in dec enter inc or leave je (bad) daa sbb cmp adc cmp inc pop lock es popa and scas adc sub jno movb and bound xchg sbb test icebp add mov add jb cmp jnp decl mov stos push and pusha sub inc orl push aam popa xor fadd adc rcll aas xor fmulp orl sub fsts test or mov (bad) pusha dec add lcall insb or inc sbb or mov addl mov cs cmp fcoms cmp fdivs das adc test sbb cmpsb rcr jp lret rep testb jne mov sub jne xor fistpll jbe sbb pop repnz mov add ljmp mov sub jle and ret inc jns adc push aam or cld and push popf mov mov xchg sbb rorb cmpsl out or sub aas sbb mov in add pop cmp cs mov fsubr in mov ja adc xchg rcrl aam (bad) dec or (bad) or rorb sbb sarb dec add mov ds jg daa fcomip fstp jae dec clc orl gs rorb das icebp jecxz je push shll jle xchg psrad insb sub es push inc adc lods adc hlt into inc xor cmp adc (bad) aaa cltd jbe or and jne jnp mov lock adc jnp iret (bad) iret adc dec jne mov inc testl or sar (bad) jb sub push insl sub clc inc pop add xchg lods or insb scas inc jl add call inc les and bnd adc leave adc (bad) (bad) xchg add enter cmp xor clc xchg (bad) fbstp dec adc dec sub shr add cltd gs imul cmp cmpsb inc mov mov and inc rorl lods mov and pop lods mov lock rcrb and in cmpsb cmp clc imul push jge add dec arpl dec add cmpsl mov xor mov roll jmp mov insl lret or adc ljmp sub push out and push push xchg add mov pusha jno es and sbb bound sbb je test xchg cmp or and sbb push arpl xor icebp mov adc into into (bad) mov or add add or inc iret xchg fsubrs xlat aad adc addl pop loop xor add clc clc and popa jg sub fucom mov mov xor (bad) gs cmp pusha movsb imul push (bad) clc lcall mov pop std jmp addr16 mov lcall shrb mov lock xchg xchg mov pop (bad) adc xchg cmp push js mov or es data16 loopne cmp lret or ret out fidivrl cmp adcb lahf dec inc mov int3 movsb das xor push cli (bad) or mov inc adc lret lods ds aaa inc push push mov inc lcall movsl nop pop lock (bad) adc add xor cmc jbe fwait into out add addr16 (bad) xchg lock into movsb adc mov nop (bad) imul sbb sbb push push fcmovbe (bad) cld repz xchg test jb and xor mov sub repnz inc inc add jbe jo aad aas and add mov push inc int3 adc adc push mov jge xlat (bad) adc jg jp mov and jl add adc adcb sub clc jp and call sbb and cs xchg or bound call push push (bad) je push mov pop ss mov mov clc cmp (bad) xor divl aas add clc cli cmp add dec test or insb jo js fild and push cmp ss push push push or mov xor inc lahf mov pop les or inc les lret adc mov jbe nop add mov add hlt lretw movsb into mov sbb sbb (bad) lea jb sahf stos pop xor ljmp adc pusha sub inc pop push add add dec add push pop cmpsb xorl pushf into movsb dec in add push cmp jbe xchg or dec adc mov jne inc into jl adc out dec iret xchg sub mov mov ja cld je adc add dec daa sbb and ljmp sahf or inc dec mov inc popa aaa lcall loop adc rcrl movsb xchg std imul add mov xor (bad) neg dec les cwtl mov (bad) adc and inc push (bad) jno adc xchg mov js lods push jo jmp add or push aam ljmp loopne and rcrb cmp sub fsubs (bad) jno adc repz pop xchg flds inc jmp in push xor (bad) jns ret sbb addl in push in shlb lea push mov cld or dec adc in add xor sbb rclb call sub adc xchg stos dec xchg mov fimul mov cmpsl repz nop inc push mov mov test les pop movb loopne xchg xor push sbb fstp push push push inc cs push push xchg push push inc rorl jo test ficompl sbb push adc fnop jl sub dec xor sar ror ret sbb mov cmp jg repz cwtl aad cmpsb das js jp jo pop imul fcomps add sahf xchg xor lock sub insl jbe adc in icebp cmp fnop mov or (bad) in add mov pop sub push loop int3 (bad) add push add push loopne rol es in jl sti test (bad) mov push mov pusha stos sbb lret iret sbb adc sbb add mov inc add popa cmp imul or add loop xlat aaa mov adcb sbb sbb lea pop sarb sbb sbb sbb rolb mov mov pop add cmp adc push shrb data16 or aam xor shrb aam dec sbb dec (bad) xor je or push jae xor loopne inc adc jo push inc in and add jl dec lock enter jno sbb icebp mov nop or fistpll loopne mov test jecxz test hlt vpsubsb jp push incb adc jne pusha call pmullw jne dec cld and rolb mov les pop lcall add sub add orb push adc add adc inc pushl sub xor sbb gs subb mov loope imul ja lea mov (bad) mov pop movsl add mov ja jp repz enter or cmp dec pop xor lcall cmp pop outsb or mov push xor or pop or or add or add ret or jmp ret arpl cmp adc inc xchg adc and jmp testl mov push xor inc repz andl inc test dec (bad) out mov add in cmp xchg push push sarl leave nop popa scas outsl sub nop xor lret adc leave sbb add cltd add cmp sub cmp pop ds nop xchg pushf in cld ret add push movsb inc clc jae xchg mov push rol and fist or jb lret lret jae pop jb lret add aas int3 add pop scas inc mov into in push and int dec or xor nop mov nop mov xor xchg pop lret into cltd push adc pop pop lret in fwait insb bound xchg aas adc loopne jle les adc jo mov sbbl rorb outsl outsl nop inc mov push sarb popa mov sbb inc clc xchg pop or repz repnz call xor push mov loopne adc inc je shl test loop lock sbb sub inc sub sub mov xor mov lods adc pop add mov sahf and aaa popa (bad) jo pop fstl lds push lods icebp inc cmp xchg jecxz add fldcw pop fstps push pop inc (bad) nop mov mov int3 inc add push sbb hlt xor push and mov mov sbb int push inc pop add pop push pop pop lcall or jns popf popf xchg xor inc xor jle popa adcl mov mov (bad) adc cmp add sbb int3 push sub aas or or sub lods inc loope in lods cmp mov iret pop dec ret pop int add adc ja cs push add add push mov adc (bad) jae aam mov xchg les mov push push test sbb sbb mov test sbb cld xchg cmp mov push mov mov popa sbb jmp scas fmull xchg fadd add sub sarb xchg push in or loope outsb jle nop arpl jle cmp jmp int3 lret xchg out lea mov jae loopne pop loope sbb add xorl sbb pop mov fmuls data16 scas lret or dec lock push nop (bad) push loop or adc dec nop mov mov ret data16 adc das loopne push and dec push lods inc add and sub lods fmuls (bad) jmp mov and jbe (bad) lret fidivrl pop mov add mov fidivr sub mov inc add xor hlt jb popf cmp in repz jmp (bad) cs jbe cwtl or fwait or sub jmp xchg andb nopl lods mov shrd lret push ljmp and cmc jl shr dec rclb icebp mov sbb adc ret add in daa loope xlat push sbb jp shrb test pushf lods xchg sub test adc cmp insl adc or mov xor inc xchg adc aam pop movsb lret in pop adc imul adc adc adc sbb mov sbb add scas xchg (bad) nop or pop inc jo push mov bndldx adc pop xchg xor js in div dec in aaa mov sub mov adc fcompl data16 jno sarl mov ror xor and xor in (bad) shl fwait adc orb or and cmp inc and mov mov sbb lds dec int rcll js pop or lcall cmp (bad) testb ss sub and or and sub sbb ret test hlt pop xchg mov (bad) inc adc jecxz add repz ljmp cltd movsb cltd cmpsb fcompl in loopne add movsl add stc xor xchg fsubrl push xor xor mov test loop je call fwait jb or clc fistpll mov mov adc pop loopne sbb add outsb mov mov xor sbb and pop push cmc inc ret call aad negl adc shll int3 jnp lock or xchg xor imul fbld arpl es sub adc add es out add dec movsb xor lods pop adcb and pop or (bad) sbb xchg mov fisttp xchg sub (bad) push push clc out cmp mov gs rolb loopne add mov adc (bad) adc loopne jmp lock mov mov fsubs mov andl mov xchg xchg jg ja push sbb (bad) aam sbb mov stos push xlat ja xchg dec leave fwait insb in ljmp sbb clc xor daa sbb xchg or adc inc sbb cmpsl dec rcrb aad and sub pop pop add mov rorb xchg push add mov sub (bad) mov (bad) rcrb fidivr cli jmp ljmp dec es cmp je jmp push cmp fwait and push adcb xor inc adc add inc nop sbb in push lea gs inc cmp decb adc mov test cmp idivl scas hlt pusha push cwtl je cwtl xchg mov imul ret sahf jl popf lret xchg adc mov add mov adc enter les adc adc jl push adc pop icebp mov add sub inc decl icebp adc adc and or push into pop (bad) adc ja in mov (bad) jle jmp aas push dec cmp mov clc xor and mov and scas xchg mov add (bad) push xlat xchg or push pop cmp jno lcall and pop and xor or (bad) fisttp cmp enter cltd pushf mov sub mov mov push lock jo mov rol je je sbb push js push push and mov cs mov sub sbb and xor int3 push push ret mov pop add dec mov jo imul or adc jae adc jo dec and xchg pop insb inc pop or (bad) xor lcall add stos mov mov mov arpl mov xor fistpll adc sahf into or mov sub xor mov test mov in rolb loop (bad) sub pushf fwait ret push nop mov fldl xchg mov jo add arpl push in scas adc push (bad) pop in ss cmp or pop add addr16 ror mov push and cmc (bad) fxch in mov cmp ret call (bad) or lahf pop out inc in lock add sbb pop sub loope outsb pushf sbb jb or xchg pop jle fisttpll mov and daa insb pop sub push aam (bad) es lods int cmp lret inc scas (bad) jp mov jecxz or leave mov loop or pop xchg jl mov nop bound (bad) lods mov dec jmp ffreep cmc sub cmp leave or push imul mov cwtl les idivl jmp add movsl sarb iret adc dec mov push add les (bad) xchg lea mov into add inc pop pushf mov les pushf inc lods scas lods or sub fsubl imul enter mov test xlat or rclb or push add ret ljmp cmovo sbb dec ret mov dec jecxz movsb xor add adc cmp push stos in fsubl sti inc fcoms lods jmp cmp int pop push and jae shlb push insl xchg mov outsl clc (bad) loopne rcrb xchg sti add pop push sub cmpsb add xchg jmp inc in push jae jns sub out out ret sbb pop ficompl adc and mull clc pop jae adc pop jo cmc or pop mov cmp fcompl mov rclb pop adc pop (bad) (bad) mov cld hlt clc sbb insb push or mov icebp cmp xchg pop cld ja inc sub cld lock adc ljmp jbe and xchg fs adc adc bound pusha fsubrl sbbl dec test fildl les ljmp sahf push push push dec enter shrb pop sbb and out inc test leave lret aam lods rolb push sub sbb mov add orb test (bad) and loop xchg mov pop sbb xchg sar pusha xchg ss popa imul add jb inc adc faddl adc aaa loope aas mov jmp test pop push roll ret mov mov pop mov and adc push test or and add adc adc mov mov pop movb cmp data16 clc sub add loope (bad) adc or or push shlb xchg mov mov adc sub add dec out adc jne or mov sbb pop movsl xchg rclb dec push lods mov cwtl je daa jge pop shrl xor aas pop or sub and and or push jmp adc loop fdivs dec cld popa imul imul mov xchg shl lret lea ret or xchg xor sub (bad) sub push ret dec ficoml push sbb push sub dec dec and push xor mov stos rorb xchg push sbb mov and dec mov and push loop dec cld xorl hlt and cmp inc ffreep rclb sub stos mov call (bad) pusha orb rolb stos and sub add lret dec xchg and and jb and lahf lods and into push je push cmp lahf lea mov addr16 int ljmp lock mov int3 (bad) mov push (bad) or addr16 xchg push fldt or and jno push mov imul or fistp lcall (bad) and sub push and gs adc arpl and bound add add push and dec push push mov sub and lea (bad) add or mov ljmp add pop or das cmp andb je sub xchg push (bad) mov push xchg push roll loop jb sbbb mov pusha jmp pushf aas loopne adc sub sarb mov je or sub repz fisttp mov mov sbb dec push xchg mov enter loop mov (bad) dec movb daa push (bad) ss add dec dec popf fs rorb push dec xchg ror (bad) or imul xlat xor cmp rolb loopne movsl jne arpl scas rorl insb dec jmp jae mov or add idivl pusha add xchg inc cmp pusha mov inc insb pusha sub jle xchg and js (bad) or mov pop sbb mov movsb or test dec fmull dec fmuls sub mov jae pop dec mov arpl add js pop mov cwtl or and ror sbb fnstcw in call sub test jae cmp jbe add into jbe pop sub xchg adc adc inc xchg (bad) jmp movsl push mov loope cmpsb jnp rorb sahf cmp enter out ds fsubr inc sub xchg and fidiv pop dec ficoml fsubs rorl dec cwtl loopne (bad) or cmpb push ljmp enter xor push (bad) and data16 fst sbb cmp mov (bad) or fdivp cmp and mov mov dec sbb ret pop movb xchg cmpsb lcall leave scas and xchg and inc and cmp push fwait ret xor and in sbb imul mov repz insl and roll push orb pop and test lea dec and push mov pop stc or test outsb jecxz jle xchg sub sub add lahf xlat ror icebp pop hlt adc or sub pop mov jno iret cmp aad sub fstpt and out cmp (bad) adc popa leave dec sub fcomps mov ficompl fcmovnu xchg fldcw sub shl inc cmp and cld mov imul mov rol jns pusha pusha and jno imul jne pop dec cs adc js sub jmp mov pop pushf fwait mov lds leave push mov push pop adc sbbl add dec or xor (bad) mov shr and inc add mov and jl add xor incl popa ds pop stc add xlat in outsb xchg es inc and (bad) rcrb outsl or (bad) add mov jns test stc push xor fnstcw push push (bad) pop dec pop push sbb inc mov and aaa add pop aaa cwtl adc push mov in pop or (bad) (bad) nop mov daa push nop cli cbtw ret (bad) jl xor shrd jo xchg test dec lcall test xchg mov cmp loope jle mov xchg andl and mov sbb sbb mov out sbb push call jo lcall pop lcall movsl sbb push movsl and dec inc movsb xchg js les xchg sub xorb out xor ret cmp movsl mov lea dec and inc and cmp frstor cmp push jbe fwait clc push dec addr16 test arpl rorb push xorl je sub pop cmp add cs xchg rorb sbb int jg mov jb sub mov (bad) xor sbbl xchg jb push pop dec push or ret inc in xlat mov addr16 cmp test xchg mov jecxz test mov mov sbb dec clc nop push mov sub bound mov or jle and push sbb sbb sbb mov pop fimull jge pop fisub add inc dec jl andl xchg (bad) jecxz push xor inc fs mov daa repnz rorb fwait jnp iret sbb pop jno int vhsubps ret adc jb in movsb adc sbb mov out stos fsts pop lahf adc mov in dec nop xchg pop (bad) lds sbb cli es sbb adc adc (bad) in aad add jne xchg xchg fisttp jo or mov add mov lret ja adc push jo pop mov pop push jnp dec push mov cmp (bad) repz mov sub insb inc and adc and ss fist xchg mov pop sbb call inc outsl or push pop or pop jae adc and fcmovb (bad) (bad) js fldl2t dec jne shrb icebp xor cs adc or pop in or push cltd xchg pop mov jbe xchg stos mov cmp addl sub cmpl mov outsl je and clc icebp mov or sbb add pop fstpl mov pop push test pop sbb popa or stos or pusha mov bound mov lret xor inc sub jl xor imul fsub push lods sar and xchg sbb les add xchg push pop scas sub add mov shrl dec (bad) or inc (bad) jp dec push movsl push xchg shrb stos sbb pop inc mov loope dec inc (bad) icebp add or ret xchg adc jb or dec fildl aas lret int3 icebp dec add add jno inc inc (bad) pusha call jns out in imul sti mov movb jge (bad) mov aas mov rcll push xchg stos orb push push push add adc add and clc (bad) das or or cmpl andb and ret dec loop aam rcl jo cmpl xchg sbb or adc lock or xchg sub xchg cmpsb mov pushf inc mov hlt sub push mov jne inc xchg and pushf pushf sbb cmp add enter sbb adc xchg out loopne and xchg sub cmp push or push sbb daa inc jbe mov cmp and pcmpgtd loope xor jbe lods movsl dec jl xchg cmp cs rol js and sbb cmp (bad) loopne pop jp add lds jne addr16 jle xor or fwait call cld pop pop adc mov xchg sbb jl pop inc fcmovnu stos sahf adc xchg fiadd jne xor cmp es xor stc jmp push (bad) fisttp xor icebp push mov movsl (bad) or mov push mov cs shr mov or sbb or push in rcrl fstpt push fild out adc inc pop adc pop jecxz and or cmp clc adc and sub sbb sbb lea or push inc xor inc and xchg pop pushf es pop call adc mov (bad) adc sub loopne gs data16 daa aaa inc out fsts cwtl andl push jmp mov int xor sub in ja inc jge and jb or sbb insl mov push insb stc sbb push or (bad) and jns pusha jo add lock add adc xor mov mov jo movb adcl lock sbb ret mov sti les adc fistl and bound add xchg jb movsb das fst cli dec ja jae or or dec aas and push and dec inc cmpb fild lods push ja jle inc sbb loope aas xor sub sbb mov jae shlb clc adc xor pushf sub pushf cli sbbb and movsl jge push fs dec cmp pusha jmp daa sbb add xor inc sahf rcr sti jp inc ljmp faddl inc inc sbb test cli mov das mov jmp xchg sub dec lahf loopne pop xor pop pop clc dec inc pop fidivrl sub adc inc sahf mov test test imul inc (bad) adc or cmc shrl mov ret (bad) lds adc adc or test add push mov push pop or jno inc les and jge jle jo mov sub les addr16 jecxz dec and mov popf dec cmp fidivr dec xchg and aad mov rcl insl mov sbb in mov sub shlb mov pop and orl dec and adc mov push push xchg inc loope aam (bad) or mov les inc call mov pop fcoms adc inc fcoms cmpsb or push lock or push insb jge stc sub addr16 pop movsb out ffree sub or hlt divl fs xor test push and add or sub dec push pop and (bad) dec mov (bad) les or push sub sub comiss pop (bad) lret xchg jo popf mov dec xor xchg lgs je test sub (bad) mov test mov mov nop mov mov sub jbe xchg ss iret dec (bad) js cltd jnp rcrb (bad) int3 pop or add cmp inc js inc jb scas pop fildll xor das push push xor inc test out push imul test jne mov adc jmp pop push or imul xchg push pop nop leave adc fsubrl andl or push dec mov mov lahf test jnp lret ret cmp not es scas orl daa loope movsl pop fcoml es mov mov lahf leave (bad) (bad) or lods imul xor scas inc test add push sbb test aas iret lahf adc rorb xor sub push jbe arpl xchg sbb sbb orl pop adc add out adc and dec or push xchg aaa or pop sub add mov popa and adc xchg fadds mov and dec mov xor dec or sub out test popf mov xor popa push or adc push xor rolb stc inc add and cmp dec xor fs adc leave push add orb and lds mov adc enter repz andl xor out je (bad) int inc lret pop cmp sbb pop push lods ret cmpsl movsb rcll scas xor movsb jl xor push pop push mov or js push mov mov push xor lock mov push and ja mov imul push cmp (bad) push or mov mov cmp sbb push or inc inc push mov call loope add dec cs popa xchg xchg je (bad) xchg aaa cmp inc test mov lock push fldt push pop add add or test or enter xchg andb nop shrb arpl mov or or mov outsb jmp add push fidivr or add inc sub loopne xchg ljmp in jmp (bad) inc xadd add js shrl add je lahf cmp sub fs add sub cmp rcll sub adc sub rorl inc xchg pusha mov cmp jecxz gs das inc mov clc pop (bad) repnz ss ret sub sub jl sub dec push and push or or pop push pop add or xchg mov aam imul fld std ss xor inc cmp push pop je,pt lea pop sbb pop jb pop ret pop hlt repz push in add adc outsb adc (bad) inc inc add push add (bad) insb mov xor js xchg push push xchg iret mov inc mov mov cmc and add xor loopne or test mov dec clc in xor clc and jne mov jno movb mov (bad) jae cmp and push fnstcw adc mov repz mov add loop cmp or xchg push xchg and inc xor sbb fdivl jne and fistpll out or xor add stos dec aad mov sbb cli sbb xchg je or mov inc mov sbb sub push push outsl mov (bad) das add loopne inc test pop cwtl loopne call lock add adc or xchg pusha cmc inc pop pushf out subl jge xor pop shrl adcl into sbb adc and or sub inc fnstcw (bad) xor jl pushf int adc sbb ret or xchg inc ds dec out sbb arpl imul popf sti adc jmp mov pop mov arpl mov jge mov test add push icebp fmuls xchg aaa insl sub sti add inc hlt in movl xchg (bad) and sbb and inc scas ljmp cs mov lahf insl mov mov jl mov pop out add inc test adc add mov sbb or and fwait dec lock push out jns lret jmp sti sahf xlat xchg sti fmull popf mull orl jmp xlat lds mov scas mov cmc pop daa outsb out int inc mov fistpll xlat std or xlat aaa lods addr16 cld xlat (bad) daa lret popa hlt or out inc fcmovu lock sarb cmpsl std adc pop ret sub enter lods dec and or xor adc test add loope xor cmp mov push cmc mov xchg xor hlt into pop mov add icebp sub stos (bad) int mov xor sbb push cmp hlt fcmovu clc lahf rorl lock add pop lods jne mov cs xor add sbb adc push (bad) cli mov adc sub in lcall icebp pop (bad) xor or ficoml test xlat adc inc xchg nop mov sbb pop push sbb jnp jge aaa cmpsb inc push push nopl adc mov cs cltd mov add mov adc fildl pop subl or lods or xor gs arpl loope mov xor mov cmp je inc js gs xchg dec mov loope int3 jecxz xchg adc scas nop jge xchg das lock adcl add jo pusha pop xchg loope stos test jnp sub pop test cmp jbe arpl test fiadd dec test imul mov gs add jnp mov dec push push cmp fmuls (bad) in push mov inc jae and sub jb (bad) pusha adc idivl call bnd orl addr16 mov dec sbb add movswl daa cmp push mov xchg ljmp js xor add test pop pop inc push ss jmp xor jle push mov push push sub mov inc arpl adc sbb shl xchg mov push imul fcoml add fs inc ja xor sbb sbb push cmp xlat jo push mov push add push fsubs loop mov cwtl or cmp and add adc sub fsts push xchg out inc and inc ret and ljmp inc jmp sub test inc ret adc and lods cmc in mov xchg in aad sub fcomp jl jo int3 and jecxz sub ret rcll jg fbld add in or mov inc loopne shl adc mov xorb mov mov jge jg int3 lock inc xor xchg cmp inc push push push mov adc insl xchg jnp push xchg test insl or xchg mov insb stos dec insl loop inc jmp xchg lret add lea lock lahf xchg mov nop mov sbb or push in mov call insb out mov in add hlt xchg cmpsb xor sbb adc add cmp cmp push adc movsl cmp jo inc (bad) loopne pop cmp add insb mov pop cmp pop outsl mov sub dec add pop xchg jp sbb jb popa cmp es sbb adc or xchg and and pop jl sub cmp inc push loope jne rcll (bad) dec ret cmp mov sahf icebp adc mov enter jmp mov jmp repz aam jecxz imul lods repz sub push lcall push out xchg jbe stc mov std int3 sarl jmp imul pop and jb bnd add xor pushf adcl mov pop enter dec ret push (bad) in (bad) adc and push or inc mov or insl mov xchg js frstor or sbb (bad) sbb and imul jp add mov repz mov fistp push int imul out popf mov imull or inc data16 jmp testl insl mov aam sub pop arpl pop push (bad) pop movsl shrl or or mov adc inc dec test rcll adc and sbb movsl dec sbb or pop add jae cmp xor sbb adc mov loopne cmp aaa jp dec test add adc cwtl bound aam push and pop adc xor fnstcw add icebp stos gs xor sbb clc push or push push xchg cmp cmpsl sbb push push or push rolb pop push dec sbb mov ss (bad) call (bad) cmp frstor or mov push rclb sbb adc xchg or mov inc imul xchg cs lcall inc or movsb movsb mov dec mov inc movsl cmp mov mov adc and add and mov add fiadd add rolb mov mov imul sub loope xor push out dec int je pop inc or inc xchg add sbb mov dec inc cmp or mov dec icebp int3 xor pop (bad) push mov jge xor pop add pop and sbb faddl repnz les push push jne mov mov xor inc aaa addr16 (bad) (bad) mov jmp cmp jnp lret xchg test faddl (bad) push push push cmc mov and or pop out in jle jge fadds cmp lret inc inc jae jge cwtl add test cld pop and add cmp nop mov jg inc pop dec mov xor mov movsb mov out popa push test int mov push push jb push jns and mov inc cmp mov xchg movsl adc (bad) pop push movsl jbe out inc and jge insb adc xor cld or (bad) shr and lahf adc sub and lea inc adc add and add mov lock inc xchg fs decl clc mov incl sub incl adc sub lret (bad) push xorb dec popa lds (bad) popa testb je adc imul rorl adc int pop ret loop mov aaa mov popa (bad) mov push sti mov jne inc test popf and xlat xlat lret test (bad) add push jno or xchg adc lods jae xchg jb adc ljmp (bad) mov movsl jl cli test push fist movsb ffreep sti enter inc xchg stc in dec mov arpl pop inc add xor dec or scas aad les mov sarl rclb mov add dec jbe daa and push mov push or sub dec fdivs add mov mov je add fcomps mov cwtl (bad) push mov cmp or cwtl dec adc or ds or push arpl idivl cmovnp in mov push push bound fcomps cmp add jne xchg jmp jbe lods (bad) jg push inc mov lods sbb stos fs xchg nop jne push xchg mov sbb mov add test popa xor rorb mov orl pushf add (bad) gs arpl sarb mov das sub sbb sbbl xchg subl xor xor sbb pop mov outsl jmp loop mov (bad) dec pop push mov dec and dec test inc cmp addl popf pop roll push add mov jns mov int3 in (bad) pop inc std lea jb xor mov push jb dec cmp jo adc fmuls pop ret cli and and lea cmp out test dec or xchg popf inc sub xchg test stos stos jno (bad) mov mov sbb xchg and dec xchg (bad) and aam mov les pusha and xor adc cmp or (bad) add sub int test push xor xchg xlat out xor (bad) jne jnp adc mov enter xor cmp adc or jo and int popf dec ret add sub sub add mov jne push sub or adc push sbb xor xor mov mov push aaa inc mov xor add push inc push cmpsb test loopne les sbb xor or or (bad) add lds in popf inc push and ret or stos cmp inc aam stc out js add push mov mov das sbb inc add test and sarb jmp push xchg mov mov or push cltd sbb mul or xchg or pop mov ret fbld cmp sbb repz pop mov mov push ret dec aam out cmp push push dec les or xor or or xchg push cmp scas test push or test or push jp imul xchg or add je and pushf call daa mov fwait (bad) jb popa das inc cmp fiaddl push mov aam cltd pop cmp repz cwtl push stos test cmp orb cli sub sub add repz inc or aam (bad) pop xchg mov pusha sbb outsb fnsave push mov push xchg fcmovu sub xchg data16 mov jecxz push fbld mov loopne sub in jno push cmp mov loop,pt and adc dec lock lcall cmc jo dec inc dec adc or call cmp push or add and xor fbstp push xchg cmp pop dec add mov lds pop or and (bad) push mov idivl pop sbb pop pusha (bad) jl xor mov addl and push lret cmp fdivl push jb and sub sbb and clc mov pushf les sahf fdivrs fsubrl or mov ret add scas sbb mov xor dec pop add and add daa jae xor inc sub dec repz sbb push dec bound push mov mov push xchg pop lahf sbb and lods fisubl jo aas or mov xchg mov sahf cltd dec mov and pop fnop inc shl ljmp out xor inc or push adcb add dec fmuls inc mov sub popf test lea pop and jo and xchg call loopne test in or xor loope pop in out imul popf out lea xchg hlt lret push and or push call loopne test inc in xchg mov or je jo xlat pop enter arpl shl ja cs xchg lock insb rol shll xchg mov (bad) leave in out push inc shrl (bad) int3 outsb inc sbb test xchg or add js push mov push ss cmp lods jne addl into jo fdivr hlt lock push dec jp or cmp jbe and iret adc sbb enter inc aaa enter mov add nop jnp test sub adc cltd push push jmp fxam into jne adc mov cmp mov cltd test mov sub pop das sti jb sbb clc clc inc or test mov add enter in xor adc and xchg sbb cmp cmp inc xchg mov adc mov pop pushf addr16 xor mov pushf inc or inc adc roll inc nop sbbb pop mov inc dec jp leave xorb dec rorb pusha and ss cmp or out mov pop dec mov pushf add sub adc inc (bad) mov movsl mov scas leave push call scas ret cmc mov lods xchg dec aas lcall xchg lret ror lret xchg xlat frstpm(287 adc xchg inc xchg ljmp xchg ret sbb mov mov xlat adc mov mov dec test mov fbld xchg in std cltd scas cmpsl insb adc sbb nop sbb leave aam pop mov xor add dec jb dec negb pop test int cld test cmp jp (bad) adc cli call sbb inc test (bad) or add mov fistp or sub cmp in and insl adc jne inc mov imul in cmp mov xchg xchg xchg push push push add xchg xor jbe pop dec push mov nop jecxz mov (bad) fstps test xlat orl mov repz or mov and adc aad sahf orb or stos inc aad pop sbbb insb fwait cs dec sbb mov pushf push (bad) mov test xor cwtl inc xchg mov shlb push pop and add loop cmpsl pop lcall dec mov fdivr shrb jae lret pop sbb sbb loop add subb or jl scas pop int clc xchg fs rcr mov sbb repz add or (bad) rep pop pop cltd add jns test sub and mov sub adc mov push aas add rolb fcoml movsl cmp adc (bad) les push push orps jecxz mov push cwtl or jbe dec add daa movlps xor mov xchg loop (bad) repnz xor loopne dec rcr ss movb pop (bad) jne jne add (bad) (bad) maskmovq testl test and js add push sbb mov mov inc add test (bad) (bad) in inc cmp sti data16 xor add les jns enter adc sarl and aas sbb pop or es dec xchg adc popa or push adc push divl out xchg andb xor push lret aaa xor les rolb or xor xchg xlat (bad) sbb or int scas out and dec or pop pop (bad) sbb sbb inc push pop sbb in inc fnstcw or roll clc add orl xor leave jno push pushf mov push jno (bad) lock dec sarb into jbe hlt icebp lret push into xor sbb bswap out test in arpl mov jle outsl push pop sarb inc mov add leave add not pushf push pop (bad) (bad) les lea cmpsl pop ja fldl hlt imul (bad) repnz xchg dec xor push lea xlat test imul inc stos stos call adc das adc xor call out inc cmp pop fldl rcrl mov lea shl jl sbb insl cmp divb mov sbb cmp shrb divb mov mov dec dec adc movsb xchg push jb xor xor int adc aaa lahf mov enter cmpsl and dec push sbb sbb and sbbl dec das shrl dec or aaa test sub add nop add xor or dec stos adc push sbb push inc ja adc outsl and mull and test mov and or loopne adc cmp dec enter fmuls xchg ds adc repnz or lret dec pop aas dec sbb (bad) (bad) mov imul inc cmpsl adc pop add orl in daa inc adc addr16 mov loope cmp movsl jecxz cmp jnp and sbb loopne into rcrb push out pop lock cmp xor mov mov xchg test ss daa mov jns cmp enter sti test and cmp sbb sbb aas loopne or adc pop pop out sub rclb imul or mov pop loopne into int popa add pop das fnstsw cs call adc enter push je sahf sarl mov inc sbb shlb inc rcrb jbe roll add inc adc pop pop mov push sarb pop and or sub mov xchg ljmp movsb or in jnp lahf xchg lods pop ret xchg les sub fildl mov scas and mov in jnp push inc in gs add paddsb loope mov mov pop icebp sbb push jns lret sbb outsb or adc sbb popa adc or dec sub sub (bad) js dec xchg or loop lods pop (bad) inc jne xchg outsl pusha xor es or xchg adc xchg jo jle mov xchg (bad) test jne jmp pop add pusha jno push xor insl jne es mov and push sarl nop push push jmp loopne pop adc mov cmpb jne lea push (bad) arpl adc lds or enter inc movsb in sub dec adc xchg jae jp inc sub hlt mov int3 int3 push add pop sahf cli movsb add loopne mov (bad) loop es and add mov dec jg inc and sbb mov fsubs push add pop pop jp inc mov mov dec hlt lock dec je add (bad) adc or xor dec sbb and xor adc mov push (bad) sbb mov in orb jecxz (bad) jae push ret lock cmp ja cmpsb mov cld imul xor sub mull pop js sbb loopne add sbb add pop in ret sbb or sahf aaa add loopne loop jnp rorb lea loopne or adc jbe fstl test adc bt ret rcr roll adc xchg mov sbb pop stos into ret nop mov add daa dec repnz pop push mov inc xor lock pop mov xchg repnz push jbe sbb xor add lock mov mov and jl fwait andb pusha in movsl aaa cmp push and mov popa sbb adc scas dec adc push fild push lea add and push or test bound jo cwtl inc outsb dec xor push pusha es (bad) pop scas mov lcall test xorb mov adcb xchg jle dec cmp jle mov fstl bound mov jecxz push jg jl lea popa jmp addb mov pop push xor jg pop xor mov dec or add mulb pop testl insb mov jmp movb push xor test add or or std ret dec push adc pop xor lcall adc sub lock push dec pop and push nop scas loope es or add fsub rcr and xorl xchg adc push mov dec outsb mov dec inc repnz mov fildl movsl mov loop sub or mov test jns clc push push dec sbb pop popa orl andl jge enter (bad) dec sbb add icebp dec mov dec add xchg adc jbe ss jp mov inc fimull nop rclb inc mov cmp lea push loope adc lock movsl sbb sub clc pop sub mul push adc push add rclb and push fnstcw cmc xchg dec jne add and jle push xlat xchg pushf sub sub jl ret incl roll inc push push pop sbb in clc lock fsub mov dec or mov push inc inc test (bad) ss push adc pop add sub add push push lock sbb orl in jmp and push add or pop mov xchg cmp or dec adc sub inc add pop add xor cmp and cmpsl add fisub mov lahf add and pop mov xorl fiaddl pop sbb inc mov ret dec inc add rcrl push push inc add adc test pop sbb loope in adc fadd test pop in cs in mov (bad) adc mov mov negl es jno push xchg xlat sbb push or add (bad) xor sub add ret mov cld roll sub jo aad sub push mov xchg fdivs inc aam mov mov and (bad) iret add add aas add jl push hlt mov clc add adc je inc pop and stc jo imul xchg mov dec add popf and mov pop pushf (bad) hlt (bad) lock or push aam loopne xor ret sti insb add in xlat movsl push mov aas push push pop cmp push roll pop dec mov (bad) push inc gs push repz and pop and push adc addb mov dec cmp inc mov (bad) push je dec je dec jne repnz jmp adcb jge or das out cmc inc rol (bad) add (bad) sub xchg loop jp add es cmp dec pop daa add mov push (bad) sti mov inc pop popa and and nop inc pop inc pop (bad) gs inc scas add call sub pop out inc adc test aam roll fcmove and imul lahf sub push inc sbb idivl popa jmp adc outsl xor nop and pop or or std leave add movb pop ret shll pop or leave xchg xchg daa xchg movsb ret in or cmpb adc push sbb pusha dec push es adc ja cmpsl sbb cmp inc xchg sbb xchg push push dec dec add mov mov or sti dec and inc popf fildll imul mov lret dec or (bad) inc xor aas jge and xchg push pop aaa mov push lock xchg rorb push loopne xlat push (bad) in (bad) xlat lcall cmp jecxz mov icebp inc je inc in jo xor pop cli push out scas xchg stc pop aam push lahf lcall scas add and sbb mov mov loope jmp adc sbb mov (bad) in pop pop and sbb adc sub dec jne sbb arpl test and mov (bad) dec dec sbb fldl popa sub mov mov and or cmp dec call mov stos inc aam jae test jb push mov iret scas rolb hlt sub push mov lods jle add mov jo adc mov cmp movhps cmovns mov test hlt xchg dec jl add push or outsl sub stc cmpsl pop mov push push rcl or mov sub and out mov dec imul (bad) inc call pop cmc call push (bad) mov pop test inc inc or xlat adc lret sbb loope pop xor in jmp or pop add jl outsb push rcrl adc sub scas imul xchg popf and inc xlat imul and jo push add mov icebp cmp push ja inc outsl stos pop mov add je jne or mov cmp lods adc je out push add adc pop mov mov and mov push std or and adc and bound push push add xchg jbe insb adc and mov mov clc (bad) jl mov mov add jecxz mov sub cmp mov push xor sbb push sahf jl movsb add (bad) imul inc frstor xor (bad) mul mov out inc loope loop enter add or mov add adc cmp aas xor xchg test adc pop mov (bad) push lock mov adc cmc mov fs mov add mov divl xchg xor clc cmc add and cs fwait jecxz (bad) lea add roll adc jnp sbb icebp push inc fiaddl lcall xchg add push fmull sbb (bad) nop dec loop dec (bad) inc in test jns lock inc mov loopne mov mov pusha mov dec mov loopne icebp (bad) jb xor imul xchg ret add and lret ror mov sahf dec addl lret mov add stos dec fs or mov inc pop jge repnz outsb bswap popf adc lret adc xor movsb sbbl clc push and sub mov mov or daa sbb dec inc add add ret and clc pusha jae jmp test stc jg test aaa leave jae pop cmp and sbb subb dec mov mov loopne or push mov and push cld add jecxz cmp cmp mov rolb or cltd adc pop (bad) cld test lds add mov ret nop dec movsb leave xchg ds shl hlt in cli clc cltd xchg test lcall cmpsb scas push xor push cmp fwait push mov push jle add inc inc mov cmp jne repz sub repz mov daa shlb dec and mov nop cld rorl pop push test pushf xor cmp fsubrl cmp pop sbb add pop and pop dec push sub sub es xchg rorb xchg loope inc call ret stos jp pop sbb das iret sub mov loopne repnz clc imul jl dec clc xchg mov shlb or (bad) jo pop loopne jno into pop pop fs dec pop aad shl dec cmp mov mov inc adc pavgb lret cwtl es and lds jno and add mov ret aad cmp fistp push jo pop or inc rclb jno jns dec loop sbb cld and adc add sbb ljmp and inc pop xor jp xor mov out push and push mov sarb jl pop cmpb je adc aam adc inc xor xor aam movsb inc cmp test sub rclb dec jno shlb pop punpckhdq dec sub movsl push es xchg add rorl xchg add int3 shrb or lods leave mov dec cmp std adc mov mov xchg jmp pop mov lock cmp sbb adc or roll and dec sarl xchg pop lods mov das lock out (bad) xchg inc sbb inc test mov cmc sbb cmp jb dec or clc shll jb xor push jns ss mov rorb mov lcall ficompl sub sbb arpl jmp push sbb repz push xor into call pop roll mov movsl add mov adc movups fsubl mov dec test cmp mov in dec sbb adc jbe add and mov enter out add sti or lret and sub or iret lock insb adc ret sub xor xchg jb leave pop jo mov cmp ret push je mov inc int3 aad repz sbb add adc lock pop adc add and or rcl and lcall mov push subb add cli push pusha fdivs sub fistpll sbb lcall daa fistp rcrb xchg or ficom cmp push sbb xlat rcrl dec sti imul adc add add add push push fimul cmp (bad) push test cltd ret arpl mov iret rorb mov add or cltd dec jb mov mov dec cwtl cld mov push mov pop pop mov inc (bad) je jb xlat les int3 nop mov in add adc ret bound cmc inc jno ds fs dec ror je ljmp push jmp cmp add adc rcll and or sub push push fidivl sbb sbb psadbw and dec inc adc and jecxz xchg js xor xorl ds hlt cwtl or pop xor xchg add mov pop jae jo adcl loopne add push data16 cmpl shrl pop fildl fimul add lock and in leave add pop orb jp sbb inc mov add bnd lea cltd ljmp rorl arpl leave sbbb mov add out enter pusha xor adc inc loope adc (bad) lods mov fnop and mov sub mov pop xor xorl or iret or addl mov mov and (bad) lock das push jne xchg mov mov jecxz fstl ret adc in pop fmulp mov sbb and push push push xor add xchg popa jns sbb cmpl push mov push lock push add push push jmp push loopne test cltd insb add mov pop (bad) jo or or xor cmp in add les push data16 fwait sbb adc adc dec inc sbb mov mov mov mov xor mov jg adc (bad) stos push mov pop jne movsl les cld push dec (bad) loopne pusha adc cmp cs sub adc data16 or xor lret pusha sbb sarb sub lds testb or inc xor test mov aaa pop int3 jge add rcll jp inc pusha shll adc cld loopne mov pop xor insb popa or fcomp dec xlat shr fsubr ss mov in dec cmpl les in cmp inc pop add lret or clc jne mov lods fsqrt aas cmp or xor sub ljmp xor push push clc bound push iret hlt cmp loopne notb sbb dec loopne fdivrs fs call mov add dec loopne mov int3 cld bound or dec das jp add je sbb into pop push adc xchg or notl and ss push incl sub movsl xchg cmpl je insl jecxz xor mov xchg pop jmp das or or mov sub cltd and push fs add or push inc sub es mov sub or in or mov mov cmp mov pusha sub adc cmp and sub or imul test mov leave cwtl mov pusha pusha lds and inc addb je inc cmpsb sbb mov (bad) outsl js and pop addb push dec sbb xchg mov dec in mov cmp outsl or jle push leave pop ret add dec or inc daa int3 dec enter push xchg jbe push pusha test add scas idivb outsb iret cwtl mov inc mov fs ret add das lods add adc push cmp xchg imul iret fisubl mov outsb or ret rclb rcrl sub dec or adc mov mov jae add dec xchg repz push pop inc adc jle add add push xchg mov adc pop mov out rcll mov xor inc xchg mov out pop int adc pop jb adc xchg and addr16 fldl or pusha rcll lods out cmp in imul xor imul jno decl push add test incl adc inc mov xor outsl movsl adc push or loopne push add cmp dec movsl (bad) dec in or push xor inc inc js sbb outsb xor pop mov and fistpl nop xchg xchg pop lock add out ljmp dec jp inc pop mov roll cmp sub push xchg lods push mov push adcl push add insb and inc rolb xor pop jno push aas xchg add add xchg insb xchg pushf mov fisttp (bad) hlt inc lods add loopne lcall pop add pop stos xchg popf into pop push mov mov sub or cld inc inc mov in lea das pusha loopne lcall movsl lret cmp cmp stos cmp (bad) sub mov arpl push lods add sahf clc push enter std push divl (bad) out imul jl arpl jbe divb enter push pop sahf mov pop add lock fadd imul adc jp aam fabs faddl add sub jne popa and or in (bad) push xor inc mull add hlt add pusha addb add inc test shll xor icebp cmp es push int3 ja push iret xor nop and out inc movb les pop pushf cmp adc pop add outsb int sbb pop pop cmp into xor sbb jo fidivrl inc add dec mov fnop sub pop xchg cmp call jl loope (bad) mov ret jo or sbb xor ja arpl mov (bad) xor xchg imul xchg dec add sub jmp insl sbb mov dec mov shrl loop mov add andl (bad) mov movb fnsave sub pop ffreep mov inc and mov aas adc inc sbb addl dec dec jl inc push push mov push sbb add add test loope ret test lock js dec movsb adc adc hlt scas sub inc xor mov sub inc cmpsb dec push mov push rol add rclb fsubs add cmpsb lea and pop ret push sub enter adc loopne outsb dec std clc or jle xor add jle in pop faddl lea push mov cmpl rorb inc dec (bad) fild mov dec and adc divb mov scas mov call adc push call fcoml das or sub inc icebp and roll and mov jbe mov cmp cmpsl into popa (bad) sbb xor jne jge (bad) or dec loopne bound mov adc or sbb dec adc and cmp adc ss add mov push je in adc mov mov cmp jl sbb or ficompl pop jecxz sub pop push rcll or cmpsb fs push test xor rcrb lock daa push ret xchg lea lcall loopne add push lock adc mov stos or in les push es mov and and sbb add leave push (bad) mov sarb sbb rolb sbb mov lcall or xchg adcb push sub or stos fs push mov add xchg les cli out pop dec jge xorb shlb push mov fadds lds mov xor ficoml rorl rcl push pop mov cmp sub (bad) mov iret in inc sbb scas mov insb loop mov nop push cltd js jp xor sbb mov out lods cmp xchg (bad) and jl fcomp or sbb shr (bad) dec push fcoms (bad) adc xor lret cmp jle gs in mov call loope push pop repnz loopne in and and mov lret cmp push lock inc add jne mov clc pop or aas xor pop daa shrb les fs les push pusha push lods mov dec pusha dec jmp cli nop sub and jl (bad) ret leave add add push aam ret dec iret mov sti or adc js or add add sub leave ret rclb int jge test sbb mov orl fnstsw in xchg push shlb adc adc (bad) leave sbb inc push ds in pushf inc mov push and mov push aad mov cmp cmp xor int rorl std clc enter mov arpl push fcompl adc sub cmp or popa and mov jmp push enter inc inc (bad) lds sub adc repz adc stos test sarb cwtl add sbbl add lods xor mov movsb push adc cmp jmp or nop pop sbb xor rorb sbb out dec pop sub pop push sbb lock orb jne adc jo dec mov mov sbb mov shrb mov xchg shlb fsubrs sbb add mov mov in xchg dec mov je lcall mov repnz add cltd cmc jmp xchg dec leave and sub push mov outsb or add loopne call push dec and sub xor lock or ja movsb loopne cmp push int3 and push js or test stos fiaddl leave adc mov cmp push fbld test mov add pop and or popa roll pop and sbb nop xchg xlat mov (bad) pop xor inc mov sub jo mov arpl mov mov movsb ja dec dec dec pop push cmp fbld and mov ret test or xchg push addr16 mov jl out (bad) shr (bad) lret cmpsb adc sbb insb adc sub rorb in adcl ss cmp je xchg cmp push or adc test mov xor out sbb mov add cmc push adcl dec rclb sub mov test mov pop adc sbb dec fmul xor sbb sbb div xor dec adc jmp fstp inc dec mov pop pop add jle cmp pusha and je fcomps cli dec lock add outsb dec shr mov adc dec jne mov cli or add cmp pushf dec add xor push xor dec mov scas fiadd dec cmpsb push jmp enter jp les cmp jle sub lcall pop mov jb,pn push in push insb xchg fwait and daa or push dec ret (bad) jl cltd xchg sbb fsubl pop pop nop imul inc inc je cmp test pop rolb dec loopne icebp incl loop cmpb fwait mov dec and mov fs mov sbb xlat mov inc sbb rolb inc mov movsw cmpsl int push test mov jecxz xchg popl mov pop mov test sub imul and or fwait dec cwtl push js add jl cld scas loope mov mov add lret clc lcall lods sbb outsb test push adc icebp lahf scas dec nop cmpl mov adc jne mov fidiv adc call in int3 into cmpb and sub faddl jecxz mov in fmuls xchg cmp insl push sbb ret pop scas imulb lods dec lahf mov (bad) das lret push adc pop xchg fnstenv sarl es sub add dec rclb bound jo mov adcb lds sbb dec repz divl loopne jnp xchg or ret sub or add cmp lock pop mov sub clc js inc xchg decl movsb pshufw dec ljmp in push lret nop add leave lea loope inc clc das (bad) ja add dec mov cmpl testb adc (bad) pop lock push pop inc adc lret movsb mov rorb sub sub pop outsb and dec push mov add mov xchg fisubl add sahf sub ret cmpsb rcrl jo testb rorb add pop or jle pop outsl pop xorl popf sub jne mov mov iret daa inc dec adc test sub dec jge xor jns sub data16 pop and (bad) pop sarb xchg and add pop ds lock sbb jae jbe pop sub inc dec jb jmp xchg jmp icebp jmp popf pop addl xchg push mov inc add mov add and sbbb push jns,pn sub inc sub mov and inc or xor add addr16 scas push sub xor stos mov push mov xor inc cmp mov lea xchg push jb add mov and jo inc cmp lcall in dec cwtl ss fwait push movsl adc or fmulp pop rcrl jmp sbb adc adc (bad) push adcl mov mov (bad) ljmp nop jge mov rol push cmp dec jo adc shlb add popa adc push jne cmp (bad) push outsb jmp adc jo add mov cwtl addl pop inc rcll icebp inc out pusha sti pop dec fstpl lods cmp cmp nop sub add adc ret fstp push push call sub call (bad) xlat push repnz cmp pop xor scas sbb pop or sbb pop adc dec or lcall add xor cmpsb push cltd ret daa icebp add mov mov sub push lods adcl and add pop push push adc pop or leave ljmp arpl pop inc or daa push mov cld push pop and inc dec push sbb lock shlb addl mov sbb daa add mov or sbb js lock (bad) cmp mov push sub or or jne repz (bad) jl les test jnp xchg imul adc or add xlat push adc adc add dec sti nop sub push leave cmp or das add dec enter flds sbb mov sbb loop les dec sbb ljmp mov es or fdivl pop mov mov cli int3 cltd lock js jmp add nop cmpl mov inc (bad) (bad) jno or jmp and cmp arpl pop and and and and mov pop or and or or lea mov jmp sbb scas xor sub mov dec pusha xchg pop xchg hlt orl lret dec push lods add or adc cmpl cltd cld pushf je ficom add dec push mov ja clc add fstpt xchg lret fbld dec sbb lea jb mov or sarb fnstsw test inc pop and popf push dec add push inc pop sub push inc add insl push pop es pop ljmp inc movsl lea or push lahf mov movb bnd shl hlt call pop int3 lods pop or adc adc mov das sub lcall jo repnz fsin xchg out shlb jo mov mov imull lods jne jl bound insb and push dec or xchg and cltd idiv lock jge xchg add xor pop call les movsb mov sbb (bad) and and xor adc (bad) movsb rcrb jl mov int3 bnd xchg or popa lock ja js jp outsb lea mov test mov and xchg js loope popf add (bad) adc imul and push mov pop movsl cld xchg dec mov xor (bad) jns dec inc xor cmpsb (bad) jg hlt sbb cmp sarb or push popa sub aad nop rcrb push rolb call adc inc or add or dec loopne dec testl loope cwtl xor mov xchg mov in mov fild push dec movl lock pop arpl push dec out mov sbb sub pop rolb lods movsl dec inc aam or add (bad) add shr mov repz xchg adc inc push ret or sub (bad) push jl xor mov mov cltd mov push sbb roll ret add fs sbb jo imul in dec cmpsb pop pop sbb inc pop adc dec sbb test call xor loopne stos enter inc out aad fcoml subb xor (bad) cmpl add popa imul dec data16 inc xor iret jo and dec mov push or cs rcl or incl push cmp psubusb lods adc ret fdiv sub loopnew jne xchg int dec movsl nop dec push push stc jl loopne (bad) adc mov movsb push mov add and add jge cmpb or dec sar xchg jb mov movl gs jne lock add les pop mov test pop add push test shlb add jb xor dec fsts push cwtl aaa addr16 imul iret adc inc mov movsb xor pop sbb sbb bound pop dec add cld jnp inc sub add jb fsts stos and loop mov jl sbb add mov cli (bad) icebp pop cmc ret inc xor imull mov mov inc mov cmp push daa pop inc pop lods mov icebp mov lock nop rcll imul sbb push sub inc pop push jne adc nop cld ljmp shrb (bad) fidivl clc fisubl add fmull cs adc mov mov push repnz ret extrq mov sbb lock (bad) int3 mov clc shlb sub enter add fild (bad) push pop add xor pop ret inc repz jo subl inc xor cmp dec je (bad) add into push pop int3 pop sub mov fidiv xchg imul idivb sbbl mov scas pop mov add push call dec jg add loopne push xchg cmp dec iret or iret movsb jecxz mov daa jb outsb push push insl dec and adc adc ja dec cld pavgb mov mov (bad) jge scas dec mov (bad) sub fcoml sub mov inc mov xor and push int3 loop mov loopne lea dec mov into xchg fisub pop orl aaa pusha and and and sbb add test out mov mov inc push push mull add in mov or inc jae xor mov das test push (bad) movb ret dec les (bad) inc jb xor hlt test push nop enter xor andl xor inc push adc add push or xchg add push imul lods nop mov clc push push xchg mov sbb pop add mov enter push popl outsl mov scas (bad) cmpsb lahf lock pop sub add and dec dec dec pop sub add leave mov lea clc push xchg cmpsb test and pusha fsub inc or stos enter in in pusha pop dec test int3 lea mov fldenv jo cltd push mov add pop adc inc loopne xor add adc call push gs hlt rclb sbb push aam xor stos into test popa pop iret cmc mov bound lcall push or stc sbb lret jnp dec inc cmc cmp sbb add sti xchg mov ret pop sbb outsb sbb mov (bad) xor jp push rolb dec rorb pusha xchg inc test add mov aam loope add adc out pop add cmp jle or pop rorb push in jp enter sbb imul movsb aaa or or (bad) aaa push sub xchg adc and adc xchg adc gs mov push pop popf out sbb pop sbb mov sbb xor xor cmpsb push push push add rolb xchg orl jne pop mov dec sub mov in mov mov sbb iret pop leave inc or push cmp mov xor jg aaa sub cld inc or dec leave cld ret (bad) jecxz or (bad) and movsb cwtl (bad) adc xchg cmp inc das mov pop leave or push pop xor pop or sub mov or sbb test fistpl pop or inc mov or push adc add (bad) scas fidivl sub and add inc fdivrs outsb test out xchg loopne outsb adc adc jne mov jbe adc imul sub adcb or ret add inc lods imul cmp sub out pop das or fmulp adcb adc in or push xchg mov and push mov rolb inc stc xchg lods inc and pushf push (bad) jne xor stos stos push mov stos inc pusha sub cmp add int pop pushf lea call cmp test and lods and invd jbe cs pop xchg iret cs push inc js xchg xor jl fcmovbe xchg fstl sbb and test pop ror add lods push push lahf inc (bad) xor repz dec ljmp out inc mov xor dec cmpsl or pop (bad) int inc cwtl data16 mov pop cmpsb in fdivrp mov push xchg push test pop mov es lret rep lods jp (bad) add push pop push subb adcb aas jne mov les int3 in pop or push sub mov xchg ss inc les test cs adc mov add aas xchg in loopne jo iret rclb and mov and sub pop pop mov jb pop xorb sub fs jne mov fcmovbe push inc xchg out inc sbb xchg or cmp fs add lea sbb shr xor (bad) loopne sahf xchg cltd (bad) hlt sub dec jnp sbb sub (bad) dec adc (bad) mov cltd xchg ds movl and (bad) or cmc loop and loopne dec inc or aad push push stos aam adc sub cld out jbe push jmp int nop jnp push xchg xchg dec or dec or push jbe xchg and aas push js (bad) sub adc and add push push test push pop dec dec pop or add data16 jl or fimul sbb sbb ja sbb xchg sbb scas imul dec jo add push cmp (bad) mov add das and cmpsl adc adc or sub pop pusha xchg dec in push pop and adc and mov inc jmp and lret lea cmc mov xchg nop outsl cmp pusha xchg cmp cli rcll int3 sub lock xor adc js mov pop cmpsb popf mov pusha cmp hlt push push xchg inc (bad) fist aaa popa mov je pushl push add loopne cmp ja daa xorb or ss push rolb mov loop inc dec mov ljmpw lods push jnp (bad) cltd (bad) mov enter dec in add push jb repz add push nop xchg add add div jle out aam or jge cltd ret rolb ss push or push push fldenv test gs fisubrl ret fist mov leave xchg shr mov rclb sub and sahf cmp sbb dec (bad) shr or or or gs sarb cli xchg ret in adc adc fist adc mov stc lods jb jge sub adc xchg dec jecxz shl pop nop movb shrl aas call mov and inc shlb cmp mov add xor xchg mov or inc bnd pop add je mov rolb inc adc xchg pushf (bad) sarl cmpl jl dec cmp jge cmpb jle mov add lock adc cmp jle (bad) bnd rolb mov outsb and mov xor xchg mov cmp dec pop mov es adc xchg shrb push mov repnz ds es ds mov bound cmp scas inc lcall xor adc pop sbb fbld xchg outsb dec add or cmp cmp je movl rcrl das cld outsl (bad) pop xchg push mov mov mov xorb and or inc and inc adc xor sti jne pop fdivrp cmpsb jb ja in jl popf inc jo mov (bad) xor loope or dec cli mov mov add lock enter dec std mov icebp dec fadds xchg add mov lock add jle xor imul loope dec popa jle mov andl xor jmp fisttp add mov cmpsl and pushf or push push loopne loop add mov add pop sbb inc and and lods sub adc dec lcall adc pop push add add add jl cmp jg insb push rcrb jbe xor sti mov pop adc ja movzbl fdivr cmpsb adcb loopne and or xchg mov cmp cmp jno push adc pop cmp (bad) xor and mov in dec jmp mov add mov and popl or xchg mov ss inc xor jo sbb jne stos pop dec (bad) lahf sbb sub clc jle rorb mov insl sbb inc (bad) jno adc xchg mov imul sbb mov add lahf jo mov pop adc mov jno inc pop push cs dec dec mov insb jne push subl add add nop cs push add rorl xchg lods sar push (bad) stos jle ret push or mov lret jmp aam or cmc add sbb cmp ss push imul jb sub loop sbb leave jne sub out and movsl mov ret cmp inc inc add xor xor test xchg pusha xchg (bad) nop fwait out sub sub jnp adc sbb in push notb or xor or cmp add add add cmp add or and or push push adc mov ret lahf jne adc cmp xor or push pop pop add dec push push mov push jmp pop femms in je iret call adc and mov add outsl repz push jne lahf leave (bad) repnz adc decl movl cmp fadd inc dec int pop scas add push cmp jb cld pop sub dec pop stos mov xchg push mov pop sti xor movl xchg or cmp add imul xchg jnp push adc mov mov adc (bad) in fbld mov es add push sub push (bad) rcll callw fisttpl ja sbb and dec fs add lea in push cmpsb jae xor jno mov rcrb xchg xor jbe (bad) jbe and cmp je add jae arpl push cmovno pop push mov mov mov cmpsb mov hlt pushf push or jge mov and sbb sbb jo dec adc out lret popa rorb push sbb pop jge cltd (bad) pusha enter fsubr daa scas jae aaa cltd cmp or mov jae jmp jbe mov cmpb add rolb fsubrl mov sbb mov push cwtl inc ja and inc adc sub add mov xlat push fcoml sbb xor add pop push sbb adc jg je sub leave inc inc mov xchg jecxz xchg add or subl icebp popa sub mov lods shl adc dec mov and test sbb mov je clc push pop cmpb sub jge je push push dec sbb pop (bad) je cmpsb add xor mov (bad) popa adc lea add in divb std je pop fidivrl adc jecxz inc int xor xor shlb fiaddl xchg das xor and push jmp jns js mov mov or inc ds xchg mov mov and int3 add add xor daa dec je dec jne sbb or into icebp adc jo fwait sub jne inc (bad) lods mov pop icebp lret dec add sub je or jne mov test push int pop mov mov icebp enter mov rcrb add or pop push add pop je dec cmp jg jl cmpsb lods mov lahf add add faddl push aam or dec mov push cmpsb mov popf jae lret pop push je cmpsl sub inc sbb xor leave cmp push push sbb or pop lods out xor subl cs jmp jbe push sbb and mov inc rorl xlat dec les jnp dec cltd xorl add pushf jmp cmpsb mov add (bad) xor ret pop das or inc push (bad) push push xchg pop sbb or lcall or jne negb lahf fdivs es lock pushf mov and push sbb mov aad sub fmuls inc jo ljmp inc outsb mov sub sub bound aaa or add je sub sbb jl das (bad) jmp sub add fmulp je push movb mov mov jg loopne cmc dec jo (bad) out ljmp pusha xor xchg mov cmp sti push setne xchg ret scas push dec and sbb add popa push mov into clc das sbb push dec jo inc pop jmp push sub out les and ficoml add sbb ss and push xchg mov mov mov test mov or pusha xchg pusha sbb mov add cmp dec and sub shrb push pop push push fcomp jl shrb pop add jbe xchg push movsl nop fnop loopne sbb clc sbb imul and jp ret fild add mov jnp pusha repz je and fsubrs mov js cmp dec push (bad) xor push stos push js mov stos sbb add sahf inc pop mov cmp sbb jne lock dec mov xlat rorl jne insl ss sbb push or jle aas xor dec daa outsb adc rorl data16 idiv je sub jne or pop andl pop mov push xchg test add ret or or je cmpsb sub jl adc or hlt rorl and or add pop sbb jl insl mov jg mov ja js scas hlt fiaddl cli dec and (bad) dec add jbe test add pop (bad) fdivs pop int3 inc or mov push or jno dec enter (bad) adc xchg pop add cmp cmp mov jns jae xchg mov ja dec cli xor arpl testb (bad) clts addl sub sub jle jge (bad) cmpsl sub mov or dec lods shl je sub mov xor popa sub lds fldt inc add pop xchg or xor nop (bad) xor jg ret hlt fimull mov add scas popf in cmp lcall lahf pusha push cmp cmpsb push cmp mov add sbb rcrb jo je iret push and shlb cmpsl dec jl adc xor test and inc sub inc pop cmp push mov icebp roll fbstp (bad) in insl (bad) mov ljmp ss (bad) pop jae pop push mov jle inc cmp imul jp add push (bad) pop (bad) push (bad) mov inc cmp (bad) rorb scas sbb aaa or lahf xchg pop rorb or mov out inc sbb shl imul xchg mov pop xor adc add cmp mov bound push lea mov nop xchg (bad) hlt fwait add clc push mov cmpb (bad) pop jg loopne xor jle test into pusha mov pop mov (bad) imul adc or cli xor jae sub or notb movl add lods in fwait push dec movl call inc pop sub outsl xchg sbbb xor je push mov add xor or rcrb (bad) fcmovbe inc pop xor push adc dec or sub out sub das and pop nop ret mov jmp mov inc shrb dec mov sub outsb (bad) (bad) je push or movq jo and and and rolb cmp call (bad) xchg mov cmc loopne xchg into push add xor push pop push test xor sbb pop in adc mov pop add jg aaa cmpb int3 (bad) es mov adc loope mov xchg call lret mulb sbb and sbb jl inc cmp test and int3 mov add dec xchg pusha jns pop aad push mov mov cmpsb addl pop xor or jle sbb mov and int adc mov push int3 std mov add sbb adc sub jne (bad) mov lock push and shl jb pushf jp aaa add ror xor mov ret aaa popf cmp jne pusha outsl jo mov add push sub jnp xchg std or cmp jb xorb sub push sbb jmp cvttps2pi dec sub aam xchg in sub sbb jbe dec (bad) imul xor cmpsl or jo ljmp mov pop push xor sub sbb mov pop jo sub mov lret xor test and std push cmp (bad) jae add inc pop (bad) rcrb push push xor cmp imul xchg adc jb xor adc jp stos dec adc jl push or test ds movl pop and xchg pushf inc jmp test movsb pop cmp jecxz xor add cmp and insb cwtl outsb popa cmpsb jno jg mov inc (bad) insb loopne add mov mov or call aaa loope aam and rcll (bad) mov jmp into (bad) jg xchg lock add inc jb testb je cmp ljmp pop aas xor int3 mov lea lea pop cmp adc pop sub xor push fiaddl mov pusha inc push stos pop mov jne ljmp mov cli mov push adc rol ljmp mov insb test cli pop fst and cmp pushf mov mov jbe pop dec and mov dec add rorl (bad) icebp push (bad) sahf cmp adc cmp pushf int3 test roll or inc xor mov les cmp jbe aaa jmp pop mov iret push and xor repz je sub lret in movsb lahf and ret add data16 scas test xchg add jo testl int3 jbe inc xchg adc jecxz addl add adc xor add int or call in adc movb (bad) imul mov xor rclb in leave inc xchg add and movsl (bad) je sahf popa inc xor fidivrl into push and jmp add repz je cmp bswap push xor ds pop adc inc nop mov fidivrl mov scas hlt add inc pop inc inc fsubrl lret test pop jbe out mov mov adc add loopne fmull mov dec lahf dec push ret push in ret cmp add lock inc cmp hlt fnstcw mov mov (bad) lods xor and dec sub or push out rcrb out sub daa or adc xor aas add dec or mov addr16 inc cmp mov rorb lock popf stos out in push adc insl loop jb dec push je and insl push imul imul mov dec ror pop adc adc enter or and add shrb sti inc pop and popf pop fs cmp adc pop sub mov mov pusha subb stc or add test dec xor sub int3 scas enter inc orl lods pop rclb and lret das sarl loope inc sub xor scas das or sti dec xor shll push or test inc pop out xchg mov adc or out adc or jnp shr sub cmpsb sbb jae inc add rcrl shlb jmp lret cmc or adc insb ljmp test push out add xchg push pop mov pop lahf mulb or push sbb add lahf adc jo cli xchg imul add andl jo lock fs roll not cmpsl in sbb add xchg adc jae inc in insl in out adc pandn imul mov jae hlt out push mov sbb lock fbld loop sub push aad push lods push xchg loope and mov scas mov jnp jno sbb or add pop add roll xchg sbb loop inc dec call inc push cmpl js stos inc pop ja adc mov data16 push cmp push and cmp jg add or push push mov inc inc cmp outsl ror scas mov jo cmpsb xchg testb sahf jb test cmp jae pop aas gs jno xor push dec inc jb lea jle xchg dec insb mov lea push scas push lea movl mov push jmp lret test push int or js popa push cmp loopne rcll std add cmp adc ret and in push mov dec and clc (bad) lock or xlat jbe les pop push push movsb mov mov (bad) jo divl fwait or cli and inc sbb inc jo sti push std dec mov aas or jne out (bad) cli jae nop frstor sbb mov xor sti and pop repnz add sbb scas aad cli xor dec dec outsb aam pop (bad) roll cmpsb cmp loope rolb mov mov adc jne cltd sbb push fbld jbe or dec (bad) rolb pop dec adc mov mov jbe inc inc pop mov mov pop mov jg pop mov je hlt add mov xchg fidivrl add dec push les (bad) ja hlt (bad) popa add enter pop outsb cwtl in ret jne pop cmp jb and pop jno mov add sub mov arpl mov xor mov nop int3 pop xchg add push xor push shll test inc add ret push leave push xor jno sbb xchg jo add das in out push adc push jb cmpl add push icebp (bad) fcmovbe push dec push or mov fisub cld push mov mov jle or xchg fimul sbb sahf inc fisubl shlb int3 mov fildl shr mov fsubs insl or add pop mov jl iret bound nop add jge mov rcrl inc mov aas dec cmp in xchg add pop movl sbb shr movsb imul dec (bad) jno data16 test enter cwtl cwtl lahf and stc dec sti sahf sahf or fxch add mov sub ret loopne dec mov fisttpll sbb jb aas mov jnp add das cwtl sub call enter dec pop (bad) jo je in xor xor adc mov adc mov push cmp aas outsl cmp sbb add jle pop loopne roll push inc in push and enter and cs in push fnstenv mov lret (bad) adc pop repnz mov sbb add push push nop andl mov test add scas mov and loop pop pop mov inc mov pop mov sbb inc scas inc cwtl sbb call iret inc fsubrs cmp jbe cmpl adc mov push out push xor xchg sub push or or or push (bad) dec mov pop inc ficomp adc adc fadd ss xor sbb adc pop (bad) aam mov mull fnstenv aam mov call mov inc sahf (bad) jne dec mov aas fwait inc add es test push imul inc or in arpl add push add sub cmpl adc dec sbb mov or cs lret mov push je xchg pop int sti jmp out inc inc xor jne mov mov fstpl icebp xor pusha or sbb jo push orl scas rcll cmp mov jle and movsb nop add jmp sbb imul lods in push jne adc cld adc ret ret rolb and xor push (bad) ja dec das dec test cwtl add pop adc out popa loop test repz scas add movsl mov jne aas push add cmp mov clc sbb mov or jl mov and dec inc shrl add jo or push inc cld add dec sbb xor call adc inc pop or add es push add push es dec mov lret push dec nopl sub cld xchg inc pop popa fs test sbb adc push outsb or push push jne adc xchg roll inc adc stos and push xchg jb test or push mov ret dec cmp shr xchg mov add rcl or add xchg or aas (bad) xorb push stos pop insb ss out stos jb lods je and iret data16 scas jg (bad) xchg insb sahf rep mov jmp mov ss repz mov rep fidiv mov jo out insl sahf addr16 push jle push push pop add cmp (bad) fistpll xchg mov or mov and push add lock pushf jmp pop outsl add push adc cmp sub jno add sahf sub adc mov and cmp je or mov stos dec out sbb inc sub sahf xchg adc xchg xor fadd adc push mov enter jg mov push fcoms xor push sbb cld inc adc fmuls push or adc xor push add js jle or out jo mov les pop pop push popf fcompl or insb mov sti and inc adc inc lock dec adc push call ja add or ja lods data16 pop mov and ret lahf adc lahf inc or sbb sub sub inc je cltd push and sbb inc pop mov pushl cmp mov imul pop inc sub add inc cmp jp cmc push mov pop mov add rcrb add loopew or sub push inc enter mov outsb pop dec (bad) and inc mov push or push je or cmpsl popf mov mov jle mov jmp nop sbb mov loopne (bad) mov nop mov ficomp pop je mov and add mov xchg ret js pusha pop ret pop push adc adc push cmp mov ja lea dec dec test js (bad) jbe sub add xorb lock std nop adc push or outsb addr16 lea xchg lcall insl or je les push jbe je mov add mov cmp test movsl jge cmp sbb pop add cmc add pop add rorb addr16 and mov inc adc mov enter add ret add jne sbb shlb pop jne into cmp add inc inc adc mov mov lea stos (bad) jle mov in shrb dec mov pop or push mov pusha roll cmpsb aam and movsb mov pop int3 cmp jbe push pop xchg arpl add mov (bad) jbe pop sbb sub test or je inc addb sub lea leave fadd jb sub push aaa adc or cmp das (bad) adc in sub add arpl sbb inc incb mov in add xchg jmp add and inc test adc ss roll sub (bad) jb cmp push rclb es dec mov push push sub push mov cmova sbb out inc cmp push insb stos sbbb jmp rcll dec sub ror pop add inc add add lea pusha xchg scas insb or dec pop sub push stos test mov adc xor and sbb push jo adc pop pop dec pop mov in sub inc adc push shl sbb (bad) dec push mov mov xor jb and fcmovnb mov pop adc pop lock fdivr mov orb into enter sbb ljmp push push jg xchg jno xchg mov cmp pusha xor jae lods pusha fdivrl lock sbb cmp add dec or inc add xchg sarb adc sahf ja and mov leave lock sbb stos dec inc mov int or popf add and (bad) jnp nop fcomp sar lock test or jecxz loopne into shr cmp rolb in loope rcrb aam (bad) cmp fs (bad) (bad) sub outsb inc out dec call add add push xor (bad) add cmpsb addb lock or cmp dec sarl sub push faddl add sbb inc fcoms inc mov ret cmpsb cmpsl inc dec mov lret mov cmc pop movl inc push pop push (bad) pop stos popa sub add mov add jge adc push adc test lea and loope jne lds in push xor scas push sub push cld xor cmp pop cld sbb sahf cmp pop inc add or sbb inc call lcall leave int ljmp xchg loopne push cmpl aaa or xchg fist lahf insl (bad) mov and sbb or mov fadds add rol fs out orl cmp lds test dec xor (bad) dec cmpsl pop stos add mov enter cmp bound cmp push je loop ljmp push rorb cmpl (bad) fld decl sub mov dec add je movsb lods jmp pushf pop or sub cwtl sub pop push cwtl sub jmp pop rcrl add xchg test add dec in mov sbbl jl sbb jbe aas mov or pushf sub xor cmp add mov arpl je xchg push jnp add push pop dec jp cmpsl xlat imul rorb shl add add fimull std divl push sbb dec pusha jne leave push int3 xchg orb clc mov add cmp (bad) jmp call in mov mov pop xor or xchg (bad) xrelease pop push cmp insb xor sub xchg fadd cmp shrl adc lds je inc and shlb add inc push mov or push sub ror mov mov cmp add xor nop jb shrl jl mov push and add cmp xchg jno or lea sub push aaa test lea xchg mov or cmc imul jecxz loopne xchg jbe pop add mov xadd idivb mov mov gs js pop mov les mov dec jae jae sbbb rolb cmp clc add fidiv xchg dec cmp jnp sub push or shll mov dec clc js cmpsb daa mov ljmp rclb mov cmpsb pop or sbb pop int3 lret xor push dec int mov sahf pushf pushf test add adc dec push push mov xor (bad) loopne add xchg xchg adc (bad) dec sub push add pop sbb mov lcall jne hlt adc jns sub fisttpll mov repz test ja cmp jp add inc adc ret pop (bad) adc add dec mov sbb xor xchg or add aam jmp repnz jp sahf popf (bad) int3 mov insb fsubl sbb sbb int3 add xchg inc add xchg add loopne incl cmp enter inc dec mov rclb test add dec inc repnz push (bad) xor adc inc dec pop mov ja loopne or sbb iret fs pop and xor rcll test pushl push sbb movl lea jg cmp mov dec jb and adc sub and ja sbb lods int3 sub add add cmp xor std ret rorb ret and jae pusha mov lds or or inc mov ret xchg xchg scas mov jne cmc xchg xor mov test test rorl push jns mov addb arpl mov pop add inc es mov rorb and int3 sbb add cmp cmc sbb mov mov je shr leave lcall adc (bad) dec cmp jne inc (bad) adc addr16 pop sbb out adc jb mov stos sub outsl int3 adc mov sarl loope mov ret sbbl call clc shll mov add sbbl aad ret je xchg push mov mov cli popa gs enter dec or sbb mov (bad) jbe push adc dec and push sbb or dec mov imul test jg movb adc mov enter test dec inc add insb sbb or sbb cli adc inc sbb or push mov lock lock imul mov fdivrl push sbb roll cwtl and mov (bad) test add add mov test dec xor sbb xchg or or test sbb push add push or icebp inc push cli lea jmp dec add notb cmpsb lcall and cld incl and dec sub (bad) and adc adc add shll pop or push lock add cmp or sbb or fadds add test notl push push add xor pop add pop fnstenv mov mov mov (bad) lock and mov inc adc ficompl adc jp push ss push aam add es movsb popa mov adc loopne adc dec or rcrl repz jne jl movsb or ret jmp or bound add jp inc add pop mov mov aam pusha adc push and sub or shr mov pop imul push or inc push pushf fiadd jp inc dec xor adc icebp ret add push push inc pop mov pop sti std inc sub xor inc lret idivb xchg jae push or pop clc cmp jne jmp jbe lock sti jl jo or insb je lock and mov mov dec add loopne,pt adc jb mov pop (bad) lret cmpsl push cwtl xchg push fisttpll fistl or dec xchg jns inc movsl pop adc push adc push out mov ret inc add cld xchg ret mov mov not std mov or sbb sbb incl xor push cmpsb jbe jo and jge inc mov pop jnp push mov pop xor xchg and pop movsb jg (bad) xor inc adc pop pop orb pop cmp shll jne rorl add (bad) cmp jbe arpl ja mov je mov mov or test add jmp jnp std lcall add icebp add inc outsl add sarl pop sub outsb lea mov cmc mov pop test mov sbb stos rorb or or in sbb fstps mov jle mov adc cmp xor push cmp add or shrl imul and into pop rclb xchg or lea inc cmp dec nop push mov mov int sbb into stos (bad) jno movsl push jl pop (bad) pop inc loopne or outsl stos sti test jl push xor pop stos dec shrl mov and outsl das loop xchg inc popa inc (bad) sbb dec add sbb push loop jp add push dec xor mov pop popa out add adc inc imul pop pop mov andl js dec test push push xor outsl adc pop jb pop or or jmp mov (bad) or cmpps jle cmp nop pop mov sete mov pop cmp add inc cmp pop and mov js add sarl and adc dec cmp and pop ljmp sbb dec inc sbb mull fdivr sbb add jns incl aam fsts cld neg jmp cmp jle loopne mov mov jmp scas sbb stos sti mov or xchg imul clc sbb sub lcall sbb sbb inc sbb pusha sti (bad) mov or add pop push push push nop push or roll mov orb and add pop fwait dec mov ja push xchg mov add sub incb loope ljmp aaa jbe pop pushf add rcl clc xor fs inc cmp sbb dec inc into and shrb add imul jl dec sub add imul je mov inc dec inc inc or mov xor andb js inc pop inc and les inc imul (bad) stos pop es dec ret mov push dec inc cmp and inc adc xor mov daa and pop roll addl pop ret mov adc pop lcall push sti or cmp dec test test adc mov aam cmpsb imul lea jo or pop or jl lock mov lock outsb push fadd dec mov push or (bad) and push sub iret xor imul mov adc mov and adc sarb xchg push push cmp icebp push and ret cmp fistpll mov test adc fimul mov xor ja fisttpl inc out loope push sbb push cmp ss xchg inc and and sbb xchg ret add cli (bad) add ss mov add loopne xchg jae adc sub in pusha pusha or (bad) sbb pop push call adc bound rcrl push ljmp jnp xchg je les insb cmp sbb push lods or (bad) lret (bad) into push repnz xor (bad) aad jo imulb test or sub mov mov dec mov add enter subl lahf mov dec or pop rorl fist mov sub je pop mov inc dec push xlat add imul pop pushf aas cmp or nop and je inc (bad) sub mov cltd ss xor out out sbb or lock jbe lea sub cwtl jae sub inc mov fisubr mov adc or jnp cld das inc add dec mov jne adcl inc xchg sbb xor xchg mov jmp lock fcom leave push mov adc shrl mov inc pop (bad) insb push ja pop inc bound push mov adc add decb pop and cmp jae sbb mov (bad) pop mov sub daa icebp stos repz test sbb or rclb sbb aaa sarb add push xchg jo mov jb test xor add push lcall aam movb cwtl add adc or movsb sbb push add popa push mov sub jg or xchg xor (bad) add inc mov and fdivrs adc ret add dec fcompl rol std in add rclb aam pop xchg pop cli pop ret nop and push lock arpl lahf cmp incl sub push dec push rcrb cld or mov mov add dec (bad) hlt fild test test sub repnz inc xchg fidivl sub push mov mov add loopne pop lock and test and dec cmp scas pop add repz inc add mov lret cmpsl add es (bad) xor inc mov or push js in jl ja lock inc mov mov mov or repnz inc push jb mov xchg or fsubrs push fdivrs inc xlat sbb into pop mov icebp mov loopne inc fidivrl (bad) lock int3 loopne add daa xchg cmp pusha or mov loopne jmp scas or movsl mov js sub push and ficompl or mov mov mov push or icebp sbb mov adc inc or lods add adc mov cmp mov jl ja and call mov push or mov movsb es (bad) pop adc dec movsb loopne mov sub mov add pop add jge push lock jle shlb mov daa add sub push or or push pusha dec mov push shrb add test out mov cmp out add lahf mov adc call lods test je shr push jne cs push jmp shr lods rorb push repnz push mov add jne cmp mov add sbb stos add pop push push (bad) nop fidiv mov xchg test test shl inc clc (bad) or push mov mov adc or xor (bad) cmp jae rclb push mov stos ds outsb inc shr fdivrs and jb mov jle push mov add inc pusha pop fsub or pusha or sbb ja (bad) outsl fidivrl add mov push mov mov or pusha sbb (bad) push push pop jp es add jo aas mov mov adc sub mov ret ret out mov adc ret sbb jmp mov nop add lcall xchg jo push cmp jo (bad) push pop adc out adc push pop (bad) ja push dec mov cmp cmpb mov pop out invd mov pop mov push inc dec push jl (bad) lock push sahf scas pop mov add push add aas mov enter jne cltd out mov mul shr fcomps add pop popf decl cld cmp pop mov add insb fdiv jecxz adc fcomps dec mov es aam bound push add pushf pushf pushf jl add add pushf pushf pushf pushf push pop or pushf pushf pushf pushf or or adc push clc cmpsb test xor cmpl cmp and jno and ds (bad) xor cmp add mov adc ret hlt lea test lea andb lea sbb jne not mov mov add test xor std lcall jo into xor jne push push cmp nop call xor cmp xor nop cltd imul js ret outsl idivb push popf or loopne sbb mov cmp push add fnop lret and ficoml cltd jnp add and jl or or adc adc push jb nop jnp adc rorb clc sub mov add pop inc sbb mov mov jb cwtl scas and arpl add mov mov out cmp test aas xor adc rol mov lods dec pop and nop adc out add push and mov and sbb mov xchg lock push inc mov and or aas fildl cmpb pushf cwtl sub sub add push sbb push cmp lods or sub test adc js mov push mov loop pushf mov or ss (bad) shr popl mov pusha sub mov mov lahf cmp jb mov xchg push pop adc mov sbb mov ja inc and xchg imul jne and pushf xor jp cs pop sbb inc sub mov and cmp sarb scas mov fisttpll inc push mov mov and sbb mov js xchg stos lods lea (bad) adc loope (bad) xor mulb xchg jbe movsl mov mov inc jb pop cs dec push push or loopne gs and push xchg add cmp fdivrs push sbb rolb dec loopne movsb dec fnstenv dec cmp scas out mov add fistpll adc pop aam (bad) or inc les lods cmp inc (bad) aaa clc lcall cmp push dec call push inc pop pop jl sub xchg add es mov fdivr sub lods jb sub add nop lock mov xchg rorb lahf mov cmpw pcmpeqw lahf push pusha jg mov cmp je or int cmp push test bswap pop insb dec inc add insl sbb aas pusha dec push adc push (bad) lea jg cld adc leave insl fisubr xor dec mov inc mov rcrb arpl dec add sub rorl mov stos (bad) push cmpsb mov push push data16 mov nop out add or and fisubl clc mov cld insl movsl push pop inc dec pop lea or push xchg or pop mov (bad) dec add xchg cmc add inc dec adc xor cwtl nop sbb pop add jbe test mov or xchg jmp loopne addr16 les nop inc lret mulb adc or shl loopne pop adc sbb add jmp ret sbb dec gs xor adc sub pop sbb and mov or (bad) repnz rol or add gs inc data16 cwtl and je jbe nop push test cmp add or negl push dec mov movsl push mov inc pop mov mov movsb mov pop xor std mov ss or push cltd cwtl or imul push mov (bad) jbe adc xchg mov icebp cmp lret adc dec cmp sub push cld jbe test mov sub mov cmp pop mov cmc pop mov (bad) cmp stos pop mov jp push addr16 mov arpl mov (bad) mov fstps or lahf mov fildl mov cmpsl push (bad) jnp lock addr16 mov push dec nop lock movsb pusha ja push mov mov out enter addl adc cmpsb dec adc fmuls mov xchg and stc nop popa xor push jle cmpsb pop or xor pop dec fs pushf repnz inc sub ss add push and xchg jg xchg and cmp test and nop imul (bad) dec or repz cmp xor les inc es cmc or cmp and jmp fmul xor jns mov loop test in and jns,pn push sbb and or addb jge add lea sbb pop dec inc add loopnew fdivrs sbb or inc rorb outsb jne sub push push add pop sub sbb xor outsb data16 call xchg ficom mov fs aaa adc adc pop (bad) push sbb or xchg sub add scas sub pop mov cmpsl add movzbw outsl push cli test mov stc cmp pop nop fld std clc inc adc std inc and div mov inc pinsrw add cmc sub jnp jo incb les add mov cmp mov mov lea bound push dec out lock insb scas jno xchg mov push and imul push push cmp add mov dec mov ds mov aas lock push fcoms mov or stos sbb or sahf adc loopne lods or int cmp (bad) dec lds aaa pop adc add add pusha mov dec sub lea push pop pop test mov push int3 (bad) add ret mov jbe dec inc es xor inc mov dec or jmp cmp or subl sbb cmp imulb fmull pop jp xor js xchg inc loop push mov xor (bad) pop xchg xor cmp mov inc jmp xor mov lahf jno call cmc lods or es or addr16 or into push or dec mov rorl aaa (bad) lock fist pusha addl mov xlat test push shrl stc mov jl xor fidiv stos pop rcrb jl,pt aam mov and frstor adc testl pop ss lock jo push inc and add inc push mov push jge jno or lock dec clc ret cmp xchg test xchg add gs inc and ret (bad) sahf ret cmpl sbb les shr cmp jle jne outsb aam mov mov sub and int3 xchg inc or out xor sbb adc stc adc data16 cmc sar xchg push add orb add or jle jge mov xorl sub cmp xchg popl and in repz rclb and mov add push and pop mov cs jg mov inc sti pop jmp lock sub adc and dec xor dec inc cmpsl pop xchg sarl (bad) out dec jp mov std fadds and add rolb pop loopne test lahf mov addr16 in into cmpsl (bad) add ljmp cli movsl aas lock push mov std push pop mov cmp imul adc dec xor cmp mov sub pop push andl (bad) push lea cmpxchg icebp add lods and loopne into in rorb movd xchg adc fsubr sarb push pushf mov sub xor enter jmp mov add ret dec shr add ror jg ror push loope mov add leave mov jg add movl lcall movl pop jo std or (bad) cmp das fisttpll mov xor add pop leave xchg fstpl jl test jge lcall inc mov pop fcmove mov xchg push decl lock js in test mov xchg movsb push adc adc adc push ret in insb dec fsubrl pop add and je (bad) cmp cwtl fild idiv lods sahf lret daa push je mov jbe jo adcl out scas cmpsl fisttpl outsl and test xchg cmove mov mov push cmp jae int3 jb dec in inc mov sti push pop or inc imul mov add xor xchg pop jl lock in dec lods cmpsl mov xchg xor (bad) fisubr mov pop sbb mov and insb cmp mov jne in out adc jae pushf mov mov and sbb nop push xchg cmp add scas dec add sbb mov mov jle dec inc adc fstps dec sbb xchg ret sbb inc lahf repz push adc ret inc xor dec adc push sbb out sbb pusha imul les std jle inc test mov push mov or push mov clc cmp mov pop jg xchg leave xor mov mov add lock mov hlt xchg lret jmp stos xchg (bad) or pusha pop mov lea dec xlat lret fsubrs mov lcall adc in adc xor push popa mov test daa orl xchg xor sbb in lea add mov xchg or mov or or imul in add add pop pop push sub push arpl mov add xor push lds add pop lea sub xchg push jb mov fldl inc add jns ret bnd inc enter mov sarb popf jmp scas push test (bad) pop lods loopne inc push inc push inc sub and push cld movsl pusha sub adc xchg adc das repz xor jo sbb sub dec sbb pop sub int3 daa cmpb movsl cmp lock repz bound adc xchg inc inc dec popa cmp arpl xor sub pop shl push jp push sti sub push sbb lock mov (bad) (bad) jg std outsl mov push push cmpl sub lock mov pop xor (bad) ljmp dec or pop fs fdivrs push pop cmp or add mov add adc xor mov daa movl add sub imul dec push pop xlat push outsb clc mov cs sbb push fidivl adc hlt movsb push sub (bad) out dec dec xlat or mov jae xchg and (bad) icebp jmp movsb pop frstor pop adc jns mov (bad) pop or sbb aad pop js pop pop inc fildll or push outsl lods neg pop sbb inc or rcrb add mov pop xor pop jno in xchg je sbb sub cmp or cmp xor dec and js lods loop loop mov adc and ret jge push fimull sbb adc mov sbb xor xchg mov add ret iret shlb outsb add js movb push inc add fsubrl pusha add pop rorb (bad) xlat inc loop xor cmp mov pusha (bad) push and and mov mov adc push push aaa xor ret push (bad) (bad) outsb pop pop or adc xchg and pushf add xor inc sub xchg (bad) inc push xor movl popa (bad) pop xchg or (bad) je or or add jmp inc inc mov imul sti mov arpl fcos loopne les xor dec xor pop dec jno and add test int jno inc mov adc pop and pop or sbb xor mov mov loope mov (bad) (bad) hlt repz aaa pusha mov fsubr adc lods (bad) adc dec jo gs test insl mov and aas adc testb lcall enter adc inc add or xchg movzbl lea or ja and or inc and pop addl xchg cmpsl push inc in ret mov jmp and cmpb and pop cld fs pusha jo jg and push jno add push push xchg add ss or or pop test xor ficomp lock or js or inc incb pop clc je lcall mov popa pop pop leave ja add jg daa mov daa push inc rorl add and movsb inc mov cmp rorl insl sahf or lock sub dec arpl loopne stos and mov adc dec (bad) dec pop in fistl cmp stos push loopne popa jae add jecxz in inc push nop sbb mov push out es push inc mov jmp ud2 fiadd int3 sar xchg xchg loopne add cmp add push idivb push movsl and scas data16 sbb shlb mov sbbl xchg loope inc push pop cmp jae loopne rorb movsb adc sbb ret dec jb fdivrp inc mov jns sbb push pop sub in cmp incl push lea fistpl aam jmp call inc or mov hlt inc ret lcall js btl inc xchg lock jg and push pop es add cmp cmp adc sbb les or pop mov jecxz push mov push popa ret push mov push or outsb aas mov pop movsl pop xchg pop cmp into dec jo (bad) cwtl sti les mov pop shll out inc sahf inc movsb mov sbb push adc pop pop xchg movsb jo call or cltd push mov push (bad) adc sahf mov or shl or popf in test or cmp adc movsb add mov or sbb cmp or sbb xchg cmp add push movsb sub ds or mov add pop repnz and outsl fldl inc sarl and mov js fbstp adc mov roll adc fcomps inc ds mov sti or jmp inc ja bound mov sub add add sub sub cld push es les jae pop hlt jb add mov and fnstenv and hlt (bad) adc ljmp ja aas loope adc ja push mov lock pop xchg fstl inc rcr mov (bad) jmp inc jmp addl (bad) cmp add xchg pop pop push hlt andb sub mov lahf lea mov xchg rclb cmp popa dec dec inc (bad) out es cmp in sbb inc adc cmp or cmp int sub jne mov mov push and cwtl notb (bad) xor pop pop push add add adc insl pushf mov mov push jno sarl int or inc dec jl sbb nop nop loop test and repz adc adc pusha dec xchg xor jg xor cmp loope subl scas loope push xchg push insl ss xchg lock je ss out mov clc jb hlt int or pusha mov jb jo push (bad) or ljmp das jae add mov cmp jp add sub roll (bad) sub sub inc mov mov sbb jmp cmp xchg orl fsubs dec inc fsts popf std cltd jecxz insl or pusha jmp cwtl push je pop push rolb cmc or (bad) cmp cmc mov adc loop movsl adc fcmovnb dec fistl pop bound push dec add xchg cmp in cli push arpl ds (bad) jmp lds sbb mov dec lock mov mov add test dec imul testl or lock pusha adc aam push add push pop rcrl and out push icebp mov adc outsl mov scas scas inc addb and dec dec hlt movb ret mov or sbb push repz sarl divb and decl adc add les adc cmp data16 and stos bound out das ds mov aam (bad) lea sbb (bad) mov xchg pop xor add xor test adc push or pop xchg fcoms (bad) sub in dec test loop jne push js addl jmp cmp (bad) add sbb push and cli in jne outsb dec jne ljmp dec inc aaa sub or (bad) lods loopne xchg pop pop cs add and movsb mov je insb mulb and pop fldt and lahf mov mov in adc ret push (bad) imul cmp xorl mov (bad) push btc in cld les sbb les in adc stos push add scas or pop (bad) fadds add adc inc lods daa xchg shrb push mov dec pop pusha (bad) jbe or movsb and cmpsb mov mov fs out idiv xchg jne clc xchg xor adc inc js loopne adc sub movsl rclb rorb push cmpb insl rcr mov add and add enter xchg or aas out popf jge nop nop unpcklps hlt and mov sbb push add add fldcw int3 aaa add test add lret inc xor cmp mov or push fs push dec std xchg jns cmp outsb mov mov out sahf out call sahf out sahf lock hlt clc clc cld sbb pop jp xchg add jns (bad) xor (bad) jmp outsb push loop rorb sbb pop sti and cwtl inc pusha and or pop and stc adc cld out sbb (bad) int3 xchg daa stc sub pop pop mov and push xor push jbe sbb jl add out add xchg push mov inc cs push add (bad) dec dec addr16 pop sub push add sahf ja fdivs loopne mov clc cmp sbb iret repz push sbb adc cmp repz adc or adc add loop fidiv sahf sub xor pop push xor mov outsb push and daa or push aas jecxz sub lods mov add gs push inc mov imul mov jnp xor xchg or or jg jns xor pop insb add outsl negl push push mov and rorb jl or fnsave nop lea shlb fdivs inc and jo adc xchg and clc int push (bad) hlt sub cmp jb outsl or rol cmp mov (bad) in push push add sub int3 test xlat sbb fsub cmpsb into mov xchg mov (bad) fidiv cmpsb push adc in mov lods xor jb push cmpl je add test fcoml adc sti cwtl mov inc loop ret fs pop clc mov add cltd inc xchg or mov jnp dec test sbb xchg inc test add jne idiv ret sbb adc sbb add jnp and mov xor in lret xor loopne data16 jb lods adc scas or jbe push jge xor jae xchg dec add jmp mov push icebp orb daa xchg stos cld sub dec adc fidiv push loope mov add adcb aam mov inc push jmp mov inc cmp or pop das (bad) pop jge dec jo add and test inc or aam movsb jmp cwtl insl js mov dec ss jae and je dec pop sbb ret es add out ja jl mov and fdivrp jmp add sbb xorl push jbe xchg ret cs call jecxz lods dec mov mov sub ret cmp fiaddl cld push add lock aaa pop adc les inc mov mov lret dec or (bad) and push scas or rcll pop faddl push inc (bad) div inc (bad) (bad) xor jo movsb andl pop ljmp mov add mov in push pop scas in mov adc sbb cs or inc rclb enter xchg ret out pminub mov sub pusha xchg pop lods scas jmp inc or mov popl fistpl mov cmp insl cld mov jmp and mov sbbl jno inc push or xor decb clc rorl add loopne mov pop dec inc inc add cmp mov fs aam mov movsb push inc xor lret jmp lds sbb or pop ja test lahf dec or into cltd mov adc lret add or jbe jns std arpl test or inc addl push jno add xor xchg out add loopne stos cs (bad) lea pop or cmp inc mov pop fcomps test fsubrs mov and xor dec jp jbe add sahf enter loope or cli rcrb mov (bad) movl aam inc daa pop aam enter sub push mov mov mov enter mov lcall std data16 xor inc and inc jmp mov aas shr push and jo or add lret gs scas and jne add sbb pop popa add push add aam sbb arpl imul movsb loopne pop fidivrl pop les shrb rorl sub ja adcl imul add cmp test mov jge cmp add (bad) inc or cli lock jp inc mov sbb cmp ja insl jmp sbb test rolb cmp mov xlat movb mov add movsb imul push jp repnz in in negl fisttpll cmp adc sub dec stc dec add mov pop adc js icebp mov sarb jmp rcrb dec (bad) mov add call push stos iret hlt test inc pop mov ljmp xlat push push push adc and les mov leave aas and xor push push and and nop or sbbb andb pop dec pop iret cmp xchg daa push adc sahf out cmp and hlt in in pop add cmp xor push dec push push sub int3 and xchg rolb push and adc sbb pop mov mov pop push pop repz addb nop (bad) repz cwtl mov push or push sbbb into in and pop in pop cmc pop mov mov add cltd xor clc pop daa cld sub add or mov fimul scas adc adc popl push mov dec and add add (bad) fimul add (bad) hlt stos jno push mov rep and pop insb pop testb js testb arpl adc adc mov or (bad) adc enter inc xor push add loope push or neg mov cmp fs add loope rcrl ss mov jg push add (bad) mov rorb call mov adc dec jmp mov jb jbe xchg dec sub pop ja sbb nop dec iret sbb adc inc test jnp clc je rep mov dec ljmp jmp (bad) clc sub mov and sbb jle les clc pop mov mov pop xchg xchg ret sub repz jmp cld xor call push push movb popf sbb ret jmp add inc pushf mov scas addl js add cmp mov pop je (bad) cld adc dec and stos out mov adc or and fs ret adc andb sub xchg or clc sub pop adc cmc sbbl dec add (bad) je (bad) xor push pop sarl les call mov std mov inc fistl jp jns dec cld mov push clc add lret (bad) or dec jne ret add les sub lea or pushf ficoml arpl das movsl mov cmpl mov adc xchg sbb cs and pop cli add cld jnp dec jno shrb and imull jne mov daa xor jo in lods jbe cmpsl xor mov scas aaa je xor xchg inc mov mov mov loop xchg pop adc push (bad) std movb pop jmp sub sub std add in and push clc push push push pop push and fldl dec test xchg mov mov cmp push or dec dec lock adc hlt mov popa rcll inc dec lahf add add mov add daa pop dec xchg xor fwait dec xchg out mov jge stos repz and stos hlt mov push cmp adc out dec or jl jne adc js push or insb mov push mov or dec shr loope (bad) push push in push cld xor in nop add mov fistl mov add loop out fstpl xor jmp test push ds add jne fchs jmp test inc adc (bad) test fld fucomp fnstsw fstp adc insb fdivrl subl sub jecxz ss add loop and inc (bad) jno popa and (bad) hlt lock xor jle sub cmp xor push xor sbb push cmp repz push cld jne mov push cmp jne (bad) es (bad) jne call aam and mov sbb jb jmp sahf lahf divl dec (bad) jmp adc (bad) jmp std sub jns std jmp cld cld jmp (bad) iret lcall rorb push cmc or jb or insb dec dec mov mov and test adc js adc inc adc mov xchg add test xor and push jne mov cmp dec cmp mov daa mov inc add ja fmuls add add (bad) hlt adc jb cmp add clc jecxz fwait in cmpl mov mov nop sbb ret inc xchg push aam and stos test sar jle sbb push pop fdivr or sbb roll mov in cmp mov pop add jo mov jmp ret mov or lock mov inc popa sub jge jbe insl and lcall jnp cmpsb adc ror into mov mov or lahf mov and add sbb xchg push imul mov jns sbb xchg ret sbb pusha imul fisub xchg jb lahf (bad) mov mov pop pop scas inc push and push (bad) jmp mov pop fs mov jne int jl inc notb and add rolb xchg movl sub pop movb adc dec push sti pop or push dec lret push or jae aas adc pop sbb setge mov and frstor sbb jmp ficomp iret imul lock or (bad) and add ret loopne adc out (bad) sbb loope add sar testb jne push sbb test testb je popa lods rcrb in mov lcall xor dec add or loop test sub push jmp std push and push insb mov push dec jp pop mov inc add or movb cs mov cmp jne mov pop push mov jmp add mov or bswap test in xchg xor cmp add lret leave jb call loopne adc add es loopne adc mov test mov movsb lock decl cmp jne dec sbb jmp add push daa add fwait rolb sbb adc daa add and repz push sub push xor or push std mov cmp lods cmp and add movsb adc and sbb add mov dec rorb pop add xor mov mov mov incl or mov jmp and dec lahf xorb inc fdivr sbb adc mov fsubp jl dec adc sbb int3 dec ret jb jne push clc jbe add jne or movsl and dec test jne sub or pop adc pop jmp pusha or add insb std mov sbb fs or mov ja shrb movsb lock (bad) jbe jge mov out cmc pop cld xor add pop bound adc loop stos or mull pop add sub jmp inc xor sub jo bound mov mov pop push jo outsl inc (bad) jmp push leave adc arpl add nop (bad) xor incl cs out mov adc clc lahf jne xor lock sub or add jecxz push adc loopne push rorl xor xchg jmp iretw xor cli mov jp push rol push (bad) xchg loop inc jne add insb inc cld cmp je ret mov daa push out iret xor and faddl mov jmp pop addr16 (bad) outsb or xor movsb mov dec out rolb sub mov lret mov and and sub mov stos adc jg cmp mov inc scas xor pop pop pop sbb pusha std add inc sbb add add dec and cmp sbb in push sub call push in and push xor or inc cwtl adc add rol push shrl out dec je pop test (bad) testb push mov xchg push add jl push push cltd stos or mov rcrb fimul sub xor and adc pop cmpsl jo out pop sub dec pop nop push add addl or adc mov add pop and out pop xor jge mov or mov daa es test pop or mov lods xchg xor sbb clc js mov je mov into adc mov dec mov out testb mov stos add inc adc cmpb jne inc pop jo add cmc data16 jmp ret cltd test js push sub adc daa xchg and push outsb sub and int3 dec sub jo stos add sar rorb repz and jmp jns add and aas clc cltd jo or or fadds cmp add bound not ret dec int3 jmp arpl imul in mov pop cmpsb ja test je test ja movsb sbb jmp add movsl push sub pushf mov xchg or mov sub mov cmp das xor addb clc test jne fwait andl add push inc cmp push test repnz pop hlt movsl dec out cltd insb pop xor jmp test sub adc test push test add sbb (bad) (bad) dec xor loope and cltd loopne mov xchg cmp movsb jo rcll pushf sbb jne incl adc push mov cmp push sub or cmp cmp jae or jae shrd shr xor loopne sub and shr (bad) popa push adc lret push or aas out push aam loop stos pop (bad) jmp or mov add cmp pop test sbb arpl lods (bad) push out jb aam mov je nop (bad) imul icebp imul inc insb adc test jns jae sub mov push in xchg test push icebp iret setp pop mov lret pushl push mov sub addr16 les cmpsb ud1 pop jmp lds pop mov pop adc or pop and pop sbbb xchg sbb lds lock push mov loopne aad cli sbb jge mov mov cmp mulb mov je lea ss popa xchg lret mov xor cmp cmp (bad) push push xor push cmpsl or sub add push fimull xor cmpsb lock ljmp sbb rcl jl popf pushl leave add or cwtl jo aas jo call pop cltd sbb push in and push push pop or jns and add fwait jae xorl add jno,pt jmp pop or lods cmc addl xchg mov push push aaa sbb adcl inc cmp sbb adc mov icebp sub sub inc push lcall loope (bad) jge jno add push push fstpt mov xor push mov xor sbb bound add sbb dec lret sub popa lcall pop inc xor push rclb mov and shl sbb rorl mov dec add pusha nop rclb and jl pop movsb (bad) out sbb add mov gs pop imul std pop mov cmp cmc jmp rcll dec orl mov in and mov xchg jb xchg adc push fwait adcb push pop ljmp pop inc lds push gs pop imul inc mov pusha (bad) jg rcl cwtl lea push or movsl stc loopne addr16 mov add pop (bad) push fs xchg loopne rcrb lahf test jmp inc and cmp je pop aam out adc push sub out cmp sub xchg sbb (bad) cli and loop add imul inc dec shll loopne loope div sub sarl add sar dec xor and inc lret push adc out clc sub mov mov (bad) cmpsb pop mov pusha xor add mov fwait or pop pusha mov decl mov jbe in or add mov add add sub jmp cmc push pop lcall push mov inc pop jg inc jo or inc jo push inc cmp ss sub or sub pop pop cmp inc stos and je fnop sahf pop mov das dec hlt or xor jl xor addl push pop jmp scas inc adc dec pusha jge xor cmp mov sub adc iret pop rolb mov pop lea ret mov js adc incl jge cs outsl or or or sub pop pop leave divl cld add mov pop js push nop fs out or leave jmp adc dec push sub adc mov int3 mov or pop dec dec pop into fdivrs push sahf and lea (bad) or dec push int3 dec push xchg mov notb pusha (bad) (bad) xor xchg rorl adc xchg sarl inc hlt nop loope clc scas mov (bad) test daa test or rorl push fildl mov mov add push call aam add push dec mov push sub inc test mov js pop dec push enter jmp mov push dec inc push pop pop push inc mov dec push push xor push lea xor cmp xor push in icebp nop lock orb imull fisubrl lea inc adc push adc int3 mov das adc sahf mov jo loopne cmp les xor xor cmp test pushf cli dec call push fdivl fcmovne and movsl push cmp repnz or mov xor and jp mov cmp push imul xchg inc testl sub in xchg jb sub dec jo xchg inc xor sbb (bad) adc aas cmp out pop pop arpl repz ss adc jo rcrl stc scas test cltd dec add clc rclb push or popf jbe or clc and pop and int jmp push sub sti jbe (bad) in mov mov pop loop rol push push push push jne sbb add cli loope cli idivb cmp in test je mov pop rclb std xchg pusha xchg rcrl lock or lea sbb clc adc popa dec cmpb adc mov cmpb or jae fs scas ds push (bad) sbb das test add ds imul movzbl add inc call icebp jg loope adc push xor lret pop push add sarl sbb lcall or add in insb frstor pop xchg or pusha fmull pop sub insl gs clc lea lea out lock mov pop aaa dec enter xor dec orb sbb mov and mov push mov hlt insl maskmovq notl dec cmp addl aad push popfw ds addl imul push fcoms push cmp jle inc or xor (bad) mov mov andl (bad) punpcklwd mov jo clc aam roll dec les push aaa inc (bad) in jmp mov (bad) or rcll icebp pop les push rclb push cltd xor add nop dec and mov test and add xchg (bad) test fdiv (bad) into ret push mov push and inc xchg lret xchg popf mov mov sti mov shrb jo jbe sub test arpl sub or les mov inc (bad) lock sbbb mov pop jne ret fiaddl add pop mov push add scas inc xor xor mov pop ret mov adc rclb outsb int outsb push or and add (bad) pop push jno pop jo xchg push add and adc sub in loopne lret andl cmc sub sbb inc mov push dec and lock das adc outsl je mov push jne xchg sbb mov or push sbb mov add (bad) pop pushl cmp jne mov adc in sbb mov inc sbb and les add cmpsb cmp pop popa jmp loopne or pop lock test pop jmp popf fs adc lret (bad) cwtl push cltd jo add inc sub sbb inc push xor push clc mov dec inc daa and pop inc arpl (bad) cmovs loopne push or (bad) fnop jmp xchg dec push xchg (bad) out or adc or dec cmp ret cmp jnp mov push and xchg adc xlat pop repnz das lahf xchg hlt push mov insl inc test sbb sub std rol lods aas lret dec ret push ss inc dec pop inc leave in xchg push test imul mov es (bad) jmp ss gs jle mov negb push add test out cwtl adc je push cmp push pusha adc ret repz test xor mov dec pop int3 push cmp mov mov fsubs lods push adc dec sbb adc push insl movsl outsl mov jne inc pop pop push gs add pusha jp popf sbb mov sbb or loopne test push adc sub mov adc inc fdivr jmp push clc fimul add decl adc mov inc xchg hlt and dec je dec into fdivrs or pop or add and andl sub push mov xchg push aas jg,pn or adc fmuls adc push or dec insl inc in mov jae cmp sbb sbb xchg mov ficomp mov xor sti mov jo rorl rclb subb cltd in outsl add mov cmp mov adc or rorb mov add adc xchg adc add lods xlat in push adc xor ret in notb adc xchg or mov xor out mov ret (bad) iret sbb cmp aaa testb adc and lahf ret mov adc cmp cmpl add push inc dec outsb loop xor and pop in jnp into pop push or mov (bad) sub inc (bad) imul fdiv fistpl (bad) leave adc fmul xlat jns call pop popf into push pop adc int3 or sarl inc (bad) sti sarb hlt (bad) adc sub dec adcl push hlt dec inc jno mov mov mov or mov bound dec arpl add inc pushf popa rcrl mov inc mulb es in pop sbb in pusha add add add stos adc mov inc aas inc cmp int push call inc xchg ret add push enter pop or add (bad) dec aam cmp sbb cmpsl jmp jle inc cmp cli or pop insb gs xor sahf mov xlat nop in xchg jecxz pusha pop rcll add icebp push pop into dec pop lock push divl and dec add or mov mov addr16 inc cs pop arpl pusha or loopne lret push lret add test push in (bad) sbb sbb jns push mov pop dec mov inc ret loopne add notb add xchg leave or (bad) dec arpl push push or (bad) das test push (bad) (bad) aad mov out test mov into inc add ja cmp jne imul pop xor xchg js je loop loop pop dec addr16 push add and in pushf movsb dec xchg lret inc lods ret add into orl (bad) push pusha pop cmp push mov dec popa mov or xchg sti adcb adc inc xor enter adc or jb imul xor add pop pop mov sbb pop dec pop imul sarb or mov bound lcall jne hlt xchg mov jg scas inc sbb adc xor xchg rorl (bad) sub out rclw nop jmp aam xchg push icebp lock aad lea adc test ret add xor mov pop and mov pusha fidiv inc push add or test pop mov or cmp inc cmpb inc inc loopne cmp cmp mov sub mov mov pusha lret sbb mov cmp adc fsub mov cmpl mov pop lret imul cmp (bad) ljmp loop jl xor cmpsl and sub cmpl ret (bad) mov out pop push ds ret adc out sbb into (bad) addr16 into sbb add sub in or push in loope test ds jne fbld or add push cmp imul push and and inc mov mov leave inc mov or fiaddl xchg sub inc jb call sub pop or jecxz sbb test push mov rcrb xor fisttp pop out xorb cwtl int3 sub lock (bad) fs add push fwait and dec test push js,pn inc lcall cs xchg mov mov clc jne pop movsl mov lret shrb add pop jle add dec lret jp sbb cli lea jmp movsb mov push push push add adc inc (bad) jmp jge addl fadds fwait arpl cltd add jl inc adc jo lods jmp mov push loope lret xor popf xchg and xor xor cmp call ret xchg xchg mov sub mov jae pusha flds add jbe int imul pop stos cmp fdivrs mov aaa cmpsl jno sbb pop aam loope fmuls dec dec out sbb push fiaddl (bad) mov jp lock mov sub mov sbbl dec pusha or mov ss sbb mov je push sbb push sub inc jg sub mov cmp dec sbb cmp or pusha and lret imul shl inc outsb stc pop (bad) pop mov mov rolb jno inc cmpl xchg cmp call cmp (bad) xor jne test ffree lods xlat repz mov pop jno inc cmpsl movsl fadd add pusha dec sbb dec mov push cmp rorl pop push int3 or test repnz stos aam jbe ds or push int3 inc or jno ja insl fcmovnb cmpsb repnz es ret cmp fdivrs jo add rclb pop jbe xchg add dec insl stos (bad) cltd dec sbb pop movsl adc pop test gs xchg jl jmp cmp mov cltd je and cs xchg sbb jmp sbb mov push sub iret sbb testb add add dec lea push test xor call fucomi inc xchg repnz jl inc or adc adc xchg mov leave push sub pop jo test fadds mov and sbb add add cmp push adc andps test mov push sub and sbb add cmpsl xchg jne rcrb les dec xchg xchg inc sbb int3 jne ds cmp mov pop sysenter mov loope push loopne mov rolb jge daa sub je aam les mov adc into lds inc les adc dec hlt xchg pop mov in cmp push nop loope std cmp jae fsts mov hlt cmp jl cmp jg mov xor push hlt lret jp push call push sub add and add xchg or out push cmp das (bad) ficoml jmp adc jb pop jns cmp xor mov inc subb cmp add or mov sub mov pop cmp ret and and stos mov cmc pop mov adc or push nop mov add adc imul leave and push or sub push or sbb jne pop add movups fisttpl or (bad) or mov lock lods and and mov push int call (bad) jle mov adc pop clc ss pop push xor inc repnz or cmp jne xchg mov add dec pop (bad) or cwtl mov jae sahf shr test inc mov add adc adc sbb mov xchg test stos or lock in inc js mov inc lock or (bad) xor in dec hlt adc pop xchg call push xchg pop shrl in mov and add idivb faddl dec out cld add dec jg adc orl call adc push movsb fadd mov mov aam in lock add orb jb (bad) jge jl sbb jmp mov and pushf and xchg cwtl enter mov scas or push adc sub sarl dec scas xchg inc bound xor jl or jp cmpsl adc fcoms jbe inc lret pop mov stc pop les push sub push insb and add ja pop pop leave lea mov add pop fdivrs sbb cwtl arpl pop mov jg sub cmp mov and inc or inc and inc sbb or cmp dec lock movsl out push daa movsb loopne jge push jmp arpl pusha out jle sbbl je cmp jne cli add cmp jbe jg xor jo or sbb pop add push jbe out insb lods and pop das xor (bad) push scas cmp jae imul sub xchg (bad) les jle das inc or or jl jne jg or inc imul push push outsb xor in sbb aam dec ret cmpl pusha or push ret lock mov mov mov mov sbb stos cld rorl push add mov inc mov loopne dec data16 stos ret mov ret push and pop repz inc add jbe xchg cmp orb push dec cmp pop sahf jo pop or jmp mov test or jl pcmpeqb je shr or and push jbe enter lea sbb jmp dec inc nop sbb aas or jmp bound lods iret repz lret data16 xchg sbb inc aaa mov jae dec sbb push mov add mov xor mov pop cvtdq2ps mov cmpsb mov push mov pop add push cmp add mov jnp mov add in sub lea rorl call add jmp cltd mov das scas push pop push or orl xchg dec test mov mov pop test push jbe clc adc xchg pop call iret cmp push mov andl fcomps and sbbb pop push mov imul in cmp or jnp dec jbe (bad) xchg push enter js sahf push fadds lea push inc es mov lock jmp pushl pusha aaa push cmp push (bad) push sub dec iret aad adc fcomi lret rcrb lods fbstp mov pop mov pop sub inc push push mov lea mulb mov pop and ret mov mov xchg xchg jne outsl and xor and mov add sbb rcrl idivb std or push jb fadds sbb and xchg hlt movb cmp sbb add test xchg sub scas dec fs jp adc lahf inc or jge add xor (bad) stos push fwait xchg inc cltd testl sbb jo imul lret or ret or bound ljmp sbb ljmp stos sbb imul lcall push or jle lret xchg insb in test push xchg aas leave pop gs dec push fisttpl xchg dec pop push pop test sarl pop mov mov adc dec sbb cmpsl aad out sbb and shr push mov je repz pop arpl sub and ds and pop aam leave test mov push sbb cli dec aaa imul mov jbe (bad) ret mov inc shr xor adc xbegin pop inc lods mov sbb cmp jle xor pushf jbe or jle jecxz loopne mov mov (bad) pop inc cmp lds and lea jl jg add fs push xor pop div inc lea gs mov jmp cmp xchg inc add faddl jge add les movsl or dec mov sub sbb push sub xor jmp pop add call lcall mov lds fisubr add stos cmp fcmove push mov fsubr lds call (bad) loopne and xchg mov dec sbb cltd test jmp pop mull adc inc inc sbb push or sarb jp add jne js sti push pop hlt rorb or or insb arpl sti and (bad) jl sbb push lcall adc pop aam orps adc fwait fs pop push inc jecxz jmp cmpsl sti and jno ja in jne push popf mov xor jo dec xchg cwtl lods cmp dec jle push outsb out push dec mov nop inc mov cwtl dec mov mov sbb or add mov outsl or cmp and in lea xorb pusha (bad) adc push ret repnz popa dec xlat cmp push mov inc or inc imul dec adc push xor add loop call dec sub cli cmp fcomps or sub xor jo mov or sbb mov js inc dec pop jne incb xchg (bad) or hlt or popl sub push in js cli push fadds mov or inc adc repnz adc or fstl or or inc push sbbl or add push add mov jb dec jo jb pop jbe cmp adc push cmp lods cmp adc clc or mov fldt push mov push add add faddp out and or add pop in ss and push pusha jecxz pop movsl inc mov mov add je push ret scas xchg je xchg repz sar sbbl push inc repnz mov or lahf test jmp fbld add mov aam push mov and push pusha mov push and mov lds cmp push jne lret insl (bad) pop aad lret sbb adc test jmp adc cwtl inc mov hlt adc mov icebp or je pushf aas movsl xchg mov pop jae aam sub and xor clc sub adc dec add jg add add xlat or jb mov sbb rcrl fsub sbbb ds mov shrl pushl pop lcall adc lret data16 jae cmp inc or pushf push rcr (bad) adc sub mov stos (bad) xor add clc loopne and add fldenv and (bad) test inc push inc cmp mov push sbb xchg arpl stos xchg mov pop jbe mov shrb cs fs daa mul (bad) iret inc sbb or roll ret push test pop jo fidivr fimul cmp aam xor clc add imul adc or les jo icebp mov xlat in loope cwtl insb adc mov pusha (bad) jmp mov or sbb fild lret mov movsl adcl inc shrb sahf dec push cmp mov or pop xchg pop rcll inc inc cmp in or mov xlat cmp (bad) sub pop les stos mov cmpsb pop jmp mov add add or cld push orl sub sub pop mov jo (bad) or mov cmpsb mov test or mov xlat adc pop pop push push jg add lock inc and xor inc test shll push mov (bad) adc push out mov xlat mov aam add adc push addr16 pop inc sbb or inc and lahf icebp sub adc cmpb push nop rcrb or mov push data16 mov or add pop dec pop imul sbb pop test inc inc loopew sahf mov (bad) mov cld shlb push inc mov les aam jo test mov and adc add and pop clc mov mov xchg inc mov jl sbb (bad) jp out mov ljmp dec mov mov jbe adc rcrl mov or jle push enter outsb fmuls inc dec sbb or mov ret dec mov and add hlt jbe mov hlt xchg mov and jo movsb pop in add sarb les mov mov mov adc jno mull mov cmp cmp jnp rcrl jo movsb push lea jno lret adc test pop sub or jmp adc pop sti leave push aaa and jmp aam pop xchg cld fmul lock add jns into lahf sti rolb je jno lods inc popf movsl loopne cvtps2pd xchg popa cmp push mov mov cmpl movsb in xor pop sbb insb out or lock mov or cmp mov dec jle cltd lret iretw mov and nop loope mov insl lcall inc add cmpsb in out pop adc push pop mov or loopne outsb aas push rcrb push push dec test int3 jle outsl jbe sar or rorb and push push cmpsl call dec ret cmp pop add dec or cmp fwait push test push mov nop cli jmp mov dec xor push mov mov fucomi sar mov sub push jne mov aam inc dec or xchg test rorb divl mov or lea mov mov sub lcall add add cmp xlat jmp xor movsb push mov outsb inc sar and mov loopne mov es xor pop mov xchg fisub mov and lods dec mov cmp cmp test pop add jmp push adc in add mov push push ret inc and into (bad) call das clc pusha (bad) stos mov clc sub dec roll les adc mov (bad) lahf sbb (bad) and mov lods mov mov stc in add add dec xor insl inc movsl pop adc mov (bad) in imul mov jmp insl inc add daa ret fild mov jbe adcl or loop stos lods jecxz dec sbb mov imul xchg cld movsb xor subb popa faddl (bad) icebp dec inc jnp lahf or jmp or and dec sub sbb xchg jo mov test or sub adc xor fisubrl jno push btr mov jecxz divl mov sbb ss mov inc repnz insb and mov sub mov pop aad adc nop push rcrl jo sbb std cmp cmpsl push mov xchg imul xor or mov inc rorb mov outsb out bound mov mov push adc je sbb mov and push cmp sbb jne (bad) je insl xor inc pusha push ds mov jl popa lret jbe out cmp push and insb push xchg sbb and cld mov mov es pusha or xchg ss addb lea dec add lea jo sti sbb js adc push add pushf mov or lret in pushf movsl or (bad) int3 cmc mov xchg aam pop jne cs lret negl loopne in in lock mov clc push fwait movsl fstpl and add xchg pop cmp scas inc or inc sub fs sarl test lret pop adc sti add das add dec imul sbb add sub add or lea sbb fsubrl or xor dec inc mov mov adc clc inc movhps push (bad) cltd xchg adc sahf cs mov mov pop mov xchg test out mov test push es pop lock movl lods inc ret stos push adc xor lret enter push push call mov (bad) in adc icebp xchg add xchg out pushf loope jl ss je mov lock dec jo jp movsb rclb or sub lcall push and loop lret adc xor repz aam call mov (bad) sub jo pop adc push mov daa pop imul inc mov stos dec lret push mov push mov xor aaa fiaddl loope add xchg and xor lcall retw xchg inc bswap or xor push in and aas movsb push inc (bad) jne mov xor jge dec jmp push cli and scas add aaa call sub pushl movb (bad) mov dec push push or cmpsb pop mov sub (bad) pop out cmp lea add mov pop sbb fimull xor inc xor shr fisub stc and adc push or aad xor insl outsb mov je hlt gs push dec into data16 call push add scas mov loope or movsl icebp adc cli mov lret icebp inc mov and jl xor sub and xchg sbb aas sbb push sub js sub inc dec sub jl lods and sbb cwtl xor data16 sbb mov (bad) and lcall sbb cwtl or xchg jle pop mov or push aaa and push loop push lea or movsl jno push dec sub sahf imul test adc insl xor das mov add mov xchg lcall loop push push lods adc sbb (bad) push lea mov jge dec and mov (bad) push insb rcrb pop loopne ljmp andl sbb xor jne popf mov xchg cmp ret std inc jl dec xchg mov jb xchg push pusha push inc or add xor subb imul or jle adc jl jne inc push rolb jl xor addr16 pop add das xlat stos mov pop shrb adc or test jns cmpb xchg inc cmpsb cmp mov inc adc aam jo mov xchg jle pop sbb and sub sub xor repnz inc out xchg fild mov mov or pop mov cmpsb pop mov jne inc pop icebp mov or xor dec jecxz push pop mov cmc dec inc loope ffreep call jae sbb shrl sbb xchg push cmp inc (bad) lds mov xchg mov out test inc pop rol cmp xor je leave jle mov push inc sub cmp addr16 jmp pop fistl mov pop jp or add pop clc sub pushf jns add fs fisubr clc push daa outsl pop call hlt sbb pop (bad) xor hlt adc aaa or push or int pop mov ja dec adc cmp mov or fwait jle xorl xorl daa notl and push sub add cmp mov mov adc sbb adcb js cmp add ljmp mov (bad) sub popa cmp lcall lret adc jl loope loopne ljmp fcomps sub orl decb enter sub xor add fmull sub add mov cmp push ret push bound adc and sub mov push jp in (bad) xor mov cwtl jge or cmp es aaa addb or sahf lcall add jbe inc je pop sbb daa inc ja popl into mov pop and mov or stos mov nop push fcoms lahf jo loope add loopne dec jo or mov lcall sub scas xlat jo rol xor xor mov mov shll or aaa cmpsl pusha pop mov mov aad mov mov xchg iret stos lea dec jns fistl bound push daa sub mov mov pop cmpsl push cmpsb adc pop sbb inc push xor (bad) jns or fstpt cmpsb mov rcrb movsb iret xchg sbb clc pop sub fldl imul mov shrb mov jg pop mov sbb mov lods test es add push imul ret adc mov pop leave or divl mov les fistl dec call cli push adc lock cmp or orb movsb (bad) fwait cmp push test les push lret cmpsb rcll jp sub idivl (bad) jbe pop jo mov aaa xchg pop scas jbe pop leave ret daa jb push cmpl or mov cltd stos mov jb pop push push je jo sub push dec data16 shll in push jb arpl push dec push adcl mov xor push jge je daa lock adc jg sub push (bad) push and popa jge xor xchg push mov jecxz push rorb push or push (bad) jg jl test push sbb push sarl fwait mov lea imul inc jb into jl add ss jne test or and test xor inc mov pop mov push cmp cmp cmp sahf loope or sbb cs cmp mov jno shrb icebp fwait icebp cmp cmp imul pusha inc (bad) cwtl je mov xor push test cmp mov (bad) loopne (bad) cld lahf nop push clc and or dec adc and or (bad) add cld cmp pusha jne push push or sub and pop loop clc cmp mov insb jle es loope lea push cmp xchg jle fimull ss jle pop pop stos xor call ret loopne andl mov flds or mov imul xor ret gs jmp das pop subl fwait js test dec or and (bad) and int add js (bad) push pop jo dec push fcomi xchg mov add leave fiaddl push movsl inc out (bad) jne pop adc add je orl ljmp add jo jbe mov pcmpeqw inc inc js orb (bad) test mov inc cmp inc mov je push inc inc sub push or xor dec push inc (bad) mov add xor js or (bad) push das inc rcrb inc test sbb popa (bad) sub je push ret push add test test mov mov pop and fldl mov js cli jg scas pop add jl mov sbb inc (bad) cwtl and push lea popf test or pusha and adc enter pop adc sbb pop sbb sbb xorb (bad) add jne scas dec sar mov dec notl lods xorl sbb dec scas mov ret fisttp mov cwtl fstl js mov xchg lods mov leave push jb insb test and mov push and mov popf inc lea cmp lea lea mov lock jb mov mov mov jmp dec mov mov push pop and xor pop sub or jl cmpsl jle out icebp pop add push shr inc mov push sub xor shr sar in in (bad) fmuls leave jne div mov mull xor out (bad) jb cmp sarb ja jb cmp add and rcrb adc mov out jnp orl arpl xchg pop push lea sub pushl out dec add cwtl xor rcll inc cltd mov mov push and mov or mov xchg xchg mov adc js and push mov je push orb cltd push addl dec push jne and leave aad clc push jne inc lea xlat xor push repz (bad) xchg inc into pop cmp push mov mov inc jo cmp inc stos nop xchg dec mov or scas or inc cmpsl cmc fdivs popa xorb xchg nop pop push jmp push loop adc out mov mov xlat or stc jp add add jle mov in inc mov imul test data16 sbb test je xor les cli and sbb (bad) fwait dec lock mov out sbb adcl add lea int and mov and iret push mov jmp dec je add pop dec jne or or inc clts mov push pop add inc pop xchg jno or sub or mov adc adc cltd or xchg add pop or push lea mov cmp hlt mov sahf fiadd adc rep lods subl daa les enter push in pop add adc adc inc (bad) ja stc cmp fs ret enter sub ret push push xchg cs mov jg loope mov mov xor orl mov push nopl icebp aaa mov adc pop dec fdivl jg mov addb enter mov imul xchg push mov mov add mov fimull add xchg xchg mov pop dec movsb adc xlat push or lret dec adcl inc dec or pop add and lock or arpl pop lea inc jmp xor fimul inc (bad) (bad) mov jo lahf or addb push push jne mov pusha push jne lea (bad) pop outsb in pop and push dec adcl repnz cld pop cwtl adc ja bound push adc cld adc mov sub mov pop mov loopne jne jmp add jmp dec mov loopne or outsl xchg ret xchg jns mov (bad) inc add es dec cmp cld cmovg iret mov int3 mov scas add jge daa loope rol enter fimul nop dec add and cltd fdivl or pushf dec stos lds or or cmp (bad) xor sub sti stc movsb test nopl dec test fs jmp insb mov sarb pop mov popf in mov punpcklwd pop lahf xchg xor mov sub jmpw xor cs adc call mov cmp loope xchg es cltd subb pop add sub adc aam loopne arpl stos pop mov fcomps leave or pop cmp add pop int or add push nop inc pop pop inc sub pop adc test mov xchg ret mov dec or test adc mov call nop out add or push cli sar loope jbe pusha clc ret adc ret cwtl movlpd vmptrld adc sbb addb xchg shl jae sub (bad) daa inc loopne push cli adc add adc (bad) jns mov mov adc add adc xor and xchg lock dec mov inc sbb roll mov outsb lret push outsb sti ror mov or neg xlat es push and push cmc sbb pop outsb mov mov lahf adc mov loop int3 sahf rol xchg idiv rcrl ret add add add jbe mov sub cmpsl pop inc mov and adc lds jae lea lds stos fcomps int aam pop iret pop rorb in movb xchg fstpl mov xchg out (bad) pop (bad) and std sub aam inc cmpb ja cmpsb ret stos movsl inc mov and mov cmp jo ficom sub into lock mov sub cmp in addr16 movsl (bad) and pop fnstenv pusha sarb (bad) add adc imul mov out jl mov inc pop sub or push push pop in jo out adc (bad) (bad) out jns or or sbb scas add add loopne mov pop je xlat push das push sarb mov pxor cmp mov inc or jns lret pop mov cmpsl sub cli push xor or jp and mov leave out mov roll movsb (bad) jnp adc pop pop mov pop pop decb pop ja xchg lret jo ffree adc or loop repz jecxz es dec and pop ret ret mov sti push sbb push lret cli shll and (bad) or test enter lea int3 (bad) fsubs test cmp add aaa pusha repz sarl in xchg flds fildl out adc (bad) push repz js ret adc pop loop insb fisubr fdivrs cmp cmp popa add and in inc in pop mov (bad) push sti or add pop jge fildl adc dec or pop jo fildl and jl mov or pop std clc clc xor (bad) cs pop fnstenv pop scas out mov call (bad) jno mov and adc int mov loop aam (bad) je aaa lods add dec push add or cmp loopne jmp js mov mov fldt shl fild mov fnop and mov add pop lret pop mov pop cmpsl mov ja leave faddl push push fdivrp xlat es cmp pop push ja addl or hlt cmpb push adc pushfw add sub jb cmpl je sbb shlb push mov imul mov xor dec mov es in ret inc aaa fcomps dec mov sahf ds rcrb adc or mov shll push jne and div aas decb mov mov dec push xor call push cmpsb mov mov cmp ret jns icebp or loope or mov mov dec les jns jae nop add (bad) xor sbb inc dec leave push in aas adc jl enter xor mov nop ret test sbb pop fistl data16 dec push out xor sbb fsubr add jb and scas dec inc push sub adc adcb jmp dec add insb popa popf add ja cmp sahf subb or push div add sub cmp icebp daa mov aad push pushf in mov jle cli enter xchg inc mov cmp sbb pop sbb add xchg imull loop jbe repz aas mov add push popl loopne cltd adc adc xor (bad) ret incb jg pop adc das fs test mov and sub clc stc shr fs rol lods or adc xchg je imul dec add push jo add (bad) mov pop out test (bad) stos mull jb jbe pop push ja leave popf outsb shll sub xchg es cmc ret (bad) (bad) scas and fwait je enter test sahf cmc add jmp push push sub cli cmpsb es fwait mov push mov lret xor add add add in shl jmp adc sbb jge push je arpl repnz ret rcrb or lret mov or xor popf inc (bad) jle loopne dec cld pop and jmp sbb push adc jns or jmp inc ss fstpl std cld cmc pushf and lahf repz test inc pop add mov hlt bts jmp in leave dec mov ret mov xor or jae loop (bad) adc mov mov mov pop loop xchg pop adc and mov or add sahf and fstcw xorl mov jg das xor iret pop fsqrt jno or jge sub mov jno inc cli mov jne gs scas and in outsb xor orl sub jmp fstp (bad) and add fistpll (bad) sbb (bad) xor lods xchg test jbe das adc or pop sarb aam fidivrl divl inc and mov sbb pop (bad) data16 jbe std les cmp je clc xchg inc pop rcr jmp mov ljmp cmpsb mov inc push pop sbb and call sbb mov rolb test dec call adc lahf (bad) mov add dec imul add (bad) dec pop adc imul pop mov xchg sbb inc loop xchg sarl adc mov imul jo adc sub add push aas ret add sbb dec mov add mov or mov inc lods loope cmp cwtl subl mov pop or enter inc mov push outsl sub dec xor sbb sub jbe add fistl popa in sub sbb (bad) mov aaa jge ja cmp sub repz push addl inc jg (bad) ja leave mov or leave into xor lret nop fidiv lahf adc je jb pushl movsl imul lock cmp lock lret fcmovu test xchg sub movb test mov arpl pusha mov mov aad test mov pop test lahf or push mov and push nop push pusha cs mov dec mov mov test test dec aam mov sub push enter add (bad) xor push push mov test mov mov (bad) push add movsl xorb cld push pushf jnp dec mov mov xor daa cmp iret mov sbb dec test std mov sbb jb or adcb test (bad) jne (bad) pusha mov pop inc shr ja cmc jp xchg or add dec or sbbl and xchg or pop mov movsbl movsl pop test mov add sbb cmp outsl mov jp mov sub dec adc gs sbb push mov xchg xchg inc and aam pop iret cmpsl adc shrb not xorb loopne loopne pop (bad) jnp data16 rcll xor pusha mov cmpsb sub sub nop hlt leave cli cmpsl decl mov jne inc adc mov divl pop lret je and aaa mov incl pop iret mov dec jmp and adc push pop aas test or lods add popf inc jmp jg add pop sub je push mov sbb movsl cmpsl jle mov push lret test call push dec out xchg fs cmpsl cmp and pop dec dec mov jo jg pop add add data16 jmp push or std sarb jne js mov loope dec push out inc jmp push xor sbbb je je ret inc imul es adc popf xchg push lock pushf dec sar adc adc shll dec sbb sbb inc je orl pop cmp fmuls add sbb daa jne or test pop aas or or adc adc fisub add and push dec dec adc mov stc xor push test lock mov in push push enter xlat and jo mov das loopne sub andl les jbe aaa mov lcall jnp add xor scas test or in sub xchg je mov or adc xor inc jno test pop or push test rorb pop insl xchg xor pop mov scas sbb dec add cmp add sub int mov andb or jg roll pop jo std inc adc icebp push fwait add sbb or or movsl inc mov add mov dec inc sbb and fcomps (bad) add mov iret imul ljmp mov inc mov pshufw bound dec lret add adc es cmp imul add or xor jle adc or ljmp (bad) rorl xor push inc xchg aas pusha lret ljmp imul and or xchg dec add or add dec inc sub xlat and movsbl test cmpl mov push sbb pop pusha out add add or je leave rcr stos or int3 push and mov loope mov ret (bad) aaa xchg adc je (bad) mov push jbe cmp ljmp aaa movsl int xchg cltd imul shrl movsb dec sub add inc or push mov cmpsb sub daa cmp lods cmp adc sbbb or ret cmp or aam or outsl out ds xor lcall int3 pop mov push dec and sub (bad) jmp mov jg push scas pop mov or mov push or incb inc adc adc test loop or cmpb sbbb mov fwait sbb ror imul (bad) ljmp push pop (bad) jo adcb mov sub iret scas cmpsl aas cmp (bad) sub (bad) fisubrl sub pop jle add ror cmp mov inc cmp mov loope inc sub adc jb (bad) dec imul daa dec jp mov adc adc push inc xchg movsb cmp mov dec (bad) jmp ret sbb aam fmul push out and addl xor or xor or mov vmread cmp adc adc dec mov test cwtl inc jnp das push mov cwtl pushf in js and pop sbb push mov xor sbb mov test adcl or mov push stos jns xor les stos adc or jg (bad) shrb or int stos sbbl insb sub out repnz adc push pop push aaa dec popa cmpsl in lods adc stos pop bound dec mov ret ret sub clc insl leave add adc mov sub aaa cmp mov mov fdiv fiaddl mov test leave mov aaa sbb sub mov out xchg jp fdivs add shr rcr push imul sbb sbb movsb sbb dec or pusha cmpsb push fsub jbe mov mov rolb stc stc stc or mov mov jmp sti fsubl xor or cld or fcom cmp rorl in jnp (bad) int3 pushf (bad) xchg lods hlt push add out sub enter pop fsubl xchg and jno mov mov ljmp add adc stos mov jnp lcall cmp (bad) pop jno push xchg aaa int3 add inc push push addl sub (bad) mov or jne rcl movsl shrb adc pop lcall mov mov stos outsl push mov ret adc dec sbb add (bad) scas and rcr cld push lcall sub xorps add shl pop popa push cli in jmp lret sarb push or movsb mov or and frstor rclb sbbl push pop repnz push push and and add sarl inc je clc push pand ficomp loopne cmp sbb mov int3 cmp adc or loopne mov sbb ret test (bad) xchg inc inc fwait push out inc call jecxz js scas inc pop mov sub add push loope test mov sub push mov fisttpll loopne out add cmp jb mov sub lahf sti sbb pushl insl and outsl fdivs (bad) test jp fdivrs imul je (bad) mov adc stos aas adc pushf inc or jae fildl or icebp adc jmp in xchg and mov push pusha cltd movsb loopne adc test arpl (bad) jmp cmp popa mov je mov sbb out inc loope stc dec scas lods iret xchg aaa enter pop sbb xor or mov add sarb imulb jbe sbb cmpsb push jb es xor andb enter push movsl es out cmp addr16 (bad) mov insb push (bad) pop dec xor and push mov nop lods add dec cmp (bad) rorb movsb push cmp mov (bad) or cmp cmp (bad) jp mov data16 (bad) je test cmp xorl ss jo xorl cmp sub push add sahf push mov inc sar subl mov stos mov int3 loopne fsubs pushl sbb xchg push sub les pop jns (bad) adc stc (bad) fdivp or push sbb in ja std inc mov add sbb sbb hlt push subb call sbb sti sub inc pop and add (bad) nop sbb cmc jo xor push in pop imul and jecxz push cwtl dec push sub mov mov pusha or psllw bound (bad) mov add js jle cmp xchg push (bad) pop push je lock sub dec sub mov push xor in fiaddl pop fsubrl loopne pop pop pop (bad) (bad) fcoml sarb std pop mov clc or cmc jns jns les popl mov mov inc (bad) neg push or push (bad) (bad) jbe test call in pushf sbb dec or and rorl adc pop in and clc or dec pop loopne pusha test jne mov push fwait adc cmp pop cmp adc mov (bad) push push clc and pop or pop jmp xor mov xor sbb je or push push movsl mov das mov jl (bad) test cmp jne nop or iret adc out or mov fwait push shr lds jns fstl add mov mov add ljmp cmp and add jns mov jne sub push sub xchg jmp adc add ret nop sbb shl add shrb loop push add add out push imul xor in test jmp pop and bound pop inc es mov pop int fs icebp nop add sbb fs bound xor jnp push adc add rcrl shll inc or cmp out add jno mov pop inc adc negl inc jge mov jb test mov adcl adc sub ret adc std cld sub clc ljmp or cld dec movsl sub in or or insl jecxz ljmp dec call test ss loop shrl mov push add add cmp pop sub mov aas pop and (bad) lea mov daa stc sbbl sbb inc push rcll call push loopne cmp sub mov add add hlt mov fwait and popf out (bad) out add and push lock and xchg or lds adc inc push ret rolb jbe test dec bound ficom lock enter mov in movsl jne cmp mov or inc inc cld cwtl jbe and dec and xor inc int push orb mov mov mov add nop aaa js lock pushf adc mov orl leave sub mov cmp test cmp sti sbb mov and lea clc cli sbb xor push fwait and mov (bad) dec jae scas popf push jb out sub mov add bound mov mov insb pop fidivrl (bad) ja push add push popa xchg pop mov add aam or bound mov jmp add jns push dec pop sub mov in pop mov push cmp cmp (bad) push adc mov xor ss ds test xchg jbe or inc aas jmp inc sub xor fldt pushf test jmp and rolb and cltd push out (bad) pop bound fidivr push push mov push movsl ror lea jo mov add add in cmp jb out into std into je push (bad) movsl push jmp movsl inc aas gs push mov stos push stc sbb and or push aas rolb jnp lock sub sub sub test (bad) ljmp pop mov andl out lea mov push loopne mov cmp jo pusha pusha sub pop jnp xchg sub add jmp loopne and fisttp inc cmp push hlt jbe clc movb ret cs inc mov jge add push (bad) movl xchg mov out sbb push cmp or mov icebp pop mov inc call add repz mov inc mov pop or jle jbe mov cmp jbe mov out rorb stc mov mov add jae addr16 jnp icebp (bad) sub pop into inc push ds and enter icebp or pushl xchg mov les pop push fadd repnz inc cmp aaa inc loope std pop stos inc sub mov pusha sti rep andl pop sbb push loopne movsl xchg lds sub cmpsb popf push (bad) dec push push gs xlat sub mov adc call testb insb ljmp cmp sbb add and xchg push or or (bad) in xchg xor inc adc fbld mov call lcall or mov mov jmp add ret aaa sbb dec out imul ja pop fwait jno daa mov mov popf xchg fstps shr and imul and or pop mov rcl mov jge mov push pop pusha and test inc cmp fsubs pushf and jo cmp xor fstl mov cmc and pop push ljmp jnp movb mov pop cmc cmpl ret mov adc loopne movsl sub jbe sbb ljmp (bad) sub push cmc xor add and push dec je arpl pop icebp mov pop adc jp dec lods pushl mov xor pop push out (bad) cs jno jno stos mov jns inc inc mov cmc cltd mov xchg leave and mov add mov mov rcrb mov outsb sbb cwtl daa adc xor mov mov mov pop or adc cmp imul cld scas adc fadds jns adc call xor and aaa add sub cmp or lcall or mov xor (bad) pop pop pop pop es or icebp sub sub jb nop add mov or out mov add leave mov pop sbb sarb mov popa or jae jge (bad) xor outsl hlt xchg lock sbb inc add pop movsb and inc jnp loopne push mov push push scas sub clc or (bad) or das sbbb pop ds dec xor lods dec dec sti sub push mov push std pop data16 sahf add add jo adc inc or add jg loop xlat add shrl mov fcomp rclb mov adc push bound (bad) jb shl jmp push imul lock ljmp push dec sbb lods inc ds cmp aas test pop mov insb adc test dec add jmp cli test jbe inc pop fdivl nop rcl popf test orl adc lea add xor sti inc and sub nop add nop sub cmp nop add inc inc dec ret add and dec push and sbb in popf adc push out mov dec imul insb and pop cmp xor xchg fucompp popf decb popa je insl jg jge cmp fnstcw or inc neg fldcw fs cltd cmp mov in (bad) xor cmp xor sub movsb pop test xchg jl dec add and mov adc jge lea push mov ja fisubrl jae and adc or sahf or in enter pop xor pop fstpt push sub push das pop jl sbb pusha stos mov adc stos es sbb xlat inc dec and ss pop mov and push and shlb jb dec adc xchg cmp int3 lds adcb les outsl pop cmp in das mov add dec popa sub fcoml push push adc mov test pop and lea scas sbb stos sbb add arpl int3 mov aad push cmp pushl cmp movlps xchg (bad) fdivrs inc gs sbb aad inc pop push insb push jno push jp and sub imul mov imul add (bad) or jecxz push mov loopne sarb push fs xchg lcall je dec shrb push enter jne rcrb ret cmp je push push (bad) lret push push cmpsb out shlb or mov cld js or sbb xchg and mov incl add clc inc jae je push push add or jmp inc out ret cmp xor add out inc orl add mov add push sub inc and and add pop lcall cmp sub je mov push adc and inc sbb insl dec cmp sub sbb xor adcl inc fst xchg lock stos sub push or xchg xor dec mov jo movsl push adc jnp push dec add mov push and pop add xor pop mov scas (bad) ret mov adc mov jo aam mov jl nop push nop push sbb xchg in xor test pushl (bad) push mov and in ss sbb cmpl xor mov inc push es loopne pop adc or inc js push push sub push fisub and dec mov and pop sbb popa pop repz or out mov cmp popf (bad) xchg xlat mov sbbl inc (bad) out mov or lods add push nop cwtl (bad) loop (bad) mov jns sarl pop mov ss mov ret or push jno xor bound adc xchg lea xchg mov out push adc push cmpb mov test adc mov daa stos mov mov add add add or stos addb and dec insb cmp sub mov xchg sbb mov push mov and mov fisubr pop arpl fsubrs fyl2xp1 insl test (bad) and test sub push leave in popl push enter std sub jmp inc push into pop lock in daa jb adc or inc loopne pop mov bound mov leave es je lret shrb call xor test add in pusha enter pusha cmp stos cmp cmp or xor or inc cmp test mov and movsl cld test pop adc leave or rorb sub fcomps add add adc push dec lret dec loope jns fprem adc cmpsl dec fdivrp jae sub add inc sbb inc dec jmp sub lods ss lock pop das pop and insb (bad) and pusha cli xor or lock ds and imul add mov and (bad) xchg mov das lods push mov je add push dec mov jno xor jnp pop leave inc mov add pusha mov (bad) inc adc test adc mov and out gs lock pop jo mov inc xchg movsl movsl xchg adc cmpsb cmp ret out pop cmp add adc pop mov adc inc or pop add jmp mov jnp jg lea pshufw insl lahf mov jb jbe popl in jg or jo clc jecxz cmp inc jo push and in testb inc mov xorl and (bad) cmpsl and pop leave sbb dec sub pop faddl add ja test jp nop and xor (bad) jmp or inc jo jno rcrl or mov fucomp mov mov mov add add xor stos push cmc pop cld rcrb jno jns arpl sbb sbb adc add mov std inc push add xchg jmp sub ds or mov xor sarl mov adc xlat lds push jne ja loopne cmp js inc adc sbb mov test mov cld mov (bad) lcall mov inc icebp mov push adc test inc (bad) dec out add sub jecxz or cmp ljmp inc lock pop js leave inc scas mov mov sbb subl push push xchg cmp or mov push mov jb xor cmp (bad) ficom clc and sti cmpb add repz loopne andb loop sbb mov mov and js in pop and push (bad) push sbb adc pushl or adc incl lret pavgb jmp dec push mov add pusha outsl push xor jno or enter rolb sahf rol data16 add xchg nop push psrld mov cmc mov adc push enter push loop (bad) (bad) testb ret (bad) xchg cmp into add rcrl iret insb mov dec nop iret add arpl inc or push mov push ret push push xchg add jle (bad) fs rorb jno push loopne aas pop test ss push pushf lods jnp add popf push cwtl push enter dec js mov add mov dec (bad) pop movsb inc movsl adcl jnp sbb jmp icebp push outsl in add test out cmpsb fisub data16 stc mov mov fnstsw andl pop inc mov paddq mov mov adc push mov test (bad) cs (bad) xchg cmp pop mov decb ja inc add add inc jge add test cmp mov insb or inc mov (bad) mov or popf mov adc divl lods mov orb stos mov dec std and cmp pushf push push xor (bad) js jno dec ljmp inc aas xor imul adc xchg lods adc add je repnz push call and (bad) jo jl dec movsb nop fadd (bad) or dec sbb inc testb push mov or or lret sub push js mov mov ret incl mov testb pop mov bnd and jge dec pushf push jmp andl jle rorb (bad) or aam (bad) mov mov cmpl jo mov sub aad add enter addb xchg push mov xor pushf lea in test jb int3 mov sub shrl shrb outsl mov cmp adc icebp and mov pop mov lods pop mov mov pop or (bad) loope mov jp clc add dec sbb lea pop and push push stos gs xchg cmp fbld mov std or mov add mov inc fnstsw cmp mov lea cmp ja ret lret jnp fimul adc mov sbb push sbb or bound pop out and mov orl xchg mov mov loope pop lock pop pop mov cmp add and dec cmp fdivl xchg lret pop or notb add and xor adc mov dec push dec mov mov inc xchg imull clc lds popa mov imul cs mov xor int mulb cltd call mov call or inc sub insb je loop (bad) divb add dec cmp inc sub pop aad jg jbe pop and push cmpb jne pmulhuw adc ja cmp push mov movsl and push mov inc fs push lcall outsl ss xchg cmpsb shrb js pop push loop xchg inc pop and das pshufw stos out mov out pop rcl pop rcl fisttp int addb (bad) jecxz clc es inc mov cmp outsl nop mov mov adc xchg jns je push or mov in ret test lock jno iret xor xchg dec sahf add fxch cmp jne xor or fcmovb (bad) jne fsin push adc loopne push incb dec push movsb adc push and (bad) fisubr jp outsb jg out xor mov stos sub hlt push je push cld pop (bad) ljmp cmp fistpl jge pop rcrl aam jmp mov and imul mov mov cmpsl jl mov aas sbb loop leave add mov (bad) pop add dec add jno test das adc lock jl inc js dec (bad) cmp pop jge fiadd adc mov or cs out idiv subb pop lock xor jle jmp orl jno das or cs ja mov (bad) or ds add out jl adc sbb jae mov outsl test inc fisttpl cmp test (bad) xchg or adc (bad) loope jl fnsave popf lods lock and mov mov clts sub jne call dec push cmp jae pop jle dec subl (bad) pop jo xor stos mov mov push mov mov pop pop add or arpl dec cmpb adc mov (bad) dec or xor (bad) notl and add shl pop insb xchg pusha aad and or push or ja ret push adc add (bad) lock push and cmp adc outsb outsl push movl shrl js inc jmp fs adcb psubusb mov pop mov add test ja negb divl push movb xor aad add clc push (bad) (bad) pusha lods adc add shll gs in sub sbb inc or mov sub cltd and xchg dec sbb sbb push jl jae adc negl xchg (bad) fcmovb cmpsl nop fs aas push xchg jne cmp mov das ja xchg movsl lea cmp xchg add or inc cs scas inc scas push cmp pop in inc push push sub sub loope (bad) xor lcall pop cmp dec jmp lea sub inc das scas sbb push bound negb mov je ficomp (bad) out xchg or add inc jmp dec cs sbb pop mov ss sti mov jmp dec cmpb sbb roll mov xchg cmp xchg push sub testb or adc and mov mov mov test mov or adc or sbb fstl fcoms jg pop mov xchg or lock insl xchg mov or add mov iret jmp mov xor jecxz (bad) xlat aas je aad stos sub jno adc jne mov ficoml push mov inc add loope mov rcr cmp hlt push nop mov dec ficoml imul (bad) leave mov shr dec inc pop lock add je xor je out adc out push scas lods mov pop mov dec cwtl mov mov (bad) test or xor ljmp es xor fnstenv test jnp (bad) jp lods idivl xlat or ss adc cltd jnp idivb jno mov sbb mov roll dec test sub subl pop lret in enter add insb xchg sbb cltd ret xchg jo jo mov sub push xchg pop inc xor push mov ds outsb inc mov ret pop xchg loop fs add mov (bad) orl mov lds gs inc (bad) fstpt lock add adc dec lock inc popa add movsl adc mov sbb mov enter test mov mov (bad) jecxz mov outsb dec xor imul or or nop add rolb js jns adc test push mov pop pop adc sti sbbb jge fiadd dec xchg fnstsw pop scas addl mov into mov js jg sub fsubrs push push dec and in hlt mov inc popf pop test pop push mov lret xadd movsb js lcall jnp lds xor pop in push sub mov pop xor push dec push and lock mov clc hlt outsb daa push adc and mov cltd cmp and push addb add sbb and mov cmp je cmp je jge or cmp mov sahf mov and push jmp fstl (bad) or insb cmp inc inc jl test mov lea mov rolb andl xchg in pop or or jecxz sti je dec je push sbb or pop lahf or insl cmp pop or and (bad) jle xor lret into in or or dec lret xlat cmp das inc dec add add pop xchg cmp nop scas inc pushf ret incb add (bad) in aam je fucomi arpl push je or je sbb sub push mov pop (bad) lock (bad) ja inc or jmp fnstsw andl pusha (bad) jmp sub fild cld and adc pop leave clc pusha jmp mov add push dec cltd aam or (bad) jno pop push push xchg add xor icebp sbb jle cmp mov add or xlat add push cmp inc or and add pop mov or cwtl or jmp push inc mov add jnp xchg addr16 dec dec call xor jl cmp cld sbb (bad) mov iret adc mov adc adc rcr xchg test mov inc lret test xchg loopne xor ret sbb pop xchg mov es push pop pop cwtl fsubs decl and popa bound imul dec test xchg nop mov jmp push push or mov mov pop dec push es add xor jne (bad) jae sbb jmp adc dec jne mov mov ret daa out andl dec pop or dec adc add popl stos out mov test sub inc push sarl cwtl fs call add and mov jo mov stos stos sub ret aam inc push mov mov pop mov or xor fcomp int3 stc arpl test mov xor fs cmp mov push jp inc add sub hlt mov enter sbb jo push je push jo call jle inc mov dec dec fisttpl and bound jno push loopne inc sbb and loope loop mov mov cmp push mov and sarl cmp ds in clc roll sub push push xor pop rol pusha xchg fsub imul movsb dec cmp fs pop mov dec cli add addr16 push cld out add shr jne scas inc adc adcb adc leave jmp hlt lret rolb (bad) shl int test mov jg xor insb (bad) xor push and sbb lea lock cmc pop push pop sbb pop pop dec mov add and cmp pop es mov adc lock or into in mov test ss push mov add pop pop inc imul or dec in xchg ja dec fadd pusha dec push pop dec in inc adc push rorb and add mov inc sbb dec pop fildl mov pop xor test das push push add pop sub cmp lahf jmp cmp lea xor xor mov mov xor add sar mov or xor push sub sbb ret adc add and push testb push push jp mov mov inc pop (bad) ss (bad) lock cli cmp sbb add repnz inc sbb stc jne mov mov je add movsb sahf cmc mov sbb scas push push sub add ljmp mov jp dec add in mov mov faddl or dec mov xchg outsb xorl push and movsb lret fimull push add or (bad) and dec add or ficompl pop cmpsb inc sbb inc and scas xchg mov push insl adc fs push cld add inc sbb sbb imul les cmpb cwtl or cltd add or and rcr ret adc sbb pop aas imul loopne cmp mov push push push pop add in sbb test or jg ror fdivl jmp incb in jmp decl push push inc jo ljmp or sbb loope cmp mov push dec idiv lret add cltd (bad) mov jl dec insb jmp (bad) jne lret push xor xor ficom and or inc popl adc or inc leave push push js inc lock test sbb mov cmpsb push inc sbb pop mov add jmp pop adc jb dec push or mov lcall lret sbb lea outsl push inc push mov add jmp xchg and add xchg and bound pop adc adc mov sub test or lock pusha cmp sub push setb jmp or (bad) sub cmp fs mov push xor pop add mov jmp ljmp adc (bad) mov cmp pop add sub mov adc (bad) or sub dec rcrl push imull jae stos cmp aas inc dec cmp popl mov push stos jo and push in mov cmp add insb lcall push jmp dec jle jp pop pop test ret xor data16 or sbb je addb push pop outsl or add movsb xor or push pop std push pop fisttpll (bad) mov inc pop das (bad) xor js or imul inc pop (bad) call (bad) pop xchg nop add or sbb adc inc dec inc repz dec xor mov (bad) sbb and (bad) push lods adc lret adc and mov test fist outsl adc jbe sbb inc cmp or xchg hlt lods mov sbb dec jo mov ret xor popa xor inc cld ret test mov or ljmp push adc xor jg sar push lea add mov add sar or jle push cmpsb mov dec inc sub sbb jne pop or xchg push and cmp mov push sbb add add test outsl lcall ljmp add add sbb pushl jno rol imul test sbb xor inc (bad) mov ret push sub xchg negb pop jb inc mov xor push pop clc lahf addr16 cli fsubl push add cmpl (bad) jg sub mov mov andl je (bad) inc jle dec cwtl (bad) jb or mov mov xchg fidiv addb movsl mov test loope ljmp jne orps inc call jmp push pop dec and dec inc clc adc lods test push push js inc push and add cmp cwtl pusha cmp pop fistl cmp xchg pop je (bad) mov cmp or or or pop push add ja ja mov jl loopne (bad) out int cmpsl pop imul push test mov cmp mov aas pop (bad) mov lock add movzwl loopne sub hlt rol xchg cmp pop sbb mov push jmp pop (bad) je pop cmp dec iret les das clc test jbe rcl jl sbb pop add cmp ret rorb mov jnp in fcoml inc mov sbb dec and mov (bad) mov out adc sarl dec mov (bad) lock inc xchg lret xor sub fs roll es cs imul imul adc aad gs fildll dec push mov inc and or dec add dec test cmp mov or in dec dec insb inc jne cwtl nop (bad) add dec sub shl movsl pop jbe clc mov fbld jns push adc fiadd into push jle jg sbb mov pop addr16 sub or xor sub and in dec mov ljmp shld xor adc lods stc or xchg fnstenv inc add sbb clc mov sahf push shlb push or push add lods sub loope loopne or es cmp sbb adc xor and mov add fidiv lret jmp mov and xchg rorl push aas push jae inc stos pushf xor ret xchg mov xchg add cltd adc ja lcall test mov pusha xchg lea stos fidivr mov xor rorl pusha inc cmpb add pop (bad) mov xlat inc sub bound jmp sub pop mov fs out cmp add clc jecxz enter icebp and in adcb and jl push mov mov test lahf xor or sbb inc inc aaa test jb je mov clc loopw aaa push inc fdivrs xchg mov or sub icebp call add or outsl or or push add fistp and add inc cmp imul lods cli dec mov sbb sbb jg or andl imul pop test mov (bad) sbb call je js fisubrl lcall cmp push push dec adc out fwait iret push and jg push dec and push jge (bad) jg outsl inc or jbe jle les lahf out xor jg jg jg jo mov or dec jne rolb aaa (bad) dec (bad) sti outsl in add adc xchg cwtl inc out and incb shl dec or xor inc xchg and add adc or inc dec push inc scas mov push idivb or mov inc push mov shr adc roll les adc mov mov ja dec imul jno cmp jmp pop cmp push popa ret cwtl clc cmpsb outsb pop jl rolb mov push pop dec aad pusha lahf or add insb (bad) sti pushf dec daa jo ret push or xchg inc add mov clc std imul xor add sbb mov leave adc jmp push add dec ret test push adc aam das jmp jmp das sub lret and or jp (bad) mov and fadd adc push ja push nop or pop or inc call (bad) jge icebp or (bad) xor cmpsl or and bound xchg add shll nop inc pop and adc xchg push popa cltd mov clc jne dec ljmp push inc or adc daa or pop mov jb jne cmp mov lea dec mov add inc xchg xor and lock pop inc int3 sub repnz jne pop cmp add mov xchg test pop pusha nop pop adc lock adc sti or cmp fsubrs jl mov adc pop dec push pop addl sti jb cmp cmp xchg test xchg test (bad) lret push (bad) ds sbb cs mov lea cmpsl imul pop pop adc xchg xor sbb pop (bad) xor sub rclb and loope mov sarl adc scas or or cmp aam loop rcrb jbe popa hlt sbb or inc jmp pop imul cmc rcrb jbe iret mov sbbb mov lea leave or lods push inc and push loope sarb ljmp sbb ljmp pusha dec and jmp popa mov and and mov in cmpsb aas loopne call jbe push or repz out (bad) dec js aad adc int3 mov movsb pop cmp test push ret jmp dec out xor lea in shlb xor fnstcw arpl (bad) adc add js add adc fisubrl mov and push mov cmp pop xchg add into or xchg ss push mov cmp jecxz add inc enter rol (bad) xor mov mull hlt test or xchg add inc call fadds push jae cmp add jp xor dec jmp xor inc inc mov mov inc inc inc adc aam pop je pop es lea and pop mov mov or jmp add int cld pop in icebp xchg (bad) je int adcl add je test sub inc cmp xor mov xchg add into inc add xor cmpsb jp test pop cld into ljmp adc leave dec add or pop jecxz or and lods test je sbb pop mov fdiv les push in jmp mov add add cmc add pusha call cmp jae adc call jae shl adc lea bswap ss loopne mov ss sub movsb les (bad) push push sbbl jl sbb mov jne inc xchg push fadd ds lods fistp imul pushf push xor pop ret clc lock test sub push sub add call les pop sbb mov add add dec cmp cmp outsb jb andl fcoms (bad) sbb insb cmp or out sub push nop mov push push pop push xchg loop dec jmp mov lea or (bad) jle pop push sti jmp xchg sbb add ud2 mov and xor les in push sti add adcl out nop cltd mov inc dec adc sbb jo jno add mov sar or fcomp jge mov sti arpl add arpl pop je pop sbb daa andl subl jbe pop orb add or or xlat nopl into sub (bad) jb mov mov mov adc push (bad) daa lock jp out push loope inc in je or dec or jne test xchg xchg gs cmp (bad) and add jns shl and jns or inc push inc mov clc add call jl xchg out jmp push repz push dec inc sar orb jmp (bad) mov pop adc pop adc fsqrt add cmp roll or ds aaa cmp pop ds xorb into push popl push mov adc jecxz push dec sti add mov sub lahf out add dec jo add (bad) rolb mov pop mov and fwait dec pusha pusha rorb test inc enter inc es fistp dec out mov jp mov sub pusha push gs pop adc idivl rcrl subps inc add inc mov cmp jne mov adc jg rorb sbb add (bad) invd push push repnz fild test inc jp shlb adc lahf (bad) sbb stos or pop es jmp pop fs popa pop adc inc pop pop lret (bad) add inc mov add std inc shrb (bad) jmp arpl xor mov mov inc cmp adcb loopne xor mov inc mov rorl test sub dec fsubrl les lock stos fs js xchg adc inc loop lret sahf cs or and or inc xor (bad) aas sar rorb cmp je mov cmp pop jne dec mov inc inc add inc negb pop push fldz outsb fcompl fnstsw test jp xor inc loopne jmp sbb fs push pop shr jmp xor mov adc (bad) or iret adc mov das cmp (bad) aam adc push mov lods hlt shrl cwtl inc (bad) lods add and mov sbb fmuls je je jecxz mov addr16 lock inc cmpb jbe or imul insb sbb or jmp push pop sbb fcomps sarb lahf rolb sub es lret mov adc jb adc inc xchg scas xchg movb cwtl pushf and ficom roll sbb andb jp add movsb insb push clc (bad) repnz or lods fs add scas jmp and and add sub bound adc je movb stos mov aas dec adc dec jns enter pop in add push pop idiv movsl ror xchg call sub clc add inc jo mov punpckhdq popa add inc rcrl daa inc pushf xchg ret push (bad) or mov push testb adc and (bad) (bad) inc add call testl add into add jbe xchg jge xchg sub sub lahf adc adc adc idivb (bad) xor sbb adc add pusha sbb inc aam jmp sub into ret (bad) xchg inc roll adc mov pop or ljmp dec inc pop pusha out insl std js lcall fimull mov call pop xchg push add mov lock or mov xor cli mov xlat sahf adc jl dec pop test and sub add xchg aam loope imul lea loop and or mov dec lock rol ret or add prefetchnta jb xor xchg add sub sub and push or dec addr16 es pusha pop mov (bad) lahf popa xlat mov insb movb or or aas imulb ljmp loop or stos addb or ret daa aam cmp (bad) jne bound xor sbbb xor sbb js sub in jmp (bad) xor pop inc xor jle insl or sub shrb cli into fsubl or mov imul cmp xchg hlt xorl and ss sbb mov loop sahf push loopne sub mov repnz add out (bad) jge fsubrl shrb hlt shrd ret aam add add insb dec outsl jnp daa cmp cmp scas sbb push movsl xchg add clc scas addr16 inc and xor out and adc cmp add rorl sbb inc mov incb push sar fnop push push push stos daa lods xor inc aad jne lock mov push dec rorb and push pop icebp mov cli sbb js jg jb xor test sti jp jmp inc adc (bad) bound cmp and mov (bad) jb std add mov insb add sub sub mov mov push jg mov push add mov mov sbb adc into sub gs xchg (bad) fs cmp and push in mov sub in mov cmp mov popa cmpsl push pusha test sysret adcb push cmp test xchg xchg cli sbb cmc shufps movl and push jle sbb push sbb mov inc jnp push jmp lock sahf fwait jge sbb adc neg add jp pushl or inc or call push lods mov lods fnstenv xor stos (bad) push sub push jo pusha or arpl out push sbb fdivs add add and outsb inc pop sub push xor imul (bad) push mov push sbb nop pop xchg or pop mov pop xor sbb adc pop call cmpl pop push divb lods pop and push cmp nop adc out fsubrs dec sub push dec dec push out testb pusha xchg push rolb bound push push cmp xchg cmpsb sbb int3 cld jl loopne jge decb add inc or inc (bad) pop call ror push repnz fadds popf jmp xor rorb fstps or popa mov jne mov inc popl lods (bad) incl insl aaa cmp push or inc sbb int enter xor or pop adc adc test hlt adc popf (bad) mov add pop lahf mov scas icebp ljmp jb (bad) ds mov jle clc and xchg xchg popa dec push mov out in push push mov pop mov jg call sti push mov jg push inc adc and xchg dec xor pusha jo mov dec jne mov pop or je inc shrb jle adc divb mov push adc or sbb add add add sbb stos and cli pop jle neg cs add and add add test jbe xor push adc or es xor jg test dec inc push popf add and (bad) add test mov mov loop arpl movsb push and (bad) sbb sbb xor sub iret adc push adc add xchg push mov push lret push (bad) fstl mov pop and adc and sub or dec cmp negl dec dec insl movsl das inc pop lcall mov lods je dec xor push jne je out loopne dec mov or mov mov rcrl pop in adc lret push add ljmp pusha add or sbb fwait mov sbb fadds inc aas das mov pushl cmpsl dec pop jl cltd xor pop add rclb adc push mov fstpt cmp inc mov je add cmc enter push sysret sub addl mov andl les mov mov mov ud2 adc or adc push and fsubs imul cli fs adc stos dec nop ret lret or out xchg inc (bad) sbb les aaa pop push hlt mov dec mov sub sbb push lods arpl add inc dec add mov add (bad) or xchg jle rol inc (bad) imull inc subb inc aas or adc or stos shlb adc and sub mov add lods out (bad) xor fwait lock scas loopne xor es arpl pop das mov inc in (bad) fnstsw cld inc and clc shr sub jno or jno mov int out inc jns insb insb add orl test and lods cmp enter fsubrs adc and and or push adc sbb jmp enter xor inc mov gs adcl fisttpll (bad) fwait nop dec adc loopne mov movsl xchg mov adc add ret imul mov dec push inc lahf leave pop inc and mov out push pop pop xor adc lods add call in test pop inc push stc movb insl insl lret push clc stc adc or inc jge cli push out lea push sbb jecxz jmp and or rorb add ss (bad) pusha adc add mov fs push movsb lock push test fcomp pusha jb jb (bad) test imul pop imul mov or pop pop sti aas xor push inc (bad) testb or or roll loop adc adc pop push mov loop mov xor or call loop and cmp push pop std push xorb mov push popf push setns (bad) mov jo cli xchg xor sbb cmc int3 add sbbl push and add dec pop lcall push adc sbb xlat add test insl or (bad) incb dec add pop pop inc pop cwtl push inc xchg or daa or fldl aam je push push and xchg test push loopne add pop jmp mov mov dec sbb fstpl push inc cli stmxcsr fisub xchg xor dec xor dec push jg or mov sub es jg xor adc add xchg ud2 sbb je mov push (bad) ffreep popa nop lock jp xchg jl into and jb out mov push sub leave fprem1 pop pop adc clc fstp insb jmp dec sbb popa and daa test ret pop jb in sub inc scas xchg adc pushl or lock pushf mov inc pop rcrl or negl xchg fcoms sub mov sbb rcrl and inc add push into mov pop and xor test leave pop sub and mov outsl sub or cmp xor mov cmc jo lcall adc cmp sub add icebp sub (bad) fstl and rcll sbb or mov sbb clc shrl lods adc call add push negb incb jl push pop cmpsb cltd mov add out lea dec inc out xor pop leave and or or inc inc mov sbb push cmp jge mull push nop or sbb dec fcoml push push ds mov jne pop push in jo pcmpeqw push sub lods imul sub pop notl add jae inc or add mov adc dec xchg ss inc daa fimull or xor push pop and cmp fcmovnb div cmp je mov mov mov (bad) aaa add inc mov sub jl jo inc sub ret xor out popf xchg push jbe inc shll cmpsb adc mov cmpl movsl mov iret movsl mov xor add xchg jno jl xor push pop sbb pop icebp add push and imul fisubrl sbb inc shrb and push jle push sub andl flds mov inc xchg mov inc sbb sbb push jns pushaw lea push sub outsb or out add mov pop add (bad) xor pop mov push lea inc mov inc rcll pusha inc rcrl (bad) aam pop or out mov mov mov sub dec xchg xor daa inc sbb mov dec xchg mov jne ret mov xchg fstpt jns addb mov shl cmp mov mov les lret xor mov mov data16 imull push push pop cmp dec test test add insb decl lcall adc pop or cs sbb rorb (bad) (bad) lea cwtl xor add pop dec in cmp mov andl jb sti push hlt pushl call inc pusha mov or mov aam add mov imul push xor dec pop jns in sbb sbb pop movsl pop and adc mov add add (bad) rcll call daa add rorw (bad) or adc jo or inc jnp sti jbe sub push xchg sbb mov (bad) cld enter and jl lock xor sub (bad) pushf push add sahf pusha in adc mov pop and or and mov cld enter pop inc loop or xchg addr16 lock adc aaa pushf cmp jg mov stos (bad) sub mov loopne add mov inc pop xchg jnp loop sub push add push jmp add testb add test add adc add insl lret jno scas dec gs cmp mov movsl iret lea mov xor push roll add andl lea add pop dec pop lock int3 adc pop ficoml jp mov dec mov jmp nop loope ss je adc dec add or lret fwait sarb pop movsl sbb dec inc fwait sahf xchg and cmp ficoml inc mov cld popf inc or cmp ret xchg subl push fbld and sub push fisub mov and cmp sbb sbb adc push jno or xchg pop incl adc movsl add cmp jle,pt or loopne push or std sbb add icebp inc cmp jl pop scas int xchg add jno adc or imul sti pop sub (bad) stos inc shll push inc jno cmc (bad) (bad) jl push (bad) addl hlt sub sub mov adc ret xchg mov inc jp xchg jbe xorl inc cmp lea jl jmp add cmp jl mov sub movb les add ret mov leave inc adc sub sbb bnd inc and dec push add test or fisttpl ljmp adc stos pusha sahf pop nop and (bad) or clc aas dec cmp cmp mov and mov out (bad) mov insl loope mov repnz mov hlt pop push icebp dec je xchg fcom jns call jmp sbb inc lret and lret (bad) xor mov adc rol push add cmpl push cmp mov xchg adc mov pop inc pop fimull fs cmp xlat mov add inc xchg test dec jl pusha dec adc push and push sbb cmp fisubl adc adc and dec adc jne jnp or jl pop sub xchg rcrb xchg xor add lea mov mov jns hlt sbb movsl sbb es and sahf cmp inc and insl xor clc cmp sbb daa push jmp outsb mov add mov fisttpll dec and mov add sbb inc inc lock sub popf ret add adc aaa inc cmp pop inc add or add sub jmp dec out icebp add lock push fs ficomp and xchg sub mov call add test jp or aaa or lret sbb aam and les xor cmpl jle mov or inc adc add nop in or (bad) xor jp es add inc xor mov mov jbe mov jmp add push cmp lods out cmp dec inc leave jp adc push fcompl subl push mov cwtl push push ficom out in sub lcall lcall imulb iret sub lea push bound push int3 mov and pusha sbb out pop xor push rep popa pop add xchg fidiv xchg ret sbb or ret adc cmpl hlt xchg mov jb jle push sbb dec cld xor and movsb xchg dec das and nop sahf mov call sbb inc xor test mov fdivrs sbb sbb test outsl xchg mov orb (bad) inc inc mov sahf xor mov jmp pop and push mov xor xchg lock enter ds fmull fs xor insb cmc movsl jns add xchg sub dec mov xor insl ret inc outsb adc cmp or and adc or iret insl sub adc rorb in ja mov je mov mov mov (bad) sti pop (bad) test mov enter push lret scas daa add mov inc and fdivl jbe sub push insb rorb sub pop xchg mov les and cwtl lods testb push lea mov xchg dec pusha dec xchg sub fsubs adc inc sbb pop add xor and andl add dec ret maxps repnz cmp (bad) lret scas les in xor je fimull push mov loope mov js lods das fimul aas add dec jne hlt xorl xor jmp xchg xor ffree sbb jbe rcpps scas es mov dec dec mov es ss and adc pop sbb or bound and call sbbb push fwait iret leave xor cmp scas stos shr nop mov push push pop and sbb sub adc call dec push andl fnsetpm(287 imul sbb dec inc or xchg es add and test pop arpl xchg inc inc popa ss or adc movb mov clc inc inc pop add jne in dec (bad) or or test xchg test mov xchg lret into jle add dec mov xchg adcl mov and popa sbb inc add xor pop andl loopne (bad) out cmpl gs loopne jl mov xor sub push push sahf sbb and outsb lds fsubrs imul out fstps mov loopne fcmovne inc leave movsb in das and in sbb xchg push xor and subl xchg dec int pusha inc fs idiv and cmpsl inc enter sbb cmp insb mov jecxz sbb movb add push js mov adc inc cmp je xorl hlt loopne inc sub nop pop (bad) icebp mov inc xor fs jnp shl les call mov test cli dec cmp les adc pop movl mov push inc jecxz mov add cmpsl adc and push push into xorl (bad) outsl jl nop sbb and pusha inc arpl mov andl inc outsb cmp adc jne fst add mov jae loop mov dec dec inc jmp pop or jmp cmp mov popf add add and outsl pop lds xor xor dec das sbb push xor sub mov xor adc pop iret inc xchg add dec adc ret add mov insb scas mov jecxz test out pop out fcomps cltd sub jl or sti sub jg (bad) xor aaa mov push sbb aad mov add push out jl add sbb addb push repz adc aas inc hlt mov xchg cs push sub add jp ja mov or (bad) js mov cmpsb adc fucom das ss xchg mov add inc jns mov pop fs je xchg mov add pusha add and xchg fiadd ja mov sbb lea lret push adc and stos hlt xor xor dec aas and (bad) pop add clc mov fsubs cmp jmp sbb mov clc mov push inc jmp faddl sbb and cmpsb mov pop lods push xchg pusha push (bad) cmp (bad) aas nop add or and xchg push rol ror mov lahf xchg sbb fdivrl inc and xlat xchg or rolb or dec les inc lock (bad) jl dec xor and xchg adc imul rcll or and and adc pushf sub add jmp push cmpsb test sub push mov enter or or rclb adc cld (bad) push pusha mov inc bound and mov in subl inc movsb cli adc jmp pop popa sbb add popa aas mov xor add loopne xor test test push lret rcrb xor add jbe cmp jbe or notb pop test sbb or adc pop outsb sbb testl fadd cli out jmp (bad) mov pop jp add jo mov push ss int popa jmp movsl scas or cmp push testw xchg andl js or lea xor xor insl in icebp jmp or (bad) stc clc je cmp mov add cmp push (bad) push (bad) jne dec scas inc inc push lock sbb dec inc dec jbe adc lcall xchg push sub call mov in inc push cmp adc adc cmp pushf fsubs jb pop push dec adc adc xor cmp sbb add add loope jbe inc inc xchg divl arpl mov lret fistl andb mov les enter daa stos jns sbb dec arpl fbld lahf or sbbb inc movsl pop xor push add jmp cmc stos and orl xchg mov adc inc test cmp mov mov adc pop jmp and inc inc dec mov dec movsl scas leave les push xchg mov (bad) in aaa movsb mov sub jmp dec (bad) iret jecxz inc clc mov sti xchg rolb rclb mov push insb mov push and add pop jbe loope push pop mov (bad) xor jne call sbb jb mov jnp or test stos insl ljmp arpl cmc ljmp mov add fild lock inc and shll mov push xlat lret dec inc movsb sarb cmp mov add bound mov adcl faddl shlb outsl loop in mov dec xchg mov or pop xchg or inc inc adc xor dec inc (bad) pop pop faddl inc push sti pop dec dec cmp sbb cmp and movsl loope hlt or mov jno lods or sub push nop mov in daa lea sbb loopne in jne inc and jge jp push test je jno in test cmc adc out les imul loopne inc adc ret iret adc fild test xor add shrb push jne mov cmp mov fs or cmp out cmp fwait jo mov fstps fwait movsl inc jg,pt mov inc (bad) push add or or popf or aam dec adc push cmpsl jns inc cmpsl cs pop adc je dec ja push je rclb imul mov outsl andl scas sbb jnp scas les ret dec cmp push popa pop cmp xor sbb dec std lcall movb jg xor cmpsb mov push fldt adc (bad) in in (bad) push aas imul push push sub and sbb lcall xchg shrb mov aas icebp outsl pop ficompl push adc data16 mov xor pushf dec or outsl mov aaa imul scas inc xor jb clc push ds rcrb sahf ljmp jne loop mov fs (bad) cwtl ss cmpsb lahf je fdivl outsb fdiv sbb push fdivrs out std ret adc mov ja clc lea addl es xchg or rolb inc loop rclb loop mov fmull and add (bad) push push ret lret fadd jmp add cs lea push out inc orl xlat (bad) mov call pop sbb dec push mov ja cmp push jmp dec mov inc jg pop xor repz into aad ror or (bad) jmp insb add int3 adc call mov es dec leave lret loop cwtl add xor out inc iret push iret pop push imul inc or sbb test add inc push inc xor mov adc popl inc push inc test lock ja loop,pn add shlb mov and pop and shl push sbb or and ret or lock andl push or dec jp loop daa sub or fidiv push bound mov jne push pop mov das inc xlat xorl and and arpl and push shlb inc (bad) mov fbld push jb sub aad adc leave nop leave mov push cmp cmp xor sbb push les lods jp fwait add or ja rol (bad) cmovnp jne inc inc or outsl xchg movsl cs inc xchg adc fmuls popf inc xchg sbb js inc jecxz mov out pop pop add ret subl inc xor push sahf nop shll roll or jne dec add stos jno fcoml xor aad (bad) sbb in ss loope pop test xor xchg enter add mov xor and cmpb mov jmp mov xor mov mov adc subl inc inc jmp les dec movsl jmp lock sub aad pop and and xor lock out inc xorb aam mov cmpl je (bad) int3 dec cmp fdiv scas cmc inc ret scas pop inc clc mov cmp faddl or je std lods add fsubr jp jne iret or inc loopne xchg cltd outsb and lcall inc or in sub add (bad) inc lret push xchg sbb aas add loopne push mov pop sti inc sub (bad) fsubs inc push push sbb fisub jb in jmp mov cmp js sarb cmp mov xor stc lret enter subl xorb lods stos adc jge pop sbb leave pop adc inc dec push dec adc fwait cmp inc cmp pusha cmp jp add sbbb pop push sti sub push xchg mov push cmpsl add add sbb rclb arpl lea adc mov aas (bad) in xchg sar mul lahf popa je jmpw or sarl andb and mov in test xor ja int3 mov or dec imul push decb fidivrl cmp loopne shl ljmp fimul lcall or sbb ss mulb xor sub fcom imul lahf mov popf jmp mov inc mov gs call push popf jl test inc jne rcll push sub mov mov hlt cmp mov lea adcb lock xchg inc add xor add xor aaa sahf in push je cwtl sbb push pusha cmpsb cltd pop push push adc in mov into je push das aaa mov lods test test jl,pt and or ret add add add insl or fmull jne pop repz inc sbb add jns ret xor jne pop es mov push pop ds cmp jne (bad) jmp lret push add jg dec push repnz nop push add or imul insb and jmp push fmuls into test push test imul loopne test jb lods shl sub (bad) subl sub add inc push sub push insb orl fstpt sbb sbb jno in xor es test rolb add bound rorb xchg mov mov jae test dec popa mov inc and push repnz rcrb cs lret cmp push pop inc and data16 xchg ss sbb inc inc sbb fnstcw test imulb sbb nop in and pop push or sbbb rol dec push mov push jb xchg mov test mov or sub shr sub add push mov add jno and xchg clc push je xchg jg cmp mov mov adc push fcomps cwtl inc jb mov ret cmpsb sub std fst insl jp sbb pop dec pop sub andl popf dec rcr or cwtl ret pop (bad) lea aam arpl pop push test mov subl cmpl mov mov jl and mov (bad) rolb sbb mov loope pop adc mov or and cmp pop mov enter (bad) dec addr16 jno xor ret je adc mov adc insb rcr aam push les xor (bad) stos push jmp sbb daa aad dec xor pop pop dec jl clc nop inc push sbb (bad) inc (bad) into sub pop pop inc les jecxz push int3 add andb cmp cmp (bad) mov data16 xchg es push push iret adc lds notb es and push scas ret or jmp cmp scas in inc push nop mov jno xor pop pop pop pop add adc add push and mov dec (bad) push mov roll sbb icebp subb repnz add sub cmc adc xchg test jb adc enter pop inc jo add mov inc or push js mov ficomp mov hlt daa pop jb xorb push pop sarl add and pop mov adc inc subb adc jl jge mov jbe dec cmp movsl je mov mov jbe and jmp loope lret jmp pop add dec loope push in add (bad) sub pop mov inc dec jne sbb mov inc add xor loope jmp cmp in add cli lock jo or pop pop hlt or icebp sbb jmp inc (bad) das jl (bad) mov lods or add lcall inc add imul inc call (bad) aam add or pop pushf test test and push jp or jle jmp pusha cmp xor push cmpl jb test lds int mov cs popa mov leave sbb mov push or ret int push fs xor mov idivl xor adc sub dec sti ja add inc cmpl jne incl lcall jne enter rorb shl sti sbb xchg pusha sub push mov sbb mov (bad) sub icebp jp inc or adc das jbe pop loopne xor mov mov dec inc cwtl popf xor out test cmp out cmpl ret jns dec test nop test outsl jg movsl (bad) xor inc and jne xchg movzwl add mov push cmp jb mov mov sbb or fcom fadds test push rcll movsl lods xchg mov inc mov lds mov ljmp xor dec js and mov add ds jo adc or pop inc mov iret xor shrb dec fisubrl add (bad) xor loopne call push mov jmp push dec nop mov xlat sub cmovs mov jo jno pop adc jge sub add je mov xor ja and je mov mov ret push pop or sbb loope insb das inc jecxz mov dec adc and repz add cmc addr16 adc nop ljmp jo pop es insl cmc (bad) (bad) nop add sbb inc and arpl je dec repnz push cmp sbb add add dec push xchg in (bad) aaa dec in (bad) loopne sbb pop (bad) and mov jb jmp fprem jbe mov mov iret cmp sbb repz inc and cld push clc adc dec nop and cmpsl fistpl fldt xorl xchg shll mov add cli push mov adcl out repnz lea pop add fldl dec jb (bad) lahf adc add (bad) js jo jns fdivl out sbb sub push or shrl sub xchg jbe lea cwtl aam les addb add inc cmp lods aaa fistpl and add shrl hlt test sbb stos je xchg inc push aad push adc lcall mov adc int3 sahf enter inc dec call push fcom jge xchg mov push mov jge jnp leave cmp pop xor mov (bad) fild pop sbb call ret (bad) sbb fs push mov add fstp mov (bad) (bad) jb or pop xchg hlt inc lock add xor cmp jae cltd and cs hlt cmpsl imul addl dec or jl (bad) in push leave sub add cmp (bad) (bad) pop push push fisubl shlb cli and in into xchg testb (bad) gs xor and and cmp test lods andl pop shl and inc (bad) addb inc int3 out add sub imul outsb push inc aad push cmpsb dec out fadds add rolb outsb test mov xchg push dec or adc cli fildl and ja cmpb pop adc adc scas mov movl pop or xor jmp jne jg lock clc (bad) push fisubrl xchg dec je in daa mov sub lock test sub fimul mov mov pop in andl and inc stos xor outsb or or ret pop (bad) movsl xchg cmpb rcrb cmc rcrl sbb fstp mov xor add adc lods mov jge mov cmp stos jp push xchg jo es push mov jo jb faddl push jo loope imul loopne xor loop ds inc outsl add sbb fstpt mov (bad) add pop cmpsl mov addr16 inc rcrb or ds mov mov sub test push rcrb rsqrtps stos (bad) not popa lock iret push out jae cmp jb orb push stos or mov cmpl dec je inc les xor (bad) jecxz sahf push out sbb mov push xor cs push xor inc data16 xlat mov jle jecxz mov test push lret inc xor mov dec dec adc dec and sbb mov adc jne sub (bad) decl mov mov sbb aas imul inc inc inc inc fwait pop sub addr16 adcb or mov pop add (bad) mov mov cli inc adc jns cmp cli rorl mov push mov jbe addl pop add in inc sub and ljmp cmp incl fimull jb add cs fsubl add dec xchg dec loopne mov (bad) (bad) jmp bound jb cld negb add mov fnstcw call (bad) adc pop hlt add inc loopne dec movsl push jmp inc pop add jo mov cmpb andb je jl add hlt rcrb mov ss and xchg push hlt push dec push xchg pop dec sub bswap insb add xlat jmp (bad) shrl push adc pop sub cmp cmp xor jbe sub push test fnstenv movsl inc push mov xor cmpsl rolb gs pusha lock cmp adc and pop pop int std (bad) dec or mov orl push loope mov mov mov jo ja mov imull mov call in test (bad) jae mov adc sbb and pop ret jne pop cmc and adc in add pusha push test sub mov test cs andl imul push jbe push dec pop xor stos lcall cwtl push fdivp mov cmp ja pop cltd inc pop cmp adcl ret or xor push jbe push loope,pt push rol xchg ja lret jne jge cmp (bad) jns lock ja push insb stos roll scas fs (bad) mov popf mov pop xchg xchg dec adc nop rcrb in hlt push inc outsl add xlat pop inc inc add inc adc sahf (bad) ss andb into jbe jl and adc add adc jmp sub and mov rolb and and sahf xlat cmp jbe loopne icebp jnp fistp push cmp sub jle bound and xor mov sub mov cwtl into and cmp push movsl test in inc cmp pop push or adc jae mov or add add imul ss fdivrp xchg adc push push out loope loop and lahf mov push aam and fmul inc in jb pop push fldl pop lock pushl push ljmp and push popf pusha lcall into inc into outsl in pop inc clc call xor mov cmp pop fucomip and lea and push cwtl jne jne scas add pop mov int3 jno subb mov jno sub xadd ljmp inc fsub outsl jmp idivb add sub movsl fs push and jae add jns and mov push out jae popl incl sbb inc sub jb,pt and nop push sub push add daa xor add dec enter push xor xchg cwtl call add jbe jne loopne jae xchg (bad) xor sub or adc and mov cmp jae lods aas cltd xchg adc fadds hlt adc push mov sbb dec push cwtl (bad) (bad) sbb mov addb adc fnstsw add repnz add pop imul popa sahf xchg imul add xor loopne or in (bad) jae sahf cld mov in mov out inc dec sub lods rclb sti loope sbb sbb cmp add rolb or cmc xor and mov xchg popa mov inc dec xchg je lock aaa mov in in (bad) cmp and (bad) xor add xchg dec inc scas inc adc aaa aas mov or imul add xor cmpl push sub cmp mov adc jne rcll add loop pop mov dec jb addl xchg pop repnz adc mov cmpsb push pop scas xchg inc lods out add aas pop add adc imul test scas or and add and and lods rcrb add sbb jnp sbb rcrl and mov push and shrl jne loope cs lock xor jecxz add push es add and in out test rcrb and sub sub je fwait mov lret or and int3 mov mov popl jmp aaa lock rcr lock adc jbe mov xchg adc inc fsubrl or sbb pop enter lock bound push push and sbb int (bad) ds jge je inc adc je dec sub sub enter dec loop out pop mov jne aam adc add adc push xchg adc and popa fcompl adc jbe push pop xchg ret dec push pop mov enter setns scas andl cmp mov push mov mov mov repnz or mov xor decl je push aas (bad) arpl cmp jb shr or push int3 rol aam loope pop push inc roll sbbl pop out xchg push test pop sahf hlt sbb sbb inc divl inc rcrl ja inc fsubrl cmp js pop sbb sub sub and pop jno push pushl push pop fcoms mov outsb pop or mov push push mov adc add mov or mov test rorb mov popa xor cmp fdivl imul or pushf fcomp out shr movsb add orl inc add pmaddwd sub or (bad) ds je ja int3 stos push jmp jbe hlt adc fsubs xchg or (bad) dec mov and lret rcll decl fsubs mov cmp jle adc aad dec sub xchg sti pop add xor xchg mov jle hlt or adcl sbbb dec cmp (bad) xor adc daa or (bad) mov inc or (bad) and jo jns (bad) aad inc push call sbbl cmp cmpsl or cmp xchg (bad) sub jp or lret int3 aam mov and js hlt adc out (bad) call nop xor jno (bad) les call jo jae in pop or jbe or and es mov xor rcrb dec add xchg pop scas or add lea inc add out jno push jecxz add aaa aam out push int3 xchg cmp movsl inc mov rorb pop fildl (bad) es lock adc inc shrl in pusha dec fisubrl jb lret or and imul and inc (bad) mov or sub sub and rcl rcl mov enter lock push cmpsb out mov (bad) in inc push cmpl and cmp ds enter mov out sub push mov sub orl (bad) mov add stos sub push repnz mov jnp ss xor clc adc mov xor (bad) push push (bad) adc adc bound add sub rcll push xchg jo cld lret dec mov jne pop roll mov xchg mov or lods jmp xchg movb fs adc fstpt je inc shrl test mov push or pop pop add push jbe scas pop add or push or mov jo or ret and jb sub add ret adc out add jmp jo pop ljmp dec lret lret test mov mov addl add jbe sbb nop xlat cmpb xor test mov rdtsc fimul xor cmp xor dec add je sbb ss xchg loop cmpsb pop and mov and inc cmp push addl mov into push (bad) sub cmp mov ja jp inc mov test xlat mov xchg pop and or jle into (bad) lock lock jno movl ret sub dec ret adc out test cmp mov jl and mov ret xchg mov sub pop cmp sbb push loop adc jbe and xchg push dec clc (bad) js xor popf ficoml sahf and pop push mov push or dec cwtl push jl cltd int3 pop pop add int das lret xor lcall (bad) or jmp or sahf rcrb jl popa mov cmp and push inc xor loopne pop sbb mov sub push sub add dec adc push scas icebp dec add mov sar xchg cmpl add aam je or push aaa fadds push dec add push fwait adc idivb popa adc cwtl jb mov mov dec insl int3 loope inc add xor jb cmp in xlat (bad) jae xor pop hlt mov jne (bad) icebp fs fistl es ret jp push clc fwait add sbb or es push mov sbb xor mov mov aaa pop xchg ljmp ss add or sarl lea and push xor sbb xor lret bound dec fstpt hlt mov fcmovnb pusha inc sbb add mov mov sarb shrb paddd lods dec xchg cs imul addr16 shlb jle iret inc pop push and mov jle dec push ret add js push aas cmc sub xor rol (bad) and dec add and les and cmp mov adc sub or xor add scas out adc xchg xor cmp out xchg jle cmp inc pop add sbb jo mov or fadd add sarl mov daa dec pusha mov bound orb call cmp mov cli mov jae adc sahf jp jo ljmp inc xchg push fs cmc push fisubl dec int add mov insl xchg sbb xlat pushf and sbb xor test adc xor inc jb push ficompl jb sti bswap ss mov jb ds sbb dec push push dec dec (bad) aam sarb movl push push sbb push add cmp (bad) mov mov add push push pop mov enter xor inc aad jb or std sbb mov mov fadds pop or andb cli push sub jbe iret xor xchg (bad) push and xlat lock push shufps dec and jge sub push xor pusha or dec mov sbb sub nop pop push aaa mov lret adc mov mov xchg clc test jecxz cld xor cmp aam ljmp ret clc inc jne pop or or into mov jb js inc dec and shr dec cmpsl jp imul jo int pop imul and lds ljmp push pop pop dec insb test pop xor adc loopne cmp lock sub mov cmp lahf add (bad) push inc hlt decl sub data16 lods inc inc jb test imul pop dec fadd mov pop mov outsl adcl and mov and jecxz add or cs mov rolb std fwait and mov dec ret mov push add lods xor push push in and pop mov out (bad) rorl jnp add loop sub fsubr clc cmp sub lods inc jae dec mov mov int3 jnp sbb cli iret lods add xchg (bad) clc rorb cmp jne cmpl jo cmp inc adc cmp jne jl test dec cmp sbb shrb js mov mov add (bad) ss xchg jmp fwait xor daa pop test and pop dec xor loope pusha and movl inc test jns call pop mov cld cmp cs js adcb test or add pop leave dec inc loop push mov subl inc scas orb pop mov or push lea adc xchg sub push push lret pop xor pop iret inc sub adc mov pop and nop pushf jb rcrb nop push push outsb pop in push cmp inc scas dec xor push test hlt popf cmp mov fimull cmpsb cmp pop fistl test and adc or or and and fistpll daa sbb enter sbbl aas sti or scas push push push lret and lret in std mov cld adc stos scas rorl out push mov repnz cltd mov xor cmp pop insb sub add push clc inc ss sbb or icebp jbe flds (bad) cwtl dec and mov jb push inc push sub xchg push add xchg ljmp and dec pop fisubr jo mov add add and aam sbb add mov out icebp jle sub push jno popa pop cmp dec pop push pop cmp mov jge call push push push add pop icebp sub add pop fstps sti jae mov cmp push sub sbb cltd add jo push mov jle jmp jmp xchg ror lods repnz sub sub lret rcll repz add xor xor jecxz jle mov pop fisubl xor cmp xchg in xlat and add jg xchg es or push adc and cmc or int3 sbb inc cmp cmp pop mov push stos inc sbb and dec (bad) cmpsb ja fimull cmc cmp addr16 loopne loope notl jmp (bad) idivl or daa call int3 roll cmp cld dec mov jb fidiv push xchg into pushl jmp push mov out inc push sbb jb pop fwait cmp imul lock xchg mulb cs dec xor mov add call sti or jb and lods add cwtl pop push push or mov lret push (bad) push popa imul in dec sbb jae lock lock loopne pusha loope mov js ljmp clc ljmp inc loope je loop in gs movsl leave jae inc push cmp cmp add cmp add inc popf sub mov sub inc pop dec inc fistl sub cmp push dec pop push dec xchg test dec jle imul mov add push mov ret adc mov std push add cmp jecxz adc cld outsl or inc add test push fiadd ret loope sub shrb gs sbb cmp mov cwtl je push push adc pop lds jg ret add (bad) fimull test fmuls adc push add lcall das test pop add dec rolb xchg rolb addr16 cmpsl faddl shlb pop sub mov pusha test push jl or xor jg adc fldenv push push jmp cmp in jbe sbb or jo mov or inc or lods pusha js sbb ret sbb mov rcrb rolb lret mov inc pop pusha add lock push mov les pop mov adc addl dec lock movsl sub adc (bad) int dec jns outsl inc sub sbb shrl cmp lret xlat subb pop mov sub mov aam xor pop lahf xchg pop or test insb inc mov pop or or and cmp push pop jle pop pop pop xor movsb inc xor pop std dec cmp or or aaa out and inc sbb mov in adc xchg dec jae inc jmp stc adc in mov in mov mov adc xchg adc jae in add nop mov pop adc or cmp scas ficomp or je leave push dec sbb cmp pushf and sbb test mov mov (bad) mov fnstsw imul mov rcll cwtl fs loopne (bad) cs push xor je add add and cmp clc outsl add test xor hlt jmp cmp mov je adcl add sub or sub inc adc popw mov inc mov stos sbb popa mov or sub push sbb inc xor ja call sub pusha andl jno inc and push aaa sub rolb pop or test or jp jb pop fmul insb imul pop jmp adc adc add and jnp es loop movq jmp sub fsubr adc or cwtl aam sar or cmp addb imul or inc sarl sub sbb cmp rol adc inc jne mov hlt movsl (bad) out pop push cltd mov inc je test push in mov cmp or mov mov inc xor mov xor xchg pop mov sbb push mov rolb lods pop hlt cmp imul push cmp sub call sbb sbb gs sbb adc insl pop loop cmpl sub icebp push jp xor sbbl inc sub lock ret fcoms cwtl mov (bad) or adc into lret xor jle sbbb jne aaa sub pop jns adc andb inc push mov cmp je sub orl adc sbb fisubl inc mov mov stos pop mov nop hlt dec and in pop add adc jb addr16 mov aas jae mov inc in icebp cmpsb fs push repnz or ja or xchg lret jp or pop or dec hlt add or pop mov (bad) mov adc lcall ret push mov pop mov lods xchg jno xor jne add lods repz pop or sahf ljmp sub sbb (bad) popa lods insl (bad) mov sbb movsl sub in je data16 sub mov jg lea movhps or mov xchg adc (bad) jne cmp je adc add movsb popl push cwtl clc addr16 mov sbb inc add jmp cwtl cwtl std inc ret iret out dec fwait inc in clc jmp mov fnstcw jle (bad) lret testb xchg mov hlt cld mov sub jmp loopne fcmovnbe (bad) (bad) inc mulb inc mov loope cld loope mov cld imul mov pop (bad) and cmpsl push outsl movb repnz es xor js jmp or lcall cmp jne adc daa push rcrb jne dec add push mov inc (bad) xlat xor xor mov sbb out dec cmp hlt ret sbb mov push scas leave and fsubrl jge xor or or lahf adc pusha out pop adc mov aaa or sub cltd js inc dec lahf mov pushf dec sahf sbbl jo jp push andl and cmp jne lea aaa mov adc push fdivrs pop scas flds mov mov das incl in andl js mov mov cmp hlt pop insb fsts and pop sbb icebp lock test inc ror mov rclb cld or fcompl icebp dec insb popa push mov xchg add ds or add add mov lods ljmp pop cli test dec cs pop cltd mov popa jne mov push add dec xchg dec andb mov js xor imul mov sub clc mov loope cmp pusha mov cmp fdivs lock fildl sbb xchg pop push lock shlb pop and out fldl sbb or (bad) jbe sbb loop clc lods lret pusha add mov rcl add push sub jecxz (bad) pop lret outsb jbe mov insb cmp inc cwtl movsb subl inc cmp mov xor mov stos fwait pop cmc sub fdivrl push jbe rcrb sbbl xchg call lods faddp sbb (bad) sub out pop pusha cmp dec (bad) mov rolb cmp adc mov pop sub add fdivrp (bad) push or add loope dec inc insl adc and stos push adc rorl mov sub (bad) je xchg fnstsw inc into inc sub rorl lret and jbe fdivs decl and imul lret (bad) lock xor sbb adc xchg rcr mov sbb in xchg or sbb pop mov outsl bound ret add out mov mov mov sub mov cmp pusha scas push jo test xorl inc xor pop lods and mov mov fidivrl cmpsb pop lret push pushf mov mov mov lods push mov fld sbb inc push shll (bad) sub test icebp add add (bad) out inc test test xlat xchg push or cld dec orb cmp punpckhwd add mov push dec (bad) (bad) jo repz jbe sahf ret fmull push test lahf mov pop (bad) mov test add xor imul dec pop xor sub sub push and icebp fisubrl xor dec (bad) dec insb push add test aam ficom sbb and mov and sub jae test dec dec mov test jp pop jle mov mov or stc outsl push (bad) sub xor das sbb push hlt lahf mov ret pop mov fadd sbb inc xchg jl sbbl or jl jmp or cltd dec mov xor imul mov or pop pop lock arpl (bad) fadds add icebp gs jmp inc push jmp xor cmp sbb jmp cmp or sub adc in lock lds push push sub mov adc add arpl dec mov and daa push mov fnsave mov adc pop dec sub add mov lcall mov hlt test outsb popa inc and adc push jno addr16 ret jp sub inc or and or push and cmp lods rep mov test stc pusha or push aad xchg and sti xchg or test adc gs sub or add dec jno pop sub cmp pop sub dec test mov dec xchg ss adc xor pop pop popa push aam jnp xchg mov mov les jns mov jle push sub int3 sbb je icebp pop inc mov in mov cmpsl add cmpsl xchg sub jno and inc cmpsl mov jle dec sub jecxz,pn or inc sbb pop sbb dec cmpsl pop out outsl xchg inc mov lea pop (bad) mov rorb mov stos movsb sub cld test movsl inc negl sub cmp add mov (bad) xor (bad) dec dec popf mov lods or lret sub or mov movsl push addl mov pusha cmp sub rorl push cmp sub mov mov cli ljmp test mov inc xlat lahf mov subl adc xor inc insb mov ss jns jle (bad) pop imul nop xchg dec or sub xor pop mov xor or rcrl addl dec mov adc push or adc inc scas pusha inc xor insl xchg rcl addl fs adc jmp repz jb lds pop adc fsubs push adc mov add mov rcrb das lret pushw mov sbb inc jl fistpl sbb adc outsl sbb xor or pop mov popa jmp cmpsl push cmpsl add jne jne xchg inc add test shrb xor sbb loopne pop out adc add push jno lods mov mov jp push pop mov xor or mov in jmp mov adc imul lock leave ret xchg out sahf dec lds cmp (bad) jmp ret data16 or cld inc dec xchg test lds jb push push stos inc push inc push push push sub sbb push xor push cmp pop ljmp enter jmp cltd xchg cltd push jno jb xor and xchg mov add sub sub mov xchg and inc inc pusha dec push out inc push cmp cmp add and ret add pop xchg adc adc push cmp in pop add test xor inc xor mov in call push add jo cmp jo cmp repnz push mov or jge cli jg faddl lea je xchg sarb dec cmp lods jns lock or add add inc shrb jmp xor enter (bad) imul and lods andb ret jp lods cmpl loope int xor ret push jo loopne movsl mov es movsb jle xchg in jmp mov add cmp push stc mov jp pop ficompl dec sbbl inc insb mov daa pusha push inc (bad) pop jmp add sbb pop xchg xchg mov xlat jmp out cwtl shrl cmp test push fmuls dec (bad) inc idivb pusha pusha into jecxz addr16 lods xchg cmp aad cmp push fsubl sbb repnz lds lds push jne inc test stos and (bad) jne sbb inc sahf scas pop add popa sbb andl or jno pop mov enter movb and imul dec or ret mov loope jo inc pop ret and inc ljmp inc push xor ja xor movsb cmp dec mov loopne popa idiv ficompl sbb lds or dec arpl mov or inc push jle outsl add sub push add push xchg adc popa mov outsl rcr xor push mov adc push add inc outsb or popf outsb lods xchg cmp jne and or sbb push aas or andl add jo in push movl xchg inc mov jne cmp aad add pop daa sbbb xchg cmc xor mov cmp stos adc and or dec or stos stos lea cwtl jp jp leave aam mov xchg es nop xchg dec xchg jmp cmc mov ljmp and push mov sub mov jo bound lock inc pop stos or aaa xchg arpl test std pop outsl pop mov cmp pop jmp imul mov sti in xor lcall add xor cmova in ret jmp xchg in test into and test int add subb stos push nop outsl outsl movsb test je fwait mov adc aaa gs sub sub sbb jb rcr mov inc cltd jle mov xor sub mov xchg mov xor sub fwait ss out mov out and xorb aas push cmp sbb push movsb jp lock and jg push cli movsb pop idivl dec cs sub pop jmp inc mov xchg lds mov cmpb sbbl sub lar rcrl pop cmp mov (bad) je lea in cltd test lods inc cmp cmpb pop push mov adc ja push (bad) xor push mov mov dec call clc push sub (bad) testb cltd int3 xchg je pop mov push xlat mov add mov lcall ljmp icebp push mov sahf pop aam fidiv mov arpl xor add arpl loopne,pn es shlb mov enter add pop inc pop daa fs or xchg jbe (bad) fidiv dec cmp dec cmp inc inc andl dec ja and stos mov push mov adc xor lock insl nop inc test andl jo leave ja sbb add push pop outsl or mov pop jmp push or lea dec dec jl adc cmp ds mov out aam jbe mov leave je cmp jb inc xchg sub jno xchg adc pop outsl adc add or add xchg jmp nop sldt sub sub sbb mov push add add pusha xchg jne mov mov pusha push jo divl add add jmp pop jecxz rorb pop xchg leave adc xchg adcb sub xchg add nop mov add pushf push add mov leave loope sti lea push inc pop pop inc ds in subl mov imul andl pop jg xchg cltd inc insl push or lret add movsl add lock jnp loope cmpsl and cmpsb xor loope add shrl cmpsl add sahf outsb sbb adcb lds das add movsb lea cmc inc loope xchg pop lock sti outsl test adc pop pop data16 mov jns and xor push sbb pop dec in stos aaa dec jae mov movl rcrb sub rcl aam jecxz cmp adc enter sbb add mov xchg pop out add sub sti (bad) (bad) push jne xchg push popf inc add add sbb and shlb minps mov push in clc in adc lret push ret pop xchg cmp je fstps add sbb (bad) or push dec pop push sti jle jg adc cmp jg fmull (bad) sbb lret xchg inc jo mov xor mov ljmp fimull sub lods or ljmp adc add test mov cmpsl test xchg repz cmp dec jno adc into add mov and pop mov and dec call fs addb mov in mov inc or cld inc loopne push mov cltd out roll mov xor cmp jne mov js jmp std add adc push pushw mov imul stos ret sbb ret cli cmpsb adc stos (bad) push mov incl or or sub lock testb lea add ss (bad) (bad) cmpsb xchg orl ret (bad) sub js dec and stos fwait aam (bad) xor and stc or test sub sub add aaa test mov enter adc adc mov and ret lods aaa adc push fwait movsb push add push sbb push inc pusha adc movl out lea push ret bound les je sbb cltd push arpl cli jg push sub dec sub adc daa cmp lret test sub inc lcall movsl push add cmp mov dec test push dec cmp push jo lret pusha mov add stc and jo xchg (bad) push sub or popa fsts mov faddl imul push mov es cwtl push adc ss ret inc jae mov xor sub and cmp ficoml jge cmpsb mov pop mov mov xchg inc pop inc in lea aam push adc test inc adc mov cmp mov push push jbe mov jecxz jle data16 dec cmp cmp mov pop mov fnstenv shrl mov mov mov mov xchg loope push jle cmpb inc inc inc fmuls mov clc shrb test enter or hlt out and movsl je inc cmp jl clc pop inc push push push push (bad) xor inc xor cmp sub ffree or sub sub out xchg clc mov and out xchg inc mov (bad) adc xchg or dec je adc push jg clc push mov lea jns imul roll or push pop dec sbb pop xchg sub rcrl sbb rolb ret and jle test push (bad) push jbe add andl leave inc call cmpxchg and mov inc pusha inc mov pop cmp add pop dec ret outsb xchg daa cmpb inc pop pop pop in add dec xchg and dec fnstcw mov push inc inc outsb cmp fdecstp dec inc inc sbb sbb xchg lret mov rolb push jo mov xchg pop and inc pop dec movsb jb lods sbb sbb notb lods icebp inc dec cmp je mov test ficom cwtl cmp popf sub or ret dec es dec cs jmp lea test inc add adc cli data16 xchg jo imul sub nop ret mov inc lock push pop (bad) push mov add dec or pushf gs movb mov or repnz je mov push mov add dec pop inc or sub adc lahf (bad) cmp adc jecxz sub iret jo pop dec scas pop mov push inc loope push fimull leave sbb cmp add test jne jae ret dec rol sbb push pop fild addr16 mov push inc js mov imul push lods jl stc or jo or sbb dec xchg add mov (bad) or in adc bound stos vpmulhuw imul (bad) jmp imul pop shll fwait push mov add mov (bad) dec bound add xchg add sbb mov daa cld mov mov aaa mov adc dec and enter add stos mov and xor add cmp bound adc mov or mov or pop js movd adc ja jg add sbb push push pop push rcrl xchg stos scas adc xchg adc loopne adc mov out and je jb (bad) loop jmp invd or test push mov pop add bound fsubp lods sbbl cmp push cmpl push or addb inc add mov cltd dec jo add inc std cmpsl in and jae lea push sub sub and pop mov dec pop mov nop sbb adc push add sub dec (bad) sbb sbb and xor or sbb pop xchg or fdivrl sbb sbbb in fcoml sahf inc pop mov test xchg and add loop xchg add adc gs add inc adc mov icebp add add int push mov pop jbe inc and cld bound jl cmpsb insl lea and inc loopne (bad) lret sub xlat mov mov (bad) mov jnp xor adcl push add push xchg push xor lret sbb leave mov str aam punpckhdq sub cmp add faddl fsubr xchg dec outsl lret int3 ss loope push mov arpl sub push das mov cmp add or mov sub fiadd sub cmp push or je inc pop adc pop shrb add cmpsl (bad) mov xchg cld test fs or pop test push mov or push outsl xorl jae sub adc and fs push and inc or fisttp roll fdivs dec mov jmp repz dec adc and js dec jl loopne cld push mov and movsb pusha cmp dec inc cli cmc xchg xor cmp xor mov or lods dec cmpsb mov inc adc (bad) fmull in pop cmp or adc xor js and (bad) mov sub jb call mov mov addr16 mov test sbb jge add and add inc pusha loopne outsl push leave push inc and pushf pushf or xchg fsts mov scas and xchg cmp sbb jecxz call lret ss nop push pop loopne aam aas bnd cmp or lds add (bad) adc mov inc dec stos push add adc and sbb mov insl sbb in xchg push je outsb repnz jnp mov adc dec rcrb mov and push test mov or test ss sub lea mov dec mov mov sar dec jecxz je imul mov das push or ret jb mov sub xor fnop push push jp cmp jns sti fnsave push push jbe sub adc and or pop dec jmp cmovb push inc cld pop fnstcw out mov fstpt and adc popf pop sub lods or mov or in fisttpll jp mov (bad) fwait mov sar rol mov and xlat lock loope mov pushf and fs push fxch iret or loopne jg and rol mov mov and in or pop int3 out (bad) or movsl js fadd adc neg jge fldl fldz ret or bound test (bad) shrb aad ret add faddl pop pop in in leave or pop pop faddp test pusha jge jnp xchg jae mov leave ret add (bad) lret js add loopne (bad) loopne push arpl nop sbbb adc add add arpl (bad) xchg xor and mov adc jp push cmc gs add hlt add add insl or add mov frndint fsub jb pop pusha fsub f2xm1 pop mov std fstp ret movsb inc push imul add icebp fs sbb fldcw test mov pop call sub and push ror fldl and rorb lock movsb enter or add or fldt xor or fcoms ret outsb cmp pop pop ret adc jp inc cmp xchg loopne in arpl fdiv adc cli adc pop outsb sub cmp les add mov cld fwait jmp xor mov or dec jb out std jo mov fcompl stc jle inc (bad) jae fmull push inc pop ds or jbe push jmp add pop adc inc pop cltd jae test test add adc cmp mov sub nop jne fcoml pop (bad) syscall out adc inc or cmc jmp mov sub pop negb and push mov inc stos ljmp and fbstp push imul push sbb or ss mov inc sbb je pop dec dec orl out adc iret push (bad) sbb movsb popa add sbb in lahf push and sbb dec and arpl xor test and inc jne inc adc adc and inc mov outsl (bad) push sbb fadds jo in (bad) rolb cmp je movsl push adc mov jecxz cmp (bad) rol mov mov push outsb add mov clc and cmp std and add adc dec call mov (bad) mov push aas jp mov push dec outsl adc add inc xor sub pop clc (bad) into jne test dec or daa sbb rcr (bad) sbb or dec lock pop xchg in adc sbb inc jmp jb sti (bad) sar popa out dec push sub incb shrb cmp pop fs nop jns mov popa daa sbb fidiv arpl jle mov add fcmove adc sbb or or or push jl sahf push cmpsb sbb lret jmp inc pop jno pop xchg mov outsb mov jp pusha pop xor loop addr16 xor rcrb push in push pop push inc jno mov aaa xchg lret xchg cmp inc dec adc xchg (bad) sub sbb js popf fs sub rolb push js enter test imul add jbe jo dec lock mov in fisttpll or movsb jb pusha (bad) dec sbb addl mov cltd sti js jg dec iret mov rcll push add add and jne add pop xor mov jl sbbl call inc and sbb mov sub test dec loopne inc dec cltd and mov adc mov sub push and cmp notb push call fnstcw adc notb cmp mov xchg fbstp adc or into mov add mov (bad) xchg into jns sbb mov clc cmp jmp push lar add dec add cltd fdivr mov and adc add (bad) add in mov popa add jmp xor mov (bad) repnz adc hlt push adcl inc aaa adc lahf clc push mov adc add mov xor xor test jo push (bad) mov inc ret test cmpsb fs or call frstor loope aaa fwait lret push jb adc add mov push pop sarb push inc fisubl addr16 fwait sub jmp push or pusha adc out inc decb dec call dec jle mov mov call mov dec or push mov xchg nop mov sub cmp xchg (bad) andl cwtl (bad) xor test paddd push or out xor sbb cmpsb add add xlat add insl add add add leave xchg (bad) xchg push push push sar or pop in jg bound add and or mov inc cmp test adc ret inc mov jge push pushl adc cld pop in fistpl nop sub je or fst or je dec fnstcw mov pop nop nop jmp cwtl xor and punpcklbw loopne rorl mov add xor pop push fsts mov pop (bad) int3 cwtl sub dec adc sbb fildl adc sbb jne,pn outsb add inc shlb xchg mov fiadd lcall bnd hlt pop mov inc adc fsubr fnstsw push pop ret push aad xchg add pop mov or add and cwtl xchg or jl sub adc push adc fs add push ja mov lds pop and inc cmp roll cmc out xor stc dec push add popa push ret or and jg dec bound inc push or and sbb inc ja jmp stc jb mov shlb add mov inc pop addl aam test dec gs loope rcll dec or je mov je push mov mov adc dec and jle popa ffree das mov loopne daa push xor cmp cmp shr imull out sub xchg (bad) inc dec rcl mov sub dec fs and push repz mov je xchg movsb and aaa loope mov add in push add scas movsb bound dec jmp lret les push lock push mov dec lss mov push mov lret and mov adc adc dec add cmp mov mov inc cmp or mov adc mov jb mov jb or lock add pusha (bad) push xchg ret pop mov xchg xchg mov cmp movsb aas dec add inc sub jbe lods invd call cmp movsb daa adc nop jle adc adc xchg add mov (bad) call imul test add fwait inc ret xor hlt stos out mov cmp add data16 out pop pushf ret and push movsl stos (bad) xor jmp mov push push loopne sbb mov cld lar shrb sbb mov inc add lahf xchg or push daa jmp push mov add or xor pop push nop lods jle dec dec jne mov test je sub pop xor enter and in sub shlb sbb sbb xchg adc add pop aam out adc pushf std js add sub add adc ja push push push or pop mov push fcmovne and pop sbb lret sbb adc push sbbb or jg cmp sbb xor mov es mov arpl xchg andl sbb imul jae leave adc js stos in adc cmp lahf adc jnp cwtl loopne lahf fcom pop icebp or cs inc dec or inc pop and rolb mov mov je hlt or xor push ret adc cmp (bad) xor or (bad) xorb xor mov imul mov adcb push push (bad) and mov pop sub (bad) sbb (bad) push sub sub xor xor movsl dec fcmovbe lcall lods sbb inc movsl imul es dec lcall jae dec movsl push dec push and movsb es pop dec and aad pop dec movsl pusha dec movsb sbb push xchg jo dec ficoml dec lods sbb mull dec lds ds xchg aas mov in xchg mov nop inc cs repnz sub sub pusha mov popa gs mov push xor or push loop xchg leave aaa insl test add shrb les cmp push sbb test inc repnz sub dec cs fsubrs mov fsubrl loopne sub xchg lret nop in call cs and aam xor inc xchg stos pop xchg inc mov aaa and sub lret nop push dec add mov or dec popa or dec lret nop pop xchg dec adc in mov mov shl xor repz xor pop and mov sub sub cmp gs xor dec cs mov jb xchg outsl cmp aas inc inc lret aad inc inc inc mov xchg inc dec sub nop pop sub pop montmul cmpsb xchg push mov add pop mov and scas daa loope (bad) repnz push dec xor jp fwait cmp (bad) xchg cltd addb inc arpl imul cmp adc ss and and sub in in xor cmp imul fldt cmovs xchg xchg push push pop pop xchg xchg xchg xchg pusha fs xchg jo js add mov test mov xchg cwtl pushf mov movsb test fsts inc mov adc enter xor fcomps loopne fs dec es es lock clc fmull fs jno add (bad) add xchg dec cmpsb dec adc cltd fs and cltd fs sub xor fs dec cmp push (bad) dec es dec gs xor mov push adc xchg dec pop pusha mov pop pop dec lods add inc push mov insl inc push mov and push adc and enter cli adc sbb sbb jge cmp pop xchg cs paddd mov xor push cmp pop int xor push cmp sub in leave in push xor aam xchg scas cmp xchg dec sub jnp adcb sbb jge mov fnop (bad) mov push stc adc iret push les (bad) xor push mov popa fmull outsl push pop aad pusha hlt cmc movsl mov pop or jmp lret mov xchg push sbb fimull cmp dec enter fprem (bad) lods mov ds push add lock fmull dec lcall rorl or mov inc xor sub mov rcpps cs (bad) notb cli aad mov sti pushf xor cmp sub push sti xchg xchg pop jmp and je jle call jmp mov add add push or sbb dec js jl add loope in fcoml adc xchg lods and xlat pop mov jecxz push pop jp pop mov pop gs push mov mov sbb cltd ljmp push jae and in pop adc sbb in sbb and and cmp cmp leave in lret inc mov scas call dec xchg jb bound and (bad) (bad) mov ret loopne dec lea xchg call shrb sub adc and sub and clc sbb and push and imul insl push sub push sbb rep xor push daa sub or xchg push movsl xchg ss sub push sub xchg pop shrb sub imul pop lods dec and push lcall add push test addb jb or orb xchg cmpsl dec js cwtl clc add icebp mov adc test sbb push or xor scas mov mov fcoml test inc xor test stos add xor out and add jmp rcrl sub movsb mov cmpb sbb adc pop rclb lret push lret add adc popa add subw push fcompl mov mov xchg sbb mov push nop outsb inc xor push data16 dec mov adc movsb jmp push mov cmp aam xor les in imul fcomps insb insl mov fdivrl or jg push push jbe outsb add dec sti and adc popl sbb add add inc insl repnz push or aas rcl (bad) adc sub sub mov rcrb mov cmp je pop out mov inc jne addb cmpsl adc out or push or insl adc into push push mov jp mov in push ret fcoml mov push gs in or (bad) jp dec cld cmp roll adc mov nop std outsb (bad) or sti or push push push jp xchg sub pop add inc mov mov imull dec cmp add cmpl mov mov sbb mov mov enter in push adc outsb out je adc imul or add movsl loopne lea aas sub jle add mov xchg push or push and adc in or negl pop add aam lahf push mov mov mov add lock cld sbb xchg test call xchg leave xchg and shrl movsl mov rclb (bad) les enter adc cmc lcall mov pavgb mov aam jmp mov lods aaa pushf and dec rdrand das int sti add (bad) int3 adc rclb mov push in stos stos lahf inc add dec mov dec pushf movsb mov leave cmpsl jge sbb inc (bad) out add and (bad) icebp rolb xor or lret sub sub sbbl lret inc xchg adc inc insl mov call test lock cltd sbb lea pushl addr16 (bad) hlt add or or nop test cli cmp push sub inc pop or mov fisttpl jle scas fildll add xchg rcrl jge add inc adcl hlt push frstor sub jnp or sbb sbb or outsb sbb (bad) pushl lea cld leave ret push adc pusha add push ljmp int or xor lret data16 sti stos cmp adc dec sbb jmp (bad) pop inc ds lea inc cmp ja add jmp sbb push add mov out je sarb fwait js je movsl aas mov mov inc rcrb or jmp or andb jae daa jmp xlat xor loope mov or push test push add and add mov inc and mov push fistl pop mov (bad) mov xchg add or loopne popa and inc sbb xchg sbb inc add cmp ds mov test jmp out and dec inc or sbb shlb xchg add bound pop or mov push pop cmp add xor push sbbl test or or pop lret (bad) in push mov or in add pop xor imul or sbb fnop jmp ret mov dec jbe push sub push or notb sarb jecxz sbb mov push sbb push jne jno test ret inc (bad) (bad) or mov push ljmp je test inc xor add xor inc pop loopne jl cltd cmp (bad) sbb je pop daa sarb mov dec jne aaa das mov push mov nop popf sti aam repz btr push fcomps arpl lds sub sbb and mov pop cmp push adc xchg push notb add repnz sub push push mov xor loopne adc jp adc inc mov dec insb in add cwtl (bad) mulb add addr16 push add pop sub and or cli add loop cs mov roll or out pop inc inc sub pop ret int xchg adc and add add cmpsb orl call idiv out (bad) dec push push cli xchg insb add adc or roll fcomip mov inc addr16 push cmp adc or lods or add (bad) jl inc dec push push xchg dec dec jns,pn mov test jo push adc je xchg cmp sub lock loop sbb xchg fs mov jecxz lock roll jmp (bad) push cmp outsb daa rolb sbb popf mov dec jno sub add jb mov add cwtl cli (bad) lret jmp pop and adc mov leave and mov pop ret test sbb sbb ficompl mov cmp ss pop or hlt loope loope cs mov lcall out jns rcl imul lahf test xchg daa add push icebp and andb adc adc mov adc mov andl push mov push test in and add je adc push mov repz adc ret (bad) int3 lea lock in fwait movsb pop add mov add jecxz ret rorl mov inc cmp je push add xchg enter mov xor iret push push gs lcall or inc scas negb xchg sbb cmp push repnz cld add or enter or mov add or lea xchg xchg or inc scas je push or rdmsr mov rcrb pop adc mov adc cmp in adc int (bad) mov stos inc push stos cmp pop adc xchg enter adcl and pop lcall sbb pop push repnz sbb sti dec mov cmpsb repz popf fdivrl cmp mov pop add lcall sub jns sbb addr16 sahf push pop ja sbb dec sahf push push inc pop pop add (bad) divl ljmp mov (bad) sti addl sub js xchg jbe cld dec mov mov push in imul repnz ret dec movsl adc in in sub mov push or jns cltd cmp aaa insl (bad) in call adc mov dec fsubrp cmp cmp xchg ljmp addb or in in xchg enter aad in cmp mov jb iret out out xchg out lcall lock jb inc lock dec icebp cmp pop mov repnz adc repz in std hlt hlt imul (bad) xchg (bad) std cmc cmc cmp cmpsl div mov and (bad) pcmpgtw xchg clc xchg in fmulp aas stc cmp and mov add cmpsb repnz loopne or or insl cld push push inc (bad) jne repz leave jnp std xor sbb add imul clc mov test popl push lea add rolb add add jecxz mov push shl xor in stos enter cmp push or and add aam or in xorl xchg scas inc repnz push cltd (bad) sti mov cmp sarb dec or aad xchg daa in cltd arpl and sti jmp sbb nop cmpsb out out out mov xchg lock cmp bound dec jae aas repz scas and xchg push inc jbe sbb stc fstpt xor (bad) or mov aad imul aad xchg xchg clc cltd jb shrb cwtl cli xchg jb wrmsr sti sti sbb sti or imul push xchg sub test sub mov test stos in add dec cmp push mov (bad) dec loop xor arpl loope in and clc and push (bad) arpl leave and out fdiv dec pop push pop out mov cmp pop sbb or mov sub into push xchg pop notl cmp inc or sub mov je leave or mov out loope mulb add icebp (bad) icebp xor repnz pop push xchg inc xchg repz sbb or adcl stos or push mulb mov mov push test cmp pusha (bad) divps cli adc je xchg cmp test xchg jo loope cmc sub insl sbb shll dec push xlat inc dec stos add push (bad) data16 test dec insb pushf scas push add push mov outsl jns mov repz push loope pop pop mov jp loop pop push push xchg hlt cmp jo imul adc (bad) xor mov cmc sub lcall in and paddq mov rorl int push call test int3 cmpsb jmp push and insb repz repz into push cs xor mov pop xchg adc mov add cmpsl cmp rcll test icebp icebp repnz (bad) stc cmp mov jmp repnz cmp hlt push hlt paddb test or cmc cmc je mov (bad) icebp mov notl push mov push mov clc or sbb scas add dec icebp xor andnps cld mov and jmp out lock mov jecxz fistpll add mov lret pushf or (bad) push sub or rcrl rol mov cmp aaa inc cmp cmp ret mov adc mov pop mov add fadds cltd pcmpeqw addr16 xor jmp xchg inc and fdivrp cmpsb pop fcmovb and loopne lahf add mov ss pop imull sti pop push daa push repnz iret repz cmpsl cli nop out mov int mov sbb icebp (bad) cmc cwtl stc sub xchg push aas adc cli or lock hlt mov jae xorl ror out (bad) in push or stos out fs int3 or or pop ret add or leave orb iret (bad) push add push or or or lahf movsl sub insb orl xor adc ja sbb aaa sub sbb movsb inc dec jns inc lcall loopne sarb add or lahf inc mov inc pop add sub inc mov repz sti jbe mov ret add jmp sbb push add dec (bad) cmp leave sub inc sbb push sbb mov push ss mov mov sub jmp (bad) rcll (bad) adcb xor lods in test popa (bad) jg std hlt mov push push sbb imul ds add push push and adc jo insl rolb adc rolb xor inc out push mov movsl flds arpl push jae pop sarl imul sar adc popa jnp fadds bound push jg jp push fadds aad xchg cmp (bad) or push pop dec jmp lahf lock sub dec push sub popf sub (bad) mov sub inc sbb iret pop xor rclb push in mov fdivr adcb add pusha in and or dec adc or add je jmp add push inc add push adc add test pop add sar or loop repnz jb jle outsl push cmp inc dec or insl enter adc imul add stos xor and push ret jle and mov dec (bad) ja add shl or add push add or nop and add or lds add push add adc pusha add add or roll pop imul cli add add sbb imull icebp pop push test cwtl and je test dec fcoml sbb cmpxchg mov inc je mov out add xchg loop neg dec cs loopne cmp add (bad) (bad) test xor and or adc ret xchg and orb adcb inc (bad) je jae popf lock push mov movsb cltd shll mov cmp mov add je (bad) dec and mov sub push je inc push pop mov mov movsb ds push andnps js xor outsl adc incl rcrl cmp hlt testb je jno cltd es shll lidtl cmp adc mov mov (bad) jne xor push shl out mov or mov cmp jb or sti std jle ja add jmp push push jb or ja and jmp pop lock inc sbb (bad) push mov adc out pop jo cld es sub je xor mov in ficomp mov div inc dec mov jl dec dec dec dec xlat adc enter mov into jne or and jno sub jp dec xchg mov pop dec jp divl dec xor push jmp mov xchg dec mov nop add js rcll jg (bad) outsl loope hlt pushf jne sbb dec pop dec clc movsb mov xchg add or or in fildl push sub push ss pop jle sub push xor and add pop add pop (bad) mov sbb enter rcl add inc jo and jmp mov push lcall mov ljmp jne and push ret adc xchg or call dec ja out or sub sbb mov pop jg mov mov jg push sbb mov inc bound lret ret out pop in push push leave xor cmp add test sub mov lods rcll push cmp add mov nop xor or mov nop push js cmove adc inc jmp aam cmc push in mov adc jns or add push or push push add stos mov or xlat dec orb or push push pop pop push dec pusha pop lcall fadd jg (bad) jle jnp mov enter (bad) and mov mov loop lods mov and adc or (bad) repz mov adc jne or xchg inc rcll cmc jne fldl jne dec bound dec inc pop les adc sub push jae sbb fistpll mov insl dec and rorb (bad) bound or orb sub gs cmp mov (bad) imul (bad) ret or mov (bad) mov cmp rol and cmp cmc sub push or (bad) push ret pop cld lea mov test nop sbb addl push pop jne pop add push outsl ljmp mov mov push sub and add sub add aam xor or imul sti andb jne sub call add pop mov add call imul sbb daa dec and add sbb inc or (bad) lock inc mov pop pushf xchg sbb sbb loopne sti add sarb push ret rcrb mov jle dec add outsb or xor sub jmp mov adc cmpb jl shll (bad) outsl adc incb pop rorb aam push call pop push icebp sbb sub adc or mov movsl pop mov dec and add push test sti das and sbb adc inc ret ret add xor jg and cmp jb roll sahf or mov push mov dec add or cmp and rorb push dec ss mov xchg loop fprem pop add or add add mov js (bad) je mov pop lds ret mov inc or mov inc cld jmp addl enter add push jl xor add cld dec mov sbb pop mov sti or loop add mov (bad) clc dec (bad) pop adc lea and jo rol pusha push rclb mov ret movsl outsl add push sbb mov decb movsl jl add sub sbb (bad) pop add adc jge aam push dec jns adc test or xchg call add adc adc jmp enter cld lock je loopne inc mov or imul mov inc or cmpsb hlt add shl pop dec dec sbb aam adc fdiv js mov insb dec and mov andl dec out jg jnp inc in cmp or insl add fdivrl mov jmp or (bad) int add ficom ret sub and mov or push xlat push inc dec data16 (bad) xchg fadd inc dec popa jae dec pop push lea sbb inc dec andl (bad) aad jge mov int3 and pop adc movsb ss jmp or fs and aas ret lret mov sub std cmp daa mov and xor jl add xchg jnp lret outsb lock movb pop cmpsb test mov lock movsl add leave xor dec mov ss imul (bad) adcl add std or inc lea pop cwtl pop sub add rolb mov shl not test cmpl (bad) or repz std outsb add mov out pusha lock mov inc adc insl pop sbb jbe dec mov add in and and inc adc push and add dec jecxz dec cmp or ds inc add hlt dec mov (bad) dec jo jns xchg flds cmp lock xor orl pop add fcompl jns sub orb inc roll ret stos inc sbb (bad) js lock ljmp xor sbb cmp mov movsl jmp add das pushf add inc add pushl rcrl push fdiv mov lea push sbb jb and fidivr add ds push or mov rcrl pop mov add shl je lea push pop sub pusha sbb xor or xchg xchg or jmp push and jbe push and loopne shlb faddl add and out test addr16 sub cwtl rorl loopne rcrl dec xor mov push cmp inc xchg loopne cmp pop adc js add push (bad) fidivrl aam test mov dec jns dec aam sbb inc inc push push mov hlt push aas mov or mov sbb inc mov sbb (bad) adc addr16 sbb push je inc inc xor or push mov inc popa xchg pusha mov or push xchg test and lock rcll push into (bad) out icebp sbb stos iret and mov jge mov and jge sub rorb push (bad) xor add dec mov pop js adc pop ds stos xchg or (bad) adc mov cwtl adc add or arpl adc or and mov insb loope and mov mov pop sbb mov xor and xor xor xor push jns pop sbb add das or dec addb loopne je cmp and sub sbbb jl push jmp mov mov sbb mov js xor movsb mov dec and lods es dec std andl mov dec insl cmp or pusha decl add jmp mov cmp aad or xchg outsl imul pusha sbb or insl inc add dec mov mov sub stos sub mov leave stos adc scas sub or jge into jmp pop outsl pop adc arpl push xchg adc jb test stos popf add adc xchg scas cmp mov mov daa mov cwtl cmp jle sub cmp xor fist mov push jmp mov xchg xchg or or clc push adc lods in lods cld and lock add mov and test mov jae pop sub fildl insl mov jmp adc (bad) out cmp inc push and fstpt add jne js jae enter imul sbb (bad) or push mov mov jp mov ficom bound jmp and cmp mov jo cwtl adc pop and push clc add mulb stc sub cmp cmp movsl jbe sub mov (bad) je stos loopne (bad) outsb mov je mov mov xor cld mov sub add jbe cld mov jl incb dec cs pop addl jmp push adc or iret mov nop add mov mov repnz sub stc dec lock adc jg cmc jecxz pop add push push inc jmp xor cltd fcoms (bad) nop xor push into dec and les mov or xchg cmp scas aam add cwtl jge add mov pop push sbb test cltd rolb adc adc mov sub dec leave sub add fnstcw jle xor xor push mov push mov test call push push or xor fstps fiaddl sbb mov push push or lahf adc into mov mov (bad) call or mov jl shll roll bound xor sbb sub (bad) pop clc jne aas mov push or mov daa dec xor fistp and jne inc testl ret enter les xchg int jnp into dec mov inc or adc rcl jae cmp push xor or xchg pop dec and push hlt push daa sub add insw push pushf pop push lea lcall or adc mov orb sbb cmp add repnz mov popf pushf cmovne je pushw push push js subl dec pushf data16 les add (bad) sbb ljmp roll frstor push add jle jp loopne xchg clc (bad) js mov shll push lock (bad) or shr cmp in mov jne adc pop mull into or adc inc mov (bad) fiaddl addb mov cmpb fadd loopne shr sbb loop call loope jo jne outsb mov add inc mov mov xor lock mov jne mov gs (bad) xor adc add add ja fidiv ljmp jmp pop sub push fisubrl enter js inc mov or decb lret push dec add cmp inc scas into (bad) or daa mov push mov jmp lods daa dec fmuls xchg rolb fisttpll jae jno (bad) repnz lods add cbtw dec xorb lret mov test jmp sub test sbb push jno jge pusha dec inc imul inc popa mov or call ss or pop xchg add add jo std push and mov sahf dec lcall addr16 mov rcll mov xor add and fstpl jle and es add rol or mov xor lds outsl (bad) jo pop push add imul addb cmp push adc sahf out mov sbb mov sub fistl adc bound sbb jle popl sub imul sub fdivrp pop ja mov js js insb fdivrl loop call xor mov lcall fimull sarb adc lret js cmovns fadds pop sub (bad) jae pusha and mov and sbb sar fidiv pop jecxz cmc mov mov ja popa sub popa cmp repnz mov lret cmpsb aam ds adc inc ret (bad) xor mov int mov dec sub ds insb fsubrl jne out les inc xchg mov idivl xchg or pop mov xchg inc sbb nop int3 lahf dec push cmpb dec enter inc das xor das adc loopne jns mov add loopne,pn cmpsb (bad) jmp mov dec das jo test dec and jp sbb test xlat shlb dec cmp cmpsl negb and movsb push pop mov mov ret sbb rdmsr or aas js lret es inc sbb fwait std xchg ret jge or sub jnp aam aam je inc mov (bad) push push add rcr mov or sbb inc sbb cmpsl and bound adc xchg adc aaa mov fwait test pop int3 (bad) xchg dec jp or dec hlt pop les adc push inc jb lea push cmp dec and jne xchg in dec js inc inc movaps orl xor lods xchg gs nop (bad) push mov jne or adc pop andl cmpsb es jge lock xchg mov mov addr16 test mov lock inc imul jle cmpb mov lock add or push push cli mov call push or (bad) nop pop jmp add xchg dec nop push gs movsb push adc inc fmuls or dec or and test cmp or ret cmp cli push fs jmp adc movsb iret mov loopne and sub sbb xchg clc or and adc push mov push inc pop fs dec push or mov push and mov rol adc lret and fs xor fdivrl out sub or push xor out xchg xchg pop dec xor jle push mov mov mov xchg sbb pop pusha enter push fdiv sub mov push pop xor inc das inc cmp popf inc sub sbb sub sarb imul (bad) clc gs push jg (bad) inc add sbb daa push inc ret sub arpl shrb jne and adcl icebp icebp in xor push mov dec jl add ljmp fistpl push push nop push jno or dec in mov cltd dec movsb push (bad) adc pop mov lock pop mov ljmp jecxz mov je or sbb jmp fsub cmp cwtl xchg add xchg inc lret push rol cmp pop and push pop and dec or pop xchg pop mov (bad) ret sbb cmpl jo adc movb mov push and dec inc pop test pop mov adc ss and into mov nop movsb inc lock push dec push mov dec or add in jb rcll call pusha sbb stos add push mov pusha add test pop mov xchg pop scas xchg iret lock xchg lods movsb sbb adc or pop in dec adc scas popa push subl xchg fdivp dec sbb cmpsl test xchg adc or and stos scas imul lret pusha add cmp push sbb ret mov jb loope shr sbb add sbb push fwait pop add jecxz jle das sub xor push mov push mov pop fcom jno pop arpl pop pop sub std jne pop fstps push lds loope pop (bad) popf add adc xor xchg cmp (bad) cli leave sub (bad) lea in jmp jmp enter jg in cltd xor pushf jnp push pop pop scas or xor or pop adc ds pop les je jmp push push xor mov test adc ja mov jecxz push xor pusha es fstps push das mov push xchg (bad) js add push xorl aaa inc inc repnz bound xor adc adc dec sbb adc js jmp cmp sub push xor xchg fldcw mov aas adc jae xchg and xchg xchg lcall mov mov or jb subl sbb cld adc nop call mov ret jp mov inc leave mov and aam orl gs push pusha dec adc push and mov ds push fwait xchg adc adc mov xor mov cli mov bound cmc mov dec and adc sbb stc xor pusha loope jge adc or js mov inc aaa sbb push xchg cmc mov stos sbb adc sub iret pop fildll rcrb ret xor xchg jo add add mov mov std push inc jbe inc jl std add pop and inc data16 ficom imul adc add inc inc stos data16 mov aad pop cwtl pop mov ret dec xchg xchg js push fsubs ds dec out xchg jmp loopne pop loop mov imul dec popa mov sbb cmp push (bad) push mov and inc add cmp or or ja jge sti lods movsl jge std mov daa mov sub or inc rorl sub addr16 and or loop out stos add jl inc jno pop jl push push sti movsb pop push sbb jle mov cli push pop clc std add imul fcmovu icebp cmp lret xor mov rcl pop adc loop mov movsb inc sti sub jge inc add or xor cs inc jecxz xchg js pop cmp jne and mov dec adc (bad) sub jae cmp or and add xcrypt-cbc cmpsl push inc xchg add ret or pop in jecxz adc dec aas push sbb add daa outsl cmp inc and into adc push rorb or js mov and or xchg or xor push test cld pop xor call add (bad) push push add test adc jno ret and dec jmp mov inc and adc mov mov popa (bad) dec cmpl inc fisubr sbb add sti adc jbe xchg inc in pop mov xor rorb and out adc movsb adc in add inc add add push fs adc xlat add (bad) mov rsqrtps mov jg out dec adc mov mulps xchg mov dec xchg cmp adc hlt cli xor or dec xchg lret add or adc add jb pop clc pop sub sbb jnp cmp add test (bad) js jecxz mov or pop pop ljmp cmp roll dec jp xorl imul adc insb out or dec mov (bad) or ja movsb inc fsts push xchg aas lea jae dec cmp sub nop inc xchg orb int3 mov lods add scas sbb lods inc mov jb mov and mov sahf in and icebp repnz push xchg aas outsb loop and js mov jne sahf (bad) psubusb sahf test pop int3 (bad) pusha les rcrb dec paddsb movsl orl pop fs pop add cli adc sahf enter and adc sub inc sbb sahf dec pop mov pop mov mov mov cmpsb movl push lock test push insl or int3 mov push clc mov cmpsb inc cld imul add lods mov lea sub xchg jno adc cmp push sbb xor adc ret pop or std push dec add and jmp adc sbb lret or push inc ficoml mov or or xchg test jecxz int3 add adc test loop add fisttp movl inc inc loope and mov xchg push or adc mov enter push xchg stc jae pop cmp mov jae mov imul push popa add push pop add pusha or push test addl xchg push mov loope mov and cmp adc push fwait adc movsb mov push dec (bad) insl and dec dec jg adc push lock pusha popa and cmp subb dec movb or xchg dec and adc and add pop pop xor inc leave pop pop sbb loop jo pop adc mov mov mov call add dec mov sbb mov test pop cwtl push push dec clc loopne push inc cmc leave inc push mov or rcr sub lds loopne cmp loope adc mov cltd clc lret fnstsw inc loopne insl mov jg pusha lcall lods int3 add adc call ror add lods mov or xchg lds cmp push pop cmpsl (bad) mov ret or lcall popa pop add mov dec add mov add roll (bad) lods fdivrl shll nop test adc push push xchg jnp dec scas sub dec js push imul call lret push xchg mov cmp xchg mov repz cmp decl xchg adc add jnp mov loop iret cmp ja mov in add fsubs ret xor (bad) jo fmuls pushf shr or aas mov andl outsl or cmp adc xchg mov add loope popa popf rcl test stos movl or pushf out je jns icebp sbb push cwtl or sti ss xchg push stos sbb xchg jmp add or adc rorl fcoms lods or push scas adc xchg mov (bad) lock xchg movb aas or fs ret bound mov xor push int3 in lock sbb roll pop mov imul movsl or std mov mov xchg adc inc xchg insb out sub sbb and dec inc jae add in sti sub xchg and jnp aas in inc mov adc in add cmp or mov add faddl fdivrp adc push and je mull and and (bad) mov fldl dec fsubrl mov sbb sbb xchg dec add or pop or stos jg add lock outsb enter or jns add clc jl cwtl push (bad) dec (bad) fidiv leave dec fiaddl inc mov (bad) adc mov pop hlt xor xor shl pop pop out ss jne mov testl inc popa nop fstps or cmp jnp fcompl (bad) dec insb arpl imul fistpl lods test sub or pop ljmp inc adc insb xchg jns cmp push sbb mov loope pop xor andl or fstl or hlt adc add divb mov mov ret cli mov loopne cmp cmpsb xor mov add sbb push shrb sub sbb xor xchg fildl mov rolb inc mov cmp cmp sbb rcrb push pop pop xor lods push cld rcr push clc mov adc or ss js fmuls mov xchg data16 adc nop lods or and pop cs sub pop xchg popa add jl movb mov cwtl or adc mov cmp push mov inc (bad) and repz mov movsl repnz jmp dec jo xchg jo fcoms cmp popa or adc popa or (bad) xchg sub dec arpl jne stos fisubl mov and xchg call mov pop cmp lock cs push xor rcrl ds mov je cwtl popf push pop lods inc or loopne ret popa mov call ret mov add mov jl jmp jno ret lock je,pt mov gs dec into mov scas or ss xchg jne (bad) fidivl icebp xchg mov or jbe (bad) repnz xchg adc jbe add je movsl jo and push inc pop xlat out (bad) int3 xor mov pop cmp mov and xchg fst stos dec dec cmp xor sbbl iret lock scas clc jle push pushl and mov xchg or (bad) pushf adc lods jne mov lret cmp jecxz popl sub pop mov xchg in inc or push stc xor xchg mov jae inc imulb fild js,pn sbb ret fidivl or in inc lock jae sahf inc push sub lea mov jp fnstcw dec cmp inc orl lahf sub mov sbb ret sub xor mov loopne call mov mov shrb cmpl js mov inc adc inc clc sub lret (bad) mov outsb push push xchg cli jg dec aaa mov int leave push sbb insl call (bad) je lcall test mov das jmp mov (bad) scas adc adc push or xor pop mov mov leave sbb adc test addr16 pop sbb movl jmp mov test jmp dec push lret rcrb cmp push fs xor sub in and xchg add test or mov fnstsw xor in push mov pop jb add mov inc add cmp gs push in mov inc cs jb jo sbb mov test nop lret test and inc xchg cmp clc xor mov ljmp dec cwtl ret cmp pusha jecxz adc das mov push pop sub arpl fs cmp jno enter mov in in mov jnp push or ljmp and inc mov lds mov sbbl jmp xchg sub or cmp dec and adc or shrl dec loope xchg cvttsd2si aaa push mov data16 add pop push add jmp sub or xchg and ljmp push mov xor mov clc push fsubrp adc fstps icebp in insl add cltd rolb sbb adc jmp cmp fcomp dec pusha or fstps and pop sbb push sub loope push dec rorb inc mov mov or dec push test loop sbb jp mov adc push push cwtl pop movsl into add ret sbb or rdtsc mov mov inc clc mov sub mov add lret ret add pusha gs cwtl sub adc imul cmpsl pop push sbb jle adc jl jno movsl pusha mov (bad) sti mov xchg dec inc mov rol sti push mov sbb pop jns stos insl pop and clc incl lock cmp cmpsb sub gs test dec popa jnp andl cmp jbe jle mov mov loop inc push jl sub dec sbb mov inc xor cmp test (bad) lcall or xor popa pop ss enter xlat es ret mov es push xchg insl sbb ret pop or mov mov dec adc imul add jnp dec scas mov inc (bad) mov mov sbb subl inc add dec pop or divl push jp or fwait adc sub and adc pop mov cltd sub and pop movl push xor or leave mov sbb pop adc imull jl jne sbb xor adc or dec fbld mov add insb fdivr div jmp sub dec or ret pop ja inc inc sub add inc mov or sub fprem1 mov lret xor adc xor pop nop mov lds add pop sub sub out nop mov sti sub iret mov inc call call xchg ret sub test (bad) shlb cmp fxch add xor jb pop jo jb sbb mov xor jnp inc or or xor and test divb rclb pop jle jle mov or xchg mov mov (bad) mov mov push adc add nop fstp cltd pop fwait mov xor sbb mov xchg cwtl jo fadd dec neg cmpl pop push mov jne cmpsl subb xor sbb add add pop mov pop add pop pop xchg (bad) sahf in enter push dec call push outsb and pop adcl aas inc cmp test xor xor fimul mov cmp dec lds decl and adc dec mov hlt (bad) and lret pushf cmp dec jnp mov or out test sub cmpsl push icebp mov push iret and cmpb pop push test mov (bad) sub mov arpl pop cmp call inc or xor mov enter sbb or ds (bad) nop test dec or add lea dec sbb std pop push lcall push sub dec inc jns push divb xchg pushf insl pop dec adc inc sbb push rclb mov fistpl inc adc movsb mov pop adc sub push and and ret sbb insb test aam fistl inc sub repz push mov or incl inc pop mov inc je mov mov je sub repz mov rcll imul mov sub fadds imul lret xchg in and out jmp add (bad) fldcw sub xchg push dec adc sub push adc add lods mov lods jp or xor jo add clc jae,pn imul dec call ficom push (bad) flds movsl pop cs sub xchg out adc shlb push inc dec inc add inc xor ret push insb jno xor or mov js lock add jbe jbe into xor mov mov adc push adc push ret jno hlt pop sar dec or mov xor push sahf add sub mov hlt xor in mov xchg sub in cs loope push mov inc push push add fildll mov add push clc mov or add dec or pop js add dec clc loope push or push mov add sub cld test (bad) sub out sbbl dec notb push push push push les adc lods rcrl inc add test push out pop pushf lock add or pop insb pop cwtl inc mov loop inc es jne sub clc rclb mov mov lcall pop sub incl sub mov pop sub test mov dec (bad) stos adc test pop sbb incl adc test push and dec test adc dec lock xor dec sub rorl jmp or lcall outsl outsb clc or gs xchg pop int3 daa scas or pop or cmp add xchg and dec cmpb inc xchg jo lcall mov cmp or adcb cmp push out or inc xchg mov les push add mov pop (bad) in jb pop aas dec dec movsb leave xchg cmp fldenv push fnstenv add ret in inc sub and nop cmp add or sbb adc call dec sbb das dec int add insl sbbl js pop pop or dec addr16 mov cmp ret xor jne sbb hlt lods mov dec popa das adc loope or js loopne pop and mov or jg pop sbb add es mov and hlt dec inc mov sbb cld sub add adc test (bad) (bad) mov adc dec pushl addr16 and push jl or movsb stc ljmp add imul push push dec push xchg inc negb pushf pop rclb jge mov pusha inc clc mov outsb or mov cli (bad) test cmp or add jmp adc ror and sub jno add das push mov pop mov in testb ficompl cmp sete xor or clc test dec jo pop jmp mov add and pop inc dec sbb push scas sbb ds push xchg xchg sbb imul subb pop inc pop pop and cmp inc cmp insl int3 or add shr (bad) mov xlat sbb dec adc mov cli pop add lahf jb cwtl push fistl or or lock mov and add aad rol ljmp (bad) mov mov sub and jmp les in xorb xor shrb adc push inc push pop xchg mov test popf pop ljmp (bad) aas sbbl and jo sub mov xor aaa and pusha push pop jno xchg pop add mov and insb or push lahf nop inc dec gs ja je mov adc mov sbb test mov mov aam sub xchg aad inc add pop lock mov scas push or mov leave and mov add dec sub ss das stos rcrl scas lea push leave adc ret lea and int add add (bad) movsl lods sbb (bad) (bad) loope,pt xor add sbb jno insb push test jmp adc cmpsl and cmpl rcrl mov xor mov inc sbb pop leave sub adc imul pop mov out add and push jp aam test cmp mov dec sahf pop mov lcall lock and pop inc sub subl fwait xchg cmp pop sub daa in and shr jbe lcall xor roll xor jne shr stos xlat es nop in fwait push lea sbb dec (bad) push arpl pushf jne pop add or pop lahf cmpsl jno jnp mov pop (bad) sbb and loopne dec sbb push loope sub fistpl addl dec hlt cvttps2pi add stc aaa adc (bad) mov clc jmp inc or push outsb sbb pop pop ss je lea test push lret ja mov iret inc add push (bad) or or push xor sbb mov adc cmp inc (bad) cmp and sbb jnp and mov dec sub push inc lea cmpsl and mov and leave mov or sbb sub call sub mov mov test and jbe jg aam rorb leave call or test mov (bad) push mov and arpl or js add push pand add cmp or (bad) or dec nop mov and cmp out xorb aad lcall mov int3 and addr16 orl mov mov insl and dec lods sbb xor ret jle and adc adc xchg or or xor dec xchg rcll jmp fnop sbb adc call dec adc lock adc and adc xor and sub stos push xchg add es push (bad) cmpsl jg mov mov adc sahf lahf jae in mov mov mov popa add cmp lahf test lea insb insb test mov sbb icebp test push mov clc dec pop arpl jg cmp add mov stc int gs mov pop adc gs dec scas jb push adc adc in adc loopne pop mov stos mov push or dec jg push in testl cmc ja (bad) inc xchg subl lods sbb lods jmp mov call rcrl and cwtl mov rcrb mov adc xchg movl add or test sub sahf add or pop push popa je call int mov lret cwtl xor je push adcl inc adcb cmp inc inc and mov sub out push adc pop mov sub fidivl daa push xor cwtl sub mov jge and mov je jmp mov jno push add mov sub or test pop jl lret adc arpl popa es adc test xchg mov and pusha jl xchg adcl add sbb pop testb or and and mov les mov xor imul and add or test sub adc xor pop popa (bad) icebp nop lods push inc xor mov pop and mov sub push loope inc sub or mov sbb test xor or pusha dec cmp out lods xor rorl insb call sbb repnz adc mov cwtl les mov ljmp lret les ret js (bad) jp jae jb das (bad) jne sti pop imul dec push jge jno mov push mov jbe leave mov scas xor loop fcmovne inc xor dec pop pop iret inc and xchg xor test adc loopne loopne add loope inc or dec sbb es or lahf in aas dec rorl cmp sub or sbb mov mov scas push ret push dec push and (bad) jns decl jle and cltd push inc pop mov sbb (bad) xor andl subl dec xchg fistpl repz add clc das lea adc inc je push sub mov or adc cmp add scas sub push shlb scas jb sub pop mov mov sub fsubr pop in test push sbb lock in lock pop and push dec popa test or ret ficompl xchg mov ja mov nop sahf je clc add jne andl xchg mov mov lcall sarl sbb test mov cmp adc add and enter imul xor jne sbb (bad) loope test mov cmp sub jle sub push bswap enter mov movb adc ret cmp cli lds cmpl mov xchg (bad) sbb inc cmp pop or jle pusha push or rcr out xchg iret mov sti sarb adc sbb sbb int sti jnp or and add ljmp repnz pop or adc mov mov ret push sbb add js dec enter or repnz aad sbb xchg pop and or or inc pop push dec shll orl jge mov or pop push adc mov add sbb ss sahf sub insl inc pop jb ljmp cmp pop mov mov jmp sub pop in test (bad) sbb mov rorb adc cmpsl ja hlt push lock (bad) xor xchg and mov jo (bad) es jo push mov mov pop jge cmp push and push loope pop js sbb sbb sub mov mov sub clc cmc inc mov call insl hlt movsl sbb dec fwait adc mov getsec ja jg push add or add inc rcrl mov adc sarb clc test dec fiaddl adc xchg inc push pop or inc dec aad out xor sbb sbb push dec xor fiaddl fs enter mov ret adc jne dec xchg hlt xchg mov (bad) sub push sub mov nop shl sub test dec jo iret leave sbb pop rcr push mov pop movsb sti xor or sub cli lods and pop jmp inc adc ret xor adc cmp pop cmp repnz outsb daa test ret jne mov inc es mov sub xchg imul fstpl jmp cmp jnp (bad) pop push push pop inc shll adc and imul icebp jecxz cmp imul test pop push lea or mov xchg js sbb adc inc add call (bad) mov add xor and imul je cmp xchg shr sub ret mov lock cmp js mov call sub adc or popa mov sbb mov or inc mov sbb dec int sub jmp xchg sbb jb repz loopne dec push push scas andl inc jecxz in or imul into imul test fsubrs and outsl cmpl cmpsb daa and aaa inc push mov fist adc hlt nop dec push push inc aaa mov inc roll das or jae jmp sbb dec jns jno xor push push mov les lds push je sbb push mov in pushf push mov aam jl jecxz xchg mov call push sub inc lret adc and xchg pushf inc jmp ret xor push sbb xor imul push dec test or xor mov ret mov push mov inc fiaddl stc xor sub into pop push leave loop or push shrl xchg nop popa scas jecxz and sbb aaa leave adc outsb pop psllq xchg (bad) js cmp pop jmp (bad) xor mov test adc or fadd push or test push push in out adc sbb sub cmp int sub jecxz xchg lret cltd sbb jne adc sbb adc in mov sbb cmp aaa je dec pop leave lds xor and mov call pop push mov push push rcrb xchg imul add inc sbb sub jb jae push or mov subl addr16 add and popa sub popa ljmp cmp addr16 test sub push and add rolb insl and jg outsl stos xchg jl mov sub dec dec inc test push int insl add add fldl fs mov jecxz xchg (bad) or dec fs push sbbl push mov into push add je test xor pop inc and or test adc jmp mov pop and pop mov inc loopne lock aad inc xor lcall ja sub mov ret inc jns cmpsl sarb sbb and pusha or or cmpsb dec add insb loop or pop inc xchg sub inc test adc clc not sub mov xor pop pop mov sbb xor insl jge fistpl push arpl xor jmp add mov repz insl jl fwait jp push jb xlat aad inc jne xor mov or inc cmp arpl (bad) inc roll cmpsb or and and dec or dec pop jo (bad) push cmp (bad) add dec sbb inc es ret add xor push popf xor lret mov or outsb fisttp scas or pop mov cmp mov and mov rorb fimull jbe mov add or jp and out arpl push add and xor mov aam loope mov loopne or pop xchg sbb jge dec and mov fcmovbe and and push sbb push lock sub and data16 and (bad) mov imul sti aas icebp jle push mov inc movb jmp or push or aaa xor dec jp fldenv (bad) sub mov dec adc mov stc or movw jb or or or outsb add fcoms or fisub enter push sbb rcr adc pop jmp mov push dec mov les mov insl xchg mov sub subb dec inc push pop pop addl mov push sar dec xchg cmp push dec fildll dec cmpsb shr rcr inc imul daa add or mov decb loopne adc mov fnstsw negl es ljmp jge cmp (bad) jbe (bad) (bad) in sti push sub cwtl and addl sar add pop and fstpl (bad) cmc cwtl mov jbe fsts push (bad) sahf adc or adc popa leave sub and int3 imul in mov scas loop loopne jg adc and and lea inc (bad) xor les andl cld daa cmpb dec sbb jl pop add jbe jg jae cmp cmp in loop enter lods fs inc or cs add jp or mov jne (bad) pop add in xor sbb xchg pushf cli dec and dec or call nop add cmp or jmp mov cmp jno cmp and movsb movsb cmp mov cmpsb adc sub and add fdivl inc lods and rorb add (bad) jle cmp mov xor lock subl movsb scas pop pop or nop cmp or dec ss or sarl add addr16 push lret (bad) lock rcrl mov testb dec hlt add mov add shr or mov dec jae mov inc sbb push push movsb daa add lock dec jp clc dec and mov testb dec cli and push pop cli inc cli div add mov pushf ret test or call rolb jge sbb pop pusha sbb adc and or pop aam shrl outsl and xor and data16 roll (bad) mov xor dec mov (bad) test mov sbb mov dec push pop jmp (bad) inc mov push ljmp inc loop sarl push mov push jge addl xchg and cmp in aam sbb and adc es out mov (bad) inc inc (bad) jne adc xchg fdivrs aam int3 movups andb nop and pushf adc mov dec movsb inc xor sahf adc in (bad) mov pusha add je mov push je inc sbb fcmovu or xchg mov ret (bad) insl test call mov (bad) sbb je add clc adc inc (bad) adc into or adc (bad) dec sub nop inc push in or jge call lock cld icebp or add jns loopne jne inc fisttpl sbb push in mov lret mov lods imul rcr xchg sbb sub adc orl negb xor movb jnp xchg subl pop or cli out adc test addb jno add and cmp pop repnz hlt inc rcrl call neg add frstor data16 inc imul mov ds jmp loopne call pop orb js and pop and nop mov loopne movsl out pop test repnz (bad) lret out ss mov cld or cmc scas add out (bad) enter lea xchg pusha dec rorb add pop inc add popa lahf push clc rolb jle loope push add lea mov (bad) push (bad) jae adc les in jne xor les mov ror or mov inc sbb (bad) pusha insb or jmp std mov cmp jge push cld stos aas sub cmpb or add dec cmp xlat aam (bad) adc incb sub sub loope add add sub loopne push ret js hlt xchg jp jne dec mov jb int add mov lods ret inc lcall lret or sbb mov mov (bad) rorl mov add dec push imul add dec popa push and ret lcall cmpsb mov dec inc daa adc jl ret or adc sub imul ja add pop jne or inc imull scas je,pt (bad) not nop push ret mov xchg aad mov movsl (bad) xor add pusha add jae test inc pop (bad) mov mov iret enter xor into pusha inc lock sbb and pop and pop pop push pop xchg xchg push cmovge mov jnp dec push ret or dec test xor (bad) cwtl pop cld fadds adc sub or lret or jo dec push add add push aam inc dec push mov (bad) movsl orl dec scas pop push lahf lods jne push mov sub pop iret out add xor mov mov add jno push rcll out and push sahf dec or and add xchg xchg test adc or inc (bad) nop clc mov adc xchg test sbb sbb or push scas inc jo push orl mov pop shll xchg ret mov loope pop dec fmull scas pop inc or mov pop lret and dec jmp or add or (bad) xor add mov hlt mov and sub out xor inc jg into into and dec into mov outsb pop sbb sub push pop mov (bad) mov pop sahf pop sub int xchg cmp jp shlb (bad) or xchg rclb sbb push aam mov in hlt add dec add pop lcall test lahf pop xchg jo lcall add dec loopne movsl movsb popf or push aas stos mov or jp lods and cltd and mov cwtl sbb rorl sbb push jb push cmp dec cwtl les sbb insb xchg (bad) pop xchg adc (bad) mov or sub loopne xor mov dec (bad) andl (bad) popl aad inc xlat pop adc mov loope add mov adc popf sub sub adc in nop je leave inc iret out dec clc adc call mov lock rcll push add test call andl (bad) inc jbe add jl in bound fildll or loopne push cwtl and aaa out mov popf inc ror pop out bound mov dec in push cmp mov mov jb loopne aam jo mov es mov mov cmp add mov es lret xchg and or push push (bad) adc sub andl push shl out adc loope add fmull ds hlt pusha fcmovnb dec lcall push shrl (bad) jge dec lret or maxps or or add pop lahf lret xchg push push (bad) mov adc add mov mov push mov mov dec (bad) enter scas aam dec or dec je out mov je fcompl adc movb push push mov or dec jae and push iret jle jmp in shrl and and dec add clc sbb mov out pop out xor ret outsb scas inc inc mov push sub and sub dec cmp mov or mov fwait mov fildl lods inc or pop or inc sbb sbb xor shrb or test ret faddl adc jbe pushl or sub xchg test pop loope add in dec adc loop dec fsts xchg inc jbe cmp nop lret stos mov jmp inc popa imul add int adcb aam inc cmp sub fcompl aam arpl pushf cmp movsb addr16 (bad) (bad) xor js or into lds dec pop cmp lretw add add xor repnz jae xor xor cli inc stos hlt and fmul or pop and sbb add stc loope test xlat dec xor cli xchg cmp sbb dec mov cmp xor add or sub xchg add push or rorb dec or mov mov jle jo or loop sub cs dec test jne push xor lock std dec lahf add divl and xchg and add dec cwtl push rorl or jg scas and insb mov xchg inc fs xchg movb mov popa mov xor cmpsl xor sub dec clc inc and push sbb das xchg icebp addb push xor adc add xchg stos mov dec or fmuls push cmpsb jo fcomi clc and aad into and jge scas or loop shr arpl pop pop mov inc add mov sbb add add sub mov sub dec insb adc sbb add pop incb rorl dec inc inc adc sub push inc pop (bad) jp cmc mov cmp in pop inc xor sub ficompl enter push ss jp xor inc gs ret push or push jle imull jo imul sbb inc das adc or adc or mov in arpl imul dec testb jne dec sbb inc mov aas ja testb outsb pop in ds jne dec inc and lea mov push add mov jae mov sbb push lock and movsl xor push push jle call sbb inc das jae jge adc add push (bad) and mov subl pop jbe xor addl loopne or push xchg xchg sbb push (bad) cmpsb xor push cmp mov fnsave xor testb hlt or lock insb test dec sbb adc das test shl mov and xor xchg push movsb cld inc sbbb cmp andl aaa repz jmp mov gs fimull add lock jl inc (bad) fcmovnbe punpckhdq sbb outsl push fdiv add inc add xlat dec inc adc pop xor xchg jne js jb add inc sub mov andb sub sbb sbb add cmc push fimull sbb (bad) inc push fcomps jg push imul pop add bound (bad) jno outsb adc rolb and dec sbb mov add adc xchg sbb mov cmp ss cmp inc add adc xchg test pop push je into loopne cmpsb cmc std or cmpsb sbb add jb or mov mov imul and jle popa ret sarb lea scas push shrb push pop sbb test sub mov or inc loope (bad) xchg mov into or cld sti mov cmp js dec sbb cmp sbb push pop inc and pop jecxz add pusha xor and sbbb mov nop icebp xor (bad) or or ss jae stos mov inc dec das mov dec fwait ret xchg imul pusha push push xor inc gs ret loope ret and pop inc (bad) and lahf sbb push xor push mov movsb mov mov pop mov sub dec sub sub push out hlt add add lret rclb adc xchg mov mov sahf arpl arpl addl test inc jmp add or sbb xor or mov cmp lock xor lret push or pop js or inc push dec nop dec pop out (bad) dec rcll andl push pop add test jbe sbb cmp inc imul or stos xor dec out fsubrs mov mov sarb lods inc jno and sbb in pop cmp mov push push and inc and mov and and xor inc push adc pop ret inc mov dec or add outsl sub or leave pop nop inc das pop test jmp inc mov dec inc push daa cmp jb add pop (bad) jo push fs in push and or xchg add pusha mov ljmp sbb pusha cmpsb and pop ficompl xor lea lods pop cmp inc or add pop jmp nop test lods aad fstps mov push push jbe test jne mov dec jo roll scas cmp cmp mov sub pop rolb rcrb pop jns clc iret (bad) rcl xchg xchg xor fiaddl loope pop fsubs push sub jg push sub jbe nop or test mov push hlt or push rcrb mov lea push (bad) push lahf xchg loopne and and loopne inc mov sbb mov lret add sub push aam sbbl es nop outsl sbb stos loope mov xor inc mov add add xorl sbb testl movb adc enter add push scas mov pop test mov sub in add outsb sub sarb ss int3 xor or mov mov pop or test fisubrl push or sbb (bad) cli cmp repz cmp pop jne xchg push mov pop test clc les xor xchg ss je jle add bound jne push imul add imul inc imul mov mov fcomps jle push mov in imul xor call add pusha test popf xchg lock dec cmc cmp mov test mov cmp cmp jne rcrb inc add test push inc inc sti fsubl clc dec (bad) or adc test pop (bad) sbb mov stos iret pop fsubl sub call adc pop lret popa add dec inc and icebp xor push mov xchg adcb add xchg mov loopne pop cltd dec ret push pop mov pop mov mov das lods lock push and (bad) lret insl popa sub pop add adc pop dec push add aas push adc hlt or fisubr shlb leave dec add xor xchg icebp sti mov mov cmp jle sti test adc mov pop hlt xor cmp sub jle dec adc mov aad or and rorb add mov in mov pusha and mov test inc rcll test xor or inc or push mov pop jne cmp xor loopne outsl or loop mov hlt pop mov cmp stos pop fisttpll ret add dec adc leave push int3 mov add nop pop repnz and fldcw popa xchg add mov mov add lea xchg adc or sahf xor fisubl mov lock aas popf mov test sub mov movb cmp add test cmc aad pop push adc mov dec pop (bad) xchg cmp nop jno dec dec (bad) mov add sbb inc xlat fcomps push arpl push mov add movsb adc andl dec nop or lahf mov in inc xor cmp and mov out rep in out and (bad) adc jno push add and jle clc add mov xchg aad mov push pop mov dec aas js fcoml mov xor aam in add fs mov and ret ljmp iret xlat pop test nop pop test adc data16 dec nop xchg (bad) jmp rclb std pop or ja or pop or mov jb sub in adc movsb mov dec or cmp add rclb mov dec add jne pop test or iret cli push in iret mov sub (bad) mov and (bad) aam mov mov sbb rolb (bad) xchg clc jmp and test push mov adc fiadd jno mov add addr16 xchg rcr (bad) push push cltd call cmc sahf sbb cmp xor nop negl pop adc mov adc and insb push sub jmp add pop dec testb or push icebp jmp test adc rcrb jb (bad) popa xor mov sbb mov and std cs cmp jecxz sub mov xor add pop scas mov ss out push fldenv sahf or pop adc ljmp sbb fisubl xchg xor push jbe adcl xorb sar and popf pop xchg mov mov push mov shlb xor adc jge call jbe (bad) inc ljmp stos jge movsb push hlt rcrb adc (bad) scas lea decb push inc sub inc popa test inc dec sbb fmul adcl mov and jle mov lds loopne arpl les lea sbb and sbb inc push push xchg push movsb pop movsb pop in shld sbb mov sbb cmpsl enter popa adc clc js inc test pop push (bad) dec insl xor push lds sahf je jecxz mov bound adc aas fdivs jg ret je sbb ret and cmp outsb int3 lods xor (bad) xor jg xor les push mov or loope push cld xlat and cs add xchg or movsl or and inc ljmp inc sbb jne pop push pushf lret (bad) out hlt mov addr16 jo sub fildl out dec std imul enter inc push sbb or (bad) je inc aam or add pop rcrb sbb bound or dec pop rcr sar sbb seta dec jo xchg mov dec add mov jle dec push clc (bad) lcall xor dec insb frstor dec xor xorl sbb ljmp jge xchg movb mov xor out add rcrb stc aam add or mov or cltd xor push (bad) ret jmp push jle and lret dec incl adc dec add sub es jb dec and mov or push cmp and dec sar out or test movl or lock adc mov or sbb push sub pop loope sub dec or or cmp (bad) ds inc aam loop mov (bad) mov out aaa sub rolb and gs outsl mov test jo adc lcall sub inc xchg sbb sti insl xor xor clc imul inc pusha xchg test sarl fldl dec mov test dec dec mov add sub (bad) adc push pop test lods or pusha jae push mov movsb (bad) cmp add dec out adc fildll adc pop jmp nop jp dec or cmp pop sub pop sti jmp cmp adc and aad jp or jecxz and mov jecxz lcall inc insb add jmp mov jmp xor add jle jmp cli push insb mov loop mov rcrb test lock inc sbb into inc movsl xor sbb dec stos push push rcll test sub xlat adcl xlat sub loopne sub aaa in divl pop lods xchg imul sub loop mov sbb icebp dec pop js jno mov xchg (bad) xchg insb repnz jno dec xchg xorb mov push lea fwait pop or lea mov movsb add lret dec shl inc cmp cmp or mov leave add jle adc pusha lea flds sub jne and mov or xchg hlt inc xchg dec icebp mov addr16 or mov stos sub and icebp gs inc cld and or dec gs xor or mov or sbb push or push shrb adc and sti popa inc cld pop dec add and test and add or or jns or nop add popf lea and addr16 cld not xor loope xor and cmp enter add fmul mov call lret and push test aaa push or test adc or ret add push and int3 mov mov and sbb jmp (bad) aaa nop cmp incb jbe cmp jmp inc and mov mov xchg jbe jl and jecxz sbb or outsb jl jmp sbb jl inc jg xchg or add and in cs (bad) sub aaa jge jb and push sbb mov fstps aas pusha mov pusha loope mov sub dec and test inc adc fnstsw xchg ds pusha fldl cmp js cmp cmc xchg das cli icebp inc push fisub testb es adc sti fist add test fild mov sub mov cli push mov das dec fwait clc lahf adc orl das shlb xchg scas inc test testl out and add pop outsl lods imul push and or ja adc int cwtl inc flds fstps jmp fisttpll pushf push shll lea jns rclb inc int jle (bad) xor test loope out pop lahf pop sub mov jl (bad) mov adcb jo ret mov lret addr16 lea or push inc pop pop fs sbb and sbb sub aam sahf test addr16 stos (bad) jnp jmp sub sub jmp pop jb pusha sub push or outsb das shr fldcw lea in inc adc mov hlt add insl mov mov jmp cmp xchg and scas and pusha cmp pop pop push popa xchg cs test sti les fstpl repz jmp leave xorb mov xchg inc repnz cmp add jge (bad) leave sbb sub std cli shrl sbb mov lcall loopne (bad) add mov push cmp mov addl cld std cwtl lcall cmpsb add push daa adcb jno sub int3 mov add and jne call daa push sbb clc scas sub mov adc add and adc mov test mov (bad) jno xor jp add mov jmp xchg movsb mov mov fs pop sbb sbb sub mov call out call adc and inc nop js adc sub je roll or push mov mov add xchg rorb mov xlat lea and pop cmpsl loopne scas dec adc or xchg dec xchg fbld sti int3 inc std or push jno or or adc dec add mov jnp std mov pushl lea lcall mov out sbb push adc or and cmp popa or mov mov xor jl cmp pop cmp cmp adc add pop mov int loop sbb and mov pusha push sbb lret fnclex and jecxz mov and and or mov jnp jg fldcw push push mov loopne adc fistpl fwait cltd sbb adc adc jbe xor mov xchg loopne outsb test or call test fldpi xor mov pop jge outsb popa add inc je sbb (bad) jbe xorb mov movb cmp ret push and push add mov ret and pop movsb inc push lcall cmp pop mov push icebp xchg mov mov sbb mov inc adc cmp jb and jns cmp ja add cmp adc (bad) cmp (bad) jno or les mov neg mov xor xor push xor jl xchg and fadds ret mov shrb mov (bad) cmp pop mov sub cmp xor sbb mov lds pop sbb push (bad) push jl jmp cmp pop or push in stos mov jmp cwtl pop outsl je fadds jp out xchg sbb pop inc aaa sbb xchg test push rclb mov xor sub adc gs (bad) je add or fisub out mov loope jne pop or push xchg or pusha mov aaa insl int jmp sbb or dec xlat xchg int push pop adc addl ror loope sbb imul or push es lahf mov cmp add mov ss sub sub push xchg and push (bad) cmp jo das add push cmp pop push out mov mov push fldcw dec or sarb addr16 mov imul (bad) idivl xchg sbbb pop js ja in insl fwait lret lret rolb outsl mov pop inc ss (bad) adc out int aaa lock jae cs (bad) sti inc sbb pop imul push fiadd ja xchg ret test dec inc aad adc scas pop push or ficom adc dec es clc fsubr mov cld pusha sub repnz inc loope (bad) repz and loop adc fldl mov sub or leave faddp sbb fmulp push repnz insb aam adc notb jge enter cmp lock lods sub pop and jb push sub xchg jb ja sub sub cli (bad) jb nop movsl ffreep mov sub push ss sbb repnz mov ret or pop mov out pop adc imul mov xchg int3 loope or rcrl mov ja push scas mov push ljmp movsl pushl mov mov jle sub inc jae mov cmpsb pop push xorb iret xchg pop (bad) (bad) decb in jne ret outsl aaa dec loop jmp and in fldl2e pushf ljmp int3 mulb mov sub pusha sbb cld jne fscale or mov rorb insb jge out loopnew not cwtl loope scas cmp or and add fldln2 inc push add test outsb pop inc rolb ret inc popa fcmovu jae aad jne pop in jmp sbb out mov mov push fldz or sub lods sarb test pop ja or mov pop add mov push sbb popa ret add adc inc cmp or mov sahf fsub daa jbe lock fcomp dec or pop fidivl push mov cmp daa fidiv and (bad) insl xchg jle icebp push lcall xchg ret jbe ret pusha fldenv frstor or pop popa mov movsl and add aad inc mov fisttpll sub lea cmp add stos mov fsubrs das mov push (bad) jmp jnp pop (bad) enter in add int3 push pusha pop cmpl xor pusha mov in lret sbb popf out daa xchg test (bad) pop je inc fwait jne mov mov mov cmp je cmp je push xor in sub lahf dec xchg sahf test jge (bad) inc fiadd fldcw fidivr push scas and (bad) sbb adc mov das and and cmp mov cmp test add inc push inc xor or in aam dec popf insb pop push lods sub jbe mov push add inc cld (bad) sarb rclb push les (bad) jge sbb pop mov hlt lock push push orl fstps fldl fldl sbb add push add pop add fcoms jne or dec add adc pop dec shld jae aaa xchg sub neg insl push loopne dec test sbb cmp jp sbb or add pop inc je add das and fisttp addr16 sbb and add sbb shrb mov xor mov push pushf cmpl push or lock (bad) pop nop sbb add mov les sbb adc xor fimull call cltd xor sbb sti nop add push mov (bad) hlt jnp mov sub arpl enter jbe loopne push or add sub popa fadds arpl mov shr das shrb sarb sbb dec add adc sbb or cmp adc mov lods cmp push push xchg dec jo add mov sbb and stc xchg cmp or sbb and mov cmpsl add add sbb mov leave lods sbb jmp fs pop pop xchg addr16 jb je adc jo pop or sbb push mov push xchg test mov inc add out sahf mov rcrl outsl js fidiv cltd (bad) icebp call (bad) repz scas mov jge push negb test jne and jmp xchg (bad) jp xor xchg dec mov es or xlat or jb mov pop mov dec ret sbb clc fsubl mov daa (bad) notl pop inc jmp xchg push and inc ss push mov xchg dec mov inc cmp data16 popa aas mov push les add sbb test pop push insb sub lcall ja mov xorl jmp out cmp adc xor inc gs pop pop test adc sbb and mov mov xchg jne and lods lds lock sbb dec frndint sarl stos xchg dec push inc les shll sub adcl push and push loopne daa adc fldenv or jae cmpl and ror add nop ficoml (bad) mov in jp aaa loopne scas shl (bad) xor ss push jmp cwtl sbb pop xchg push hlt sub in pop push add and pop imull push ljmp sbb (bad) movsb push rcrb cmp add pushf mov daa sti pushf cmp cmpsl mov jns pop adc jl aam add ss inc test mov jl push or mov loop (bad) fdivrl jg mov cmp pop dec ret sbb jns loopne xor xor bound enter sbb pop push pushf pop imul sbb fcmovb add xorl pop add adc cmovp cld mov outsb sub mov add lock sub (bad) xchg jae movsl fisubrl (bad) sub pop shr add aad mov aam stc inc jne pop push mov sbb lahf mov xchg mov and or outsl sbb cmp (bad) popa adc or or pop and outsb lea or mov (bad) fnstsw test aad mov mov ss add inc into or jae arpl outsb mov fwait cmp mov push inc mov dec loopne mov rorl insl mov jne cmpl inc dec sbb inc ret jle cmpb lods aam jo sub sub sbb nop (bad) xor inc call push push xchg fstps and pop jmp mov test cli add (bad) jno push adc xchg (bad) lret cmp inc sbb dec lcall xor popl cmp push mov int fidiv inc add cmpsl insl adc outsb cli popa push clc fmuls or mov cmp push pop add sub and and cwtl clc inc outsb push cmp xor das sub sub pushf lds enter (bad) outsl adc sbb jle adc js (bad) pop (bad) out jbe daa popf into mov popf add and sbb pop aaa test jge push nop call mov cmp imul mov mov dec add or leave iret pop test push movsl pop inc add dec adc cmpsl cmp xlat ret nop insb mov cmp xchg stos mov or pop and xor mov mov sti adc push cmp mov mov call or add mov fild fwait mov push lahf xchg sub shlb xor rol jns jp out faddp add aas inc cld fisub lea pop movsl pop push cmpsb add aad cmp (bad) jle add ret jns pop xor add cmc dec adc pop test imul xchg or adcb or inc arpl add jne rolb fild lea add xlat and sub cmp mov stc inc dec test jecxz or adc xor cmp push lret enter stos sbb dec cmp push ret jp or aaa jle add (bad) inc sarl rcl sbb add mov int3 inc jle nop rorb cmp inc xchg jo xor (bad) lock jl jle mov add xlat xor add mov je in sarl sti pop dec mov sbb xor (bad) and sbb xor les xchg jle mov jl jge in aas inc pusha xor or ficomp aam mov push (bad) loop mov cmp push sbb or mov inc adc movsl add fidivl mov add mov push pop icebp xor push dec ds inc adc xor inc (bad) dec add push push xchg sub dec loopne and jl ficoml or adc dec inc mov inc jg rol mov jl ret sbb push sub pushl mov mov data16 adc dec sti clc adc sub sbb mov xor and lods movsl shll dec lods pop sub push xor dec sub dec (bad) mov jl cmpsb negl out test leave ret dec jb xchg movsl lcall push xor or in icebp dec push add sub lea cltd nop dec scas (bad) xchg js in das sub push adc js maxps or adc cmpsb mov and mov pop int3 dec add pushf push push jo push adc dec cmp dec inc and (bad) cmp add xor pusha add lahf inc and and loop xor sbb sub inc adc sub xor mov mov and dec movsl rorb xor and ret push adc mov call daa andl xchg lret enter add lret xchg dec sbb jne push pop adc inc (bad) push and dec loopne xchg inc inc aas mov mov sbb subl out dec gs rorb jle xchg jecxz mov sbb popa iret pop ror inc shll nop mov dec add cs lahf pop add adc add mov gs xor push or shr rolb adc adc push xor subl sub mov cmpsl xchg jl add dec jl xchg adcb dec mov inc xchg js clc xchg lret iret popf pop inc or es loopne mov inc mull iret mov add push (bad) add les stc or mov mull test popf aaa loope mov and inc or inc mov scas cmp rcr xchg shlb iret jbe fisttpll inc push jno pop mov lcall dec lds add adc mov fnstsw xchg pop add or adc in and push add xchg xor ret addr16 jno add and dec int imul mov xor push jle jns,pt add cmp sbb adc nop call add mov test sub insl insl inc xor add daa pop fidivrl enter je jae dec mov jbe sub (bad) sbb dec loopne je (bad) pop fildl add sub into jae js mov cmp and jbe decl dec pop push aaa adc ret jmp repz push xor pop mov or les sbb lock dec int icebp push sbb gs js jmp stos rorb out mov mov cmp stc addr16 andl or cwtl js test inc or sbb fistpl push sub mov cmp xchg das fistpll je sbb mov out lock push js gs push jbe and hlt mov or xchg xor pop inc and push or les ficoml and and cmp loopne rorb or adc insl out lock outsl mov scas pop in insl jns mov enter pushf fwait sub jno sbb mov nop xorl repnz sbbl rcrl test add jge pushf and add push push mov or addb and bound xchg add mov mov pop xor xor add mov add inc pop and lcall mov mov movsl cmc jae in xchg inc add pop adc jbe lea sub jae jl mov mov jo mov add aad jecxz inc gs sub xor mov jp sub add int3 hlt mov push sbb pop adc (bad) mov pop push test xchg iret cmp inc jne dec in mov rcll add fisubl jmp rcl int fsubs insl fisttp push xlat pop out aam test or mov (bad) push test outsl mov cmp fcmove push push aam int3 push sub dec push call pop jl roll hlt test jle mov mov in inc popl push popf add jmp (bad) jae ret sbb cmp aas dec dec xor xchg ficoml loopne pop str in or sbb jmp dec sub sarb dec cld adc insb sub cmpb out add push clc mov push cmp movsbl add (bad) jmp and or push (bad) jbe pop inc orl sub mov ret and inc (bad) repz sbb shrl ret ret adc cmp rolb ret cwtl in ret inc push mov dec sub cmp sub push imul fimul adc push clc (bad) (bad) mov jno cwtl pop je sub bound xchg mov jle je xor nop in fbld adc xchg cmp mov mov jmp cmpsl andl mov dec rcrl shr dec sti mov stc cwtl sub inc mov push mov inc or xchg addb js mov and sbb (bad) adc ffreep jle movsl (bad) rcll push (bad) jne jmp xor dec adc cmp pop push pop repz inc loopne addl mov push xchg xor rcl xchg xchg or jnp pusha dec ret dec and mov add jne cwtl (bad) test xor mov inc or sbb test push (bad) movsl jne clc outsl sti or (bad) enter adc xchg and mov gs and lret jbe inc or je dec mov movq mov mov or xchg push ds xchg sub loop push xor fdivs cmc rorb (bad) pop mov jns mov jno frstor sbb cwtl or adc mov inc inc sbb dec (bad) xchg pop cltd cld je push or cmpsl data16 or dec es and push pop cmp sbb dec imul cmp jmp push (bad) adc sub push add mov cli outsb inc das mov test push adc out mov push add push iret fmuls push mov push add ss repz ds xor hlt adc pusha loope cmp jns mov (bad) (bad) out add rcrb hlt call (bad) cmp mov pop adc and add das xor sti and sub or mov sbb sub (bad) pop and sbb mov pop cwtl dec add (bad) adc add adc (bad) jmp or or pop mov pop mov sub add es dec fwait or cmp roll mov pop out hlt mov cmp pop pop insb ret nop jne lock inc call cltd or fisub xchg mov mov ja das xor jae xchg adc fldenv mov add das sub xlat js cmp jge xor cmp mov (bad) pop insl dec dec push aad cmp or insl movswl shr add inc and or xchg sarb or add add xor or sub or or mov add daa sbb jno xchg lds adc cld std xchg add push add lret push or fwait ret int je xor mov jo sbb and and arpl or jmp xor pop roll or inc imul fs (bad) push cmp add pop lret das in ret mov lods lahf pop xor jnp or ss sub xor aam sub lahf mov xchg inc dec add xchg and sub or add mov cwtl jecxz push xor inc loopne or adcb fwait and add dec or mov pop add (bad) jbe or push lahf ljmp aad xor jb call ret jno aaa and xor add call roll lods mov cmp jo pop loope (bad) and push push or and add arpl cwtl xor cmp loop into add rcll pop cmp push jmp mov sub das inc lret rolb add into or clc hlt jbe fdivrs and add rorl adc mov add lods hlt cmp xor lret xlat mov jne mov movsl (bad) lock inc insb cmp testl pop inc inc xor xchg pop out dec push sbb adc pusha mov add sbb xor and add inc movsb dec cs adc mov rorl or mov loop push cwtl xor testl mov inc add or sbb les arpl and and jecxz adc push and clc arpl les push jmp push pusha daa dec mov push mov out ss mov test xor xchg fs adc int or fadd sti popf and dec leave push rolb or repnz add sbb out jecxz rclb mov or xchg dec adc mov leave inc (bad) decl push sub sbb push jecxz sub jmp mov add add test or and fwait mov cmc or adc lcall cmc cmp out cltd in push ficom inc jmp mov and inc jne test pop or fnop or and sbbl cld mov adc and jbe jmp sbb out adc loopne insb mov cli push inc push leave sarl mov ljmp mov and or sbb movsb xor push andl sub or pop aam jle scas movb mov jo test sub mov pop or jge loopne mov and dec push lret shlb rorb mov cmp jns mov mov in dec push push sbb pop or inc add adc mov or and xor fs bswap push mov push test mov call test push repz (bad) mov mov movntq or je mov xchg or (bad) stos jge inc sbb (bad) (bad) push divb xor pop aad or mov pop or rcrl rcrb xchg dec pusha push push push std hlt or push dec in mov lock lds jl cli jae add shr or xor push and add inc inc jecxz adc rcrb jecxz ret mov inc rorl pop lcall xor repnz imulb sub sbb rcll push push stc sub mov hlt test pop outsb cmpb sbb roll jle pop push xor inc sti jns out push loopne push xchg lock call sub sub mov popf adc sub bound mov cmp add or cmp jl sub sub push aam cld ja xchg jo xor cltd add int mov iret or ret scas mov push jl (bad) add lock mov subl xchg mov fcoms enter dec pop pop stos add adc pop sbb enter xor fcoml fwait fs testb inc insb jne xor push into nop push mov or or orb push mov dec loop out xchg push iret or mov xchg push cwtl js fsub mov stos std add xchg call mov sub int cmp mov and cmp mov das adc cmp sbb or jmp and inc adc add es (bad) jp and cmp ror pop xchg xchg std mov clc sub cmp ja call or xchg xor sti jle mov orb stc test jne dec sub test sbb shr mov cmpsb adc cmc dec sbb pop or stos orb push pop add gs fwait add and rcrb push push cmp mov push (bad) jne inc fist lea dec cmp xchg out mov ret sbb outsb jmp lock aam lea mov add inc enter sub xchg adc pop jo adc hlt add and mov jle dec adc lds xchg sbb sub fs es imul pushf inc jns mov sub jle ret xchg mov sbb adc arpl jp or (bad) arpl mov arpl andb js mov jnp mov (bad) push push pop aas mov or stc jl pop push (bad) sub mov xchg stos sbb add cmp xor aad ja pop hlt rcrl pop and cltd roll push and push sub add add push sub sub push cwtl xor add orb mov lea bnd mov daa or les push leave mov sbb adc add or sub andb loopne push stos adcl jne pushf jg (bad) and jbe test dec or in sbb mov inc jno andl adc inc or add sbbl std inc pop loope add cmp mov imul (bad) mov cmp lea shll leave or cmc dec fwait ss sar xor (bad) imul mov fcoms xchg ljmp mov mov ret lcall (bad) stc add add mov in mov daa addl sub sub sbb lret test pop push pop and mov movsb mov les arpl ret push test mov sub or mov imul out or cmp loope fiaddl add fbld sbb test aad and inc cmp mov test push xchg push pushf pop mov flds stc daa cltd jbe xchg mov xchg or xchg add addr16 push aam in mov clc stos jp mov pop lea lea xor mov es mov outsl test (bad) dec cwtl in pop push pop adc sub xchg cmp fildll fisttp add pusha cmp aas lahf mov adc gs mov sub lds daa sub jns add push xor push jo mov mov xchg icebp add mov sbb add in jo test push popf cmp adc pushf sbb pushf push or xchg add jns cli mov adc push mov push incl xchg in and jb stos subb xlat mov mov jo dec std push bound test mov icebp push icebp (bad) test (bad) mov cmpsl adc call push push xchg pop push mov inc mov pop mov mov and stos pop mov pop call lret popf pop pop inc mov aas fisubrl inc sbb lea sub mov ljmp imul add cmp adc imul push cmp inc mov add loopne add leave mov aam ficomp push mov dec fs enter clc fisttpll jae inc test adc lods dec pusha adc sub xchg mov nop sub mov or cwtl adc jb mov cwtl push mov sbb cld clc scas (bad) inc daa nop hlt pop les sub push cmp adc dec and test or inc mov scas or adc cmpb loop xchg dec adc push adc lahf add xchg add call xchg jo rclb loop aam fild xchg (bad) stos sub repz xor cmp rolb test or xchg pop xchg cmpsl inc lret es cmp aam jmp add cmpsl inc popa add fidivl les mov aas les cmp dec rcl xchg sbb mov adc lea das mov sub mov and xchg sarb jb adc rclb push je xchg movsb jmp outsb mov ljmp xchg sub leave and adc lahf lahf lahf leave add lahf push mov enter aas sahf xchg add adc mov pop xchg imul adc push shr ficomp mov les mov (bad) rol push dec adc add lock jg cli mov add pushf cli pop adc and jg push inc mov in mov adc cltd cmp push adc inc imul cltd cld mov leave cmp mov inc pop enter nop sbbl call mov in dec js roll ret hlt or push mov sub inc sbb xchg lcall or adc int jl pushf inc jmp push cmpsb adc mov iret in cmp xchg orl pusha mov popf adc mov mov popf sarb adc sbb or adc jno inc jge add inc sbb mov enter sarb sbb inc enter add mov or lahf jecxz test mov in movsl fistp cmpb cmp aas mov and leave inc mov and nop push jb jecxz jmp sub mov push lahf mov mov mov movsb pop movsb dec in add push mov jae mov sbb loopne pop dec and enter push pop xchg xor movsl test push add add cmpsb ljmp (bad) mov aas cmpsl call pop add cs test and add or adc daa xchg addl stos and (bad) roll mov mov push and pushf stos inc mov pop stos enter rorb sbb in adc sbb pop pop cli ret mov and dec pop scas xchg pop sub push leave sub int3 les and pop push mov mov or xor adc test insb xor test lods xchg call inc lcall incl adc in xor pop (bad) loopne inc adc add sbb rcll pop scas rolb in jb mov scas je and fs rolb ret and loope popf inc test sub fist js das mov mov nop mov pop mov jmp and mov pop adc push xlat lea jmp pop cld pop (bad) mov mov adc mov sarl (bad) ljmp rorb (bad) leave or jae mov test bound sbb cmp mov rcrl call add inc add adc fist sub cwtl push xor out or and mov jmp pop cmp jg sub xor xchg xchg outsl icebp cwtl test mov sub push adc mov fs sbb std mov pop sbb push and sbb xchg mov int pop mov or mov xor nop add dec dec test sub pop and scas rclb test stos sbb jmp mov cld cmpsl push test enter push mov mov inc push mov xor aaa sbb add outsl inc cmp xchg jg dec mov lcall and jae jae movsb lcall push pop pushf mov lahf add sbb xor mov jg lds test dec rorl and scas ret enter jg sub mov mov mov aas fstpt shrb or cmpl dec pop pop mov rorl cmp psubq bound sbb (bad) notl (bad) inc enter sbb inc arpl mov mov aam mov pop mov pusha adc stos jg pusha lds cmp popf xchg scas cmp dec pop int3 sub pop xor add sub dec and cmp or push add (bad) fsub shrl push sbb pop loopne mov loope lea lea add dec inc imul movsl push jle inc imul adc sbb call jge jns lcall jmp scas nop xor push and lahf inc or dec out scas test lea (bad) sub aad xor dec fucomip push xchg push and mov mov test sarl xor lcall xchg movsl xor pop or adc icebp (bad) sbb push aas mov mov call dec inc add (bad) cmp bound lea test push and movsl test andl add mov and iret push pop and lea push mov mov xchg in jo sub dec or lea add or inc mov cmp and lret pusha roll ret inc dec pop pop adc mov in xor push clc push mov cmp adc pop clc sub inc dec xchg inc int cmp addb sbb outsl add mov pop nopl sbb sub sbb imul pusha pop dec movsl add add (bad) insb inc or arpl push ss push mov xchg loop xor or sub mov and les lods psadbw pop cmp push in subl das nopl cmp cmp mov ficom push aas lahf mov (bad) and mov sahf mov mov aam (bad) pusha in loopne sbbb sahf adc or loope lea pusha pop test mov setno and mov (bad) lods lea adc out inc mov push arpl imul jo pop push and insb aam inc (bad) aad mov adc orb shrl in movl jae test inc mov stos mov dec les mov pusha decl xor in bound in adc (bad) fldt sbb cmp lea nop mov mov fwait cmp adc movsl push xchg sbb mov sbb rorb sbb pop hlt (bad) xchg les repz and lods stos es push mov sbbl enter fistpll and adc dec les lret adcl cmp sti testl fildll insl rcll adc ss std jg rorb fs lea or das lods adc shll mov pusha stc insb sub pushf lret in std pop sub inc fild int3 lahf sub sub inc pop out int3 pop push test mov adc pop inc in sub in lret push loop xchg int3 push jb mov das add and pop add (bad) mov push in int mov or jg adc pop jne int lahf inc pushf stos mov into inc jmp pop inc or scas or aas hlt outsl mov (bad) mov fistpll out jae push mov iret daa or mov sub xchg iret and insb mov push pop xor xor xchg add fimul pushl pop push mov (bad) (bad) outsl mov adc es shlb pop pop mov inc pop push subl lret mov fadds mov xchg (bad) dec fildl cmpsb scas xchg or adc push mov lock dec or cmp lahf sbb add mov ficomp inc sbb push cltd pop es and js lock inc hlt dec mov rorb mov adc push ljmp rcrb arpl xchg jbe and jbe push adc mov dec ljmp sbb push cmc fcomps adcb jmp jns rolb aas fcomip imul lahf je (bad) lock lods sbb stc loopne push lds mov insl xorl es push sbb or pusha mov sub popa or inc fisttp lods lea fbld aad adc nop inc mov sbb and adc mov loop and aad int3 in or lea aad mov and sbb aad mov xor (bad) add (bad) xor or lcall incl (bad) cwtl jg das mov and xor add lea mov cmp pop cwtl pusha or xchg dec lahf enter fcom test sub add mov cmpsb sbb mov xlat outsl mov pop mov fsubs pop push add nop inc jg xchg inc mov xchg inc mov push dec pop pop push cltd and adc test pop pop and (bad) flds sbb xchg mov add cmp adc and pop xor mov pop mov xchg mov or jns (bad) lea or rorb push xor daa cltd pop dec pop mov fisubrl dec inc imul add xchg imul mov fisttp scas jb repz mov (bad) shr (bad) and add fs fistpl inc scas push jg and sbb jg or nop or lahf in cwtl test jg leave mov xor jle out and adc sbb sub add cmpl and add jg adc add or lods (bad) fsubl inc lds addb pop fdivrl jg test test jb (bad) (bad) js xor jg aad and lea fadd push mov lea dec sbb mov sbb adc sub (bad) and add sub pop mov dec hlt ficomp dec add bound cwtl lods jl (bad) lahf xor ficomp adc aas insb lahf fimul mov (bad) or jmp lods adc cmp sub pop dec mov add inc push cmp jecxz,pn xchg std test mov xor incb pop test cmp imul sar rcrb jno sub hlt xchg sub pusha jecxz inc inc js add lea lea sbb sbb fidiv cltd push mov ret lcall mov fisubr aas sbb add mov lea adc and (bad) adc shrl or add lods fsubrs pop pop cmp mov mov adc dec dec lea mov andb sbb mov cmp rolb or loope pop int3 pop adc cmp and jg jo adc mov in jecxz or push mov add adcl cmp dec mov test add out cmp cmp pop mov arpl lahf adc xor sbb push stos inc sbb fsubrs test insb xor ja push add rolb divps cmp cmpsb add imul adc push rclb jmp xchg xor les in push or add fadd adc dec mov (bad) mov inc jg push adc loopne inc sar movsb add add push cmp sub jo scas cs sbb (bad) fadd push test or imulb bound lret cmp and cmp test xchg imul lds mov mov and xor cmpl push adcb pushf in incl mov mov push mov leave jmp mov adc sahf push push xchg add cmpsl pusha and cmp cmpl mov lcall aaa mov fdiv xor (bad) out lahf movsl cs mov or adc cmp lea loope adc adc je pop mov mov out lea xor sub lods test pop subl push sahf mov xor cmovl pop jmp mov int adc inc inc sbb push call jg add and cmp mov enter leave in int3 pop lock inc jb fsubr add lock push pop imul or or xchg ss adc jb mov mov adc loopne jno (bad) out and test and js inc push and (bad) jo mov sbb fsts and incl xor or inc and add es push or fbstp (bad) hlt push mov or push xor stc loop adc inc ret cmc add stos inc or mov aas call inc into dec jl call mov inc insb call cltd pushl push mov mov jbe xchg cmc (bad) outsb rcrb push adc idivb add push jns inc push pop cwtl add icebp inc mov mulb push add aad je in insl mov fs cmpsb test jecxz lahf push js adc xchg add mull popa in shrl notl add fs testl mov dec cs call adc (bad) clc adc add (bad) push loope jge in mov push sbb insl in or cmp xchg inc dec (bad) pushf jg aad enter int3 inc fsubl clc push insb adc xchg inc pop push fbstp popa or repz int push nop cmpsl loope inc test or pop stc mov pop testl movsb sub sbb cli dec pop or mov dec adc pop sti and movsb and (bad) scas sti js cld inc mov cld push call lock aaa cld nop push call adc sub add (bad) jbe mov adc inc lret fdivs fimull jo cmovb std push gs std int3 add lds and mov and and add push dec stos jno (bad) xor fwait xlat es enter push sbb and mov int dec decl xor lds and pusha xchg or rolb decl andl pusha dec in or sub adcl loopne mov dec inc mov push inc jo or add stos pop dec aam stos mov aad add movsb or loopne add or out popf sub cld pop add insl push mov dec faddl andl aaa test dec les or mov pop mov roll notb xchg add test xchg add lods push ss js add mov movsb into xor inc pop paddsb lret rcll push mov mov int3 pop enter pop cld les mov cmp add ret adc mov jl push and jl scas adc add mov adc scas inc xor (bad) sub sbb imul test push scas fstpl roll xchg ret adc mov xchg pop mov ljmp ss movsb jge mov inc inc sub sub sbb cmpsb inc lret and jecxz (bad) jo and push xor sbb in subl inc jp je es int3 add xor dec or sub call out xor icebp xorl pop mov les loopne hlt fs fdivr lock in inc loop ret aad je adc adc (bad) jle in ret int3 add fs inc ds add adc lock subb mov and fist (bad) xor inc pop and insl pusha add enter add (bad) jb inc sbb nop jns jns movsb xor adc and or sbb das das das pop mov adc sbb outsl lahf pusha fist sub scas addb in sbb jno or cmpb xor dec pop sub mov push mov dec sub jnp lods sbb fsubl xchg mov fadd insb mov sub mov mov inc adc test or cmp add xor movsl fistl add sbb bound pop repnz in push (bad) dec cmp pop inc cmpsb inc mov push dec int3 lock push inc cmpsb lcall xchg jl lret sahf add fwait add sbb adc and xchg add jge jb les cmp sbb ret xchg (bad) sub test push (bad) mov lods das subl ss cwtl mov ror inc sbb add cs (bad) stos xor pop jl lods jnp les clc lds dec sbb xor and pop mov stc loope xor (bad) mull mov inc aaa lock inc rclb ret loopne (bad) jne adc daa arpl sbb sub sbb aas mov inc aad jb out adc fucom mov sti sub outsb add sbb imul push fcompl xchg int3 es clc mov push (bad) ss out xor or xchg hlt shr incb les jmp jl dec insl nop or insb pusha insb lods pop addb nop rol xchg or pop idivb mov pop outsl inc push jg cmp shl push fild push (bad) push or movsb xor cmp add inc addl xchg stos rcrb sub push push lahf inc push add mov inc sub lahf dec pop outsb push add jge (bad) and and or (bad) xchg outsl or push jo push test jge xchg outsl or jo push mov xchg outsl lahf pop lahf outsl or lahf xor xchg pop pop lea inc imul cmp mov sbb pop jecxz out or daa fmull or cmp inc xchg inc sub test add pop pusha adc ja in sbb pop clc je add cltd or mov and (bad) or test es push rol ret adc push pop jae nop adc dec insl pop clc push cmp les cmpsl adc fsubr add cmp sarl or dec pop jnp jns iret xrelease jns inc fidivr out popf cmpsl mov sahf int jns (bad) jno jb nop sahf int insb jae jo je (bad) rep fnstsw pop lock jne xor jns iret inc mov ja fidivr jns adcb push xchg fimul push push add fidivr into addb xchg mov data16 or push cmp or dec mov mov push fsubrl std mov jnp dec lods cmp adc cs or jecxz push inc pop push inc inc add pop inc pop (bad) in ljmp jbe insb imul and jae je outsl outsb add decl outsl and add cs add arpl insl outsl fs (bad) pushl gs arpl gs jae arpl jb mov jo scas fcmovbe ficom js jns add sub (bad) jbe and je and imul cmpsb inc xchg pop ss fisubl push dec push fs shrb out (bad) jb ja pop lret mov push gs adc sbbb push cld daa and xchg (bad) pop cmp cld outsl data16 jp and jp pop pusha mov inc outsb (bad) in popa not push sbb insl (bad) loopne xchg pop mov push dec dec and ds or pusha or pop sbb xchg pop inc cmp mov push inc cmp sub fsubrs add pop push jo lds sub push dec mov or xchg test mov outsl gs inc jno mov pop xchg dec push add mov cmpsl adc je cmp adc jbe gs mov xchg jne data16 mov lods adc outsb shlb ret push xor jae call mov mov (bad) in jne data16 push fild or add lods jge and xor push sbb sbb inc and int inc adc pop lock pushl (bad) insb fs imul inc jbe dec dec jo dec and aam sbb jp inc dec dec add adc ds ficoml mov rcrl adc faddl mov mov ds push cmpsb xor or adc mov ja daa inc mov insb jns mov or inc mov or fistp push divl jecxz shr popa dec pmullw cmp push jb lods loope inc mov std negb fsubrl cmp jmp xlat addl out daa mov inc push pop inc dec pop dec inc pop jbe push push pop mov cmp pop mov jg adc cs or mov or adc inc and cwtl cmp pushf aad mov bound sbb xor pop push mov inc insb div add sub je jbe loopne push shrl dec mov stos mov add mov aas movsb ds add je cmpsl mov adc mov out loopne mov inc sub jne fdivrs dec in aam xchg outsb push es clc push push gs imul xchg pop ds jbe push popf adc scas data16 outsl sub mov imul pop fcmovnbe adc sub mov fimul cs and push daa adc and sub orl and sub push fsubrs sub ret sub or mov popa mov xor push gs push movsb pop inc mov lahf xlat add pop inc pop out cmp pop inc popl daa rorl ret jp mov push lock push sub cmp dec inc pop stos adc in inc dec dec xchg push push loope sarl sub sbb adc pop rolb divb sub lods fisubrl xor fs mov push data16 xor in cwtl out inc adc and fbld sub imul push inc gs test mov out ret insb mov and add push outsl or fsubrp push sbb or popa sbb roll mov sub mov mov pop loop pop lcall add pop add add pop jae mov pop das pop add push aas pop outsl pop test mov jg jae mov add or add pop mov add pop rolb in out pop pop mov pop aas jg cs add xor sub movsb jno xchg pop jg (bad) das mov decb fistpl fidiv dec inc fldcw sub push cwtl orb or scas jge lods or add mov out lods mov sbb add jge cltd inc add adc insl pop mov lahf lock scas add add push scas sub jae repnz loopne sub inc insl (bad) cs pop mov sub and pop into scas fstpl js cmp data16 cmp movsl les and add ja popa outsl ljmp sub outsl xor sub add imul insl out and dec fs popa js xchg cmp sbb cs pop (bad) insl addr16 add in xor aas dec outsl arpl mov jo cmpb inc popa imul mov and loopne cld iret gs jne dec dec adc jns jb faddl cmp mov loope incl incl add add jmp jbe mov push ds add repnz dec pop sarb addr16 pop sbb pop xchg push jne jae daa jge pop roll fs mov jns movsl dec add sub push sub push outsl jae or (bad) sbb add mov adc and xchg fldenv jae mov fsts add inc jg jo xlat es je in popa (bad) lock and inc mov lahf outsl push aaa cmp xor sub loope jmp in gs sub pop lahf fnstsw dec jne push pop inc test pcmpeqb aaa jp sbb arpl cmp imul (bad) or arpl data16 fmull lock inc fs inc jns add mov push pop jns push enter or (bad) repz gs fsubrl or ret loop xor sbb mov fwait xor jp and xchg pop xorl push sub jmp push loop imul xchg outsb daa je pop testl xor mov jb outsl dec sub sbb sbb pop push lock lods cmp mov pusha push jbe cmpsb stos cmp adc ja push add push and sbbl push imul mov mov mov daa cmp fs mov adc push je (bad) mov lcall xchg push in fs (bad) loopne (bad) ficomp adc mov mov add mov lods data16 jae and push mov andb adc dec fsubp notb inc fs xor mov cmp gs mov jae (bad) shr inc outsl jne lock sbbb cmp jl lahf mov and or ds adc dec pop cmpl fs mov out rol pop push iret cmp out dec or fnstcw inc jnp mov xchg pop add fwait add mov push (bad) sub mov rcl add add fcomp outsb push fidivl jp sub pop ds push sub or fst ds imul idiv sub outsb and (bad) mov jecxz iret inc jne cwtl cli mov cmp test adc sbb fcomip loop xlat jge sbb popl cmp xchg and mov dec sub add or inc popa dec push add jns nop sbb ja push cmp das outsl nop insb push outsl pop dec dec push or add imul jl jp cmp xor es popa bound rorb imul and popa inc div and imul dec add or cmp (bad) push pop cmp cmp dec cmp fidivrl jae jle pop cli sub push pop xor jle jo sbb sbb dec pop adc stos test pop imul ret arpl aas sub pop mov insb out ja cmp shl inc cmp pusha je push pusha fwait pop sub push ja int3 sti or sbb jnp lds add add xchg xchg add sub shrd xchg inc add insb fdivrs ret xor push and ret ret mov loope jnp inc pop sarb mov mov pop inc cmc gs pop lret pop mov add mov test pop pop mov inc add sub aam scas loope repnz out jb (bad) add inc add pop (bad) sbb cmp jns sahf enter xchg or movsl sub test xor adc inc cmp cmp or xchg and mov dec in or repnz push (bad) mov js add mov into cmp les fldenv jp jno enter outsl and add ret clc cmp sbb adc push add pop popa call pop xchg jl push add pusha in test cmp pop jo or orl in add dec out jp,pn pop mov test sub and es mov add mov imul call cmp ja xchg pop sti push and jns bound les jns imull inc mov mov imul inc adc adc pop outsl mov leave xor add out mov inc dec add push ja mov sbb mov ret insb int cmc jne xor cmp cmp and mov mov outsb push jns mov jnp and std add push cmp fldl pop push imul sbb daa cmp jo xor pop dec xchg push sbb scas xchg data16 jne and cmp cmp mov roll jmp insb roll pop push add icebp add sbb test ds mov or mov and push jb xor outsb out push adc mov mov pop dec insb pop imulb das fs scas insb sbb inc push mov incb pop ds cmp fsubrs ret out cs addr16 imul pop adc popa (bad) loope ss jae push sbb or test or leave jae jb popf jge nop insl xchg cmp shlb pop and test call lea sub stos fs push shll add pop or je pop dec int3 shlb adc or subl pop rol pop mov out jae xchg pop mov xchg add mov xchg aas ja cmpsb jge fisubl loop mov addr16 and mov mov dec and data16 ret fistpl push stos mov jne imul cmpsl inc pop arpl daa pushf and and ss push int cmp bound xor inc in ja add loope pop add stos outsl cwtl popa add data16 dec in (bad) push sub shrl fisttp add jnp xor ds jb push popa movsl ja sub adc or pop cmpsb xchg jmp (bad) fnstsw into nop mov xchg mov xor popa jl bound sbb push loopne jne jo test mov and pop (bad) push dec dec mov imul ja pop xchg xor test popa mov arpl add push test (bad) mov dec push add sbb add cmp pop ficoml je and adc sub imul fs sub jo pop or mov xchg xor lods push lods popa test add inc add sub iret push int3 fadds jae aad loopne ret adc xor fiadd vmread mov outsl pop (bad) inc jno in add bound add xchg pxor and xor outsl adc push mov push xorl js add dec stos and lret ret mov adc mov and imul xchg dec jnp popa and xor add cmp and and loopne sahf push shrb outsb mov jbe inc sbb mov xchg mov sbb mov into arpl mov outsl and lea sahf cmp and cmpsb and push imul hlt lahf mov or mov add inc daa jl jne xchg mov lahf adc xchg into leave or shrb dec push dec jae pop sub inc insb and mov push pop nop add mov test sub dec inc add cmp mov ja (bad) flds xchg push imul les mov jecxz sbb sbb adc out les dec outsl inc cmp ror in out daa scas and out sar xor and cmp xor jae popa xchg add add inc data16 iret push xchg mov pop fildll pop ror fistl loope aaa add lea or loopne push daa or rolb xchg add sbb sub add lods or cmpsl push stos loopne je mov or popa sub xor push pop jnp or ja daa cmpsl outsb lods inc mov inc mov sub sbb mov daa mov pop lds inc fs sub dec lock jnp cmp rcl mov dec inc jne jecxz and cmpsl and dec shld inc inc mov sub cld fdivr inc inc pop push inc push rcrb sub outsl nop insl popl inc pop pop ss push scas mov and arpl sub xchg push mov (bad) jnp vmread popa or in insb es subl das mov rorb inc inc loop test jecxz inc xchg mov xchg cmp fwait mov insb jne gs sbb inc aad mov dec daa pop les aam addl mov jecxz jecxz pop cmp sbb add in mov cmp pop or push xlat or ficompl shll sbb ljmp inc lcall iret inc inc nop xlat push lret out and or pop sbb mov add sbb std push push push enter inc (bad) shlb cmp mov xchg and lods xchg lahf mov inc mov cmovle pop lret inc cmp clc push and cs or pusha xchg (bad) fcom dec js push sbb mov dec les or xor add inc sub fimull aaa mov lods xorl fcmovu outsb int3 loop test je push jne call aaa and push sbb add fs scas adc sub push push sbb sub xchg xchg jg cmc (bad) pop mov adc addb mov int adc dec xor imul mov push sbb insl jg fisub push add push push dec push inc inc inc fcmovbe scas (bad) pop inc push push inc dec inc lods sub dec adc or add push mov (bad) push shll xchg ja or pop aas adcl mov popa sbb stos pop daa test ds aaa sbb and bound insl sub mov xor jo sbb nop stos es ret fdivs mov sub iret rorb int sahf mov xor int3 (bad) push or xor and daa and sbb ret push jno cltd adc xchg in or jg inc dec push inc setae int3 sahf insb push data16 mov aas jecxz inc cwtl (bad) mov dec pop cmp (bad) mov scas add imul sar rorb jae loop nop mov add daa sbb xor mov jae pop iret ret mov out and and or cmp and add sub (bad) and roll pop sub sub dec (bad) fidivr cmp dec pop inc sub sub push xor pusha pcmpgtb xchg rcll loope es arpl add or mov aaa jo outsb adc aad icebp fdiv push outsl pop out xchg jecxz scas push pop lock popa cmpsl pop mov subl sbb pop pop cltd cmc or adc dec je insb inc popa mov push out lock mov imul push push push insb les mov pop mov push das mov adcb outsl insb add es jns lahf les sbb jbe pop sub daa cwtl mov (bad) xor inc das arpl fidivl push lods push pop test sarb fdiv xlat push push inc pop push inc inc add ja and daa testl cltd pushf push fdivl xor xchg popa push les xor sbb cmp pop movsb and sub jp fs jecxz pushl xor and negb dec xchg jo insl arpl sarb insl fistpl mov mov insl cmpsl dec mov mov dec jmp dec test adc jge lods adc pop iret mov lret pop imul xor sbb cmp (bad) pop sbb jbe dec push fnop pusha cli call test lcall aaa rclb pop mov xor pop or push adc lods lea out sbb jne (bad) push js dec (bad) or sahf mov inc add jmp sub pusha jbe adc test push test xlat mov out addr16 (bad) inc cmp push outsl xlat movl or pop mov sub arpl xor cltd xor sbb xchg sub or push out jg mov push dec fs cmc and movsl push and lock imul and lret aaa adc repz xor (bad) xor loope and outsb and mov (bad) pop pop inc xor fiaddl sbbl mov or (bad) mull cmpsb imul push loop push and xor push fisubl insl scas xchg sub add js sbb mov stos inc ds cmp xor or aas sbb subl push inc mov add and aas jbe pop jo enter scas lock adc ds xor push add pop sub (bad) arpl jp pop arpl or add dec mov aas shlb jo adc add add mov jbe xor fmulp mov and arpl ja imul andl orl clc test push and push adc lcall push mov outsb or adcl es lcall and scas push mov jle push pop test mov mov arpl xor addr16 js push push call fidiv sub jecxz cwtl inc xor and mov (bad) dec and and outsl inc jbe rcrl dec and jmp and or mov insl add push or sbb pop inc addl inc cmp lcall fbstp inc or jg pop imul xor xor sbb xor xchg dec inc mov out icebp js inc mov and int sbb test mov xor insb mov mov (bad) adc pop xor (bad) push sub (bad) ja nopl adc aaa mov cs cmc xor xor (bad) js adc test jmp mov jne sub loop jp dec and dec inc outsb mov insl and pusha dec push xor or loopne ljmp inc mov add fstpt sub std cmp jne pop hlt sbb add dec gs dec push pushf (bad) rorb fdivl jne movsl int test push test das xor inc jbe imul insl or dec inc dec or mov xor lock jne inc or mov lahf mov mov js (bad) (bad) push and rorb outsl and adc dec jne dec fdivs sbb sahf dec addl push rolb or shl push inc popa xchg jno cmp dec xchg es popa sti mov roll insb push nop inc xor imul cmp fdivrl sub inc cli jnp inc or (bad) rolb add push dec out pop adc sbb adc ljmp or dec enter insb hlt or fdivrl insl mov add jb adc xorb adc dec xchg adcl mov enter imull aam push push shlb cmpsb pusha out (bad) cmpsb aas cmp sub sub sub lea imull mov sub cmpl mov ss cmp sub push mov dec add xchg dec into test pop insl sbb sub mov mov mov dec insl (bad) js jnp jae insw lahf jne sbb xchg shll inc inc dec xlat aas add sbb jns outsl out push sub xor sbb dec pop je pop jno mov loope arpl pop or add das jl sub inc std push pop mov cs mov mov sbb mov jns outsb js cwtl sub adc test inc lock sbb fistl ja mov dec shlb rclb inc loop fisttpll push test jb cmp mov dec sbb sub inc lcall sbb (bad) pusha push push push dec push dec push dec push dec dec dec (bad) mov push dec push dec push push push push push push push and aas ret fisttpl push dec push dec mov dec push dec push dec push push (bad) (bad) jg ficom je push push pop push pop push pop push pop push pop dec pop dec pop dec pop dec push (bad) push incl inc push inc dec inc dec dec dec dec dec or push dec push dec push dec pop dec pop push pop push pop push (bad) outsl ja pop pop pop pop pop or push dec leave push push mov push push push push pop push idiv pop pusha push pop pop inc pop inc pop dec push dec push inc dec inc dec inc dec inc xchg outsb add dec dec xor notb push lcall outsl inc pop or pop push push push mov jge nop push pop push mov pop mov and js ja xor jb insb push mov fcmovne jbe dec and push pop pop pop push mov idivl test mov add (bad) daa mov push bound bound or or movsb scas xor or add dec inc jnp lahf push dec push nop mov hlt pop mov jo in dec pop push outsl dec push dec cltd popf fisttpll rcrb push inc cs xor in fiadd push push dec push inc dec push into mov mov dec je jg or fucomp cmp pop inc push or out mov add xor push push or outsl pushw scas dec (bad) lret push push and or sbb repnz mov icebp fstpl adc dec push dec adc xor dec adc pop dec dec dec adc icebp inc push inc push cwtl dec xor push pop push pop dec pop add popa dec hlt and push push pop lock push inc mov pop push pop push pop dec fsubrs mov dec setb inc (bad) push dec xchg cmpsb pop dec (bad) push sahf insb int adc sbb inc push inc mov test xchg sub push fxch aas fsubl jle pop inc inc bound pusha inc rclb jl cs push inc dec pop inc inc push or jo rol add fcompl adc push and dec js lods lea cmp push es mov and dec dec dec call outsl data16 aam push push pop cmp dec jl mov push dec pop (bad) dec add sbb orl pop dec pop add (bad) pop dec dec push push insb push pop and pop dec add in negb fmull dec push dec push rclb push cmpsb or cmp inc movsb dec and xor cmp mov xchg into sub cmp fisub mov lods imul push pushf cmp loop pop push js push dec push cld dec push push rcl jmp push mov mov mov pop push daa xchg pop mov xor scas push pop pop mov push push rclb enter pop sub dec push mov push pop or fiaddl enter dec aas pusha es ret sahf dec and add push sub data16 dec sbb mov out into dec rolb add add sbb inc pop pusha nop push adc push pop lods or shlb mov push jne mov push lcall and jo add pop sbbl mov cmp mov pop dec push cmp add dec jb cmpsb lods cmp and and add add incb pop rcll dec pop cmovb pop adc xchg add jle mov fwait push pop inc push ret ljmp inc mov sub andb test out or jbe xor ja push dec xchg test flds pop dec push jbe hlt les jecxz and xor test cli xchg xchg dec out (bad) sbb loopne push movb out aam push ja push loopne push push push inc jno repnz mov cmp inc inc jp dec in or hlt cs inc dec movsb faddl add or js push stos loope divb andb ds xor shrb jbe push dec fdivrl or adc add clc push xchg aam push cmp pushf dec fs (bad) pushf xor stos data16 jp push add push jbe push cmp adc xchg jp sbb cmp xchg add push in cmp inc test cmp mov cltd rcrl lock push push or mov xchg and dec popf mov xchg sub movsb xchg inc and push inc push fimul dec mov lahf mov dec pop test dec cwtl dec add adc mov inc add dec adc pusha dec cwtl mov push xchg and or add xchg sbb dec test xor sub sbbb push push jle push mov inc pop dec in cmp cmc (bad) or popa aam sbb mov add testb mov int3 push push and sub fimull loopne loopne lock lods adc sahf jae or lret das outsb mull stos push and cmpsl int3 cs adc test test int sub sub enter sbb add add adc loopne pop and add sbb pop cmpsb (bad) lret and clc rolb cmp adc or mulb cs or mov push or pop push dec xor xchg subl outsb mov cmp dec sub sbb dec out push dec mov inc xchg imul addl mov nop ds dec insb test inc mov cs or mov cs lds cmp pop push dec xor and (bad) loop xchg xor sub mov clc pop pop xchg sbb jecxz or inc pop hlt cmp insb ret inc ret dec jbe adc dec and loopne es in dec out or test push sub (bad) mov or or or je mov lods dec xchg jnp cmp loopne xor push bound push pop push test jo stos mov inc push inc insl push adcl pop push pop xlat pop ss pusha dec lcall sbb pop and scas push dec dec adc add xor pop xchg mov jno inc push inc jb outsb xor push inc or or pusha push outsb pop or xor dec sub pusha or push mov inc push pop inc push or dec lea or dec (bad) mov (bad) dec inc dec mov out cmp lret popa and loopne dec push lock push dec lret push pusha scas add nop add push dec test ds js out push dec lcall inc push pop push repnz (bad) ljmp xchg ret jbe lret xor sbb mov pop add in sarb push push cmp and push ficom and adc push es pop push xor stos mov xor dec push fs out aam mov pop dec cwtl loopne adc pushf add into ficom daa pop ds lock ficoml or push xchg out sbb push mov or xchg mov (bad) mov pop cmp insb and push add and mov cmp outsl or add adc jb xchg sub sub push push add push fcomps push popa lods jle mov push scas addr16 decb sbb cli pop sub jo test or dec cwtl sbb cmp pop dec sbb sbb mov and in push mov cwtl xor dec ret (bad) jb outsl jl ret jecxz add push add adcb dec insb xor sbb dec adc or test (bad) pop xor les or cmp scas mov sbb movsb push pop push mov xchg lock pusha mov pop push push pop cwtl (bad) sbb sbb dec inc or loopne add das ss cmp lods test dec or xor add or mov dec add xor xchg mov push in inc push dec xor fs xor pop icebp push or je sbb push es xor int3 pusha add push enter (bad) inc (bad) xor xchg mov daa subl jo test mov adc sbb js ret push das adc repnz dec subb dec fcoml je (bad) cmovbe jmp (bad) sarb dec iret push mov inc addr16 sub mov test leave fs jp loopne xchg jb scas andl andb push jno add or out dec adc stos and push pop or fadds xchg les sbb add mov rol xchg addr16 xchg push ret cmpsl add dec movsb sbb xor dec lods cmp mov adc lret jbe push mov (bad) cmc mov push lcall scas loopne iret out add cs adc enter add aam pop in dec fmuls dec pop push ds fiadd jo jbe repnz test mov push push pop sahf push pushf add push and cmp into inc int3 and rolb dec xchg push movsl inc das movsl ret (bad) fbld jo push hlt popf push mov sub sbb mov xor mov divb hlt xor dec test daa imul xchg push jl push out xchg in jbe iret push popl xchg scas push push mov ja sahf inc adc mov push pop dec pop push pop sbb push cmp rclb adc xor (bad) pop mov int3 sub add addl cmp mov cltd adc dec and mov cli xchg scas aam pusha popf icebp sbb imul or bound inc popa hlt sahf push and int3 adc aad mov enter cmp xor pop dec mov dec sub pop in push test aad push movsb cmp into mov add (bad) sub jnp lock push push adc sbbb bound sbb popf add (bad) and xchg or clc pusha sub es dec mov shl xor push cmp adc adc ficompl xchg lahf dec cmp adcb sub push inc or xor inc adc or push xorb in dec dec outsb js arpl bound lea andl es cmp out and jl or push mov adc idiv mov adc test push es bound dec pusha dec pop dec add mov pusha dec pop mov (bad) scas dec push push push (bad) jbe or add dec push addl imul js lods push adc push in aam dec loop dec rclb sbb push and adc into mov inc mov sbb popa inc push inc (bad) (bad) dec mov or or nop adc fcoml pop inc pop mov push inc sbb scas cmc xor xor lcall add and push push pop cs xor or pop out push int3 adcl scas push and cmp inc cmpsl inc xchg rorb push inc cvttps2pi push inc add pop inc cli dec dec rorl daa cwtl mov stos (bad) test sub pop mov out fmuls xor inc push cmp push or stos loope pop outsb out push push push add and ficom or inc dec and pop hlt lods addl add out imul add pop rclb lods push sub add in mov shrb (bad) xor pop push call mov push sub mov or out data16 push dec or sbb pop aam call push xchg das jmp daa pusha push das pop sbb scas sub add push pushf push setae hlt xor xor push insb pop cmp add sub movsl (bad) jmp mov mov and dec bound popa dec adc jp,pt pusha cmp push sbb sbb shll or xchg pop js push dec or push sub repz or sub sbb jp pusha add xlat push mov xchg stc jbe jle inc bound aam inc or push cltd pop xchg decb outsl lock subl inc cmp push mov and es xor mov jle push or leave iret ret jmp adcb cmp inc lock or mov popa or and adc mov arpl pushf mov dec js addb scas cld jle or xor cmpsb adc pop push push mov jl mov ds adc push sub lea pop push or pop (bad) jbe notb push pop in push cld adc pop pop popa pop bound sub lods mov mov jo and push add call dec ret add rorb aam mov push out push cmpsb xchg sub push mulb adc xor or push fwait push call or dec xor dec push add push test inc sub cld cmpsb add out mov stos gs pop dec popa loop dec add loopne dec pop repnz adc add sub pop push mov add dec cs dec ss scas push (bad) pushf aas (bad) sbb inc decb call (bad) pop adc add popa push loopne push cmp dec or add mov mov mov out pop add loope cmpsl inc cmpsb fidivr pop push xchg pushf push clc jp push pop stc (bad) mov (bad) shlb dec add insl (bad) shlb cmp mov jo or inc push inc rclb ljmp and mov lea and lock dec pusha dec jle add add into shl jle push scas dec popa ds xor mov pop push xor fmull add or js push repz push bound jno and adc out pop out sahf test outsl pop loop adc push gs outsb cltd cmc (bad) clc and or sbbb sbb sarl inc add jae inc inc leave push dec out loopne mov fisttpl adc (bad) fistpll jbe in jmp push mov cmp xor xor push or cmp (bad) and push rorl mov or je push (bad) scas jle inc inc mov mov sbbb loopne stos or push adc pop lea jo popf jl sbb dec dec popa mov dec ds arpl mov lcall xchg and push and pusha (bad) pop dec dec inc arpl cmp mov scas jo js pusha mov jo les dec dec bound push sbb sbb das sbb or push popa pop bound pop popa in sbb orb cmp mov push fcompl cmp in hlt loopne or dec sbb bound mov add adc adc add adc xchg push movb stc adc sbb push ret arpl sub mov popa or (bad) sbb pavgb xchg mov mov js and pop mov loop mov lcall adc ret int3 adc mov and sub test pop push adc int3 adc cmp sbb adc addl out pusha add push fimul scas or add push mov add test scas fcoml dec (bad) push lods (bad) dec xor movsl dec popa sbb pop add in push sub push xchg xchg dec push jno lahf dec xchg sbb (bad) dec jo jne sbb and and inc push and mov xlat pop add fs add in pusha jno sbb inc adc call pushf ds inc dec dec push repnz sub inc push mov ss ds rorb mov ret or push mov in popa push popa or add sbb push (bad) jo sub pop cs orb ljmp xchg out popw mov lret mov fsub push push dec das loopne mov mov push sbb pop jb aas call repnz lods test pop es pop shrl cwtl insb dec pusha aam sub cmp sbb add in adc inc dec mov dec fs or mov in aam sub xchg sub pusha cs add and push scas sahf mov cvtps2pi adc mov sbb sbb adcl fisub (bad) adc ljmp mov test in call negl mov (bad) pop leave or cld dec lods add movsl cwtl jbe and fs add lret push pop and sub pop pusha test aas add add dec push ret or xlat push dec cmp push xchg adc adc aas loop enter or subl (bad) cmp push dec insl (bad) mov bound cmp adc push dec push adcl int3 add pop add cmp adc dec jge fcompp mov dec push jle push add shrl lods mov sbb sar movsw lcall xor ljmp dec scas and push ret xchg dec lahf inc pushf add pusha add mov or ficom ret sub inc into mov ljmp jo lahf dec push mov clc pusha or jle adc lea popa and iret push lock dec rcr mov loopne fcoml loopne roll sahf adc arpl xchg cmp sbb add sbbl adc lods data16 (bad) popa mov cmp xor gs rclb stos inc adc dec lret pop and inc (bad) jae lock je jecxz mov jp push jp jp movsb xlat addb or lea or dec inc mov push pop pop movsl pop pop lahf or dec fidivr aam data16 fstpl add sub js ret dec jb loopne mov adc fimul cmp or lock bound testb cwtl pop call add inc je out pop mov or addr16 ficomp lock and pop xor xchg mov pusha push mov add sub ror push sub xor fisubl loopne add jbe test jnp jp xor xchg outsb add push lahf jbe or int test jae jb push into into test or mov or sbb sub dec cwtl pushf sarb add jl adc cmp add inc mov add ret dec push mov (bad) mov or ds loop mov dec or sbb rolb jge sahf add lock mov out jae add xor add push dec mov ret jl push test sub loop push outsb shlb jbe inc inc push jle mov push or push mov mov xor xor push in aam push inc mov push lock call jmp xchg loop pop add test int je sets bound addb outsb push inc ljmp and jbe or xchg clc jge pop pusha pop or (bad) out push bound xchg add js test fmulp in jp or mov push dec mov pop loope orb and jo mov adc add push and pop pop pop jbe mov inc xchg xchg or sub loop pop add subb or jno (bad) or push cs push pop add clc push sbb cmpsl lods inc dec dec add adc cmc mov dec mov push sub nop add stos pop add push in mov (bad) pop dec pop dec pop push pop and dec ret mov xor push and mov in popa (bad) sub inc into and inc dec pop inc add data16 fmuls pop in adc and push sub or addr16 inc test mov adc dec sbb dec dec add dec inc mov or add mov pop lcall popa mov stos repnz data16 xchg add or pop mov or lods or xchg push sahf jp push dec mov xorb push setae dec loopne and inc ret adc xchg rclb adc aam pop out xchg cltd int add xor ret loope repnz fild jg push (bad) mov ds or xor and pop push into adc xor pxor popa ror and sbb pop out daa adc add add mov adc push ljmp xchg and imul push xchg jb push push (bad) clc lea xchg pop std pop push pop aam push (bad) pop push pop loop xchg loop in int cs sbb cmp call jno outsb outsb push add sub lcall (bad) adc inc inc popa inc mov les inc flds push dec push dec or or jmp xor mov sbb outsl scas dec push jg adc add sti xor inc add jae inc sbb push mov shrb pop add sbb ret (bad) or or nop mov add out push cmp mov movsl adc fild pop negl icebp mov add dec test out adc adc mov push mov stos test push pop test push dec mov popa (bad) mov push push loopne (bad) stos cltd pop jg jecxz add rcll pop out or loop sbb and add (bad) push push mov cmp pop inc dec or inc daa (bad) jp pop mov dec jle adc add (bad) enter popf pop cmp test push push rcrb xchg inc or inc or inc pop mov adc negb or and mov out mov mov jae roll cwtl fs popa sub inc and dec mov fisubrl ficomp push xor or inc rorb inc push mov add mov xor rorb inc mov xlat jbe or pushf push pop aad and pop inc les in in subb lock or (bad) dec mov daa pushf divb lcall add dec mov inc add push mov sub in jp dec inc gs or pop xchg cs inc push dec mov inc sarl fidiv in popf mov lods lds ss sahf call dec dec repnz adc jmp add int imul xchg pop dec jl inc ja add dec inc xchg sbb cltd adcl scas pop pop sbb mov push pusha mov mov loopne,pn add mov jne cwtl cmp mull or and lods sub mov cltd add pop out jo in pop (bad) fnsave sub cmp ljmp cmp je pop add xchg (bad) push or pop les and bound aas fcomps pop scas pop call int and push pusha push pusha push pop movmskps cmp dec pop lods insb pop test lret int3 data16 cld and sbb imul or imul clc repnz cmpsb xor in cwtl mov xlat (bad) (bad) lahf xchg out dec jecxz cmp inc pusha dec inc jne ret add cmp push pop or pop into mov pop into (bad) inc mov xlat out lret leave aas inc sbb or nopl negl or into in adc enter inc mov push into cs sbb jb add and push cmp xchg sbb mov adc dec dec clc fsts or ret sbb sarl sub push jp dec (bad) rcrb push mov sbb inc ss insb xor (bad) or sub push push lahf add dec mov hlt sub push popa imul lret push rclb inc inc pusha push es cltd test or test movsb dec cmp insl pop cltd popa pusha push (bad) movsb jbe xchg lds sbb mov inc mov xorl or decl push sbb xor pusha int dec jmp push sbb (bad) aam scas jl dec add push or or lret and adc jecxz aam mov adc lcall pop dec pop dec pop dec dec add and adc inc pusha sbb jmp and js mov push mov cmp and push push pusha popl ss inc test loopne es dec (bad) push fdiv adc push mov push push cltd cmp jnp into mov (bad) jle arpl push data16 push add aad add mov add repz or aam cmp leave jle sbb push add outsl scas xchg inc inc add push es and and xorb jl rcrl dec in mov cmp jecxz push push ljmp (bad) pop push fs add and cwtl or or or mov dec mov push in mov js inc and push add or les pushf ljmp nop fcom mov and inc sub loope out dec mov lods xchg adc aaa adc in pop push sub fcompl or add icebp dec xor ljmp aaa outsb and sbb pop subb dec js pop mov or or inc (bad) movsb rclb sbb (bad) sub push inc (bad) mov pop test mov pushf or les fdivrs push dec pop enter fdivrl mov dec dec dec dec push ret mov push inc mov stos les jp sub dec outsb push push xchg das sub clc sbbb push xchg dec cmp push rclb lods andl jl jb stos add rclb (bad) dec xchg int3 mov and negb add add mov test cwtl jno in push sub or dec js jl pop sbb sub mov push add (bad) push (bad) sub in das faddl fs mov mov lock in movl stos stos mov jle inc or push sbb cwtl aaa sti rorb js data16 xchg xchg add dec adc jno cli dec aas push inc dec or mov insb mov push mov rcll and cmc add sub loope jl dec sub scas dec ret sub dec push adc loope push or push dec je inc jae add inc push jb inc add pusha mov ret lods cmpsb and pop or pop loopne or inc test enter jbe inc push int3 mov add dec into nop (bad) loopne or rorb or pop or mov dec dec adc cltd rorb cmpsl fadds push push sahf loope xor or test test cmp in or (bad) psubusw orb bound or mov arpl inc dec and add dec test or xor jg sbb pushf xchg icebp push xor xor push stc mov sbb inc add push inc mov dec mov jmp and adc ljmp std pop dec cwtl sub and (bad) add sbb lahf test pop (bad) ljmp pop push push adcb scas inc sub rcll pusha je daa push pop dec add adc adc in into outsb loop movsb fs and pop rolb xor dec movsb sbb push rorl cwtl cmpsl ret adc xor cmp movsb mov push mov xor inc or dec dec pop mov mov inc add sbb or rcrb int3 pushf lods pushf xchg mov sbb dec mov rorl pop jne je xor and (bad) iret das outsb mov les push cltd lea movsb push or or call push push pushf pop inc pusha jne aaa lcall fsubrp rcrb scas test cmpsl sbb sbb xor cmp mov sbb dec mov xor addb shrb cmpsb inc pusha fcom inc addr16 sub jo leave ja mov mov out out push sub xchg sub mov sahf imul dec inc je rorb adc cltd adc inc mov push adc (bad) add or add fidivr and fmull mov push dec pushf (bad) sti and imull xchg dec and adc and or mov sub inc rclb jecxz sub rorl mov xchg imul out nop pop dec decl cld push pusha pop pusha pop pop jle pop push pop pop pop pop pop push fistl sar es add dec push leave test push ret push dec jle sub add add (bad) aas adc pop pop pop inc test dec popf mov dec nop scas pop mov in jecxz push outsb ljmp push pop out fsubr arpl xor cmpsl pop cmp mov js pop aad lods inc and and xchg add jbe cmpsb mov or ds addl and pop push mov movsl outsb mov sbb das push pop cmp dec add (bad) dec cwtl push ret pop mov xor fidivrl roll push mov ljmp bound es push test pop inc pop rolb pop xor test sbb push es add test push xor dec pop pop xchg push dec lret mov pop iret aas dec push inc fsubr ja dec push test popa dec sarl push pop push sbb mov mov push pop pop shlb xor or leave test xor pop outsl std mov push push jmp cmp fidivrl push ljmp fiaddl add aas pop out addb movsb loop adcb pop repz xchg shr sarb test mov add inc scas inc mov mov or push dec push jl adc mov xor orb inc lret add adc sti or add inc cmp jle dec jbe pusha leave in ss pop rcrb cmp push (bad) sbb push or loope inc pop push fcomps (bad) xor dec push movsb dec mov mov dec call ss loopne sarb adc lock dec adc test loopne pop icebp mov xor jbe add inc les push xchg faddl and push cmp inc push dec add jnp inc popa or test and cmpsb outsb arpl mov or sub xchg test dec pop push pop or cli jne (bad) mov push mov mov leave dec cmp int3 cmp lods lea push loope stos dec movsl sbb inc cs inc xchg adc mov cmp pop mov rcrb sub or cmc pop mov pop es les test jp push and call dec mov mov sbb bound jle add push scas test mov or or pop add pusha pop pop outsl aaa lds cmp xchg enter sbb outsb jo sbb insb cmp (bad) int push addr16 push pop dec sbb icebp add add pop es call sbb out pop rclb push dec push mov mov (bad) popf lcall or hlt dec add xchg and aam inc or call dec jecxz lea mov popa test add ret adc inc mov pop cli cmpsb pop push dec adc mov cmp add jbe test sahf arpl and stos rorl xchg ret inc sub mov lock push xlat pusha orb jmp adc jl imul xor je (bad) sbb mov pop adc push xor push mov movsl rcrl dec loope cmc es push xchg (bad) mov xor sub xchg push add jo jno aad shrb pop push sbb or incl lods stos lea dec cmp fildll push fadds xor mov movsl loopne cli dec scas sahf push mov adc add add pop add dec mov adc pop pop pop cmpl dec sub lcall pop ss pusha or and test push lds out cmp int3 push jnp push push jg dec cmp push (bad) pop aam adc ret inc push pop xchg fmuls add fs pop cmp arpl lea jbe bound add lods dec mov data16 dec (bad) dec pushf add mov or mov insb mov push mov sub jno pushf inc test adc add add jo or inc test push pop push lock pop pop dec push pop add push jb push loop addb into hlt dec pop dec pop movsb push movb lret or inc push inc add imul imul jge sbb sahf sbb push mov pop add out (bad) dec mov popa cmp cs imul inc lret rclb je mov rol push sub pop pop js sbb dec add sbb daa shll loopne push pop push shrb pop fmuls pop and push pop push pop pusha gs scas push jbe arpl roll loopne (bad) pop outsl pop mov mov and inc sbb popa mov pusha or and jg ret sarl cmpsb pop sti dec inc inc adc inc pop (bad) nop jecxz mov xchg push add insb add jo xchg lret dec push and add xor lea (bad) fwait jge dec dec pop mov dec je js adc ret xchg adc add xor inc mov stos out and divl push push and rorb pop lret or sub addl inc inc pop loop jne sbb sub scas jl or shrb dec mov xor or lahf (bad) dec (bad) sbb aad adc xor xchg dec and shrb loopw inc push outsb stos scas (bad) mov pop (bad) pop jl popa pop lcall aas dec add inc push inc push inc push inc push inc add cmpsb int sub aas out mov fstps inc jge sbb lds dec pop inc int3 gs xchg mov rcrl iret inc inc dec dec inc or sbb (bad) jmp dec jl dec pusha test inc scas inc dec pop mov pop adc dec pop dec pop push inc test inc pop sub aam cld sbb inc add jo pushf xor jo shl mov cmp pusha loopne imul pop add dec push dec lretw lcall xorl or js (bad) out mov or movsl push pop cmpsl scas xchg push imul inc inc dec pushf lods maskmovq divl push xor push add shrb xchg fucomp or fimul js pop out into or dec es mov int push or in mov outsl dec pop pop insb dec insb arpl pop sub xor sub mov scas push push pop and pop inc push inc push pop inc insb push pop sub xor loopne adc push mov bound push xchg jbe pop cmp inc (bad) aas fcoms call xchg or inc mulb sbb aam mov adc push dec mov xchg hlt or mov add pop (bad) adc and outsl push push es imul inc sub push dec daa jbe mov cmp fiadd dec iret cli (bad) pushf push push dec jl stos shrl popf (bad) dec punpcklbw push out sahf push daa push adc mov inc das push cmpsl movsl cmc and pushf add adc mov daa adc push lods jmp and iret dec inc daa and rcl mov rcll sahf lret sarl pusha shrl lahf pop jne inc inc xor addr16 popf xchg scas mov xchg push push pusha (bad) mov (bad) pop adc lods das jmp mov test rorb adc inc lret aam out push xchg push nop test dec shrl dec sub mov add shlb sub xchg or pop mov push out hlt push or push das sbb adc adc sbb and push push add or jbe loop add lods adc iret outsb mov mov push inc fildll sub push inc sbbb dec push inc out xchg and cs cmp cmpsl ss lds cwtl test and mov jge,pn inc out out push dec mov outsb (bad) push push or cmp or ss dec mov imul sub and adc mov cmp and adc out in and iret pusha push dec push mov or push mov jno xchg push icebp test push daa add or pop addl lods push push inc sbb push stos loopne jb mov std sbb and mov das iret shrb ror mov mov scas xchg loop sub test mov sub mov inc xor bound nop bound jo dec ret mov dec jb hlt into push addr16 dec test add push outsl mov cmpsb jle push jnp dec enter sbb les out int3 push clc (bad) dec push push jl cmp subb cs xor in push jo pop cmpsl inc dec push add xor test or or or (bad) or and js add or sbb pop dec test pop lret mov or jo iret push (bad) or into sbb ret cmc bound shr cltd loopne dec or or and adc outsb mov dec adc adc mov bound xchg dec cmp in fnstsw out (bad) enter or int3 sbb inc xchg inc sub add adcb bound inc dec jo stos loope lea pop mov inc push mov loop adcl dec (bad) lret inc insb push dec cs push pop fmuls inc or push popa inc cs mov dec inc xchg mov jmp les popa xchg (bad) mov xchg xchg mov lret movsb sbb cmp data16 sbbb pop pop adc jmp mov lods (bad) loopne dec xor loop imul imul lret rcll movsb js xchg cmp jb ret push jp rcrb dec inc xor adc out shll or xor xlat dec cmp aas mov loop dec dec mov mov addl jo dec dec icebp jne insb pushf pop sbb ret lcall pop cmp jae mov call cmp mov sub jbe and mov xchg scas push add or push js mov (bad) or mov sbb and mov push jae les je sub and add inc sbb inc pop xor add outsb or dec or test pop cmp sbb es pop xchg sub push sbbl mov inc mov push jns (bad) int3 jp rclb or xchg adc mov xchg pushf push push adc pop aad test mov cmpsb andb xchg ret pusha sbb sub mov scas push inc add lret dec push or adc dec mov jmp stos lods das lcall mov lods dec sub add lret add pop mov loope adc pop scas xchg loop fmul lcall ljmp jecxz or lods xchg xor sbb shlb shr cmp and adc inc add pusha sbb inc cmp xchg jecxz adc mov out and stos cmpl arpl loopne mov sbb ret mov mov adc leave in sbb push add jl sub or stos adc push dec xor clc add orl ljmp inc push cld ret mov mov dec push leave mov adc stos push sub std scas out jne ljmp cs into push jmp fist sarb xchg sbb sub jmp cmp inc jo out lods mov mov mov jp dec xor andl and ret in and push mov dec (bad) imul mov push movsb fs dec add std dec dec fs popa adc fstps jb xor and mov pop (bad) mov movsl cs (bad) pusha and or out in add or addr16 or loop pushf fs jb push pop in pusha pop fdivrp add dec adc jo dec pop and lods or rol xchg inc add cmpsb aam or jb fsub push and insb sub (bad) sbb lock into push dec push push rorl mov ss jo outsb add add cmp roll and je push jle jo pop xor jb (bad) mov jp pop fdivrs xor ficomp add push jp push addl sub inc xor dec xchg inc je sub daa ret test dec rcrb imul mov rorb movsl sbb pop adc and mov and loopne and or sbb jb cs ficom and lds pop cltd lcall sbb lds cmpl dec rorb or sbb mov (bad) push (bad) or pop testl das addl add aam or mov lods je,pt stc mov add push jo scas mov mov mov mov sbb mov mov sbb mov ss pop outsl sub ss push (bad) test arpl push faddl adc mov xchg push lods pop and pusha adc (bad) data16 inc fs popa dec pop dec pop xchg movsl dec andl fildll mov pop xchg lds xchg jne push mov sbb pop push ret outsb mov dec sub dec arpl pop (bad) nop daa sub pop pop push xchg mov xorl fdivl sub pop add push push pop pop inc xchg pop inc aam push (bad) out add jecxz lahf scas (bad) out dec fstl xchg jp imul fimul aas dec push adc dec mov cmpsb ljmp add cs test cmpb xchg adcl pop xchg clc pop out xchg invd inc or roll inc cmpsl fs inc pop dec add addr16 or and or je (bad) pop dec aaa inc push xlat mov xlat test push out bound andl xorl lock scas das pop add jo mov pop pop dec or jecxz in mov sub repz pop push dec add inc dec dec push in movsl xor push and xor aam loop leave int3 push movsbl (bad) dec sub pop mov xchg clts scas outsb bound or or outsl rcll ret test cmp add aas mov or sub add aam es insb cmp mov push fnstenv or outsl dec pop or pop add add cld aaa or jae mov dec push sbb add inc pop scas aaa push sub mov pop push daa cmp je and jle dec xchg enter clc cmp mov push aad sbb xor divl pop sbb pusha push cmp push testb inc jmp add add in sub aad pop (bad) out dec push push pop test lods inc push xchg lcall lcall fdivr pop inc mov jge pop outsl push lods sbb sbbl push xchg unpckhps sub pop sahf ss ficompl and push cmp (bad) call (bad) mov fdivs mov lea add mov clc sbb xlat push pop dec dec dec adcb fwait test aaa clc xchg or rcrb sahf xor andl jne dec outsb adc nopl arpl and or rclb sub lahf inc pop pop adc loopne mov (bad) (bad) mov add dec stc add call roll imul jge pop sarb sbb jb int3 inc inc or rcrl out in mov test clc adc and cmp push sbb lret inc sub enter add mov lahf mov ficoml aas dec add mov adc xor pop or je push (bad) jmp adc aaa lock mov in pop dec pop in xchg or fsubl jp mov cmp rorb jbe push inc dec inc mov push jl stos push jb push lret dec jae scas adc pop sbb xchg xor xor push sub mov pop push or inc jmp dec adc js add cmp movsb lods push inc mov push rcrl js cli shr inc lcall jno aad mov (bad) ds fimull cmpsb rorb rol pop inc mov mov pop mov xorb sahf sub sbb testl dec sub sahf and or adc gs push mov dec sbb push sbb cwtl or sub sub xchg pusha xchg stos adc dec lock aaa add je and mov fidivl (bad) jno dec push cmpsb push int xorb rclb xor mov add stos adc ret and push mov clc dec adc stos inc push adc fwait orb ds lods xor test cmpb jne rclb mov jne inc test dec (bad) aam iret pop xor adc jo loopne sub clc push add or push pop clts or pop push push xchg dec mov push psraw cmpsb dec mov inc (bad) cs dec mov ds es cld lret dec add push and pop xorl nop movsl adc sbb add mov or xchg and dec push adc shr push sahf pusha dec popa dec popa inc add dec or pushf push or mov outsl push ss popl mov inc cmp aad cwtl mov push fwait lret pusha mov xor shrl add sahf cmp pushf inc push mov adcl or jno rol dec out hlt lahf jo test xlat loop fldl jb sbb cmp cmp push mov mov push popf and add pop jp arpl push addb jae push rcll mov add loopne mov add add or jmp fstl dec dec cmc popa pop test xor dec (bad) pop cmp xchg jp and loopne and repz mov fdivrp push pop dec pop dec pop push inc (bad) (bad) les pop mov inc enter push fsts loope xor bound repnz xchg pop push popa push xor xchg dec inc psraw push lahf add adc call mov loope add xorb xchg mov pop shrl cmp pop inc shll test in pop popf push mov dec jae push lods inc adc std xchg rolb push and rclb cs dec xchg push push (bad) loope (bad) retw push adc fs cmp add xchg sub daa dec push lahf xchg (bad) jp push pusha push adc xchg push xchg inc or add lods scas mov push add (bad) lock jae mov loopne sbb sub (bad) jbe lret (bad) pushf in mov jo cmc fdivl cwtl xchg push ljmp shl push jns andb add pop ljmp je rolb sbb jle and andl (bad) push sub inc pop push rcl pop adc add add pop data16 movsb or push mov mov mov pushf add out lock daa adcl add add lods inc inc push pop cmpsb mov in sub jbe loopne adc inc cmp mov sbb out pop push and push xchg rorb ljmp inc idivl and out nop xchg cmp call out and sub cwtl sti push cld cmp cmpsl push les imull pop inc pop xchg sbb aaa (bad) push or push js or cltd xchg mov push mov or jnp mov or rep popf subl jno jo (bad) inc and xor sbb pop loopne mov into xor outsl mov popa test hlt mov add ja sbb add bound add xchg mov lahf push pushf push scas js out lds cli mov aaa dec inc icebp loope loopne push cld adc out cltd imul inc loopne jmp dec and add aaa cmp imul push inc add pop aas push sbb jb push push push or dec roll xor aas lcall sbbl jae cmpsl adc out cs jecxz mov pop or loope es sahf lods add maskmovq divl test popl jg dec xlat mov dec mov add mov sbb jae push add es xor push sahf dec shll roll pop xchg rol xchg mov adc fdivrs cmpb xor cmp push sub sub pop aam mov dec call aam xor adc cmp fwait js pop jle fsubr ljmp into or ljmp pop scas dec pop dec arpl scas dec inc jl add cmp cmp adc andb fild (bad) inc xlat ror jmp mov stos mov inc and adc xchg outsb lds add or xor rorb dec jl sbb pop (bad) (bad) jmp pop das pop xor xor pop cs sub sub push sub cs fwait mov push rclb push fistp pushl jbe pop das pop xor or mov push push inc xor outsl outsl xchg push adc jno je dec js jns jns js jbe je in incl dec jae je jne jbe jo sbb add cmc fisttpl or aaa pop je push push outsl and outsb push adc and or ret xor push lods xor cmp push inc notb adc dec jle dec bound push insb pusha bound and xor push inc sub dec popa dec addr16 cmp jbe push cs push or xor dec cmp dec fs (bad) addr16 mov push addr16 insb push outsl push jle xor dec inc fwait pop pop adc dec push pusha popa push cld ljmp addr16 cmp jle dec sub push xor push inc pop movsb les daa push jle sub push xchg push push mov jns cs xor cmp adc dec pop push popa push push push pushf push sar test dec cmp push add dec sub inc popa roll dec sti shrl sahf push push cmp push ds lahf jns iret ror push mov mov push dec push sub or sbb lcall sub xor xor sub ss aaa push dec xor push (bad) jae push push arpl insb dec jae and push ss cmp inc scas dec inc pop push sbb sti fs push xchg push pop inc dec rclb dec inc pop mov adc jae (bad) adc push cmp inc or add subl outsb xor loope adc inc inc push push imul hlt or jbe sti pop inc pop sahf inc push popa pop popa bound pop pop mov sti addr16 arpl dec push dec inc dec adc push push or add mov pusha (bad) rcr mov dec dec ds dec ds or dec push sbb in mov inc push add jo push (bad) pop aas pop inc pop inc pop (bad) pop mov jp dec xchg or xchg mov pusha pop arpl cmp cld mov push gs arpl (bad) sub add add mov cwtl pop inc pop inc stos cwtl ljmp sub inc add or faddl ss inc dec add adc add inc or les mov mov push or mov sahf and add mov outsb or mov adc pop xchg push push imul fs dec pop dec lods pusha push pusha mov pop push xor leave and xchg mov xor mov es negb dec adc or dec dec push pusha (bad) in in dec addr16 or pop add push sub rolb addr16 scas cmp dec stos aas push sbb mov data16 push sub fs pop xor gs inc dec ss in int3 xor sub xchg mov cwtl mov ljmp sub and push daa inc sbb sub out adc and aad outsb mov ja (bad) pop inc dec fs inc dec or push pop inc pop sbb xorl add dec xchg inc ret mov adc loop inc adc ret or aas jb sub rcll bound sbb jb lea fs inc adc sbb jmp fist mov dec repnz pop pop gs test xor arpl xor push sbb pop dec xor push gs addb fsubl push popa dec dec inc pusha push push inc rcrb or add adc add sub push mov sbb cmp scas inc pop inc data16 xor (bad) decl dec arpl inc fs inc push dec push push xor cmp push das push sub pop sub pop das pop xor push cmp push aas dec inc dec inc inc add inc dec inc push shrb mov or xchg mov mov push xchg movb push pop mov fs adc xchg icebp dec popa push in aas dec inc dec inc cmpb dec inc dec inc push (bad) movsb pop daa push xor mov mov push mov jno dec pop xchg sahf test hlt jle insb sbb inc add in cld sub jecxz xor or (bad) xchg cmp cmp (bad) lock enter push mov push ja insb aas (bad) jbe dec pop mov popl sub lock push dec xor out sub xchg dec jae jbe dec dec movsb mov dec dec cltd arpl dec pop scas sub or dec cmpsb dec jg cmpsl dec push cwtl (bad) test loopne js stos add jmp cwtl pop adc ds xor (bad) or add insb pop mov shll pushf pop jno pop orb mov mov cmc mov pop cmovge xchg push sub les adc push repnz out add cmp rcrb imul cmp inc cmpl pop cmp push dec nop push outsl daa mov mov push pusha cs popa and or cmp es cwtl push cmpsb rolb test fisubl xor subb mov or adc or dec dec test dec insb add test sbb decb dec fbld cmp pop dec imul adc jae and push movsb es xor pop fldenv dec inc push adc sub push mov xchg dec test ljmp movsb scas ss cmp or fcoml dec enter dec sahf adc inc inc add es ss inc js loopne push sbb nop add stos add mov test pop xchg mov push jns and push test mov xchg dec push and mov xchg sbb or dec mov (bad) jne push dec pop push pop xchg fidivrl js xchg loopne jo sub cmp dec int3 xor or pushf push sub xchg test addl pop push lcall (bad) loopne ret xchg dec add sahf out cmp push mov xor ret test loopne std shlb pop ss pop pop out or imul mov or cmp outsb mov adc mov jbe adc cmpsb dec add mov pusha push cmp push push movsb xor out addb mov pop cmp push xchg cs pop adc and mov mov mov out adc sbb cs xchg push lods sub push mov dec mov xchg inc push cli push cmp and fcmovnbe push ja pop dec (bad) pop dec daa loop ficomp test jo xchg sbb shrb jbe pushf dec roll and fisubr ror mov es mov cwtl sbb sbb imul cwtl jo jle xchg ficompl sbb inc rcll mov dec mov dec xchg ret cmp inc rcrl fs fcoms in outsb lods cmp sub push sub jo and mov mov inc bound pusha out cwtl mov adc fdivl dec test mov sub push imul lock fcoms adc and dec sbb hlt pop push out mov (bad) or dec xor pop or in adc and xor or adc jo dec shlb arpl out in in in jo and outsb xor push cmp dec jne sbb dec or fldl int3 sbb sub inc (bad) scas xchg adc rcll or rorb xor inc add es popa loopne dec pop cmp mov xchg mov jl or xchg xchg pop test dec arpl pop divl pop (bad) repnz mov cmp or xchg popf mov pop cmpsb stos (bad) pop add cmpb add fadds test cltd mov or and das mov or rorl cli sahf mov add pop push or sbb sahf mov aam add or inc ss add into nop mov orl sub cmpsl push mov or imul lock int3 dec jg mov xchg cs loopne xor mov dec mov ret add inc sbb add jle inc inc mov pop aam mov dec cmp lcall xchg push (bad) or fmuls data16 sbb mov push fdivl cwtl dec inc or decl aad mov mov push mov mov push adc cld test xchg sbbl mov (bad) lret ss dec jecxz push and fiadd sbb inc or mov inc pusha xchg call push and int3 add pop subb adc ret cmpsb add (bad) sbb inc addb jl mov cmpsl mov push pop push ret pop orl cmp mov adc adc jl ds divl push movsl cs xor cmpsb push call and dec fnstenv fisttpll daa repnz fmull aam mov push mov roll fsubs push xchg dec push push shl in pop inc adc pop adc mov add adc pusha cmp sahf pop loope inc xchg xchg call aaa and cwtl jmp cwtl push mov cmpsl add pop pop sub (bad) add cmpsl (bad) scas dec cmp pop push jb xor mov cmc mov nopl and je rolb pop (bad) into sub adc sbb cmc push out push (bad) push addl test gs push iret lds dec jo bound ret or nop jnp dec mov or sbb add jmp nop dec mov test or push and shlb or sub push adcl pusha xor iret push push mov mov ljmp add or loopne inc loope test dec xchg add rorl xchg ljmp and test into call loope iret lock aam inc enter dec jb clc xor xchg adc pop inc add pusha add addr16 cmp adc ss add lds or mov es pop (bad) jmp add or (bad) (bad) xor dec dec add js lods pusha push or mov pop fwait testl inc adc pop into (bad) ret ret (bad) xchg xlat or test mov enter and pusha dec pop dec push mov hlt inc into stos outsl jmp jno push fsubs push bound adc dec push bound sbb adcb pop pop loope in lods mov adc out fs and mov pushf push mov pop cmp jo (bad) fmull and fsubp jp movsb dec push (bad) pop sub ss repnz adc aam mov and fild gs dec inc push pop data16 xor inc rcrl hlt dec int3 pop mov add mov xor pusha sbb sbb pop mov inc or ret add adc push rorl fmul mov or loopne je rorl in (bad) dec cmp dec pop dec inc or adc and or addl lods popf lods loopne or and push jl js pusha xchg pop cwtl pop dec mov push js mov mov and dec add dec into dec addr16 add add xor (bad) mov lock andps jo sbb aaa inc inc in addr16 inc mov and pusha and je setno sub call jp and jl jnp or mov js arpl dec (bad) mov push push inc dec add push push inc daa jbe es push xchg jge or inc adcb dec arpl loope jl mov daa dec mov sbb mov xor addr16 cmp orb int3 ret out fcom or inc add sbb sbb and loop cltd cmp push bound cmp das and push (bad) sbb fs push push in insb in sub je push (bad) push cmpsb cmp loopne push cmp mulb mov inc stos pop ljmp andl lahf push mov push jle or dec loopne notl sbb lock push mov mov add sub inc popa test out fwait sub (bad) mov or clc mov adc jnp or ja loope mov push or pop add imul mov loope push jo outsl mov (bad) sub fisubr push insl fs loope sub add adc or push les into pop test xchg stos sub pop gs rolb pop mov sbb aaa pusha clc and push (bad) adc lods ror push mov lods jge rcrb cwtl sub xchg xlat dec dec add dec xor xor add dec ret and mov lods orl inc mov xchg add fcoml loope insl jl push pop stos inc xor mov jle xchg cli xchg mov ja pop arpl inc popa push js push ljmp push cwtl pop inc pusha sub aas bound popa ds aas mov inc push inc push xor dec pop push js scas dec xor add pusha sbb fmuls sub and insb pusha dec adc sbb push inc adc (bad) pop aas push mov push pop jnp dec andb sbbl or push pop pop pop andl jp xchg dec pop aaa pop cmp out xchg xchg inc xchg and call push push pop and fnop psrlw rolb bound inc pop inc mov inc jge mov or fist sub (bad) mov cmp mov cltd push into leave mov jo pop repnz dec sbb adcl lds inc fdivrp dec pop hlt push mov or push sbb sub bound pusha nop inc loope sbb pop inc cs lods aad incb pusha rcr sub push cmp fmuls and ss (bad) cwtl pushf shrl push push inc dec adc cmc or mov push dec push adc sbb sbb inc cmp scas add and push mov pop (bad) aam rolb ljmp xor je cmp decl roll or pop xor cltd das movsl popa inc adc bound sbb sub push jmp sbb dec or xchg or push and push add or outsl dec int3 adc bound sub (bad) inc sarb cwtl xor dec ret push lea dec or sbb add mov mov fwait cmc mov cwtl push jg dec mov inc arpl leave jne sbb push mov in dec dec in stos rclb push jl pop jge xchg jp push (bad) mov sub pushf nop outsl push fwait dec je cmp iret push inc inc cwtl movl and leave movsl xor pop xor mov or push (bad) roll pop test adc lods shrb pop push push cmc mov inc fisub or jns pop arpl loop outsl pop inc xor pop push jg pop xchg mov xchg test in xor pop push dec int3 adc pop sbb xchg lea sub and or les push xchg and and popf mov fsub lods pop and and adc xor push pusha mov mov std divb xor lahf push push pop ljmp sub inc jne push lret adc inc dec rcrl xor push fimull sub dec aaa sbb mov xchg lcall mov aam xchg (bad) dec test dec rorl mov pop push pop dec cmpsl ja sbb (bad) ficompl mov push dec add (bad) xor lahf inc dec cmpsb cmpsb rolb nop mov sub or xor add sahf imul pop and push mov inc das pop pusha inc mov or repnz xchg adc add hlt in or subl pop push (bad) xchg aaa test aad loope push pop mov gs cmpsb sbb insl sub xchg scas adc adc adc fwait test mov or dec or mov ret push loop adcl and push push xlat das xor dec mov mov test inc rorl stos xchg dec lret call push inc dec inc cwtl cmp rorb inc mov (bad) pusha and and push push xchg pop outsl dec mov xor je mov push and sub sbb pop and pusha or (bad) mov add add negb mov xor in loope nop xor adc (bad) push inc and addl push leave movsl inc mov xor push daa xor push cwtl pop mov mov inc or dec pop dec push popa and sbb stos jle add cld add (bad) adc loopne pop pusha add jo je push fistpll ret push push ja mov imul pusha mov pop push xor sub test or js nop sbb dec fcoms push les lea sub dec add sub lret fucomip mov xor out inc push push rolb pusha push mov dec push (bad) inc adc adc ss icebp pop lods movl mov ret push xchg push inc dec dec jns psrld sbb stos inc add lahf outsl sub pusha aam cli shlb loop dec shlb lods or imul outsb xor or repnz and and xchg js ret scas pop test or pop test ret mov cmc mov add nop push xchg jo loopne out (bad) inc cmpsl (bad) outsb loopne cwtl movsl aas pop fs xor push sub (bad) jo das shr ret push adc notb jl adc (bad) push or mov push cmp mov cmp testl dec mov nop pop mov idivb and jg bound sbbl mov dec cmp adc (bad) pusha add cs pop and jg pusha push pusha xor (bad) popa xchg adc hlt and or pop pop add xor sub (bad) xchg test dec cmp mov pusha pop sub into add ss fs and xor roll rcrb ffreep xchg sub (bad) lds mov jo icebp hlt sbb adc push fnsave and test mov pop push sub push aam loope pushf add cmp push addb or mov out mov mov lcall xchg push mov into mov sbb pushf mov shlb test inc mov mov loopne cmp xchg jg xchg test nop mov movb fist sbb arpl mov push push rolb push mov pop push enter dec lret movsl inc test aam push add (bad) mov pop lret add or jno mov sti mov pusha mov or and mov mov push jmp sbb (bad) aam dec mov or sub test sub push inc push fs push ljmp xor and dec pop push dec add rorb jmp ja rclb rcll pop dec inc out adc xor push mov pop jg jb stos fistpl lcall dec ss lahf and loop push pushf and xchg and mov orl push (bad) push or jmp movsl push movl pop cli adc xchg insl add inc push sub push mov pop test or lea or add mov out test jecxz jno sub fsubr cmpsl mov inc (bad) ss push add push xchg pop add cmpsl mov roll dec and pop mov or push (bad) push inc (bad) or xchg rolb sub push or push test lahf push outsl fwait test xchg sbb fiadd rclb or adc inc scas sbb in xor dec dec or and or adc xor inc inc loope mov adc pop push sti rorb and mov into and push dec scas scas test movsl mov hlt push push sbb testb push pop and leave xchg (bad) dec loop gs out or dec jecxz or test mov dec es shrb movsl mov add pop ret outsb push mov les insb pop push ljmp xorl pop add push dec inc mov addl lods lcall pop push movsb mov pop jg ss adc inc push int jbe sub sub out mov dec xchg jne popa cmpsb stc scas and shll push dec dec push xchg dec pusha sub push orb bound mov push outsb ljmp mov mov mov mov cmpsb xchg daa and sub pop pop or lods mov out dec stos test or push cmc shrb adc pop outsb sahf push dec sbb mov or inc adc push dec inc dec inc add xlat sub inc push inc cs add cmpsl scas push add sbb add mov pop pop push push mov test hlt sub adc push in dec jp xlat add jno mov mov add jnp shl dec inc adc test mov cs sbb or ss js mov mov push inc push nop lcall mov insb mov dec and and sub lods mov mov sub xchg mov insb ret pop inc push jae rcrl sbb or mov adc test stos adcl ret pop dec xchg and and xchg add add xchg sbb and xchg sbb add push inc add xor dec js push sub mov adc (bad) sbb jb pop and jno dec mov push movhps or fild inc mov and sub leave mov inc pop xchg mov loop pop dec cmpsl add xor and add adc lods rcl orb cmpsl in test push fs push mov sub test cwtl int3 mov xchg mov enter dec test inc or push adc clc pop pop pop mov popa or out imul dec adc and xor movsl lods mov sub mov std xor pop sbb mov or loopne xor shll adc push les popa add pop dec sbb dec mov push decl or sub lea lea sub int3 dec outsl push dec push cmp insb add pop and nop test mov sbb daa push xchg ljmp mov lcall sti sbb ficomp jle and test insb jp jb iretw and add push stos jae nop pusha int3 pop (bad) sbb ret dec (bad) popf mov lahf push jle test or add and loope ds dec loop nop jo popa adc lods or mov ss divl mov movsl and daa jne pushf jecxz pop push or and pcmpeqd push or jbe or pop fbstp add add subb je push dec orl dec scas gs insl push inc pop or push push pushf pop and (bad) inc int lret or outsb push loop jne push std push push adc add movsb inc dec lahf mov daa orl and seta test cmovp xchg sbb fisttpl add ret xor and dec into push cmpsl pop jmp popa xor fisttp out data16 pop or xchg bound lahf ret jmp (bad) xor or or push pusha paddusw daa add xchg push out insb leave pop cmpsb push ss add inc or sub cmpsl xchg mov inc flds mov and sbb add inc adc push loope mov dec sbb and mov pop sbb or pop (bad) adc xor and pop pop lret push inc adc inc add mov ljmp pusha inc fbstp or pushf mov lock popl pop pop xchg xchg pop cli clc or (bad) sbb mov sbb pop or test stc pusha or xor imul aam test add cmp xor notb mov mov inc or (bad) or mov push dec sub and cmp lea pop or es push pop es pop mov push pop push sub cmpsb inc mov aaa daa push sbb add or loopne push mov cmp movsb stos sub notl push sbb or loop pop inc into mov sub or xchg fsubrs push inc push or dec insb mov pop and pop push push sub in push les jle insl add xor push fs push xchg adc in pop pushf cmp call push inc lods inc dec mov test xchg fs inc enter xchg call sbb push sub adcb adc or (bad) cmpsb inc insl ret cltd mov fs mov imul aaa push addr16 out xchg enter dec (bad) xor jno cmpsb or or dec pop bound xlat or or (bad) aam inc or outsl dec inc sbb pusha loopne add pusha dec sub ljmp mov cli pop adc cs or or mov sub lcall mov inc or int3 adc or dec dec pop push ss xor adc add icebp dec jp in dec dec popa push or adc outsb out jecxz adc lock add aaa jnp xchg push cwtl mov cmp (bad) jb adc in ret adc xchg dec inc ret and lock push mov stc xchg cmp add dec lods je push xor inc pusha mov ret cmp add ret stos add push enter pop adcl into and outsb jmp les or add jmp and imulb (bad) add or sarb add cld push ds cmpsb fdivrs je fimull sbb sbb movlps aam sbb or jl and push mov outsl enter out xchg in cmp inc sahf ficom pop das xor adc add inc pushf jge or push aaa push jb pop or rol hlt dec push push call hlt and add pushf mov andl adc (bad) mov sbb pop or and movsl sub push popf js push dec jecxz add push outsb adc mov push push out addb xchg or test rcrb orl sub mov popl push push cmp sub testb and sub cmp or ljmp dec sub aam aaa push loopne sarl inc sbb aam ret push or scas es fstps push mov fs lock outsb mov scas sub repnz adc push fs ret xchg push cmp mov push cmpsl adc and or mov pop cmp ret movb js push mov push fcom cmp clc dec cmpsb xor outsb dec rclb es test cwtl push mov pusha add cmpsl repnz and mov lcall inc dec push in add push data16 loopne pop lea pop fst mov jecxz xor xchg imul scas das mov or push imul inc cmp push popa add cltd inc arpl dec pop cmp cmpl in mov outsb and lcall pop and loope sbb lods mov testb adc adc mov (bad) lock pop sbb test or push sahf and test add pop sub push and sub xlat into (bad) in daa in mov or dec out ljmp xchg data16 sbb enter popa or and pop xchg push xchg xorl inc xchg stos mov pop dec pop dec pop mov inc or stos pop lahf mulb cltd or (bad) or std mov lock dec sbb mov adc pop push fs jae lock lds and jnp arpl shrl aam push sbb xchg xchg cmp push dec jp inc xchg mov inc push sti cmp xor push ret xor cmp mov shrb sub xchg (bad) adc out dec push and add call adc or sbb xor test xchg shrb pop bound das test rorb dec add cmc fldenv js and dec bound es push data16 adc jb push daa dec adc es push bound xlat jmp insb and pusha xor pop adc sbb mov or push dec adc dec shrb je push aas and sbb add rorb and fnstcw push inc push xchg cltd mov add pminsw mov mov push jp daa test or out mov sub outsb (bad) dec fld mov repnz enter pop pop sbb add mulb sbb or loopne incb xor inc and sti cmp lret xchg adc jno andl loopne pop fist mov hlt or push or daa and mov and dec xor pop arpl out pop pop or and add xchg (bad) xor mov (bad) nop ss dec mov ds test push add push xchg push dec addr16 cmpsb (bad) jae push dec push das dec push sbb lret pop add add xchg addr16 das mov cmp push mov pop pop adc inc jb es push adc cs pushf push pop sarb cmp sub out and loope sahf jbe xchg add scas cmp jmp (bad) arpl push pop ja out push inc mov push push or dec push fsubrl push dec cmp push push out mov and (bad) push and (bad) js or push frstpm(287 or push cmp jne or dec in and into push fstp cwtl fistpl push pop ja insl cs loop mov iret mov lods or mov popa xchg pop inc jmp cmp (bad) push and or or (bad) pop adc and push jl andl or lret xchg sarl or enter dec pushf sbb jg in test xor xor dec loopne outsb lret mov push fstps mov and push sbb adc scas push (bad) loope popa pusha dec packsswb dec fcoml push dec daa or jmp stos ds insb loopne adc or or lods push popa mov mov inc lea pushf loopne mov or les scas sub add nop cmp faddl adc les sbb or lahf adc lds loopne or sub adc fcompl push dec push mov xchg add sbb jl (bad) sub inc inc and pop cld xchg pop ret leave adc ret adc mov pop aam push enter sahf faddl mov and pop (bad) mov sub cltd pop inc add lret js shlb pop sbb or js jb dec sub xorl xchg and mov pusha pop dec mov jecxz loopne mov lods ds dec pop call or pop dec inc push rolb inc cmp fs xchg in sbb dec testl or rcll daa inc lock (bad) push mov xchg add xchg cmpsb sbb add xchg mov pop push or bound (bad) jno mov sbb call jns outsb out mov sbb jle cmp jns push (bad) adc sub aaa cli adc jp mov ds stos pop jp cmp xchg lods and in scas scas push lods das inc and (bad) or sbb sarb fist pop mov and in jb cmpl inc mov and pop cwtl fstl or (bad) cld dec (bad) enter int3 lret mov push push jge sbb pushf dec inc in push dec and adc mov mov jle mov pop or or rorb dec scas xchg and into add rorb pop sbb aad jb push mov hlt push std js mov das pop aas sbb movsl mov push outsl dec push call rcrb jbe jge jns sub pop aam inc adc pop cwtl call cmp (bad) adc (bad) rolb popf and add pop js sbb jo and sbb mov push int3 orb insb pushf or loopne mov sub cmp cmp stos rcll mov movsb rclb adc in ret loopne or add push jp shll bound push jbe inc imul cmp push fmull das and sbb push adc sub rclb mov pop inc inc loop ds inc or lea jae ficom cs idivb inc inc andl inc pop pop mov sarl cmp in loop xchg jbe lods dec mov pop dec cmpsb dec add lea mov push inc fsubs test inc sub push mov mov cwtl pop pop or xor add adc sub outsb mov popa loopne cmp mov mov sbb pop push (bad) or dec mov jno cmp pop sbb inc inc cmpsb xchg jl dec dec inc mov ss movsb xorb dec cwtl notl add xchg sahf and mov jns push daa sbb jne clc test lods cs leave jno and or sbb sti mov ds or outsb or imul add pop push flds js push sbb inc (bad) jmp shl and test roll cwtl data16 inc lock dec pop or (bad) xchg and andl add pop jl add xlat mov pop lock mov pop xchg push cmp leave inc add mov test inc sub mov psrlw mov ret add and je daa add sbb adc rcrb sub nop pop pop pop and push pop seto xchg xchg sbb pusha push test outsb or mov pop cli lds sub jmp dec dec cmp pop js sub movaps adc pop pusha loopne xor xchg pop add push dec push push flds pop loopne js jle pushf adc pop rolb push sbb ret pop inc xor scas lret pusha (bad) out (bad) aaa push andl lods cmp lock out sbb gs or push or cltd push push or les push push pusha adc or cmp faddp outsl mov dec inc jecxz pop push adc cs int3 add into rorb mov sub int3 cmp xchg jnp cmpsl and mov shlb sub addb push outsl cmp sbb fild xchg icebp or cs sub and (bad) mov (bad) enter add clc sub or lods inc push xchg call jo xor and scas aam lret cmc xor es in push xchg fs ss ss jno push sbb aas jb push in sbb add add and jecxz xchg dec fisttp pushf arpl mov lods sbbl adc and loop sbb test add add pop sub ds mov daa push (bad) xor std dec shll jecxz addr16 (bad) mov mov mov xchg (bad) add push cmp (bad) push ja lock xor push je scas (bad) orl push outsl dec and mov push clc nop into add jecxz adc mov jb xor js dec iret xchg jb mov xchg rcrb ret mov xor ret sahf cmp (bad) and sub lods push out lea push jecxz scas jno sub lea lea mov xchg push jno adc or pop xorb xor adc bound cwtl dec int3 or mov cltd push push push mov das cwtl xchg pop out cmp push outsb fldl mov push adc push xor push adcb popa add and (bad) stos inc inc jge dec aas xchg ret jo hlt mov fwait pushf inc cltd (bad) movsl mov adc mov and sbb mov fstl cmpl icebp lret lret (bad) test mov pusha ss push out mov ja xchg pop arpl scas fcmovbe stos xchg add imul sbb dec inc cmpsb std in jne sti daa or cmp andl mov out pop and dec into and mov sbb or divb aaa loopne jecxz xor pop (bad) pop inc jb mov mov jmp dec adcl outsb outsl push sub nop jmp out cmp mov pop das dec divb xchg push fucomip loopne push pop jp push mov shrb loope pop push jno mov xchg dec (bad) pop push or dec aaa cmp aad loop pop adc aaa mov sub xorl add mov ret push or or dec adc enter sbb inc mov (bad) pop xchg je pop or jg into push mov movsb or fiadd movsb arpl adc xchg cmp data16 insl xchg push (bad) mov pop mov push jg leave fmuls sbb push push out ret subl or mov add push leave dec fnstcw xor mov lret add lds xchg or rorb movsl adc xchg call xlat call cmp test push ret xchg jbe roll mov dec and cmpsb jecxz pop idivl push xchg dec aas in les jb mov inc daa and mov adc test faddp sbb lds push fwait clc xchg pop cmpsl push sub xchg dec (bad) (bad) idivb ficom pop push shll xchg mov in imul and and ljmp push lods mov test or sub imul inc pop rclb push sub push xor cmp aam push jo das push aam adc mov xor pop daa dec cmp test decl xor push cli arpl cwtl xor inc movsb adc dec sbb adc inc adc pop mov daa adc jmp push jp dec pop (bad) push or pop (bad) push aam jne push xlat sbb or or xor pop aad or dec cmp sub pop insb (bad) push sub out arpl ficom pusha pushf inc pop adc dec mov cmp pop cmp xchg push addr16 dec pop ficomp call or jmp rcl iret add lods mov mov push shll mov (bad) jne and fistl sub xlat cmpsl inc push push xchg push inc and or adc jnp adc add loopne icebp jne mov adc mov loope (bad) cmp repz push outsl loope or fdiv popa add dec mov rorl popa fs cltd or mov dec pop xor test stos lahf inc mov pop cmp pop pop and sbb sub and push in icebp lcall push adc or or inc cmc cltd and xor jp dec cmovl mov ds inc sbb movb sahf aaa adc dec fs popa jg push push and lea jb jp gs fmuls orb repz add sti jg cmpsb in mov dec dec rorb and mov fs push (bad) pop into pop ret or and imul add dec fld dec sub mov dec les mov (bad) jecxz mov loop pop push ficom shlb lahf rolb mov push loop adc decl xor popf outsb or cltd loopne les and cwtl adc add mov xor popa inc sub ds cmp xchg inc dec push out or lret iret sbb and arpl in jae push dec fcoml sbb in pushf push int mov push fcoml or or js mov divl mov push adcb push mov xchg mull cmp push dec mov push mov sbb jecxz je scas dec sbb stos adc xor jo inc mov ret pushf or loop rolb scas fiaddl xor ficoml or shrb lods mov bnd mov sbb adc test sbbl (bad) mov callw dec leave pop cld mov daa js pop dec adc push leave sbb adc loope sub call fmuls sub jo xchg out add sbb push (bad) or out xchg pop icebp adc dec (bad) cld mov pop aaa push pop jno jecxz pop or das cli xchg inc mov dec push dec movsb push adc cmp popa xlat adc out pushf and jl out es ficoml inc cmp pop call mov cmpb adc rcr aaa dec or or push adc sub aad adc jae mov mov mov add push lahf (bad) push or movsb xor or inc arpl push mov dec inc dec inc inc inc inc inc inc inc inc dec sbb or test xchg arpl cmp jmp pop inc pop inc pop inc bound dec arpl push pusha pop pop pop pop cmp mov add (bad) (bad) incl ds inc dec inc dec inc pop inc pop inc pop inc pusha dec pusha push popa xchg mov dec fs arpl pop bound pop add pusha push inc (bad) (bad) (bad) decl dec sub inc sub xor xor sub dec sub movsb (bad) (bad) ljmp insl aaa jno je ja jns jp jnp jnp jp jns aaa sti jg lock jno insl je ja jns jp sub jp jns into (bad) incl inc je jno insl xor fs push iret cmp push cmp jg decl inc aas inc inc inc inc aas inc cmp cmp pusha inc arpl dec addr16 push push push pusha gs addr16 sbb addr16 add pusha inc pop aas pop cmp inc add or dec inc dec inc inc inc inc lock inc dec or add aad mov cmp sarl push arpl popa pop mov into movsb pop sbb pusha mov out or mov pop inc pop aam (bad) sbb add subb dec adc bound sbb daa adc andb pop push (bad) pusha push out mov dec push pushf les sub rclb test sbb push push sbb add sbb adc test push add pop adc inc data16 pop sub add adc das loope dec jl js dec dec xor or inc xor add xchg pop nop mov or inc imul pop jne sub mov or xor push dec stos add xor or dec jle (bad) inc xor adc xchg arpl loope push or push adc adc sub adc inc lea fidivr push loopne xor cli push cs test xor jg fldcw mov subb pop jns dec add (bad) jnp push sbb dec sbb rol mov add push popf (bad) or lock add pop xor or sbb or xchg fdivrs aad sarl push jp push xchg and mov sub or std adc out or mov push add mul popa dec sbb lock push out aaa test ljmp inc or add jo aas cli push dec dec jle mov push push into push push or repz inc orb add or inc xor inc adc sahf pusha and add out or sbb adc add or outsl ds sub lods add es aam or push int3 inc cmp cmp or or pop adc cwtl push out adc dec sub and pop adc pusha dec sbb and push dec mov mov call or (bad) out andb add add (bad) dec movsl test jno pop sub mov add out xchg addr16 dec out cltd cmp or or push fnstenv push dec scas or or shrb jbe push and std sub pop push inc into pop mov into xchg jae dec data16 inc and cs test je push outsb gs push inc and jae jae jb xor or mov mov push or add add cld or outsb dec mov or add mov and sbb mov dec mov adc xorl or and adc xor fbstp jmp cwtl push sbb cli (bad) mov adc dec mov inc int3 or add xor (bad) leave aaa inc sub xor dec inc pusha inc cmp stos xor and enter arpl or jno pusha push pusha out in jmp scas inc push aas push inc dec pusha dec or imul push cs or add dec or and test jge pop inc in dec daa cmp bound mov adc dec and dec pop pop ret inc push sub mov nop (bad) fxch cwtl leave dec mov mov pop dec pop jg cmc xor ds xchg pop repnz or xorb js inc add out pop adc and jb mov jle repnz jl cmpl shl mov nop inc xlat dec dec pop and rorb xor or imul mov add inc loop mov pusha jle js or pop data16 mov sahf sbb pop int3 dec lahf scas push cmpsb push popa fimull mov sub pop pop sbb xchg or hlt mov inc stc es fwait and xor push insb nop sub and mov push dec push loope fimull roll or xlat fisttp dec pop pop pop inc cmp leave ficomp nopl sbb jg mov mov ds popw ja jnp sbb mov add push inc push (bad) dec push dec cmp pop jnp or mov out lods dec sbb add pop push mov mov popa lahf mov jmp pop fldl pop or bound pushw pop or fisub iret push pop and out dec lods xchg addb or (bad) cli mov fadds mov push xor sub or sbb push inc in mov andl and sub loopne in sbb inc adc add push add adc bound push push jge imull (bad) mov xor push and or popa les (bad) fisttp dec pop rorb mov call mov neg ficomp inc (bad) or shlb xor xchg cmp imull cwtl in inc push jl mov rcrb cmpsl pop mov hlt push or mov pushf lock push arpl sub sub lret and sub xor (bad) xor push or fldcw or mov and inc inc add xlat inc mov lods and sbb and push xchg xchg rcr xor ljmp test dec (bad) jo mov and push pusha mov das push adc add sbb in (bad) outsl fdivrp loop shrb push mov dec scas pop hlt or and insb fcompl mov push adc fidivr fstpt or iret mov mov push iret push (bad) pop sub mov fstpl lret ret nop add push add (bad) ficom push aam add jns dec cmp dec sub sbb or push ffree test adc inc push pop inc adc push bound pop repnz or xlat dec mov jecxz mov jo dec add xchg into sbbb add push cli xor dec test push dec outsl lds push sbb mov pop sbb push sub add dec xor add add push sbb je (bad) rcl push cs sub (bad) ss ljmp out adc outsb pop xor cmp pop rclb loop add push mov arpl jle sbb mov cmpsb mov pushf adc jo sub mov push outsb jo sbb lock mov sbb and jmp sahf inc xchg dec loopne dec ljmp or es adc adc xor and lea cmp sbb jb test inc aas xchg dec pop or sub (bad) jecxz or mov mov inc (bad) ja outsb outsb and sbb sub test cmpsl mov mov pusha dec xchg sarb ficompl xor add adc add pop daa or sbb out dec imul shll fwait sbb movsl cs push fldl mov push adc les jo addr16 or movsl outsl out mov std ss adc outsl jg xchg inc inc fisttpl xchg les add (bad) addb adc jnp sahf mov or mov mov daa mov add daa add and pop inc and adc dec xchg inc sub dec ja fisubrl test dec or add add and pop daa stos mov mov dec push dec xor inc loop cli and mov add dec or add jmp jo (bad) mov mov ja addb mov mov pop add push and or ss std roll ds and push inc jae pop jmp test pop inc jo cwtl dec movsb xor push arpl sbb pop pop add scas inc shll jmp aad mov les or scas sub pop mov rcrb pop push rolb inc popa pop adcl adc xor hlt xchg xchg mov sbb jo cmpxchg adc cli adc (bad) mov sbb pop dec cwtl sbb out push roll (bad) xor pop jmp aam mov inc or cltd pop dec cmp push cmpsb push cmp inc inc pop cmpsl stos mov (bad) adc les add pop inc les pop xor adc mov dec loopne sbb xchg cwtl push arpl jg popa mov push mov ljmp jne ret outsb xor andl loopne aas test pop lea push ds xor adc inc or pop or (bad) mov mov adc outsb shrb adc xchg add fmuls pop push test pop aad and dec in cwtl insb je or jl test in and push aas jg add push inc pop add add stc sub add pop push je mov and sub popa test inc jne xor addr16 enter pop roll test xor sub push pop sub cmp in jle adcl add push push mov popa mov and popa dec jb addr16 dec arpl cmpsb loope mov sbb or pop dec pop (bad) jno mov mov and inc repz pop push or mov call pop pop cmpsb decl clc shrb pop add pusha jne adc loopne dec push pop pop inc add and or loopne (bad) dec push pusha aad add add dec add daa insl pop test inc fwait mov and push push push add pop mov and mov mov insb adc push sbb movsb daa scas or adc mov inc mov mov lock xlat xchg adc loopne outsl rorb sbb inc pusha adc adc xor sbb imul xor cmpsb mov bound add push xor orl rcrb idivl mov add add ret insb rcrb roll imul xor test sub dec dec push add add sub and test push xor dec pop shrb xlat add test (bad) and jno pusha mov orb xor lods mov xor aas cli inc or (bad) inc and add or jae adc pop jg imul dec bound add adc add pop xor xor xchg test and pop mov idivl add add push or adc lods dec cmp out gs xchg fbld push add mov gs addr16 popa subb fidivl fiadd mov adc or ret cmp js pop xor mov xor aas dec inc jg add mov pop and jl dec inc and sub pop fwait sub or mov inc mov pop lods sub test sti lret push stos mov dec bound jbe xchg dec jmp push and call test popa sub bsr dec xchg cmova mov pop pop adc add add adc inc and add daa cmpsb loop lcall jo imul iret aas aam loope mov adc (bad) dec dec lods inc xor ja ja mov sbb adc cmp adc dec adc pop push cwtl (bad) dec dec dec inc ret mov dec xchg and arpl sbb add rcrb popa dec js fs mov cmp mov imul and (bad) cmp je outsl loop test mov inc dec jg es dec insb inc dec inc mov fisttpl inc or scas push popa popa inc pop jle and int push sbb data16 cmc loopne or dec pop inc outsb andl xchg and cli adc xor jge dec into xchg ds fimul pop jmp push xlat rcll les mov push mov or ror rolb or call fwait sub inc inc sub out cmp jb cmp sbb sahf push mov xor and mov pop push dec dec test pop dec movsb test ret push (bad) mov arpl push add cmp sbb push roll (bad) scas add sub pop cmp xor inc mov add pop dec sbb ret or adc push xor inc push mov or inc xchg fistpl sub and sbbl sub pop lds jnp mov popa movsl lock inc dec inc lock dec hlt push pushf sub cmpb push mov inc inc jnp dec or lret mov cmp pushf xchg lret sbb adc sahf push inc pop pop xor sub pop pop popa push aas aam fdivrs nop movsl dec hlt pop dec mov les dec pop sbb add sbb stos test add inc dec fs mov js sbb pop jns pop dec xor adc dec clc ss cs test es negb push (bad) loopne movl sub push dec adc sbb sbb test cli push mov inc push dec in mov and or or push mov cmp nop add cmp push imul cld mov dec cmp roll daa or cmpsb rol cltd les mov fadd push movsb inc sub mov or arpl sbb add xlat dec pop lods dec les cli (bad) mov fadd inc or xchg shr pop push jp dec imul add and imul xor test ja push ret or dec dec mov xchg imul and push or (bad) push sub rclb dec inc pop dec dec inc rclb push add sub imul or inc xchg pop add adc loopne sub dec test sub pushf cltd dec cmpsb bound sub and das mov sub fmulp lock mov inc dec daa push or aas test pop and movsl pop or adcl xor push arpl (bad) fneni(8087 xchg push adc mov or inc ja add sbb orl add add pusha sbb shr inc incb rclb loop jno lret xor push pop scas (bad) into and push dec push lahf enter incl sbb cmp xchg ret les (bad) (bad) aaa in pop mov inc and sbb seto add sbb adc test (bad) push lock xorb jp pop pop xchg fdivs pop daa or dec push add inc call insb inc andb mov or and ja pusha gs inc fsubs loopne pop inc addb movsb cmp xchg lcall or ret jg daa adc sbb or mov jecxz pop cmp dec (bad) mov lds loopne outsb test and jmp (bad) ds shrl stos dec sbb cmc inc add add sub rorb ret pusha out sbb add movsb mov xchg push or loop xchg lods dec xchg inc pop pusha adc pop dec push mov les and and popf add arpl sbb inc mov dec das hlt cwtl sub adcl stos fmuls (bad) or ss jo in sub push dec cltd xchg xor mov mov xchg mov pop call xchg in sbbb mov xchg dec lret and add jle sahf fnsave mov pusha add ret mov pop inc notl (bad) int or inc push inc dec jno adc dec and add pop mov cltd sbb dec sub mov inc fwait pop daa mov in popa sub xchg mov pop jbe pop mov cmp inc sbb pusha cmp pop das inc dec and int hlt or inc push inc or and mov (bad) adc sbb push ds jnp dec cld rol dec mov pop add cmp and push cwtl aaa xor ret in cmp (bad) rcr cmp push pop xor add xor rcrl inc movsb inc push fadds and push dec push or push inc push sub or adc xor add test es das sbb imul fwait cwtl mov dec pop xor cld dec test sbb or cmp xor jo mov mov imul dec push push and mov adc inc adc add sub or push scas add sub push sbb cmp xor roll pop dec pushf pop push nop bound (bad) xor add sub jg pop add mov add iret add adc popa pop addl jo inc adc add jne mov or pop xchg adc loop fwait ss push enter fs test or xchg inc into add jmp ja xchg dec pushf test pop out pop mov adc xor pop repz pop push dec int3 dec ret pop jecxz mov dec inc add pop (bad) (bad) sub pop pop notl mov adc dec and outsl outsl cs adc jmp jbe add mov mov cmp add mov shl scas inc or jg mov pop push mov or adc or cmp pop pop test rclb xchg and (bad) push iret push dec xchg add loope push xchg sbbl pop (bad) ss xchg es pop dec pop aam and out imul cs jo adc push jp add jp fist and push xchg dec add add mov push insl cwtl xchg push adc (bad) dec dec mov ss nop mov leave fcmovu gs cs loope jecxz xor call sbb add push dec mov add dec or mov xchg mov les pop push into inc (bad) mov mov ret adc mov sub lcall sbb out (bad) xor (bad) les aaa mov les add cmp mov fcoms sbb mov pop sbb jle cmp inc fs inc test in add jnp sub (bad) xor push ss js outsl dec scas in ret xor add cmpsl sahf jns (bad) push or xlat test push lea xchg mov fcoms add (bad) (bad) pusha push lds aas mov sub cmp cmp or aas pop push or sub mov loopne push cmpsl sbb mov inc mov aaa pusha sub data16 sub push mov mov push js cwtl push addr16 cmp stc aaa lret cmp ss rclb or dec dec pop out push pop push dec mov dec and and add add (bad) sbb sbb sub add sub mov adc and test frstor inc xchg sbb nop sub rep jmp or or adc mov pop (bad) jmp inc aas in icebp jno adc mov lock mov (bad) sbb int3 rcrl cmc ja (bad) jmp add into loopne adc cld or rcll test lret movsl xor and pop pop dec sub add add cmp and push daa (bad) int sbb cmpl lahf popa pop (bad) repz or mov aam rcrb jo lods pusha pop daa pop cmp fsubs add xchg aas hlt push pop inc loopne and pop popa and test cwtl gs sbbl xchg std push sub dec popl mov dec lret cwtl ret sub mov adc xor rcll sbb xor dec push fiaddl and jle adc sub pop pop dec hlt decb adc jle cld push inc nopl push std pop or (bad) repnz outsb adc ret (bad) imul rolb stos xchg pusha cmp dec pop push add fcom mov adc hlt add je jo sbb lret inc jp lock xchg ljmp push fwait push aad test sbb pop popf ret adc cmp ficompl sysret and fdivl adc xlat rcl fstps dec cld adc push scas rcll lea push mov push pop xchg cmp push sub xlat mov and addr16 pop add mov sbb test cmp orb and push das push stos or push enter add daa es rcl push mov sbb push cwtl xchg sub push aad lret daa push aas push push pop xchg (bad) pop cmpsl sub in add push pop fimull insl ret cmovo mov pop inc push adc sub pop push xchg jp movsb lahf jl push ret push pop outsl mov mov scas into (bad) (bad) clc cmpsl or push adc aas daa dec mov test or or outsl push pop add (bad) in nop push sbb add jo xorl lahf loopne mov cmpsl fidiv add fadds mov inc fs addr16 adc add jb mov and fsubl and mov xor mov aas inc out jo mov repz (bad) (bad) mov data16 addr16 mov test or rcrb mov pop or dec mov xchg push or cwtl dec push push sbb sbb add inc mov add cmp js lret push cmpsl fstps adc mov sahf int3 xchg test mov test or mov push inc (bad) cltd fimul cmp jecxz popa and test or xchg sub xchg ret adc sub jns add xchg push inc fwait push jge mov icebp lfs test mov fsts adc mov loope cmp sub fldl mov xchg add adc push daa or xor xor push or test add cltd sbb int3 (bad) push dec pop outsl pop cmp pop push dec (bad) jbe iret pop iret xchg mov outsl test sub push aaa and aam pop jo push push inc mov fbld enter and jmp enter pop add pop pop out or xchg outsl mov rcrb daa ret jo add nop push mov das push cmp insb jo enter (bad) insl cmp pop cmp pop sbb add jb and out push sub mov jo pushw nop push xlat xor or into or (bad) push jge adc mov dec xchg jae addr16 (bad) xor cmp test (bad) dec add pusha adc cmp js out lahf or jnp arpl mov xor popf out es rol test iret dec and push hlt add xor adc leave fmull jb xlat dec (bad) or push ss ja ja fs aam outsl (bad) sbb push (bad) insb or fldl out sti push scas xchg sub or adc mov insl jmp test mov (bad) dec cmp dec sub pop insb outsl mov insl cmp add add ret repz repz clc div repnz repz lock in ljmp in loopne fdiv cmp repz (bad) aam iret repz ror int3 lret cmp repz ret mov mov iret repz mov lods stos test cmp repz mov cmp repz cmp nop mov repz (bad) cmpb iret repz insb push iret pusha pop pop push push dec cmp repz inc inc cmp repz repz sub and repz and adc or iret repz add clc (bad) lock out call out sahf out mov out sahf cwtl nop mov out push inc xor adc mov mov mov inc testl out test andb loopne inc mov and sahf out sahf inc push pusha jo mov out nop cwtl mov sahf out ror fmuls ljmp negb push push or adc sahf out sbb and out sahf out xor cmp out sahf inc inc dec dec push push jns out pop pop pusha fs insb jo js sahf out sahf addb sahf out mov jns out cwtl lcall mov stos jns out lods scas mov mov jns out mov out sahf rol (bad) enter out int3 into rcl aam jns out fcomp (bad) sahf out sahf loopne in call jns out lock out sahf out clc cli cld dec repz add add add cmp repz pop or or cmp repz cmp adc adc adc cmp repz pop sbb sbb cmp repz cmp and and and cmp repz daa sub sub cmp repz cmp xor xor xor cmp repz aaa cmp cmp cmp repz cmp inc inc inc inc inc inc cmp repz inc dec dec dec repz repz dec dec dec dec iret repz push push push push push push cmp repz push pop pop pop repz repz pop pop pop pop iret repz pusha popa bound gs repz addr16 iret repz iret repz jo jb je cmp repz ja jns (bad) cmp repz jge jg add add (bad) (bad) (bad) cld or adc sbb and xor inc lock out fs jns nop call loope add and inc call imul in adc inc (bad) jno movsb into fxch adc dec leave test rol fwait sub mov movsb mov (bad) incl xchg mov mov mov scas jmp stos add sub lahf rcrl inc pushf mov and cltd xchg adc adcl mov mov mov inc test (bad) fs jge jnp jp mov (bad) (bad) (bad) jmp jb jo outsl inc outsb icebp insb movsb imul imul gs ljmp jno bound movsb pop jno inc pop adc pop icebp jmp push mov push inc push and loope les dec nop dec jns fs inc dec xor inc sbb inc mov out cli inc add add or and xor inc cmp fs jg (bad) jns nop xor xor xor xor imul in adc inc pop hlt jg sub sub daa adc dec test and jmp adc pop and xchg sbb nop sbb sbb sbb and jmp les sub nop push stc adc idivb and cltd adc pushf add adcl js (bad) jns or inc or or or (bad) (bad) mov lock pop nop pop cmp in xchg push inc push icebp add (bad) call adc inc add roll add adc flds movsb add inc add mov in mov add add addl nop push sbb add add ficomp cltd lock cmp push or sbb out mov push dec jns test neg mov scas adc and xor dec out idivb push push shll ss inc dec or inc cmp outsb jbe and adc xchg add (bad) into inc and or fsubp out or ret xor push shll es addl pop addw outsb jbe xchg xchg sahf cmpsb scas push add mov (bad) into (bad) pusha xor or out notb test push push push push inc mov ss test push pop test push outsb jbe xchg xchg sahf cmpsb scas or (bad) into (bad) mov out (bad) push xchg push push es cmp ss sbb xchg dec push pop data16 ret loope cmp xchg xchg sahf cmpsb scas mov ret loope mov xor sbb out negb xchg dec and push push push es mov ds inc and data16 dec and mov xchg xchg sahf cmpsb scas mov dec and mov sbb out idiv xchg xchg leave xor push push es inc dec es ret fs pop int3 outsb jbe xor xchg dec es leave sahf cmpsb scas mov leave xor test out (bad) dec push xchg dec movsl push push push push es test inc dec sub data16 jbe push test xchg push sub mov dec movsl push test push mov xchg out testb inc dec fwait cmp add pop imul push pop sbb jg (bad) (bad) (bad) jmp and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc xchg lret clc inc inc inc inc inc push test add cmp xor pop sar push pushaw popa bound gs imul jo (bad) call add ja jns jnp jge jg addl decl lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl (bad) (bad) (bad) ljmp lods scas scas mov mov mov mov mov mov ret (bad) mov (bad) dec leave lret int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne sti (bad) (bad) jmp in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl cmc lahf inc push add push ljmp mov push popa push daa push mov imull jno lret (bad) (bad) (bad) lcall daa das jbe int3 dec xchg cli jle popf inc xor imul xor inc inc mov dec test dec and jns push stc and add cld (bad) jbe test xchg das pop push mov or enter addb pusha rcrb rorl out (bad) imul dec outsl inc (bad) in or sar pushf fdivrl inc jg jg bound jae pop add mov fiaddl aam lock outsb sub addb mov int3 mov dec push lret push rcrl pop cs mov mov je pop sub pop xchg adc inc xor xor dec add jmp push xor daa add scas ljmp sub add sahf pop sbb adcl cmp xchg cmc inc jmp outsb adc push jle jae daa and sbb sub add outsl pop lods xlat xchg push mov mov dec jae push das jae push mov lods bound loopne adc jns jle mov test push fldt jae mov ret das sbb add or lcall arpl gs xchg dec jae or nop scas jge (bad) mov mov xor ss mov xor xor (bad) fiaddl xchg and testl je pop iret xor aaa js push dec movsl dec push pop dec push jg daa in pop inc inc push adc ss aas inc pop or loope outsl sub enter adc inc xor adc lahf (bad) (bad) jg dec es outsl and out push xchg sarl and xor inc ds int decl into cmpl push xlat aam add add cmp jg (bad) out mov xchg das call ja test fwait outsl dec xchg test pop or push imul ret imul int outsl icebp fsubr roll adc sbb dec sbb push out (bad) out aaa mov cltd int3 add testl addr16 lcall jnp pop lea cmc xchg add movsb and aas rcl outsl jle clc js,pn push sarl dec cwtl pop iret mov fistpll sub mov xlat (bad) xor push ret or (bad) jg dec ret (bad) enter aas mov in sbbb mov rcrb push rorb sub jle,pn mov xchg enter push and xchg lds inc std lahf and cmpsb cmp jne aaa mov daa lahf imul out int3 test mov aas lea jb xor mov xchg jnp,pt mov jecxz or mov aaa mov sbb sarl dec mov adc ss aas pop and out push (bad) stc movaps dec in mov nop aas fildll mov repz dec lods cmc (bad) cmp mov loop cmpsl pop adc cli mov aad and rolb inc push xor das lcall aaa mov xchg in jbe movsb (bad) pop jmp mov lcall fldl xchg aas mov repz insl xchg scas sbb (bad) js ret push or (bad) int (bad) jg mov xchg aas and fisubr imul out jno (bad) icebp addr16 inc adc or (bad) out inc cs add fdivrp mov or aas and pop add into adc loopne je mov pop cld add push jbe andl add add mov rorb cld in mov push je inc inc movsb into out mov mov sbb xchg jl (bad) inc dec sahf gs push xchg xchg scas daa rcrb mulb add js fwait (bad) lahf into pop jl roll jg and xor aas add (bad) fistl cld mov mov pop int3 push aam enter movsl aas jmp notb subb je sahf mov stos xor (bad) jmp enter test movsl sbb sbb inc stos cs (bad) mov cmp push or mov lods aas jae fdivrl cmp in std (bad) xor scas aas push add jno cwtl xor add fcomip mov loopne mov loop clc jecxz in sahf (bad) jg call das notb aas lret faddl lret rcrl xchg xlat inc mov fildl js in outsl lock cmpsb mov jg and xchg aas sbb aas cld push outsl add push mov push ret push aaa test mov jne lods pop jg fisttp in (bad) lock int3 adc jbe mov (bad) (bad) or sub push and mov and or lods xor mov sbb aas arpl dec cmp mov mov push mov repz out add pop (bad) push pop mov add (bad) jg mov (bad) adc aas inc mov pop es repnz daa mov ds jno in pop mov rcll mov push lock ret add push outsb pop lret cld imul adc cmp sarb loopne addl fwait push lods inc test aas mov out xor aas mov cld jmp mov push testl lret pop or outsl es mov les mov insb push xchg push sarb sarb outsl jle negb xlat add lcall sub xchg push je push and jno xor cmp insb jge (bad) in mov fild gs jge (bad) out insb sub aas dec sbb mov dec in lcall dec dec jg lcall jecxz lds flds test cwtl fnstcw xchg lds mov xor push rcll sub (bad) mov push lods jb int (bad) aas pop nop xchg jg fistpl sbb (bad) stc dec ficomp jo sbb movsb aaa inc cmc clc inc (bad) aas std jmp das sbb mov mov out cwtl ljmp mov loope push out push adc and jg sbb cmpsb add ljmp sub dec mov push push mov in push cld push hlt pushf pop push leave fisub jge ss mov sub mov pop mov jp rcll mov sbb mov in mov mov mov lcall aaa fnstenv adc mov sahf push pop lret aas sub xlat mov (bad) mov mov rcrb push push dec aas ficoml push ljmp (bad) (bad) lcall push fadd or idiv rorb dec imul int int (bad) aas jb or in jge stos mov jecxz mov adc jmp pop pop stos (bad) out add xor pop fmul lods lock outsl (bad) jg rorb and jnp push or aas aad add dec or scas xor int mov sar fiadd inc insb push sar out mov push icebp jp out inc (bad) mov and lea sarl fisttp jno jmp into mov and mov repz lods dec mov push imul mov test sti xchg cmp stc mov lock push fistp pop xchg add sarb ja stos stos pop sbb push outsl and sub fistpll push cli cltd imul int jle mov xchg cmp mov mov sub fistp inc sub jle push cmp adc push sbb outsl jle pusha addb mov mov add add popf mov int mov push xor inc adc rcrb (bad) incl sarl jl cs mov push jge lcall jle loopne and es cmp out mov dec cmpsb enter dec mov test (bad) (bad) or jns cmpsl xchg mov xor fsubl call add out xor add lret pop sbb mov out mov roll or push nop (bad) incb lock (bad) mov mov sub add xchg in int outsl jle jl insl js sub sbb aas jo or (bad) std fistpl inc push pop pusha repnz add aas insb pop inc pop ja cld out mov imul loope hlt mov movsb popa enter shrl or mov push add pop out aaa mov or xchg (bad) mov aas nop jb sarl repz repnz jae pop rcl cmp scas adc push enter aaa jnp push cmp mov add jg (bad) mov stc and in popa xor or adc dec push push push sarb and pop enter fwait inc into fstpt adc faddp mov fstpl mov inc bound ja and mov (bad) out mov ret scas (bad) cmp ljmp pop fistl cld call mov aas cld sub in mov fcmovbe inc push out int jle sarb xor in ret fcomps fucomip inc roll sub enter int jle cli inc (bad) mov xchg icebp rcrb add mov addr16 fmulp and popa popf push cli push and inc mov pop xorl adc jb add cld out jg loopne adcl bound faddl imul repz push jl xchg arpl mov add ret xchg mov fisubrl out inc push or stc int dec jmp hlt dec or ljmp add out ljmp dec or clc loop pop sbb in pop ret vmovups and imul sub loopne outsl idivl push add pop cld mov aas fwait dec frstor repz cld jbe push idivb inc push cmp pop repz mov inc repz outsb dec sub mov xchg pop cwtl push repz outsb scas and lods or (bad) cmpsb fnstsw mov jnp cmpsl popf dec jmp mov es jle fistl add jg push dec lods int xlat cmp cmp imull jecxz data16 add jle fistpl jnp scas inc loope leave jp je mov scas mov insl push jmp test scas loope iret cmc (bad) lret pusha cld testb push jb arpl (bad) (bad) loop push push aad add xor (bad) fldenv clc inc add lcall daa cmp das mov aad sub sub xor aaa push pop pop es mov aam add cld out push mov push cltd test gs roll sbb idiv in mov mov sti jecxz add push pop scas movsl inc (bad) out jle fild je test cmc popa cwtl gs fwait mov jne xchg (bad) rorb jnp xchg leave (bad) out hlt fldl and push sub fldenv in push scas pop (bad) outsl jle fistl (bad) cmp push cmpl int movsl lods sub popa push arpl sub cltd sti int jle sahf (bad) ss mov lea repz pop scas jle int idivb adcl mulb dec (bad) out inc leave rcrl jmp aaa mov cs dec pop fdivp lea jmp aas repz clc sub shlb js sti sbb stc int jle arpl out sahf cmp loopne jns shlb test out mov in pushf inc es push pop das jle fild sbb jb,pt adc dec jecxz push inc dec mov stc int mov jmp xor nop (bad) xor sbb rcll mov les enter and lcall mov mov mov sar mov int mov roll dec rorb out jle fwait sbb mull aad dec sub out mov sti leave clc int3 xchg mov mov mov mov das inc sub lods add inc cmp cld int jle (bad) repz sbb jmp push sahf adc sub loop pop pop and push movsl add jb push mov adc cld mov add push push (bad) jbe outsb mov dec into mov leave addr16 sahf xor repz daa add jl push stc cmp pop mov jo pop add (bad) adc mov ja jle push rolb pop pop call push sti int jle or pusha pop xchg mov insl stos xchg rcr or stc int jle mov jmp gs or sub mov fbstp mov xor js and dec outsl dec inc push negl dec cmpb negl shlb or xor bound and add sbb jle xchg std jo sarl out out or mov fisttpl ret popf je xor loop lods inc stc int push ret mov fmuls shrb mov ss popf fsubrl add aaa mov push in in inc inc dec mov aas cld lds bnd mov pop inc int mov popa mov cmpsl (bad) sahf inc sbb repz sahf push jno adc adc pushf mov xchg mov mov mov xorl sub sbb adc mov pop test sbb mov out mov pop jno jae mov outsb jle pop incb rolb xor fs sbb push shl xchg (bad) out or pop stc mov leave aad mov fwait push and decl mov int push pop dec add mov and xor push aas cli push jno add adc xor add pop das imul mov insb jle roll out and fdiv xor or dec cmpsl sbb sbb scas jb call mov mov adcb mov stc cmp sbb loop aas ds add push xor pop clc fistpl mov in cmc loopne push nop pushf out scas loop imul lods stos xor pop pusha (bad) push push in repz fisttp xchg inc (bad) and pop cld mov int jle sahf xor ds clc movsb cmp mov jle xchg test mov mov int3 scas aaa mov enter out add cmp sub (bad) out das scas mov mov fsub cmpsl adc andl jp pusha subl add adc in push or cmp mov inc xor shlb mov sub es sti neg and lods cmp ljmp xchg cltd addr16 mov testl mov xchg pop sti adc mov (bad) out cltd repz stc imul icebp rorb nop icebp ss outsl jle fwait jl jne mov int lods mov xlat divl mov jge cli and push int3 dec dec sub xor dec inc lods adc add sbb xor sahf inc (bad) testb pop insb fdivl mov xor cltd int jle adc (bad) jmp sub and add or aaa mov inc and mov ficompl (bad) aaa jp ss test iret (bad) fmuls out add out jno pop cmp aas dec mov cmp adc add in repnz mov enter popl ror or jg or aas mov scas xadd cmp int sar push mov aas ljmp incb xchg cmc push inc sarl mov cmp inc incb pop scas mov pop scas inc daa ficompl pusha push inc adc incl bound pop pop add add addb mov call sub mov cmpl lods aam xchg add out das and mov pusha mov pop movlps add mov fistpl outsl ret pop mov imul aas movswl adc outsb daa rorb outsl aad pop cmp mov notb fadds mov and insb add pop add fadds push pop shrl lds in inc mov (bad) pop repnz push rolb das jns sysret cmp orb mov lea cmp mov add pop ja push subl push add sbbb xor inc xor pusha add pusha add addl sub (bad) sbb sbb jb inc jo adc pop push add mov mov mov fadds add and push push push push loopne jnp flds pop mov pop cs push dec cmpb jnp nop push insb xchg es add outsb push jo imul addb outsl data16 xorb cmp mov xchg ss xor or mov mov sbb cmp dec cwtl add lahf insb imul jb add push mov popa mov lret jg add pop bound mov daa ror insb pusha or add lods or fs adc mov push cmp arpl xor pop imul fs sub fs pop notb xor xor adc shl inc inc pop dec add adc push fstl add das push imul push mov outsl iret insl xor push mov add sbb pusha popa insb pop sub (bad) jns movsb jae mov xor xorl add roll inc int3 add lcall (bad) cwtl pop add fcmovb push inc add lahf adc sbb das (bad) mov in adc fs push je mulb lock push add in push insb loopne insl nop outsb mov bound jo lcall negl mov mov out insb push test jle push test push in jnp pop es enter mov and jo jo lods push jb lods pop adc cs add lods push fbstp xchg inc scas (bad) mov dec add xchg mov sub arpl mov mov (bad) dec cmp mov pop ret mov cmpsl mov mov xchg testl inc sub mov sbb (bad) and push and loopne rol add jbe mov xchg adc addr16 push and into fistpll jg mov mov and ffreep xor inc ret pop push lock mov popa or pusha test loopne jo in shrb ds outsb add or lahf out pusha dec adc lea mov or add and adc adc imul lods jb das rcrb imul sub pop cmp mov or add pusha add sbb xor sbb pop adc (bad) mov dec push dec mov xor push shll (bad) daa (bad) ja out fist jo imul mov imul loope jns mov jne sub daa outsb pop inc mov mov dec inc adc dec add cmp mov push inc mov test inc pop inc push out pop inc fild imul pop incl idivb loope fist das popf sbb inc inc push pusha fs cmp es inc dec dec pop xor cmp loope fs xor insb push popa add mov and add mov popf fcomi clc push cmp loopne lds jecxz mov out sub ret xor sub (bad) mov movsb dec int inc daa dec xor icebp stos scas xor gs insl das and push or xor push dec (bad) je (bad) cwtl movsl pop push scas jae jo sti adc add insb je cmp add test and arpl ss mov pop pop xor add push pop scas xor mov add inc rcll fisubl aaa sti aas and cmp aad sub xor jnp inc xor jp lea xchg xorl sti cmp xor es jnp leave cmp adc in bound add lret sbb imul pop jae lock pop imull add mov mov jae pop push mov inc rolb mov call or sub inc push dec pop roll xor imul inc or scas lds maxps pop addl ret jne jne,pt lods sbb or inc mov adcb ja mov jp pop pop pop push push inc add mov push add arpl and sub insl ss push outsb insl dec and mov jbe cmp push stos mov adc sub (bad) dec mov mov xor xor insl inc jne pop ja in sbb das je pop or xor push adc ja inc sub and shlb mov daa insl insl xor sub insl addr16 outsb out aam cmc std xor mov pop (bad) pop mov jbe les pushl push insl insb sbb pop ret fs add repz sti out in aas add pop pop cmc sub (bad) add add out mov movsl or data16 ret push rolb jbe cwtl jne jmp dec loop insl clc addb add ja mov popa push in and cmpsl cmpsl pop sbb mov gs loop mov jno imul cmp fdivl mov outsl adc and aas sbb add (bad) inc dec cmp push xor lock jge rcrb (bad) jo test cmpb gs add inc rcl or fisubl out outsl or push push outsb xchg ror mov jl xchg adc add test pop mov enter movb jo xlat adc pushf iret jge cltd mov inc push int3 (bad) pop mov shrb sub sub mov or and jno sbb cmp push jae mov sbb sbb cwtl cs stos inc pusha loope pop xchg or cli add add sub pop push outsl push xor xchg imul add into cmp test outsl lods leave pop mov add (bad) or jle mov add ds mov xchg cmp loopne add xchg fs cmc xor push or rorb jb movsb aam cmpsb adc imul popf cmp push in jp pusha push ja popa js adc pop pcmpeqw push adc pop pop mov xor push and fwait and push inc xor inc pop (bad) packsswb sbb pop inc add ret in inc inc dec insl add (bad) loop adc pop xchg jbe outsl loopne das daa outsl jae jbe popaw iret pop dec incl add inc inc push push push dec inc dec jo sub dec inc pop sarb or or dec push dec mov cltd mov imul pop fs adc mov push cmpsl add sub es push xchg xchg mov add jne std or test insl jns mov fwait dec fildl ja push xor shrl mov mov lock repz test loopne adc cwtl out outsb dec push push mov aaa push cmp inc dec jbe xlat mov adc out fiadd mov sahf add fistpll add add add add lock pusha or je inc sub pop adc pop dec pop lret cwtl push lods out je xchg add jl xor fnstenv xor dec mov mov rolb cs dec xor loopne arpl je js test rorl jbe dec pop mov pop dec push imul inc and push clc adc push lcall cmpsb push das (bad) push nop adc and mov imul push push add les sbb xor daa add add addr16 jno dec pop or push ljmp movsb or loope adc (bad) mov insb sub icebp push sbb adc jg add pusha jg shrb loopne xor fs and lcall imul xor mov (bad) cli jp mov jg and add lea outsb cmp sub add iret and add movsb mov (bad) fsubs adc add test adc jmp idivb and dec pop (bad) and cs das int3 (bad) or iret push push push mov enter mov add add push popa mov inc (bad) mov pop xchg xlat popa add rorb push adc xor decl inc mov pop or je xchg or jo jnp xor pop or pusha push and repz frstor push loopne push cmp aas iret pop sbb js neg mov adc push push repz mov lock push cmp repz adc adc xor out cmp repz repz sahf test jle pop sbb jo rcrl push inc fdivrs pop insb sub push or out out mov jle push adc cmp repz mov fdivp cmp or movsb add (bad) out jns jnp push in pop pop sbb xchg neg movsl je test cmp aam mov push mov push mov repz jle push push add repz xchg (bad) xor int3 vmwrite repz lods push push xchg push in jle pop push push pushf out sahf out arpl fcompl cmp cs jno dec icebp push cld add push adc or repz pushl ret icebp sahf idivl add addl pop lcall xchg jns iret repz cmp imul out jns mov bnd repz shll mov pushl idivl leave lret stos add sahf test ljmp leave lcall into repz adc jmp inc pushl cmp jae (bad) cmpsl cs out cmpsb pop dec dec daa iret jae out pop sbb cmp (bad) imul sub dec idiv inc pushf dec sahf push pop ja ja out into jmp scas fistpll cmp xchg lcall daa iret jae sahf jg fisubr mov lahf (bad) dec pop xor incb inc mov loope jb pop jb mov test leave test jmp test lds pop jb movsl in and jb aad test cmc int test in popf pop enter mov xchg ret mov jecxz roll and mov enter lret stos jmp enter fstpt sti (bad) jb pop jb out pop jb pop xlat mov enter iret scas pop enter lahf fbld (bad) jle xchg lods sahf pop push add add adc mov push add add ds outsb adc adc (bad) sbb and add rep jecxz push add add sub pop push popa cmpsb rclb add xor and rol popa (bad) dec inc movsl add xchg data16 cwtl fisubrl inc dec out push sbb setle outsb or les clc sbb jge das cmpsl imul clc data16 or sub (bad) das fdivl xor sub fstpt and shll pop sbb addr16 xchg sbb sub xor (bad) orb les loopne outsl sub sbb cmpb ss es jae dec dec add push cmp xchg out scas inc aas xor roll cmp xor mov or or and add imul mov mov xchg dec lea jbe (bad) or loopne push jecxz stos and xchg mov inc mov (bad) mov cmp xor dec shrb or jo inc dec insb jns out dec in sub mov fs xacquire les insb mov add inc or jns mov fiadd pop add adc sarb xor adc pop xor and pop adc cltd mov adc adc add or lahf (bad) pop mov xor fidiv dec (bad) lea adc inc fidivl pop pop or mov push xchg outsb out inc add dec js ficomp les pusha push push call xor or and fbstp sub jne fcomps dec jbe lret add and into cmp jne add enter lods pop jp addl loopne push daa pop jnp arpl adc es daa daa adc push cmpsb jle add xlat cmc pop pop pop or xchg push xor push stos and cmp add inc add (bad) push dec add or into mov xchg push xchg add repz out (bad) push add iret repz sbb sbb sbb dec dec cmp sbb sub push out mov (bad) lcall (bad) hlt push xor xchg fs xor fdivrl jmp sar (bad) (bad) call mov sub mov sbb dec jno repz (bad) (bad) (bad) incl in insl push mov hlt movl imul std in leave gs (bad) (bad) decl fldcw arpl or pop adc in pusha aad jno (bad) (bad) (bad) jmp inc aam dec std test movsl cli test xor (bad) leave mov (bad) (bad) (bad) ljmp pop fild or shrl cmp ficom push xlat enter (bad) (bad) (bad) (bad) mov and mov cltd xchg mov mov or or and or (bad) (bad) pushl adc stos sbb data16 inc fdivl jno add aad cld (bad) (bad) out mov mov movsl in lahf xor mov js loop test xlat (bad) (bad) call mov cmp fs add hlt push imul (bad) call sbb xor mov push insb jnp add (bad) hlt or (bad) (bad) (bad) (bad) (bad) fnstenv adc mov mov bound ficoml gs aam pop (bad) (bad) lock mov into pop cmp mov aam movsl fisttp xchg fdivr (bad) ljmp (bad) shll jmp outsb xor mov sarb add in (bad) (bad) lcall or cmp add daa adc or and (bad) (bad) (bad) incl mov popa into push stc ficomp leave fldcw and xlat (bad) pop cmp jg decl mov (bad) cmpl or mov lcall (bad) cmp ljmp fildl push fdivl (bad) lcall jecxz cmp push or or push in decl xchg daa scas pop (bad) (bad) (bad) jg sahf pop jge xchg (bad) shlb add inc push imul xorb (bad) (bad) (bad) lcall out imul aam loopne rorl int3 dec frstor fistpll mov mov (bad) (bad) call aad mov call xchg shll push repnz addr16 cmpsb fldl mov (bad) (bad) (bad) aas dec ss fisubrl or scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov (bad) (bad) pushl jns imul andl shrb ss push xchg ja int3 add mov (bad) (bad) jmp das es lds or sub mov cmpsl call ret (bad) mov sahf fcos (bad) (bad) ljmp ret es pushf mov insl add ss jmp addr16 (bad) (bad) mov sub dec mov loop sub or mov xchg or call in out fdivrl fisttpl aam roll clc mov push int mov fcomip (bad) mov outsl ja mov out cli jo (bad) lret pop or adc (bad) mov (bad) scas (bad) clc sar imul push js or push addl (bad) (bad) inc mov cmp cmpsl notl pusha rorb imul push scas fcompl fldenv fild (bad) (bad) push cmp aaa push scas mov fidivr mov jmp repnz lret mov (bad) (bad) (bad) jmp sarb sub push mov jp mov dec popa les sbb xchg sub outsl sub mov or sbb sbb (bad) outsl jne add sbb push sub dec mov pop push (bad) xchg (bad) (bad) (bad) incl or ret call hlt jecxz dec mov dec jle mov sub (bad) (bad) (bad) lcall dec adc fsts jo js inc out popa push xlat scas cs mov xlat mov sbb test (bad) (bad) incl (bad) sbb sub test sbb insb (bad) fistpll inc aam push (bad) (bad) (bad) lcall mov adc mov popa ja mov out repz gs (bad) push (bad) scas (bad) jmp inc inc sub imul jo scas imul out pop sub sub pop or (bad) ljmp sbb repz fbstp push jo add call and sub xchg sbb xor pop nop sti mov lahf pop mov and (bad) jns (bad) (bad) push jae dec call inc cmp ficomp dec jns inc jle jmp (bad) sbb (bad) (bad) (bad) out adc push lea fnstcw mov dec hlt mov or decb adc add pop dec xor inc mov outsb lret push pop mov loopne decl xchg push xchg xchg push cwtl xlat ficom test loope xchg lret (bad) (bad) call les jb out imul push inc lahf test pop adc push sbb adc cmc decl and inc out and cmp dec mov fildll int3 cmpsl xor mov lods out sarb mov adc insb mov xchg adc jle push jns das mov and je or xor mov dec push jo gs out jle (bad) repz mov xchg rcl inc std (bad) (bad) cmp mov js mov test cwtl (bad) (bad) jg test mov mov scas adc out pop push insb hlt inc int fldcw (bad) (bad) decl pop repz inc ljmp ja inc xlat ss push out mov mov movsl (bad) (bad) (bad) incl inc jno mov ja (bad) insb pop push dec sub or sub (bad) (bad) fstpl adc cwtl mov scas mov (bad) (bad) call push mov push (bad) push hlt out les fdecstp jmp lea (bad) jg fild pushf sub sub dec jo outsl sbb sub loope (bad) (bad) jg fisub lds push call dec in mov movsb ret addr16 test es (bad) (bad) jmp (bad) lahf fdivrp cmp repz jnp call cmp mov or (bad) (bad) cmp icebp adc sub jae xor mov jo cmc shrb addl fcomip das cli mov arpl lods (bad) loope int3 mov stc dec xlat loopne adc scas or lea mov test and pop insb cmp les adc sub dec (bad) (bad) (bad) jmp test jns or cmp popf cmpsl push mov xchg adc (bad) (bad) (bad) jmp pop xor cltd bound fcoms into pop dec loope push jle push xchg sub int3 bound mov sub xchg call mov pop lods ret outsb xchg dec insb das mov adc and cmp sub adc jns (bad) (bad) cmp movsl dec mov movsb daa sub repnz (bad) (bad) (bad) mov out mov shlb es xchg aas mov adc (bad) mov sar mov gs pop jle aaa or jbe dec divl outsl cmc push lahf adc jb and pushl push add test pop mov jle fsubrl push mov outsl (bad) (bad) mov mov cmp (bad) test or stc sbb (bad) incl cmp es leave in push ja pop sub (bad) (bad) decl das sbb fildll sbb repnz adc dec jae adc (bad) (bad) lcall adc jp mov pop loopne dec cmp sub cmp clc or cmp (bad) (bad) (bad) out inc aas or cmp push add outsl jge aaa ss fidivl test push xor imul fldl adc nop in and (bad) mov (bad) (bad) ljmp fsubs leave pop sub and mov and mov sub fidivr sub cld sub ds sbb sub lcall das rorb (bad) (bad) mov cmp xor jb and push jbe icebp pop je fwait aad js (bad) (bad) (bad) decl jg or jl je jns push inc js mov (bad) jnp cs scas mov subb cmp nop es xchg decl ja add push or bound stos sub (bad) cmc (bad) (bad) (bad) jmp gs fs imul dec pop mov (bad) decl push outsb jns dec cld arpl dec lret or xchg mov dec movsl fstpl (bad) lcall push inc (bad) dec inc inc shll inc xor inc jae cmovo out inc sbb adc icebp push add push ds mov mov (bad) (bad) inc clc push mov adc push aad mov pop fist pop xchg pop mov movsb pop (bad) (bad) (bad) cmp jmp add sub outsl pop insl das lods pop sbbb loope jno loopne iret mov (bad) (bad) (bad) (bad) fldenv cmp imul out addr16 in dec es mov out push sahf mov jmp pusha in in das call mov stos jmp pop imul loope (bad) mov insb xchg (bad) test adc cli sbb sti inc les (bad) (bad) mov jg ret cmp inc icebp xchg inc or (bad) (bad) (bad) jmp xchg (bad) (bad) int dec mulb js push aaa mov fidivrl jecxz fstpt (bad) decl and fucom dec aaa fnop or xlat out test fsubr aam mov aad movsb (bad) sar (bad) (bad) pushl into mov rcrl and adc pop lds xchg pushf les fcmovb dec inc sbb int3 push push ret (bad) (bad) sti cmp ret mov call dec lret lahf lds adc jg inc test inc int3 inc insl xchg sbb ror mov ljmp cld insl nop cs sub pushf cmpsb xchg stos push fs repnz lds mov sahf xchg adc pushf mov outsl mov adc xor (bad) (bad) lcall xor dec mov or (bad) in popf orb (bad) jg pusha andb mov push pop (bad) out (bad) (bad) pushl faddl arpl pop xchg shl test into (bad) (bad) (bad) incl stos stc outsb movsb stos jl jmp dec adc scas adc lods sbb xor call movsb inc aas mov les clc mov stos std jl popf xchg mov mov sbb mov (bad) (bad) (bad) jmp (bad) mov fcmovne mov mov mov cmovns push dec adc (bad) push push mov mov fidivr pop pop mov jmp ret (bad) jmp mov out scas mov push xchg bound pop imul xor dec or loopne outsl add (bad) dec fstp (bad) (bad) (bad) ljmp xor loopne adc lahf push sbb xor cli jno lods inc enter lods cmpsl (bad) (bad) (bad) inc addr16 or outsl into int jg xchg adc mov aas sahf rcrb xchg call (bad) (bad) (bad) pushl lods and mov inc jp ds xor mov cmp rolb xchg or decl loop xchg xchg loopne ljmp cmp pop dec (bad) iret aas sub xchg in jecxz pop push or mov sub sbb (bad) les and loop outsl dec jg or (bad) jge aad (bad) (bad) decl lahf xor lds xchg lahf mov inc std mov pop fwait or cmp rclb (bad) lcall mov sbb mov jbe push lret pop jg test push (bad) jo leave (bad) (bad) lcall pop sbb pop mov adc shl (bad) fcomip ja push das lret jnp dec ja prefetchw or jae movl (bad) (bad) mov inc nop call cld jle data16 sbb ficoml daa mov mov out mov mov decl sbb cmp sub pop outsb xchg add cmp inc mov (bad) (bad) (bad) aas das xchg in pop xchg sub mov pop clc or test push mov fist inc addr16 jg call fwait push add in mov dec leave xor inc arpl (bad) (bad) stc movl jns aaa pop in push loope inc call cwtl call scas (bad) jg call out aaa push clc inc (bad) add daa dec and jmp cltd scas xlat loopne lret (bad) jg pushl cmp in mov inc aad in ljmp bound inc xchg out (bad) (bad) (bad) pushl enter jo sahf in sub push in cmp pop cmp outsb xor or (bad) (bad) (bad) xchg movsb loope mov sub dec dec cmc scas repz xor (bad) (bad) (bad) js sub dec leave hlt js scas dec rol std shlb pop xchg idivl sub fcomip mov and sbb pusha jle cmc mov (bad) out mov (bad) (bad) (bad) ficomp mov ret mov flds push ljmp xor (bad) and (bad) (bad) (bad) ljmp mov roll outsb mov push or adc ljmp into movsl adc (bad) (bad) (bad) inc bswap fsts xchg test lods sub sbb and xorb fcoms add (bad) scas iret jb leave (bad) (bad) (bad) pushl and movsb push inc xchg sbb test pop adc out dec jbe mov into lea inc fsubr inc call std (bad) clc fs jns stc xor xchg inc fidivl jmp (bad) stc mov mov (bad) (bad) decl lock imul ss test (bad) cs mov call std pushl mov loope into cs out add addl (bad) (bad) (bad) lcall pop jmp icebp and (bad) insb inc popa ds into mov iret test jg pop es (bad) (bad) (bad) ljmp mov (bad) out lret (bad) sbb loope push adc cmpl adc (bad) ljmp cmp jle cmp pushf in adc add sbb cmpsl push (bad) (bad) (bad) jmp ret ds outsl sub mov add xchg out mov dec or sbb cld (bad) (bad) call inc sub neg jmp pop test or xchg popa mov fdivrp (bad) out sub pop xor cltd or pop insl les jo hlt (bad) (bad) jmp xor push fisttpl movsb loopne jmp mov mov sub jl out (bad) (bad) (bad) mov sbb fs and repz inc ficomp fcmovbe jge fucom jmp (bad) (bad) mov sub push imul mov in adc pop dec (bad) (bad) (bad) jmp insb fsqrt (bad) arpl outsb and dec imul in addr16 cmp in (bad) (bad) (bad) decl aam rorb mov xor mov insb fstpt stc inc xor insb jecxz (bad) (bad) incl pop jne (bad) or pop fnstenv lods push mov enter mov (bad) call and and mov movsl movaps mov (bad) mov mov or and outsl jl pop push sbb imul faddl add jno cwtl shlb mov jno cmc or mov lahf mov xor leave (bad) (bad) fist add or sbb or sub out or jmp add push hlt sbb popa bound pop dec (bad) (bad) ljmp in sbb movsl jnp or (bad) cmc pinsrw fld adc pop and ljmp sbb mov jl sbb sti aam gs mov test into mov mov (bad) (bad) (bad) fbld xlat movsb rol insl rcl hlt sti inc imul cld lods mov pusha mov pop incl in jle or (bad) (bad) incl inc stos mov or xchg mov and mov aam (bad) (bad) (bad) dec popa in pop fdivrp push sub leave cwtl mov cwtl and xlat test pop mov pop cs xorl mov andl mov loop mov lcall ja stos (bad) ljmp jae push and or xchg cmp pop test push (bad) (bad) (bad) dec or add mov setae mov push mull (bad) (bad) call andb sbb outsb imul (bad) aam jbe shrl loopne fidivrl fisttpll stc mov fildll mov mov aad (bad) mov push fadd les incl cld fcomip push sarl addr16 mov fisttpll ss fmuls add dec add mov (bad) (bad) fbld ret test fist outsb mov inc imul sbbw outsl shlb int3 or xchg mov add mov lds (bad) mov sub add xlat jmp sub sahf mov scas sbb (bad) (bad) pushl jne mov or ss jb test add xchg mov incl jnp sub xchg rorb repnz mov (bad) (bad) (bad) (bad) fbld xchg rcl icebp aam inc push fiaddl int mov ja sbb inc ja pop out punpckhdq push cmp adc or (bad) (bad) ljmp popa imul push insb iret inc mov or adcl (bad) (bad) (bad) inc cmpsl addr16 shlb (bad) dec imul scas shrl (bad) pop faddl or fdivrs (bad) (bad) (bad) push test mov iret jg mov jmp lret mov xchg xor mov cmpsb mov xlat push xchg push ficom addr16 (bad) (bad) jg jp les mov sub xchg mov mov mov sub hlt call sbb xor bound lods lds (bad) incl pop cmpsl xchg xchg (bad) enter rol mov mov hlt fxch lods mov or scas jle adc decl subl dec ret push fldenv (bad) (bad) lcall jo popa out inc xchg cs xlat push aaa mov adc cwtl mov add sbb (bad) (bad) (bad) lcall mov cli fldt ja pop ljmp aam aas (bad) pop push sahf xchg test mov jmp cmpsl mov and call shl ret fiadd gs scas stos inc (bad) (bad) (bad) incl jmp imul jbe std imul sub or or sbb insl fild repz (bad) ljmp in jo jno imul sub mull sbb jne pop mov call lahf mov mov cmp out cmp jns push dec push (bad) (bad) (bad) jg sbb fisubr cmp jns add ret xchg push sbb xchg adc mov jmp cmp ret lds or xchg into pop int3 add inc xlat xor fist outsb cli bound pop push mov pushl out (bad) xchg xchg push xchg (bad) cwtl push (bad) int3 test (bad) cmc cli (bad) (bad) (bad) dec xchg jb xlat pop imul inc push mov pop dec test unpckhps sbb jo cmp incb gs imul and add lahf mov xor std pusha lods and scas mov shr lahf adc xchg mov leave dec (bad) (bad) (bad) jmp rclb ljmp ja das aas jns ss mov or je adc xor jmp mov fidiv jle xor out (bad) (bad) std ret rclb (bad) dec mov cli lcall js cmpsl cmp sbbl or ja clc scas lret mov loopne insb push insl fnstcw int ret (bad) (bad) (bad) push pop adc inc and shrl ja adcb out movsl add test inc mov push ja cwtl pop insb (bad) adc ss daa mov pushf add mov scas bound (bad) lds (bad) out hlt push out xchg (bad) call rclb pop mov test xor imul lret (bad) jo lods clc pop sbb inc sub data16 loope (bad) push dec nop cld arpl lods mov in test (bad) (bad) incl es scas mov (bad) repz cmp call imul (bad) (bad) lcall cmp sbb mov pop adc xor xor dec jo mov imul jp dec (bad) incl arpl ja cli xlat dec shl out stc add xlat (bad) (bad) fist xchg adc lea or mov pop inc sbb insb je aas (bad) (bad) (bad) inc sub push test cwtl inc jle test rorb cmpl hlt pop mov cmpsl (bad) (bad) (bad) lcall in add cld dec xor bound into jns fmuls dec pop push cli jle jnp sub xchg (bad) int3 in sub xchg mov xchg push mov repz inc gs (bad) (bad) inc lods insb dec xchg outsb jne mov call or push aas gs add in mov sbb mov daa repnz mov mov (bad) (bad) (bad) (bad) out and loope or mov jle shlb imul inc cmp ljmp (bad) pop std ja fsubl push jle hlt out push or (bad) dec cmp or lcall push mov int3 xor ret add push jp mov push lret fdivr (bad) (bad) decl push test adc psrlw (bad) or push out loope sbb fs xchg push or call loopne sub sbb mov inc pop mov sbb (bad) ljmp or stos ffreep sbb cmc adc cwtl call mov cmpsb (bad) lcall cmp adc (bad) xor push mov in cmp (bad) (bad) decl loopne (bad) sub cmp xchg mov or mov xchg cmp (bad) (bad) (bad) lcall pop aaa pushf jge xor sbb test xchg aad xor imul adc frstor das mov mov cmpsl daa aam es dec dec and (bad) jnp out and and adc sub pusha inc sub or jno hlt sub jbe (bad) (bad) inc cs enter mov (bad) jno out jae pop scas jb xor jbe dec (bad) (bad) (bad) ljmp je icebp jb aad inc jle fdivrl dec mov jge or jl bound jns je js push xlat ja call jnp lret mov xchg cli fisub cld (bad) mov xchg in pop push repz arpl (bad) pushl popa sub push cmpsb xlat aam fs mov dec xlat lret add scas cli and mov dec fs (bad) lcall fisub dec sbb lret dec pop mov dec cwtl frstor inc push lock inc inc dec testb cli jmp inc int inc inc addps dec out (bad) (bad) (bad) decl push xor addr16 jne ds mov or rorb adc push mov jle pop loop call in xchg xchg (bad) jmp xor sub add lods das insl loope ja pushl jno loop iret out jecxz movsl movsb cmp pop out fcos (bad) (bad) mov in or cmp in paddsb hlt popa call in mov (bad) (bad) call jmp ss imul rcl (bad) (bad) xchg insb sahf call test sti fdivrs (bad) (bad) lcall stc sahf les pop scas jne add dec bnd lock adc or cmc lret sub (bad) (bad) jmp (bad) dec dec fnstcw pusha fdivrs mov fstpt jecxz fidiv mov (bad) (bad) decl fdivl dec in imul test fdivs shlb add mov pushl shl jo shlb pop lds adc pushf xchg daa (bad) fisubrl jle sbb ret int3 ret xchg cmp loop (bad) sti rcl mov lret dec scas test pop lahf enter or icebp int3 inc ljmp int insl inc iret rcl into add nop insl cld ja sub xchg (bad) (bad) (bad) jmp ds xchg fs stos xchg and repnz loopne jo xbegin pushf cmp (bad) decl jns cwtl mov and add dec lcall xor pop pop mov mov sbbb (bad) fildll (bad) mov and (bad) pop push mov sbb int3 push test (bad) (bad) jmp cmp loop mov stos data16 stos movsb outsb stc scas jmp jl sub (bad) (bad) call dec lods outsl lods adc sbbl movsb jne jbe mov inc mov cmp (bad) (bad) incl mov mov jae mov sbb mov cmpsl mov mov fisttpl (bad) mov dec punpckldq xlat and adc dec pop mov xchg pushf xor loopne mov cwtl xor (bad) (bad) (bad) (bad) mov stos or mov mov out (bad) bound xor xlat cmp fwait jl jge dec mov loopne xlat add mov (bad) (bad) (bad) fcomp loopne ja pop arpl push push sbb call adc jno jnp enter cmpsb (bad) jmp inc int outsl es lods jg sub mov xchg rcrb dec call inc mov and xor pop or addr16 xchg shrb in (bad) (bad) call imul in xchg xchg fnstsw loopne iret (bad) dec pop loop (bad) (bad) (bad) (bad) aas ljmp jecxz in fmuls lock mov pop and sub sahf push jg ret decl dec outsl test or rcrb lahf rorb (bad) (bad) (bad) jmp mov lahf xchg sbb daa sub mov inc and (bad) xchg test call cmp ljmp nop mov mov iret push lret (bad) out fidivrl loope ret pusha test jo out pop mov test fistpll ret imul push ret ja imul setl (bad) (bad) (bad) (bad) ljmp fnstcw cwtl cmc cld sar nop out push jle fidivl sbb mov inc sub inc sbb mov cmp jg sarb xchg outsb pop hlt cmp testl call mov xchg pop in mov pusha push or pop xor dec test cmpsb icebp iret mov inc cs (bad) (bad) (bad) mov addr16 daa jo jno dec mov (bad) xorb inc out imul pushf roll (bad) stc (bad) ss jb pop aaa lret pop loope scas dec push incl call mov aaa jg ja out push add inc clc inc daa popf and pop jle js mov xlat scas ljmp clc pushl pop mov in pop mov push in pop inc pop mov in sbb bound and inc loope lcall jo mov nop push stc mov in pop cmp cmp xor or cmp movsb add sub call loopne scas cmc test and mov mov sbb cld (bad) decl dec scas cs add push movsw notl cmp and (bad) push repnz imul cmc xlat jle out rorl ret push jp jmp add rolb mov xor jg (bad) das rclb and stc popa lcall add fsubrs pop loopne adc dec lcall xchg (bad) loope xchg adc (bad) (bad) (bad) dec sub inc andb jne jp adc scas dec jae fwait push movsb icebp (bad) (bad) (bad) jmp out sbb test jbe out push into icebp mov inc lea call mov xchg push xor es jmp fdivs inc mov bound ljmp cmp push mov xchg xchg cltd xor es mov cld mov adc (bad) (bad) (bad) call ja ss adc out mov loopne jbe pop notb dec jmp aaa add ds insb (bad) push and ds inc test jle (bad) (bad) (bad) ljmp cmp es jl mov pop sbb mov repz in test (bad) (bad) (bad) jns adc imul mov jle cmp cltd in (bad) ljmp push outsb xchg cmpsl fidivl sub fisubr sarl lock out (bad) (bad) call sbb ds sti outsb pop sub push addr16 cmpsb int3 mov pop je into inc adc mov push icebp andl cs add adc push lock add or or fistpll cmp or xor cmp or stos push sub push stc aas jns ss pop push or mov dec out sahf out sub insb in sahf out sahf sbb pop fdivrl jns out jl add out and jns adc jns out jb or out sub jns sbb jns out jp push xchg jns out cmpsb data16 out sahf push xchg push (bad) ss sahf out jbe push mov jns out cs outsb out sahf out sahf push sahf pop fidivr mov jle add out and jns adc repz jns cwtl push or dec leave sub repz cltd pop fnstcw repz repz iret repz inc lds iret repz xchg push aad repz repz cmc or iret dec int lods insl in cmp repz popf pop fnstsw mov push sahf out dec add sarl out (bad) xor mov out sahf out jae repz mov sahf out lret sub stos stos out sahf out imul sbb fwait fwait pop pop fstpt out fstpt cmp out jnp sti pop sahf out sahf pop xchg sahf out (bad) daa daa cmpsl cmpsl out sahf out addr16 pop sahf out sahf pop xchg xchg push push xlat jns out xlat aaa aaa mov out sahf out ja (bad) setle jns jg jns out iret das das scas scas out sahf out outsl out out pop sahf out sahf pop lahf lahf pop pop fistpll out fistpll aas mov out jg call iret repz inc push and push xor inc cmp lret sub cmp repz iret repz add and adc repz cmp je (bad) addl (bad) repz ret and mov repz push or out sahf out adc sbb lcall push push jns out push push push add sahf xlat popf out sbb adc arpl jns adc lock pop pop adc add and repnz in pop or add sub mov sub aas ret stos adc adc adc push pop sbb xchg mov inc sbb dec cs cs popa test pop cmp or add (bad) jb repnz adc popa and jb adc lahf scas mov (bad) adc jno sbb aas mov or out or adc out pop ja and sub cmp push pusha jo mov shl add add push fisttp sbb jbe fnstsw sarb pop pusha mov in (bad) adc imul xchg jecxz adc or adc dec arpl sbb ds pop sbbl fcoms call xchg mov and jne cli gs adc into outsb or pop push adc add and (bad) jo sbb ss mov lea aas xor pop cs sub pop mov aas in (bad) jg imul or enter bound popf xchg ljmp push xchg sarb mov std incl mov test fdivrs stc decl jae cmp cmp fdivrp popa mov aas je lds xchg lds enter cmp loope and push decb (bad) mov repz in das (bad) pushl aas xor cld cltd jns lret cmp sahf mov (bad) pushl pop ja xchg int3 xor aas inc pop adc aas loope (bad) sub jmp xchg aas mov fwait ljmp idivb cmp pushf nop jg dec popf mov mov in mov mov jbe jne inc gs mov imul out je sub mov (bad) push inc lahf (bad) call pusha xchg aas aad pop push pop sbb (bad) iret xchg (bad) (bad) pushl bound push das pop pcmpgtw shll mov inc idivb inc lahf enter aaa jg mov (bad) aas mov jg mov mov mov (bad) mov scas jg mov mov mov (bad) aas mov jg mov mov mov (bad) aas mov jg mov fwait lock jg sbb mov push jg aas pushl dec xchg imul aas jmp aas jg adc (bad) mov (bad) jg fs mov mov push fdivrs mov jg mov jmp jno pop push jg inc mov lock jle add mov jg add ret bound (bad) jg sbb add call sub jg test and jg or inc or jg jmp sub jg adc jg dec lods adc or ljmp adc movsl dec loopne push outsl sub fist xor push movsl jecxz (bad) ds cli jp,pt decl sbb nop cmp and mov arpl or insl xor leave in in pop and mov cmpb enter arpl scas xor inc adc pop push mov ret incl jg add (bad) pop adc add sbb dec mov jg das lods out mov mov nop cwtl int out dec test mov iret enter out rcr jg push lock out lods clc pop adc and inc dec lods out push pusha jo nop aam sahf out mov faddp mov push inc pusha aam sahf out mov out fisub push inc pusha andb loopne inc push add jp aam inc push add fisubr fiadd add mov rcl sarb enter sbbb add push (bad) pand push sbb or push push sub aad and pop daa push je push inc push pop sub dec out inc inc fadds dec sub outsl fidivr add inc ljmp dec es in enter push pushf jne outsb inc mov mov arpl inc mov jle mov jns add pop sbb fisttpll inc popa push inc ret xor dec movsl add xchg inc mov loopne mov inc inc popa and dec shrb or cmp inc push push pop add dec shrb pop push movsb lock sbb and push cmp pop jbe adc mov jle test gs dec test pop dec push es sbb fstpt push je mov mov fldt outsl (bad) push ljmp mov es int3 jmp je out jnp ss push cmp inc movsl push jno out in insl enter mov add cwtl in xchg pop jb xor jo in adc imul imul call shrb jnp sub (bad) das int3 out nopl jb inc xchg push add shl pushf pushf pushf int scas xadd or fsubl inc fsubr pop movsb (bad) cmpb jnp pop ds jmp lods (bad) cmp cmpb and repnz add enter push dec in jmp cltd enter add dec pop and call shr lods xchg andb fucomi cmp sbb hlt out shr in leave lods mov addr16 das int pop lret and psrad scas rcrl mov (bad) rolb jbe pop and add (bad) jb jb lods rorb in cmp nopl add in jbe enter scas inc xchg add in in in pusha pop inc subb in sti jecxz loop das pop mov fucomi jbe outsl pop cmpl mov xchg xchg cmp loopne outsb daa addr16 mov sahf rorb jae pop dec xor jnp mov mul pavgw inc mov aas fucomi in orl pop xchg mov xchg xor loopne mov xchg in inc fneni(8087 dec das mov (bad) jae popf pushf fsubrl push outsl inc xor add pusha mov aam pop xor shlb std xchg div flds sahf cmp mov xor adc fs aas inc push xchg xchg bound mov xlat pop (bad) out dec xchg dec pop mov jo cmp pop sbbb lods aas or (bad) std (bad) sti lret orl mov in das xchg xchg pop dec pop test aas push (bad) (bad) incb cs adc push clc dec push aas test xor mov pusha and inc (bad) idiv out call mov es call loope jb aas pop mov mov rorb xlat mov aas push add xor (bad) fadd aas dec je stos mov jg lcall scas daa jp ret aas mov gs mov dec push jbe pop aas (bad) mov lahf ret dec push pusha nop fs rol push lds js movsb out (bad) pop (bad) aas clc out pop ljmp dec enter mov rcrl mov push mov aas adc push rorl add iret lret xchg mov (bad) mov adc or mov (bad) (bad) stc dec int sub std jg mov sub aas repnz jle jecxz mov (bad) (bad) aaa push data16 mov push ss js aas add or icebp cmp mov jle inc nopl ja lods mov stc add adc movsl inc sarb pop aam call xchg lods push (bad) push loopne push ds cmc xor push xchg mov fdivp aaa dec clc sti jecxz rcll dec pop pop inc test fdivrp sti dec sbb fwait inc push rcrb mov add int adc pop sub mov cmpl addb ljmp lahf dec jae jle (bad) aas les and mov out xchg daa loop clc cmpl dec xor xlat pop outsb (bad) xor mov mov fdivrs jbe lret add cmp fbstp push call rcrl fnstcw addr16 mul ds std sahf mov (bad) mov or xor pop mov fnstenv dec jle mov mov nop xor sarb sti (bad) ds gs fstpt pusha pop sahf or dec pop js jle push and or imul outsb mov incb inc xor push aaa loop pop add and cltd fnstsw add call push (bad) mov or in sub loop lock aas loope mov pop jg in or add inc inc (bad) mov cli adc sub je aaa cli negb xchg flds sahf insb std push popf imul cmp jns test dec out pop daa ds pop (bad) notb sbbb or js mov pop iret push push rcrl push (bad) pop jg adc push pop push xorb rolb dec aaa jg insl mov (bad) inc rcl sbb lret je aaa (bad) int addb pop pop push and push pop add insb ljmp mov jno add sti add push sub pop mov push mov xor sahf xor mov cmc fwait mov mov adc fistl insl mov lcall outsb push push and push cmp jg ljmp or sbb ds and lea and outsb xor enter fistpll add inc aaa inc lahf div xor inc or mov inc inc stos out lret (bad) mov pop sub push call fildll jb mov (bad) incb xchg (bad) (bad) mov dec push aas sahf out mov divb cltd imul out xor sbb lahf idiv mov call mov insl repz and push xor lcall jg jnp mov call pop push in popf sarl push jg repz mov sub xor or mov outsl (bad) xor aaa xor xchg mov or jle outsl mov (bad) shlb mov (bad) xor stos (bad) sti lea push and aas cmp sti sarb lods sub in mov push mov movl push inc in enter clc incl stos pop iret mov jbe cmp xchg mov ss std push ljmp push lods int or (bad) mov ds cmp xchg in cmc add push loopne sbb cmp daa cmp es (bad) std (bad) sti pop jmp mov mov outsb xchg inc jle loop jge mov add push arpl inc ds or pop repnz and aad mov inc push jg mov out (bad) push insl cmpb out lcall inc mov pusha xor mov and ljmp and aaa or incl hlt sahf jo xchg mov mov mov mov inc push loopne push stc ret aaa (bad) mov mov pusha je repz jecxz xor mov push mov mov mov in sar jg mov cwtl fimul push pop or xorl mov xchg xchg mov (bad) mov pop in js mov sbb cli (bad) mov mov stos lret adc mov mov daa aaa (bad) stc add xchg aam (bad) stos idivl cmp mov clc or push add stos xor ljmp pop adc inc jmp mov xchg sub mov dec sbb pop iret jne mov sbbl mov dec pop fdivr test mov int3 scas jmp (bad) hlt (bad) jg push inc lods mov cmp cmp stos mov data16 out clc push lahf (bad) sar cmpsl sahf push scas repnz xor (bad) jg push test jg mov inc inc sub movsl dec (bad) mov pop or inc pop shr sbb sub jp cmc jmp (bad) jge xchg mov icebp add or aas jecxz mov lods mov pop sub mov (bad) jmp dec fiadd js les ja jmp mov (bad) inc (bad) out pushf pushf pushf int3 paddd cld sti pushf pushf pushf pushf cli stc clc negl hlt repz pushf pushf pushf repnz lock pushf pushf pushf pushf out in in jmp pushf pushf pushf ljmp pushf out in pushf pushf pushf pushf loop loopne pushf pushf pushf pushf (bad) (bad) pushf pushf pushf pushf fcmovu fcom pushf pushf pushf pushf (bad) aad rorl dec mov dec dec dec dec into int lret dec dec dec dec lret (bad) dec dec dec dec mov ret cmp out adc rdpmc jae repnz inc aas (bad) daa daa daa push push push push daa daa daa daa or daa daa daa or or daa daa daa daa or or daa daa daa daa or or daa daa daa daa or or daa daa daa daa or or daa daa daa daa pop pop pop pop daa daa daa daa push push push push daa daa daa daa add daa daa daa add add daa daa daa daa add add daa daa daa daa add add pushf fsubl daa add inc add cmovo mov cmpb ljmp push and push popa xor or and xor cld sar xor sbb push or xor pop cmp mov aaa movsl inc aas xchg daa popa dec aas lret dec imul sub out pop bound xor leave cwtl push aas sub lods sub jp adc push aas mov dec test mov aas in adc xchg mov inc jo mov lcall mov cli (bad) hlt inc es or jg fild loopne (bad) out dec or fildll inc push clc jmp mulb sbb mov and (bad) cld jmp cli lahf push nop pop dec pusha xor aas xor cli pushl jle aam dec gs xor mov jmp inc divb sbb xor ja (bad) (bad) pop mov dec push mov mov imul mov fist (bad) mov andb (bad) mov xchg in int3 mov sar fnstsw (bad) jns stc insl aas ds jl cmp mov fwait imul adc mov sti incl outsb jo jp add or sub sti fistpl cmc push incb pusha loope xchg xchg jge pop add pop call cli mov aas mov fnstcw push fstp push jae mov (bad) out aad mov je sub lock (bad) push out in ja in (bad) mov mov push enter pop in xor xor or and jbe out adc test xor inc pop jg incl pop dec sbb stos ja jno inc orb gs xor pop or pop push pop mov push jns repz jg lds mov cmp adc and sub int fnstsw scas clc and fs pop roll ss jnp jg (bad) rcrb mov jl ja xor mov dec mov mov sub ja ficomp sahf and out fild jns jle jl les pop sbb jecxz or mov aas test mov pop mov sti sbb xor sbb dec pop lret cmp push cmp (bad) je int mov js dec push xor push and (bad) (bad) cld mov cmpl aaa ret and shll mov data16 call mov cld test inc (bad) fidivr sub and or fild adc jmp inc push fadds fwait mov call loope aam adc cmp cmp out mov outsl lock out hlt negl mov jecxz test cli repnz clc aad dec push clc rcr cld stc fwait jb jno out daa cmp jle iret mov cld nop push aaa pop daa aam test out aaa (bad) mov and xor aam inc lret in ret (bad) aas bound out (bad) repnz inc sbb fiadd aas daa stos xor stc repz imul mov jle incl pop int3 xchg lret mov mov aaa jle pushf inc iret push push gs insb cli sbb loopne aaa jg hlt (bad) cmc jne lret (bad) cld dec push mov cltd jl mov (bad) mov aam mov inc dec jbe cmc jg int3 shl je push daa movsl jno and roll std adc mov int push stos fwait jbe and dec insb mov enter addl inc cwtl data16 jno jle (bad) aaa test cld int sub aaa mov add lcall (bad) mov loope sub lea jbe dec ror cld mov enter jo call fwait mov test xor int3 jp outsl out fucom or mov push jo add psubq push xchg or pop stc int dec loopne inc xor das xor sbb outsl mov adc or mov xor outsb pop adc inc mov inc xchg popa xor add ds clc ljmp and rclb mov (bad) mov mov cld sub insb mov repnz push push es sbb push dec cltd dec call mov dec mov cmp test mov rcrl cld pop push movsl lock int and dec popa cmp fldcw sbb (bad) (bad) imul inc cmp dec mov jge sbb in and lea lcall fiadd jnp push mov (bad) mov adc sahf sbb loop gs mov inc fwait mov mov fs mov xor push ret push ljmp mov sbb pop inc stos fnstenv mov xor pop int dec (bad) clc (bad) jnp bound mov sbb cld cs jb jge sahf pop mov mov sahf jb idivl cmp xlat push xchg pusha mov movsl push jg jecxz mov out (bad) out pop (bad) jbe ljmp inc pop mov mov (bad) decl sbb pop mov mov pop mov iret clc mov sahf and pop ds lock sbbl fdivs mov adc sbb dec std mov push push mov insb std lock pop nop inc imul or lock add jl call push dec push add inc inc scas fs ljmp jmp mov into xor repz andb dec mov inc aaa (bad) (bad) mov (bad) dec mov mov dec pop das (bad) adc sarl cmc or out (bad) ffree push mov inc mov lea aas inc fldenv mov inc repnz stos js cmp sub ss ljmp icebp and mov add inc in lahf icebp mov dec xor pushf dec sub cmp pop adc adc mov fimul xchg dec mov sub push (bad) scas outsb aas inc inc adc xchg mov cmovo addb mov leave inc ds cmp jb fisttpll dec aaa outsl ss xor in jb xor cs outsb mov leave sub sub daa jb fisttpll dec and and and in jb push outsl sbb fcmovne sbb dec pop outsl push pop adc fmull adc outsl adc in jbe mov or pop outsb mov leave pop push dec add hlt dec dec add adc std punpckhwd mov stc mov fcmovnu rorb xor cmc repz repnz pushf fsubrl lock out in in jbe cmp call fucomi in jecxz loop dec fistp ficomp (bad) fnstenv cmp aad dec mov fucomi shrb pop iret into dec int3 popf pushf fsubrl lret pop leave enter cmp ret mov fucomi mov mov fsubrl mov jbe cmp scas scas dec mov fucomi lods outsl stos pop stos test cmpsl popf pushf fsubrl movsl pop movsb mov mov popf fwait dec mov fucomi lcall xchg sahf pushf fsubrl xchg pop xchg nop mov fucomi cmovo mov inc das mov outsb outsl xchg popf cmovo mov dec outsl cltd aas cwtl daa mov xchg cwtl xchg xchg das xchg xchg pushf fsubrl xchg outsl xchg aas xchg xchg mov nop nop das (bad) in cmp mov in in mov leave leave mov xchg daa daa daa test outsb das (bad) orl cmp inc jge mov fnsetpm(287 jl inc jnp jp jns daa daa daa jns ja fisttpll outsb das jbe je je cmp mov pand in inc jo outsl cmovo daa daa daa mov aas insb insb imul dec outsb das push push cmp fs jb cmp bound leave leave leave in inc popa aas pusha pop pop xchg xchg fcmovne pop pop das pop pop dec dec outsb mov outsl pop aas pop pop pop pushf fmull push push das push push jb jnp cmovo push mov in insl cmovo push cmovo outsb mov outsl dec aas dec dec dec pushf fmull dec dec das dec dec add mov dec outsl cmovo sub mov lcall call mov ds in push out pop sarl push mov mov ds (bad) pop dec dec sbb pop mov add mov mov dec es push addr16 lahf push daa jg ds ficoml (bad) out sub sti inc pop fadds std es stc dec js add (bad) out mov fidivr les dec or in ds jns mov scas cld mov ds subl mov sar mov or or mov inc hlt xchg scas cld mov sti inc pop pusha or cmc bound inc cwtl or (bad) dec nop cli (bad) mov mov pushl ds loope into fmuls int3 push add ds mov inc fist andb push es adc cld loopne,pt or mov jle inc (bad) ds insb xchg jb jg push rclb and xor mov cmp iret pop push decb jle mov mov and adc es add lea and pop xadd inc mov jg fistpll add inc jbe aaa stc xchg xor in inc add jno xlat ficomp loope insl sub adc and idiv idivl adc add and pusha push aas jmp cld loop or mov and aas xor cltd or xchg sbb jecxz jb hlt sti mov push sub orb sub dec addr16 mov pop jl inc or mov jb add aas fcomi jae int (bad) mov pop sub rclb inc push imul aad test pop and or ret outsl out (bad) out jo pusha jno pop dec and cld bnd not pop pushl pushl mov mov aam inc push aas iret jmp pop test inc sub (bad) daa push lock fisubr sarb cld data16 xor mov mov push push add outsb jnp jae outsl out pop fist nop out addr16 and lock or pop (bad) mov sahf cmp pop call mov cmp xorl adc aas or jg in mov sbb push leave pop dec xchg push lcall fwait rol jg mov rcrb and aas aam adc repnz jmp aas adc xorb sub add and ror ljmp mov or adc jl aaa pop and das aaa push (bad) out and pop mov dec sbb ds lock daa xor push adc sahf sub pop mov sub mov add aas mov mov (bad) mov test pusha ja push xor add cld sub inc out mov adc dec cmp adc aas and outsl scas cld shll (bad) add mov sub pop ds xor lods (bad) push stc clc sbb sbb (bad) mov int jg xor push bound add std int inc cmp lds cmpsl test (bad) or aas data16 inc sbb sub cmp (bad) movsl sbb fnstcw inc pop (bad) loop mov daa cmp sbb int3 jnp fisub dec pop loope mov (bad) jg orb pop iret rcrb movsl jmp add inc jo jae outsl push cld jnp scas and dec out sar stos out cmc or lret mov and mov jne and cmp inc xor push dec imul insb dec loopne cmc outsl mov jl mov aas dec push and mov jmp fcmove pop push (bad) out test fmuls xor add dec into dec push clc int lcall aas or daa mov push mov inc scas mov jbe add jle or cli inc pop jle int3 fnstsw lcall sub mov aad (bad) cmp push or std out fist aas jmp rorl scas sub dec mov cld aas mov xor shrb cwtl push divl push (bad) fcmove and xor lods mov adc jo in xor push nop and fucomip (bad) aad aas mov and lahf or push push repz adc out (bad) out push inc cs jne inc cmp ss imul xor jae aaa fsubrs cmpsb push mov or aas mov and std in mull and cmp mov pop js jns inc jg cmp in push mov ficompl push jne in jecxz inc out outsl scas or fdivl adc lock (bad) std add inc sub ss aas and sahf daa pushf xchg loope fisttp outsl push xor push test js dec jge add dec out in fwait sub test mov pop pop inc fdivr scas or sbb mov aas push lods popf lret ja jb aas rolb xchg xor sbbl mov pusha push push cmp pop stc fwait nop loope fsubrl dec rolb (bad) out ret dec call cmp cmp mov pop movsl push ja dec pop sahf dec dec mov fldt add cmpl inc repnz pop push pop cmp cmp rcrb xor cmp mov jg push add aas jle dec jl or xor lock sub les test pop repz ret dec outsl mov pop mov sbb dec lahf pop mov enter in adc adc or pop adc out movhps movsb lret into rcr push mov insl mov mov mov pop or (bad) std out ffreep sbb push movsb (bad) xor aam mov (bad) call aad push mov fs xor call adc jg in sbb ljmp ficompl stc fwait lahf jno sbb push test mov or and fnstcw adc int dec mov fstps xor and (bad) std jmp (bad) adc dec xchg pushf cmp inc pop rcr mov inc push (bad) out test fisttpl inc lret adc fcompl stc stc aaa lea clc mov xchg mov (bad) mov call mov pop ret sbb outsl scas cld andl mov dec fwait sub sub cmp dec ds fisttp ja (bad) div pop push (bad) ljmp pop push movsl nop xchg sub or out cld int call mov jl sbb sbb inc jae outsl scas inc loop dec and test pop cmp loop negl xor je das loope cli mov (bad) neg jecxz push lock and ljmp adc loopne in dec (bad) shrb out (bad) (bad) jle xchg in push push adc je and dec push adc mov ret loope out test mov mov jg std (bad) or push stos cmp jl xor int3 out (bad) out fild sub add adc call sbb xor repnz push mov outsl int ljmp aas test xchg mov mov cs std (bad) jmp push cmp aam movswl push or add (bad) pop mov pop mov dec or jle cmp jg mov xor sub pop push cmpsb and cs inc push mov sti mov jge xor (bad) xor and std jbe xor iret stc aas sub lahf push loopne test mov push fstpt popf andl jle in (bad) or xchg ffreep scas xchg dec cld fdivrl or lock aaa pop call lods xor pop rcr mov fistpll (bad) rcr add pop adc pop inc icebp call decl mov xchg jg cmpsb test dec mov repnz mov push sahf push xchg call or mov decl mov (bad) mov cld int lahf inc clc mov std movb aas push xor push in or out fbstp sub cld mulb out push test dec mov jle (bad) mov lods (bad) sbb js sbb pop int mov dec popf (bad) jbe sbb call (bad) sti push cwtl fisttpll jg jmp mov push (bad) jbe pop jb pop jle mov cmc out fildll jmp add sbb dec fcmovnu outsl out pop loopne lahf jno adc (bad) jg in aas push cmp sti out clc cmc xchg push scas movsl lahf inc xchg add fmull cmp mov dec xchg fldl shll pop out aas subl stos jnp bound add fild mov lods jbe cmpsb out mov fstps cmp push inc clc push (bad) (bad) mov loop mov push inc fiaddl pop (bad) (bad) call add repnz mov or dec int mov push or push repz adc inc mov add xchg repz and imul hlt lahf cmp pop fdivs aas stos call outsl sub stc xchg pop pop ljmp and xchg push adc (bad) mov jp cmp pop aas push push push test or das js dec aas push (bad) std mov loopne or (bad) lcall inc out mov mov cmp in incl adc add (bad) sti mov int jg pop mov mov enter icebp call outsl jg stc mov inc call push sbb xchg xchg mov sti jmp jg mov (bad) repz mov repnz out das cwtl inc pop lods hlt push mov xlat push dec push xchg mov lret sub cmc mov mov iret test fistp xchg idiv hlt mov sub aas inc xchg cmpb mov pop idivl mov fldl2t pop cmp repnz rcr clc mov sbb push push in incl push pop pop test scas cld int aas idivb cmp cli jg mov or sub cs sub jg mov and mov aam ror lcall mov jo mov clc (bad) jmp insl fnstsw adc xor mov out decl stc jg mov lock push dec jmp out pop xor xor sti jg mov shr pop (bad) lcall jecxz push jmp xor jmp mov outsl out (bad) out xor inc aas cld jg mov stos sahf cmp pusha lock fdivr movsl cmp jle lret sti adc jl lock push pop jle mov mov (bad) sti outsl mov in sarb lock cmp ss (bad) sarb out fistp lret mov repnz push cmp (bad) mov loope pop and (bad) (bad) in std xchg (bad) adc shlb push mov pop push aas add jnp push cmpsl push push mov mov (bad) (bad) jg aas push mov les out push fs cmpsb ret jns arpl xor scas mov inc imul stc (bad) in ja xor push push mov mov cmp xorb sub aaa (bad) mov adcl call ja sbb nop mov cld jmp (bad) mov gs movsb loop lea neg sub es loop mov mov push incl outsl jmp xor lret push xor dec xchg cmp mov insb pop mov (bad) (bad) popa fmull cmpsb cwtl testb xchg int3 push jno loop fcompl nop cmp shrl jg (bad) xor jecxz jnp daa pop cmp sbb (bad) scas data16 jnp dec (bad) int (bad) (bad) in fwait imul icebp aas cmp xchg mov mov stc jmp push mov lcall das xchg pop mov int3 pop push or (bad) cmp push jge mov jg call mov ljmp seta and xchg mov pop mov in dec jnp pop mov pop add loopne pop imulb xor stos aaa (bad) mov xchg cmp mov cmp frndint and mov in add bound test jne ds mov jle fdivrl dec pop push in movsl xchg xchg jle (bad) cmp outsb jp push jb mov incl cltd cmp cmpsb mov into push movsb hlt push push rorl sti jl gs imul inc cltd xor loope test (bad) mov mov dec lcall sahf push adc movsb xchg (bad) sarb push mov or or or cmpsb test aam fistl sahf push das ds add aad bswap jno adc push repz hlt jle outsb mov cld jo push jl sbb push sarb lcall push movsl pop test daa xchg cmp lahf xchg pop lds inc dec pop out pop mov mov test repz inc mov fadds insl scas mov mov sahf mov (bad) jp jmp ss mov sub aaa mov mov xor dec cmpsb fidivr ficomp lods add cli (bad) (bad) ljmp repz push stc and xchg mov or hlt aas js xor repz mov fldt cwtl jns jecxz (bad) pop sub dec push iret cmp repz out add fwait dec cmp add mov xchg pushf cmp cmp mov xchg mov nop mov (bad) jae rcl lock repz inc daa sub aad mov scas xchg inc push or (bad) cltd mov push xor mov sub jbe stc push fcomip pop jmp push pop rorb mov mov push cmc sahf xchg mov das push (bad) mov sub lods ficomp setb movsb push fstpt in out pushf push mov inc outsl ds sbb std (bad) out push cld notb out lcall dec fldl stos ds incl repz dec xor mov leave imul call imulb pop out xor cmpsb push or jbe loope idivb inc ficom outsl mov sahf test mov and xchg mov jle andl fwait rol ret int3 mov xor outsl mov (bad) and push xor xchg mov mov cmp fs mov int3 adc jne rcrb or addr16 mov aaa pushl das sbb mov stos mov scas cli fldt test (bad) push xchg pop in call lcall idivl cltd jp xchg sbbl aas cmp gs fldcw ds addr16 push jmp push shrl (bad) and xchg loope pop nop fimul sbbb push add mov push pop push jae mov out ja test stc dec in rcl push rorl cmp dec iret ss jns mov (bad) pushl adc ds daa add aas sub xchg mov mov and std aam dec popf mov push sti (bad) fldt clc int mov xchg inc fldcw mov (bad) lahf mov jle mov (bad) mov mov repz (bad) push (bad) in aaa cld es xchg jmp push xor push stos jecxz xor jo ss (bad) fildl push insb xchg jecxz adc test call aas and pop jns,pn fsubp (bad) aaa aaa push mov pop addr16 outsl (bad) jg push enter push cmp movsl xchg jl jbe push dec ficomp sbb repz pop mov mov mov mov (bad) xchg les mov jl cmp sbb push mov jg dec out lret cmp in jnp or pop aad pop dec pop mov xor push stos ss pop xor and neg add loope (bad) fldt mov sahf jns (bad) arpl lret stos jle sbb push imul leave cli (bad) jp in pop std not mov insb out xor jle rcrl lahf call (bad) dec pop xor mov lea pop push sti aas and orb sti adc (bad) (bad) test pop andb pop in jb jecxz mov jle outsl (bad) mov jbe cmp dec push mov push pop aam cs sar mov push int3 push test fldt cli sahf sub or xlat pop ret jb imul std adc mov ljmp push jnp jle cmpl push or or fidivl inc jle rcll icebp addr16 mov das shrb cmp out xchg insl (bad) push inc pop orb jle nop out fdivl mov fisttpl ror add cli ret pop push or push jb (bad) (bad) mov (bad) jl pop dec sub jp inc aaa fidivrl fcomip fildl popf jno dec pop xchg push aaa pop lds loopne add ds or jecxz push call push ds scas fistpll xor add test imul add and jle add lock ficompl pop fwait jnp xchg cld push pop dec sbb movsl add pop sub (bad) push adc andl in dec push mov cs push (bad) int3 test cmp dec (bad) sti push jp fldt loope or and jle nop movsb mov sub xor (bad) mov lods adc fdivrl pop popa out sbb push mov movsb mov popf cmp mov mov jmp or cmp inc outsb pop jbe push mov jle outsl mov lods std jnp or mov shll push xchg movsl repz dec xchg jno sub shl jns xchg je inc or and inc (bad) orl test insb andl out (bad) jg (bad) fcoms mov imul cmpl lds add and clc popa lcall lahf jg (bad) (bad) incl pop mov in outsl mov or cmc xchg cmp push ret scas frstor sub imul outsl sbb sbb mov xor loope out mov jecxz adc cld pop out adc push add lahf ret and mov push or mov shrb xchg mov jmp lahf fist cmp push xor mov lock rol or push (bad) xlat insl or mov std sti scas push push (bad) fidivr aaa movsb push call fcompl popa mov xor dec pop mov pop std fnop nop and aas cmp push cmp fild jl jge mov adc movsb jle fwait outsl (bad) imul or repnz sbb or xor scas inc lods lret cmpsl daa dec push aaa fistpll and orl enter and int jl mov lret insb xchg mov bound iret (bad) aaa jg (bad) stos fmul add cmpsl movaps mov pop negb out loope daa out int3 pusha data16 add push (bad) mov fwait outsl (bad) out lcall push ret in outsl pop (bad) out lahf notl mov cmp xchg in adc lds jg xor imul idivb sub movlps (bad) rcrb cli es jmp repz stos stc int3 (bad) mov int3 push scas adc outsb adc fnstcw fwait mov pop push xor in mov and test (bad) std fcmovnbe sbb icebp add in push (bad) xchg cmp fsubrl add sub mov lds int loopne jmp push call popw fadds movsl (bad) int sub lods leave fnstenv ljmp mov scas insl sub out xorl push repz jg stc out inc ficomp cmp das subl push (bad) jg mov push inc je mov or test (bad) imul fwait outsl xchg lahf sahf add and and sbb mov jg inc in mov outsb dec mov aas sti out inc mov lock mov cvtps2pi mov adc aaa (bad) int insl imul mov jecxz int jl sub cli mov aaa dec sub pop pop inc mov jg idiv shrl cs adc nop fxtract outsb push fistl lea in cld int (bad) ficom scas (bad) mov aam pushf in out ret out outsl jmp aaa push and xchg jle in sub test mov out loope push adc mov loop mov pop outsl mov add sbb push test (bad) jmp cwtl lock xchg inc sbb daa nop add cli roll dec mov pop jb jl aaa shr scas inc int3 add jae ds mov jmp jg int in ja mov xchg outsb daa and loopne xor xor adc aaa fstps cmpsb je,pt push sub (bad) out xlat ret in mov inc push (bad) cmp push adc push push push ljmp rcrb outsl mov out rcrl xor clc test lods and out mov push lods adc inc adc or dec sahf out pushf in int outsl (bad) pop js int3 in lock pusha das sub clc mov and fmulp aaa jg mov (bad) insl (bad) ja subl mov inc sar insb pop pop add push mov outsl sbb jnp movsl das ret test sbb out dec outsl mov sbb pop sub cld mov sbb xchg fwait mov mov icebp idivl hlt mov mov add mov and add (bad) xor and push (bad) jl stc addr16 add cltd mov ja mov dec decl jle cs stos hlt dec mov (bad) sub dec ja les in xchg loop call incb dec or fwait mov out mov jecxz push mov repz jbe pop cld out cli imull and cmp aas stc fwait outsl pop push aas and xchg mov inc lods loope push jecxz in fildll or js inc enter call aam sar clc inc stc call popf repz or sbbb jl aaa fistp out jmp lcall sbb repz fxch std popa inc cmp out mov jmp xchg sarl aaa mov mov sbb (bad) loop test push test mov ret fwait (bad) (bad) dec xchg test hlt rcl (bad) add aas stc (bad) (bad) or fwait outsl (bad) out sub adc mov sar or push xchg out mov sub mov mov enter ljmp leave aas aad shll or pop push sub jl dec aaa cmp (bad) das mov lods pop movsb (bad) add sahf dec pop loop push push cmp aam repnz aad outsl mov aas out push insl sbb iret push bound stos push dec xor fildll stc fs daa cmpsb hlt or mov rolb sahf adc icebp scas sti in dec and push fs jle aas xchg adc repz pop ficom push js (bad) pop bound out and jl sbb lea outsb ljmp add loope jecxz popa test mov movsb sbb stc fwait outsl mov dec cmp push popa loopne cmp mov jecxz fildll inc int3 xchg fstps inc jle dec jne ficomp and (bad) (bad) sti push xchg ret sbbb bound sub mov xchg pop loope push rclb loop fistpll inc scas cmp mov sti out leave lahf mov push (bad) jle int jmp in push push fisttpl imul push mov (bad) insl ret sarb pop imul mov loope fisubr stos fistpll and fcmove cltd outsb sarl pop lret in jmp mov (bad) mov movsb mov outsl sbb shrl mov mov mov push lock (bad) idivl sbb sahf ljmp cld repz jle hlt outsl js,pn fcoml fs scas adc sbb mov lods out mov lret jg and push bound into and (bad) lock inc or popa roll lar mov mov sarl add or push dec mov outsl mov bound cwtl das mov je ds rcrl mov adc push popa jmp int3 (bad) xlat pop mov sub popa fisttpll scas gs xchg mov adc sti das cli sbb data16 add mov insl push xor (bad) int sbb jp scas out mov sub out call aas loop pop mov pop repz imulb loopne push jmp or shrl jle jns adc daa cwtl cmp bnd add xchg cmp mov mov aas xchg add ret std sti in fistpll paddsb call fstpt inc cli imul push cmpsl and or lcall roll ret stc idiv pop pop ss lcall fsubrl (bad) pop xchg mov mov add clc xor push lea sub sub scas adc (bad) incb es aas lret or cmp (bad) xor (bad) cmc mov push jp add xchg push mov mov daa and (bad) cmp add test in fbstp fucom cli pop xlat aam repz pushf lods mov jae push push cmc mov clc mov inc aas or test insl mov (bad) (bad) cmpb sbb lock fdivrs arpl insb mov outsl inc nopl iret jae cmp repz rorb jge push inc out insb test hlt fwait outsl (bad) jg mov aas icebp (bad) xchg sub (bad) leave xchg out mov jnp call fmull std mov and rol cli jmp ret sbb call pop loopne mov jle fimul inc pop imulb outsl push mov loop mov or mov cld cmp adc inc fidivr or sub or lcall das fstpt inc mov jg jne ja jne mov jmp nop or xchg (bad) jg fdivr mov adc add aas dec jo add roll inc and pop clc in pushf jp push and jge ja (bad) aam or nop push mov stos subb hlt xlat push sbb add mov mov push frstor jns bound jle push fild pop sub and repz cmpsb lods lods push xor sahf lods idiv push loope test hlt cmpsb mov jle hlt push pop outsl in outsb in cmpsb inc fdivrp cld test sub ds add cmpsl mov test dec fcmovne push in lret fidivrl mov mov pop and (bad) int (bad) aas mov jp fadds xchg sub cwtl pop cmpsl (bad) cltd out (bad) mov fidivr push jns push ds addr16 adc fistp or push shll (bad) bound lcall mov cltd mov fisubrl xchg inc push dec inc mov out sbb cmp pop inc pop sti mov fild push inc outsb dec int pop in sbb mov jnp fwait jp jo sbb push call mov icebp mov aaa (bad) or push rcrb loope jnp mov loopne aam sahf data16 lahf imul imul movsl fistpll cs mov notb loop push or xor push insb pop loopne pop fistpll push int3 and pushf imul stos mov push jle int sbb jne mov das mov inc jecxz adc mov mov and out aas push imul cmpsb cmp jg call jle xor aas pop pop cmp icebp in sbb push push mov test popf mov iret push xchg inc in mov jbe std jmp aaa (bad) insb and aas push push ss in sbb test les lock outsl (bad) sub aad fildl stc or rol (bad) shll (bad) jg cli outsl movsb push fidivrl (bad) out imul fistpll mov sbb fs push fidivr aaa enter cmpsb adc sbb je in push outsl dec sbb js push cmc test mov rcr add insl dec test push jmp ds pop ljmp jle mov mov add (bad) jne rcrb xchg imul pop inc dec sub mov push sbb pop ret cmp aaa jg cmc xor fdivrp cmpsl pop std mov sub insl out or sti jge pop sarb jg gs xor pop dec nop in scas jle push mov xchg cmc pop outsl sbb push add adc repz or js clc jne das jb sahf cld iret mov std loopne ds mov push das xchg repz jae in aas push push es pop jg fisubl shrb jg stos fistp or loop hlt in jbe sbb stc out aaa ss mov dec in aas repnz adc and fisttpl push adc sarb ja and and aas rclb cwtl outsl das loopne push in push (bad) mov lods nop call (bad) scas mov inc xchg mov adc push call (bad) jb bnd adc cmpsb incb (bad) (bad) pop std (bad) fdivrp sub adc cmp sbb mov mov jno jno ds push fisubr sti cli mull call aaa popa repnz push adc (bad) mov mov jmp std mov popf mov cli (bad) popl push (bad) adc cld mov lret ds in sub scas sub xchg pop movsb aaa (bad) stc out (bad) in dec (bad) lock mov jno lahf lds aaa (bad) stc out fsubrp das js bound mov mov in jne aaa mov sub pop sub in jnp mov stc iret xor cld cmc mov out repz xor xchg mov ret pop mov lea xor loopne div stos mov ret loop adc or repz push dec int pop loope sbb scas mov fcomip fwait (bad) jl or push cmp jae (bad) fwait (bad) jl xchg movsl cmpsl or fdivrl add lahf outsl jle popf cs fcmovbe pop int add fyl2xp1 int jle push dec jae les push test xchg jp dec fcmovnbe stos mov adc jnp dec sub into ret mov push push xchg sub mov out lock loop std scas inc pop rorl (bad) sub push rcll scas aaa mov inc mov jg pop lock adc cld out mov or lret xchg div lahf outsl jle mov in xchg popa xchg enter lret push pop in stc push pushf and insb and push fwait outsl mov sbb xor inc outsl or repz movswl push xor inc ror and rorb dec sbb mov xor mov fwait mov sbb fwait mov pop mov lcall daa fdivl mov xchg loope push mov mov stos xor es pop idiv cmp test sbb scas jno push repz fisttp movsb push jbe add fwait mov and sub jle mov scas jae lret sbb or int sub push push lahf mov repz or push fstpt shrl inc clc mov add push mov xor sub jl rcr pushf insl mov dec xorb cmp dec inc sbb push cwtl dec faddl jl out mov xor sbb jge jbe sahf dec jl jae in fistp faddp push push cmp sahf pop or cs push je loopne pop push out mov stc out aad (bad) arpl push xor mov (bad) push adc imul pop mov push adc push outsl mov outsl cmpsb loope pop mov mov loop fistl xchg int dec jnp mov int aaa xor repnz push jl (bad) test cmp lock out mov bound xchg cmpl in xor repz push lea xor aad (bad) sub cmp fbstp dec fsts sub repz and mov outsl jle mov push pop movsb jecxz and les adc stc outsl popa jns adc adc leave sbb pushf mov pop push or out cmp int (bad) and push scas repnz add out lret lock out aaa mov clc cmp mov or xchg out (bad) out enter mov mov push imul mov add cmp pop xor pop xchg push (bad) jo jle mov sub dec sbb inc out mov popf aaa mov lahf daa mov scas mov cld out xchg push inc adc jg inc cmp pop jne pop out mov push sub (bad) jno or lds stc in dec sub repz push inc pop ret aas jmp pop aaa fidiv cld out sbb push sahf lcall push es repz mov adc fsubrp push mov xor in ds mov out push stc cmp fsub inc rcrb mov lahf out dec (bad) bswap and gs jle inc aad mov inc push pushl jecxz xchg sub xor push mov jp add aam outsb mov or sbbl xchg inc mov aaa outsl push pushf jae ss icebp out add sbb mov repz sbb int3 test mov xlat sti in cld out scas sub adc adcb xlat or into jle fistp mov fldcw out sahf mov je xor mov int3 shrb jle movsl mov and std out adc pop jl mov ss mov cmp fisttp ss in xchg sub sbb add and mov or (bad) (bad) sub push icebp lret dec sub jp mov in cmp out inc jl mov jl jle loop xchg stos push jg fist xor push jo aaa or bound fucomip stc int (bad) aas inc cli xor jae dec sarb enter stos fnstsw mov into xor dec test jne (bad) insl sarl (bad) push decb hlt cmpsl push mov push loope mov xchg inc xor sahf stos movsl and loope cs test xchg jge insb ja sbb (bad) cmp inc into aaa pop cmp or and mov outsl mov gs sub push jp inc push or (bad) mov xchg cmpsl mov push (bad) push add loopne outsb mov in enter int3 push daa dec mov (bad) gs push sub inc (bad) out (bad) mov in fwait and sbb shlb mov clc fwait add test jns jl push push sahf ss jmp and pop jns dec shl aas mov mov std (bad) mov pop fprem fwait sub push fcmovb out loop repz jp fcomps sarb push popf scas xor cmp fs push lods call loopne rclb xchg mov mov mov outsb fistpll mov (bad) sub fidivr mulb aas cli add aas stos lea xchg fstpt sub mov loopne sar das cwtl push ret cs xor and pop mov aas or mov push andl mov (bad) rorb jmp sbb sar add or pop mov lock sub add adc mov aas arpl mov lcall (bad) xor cmpsb xchg cmp sub pop mov leave or aas or sbb pop wrpkru (bad) idivb mov (bad) mov xchg aas das jg xor lahf aas pop aas dec in les pop mov add aas pop into jb add dec pop mov xor shr loop inc cmpl inc (bad) add fcompl addr16 rolb push cs test and xor sbb or fild cld iret mov lds and jae call xchg dec sbb fsubrs lods lds jg xor das in xchg out push or inc enter fsubr jb das fs pop lods jmp repnz mov jmp enter lods scas test sbb jp in ret pop jb pop inc push lret cltd nop in push dec enter out mov pop enter fs pop enter mov in cs push and adc inc mul lret pop jb je or pop and loope or mov adc loopne enter cmpsb test lods test push movsl mov and cmc mov mov mov leave into add (bad) ffreep lcall out daa fldcw push ret cmpsw aas shll cli xchg cmc das test pop faddp xor decl push xchg pop inc mov rclb sti incl call pusha add aas inc push push cmp pop imul insl xchg mov dec jns mov and mov cmp (bad) incb (bad) in js and cltd (bad) (bad) jle mov add subb dec les mov sub idiv mov out mov (bad) aas in (bad) xlat push (bad) push push push or loopne outsl push roll mov xor ljmp mov out sub jmp aaa sahf lcall dec aas outsb push mov inc out push and xchg into aas sbb xchg and or pop xor outsb fdivs sbb pop pop mov subl jnp add rcrb xor lret scas sbb sarl mov std push or sbb dec out sti andl jp pop sahf loope loop push ret (bad) jg ss dec mov aas addl mov ret (bad) int std push cmp adc mov push lock les outsl rcrl mov fnop and test icebp mov das jb out xor xlat aas (bad) jbe neg and lds sbbb movsb aas mov scas repnz addr16 sub mov add mov cwtl push das push pop in pop cld xchg ds add add fnstcw mov push mov inc repnz fldt adc lock pushf call xchg jl inc sub cmp sbb sahf int loopne pop fist xchg outsb or lcall pop mov lahf (bad) adc nop push fnstsw (bad) cmove sub std int xor shl stos aam sbb sub js (bad) ja push sarl inc mov mov adc aas fdiv aaa popf ja sub lcall push adc mov pop leave movsl (bad) sahf mov cwtl dec insb push loop lea faddl push jb aas mov aaa fildll xor xchg pushf mov mov jmp out sub adc aam (bad) xor (bad) mov sbb cmp popf mov mov sub outsl addr16 stos cmpl mov fdivs dec outsb push cld jle aaa jg cmp push sahf ja jns xor sbb stc sub cli mov popa cmp push jle mov bound fwait jg test dec push mov inc insl mov in inc mov mov xchg xor aam mov lcall (bad) mov push iret sbb aas test push mov iret pop arpl lods lret aad jg int sub xor call xchg test adc shr and xor (bad) mov les mov push sbb xchg insb push outsl fild cld sahf outsb shrl pop push stos push cli arpl popa mov aad and (bad) out mov add pop mov pop dec daa clts cmove or in cmc mov lcall xchg (bad) jge (bad) cmp sahf mov in (bad) mov xchg js (bad) aas pop movsb data16 in in es push es aas je dec dec jne push mov cld popf xchg xor jg je scas pop enter mull fild pop adc cmpsb lcall fcomps loop mov arpl outsb clc mov cmp das add jnp lock lds xchg nopl adc cmp out jnp cs push mov push mov das cmp imul lcall inc inc (bad) incl outsl mov add xchg test jecxz mov outsl push repnz cwtl sub dec jnp (bad) sub insl loope (bad) cmp push mov ret or (bad) aaa mov mov or out add dec clc rcrl fnop outsl or jge int3 mov mov int3 nop scas push int mov cmpsl cmp (bad) push insl jg and dec sub outsl push add mov les dec add adc cmp loop xchg push jns mov setbe scas jp into nop jbe push fistpll fwait int3 andl out (bad) mov mov cmp scas add sbb clc fistl (bad) push or loope nop in (bad) xchg outsl push xor xor push or test push add fdivl jns fildl xchg and push jno mov inc xor out push xchg xchg mov stos or mov sub add popa sahf enter inc (bad) push xchg mov fildll stos loope gs mov shlb mov or das or adc pop xchg cmp fildll ljmp clc mov out push inc pop repz xor cmp inc sti in iret push cmp push pushf mov int push (bad) stc and call daa jg and into xchg sub scas jno outsl push mov insl fwait sti scas dec les dec or lcall inc pop das push mov jae test inc hlt pop nopl sbb out push xchg sbb sahf cli mov add adc inc and fisttp or pushl decl or xor or lods pop or sub loopne dec push push imul dec inc das push mov fbstp or jnp add and or push inc pop mov xchg rcl pop mov mov xchg xchg dec sbb mov in aaa imul rorl pop jns (bad) decl or fldcw pop popa mov inc mov out test lahf cmp xor add mov inc add jo or sbb add jae inc sub push push icebp addr16 clc push cmp dec outsl push outsl jne push inc je inc or sbb xchg mov or mov (bad) (bad) js je sub or cmpl fildl push jne imull and and hlt inc xchg and por add cmp dec cmpsl xor sub inc xor push cmp dec add aas push scas pop ja xchg xor xor xchg sub gs jbe push jo push je and pop cmp aas dec fisttpl fs data16 push mov push or push mov jns push jne imul sbb popa jmp xchg in imul fidiv or mov ja insl sti aas gs (bad) lret and xchg je mov add cmp dec lret stos insl sub pop addl scas cmp out mov inc push data16 scas loope mov dec sub xchg ds jp sub das sub sub arpl add push in cmp push cmpl or daa dec (bad) das nop mov fbstp sti jo out outsb bound jnp sbb jbe mov outsb sub fistl insl mov iret xor fbld inc pop push faddl xor fcmovb cmpb aas cs pop push (bad) and daa cli sub inc add (bad) mov les cmp notl in (bad) shrl lahf outsl xchg subl pop outsl xchg lahf cwtl loop mov jg dec jecxz sub sub fbstp mov fist or xor add cmpsb jne jae pop ret stos pop arpl (bad) stos nop xor (bad) bnd outsl xlat add das rcrl jae lods mov add test jo sbbb pop sbb (bad) loopne iret arpl dec sbb rorb rcrb ds (bad) insl pop fbld jb fs add pop insb clc xor mov outsl psubq das pop cld pop sub fiadd lods loop test (bad) mul enter insl lret je out sub push add scas popa mov push fisub cmp (bad) scas popw pop ret pavgw push sub cmp xor (bad) xor andl fs bnd lret push and or pmaddwd cmp adc hlt mov enter adc mov sbb repnz sbb enter das inc mov lock and jb out push jp cld push dec pop mov (bad) in call test lahf addr16 jnp jbe fsubrs sub push push iret loope les fcmovne or add jl roll mov dec insl test xchg imul fcmovnu add inc das rcrb fwait cmp xor cmp push inc (bad) outsb out (bad) (bad) add dec add and jbe outsb add das das das and (bad) dec inc jl jl inc inc sbb add loopne dec fisttpll (bad) mov dec ja push call fimul jne add das mov movq in daa out dec push outsl mov inc mov push fistpll jecxz mov ret dec jp add inc jo inc das pop (bad) mov pop imul iret fcmovnb mov jns out out (bad) outsb sti adc (bad) arpl daa (bad) push pop pop stos inc jae push dec xlat daa push push ret mov pop dec packuswb jne neg iret sbb (bad) mov lahf (bad) jg in (bad) incl cmp cmp fs dec xlat mov cmp add das das adc loop push decl inc das push xor outsl popf rol jbe dec add add inc jne mov inc or inc jne xchg outsb das pop xor inc cmp lds jg bound push inc popa outsb adc into mov xchg jns jg addr16 cmp fs int mov mov jae push gs sbb jne dec outsl outsb and jbe pushf outsl pop dec inc aas test inc into inc push dec or aaa movsl aaa inc adc fildll gs sub adc xchg popf push inc in jle inc insl bound push dec dec inc cmovle and inc daa cs push inc push pop mov sub pop inc loopne inc fsubr and inc push inc pop inc dec fnsave jmp dec push pushf sub mov pop nop fistl in bnd pop jo cmp mov jae,pn shlb nop/reserved arpl or lock mov add add add clc daa pop imul pop and push pop loopne,pn fwait mov push pop jbe sar and add pusha push nop ret add inc dec add std fcmovnu xor sbb addb add xchg imul (bad) adcb test add orb (bad) daa push cmpb push and sub ja xor int3 push jo cmpsb test data16 arpl push rol xor dec or cli mov jl sub int3 rorb sbb cmp pushf xchg lea mov and in xchg pop xchg xchg mov cs or iret sub add add xchg xchg and jecxz pop sub or aas pop or aaa add sahf out push aas dec push pop mov mov ja xor push mov pop mov cmp imul loopne insb push xor data16 and cmp mov sahf divl (bad) pop sub jno mov decl jbe adc out es out aaa adc cmpsb mov mov repz inc push push xchg out flds das lods ja push ss imull cs sahf xchg xor mov xlat or push jo jbe das sub dec pusha sti mov icebp int jne inc data16 add or das pop inc and dec mov outsl jb dec lock add into pushf aaa dec outsl addr16 or (bad) outsl dec outsb daa imul aas mov ljmp jp sahf pop jl mov inc jecxz outsb cmp jmp dec push ret test scas add mov jo sub enter xchg fcmovu xchg jbe fs jnp ds dec sbb lds xchg xchg pusha ds icebp mov xchg xor mov cltd pop or xor repz ficom aam imul fist mov ficomp fwait es xor pop les ljmp dec hlt lahf or inc mov ds push test je int3 es daa mov (bad) data16 add pop xor mov cs lods xchg pop stos out stos xor subl xchg mov xchg adc sub clc mov pop (bad) jmp rolb mov mov into mov out scas sbb mov push scas jns fcmovnu jno cs scas pusha dec push addr16 fiaddl in inc ret (bad) push add xor fimull leave push or lret iret addl add add inc shr insb push xchg inc cwtl rorb mov add int3 addr16 js test pop (bad) pop add mov or cmpsb or mov or adc xchg inc mov jbe mov ret notb les add fs xor jae pusha outsl imul sbb xchg or or repnz not mov push imul push mov inc bnd sub std adc ret mov data16 mov xchg aaa insb mov add dec in rcrb clc push jbe sbb sti jl xor outsb pop dec das dec add mov dec arpl jnp rorl outsl enter enter xor push shll mov push imul je addr16 or fcoml insl pmaxsw xor idivl gs ljmp lea push lcall push add pop outsb jl adc add and movsb jo stos jo or int3 push fistpl imul mov ret mov xlat sub and inc js and sbb push xchg mov push out dec or fild in mov mov pop mov pop ret sbb xor adc push cmc add mov (bad) jo je nop/reserved and dec mov jbe arpl push je das push jae popa mov xchg jae adc inc dec mov jp daa mov lea dec mov js push push add mov int3 add and sbb and jbe ss mov sbb and jb test out cmp outsb add inc xlat mov pop cmp mov fsubrs test pusha shll push das sub xchg mov xor sbb push sbb rcr dec mov (bad) push in fiadd (bad) (bad) push push pusha lahf nop push push add jb je jmp push dec inc popa (bad) pusha inc fwait (bad) (bad) icebp mov pusha gs and push push or adc fadds dec adcl popl pop pop mov or (bad) add dec loopne xchg cmp call and adcl adc jbe je jae test pop dec addr16 push jne in fmul xchg (bad) ss arpl mov or xlat xor andb push ds popa mov mov jg fisubrl jo or adc pusha add sub testl jb in and xchg das gs cli arpl adc ds jg stos xor push or dec xchg das inc outsl popw push fadd arpl xchg mov rcrl jmp popw pop cmp and bound ds and sub inc jl jmp addr16 jle jmp xor sub jae xchg mov sahf push and sub out cmp push sub movups lret lret and fidivr incb jg pop pop sub push pusha sub jmp push add ss gs sub pushf imul (bad) int3 jo hlt dec sbb arpl sub cltd int jo sub push out jnp mov sub cwtl mov repz je pop push daa sbb repz inc xor mov lea sub sahf push mul jns and sbb adc add (bad) dec add dec or or es push clc out sahf out hlt lock call sahf loopne fcom ror jns out enter mov mov lods cmpsl movsb push mov pushf cwtl xchg nop test jns out jo dec inc iret rep sahf sub or int3 lods mov iret repz dec sub or jns out les sahf out insb pusha push xor repz adc in les cmp (bad) pop xchg pop mov cwtl ret popf jg test fiadd inc pop jle sbb push sub movsb nop add test push and ss mov and inc addl add add adc and mov (bad) xor push mov jo fcomps add add add push out aad mov add imul cs adc pop pop ficompl inc jo in pop outsb or fisttp push repnz arpl adc mov rorb or call xor aas aas add andl inc les xor mov imul xchg ds test fs jne push es je daa fiadd outsl cmpsb pop popa data16 and aaa and jo xchg cli insb outsl jbe adc gs sub mov jb or in aas push and sub jp and cmp in cmp (bad) push insb daa addr16 add cmp sub inc mov push xor int3 adc mov pusha (bad) push jae imul ljmp pop movsl test pop jbe gs insb arpl clc fmuls cmp insl arpl add and and add mov imul int3 popa pop or sti or inc pop jb pop xor push pop push outsb pop pop pop pop sti cs jae (bad) dec test mov push and push sbb test daa arpl mov mov loopne mov les fcmovb xchg mov and shrb imull jbe mov imul pop push je lods jecxz add xchg out gs popa pop int test dec outsb imull cmpl sbb and jae daa lds mov push ret sub jb and push addr16 cmp push insb jne fisubrl and or daa enter fldl (bad) gs popa jne shrb adc (bad) xor nop mov lds pop sub push pop das imul mov (bad) (bad) jns mov das jbe push xor pop test fisubrl sub lret daa outsb pop xor aaa enter or xchg dec sub mov out imul mov ss daa loopne mov cmp lock daa push aad test cs xchg frstor clts inc fmuls jmp push test fxch sub std sahf pop leave mov and jb std adc cmp dec push movaps ja repz inc add inc sbb push inc (bad) pop dec sub dec in dec push rorb mov test xchg push cmpsb sub jo sbb push iret outsb xchg dec dec mov jl dec sti jg push dec or sbb xor cmpsb rclb push int3 inc lret stos shrb inc cmpsb rclb inc orb mov inc inc cmovl cmp jbe jge aas sub aas sbb sbb dec push pop sbb cmp adc orb aam insb ja dec mov test dec cwtl push xchg cmpsb sarb pop mov dec je pusha (bad) je xor sbb xor cmpsb and inc pop clc imul dec fmuls lcall mov pop nop push jl sub test dec outsl xor into or pop inc scas pop fmulp iret sahf mov cmp xor push scas and inc add sbb out adc jbe mov push cld pmuludq inc psubsb daa popf push push fdivrl fmul push stc dec jnp push (bad) mov push dec lods negb push push dec setl inc nop dec dec lahf sbbb sbb push push dec pop fist out fcomps inc dec cmp or cs adc sti fildll push ljmp or add mov ja jns push jae jo or inc fildll mov rcrl test fildll and roll adc gs mov xchg add or fild cmp inc sub popa int in mov aaa aas popa js imul xor cmp and sub ret sbb ret pop js dec dec jo inc jl inc ret in or inc jg jmp jb jo popa aas ss vmovaps jg dec popl push xchg or xor ret outsl inc call push insl jae dec xchg pop inc xchg pop xor andl mov das es sbb xchg jns and (bad) xor shrb mov sbb out jo mov scas sub jp dec cmp jno iret rcrb mov test dec dec and mov push out fsubrl mov out jo jb jo aas xorb mulb ss mov fisub or push pop push dec push push cmp push pop push adc pop mov fcomp dec or fstpt leave mov push pop neg fcompp cmp push dec (bad) bound push or popa jns ljmp mov or stos imul inc ss fisttpl data16 outsb push fs into push push out push out push jle out (bad) mov push ficomp fsubrl data16 popa sbb jnp push push xchg ss out insb (bad) ss (bad) jp insb or (bad) fsubrp xor push adc es mov jl (bad) insb xchg mov push ss sbb jns jg xchg popf mov jg imul outsb movsb jne push je repz js cs sbb lea js das push inc jbe jle out (bad) jns repnz int3 or mov iret push xchg (bad) jnp ja dec pushw (bad) out das push sbb inc jge das dec jecxz (bad) dec movsl push test pop cs outsl hlt lcall push in incb mov push xor push dec inc dec cmovns out xor cmove scas test jnp mov xor cmp das pop add es push imul cmp inc arpl mov jbe insb xchg cmp sbb push popa and mov xchg ss xchg movb and push (bad) es out aam push pushf mov rolb cld aas push roll adc out sahf out inc fwait jns xchg data16 push testb cmpsb push push push adc pop sti call xchg mov imul rcrb shl push push or aaa fldl jg add les inc pop insb sahf addr16 outsl addr16 xor mov push inc data16 add or outsl repnz pushf jecxz fs cmp dec sub popa xchg test lods fldl (bad) xchg outsl xor dec dec or out fstp fisub xor pop inc cmovs into sbb ljmp cvttps2pi dec xor femms mov pop es add orb mov sub jg sbb fdivs cmp pop pop sbb adc lahf xchg xlat mov jg and popa (bad) aaa jbe mov push add (bad) jg dec or aas (bad) fsubl jno or cld aaa adc ss or sbb xchg std addl pusha add insl aas leave (bad) or push mov lret add sub jle fldl sbb jmp loopne adc popl pusha jg push rorb jmp fisttp or dec jno icebp pusha inc mov clc ret movsl (bad) pop push mov jno xor into out inc fadds push leave dec out jo iret jnp popl les push mov inc cwtl lcall and insb leave in inc imul dec in adc lea inc insl xor jecxz sbb bound jno mov outsb push push into (bad) int sbb outsl cmp outsl mov iret push repz mov inc push xorl mov push int3 lret shr or mov out jecxz imull adc shll out jnp pop out jmp scas fmull (bad) mov divb fwait (bad) fdivs add repz mov jg or push aad loope inc aad jo dec mov movsb push push (bad) je movsb jge fcmovne nop test sbb mov (bad) (bad) sub xor lods add pop ds aas push xor jns out ss cmp cmp and rorb cmp inc cmp ss or jns pop push or sahf out sahf adc adc jns lock iret mov push sbb cmp repz pop and and cmp repz cmp sub sub rolb sbb ds shrl dec xor inc adc mov adcl push gs bound loop dec fiaddl push jle cmp xor jbe,pn jb bound ja pop and push sbb push loopne hlt mov lret in pusha das pushf popa fs and aam mov push push outsb push jmp add mov push sub hlt das es mov outsl pusha insb popa das xor ja les ss aas shr xor pusha mov je dec movsb mov je out mov push dec (bad) sub or jb cld jg loop imul cmp and inc jg push inc lcall mov cmova outsb imul xor xor (bad) mov jae fs inc jp jns imul je sub jmp insb jne insl dec jbe push cmp push push ret push jg sub jle xchg lcall jle inc adc sahf cmp mov push insl pop pop dec insb arpl addr16 dec push xor jg jmp outsl jbe xor dec push ja inc inc jns push xor imul sti jg xor cmp push cmp push insb imul imul xchg sbb jp push push jg add sub inc cmp arpl out clc jne pop dec outsl adc jbe inc push jns push insb pushw mov sti outsl cs jb inc cmp push xor dec insl js pop sahf jne insl movsb (bad) cs inc je push xor jns je outsl push push inc sarl inc push imul push lock jbe dec jp jne dec mov fiaddl adc add mov ldmxcsr mov ja jp sbb push fidivl cmp inc pop (bad) dec or adc daa out cmp pop jp xor ja pop insl push js pop push loopne or sub ss jp jns inc push mov fist and jbe dec push inc push add cmp popf or stos push xor cmp fist xor add adcl outsb arpl fcoml testb xchg lock dec inc dec addr16 bound inc xor mov pop xor cs xor (bad) xor les xor lock cmp insl push push inc test (bad) popa (bad) ja imul addr16 (bad) push push fidivr fwait add cmpsl outsb add xor jmp jle inc cmpsb cmpsb jmp push aas lcall pop push aad (bad) nop outsl dec fs sub mov cmpsl lret add cld es add (bad) fidivr js pop mov dec pop inc jne sbb outsl mov dec push (bad) out inc fs pop jo push mov pop dec (bad) push xor mov push and or mov jno mov push jno orb sub fmuls flds ss jo cld fs pop push bound (bad) sbb incl cmpsl xor jnp xchg mov outsl arpl addb andl jl (bad) mul fmuls and gs xor cmp (bad) mov loopne leave jbe lahf sbb mov and jmp shlb sarl bound pop cmp adc into jb jns xchg and or or cmp testb aas add (bad) sbb out addr16 inc push negb push (bad) fs aas (bad) in nop or jns sbb add daa add movsb test or call push sub mov aas pop pop (bad) and xchg add or add lock fidivl mov and iret inc aas in mov popa sbb dec into dec sbb add push sub inc inc mov inc pop mov dec adc push jg cmovnp ret inc movq xchg mov and lahf dec jg xchg or xlat fimul sub rclb outsl dec pop xor pop adc out inc pop dec push loopne rclb addr16 push data16 daa mov inc or mov pop add cld dec add mov in nop data16 sarl daa dec inc push push mov adc outsl dec mov and mov (bad) pop pop (bad) loop xchg (bad) int3 xchg add loopne cmpsl movsl and jg mov lcall adc out dec xor cmp outsl mov fst addr16 sub insb outsl sub jl mov movsl outsl dec dec mov pop add daa mov pop dec mov adc sbbl iret vcvtss2si outsb push xchg pusha insb and enter repnz enter lods mov movsb pushf rcr adc decl add pop jb pop shr imul je call push push xchg mov outsl dec cld outsb mov xchg nop pushf cld mov pop sbb int3 dec sahf mov pop lcall daa mov push sbb push inc dec in adc outsb ss lea cmpsb adc (bad) push (bad) negb test cwtl ljmp cs pop inc scas insl insb sar dec (bad) adc imul pop add or adc jg dec pushf fdivr (bad) xor pop pop clc mov fs jo or pop jnp movsb outsl bsf xchg mov sub cmp inc xchg push cmp jb fsubr xlat loopne aas push push (bad) push or fdivrl dec sbb xlat ja bound sarl dec push pop xchg mov add inc aaa outsl dec fcoms mov test arpl xchg in nop aam lock inc or push in cmp push cmp sub outsb imul insb xchg inc jns,pn jl test sahf or rclb push xchg mov dec fcoms push dec jnp or push adc and add outsl dec insb popa out (bad) hlt outsb push scas push pusha push push dec scas addr16 nop adc call push mov sub outsl dec roll in push push cs sahf cs inc mov inc je xor push inc dec movl outsl dec xor xchg cwtl movsl loopne mov out jl,pn enter mov imulb adc push and adc jnp xor shrb shrb xchg jo pusha pop bnd outsl out out xchg dec cld outsb lods xchg mov enter mov xchg dec data16 clc xchg pop or dec xor adc inc pop outsl jae ja dec outsb inc xchg push fiaddl outsl sahf mov nop xchg mov dec out outsl repnz in fisttpll outsb fcoml dec pop xchg les int3 dec addr16 sub sub cmpsl outsl sete pop push pop js jae pop adc pop pop pop divl pop jnp mulb (bad) mov dec dec push pop outsl dec mov (bad) hlt daa pop add or mov hlt call or aas cs pusha xchg loopne fcom push jl push xlat sbb add xchg fdivs ds aas jae push roll je and iret in (bad) xchg xchg mov dec fimul and pop xor inc mov aaa (bad) xchg xlat outsl sbb subb pop add cs daa nop lahf addb jnp mov dec mov rcrb loopne or outsb pop adc xor popf pop and sub scas (bad) mov add addr16 jmp popa jne pop xchg cmp dec xchg jmp lods xchg xlat outsl dec stos jae ja data16 push fcomps inc outsb ss add mov pop xor cmp into sahf xchg or mov cs aaa pop insb push jl movsl and repnz in popf dec jbe data16 lahf mov adc ja mov cld lahf pop or sbb push pop adc addr16 ja dec push test mov or pop cmp pop jl push pop jnp mov pop pop insb pop sarl ja or aam insb adc ja ja pop or pop sbb sub dec out xchg xchg pusha lahf ja dec jbe mov push dec dec xor addr16 andb fnstenv mov iret inc add mov sub add xlat icebp dec or sahf pusha or pusha sbb sub pusha mov pop dec pop ja adc xchg dec in jbe fbld push loopne lock js ja js imul outsb test (bad) pusha bound fisubr dec push fwait or popa pop adc add lock sahf fnstenv add aam aaa fildll (bad) out xchg dec shrb pushf xchg mov outsl cs pusha xchg dec jp fcoms jno bound inc (bad) lret outsl outsb ss in inc icebp bound bound das pusha (bad) (bad) dec push pop iret popl adc (bad) cmp push test mul popf movsl and data16 push pushf mov call or addr16 mull les arpl (bad) arpl push adc mov push jl adcb add outsb mov outsb ss or inc xchg or (bad) out push aas js iret pusha or arpl push fdivrs das loope xchg xchg addr16 cmpsb or xlat fimul and mov pop fiaddl inc outsb push mov iret lds cmc pop enter mov pop fs (bad) aaa sub inc cmpl out jge outsb jmp adc fs incl or jbe inc ja dec out (bad) gs cmpsl je int3 mov gs adc lods ja adc jae int3 mov mov ja fdivs sahf out xchg push lahf data16 sub ret fidiv adc add mov test pusha jg jo loope xorl aaa data16 icebp rol inc data16 daa jle pop add mov mov push hlt pop outsb popl into je dec push mov push outsb mov rcrl mull pop (bad) ret add popf mov scas or ja aam ja (bad) mov addr16 (bad) rol inc mov pop dec jg push add mov jg mov or and into dec ljmp push adc cwtl (bad) mov mov outsl dec (bad) push outsb call loope daa push iret pusha xchg pusha mov pop jbe adc ljmp and mov mov push push push pop dec mov sub jg jmp push (bad) cmpsl mov lods push mov stos int add or and sahf outsl mov pushw dec push push push xchg ret mov insb push mov mov (bad) ret fisubr xor pusha dec push test push dec xchg jp or and xchg xchg pusha or or out jp dec loopne imul sub xor shrl mov sub dec imul in push test jl dec out pavgw xchg enter pusha shrl (bad) or (bad) insb pushl es insb sub xor inc fst adc dec cmp cltd sbb xchg je aas dec sbb and addr16 jnp (bad) ja data16 daa mov adc lods ja add mov insl or imul aaa outsl out (bad) lock dec mov inc imull push fs xor mov ja js dec seto cmpsl insl out (bad) mov outsb int3 xchg faddl and xchg xchg adc cwtl fisubrl cmp (bad) outsb xor cmp mov movl outsb js mov jge outsl sbb (bad) in fadds xchg adc (bad) ljmp push in sbb (bad) jo pushl jo push fsubrs add (bad) xchg aaa add sbb mov fsubs (bad) outsl pusha aaa outsl jo (bad) rclb add aaa push mov in mov add fdivrs outsl rolb aas xchg and xchg inc (bad) mov jo push adc xchg add inc dec xchg and xor pop dec or rolb aaa jo mov lahf jl das xchg nop xchg ja data16 clc pop inc pushl sbb xor jno cmpsl inc mov (bad) out das sub fsubrs (bad) mov push fs (bad) dec (bad) iret lds daa xor fisubr dec or jno jb push enter jbe inc mov cmpsb lahf add outsl in cmp cmp daa jb lahf jb push add sub xchg add loopne pop or (bad) xchg mov bnd xor add or test incb lahf ss mov add add int imul fldcw push or repz (bad) ss and cmpsl stc xor push or int fnsave push push fxsave rorl adc adc cld or pushw mov shrl adc adc fsubrl mov fcomps inc sbb sbb cmp sti out rcrl push pop lcall orl jbe mov nop and push cmp js xor out fsubs and cmp andb out sahf and nop (bad) lock jmp daa push push xchg shl iret repz add cs inc pusha andb loopne sub push jo repz data16 inc pusha into sti cmp andb stc cmp repz inc pusha andb cmpsl cmpsb adc das insb ds mov xor xor iret shrl imulb xor push xor xor cmp mov sarb cmp pusha cld ds mov (bad) cmp enter dec repz fldcw fiadd inc bound add inc xchg enter cmpsl stc xor push inc fdivrl iret mov cwtl sar idivl out dec pusha nop decb fmulp out jl push dec push cmp dec cmp dec lret loop push out repz loopne push mov iret mov fcomps push sahf push cmpb cmp hlt sbb ja ja push fist push push mov call xchg push lahf out outsb pop pop mov hlt push pop mov repz cld inc pop (bad) push shl sahf out pop inc mov clc cmpsl stc cmp dec pop mov fucom jns push lret popa into imul je rorl arpl out sahf out mov jns jns fs mov repz loope andl mov imul ss stos jmp outsb outsl imul mov stc xor out roll out sahf cmpsl cmp mov sahf loope sub rcrb push jne nop mov fucom jns pushl jbe push jns sarl ret sub xchg sahf out cmp cld sub lahf out stos int and stc cmp repz mov jns cmpsl sub sahf mov aam sbb mov add jnp cmp out shl jge push stc cmp repz into repz jle jns cmpsl cmp pushf int3 iret repz cli sbb scas sahf cmpsl stc cmp or int jns in sbbl jmp imul scas seta xor dec ja mov bswap dec fs dec imul add daa push adc xor (bad) in iret push pop jo lahf mov (bad) push cwtl aas mov daa push stos add in test or or in fidivr jmp stc push or imul mov in pop push dec add push pop aas arpl and push imul lea push inc push mov xchg or aas test mov sarl xchg push aam fcoml jl fldl aas out mov or push or pushf pushf dec and out out pushf pushf pushf pushf out out out out cmp aas mov mov cmp scas jp fisttpll push and push loop std iret out pop mov or out adc sbb and mov and push sub inc inc mov push dec or pop jle inc fidivr imul pop faddl aas mov push xchg adc cmp call lock (bad) call daa jl in jmp inc aaa or xor ja jb lock inc lock aas push xlat outsb and push pop add jbe sbb push femms jle xchg mov jnp aas cltd femms mov in loope mov mov mov fcmovne int3 adc aas fistp push and push test leave add (bad) icebp leave leave leave leave icebp icebp icebp icebp leave leave leave leave icebp icebp icebp icebp xor loopne icebp icebp mov sub rcr loopne out leave leave call repnz xchg in loopne or repnz pop push push or or aas cmp push inc or dec push push aas insl in jbe push adc aas xchg and ret jg push xchg pop mov aas mov mov jl fldl aas lds push int sub inc mov push fnstsw call jl lock pushf popf jge or adc movsl mov push cmpsl jg repz fnstenv pushw jo js and xchg xchg push fwait sbb push outsb aas cmpsb (bad) push scas or lea rorl (bad) loope in (bad) repz mov inc mov cld hlt add jg mov add hlt sbb sbb hlt cmpsb sbb hlt jnp andb adc outsb xchg popf pushf pushf pushf rcr jecxz inc mov cmc sub xor cmp addb in lahf cmc jo js cmp orb insl in fwait add mov enter push rorl or or jno in or iret addl enter idivb out inc daa push dec add push push pop aas data16 push outsb or mov and jle mov or xchg or sub pop and (bad) and call lock testl or es xchg in inc push or or aas stc mov sar inc clc cli je sbb test in adc push adc pop push push lock (bad) sti sbb aas les fadds insb push iret sbb enter xchg push andb and divb xchg jg orl insl in es cmpsl imul sub subl fnop fs clc clc clc leave dec ja stc stc or or stc push stc dec add push add sbb pop add stc outsb aas jns dec aaa jb addl out xchg fisttpl out popa (bad) xchg xchg jecxz repz xor cli cli inc movl ja xchg cli mov cli cwtl mov add stc sbb push iret test mov pop cmp jg and adc lock lea sti lahf push or xorl sti adc push and adc sub and xlat sti sti fs sti sti sti fs sti sti sti and arpl aas cld cld or xchg adc rorb mov iret pop data16 mov fidivr xchg test push pop xchg cld rcrb cld cld cld inc pushf pushf pushf cld std std (bad) enter std iret std daa std or pop pop xchg popf push std nop iret cwtl or cmp mov ret leave leave leave std mov mov and push fimul out out aas (bad) addr16 leave push daa (bad) decb decb sub add incb xchg sbb mov and addr16 pushf pushf pushf pushf (bad) (bad) (bad) (bad) xchg rcrl (bad) mov and incl dec call cmp lcall arpl imul jbe jnp leave cmpxchg imul and imul scas fwait hlt addr16 mov xchg mov lahf scas (bad) push cmp inc add lea pop cmpsl push addr16 jb jge mov xchg mov enter or xor decl or decl add iret add add dec in (bad) dec lidtl push popa add shrl jl push xchg xchg dec outsb mov or out imul xchg mov cwtl add xchg xchg xchg add add xchg xchg xchg xchg add add inc mov fildl test mov and loopne push jmp jmp adc decl out jmp pop push pop push subl add jb push nop xchg adc xchg mov inc cld cmp loopne call xor cmp push sbb fdivs in sbb mov arpl mov or int3 push lds outsb and push test mov mov xchg or rcr xchg xchg xchg xchg out idiv inc mov or adc mov fdivrl sub push xor cmp movsl jo sbb addr16 xchg in add (bad) push (bad) push cwtl enter aas xchg push stos add mov mov sbb push into or or iret mov push fxch fsts flds sub (bad) add xchg and roll pop push push add pop mov aas js push orl or aas movsb pop push scas or mov addr16 push xchg inc addr16 or movhps fcmovnb sub pop pop sub push aaa add inc push dec aas pop inc fadds insb push arpl outsb or inc mov push (bad) or mov fdivrl mov push mov stos imul sbb mov or add and sub jb cmp or xchg cmp loopne dec aas push xchg pop or or jns push orl add out mov ja inc insl das or daa jg cs (bad) mov dec dec icebp cld or add lea or inc mov sub or sbb push outsb aas push (bad) push pop punpckhdq fs adcb mov sbb ss adc aas lods out or jb mov ret jg sbb pushl data16 inc jbe int3 fimull sbb or enter push cmp and daa daa xchg jo jo xchg daa daa daa xchg pushf cmpsl mov push outsb daa mov rorl cmp jmp jo repnz aas or insl in imulb adc xchg and ret dec scas push push adc movzwl js push sbbl sbb inc cltd aas movsb xchg push scas sbb mov inc clc (bad) xchg ja or daa daa push (bad) or or (bad) movsb daa or iret xchg in mulb js rclb in xchg dec xchg daa mov sub push rclb daa daa call mov xchg or jb sti add push push or or ss (bad) push inc or dec push push aas fcmovne xchg in (bad) push adc aas enter xchg mov shl ret xchg aam flds add push adc dec jo enter es xor push cmp in not push inc add (bad) xchg xchg fistl dec sub nop pushf xchg jl adc adc iret push and and push push (bad) mov and (bad) (bad) (bad) mov and (bad) (bad) pmulhrw and (bad) punpcklwd insb push fadds insb push je jl test enter jg enter inc add setbe cmp sub adc adc adc adc pop daa daa daa mov pusha push shlb or sbb xchg ja jbe jb mov (bad) sarl inc mov xlat push out repnz std inc dec and (bad) fcoms xor cmp enter inc adc push sbbl arpl imul add pop sbb cwtl sbb pusha daa sub pop xchg notl clc movlps pushf pushf sbb adc adc mov pushf mov aas int3 fisttp jbe jb xlat or or aas adc enter pop (bad) push imul (bad) fstpt mov push xchg adc and push cmovs push lahf add cltd pop adc mull enter adc or mov push pop add mov fdivrl cmp push inc or enter pop aas sbb outsl or jp test scas adc adc pop or sbb mov dec jb xor fstl push add inc jb adc push nop adc in inc mov xchg cmp mov or mov pushf cwtl inc dec ja int vmwrite fwait and xor bound mov movq into sbb lcall cs cmp sub cmp mov pushf jg jb push cmp leave scas test scas rcrb xchg pop and adc enter xor inc popf push and jmp xchg adc leave pushf lods fsubs leave xchg dec scas in sahf add dec and and or dec jg in popf mov movsb push jb cmp leave in cld lahf (bad) dec mov test movsl scas lahf inc les daa xchg stos in scas fildl push (bad) shl daa scas jb stos in hlt mov xor out (bad) or sbb pop mov insl push mov (bad) dec xor jmp or les rorl pusha loopne mov cmp jbe add mov scas test xor or mov mov mov mov popa in add mov and pop mov dec insb (bad) dec scas xchg pop scas out mov mov (bad) imull out mov jb cmp push idivl out scas mov int3 notl mov adc sub movsl xchg and jg in stos in popa insb jl inc or jg jmp dec (bad) aam insl push and enter sbb sub aad adc jg in ret lcall dec into inc scas in mov les fdivrl test movsb cmpsb dec and push jmp adc aad jmp cmpsb lock (bad) cmpsb fs mov cmpsl lods fimull scas and cltd (bad) jmp jbe repnz jmp cmpsl repz test mov hlt fisubr and test mov leave enter test dec mov push xchg xchg test fs lods fimull add sbb ret stos ja fs std xlat or xchg in loope sbb aas jecxz push jmp jae fxch repz sti aas sbb pop push cwtl xor sbb and orl call xchg xchg test js cmp mov or fwait iret stos cmp repz rcr add fwait cmp xchg jg (bad) inc pop sbb sub jb sbb pop jb push add mov jno jb ror cmp sbb lcall and push sub xor mov adc push addr16 dec add push push pop aas insb and push outsb or jle in jbe addr16 xchg or in mov adc mov les iret adc adc sbb repnz sbb pop add into into sahf lea aas pop adc (bad) push mov faddl aas cmp push inc and sbb dec and add inc mov arpl jle mov sub mov xchg xchg fsubs push mov pop mov and push inc lahf scas jmp enter inc (bad) and push pushf sbb jb pop and imul xchg pushf jnp daa daa mov push mov mov daa daa rcr jecxz push or jmp addr16 xor pop and add xor cmp inc aas dec add insl in cmpsl pop scas or divb jb popa or jno jl pop sbb jb jl (bad) adc scas cwtl and daa sti add sbb repnz add add aas and and add cmp scas scas and inc inc mov aaa daa push dec push jmp iret and daa daa daa daa and and cwtl (bad) mov and aas and iret mov inc mov fnstenv scas pusha add xchg outsb in push xchg or call in in and and push loope in and pop sub xlat push call pop and add jge mov fxch test (bad) xlat and aas mov xchg mov cmpxchg femms ret or or or aas out enter pmaxsw notb (bad) aas xor in and adc adc push or ja xchg test and and jge (bad) scas or sbb mov mov inc mov rorl ror insb iret push hlt adc cmpsl cmp cmp add es cmpsl push pop adc pop push daa (bad) mov leave leave add es leave leave leave es leave leave leave es leave leave leave es leave leave leave es leave leave leave daa daa daa daa aad inc loope daa outsl mov jb add imul jae xor sbb jnp cmpl cmpsb sbb mov and daa daa daa daa and and daa daa daa sub cmp push or aas in divb outsl push xor subb cmp pop adc mov and jae jle in xor outsb setg push adcb (bad) mov or or add push xchg mov inc mov pushf pop scas jnp inc fsubrs xor scas mov push and add mov add pop hlt movq add cmpsl fs divb sub cwtl aas mov insb pop ret mov mov sub aas fldcw fs jmp and adc ljmp xchg and sub cvtps2pd bound enter push jne (bad) push test enter lea cwtl bt stos or push in or daa mov pop mov sub cmp sub add push add add aas mov jnp push rdtsc pop cmp cmpsl or mov jne orb sbbl cmp inc push push cmpsl pushf pop adc mov popa inc pushf sub sub sub popf int3 add pop push pusha pop sub cmpsb push cwtl pushf jo mov xchg mov cmp mov (bad) jbe cmp pminsw cmc jp push sub cmp sti insl push and sub xor enter push inc push gs insl in flds adc cmpsl adc pop call in ds ud2 sbb cmp sbb sbb aas cs lar and xchg push pop daa xchg insb xchg mov jnp pop add jg mov dec mov xor addr16 dec adc mov fs das imul push pop adc push adc das lahf das jg sahf int3 fisub cmpsb add pushf pushf fmull movsbl into mov mov pop (bad) or fimul jmp fist xor pfsubr lock adc mov pusha add jbe ss push jnp fcmovnb insl in push mov xchg pop push sahf or or jbe (bad) rcll sarl (bad) enter push in in adc aas sbb jnp jmp xor adc aas jb jnp xor daa push sub xor xchg in jecxz cmp inc popa push dec sbb push push lahf xor daa test pop cmp icebp das xor xor in in test pop adc nopl jb in and das sub sub aas sub cmp ss aas push nop push pop sub bound push jne push ljmp xor in mov mov aas enter mov lret cmp sub rcl (bad) shrb enter cmpb insl in mull xchg inc fwait inc mov shrb mov insl (bad) aas rorl dec psraw in call add cld dec xor ret enter call add in in pop push daa push das aas cmp jb inc push cmovp aas pop pop jns cmp gs (bad) pop jne sbbb sbb pop cwtl aas mov pop push stos popa mov mov repnz fs gs data16 xchg jno cmp aaa mov inc xor push push (bad) mov or iret dec test lock lods adc add adc lahf xor movhps add mov sar and xor add lcall xor enter xor xor xchg leave leave js mov addl rcl test test xor enter push push lds and and ss jns sbb aas mov xchg push and sbb pop test xor imul bound aaa fs aaa aaa aaa xor jbe aaa aaa inc aas dec aas int3 adc (bad) ret aaa leave in jbe (bad) aaa mov negl mov idivl (bad) aas shl adc bound mov bound outsb xlat cmp (bad) and cmp ds fcmovne xchg pop pop or lcall mov aas insb push paddsw jb je jl test (bad) out or mov cmp pop ret sub or cmp mov sbb or pusha movups (bad) out xchg imul rcl and add cmp mov icebp add xlat dec cld mov or repnz push jo add loopne jmp test push push push addr16 sub iret add cmp adc inc push inc ja jbe dec cmp (bad) bswap iret pop dec fcmovbe xlat aaa push out (bad) dec int3 pop pushf jecxz jg (bad) mov inc dec push cmp cmp bswap sahf mov inc push cmp (bad) js dec scas loope xchg fisttp fisttpll lret scas ss mov jo subb js (bad) addr16 je pop decl mov mov add mov inc fstps lock out cwtl dec fstpt seta dec sbb (bad) pop inc sbb inc adc fisttpl iret mov setle aas cmp in in add roll int3 sbb jb aam fmull in in aas xchg mov aas cmp push sysret sbb pop sbb in test jnp jbe mov mov aas inc out jbe out cmp outsl aas aam paddusb or in aas (bad) (bad) (bad) add adc adc adc aas insl in jbe push xor aas (bad) ror push cvtdq2ps inc push and mov iret sbb mov movsb in cltd iret ds (bad) pop jmp mov popf aas aas add or or inc dec (bad) adc adc (bad) aas inc mov adc add and push (bad) mov aas mov ret orl aaa inc inc and mov xlat inc xor pop xchg movsl jo jg in in inc jo jle lcall (bad) rcrb lret incl cmp mov cvttps2pi dec cmp cmp push fs rcrb fsubs les mov adc and mov sbb (bad) add add add cmpsl cmpsl daa daa mov inc andb es cmpsb iret inc mov stos cmpsl int3 push pushf push push push inc pop popf ret inc push addr16 cmpsb adc inc jg in test inc enter rcr (bad) jbe ja into and inc push inc or adc sbb ja lahf add push mov call fbld rclb push loope mov xchg mov lock sub pop add movsb add dec adc outsl into mov inc mov cmp imul addr16 lock or mov cs cmpsb push imul dec add iret lods das or (bad) iret jg cmp fildl iret push jle xchg mov les jb push incl mov ja fsubrp aas or sbb (bad) loopne iret shrb pushl adc jg adc rcl cwtl (bad) adc xchg mov add inc leave scas dec add push dec ret enter add rcrb mov int3 sahf pushf (bad) int3 add aam inc popf call inc inc test inc xor cmp inc inc jle rorl inc add dec inc mov lcall in inc loopne decl adc adc out dec mov rclb cs lock dec xchg rcl (bad) ja or (bad) leave lods sahf mov mov enter add add in cmpsl push (bad) dec add sbb and sub jns jb or adc addr16 ja jno push (bad) decl mov (bad) mov mov cmp out repnz cmp addr16 adc sbb sahf mov or adc jg shll push aam lcall enter insl movzwl jmp cwtl aam dec sbb dec sub xor push adc (bad) in fs push addb xchg dec ror test dec mov aad in mov clc dec add es adc pop dec mov (bad) mov mov xor sbb das fldt mov iret test add das out dec movsb or daa dec cmp fcomps dec aad dec jo daa sbb push outsl (bad) cmovge addr16 or lock sub cmp addr16 xor cmp fcomps addr16 jo dec cwtl add pop xor pop inc dec pminub dec lock sub test iret add adc dec inc dec (bad) and adc inc (bad) in jbe orb je xor lahf xlat xchg inc dec subl fist push push jb mov insb push pusha jbe xchg pop push push nop push (bad) adc mov pop jno mov rcr dec je push xchg push push and sbb or push push push iret or inc cmpsl push out adc daa daa push push das push cwtl push xor xchg push pop push mov push push (bad) aas rorl pushf lcall rclb out dec ficoml push daa push cmp cmovbe loopne sbb dec add popa (bad) inc add jno fimull mov or mov mov aas ret rcpps fisubrl fiaddl xlat push daa mov sbb push sub popa in inc pop push push lock and dec xor push pop add mov push pop mov push pop fmull lock lds push call push out rorl push push lcall xchg or push pop push inc pop roll push fmul orl (bad) pop push rolb addr16 (bad) ja sub push sbb test idivl adc xchg pop cmp pop push jne add fdivrp sbb jnp push mov mov call mov push adc and aas insl in fnstcw or inc or or in pop (bad) pcmpgtd jno jl sbb jb xchg jg aas lea jnp pop btc (bad) sbb inc mov in in sbb fidivr lcall mulps and enter and and aas adc cmovl fild push addr16 add cmpsb add jno mov aas leave fnstsw cmpsl enter pop iret pop cmp in pop push mov push pop es cs lea jnp push cmovno dec or lea mov xchg pop addr16 movq ja jg push mov jmp xchg pop shlb addr16 cs (bad) add out add jb enter add cwtl cs xor daa pop xlat loope jbe add mov mov jg inc sub and jmp xchg mov pop jmp psadbw incb sbb jb pop or add and mov or aas inc cmovge xchg and pop or or in jbe adcl (bad) in leave lahf shrb in lret pop (bad) sbb iret arpl pop and and xchg pop pop pop pop enter inc aas dec add pop enter data16 jno (bad) test cmp in or xchg leave sbb xchg pop imul leave leave pop pop pop idivb pop add inc xchg push pop pop and adc in or daa stos cmpsl pop jo jg fs pusha pop (bad) pop pop in jbe daa pop cmpsl imull in mov or fimull in (bad) loop in or jle add adc adc and adc outsl cs sub in pop cmpsl pop sbb mov push addl add jo cmpsl pop lods pop jb ss ret dec fmuls pavgw stc jnp cmp or aas decb punpcklbw mov mov adc adc add adc dec adc in popa pop (bad) sbb pusha inc xorl fist (bad) dec adc out popa adc addr16 mov popa dec in inc xor cmpb popa mov mov or out sub sub adc xor dec popa (bad) popa (bad) bound adc flds add out and inc (bad) push sbb fnstcw outsb aas ss push or cmp dec push popa or pop bound jl pusha jb (bad) mov bound dec daa out mov or xchg nopl or xchg pushf dec adc aaa and jb adc int3 nop adc cmp test sbb sarb mov pusha mov aas fdivrs inc add daa sbb jg daa or or ss cmp cmp pop cmp out in inc jb loopne cmc xchg nopl xor adc insb add bound loop,pt sti addr16 push shr aaa push orb jb sub test in push push out orb push jnp xor cmp push push xlat daa dec fmull popf data16 dec (bad) ljmp push mov mov out add imul call adc out dec fnstsw into cmpsl dec lahf push test mov mov xchg aam jmp jmp xor cmp je ja dec scas scas mov mov push and aad add xchg push fwait aas out insb repz push xor (bad) dec inc setb xor adc and xor or xor outsl push sub xchg pushf xchg dec dec mov leave leave test fsub mov in pop pop lds in add sub adc and jb dec shrl and nop dec outsb pop xchg outsl mov sbb pusha int3 pop fs mov pusha rorb daa addr16 imul push addr16 pop sub aaa out push scas in addr16 push jge mov cmpsb ljmp lret push adc or lods add das xor jne out in lock sub in and xor xchg aaa out out (bad) push adc push pop pop xlat xor int out cwtl xchg mov mov push and sub ss test and call test xlat add sbb mov dec mov das mov fild mov mov adc shrb inc mov aas mov rorl mov mov mov shll jbe dec jnp das ret sub xor (bad) int fxch fimull movsl das aaa (bad) notl mov rorb int leave mov inc lock in imul adc dec pushl pop or or sarb or fiaddl insl cld adc sbb adc jg repnz push das mov mov xchg sar push jl test mov adc hlt scas sar (bad) push addb repz hlt data16 inc fadds mov hlt fs dec dec jb cmp dec gs scas jbe jbe jae jo xor nop in fcmovnb mov xor or hlt hlt popf mov xor data16 and test dec cmc incl scas scas jno push or imul xchg push push scas loopne xchg pop mov push push out xchg rcrb add negb push inc inc push push mov or notl pop jl rorb fcmovne in push sbb js lar push dec negb (bad) in dec scas mov (bad) ja add rcrb out xor addr16 mov addr16 addb cmpsb loope out neg loopne mov jae jge pusha and add and and push (bad) dec shr push call cmp imul push push in inc lds push mov mov push push mov notl mov mov punpckhwd and or stc push loopne (bad) scas (bad) call adc pushf push push push mov adc push (bad) nop dec push mov or pop mov mov lock ret or testb sbb cs or imul jb mov cmp inc cli mov push outsl inc pop jb or es inc cmp mov push mov xchg sti incl jp xchg or push sti push scas push add fs add ds lods add xchg (bad) xchg jns or sahf daa cmp and dec sub scas ds push cmp xchg xor repnz cld push mov or inc inc sbb out push rcrb outsl inc pop stos sub scas enter adc fisttp jb inc mov jnp or mov inc dec js cmpsb out or mov add push (bad) std dec dec enter inc roll enter scas std mov std xor jnp pop cltd jns jno mov add lahf push aad std ljmp rcr imul incl cmpsb mov out dec adc in insb inc push ljmp dec or incb (bad) dec xor insb xchg mov adc insb mov stos fildll incl add rcr inc pop insl sub mov push dec or dec push push mov ljmp xchg jge sub or adc lea xor jmp (bad) push fist add rolb addr16 movsb cmpxchg sub jno inc xor add imul push push push js and push push jbe mull insl add jbe add push xor push fdivl push js xchg add mov or test cltd addr16 fwait pop addr16 rorb in mov (bad) out movsb daa push pushf add loopne shrd xchg pop sub test add popl inc popa in rcll (bad) mov psubusb adc mov orl test lds movntq out iret add outsl adc mov outsl cmp inc and add scas pop fimull outsl adcl add lcall shrl outsl leave push inc adcb xchg test mov add scas add and inc fild cmp loop or inc sti mov xor in sub mov adc or mov popa out ja loopne add jbe adc ss lcall add pop fcmovu cwtl pop rorb setl sub sldt inc call pop icebp pop inc inc daa cmp addb mov add adc call mov rcr pop jbe pop adcb ljmp push jne or imul mov dec fild and les testl or fmul add (bad) push push aam (bad) jne push fmuls fdivrl mov aas inc push lcall add push js dec outsl outsl jo outsl fs lcall fild mov add cmp sahf int push mov pusha jle xchg nop add jne orl incl mov leave jnp mov nop nop ss aas push rorb push jbe push lahf jg xchg roll fcmovne mov enter adc popl rclb push push inc roll out ds inc out jg or sbb inc and pop dec sbb sub mov repz dec add shll daa xor iret push mov add aad inc pusha or aas pop mov mov out mov push cld in aam movsb nop jns out jo push inc xor pop sti clc push fadd mov test dec cmp insl sahf out sbb cli hlt iret cli call push xlat movsb das (bad) cli lods iret (bad) cmp cmp cli mov je cli pusha (bad) out mov cli inc push mov push fcompl cwtl subb cmp out and add lock cmp repz mov jns iret and idiv call sahf les or ss push addb sahf je fs pop insb fidiv lds imul repz repz or pop dec mulb push or hlt jns out fdivrs sahf out pop inc cmp repz sbb cld aam cwtl js iret repz cmp add in idivb repz rep iret repz push iret mov sahf cmp adc cld fadd cmp repz mov cmp repz call ds inc icebp out lock iret repz mov nop je jns int cmp out clc aam mov pop out outsb out pop push xor ss inc out clc push push mov iret rep cwtl mov addr16 and sbb in hlt sahf out sahf loopne mov je negl adc call sahf int3 mov mov sahf out inc cmp sbb sahf out out outsb jmp push call out mov xchg jl cmp addr16 and cmp outsl out in imul lock out outsb pop cmp call fidiv push mul (bad) out in in push mov iret mov dec jecxz mov sahf out cmp loop push nop jo sbb je xor sbb and sahf lods sub or loope mov sahf out nop js xor repz out add in loopne int cmp mov push out sahf in (bad) mov nop fnstcw in jns insb iret fbld dec iret leave xchg lret (bad) fistp fisttp cmp cmp clc iret fsubp xlat fnop (bad) fisubr iret jl dec sub cld out fistpll frstor fstpl fsubr push mov insb sahf out push fcomi push (bad) jo fcmovu jns iret repz pop sbb fmuls dec adc rorb cmpl add jns xlat push ds push cmp xlat and (bad) mov faddl mov cwtl jo sub repz lock aam aad push xchg addr16 insb dec and aam sahf out sahf aam mov mov iret out fs hlt rcrb inc sbb in fistpll out xchg push jns out push int3 movsb jl dec repz out add fsubrs iret dec sub clc aam iret mov sahf push mov cmp jle rolb mov iret dec sub int3 loopne or pop int3 lret rol mov cwtl ss xchg ss test mov jo out pop cmp ficom leave rolb test jl mov sahf pop dec and in loopne cmp repz pop dec xor jns out (bad) cld ror mov out pop inc sub jns lods jnp (bad) pop add xabort aam jns out lods cwtl cmpb repz add enter sbbb in mov ret mov push mov push push ds aam test iret repz je push inc ja int xor rcr ds inc rol cmp push ficomp sbb jo sahf ja clc push lock out mov inc les mov pushf mov cmp repz fs (bad) mov clc push enter adc out cmpsl mov sarb mov js push cmp repz inc xor pop iret repz mov jo xor cmp or in push aam ss repz jo cmp jns mov push insb push adc mov (bad) sbb andb sahf divl loopne cwtl xor out inc mov pop inc inc or (bad) outsl jns push sbb (bad) mov push les push mov repz mov mov iret mov sahf movsb je mov nop jo mov jle fadds jle xchg mov mov push pop iret cs mov jle mov iret (bad) mov mov push int3 into into iret mov xlat mov (bad) mov mov fcompp mov mov sub iret mov push xor sahf mov lods cld mov sahf out aam or mov and clc sub shrb adc ja into rep lcall pusha repz sti es pusha xor jns int test xchg pop and repz cmpsl call sbb out cmpsb lock cmp rep movsl lock or popf out movsb fcoms mov in push enter mov jns mov fs iret sti ficomp push int3 mov addr16 loopne mov sbbl sahf dec mov mov cwtl push pushf sarb repz jo fwait hlt test loopne,pt (bad) lcall addl repz lcall loopne xchg (bad) cwtl jbe mov xorb jl js sub jns jns call clc push int3 rep sahf out and clc loopne repz les addr16 adc sahf out mov rep sahf out or xchg clc in repz rol mov mov repz push dec xor iret repz xchg hlt push aam mov mov pusha dec outsl repz aaa xchg pop or nop lock test add loopne cwtl dec adc cmp (bad) lock mov cmp mov (bad) mov push test sahf repz xchg pusha repz out mov shlb (bad) mov (bad) adc mov cmp push mov mov pusha cmp out dec xor adc adc xlat in add push xchg add cwtl sahf addr16 sbb hlt rolb push cmp test (bad) iret sti into pause push pop add mov int3 (bad) rep (bad) clc aam iret out ja aaa (bad) pop jl movl hlt xorl movl jns iret and jg push jge jle push mov adc cmp mov in xchg insb out out xor outsb jl jnp push lods iret out sahf jl xor jp enter cmp xor jp push aaa lock jp push jns sahf int xor mov shlb ja fsubrs repz inc jbe push nop dec add out ss cwtl js sub rep je aam mov iret sti fcompp jae outsb jae jb push mov cmp jno les jns jno jo push xchg insb sub call les push iret rep sahf push dec adc enter imul adc push push mov push push jle in lods mov into mov or pusha sahf addr16 hlt mov ss cbtw push xor hlt loopne aas aaa gs nop ss sarl aaa mov arpl and bound popa lock enter out jnp popa js (bad) popa out pusha test mov add cmp pop loopne movsb scas pop enter cld fistp pop cwtl push js sub lock fistp (bad) pop addb (bad) pop out pop call minps pop pop mov xorb loopne,pn aas pop push inc cmp sti fiadd ficomp pop rolb (bad) mov mov jg push iret repz and pop in shl jns out cwtl subb pop cmp les jl mov dec pop es mov das pop pop push jbe push push iret repz xlat push xchg push rorb adc fadds cmp push push xchg push in in jns movsb mov push add push insb fidiv cwtl pop push push mov test into repz dec out ss push push sub cmp leave dec call jnp popf int dec hlt into dec es scas dec sahf aaa push dec rorb repnz (bad) dec jl add inc dec cmp (bad) adc jmp rep sahf data16 sub hlt fsub fnstcw mov mov cmpb repz push inc xchg push cwtl dec or out sahf fdivs clc cmp repz mov pusha adc out inc fdivrs inc loopne out cmp repz js sub mov jg iret cmpsb or xchg adc pusha iret out cmp aas mov out cmp cmp cmp cmp push js sti fidivr push cmp ds push mov cmp cmp cmp push mov (bad) cmp adc aaa rcrb inc push ss adcb js es push js cmp out xor mov sahf addr16 enter arpl (bad) xor xor int3 out cmp addb call sahf mov das in mov jns addr16 add cs js mov jns es (bad) out sub sub push lods mov or in push sub iret repz lock int3 pushf pop adc loopne cmp daa xor out cmp outsb fadds test cmp cmp dec sub and js mov ss push outsb and adc push fnstcw sti xchg and push jo adc mov cmp out and cwtl test out cmp pop cmp pop fadds les cmp lds outsb push lock in xchg out or ret into push sahf push push cmp jl push cmp push (bad) sbb push scas in lea out das sbb outsb aaa sbb nop mov sbb rorb das jbe (bad) (bad) lea sbb add sbb jns iret repz pushf push adc neg push sbb fildll sbb out jnp add pop lock test jge out pusha pop push lock cwtl iret rep sahf and inc pop cli sbb adc into divb add adc sahf je inc push out sahf int adc mov cmp adc mov daa xor mov push xor iret out adc jo loopne push clc fnstcw ja and or dec scas add cmpb or or jns or fadds jo or ret out mov ds push iret pop fstpt jge push lock movl popf popf in or pusha iret add xlat add out mov add mov fidivr fwait inc add xchg or iret out pop dec subb test out fbstp cld fadds mov sti test jns out cli inc cli stc enter mov enter int3 lahf add mov mov imul push mov push hlt sahf addr16 repz jge rep repnz icebp mov lock push xor out idivl out out rolb ss dec in fadds addr16 push in lock jmp int cmp pusha ljmp into ds mov call sahf addr16 out mov out fildll inc in in push mov iret jecxz nop loop,pt loop cs cmp loope push pushf sub fdivrs fnstcw fnop mov rorb imul push fucom fadd mov fsubl fcomi push addb loopne fisubl mov insl adc push push sbb mov xchg aam push addl lock loope rcrb or lods sahf push outsb aam lahf add jle or mov iret jnp (bad) ror push pushf cmp mov cwtl push rol push jo test jns iret xor into in pop addr16 sbb mov (bad) divl push inc mov jle js mov pusha push mov cld das mov dec lret inc lods pop fldl push pop inc push add nop push jbe nop jae sub mov sub and pushf add mov dec pusha (bad) aas and push imul fwait sub push sbb fs inc push pop arpl outsb xor jns rcrb scas clc fild jg xor xor aaa aaa sub das je xor cltd mov xor inc dec dec sbbb or cwtl (bad) punpckhwd dec (bad) pop dec pop sbb decl aad jo jg ja je push mov xchg cmp jmp pusha push mov fstps repz push jo push push popf out mov mov push inc push ss adc je iret divb cs sahf inc aas push pop inc mov mov aaa push sahf sarb xor pop nop push rcrb push lahf jns in in cs jg mov lock push loope push loopne loop,pn ds jns loop loop xor (bad) push fidivr pop cwtl inc cltd push cltd fidiv fist fidivr fbstp es (bad) cltd inc lcall fnstsw lahf adcb out popf adc in in cmp mov loopne add inc pusha jl mov aas cmp inc push inc mov inc sub es movsl sub insl jb je clc dec ja cwtl insb pop inc lock cmpsb shrl mov mov mov add jg insl ss jne lahf (bad) xchg and add inc outsb dec or testl or sbb aas push inc sti xchg jl cmp mov inc or testb inc or out out int3 push xor out adc pop adc push sbb push pop mov pop push mov nop outsl sub add cmp pop inc jo jb jbe sarb aam iret (bad) dec push push cmp xorb and aas ds addr16 aas add ja and aas dec push nop mov jns inc inc inc inc and inc xchg inc sahf (bad) push ss inc inc xlat cs xchg inc inc out loopne idivl ss inc cmp idivb inc inc loopne inc cmpsb inc inc aaa sti mov sahf inc dec adc dec sahf insb sahf negl xchg dec dec push dec or jns (bad) lods out push out push dec mov loopne dec mov jle jg jo scas fcompp jnp dec push push xorb push loopne fiadd flds push xor pop jnp sbb jo inc cs push sarb jbe lock rolb dec add mov ja fisubl push cmpb in cmp lock and push jns repz dec mov loopne adc dec adc bswap mov xchg addb xchg xchg pop jbe cmp arpl gs sahf cmp xchg (bad) ss xchg xor pusha push out cmp nop (bad) lock and or popf mov dec mov popf and mov arpl mov lock pop sbb pop je pop pop pusha into mov add jb les aas (bad) pop dec dec xchg aaa call nop aam add in cltd cwtl or push jl push call popa jbe cs js aaa aam std mov popa (bad) xchg test pop xor popa das daa adc aaa lods add push push bswap push xor out je outsl push jo gs adc xchg cwtl movsb pop aas or loopne add ja add jae fs nop outsb pop jge push lds mov jns add dec add outsb loopne mov mov (bad) mov mov cmp movsl push add sbb bound mov add mov xor inc in push mov adc xchg testl sub jae aaa (bad) inc xor cmp cld fs mov insl pop sub push inc imull loopne xchg in gs pop je add or loopne addr16 sub push jge out sahf push xor add hlt loopne push cmp mov pf2id pop insb adc dec xchg or push mov adc jg rolb add adc xlat xchg lds mov jb mov ret inc rol inc imul inc mov icebp daa inc pusha pop jno pop sub push push add sbb rcrl adc movsl shll addr16 outsl std ss pop sarl stos packssdw mov (bad) mov jae data16 jo inc add dec popa mov rcrb sbb mov xor add jbe xchg adc jl push fmuls push loope cltd mov add fwait cs testb aam scas faddl jg pop inc aam adc pop ds stos dec clc mov dec jg xchg pop sbb xor pop or xor wbinvd mov leave in or or xchg fisubrl adc pop adc xor jbe popf push addr16 das push xorps pop imull nop jbe mov (bad) icebp jb push pop in mov jb fsubrp test pop mov pop movsb fbld sbb pop pop or inc mov adc push bound out add lretw daa dec sub sub inc (bad) or push xor cmp cmp (bad) test fcoms mov jg imul movsb push (bad) jns jb,pt (bad) and movsl sbbl subb outsb mov dec cltd cmp lcall iret mov mov cld add mov jle adc mov push ficompl pop fisubrl xor xor cld rcr fsubp stc xor (bad) jle sahf out adc sti and and adc insb sahf out or cli cld hlt iret repz call sarb cmp mov cmp repz mov cmp nop test insb push fs repz push dec cmp fdivrs repz sbb stc cld mov dec push hlt out sahf out in in aam sahf out sahf les sahf out pop dec inc cmp fdivrl out and adc repz sti mov clc push lock addr16 mov push xchg test pusha dec cmp sub imul jbe and movsb mov push add add cli and psubusw outsb mov inc (bad) dec push outsl mov mov imul push dec jecxz out mov test jns pop inc add add shl dec das orb imulb or adc pop push pop adcl dec mov or pop ret pop add das ja sub push pop les mov aaa iret pop push jne xchg outsb and push sbb push or add scas mov mov xorl push dec cmpsb sbb inc xchg sbb xor loopne das pop hlt lds jns add and add or pop gs mov push xchg adc xchg push pop adc adc push test cmp imul inc sub sbb mov (bad) lret xchg das insl add inc jb addr16 popf popa arpl xor aad jo cmp xor inc in insb dec rclb nop sub and roll (bad) imull sub or fsts add mov inc sbb push popa sub repz push js repz pop dec xor add repz fadd mov js repz fs dec cmp sahf out cmp add in fdivrs movsb adcb push outsb add fsubp jns xor and add inc jns ja push aam push lods nop jl imul out fadds adc push push mov jg xchg ljmp loop mov inc cmp jo push (bad) or sub sbb jg push pop fnsave or jo xchg imul add mov mov lods movl inc insb pop insb (bad) lahf fiaddl push pop mov call dec dec pop add mov and cs imul fisubl dec imul mov std mov push lods roll add push stos push add or shrl or xchg ds add lods or xlat jbe xor mov push inc xchg jecxz or decl xor inc push fwait push or pop rorb inc and add and push sub push sub hlt mov add and add (bad) (bad) mov add cmp loopne mov or sub jg bound addr16 or jb xchg pop and (bad) sbb jg push pusha test mov push dec test and or movsl mov jmp inc outsl add inc dec repnz inc pushf or in ds ret mov adc pop stc and mov leave sbb jmp ret inc and sahf mov sub inc rcrb and sbb cmp (bad) incl xchg xlat xchg inc push add inc stc mov adc mov decl (bad) (bad) fistpl js inc outsl (bad) loopne jmp xchg test mov cmp inc mov fisttpll jmp stos push inc mov repnz test pop stos clc scas adc (bad) (bad) inc cli inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or (bad) (bad) (bad) incl dec dec pop inc in xchg cmp xor dec cmpsl in cmp sahf xchg pop (bad) (bad) (bad) (bad) lcall lock mov popa sar mov fsubs stos xchg clc repz mov sub outsb dec leave fwait xchg and and aas mov add sti aas jno or mov pop fs dec (bad) incl clc xchg outsb adc sbb pop pop mov das dec loopne icebp aas rorb and mov mov dec add imul (bad) mov ljmp or xchg mov into popa test ja stos in (bad) (bad) (bad) aas das dec pop loope les aas xchg les jne int mov addr16 (bad) (bad) (bad) lcall mov xchg aas and (bad) loop mov jp popa push pop sarl jl mov das adc push mov inc inc bound (bad) (bad) (bad) jmp sub jge mov inc rcr push arpl int3 and call (bad) (bad) (bad) cli cmp jp and cmp mov cmp std xlat cmp mov sbb (bad) (bad) jmp inc inc pop mov jne fldt cmp jno shlb (bad) out dec nop pop cmp (bad) (bad) (bad) (bad) fisubl xor push lahf inc pop mov sub dec in ss push scas into imul pop add rcr jge call mov xchg cmp push andl dec dec gs std orl in xchg jge pop ficomp frstor and or sbb mov add push mov dec xlat aaa and add sbb mov push or popa inc imul jnp mov (bad) pop fs mov sbb sbb xchg and pop mov test sbb jb mov js mov adc jb enter or or inc mov sbb sbb jb enter push sub and inc mov and sbb sbb mov add adc adcb add nop xchg adc lods or xchg iret add pop js mov fnstenv enter inc and popaw jo push (bad) cmp inc inc adc addr16 xor inc xchg inc push bound lahf bound loope adc jns out push sahf xlat fldl sysenter push and pop xor fstpl dec out mov dec adc push adcl pushf movsl data16 inc dec push cmpsb sbb inc inc push and adc and je push addr16 push pusha push dec ja sbbl (bad) adc push mov add pop sahf jae popa jo inc ret scas into arpl ret pop adc inc push inc dec push push add (bad) sbb lcall xor sbb push fs cs pop xchg and popa jne jl dec inc xlat sbb (bad) xor adc outsb jne ja cs movsb xchg jo orb rol push inc dec fsubl data16 push inc inc cs add inc and inc je and jl dec inc push dec out pop (bad) lds xchg lahf loopne std xchg jo inc pop inc mov jle sub sbb (bad) pushl fwait or les je and adc jmp ds (bad) jmp (bad) popa arpl movsl loope fdiv pop pop lock and and mov push (bad) (bad) (bad) (bad) cmp daa mov mov sub insb push addr16 call xorl (bad) (bad) (bad) incl outsl sub icebp lea jecxz (bad) push adc cld in mov pop ljmp stc pop lahf fiaddl shll cmp aaa jg scas imul mov (bad) (bad) jl add sbb jp lods mov add mov ret jge (bad) (bad) dec (bad) push mov xchg rclb mov sbb mov mov lcall test xor mov hlt dec sub rcrl (bad) fildll push (bad) (bad) (bad) (bad) in pusha inc sqrtps sbb jmp adc insl leave and sbb push test (bad) (bad) call movsb mov xor pop inc pop dec stos pop or mov fcoml adc (bad) jg incl cmp add dec out xor enter ret dec sti scas dec (bad) (bad) (bad) decl xor cmp std and and stc xchg cmp dec fiaddl pop add and (bad) (bad) ds push fstps outsl push xchg mov inc and (bad) mov nop lds fs aad adc fdivrs shr (bad) xchg mov shrl or int jbe ret rcrl and mov cmc (bad) (bad) jmp out icebp mov in out adc fnstsw sub jg (bad) jno clc aas sub cld (bad) lcall push jns cld into mov in sub mov jae divl testl sbb or and into dec dec lea and enter ds and push cmpsb test pop xchg cmp inc sti push push idiv dec or xor (bad) iret pop add out xor cvtps2pd fldcw fs imul int3 fnstsw pop add xor xor inc das or and or and pop incl inc jae fsubr mov ds gs fdivl pop xor pop sti add xor enter pop xor mulb mov ds add mov insl fstpt pop rorb xor adc xor sbb pop test push fisubl sub ds cltd cmpsl das shlb lea jnp ja dec xor xor inc fisubrl test jns push xor inc pop insl fcomps xor pusha in inc arpl or xor xor sbb insl xor leave insl (bad) mov dec call jge xor dec add cmp push xor insb or cmp ds mov xorl and mov or cmp mov xor xor xor cmp xor pop hlt inc push xor cmp and xor call adc push loopne fadd imul cmp in lcall imul pop sub or jb ss cmpsb imul jb pop adc aaa push xlat int3 lcall xchg js inc push data16 shrl pop add push xor imul cmpsb pop adc xor cmp xor imul (bad) je jo xor or push xor sbb imul cmp jl imul pop add xor es sbb adc imul xor scas cmp xor push in xor fsubl sbb loopne ss movsb mov scas andb pop pusha pop and sbb cmp sbb push incb ret rolb imul or gs mov xorb sarl xor cmp scas bound xor sbb xor adc jo int3 or insb imul loope xchg xor imul or xor into sbb mov pop cmpsb xor fmuls scas mov push pusha data16 xor rorl sbb imul and in push loop push data16 idivb rorl jbe fidivl imul add push mov ss xor popf insb dec in imul sub rorb xor push push xchg and (bad) ret pop inc or imul add loop mov or pop push and popa jne cmp cmp push testb imul push sub sub adc pop pusha imul (bad) mov adc cmp (bad) xchg imul lret cmp mov ljmp mov xor imul xor into lods fmuls je mov xor add cmp sbb jb rol jo sub xor xor stos xor aaa mov or fnop lret sub (bad) mov aad (bad) or addl loopne rorb or cmpsl xlat dec mov test xor dec loopne lods pop inc xor (bad) lods adc sti sahf aaa imul mov cmpb push jo sub bound mov and scas jl scas (bad) add sbb repz push es push inc xchg jbe imul cmp dec aaa pop sub sub ds dec aaa adc cmp pushf rolb add or (bad) (bad) insb mov xorb or inc push or and jbe bound in push cmp arpl stos jmp and test mov imul push lret add sti stos orl js add ret pop push lea insb popa jo and movsb and push xor xor sarb and push mov mov or fisub cmp jp imul aad das inc sbb imul jo cmp jo ret (bad) sbb cwtl int3 imul mov loope cmp cli outsb add push or mov in adc out imul and ss scas add mov sbb sbb outsl imul mov add loope ret pop (bad) add xor adc imul sbb inc mov mov xchg ret inc xor fadds das inc sbb jbe xor and imul test stos cmp ret dec loopne xlat mov cmp ss mov jo lcall xchg insb lcall push outsb imul jbe into (bad) cmp pop popl mov lcall imul imul xor and push xor call xor jno push vpmulhuw lret dec xor jbe sbb xor data16 jne pop add rcll adc (bad) sub adc sub (bad) jne test mov cmp (bad) or or or jne jo adc ss xorb jle add cs pushf sbb enter inc pop cmp movsb or mov mov lods cltd fs popf inc adc or fsubrp jb test mov dec push sub hlt xchg jb add jmp bound adc inc push jo jecxz stc push movb xor ds aam dec repz xchg imul sbb add imul es imul mov ljmp mov (bad) sbb mov cmp adc pusha es xor xor or dec cmp int3 out xor subl xor mov pusha mov cwtl or fmuls mov or cmp mov push cmc lods pusha push outsl imul jmp and sbb or cs sbb xlat ret sbb xor lcall cmp les push pop mov push push cmp cmp inc cmp push outsb push cmp sbb popa enter jmp out sbb test lcall shlb xchg add cs fs xlat sbb cmp or (bad) dec xchg mov test adc js jl lods mov mov pusha orb push lods js adc rol add fidivl sub cmp add fbld mov imul add std add and push sub (bad) gs int orl jno arpl mov outsl and mov lahf imul enter ljmp xlat incb xor adc cld push cmp inc pusha addr16 stos bound sbb stos push jo mov scas sbb movsb loopne add mov call and add or data16 je cld xor push mov lods inc push ja xchg repnz out popf ret xlat cmp nop aam xchg push pop jp jmp and mov jl jo pop cmp jo sub imul or push ljmp lds or insb aad aaa shrb jo pop clc dec je lock xor dec cmp lock cltd dec adc (bad) mov faddl push cmp push push imul data16 xor mov insb xor fdivs jb jb ret or push notb add mov (bad) jmp incb add ret (bad) dec add adc jle mov int3 test vcvtps2pd movsb dec push cmp pushf xor adc cltd or (bad) lods cmp push imul sub inc sub adc or loope stos popa and or test push push das cmpsl mov xchg add int3 test imul mov inc insb leave mov rcll push sub dec jmp test push imul xchg lcall sbb mov pop mov mov outsb popa addl cmp push ret or xlat fidiv sub fsubr andb imul mov adc cmp dec or jp push pusha mov pusha dec aam mov pop cmp out xor mov mov xchg add jbe push movsb xor add pop outsb jbe gs into in mov fs ret sub rcl orl cmp xchg aaa mov or test rdtsc jo daa ret hlt cmp pop sbb adc pop inc lds xor inc jne jl adc hlt js mov ret add sub int3 adc loopne sub pushf dec popf pop lds inc mov cwtl xor insl cltd cmp cmp dec or sarb add and popf je xorb xor cmp nop cmpsb test cmp xor ret xor insl xor inc mov add adc sub push cltd xor jl fdivs addl push mov mov imul jmp lock repnz aad adc sbb jp xchg roll sub cmp adc inc lds and popf or pushw fisubr push sbb es inc mov cs mov insb mov imul or push jle mov xchg lds xlat call xchg sbb rorb lods push dec push in add add pop push push data16 fwait add shrl xor or dec dec sbb lret out (bad) adc sub movsl sbb or dec imul data16 popa or iret and xor xor (bad) enter xor xchg xchg cmp lods hlt loop xchg xor sbb pop lret mov inc push inc mov movsl pushaw xchg dec lods mov add pusha xor push lret into sbb pop int3 pop cmp pop sahf push test mov dec or or lea lods and sbb dec out test or push mov xchg mov push pushf insl push rclb das les bound and hlt setno xor xor pusha push inc adc mov sbb (bad) add xchg aaa or sub fwait out hlt add aaa sub mov repz hlt push mov cmp sbb adc test xor add pushf rorl mov aad mov loop xor jno dec xor in inc mov movsl xchg and sub rorb jp stos push inc test loop pushf xor push or pushf sbb pop movsb inc push sub sbb pop lock pusha add xchg aam insb inc int and dec push add xchg add or mov and (bad) mov sbb rolb xor loopne bound jo (bad) mov inc and xchg and test xor dec cmpb std (bad) cs test jecxz inc push out movsl loope repnz lock (bad) stos cmp movsl or arpl sbb adc imul mov inc cmp jae push mov sbbl xor push loope aad cmp and or sbb and sbb loopne add stos test outsb mov adcl adc mov mov mov mov stos inc out fmull push and rcrl les (bad) pop xor ss loopne pusha mov mov xor arpl sbb adc test int3 mov adc and mov test (bad) dec pop lods inc icebp jb mov lret push inc or popa and ficom pop sbb push mov roll inc pop cmp or push adc pop jo cltd mov roll shrb xor mov cmp inc iret sub or mov xor mov shrb mov pop cld sbb mov adc mov or out sbb (bad) jo or pop cmp adc push or hlt push nop sbb add out aas test mov shlb mov inc sbb mov ljmp scas xor or and popa shr pop sbb add mov pop pop mov outsb sub (bad) enter ret mov mov push loop adc jno sub cmp and std add xchg lea xchg lods cli ljmp imul add or dec ret test inc lock and and adc add sahf xor cs (bad) scas and dec xchg int3 inc stos push inc sbb cmpsl pop xchg xor scas and es sbbb sbb call jge xor inc or pusha arpl cwtl lea es sub arpl mov xchg sbb lret sub jp in movsb xchg or imul mov rolb dec cmpsl scas xchg push dec into mov mov movb das fstps push mov loopne pop mov icebp (bad) sbb je test sbb adc sub (bad) xchg sbb aaa loop add out xchg test sbb rcr jnp sbb das enter dec outsl pusha mov insl adc mov push jno xchg pusha addb ja xor and mov sbb sub and orb jo cmpsb adc icebp and ret add push movsl adc and xchg push add dec (bad) xchg or cmpsb mov mov xor movsb adc push dec and push inc imul cltd mov xchg test xor mulb inc in imul call or movb adc mov cwtl aad imul push add sbb or loopne pop loope adc jo fidiv addr16 xor pop mov push addl inc cwtl (bad) ret es push and mov jb cmp adc imul pop xor add or stos adc or pop add push lea jl rcl inc outsb loop cmp or sbb loopne mov xor adc stos std cmp es test mov jl dec dec pushf inc es mov push dec aaa xor xchg push test dec mov xor lcall or (bad) jb adc dec mov ret add jg jo pop sbb enter arpl xlat xor jle jecxz or ret into ljmp cmp sub into xchg rcll or lods imul orb sub sahf scas inc pusha gs cs dec test xchg push mov mov dec inc ret test aam fldt imul inc add cmpl loopne adc jecxz sub ret rorl ret mov dec add inc mov cltd jmp sbb adc adc ss movb add adc cmp (bad) fsubp xor ret popa mov pop jecxz aaa sub (bad) cwtl or mov dec adc adc ss sbbl and nop je push lods divl ret mov fnop (bad) lods test (bad) fdivrs cmovle test and xor dec mov inc cltd sbb loop or pusha inc fadds sub imul icebp in popa mov push xchg mov xor bound fisubrl or lock add or popf add xor stos mov aaa sarb sbb jmp jne xor jb ss rclb mov jno mov adc xchg cwtl and in pusha (bad) shrb xchg sub aad dec mov xor push push mov inc fstpt push popa clc push aaa adc (bad) out xor push mov pop mov sbb dec xor mov add and mov push push xor jo mov popa arpl cmp jnp inc test xor inc lock jne sub xlat inc (bad) mov mov cmpsl xor pop dec mov xor arpl fs int3 ret push lock (bad) lock ss xlat enter in imul adc mov xor pushf inc cmp cli test sub jecxz fstpl mov mov scas adc leave lods mov into xor cmp inc inc sbb xchg call fiadd dec test adc movb mov xor mov dec sbb push adc mov sub subl test pop andb insl pop inc sub push stos ljmp ss push ljmp movsb push sbb mov imul xor ss cli jns into adcb adc push cmp dec gs xlat out xchg (bad) cmp sbb sub and push imul (bad) xor sub int3 xchg aad mov xchg addl int3 aad xchg add push mov (bad) push (bad) xor sub adc mov scas or scas shrl dec add adc mov imul push push cmp adc fidiv inc pop xor push xor adc pop xor enter xor sub mov or or sbb lcall push mov mov pop ret mov pusha dec shrb (bad) push add xor out xor push and push scas and inc push lods rcr (bad) add push and test xor arpl leave push pop or scas (bad) (bad) and and sub xor test adc pop inc mov sbb loop cmpsb and iret outsl push mov inc or jns push je add inc or mov out push or push aaa outsl adc or gs pusha push mov ret add inc push (bad) mov scas mov sbb or imul or push inc mov je xchg jnp cmc and imul or adc or stos adc add mov mov or xor mov and xor sbb sbb dec adc and jo insb (bad) rcll test pop jmp test sub push add adc aad (bad) add outsl (bad) xchg push shrb aam ljmp and dec mov cmp sar pusha jno outsl jne push sbbb (bad) jo inc sub mov cwtl shll xchg mov imul mov or fsubrl add add fildl push cmp push push cwtl les cmp sub adc jmp sub pop jb xchg mov xor lds popa mov or mov popa lock inc shlb push xor jo in or and loop or mov xor mov sti rcrb cmpsb pop mov pop dec movsl sub xchg sbb and js add dec xchg pop pop loope jns cmp adc sbb mov movsb xor mov lock int3 add rolb fimul out out fnstcw nop and sbb call cmp lahf les daa xor mov lret dec fmull adc or jmp (bad) pop push insb push dec lret push cmp inc add inc test xchg gs pusha in fsubl arpl dec push inc push in lods loope into loopne pushf mov or add pop dec add inc xor sub cmp jmp dec mov cmp pop mov movsb push cs adcb sbb pop shr xor lds test outsl mov cwtl pop and dec cmp adc test adc stos or xor hlt ret xor and dec aaa call push adc cmp adc and mov loope mov xor out xor lret push popa outsl dec int3 test dec push dec inc repnz test xchg cmpsb cmpsl fs or jecxz cwtl or ret and or mov loop jmp cmp dec insb or ficoml inc adc xor fsubs ja or clc jmp popa or insb js test enter mov push xchg (bad) cmp xor in dec fisttp insb pop outsb out (bad) arpl add or aad and ret cmc stos and adc movsb or jp xor subl push scas or lods aam push cmpl fsubs sub adc adc xchg out sub mov pushf or push sub mov flds push lods sub orb adc (bad) shll jecxz jbe loope or push lds lea cvtdq2ps add in negb rcrl cmp cs mov jo adc and push (bad) jmp jo pusha mov adc subl mov orl mov cmp call ret nop inc inc loop xchg add push je movsb cmp sub mov xor popf scas push jb jno leave mov xor pop repnz jbe xor add add cmp cmpl call jp mov jbe ror loopne call das xchg adc push lds dec dec jb (bad) fnstenv sub lods mov adcb inc les mulb popf pop lods mov push or pushf dec push xor cwtl lcall fcmove push (bad) jno (bad) fnop and fdivrs outsl jo push adc dec int3 push outsl add sub or dec inc mov cmp push pop ficompl xchg pop pop adc enter mov bound mov xor mov xorl ss test enter imul push pushw mov clc (bad) xchg pusha mov add xor rcl and cmp adc dec xor cmp jo xor je xchg roll mov cmpb loopne rclb adcb xlat leave inc cmp xchg xor adc into sub mov mov sahf test aaa sahf and mov aam xor roll push adc xchg lods sub iret xor (bad) adc lret ret or incb inc movsl push push add fs aam into mov sub or and pop stos mov mov push jo sbb rolb xchg adc mov outsb das push cmp lret aam xchg fimul and xchg or sahf test add push or ljmp int3 addl sbb or jnp cld ljmp out lods mov cmc jmp rorb je push xor imull insb sbb insl and gs jp cld sbb push add mov cmp and orl cwtl fdivs rolb mov or pop mov imul or inc imul mov (bad) test into shlb sub push add pop fistpl adc mov pop mov pop push cmpsl rcrl or mov daa or sub inc push int3 fist imul sbb mov and sbb mov xor loopne and jno xchg mov scas push gs stos (bad) xor pushf xchg popa and xchg bound (bad) or in mov bound (bad) ljmp or divb push pushf mov bound cmp mov mov cmpb bound jae add inc mov ss push mov sbb addr16 adc icebp sbb and lcall mov les jo sbb push adc sbb data16 and leave ss fwait sbb fbstp fstp push loope mov test xchg cwtl dec fildll jo movsb repnz pop xchg movsb sub sub inc adc loope fiaddl shll into mov in xor add push dec mov pop jle push add jbe loopne pop negb lods scas add or jns jecxz mov and mov add lea mov fmull xor jae adcl lods int3 inc fidiv aaa ss hlt outsl mov sub movsb jbe ss sbbl fldl pop dec cmpsl dec pop ror and cmp adcb sbb or loope call adc add xchg dec test mov test pop mov mov or bound dec pop cmpsl inc mov sbb js sub addr16 and fucomip je daa lods outsl into dec jno mov test cwtl sub push popa hlt mov push rorb pop sub ljmp insb and xchg xor add mov lret movsl (bad) jno (bad) sub lds repnz dec ss (bad) or cmp pop add test call push fimul outsb ss jp (bad) or xchg int3 into outsb add cmp mov nop fnclex es push loope or push cmp and je sbb sub jo maskmovq testl out sub xchg xchg pop xchg (bad) pusha lods and and movb popf xor pop mov jecxz pop xchg cld and mov mov jns lods adc sbb add mov mov popa mov int adc inc inc or fsub insl (bad) leave and loopne pop add inc jp xor rolb push dec xor les sbb mov imul cmp mov (bad) loopne pop aad cmp jl xor pop xchg subl cs jecxz or (bad) nop push pushf jno inc pop (bad) sub adc sbb fcompl jecxz pusha mov adc enter sbb out shrb inc and cld rcrb es fcomp mov and cld push pop sbb jbe add mov cmp pop jbe push pop insb or pop mov jmp (bad) pop cmp aas test dec mov push ja jo add add mov and pop rolb cmc or mov pop shll and scas adc mov mov mov rorb rolb push cmp je fs sbb push xor fdivrl int3 pop fdivrl sbb xor leavew pop aam mov aad nop nop pop sbb sub arpl pop or xchg pop ret sbb fs add jo and ret (bad) inc popa outsb sbb addl dec adc shl push ss mov and ds or dec fdivrl xchg outsl pop push sbb ja ret js xor jnp rorb or push mov int3 mov pop cmp push inc mov cs dec inc cmpl mov pop jo loopne insb aad into mov fidivr inc mov pusha jl aam cmp adc and cmp mov aam sti mov mov dec test jmp and in (bad) shll cs lods outsb xchg dec gs stos cmp loope aad mov cmpsl xchg xor mov add adc and sbbb out ret push mov ret xor mov jne cli jecxz cs dec lods pushf andl test lods rclb adc inc mov loop push jnp outsb pop shll push out ret mov xchg stos loopne pop or aam xor inc (bad) fmuls stos fsubs push push mov imul aam lret je push ret sahf mov mov aaa jo pusha adc sbb out push jb dec into sbb sub aam mov cmpsb popa ss cmp dec mov inc loopne lock push pop or sbb sub movsl call lods dec xor xor xor test push mov roll ljmp popa pop outsb mov xchg add mov insb dec xchg or cmc xor mov cwtl sbb test and dec lods ret (bad) xchg mov mov insl add cmp cli xchg sub or mov mov xchg sub je shlb adc outsb mov xor adc sub inc sub fsubp sahf cmp add les repnz add push push add in jg push das dec gs outsb ss rcrb das (bad) (bad) or jno xor cltd and mov or mov fmull jb push adc mov xor and clc or cwtl xchg pop arpl xchg inc data16 ret bound fiaddl jbe adc mov mov jl or mov nop bound (bad) xor fs pushf push inc mov pop xor add lret test into pop add and pusha dec popa pop hlt add jb sub inc and arpl adc mov in adc mov sbb xor ret mov pop mov rorb popa pusha jo mov add adc mov int push xchg test ljmp cs into or jl bound jb cmp xor js or pusha dec call xor hlt (bad) fcoms adc dec push add jno jge add and addr16 push and cwtl imul mov addl pusha sbb sbb inc dec xchg xlat std add addb sbb xor mov mov hlt mov pop popf or push movsb cmp mov mov das xchg decb cmp adc sbbl movsl aam loopne stos adc push pop or loope sub std sbb (bad) pop xor mov push popa mov sub jbe lcall mov (bad) xor add dec xor add add cmpsl mov jnp mov call xlat fnstenv out adc cmp hlt nop and sub fcompl mov ret cmpb movsb mov or movsb rorl xchg gs lret cld jb mov ss xchg nop add cmp push add dec inc cmp cmp mov adc mov sbb pop sub or or mov je push stos xchg pop add push jecxz cmc xlat add mov push rsqrtps pop lret push cmp add loopne mov cmp decl adc loopne shrb rcrb xlat roll out int3 jp cmp and lea ret add aaa idivl push xor cmp movsl jnp push xor outsb aam cmp sub mov push rclb push jmp pusha jo nop inc pop loop pop stos xor push xor or add xchg mov mov sub loopne movsl xchg imul push pop lcall mov jno sbb out out cs mov test dec fs push cmp outsb xor das insb xor movsb (bad) push jo xlat xor out into dec pop jo cmp or enter rolb xchg lods fcoml inc jge and adc dec out inc scas addl mov (bad) jle or push xchg fcoms xor mov push push or inc test mov fiadd xchg int3 add lods out cmpsb or sbb mov ljmp inc or cli pushf dec (bad) lock jmp xor push jo mov pop test xchg rcrl sarb dec repz rolb inc jl cmp mov adc test cmp mov jecxz dec xor add sbb xchg scas mov xor loop and movsl mov call xor push loop xchg aam adc fsubrs je mov xchg or movsl inc pop insb in inc mov int rcrl push (bad) push add mov (bad) or xchg cmp ret push test mov fidiv test sub aaa loopne and lock cmp xorl adc sub push inc xchg addr16 pusha je mov jnp call (bad) je and aaa cmp cmpsb divb stos (bad) xor push movsb mov fdivrl scas or test mov adc cmp shrb sbb mov push and aad ss lret cmp loope and push cli inc pop push cmp add cmp and adc xchg sbb cld cmp outsb ret das sbb aaa xchg jns dec xchg jo mov pop ret inc or xchg add adc mov shlb add roll push out stos xchg push adc daa sub add cmp mov not cmp mov cmpb xchg pusha add mov popf jo jp in sbb pop mov pusha xor lds fs xor test hlt imul mov jge adc lds push jle xor xchg or xor push dec lods cli sub or push mov lds shlb inc xor lds sbb test pushf rorb or es (bad) ljmp dec movsb test loop nop mov stos cmpsl ss pop mov pop ret pop or ret sub fwait dec out sub push push pop add sub dec scas enter mov push pop insb jne inc xor mov or fdivrl xor or lret inc (bad) xor cmp mov xchg aam roll fcoms push push rcrb mov fsubs les outsl popa jo sarb (bad) and ret mov mov sbb and (bad) jno lcall stos ja ret adc xchg ja push cmpsl xchg jmp rclb mov pop push sbb and pusha adc sub movaps xor mov test mov inc and popa or add push rolb mov pushf adc xor adc add dec xchg pop adc sub mov cmp jo (bad) jg call sub or rcrl mov iret and inc dec xchg sbb mov push jo mov jl mov push inc clc dec jo popa les and cmp push js add addb adc pop push push push xor cmc cmp add xchg adc rorb pushf add dec mov hlt ds sub (bad) idivl mov mov jmp inc xchg inc sbb push (bad) cmc sbb jecxz ret in arpl daa pop adc daa andb jmp inc push xchg sbb sbb mov push movsb xorl (bad) out aaa push cmp lds loope mov xchg lock movb jo inc inc mov and or push jmp add and loop jnp adc inc adc lods sub pop lret xchg test sbb test (bad) in aas cmp pop push xor test xchg xchg mov pop sub jge adc ss pop dec sub das test pop mov repz inc and outsb inc mov xor adc je lods imul ret jno ljmp mov enter mov bound repz and loope jp fistp and pushf pusha xchg cmpsb leave sbb inc xchg ss mov lods sbb mov lock push sbb or push xor add out push inc outsb xor or push jle mov cltd xor push bound ds test push xchg pop int3 test adc fiadd or jo movsb mov ljmp push mov rcr es push sub sbb or lods or add mov mov cmp or and in movsl repnz push enter adc pop icebp cld sub mov mov add (bad) cmp jb je cmc xchg and add mov pop mov add cmp jne and sub mov incl icebp add ss int cwtl mov test rolb jo,pt ret inc out shrb mov mov ljmp les mov or push scas xor xor scas sbb addl out xor loop xchg mov push test scas or pusha and or rolb cmp cmp xor xor cmp adc das out fimull subl sbb push dec inc movb scas mov adc push xor dec aam mov arpl or sub mov outsl pop xor aas lods push imul sbb mov pop or mov lds xchg lahf lret add cmpsl mov cmp xchg rclb or lcall adc and or add mov shrb es xor jb in pop test fisubrl test lods insb mov loopne in or pop in (bad) fistpll loop sbb mov xor xor popa cmc pusha xor enter xor add (bad) sbb cmp pop sbb sub xor shlb jne xchg rorl add ljmp jecxz xor add lds popa jns dec mov inc sub cmc int3 add cmp in loopne push fldenv sub dec or jb jns xor dec mov test (bad) out xchg jmp xchg jle mov ds jmp jb xor mov mov shlb xlat jl inc rcl xor in sti loope sub loope (bad) xor cmpb push lods or inc rclb jecxz and aam or loope adcb push in test cmpsl sub popa (bad) shr fdivs mov mov subl push adc xor add lds pop cwtl bound scas imul (bad) (bad) add lods fsub mov mov fwait add dec cli ffreep rcrb ret in add mov test push rorb js mov jno pop sub fdivrl xor push mov call xor inc add lods mov xchg dec mov ds test xor lods or loop sbb mov cmp addr16 lods mov mov xor xor adc pop adc je test xor sub imul adc shrl jl cvtps2pi mov daa mov test pop jp and pop pop js adc cmp mov (bad) ficom and (bad) xor adc and int3 mov mov adc pushf adc ss jno lea (bad) push and stos xor sbb stos xchg mov and cmp push sub and je mov es mov int3 outsl dec sbb jno sahf jmp cmpsb xor xor xor (bad) push cmp ret mov sbb insb pop cmpsl aaa push out mov lods loope sbb push pop fmuls loopne mov dec push scas pushf out add sbb inc lock fsubrl dec xor bound dec cmp sub test mov ficom lds mov xchg inc imul jo adc and lock push cmp cmp cwtl jbe and push push pop out lea cmpsb pop dec fdivs jl sub cmp mov out or and enter adc js loopne push pop sahf adc push iret in test xor ret inc insl cmp ret push jne pop ret cs inc subb mov push (bad) bound jb or mov pop add lea xlat adc fmul movb mov sub pusha test mov mov jp inc or lcall inc call pop pop or loop push loope and mov nop jle mov mov mov aaa addl fbld cwtl (bad) lret mov dec repnz hlt xor popa mov mov sahf dec jne ret stos xor xor sub ret (bad) pop and rolb es sub loopne popf or fdivrs insb pop xor xor (bad) les (bad) test in out dec daa sub jp lds into ret bound arpl or scas es sysexit lret jecxz sub push outsb arpl ret mov xchg add rolb les arpl (bad) mov mov rorl and xlat aam adc adc adc cmp or pushf bound dec sbb push test ret cmp lock push sbb lret mov or rcl sbb (bad) jo cli push cmpb daa mov add inc mov test and sbb mov xor sbb adc (bad) jo sbbb lock add and in xor mov ret adc rol push xchg test xchg inc addr16 mov mov inc dec or in pushf cmp push sub roll inc pop test inc adcb imul cmp mov jns shll leave bound lods test adc sub and and push xchg stc add aaa push daa push pushf lret aam add mov je add lods aaa pop sbb enter (bad) popf add adc add or pop dec mov adc adc lcall mov pop sbb jns xor add or notb rcrb inc mov test add jp rcrl xor ret arpl sub loopne or cmp insb mov or fmuls js int pop cmp out arpl inc cmp icebp fxch pop (bad) cmp ss mov (bad) mov xlat push js gs test sbb jo mov sub (bad) or pusha ret jae and inc cmp adc add sarb int sub jp or push mov rolb mov add xor xor add pop int3 insl bound daa into xor iret cmp cmp (bad) gs mov movl inc movsl xchg cli popa cmpsl xchg ret scas xchg push (bad) push mov dec adc (bad) inc (bad) jo lds pop xor adc adc fwait test or js push inc xor adc mov adc imul add push sbb mov test inc or add outsb cmp inc jmp insl stos sub ret fisubl gs pop (bad) adcl cmp mov add movsb orl (bad) call adc xor jo mov mov sbb pop sbb arpl insl cs gs std loopne or inc push xchg sub addb outsb adc sbb cmp inc popl insl mov add test xchg xor jne or movsb or (bad) out and sbb push xor lret sbb inc bound rcrb add js adc call mov inc aaa sbb dec imul jno bound (bad) lret (bad) mov pop add (bad) xor ret jg test mov inc adc cltd pop sbb mov mov ret subl sub and push cmp into lea outsb scas adc sub enter sub push push test loopne and xor pop jecxz and bound push push push inc enter add movb inc popa xor fdivl cs sub jno stos dec sub and adc test movsl xor xchg sbb or sub into sbb in xor push cld or and xchg adc insb inc lods lock movsb and push add dec repnz stos sub xlat insb (bad) cmp mov xor int3 sub rol dec push (bad) xor leave add dec imul adc lods test pop xchg rcrl orl sbb cmp or pop push fwait cmp nop mov cmp lds gs sub ret daa push cmp xor negb shlb add push mov adc fs ret cmpl lea nop xor repnz out inc pop or mov js or push in push dec adc imul xor xor aaa into sub loope into (bad) sub push pop or andl sti pusha adc or rorb cmp xchg push jb sarb (bad) nop pop fs mov insb scas ss fistp push xchg and test test mov dec mov fdivrl arpl mov aam lea push cmpsl push xorb cmpsb and push mov or cmp push repnz sbb shld lret push mov dec sub rolb test sub and js fisubr sbb or cmp pop xchg fwait pop push pop sbb mov mov mov dec inc inc setge test mov and ret xchg lcall insl arpl adc and bound add adc sub mov jo (bad) pop mov (bad) dec sub fstps or push or xchg imul cmp out sbb jb adc (bad) flds adc lods mov out rcrb shrb or sbb and (bad) dec lea stos shl (bad) sub popa pop nop mov test xor cmp in push sbb mov push loop adc lods je and or bound decl mov sbb push mov jmp andl mov or in pusha mov mov xor xchg mov jecxz adc repnz js cmp lcall or sbbl and je es imul hlt inc pop roll pop mov xchg fs sub jbe ds push les mov (bad) fisubl inc xchg pop jbe syscall stos je inc popl cmp mov je clc scas push in lea jno xchg xorb sub loopne sub js pusha jo jl into or or inc (bad) mov xor popf bnd xor and js mov cmp sub aaa aam push and nop mov cmc pop ss sub inc mov sub lods aas dec jecxz add sbb pop test dec mov dec loopne xlat add addr16 pop add dec leave xor xor fidiv mov insl inc movsb sbb or arpl inc frstor lret insb or (bad) lock js cmpsb fwait test mov cli or cmp sub movsb ret inc and call les jl inc dec xchg (bad) cmp jle (bad) rol dec cld mov xchg push mov test jne lods std sbb mov mov push and push jo pop cmp push jno gs sbb das xor lods fiadd xchg je xor rorl ret paddusw or and repz sub cmp add adc repnz roll jp pushf sbb or push fwait ret ljmp sbb das in push pop dec mov sbb adc js (bad) mov pop mov xor adcl cmpsb mov test adc xor jl scas or imul subl jb sbb out pop fmuls (bad) rclb es sub xor data16 xor (bad) fistl mov adc ret adc lock push sbb xorl and xor xor xchg sub nop pop sub lea fnsave sbb lods sbb (bad) fisttpl or or adc sub xor testb les test xchg lods push cmpsl lock aam pop inc xchg push sbb nop pusha push add gs fcmovne int3 ret mov mov aas mov in cmpsb push sub ljmp jmp xor push dec sub or sub mov push pushf divb xor mov ss sbb or sub push sbb sbb lock push add and stos cmp mov clc add ret lcall cmp push aaa fdivl and loop gs dec cmpsb lock mov adc les ficomp popa jg shlb ljmp ret popa (bad) mov xor popa mov pop fcoms jno sbb jecxz cmp mov xor and mov test xor add daa fs popa orb mov mov inc pusha movsb mov aam mov (bad) (bad) pop enter jo repnz or fwait mov push jae flds movsb mov je push loope fmul xor arpl jo push sbb jno pop mov enter adc scas lds push push push js jno xor in les imul pop out int3 adc push sub ret mov dec or arpl xor leave pop add outsb je das adc test push enter sbb mov xor ds pop mov cmp dec xlat les or xor ds sub jns divl sbb out adc rorb fmuls fmull mov pop fimul popa popa jge xchg sbb sahf mov mov enter cmc test mov mov sub call add mov or jno and les cwtl xor mov (bad) jecxz jb loopne push sbb cmc xor arpl dec pop or xor add jnp in sarb sbb call movsb mov daa imul and aad pushf lods addl or ret sub mov addb sbb xchg jb dec les or mov stos pushf and cmp inc jmp fadds arpl insb (bad) jl mov or icebp int3 (bad) sbb jo lret push jmp mov mov outsb fs mov push imul hlt push adc sbb sbb sub test movsl sbb add test loopne mov mov sbb push mov js cmp push jno aam xchg and ret clc adc and rolb xchg int and insl sub insb push mov repz fs (bad) pop (bad) push cmp inc lret lret cmp sbb adc (bad) cwtl out mov cmpsb mov push repz cmp mov (bad) mov mov lahf rorl sub dec mov daa shrb sub adcb pusha push pop ss insl popa arpl sbb das push ret aam inc sahf and sub push sbb repnz test loopne cli adc mov cmp xchg xor inc stos cmp sets shl xor xor sbb (bad) rorb data16 or push cmp lret mov aam inc test leave rorb arpl jo inc ret push or scas mov dec pop bound and rorb ret int jmp push ficom and mov adc xchg mov mov test pushf xorl inc loope clc jl xor out push mov push mov (bad) insl hlt dec adc mov lods or push ljmp in add push mov push dec (bad) and lea rcrb pusha sub test lret dec push nop inc and nop mov dec ss push and movsl adc leave or pushf pushf pop repnz (bad) repnz sbb push pop imul cmpl arpl jne xor adc xor xchg pop fcoms daa xor xor or add xor sub orl jne bound pop mov add lock mov call or fmul pop sub or in add sbb pop hlt pop push and mov les lea cmp (bad) imul jecxz fcmovbe xor mov xor jo push cmp divl inc mov popa dec pushf sub fldt xchg xlat hlt add add and popl mov jl movsb pop mov pop movsb sbb sub cmp mov push out (bad) xor test inc dec push or adc cmp addb es and pop pop repz outsb jo nop mov (bad) jne sbb test imul movsb mov push jl mov mov xor into scas faddp in fdivl add cmpsb ja mov je mov jecxz lods push add xor add sahf add arpl add jne or rcrb adc scas sbb xchg mov push out call insl das shrl add adc pusha pusha lods mov mov xchg mov fist add add xchg jl or sbb sbb dec fmuls lock rcll fs ljmp lea pop xchg xor loopne and dec ljmp add sbb add add adc add mov and lret (bad) fsubrs xchg nop loopne loop into pop in pop les aaa cwtl aam ret or lret fiadd add xor inc and test mov mov mov sbb (bad) dec rcrb dec mov shr sahf pop push sbbb imul mov incl rcl daa push andb xchg rcll call popa xor add orl adc mov scas loope xchg xor or dec mov (bad) mov xchg pop pop int3 lret in and push leave mov inc sub aaa mov inc sbb pop dec int3 aam push jnp or enter push inc xchg xchg xlat lret into ret imulb or inc aaa xor daa adc xor mov jo add push fcompl ss sbb imul stos loope call pusha mov xchg in mov sbb rolb cwtl sbb (bad) test dec or sbb mov popa out hlt mov mov adc je ds or mov xor je or mov adc mov rcrb faddp push xchg xchg shl sbb add push loopne movsl jle mov mov lahf test jo push or pop pop dec sub mov jb push adc ss dec nop jno add xchg cld sub pusha mov and (bad) mov cmp xor mov jcxz and add lods add int3 xor sti add xor sarb or inc sbb rclb or cli (bad) dec dec cwtl cmp test enter mov xor in insb add loop jecxz mov sbb aas xor hlt xchg fsubrs pop mov push es repnz cmp add mov inc add inc pop mov push lods orl mov cmp mov out pop orb sub add jno jo add cmp and adc lods cmpsb jbe push jo inc cltd add movsb idivl or mov jb movsb dec and or mov test and dec lret es jmp lcall notl xchg aad jmp cmp sbb scas xchg lret and (bad) dec sbb out mov arpl mov add cmp cltd fcoms and cmp pop mov pop cmp cmp xor dec inc movsb pop mov popf lock pop xor dec inc sub cmpsb dec test lods push mov xor lcall es dec inc and pop sbb (bad) out fisttpl adc dec (bad) jb adc loopne push xor loope lods int3 imulb dec add mov jl mov inc sub inc sbb jo push (bad) (bad) fstpt loopne lods jb xlat cmpsl les bound inc in arpl loope dec out (bad) xchg mov sahf in add mov push and sub orl and cmpb lahf cltd test xchg sub lahf js ja leave and adc insl cmp aam nop pushf mov cmpsl jl pop add dec lcall cmp push push sub in loopne adc movsl push and ret cltd cmp ficom xchg insl lods lea inc pop inc xchg subl push scas cli jmp gs jl ss xsave loopne cmp imul loope push push ret pushf rorl lock add sub and dec cmp mov pop push (bad) inc sub adc mov push pop pop add aaa roll inc pop xor dec or lret or lret add loop mov jne pop loop lret pop cmpsl pop and pusha daa outsb outsb cltd mov (bad) adc loope lcall sbb xchg (bad) sub popa lods adc adc adc mov push movb pop insl pop or and scas jmp push pop loop (bad) rolb or lods mov dec cmp jp xchg into test sbb popa jg lock fistp dec dec add jo mov (bad) push push xor loopne add (bad) daa mov or sbb jae roll jp mov mov sbb pop js cmp or jmp test sbb daa pop jmp dec or sub adc (bad) (bad) dec into sbb and inc add mov cs inc bound mov lds (bad) add aad add enter leave adc imul push add mov sbb out xor test pushf lods mov sub ss jecxz xor push mov lods aad pusha dec fdivrl mov fdiv sbb xor push add pop adc lea adc xor nop cmp hlt add xchg in sti pop mov aad jne aaa mov aad std xor ret insb pusha sbb add xor pop mov push mov fist dec ret inc (bad) dec hlt (bad) push sub mov rcll inc test into (bad) jno or lods (bad) mov push jae and and jecxz leave xchg dec je or dec or adc and push jno,pt dec loope cmp call mov adc inc call and addb cmp lock push or jle mov sbb (bad) xor rorb mov fdivrp mov jne adc dec jnp dec xchg push or std sub movsb mov xor push cmpsl clc jp sbb cmp icebp jp xorb rol popa mov xchg mov int3 jne xchg xor pop dec xor xor fnstenv cmpsb mov add fstps bound into add ror outsb test pop aam sub mov jecxz pusha ror faddp and jecxz sbb gs pop xor xor inc mov sbb adc xlat mov loope xor mov or je loopne mov jo pusha daa stos and lods ret clc jl mov lar jecxz mov sbb movsb cmp pop cmp adc push and and insl mov ffreep andl movsl pusha mov cmp cltd addl dec jnp popa lods sti clc or mov pushw rolb mov adc xor sub pop or scas popa aaa push add cmp or das mov ret bound ret pop nop sbb push push xchg imul nop sbb sub push mov cmp xchg pusha adc popa test or cli push call cmp hlt add bound add mov sub adc rolb pushf and dec push sbb pop jb,pt push dec sub dec lock mov pop jp clc xor sub xchg cmpsl push fwait xchg adc jae push xor gs mov ret mov xchg test rcll adc or ficom nop sbb mov add mov adc imul or rcr repnz sub xchg push mov scas xor inc mov add lock push or inc test sahf sub pop mov or cmpsl fdivrl sub (bad) xor dec mov loopne push sub sbb or (bad) scas repz push pop sbb loope faddp or inc ss xchg adcl adc or mov loopne pop adc cld and sbb dec push js outsl jmp pop sbb das pop sub loop ficoml rolb shlb sbb pop inc mov xchg xor int mov inc sub lods push xor fs push xor sbb addr16 sbb call fsubrs lods in add sbb jnp jmp cmp sub nop sbb add repnz xchg cmp xchg addl lds mov and jecxz dec xchg fldl xor or xorl adc or push push mov mov mov xor jo or into mov add sbb dec aam into sub xor xlat and imulb xor sbb ret ja repnz add adc inc loope (bad) fimul push fsubl and loopne mov data16 xor cmp test mov or cmp or adc into cs pop fisttpl mov pop xor add adc test adc imul or mov loop mov push pop push inc pop faddl inc dec mov xor push mov in ret lea arpl add mov mov jge les mov push adc or push popf xor pop and push rcr add dec lret add es xor popf push or into movsb xor mov sbb orl pusha mov xor (bad) lret and aam cmp test dec mov inc mov pop xor sbb insl call popf mov ljmp add loope out aad jae inc sub sub in cmp push push inc dec inc cmpb scas rcrl jae adc push jo xor dec cmp push sbb adc jp or ret ljmp push xchg jo adc sub cmp cwtl icebp xchg or into or mov adc mov sub sbb and xor pop push add test mov cmp inc rol inc stos or add rorb test testl mov add aad or sbb js lods lods adc js sbb js xor adc into arpl pusha test mov mov add push cmp and mov outsb lcall push neg mov out gs in pop mov repnz or daa js add add push and ret gs test dec arpl mov xor rolb pop xchg scas cmp sbb and jmp lds cmp ss (bad) (bad) lret cvtps2pi mov sahf mov punpckldq es cmp dec dec inc adc mov mov mov aas fcomps jo dec rcrb lods adc or or jl stos rcll shl lea inc pop sbb or test xor xor or lcall xor bound add adc dec fildl and xor (bad) push push jae pop sub sbb rol pop mov adc sub fistpll xor xor imul lods js sbb adc in mov js sbb pop (bad) ret jae dec rorb sbb sahf imul xor arpl adc mov mov mov outsl stos cmpsl lods gs mov test jb mov inc mov addr16 mov call xor mov pop hlt lret add add jg sbb scas push push sub pop add or add add cmpsb loopne xor test mov push adc mov loop mov jecxz add dec (bad) push mov pushf inc test xchg push fs sbb test mov add jo add orb xor andb push push add adc xchg leave rcr dec or (bad) lock and lret push mov shrb inc inc mov data16 shll (bad) mov inc inc movsb sbb xor add mov loopne loopne,pt jecxz and fmull aaa and xchg adcb into xor mov fistp mov (bad) push dec mov jb pop mov push xchg sub roll roll sbb mov or jno sub cmp repz xchg inc rcll or mov stos out inc jno mov sub or push sub pop fsubs or mov or sbb xor mov add pop add jne sbb or call test mov sub sub sub inc sbb fsubr into jp mov stos lock pop loope ljmp mov xchg pop movsb xor pop fnstcw bound insl movsl add pushf add mov ss xor les fs mov leave ret mov sub sbb mov loope cwtl ret push movsl cs cmp je test popf xchg sbb mov rorl rorb cmp mov cmc xor or loopne je add xor adcl inc leave mov (bad) or movsb ret mov mov (bad) cmp mov (bad) mov sbb xchg push call inc sbb inc pop es add or into test mov cs and xor popf dec les inc dec (bad) push cmp ds ret daa mov lret and movb nop or add dec outsb lea jp,pt mov pop adc sbb and push push jnp adc mov push mov int3 dec jbe jb and sbb cli cmp mov pop pop js xchg aam adc ss mov jl aas (bad) enter fdivrl sbb js mov add push and cmp addr16 pusha mov aad pop jp jecxz (bad) into inc jp add js lds sub or mov scas pop insb xor or (bad) orl int3 cs mov mov xchg push and add jge call sbb or stc (bad) fldt (bad) xor mov xor ret xor imul or pop sbb cmc xchg add mov add inc call rcrb mov hlt addb test vpunpckhbw imul adc clc pop sub scas fisttpll cmp xor lods test mov dec les mov or xchg fsubrp nop add inc mov sbb or adc mov cltd dec add xchg jbe cs pop pop aaa mov (bad) andb ret mov add mov cmc ret dec sub or loopne and cmp push mov and loopne,pn sub sub cmp (bad) sbb cmp xchg in inc push pop lahf sub fadds sbb xor dec xchg dec (bad) cmp (bad) or fldenv adc mov fucomip mov or dec add xor mov add ret lock add push pop adc xor dec mov add (bad) sub inc (bad) (bad) mov mov mov inc inc xchg stc xchg pop shl cmp jbe lea out call inc sbb or mov mov inc add mov pushf mov mov add loope aam xchg test xchg mov or shrl daa mov popf inc xchg insl clc insb mov sbb xchg mov add dec cmp loop int3 imul popf jo sub add addr16 dec adc inc bound arpl sub jo (bad) jno pop ds and popa pusha mov pushf and arpl outsl xchg add inc mov add and mov call mov adc loope pusha add adc pop mov (bad) rolb adc bound lods test jecxz mov imul repz call dec xor xchg pop rcrb pushf mov clc xchg pop xor xchg pop ss xchg adc sbb sbb push and dec and imul jo xor adc add xchg mov mov rorl lea rcl insb xor add jo popf mov add pause lahf mov into jge pop fsubrl xchg mov dec mov arpl sub pop cmp repnz pop add lods test inc js pop adcl sub hlt xchg push xchg addl stos pushf lea push aas and and pop push rcrb arpl cmp adc add xchg and xchg ljmp inc pushf or mov xor add mov (bad) jo adc cmp push sbb js or (bad) je adc das mov add pop out lods and adcl out ret pop sbb ret push xor lods inc je sub clc imul dec nop imulb cmp pop movsl test mov mov add adc fnstcw sahf xchg cmp push movsb add and cmp loopne rolb or movsb push push inc andl loopne adc mov inc inc inc js in lahf jbe js xor pop push mov adc or ret lcall sub rolb popa lods add rol orl push mov sbb lret mov nop insb addl adcl or popl mov test adc sbb push inc ret pusha (bad) cmp pusha mov pop loope cmp cmp or push stos xchg add ret inc mov fdivrs lcall inc jl in xchg nop dec inc jecxz xchg roll mov insb push adc ds js ja sahf push mov shr add adc push add add test pusha pop cmp adc sub inc or sub sti pusha testl mov orl sub dec push lock dec js adc xor lods imul call shrl repnz (bad) gs call jne pop pusha loop,pn xor test fs xor adc aam sbbl xor push loopne divb pop punpcklwd mov rcrb push and inc aaa push dec mov push test dec jo cmp js sbb add ljmp mov mov popa dec mov add test xchg pushf imul call cmp cli in push (bad) mov xchg or pop stos cmp daa lea test inc push dec js mov lods xchg dec xor aaa xorl (bad) fadds mov and ror outsl mov or (bad) in (bad) dec sub mov add or dec mov mov (bad) (bad) xchg mov mov add aam clc jno or mov mov push bound and or push mov and jle xor cmpsl mov add xchg pop pop pushf lods dec or mov movsl imul add inc sbb or (bad) xor jno cmp push pop mov in dec stos outsl addb xchg add or jno push xor add and adcb adc jp scas ret fsts pop out cmpsb push rorb mov add lods add je fstl into cmp ljmp jae sbb push lods xor push cmp jp mov or loope adc (bad) push ror sbb es jbe and or into push xchg pop jg hlt pusha jo sub cmp sbb inc or mov jp mov push fs cltd ficompl dec les add popf aad cmp dec xchg fimull mov jno ss fdiv ss inc test dec dec mov std lock rol shl xchg inc push enter rolb lods or fucomip xor push sbbl add fnsetpm(287 popa movsb sub xor adc insl push rcrl inc adc dec in cmp cmpsl in roll loope pop sbb scas (bad) or cmp arpl or jb vmovups pop pop or or pop inc daa push xchg add and dec cmp inc mov or xorb xor mov adc test add push mov mov jmp xchg rclb mov or bound add fs popf popa sub mov dec rcrb inc dec es into push mov push cmp js or pop pop (bad) daa add xor dec sub sarb push pavgw out pop or sub lods xor insl fcoms notb mov loope ss mov icebp sbb (bad) sbb add into push add repnz xchg fist inc cmp rorl or or and mov dec inc ret subl cmp int push cmp fdivs (bad) cli shlb add ffree adc ret dec rcll imul sub add dec jp js mov or push fucomi fidiv cmpl or icebp adc push xchg test bound leave inc adcl dec sbb ja or push jo out sub adcb xchg push lret pop ret and daa lods movsb daa push out or push mov push pop popf test inc ljmp loop or xchg mov xor je imul jnp inc mov insb and mov (bad) test mov xor xchg mov adc (bad) and dec add test xchg test rorb push xchg clc pop xchg (bad) xor jmp sbb mov addr16 roll out mov sbb nop adc or mov enter and push mov sbb xchg push mov faddp fdivrs into js xchg add (bad) mov adc push insb and mov test or shlb aad addl adc std xor add call addl adc pop loope and and xor mov xchg ss daa jo push lods mov sub arpl or mov or jb jno inc pop add inc sbb addr16 mov xorb mov les test nop mov sbb push test jae rcrb push sbb xor rcll or push jbe dec les jo mov adc mov bound test adc pop (bad) push mov bound sub mov ret nop pop sub xchg and je jecxz sbb or and or nop dec aam les jle nop inc cmpsl cmc mov push mov lock cwtl pushf test push fnop sub pop jge pop popa or roll xor bound dec popa add or xlat inc nop mov pop cmpsl pop pop sub mov xor jecxz mov pop push push cmc inc cmpsl adc test adc jno sahf jp inc pop mov loopne outsb icebp sub fdivrl arpl sub loopne dec es add rcrl push or es cmc pop bound loope mov test or scas scas cmp push je dec push ret lods loopne jl scas aas mov fs out lret lods mov push add sahf xor sub sub and sahf mov xchg fs adc ja pop pop popa adc inc mov insl pop push or scas (bad) (bad) cli xchg sub add cmp mov mov xor push pop cmpsw pop mov pop and loopne ret jo (bad) imul lods aaa rorl loope nop xor mov xchg popa lods xor sub in add adcb xchg and cmc sub push enter (bad) mov movl push xor adc sub pusha mov inc mov nop js xor xchg and es shlb jl pop or mov sbb cmp jno add repnz xor push shrb andl movsb push hlt js mov das out clc mov (bad) sbb and dec xor add mov push ret inc movsl sub sub sub and pushf inc push xchg adc aaa cmp and loopne inc add add or out dec imul xor call data16 repz je cwtl push loop popf push sub pusha inc add (bad) xor (bad) js lea push outsl int3 add or insl test fs movsb (bad) xlat add mov mov loope call cmpsb aaa xchg xor jne cmpsl scas jg dec sbb sub xor add inc or jecxz mov popa notb (bad) movsb je mov andps (bad) mov rorb scas add ret sub push test jo xor scas outsb pop les xor daa ret ficompl ret loope or out cmp test fadd cmc (bad) jae mov mov test jb xchg popa (bad) iret loopne adc gs inc daa jbe cmp adc inc pop push mov pop xor add sbb push pop lods loope out outsl iret sahf adc mov dec inc frstor aam adcl dec les add dec ljmp (bad) popf xchg pop or je mov fsubl sbb dec sbb xor sbb add cmpsl pop push dec mov jo mov test mov inc jne cmp cmpsb add push pop xchg xor rorb sub push mov inc sbb inc mov or or (bad) jmp (bad) daa cs jg xor jge xchg add or cmp jnp test sbb cvttps2pi lods test xor dec inc adc jg pop push pusha sub rol pop lock adc mov arpl cmp (bad) mov sub push or jae inc fnsave inc xchg xor add ret mov inc pop xchg push test dec inc xchg jp (bad) sub inc push (bad) pop lock test ret stc arpl pop ret hlt mov sub adc int3 mov inc dec sub sub and mov pop pop add fild xchg pop mulb call pusha mov dec push adc outsb je dec (bad) xor and jo out inc loope mov (bad) lds sqrtps push imul je mov mov test mov pop adc dec mov add lret jg data16 pop pop gs dec jb xorl mov les push das shrb mov outsl jo xchg lods test push xor mov cmpsl jne outsl pushw nop xlat sub add inc std inc das loop push sbb (bad) jo cmp popa xor es lock xor sbb lea jp pop pop mov inc add inc cmp int3 inc ret jmp addb cmp lods cwtl jb sub (bad) mov dec ret addb pusha push or nop or popa loopne sbb xchg push sbb addr16 test push cmp movsb imul aas cmc mov and push or cmp xor fcoms subl sbb outsb and inc pop inc movb (bad) stos ret sub pop sub adc mov mov xor test cmp add or or movsl rcll loope jnp enter inc jo or andl cs bound or out dec push jl or or ss stos inc pop roll sbb xchg add or jge pushf test imul pop aam add mov pushf xor adc push add adc popa mov movsb push lcall dec inc js mov jbe cs sbb xchg mov mov pusha xor fs pop cmpsb cs pop adc mov xchg mov or mov (bad) xor mov (bad) pop cmp jno shrb jo insb and ret mov or lret sbb cmp fs aas rolb pop pushf mov pushf rsm inc ret xchg fxch das imul arpl xadd aam sarb sbb lret sbb ds push push daa fwait mov xchg (bad) push lret sbb repz mov shrl dec aaa data16 aas jo adc jo jb (bad) xor cmp jmp rolb cld or pop push sbb popf (bad) xor xor test adcb out adc popf or mov (bad) xchg notl xor shrb dec test jns cmp xchg nop push dec lret cmp sbb xor push popa mov pop daa inc fstpl push cmp aam lcall loop cmpsl adc jno mov add adc and push les add ss fisubr jmp mov jo push out js fnstcw or arpl lock xchg mov imul es sbb add dec movsb ret or cmpsl sbb xchg mov (bad) in aam js sbb sub js fld xor loopne xor mov xchg in sbb or dec add cmp pop push dec or inc xor mov rclb bound mov or mov adc fldenv (bad) sub cmpsl inc (bad) push mov rclb pop cmp inc mov jmp mov aaa daa dec jb cmp int3 fistpl and aam fwait mov or add push or xor inc or dec dec push add test add adc and adc mov add imul mov jns sbb mov xor push ljmp mov inc add xchg in arpl inc mov rorb stos xbegin flds int test sar mov pushf lods dec xor (bad) shlb je (bad) mov mov add sub inc dec xchg fstl or push pop data16 adc mov xchg enter mov add add pop xorl and or or xor sub xor mov aam out jno xor in jbe add and shlb dec loop loope sbb mov sbb adcl sub sbb lret js in aaa loope sbb rorb or cmp push mov cli sbb dec mov xchg push lcall xor xor imul inc add push inc cmp ljmp sub sbbl and flds and pusha add nop adc adc push xchg loop enter scas imul adc pop adc add pusha ja mov fsts mov das pusha push stc xchg sahf (bad) mov fs sbb outsl fcompl fs gs pop pop mov mov insl dec xor push movsl xchg (bad) lods xchg jo or xor loopne pusha adc insb into sbb xchg xchg (bad) or movsl or loopne (bad) add cltd ss les les lods push in cwtl inc bound loop ss (bad) xchg add movsb ret cmp push push hlt mov scas lcall je call or xor adc jecxz add punpckhdq cmpb add push add adc sub shrb call cwtl add cli mov inc test stos cltd addl nop popa and vmovapd jnp ret jecxz push mov xor mov loop aaa jnp clc stos mov ret test lock adc test cmp popf in inc xlat add jae stos xor outsb xchg pusha ja fadds (bad) pop mov dec mov dec mov adc sbb jbe nop add aaa pop add mov lret clc lods orb push xor and sub cld imul or push dec add sbb roll jmp sub inc adc cmp push cmp test inc jp loopne sub or fidivrl adc pop mov pusha pop adc inc lret push mov jecxz xor xchg ja mov mov enter mov add jbe xor xorl mov les mov pop or loopne outsb stos dec mov sbb sbb cld push test shr xor and or pop mov pop icebp rorb sbb (bad) dec mov cmp inc adcl sbb pop jg,pt adc pusha imul fwait cs enter add nop add (bad) xchg lock hlt (bad) sub fs mov mov sbb sub jnp jae adc icebp mov pop pushf mov mov add cmpsl xor jecxz push add jl shrl fistpll (bad) inc sub (bad) push xor inc xor add aas nopl int3 jecxz stc or jo sbb pop xchg je ljmp test fnstcw shrl sbb sbb outsw xor rorl shrl jbe sarb sbb or cmp je pop pop outsl or mov xlat cmp cwtl lods add mov xor test cmp dec fwait xchg xor pop dec adc inc sub mov call xor pusha add lcall jo pushf enter push mov (bad) daa bound scas lds push mov mov mov fwait lods adc pop push cli cmp mov xor ljmp adc mov push das mov pushf mov dec inc lahf cmp cli icebp into cltd cmp pop imul sbb add sub les pop dec add mov loop xor pop push mov inc jl add (bad) (bad) inc js mov (bad) outsl test (bad) mov sbb and and cmp xor inc clc mov mov add les pop sbb or js pop mov adc adc inc mov rorb jno xchg adc out xor outsb roll or cmp xchg mov enter lea ret add faddl rcrl mov push (bad) cld daa inc rorb sahf (bad) sbb xor and push xor scas fmull xchg ficompl jp mov ds and mov loopne out add mov mov xor cli js outsb test mov sub pop inc cmpsb inc adcb add (bad) sub mov jmp or and sbb mov mov int3 sub fidivl mov (bad) out fistpl leave cmc test cmp pop loop sub push movsb mov pop sti ss movsl adc add add sub xor insl jecxz add outsl inc jl inc mov into loopne xchg sbb (bad) or and push mul sbb cmc data16 add mov inc fiadd jnp mov jae xlat ljmp and adc and xchg add jno sub xor jo arpl xchg or jo dec (bad) adc sahf add add aaa (bad) repnz sbb leave mov lcall add into cmp and mov sbb xor push cmp nop icebp loop xchg adc rclb mov ret mulb and and mov dec loop outsb or loop je mov add cwtl mov sbb pop pushf sbb dec sub icebp xor les ret and xor and (bad) cmp sub mov lea fldenv dec loopne or lods adc mov adc mov dec insl aam jl ret loop sub xor nop cmp mov (bad) dec lods int outsl pop movsb push punpckhbw mov cmp push int and data16 push jo jl inc (bad) lahf dec inc test mov sarl (bad) jae std xor add ljmp test jge pop push ret xchg push daa or dec sbb xchg les and loop sbb mov into ret scas loope stos pop pop (bad) add les mov inc lret jo lds ss xor add mov xor xor rcr xchg add movsb xchg xor mov add shlb mov jb inc js mov adc inc sbb fiadd push pop mov js xor sarl add imul push or add jl xchg add bound (bad) xor nop xchg pusha jmp sub inc das divb rcrl pop pop xor inc test mov loop xorl lods dec popf or mov loopne sub cwtl mov pop (bad) ss push jae into ss pop xchg push pop and stos popf (bad) mov adc dec cmp cli dec jo rolb mov or movsb jbe push pop faddl aas mov rclb lea aam push pop (bad) es mov push imul mov or dec gs xor inc leave adc icebp fdiv adc push sarb pop push sub jl push ss sbb loopne mov jo xchg and lock fildll rcr or faddl pop fldenv scas ljmp jnp (bad) or and lret (bad) adc inc pusha sub mov sahf lea je sbb lock aaa stos mov ss ror cmpsb js pop or enter add mov or aaa aad xor add push or icebp xor push sub cmp lea mov (bad) cmpsb mov insb cmp adc aaa mov mov or mov mov add or ret mov fstpt add (bad) rcl fisubr xor xchg mov sub dec jecxz dec ljmp in popa jns cmp mov mov lods mov or pop fwait lods jno cmp or fwait sub pop je (bad) cwtl loopne fist add jmp int3 outsl add rolb add xchg xchg pushf adc jbe inc sub sbb push mov push fist rcrl mov pop jb jle push (bad) jo push pop cmpsb mov aaa dec push call mov mov (bad) or (bad) jp mov scas xchg mov mov jno in sub add mov insb bound adc xchg inc push repz rolb push push sarl xor dec lcall incb jle push inc ret xor mov cmp popa cmp sbb cmp sbb adc insb jp pop pop (bad) xor push mov movsb into addl pop xor add loopne dec pop add clc lods or decl andl (bad) aam (bad) xor inc add sub sub push movsl lret lea jmp call daa sbb sbb add dec dec scas adc xor or test pop sahf and dec jb cmp (bad) xchg xor cld mov or loopne loop add jne xor stos push xor mov test cltd fidiv dec fisubrl jmp mov or pop sbb (bad) mov pop pop pop add pop and ret lea dec pusha (bad) adc xchg xlat jl cmp test xchg add daa inc sbb gs lret mov (bad) push movsl sub lret mov insb stos (bad) leave (bad) cmpsl vmresume mov xchg adc fidivrl or jno in pop sbb insl pushf sbb mov xor jns movnti or mov movsb xor nop sbb xchg cmp inc stos sub lret arpl and mov inc mov jmp and roll adc stc adc mov mov xchg pop pop xor movsb popf xchg add or sub inc sahf add js push or dec loopnew mov add test push (bad) lret cmp and mov js (bad) push aam dec adc divl pop gs push xchg les add inc es rolb lods xor lods xor sahf pop test outsl test fisttpll aam xor jl test jno dec xor ss add adc (bad) sbb aas sbb sbb mov (bad) movb mov rorl or imul out sti dec xchg dec sbb or cltd xor (bad) fcom loop pusha je sub bound xchg movsl loope xor daa (bad) or (bad) cmpsl adc push lods iret fsubrs xadd push jp dec jo push xchg cmp push mov mov adcb cmpsl cwtl lds add scas out loop adc je,pn adc das loopne sbb int3 xchg dec arpl or bound adc and mov mov cmp les mov data16 mov out fimull dec add dec jne lods cmp add roll push add jae inc pop fs inc sub jo loop xchg mov jno cli pop pop xchg jnp pop adc cmp and iret (bad) dec lcall cwtl mov enter and jae inc adcl add cmp movsb les lods mov dec punpcklwd push xor or inc and loop mov cltd scas sahf jmp pusha mov jo cmp pop sbb in cmpb pop adc sub lcall fmull aam jae or push ret insl pop jmp mov xor js jmp xor movsl sbb pushf or inc dec inc arpl js and cld pusha add aad shrb and imul or and test mov xor sbb leave (bad) in add leave xor mull jo or push xor test pop lods shll adc insb sbb mov cwtl jno lock pop pop or and jo loopne pop popf xchg ljmp push popa push adc mov pminsw lret xchg mov call xor push xchg mov (bad) movsl or inc jbe popl ret adc xor xor inc je add pop sbb lods jmp jmp xchg and push (bad) in adc pusha adc cmp mov hlt jle dec pop test adc pop sub (bad) and popa or sbb sbb sbb jb fcom xor arpl mov push out mov pop inc sub push or mov add dec cmp imul into test mov ret pusha push je cmpsb lods and fistpll xchg outsb cmpsb loope dec lea lock mov xor dec fldl rolb fbstp add add push lret pop cwtl xor test ret repz jmp or push std mov sub gs or cmp les and faddl (bad) push and mov xchg xchg cwtl cmc jge mov in cmp enter loope inc push mov lods add out jle mov push js and lahf mov xchg test lea xlat test push les cmpsb or sbb cmp test roll aam cmp mov and xchg addb adc in or xchg (bad) xor sub inc (bad) in xor mov loop lock cmp xchg push jp ljmp ror dec cmp negl bound (bad) jne inc hlt cs sbb jb xor xor nop add pusha stos add sub adc cmp push dec test lods addl inc sub sub mov jo imul popa push test test jnp sub add add add jecxz push cmovo push or xchg loope or call out xchg lcall in sub lods out cmp add add loop xchg (bad) fcmovnb dec rcrb test inc cmp or jmp scas pop orl inc or sub push mov aaa lea lods jo lock inc mov adc rorb test mov aam cli mov jb xor mov ret addl fldenv mov aaa jg mov or mov push push xchg movsl push xchg (bad) loopne popf lods ljmp clc xchg push adc cmp (bad) mov mov mov mov or mov repnz xchg test test push mov lret imul inc sub js inc gs out add add jne adc ret adc fnstenv nop xchg fs js or pop inc push sbb xchg inc mov pop push mov add sbb popa xor ja or inc loopne mov daa or mov mov mov roll clc cmp daa mov dec imulb test cmp push sub mov mov inc push inc xchg lods adc inc cmp inc sbb push stc imul dec mov fs cmp xchg addr16 fimul pushf jns mov mov mov shrb xchg xor shrb js or hlt xor xor pop pop imul jno xor shr and xor ret xchg (bad) xorb dec sbb call loop or mov add je push movsb arpl adc xor mov insl pop pop mov xorb mov cmp scas lcall push or dec nop in std cs xchg adc loope push push pushf mov xchg sbb xor pusha add jns call add pop dec sub push pop adc sahf (bad) sarb xor cltd cmp cs add dec scas sub jp sub into pop pop xor fmuls or adc push loopne mov mov jmp and loop mov xchg adc and add loop lods sub mov das lods and cmp dec dec sbb jecxz add push adc xor out sbb je (bad) sbb dec (bad) push rcl pusha xor pop (bad) pop (bad) js dec mov mov or sbb scas repnz or add (bad) nop fstps dec sahf xor adc js push jbe and (bad) out push add insb add test bound sarb push add adc rorb push test test rorb push ljmp loope sub rorl and xchg hlt and pop inc or movsl mov mov cmp loopne outsl fadds mov test mov inc push les mov mov pop xchg pop pushf mov lds or sub and sbb stc mov insb movsb cmpsl xor lock sbb call cwtl cmp imul xor outsl adc push mov daa mov test ret dec dec xchg sbb lods add movsl jno aad lock sub es aas in xchg pop bound mov ret or push push cmc xor sub sub inc movsl pop aas jbe addb jbe xorl cmp sub mov clc mov pop or (bad) mov or jo mov push sbb ds lahf dec ret popf aaa sub mov sub pusha add lds lock sbb mov ja sub or call loop call xchg xchg or jns ss or xchg es mov pop jmp (bad) push scas addr16 fdivrs stc outsb adc cmp sbb sub pop das jmp pop mov shr xor jbe cmp mov mov popa cwtl jo shrl lods enter fadds sub imul les imul mov mov gs pop xor mov and dec ss enter cmc mov (bad) jge xchg cmp jge call pop inc (bad) adc (bad) or inc push mov call cmp add andb pop inc push scas pop test fdivrs jecxz pop mov sbb into (bad) rcl fcmovnb push fcmovb inc xor gs fwait mov lds jns inc add (bad) dec test shlb pop pushf int3 (bad) mov adc jno or fcoms js sbb dec dec mov xor adcb bound xlat cmp shl xor sub and xchg notb mov pop dec nop xor fwait (bad) mov lods add test pop cmp cmp daa dec inc jecxz push imul xor mov push push fwait cmp js (bad) sub dec adc push or xchg sarb lds mov dec adc dec xchg or nop add mov cmp (bad) mov xor inc inc push adc por aad leave pop xchg fstl das jno and aad addl (bad) mov lahf test bound clc mov adc or dec cmp xchg scas lret mov and sub daa add mov test or adc dec xor cmp add push (bad) mov or test nop test lods aas data16 dec xor pop arpl and sbb cmp push ss sbb pop pop adc jbe push orl loop pop mov sbb pop mov pop cmpsb mov outsl loopne test (bad) cmp pop adc sbb mov ficomp hlt repz push add xor int3 es rolb xchg pop outsb inc add xchg xor ror (bad) xor (bad) push xor sbb fstl cmp mov xor das lds pop aam insb loopne dec sbb fmul push sub insb call imul xor push or jno mov xor mov clc aaa (bad) jno or mov xchg sbb js subl push aaa aaa jo xchg js test and subl dec mov pop insb cs andb sbb aaa imul (bad) je or xor out xchg std dec jp rolb xchg (bad) movsb add push jecxz add mov push sbb xorb jns rolb xor dec movsb pop gs movsl ds add and data16 (bad) gs dec adc cmp mov xchg adc ret mov sbb popa inc bound cmpsb in push push aam test mov push xor sbb pop faddl lea and ljmp add xchg xor scas ss aas mov lea mov xor mov negb push mov insl or xor cltd pop jecxz arpl sub mov push or fsubl sub add imul sub sahf dec mov fs mov sub sub daa aaa addb cmp jmp sbb ret push sub mov mov mov lds cmpsl dec sub rclb add xchg pop push je orl sub cli aam adc (bad) xor ret mov outsb int3 pop xor pop test dec add mov mov mov lods push js clc adc or sbb lock in xchg add (bad) out pop jo mov sub xchg pop adc jb loop nop (bad) pop adc xor mov (bad) cmc xor sub sub mov bound pop ret mov popa xor fst xchg or fisttpl andb pushf clc call (bad) inc test cmp cmp lods test lods mov or test inc dec andl xchg jne shrb mov jecxz (bad) xor inc gs (bad) or ss jecxz rol pop jl into orl and dec ret mov adc add xchg popf xchg cs fiadd sbb dec and shr (bad) or mov lret or sub jno mov mov mov insl push aaa aas les mov mov xor popf in xchg dec loopne mov movsl in fadd adc and fldt ret add cmp xchg sub push jo xor mov (bad) pop rolb aam xor adc sbb and push and mov cmp or or cmp sbb int3 dec add es icebp sbb dec xor test and outsl sahf cwtl sbb and pushf and adc xor mov cmp rolb popa inc lea or cltd adc sbbb mov mov adc insb jo ret push push test fisubr fst and aaa fwait sbb or dec loopne test jns rorl mov stos rorb test push ss js jo in ficom packuswb add pop cwtl jne bound test pop add and xor test pop cmp mov shrl popa and or pop daa cmp (bad) test lea mov cmp (bad) sbb (bad) sub add jg and lsl repnz fld or cmp test les arpl (bad) jb lcall push jge mov sti dec xchg push add sub add lock pop mov jno push (bad) lret mov xor into (bad) pushw sub xorb inc mov std cmp inc js pop xor pop (bad) shlb in sbb xchg test or mov test roll or pop fdivrl pop mov fs pop sbb add inc rcrb mov or sbb test pop imul loop pop or xor ret fs inc pusha popa push leave (bad) mov and xor dec pop cld and xor lds sahf inc push push jo mov cmc (bad) cmp or loop popf xor sub movsb (bad) mov push and add test xor aam sahf stc pushf cmp js cmp mov leave test add push imul and push mov or inc movsl sbb cmpsl adc imul and fs sub dec jbe movsb rep (bad) arpl (bad) mov xor push movsl push pop xchg fwait sub das inc ja sbb ds xor mov pop loopne mov in decl insb repnz movsl pop mov rolb mov cs mov loopne mov and add gs dec lods add xchg movsb vxorps jbe dec adc mov inc mov (bad) int3 fwait inc notb push xor push pushf ret mov inc test test jns push or or jno js and sahf cmp fs rclb sarb lods push (bad) fcomps jo sub enter mov movsb inc xchg cmp cmpsl push mov (bad) xor test pop imul and shrb adc and adc inc and test adc cmp pusha jne rolb aam dec lods orl adc inc lods push jle cmpsb (bad) sub dec add lods adc inc push inc pop loope sbb add pop pshufw adc pop cmp rclb js sbb lcall mov daa fmuls jns mov sbbl sbb cmp dec inc mov adc (bad) in add or push scas lds add ficomp push outsb add adcl xor cwtl in sub je popf fdivrl xchg sub xor lods cmp aad das cmp pop nop dec or gs mov fnop dec jno fcompl and xor mov gs in in cmp and inc sub ss notl xor pop test push ljmp test sbb int3 mov jnp sub or sbbl sbb push mov inc mov cwtl dec (bad) shrb and sub or pop lcall push (bad) ret pusha fs cmpsl ds add test pop add daa or mov xor loopne movsb repz mov mov or fsubs jne into sub ja adc imul adc lods popa das sbb out pop xor aam cmpsb cmp pop sub cwtl int3 lea mov adc or adc insl add pusha add push and dec mov adc xchg mov sbb sbb or mov in dec loope out (bad) jne xor dec xor pusha aaa mov pop sbb push push jge sub rcrb mov mov ss inc stc jne or push (bad) stos inc popa jno pop cli pop push daa not fmuls or fcompl bound jae push sbb pop add push add and xchg mov sub jmp hlt sbb and jo xchg jno push insb (bad) lds mov adc push mov daa sub dec mov (bad) mov mov mov repnz idiv mov inc adc movsb outsl lret sbb divb inc mov xchg xor movsb jge je insl loop jmp adc sbb xor cld and out lret ret leave push and or jl rclb subb inc cltd push add in add cmp fwait mov and (bad) pop repnz ror popa add sbb pushf xchg js mov popa push adc aam sub jmp loop xchg inc and clc jmp (bad) fistp (bad) scas or jae mov lds cmp xchg aam mov lret sub jnp leave loop sub jecxz pop imul orb out or data16 cmp movsl stos push xorl cs addr16 ds or fistpl mov into sbb cli push fs pop mov (bad) xor (bad) sbb aam push inc mov bound cmp sbb arpl mov and mov lods ret push es xor enter test add mov mov daa push insb loope xor push adc xchg stos leave mov (bad) xor add adcl out push or cmp inc faddl sbb imul sub fcomip imul inc or dec aam ljmp or or lods cmp and push xchg sbb inc aaa xchg lock xchg xor mov mov or lcall xchg sahf shl out lock cmp rorl cmp jns std int cmp loopne push cmp shr cmp lods pop push pop or popf or cmp lds (bad) aas pop xor pusha je dec bound stos pop mov test jle sbb enter test sub movsl push pop loop cmp dec enter sub sub sbb inc sbb add pop sub daa test ror sbbl xlat jmp hlt mov pop xchg cltd xchg dec shlb sbb add in les in movsl ret or inc sub and add xchg bound test dec addl and xor stos (bad) dec or rorl test xor je and or xchg inc cmp sbb add push bound adcb mov ljmp sbb xor pop out and popf jb ret xor leave cmovae cmp (bad) icebp adc ret push xor sbb std and and xor int dec mov ret xchg ret mov test lods ljmp popf pop in outsl aaa ficoml jbe or or adc mov jno xor push push cmpsb sub add cmp out enter mov sub mov and cltd sbb (bad) or aad shll sub cmp push pop dec or dec test sub xchg lds add or pop out out ss dec mov call adc lock jg insl sbb (bad) push add sbb insb sub out and inc lock jbe or cltd mov cmp bound test cmp nop les mov loop fsubl xchg cmpsb rcl aam sahf test bound movsl xor dec outsl dec xchg push mov cwtl or mov mov mov mov mov repnz mov push pop jb pop push mov xchg insb push xor js add popf and popa loope out into and or mov mov sbb or sbb mov cmp mov mov (bad) pop xchg cmp (bad) ja mov mov scas imul rcl mov daa in dec addl dec rcll sahf mov add lods push mov jb xor and scas sbb loopne js sub add jae sub mov dec test or or and adc add jb jo sbb and sub test cmp shlb je addr16 xor or add xor imul cwtl push mov dec inc into push push xchg fmull pop mov mov adc scas fs sub and je pop pop adcl test dec mov sbb call inc push sbb dec sbb dec inc xor (bad) mov in fldenv adc add imul pusha mov sub inc push addr16 loopne test into xor movb push pop pop add rorb and adcb or mov shlb fadd or add lret xchg push loop add adc xor add sub sbb pusha xchg fmuls inc loopne popa out test add xchg adc ja shr mov dec xchg shl pop cmpl mov sbb std or bound inc inc popa xor sbb add and sub js xchg mov lock sbb sbb notb jo test xor pop or add lea aaa mov out decb mov mov sbb dec jb add into sub inc jns push into test or or addr16 mov push mov add (bad) sbb fsubp dec movsb adc jmp add mov rcrb cmp int3 fildll sbb push adc (bad) rolb pushf (bad) push inc sbb push xor in xor aas push inc xor pop adc fdiv rol push ljmp imul xor test ret ret adc aad mov push dec test outsl test stos and mov mov push lods pop andl lahf (bad) mov sbb or inc xor jg (bad) lcall and inc or push xor in or cmp xchg push jnp (bad) push stos xchg adc add xchg adc daa or lods jb or (bad) pop into test and mov adc sbb xor push xor and lock lods sbb js push sbbl jl mov aam addr16 dec xor pop jle push pop outsb sub or loope xor xor aam mov repnz dec sbb repnz xchg xchg movb imul lock dec loop loop pop fmull inc sub xchg mov jle pushf sub push inc (bad) in pop xor gs inc mov jge dec sahf cmp je clc int3 pop mov aas stos fsubl cmp mov xor fiadd mov cmp test fnop (bad) dec lds add insb pusha loop je xor mov (bad) je imul mov (bad) pop cwtl xchg push mov or jmp jle cmpsl inc add add fidivl pop aam sbb or aad jmp js or imul mov adc xchg push push (bad) (bad) rcr push and sub push push es shlb mov mov xchg add dec cmp dec cmp faddp and mov ss sub push pop int aam xor loope xchg stc (bad) rolb sbb lcall xor cs xor and ret sbb add sub sub dec not and sarb dec pushf popf scas xchg and lods fs mov bound add mov (bad) aaa out push movsb shll cltd (bad) xor call idivb (bad) xor sbb nop jo mov adc cmpsb roll and dec (bad) mov sbb out xor (bad) dec lock and add adc lret pusha loope cmpsl aas pop pop test call clc cmp cmp out arpl lret mov mov movsb push icebp arpl pop addr16 dec jp mov bound inc pop or movsl or add ret xchg subl sub and dec cmp xchg enter xor test push push (bad) xor rolb (bad) loopne notw lret mov lret adc xor outsb sub movsl push xor pop loope pop test push das loope or outsb stos loop pop xor add mov cwtl inc push mull cmp and nop sub xor clc insl mov push add jecxz mov or inc dec pcmpgtb out imul adc cmc cmpsb and jno mov sarb push add and rcrl inc sub sub mov sbb jp mov mov enter call lea popa xchg test sbb mov pop arpl fwait inc flds sub hlt mov mov jle inc cmc test ss push outsb ljmp or inc je enter sub push add mov ds mov movsb mov mov mov xor pop push testb call jmp cmp mov mov movl inc les mov mov xor sbbb movsb inc dec mov xorl lea into lea popa ret sbb and cmp bound popa mov lds sbb shlb xor cmp mov sti inc hlt xor or adc in add cltd or rcrl dec out sub (bad) jb popf adc and mov mov mov loopne jns inc leave mov pop cmp dec aas adc hlt xor dec in test sub js xor rclb jo (bad) jmp pusha inc mov (bad) jb sub inc inc (bad) and jne pop test cmp sbb add pop pop js lds or lods xchg push inc divb rorl ss lea add jge (bad) lock outsl xor sbb es cmp mov ret lds add into pop popa mov lret jp adc cmp cmpsl loopne and lods into fimull clc (bad) sub in inc xor cmpsl dec popf mov xor addr16 cvtps2pi movsb push icebp cmc push inc mov inc sbb mov add and or cmpsl add ret adc inc fistpll addb ret inc add inc mov or xor les je push js sbb pop loope (bad) and sbbb mov ror test mov mov rcll sub shr je ret loop and (bad) jo repz test xchg popa mov cmp fs into xor mov rcrl pop fildll stos xchg push xorl (bad) or fidivr inc lds loopne (bad) xor inc or xor call outsb xchg outsb test test adc out jge hlt rolb out sbb mov pusha cmp push and outsl mov aam mov cmp inc fnstsw fs xor mov sbb mov sbb xor pusha push xor sbb inc push adc jno lcall mov mov insb push sbbl or sbb sbb mov cmp enter inc mov add and xor jecxz ret sub cmp mov inc xchg nop hlt or ss sbb jno pop imul cmp and or inc or xchg lea sar sub sub jl xor jmp push and or pusha xor inc scas shrb (bad) lods or jno scas xor outsb and mov cli or pushf push (bad) hlt out adc sub mov test ret pop xor jo arpl adc mov mov sarb sbb cs push pop addl aaa cld rcll out sbb fcom mov lds jecxz xorb push xchg push push sbb cmp imulb mov lea loope jne push negb xchg adc jle push adc rorb orb sbb xor inc sub orl popf shr mov inc push test and and cltd hlt lcall xchg shrb push xor adc fwait cwtl (bad) call add push sub cmp jp dec rol sub movsb jo pop ds int lea cmp adc pop mov xor fadds and cmp xchg pop sbb inc xchg roll fldl lea jmp cmp mov inc push psraw shrb add cmp les cmp mov jb jno xor mov ds shr cmp add push mov fsubs pusha hlt arpl mov data16 mov popf dec xor daa push (bad) xor cmpl imul loope mov and jo sub das (bad) std xor or xor daa (bad) adc mov pop adc orb xor jl xor jo ret add (bad) xor mov sti dec imul sub inc cltd sub or add cmpsb dec scas mov dec xchg pop sbb fs sahf mov js sbb je (bad) arpl es nop push sub rorb mov dec or sbb ljmp lea inc loopne and popa xchg pusha sub mov and hlt or mov (bad) cli xor xchg add push pop or jno out add (bad) test test xor adc fsubr push mov or inc imul andl pop mov icebp aam ret pop mov cmpl xor adc js sbb add dec sar sub jbe das imul popa push adc adc xor inc lea cmp or xchg jl movsl inc and inc in hlt mov sbb jb adc addb mov jo inc out mov and notb xor test sbb mov and dec xor adcl add sbb xchg pop ds ljmp outsl arpl rorb loopne add adc push xor add cs bound popa pop mov stos js push xchg arpl clc rcrl lock cmp push jle (bad) or frstor jbe xor and cmp xor inc inc jge movsb in or les jge nop xor fnsave cli inc xor jmp ret hlt xor and ljmp out mov loopne (bad) sahf sahf sub sub out aam or xorb pop sub adc js lds push add xor adc lods xor movsb inc xchg mov adc push pop (bad) mov add and lods sub andl shrb push loope ret nop je xor inc dec bsf cmp mov test stos inc jno add loopne sbb loop test adc xchg xor cltd mov or pop or cmp (bad) addr16 mov adc ds into sbb mov inc add mov jl sub push adc int3 push les (bad) (bad) js pop adc jmp and je lock cmpsl (bad) in jno xchg (bad) dec jle ret sub imul pop insl push inc in and int xor inc lahf or je push pop in push (bad) xchg add pop sbb xor outsb jno sbbl punpcklwd scas popf in cmp push or sbb cwtl mov xor fiadd push lret mov fucomp xor cmp inc mov xor jo xor js leave sbb push or loope jmp add or popa insb movsl xor pop adc addr16 sub cs sbb in mov xor inc dec mov xor sbb sbbl lcall or inc shrl roll loopne mov and sarl je mov (bad) sbb xchg adc in jo lea aad xor popa mull cwtl jp lret js test inc ror ljmp pop xchg and imul (bad) jno jo outsb mov loop inc add add jns lds ja adc mov inc (bad) daa xor lods adc lret (bad) test fcomps arpl add cmp sbb sbb jg ds pop xchg jnp dec mov (bad) mov mov or xor push daa lods or arpl mov dec mov mov fdivl (bad) cmpsl mov or add fcompl or push mov call and push hlt and add mov aam mov push jle pop mov add ds sub pop iret add leave sub dec pop cmp push adc popa icebp js pusha and and ret push jp mov test push sbb (bad) jno js aaa movsb lea loop and sbb dec inc add loop jnp lock pop aam adc movsb fstps or rolb je (bad) sarb dec cwtl mov adc loope aaa adc jno pcmpeqb ja mov sbb or popa gs outsl subb ret ret and pop lods loopne sbb inc or lods sbb (bad) xor inc pop pop cmp mov or lret dec les pop inc sub pushaw sub sbb dec std lea lock adc or test or push add xor mov or sbb xor ljmp cld hlt (bad) inc dec jns cmp sbb xor lock mov push pop cwtl adc mov adc and or fisttpl mov insl adc push dec cwtl pop js psraw aad dec push rorb sbb cmpsl cmpsl arpl mov add sub jb dec cmp fsubl scas mov mov sub pusha push mov push mov push dec call dec sbb adc add jo scas mov push adc fmul xor outsl int3 dec je pop sbb loope dec fwait push (bad) dec dec in pop lea aaa pusha jb xor sub (bad) cmp loope xor inc pop pop and flds orl inc js call or rcll lahf pop sbb das mov mov nop push adc jns cmp or add pop lretw in lds push test lea repnz popa test inc adcb rorb mov hlt push mov push movsb mov sub and loop (bad) repnz aaa addl mov sub daa js scas inc gs ss and inc cmp pushf out in pushf mov mov jp outsl into mov sbb push mov mov xchg (bad) cmpsb xchg scas daa xchg pop pop dec mov push shlb dec xor test jb xchg or ja popa mov dec cmp lods adc mov icebp lods add xor add repnz push js mov xor loop daa push pusha inc push cmp out jno mov and mov push inc int3 push push xchg scas mov mov push dec jb in fisttpl inc and aam mov push sbb test xchg dec sub add mov mov test test push or push mov insb add movb xor pop sbb jge mov inc arpl xchg test or mov xchg cli out sub xorb dec punpckhdq lea test cmc jmp dec daa mov pop push mov mov imul ss mov jbe js popa and daa cmp stos notl dec ss dec mov pop or add rcrb mov jo ror mov (bad) outsb stos pop xchg ret sub ficom loope mov loope mov jecxz clc push push adc or stos lock push xchg test sub dec cmp adc movsb pop add lret popa and and lret jl push mov repnz xor movsb icebp mov lock sbb stos and (bad) mov out xor popf mov or mov sub aam mov imul lods insb adc inc push psllw out pop and push popa aam es mov jle (bad) sbb ror into cld push mov add pop pop mov jge movsb inc sbb cmc dec lods pop cmp cmp in pop mov sbbl or insb xor pop adc mov push cwtl sub add or dec adcl fdiv nop push lret icebp mov daa loopne inc aaa push je or daa fnsave lcall jg mov popa or rclb xor add inc mov xor and jp xor enter cmpsb ds mov das aaa pop mov addr16 xchg cmp movsl and add (bad) add aaa je pop rol (bad) cmp int3 jmp inc fnsave push les ret jb push and into push outsb insb or jecxz cmp insb xchg jo inc ss dec inc xchg jns or dec js pop iret sub push mov inc push push jle ficom sub inc iret lahf sahf jne fs outsl adc inc inc xchg leave sub xchg scas rolb sarb xchg mov jo pop dec pop sub mov add sbb and imul mov xchg mov cmpsb imul add sub mov push lods sbb xor mov leave aaa fidiv addb mov arpl pop or cmp (bad) mull xor sbb mov xor outsb (bad) adc insb ret aaa js and xor in push data16 test leave and sub jne xchg or shlb inc sahf loope loop sub push mov addl les in xor dec inc pusha (bad) push adc xlat or push imul mov lret insl insb popf and mov cli popf xor xor icebp test xchg mov adc add push adc or enter inc cmpsb insb add enter mov int3 pop popa and sbb shrl cmp insl add sub insb mov or jnp mov loope (bad) sti popf aaa xor lcall loope jb arpl daa enter sbb xchg and mov pop xchg push push aaa fistp sahf mov push mov ror mov lret or xor or fiadd add mov push add addr16 pop adc movsb xchg jo dec shll int xor mov inc sub int3 pop js sahf push pushl and arpl in or jo hlt add adc xchg les js mov dec mov test test add dec jecxz inc mov ret inc loop cmp lock push sete test xor add mov sbb outsb inc out movsb in adc lods mov les daa popa lea and (bad) xchg (bad) shll bound (bad) or dec push ljmp jo mov xor fisubr push xor fcomps les ret pop or and and push rcll dec (bad) movsb lea mov shr ja enter mov push sbb in cmpsl mov add movsb pusha add sub or push popf push aam mov and pop inc sub pop (bad) hlt test add subl jno popf fadd (bad) mov test pop mov enterw aas fmulp rorb add test sbb push mov lods sahf imul sti add loop adc movsl (bad) and xchg xor popl pushf movsl xchg mov cmp lret xor out push test rolb xchg test pusha mov mov dec push popa xchg loope daa sti jns or or or mov addb inc stos jo rcl bound jbe add mov (bad) loope pop insb flds je xchg movb add add cmc xor adc aad dec cs mov movmskps xor mov es pop loop jl mov or (bad) test xor inc aaa or (bad) xor je pop sbbb or xchg mov leave and sub or rolb sbb icebp dec jnp inc leave adc xchg jo mov in loopne popa addl sub cmp out stos inc mov adc adc inc sbb inc (bad) hlt xchg rorl sub mov add dec movsb lea sbb les insb sbb inc inc and movsb imul leave push sbb add fstpl and and bound inc lods popa xor int3 lods mov insl or popa inc ret push and pusha imul cmpsl add popl (bad) dec mov sub jmp rclb fadd pop xchg sbb adc push aam and std rclb leave (bad) pop adc mov mov orb inc dec cmp xor push mov jo sbb and rcl inc push push or dec lret insb pushf sub dec and pushf adc int ss (bad) mov and jge pop test lret add rclb push fbstp or xchg sbb dec movsl mov in das je popa adc sub push test push and aas rolb xor push inc jo imul stos subb jno stc jmp sub mov cltd iret add add loope lds insb cmp mov xor jl pop cmp sub add (bad) sti or sub int sub and pusha bound pop pop out sbb arpl push xchg and pop test adc lods sub arpl and fwait xor push sbbl pop cmp mov push inc imul inc jbe (bad) xor dec or mov add dec sub mov adc sub das push inc push xor pop shrl and cltd loopne mov inc jl arpl mov push test gs xchg cmp xchg pop call and jo lret xor shll jecxz pop mov cmpsb sbb xor and xor xchg test sub adc mov sbb xor cmpsl adc ja sub inc cmp adc push add mov (bad) faddp lea pushf push mov ret lds in cmp mov dec (bad) (bad) aaa loope loope xchg xor mov add aam fnstsw loop push xlat aaa push movsb xor jno dec sbb repnz and dec sti daa call mov aad rol and in jb inc add insb imul push mov rorb xchg push push and pushw sbb add inc test flds add adc test xchg sub lods pop xor push mov adc (bad) int3 xchg add test and sbb sub mov into mov sub cs (bad) add ss xor pop int3 rcrl sbb or sub out add pop stc or iret xchg xor and imul sub jno sub sbb mov inc cli jno addb and mov xor sbb cmp repz dec dec jl sub mov sbb loope sbb cmp add mov andb mov pop inc loopne jecxz pop or dec in xchg mov orb sbb push mov jp xor cmp (bad) (bad) adc sarb lret inc jg mov xor arpl roll push add add fiaddl mov inc jl sbb lods xor movsb aaa adc cmp es lods sbb push or pop xor add xorl adc cli mov dec bound lret push je cld mov test jl and or or addl test push inc (bad) lods in xchg hlt mov mov cwtl in ret rol lea aam in pop in cmp es mov movb xor cmc dec jne iret xor cwtl and mov cmp xchg pusha fnstcw sti in push hlt xor or xor cltd cmp mov sbb jmp popf or xchg and add ljmp test inc ficom push or add pop in call xor dec sub inc gs push adc stc xchg xchg mov pop test mov cmp (bad) (bad) bound or rolb into xchg dec fdivs insb inc mov sbb push mov xchg xor or xchg inc xor dec or adcl inc scas jno fs (bad) js imul popa and dec add sub test xlat mov adc inc dec fadds insb lds lods xor arpl ss or cmp lock sahf pop test fstpt inc sbb icebp addb cli mov adc push mov adc lea mov test js sbb pushf add dec xor mov and fwait test xchg dec push dec loopne ficom or dec ljmp lahf cmp push xchg fistpl add daa and add push data16 push dec pusha mov test das adc jle js aad les pop (bad) (bad) enter je int3 fsubs or push aad cmp xchg sbb or shlb fs pop cmp mov add jno sbb fcmovnb inc pop arpl adc push popf pop push out add mov push pop ret add rolb rorb push dec jmp sbb jne inc or jne imul xor add fwait push cmp jecxz rcl shlb mov subl data16 push mov or rolb outsb (bad) mov leave or imul inc hlt in mov (bad) (bad) xor sbb cmp stc jo sub (bad) sbb and lock lea sahf rcl and (bad) mov or pop cli dec or xchg jbe mov das fwait call arpl inc dec sbb xor dec jne ss rolb push (bad) icebp je pop adc (bad) ss sub enter ret clc xor enter (bad) rorb inc sub cmp pusha or mov add imul or test sbb xor das or cli int3 inc jp sarl sbb ja pop mov shr shrl popf and addl push or sub pop (bad) jp insb push inc ret mov ljmp loopne (bad) mov dec dec arpl cwtl bound or dec out data16 inc mov and (bad) push cmpsl test xchg xor nop mov loope adc or push cltd sub sub or lods in outsl push movb insl adc xchg lods or aam pusha and fistpll fcompl and (bad) mov xchg jo pop int3 push (bad) insb pop mov push push push loope dec test imul pop data16 push gs sub pop mov or stc and mov sub out sahf inc xchg add add mov jo mov sub mov cmpsb cwtl (bad) cmp rcrb xor js loop xchg xchg roll aad jl sbb jo idivl cmpsl test pusha cmp push mov es faddp test in test mov popa fnop in push sbb js jns xchg inc or mov stc jns xor push xchg sub movsl movsl and mov mov rclw pop test pop rolb xor push xor and inc cmpsl xor add mov push test add js mov add js or stos sub inc push pop out or sbb mov sbb fabs ret shrl (bad) sbb mov pop sti mov daa popa xor xchg or mov adc daa or test psrld clc je sub sbb pop pop stos arpl (bad) dec and cmp mov test in int3 inc mov add xor adc pop adc mov add lahf mov cwtl xor cmp cld push push jo test je ret scas stos ss cwtl xor loope arpl lods test mov les dec cs inc sbb js push adc imul sbb add dec mov aaa lock cld jbe sub ret mov add je shrb inc or adc ss mov ljmp push inc jae int3 (bad) dec je inc (bad) dec sbb lret jmp sbb lock add nop pop inc repnz jo fs les push push shr mov fnsave scas xchg mov lret mov int3 push frstor scas mov pop sbb cmp inc movsb push adc cmp cmp add int xchg push mov xchg shr push inc mov or test inc in dec dec fiadd jnp xchg xor scas xchg xor call and mov adc adc aaa sub shrb xor mov outsl lret xor mov inc sub cmpl mov (bad) and lahf aam mov loop add add lcall dec lea sub or xor or add xchg or (bad) xor rolb jp into xchg mov add dec cli adc xor sub sbb ds push mov cmp add mov pop lods scas push mov mov xchg lea adc adcb sub or cmp loope addl es mov adc popa popa fiadd and dec inc aaa xlat mov (bad) imul adc adc mov or lock das (bad) iret call insl jl insl loope outsl call test cmp rolb jg ret cs adc push rclb (bad) mov xor ret inc (bad) test dec ds jp add push push and push icebp xorl sarl (bad) mul mov adc jge test push lahf (bad) xor add inc loopne nop outsl dec sub sub dec xchg push lea mov or or call adc sbb ss lds pop sub xor or add cmp loopne push pop mov add mov hlt sarl mov dec movsb pop out lock movsb fist jo je (bad) ss mov dec inc dec push pop das or push jns dec das test jecxz inc mov mov in lcall call (bad) test cmp add dec add add dec push arpl jne or idivb inc movsl dec pop fstps clc (bad) icebp inc mov xchg xlat xor ret mov (bad) imul lock xor insb jecxz pusha arpl sbb and dec dec adc bound xor rcrb push cmp sub push repnz mov xor add sub mov orl jl (bad) pop dec pop aaa shrb mov add mov push call cmp or xchg push es sub mov js sbb ss addl loope sub and iret rorl and inc lock (bad) pop push pop inc pop sub movsl push pop push les (bad) repz subl sahf adc add jo inc mov (bad) rolb inc arpl outsl setns pushl dec in lea xchg pop rclb movsl ret jnp mov aam and sub adc aad push mov mov (bad) adc int3 push sbb add pop sub sub sahf loope sub imul dec jmp push fwait iret xchg inc mov (bad) insb les push movsl xor xchg mov push inc inc sbb xchg adc pop dec ds fstps adc test pushf add mov (bad) or add push (bad) and lahf mov mov sub es sub jne jo jns insl add sbbl and adc add js fcmovbe fistl orl dec adc mov and dec mov push and cmp test into dec fistl jp js mov icebp fisttpl popa lods pop jb xchg scas mov add cmpl popa sti push xchg jle add bound or mov jno inc rolb test mov push sbb mov cmp mov adc cmp jno ljmp inc mov shl adc ss jle (bad) and (bad) push adc or xor mov mov push and and add or dec aam mov xor scas xchg addr16 or stos mov aaa pop mov adc dec pop sbb xchg adc ljmp ficom sbb xchg imul shrl or push jbe mov pop xchg cmp xchg pop ret push nop lds adc adc pop das jecxz loope outsb mov mov cmp cli adc (bad) inc sub (bad) mov xor and sub pusha push inc sbb aad icebp ret xor shlb xor bound (bad) mov stos jb test lret sar xchg mov push sarb dec ret pop pop mov (bad) popa ret sub mov xchg loopne popf pop mov add subl xchg push daa test enter dec sub xchg popf lods gs fimul push mul and push push inc lea int3 out bound push inc sbb fwait pop frstor cmp xchg outsb rclb mov and jp add adc inc inc push or dec inc pushf inc mov lods pushf or dec add popf mov cltd or inc sub imul dec test or pop dec shlb xorb lret mov xchg and pop sbb sbb pop arpl or loopne mov pop mov jmp push fsts xchg xor fstps pop fcomi shr inc (bad) aam lret mov push dec (bad) jp dec jbe or adc xor inc pop pop adc push inc loopne mov mov fs push loope cmp and or dec add add mov vcvtss2sd smsw add pop icebp mov and aam xor inc test mov loope xchg adc les or es push push xchg (bad) adc xrelease add mov adc movsl xor push lock push ja add adc fs dec pop pop add mov mov jno inc addb sub out pusha gs mov (bad) push sbb mov push sub mov push inc and inc pop popa rcrl jl test movsl pop fisttpll dec add mov mov push jnp mov and es test mov xchg lcall cmp add lds xor arpl inc aad or lret or xor test push pop dec ljmp loope mov sbb push xor rorb sub lods inc mov inc insl adc pop add imul aam ret add push movsb jo loope and fwait cmp and add push or mov arpl in cmp and mov dec or cmp cmp mov xchg xorb inc ret jns xchg xchg pop mov enter xor lcallw sub cmovae dec in or adc sub mov daa push mov or mov adc cmc ja xor jne arpl push jae test and lahf xor sub adc pop cmp cmpsl shrb add pop loop cmpsb pushf cmp (bad) dec test xor insl dec add es fmull (bad) loope sbb cmp xor adc mov or push sub scas cmpsb push sub aam enter ljmp mov dec jae xor lods push mov jnp inc inc pop and es mov add pop or jb push mov or rolb fs mov fmuls pushf fdivl jno scas (bad) lds movsl mov xor push lahf movsl jne (bad) mov mov lahf sbb bound dec insb pop sbb mov mov rsqrtps jmp cld fsubr nop dec test dec or lret dec or sub jp add inc fdivs xor add xchg jbe call pop (bad) xor add xchg negb adc xor add js push and or loopne (bad) lret (bad) pop popa xor js xchg andl and sbb sbb xor fmul fimull sub imul scas jg sbb insl (bad) sub sti push addr16 inc data16 push pop add push mov or leave mov inc sub insb sbb popa mov lock sub test js sbb or mov mov enter pop fwait rorb loop mov enter and in mov mov mov stos push into (bad) push ret xchg rorl repnz sub adc xchg mov les sar jge pop pop dec jecxz push ret mov and sahf roll sub xchg sub sub and and mov add test dec sbb js test loopne aam ficom dec inc scas cmp fdiv cmp fwait test movsb xchg sbb mov mov cmpsl mov or mov test pop idivb ret lret nop test cmpsb adc cmc insl lea pop test and mov and addr16 jns add daa add repz js test fld mov xchg push inc pusha sub stos (bad) pusha popa das fsubl adc cmp lods adc mov adcl add rorb imul add mov mov mov pushf or std ret mov fisttpll dec inc cwtl mov cs xchg test sbb sbb cmp xchg les cmp ret (bad) sub xor and sub cmp (bad) mov inc sub loope xor das inc jle pop lods ret add sbb xchg pop mov test push mov out inc mov fsubrs mov adc add cmp inc stos add cmc push sub or xor adc (bad) aam loope (bad) adc in ret add sub dec ss andb js es lahf clc movsb sbb leave dec mov js pop ljmp xor and cmpsb nop dec add xor fidivl mov loop cwtl cmp aad cmp and pop mov pop sub adc adc sbb ret xor add xchg addl or sub sub inc adc adcb mov jg stos rol test paddq xchg inc pop aam mov and adc mov ret jmp mov lcall push es push push fidivrl mov xchg xchg popa mov jno push fildl mov je push addl pop dec and in sub fwait mov (bad) mov jno fistpl jo push pushf pusha xor popa test xchg inc lea or cwtl mov mov pusha out sbb add cmc push adc repnz xchg pusha dec test pop pop add push loope pusha outsb mov loope mov repnz and mov (bad) or jmp gs xchg sub jo inc ror addl xor insb push jle dec shl cmp sbb mov dec test js push xchg (bad) test add js pop xorl jae push test stos out push aam lea mov imul in push sahf push test mov fisubr xchg aad xor test das pushf add inc dec and cmp inc add mov jae and or inc fmuls jmp orb in sub or fwait push cmp push out daa frstor in dec push ds pop loope and and lods (bad) int3 or mov adc (bad) push xor std adc push mov add dec or cld ror push cmp lea add push (bad) lret mov gs cmc aaa push push inc jmp xorl mov jne fwait (bad) fidivrl bound inc rorb dec arpl or add jmp pop xchg rorb inc sub leave js or sti push ss and flds push dec mov add lds insb sub cmp out pop add movb roll je,pt inc imul jbe inc adc xor nop rorb daa sbb insb and add repz aad cmp cmp (bad) and and sbb mov mov mov adc pop xor sub sub add (bad) jb mov inc push fidivrl lret add sub xor cld xor sbbl cwtl test pop sbb (bad) int das ret sub sub adc mov ss jmp mov fs mov (bad) lret sahf mov ljmp sahf pop stos or lahf dec xor jmp mov dec pop shl inc bsr lret add or fmull or loop (bad) add inc inc push pusha or pusha icebp int3 inc mov adc int cmp insb and shlb push scas outsl adc fild lods scas insl loopne sub fs or jns int push cmp repz and ds leave push sub imul mov xor push mov inc sub inc mov cmpsl xchg mov add jecxz cmp xor js daa adc bound aam sub lret fwait adc arpl xor fld pusha mov cltd mov pusha dec sbb push dec add aaa icebp shll popf xor dec (bad) xor pop leave push add loopne test cmp in add or bound sbb pop imul or and or adc jne pop cmp pop sbb idivl mov mov (bad) mov add add pop ja aaa in inc cmp les flds shll aam pop inc inc call sbb pop or test ljmp inc adc or and adc lods rcrb pop xchg test lods inc or shrl test xor inc mov or dec sub dec add stos adc jo test inc nop bound sub xchg mov push jb sbb inc dec outsl push mov cmp popf fs divl bound int3 test push dec jnp loope add test mov jge cmp xor push das add xor add adc dec (bad) xchg or mov add cmp pop (bad) sbb js mov je add mov inc inc (bad) push push and sub jb push xor sub push dec stos es popf or push inc call sbb test cltd aaa jl jb mov xchg js pop (bad) cmp mov dec sahf sbb xchg lods xor inc mov cmpsb push inc xchg add mov xor xor ss sbb adc cmp push inc btc loop nop test lods jg test add aad ret leave jmp jb xor gs daa push push (bad) xchg or mov or rorl addr16 add imul fnsave cmp pop sbb (bad) outsl pop popa icebp or xor test cmpl cmpsb test push adc inc mov and and insl jns xor ja xchg mov xor adc and sbb mov add inc adc dec or out fstpt pushf mov js daa or mulps fistpll pop sbbb xchg jbe sbb mov arpl push cmc jp sbb jno lods push push (bad) cli popa ffreep or xchg jno push dec or xchg and push cmp push lock push sbb push jle mov mov insb leave sub inc lahf es arpl repnz push sbb sub addr16 cmp outsl add adc xchg inc cmpsb cli cmpsb insb adc jo test jne lret outsl inc and mov mov cmpsl aaa fwait mov mov les ja or adc xlat adc pop sbb pop outsl and xchg popa and push add add mov movsb rolb movb movb adc dec ja or mov push aaa xchg sahf jg ljmp pushf xchg xchg lods xor int rorl mov cmp sub pop inc test xchg push add je sbb sbb into pop sbb and adc xchg xor adc add imul and push push adc pop sahf sbb xor push and add sbb and lods je and push and and inc pop mov test push dec lret js sub lock rolb inc addl cmp or aaa push sbb and xchg lds cmp ljmp les imul (bad) sbb pop sbb fsubl lea outsb lea scas loopne aaa xchg ret lods cld pop (bad) inc insl call sahf rcrb clc divb aad push jb cmp push dec adcb xor ret and add insb xchg dec push (bad) mov bound xor mov pop dec jnp xor jbe lret add rol inc sbb and push jg push gs fmuls cmp or cmc pop cltd push add int repnz and fcoms lods and cmp and addl mov or xor and mov arpl mov sub or jbe pop arpl and pusha inc repz mov popf pop sub cmp icebp and mov loope mov cmp sub mov sbb dec push dec movsb fwait sbb inc insb loopne sub mov dec std aaa xorl stos insb mov mov mov xorl jnp xor pop je adcl mov sub sub (bad) fsubl xchg orb xor xor movsl addl dec mov cmc mov les push adc mov (bad) sti add adc push push sub pop xchg ret push (bad) jne add push lock mov data16 test jne add add shlb xor xor and sub add fstpl fnop xor xor xchg ret stos sbb push aaa sub push and inc push (bad) aam xlat xor pushf dec sub jo mov sub adc push pop add push mov mov into or add pop jmp or sub mov call fildll and test out sub outsl mov icebp pop push mov push and xor ds fwait cmc dec fnstenv adc in (bad) cwtl sub mov mov or lahf pop aaa cmp (bad) ror lods or and sahf jge ss (bad) mov mov mov sbb push xchg mov (bad) mov lock or fwait mov push mov xor fiadd addb cmpl outsl inc adc imul das add add jmp and movsl aam sbb fisub push xchg nop popa xor mov cmpsl andl and stos inc popf popa mov rorl jecxz faddp or test sbb or xor sti dec mov call sbb movb pop inc add add in mov push jo mov inc outsl add mulb dec mov sbb adc jns sbbb fcomip cmpsl movsb lds faddp ss jo pop lret sbb xchg cmp sub cmp or mov pop inc sub loopne ljmp cltd xorl sub dec mov lret shrb mov mov adc repnz inc sbb arpl popf xchg scas call loopne nop loopne jo and mov sbb andl cmp movsl push inc push rorb inc pop or inc cs mov imul xor adc rolb into movsb dec rclb inc rcll mull inc stos mov xor xor xchg pop mov aad add push and sub in mov mov xchg xchg mov les inc (bad) clc push insb imul lea fsubrl jno dec mov mov mov (bad) mov sbb mov xor outsl jl (bad) mov inc ret loopne mov pop jl cmp add mov push sbb es addr16 mov movsb (bad) sbb jg popa sub mov pop and and test mov push dec mov add mov ja test ds inc dec or cwtl movsb jo dec test dec rolb add sub rdpmc inc xorb (bad) or imul inc pop scas das int3 mov push test je lcall or shlb daa xor or test mov iret das mov cmpsl or add lret push add rclb in add imul add jmp addr16 pop mov push cs outsl sbb cmp (bad) dec fnop push xchg (bad) push pop das cmp mov push mov xchg jo (bad) or ret pop mov add rolb xchg mov add and push test push jne aad nop in and fmuls sub and mov lea mov daa cwtl inc mov push ret mov xchg fmull lret test sbb add add jo leave mov inc mov lock add (bad) lret add and pop or pop int3 lds pop je jp les shrb in lret push and or pusha psubusb hlt add adc ja inc push adc add and (bad) jmp pop adc mov add cmp imul dec or dec sub adc movb adc loopne sbb push aam jg xor bound mov aaa sbb vaddsubpd mov int3 nop orb add xor dec in dec xor mov adcl dec pushf mov adc jecxz outsb dec xor cmp daa push xchg pop inc mov pop gs add inc dec orl outsl ds test dec add or cmp adc jecxz loope or or js push add repnz push inc iret mov pop ret mov sbb lea test sbb pop adc pop push pushf ss push dec das ret out add pop xor test xlat mov rcrb int3 or bound test lock fstpt subb push daa or pushf xchg orl (bad) add sahf add adc and jns rcrb cs ret xor popa cmp xchg (bad) icebp xchg lds ret lret (bad) or sbb mov jnp aam test test or inc mov add dec mov shrl in dec imul jmp into or inc or (bad) je outsb orb add test popf clc int3 in and xchg iret pop xchg mov inc and sub xorb add xor jmp lods pop inc dec sbb mov cmp int xor lock mov je mov mov imull add leave mov add push loop gs aas or nop mov imul cs in push ds pop pop sbb fdivr aaa and add imul xor or add xchg cmp adc cmp imul add cmp cwtl and xorb mov push inc sub enterw fnsave pusha insl or push movsl lods out pop and addl sbb repz icebp mov push add addr16 iret adc sbb or test add in daa inc pop jnp xor mov jne and pusha loop lds pusha dec enter enter sbb (bad) cmp push inc test popf adc push mov enter fcomps out roll sub shrl mov movsl cmp adc push lods lds ljmp decb mov or hlt mov sbb push movsb into into enter push inc das popa and hlt popa cmp adc add inc add scas xchg in add mov aaa in add imulb adc adc inc cmp mov hlt or sub or pop clc or or rclb inc nop (bad) dec jmp jle enter fnstenv insb popa or (bad) (bad) shl mov (bad) punpckhwd and scas push jnp das sbb lods lret sbb repnz jmp mov adc fwait sub or push mul mov addl or ret sti enter jo sub das adc pavgb sub dec or nop inc fstps mov jp sbb jnp pop jecxz sbb test ret mov adcb sbb push fmuls inc push pop add and and pop and xchg dec lea sbb shrl sbb mov pop pushf rclb ds pop pop xor js add xorl pop arpl push fldenv lea sub rorb loope lsl add es fcompl into (bad) (bad) xor test cli ja xchg or rorl lahf push mov loopne (bad) call rcl dec mov add imul in ljmp xor dec mov jo inc fwait orl xor or add pop lahf add jno fcoml sbb push pop cmp imul jno add cmp mov je imul jecxz inc xor pusha test sub xor mov xor mov mulb push inc mov jmp js fisub dec sbb subb inc rcrl bound sub (bad) mov (bad) jecxz cmp test push and xor add movb fs mov dec jno pop mov arpl or or sahf jo daa mov mov xchg sbb xor bound sbb push inc arpl pop rcrb (bad) fdivrp aam push int3 lret pop add xchg mov (bad) xor mov pop iret pop push push addb and and jmp push jo mov mov inc aaa add repz pop add data16 outsl push mov inc loopne cltd mov sbb or cmpb jo sahf push sbb sbb inc (bad) lock jbe mov push mov pop lods fs mov jae push mov add ret (bad) or mov push fs mov lcall mov lea pop add aam add data16 in jne sub shlb jmp mov popf mov mov inc je jmp loopne and sbb sub (bad) xchg mov pop or xchg mov pop lds bound fnstcw adcl scas jecxz xchg gs addb sub in fadds test mov loope icebp xchg jp mov or or and enter aas movsl movsl test xor xor xchg cmpsb mov and popa lods (bad) jno sti jno sub add sti push push xor (bad) xor addl lret imul mov and jns jb insb das imul test lock jp cmp xchg and xor mov insl insl dec pop jmp pop loop add aad cmp pop jae xor repnz adc or insb mov xchg xchg xor cmp add push dec ret and mov xchg add sub xor and mov pop push test sub jo push sbb mov jno and aaa inc mov cwtl inc mov pop add mov (bad) (bad) imul loope stc push pusha push daa add push add pop sbb xor xchg add push movb sub add sbb insl stos dec pop sub (bad) (bad) xor mov (bad) mov dec daa je nop test add xor int3 pop les sbb sbb (bad) (bad) nop mov pop or pushf sarl addl xor insb pop xor mov adc cmp mov xchg xor dec sub pusha nop pop jecxz cmp lret pop pop aaa mov fistl jne xor xlat bound loope xor mov aam pop and sbb jno push movsl or sub mov xchg loope pusha jge jbe loop sub mov xor sbb or inc pushf or ret jmp aam and jmp ror in add push mov mov push aam push imul cmp (bad) sar or test ret inc cmp (bad) jle sub (bad) ss push xor pusha daa negb sbbl loope add icebp mov xor sub mov imul outsb xchg test push das cmp lcall mov leave xor pusha xor xor cltd push or add adc adc lods add popa test popf xchg mov push nop int3 popa push (bad) jb inc lret dec mov aas sub add ss mov test loope out arpl bswap (bad) sub pop fstpl inc jmp sbb pusha or pop call and test xchg pop adc aam add cmp mov aad sub cmpsl sbb mov (bad) jne xor xchg pushf mov dec fdivs je in loope arpl jne mov push or dec pop and push jp xor mov cmpsl js or add addr16 frstor loop imul pop addl loopne lock mov sub stos cmp ret cmpsb imul push sub and aaa lcall pop sbb rcrb in and push and aas cmp insl and adc mov cmp es xchg cmpl xchg inc jmp lods stc or mov inc pop mov push sbb xchg pop mov jae icebp das lret adc inc and lods or ret addr16 popa adc cmp rol pop xchg add rol inc fldl cmp and repnz mov and push rorl fild mov dec and movsl push addl pop add dec sbb test dec fstps xor pop jp xchg cmovb lret out xchg addl test ret aam andb mov fmull inc dec popa lods shll js inc sub rorb mov push mov incl inc add dec xor or ss aad add and je adc (bad) rclb (bad) mov mov sub xlat hlt mov pusha adc clc add rolb enter lret push mov lock test or dec push scas mov mov imul into push sbb pop enter (bad) xchg adc push int lods jo and sahf cs sbb xchg cwtl or (bad) and icebp jl push sub push hlt xor mov xor or inc pusha jno lahf lods or add jb adc lea push cmp fwait aam inc sub repnz sbb dec pop imul cmp bound dec mov adc inc js hlt inc or rolb push int push divl mov inc sub cmp sub or mov (bad) sbb cmp jecxz cmp xor sbb daa outsb mov cmp sub (bad) dec jmp adc adc sbb pop sub fsqrt xor pop clc adc sub enter add pop mov mov and pop sahf fdivr lret arpl inc dec inc pop xor ss or fadd fiadd push jmp inc or sarb mov xor mov (bad) mov lcall sbb push or adc pop dec or push inc stos lret sub ss jo lods xor cltd xor (bad) addl pop cmp and add ljmp lods push sbb mov addr16 dec mov jl insb jl push outsl add and add lret icebp cwtl add sahf shrb or fadds (bad) xchg inc adc pop mov into sbb shrb xor aaa fadd loop dec add lret orb cmp mov xor and or mov cmovo in mov push clc add mov dec sbb popf mov mov stos pusha cltd and sub out (bad) push add and sahf mov lea mov leave mov stos addr16 jno (bad) jno mov jge mov push mov nop mov loop outsb shlb in repz rol movsl dec push sub andl mov gs imul sahf arpl dec push in xchg out or dec sub and ss lea mov (bad) enter (bad) (bad) dec mov outsb jne loop push push sub fstpl mov pop and lods xor add clc xchg jbe jecxz mull lahf sbbb loope mov xor test cwtl dec adcl stos add mov sbb push sbb sbb (bad) (bad) adc js pusha js lcall or jb mov cmp repz xor push dec fist adc into mov arpl jecxz gs das lds jecxz adc imul sub jae inc adc movsl mov jae sub push add push add les in sub scas (bad) movsb push xchg jno icebp testb xchg add (bad) out mov adc loopne sub xor imul or loopne rorb loop dec cmp test and add sub js sub inc test mov adc ljmp add lret and mov (bad) enter arpl jb stos mov adc lea and add inc cmp lock rorb sbb adc push pop mov andb sub test iret rol jo outsb xor add imul cli jg cmp push pop xor pop and mov popa jo sbb inc or in cli outsb nop mov pusha rolb loopne mov lods push lahf lea push (bad) sbb into mov stos popa movsl rolb mov pop in xor fnstcw and push rolb icebp sub push (bad) arpl hlt lods mov inc push push and loop in cmp xchg movsb cwtl (bad) cmp pop sbb push add cmp mov and add or add scas aas stc loope inc adc int3 inc mov sub xor jge add adcb sbb addr16 (bad) and ret insl adc xor add and push das outsl sub or and rolb dec es movsl lds xchg insl bound sub sub add into xor push mov (bad) rcrb push cmp jbe test xchg push orl mov mov and mov and add out lods or popf gs lcall add fisub adcl enter xchg mov xchg dec add imul pop and inc cmp cmp jp sub stos and sub push push inc cmp je sbb cmp mulb mov (bad) and sbb aas xor add (bad) sbb cwtl (bad) fildll jne jns jo inc mov push mov pusha daa push push xchg orb popa add scas xchg sub jge adc jg sbb inc add push fdivl xchg xchg push (bad) xchg xor addb jbe (bad) cmpsl mov rep push in movsl xchg and out push negb inc repz dec pop pop push adc pop dec mov push pop or pop cld daa push dec add mov movsb test and adc inc and xchg rclb fild and sub mov dec mov adc cmp mov adc pop cmp cmp pop jle mov lds sbb and (bad) dec cmpsl in mov cmp mov mov lds int sahf cmpsb xchg imul mov test add cmpsl gs or xor push in cmpb inc sbb loope add movsl mov add pop jne rorb mov punpcklbw pop sbb lcall and mov inc add jo adc insl cmp inc sbb in scas addl push inc loop roll cli mov test lods dec jle add inc mov imul loope loop daa mov aad pop ret xchg (bad) or jo xor das and loopne sub enterw ret (bad) or xchg add xor cmp add mov mov add or hlt add cwtl in xor dec or dec add add aas add xchg push in movsb ret or mov rclb dec test add jb and jmp or in inc adc lods pusha arpl jmp call popa cmp les push xchg in fwait inc sbb xchg push in mov mov xorb data16 cltd add (bad) pop lcall sti add ret aam (bad) sub sub cmovno adc push sarl jecxz into sub push insb mov pop sbbl movsl ret push cmp mov dec xchg js and enter xor pushf push pop repz movsb push push pop (bad) insb inc call sbb add ds or cmp daa mov loopne shll push and adc ljmp mov out add push adc daa push xor add imul in rorb sub xor sbb sbb sbb in and es cmpsb jmp shll es sub jno or add inc or dec clc adcb sub lds adc out pop (bad) fcomps sbb lret test cmp push xor data16 loope xchg jo (bad) mov stc nop mov in adcb mov adcb inc push push popa movsl cmp pop mov push cwtl inc fmul (bad) or mov push loopne addl ss xor scas push adc aaa lea sarl mov les les mov pop aam dec test addr16 add lock lret add xchg xchg push (bad) (bad) lea xchg dec pop push push xchg imul lret movsb hlt add sbb mov jae mov sub das inc lock outsl xchg aas mov add dec add mov sub or cmp fldenv (bad) and mov (bad) and sti sub mov ds stos in insl push pop inc mov push adc ret xor lahf push inc push sub inc insb cmpsl aaa push jmp (bad) push xchg or mov or in adc inc cmp adc or sub scas aaa and ret xchg mov shl cmp (bad) aad jle lret cmp mov rclb mov jle inc test loop xchg add add jmp movsb out xchg jns addr16 test pop add push outsl cltd jmp cmp mov dec mov rorb jb orl xor arpl cmp shrl xchg and neg push nop push outsb popa insl push jl lret pop add rorb repnz mov sub add in sbb xor in nop icebp jnp imul mov mov push and movb dec xor (bad) jg add fcomps push pop aam pushl push adc loopne arpl loopne clc adc sub mov sbb jbe mov or roll inc (bad) lock inc loope add pusha adc pushf stos aad orl popa loope mov or into hlt or sarl sbb popa xor inc adc mov xor adc push push in ds push fcomps ds addr16 mov mov outsl jmp cmpsl mov adc or mov add or mov xor jo int3 mov dec ljmp (bad) jb adc add mov add rcl loopne sahf dec xor adc pop lock outsl arpl mov cmp dec loope pusha lods xchg or cmp jecxz xchg and mov sbb decb xor xor or (bad) cmp popl (bad) or and je fisttpl imul stos sbb push cmp adc jbe (bad) xor add adc ss addl push int3 daa and loopne (bad) lock std (bad) push sbb scas int test xchg scas adc out xor movsb fs cmpsl and ret fimull lds adc dec dec sub add mov xchg sub inc lea or aaa mov call push push inc fsub pusha xor pop xchg arpl jl fisubl pop push adc arpl fnstsw add add les add int dec aam cs cmc je mov pusha (bad) (bad) cmp lret mov rorb (bad) push and xor add test add imul js dec xor sub mov hlt jns mov adc cmp sub nop es (bad) pop mov mov aaa sub xchg adc movsb ret mov pushf inc mov test pop (bad) push cmp test sarl shrb movsb push arpl xor popf movb sbb and push push fsubl test mov je mov jl scas pop dec addb lods mov cwtl add and push lret cmp inc insl adc imul push inc add pop xchg push shlb pop jle ret lods test rcrl sbb mov inc call lcall imul xor xchg inc call sub dec or pop xor stc and cmp sub fdivrl bound lock xchg xchg mov inc xor inc test ret mov and in adc or inc jmp ljmp cmp mov sahf ficompl or (bad) ret inc jns cmpsl jae mov cmp lds sub loope lods sarb out pop sbbl aaa and jecxz (bad) sbb stos xchg rclb inc popa loopne lods push ret lods push lret sub xor mov add lods add (bad) sbb test gs xchg test xor mov out (bad) xor jecxz adc (bad) lds add popf lods sbb add mov imul xor loope dec or insl lahf add mov mov mov xor add add fcoml orb arpl inc mov xor pop arpl mov add xor cmp std jle mov mov pop pop or pop add xor (bad) fcmovu pop xor sbb (bad) insl cwtl or mov add sbb gs inc pop pushf add mov and jns push xchg (bad) sbb lods mov or or pop xchg rorb call add push (bad) mov mov out (bad) push sahf xchg xor push xchg ljmpw xor sbb faddp push mov into xchg adc xor mov sbb ljmp in or pushf add xchg dec test mov push xor andb stos dec shl mov sbb or mov sub dec lods add add or inc add dec sbb das pop push pop (bad) scas dec mov nop jno adc xor fs das and sbb jecxz ss push daa xchg lret sub fwait adc inc inc xchg add addb notl adc cld jp (bad) loope enter xor inc pop mov push xchg pushf sub adc test dec xor jne (bad) mov cmp loopne andb mov or sub movsl xor sub pop imul sub test sbb push les or loope bound jecxz xor cs mov jp sbb cmp call sbb push (bad) xchg mov cmc cmpl loop mov or mov imul xor jo dec xor sbb and pop push mov nop add nop in fwait popa or mov das add sbb xor pop fchs add fcmovu cmp es sbb sbb or (bad) xor ret (bad) dec movsl mov pop add ret ja lods push and je xor mov adc loope jecxz mov test fs pop (bad) sbb cmp les dec in nop (bad) loop cs pop pop dec les pop mov mov lahf dec jo hlt (bad) xor adc cmp cmp mov xchg rolb push ret pop adc cmp insl add xor loopne sbb inc adc inc ret add adc sbb aaa rcrb sub insb adc dec or xchg dec stc add faddl pusha insl mov sbb pop fsubs sbb dec in sbb pop cmp add pusha out inc clc aaa jbe dec jbe mov fidivl xchg jp jg sub xchg out scas jmp fisttpl xchg insb (bad) adc in xchg pop (bad) fisttpl xor (bad) cs inc dec sbb mov jnp sbb icebp xchg adc cmpsl (bad) jmp andb lea (bad) mov jae into inc cmp aas call scas cmp or outsb mov mov dec loope push mov daa arpl orb mov dec add ret and lds gs lret ds mov test sub ja push cmp jb push inc inc pop or lahf adc test dec orl xor mov mov or push lods push popa xchg sub xor arpl xor sub test (bad) sub (bad) jb push lods lods xor add dec arpl movsl xor or push (bad) inc jns aam sub add loop outsl pop pop mov or sub dec icebp fisubl push sbb sub adc cmp jo lock loope test stos and je mov xchg add pop mov add movsl loop and into aas jg jns pop cmp adc lret and mov or or adc sbb sub cmp (bad) mov mov insb or popa jne sub xor push je addr16 pop shrb bound push fcompl aam pusha mov ret mov adc jecxz pusha pusha bound inc cltd inc ror sub pop call inc push rol xor pusha fbstp xadd in mov repz dec sub add loope mov scas aam inc or jle jno mov sarl adc loop or adc or fs outsl das popf cmc andb imul sub ret cmovbe dec mov and pusha xor mov push dec (bad) (bad) xor sbb ret pop pop dec jge jo js inc mov jnp popf add and add or loop adc ret fildl (bad) xchg mov lea pop pop addr16 xor call push sub adc adc mov bound shll mov dec arpl jae mov mov loopne inc loopw jp dec imul loope gs cmp adc imul dec xchg cmc cwtl xchg test jbe sub adc add ror outsl and xor push and xchg mov fcomps pop mov es sub test in or insl push outsb push inc xor xor shll and mov adc xor and xchg mov mov insb loop (bad) push dec movb movsl add test inc sub inc push sbb es adc jl or and inc subb dec or pop add add inc mov sub add push mov adc out mov pop sbb dec sbb jno lret jmp test (bad) incl (bad) les in mov test adc andb push xchg mov xor out sbb xchg xchg adc push adc xor sti push (bad) adc sbb dec adc sbb inc int pusha xor mov fs xor push cltd pop cmp setns (bad) sti mov lret cmpl (bad) add pop ja ljmp pushf and jno pusha das pop mov fmuls mov add lcall xor and or xchg daa jge call (bad) xor sub dec xchg cmpsb movsb lret jbe ret in rcll cwtl add push xlat adc mov inc sbb dec and sbb das lret ljmp xor test inc fs mov pusha inc ret and lods or push icebp mov ss mov mov xor sub cmp mov pop lea add js outsl push and insl gs bound adc or adcb and xchg adc xor out daa enter jae test inc mov int3 push jge push dec sub test pop sahf mov cs das dec sbb mov roll sub push insb test cwtl aaa mov loope xchg sbb adc jo adc jae stos mov xor sbb pop cmp or adcb test xchg mov or cmp mov add cmpsl xchg push scas push xchg mov and pushf sub es xor (bad) jo (bad) mov push mov add shrl mov roll rolb push add jo ret test loope jo and adc loopne xor mov xchg dec jns rclb pushf mov or cmp lock or rorb and js sbb out ss push and outsb or test movsb pop adc int3 pop ss push cmp sbb dec inc rolb sti cmovg mov (bad) dec ret xor daa pusha sbb out cmp call dec push and push mov adc sarl out pop rcll sub add push or mov test and pop dec fbstp pusha sub inc add addr16 dec or inc sbb ret loope sbb cmp sub pop or xor xchg cltd mov cmp movsl xchg subl xchg cmp hlt pop add popf lea lock shl add jp mov inc scas pushf or mov lods pop inc mov adc scas xchg popa and enter add mov cmp lcall sub les dec iret test mov mov jno xor subl rol mov xor (bad) cmp jo mov addb sbb sbb jl and or addb dec cmp mov sahf ss (bad) mov sub movsb add and inc sub enter push stc adc xor popa js push enter inc sub adc adc jp push xorl aaa sbb sbb es adc (bad) ljmp xor mov sbbb ret inc les (bad) or js adc cmp adc mov lea es sbbb dec imul cmpl mov outsl popa cmp mov stos inc adc mov addl or pusha into scas or jns and inc and out add xchg hlt adc and pop enter andb cmp mov push inc cmp pop mov cmp add or out sub sub xchg pop sub pop pop cmp repz adc stos push jno lret fidivl pop in sub sub push xor or mov and outsb fidivl inc dec jbe stos add mov popa ret or xor sbb inc jecxz sub test xor imul adc mov adc cmpsl test sbb xchg cmp dec (bad) cmpsl icebp in imul push pop lods mov push or ds mov add sbb sbb pushf xchg pop loopne dec push (bad) rorb adc fldenv (bad) xchg or enter xchg cmp sub mov pmovmskb rorl cmp bound stos inc movsb int3 sbb push sarb add lods lret add pop (bad) cmc xor jbe push test inc add lods pop push push ljmp push mov and mov sbb or rorl nop mov xor lcall test loopne adc popa add mov ret and dec push and push mov xchg jb loop cmc (bad) fnsave aaa mov sbb dec xor rorb mulb dec jo lods sub add imul add sbb sbb popl pop sub imul sbb xchg xchg scas and mov adc pop push sbb xchg mov jno mov (bad) push mov lds xchg xor popa test leave xor pusha lea cmpsl (bad) mov scas dec psrad test push adc add mov rolb pop mov inc into in inc xor pop cmp mov (bad) mov lds xor lock in add mov hlt push aam xor sahf jle mov add pop rcll or cmp cmp (bad) repnz sbb and aaa lods inc xchg inc mov rclb xchg or push mov push out es clc mov mov sub sahf adc or jl pop lret addb test xor adc loopne pop add xchg xchg sahf add xor jp addl ret lcall push and (bad) jecxz xchg xchg data16 dec xchg sub xor and (bad) clc and dec or xchg xchg inc fstps jecxz pop add es mov or lret cltd and test mov xchg xchg sub or out fiadd push jno mov nop add sbb test add sbb pop or push sub pushf inc sbb inc mov and dec mov add xchg push jb imul sub test (bad) iret pop fcmovnb pop cmp in ss les push dec (bad) push or xor xchg cmp sub push dec fisttpl push xchg inc (bad) inc mov jnp or icebp rol jo dec add addr16 adcb imul and nop cld and xchg adc push mov (bad) mov mov mov repnz fs jno xor xor movsb ds out mov mov sbb push (bad) outsb push cmpsl pop or or insb and push push mov cmp pop das xchg xor dec cmpxchg push rcrb sbb pop mov sbb xchg test aaa sub add push cmp xor or in or jbe (bad) call movsb and sub popa imul jb sbb daa and xchg pop sub (bad) lock in iret sbb (bad) push and push jg lcall call dec cmp (bad) adc pop xchg xor add or dec leave mov or xor imul js out mov in xchg mov cmp mov inc dec call jo jg (bad) xor rclb xor sub je mov dec lock lahf les sbbb aaa adc sub test loopne xchg inc divl (bad) mov (bad) cmpsl fwait push mov adc pop (bad) pop in mov pop lods cmp xchg cmp and js xchg xor add fstpl adc (bad) cmp dec inc mov out rolb pop push add or mov js push dec movsl add inc xor xor mov add out movsl pop aam mov lock mov ja add pop call sbb (bad) pop xor push mov sbb rolb cmc sarb test mov fldl rclb add add sub out jbe pop xorb test daa inc popl fisttpll ret ficom add jp sbb cmp dec inc jge (bad) cwtl loope sub popa aaa and add aad les adc loop stos jl (bad) add scas and movsb pop pop and dec sahf ret daa pop (bad) jns push mov leave or rolb daa popf or push imul xchg stos ss (bad) bnd adc pop xor mov movsb lcall rcll add and sbb bound push pop adc mov cwtl dec je push xor xor mov xchg inc mov es mov daa fdivrs lods test cltd test sbb mov add xor sbb or mov push pop repz icebp and or fsts pop jecxz vmovupd push cmp pusha cmp sbb (bad) lret (bad) rclb sub dec lret imul lds ret mov lods adcl frstor add sub dec jp lea mov pop and mov mov outsb in adc adc ss push rcr pop push xchg imul cmp ret pop mov add inc mov daa pushf jp jl or or pusha rclb add ficom inc cmp jecxz sbbl push xor mov divl scas jnp pop xchg pop fldl push sub dec push test test and inc and (bad) addr16 js shr or mov outsl popa cmp push inc mov je add or aaa xor (bad) adcb cmpsl fs sbb test xor push mov dec inc enter mov and sahf addr16 push push mov fisubl movsl imul lcall push mov add inc pop xor xor jmp push clc or lds mov xor sahf or neg dec cmp (bad) sub cvtps2pi lcall add inc outsl leave rclb mov mov xor mov jb add add lds xchg (bad) in loope add ss pushf test and add cmp pop mov and jb jle fbstp icebp scas mov lock dec int fsubs and das cld pushf pop (bad) lods dec push lcallw pop push sbb (bad) fwait jb add sbb orb (bad) pusha xor pop loop pop scas sbb jp dec mov xor sub jecxz dec mov xchg pop ss test add sbb add lcall adc add mov fistpl cmpsl xor sbb push cwtl pop mov dec inc cmp (bad) jo sti loop shrb (bad) in sub ja rclb adc xchg xor xlat test adc xor or lock out mov pop and (bad) nop dec pusha imul lcall add test outsl sbb xor jo and dec push jne addr16 outsb pop push xchg add xchg fcmove js or adc mov or adc push imul push fiadd add (bad) push loope jmp pop (bad) bound enter loop cmp sub (bad) adc dec and in ret test add push cmpsl imul adc add add inc sbb popa pop mov inc sub mov (bad) push pop les std push and fsub in cmp insl pop add popa adc test inc aam push xchg add ds cli aam push and xlat pusha jo push cwtl das push fnsave jp cltd mov jl inc lea shr pop (bad) xor shrl test ljmp push jnp add xchg inc push mov fcomps addb pop stos jno popa adc push xor adc jnp xor je pop sub rol hlt xchg stos add lods mov (bad) cmp push ss xchg jo sbb pushf adc cmpsb bound sbb xchg lahf xor je cmp (bad) xor xor xor mov dec pop fdivs enter mov fwait pusha ret mov rcl cld out jns pop outsl add outsb les mov loopne xchg (bad) push mov mov jbe add adc stos fnstenv mov and add clc lea and lds sbb inc and orl mov cmp movsb sub push ret packuswb lods test das in or pop jl xor push call sbb fcmovbe cmc push xchg push xor add mov mov mov cltd add xor cli adc (bad) imul push jg add add subb rolb and mov fstl ss and ret icebp and stos xchg in jo addr16 and sbb push mov xchg add mov cs (bad) mov xchg das xorl loop daa and jmp and xchg mov adc sbb repnz add mov in popf ret and (bad) adc xchg adc xchg xor out arpl nop pop and das int3 fwait js cmp ss movsl adcb mov movsl or xor std jl mov fimul iret js pop or stc or sbb xchg xor push cld inc mov sbb pop inc add lods lods rclb into sti into jno and add mov inc and lret cmp cmp mov fisubl adcb popf add pusha add mov mov test push jbe inc xor movsb xor movsl cltd aam inc pop push push lods inc xor lods mov test pusha cmp bound loopne or add fldenv mov add or push ret inc inc (bad) inc add testb popa xor imul sbb aaa (bad) or mov pop push test fbstp cmp or push sub or mov nop lods push dec test pop or mov daa or xchg and test loope sbb xchg cld adc inc pop and (bad) lods xor popa arpl mov and cmp adc addr16 popa push sahf nop mov sub jno adc or xchg and dec or lods and pop (bad) pushf fs add aam cmp xchg cmp sub push rcll jns das (bad) stos mov inc jmp xor sub stc push add xor dec push xor and aas and mov and (bad) enter inc adcb add xor insb daa test mov inc mov fisubl jb jo cmc pusha xor cmpsb sbb and push sbb or push sub sbb and out push or jecxz in mov aam add lea lods push cltd pushf pop (bad) sbb cmpsl aam (bad) test jo dec add leave js mov adc and jns out ret and cmp xchg cli sub sub call push orb lds fldz sub rcrl sbb in outsl and scas xor push lret push mov (bad) jo cld jmp sbb adc push adc imul mov lock dec rcll fsubrs ja popf mov push jp (bad) push push nop andb lods jecxz insb inc add pushf mov sti aas pop adc sub or mov push mov sub arpl int3 or out loop rol loop fwait add leave enter stos or sub add add addl jns popf mov xor add aaa jmp jb dec xorb adc pop mov dec loopne movsb jmp ficom jo shrd inc cmp push or add fstps das sbb cmp nop push inc rorb xchg lods add xchg nop adc xchg mov xchg mov mov leave xchg push or js movsl xchg les enter lahf jg cmp push lds stos xchg (bad) lret pop push inc or mov inc or xor or sbb mov cmp mov les sbb jp aad cmp inc and icebp lret out adc inc dec xor (bad) stos out lcall fsubr addb push mov or subl aam xchg pop push js pop xchg sub nop xor sub cmp sub sub mov dec rcr in nop push push jbe ret pop pop xchg gs xorb inc data16 lahf (bad) mov ss xchg add dec call xor push push xor mov loop or push repnz cmp arpl xorl pusha push xchg jge imul jbe insb push or and lea push mov enter int3 xorl loop sbbb aas jne into ret or cwtl inc mov add and xor push mov mov add mov movsl movsl xor push ret movsl lods mov push xor push shl insb fldcw adc push and js xor movsl mov rcrl push addl mov popf sub aaa cmp add inc or mov loope cwtl cs mov loope aam lret pushl sub mov pop xchg movsb inc and inc inc aad out jo jle push pusha sub mov ja ja mov add sbb repnz xor jno or inc daa sub and rclb sub adc cltd or inc mov add (bad) sbb insb cmp mov sub mov or adc push (bad) xor push (bad) ror or leave js fxch in push push pop ss xchg mov in aad mov mov nop xchg and sbb sbb inc xor rclb lock add lods aas sub add sub mov (bad) daa loop fidivl iret add cmp (bad) push push imul and inc lcall add xchg mov lods or mov and adc inc daa adc pop sbb inc lea xor or addl or and insl lret mov inc lret insb in nop adc repnz dec ss pusha adc xor setl test pop sbb pusha dec pushf mov repnz xchg xchg or xchg sar jo or rclb push sbb xor and test add les add dec in lea mov cwtl ret leavew loope jmp xor cmp mov xchg loop cmp sahf loop aam jl xor fisttpll ss dec xor mov test fist lea arpl sub lods fwait ret jbe dec lsl pop ret (bad) jmp xor addr16 inc rorl xchg mov and push pop inc lods xor mov sahf fs daa loop sbb xor mov push cmp sbb xor mov adc cmp test rorb pop xor aas mov pop cmc sub add (bad) (bad) cs jp mov add mov cmp sbb imul (bad) int loope imul call bound xchg not and pop mov sarl push ror mul pop pop push daa mov mov ret cmovae adc sbb sbb bound inc pop xor fldenv hlt popa (bad) lcall popa aas inc (bad) lcall ss pop pop lea fstpt pop into or and jns imul inc and inc in je xchg bound out xchg mov mov cmp sbb and sbb test imul clc cmp or ss mov push lahf add lea insl xchg das ret or adc and or cmc push jle mov sbb das adc push sub pop gs faddl add lea mov dec fdivrp xchg cmp sbb add mov xchg sahf inc test test test push pop ret fwait mov mov cmp ror pop dec (bad) aam dec or ret adc mov dec push dec and pop aam dec dec push lods jp xor ficomp subb iret cmp add sbbl or in xorl xchg inc movb inc cwtl xorl inc mov andl repz mov adc aaa push mov rolb loope add add sbb or xchg daa ret lds clc mov cmp pushf mov insb inc icebp jnp mov movsl add and jae jns js out cmp rcl xor mov or sbb adc push mov out cmp push or int3 cmp jo add movsb adc je sbb xor loope (bad) movsl mov inc or arpl xor popa add add or (bad) mov pop dec cmp sbb sbb and (bad) fdivr je mov (bad) std cmp nop mov aad push dec and in je icebp push test rorb call dec add stos pop add or xor add lods outsb test rcll add push fyl2x xor mov idivb adc mov movsl test sub mov les xchg popa arpl std mov lds inc imul mov loopne adcb push (bad) ret test push (bad) lds jecxz cmpsl adc das cltd xor ss dec and adc shll loopne sbb mov xor xor or xchg rorl outsb scas and inc or xchg into dec mov mov call ret inc fnstenv js sahf repz sub stc dec fnstcw sub fdivrl cmpsl and sub and popa mov aad lods or in leave test cmpsl iret and gs inc xchg stos lods loop adc lods pusha jb sbb or xor daa mov aas dec add inc sahf mov xor ret jp aaa adc push jge lret dec lret sbb push add mov jmp mov push cmovae int3 xor incb or xchg in andl jno rcrb divl cmp dec loopne inc adc xor pop xor das lea xor sub adc movsl or mov mov sub iret push pop test sbb rcrl test xchg push and mov or into jo xchg (bad) cmp ror sub and push sub add test adc cmpsl dec sahf jg mov and int inc inc pushf mov pop ss sbb inc add pop mov test lea or mov test test pop inc stos sub ss mov insb push and sub add jo loope rcl (bad) inc popa pop pop sub pop mov xchg and xchg xor inc dec pop cmpsl dec ret add (bad) push stos shrl jb loopne,pt rolb (bad) sbb jb jmp popf jne leave sarl push xor cmp les pop xor adc addb imul gs push mov inc pop push adc popf xor and (bad) push dec add ss addb mov mov xchg pop and ljmp xchg mov fstp inc sbb pop cmp aam test gs add (bad) xchg fsubs inc popa push mov add xor out adc popa xor test fs fsubrs rol ret outsl sbb sub sub pop sub js adc mov xchg sbb fmul or dec pop jecxz jo mov rcrl sbb jp test adc imul stos ret sub cmp xorl sub mov sub xor adc inc cmp push loope aad push xor add fwait scas movsl daa loope stos movsb mov in pop outsb jne sbb or and xor (bad) dec imul sbb cmp sbb (bad) mov pop adc daa div adc ds cltd out push cmp rclb fiaddl pop adc mov imul pop xor mov mov or or push adc daa fs loope imul add pusha add outsb repnz in pop dec enter lods addr16 or push imul std int3 adc test push jno and mov adc mov inc loopne fistpl inc ss push push jg loope nop mov dec or (bad) repnz or xor mov lahf (bad) andb mov xor xchg addl xchg push add push ret adc popf rcll pop mov sub outsl andl sahf ret lock mov jo ds movsl push shr mov sbb or adc aam mov xor dec adc jo jns mov insl pop pop rolb cmp add or in adcl sbb or or inc ret ret (bad) or ds sub cmp sub adc inc ret push test leave pop test cmp xchg pop pop mov in gs mov mov xor (bad) dec pop adc pop roll or pop jle lock mov xor pusha lods pop add dec inc adc fldenv (bad) je inc or fnstcw nop xor and outsl movsb ret fdivs inc mov addl adc rorl push lcall int ss mov ja adc push incl or xor repnz mov add mov push inc js sbb fs rorb push cwtl shl add pop sub (bad) int mulps imul sbb jbe lods cli push and or mov movsb std dec adc in (bad) inc inc js inc (bad) (bad) dec daa sub mov xor (bad) push (bad) repnz imul or fldl test dec jmp and les imul (bad) mov popf xor sub outsb inc (bad) mov test push in jo mov pop (bad) leave jbe add (bad) sub sbb push push lods call mov add imul or or inc xacquire add gs sub and pop push and mov iret cmp (bad) sub sbb lret lock loope pop loop and stos js mov or jne xchg nop sbb bound pushf pop int3 sub pop cmp push cmp pop ljmp inc jb lock mov daa bound mov stos cmp xor test sub push addr16 movsb scas push cmpsl scas (bad) shrb or rcr sbb xor jp fs mov or inc movsb pop jl (bad) test mov push or xor loopne pop jne mov xor xlat aaa movsb mov push iret cmp nop add movsl xor mov test xchg sbb inc adc and jno xor add rclb and pop mov adc bound fild pop pushf cmpsb xchg lods hlt ror jnp mov fnstenv test pushf or pop pop sub or mov je push xor (bad) xor rol stc mov mov ret pushf sub fsubl sub push arpl loop pusha or and enter inc push jp mov call mov mov add addl in add pop add test push (bad) mov test arpl and imul dec inc movsl pop orl lcall imul push push mov loope ret pop mov dec or mov lcall rolb sub das sbb cmpsl xor or sti cmp mov mov xor cmpsl test xchg es movsl mov sarb inc cmp mov cmpsb stos push jno inc aaa inc sbb inc dec sub fistpl mov insb les rcrl mov and mov pop adc push js lods mov or jo push repz sbb jecxz pushf (bad) pop dec sbb sbb dec dec leave jg mov push aaa scas repnz (bad) (bad) stos lods cld pop and lods sub sbb repnz add icebp mov lea mov lods push cmp mov imul xchg add data16 pusha xor lcall and roll inc hlt xor xor or lds movsb sub dec imul dec lahf or add dec enter test mov pop hlt xchg dec leave cmp mov in cltd mov xor (bad) ret fildl ljmp (bad) mov push xor test inc mov sub xchg mov sub pop jge adc movsl (bad) repnz and mov loopne jl fs add (bad) scas xor cmp mov xchg sub xorb sub sbb (bad) and popf into sub cmovnp cmp js stos inc inc rcrb mov xor xor push xchg shr xchg xor cmp arpl sbb xchg rcrb xor mov sbb int3 lea or inc mov add mov int3 push test rorb out adc andb in mov rcll pusha lods inc mov push idivb adc pop adc pop test or rclb pop dec sbb fbstp std add lcall (bad) dec xor adc js test push pop xor (bad) je cmp fs dec ror enter pop push mov or loope sahf cmp popa or adc add adcl dec dec and (bad) jb push ljmp add xchg call lods sbb js (bad) mov jne pusha cmp rcrl push imul xor and test loopne push adc adc xchg nop outsb inc pop mov xchg fldl ud2 frstor pusha push inc sub jge add fidiv mov sbb pop sbb cmp or loope sbb adc jo loop mov test jo fldt inc and jo xorb cmp sbb mov mov ds ret div add jo (bad) xor shrl lods shr push js int3 inc sarb ror add (bad) cmc lret daa (bad) xor fcomps jne adc pop add inc (bad) cmp pop add enter hlt insb add aaa jge loopne loop sbb sub inc dec es mul and sub (bad) in lret pop sbb cmp mov mov and test lcall sti mov cwtl dec es pop xchg ret and jg dec sbb cmp add das and sbb pop and mov mov dec pop inc (bad) rorb or sbb in jo add xor into mov js mov lret mov call in sub mov xchg add (bad) ljmp pop cmp outsl inc orl and jecxz inc outsl pusha fs icebp push iret xor xor pusha and push mov or lret ret jns sub and and fwait pusha xchg lea mov les int mov mov adc sub xor movsl shll xor mov mov dec test add sub mov and in daa int3 pop push loope mov mov push into movb lea or push pusha and sti cltd nop or dec ret or pop popf int add push pop mov add movsl mov mov xlat adc fnstcw adc xor adc nop jecxz cmp jle push push loope shll jmp or pop xor adc add mov xor xor mov dec sub fistl and shlb xor adc jnp inc stos add mov dec xor and int3 inc sbb (bad) ret add pop xlat adc mov xor xor xchg int xchg mov mov push hlt mov pusha dec jo dec add push inc push add inc add mov inc pop or jno fwait add pop loop push hlt ljmp sahf int3 and into mov sbb adcl inc add sti jo push add add adc int3 add sub or push das and nop/reserved mov outsb mov std insb gs dec pop test push mov addb xor pop mov mov sub movsl dec call inc ss mov xchg cmp mov push mov std je cmp jb outsb dec popa fs mov daa adcl mov and jns push mov xchg cmpsb (bad) (bad) pop add and adc cmp js into mov mov dec mov xor adc outsb loop sub or add jecxz sbbl xchg pusha pusha add mov or adc loopne xchg addb push xchg add push adc enter test sbb aas push shl xor cltd and out lret fldl insb add int3 inc dec mov sbb cwtl sbb adcb mov cmp je sbb adc sbb xorl inc mov jmp lods mov mov or in test test xchg add mov (bad) xor lcall ss cmp aaa (bad) shll fisub xchg dec mov sub addr16 jmp outsb and mov cli outsl adc lods je cs push add xor pop bound pop js or rcrl inc ljmp xor cmp movsb adc pop mov adc xor cltd cmpsl mov xor (bad) (bad) push adc pop adc or sbb (bad) pop js call daa add add jne xor sub add sub inc or and and icebp or (bad) (bad) repz and xchg mov negl jle xchg inc imul sbb or adc and ljmp test dec es sbb js mov and das mov cwtl jg and dec mov hlt out xor rorb xchg or pusha sub mov mov dec push or xor lock ret xchg (bad) xor push js adc sub dec (bad) adc pop test adc adc dec mov and cltd pop fstpl or mov gs pop mov lods mov sbb ret mov inc ss sbb pusha daa ret adc add dec sbb cmp mov cmp xor cmp mov and popl or add clc and lock cmpsl addl test test adc imul adc sub add aam leave inc outsb or lret dec out ret inc iret xor inc sub jno xor add call xor mov and xor or mov es inc insb mov or dec and push or pop sbb nop xchg push inc sbb aam loopne sbb xchg (bad) xchg cltd fiaddl je pop insl jo sub dec mov cmp cmp add dec shrl (bad) xor lds dec cmp sub addb push add adc sbb xor cwtl outsb idivb fisubl pop push or pusha fs roll pusha mov or pop dec adc xchg cmp jp mov push loopne add in jmp dec cmpb push sbb movsl dec mov mov test ret sub inc and (bad) mov ret jl add inc push mov add cltd add ficoml adc sub sub or loopne xchg xor les mov aas jo inc and xor push cmp mov test lea pop aaa jo adc and xor repnz roll adc cmp test pop xor push ret mov add cld jne test orl sbbl jp cmp sbb or mulb and pop shl xor sub fidivl xorl popa dec leave xchg mov push (bad) shr dec jne in and sbb push adc inc sub add and xor fnstenv dec sub mov push test mov shll mov dec (bad) xor mov dec mov xor (bad) xor rcl pop jno lock pop loopne dec pop dec in and inc add lods pop xor adc mov or or mov leave (bad) or pop sbb adcl add movsl into add fbstp add shll sbb test inc push popf es sbb cmp sbb cmp loop inc dec sub pusha or xor sub or shrb pop mulb mov icebp mov movsb in pop or mov adc clc xor push dec sub movsb test fmul fadds or dec sbb sub dec add sub bound add (bad) mov xorb icebp test mov inc mov pop or xor mov push add xor mov nop es mul jo add insb sbb test mov mov aas push sub or call andl lea push push sub arpl sbb dec sbb test mov icebp xor and jns pop or add movl (bad) xor inc inc lret xchg (bad) xorb lea (bad) xchg clc divb pushf jns xchg and lret lret inc mov push iret add add popa mov mov orl mov dec xchg xor and xchg mov fwait pop adc xchg push outsl mov push and or dec mov sub pop and mov les xlat test mov push and test dec cmp cmp xchg mov lahf cmc pop sub or push dec and mov (bad) stos sbb push add mov fnstcw dec and inc push add call cwtl test cmpsb xchg add fs push pop mov add lods push loope sbb cmp inc mov jns xor push add ficoml jge push test jne popa imul or bound andl jae iret and icebp add push jbe mov aam lret rcrb pushf push loop dec push cmp ret test xor orl xor cmp add mov sbb fs imul jp ret js sub add data16 fnstsw adc adc decb mov sub movsb sahf (bad) sub cs adcb in or dec mov aam lret test mov pop lods xor sbb imul and lods mov loope jecxz fmuls add dec cwtl imul push xchg xor mov mov test ss mov je sub fnsave jns in sub bound (bad) cmp add adc rorb test ret mov and cmp cs mov lock mov and sbb mov sbb out push mov je or pop fidivr xor ret (bad) fcomi dec mov mov inc and push push int3 lods mov aam push fisub xchg mov sub sub push ret dec or cmp sub in (bad) cmp dec nop (bad) push add add or lret xorl pusha inc xchg sub loop xchg je cld push rolb or ret sbb xor outsb je mov je test outsl jo lea (bad) popa loop andl test (bad) push lcall jl pop int3 and xor mov push pop (bad) faddl or loop sarl add popa xor cmp jmp out dec mov sti xor mov (bad) frstor outsb out in inc popf nop ficompl insl and dec or mov cmp adc and fwait xchg mov (bad) test andl push add lock mov pusha dec shll sbb and xor xor adc cmpsb out jge inc js leave push in push push inc and lods imul push push or jge or lds add pop add xchg sbb std lret es xor mov aaa sbb cmp jo cli or lods or mov adc test in push and outsb or popa rorl pop push ret leave adc dec movsl shll (bad) mov adc call movsb adc cmp mov lea nop gs loopne test fdivp les leave add xor (bad) in sbb movsl nop xchg addb pop cmp inc cmp push jge fldenv ljmp loope pop mov push cmp adc mov inc js push sbb mov mov add and leave xor int movsl push cmp inc jae add addr16 push mov push sub dec or test not (bad) ss ss xor jbe push scas jbe inc imul xor es mov pusha mov fidivrl cmp test xor adc ror sub or mov sub pusha insb jp cmp push rolb cmp push test mov das stos mov pop xchg cmp aas jo mov nop jo out cmpl and dec andb inc cltd pop xchg xchg shlb jno add test jecxz push and sub adc xchg xchg xlat push insb xchg popf adc in xchg xor add xchg adc or jnp (bad) daa push jp mov dec popa lods lcall adc or push lds cs add pop adc jge jne mov outsb mov adc iret inc jl inc mov sub imul aad js pop xor mov flds enter mov sbb insb pop pop mov cmp or daa xchg lods mov xchg movsb fstps add mov popa adc into xchg or mov xor in test inc dec js sbb (bad) xor or in add shrb lds adc cmp mov jne jno js jp cmp (bad) sbb mov mov das adc sub fldenv lcall fbld aam or add or (bad) and cld ja xor (bad) notl inc pop inc and xchg ds aam sub mov lret ret or and rcrb or push outsl push in test add jecxz int3 insl daa jecxz push jmp dec or dec add (bad) mov dec mov dec into bnd pop jne inc cmp xor pop mov aam push popf push and xorl jno loopne cmp and fstpl add add in mov jmp popa mov cmp mov lock sub or xchg cmp push les arpl adc (bad) and dec jns scas push inc sub inc notb loopne pusha mov and or sbbl adc movsb push dec jecxz xor pop outsl ljmp aad mov push int3 and or pop lret push or arpl push xchg gs xchg and in rcl mov add cmc add xor sbb ficomp xor add mov xor sub add cmp or adc ficom pop pop (bad) lret call inc jecxz lret divl out aaa mov adc xor cmpsl mov jb adc adc add pushf xchg movsb sbb mov add mov xchg retw mov jbe xchg insb push shlb scas cmp pop jmp aam nop (bad) adc inc rclb xor or test imul xchg or add sbb xor js sub lret mov pop roll mov test roll inc mov pop int3 faddp push cmp fsub out out ret xor dec add enter mov pop xchg fs frstor sub push lahf jge xor fsub inc cmp adc adcl or pusha pop adc test or jmp sbb lock (bad) and mov jne xchg or jno rclb das and ret adcb shr add xorb out add cmp inc js xor sarb add or jg js push (bad) push sahf add lret stos lods sub das ss dec pusha push js sti mov pop cli pop and scas in movsb adc cmp pop mov xlat add pop jecxz push cwtl and imul repz mov dec pushl jae ret add jno and jno lret adc add lret cmp mov (bad) mov (bad) (bad) pop das fwait (bad) (bad) cmp jp inc sub and dec pop sbb xchg mov ret js xchg or and or jb mov dec sub xorl sub rolb xor sbb addl xchg dec add fcomps pop divb adc jno cwtl xchg lods rorl jmp ss add test xor dec add arpl jae jne arpl inc mov (bad) mov aas dec fwait imul mov add cmp lret and negb sbbl outsb shrb lcall dec insl loop aam sbb add push xchg pushf or jnp insb cmp pop addr16 test sbb jne outsb (bad) stos push mov outsl dec jbe repnz imul jb adc xor mov dec adc cmc mov rol inc mov add xor arpl cltd je jp fwait aas lret cmp adc jno lcall mov mov and mov dec adc loope jns (bad) jno mov inc rol test sub mov pop xchg xlat insl or into xchg dec and ljmp adc (bad) jge add sbb lds arpl jno lods pop pop ds sbb add and mov and pop cmpl sbb dec mov imul mov or or insb jmp xchg lea js cmc mov or fdivs adc lahf iret xchg es add pop ror adc loope xor adcb ret ds fisttpll cld and test cli adc or dec int or dec push dec push xor daa sub mov xchg sub pop dec fcom fisubrl mov pushf dec sub movsl sub mov inc mov rcrb or and xchg jns pop mov (bad) adc lods shll pusha push add popa xchg rorb pop add pop push inc cmc adc lock pusha push sbb xchg adc mov pop pusha sbb insl lcall mov int3 push cmp dec (bad) fbstp mov add inc ss test or ret insb mov adc adc dec popa mov and push sbb out outsb lea xor and (bad) xchg lret movsb (bad) xchg test inc mov dec xchg mov add lock or xor mov and push std push gs test loopne dec dec push inc (bad) shl fs push test fnstenv cwtl add push jns je rorb inc mov mov mov adc pushf and jb mov out (bad) ja add sbb test ss mov scas adc push aaa in test sbb test cmc orb push pusha lret cs add mov lahf inc dec lea jnp xor cmp xor inc dec lock inc and sub dec add add lods pusha pushf cmpb adc mov add ret dec mov dec sbb aad inc or xchg test xor in inc xor mov and dec and push mov test xor sub dec ret out nop xor test adcl in inc adc mov sbb push push pop (bad) pusha add and test add outsl lret loop jmp pusha cmp push jns outsb mov (bad) add int3 cmc lods ficompl stc push pop testb xor or cmp ret sub sub sbb pop xchg mov pop js cli jae js ret xchg or push xchg fistpl mov lcall movsl inc xlat add jecxz push and loopw and pop or xor xor ret adc pop or (bad) movsl or jae and daa mov and push adc (bad) push movq sbb pusha aam or cmpsl and insl xchg fsts push rorb or push mov xchg repnz dec jns adc lods daa xor push adc roll gs add pop jl push sbb sbb sub and rolb cmp or pop sub or bound xor sub leave xchg mov bound sub subl dec lea sbb sub sarb sub pop adc jo sbb dec aam fdivrp stos cltd (bad) add xlat inc aam nop adc dec jae das daa adc ret add push dec movsl repz rorb (bad) movsb lret imul scas jl sbb xor sbb rcll sub xor mov pop jo adc outsl mov or nop mov mov or lock and add jmp nop mov inc sub adc insb pushf pusha test mov and adc jo push mov popf cmp icebp add add (bad) lds xor and lods xorl fsubl shr jb nop sub enter setl popa mov sbb mov fadds hlt sub clc push js daa repz cmp xor mov or cs cmp rcrb stc insb jmp xor lods dec inc aad dec lock ror dec int3 mov jns pop add ficompl (bad) mov lods mov mov mov insb jns inc push sub mov xchg movsb xor mov jle cmp cmpsb push pop or fsubrl ret cwtl jl jno mov inc sbb test push or sub icebp xor xor test test data16 dec imul cmc pusha daa xor movsb aam rcl push inc xchg and mov cwtl pusha mov (bad) xorl fist test adc insl (bad) jno mov add je adc pop dec cli out sbb aam mov cmp cmp out into and es test (bad) add adc test enter adc dec xlat sub pop add gs movb and lret test pushf sbb jp adc mov push inc sub fs mov and fldl pop ret rcll daa lods inc stos adc xchg xchg mov add inc sub dec push or mov sub pop loopne into mov clc dec pop rcr xor add pop (bad) or push pop adc sub xchg pop les mov or cmp mov sbb das add xor adc push xor add scas pop push mov sub (bad) xor sub (bad) sub or dec pop sub outsb jno shld cmp sbb pushf dec xlat xor inc pop ficompl (bad) je mov lea mov rorb arpl jl call rep pop or jmp rclb or and xchg out mov lods or add or xor (bad) mov add add lock xor push pop inc call xor inc sub iret out fstpl js into cmp cs pop sbbl cmp sub iret pop dec dec cmp inc fidivrl loope mov mov add adc and and je inc sbb mov cmp mov outsl aam sbb adc or ret gs out xor lahf lods xchg dec push (bad) out dec (bad) jl and jnp inc aas or ficom fcomps cwtl add (bad) mov incl mov xlat (bad) jno shl es push in call (bad) or push out dec inc and mov nop hlt mov jecxz sub mov add dec sbb and cs cmp and call sbb and cmp and add dec loopne adc add cmc or ret pop addr16 fbstp xchg test push (bad) xor pop sbbl lcall mov mov mov jl mov push dec mov nop sbb sbb and jo mov sbb cmp loopne inc test mov (bad) loope in pushf fstpt add pusha mov subl sub popa pop lods inc mov or pop and cmp aad sbb xor mov mov aas and xchg test mov adc push ret and out gs sub pop into adcb ds inc xor pandn mov push adc addr16 cmp insb push add add repnz add loopne jo adc mov cwtl mov sub add test pusha sbb dec sub fdiv and mov and popa add and push adc inc sub gs sbb in out push or and sbb lods add adc js or xchg lahf cmp sbb js dec and mov imul mov in es and notl pusha jecxz sub jmp popa xor int3 jno xor gs inc or add add mov lods mov test mov sbb inc xchg (bad) sub (bad) mov (bad) jne icebp or insb movsb cmp mov (bad) cs addr16 adc mov pop mov jg mov sar enter fbld sbb cmp shlb inc test xor dec mov or add fwait sbb mov ud1 adc jbe mov xor in stos inc jmp fistl pop dec repnz xlat push sbb loope jecxz adc rclb mov push aaa jns add sub icebp add addr16 or push mov dec loop pop pop mov aad and les sbbl dec inc dec pop rorl cmp lcall enter jp adc mov fdivr mov xor loop add inc adc rol adc out test pop adc mov or cmp imul sti sbb and fdiv pop cmp movsb xor cmp (bad) daa mov or xchg (bad) (bad) (bad) dec jns pop mov xchg popf cmp sub punpckhbw mov daa in outsb mov shlb aaa jle push test loop and adc cmpsl pusha mov imulb jbe or and pop pop inc sahf adc xchg mull push sbbb in fcoms and leave int xor inc sbb dec xor sub and add xor xchg and or mov inc adc std je inc mov pop (bad) or loope subl inc stc xor mov xor pop call add pop dec mov jp dec cmp test add xchg loop push add dec cmp or test ret pop pop mov lods sub pusha xor mov into jbe inc mov ljmp xor pusha je lea add ret xor cmp subb or jno dec add jge mov add mov es add adc ret lea loopne sub mov sbb andl xchg lods sub xor inc adc add iret sub and arpl mov sub xchg sarl inc add outsl cmp xchg icebp xor and xchg pop lret sbb and rolb arpl cli sub iret or or cmp je xchg sub in sahf or adcl jle sbb lock mov pushf movsb movsb and push xor add rcrb mov jno aaa fwait push pushf inc sub test out dec push bound add pusha pusha icebp push inc popa lods push or mov jge sbb gs js into xchg push cmpsb push ja xchg push or pop cmc add into inc pushf cmp lods lods sbb add movsb or test mov divb je dec xor sub (bad) or adc insb xor rorb lods mov jno push mov jb adcl mov aaa mov pop add add cli mov and inc cmp pop xchg xchg sub in mov cmpl mov or popa or test cmpsb pop sub sbb loope (bad) je pop loopne pusha sub inc and leave adc and adc adc push leave jo sbb jnp xor sub add test outsl mov add cmc xchg dec sbb outsb inc (bad) ret mov cmp dec pop adc addb popa push and pop mov ljmp mov pop lods lock pop push adc adc sub sbb les sub sbb cmp and je dec (bad) jo push cmp pop ret add adc adc lock and cmp and mov adc sub inc jp or jb xor mov notl loope (bad) push push pop jp xchg leave sbb adc (bad) add inc xor aam inc call inc inc sub push pop push fs bnd lds sbb into insb or pop dec xchg lods push lds cs and inc mov push es sub clc pop test mov rcl xor xor leave push inc ret test jnp lds hlt and scas idivb ds add clc or add ret movsb xor adc xchg es sbb adc inc invd (bad) jmp xor (bad) xor push dec icebp xor in inc fsts xchg scas adc pop jo fimull rorb stc scas xchg push push ret ss nop adc inc or clc cmpsb cmp or cmp (bad) and mov add add mov mov add lcall test push test cmc fs clc fwait mov js sbb xor (bad) jmp adc add test jg loopne imul jmp or out mov push or je xor push inc push jmp rorl inc sub addl or stos test sbb cmp into pusha fadd inc daa sub ss fs sub or aad imul lods sub pop dec add jo and mov mov movsl flds and pop sub or jmp or add jb movsb push and adc xor dec cmp loopne lea or jno or mov imul mov jo inc test (bad) loope shll cli cmp cmp xor js es lock or loopne jmp sub dec inc xor and test mov rorl icebp test sbb (bad) and rorl push lock mov inc clc or outsl imul add adc xor xor and shrb sbb mov lock dec add push dec pop int3 adc jl jb int test add or or test imul add pop in insl mov pop sbb add or cmpsb in sbb cmp mov or lret xor addl push and adc cmp mov aad rclb xor push sbbb cmp mov xchg into test mov adc xor mov loopne popf pop in les test cltd aad lods jb add inc inc jno dec ret nop pop xor or adc test lahf jns add sbb jb mov js (bad) bound rclb inc aaa rorl fucom jo xchg testl or arpl cmp push jecxz cmp popa sub cmp sbb push aas in or cmp push aas push push inc arpl scas std xor inc arpl in loopne pop sbb xchg sbb and pop (bad) xchg inc das or jmp leave or aad sbb jb sbb dec rorl sub add push jno scas mov pop enter mov xchg and test test ss (bad) rorl fnstcw add (bad) (bad) (bad) or (bad) cmp loopne xchg dec mov shrl jnp ja xor dec loopne dec mov mov dec dec mov popf lcall dec inc test fld mov mov push pop (bad) int repnz mov mov and xchg roll sbb mov jl mov sub loope lahf fnstcw mov adc xor cmp mov or pop and dec lods add dec mov (bad) mov pop popa push jne jb rclb pop dec and push cwtl fcmovb insl or add lock mov je pop js jmp cmpsb and push push pop push push shlb inc imul popw push (bad) or inc sub cwtl ror xor add (bad) je mov mov sbb xor jns (bad) fsubrs pop or push (bad) and stos in in and sbb add sbb mov dec test xor adc sarb mov outsl push mov sub fcmovbe js jp clc sub adc sub inc fwait test shlb cmp mov add addr16 add or jo dec adc mov scas pop pop sub add in xor ret adc shlb sbb mov push out aaa jl test dec rcr mov push cs sub mov test add dec jmp add mov bound sbb shrb inc pusha cwtl nop pushf sub adc push cmp ret pop or mov inc aaa add and adc and mov xchg movsl push test and cmp popa jo dec nop out sbb sbb and test mov push sbb dec cmp rdmsr js mov shlb ret mov shrl push xor loope push fild sub jp pop aam pusha inc stc addl and lods mov lock lock dec hlt pop cmpsb loopne movsl or call repnz std or (bad) fldcw xor popf addl loopne cmp inc dec test imul add jmp mov mov or repz ret cmp in pop pop lret or xor add enter mov out and xor xor and mov or dec aam add inc test lods cmp add or js add push add add push fcmovb push and stos and mov xor inc fstps mov xor daa add pop adc push xor xlat cmp outsb xor adc xorb imulb or repnz sbb popa sbb adc dec jmp dec sbb inc gs insl xor adc add and inc cmpsb mull test pop push cli jl cmp xor adc or lods dec add xchg xchg cmp fs mov lods add xchg insb (bad) push cmp xor push mov lret fcmovbe lds jae fisub inc inc loopne inc xor test ficompl mov outsl sub sub inc pmulhuw and outsl outsb sub xchg add dec ss dec mov sub pop cmpsb lods or push movsl cwtl (bad) push sbb sbb pushf enter adc movsb aam add dec sbb xchg (bad) push add push dec ret mov xor adc icebp cwtl push inc sub std xorb daa push imulb gs mov jmp xor jo pop les lahf fldt or adc out lds add dec cmp sbb sbb gs mov add pop (bad) sub jns,pn and and movsb pop push dec xor push fmul movsl inc mov sbb out les fisub jns sahf adc in imul imul test repz sbb stos pop push testb add cmp mov mov sarb jmp or add aaa loopne aam or into adc sbb xchg or or push mov mov ja or outsb mov jnp rol nop lret push mov or and mov cwtl push add and lea and jecxz out mov cmpb fwait ss dec jecxz fistl ret ljmp into shlb jmp andb mov das mov fcompl adc movsl arpl add lods mov pop inc lahf pop fiadd mov xchg lods adc mov loope fist xor sarb adc lods test and movlps pop das lea xor (bad) loopne cltd and pop sbb adc stc mov push dec out pusha and sbb out test pusha nop dec and lods mov cmp lret or lds dec dec arpl pushf add mov lock loopne push mov adc dec or sahf sub (bad) fcoms and sbb sbb daa jns pusha fdivrs add cmp mov sbb dec pop int3 xor mov fucomi insl test pop ljmp fldenv mov and add rcrl cwtl imul mov and inc add jl pop aam xor mov pop mov add cmp ret mov xor psubusb jg mov push xor push mov inc test je ljmp arpl cwtl cmp ljmp aaa jne or (bad) (bad) sbb (bad) loopne adc sub inc cmpsl sbb imul and lods sbb inc rolb mov sbb lret push mov push cmp inc adc ret or mov sub rorl add stos cmp jo mov mov adc fdivrs stos mov xor xchg inc xor ret adc loopne and push dec or add xor xchg dec loopne movsb ss mov sub ficomp lcall mov push jo mov scas dec fwait sbb rolb jns xchg sbb and inc sub and lahf jb jb call sub mov aas cmc push mov and or ficomp (bad) inc xchg pop xchg mov mov repnz xor mov inc sti lock sub pusha sbb pop mov andb fcompl mov or sbb push testb rorb loope mov adc mov (bad) cmc or sub dec dec dec out ss xchg test outsl ds dec inc jo arpl bnd popa add ret or sbb or sub pop cmp dec inc insl or iret das cmp mov pop jnp mov push cmp adcl sti dec add mov fs lods mov js xor pusha push push or pop mov enter sub and es rclb sbb mov or arpl push xchg ret jge fmull cmp sar push adc jle or adc mov xor or adc loopne ss or sbb cmp mov psrlw inc dec lds adc push rclb push imul cmpsb push pusha loop adc add ret jl (bad) xchg mov (bad) fwait mov das into sbb mov xchg cmpsl dec and sub push cmp das push nop test adc push ss lahf push push bound lret sti inc jo xor pushf inc or dec xor pop loop mov sbb adc or jno jbe mov xchg mov add xor cmc repz imul mov outsb pop add lock stos aas pop test inc mov ljmp push mov mov inc pop cmp xor add shrb push dec scas nop inc adc mov push stos mov popf int dec adc ficomp arpl push mov out adc inc dec data16 adc (bad) stos xor out js fsubl pop sub imul mov popa loopne and mov fs dec and and xchg or nop ret lock fisub sub dec add rolb and stos mov mov mov cmp add pop and jbe xchg lods push xor in movsb push pop push popa or dec xchg mov pop inc and gs lock movsl xchg cmpsl jo,pn in lods je,pn push test adc dec mulb mov mov mov and or or push or lods xor and push shlb les fmull or clc in lods popa push and or xchg rcrl inc dec rcll rcr js (bad) sub les ds outsl pusha jno jmp movsb gs inc dec cmc sbb dec adc jp adc dec and push rorb mov add ror xchg jge adc jmp dec add pusha jbe adc add pop nop mov cmp rorb dec and sahf pop push push push fsub mov addb inc inc jg pop add xchg mov inc add add into sbb aaa or push xchg roll pop xor inc rorb movsl add enter imul inc rclb rolb pop sbb push aam xchg icebp cmpsb hlt cwtl inc sbb les mov push jbe inc fwait xor xor fnstsw jp or sbb and ret push xor outsb fmull inc loop xor add push add ret mov ss jno pop push iret push mov call mov jnp sbb inc ss xchg xor loopne adc ret and dec pop les addl xlat mov stos or bound out dec push js mov pushf mov mov loope xor ss dec ret dec pop adc push cli push mov add pop into cmp jno sub xchg ret cmp in inc out xor lods mov sub xchg sub cmpsb das adc mov xor leave jno inc jne movsb bound adcb jecxz pop outsl sub imul sub test pop pop sbb lods mov mov xchg sub push or sbb xchg dec and add cmpsb es dec add test stos sub sub pop xchg rolb or shl inc or lret std popa cli lock dec pop lret ret xchg ds xorl or std cmpsb add add mov or hlt mov repnz outsb dec lret mov imul xor mov mov jg lods push fdiv aas and mov (bad) or add rcr jl push rolb and xorl es mov xchg mov test rcl in xor pop inc sbb xor (bad) lods mov leave sub nop xchg mov sub lods loope pusha out test or add test sub sbb and xor cmp mov popa cmpsb sub lods pushf mov bound and add add dec das xor fcomps es (bad) leave jo push mov fmuls xor jnp xor pusha shrl xchg push les or cmp add fnstcw mov mov movsl xor test add nop repnz mov add sub sub das pop or ret ret sub outsl pop pop xor imul gs pop cmpsl push cltd mov aaa adc add aaa test mov and loopne or or sbb or and mov add xor and (bad) mov fistpll das pop inc inc rolb fidivl push xchg add add test icebp push cmp pushf jno xchg movb call jecxz mov push pop jo xor push add fistp xchg lea push xchg popa push dec mov xor (bad) lods mov mov xchg sbb sub cmp sarb inc out adc rol inc cmp mov xchg fcmovnbe xor pop test jp hlt or sub mov cmp mov dec loopne push into push push mov or mov sub or push jno les lar mov push fstl fldl add pop push push and test pop xor loop (bad) mov mov mov xchg shl mov (bad) jp js enter jns cwtl xchg rclb test js xor subl cli cmc and inc xor push rcrb xchg xor pusha xchg (bad) aam in in fstp or daa loope or das rcll pop mov and pusha ss xor or jge pop lret inc mov mov sbb rorl xchg mov adc mov dec jnp lods add mov add sbb cmp jo pop push sbb sbbl push push xchg dec cmp xchg or cmp nop pop xor dec sbb xchg mov xor nop adc add sbb sub add cld jb sbb imul add sbb inc mov es add dec push and pop inc xor push rcl or ret pop jmp xor mov aaa (bad) aaa push stos lock mov or and xchg inc lahf out sub mov inc add addr16 push mov mov mov enter adc adc jno jno (bad) ret mov cmp shrb xor sbb fadds xor lea or shlb or mov and les jae imul push dec popa inc (bad) jmp xchg in or dec loopne lcall lods je (bad) jbe inc adc sbb mov ret push (bad) cmp xor fidiv xor aam push test xchg js add mov arpl fs or aaa pop loop fnstenv call sbb popf addr16 adc or es out push test movsl aad xchg inc add pusha push movl iret scas inc sbb imul andb push divl or push push push lock sahf mov and lret ror sbb and (bad) adc hlt push mov test push (bad) mov aam sbb and sub push push adc add pop push jge mov mov and js (bad) or rorb cli and inc sbb ja xchg pop loopne test add enter jne adc jne push mov enter in ret roll je inc sub xchg xor add mov dec mov adc sub call insb push pop mov mov sub shl xchg pop pop mov adc in or xchg mov pop sbb add or leave xor inc outsb int pusha sub (bad) jp push dec xchg sbb pop fcomps pop rcrl cmp push adc dec xchg push ss cmp mov sbb and or sbbl push mov rol lds dec outsb or jge aaa xor xor cmp mov pop jecxz xor ja push outsl add bound xchg jle fs call stos test test loope test add mov ret jge dec push and or test fwait add aam push test push stos fs and pop xor lcall or shrl loop out sbb adc addr16 add lods sub and test sub inc dec stc roll fwait (bad) mov pushf adc xor sub or and test lods rorb inc imul xor insl xor dec or cmp xor add cwtl cmp call xlat cs rorb xor add shrb fbstp stos add jnp cltd sbbl pusha and push jne or push in mov shlb aaa jnp mov jae mov fldcw mov shrl jge out push mov inc mov fistpl leave push adc lret inc in lods and xor and jns lds pusha sub aam pop xchg pop pushf inc mov push mov fdivrs sti xchg xor mov cmp adc xor mov cli push pop or inc movsl fs nop push insl jmp mov loope (bad) add add or outsl sbb adc push lock sarb mov insb les add scas or lds cs jno dec dec and or cmpsl xlat or sbb hlt in cmp dec xchg cmc add push das pop sub sub fs push dec cmp (bad) cwtl sub sub repz or dec sub aaa push movsb adc (bad) or or adc push mov xchg push pop leave cmp sbb mov cwtl xor cmp fimull sub xor lea nop pop xchg movsl sbb fcmovne inc fadd cmp es fwait and xor xchg loope push or sub ss (bad) test test pusha and daa push in xchg ret dec push enter addr16 xchg popa jl test gs sbb divb test enter clc les stc ss insl imul jo je pop aam push scas je rol ret sarl dec adc dec jnp or or dec add adc xchg adc inc sbb in and movsl fcmovnu stc dec imul mov test dec sub add shrb les fsub xor aaa dec cmpsb test loop inc mov nop mov in je test cmpsl hlt mov imul add fs ja popa pop test loopne xor push out fcompl movsb mov mov push cmp ret jns rclb sbb das push xor cmp js xchg rorl sub fs push ret or push jg adcb das jno es inc (bad) cmp lods cli mov sbb aas pusha adc movsl leave sbb and dec dec and test sbb mov test sbb sbb xlat xor xor rcrb lods push mov mov fadds scas cmc xchg mov dec repz gs mov je jecxz jmp sbb pop mov cmp imul (bad) aad dec cs jno fildl dec and jo push pop je inc or or adc adc js and xchg push imul xchg add adc and xchg xor inc sbb rorl dec pop push cmp (bad) loop lock mov int3 push rol pusha or and jnp cmpsb xchg movb mov add outsl sub (bad) xor popf dec inc outsb adc sbb push shrl or adc mov rorb add lds mov aas les in in cmp lods test or xchg lods les and mov xchg inc sbb shlb pop popf xor cmp mov jg inc xlat push insb cmp adc (bad) or inc sbb mov add imul fcompl cld adc adc xor ret push test (bad) loopne lds pusha dec lcall aaa mov lret stos icebp dec xchg movsl sub sbb mov arpl lea and lods shlb push test and ja adc xor cmp inc push cmp inc add push adc cmp insl jnp,pn outsl fldcw cmp bound add imul icebp xor pop xchg outsb add loope popf sub stos int3 xchg inc xchg js inc ror or push mov xor das faddl cltd inc outsl sbb call mov rcr pop insw sub pop xor xchg add push mov mov shrb mov fidivr aam pop xor lcall outsb and sub or xchg cmp cmp push cs sub ret xor rclb adc inc cmp sub imul xchg mov sbb ljmp pop pop or enter in jnp ss aam mov sti loopne jge shll ja and imul push add cmp jl cmpsb movsb xor or das sahf addl add push xorl shrb and push movsl or out mov loope daa push sub js ret cmp loope ret arpl dec data16 leave aaa ds mov sbb test leave adc (bad) iret stos lds sbb jbe or lds jb int dec dec xchg jno push adc outsl daa ret add (bad) xor jle xchg scas (bad) mov mov addb adc add xor sub ret ja pop push cwtl and pusha mov mov ds sub jne js mov imul push inc inc lods stc mov imul mov sub xor push cmc inc or jno fwait (bad) fadd adc aam push or sbb cmp stos or dec in inc inc mov xor add rcll movsl lea test adc add cmp push add mov mov outsl pusha cwtl xor push xor xchg movsl or xor js push fsubrs jmp sahf dec dec sbbb bound push or or inc xchg rcrb adc cli insl pusha lods dec pop rcrb jbe mov jp mov in shrl inc cmp inc loope pop lea xor rol and pop adc mov cmpsb xor mov push dec lret jge arpl aam sbb arpl scas in popa mov call inc gs adc push jbe add adc pusha popa push jne cmp dec and or dec sti jmp jae xchg rclb and dec cmp loop add mov pop add jmp shrb jl (bad) xchg push pop mov sub sub ss lcall jecxz mov pop or shrb imul push ret add lods outsl aaa sahf cmpsb movsb sbb dec xchg dec sub push inc dec lods ds sti mov adc sub stos xor inc stc aam or push scas arpl inc sbb add add pop shlb push push sets call add and mov lods dec cmpl lret pop xor rcrb inc add (bad) adc mov adc enter mov xor mov add jbe adc dec xor dec fildl loop lods xor sub in sub pop dec push out inc add mov add rol sbb roll inc or gs insb leave fiadd jb xchg mov push mov adcl mov sub loopne aad mov aad andb (bad) lret sub dec sub jecxz arpl movsl xor inc lods ret or inc or xchg inc pusha test cmp lret push out rcll jo sub test xchg push rorb les loope call xor xchg and sub dec pop ret cli adc sahf test loopne and jno popa xchg bound or sub flds add loop cmp mov pushf mov bound or stos xor jp cltd xchg pop lea pop cmp sub add outsb popa xchg push js pop jl ss add dec outsl rol rolb mov imul and das push jmp sbb nop pop or add dec push fcmovbe (bad) out mov (bad) push lods cmpsl mov pop imul mov dec add mov (bad) inc inc insl push xor jo jmp pop sub stc shrb or adc outsl pop inc pop xorl or lcall iret add and (bad) rolb cmpsl xchg je orl push sbb sub or and out in mov pop cmpb xor aas addb (bad) xor je fistpll fcomps and cmpsb lods mov inc mov inc js jno shrl sarb mov jp pop (bad) (bad) xor dec jmp sbbb mov adcl sub test nop (bad) leave lock mov and aad lea push ret lods dec inc fs rclb imulb je shll xor jmp addr16 jecxz and xchg call xchg or jno mov (bad) adc fistpll lods and nop push dec loop mov in mov loopne or lock xor mov mov bound fs aam pushf movb cmp xchg mov cld sub and fidivr xchg pushf loope cltd jmp sbb and cmp sub push mov pop pop call add ljmp int3 inc xchg pop xchg fs test xchg cmp or sub jnp add mov adc test xchg mov dec sub mov xor bound add sub inc xor dec pop inc mov mov dec popa test xchg sbb and pushf pop jle sbb dec mov mov out inc add rolb add add sbb add inc jbe cwtl sub cmp xchg and sub (bad) mov imul add inc aam sahf leave mov adc cmp and sbb lock pop test movsl imul pop bound movsl mov test rcrb xchg pop cmp mov cmp push sub cmp roll push mov adc lcall jb ss xchg xchg and leave jb mov rorl fsts push imul xchg sbb inc mov mov add push popa sbb add lods push arpl dec movsl push sbb sbb adc lds or testl push jo sbb xor push repnz mov les push push and stc jne lods xor or ds xor cmp test in (bad) aaa mov push sbb ret jo pushf in movsl mov push mov mov fs mov test jae add dec lods and clc and test dec dec lret mov or fmul mov and xorl mov icebp das cwtl js xor inc add add pusha mov nop push in mov cmp xor adc dec ficomp outsl cmp aas and test dec and mov xor xchg mov mov aam add adc hlt add dec orl mov push cmp sub in imul adc insb popa mov cmp (bad) mov addr16 inc xchg mov or sbb mov pushf mov in lods (bad) dec cmp cmp insb xchg xchg or add push adc push cmp (bad) rcll dec ljmp test push sub mov adc xor xor pusha xor testb and ret mov rcrb sti gs pop adc mov stos hlt test push stc xor je les ud2 inc fldcw lods shrb arpl or cmp or adc push push xor mov sub and mov add test pop dec cmp mov add adc push pop rcrl mov in jno inc (bad) xor jns inc mov xchg (bad) jo das or or test lock in and pop test pshufw dec incl mov add iret (bad) inc and jmp mov adc loop enter xchg addb popa and add movsb ret dec shlb xchg xchg fs sub dec bound sub or mov dec lds jb movsl inc fs rolb (bad) pusha hlt adc dec movsb xchg push pop dec mov bound xchg and imul or add mov (bad) xor pop cmpsb xor (bad) adc push sub xor cwtl or scas fbstp mov inc cltd dec mov outsl lds sub adc test imul in add push pushf cmpsb ds jnp mov adc xor jno fdivrs arpl aad dec push sarb inc arpl or or pop push test test xor inc or push std mov mov sbb leave jecxz notb mov push cmp leave pop push sti fimul movsb sbb lret shrb loope mov push sub test xorb mov andl jno sbb xchg xor cmp push mov arpl pop and pop hlt add or lock xor push les mov jnp into rol or mov push cmp xor jl ret addb rclb xchg push mov test enter xor and xor mov (bad) xor mov js push inc mov std (bad) aam sbb sub xchg aam adc pop inc pop xchg in pushl sub shrl rclb pop push or gs (bad) rorb rol shlb or pop lret or mov dec xor sbb (bad) pop add push lods scas mov ja xlat inc (bad) mov movsl or or dec jb mov and out pop cmp jmp push and pop and test push dec arpl test sub push push xchg or imul sub loop mov mov fcomp mov dec push jno pop xor (bad) nop test icebp cmp mov rclb and insl js cmpb dec js jle pop rcrb xor outsl xor pop xchg adc or adc or insb outsl adc nop xor aam je and enter add or mov push in gs test mov lods xor pop (bad) mov cmpsb add xor mov daa rolb aas adc push push inc inc pop and xor push push xchg aaa push push mov dec sbb add mov xchg movsl inc fldt (bad) jb mov movsl jp mov mov sub ret scas mov cmp push mov mov fidivrl popa xor mov xchg loop or adc adc dec les sbb dec jl leave jb cmp roll imul sub lret sbb push test shrl inc add dec mov les jno sbb (bad) sbb push adc inc cmp lods (bad) (bad) and lock pop push xchg pop pop push xor cmpsl test mov lahf xor sbb enter push push rorb xor sbb dec or jle inc cwtl adc test and dec imul mov cmpsb rcl hlt mov xor push xchg or mov inc mov cmp xor cmp mov (bad) sahf mov (bad) out xchg mov adc xor cmc dec sbb mov ja lock adcb xor cmp xor sbb mov push push mov pop int3 push jp add orl lret jg inc clc rcr aaa out cmp add dec movsb fild inc or or xchg test mov sub sbb ret jl leave add popa int push xor xor cld sbb rcl (bad) jnp pop dec pusha fisttpl mov outsb fidiv sbb mov pop xorl jle inc add movsl mov inc sbb add add sbb pop mov pop test add dec cltd scas mov (bad) cmp (bad) xchg lret hlt sub mov out xchg (bad) popf xchg pop dec (bad) cmpb inc sbb and xchg inc rcrb mov insl test mov and mov rclb (bad) xchg mov and mov or mov call xor mov inc ja or or scas out daa add push mov or into ret mov push rol call dec icebp fs dec stos adc jb adc add mov pop sbb push xorl lea pop leave mov and fdivs xor popf add xchg movb xchg or inc sbb sbb pop pop mov lret mov mov xor call imul call cmpsb movsb xchg push sub (bad) xor cmp js cmpsb and or or fnstsw cs pop aaa jae and data16 pop pusha mov adc stos xor and mov fwait js mov mov shrl test sbb movsl push mov enter insl movsb or mov mov mov mov adc ret pop push ret xor xorb add dec add dec test sub pop cmp int3 js outsl cmp jo xor jae push sub (bad) push dec pop lcall inc dec ja inc lcall cmp xor icebp nop adc mov (bad) push mov pop push roll xor dec movsb dec ficom (bad) lea lcall aad mov and dec mov and sbb xchg shlb jns mov and cmc inc adc xlat or inc popf xor add sbb mov mov jecxz leave mov test cltd scas pusha sbb sbb divl add sbb jb push or push outsl xchg popa pushf adc out cmpsl xchg xor xor sbb aas adc fsqrt mov push shrb push cwtl inc mov in xlat (bad) push out sti (bad) clc xor or ret das inc or sub inc lds dec cmp add push adc adcb inc ret ds jo add sub lea clc pop movsb and jb aaa push or and push test cmp pop insb add dec xchg rclb sub dec arpl mov aam xchg gs push test stc fs pusha or mov jbe add (bad) mov adc xchg or (bad) jns shlb shlb pop add (bad) dec push mov push ret (bad) and fs push xchg mov roll sub adc nop add mov ret pop pop cld arpl ret fs xor push mov jp jno jo pop push add add cmp lret push mov dec push orl rclb dec or sahf or add test imul push lea inc or jo jmp push (bad) and pop adc or dec repz pop mov rclb cld adc mov shlb jl enter xchg or push loopne mov dec loope outsl test pushf jae sub xlat xchg jae lods test push sbb js and push adc and sub cmp fild add mov or adc les xchg lods mov push inc fwait and gs push xor adc cmp or jo or mov add cmp mov jbe inc es outsl push add cmp sbb sbb sti rolb (bad) imul xchg sub adc lret (bad) adc mov out adc arpl push popf cmp adc cmp push call stc mov pusha loop (bad) leave xor dec jp int3 (bad) and mov mov xor test nop nop mov add xchg xor out push outsl ret pop mov xchg cli adc xor in or or (bad) mov sahf pop loope addr16 or test fs xchg movsl pusha push mov sbbl popa add adc inc pop xchg sti inc push jno daa aaa in popa jno push (bad) gs nopl xor xor add sahf jle xchg ss mov mov adc mov daa pusha arpl inc loope inc shrb js jo popa jno cli sub and mov inc movsl loopne dec inc mov nop adc lods insb sub mov adc (bad) xor xor (bad) ss adc lods gs xor push ret insb mov enter push pop fs jns js scas xchg dec adc fs pop sbbb push lea cmp mov push outsb out rcrb loope sub sbb add lahf mov cmpl xchg xor sbb icebp lea sbb adc pop jne or movsb inc mov and mov add sti cli outsl xorl pop or fimul call sub sub pushf or push leave push andl xor push sbb in mov imul and inc clc xorl lods xchg cmpsb mov ret sarl xor adc aam add xor adc inc pop repz and adc add push mov mov mov and (bad) das aad or sarl cmp dec mov add fisubr call int inc xor stc xor pop dec push xchg inc iret pushf pop cwtl and cmpsl popa mov mov cld fisub add adc sub pop pop mov jecxz xor dec movsb push dec pop xor fisttp add mov sbb pop dec ret clc xchg sbb (bad) xor cmp frstor call or cmp and sbb xor sbb jecxz cmp cs mov xchg fsubl push and or lock xorl sub les ljmp add inc cmp fsubl add mov inc dec mov stc or subb imulb pop adc push jg inc dec sbb shrb ds (bad) mov dec or in adc inc cmp aaa lret bound xchg pop sahf rclb les push mov cmp mov ret dec xchg lret sub mov mov sbb dec mov fsqrt jmp add subl cwtl xor dec xor xchg lock jle inc inc mov pop or insl (bad) push or pop or and in adc enter loope (bad) mov es pop lea daa dec inc push dec xor add xor gs pop mov movsb mov push inc rdtsc jmp xor adc mov je repz sub cmp sub mov call adc dec sbb repz arpl pop xchg xchg mov dec and sub inc jns cmp and add aaa push sbb jl mov and daa adc and sub lods mov inc add gs mov xor sbb lret dec lret mov arpl dec bound inc es adc (bad) pushf sub nop push dec pop mov jb mov lahf mov out fnstcw and mov cmc and or test fs and popf aam push add loope cmp roll xchg adc (bad) aaa addl or iret sbb add dec sbb mov repnz ret js js mov jge call and and push ss rclb sub sbb ljmp add cs jne lock pop fs pop xchg pop aaa outsb jo and push push addr16 imul xchg pop pop insl xchg or das inc jne ss fistpl sbb adc mov loope and add and divb js test int3 xor or sbb mov iret outsb insl cmpsl inc pop sub imul aam (bad) (bad) divl xchg shlb cmp loopne enter das loopne and or or in movsb xchg mov rorb sub enter or mov and xchg adc push and pusha jo jbe pop jg or add call add xchg mov xchg or lock das cmp call bound ja js imulb cmp arpl dec cmp jp mov push sbb push inc aaa and lods xchg push mov mov lret loope cmp cmp (bad) jo and int inc xchg mov mov aaa push arpl xchg lods add xchg and addl ss push mov test pop pop push into (bad) dec inc xor ret test or cwtl rcrb push jb mov jae cwtl xchg cmp iret or xor mov into pop inc pop cmp jp test rcll sbb ja aaa mov movd dec lds pop push dec stc cwtl test or subl (bad) push cmp mov cmp es popf xchg inc mov ret lret (bad) jae insb or and addr16 clc xor cbtw add divb and cmp jns loop pop aam das mov testb push popf cli adc adc mov inc inc lret push fcoms lods mov adc movsb (bad) mov inc addr16 cmp in rol pop mov or adc insb popa jns in les inc xorb cmp sbb popa out add add add sbb ficompl or sbb pop fildl mov or pop and mov pusha mov add cmp xchg adc cmp and push inc or ljmp (bad) jmp jp and jbe jb icebp (bad) cmpsl lods ret loop push aaa mov ret arpl pusha sub adc or movsl popf sub sbb insl mov inc sbb movsl adc test push jbe pop ljmp cmp loope dec int rcrl inc popa dec sti fwait js repnz ja or andb push mov xor jo lods cwtl cmp push xchg imul cmp mov (bad) inc adc dec sbb lds push aam js lods lcall cmp leave sbb dec outsl push sbb cld mov inc mov sbb push arpl add mov and pusha jb lods fs push in mov add scas jne (bad) cmp test xor arpl add adc test rorb mov adc test sbb ret les arpl loopne test xor ret ss and dec add mov jbe xor or movsb daa adc lahf sbbb cmpsl stos inc ret mov mov cmp and pop adc push mov push test sbb shll dec das xor daa jae sub xorb mov rcr es adc add mov add mov jae loopne popa inc pop pop fnstcw fcomps push add add push or dec or add mov lock repnz sbb fbstp add ret xorb shll arpl sub cmc fsubs xor sub cmpsb (bad) into mov sahf dec push lods cmp bound aaa gs ret push xchg je add adc enter sbb xor sub int3 or (bad) push xchg pop loop push jg insb sub sbb sbb popf test inc mov sbb xor cld xor or adc insl jmp jecxz xchg int3 orb pusha scas mov push jo mov roll bound in test sbb inc push arpl jb jo ja rorb sub or mov loope popf sub iret and dec pushf in fdivrl test dec xor mov loopne add ficoml inc adc addr16 inc and cmp prefetchw or sti subl dec jg pop push test cmp popa xor jmp jno and lds sbb out mov xor push mov mov (bad) jae outsb or mov mov push xor add out (bad) push xchg pop xor rclb dec das cmpsl pusha push imul mov and inc bound test inc push shlb push (bad) push fisubrl aam mov fadds jae les (bad) mov push cmpsl enter xor xchg ss pop fdiv inc add fcomps inc stos inc xor inc test cmp popf xchg cli ss dec pop adc mov push xor sbb push pusha dec test sbb test cli cwtl adc dec or push sub ret xor in mov sub adc cmp and cmpsl cmc jo add test pop imul cmc es pusha in and or inc rcl scas sub or jecxz or fsubs and dec ret mov xor pop popf xchg sbb pop or lock addl mov pop sbb xchg add dec imul push dec ss add or shll adc inc jge fisttp jmp js aam and imul sub inc and jecxz and rclb push rolb (bad) jp lds push pop imul (bad) repz and pop push lcall pop cmp adc popa ficomp xor cltd push push push lea nop js shll push (bad) lahf addr16 inc adc (bad) outsb adcl inc sbb jbe mov ss sub jecxz mov xor mov jne (bad) lock ret or enter movsl jmp daa jo push sbb mov (bad) xor sub and push adc pop add mov pop add inc inc or jl or lock adc or push sbb inc adc pop addb sar jmp dec pop pusha mov push mov cmpsb dec add and fld nop adc inc sub mov xlat jp (bad) sbb fld shlb fld push (bad) imul push (bad) push xchg pop out cmp cwtl xor (bad) mov mov mov inc sbb test (bad) push adc mov test sub cmpsl adcb test adc cmc loopne mov fs scas ss mov sub ret adc mov and movb xchg dec sbb push push sbb mov (bad) insb dec cmp pusha mov sbb or xchg push dec xchg les and and or pop sbb or adcl push xchg in and jne fsubs inc imul test fidivl mov dec neg adc insb sub out jno sbb das fucomp (bad) push dec sbb jb sbb inc (bad) xor js ret in mov push lea mov push mov (bad) loopne call cltd gs xor inc shll lret or add iret arpl xchg test jae andl nop or mov in lock jno push enter push cmp xlat cmpb push adc stos inc ret fs push and aaa pop sub push sbbb icebp jge pop inc (bad) enter dec stos add (bad) adc out arpl mov daa test dec sbb cmpsl inc scas pop mov enter call stos sub xor ds lods adc (bad) xor adc jbe pop nop in sbb xchg lock adc push xchg jb adc imul (bad) bound pusha push loop mov into inc sub lock add sub cmp clc mov cmp cmc cmpsb in call pop mov inc mov pusha push out add xor andl mull or xor inc shlb cmc dec mov and sub cmp xchg or mov mov xchg dec pop repnz push test push add cltd insb inc sub in jb adc fs dec dec push dec cmp xor lods pop add add push jecxz push add adcl pop sbb lret cmp push sbb mov and lods dec add loopne xor cmp fcoms sahf pop inc add aaa add cmp jmp xorl lds fsubrs loope fcoms or mov repz cwtl and outsl pusha mov mov lock sub jge dec sbb mov sub mov cmp push lea sbb pusha xchg loope adc pop mov adc les clc sub xor fmuls outsb cmp cmp push fsubs test jecxz push or jp mov sub jb mov rorb mov and ret lret pop xor dec jge adc in xor lret push push or shll loopne pushf mov mov roll add movsb lcall daa add js insb mov push dec cmp push das sahf movsl mov add rcrl fild or daa cwtl andb xor xor daa or dec sbb mov xor sbb (bad) add loop arpl faddl fisubrl addl mov test cmp and rclb cmp (bad) into xchg dec pop fistl or idivl adcb gs shlb and sbb fildl adc cld js js lret lods ret dec cmp adc test in addb sub orl mov rcrl or call out adc add fist (bad) inc jmp or (bad) dec xchg (bad) (bad) push imul imul dec cmp push (bad) sub addl push cmpsl mov lcall mov and iret pop jo push scas add loopne mov cmp (bad) jae jo lea sbb sub and mov test adc and pop add pop adc add mov xchg rorb dec cmp ss mov add push and and lods daa inc mov mov add inc lcall and dec js (bad) daa mov push ss outsb dec pop int loop jmp adc xchg xchg xchg add das lret add mov adc xor pop xorl sub xor xchg add xchg add mov pop rorb inc xchg popf jmp fistpl popa les jl mov insl dec push push and xlat xchg adc and xor cmp loop or push sub or and jne pusha and add lods or pushf movsl sbb mov lea sbb sub adc loope mov lcall gs ret stos pop or adc rclb imul rcrl loopne stos cmp xor punpckldq ret xchg dec jo xchg xchg lcall andl hlt mov push adc out lock xchg int3 lock xchg lret fiaddl xlat xor psllw rolb ror push sbb arpl test add add cmpsb adc aaa jae add ret sarl push sub insb add xor and mov or mov rcrl lret movsb testl pop ret xor aaa push dec into rcrb cmp xor dec test (bad) clc and nop xor mov add fiaddl mov int and mov mov fstl add sbb addr16 fnstenv dec dec xor and xor lock xor test and rol cmp je (bad) out fs add adc jb rorb inc mov shll mov inc popa rorb (bad) faddp xchg push stos add xor sbb sub jo mov lea cmp jl (bad) sbb mov push mov mov or fdivrp mov lcall inc pop add cmpsl or cmp cmp adc lahf xor push sbb push mov push cmp inc xchg dec iret push mov repz mov lods rorb imul bound test pop mov sbb inc push cmpsl mov mov jo cmpsb outsl push leave pop sbb cmc pop sub fdivr pop int3 inc (bad) inc push inc outsl leave or adc rorl ret cmp add ret insb adc mov and enter fs stos pushf inc mov (bad) rolb cmp mov imul xor and leave xchg shrb dec insl pusha add leave test push je lods or and xchg fidivl in xchg inc push xchg andl push or xchg nop xchg das insb mov jl sarl loop fcoms xchg std push out xor insl in or enter popf adc lods jnp dec adc push lahf movsb or add arpl mov mov mov adc (bad) or add rcrb cmp enter mov lahf cmc cwtl rclb add add pushf (bad) dec xchg popa lock (bad) add fcoml imul fwait pop ds (bad) scas add mov mov sub rclb pushf (bad) or dec xor xchg jb xor popa push pop mov icebp ss xchg inc mov insb test roll or adc scas popl jmp jae lcall pop les ffreep ret inc cmp sub adc and add pusha sub cmpsl fstps push cmp int cltd rolb enter mov arpl mov ret (bad) mov (bad) addl cmpsl into fwait jb mov push sub pop arpl dec loopne add call inc addl rcll sbb test ret jnp int3 lret sub xchg xchg add pop imul pop addl loop movsl push ss or mul pusha inc or dec push or mov loopne cmp jbe out xchg and cmpsb mov jae jnp ja lock gs jo loope je repz push inc dec mov imul ss (bad) movsl inc dec xchg stos js add adc mov inc stc insl mov pop add sub and jnp sbb test stc test lea pop hlt sub rorb adcl cmp push mov mov adc mov orl mov xchg xor cmp push adc add sub cli (bad) leave jmp movsb cmp scas xor outsb inc push add sbb popa mov xchg or sub inc sbb sub mov xchg les push sbb fwait pop dec xor sbb pop mov dec mov cmp sub lahf imul loopne dec mov lcall lods cmpsb mov ret ja cwtl push enter aaa dec test jecxz popa popf xchg fstl dec adc sub jmp out or mov mov mov and xor add js (bad) inc sub or mov cmp adc mov xchg arpl aaa clc add pop shr je cmpsl inc xor xor jo cmp or mov das push inc sub jns sti or in or into jae inc sub jmp add sti pop push push and sbb insl mov insb xor ljmp jae nop xchg bndstx aad mov xchg or and adc push test dec jmp sbb inc sbb lret jmp fiaddl dec popf mov arpl int or xchg cltd fldcw mov or cs js inc xor push lock shrb mov sub dec cmp pop fucomip je inc xchg and adc adc in sbb pop fiaddl ret jmp dec xorl mov sub pop or or jmp pushf test inc popf insl fsubrs cmp mov mov inc push daa sti fsub mov dec xchg pusha xchg xchg and sbbb arpl xor and adc cmp sub and jns movsl mov xor in bound add aaa bound push pop insl sbb movsb xor add cmp sbb pusha mov nop cmp js mov xor or mov lret push pop jno ret jae or gs sbb and push xchg xchg and push pop test pop bound xchg or movsb (bad) jb lock mov lret pop mov jae incl or bound dec jae push aaa loope lock push inc mov xchg pop xchg mov push rcll nop mov pop int3 inc mov cmp loopne mov xor xor xor or inc add mov lret cwtl aam popa addb or add les andb xchg bnd mov jge xor xchg ror push sbb adc cmpsl inc mov sbb lods cld stos lret cmp lods jge enter (bad) and popf push lahf adc arpl pushf dec push outsl push xor sub test inc mov rorb or push cmc sbb push arpl mov jecxz js popf ret sbb sub mov push push inc xchg adc and dec jne (bad) rorb rcl pop pushf (bad) cmp inc into shlb pusha add mov loopne xchg push add or imull pop inc mov cwtl imul add das je adc sub mov jp push loope shlb xchg gs jns mov push push les rclb in pop into push xor and push aaa and and jge or push test ret cmp and addl imul add test dec gs push add std mov sbbl popa xchg adc js mov xor mov cmp or cmc or movl cwtl rorb adc lods dec jne imul xlat incb aas lock leave or push dec sahf or sub int and (bad) push mov xor lcall pop push pusha mov (bad) xor xchg and cmp mov ret sbb add push adc push mov mov bound loop test loop jb int3 add pushl movups xor and xchg push into add xchg pusha add or inc xchg cmp arpl add inc and and rcrb sub pop mov loope repz mov movsb int3 and push push (bad) mov or inc jge mov outsb dec jbe and rcrl mov cmp mov lahf inc addl movsb pop add or (bad) dec jecxz jae andl mov imul push scas lret adc mov and and mov ret push scas fwait pop andb mov aad es or cwtl scas movsb or imul or cmp adc test or adc and pusha or add inc and addb sub and mov add add add pusha loop jns xchg lcall push popa loop je sbb xor mov inc pop xchg inc test inc inc sub push movb clc sbb popa sub test push inc das popa adc adc sub dec shl push mov add cwtl pop pop or (bad) pop push (bad) mov cmp arpl xor imul ss mov popl loopne mov push aad jecxz cmp or dec hlt jno addl xchg cmp dec mov or icebp and and jge sbb pop add jge (bad) push scas mov jecxz add lods imul add mov call dec adc or ret mov hlt xchg mov enter sub pop cmpsl xor aam roll inc jmp jmp popf mov sbb pusha movsb lea jecxz mov xchg cmp inc cmp or add mov (bad) dec pop xchg mov xor mov inc mov add inc dec or bound gs jg fcmovb addb mov inc mov adc mov and out push ret and push movsl xlat sbb xchg lds lods mov and sahf gs nop sub and sub and or push sbb cmp pop push or sub xchg xchg cmp pop ljmp cmpb xchg test xchg dec or xchg inc js popf mov push adc adc mov xchg cmp xorl dec push cvtpi2ps and repz inc mov cmpl add xor aam pop scas ljmp pop cmp inc xor idiv fdivs or jno xchg roll sub xchg jo adc enter aam imul xor or cmc xor mov sbb jo iret mov mov aaa push xchg sub add pop adc sbbl aad lock dec adc mov inc dec adc dec add or sub frstor adc rcl lock sbb dec cltd xchg add imul inc add stos ss in ret bound sub adc xor ret aaa add sub xorl lahf inc sub mov push arpl mov push inc xchg dec scas ret pop adc cmp push add xchg nop push andl jb xor or mov pop adc inc jbe inc add (bad) mov fwait or je jg push pop pop add lcall pushf test mov rcrb loop fsubl xchg (bad) inc xchg dec arpl rclb add (bad) mov mov mov dec pop sarb add repnz mov mov dec loopne test dec push inc mov inc jl push jb push sbb jae or push aaa and clc fidivl xchg lock rcrb cmpsb imul (bad) cmpsb aas add pushf dec lods inc or xor dec xor or imul adc cmp loop sti xor push push and inc test insb je popf pop cmp rcrb mov sbb pushf mov fdivrl ss out mov in xor fadd push shlb add clc outsb xchg clc adc cmp cmp jb add sbb add push (bad) cld cli cmp push push (bad) mov icebp insb mov mov inc jns adc push xor sbb xor xor inc mov lahf jge popa gs imul je arpl bound adc call sub sbb xor (bad) xchg xor out (bad) loope jecxz pusha jns mov sbb outsl bound (bad) hlt out or clc andl sbb lock inc std dec mov (bad) daa mov repnz lea aaa ret jb fbld mov test shrl inc test dec add cwtl lods xor addr16 or rcrb add jne sbb push movl xor pop imul cmpsl sar pop lcall inc dec iret sbb lcall movsl jecxz adc lods add push imul cli add and jne pop popf insb in outsb cltd cmp insb cmp sbb test sbb push and js cltd mov xor or dec xor and cmp insb lds aam ret mov movsb push jp loope adc adc or push (bad) call sbb push push cmp adc mov inc ret cmp jns in or lods out jle aam js out leave mov or push inc mov out scas aaa adc xor xchg mov js es jns or push cwtl lods outsb lods push or inc je rcrb jl adc cmc add mov cmp mov and imul jg mov movsl fsubp and lds ret and mov push or pop sub mov mov pop sbb cld outsb sbb (bad) dec sbb (bad) aam in xchg shrd pop pop sbb mov (bad) loop repz sub cmp and adc fmuls or jo cmpsb jo cmp jecxz push dec xor xchg les mov cmp sbb cs push popf sub lock push jl dec enter or sub lds inc or adc daa pop ret add pop or lret popa and test adc loopne push jecxz push adc xor xchg mov roll add cwtl jbe loope fs (bad) and inc dec mov flds cmc adc mov jmp add mov mov push push loopne mov pop xor pop (bad) rol aad dec add pop test push pop sbb loopne fldcw clc jno xor xor cmp aad fs addl add cmpsl popf pop push xor or cmpsb sbb lret add or popa call es rcrb add add mov push mov mov inc mov push pop adc sub pop orl mov ds loopne add rolb mov jmp rcl leave lcall fdiv mov popa daa xor fs inc sbb inc cmp inc sub lods mov rclb mov xor sub pop inc fcomps adc or movsb test mov sbb lea push (bad) xchg add or xlat fs sub adc cmpb nop and roll das and clc pop xchg scas test sbb or add add cmp add xor mov mov mov or sub sub or imul push stos mov cmp lea mov jp inc and xor lds cmp xchg lcall test sbb xchg mov lods fbld and mov nop les insb arpl lods inc add gs add xchg sub or jbe loop pop add into mov push dec pop pop and push dec lea jmp xor cmp and pminsw lret ret (bad) add and outsl adc xor test and rcrb push jecxz mov dec cs dec add xlat xchg pop inc cmp iret dec shlb adc adc dec (bad) rcrl lods or push fcoml addr16 inc or sbb sub and inc inc inc jmp xchg cmp into fisttpl push or dec sbb push cmp mov add or or test ret sub adc inc add add in pop inc sub pop stos pusha dec ret mov stos xchg lea fcomps pop push or or imul add test or js xchg sbb call pop or insl mov mov add jno aam lcall cltd leave ret sub pusha daa jmp (bad) ss loope enter adc test jmp clc xor in fwait xor sahf xorl adc and sub test sbb out pop push pop xlat xchg cmp sbb and add je pushf popa test mov jg or cmc rcl sub mov lcall andb rcrb mov mov push lods test or in sbb mov call xchg cmp movsl in sub mov cwtl adc fs fdivrs cmpsb dec ss xor cmpsb pop (bad) jo jo jmp lret nop scas sbb xor mov lret dec add sub xchg movsb sub pop or mov test rorl insl test mov outsl jmp or aam mov ret std sbb pushf dec cmp inc xor aaa test and inc and arpl mov dec pop cmp pusha xlat dec adc loope loop aam repnz push test jp cltd clc pop xorb dec mov xor mov inc jp call scas xor add inc jecxz pusha dec cltd nop pop fsubl xchg scas adcl xchg xor add and rorb dec or sahf mov lods mov pop mov insb jp inc (bad) xor leave xor push xchg nop lea scas pop adc ficom and adc daa psllw push push sbb xor xorl js adc mov sub stos int cmp mov pop test loope mov aas mov and imul push push movlps stc sti rcrb or adc es lock lods and sbb add out idivb test sbb or pop (bad) aaa xor test adc pusha subl pop sub lea rolb (bad) mov enter inc or adc pushf xor sub (bad) sub dec data16 cmp outsb aam add add dec test mov cld inc sub adc fild in pop mov cmpl push inc xor mov cmp aas pusha or mov xchg sti pop adc inc xchg pushf inc fidivl dec sbb push mov imul dec insl sub push sbb xchg mov push add or dec or adc xchg movl or ret jb pop cmp rcr xor push and loop xor movsb cmp cld jne ss cmp push repnz sub pop lods jl add add dec nop es dec sbb inc lcall outsl push push lods notl xchg aaa push mov xor mov shlb and daa mov inc bound sbb test mov adc pop inc cli xor andl in jbe jae aam je sub jecxz add pop fcompl xor lret lock cwtl add adc rolb sbb sub addr16 cwtl lcall add les jg add cmp or pop fisubl xor aam mov mov ret lret sub xchg add or vpsrlw adc and stc inc aam sbb mov movsb notb push jno xor fidivl shlb inc push xor and cmc xchg push adc adc pop pop pop pop mov mov add sbb sarb sub ret xchg push or xor pop (bad) mov fbld lea xor push xor mov inc jo into mov add into xor sub pop adc push imul nop sahf add andb and jnp and adcb test mov jp cmp mov push int test sub or lods dec es call (bad) shl xchg repnz jns loop lea out or add aad loope imul or mov outsl cmp xor add ds adc inc lock cmp orl adc or mov mov jg or push mov xor inc data16 push push xchg lods adc cltd or xchg or rorb push dec sub jnp xor call mov add lds pop xor inc leave mov xor add push in mov cmp and adc mov (bad) dec ret lahf mov pop in divb ja nop cmp add push movsb push rorb inc arpl mov xchg xor add inc jbe clc cld lods inc loopne fisttpl movsl adc mov mov (bad) (bad) outsb pusha or pop push es xor push or sub and mov lock (bad) xor adc lret inc pusha sub and add add or shl xor stos jnp outsl adc shlb cwtl (bad) loopne andb lret leave (bad) xchg je dec in xor mov test leave das sub (bad) mov pop test mov jg mov mov mov adc and sub bound arpl loop lods sub jg add adc add pop jb enter call pop sbb loope (bad) ss add (bad) sbb or inc movsl or stos call incb add shrb xchg mov add jbe push xchg mov mov test and ret inc inc addb sub jb inc mov mov cmpsl or push jbe lods sub nop pop inc cmp fadds cmp lods and and and (bad) sbb inc es dec daa xchg pop push lret ret lahf xchg inc xor and adc fist lock call add imul sbb lock les or enter fidiv movsl sbb enter xor jg sahf inc dec sarl sbb int3 or or mov pop imul dec rcrb mov hlt mov jge xor (bad) ljmp (bad) mov add inc push push leave sbb sbb jo inc fstl shlb lock jmp cmp fwait jmp popa inc pop lret (bad) or and fcoml ret vmovddup cld mov cmp outsb jne (bad) xchg jp in outsb fisubrl fisubr sub outsb jnp push adc cmp add (bad) dec adc xchg fsubrs in jmp cmp add xor push and in ja and or xchg adc pop mov ror shll stc jns push fs aad lcall xor xchg pop (bad) cmp and daa xor test cmp xor js jo mov dec push push or repnz call lods xor or jb sbbl movsb arpl rolb jp add test push dec lea (bad) movsl sbbb add xor movaps cmp or iret mov sub pop lock push and xor and sub or xor xchg sarl add js cmp push dec push push xor (bad) fbstp (bad) dec pop lods sub adcl mov push cmp add call add in xchg mov out push cmp popa add out dec (bad) mov dec frstor push (bad) call enter mov adcb jp sub jge and push test sbb add (bad) xchg pop xor out or mov xchg mov dec jo cmp xchg cmp xor add or xlat imul subl popa adc mov add mov aad inc movsl and leave arpl and push jmp inc and dec movsl rcl js mov pop inc mov adc rcll imul sbb xor inc test adc and xchg jmp jge insb arpl add pop dec (bad) sub (bad) ret cwtl sub arpl jnp xchg mov add mov rorb mov addb add js pop test out scas imul mov add sbb cmp sub push stos dec mov xlat arpl insb lods or jnp cmpsb push les mov lods add and jge mov or inc pop repnz mov and jo dec ljmp insl pop pop fwait shrb inc stos xor or (bad) xchg pop sbb fs push (bad) jno jo ret ret adc arpl sbb sahf sahf sbb or test lret ss pop xchg ljmp and das sarl rolb xor mov pop fwait pop mov (bad) rolb sbb cltd mov pushf cmc add lock loope mov leave ss pop (bad) and mov push pop mov test push into mov adc jge dec jbe or inc add or push testb std inc pop adc xor mov dec cmp xor rcll sub loop cmp or jo cvttps2pi sbb lds and addr16 movsb push push push mov dec mov popf repnz insl add jmp bound xor cmp insl add mov loope adc dec adc nop push sbb xor popa mov add mov imul pusha pop ss sub mov mov icebp xchg mov jp sub cmp testb in ss dec pop insb xchg mov test enter fcomps (bad) ficomp loop ss pusha and js je push mov jecxz cmp pop xchg push push shlb mov nop push add hlt les imul and gs cwtl jmp jo push ret cmp in out xor xor push js and lea cwtl enter test rcrl in mov popa loopne inc ds fldl push push cmpsl in lret jl jmp nop xlat xor ss mov test xchg ficomp and dec push (bad) adc sbb sub cmpsl xor scas jecxz sbb mov or add xor or xor ljmp imul adc mov adc data16 xor or add mov addr16 push adc pop lahf inc popa ret fisttpll and sbb rolb nop rcrl xor rolb push aaa dec loopne and stos test or pop lcall mov ljmp mov cmc stc cmp out insl das adc pop (bad) jo pop xor sub jo mov daa adc xor cmp xchg daa in xchg adc rcrl sub in jge shr pop push (bad) inc popa stos repz gs or movsl cld stos arpl sbb fnstenv inc mov cmp adc xor mov loopne mov adc and shrb sbb mov (bad) (bad) sbb jno test push xor xchg movsl push or loop pop popa sbbl adc sub test movsb inc cmp pop stos adc cmpsb popa dec movsb jecxz ret test pop xor sub jo icebp mov adc pop and push ret jecxz and adc jg rorb fsubs sarb (bad) xor call fnstsw xchg xor jo push xchg push pusha bound or imul push push aaa push adcb inc cmpsl movsb and loop mov or xchg push xor lcall and cmc adc mov aaa inc add dec xor or jae cmp scas and in iret js mov lea adc adc mov or inc ror aam mov and adc add jno in dec or loope add dec fisttpll sub push mov dec daa sbb in or sbb scas popa lock inc mov sub or (bad) pop mov dec mov sbb pop mov xchg dec enterw xor test mov lds pop adc (bad) hlt or cmpsl or add sbb jl dec add adc mov add mov inc mov push push sbb sbb out iret jns xor inc dec add jg inc test (bad) mov dec sti out sbb cmpsl outsl cmpsl inc addl adc fcmovb pop sbb xchg mov cmc mov or je lods mov add lret pusha inc aas sahf mov lods sub insb cmp dec mov sub mov add sbb sbb xor imul pop repnz ror push add or add adc or (bad) mov inc sarb imul rcrb or lock sbb pusha mov adc adcb mov imul lds push inc mov mov sbb faddp call mov fist and pop jmp (bad) icebp mov cwtl es or pop adc jp jo lds push pop sub mov sbbl mov xchg bound jbe dec sbb ret mov popa je (bad) jge lea aad and dec mov pop sub xor ret aam jmp add (bad) xor jg adc inc jae sbb lret es xchg push cltd cmp mov inc addl outsb ficom inc add inc (bad) (bad) js jb stc adc add sbb jbe imul and into pusha push inc addb mov jnp imul mov scas sub add or xchg pop (bad) loopne shlb rorb stos jge xor push pusha repnz and xor sub outsl sti xchg xor popf push mov push js (bad) out imul add add xchg dec push xor and movsl inc mov test pop cmp arpl lahf cmp or call inc sbb divl sbb jmp or xchg push jge pusha inc mov aaa sbb enter sbb cmpb cmp add mov and inc pusha test lock push repnz enter pusha mov fwait aam (bad) inc loopne push push adc test adc xor mov mov lock mov jnp es js xor (bad) lret xchg bound mov pop adc fucom cmpsb sahf rolb xchg lcall rol cmp inc pop dec popa sub outsl jbe test leave push sti std add push or cmpsb dec (bad) roll test in sbb ret iret dec lahf add inc mov push outsl das in dec and dec xlat and dec sbb out mov pusha or lock test push adc inc and popa jns lea add sbb shr cli sub (bad) fistl push xchg fiadd push nop xchg and pop add icebp dec lods adc aaa jne nop popf dec inc pop push add lock xor xchg add pop mov (bad) out or pop xchg mov aaa orb insb arpl sub add mov or rcll insb repz ss mov sub jp insl cltd and pop and gs sar add xor xchg pop pop test adc sbb push mov andb push mov js cmp cmpl js jae out orb rcrb pop fidivr loopne push jo sbb inc mov xor push mov lds xor jnp adc or dec rclb adc mov mov jns adc lds or push js sbb imul push mov gs add rcrb sub mov pop xor enter loopne rolb mov mov andl call push cmpsl inc add inc lea dec mov leave inc (bad) ss subl loopne fsubs xor or in and and sbb mov mov sub adc ds test arpl inc int add inc sub imul lret or xor outsb (bad) ret inc and adc sbb lods jae outsb rolb into (bad) xor pushf mov add fstpt xchg testb fsts (bad) or call jecxz call xchg lret fs mov ss sub pop mov add jo pop mov imul or cwtl nop or enter xchg push inc sub lcall inc (bad) rcrl or pop or adc jo pop loopne add sub lea push mov adc (bad) xor test cs fadds xor pop xor jb nop or inc sub test xor mov cmp inc xor and sbb xchg cli mov fsubrp pop (bad) aaa fs xor pushf xor dec mov in cmp mov ffree mov xchg int stos pusha mov mov push mov outsb cmp mov (bad) shrb ret pushl ret sub inc and popf in out and mov nop push or dec and xor mov inc push push add or or sub (bad) xchg leave push or sbb subl bound test push xchg cmp jecxz pusha or repz inc sub test shlb je mov hlt movsb dec inc xchg pop lcall adc inc mov xor pop pop or jb loope sbb sbb imul icebp cltd mov xor nop aas dec cmp cmp xchg mov cmp test mov sbbl ret lret xchg sub cmp push cmp xchg popa pop adc mov pop js pusha xor adc push jmp lock adc test pusha popa cmp rorb mov xor xor and sub inc mov sbb roll or outsl xor cmp in xlat lods test ds rclb test dec mov add test or cmp or sub push (bad) mov sbb xchg fwait jns addr16 in xor pushf push mov and sub mov cmp push push xchg xchg xor rcll repnz inc pop mov mov dec mov dec adc inc dec mov rol out or mov fimull adc pop and ds push or inc cmc test loopne outsw addr16 rcr push pop mov pushf fsubs test push dec mov enter dec sbb xchg test pop into lock pop insl dec leave stos (bad) movsl int3 ret rorb js nop inc ret (bad) mov ret stos popa adc adc imul arpl insb mov int and mov (bad) pop cltd imul insl push pop xor push fs or inc pop pop jae add push jp inc cltd pop dec popf jnp arpl inc mov int3 inc rolb push ret (bad) jo mov sub fwait (bad) cmp enter sub sbb lea cmp and addb movsl cmp mov imul mov (bad) push lods push movb or pusha add test add call xchg mov sbb and jmp ret xor and mov lea sub xchg push and lcall xchg sbb dec add push adc mov jecxz mov lock or stos fcoms dec shrb and jge mov add pop insb jecxz cwtl dec loop cmp sub sahf and inc pop les sub (bad) lods cmp shlb push xchg push pusha and sti cmp xor pop xchg int fisttp lods cmovs mov adc or lea leave add aaa outsl or adc cmp add mov and xor and popa and mov nop test or adc jo (bad) xchg lret push movsl or pusha hlt xchg sahf aaa clc loop sub push orl jmp xchg mov (bad) and xchg imul inc and dec inc or mov xchg mov mov xchg scas popa popa arpl add adcb imul xor dec jecxz cltd push lock push icebp shll test xor mov dec xor test cmp sbb das dec or adc stos (bad) mov insb loop adc mov std incl cmp cmc loopne inc cmp push and mov add fldenv dec sbb rclb and lret enter test inc sbb insl jge or dec cmpb and mov lcall arpl pop clc add dec cmp lods lds xchg aas adc add mov add rorb test mov add add inc xchg or jno nop add push xchg rol mov fwait outsb repz and (bad) xor lret sbb push out (bad) push inc dec das and pop pushf sub test xor mov rcr pop xor dec js sbb test hlt addr16 fstps xor dec enter add cmp pop mov pop mov loopne fsubrs bound (bad) jno stc lds push jbe and pushf test fidivl and push xchg mov dec push dec sub icebp js ja pop out xor cmp xor nop push adc xchg and bound out sbb mov pop inc dec hlt test insb push lret add mov es andl inc push inc add mov and fistpll flds mov ret dec and pop fcoms adc mov jno pop (bad) orb addl sub add push repnz xor (bad) mov jmp and js jb lret test ror fsub rcl (bad) dec mov push mov push or jecxz out sub xor hlt or pop add xchg jno push sbb push stos xchg adcb push dec leave push gs dec or sub cmpl jg bound add mov lea sti and fimull lcall lahf pop rcll push loop loopne or and cli sahf or movsl add and and pop or pop mov push sysret bound popa popa jo pusha stos adc dec shrl sbb gs push jecxz leave adcb movsb test xchg outsl dec dec jb xlat sbb xor ret imul lods cmp arpl add add loope sub dec incl imul push in and and sub pop dec cmp lcall or arpl (bad) icebp adcb lds int3 cmp sub pop dec and es nop inc mov imul dec or push ss xchg fsts add adc jecxz je out lds xchg add movsl mov orl lret test add fdivrs inc inc mov ja imul xor sti inc rcrl push xor lahf aam cmp jmp lods pop push icebp xor pop push add mov js sub adc repnz inc sub mov rcrb test sbb gs in mov push addr16 inc mov pop add push js test adc fstpl dec js cmp inc inc adc push and dec adcl xor rol outsb mov adc cmp inc imul inc jp add cld repz mov adc icebp xchg dec dec push mov add mov (bad) mov or sbb inc sahf aas mov adc add popa add inc and popf push (bad) adc and or jmp sbb jns mov in jb and sbb add insb pop sarl mov adc daa mov inc push pop arpl shlb dec outsl fcompl sbb xchg pop pop and jecxz mov imul (bad) and dec lock mov xchg push (bad) or xor enter push pop xor jge les imul mov push adc rorl pop push andb imul add push mov rorl mov inc add mov jae push lods jno scas dec popa jbe adc cmp ret fdivl xor (bad) mov into add ficom cmc fcoml aaa test repz sbb dec add lods adc ficom mov (bad) aaa (bad) pop sbb in mov sub sbb or sbb ret adcl xorl das call add out sti mov sti or sub icebp adc iret xor mov add das popl pop or out pusha push mov push popa imul rcrb in test subl cmp xor (bad) xor mov fisttpll sub sub jno test adc addb and xchg loope xor adc or xchg pusha sub or inc jp mov andl (bad) push and inc xchg cmpsb jecxz mov or jne sbb push mov dec sbb fnstenv cmp dec leave bound icebp and ds popa test dec jo repnz or pop rorb (bad) pop mov jbe or movb push or outsb fsubs adc inc or sahf pop (bad) mov inc aaa imul mov xchg push pop (bad) add jnp add adc aad stos insl cmp jno scas cmpsb jecxz push sub add pop lods rolb push xor jp out jno dec pop (bad) (bad) mov sbb in mov or (bad) repnz mov and or inc mov sbb into add and adc xchg lods or outsb iret mov cmpsb in mov rcrl mov mov (bad) les hlt xor addl jecxz adc nop mov adc mov fisttp sub mov jne xor mov stc add loope jbe pop test movsl (bad) enter inc mov je sbb xor xor or cmp add xchg xchg mov test addr16 cmp adcl xor bound out sbb test rclb sbb and fs lcall add ja fnstenv bound lahf xor xchg pop lods pusha outsl dec pop int3 dec adc add out pop adc mov add lret shlb sbb push pop sbb lods mov sub scas icebp sub sbb test push mov sbb repnz mov (bad) (bad) xor and popa add pop (bad) ss xchg repnz inc push or or adc pop mov (bad) xor mov mov mov or add or sbb sbb sarb pop mov mov call mov inc jne add cmp or push add xlat inc push adc push sbb popf adc les and mov push and add insb xor push subl stos mov les das call and add xor xlat js (bad) or pmulhuw sub (bad) xchg mov jo movsb lods cmc aaa adc pop loop push sbb xchg xchg push imul sub data16 sbb lcall shlb mov pop loope mov adc test in (bad) xchg cmp jecxz fchs nop lea mov sti and inc ret arpl pop mov sub clc xchg and lcall jle cmp adcb jno xor cltd test xor mov adc push push sub loope cmpsb lods arpl pusha enter xchg jecxz mov mov pop add push in and push out bound icebp daa inc rcrl fadd pop xor (bad) xor xchg cmp and fstps push or lods cmp adc mov or xor or push adc lods add dec sub cmpsl sub xchg adc cmp outsb add cwtl ret add mov ret repnz fdivs jmp enter xor adc adc or push inc dec outsb notb movhps or xchg and or adc rolb xchg and sub xchg sub xchg xchg pop xchg std lock insb (bad) test pop (bad) push test xor (bad) and scas mov xchg adc int3 or mov or push stos fnsave add add inc (bad) lock pop les flds into fwait incb mov pop aam pushf pop test mov nop dec add sarl adc pusha xor mov mov push push pop pop daa sbb fmuls pop mov and or (bad) sti inc (bad) lock or fnstcw sub dec cmc mov add fdivl lods sub mov or lods test roll sarb insl arpl push pop inc cltd and data16 push popa inc xchg fisttpll push jne pop int3 and aas ret adc dec imul insb xor (bad) mov sbb sbb pop lea loope and xchg ror dec jl lea adc or mov pop dec ret rclb push add xchg sub add orl adc outsl push nop sbb sub dec ljmp push pushf (bad) jmp push lret sbb jbe sarl outsb call mov and add sub push daa movsb mov add xor push pop stos mov xor inc adc lahf sbb in daa mov adc sbb (bad) xor dec cmpsb xor adc daa xchg ret mov adcb push fildl cli jecxz lea jge xchg or add dec repnz pop mov imul jmp mov fildl (bad) daa test or je in or enter adc sub repnz es mov jle mov or stc test sub inc call sub adc push push mov adc arpl xchg add movsl push jns add aam xor or mov test add inc mov add loopne add mov and cwtl in cmovae push add push mov addr16 (bad) pushf dec sbb jae popf xchg mov aas (bad) sbb (bad) push lods sbb add jno add mov movl cmpsb xchg (bad) xchg mov dec outsl pushf push sub aam mov lahf out push sarl xor fistp xor push pop loope lds cmp rclb cmpsb push and add addr16 add mov push sub shrb stos push sbb dec or cmpsb dec add sub enter mov dec div les mov or sbb popf pop xor in push pusha xchg rorl add mov push xor bound inc or inc cmp cmp cmp (bad) je push xor mov inc add cmp cmp push adc hlt add call addl or xchg lret mov test dec cmp cmp (bad) les jne call sub in sub punpckldq ret xchg js test adc and xchg inc mov mov pusha pop testb mov add lods lea push jae add inc movl dec mov ret jne xchg push mov inc push add jbe rclb das pusha popa jo or cld xchg and int3 dec fwait or dec pop adc lea add popa inc pushf fldcw add mov and add std addb fs mov add cmp dec rcrb loopne (bad) push add testb js mov mov inc rcll dec (bad) mov sub fs pop jmp sub loopne inc sub mov repnz push adc pop pushf popa inc sub das insb rclb inc popa outsb popf inc mov shrb cmp mov mov mov (bad) push fs jmp cmp test xor mov insb test or nop pop xor repz xor adc and lret cmp push pop pop push cmp and call daa push popa lahf cmp lret lret test xchg mov push push ss icebp insl add pop mov sub adc mov jmp jg lcall sbb repz add cmp xchg test sbb adc jmp or or push xor dec jg adcb dec or and (bad) cmp sub and fdivrs xchg jns push inc xchg and arpl push mov loope ret or xor and cltd pop loopne int sbb inc and add push lcall shll sub add add xor rclb rolb and iret sub dec mov jp test je sub dec mov imul movsl (bad) xchg cmpsb pop aaa dec shr mov mov js nop test inc xorb mov fdivrs add jmp enter mov fistl mov mov cmp sub popf mov out inc xor add add aaa jecxz ljmp adc movsb test rolb mov ds jns sbb dec arpl cmpsb mov add push (bad) add test adc sahf aad jecxz pop jmp add aaa and cli pop adc fadd lret mov inc or mov sub insb shll push mov push rorb (bad) rcrb lcall test insl mov jnp mov mov xor push inc or jge out sbb imul jmp or or sbb imul add icebp or aas pusha mov add sub jmp mov inc mov mov lods movsb data16 pop dec or in cltd and or or push mov mov mov lret mov out or mov loopne imul sub test rolb dec (bad) pop xor mov jae mov xor fimul sub xor mov adc mov out js adc jecxz nop push rclb dec in les push or popf inc addb test nop sub imul or jo xor inc outsl pushf pusha and push pop rorb sub cmp jecxz rolb aaa pop mov sub daa int3 cmpsb mov add mov cli aad pop inc pop pop dec shll (bad) mov or daa pop or sub mov xor js or popf mov ficompl push rcrb inc sub dec push add hlt add fmuls mov fnstenv and clc xor loop unpcklps xchg jb jecxz add or fist cmp adc add dec js scas fld pop pop jg xor mov pushf or push mov mov outsb cmp jmp daa xorb xorb loop sbb das sub jmp sti add sbb sub cmp fmull lret adc dec xor push and insl mov sbb fs push sub mov sbb and pop test inc xor pop lcall dec divb test gs jno clc mov xchg sbb sbb push adc and xchg and or adc sub sarl pusha fild mov xchg mov xor test ss mov pop imul mov ds loopne dec adc cwtl scas sahf lret pop add or gs xor dec test test lock mov xor mov sarb ffreep xchg cli xor mov pop mov push adc xor loope js lods scas punpckhdq mov icebp or nop cmp mov jo pop push out pop or mov jno push and imul cmp jge add aaa adc push insl loope mov sub add lds ds push add fwait cmp pop xchg movsl fistp sbb jo inc mov dec inc loope add ret mov or (bad) mov and mov fiaddl enter test movsl lds sub test sbb or jne add or push ret push repz enter add icebp add or cmp sub flds push lret mov xor lahf sbb push and inc mov sub shll cmp loope and add or push and xor and sbb cmpsl test and test imul push bound or (bad) xchg sbb dec push dec ret mov cmp add sahf cs xchg xor shlb and inc cmp test test (bad) xlat arpl xchg pop jge push push mov sbbl repnz popa or inc sahf inc add inc sbbl push cwtl push imul dec mov orl sbb in dec xchg mov sbb xchg jle rol xchg xor nop jae mov dec (bad) mov jb ret nop stos add or mov mov inc fbstp and inc or call jle xor sub or subb add pop xor and mov or (bad) inc sarb cmp loopne ss lcall mov test or xchg add adc cmp jl mov mov iret or xor pushf enter mov dec inc rorb xor outsl les or js adc mov push stos jno les lock rolb aad sbb pop jbe fadd push je mov lea out sub sub xchg mov jp cmp push ja lock or lock ja or mov xchg xor imul sbb cmpsb jecxz inc test push dec cmp sbb push lret lcall inc mov inc mov movsl dec sbb adc inc cmpsb jo lea lock inc pop pop jge ret shlb dec cmpsl sbb xor push add add mov push scas add ss xor popa mov cmp dec fbstp adc mov or insb add push sub sub mov (bad) test sub mov xlat shlb push rcrb pop jmp xor push jge or jle fcmovb pop call push dec js inc xlat or xchg nop fsubs inc lods sti cmpsl test xchg orb imul das lret loope adc sub rclb and mov sub mov push xlat cmp sbb mov sarl dec data16 or daa lea pop loope dec mov push ret push enter xor mov dec add ja mov xor (bad) aaa scas add push push xor jns fldt ret xor addl and (bad) pop pop jo inc imul cs push adc sbb unpcklps data16 pusha and movsb xor (bad) imul or add cmp lcall popa test aad sub inc xlat inc or push xchg mov pop mov sbb mov jbe cwtl shl mov cmc inc inc push mov mov sbb mov rolb add sub ret pop dec jmp pop adc or ss daa in inc push xchg ret outsb mov xor imul push mov rcrb sub cltd rcrb mov add movsb leave bound pop (bad) fcomip xor sbb adc xor stos int3 or xchg sub adc rcrl fs cmp inc lods adc and pop sbb pop (bad) sub aaa shrl clc cmp lods (bad) out sbb je fildl sbb inc xor nop es inc daa lock sti add je clc dec adc sbb and fs jne and jp shr add fs loopne movsb mov add daa cs ret lds xchg int3 xor xor adc dec and xchg sub test inc pop lret xchg push das (bad) dec dec mov adc addr16 sahf rorl add fadds scas xor cmpl mov inc adc sbb or fs gs mov push jbe jle inc daa add test and mov je sub movb fcoms cmpsb sbb add push out mov add mov push cld cltd and jbe cmp xor xor je (bad) xor movsb add lods xor test add test or or test fbstp testb les mov xchg push fwait js cltd push inc sbb test loop and push mov sbb shlb sbb jg xor or or mov mov and ret les inc mov pop fwait insb loop dec mov fsubrl addb lock incb sbb or xor or cmc jo fsts and orb add xchg popf mov addr16 dec cmp sbb add push push mov fsts (bad) xor xor adc add mov addr16 insb fadds subl and inc push add mov adc jecxz push xor push inc sbb jge dec adc pop add push pop inc pop fldenv jo popa jno icebp or mov sub enter mov sbb pcmpgtw sbb or (bad) adc or jl daa push dec inc or sbb mov shrb jecxz adc and add pop enter cli mov aaa cs or dec or push mov nop ficompl pop dec sub or pop mov lods jae xor pop adc adc cmc xor sbb jmp ret xor mov fwait loopne add nop cmp sub xchg push mov mov adc dec xchg xchg and sbb mov movsb popa push sub push test push sar mov push push xchg sbb inc mov pop fisubl inc push (bad) pusha cmpsl xor mov xchg or mov sub (bad) lret ret xor push push or adc sub addl jae ljmp and xor add les or mov pop test mov sbb inc mov mov cmp lret adc test push pusha popa ret lods jnp int3 push or inc sbb or lods and add or aaa test js xor push es push sbb movsl xor sar pop test mov add pop dec sub roll pop sbb ficoml mov push jae ljmp test rol sub pop sbb push xchg inc es xorl jp,pn sub insl xor xor out loop cmp dec nop sahf call xor jae inc inc xchg pushl xor mov cmpsb les cmp xor fldcw jbe mov test adc sbb push rorb push or dec jg into adc imul sbb mov shr (bad) ret in (bad) adc es sbb or inc lea movb xchg in jge les jo pop (bad) (bad) jmp fwait lods mov or loopne push stc jp xor leave (bad) or ret pop xor jb add jnp adcl mov adc mov add add pop addr16 or js mov cwtl gs popf xlat das fdivrp jbe stos xor xor mov inc adc loop orl inc add cmp loop daa aam or push ss nop and xchg (bad) mov insb mov pop inc jno add xor nop cmp mov adc add rorl ret (bad) xor fsubl jne movsl rcll dec (bad) (bad) dec inc pop test xor sbb mov push lcall mov adc pop lcall sub pop push (bad) dec sbb and adc adcl adc mov xchg lods pop or push adc or ds adc cmp cmp sbb dec add sbb rcrl movsl or test push xor pop subb mov or add lock cmp call fs inc mov cmp xor mov xchg sahf repnz mov sub pop pusha test sub gs lods xchg push cmc pushf cwtl jo adc xchg mov loop jle cmp add and rolb inc xor jecxz les iret mov test sub or inc dec daa or push and dec mov test dec pop inc xchg xor or mov arpl add add push leave push xorl sbb dec (bad) and js rorb pusha adcl (bad) push fst sub jecxz xor jecxz dec test lods scas inc fcoms dec xor lods add aad add cmp cmp add xor pop xadd cmp fcmovnb mov scas and lods pop xchg xlat mov push and xor das fwait pop add mov cltd jo sahf imul lret mov add add arpl xchg jb xchg dec (bad) ljmp xor inc ror xor push rorb adc pop lcall add orb cmp js dec dec jnp mov dec add mov movsb push jne mov sbb push mov jbe popa sub movsl or incl add mov sub pusha int add insb sbbl xor and xor xchg push mov sbb sarb lea in inc inc push sbb outsl or (bad) add jno add sbb push add mov or sbb xchg lcall push pusha add adcl sarb (bad) jo or (bad) xor cmp js adc lea fs cmpsl add jecxz sahf or dec movsl in pop popa adc in (bad) ss or jp mov mov pop std jnp test rcr movlps mov adcb and lock popa ss xor inc mov lods cmpl jb pusha repz movsl mov aad push inc mov xor xor bound mov pop popa and pop sub add add inc das add jp test xor repz je addb mov add movsb pop cmp sub inc add (bad) or adc jmp ljmp out nop adc cmp jmp fucomi adc stos lret xchg and lods neg jo xchg inc adc jo fsts dec arpl in and pop add sarb xchg test adc cmp jl rolb fdivr cmp rolb mov repz arpl add sbb xor addr16 push std mov jo imul fistl xorl icebp or test xchg int3 and arpl dec pop xchg pusha or inc pop loop adc dec add cmpb std mov out movsl adc inc cmpsb rolb mov xchg lea and inc js cltd rcrb sarl cmpsb enter or and sbb (bad) test popa les shrb cmp lea pusha add jbe sbb xor sub push sub inc dec push or push mov push cmp test add cmp mov xor icebp and outsb lret dec xor lret add adc cmp xchg bound inc push call push add xor inc cmp push xchg test mov fidiv test adc xchg or sbb mov add add int mov or sub add dec scas mov cmp xchg (bad) aaa ja dec or push lret test pusha and lds stos xchg in ret adc or cs xor xchg dec addr16 mov add dec add loopne add push pop int3 xchg sbb or push ror sub jge xor arpl sahf add sbb sbb adc fisub adc jno shlb inc adc or in mov or mov jp add js loopne sbbb xchg popa cmp in sahf and lods (bad) or xchg xchg xchg sbb dec mov or rcrl mov nop or adc push imul xor lods mov mov dec jle add pop jg jno ret pusha cmc and pop mov cmp lret and add pusha add dec pop dec or clc loope mov xchg ljmp int adc mov mov jno lock or pop adc xor dec and cs leave inc adc and aaa loope dec sbb mov sub aas add pop dec sti xchg test jge sbb ljmp sub pop inc mov aaa mov adc mov push xchg or xor or js xor dec push ret jne adc addr16 pop sub cs fs loopne and popf movsl dec sub or mov rorb test aaa stos inc inc pop adc test cmp xchg jo mov enter or adc jb (bad) stos add xor push or (bad) add mov sub int3 lea xor mov (bad) jo lds dec ret insl cwtl xor pop in adc inc fwait jmp push cmp int3 xchg test pop add xor sub dec inc pop jns lcall add pop sub sub or aaa popa pop inc mov pop (bad) or and call imul sub lods shrb and pusha icebp adc inc or mov xlat xchg rcrl arpl jle adc test movsl nop repnz cli (bad) jo ss xor divl dec fldl mov inc or sbb jne stos push movb sbb jo dec inc jnp cmp mov mov xor jecxz push cmp out push or jbe dec add and lds stos xor push xchg jp popa cmp shrd cmp mov out popf inc test and pushf cmp sbb fstps ja arpl je (bad) push xchg sbb xor add xor sbb sub xchg add test inc gs push ja add xorb xchg pusha gs push (bad) inc add push hlt stos xchg inc push push arpl xor pop xor dec fisttp mov gs fstps popa push xchg sbb imul jns inc mov (bad) aam mov xor xor (bad) or ret jae sbb (bad) shlb (bad) jns or dec mov scas and push inc lea sub adc xchg xlat cmp imul xor popa fs bound add or lea pushf push mov or push add dec sbb ret daa cmp sbb dec js add lea lea mov mov push pop mov mov cmp mov pop daa insb mov scas arpl loop ret popf xor pop ljmp and leave add test bswap xchg xor adc roll mov lods fdivrs sarb or lods or inc rclb (bad) or inc add addb and ret lret mov mov mov in mov inc pop rcrl cli push iret ss adcb push mov sub xor xor arpl cmp and cmp xorl out sbb cmp jne mov xchg ror jno push pop xor add sub cmp in in add aas enter jo lret adc out daa pop mov dec lods push adc push mov mov push daa inc sbb into (bad) cltd pop inc inc mov sahf push or sahf imul or xor roll movzbl xchg divl dec sbb imul mov sbb (bad) xor add sbb sbb sub xchg popa test insb mov xchg jbe fidivl outsb loop lret (bad) pop bound rol dec adc fdivs add jp cmp repz imul pop ret fidivr loopne sbb mov push pusha sahf sub xor or std test rorl mov cmpb cmc fldl cmp aaa pop adc inc and sbb mov call call add or or and dec test dec sti or cli flds add mov add xor push push lods mov or popf fs cmp into rcrb add test mov sbb pop adc movb jnp lods push mov fcompl arpl sbb sbb pop lcall push subl pop mov or add out es test jo inc xchg push sub ljmp sub push js imul and leave popa aad test aam mulb and pop inc push add push sub popa xchg js dec dec xchg pop mov dec loopne mov lock pop loopne push test pop cmp stc or test cmpsb (bad) sub inc cmp call sub pushf mov sbb sahf es (bad) mov movsl test xchg inc adc sbbb or addb mov and loope inc ljmp inc shld or movsb xchg daa pusha sbb testb cmpsb dec or sarl pop jae xor shlb push push push push push xchg (bad) mov in pop sbb jo add push xor add add mov ret mov sbb es cmp xchg and sub popa mov insb test sub cmp lcall mov ja (bad) (bad) rorb or lock test cmp jl push inc stos insl jno arpl bound xchg pop xchg mov cmpsb nop popa push popa movsb push js inc mov xchg (bad) stc add pusha adc add inc cmp inc lret jg adc sbb paddq ss repnz jno mov jo lret sti and test mov inc xlat popa int imul xchg shrb pop push add push iret pop cmp add paddusb mov (bad) arpl mov (bad) in in test jns scas xor data16 add cmp pusha jno pop push lock enter mov xor pop dec and outsb cmpsl cwtl fwait adc jb jmp inc loopne sub je inc pusha leave sbb xchg shrb fild add (bad) or inc hlt pop sub xor push das sub js xchg cwtl add mov cmp (bad) sub rcrb pop adc test icebp cld xchg imul sub mov lahf mov or bound movsb jno cmp pusha and xor pop xchg cmp mov xor dec xchg insl or adc cmp and popa push jmp mov push js movsb inc pop and (bad) inc sbb mov pushf pusha or xchg sahf dec lods add jmp sbb add data16 sbb pop cwtl mov pop test fs add sbb xchg invd arpl add push test push mov dec std pop mov sbb xor and sbbb xchg je and jmp inc mov andb sbb fisubrl jo andb adc test xchg (bad) ss mov loopne inc jno rorb leave lret popa pop rcrb add and in or or dec sti xor sbb imul adc jbe mov bound jecxz (bad) dec add xchg repz mov push pusha or push or dec js or push add in push out or and push jp adc bound pop enter pop dec add sbb dec adc rcll out std mov add and pop xor cwtl inc mov jecxz adc sub (bad) lret (bad) aad cvtdq2ps sub mov sar push pop sub xor aad push xchg mov push push add jmp dec jecxz pusha xor dec adc es mov cwtl add ds pushf or jbe pop cmpb pushf jp iret movsl xor lock lea gs cmp xor add sub mov cmp sbb loop jnp and or and test and (bad) mov popa sbb adc jo or bound in xchg mov inc or (bad) pop rcrl mov inc jnp inc sbb das int3 andb adc mov fs movsb dec mov dec iret mov je inc mov adc xor cmp sbb xor sub loopne enter add inc ljmp mov shrb and inc test pop sub cli arpl adc addl pop xor aam pushf add into add out adc popa test push or inc sub or or add popa fldt cmp mov and push inc movsl dec mov repz mov pop sub mov sahf sub xor (bad) mov fcomps (bad) dec mov mov inc add inc aaa xchg ret shll xlat xor (bad) aaa jbe push xor push push lea ret sub inc inc push (bad) inc test mov and xchg xchg xchg out test pushf mov add add jo jno or sbb outsb pop sbb in mov daa dec dec aaa jbe xchg xor jl fwait rcrb push cmp loopne xor jno imul mov mov add pop js xchg or pop pop push adc int3 push adc (bad) push and adc sbb sbb or xor aam cmp inc mov (bad) sarl mov ss inc xchg mov sbb inc or sbb and adc and and movlhps xor pushf insb and jnp sbb and jbe test add pop pop inc pop test mov sahf sub xchg test pop fsubrs nop or mov pop cmp outsb jae in loope repnz dec adc aad leave dec xor and dec jno js mov push mov push push lods sub cmp mov ret ret cmp or ret cmp xor nop dec lcall xor xchg in push pop scas out roll cmp or popa lods sahf dec cmp das fcomp push or scas xor push push fadds jae adc xor or arpl cwtl std dec pop mov and rol sbb inc or pop or mov arpl das call (bad) mov add push aaa add call and dec dec mov (bad) hlt aam mov inc lods add lahf and mov aas pop mov out dec mov xor gs sub inc loope xchg add mov xor add dec bound shrb and sbb int3 sbb roll push push pop outsl push pop inc das mov sbb mov add xchg addr16 sbb pusha or cmp mov pop sub je leave ret jno push cmp sub xchg outsl push mov lods cmp add loopne adc lahf ret inc lods xchg pop and or jne pop push cld pop inc or inc jge and push es mov cmp adc ficoml or test add sar inc sub mov adc repnz push popa aaa cmp rcll sub loope lods test add push adc pop cmp js xor cmp cmp adc and insb pushf add cmp adc int loopne cmp sbb orl roll mov add sub (bad) xor js xor xor test test dec enter (bad) mov mov sbb popl lock imul cld ds (bad) mov xorl dec std dec pop nop push add adc mov out lea inc push add sar xor gs movsb add je inc arpl and dec loopne sbb pop xor dec add ret jbe rolb sub outsl pop push ret fimull xor push imul adc adc hlt mov sbb sub or sub in movsl and and cmp xchg loop xchg mov nop sbb sbb popa sub lods add js fdivl sbb mov mov push or add sub aad shll jbe push inc adc mov add jno jbe adc sub jo lcall mov sub (bad) cmp ja or fldt cmp cmpsb add or mov cmp cli orl inc sti fmul xchg jo adc leave arpl pop adc rclb addr16 jecxz das ja clc add inc dec pop jb int3 lcall les out mov xchg jns mov xchg jge xchg mov push mov and rorb inc xor push and popa push dec cmpsb fs push push call gs sbb andb pop dec popa adc out lock push pop cmp adc bound push pop push xor mov or test ss inc sub or cmp adc or into adc ficompl fild sahf xchg clc xchg adc and lods and inc mov mov les sub test adc push js xor scas gs test adc inc and xchg xor fbld push jne jns loop les (bad) call pop dec lea cmp les xchg pop rdmsr test pop push jnp push xchg xor cwtl sub inc push push icebp jno mov add pop jo test pop mov pop add (bad) xor lret push mov jecxz pop mov ret add aaa jo mov jecxz xchg mov add xor cs pusha ret push (bad) ds mov loope ljmp loop cwtl dec daa pop jecxz sbb aaa push mov and or pop inc call xor arpl sub mov inc lods test jl sbb mov ret and jmp cmpb mov mov inc lock mov popl or fildll mov call movsl or je mov enter xchg shll push shrb cmpsl enter data16 aad test xor xchg test sbb enter (bad) mov add imul add jmp test mov loope pop sub insl xchg xor add repz mov jp sbb addl pusha mov sbb and mov dec lods rorl mov inc aaa insl cmp mov test dec aaa (bad) lods add inc mov lcall dec mov lods jno scas in imul sti push mov sbb mov cltd in test sbb mov ss pushf inc lret push lods and xchg or adc adc cmpb cmp sub push rclb mull inc xor rcr xchg sbb into nop mov js mov imul cltd mov pop and add dec jns push jle mov popf mov or outsl ret add popa adc mov lret inc pushf push pop pop push mov out addb daa pop sub lea pop jns push and adc mov leave popf out add or leave idivl das mov jae les ss add movsl popa fimull les mov mov pop movsb add fiadd xchg sub xor mov mov xchg fdivl and pop pop sub lret enter push (bad) jb dec inc pop lahf scas aaa mov add sub push cmpsl adc inc push mov jl (bad) adc in dec pop loopne inc add xor inc daa xor xor jae mov mov inc inc add sbb adc inc mov cmpl pop aaa testl inc adc (bad) mov enter adc iret or xchg mov add (bad) loope bound push (bad) sarb and and and push push or stos xchg test movsb push imul sbb je clc addb inc sub mov xor cmp sub add and add dec jns xchg (bad) sbb insb sbb adc add out or xchg or pop js or je inc pop or pop inc rcrb dec (bad) and movl jp (bad) hlt pop mov hlt lods adc dec mov adc or inc movsb jmp inc loop (bad) push or gs xor test and mov mov mov sbb inc subl inc orl and pusha test lds push jp insb cmp les pop add ret add ficompl cli or shll imul inc xor iret mov jo or aad push std and pop pop pusha xor sbb insb sub xchg xor das or or sbb movsl lcall push sbb test xlat cs ret dec xor movl sbb push pop lret cwtl sbb dec pop ss fildll push sti xchg add je adc aaa jno int3 push sbb test inc cmpsl mov adc xor push add (bad) xor inc and jnp jb add out xor mov xor jecxz dec imul stos imul add xor jo mov add push scas fsubl and gs call pusha and xchg mov inc xor fiaddl add push and fucom ds outsl or xchg jns sub add hlt psubusw push add jl scas jo cmp cwtl (bad) int3 sarb in clc cwtl aas arpl test pop xor push push test dec mov test sub test xchg ss fisubl pop mov sub pop daa movsl xor outsb sub dec adc xor mov add mov inc movsl dec call push sti push xchg ljmp ss push adc rcll cmpsb pop xlat aaa femms repnz lret add and ja xchg sub mov pop and pop mov inc ljmp sub jb enter or mov mov cmp movsb xor push shrb inc cmp xchg add out incb fstps outsl cltd mov push and cmp js or out ret or add inc and sbb jge stos or and aad xor mov outsl pop push pop (bad) ja jnp or xchg adc xchg ss outsl and popa imulb das enter sub adc jmp add adc add mov dec std xchg cmp sub mov xchg rorb test in xlat or sub adc or dec xor jns or or iret adc inc add sbb and pop xchg rcl mov and lods or or pusha sub push mov adc xchg or dec pop sbb sub test es mov insl dec add inc push add mov and pushf fs les xor rolb mov cld pop xor mov add inc aad or sbb les add dec inc insl pusha movsb push xor ret ss adc pop sbb or or lret (bad) jno pop adc and subl cltd fsubrs cmp ret rolb sub sbb xchg test leave outsb and jge push inc (bad) sbb mov jl popa mov and jo dec (bad) gs xor jo ficomp mov jmp leave cmp cmc stc ret jo cmp inc imul lods ret jbe,pt (bad) xchg ret sub cmp pop mov pop pusha inc add cmp pop jae mov sbb cmp in movb mov xor add dec imul push or jae mov aam (bad) xor adc rorb pop xor inc xchg xchg movsb pop add xor test inc loopne lea cli push adc sbb inc (bad) xor push sub (bad) in cwtl xor movsb cmp pop inc js fs lods lds (bad) xchg push sahf and fldenv lods add cmc add and and popf xchg xchg mov scas inc sub push push push fs pusha sub adcb ljmp push and xchg cmpsb sub or xchg or adc xchg mov mov dec mov adc dec ss sub fcompp ss or sti push sbb push or es xchg xor test jecxz dec mov pusha bound push push mov xor in cmp xchg (bad) les pop or mov pop out imul fidivrl xor ljmp daa mov sbb xor adc ret push xor sbb shr xorl aad arpl xchg gs dec cltd cmpl outsl pusha xor push push dec cmp (bad) cltd and fidivrl inc daa sub adcl xchg nop xor es sub or jmp es mov mov pop nop js mov sub addl adc adcb cld shlb and rcrb jp nop xor mov arpl sub mov and cmpsl sbb or pop mov dec and sbb js shrb mov cld in sbb mov add xor popa mov pop pop sar xchg pop call cmp mov xchg aam rcrb (bad) repz xchg test sub xor aad je inc xor push les (bad) lods or xor ljmp (bad) popf movsl inc add leave iret sub nop lret rolb popa push add fwait dec subb adc pushf and jne gs es inc jp movsb xor push dec mov in das add cs lods dec sub js jne inc aaa aaa cwtl sub xchg sarb inc addr16 cmpsb mov loopne rolb jo push xchg fisubrl adc push aaa ror dec pusha mov mov shrb imul fistp push xchg xchg sub lcall outsl (bad) movsl (bad) and aaa or or cmp es js inc sbb xor popa lods xchg add cwtl xorl imul pop call mov mov cltd pushf popa push mov fst mov popa or adc push fiaddl mov xchg inc xchg lock add aaa dec les xor dec push daa jmp (bad) mov sbb int sbb xlat sbb gs xchg lea xchg cmp push jno xor dec pushf gs mov mov mov lea daa pop pop xor cmpsb add cmp shlb and sub clc jg push dec or sahf mov xor cmp and fildl mov and add xchg mov addr16 (bad) pop mov xor inc adc push lods mov outsb adc imul fstpt pop mov dec mov add (bad) push roll ret call xorl (bad) push idivl leave lock dec pusha jecxz adc pop cwtl insb inc loopne (bad) aas inc nop mov gs mov aaa movsl xor sub inc (bad) movsl aaa rcrb lds cmp dec js cmp push and mov adc adcb movsb mov xchg add mov pop rorb cmp fbld xor xor jns push xor cwtl mov xor les (bad) (bad) mov pop enter lock cmp sbb loop dec and (bad) sbb jns les pop mov jmp (bad) js mov pusha add popa push sahf adcl mov cmpsl pop pusha and lret loopne mov mov dec mov inc sub cwtl sub cmp stos adc cmp es fadd mov outsl mov and pop dec loope dec xchg xor pop mov and lea xchg fstpt mov test ret jo mov inc push daa mov inc inc pop pop enter sub or fistl insb mov mov (bad) mov jo push mov leave adc sbb pop or adc sbb (bad) xchg or jl add sbb sbb insb inc xor test mov loope pop or insl lods dec out push add add mov cs xor inc pushf stos push imul mov test sbb xlat into (bad) mov sbb ds add lea inc cmpsl xor inc inc add cmp popa mov fstpl sbb idivl add add jo scas sub jae sbb iret mov aam loopne mov inc (bad) fstps ret sarb push sbbl adc shrl sbb adc xchg pop fidivl sbb jae jns mov jbe mov clc xor or scas test rclb pop lods sub adc and inc setl mov dec hlt cmp nop cmp adc lret push cmp (bad) popa pop mov inc pop sub pop inc sti jno push adc sbb inc dec adc popa inc pop inc imull fsubrl xchg in pop or pusha or inc add popa fs pusha cmpsb (bad) lret stos and push sub xor cs add dec sbb mov sub addl sbb xor rorb add sarl push add movl lret jo pop and insl xor out rclb jb push test push add fbld sbb dec inc dec pop or inc mov add or orb pop dec pop pop arpl in call rolb xchg xchg and cmpsl in fwait rorb sbb and pop leave lods pop mov ret cmp rol mov sub pusha icebp mov movsl pusha pop sbbb sbb repnz add movsb xorl mov inc xor push sbb xor add adc sbb (bad) nop mov or (bad) stos jno add dec (bad) int3 push shrl dec out stos fadd sbbb pushf mov mov lods xchg out test pop push jb ret push xor adc inc sub jnp (bad) iret adc cs pop imul jmp or mov out push rol adc xor xchg xor xor imul fs mov dec cmpsl add and sub adc push add push imul adc movsb adc or pusha stos shlb fs sub addr16 test subb notl jae cwtl mov push loope ret xlat je gs inc icebp sub inc jecxz sbb sahf adc (bad) into xorl sbb jcxz bound (bad) fcmovnu pop xchg shlb adc pop addl add les mov (bad) roll jp pop pop cmc gs aaa jne fxch mov push lret leave push adc icebp sbb sbb popa xchg adc ds inc add je or mov fisttp adcb pusha arpl pop adc inc cltd adc sbb inc add jmp xchg outsl arpl ljmp bound jb inc mov insl sbb pop or xchg sub push add push pusha int mov or and push arpl lds movsl inc dec adc or je push sub mov cmove out mov fwait pop adc cmp or aas dec push xchg push jnp mov stos fs test pop adc cmp js xor gs xchg mov (bad) sbb inc push xchg repnz mov mov and pop adc mov ss dec mov xor ja es bound pop adc xor fbstp adc out fnstenv gs js dec xor lods xor dec add jno xorl or jp dec ret test pop mov lods shlb shl add sbb or jo adc and test imul sub and rcl adc mov nop cmp dec lret push sbb inc add mov nop or sbb fstl roll gs fs orb rclb sti cmp sbb mov or or rolb sub and ljmp adc mov mov enter inc add xor pop aam dec jmp cmpsb xor xor cwtl rcll xorl aaa inc test lret push inc mov fs jno nop loope cwtl (bad) fs bound test fstps sub rcll test daa pushf or jg cmp xchg inc (bad) xlat add adc adc iret es repnz aad push xchg jbe fbstp aam lea iret mov sub and pushf int3 inc nop mov loop and inc adc add mov and mov sub fmull shr xor test nop stc mov and xor xor mov mov imul mov dec lea cwtl add cwtl pop inc mov jg xor pusha gs push add push or xchg mov xor out cltd jp lret mov (bad) pop mov inc imul in (bad) movsl jno and and xor nop or jo popa jno xlat int movsl xor test sub jecxz out xlat xchg xor jecxz xchg lea pop addr16 es mov or cmp add movsb mov push push enter inc or mov insl cmc lods orb adc mov xchg imul (bad) fadds push sub sti push add add add xor cmp test outsl imul jno mov add outsl roll imul and sbb xchg rcrb xor and pusha xchg jne mov or add sub push cwtl nop pop (bad) mov adc and pop repnz aaa sub sub fdivl jbe xchg mov or bound addr16 mov scas arpl sbb adc or daa sbb inc sbb sbb sub mov aam (bad) fistpll dec ret stos sbb and pop outsl adc enter lds je ret sub addl push mov iret repz pop stos jle das or divl daa or cmp movsb scas bound into mov in outsb data16 inc pop sub scas shlb test inc mov sbb jg (bad) mov lods jge ret inc mov or pop jmp sbb dec add (bad) hlt push mov or (bad) mov dec js outsb je sbb mov jl xor mov xchg outsb mov call (bad) or cmp rclb repnz pusha popa sub leave in dec or xor jb push ja xor push push mov dec popf enter (bad) jmp xor xor sbb mov pop pusha mov pop aam test dec sbb add subl pop and push insl sbb repnz test and jns repz xchg push outsb and (bad) ss add mov pop mov les xor scas add ror rcrb js mov lcall ret xor cld dec (bad) adc pop xor jno mov cld popa mov test (bad) aas gs subl sarl xor pusha adc sbb add dec inc lods inc ss movl inc mov pop mov dec xor loop nop orl or outsb add enter loope stc test sub dec mov int cmp dec mov add xor mov clc inc loopne xor xchg movsb aam sbb in sbb imul popa call dec (bad) adc mov xchg movsl imul fadds nop adcl mov mov jo scas adc or add out dec push movsl sub jno adc cmpsl je jo fldl adc inc xor inc rclb int or mov pop cli xchg xchg inc dec rclb cmc jno adc popa mov pop and cmc dec ret bound movsl xor int add pop aaa push nop mov outsb mov (bad) iret out xor push cs xchg jno mov mov inc or sub inc jns push add cmp mov and adc xor dec mov mov push inc dec test xchg inc sub push xorl cmp lods xchg inc nop inc mov inc fimull pusha bound xchg js stc outsl cmp lock sub pop inc addr16 sbb arpl mov adc lahf xchg sbb xchg xor and xchg or mov stos jmp test jno stos sbb or ret xor xor shrb jbe xor (bad) cmc add sbb loopne dec xor mov push mov xchg loope adc pop es add daa arpl inc pop xchg xchg mov add cltd xchg mov loopne pop pop ss (bad) push call int3 jmp rorl jo xchg (bad) movsb inc dec cmp push inc sub cmc adc push pop dec cmp mov ret adc sbb or push sbb or (bad) popf imul xorb flds daa cmc jle push push jecxz loop ss add (bad) sti push xor cmp pop lret ja xchg orl movsb xor mov cmp shlb lock pop cmpb push add adc and pop lcall xor mov push (bad) or pop jne push imul test add xor sbb test mov jecxz je jb repz cmovs mov pop mov xor sarb push cli ss push and aaa push push pop adc (bad) leave scas or dec adc imul or ret push mov inc dec (bad) mov jns rcrl std push and push inc xor test add arpl push stos mov adc sub xchg lds movsl (bad) and mov add sbb xchg inc adcl pop xor ret jae rcrb test cmp aaa or sub dec cltd (bad) mov add xor jecxz inc and in pop xor mov loop out cmp ss lds pop xor add mov loopne je bound sub lret cmpsl xor xor sub pop clc adc add es int3 and repz add push stos mov (bad) loopne test aam jb pop push mov cmp xor and pop movsl push pop mov fcom pop mov xor loope test cwtl cs jo outsb popf or mov push pop inc sub sarb xor and mov lods xor adc mov and cwtl aad mov fs (bad) jno sbb and pop mov ss adc adc adc push xchg adcl fiaddl push sub push int push inc fsubrs mov popa insb shrl sub or popa mov push sub ljmp push aaa and sub test pop and sbb and push (bad) sbb jmp xor push fldcw enter cwtl shll sarb mov out loop xchg sbb imul out push mov mov cmpsl mov mov xchg lea push or (bad) or jne loope and xor xchg rolb inc sbb fwait dec repz (bad) mov fistpll pushf inc popa loopne sbb xor add ret stos dec clc xchg push and push pop cmp add mov mov pusha imul movsb add inc jns inc test xor xor cmp fisubr mov inc xor movsl sti xor or push or lret int3 out sahf push pop test sub daa cwtl cmp jp add jmp dec mov xor test pop shr insb bound mov pop jo fisub test (bad) dec pop (bad) aaa mov shlb bswap ss dec push add cmp andb bound mov loopne inc pop adc adc loopne dec lea xchg xor inc fistpll jo insl imul adc push sti sbb inc dec aas and adc arpl jo divl sbb (bad) orl stos scas cmpsb gs sub xchg push or jo ja jecxz nop daa lods ret mov aad push xchg (bad) cmp pushl pushf add mov mov pop pop lds lret movsl bound mov rorl or inc inc xchg popa add and mov mov adc (bad) mov fld pop and dec and push (bad) stc xor mov inc cmpl or sbb mov pushf and or shrb lahf add into adc cli into sbb test bound addb (bad) clc (bad) mov add sub fbstp test pop daa scas inc lods fs mov leave push add sub gs xchg sbb push sbb js cltd xchg push sub shrb and sar hlt pop sub js xchg add mov rolb ret push (bad) xor cmp fldenv lods cmp cmp push or xor inc and mov rclb jo pop add xor jne fdivr or sub dec subl pop mov or sub inc or add aad jmp and icebp and lret inc rorb adc lods add pop mov add mov or sbb mov ret mov sub jno inc (bad) xor xchg sbb mov xor gs test mov lock sub jns rcrl shlb inc rcrb lods pop loop test data16 fldl arpl jp dec adc jbe pop lcall or xchg mov xchg lahf into push andb inc push cmp movsb loope xchg fwait cmpb inc sub pusha adc xor (bad) mov xor mov jne add je ret outsl aam mov mov jne xor in or add cmp popa lret mov inc enter xor dec mov ret rcl mov xor lret or lcall outsl rorl xorl scas push xchg sub ss push (bad) push xor inc sbb rorb xor insl out dec sub shl jno or pop pop inc sbb push enter add xchg rorb stos in pushf xor or push test inc ret mov xor and rclb str out movsl jb sub jae push or or ret xchg dec xchg push and jecxz imul mov add or mov mov jbe sbb icebp inc add sarb sub bswap std lds loope add push push (bad) leave test pop xchg popa inc dec mov push lret jnp std inc jmp movsl and mov imul jno cmc push icebp sub out or mov test cmc imul or insb lret mov shlb sbb (bad) sti push lcall adc sbb scas inc push enter mov loope mov dec (bad) sbb popf and in lea (bad) cmp xchg loope fcoms fcmovb test mov mov leave mov xchg fisttpl add and in mov test jg sbb pop push loopne push or xchg daa add (bad) aam mov inc inc jno sub (bad) cmc and sahf add adc vmwrite or sarl icebp shlb sahf xor push pop add aaa or rcrb mov mov xchg cmp sbbb push jecxz inc xchg sahf jo jo add sbb cmp or je sbb test sub mov daa push and rorb sbb daa sbb xor add xadd jo call sti add add sbb lds fiaddl cmp imul dec pop or or test add inc push adc stos fidivrl xor (bad) rorb push iret adc xor push cmpsl or test lods pusha fimul mov mov in xor loopne mov mov jno sbb push sbbl push popa ret pop pop add std fadds in inc mov (bad) andl cmpsl and icebp shrl pop pusha lods (bad) mov add xor pop inc mov inc out (bad) xchg cmp pop andb add sahf sbb mov dec add insl loope xchg push dec bound or pop and or mov pop adc int mov sbb inc out mov (bad) lock or pop mov je les adc (bad) xor pop or xchg rclb xchg add xor push pop or pop xor dec and sub push dec popa mov jecxz aad mov mov and push mov sbb lret xchg adc add iret (bad) push and lret mov loope das ljmp insl inc addr16 adc sbb cmpsb or xadd ret mov and lcall cmp mov arpl out and push push ret mov and sahf stc mov pop lods add stos push (bad) push xchg lea or mov incb jns mov sub mov pop adc xchg inc fiadd pusha cmpsl and dec push jecxz fwait cmpb pop mov xor mov dec xchg loopne (bad) mov xor dec sub test cmc or iret pushf pop lret loopne rcrb test cmp js aam movsb dec xor leave (bad) mov sub pop and rcr jo (bad) cmp es add and push test push cmp cmp push es popa (bad) cmovp loope out add movsb lret leave push mov jmp pusha mov aam adc loopne or xchg push add add xor cmp push dec lret adc sub ret push cmp xor daa jns pop imul mov test xor mov sub push (bad) cmc rclb test dec dec mov inc in adc aas xor push push xor or loope cmp mov (bad) nop stos dec loopne adc sbb adc inc and scas push cltd (bad) outsl jl lea inc imul cwtl mov fs lods xor (bad) outsl shrb fwait rcl adc insl out sbb cmp (bad) in dec jno push mov xor loop inc inc daa xchg pop enter ret mov push out cmp dec inc and add (bad) (bad) jae push cmp pop and mov ds push inc adc dec xor sarb add pop push popf sub adcb sbbb popf mov inc lods adc add mov add fstl cmp scas inc push movsb roll sbb sahf xor adcb insl add daa push insb (bad) sub out inc in rorl cmpsl cmpsb pushf sub addr16 add push imul test insl js jne jmp pop or addr16 sahf fimull push adc add pop add ljmp out pop and popa and sub push les icebp test sub bound or mov xchg add mov clc xor xchg xchg dec sbb cld push sub movsl (bad) sbb or jnp and push xor or bswap mov std adcb and pushf add rcl nop cs in in insb rorb xor sbb push divl leave push test and sbb jbe inc push imul loop dec mov outsl sahf pop aam push mov mov mov xor or jmp xchg add inc push cmp scas inc das pusha mov adc movups das dec (bad) call shrb or dec loop sbb jp cmp inc mov add push das repnz pop ss xor into jns inc xchg mov and into ss adc sub or fsubrl mov push jb add push dec mov repz xor jp in pop mov call sub mov pusha stos xchg ja mov or pop jns sbb sbb test data16 mov test add and push call jl adc gs mov pop sub mov push and mov cmp sbb or ds loop or or cmp pop xor mov mov xchg pop inc cmp (bad) jbe xor dec and add (bad) in test cmp mov cmp imul jno fs popa cmp add jo aam sub xchg fildll ja or pushf popa mov mov cwtl or test sub adc mov decl insl xchg xor sub push add xor sub and add dec or mov aaa xor and mov inc insl add push inc test lret cmp cmpsb loopnew mov xor ljmp add sub inc push loop xchg push lods dec xchg rcll dec cmp push jbe fnstenv rorb subl ret pop (bad) gs push les jo mov inc test add mov pop fbstp imul xor cltd xor sub or test or cmpb add mov jns pop add stc sbb sarl adc jp add mov mov sahf rcll in sbb mov mov aaa das add je push xor imull or lea dec aaa lret add add inc test nop xor pop in ret sbb adc jae cmc add cmpsl lods cmp or mov adc push jmp inc cwtl and cli mov andl shlb adc (bad) cltd push sarb mov mov (bad) jmp pop ret lock xchg xchg jne pop sub mov divl pop inc adc addl push and cmp inc lods sbb lea and pop lret mov pop push push imul inc mov data16 mov add lea test inc cmp ret lahf push stos dec sbb sub xchg pop rcll push pop xlat xchg xor jecxz mov ret imul mov jae adc adc lods movsl adc mov mov adc iret (bad) xor shlb sbb rolb sub and sbb push jne (bad) jo imul or xor imul adc test sub xor xor das inc cli xor mov mov mov pusha xor mov and or dec add sbb rorb dec addb mov mov pusha or push add adc lea dec addr16 shlb sub fwait jnp sbb mov call add push add fwait adc inc into nop and leave add or sarl sahf je jno push psubsb xchg pop push push rorb je xchg lock mov into adc and jmp mov sub mov mov cmp sbb jecxz xor xchg push cmp insl lea dec (bad) cmp add adcl jo xchg and push or loopne xchg scas imul and and mov sbb xchg gs stos xchg push adc insl pop xchg movsl or push sub xchg bound xor fnsave sbb mov outsb outsb add inc repz imul gs les push les loope lret mov and inc mov insb call into aam sbb adc sub and sahf mov lods sub pop add and xchg icebp xchg push dec xchg lcall sbb stos dec lcall push push hlt mov ss mov jmp inc inc mov test jge dec daa nop cs sub cmp xchg mov test scas test add lea adc push cmpsl adc push nop xor sbb mov lods rolb inc sbb xchg icebp xchg add test stc popa cmpsl mov outsb ds and cmp add dec adc movsb add add shlb test sub movsb xor add pop push ret xchg js leave shll inc popf push or xchg push mov pusha sub xor dec jg ret or in scas pusha ret out cmp mov mov clc enter iret outsl loop xor or sbb mov mov xor je out sub das bound pop adc or sub pop inc daa pop lods add lods popf adc adc add add push and mov test mov lods jo subl fisubrl or mov adcl push xchg or (bad) xor pop in xor push cmpsl in sub and js mov daa leave shlb push push dec sbb add mov mov dec (bad) push add sub sbb lock mull sub push js jb dec mov lret xorb cmp outsl cmp arpl or lea lock sub add jo ja cmp xchg shrb fldt add mov sub push xor add mov sbb fldl ret pop movl jo (bad) shrb add inc and repz pushf in cmpsb cmpsl loopne test iret mov cltd out mov inc lret pop fiadd dec mov mov rcll imul xor jmp testb enter popa ret inc lock and xor xor xor shlb xor cmpsb inc xor add sbb pop xchg inc aad xor sub lcall inc lods addb adc mov loop fs ds inc cltd insl cwtl gs leave xor (bad) lea mov mov adc bswap xchg or jne les ss lds xchg or roll jnp mov and pmullw int loopne xor sbb and and ffree rcll nop pop adc pop xor cmpsl sub aas je xchg faddl dec arpl jnp mov mov sbb test aam orl sbb aas cs ss (bad) lods jb lods xor sub fdivs mov push pop xchg gs sahf xchg lods or lds mov push xchg mov scas pop test add pushl mov xor inc ret (bad) mov xchg lret lret dec xchg test mov or pop and lea nop adc xor movlps inc push mov mov xchg inc imul mov rolb xor js (bad) cltd mov lock jno imul cmp sbb scas outsl dec insl or cli fild xchg inc dec repz jns xor adc xor rolb pop push xchg adc cmp or cmp push or mov pop sbb pslld push pop movsb jae adc push xor fadd inc or jle loop sbb and mov lcall aad rclb sub lods outsl sub push dec sbb pop rorl inc adc adc std push iret xorb inc test popa stos adc xor scas xor jno xor ret jae inc add adc arpl add pop push sbb mov or adc mov mov mov push mov fnop shlb dec inc cvtdq2ps mov xor lods or movsl jp fidiv add movsl sub (bad) popa fdiv dec xor xor das sbbb inc dec sbb and inc shrb push ret aam mov movsl outsb or jo es push xor inc xorb cmpsl sub aam in jecxz dec adc cmc jae popa pushf cmp (bad) and (bad) inc xor sub jo inc inc stos push inc mov lea dec pop adc lea xor enter rorb xor push aam (bad) lock js test psrlw mov cwtl pop lods sahf (bad) sbb das mov add lret test add sbb mov je arpl mov pop js aas xchg sbb adc mov mov pop mov sbb imull cmc sub xor xchg movsb xor scas push and lea dec xchg dec (bad) push (bad) imul add mov (bad) add (bad) dec push lea xchg jne mov (bad) and aas cli cmpsl shl or dec js icebp rcrb or cmp inc adc das or xor ffreep (bad) mov jecxz pop outsb nop ljmp adc insb sbb adc in and test das push mov xor cltd sbb mov outsl orb xchg and cmp and mov mov add leave pushf dec sub mov add jp inc and es pop mov push or testb xchg dec cmp and fsubrs pop jge sbb add add loope lods sahf js orb arpl mov jp mov add lock fwait jp cltd xor movsl inc aas cmp or mov add add imul mov cmp or sbb sarb push mov adc xor jge movsb mov mov dec sbb mov dec pusha movsb hlt or lea ds mov cmpsl andl rcl add rcrb pop add (bad) ficomp add (bad) cs adc shrl xor jo mov xor sbb popa adc adc adc push jge or aad ljmp and loop sbb push sbb jo (bad) sbb xor sbb or rcl dec and fist dec pop xchg xor and mov add sbb cmp push cmpsb int3 add popa jno pop mov movsl adc adc jb out adc or (bad) cltd lds pusha add rorl aad jnp cmp sub mov mov loopne mov stos and movb mov jmp ljmp bound cmp jne add scas xor push int3 adc cld in and pop xor push push pushf sub dec inc sub subl or xorb and sbb fstl add push sub cmc lahf cmp adc or or ret sarb imul js or (bad) dec loopne nop fistpll add jo test mov add ret (bad) push sub leave lret pop enter mov adc movsb (bad) mov jns scas insb xor (bad) in repz addb mov or ss adcb inc fisttpl dec test push jno inc cmp in sbb push sub sub pop dec ret icebp movsb push add fadds push mov push add pusha or cltd jb jno rcrb or lret out jae jno xlat dec sub and cmp fsubp xor (bad) or dec outsb rcrb sahf adc inc sub xchg sbb xor sub xor xor inc sub test pop push xchg xchg ret mov add mov movsb sbb cmp mov and adc rorb test sbb xchg adc movsl adc mov js inc in sub dec sub rorb push cmp jl (bad) mov aam mov fidivr (bad) xchg popa imul imul insb inc fisub mov pop add sbb add push mov xchg mov aas mov push and pop movsl pop xor push cs loop xor scas fsubl decb or add lock mov cmp add adc mov mov stos aam pushf sub dec inc sub lock push mov push sbb or pusha fildl adcl test sbb mov and sbb test mov push fldt imul aad or cmp lahf mov inc mov mov inc push mov sub lret xor ss test repnz or dec cmp jo cmp add and fisub lds icebp xchg dec xor aad shlb inc orl and aad or jns (bad) cmp or inc inc cmp jns pop xor gs add push mov rolb jmp add bound ss add xor mov inc push or xchg xor add flds dec and and pusha inc (bad) cmp pop sbb in ret mov sub sbb jb shrb push rcll int3 or test in sbb lods xchg xchg xchg inc shlb add and daa xor inc lods movsl sbb pop push inc mov (bad) jno leave adc dec adc pop xor js or push arpl cmp inc mov (bad) insb push rcll nop sbb add ret scas mov cmp sbb mov test push pop inc push jmp (bad) cmpsb out mov dec lods test mov outsb ret cmp jmp and sub (bad) and add hlt lea add and cwtl mov pushf or popf sub or fidivl lock xor xor xor inc insl sbb lods add dec sbb ret adc insb sub mov pop fdivl dec pop shll pop push imul das pusha mov movsl inc mov and jecxz pop mov mov imul movsb pop sub sbb in jecxz sub xor xchg (bad) test mov loopne add lret addr16 popa outsb iret stos fcompl movsl sbb push cltd sbb push xchg sub mov push test sbb cmp leave leave add test into aaa dec dec adc push pusha pusha add mov dec addr16 pop rolb mov popa or cmp shrb push or lods mov dec xor sub and adc xor lock mov sub inc (bad) dec cmp mov cmp pop xchg mov or imul add test jge loop test sbb jb push imul adc push inc dec jbe push push jnp cli (bad) xor adc adc cld popa sub insl add add jns into inc imul fildl pop sub xchg out (bad) ja scas inc xor xor pop mov fimul aam dec int3 xor ret pushf movsl in mov adc fistpll add test push inc xor add jle xor and sub subl and cmp jne inc add sbb cmpsb jbe sbb es ljmp movsb inc mov sahf inc cmp fmull or pop and xchg sub sbb pop add or cmp addb mov inc stos sub pop sbb shlb push ret mov lods sub sub or inc sub or push inc das sub adc in inc lods lods inc es ret and push dec (bad) fstps into sarl lahf (bad) adc xchg mov outsl dec or adc push jbe dec inc adc test sub cmovns xchg (bad) xor lods xor in dec popf je sbb hlt and jmp and mov dec bound xor cwtl adc cmp xor and mov mov lret shrb enter cltd stos rorb or dec lcall adc mov lea cltd pusha inc mov addr16 add sub andl pop (bad) into jmp xchg arpl push lods mov dec mov rcrl in sub cmpsl call fmuls mov aaa inc mov das cmp cld (bad) mov dec sbb lahf pop addl mov push jnp mov xchg add xor xchg xchg aaa mov push fadds es pop gs in lock and xor push or pusha jge int fld and xorl add je cmp out inc or xchg or mov or lods es cwtl ss sub or mov add jbe loopne shlb push loopne and xchg out lods movsl ret fiadd cmc js mov push xchg cmpsb pop out addr16 sbb add stc pop sub repnz orl and aad sbb xor mov mov xchg pop data16 mov dec sub lds or sbb add xor mov daa fcomps (bad) add es inc rcr lods sub loop (bad) mov or fmuls mov mov (bad) leave lods lea daa xchg sub es mov mov and pop sbb adc nop mov xchg lea out push inc add ret jo test sub repz dec cmp xor inc xor ficom nop or aam cmpsl push aas adc inc lcall add sub dec pop jb fs dec jo xchg or and bound pop cmpsl cmp (bad) and sbb mov add sbb dec jb popa push outsl mov cmp inc sbb sbb insl add shlb jmp into xchg es mov jecxz rcll push and xor fnstcw and out sbb lock jno loope xchg dec stos push lock dec (bad) xchg mov cmp jge push movb xchg dec das push and mov mov pop pop sbb fsubrl cmp mov pop mov outsl test jmp bound pop or lock mov push inc imul test and sub xor test mov dec cmp stc and mov inc aas out fcoml (bad) ljmp pushf push xchg push or lcall test arpl rolb xchg mov cwtl dec or add subl mov loopne sub dec jge mov xchg test adc test imul dec cli shlb shrl xor mov lret and add lcall jg or add adc (bad) dec ret inc aam push std push ret inc (bad) sub and xor xchg cmpsl dec sub push xchg sbb push cmp int push les bound mov or cwtl sub rorb mov adc push negb fimul xchg inc pop ljmp and mov aaa push sub aas cmp xor mov xor repnz shrb andps bsf lods movsb add xchg jge jecxz (bad) pop in mov inc mov or push imul pop mov dec shlb das ja add sub das movsb cmp cmpsb push push cltd arpl dec adc dec scas xchg add and inc add out pusha lahf es fdivr cmp lahf cmpsl loopne dec ja js push mov mov pop jnp pusha mov mov (bad) mov push daa aam inc cmp push dec pusha or fstl xchg xchg push cmp push cmpb inc pop pop addl add mov fsubs call rclb ret add stos gs sbb (bad) dec inc jo call xchg sbb lds gs pop mov sub insl bound jge pushf mov adc xor sub pop shrl xchg pop enter add ss (bad) xor rcll xchg mov cltd mov enter lea mov mov rcll adc jno dec xchg cmp xor mov and sub es popa xor test add add into aaa (bad) and pop enter mov jno test mov pusha xor inc or cmpsb mov mov cmpsl dec mov sub js pop adc movsl inc pop sbb cltd xchg mov mov or popa icebp (bad) adc scas sub js jno addr16 fs imul dec xor test push shr inc ret cwtl orb int3 popa jbe rcrb shr lcall into rorb push jne popa (bad) push dec xor mov xchg (bad) movsl gs fcoms test xor xor mov and adc push sub or mull popa adc repz mov inc jmp test shrb sbb sti adcb sbb lea and cmp sbb mov mov lock (bad) hlt js jmp mov mov add pop add incb mov insl jmp xor adc addr16 jp add sti out out pop test nop add cmpsl add jae (bad) adc push xor xor sbb std adc cmp test sbb divb mov or mov enter add sti inc inc loopne std (bad) xor mov and mov mov and into in sahf in dec xchg jg xor (bad) mov add in mov xchg adc das mov mov add inc sbb rcll xor mov add xor stc adc sub out insb test add sti add or adc ret adc lret and insl outsl adc repz inc lock and sbb mov push sbb inc imul xchg pop (bad) shr adc add mov cltd xchg and xchg push and popa cmp pusha loope (bad) mov sbbb add adc adc lock and ret pop test daa lret inc and add cmc mov push mov cltd adc mov sub pushf mov dec outsl jno ss fmul xchg cmpsb inc or es xchg lods dec mov std pushf int sbb push xlat dec push inc bound sub push and stos xor adc pop test dec push xor dec inc pop or test or pushf fs pop sub xor lods inc cmp xchg adc call sub dec xchg and ret test or adc popa cmp add popa outsb ret or in add cmp inc xor push mov imul sbb popa add pop inc mov aam adc jno sub adc adc inc test out add pop mov popf push and fwait mov movsl in adc cmp hlt push sbb mov (bad) xor cli ss mov dec mov inc rcrl or dec mov push daa xor or jge sbb mov imul xor out adc imul addl dec or popa dec inc imul or inc mov rorb jne sub adc add out pop jl mov push mov in inc mov push mov xor sub mov loope sbbl push daa jl add fbld loopne lds xchg add xchg ss add roll roll mov mov aaa xor pop push mov or or push fcoml daa add or push sub mov cmc in inc test xor call jbe lea add daa push sub (bad) xor test push nop mov add movsl pop pusha bound loop pop pusha fsubl call cmp cmp movsl or adc test add mov jle enter add push lret cs dec cld and ret enter adc xchg gs xorb mov test fwait dec push jge repnz push sbb xchg mov cmpsb mov sub outsb addb push xor mov and out dec xchg add arpl dec inc push enter cmp cwtl or sub mov add cmp xor (bad) (bad) js pop mov aam add insb pop into imul jp xor aaa in out ljmp pushf and push jo mov nop incl sti ds rcll adc push clc or js adcb or xchg add xor insl data16 pop fistpll mov inc arpl mov loope outsl fwait inc (bad) mov xor xor dec cmp push push xchg pop call lods adc popa pop inc nop mov rorl add js lret mov arpl or test aam inc mov sub adc push add cmc dec xor jmp inc addl jns das cwtl and inc cmp push mov mov rorb push mov push ret push imul sti into inc (bad) call jns push adc in sbb cmp jo fmuls mov loopne mov xor shll scas cmp loop mov xor mov push adc movsb (bad) sub loope sbb pop adc pop leave push add add add mov movsl stc stos and pop fwait repz and adc mov dec fstps xchg sbbb scas out les sub pusha enter aas xor sbb cwtl mov pusha mov mov xorb or or ror (bad) in movsb cmp jne xor dec (bad) and mov (bad) xchg clc (bad) shlb xchg or lods mov xchg and push out test pop cmpl int xchg loopne aam sbb sub loopne enter inc in cmp adc das mov xchg aam insl and or mov xor into or loope jnp push add out es mov outsb sbb into dec add loope xchg pusha xor lahf xor pop in or sbb push ret mov loope xchg adc pop loop push xchg (bad) add (bad) das fmull outsb push pcmpgtw and fcomps jb add and pop mov adc dec cmp scas lea rorb addr16 inc sbb in mov xchg sahf test insl add loop in mov xor lods xor cs sbb mov adc inc rorb outsl sub sbb add (bad) insl imul mov xorl mov pop dec cli in pop test ret sbb jmp pop sbb lcall (bad) cmpsb and jne add mov xchg ss jecxz mov jno mov push cmc pop enter lret aam dec mov pop inc push adc cmpsb jge popa lret and mov add bound add adc dec js loopne cltd xor xchg push xor sub sbb mov dec pop push ss inc xchg test inc dec pop adc rolb dec outsb arpl add fisttp adc cmpsb sub sub lods jo jb pop xor xchg arpl cmp xchg fwait push add or push sub xor push cmp pop mov add inc and scas popa pop xor mov movsb add and jbe inc push in fwait test xor les test xor mov dec imul and inc mov int3 rclb inc add xchg (bad) inc dec cmp sbb inc mov fcmovu cmpsb scas movsl pop add cmc or push fadds imul and movsb sub cwtl adc lret mov jb cmp xor lret rcr xchg mov cmp push xchg xchg xor das (bad) es mov aad lock es cmp or insb test or arpl jae pusha xor cmc insl sbb inc or pop inc call js dec push or adc negb js dec addl icebp cmp xchg sahf and loopne mov jg or adc xor outsb adc insb and sub adc push mov lods and and loop xor cmp sbb shlb aas cmp (bad) or jle,pn cmp xor add mov test cmpsl mov cmpsl lea pop jecxz test bound cmp pop xor inc (bad) add and dec cld leave xor sub scas rorb popa cmp stc (bad) mov add fnstenv data16 dec or push js push xchg sub adc add ret mov (bad) (bad) in adc js,pn add gs mov push insb add xor cmp and push adc cmp mov mov sbb sbb add (bad) test lods test mov ror xor mov dec or aad push movsb mov push or daa lcall pop in gs or xchg icebp imul dec jecxz cmp inc xchg adc ret inc sbb cmp push mov sbb or xor (bad) or xor add sub mov mov les loope sahf xchg cltd cmpsl xchg dec sbb pusha and es sub cmp and inc add push mov push pop test push xorl out xchg dec jmp jo je (bad) sti push test push rorl push outsb xchg jno or lret and nop test adc pusha sub and dec adc scas jecxz inc jecxz js mov pusha or adc mov aam or pop mov xchg add sub rcl ret cld pop jmp mov (bad) les stos sti sub movsl js and adc pop add xchg and xor mov cwtl mov inc cmp mov popa and arpl lahf or jecxz ja dec xor dec ss lret adcb mov adc fdivrp mov pop sbb flds popa and xorl sbb mov loopne nop mov test inc out inc push cmc aad mov lods xchg sahf out inc pop mov or leave js add dec lret lahf (bad) mov dec adc dec movsbl add lahf pop xor test pop and dec movsl outsb mov orl pop jecxz push or js gs ss subl in rolb push rol cmp mov add adc push lret jae test mov push xor (bad) (bad) insb adc ret mov leave mull adc les jb mov movsb arpl inc sbb mov rorb add xchg imul rcrb insl popa cmp jge mov cmp cwtl int3 push rclb mov daa push pop cwtl push shll repnz sbb ja sbb push dec mov sbb jle or test cmpsb pop aaa shll mov sub xlat jb mov push and sbb push ret in xor xchg (bad) cmc push and inc in inc imul ss xor adc popf leave jns out xchg cmp jno adc inc push pushf movb ret aad mov icebp fisttpll cmpsb cmp xchg xor inc cmp aaa pop mov dec nop xchg pop xchg pop xchg jle inc fbstp xor add mov sub dec js les inc or inc lods mov ficom xchg cmpsl inc mov cltd out enter js mov shlb and imul lock insl pop or push gs pop insb pop mov push repz lods mov imul daa sbb add call popf push xor aaa pusha xor cwtl and gs aaa je push ret les ret or ss add xchg jp test sbb test stos orb daa mov adc dec mov icebp adc and lret cmp cmc std mov push cmp test fdivl int pop push mov and mov loope ret or add sub pushf lds inc xor xchg xchg dec and push mov jbe ret sub mov pop aam push cmp dec inc (bad) pop (bad) fld and ret pop pusha mov and push xchg stos xor enter mov xlat mov ror pop or bound je push sub jne and inc insl dec (bad) lret mov xchg (bad) push (bad) aaa xor jne jo ret mov test xor into daa mov fstpl dec mov mov mulps push test faddl adc (bad) or cmpsl (bad) mov dec sbb mov (bad) test sbb push sbb jmp or or push xor inc inc jmp adc and jb pop or mov and mov adc or push popf push inc fcomps jle aam add jge or test xor add push mov dec add sti push test loopne lahf jns inc cmp test pop or inc ret mov adc imul or inc cmpsl lahf loopne jb ret pop and xor pop add inc adc xchg mov push rorb inc loopne in inc dec add movsl adc notl jo and mov and out gs das or mov xlat fs add or xor mov out cmp fwait push outsl inc ret sbb or test mov adc xlat js ret addr16 data16 sahf mov sbb or in insl jns arpl jmp fiaddl sbb mov (bad) adc jo add dec enter push cmp insl push lods adc cwtl xchg (bad) inc or js xor lea cmpb inc pusha fisubr movsl adc sbb inc ljmp repz or or inc pusha test imull and sub jecxz scas xchg pop test mov xor ret add adc nop adc aad pusha and daa inc sbb sub xor mov lret test cmp push fimull ret inc shlb adc gs lea and sub xchg jecxz cmp cmp add xorb mov xchg jnp in stos aam or or pop and pop or bound add jae jo mov (bad) push jo fbstp mov dec repz mov xchg out js pusha mov jb cmp cmp (bad) adc pop aam jns loop cmc shll lds in pusha setl scas push js sub xchg cltd mov icebp cmc pop mov (bad) imul lock sub add mov dec roll (bad) shrl (bad) or loopne add inc jae pop test inc xor aaa pop ret push lret lods add pusha xlat dec pop sbb and fistpll add iret add cwtl cmp pop lods push mov ja rcrl xor rol arpl inc ret es xor andb ret test xchg lret mov imul sub movl rclb sub xchg pushl pusha and mov or push cmp lods jno mov push adc push stos imul and nop nop xchg icebp or lea ret (bad) pop or incb int3 jg push jecxz push dec pop xor (bad) xor mov div dec (bad) mov add pop jno jge (bad) aad and jecxz xorl mov dec push dec or push xchg test (bad) aaa pop xor fisttpll xchg dec xchg ss rorb and lds sub popa push and mov jo adc sbb rcr push rclb loope cld inc imul and mov jge in push cmp and mov pusha adc lcall xor leave mul ret dec popf xor sti xchg xchg push xor adc (bad) aaa sub mov arpl sub pop pop lahf dec xchg xor inc xchg test dec push test ret mov sarb lret loopne push and mov xchg popa movl icebp xor mov shrl jle add sub xor and and mov bound dec adc ss mov and sbb mov into sub imul cmpsb jle je aam jg jb lock sub pop lret sub or dec lret xchg cmpsb push xchg dec add test fwait dec xchg fs sub mov mov cmp xchg mov mov xor clc pop add popa add adc adc enter addb push (bad) xor mov fstps add push xchg (bad) cmp sub lods xchg test ret enter fwait iret push daa sbb ss addl and lea cwtl mov movsl bound out cmp in push and or xchg sbb pop test stos aaa rorl sub adc inc outsl pusha ss mov test xor mov add pop int3 orl sbb adc mov shll inc pop push push js (bad) das jmp (bad) push or or mov dec js add pop adc add fisttpl push adc (bad) sub out (bad) fstps sub fwait xor mov scas hlt outsl mov sbb or (bad) and inc mov push xchg add xor push testl aaa or roll mov xor cmp sub cmp or scas movl lods or mov fdivs xchg xor cmp mov (bad) add and and xchg icebp cmp rorb mov or popa dec leave adc int3 adc mov xchg movb int3 sub or sbb xchg sahf push pop mov xor sbb fidivr push adc fiaddl enter and push mov and push rorb inc push mov rolb and cmp mov cmp push or sti outsb lea cmp aad out into push mov (bad) rclw js mov sub sub sbb xchg (bad) push sbb movsb and loope (bad) lods outsl (bad) mov (bad) popa mov xchg push rol jl mov ret dec out or push jmp pop mov adc jb icebp push rcl push lods or and inc mov mov ret (bad) jmp mov rorb jecxz sub xor addl pop insl adc std es les inc faddl shrb (bad) adc nop pop xor mov xchg cli aaa ss pop push mov dec (bad) loopne inc adc std inc pop xchg movsb inc xor adc or mov stos jmp dec ds sbb fnstsw add xchg (bad) jb dec xchg jne ret pop xchg xor sub lock sbb sar adc cmp add push sbb sbb call in jecxz sub sub xor lahf adc xchg push rol add mov rcrb cmp and test sub sbbl sbb enter outsl or jo bound add xchg dec nop fs jno lods addl adc jne mov adc lret loope xchg push ljmp mov xchg enter push push fcompl ss or fwait xlat or xor popa jl pop test lahf or lret aam lahf sub jno leave leave sbb jbe imul ret push adc or mov or push mov sbb push and lods add sub lret pop into nop sbb xchg xchg movsl mov dec cmc mov mov and mov js sbbl adc inc cmp rclb add mov and and xchg mov adcb loope aaa mov ja add and or and mov adc sarb xchg lods loop pop xor pop test xor fwait inc dec xchg inc icebp add pushf add (bad) or or lock ret push inc loop xor pop or mov cmp add sub xor pop outsb cwtl or push in xor mov lret imul jecxz mov push add xchg fadd loop add xor stos mov add mov mov xor cmc xchg lock pop mov pop cltd push bound int nop push test pop lret adc arpl mov jp jecxz (bad) jno lcall punpcklbw frstor add mov inc sub xchg adc add sub lock mov jp adc pushl sbb fwait adc inc xor sbb pushf popa popf push leave mov mov into or mov mov sbb rolb enter mov xchg (bad) jmp fbld and pop (bad) fld pop sub inc flds push and mov ljmp mov movsl gs inc push jnp xchg lock stos jno aam sbb iret out inc arpl ja inc ljmp mov add sub mov xor rclb mov add addl aaa insb pop push and pop dec mov add push or int inc call pop pop pop inc mov xchg test sbb in (bad) data16 xchg sbb lods lods adc popa push xchg (bad) jne ds sub pop mov fbstp sbb adc ret loopne (bad) pop sbb test add pop adc outsl mov pop (bad) das sbb dec cmpsl sbb adc ss les adc dec xchg icebp les inc mov mov pop cmp xor cmp andl xchg mov sub cmc push aas sub pop push add fucompp sbb inc call mov xchg dec sub aam dec lret xchg cmp sahf or push fstl pop xor xor lea and and les cmp movsb cmp inc and fdivl mov jbe cmp push pop mov dec test jnp pop or aaa imul xor (bad) xorb pop sub repnz xor pop inc inc js sbb and in roll insl pop outsb jno test cmp in jbe add sbbl mov lret xor dec popf and nop xor xor inc mov push test lea jo and test dec inc lret adc andb xorb push pop add push fs add sub xor or mov mov inc xchg inc adc stos adc aas and sbb adc jnp rolb push scas xor pop enter daa mov mov pop outsb outsl in nop in daa pop xchg xor test push inc push out inc xor pop adc mov add jge les or mov ds adcb jno rol mov push push daa dec mov mov adc daa jo mov ds imul dec bound add sub and xchg cs frstor mov xchg sub ret pop or sub mov or addl mov ret mov jecxz mov adc pop mov and push pop loop enter fnsave inc jbe mov xor or push ss pop sub stos add add xor shl mov rcl ret jne aaa cmp inc pop push or inc imul xor mov mov xor mov sub aaa pop roll iret inc and das enter not aaa rolb xor or jmp (bad) bound rolb movsb pusha sahf popa cmpsb loope mov inc jecxz and xor (bad) adcl inc (bad) cmp mov dec lahf add adc cmp add cmp xchg cmpl outsl dec adc and or movsb or aad adc nop in or pop push lcall lock in push arpl fs pop xor xchg push mov xchg sub sub inc xor sbb dec push jmp mov aas cmp cmp pop les cmp (bad) lea xchg sub popa mov xor xchg rol and lret aam arpl xchg out xor xchg arpl mov adc shlb (bad) sub popa xor loop mov bound push xor or lock push in shlb mov scas jle push and lret xor push inc pop movsl xor adc rol mov pop push mov add mov call lock lea pop add fs cltd xor insb and pop or into mov or ret add adc add nop jmp mov sub jns jo mov mov sub mov cld mov (bad) mov aam xorl pop fiaddl mov icebp into jb in mov es mov pop add pop adc dec mov xchg jne hlt cmp adc push ljmp mov incl jge xchg movzbl fwait push (bad) lock or sbb test jae repnz pusha mov mov jge sbb cmp xor (bad) mov sub and pop cmc sub xchg push dec insb push push or out rcll cmp inc call adc fsubl xchg and movsl or cld add aam sbb aaa inc cltd xor fild adc cmpb (bad) adc pop mov add movsb xor xor sub lretw fidivl imul pop mov int3 movsl dec add sahf adc ret enter xor mov enter icebp or daa js sbb lret test or sub test add mov scas stos mov xchg push or adcb mov test cmpsb mov xchg mov sbb sbb popa (bad) push mov xchg push repnz inc add mov inc xor mov adc lret or inc mov and imul and mov inc lahf sub popa sbb and in push jbe popl mov sub jno mov inc ret das xchg mov xchg add inc lret lds sub add jg jae ljmp add sbb lea push dec adc push in pop inc das mov sbbb rcrb push adc mov (bad) bound sub or (bad) sbbl les insb xor xchg fcoms aas movl nop and imul movsl (bad) mov mov aam mov addl test ret loop jae adc fstl movsb jo push add adc or test test or mov sbb pusha ret pop fdivs (bad) add sbb dec pop mov mov aam xor arpl pop pop inc aam rcl and arpl xor cmpsb add test xor pop push es push mov lea pop test icebp int3 lahf cmp xlat insb sbb xchg inc xor jmp mov pop inc mov lcall out xchg outsb xchg add xlat dec inc mov adc test int aam sbb outsl sub test addl insb add jmp jmp ret sahf dec mov jecxz mov push gs pushf pushf mov sub inc js mov dec (bad) dec xchg (bad) xor inc pop pop sbb popf inc cmp push mov add adc test cmp pop add fs lods outsl mov or xor jno mov cmp rcrb mov cmp icebp pop adc add adc nop mov gs pop pop in popa and mov fistp mov repz mov aam outsl cwtl xor (bad) pusha mov pop mov test mov mov or aad push xor loope inc sub pop mov pop lods sub test xor adc push adc cmp jecxz or call sub mov ss pop fcmovnb inc xor sbb dec movsl xor call cmp aam inc test xor je in in jecxz (bad) xor pop ficompl ja cmc add xor sarl push sub xchg outsb dec movsl xor (bad) daa pop inc mov adc sbb mov cld arpl and cmp inc int negb aaa std mov and lret sub or out push add dec and pop adc jp movsl push (bad) test pop aam imul and cs xchg pop push fwait jae pushf into push ss les jmp adc out bound add sarl out and xor addl rcl loope and fcmovnbe push cmp xor ss xor fisub mov or inc xor outsl jl push das inc mov mov push or rclb ficom xor pop gs in mov xchg ret xor movsb mov xlat and lret dec in movsl mov sbb or inc jb rolb movsb xor push and addr16 push pushaw inc xchg pop lock push mov adc das push jae and dec xchg add pop test and jmp or pop test mov xchg sub add fs xor insb xor test inc clc mov popf mov push jp push cmp les (bad) icebp je cmp fist daa add das add leave fldt push adcb je sbb in std ret (bad) lret adc cmp xlat cmp shlb test and sbb inc ret mov sbb call fisttp mov insb inc mov adc sbb lock in xor mov addr16 jb inc lret adc enter xchg inc and dec mov dec mov sub or popf or mov inc add jns nop xor or pop movsl inc jecxz adc and fs or add mov lods xor xchg xor and and xchg sti test xor pop and mov test ss pushf pop or push inc fsubrl and pop inc into ret and (bad) dec mov mov and and mov out add mov bound sub (bad) rcll sub xor sbb xorb sub and mov leave ret (bad) aaa mov imul dec fdivrl dec xchg mov dec add shl inc fldenv fisub push test dec outsl insb test stc mov mov push enter push mov sub mov adc movb (bad) mov test jo pop dec adc rorb jno lea mov lock cmp lods (bad) jne hlt sub fcomps loopne sbb push nop cmp jno loope and gs jg dec pop inc stos pop cmp popa (bad) test test cs daa (bad) shrl pop mov ret aaa pop test and mov or ret pop pop outsb adc (bad) ss sub int3 pusha xor hlt pop dec pop inc push sub (bad) push (bad) fdivs lea xchg and add adc adc push push mov dec test add adc jb jno sub popa and add mov cwtl mov push jecxz xor or sbbl dec jg les xor xor lods and shlb daa (bad) xchg fadd aam outsl sub nop shrb adc xor cmpl add lods xor fdivs and xor aaa add (bad) adc lret int3 aaa inc add (bad) cmc aas push cltd movsb add pusha jb push adc and jmp or or inc push push sub or iret cmp xchg and push lret add adc jne push cwtl inc and cmp cs add and cs in mov xor insl leave sub mov loopne stos xchg add (bad) fbstp push adc sbb xor rclb pop inc (bad) out js mov test icebp pop push add insl lret sbb mov nop lret inc movsb fisttpll imul and sub ret je xchg sbb push mulb and nop into out orl and push lcall xor std aam ret and bound aam sti xchg or and rorw cmpsb lds inc lods jns test xchg adc pop shlb rorl xor xchg (bad) arpl bound push mov xchg push xor add decb adc inc sub dec pop mov sub adc inc dec popl sbb mov mov and or inc jmp jecxz mov push pop mov push xor test dec mov sub add and dec xchg popa addl shl lea mov loopne inc movsb jno xor sbb mov and add (bad) mov jo test jbe inc dec push and push testb or rcrl jge imul sbb mov into sarb pushf jo loopne or push xor into or call adc push (bad) inc inc inc sub or fstp inc jmp test loop shrb pop mov mov sbb (bad) out ret jno dec stc push push fadds mov jbe jo into inc fiadd popa cmp push sbb sub or add or jnp pop rcrl xchg dec xchg mov mov lret sbb enter mov enter inc xchg int3 dec cltd data16 mov or inc mov jno mov and test ss dec and adc mov cmp sahf imul cmpsl shlb add sub push sub addl lret cmpb lock daa pop dec dec popf and test inc enter inc inc jno and inc pop push out je mov push lea adc and jl stos xor test jl cwtl add xor sub xchg add stos aaa push and rcll mov scas test dec pop add pop data16 adc xor inc push test shll push es sbb outsl es sub lods popa (bad) jge adc mov (bad) leave xor imul sub into inc xor insb or pushf sub mov (bad) popf insl test sbb and mov loope imul add mov push sti and push or test mov jl push lcall add and inc mov or sbb imul add xor fs dec leave pop mov xor and or rcr sbb lret rcrb mov sub in cmp and xor stos pop bound cmpsl xlat mov mov xor outsb mov sub lods cmp orb pop (bad) pop dec popf test movsb add jns les (bad) mov ja xor test ss add lea mov cmp and xchg push push jo jge mov push push ret inc xor pop pop jg adc or xor or mov dec xchg mov dec xor mov xor pusha in int3 or pop adc dec add add cmp dec enter sbb xchg add call aas sahf aaa push ljmp mov lret fs imul insl pop (bad) push sub mov pushf dec ret push cmp sub aaa sbb or mov dec mov sub xchg push or inc imul jmp fist inc pop (bad) mov insl orb and mov mov lds test push push (bad) shl out mov mov or (bad) xor jns cltd arpl loopne cld pop inc ss pop das lds sbbl xor ret mov xor and adc shll vpinsrw adc cmp cli add das insb arpl xchg xor fsubrl inc or int loop or outsl push popf ja ror push xchg pushf jl push ljmp movsl pop dec arpl xchg subb scas sub test or inc sub inc movsl inc adc pop or cmc pop adc or dec sbb xor aad dec cmp xchg popa push xorl ss dec push or add add xchg arpl addl xor cmp sahf inc leave mov pop aam mov inc jo cld fistpl lods xchg mov add sahf and jno dec pop xor xor inc mov lods dec mov pusha ret shrb xor fildl xor xor mov jae int3 push aad xor call mov xchg and mov clc add aam xor push cwtl scas mov mov (bad) dec daa loopne sbb bound loope hlt xor andl into imul dec pop data16 call (bad) xor sub dec sub lret dec into push mov leave loope (bad) xchg (bad) adc shrl pusha setg or xor xor and inc jmp xor jb push shlb (bad) outsb inc xchg (bad) xchg inc inc mov cmp punpckldq mov adc pop pop push and (bad) mov ret push cmpsl mov outsb and and cld xchg xchg test (bad) jg xor rorb mov imul xor push push (bad) jmp mov pop aaa bound mov adc pop test pop jae jne ds scas xor push xchg insb dec loop push hlt push dec movsl inc sub (bad) sti cmp sbb xchg xchg push ss jecxz test imul mov mov cs enter pop or loop loope inc ljmp mov lods and sbb loopne rcll lcall subb pop aaa es adc fwait shr add pop rcl inc cmp in (bad) je loop xor mov and lods adc mov cwtl dec cmp mov xchg add pop dec icebp fiaddl push verr add imul ret add xchg sbb xchg arpl or or (bad) and jp mov lret mov push dec pop das mov sbb push xchg jno inc (bad) mov xor imul push into rclb enter test adc adc xor dec std mov xor nop/reserved ret bound add add pop or addl test jbe dec ljmp aad sbb add flds add sbb (bad) xchg ss xchg inc mov fidivl xor mov add and mov (bad) and dec push mov sbb pop fnstenv xchg sub cmpsb push lock add rorb dec sub and int inc lcall mov push pusha jmp jmp xor andl test out adc mov mov aam cli add stos xor movsl jmp mov or (bad) arpl push jb add syscall sbb bound jae adc pop and add loope std xchg dec xor xor or aaa mov jae jecxz xor test mov mov int3 push xchg sbb adc push movl mov mov cmpl lods sbb loope pop push cmp add xor rolb ret je mov (bad) cmp cmpsl mov xor push mov andl pop rol in ja add mov dec jmp popf lea sub xor push (bad) rorb mov pop (bad) dec jl or pop dec fs addl inc inc add sbb add sbb loope dec inc (bad) leave sbb xor mov push inc xor or push or test push sbb test adc mov add out mov lret sub nop jno inc dec lods lds rcrl sub pop insb pop pop sub sub sbb test mov insl adcl cwtl in call and out mov dec je hlt pop aaa or outsl sbb scas call add mov jbe and add and sahf mov jo imul loope push sbb push cmp and dec movups mov sbb inc jno push mov cmpsl dec mov sub sbb stc ret inc mov pop test mov fiadd pop or movsl xchg xchg dec mov std imul mov or cmp or lods xchg mov add xor add (bad) mov dec jo mov sbb pop mov mov test xchg rorb add push xchg inc sbb cs dec pop into nop int scas adcb xor lods (bad) sub movsb mov and cmpb add adc loopne sbb mov cld fbstp jecxz or iret sbb in inc mov sbb dec dec jbe lods addl test push xor sahf xor cmp popa add adc xor push (bad) rcrb jle push add (bad) mov dec pop push cmpsb orl enter iret xor xor xorb push sbb lods adcb xchg stos sub arpl dec sbb fimul insl jecxz outsb movb jo dec arpl and xchg in lock pushf sti cli (bad) jo or adc mov pop push lcall add loopne sub pop ret decl xor xorl add ss add arpl jle pop sbb mov mov addr16 and dec sbb (bad) jb sarb ss push js push mov add xchg sbb sbb add aam jge mov out jnp or xor push and xor adc mov inc or dec ret or cli mov movb ret add add xchg jno and mov xchg mov insl test pop aam mov inc pop sub mov xchg rorb lods xor jo inc pop pop cmpsl rorb push in mov sbb loopne dec ret adc loope imul xor leave pop out add out orb xor xchg xchg sub mov insl roll and lret mov imul add popf and es test lods or add mov pop dec mov xor lods push gs mov mov xchg push add pusha or cltd sahf xchg inc fsts cmp imul mov xor mov arpl xchg push dec dec jp stos int cmp pop mov pop into add call lahf dec xchg mov adc pop inc push setp adcb xor les and adc (bad) mov aad jno pusha popa test jne adc in sbb mov xchg mov mov add loop and or ret jle jne or push dec xor mov maskmovq testl in imul sbbb mov lock imul inc test adc adc push jnp sub jecxz icebp or mov jne add push xchg pop add add mov xor lcall or xor leave xor roll and xchg sbb imul pop xor xor sub les imul xor sub aam sbb or sarl fdivrl cmp jp sub mov jbe int3 pop dec xlat dec xchg fadds call pusha popa push jmp cmp ficom mov jb shlb and or add pop and andl pop les (bad) cmp (bad) inc push dec dec pop pop mov lret ret ja adc roll dec push add addr16 mov (bad) push xor pop or cmp xlat and leave push adc mov in xchg xorb iret imul add nop lods adc jnp xchg or ret add dec out cmp les mov adc pop sbb and cmpsl mov test sbb xchg lods push xchg leave xor dec adc add pop adc cwtl nop loope mov xchg pop je pop cmp jne xor addb add fstp pop xchg ficompl push xor pusha inc and movsb sub mov sub fs scas mov inc xlat add push stos mov test adc (bad) icebp sti cmovp inc pushf sub aam adc scas xchg scas rcrl stos xchg xchg push inc dec enter movb or sbb mov enter and xor xchg lea xor les ss pushf mov inc pop test sbb adc mov adc lret test repnz (bad) adc (bad) test pop shlb enter js jns or push test fisttp or jmp adc fistpl aaa in mov mov lds ljmp pushf cmpsb mov andl inc cmp xor rcrl mov out fnstenv nop mov scas cmp pusha add lcall adc sub mov addl mov xor fwait inc rcrl icebp dec add add pusha mov (bad) or push mov (bad) js sbb ss sub add pop sub or push inc lret popa sub sub iret and insb lea (bad) iret or mov test mov (bad) pop mov push outsb push out sti dec dec mov xor xchg sub jmp fstl pop ffree push push sub add sub pop clc stc lea mov jecxz xor bound ja or or xchg add imul mov or outsb arpl cmp adc pop addr16 fimull mov stc mov push cmp mov sbb mov push cmc adc loop add inc sub xchg mov and leave push out sbb les xchg pop add add pusha (bad) sbb movsb mov push mov popa cmpsb movsl dec sbb lea xor mov and ret nop inc dec bound adc mov add daa test push test cmp loopne add xchg movsl test insb rolb fstps xlat jo mov add loop dec or sbb inc call pusha leave jno repnz pop mov movsl arpl dec ss dec insl test push jp pusha les push pusha add add ret enter dec pop adc jnp test mov (bad) adc mov fcoms and or arpl popa insb and (bad) pop add mov inc mov (bad) inc imul std xchg add pop cmp lds fcomps inc adc (bad) xchg xorb shlb pusha addr16 adc loopne adc dec adc push mov push push sbb pop inc and push and inc cmp dec xchg and loope aam push dec add sub mov iret lock hlt out shrl mov shrb ret cltd xchg mov test je mov pushf or pop enter dec sub fnstcw lret roll xchg xor popa imul xor push (bad) adc adcl andb test std cld xchg sahf xchg cmp sbb or ret pop pop mov pop sub xchg inc sub and mov fldl push jp xor mov inc xor jns mov loope pop xchg mov lcall aaa pop ret popa add jb sub pusha inc (bad) jp bound rolb pusha dec out mov mov add ds fistl cmp nop and js pusha test pop test out push mov js lds aad mov inc ret mov icebp push jecxz add jbe adc ficoml or cmp aad push xchg jno sarl sbb push sbb xchg in sbb or loopne out xor dec pop cmp lea pusha xchg outsl cmp sbb or or fistp daa cmp imul aaa pop lcall sbb mov xchg mov xchg sub sbb arpl jmp rorl push (bad) inc mov jp dec add push push jno dec mov jne stc adc nop gs xchg inc sub mov dec mov sahf sbbb data16 mov dec (bad) or pop push or adc push roll inc jbe push adc xor test mov mov mov dec add adc test cmp xchg int shlb dec ljmp loope add inc bound pop pusha insb sub cmc bnd xor gs and pop add xor aaa fwait mov clc add adc pop mov push mov in pop gs (bad) add ss cmp jl inc pop xchg lods cmpsl mov xor adc pop xor (bad) sub push dec (bad) rcrb xor mov stos ret jo add jno inc or mov arpl popf pusha xchg xchg (bad) and adc pop test insb push cmp mov jo jge xchg adc inc add cmc mov and sub cmp call fbld mov xchg rolb lods cmp mov adc rclb mov sbb inc xor add jo mov xor stos test and push pushw bnd push aaa lods and fwait in push out mov cmp jp and pusha decl sub xchg std sahf mov lds dec fwait int3 sbb push jmp cs dec imul push test fsub adc test mov aam or jne and mov or ret iret loope mov dec arpl cmc sub adc adc adc add sub leave adc xor and cmp dec sahf adcl (bad) xchg adc insb mov in add pop insl and fistpl lods ret dec inc pusha daa sarb lret insl inc dec rcr ds ret movb cmp push clc ficom inc movsl or rcrl rcrb mov scas dec pusha mov out jbe adc cmp arpl or sbb stos push xor push sti test inc loope xor insb lods subb inc imul xchg sbb call dec xor mov enter xor out mov or pop fwait sbb in iret nop in lods sub or or arpl mov shlb mov mov add sbb loop lea gs push sub pop adc adc sbb js jne mov or dec inc or xchg imul nop xorl push in mov add xchg xchg sbb push dec cmpsl or das add cmp dec adc dec pop inc insb or lods pop sbbb xor mov mov push inc mov arpl ret rolb addr16 xor pop mov je push mov repnz dec lods loopne sub cmc fnsave adc or ds je adcl lret push addb or sbb xchg adc les dec sub sub int3 jge fimull test mov pop leave xchg jbe ret push popa popa adc pop pop add (bad) inc fidiv testb pop or lahf inc pop adc jbe lods add xchg addb nop mov or lds lods inc cmp adc adcl push xchg jo sbb dec mov pop xchg mov xor push xchg loope dec sub or pop jg je jo fist ficomp dec inc call push mov pop xchg fnstcw std cmpsl xor clc mov imul cli and je into mov pop andb push or mov popa pop mov inc push cmpsb loope imul lahf pop mov lcall pop jge dec mov xor mov cmp insl xor jb mov loope sahf in add test adc and adc push mov and les push insb push push (bad) xor pusha dec jo sbb rolb sbb in xchg mov cmp pop dec sbb add pop js cmp and sub (bad) pop sbb push xor inc insl dec mov push in adc dec sub and adc xchg dec (bad) mov stos or into lods pop pushf mov push jnp dec nop ljmp scas inc sub jl les sbb popa push adc adc jnp sub dec das add mov xchg jnp test pop or lods add (bad) adc test and test test xor lds mov add nop push dec lahf xor out je pop jns les fs dec pop (bad) loop cmp xchg xor pushf add inc imul or outsb lret hlt xor lea outsb sbb xor inc rolb sub cmp and (bad) lahf rcrb and xor inc add sbb mov adc inc or xchg mov cs pand mov popf sub add mov or dec push xchg ret jb dec pushf mov inc lret arpl mov and movsl pop pop imul movsl inc jne mov lock and sbb or outsb mov or mov sub ljmp in mov and pushf pusha loopne (bad) mov or push inc inc xchg sbb (bad) push loopne dec and sub pushl outsb push in aam iret cmc dec jno arpl fstps sar and loopne (bad) push jmp fs cmpsl dec dec arpl pop movsb jmp std xlat xchg pusha push js cmc (bad) roll lea mov push inc js and pop cmpsl pop (bad) adc xchg sbb mov push inc sub dec int movsb inc (bad) cmp sbb daa dec mov outsl pop ss aaa xor and test push mov call fwait and adc cmovbe xchg pusha addl sub or scas lret add cmpsl cmp inc gs xor add mov stos adc rol pop add cmp adc push sbb cld push or test lcall xchg aam mov adc mov roll mov inc cwtl mov ret imull mov ficompl fsubrs (bad) push mov cmc cwtl scas xor ss fdivs leave stos fs lock cmp inc xchg out sub dec lea jo push xchg inc (bad) (bad) pop mov dec sbb lods xchg test add or jnp mov adc sbb cmpsl mov (bad) pop inc lea mov cmp es xor ret or sbb out and mov mov sbb pop (bad) faddp add cmp pop lahf daa push cmp mov xchg adc js (bad) xchg dec fstl test imul lock cmp add pop jge xchg or lcall inc outsb adc xor js in pop movsb dec or push scas insl sbb fistl jle adc and insl arpl add add sbb mov cltd adc ss sbb fcomps ss push fist mov dec stc adc sahf (bad) les fnstenv bound push sbb jae xorb and adc dec lret adc jne ret sbb aaa sbb in frstor adc cltd aam arpl sub push jmp cmp cmp mov jns ja push lret (bad) push (bad) dec pop xor movsbl daa add and add fistl push or sbb jp dec adc mov cltd adc cmpsl leave nop sub xchg into js mov jl cmp movsb lea addr16 jecxz mov adc sub or xlat fldenv in jo fldcw jne rclb mov lret je (bad) or add mov inc xchg into cmp leave inc sbbb in pop adc (bad) sbbb mov dec cltd mov in add and xor mov and lret push addl sbb popa mov or mov mov cmp lea add push sub push ficom and es mov (bad) fimull add jmp cmp push aam xor imul js pop mov xchg xor test fistpl sahf and inc inc lock mov xor mov cmp imul mov and pop pop stos pop xor ret test cmp xor invd mov xchg popf aaa inc bound and and pop inc movsb cmp shlb sbb and inc dec pop pop adc lock jmp dec pavgb sub adc mov xor jmp push xchg or call sahf imul test push lret test cwtl or dec aad mov cmp popa enter push sub dec subl shrb or mov mov adc add mov mov bound lods jl cwtl test or mov sbb lret jbe sbbb lret mov inc and and mov inc and sbb add inc pop mov mov inc add add lret pop inc out das mov adc push adc mov xor xor (bad) adc or and mov add mov fistp imul mov sbb mov test inc dec push pop mov or lods xor and icebp hlt bt mov mov cmp and xchg or pop daa cmc sub test clc and and xchg push xchg fldl inc cld mov mov mov lea push xchg sbb mov or icebp cmp mov add or sbb add sub lret adc in gs dec xchg xor mov je inc cmp aam inc (bad) dec pop gs popf movsl sbb lods insl add pop or notb xchg and xchg dec xchg xorl addb sub push ss sub test ret adc rclb push hlt (bad) pop into mov jb and pop test push xchg push (bad) push ljmp ret jns inc jnp mov cmpsl hlt inc lret sbb subb sub and (bad) mov popl movsb lret or xor add (bad) sbb shlb pop test and adcb sub insb pop popf push xor lea fnsave les dec and push lret mov (bad) sbb jns push mov or lock xchg add cmp test js aaa xor daa lds outsb icebp adcl incb adc (bad) cmpsl pop mov push divl movb js push mov movsb hlt dec lret or or shrb mov cs mov stc fwait loop or jb xor and dec sbb inc cmovbe bound imul daa cmp shrb and dec pop inc sahf push stos or add push jl (bad) xor xor pop push ret mov outsl test add inc nop inc push or mov xor test (bad) lea or scas xchg int3 out or mov shrb ss ficom xchg mov mov jg out (bad) outsl std ss mov dec test movsl mov ret or cmp mov daa jp add push mov lahf out xor xor dec sub lock ret push cmp test jo inc test cmpsl daa adcb in fcmovnbe mov shrl cmpsl test sbb popa aam inc xchg push movb (bad) outsl xor (bad) pop test (bad) jae insb fs adc xchg jp pop pushf xor jb (bad) mov jmp push rolb mov adc adc sub push mov sbb sbb dec add roll cmp sbbb aaa pop cmpsb in dec xor pop es xchg ror or and add fwait jl add push das cltd or or xchg stc cmp sbb dec add movsb or push xor imul jmp sub imul int and add add sbb cs sbb sub inc xor sub xchg and icebp or xor push lret rclb jno popa pop xchg sarb mov hlt imul loop movsl sub jp js enter call or ds pop push popa and pop inc pop jmp add push cmp sarb jo xchg outsb dec insb pop (bad) pop fiaddl dec sbb mov push xor xchg cmpsb cmp aaa xchg icebp or add adc lock sbb movsb or jo sbb adc or mov mov mov dec loopne aam orl lea stos lods addr16 in cmp and pop xchg adc movsl insb inc or sbb and loop jmp dec jo xor ficom lea and (bad) mov dec cmp sub bound movsl inc add insl loope push cmp enter lea outsl cmp test inc movsl sub test daa scas hlt push or jl imul (bad) xchg jo test pop jo adc call cmpsb sbb cmp aad inc loopne movb adc inc sbb xchg sub rol sub xchg and divl (bad) jmp lret fs ret push gs adc mov movsb inc mov sub insb sub sbb push xchg rcrb dec das mov add xchg xor into mov add dec aas xchg pop mov test dec pop outsl enter mov fwait xor pop dec or adc leave out leave inc divl fnsave rorl pop mov fwait sub enter mov and push outsl inc test fcoml imul adc add lock and sub sub test in aaa pop add adc mov xchg add ret push xchg insl mov int3 dec enter inc fstl adc jbe xchg repnz lret mov imul mov sub jg xor inc test mov cmp dec cmp outsl nop mov jb push xchg xor or dec inc xrelease ss sub aad addb add sub xchg jne push sbb movsl mov sbb daa dec rorb lods outsl mov ss xchg mov add cmp sbb mov std jno xor xor push xchg or xor push jbe (bad) xchg xchg rcrb sbb push or mov imul pop mov fwait inc xor dec rcl adc mov or cmp cmp (bad) pop jno xchg xchg lea xchg cmp popa and jge pop pop ret loope adc sarl adc xchg pop adc rcrb test insb fs add push add jno testl jbe cmp sbb lea add dec sbb pop lock or xchg xlat adc xchg test clc shlb fildll test sub add je sbbl inc arpl sub and loop cmp adc xchg push xor test (bad) loope mov push inc dec inc leave and movsb pop sbb mov movsb imul xchg pusha lock jg cmp sbb lret mov movsl jns inc mov das loopne (bad) and rol scas mov xor jge mov les pusha (bad) or xor inc cmp mov lahf popf inc mulb sbb pop lods push imul xor je stc mov sbb xor xchg mov leave dec adc or xchg (bad) call push ror dec out push pop xchg adc and nop mov xor xor sbb lahf nop jge inc pop movsb inc or into fisttp ret daa push rorb mov add push push cmp es loop movsb adc sbb jg cmc add ds xchg or outsl loope sub push xchg inc inc cmp mov cmp pop mov mov jo imul push add or (bad) fcoml (bad) xor js test or add xor push repnz in push sbb adc jo xchg shlb outsb cmp aaa fs xor cmp pop icebp pusha or add pop or sub and dec mov xorb sub mov sbb sbb push jo bound fcoms or sbb xor add inc lods add sbb adc test add cmp popf loope sbbb lock adc icebp jg nop sub daa adc push mov sub ret or and in sbb les ds sub addr16 shlb es and sahf mov pop mov mov orb add or mov addl (bad) xchg movsl xor adc mov daa dec mov push test push call dec pop mov pop ret sub inc mov dec push pop sti and cmp sbb cmpsl and aam or call dec push add xchg (bad) push sar xor je shll adc test sbb jno sbb ljmp pusha imul and or add paddq cmp push xchg dec adc ljmp mov je sub (bad) add pop (bad) hlt sbb add cmp sub cmc jae subl adc fild movsl xchg push lea jp inc jno imul mov and (bad) jb mov xchg shl xorb push rol adc cmpsb and mov sbb nop sub push pop pop addr16 pusha insb aaa mov and sub sarl int3 or push movsl subb cwtl aaa and in adc out loop dec mov or add push dec ret xor stos jno cld add sbb or inc pushf jno mov push inc push pusha push mov and sub bound pop or pop lock mov punpckhdq dec rcl data16 xor add or push push pop outsl loope add pop sub push inc cmp xchg lea lods xchg mov and enter adc mov test sub rcrb xor sub mov lcall xor xor push cs cmp flds xchg cli out and adc add dec bound enter or adcb jp mov sub movsb dec dec xchg xor xor rclb and xchg adc fs test xor adc imul sbb sahf sub sbb sub and pusha add lea insl jl (bad) cmp or std mov adc push (bad) js cmpsb loopne mov sbb add cmp js stos and (bad) mov das call sub mov fs jne daa or jb cmp push add dec into pop push ret lret mov add rcl test or inc mov dec pop out sbb add das inc jp mov popa xor test loopew xchg pushf adc in jecxz adc xchg and xchg call fistl sub add mov aas and or xabort xor test (bad) popa fstl add in fild xchg xchg sahf xchg (bad) test fcomps (bad) mov inc push out push mov cmpsl inc cmp adc rcrl mov dec xor fisub or and cwtl and or sub or jecxz (bad) iret jmp jbe add nop push and fs insb loopne loopne rol ret nop mov push push or imul sbb loope adc addr16 push (bad) pop xor xor sbb adc ret cmpsb ss pop add push (bad) cmp sub mov rorb xor xchg pop or and int mov adc aas lock cmp outsl lret pop push mov inc add or (bad) mov dec dec jns adc and or leave cwtl daa int3 (bad) or sbb test cmp mov inc addb mov mov cmp xchg mov jne aam pop fistpl mov mov adc dec xchg jns rclb dec adc sbb stos aam lret sub xor loope push dec aas fidivl and add mov gs lds insl fwait andl mov mov cs (bad) sub add mov movsb test gs inc sbb xchg int3 inc jnp mov push sbb test aad adc xor and sbb xchg addl sarb shll xor addr16 xchg (bad) sar imulb (bad) sbb sub pop shl push mov cmp das mov gs mov xchg adc jbe adc sub sbb push sbb bound pop cmp pop dec test adc dec xchg iret pusha sub sbb xchg mov jb and cmp test sti rep loope ret mov push sbb cmp or aam ror add movsb ja sbb sahf enter movb jnp (bad) cwtl jp push loopne imul enter and orl jmp push push ret xor aaa inc or adc imul fcomps cmp mov or mov aad (bad) push mov insl in and and and mov sarb cmpsb xor fsubrl mov or push out out and jmp (bad) lock push adc add xor mov sbb xchg adc and jne sbb inc repz jecxz jne sbbl (bad) and push nop sub pop ret or pop ljmp test pop sbb xchg popf (bad) rcr or test and call lods cmp lds mov xor or mov jge mov and adc test pop mov jecxz outsl and std push and or xchg add stos xlat or xchg add and mov push inc jecxz mov hlt mov pop pop mov lahf sub xchg lret addl ud1 cmp rcrb shrl add aaa dec sub clc pusha mov add xchg cmp and subb cmp inc lock cmp loopne xor mov push cmp mov add sarb mov push test adc je and or xchg pop push xchg adc xchg fldl xor inc inc xchg or fdivl inc lods xor sub inc pop ret dec into push test add insl fimull xor push adc sbb pop sub sbb push std sub pop xchg push in in xor add pop sbb fisubrl push stos add jmp adc cmp xchg gs ret ds push (bad) xchg pusha xchg pop outsl pusha imul sub imul xchg mov xor sub aam adc adc js pop xchg xor (bad) mov movsl cmpsl lods inc popa inc ss inc pop enter add sarl add scas or lods cmpsl cmp test sbbl push mov ja xor outsb push lds lahf push mov cmpsb mov xchg xor push xor or mov ja lods add ret les sar mov xor adc cmp icebp in ret dec and mov mov xchg test imul arpl and stos sub stos ret sbb dec pop or xchg xchg and xor mov mov mov fbstp hlt aad xchg in add adc pop or loope test push and in loope rcrb pop dec out lcall dec push dec xchg inc mov sbb leave fidivrl cmp adc pop je nop push movsl pusha jae inc add mov jb mov mov push sub xchg pop stc push mov push push sbb lret jp adc add jle aam imul cmp je or enter mov test sbb push sub xor out xor adc xchg data16 push in sti xor mov lock push mov push lret adc sub jno or es sub shrb sbb xchg push push mov ror fwait xchg mov dec push shll loop mov cmp fidiv mov jo sbb jo sub xor or xchg mov cmc sbb jmp or mov xor cwtl cmp insb dec inc and sbb imul inc ja push inc cmp or xor and pop xchg daa sub xor (bad) dec cmp popf sbb imul jmp sub cmp fmull pop add sbb xchg inc jns andb nop ljmpw pop lock int3 mov dec xchg sub enter xor nop adc mov aam mov stos inc pusha xor cmpsl (bad) in test test inc dec add xor rorb inc (bad) sbb lock test nop mov inc sub sub xchg and inc and je icebp xchg sahf test enter mov (bad) xacquire mov add adc loopne popf dec imul fsubl push ret pop inc imul xor xor or dec lods lds push push xchg loopne jmp adc cltd adc mov dec call inc or mov push sub sub push push dec sbb rorl popf rorb icebp test int xor loop repnz test popf inc rol js lea push popa jmp fstl cmpsb xor dec xor or mov dec ljmp lret mov adc cmp sub mov imul sbb push add sar pop xchg xor imul hlt xor rol push push frstor movsl movsl outsb adc mov popf pop inc add stos cmc sbb fistpl push adc add xor sbb mov push or int3 mov push xor (bad) xor dec mov add dec inc and lods mov cmpsl push (bad) int aam repnz (bad) fs inc adc imul cmpsl and iret in add dec int push push and lcall not xor test jp imul xchg dec jmp add or (bad) add jne fs and roll outsb or gs xor xchg cmc aas xor into xor xchg mov sahf add les mov rdpmc movl cwtl mov cmp lods adc add rorl push or inc sbb sub pop push adc pusha mov aaa rcl mov or xchg pop add loop pop inc test cwtl shrb aad cmp ds pop sbb ss rolb imull popf fistp sbb and pusha push and push stos into xchg mov test push loopne xor rolb pop xlat pusha push xchg or outsb popa adc pop mov or movsb add dec aas call inc dec cmpsl mov and fildll sub divl jnp sbb mov in mov lea sbb inc xor push sbb pop push outsl and and pop int jmp push cmp roll dec (bad) lret lea xchg rorl clc sub cmp leave pop aam rolb inc or xor stos and push inc or repz mov mov xchg and into test sub mov test test or xchg fisttpll adc loopne xchg lods cwtl es cs cmpsb xor pop out mov adc bound cmp out adc movsb adc and bound test (bad) lock cld pop daa cwtl dec xchg sub and cmp sbb add add adc dec test sub cld lahf xchg and mov xor dec xchg adc imul jbe xor add mov mov mov sbb and outsl lret push arpl mov sub inc test sbb icebp add cmp mov add iret mov in jp xrelease enter or les inc rcll imul mov popf aad xchg addl sub movsb aaa push orl and leave test xor stos add inc popa sub cltd aam dec mov pop xor imul out popa or and sbb adc jecxz cmp sbb int3 andl dec sbb adc cmp xchg scas mov ret jle adc add dec inc and jns xchg push push xorb xor pushf mov sub dec in inc jmp fild mov dec xchg inc or mov addr16 sahf and mov add xchg lahf subl inc pop or pop mov push mov sub push pusha jne mov arpl and mov jp jb scas pusha (bad) fcoml iret adc xor push mov rorl and mov pop popa jo adc daa pop mov cmp or mov inc adc popf jp add sub pop out lds push repnz pop leave fwait ret adcl cs mov lret call push je test cmp test xor dec ret xor loope mov xchg jo jo mov bound int3 dec push jb dec ljmp pop adc sub enter adc cmpsl stos test push or mov inc cmp cld in test in repnz mov xchg push jp fsubrl test and or xchg dec fdivs (bad) cmpsl jmp dec fwait popf popf fs ss pushf adc inc lret rclb sbb xchg imul add jl,pt les mov (bad) inc or jb int3 in addl cmc jmp es loop cmp xor ret sbb cltd pop push sbb pop jmp sbb movsb inc repz movsb xchg add inc or mov sub lret inc xor aas scas inc lods xchg sub push mov pop and jns repnz rcrl xchg test add jp leave or add or or push and add fldt add mov jno cmp mov ljmp aad jl adc js push jae push sub push data16 ss push and pop sbb mov imul ss mov inc xor daa lret and adc lcall mov mov dec and outsl pusha je cmp (bad) jo jle roll xchg or in scas (bad) mov push lcall ss add loope push (bad) jb leave cmp shrb mov lock xor and and dec mov mov imul in lods rorb adc xor imul adc or pop loopne sub ficoml or cmp sub aad pusha mov je sub (bad) mov or mov inc xchg arpl cltd ret sbb xorl cs xchg sbb pop shlb xorb xor or imulb testl ss and fist or xor addl cmp xchg dec add xchg dec xchg ss pop (bad) fwait sub sub add pop push jmp scas add popf and xor add test enter xor sub lahf lcall popf lret xchg ds imul sub add or cmp mov cmc jns (bad) and imul arpl add mov xorl gs popa mov mov addl loope pop or hlt (bad) sbb icebp shrb xor movsl fcomip icebp inc adc or out popa dec cmp dec sub cmp jno pop loopne dec sub push sbb or adc fbstp in add xor add mov push (bad) orl push push push and push or sub inc imul adc cmp pushf mov jmp (bad) hlt fmuls cmp fimull andb adc pop add mov or inc xor mov add and fnstcw rcrb arpl in imul lcall (bad) mov pusha fsts (bad) inc lret shlb lods sub sbb or xchg sbb inc lret sbb cmp pop jno dec push fs cmp adc repnz shlb lahf jae sub sarl push in nop mov mov js xor mov rcr sbb pushf push inc and xor loope pop pop ficoml lcall jb pop push pop inc into daa or cwtl xor nop cmp jmp and or add in or pop mov sub rcll repz push and xchg daa icebp xchg mov clc pop xchg cmp inc adc movsl add test or add xor sub or popa push pop lods xor or mov mov push pusha mov inc lock add loopne fstps daa fs and dec cmp jmp jbe dec push stos xchg xor or or cltd fwait push aam lods imul sub inc mov xchg les push or cmp lea dec leave xchg or and inc nop push lods (bad) jmp cmp push add xchg xchg inc pusha les popa jecxz inc fistp enter jmp icebp dec fldenv adc push popfw lock inc es dec cmpsl or xchg dec pushf xchg push and je bound std xor or xchg icebp inc lods xor sbb inc dec test gs add mov stos pop shrb sbb xor insb push mov inc neg adc dec and iret and push adc add or adc xchg out sub pop cs and jmp push sbb pop or mov pop lea dec movsl and insb test add ljmp scas iret stos rolb inc push or fstl xor mov test xor ret dec cmp addl les push push in or add movsb sbb je and cmpsl xor mov push jge mov loopne inc ss subl and sbb dec out mov scas test xor js mov mov (bad) push jns push dec loope test lods mov or push in mov mov xchg aaa adc mov dec addr16 rol icebp xor jl les popa dec movsl xorl adc sub push mov cmp xor divl insb adc test inc pop ja mov adc lods jno (bad) adc xlat fisub dec daa mov xchg fs fldcw adc sub lret add xchg pop sub xchg sub mov dec add cmp jns mov inc push add enter adc cmp les push and bound ret arpl mov es je cmc stc ljmp xor xchg cli mov fbstp inc dec adc mov sbb jo adcl dec xchg bound adc js or push jb aam adc lahf jo xor in adc or mov push or mov adc add or inc test jnp push fnstsw mov shlb or rcrb or dec and mov (bad) (bad) xchg lock sub cmp clc inc adc sbb imul jl jae addr16 bound daa or scas xor sub mov and mov je inc push cmpsl xor xor sub inc gs push insl (bad) xor sbb or imul xor inc adc xchg add fwait test sub add xchg mov and ret lret mov (bad) lock in and inc rolb imul outsl mov jl jb sbb mov pop pop sbb dec jmp push cmp arpl je test in jno or push addl cmp movsb sub movsl inc pop shlb fdivp movsl dec jge movsb mov pusha leave pop addr16 sbb mov xchg inc cmp sbb and ss and ficompl and (bad) inc pop mov cmp and fdivs cmp mov test cmp aaa push xchg and and add or loopne test sbb xchg push loopne push or inc cmp xor sub lods enter arpl and gs add mov mov adc pop adc xchg lods jae jecxz sbb dec sti push gs das or xchg loopne cmc and imul shrb cmp not dec cld mov jno push movsb adc dec dec mov push and das lret mov sbb rol call xor mov inc (bad) lds rcl adcl std inc daa sbb and fucompp xor ss pop xor in outsb aad pop test movsl outsl test sbb pop loope sub pop sub dec mov mov mov jb rolb pop ljmp pop mov pop add js imul inc push cmp cmpsl pop fild popa mov inc pop repz jg cmp lds ret sub push mov mov add das cwtl dec cmp jno cwtl js mov mov loop inc leave push shl inc push xchg inc push sahf or ret addr16 push mov sub mov xor leave mov adc jp mov inc adc push addr16 lret mov mov push (bad) lock xor inc jo inc ret or xor dec imul (bad) shlb (bad) into xor int xchg pushf sub movsb add rcll fldl pop pop imul sub xchg ret and sub cmpsb andl push mov pop xor loop or inc pop es jne adc jne push data16 int3 jg push shlb ds inc imul icebp add mov leave fcompl dec daa outsl mov sbb js call pop (bad) roll sub in jnp and xor mov xorb jl mov xor nop rolb movsl or (bad) inc shrb or aad add or xchg and push or lret adc cs inc test pusha jo xor jmp fdivs mov int sub mov add or sub or xor in mov stos adc jnp movsb (bad) jmp andb cmpsl test test (bad) mov or addb adc xchg xor aaa jg iret sbb add pop push cmp enter lret pop test jns sub xchg loope and xor mov insl or outsl loope push leave ret pop add jno loop jb jp outsl movsl and push in icebp inc mov and dec dec xor pop fldenv (bad) xor xor adc adc and push idivl stos dec (bad) lock lea mov addr16 jo xchg mov xchg rorb inc add dec pop test xchg rorl add cmp dec mov sub fs push test adc imul mov add inc mov jbe pop sbb pusha and adc add cmp dec inc mov or and cmp shl add add je pusha push sbb ret test inc test cmp fs popf xor pop nop cmp push xor inc dec sarl jmp (bad) cltd ret in add subb lds cmp or jne xor sbb aas pop pusha and and xorb inc xchg push cltd sbb xchg cmp pusha mov push dec lss adc xor add outsl cmp bound in ret mov xor xor int mov int3 adc add test pop (bad) adcl data16 dec jge mov (bad) mov adc lods popa and scas mov sbbb scas mov hlt sarb cmpb ss and adc xchg cmp sbb push rolb daa sub xor push adc test lret xor jnp inc rorb fsub ret and bound pop (bad) aam inc scas cmpsb xor adc pop cmp mov pop adc rorb arpl test mov push fs xchg mov xor test xchg add arpl stos sub cmp (bad) test roll jp mov or repz and jbe test mov sub and xchg arpl das add pop loop call test and or cmpsb popa adc dec push hlt arpl sbb movsl andb xchg loop fbstp push dec popf test and push mov or and pop cltd je fimul add mov xchg xchg into (bad) jb loop aas xlat xchg std cmp fs cmp sub and flds sbb fstpt ss push fwait jecxz ret add xchg mov scas (bad) fisubrl push dec push push push and mov lds xlat pop cmp leave (bad) (bad) xor inc pop dec sbb rorl dec mov mov popf jge loopne pushf and or aaa subl mov icebp add es mov leave lds sahf rcl sbb mov loope es push int jne ja mov ret xchg fdivl daa cmp daa or pop addb rolb xor adc or bound insl loope pop fist fiadd sbb lods and cmp sub or sarl in mov xor ficomp andl (bad) and dec (bad) lock cmp insl mov sub and push lret xchg cmp or mul enter shlb aaa xchg (bad) cmp fiaddl ljmp nop mov lahf scas sbb xchg mov adc (bad) dec push adcl popa inc push add xchg mov and add or jae mov jge mov and sbb pop xor jno sub cmpl daa adc or adcl cmp jns sbb mov inc popa sub rorl xor cmpsb es mov sub mov sub xor enter arpl and cmp rcrb call stos mov sahf test fdivs push push add les ljmp loope inc fs xor inc cmpsl and xor shrl pop stc add or repz inc pop mov push test add inc mov test inc mov and ss or xchg xchg dec mov mov xor pushf das mov hlt addb add xor jne jo jno jmp in jmp push in lcall add xor inc pop and xchg (bad) ja cmp push rcl add pusha add xor jmp xchg into rclb and adc movsl xorl pop enter inc jle pop addr16 mov pop pop and (bad) pop xchg jge or push xor lds mov adc mov xchg test xor loopne or mov dec les pop cmp add mov xor enter jmp movsb add gs dec jecxz sub iret je test sbb dec xor xor test jno sub (bad) aad imul (bad) lcall xchg loopne sarl and xchg (bad) cmp in imul add js mov inc jp and test xor cmpsb jne sti jmp loope sub ret pop cli sbb data16 adc pop (bad) push mov fidivl inc dec (bad) xor adc cmp (bad) or inc fidivl es mov insl push sbb sbb lea dec push pusha imul ret xchg arpl add xor sbb add add mov push fbstp jp xchg or mov mov (bad) mov movsl fnsave cmp cwtl add xchg fnstcw jne popa mov push loop push pop add aas xchg add xor (bad) sbbb in push punpckhwd mov aad pusha add fadds movb insl sbb fs jge loope nop sub pop roll push and adc rolb or dec jl sub mov bound dec cmp ficom inc imul pusha jmp adc lods sahf dec nop and adc je sbb mov imul (bad) inc popa xor popa inc push (bad) in pop dec movsb fs xchg insb aam add inc inc aad pop add jnp xchg gs mov pusha xchg jge pop sub sub cmp and adc xchg gs sbb add orl mov dec popa outsb add fs xor push rol xor arpl inc push cmp jg adc add add insb lods lret jbe mov insb xchg and dec add out xor int jo add sarb sbb test xor adc add or adc or and mov xchg jmp mov mov cld cmp inc or xor cwtl out push fadds adc nop test ret es xchg and xchg xor xchg adc (bad) rcrb xchg dec or xchg push lods ret cs or insb xchg xchg dec sahf push xchg mov add shlb dec or pop fidivrl sbb xor fwait push adc loopne or cmp sbb inc or subl xor pushf sub jae loopne pop push ret pop jne sub sti push inc sbbl jb xorl fstp add push add cmp adc addr16 cwtl and or pop and nop mov push dec lahf push pushf mov pop cmpsb push and or xchg mov pop mov dec push and mov pop aaa mull mov mov cmp cs inc dec add mov addb push ds inc ljmp mov inc outsb inc add rcrl add (bad) rclb ds mov and arpl push inc es pop cmp pop xchg rorl and insl pop inc cmp (bad) adc fisubrl mov inc xchg or lods arpl repz or add test or jg outsl add mov mov sbb sbb inc add pop inc ret push nop pop xchg stc outsl ja test pusha jmp cmp pusha pop mov pop inc sub pop dec dec data16 push imul jnp mov jns mov mov xchg xchg sbb mov (bad) iret cmpsb pop andl add push sahf mov pusha or mov int dec or (bad) mov bound int cmp jo (bad) std out inc mov lcall and inc rolb inc std in jnp test je inc xor dec sarl push jae xchg sbb inc mov adc insl fbstp rep rol or aas addl gs out or pushf clc xor dec icebp add ds and or imul or xchg lock or sbb jb xchg ja in pop add fucomp mov mov adc (bad) mov push icebp push cld push adc xchg xchg imul jmp jns xchg and mov xor lods push notl ss ds mov pop bound xchg ds pusha mov push and fisubl adc sub pusha dec jns xor cmp hlt movsb push push sbb popa sub jno rclb out test call dec mov mov subb rol movsl xchg and mov add (bad) push xchg push cltd ja lds gs and movsb ret fildll mov out mov cmp std sub (bad) xchg sbb push ret mov push xchg dec aad lods inc inc pop in ret mov mov mov lahf lahf xor and iret adc inc xlat test rcrl dec lret ja adc sub xor mov out xchg push rcl fs rclb pop pushf movsl cmp divl adc jae lret dec and cmpl add inc xchg sbb fs sub andb inc lods fisubr (bad) mov fldt adc push add dec test xorb bound in inc jl ret add in add sub add mov push movsb sub addr16 or aad dec js sub lods or mov push out dec rol adc xor es inc mov fs jae xchg xorl jge push pusha arpl or aaa lahf inc sbb inc movsl shlb xor sbb scas rclb fsubrl arpl adc imul cmp adc inc mov nop lahf mov jno nop es imull push jge loope (bad) aaa cltd cwtl or outsl add lret (bad) push loope es adc hlt mov sbb movsb cmp pusha int sub and pop lret pop mov fsubp inc sbb fdivrs cmp cmp dec imul xchg or popf xor aaa jns inc push bound movsb adc adc push mov inc addl or add jge and and pop mov push repnz push or dec mov inc sbb push and lcall lds dec lds daa loope adc lcall and and ret push fisttpl adc (bad) test mov shrl loop (bad) out push dec or (bad) xor cmp mov scas into pop cmp fcomi and mov enter dec sbb test mov cmp sub cmp test (bad) mov outsb cmp insb lods adc push add popa add or clc (bad) lock sub xchg (bad) sub js test jno fcoms popa sub add dec je loopne adc inc lods dec mov leave fsubr shll test add int cmpl adc pop dec add xor adc cmp out or and adc lds imul popa inc sub mov jne lret pusha insb mov or xor popa pusha cmp adc inc xchg dec xor les add ja aam dec call dec mov jb frstor rorl enter out adc and test add and fimul inc xchg inc fnop out ss inc sbb adc sbb das cmp es lods insb xor scas xor jp sarl mov cmpsb es hlt push pop adc js (bad) adc mov mov insb ficom mov mov cmpsb mov add mov gs and int3 mov aam xor xchg fidivl aad sub mov call lock ljmp xor adcl sbb adc add iret pop mov aaa dec jns stc loope jo push stc movsl xchg push cmp call mov outsb lret cwtl adc push mov pushf test push sbb adc imul repnz andps xchg popf movsl movsb addb xor push (bad) cmp add scas adc lock into xor sbb leave leave fwait out jne pop lods test cmp push add xor testl call rorb sub mov roll imul adc adc adc les push or movsb repz aad xor xor aam add fdivrp mov lret inc mov lods (bad) rorb push ret inc inc jo mov and roll in jno icebp cmp mov mov nop sbb mov lods and dec adc inc rolb sub pushf pop aam jns jp cmp push xchg sbb push (bad) mov sub push sbb in ret mov lods sub adc adcb nop pop ljmp mov inc xchg lods cmpsl xchg fsubl or inc xor scas and je push inc pop out imul jo into test pop and inc pop jg rolb xchg pop rclb xchg inc sbb pop fs add inc cmpsl jnp shll pop sha256rnds2 outsb lods mov sbb xchg push push push inc or xor add xchg rcrl xchg push nop cmp sbb repnz pop fisubl popa fdivrs in xor sbb adc int3 sbb mov (bad) pop loopne fdivr insb push or push mov (bad) aaa add xchg sub outsb or or mov pop and ret lods or mov inc xor xor cmp orl lret aam add mov adc test (bad) xor fild jg sbb cmpsl pusha cmp mov inc cli je inc iret inc aas shl loopne js pushf es dec jmp sbb test inc popa or leave daa ret mov jge and aam fwait rorb sub mov adc sbb jns cmp lods fcmovu xor add ljmp cmp xlat xor rol push fmul (bad) and cmp shlb adc and test mov xchg jmp mov sub rol fnstsw add pop fmul scas (bad) rclb movsl loop jge rorl (bad) sarl leave sbb pop testb test xchg and dec xchg or jl dec dec mov (bad) addr16 mov scas xchg (bad) outsb and mov fnstenv jecxz pop jmp cmp ret xor xchg sub cmp mov sub jo jbe lea mov negl sbb push rolb adc gs push mov bound jl and push inc rorl ror rclb xchg cmp push mov jmp imul xchg dec shl decb lods sub xchg dec pop iret lret sbb cmp loopne inc imul add cmpsl xor pop mov jg xchg or xorb pop add jno or lret insb xchg push adc inc xlat insb adc es in daa fisttpl cmp fs movsl push dec add add mov mov cmpsb sbb mov sbb pop outsb pop (bad) call cmp push jp aaa jne add xor mov jno sbb fdivs (bad) rcr and cmp xchg xchg addl sub test movsb popa dec icebp outsb pop add imul imulb (bad) xchg movsb adc mov outsl in movsl jno (bad) in and or xchg pop or out orb xor jb xchg lods sbb inc dec clc add popa adc test cmp add sbb insl aas (bad) mov pop (bad) jo rcrl inc cmp mov xor sub mov add inc add lret pop adc and (bad) sbb (bad) push jno add lea jnp dec or in jp xor imul shll push mov sti lds or cmp lret iret dec pusha pop and stos or mov cmp sub loopne jb adc pop into lcall push push xchg clc popa imul xchg xor imul and mov add sub insl rclb mov adc sub lods outsb fnstcw mov dec scas mov push adc inc push mov xor icebp xchg push mov orb mov aad ret (bad) xor cmp mov cmp or enter or (bad) push mov pusha pop add dec push add (bad) and (bad) xor divl pop xor ss fwait imulb test push test xor and xchg call addr16 cmc sbb psadbw adc popf add lods add movsl ljmp sbb add movsl and mov xchg jmp inc pop lret or pushf in (bad) movb pusha cltd rorl xor int das sbb cmpsb xchg movsl imul dec aam or push add push mov arpl mov in add pop mov xchg cmp mov push cmp cmp pop inc nop aad xchg mov push xchg rcrl and pop push xor sub push (bad) shrl dec xchg dec jae jecxz js dec cwtl xor rolb ret or or sbb add fwait lcall in push and lods xor sub mov pusha xor and cmp xor loope icebp adc icebp inc inc ljmp cmp dec mov and adc xor addl adc inc (bad) or add cmp jge xor ss pusha mov mov in call sub lock jbe dec xchg enter or imul orl mov push or stos add mov pusha add mov jge or movsl sub jg push add out cmp inc xchg cmpsl sbb push mov cmp or pop pop adc adc ret xor xchg test xchg test dec add mov mov inc push out jae test pusha mov sbb outsl roll xchg lods lds sub std (bad) xchg lods and insl nop xor enter and jl aaa jg les sbb xchg dec les les sti dec lods push fimul out push sbb mov or dec jmp (bad) addl adc ret or in mov adc aam cmc or add mov xor add mov shrb push mov movhps in push jo adc ss xchg ror pop dec push dec mov out jmp adc xchg (bad) (bad) ljmp loop lds icebp pop ficom mov or sub jmp xor xor mov shlb push nop (bad) shll and (bad) xchg and mov loop loope addr16 hlt test adc clc std pop addr16 pop cmp sbb nop test aaa mov sub push ds out jnp add xlat dec lret ret ret xor (bad) sahf sub or mov jae dec ret out test sbb mov and pop pop and inc mov shlb mov ss rolb dec icebp dec xchg aaa js or jns cs xor add insb scas mov mov sbb sub sub mov xor add sbb addl cmp or pushf (bad) ret ficomp adc mov int3 sub rclb test and fs sbb pop xor adc dec sub adc loop mov les gs mov and adc xor mov xor jmp test mov mov push mov ret inc sbb enter sbb icebp (bad) divl adc popa das int3 push adcb inc push sub fsubs pop sub fdivrl loopne gs ret in dec jmp imul and and fwait add lret pop dec js jno stc and sbb outsl jecxz adc popf test xchg movsb inc sarb pop mov ret add dec xchg call ret enter test lahf and add gs leave push ja test xor sbb outsb or add sub mov leave cmp aas mov xchg jo fisubl mov xchg lods and fsubs xchg adc je iret andb xor xor in test cmp mov inc loope mov dec mov or imul sbb sbb sbb bound es test mov sub push hlt mov mov imul inc stos mov push or (bad) ss (bad) xor jnp loop cmpsb jne mov xor call ja fild or test jp lods add or imul lcall mov pushf das or mov test imul mov cltd xor stos cmp addb aaa add fimull cmp mov push test dec ret cmp stos ret push lock add sub add xchg ret cmp shlb insl adc (bad) xor mov lods cmp inc sbb dec dec xchg and test lods imul (bad) mov inc or jmp inc lods jg xchg mov aam aam adc inc add test ror fsubrl fnsave add rolb inc xorl sbb ret popa test mov inc jp ret add jge js sarb sub sub push sbb mov sbb test (bad) or sbb add aaa xchg pusha inc sub test aam dec ljmp sbbb push pop out dec mov repnz add xchg and mov mov inc xchg in outsb pushf pop rcl lea push mov daa arpl push shll dec and mov and adc sub orl and adc in push cmp and data16 add (bad) pushf fs adc popa xor add xchg popa jae cmp leave (bad) push mov inc mov int3 mov out loop ret push lahf std or push or mov imul mov mov inc pop dec orb sbb cltd xor loope lods aam and xor sbb gs push inc add incb mov cmp test sahf push dec fldl dec inc pop je mov jge (bad) or pop adc add adc imul loopne lcall outsl arpl loope push push dec add mov lods mov mov mov xlat incl int3 sub mov dec and xor sub inc fs jne int3 sub dec xor popa inc cmp jl mov icebp xor adc add jle inc push inc lods fbld or out ret cmpsb mov xor lea fcmovnbe adc imul fdivl inc out xchg insl inc movsl mov and stos xor push push inc daa daa outsl mov (bad) fwait pusha adc add dec xor jmp xchg pop and cmp xorl fldenv adc push and orl push aad loope mov xor pop or roll addb sbb xor and xor inc shlb icebp inc inc mov jecxz repz xor add xchg mov dec rclb add push cltd (bad) or sarb sub ret dec xorb sbb xchg sub xor mov js addr16 and mov and cmp push arpl (bad) lods mov rol jns add inc adc data16 sbb lret dec add pop pop les in mov adc aaa test in xor push add add xchg jmp (bad) xor movsl add mov sbb sbb cmpsl add loope test pop push (bad) aam movsb dec dec add ret mov sub xor dec pop (bad) xor (bad) dec test mov scas or mov and xchg dec dec insb mov daa and stos cmp push push xor inc fldenv mov or mov dec addr16 mov movsb mov push scas add lds xor mov mov popa movsl outsb rorb xchg stos shrb jno pusha inc cmp pop aas dec jmp (bad) mov int3 out cmp or test push xchg lock in dec aam (bad) xor stos and xchg movsl cmp adc addl add adc pop xchg movsl lret sahf out jno les xchg jge sbb in xchg push ret push out les xchg das dec (bad) or movsb adc insb dec xchg (bad) loop test xor xor xchg xor pushf cwtl int arpl mov push inc rep (bad) xchg insl jns icebp and lods cmpsl cs xor lcall lret popa sbb clc leave sahf add sub ret jg orl inc mov adc imul push ror pusha or cli rorb pop adc cltd ret or bound lods fadd and xor sbb dec leave sbb pusha mov mov sbb cli mov dec mov test loope repnz mov arpl inc dec movsb xchg mov add mov je ljmp into pop xor xchg push aaa xchg (bad) dec mov punpcklwd add ss mov xchg insl cmp lcall add adcl ror inc aad mov das adc fadds pop enter mov fistp push pop in rcrl test sub xor add pop je xchg adc es sub or fildl adc cli xchg andl mov cmp xor sub mov or jno xchg xor mov mov push fwait ret rcll lret jo push adc xchg test stos push mov pop cmp popa and lods sub sub push pop or (bad) mov push sub push or into xchg xor std xor inc mov (bad) je mov arpl rcrb mov add mov adc repnz ljmp adc test int addr16 or and mov loopne lret inc and pop and mov cmp inc cmp jo sahf cmpsl stos rclb lret popl adc nop test cmp addl and sub mov pop rclb (bad) mov repnz shll je iret adc cwtl movsl jmp mov sub in aad adc sbb rep scas push aas pop cwtl (bad) push cmpsl lea mov gs mov sbb lock pop fdivs (bad) and xor outsl rcrb mov fisttpl and dec push aaa enter popf shrb popa mov lods flds loope add (bad) sbb cmp pop sub and (bad) xor in push pop or xchg jbe sbb mov outsb mov iret jns insb pusha je icebp add cmp xor popa add cwtl test dec outsl sbb pop test test aad lret mov cmp dec and dec or fs xchg loope fildll pusha popa insb sub jp add and movsl lods test sbb and inc popa mov dec cltd outsb xchg mov shl jne mov outsb lock addb cli dec (bad) xchg mov xchg jns mov imull popf and pop adc movsb mov test cmpsl aaa push pop and lret leave les pushf xor les inc cmp loop xchg dec xchg xor add inc push lahf push lret inc call add fwait arpl pop or dec mov mov cmp and jbe cmp sahf cs mov pop arpl add imul dec dec push sub sub int3 fimull and rcr lds leave adc xor push add cld iret or leave cmp push sbb movsl sbb pop cmpsb pop inc lret fist cmp (bad) icebp lods pop sub add add inc add daa adc flds adc nop pop sub add lods xor ret jae jno cmp fiadd pop pop aam cltd fimull jo aaa push (bad) popa sbb (bad) lock fidivl enter cli jnp (bad) add xor mov movsb add movsb add lods jns rol xor add sbb mov push push lds inc movsb cwtl dec xchg int3 adcl arpl rorb dec jo ret xchg or fs daa xchg dec repz or (bad) leave cmp rcrb add les arpl cmp add roll xor xlat or lret outsb dec imul adc loopne adc mov add adc aam mov and cltd cmp cmpsb add cmp push repz fidivl or popa loop mov rcl aaa pop cmp push pop ret scas cmp daa dec andl push stos sub cmpl gs ss mov or pushl imul test dec outsl test mov pop out arpl (bad) push hlt mov add int3 dec push or push mov movsl clc cmc xchg mov pop test clc rclb push aaa test push aam and stos inc mov mov cltd xor xor pop sub adc mov pop pushf imul sahf jnp test mov xor add sbb lret stos or mov or mov jp pop push sbb sti cmp mov mov xchg loopne jle adc sub arpl inc inc adc push mov xorb popa lahf xor arpl and test enterw fwait imul inc call (bad) mov sub mov std (bad) addr16 xchg add adc rcrb mov int xchg jbe or leave outsl sub lods pusha andl jle mov cmp add scas nop rclb inc mov xchg xor pusha pushf mov dec mov inc dec sbbb sub xor pusha iret xor inc nop dec sbb dec lea mov add in mov (bad) fs (bad) int3 xchg mov xor sbb xor sub les lock cmpsl xchg jb push sub les cmp movsb xor pop add imul arpl add stc imul or pmovmskb add aad add dec pop arpl insb outsb test je jmp mov dec (bad) xor xor ret aas inc lea add pop dec (bad) in clc xor xor add loope (bad) aaa cmp (bad) cmp inc adc mov add loope pop call bound add push mov add cmp add sub popf data16 xor sbb push clc les (bad) shrb adc add mov fild adc scas mov xorb xchg push add leave and ror mov sbb mov lock mulb je and dec pop std cmp inc (bad) jb (bad) xor pop fstl inc jns mov and xchg in push dec pop mov out cmp sbb lods mov shrb mov fldcw add sbb pop dec sub dec mov sbb jno adc sub mov lods fs add or push xchg sub adc hlt lahf xchg push (bad) inc cmp or xor insl test pop xchg cli xchg push leave es pop ss test mov add mov lahf push dec pop (bad) adc or push and repnz mov jnp push scas test ror ds inc mov hlt lods fldl cs cmp mov test imul xchg xor imul jns dec sub mov xchg push cs fnsave sbb xchg (bad) push stos inc and or mov sub call mov into mov xor mov and or mov shr pop inc jl js orl xchg jg cltd mov or mov sub in out jmp test and pop or test mov arpl leave push ret mov test (bad) cld add pushl inc aaa inc push rclb lds fimull push mov mov (bad) or dec xor adc adc jl sub mov lds outsl imul mov test adc mov (bad) cmp adc adc leave adc inc loope sub mov loope xor xor cmp add pop adc lock push dec dec mov jns add xchg xor int3 push sub xchg or dec imul dec mov mov pop cltd cmp add and adc pusha popa jl repnz add jo cmp rorb in test imul pop add jb scas outsl adc inc adc mov push cmc and jp inc add xchg xor lods addl xchg popf sbb sub jbe dec imul mov aam or ret insl aas lods dec or push and push add lock adc xchg lods or sub add add loop fnop dec push (bad) shll ret mov push das cmp ss popa jnp loop (bad) icebp cmp or ds inc (bad) ret or cli inc dec xor arpl jae lods pop and mov mov cmp or cwtl insb out fwait andb jl mov inc xchg push inc lahf mov sub out daa mov adc lods mov dec leave ret adc aad aaa adcl push scas dec out movb mov xchg dec mov push mov insl mov sbb aaa (bad) loop test sub (bad) popa or xchg jmp fwait pop pop and or rol loopne jbe inc dec inc adc inc movsl add fs rclb xor cltd xor mov or loopne cli les inc pop cmpsb inc or or (bad) inc sub outsl aas dec inc add ljmp xchg pop aam xor xchg and out cmp or dec dec and add jo les mov (bad) mov xchg orl neg sub jno clc movsl daa cmp test fsub or call sub fidivl or adc sbb or ljmp pusha sbb cmpsl mov xor xor adc or add add (bad) pop mov pop add adc inc pushf xchg cmp rolb or movsb mov imul sub sub sti jns xchg and cmc push inc lcall and gs aad mull fwait pop scas (bad) mov jno adcl mov adc pop pop mov jae loopne (bad) repz sub add inc push mov lret and cmp arpl xor dec mov jns mov sbb add sbb loop arpl pop or jne mov sbb lahf jbe mov push (bad) loop aas inc dec rolb inc loopne or nop outsb (bad) dec (bad) jl (bad) loopne fwait addl add jmp or or shrb jns sbb cmp cmp or add cmp adc push and je jae or mov (bad) mov xchg loopne movsl inc xlat push sub dec sahf xor or add push adc pushf (bad) (bad) sbb add fbstp jne mov or nop xchg adc dec sub dec cltd or xchg les or (bad) shrb pop xor or add (bad) mov add mov push sahf out xor (bad) sub cmp xor mov or pushf jne xchg xor dec xchg mov les test cmp pop repz test sbb arpl iret popa mov adc add call sbb push add push std mov mov add into stos jnp js test pop xchg in adcl dec add or cmp fdivp inc in and mov adc mov or or sub mov xor push test out and test and notl sbb and (bad) inc daa xchg nop popf test cmpsl fs jb push fcmovnu outsb addl les repnz fiaddl mov add push loopne push dec es fbld pop or adc mov mov mov and movsb push and ret inc aaa ljmp mov jnp jl pop rclb outsb lcall mov and mov ret test inc cmpsl pop mov mov shlb xor inc inc adc inc adc add andb outsl and cmp pop mov push test xsaveopt rcll lods in adc fwait and mov adc push add add sbb mov xchg cwtl xchg pop add mov sub dec xorb cld mov sub or les lret int roll sahf add repnz fisttpll fisttpl imul and push addb inc ror ror push inc sbb fucomp sub dec or jecxz addr16 ds jb push push orl in lods push mov adc jmp nop cs addl pandn insb pusha xor insb gs push lods sub add push sub jo xchg outsl sub dec mov mov add pop imul mov push add and or add sbb aaa lcall cltd inc sub es adc sub lds fldt mov ds sbb lahf mov or xchg das cwtl pop icebp push fwait nop xor cmp adc sub mov push sub aaa jl in inc mov push and push fcmovbe cmp mov xlat cmpsb push or add sub or js or rcrl addl mov gs and nop push ret sbb cmp les std and test cmp xchg gs loop sar dec and mov cmpsl xor mov push or (bad) sub gs or xchg adc test cmp pop pop movsb xlat orl arpl test adc in pop mov lea push add add mov movb inc lret jmp sub jge ret scas aaa sub xor or das pop adc xchg (bad) pop ret lods adc cmp pop (bad) ror js sub add adc aaa inc sub mov js popa (bad) adc movsl mov cmp add das adc insl sbb pop cmc add xor sbb and and xchg lds push xchg loopne rcll test cld mov add pop push xor and push push lods mov xor add xor aam popa test (bad) js lret push faddl cmp sahf sbb jg enter xor mov lret pop xchg dec loopne fcomps loopne xchg add add push or jp xor xchg push pop inc xchg push dec movsl aam xor dec mov sahf flds dec sbb xchg mov sar sub inc and scas push add adc push sub push cmpsl xchg mov sbb or in add and test cmc jbe push dec add or xor daa lahf aam mov xchg test lea add ss repnz lods sbb and into ret sbb in fwait xor pop popa fstps imul adc add inc orb (bad) mov and mov and lock mov pusha cwtl sub xchg mov jp and push and and ds and or adc fsubs test mov xchg jo adc adc test jb mov mov inc imul xchg jno sub push add ljmp sbb leave popa cmp push lea mov push inc sub int3 lahf jbe arpl (bad) insl (bad) (bad) pop mov mov dec arpl cmp scas (bad) cmp sub lret mov mov jmp pop adc rcrl test add adc inc cmp add cmpsl inc push test push lret ret setp loope inc fstps cmp bound adc push lret clc cmpsb hlt jae mov sub shll and xchg mov daa dec dec or (bad) adc sbb (bad) xor movsb sbb jle or sbb loope or adc mov push dec mov clc jmp mov adc xor mov or out cs sbb dec jno sub sub adc mov mov pushf mov adc inc xor cmpsl jo sbb xor add or push sbb mov xchg test xor fildl dec dec notl nop lcall into (bad) dec pop imul cmp sbb ss dec inc add cmp inc jo or xor sbb adc xorl rcr add ss sub pop adc addl inc lods inc fstps xchg popa sbb pop push and sbb xchg jmp inc fs mov push xor push add ss inc mov cs mull ja adc ss or or ds or in cmp push loopne and pop push pop movsb xor or mov inc ja arpl xor sub scas popa xlat mov inc ss dec or outsb jge ret mov xchg in mov add sbb cmp add inc cmp into xlat ret jne add inc cmp xor jg push ret pop dec pusha sbb (bad) mov adc adc cmp lea lods into fdivrp int scas dec xor adc shlb aaa jecxz cmpsl lods aas push xchg cmp (bad) mov mov ss lods add cs nop xor mov push cmp mov scas aaa lods cs lock arpl stos inc mov sub movsl mov add cmpsl arpl sbb lea dec cltd adc sbb ficomp add shlb jecxz sti jne add mov test mov cmp mov or (bad) adc test pop sbb sub cmp test jmp sub cmp (bad) mov push adc (bad) cmpl loope enter adc dec loope pushf mov cmp test (bad) xor ljmp test movsb adc add dec stos popa mov addb xor pop add movaps jle test add insl das pop cmp cmpsb push pop xor and movsl and lcall pop push adc push jge rolb mov adc adc sbb sahf inc mov out or lods lods and sbb sbb cmp imul inc fwait pop push sub imul mov sub lock fwait mov push inc sbb repz cmp pop adc xor stos test pop dec addr16 and cmp dec inc (bad) fdivl movnti (bad) xor cmp ja mov js inc scas push std insl xlat cmp or and leave xor outsl movsb cmp xor xor add cmp ret out call sub jmp sbb lahf loopne xor xchg mov mov or or mov dec fucomp (bad) sub test xor stc add add ret mov mov inc push dec fnsave mov addl cmp (bad) mov inc cmpl push mov jnp or sarl adcl push xchg pop mov push xchg test sahf sub or or popa imul xor inc and xchg rclb and xchg shrl insb lret mov test (bad) or fcoml mov test or sbb inc jge dec movsb push nop add fnsave pushf add mov dec pop movsb xor inc mov sub or lret push dec mov (bad) fstps lea and inc insb or in repz pop jmp xchg pusha cmp adc stc and flds xchg xchg mov das pop fbstp je xchg adc and sub inc js xor or add xchg in or mov loopne mov or add ja popa aam xor add push xchg and add pusha aam sub sbb sbb leave lahf mov adc adc push imul xchg cs jmp push mov or int cmc (bad) mov sbb and rolb outsl push inc popa adc sbb stos jmp xorl or add inc add ret sbb and es xor loop (bad) xchg mov lret jecxz sub add and adc in popa sbb cmp in mov pop hlt test inc and pop mov push jg (bad) hlt push adc add jo lahf nop add mov pop xor cmp mov sbb movsl and inc inc cmpsl sbb dec mov icebp mov cmp push sub inc xor push add jnp sub test arpl adc and and into mov sahf sub je push adc imul cmp push xchg push stc and fisubr rclb sbb es adcl insb dec js add sbb imul adc hlt or inc push mov ss rclb and ss inc movsl or cli jne mov cmp cmp punpckhbw (bad) iret out and mov loop fstpt sub jp popa imul lret insb or leave outsb imul cwtl mov or rorl sub hlt push imul aam popf xor dec add and je fistpl adc test ror rcl ret lret xchg xor pop movsl fidivrl hlt push aaa (bad) jmp fldenv add add and fdivrl xchg inc push or je ret push out push popa adc xchg add imul add jmp (bad) push push hlt (bad) mov jae inc cmp call xor add fisub push mov xchg sbb adc push and cmp ds imul sub push inc xchg pop add mov cmp (bad) or std inc inc and imul mov call jne mov test nop pop mov insb or stc or jo add jmp add and xchg push insb adc mov imul aaa nop cmpsl in pop jg aam mov pop sub addr16 xor inc js mov add or push arpl mov mov dec (bad) jecxz jmp loop push pop add int3 mov cmp and push push les mov cmp and and cmp inc mulps pop cld aam or add mov lret and popa mov mov pop pop sbb rcrb dec ret push push aad inc dec push scas xor (bad) dec loope pusha hlt dec pop loopne inc add xchg imul hlt aam rolb pop ss mov and shlb das adc pop mov popl sub mov pop test add subb sub push xor lods leave pop inc pop or mov daa arpl je pop es dec stc rolb mov (bad) or add cmp jno cmp lods xor bound or pop pop getsec sub mov test and push and xor and fisttp inc adc xchg mov pusha dec inc loop and or or sub pop js mov or or mov and cmp push sub mov adcb cmp pop (bad) add xor (bad) test adc cmp push dec sbb jns pop xchg and inc out dec orl xchg sub inc xor pop cmc rcrb xor cmp stos mov add adc add pop sub sub mov (bad) or movsb add pop inc test sub cmp push sbb test addr16 mov push ret shrl or out xor imul cmc jne leave cmp jo adc insb xor fnsave cmp xchg and xchg pop cld pop lods lods and addr16 in push ret adcl insb add sbb and rcll inc add ds jns cmp xor enter mov insl (bad) lock mov out or inc add sarb lahf iret rcrb js in push leave dec mov into out test push add iret xor enter sbb inc jl hlt test inc mov and xchg hlt jg sbb add push nop and xor scas bound ret lock pop and nop das jne add xchg push add nop divl sub or (bad) add xchg xchg xchg in adc popa push jo imul jne fild mov push sbb dec cmp sbb xor xchg movsl cvttps2pi push adc lds xor adc (bad) es and lods pop add xchg scas pop (bad) movsb sbb imull rclb imul pop inc popa xor in insl jbe (bad) aad xor add push xor push push call (bad) mov addb mov popf xor add cmp mov and sub int lods and or sub xor or and and mov inc xchg add bound enter pusha test test cltd add inc aaa sbb data16 inc adc add add mov xor cmp xchg sub dec es dec pop fadds mov mov xor loope xchg imul scas add fs (bad) cmp dec aad push ds pop inc inc lcall adc dec sbb cmp xchg lods shlb popa popa cmp pop push inc pop mov sub pushf movsl adc roll xchg add (bad) sahf pop fsubl dec push add and inc push (bad) push ss imul mov and add lds (bad) stos mov mov pop xchg and fnstenv add daa arpl addr16 (bad) add and sahf fs pop cmp sarb or sbb pusha pop shrb cmp (bad) xchg xor out pop sti jl popf adc ficom test sbb loop mov mov and mov movsl xchg or push scas fsubp aaa pop xchg cmpsl add ret addl inc dec add inc and pop sub sahf mov das xorl cmp (bad) xchg out es pop gs and notb cmp xchg bound stos sub jmp aam (bad) mov adc mov stos fistpl and xchg mov push inc test sub mov sub fsubs xorb insb gs in imul and dec mov aas aaa xor add dec or dec cmpsl loop movsb dec mov xchg mov inc push lods cltd je dec iret lds subb into add lret cmp cli lods xlat stos xor mov jo sbb and pop mov mov adc ret pop shll mov add or add cmc lea nopl xlat lock inc lea and pop mov inc adc inc imul pop pop shrb mov fs and rep cs push xlat xchg loope sub es mov mov stos push sub xor sub mov mov pop sbb jns add pop inc jl mov test cltd (bad) sbb pop dec or sub (bad) or imul int dec or mov mov movsb outsb lea xchg mov and sub pop jno mov add push inc sub dec push inc test xor outsb push out movsb push xor bound jg nop xor xor inc push push mov add imul add xstore-rng cmpsl inc ret xchg cmp inc cmpsl (bad) sahf mov pusha and fisttpll pop inc push xor mov sub repnz or xor cmp lods jo mov ss add dec xchg sub aam cmp insl stos les dec ret add pop push cmp mov xchg movsl insl jge andl sbb cmp dec push pusha fwait dec adc mov push pushf sbb test mov xchg imul mov mov add add mov cs je mov lds mov push sub xor jae mov loope pop mov imul or scas dec adc mov nop jp sti jp sbb inc mov lods adc jl mov ja test pop pop fnop les sub xorb or phaddw fadds mov or push xor stos mov dec cmp xchg inc or rcrl xchg push xor add xor xorl adc push aam daa mov inc sub test sub mov push fwait addb cltd cvtps2pd imul sub push cmc movsb mov int fwait pop mov (bad) rolb das loop push leave fcoms mov add inc adc jbe jo jl ss add add lock mov daa pushf repnz (bad) push (bad) xchg jnp jo mov popa out xor dec test (bad) sbb sub mov into stos ss pop test rcll rcrb fwait and sub ret sahf inc sbb add (bad) mov adc and add shrb push add sbb cmp inc push push add adc xchg jl das mov mov push rorb or rcrb dec imul and adc imul cmpsb in or and sub mull mov xor cmp lret lods and dec add insb movsl xor cwtl fs mov outsl in (bad) pop and mov test dec enter rolb sub xchg aaa and popf mov mov push and xor or dec pop imul outsl ss add xor out push xor popa mov insb inc in push add cmpsl subl jne or push xor pushf or mov fiadd or pop movsl or or cli inc inc push sub getsec fdivrl popa ret xor (bad) dec lods mov xor mov aas push dec xchg or popa (bad) or orl (bad) in or ds push adcl push pop movsb fisubrl js or xchg fisubrl adc cmp rorl adc push or js jmp loopne adc add (bad) mov mov or ret sub xor daa pushf jo insb data16 mov pop sub rorb popa push push xor shl es jne nop cmp lret imul andb (bad) dec push xchg and add cmp sbb jp jecxz xchg arpl push sub jg xor rorb xor inc mov popa cmp insb dec nop repnz sbb rol dec pop inc cltd test test cwtl sub or xchg daa aaa sarl mov adc or dec xchg pushf mov sub pop (bad) es mov es sbb sub pushf dec mov add imul mov idivb or lock insb loopne lret mov or lods lret outsb shll jbe cmpsb inc lret js cmp xor lods mov jge dec mov push mov push ficomp pusha lods imul arpl test xchg pop dec mov or or and xlat fildl and (bad) mov add mov sbb adc or sub jae loope sar sbb outsl add test push sub cmp or cmp (bad) mov xchg sahf or imul and xor loop jmp adc lock mov inc sub imul mov pop xor and shrb push dec adc add dec rcrb lea lods subb sub mov jge aam add push sbb and or ret popa pop rcrb xorb xor xchg push daa or sub sub sub mov push pop popf sbb push test lods je popf ds das mov (bad) mov mov push (bad) add jo iret xlat movsl movsb push imul orb cmpsl ret mov dec mov inc or xor push adc cwtl rcr and sub lods in add cmp repnz repz xor inc inc call or cmp shlb mov shlb dec pop push ret xchg sbb push outsl mov sbb sbb add mov xor jecxz nop xor mov xchg xor or push xor add xchg or inc movsb fs adc jecxz fnsave sub cmpsl ret sub fcmovu push cmp xor mov and xchg pusha mov adc dec cmp stos cmpsb subl js popa xor pop test cmp outsl je add mov push add (bad) gs dec fistp xor mov ljmp packuswb sbb xchg movsl sbb cli or pusha inc (bad) into pop adc pusha inc ret fiadd sub popa push xchg inc pushf push xchg mov xor add pushf lock mov and and jns inc rcll cmp (bad) loop or xor mov xchg push fisttpll mov mov xor sbb mov les cmp or xchg outsl (bad) push add jne addr16 cmp test push aaa pop mov dec and mov clc add mov ret add jns outsl jmp push push in fsubs fcompl ss add pop push mov rolb outsl push cltd (bad) sub imul and adc icebp sub add xor loopne inc mov cs test push test xchg mov push lods dec adc hlt adc xchg xchg test repz xchg (bad) add sbb mov push cmpl pop or sbb cs lret pop inc mov sahf dec fcomp lcall das or and cmp cmc mov (bad) ja cmp push rcrb add or xchg rolb out or add mov or out das sub mov in mov cwtl lods cli ja dec test sub es xor gs push lret lret or mov or jno (bad) inc sbb fs push (bad) and movsb dec insl jo push das rolb and pop jno into xchg inc xchg xchg popa sub jecxz test rorl xor push orl pop aam outsb (bad) sti xchg out or sub sbb xor jmp or xor and out movsl push loopne loope or lret into pop test fistpll sbb push (bad) sub push rcrb (bad) xchg cwtl imulb addl dec push xorb pop imul roll and mov and mov hlt xor or or adc jmp and jne lret xchg or lea jmp cmp cs pop movsl ret mov jg xchg sbb shlb adc push in inc leave add mov call jl inc inc sbb fiadd push cmp sub mov sbb adc push jb push add pop loope popa adc dec xchg add sbb sub ret push ss cmp cmp inc and leave in push inc rcrb dec js jge push xchg mov popa jecxz ss xlat push mov cmpsb mov xchg add adc mov sbb jecxz push xor ret lcall es mov adc xor cmp fldl das cmpsl adc push adc call mov mov push cs fs (bad) lock lret xor or mov addr16 test ret fistpll sbb xor bound jae outsl lds loopne sub pop (bad) fwait sub mov daa add cmp inc cmp push fnop jno bound lods adc inc aam movsl xor sbb and stos test pusha fsubs or adc dec push in mov adc sub or dec popf pop stc fwait (bad) adc xor insb leave dec daa add mov xor sbb dec sub lcall popa out and pop xchg or or jnp repz inc incl add adc mov test mov mov xor add movsl and cmp pop pop add repz adc sub push or ss dec pop pop mov pop add scas xchg and mov xchg inc (bad) leave (bad) add jmp addr16 dec dec and xchg es cmp push fistpl lret or cmp inc lea cmp xor push mov and popf cwtl mov dec and (bad) pop movsb (bad) dec add sbb mov xor lods adc pop pop mov inc mov cmpb or ret dec enter dec ror stos das adc cmp cmpsb add gs sbb inc sbb daa xchg add add mov mov lea and add inc rcrb mov test cmp arpl cmp mov imul pop cmovbe imul cmp loop (bad) roll add cltd mov cmp jno and inc movsl mov fisub xor xor or movsl test push leave dec rcrb sbb cmp sbbb lods mov aad lods or sbb (bad) mov mov int3 pop push mov cmpsb push dec xchg or mov cmpsl pop mov je fldcw pop cmpl test push test pop dec rol nop ret jns dec adc pop mov mov pushf jle mov pop hlt xchg fs jg (bad) inc or xchg jecxz add aas in mov test rol lcall xor sbb xchg into negl dec shlb shrd add loopne mov enter adcl mov rcrb scas mov cmp test test add mov lds enter sbb adc arpl jge ret ret mov xor pop les add ret jae aam ret lahf inc cmp insb xor mov adc stc sub push xchg xchg fyl2xp1 insl mov sahf imul mov test leave or push cld insl add cmp aas xchg call cmp push adc sub ss rcrb shrb imul fldl or and xor or movsl cmp xor nop adcb ja adc sbb call mov iret outsb sbb in jnp or nop icebp xor xor xlat adc inc xor mov inc scas test cmp sbb add or rolb xchg inc enter ret cwtl adc int3 sahf jge push mov daa hlt and push push mov jnp or repz push inc mov aaa xor dec inc dec push push xor scas sbb mov pop addr16 sbb mov stos rol ret outsl aad xor adc push push inc xchg cs mov imul mov xor adc or sbb cmp dec and mov aad xchg ret and and (bad) cmp mov jae xorl aaa icebp ret jo mov sub mov jb test mov xchg loop pushf popa loope outsb mov mov push inc and xchg test inc popa xor add ljmp or xor lods stos jnp mov sub sbb and aam sbb add jnp mov subb fdivs daa and adc js adc push std out add sub or mov std cmp ret inc adc mov or pop xor xlat out xor mov rcll mov imul adc in adc loopne sub adc aam dec lret je or mov fs sahf mov pop int3 es jge shr cld jecxz mov push ret add sbb mov (bad) xchg pusha or inc mov pop xchg xchg pushf gs add movsl xchg sub stos nop push add sbb roll pop jb imul cld inc lret pop add fldenv dec lds inc loop aad dec and movsb add mov xor push repz dec cmp ss mov cs pop (bad) rclb sbb mov or add aam sbb aam pushf inc lcall sahf pop mov and push push push and mov insb xchg or add and add adc rolb add or mov mov icebp ret xor sbb repnz cmp mov push test orb push push push scas repz and daa icebp adc sub sahf jmp je xchg dec pop es sub cmpsl les jmp arpl or inc pop inc mov sub popa test jmp add sub adc add add mov lods mov dec adc mov inc fisttpll call gs mov outsl or mov dec xchg (bad) xor sbb in ja cmp andb orl cltd sbb test mov scas shrl push adc aam dec mov invd sub sub fsubrp jbe add arpl subb adc sbb loope jnp cmpsb jo cld jnp and push rcr rcrb sub inc adc add mov inc gs (bad) mov jae dec sbb xchg push sub scas adc and cmp xchg addr16 mov andb jno ljmp or add jnp scas inc imul lret fistpl add sbb lcall ja test cwtl dec pop stos test insb jmp out sbb daa js fnop push push cmp out insb leave xchg or inc inc fwait and dec insl aaa xlat sbb mov mov push bound inc dec xchg das inc ss push jo out (bad) lock ret (bad) xor insl inc pop or imul cmc push loopne mov test mov arpl fwait mov in or jp add xchg push add lods arpl xor xor mov orl adc dec add inc lahf fbstp repz loopne adc or xor imul add cmpl jp mov rorb aaa daa adc cmp push shrb call loop xchg mov jmp xor pop pop mov xchg mov inc xchg test and mov xorl pop adc lret fidivr mov jge repz adc pop dec cld dec pop psraw lds mov outsl sub shll test mov push aam sub (bad) sahf dec test and lcall push and adc lret sbb mov push andl push pshufw inc pop sbb out or adc loop movsb or test stos fs xor rcrl jge outsb gs pop pop or pop mov mov push movsb inc jo out addr16 add and inc sahf adc pop roll insb popa movsl aaa bound sbb jae push mov push push aam sbb sub xchg outsl mov out mov pusha loopne dec rorb shll or sbb popa mov or adc adc lock popf or and xchg lock pushf gs in push mov mov (bad) add mov and inc sub fdivrs xchg ret mov inc adc xlat xchg fs test dec (bad) test stos out fistl and lods mov dec add (bad) insl fnstsw adc and add and push xor push imul movsb dec or mov xchg call xor push test add add mov imul fldl aad lods and in fistl ret dec loop add mov push pop (bad) mov xor cmp mov adc ss lea rcrl inc mov add xchg cmp add into add push xlat shrb jne inc mov cmp xor pop inc xchg push add adc sbb test xchg sub add or hlt pop push lods jns xor adc dec lret or inc dec ret incl jae (bad) push insl loope ret xor (bad) in rolb loope pop inc mov push xor adc jmp push cmp inc sbb and mov push mov sbb fucomi mov or sbb out lods xchg cwtl jp test (bad) and js lahf cmp imul mov push xchg xor rep mov xor jo jb xor or or push int les dec outsb pusha fldl rcr xor add gs dec call insl mov ucomisd cmp push add sub push inc mov sbb (bad) push dec mov xchg (bad) inc arpl pop and or or sbb ss test fsts pusha incb test cmc sub (bad) lods pop (bad) int3 sbbb ror cmc dec cmp jg or faddl jl mov pop shrb and loopne fisttpl adc pop sub fnstsw jo push sub movsb out push xor mov les add gs sub lahf mov push inc inc loope inc jnp or xorl mov mov leave mov jns dec es dec pushaw or dec inc sub mov stc lea cltd pop xchg stos test es sub (bad) push addb mov and bound enter fdivs xorb cs adc dec and test movsb lods sub or scas les pop pushf xor lret outsb and xor dec sbb jmp add pusha add bound mov call (bad) out addl xor movb cmp jmp rcrb add dec pop sub stos jnp jecxz sub test xlat or dec cs or xchg xor cmp adc sub movsl addb loopne fwait pushf bound adc sub mov std cmp les and push sbb stc dec aaa faddp add test sbb sub push and sbb xor daa xchg cltd xchg cmp sub mov cmp pop and or in or shrb mov inc fndisi(8087 into add (bad) sub add add or sbb lds inc lcall xor add mov popa lock popa adc inc adc gs add jmp xchg xor inc inc sub mov xor sarl pusha inc xor and mov mov outsl and or mov xchg mov xor andb imul inc push adc sub adc sbb shrb cmp xor mov and or popa dec sbb addl rcl xchg sahf jmp xor and loop sarb loope (bad) xor push lea sub movsl mov rcl adc outsb ficom adc call sbb dec mov dec inc test adc or (bad) push sub fnstenv cmp mov mov stos lea dec xorb cmp xchg scas xchg jo or popa sub sub (bad) (bad) call xchg adc lahf cmp dec out inc and addl adc sub or test cmp mov add mov cmpsb or mov push jb test andb pop lea dec push mov cmpsl icebp jge out xchg or jns scas (bad) xchg imul lcall mov add movsl scas push xchg mov mov xor sbb (bad) (bad) movb rclb xor stos dec jecxz mov pop cmpsb inc inc push xchg and inc into push test mov adc ret jp js mov ret addl (bad) int3 cmpsl pushf mov push xorl in inc mov mov cmpsl lds stos test test pop sbb das add mov xchg bound add insl aam mov into and sub into lods xor add in sarb add sbb dec shlb xchg lea xor cwtl stos mov adc (bad) or (bad) sti adc sbb push pop fdivl dec or jb or pop test xchg gs mov push or mov lret inc mov inc xlat jp pop and cmp xor or or shlb or xor add and (bad) lds imul xchg mov xor and adc add mov dec (bad) sbb mov int xchg and fstpt movsl shlb lock xchg shlb xchg sbb fwait pop sbb mov cmp xorl mov cltd loopne jmp xchg mov shrl xor dec add adc xor xorb or movsl pushf sbb (bad) push ret clc out push push dec jmp and xor loopne jns in adcl adc (bad) xor inc inc push and mov mov mov shrb sub dec or and xor jp popf outsb push add int lret fistl into pop jbe pop dec mov mov sub idiv js pop nop gs xor dec jecxz push adc cmp sbb or xchg cmp fistpl xor fldl sbb add inc jg nop xchg sub mov mov adc cmp pop pushf xor xor test inc movsb lret cltd in push mov inc (bad) cmp mov cli xchg movsl sub xor adc ficompl adc jecxz (bad) or inc xchg test xchg push cmp adc or mov mov add or movsl (bad) add add dec ja fwait inc jmp lret adc xor and mov and sub push mov cmp daa leave andb daa jo dec enter add lahf xor xlat xor insb lret fldl mov ds xchg insb pop jmp test jmp lods mov pop ret cmp lahf push mov add cmp lds inc push lock add adc or loop sbb cmpb mov add popf sbb ret cmp sub ja (bad) xor adc inc lea fsin sbb jp shlb push pop jns pop xlat loop xchg mov loopne sbb or out jne jne or dec fistp inc data16 push adc cmp and xchg or inc enter or add or popa aas or jg and sbb call jge movsl ss (bad) adc xchg jae test rorb stos ss (bad) loop das jl test pop xchg adc push xchg xor mov outsl rolb cwtl or and mov cmovge (bad) jo or push pop lea pop outsl data16 sbb adc and andb push aaa std sbb ror loop push aas mov iret jo dec or push mov xor or cmc fdivs jo ret xor inc inc and mov cwtl jp push or cmp cmp mov repnz pop repnz and imul push add or or dec lock (bad) mov mov (bad) or inc fdivr cmp or inc mov push mov add add mov pop dec bound js sbb xor or cld inc sbb inc add pop shlb or dec xchg jp mov sbb xor sbb dec add jmp mov arpl lret sbb imul add add enter dec mov addb pop sub inc out dec ret adc (bad) and or shrb lock or cmpsb cmpsb push jno test add pushf or sub insl insl add adc mov lcall xor ret sub ds daa jge xor inc and push pop (bad) dec out aaa repz sub in pop aaa push imul or inc adc lret imul shll daa cwtl scas pop stos mov daa outsl sub les sub inc pop add sbb sub add jo (bad) lret out sbb fs pop add inc add repnz push or add and stos xlat test (bad) fist out call xor xor push outsb or imul add mov sti cmpps lock testl xchg adc xchg fwait adc popa sub int3 test push or xlat or inc sub cld aam popa test or (bad) out inc lea lds popa insl jmp dec xor test jge repnz mov sbb and cmp les pop repnz xor aaa mov inc (bad) inc pop push mov mov adc jmp sbb in push push fadds lods mov xchg loop mov push mov sub xorl adc sbb addr16 pusha and push adc dec popa (bad) (bad) and adc xchg lods enter sbb leave ss imul mov cmp mov xor orl add addl js sub sub out cmp xor mov in rcll push cmp and add pusha sub ret mov rcll pop and mov imul dec fadds ljmp ret aam xor popa mov dec add xchg (bad) ret mov sub lods fidivr push xor jno sbb xchg push add test fldl hlt push xor rorb js adc sub adc mov mov dec aad sarb add les and into xor xor pop lock xchg push mov cmpsb fisttp jp or sbb xchg adc insb mov or push sub jp and inc pop test icebp dec cltd xor repnz adc xchg mov or add lods loopne pusha loopne cmp test adc xor outsb icebp sub push xchg popf fisubrl popa (bad) pushf leave mov sub leave adc or out (bad) rorb lret xchg int3 pop pop repz push sahf push push aaa cmc adc loope popa lock clc and pop jnp popf or cmp movsl adc inc xchg xorb lea mov inc xchg mov inc xor (bad) dec pusha popf push insl cmp test sbb push je xor iret sub add xchg cmpsb iret ret test xor dec outsl cs add add test (bad) lcall sbb and and xchg add and nop adc dec pop (bad) push add push adc movsb xor pop sub mov mov inc inc mov add rcrb lods xor push repz into sub roll push stos xor and mov push add imul xchg lea lods or dec dec inc frstor dec add dec and cwtl test in movsb int3 add cmpsb push push push add lods sbb js faddl xor stos dec adc mov in aaa add popf xor insl sub movsb lds lret xorl (bad) inc add push pusha xchg fistl arpl adc push mov sub or push outsl adc lds in or cmp lahf mov in mov or or mov and jne push mov stos test cmp xor adc inc pop addb inc and push push cmp add insl push aam negw push add fiadd loopne das inc xor rcrb dec repz lcall mov cmp (bad) lret (bad) mov cmp fsubs inc movsb jnp jl dec push inc add adc fs mov and ror sbb lds insl rclb mov adcb and (bad) loope pop sbb xchg sahf mov movsb jb sbb dec ret sarb push mov dec adc in and inc je or iret cmpsb pop mov movsb adc fist xchg lcall in add adc and adc int3 lret into scas jae inc lods dec mov dec les add push jb mov in outsb add or mov popa nop mov sub ss mov dec xor jae (bad) push insb add dec mov int3 jno loopne mov push mov add push shrl jmp and inc sar add add loopne ljmp or test cmp push add icebp sbb daa add loopne in ud2 mov xor and push add push add andb ret dec cmp add add loope movsl and les push (bad) mov (bad) divl dec sbb (bad) mov and jecxz cmc (bad) cmp cmp and scas inc ss loope add add lock sub cmp ret pop fiadd loopne sub xchg lret in add sub mov lahf and jge xor popl cmp lret in es mov mov push push call cmc rorb ret rclb xor fs or dec add adc add outsl and mov jg pop push push insb lods pushl lock xor movb inc andb test pusha test fwait scas or cmpsl rorb and (bad) popa adc push mov addr16 aam das jne insl loop push cmpsb or add and mov addb sbb movsb adc cmc xor inc xorl pop fs fadds mov aad adc bound fmuls sbb imul add sub adc and and xor cmpsl movsl sahf push sbb mov mov sbb mov adc cmp mov sbb mov es add orb in mov push sbb je dec pop daa sti bndldx pushf andb jne inc and imul cmpsb hlt (bad) or mov or (bad) adc pushf mov daa push movsl adc mov aad mov xor xchg es add mov mov xchg les aaa xor push mov push aaa out mov rcr mov lods mov rorb std or nop mov add pop faddl add mov dec std inc or xchg (bad) cltd xor mov and pop fsts (bad) mov fwait and (bad) xor jo inc mov in popa mov pop mov aad addb push clc pop sti push sarb scas jecxz in test jp push adc (bad) clc (bad) fsubrp xor adc pop xor nop mov cld cmp sarl andb pusha pop fdivs iret cmp add int add xorl mov shl aaa cmpsl pop ret add dec xchg sbb adc nop movsl sti sub sbb add sub es and test mov cmp shlb mov adc mov imul push adc inc mov inc and stos xor nop inc test je sti adc mov mov mov pop xor sbb scas or sbb fs lock xchg in lock xor popa scas add jmp sub cmp popa (bad) mov popa jmp pushf inc test pop pop sbb and outsl pop jbe pushf and and (bad) and insl icebp scas jg mov imul add ja adc and loope inc loope insb mov or movsl pop in aam mov sbb sub pop xchg jge insb fadd dec sbb push adcl push jecxz (bad) (bad) subl add mov jge insb and in pop dec sub out cmp sbb pop jb pop and fnsave in repnz inc add (bad) adc xchg sub add out mov dec mov xor inc xor mov or pop add dec and pushf popa inc fs push les xchg hlt xchg pop adc push inc shl sbb mov jne mov adc pop loop movsl stos pop xor xchg add adc les inc xchg or xor inc mov inc pop movsb scas and mov or mov fstp imul cmp sub cmp mov cmp pop mov or add leave (bad) xor out mov sbb or push outsl lcall pop or arpl gs pop dec and lods pop hlt sbb rcrl in mov adc insb iret add add mov popa enter adc push adc sbb ss inc dec lret add pop dec ss xchg push adc add enter lahf pop rolb mov cmp mov inc adcb or into push scas push cmp shrb fld add xchg push pop (bad) test movsb xor subl mov xchg int lock lds fisttpll add leave push dec sub dec sbb and xor icebp and test push pop les push pop push mov or xchg dec mov es dec xor das loopne and addr16 sub test sbb xor in popa popa and js add jl fcoms inc push mov js test scas add jmp int lock xor push lret jno mov in add popa sahf pop test or sub icebp add (bad) mov ja xchg test fs sub jmp mov xlat xchg movsb ficomp lods lcall add aad jmp pop iret pop test jo (bad) popa add add cmp or and shrb std xor ljmp call mov mov mov mov pop add mov ret scas and fsubrp and adc sbbl aaa add xchg xor imul inc or or dec add sub push add or jle inc pop push inc cmp aam mov ss outsl pop fs orl or mov orl fcmovne cmp mov dec sub pop push pop pop sub movb lea push cli roll push ret jnp add outsl push arpl loopne add xchg and fistl jb bound push or lret add mov stos shrl inc ss rcrl xlat dec and pop or cmp addb lea adc dec sbb std and inc add ret bound and push xor xchg scas add add jmp loopne pop (bad) xor icebp ret inc je (bad) sub xor push pusha add nop mov pusha test sub mov mov add inc jecxz test jae pop mov adc xchg add popa mov js add sub test sbb cmp (bad) mov push cli andb call push add sbb mov xchg lret outsb movsb je lods cmp dec dec fimul test or adc adc (bad) sti dec gs add ret flds cmp pusha jo insb add adc adc dec inc lock push fxtract nop pusha xor push xchg fiadd rolb sti adc push dec rolb mov mov sub stc push mov pusha add dec adc sub adc mov mov push push xor aam xchg add imul call scas and mov shll cmp or inc cmp (bad) xor xor push sub pop and jl xor inc call pop xchg xor xor clc fmul push je sarl jle pusha adc or lods jno xchg hlt xchg insb mov mov mov push adc adc jno dec xchg movsb cwtl arpl fwait xor pop sbb push xor or push xor lock xchg sub aam ror sbb sbb loope movsb dec insl push push rclb pop xchg cmp jmp push xor pop or add add ret jmp cltd adc rorb cmpsl aaa add pop add inc mov fistpll xchg sbb or addb or jmp add mov jmp dec es add sbb pop enter add les out sub mov xchg stos pop icebp inc dec mov or inc and xchg mov shlb inc adc fs ret xchg xlat inc imul inc notb pop lret rolb xchg sbb cmp pop mov test mov adc mov add js sbbl ja addl jo inc inc inc xchg pop xchg add movsl shl sbb or rcrl xor jo add adc mov pop xor adc (bad) push push inc or add cmp xor xor or aad lods jb test dec push divl cmp inc push mov xchg add add cmp add adc add jle insb sub sbb push inc xor js mov mov push cmp mov mov mov push jp cmp jl daa push push rorb cmpsl mov mov mov insb add sbb (bad) mov inc jl out in cmp push int sub mov adcb lea add imul inc mov jns sbb into cmp dec adc jmp aaa and mov outsl and xorb xor cld rclb fwait cmp push jecxz sbb and stc sarb test shlb inc lahf pop enter xor xor les les or add movsb sub test aam popa pusha insb fcmovbe push adc sbb xchg (bad) push xor or inc adc lock mov (bad) sbb add dec ret adc mov insb mov push inc mov push iret xor loope or or xor cmp add inc cmp arpl addb pop ljmp shrl push adc add xchg mov arpl pop add push mov cli rolb mov mov sub enter (bad) mov pop sub in popf inc push insb jmp mov insb mov imul test cli sub xor or or pop xor mov xor push test fldt add jae xchg mov xchg xchg jno add jl pop arpl inc popa fs (bad) or push jge outsl add pop or sbb sbb xor and or lds dec out cmc enter xor cmp sbb test push push add mov or or jne or imul enter dec sahf arpl pop push xchg loopne add sub mov sbb pop test push push push sub sti mov js mov aad mov mov movsb xor or pop xor xor (bad) xchg adc push hlt jb adcl int3 sbb cli sub mov xor rsqrtps les stc xor test test dec testl push and xchg rclb xchg loopne pop imul inc cmp xchg inc sub sub or inc mov lcall cmp push pushf mov aaa push mov xchg mov jb das add pop lea in fwait ret dec (bad) sub mov enter mov sub jecxz mov adc cmp js sbbl test xchg ficom or xchg pop inc inc aad inc mov int3 add sbb pop mov add jge fimull lret je push xor cmp clc (bad) repz lods push addl (bad) aas data16 loop test mov pushf sbb mov stos xorb or (bad) mov push adc jo ret or inc lods push xlat repz push inc imul xor sub sub and lock lods xor sub push push dec (bad) imul cmp push fwait xorb adc pop pusha or mov pop jae mov xchg xchg scas xchg mov add test add lds (bad) xchg xchg add roll inc loope push xchg cmp or addl fiaddl scas xor xor xorl or jnp add in xchg andl jmp pop insb cwtl stos pop outsl push pop aaa xchg lret pop pop outsl inc lods cltd and dec xchg cmpsb inc add imul fimul mull lea or addl inc and inc cli push sub jge mov negl lods sub fcom lea adc loop sbb mov sbb fs pop push push js js inc cmpsl aam push addr16 xchg sbb andl mov mov data16 (bad) mov jmp xor rcll jnp add in int3 add sub mov or and loopne add testb jmp cmpsb push jo mov push popa jg les pusha pusha push dec insl aaa jne loopne lods in or add add sbb sub ds mov add movsb add sub adcl test lcall mov push add (bad) or nop pusha add mov into nop repnz add xor scas lea fildll faddl jno pop gs pop (bad) fistp xor cmpsl movsb adc ret push es adc mov (bad) pop xchg (bad) xor xor add or sub pop xor add sbb fild xchg ret and popa incl xchg imul mov adc fs sub inc cmp add inc lock mov dec insl adc cmp (bad) push aam jo pop and mov addl imul lret jb and and inc stos fldenv gs and addl and mov sbbb outsb xor fcmovnb arpl popa jecxz xor dec rolb dec (bad) add outsl fsubrs nop scas sbb sub sub jmp ljmp and pop daa and inc fiadd popa pop adc cmp dec mov int3 mov and push xor dec pop and xchg mov adc pusha rol test xchg xlat icebp pop push mov mov aas js outsl inc jbe xor adc mov push fisttpl jmp in shrb addr16 lods inc jbe mov fnsave xor rorb leave inc adc pop lods ss or pop mov or mov jmp add mov cmp movb mov inc test push jg mov roll push pushf push inc rolb (bad) lods mov das xchg mov inc lret mov or (bad) xor fadd fistpl sub dec sbb (bad) rcrb leave inc push sbb mov dec cmp push in sub or js pop daa mov or cmp sbb test into and inc inc pop aaa outsb inc js pop mov sbb jae test push rclb lods add cmp pop jno,pn mov jecxz ja pop pop mov inc xchg lock mov xorl inc jp add loope imul xor pop fimull mov cmp rcr cmp mov mov hlt pop jns mov loope push pop xchg add mov pop ret lock sub pop fst push aam inc cwtl push aaa cmpsl lods add in mov jo push and (bad) mov mov xorl test xor stc sahf pop mov pusha push test or cmp leave or sbb mov fwait cmp (bad) sub xor dec cmpsb pushf and test inc inc cmpsl ret jae bound jmp mov pusha jne aad and dec pop mov stos cmp rcrl adc outsl test xchg lods hlt addb aaa add jns mov add outsb dec aaa mov mov xor push mov ljmp add sahf js and xor add imul xor gs addr16 stos dec adc mov pop mov test arpl fdivl jl out cmc sbb inc sub lods inc push fadd (bad) mull out lret xlat xor adc inc adc push or xchg pusha cmpsl ss or add inc imul sub cmpb inc and mov ffreep ret cmp out xor test sbb ds xchg mov dec mov or or gs adc imul js xor pop add sub or pop mov in inc ljmp mov jo pop test push sub punpckldq stos and rorb and je fwait aaa movsl test aam pop dec xor sub add sbb lods aaa push and dec adc andb xor mov sbbl mov push inc xor and fisttpll mov inc or inc adc xorl mov clc js add add sub mov (bad) nop iret ret sub xchg (bad) jns lods imull cmp aaa xor xor into and (bad) push sbb stc popa lret add inc popl cmp or or ret adc ret or mov sbb sbbl lea nop push lret inc add out movsl xor imul pop mov inc movsl lahf enter add popf jp pusha cmpsl or pop popf mov shr popa xchg xchg cmpsl add mov lock shll jge sub adc adc cwtl cltd jb addr16 mov les loopne or jecxz inc add push fidivl ss push sub mov and sbb add push aam in cmp push loop mov (bad) daa ret test inc adcl cltd xchg stos out (bad) ss pop push xor or jmp aad popa pop sbb inc movsl mov jge dec sbb int3 nop add in push ljmp push adc sub pop jmp pop or fs in insl shr or adc inc adc (bad) notb fldenv or add or mov sbb popa lret or inc test rcll push mov inc js je cmp xor sbb mov (bad) repz mov pusha xor xchg xchg adc aaa mov xor mov inc leave jo push cmpsl cmp loopne jp das lods inc mov loopne push xor shrb mov mov cmp xor adc mov add jecxz shlb int and inc sub fldenv mov idiv inc adc (bad) mov jp addl or popf sub xchg pop loop xchg add jne lcall test inc inc push or mov or jecxz dec adc adc in xchg inc out loopne fwait sub pop push scas mov popf dec push dec cmp xchg xchg pinsrw aam mov inc sbb xor fimull add cmp flds or pop sbb push ljmp cmp lods rorl add (bad) repnz mov rorb add add sub inc sub xor sub pop cmpsl std nop adc and jns dec call cwtl scas mov inc mov cmp cwtl and notb cwtl js mov inc sbb lea jno ljmp andl or adc dec add rclb xchg cmp arpl fisttp mov xchg lock (bad) daa cmp xor leave pop push or sub mov sti adc xor pusha inc aam sub mov ret adc mov das fs mov fiaddl pusha xchg call addl fs aaa shlb sbb call pop xchg fstpt or pop shlb outsb cmp cmp mov xor and xorl test loope inc iret fisttpll and xchg ja sbb je pop sahf mov (bad) leave rolb in repnz inc (bad) sbb shll and push jo push sbb lret sbbb roll or adc mov and inc inc sbb add add in repz or mov pop cltd or sub call adc pop pop stos iret jmp push and lods lea in and cmp stc mov jns nop dec ret sub or sub xchg popa in adc mov mov adc sub adc inc rolb and sbb or adc pop add mov mov adcb or fidiv add fwait rclb mov rcrl sbb nop dec cltd lret pop xorb mov lods movsl xor fistl jl or mov pop jmp sub add aam jmp and int mov fstps xor add xchg or xor imul pop outsb les pop adc adcl push xchg add subl dec add or jns jo push sub pop sub or lods mov mov popa lret dec xchg or mov mov repz leave dec push and xlat xor dec sahf inc arpl inc push add cmp (bad) int3 mov jecxz outsl ljmp sbb aam push lcall icebp std addr16 dec pop jnp dec (bad) mov sbb pop mov bound xchg (bad) loopne bound test movsb test (bad) cmp push sub pop sbbl cmc lcall inc jb divl inc movsb inc (bad) xor negl sbb mov xor or arpl pop loopne or or in inc adc lret xor inc shlb loopne or rolb inc mov sub pop inc push sub xor lods inc sub arpl (bad) pop arpl ret ret bound sub adc adc sbb sub sub or adc push mov add xchg mov lea lret dec jne popa and pusha jp nop lcall add es xchg (bad) call add pusha cmp sbb jge xor (bad) in dec in adc adcl add sub dec pop or cmpsl imul mov loopne ret mov xor lods adc jo dec loope inc adc lret jns cmp dec mov sub and fistpl jl aam xor jnp (bad) pop (bad) cmp sub lret mov mov xchg mov push or add xchg or add in movsl je inc add cmpsb jbe push stc sbb cmc cmp mov jecxz pop sbb or ret xchg sahf push push dec sub jmp lea pusha xchg pop (bad) cmp xor nop adcb mov jns sarb adcb sbb gs add push dec xor stos mov (bad) movb xor sbb adc mov mov add mov pop pusha shl pop xchg mov inc (bad) data16 mov or mov or ljmp xchg or pop adc add add add xchg add jp test mov loope bound mov sub lahf cmp add xor inc xor and xor sbb addb sub (bad) cmc sub imul lods lods cmp push movb insl ret test rcrl insb repz xor or inc xor xchg push stc push inc adc mov jnp mov mov add fsubs nop xchg movsl popa frstor push xchg das sbb xor push cmp fwait adc push or add inc ja and stos and dec and lods sub mov sub and mov jecxz adc xchg pusha repz popf dec test xchg adc sarb add inc (bad) jmp cmovae pop lret push (bad) cmc les stos into pop push dec stc sarb add das cmp lahf popf mov xchg mov adc xchg pop dec mov mov or xor or jge sbb push cmp ffree sbb sar pop or adc mov add stos xchg test add mov sbb push xchg loope pusha lods sar loope and cmp push rcrl xchg mov sar xchg lods mov add ss push sub pop inc test inc lret (bad) and or shl imul mov and or es movsb pop pusha ficomp fcoml lods pop pop add in sub or jmp test data16 xchg mov pop test or adc mov pop repz or xchg jo js test pop mov xor or or adc mov out mov jae rcrb dec push psubb adc or push or lods adc insb cmp sub lahf adc insb jmp rcll iret sbb (bad) test incl mov adc lods add dec pop mov nop jo outsl add cmp pop adc inc mov imul jmp (bad) mov add dec rcll mov adc test int3 cmp and test mov cmp addl mov or xchg loopne and jge js add cmp xchg andl jb aaa sete das pop sub mov bound push pusha add xor xchg mov rorl loop pop adc cmp push ljmp or xor ret mov xchg xor fs mov add mov cmp mov add daa sub inc lret sbb lret je or mov inc push inc cmp ljmp inc mov push in sti inc add pop push xorl xchg pusha or stc mov xchg (bad) sub cmp aad push ret andl repz inc (bad) mov (bad) repz push js and ljmp mov cmp movsb jecxz pop jge iret test inc fdivl or xor ret or (bad) roll or es in std fbld ficomp jns pop imul mov mov push adc push rcrb (bad) std pop mov int3 or fsubrs xorb pusha push sbb stos bound shl or nop lods add rorb cmc pop test fwait mov rcll add imul lods sti xor mov lods xor and and rcrl shrb mov mov sbb or and inc sbb imul dec roll pusha add or mov or fidivr sbb cvttps2pi sbb sbb cmp movsb xchg sbb push les cmp arpl ja lcall shll inc aaa inc loopne push push xor pop cwtl xchg inc jnp cs sub dec popa mov push xchg hlt push pop cmpsl push inc jmp jmp lret adcl arpl repz and rolb (bad) adc lret mov mov push push ret lret nop and fimull (bad) mov cli mov lret sarb cmpsl ret outsl mov add inc or or mov and or lock or mov out dec mov jp xchg jg sbb sub popa push (bad) (bad) lds sub movsl cmp (bad) xor sbb jne ret mov jge pop test push iret sub mov jecxz add outsb aas push cmpsl lock or test mov mov rcl add mov sub push mov sbb adc adc xchg mov mov pop jnp sarb adc cmp dec adc cmp pop jmp push add push adc mov (bad) jne mov sbb or adc aam int3 dec sqrtps stos push push repnz mov daa pop inc jp mov and lcall out mov orl lods fs lods cmp inc call jo mov pop daa movsb ret xchg mulb pop fbld push push dec sub sbb dec xchg push inc push push push push test mov leave pusha push aam xchg xchg or mov inc je lcall sbb mov inc popf popa fbstp xor and mov xchg mov outsl add inc sub and xchg xchg cmp adc sub lods out dec sub cmpsl and mov ficomp push sub orl jae xor add mov sub mov add xchg or jecxz nop xor in xor or push adc shrb xchg xor mov fild xchg mov mull cmp jno dec push sub pop (bad) in sbb or ret jno (bad) or shr push dec mov mov cwtl or hlt push dec jmp sbb add jno xchg xor outsl sbb xchg cmp mov sub push int3 cltd and mov mov mov add sbb je and ret dec nop sbb test or cmp pop push (bad) call fwait rolb inc mov mov add add ljmp mov add dec mov je pusha jno mov lods cmp jmp and imull xor es adc mov and xorb das stos dec jo loopne leave sbb stc mov adc or mov xchg cmp xor adc lds sbb push fsubrl mov mov addr16 push dec adc mov jp xor dec sbb push lret jo mov mov or test jecxz mov push js lock (bad) xor adc fsubrs xor pop insl cmp add aaa aas imul mov mov js inc add push inc cmpsb mov outsl in xchg and popa xor aam dec xchg mov or mov mov dec jmp xorl sbb pop push lcall mov xor mov pop sbb fisubr push or ret outsb movsb dec add roll jo add sub adc mov pop sub test add xchg jg and test mov jecxz test movsl add xchg cmp dec out cmp xor test ret pop xor xchg sbb mov nop stos cs add sbb aaa jg cwtl daa sub sub pusha inc push daa jmp mov int push xor pop xchg xor popa xchg or sbbb iret xchg xchg add dec xchg and add loopne inc sub fwait mov mov int or add push (bad) and test roll and pop push (bad) mov mov out xor daa and add cmp push pop movsb arpl lret add add mov loope mov cmovp lods pop and mov or arpl icebp mov push sbb sbb inc xor or sbbl mov and jle dec dec mov lcall xor and es or (bad) sub outsb cmp lret or mov popa shlb fidivrl jnp add lods mov pop cmpsb cmpsl icebp inc mov mov or adc push adc inc xor cmpsl or and and fwait mov sarb cmpsb xor inc sbb cmp mov sub push xorl sbb int or ret lcall roll mov or or xor xor pusha xchg xor and xor add xchg arpl popf add xor shrb imul or sbb aam jb mov jecxz mov sbb cld es ret adc or lds xor push or cwtl dec jmp loope lret test lods mov fist push shll mov cmpsb or ss inc add daa xchg es rol jp in lret inc cmp jecxz lods inc leave rclb lods insl mov mov add push and or ljmp rolb arpl pop jmp sub test mov pop nop add mov and or hlt rorl pop popa (bad) daa xor inc pop ds mov sbb insb stc cmp je add jnp scas lea in out leave outsl pop roll mov rorb inc push or inc sub ret dec mov hlt (bad) mov fstpl rclb rorl outsb pop or rcrb shrb dec adc sbb mov xor int dec push mov (bad) rorl shrl (bad) popa xchg and imul add insl cmp lods or or clc and lcall xchg mov jne dec xchg and xchg sti daa movsl addb xchg popa adc xchg mov and or push ret pop sub push mov push cmc inc pop and dec sahf add push push cmpsl inc and lock into aad rclb or out xor and ret mov gs test add pop divb (bad) fsubrs mov and (bad) mov lret jp add mov add mov insl sbb xchg fucomi or es ror xor jecxz es (bad) dec inc (bad) icebp outsl lret shll insl test ss sbb and cli adc or sub ds or (bad) mov outsb cmp pop cmpsb dec imul divl adc add mov scas pushf mov dec xchg add mov popf int3 fld bound fadds add push insb sbb mov dec sbb inc adc mov cmpsb inc add mov test and ficomp push addr16 mov lea pushf lea and mov push popf sbb int add repnz inc or cli dec xor addr16 add arpl mov add or in jns xchg inc dec inc or sub lret nop jge sbb jge adc and sub pop xchg scas pop push jo adc push lea or rcrb mov adc mov mov inc movsb inc push test aaa add je test cltd sub testb add mov jns xchg sbbb cmp or pusha adc dec xor sbb cwtl xor imul (bad) lret sbb and fldl add adc jmp mov xor push mov sbb mov xchg push lods push pop and inc and sub test cwtl fadds xchg je pusha sub pop fnstcw or or and loopne lods pushf fnstcw add bound int3 leave mov pop lret movb jno pusha jg daa lret push bound and insb bound das test psubsb add xchg aad and cltd fstps xlat loopne mov push ror shlb sbb push int mov or nop inc xor sahf push andb sbb loope addr16 aam dec pop pop mov test lcall insl jno mov cmpsl push adc or inc call dec rcll (bad) inc jmp ret or mov pop leave adc or or lret mov and or mov in cmpl add test push subb ss test cmp xchg mov cmp or mov mov add and add mov xchg mov add (bad) sbb and cmp mov aas rcr (bad) fdiv daa lret dec mov sbb inc dec lret push jae jle and push (bad) aaa jnp sbb loope add xor sub push rcll cmp push dec (bad) jns sarl nop inc pop pusha pop pop ret xor lret adc jbe test inc or adc imul mov movsb pop pop mov insl xor xor inc mov in pop adc andl add pop arpl andl std and popa les movsl gs add ret pop (bad) push sub pop pop push mov or jecxz and test lahf mov adcb mov or bound dec mov (bad) xchg adc cld mov inc sbb gs pop sbb imul mov std push or add mov cmpsb pop (bad) pop sbb or xchg inc dec push or ja cmp lea push lret cmp push call lea inc aaa inc cmp aas pop fcomps pushf cmp jnp dec lahf dec arpl mov lods add aaa or cwtl mov pushf xchg pop sahf add xor pop push xor loope jmp cltd xlat adc outsl or sbb sbb add or adc cmpsb push ss lock ficoml dec mov mov jg xchg lods test dec mov aaa pop lret xlat adc dec pusha or add push mov stc ss push mov mov enter sarl jl cmp enter or loope mov (bad) sbb cmp sbb add inc push push push dec pop sub iret andb (bad) jp dec test leave mov gs call popa sub (bad) xchg lds add adc inc adc cld xor jge cmp fnop or mov cmp leave sbb xor ljmp shrl add or push and and dec xchg inc push sbb pop dec pop daa mov cmpsb add dec sbb mov xor js sub into sbb adc mov dec lods scas or insl xor popa push rcll inc in or and stos fwait xor int3 adc test outsl js or pop rorb test sbb push sub sub pop inc dec mov xchg sahf mov lods inc fistpl adc shlb sbbl xchg add jecxz jo adc rep mov (bad) fs push xchg xor mov or test fnsave mov aaa mov inc lea subl jb shl sbb cwtl xlat into xchg mov (bad) dec inc xchg adc or inc pop fisub add es repz sub mov ret stc insl cmp loope and or dec sbb cli adc mov mov mov and cmp push mov cmp mov push jb inc pop mov xchg hlt sbb lods mov aas sti subl xchg or outsb lea dec lock insl imul test xor sbb test push inc xchg sahf rolb daa test rcrb add lret pop movsb xchg scas sub pop sti sbb xorb pusha iret dec sbb testb fiadd xor addr16 popa adc int3 fidivl jmp mov movsl jnp push addl and ss lods push pop add push cmpb lods jne pop cmp pop pop lret xor sbb int cmp dec sbb and adc adc adc adc dec daa dec xor iret fisttpl dec jo add cmp (bad) int add xor lret and movsl adc in sbb push jecxz test mov jno dec daa sbb lods xor push cmp inc dec pop rorb sbb fs andl add mov adc cmp and leave add imul roll pop sub mov cs (bad) faddl arpl xchg (bad) add inc or or adc inc stos sub sub sub jmp sub addl out out imul or jno jmp subb fcompl add movsl rorb or pop enter mov push popa cmp pop fnsave fs fistl sub xor push bnd subl in shll jmp jno fnsave mov mov mov sub lcall cmp and repz (bad) nop push dec sbb loop sti dec sub call xchg xor in cld sbb mov sub and dec addl sbb int3 xor aam in call cmp mov dec mov xor xchg or jo dec or cmp mov adcb push test das arpl add sub movsl lods clc xor mov jne adc pusha jno rorb add ss push add cmp cmp in dec xor dec fiaddl ds or test outsb insl add imul test movsl xchg adc bound jmp cli xchg aad xor mov push mov adc pop add or (bad) in inc and lret or das pop mov bound lds popa test and xorl mov xor xchg or rol sbb and mov loope adc lret xor xchg lods mov mov sti mov (bad) mov inc xchg mov insb imul ret mov add sbb or (bad) jecxz push adc imul mov or rcrb mov loop mov sbb pop pushf daa ror jmp into push or xchg pop xor adc (bad) scas xor xchg inc or mov adcb test sub gs xchg outsb push push js jns xchg mov xchg or insb inc repnz aad mov cmp outsl inc out add xor cmp add dec sbb add mov or cmp mov test lods and dec pop rolb inc movsl add inc adc cmp mov and lret jb frstor add mov sti or loopne jb dec mov pop fnop dec dec xlat xor pop xor xchg or mov pop popa sub jo in mov int jp xor jno pop or push stos pop (bad) jo inc dec outsl lret mov daa adc lret rcrl inc xor cmc gs jns rcll add xchg in rolb adc stos push and sarl or xchg push gs adc push inc fs test sub xor loope loope inc cmc sbbb cs xor xor adc ficom aad mov ds pushf inc sub xchg aaa and repz lret adc int3 (bad) je ret adc add pop fsubs lods pop xchg xor sub sub mov xor mov xchg cmpsl mov dec xchg and test dec cmc sbb pop adc adcb das jae ss les lea iret mov sub or or add mov ret cmp popa sbb cmp and loopne pop xorb push mov loop and xor sub inc or cmpl rolb (bad) push adc (bad) jns addb xor add mov pusha and orl xchg jb xchg test dec jmp sbb xchg out in cmpsb mov dec xor movsl inc or daa xor test sti and xchg inc mov jno notb cld sub insb enter or lahf push std xor lea nop sarb adc loop addb xchg adc xchg dec lret dec ret sti test or ret xchg xchg sbb imul fiaddl push xchg fs jne int3 or push imul popa xchg jno pop lcall xor mov es cwtl xchg cmp cmp adcl (bad) outsl xchg mov sbb or sbb xchg add loope or push push bnd inc dec pop mov js pop dec divb xchg xor mov adc rorb dec sbb xorl xchg add arpl sbb fisubr lea and insb xchg movsl inc sbb sbb lock sub or (bad) mov sub mov dec pop adc sub mov xchg stos add sbb pop out dec shll jo add sbb fnstsw cmp or pop ficom orl jo mov mov add lahf inc rcrb and or lods sarl daa sahf xor and mov mov loopne xchg stos dec pop mov adc jns les mov test cmp icebp add pop add or test push mov adcb push in sbb jl push mov lods fs xlat lret or xor add pusha mov rcll movsl adc (bad) test incl es loope sub push insb ret lods mov out cmp and insb iret pop (bad) loop add adc loop xor and arpl mov shrl mov xchg cwtl arpl les pop xchg push test js lods out insb sbb mov mov and xor mov daa or xor or mov subb rclb (bad) cs test sub pop sbb rcrl jnp aam adc je ret leave or xor imul xor xor inc icebp xchg stos or lods adc and pop punpcklwd dec rcrb aad and sub adc rclb mov daa add iret jmp and gs add add xor pop fs pop jge mov sub and pop fistpl mov or mov mov sub bnd pusha or xchg scas sub pop xchg int3 mov push ss call mov lret (bad) repnz mov dec lods push (bad) ss sbb sbb inc repnz xor cmpl data16 or mov lods nop add faddl jp xor or add jo push (bad) pop xor (bad) gs loope or js or mov movsl repnz loope xchg and adcl sub sub divl fwait nop pop jnp lods sub movsl imul sbb ret imul pusha pop push add jmp mov cmp push pop add or push mov arpl mov or (bad) rcrl test xor js loopne or inc adc add push int3 mov aas pop cwtl mov andb outsl sbb rorb add call mov lret in cmp push mov jnp push test loopne sbb nop xchg adc mov sbb cmc push inc cltd inc jge pop lahf aaa (bad) sbb add mov inc jmp push add mov dec cld adc movsl bndldx addr16 pop sbb das jno add mov andl pusha or hlt dec add loopne sarb cli ffree add push xchg xor sub sub xchg sub or int lret nop adc lea es and mov lods popa add and outsl jecxz pop add sarb test aaa (bad) rcrb (bad) xor popa lea xor dec inc fild xorb inc pop pusha andl pop sbb mov push push les clc cmpsl inc sbb push adc test xchg mov lock movb or addb add inc jl add add fisubr xchg adc rcrb sbb xchg push xchg and dec sub push andl inc and adcb or mov vcvttss2si sbb jge and add push push loope cmp mov pop cltd pop loop fbstp mov inc or dec mov inc add cmp rcrb fs and xor icebp dec adc les jo add jne loopne mov pop push dec dec ljmp inc movsl (bad) sbbl sbb push sub push jmp adc roll les jb rorb leave (bad) adc or mov mov add and push xchg mov xchg mov mov inc or rclb addb dec shrl rorl aad cmc test mov ret or mov std fdivr push inc pop shr pop add dec arpl into loop inc cmpsb orl rorl mov xor pop sbb pop sub ds lods nop xor sub jp add in inc add movsl sbb test pop mov cmp mov pushf xchg push popa lea sbb xor mov cmp push arpl mov push xchg mov cwtl lock lock inc push inc cmp sti add and add sbb stos es push test pop loope gs xchg (bad) push pop repnz push les imul xor or jo test sbbl push and cmpsl js or jp sub orl jno xchg popa (bad) testl mov or daa push aaa aas add (bad) push fwait sbb mov or adc (bad) (bad) aaa lea mov inc rcl ret aam out ret ss pop faddl leave xor ss push xchg flds enter pop pusha fisubrl cltd push test shrl shlb shrb adc outsb hlt pop inc push xchg mov (bad) cmp insb xchg mov or push sbb enter das cmp sbb cmp repz fldenv adc nop add js test shll ja mov adc (bad) pusha mov sub xor test popa inc (bad) fcomip ret dec and push leave sbb mov insb dec movsl les mov cmp es or popa push fildl in mov bound jmp aaa push pop xchg fs jecxz cmpsb lock pop cmp add xlat popf and push stos and jecxz loopne enter ss push sub in cmpsb lret or push sbb pop into mov pop dec jne add (bad) es inc loopne mull xchg movsb inc or test test mov jne jp hlt das cmp pop popl fadds int push push add sub add lcall (bad) push xor arpl jae adc adc or and sub test fld imul iret xor add or cmp mov cmp pusha jl xchg pop sbb mov inc dec nop test jge xchg xor mov lods mov push and inc mov mov pop cmp lock sahf (bad) jbe xor fcompl stos rorl aam mov dec xor dec (bad) cmp cmpsb (bad) gs and (bad) pusha andb sti xchg andl pop sub jecxz mov mov icebp cmovnp stos push fmuls sub addb add ret sub adc test inc dec lds popa push dec or push inc inc inc cwtl jns insl or les mov cmp jns stos or js push repnz sahf ss popf xchg xor js (bad) movl sahf xchg jne or xchg inc inc lds imul fwait fwait mov bound adc push lcall mov scas cmp or push xchg popa pop (bad) (bad) pop add nop mov jmp xor or pop mov adc lods loopne mov adc xchg call mov (bad) aam mov stc jg lcall sbb sub xchg xchg out dec js mov es push sub jmp push mov pop inc mov push ljmp xor or inc loopne and xor insb add test dec imul fcomps jb pop inc test pop push cmpsb pusha and jno push sub ja popa jecxz out addr16 push push adcl sub imul dec inc inc arpl jne mov push xorb rcll xchg xchg (bad) ficompl ss ret ret stc fnsave adc push hlt (bad) mov adc lock sarb xor andl iret dec add and fwait fs mov dec les popa gs out pushf test push mov xor dec inc mov cmc stc hlt or cmp sbb jp stc aaa sub mov push cmp or xor std mov sbb add adc lcall adc movsl mov and adc aad je nop add and jb sti rcrb daa sub hlt xchg xor sbb add inc jnp xor push aaa pop arpl sub adc or or inc bswap inc xor sub iret and popf mov int je sbb psllw pop pop or and pusha out or andb iret into insb dec test insb fsubs add sbb add mov push add jbe inc or xor dec lea adcb sbb xchg and fnsave xchg dec out ss pop jle les call jl (bad) lret movl push xor loopne mov nop xchg push mov sbb mov cmpb push xor add add or xor adc sbb or xor test test jmp js das popf or mov inc dec adc pop mov or or add fwait dec xchg jb mov scas and rcrb js xchg mov mov dec or and sub push add adc xor popf dec lods fs or sarl (bad) or sbb xorl and (bad) pop cmp jp or dec test mov xor (bad) or xor sub adc xchg dec or inc mov dec push fs lods push xor or jecxz and clc movsb xor sub or cmp andb movb or sahf sub je xchg test dec xor inc mov add jl mov sub movsb mov daa roll daa subl add xor cmp jb in dec xor cmp aam js sub test movl lods xchg xor rolb sarb lds aam cmp ror add subl mov in lret mov jno xor and outsb test push sbb sbb popa or arpl dec sbb add mov inc and cmp test js cmp dec jno add or cmp movsl add outsl sarb mov pop cmp movsl ret cmpsl push ss or and inc xor push movsb sbb bound or fdiv (bad) in imul sbb mov or or test test dec jge rol inc aam or dec mov jne or dec or sbb pop adc xchg andl iret push xor jmp mov mov mov (bad) rolb push add pop jo lea xlat push in sbb cmp or pop sbb inc xchg or movsl int (bad) or imul dec xor inc mov add les or test aas push xor sub and xor aam xor inc add fist or enter and sub sbb jge lods sub int inc sub lret into shrb test adc xor or sbb lds loope popa adc loopne mov xchg loopne adc adc scas sbb mov mov xchg or arpl add test xor lea sub mov xor bound inc jecxz js xchg loopne jo or pop aas cmp dec xchg cmpsl push shrb pop add mov insb int pop dec js iret pop or sub mov pop not xchg pop inc fiadd xchg rorb loopne ja add adc add dec aaa pop or (bad) fldl or cmp xor fs iret fist mov xchg jmp add les into addb inc (bad) xor pusha imul mov or xor iret jmp jmp adc cs popa lea nop outsb out lret sti push xchg add icebp adc inc ret cmp adc add mov mov or pop (bad) sub sbb andl dec add jmp ss das cmp aaa mov (bad) xor mov data16 xchg pop xor adc push and sub mov mov rcll inc fild adc pop and cmpxchg8b fisub inc mov mov xchg xor mov into shr mov rol pop dec subl add inc ja push inc (bad) les incl popa gs test fwait stos aad add adc aam xchg mov addb xchg mov popa mov cmp cmp scas adc mov cmp outsl in or mov and add jg xchg loope,pn test sub jae,pn xor dec test cmp mov mov adc and push and pushf xorb xchg andl sub cltd inc test loopne adc push mov mov lret imul and push cltd pop add inc cmpsb cmp jl dec sub lahf push mov jl cmp pop adc mov pop mov xor popa xchg add add mov dec add sub push sysenter int3 pusha enter and inc sub sbb inc inc mov xchg add add mov push aas imul xchg sub ljmp test adc jne jge xchg xor ret fimull mov ret dec rorl pop jle pop xchg pop dec aad push xchg mov mov mov js mov lcall push mov xor shrb jno rcrb dec fcompl stos sub pop lcall (bad) aad popa or and pop imul add or pusha mov xchg scas das jle lods xchg push arpl adc repnz ret inc xchg fwait ds test mov sub sub popf push push nop addr16 push adcl push rolb outsb mov insb and or add or (bad) add sbb test inc pop push xchg and lock sarl inc cmpl or lods xchg nop push mov and mov cmc ss add fisttp dec sub bswap adc ljmp add add in sub imul add outsl int3 test nop lds pop jl xchg fstl push mov and pushf (bad) ss enter jnp sub dec popf and and adcl or (bad) mov inc cmpsl loopne pop xor inc in mov arpl rcrb insl mov add inc test je sbb ljmp dec add popf inc cwtl jp fs js or adc cwtl fbstp loop test or mov adc daa rcrb outsb inc jmp xor add jg xchg xchg jne adc mov add sbb outsb hlt les cmp in and dec add and lea inc test mov rcrl mov dec xor fcmovnbe adc sbb pusha inc mov xchg je xor sbb je mov xchg add xor sbb lds pop sbb adc push nop add and cmp or or cltd inc push lods or mov popa arpl or mov mov push xchg cmp add cmp push bound loope xor sar mov sbb push jne (bad) shrb lods mov addr16 aam pushf (bad) sub push call xor lahf movsb xchg inc dec mov rcl sti mov aam insl js mov inc xor cmp inc inc xor test mov cmp addl js sbbb test inc add adc jno mov pop shlb dec adc or xchg mov push dec adc mov and mov sbb or out scas xor inc sub sub push dec popf push sarb jnp divl shr fs or sar in cs cmp xor inc sbb xchg decl or subb fsts xchg mov dec mov sub and jp (bad) (bad) fwait xchg pop pushf and inc xor movsl xor sbb add inc or jnp loope popa xor in push js inc sahf imul sti sbb adc test in test mov pop outsl or mov ret add movsb add add or hlt mov mov inc push nop pusha jecxz xchg sbbl xchg mov xlat sbb dec mov dec mov xor xor and arpl jo cmp inc mov insl inc xchg mov imul mov test mov lea push (bad) icebp (bad) dec pop scas add ret adcl xor xor inc jb mov xchg cltd mov imul jno xor and addr16 sahf xchg xor lret rolb or push inc cmp inc adc xor ds and adc ret cmp inc aaa lea mov gs sub rol pop cmp or js cli and outsl add mov scas ret nop add inc mov hlt add call add fisubl add fdivs xchg test pop xchg adc jo in xchg pop inc movsl inc popa add inc xor rolb movsb dec sub ds mov mov xchg sbb mov pop cmp xchg xor imul sbb ljmp jge out xor orb pop xorb adc dec rcrb push inc or push xor push pop mov aad push inc shlb inc xchg lods adc and push dec repz jo pop imul iret cmpsb popa xchg add push adc dec jmp nop cmp adc mov (bad) fs pop xchg stos xor add xchg xor adc or add xor xor pushf inc (bad) xor push pop mov adcl mov mov cmp cmp imul lds fbstp mov leave sbb add jnp shrb xorb lea inc inc adc adc fsubr aas sbb add push ficoml pop push fisub sbb je inc pop arpl lahf xchg aad adc xchg sub and mov in or or fs arpl adc orb inc and sbb push cmp jo mov mov lods dec mov popa adc jo cltd pop xor mov test xor inc js test mov mov xor cmp mov add mov xchg movsl cmp dec test push sbb add scas andb clc mov push add stos push cmp xor or (bad) xchg xor cmp mov and dec rol pop jo cld push das inc sub dec dec adcl pop and bound mov add idivb push or sbb mov cmp enter xchg sub enter daa sbb mov sub cli adc adc mov xchg insl bound mov adc es xor xchg cs pop jmp sub lds mov mov cmp test pop (bad) pop inc icebp mov dec or ret jmp ret test push in imul mov or mov mov inc add sbb sub faddl movsb hlt imul jb dec ss adc mov cmp fstps dec mov outsb call pop push sbb push mov add cwtl push icebp je sbb inc add rorl lods sbb mov add jmp pop clc xchg test test mov and mov sahf and or pop jecxz movsb sbb lods ficompl stos or jge and daa pop inc mov dec adc mov mov pop dec xor pushf mov popa pusha and or add add add inc sbb dec push popf dec add cmp sahf aaa xor xchg flds roll add rorb add das pop pop and fbstp adc insb mov sub aaa xor sbb lret dec adc stos push bound jnp in add push pusha imul dec bound inc xor adc sbb xchg and pop (bad) cmpsb icebp add daa mov adc dec push add push xchg aaa inc sub fwait rcrb mov cmc outsb aam inc loopne cmp add push pop cmp inc mov xchg add pusha jmp or sbb mov or adc sbb stc in adc test pop and xchg shrl loope or mov nop (bad) call es (bad) and push inc xchg arpl cmp add xchg xchg in pop or xor ret add call clc sub call dec je popa add aaa repnz dec xor push jge imul push rcll mov inc sbb mov lahf test dec or movsb in mov orb test pop cs movsl das and enter fdivs xchg mov and dec cmc and mov cwtl (bad) and sub std xchg enter jae or daa test or pop fdivl ss pop add rcrl add shlb adc lret loope cmp or addr16 inc mov popa pop scas sbb lahf and cwtl or nop mov or inc test or getsec movsl adcl rcl test test mov push jp lret pop lret cmp (bad) ret push or loopne push add mov loopne mov flds cmp adc ret jg xor adc test decb adc push (bad) xchg or popf stos daa sub iret cmp mov pop xor or scas adc sub clc jge adc js lahf xchg insl mov add pop adc sub or lods dec call mov cmp mov aam test add sub aaa xor cmp push (bad) mov sbb sbb and or lret push mov jmp sbb test push adc pusha xchg xchg imul dec movsb lea add fwait cmp or pop add sbb test inc dec sbb mov sbb xchg aaa push xor sahf (bad) and lods xor dec jnp sub fidivl push (bad) call sbb pop jb or idiv mov rcrb jecxz fs add test pop popa adc dec inc arpl shrl mov add fbld movsb pop enter in ret pop out jbe addb push pop add call inc (bad) pop sbb xchg movsb ret insl sub dec inc jnp xchg aaa lea jnp inc cmp out mov test stos mov lods out mov xor insb xchg les mov leave xchg jge sbb lea sub loop mov push pop adc jb hlt and int fmul jb jg push add and ret mov xor call push popa add fs add pop stos add cmpsb in insl pushf or jmp push ret in cmp adc add push bndldx dec add movsb and mov test or ja,pt jns inc pop ds adc mov xchg add lahf push mov adc pop adc imul fistp push cltd lods xor sbb pop lret dec push (bad) xor shrl sbbb loope and jns orl push (bad) xor inc rcrl add iret and or nop adc or (bad) mov adc idivl mov or mov movsl mov rclb and cmp pop cmp mov sub fisttp jge xchg xchg xchg fdivs add xor adc adc and lea xchg lds leave movsb push hlt sahf sub cli sub in cmp or add inc lret or mov cmpsl dec push push jns xor repnz pop add or pop pop jecxz push push scas fs imul scas mov call nop test shlb jl shr bound (bad) ljmp sbb xor mov fnstenv jno jp push mov jmp jg fldl mov mov dec call or adc add sub ret xor add mov add fs loope xchg xchg dec data16 or dec sub and mov and add or loope test sub xor scas movsl orl jne cmpsl sbb (bad) aam add (bad) or xor or dec adc test dec rclb mov (bad) ss push adc adc xor and icebp fs jmp xor add add sub pop jge add fwait arpl addl cmp rolb add cmp sbb xor (bad) mov add pop jp pop or rorb cmp dec pop test push xchg test jb dec popa push in fbstp test xchg fisttpll dec and (bad) sub (bad) dec dec pop (bad) add std and (bad) push and mov mov rcll xor lods lock andb mov (bad) adc and cltd (bad) lds popf aam repnz push xor arpl sub hlt leave and sub jge mov movsb lea xor sub test mov or pop mov add imul push jp inc mov pusha add or imul and inc nop inc add sbb inc sbb imul (bad) sub inc push sub adc or push (bad) in lods sub imul pop das repz outsb push test xchg sbbl sub pop (bad) test add mov test sbb adc lret pop and dec push mov (bad) rcrb pop lcall rcrb les divl shlb mov pop sbb rorb aas lea mov das sub dec mov and add std xor xchg lds xchg mov mov aaa xchg fsts test test lods xchg popa or lods out jns dec add mov xor popa xchg nop sub dec or mov icebp ss sub mov (bad) dec inc or test sbb lret and jge shrb pusha popa lret mov cmp sbb ja dec cltd add add jno arpl lods or sbb cmpsl sahf push inc or call dec sbb fldt fadd adc aaa pop shll mov jno aaa je dec push (bad) and insl or mov xor push mov add pop repnz xor mov adc pop lock lcall push sub leave (bad) scas xor test jne add xchg mov cmpsl lods testb xor (bad) and dec loope sbb push ret (bad) aam or inc jbe dec lahf sar xchg mov in fs sahf push sub cwtl inc inc js (bad) xor sub sbb and test pop push push dec or add xor and dec fucomip and repnz mov xchg incl leave fwait add dec xchg inc imull and cs inc cmp sub and dec movsl sbb adc sahf dec bound dec and xchg ss repz lret jmp iret add dec sbb test cmp je pop adc or or mov outsl (bad) jb mov sub sarb or xchg mov rcrb adc loopne and xchg cmp rorl fs pop aam mov lods add add rcrb lods rorb cmp add add and lret xor stos inc xor inc pop push sbb fnstcw push popa cli jmp xor (bad) test pusha xor mov add lock pop int movsl sub or xor (bad) fdivs adc xor insb or (bad) xor sbb repnz xor sub adc mov inc in cmp sub mov sub cmp xchg inc addb push shl mov pop xorb aas mov adc rcl mov movsb lcall cmp rcl mov and aam adc jg hlt inc imul xchg add sbb cmp inc lret fmuls cmp add add and xchg or push dec dec mov or dec (bad) mov jns push jp movsb inc add int3 dec xor sbb xchg cmp lods test lret int3 mov push lea adc inc xor and dec sbbl cmpsb (bad) mov mov push cmp lock inc mov xchg pop dec fnstenv mov jnp and inc imul xchg outsb xchg xchg lock sub movsl pcmpgtb inc imul adc mov sahf and push daa in push dec (bad) repz movb xchg jae (bad) mov push orb add cs sarb mov je loopne adc inc push mov or jbe nop push loopne push (bad) mov xchg add fs jl lds xchg cmpsb jno mov lods dec dec cli dec xor jne out pusha adc xor pop sbb add sub xchg arpl adc inc sahf data16 sbb add out xor cwtl mov push or daa and faddl scas test loope fldt pop dec push adc sub adc lahf push mov in xorps shrb in xchg lock inc or add bound movsb mov fistpl jbe and les repz fs inc dec loopne or mov or in iret inc testb add mov sbb add (bad) fstpl sub dec (bad) sbb mov ss add sub insl xor mov jo xor xor dec mov flds iret xor inc ja mov (bad) hlt push (bad) xor popa rcll call sub push pop jns xorl cmc pusha lcall push push adc pop sti andl push mov fucomi movsb add jge xor shlb xchg xchg inc ret or mov sbb inc push insb and cmp fist lods lods mov sub inc sbb lahf add sub roll or mov les jge or pusha js (bad) mov int3 jb test jnp adc (bad) add lea rcrb sub or inc cmp inc dec aad push inc pop pop add add inc jno inc les dec add rcll mov mov ret lea setp in add xorb lods xor ret dec loop outsl push inc push push pop (bad) test and mov and xchg xchg (bad) dec enter (bad) xchg mov pop xchg mov inc pushf (bad) pop sbb cwtl mov movsb shr adc add aaa roll aaa add mov mov xchg popa mov adc rolb mov popa and mov or cltd mov aaa cmp out adc xchg outsb aad adc cmp xchg ds leave addl pusha daa sar insb or add dec sbb and call fldt add sub adc call adcl mov dec and mov xorb xorl sbb loopne cmp and (bad) mov xor jns insb inc aam ficompl jo and and jo fwait mov lods xorl les inc sbb adc add or lcall add ficom add stos sub sub mov aaa add cmpsl fs or aad pop loope xchg inc insl dec push add sbb xlat fnsave arpl or aas imul lock and dec insl jnp clc adc xor test jns ret data16 (bad) mov lret pop dec fsubrl mov fs rcrb imul fcmovnbe shrl mov (bad) add in and icebp cmc adc cmp addb cmpsl mov les add and aas mov adcl das rcrb push mov and (bad) xchg sub shrl fisttpl mov out xchg xor jmp mov gs push sbb cmp pop push add pusha or call mov pop mov rclb xchg fwait cmp imul jae movb addr16 rorb (bad) sti push mov leave leave push mov je add sub mov xchg xchg lock xor push (bad) xor jmp std (bad) xor push dec ljmp in xchg rclb xchg rolb sahf or (bad) (bad) popa je cli sbb arpl inc imul dec insl dec pop fildll pop dec data16 out lret add cmp mov adc dec mov outsb jge adc jmp add rorb pop ficom cmpsb xor js jnp sbb pop mov jbe test or push cmpsb and add cmp xor (bad) jbe cmc and add les pop lret push mov add push xchg xchg mov adcl test gs xchg push (bad) in and inc push loope mov xor lock orl mov mov mov lods icebp add push push and and loope rorb cwtl fisubl jbe pop dec mov iret out add add rolb jae pop mov fcoml jo mov mov lea xchg or sbb dec in add rcll xchg (bad) jecxz dec or int test inc xchg bound xchg subl dec add push and pop ds sbb mov mov pop push sbb add cmp addb cmp fiadd or lar and mov mov mov mov jae aaa and sub mov (bad) adc mov add test mov dec lret cmp pushf (bad) sbb gs les dec sbb push lea pop xor add lret sbb popa in std out nop sbb pop repnz inc ja sbb inc mov jno xchg insl pushf sub into and xor jne imul dec mov and (bad) out flds fucompp xor adc imul xor add jl sarb add out lods rorl loop loop adc je pop int3 scas gs nop loopne (bad) xor test fwait out add xchg dec nop add push pop enter aas inc add push pusha add add pusha sbb xchg rcrb ret or cmp pop mov inc mov test dec fildl imul mov and fwait mov jecxz add mov shll shl fisttp mov jmp mov jo call jno arpl xchg std test lock sub xor sub sub lock and xor shll js insl add mov push stos (bad) lds inc pop lods adc js sbb push sbb mov pop cmp add loopne dec or mov sbb mov push insb or or jo add mov in insb pop mov xchg mov cmp add push arpl lret dec js outsl mov push enter (bad) jge add add arpl std aaa in adc lea adc sub into les cmp xchg jb inc bound gs cvtps2pd or test xor fldl mov xor pop or dec mov mov mov mov mov or push or dec (bad) adc gs movsb push adcb push xor mov jmp or cltd lods adc fnstcw lock inc repnz add loop popl (bad) insb dec fs jecxz mov lar ret pop loope les and pop push or xchg and add sbb inc lods adc sbb sub xorl ss or pop popa pop xchg loopne xor dec pop xchg mov mov adc pop mov mov dec cmp push adcb xchg sar dec add out push inc xor add lock roll jo dec pop fnstenv aad aam xor adc sbb mulps mov push iret inc adc xor mov inc lods and stc dec cmp fildll mov ds fmul mov mov daa and sub push xchg mov xor adc push sub aaa jno xchg mov cmp cwtl pop pop mov rol add xor xor adc loop push js pop aaa fwait mov ds loop imul sbb insl cmp add xor dec push push or push push imul (bad) inc cwtl inc sti jne push inc (bad) aaa in and popa (bad) movsb out xor xchg cmp xchg add pop test dec (bad) mov or jb dec pusha push pop jbe lock add jecxz or test sbb mov push imul add (bad) mov jae es xchg int enter adc scas icebp out inc dec es add jmp add jns and inc dec push mov popa add sbb test xlat adc inc (bad) adc push andb cltd fs add das mov sbb mov adc movsl cmp sub xor lods mov xor lcall push imul or mov xor mov xlat scas pop mov jns jge dec xor add pop mov mov dec dec cmp mov test jmp adc fwait rcr ret roll int3 fldcw and lret gs imul popa aas mov xchg std and and jno inc dec popa xor sbb addb add cwtl jno imul std nop sub and sbb push add jno sbb test shrl fdivl add mov and rorb xchg sub lock adc jb inc and push (bad) xchg xchg stos xlat inc or push add lods add repz (bad) mov aas pop cmp insb gs sub and ret dec xchg mov pop js adc xor jp fs loopne jmp fsubrl and and into push xor hlt push (bad) add dec and or mov add pop loopne push popa add fwait add sbb or dec arpl add dec sahf xor outsl lods outsl xchg shrb arpl inc adc sbb cmpsl fcom mov roll je mov xor sub (bad) xchg xchg cltd mov cmpb popf lea into nop mov inc leave repz push fidiv add jecxz sub mov sbb loopne ret mov mov jp mov mov ret or js imul sub xchg aaa add rcrb push mov loopne pop add mov push pushf dec lods mov rorl inc adc daa sbb or xor es sarb bnd xchg mov movsl xchg add imul add add loopne lea test mov dec fstpl mov add mov mov cltd rcrl jns cmp pop enter mov or dec push dec cmp sbb dec pop xor ret mov add add push xor dec push test add dec aas or and xor aaa rorl and fistpl xor dec mov subl sub adcl sub or mov pusha dec mov mov es jp mov push or push sub xchg lods add xchg push ret sarb bound push rorb add pop push arpl (bad) dec je (bad) lds xchg into pushf or fcomps mov andb scas push xor sub mov rorl jns loope cmp xor call and sbb pop lods lods aad fidivl mov pop outsl sbb or test test mov pop fdiv gs adc add test add sub fidiv xlat or jp and cmp or push inc xchg dec inc push cmp orb adc add add dec repz sbb cmpsb xchg xor jecxz,pn in add xchg cli dec ds or cmp cmpsb mov sub jne add stc xor addl push xor add pop lds inc or add jg xor push mov pop cmp dec xchg xor sbb outsl xchg lock inc (bad) ret add sbb inc sub and add test add leave and movsl ret jns enter add adc mov shrb adc ljmp jp mov flds (bad) test mov movb dec call push addb or aaa jp fs push loop sti xchg xchg adc mov mov and outsl (bad) add push or inc jmp xchg loopne mov das ss sub inc xlat aad arpl lret fimul and adc and mov mov fnstenv jno outsb cmc mov jmp dec mov inc xchg and and insl pop lods mov xchg xchg xchg iret or mov or cmpsb lock gs fnstenv test daa scas mov dec xchg and inc pop pop enter push das or add and rcrb aam inc pop mov out xor or push and mov outsl outsl lea icebp jp imul mov fistpl dec call and sbb fcom adc ret stc out pusha pop pop or pop and adc sub rcrb aam push cmp jne dec lret cs add jb jno and aam or xchg sub dec shll adcb divb (bad) sbb bound dec out push sbbl test test cmpsb sbb cmp cmp push insb stos fs orl not or into mov add stos mov cmpsb aaa incl adc and xchg cmp mov lods inc sbb mov inc test mov sahf pop fidivr lcall or outsl sub jle push addb add or add jmp mov mov inc mov inc das push or inc and mov (bad) and dec add sub cwtl mov mov push xchg xchg jo ret add ret cmp push or mov mov jno int push inc add ja add lret jmp cmp push gs fild and add mov (bad) xchg faddp loop push add sub scas push mov xor push andl xchg jmp adc xchg xor and rolb and insl call xchg xor push mov mov xchg pop jmp mov cmp inc arpl inc and stc lret sub test lods insb pusha fs loope popa rolb lods sub mov and pushf dec lret xor movsl xor adc insb movntps push data16 sub lods pop or xchg xor or add sarl lret pop (bad) outsl xorb loopne lea ja imul xchg cld xchg mov add cltd add push rcrl insb lods xor push jle dec or push in notb dec inc dec pop mov mov rolb mov pusha sub mov sub mov adc and pop xor aaa xchg negl xchg movsl addb xor xchg and cwtl mov das dec jl sbb lock lds les (bad) mov mov fdiv sub sub aas lods xor rolb or sub lock jae xor sbb repnz arpl and adc scas test frstor sbb or sbb adc (bad) or cmp mov mov dec push sbb xor xor sub mov mov mov adc shl test cmp test (bad) push adc inc lods or pop sbb dec es and (bad) in repnz adcl adc add pop lods mov imul adc sbb mov daa inc push adcl mov pop and ret xchg stos in nop test or inc shrb xor dec sub sub mov dec mov and dec pop sbb inc xor orl push adc lds push xor cli or mov jl xchg inc xchg mov sbb fsubs sbb movsb aas add sub dec mov mov mov mov and mov pop or sub mov add inc test sahf push sub je xchg cs push pop (bad) mov arpl sub pop jecxz iret mov inc cltd push jbe inc push (bad) add cmp test cwtl push stos jne lea cmp orb pop aad cmp adcl lods imul and mov cmp test sub mov push pop adc (bad) add dec inc dec jno add gs loopne and sbb (bad) mov adc test daa and xor and xchg dec sub das test sbb js cmp test mov mov or xchg dec loopne cli cs cmp mov lea cmp sub mov adc dec adc (bad) cli push cltd xlat mov test sbb stos lock cmp sub lret pop or in and lods outsb rcrl sbb dec aaa mov fbld loope add xor and cmp movl push add inc roll dec sti loope add jge jne xchg outsl lock movsb test push xchg sub mov and cmc adc shrb sbb repz adc xor mov stc xor les or pop arpl pusha dec sahf xor movsb fwait sub movsb daa jnp jns pop adc xchg cs loopne daa das outsl mov insl pop inc mov fstpl adc aas pop push inc adc lods xor cltd rcrl cmp mov pop rolb lret inc sbbb xor sub fcmovnb aam mov or dec (bad) push pusha sub adc mov mov addr16 in sub test add fs mov fldl xchg je sub pusha ret mov mov xor adcb inc mov cmp push orb movsl adc or dec shrb jge fisttpl pushf dec mov aaa adc arpl leave imul imul fsts mov rcr jg cmp inc cmp or adcl dec jp xchg decl xchg mov neg inc adc mov popa xor pop sub and inc or add inc and xor xchg pop or shlb xorl fbstp sub cwtl lds (bad) push subl add and js adc test aaa pop inc test ret push pop test push stos xor or (bad) add add dec lret test xor xor daa bound add rclb nop adc dec jo xchg lea movsl add or xor or xor jecxz stos and sub mov rclb imul jns inc add jae push mov mov add dec jmp dec sbb adc jne mov push out add imul and add (bad) and push or push mov jge les movsl pop cmp jmp xchg xor push push aas in test inc adc adc inc enter lds lock or xchg xor faddl std cmpsb push jp lea cli inc cmp or xchg adc adc cmp leave push lods pop mov or fsubs and mov push and cmp sbb mov mov mov icebp add push jns jbe add or stc jmp xchg xor mov mov xchg push sub dec sbb rclb or jg nop xor sub scas andb sub dec mov sub mov adc aas decl dec frstor insl nop mov inc pop xor sahf dec jmp adc ret xor mov lret ljmp test imul lret mov pop sbb push mov add inc movsb mov int dec add add jbe pop inc (bad) xor inc cmpsl inc subl xchg add icebp cmpsb add test or fmull or popa movb push fist sar and and and ss dec pop lea sbb mov gs adc imul push mov mov xchg xchg mov rorl sub cmpsl and (bad) leave lea dec push and adc or imul pushf nop pop popa lea inc push test imul and cmpsb inc pusha pusha adc inc add sub push add cmp pop add jmp rol mov inc ret dec adc inc jnp fwait test add insl push pop (bad) imul jl add push loopne mov inc orl xor and shr adc or and jmp jo mov sbb in insb xor shrb cs or arpl insb or pop cmp and (bad) cmp jbe leave ds or push sub xchg call rclb add ficompl cmp cwtl test imul lods arpl push repnz call mov inc dec and pop pop inc inc lock mov jnp test cmp xchg jno inc fistl loopne insl inc mov xor xor sbb pusha js pop xchg cmp test pop jecxz insl out add add and rcrb (bad) mov xor mov inc jbe cmp popf scas rolb sbb push fidivrl push dec or or pop dec xchg xor sub in movsl inc sbb push ret and loope sub rorl xchg push daa int3 mov adc xchg xchg std push push andb dec xor lock daa insl loopne pop sbb sbb (bad) popa insl add cmc sub imul fs push add dec and or and rorb adc stos or subb inc sub cmp mov ds xor adc jbe pop xchg dec xor mov je adc fistp lock daa js bound (bad) add imul movsl inc xor xor and inc add or sub xorb popf cmp dec xor ds lea add sub xor cmp pop or (bad) lahf dec add imul cwtl pop test daa dec add scas imul push pop or sub pop xor mov mov xor rorb or and jecxz in andl xor sbb pop xchg inc or mov add push cmp enter inc adcl movsb out and jp push es outsl inc jmp inc push xchg add inc arpl imul sar cmpsb and movsl lcall cli test pushf xor inc stos and ret and sub inc dec arpl stos pop aam mov mov bound xchg inc (bad) dec sub je sti inc push sub sub mov cmp movl xchg sbb inc ss test jg and jmp pop adc xchg out sbb pop pop push xchg xchg or bnd lods and (bad) mov jb pusha (bad) lock jo mov in in pop sbbb cmp and adc pushf rcrb xchg (bad) push aaa push test push insl arpl mov mov test inc and popa mov stos int inc pop les lahf xor sbb leave xchg ficomp cmpsl test sub fwait ret les int3 push add push addl sbb add (bad) or or (bad) inc cmp movsb dec and (bad) or push aam push icebp push pusha setbe cwtl xor xchg xor mov add and daa sti push inc mov movsl inc std and xchg shr lock inc add mov in add xchg mov pop sub fsubs nop xor ss test fldenv and push dec mov adc adc xchg insb inc xor mov pop dec shll mov shrb xor mov xor es mov dec stc xor or icebp cmp or jo push iret fwait ret movsl lea and push adc inc mov or dec addb xor sbb pop sbb push mov mov adc push mov push mov sub jne aam adc popf insb mov push aas cmp xor or add adc loopne inc pop ret cltd popf stos ret xchg leave std sbb xor fidivrl or loopne test xor mov cmpsb rorb xchg imul jmp inc sub pop inc and xchg pop sub incl repnz scas jno add xorl sub jno popf push push and mov das sbb mov inc sub inc mov sbb push xor mov or loopne and push dec jmp sub xor add aam xor mov pop sub pop push aaa pop or xor add mov add and cmpsl push lahf test dec dec add add insb and mov add add inc dec sub add imul cmp dec inc fcoms pusha (bad) je or add xor sbb jo ret inc or xor and or xor nop push push push clc inc (bad) mov inc push jo je inc add stos sbb xor imul add jmp loopne ja aam push imul adc push xchg loopne add push mov sub icebp dec or mov test (bad) mov data16 add adc pusha dec (bad) add movsl addl adc dec pusha (bad) adc popf shll and lret mov (bad) mov mov sahf (bad) mov outsl adc (bad) mov out dec push push (bad) mov xchg mov adc add ds nop dec nop lods pusha adc nop sbb enter inc cmpsl jmp adc cwtl inc fiadd xlat add mov mov sbb arpl pusha sahf push pop jo shlb fs loope pop dec inc outsl and pop jge push loope and mov ss js dec xor pusha insb loopne ljmp cmp push nop sbb cmpsl gs and movb or dec das jns sbb mov scas push lods mov rorb mov ret mov aam xchg inc stos or jns sub and mov and adc inc sbb or xchg add adc mov push popa dec adc popa inc dec jp cmp jmp test xor cmp into and daa mov dec ret mov aad jo inc mov and and adc jp xor lahf or push lahf and cltd push ja movsb pop cmpsb add mov sbb popa xchg inc jecxz mov mov push in mov sub xor and sub out mov xor (bad) addl (bad) mov adc inc lods mov addb mov sbb nop sbb decl add outsl out sbb arpl adc adc or push adc xchg lea addr16 call lret xorl jmp sti xchg add dec mov fiaddl dec addr16 sbb dec lods xor aaa add adc or adc mov xor push cmpsl loope adc es shlb add pop sub pop pop pusha push pop and ljmp push adc jecxz fdivp sub dec test rcr xor mov clc sub repnz sub and movsb mov es cmp push push add push jge or addr16 inc int3 cmpsb inc aaa inc rcll pop add lret sahf es xor ss pop inc push add or adc test jbe (bad) fist clc xchg xor sub aaa hlt lods loope sub insb inc dec dec xor in xchg mov sub sub sbb xchg push inc mov or bound add imul xchg je rclb (bad) mov mov pop sub adc cmc ret cmp adc xchg mov pop (bad) int inc sub js lret jo cmp stos sub inc and push out mov sbb loopne mov clc and sbb mov jbe sub sbb pop cmp add fidivr (bad) xchg arpl adc add outsb test cmp fwait int mov xor add push inc subw je aad orl mov add (bad) rolb call popaw sbb pop sti in mov in mov adc pusha popa add sbb (bad) mov sbb stos inc mov add imulb shr shrb xchg lock sub repz je rclb sbb je je nop in inc popa or jbe pop sbb loopne jnp lods addr16 mov mov rolb dec stos and or cmp rcr gs aaa pusha pop xchg aad arpl pushl call movsl cmp and mov cmp mov daa sub jbe sub adc and dec mov sub or fildll pop mov dec adc imul push dec rcl sbb mov push xchg fnsave enter imul andb aaa popa dec add sbb cmp push sbb push test cmpsl mov xchg mov add pop or mov fs mov sbb roll cmp push test inc add stos cmp cmp or js and icebp sub xchg adc aaa mov cmp lret xchg sub movsb adc mov mov add dec rcrb mov fisttpll mov adc xor or mov pop test std test pop ret mov mov or lcall push push je pop ljmp cmp movsb cwtl scas mov jp fwait xor or sarl add xchg dec leave mov xchg adcb in je add inc arpl inc sbb out push push sbb xchg add jnp das sarb mov rorl lea rol aas jbe sbb loopne or sbb jecxz inc push data16 cmp inc inc out in sub and ret xchg ret pop fwait inc add pop xchg xor sbb add or test jbe add fs mov push popf fs fiaddl test scas nop shll add loop adc sub outsb sbb iret xor mov jmp aad xchg add cltd roll cmp cmc add xchg xor sub repnz jns add xor lea push rcrb js nop sbb or cmp push sarb add sbb inc bound add fs (bad) mov adcl xor daa sub inc mov cmp mov sbb and (bad) movsl ds hlt (bad) aaa mov inc jne xor rcll fstl xor sub dec in mov rep mov ss nop pop fildl add mov cmp (bad) dec dec test fcmove jo xor sbb dec popf add stos xchg add les and sti sub shrb adc pop jecxz or nop adc push xor mov inc cmp gs mov mov les dec add dec arpl add sbb xchg cmpb add (bad) pop je cmp pop insb cmp ret or xchg cmpb insl rorb loopne or cmp or dec (bad) push inc sub xchg mov sub faddl repnz test mov fdivl in arpl pop add popa shr iret aaa cs in scas rcrl push or insb jae xchg xor and pop (bad) xor ret daa enter jl push popa adc out cli xchg cmc mov scas xchg add ret rol and insl jmp (bad) icebp xorb xor loope cmp xchg shrl sub jnp inc pop adc adc cmp xor outsl outsb gs ret jp nop mov mov adc popa rcr sti and push jp lahf fld push nop sub xor test add lods or lds sbb mov insl js faddl dec ljmp lods movsb test (bad) mov rcl dec lds lea je add test pop mov inc xor lods addb jne cltd xor das jae xor add je cmp rorb push xor test or mov mov push xchg mov aam xor sti test nop mov roll fisub adc add pusha xchg xor test sub pop add gs fdivs nop mov aad mov orb icebp dec adc or scas outsb pop stos xor imul js sbb stos and add js in and cli test add enter insl dec mov mov das jecxz out mov (bad) repnz mov dec jb popf in push adc pop or dec adc inc sub in imul inc imulb cmp dec xor jne test or shlb andb adc movsb in insl dec cmp cmp jno inc push push stc push lods inc sub dec jnp or cltd add mov xor dec adc add popl pop js push fldenv (bad) rolb add adc mov imul push inc push jp (bad) imul call mov clc xchg mov push add sub inc xchg cltd jb test sti pop fwait xchg xlat je in dec pop imul pop daa adc lret cmp pop cmp dec lods add hlt mov add adc sub push rcl insb mov mov jge sub cmpsb sbb inc dec int popa inc inc dec aas andb jecxz jnp dec ret adc pop add mov (bad) lret inc nop dec push test mov icebp cltd ss xor fwait in cmp sub ffreep rcll xchg inc call test clc cmpsl aaa mov or add mov inc aas push sbbb jmp inc xchg inc sbb pop mov adc fnstcw call (bad) xor ret jmp xchg pushf test push or inc (bad) jno sarl mov js dec pop jb sbb imul cmp xor sbb jecxz add inc dec repnz or push xor xchg hlt xor and test sbb loopne jns jo test popa or xor cmpb pop and push jb push test cmp push inc mov and push orb push mov sub scas xchg adc or cmp sub addl out adc in push or fsubrs (bad) roll sbb andb and dec xor mov cmovae cmpsb adc xor imul mov js daa dec mov xlat orl jmp dec add add dec imul stos sub outsl insl gs inc rolb dec subb lods adcl mov pop lret rorl pusha xor push cmp sahf test js repz cmpsl xor push out and les pop sbb and jecxz movsl sbb (bad) insl mov mov jl or dec or cltd loopne shrb sub inc stos jo popa je lahf push orb jmp sbb sub push and outsb cmp push pusha divl sbb inc in pushf push rcrb pop les outsb mov (bad) aaa add xchg lods push rcll adc popa mov pusha mov (bad) pop test xor lods dec (bad) test test xchg sbb (bad) or push push mov inc mov jnp adc adc sahf out pusha lea (bad) dec jns pusha and add pop add add ja sbb and aam test xor xor (bad) add outsb adc xchg add inc mov cmp push push push xchg iret cmp divl and popf shlb or push inc pop sbb mov or icebp or test cltd sbbl mov test xchg clc pop cmp sub mov popf push ret test adc pop aaa or and or xor or stos add add inc rcrl lods lds andl cmc push inc push dec fild add xchg cltd test xor movsb icebp bound out add mov insb adc add xchg sbb int3 add cmp push movsb (bad) dec mov mov (bad) lcall nop pusha pusha call test sub cmp lock sbb pusha inc (bad) mov outsl ret jo inc add jmp sub dec cmp jmp and add mov mov and cmc cmp mov (bad) xchg int3 xor push cmp loopne incl pusha and sub sub push into push shrb stos cs push jecxz into pop inc rep fsubl js pop sbb popa and mov add cmp sbb cwtl pop sub jp pop inc lcall adc pop sub inc rol icebp push xchg xchg add adc inc push mov inc popf popa xor loope loope lea ficom cmpsb pop mov mov in dec mov outsl xchg inc movsb push leave out xor and and mov inc test leave bound push movsl nop sbb inc adc das jecxz cwtl lock lods lds push clc xchg bound pop scas mov push and mov mov mov rorl cs add mov push dec cmp fist push inc addl sub pop push inc dec pop add mov in arpl dec sub xorb cmp in movsb cmc std dec sub shrb inc pop pop push mov xchg adc sub aam sarb or insb outsl xchg jno add xor pusha pusha pusha lods (bad) mov xor lcall int3 fcmovbe jp addb dec enter addl test and adc pop pop outsl lret mov (bad) sbb inc xchg adc xchg scas in and push daa out insb add xor cmp lret or in and xchg xor push dec sub adc mov jno lds inc pop popf mov test out push lret rcrb push aad mov or xchg cmp xchg sbb add pusha add (bad) xor inc outsb test inc arpl inc pop or add adc lods and inc pusha push add lock popa jno add xchg adc cmp pop rolb cmpsl xchg cmpsb test popf cmp pop lock cwtl stos sub xor popa dec ret into imul fistpl push addb mov inc test das xor leave xor pop jmp or xchg push jp movsl lds mov pop xorl xchg int inc call dec adc add insl jmp clc and loopne mov adc lret test mov push inc (bad) test dec or arpl mov inc xchg fidivl sub lcall push xor imul rorb je adc add sub andl and adc cmp loopne fildl es xor push sub cltd mov inc and or cmp daa loopne xor dec inc loopnew mov add xchg mov or cmp enter inc aaa push adc cmp and and cwtl sub xchg mov xor push sub dec call pop pop les cmp jecxz cltd outsl xor pop sbb or adc inc xor or and pop loope ror sbb xor test popa loopne add jmp fistl xorl das adc (bad) inc sub cmpsl jmp sbb imul xor jo mov ret cmpsb test dec pop mov gs dec adc xchg arpl arpl divl xchg ret rclb mov xchg or sub cmp sbb pop (bad) xor push xchg sub sub xchg lcall push mov ds push lods xchg xchg cmp js adc sub popa jl sbb daa xchg add push stc push fcoms mov js push or imul xor mov and int3 fs inc push dec sti mov inc and (bad) mov test dec out das jge and in pusha adc mov daa pop pusha bound icebp das and loope je and and and push push enter out incl outsb fisttpll sbb xchg pop repnz mov dec ret cmp nop and jmp into add mov sub pop pop jmp dec pop loop push fildl sbb repnz sub jmp addr16 pop push fs pop fadds mov test (bad) cmp pop pushf pushf add iret add adc pop aam std xor add push pop rclb dec or outsb xchg inc movsl pop or pop iret cmp pushf mov push adc icebp and or addb int idivl sbb dec or cmp jmp sbb sbb pop mov (bad) xor cmpl sub (bad) dec int3 test add addr16 adc divl lret mov inc mov lea dec lods jl arpl ret sub adc mov add jecxz push (bad) js dec sub dec mov push mov mov hlt es cmp fs scas test inc adc test cmc and sub and sub mov pusha mov gs test cmp insb mov push pop adc int ror rolb dec rcll mov dec jo sub jo ret mov outsl sbb or mov jle jmp mov push inc cmp rcrl xor out lret xor adc mov pop loope dec movsl mov insl test ds and addl test (bad) fild nop jne adc sahf mov sbb mov fbstp stos xor push dec xor pop pop sbb lcall ret xor divl mov mov js mov pop nop push dec cmovs push xor std push aam sbb ljmp pop lret xchg cs repz loope add insl pop xchg and inc js xor nop rclb jns jmp sbb aas addl adc inc (bad) jo sbb imul push sub dec mov test mov sti addl inc sbb xchg daa add imul mov or sub ret adc sbb or mov fs push add test in cmp psubsw pop ret mov into xor cmp sbb mov in ret push cmp popf adc dec xor xor rclb inc and xchg sub ss je mov sbb mov push mov (bad) xor and (bad) and dec push into add dec sbb xorb les jo jo dec sbb sbb lea or cmp arpl test dec ret fldl pushf sbb pop mov or and xchg cmp mov pop mov gs cs (bad) aaa test imul loopne pop sarl pop inc jmp or (bad) mov cli mov hlt (bad) mov and inc xchg mov or mov icebp xor (bad) cmp mov mov cmpsb inc push stos sub ds gs jmp inc les test lods aaa in pop insl xchg push (bad) (bad) call pop lret in dec adc gs adc pusha addb rorl out bound cltd icebp nop sbb fidivl jb xor jg jle dec test movsb xor xchg xor rclb lock mov cmp mov xor mov sbb nop arpl push and dec jno jbe fsts sbb dec ss add xor cmc add imul push wrmsr test imul push xor lret lea notb cmp lods add pusha fadds loop sbb jl push inc add (bad) loope adc and movsl sub add or jns or xchg add xor or jae lods lods pop inc cmp adc xor xor add push sub aam dec mov pusha cmc cwtl mov leave leave and stos pop ret lret dec outsb mov dec and aaa lahf adc cwtl or les popf and leave mov icebp or adc rclb pop sub test dec rorb sub or clc mov push xor mov or mov inc jae in push daa sub cmpsb cmp leave mov popa inc out xlat pushf mov adc popf or aaa call mov push push and (bad) or lock or xorb or lcall sub adc sbb stc add rcl dec sbb push fldt push clc inc mov (bad) xchg add cmpsb test xchg jo fisttp and or adc push ljmp sbb das inc dec std add add and jno xor mov movsl mov fcomi mov jo ss push js movb add pusha adc mov cmp sub add add or push mov xor pusha sbb (bad) lds mov or cmp pop sub rol or sbb pop lea add or inc shl sbb scas ja test and mov adc inc fstpt inc sbb and xor gs add popa cwtl xor xchg push cmpsb sbb lods (bad) sub jg popa or mov sbb adc add ds ljmp mov shr lea (bad) ret adcb arpl inc shr popf or sbb and add insl test pop dec sub xchg cmp push fmulp dec jg push subb mov inc (bad) call inc sbb pop push cmp mov pop leave dec aam ret lret adcl fstpt ss inc push mov or lods pop rcrl mov jns decl movsb stos rol xor loopne arpl or in arpl mov daa push pop mov sbb mov int fbld xor rcll aaa add dec jbe and sub mov or or sbb adcb cmp mov push jae test mov adc pusha add sbb mov fcmovnu test mov nop jmp pusha (bad) sub push sahf ds pop add sub and xor mov cmp pop xchg lret mov push outsb mov clc add aaa xchg push aam mov jno adc xor bound addb cmpsl sub pop (bad) lds jmp adc shlb sbb push push xchg popa xor jecxz repnz lcall (bad) fidiv pop pop shlb (bad) cmpsl mov rclb push cmp xchg cmc add mov movsl mov and cmc cmp xor leave mov lret test pop and add fs arpl xor cmp add (bad) adc enter gs mov xchg arpl inc or fidivr call mov push mov lret jecxz sub jge lds insb pushf jno adc pop inc inc lock enter lea jno adc adc pop test sbb mov lds sbb xchg aas xchg or arpl push or mov clc mov sub (bad) mov push mov shlb pusha inc bound popa mov js rcll mov rcl in pop insl cmp push xor pop arpl xor in jo inc mov sub ret xlat add or shrb mov add pop fs lods dec adc test icebp je sub inc mov popa lea icebp xchg sbb and and leave sub lea xchg mov push (bad) adc aam add test adc rol add dec pop sbb sbb outsb sbb xchg daa mov imul jle pop add mov push (bad) inc cmp int xor or ret mov mov mov add inc dec sbb xor and ret push aaa sub imul movsl xor xchg dec xor add sti stc cmp stos or add dec xor aam cmp jae xchg lea adc loop mov cmp cmp xchg adc add jecxz jnp mov lds mov xor lcall push dec out adc sarl push adc push xchg pop or or sub sbb std jl test add cmc mov imul test (bad) adc dec xchg testb or xor push repnz adc xchg jo inc and add adc or mov dec xor pop xlat push test fstpt jo xor add or jnp lods xlat add push and popa lret dec movsb fldcw arpl inc cmp (bad) xor jb adc fs jecxz cmp bound xchg divb xor inc cmp cmp imul sub pusha or mov cmpl ss sbb add shrl jne add (bad) aaa cmp add pop pop out packsswb lahf fwait lods popa or jbe adc lret push (bad) cli (bad) fisttpll and ret push andl inc or or mov (bad) adc xor rclb nop cld push lret pop lret in inc int dec std out xor (bad) lock inc fs pusha lods pop xchg and icebp and push sbb mov xchg xchg xchg inc adc call faddl outsl or pop dec movsl push dec rolb push adc cmpsb xchg jns xchg and gs mov cmpsl dec and adcl sbb push xor mov xchg cmp (bad) jo pop push push or add jge cmp aad pop pop dec or bound in push addl xor lds pop sbb cmp aaa xor pop (bad) mov sub lahf mov push leave std sbb dec mov pop or sbb test xchg add pusha or sbbb rolb xor dec push push cmc xchg adc call cmp ret pop inc jecxz lret addl push or push sbb ss mov fcomps ficompl push pusha jo or sbb add sub daa dec pop mov sbbl cmp cmp dec mov jns sbb dec sub (bad) lea fs shrb mov sbb aaa mov mov add (bad) pushf lret mov fcomps mov add xor pop dec and cmp test dec push test xorb aam cmp sub or dec ficomp add repz or mov push dec xchg mov xadd in or push lret hlt and dec arpl inc xorb inc jp xlat sub mov stos sub dec add jmp loopne pmulhuw pop fist add xchg test push lods dec xor inc jnp dec sbb daa imul xchg sub add xor cltd xor andb pop rolb inc xchg icebp mov sub int or fisttpll adc xor pop mov sub add adc fcom cmp add inc push add adc or ret add and pop rcll stos sub and leave lret test imul pop mov sbb fnstenv or inc sub xchg inc pop rcrb xor or outsb nop jo outsl dec nop and inc ss cmovg inc and xor mov inc inc mov inc push fdivs adc or (bad) cmc subb lret and add add movsl lret andl call (bad) jno xor imul ret adc stos out je (bad) jns cmpsl mov dec and (bad) cltd loopne mov dec push adcb and mov sbbb sbb mov icebp add mov leave sbb gs mov xor add pop push dec rclb lods idivl push sbb mov fisttp push outsl push test push jp xor inc and andl lods jne push pop push sub inc or xchg pop or dec aad add sbb mov test andb push shrb lea pop aam mov popf mov lods and inc cmpsl or loope dec sbb push (bad) and cmc pusha sbb mov and xchg add test cmp fidivr fiaddl inc fstpt jecxz in das or or or movsl insl lahf jle mov dec push xchg inc xor pop pop clc pop ret mov inc xlat or xor jno inc aaa inc mov inc xor leave inc mov loopne sarb push mov adc dec add jae rolb push rcll and xchg adc sbb in cwtl mov pop fstps test stos inc cmp push xor pusha addb sbb mov sbb inc sbb xor sbb and mov xchg cs dec mov or leave insl repz mov jp outsl test sub je nop add jecxz test int push je xchg mov sbb pop inc mov lea xchg jae rolb fldl fdiv movsb and int3 scas lock hlt (bad) cld xlat inc test dec xchg orb inc lock mov and cmpsl inc sahf or and ljmp pusha xor xchg jnp push cmpsl push jbe add xor jle add pop xor aam inc rclw rcll arpl sub xor adc addr16 mov sub add enter push inc cmp mov cli xchg test adc lods push out mov fldenv mov jp outsb inc pop adc mov sub mov sub push (bad) sub cmpnleps dec scas dec ret xor lret popa lock std push add (bad) lods pop inc jp jmp add mov movsl or add sub push stos insb lods lock mov popf mov xchg jns pushf dec ret mov xor push sub lret stos mov cmp add mov sub sbb ret mov inc mov mov sub cmp or xchg mov stos daa cwtl mov adc orl dec cmpsl jbe dec sbb adc test and iret mov sub mov and xchg (bad) add subb add cwtl arpl lret icebp je movsl adc shlb mov add popa movsb sub orl push add sub push mov or sub push or cmc aaa inc cmp inc inc add loope and and push loopne lods add jl (bad) outsb lods test mov xchg xchg dec add or cmp sbb inc or out inc push daa imul ja fisttpll xor inc inc popf and cmpsb sub mov das sbb xor inc inc leave popl and ficom add pop xor push pop (bad) and les mov adc cmp pop xor add inc ss fwait aas sbb add mov ret xor or icebp movsl inc bound add push (bad) xor xchg dec push popa aaa movsl je mov (bad) jno cmp xor ds xor and cmpb rclb mov adc push inc fwait xor add adc add shrl popf rclb cmp insb add mov mov inc adc out ret cmp aaa push aam roll mov mov stos lcall test add add or pusha add pop imul xor popa lea in jbe and int3 sub (bad) sub and loop sbb jmp adc ljmp adc xchg jns insb out lock jo lods sub add lods sbb daa cmc adc xorl add mov xchg fldl xchg movsl mov sub mov xchg je mov movsb add or (bad) arpl dec cmp dec dec push sbb mov and fwait in and inc dec lods movsb pop xor cld bound adcb enter mov js add add jmp add or pop mov sbb xchg fcoms daa jge lods dec test in popa frndint ss adc imul push addl sbb add aas aas add or mov cmp mov mov pusha fs out movsl inc add ret add fildl sbb and sbb scas das xor stos lea test or cmp leave xchg fwait xor dec lods adc clc (bad) fdivs sysret adc inc popa sub push cwtl (bad) lret inc add pop je xchg movsb and aas loope ret mov add or xchg cmpsb (bad) pop add popf xor and sub jge xor test xor sub cmpsl inc (bad) and or shr test enter and cmp push pop pop das jp js push or mov xchg add xor outsl ret and (bad) repnz adc inc pusha push rclb xor dec cmpsb cmp or or and push es lret sub shr xchg or or rorb scas sub jo inc (bad) adc or andb aad add test add inc dec dec cmp daa es mov shr inc mov or inc fwait int addl lock movsb mov add mov outsl pop add xor lret xor sbb mov inc dec leave nop bound pop addb add outsl lock push push xor xor jo in dec cwtl xor lcall pop sbb shrl inc push sub mov ret adc xor pusha sub sbb inc mov xor icebp sbb sbb inc imul add mov cmp mov and jmp sub js add pop add adc mov nop aad adc push cmp adc and cmp or test mov xor xor out pop mov xchg add pushl nop sub inc imul xchg inc adc add adc add mov xor cs dec or fisttpll and add pop fldl cld pop ficom xchg andb out add mov (bad) cmp rolb cs lahf ret pop addr16 divb sbb sbb iret scas hlt xchg pusha pop rclb or xor sahf xor rcr push push stos int pushf xor push mov and add push nop jb adcb lods leave mov xchg mov mov mov xor sub mov cltd cmpl sahf inc mov inc dec sbb push jge mov xor ret aaa daa jp or hlt mov sti (bad) inc ret cmp adc adc pop fildl inc data16 push pusha add cmp pusha add aad lds (bad) sbb (bad) jb mov popa jne jno mov sub cmp mov lds inc push test movsl jno das loopne leave xor cmc sub cmpsb sbb cld mov ja cmpsl mov pop jno inc test adc out sbb mov push jge popf add add or push sub xlat mov popf mov jmp push les jb adc and movsb add mov insl ret xor or mov sbb jge loop test push xor rcrb xchg test add in mov inc sbb daa lret inc xchg data16 pop lock sub dec pop mov jmp or push or jo or push xor adc cmp pop sbb jno bound fiaddl xchg dec enter and or (bad) pop sbb scas dec dec lods add mov xchg mov mov aad and push jo lock jo int adc cmp push daa sub adc or push pusha cmp dec or repz push push roll mov add ss lods sbb add popa popf stc mov ficompl popa add mov or gs xlat enter lret and xchg cmp mov (bad) ret sub test stos adc dec push mov or inc or aas or cmpsb (bad) push and pop inc and lds push push inc xor mov data16 mov sbb inc add sub sbb mov mov xchg fild jle sbb imul jp test xor or rclb push cmpsb sub inc bound mov les or cmp inc pusha add test xchg loopne loopne loopne jns shll sub xchg movsl mov ret pop insb or popa adc xlat sbb xchg sub jne mov sub dec mov dec adc pop xor inc or popa popf xchg pop fs pop lock inc (bad) xor fbld rorl mov imul (bad) shr xor pop gs inc pop add add pushw rorb stos pop outsb enter pop adc inc lods cltd adc xchg mov lahf ss sbb sub dec in popf add (bad) sahf shrb jle inc mov test (bad) jge and push xor or pushf gs (bad) or mov lods mov lods shrl lea push loope ss sub or adcl xchg outsl rcrb add (bad) movsb fsubs xchg or sahf test arpl loopne cmc jp ret or adc pusha das pop (bad) xor inc mov test dec inc jbe je xor popa and cmp cmp cmp arpl aad add inc sbb sbb cmp pop ss jmp (bad) andl ret hlt nop cmp pop loopne jmp or push gs lds gs stos sbb dec or arpl fs and fildl mov in pop mov sbb shrb mov sbb lahf dec fmuls sysenter les adc and iret movsl dec (bad) jo cltd cmc dec push push add inc jmp aam sbb fucomip das and cmc addl xchg imul mov add movsl add xchg mov add fistp mov sahf movsb xor pop in inc add jmp rcrb dec and xchg add call xchg pop xchg push add sub leave (bad) addr16 pop cmp adc jle ja loopne imul xor dec es jecxz fidiv sahf inc das mov fidivr push jmp loope ja pop es xor and enter jno cmp pusha or rolb imul pop arpl popa dec mov imul xchg push add xchg cld fldt adc jecxz loope loopne aaa cwtl push test mov or mov cmpsl rcrb and or fsubs andl aam mov in andb or (bad) loop sbb mov movsb mov add mov mov xor (bad) sbb sub sub insb nop add and adc sbb adc inc push pop add ja inc pop insl lods push je xlat xor ret test xchg mov divl cmp push rcl push pop dec add sub lods fisub ret xchg or adc lock add jge call xchg push adc adc mov repz in adc sub sbb adc cltd and and add mov popa rcl repz xchg push add leave cmp inc enter push mov lods pop xor sub data16 or andl (bad) ss loop imul pop pop shrb shlb jno dec add or jb mov add sbb and add sbb add push or addl sbb (bad) cwtl dec gs popf add pop (bad) lock inc inc push popa inc rorb jb mov popf dec mov push loop sub (bad) adc pop outsl mov jmp push ljmp sbb or mov xchg test inc dec hlt ss ret (bad) or mov inc push popl cmpl testb mov add mov xor mov and pop sub sub leave cld xor sub xchg dec repz sbb pop addb cmpsl add lret pop into xor lods insl (bad) loope popa shrl xchg insb xchg rcr aad add mov jmp lcall pusha inc add cmc xchg inc test (bad) nop shrb xor adcl pop test or cmp push test cli cmpsb stc xchg xor sbb add sub sub pop ret sbb subl cwtl imul adc or xlat xor xchg bound and add sub xor mov add movsl orb jl bound adc add or ret inc add dec pop inc dec sbb arpl push cmpsb sub dec adc cmp add or add out loop xor test into rorb mov test sbb iret sbbb repnz (bad) add add and das push push or xchg mov imul add dec mov dec aad xchg add movsb and mov pusha push cmpsb loope adc pusha or add xchg mov xor push inc xchg repz mov aaa inc repz xchg adc push lock sub push xchg adc add cmp stos imull lea or rorl cmp movsl xchg mov xor dec adc sbb or mov sbb inc jl sbb inc lret add push stos lods lds pop and stc mov shrb adc or jg enter hlt sbb pop sbb rcl sbbl dec bound or or or inc std daa cwtl aad jnp fidivl iret and cmpsb pop cmp jns popf adcl sbb push loopne pop xchg movsl xchg or cmp sbb pop test loope stos dec inc sbbb add fwait sub cmp pushf and cmp push and loopne pop lret cltd pop push sbb pop nop cs fildll rorb ja and fisttp cmp sti xchg sub inc and adc cmp and sbb adc pop adc xchg icebp xchg xor aaa jmp dec mov out sti or sbb mov test and adc mov in inc push or loopne jle loopne cmpsb push xlat js mov xchg ficoml (bad) add je loope adc and das lock push iret std imul insb mov rcrl orl movsl sub leave adc pop mov rorb pop push dec loop popf test cmc sub sbb adc push xchg mov push mov adc xchg and nop or je test dec ds cmp test mov lods cmp lret xchg inc xchg dec lock insl inc movsb xchg (bad) scas fs xchg movsl lret ficom fiaddl andl mov fsubrs dec loope xchg adc add outsl push push outsl pop mov adc sbb sbb xor jno add xchg adc sbb mov movsl mov or push sub pop fucomp push addps xor push mov jo push mov push add push dec ja rcl mov das (bad) addr16 pop or dec das ss mov pusha adc add xor fucom push rolb mov lods movsl ret inc pop or int xor and sbb inc dec mov or sub inc push sub inc adc fidiv mov pop mov (bad) (bad) cmp xor inc (bad) dec dec mov push cwtl xchg adcl hlt add dec out test and (bad) xor pop mov sub clc ret cmp es push jle int3 or dec sub push add cmpxchg imul iret add insl sbb jbe adc dec dec cmp int3 inc call lods inc add icebp add lcall or pop fldenv mov lock or dec mov inc and xor xchg sub rclb dec jnp add mov lds rolb push dec mov and jb or pop fs mov or xlat std and dec pcmpgtb cmp or xchg push mov dec bound xor pop (bad) rol xor mov sub sbb push adc adc xchg pop jne lahf test ret jmp test mov inc jb xchg and hlt out push and enter xchg test pop sti sub xor cmp adc push hlt inc adc (bad) nop and pop push xor adc cs gs ss test pusha sti es pop jge mov push adc adc dec test push pushl mov test inc adc xor outsl or or scas popf jb mov nop mov lcall xchg out popa push rclb xor andl dec loopne mov mov fcomps cmc pop push cmpl nop in cmc dec push das xor movsb jo cmp or mov mov lcall loop cmp adcl and (bad) jo inc and cmp add hlt dec (bad) xor fs xchg lcall and lahf adc add xchg movsl push jo stos adc cmp push and sarb add sbb push mov bound xor insb fcompl pop xchg jb (bad) in test nop push dec int xchg pop pop insb cltd movsl mov arpl push aam xchg mov or es cli cltd jg pusha push push lcall leave (bad) jecxz sub leave cltd and mov dec pop popf gs cmp cwtl xchg adc rorb mov jecxz inc cltd or or mov mov loopne es stos or fstps cmc adc adc nop mov inc xchg or xor pop sub pop or mov adc pop jo pop sarl inc cmp cmp adcl je fbld ja adc dec imul popa add mov ret int adc and addl and mov jo inc dec or lock loope or gs and in fildl push lret lcall popf add ficompl je cltd and lret xor push orl es rcl push sub cmp fnop xchg sbb push inc mov add cmp inc (bad) xor sub add add lods fistpl lods and xor push add push fistpl mov sub or enter push popa xor inc cmp add push (bad) or push pop (bad) out sbb cmp daa rorb insb insl dec enter mov subl xor testb pop sbb movsl adc nop or (bad) hlt sub lret rcrl stc xor lea (bad) pop pop mov add sbb sar mov aaa jno fs and test sbb xchg divl insl cmp add js rolb mov scas insb popf sbb mov sbb lods push ljmp jo xor mov into xchg mov mov jecxz mov add outsb lods xor xor or or (bad) je (bad) inc adc or jp into out fwait add add push inc sub das xlat xchg in leave outsb sbb rorl lea pop cmp add lret add into nop xlat dec rep jp mov es push xchg inc push xchg rolb cmp sub sbb dec insw sbb cmp stc adc inc movsl and fdivl aam cmp mov pop xor test inc test and (bad) in and stos lods hlt mov adc and outsl nopl pop xor movsb cmpl jno in push ret sub inc xchg cs add movl test scas xchg es add es mov mov push xor pop ss (bad) xor mov or lret dec jb test dec sbb popa add test outsb imul dec inc mov sbb or sub ret sahf push incl test xchg push inc stos cmp add insl push mov addl inc push xlat dec add daa enter cmp add sbb shrb mov sbb lea addb xor pop ret ja imul mov jo mov or bound jae pop add and dec inc adc xchg cltd and adcb adc orl dec adc xor push push movb push pushf sub push pop or push sub out push mov add mov push inc ret addb xor and loop jg popa int3 add pusha mov fs (bad) push inc mov bound insl cmp inc jmp jno or and pop (bad) add pop and sub push xor xchg push (bad) loope das adc mov or ret pop add pushf test pushf or arpl xor pop cwtl sbb and cltd jecxz movsb es jno xchg push push mov sub mov fs loop,pt jne or rorb test cmp add adc lcall sbb xor ja inc dec xchg rclb sbb mov addr16 adcl (bad) xor inc sbb and push xor pop sbb xchg dec lea jl and inc lret adc fs rol xchg jb inc mov sbb out xchg int3 (bad) inc test data16 ljmp and fbstp lock aad lods push push mov stos cmp mov loope and mov xchg fildll push (bad) add xchg xor or aad push pop add pop inc lock mov xchg mov xor pop shl sahf inc push sub add enter lock add into mov lea add sbb (bad) pop mov mov xor loope sbb shll adc lods sub sub push pop pusha xor and and (bad) out dec adc or xchg adc jecxz adc dec xor ss and add dec (bad) dec or inc pusha push negl push movsb lds test lea arpl push frstor loop cmp aad lods inc sbb imul jl add mov loop xchg pop cmp add outsl leave mov sub loop loope push iret xor sti es popa fs mov or adc loopne inc loop xchg mov cmc rorl add mov xor addl add sbb push sbb adc inc push xor aad xor adc and nop negl and icebp lahf loop sbb mov push fldcw xor mov cmp cli add sbb nop (bad) mov les ret jnp push loop outsb add adc xchg movsb xchg add push shl sbb (bad) cli xor push xor and fsts adc jle cmp push pop push push push xor jns lods or and sbb xchg sbb push mov rolb push pop pop dec push lea jo sahf sarb cmp xor push rorb lea je sbb mov cmp jno fdivrs call and adcb xchg xchg add push xor dec sub or push mov lea imul loopne cmc adc (bad) (bad) rcrl sbb (bad) lret sbb ret or int fildl push mov sbb mov mov mov push and sbb mov sbb inc test (bad) mov adcb movsl add add pop fisttpl fs xor inc adc (bad) push jb mov repz xchg loope (bad) sub adc xchg pop and jo or cmpsb inc and sbb inc cmp push jnp insb movsl or lcall sub dec xchg inc mov in aad mov and cmp lea dec xor sub popa imul xor leave iret adc sbb xchg icebp popa getsec pop leave lcall mov loopne or int pusha pop push inc mov xor stos imul and sbb lret adc pop dec push and popf sbb mov sub xchg pop aaa xor push push pop push les sub xchg inc mov outsl inc mov loop xchg dec (bad) pop out xchg popa or shr sbb xchg adc je insl jecxz rolb inc and pop xchg movb jae lock add (bad) (bad) cmpsl push and imul int cmp sbb adc add lods mov lods lods push dec dec stos mov inc sarb inc pushf in inc jp (bad) popa jmp sbb xor and decl adc ss arpl sbb mov jg mov jmp pop xchg test outsl inc cmp loope and pop shrb pop push (bad) stos repz push outsl or or adc mov cmp sbb and add icebp mov xchg mov inc mov orb inc cmp stc pop sub inc inc cmp cmp inc xchg mov aam loop add cwtl rclb mov add add (bad) push (bad) jne xor cmp imul xchg pop sbb push pop xor sub lret lea xchg ds movb add xchg and test andl ss jnp dec add cmp test fisubr inc push xchg jo cmp shrb imul jo sub cwtl sbb or add push add sub cmp nop daa jno lock or rclb add rolb inc xor mov mov pop pop xchg lea sub cltd shrl or jl insl sub push sahf and add roll pop and rolb out xor xor xor sbb jmp rol stos (bad) mov (bad) fadd dec dec mov mov or push pop rorb adc mov nop lods mov and cmp cmc sub pop loope or mov sbb adc enter adc (bad) push pop xor hlt inc jecxz in mov ficoml mov mov pop popa push (bad) pop popa push mov call stos xor test mov popa inc sbb movsb mov or adc popa jno add mov dec pop in inc test jp cltd xchg mov xchg push cmpsl sub push loop insb test aam leave lock stos push movsb adc or movsl or les lods loopne scas pop faddl inc sub ja and add lahf add adc outsl lea pop pop jp push sbb lret cmpb aaa popa pop mov enter mov loopew adc push cmp cmp inc mov or sbb int cwtl icebp add xor jl cmp shll int fs pop cmpsb cli push and cmp jge sub add ss dec loop push (bad) mov addl insb jns loopne cwtl aaa lahf mov arpl push fs mov or outsb xor cmp sub movsl mov xchg sahf (bad) xchg and push pop mov sbb test xorl addb rol dec or xor push shlb loope add or mov mov (bad) and push dec (bad) rcll dec adc jecxz in sub xorl mov rol jo imul ret arpl fs sbb jno js inc xorb mov imull enter fcoml loop cmpsb in dec les sbb inc rcll sbb and or je lds mov addb sbb add std loop test dec rorb push push pop inc arpl push or or or cmp push xchg pop add (bad) leave xor sbb popa rcll sbb mov xor cmp adc xchg in loop mov or stos mov mov lock inc sbb test popf lea add xor arpl rclb popw inc pop inc pop mov shlb int3 sbb sbb ficomp insl xor (bad) (bad) daa and or jmp inc dec es mov syscall aad mov in aaa pop movb cmpsb shlb scas mov and pop push pop pop push test cs mov xor add (bad) cmp and add mov xchg and sbb outsl test xor add ljmp push or cmp push setnp xor sbb leave jmp mov mov xor movsl or test adc test fs std mov clc xor add outsl adc sbb aas jecxz inc add cmpl or fnstenv or mov neg xchg mov jbe xchg xchg inc (bad) lret mov mov jae outsl push pop cmp mov daa sahf sbb add or cli movsb mov mov cmpsl mov movsl add sub push and or and push jg movsl mov lea popf mov push popa loop push inc imul mov xchg sub jns repnz outsl cmp xchg sub sar push and mov mov dec insb mov adc andl movsb pop xchg add cmpsb mov xor insb push push daa in mov xor orb push mov (bad) xor cs add pusha movsl pop mov lret addr16 cmp or adc movl int3 ret or scas test add (bad) popf or or das dec adc or add arpl sbb (bad) test lea cmp adc cmp (bad) push test mov dec lods sub adc sub cmp add and xor mov cld andb movsl sub xor leave cmp add ret sub les jo pop sbb inc xor mov fs dec (bad) jno les or aam mov add adc mov (bad) enter ljmp sub (bad) ds loope aaa inc cmpsb shlb (bad) jb pmaxub es iret mov pop xchg or loopne insl mov inc cmpl test je xor xor imul xor jmp pop orb loop add daa sub push jmp orb push push jbe adc fs xor mov adc adcl andl adc and ret aam or inc popa and test or sbb loopne push ret sub pop pop xor lds (bad) int3 inc movsb sarb xor and adc sub sbb sbb sti xor adc mov jo enter adc push pop inc cmp fidivrl rclb xchg fldl xchg mov xchg inc outsb push orl and outsb inc jp dec repz repz aad xor dec ret and push pop rcll bswap or add xchg or popa jecxz adc xor icebp test dec rorl aad loope fsubs sbb faddp out repnz pop leave lret insb sbb pusha (bad) cmp add pop ret push js rol ret jmp and imul mov mov lds xchg add in rclb add jne and mov repnz pop and and or scas ss jo sub in test push shrl movsb xchg xchg cltd sbb mov rcl inc mov or int3 test ss je stc shl add loopne jnp fcomps sub jnp dec pop lea add jmp or popa xor add cmp pop les in (bad) popa test dec cmp fldcw ret shll leave cmp pop enter and nop xorb inc mov test add push cmp cmp ss mov mov lods test pop adc cmp inc cmp icebp aam xchg push je (bad) and push sahf js insb push xor add xor aad shlb xor pop mov lea dec mov sbb or lock int add mov in sarl mov pop xchg hlt dec xlat (bad) mov (bad) jne push dec or or ss sbbl and mov add add pusha or xor lock nop xchg xor or mov ret lret inc inc ret pop mov sub bound add cmp mov cmp ret jne sbb imul test add lret add or adc outsb ret xchg xor test xor jns hlt or pop mov and pusha sbb test mov push movsl adc lcall movsb or push adc adc cmp pop lret sahf lods or mov or mov pushf ja insb stos push cmp jo data16 xchg lcall sti dec movsl mov add cmp xor push subl jo insb sar jae,pn xor xorl and or mov ret jge test ret shrb mov stc andl mov outsl sub insb xor and sbb mov mov add out adc (bad) mov or outsb test mov mov mov and shrb lret pop xor xor add out ss test adc (bad) (bad) xor bound shrb daa adc fmuls jp and and movsb adc inc adc cmp push lods and sub pop repnz adcl and push mov sub push sbb les inc pusha pop push outsl leave dec repz lret sub mov cmp xor ret daa (bad) adc mov mov pop rcll adc cmpsl test sbb ja or mov xchg (bad) int sahf es xchg sub mov mov pop push adc rclb xor inc mov adc cmp mov or outsb dec add xor cmp pop nop mov popa pop les xchg punpcklbw pop inc mov add test and adc (bad) lret mov inc pop ss cmp imul sahf pop rolb dec xchg or sti xchg sarb nop mov or push test inc stos movsb adc push jo roll (bad) sub test test pop sahf dec pusha xor stc int add scas sub and mulb sbb dec fisubrl cli int push lods inc loopne in dec js test inc or in or bound mov adc test repnz js test and jmp or sub mov or nop sbbb xchg and sarl cmpsb cmp lods xor push sub adc je push dec iret out movsb roll or imul xchg sub dec sbb pop (bad) xor cmp andl inc mov add xchg mov add arpl pop xlat jno add pop mov cwtl push add nop pop xor mov mov xchg sub sub mov bound and lahf outsl cltd aad dec mov repnz mov popa push sub mov enter push pop loope fsubl push xchg pop xchg int3 xchg hlt dec xor sbb push or out ret cmp xchg add ret stc out (bad) xchg xchg and cmp loope jns mov fisttpll shll aaa xchg cmp lea roll ret test mov jb orb xchg aaa sbb mov adc mov iret add out jmp xchg in pop (bad) xchg mov shll mov sub movsl add xchg cmc or xchg xor pop and pop push fsubrl jmp xor fisttpll mov bound cmp js les add mov mull sub and inc add adc pop dec push and mov pushf and data16 xor mov xor inc fdivrs sbb inc xchg sbb lret movsb les mov lcall leave xor pop or or shr pop or lcall or out xchg mov loopne jmp jl xchg ret fcmovnb test mov cmp sbb sub jnp imul fstl das push dec ret xor or (bad) fiaddl sbb sbb arpl into rcrb das pop and and shlb cmp xor add push test push or andb mov adc pop call jo adc cmp pop mov aad aaa aas add rcll dec and lahf inc fs mov cmc test push sbb add push pusha (bad) dec xor mov addr16 sbb add push or cmp (bad) push mov (bad) push push push pop inc xor and or add mov daa sar insl imul mov mov xor push andb inc pusha stos aaa jae mov mov mov loopne add scas sub xchg or mov imul in sbb xor xor pop push adc cmp adc and mov into xchg fdivp xlat mov pusha dec test pop jge rorb mov shrb xor mov aas dec jbe inc pop dec es add add mov sub movsl add adc je call sub outsl lea (bad) adc and adc add pop enter push js sti int3 call inc inc pop xor push lock cs add daa ss nop mov pushf sub inc sub push or mov sbb sub dec add push sbb popa push mov lods adc mov bound pop xchg (bad) addr16 add sub ret add mov push icebp ret or fadd fwait xchg std dec mov adc (bad) out mov mov add pusha (bad) (bad) jne rcrl add add and js fldenv dec fcoms inc ds leave mov imul adcb lds mov aam or mov add mov inc cmpsl dec adc mov arpl cltd jo add icebp or xor int or xchg stc or lret push adc add mov and daa mov pop test or int jbe rcll lods in push ffreep dec sbb mov and or add adc popa add fist sub add lea xor shrb (bad) pop pop and add xchg xchg mov mov push inc adc or icebp or xor hlt insb dec cmpsb mov cmp dec push or fistpll dec loop cmp mov fbstp ja lods (bad) imul sbb test pop test xor adc call imul inc lods xor (bad) jne mov push add test add imul mov push and add aad mov dec and pusha mov mov mov jb js push pop xor popa xlat xor call lret jno cmp add sbb lahf and ss repz cmp push loope fs xor sub enter outsb cwtl xor imul movsb add cli or mov xchg push es cmc add adc leave inc outsb insl add xorl outsb sbb mov and and scas mov (bad) xor js insl lret sub cs xchg outsb or inc sbb mov pop (bad) rorl dec and dec ret data16 outsl xor dec pusha push push sbb mov adc cmpsl dec or sub (bad) orl pop pushf popa add or mov addl icebp out xor push sub pop gs (bad) adc sbb int fnsave mov add (bad) repnz push cmp rolb and cmp inc test jno out icebp sub (bad) mov inc cmp mov and out adc and mov add push stos xor adc rcr test adc dec gs pusha or sub cltd popf cmp push fsubrl add (bad) aaa fistpl lahf add pop adc add nop cmc insb sbb xor mov inc imul push xchg sbb mov ficoml cmpsl inc ret jae adc inc add pop shll jbe pop mov ja sbb outsl nop lret lods push jmp and jecxz mov sbb test cmpsl adc xor adc add push cmp sbb test xchg sbb or or je sub lret xchg adc push sub shr lods scas sbb and sub xchg cmpsb lock imul outsb mov or aad inc sbb (bad) (bad) sbb mov int3 nop mov movsb sbb xchg mov bound mov add or ljmp mov xor fs fidiv dec ss inc loope jp imul nop nop or fild xchg jg and lret mov ret sub push mov dec or lret push sbb dec mov mov mov pop lahf test cmpsl jecxz adc or add mov (bad) xchg outsl fnstcw sub mov add jecxz fistpl sarl stos add js jno add xor or cmp mov and cli dec jo inc imull push aaa cs jno add or mov xor dec jno mov xchg test xor sbb mov xorb (bad) and or test and push imul pop adc (bad) mov xor sub sub inc test xor inc inc and add stos xor movsl lods pop out add or hlt mov aam call adc loopne lret outsb adc mov add loopne sbb aaa mov sbb cmp popa movsb pusha scas pop mov jo (bad) repz and cmp cltd lock lds bound scas dec xor xor add pop lret sbb jb outsb mov cmpsb xchg sub in in shrb pop loopne xchg xlat ss mov (bad) imul rcll insb rcl sub out push call add gs lods adc sahf (bad) sub cmp scas rolb and sbb (bad) push ret fs movsb xor dec icebp cmpsl or sbbb jnp or mov nop mov push add push enter or repnz xchg adc inc popf popa arpl pop dec inc adc or (bad) not push xor inc es pusha mov clc dec inc fs pushf mov add (bad) and dec xchg lods cmp xchg sub cmpsl cmp rclb punpckhdq push mov cltd mov insb clc adc sbbl dec dec adc insb pop push call pop cmp test sbb test fcmove cmpb add scas jmp mov lea and jnp fadds movsl and mov push (bad) adc sbb jns add dec pop cwtl xchg sahf xchg roll scas roll dec dec or insl or movsb mov das test jo daa imul fcomps insb test shrl rolb (bad) cld inc shrl push cmp adc mov arpl and mov sbb sbb push aaa scas loope add icebp add cltd xor sbb sub (bad) ret call adc lret xchg addb sub lret lods mov inc sub in xor sub inc or rorb (bad) xchg cmpsl sbb inc mov add xor out xlat addb fsubrs add jno in cmp arpl push inc xchg xor (bad) mov pop jbe push sbbl add mov dec dec je stos xchg sbb pushl popa loop push mov cwtl mov mov mov inc mov movsl lds xchg cmp jmp stos cmp loop or insl or clc jno xchg adc or inc push jmp pop or test add lds adc cmp inc test stc xor insb inc hlt xchg les enter dec mov lret ljmp xor nop rolb mov jp pop nop pop mov fwait ljmp xor lea lret add (bad) adc push sub adc adc adc int3 ret sbb add imul adc and xor xchg lock xchg rolb cld dec cmp mov jno les sbb and adc loope add or xor push mov mov (bad) dec pusha sub rorl mov dec or leave nop frstor or sbb add or ret mov lds cmp mov lea inc mov dec and or movsl and or pop lret sbb and sbb movsl xchg xchg mov mov (bad) xchg shrl jo inc push jb lods imul lahf xor mov and xor fsubl scas imul (bad) xor mov or push cwtl adc popa shl rcrb add add sbb and cmp pop pop or test inc fnstsw sub dec push push lods add pop out xor inc outsl add test cmp mov adc xchg xorl cmpsl mull insb mov test mov mov popa pop jp mov daa (bad) aaa (bad) mov adc push mov xor and (bad) dec add lods add aaa pop scas insl inc sub add cmpsl xor jae aad xor cmpsl xchg loope sbb and fwait add adc sub ja fs sub push sub ds mov xchg add mov fs mov adc insl insl dec add pusha or push pop les lret ss pushf lods outsl cmp push mov sbb cwtl mov ss pusha adc add xor dec mov loop xchg dec sbb in sti test ret shll mov sti iret or mov imul fs popf xchg test (bad) jo jecxz inc test mov aaa inc adc xchg loopne sub lret pop ja pushf and pop dec (bad) loopne xor ret or imul dec sub pop mov adc pop and and mov bound adc fisub add fldenv lret or les cmp or loope mov roll add xor inc cmp popa lods sub js xor xchg js (bad) xor inc or and rcrb movb pop aaa loopne jecxz cmc aas adc int pop faddl lret stos cmp dec aaa or jecxz dec and ret jne loope pop adc mov add add adcl jmp (bad) dec pop mov cmp mov (bad) ja push xor mov pop jno ds jno dec xchg mov sub dec xor adc aad or fwait pop dec and xchg add dec rorb sbb xor lret mov and orl ret mov (bad) (bad) mov int sub enter push aam cltd mov adc in (bad) mov mov jo or cmp test inc sub mov shrd cmp test cs enter fwait xchg mov pop jae cmc insl or rolb mov in mov shr ret cltd repnz push in xor add cltd dec sbb add sub add scas push pop fwait cmp sub xor sbb push or sub push push mov mov mov xchg test push xchg add loop pusha xor mov or mov test mov imull push sub in ss mov movsb mov popa lds rolb mov daa int3 imul inc mov xchg insb ss mov push sub andb aad test sbb jge mov inc mov cmp or mov fs mov push into loopne xchg add lds test mov dec pop mov push (bad) sbb push imul js dec adc stos adc rorl movsl ss sbb adc imul pop adc pop pop sbb or adc adc sub and jle stos cmp cmp lds pusha and push jecxz or pop xor and pop push scas pop xchg jno add xor mov add fstps push add xchg mov add adc imul imul aaa in dec or arpl pusha or sub shlb cs test jbe call stos je ret jmp adc data16 and xor mov add add inc adc mov lcall cmp dec xchg mov pop xor rcr pusha addr16 lret mov movsb and xchg data16 push push pusha pop mov pop cmpsl mov push dec xchg sbb or pop mov test or mov xor test addr16 sub inc mov aam pop sbb js add dec jg es adc adc ja (bad) leave js and int3 fmuls add xor dec pop push dec xor dec (bad) sti pusha stos inc sub sub pop lret loop pop ret imul imul xor pop or xor cmp mov mov mov push popf imul xor xor loop inc add ret push push dec test andb loope rol dec jmp std mov out (bad) xor das xor daa sbb imul popa fsubs xor adc inc js dec mov or adc test add or js and cmp test subb or or jg loopne bound cltd cmp (bad) sbb push sub push cmpsl dec shr mov (bad) mov ret dec mov add sub xchg mov sub or adc (bad) mov sub outsb add mov and xor outsl lret inc dec mov fld and rcll aaa adc pop xor gs sbb dec xchg (bad) xor add inc jl dec jmp dec inc js hlt sti add sub dec inc ljmp lods xchg dec xchg mov dec stc ljmp mov push lcall push jle mov sub imul cmp dec movsb add or pop cmp mov dec js dec mov add insl jmp dec out subl test out stos xor movsl xor pop push dec adc pop add sbb dec rcrb dec inc mov cmp cmp pop ret lods and loope or push fild (bad) mov int3 inc aam or (bad) rolb sahf sarb popa add mov xor out xchg sbb sahf or sti and mov pushf in fmuls push ss inc fwait lret aam sbb cmpsl movsb test xchg fs add inc pop xchg sbb adc fwait or arpl (bad) sbb mov or inc lahf mov pop cmp lea scas shlb mov mov sbb pop sbb jmp sbb adc loop add push ret xor adc push push mov push jecxz xor jb call pop loop inc lret and xchg push xor or inc insb call lods pop adc arpl mov aad mov mov push and add inc jge sbb cmovnp addr16 jecxz inc and (bad) xor xor int inc loopne shrl int xor mov sahf (bad) or push add add sar adc (bad) pop and enter add xor sbb cltd adc lock adc shrb and popa push sbb fwait scas sbb add scas cmpl push and sti das pop mov movl je jecxz daa xor push test jns das bound mov and or adc outsl nop and gs sbb dec mov orb add insl sbb mov fs cpuid in xor jge add andl or cmp imul mov outsb loop sbb push es and arpl jne xor scas xlat mov aam addr16 inc rolb movsb jmp sub dec sub enter inc rolb pop xchg add or jp add xchg push (bad) or sub popa dec movsb imul pop inc add test cmp jl roll lock mov shl cmp dec xchg aas loope push stos imul shlb mov dec loope fwait inc outsl mov inc mov xchg inc and mov mov jle xchg xchg rcrb dec js mov sub adc (bad) rclb movsb sub pop sub xchg fld and or (bad) mov adc lds popa shr cmc imul pop or in movsb test mov cmp dec xchg push js push pop sbb add test adc mov je pusha gs sbb xor and jbe mov sub or ds (bad) pop xchg mov aaa pop mov lods lock or add in sub xchg pushf inc lea mov imul mov es xor int3 xchg nop add (bad) rcrb add shl sbb push sarb fs mov adc cmp and or add dec push std rclb lods cmp and and adc and fnstcw and xor xor adc leave and cld mov in addr16 test adc sub pop xchg adc lret popa pusha mov adc xor aad pop sbb pop pop add sti and adc lret add test pop or fnstsw adc sub adc push addl nop js jle cld cmp cs xlat xor cmp pop or xor lock rcr xorb push lahf mov hlt mov lcall lods jo cmpsb je push sub outsl adc jns mov call loope (bad) fs rcrl sbb xor dec and sub je xchg adcb lods frstor or aaa test sbb add dec cmp aaa pop mov push mov inc push sub or sbb cmpsl jge,pt mov adcb adc fsubr les mov pop and mov imul or xchg and in gs mov inc push jle or mov xor inc xor push xchg sbb push adc nop shll jbe cltd cli adc xor sbbb or into faddl add mov loope lret or push into adc les add push xor xor sub and out adc ret adc add loopne pushf fsubl xor fstps mov ds repnz repz sub loop sbb outsb add mov nop cmp imul mov fs pop add lods xor adc xor pop inc mov xor ret inc add test inc adc mov jno cmp inc mov mov ja add add mov push addb aam loopne cltd (bad) adc nop pop sbb cs adc jge mov jmp xchg insl dec xor mov sbb daa dec jne xor pop out sub sbb sub cmp adc fsubrl mov mov jnp bound subb sbb mov cmp arpl or imul jns adc (bad) aaa das incl arpl insl movsl inc sbb or cmpsl gs sub adc pushf cmc sbb jp adcb jp jno insb aas xor mov push sub or test pop (bad) fwait insb lods (bad) in inc adc jmp adc push das dec push xsaveopt xchg lods or or or cmp adc (bad) xchg and gs lar mov jo add or mov pop cmp cmp push xchg add or push addr16 xor xchg les dec outsl pop xlat adc xchg rol mov add int cmp fidivl sub inc int3 ret xor or or mov lret dec mov es daa mov flds jnp cmp add jl or cmpsb mov xor pop adc and out or test mov sub sarb xor jg sbb add lock inc cmpsl add mov popa jge xor dec inc movsb stos (bad) aas adc (bad) pop mov pusha lods int3 fistp mov or xor movsl xchg loope xor movsl push jo jo xor (bad) sbb sbb (bad) pop dec push sbb mov cmpsl aas (bad) xor (bad) sbb mov fdivs xor inc sbb push add ds dec jnp or mov shll adc or dec repz or fs dec dec pop add lret cmp sub xor scas aaa decl lret pop adc xorl dec push es jo jb bound adc jmp add (bad) loopne push adc xchg (bad) xorb inc pop dec add add orl or rorb sub out nop js xor (bad) mov adc js shrb inc push push push mov (bad) jb sti sub pop mov and and into xor push adc jecxz xchg mov das dec cld xor hlt mov (bad) popa and sbb xchg push push adc pop ja shrb (bad) aaa pop mov pop xchg xchg mov pop cmp and es inc xor mov dec pop xchg cli mov imul pop sbb push xor push inc or inc or adc lods push mov mov pop movsl loope xor addb sbb mov test ret stos mov add jecxz cmp pop xchg shrb fistp or mov inc sub (bad) call pop cmp add jl dec and js (bad) and add jg pushf sub dec push xchg hlt push and imul pushf cmpsl sbb shlb and add sbb lock popa jl cmpsb hlt xchg xor pop mov add gs rolb fldcw cmp bound dec mov insl add sbb and inc insb loopne adc fiadd int loopne or mov sbb mov aam add (bad) inc mov jmp pusha test cmp jo xchg (bad) xor and jne lds dec cwtl add xchg adcl and push cmpsb es daa lea out cmp rcrl (bad) js subb adc jno daa rcrl or es imul push inc loopne enter pop sub sub in loope imul sbb mov movsl lcall les jae adc cmp addl xlat or xor mov and add rorb and mov cmp jg xor inc pop mov lods or fildll xor add addr16 lcall insb loope arpl or xchg movsb jl and gs fwait jmp xor mov push pop inc (bad) xor or ror (bad) je loope xor cmp mov pusha sub and inc daa push ds xchg scas cmp or adc jb mov xlat dec add jno sbb push adc lds or add sbb push mov adc je rclb push mov data16 pushf or sub cmp sub or loope mov subl adc adc aas inc xor push daa imul push add test pop loope dec sbb push xor adc movsl ret aad sub call xchg test rcrl pop aad push roll pop xor push inc dec data16 adc cwtl xor adc lds jmp movsl sub xor cmpl and fistp mov loopne sbb mov and rcl mov cmpsl cmpsl movsl mulps pusha jno sub mov dec inc test ljmp add xor push dec and mov rclb xchg ds push sub mov add add jno shrl fnstcw insl mov (bad) sbb sub nop cmp cmp loop xor adc push in inc inc fild or and andl ljmp loopne mov pop and mov xor xchg ret cmpl bound je out jecxz scas sub outsb leave es xor sub sbb into xlat fcompl inc and data16 add sub cltd cwtd andb mov test in push xchg cmp add or lea mov mov lea xchg xchg aaa xchg mov sub lock sarb fwait (bad) lock je das or xchg mov or inc sub adc mov add test pusha dec or std xchg sbb or mov adc pop sbb mov push push xchg lods push pop scas test rcrl cmpl popa sub (bad) cmp jne into aam mov xchg or inc cmp pushf lods inc imul mov inc or fwait xor enter insl sbb cmp dec jmp or sbb cmp mov add sub or and jecxz xchg cmp repz jo loop mov jp jecxz aaa fimul or pop dec aam dec sub and xchg push ret or popa loop andb leave cmp pushf pop dec and add (bad) pop scas lock pop and outsl roll adc sbb cmpsb mov lods adc push daa dec sbb frstor add mov pop push xchg lock xchg dec sbb arpl and push (bad) or mov cmpsl popf jp xor adc movsl and xor adc pushf adc adc adc xchg add or or aam sub (bad) (bad) movsl mov or dec (bad) dec add cmp es sbb mov add lcall inc fnstcw int pusha or mov lds mov daa sbb add mov ljmp sbb xor or fnstcw jo cld xor arpl lea xchg test xor push and movsb dec mov add adc adc jnp test fcoms lcall pop clc dec adc mov xchg and lock ss add lret inc xor jno xor daa jmp mov movb sti jecxz ret sub cmp xchg sub push es add mov mov push sub (bad) adcl arpl psubq push stos add push pop dec add mov test (bad) add add inc adc or test push icebp sbb add pushf cmpsb dec adc js adc ljmp xor insb daa xchg dec out sahf inc and push xor nop push shrb cs insl loope cmc pusha test xchg sub rclb xor je sub mov and xchg sbb sub sub lods (bad) dec sub test or push pop call pop mov stc push xor add std ja popa popa or imul xchg add mov adc pop lahf xchg dec dec xor adc sub cltd or test sbb inc cmpb push das cmp aam fisub add in movsl ja popl push dec clc sub pop cmp sbb ja jno sub rorl enter int xchg rcl mov push push pop mov or mov dec add in inc lahf shl sbb cmpb in add ret mov xor add pushf and jge shrb mov scas xor movsl and jno int3 sbb jp je adc add add and pop mov ret stos test add pop mov test inc cmp sbb xchg andb mov pop and push inc repnz or push dec adc leave add ss or std std push mov jo xor movsl adc or mov insl imul mov add xchg mov jle fiaddl ficom imul insl dec cmc cmpl arpl pop xor mov inc dec or add inc xchg mov pop cltd (bad) or and adc inc push clc test add sub mov mov outsl (bad) and mov (bad) (bad) rorl (bad) test out pusha cmpsl inc insl ret (bad) pusha imul push lock or mov xchg xor outsb pop xor cmp je xchg mov sbb mov pop or daa xor xor cmp pop inc pushf test (bad) push fcmovb mov add cli adc (bad) jae xor add adc sbb push jle pop insb or neg (bad) jo and mov sbb and cmpsl xor jbe pop fcmovnu insl in movsb nop inc sbb arpl aaa xchg testl pop sbb sub pop pop subb es mov movsl fldl inc aas add add inc mov and int cmp arpl mov lea adcb jb pop xor leave (bad) cmp ret xor fldenv xchg and adc dec xchg xchg pop sahf movl movsl xchg xchg ret rorb mov mov and inc cmp mov sahf push (bad) imul (bad) xor and sbb jmp push xchg dec bound xchg xchg push dec and loope or mov fnsave movsl lods shl push or cmp das into add lods mov xchg mov and fwait xor addr16 sahf adc daa popa outsl mov xchg mov xor imul cmpsb push mov mulps cmp push sar orb cld xor mov (bad) mov fs aaa add inc pusha lods jbe addl shlb add push add mov jo add xor repz xor adc mov loope or or xchg sbb xchg push aad addb mov insb or push clc sub ss sub addr16 aas je push or fs adc nop repz and inc and dec adc (bad) fisubrl (bad) dec orl adc scas or push pop cmpsb sti fcoms mov nop lock leave es fisttp pop jmp push xor adc sub (bad) xor add mov add mov es adc cmc xor sbb mov arpl add jnp xor sub add xchg and xchg mov (bad) test adc sub mov cwtl or loop add add rclb push inc xchg rcl jb mov test mov adc sbb xchg xor and rolb enter and gs mov xor outsb cmpsl dec enter int sbb or pushf scas pop adc test andl sbb xor xchg add (bad) loopne loop into jae pop inc mov adc xor lds js (bad) sbb pusha sbb mov fnop cltd aaa xchg sbb lcall (bad) sub (bad) aaa inc xor pop or push sarb or mov loope jae mov movsb orl and push xor bound xchg mov leave xlat out or pop xchg (bad) mov inc aas mov xor add pop dec and cmp nop mov xor adc add cmp rolb movb loopne scas fs mov pop jp xor push daa dec popa bound nop aaa mov scas in and frstor adc mov push or dec mov popf cmc mov push andl (bad) and in inc pop cmp and dec xor rorb fistpl or ret dec (bad) jle or xor addl ret inc fwait cmp mov lds (bad) and or xor lret xor movsl or push push push dec sti push fcmovu sbb xorl inc mov lds xchg and mov arpl or mov inc test fsubs sbb in sbb xor cmp xchg xchg sub inc (bad) movsl loope (bad) dec add shlb fild flds add add jge out adc inc dec jecxz sbb xchg mov inc mov and push push add mov jno sub fcomps add adc xor leave jb cmp cltd pop insb inc test sbbl les movsl icebp imul pop add add dec cmc mov adc mov scas add test sbb push inc sbb in std (bad) pop jo insb mov mov loope lock add inc movsb mov and sub and sbb dec fstl fldenv push push add leave and mov cmp ret mov mov dec outsl add mov shrb pop ljmp xchg mov and das loope rorb cld es orl and dec adc or imul lahf ss xorb je lea sbb testl out scas or (bad) xor mov sub push imul jne dec lret xchg loope mov push jge inc push or flds and and insl and mov shr arpl pop jo mov out xchg sub imul imul sahf sahf fldenv xchg insb pop gs and push dec xchg and dec sbb xor adc mov push (bad) repz xor add xchg jnp mov mov int shrb or in fs shlb inc sub jb jmp aam and add xchg mov aas xor nop sbb int3 inc cmp pop add nop movb dec mov cmp or cmpsb pusha (bad) inc or mov xlat icebp dec dec into sbb adc adc xor bound (bad) cld xchg add mov gs rcr rclb jo push cmpsl xchg mov adc cmpsb xor sahf jbe sbb mov xchg lcall and mov stos mov cmc push aam es aaa icebp sbb dec push imul sub mov lcall dec movl popa bound or jge add dec test int jecxz push inc adc andb insb jns dec add lods inc xor test mov xchg and sar hlt popa dec icebp mov and int (bad) mov inc adc xor das push xchg add pushf push test add pop sbb xor xor imul cwtl add mov lock add xchg (bad) popa popa fcoml sahf lock movb push cmp cli repz inc pop dec mov repnz int pop and adc test sbb inc sbb aad sub and mov inc push cmpsb (bad) xor pop and add test push js or add (bad) or rolb pusha mov dec dec adc inc mov inc int js jo push adc ljmp jg sbb flds jo pop stos pop jo addb inc mov xchg ret mov dec sub idivl pusha adc xchg inc sbb add imul mov mov xor pop (bad) out outsb jns inc cmpsb cs adc jnp out pop pop or push roll inc xchg mov add or adc jo cmc dec xor decl xchg push sbb rorb movsb push shll inc inc sub xor std scas or mov jbe add adc sub inc and and and cmp cmpb ss movsb inc jne mov and test shrl jbe adc dec mov inc mov (bad) das pop inc popa dec push xor add lret pop call into adc inc sub mov sbb pop pop lods or aaa push rolb fcompl clc imul subl pop enter mov and dec xchg push mov bound pusha sub pop loopne and push aaa sbb lods leave sub xchg push mov adc stos xor or nop pop or pop push jne daa cmp or mov xchg mov xor lcall ss inc fisubr mov aam add mov pop rolb xor sysexit and or bound or cmp push dec adc or lds call fs jo fadd flds fwait mov sub (bad) nop add ret sub adc out add xor call mov rorl loop cltd andl push adc add ja push mov xchg sub inc or enter push add shrb push jle mov add mov inc pop data16 test and inc dec ret (bad) jecxz and jmp sbb pop cli cmp dec sub cs sahf xchg and cs sbb and and test in and add pop xchg xchg loop add or inc loopne jae push int3 inc jne loope xchg add addl mov and adc in dec mov adc andl xlat jle mov aaa popf push jne sub loopne push loope mov movsl add or sub mov xor dec lds add pusha sarl cmc cltd pushl pop mov add clc mov int adc mov xchg (bad) push adc or movsb ret jmp mov ret mov xchg and outsb sbb rolb sbb (bad) pushf addb pop or and mov add mov mov out lret jo add add and fidiv pop mov dec and loop add xchg xchg loope les and inc inc xlat divl ja and dec (bad) push add adc mov mov sub imul push ret add adc add inc mov adc cs test xor mov cli call rorb push popa adc cmp mov mov das outsb or and sub sbb cmpsl or sub orl ljmp int3 xor addr16 jno dec add lods xor nop xor (bad) mov fndisi(8087 pusha and inc outsl in sbb xchg hlt dec jecxz inc add mov movsb (bad) jmp or mov adc push cwtl test sub or dec sbb adc andl rorb movsl fs loopne imul push inc aas push xchg push dec add lods mov lods fwait or bound imul sbb and es insb aaa push jp xchg iret xor dec jecxz mov pop cmp cmp xor cmp push sahf pop popa pop mov fldenv in mov mov sub in add and or xor adc add pop shrl xchg or sub ljmp and call rol (bad) mov sbb cvtps2pi xchg xchg (bad) xor lds ret std push push cmp inc sbb movsl aad xchg movsb lds shrl mov pop pop or (bad) pop int3 adc xor xchg xor and test lcall cmpsl add jb inc push push or adc sbbl lea daa add insb xchg adc xchg pop test mov xchg inc xor add or mov add push mov inc inc sub push fdivrs mov push inc lcall add mov adc fabs inc add cmp (bad) pop or push xchg punpckhwd inc and dec pusha cmp xchg inc xchg daa jmp and rol ficoml xchg lds sub dec cwtl sub inc xor sti jecxz jp xchg xchg pusha and adc xchg or rol adcl nop mov jo sbb inc mov mov ret lret (bad) sbb ss cltd xor lea add lods push xchg cmp mov sub loopne add mov xadd ss (bad) daa lods push cmc dec xchg add pusha pop xor pop rolb leave sbb jne xchg (bad) sbb ss popa adc mov sub jp pop push gs push cmp pop or xchg cmp int push xorb adc jb jno test lret mov lock xor push (bad) cs inc ss mov add inc rcrb mov fcmovnbe call lret lret sub es loop add cli nop imul mov cmpsl push lahf in and sbb mov arpl mov push lahf and push add inc lods test adc fistpl push ljmp sahf cmp cwtl shlb add fcomps rcr jnp add add mov js xchg xor inc sub (bad) dec inc mov pop pop test inc xor cmp sbb jno jg or sub dec in movsl adc sbb lock shll dec inc (bad) xchg or xchg and pop add (bad) sbb jne scas mov pusha fs pop mov xchg cmp xchg and cmp ja movsb loope lret gs and push jmp xor aad ret and pop xor ret movb and sbb popa test adc mov leave nop dec outsl xchg push jns mov movsl dec or sub cmp fcoml add dec cmc inc aaa sub or and dec cmp lret pop push or gs ds push scas jns ss add addb or or add xor les and mov add les sub xor inc xchg or pop pop and dec mov mov mov fldcw clc mov ret sub jo pop sub pop pop cmp adc xor dec fldcw inc (bad) loope adc (bad) out mov and lret aam push aaa mov or enter mov sub mov sub adc cmp lock lret adcb pusha jno ret push popa mov mov inc sbb push clc sub insl push mov test or sbb cmp push mov rorb jle mov imul inc mov adc ss imul cld cmp pop sbb in add add push xchg pushf mov cltd xchg mov icebp mov push xor ret sub push pop xor dec dec sbb out test mov aam orl mov (bad) pop pop sbb or push jae mov imul rcrw add adc mov inc movb dec mov xor xchg xor stc (bad) sahf nop inc adc add shll push idivl cmp add and enter adc add mov xchg (bad) push loope in insb add lret add and mov repz stos adc mov jo sub add xchg rcll daa sbb xor gs test add push (bad) push xor push xchg or xor sbb xchg sbb lds sbb sub xor dec or add test xor sbb cmpsb jge in sbb rorl adc pop imul fistp mov imul dec xchg sub arpl xchg xchg inc pusha insl sub adc lret mov imul sub sub mov or dec (bad) or mov insb addr16 mov push xor rol icebp cmp inc out cvtps2pd pusha sbb add test dec lods cli mov push or icebp call lahf lods and dec cmp mov and pushf adc sbb pusha mov mov push fldl sbb cwtl xchg lock add xor scas fsubp inc push cld xchg mov xor mov cmp into rorb xchg fisubl push mov mov adc inc into aad adc xchg mov push or xor scas ss and xor nop cmp int3 gs or push add test test rorb stos pushf fwait sbb push inc rorb inc dec inc jge push (bad) mov dec ret lds adcl aaa mov sub outsb pop or flds add xchg nop ret push dec ret orl stc dec test pop rolb jne push add vmwrite push sub dec stos mov add or nop cmp sbb mov or push cmp push lea sti scas dec or ret push test inc inc clc test adc adcl test in pop aam ljmp inc adc and fs mov popa loop jg add xor rcrb dec gs and es cmp mov sbb lahf mov lret add pop (bad) inc xchg sbb cmp (bad) shlb add cli mov or imul mov pop inc ret arpl cltd mov lret pop pop and or add jo dec scas add mov imul fs imul jecxz inc adc pop adc sbb adc test and aas (bad) aaa mov leave jp or pop pop cmpsb pop popa xor out xchg arpl (bad) cmc xor gs pop and lods xor inc daa and xchg loopne inc cmp mov push xor cli imul or cs cmp jg or pop test cmp add mov inc repnz mov mov test cmp ja and or (bad) and lods jo popf iret mov mov leave mov adc (bad) xchg pop icebp sub mov and fcoms add arpl int xor imul mov sub inc pop inc dec xchg or mov es clc sbb and or pusha call xchg and dec (bad) nop push inc mov xor pop pop (bad) cmpsl and movsb mov xchg push mov bound arpl xchg mov push jp fbstp fsubl ret (bad) cmp ror xor pusha inc nop or xchg add and mov mov push xor jns push sbb adc sub enter sub loope mov sbb and cmp aam jmp fmul pop xor add xchg nop mov push sub pusha add push test add andb loope insl rcl push or mov (bad) ljmp ficom dec movsb sbb pop rolb xchg mov push mov dec pop add xor push gs int cwtl lcall pop ret sarb pop lea xor and add xor push insb add xchg sti dec push leave sbb cmp adc xor pop enter int push xchg or arpl in push and test dec in jo dec mov cmovs rclb add call dec aad add jmp or test cs js insl push and dec fldcw and add cmpb dec dec mov subl nop xor pop jne cltd push push xor mov xchg or pusha xor jno lock push mov push aaa inc sub rolb and or int hlt or inc adc es sub mov cmp (bad) mov sbb and adc mov sbb dec inc ret xor mov or dec cmp int push dec mov cwtl test add xor inc mov (bad) ret mov dec stos xor mov pusha sbb cmp sbb or mov xchg jo xchg and mov imul adc add sub mov cmp and jo jmp pop (bad) or pushf dec lret pop cltd repz push stos fist pop mov add add rcrb pop inc mov cmp mov add sub wbinvd xor add push push xor and or pop ljmp push rcrb sub insb lods dec fbstp je mov loop or pop adc sub cmp dec dec mov jb cmc and add jp sarb mov mov inc sbbb shrb add push jge lret and lods sbb fmuls dec (bad) cmp lahf or test xor cwtl jae stos jle (bad) and fadds je pop popa xorb ss sub rclb sbb or xor rcr xchg movsl inc popf adc ret pop push ret scas (bad) xor push stos xor xchg adc daa cmp mov xor scas or add pop pop jne inc push fmull and mov add (bad) roll (bad) xchg mov mov sbbl push cwtl add dec (bad) push mov daa adc xor cmp test sub jns mov adc mov add cmp pop jmp ret pop xor push nop jb (bad) xor add movsl push dec push ficom dec add sbb daa push mov or lret dec les ja test push xor clc addr16 inc or xchg hlt stos add nop sbb sbb inc inc jnp or and sbb ss call sbb sub xor gs ss xor or push mov aaa adc and or xorl stos test inc mov cmpsl aaa nopl mov or rorl or pop jg sarl fwait sbb mov xor roll or and xor add xchg test in push jp or mov jb test ret cmp test mov or xor mov clc popa inc xor add (bad) sbb jne add mov adc pop adc mov cwtl dec mov mov and mov push xchg inc cmpsb pop inc sub aad gs insb inc (bad) dec js mov movsl adc add sbb or std or xor gs mov xchg or fist add or add push xor mov jp push pop sub dec sbb andl cmpsb imul dec adc mov arpl add movsb imulb push cltd and and insl jmp rclb and pop adc sbbl push pop fdivl jne shll loopne insb sbb ret mov mov push inc xadd jl sahf add push in ss mov jge mov adc xchg sbb loope dec scas fs xchg and mov imul mov sub loop xchg insb jns testl ret jo aaa je sub ret nop test push fsts enter sbb cltd les ss adc dec lods popa lret push push mov adc lret or mov and adc or ret stc or xchg mulb xchg xchg or add js inc rol nop (bad) xor test int test inc sub mov inc clc jne jnp jecxz cmpps jbe sbb fnstenv sbb rcrl mov xor (bad) jns sahf mov jp push sbb inc jl insl pop lcall dec cwtl ds push nop and cmp jno adc dec jb xchg imul bsf ficompl pop dec and mov dec sbb dec and sub fcom adc test push mov inc jo sbb cmp add and cmp cmp fstps jb outsl sub jne and loopne rolb popa add xor add ret rol (bad) test rcrl aaa xchg and dec pop adc mov mov and push jecxz jl mov inc inc lret add sbb xchg out insl or ss aaa (bad) push adc pop mov push mov in push pushf xor mov insl sbb scas test sub imul icebp add and pusha push jg push add dec sub sahf and xorb sbb push popa out lcall and push mov ds sub movsl mov cmp inc add or adc push bound dec or mov xor sub leave add jno cmp mov xchg mov xlat or mov sbb dec dec push movsl sub mov sub add sub mov sbb pop lcall xor pop adc adc stos rcll mov sub xchg push cmp mov lods xchg sbb or bound test dec gs mov and pop push imul adc or aas movsl push sbb or add cmp jg add push pop add js and movsl lcall lods xor xor mov (bad) orb add sbb fwait pop add mov inc hlt lds fild xor or pop sbb sub pop pop aad jp jecxz xchg xor mov pop lock adc insl lret (bad) sub sbb sbb imul es xchg rol mov sub imul imul cld gs ret sbb ret faddp push mov aad pusha add jne xchg outsb pop fidivl mov test or xchg mov add sub cmp jb (bad) mov pop sahf mov inc ret jecxz mov scas or bound nop adc dec or or test icebp loopne pop push dec sbb call adc cmp imul xor shll mov push sbb xorb add push add test nop jno and mov gs add inc or test or or jecxz fadds daa add test sub mov mov mov or in cmp ret test or pop or dec pop nop fucomip xchg (bad) xor out lock subl test icebp xchg inc xchg pop les push insb jns mov and xchg push nop push mov lock add cmp sub add inc add addr16 xor lods test push dec xor (bad) sbb or cmpsb test or jns mov xchg dec je es lods push in pop test and popa jl push mov push (bad) jge test and jge add bound xchg dec pop adc cs shll cwtl xchg in sub mov das ret jns or cltd call mov or lret add outsl ljmp cmp jge add xchg lahf loopne mov add insl add push jbe mov gs shrl jbe jp ffree cs mov or pop inc ret (bad) mov pop scas shr aad inc (bad) dec sub sub sbb jecxz flds pusha inc and leave js inc add test jp cmp add ret gs fs or xor adc or jno push push test out push js dec inc push mov and and fs lahf push xchg and pusha and dec sti leave xor cwtl test mov mov or sbb mov adcl sahf inc and insb push dec fldl sub or aam inc call push dec test pusha add into jecxz lcall and mov fdivr jp or out popa cmc inc jmp (bad) or cltd nop xchg pushf push popa or xor or int xchg loopne fs bound pop sbb shrb insl cmp pusha test sub mov add push xchg shrl cmpl sbb push sub lahf mov xchg cmp add push cmp push les pushf xor enter xor gs test push or mov cmpsb push pop shrb popa int3 adc mov mov pushf sub (bad) ds cmp and push inc aad pop sbb xor pop cli (bad) add jo dec mov jg xchg inc add push adc test subb xchg out pop imul div fistl add xchg mov lea push and mov jno adc les cli rcrb mov lea test inc push out xor lret xchg or data16 or or push push mov pop xor mov in inc and dec insl or adc jns xchg test repz add movsb add enter lcall fstpt and xorl dec mov xor subl imul pop inc cmp imul and lahf or or loopne stc fld enter xchg enter ds jmp dec xor xor imul cmp cmp dec xchg mov or or sti fs mov dec dec repz popa push push xor arpl daa cltd sbb sub or sub mov mov cmp adc lock or sbb dec add or mov add mov repnz inc roll add and sub and and imul (bad) bound test jmp sbb add popf adc (bad) sub arpl adc add dec test scas adc loopne jmp add inc dec or mov addr16 xor sub popf adc mov mov js push xchg nop pop jbe xor sbb mov inc xchg and movsb mov sub movsb test popf es xchg ds outsb push rorb enter pop lcall inc adc leave push cmpsb imul xchg dec mull adc or xchg pusha mov and jmp mov xor xchg sub xchg cmpsb outsb push pop sbb inc loope fildll and lret mov add add adc or cmpsb in add xor mov addr16 mov fs mov and insl adc cmp and divb mov or inc add jmp sbb fstpl insb lea cld xchg xchg test dec and mov and pusha mov sbb xor mov loope dec std test ret in xchg sub in adc mov and jo stc ja push sbb pop inc jecxz pusha mov push outsb iret enter mov aaa jo mov aas sbb je or outsb pop imul xchg mov nop int3 adc loope or ret pop ds sub aas (bad) xor adc jo jno mov bound jne popf or and aam or xchg popa rcrl lods lods (bad) sbb pop test leave in mov rclb mov rcrb jbe mov mov fmuls cmp ud2 popf xor sub add push mov add sub (bad) repz aad lods sub push mov jne sub sbb cmp adc movsb repz jae pop xchg (bad) inc or sbb mov nop popl add bound cmp mov movb lea mov adc and add inc test dec lods test cmp fsubl mov add call dec js mov xchg addr16 mov inc roll or mov inc xchg push call pop (bad) (bad) or xor mov pusha mov dec pop outsl dec add sub inc add mov and cmp insl push shlb icebp cs xor push add in mov jne xor dec xor cmp push popa add shll xchg mov dec pop out pop test aam and loope add sbb adc mov (bad) rorb add int3 popf out cmpsb addb xor test xor (bad) or rcrb addr16 xchg mov sub inc cmp inc leave andb adc gs and sbb add (bad) push mov les pop dec rcll push lea popa xchg insb xchg jo or imul adc pop je lret ret sbb xor xchg cmpsl pop jno test push outsl xor sti xor add test push lret js dec xor cli cmp jecxz aaa xchg or xchg add shr les and cltd mov je xchg sbb add ljmp and andl push loope ret inc mov (bad) jnp js inc xchg insl pop lock push add dec dec stc add jmp mov cmp mov xor add and outsb cmp ljmp sub add or jl inc xor xor pushf popa xlat cmp sub ret es sub test mov lret jp lods push jne add ret shrb loop sbb cmc rol lods imul das xor adc dec sub rclb pop test mov pop (bad) lret sub inc call push add je (bad) xchg loope test popa push iret outsb mov pop xchg xchg les mov or xchg out inc mov popa push aas dec insl pusha addr16 sar adc rolb lock jmp dec push mov je or push outsl xor lcall in sub inc adc add nop loope jnp (bad) sbb or add pop inc sub loope out adc nop mov ffree (bad) sub cmp scas mov loope sub rcr inc daa mov scas dec adc push orl test xor popa icebp and cmpl into cltd and ret mov mov sub dec jmp sub jne xor add inc and xchg popf cmp iret mov mov (bad) xor or adcl sub xchg or jnp xchg xchg add inc and sbb clc xorl mov imul cmp mov add inc xchg mov or add adc popa jno cwtl rcll sbb mov push sbb mov pushf lret fs popa xchg outsb fisttpll sub dec daa sub adc xor enter or imul pushl scas rcl mov and rorl add lea pop pop hlt adc mov push andl mov insb xor pop movb aad pop jp inc sbb popa or adc push sbb mov inc push movsl and or adc sbb xchg add dec xchg add add lock movsb dec add and push add mov shrl xor jp int xor inc divb or jne add xor pushf cmp lods add push sub push mov rclb pusha pop (bad) aaa movsb push pop or adc push cwtl push and xor mov pop lcall pop add nop xor inc push add pop pop js pop rcl roll arpl (bad) pop scas adc in jae adcb or mov and shll add pop stos sbb loopne xchg adcl test sub add icebp rdpmc inc and inc mov rclb sbb iret inc mov mov jo stos popa push mov rorb mov push lock out pop int3 adc jmp add add pop push sbb pop repz rorb (bad) or xor add sbb dec xor mov mov aad rcrb (bad) fisttpl popa lret (bad) add sbb add (bad) test sbb mov mov cwtl mov pop push cmp gs orl dec inc in loopne pop lret popa es mov inc pop add test fcom cmp jl add pop or adc cwtl xlat dec xchg dec or and gs xchg add out cltd xor sti jg add lock push adc jmp in jnp sbb pop pop cmp mov cmpsl xor sbb mov test ret ret mov (bad) daa adc (bad) pop stos dec int cmpb inc call inc push mov add inc xorl aaa movsb sbb lock rolb dec and pop sahf xor in mov adc mov add adc insl imul outsl xor movsb shlb movl cmpl inc or add mov and adc mov sbb test inc add add mov adc rorl sub ficoml sbb mov jno pop fnop add nop adc add aam add pop (bad) repz add cmpsb pop or mov imul pop pop insb mov xor sub pusha loop dec popa cmpsb push add mov test push cmp popa cmp add or call adc mov cmp aad push cmp xor adc or adc sub lods sub sub add dec mov in xor les aam adc and aam imul fldenv imul (bad) divb sbb cmpl test xchg push lea in ljmp flds iret xchg and xor gs outsl adc dec cmp gs mov lea out je push (bad) lcall or and ss repnz rcrb xor adc mov mov stos cmc mov push push adc andl inc pop icebp adc add add push jns js lods movsl test pop or scas pusha sbb jb pop xor push adc icebp xor mov cmp or sahf push lock sbb mov dec mov mov roll stos cmpsb pusha ds mov loopne leave out pop inc nop mov xor xor rolb rcrb (bad) xorl jb andb jle or iret and lods shrl lds and dec enter pop ret xchg sbb add sub aad xchg jne pop popa jl std cmp or pop psubusw lret pop test fwait cmp sub frstpm(287 inc and or in add sub and popa pushf xor jmp or loope out push xor sbb repz mov rorl fsubrl sbb andl or ss dec or cmc aam inc (bad) cli push adc inc mov js push add aas into dec js scas push add xor adc or mov and adcb cmpsl ret ret sti mov mov decb sahf dec imul and sub fwait add jno jmp fstpl clc and (bad) cmp mov lahf mov or xchg call inc sub test mov fcomps dec outsb push pop shrb jno mov sbb and add ja imul cmp mov pop lods jecxz and sahf or push xor nop mov push lret jns mov sar ja mov ljmp xchg (bad) and cltd test push inc cltd (bad) mov lock movsl dec xchg push es addb dec scas and sub or and lea push sahf stos cmp vmulps rorb xorl fs xchg pusha push xchg xchg sbb xchg (bad) js inc jmp and popa mov lret or sbb repnz and aaa push inc xor sub jnp mov fistp lret fwait into inc add or lods sub ficoml dec imul cmc push inc rclb xor popa xor rcl jae nop (bad) adc into daa repnz xor push push add pop cmp sti (bad) adc lret and mov sub inc and in add scas iret mov mov sbb adc popa push xchg outsl cs or inc mov xor inc mov (bad) sub push sub sub mov ret ret ret rcrl dec mov inc xor das test adc adc and pusha jg jp pop mov aaa sbb test xchg xchg stc jo mov dec or pop or addr16 mov and sub ljmp jb add cmp cmp (bad) ret cltd les lea dec lret sub push sub mov es fwait adc daa test pop dec imul xchg add imul insb xor xchg imul fadds cmp js adc or mov ljmp scas rorl je mov inc adc (bad) mov fwait imul mov inc mov daa add or lea insl sub lds xor xor mov ret outsl mov pushf and push xchg or fadds sahf mov shll movsl mov movsl add andl pop and push (bad) (bad) ss call inc sub xchg fnsave cltd sbb sub or or dec jnp and inc jmp push cmp (bad) mov mov les push out test mov lods sub stos popa or xor xor adc mov mov sbb dec cmc xor jecxz sbb xchg (bad) outsb mov mov ret gs shl inc xor sbb sub dec adc daa mov ds or sbb repnz insl mov adc popf dec or (bad) jnp sbb cmp jecxz lods nop test push and lret xchg adc inc mov xor push rorl xor mov mov or movsl xchg or push or dec sub push bound out jnp gs mov xor dec adc pop sub push test push mov test adc ja imul mov sub dec inc rcll adc add mov sbb xor adc xor dec or lock imul data16 fadds jno,pn push mov xchg adc movsl xchg movsl push (bad) jmp into (bad) or pop or mov mov cltd dec pop add sti lods and push test xchg insl xor push dec push gs cmp mov into nop add xor pusha fxch adc je or and das push push call rcl pop and xorb fisttp les add adc mov mov sub (bad) push xchg popa mov mov xor xor xor adc push dec dec shrl inc jae loope (bad) mov push sbb lods lret out call add in loopne add add aaa add inc mov mov jbe or outsb cmp and adc ret gs inc (bad) fstps testb mov outsb cwtl push adc pop in mov or inc mov push cwtl mov inc xor xchg adc add jne push jle xor dec mov push dec cmp sub inc stos xchg add pop or mov dec pop out in sti enter pop movsl push xchg and call xchg and sar cmp fldl and ret sub adcb mov mov data16 push mov pushf jle nop and or xchg add aas and cmpl mov pushf ret test inc and sub pop push add push call adc lea or sub shlb rolb sbb lea cmp jno jbe xchg test cltd insb mov sbb mov out pusha or mov testl add sub or add cmp dec imul xchg (bad) iret xchg je popa fwait and (bad) push andb and add pop mov sub mov int sub pop insl movsl push insb push sbb mov loope repz aaa push or iret ds push inc sbb jne rolb add pop push xchg pop xor loope adcl in cmp inc xorl daa cmp xor or cmp cmp xchg or adc js (bad) xchg inc aas and mov sbb sbb test and and in fwait dec adc xor (bad) xor mov arpl mov adc mov inc lea xor mov lds xchg xchg ret nop sub mov scas push lds movsl sbb or addr16 mov mov aaa (bad) xor ljmp sub (bad) or sbb sub or or or inc fidiv sub jae cmp addr16 pop aad mov arpl lea fimull scas ss add inc pop sbb sbb adc and xchg dec loop and fbstp adc xchg stc clc push daa inc jg loope (bad) adc push or dec sub dec cmpsb pusha sub inc and inc jmp sub xchg nop in mov test sub xor xchg arpl xor mov dec cmp adc inc pusha sub dec roll loopne mov or lret mov xor je sbb mov jbe or fdivs push add test mov sbb loopne and pop test pop dec adc push sarb pushl or adc movsl and mov or dec xchg add push les add ss dec (bad) add loope or adcb sub into adc dec movsb sbb sahf jno or or add dec jecxz mov andl mov imul and (bad) mov push je leave push and hlt sub cmp movsl pop xchg dec or (bad) aaa inc rcl es jl push pop ret cli nop and jnp sub scas ret and push pop lods (bad) and cmpsl imul push movsl add and xchg mov or xchg addb addl sub pop xchg sub cmpb xchg sbb add sti push push mov in lcall or push mov popa add or shlb jmp jno loopne add incb xor inc sahf lods (bad) sbb iret ss cmp pop loopne cmpsb adc push into test cmp dec lret jae lock add out inc add imul mov mov sbb mov mov and movntq adc push pusha hlt mov mov or cli inc push xlat mov jne movsl ss mov xlat push add movsb and bound or rcl pusha popa add lret add in pop and ficompl cwtl rolb (bad) xor inc cmp data16 sti xor out mov mov pop dec ret dec pop mov dec inc jp and mov aas dec fs loopne dec xchg push les add jecxz test lock and (bad) push movsl and aad lock jb xor pop sub scas stos inc or xorl add and test cld or sbb aas pop xchg inc loopne sub sbb adc mov adc in call xor test inc xchg cmp cmpsb adc add pop xor mov sbb or pushf and loop adc test inc push lock inc sub bound sbb mov sbb push aaa lods mov mov mov (bad) icebp mov pop rorl or adc aaa add and ljmp xor pop xchg pop sbb or and je jnp (bad) jns pushf jge mov xchg cltd xchg push xor dec ret mov call lcall gs popf lcall rclb insl pusha mov and scas mov test fistpll mov xorl pop les pushaw icebp bound push pop push into pushf pop add lods xor mov popa xor jmp loope (bad) test mov rolb jmp js,pt and fldl xor cwtl data16 xor add rorb sbb cmp xlat and leave pop push sbb pop sub rol xor cwtl test push pusha xorb popa cltd mov sbb enter lods xor jbe test xor loopne xor and lods push inc inc es and imull and xchg lods and sub movsb sbbb ret pop addb scas adc and push iret cmp es cmp add cmp add rolb test xchg inc pop int3 push sarb or sti push cmpb sarl jle dec pop dec cmp push or cmpsl or rorb je jne rcrb pop sarb imul xlat sbb or lods loope sub pop mov push jo mov mov gs sub cmp mov add and das (bad) lock daa arpl xor sub mov jae stos dec jmp xor (bad) sbb movsb cmp test fucomp sahf cmp dec sbb and sub outsl and ljmp inc add mov mov mov xchg mov push orl pop pop inc rcrb andb outsl sub xchg mov sub mov imul inc xchg das jmp lret adc pop jo xor cmp adc dec cwtl out xor fbstp xlat icebp inc push mov add adc je adc dec (bad) xor sub mov daa or js sbb xchg shll in lret aad push pop pushf es repnz fildll xchg insb jmp (bad) xor sbb in xor or (bad) xor add sahf sub dec inc xor pop pop mov push or adc mov ss andl dec lret test scas int or test or ret movl add ss sbbb cmp loope test clc push xor jns mov arpl mov shrl ret arpl adc xchg push mov arpl les mov movsl dec mov test (bad) addr16 call and add adc pop movsb (bad) xlat add push xchg cmp or pop xlat adc pop mov sub or sbb rolb sub or dec shrl loope add add push xchg adc sbb fsubl push fldenv or dec xchg (bad) jp jecxz jns xor insb lret add inc jb xchg mov test cmp sbb xor dec std pop js roll stos lret leave sub lods add andl adc leave mov mov cmp rolb inc sub addr16 inc in cmp imul lods call and inc push inc ja movl sub addb shrl or fdivrs inc ja sbb fistp das dec xor push xchg or xor or mov add (bad) dec push fisub sbb push fist adc dec js repz sbb pop inc mov xor adc imul cmp aaa dec mov roll xor test push mov cmpsb lods mov (bad) cmp dec and lock cmpsb gs inc fstps rorb push xchg mov test adc sub xor add pop pop sbb xchg mov xor lret and sub cmc sbb mov add dec and mov sbb push xchg add loopne adc xchg xchg dec loop,pn shrb and fwait in sbb xchg and ret int3 arpl xor mov push xchg cwtl es jp mov inc add jg xchg cmpsb or ret jne lahf cmpb je (bad) dec (bad) sub cld xor adc push xor mov adc and pop jno dec add cmp mov push outsl (bad) es fadds xor aas sbb cmp cmp leave inc (bad) mov adc pusha bound or xchg xchg sub mov test jne add xor jns mov or and push movsl sahf js and sub and mov ret cmc mov or jl pop repz cmp adc into aam ret test jno (bad) lahf lods arpl inc adc fisub fsubrs sub lds shrb or sbb and pop imul rol pop adc test pop and xor jg pop xor push mov movsl mov ror inc xlat jo mov sbb jo cmc mov inc cmp or nop (bad) popf sahf xchg mov or rolb lcall pop out fdivrs in adc rolb aad pop push cmp xchg or xchg xor inc and and inc call repnz cmp pusha and (bad) andb mov adc sub enter fs add and inc mov add cmp jg lret jne add (bad) hlt jbe dec or push rcl xchg (bad) bound (bad) xor cmpsl cmp sub mov mov sub js xor add pop rorb xor xchg mov pavgb add push dec and xchg pop xchg sbb xchg fsubs mov pop pop jge and rol outsl mov cmp dec pop leave mov fidivr enter fbld xchg push popa dec ficom adc pushf add or in pusha or and (bad) cmp push pop pop pop lcall or (bad) push mov test or or mov adc cmp dec test xchg sub ss nop sub inc dec loopne das lods xchg add shrb rclb push add sbbb cmpsl push or inc out inc das out mov sbb imul inc test mov xor or daa (bad) and add imul es add sti dec push dec mov int fs rcr pop (bad) pop xchg inc popa sbb xor pop inc push mov ja in pusha and jg inc lods push out (bad) xchg fsubs pop test lret sub jl xchg and aad add cmp cltd dec lods jae mov cmp mov mov inc mov bound adc ret hlt cmp test sbbb popa push pop imul sub add push jo or sub xchg test bound andb pop push stos adc movsl scas add lea lret fwait push movb xor push push mov cmp js mov add jne jo (bad) notl sbb mov outsl pop (bad) push lock inc ret xchg xor mov je popf sbb and aaa out daa and dec push rolb mov mov aad arpl fcomp shlb jbe xchg sahf and push adc cmpsl inc movsl imul (bad) aaa xor push ret push dec xor pop (bad) xor xor cli xor sub sub sub daa (bad) icebp rcll xor cmp add inc in mov shlb bound insl stos ljmp adc xchg push xchg mov clc and xor test data16 push out cmp test mov and repnz dec inc sub xor inc inc sub xor gs adc sub xor cmp xor cmp movb and jmp lods add ss fild arpl mov sbb inc int pop xor xor push and je xor lods loopne adc movl push cwtl lds insl pop adc cmpsb mov (bad) rcrb dec lea push inc daa lds mov daa mov xchg ret adc add or data16 sbb cmp cmp sbb inc movsl cmp adc in cmp sbb push mov add cs gs ret pop addb or xchg idivb xor sub int xchg xchg mov add and repnz xchg or in insl or jns into adc pop sub cmc gs xchg repnz sub sub mov out nop adc inc mov push or sbb jl pop inc cltd add pop mov imul mov out aaa xchg xor daa lcall dec popf cmc inc test inc add xor xchg (bad) sahf movb pop rol mov add mov push add inc mov or andl dec mov bound sbb sub pop add jle aam or movsb xor pop cmpsl sbb jae xor sbb xchg lock inc mov fisubl or lock in and sarb arpl add or jecxz pusha push mov inc add mov shll test adc or loopne sbb rcrb sahf mov bound inc dec or mov add add xor cmp or mov add scas movsb and and or mov lods jne mov lcall das gs dec in imul inc and mov test repnz jmp movsl and mov sbb mov xchg ret outsb lret add push pop in inc cmpsl gs movsl xor inc nop push sbb dec inc xor push mov mov hlt dec aas push or loope and sub sub jnp dec dec (bad) jb inc jp sub xchg pop push sub or test push xchg sbb or es cmp arpl and leave xchg adc lea cmp add xor data16 and push add pop dec dec add mov cld jmp mov add push stos test add stc and rorl adc fsincos loopne push cmp pop movsl and sbb cmc and mov (bad) or push xor sub cmpsl sub or lcall call xchg inc jno in adc movsb pusha (bad) or pop add jecxz scas mov pop and mov add add jo fstpt jo (bad) repnz and mov in nop mov adc sbb les inc push push or or loop sbb bound cmpsl adc test mov cmp push xor daa ret pop jmp add or loop push or inc dec and sqrtps in in dec push mov adc aad mov add push popa enter fmul bound mov (bad) bound roll mov (bad) pop lea xor push dec sbb xor and int3 mov or mov and add (bad) xchg pusha mov push inc lcall lods pushl pop jnp js xor dec test sahf mov ret xchg cmpsl xor xor xorl pop les insl mov pusha lods lds movsb add icebp or sbb xor pop mov jmp rcl xor and js fisttp sub addl mov jp add nop sub or lock and xor add inc xchg sbb jb xor test js daa fs sbb cltd xor pop cmp hlt dec lcall jbe pop imul jecxz and aam xorl xchg inc fnstenv adc fist xchg cmp pushf icebp (bad) mov adcl push (bad) xchg mov test fsubrs jb mov lret flds ret inc sub lret inc push (bad) mov sub add cmpb test sub cmpl nop mov jge or and xor out pop lods cs mov or inc mov ss aaa inc add sub movb and shrl mov add xchg xchg and cltd xchg push adc jl or xor rclb or pop push or mov into xchg push subl and xchg aaa sbb (bad) xchg ljmp lea ss push and push inc cmp lea lods sub inc inc mov adc leave xchg mov lea push addl add (bad) jno js addl inc lret cmp icebp mov mov jo adc or adc sub cmp sub outsl dec xchg gs push xlat sub or in stos mov xor or mov add test pop das ret rcll dec push dec sbb xchg rol fsubs mov pop mov xchg cs push add push mov sbb sbb push xchg rcrl mov xchg push add test pusha pop inc stos addb dec call jmp lds pop jbe lret loop leave or fidiv sbb add push push jnp inc sub adc pop arpl add pop or imul pop out or pop cmp inc js lods inc or (bad) cmp mov in sbb rclb out nop mov dec mov pop test fs hlt imul (bad) jne xor xchg add add sbb push sub cs sub popa rcl and push pop cmp int dec mov (bad) xor sub movsl inc xchg adc sub inc xchg ficomp adc popf sub push pusha insl inc mov jb inc sbb mov or cmp hlt shlb in inc les loop pop test cmpsl dec pop imulb xor xchg sub mov adc inc and repnz roll jo push leave mov ror lock pop inc jmp pop add inc pusha test mov mov leave dec or push add dec inc comiss jne loope cmp xchg jle or mov pusha in test mov cmp add enter xor shrb push sub jno inc xor xor dec lods (bad) bswap lock lods mov pop or jge or fidiv mov push imul dec bound cmp inc (bad) lock (bad) es lret test sbb test test mov ret pop add nop dec pop (bad) cmp daa adc sbb ss cs jbe sub (bad) push loope inc test and ds sbb and push mov add loop test fcmovbe mov add pop lahf icebp daa test cli pop xchg or roll cwtl mov mov mov roll sub jmp adc pushf cmp in pop popf sbb mov jns jae (bad) pusha adc fldenv fs xchg sub xor jb sbb and rcll leave adc lds push mov push dec (bad) xor or icebp fdivrl add aaa popa or cmpb xchg pop adc rcrb or sbb movsl ljmp sbb mov cs sub lret mov inc imul mov aaa adc push das sti pop ret rcrb dec aaa xor or xchg fisubl push add (bad) xor mov or lock cmp push movsb and add pop sub mov mov or adc push and push lahf (bad) enter lret sub and xor mov or or inc ret ror mov insl sbb sub test and and test xchg bound xchg sub adc inc sbb pushf test iret pop mov xor insl test pop (bad) adc lret inc dec iret ss and je movsl mov cmp or add (bad) jns adc mov popa xchg lods bound and pop xor push arpl mov mov dec cld aaa outsl in or xchg test add enter and add or leave cmp add and jp push (bad) imul frstor or xchg mov sbb pop xor and sbb dec lods inc mov and xchg popa mov int3 ficomp sbb lods mov mov mov inc les push xor orl pop dec and fnop xchg js pop push shlb ret inc rcl lret test aas xor inc jnp inc mov pop fistl notl enter int3 add cmp cmp mov inc and sub ret das dec mov add add cwtl sbb jg cmp adc shrb fwait dec (bad) sbb es cmp loope sub xor fnsave leave shr and sbb loope xor cmp dec pop sub icebp data16 ret jecxz pop mov fist aam inc dec or das inc test ret cltd fbld xor and adc xchg jnp sbb js xlat pop mov lods out xor mov jns cwtl sub pusha sub adc xor cmp xor arpl sbb ds loope and and loope test inc xchg jg pusha dec mov testb test fyl2x insl popa movsb mov and syscall jecxz imul leave mov xchg nop lock popa test and push (bad) mov rorb bound pop cwtl loop pop xchg and or mov mov sarb lcall adc add add and or pop xchg pushf or xchg (bad) add and xor sti gs popf add push std add int jecxz xor sbb or push add push ret mov les sub and or add enter leave sbb lds mov pusha jne inc repz or mov repnz inc or into mov xchg fcmovu cmp ret sti mov andl dec jmp lods orb or jne or cmp fisubr jo dec test push and sbb cmp ss insb (bad) cmp or sbb adc rcll xchg xchg movsl lods ficompl mov push sbb nop fidivr mov adc sahf mov loope jmp jmp jge je movsl and mov pop adc or sarb js mov pusha inc cwtl jno inc inc pop fnstenv sub les out jns insb bound mov cmp (bad) and xor test pop rcll popa mov pop outsb add sub lahf and pusha shlb imul ret jle adc mov mov aas inc and add sub pop test jae ds pusha in in mov xchg mov ret or lods push sub ret xchg mov pop leave and addl inc sbb xchg add xor mov js jo std sub sub xor sub sbb mov pop or loope sbb cmpsb adc mov mov mov mov xchg inc iret adc adc inc jns (bad) jge sbb mov xor inc sub dec rcrb out xchg movsb mov movb inc lock mov mov mov aaa roll adc push jo sbb xor (bad) and xor xchg xor adc sub dec xchg ret push xchg and and dec inc push ret dec inc sub mov mov test inc cwtl cwtl xchg adc and addl ficomp ss and mov int xor pop push sbb and dec (bad) xor roll shrb xorb dec push les sub mov insb xor inc xorl dec push insl inc lahf leave xchg adc mov pusha popf lea pushf data16 mov xchg mov mov ret lahf add xchg movsl cmpsb iret pusha test mov sub (bad) pop adc sub add sbb insb or mov xor add xor add mul inc inc sbb and test data16 mov ret xlat jg insl sbb or xor push or inc (bad) xor inc movsb and lods sbb mov xorl mov mov add add divb out test cmp ret insb sbb inc sub mov dec or or xor movsl jno mov pusha sub xchg xor xchg or inc xchg inc or adc inc mov test js mov sbbb cmp xor imul test lret jp xor xchg and dec sbbb sbb xchg mov fadd cmovp xchg test fcmovne adc aaa push fildll jb adc popf or test adc popa pusha pusha xor stos inc arpl adc dec add inc jg icebp addb shll jecxz (bad) xor pop add fxch push lea ret or jg rol loope mov sub sahf es in mov adcb and in repnz loope jge pop xor adc jns inc mov fs testb adc js add push and test movsb insb loope sbb test mov mov and add das xchg adc or fldcw pop inc push xor fnstenv and lea je push inc or jecxz dec inc push mov lods (bad) xchg adc loope fistp addl push jge ret xor ret es lret push inc adc mov and add mov or imul sbb int or and xchg scas add je add xchg xchg and mov dec pop or sub or sub xor ss mov imul dec loopne inc xchg shl aam inc dec mov fdivs sub stos popa dec je mov cwtl and pusha fstp call push jo (bad) pop mov push or xchg lods adc xchg push add cwtl jo (bad) mov adc cmp aad addl sbb add lods int or xor pop loope mov xchg test mov push insl xchg dec or lods pop imul cmp or xor inc and loope aaa mov sbb mov (bad) xor fld lret xchg xchg fwait cltd sub imul lock adc mov rorl sbb les mov or pop aam cmp mov dec mov adcl add cmp mov jbe daa (bad) inc test enter jecxz xor inc jno les or ret loop mov and test rcrb add inc (bad) mov sub scas adc and sub mov inc in andl or push in lret (bad) mov or xor movsb push or jmp addr16 mov inc push popa sbb (bad) cs and insl mov inc jecxz imul xor inc pop lahf xor inc js loop sub mov pop enter stos inc pusha gs xchg dec imul push repnz popa jmp xchg inc cmp mov inc adc into pop (bad) popf cmc xor mov les call rclb add adc adc rol (bad) add or dec cmp out xchg sub ja dec or dec push xor loope hlt test xor dec and rcr cmp stos sbb push or pop adc mov mov outsl add leave cmp mov sbb and sbb mov add or bound (bad) lahf push mov (bad) push mov add loopne adc leave sbb push mov lahf add and xchg js dec xchg cmp enter sub outsl imul ret outsb adc add dec pusha xor (bad) jp mov push ja dec push sub push mov adc xor jmp aad add popa inc mov sbb test add aaa lcall rcrl sbb dec xchg inc pop sub push lods out insb fwait call movsl pop or popa add ret ret sub test mov inc jo sbb (bad) sub dec jp pop mov lds add int addb test sbb or imul or and repnz inc pushf push cmp mov adcl xchg or movsb lds dec mov scas inc sbb add popa icebp outsb and sbb out add sub test sub sub test mov popa (bad) roll adc aam dec xchg adc xchg ss mov inc rcll sub xor xor leave insb and or arpl jo cltd fisubl andl add gs cs and xor mov dec adc sbb xchg push jmp inc push mov xor mov lea mov jb xor or jp iret xchg jno or and leave mov and and add subl and das sbb lods adc insb fxch adc mov insl mov xchg jo pop pop (bad) or das outsl sub pop mov jge call inc fbstp jge test aam cwtl mov aaa and or in xchg das sbb jmp cmp (bad) mov mov sub cmpl sbb push dec je dec mov mov stos or ss inc xlat mov imul or and outsl jmp ret lret push or inc xchg test popf or inc xchg and lods add pop ds pusha fs fistpll lods lock inc shl pop mov mov mov cmp adc add push je pusha (bad) xchg or ret jo lea sbb rcr push add enter mov dec jno push xchg and sub gs inc or sti lahf rcrb xchg push gs xchg jp push nop dec add jbe and mov test fistpl mov inc test daa popa lods popa and push xor xchg mov rclb pop mov mov ret xor lods lea ds add rorb xor lret cwtl andb hlt aad lods add frstor enter add xor jmp mov or xchg ss jns nop mov sbb xor fwait rorb xor testl repnz (bad) mov lahf jle mov push xchg bound adc pop mov xchg popa arpl xchg cmp push jae insb pop xchg or sub lods xchg adc sbb cmp sbb inc pop push and inc push sub stc adc sub imul jo add mov loopne sub jne mov inc cmp pop lahf call add mov and sbb dec lret test xor sub ljmp mov pop std lods leave push push popa sub imul (bad) rcll mov dec or rclb pop add mov in dec push adcb popa das dec pop adc ds xor or lret pop test pushl jmp add mov pusha or dec popf mov loope ss in push mov or add or stc push push or jp xor dec xor cmp dec xor mov daa dec orl push shrd (bad) or add imul add bound add inc sbb xor sarl or mov add das push pop ret loop nop sub xchg inc lea fs daa and cmp test sbb imul pop clc sub xor xchg inc pop dec test jg add leave (bad) pop lock bound or mov loop out add mov loope add xchg enter andb pusha rcll test loop outsl in stc pop cmp in mov mov pop push dec pop cmpl adc xor cmpsl and je xchg xchg pop add icebp xor sbb test mov or enter xor sub loopne add jl pop adc pop hlt dec popa imul mov nop lock inc jb mov add push rcrb in mov sbb add xor adc addr16 xor and pop mov lds add inc sub cld sbb int int3 or and pop sbb mov addb push loope mov rcr xchg loopne fwait dec lock dec mov adc add push insl lret cmp xchg adc lods and or xor ss ljmp lcall outsb sub mov nop dec jb lcall andl mov idivb dec mov add or xor dec rorl pop ds sub xor fsubrs push test fnstenv sub xor xchg push and mov pop pop mov adc add push lret pop and sub cltd popa dec xor outsl mov (bad) mov icebp add dec xchg lea xor dec push jo pop mov js sbb lods mov pop add xor inc outsl fldcw loopne or or faddl and mov pop inc adc mov adc js xchg inc and pop mov xchg jp test inc or ljmp adc add add sub call ret dec sub mov xchg xchg inc mov sahf adc push push test xchg jl dec or inc pop dec xor mov sub xor add movsb sarl shll ss push or mov test and xchg add shlb stc test jo mov mov inc (bad) (bad) lock insb xor push ds inc pop pop and movsb adc pop aad test sub stc fldl dec sarb lds aad cmp dec aaa push push xchg or add bound sub jbe inc and push jno jae shlb lods enter test inc xor xor xchg lods sub push test dec aaa in adc inc mov cmp or sub cwtl cltd or xor pop enter add mov sbb data16 mov pop add mov dec popa ret mov dec xorb or cmp xor xor xorl test daa dec (bad) mov xor xor mov popa push cmp mov and cmp cmp xor dec push mov fwait popa dec push and mov add add fadds loopne sbb lret nop add test sbb push ficom ljmp add (bad) mov or daa fstps mov pushf sub jecxz add lahf xor leave xorb add sbb js mov mov xor mov push lods add pop outsl or inc xor test add jns inc jnp das inc pop or movsl dec cmp pop dec xchg (bad) test adc mov cmp dec aaa jne add and mov loopne ret dec xlat or bound (bad) (bad) xchg leave ret add push ds adc adc aaa dec push ret pop push xor test ljmp xchg adc sbb dec (bad) xor pop stos sbb fnstcw aam leave outsb popa or inc add gs pop cmp add inc sub fdivl cmp ficomp push mov dec push bound sbb sub cmp push mov xchg and pop dec loope outsl cmp add imul xchg adc mov jno and fnstsw push ss adc adc sub lods imul aaa and sub or notl test add mov scas and add and sub mov rolb pop mov lret mov jne push cpuid mov pop leave adc add stos xchg lcall fistpll das (bad) xor push push mov add js ss mov mov mov in mov or push mov cmp sbb andl adc daa mov test dec sbb adc xor sbb inc xchg mov or mov es nop mov mov pushf add adc or fsubrs mov orl xchg mov mov pusha push leave and and or daa xor addr16 xor inc mov dec mov pop jmp in xor stos add adc and mov and push mov (bad) mov (bad) sbb mov cmp pushl and or pop add add jge xor pusha pop (bad) sub sbb pushf (bad) addr16 popf and xor jg xor sub mov cmp fcompl xor sub sub xlat add cwtl push leave push push mov add lret gs xchg sub mov shl xorb sub pop mov dec sbb sub add shll ror xchg xchg push pop test imul adc movsl push mov or ret pop xor pop cltd pop lods mov ljmp or (bad) ss xchg mov test sbb data16 jl aas mov add xor pop or imul dec lods inc pop stos mov lcall pop sub adc adc movsl mov sarb es add or mov push rcrl dec popa inc add js sub loope dec jnp movsl push push mov xchg cmpl aaa adc pop sbb arpl fmul popa push das sub sub lods shr pushf add push sub xchg jno and mov cmp push xchg dec mov or hlt xor daa test movsb test ret cmp lock test and sbb scas dec cmovb lods out mov inc in mov xor out pop mov in mov add (bad) jno aaa and pushf mov and rcll or out test insb cmp pop mov jge int add (bad) xor int3 jbe add or jno imul pop mov adc je push add pop sbb pop dec aaa mov lods rol or dec sub shl lods lds add fdivrs dec mov ret pop enter xor add fs xor add aaa sbb add push lods or dec pop por pop gs mov add pop xor cmp jecxz and lods mov adc xchg jg or jmp cmp adc mov add cmp test frstor xor cwtl clc and sbb iret mov cwtl cmp inc xchg dec in add push cmpb jno inc dec mov les ret outsb dec push loope sbb xchg push add sbb ret sub and outsb xchg sbb (bad) in rol nop gs dec loop pop std ret adc cmp pop dec and xchg add leave (bad) sbb fucomip imul xchg insb test inc xor ror test mov jbe or sub add icebp pop sbb imulb movsb cmpsb outsl mov imul repnz flds rcrb jae outsl jb push add mov pusha pop jb imul dec add inc xchg xor fdivrl or xor xlat rolb js and jnp fadds mov sbb adcb nopl dec inc or jg cmpsb cmp imull pop rcrl or xor sub or nop daa add jo leave cmp or xchg and leave cmp cmp lcall scas dec pop arpl cmp xor or enter xor inc lcall lods test push in (bad) xor xchg mov cmovp loopne cmp sbb or insl es (bad) mov push imul sub (bad) xor jge pop add lret cmpsb inc nop push jp mov adc add sbb jecxz js xor cs add popa dec ss arpl (bad) mov and xchg ds ror xor pop jo mov shrl and xor mov cmp popf and sbb mov sub or rorb mov jne xchg call xor (bad) mov push insb pop push mov add mov pop push pop xchg out and xor cld or loop mov inc js (bad) pop cmp xchg test sub cli mov xchg pusha mov fsts add daa dec test push test rol dec sahf push cli (bad) sbb xor pop (bad) inc xchg and (bad) xchg or dec std sub sbb ret xchg andb dec cmpb movsl push inc popa movsl xor (bad) lods daa add adc (bad) and into xchg mov test jl (bad) les subb jne sub jae pusha inc sub lock xchg push push jb adc popl cmp mov lea xor adc dec pop and cmp movsb mov push lods inc cmpsb inc xchg cmp sub xor inc inc adc jb addb dec sbb js sbb mov push fcoms adc dec enter test lret mov mov jo lds mov loope es outsb cmp adc es imul adc lock insl int inc pop pop xor test cmpl and push xchg push cmp adcl dec cltd (bad) and or and and cmp and shrb cld xor aaa or (bad) enter xor add pop sub pop pop (bad) mov dec push das add add pop xor jne pop xchg jne inc add or leave pop nop movsl jno lea mov loope popf mov add aad scas ds adc call and add (bad) int3 cmc out lock lcall lds inc dec imul mov arpl mov and adc std bound xor adc push ret fsts and mov inc xor sub add test popa test jge aaa adc lock flds xor xchg cmp and lock add insb in test lret push inc xchg pop pop into inc pop test push test xor loope or ss xor and mov in push adc sbb (bad) or push orl jno or add push pop leave pop sbb push inc xchg imul cltd sbb mov les xchg (bad) xor mov and pop das loopne mov adc dec in mov and jecxz jmp adc adc and pop xchg or xor pusha sarl (bad) je scas or pusha and push ficoml push inc and xor adc sbb sbb add sub dec mov rcll cmp cmp push and test popl fcomps xor push add movb lods fidivrl mov or sub dec test jmp xchg adcl (bad) mov mov add inc imul cs mov xchg sub add (bad) or cwtl mov lock call mov stos xchg pop push out divl sahf mov inc push dec andb mov xorb loopne cmp roll mov push sbb and dec jp (bad) test mov call sarb dec ret ret lds push popf jbe imul cmp nop add and sub nop push add lahf dec xor mov xchg xor inc add mov frstor lods dec ret jbe add or sub subl cmc pop add ljmp stos pop aam and lea and fildl sbb icebp inc test xor sbb out movsl adc mov sub push out sbb add shll ds xchg in add lret mov pop sahf cmpsb mov in ss popa add jecxz cld (bad) adc cmp andl mov nop xor cmp push or mov inc sub mov sub sbb ss stos lock sub sti jg push dec popf (bad) out popa push push xor jne xor dec push add sub mov sub (bad) lods adc or push mov add inc fisubr lret or movsb arpl sbb bound push cmp jae sarl push loope adc add push mov mov sub lret pop and cwtl sbb sub mov test and fdivl (bad) push ror push sbb or daa and sbb dec in fdivl or or test adc and fnsave lea or lcall sti xchg mov push xor mov adc or lock outsl out adc inc arpl repnz popf xor movsb mov dec andb pop pop xchg std jo ret int3 mov arpl xor cmp shrl je sbbb insl xor outsl dec (bad) or dec inc call xorl xchg daa int3 mov (bad) push push addb cmp sub xor mov xchg add sub and mov xchg (bad) pusha jno out and push mov jno mov cmp dec pop adc ret add jecxz add fwait xchg mov and dec loope loopne dec sbb test pop adc sbb movsb mov aam rol mov in popa mov outsb lcall push push add mov es ss jo mov adc jge xchg ret and mov xchg clc jns test add push popa jge cmp les sbb xor and int jmp fstps jle pusha rorb inc out inc push xor sub xchg sbbb out xchg add add or adcl subl push mov fs mov iret push push pop or adc enter mov cmp lods dec or xor inc aaa inc adc test ret and and and loope (bad) dec sbb xor sbb pop ljmp xor mov sub pop test in inc add notb ret popf xchg push leave inc sbb inc bound cmc push movsl or insl or cmp or or outsb add push xchg scas push mov lods bound (bad) cld (bad) cmpsb dec mov sub push xchg inc shll les xor call jnp xchg cltd mov sub pop or add pop dec ss std dec dec or ljmp or sub mov push dec mov push cmpsb ds and adc daa lret inc jno test pop (bad) mov imul or outsb jmp add out aad and mov in in or sbb jg xor fadds es popa inc add and push rclb enter adc test mov sub repz adc popa insb loopne adc js imul fs jae repnz dec xchg (bad) pop mov ja jmp xchg movsl xchg dec or inc sub adc cmpl or (bad) inc inc cmp ret mov out ja leave add dec mov (bad) dec dec pop or std push mov jo dec movsb and xchg and icebp lock mov js mov or cmp es xchg rorb daa (bad) adc push sub movsl xor lds jno or pop sub xor inc nop mov mov nop arpl lds loopne adc stc mov roll lea sub or xorl sahf jns xor xor mov push adc and insb rcl push mov xchg xor jge outsb daa lret mov popa dec inc pop cmp or xchg sbb es aaa mov and aaa fldl xor mov inc xchg add rolb xor ret push in dec loopne xchg mov xchg mov cmp mov stos lahf push pop js movsl dec cmp jo popa imul aaa lea adc push add pushf add pop adc or pop ret adc inc mov int3 push in enter mov sub cs ds push nop add sbb and sub inc aad test dec nop ret aaa stos mov xchg and test push sub xchg jns dec cmp sbb pop lcall add adc mov push (bad) mov and ret (bad) push xor pushf mov push sbb int push shlb inc dec lock pusha iret push mov cmp lods insl pop test mov cmpl xor cmp adc imul mov and pusha cmp fwait cmp dec sub inc or insb fadds repnz mov jecxz movb push and adc mov test addl add cmpl stos sbb push mov mov and sub mov repz add jle sahf dec pusha xor mov sbb insb mov rolb inc mov cmp sbb sahf add loope push pause push adc inc add dec test adc xor loope je mov and out jno sbb inc and or imul push (bad) jo xor inc imul dec pop sbb lods movsb mov fsts (bad) dec movsl xchg scas add insl xor test mov xchg push ljmp xlat aaa adc mov adc loopne jecxz stos orl adc loop adc sbb cmp xor sub (bad) lock push mov hlt or jecxz (bad) mov jno push inc mov xorb or mov add mov inc addl adc or lret lock ret push xchg push jmp leave push mov dec imul ret addr16 or cwtl cmpsb sub inc leave jns pop mov movsl and dec adc xor dec xor mov sbb pop fcmovnb sbb aaa pusha xchg popa sub dec fwait js das push dec or jmp imul dec add xor add push rcll enter xchg dec mov dec or arpl mov dec mov add add popa and dec pop push gs call add in gs push lea xor rorl push in and xchg cmpsl popa and outsb sbb shll add mov sub arpl push adc mov iret push add mov push pusha andl fidiv mulps push shlb sub sbb addb dec add xchg test mov test push push inc xchg daa lret dec cmp sbb mov movsb or arpl cmp dec in popa push push push jecxz movsb test imul mov sub dec rolb shll mov fistpl sub lods sbb scas xor inc sub or imulb loop inc push xchg stc test aas dec push sti push and xor push mov sbb popf mov loope sbb dec adc sub sbb jno stos adcb pop movsb insb sub inc jecxz repz fcoms mov add movsb and xor jmp pop xor or add xchg movsl lods inc jmp push rep inc push addl xor fldt rcl xor sub insl pop dec xchg (bad) fwait pop test xorb rolb lods push outsb adc push xor xlat test test and pop cltd sbb sub mov lods add xor repnz and les cmc xlat in add add xor leave add aaa mov push dec fldl xor push cmp jge daa movsb sbb xchg into mov cmp lods fwait mov add xor dec pop repz mov bts inc das loope out test aad outsl cmp cmp call cmp and sbb cmp inc rorb pop hlt sbb add test xor xor arpl out out and sbb jp xor add mov test lea mov mov xchg cmp push xchg push leave ret rcll push mov sub pop mov pusha sbb sahf cmpsb xor loop add pop in test (bad) xor pusha inc jmp fld nop inc mov xlat push pop and rorb mov xor in xor mov shlb add jb outsl sbb (bad) inc lds or movsl dec pop ljmp dec or or lods (bad) xor sub jge xor sbb cmp sub xor imul adc mov movsl add or movsl fcmovnbe mov pop movsb in sbb call add ret stos pop call or in dec push adc sub lods jne mov (bad) sub or add pop (bad) mov enter inc jp xchg push in mov add mov add adc inc mov pop clc negb or add jb (bad) adc adc imul out inc inc (bad) xor (bad) insb sub fs pop lods nop adc add sub inc and adc sub sub dec pop inc lods sbb out movsb pusha dec cmc or add test push dec sbb mov push lock popa jno jb push ret xchg or pop jnp cmp add inc imul (bad) loope jno or xor mov xchg movsb inc imul xchg test or notl mov out sub daa xor xchg xchg enter lods leave sub jmp test xchg sub repnz push adc popa mov in pop ret rolb test adc mov aam push ret jmp sbb pop or aaa cmpsl or test lahf dec cmp add sahf (bad) mov push sbb jo sbb inc test mov mov test dec add xchg push adc dec or mov rcll (bad) je into adc xor daa sub inc and inc out xchg andb (bad) mov mov jae pop push stos gs loopne dec sarl and add in push sub dec ljmp fwait xor cmp inc rcrl and xchg lock addr16 imul sub cmpsb gs xchg imul inc int test mov hlt jne add dec imul xor pop add push repnz pop adc jmp xor add sub popl jns inc lret rol lds inc sub jae arpl cli js mov mov push sub dec xchg sbb add xor icebp adc sub aaa sahf add aam and inc xchg xchg xor dec xorl daa or dec (bad) mov sbb pop mov dec aam scas dec popa sub mov movups mov lds fwait cmpl sub stos add test ss leave inc test add inc rclb or cmp or inc inc mov and leave ret adc adc adc jbe popa (bad) inc outsl fmuls test cmp popa popa xchg xchg sub imul add sbb call adc sbb lods outsb adcl test lds sub and nop sbb mov leave adc and jno mull jo test inc sbb sbb or je mov and xchg ret dec jmp sub pop inc loopne in je fld push int mov push xchg ret imul loope xor pop inc ljmp xor cmp ss rcl call insl cmp and xor cmp out fdivrl add insl cs pop lea lcall and mov add nop push shrb pusha dec add adc (bad) adc xchg ja rcll (bad) xor xor lods mov hlt sub mov (bad) xor ret pop sbb inc and or aaa or add or jg sbb pop (bad) cmp rclb dec and out push mov lea sahf and inc add or adc hlt (bad) xor add gs imul lret adc imul xor mov mov xor sbb test sbbb add pop shlb mov stc outsb and test fstpt rcrb mov inc addb dec imull je cmp mov mov das or adc adc sbb ss int mov dec push dec sahf adc or add and fwait lock adc sub movsl inc or add push inc jmp xor ss lds out mov push leave add cmp int3 sub sarb stos pop mov mov and or mov (bad) clc movsb pusha mov push pop push outsb add inc mov loopne push push add adc cmp ss in std ret stos xor mov outsb xor cmp ficoml out push sub xlat mov sbb or imul inc xor test push and dec movsl or loope (bad) aam out inc inc aaa insl lahf xor jno xlat lcall test xor vcmpsd test add or xor aam push push fmuls lods test xchg bound ljmp sub mov ds add pop dec pop mov jmp sbb adc inc daa jl leave or or pusha fs inc and dec adc rol movsb test and adc mov or add inc mov xor pop xor imul dec add dec or or mov and mov mov xchg xchg and jo fldl (bad) (bad) movlps imul sub mov (bad) rcrb xchg insl fistpl in adcb mov add insl lret xor outsb leave sbbb add cli inc mov xor pusha add add xor pop jns gs movsb adc pop adc rorl sub add das gs lods add cmp jecxz add subl int jne adc les js sbb cmp (bad) test cmp xor xor popf in sbb adc mov push sti cli xchg rcrl sbb inc (bad) sub ret add les push add and cwtl arpl lods mov add rol xchg cmpsl jge adc adc push cmp loopne lods jmp arpl xchg imul and sbb test mov push std xlat xchg (bad) fs lods das mov movsl cmp orl imul xchg push repz push mov sub mov xorb mov mov xor mov lcall lea sbb mov mov jo lret add call mov and and xchg pusha xor fs adc xchg xchg sbb jno push adc js nop sbb cwtl push pop and sub test dec xchg pusha fwait xor js pop out andl sbb pop movsl shrb in add cltd xchg adcb test add cmp add sub and or aaa xor sub cmp push xchg ficom int3 push push cli out adc jnp and mov pop test and lahf add xorl mov aaa movsb or (bad) mov addr16 xchg xor stos push inc loopne mov jp jecxz xchg scas and test cmp ret sub popa scas add cmp add adc add push sub or sbb xchg rcll adcb mov mov xor nop inc bound dec inc mov mov (bad) dec mov cmpsl ja or mov pop and ss (bad) and mov es adc pop cmp push cmp and add xchg and ret rolb sbbl mov sbb sub frstor les or adc sbb sub push push add and ljmp cltd out sahf cmpsl push adc dec push repnz pop cmp and mov ss add (bad) or ds xor rorl insb or mov in jle mov cwtl add pop push mov enter aam popa and ret xor or popa subb cmp inc sub push sbb xchg int3 dec add cld out sbb mov cmp inc ja js test into push xchg inc daa pop sub pop and les adc sbb pop lahf das test inc insl jl (bad) negl inc xchg xchg mov mov inc and nop jge aam (bad) nop (bad) lret rol sbb adc push push xchg sbb test pop pop mov mov add sub js sub movsb popa insl push jecxz mov xor mov mov xor adc xor adc mov push mov dec rcr ljmp jp or xor adc mov push mov (bad) dec lcall arpl cmc or push pop iret xor loope xor jb popa and sti sbb je xor xchg pop test or cmpsl xorw xor shrl adc and cmp sbb aaa into push call cmc inc inc mov push sub pushf jge adc out add and xor repz add mov dec clc ret adc xor mov cs or fist sbb dec xor inc popa pop pop mov sarl inc xlat pop leave push sarl aam xor je adc lret sub add rcrb jb test das mov sbb cmp xchg inc leave lea addr16 xor sub mov xor lret or ffree das mov jne fsts inc movsl or mov fs dec gs sub mov push xor test dec xchg mov call xchg cmp loope xchg cmp sbb and lds cmp jo mov js imul pop pushf jecxz xor push or xor mov insl andl inc fsts add push mov lret and mov mov shlb jp and mov xor movb sub outsl (bad) lock add push aaa sti push dec loope mov xchg push or sub lret add jp ja lods push dec or dec lret (bad) sbb add lods mov add cmp divl cmc dec cmp aam lods sub js adc test mov fwait aam or pop adc xorl mov stc sub popa and ret sub inc push cmp mov fs push add xor mov sub stos aaa push and and loopne push adc jno or sbb mov shrl sub sbb loop xor sbb xchg inc sbb aad rclb stos insl rol sub repnz adc mov xor push inc test hlt test pop push jo or or mov push nop mov in mov push std pop scas pusha add loop and and test inc mov cmp inc (bad) cmp mov jbe ds push iret xor xchg xor (bad) cmp dec in add jmp ss or ss enter insb pop sub push mov and inc jmp nop sahf jp and push (bad) pusha mov addr16 mov and add imul xor inc adc dec and std stos xchg mov jno loope cs jl push dec inc push jecxz or (bad) (bad) push add sbb js jmp add lods das ret dec lea dec lret mov sub jae loopne loop cltd lea lock iret test cmpb mov out imul push fstpl dec jp and shlb mov push jns test pushf mov out jb insb push packsswb or mov jecxz cmp adc pop imul mov jo push rorb sbb loopne in pop push push nop outsl or inc cmp adc add mov je ss mov dec sub (bad) ja add dec xor pop and addr16 adc push xchg and ljmp inc and movsl xor push das jne and add xchg cmpsl xchg xchg push repz xchg and or test cmp das or pop cmpsb (bad) dec add add and sub mov in sub cmpsb push jle in adc sub ss mov inc add add sub mov push sub mov mov mov clc inc stc cmp popa rorb lods mov nop lea lret insb or rorl subb mov xchg dec sbb cmp sahf rclb insl je adc pop adc data16 jno add push dec and mov mov ret push mov in test inc int loopne call cmpl push imul adc popa xchg xchg mov add cmp sbb xor testl mov lret lret aas std movsb xchg xor (bad) in lcall or push mov or add jno inc lods fsubs mov adc push adc pusha dec inc push lea mov dec push and jne leave xchg shll and dec sub or add and sbb test or mov xor add stos xor (bad) jmp shll (bad) sti or xchg dec adc pop test subl lcall sahf popa xchg ss popf cmp push mov push sub add adc inc pop ds and add nop xchg in xchg mov pop adc adc sbb sub jo xor in mov arpl push das (bad) xor pop fdivl insl dec rcrb inc add pop adc sbb arpl lds xchg or sub xor push sahf aam xor ret inc cli mov mov pop jl add and scas cmpsl lods add adc rolb pop sbb mov decl jge xchg jae pop call xor adcb xor jl test xchg sbb add dec fldcw (bad) or mov imul mov or mov jb invd pop dec pop dec and adc jo outsl fcomps stos add clc mov nopl pushf movsl xchg xor pop sbb push cld jnp xchg icebp orb or dec xchg jno adc rcl adc lret ret and icebp orl int3 iret mov popa xchg aaa xchg inc les mov pop and dec rolb pushf adc inc mov mov inc fcomps mov es imul xor fs ljmp pop xchg xor test sbb rcrl imul fadds add adc popf push out adc adc fstpl sub dec insb push add gs or inc mov in dec ss ljmp pop xor fcomps or adc arpl fadds add lods leave (bad) fiadd sbb pusha and jnp cmp mov add movsb ss xor xor les jecxz je mov loopne adc sbb dec lds add and nop xchg (bad) fdivs pop sbb testl jmp or sub mov inc lods inc xor or fmull or dec xor mov jg or xchg rcl pop mov or push or sbb sub inc cmp xor push or (bad) stc insb and xchg in push movsl je adc adc mov sub xchg mov into test iret lods jne enter lock test popf std xor sbb mov pusha movsl xor adc test (bad) xor mov ja mov dec jne add sbb sbb (bad) loop adc or xchg mov inc or pushf cs test add call add mov cmp inc call lret add inc lods mov dec xchg repz sahf test inc inc dec sub add adc cmp jbe xor insb and mov adc dec les or xchg shlb orl int add mov in sub insl xor mov rol das ret pusha mov dec sub xor fs push inc call test js adc lea and mov test mov or fdivrs pop dec inc iret push mov in adc inc sub arpl inc out or add add mov push and addr16 lods in mov fbstp xor addl fidivl test mov loop adc cs movsl or or call dec bound adc sarl (bad) jmp nop mov pop nop pop inc jns adc xor dec fadd push pusha test inc fstpt xor xchg cmpsb pop jmp or push adc dec les jmp sbb imul rorl addb jne xor or xchg enter iret test dec push pop jo adc std loope mov cmp inc das add jb jo adc xchg mov push test lea or addr16 pop sti aaa pusha xchg nop xchg jno repnz and imul push fs add sub xor dec sub dec adc pop mov push jb mov test adc and icebp rolb push ret ds lods xchg leave sbb or mov cmpl xor test (bad) std popa adc lret insb pop das mov or (bad) pushf sbb xchg fisubl and and das inc imul (bad) xor cs xor lea and jo mov add push out sarl (bad) cmc ret jo mov data16 loopne inc pop or mov dec rol add cmp xor out call xor ret mov daa andb jl sub cmp sub and xchg cmp mov inc enter pop aam xor push mov jl rcll adc dec test pop or (bad) mov ret jns cmpsl xchg push dec xchg lret mov adc movsl mov jl xor into xor push add subb inc add push sub mov fild or mov cmp xchg popa fcomps mov lock je loopne xor push and rorb xchg jne lret xchg ret jecxz inc pop add jno jne mov xor adc cltd inc sbb (bad) push insl xor mov ret icebp adc push xchg gs mov xor add add dec cmpsl sub mov or xor fwait inc cmp mov je pop dec and add sbb add into add rorb (bad) sarb arpl dec add loopne dec dec sbb bound xchg adc sbb add xor add movsl jns adc add test data16 sbb adc xchg dec push mov scas add into gs or shrb dec pop ljmp out dec call inc movsb loopne lahf mov int3 or nop adc add scas push popa enter inc cmp movsb sub inc sub mov add or push rcrb jp adc or cld lret add pushf pop data16 or sub push xchg xor stc cli or adc add xor fcompl lret push lea or adc dec cmp xchg mov mov and (bad) mov mov es ret test dec or ret jecxz scas dec bound arpl ds xor stos inc adc sub cmp xor push popa dec insb xchg daa add mov sub mov and lea xor sbb out movsl adc dec pop adc mov ret (bad) xor into mov xchg jno dec inc push pop popa inc add add push mov add sbb leave adc dec adc popa and add mov int3 inc push aam mov lds mov sub rolb cltd add (bad) test xor int3 ret lock xor and mov add add rcrl out xor and les lods popa and (bad) lcall dec imul out jl adcl lea pop xor fiaddl gs loopne ja add gs dec xchg sub daa sbb pusha imul push and xchg sti (bad) mov jno orl leave inc and push sbb or popf ljmp inc sub dec or leave gs ret sbb cwtl jecxz rolb push cmpsl addb and cwtl lds rcrb movsb cmpsl or test push or xor adc fs imul loope test and test subl jecxz and imul jg adc lods inc in ja rcll pop addr16 push pop stos outsb dec test pusha cs push aam xor imul mov or add inc pop jo pop adc lret mov jle or lret mov sub popa loopne cmp enter or loopne mov lret xor in js push adc mov shlb dec xor cmp dec jl xchg andl adc js lock cmp jecxz mov sub pop outsl cmpsb or xor jns daa or adcl cmp out arpl ret mov push or pop dec or xchg cli mov add (bad) es fwait or scas add repz pop gs pop add or popf fmuls lds dec pop lock sbb sti cmc adc pop sub and jo pushl popa pop imul pop xor xchg in xchg ret mov or add sub pop stc aad or movsl stc xlat pavgw or xchg mov and (bad) or add sbb in clc insb arpl call fldl sub sub movsl in xor adc push lcall pusha xchg addl inc lret dec adc push inc dec sbb add sub jo aas cmp popf repnz dec dec cli mov dec jmp xor xchg lret mov add fwait popf and or rcll adc push test and pop dec aad gs clc inc xor mov push push mov dec insb add inc sub jecxz xor sbb push push mov ljmp test popl add xchg sub ret pop mov adc mov fldl add repz dec fsubs shr sbb cwtl jnp pop sbb inc pop dec mov jg inc into cmpsb push aaa ss and dec xor or fs dec adc (bad) test fisttpl jecxz add pop or insb adc push add or lea sbb and xchg sbb mov or lds xor orl or les xchg ror xor adc shll lods push jo push adc dec popf test (bad) (bad) lods xor push mov add mov xchg aaa sbb das bound ret jb movb popa mov inc addl xor loope push push into adc leave pushf sub or sbb push pop loop mov push rorb movsl in pop xchg inc sbb push sbb int3 and sahf cmc pusha or sbb pop in lea add in inc inc subb mov jno rorl push or sub mov add mov insl or push mov ss lcall stc (bad) mov mov cmp rorl test mov mov xor adc sub fist daa movsb xor xchg push outsl and dec pop call aam bound dec sub fiadd or pop (bad) pop jl xor out ret std js mov add das mov lock shlb fbstp leave inc test and movsb push sub jge xor mov leave push mov lock xor adc push insb sbb xchg sbb cwtl inc iret dec add and xorb or nop mov mov adc xor imul push mov mov rcrb mov mov or mov insb push mov cmp push pop adc xchg cmp mov sbb fcomps das sbb or or lea enter xor sub sub mov arpl mov sub inc jmp inc push into mov adc rcl jb xor inc ljmp dec (bad) addl pop addl or in cmc rcrb cmp push xor push xor or daa and sbb or aaa daa inc cli nop (bad) mov push adc and dec pop push lcall arpl (bad) xor mov inc ljmp pushf or pop rcrb stc jp sbb mov jbe mov les mov mov fidivr stos nop test lock stos sti mov cmc shlb imul and fadd aaa sub test and rorl adc mulps cmc xor pop scas dec fs imul xor imul push ret push je,pn mov (bad) and xor fwait popf and sahf loope push mov cmp cs sahf (bad) mov sbb daa xor popa or adc xchg int3 or bound dec sbb inc mov add jecxz movsl dec cli mov xchg dec jno lods mov jo andb arpl inc add out outsb cmp push xor xor xor mov lods lret jg sub ret inc dec ss test test (bad) pop add inc imul jecxz and cltd pop mov cmp add repnz sti loop lds push jno sti xor xchg shrb push lock xchg dec lods pop fbld add lods popa push fistl dec and inc lea lock (bad) sti jns jp fimul mov inc or add mov addl lea andb inc pusha and test insb insl inc (bad) adc mov outsl cmp ja daa xor add mov inc test pop sbb sub sub lret pop sub xor xchg xchg inc andb bound jns cmp inc xor mov (bad) cmp xor or adc xchg lcall and push push jmp out les cli cvttps2pi xchg repnz push cmp cwtl test inc sub add call outsb and xchg jecxz loopne lods mov mov stos outsl (bad) rolb mov and mov aad inc and push push and xor repz mov xor add (bad) xor pop inc inc pusha jo add add cmp imull mov or adc add and mov shrb popa cmp add je adc ljmp pop adc push and pop (bad) pop push cwtl daa xor rorb and add sbb fldenv dec pop push cmp (bad) and leave adc inc jae xor orb mov rol mov ds add test and jecxz subl das movsb add pop pop test xchg cmp ret push iret addb add ret add push mov lock xor xchg cmpl lock outsb mov pop push test push sbb mov jbe popa pop cmpsb mov movsb and cld sub lock dec xorb insl pusha inc and into fcomps add loopne lret inc in (bad) popa or dec add pop inc test cmp addb adc mov and cmpb pop xchg sub test stos xchg or and xor (bad) pop xor cmp pop dec pop or (bad) xor inc jbe push test mov insl sub lds sub dec roll int3 mov popa jmp loopne push inc dec fiaddl imul setp sub add adc aaa inc xor jb xlat mov fwait add mov dec and xchg scas dec arpl push push push cmp jp js (bad) mull mov mov movsb add iret (bad) inc sbb xchg and add push mov add mov movsl dec push imul jno ret in movsb data16 ret inc loopne pop xchg xor mov lods lea rclb cmp xlat adc test sub lock cmp mov popf add xchg sbb inc insl or pop subl loop and xchg roll and imul outsl sbb lods and test loope lret push mov sbb add or popa push add sbb std and add lds sub popf iret fsts sbb loop xor inc or lods jne jmp cwtl add push (bad) mov and pop mov dec pop lret xlat or incb add cmp xor cmp xchg mov adcb inc xchg andb dec adcl and aas lods clc loopne test add sub add sti inc loope cmpsl cmpsl pop hlt lret and sub leave mov ror sar pop mov add (bad) pop (bad) stos addb push loope lock adc leave (bad) xor rorb sub loope push cmpsl cmp rcrl in add fs insb cwtl test cmp rol xchg lods dec inc mov sysexit hlt rorb sub dec and ret addr16 xchg ret repz adc jo mov lods mov and mov sbb cmpsb cmc or sbb pop das lock push scas xor or mov (bad) movsb xor mov dec lea add insb jge or mov dec lods jnp lcall mov imul push in dec fldenv sub inc pusha add and dec xor push lds or shlb pusha insl jnp inc xor js xor add lock outsb push outsl pusha outsl mov fdivrp xor push nop mov mov fist andb or and les lds mov lods dec adc pop (bad) repz adcl loope xorb pop adc aad xor adc inc adc mov addl push rol fld int3 call cmp mov dec xchg in and test lods jo push pop ja cmp lods mov mov sub cmp or mov popa push mov scas push test add subl mov cwtl xchg mov mov mov sbb js cmpsl sub cmp push mov push nop call pop mov clc push sub sbb popa jns notl inc add sub add push pop and mov stos lods add sti fiadd pop or cmp xchg cmp mov sub sbb aas push sub add dec jno addl or inc sub jecxz sbb push adc push cltd cmp add xorl or jae pusha push push mov inc pop jbe adc xor push int3 add cltd push mov xor fisttpl mov pusha jbe cmp inc lea inc fcomps addl and jne and dec xchg add divl push les dec addb dec or test jns or adc out js imulb add popf push adc mov add pop adc loopne add and int jb rclb sbb push jle cmp call add xor ret mov xchg lods jne xchg mov adc mov adc push xor ljmp xor or aad and scas jmp dec mov inc jecxz outsl inc ret adc dec arpl movb test inc or sbb push sub or pop out jo inc daa mov ss sbb out xor mov jp xchg cs cmp call mov add adc mov sbb adc nop xchg int3 xchg test (bad) mov inc push add jecxz jo inc xor add dec cmp or (bad) xor mov stc popf icebp inc add das sbb iret and ficomp adc inc xchg cmpsl cmp and push je add insb (bad) or push insl cmp outsl dec (bad) sub pop and call test dec aam pop andb and mov (bad) xchg leave dec (bad) push lock push pop sbb xchg addr16 in arpl xor adc mov cmp or dec fistpll dec xor les pop sbbl push inc rclb xorl xchg js jmp or je dec sarl sbb mov pusha mov cwtl fldl pushf inc push jns cmc fsubrl push and add adc push xchg cli mov push xlat ja (bad) nop add cwtl and adc sar add leave and daa and or sub push mov test movsb sbb mov fcoms scas int3 sbb add and cmp pop jne xchg test lret lea dec mov or test test add or das adc test push cmp pop mov push (bad) lods pushf or mov inc add ret or fwait sub add add cmp sub (bad) insl (bad) das sbb js adc pop xchg and mov sub inc sbb cmp or jp lods rolb dec fld adc mov push mov xor add lods xor hlt mov mov rcrb pushf xor stc movb ret add movsb pop xchg xchg xor stos add fsubrs push adc jb je adc in aaa fs xor fsubrs and mov pusha popa xchg cmp mov lods insb and and dec loop popa adc add xchg js xor adc pop rclb scas xchg mov sub dec xchg pop inc popa rclb arpl je dec daa inc js and adc in sti add xchg xor or xchg (bad) inc jbe fiaddl (bad) mov movsb fnstenv sub sbb repnz arpl repnz dec pop inc repz jne cmp and xor push (bad) nop lea sti xor cmpsb movb mov or jmp push adc rcrb (bad) lret adcl aaa out pusha xchg adc stc or mov inc xchg and pop lcall or or jnp adc jle lock mov aad inc inc data16 dec inc cmpsl insl shl xchg pusha sbb push loope lret leave test movsb pop push jmp cli (bad) pop or or (bad) and in jne stos adc push mov gs aam add push dec movsl or add aaa outsl test ficom inc push cmc cpuid test rep dec es add nop adc inc sub xlat xchg loope sub mov mov or or movsb mov mov js rolb lods or sub jb sub insb sbb inc mov or loope push rcrb adc popf es mov fdiv outsl stos mov mov xor insl loop xor lret or xor aam or xor sbb aas popa or xlat cmp mov fisubrl push stos adcl fs or cwtl or or pop inc ret or pop (bad) add bnd mov inc imul rclb pop xchg and js (bad) push or add sub lock dec pop and inc mov aaa popa mov xor sub rolb mov ja xchg js (bad) mov (bad) cmp ficom fidiv adc add sbb and mov xor ja test add into test pop sahf mov or xchg stos loope xchg xchg mov sbb mov sub push and popa pop fwait js add and mov rol fisttpll nop aaa sub daa ficoml lahf xor ss ja cmp int3 push inc lea jecxz movl test pop jp xor add xchg and gs sub pop insl xor out xchg nop adc (bad) imul lret dec adc or mov dec lock add and shrl or or adc stos xor inc les push mov push xorl sarl in and dec scas sbb xchg and or into (bad) call mov adc pusha cld sbb or mov test mov xor test shll mov xchg push and icebp xchg int add pop movsl fnop push (bad) or add adc inc mov hlt xorl pop cmp mov je xor subl ret mov push icebp inc inc mov or xchg cmpsl movsl rcll gs adc push icebp outsl xor or rorl pop mov stos andl loop adc push or scas add pop nop jge and push cmp imull mov fadds xchg inc fdecstp ret push ss add add fsubs adc clc mov cmpsb or adc test lods mov jmp push pop mov pusha push inc test iret js es and mov imul xor add adcl push aad xchg dec (bad) mov shlb add lahf cmp adc or cmp test mov lods mov pop push mov xor adc sbb xchg inc xor mov js,pt and jl ss push cwtl imul mov push and js inc cmp fbstp add push add mov mov (bad) sub mov ret sbb jmp addl mov fnstsw lock repnz (bad) cmp cmpl xchg jecxz test and ret sub jo push stos add imul xchg add lods popa int3 rdmsr mov nop push mov dec adc pop movsb cs jo cmpsl test sbb mov icebp ss ret inc sbb or cmp push and mov lret xor dec rolb sbbb jg outsb cmp ss push xchg mov push addl subl pusha sbb xor shrl xchg jl fnop mov add (bad) mov inc fist lock pop cmp or fmulp xor or mov xor test mov pop lcall rorb ret fsubr push sub xchg add or sbb push and xchg add addps push xchg pop arpl fs mov and aaa add sarl push add dec cltd add cmc (bad) and mov xchg and cmp inc test push push rcl adc out dec inc mov pusha add lret js xor loope push mov pop adc int cmp dec push mov jne sub daa enter cmp push jmp add push mov or xor ss ds adcb lret inc dec outsl inc mov orl popf hlt or add dec test xor shll add push pop jbe add lods sub mov adc loopne sub mov rolb jne sub rcrl sub dec fwait mov xchg add fdivrs fcomp xor and xor add xor iret (bad) pop test mov lock js dec dec push sub (bad) adc jecxz lods and loope adc adc and pop mov sbb inc lods sub sub adcb and popa jne xor mov gs loopne pusha or pop pop stc xchg gs movsb sub push sahf dec inc inc push test popf je mov xor shlb add add aad icebp into sbb sarb sub add sbb xor mov push xor push sbb adc popa cmp int xchg and dec dec or cmp subb xchg adc dec out leave dec adc add sbb test movsb xchg inc pop push mov adc xor jae mov lea push and addr16 mov adc mov test ss mov (bad) out xor push xchg div nop test outsl add cltd js ficoml loopne mov sub (bad) xor addr16 rclb xchg arpl dec int xchg inc ret xlat enter jnp xchg cmpl test xor dec adc (bad) scas (bad) cmp push lcall adc push cmp add push sbb rolb pop jno ret dec xor (bad) mov inc pusha icebp in adc lcall cmpsl xchg xor loope sti scas push adc pusha lret push cmp dec and or or inc push push test add inc aam sub push jne sub mov into sub enter nop mov inc fbld gs xchg (bad) xchg popa stos sub mov add push mov les inc sbb sub xor push rolb in out xchg fstps or mov mov dec sarl inc (bad) scas xor test cmp movsb mov repnz mov dec mov shll or inc rolb xchg out xor arpl call xor addr16 jnp xchg mov add sub push mov sahf adc and jae push mov push sbb and dec insb or xchg fidivr cmp js fadds popa jne xchg rorb out xor mov mov push sbbb or pop outsl ds xor outsl xor and adcb pop (bad) dec push ret gs adc inc rcrb fldl dec test mov dec rol lret inc and call or add clc mov jno xor xor iret mov mov inc or das les sub rorb aaa push push mov ja mov add addr16 push cmc shrb inc lods mov and pusha sub adc or sar xchg xchg popa jno fadd inc and add cmpsb mov jmp and mov gs sub std push call cltd clc mov and xor jmp jecxz adc fcmovb sbb and sbb cltd out into data16 xor sub xor inc inc or sub loop adc add sub sbb jbe call addb pop pop ret inc (bad) mov das mov loope inc mov add inc lock mov inc andl pop push dec and in rol js ret bound xlat data16 aaa hlt aam jl xor enter out aad lods and clc add int3 rolb std and xchg lea loope xchg sub scas xor test and xchg adc aaa popf add xor adc inc xor les test add lock sbb push pop add add xor out dec adc movsl and or test or jmp lods xor ret xor jmp pop push xchg xchg adc add addr16 int3 adc int3 addb rcr sub dec pusha pop pusha imul push xor scas das xor xchg sub mov xor push cmp dec leave jne mov adc dec pop in sti in mov pop sbb xor sti pop test xor push add iret les add rcl idivl add mov mov lock pusha mov jp xchg in lret cmp stos mov xor mov inc xor test (bad) cli test sbb into xchg mov leave dec mov xor mov insl test (bad) pop lahf and xchg ret xor cmpsl je xlat adcl pushf pusha rcll xchg gs sbb dec daa dec mov mov mov cmp and movsl xor inc and add add loope mov scas mov outsl xchg int int3 push pop add cmp nop xchg lods movsl mov cmp sbb dec aam movsl and push or inc (bad) adc and sbbl and xor xor inc pop mov adc jns xor mov adc push (bad) jo mov mov lea and mov and rorb daa (bad) popa fs and mov lea fs loope rol or movsb add or ror mov mov loop test rorb scas or aaa pusha fsubs pop stos push add push push test dec imul xor add movsl pop mov push stc mov scas fwait adc or mov jl sbb sbb shr popf adc andb arpl ds adc sub out or push icebp imul add int sbb and and rcrb sub sbb mov mov lds sbb push and fs pushw sbb mov xor test cmp dec xor daa add mov mov arpl sbb test push adc inc adc (bad) pop xchg iret dec push popa sahf ljmp je pop pop cmp mov pop fistpl js test sub inc daa jo and (bad) adc jge (bad) jmp inc xor rolb shrl xchg hlt adc test add and dec lret jge adc pop inc dec (bad) sbb cmp add lret mov clc xor cmpsb andb add push aaa add cmp lret inc mov sub pushl inc lea mov mov xchg or push sub add leave sbb or adcl or lods popf add clc adc sub test icebp nop jbe sbb jmp subb pop add or icebp arpl push sub hlt push sbb jmp jae movsb sbb fldt test daa loope sub dec dec inc cmp inc dec cmp xchg add out cmp add xor adc cmp cmp test sub dec inc adc xor xchg bound sbb dec popl cmp iret mov sti jo dec adc dec sbb orl inc orl jge ret sbb (bad) sbb popf in test push cmp add lcall pop inc pop xchg cmp adc stc and adc sub adc pop pop pop pop andl sub xlat push or xchg jne adc (bad) or test push add fnsave adcl repz adc dec sub scas arpl flds adc bound lret out dec rcr dec fwait movsl jo xchg les sbb mov aam add cli sub add xor (bad) sub (bad) and mov sub xor jmp add sub or add xchg dec lcall fildl add inc pop xlat pop rolb mov mov add mov xchg add cmp js lods aaa movsb lcall xor or mov ret add in pusha sbb mov shrb push lock sub xor add add and test insl xchg push repnz inc adc and push (bad) adc jmp lret jmp cmc ret cmp add inc fisttp or sbb sub mov push push xchg adc loopne adc into (bad) sbb xchg nop cmpsb ficom jge add add (bad) jns pop push sbb cmp js popa and scas (bad) mov or add inc mov mov xor (bad) and and or and mov add add xor jne jns xorb jo or mov sub mov push push popf pusha sub inc sbb or (bad) mov or call and andb stc dec lcall xchg adcb mov jo mov pop sbb add fldl add and lret add pop mov jbe or pop rclb mov hlt xor sub pusha stos scas imul pushf in push sub add jge cld push addb outsl mov roll and loope sub mov push cltd cltd jbe inc sbb movsl fwait jp and mov dec imul push movsl inc shlb fistpll mov fs aaa sub test shrl xchg jp dec pushf mov insl shrb sbb xchg sub sub push pop add enter xchg xor repnz test int3 sub sbb dec rcrb aaa add ljmp (bad) in or add push jo inc add pop add dec aaa ret cmp dec inc mov mov cwtl into sahf mov adc aas mov loope arpl popa outsl jo inc pop adc sub mov or xor mov mov push xchg inc clc cmpsb mov mov fmul and or inc jmp mov sbb mov push or jae sbb xor (bad) andb xchg xor mov cmp pop (bad) stos and add sbb and aaa sub push add cmp mov sbb lea imul add pop inc ss je or adc inc mov push (bad) push enter inc mov xchg popa imul sahf pusha mov inc jle or and rol inc jb test popa lods (bad) std adc inc in inc dec fiaddl cmp adc stos dec sub mov xchg subl inc cmp push sub adc xor jae pop mov sti mov subb adc inc jge adc popa das loope sub sbb pop test push test xor jg mov xor push mov xchg cmp add xchg icebp inc aas add jp dec cmp lahf dec bound mov sbb pop add jmp movsb gs into push mov dec test mov cwtl pop addr16 mov dec dec xor loope sbb mov pop adc mov (bad) or pop xor dec inc push stos das mov dec sbb rolb adc ljmp cmpsb add test adcl adc mov fcmovnbe mov mov roll fist fwait xchg mov sarl pop mov cmp dec sbb ss and mov aas push pop fidiv push pop jmp cmp les pop cmp int3 cmp and sbb xlat (bad) push insl fistp rcrl pusha cwtl add imul add add subl push push inc push xor add and mov or mov (bad) aaa loop ss mov mov sub xchg sbb (bad) xor fcomip cmp fadds lea mov mov adc movsl mov jge icebp push nop lods frndint icebp xor mov icebp lret fcomp js mov fildl push or movsb ret aas mov pop mov fwait movsl sub cs jb pusha pop mov insl add stos test mov rol js dec pop cltd or sbb mov pop cmp out dec pop adc les nop les cmp mov inc les outsl movsl sahf push test xor lret adc inc sbb test pop cmp mov test push jg and (bad) push adc inc xor adc adc arpl mov loop jnp stos mov stos scas cmp popa jno mov lods and (bad) or dec xor fwait sarb pop mov xchg xchg fmulp and (bad) test sbb cmpsb or repz sbb dec pop pop fimull adc and fadds mov ds cmp mov pop in or nop andl xorl dec push adc imul dec imul aas lock sbb inc xchg sub xchg and mov sbb cmp mulb jo jne (bad) adc fwait xor test pop arpl lcall dec stc shl dec ljmp add adc cwtl and sub push xor pop fwait (bad) lock adc adc icebp loope and sbb inc loopne inc mov sub aaa add sbb push rcrb aad push and pop or (bad) jmp dec pop add lcall loope aaa and adc mov js test aaa and (bad) imul adcb xor and sub ret mov mov sbb insb insb sbb (bad) dec sbb push aad shll inc adc add dec imul mov sahf daa sub test (bad) jo flds dec sbb fwait mov xchg rclb xchg push movsl imul pop dec in dec shr and or pop cmp xchg adc mov test cmp add aaa sub je and scas xchg cmp push dec leave leave lock sbbl xor xchg and and xchg ja addb cmp wbinvd xor std dec mov lods mov (bad) push adc sahf pop bound les rorb xchg aam mov xor decl lds add adc lods xor inc push and add scas pop ss push sbb dec mov dec and std add ss xchg or push xor mov pop pop mov xor adc pop fisub inc or push push pop cwtl lods les (bad) mov pusha add sbb add add mov mov repz inc sti js mov mov xchg dec jns adc or cs movsb test or inc dec test push mov push add cmp ficompl push fcmovbe mov (bad) sbb xor bswap xchg imul pop cmpl ret cmp or (bad) loopne push jnp add xchg mov je sbb jle xor cmpsl xchg mov dec inc leave lods push and imul ret cwtl loopne xchg aaa jl xchg xchg and adc add dec jp pusha xor and sbb pop cmpl pop adc cmp add dec jns jp in xor loop dec pop adc roll inc mov xor dec sub sub aad fwait ret sbb lock test sbb xlat cmp dec cmpl lods aas add flds popf lds push es andb mov or cltd scas fiaddl adc add jns push xlat out add or inc lds mov dec xor leave aaa pusha das cmp shll (bad) cmpsb add nop hlt dec inc mov movsb outsb int test clc lea movsb lea cmpsl loopne add adc or inc xchg adc (bad) shlb insl add xor dec cmp and inc mov jo,pn mov (bad) mov add mov and pop das gs and and pop ret pop pop ret aaa push inc push xchg xor push mov sub outsl push add sbb pop jecxz or jmp push mov sbbb pop push pop inc dec (bad) sub inc fldenv and pop xor mov stc fdivl ja pop xchg inc iret mov inc inc repnz loop lods adc xorl cmpl pop dec adc loope pop movb adc enter and rol xchg xchg dec dec xor push dec add add lods adc fwait clc cmp pop push mov shrl fidivl cmp in sub or loope and ret (bad) adc xchg mull sub aaa or pop pop fstpt push push inc dec stos or fwait sub add xchg stc xor add xor mov inc pop add pusha popa jecxz das int push adc outsb push jo shlb bound xchg dec push inc dec jne and xor ret scas xor or mov cmp inc test icebp xchg cltd inc push pusha mov loopne or sbbb mov jne pusha jno sub and daa rcr sub fwait xor and jo mov add rorl xor lcall (bad) shlb shll (bad) js add rclb dec or mov dec add and mov sahf and push xchg test or lds lahf rorb push arpl inc mov adc pop andl adc push imul inc push stos xchg xor or aam aas mov rclb cwtl and add mov (bad) aaa int3 sbb or mov pusha loope pop add inc sbb lods xchg les or xchg and fcmovbe cmp (bad) fcmovbe nop pop dec lea jl sub inc sbb (bad) sub pop xor lret test push arpl pop sbb push cmp adc lds or push cwtl dec add jbe xor (bad) lea or or inc ss ret adc ja imul xor adc mov sbb xor cmp add and lret cmpb sub mov cs jne aad into adcl dec or leave les andb jmp cmp shrl imul and xchg add pop ss nop fwait push inc iret add dec xor push iret nop xchg sbb push cmpb xor xor aaa pop out fwait sbb loope cmpl mov lahf pushf loopne loopne xor dec addb gs sub jns mov push xor lcall adc test scas mov mov add add mov pop aam cmp fs add xor fnsave rolb or cmp push movsl sub pop mov in pusha push shlb roll cmp cmp or ja adc test ret movsl and cmpsl xor (bad) aam mov inc rcl or and inc cmp push or pusha imul inc push scas sub je gs (bad) adc sub add mov imul popa sub outsb jg add ja test add or (bad) cmp sub ss inc or inc xor and rclb inc adc push addl imul (bad) xor add mov jns mov scas cmp insb adc cmp add subl lods mov mov sub loop movsb push xchg fninit cmpsb push push cmp xor and and (bad) add ret xor fcomi (bad) pop and cs add sbb in jecxz pop cmp push (bad) xchg xchg les and ljmp aam sub xchg dec rep xor jne xor jge adc xchg daa stc or and fstl lret (bad) mov or mov lods dec lods mov push xchg xor lods fs adc adc mov or jl fcmovnb add jae cmp lods xorl fcmovnbe pop pop arpl in dec adc clc imul ljmp adc lea das pop shll das sbb lods pop pop int3 cmp add and ret rolb xchg cmp xor imul js cmpsl lock repz jge and add enter lods inc test loop adc adc or xor movsb add push pushf pusha push lock mov add ret test or and wbinvd cmp inc js inc lret jp mov test or out dec ret inc dec cmp inc push or cmp pusha jbe xchg (bad) jp test out movsl adc mov mov movsb add xor dec add and adc push jecxz xor fwait mov or xchg ficomp xchg (bad) (bad) mov xchg mov dec and in ret mov xor and jae pop daa loop xchg xor inc rcll faddl push aaa pop lock ss aaa pop rclb lea add and dec add fs pop sti dec mov rol mov push dec bound xchg mov and mov xchg dec rolb and pop dec pop nop jno fdivl lods les imul mov and mov xor dec add orb outsl dec mov rol ss mov pop dec sbb movsb rcl xchg sub mov or jae pop cwtl (bad) mov inc les pusha into pop stos add pop cmp add out xor into inc mov or addb movb xchg hlt mov sbb jmp mov gs xor inc and sbb popa push repz cmc or icebp mov cmp ja movsb dec add ds (bad) sbb shlb and push sub adc test lcall pcmpeqb cmp bound sub jp mov pop addr16 push lcall jmp sub or sbb sbb jb add and push sbb imul dec add fucomi loopne cltd cmp mov or cltd mov lods lds or jmp rcrl sub xor dec xor and and add std jnp outsl pop gs fsubrs dec test ret nop imul or inc sbb sub xor mov sbb sti gs (bad) sbb arpl push fs ficomp lods ja and arpl rclb sbb push push call cmc imul mov shrl out sub lea pushf xor int je lcall and fcmovu cmpl inc mov cmp dec js mov mov mov dec sbb cmp jmp adc nop inc xor bound (bad) xor mov sbb ret mov rclb jge jo push outsl cmp test pop gs inc mov or sub xor in or mov (bad) xchg cmpsl pusha dec in fdivrs add arpl je xor test inc xor addr16 dec sbb xor mov dec sbb and fnop and sub xlat imul xor sbb out cmc xor xchg push push insb pop arpl xchg push or jo in in sub std sbb mov leave mov mov fsubrs out and cmp (bad) aad leave sahf inc fldt adcl clc add lret jo add xorl xchg aaa push shlb sub lret push and test mov push xchg or (bad) lret adcb pop or or pop mov (bad) ficoml lcall pop add adc xor cmp inc xor xor pop sete or aas fbld addb inc sub add cmpsl xor add lea outsl adc push leave bound xor pop pop and sbb and aas cltd and dec or cmpsl cmp js xor mov dec or lea lock adc cmp add cmp push and sub movsb ret icebp addl (bad) and pop popa shrb sub div or xchg hlt dec pop xlat push mov pop (bad) icebp loopne sub sub leave aam adcb jbe xor mov pop and or dec xchg xor and pop sbb xor xor incl inc enter mov scas add mov xor jg or rcrl push cmp dec inc mov cmp adc push sub fistpl cmp xor inc add cmp xchg push inc roll or and mov insb mov cmpsl push dec sbb sbb pusha call ret sbb xor out movsl xor in lea lods enter push push add lret jge ja inc or xor addb mov push or mov inc xchg xor fwait pop fbstp xor adc xchg test scas ficompl sbb rorb sub pop mov push pop aas arpl cs push mov in pop les cmp and mov and mov or xor add repz sub mov xor (bad) push push es les mov mov (bad) inc mov add xchg push sub rolb pop or icebp or les jb adc xchg rcrb dec daa std inc xor dec add test dec daa mov sub and lahf xorl ja mov add sti insb loope mov xor push idivb enter dec inc mov aaa (bad) jg lock xor pop adc ja sub add xchg data16 cmp loop or push (bad) sbb dec loope xchg iret pop jp shl dec xor adc xchg xchg mov push scas and pop insl rcll jo push xor add push test push popa adc daa test mov jno adc cmp mov or test inc dec pop fcomps xor push or push add xchg lahf push and iret mov mov pusha (bad) mov roll ret sub rcrl xor xor adc sti jp and pop add fadds test lods shlb and pop push out rolb (bad) roll and dec cmpsb shr fwait xchg mov ret cmp and and lret cmp je add xor dec xor sub xchg ljmp (bad) ss cmp je arpl popa and jne dec pushf adc std xor jp and pop pop xor pop adc pusha nop sbb aaa add or loopne mov test ss divl mov (bad) or lods xchg sbb mov cmpb adc lods mov dec cmp lcall inc int mov xchg cwtl cmp xor xor subb test loop out add adc cmp jo or fidivrl adc out push pop dec mov jmp xchg or xchg adc inc nop xchg xor ret loopne sub xor lret xor pop dec xor std xor jne jae jp mov adc test ret gs xor loopne mov inc arpl push out push ret cmp aad push dec xchg lock (bad) jecxz movb xor mov aad or mov pop push pop push imul xchg into pop xchg xor je daa popa movsl add loop adc cmp lods ss push sub xor or adc add rolb push rcl outsl aaa cmp adc mov loope or nop add jmp inc or mov daa dec mov stos xchg jmp je add bound arpl push adc arpl ret xchg fsts iret test lahf sub add xchg xchg add push xchg in mov rorb andb and push push mov xor add mov sbb xchg add sbb cmp xor xor les dec scas data16 adc shrb and push inc cmpsl add add xor push xchg push sub add iret xchg mov mov sbb test (bad) jle and xor mov lods sub lds pop xor dec or jecxz xchg mov inc add xor pop xor push push and pop stos pusha rcrl mov push pop adc bound and rcrb xchg pushf inc cmp xchg rclb ja push add ret xor xor mov push xchg or mov cmp and cli xchg lods inc sbb loopne inc mov sub enter cmp xor xchg rcrb or cmp mov inc xor dec adc loopne sub icebp movsb (bad) dec pusha test mov jo add xor mov add sub or (bad) adc mov and jmp or push cmpsl lds (bad) and and sub add aad dec ss push rcrl jbe outsb rol enter pop xchg mov or dec cltd ss mov xchg mov rcl stc rorb lds (bad) xchg popa lods pop xchg dec ss add orl lds mov lods test mov sbb popa insb (bad) sti (bad) nop add mov and inc sti xchg es add sbb lods adc dec xchg js movsl dec and arpl pop inc add jb (bad) push or lock jp (bad) adc pop push push sbb push sbb bound add jnp setl cmp jl push jne dec rorb and pusha mov dec sub or mov repz fadds inc adc and push xor xor mov adc mov dec pusha sub mov test insb sub inc push rcrl stos dec ret ficom imul pusha pop call and push fimul inc sahf inc loop je mov pop shlb es dec add cli inc cltd scas nop push xor pusha sub xor push adc sbb cmp xchg test outsl adc bound xchg jp adc mov and mov roll mov inc call aad jo sub push (bad) jecxz popa push das jae xor lods dec xor cltd mov test and add cmpsl popa mov sbb add sbb mov sarb jmp lock mov fldt addb ret push mov dec pusha xor push mov sub inc sbb mov cmpl movsl movsb arpl cmp and js test iret pop mov push adc popl pusha jcxz insb cmpsb popf mov fs push sbb dec cmpsl incl mov push inc in jl mov pop in jge xor mov push inc dec xchg push sahf and xor pop lds xchg push repnz or push mov jo push (bad) mov nop lods push (bad) add add add insb xchg xor lock push nop cmp add addl pop sbb xchg xchg mov inc pop adc (bad) mov dec and push cmp adc pop mov ficom mov cmp js inc pop add es push ss xor lods lds nop push jl test in pop xchg add pop inc sub adc dec dec imul xchg xchg push jp lea pusha sub push sar insl arpl sbb lret xor push xorb xchg mov sbb xor inc (bad) sar sarl pop inc push push add inc add shlb fs add push jl addr16 pop fwait add leave add mov or pusha dec js xlat addb lods das mov insb dec test mov inc pop add add fs cltd add adc mov or jne xchg xor movsl pop sbb inc js ja dec inc mov add lock sbb cmp pop (bad) test push push pushf adc mov push loopne loop add add and in lds mov sbb (bad) xor popa inc lock xchg jnp inc push xor mov adc adc movsb sbb out xor in pusha popf test push fbstp nop mov mov sub add add rolb adc fsubl cmp aaa lds or enter rorb lahf jle xor sbb fisttpll jl ljmp xchg add inc and jo fsts sbb in dec and mov iret into jp dec (bad) ss inc fcoms dec dec mov adc mov jp inc xchg pop xchg adc stos ds pop leave pop xor xor sub add xchg cld and sub mov ss add cmp ficompl sub lcall jp adcb dec xchg pop cmp test xor xchg push and inc lods dec es or dec or mov dec mov int push inc or loope xchg (bad) mov push push lahf or rcrb sub add xor and js mov sub mov pusha dec dec push and jecxz inc sbb or jb jno mov sub loope dec xor cmp mov sbb add push jle dec sbb mov add lea add out imul addb lahf inc xor inc aaa pop sbb xor xchg fs loopne mov sub adc js data16 mov mov iret pop and or inc sub lret jno,pn add dec leave push inc mov xor adc sub inc and add and je and sarb xchg insl call in cld inc pusha or mov xor (bad) push xchg rclb jp call cmc inc xchg xchg loope mov dec pushf gs jl mov and inc out dec add push push sub aad ret test (bad) movq dec inc adc imul push pop popf xchg push xor push push mov inc mov xor xchg mov xchg (bad) xor push push sub cmp pusha or or sub jl rcrl mov sbb jmp add adc or mov adc pop test pop adc mov movsb jne pop loop rcrb es and addr16 and arpl and imul sbb or mov mov pop push or addl add xchg mov (bad) push daa in test fs jle cmc dec mov push jne (bad) pop mov xchg xchg mov inc cmp adcl clc add addb push sub mov repnz inc shl dec sbb outsb xor ret sub shr dec adc mov in pop jno call popa adc loopne imul adc cmpsb aam lock xchg imul sub adc adc pop dec sub test (bad) gs inc das ficom shlb pop xchg adc jle xor nop push insb inc jmp imul lea fldt je ss push or or sbb inc mov sbb hlt add mov ret xor mov adc add and test mov dec sysenter dec inc test inc fldl test pop ss cmp pop movsb adc aas add dec sbb cmp rorb std or xchg jo or cmp add add cmp movsb pop fwait mov add mov fdivrs mov xchg sub xor inc test inc xchg pop nop subl push or sub dec pop adc loop fldt inc push adc jns imul aaa das popf test pop fcoml in push andb jae add sbb mov dec mov and test mov inc les xchg icebp subl mov pop adc daa xlat add and sub das sbb stos add adc or enter cmp (bad) fildll je ljmp dec pop xor mov inc inc xor jne xor inc sbb jb xchg inc xchg mov orl push fwait cmp add lods fnstenv adc lods inc fisubrl pop pop hlt (bad) fidivl adc cwtl and xor pop stc test shlb and and (bad) mov lods mov jge add add loope popa dec pusha aad sbb popl dec cli and mov daa inc (bad) add sub das ds imul sbb jg xchg jo data16 adc cmp inc popl iret cmpsb xchg sub jmp add int3 ss lods inc cmc addl adc sub jmp in loope arpl adc adc and adc rorb inc mov mov push dec mov test sub ljmp mov negb push adc sbb (bad) and mov mov lcall outsb stos sbb or lret sub push sti and add pop and push cmp jl add mov xchg cmp roll icebp inc sbb imul pop sbb push xchg cmp bound xchg fwait addr16 out dec pushf insl shl xchg and jo add bound inc jg pusha dec lret rcrl (bad) out xor mov lea in inc jmp cmp mov push dec and cmp dec andl add adc movsb or pop out rolb mov mov mov xchg mov in jl rorb mov addb es inc ss push add pop shrb and sub and inc cmpsl jge adc inc icebp (bad) nop or mov xor popa adc mov lea xchg push sub and fsubrs xor push adc (bad) adc mov or inc ficompl xor xor push xor pusha adcl pop xor mov sbb pop aam add or (bad) orl rcll xchg pop adc jno cmpsl dec sub adc bound lret pop pop (bad) rcll xor test jb ret and movsb add inc adc adc xchg pop sbb shrl mov adc mov xchg sub or std or movsb adc ror pop mov add inc lea mov jnp cmp mov movb cmp mov mov pop jge aaa mov jmp or cwtl sub stos divl sbb adc xchg or imul xor and jp and iret mov mov test push das sub cmp insb or inc jmp mov push imul mov adc pop aas nop and add flds es or jnp ret ret push cmp jnp or stos movsb inc cwtl xor mov adc mov adc pusha add les repz pop xlat and sub xor xor push add add or mov jno in cmpl pop and xor pop outsl lea inc aad insb or sbb divl movsb and nop push mov push pop ret insb adc mov and mov adcb pop inc in xchg and pop out jmp mov jb lods lds popa ret inc fcom xor xor outsl roll sub orb pop pop test mov push mov adc movsl outsb jae mov mov popa sbb pop cmp popa add mov lods add movsb adc (bad) lock addl lods dec push ret adc xorl mov or cmc addl rclb inc loopne lods clc jo sbb inc xor push rorb mov xor pop xchg mov sbb inc rorb jo pop lret shlb jno add addr16 pop mov mov rcrl loope (bad) adc or test bt push shlb inc cwtl and pop flds sti mov fadd cld push sub insb lock cmp sub inc adc imull sbb in loope jge mov adc xchg sbb xchg es push or mov fadds add popa arpl cltd and scas inc mov mov add add add arpl jle xchg xchg or xchg adc dec in and xchg pop mov int3 add rolb outsl lods test bound adc aaa push xchg (bad) insb or shrl adc pop add pusha lods icebp sub xchg xor ss sub sub lahf inc and inc xor js add jmp sub pop sbb push inc and mov push xor xorl inc inc pop sbbl sbb dec andb insl cmp ror push fwait and fwait mov mov push push xor mov add push xor adc ss test gs pop orl mov fsts hlt add rorb pop mov nop mov inc adc popa sub push sbb mov pop xor push cmp dec sub and jne xor cmp jbe inc into jb rorl dec push mov add push mov add mov xchg insb repz and lret stos loope sub mov sarb xchg sub imul sub dec cmp enter sbb cmp and xor mov out mov clc mov sub or rcl jae,pt adc and jg lock inc add cmp adc add cmp mov mov hlt in jl les fsts dec and xor or add rclb movsb adc gs orl push test and push pop push and pop push icebp in ret sbb test test jno inc xchg cmp jg jo lret push xchg outsb dec xchg cwtl daa lods test xchg ljmp ss int push xorb sub xor xorl pushf inc ret xor xor xor sarb pusha gs cli add sub and adc lea mov jl dec lea dec dec lret cmpsl in mov dec stos adc pop test mov arpl sub aaa lods sbb adc xchg mov lret xor ret lea adc adc mov mov or cltd adc lds mov inc cmp jo lret fist dec pop inc negl inc sbb mov add test and subb scas xchg pusha adc sbb popa and adc lret add or or imul test pop cmp dec lret mov mov sub push jo and and ret xor add push lea nop gs sub (bad) arpl or stos int3 imul jo int3 xlat sub xor add lret stos imul or mov mov scas mov push mov xor (bad) int add xchg sbb bound out js or pusha pop push nop in and jg xor xor sbb xor mov dec inc (bad) add mov test adc pop mov in or mov sbb test pusha add add mov test sbb adc pop mov push sub xor cmc pop cmp push xchg xchg push xor aaa sbb pop pop pop repz xchg push daa je pop lret dec push push or insl and fist mov sub sbb xor inc sbb add sub aam pusha or jno xor or mov (bad) bound stos xchg ficoml add loopne add sbb and mov mov enter arpl xchg sbb dec lds inc mov jns cltd and cmp xor leave sbb and cmp push mov and dec adc pop and lods (bad) mov or pusha inc cmp push aam sub lds fwait mov push jno push adc dec xchg mov insl adc and sahf xor and jmp les sub pusha andl dec (bad) sub pop xor pop sbb data16 xor cmpb or lret push loope jno pop cmpsb nop push daa movb (bad) cmpsb mov and in cmp mov xor popa daa jne in popa pop icebp push push or adc xchg sbb les dec lock out push adc xor xor shl mov mov (bad) xchg or xor push dec fnsave lods xlat mov iret sahf jns dec xchg ret inc mov aad mov add ror push mov mov pushl (bad) pop inc sbb pop sub xor add xor cmp xchg and in xor xchg or push inc or xor (bad) and bound lahf test dec ret inc sub mov mov add xor xchg add jbe pusha call aam shr adc sbb mov sbb jge xchg dec pop add add mov inc shrl fmul push insb sbb xchg rolb xor inc test push in adc xchg add daa test inc mov movnti pop gs (bad) push cltd (bad) xchg dec rcr jo add outsl imul test and pop xor dec xor xchg or pop sbb popa and loop push push aam pop cmp inc repz xor pop push xchg enter mov pop notb test sub or add outsl cmpsb fiaddl repz cmp iret xor sbb ret (bad) mov lock setle stos sysenter lock lea sub dec mov push inc dec or push std push pusha sbb paddw mov jmp rclb sub xchg jb es mov mov imul jae (bad) add aaa fcmovnbe xorb pusha push push movl or xchg sbb adc js aaa xor xorl pop dec sbb inc sbb mov stos (bad) clc and xchg jbe test das xor adc lds mov inc rcrl pop sub mov inc xchg lcall xor xor or icebp or push cmpsb insb loopne test xchg ret add and movsl jae xchg and or or and mov xchg and je popa sub xor (bad) aaa lods cmpsl mov push jge outsb add or aaa and ret xor sub sub sub loopne jns jbe mov cmp add sbb mov inc test pusha add mov or xchg (bad) lret pop or mov xor sub ret adc stos dec shrl inc jge pushf cmc adc sub mov dec inc daa cmp mov outsl iret mov ja mov inc xchg xor add shrb ja mov test mov or arpl lcall loopne fcomps push rcll sbb rcl pushf es sbb or popa jno cli or outsb inc adc xor icebp xor sbb and dec (bad) jmp test xor jp and lret and out push sbb push xchg cmp es cmc add imul repz nop in add imul cmpsb ds mov inc push push mov aaa xchg mov sub sub xor mov pushf push les in flds mov push xorb or ret push jp lahf jno dec mov mov nop sub adc xor sarl mov test orb rcll mov (bad) hlt jecxz add adc in sti or or xorl push pop jmp pop mov cmp bswap ret sbb es xor sarb push movsl je xchg aad jno fdivl testl inc pushl mov dec push add popf or and inc inc dec scas dec stos xor std xchg sub dec arpl mov pop dec std cmp push (bad) or test xor ret scas fcoms add out mov xchg mov push push add and ficom insb cmc adc test add leave mov outsl xchg sbb dec add dec pop add xchg mov dec add jge fwait (bad) fdivs inc xchg xchg adc ljmp xor push in pop pusha and mov loopne inc pop int3 sub add mov and insl sub xlat lea cmp and dec cmpsl mov int and shr pop rolb rolb or test or aaa daa inc dec cmpsl jg push sub popa mov lret mov mov add addr16 or imul cmpsb mov (bad) xchg cmpsl sub jmp push add push test push rolb push lcall leave push inc push xor ds js jecxz adc lea cmp (bad) (bad) cmpsl nop cmp sarl xor mov (bad) pop sbb mov xchg gs mov jo mov mov cwtl mov push and nop imul movsl sub xchg xor jbe orl dec xchg test xchg (bad) insb dec xchg int3 dec mov daa cmp add pop sub cmp rcrb lahf jp cld or inc loope movsb sbb mov add sub stos mov (bad) add inc ret add cmp mov xor xor mov mov insl pop and push call and mov push adc ficom xchg sbb nop adc xor imul inc xchg ss xchg nop adc lret or or cmpsl xchg xchg repz jp push imul fcoms and pop lcall cmp adc sbb lea clc jne or dec add add sbb icebp test add add mov or dec mov adcl fidivrl aas sbb (bad) in shl jae xor mov js mov fs pusha aaa cmp push addl aaa push jno mov cmovg lea test xor fwait test nop (bad) (bad) cmpsb pop and and sbb enter imull imul and and addl inc jmp and rorb fcmovbe push mov dec xor mov rol dec call mov adc inc jge push fnsave dec aam xor fcoms subb (bad) (bad) cs mov mov icebp adc and lahf and pop pop ss xchg add push pop and movsb inc (bad) and xor xor adc mov stc pusha add fdivs sub jb mov dec test rorb imul sbb and mov bswap cwtl lahf fwait xchg or xor jae sbb mov rcl add fwait cli repz aam jne inc mov rcll leave sti in mov pop xor xchg and dec inc sbb insl push inc ret or push jmp repz inc adcl xchg xor push jno je adc arpl loopne sub sub dec pop dec rcr loope cmpsb mov dec cmp rorb fs mov and cmp mov adc and mov pop (bad) sbb sbb mov das adc fadds add sub mov adc and aaa ds cli sti cmp xor add mov inc adc push daa push mov dec adc and ficomp inc xor add gs dec dec daa in cmp pop adc mov mov or jl sbb (bad) pop pop and fwait lret rcl xchg fdivrs inc test ljmp add cmp push popa mov pusha sbb andb adc jmp jge xor cmpsl mov imul sub and add icebp or (bad) xchg imul dec add mov cmpsb and xchg out rolb ret push inc mov test inc xchg pop push or add xor arpl add lods or lods jno ja arpl jb in call push add sbb inc sbb xor and add dec mov je push dec mov imul or test xor cs inc inc jns xor popa mov adc les dec ret rcl adc or mov loope push out addr16 jno idiv add js jns xor pusha jmp push aam jmp push das mov mov (bad) ss bound and ret fisubrl bound dec jmp add and xor push bound mov imul jmp das outsb mov push mov cmpsb out addb mov dec pop pop mov cmpsb mov sbb andl fildll je xchg adc test cmp adc aaa fs adc xor xor jno dec adc and or lods or push adc in or cmp add inc dec mov fcmovbe pop daa les sub xor inc dec int dec nop mov mov xchg mov xchg inc lock adc dec inc js pop xchg inc test out mov pop mov add lock push xor push aaa dec sbb xchg xor adc or imul aam cmc push mov xor (bad) movsl popa (bad) push sbb leave xor mov cltd cmp dec mov jmp pop or mov inc cmc xor testb dec gs push rorb xor and add hlt stos or xchg push xor xor pop pop or stos add in or mov push push incl xor fucomp rol ret xor imul (bad) add mov sahf or sbb sub inc stos clc nop adc pop push sub lock into cmp stos ss mov push mov loopne push stos pop add push xor xchg test mov add add cmp aad icebp or (bad) call cltd mov dec imul sbb je rclb and mov mov push pop xchg inc out cwtl sbb push push push ss sub mov mov sub adc cmp mov pop add and loop movsb mulps mov xchg bound sbb stos jbe push les mov cltd cmp mov and cmp xchg cmp sbb (bad) iret push sarb idivl pushf mov popa add fbstp sbbl inc outsb aad mov rorl mov xor ret fistl adc or rcrb lea mov add enter xchg jo daa mov dec lea xchg dec insl loop rol call test mov sub lret cmp xchg xor sub ficomp adc sub mov outsl mov pusha or add mov sbb or nop subb sub movsl sahf test adcb addb pop xchg mov and mov push inc int imul pusha scas push xor icebp insb push mov and mov sbb roll imul pusha push push and (bad) daa push insl push cmp aam inc jge and mov cli cmp adcl out or test dec imul add mov push sbb fbstp cmp pop xor mov adc pop fadds insb mov and or add push pushf dec test stos mov mov xchg sub mov dec sbb add ret js loope mov add inc mov or inc cmp loop mov andb adc and mov dec cmp push outsb lea adc aaa mov jae test test mov cmp sub mov lret cmp push ret lods pop adcb xor repz bound cmp mov rol jg test add inc add iret jbe (bad) movsb cmpsb call xor call sbb pop add int int dec sub mov sub fsubs xchg adc roll sub (bad) xor inc test cmpsl pop add stc sub inc xor enter inc push mov test jnp dec mov push mov outsl leave rol je add leave pop addr16 dec inc lock pop jns inc movsb or and xlat sbb or and dec addb mov xor xchg gs loopne dec xor xor js or xor mov add movsl mov pop mov mov stos lret in add xchg and inc mov push inc mov cli gs xor cmp daa mov icebp dec imul fidivl cmpl cmp xchg xor adc out ficompl leave and sbbb and and dec ds sbb push adcl loopne xor jmp adc push sbb bound jge inc pop push adc mov and rcll int fadd and mov push leave and xor and ds loop sbb mov outsb or pop dec lahf ret sub test adc int or push or mov push rorl sub cmp adc sbb in je cmp (bad) mov (bad) xor cmp mov or loop cmp dec (bad) movsb and and dec sub adc in add xchg xchg (bad) and loopne dec xor lsl mov idivl je dec sarl lret fistl mov mov adc movsb mov and cmp xchg js cmp aaa lods fist push or push inc pop dec dec mov adc push push in daa mov inc cmp enter add push popa sub test pusha stc loop mov xchg (bad) sub jmp int3 fadds data16 dec mov gs daa pop push xchg mov insb xor inc add jb in dec xchg in sub add lcall mov or cmpb inc xor cmp js mov xlat lds or aam push jmp dec or aaa pop adc mov push sbb lea mov cld dec cmp pop sbb mov add iret mov push mov or or push fisub outsb mov cmp sub sub (bad) (bad) mov xchg xor fdivs sbb pop ret cmpsl cmp and popl ret movsb add xor popa adc jns push (bad) adc lods push cli add fsubr or push add or enter dec les push push sahf (bad) fnstenv pop and and (bad) sub cmpsl iret aad arpl inc test ret or push xchg pop adc test sub sahf imul imul jecxz (bad) dec imul xor icebp mov xor fsubl inc js pop sbb sbbl aaa xchg push (bad) aaa adc ficompl xor daa add and flds js inc pusha sbb mov sbb (bad) xor sbb movsl dec cli add adc (bad) or cmp stos movsl pop mov sbb pop shr sub push dec push sub sbb cmpsl or inc addl add stos aad loope sti imul nop push xor pop fldcw dec push and fimull jmp (bad) xchg gs push or sbb jns ret push lret cltd xchg sub inc xchg and adc dec mov push mov mov pop pop mov cwtl (bad) sub sbb and repnz sbb or push xchg dec movsl pop sarb pop inc arpl jno pop mov sub sub sbb and push mov sub jp adc sub mov pop dec fstl xor lea fs (bad) mov inc xor call xor test ss lahf xor inc xchg inc icebp mov stc cmp sbb mov sub xor cmpsl inc push adc mov (bad) add sarl outsl inc xchg push (bad) aaa dec push mov fidivrl jae jecxz sub loop mov add mov and insb mov xor rclb push data16 test push or xor mov ja aad les or add inc repnz mov inc (bad) push (bad) sbb loope push xor mov mov stos movsl mov jp ret xor inc inc adc sti rorb insl pop dec or or add xor test sub movb mov lock rolb inc dec lods or pop mov adc sbb push mov push dec jmp es loope mov ss lods cmp pop mov xchg push mov inc div push sub roll into sbb nop popa cmpsl icebp xorb (bad) xchg pop into scas lods or xor daa push movsl push lahf xor push shlb test add and cmp lods push push mov (bad) aaa adc pop add clc and jno xor inc pop das lret lock inc sar sub (bad) xchg bound or jo jns inc call pop sahf ss dec inc mov or fnsave jne fnstenv dec push adc rcl movsl or mov nop push xorb mov pop (bad) lock icebp and daa ret add shr arpl or or sbb cmp shll xchg sub xor mov adc or insl loopne test xchg add aas popf mov cmp sub adc sbb mov mov jp dec cmpsb push lods testl in sbb adc adc mov jns cmp movsb adc sti xchg rcrb or pop add int cmp (bad) lcall aas sub and sub pop ss fbld mov pop adc test push fadds andb sbb (bad) mov jae sbb and les es xor leave pop jmp in xor sbb pop push dec pop add push aad int3 push adc pop push add adc sub xchg xorl mov pop js push shlb imul das inc dec xlat and mov scas fwait jp adc xchg (bad) adc or cmc inc mov nop cmp arpl push enter add lret out (bad) test adc js (bad) mov sbb mov xorl scas xor (bad) jo mov mov inc (bad) jl add mov or inc adc aas inc xor or les outsb jmp push inc or push into xchg adc and adc sti pop adc popa adc es pop mov adc insb aad mov hlt cs loop test scas pop inc pcmpgtd bound icebp add ret pop xor jo fsub sbb dec sahf push mov out xor sub xor or test jno xor dec cmp in adc bound push push mov sarb ss fwait pop mov or pop js jp adc ficoml or pop fwait ss add lock fs movsl loopne adc or lahf dec fnsave (bad) mov lcall mov xor mov rclb outsb lcall mov movsl jecxz fldcw sub inc push and mov push xchg sbb push xlat pop push or das cmp inc inc or xchg xor push dec cmp mov test fisttpll pop dec fcmovbe and fstp pop mov loopne lds dec (bad) xchg xor rolb add movsl inc pop ret and pop inc fldt cwtl cmp pminsw xor lods sbb je push out mov icebp mov jmp dec push xor inc inc adc sub inc popf jb push dec push test aaa ja inc sbb xchg fsts mov pop aaa mov andb xor imul arpl (bad) xor adc lea sub or add fs mov loopne pop adc xor test pop sub and sbb fidiv or cmpsl lods inc iret add movsb adc push dec xchg rcrb gs loop loopne xor pop iret lcall dec add dec mov fsubp fdivrs ffree ficoml mov add incl scas xchg lods inc or movsb nop cltd daa and (bad) subb mov mov fwait outsl mov bound loop xor insb loope icebp or add mov outsl rcrb inc or sbb sbb inc int leave les add xchg inc mov add mov das in sbb call xchg test sbb test movsb mov mov insb adc pop mov mov inc sbb jnp cmp inc bound sahf xor jae xor lods cmp popa add popa orl sub mov fsubrl or dec pop jecxz cmpsb add sarl add or popa or shl enter (bad) andb hlt sub (bad) jmp push xchg jmp adc xchg ss sbb sub adc cmp loopne sbb mov push nop adc or mov mov fwait dec inc or and xchg int imull xor test adc or xor lods popa loop dec cmp (bad) fisubr adc (bad) sahf dec ror mov or ret and xor xor std test push stos mov nop adc sbb or push insb xchg (bad) xor xchg xor or xchg pop test aaa fs fucomp xchg jo or mov sbb shrb inc mov jmp push push sahf lahf hlt gs mov or (bad) push or xchg xchg popa or adc add insb dec icebp rcrb cwtl sbb shll add xorb cmp loope js xor xor or dec stc xor add sub or je testb rorb or or fs xor sub aam sub loopne and imul dec arpl jnp and jle sbb sub or (bad) popa sbb xchg sub mov mov (bad) lahf xchg repz in xchg fcmovnbe jo gs push pop add adc add jmp gs and inc and ret fwait cmpsb mov lock dec push and add dec add cmp dec sub push leave ja add rcrb rorb lods shr or and inc xchg cmp or dec push movsl stos sbb jge pop push jp pop jl mov sbb adc clc adc add cwtl inc mov pop and push es pop sbb xorb sub xor jle popa inc pop inc pop js mov pusha test or jmp adc fadd inc mov call or pop test popa xor jne pop dec mov inc inc pusha mulps imul in jg roll sub sbb sub ret mov aad addl xor mov lcall test ret dec je adc xchg xor mov cmp push loopne and push popa xchg mov aas and sub push and mov daa pusha insl insl xchg cmp adc pop mov test pop add outsl adc sbb mov xor push cs xchg mov inc mov push cmp out cmp inc sub lahf sarb and dec mov daa pop mov mov inc pop sub mov pop inc xchg repz sbb inc or or sbb or sbb mov ret and mov push (bad) call sub and mov loope xchg jmp add insl test pop (bad) pop dec mov sub arpl xor pop (bad) mov stos ss jae add push cmp adc push jne or hlt fmuls push call or sbb jp and subb pop push loopne dec dec test test jo and stc xor aam cmpsb pop fs pusha mov jle rol or xchg loopne test pop jno outsl cwtl inc sbb mov add pop or cmpsl adc sub or mov push or sbb arpl sub sbb into add das pop mov insl sahf push imul ret sbb loopne movsb leave ficom js mov add push aas shrl jle xacquire stos inc lret mov rclb fcmovnbe add xor popl add sbb sub xchg and (bad) std leave sbb cmp in dec clc and orl nop popf dec or aaa inc pushf popa addr16 ret sarb outsb mov mov les mov push mov or pop and ss mov adc add xchg sbb pusha mov pop je xorl add inc orl or and aaa mov mov add mov mov mov cmpb inc adc das arpl push xchg inc cmp xchg push sub jo in xchg xor sub or cmp push or movsb adc or pop arpl fs sbb movsb jge mov adc mov pop xor or jo xor and push clc xorb cmp mov dec xchg adc inc push and or adc cmc inc dec call test push push xchg mov add xchg ret push test or push xor xor push inc pop cmp jbe adc xchg subl fild rcll gs xchg add mov xchg test sub addr16 popl inc sub cmp xchg add or test pop pop add xchg loope aas mov mov push insb js scas cmp (bad) cli inc bound stc lcall and mov dec stos inc adc xor in dec or mov xchg inc ss dec push sub pop adc lods sbb scas mov inc push add cmpsb xchg pop dec inc push xchg inc sbb mov imul cmp sub incl adc sub dec ljmp xor or inc mov es fimul daa sub cltd sub cmp inc push push push fstpl inc ret lret test push int es xchg stos push jo xlat xor ret (bad) add popa imul pop inc add andl inc push ret inc arpl arpl ja xor scas test dec xchg lcall (bad) jp cltd cmp popa mov rcrb (bad) popf gs or xor js and add mov sub flds fcmovbe dec rcrb push cmp ret into pop in je (bad) mov or jno ljmp push push jecxz or jp cmp pop ret ret inc mov out aaa and ret sbb sti inc mov sar xor enter pop or jae test cmp xor push ds mov xchg push push push cs and leave dec packssdw inc mov inc (bad) rcl dec lahf sbb test add ljmp or scas pop lock sbb mov cmp sbb inc aad adc xchg imul mov andb pop xchg fistpl inc and inc adc into mov loope or or xchg inc sub jp or cmpsb dec ret mov or or dec cmc xorl inc lcall sbb cmpsb lods cmpsl arpl xor rclb roll jb sub js cmp in insb lods psrld jmp adc daa clc jg cmpl lea or into out mov mov cmp push xchg push shll and jne pop les movsl bound arpl mov xor gs or test leave sub lods jo imul dec push rcrl sub nop/reserved add ds jns sbb adc mov sti jle cmp and fisttp pop xor jmp pop (bad) and ds pop stos dec sbb inc inc (bad) push js hlt lods mov sub pop loope gs ljmp push push inc fldl jp sub adc popa and scas lods mov (bad) xor ret mov nop movsl cmp jne bound ror sub add pop pusha jns pop lret sbb gs add mov mov adc loope sub mov xor pop pop xchg sbb iret ds xor inc stos xchg sbb pop jg (bad) xorl pop xchg popa xlat gs movsb (bad) xor xor dec inc mov push xor or inc add repnz mov pop push cmp data16 xchg and loopne (bad) push dec ret or xlat mov mov dec pusha sbb sub dec adc andl push mov adc jle or jge das imul movsl fwait pop pop dec aad sbb inc mov cltd mov movsl aas jnp xchg (bad) mov xor repz and push xor inc pop and (bad) push (bad) stc dec adc push jecxz dec or or test cmpsl xchg xchg mov cmpsl dec pop pop xchg enter push add icebp and inc js lds jnp pop loope ss inc push and test jbe push ret mov xor data16 push scas rcrl add and out insb inc pop push mov xchg add sub and cli add mov inc ljmp adc nop and lods push and cli cmc lret xor xor lods or adc jae add mov int3 inc adc pop aas xchg icebp sbb popa sub mov or mov outsb xchg mov pusha es aad adc xchg add and sub pop dec cmp pop pusha or roll cmp daa (bad) pop adc and push sub mov aas adc inc lock and leave rcl xchg daa lock mov and addb ss add push icebp popf mov lods xchg inc xorl or mov pushf inc lea mov adc out sub pop test add stc add cwtl ficomp popa push dec popa xchg mov inc enter dec sbb mov nop sbb in xor add sub mov sahf pop movsl jp,pt pushf lock (bad) mov or mov adc mov ds adc test enter or add fs sub lock add mov arpl or mov sub imul popf fwait adc (bad) dec rolb sub insl es call ret dec mov xchg test scas cmp ret nop cmp rol sbb mov lahf sbb add out popa adc xchg js dec and ss xchg or cmp outsb and adc adc cmp and int lds (bad) or cmpl es push xor mov repz adc and pop cmp xchg popa inc arpl cmc xchg sub xor add or lods dec jmp imul xchg mov adc mov addl or sbb ss test adc inc or mov bound xor mov pop and lods enter adc rclb push pop push add mov push dec xor ljmp nop (bad) push test ds cmpsb in popa cmp mov sarl add pusha add xor frstor enter out aas mov cltd xor xor mov call xor popa mov add or dec cmp imul aad push sbb test and xchg movsl popl nop cmpsl inc or cltd addb rcll clc push fsts fidivr inc or xchg mov push xchg rol push daa dec dec sub shrb fldenv sbb mov adc mov ljmp out inc and shl xor add push mov addl mov push pusha push leave pop insb adc mov or sbb (bad) incb fwait lock test mov push dec mov add add xchg mov or jmp enter sbb test in mov mov mov pop aam lods xor sub sbb scas and adc jo cmp mov mov imul and push inc icebp rol cmp jp or adc lret add push or mov push hlt mov push inc sub pop sbb lret cmp inc imul jae mov xchg add loop stos add add insb pop imul lods sub adc and push or mov fstpt pop sub inc pop pop pop sbb addr16 inc mov in pop push mov popa xor popa pop imul mov mov jl and out sbb adc or outsl adc hlt nop add (bad) jle inc xchg (bad) and and add incb inc dec dec mov and jp loope push add (bad) pop dec pop (bad) sbb mov add ss or xchg test pop inc xor push pop inc cmpsl mov add push jbe add jmp imul movsl daa loopne jmp cmp ret js xor lcall adc push sub xchg xor xlat adc test xorb out cmp cmp push pop dec fsubs jecxz lods xor lods inc pop inc and xchg pop sbb fimull cmp (bad) xor or cmp js rol adc xchg mov dec int or lcall stos mov movsl cmc enter sbb sbb faddl movb leave mov movsl dec push push pop fwait rclb cmpsl pop inc stos or cmp int sub lret mov sbb pop adc addr16 xor jae,pn iret xor pop sti popa or push or gs mov fstps in (bad) jo mov dec push push sub mov shrb (bad) sbb add andl cwtl cmpsl add adc gs sbb xor inc mov xor in pusha enter xor jmp jecxz cs call shrb mov daa mov lds sbb cmpsl sub addr16 (bad) cli mov repz es cmpsb shll jmp xor pop inc popa stos pop push jge lock cmp push pop mov ds sbb mov (bad) rcrl add or mov add mov bound popf add mov and int3 mov int push xchg pcmpeqb lods adc mov mov xor out and lahf int3 push mov add mov pop mov push xor cs and sub and inc or stc int3 fwait adcb cmp arpl or (bad) mov (bad) cmp loope cli aas pop (bad) and xchg test or or pop dec repz adc adc add mov (bad) ja (bad) test and lds gs mov flds adc xor or fs fbld push pop les or cmp push les js adc xchg dec pop movsl fildl push jo rcr out or or push push push push mov mov adc add cmp lods and sbb (bad) fwait sbb hlt sub xchg pop clc mov dec and stos rcrb adc add jl push push xchg daa push dec add icebp or push adc xchg xor addl mov ror (bad) xchg loopne movsl and shrb xor (bad) sbb sub add and xor gs xchg fstps pop push cmp fnstcw add pop jp sub and xor and adc test push addr16 inc dec pop mov inc adc sub mov xor xor sbb lock sbbb test and mov das xchg sbb insl or xchg mov cwtl xchg jne dec sub cmpsl jmp add push fdiv push gs xor (bad) push adc orb sbb sub sbb and mov push xor and ss shrb mov addr16 and push nop daa or xor mov aad loope xor std sbb call mov (bad) add cld sub dec iret xchg arpl hlt dec ja es (bad) add dec xchg pop nop lods mov stos xor addr16 xchg and das xchg or mov inc mov sbb pmaxsw push xchg adc and and mov repnz sbb popa lea and sbb mov cmpl push nop nop sub or sub insl outsb xor loope aas (bad) imul add mov adc shlb sar popf mov inc loope mov mov sti test or repz cmpsb push inc pusha xor sub iret cmp leave sbb out jae mov inc cs sub jp arpl faddl adc and aam adc adc jmp dec loope js cwtl jo push xchg mov xchg xor pop sbb push adcb adc xor or dec cmpsb push fmuls jne (bad) dec add repnz cmp rorl mov movsb add mov mov adc cli (bad) sub pushl test pop test repnz ret leave inc (bad) popa shll lods or push mov mov or arpl and inc mov dec adc enter and dec adc in add pusha mov leave out into ret inc aaa ja xchg movsl adc into mov adc push jno add add mov je fs ret sbb and dec add inc and mov pop add cmpsl clc gs push lods int lea adc xchg xor (bad) cmovo sbb adc jo push in xchg mov xor mov sub and sbb mov push mov aad inc jbe pop insl dec xchg xor add lcall rorl lret inc mov xorb mov xor mov lods adc mov sarl int3 imul or inc sbb int or sub leave inc inc pop inc add scas mov fbld shrb sub push sub push sub pop or inc jmp call adc popa add sbb or js inc xor or add lods inc inc arpl cmp dec inc xor in arpl push ret add xor mov dec inc pop jno cmp je push or fidivl or lods out xor sbb int3 sbb dec mov fsubrl rcll andb and dec mov add dec or mov inc pop les sub sbb mov pop dec mov and pop and and inc xchg sub pop aaa aaa dec loop and imul sub cmp xor pop pop mov and lret mov add dec aas pop ret pop or inc dec shrb push push or dec push or dec dec int ss lret movl lods mov xor cmpb pop imul cltd or sub adcl leave imul outsl aas movsl xor jecxz (bad) adc pop inc dec and push sbb (bad) sbb stc dec xchg fadds addr16 mov add shrb xchg (bad) cmp add popa lea xor and mov movsb add pop xor jg add sbb movsl lock aad lret mov cs arpl lods icebp addr16 loop mov push outsl insb shlb jns ja sub mov mov pusha inc xor add or sbb pop and adc xchg sbb xchg and lea mov jns inc cmp movups inc loope xor pushf and inc scas aas shr test inc inc sbb data16 sbb cmp popa sub and and and sbb cmp pop dec test add adc sbb pop and dec sbb add xchg rcl stos lea pop cmp add add cwtl dec dec cmp mov xchg add or dec fs and push call adc cmp mov cmp add lcall xchg xchg xchg mov cmp arpl vmwrite cmp mov jbe mov daa daa ret dec adc or pop in xor popa pop or add nop jecxz and fs xor xor mov setnp dec es sahf and pop fcomp or aaa shrb addl jecxz sub cmp out stos ret mov lahf ljmp js adcb xor sbbb sbb inc pop inc stos add adc adc gs jmp cmpsl popa adc pop add loopne or inc addb ds and sub ss cmc psubusw xchg sbb dec cmc dec or inc shl and xor add jl adc (bad) loopne inc cmp push mov xlat popa lret loope mov push cmp cmp adc cmp or xlat cmpsb pop sub mov sub and ret pop and xchg and and add mov jno lret sub enter add push popf aaa ds cmp jp mov test daa sbb or adc cmp dec enter shrb inc sub call lret and imul dec mov in inc (bad) js cmp inc xor and stos add dec loopne push (bad) lahf xor and test push (bad) mov inc imull dec or aam pop das mov xor (bad) mov je add popa jae arpl mov mov add xor ret data16 xchg or mov lret and xchg inc inc xor pusha jne dec mov pop dec cltd xor add or les popa adc aam sahf cmc xor icebp push pusha mov xchg inc js test pop sub idivb pop xchg ret adc cmpsl test push ljmp es sahf add sub test insb push inc xchg xchg rorl imul pop (bad) sbb pop dec push mov lods cmp les nop add jg clc mov lock loope add inc sub and inc imul and mov inc dec add lods inc lods enter push lret cmpsl xor push dec loope mov xchg test andl nop rcrb push mov loope into fimull mov popa call sbb sub insl test adc xchg aaa das pop mov add add lds inc mov je mov sub dec inc stos cmp mov and inc push adc arpl add inc adc mov xor lods sbb or cmp jl xor sarb test or inc jo ss or leave pop xor adc cmpsb add push dec lds ret mov xor xor test mov jae popa inc daa sbb clc nop mov mov (bad) xor pop pop cltd pusha sbb jae push add ret cmp imul aad adc popa cmp gs or movsl push imul xor dec sub movsl add test fist xor call inc aad cmp movnti xchg addb xor ss inc xlat xor sbb adc insb pop ss pop cmpl and xchg mov sbb dec mov lock or add loopne or js pop pop xor inc mov std repz aaa cmpsb inc mov imul and jns cltd or (bad) idivl or hlt ret xor xchg adc (bad) mov sbb mov or xchg cmp (bad) mov or imul add cwtl lret in inc pop jno inc movsb mov add ss xchg rorb pop pop lahf movsb or add jg mov loopne xchg aaa roll add lea popa push cmp (bad) xor inc lea ret ret lcall and outsb dec sahf cwtl nop sbb cmc stos xor arpl cmp arpl js addl and add push push xchg xchg jp push (bad) xor sbb adc aaa lea jae pop add rol xchg inc cmp mov mov sbb xorl inc bound and fistl add adc jge sahf es nop sbb (bad) xor rorb pop js cmp xor inc gs pop jmp adc loopne sub pop sbb cmp mov dec sbb (bad) jg mov lcall icebp aaa and sub or jecxz jp adc mov sub orb mov inc lahf xor sbb mov cwtl fs aas adc aam add xor mov mov dec pop das push sbb add jecxz add pushl pop jmp mov mov dec rcrl mov pop inc pop test js int3 xchg pop out push insl loop inc popf lret rorb js xor push jp movsb pop xorb sbb push pop aad addb push (bad) adc jns in mov fistp (bad) and mov xlat xchg fcmovnb rol mov test xor xor lods or ret subb or push sub lods fs loope and ret xchg adc arpl nop pop xchg inc mov andb inc cmp pop adc pop push mov inc push inc fadds mov aas outsb adc hlt xor push nop mov push add jns cmp lods popa sub ret push cmp dec test dec xor push and insb aaa fmuls or inc pusha add and dec ret leave sbb mov sub nop lock mov mov xor insb mov add or imul sarb and mov mov sub outsb add aam sub push lods adc hlt push mov dec inc movsl and xor (bad) add sbb scas imul movsl push dec add mov rcl mov add xchg pop movsb je sbb nop adc mov pop leave mov mov adc mov mov icebp dec jecxz adc inc fild push jp jno clc lret in inc loop mov and cmc mov xor movsl in sub dec es mov je add in fs stos (bad) aaa inc xchg loopne arpl jp aaa push inc xchg and xchg push jb repz mov cmp sbb sub into sbb loop dec movsb dec jmp aaa dec sbb xchg repnz shrb inc lea test and or adc and negb sub push push push push push mov mov cmc jmp loopne xor push popf mov and leave loopne adcl add push adc xchg leave jp or push fwait pop insb push mov add iret mov xor dec mov push mov cmp xor pop dec sbb pusha rcrl inc divl rclb sub mov lea loope xorb and xchg add mov test mov addl xor adc pop xchg lea push mov xorl out dec repnz rorb inc dec inc stos fnstsw add xor push rorb nop sub cmp sub and xchg pop or lods or pop arpl int3 lods push rcl ret adc adc sub push inc and push adc or inc mov cwtl sub and enter es aad jae or inc mov pop or mov add mov adc es movsl sub mov adc adc movsl xor addb pop ds jne (bad) adc cmp push cmpsb mov cmp push add xchg inc push sub roll xchg les jo or out dec mov mov and or movsl (bad) mov addb dec adc enter inc sub addr16 dec mov fs inc pop inc and sti jo sub pop pop stos dec int adc add repnz lahf mov jnp lret rorb test and mov test ss push or sbb inc xchg mov stc dec mov cmp add nop shrb repz adc das or test sub pop rorl nop and aad mov fstps test mov push mov and or mov out enter sub (bad) lea fs mov in push cmp nop inc pop mov shlb lods xchg lods push or push inc and test push aaa dec push inc mov and fsubrl flds jae pop xchg pop (bad) jb xchg mov popa xchg fwait mov sbbb adc pop and mov add and or adc inc pop sub or pop pusha insl lods mov inc andl (bad) (bad) imul xor sub dec mov inc test and arpl inc adc sub push jmp xor xor loop inc pop adc aaa pop std sar sub xor pop mov arpl pop insb push inc dec sub push xchg movsl (bad) icebp (bad) mov sub sub ljmp cld push and inc xor xchg cmp test xor fldl loope nop inc or or cmp push push rorb in pop xor movsl mov adc lds jo xor jno lret dec sub adc nop test push xchg scas or adc sbb or and hlt jb gs jg push push aaa pusha or rclb or jno (bad) dec and push ss je sbb add pop inc dec mov pusha dec aas (bad) mov inc xchg stc or and push dec add and xchg xchg out cmp xchg and stos sahf xor stos xor inc sub inc add mov shl mov les repz cmp stos adc or add orb int3 jno adc adc lds sub pop add and mov jae inc pusha add mov stos sbb ret xchg xor push xchg jne pushf movsb xchg xor dec push sub sbb ret lds movsb add (bad) aaa sub xchg cmp jno push add push movsb adc loope xor in stos and cmp sub (bad) sub shlb sbb and lcall xchg dec in test enter and push dec adc orl cmp push push adc mov cwtl inc sub sub (bad) push cmp mov inc push clc xor pop fstl fidiv shlb xor sti nop int3 inc mov xchg into sub push dec pop and jl add int3 add mov xor dec and adc or les sub test sbb out cwtl xchg pop and sub pop (bad) test sub or enter or loope dec dec addr16 mov pop jl xchg (bad) pop mov repz arpl xchg je mov inc js jp or popa push add cmp push push or lods imul and mov or test xor pusha sarl dec or pusha adc sbb mov fcmovnbe adc sub sbb sbb popf lcall test pop and xchg rorl dec fwait ljmp lods mov push adc cmp inc pop push rclb or fistl xor ret loope or aaa xchg xchg adc and dec aaa inc jno pusha push jns cmpsb cmp adc aad push sbb and xor pop (bad) inc pop js imul aam ss sub or popa add or cmp lods punpckhbw xor adc or and xor lds mov xor std xor xor stos lahf inc and sub jo popa push add mov mov test push jge cmp add and add pop lahf inc xor and cmp bound dec and lods xchg js jne xor and xchg stos add add push pop test add mov cmp lcall pusha popa mov nop loope inc push stos add mov mov dec push mov dec cwtl xor inc pop inc dec sahf inc leave enter adc rorb xchg inc sub in or mov xor or divl adc imul roll dec push rolb sub mov mov imul adc popf xchg or pop out add (bad) fistpl xor inc xor pop push mov mov mov jo push xor arpl clc push xor insl sbb lods add adcl insl enter push jbe and or or roll imul lods lea ret cmp les add dec adc inc fwait int mov and sub sbb loopne jge sbb and xchg xchg add adc lods das and mov pop js push jae (bad) rolb sarl push inc xor ja aam andl insw lea clc dec push cmovns push xor mov lods lods xor push pop les andl mov and sahf mov push cmpb les sar nop xchg lea xor pusha cmp sbb push lret and (bad) andl sbb ds inc cmp xchg and and (bad) ljmp add adcl pop pusha pop dec xchg cmpsb mov les (bad) lret and sbb add clc test lea jo inc mov jns cmp sub xor and and mov bound xchg mov add (bad) xor and sbb adc jmp test sub cmpb jnp lret inc imul xor int in lods inc mov or or or sub cmc (bad) lret sub mov and rcll imul in xor addl cmp push shlb and mov je bound inc push mov lcall bound mov daa adc adc fwait aam rclb cmp cmpsl les sub cmp xor xor mov add xlat and push aad push js adc cmp jp adc jp mov mov dec lods mov into dec mov rorb lods inc jno or das xor rcll mov adc and inc in rclb pop or pop arpl add rorl fcmovnbe mov dec pop repnz adc cmp jg cmp dec in ljmp pop lock xor cmp dec outsl call add sarb fisttpll adc adc loope std cmp fdivrs rclb xor xor mov rcr dec and mov and inc inc cmp inc mov lock arpl sbb or mov cmp mov dec imul shlb aam add movsl dec mov push pop movsb dec dec cli dec std xor cmpsl test aam addb sub (bad) mov xorl enter dec dec mov cmp mov inc sub cmp sbb lods add mov mov mov je dec jp xlat push lods xchg or aam aas (bad) lea inc fcoms cmpsl mov rolb xchg adc dec add loop lods push ror jle sti cmp es lods add (bad) mov pop cmp nop pop test movsb call lret xchg in pop stos mov xchg push insb jo (bad) (bad) mov inc popa sub dec and xchg js enter xor xchg sbb in js push or les sbb in imul push (bad) xor je push in and imul pop or mov lret cmpsb fiadd dec jb test mov dec (bad) loope js les pop and fs mov test add mov sbb xor in mov pop pop stc xor test xor mov pushf movsl adc jnp and sbb inc enter mov dec repz inc inc fildll and arpl leave test xchg fisttpl cmp test sbb push dec loopne cmovns pop rcrb xchg iret cmpsb add sbb call xor xor (bad) enter ss cwtl or pop arpl test loop xorb inc inc and xor popa sub in sub (bad) xor mov or roll pop push add cmc pop add mov push rolb sysexit gs adc add out add pop adc out sbb xor add mov js dec popa sbb lds or xor or arpl cmpsb pop fistpl add aam imul test mov in cmp test dec pop daa data16 in adc inc (bad) adc and pop movsb or sbb xchg cmpsb loop xor xor cmp or mov inc mov adc push gs jecxz xlat xor or xor add adc inc jp (bad) std pop dec xor adc hlt mov mov pop leave (bad) aam add ljmp cmp in inc or push push xor sbb outsl pop popa mov (bad) sub outsb enter xor repz lcall add and test iret (bad) xor loop jecxz or mov and add sbb ret cli cmp dec addr16 sbb mov xor mov xor in push lods lock pop jno xor and movsl cmp insl sbb insb sbb int3 fld (bad) fnstenv xchg lods pop adc rol dec xor pop or adc cmp sub cmp test xchg inc jo repnz gs pop dec test fistl aas xchg (bad) mov adc mov fisttpl nop sub or jo inc adc subl test pushl adc pop inc jecxz and adc fs add popa js and pusha pusha and ja subl out cli xor cwtl cmpsl lods xchg push pop sub pop loopne lods pop xchg mov xchg movsb or cmp push dec out adc sbb or inc bound dec and add inc and lods movsl pushf sbb pmulhuw sbb rcll in add mov loope sub mov scas xor xor int3 xor insl lods pop adc (bad) xor xchg add xorb xchg movsb test adc inc stc xchg es mov lods les pop nop xchg xor add ret cmp mov and loope or xor xor adc aam mov fcompl inc and adc xor xchg insl adc and add aas mov add or lods je adc inc xchg mov jo mov inc mov xor pop mov and add sub iret leave popa mov adc xor loopne adc arpl andl popf xor adc mull mov mov aaa subl rcll and dec lods xor ret es test add inc jg mov jne pop lcall cmp xor popf push jg add push push inc jb dec js mov or pop test ja or enter fwait cmpsl xor int3 lods or test mov adc adc ljmp and imul xchg sub add repz mov inc adc (bad) sbb pop and dec jae sbb adc jmp sub cmpsl mov or add inc dec xor mov sbb xor leave (bad) mov cmp add popf out sub shlb xchg push loope add jge and pop inc cmp mov loopne dec movsb popa jecxz xor cmpsl outsb into xor icebp xor jecxz jnp or mov icebp fs adc inc xlat jmp xlat xor out inc or add mov fmull mov cmp xchg mov or inc cwtl mov ss push mov dec jge cmp test adc cmp mov inc adc add cltd inc hlt out sbbb or int3 andb (bad) lret or dec dec add pop adc and inc sbb adc push sub add test andb cmp add std sbb xchg subl mov mov jmp test pop and ret adc add or ror je fimul lea sbb aaa and push adc or xor or push dec das popa ret (bad) mov sbbb xor xchg inc dec and inc lret mov cmp stos cmp sbb fcomps pop push mov dec bound pop xor jbe pop test aad adc jmp add aad add (bad) dec sbb dec adc push push push xchg and (bad) xor xchg cmpsl push mov lods int push lea cmp rolb lock sbbl addb (bad) jns mov icebp xchg inc lret in xchg cmpsb xor or lods inc add cli adc cmp orl mov aad push bound ss iret xchg nop xor pop mov fs cmp xor push (bad) jo dec nop mov add xor (bad) push or aam es or (bad) jno sub add push mov leave adc pop movsl xorl insb (bad) push pusha sbb jne test sbb imul nop push test xor addb loopne test fadd push push xor addb mov leave or pop imul xchg movsl lds mov fwait dec and fistl jnp and bound mov jno (bad) andl dec rcl das fstps adc xor dec mov mov arpl ss sahf xchg cmp mov inc or add push (bad) push xor rcrb je sub add adc addb and popf pop jmp and mov adcb dec shll out ficoml xchg pop sbb int3 and dec lods inc ret mov xadd push rolb (bad) mov inc out sbb sub nop dec lret test jnp or (bad) mov aaa sahf dec xchg xchg insb xchg fbstp shlb add mov mov jae and or adcl mov sub xor and or fnstsw adc push addb faddl mov xor (bad) out xor pop push sub sbb inc jne movsl outsl cwtl mov xorb nop aaa popa imul jb mulb cmp insl pop dec push add pop and dec cmp in nop xchg sub popf scas sbb add pushf dec sbb mov and mov push xchg mov (bad) mov adc test add xor inc xor mov xor or add push mov sub seto dec push movhps push sbb and and push xchg rorb cmp aaa push sahf ret loope sub inc xor mov sbb xchg add inc data16 insl repnz rorb shlb nop leave xorb adc sahf jmp sahf add pusha (bad) adc push fxch hlt ret inc dec test int adc faddl xor cmpb pusha inc andl pop pop push lock pop dec xchg mov popa shl adc push mov adc outsl (bad) xor pop adc cmp mov xchg pop xchg test lcall jns bound ss pop and push pusha int gs rcrb dec jmp add ss xor xor jno in add dec into test sbb dec and sbb and inc jmp sub imul into push sbb push test inc lods xorl sub jl xchg mov push nop es lret (bad) sub mov imul sub ret cmp out leave in add and cli dec test inc shll lea and add rcrb xor pusha (bad) cmp int3 and sbb inc into add and sub jecxz sub push jp mov cmp sbb icebp movsl xor cmp mov cmpsb jge (bad) cmp adc lret dec ljmp es mov sub dec js adc in fild lahf sub out pop add pop (bad) xor sbb rolb ss shll pop xor add popf test push in test dec mov push push push add jne pop adc mov jmp push add int3 xor dec sub push jl lods xor call and or xchg dec rcrl (bad) and sub dec or adc push ljmp sbb mov lea or or into push xor sub sahf inc test dec add mov mov cmc sub das dec xor push adcl and std jnp mov mov (bad) xor or daa xchg mov push movsl xor cmpsl sub call pushf inc dec and jne xor stos lods push roll insl mov shlb lret (bad) icebp dec sub test dec cli pusha pop mov lods lea xchg xchg ret gs mov xchg sbb dec xor loop sub test inc mov push jo popa call xor call leave ds call mov xchg pushf rorl fisubr adc leave xchg lret push add or sbb fsubrs cmp je fs jns or in dec out xchg pop jge int3 outsl divb test cmp add scas dec pop mov dec cmp adc or push adc test adc call mov mov loopne jmp pop pop imul add xorps dec or xorb pop add xchg cmp xor popa adc and push aaa jp sbb xor (bad) daa add movsl add mov cmp mov lods scas mov or sub mov push mov shrb or imul sbb pop sub popf and cmpsl jo sahf adc loope mov sbb xchg lods cmp push cmp andl inc adc insl (bad) in mov mov pop sub fcmove xor xor jns pop adcb or movsl add in out xchg int3 fwait out scas adc or lret hlt nop mov or das inc lock das or (bad) or pushf mov sub les adc and addl enter push pop sub mov incl xchg cmc mov loopne xor jns add jl (bad) loop push test sbb (bad) jle shll xor sbb pop add add sub imul sub test shlb push ret sub lock lcall jne xor sub lea xor fadds jns or sub rorb mov pop pop mov adcl mov mov inc jmp mov lea dec les mov mov or sbb sarb lret out aam push xor sbb adc inc pop int3 inc pusha xchg sub cmc lcall add les pop daa push aam and cwtl mov fisttp sub inc iret xchg adc mov shrb mov or stos fiadd inc mov mov mov loope cmp adc push adc daa mov pop addl mov jp xor rclb ds inc dec adc push imul (bad) xor jnp xor add test or xchg mov xor cmpsl dec mov jecxz adc add push mov popf andb inc sub dec cmp or push repz adc or (bad) xchg sub sti jecxz adc jo sub imul add mov loopne pop and dec icebp add xor dec xchg inc pop xchg push movsl lock mov shl cmpsl jbe sub rcll dec push xchg shl adcb mov xchg mov mov das rclb add sub mov mov pop pusha in test mov addb push pop daa ljmp lea push sarb inc and sub clc arpl jge and xor or rclb xchg (bad) mov adc aaa mov xor outsl pop sub fldt mov insl add jl adc add cmpl xchg dec out fmuls mov and add sbb or jae les ja inc (bad) pop mov inc xchg aaa jge add or cltd imul add mov cmpl fwait lar mov add fwait ret lcall icebp addr16 mov xor repnz sub or sub push mov inc and xor cmp or and mov inc dec enter test stos andl push cs shlb jmp andb lahf das jns sbb fild and xor sbb mov movb mov add or js and loopne dec sbb stos sub mov push pop adc mov lcall in or bound (bad) ret xchg or mov and es rorl test dec xchg movsb xor push ret repz and pop rolb (bad) aam xchg and inc sahf cmp cmp jo or sub fwait dec lcall push add sub inc pusha lods test push pop adc add cmp nop pop xchg xchg cs rclb es mov jp jae xchg lock inc js adc repz leave mov or fmul es inc popf or adc xchg pop jne std or test xor cmp push aam mov mov push mov mov add test ret xchg and xchg in sbb mov mov pop add dec and add jae push ss dec andb cmp dec and cmp push push into sbb sub int3 mov outsb sub adc pop adc xor add inc popa push inc jg xchg xor sub or lock lea int and sti outsb push lret icebp inc add inc lds leave add ret popf lcall pop jmp pushf pusha enter sbb adc xor push adc xor xor cmp lods lds leave mov add mov pop ljmp addr16 add fdivl orl cmp or mov dec lret shll xchg mov xlat jb and shrb push shll and add mov imul xor rolb enter sbb xchg gs inc daa fs sbb loope and xor scas mul fiaddl and insl pop mov andl sub aad push xor lahf clc xchg xchg lods xchg push xor inc ret pop and inc pop fist xchg and subb mov test mov lods jne cltd inc xor xor xlat je push or or sti push sub inc (bad) mov mov add cli nop sub bound push loopne or dec xor ss aas push rcrb inc test push xor scas xor mov add cmp sbb je (bad) jns out shr and test (bad) inc cmp outsb mov popa loopne xchg mov into movsb loopne iret lds push add test push xchg ja ds adc sbb stc sbb add stos inc stos movsl cmp arpl xchg adc or xor rorb mov xchg cwtl inc daa or pop add xchg adc out sbb mov sub les push push sbb in popf push sahf les aas xchg pop mov leave and sbb pop inc mov (bad) jo rcll sub dec xchg out xor sub xor call xchg dec icebp fs push add mov test flds sub mov add adc lea add adc push clc jo adc loope negl arpl push enter pusha ja cmpsb inc pop inc cmp mov xchg out cmp xor data16 mov add pop jae lock add xchg loope test mov adc lahf nop dec fdivrl add icebp and adc fild bound aaa and dec inc std jle inc xor test lods xchg lds out (bad) mov dec cmp or mov movsl mov push mov mov adc or cmp or push or jo inc adc aaa lahf sub pushf test pop pushf std hlt shrb enter inc inc mov mov xchg sbb mov xlat pop sbb sbb loope mov aad adc xchg add and cwtl xor repz xor jne mov xchg inc jg xchg xchg shll pop arpl mov dec add psllq pop mov push cmc sub imul sbb out inc jecxz and sub int fisubl jle xor aaa push pop test dec sbb dec mov mov pop fwait sbb lods sahf push mov imul out enter or adc repz dec cmp mov outsl push sub cmp test fadd cmpsb pusha or or mov sbb mov adc sub repnz insl push or leave es jp add fmuls and test pusha or and jo lock dec add rol test xor and (bad) push les sarb arpl sbb mov add dec cmp or sbb and and inc mov (bad) cmp inc mov popa push nop lods (bad) lods push push repnz add stos lahf push sub mov out add dec jbe jge test xchg cmp or pushf insb insb or xchg inc loope push sarl ss adc inc mov sti xor sbb sbb mov xor mov inc inc adc jo adc call or sub arpl lcall mov outsl loop and adcb jns aad in pop addr16 dec or xor dec test rorl adc orb adc cmp (bad) stos inc xor (bad) and mov pushf pop ret and push add sbb pop mov aam addb (bad) ret xor and or rcrl cmp mov xchg movsb pop rclb push fmulp lods imul cmpsb insl dec pop mov or lock xor stos sub mov popa jge or mov fbld cwtl cmpsl out or es lods xor lods jno adc and insl inc nop mov pusha loopne cmp leave addr16 cmp or pop xchg xchg and jne sub inc mov insl mov xor call pop pop cmpsb jnp push xor rol pop jmp push pusha xor mov cmp (bad) xor xchg push push les adc dec pop or cmp push mov pusha mov daa test xchg shrb and ds enter push js vmwrite fiadd fiadd lcall pop rcr daa pop mov push xor add dec pop loopne mov dec aam sahf (bad) xor pushf xchg xchg push fist cld add insl cmp into lahf ljmp sbb lods xchg outsb mov (bad) cmp test push cs rol dec fstps les xor fldcw and (bad) mov mov cs xor out cltd xor cmp lcall nop push adc std xor dec push or loope xor or add mov inc sub pop lods daa mov subb sbb repz call lods xor push and js (bad) sbb les scas push add sub jp add inc xchg adc push or (bad) or sub leave and add mov mov jnp mov (bad) dec dec cwtl or dec sbb ja lods subl sbb xor stos cmp (bad) aam imul fidivrl es inc xchg ds xchg (bad) jne mov std bound push pusha add xor add fsubrs mov (bad) dec sbb and test popa xchg mov inc push imul insl fstps mov movb sbb int3 cs inc mov or mov push cmp lcall mov into add or pusha cs arpl test inc xor pop inc inc mov (bad) push js roll gs sahf insb and inc mov jp xchg sbb mov mov (bad) ss shlb mov lock cld inc les mov add rorl lds popa lea push push movsl sbb add sub fcomps shufps push xchg imul pop cmp cmp inc inc xchg and push aas flds pusha enter mov mov pushf mov add or inc or or xor adcl or sarb xchg adcl push push mov dec pop xlat push mov and pop movsb push leave test adcb ret or fsubrp test xor cmp shrb or pusha pusha ret jns test ret push xchg inc xor gs and test mov ds (bad) sub roll stos xchg test (bad) jmp adcl xor pusha sub dec mov add in cmpsb test jmp sbb cmpb pusha adc dec mov outsl inc add and lea mov fisttpll sub mov sbb and mov mov mov mov fwait insl push mov imul ss stos loope push push and ss test inc fild adc push sbb add jae dec mov and jmp pop push mov add in rol sub xlat (bad) sahf or aaa xchg jge les push and add push das jae mov lods sub xor sub sbb lea push mov iret xor xchg push arpl and jl loope adc jbe dec aaa inc test js js dec cmp add lods and mov push xchg xchg incb aam sbb ret push mov add das xchg sahf inc test xor in (bad) js lea fmull test inc mov adcb (bad) repz outsb and jne mov adc mov and leave inc test push mov dec push gs mov mov dec ret arpl ret jae adc xchg push cmp loope pop mov xor mov xor daa sub sbb outsl (bad) sub jns das sub xor add inc popa sub mov inc xor aad inc xchg test test outsl pop cmp add xor mov lods inc adc push (bad) lods and (bad) mov xor push pusha ljmp mov pop sbb add adc mov inc pop test xor and cmpsb pop xor dec (bad) xchg mov dec shrb or add xchg and jno jge lea adc jp fcmovnbe push xchg pop lods rcl pop cmp xchg pushf adc cltd dec dec mov imul push dec and sbb rorb mov xchg jge xchg in enter fstl jmp test jp aad push ljmp sbb in test outsb leave fistpl adc and inc dec add inc cmp xor pop fdivrs nop movsb mov and popa add inc movsb adc adc and push (bad) mov stc cmp aam xor mov xor mov rcrb or pop mov push pop (bad) xchg and lahf aam jecxz (bad) movsl xor jo push mov (bad) cli and fldl sub pop mov sarb add xor call lret leave cwtl inc outsl adc stc test or inc aaa sub pop and pop mov adc and scas add test dec mov dec sub xor bound pop adc cmpsb or in and insb sbb stos stos in mov fsubrs mov mov lds push cmpb mov sbb insl sub adc xor mov add inc or xchg sub aaa ds nop outsl adc daa dec mov mov mov cmc inc adc and xlat xchg inc pop pop popa adcl insb push cmp inc inc sbb push jmp insb dec xor add movsb (bad) xor ljmp or fs or leave faddp cs xchg imul mov lods xor inc and adc int3 and sbb fwait cmp cmpsb push jecxz push inc push cbtw inc and push fisttp ss pop pop add sbb inc mov fwait and pop fidivl inc sbb cmc out js xchg pop or add (bad) xor mov fwait add and and mov xchg popa inc xchg mov mov or push mov or pushf (bad) push ss fistpll loopne xchg mov aad xchg cmp mov sub cmp xchg mov sbb into jp pusha dec out xor pop mov dec pop add push add shrl and cmp xor pusha insl adc xlat push mov add mov add nop xchg pop pop andb mov sub pop push (bad) cmp lods rolb ret adc mov sbb iret sub add mov test sarb inc mov bound cmp fiaddl dec in repnz add mov push cmp mov cmp add xlat pop data16 ret jle std mov dec test inc jecxz fbld adc and nop popa iret leave cmp aam or int3 insl rcrb cmp and mov fbld lcall arpl mov cmp out js mov xor lret xor add lods cmpsl dec mov stos inc and (bad) or or fs mov cld inc (bad) xchg add xchg rcrb mov pop loope and (bad) mov imul scas adc pop pushf dec mov or test jns sbb (bad) xor pop test or lcall or (bad) adcl xchg sub inc mov sub test push mov or adc pop jl andb and xchg rclb pop jl incb fwait mov sub jmp xchg xorl loopne and pop rorl pop xor arpl roll test stos bound add test pop push sbb mov in (bad) push jno sub and dec orb sub add sub mov fildl inc mov xor mov mov movsb adc sub pop sbb fcoms inc sub fcoml imul xor add int pop push leave cli and sub push movsl push pop lret sbb mov fs adc adc xor lret pushf mov and xlat and cmc push (bad) adc dec (bad) icebp or pop aad adc int3 push or (bad) rolb mov (bad) fbstp mov fwait add (bad) mov push mov or or or push insb jecxz pop mov add cltd push in inc xchg outsb ror in or add cltd xor mov jne or arpl nop pusha add inc test fadds mov mov rorb inc fsubs add daa inc lret imul (bad) or data16 popa pusha xor movsl dec inc push mov or test jge and push pop inc outsl sub xor sahf pusha dec cmpsl jmp lods jno dec cmpsb xor pusha pop (bad) xor push call xchg or insl add mov lea adc mov jle mov xchg add (bad) fidivl hlt add loope inc call mov das jmp test mul or push and add xlat add (bad) xor mov xchg test adc mov lods adc or xchg andb xor adc in rorl daa add (bad) or or sbb jge lret adc mov add pop cmp xor arpl xor mov rclb add addl dec inc add xor add insb add add movsl and or add jecxz and pop fadds test or mov dec jns mov (bad) jno movb in inc mov movsb in pop stos iret sbbl xor fist mov add cli roll and xchg lea mov adc mov sub dec sbb dec ss mov pop shr and mov fcmovne inc mov xchg dec cmp xchg popa xchg lret and jns xchg lea sub movb ss movsb sub or cli adc lock cmp pop add out ret incb inc jmp mov and fwait imul ret add inc fisttpll test outsb addl and mov (bad) add push sub pusha fcoml lea or inc rolb add loopne scas adc xor or push lds out lea out sbb mov mov imul lea sti add dec add pop orb dec mov mov xor push inc inc xchg or push sahf add bsf pop negb mov push andb cmc js shlb mov pushf popa sbb or test imul inc mov cmp das adc popf ret sub mov xchg xchg pusha add in ret rol pop fdivl test (bad) add and adc lahf xchg in dec mov mov or jmp mov daa or add push or test inc sbb insl sub push xchg add add ss xor xor pusha test je (bad) jne mov mov inc es stos imul sbb pusha jno fmull or xchg ss or pusha std rcrb xor add xor adc scas jmp xor sarb or or fidivrl lcall fisttpll and adc xlat mov bound lea inc mov pop pop aad hlt and div or gs lods fwait pop xchg test cmp stos xor nop push push inc cmc adc rolb insl push or jo lock gs lds int pop mov ret dec aad loope imul test mov push arpl jo dec adc xor xchg add add sub rorb push sbb movb frstor mov arpl cmc xorl ret jne loope in sub sub dec stc xor test jl dec cmpsl adc and test xor xorb xchg dec cmp gs push mov inc push fsubs inc enter fbstp in aas adc fimull int3 cltd rorb dec and or and mov jo cs push and pop ss mov or add es push test imul pop xor iret pop pop wrmsr mov aad add xchg cmpsl pusha push xor rorb pop scas push push mov dec cmpsb cmpl inc pop pusha adc inc fwait sub xchg and and ret cmpb add xchg (bad) or outsl push fs jecxz pop dec or arpl mov dec push xor inc jp iret xchg jp test lds stos pop lods jmp or push pop xor loopne and mov movsl add push inc pop arpl lods leave movsb and or jbe inc call push or dec movsb dec jbe in fcomps push sbb popa pop mov addr16 xlat fmuls xor add lahf push pop xor movsl push out sbb (bad) push loop cmp mov inc ret (bad) movsb fs xor pop xor es cmp loopne sub xchg xor or mov andl je add adc add push and cmp lret stos icebp push inc pop or fisubrl push sbb fprem dec pusha dec js mov fdivrp dec sub popa cmpl pop sub repz mov xor test lods adc jo xchg pop test addb jbe addl xor insl pushf aaa mov mov cmp or (bad) rorl movsb enter cmp fist or in or push rcrb or jmp adc or adc iret adc fs pop sbb jp iret loopne test xor mov adc inc cmp cmp cmpl push gs in xchg inc sbb cmpsb mov sbb pop dec ret popa and test add add mov pop xor rorb andl cmp pop into and adc xorl adc push pushl sub movsl pop mov sbb popa sub push (bad) xchg cli arpl push xor lods or lods and mov inc in or sub wbinvd xor fsubl mov (bad) fdivl inc inc push jno out sub cmpl jb imul pop andl ret or mov shll int3 std jo add lock mov lea inc les enter aaa pusha mov and or pop lahf fwait xor pusha shll scas rclb and out (bad) adc dec enter xor pop dec adc fs push xor adc mov mov add inc sub lock lcall pop and mov das jmp pop in data16 out aam ja sub sub xor inc aaa sub xor (bad) mov (bad) mov or cltd cmp and ss sysexit add cmp inc adc adc test (bad) mov fadd push adc add popw cmp mov and cmc (bad) sub adc adc mov mov pop leave push out dec dec pop inc cmp push xlat dec mov xor aad adc addr16 add jo jns loopne mov decb inc and daa sbb dec jnp movsb je (bad) xor mov test pop cmp pop xchg sbb or cwtl in xchg xor xor xchg ja inc lea xchg pop push roll adc fs mov xchg push xchg les jmp es (bad) out es (bad) sub push mov sub sub addb shll pusha dec and sub dec adc pop mov cmp add orl test sbb ret insl out pushf xor push adc pop dec inc push jnp loope pop jno lods push push icebp or jb xor aam and es lret adc xor add inc add loop mov fldl push rclb push movsl add mov xchg or enter mov int3 add jne add dec mov bound inc fmul pop pop mov leave sbb xorl xor inc or pop add sub outsl or push jno ret inc je je xor xor xchg pusha or or inc sbb (bad) mov mov or push inc test xor or rorl (bad) popa (bad) test push ret and mov mov add loope mov and ds dec fldcw jmp mov jbe cwtl add add jl lds movsl lods insl jo xchg mov addl pop sub gs sbb push mov pop pop and xor push xor scas ficom outsl mov lea mov loop ret rol push add mov or fildl (bad) stos inc and xlat mov and test or add jg cmpsl sub insl and jmp les test notl xor inc sbb push add mov movsl lods cmp xchg outsl xor pop or cmp mov call int push fsubs enter js mov lds gs sbb (bad) xchg push pop or xchg add inc jmp stc pop or ret push adc add movsb adc push mov xor sub icebp cmpsl xor mov cmpb jmp push jmp sub dec xor scas ret sub nop and (bad) mov or dec pop push lods cmp xchg pop ljmp inc mov adc and popf adc xor add in or outsl mov lahf pop or or popa pop mov aad test dec inc jno or icebp fisttpl lds loop jbe adc stos and add pop fcoml cmp push jmp lret or and roll jae push sbb pusha ljmp sbb pusha int popf or fs setbe pop pushf pop popa enter inc sbb test sub add loopne push pop mov mov dec ds inc xchg dec mov inc cmpsl xor aaa jno inc rorb lea leave cs lods dec addr16 jmp popf xchg xor fdivs pop pusha xor out inc add inc inc sub jae xor cmpsb outsb sbb test test pop adc rclb inc cwtl clc sub lods shll add pop push aam pop adc ret inc cmp fcmovnb in fstps jb xchg mov inc adc icebp dec subl xor out lods jnp dec pop dec cmp mov das adc add lea pop dec inc loopne push sarl xor dec add inc xor loope xor lret jp add sbb test xchg popa inc shr je inc jecxz push mov add outsb push dec (bad) adc xor xchg mov (bad) and cmp gs ficom les mov xor loop or and add dec add nop and xor lods dec mov push push cmp loopne sbb push es cmc mov xor pop xor cmp shr mov xorb enter loope call fs xor enter mov pop inc push mov add mov mov dec inc dec or mov pop loope cwtl push and psrld insb push clc shrl rcll orl mov xchg mov xor adc rsqrtps jmp pop mov inc mov jae orl sbb mov mov cwtl adc xchg pop pop mov mov add xchg add adc jp les mov and add mov push push sub into cmp xchg mov add test loopne cmp or pop inc cmp dec ret sbb sarb xchg cmp cli xchg and xlat cmp sbb and mov xchg adc out inc push jp rcl inc xor adc test rolb mov pop (bad) mov xor popa adc mov ss lea inc xorb outsl and and inc loopne add or cmp or cmp in sbb add mov xlat add inc push enter pop data16 cmp lea pop add in or push inc and cmp popa dec jmp (bad) into sub add mov sub lods popa (bad) xor jmp movsb nop hlt mov sub ss and add ret popa sub sbb movsb or push fwait rorb add xchg outsb push mov pop out sub imul imul cmpb lret test inc cmpsl loopne insb pop fsubrp xchg fstps mov enter add and inc cmpsb cltd rcr mov sbb lahf cmp adc adc and xor mov or xchg dec or lret nop loope sbb xor sbb push (bad) test adc or fisub inc dec inc imul jns ficompl mov lret sbb pop add sub movb pusha jno mov aam add adc pop sub mov mov add iret test mov into push mov inc daa inc (bad) fdivrl cmp ja and dec es sub ret jnp dec enter jne add sahf mov xchg movsl or sub add mov xor mov or push leave insl int3 imul mov (bad) arpl mov push add fsubl cwtl pop sbb call mov push and mov sbb pop int inc test xchg sbb mov movsl adc cld (bad) xchg dec test cwtl xchg dec fsubl push mov xor add shr cmp jmp cltd xchg test (bad) and pop sub mov adc xor xor mov mov add (bad) sbb pop jl push lods fnsave xchg (bad) add push lods lods rorb movsb (bad) dec sbb rcll stos dec add lock cwtl mov mov test jnp das cwtl cmp dec imul dec xchg mov pop inc pop push xchg stc je jno mov and push dec pop mov cmp popa add int3 pop in sahf sbb rcr push in mov movsb jno das pop movsb add dec sbb in xchg add or and lods gs (bad) cmc ret or movsb cmp push adc inc or lret lcall or and sbb dec pop push dec je mov inc add inc pop out dec push sbb aad jnp dec pop (bad) adc (bad) and out hlt push mov xor xchg aaa xchg mov sub mov mov (bad) out fmull ss mov xchg dec pushf cmp pushf add add je push mov mov rcrb and imul push sbb imul mov out mov inc mov imul or rdmsr push add test (bad) rclb icebp pop dec je push dec int pop add aaa adc cmp aas xor xor pop push out hlt add push jl popa lods xchg jle sbbl inc adc shrl xor inc xchg jmp rolb dec xchg (bad) dec iret add dec cmp inc xchg adc and lods jns xchg add xchg add mov or jne shrb and incb pusha push rol inc dec and dec out push test xchg (bad) insl stos jb add dec imul aaa adc inc adc mov jae loopne inc adc stc push add in mov and dec nop cmp add jl popa andb repnz xchg pop shrb into xchg loope sbbb mov adc jo xchg ret or insb sbb xor test andl and test lcall jge nop mov add jmp inc popa sub lock mov xchg cmp jb mov pop retw cltd add into dec jg inc sub pop sti inc iret mov push shrb sbb sti fadds xor cmp xchg adc sahf xor or cmpl sub adc cmp push inc aas nop aam sbb (bad) xor je jg adc aam mov add test xor jno xorb inc sahf loope pop xor dec xchg add roll jmp add adcb mov mov sub or ds sar xchg or pop mov xor ret add push add xchg or movsb (bad) adc jp les pusha mov sbb add popf rorl cmp or push xor es dec outsl cmp sbb negl addb sahf (bad) mov xor adc add push mulb sub popf pusha mov lock adc addb xchg or add and repnz push scas sub xor add cmp cmpb inc mov xchg das and dec inc aaa push dec leave or mov mov and lods fadds adc (bad) xor mov int iret pop push test mov pop jo push pusha sub rcll adcl pop mov inc (bad) test mov inc test pop out lret or test inc adcb addr16 add and push push es cli jge dec mov mov mov inc dec sbb cmp mov pop xchg sub call fwait es rol adc mov stc test fistpl push mov enter adc xchg mov sub icebp cltd arpl pop insl jno aad inc mov xor cmp mov push call pusha inc lods andl add push imul jne add add mov mov ja adc cmpsb push repz jp and mov inc xor mov sbb pop arpl imul sub nop test dec ret pushf addl fcomps imul inc adc push rorb xlat mov cmc cmp and xor (bad) xor pushf pusha sub push mov in dec or rclb fs arpl or mov movsb daa sub push add mov test push or mov rolb popa test jo jge and and shll (bad) xor or adc mov mov movsl sub add bound sub and sbb (bad) sarb jl xchg adc (bad) xchg pop call sub mov xchg rorb adc clc cld pop ret sub sbb pushf out popa or add fs or (bad) inc jns out adc and inc rcrb clc push mov mov xchg or sbb inc sbb sub (bad) lea push mov and jp aaa popa js loope les or mov xchg imul aas or cvttps2pi lcall jmp mov push mov sbb cmp and or push pop fiaddl mov sbb cs fdivrs subl push popa sbb mov mov stc pop fnstcw add or cmp pusha sub leave mov xchg loopne sbb mov push sti or inc add rcll mov xchg lret add add (bad) loope orb mov xor pop sbb adc shrb mov inc sub pop jmp xchg add or pop pop and mov sub sbb sbb sbb gs leave mov dec or cmp pop pusha and adc add mov cmp test add and movsl inc jp iret add jecxz arpl push test insl jge add roll sbb and and test mov imul popa adc add jns stos push and aaa cmp or or lcall cmp adc adc cmp nop mov adc mov inc pop xchg sarl adcl xchg push imulb sbb xchg out sub inc call (bad) mov mov pop mov pop mov xor ret sub test fistpl inc cmp inc lahf sbb mov inc pop sbb mov mov in cmp pop cli mov and adc cmp adc or jbe xchg lea xor sbb sub stos jmp insb sub mov and hlt mov int or add xor loope adc cwtl pusha jne pop adc mov (bad) repz lret add mov rcr dec push rorl ljmp pop fs std imul inc mov sar icebp xor orl daa inc push and mov andb cmp mov stos mov or add out mov dec mov inc mov fcmovb test xor adcb sub and sbb inc xchg int cs shrb push or xlat pop xchg or adc test inc test sub clc and cmp sbb cmc ret js fildl adc js jnp push sub add rorb dec and enter adc sub push popa mov ds and imul rorl and xor adc sbb roll cmp pop add sbb xchg or xor and mov popa adc test aam imul cmp pop cld xchg sbb sub lock xchg cmp test arpl lea nop fwait xchg aaa or in sbb jmp pop sub insl lea mov lods sbb je jnp sub mov popa les not fstps inc or xor fdivrp add mov je jne add adc push inc jmp pop daa loopne push (bad) movsb inc cmpb xor addl sti mov test or cmp inc enter inc (bad) add push jns inc subb aad xor cmp xchg int sbb cmp cmp or or jmp insb xor xor adc cltd arpl xor repz xchg sbb (bad) adc or jo (bad) (bad) adcb jne and add in xor or jno push or pop cmp arpl jge test inc pusha adc imul adc js mov lds mov loope popf ds lcall gs rclb nop cmp test dec jns and fwait pop or ret pop push pmullw lds adc lock mov add (bad) hlt push (bad) aam (bad) xor adc sbb lods xchg ret (bad) add push cmp and xor or mov sar xor add mov inc cwtl or jp out sbbb mov and cmp jmp sub fisubl jmp ds adc mov or cmpsl shlb out fldcw arpl (bad) push lock xor xor int sub dec adcb aas xor inc sbb test adc and push pop and inc jge inc dec push mov push nop inc out test push ss xlat and pop mov cwtl or cwtl pop arpl outsb ret xchg sbb in cwtl dec ljmp push or mov cmp daa adc adc insl and stos imul rorl outsb xchg in mov mov inc roll push enter dec sbb add sbb ret jp pop les loope cmc add pop sbb pop sbb dec push imul rolb xor cmp in cmp mov pusha lret jnp add cmp push or stos subl add add aam pop add push mov mov xchg mov push adc or pushf add mov add mulps add popf push push xchg mov mov cmp jmp xor adc in xchg xchg movsl test (bad) xrelease add xlat addb out xor xchg addr16 icebp inc or daa or add sub and lock cli push lods push aas push xor dec or xor arpl sti xor daa xchg sbb push movsb pop xchg jno mov mov mov mov and in jmp jnp xchg nop xchg fbld xor (bad) lret (bad) jb sub xor inc jecxz nop in xchg inc or aas mov ds inc jo or ss sbb push xchg mov push jno push mov add push or cmc cmpl xorl (bad) dec and jne icebp mov (bad) pop mov loopne and lock mov int3 call cwtl adc ret andl xor test pop mov icebp jb pop or mov fisubrl bound orb test xor je popa xchg jno pop xorl (bad) dec ret inc sub gs mov sahf inc das roll push push lret adc mov movsl inc pop sub inc outsb enter mov dec divb nop mov or and lret sub cmp jge or or arpl test sub nop push leave (bad) cmp (bad) xor or xor sub outsb (bad) (bad) add mov inc xorb (bad) jmp and dec imul push fwait add pop dec add sub js jbe sar mov bound add dec cmp test fs mov daa xor loope sbb jge ror pop or ret or test ja xchg dec adc movsb ret dec mov enter mov add mov bound sbb jp inc pop sub cmp fimul xor imul inc vmwrite and ret repz xor fs sub sbb (bad) cmp and add push jge adc outsb pop xlat xchg pop mov jge popa push and jecxz jo ret and mov mov xchg cmp jp pop std mov pushf inc mov es mov addr16 sub adc push jo inc dec (bad) nop jne loopew nop sbb push in loop pop aaa cmp xchg jno pop mov mov and dec xchg jb sbb dec ret cmc gs movsl nop outsb or ss pop and loopne imul xor push daa lret xor push sbb jbe ret movsl mov add jno in mov js mov fsubl pop in xor adc push xchg rcll mov sub and adc adc add push test jp sub imul and mov inc and mov outsl loopne ja leave push add cmpl push loop push (bad) adc push or das fwait rclb test repnz xor (bad) sub aaa push push pop or in lea mov mov and jp mov pop sub sub int sahf or and imul sub xchg jne and adc pop and (bad) mov xchg xor xchg and jnp popa movsb dec sbb xchg inc xor xor add cmp xchg addr16 adc pop nop adc rol xchg cmpsl mov dec test inc xchg inc ljmp xchg in lods test mov cmp leave fstps sub pop and loopne and pop mov or incl mov push loop sbb nop mov mov fsub sub aas cmpsl xor push xchg jo jo mov or push subl jmp shlb or loop jnp cmp xchg inc mov sarb cmp jg dec mov sbb and push dec adc push dec xor xchg push sub xor jno adcl xor lcall add adc sub sbb dec pop lods ret test rolb xor push and add loop cs adc sbb outsb add popa sub fadds push sub jp mov imul pop nop mov push jnp loop fild dec das imul inc neg mov es inc pop inc loope fiaddl andb mov movsb lds lcall repz test (bad) in push xchg xor adc or adc dec push test add xchg or xor or push mov sbb xchg in fcoms pop xchg ds ss xor test rol rol xor sbb mov ret mov in cmp repnz movsl ss popa mov leave outsl add lods push addl inc popa sbb add mov push jo add sub in rclb mov enter pop jnp test pop fsubs je inc xor xchg sub mov jbe out xor or push subl add test or pusha and insl add cmp outsb xor mov xchg push les push js imul mov aad test adc jecxz push mov call popa lods aam fiaddl dec inc dec inc xor das rolb jbe outsb arpl mov jne arpl ss add lds shl push mov sbb dec (bad) adc sbb je ss and dec add ret ret pusha (bad) adc pusha adc andl inc arpl push inc cmp subl mov adc cmp aam adc inc inc outsl lea test push cmp cmp and push aaa dec sarb (bad) xor nop dec leave sub mov push pop lea adc and movsl daa int3 lcall loopne and mov xor cmp inc (bad) dec add adcl add dec or jl xor xor js xor inc push jns mov pop pop adc adc mov sahf es aad or ret add fisubr ret (bad) mov jmp cmp dec daa mov and int test insl mov in call dec arpl push sti sarb loop pusha xor jl ret or pusha sub mov or nop xor cltd xor pop fisttp lret (bad) (bad) insl std inc dec add lds sqrtps sbb and lret jecxz xor dec push pop push inc adc ljmp (bad) xor add xchg lock sub int push shlb or xchg fs add mov int pop add inc and test fidivl scas mov (bad) lods lea and stos lods pop mov lea add pop data16 (bad) xchg add cltd dec lds mov mov push outsb cmp push pop mov mov mov (bad) jb shl adc popa inc inc rol addl and add je dec pop add inc xor inc mov pop ds add dec rcl sbb adc sar xor adc mov sbb or out pusha push arpl (bad) mov insl lds pop shr cmp insb je ljmp cmp mov add (bad) and jne (bad) xor mov cmp push and xor (bad) dec mov jecxz or dec xchg fsubs push inc or inc mov xor ds sahf inc or lods mov jmp dec mov xchg xor inc add sbb adc xor mov lret and mov adc gs mov inc adc das push ss (bad) mov adc pop inc xchg mov pusha sahf adc movsb push int adc or fwait out in dec xchg push pop push rclb push inc lds adc and bound or mov (bad) and xchg mov sbb aaa add xor icebp sub subb pop ret or xchg mov cltd mov lock xchg mov mov cmp sub test adc sub lahf add add dec pop movsb cltd les mov xor ret lahf xchg imul jge xor sti dec repnz sbb fcmovbe cmp add test sub add push std push stos add ret pusha aam add test lea or add inc mov inc or and sub sbbl adc pop lods pop das call loope js and inc xlat shl mov and and sbb cmp inc adc rep pusha or popa ja pop (bad) mov pusha test roll adc enter insl pop pop jae xchg stos test dec in inc or gs xchg addb dec in mov add xchg lods outsb roll pusha test pop mov lods sub inc dec xor mov inc lret inc sub into dec stos and sbb xor or gs and adc test add pop adc das (bad) int mov out dec sub push sub flds dec stos pushf sub add or popf popf or and xchg xor insb or rclb (bad) jp push mov pusha dec mov dec jmp cmp pop and (bad) push cmpsb test and xchg aas cmpsb shlb movsb fisttp (bad) push lock add popa shl xor into xchg scas scas call std insl or (bad) aaa jo dec scas das xor xor stos rcl add scas or (bad) push dec inc stos insl loop adc jno push adc sti movsl cmp jae fs xor mov movsb xchg test add or sub mov shlb shlb popl sbb xor or push xchg nop out and push mov xor adc andb dec shr inc pop xor mov mov xchg movsl cmp lods pop (bad) xor leave daa and add pop push add mov push ret dec bound sub xor adc add push xor add sub je mov sahf adc or mov xor pop lret outsb aas lods sub jecxz xor inc (bad) xor add sub adc in sbb add mov pop jmp mov add nop mov sub mov xchg lea in test mov cmp push inc pop push fdivs jo inc add imul pop or inc and cmp pop lods popa xchg xor fsubs mov mov sbb mov int3 mov pop xor adc sbb sti movsl cs mov xchg pop inc jo adc (bad) dec mov mov call cs jb sbbl aad cmp xchg nop fwait mov xchg nop fisubl cwtl mov cmp push imul adc push sbb in xor mov outsb insb jl sbb or (bad) or icebp cmpsl mov aad cmp adc cmp (bad) sub jl and inc std sub lods adc movsb pop or adc ret sarb clc xor rolb sub mov adc clc xchg (bad) mov mov movsb or and shrl lret adc cmp lods adc jmp mov mov mov xchg popa js and ret pusha add das aas shlb and mov jnp sub fwait dec adc push xchg cmp ret icebp movsb mov js add test popa and mov incl xchg push xchg add fs icebp nop xchg pop dec mov inc jno aaa add push aas mov sub adcl icebp shlb mov lcall imul xor fdivs adc imul xchg push xchg and xor sbb dec leave jo icebp inc test adc inc cmp inc sbb xor fs sub xor sbb lods lret pop sbb mov sbb pusha and jmp loopne pop cmp out cmp rorb in lret outsb fldcw jge fildl dec rorl cmp int3 lcall and btc dec mov sbb or push outsl and xor inc (bad) stc push push cmp arpl lods dec add enter lods xchg lods rorl add inc nop sub xchg sbb jmp andb mov xlat pusha push pop add push cmp in xor sub ret lcall add mov sub adc and push roll das push cmp bound stos or sbb popa dec inc sbb adc push lds leave push aam fldt rorb add cmc mov push (bad) push adcl lods push mov (bad) imul xchg rclb cmp and adc xchg push inc ljmp bound xchg dec loop xor lds in jecxz jo pop pop and xchg test shr mov fsts sub adc mov xor mov or lea or add jns and adc and cmp dec xchg xor sub dec and pop xchg xor insb push add iret rclb push xchg cwtl and test or xor mov into xor jb and and push pop dec movsb cmp aas ret out (bad) xchg repz ret and sbbl adc inc lret in push dec in add inc mov inc mov daa inc push push inc and sub loop push (bad) clc add and sbb sub pop xchg mov push pop aaa pop adc hlt sub test push lcall dec loopne lret adc dec ss aaa inc xchg aaa mov adc int ret je add repz arpl add rclb sahf pop and outsl sub bound pop mov ret mov add pop xor and arpl mov push inc inc addb adc sbb sbb pop dec mov sub cmp inc adc cmpsb fwait sbb cwtl xchg add test test mov pop push pop add lods in mov dec adcb pop imul push and aas js jp fstpl int cmpsb or xor xchg shl dec sbb popf or inc mov aad xchg pusha loope fiadd ss dec xor fnstsw cmp (bad) pop jmp or aaa pop push push mov push add scas inc leave add dec nop cmp addb xchg add add add cmpsl lock lock xor cmp test lods inc orl pop dec or dec frstor xor mov mov sub mov push (bad) xor xchg addb cltd inc cmpsl sub jmp test jmp roll mov sub xchg rolb cmp pop mov subb add mov adc mov sbb imul add cmp add (bad) stc fwait mov insb bound fsubs dec mov adc loope cmpsb shll xchg xchg xor ret inc lret or aas jo call addl rclb pop inc lret ret fildl or popf or psubusb imul or adc xchg orl sbb sbb pusha rolb adcb xor lahf xor adc pop imul sarl fbstp sub push (bad) xchg or flds sbb mov mov or xor xorl pop or cs sbb xor int inc enter jl rclb jnp push push arpl cli push shrl sbb xor addl ficomp test mov pop loope pop sahf loopne inc dec jnp push mov xor outsl sbb dec scas popa xor insb je into mov xor daa xlat lcall dec cmp push fcompl xor add roll mov xor mov pop inc adc adc sarb dec das sbb test add add test iret xor add rorl mov push xchg bound pop mov mov ret add mov shl rorb sub add aad js sub mov jbe pop push or dec sbb loope dec xor lcallw sub cmp jae sbb orl push shrb scas pushf adc mov pop xchg mov cmp addb test push push xor hlt daa xor cmp mulb test lods xor lods insl arpl dec and jnp orb dec pop or pop xor dec sbb iret push lcall xor inc fmuls pop push mov push sub add iret add lret push add imul mov in inc and xchg xchg jb movsb inc push or xor inc xor mov xorb ret ja mov mov pusha add adcb bound inc mov xor pop int push cli xchg orl mov sbb add cwtl dec addl xchg cmp and (bad) sub leave inc push jo popa in stos ret mov dec pusha into xor mov or add sbb xor repnz lods lds gs or and mov fiaddl dec adc lret ret mov mov jmp inc subl xchg push push and aas sub ljmp add jae xor mov inc mov shll movl lds es icebp xor sbb sbb xor shrl jae dec xchg je inc lahf sbb cmp in pop sub or and and aam in call or xor sbb loope test mov popa lea loope sbb lahf and fdivl jl sbb and jae and dec or adc jno or sbb dec repnz dec (bad) pop adc push mov cmpsb loopne imul (bad) ds push mov add daa movsb add fs xor insl dec dec outsl add clc sub add xorl xor sbb lds daa shll xor arpl cmpsl aaa hlt insl add cli add js xchg sbb jp mov gs and add mov jp lea inc daa add sbb and sub push fcom mov pop cmp popa enter add xchg fstl das or adc test js mov out nop lods arpl and lods or jmp out (bad) mov jge jne mov lret adc cmpsb nop fldln2 stos or gs rcll or pusha inc ss insb mov add sub aas ds loope mov bound jb jne popf sbb cs aaa insl push push sbb mov xor push xchg or sbb (bad) sbb push add adc enter xor mov adc mov lods das daa add add xor test xor jge add inc loopne pushf lret xor fs orl aaa lret sub (bad) and (bad) scas pop push ss cmpsb mov outsl lods dec aam push mov jmp inc mov inc sbb insl adc push or mov or xor popa and mov (bad) dec inc mov in push cmp adc (bad) (bad) xor xor repnz add push dec leave inc add add movsb and add jo xchg fbld pusha and add adc (bad) rol sbb dec sub test test jp or xlat and xor jne add scas loop inc pushf adc xor addl and inc xor (bad) and xchg xor add mov ljmp cmp sub inc jne or imul add cmp in std dec imul or mov xor xchg xchg rclb cmp jl cmpsl cwtl pop adc sti push push mov aas scas mov inc push adc or insb shll inc add add and rorl inc cltd xchg popa sub add sarb push test cmp xor movsl into das scas movsl (bad) add xchg sbbl roll pop add or adc outsb es shlb mov cmp in jnp rcll mov add fidivl sub mov shll jo fwait js xchg stos mov add and and dec rcrb xor push insb inc rorl add inc jmp add insb andb and xchg and (bad) imul adc lahf ds std xor test gs xchg mov jl (bad) fcomps push imul loope and cmc xchg push add cmpsb scas shlb shrb loop lea adc int inc inc jl les push sub (bad) mov xlat aam ret jns rcll and addr16 (bad) sub insb cmpsb fnstenv popl subb rcll push bound inc enter mov push add rolb repnz mov sub and fsts rolb jno xor test xchg mov xchg or lea inc mov bound or sbbl xor data16 ret cmp test and sbb jns fiadd adc or push inc out or inc xchg and dec leave pushf push sahf and xchg mov xchg int3 test sub push dec rcl xor or xchg lea or stc enter cmpsl cwtl mov cmp mov insb dec mov test sub xchg js dec sub popa cmp lds mov add add test or imul data16 das mov ret and rorl jmp mov daa cmp inc push loope loopne push and adc pop mov sti test jge ret xor dec ret out insb sub mov icebp dec sbb mov mov xchg inc dec js cli fnstsw adc int3 sbb xchg movl dec or jecxz and nop mov pusha lea imul push (bad) jp cltd push ret pop sbb arpl movsb xchg (bad) cmp push popa or inc or pusha (bad) mov call sbb push dec cmp add test jg add xchg adc or add and add sti xor paddsb and imul dec push adc jno xlat xor cmp adc ds and xchg push push pop xchg mov mov pop mov add hlt dec stc jno push dec dec iret and repnz cmp call pusha pusha fcomps xchg push outsb pop and gs dec mov pop dec add jne mov roll sub and test insl dec cmpsl push adc movsl fwait and sbb test inc fsubs test xchg les mov adc add in loope inc pop adc add cbtw dec xor mov sub gs xchg jo cmpl test and xor addl test xor les fwait fwait (bad) xor xchg cmpsb xor roll sub or push rcl add dec pop imul ret mov popa jno fsubl or ret pop (bad) bswap les aad sub outsl pop fstps (bad) loop int and sbb sub test insb or rorl aaa pop and test test rcrb inc jecxz mov adc stos jge (bad) xchg sbb (bad) or or or or or lret aaa xchg pop and add ret pop pushf aad mov or sbb push jno arpl lods lds push and test (bad) mov imul int3 xor shlb daa xor cmp sub jle sbb roll mov stos lea inc pop mov add and mov cmp or ret inc aaa andb jmp mov pop push add mov xchg fyl2x push push dec rcl in notl lret pop cmpsb jge addl mov ret pop aaa jecxz and lods push add inc jmp aam inc jae es cvtdq2ps or jno adc mov pushf fidivrl mov jbe dec sbb lahf sub or inc xor mov loopne xchg push xchg add mov xor jno hlt jo dec mov sbb sub jnp lcall inc das mov loope push lcall xchg adc xchg adc cmp mov or js (bad) lret std lea xchg adc add xor cwtl les mov add push cwtl test add leavew push mov adc mov std (bad) fcmovb add adc xchg push shrl lock lock mov sbb mov stos xor xlat cmp cmp in inc sub daa fidivrl imul xchg pop sbb or fwait add fwait add jmp hlt add mov and dec js mov js addr16 dec lret jecxz and xchg icebp jbe push (bad) pop rorl adc orb das mov dec mov cmpl xchg or push in test xor push xor adcb sbb xchg shlb scas pop fs sbb mov xorl jmp jne (bad) cmp inc push sub stos lret or mov xchg ret xchg add jo push mov sahf es call xchg lahf mov ficomp mov lods and out sub pop (bad) loopne fsubs les outsl add je mov sarb inc loope std xchg xor xor dec inc xchg popa cmpsb sub sbb add (bad) jns lock push push push mov add mov xor add sub add xor shrb dec push mov lods xlat cmp test mov ds xor and insl lret inc cmpsl lods xor fsubl xor push rolb out arpl mov js mov das (bad) xor fistpll cmp push outsb jge xchg mov rcrb and mov sub push cmpsb pop outsl add loopne mov and push test js lret mov lret or adc mov pop jae dec pop ret pop mov pushf dec sub add cld pop mov jo push and xchg dec or push gs mov into ljmp sub mov rorb pusha inc or arpl or cwtl sbb or sub sbb rclb movsl xor ljmp inc cltd push sub pusha mov aad les dec xchg sbb cmp cmp jmp or (bad) pusha add rolb cmp push dec add sub rcrl and test mov popf and les push xor add aam imul xchg cmp lret adc shrb mov and adc inc or test cmp fwait mov jecxz xor insl test and and inc lcall add jb popf mov (bad) gs loop jnp push xor and cltd mov and rcll movsl xchg cs stos or adc and cmp sub xor sub (bad) aas (bad) test mov faddp and ret sbb out movsl insb sbb andb scas rclb or push iret sub les or loop inc inc ret cwtl aaa lods adc adc dec inc xor gs push dec and nop push push add rcl jmp mov aam or rcrb pop add repnz jnp xor push in call or xor mov sbbb orl and lea inc sarl cmp add xchg xchg inc sbb nop lea or (bad) pop loopne jne xor add pop xchg push arpl xor (bad) lahf arpl movsb or jmp sbb (bad) and add mov push or adc jno add rclb sarb adc add dec add and aad add or jb lret adc xor stos sti xor test mov and sub sbb fldenv sbb in push push add or ss lods cwtl es movsl std dec lea add or lcall add pusha sub mov add xor inc mov or xchg ret loopne je jno insb lret mov sarl movsl adc cmp movsb adc pop imul xchg and and and loope shrl icebp and ja and or mov add dec movsl add pop test lret into mov pop and shlb cmp lods andb and cmpsb fs outsb adc and cli or mov and mov test sbb pop fstpl add mov test aam sub int and popf xor scas dec mov sub rclb push pushf in cltd pop xchg (bad) sbb xor add js add add lret add sub xor mov and cmp ret sub push push and or mull test and xor add (bad) aaa mov mov ss (bad) sbb (bad) dec pop dec loop loopne ja cwtl add fs aam and mov pusha test test test cmp push inc cltd addb xor mov mov orl or or xor orl pop lahf dec lcall test inc iret aaa leave xor mov clc mov dec xlat dec sub cmpsl imul repz cltd addl xchg push movsb sarb dec lret rorb nop xor or or loopne aas push aad pushf mov pop sbb xor xchg cmp mov jo add aas shll push pusha or mov mov aaa mov xchg push (bad) xor dec ret arpl xchg aas adc (bad) rcr andl ret adc and xchg jmp cmc add mov call add in pop adc inc jne add xor fildll sub (bad) cmpsb pusha inc addr16 bound lret inc ds sub xor sub pop jmp lock xchg and pusha inc jl xchg mov jae dec adc sbb adc loopne mov ljmp jbe push or mov xor rcll frstor add xor xlat repnz dec aad mov cltd sbb sbb sbb push cmc sub mov addr16 dec adc lret dec sbb and mov pop lock add mov iret adc nop mov dec arpl mov or pop sub mov inc subl jg cmp cmp mov jno xchg push and popa rcrl cmp js dec mov fsts add pop dec ljmp jmp mov movsl adcl iret pop lock sbb xor push sub sub or mov mov int3 int test push xchg sub xor inc dec cmp sbb or push jo xchg jo sbb pop dec ret gs iret push add jmp sub es push lods and arpl adc aaa sub xor test cmp add inc inc ror addr16 dec enter (bad) mov and shlb or or daa xor sbb add add or mov pop fimull shll cmp fwait xlat lcall (bad) xor jo push jnp and (bad) jae mov loopne and jge push sbb and adc dec roll outsl push movsl movsb xchg add or dec adc daa leave ret cld cs add inc pop test nop test out sub (bad) lret (bad) mov pusha mov insl jmp and inc adc dec mov and and mov xchg mov pop pop adc dec cmp mov mov and lods (bad) jge mov pop inc cli jae add adc inc lahf xchg adc cmp lods fild in jmp push cmp mov cmp xor insb (bad) adc jecxz inc shll arpl jo,pt adc sub inc sbb addr16 push add and mov js and lret push push sbb dec gs test in lods hlt or std movsb pusha push pop xchg or dec loopne cmp aad or xchg jno test leave orb push mov popa nop scas add dec xchg stos mov es xor and or dec dec push data16 jo sbb xor xlat xor inc adc push pop ret nop cltd sbb test push scas shlb cmp ret cmp sub add lret outsl push repnz or xchg adc pop sbb or lods xor and fimul xchg mov lret sahf dec aam imul pop sbb sbb out pushf ret fs lea pop jno push cmp icebp sub push dec mul sbb dec dec and mov push push insb pop pop fstpl or cwtl es inc test push or xor pop mov push dec addr16 or pop jns subb lods lret aaa and popa pop lea adc dec sbb cmp mov cmpsb fs fdivrs xor sub or mov das shrb sub movsl add out and sbb sti je adc xchg pop lods imul andb movsb jb aam adc sub or in xor inc lret sub mov popw mov shlb mov (bad) xor imul flds icebp or push pop and mov push cld cwtl fistl les xchg test nop repz adc pop xor sub mov lds les sub rclb es repz sub add leave shll jmp pusha fdivl pop push jp setle and mov lods add data16 sbb aaa push mov mov arpl or add pusha dec in push lds subl pop cmpsb subb popf rorb out adc inc aam popa or xor mov ret fimul cmpsb sub sub or add inc sbbb cmpsl rep inc mov and mov rol and movsb int3 ss cmp push push mov xor ss add test adcl imul sub sub sbb lods cmc cmp mov dec push mov or xor rcrb push stos and cmp mov or adc sbb loope or push pop push xor lret cmp xchg xor mov (bad) pop fmull pop or xchg je (bad) inc stos sub shr repz ss xlat xor sub ret movsl addr16 xor sbb jo aad push xchg nop fldl sub xor sbbb sub and xchg pop xchg in push leave fisub lods inc (bad) sbb inc dec addr16 xor lds nop and cmpsl aaa push pop inc push or icebp into xor xor cmp mov ret (bad) add and mov ret cmp test jo cmpsb lret mov daa rorb mov jge loope xor xchg adc push mov ficomp test loop popa cmp cmp aam add aaa loopne lret xchg lcall sti fldt movsb and icebp inc call fwait aad test pop xchg sahf push cltd ret xor test and cld js shld mov xorb ret rclb pop sti js or je sub daa dec stos mov adc cmp mov lock fs aaa add loop pop inc (bad) loopne pop das loope pop js dec clc and xor jge cmpsb sub mov and sbbl sub xlat adc dec arpl and add js mov pop mov lret or dec enter out or leave std sarb inc mov (bad) push xchg aas mov adc dec rcrl sbb popa pop movl sub add sub or push cmp ret fldenv mov cmc insb xor shl mov loopne jno shr int ljmp nop cmp or lret mov daa out scas or or jns adc pop mov xchg inc out sub sub dec and dec jbe jmp cmp mov and scas mov scas inc sbb mov cs inc jo and sbb pop xor xor push adc push sbb shrb push mov (bad) xchg sti lock sub or loope lea cwtl or inc sbb sbb pop push mov pop std rorl nop (bad) or adc inc add pop mov or adc add dec mov cmp loopne xlat xor push lret cmp xchg inc and and mov addr16 jnp mov add inc sub inc mov mov enter xchg lock out inc fwait add mov mov sbbl add ret js dec dec aaa ficom pop sub add cmpsl mov daa lea negb fucomp int mov fnstsw sbb sbb shll mov adc and in xor inc dec cmpsl test inc fildl mov insb sub sub sahf ret lahf and adc xor push in inc or cmp mov dec pop rorb cmp push xor ss cwtl and xor push mov push pop inc roll lods loope dec imul lea jo xchg andb insb aas push bound xchg arpl xor mov jle sub add add loopne sbb mov cltd imul test lds ret daa xorl loope sbb pop or vmulpd es rorb cltd jnp movsb xor test adc cmpsb rorb push jecxz xor adc push pop scas lds sub out add mov xor dec rorb mov lcall sub ret xchg xchg mov jnp add sarb xchg push sub mov pop inc push loop les or popa sub rol popa sub mov loop gs sbb xor leave dec inc or add add sbb fs cmp into adc xor aaa pop mov adc or sub push ret push imul inc loope fsubs or dec adc rcrl sub mov mov xchg insb add loope xchg adc or test lods push rorl inc adc repnz or cli cltd and (bad) mov insl mov addr16 test rorb shlb mov push jmp out jno ret rorb dec cli cmp (bad) mov ret aam push and or mov sub add inc into lahf inc lret adc inc push pushf or adc cmc pop mov gs js push add pop (bad) and mov jmp or and push mov xor or jno push into push xor mov sub ja sub movzbl cwtl push gs mov push and sub ret mov mov adc rcrb or xchg add out inc pusha pop fwait mov cmp out fwait add cmp popa sbb xchg add (bad) or and inc adc and fsubs xchg imul dec xchg xor inc push or mov jmp and mov push adc in pop sarb cld lds sub aad and dec push mov jmp xor fs inc or lock dec pop fwait sub les inc sub mov xor and push and and adc xor lahf (bad) int jle xor adcb das pop push add push mov lods sbb test xor dec add sbb cltd inc jns add imul popa add and daa ljmp push or cmp pop les pop xchg mov icebp sub push push sub (bad) xchg rorb into xchg sub dec mov or inc sub dec dec xor xchg gs cltd int lea test mov cmp add pop mov xor xor push imul xor cltd clc sub push sub hlt (bad) mov push mov movb add and rcl pop test jns and mov pop push mov rcll inc movsl gs in pop xor inc ljmp mov inc imul xor sbb mov pusha or jo push test sbb lds imul adcl pop orb in push inc adc mov xor or notl inc loop ja xchg rclb fbstp and sub add jbe sbb xor pop mov add add add adc lods and push faddp sbb in mov jecxz lods aaa push inc push cwtl xor jae jns inc xchg in mov lea xchg sbb insb jo popa inc push pop lea mov xorl stos or ret or xor mov fcomps mov ficoml loope xchg js enter fiadd fidivrl pusha add inc loop lods popf sub push je mov inc dec aaa adc or sbb stc sbb out das pop adc shrb cmp shrl pop mov mov xchg dec test mov mov or mov lods add or xor mov mov and leave and test cli imul or pop ret jno add outsl insb jecxz add push js dec popf xor std in adc push and xchg int scas popa movups adc adc mov cltd mov inc shr sub nop movsb shrb pop aas (bad) xor lea jp pop (bad) xor addb cmp mov inc push repnz dec and add inc jne inc xchg inc pop xor dec inc jns sub dec sbb add push cmp xchg test xchg data16 movsl add sahf mov mov into pop fcmovb fistpl fstpt adc adc jno inc cmpsl sbb mov push lock lret pop js inc fcmovbe bound lret xor cmp xchg xor push mov pusha cmp push add mov cmp mov sub inc sbb sub add or mov dec aad and dec js pop leave lods hlt (bad) inc mov rolb xor mov ret jns xor fidivr rorb sub imul ret add enter pusha inc dec or insb leave cmc sub or xchg mov popa jmp stc insb or ljmp pop xor xor push adc add mov pop xor aaa es ret push inc loope add nop and push push loope popf mov dec jecxz sub loopne es or cmp fmul js dec mov dec iret test pop movsl inc arpl mov cmp pusha sarb mov shrd xor add xor mov outsl push sub cmc and push push pop xor xor loope (bad) popf or lods push xchg sub xchg xchg cmp adc xchg pop and cmpsl adc test xor cmp sub shll add sub pop xchg aam test mov xchg pop lock sbb cmp aaa popa pushf outsb in js lea shlb xchg addb daa lea xchg mov add bound add mov rcll jb pop xchg inc xchg and mov mov add call dec out inc mov lahf fs mov ret inc xchg cmpsl popa and add rorb or adc xor xchg inc sbb sub and imul into loope xor and adc imul and aaa jp inc add adcb pusha adc cltd pop in in mov repz push cmp push add ljmp rcrl fs or xor adc jns sub mov imul adc xchg mov mov hlt mov adc and jo xchg stos push pop popa stos add xor inc inc or add pop or add dec sti xor jg push mov ds aaa jns mov ret push add pop add push imul mov xor mov jne xor insb insb jo lret xchg xchg mov daa and inc sub xor les or mov mov data16 inc jmp pop mov push pusha inc lods pop das sbb xor or or cmp rcrl add add or inc jae sub inc xorb pop pop pop xor push out mov push rolb jb mov dec push mov xor adc rcrb aaa test pop addl and cmp insl adc cli std adc in sbb mov andl leave nop inc add xchg iret mov inc int3 inc aam fs outsb and imul arpl lret fwait inc xchg xor inc or mov loopne or mov xor and xchg sbb js scas mov add adcl fmuls daa dec mov add enter pop aas leave mov add or sti sbb popl dec and jno adc js xchg or pop leave cmp aaa dec or xor out pop add mov sbb icebp dec iret les cmp fidivr cmp or inc lods icebp sbb xor xor jge xchg sbb loope repz ret jo test loope subb xchg mov sub add xchg mov inc cmp popa adc sub movl push push pop adc mov ret pop pop daa jge xor andl inc push stos mov dec sbb mov push mov sub or imul frstor mov mov xchg adc adc loopne,pn or xchg adc lods jmp leave cmpb insb pop or xchg subl cmp sbb lods popf add fldcw xor push pop and leave mov add (bad) rcrb lahf push mov cmpsl push dec xchg popa les and pop add ja add pop faddl add xchg bound fnsave or loop push mov pusha lretw dec rclb mov add or lds mov dec nop cmp mov adc xor repnz add jne sub and std sarl aaa lods or xor xchg cmp test sub pop jmp ret inc or test mov xor jno subl mov and lret cmp insl fldenv movsb shrd and movsb xor cmpsl add loopne daa cmp ss cmp push jmp sub pop inc aad jge pop xchg mov inc and dec jle or sbb lcall jnp xor adc dec inc add add xlat stc adc dec sbb push adc and add es imul scas cmp (bad) sbb cmc sbb (bad) adc nop lret or repz in mov mov push (bad) aaa cld push loop imul inc in sub popa push cwtl xor pop jne lods mov arpl add movsb adc push inc mov dec push add or sbb pop mov popa sbb or xchg dec sbb dec add dec dec mov sbb xor add jno aam test popa push mov js xor push insb xor rorb inc add and dec push push stos inc lret mov push daa hlt (bad) adc aas (bad) adc mov mov xor or sub sbb and add dec sbb push lock mov mov fwait mov imul sbb inc roll int or xor push and lcall jb mov fimull mov push or sub leave imul dec pusha push xor sbb mov mov (bad) or jg xor mov inc xor xor push xlat (bad) scas add cmp sbb mov in and push insb imul out in push adcb lahf xor gs aam inc out fstpl lahf pop push and lret or xlat hlt imul or les inc jp inc adc imul push adc xchg xor jo icebp arpl or push lods add sbb fiadd cmpsb mov xor or gs or sbb outsb cld nop xorl loope sbb and and sbb cmp imul jle test dec pop mov inc dec pop sub xchg lret cmp mov insl out loope lcall or movsb or lcall icebp insb sbb cmp rorb dec ficompl adc xchg clc dec sbb mov stos lods loopne adc and pop xor insl sbb dec cmp aaa xor jp sbb dec cmp dec shrb sarl cmp xchg daa add push lods mov mov dec mov aaa dec js cmpsl xchg mov pop jb shlb mov xchg adc pop inc add inc stos scas cmp xor (bad) mov inc shll pusha insl push mov push in pop or dec cli or add mov inc add dec cwtl mov and pop adc add cwtl mov scas pop aaa popa jmp add xchg repz sbb xchg pop xchg pop test xor (bad) adc dec xor jp sub or lods pushf lret adc and insl jae jp lcall scas imul xchg cltd aad inc sbb loop (bad) mov out mov cltd xlat sti cmp push lods jg dec add insl cmp jb xor sub test adc add fnstsw cmpsb mov fs (bad) lret addr16 test test lcall pushf mov and push add mov popf inc xor add nop mov enter sbb push add dec in adc and popa mov add inc loope leave xor sub mov sbb cmp cli mov mov mov addb xor jmp mov add dec shlb cwtl and jbe xchg adc fcmovnb and sbb cmp or adc test lods mov mov jnp add xchg iret imul inc sub leave and jmp test jne outsl dec loope pop adc mov push movsl adc loopne xor push fs pop sub lahf xor mov test add lea ss subb inc sbb les xorl jmp dec and lret jecxz xchg popf cmp add sbb mov xor jbe push enter lret ds cs ss inc or inc movsb icebp sarb mov xchg popa jbe xchg les pop test sub or sbb sbb dec adc (bad) xchg cs out gs inc xchg push sbb sub jo xorl inc adc cmp rcl daa or into xchg mov push std xor sbb add and sub imul xor sbb adc dec mov push sub dec and cltd pop loope mov das cmc addr16 rolb or call cmpsb mov sbb lahf add xchg loopne mov push mov xchg pop fstps xor shrl test add adc mov xchg add lock mov add mov in add clc rcll lgs or movsbl and ss inc or xor loop ret iret sub add and sub xchg adc cltd cli mov sub inc (bad) jmp mov insb fsubrl aam and mov (bad) ja loopne test mov stos and ret mov (bad) popa loopne adc mov inc inc jecxz mov cltd lret iret mov adc lods outsb mov push and mov pop jno dec xchg or mov or cmp or cmp push bound mov mov sahf xchg xor or xchg inc jo sbb add adc dec mov lret insl inc sete xchg fs pop (bad) and sub lods xchg hlt sti and jo inc out inc add and sub mov adc popf mov push (bad) repz aas mov jp add push lds lods xor add cwtl popa pop pop cmp or add negb mov xor int3 (bad) mov (bad) and cmpl mov mov jb add leave push in pop mov xor mov jns call xor sbb faddl rcrb xor sub xor xchg jo pop ljmp mov pop shlb inc mov in js push mov daa add mov or dec sti mov xchg sub jmp lahf or sub add add lds mov lods xlat jo add stos push mov add ret add inc xor scas push adc mov (bad) hlt add scas cmp addb mov rolb or push daa popf (bad) pushf inc movsl icebp stc mov mov inc in lock cmp (bad) mov add out adc pop loope sbb sbb loope mov or xor xlat add les or inc fsub repnz cmp xor push dec adcl test add loop pop and add and pop mov push daa inc fldcw lods jae leave fcmovbe aad xor sarb popa loope and dec mov cmp movsl mov sbb and and xor push dec scas jge mov dec mov sbb xor or fnstenv gs mov movb adc xor and add lods mov popa fisubl inc sub xlat xchg add mov mov inc jo es and rolb push xor outsb mov cmc and and enter xchg subb add dec add push xorl lea jno mov inc add mov sarb and loopne mov test ret mov inc setb xchg popa js std scas daa cmpsb add xor mov call fcomps and xor add jno or sbb pushf adc sbb or and xor and xor xchg lods js or cmp outsb sbb rol imul lods (bad) mov imul push mov pop push push inc rorb es push jl adc or adc es sbb xchg adc adc push fdivr aad add rolb xor adc sub xchg call mov das push test add or stos dec cwtl mov std das dec les pop add inc dec dec mov or addb imul xor xchg (bad) enter int3 ret or push or pusha mov (bad) dec arpl add pop sub xor pop sub push outsb pop inc sub jno xor inc clc inc mov cmp dec mov or pop rclb pop xchg loopne xchg sbb sbb or adc arpl pop (bad) loop push es add xor push or sti ljmp imul repnz xor mov rcll mov sub and dec stos dec pop sarl stos inc push push or pushf adc dec push in xor enter xlat fwait lea aad and popa dec adc andb (bad) mov std pusha push and and fstpt and pop adc arpl sbb lods adc or (bad) popf or enter push repnz movsl (bad) rorl lods data16 (bad) xor pusha xchg adc mov insl mov inc fdivrs test bound xor adc aaa add push or sub mov mov xchg adc dec adc lods push jb inc and xor pop or rol dec (bad) dec pop aaa xor lret pop iret and outsb or ss iret xor fsts mov xor dec aaa jecxz mov js arpl mov daa fidivl inc aaa int mov or out xlat or or fstpt bound sbb jns or ja pop push inc sub jo or sbb lret sbb gs push dec or in dec xor add pop scas sub sub xor mov mov dec insb add and dec movsl sbb sub imul sub sub mov stc sub pop push jg push fildl (bad) or mov mov stos mov and sub sbb sub inc pop mov fcoml lock jb or mov cmp vpcmpeqd mov jnp jo mov push out loop push lods add sarl stos mov loopne push popa imul mov pop test das add or das roll es mov dec pop idivl inc addr16 mov das lcall add daa stos lods push cmc sub add cltd jbe adc and or test sub arpl mov rcll into xchg inc xor and mov xchg (bad) lods dec xor push (bad) jo mov adc add rcr xchg in (bad) mov (bad) sbb or dec inc push xchg mov pop push mov or jb pop adc scas inc jmp add enter jns aaa icebp or mov and sbb or sbb cmp push mov xor fisubl sti mov fs mov add addl (bad) inc push test loope loopne or insl xchg fs xor xor inc cmp addl lea movsl imul push cmp mov add and mov and inc xchg or mov xchg lret cli popa jbe add popf ss mov and or pusha dec xlat cmp or sbb and xchg xor and adc das or inc xchg dec dec pop popa sbb dec xor (bad) xor xor xor and pop inc lods push and roll insl inc dec int3 dec jl mov fldenv mov push shl pop and in cmp rcll pop rep and test or push add mov and mov outsb aas jne mov add pusha xchg ss insl das xor add adc insb pop dec leave mov sbb sub push jl xlat ret xchg movsb push out mov iret xor mov aad lahf sub mov (bad) mov xchg andl inc or lock cmp dec dec add cmpl push sbb loop push mov add js mov xor shll pusha cmp dec add sub inc jmp inc or insl or sub mov test leave sbb add adc pop testl leave jmp lret cmp js pop imul sti mov jmp ss test int (bad) pop aad jo (bad) jae cltd ret leave shr adc outsl sbb adc sub adc rclb pushf and dec lea cmp movsl movsb and dec and xchg scas icebp fwait inc jnp std inc call xor sub movsb add pop loopne or push sub pop daa loope inc fistpl inc ss test rcrb andl push imul je add cmp insb adc xor ds dec test rolb sbb sub adc rolb jne inc imul push add dec lds test mov rolb sbb pushf and xor or sbb mov xor push xchg dec cmp push test outsl and or or pop sbb les inc ret ret gs subl (bad) xor inc sub add inc add dec lds sar mov lret and fisubl mov jl add ss movsb adc pusha fdivl int add xor cmp or mov (bad) mov mov jb mov push or or and sub fsubrs inc pop ret or inc push outsb lret sub add cmp test jo mov ja subl mov inc jns rcrb sub sub lock jno pop adc cmpl add rorb popa and push cmpsb cmc and mov or loopne push mov arpl lds sbb pop repnz addb adc hlt sub xchg ret mov enter push mov les cmp lock add push mov adcb cmpsl xchg mov add jno adc mov cmpsb movsl in ret addr16 inc sbb and loop cmp or movb (bad) add jae and push jecxz xor mov xor test lea int aam dec out jg cmp or cs loop adc dec mov add mov add push sbb push test xor mov (bad) nop sub mov fbstp les cmc or cltd dec or pop mov rolb sub in cmpsl je adc in inc sub or aam imul ret psrlw or dec add clc and aaa nop mov lds pop rolb les lds jle enter add insl xchg pop movsl inc lods xchg xor xchg xor inc jecxz push adc (bad) cs cmpsb add inc std jne pop and cmpsl inc sbb lret lods mov add ret movsl (bad) outsb bound (bad) cwtl push call xchg xor arpl add pop sbb or shrl add and (bad) lea mov or xchg lcall into scas sbb and aam test add adcl xchg add in and mov push cmp cmp add pushf jmp mov mov xchg lcall mov xor arpl sbb xchg mov add pavgw cmp mov pop or dec imul sub lret mov adc pushf inc pop and xchg dec dec inc and xchg dec push cmp sbb pop pop insl sub ret das dec test or je iret scas xchg lret add leave or (bad) in or das sub push std jmp mov int sbb add and mov adc ret xor add pusha iret sbb shlb pop gs andl inc popa (bad) mov xor ret dec mov addr16 stos imul lret push fisttpl imul clc and mov sub movsb dec test gs addr16 aad mov pop fidiv pusha shlb cmp mov ss cmp adc mov or stos or je and adc andl mov push in xor xor pop pop fisubr fiaddl aaa xor push mov imul and mov test (bad) xor mov push mov jns mov sub lahf jno sub xchg lock in cmpsl gs decl incl jnp ret pop lods mov fs xchg mov adc lret mov nop pop mov scas inc or lods aad movsl shrb sub adc pusha add adc sub test aad pop test adc cmp addl adc push dec inc push (bad) xor test pop add mov dec cmp fs js dec mov push or dec mov in dec or push ds pop repnz movsl dec mov movsb in push (bad) dec sbb cmpsl mov push sub jp fistpll call out movsl dec sub sbb mov xchg dec adc out add movsb add dec or stos frstor adc push xor add nop loopne adc and and inc adc jecxz int adc mov aam push movl popf inc f2xm1 mov insl lahf pusha inc lods (bad) mov cs (bad) cmpsl cmp arpl ss pop xor pop xor fsts (bad) (bad) fisubl cmp movsb or or add pusha dec or jno test sbb xor push cmp add fsubs adc jns mov pop adc aad pop insl outsb add fstps test dec adc fisubr add pop xor and add fldl add push sub and rclb sub xorl jns mov add pusha cmpsb inc mov adc dec js cmp adc sub jnp and movsb jne,pn pusha loopne outsl insl cmpsb xchg rcl sbb ret inc push jbe dec loop or inc xchg jnp and inc or sbb in or imul imul xchg or mov and cmp lret ret (bad) sub adc inc daa push data16 inc lea aaa imul insb push lods dec testb push cmp add test inc xchg insb dec outsb add daa pusha cltd cmp sub lds stc test pop loope (bad) mov or leave or mov jbe push dec adc cmp add dec daa or mov dec lcall mov and mov out daa inc bound arpl test add daa add xor add mov lods mov and loopne jl cmp aas js pop xor adc sbb pop icebp or pop loope or push shll mov test dec jge xchg in and push xchg out ja shlb push rcrb jae pop lahf or adc push lds mov cmp add arpl scas mov sbb sahf add es in push ficoml add sbb adc leave cmp movntq dec popf inc sub push js push test xchg cmovs mov add add mov mov sub xchg popa dec sbb cmp adc imul sub inc xorl add add out xchg sub loopne ret aas pop mov pop add mov loopne lock or movsb dec (bad) sti add cmp in jecxz xchg addps pop and pop popf mov icebp adc bound insl or mov nop fmulp push pop (bad) xchg xor jae pop adc push aad or or out xchg test pop icebp movsl and lahf imul mov and lods or pushf cmp and jmp ss push outsl insl adc and and pop loope adc and nop mov inc xchg nop xchg inc pop jmp inc adc xlat movsb add movsb mov add rclb arpl ds pusha fcoms and ljmp outsb push sbb cmp add arpl push xor adc (bad) xor inc push popl loope xor lret aad shl xorl dec aad icebp mov mov mull push pop (bad) loopne xor (bad) cli (bad) call mov and and pop insb push into nop aas mov adc sbb inc fdivr and imul pop or lret push and add or adc cmp cli orb push xchg mov jge inc inc add test rcrb std jb sub sahf xchg add adc dec lock inc xchg dec loopne mov and xor stos sbb mov pop sbb gs push loope (bad) jae lock push mov lds xorb push stos test mov les sub pop movsl lea cmpsl add rorb xor daa insb cmp js cld scas adc or insb cmp lods ret xor nop inc ss rcrl in and js or push pop mov mov inc pop ljmp insl and jp aam adc xor mov add pusha pusha roll and mov test xchg (bad) mov lahf xor xchg or sbb data16 fmul sbb imul mov fld dec or dec xchg xor mov shlb or push mov (bad) dec push xor fwait dec pop add add jge lods or aam inc imul inc xor (bad) and dec mov dec cmp dec or mov sub push mov sarb dec mov pusha and lret lods adc adc adc sub mov push dec dec xor mov jmp xorl sarl push lret add nop stos sbb je xor add add jo ja mov mov stos push test push inc repnz xchg gs aam push fcomps xchg dec sub xlat mov insb xchg test dec fstpt xor dec iret ja xchg mov push sub dec movlps pusha sub add mov inc jmp stos or dec dec xorb lea mov pop dec jecxz inc pop mov adc cmp adc pop leave xsave sub movsb cltd (bad) push and jo stc jns mov fdivrs add lea mov rcr adc sti xor push pusha outsl add mov pusha cmp ret les mov or push push sar mov outsl xor or fsts add ljmp dec mov push push or xchg outsb add jp or push es inc mov or inc lret jmp fwait pop out jmp lea mov ljmp dec push test dec pop xchg xchg mov adc loop add lods or shlb push or arpl dec push test pusha adc mov sub fldenv xchg mov aad inc sub test mov lods loopne popa sub popl xchg cmp movsb dec cmp pusha sub inc xor movsl push ss add inc cmp add dec imul dec inc mov mov and popf adc inc addb jl dec or jmp aaa pop or mov daa jno push and (bad) (bad) loope addl fnstcw loope inc fisttpl xchg mov sbb std clc adc dec adc xchg cmp cmp ja gs jne xor sbb jecxz push and ffree dec test mov add popa sub push addr16 leave loope xor xchg or sub aad add movsb inc int dec sbb (bad) orl rolb or mov (bad) jno pop mov or mov mov add hlt pop popa and push add adc and and dec pop xor pop sub push pop jbe fild adcb fs push mov pop xor inc sub adc mov xor adc popa jno push sub dec jns pop (bad) fcoml push and test pop test pop imul cmp outsb adc fwait pop orb popf sti or xchg or mov or cmpl (bad) movl pop dec lret not call mov xchg inc sbb in or xor sbb nop xlat test mov fisttpl movsb push or add dec mov ret cmp jecxz push ljmp cmpsb inc or jne inc popf jne and shlb mov out cli sbb pop mov cmp iret addr16 cmp test pop add (bad) orl call cs sbb test fs dec movb mov sarl inc fnstcw sarl lahf and mov or movsl push inc xchg sahf test loope inc xor inc (bad) sub inc xchg cmpsb add gs iret mov xchg aas rclb add inc loope jl and and sbb cmp sub sbb (bad) push inc in xor aad or cmp insl pusha inc lock dec cmpsl es pusha imul sbb sub (bad) test sub sub mov scas je mov (bad) fwait lock (bad) jge bnd push fisttpl inc sbb jmp inc dec xchg insb and cmc xchg jae (bad) adcl fwait adc dec jl les clts lods mov add movsl add sub push and push ret daa fiadd mov dec add aaa insb adc or in xchg pop inc rclb (bad) popa push and add jecxz fsubs jmp fldcw add lods loop sbb and xor push andb outsl inc ret pop jno mov xchg xchg push mov xchg adc or mov dec ja lods test cmpl and jecxz imul push sub addl and mov imull addr16 mov orb mov or or xor add int xchg jb mov aaa push xchg daa adc or imul add movsb test sbb jno xlat stc xchg loopne add daa and xlat fisub addr16 cmp add mov add fwait xor adc mov mov mov or loopne repz mov mov hlt or cmp sbb xor adc xchg sub and inc lods dec rcll jb xor cwtl mov test xor sbb or pop push pop add rorl sub loopne cltd dec aam or xor testl lods inc adc cmpsb or xchg pusha daa loopne cmp movsb or push int mov cmp mov xchg movsl cmpsl (bad) or dec sahf insl bound arpl add shlb inc imul and idivl (bad) gs and dec xchg movsl cmp dec subb pop adc addr16 mov xor xchg sub mov add loop aaa add dec cltd dec popf ss sub fstps adc gs jl ss and xchg pop lea adc jne sub and ret lock fs adc xchg and add xrelease sub cltd movsb daa nop add test dec call fs push lds lahf lret push scas outsl and loop mov xchg sub push lods mov scas add ret sub and add mov add mov popa pavgb or adc sub xor mov sahf aad push imul mov dec mov aam sbb inc imul inc cmp sbb nop cmovns enter adc (bad) insl xor lods xor inc mov dec dec iret adc xlat daa adc add adc gs mov cwtl and xchg jo fdivrs or pop insl imul xor mov xchg fildll push test fisttpl inc repz in sub or dec push nop xor leave out inc xor (bad) test xchg lret xor lea sub int dec loopne pop dec mov std mov cmp dec dec js (bad) out sbb test mov sbb aaa xor nop push daa stos (bad) sbbb sub sub adc and sbb mov pusha jbe outsb xor es mov jp sub xorl popf in pop xor sub test mov dec jno push adc and xor js add in cmpsb dec jp out aaa dec shr stos test in sbb das mov into insl sub mov add (bad) test jae daa int3 dec dec int mov rorb push outsl add (bad) insl enter mov js addl (bad) inc sbb sub or (bad) adc sahf sarb fisubrl jns pop and add lea phaddw les push mov loop aam gs and or push sbb mov arpl adc pop es cmp dec sbb test push test loopne sbb jp cmp inc xchg (bad) adc test cmpsb int3 lds xchg pop add and outsb loope pushaw popa cmp je and shlb sub xchg xchg stc pop sbb dec add div test lcall int push pusha mov cmp mov (bad) mov inc xor cmp and mov push pop mov icebp or mov (bad) xchg dec add cwtl stc dec rcl mov xor xor pop mov lods xor mov imul sbb xchg mov test adc das add ret aam (bad) aam sbb push out inc or fisub xchg and fild test or (bad) mov icebp xor xchg popf mov inc push add adc imul inc in xor in test jp popa and jge add mov fs (bad) test test or cmp andb cmp fwait scas add ss cmp pop test lods push aam mov lods add mov pusha rorw fs xor aam inc add in mov dec or test mov adc popa shrl add xor pop adc adc pop cli push or xchg jno inc ret rolb pop xchg movsb (bad) test add add into bound mov lods and xor les insb adc mov xchg sub imul push mov arpl cmpsl mov cs mov pushf sub out pop mov sbb add inc (bad) test lret xchg mov inc loope jno sub fcomps add insl jge rcrb inc test pop sysexit loope adc and push and jnp mov es insb or loop int xor insl aaa push xor xor xor cmp rcll dec lret insl inc stos mov dec or call xchg sub dec inc or sbb xor flds xor mov add jmp jmp xor dec add adcl sahf cli inc enter mov inc inc lods dec imul and popa sub stos jmp add pop jno leave test adc cltd cmp nop lahf popf xchg (bad) sbb jo pop or mov movsb or test and jl cs mov out inc orb adc rcrb mov xchg and pop sub addb sub pop js daa dec popf mov push jge add dec test mov mov or add shll inc arpl sbb fs and test xchg and push lds fs cltd xchg jecxz xor or lret lret inc push mov sub imul fwait mov add mov xor mov xchg xor sbb xor lods xchg xor jnp popa pusha popf cmp xchg int push mov xor int3 ja add lock sbb sbbb imul arpl add sub push push add or add push sbb jmp repnz mov mov adc or pop push dec jae (bad) jp xor cmpsb push insb push jo leave and or sub mov leave jecxz imul repnz (bad) dec outsl xor add mov jae xor pop dec sub mov xchg nop cmpsl jnp sub mov pop or andl sbb jo insl movsl xchg jno dec pop lock popa gs push mov punpckhdq adc and sub adc pop addl mov add sub lea (bad) lods or mov (bad) outsb rol daa lcall push jb xor movsb push jmp push int3 push mov je cmp sbb xor mov push jb fs sbb adc rcll lcall xor test push sub pusha pop pop xchg shll daa sbb addr16 fs add xchg cmp dec and pand or sub cmc mov push mov mov mov push movsb add sbb scas or adc cs dec jecxz and jo test push daa and mov cmc mov xor es (bad) movsb mov or push fiaddl ror dec xchg fwait roll mov add mov and and jl or dec and inc es cwtl mov lcall dec xor popf mov xor sbb jno adc adc adc xor or jne and xor mov test adc sbb orl dec and repz add pop inc pop sub leave dec sub jne xchg push inc insl out xchg fs jns add mov imul movsl xor inc push lock sti shlb mov xchg sub jne sbb popa lahf sub pushf or mov adcl fadds arpl call xor cs push xchg add inc xor add mov xor add or lods mov movsb out mov ds test or lcall js rcl inc ljmp inc mov dec mov cs and push (bad) mov test in push cmc sbb dec test rorb subb xchg lock sti mov lea add ss mov pusha inc enter adc lods movsb sub add sub push push sub fs or daa push xor xor xchg and add rcl jae xor (bad) push dec addl adc clc and adc sub add push es xor or testl pop int lock jmp leave mov add inc inc xor ss cmpsl push lods dec popa jmp iret and mov stc add add adc pop xlat add popa aas mov andb popa inc or sbb add or js adc imul pushf addl pop xor lds sbb imul fcomi and xor add sbb pop adc lret les test xor lds rcrl cmp pushf test gs jmp inc jmp sti or lods xchg xor and inc jl push addr16 fadds sbb cmpsb mov add lods push adc xor xor cmp cmpsl inc arpl push (bad) pop xchg sub sub icebp and inc and sub (bad) add ret jle jb je daa xchg insb xor mov loope add mov sbb cmp push call adc dec shrb pop imul jl sub (bad) xchg popa and add or pop ss lock or pop lcall add ret pusha insb movl (bad) cld pusha adc std add add push adc pop stc xor call popf mov fistpll shll scas xchg sub cmp add mov jbe adc sbb add mov mov hlt movsb xor cmpsb dec adc ret sbb mov sbb mov adc pop mov das (bad) mov lahf cld sub lods and and xor push mov (bad) xor je xchg and movsb jbe xchg inc xor add pop or pusha and dec add dec psubusw (bad) cli push or or repnz aam adc cmp jmp imul mov inc loopne sbb cwtl xor xchg pop pop xchg inc inc sub pop sbb inc cmp hlt inc int and enter add pusha pop test mov jp imul imul daa loope jl (bad) xchg inc roll xchg out sbb dec ret mov jmp mov es stos push int mov xor mov or cmpl cwtl pop call mov inc adc jle dec imul loop ds xorl or (bad) fstl (bad) jne dec add fsubrl shlb pop mov es push (bad) js lods rolb mov out mov nop xchg lea lea adc dec ret push mov mov pushf or les inc orl std cmp insb (bad) sbb or inc nop or dec frstor xchg jb add jmp rolb sub cmp fidivl aaa loopne adc aas or pop mov insb dec mov sub xor mov outsl sub pop or scas dec mov test xchg jo ret in inc movsb dec (bad) xchg inc sbb scas and pop add icebp or loopne jae imul mov cwtl cmpsl ss and xor push add cmpsb xor and xchg mov push fsubrp xchg in inc addr16 adc ss jg inc cmpsl inc inc popa inc ret add sub out pop and push adc loop xor pop or popa pop adc and dec mov lds xor xchg dec ret add sbb (bad) iret andl pop xchg jl lods inc mov add xchg xorb lods or xrelease xor sbb and sbb sub xchg and inc jg test clc mov rolb test or add inc mov enter inc sub and add sbb push movl xchg add or in adc or mov or ficompl mov shlb es rorb lods aam fstpl mov push xchg push scas adc or iret push push add mov fsubs lods sbb bound mov sbb fnstcw adc pop sub mov rcll push gs addb addl sbb pop jae cmc test aas je enter jne adc dec dec inc cltd andl daa adc js test inc mov xor sahf mov sbb icebp add push or cmp mov fnstenv inc test pusha mov decl and mov shr movsl add or push (bad) xor popa mov and mov clc push jno mov sub or fisttpll lds cmp cli xchg inc sub ret (bad) rorb sti mov imul cmp jmp mov sub jbe rorb jecxz push push and sbb mov sub movsl (bad) push popa add adc pop pushf hlt sbb jecxz pop mov mov push dec sub cld inc sbb pop xor test pop sub inc xchg lds cwtl sub aaa mov xor gs lret pusha loopne cmp add cmp cmp test in or sbb fld lcall sbb sub add pop stos andl jl insl pushf and sahf movb add pop cltd in sub and (bad) (bad) and xchg inc stc jne ret xchg inc outsl sub int3 cmp lods xchg sbb rorb mov inc mov sub daa je dec xor or and xchg loopne sub sbb ret sbb adcb lock sti loope sbb test adc add or ret (bad) mov xchg mov pusha jg sahf and hlt popa inc jg xchg (bad) loop jge roll or leave add mov gs in adc push dec sbb ja and inc lcall cmpsl xrelease fdivs (bad) add cmovs call clc out sarl nop ret cmp les and push and push fldl jmp or in jnp push sbb xor arpl mov inc das or sub sbb pop sbb xchg xlat pusha adc xor rorl mov cmc xchg gs and add add mov xor pop mov and xchg movsl and popf push add rorb divb insl (bad) sarb or pusha add sbb mov or or pop xchg push cmpsb insb push loope push movsb pop gs pop stos daa nop stos jno push adc bound add inc cmp xor cmp xor test add inc or roll icebp popa inc addl dec ret dec stos mov (bad) cmp lds add popf mov ss xchg push imul test xor xchg pop mov imul ret mov adc mov inc jno mov push loop cmpsb jne (bad) mov xor rcrl roll or aam shl add fld sbb (bad) insl dec pop mov (bad) add ficomp sub adc sbb call ja inc out xchg jmp dec movsl mov xor adc pop xchg lahf add addl adc sarb or sbb sbb fadd sbb inc aaa or mov arpl mov add cmp adc or rclb mov in or and adc inc sub and cmp scas dec cmp adc mov test inc dec sub pop call fwait mov (bad) jne xchg sub jp adc aad pushf hlt enter mov adc mov dec cmp sub add mov clc cltd daa mov and or test test or pop sahf inc push xchg sub popa and add cmp pop push mov and adc xor mov std fdivrp add inc mov leave ret sbb add cwtl enter fcmovnbe add inc mov test sub lret mov sub popa inc ret pusha inc jmp add mov xchg or and add pop jno stos test aaa and jecxz pop rcr lea push movsb or or or push clc pop jge mov xor lret mov insb jne adc xchg rcr or (bad) inc sbb and pusha mov dec or mov mov clc xchg sbb lea dec sbb mov jo pop dec xchg jns or stos or xchg mov lea cmp shlb xlat sbb adc adc inc cmc add nop test sbb (bad) leave adcl xor fldl push adc cmp mov push mov adc and pop xchg mov add add (bad) icebp or cmp stos pusha cltd test xor leave pop les (bad) lret (bad) push push sub push in pop lret jo sbb xor roll test outsl jno cmp inc mov mov or mov and ds push cmp pop inc mov adcb outsl jno add sbb adc or mov inc dec add sbb xor loope xor test cmp inc xor nop nop mov or xchg in push cmc pusha or inc inc xor lds cltd sbb xor add int imul push add and test dec xchg push mov insl or lcall push jecxz add pop (bad) sub sbb pop push test or (bad) push ltr call and lret lock pushf xchg push xchg jne sub push pop sub xor adc gs ret insl ret mov or ret push addb lods iret adc les shl mov or and mov inc dec mov push mov xchg sbb std lods xor inc shlb dec jg push daa sbb or dec lds cs xor add stos mov and sub lea es (bad) pop scas incl jmp fidivl and out insb cmp xchg or sbb add dec add xorl (bad) push jecxz imull lock data16 or insb pushf and std dec movsb fadd imul pop mov test ljmp push inc sub test test or out jecxz push and xor or lds or (bad) daa fwait pop les inc ljmp adc add push adc (bad) (bad) call lcall adc add dec sbbl rcrl adc repz fisubr mov adc inc push xor sub inc push inc loope mov push dec sbb sub nop xor popf xchg push pop add or addr16 stos sub sbb sub adcl dec repnz test daa jo mov xor aad jmp addb push (bad) rclb mov adc test jmp call mov xor aam dec adc js stc emms or xor adc dec lods cmp cltd pop inc push imul inc gs ss loope or aad inc fstpt xor (bad) xchg cmp adc pop mov mov jmp add mov mov sbb ret ds cmpsl mov pop movsb shll aam or sub lods xchg dec cmp and push shrb cmp cmp hlt mov sbb fsubr xchg pop mov imul xor mov xchg jmp sahf dec fidiv push sub rcrl add shll push shlb sbb arpl mov int3 inc push sub and mov sub pop sarl xchg xchg xchg inc mov dec les and push inc pop adc stos sub subl or inc fwait pop xor pushf imul sbb adc movsb ret adcl pop call mov xor dec sbb jp popf mov daa (bad) jne je adc cmp call xor jae test pop dec mov loope dec mulb sbb dec cmpsl aas push scas mov xorl cli xchg mov or mov sub xchg lds sbb pusha add add imul pop xchg (bad) mov adc dec sbb or aam lds and dec lods pushf popa or xor movsl or insl lret cmp test adc add test shll adc (bad) xor gs inc sbb sub sub dec mov or (bad) adc imul imul cmpsl cmp loopne je inc add sub in xchg test rolb out sbb xor aam pop add push shlb imul inc pop rcrb xor sbb es imul pop cmp (bad) shlb add js pop xor inc xchg lods inc cmp adc pop add dec scas or fs jge xor mov inc pusha adc (bad) rcll mov and insl sub xchg test mov pop dec jno xchg xor inc pop push aaa or aam lea icebp adc dec movsl adc pop data16 mov shlb push leave xor push leave icebp rolb sbb test adc cmp or sbb xorl push adc pusha lea fidivrl dec inc inc xchg adc test add push jl mov xchg or jne rcrl aas fwait lret sarb data16 jae inc cmp ret les adc iret cmpsb insb mov (bad) cmp mov ret xor pop sbb add dec sub bound pop fdivrs xchg and dec mov mov loop repnz pop sbb sub jecxz jb adc subl addb les add sahf xor dec icebp dec pop outsl out inc mov lods add popa adc xor (bad) cld adc xchg and sbb add (bad) hlt idivb shrb jbe pop aaa stos jnp (bad) mov jecxz cmp inc sub js lahf lret xor push pop mov add pop and andb or adc cmpsb mov xor sbb sbb xchg push xor jae or push sub lock jb mov xor inc add das push addr16 fsubs jno aaa rorb xor mov pop and sbb hlt movsb rcl fist push outsl inc mov punpcklbw adc or push add push test or xchg test add jg or sub scas adc popa mov movb dec inc push shll add dec pusha (bad) cmp push adc and test test das cmp leave rolb test incb ret cmp xorl inc test xor xlat addl rcr iret cmp mov or rol aam add sbb call lea xor out cmpsb ficompl (bad) fiaddl xor adc test push and xor fscale adc dec (bad) cmp pop shrl add xor xchg or xchg (bad) (bad) sub sbb push add daa insb or pop inc mov or inc xor popa cmp orl sub insl lea inc cmp (bad) lcall pop leave lds pop es or pop or and xor and addr16 xor jns lea test pop test idivl add inc pop add fisubl and inc test in jo test jecxz cmpsl test inc mov flds inc adcl clc jge ret in push sub push insb mov (bad) dec cmp cmp in mov sbb xchg cmpsb xchg insb mov lahf (bad) mov dec xchg adc into mov jge xor shl ret rol push imul dec (bad) popf inc dec xor mov and adcb inc cmp xor loop mov mov inc out daa mov jnp cmp jno rcll (bad) mov xchg out inc inc sahf inc pop cmp lods cmpl push sbb stos pop (bad) and sub cmp sub cmpsb dec insb ret aam mov addr16 lret push inc push mov add or add push or mov or and imul mov mov repz aam loop mov add flds and lret mov add (bad) xor jbe push test add dec adc mov insb mov cmpsb and adc or fs xchg lods dec pusha inc fidiv (bad) jb imul fmuls test lea xor and repnz cmp inc pop insb xor xor dec jmp add dec cmp xchg or dec inc dec cmp xor pop add cltd lods aad mov aam orl add and test xor pop cmp sub rorl adc pop push fstps js dec cmp je push mov repz lcall pop inc or xchg (bad) repz dec (bad) push fsubs and dec jmp loopne mov mov or sub cmp les test ret int3 and (bad) and xor test xorl dec clc jmp test inc jnp and cwtl out cwtl mov insb cmp loope loope popa or pop inc jb test insl rorl jmp daa nop or or push sub getsec ss mov popf cmp enter mov jno sub xchg adcl test sti xor add jbe mov mov sub or and ret ret xor jp or inc pusha jo cmpsl popa cmp push dec sahf mov pop test add ds and sub cmp adc xchg sub cmp pop int3 xchg add loopne cmp xor mov sbb (bad) fcomp xchg popf mov pusha mov xchg or sub and enter sahf xor cltd movsl inc ret fidivr or push inc xchg mov mov sub add nop pop cli mov sub xor fs into push sbb andl or cmp xor pop xor cmpb mov mov sbb adc daa cmp andl inc and cmp dec mov sbb and push adcb ret adc push aaa js or call dec dec xor push add adc (bad) dec daa mov (bad) pop mov sub mov inc stos bound jne int3 xchg (bad) jge lcall push or jmp add mov sbb mov lods je insl sub aad rclb aaa or ror push jb rcrb mov cmpsb nop push add and inc movsb push or push movsb imul xchg pusha and or inc imulb add insl fistpl add cmp mov lret adc sbb movsl dec xlat mov mov sub and mov rcrl sub mov lock das xor and sub adc pusha imul xor sub mov je out add mov mov aaa (bad) push sbb into nop movsl stos and push popa inc xchg mov sub add cmpsb arpl inc aaa xor sub popf sbb xor jge dec dec adc xchg dec sbb je mov test enter push add push sbb add cmp popa push add sub add mov cmp outsl push pop in cltd jno pop mov mov imul movsl adc jge push xor icebp or jecxz pusha dec sbb xor data16 sysenter inc or mov mov pop xchg mov cmp rorw (bad) jo (bad) push ljmp push adc sub pop adc (bad) js push dec test insb sbb xorps cmc rolb and dec out xchg or or inc xor adcl pop xchg sbb or add and inc and mov adc xchg icebp add adc ret push mov adc jo xor lds inc loopne mov es inc dec clc or imul add and psubusw imul xor movsl shrb push andb sub arpl pop orl leave (bad) cmpsl jo insb cmp or push push pop jb test mov lds mov adc xor rolb add mov cmpl loopne push insl adc xchg dec imul out xor test imul cmp push or xor sub or or cmp hlt les sbb lds rclb pop arpl xchg icebp and add lcall roll adc sub and add pop sbb test and mov cmp lods add adc bound pop sbb inc mov mov (bad) dec (bad) sub sub je jb add push mov sub or arpl push or fildl dec push insl (bad) mov pop add (bad) adc xor mov or insl and mov and cld and mov push (bad) mov or jae nop mov pushf xor rcl repz lock pop adc cmp dec xor or xor ret (bad) and ja jno sahf xor jle mov mov dec add add mov sbb xchg repnz mov sbb jo mov test sub sbb movsl push push mov stc push inc xchg sbb int push inc or imul or lds loope mov sbb jnp inc inc inc push mov push and xor or ret xor ss and sub movsl xor pushl add xor mov xor sbb nop mov ret xor inc addr16 inc movsl mov (bad) ss pusha imul dec xchg pop adc mov add es inc add popa adc and mov mov push or lcall aaa fmulp xor arpl cmc cmpsb sub sahf adc xchg (bad) and lea lock leave insb add mov and xor fmull outsl lods inc xchg xchg mov xor mov int3 out mov push xor cmpl imul jecxz pushf pusha sbb jae adc lahf addr16 fldenv pop sub arpl or sub in mov push iret mov mov push insb and push and lods or cmp inc pusha adc shll mov fistpl andl movsl add popa subl and imul mov jge (bad) xchg test stc push inc adc inc ret dec sub ljmp addr16 shrb xor mov xor hlt ret xor add push add fcoms jecxz add and sarb mov sbb daa cmpl roll dec sbbl nop je xor xor cmp lcall test add dec jle dec push nop and pusha popf add addr16 ret mov adc or xor jns test or out lds and lea lret or adc and xchg or jnp,pn je test push mov or dec add dec cmpsl xchg fiaddl insb xor jns cwtl and xchg out add fidivl movsl inc or add movsb lcall adc stos sub xchg pop (bad) jb jmp push dec in mov dec sbb arpl adc add jmp sbb out push popa lods jno imul cwtl inc xorl sbb sub sbb mov sysret notb mov sub ds and insl xor xchg test inc adc sub push mov (bad) cmp pop pop push push add push pop rolb lods repnz cmp jecxz lock pop dec cmpsl cmp mov mov xor pushf mov pop cmp addr16 push inc leave inc xor orl pop test mov roll data16 cltd sub xchg sbb nop cmp sbbl out and or mov mov lods adc aaa pop cmpsb or mov cmp hlt (bad) sti subb inc or mov rolb lea jbe adc cmp sbb movsl dec std sub out fs aam dec or in mov and movsb fwait mov or jbe push and jo adc in adc mov push pop sbb sarl sub adc sbb mov or xchg push mov jne jae add adc lods push push outsl ret test sbb xchg dec cmp movsb pop lock inc sub mov jg and xor mov subl imul push xor mov lods cs add and sbb xchg push nop add mov mov pusha shlb (bad) jle mov movsl mov xchg test mov cmpsb xor std or inc pop out lods adc sbb pop adc sub (bad) in mov cs sbb cli add or dec xchg cmpsl jecxz lods orl fld sbb mov imul mov push xor sbb js cmpsl repz pop add aam rcrb pusha xor insl add jmp sahf inc and in dec cmp mov sub xor or jo ljmp cld popf pusha lods inc mov gs add push rcl push mov pop rcll push daa or subb xor inc bsr lds sub or push xchg inc sbb sub sub into and inc and pop cmp jl es xor std dec xor movsl xor add loope movsb sbb rcll cmp sahf or mov lods jo or popa inc mov dec mov fwait or jno xchg scas fld or mov outsl xchg push or test lret and test sbb xor ss sbb sub push outsb lds je inc xor or xchg jne pop sub push and inc xor add inc cmp inc mov sub popa inc or or jno rorb xor adcl (bad) dec adc imul or jmp mov imul jne imul xor xor cmp push mov mov pop or ljmp sbb cltd push xchg cmpsl lcall fadd jge call inc cmp adc xchg cmpsl lret or inc inc test mov dec ss pop shlb mov lret add dec adc inc xor fsts push push sub sti push sbb sbb sub mov imul roll pushf push int3 repz cmc imul dec lods shlb pop pop mov adc (bad) mov mov sub jne cmpb sbb add mov adc cmpl adc adc dec fld rolb ret add test push pop mov sub dec movsb flds add push sub or mov popa sbb pop daa gs push inc inc shlb ss dec test (bad) hlt pop out xor inc xchg add loopne mov pop pop adcl add sbb mov add js xor xchg xchg test daa push andb sbb push push inc test imul dec cmp popa insl (bad) stos or cmp and xchg imul xchg out rcrl (bad) sti push daa inc mov add mov cmp fwait les jno push (bad) xor aaa cmp push mov loope inc mov lock jle xor (bad) adc and and adc inc xchg mov xor pusha aaa jno out shll xchg sbb inc mov cltd popf mov xor add xchg repz mov add test fnstcw add or jg cmpsb movsb mov jl mov add cvttps2pi add imul outsl add flds xor sbb fdivl xchg (bad) cmp or xorl mov push and jecxz pop mov push and xor lods dec jge xor inc and xchg test adc (bad) jae nop add (bad) ja (bad) sub add dec mov fcom push xor xchg shlb or je stos xor push push iret xchg idivb jnp xchg or xchg xchg insb aam xor test and insb imul sub cmp dec push das bound pop fldt sub mov mov in mov xchg inc sub dec pop pop inc or sbb mov mov gs or add adc nop push pop dec pop loopne jecxz inc sub lock fwait push push sbb mov mov or cmp dec sahf add ljmp popl sub add sahf jnp xor mov xor js sub sarb sbb rolb leave addb push sbb pop incl cmp push or mov test push hlt pop leave lea xchg or je sbb push and sbb es inc add sbb add pop mov adc cmpl rorb shll lret or xor add push popa sub xlat pop xor leave shrb js pop enter imulb fnstenv pop pop test xchg and dec xchg test add sub fldl icebp repz (bad) movsl sbb pop pusha sub inc mov dec out jg cmp ss (bad) in push enter jne daa insb popa loope insl enter inc sete dec sub mov aas mov mov xchg sub sbb push scas inc and xchg sub push xor add mov imul fdivs adc or nop or fmuls rorl lret mov gs xchg push addl sahf sub test sbb mov push dec ss hlt mov xorl sbb fcomi inc jp adc pop (bad) mov xchg icebp inc (bad) push (bad) mov push mov mov out test xchg xchg cmpsl cmp scas nop pop popf push xor adc mov sub mov mov aad cmp sub cmp push fsubs divl xchg fs andl imul push test mov cmp dec loope js add stos imul mov loopne ret insl add mov (bad) push test and popa loopne or xchg loopne es scas in fcomps punpcklbw mov fwait cmp and outsl sahf adc jno popa sahf add mov stc or mov push sbb mov xor mov and std adc loopne jnp jbe (bad) add (bad) imul push aam addr16 insb loope pop roll insl inc inc adc mov cmp mov test cmp icebp aad jge les mov rclb pop imul push push jb xchg mov lret lock or cld pop sub xor mov mov and sbb fimull or jg or or sbb xor pusha pop xchg sub sbb xor rcl fidiv xchg xor pop outsl loope add flds jo cs inc pop xor cli xchg movsl lods mov nop (bad) lock mov sub sbb (bad) pop or shrb mov ret ss lds xchg sub dec sbb out adc add inc adc rcrb ret fstpt cmp popa jge fidiv mov add fist push sub add test and dec mov mov add dec ss inc xor (bad) (bad) xchg add add pop cmp (bad) mov mov adc adc inc ret gs es mov les xorl adc lret add test mov mov aas cmp loope jmp gs sub inc xor loope xchg outsl sbb and dec mov pushf lock fcoms lret insb fmull lock loop and enter shlb fwait (bad) xor (bad) xor add adc rolb sub sbb inc push (bad) sub jmp jg sbb push fisttpll mov fcomps add lahf dec enter sbb add adc adc push loopne aam cmp xor fwait or sbb aaa aad or cmp or xor jmp rcrl mov fldt (bad) jns mov and adc xchg outsl xor mov daa scas call call (bad) xor (bad) mov aaa cmpsl lea pop xchg cld arpl pushf aam (bad) mov pusha and andb inc mov loopne cmp lret addl (bad) sbb lea loopne xor das sub pop jmp and sub loope out mov and gs call imul mov addr16 xor or add imul pop add mov and jb rcl mov add inc mov sbb repnz xor push sahf mov loope movsl mov scas mov mov std or xlat xor shlb xchg nop add or (bad) ficompl jo jge cmpsl mov xor (bad) fs shr push xor outsl icebp xchg test ret lcall add (bad) aaa movsb xor (bad) xchg add lcall lods add in pop or fs sbb pop xor icebp lret inc xlat inc xlat xor leave pop cmpsl (bad) xor mov movsb jne push xor and in push inc das push xor cmp push arpl xchg inc pop sbb cmp pop rolb push jno ret es inc repnz mov loopne sbb xor sbb push inc pop dec pop xor mov mov pop test fdivl fld1 xor fisub imul xor enter dec cmp ss sub ret dec or ret (bad) cmp mov mov sbb mov dec jns pop aam pop call add mov xor xor nop mov xchg ret std xor jae mov mov cmp mov shrl xchg dec int add jge dec and cs or or mov xor xor (bad) adc mov dec loop lods dec stos mov arpl lods push pop dec pop push je inc xor push sbb xor nop ljmp jl dec and sub cmp pusha lods mov xchg or pusha dec cmp call addr16 notl xchg and pusha subb aad push xchg inc inc adc dec push icebp add insb add hlt lret lods mov xchg mov add and fwait mov pushl mov mov lds mov out aaa jmp rcl or (bad) fisub pop fs inc add xchg xor mov add loope imul imul mov jg insb movsb lret add push mov push cmp and adc rcrb je iret xor xor cmpsb rclb and add test xor push stos imul push xchg xor or (bad) adc popa dec out xor (bad) test cmp (bad) lcall out ret xor mov gs stc stos cmp xchg push ret stos ljmp rcrb js ljmp push push or pushf xchg mov popf xor mov pop insl add inc enter pop mov jns cmp mov sbb mov or add sbb push inc jo jmp flds ds jl movsb bound dec add or add mov xor out pop xchg and js outsb movsb (bad) and sub add dec rcrl cmp (bad) daa addl inc lods cwtl push push push or out mov notl push nop lds fldl push mov dec pusha out push push pushf inc lods movsb dec stc inc push xchg xchg cltd xchg mov movb insb xchg or push and or loopne and mov dec xor enter sbb jmp cmpsl add adc das (bad) aad sub pop xchg movsb push sub jno loopne push xor test or push sbb lds push push and jno push sbb popf push or movsb sub adcl addr16 bound (bad) fisubl mov mov inc adc test in mov fwait adc xchg lock mov dec lret fadds or mov inc or dec ss sbb push idivb push mov movsl cld or in xor add add push mov lcall icebp sub add xchg and movsb xchg adcb mov sub cmp mov sub add sarb add ret bound and inc adc xchg dec iret test and in cmp xchg adc sub mov inc dec pop sahf nop cmp xchg movsb xchg les mov and enter sub lods add movsl sub fist mov lock mov dec xor adc push sbb cmp into push and cld xchg test lret outsb lcall daa add and xchg push ss daa push mov adc push dec mov js pushf xor les repz mov adc xor add bound mov adc pop inc xor sbb inc inc pop dec cld xor rorb push adcl mov mov and test xor je icebp mov dec popa cmp push faddl inc (bad) and push pop mov dec js mov popf xor lret out xchg sub mov xor push xor xor shrl dec sbb or xchg roll call jo mov shlb fs inc pop xchg movsl fistpl and push inc stos xlat xchg xchg push in or in adc adc fidivl xor or ds rcll jo mov fnstsw push jb pop ret test add dec xor pop and and mov xor adc and (bad) jo push in enter adc push mov mov pop dec jo add mov sub rorb pushf lret or adc rolb or in popa sbbl pop pop or mov orb pop dec popa imul dec aaa (bad) push xor xor add test inc pop sub insl lods dec cmp jns xchg mov or sbb loop dec xchg (bad) or (bad) push push ss sub jae xchg add pop adc add and cs fiaddl (bad) sbb xor dec adc xchg (bad) rcll push push xor add sub push imul adc xlat inc lods lds adc xor fnsave sub sbb popa das mov sub pop aaa movsl popf xchg cmp adc sub mov jmp insb inc xchg into adc (bad) xchg call adc mov aas sub or push push pop inc jmp lock xor sub inc andl push nop mov jecxz inc andb xchg test add cld sub xor iret mov push jbe mov sahf jnp mov cwtl adc call or xchg or lret jp insb xchg dec sbbl mov cmp shl sbb imul push pop sub int xchg xchg lock movnti push push or popa int3 and sub lods out ficomp addl pop movsb push lret pop pop loopne push rorl mov cs das sub loop xchg fisttpll addr16 jmp js adc or dec sbb out xor xchg add sub sub or test sbb and aaa inc or nop scas lods add cmp movsb adc pusha inc jmp sub dec or sbb popf outsb addr16 loope cmc add jb int subb pop push call and jg xchg call ss addl leave xchg jp add rclb jmp (bad) sbb add andl adc ss xchg nop cs leave sub insb mov and cmp xor fldl lret sbb insl mov int inc push rorb inc add iret inc bound mov sub xorb push notl jbe or imul adc inc mov xor mov jmp jo mov jbe bound xchg pop or or test xchg adc test add jmp mov aam adc imul aad lock pop push test nop pop int3 dec cmp or inc popa or nop sbb xor mov js (bad) xchg xor add lods push dec loopne xor mov scas add xchg add pusha cmp nopl pop adc int adcb (bad) leave jo jge mov sub cmp and test (bad) dec mov repz xchg loopne gs jno dec fadds push lahf pusha pop test lret outsb stos andl cmp lea mov addr16 montmul cmpsb inc jmp clc xchg ss dec adc xor mov hlt pop cmp cmp xor push xor xor ret pop adc (bad) icebp push mov and repz pop daa mov mov ss rcll sbb lret in sub pushf add pop mov sub mov xchg fisttpl xor push movsb popa je inc lods cmp (bad) mov push lock shr xchg popa pop sbb lock (bad) or popf aaa popa js mov push jle outsl pop pop xor mov push ret shlb mov mov add inc adc sub fwait sub pusha fcomps xchg cmp sub or sbb adc arpl test gs stc mov lods imul adc xor pop push popa js or dec inc mulps adc push inc (bad) mov icebp lcall add inc add mov pop mov orl dec sub adc test call (bad) adc or dec xchg pop jmp out lods inc test xor (bad) loopne mov inc stos adc adc push lcall rcrb add fwait sbb mov add imul sahf movsl dec add and and movsb dec xlat adc xchg insl lea add arpl leave add js inc test arpl adcb addl sub mov jo push inc call subl (bad) xchg stos and leave bound push push pop mov xchg mov cmp mov inc test and push (bad) bound aaa in add add add aam push pop adc lea or xor mov xor mov or or push xchg and jo inc aaa sub mov or jge icebp fs sub aaa lahf xchg add rcll test cmpl cmpsb pushf xor inc mov sub or lds sbb jecxz push push insb push mov xor jnp dec (bad) and ret push dec outsl xchg add sub dec push dec push cmpl mov add inc jo sbb xchg xchg push dec call and push cmp or arpl mov inc cmp push (bad) mov sbb stc inc ret vmread or push xchg xor rorb ret jo adc mov int3 arpl jbe test add js cmp cmp movsl and imul mov add inc insl loope test daa or pushf test push (bad) adc xor jno aaa mov addr16 cmp xor adc and arpl shrl push (bad) add sub fs inc out or and sub roll sub and mov mov xor arpl inc ret imul rol nop loope pop sub andl and adc shll push mov mov in stc dec rcrl xor pusha adc orb fcmovnu sub pop enter inc ret xchg sbb mov rclb das jmp xor out daa insb add imul ret jmp dec sub rorb adc or add dec add fdivl jecxz test add ror push xchg dec push xor and into xchg (bad) cwtl xchg mov and loope (bad) ja xorl dec mov aas movsl mulb std pop cmp in mov mov pop push iret popa cmp rolb rcll cwtl mov aaa dec sub pop das dec xchg movsl xchg divl or insl adc inc es ret sub dec clc jo mov add adc subl dec push add test push lock mov (bad) adc mov mov add adc cmpsb lods mov mov test cmp mov mov imul jecxz lcall inc pop popa lret mov (bad) jno inc adc adc fisttpll dec sbb lret mov mov jmp sbb xchg mov test push pop inc and and mov ljmp lods cmc jno sbb mov dec popa cmp rclb or dec mov mov lea (bad) adc loopne adc or mov push or (bad) xchg inc cwtl sbb add lock movsb jno jmp jno fimull dec xor and popa push xchg add dec adc icebp or mov or sub and insl mov mov cwtl sub xchg arpl sub or sub add mov and (bad) mov add lds rolb and ret movsl gs stc es rcll enter xor and jmp xchg adc prefetcht1 (bad) mov adc pop fbld (bad) or pop inc adc mov ret adc sub inc test lds lea or sbb sub or das call xchg xor out addl aaa imul (bad) je push sub (bad) xor (bad) aam enter cmp and mov inc call push mov pop mov pop mov dec roll and sub mov and enter sub (bad) push pop xchg xchg outsb pop jmp add in imul jle mov and push push add sub dec inc ljmp xor pushf and hlt xor gs sbb fs adc insl sti add and xor push cmp sahf (bad) xchg lods dec mov cmp add movsb inc inc (bad) jno fcom pop imul cmpsl mov lea dec shr xchg adc add mov add dec (bad) mov push mov mov test nop pop push inc adc mulb adc insb push sub fistpl jmp test pop gs fwait sar adc sbb or sub or cmp dec pusha insb movsb jle add out sbb subps fmull sub test insl adc sbbb pop addl or pop lret lret rorl clc mov mov test aad dec outsw pop incb or inc mov jnp or nop sarb dec add xchg xor push xor adc adc dec add push enter or or xchg inc imul loope cmpsl sub popa mov and mov lret orl push rclb ret lods lea mov popf xor sub or sbb mov lret add adc sub jecxz fs scas (bad) fldenv imul loopne std sub dec js jecxz mov sti mov sub mov mov les adc inc xor sub xor iret pop lea add popa aas and inc sub mov xor sbb fisubl pop mov cmp sub icebp popf and fimul and imul loope mul cmpsl mov sarl sub or sar mov push popa sub xchg pop pop mov mov inc or and pop pop pop inc adcl or and cmc xor loope mov sbb fs popa cwtl dec je (bad) pop adcl and and or clc add lret lock xchg jecxz xchg ror xor and sbb add adc xchg mov inc cwtl inc xchg inc pop inc inc ret test arpl mov popa cmp pusha mov lods mov or and fnstenv orl sbb sub rclb jp ss insb xchg add (bad) scas popa adc and insl cmp mov sahf jns xchg push xor loope sbb rol mov ljmp xor sarb adc lea jnp xor push fwait mov sbb xchg and adcb mov cmp sbbb add pop jmp or and cmp mov test and js lahf sbb and lods (bad) xor mov mov fs add sbb adc add push daa lcall xchg jge cmpsl sbb inc test aad adc mov or mov fcmovne call inc adc mov pop out mov xor adc pop jb push mov xchg mov ss and adc cmp dec or xchg mov out xor or push inc sub lahf push je or into cmp testb sbb stos adc popa pop ss xor dec add jae sbb xchg sub sarl in outsb dec pop sub sbb xor out xor int3 add loopne pusha sub xchg or push inc sbb pop movb push mov add jne pop test shll bound cmpb dec (bad) icebp xchg xor mov insb adc push lock and (bad) adcl xor lret adc lock inc dec push xor add inc dec movsl scas cmp cmp xor daa push ss test dec pop pop xor insl js ljmp scas or xchg out rorb push add dec scas add mov addb out stos sub jbe mov daa fadds aad test adc push fucomip test rcll jno ja xchg adc ss inc and gs add add sub ss xchg xchg and in pop add jecxz dec pop jle inc sub push loope add lret arpl lret mov or mov mov sbb pusha movb xor or jno dec movsb dec leave cwtl dec inc mov pop loopne jne aas repz sub or xchg lcall lods or xchg pop jb mov push test xchg js or test jo xchg int3 adc pop lds fisubr sub cs mov add cmp adc rcll popa inc test bound es xor pop movsb lock aad xor cmp mov popa arpl in (bad) lods sbb mov and sub dec adc das ret push iret ret jbe push movsb mov cwtl (bad) jge mov loope js jmp sub mov test popa cmp (bad) pop and lcall fbld cmc fmuls xor xor pop cmp jp push adc mov icebp mov dec (bad) xor add xor xor sbb out lods imul xchg data16 cmc inc or pop mov push jne adc sbb cs popf ffreep push push add jns xchg loopne fst pop leave fwait push scas inc adc add aas cmp gs (bad) movsb add xchg sub mov xchg loopne ficomp das lods fmuls outsl addr16 cmp and ret pop daa cmp sub adc loope fdivs jne test inc insl and mov sub test lret mov fsubrl or or stos pop xchg mov loopne (bad) cmpb inc or insl fistpll or movsb sbb and pusha or push dec dec mov pusha cs xor add inc xchg jns or pusha jno pop dec xchg test xorb or and or orl xor dec or add push jecxz mov or dec aaa and outsb push test aaa add or inc jo mov pop xchg jo push out pop fcoml pop repz push push fistpl jno sbb test nop or xor xor push insb loop nop xchg xor jns pop dec sub nop adc outsb ret test sbb (bad) mov sbb or inc push nop (bad) xor or and sub xorl mov jmp inc icebp cmp sub cmp inc and mov subl pop jo nop lods roll xor jecxz popa dec xor shll ss add inc jbe int3 cmpb inc mov sbb rorb enter popa mov aam or icebp jno inc add mov and add pop or mov je xor xchg fs in xchg and loope pop test dec cmp (bad) push add sub sub les or pop push pop mov movsl push add xor jbe nop and movsl adc inc scas sub ret (bad) fdivl or mov cmp test sbb xor (bad) sti mov sub ja or addr16 sub sbb jo xchg hlt fwait mov fstp mov out push pop sub xor andl addl and dec imul mov sbb fsts xor mov jmp dec mov pop fld sbb adc push xor jno daa ret mov scas dec sarl and or and or jae push inc stos xchg popf xor (bad) mov pusha test push (bad) cmp xor imul cmp xchg lret push pop dec shll pusha push adc mov push inc or inc enter test out andl icebp les dec popl pusha sub or dec inc cmp (bad) xor leave xorb sbb jo xchg inc pop push push inc xor mulb rcrb mov leave pop int rcll test lcall add mov sub jecxz sbb sbb shrb ret call test pop lahf pop push data16 cmp nop xor push xor sub adc (bad) sub inc xchg dec and adc fwait nop push aam flds push jecxz imul pop add xor xchg adc lea push or sub adc add dec dec mov adc xor lock xchg mov sbb dec add insb adc test sub xchg and inc mov leave js xor xlat and (bad) xor mov xchg xor jo cwtl xor push push xchg xor or popa sub popa addl int3 push xchg dec and add movsb (bad) lock cs and test insb sub mov xor ss cmp je (bad) das inc rolb test movsl sub pop iret popa gs mov dec xchg inc cmp sbb pop mov pop inc push sbb pop cli pop inc mov and ret sub xor push or pop pop nop or jg adc pusha movsl (bad) dec jl sbb les xor and ss push mov and lods in mov sbb in inc leave dec xchg stc sub jne,pn adc or test popa and dec sbb xchg cmp loopne mov pop add mov daa (bad) jo adc (bad) xor sub adc pusha inc or add dec (bad) push test xor and pushf or xchg les mov bound mov push rcrb iret mov and ret xor sub push imul lock loope vpsraw mov cmp mov inc mov loopne and add or in mov aaa mov push sub outsl enter lods test add sti or mov xchg mov adc inc (bad) or imul and jo rorl push xor dec sub and imul inc popa push lret mov ds push stos sub lock dec and sbb jne popa enter icebp ret push inc mov shlb add call ud2 or jns dec sbb mov (bad) (bad) dec adc mov mov ret popa lahf cs push hlt iret dec jecxz test pusha clc and add add out pusha mov inc and frstor fdiv nop xchg lahf and lods sbb test gs xor add or insb cmpsl cmpsb or and lcall xor rcll adc lock stos xchg inc pop mov xorl loopne push push mov pusha daa mov add (bad) out ficoml int3 sbb dec enter mov movsl pushf mov or or pushl sbb (bad) lds ss sbb add cmc mov cltd or setno cmpsb push pusha or leave mov mov adc cmp test xor jmp or push loop xor pop adc sarl jmp inc gs jae test cmp or adc shrl add jne xlat inc test outsb xor xor xor mov scas popf cmpsb sub sub mov test push dec pop cltd dec jecxz adc add jb sub xchg add inc outsl pop or cmp mov pop adc dec sbb or add hlt mov popa adc xchg xchg adc sub xor dec or nop pop loope movb xor inc test jge pop or fiaddl (bad) inc inc test leave insl loopne js or outsb mov ret sbb mov xor popa and nop or scas in or or outsb xchg movsb mov push or and pushl addl push adc cmp and nop jecxz add mov inc mov js fcoms lods sub call test mov leave les leave cmpb (bad) xor pop or pop mov sbb inc mov or rolw int inc inc add repz xchg or andl dec divl push mov test add ss addr16 daa addb or sbb xchg mov mov sub das testl mov nop ret push test add or and jns mov int3 ss jecxz xor or inc unpckhps sub icebp mov xor cmp js dec add subl lods and imul and stos xor cmp test pop jns sahf and or push inc add (bad) imul jo arpl (bad) aaa mov and sbb adcl jge inc mov jmp stc aad mov mov push add repz call shrb jno fildl pop dec aaa push or xorl xchg xor call addl pop imul addr16 adc dec xchg add push or addr16 adc (bad) loopne add jecxz mov mov xchg pop push mov rorl (bad) movsb loopne adc movsb push or cmc add xor push add jno pop jo inc in xor leave inc mov jmp add mov loop xchg pop sbb aam sti std inc mov and inc dec dec mov adc mov pop lcall push push lds add subb test adc and xor lea push dec nop lods pusha loope jge and dec pusha inc xchg xchg or inc or cmp or andb cmp test (bad) (bad) sub sub inc orl adc jb insl je test (bad) stc push push xchg or cmpsl add add lods std insb or xchg aad mov xorl mov sbbb ret sbb jb xchg outsb rclb xchg mov jge ret stos (bad) fstpt inc pop adc enter and mov sub and icebp mov sub inc adc xor jecxz xchg dec dec pop or xor lds test or sbb dec dec adc sbb mov lahf push ffreep push nop and mov xchg or pop or or ret sbb mov pusha inc int call mov ret cmp sub outsb out mov sahf test repnz (bad) cwtl xchg pop cmp or rolb cwtl mov movsl dec lahf mov icebp or mov push pop pop fwait js mov test popa rcl cmp imulb xchg inc xor push or push and mov jge xchg adc pop popa imul inc test and pop add imul mov mov loopne jae pushf dec (bad) mov fdivl xchg adc and jmp leave or mov xchg cmp (bad) xor in sbb or repnz popa inc xor sub lock jno or xor push sbb dec hlt mov inc xor (bad) jo inc (bad) leave inc cmpsl inc push (bad) inc sub or lret nop sbb inc mov xchg das add adc mov cmpsl xor test pop sarb adc dec push nop inc roll adc rol je loopne pushf insb pusha push push arpl xchg sbb int test test xor push insb (bad) mov test xchg lods imul aam mov rorb imul add movsb cs and addl pop pop (bad) and xor roll cmp es or inc pop mov cmp (bad) xor jae xor xchg dec movaps push xchg dec (bad) jp push xchg jne or or loopne popa dec dec nop xchg sub std repnz pop cmp adc inc xor inc add sub or daa and or add add rcrb lret add insb rol test js test push mov jne,pn jecxz mov xchg xchg push xor dec pop adc xor packssdw pop push mov nop push add adc pop cmp sbb add mov inc push pop xchg pushl inc pop xor adc cmp sbb cmp xchg jg sbbb pushf test popf test shll stos dec sbb movsl adc mov dec loop and inc dec mov mov cmpsl arpl pop mov cli cs sub fadds adc inc ljmp fmulp outsl mov xor sbb add sub or mov ljmp lods add stos es xchg mov sahf add or mov (bad) and xchg mov xor (bad) movsl or mov test repz xor loopne or cmp push inc xor stc jnp sbb mov adc (bad) adc xor push mov je ljmp or sub test xor icebp stc arpl mov rcpps inc mov sbb int3 out xor and xchg test dec dec aad aaa inc and xor cmp adc sub dec arpl mov (bad) add popa pusha mov imul rolb jp push and mov movsb cwtl aas and xor or mov jecxz and mov jno loope push fldcw movsb inc sbb push xchg sbb lock push inc adc push xor js sub xchg int and cmpsb mov and inc test sbb sub xor dec xchg or mov jnp fiadd xlat (bad) cmpsl xor pushf mov mov and pusha mov xlat sarl add add ret jg xor lds cmp xchg add sbb arpl shrb mov push pusha aad cmp (bad) lcall mov sub lahf add ret push push das cmpsb mov or mov or (bad) mov ret pop les jmp xor xchg mov sbb orl dec pop (bad) loopne jl fcoms inc test cmp cmpsb mov dec test adc push daa xchg or xor cmpsl ret pop movsb rcl xchg jbe jp sbb ss das sub inc add mov mov movsb push or (bad) or push insb adc inc jno sbb dec and jmp push xor (bad) (bad) xchg lock xchg push mov pushf pop in xor push inc addl ljmp xchg fs pop inc inc or ss jo,pt add fwait xchg jmp mov aaa adc cmp cwtl pushf inc mov adc dec fst sbb sub add pusha dec add test mov xor sub js fistpll test or mov and test cmpsl mov and pop jne add (bad) lcall inc xor cli xchg inc and inc ficom mov test add repnz sbb dec push pushaw inc cmp dec add mov ret and jno imul aam in push pop xor (bad) mov cmp dec add bound pusha push push lods push and mov sub dec xchg xor pop add lea inc push push mov push and cmp sbb mov xor ret mov insl nop popf subb add lods dec or call rcrb aad xor sarb lea mov ret inc inc aam push cmp adc les mov inc aaa jo push pop add mov clc lds push aam or push nop jge push add cmpsl insb fldl xchg and pusha lahf gs nop mov fwait jb sahf inc test push popa enter and mov leave mov test call or call jecxz dec (bad) mov add stc and or sbb adc mov pop xchg adc movsl xchg and addl push das lods add sub push or xor xchg ret or push xchg pop add or cmp movsb daa in cmp daa gs dec xor add into jo xlat pop push xchg aaa mov fist add and int stos dec ret out jge push xchg adc inc add pop xchg lock add (bad) push or xchg jno xchg add (bad) sbb sbb les xlat mov mov arpl or push inc add test ret adc enter cmp lods xor clc jbe rclb or sub loop stos jle mov cmp pop mov mov jns addl or stos xchg push andl (bad) cmp and rol add sarl xor adc add xchg xor dec lods pusha and loopne fnsave pushf (bad) lods subl adc cmovb add gs and add jp mov sbb daa cmp mov add into add pop add pop (bad) adc lock inc data16 add dec icebp cltd and adc into xor popa adc stos add rcrb out ret jb ret sbb fwait les das add xor call imul sbb mov js js lret mov sub jb test inc push and xor test adc loope adc out adc pop or pushf je dec ret sbbl jne or data16 add cmp cmp adc sbb (bad) aam and jns loopne push pop or cltd pop test mov pop dec mov roll inc xor sub shl mov arpl mov xor or (bad) push xor sbb push sbb sub xchg lret popf and jae repnz jb sub and pop mov and jne pop pop inc loopne inc inc imul mov movsl cmp adc fxch push dec jbe and nop add xlat lock sub lods add test lods or (bad) jno pop (bad) ret and mov cmpsl or adcl xchg ficompl stc mov sbb mov stos xor add mov xor mov or cmp mov ss jo or and inc mov inc gs std pop ret inc orl and nop xchg xor pop sbb or mov lds or pop xchg loopne pop jae or and aas xor mov and xor movsb push add xor rorb pop xor cmc sub mov mov lods push sub shrl sub mov push rorb mov xor cmp push popa mov insb pop mov xchg addl mov jnp into sbb inc insl xchg mov xchg jb jg xor xor mov call rorl aad and add mov inc mov xchg inc xor mov fldt leave dec es iret fsubrl and add popf nop dec enter sub (bad) loopne lret push test lahf enter sbb fsubrs (bad) (bad) add add popa test xchg ss add mov mov mov fidiv push or add push mov add insl mov jne in xor rclb add jp cmp xchg into dec jmp aam add pop cmp xor shl cmp cmpsb sub cwtl ljmp push adc pop jbe and pusha sub push pop nop jmp mov nop add (bad) and add clc add lret adc insb and sub cmp lods cmp pop xor dec cwtl aaa and sbb out mov repnz mov jbe,pn bts pop ret inc and dec mov imul jno daa inc outsl mov outsl xor std xchg and inc cmp (bad) fdivl movsl movsl xor pop add adc add or pop dec fldl testl loopne sbb or fcoms sub cmp rorb jle mov and shrb icebp sub sub push push push test sbb popa icebp cmp inc pop push cmpsb xchg lahf adc cmp adc and ret mov inc inc (bad) or bswap loope ds cmp xor adc pusha fldt pop push push xor rcrl add and mov sbb add or xor mov cmp jg popa pop cmp add add cltd adc and aaa jl xchg and imul pop sbb and pop dec xor push ret and cmp out ss rorb dec jg sbb adc pop outsl xor aaa jne insb inc xor sbbl xchg mov rorl xchg xor dec cmp int inc loope xchg or adc mov hlt popa das fwait or imul leave sbb mov mov stos test or fcmovnbe sub test xchg pop and dec inc dec arpl add fs xor icebp inc inc lret inc adc mov push jmp das enter mov and jns (bad) inc or cmp or pop fwait les loopne push aam or ljmp push and shl mov add pop pop jno adc xchg push push gs sub pusha sub inc test cmp sub movnti add xorb or inc pushl mov add test les mov orb adc jecxz adc jo je (bad) outsb add inc pop jmp and xchg xchg (bad) xor fwait sar sub orl mov or clc sub push adc stc pusha add cltd inc push andb dec adc add shlb cmp xor xchg or sub aam and xor push mov push sub fwait sub cmpsb adc mov jge cmpsl mov push movsl das sub ja xor or outsl xor test pusha and mov pop lret push ds add xchg adc or addl mov je test (bad) int3 or sbb sbb or (bad) push dec add adc pop cmp sub adc jmp add mov or and in xchg mov inc jo mov mov fbld dec (bad) pushf repz rorb or push nop cmpl jp adc inc mov inc add push (bad) and pop popa xor pop or xor adc mov pop sti dec rclb lea add daa jl test stc jae ss lcall sub cwtl inc xchg mov inc les ret pop cmp mov in dec lods mov or mov mov sub stc jl add leave cmp stos mov mov cmp push xor jae inc adc add pop daa ss cwtl mov mov pusha or push xchg sbb add sbbb dec rcr mov rcrb daa mov test add mov arpl jge mov lret adc aam sub ss inc sbb jo test inc mov (bad) mov adc ret xor outsl rcrb mov (bad) xor mov fcoml test mov or sbb test xor jl sub mov (bad) lock push sbb popf mov rolb fisttp aam lret pushf push ss bound or xor js xchg mov arpl push lret xor xor or cmc insl pop das clc or adc inc movsb xor adc lea mov ss test daa xor mov pushl cltd and jae ss dec sbb fmuls (bad) fild push xor lret int3 rclb imul pop pop mov aaa add jnp popa or add dec sbb aaa mov nop inc mov push ficom lahf add add dec inc subl fisubl inc adc cmp sahf gs add or jge push je pop sbb jae dec adc pop loop aam push test mov xchg ret pop loop pop inc xor jnp (bad) xchg movsb jg test sbb popf jo sbb dec xchg pusha arpl xchg sub test adc sbb test push jbe mov (bad) imul xor (bad) leave enter scas mov mov xor dec adc (bad) push inc push scas insb or inc mov mov ret inc nop xchg loopne sti and mov mov cmp fnstenv shrb dec dec and xchg inc je inc test and adc or pop add test and cli orb (bad) push add or sarb aaa stc mov and test mov adc sub test push xchg mov inc aas or push push mov xchg imulb test ficom inc xchg sbb (bad) mov lock xorl iret dec or xchg mov xor shrb daa int3 push xor push movsl mov inc popf (bad) mov sbb lock jnp and or shrl and cltd xlat add addr16 cmp test jo scas movsb mull adc mov sbb pop nop imul fs cmp aad test cmc addl add or add push outsl sti inc pop and pusha adc add mov xor jae pushf or add sbb mov pop dec sub nop mov sub test pusha movsb arpl xor and popf or ss pushf xchg sbb movsb jno cmpb mov dec pop xchg add sbb inc lods repnz adc pand lahf inc or mov mov dec add push imul mov rol jle aaa andl scas mov mov mov test pop aam pop dec xchg cmpsb test fadd cmp push ret fstl aad or xor xlat lret dec ret sbb adc mov pusha ja inc inc push add or sbb dec adc mov xor cwtl mov push lea rclb sbb add push imul add inc dec lods pop cmp dec cmp mov and inc xchg es xchg xlat xchg xchg push insb cmpsl or or ret inc add scas cmp push xor xor fsts xor jl mov or push jo inc mov or sbb fidiv push mov loop adc ret enter imul adc fwait cmc sub dec or subl sbb xor nop sub adc adc xchg cmp popa lods add and inc enter pushf jl pop dec and sub gs cmp imul sub adc inc test out dec or aaa inc and lods iret mov bswap add mov gs lods mov ret add xchg mov lods mov and test pop fiaddl into add jge inc addr16 (bad) insb adc xchg xchg add arpl lret add or adc adc das or cmpsl fisttp loopne or test subb sarb lret xchg ret lar add sub sbb jbe push adc add enter es shr inc jno push ja adc mov xchg insl mov xchg ret ds pop push add push mov js xor inc mov scas cltd lea mov and dec add movsb dec dec pop sbb (bad) sub loopne shrl inc mov enter fidivrl add popl test daa adc inc cmp inc adc roll mov sub sbb adc xor js mov or sub or sub repz mov (bad) jo cltd xor sub pop setns xor imul mov test orl and jne and inc aas aas subb or outsb out push dec push push iret daa or adc or scas ret add xor fimull mov rol push mov sbb aad gs mov movsl add pusha fnsave pop dec push inc pop pop jo gs dec lods add jg aad mov (bad) lock mov sbb fildll sub cmc pop fildl xor aaa sahf inc popf mov lods add sbb adc push mov test addl nop sbb push sub fiaddl inc inc add (bad) adc sub mov test and push push add adc dec outsb and sbb repnz dec pop mov mov cltd int test mov sub flds adc xor add ja add inc aam dec add xchg adc out cwtl inc adc pushf or pop inc add cwtl xor js jl or cmp loopne insb sbb cltd jmp mov sti pop xchg push dec jmp pop mov xor lods inc sub ret les adc cmc sbb mov mov xor pusha adc add pop jne mov xchg rcrb arpl movsb mov (bad) sahf dec adc push cmp cwtl push or test into add jecxz xchg inc xchg or push pushf add or sub jbe hlt xchg iret es fldt inc add or fildll fwait xor xchg sub cmp cmp or pushf pop sub mov add outsb sub and adc pop push adc push adc in push jmp aaa sbb loope orl packsswb int dec lds adcl jns pop xor arpl sbb popa sub add jae,pt xor sub pop pop add or mov sub push inc sub xor rcrl dec and inc xchg xor sub pop leave outsb push sub or mov xor mov and xchg sbb lods ret push pusha and movsb pop test dec mov (bad) lock mov add cltd and xor sub dec nop call (bad) xor cmp and ret pop or ljmp push (bad) or sub cwtl xchg shlb popf jge dec dec js mov lea xchg fldt pop xlat add sub or jg hlt jbe cmp xor or adc mov sub xor inc sbb jae test sbb test or cmpsb mov popa and mov andl pushf scas lret adc xchg push sub nop repz or or popf daa dec shlb push mov pusha movsb fbstp pop mov pop fsts rcrl and adc xor xchg add pop aas stc shrl or dec inc pusha lods cmp sbb mov pop ret cmpsl sarb aas and cmc arpl movsl inc pushf dec sbb (bad) and jge or mov mov loopne subb pop jnp movsl adc ds add pop mov bound (bad) ret pop or sub movsb push push pop stos in mov dec insl leave push xlat pop dec mov shlb sub sahf jo adc shlb sub pop or mov and mov sbb lock inc cmpsl inc loopne sarl rclb or test and or mov inc mov sbb add inc fistl push mov mull and mov push cli stc mov es push lea jo out pop xchg sub inc (bad) or dec add push dec enter dec js push (bad) add testl ret jnp add lods adc sbb xor sub jecxz adc cli and or adc out dec pop insl push cmp lds pop mov adc pop push xor push les loopne pop mov int jmp xchg movsb js sbbl sbb push sub xchg movsl push and sbb lods cs insb and pop lret dec mov mov test and pusha sbb cmp add mov xchg and stos dec lret xor and mov push xchg push sbb daa lock sub test test cmovns insl loopne out and dec or and xor xor adc aam fs pop sbb push fsts xchg or ss dec or push inc xchg inc and jno ret mov mov mov or xchg hlt push aaa sbb inc js mov ljmp push (bad) dec mov xor inc in and sti aam add push cmpsb jmp dec inc aas test sbb aaa inc ret jg (bad) and scas popa add and ret sub movsl es sbb out push in or in adc mov inc (bad) inc rorl xor cld jg mov or insb sub adc mov (bad) cmp inc push mov mov mov push mov orb push adc xor sbbb cmp push xor (bad) xchg mov and xor xchg lahf ret int3 insl xor cmpsb rcl sbb pop movsl loop cmc jnp dec xor xor push test add movsb jo jns lods mov cmp stos push xlat xchg ds pop push push mov inc or add (bad) add push sbb add ss push sbb int sbb or test test xor fs rorb pusha sbb sub (bad) mov push push push stos test push and jge in repz adc test adc out push enter adc inc js enter test inc ss pusha push test ret xchg mov xor sti xor add add ret bound mov imul pop pop dec inc push mov imul and imul pop and add inc and loope xchg popa flds xchg inc pusha dec mov cmp mov inc adc notb mov in outsl and dec test dec (bad) push lods loopne mov inc lret sub dec sbbl dec add sbb in jmp and mov in or or inc mov add pop pushf test icebp jno and subl nop or lods inc stc inc loope test or pop xchg mov (bad) xor (bad) cmp pop push xor test jne pop ljmp jno or sub xor pop rolb sub clc xchg dec push loop and sbb add xchg and inc and jne or or mov out jnp adc sbb js inc and loop push push or daa fwait pop loope push xchg in les sub cmp and sub adc xchg addl mov adc or xlat icebp sub setno xorl jo in inc popa sub mov mov push and pop pop ret xor push or fmuls stos pop adc xchg add sub aaa lods movsb mov stos std push js dec mov xor xor test sti cli test insl sub xchg and daa sahf xor inc mov jb test mov adc adc shrl lods mov fdivl sub lods or jge ret adcb ja sub or cmp jns inc xchg fs sbb sbb fistp pop xchg inc test scas or adc cmp imul add pop pusha or test mov jne mov out faddl sbb and and or pusha add repz jno sbbb ss push mov xor movsb cwtl sbb sub sbbb and jo inc inc ret jb cmp nopl test (bad) (bad) cmp pusha test fs lock mov ret push test sub dec xchg stos xchg (bad) leave pop rolb or stos xchg mov pop inc and cmovp push mov ss add test xor loope nop (bad) sbb lods xchg add jb inc cld clc (bad) test push or mov or fstl (bad) sub dec cmp push movsb and mov push jle dec stos nop (bad) hlt adc xchg jno jae mov or (bad) sti nop add mov sub push xchg xor ficomp jo xchg lahf mov dec sarb dec (bad) aaa jne mov push (bad) or add or push add mov arpl xor or jnp adc cmp adc imul inc jo (bad) mov xor roll inc outsb dec mov sbb pop rclb mov in daa jb lds lret cmp add sbb (bad) xor jo sbb mov jp test dec adc inc sub fnsave or add ret icebp loop movsb add mov pop ret adc pop pop dec sub pop clc lods cmp pop dec and inc adc andb es inc and and mov lods sub or sub push dec es or scas cmp sub stos ss adcb lret leave test test insl inc dec xor mov lods push cmp loopne and and inc sub xor fildll and jge xlat xchg or stos adc insl pop iret pop push ret imul xor xor sahf imul xchg or and and xor sbb cmp push rorl mov (bad) pop push gs inc cwtl loope es sub inc das jecxz jo arpl rcrb push add add inc mov popa xor inc sub or or mov adc movsl fs aad cmpsl mov or test insl lret jo xchg movsb push icebp pop fistp cmpsb xor or or mov or lcall push add mov mov push mov sub cltd and jns sub jp add test daa (bad) sbb pop xchg push mov pop mov outsl sarl push mov ret sbb int cmp test add insl pop and adc sbb roll adc popa xor (bad) test scas push lcall lcall or adc xor push push dec push add inc adc jmp xchg or sbb push dec sbb addr16 adc add jmp add or inc outsl ret cvtdq2ps das leave pop push mov lods addb mov (bad) dec loopw pop xchg nop push js imul mov sbb sbb popa and test arpl pop mov xchg mov gs loopne pop push jecxz cltd dec and and mov pop ljmp mov int3 inc andb jmp add adcb push mov lret aaa insl enter test adc inc std xor xchg fnop and pop (bad) lret or inc jle inc xor mov cmp mov adc (bad) dec add add pop aam jmp pop xor xor (bad) mov inc push and mov jno cs iret xchg outsl xadd or cmpl jg dec add dec or cmp adc mov inc xor and cld test scas test sub add dec push xor popa mov repnz adc mov lock pop loopne mov pop in dec pop cmp mov adc adc xchg lea and or or test orl pop rorb xchg mov or (bad) xor xchg pop sub push pop xor sahf mov adc pop lds jnp pop cmp ret (bad) add fincstp popa cmp (bad) adc and cmpsl mov jbe mov mov sbb pusha dec orl or das f2xm1 (bad) mov xor test mov test jnp add (bad) fisttpll mov aad adc setns xor mov movsb mov movsb and or lods add mov adc xchg adc cmc mov or mov adc movl push mov std lea mov insb popa int movsl adc push fisubl imul jns add sbb mov pop add xor pusha imul jae,pn cmp xchg lret or pop and pop addr16 xchg ss nop adc inc mov fsubs mov or (bad) sbb insb sub push fistpl ss pushf subl xor roll ret sbb push sti jo sub and xchg or cmp mov adc shlb jecxz mov mov orl mov dec push add push iret jmp push orb sub or stos pop into lcall sub mov inc push clc add mov or lods mov cltd rol mov out ret jge and sub mov mov mov inc (bad) and popa loope adc cmpsb ret or rcl jecxz dec inc xor bound icebp or dec aam mov ret (bad) xor add add sub rcll rcll out sbb inc ret enter popa stos mov rcl test jns shl ffreep pusha cmpsl inc push xchg insb test and xchg pop dec and rol mov xor jo add (bad) les mov test adc push es ret pop xchg in adc mov enter pushf dec xchg stos ljmp lret in loopne lock popf sub cmp fwait (bad) mov das or xchg insb xchg test mov (bad) in mov xchg sub add push push test jno mov cmp xchg test xor inc mov cs jo xchg mov push add js mov add nop mov xchg jo pop sub insb loope or test sti inc loopne test push shlb and pop jge and inc mov mov icebp push dec pusha in mov mov loope daa adc inc mov jecxz sti je push xchg push loop sub xchg loopne mov push mov pop sub test pop push sub mov mov or (bad) int pop add pop inc push mov andb addb das lea jb xor sarb test rclb movsl fcoms inc pop icebp and dec loope sbb (bad) push mov mov es pusha jb dec mov sub push pop mov inc cmpb or outsl sub xor orb dec push dec fiadd pushf imul add inc pop inc cmp daa push pop mov cmp repz out mov cmp je push roll (bad) or adc and and push nop ss das inc xor add add push es adc repnz movsb xchg cmpsb rcll push pushf pusha mov push sbb adc adc xchg sti mov adc mov out and sbb aam dec and xlat adc adc xor xchg and imul leave daa xor rclb cmp sbb ret pop lret bound mov test out divb push iret ret mov sbb (bad) loopne xor adc ret ja ja adc sub insb mov mov jns nop sbb imul popa sarl jmp lods pop dec dec pop rclb add sub aas xor adc dec popf out scas xchg inc cmp cmp xlat add add leave imul push sbb insb pop into push fs frstor jb xchg (bad) pop mov dec push sub mov js daa fst xor xor insl jp or arpl stc arpl pop aaa xorb movb sbb mov pop adc add adc cld nop push cli pop xor inc xchg sti sbb xchg xlat mov fistpl pop frstor mov push and mov sti dec dec test cmpb or mov sub test cmc and pop mov test cmp xor inc imull and push sub cmp cmp cmp test pop cwtl pop cwtl sahf fs inc movsb mov push leave adc js cld test xor pop lret cmp or (bad) inc js add xor addl shrb (bad) and fs sub add jns mov cmp or xlat clc xchg mov lret sbb sahf mov mov (bad) push cs ret push ret dec popa test mov mov mov inc mov lods mov imul bswap fsubrs out movsb inc daa inc add shll movsl (bad) cmp pushf lahf je mov shrl int cmp (bad) xchg data16 test pusha insb dec lock mov add fcmovnbe dec (bad) pop pop cmp push push xor xor and sbbb sub addr16 lcall fsubs or and loopne sbb nop xchg das addr16 and mulb or cli es or cmc and push cmp in jae inc push call sbb xchg xor fsubrs push pop sbb dec daa mov sub jp enter jecxz ret add sbb mov test xor ss mov popa inc adc mov sub push rclb shll or lods sub push dec push pop add test xor shr add aaa xchg adc cmp jp jmp sub andb or daa or mov lret pop arpl add dec jl push ret orl jno cmp cmp icebp adc push cmp xor setb adc popa mov push jg adc sub mov adc outsl pop pop mov mov and dec jns aas jp inc and lcall push xor rcrb xor pop or pop add add enter fisttpll push aaa push enter cld xor mov lds or sbb lock adc js push cmp out es or and sbb mov sub add rcrb push sbb sub enter sbb mov adc and cmp or fs (bad) cmp sbb fdivr mov inc jp dec mov and mov lret mov lock ss sub sti mov push sub sbb fist add adc orl rorb jo adc push xchg and and ret and jmp movsb xor insb pop sbb sub (bad) adc mov lret xchg movb sbb int3 sti adc mov lahf ss jle js push xchg inc sbb jecxz pop add (bad) xchg add leave pushf mov or cmp mov add sbb mov or push cmpsl mov fstps imul outsb pop xor int imul dec flds outsb dec shlb adc adc rclb cs cmp xor lock adc push adc inc test (bad) pusha sub push mov lods dec nop lret add movsl push inc call xchg rorl mov es sub dec add add add adc cwtl push insb pusha loopne and inc xchg mov mov sbb inc sub lea push sbb xchg adc push dec add pop ret adc pushf cmpsl hlt xor sub scas dec inc xlat xchg push xchg cmc ljmp push stos push jo leave js int (bad) imul inc popa test inc dec adc cmpl push rcll add mov jl sbb adc or jnp outsb faddl (bad) xor nop xchg and add sub dec insb jns sub pop sbb adc mov loop dec or dec sbb nop inc sub xchg jo mov insb inc push mov lock xor mov adc pop or pushf xchg jp or adc push pusha add pop push adcb stos mov dec jl into ss xchg arpl mov cmp loopne mov lahf insb inc (bad) xor jb cltd leave dec insb add outsl or inc inc push lods inc shlb mov pop ror xor (bad) add inc and adc sub movsb loope inc sbb mov shrb (bad) xchg adc and xor dec loope cmp cli xor push loopne test sub aam mov xor pop das sbb add cmp and sbb inc mov jne push sti add jp mov inc inc and test test or in fucomip fwait sbb xor sub mov xchg out inc adc add add movsb lahf dec adc push add xor mov test sbb pop pop sarl adc mov (bad) mov mov inc and cmpsl or in mov sub xor cwtl rorb cmp mov or aam dec sub lahf xor jle or mov or ffreep lods lods adc shrb or movsl or or and push test and mov xchg lret adc pop inc pop cmp (bad) adcl mov xchg inc jmp (bad) aaa stos es call sbb jecxz lldt hlt dec sbb cltd sub (bad) movsb (bad) cmp inc daa mov pop push jne fildl cmp test mov lea and pop int3 add inc xor mov mov lret adc aam adc shrl testb rolb dec adc or pop test mov ja push into lcall js push stos xchg gs inc add xorb inc loope xor dec add add add add sbbl sub bound cmp outsl sbb ret pop aad rolb cmp xor pop lcall adc ror xorb mov dec arpl sbb xchg popa xor xchg inc (bad) out xor dec bound adc add rolb xor pop and test ret mov push loop pop dec (bad) mov sub mov inc xor lods or imul xor or sbb jo arpl cwtl mov lahf fmull sub movsb push sbb adc in arpl cmp pusha (bad) adc ss lods pop (bad) inc xor sbb (bad) adc in push (bad) mov and add lahf loope adc in gs xchg jo cmc mov std jns int3 pop inc xchg das cmp adc pop das xor inc and sub adc rclb pusha dec mov sbb sub sub inc in (bad) lahf xor ds mov popa adc mov and or inc adc xchg movsb sar fwait or mov les sbb mov int in xor dec and xchg mov jmp cmp xchg and xchg (bad) int3 sbb sahf jo and roll sarb jno push inc stos sbb outsw popa lea inc and (bad) dec jp dec jle add loopne inc aas pop add add and and (bad) icebp mov sbb xor dec cmp push or cmpsw dec sbb repz xchg push pop pop add or pop ret add jl adc xor out and push stc les lods inc scas or rcll (bad) aam or inc pop mov sbb mov or pusha insl cmp daa pop dec pop js (bad) mov cmpsl push jno fldl pusha rolb dec lahf and inc mov (bad) sub ds adc popa mov repnz dec subl xor inc add add or fsts cmp mov imul sbb pop das or aaa jg,pn xor add pop outsl decl flds mov fldt fcomps cmpb daa and cltd xor stos sbb popa or xor inc xor jmp test or movsl and push ss jecxz pop adc or dec or sub mov xchg addr16 stos add and gs and gs dec push add sub dec test shrb les enter sbb cltd ret aad imul rorl add adc imul sarb rcrb or jne ffree mov add (bad) mov into or dec cmp inc or mov outsl loop test (bad) cli jecxz ss hlt xor loopne popa jne daa or test mov jae adc and or jmp in ljmp mov inc add jecxz adc and fldcw add ret neg xor sbb xor add xchg aad (bad) mov and pop aam nop (bad) push adc or sub pop js dec xor cwtl pop and inc test push nop mov int in and mov outsl sahf cmp dec or pushf cmp lods popa sub push nop nop sbb andb push mov mov cmpsl or dec out inc and (bad) sbb inc dec and mov lea cltd jnp mov cmpb xor or or test lds test jnp inc roll rcl aaa or dec ret inc imul push sub fistpll and sub leave js sbb pop xor js,pt inc lods inc (bad) adc fadd sbb test call push push xchg fisttp fisub fsts or sbb add ds rcll popf scas or popa push mov jne adc andl inc imul or mov cmpsb rorb pop jp or imul addl arpl or leave sbb lds inc rclb dec repnz mov inc cli pop inc (bad) je lods test push dec or push or or rcll mov mov das ret sti imul bound addb add pop jns leave fldenv sub idivl adc test mov pop pop outsb daa xchg fstpt ret aam insb jns lods xchg add pop pop add jb xor cltd add add cmp or jp (bad) mov sbb mov in sub mov mov cmp mov and imulb xor lods pop (bad) mov daa (bad) clc ss sub xor jge ficom push aad push mov js inc push dec mov loope sbb xor or xor jnp adc lcall nop cmp pop fcmovbe mov push adc sub (bad) jo call mov arpl push repz inc dec inc lods fisttpll push mov xchg jmp xchg cmp cmp lea popa shrb push mov rorl dec push jbe ret mov push dec adc ret pop mov lods movsl push cmc shlb jns mov xchg popa ja mov ret fmul xor ret mov xchg stos sub fimull lret arpl imul and loop ret or test ret dec sbb int mov divl sbb push dec popa or dec push dec pusha sub mov jo push ss push add xor xchg and xor xor daa dec dec dec ret cltd xchg dec xchg or mov (bad) sbb sbb or adc and mov lcall dec rcl adc push add divl cmp jmp popa push mov push cs pushf sti jo mov mov inc je fwait cmp push push adc fnsave pusha lret jne sbb and fisubrl fs mov leave mov sub jge imul mov and es mov or and daa std mov add inc mov add inc sbb pop pusha sbb mov xchg xor add xchg movsb push fbstp cmpsl sub popf rclb inc sbb int xor pop xchg rolb fnop pop mov mov lods orl xor mov add (bad) dec jns inc sbb pop xor or jno push dec xchg and mov xor sbb sbb imul (bad) xor add add jo mov mov jne xor adcb push pop xor xor xlat ss xor sbb insb sub add add fcom (bad) xchg je sbb aaa xor (bad) mov jmp sarb out dec shrb lret test pusha cmpsb xor jne xor push adc adc test dec ret leave js mov cmpsb xor and push pop in mov leave inc mov pcmpeqb es sub and ffreep add ljmp mov adc jo jmp mov int dec or mov test test inc test adc addl aaa loope xor mov inc dec popa sbb mov add test addb cmp mov jo in or popa sbb add push mov push movsb mov repnz or stos add xor add xchg mov push das add cmp rcrb add addb mov xchg cmp daa leave outsb jae sbb pusha imul inc mov or cmp jb cmpsb xor sbb fstps jl pusha or cld out xor pop es js and lods cmp lret pushf pop mov push (bad) cmp or inc loope rcl mov add lods (bad) xor jp pop push leave les pop pop lock sub and inc add lods addl push adc les add and cmp lea adc stc or js mov icebp or scas aas xor fldcw nop aas enter sub mov or sbb stc and dec dec fmuls popf mov dec (bad) jns in or (bad) push xchg add push add mov (bad) mov aas sbb outsl pop scas cmp jo aad xor test (bad) add or (bad) pusha in rorl push lea inc xor and sub stos jne rorl cmpsl mov cmp mov lods adc adc and inc jge dec or inc pop dec pop mov outsl mov mov inc mov add push xlat (bad) push fs sbb das lods inc or (bad) mov dec xor xor xchg in shl inc mov add add ret loop jecxz sbb cmp rolb pusha in sub or cmpsb sub push pop sbb push sbb sbbl ss jb jge xchg movsb test test adc xchg pop sbb bound imull cli pop aaa popa cwtl pop inc xchg inc addr16 shlb ret fld orl stos cltd push mov push or and mov leave aaa xchg adc inc imul hlt rolb aas add nop push insl pop add adc xchg rclb adc push or and add inc and jle inc test sbb add adc test loope push rorb push ss mov xchg jb xchg cltd mov inc mov lret hlt dec dec push lahf jmp push gs repz push leave or xor das pop push push dec mov fidiv stos add pop sbb jns add pusha add cltd aam movsb imul aaa or dec mov and popa and sub and adc ss jo mov iret add dec psrad cmp push enter adc add add cmp inc enter jno mov sub repnz inc in popf cmp das sbb xor push push sar xchg cmp adcb adc sbb pop mov mov jle mov inc rcrb in sbb popa (bad) xchg jge mov cmp inc pop xchg movsl ret popa xchg sub btrl dec xor je pop fisubl jo inc sub xchg xchg and and mov rclb in xchg and imul les push rorb mov test nop lret xchg aas rolb cli jno ss andl dec aam sub dec shl adc adc inc cmp fmuls adcb mov xor imul pop inc adc loope or aam sub mov or lock adc pop push dec leave pushw (bad) popf push outsb mov pusha sahf dec xchg addb xlat shrb xor mov mov pop xchg outsb pop ret imul mov and shll daa sbb push pop stos add mov dec dec fistl js cmp lahf and pop lods xor std add xchg mov push fsubs cmp mov leave inc andl pusha dec xchg inc sbb rcrb sbb xor movsb int3 imul dec sbb dec leave cmp imul leave adc inc jmp jne (bad) xor (bad) dec adc and sahf cmpsl inc or cmp orl cmp inc test xchg push test and scas popa jmp sub pop xor mov add lret adc inc add jno ret inc dec in or aaa dec lock ret mov inc add or mov in xor and lret lret ss rol and mov outsl xor pop dec and pextrw pusha leave sub outsb sub pop mov or sub adc add jnp mov mov stos es push mov mov sbb sbb sub int push push test xchg or pop sub lea sbb push xor cltd inc leave nop sarb inc xor mov and or stc daa pusha and lea push jns inc inc add iret sbb test xchg add movsl xchg xchg adcl lret dec pop test jae add pop push or inc (bad) insb mov dec std inc pop test mov jb addr16 test xchg add adc inc or add mov xor mov jae fnsave or inc stos cmc sbb and xchg pop shll mov mov cmp (bad) or mov xchg mov dec aas stos sbb aaa mov mov and repz mov dec push mov aam out push aaa sbb sub mov pushf pop lret sbb mov adc aaa enter jg push pop enter and and fidivl gs addb mov and (bad) mov arpl mov inc icebp sahf loopne popa jno das mov inc out inc inc sub add pop inc xchg mov push addr16 mov mov or rclb jne lea sbb ret xor jo adc jecxz sub push xchg repz sbb popa nop and xchg jl cmpsl lahf aaa adc dec bound or mov loopne (bad) pop jo and cmp sub mov fwait addl pop add js addl jae jb fnop dec inc mov popa sbb andb (bad) xor lds push sub and push movsb popa sub sbb or mov (bad) dec add arpl cmpsl cmp or inc pop adc pop ljmp enter int or pop push (bad) sub xor lods mov stos std xchg rolb dec sub push inc movsb xor fldl mov mov fcompl adc popa sub lods mull test aaa sub js jne arpl out das or and jge and jae insb rclb add repnz bound xor and xor add fsts (bad) xor shrb or repz rcr mov mov inc fistl add shrb add add out inc or mov mov arpl mov inc imul and loope and pop sbb sub ja jo or stos rcll sub fwait sbb pop cmp outsb sbb and inc push dec mov jmp mov jne lea adc mov fnstenv imul call movsb push movsl mov leave es outsb fdivrs inc call adc and or adc adc pop or sbb lods xor ffree popa push xor inc push xchg mov xor aam leave add dec das sbb or sbb lock shrl pop inc mov sbb stos ret inc lods dec mov mov sub mov xchg mov bound add mov add push mov inc xchg das or dec rclb xchg mov sbb jecxz rol (bad) mov dec andb out mov jb or or lds xchg popa sub mov add imul xorl adc or dec cli and js aad adcl orl push jmp mov pusha insl movsl fwait cmp dec test lds pusha popf mov cmp dec sbb dec lret xchg xor daa add int push repnz mov sbb imul test cmpsb xor mov cmp or jle mov cmp push rorb xor xor adc loopne add insb add and stos ss mov mov or pop scas lods iret adc push add xchg rclb jns add cmp add inc mov and and dec enter add inc je pop mov push insl (bad) mov or lods xchg dec rclb (bad) mov and loopne cmp mov and mov sti mov repz cmp or add pusha sbb inc mov sbb pop mov hlt dec adc lds add xor popa adc xchg sub adc stos adc orb sbb fcoml (bad) sub adc ret (bad) mov mov adc call pop push in pop ss add loope ret aas int flds (bad) in xchg adc sbb add les xchg mov hlt scas stos aas jl add push jne dec xor data16 add dec mov mov imul add or inc jmp xor leave xchg ss adc rorb subb cld mov dec inc push sub cmp jp push or sub sbb push push fstps mov push fmull push xchg in (bad) arpl sbb or leave jmp push test mov arpl pop add pop adc and sub sbb mov setae sbb adc sub xchg sbbb mov iret test out push sbb dec stos aam push pop adc jns xchg jbe mov and pop dec in loop adc push pop xor xchg sahf lea and xor daa or xchg sbb fstl in or adc imull ds sub and mov pusha inc popa or adc addl mov xor fildl in mov and xor rcl or lret enter fcoms fucom fwait sbbb lcall test popa shll imul cli push (bad) in icebp cs nop lods add hlt dec pop mov frstor ffreep sub call pop (bad) mov aad cmpsb pop lods sub inc add rcrb fiaddl add mov push add sbb loopne fcoms pop inc xchg rclb add push add nop sbb fnstenv jmp jl cmp push xor adc mov call push adc movsb push stos adc mov jmp fsubrs adc adc pop lea loope inc mov add jno sbb dec add sbb add sub test sbb ret inc dec add xor adc leave test pusha js fidivr adcl loop loope ss dec shll xchg loope sbb popa push mov (bad) mov xchg ljmp add sbb adcb and add sahf push adc test xor (bad) xlat movsb test lea lret fisttp adc push push dec xchg inc ret mov dec jns lods scas pusha mov mov pusha js ret leave repnz inc push lcall sbb add fdivrs fisttpll mov mov inc or mov xchg sub sub in or push inc popa adcl pop outsb or lods add push in xchg add or and push sbb (bad) mov arpl mov test inc sub mov scas inc xor rolb (bad) xchg xchg cmp repz mov push or jb pushf sub (bad) jb xor iret sub and mov xor imul inc xchg in test xor inc push leave adc jnp loope adc fisttp scas test sub pushf adc das xor adc cmp xchg rorl rol imul pop clc and mov int sbb and inc or cmp insl fwait lock lods xor push or sub shlb inc add pop fbld dec dec nop repz mov or or or cmpsl aas inc dec adc mov sbb cmp dec add add fsts mov or imul add inc adc lods add jnp js xor jl pop xor mov arpl cmp push fs and or movsb or andb push add lds (bad) lock sub jge push add call mov push sub sbb rorl mov cwtl xchg push add call xchg add pop adc movsl cs sahf or pusha inc out or push adc or inc and dec gs and pop addb xor dec lea imul enter arpl or popa jmp adcl lea pop xchg and mov xor mov add adc add mov sub add adc movb mov das mov sub sbb lret popa dec xchg xchg addb xchg push push cmp adc les mov xchg jmp shlb dec and xor sbb mov inc xor lcall cmp stc add subb adc pop rolb stos pop mov cmc pusha pop add cmp xor enter sbb jle inc push push aas sub mov test inc aaa lcall xchg add int3 test mov or cmp pop add and xchg fildll cmpsl (bad) cmpsb mov sbb add wbinvd mov inc loope mov test add out mov xorl pop adc dec inc out pusha or dec test cmp fsubs loopne xchg cmp jb sub push sub inc add pop fsubl adc xchg mov adc sti add xchg dec fisubr jne loopne add or and scas rorl pop mov pop xchg xor cmpsl cltd (bad) jo add add fs ds scas cmp (bad) gs sub adc mov inc ljmp jge scas add lea rolb cltd or cmp inc mov pop push jno dec xchg add pop push cmp imul lods push pop aaa test lock mov add das imul lds mov (bad) or shl lret add sbb (bad) dec lahf xorl xchg hlt dec adc popa xchg inc fcoms xor add adc ljmp lret and inc (bad) xor adc loopne cmp sub add repz popa ret or dec sbb sbb rorl aaa inc (bad) cs dec dec out out inc pop pop xor dec lods or jns xor pop sbb mov dec (bad) pop insl lea cmp pop (bad) lret sbb inc shrb mov outsl ret int3 lahf aam mov sub enter nop or xchg jne test xor mov push jne lods test jg mov (bad) mov insb xor xchg (bad) mov aaa dec sbb scas dec fnstsw xchg sbb mov out ficomp and arpl clc dec mov sbb out jecxz jae andb xor push iret add (bad) mov shrb dec and inc pop daa mov popf jnp into (bad) add adc inc das dec adc xchg adc lods repz test push test pusha add xorb loope adcb xorl cmp cltd rorl fiadd push mov nop sbb sbb and adc enter adcl leave dec pop or sete xor add xor loope and pop mov loope imul adc lods xor adcl mov ret mov add lds jmp imul outsl sbb (bad) xor cmp xchg das movsl inc sbb fisttpl xchg dec and in push aas cmp imul xor and xor add adc jmp add and push pop mov jge xor repz mov and pop insl or and jmp xor rorb xorl nop xchg mov out lcall inc xor movsl inc call adc mov dec pusha aad ret (bad) in cmp xor gs dec sub mov inc imul cmp and imul lret inc test inc push push cmpsl popa test hlt imul pushf lods inc shrl xchg cmp inc insl adc pop cmp addl xchg add add cmp pop cmp aam push push mov pushf sub daa add mov add mov aad push pop fldenv or push and xchg and ss lock sub sub dec lods and push pmullw inc imul inc xor jne xchg popa or test or rcr shrb mov shll inc or mov adc addr16 add jnp xor sub dec or lock or (bad) out (bad) subb popa inc movsl lods jecxz sub inc insl rolb xchg pop clc and icebp loop xchg sbb xor test inc jge test cmp dec into push adc jmp push js dec inc mov or pushf and sbb popa mov repz push mov and xor sbb mov sbb adc push jae add in push popa sahf xor imul mov mov scas xor add cmc dec lods or test cmp (bad) lods and jo decl (bad) mov (bad) scas notl mov sub and mov mov bound mov xchg inc lret js stos (bad) push adcb sbb inc sub sub push cmp imulb lock adc addr16 fxch xor sub or adcb or into ret lods outsl mov dec pop pop pop xchg xchg cmp mov adc movl mov outsl push test xchg or es sbb fistpl cmp popa inc mov test and inc mov in dec inc mov sbb popa dec stos dec mov add loope inc jecxz pusha inc clc sub push xchg test mov add sarb outsb mov mov test push (bad) sub jge rolb push cs adc insb pushf imul xor inc mov ljmp jg cmp imul fistl jne dec mov xor and sub imul or xor (bad) cmc cmp insb add and mov push daa fldcw mov gs cmp rcrb shrb inc pop (bad) or prefetch or (bad) xor dec test loopne mov imul xor jo test aaa lods and cmp dec js xor ss rcll icebp in jo rcrl jecxz and mov push xor (bad) dec (bad) aam fnstsw aam xor xchg dec loop and add xchg jno add (bad) mov ret subl jge (bad) or add adc int3 sahf pop or insl mov into xor adc ret add jne xchg inc adc sbb sbb add push inc xchg sbb xchg (bad) sbb or dec js adc inc inc test push adc (bad) in js mov mov pusha push shlb mov (bad) loopne sbb and mov fisubl push sbb xchg imul fnstsw outsl mov mov (bad) lods mov in insl movsl jo push xchg and xor pusha and rcrl dec rcrb jge cwtl jne lcall dec popa out lea lret xor ss loope sub xor adc lea add adc dec inc or and inc shll or sarb lcall sti ffree cmc jo lea into loopne and or and push imul add js sti movsl dec or dec lds xchg mov les cmp lods mov out adcb mov dec aas lods adc rcl jno push add test fstpl mov add adc shll test (bad) xchg int3 mov push popf inc and pop jno ficom cmc jbe or call bound sti popf xor xor push inc xchg push mov jns sbb xor pop push bound sub push xchg lock pop pop inc cmp mov add xor jae outsl in imul popa sub sbb cltd pop or sbb xor xchg gs iret xor dec xorl jmp add mov xor sbb out adc (bad) dec sbb (bad) pushf adc icebp les xor nop add jo dec inc xor (bad) push dec xor bound add mov scas cmp xchg rclb add leave mov inc fcomps push rcrb xchg pushf sub arpl (bad) lds das add or loop pushf or ja push lea test mov adc or adc and adc out fistl or outsl arpl mov mov ret sub rol xor fisttp or movsb sub (bad) jg or nop cmp imul xlat or mov imul sub xor jno and sar jl pop les or inc ret test test push jp inc stos les add fisttpl or pop and inc nop sub ret xor es sarb loop mov push and dec add aaa xchg leave adc inc and neg ret inc mov icebp xor jl aaa (bad) fsubl shrl into nop and ss mov mov push pop mov movsl and jb mov aas xor mov and add xor and in lret and adc cmp cmp psraw sbb icebp xor fistp xor xor dec jo mov insl (bad) xor sub and mov xchg or jg int cwtl mov and (bad) ljmp xchg xchg and jmp cmpsl das inc stos xor mov sbb mov dec cwtl pop lea mov iret push das sbbl pusha mov sub pop test ljmp mov je add (bad) lods xchg pop movb push test and adc xchg adc stos mov icebp inc adc cmp das lret ret ret (bad) push mov xchg sahf rolb std and sub in lret fwait or push inc and dec insl jne es les jp push cltd sbb (bad) mov fs push or (bad) jb pop sub dec imul inc mov daa loope push sbb les loope pop clc mov xor lea hlt (bad) and fstps push dec and and test mov and cmp xor sub add dec xor or inc stos out mov add and sub (bad) dec enter insb sub rcrl gs sarb aad mov cltd mov pop pop das repnz enter ss or adc sbb fisubl test pop pop inc test push outsb rol xor loope add enter and xchg mov jmp pop or pop mov addl xor adc adc stos push and popa xchg jmp and inc mov and xchg sbb lds sahf dec cmp pop loope (bad) xor rclb xor rcrl pushf gs (bad) dec sub dec jecxz loopne xor dec xchg sbb mov cs ret add insb js (bad) dec imul xchg je aaa fcmovnb add sub lret xchg xor rcl or dec pop adc fisubrl aas popa lahf push and xchg push je mov inc sbb pop sub mov imul nop mov and pop and mov cmp pop inc xor roll xchg cmp pop test xchg xchg aas sub adc ret mov jge dec mov out rorb lret lea cmp sub mov sbb mov test xchg icebp and lea mov and xor test popl jb popa adc ret or mov add pop loop loopne push out (bad) sbb les sti mov mov xor inc flds fs nop test data16 push sbb push xor bound hlt std mov xchg pop test push push sbb int loop push in add sub push pop mov add mov mov inc xor (bad) xor mov or and sahf inc xchg and mov xlat js cmp test xor mov out sbb sbb sbb add pop or pop mov xlat adc mov hlt dec sbb das imul fs and movsl outsb pop xchg and ficoml je sti pop xor test sub test (bad) mov (bad) (bad) stc jne pusha and mov inc xchg jne and mov cmpl lret add cmp test mov mov jg xor push add mov add xchg js add fiadd sub pop sbb (bad) push xor push nop push lock xor and insl fs pop inc loopne inc xor or xor mov sahf sbb stos and in xor addr16 add fisttpl xchg gs popa (bad) cmp xchg xchg cmc jecxz push pop xchg fsubl adc pop (bad) addl inc inc push sbb hlt and add pop jae mov enter loopne and dec movsb push add cmc mov (bad) and dec add mov mov or fmuls lds push xchg add mov xchg xor add push jb lods pushf xchg add pop (bad) xor ss adc adc inc adc arpl jecxz or out and fldcw sub xchg mov imul add add sbb mov ret rolb arpl push cwtl xchg leave inc pop xchg stos xor or pop rcl aaa gs out jge movb jne loopne dec cld repnz arpl cmp cmpsb pop bound inc sti shl sub inc or stos mov and ljmp scas and or mov ss in or cwtl sbb leave xorl mov orb cmp xor pop outsl in xor add jmp sbb lock or dec cmp xchg rsqrtps cmpsl add sub adc cmp (bad) lret out inc out or mov hlt and insb ljmp (bad) sbb loope shlb loope stos daa popa pop dec jge arpl adc popf inc les inc xor inc add lcall add sbb in mov sti in xor or imul nop mov dec xchg inc or in ja sub loopne push inc add adc nop test lods pop les jmp cs dec sbb mov nop cmp mov ss leave push mov adc icebp sub adc in and add push mov inc inc mov jne xor dec xchg sub sbb pop inc cmpsb and mov arpl dec dec adc inc xor xchg cmpsl sub and orb dec pop popf sbb mov and int add fs pop test or aaa mov enter js and jo jo icebp ss lret cs bound jmp xor mov jmp inc push cmp push wbinvd mov dec stos in sbb mov mov inc shlb xor lds aam mov loope xor or push mov (bad) or cmpsl lods fnsave movl imul int3 pop dec sbb mov movsb xchg lods inc movb xchg xchg cmp cmp cmp inc inc lods mov pop sarb pushf push (bad) ss cmp push xor inc xor pop mov inc insl add pop xor cmp (bad) sub add shrl add pushl push and outsb loopne lds mov dec and leave inc add sahf mov fsubl sbb imul xchg mov push inc (bad) in lea leave fsubs jmp leave and dec add sbb mov fwait push test add or mov add call and movsl push or sbb aam enter (bad) daa add and sub sbb adc shr or jmp push addb mov jbe inc sub pop mov arpl sub jo add mov cmp inc pushf js ret add or lret shrb ficompl orl pop fwait sbb pop mov adc or or pop lock pop xchg outsl add add jb mov adc dec jns mov cmp in (bad) ss pop or xor sbb or push or inc adc leave adc push loope adc xchg dec sahf test movups dec jno sbb add sbb jmp pop xchg pop add mov mov mov or sbb mov mov sbb adc or add sbb xchg addr16 mulb inc (bad) mov insb (bad) mov mov nop leave mov push mov or push rcrl dec and rorb js xor xor dec add or insb pop mov dec aam add and add jge sbb popa and xor mov fsubl xchg aas ss add push xor daa nop inc and or rorb and push fwait and ret or xor and inc push fldl aaa push mov popa movl jb movsb adc mov xor adc or mov adcb jmp lea inc adc and or cmp (bad) mov mov mov push inc mov inc and fcmovb (bad) lock push mov (bad) and and push movsl mov add add sub lea les insl fmuls pop mov adc aad arpl addr16 sbb and mov xchg cmpsb out xor xor arpl mov and or xor dec jno dec push nop mov inc cs sub sub enter push je add adcl gs dec mov and mov addr16 ret roll orl mov andl lret mov mov or ja repz add fimul xchg loopne push mov aam add or icebp js xor cmp inc out xor add xor repnz pop mov inc roll push push inc xor or mov imul movsb cmpl les pop sub (bad) dec dec pop sahf das enter push inc (bad) xor add or fistl cmp add mov xor ret inc cmp idivb or add pop xor inc sub or (bad) dec mov push test xor xchg mov cmp mov mov inc mov fldt push inc stos insl icebp or pop cmp xor mov jl rorl ret add ret nop mov imul outsb lret test lds (bad) mov mov xchg mov jns mov ret nop push (bad) push pop (bad) push inc mov mov cmpsl gs cs adc into hlt pop adc loop and sbb pop xor sbb das cwtl dec and inc stos ficoml (bad) and stos jo mov and test mov mov idivl lds rolb add sbb inc lret js pop test sub (bad) xor inc jbe add daa or insl xchg mov push stos movsl mov imul and iret outsl mov xchg dec mov and pop xchg adc nop and in and scas push push or cmc std scas inc add outsb sahf dec ret xor add or sbb cmc fwait sub sbb push popl add adc xor cmp repz sbb cmc add cmpsl adc repnz rorb xor inc sbb sbb cmovge sbb (bad) jno sbb jns shlb add leave push das ret adc and adc xor mov xor push out andl mov cltd xchg sbb hlt insb xorl pushf orb aad movsl add jo add xor das pop adc rclb loope aaa pop pop shrl mov push (bad) movsl mov movsl xlat jo add mov xchg mov aam cld xchg es jns mov cwtl aam pushl fwait pop dec adc xorb rol aad jns xor xor arpl add or or mov insl call rcrb arpl sub nop addl lea jle rcrb imul mov icebp xor pop aam scas jns or popf cli and mov pop dec (bad) mov inc ret loope or mov fwait lds orb mov test or roll jae mov mov mov pop or and xor arpl fiaddl cwtl mov out sbb push lret call cs jl (bad) sbb sub and xor in loopne add and int3 jo add pusha add aaa add (bad) mov mov test cmpsl xor mov test add xor inc pop (bad) push cmp sub movsl mov (bad) jno sbb out xor or jecxz xchg fs push andb sub into rolb xor pop (bad) fs das pop pop inc or adc out mov or or in xor (bad) xor and lret imul add or fnstenv sbb mov inc rorb aas add sbb mov xchg mov sahf es aam xchg xor xor loopne sbb jp xor inc push insb test popa and pusha and pop sub mov mov xorb xor arpl sub daa sahf sub adc add sbb and fwait dec mov fnop xor push pop push sbb ret push or xchg cmp daa cmp adc sub div and lret cwtl mov lock cmc sub inc mov or jmp xor ss or and mov clc mov test add or push mov xor xor cmp or pop lret and fsts inc and (bad) addb xchg xor or xchg int mov jo xchg pop push push inc pop and movsl inc imul sub adc les dec rolb jmp sub inc push test daa mov xor push test aad xor repnz xchg jne (bad) (bad) xor mov rcrl mov push xor arpl push add mov sub xor test and sbb add mov loope xor mov test add es cmp sbb sub and xor push jge sub add in arpl lret xchg movsb adc popa push inc mov test adc xchg cmpsl adc sbb mov scas add push lret cmp (bad) mov call xor xor xor fs aaa imul dec ret aad ret movsb jo icebp xchg pusha dec loopne movsb outsb mov xchg int3 push cmpsb leave xor xchg xchg lea mov mov lods lea inc rol stos iret mov adc aaa lock in int ss add add jmp or scas inc test or xor je sbb adc mov loope je test jecxz and mov sub xor mov daa mov add sbb sub pop mov les mov and jge mov pop cmp xor adc push or shlb pop add or cwtl out xor mov push mov hlt cmp call adc fistl adc and mov bound jge dec adc and push dec mov lret sbb dec sub int add cmp mov test lods sub sub adc xchg inc mov out sbbb add xchg cmp icebp xchg ret cmp sbb xchg cmp mov cli xchg mov xor pop call test test shll orl add inc out ret lret addr16 lods addr16 aam and dec popa (bad) es or inc movsb xchg and dec dec or outsl or jmp fsqrt daa inc pop gs xor sbbb test movsl dec in mov aaa push inc fiadd adc inc adc or sbb push pop add xor dec cmp aam lea push int ss inc push lret push popa nop clc addr16 cmp arpl xchg xchg and cmp mov leave pop mov ja (bad) sahf insl inc lods adc call shrl sub inc adc in ljmp add inc and sub rclb jle cmp pushf fs mov add mov add adc pop out inc sbb mov mov push cmp loop stos mov bound mov mov popa jo add pop mov xor outsb sub cmp lcall pop or cmp (bad) shr xor xchg add test subl and call das cmp xor test xchg fs imul (bad) int3 jge movsl mov or icebp xor leave nop add jns stos add sbb (bad) xchg xor adc dec dec sub les and mov daa test inc popf (bad) ja (bad) xchg or dec xchg xchg or ret das pop dec clc xor jg add stos mov add inc add stc pop ficom jecxz cmp adc xchg xchg je sub mov ja dec fbstp jno enter push pusha xor pop xor cmp lods xor gs aam and mov or dec and mov pusha fdivl add icebp jg sbb jb mov mov xor inc inc sub popa inc fcomps das mov sub push fnstsw pop dec adc push jns pop int3 fildll into jne cmpsl mov add pop sub or enter ficompl xor in leave (bad) add jg (bad) xor sub jmp mov mov das (bad) call mov add sbb enter or dec out cld lock inc xor and adcb xchg mov gs int push stos mov dec inc pop fwait andl push and ss inc xor cltd sub adc cmp fwait pop xlat imul pop xchg pop test cmp movsl ficoml mov or daa cmp js mov add or or mov mov movsl add insl enter rolb or pop stc jbe cmp inc bound loope add pop sub xchg loopne out out ss xor clc adc pop add icebp ret sbb mov sbb xor adc mov jae test test mov es pop or push gs fcoms push xor pop dec pop arpl or add ss xor loopne or push push add sub sub mov movsb ss jl pusha pop es je cmp mov sub push sahf js inc imul lret outsb push xor xor inc arpl hlt or push ret fwait popf test or or and or leave and daa xor inc loop int ficom xor inc pop xor pop lret scas imul pop int3 xor pop jmp mov mov push xchg xor push and fwait and mov rol xor popa mov cs mov sbb fstpl aaa or push dec xchg jmp xorl mov test mov xchg jnp or push mov or (bad) test (bad) out arpl insb sbb mov (bad) pop lods push cmp movsb ret ret jnp in add push pop inc xchg xor inc push ficomp popa sbb popa push (bad) add aaa add and push insb loopnew enter push ss mov (bad) jne lods movsb push or cmp flds insb add inc sub pop mov test xchg add adc add xchg int pop pop aam cltd xor cmp fidivl cmpsb mov iret mov mov movsb es xor pushf inc ret adc xchg or or adc fidivl sub mov or adc xor pop addl js xchg lcall fldcw sbb adc ret cmp call or (bad) xchg lock cmp into add jl adc pusha adc sbb ret and sbb xchg dec or jbe sub imul loop rcll xor sub push addb xor pop xchg cs jmp and sbb push pop icebp (bad) xchg ja,pt ret (bad) and cmpsl and (bad) dec or sbb mov loope add pop loopne xchg sub xchg xchg inc xor ds mov pop mov icebp pop js outsl mov xchg mov movlps add call push aas ss push sbb es (bad) ljmp sbb inc add call pop jp sub (bad) or mov clc das dec cmp subb pop inc sub or shrb xor xor nop psrld test cli jg repnz xor push inc push jno or dec push xor xchg out sarl hlt adc add add (bad) ss sbb push fldl inc dec and pop pop sub pop adc sub mov divl rcll xchg inc das jecxz pop lret mov fnstsw test xor ss or aad mov xor xchg movsb xchg sahf sub pop out mov and dec outsl lock movsl fs call cmp pop int cmp les inc push mov arpl sbb out cwtl mov pop dec jl je or loope out in cmp popa xchg inc pop leave pop pop adc adc lock push test or sbb cwtl cmp test test jmp mov cmp (bad) ja pusha arpl push xchg adc insl loop mov cmpsb lods xchg pusha jmp jo dec imul cs (bad) mov cs loop ss mov add xchg jo jecxz lea (bad) xchg mov push push popa lea popa inc xor andb enter xchg fwait push rorb fs imul sbb outsb push fidivl push mov lcall jmp add dec lods leave imul lea lcall adc (bad) xor jno mov inc add imul (bad) out dec dec push mov pop aam mov mov pop pop pop je fiadd dec in mov and rcll sbb insl mov clc sub lods rorb mov cltd inc outsb pusha mov and or push mov xchg sbbl ret inc push add add pop pop pusha adc enter xchg xor xor and gs push or adc cmpsb push adc push jae lret fcoml dec (bad) lret pop test test adc and add inc fwait or dec xor insb pushf icebp jne or test aaa push mov lret cmp subl jno xorb ret xor fdivs js jbe or add mov pop fadds mov xor adc add add xor push push cs jb push ficoml and fldl xor roll fldt ss pusha inc xor sbb (bad) xor mov dec loop mov testb xor popa mov jb lods aam mov roll sub mov xor inc and andb test inc and xchg push popf sub inc xchg mov je and (bad) or orl inc xor and sahf repz jb mov and ljmp cwtl xor adc or fs dec sbb mov icebp or les das add (bad) (bad) cmp push or aaa gs add test arpl inc push in outsl sub xlat mov shlb push jnp inc and push xor mov ss mov lcall loopne jns mov sahf adc fidiv sub ss ja xchg sbb xor mov pusha arpl and fs push or popa notl lret and xor xlat sbb lods lea inc inc and and sbb push sahf pop and push mov xchg xor out fistpll jno jo cs mov subb test or and inc and sbb sbb pop dec dec test arpl pushf cli leave sbb xor jl les fwait adcl adcb mov bound jno adc xor lahf pop nop xchg inc ja and jno jge dec js xchg add xor stos xor adc aad xchg roll test pop cmp cmp lods (bad) add prefetchnta ret sub push xor stc xor add test xor mov xor xor mov xorl jo or mov and mov sub inc add inc outsl mov or je pop test fmul ret fcmovnb (bad) pop mov sbb orb xorl (bad) fisttpl std sub inc xor cmp (bad) lds cmp aas loopne mov das pusha mov and adc sbb lcall jge push and or test fs pusha mov loop aad cs cmp fbstp loope or pop in adc jo loope sub loope mov dec js push outsl xor imul mov ss xor mov nop dec fwait ss add mov lcall xor cmp popa add cld xchg imul mov and ret or lret mov xor cmp dec cmp test lods xor sub or push lods in add dec (bad) hlt (bad) xchg inc pop loopne xor mov push js mov xlat js add mov mov sbb push xor and mov or test mov or gs inc inc inc or add fsubs pop add loopew addr16 nop mov dec or inc xchg xchg mov or inc lret mov inc in mov xor out push mov add mov ss fs and int3 inc js add lret mov jmp cmp mov mov mov adcl and and push jno mov jnp jne cmp push sbb pushl add inc sub pop xor mov sahf push xor add mov clc mov pop es add popa add jl xor add and add jecxz xchg or or xor sub loopne in inc daa xchg jb inc and push mov lods in outsl shrl sbb addr16 xchg dec jmp out add shrb bound dec or mov ret mov sbb clc pop mov pusha sub fist add add cmc add jl sarl push ja (bad) adc or fwait xor xchg inc jmp imul lods mov mov call cmp dec cmc mov or add pop mov inc adc (bad) ljmp xchg push sbb leave push sar dec jp into sarb and inc sbb sub jo adc sub movsb adc sbb outsl add sub sub pop sbb or inc push dec popa xorb add cmp add rclb jmp and cmp aad jecxz mov mov cmp push movsb xchg rorb aam arpl andl inc fsub aam es test mov sub push insl ffreep imul mov add or outsb loopne stc xor and cmp jno xor aad add mov push add jecxz xchg insb int3 inc push ret xchg jecxz jne mov dec lea add and rcll and adc pop les or out add adc push xorb (bad) scas and xchg add push add jo add pop mov mov or sub lock lods sbb mov or or leave add insl cmp adc push subb sbb (bad) and iret add add fwait dec and add dec add inc and clc push or aaa roll pushf call jge rolb call and test pushf mov cmp xchg xor sbb mov je xchg pop xor xchg add add mov imul mov add test xchg lret xor (bad) jl aam cmpsb fwait dec xchg imul ret xchg fild xchg rorb pusha notl adc adc adc sarl nop rolb popa mov and rorl adc xchg gs pop mov or and leave rol cmpsl or sbb or and test ficomp and push adc push sub mov inc sub lods fsubrl mov sub sub cmp fmuls sub jne inc jbe add cmp cmp dec ja push ret add js inc inc or add bound mov inc jecxz mov add mov sbb mov sbb jnp,pt adc push add inc cwtl xchg xchg loopne dec push xor test add pop aaa or nop xor push or scas fs rorb aaa xor test pop test daa ret pop nop movsl push push loopne sub mov sbb adc add clc dec (bad) xor sbb out push mov add mov mov scas add adc mov fwait push orb sbbb cwtl lret dec cmp adc inc sbb xlat repnz or xor fsubs insb and add fisubrl call push jb xor sub or loop out mov add push mov push pusha les add xor jbe sub and leave jne pop dec nop mov xchg push sbb sbb mov sbb mov rorl xor adc xchg sahf or mov jbe cmp add addr16 and test xchg inc mov cmp and leave and pop in call shr in mov cmpsb and inc imul xchg jae xor (bad) and pop push (bad) or fisttp (bad) add add inc mov jno jecxz enter cmpsl aad xchg add outsb push andb cwtl jge pop rolb mov ret ficom mov notl xchg pop sarb cmp adc sub or inc sbbl movsl pop aad arpl sbb lds jns or arpl lds hlt pusha lahf clc mov fdivl adc in dec (bad) hlt movsb xchg and jbe inc psubusb jae xor add (bad) mov sub mov dec add mov adc stos lret sub (bad) aaa or xchg imul cmp lods imul add and xor (bad) xor adc cmpsb orl jmp xor adc adc movsl ss movsl add adc inc and enter inc inc inc push addr16 add lods push iret mov loopne leave xor xchg repnz adc sub and das lods adc imul das cwtl lret dec mov loopne xchg push dec repnz dec adc and test pusha or xchg mov dec pop aam jne xchg add data16 test pusha push add (bad) xor mov pusha nop or add lret adc mov test sbb jne int3 gs adc pop rolb xor daa and and adc test ret inc inc pop (bad) push and push popf test mov enter int push call push insl loopne add add and lahf xor dec xor push push adc imul inc mov (bad) (bad) mov mov push (bad) and cmc dec arpl aaa sub adc cmc dec sarl (bad) shll xor sub mov sub (bad) add cwtl movq loopne add ret test sbb dec xor cmp rcrb sub mov addr16 orb outsb shl xor add dec sub nop pop enter jp xchg mov rolb sub mov adcl adc add xor pop sub push pop xor ss jns test or mov push mov into sbb push jae int xchg sub bswap rdmsr sub adc mov xor ss adc sub inc outsl cmp mov mov sub xor mov movsl (bad) xor mov inc sbb mov adc pop pop outsl mov fmuls jnp xor pusha cmp adc movsl das sub insl roll es sti fisttp add xorb sub xor aad and gs fcomi xchg xor inc lahf sub or outsl add mov push dec adc call xchg or xchg pop jmp imull rorl push sub xchg addl pop push adc aaa in imul sbb enter mov imul in fmuls dec xlat fsubr sbb inc imul or xchg dec adc jb mov mov xlat and dec ret adc popa xor hlt add test sub lahf ss xchg loope inc js clc cmc adc insb push les add fidivl sti fs push jmp pusha add ret mov or xchg hlt (bad) and inc inc or jo sub shrb (bad) insl lcall nop cmp dec test mov sub jl (bad) mov lods ja pop push fcomip js sub ret fimul cmp jns add rclb (bad) es add inc pop mov pusha and inc dec mov lds or push mov stc xor cmp xor cmc test xchg lods and xchg aaa xor dec adc test test inc aaa xor lret push cltd out movsl mov loope xor inc inc mov sbb cmpsl fidivl push lock mov ret andl fisttp rcrl xchg stc sbb sbb test add loopne js cmp xchg les push adcb insl enter mov test push sbb sbb (bad) mov xchg sub sub mov pop pop inc and cmp fiaddl add push pop inc mov mov adc ret cmp shlb test push es jge add cmp add and (bad) pusha pop mov jmp mov inc xor inc aad mov popa mov les or add (bad) xor adc inc lea sbb mov inc or (bad) adc ret addr16 xor mov mov jno add lahf and and test xor imul or jbe lock adc add lea in jle daa lods lds inc flds addr16 and popl add cmpsl mov and and dec loope je dec aam mov negb ret sbb movsb pop push adcb xchg arpl xchg mov add sub cmovl mov js pop test or jg cmpsb xchg jp popf nop (bad) ret xchg dec data16 or outsl and inc sub push aas or jnp push pop sub std or imul pop mov pop in sub mov rorl dec movnti push std fldenv sbb and rol test add loopne jg add mov cmp fisttpl mov or dec clc movsb lods cs aam test xor adc add xor push insl push push pop imul jmp (bad) scas insb enter or push xor sub mov cmp mov rorb sub add sub add mov xor lea xchg cltd arpl cli mov xchg movsb xlat (bad) and pusha (bad) movsb add pop push inc add rorb dec mov push rcrb xchg lds xor mov (bad) cmp movsb lds push push or xor pop les into xor or add rorb mov jge mov mov jno lock add aam stos pop nop sub mov mov loope test inc stc xchg xor mov pop pop mov or into xor sbb ja call call and add sub cmp mov adc loop lea mov ss mov mov movsb cmp nop inc nop imul push xchg mov mov pop inc les addb mov inc sbb sub rclw pop xorl adc xchg sub gs mov incl nop jne xor popl inc sbb or add insl cmpsl dec inc jns or test and icebp sbb push and or inc xchg pop aam inc jecxz adc add or inc inc and insb in xchg xor push and inc or ret jl xor add push sub test add mov inc mov adc push inc movzbl xor xchg jo pusha lcall pop mov push push (bad) xor or (bad) lret fcom bound xchg jo sub xchg jo inc divb or push push rcl pop inc (bad) fsts ret sbb jge xchg mov and loop rcrb stos cmp lods xor ret add adc popa gs xchg aad (bad) (bad) xor xor (bad) sub add pop fldenv xchg pop mov andb add outsl jle mov mov psrld test test inc cmp lea pop int sarb in mov adc arpl or cmp ds aam or lea push and mov les repz pusha call cmp sub in push cmp push imul sbb test movsb rcrl push xor dec adc rcrb jb sbb roll data16 mov jne cmpsl xor outsb fsubs and xchg cli xor push mov or mov pop jl sbb (bad) pop fist cwtl cmp (bad) mov popa and add xor mov xchg or (bad) sub fwait lods orb or jne cltd cld pop fwait jp add xchg ret xchg sub mov sbb jg add jecxz cltd (bad) lods je adc jl es out xchg mov add pop daa cmp test add fwait pop (bad) mov adc mov add pusha and pusha (bad) lds adc loope inc nop inc cmp dec mov icebp leave cmp pop xchg or (bad) mov mov fistp cli dec mov mov cmp data16 ret mov add imul jg mov cltd les cli gs push insb movsl jl std mov pop pop adc xor mull test lock add cmp sub inc add mov cwtl sub gs cmp fsts cmp jmp gs lock leave std inc lock jl adc inc enter sbbl or or cmp ss (bad) test add sarb aaa adc test xor adc jo sbb push jns mov and aad adc jle rolb nop lret and ret loopne sub jo lods mov add sub mov fisub xor lods (bad) sysexit ret inc inc mov pusha gs inc addb fldenv push inc mov xor xchg test sbb insb bound and sub pop cmp pop adc pushf push bswap fnstcw cmp aaa sbb xor inc mov subl cld test push adc lret movsb add dec xor pusha cmp clc aad xchg lods pop cld sbb inc ret dec sbb sub or ret inc sub xor cwtl (bad) ljmp pop mov ficoml cmp pop pop mov jnp insb or jbe jp mov sub rcrb std outsl cmp lea loopne mov lods stc and mov inc or addl push aas cwtl xor push jo addl imul mov sub loope jle push xor sub jmp push mov mov fwait xchg enter xor jb push pop pusha push pop into lahf (bad) (bad) xor mov mov into (bad) pop inc adc movsb ret adc xchg or xchg repz add fistpll cmp test pushf xor adc pop jmp adcl xchg xchg cmpsl inc out inc test lret fbld sbb insl xor xor mov insb jnp dec fistpl mov xor test mov cmp add xchg pop dec mov adc lods jns pop push add lods cmp nop mov movsb aaa or and and xchg add mov daa add inc sub adc adcl sbb lds aas or nopl push nop rcll cmp and jb pop test sub pop inc push out cmp or sub cmpsl movsb mov mov les mov pop sub mov push adcl jnp xchg mov adcb or test loop xor dec sbb nop lock push xor jge in lret enter or jnp pop js or and arpl add lds jbe xchg nop or and pop jae pop or or mov jo mov bound je fsts inc and mov pusha push lea xchg sbb dec icebp xchg notb imul push mov rolb pusha pusha pop xchg inc sub stos sbb arpl int3 adc dec dec pop mov jns mov inc or xor test and frstor mulb adc outsb daa or flds in mov add xrelease (bad) mov fild sbb sarb movsb gs adc inc loope or jg xor xchg xor cmp mov rcll mov xchg mov adc es or add push dec std mov adc imul add xor xchg dec cmp pushf test xchg addr16 xchg and in adc push mov mov xchg int inc xchg sub sub add xchg cmpsl mov fiadd rorl outsl dec xchg and cmpsl and aas sbb mov rcrb mov sbb inc mov insb in (bad) aaa sbb jb addr16 mov inc dec pop mov add add or push inc mov fcoms mov into sbb lods in adc pop nop cmp mov imul pop sbb adc sarl or mov (bad) add insl (bad) flds scas js mov mov jnp test rcrl pop jae push jmp rcrl jecxz je sbb pop adc push cmpsb push push sub push (bad) xchg mov xor xor lahf xchg test adc xor aaa lea sahf inc mov rolb xor mov sbb xchg xchg and or add mov and adc sbb dec sub mov or xor xor rcrb xchg ret dec adcb mov lret shrb cmc insb fild sub inc pop fsubrl fisttp xchg les dec pop mov pop and xor xor xor xor leave pop xor lea lock and or or imul push mov or pop or dec out add ret sub and cmp mov mov inc jo stc es mov dec push mov (bad) cmpsb adcl dec xor adc shrl inc dec (bad) nop lret xor add sahf cmpsb mov xchg mov jge add or and andl rcrb xor push jno das dec inc pop sbb or test (bad) mov sbb inc orl xchg or xor xchg rorb rcrl out sub js sub loopne mov jg push mov dec adc inc lock and or mov jo mov (bad) mov sub in popa lods and ret xor sbb pushf sub pop lea and xchg pop jne jb lds add adc mov aam and stos add (bad) mov sahf or push pop aaa ret mov popf mov into adc or push mov nop cmp dec (bad) and xor rcr sbb imul and dec jnp fadds sbb xor push mov test add xchg push pop (bad) hlt mov push xchg cltd xor mov test pop sub and cmp nop cmpsl (bad) dec jbe sbb cmp cmp push cmp pop xchg adc rcrb inc sahf xchg jo or sbb mov jmp enter mov pop mov mov andb popa pop or inc jo push xchg fldenv mov test gs jecxz icebp or push xor in add push sbb or movsb mov rolb addb shlb aaa iret bound rorb adc pop add and dec mov pop incb inc adc xor adc mov int3 sbb add sub addr16 insb mov in sub cwtl pop daa fisubrl js ret xchg push sbb rorb or dec pop push cwtl mov xor test rorl push sarb or imul jo mov test leave pop xchg and loope lea jae jmp and insb (bad) clc xchg aaa jno xorb (bad) out or mov xor jne aas cmp mov mov xor xor rclb lods and jbe mov xor faddl cs sbbl xor fisttp cmpsb mov das lea shrb mov mov push test repz sub rol daa add test cs xor popa pop cmpsb loop subl leave xor cwtl js shrl xchg inc jb ja ret dec arpl incb or lds or rcrl xchg sub rcll mov inc pop enter loopne roll shrl popa cmc fwait jo mov mov enter mov ret sub sub ret mov inc sub rcll test xor adc orb sidtl lret cltd xlat gs mov sub enter sub insl jl cltd ret mov mov pushf mov test roll sub mov jne nop inc cltd leave or lret fwait adc pop mov pusha les rcrb mov push mov and arpl xchg mov test inc ret scas and inc movsl jecxz push xchg sub push push sub adc sbb add mov dec jecxz or inc xchg or into int lock mov xor movsl nop and dec mov es inc or in and cmp add mov jns mov mov cmp add add and add cli sahf add adc and ds cmp testb daa push sbb dec (bad) push mov inc rorb stc (bad) jo hlt jns test pop sbb sbb xchg mov je lods jmp xor lods mov dec or lret adc pop orb stc fadds pop xadd sub imul inc push sbb in push fisttpll mov cmc add outsl or cmpsl xorl lret (bad) adc fildl xchg aam xchg ss xlat shlb ja inc xchg add or sbb dec cmpsb mov sub orl cmp and inc test movsl insb clc add sbb xor imul and testb add popa adc and imul pusha popa bound repnz jae adc add cmp pusha push xor cmp lea add mov xor aaa xor mov xor inc test movsl (bad) xor xor mov xor or xchg sbb xor fildl xchg dec lea (bad) push push or mov add push sti cmp push push daa or negb jno xor add out push mov cmp add std xor add dec cmp xor jbe aam int add call cmpsl roll xchg inc jmp popf fwait pop push xor xor inc add or inc mov add popf icebp std cmp or pop inc xchg scas and andl push rclb inc sub movsl mov sub jmp (bad) or addr16 jmp icebp mov adc jo lea xor mov or mov lret mov scas cwtl xchg jo cmc out xor push inc and lods aad mov cmp pop inc ret xchg insl js sub xchg xor ret jge flds sub push cmp mov add (bad) arpl xchg rcrb outsb adc hlt lea xor mov mov rcrb mov ss rcrb add test movlps xor cmp int3 sub lds adc add or sahf sbb adc test les or push push shlb aam or and (bad) movsl lods (bad) xor pop adc mov test js mov sahf cs add test lock or push and xchg pop test xor dec jb rclb adc inc cmp or iret xchg test cmp or xor (bad) xor ret (bad) jns mov pop push imul jge cmp or or cmp or popa sub xchg adc or mov xor mov inc lret ljmp and add ret inc test lea pop ret xchg xabort xor sub or adc outsl sub js or and xchg iret rolb add add pop or jnp mov and cwtl sbb jmp cmpsl mov sub aam fstl jmp sub push cmpsb mov test adc cmpsl (bad) lods fildl sbb and add inc cmp and mov and addr16 xor dec inc incl (bad) in pop int3 lea dec sub inc mov out cwtl xor (bad) add aas loopne jp fs or addl mov xchg jmp or popf popa push je leave inc push rcl or ret shll popa or and add mov xchg xor xchg push pop xchg sbb rorl adc (bad) icebp add das adc lret dec dec xor mov jb dec add icebp gs inc cwtl jne mov gs je shl pop ret out or or lock xor or inc ss dec push push (bad) mov xsavec or inc psrld adc das xor adc and xchg or int ja fadd xchg pop sub sub add sub and mov addl cs lret sub or arpl mov xor addb add test adc jno pop pushf mov sbb into and mov add mov or pop or mov xor pop movsb inc (bad) aad cmp and mov test cltd xor or sbb fwait jno adc dec adc mov jno (bad) call push xor dec pop cmp shr and fimull xchg mov pop out cld jl test enter scas add lds adc inc bound mov mov push mov lods dec or std mov jno add mov adc lock push dec pop ret rcl sarb mov addr16 adc and cltd subb xchg std nop adc cmp jo inc mov inc jp sbb pminub scas ss dec add dec loopne sub test inc inc pop jo adc je jne and andb ss es add jb cli insl cmp or (bad) mov cmp sbb xor xor push jne xor loopne push sub add mov or push ret mov loopne rolb icebp mov add mov xor push mov sbb arpl push adc sub adc outsb inc xor add aaa jmp xchg aad sub std adc mov and xor sbb jnp add test (bad) cmp adc add lret mov xchg aam xor jns xchg pop sub rcll in scas add sub fmull push (bad) add rcll mov sahf les ficompl dec fwait sbb xchg insl movsl dec pusha fs sbb adc int3 mov push sbbb int3 dec or rcrb (bad) push cmp inc cmpsl add ds xor adcl wbinvd adc add xchg pop rolb sbb fstpt or inc aaa dec mov mov dec lods (bad) aaa and dec add and or pop mov add inc xchg sbb mov rclb sbb pxor insb xor add adc das insb loopne sub gs sbb add sub mov inc mov cmp fisubl mov std inc fcmovnb lcall inc push lods push xchg cli and mov sub push arpl (bad) sub add pop adc (bad) dec adc or xchg push push ficom cs mov sub popa inc adc and (bad) inc sub xorl sub fcomps dec push sahf cmp dec sub pop adc imul lock sbb add dec mov jg inc or daa cmp or adcb dec loope das movsl xchg lret fwait (bad) les cmp jecxz rcrl nop (bad) sbb in je pop mov sub addr16 mov test sub sarl adc or inc imul imul sub mov add adc xor inc mov cmp adc aas cmp (bad) lds jbe das ss addb aaa orl dec js pop fld bound pusha mov cmp add push mov repz (bad) adc lds sub in loop (bad) test and xor xor push dec sub or dec enter repnz jo int add addr16 cmc dec xchg andb dec pusha add mov lock push and inc call lea or test icebp mov lods push sub rcll or test inc or dec xor add dec pop rclb lock push lea mov mov jp mov popa pusha xor or xor sahf cwtl dec in xor pop mov mov lods xchg mov loopne gs cli test lds ljmp repz add int3 (bad) cmpsl add xchg lock int3 and lahf ffreep xor into adc xchg ja push (bad) (bad) sbb lahf jecxz ret leave rolb or ds mov dec mov xor shlb jl lea adc dec mov sbb xor in movsb outsb pop push sbb xor adcb icebp push int3 inc or sti xchg repz inc or ret add and out loope jge xor pop dec loope data16 and (bad) cmp popa (bad) mov xchg jo addr16 add sbb sub sub ret jp or cmpsb lock add nop mov push and movsl addb push data16 xchg push push mov and enter or sub or popa mov mov popf stos loopne test xor cmpb jne push dec pop aas aaa movsl test adc rcrb cmp test inc push or xchg inc or add mov icebp shrb push pop sti lret bswap push mov loop add daa or sub decl pop lret sub aas scas rolb sub orl (bad) xor ja mov pop shlb pop sbb lret mov and xor add sar (bad) (bad) sti mov cmc inc imul xchg cmpsb cmp mov or (bad) iret (bad) stos add fadds push and mov loope cmp ret cs or inc incl sbb xchg mov add xor (bad) insl add inc jno inc fstps loop push js (bad) and (bad) inc sbb xor sub insb sbb lods mov jl push dec std aas xchg sbb dec push mov adc mov and and adc or add lahf popa insb push sbb scas popa jecxz cmpsb push xor (bad) mov test cmp or or popf mov jmp add and cmp add sbb inc insl outsb cmp inc or rcr inc mov scas push mov mov cmp rorb test push pushf or sub popa cmpsb leave popa test imul pop mov gs movsl pusha jl mov xlat pop jnp and lret test iret scas ret dec adc push shrb or dec add xchg mov bound xor test xlat xchg lea (bad) pop xor add ret imul lods adc xor sbb jecxz and xor lods mov dec les mov cwtl push lods es dec adc jp rcll or jecxz and addl lea xchg pop push arpl mov push mov dec sbb rorb (bad) adc repnz inc out sub pop push inc jmp add lea xlat cmp imul rclb xor rcll xlat mov loop add fcoms cmp jae jg xor ror jecxz xor mov loop push call and dec test (bad) nop lds rcll pop adc outsl pop and cltd insl adc push movsl pop les test sbb sbb clc or fild cltd cmp mov lret inc sarl push jg je movb in and and and or sub mov or leave dec js push pop mov cmp int3 push pop mov inc mov add loopne pop cmpsl test pusha mov push adc insb mov adc add inc push adc fcmovne movsl bnd fs add adc pop or xor pop or pop adc sbb mov cmpl mov nop dec xor icebp or loop mov movsb int or (bad) jno jo adc lret cmp faddp xor add mov dec sbb addr16 sahf lea (bad) pop jno int push pop test jne bound jne lock inc mov adc adc pop xor xor js daa inc js test fsqrt sarl iret inc (bad) xor xchg insb and mov aaa and xor and imul sbb add lret and inc lock pushf sub push mov sbbl and daa mov mov dec movsb mov hlt inc (bad) ret ret pop inc sbb push dec mov push cmp mov ret repnz add or mov mov jne test imul (bad) sbb xor cmp mov dec and lcall ss int les (bad) sub dec adc lea xchg sbb mov add pop add dec out pusha fmuls mov push mov adc icebp dec sub xchg mov mov arpl push jbe mov xchg xchg arpl inc jmp repnz fadds pop popa sub mov adc mov aam in mov add int3 adc xor push call icebp or call push sbb jge rep lock sbb mov mov lahf push sahf sti loope sub outsl test mov js pusha cmpsl fs cmp add (bad) pop pop orl test xchg sub jp mov fdivl (bad) xor js push mov jns js add aas pop cmp mov imul imul sub or mov stos in lea pusha outsb pop or sbb subb hlt sahf leave out outsl test mov pusha and adc pop push (bad) test cmp push pusha inc and mov pop inc lds or pusha dec loope (bad) test js jne pop sub mov add mov ss push ret sbb sub or or add add movsb xchg movb lret addr16 test mov lea add sarl mov and aam or fs mov xchg lcall aaa orl sub push xchg (bad) shll pop inc inc and cmpsb insb and cwtl sbb add xchg stos gs les xor add add (bad) xchg and popa and or or nop or iret sub movsl add cmp nop jl xor sbb mov xor in inc fldenv cmp fwait in gs cld pop cwtl push test add or and or mov mov (bad) (bad) jne arpl push fucomp xchg mov add call or stos popa add cwtl les jmp xchg add push mov mov add (bad) dec ret or xchg inc push xchg test dec movb sbb inc leave add ret mov mov mov sub lods js loope (bad) loope notl cltd scas push (bad) xor and loop push mov sub dec cmpsl orl cltd sub (bad) jne push inc mov cltd mov ds mov adc pop or sub mov (bad) (bad) sub (bad) xor add popf js and mov jecxz sbb jb cmp nop popa sarb push or mov adc mov daa popa dec add sti and and mov pop xor and sbb pop lea mov mov jne mov and loope arpl pop dec sub pop and or mov mov jecxz pop test sbb jno mov and jo sbbb add add nop mov inc sbb rcrb in test mov xor sbb (bad) cmp inc pop mov inc cltd inc adc or jp mov fs test cltd xchg dec sahf adc add and mov jo ljmp push mov jmp arpl pop dec lahf lret fadds mov jecxz and sub add in lock scas jp ss add (bad) xchg (bad) es test push (bad) fadds sub or jno mov arpl xorl jns sub stc sub push daa aad pop rcrb xor sbb add lds jp adc aaa (bad) xor sub or add add cmp fistpll mov cmp ret sub inc inc call pop cmpb xor lock add mov add adc inc aam addl test nop fwait movsb orl ljmp add or xchg (bad) cwtl xor ss xor les mov cmp insl inc sbb arpl or sbb mov pop dec sub pop insb mov cmp pusha fs cmc or shll add mov (bad) hlt xor ds aam xchg inc mov pop adc pop dec popa dec and scas mov add rol inc add adc ret xorl test jmp push xadd adc mov lcall sbb pop mov xchg xchg cmp mov das add rcrb push adc xchg and aam dec (bad) inc ss xor inc adc jp mov mov dec or adcl pop xor test jno leave and insl outsb pop xchg rcrb jnp xchg xor jge adc xchg jmp cmp out pushf pusha pusha and inc xchg scas subl les flds leave or jb jnp and pushf xchg pop (bad) imul aaa jae push les dec sub xchg add or (bad) fcomps sub xchg add loope cltd or mov mov and cmp ret aaa repz cs loop mov and xor bswap rcl (bad) test test jle cmp sub or mov cmp mov jo xor ja push test outsl and inc mov or in adc cmp fidiv xor fdiv cltd mov cmc cmp add or test pushf adc inc into and or (bad) push stos ljmp push inc cmp cmp loopne bound andb xor or aad lds ss in inc xchg sub xor or mov push subb add add mov pop js xor movsl je inc loopne cwtl test repnz nop fisubr mov and test xor xchg mov popa loope sbb and lahf add mov or pop push (bad) (bad) jecxz jne push test xchg or jmp mov repz cmp xor mov out shlb sbb add test cmovno outsl add shlb dec dec inc and push sub nop adc xchg inc sub adc mov inc cmp cmp xor mov call fstps xchg add adc push je inc les mov (bad) lea test pop enter xchg push movsb xchg les adc adc (bad) xchg mov sbb or rol pop jmp xchg lea shrl dec and xor dec pop mov or sti movsb lods push adc adc jb cli cmp in clc or punpckldq aaa xor insb shlb call and sbb shrb or cmc cmp aaa movsl inc add fisubr adc mov out mov dec sbb rcr int icebp add xchg ret lahf push scas inc sbb pop inc pop jmp movsb loope dec shll add rcr mov repnz or inc mov in adc or dec and mov dec fwait inc xchg mov loopne xchg outsl stos adc adc xor fsubl cmp mov add xchg loope sbb test and fstl pop imul xlat imul nop test das add push inc fdivrs mov xrelease adc nop pop mov adcl sbb dec sbb xor sbb mov xchg mov (bad) faddl push ss (bad) sti inc adc dec dec stos pop sbb das cmp leave xorb mulps es xor xorb dec test xchg adc pop cltd xchg adc xchg inc lock ret lahf roll mov cmp xchg adc (bad) lock sub addr16 adc adc icebp imul or call jb lea cmpsb xchg push add inc jbe add addl or and add ds inc sbb xor cmp (bad) rclb imul and cmp adc aad jns out sub add push (bad) aam fild roll and loopne lret xlat jnp bound mov lahf add mov mov add sarl push mov mov stc adcb add int3 push cmp xor jmp dec dec xchg dec aaa (bad) bound xor imul mov pop jns xor push adc movsb xor dec aad xor loope aaa sbb popa (bad) ret and inc or xor sub add add sub popa sbb mov sbb test popa mov iret pop jno inc xor leave jne pop mov bsr add and xor pop in (bad) ja cmc xchg movsb mov dec mov xchg or mov fdivl adc push sahf jb pop mov repz fnop leave (bad) sub cmp mov mov xchg pop bound sbb mov mov sub insb jmp imul jo dec push or fisttpll aaa pop clc xchg movsb push mov mov xor ret or xor xchg test arpl or divl adc sbb ja sbb add inc mov xchg mov push nop daa or jmp pop pop rorl xchg xlat bound pop xchg fsubs xlat sub sbb pop cld je or aam adc sbb xlat aaa lods or movsb popa mov jmp mov jp inc test push nop cltd pop adc pop in mov add lcall ret movsb sbb push mov lds repnz lret in dec ja stos and xchg inc push in mov pop mov add in dec cmpsl rorb imul rorl xor jno arpl xchg pop sub mov add je dec add add sub or sbb sub adc rolb in xor add and cmc loopne test out lds jo icebp jg popa add pop add sbb jl or sub scas insb pop pop lahf nop add inc cmp sub push inc xor or push and or or fisttpl xchg or outsl pop fiadd xor push pop or pusha iret es ja inc lcall xchg lea ror popa push mov iret test jns lods sub xor sub iret cs ljmp insb dec lods sbb sbb adc cs loope sbb aad ss push sbb and imul dec andl stos fidiv push pusha lds push pop push dec sbb sub mov xor mov inc shll inc xchg sbb push mov dec xor or pushf inc push dec and (bad) lahf sub rcll icebp nop mov inc lret dec mov mov mov lods repz and insl mov pop xor xor add test mov es or pop push rolb icebp adc imul xchg (bad) ror push sbb sub jmp popa jecxz jecxz add aaa and mov loop test aas dec adc or outsb pop add adc (bad) mov sub lret jp lock add mov push addps cmp and push ja jecxz mov or repz aaa inc nop mov pcmpeqb xor adc nop movsl dec mov popa dec or ja (bad) or aam add insl or xor aaa pop adc mov out add cmp inc inc call loopne sbb je push jmp add icebp xor xor into xor adc mov jg jge push inc inc add in popa call cmp ret (bad) loop or lock inc mov cmp and mov xchg and mov mov cmp gs iret or adc cmp addl xor lods xchg xchg popf sub test xchg hlt add pusha jecxz lods inc js pop xchg mov nop adc pop sbb icebp into (bad) sbb loopne inc arpl push pop lret rcrb hlt mov push inc sbb ss lea shrl add hlt rorb hlt add adc std cld popa cmpsl xchg xor mov or add add or and and jmp cmp into outsl lock mov push adc xchg addr16 cmp jo fs test xor jge push mov or mov cmp adc fldcw add xchg rol dec push lock jne jo adc (bad) test sahf inc sbb and sbb test aaa sahf mov into (bad) lods cli mov adc hlt insl fmuls inc rcl pop and add daa addr16 pop pop imul std cld mov xchg add fiaddl pop mov stc loope adc int cmp lods xchg inc jecxz call les mov xor rolb and cmp outsl xchg mov mov push jb andb or cwtl sbb cmp popa push popa gs lret push orl popa inc data16 iret (bad) mov or repnz add sub jnp movsl aam shrl and and ds and int les insl loope xor mov pavgw fwait lods sbb lods js sub add dec enter dec push cmp and lods inc or je xor mov add mov add or adc pop sbb sbb ret xchg sub jecxz and adc rorb jo fcmovnb sub pop push dec sbb fsubrl arpl insl add or pop imul pop inc mov xor sbb pop dec or inc jb adc adc add push ljmp lock push lods iret rclb dec enter aaa mov popa cmpsl (bad) xor xchg xchg mov xchg add sub sub ret inc push test pusha loop pop mov sub cmpb cmpsl mov rorb dec mov (bad) lret addl adc jmp xor xor pop pop mov lods in andl pop push (bad) shll dec inc cmp dec cmp sbbb scas mov repnz aaa adc out mov xor dec xor popa fcomi xchg (bad) das sbb push popf sub test push cmc das xchg xchg jb jns xor stos hlt in pop test xchg or xor pop xorl mov shlb add sub adcl dec sub sbb (bad) xor mov and stos mov mov adc xchg and inc pusha lcall pop sbb dec ret (bad) sub pusha imul or adc xchg push cmp and rorl es fwait or push popf fdivs inc cwtl and mov call xor add dec sub xchg push mov push rol or (bad) shrb push inc inc xlat and fwait (bad) adc out xor xor cmp add push add and sbb or pop xorl cmp or xchg sub adcl xor (bad) iret popf mov dec xor (bad) frstor and data16 xchg and (bad) adc subl xlat mov in dec xchg popa or (bad) sbb xchg dec push int3 test sbbl iret or xchg hlt and xchg adc adc sub jne (bad) stc xor add dec loope xchg pop pop ret mov and jae xchg repnz or add xchg inc movsl or mov sahf adc xchg add (bad) add mov insl test lods dec test rolb ds cmpsb push jp fidivrl add push jbe sbb sub gs push sbb sub inc or mov es shlb movsl lds pop jns lods dec loope in lods xchg pop or emms ret pusha shll lea sub in or or dec cmpsl or and movsb lret cmp push cmp sbb (bad) mov fs sbb (bad) mov xchg test or test inc call addl loopne dec xor jnp push mov (bad) xor pop or mov mov (bad) push test sub jne add imul ja (bad) adc sbb cmp fistpll lcall inc dec lret test mov pop adc inc arpl movsb push xor mov enter push aaa inc jecxz or cmp movsb push or sbb lock mov lock adc test cmp xchg and jg,pn adc aam and (bad) push outsb pop (bad) pop and push in push or dec adc mov push pop adc in xor sahf mov xor add leave movsb xlat add xchg je arpl (bad) mov fisttp or push add lea ret adc fwait lods jbe mov insl cmpsl mov cmp imul cmp (bad) mov xorl sbb or xor xor and inc ss fcomps dec mov jmp jmp arpl popa sub mov add movsb lds lock xchg and inc aaa add xlat aaa popf sahf dec test pushl pop xchg jne ss ss inc push test lsl gs mov add sbb or xor cmpsb int3 push add (bad) sub lret push lea cmp dec push and xor add adc popa mov inc add sub imul xchg lret cmp pop or call inc add jae xchg sbb test mov icebp xor inc or pusha bound ret enter sub or xor adc cmp xchg ja add and jge mov add or rorb xor movsl cmp mov add imul and je ret xor xor arpl pop lahf dec add xor mov popf jno add mov jmp test leave mov in cmpl lods cmp nop (bad) insb and test mov xor sub jae test xchg add leave inc call test sahf xor aaa fnsave adc fistpl sub (bad) je and sbb xchg inc inc gs jge (bad) or pop xor sbb sub pop mov enter cmp fist dec cmp lds dec sbb mov adc rol fldl ret push daa repnz sub iret scas insb inc into push dec pop (bad) mov push sbb cli cli add repnz dec fildll lcall lret rol xor add xchg lea imul inc mov xor sti jne inc arpl pop add push add test xchg xchg ret xor add push sub add and in in sbb leave lret je xchg or push push mov mov xor add adc mov push loop out cmp fldt outsl dec fiadd adc xor xlat lods add bound nop sahf cs sub add pop data16 or and sbb (bad) leave addr16 pop add pop outsl pushf pusha mov push xchg dec jmp mov insl xor dec pop mov orl push or mov dec pusha rcll les insl pushf or xlat xchg jb inc xchg mov inc das data16 rcrl jo int dec push inc leave or or push xor enter icebp or sbb cmp aaa cmp (bad) or faddp xchg sub outsl mov aad (bad) adc adc les mov aaa add mov ss inc mov arpl cmp sbb or out or mov or leave cltd insb mov sub dec popa push inc jo jge xor orl or mov push pusha mov imul outsb in sbb xchg adc aaa dec pop mov fnstcw or lcall mov inc pop bound sbb xor adc lods or add mov sahf push and mov dec movb mov adc mov adc fimull cmp sbb jnp repz scas add cmp add xor mov xor mov xchg sbb arpl pusha mov nop jl cmp (bad) inc bnd xor aam int3 adc adc inc mov dec sbb outsb pushl xchg mov jo outsb arpl jae outsl jb in (bad) out popa addr16 fdivr loopne adc dec inc add add pusha add (bad) fldt inc add sbb push add mov out ficom pop push pop pop pop or or or or adc mov or jae jg pop or prefetchw pop mov jmp dec or inc add or push add add and add add les pop inc add fild add loopne push inc mov jl add (bad) (bad) out or jge add add push adc pop and xor mov incl inc mov adc xor (bad) js pop sbb sbb sub jg dec in cmp inc inc inc dec dec dec push push push jg xchg push push pop pop pop arpl stos imul jns cmp (bad) incl mov xchg cwtl cltd lcall test stos mov mov mov mov mov (bad) enter rcl aad xlat fcomp (bad) loop in out call or push hlt cmc div clc stc cli scas pushf into icebp sbb test scas adc mov add scas adc icebp adc int xor push pop popa jno and adc mov sar add adc loope icebp add pop push mov mov pusha inc roll adc fiaddl or js or add mov clc or jae mov adc (bad) mov adc sub mov mov mov rolb in in jae cmpsb jb out inc xor or or pushf adc xor mov mov xor push and cmp out arpl test add and adcl sbb lods adc out mov push mov lods pop int3 (bad) adc (bad) push faddl in xor aas xor and aas xor int3 sbb and pushl sub subl hlt (bad) cmp jb inc dec xor addb jg push fsts push enter adc aas cld add jo push pop outsl (bad) (bad) decl arpl inc pop xor fs outsl addr16 push cmp popa push js pop push mov addr16 (bad) (bad) decl dec jbe pop inc push bound aaa dec inc xor push addr16 inc xor dec jns pop std (bad) fldt xor jp xor jne push jae push dec dec jo inc imul outsl out sahf inc xchg dec dec push xor pop inc jne imul sti mov imul inc xor arpl xor addr16 sti lods insl dec js mov push xor dec inc arpl dec imul push inc inc inc push inc dec addr16 outsb dec ja loop shl loopne imul bound push push testb inc push popa xchg cmpsb inc xor push ficom jl xor cmp pop mov dec out jno jns pop lods loopne daa dec push push pop xchg outsb in loopne outsl ds outsb gs insb movb pop insl js push push sbb aaa pop es xor fs push push sti rcll into push addr16 dec pop xchg leave repz mov addr16 pop push sbb mov nopl addr16 (bad) (bad) (bad) (bad) (bad) mov ljmp out sar repz mov mov xlat int3 (bad) imulb (bad) (bad) (bad) pushl std (bad) loopne movsb loop mov (bad) hlt aam iret jmp mov (bad) jmp (bad) (bad) (bad) dec (bad) out mov mov shl rcr cmpsb mov fadd mov mov int mov (bad) mov enter loopne out test into mov in rol fldcw call mov jmp mov mov in ret loop aam mov mov (bad) (bad) (bad) (bad) mov out iret int fcmovu mov ret hlt sarb mov into mov sti ret icebp (bad) (bad) (bad) (bad) mov fistpll movsb ror lret test mov (bad) mov rcl mov lret aad lcall rcr (bad) int fsub mov cmpsb shr mov test lret aad (bad) (bad) (bad) call shl mov shlb out mov cld (bad) in rcl stos mov jecxz scas ror icebp mov rcl lds (bad) inc fcmovb into pop cld (bad) inc clc (bad) sarb lods (bad) mov shr (bad) (bad) lods pop xchg dec sar xchg call ret out (bad) iret (bad) mov mov (bad) (bad) icebp lret mov insb clc jmp loop int3 shr cmpsl mov cmpsl sarb incl fadd movsl mov cli into enter loopne mov idiv ret ljmp mov mov shr movsl mov ret mov mov (bad) jmp shr imul rol mov (bad) std enter mov out mov enter cld not ljmp mov mov shl xlat mov lcall loop dec xor out ror (bad) (bad) (bad) jmp mov test out mov aad enter mov sbb (bad) ljmp mov into mov shrb (bad) out int3 ret (bad) (bad) pushl lods mov leave (bad) mov ror mov (bad) in inc ror ret mov (bad) pushl into std ret cmp cld rcl mov mov mov clc aaa inc (bad) mov xorb rcl (bad) (bad) out js mov push mov lods (bad) mov int3 rcl xchg iret sar das pop hlt mov mov mov ror ret divl fcmovbe (bad) jg dec repz inc in shr rorl loope mov mov mov out mov decl fmul scas call mov (bad) (bad) mov (bad) mov mov hlt mov sarl int lret xor mov clc leave mov out int sarl les (bad) (bad) (bad) mov movsb aam rcr lock enter stos (bad) mov aam aad cld (bad) mov enter int3 lock rcl in iret (bad) out jecxz lods mov loopne mov shll ret enter ret shlb push (bad) icebp mov shl mov mov sar mov mov out ret mov lds mov jo fcmovnbe mov (bad) mov imul mov (bad) (bad) iret cmpsb mov cli pushl mov xabort dec pop (bad) cs ljmp mov aad fcmovnbe stos out mov ret sub (bad) (bad) call inc int3 in (bad) mov into mov mov fnstsw jmp iret leave fnstenv mov scas mov test (bad) jmp (bad) stos aad (bad) icebp (bad) hlt shl jo xlat (bad) mov enter outsl fdivl (bad) (bad) ljmp xlat in int in in lods aam shrl test mov into mov scas fcmovu in fbstp mov scas cmpsb mov iret mov lret lret in mov cmc shr mov outsl incl out test scas (bad) (bad) ljmp mov dec lock ljmp out mov (bad) incl add or mov ljmp loop mul mov mov rcrl neg mov mov int mov fnstcw shlb ret add in (bad) mov out loop jecxz (bad) lcall imul idivl out jecxz jmp test stos int ret fsubr repz std int sarl ror sti sar shlb iret aam (bad) lock mov in mov lret lock pop mov mov call shr push adc in jmp mov aaa cld xchg (bad) sarb xlat (bad) mov adc hlt (bad) ljmp xor hlt mov push sahf mov into std mov mov mov push (bad) (bad) lret into stos lods pop into cmc shlb rolb int3 mov test (bad) std mov jg add imul mov fcmove mov lret cld ljmp aad repz ret call lret mov mov pop insb (bad) mov in int mov lcall mov mov ljmp mov clc out mov mov mov shl cli lock mov lods pop cld or lret mov (bad) rcr (bad) scas xlat scas enter scas in (bad) jg stos lret ljmp (bad) out mov loop sti ret (bad) (bad) pushl mov icebp jmp mov mov shr mov outsl cli or jmp lret aam mov mov (bad) mov out nop shrb cld (bad) push in (bad) icebp fsubr sar mov mov int3 out sarb cli mov icebp repz (bad) mov mov fcmovu rol lret lret shrb add mov cmpsl out ljmp (bad) int3 or (bad) pushl in jecxz int3 iret mov fnstsw cmc mov enter (bad) in (bad) in scas sar les pop scas mov fidivl in mov fcmovb fsubp div mov std hlt (bad) mov ljmp mov mov enter lock mov shlb iret sahf loop ror (bad) aam movsl jp (bad) mov stos scas fs xchg (bad) sti fs adc stos cwtl aam (bad) ror mov repz mov mov out test inc in mov pop das sar ret shl mov lret push (bad) jmp pushl std sbb decb in mov mov fadd jl mov stos lods leave mov cmc pop (bad) jmp jg ja mov sbb (bad) fsubr mov add insb (bad) fbstp aad mov mov lret clc out loope ljmp ret mov (bad) in decl enter scas in cmpsl mov cwtl and mov cmc fcomip out jmp push mov mov mov lds mov fnop aad mov mov pop gs jg shl clc lret test mov in (bad) decl out (bad) bnd mov les scas mov cld lcall ljmp stos in lret (bad) int3 mov push sarl inc mov (bad) mov or idivb rol mov mulb (bad) loopne stos mov stos pop mov xchg push mov mov mov pop fcomip mov aam (bad) icebp mov (bad) lret leave loopne movsb data16 dec into cmp in fldt cld add test jmp fimul mov mov mov (bad) repnz mov outsl fadd (bad) fdivrl in mov mov push push xchg sub sahf mov cwtl mov mov ret (bad) fidivrl mov xchg out lds mov out ret divl mov fldcw enter mov mov icebp xor cmpsb test cmpsb mov out aaa mov (bad) mov ret sar rol (bad) mulb mov mov push shll sub mov (bad) xor pop les cmp mov dec pushw ds dec fnstcw ret fwait adc mov ljmp mov lret stc bound push lret or (bad) icebp enter xor in jbe jle stos push add pop jo pop fidivr rcr ss pop rcrb js mov test ret stc adc push push shr into in push or insb rol jle sti jp inc mov (bad) in scas (bad) jmp sbb sti out aam sahf push mov mov mov or shlb lret rcr ror data16 mov ljmp sar out scas (bad) cmpsl mov fcmovnbe mov int3 in sar dec outsb cmpsb les mov add fnstsw inc lock mov mov sbb add repnz dec mov (bad) into aam int3 ret (bad) icebp mov push mov or pop test js add mov jbe loope (bad) in add (bad) hlt dec dec push divb pop xchg enter xchg subl out out dec mov sahf (bad) push lret data16 ds scas pop shlb (bad) sahf push mulb dec mov (bad) cmpsb sub add mov jbe leave out shll pop mov lock clc adc in leave ret out or lea aas lret into out pusha inc xchg out mov jecxz (bad) jbe enter divb cs roll push xchg mov push or in (bad) (bad) (bad) mov mov (bad) cmpsb mov test and cs shrb lret add pop sahf enter mov cmp andl es mov pusha add add out mov mov (bad) mov in scas (bad) enter cs lret int popa fistpl jbe rol mov insl inc lds insb stos push fdivl test or mov mov or out mov fnop sti ror scas or (bad) sbb jmp cltd add mov add (bad) lock out mov mov data16 out dec (bad) insb xchg xor sar leave loopne cmp sub ss aad movb into (bad) int3 lock push leave mov jp out iret repnz out andl out shl scas je mov pop inc out aad sbb push push into sahf push out scas jp push shrl aam cli mov loope mov lcall xchg shrb out into (bad) aaa pop mov xchg sahf imul leave lods mov pop ds fsubrs test pop push sahf sbb adc fmul movsl mov mov dec data16 ds in mov sahf (bad) out popl lods stos (bad) outsb rcl mov mov sbbl and (bad) mov jp push loopne sub mov ret scas je gs out into enter ret mov push cld out std shr out and lret scas jle xchg mov fsubr (bad) mov push xchg xorps mov es adc out shl mov subl fsubrp enter lret scas lcall shrl aad inc push dec xlat mov es enter in mov cs adc inc or addb cli mov ljmp push leave fxch mov jle jecxz jb gs std int mov inc shlb insb sarl (bad) lret aad lods shrl pop leave stos or or dec (bad) in data16 mov addb iret mov fmulp jmp fs (bad) (bad) stos push jbe dec lock mov sub or push sbb fdivs fstps jbe movsl xlat fcmovb out mov in jb outsb mov mov es in sahf ss aam push aam fildl add cmpsb mov cmpsb mov push and leave scas add repnz cmp (bad) (bad) push push fnstsw xchg fwait std cmpl fnstenv ret add ret pop lret hlt mov (bad) cltd ret cmp ret xchg inc mov es mov aaa push call fcoms ret icebp pop push xchg mov iret call push pop (bad) or jbe cmpsb cmpsb push cmpsb mov cmpsb into rol push xchg dec fistl mov ret mov stos mov in (bad) in aam (bad) in jbe mov mov repz int mov ret cli mov xor add outsb cmp mov ss mov loop test (bad) or sbb jbe dec int (bad) mov fwait ret out xchg jmp mov inc mov (bad) repnz sub mov inc mov mov xlat lret data16 aas xor shl sarb (bad) push mov movsl cmpsb push (bad) push (bad) leave and fisub pusha aad sar mov push fwait add cmp ljmp sbb (bad) xlat mov data16 pop sahf or cli ss jbe dec pusha xchg rolb repnz push inc jmp (bad) mov push out les insb pop movb clc add jae jb data16 jp fdiv ret (bad) ficoml mov pop (bad) jmp in add lds cli lock xchg ret dec xchg (bad) shl lcall (bad) mov (bad) sub or sahf lods (bad) icebp mov jnp outsb dec mov dec aad loope pusha das push (bad) out mov pop dec movsb push andl push ds push sbb data16 cs fnstcw lcall xchg dec mov pusha jo sahf (bad) dec inc fstpl int3 mov shll and rol lods outsb ficom or out out dec cmp mov and lret iret mov (bad) dec fs fnstenv loop outsl push pushf lcall in in cmp sbb jbe cli xor (bad) das (bad) fucom rcrb enter sub add ret (bad) into sub (bad) mov xchg insl jo sub adc imul out dec cmp loopne sahf xchg jmp jmp jecxz mov sarb mov or out clc mov add data16 mov xchg push (bad) push jbe test loope iret mov sbb push mov mov fildl mov mov aad push mov sub in mov in ret jmp (bad) sahf int3 icebp bound mulb out (bad) in sub cmpsb mov adc fcmove ljmp push outsb scas cs sbb xchg push push test movb push add idivb and and mov mov loopne mov mov mov mov dec jnp inc movsb sbb aam add mov int mov add xchg or dec xchg sub ja xchg rcl int3 ret aam jmp leave pusha (bad) insl stos cmp lret mov push inc shrl (bad) lock mov add push sub push mov mov xor cmpsb negb clc ret sbb test fdivs jp loopne (bad) cli jbe in push in cs xchg jecxz or mov stos ds mov sahf lret shr jbe data16 xor and (bad) call mov (bad) jb lea inc into stos ret repnz int3 out pop scas hlt fsts xchg sar add mov loopne adc int3 icebp loop cmpsb ror (bad) ljmp mov stos mov jb push (bad) es call cmc sub pusha sahf mov cld rcrl jp xor ret add dec dec pusha cmpsb test iret push scas lret dec test into add mov lock mov lods mov out push cmpsb (bad) adc ret out cld out adc sub cs cmp aam aad aad cltd lcall ret and xor rolb out lret pushf mov sti sarb mov int pop sub (bad) hlt jle data16 add in iret int3 enter lds aam sar loopne (bad) stc lds ret mov push jmp push sbbl (bad) out aad lret (bad) pop subl mov push push push add gs stos stos push add xor sti push pop ror shl (bad) shr lret or mov fsubl mov mulb mov stc adc stos js aad xchg aam mov jo jecxz jb (bad) into jecxz lds pop loopne xchg lret mov faddp out int3 mov pop out ret or loop mov or or dec repz out in inc xchg push mov push and negl (bad) cmpsb out add cs movsb scas (bad) mov or cmpsb rcl pop int3 lock cmp scas in sbb ds mov outsb fldcw add enter cltd cltd ret scas and dec inc inc fcoms shll fisubl (bad) incb mov sbbl pop mov insb callw dec (bad) inc add rcrb inc out adc ljmp (bad) loope xor sarb push inc inc rcll icebp orl call mov (bad) inc fsub jp ret mov pusha xchg adc xchg shrb dec cli xlat mov mov aad add scas cmpsb out out fiadd ds pop aam push repnz add jbe into cli ror mov mov aad jg push cmp aad mov rcr jmp lea mov mov es add outsb mov add stos shrb (bad) mov xchg cltd popa rcr mov ds iretw rcl mov mov cmp push fisttpl aam shlb cmc inc int3 data16 aam mov pusha clc xchg mov jmp jb lds ret divb cmp lret in hlt sahf cmpsl add ljmp rorb mov sbb (bad) cli lret or lret fisub sar cmpsb sub in sbb in cs (bad) ss xor leave lods inc mov data16 cs push sub data16 data16 loope imulb outsb mov push int3 stos mov enter outsl push mov sbb aad mov xchg test add out out push outsb sbb sub mov out mov shr mov sub incb mov adc jle mov xor dec ds fist or lret aam aam imulb xchg add adc negb aad add mov rcrb dec das sub loopne stos repnz mov lret leave or data16 push xor neg inc xchg mov iret push mov rcr mov add dec rcl mov push push shlb (bad) lods mov out cmpsb jmp cwtl es add mov ret mov ljmp jle xchg dec pusha xchg or and lods mov adc stos mov inc and sbb aam add dec mov into test add inc and mov out test adc mov mov mov pop roll xchg add fcmovb int (bad) loope insb fsub out enter mov or sub out mov mov ljmp add pop mov (bad) scas sbb and test mov int3 push pop add fiadd ss js push push push fcmovnu ret xorl inc mov into mov push dec mov fisubrl (bad) ret into dec jle,pn bound xchg jbe pop push adc push idiv movsl std add scas out shrl imul es cltd ror scas sahf mov lods inc xchg adc in idivb lcall cli mov mov lods mov mov shlb sbb pop mov mov mov xor mov mov ljmp mov addb mov imul and mov orl (bad) push adc ficom (bad) enter mov or imulw xor xchg repnz pop push mov (bad) and lods pop mov (bad) mov pop mov test add sbb aad mov add dec scas push lock in ret mov ljmp jnp xor shl sub (bad) out mov movsl scas testb in out (bad) loop jecxz sbb rcrb add cs sbb inc (bad) mov lcall scas rcr stos es xor rol enter xchg je pop mov xlat and mov push in push mov rolb add (bad) sub call mov fdivp in lods aad add jg mul push repz xlat ljmp lcall inc lds fmulp push (bad) add test aad es jg dec in ds inc jbe imul mov fcoms jge and lret lock add ds cmpsl out leave insb xchg or mov (bad) mov mov or xchg cmpsb ror mov loopne cmp sbb xchg mov mov cs inc xchg or imulb add (bad) xchg mov repnz fcomps add or fdivl aaa add (bad) rcrb int3 in push cwtl adc push es jecxz fsubs xor pop aam negb ljmp es or cs mov xchg mov rcl pop mov (bad) or (bad) lods ret mov jbe ret cli out inc dec lods movsl jbe push mov mov loopne orl loop test (bad) mov (bad) out dec loopne sahf push cs inc mov int into mov in dec lods inc outsl cmp fsubs push xchg jle shlb (bad) xlat lock dec mov jle add dec push ss cli mov aad dec cmpsb xchg insb cmpsb enter loop jbe scas mov mov mov loop shrb rclb into jb into xor or stos int mul out ficomp ss fistl aad clc xchg ds cs int3 cli (bad) into pop xor jp mov add mov call movsb mov cmpsb sbb mov jle test pop xor ret iret and ret sub cs aam mov add loopne xchg pop into jbe xchg mov out shr out fisubr clc mov xor jle stc mov mov or inc (bad) lret push push hlt add xchg ret scas sbbl leave shl inc adc es fisubr xchg xchg cmp cli ret sbb ret out bound xor stos mov lock pop xchg into mov (bad) fisubrl shrl mov (bad) pop mov mov test fnsave xchg cmpsb mov cmpsb rcrl js sti into std out out into (bad) rorl rol mov cmp or push stos out pop cmc icebp push sarb fdivrl (bad) out push shrl push cmpsb cmp (bad) (bad) xchg or add xchg lock stos push xchg mov mov cmpsb push lret stos (bad) jmp add fcomp shll sub pusha mov add subl xor rcrl adc or mov insl add cs (bad) mov pop mov xchg fildl fnstcw hlt lock pop pop mov fsubrp xchg or xor into cmp cmp and rcll or xchg (bad) mov xchg inc push adc stos dec cmpsl ret out xacquire dec subb jecxz push sbb bound rol fisttpl mov (bad) fdivs cmpsb inc mov mov (bad) pop push cwtl inc adc xchg push rcl cmp out sub (bad) fsubr mov ss or leave mov inc scas ljmp inc xor (bad) outsb orb inc inc cli loopne (bad) cltd mov repz add mov (bad) out ret cwtl stos (bad) or push sub mov add cwtl sbb mov (bad) lea cld dec enter or repz out xor inc pop notl movsl add out xadd sub fmulp fadds xchg xchg xchg push push je and out ljmp jb mov fsubrl (bad) repnz sahf js pop push sahf push out (bad) mov jl add or push adc push mov mov ret fwait mov adc pop shlb mov iret int loop dec and mov addl mov mov add add xor scas (bad) mov add push loopne push mov push test inc and lods out out cmpsb xor outsb shr mov inc fbld cld sbb enter stos ljmp lcall xchg sbb insb inc ss sarb xchg push lods (bad) out dec js ret mov negb mov rcll rclb pop or cs repnz aad add jbe push add test and mov mov cmpsl sbb jo inc mov push test pop mov mov clc fsubl enter mov shl sub data16 xchg push lret stc mov test push xchg push cwtl mov add pusha out or adc idivb stos and push bound jo in imull mov pop pusha (bad) ja jle sti fmulp stos into js push inc fiaddl repz inc stos mov decb repnz inc popa outsl (bad) stos scas enter add fcmovbe into out mov xchg out adc fadds int mov jecxz push dec cld mov iret leave push mov mov hlt push or push xchg (bad) push in (bad) in push inc xchg bound (bad) mov scas lret aam out dec ret push sbb xor push ss mov test leave es movsb mov mov test jecxz dec (bad) inc (bad) cs ljmp dec roll inc lods pop mov enter rclb mov jo push (bad) push into cmpsb hlt int3 ret xchg cmpsl or lods push out jb add add xchg and and out mov mov mov mov mov mov push (bad) cmpsb fimull cli shl jmp mov cmc and add out idivl clc fcmovbe mov rorl aaa add jle mov iret repnz adc mov leave scas sbb rcrb jb shlb mov xor clc push dec add mov dec adc (bad) dec mov enter shrl fnsave dec rol loope or fcmovu mov add xchg inc shl xchg add out mov jo or inc mov add loopne loop push call inc (bad) push push and (bad) mov mov ret inc mov repnz dec jne dec pop push stos stos rol pop cmp mov les add mov ljmp nop or mov pop mov shlb pop (bad) (bad) out adc fiaddl (bad) stos mov mov pusha test enter inc es fimul mov or xchg push cmpsb into into push sbb adc jp mov lcall cli mov xchg xchg loopne pusha add ret pop es lods in mov sub nop xchg push mov lock or loopne xchg fsubr hlt movsb mov add scas mov (bad) fcmovbe clc mov xchg jo push scas push ds outsb xchg fnstsw add adc xchg ret iret (bad) mov movsb mov push ret pop stc mov int3 dec cs lock aam data16 xchg int pop fwait (bad) sar mov push lret inc es mov or mov (bad) ss xchg std mov lret rcr sarl (bad) xlat mov mov rclb cmpsb xchg or pop into lods mov scas cs push lds mov out shl (bad) in sub rcll outsb mov mov add int3 sarb into mov mov add lcall push lock (bad) mov mov rclb lret out rclb push (bad) icebp ret movsl or (bad) mov fcom push dec orb icebp add push xor fsubl mov iret call jbe adc sti fcmove xchg cmpsb aad or dec es jo ss rcll and call push or ljmp mov mov cli data16 cmpsb pop out lods add add or mov in mov dec or fimull test sub add jmp adc inc jle xlat add dec sub into jle xchg sbb jecxz xchg (bad) jae (bad) mov aad inc push add testb in sbb mov mov sahf mov add add push mov push fcomps es in or fist sar lds enter mov jle call sbb ss iret es outsb pop test push push (bad) add mov pop cmc jp adc push es aam cmpsb loope pop pop push hlt mulb push rolb call fidivr shrl fbld mov dec into sbb (bad) fcom data16 adc (bad) loopne loope test ret inc shrl cs mov jle or mov add fisubr clc push push inc (bad) mov scas mov inc add mov push pop dec pusha add (bad) (bad) fmul scas dec ffree or mov mov ss fcomps out xchg inc push xchg int3 in shlb (bad) add es add mov mov mov scas or into jecxz test mov pop lods js (bad) push (bad) lock fidivr out xor or mov inc out mov sub or pop (bad) idivl adc test dec push add les aad sbb ljmp mov push jb mov leave cli ljmp cmp gs mov mov in (bad) fiadd imul cmp lock pop lock sub or mov lods mov (bad) mov popf push fmuls xor xchg lock ds pop int cmpsb cld push stos add add inc movsl mov push mov fdivl push push mov xlat fisubrl lock and (bad) mov xlat mov pop sahf mov jle add add (bad) lcall mov repz ljmp outsb out add arpl ret es add cli loop sahf ljmp jmp ficom data16 or mov movsl adc int mov pop cs mov and stc add add inc xchg inc (bad) mov inc jo push xchg xor outsb or (bad) out test sbb gs shrl lods adc mov (bad) (bad) mov outsb rorb mov loopne (bad) shll stos mov es mov mov popa mov ror inc out orl inc out sbbb and es sub mov push (bad) jno or jle,pn icebp mov push xor cwtl inc sub fimul in call fsub and mov shr rolb lea (bad) repz into cmp std pusha pop xor lock mov sarl into xor push mov sbb les shlb vpmullw aam int3 xchg (bad) cmpsl mov inc mov jbe mov xor pop mov les enter popa orb add clc iret mov leave fdivs jl,pt leave xchg gs push mov sar jbe sbb mov add add mov bound mov mov es movsl fnstcw pop or ret or xchg mov test out jnp sub aam movsb inc sar mov out (bad) scas stos fdivs mov (bad) mov test lods out mov (bad) lock or push shl xchg mov inc in mov adc cld stos in mov test push (bad) or (bad) ss mov (bad) mov int mov jp lret mov add sub cwtl add push and icebp add sti dec pusha inc mov iret stos mulb mov decb int js rorb mov mov aam testb cmc mov mov dec add fmull popa test adc lret outsb (bad) mov movb sbb rorb adc test rcr (bad) mulb aad push mov mov (bad) mov in idivb sub leave (bad) jae and data16 shr pop sub (bad) call out mov push (bad) rcr fist push int push out loop or (bad) fucom jbe xchg pop ffree or mov mov xchg in add mov jmp data16 sti dec cmp mov shlb stos add test xlat adc out (bad) jmp mov pop push andb fdivs hlt mov or in ror into iret jle rolb out es subb ret mov enter jmp add call cwtl loop outsb ficomp add dec push lret movsl add mov mov sub (bad) (bad) jbe inc jo push pushw pop lods sbb loop mov add mov xlat fdiv jmp mov (bad) and dec jp ret stc pop mov rcll iret jp inc pop int in mov nop aam call call mov add (bad) or or shlb lods pop add xor lods into mov enter scas ret mov pop sub fstpt sbb mul cmpsb mul xor push stos sbb ret xor inc push aad pushl (bad) (bad) aam scas lret out shr fmul loop int mov mov icebp ror sarb leave repnz enter dec sub mov mov ljmp nop mov lock mov (bad) fst mov fwait pop pushl mov lret mov mov in shlb movsb test ret out add scas shl enter out mov mov push icebp dec (bad) mov shrl xlat dec les repz lods js ret mov mov rcl fcmove mov (bad) mov mov movsb mov scas sbb jmp (bad) pop cli mov lret ret iret (bad) mov iret hlt out es fild cmpsb leave fcmovnbe mov ret stos cmp ret xlat mov pop in mov push mov int3 mov fsubs shrb (bad) cld iret out xlat clc jg or inc enter jecxz iret scas mov or lcall es cmp sub mov mov out mov (bad) iret les loop pushl call repnz cmpsl xor ret mov mov (bad) and mov mov cmpsb into (bad) sar ljmp jg pop xchg mov (bad) repnz fidivr mov clc lahf mov lods vcmppd repnz mov cmpxchg dec out ljmp mov sbb out mov sti ret shll scas mov mov mov mov lods (bad) jle mov mov sbb enter mov test fcos negb sarb call lret cli enter into in rcl icebp mov (bad) cmc (bad) aad clc adc stos outsb rcl adc fcomp mov mov ljmp mov mov mov lret loop mov mov loopne int inc fadd (bad) (bad) out test loope icebp jecxz out stos mov scas adc clc fsubs mov int push cmpsl leave ljmp mov enter fldt leave mov mov mov out fucomip call jle lds mov ljmp mov les enter shlb jecxz (bad) repnz idivl ljmp fisub mov test sbb pop add jecxz stos lds pop cld add ret cmpsb mov mov mov enter rol jecxz (bad) (bad) mov add jmp clc into jecxz mov ljmp mov loopne jmp hlt lcall or ret enter out rcl mov (bad) incl mov mov mov int mov xlat mov mov mov cmpsb mov in icebp mov mov rol cs mov iret cmpsb (bad) scas or negb movsb lds sti push mov jl mov in (bad) sarl add dec lret (bad) push rolb jne mov sbb mov sub ret fdivrs dec (bad) (bad) aam leave leave lods aad int enter repz insl push aaa scas (bad) rol aad jecxz loope ljmp loope aam mov out fnsave push mov je fcmovb out lret into scas aaa sar sbb clc mov (bad) mov mov out cli mov lods mov mov ret mov mov into repnz aaa or icebp pop pop mov cmp mov test loopne scas sbb mov shlb mov mov scas (bad) mov jle cs mov mov pop enter lret or or cmc (bad) test (bad) mov int3 enter (bad) push lret icebp iret push (bad) lret xor repnz int repnz (bad) xlat aam (bad) imulb leave (bad) (bad) mov (bad) sbb enter decl (bad) mov fcom lret xchg mov cmpsl ror (bad) fdiv mov out hlt mov pop ret (bad) lods int3 sti mov push repz mov xlat (bad) (bad) (bad) (bad) mov in out fsub fst fmul lret test push add cli (bad) in cmc xchg (bad) jmp (bad) loop leave inc hlt mov fmulp bound mov call jecxz lret ljmp mov fcmove lods ror (bad) mov fsin (bad) (bad) int shlb (bad) cld (bad) mov in int ret std cmc jecxz idivb mov scas les fldln2 lret mov rol mov aad mov bound mov adc pop insb in lret cmpsl rcr jl aam push sbb stos ror add xlat vunpckhps repnz in mov (bad) cmpsl lret push cld int out leave push (bad) in into divb fdivs out mov int (bad) mov lret sub (bad) fdivs dec leave test sarb test (bad) out leave rcrl mov in mov mov in push mov incl mov mov rcl (bad) ror mov mov in jecxz or mov cwtl (bad) push scas add dec cli aad mov mov idivb je sbb mov mov loopne loopne push mov mov mov mov mov mov xchg mov push inc mov inc mov shl fmulp hlt (bad) mov fmul stc ret out cmpsb ret mov fidivrl push fst fsubrs rcl aam divb loope ret std pop hlt mov mov shr stos (bad) in or mov mov xchg mov in inc in enter ret mov mov adc fisttpll int3 mov stc aam call mov lods fcmove aad clc mov rol sar mov stc (bad) (bad) fnstcw clc aad enter icebp sti mov movsl (bad) sbb (bad) (bad) int3 test lods mov leave out in outsb jp cs std ret (bad) icebp inc sub scas rcl fldenv stos outsl jmp ljmp int3 (bad) stos repz pop clc mov pop jmp test add sbb cmp xor loop mov mov (bad) idivl pop clc es enter les (bad) ficoml hlt sub int3 cli in scas xor xor mov xor xor lcall xor xor repz xor push ds pop out sahf out xor negl push xor xor mov xor out out sahf out or lcall sub pop movsb jmp push vmwrite cs inc push inc dec insl bswap std and inc inc push dec inc inc daa aaa inc fs insb jne inc popa jae pop dec inc imul jge aaa inc imul sbb or cmc cmp add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add (bad) mov add inc gs gs jo popa je inc sbb mov adc push jae jb outsb inc dec push aaa ljmp imul outsb je jne je inc jns outsl push imul mov jb inc xor jle xor insb push arpl outsl sti lea nop jbe sub in sti aaa fs jb arpl jae fiaddl test or and sbb outsb mov mov jp dec outsl inc dec imul adc scas inc fs push inc or jge xor cmp dec popa insl add neg xlat inc insb outsl jae dec popa outsb fs mov fisttpl adc dec popa push inc jb fcompl xchg les test outsb mov sub push data16 dec jo adc or fldenv pusha inc pop lock cmpb add xor gs fnop fs js (bad) outsb rcrl imul insb dec bound inc je popa ss pop clc cli adc mov out mov jae jb rcrl fist leave dec jae pushf jo loopne lcall push jns sbb mov cmc sbb outsw aas push xor pop push pop jb popaw or cs dec inc daa push je ds jns (bad) push int ss dec fdivs push mov faddl jmp pop fstpl xor inc data16 bound imul xchg addr16 rorl lds push cmp xchg hlt inc fildl lret push lods jb es jne sub pop mov pop jo cmp fneni(8087 jne push scas sahf inc (bad) mov xor fistl pop pop out jbe adc lahf shl cmpsb add addl rcrl cmp lahf jae push push xchg push movsb insb test pusha icebp push outsl stc movb enter add gs sbbl push jno push sbb or jne or or dec inc dec pop sbb sahf adc adc sbb rcl sub (bad) enter push sbb xchg fs dec popa inc idiv jl pop push push test in inc sbb ret (bad) add xchg fstp vmaxpd adc pusha mov imul je pop jne push fidivrl jge ret xchg outsb cmp add add add lahf xlat popa nop jo push je push outsb push or mov pusha fs or nop test outsl mov ret (bad) push or (bad) ss pop (bad) mov push dec and push add cld fs sbb sbb inc fstpt fisubrl andl rcrl or fbstp (bad) fldt sahf add or lret cwtl add mov cmp inc int3 mov pusha add adc cmp in push dec push rolb movsb sub or dec stos push xor sub shrb mov cmp addl lahf inc pop leave (bad) xor (bad) add ja clc inc fs xor cmp adc bound addr16 loopne (bad) test in (bad) aad jbe ja lea lock inc addl mov imul or inc adc je sub fs je outsl sbb pop ret mov xchg jbe adc push imul out adc insb ss adc inc dec inc jmp ror push push inc inc stos adc insl mov lahf push fwait dec popa bound mov stos inc mov insl sub xor insl pop mov mov dec movsl inc jp dec inc push imul jp sahf and faddp in mov inc movlps lods dec jle lret inc popf out bound xor rolb push inc xor sti adc xor inc pop fimul push cmpsb or push mov in lods pop dec or jae add inc add adc pop sub jno cmpsb fdivr js pop push outsb lods fstps addr16 or mov push fisttpll outsb cmp loope and jo cmc xchg ljmp cmp and adc out push or arpl lcall daa ja push add les pop pusha xor lcall xor pop cmpsb imul sbb sbb sbb frstor or mulb and or adc movsl add push add adc pop add or movsb lock push idiv lock add sub addl add or or or idiv outsl inc adc pop sbb push comiss pop unpcklps push or pop adc or pop or (bad) sti call adc or or and or push adc sbb push and (bad) decl cmp or sbb pop cmp xor dec bound cmpb push pop push adc fcmovnu movntps daa es push add sbb sbb or pop and push pop sub xor sbb rdpmc or and jns (bad) scas jge push mov sbb or push adc or (bad) (bad) (bad) fildll or adc push cmp push sbb or ret and lock (bad) ljmp add prefetchwt1 sbb jae pop data16 cmp inc test or outsb mov lods scas mov adc add aad push in pop mov lock add adc outsb pop jle push pop jns xchg (bad) jg das and mov rolb lock out or fwait mov inc adc (bad) incl cs push mov lock adc sbb xor std (bad) mov adc sbb les sbb push sbb add adc sbb pop or add gs sarb fidivl sub stos inc cmp lock or lret pop imul fistl inc icebp cmpsl in mov jp sbb and jp add push jg pop cs mov or and adc xor in out es adc fcoms imul orl add adc push ljmp dec sar jnp cmp or adc push in jns xor bnd out (bad) out xor notl sub divb cmp lock int into dec pop xlat mov (bad) xor inc or or scas mov mov cmp lock add sbb inc (bad) adc sub pop jnp imul xor aas or lock dec or add ljmp inc lods data16 jno sub adc add adc sbb loop push incl or popa testl add mov rcl sub add cwtl lock adc (bad) adc sbb stos and lock pop (bad) mov push lock push and push xor imul and and sub inc and pop rorl fdivs les xlat cmp int cmp inc pop pusha ja (bad) cmp cmpsb mov sahf pop mov sbb pop and and mov (bad) mov inc ljmp cwtl adc pop imul xor sub xor xchg js in xchg (bad) loop mov mov mov es lret iret inc and push xor xor cmp add mov adc pusha push inc negl dec repnz push jmpw push sbb adc add adc gs mov or dec or lock sub cmp stos dec add and hlt cmp adc sti (bad) pop mov or adc je fsub mov inc add daa pusha push lock pop xor loop sarb ret shrl nop and cmp les cmp out idivb pop sub xor arpl outsb lcall enter add or jl xorb xor out repz pop iret or nop (bad) push dec notl cltd cmp lahf xlat insl out scas pop lcall and sbb movsl or mov repz insb popa mov mov imul jns or arpl aad cmc aas mov lds adc cmp dec mov sbb rcrb adc adc je xchg sub inc fisttp cmpsl jne jo nop sub test or sbb or nop rorb add dec mov scas adc sub push add sbb inc sub inc and call lcall add adc sub bound insl flds dec push ret fimul gs daa inc add and fsubp loopne dec push inc adc add sub pop sti stc jle addl add xor jno das or fstps movsl add fnsave pop cmp sbb push ja in pop push lcall outsl fistl add fs inc cs pop mov add jg fisttpl push push in push and push pushf inc xlat add push inc mov mov jne mov cs test loope out xor cmp les xlat (bad) call add or insb xchg inc push or mov or inc lea rolb sub out pop adcb sub (bad) or push pop push dec lock add lcall push push push jg add out adc js add adc sahf lret add subb std sbbl dec movl (bad) and or push adc xor mov sbb pop lock adc lock cwtl xchg sbb out fldt xor inc pop adc push adc add pop adc lock arpl cmp fsubl adc add mov adc and das push movsl xor push daa mov imul aaa sbb cmp or ffreep incl sub adc xor sub ltr aas push and sbb decl pop cmp daa pop sub push or unpcklps outsl push xor xor jns sbb and sbb inc or xor js fildll sub push or js inc outsl jg pop push or sqrtps inc mov xor pusha add cld sub cmovle pop lock push lock lock and adc jle or or jae addb jle rclb fidivl sub xchg notb jle xchg add bound jno jmp push lock pop addl lods loop ficomp add aas (bad) scas lea add adc mov add mov cmp movsb xor dec fnstsw add sbb popf sub ret inc outsb add xchg jnp call insb inc or xor outsb add jge and daa pop mov jne scas mov adc test sahf cmp cli inc call aad enter adc sbb adc ljmp jge jle jle je in nop (bad) jo xor mov loope out (bad) repnz add cmp push insl sub mov mov icebp add add push loope adc ret aam mov gs jns xchg pop xchg les add xchg fstl mov sbb int loopne xchg jmp mov repz push sub je jnp add repnz scas bound pop sahf add ficomp out loopne jo es and decb lcall jo rorb rcll daa sarl sbb add jnp sbb loope fbstp inc jle ret lahf bound sbb in xchg pop cmp negl inc pop add fcoml arpl and js imull pusha cmp out push add and in fisttpl addl loopne jbe lods adc rorb adc bound (bad) iret pop mov mov lock aam adc jbe jle pop add or movb lret xor (bad) (bad) call adc cmp pop jmp mov xor and pop push data16 cld jg ret jb mov outsl (bad) lock or repz lock add inc mov andl adc or push push sub add ljmp cld adc and dec adc inc ja dec dec add or fsubrl inc or sti adc pop and or dec test cld insl cmpl add aaa pop sti sti add lods enter or push or cmp and push or bound ja dec add xor add inc cmp sub and pop loopne and push mov sbb push sbb sbb mov iret pop bound xor push dec lock lock add add outsb cmp sbb or adc insl or mov add mov aam adc (bad) mov add loopne push fs add ret pop imul loopne or aas add les test sub shrl adc daa push sub or outsb testb rcrl pop addb movsb rorb sub lock cmc pop sahf and stos movb mov sbb pop lret fcmovu (bad) mov sub xor lcall push add pop add sbb enter or (bad) mov dec sbb push pop (bad) out fimul push adc push mov scas lock dec call mov sbb jge xor or or or pop pop jg decb pop sbb pop or pop inc or or or or out sub sub cmpsb or and call and inc push or dec mov or or push sti ja xlat stos or sysret or sbb or and push adc jne or or or (bad) out in or or sbb sbb adc or sbb sbb (bad) dec scas sub push test insl xchg add push icebp sysret roll jbe adc add pop lock cmp cs cs bound jp xor aaa or adc or and (bad) (bad) aas push cmp or jp or adc adc testb or aad sub or in pop fidivr sbb dec sbb push and pop mul adc cmp xchg sbbb push adc (bad) sti pop mov cmp loope mov out or inc jl ds pusha dec push test in jmp movsbl rorb rorl sbb or or push loop out push mov jns cld popf call imul (bad) adc jl movsb pop xchg mov adc adc adc fcoms jnp xor outsl fcomi or stos sbbl fstps (bad) movsb cs push inc (bad) mov push fsts scas cld fistpll mov adc add xor sbb xor mov pop ja bound jno dec inc adc sub les pusha xchg dec adc or ret push and mov add sub mov dec mov mov sub ret push adc ss aam xor inc pop or mov push jns fwait int adc push lcall dec fimull test es ljmp push lcall or divl dec xchg jp and push jge (bad) test and sub nop adc adc or stos scas cmpsb loopne xlat sbb imul add or mov adc rolb pop adc lock xchg mov or cmp stos (bad) movsb mov ds nopl (bad) xchg or or adc lock jl mov add push lock mov add (bad) or push push mov add add orl aas daa dec sub incl push fdiv and jge push xor insl add mov mov aad sub and lock outsl ret cwtl adc sub or outsb push cld mov sbb add or cmp or adc loope in mov ss push add les jge pop dec pop xchg mov testl mov pop andb fwait add fwait cs mov aas rorb jnp js inc lahf or sbb hlt mov push sub push cs fldl add sbb dec add hlt or jns imul loopne jo jp pop add (bad) and stos lahf pop or adc insl add (bad) iret sahf mov push faddl pushf add sbb sti outsl sbb lret add and or adc sbb rcrb add add mov ds or add inc pushf push adc scas mov sbb inc sbb mov outsl dec or es push xor addr16 mov or push jne xor lcall push cld or adc inc aas add sub addl aam jbe lret adc cmp sbb cmp cmp loop and dec and push add adc fs mov test add aas dec sbb mov xor cmpsb imul pop sub imul cmp xlat cmpsl adc or pop in pop mov mov stos bound mov add sbb enter loop cli push xchg setbe imul repnz or sbb xor std pop mov (bad) cmovnp adc add xchg movsb inc sub mov mov rolb add adc push sub scas add inc add sti int3 movb pop incl or icebp add jnp pop push push insl jnp scas dec xor adc pop paddd loope adc data16 pushf adc mov call cmpsb (bad) (bad) jmp add and push (bad) jg add adc adc out clc pop icebp or xor aaa add pop or and cmpsl sbb push jnp add out mov xor mov sub push pop dec push or pop and jle and xor roll lcall into and inc std mov or inc add sbb insl cmpsl pop lret in inc dec add xor mov push loopne (bad) mov xor cs push xchg and mov jae js and add jecxz pop je out and and pop or and push sbb mov (bad) add (bad) call push adc or or push cltd xchg mov ss or add je jle (bad) lock push insl add subl add pushf add aam and das add pop pop add je aas adc subl push push dec sub test mov sub push push loopne push (bad) jmp pop cmp xchg sbb out adc sbb jle mov inc in outsl rorb cmp cmp pop xor (bad) (bad) loop mov bound loope push test adc or adc adc add pop and dec xor mov adc and or push sub push adc sbb or sbb jle (bad) sbb inc dec pop or pop fstpl sub or add inc or sbb sbb sbb inc stos shrb pop jb sbb ja aaa cmp or sbb test or sbb inc (bad) in neg mov push aaa or cmp push or push or or cmp or and push add pusha lods adc or es inc sub inc or aas or ljmp or or inc iret mov or je sar jg sbb cmp lock add adc and cmp jmp or and aas sbb adc push add or push sbbl scas push adc (bad) das stos js push pop adc or or push or or sbb dec adc hlt pop sbb xchg in pop sub sbb push push xor adc pop ljmp or and add fidivl adc or or sbb push call jo dec outsl pop jne jl or sbb lret daa sub adc jbe aad dec dec push ret js,pn (bad) xor add or cld add and sbb jp or or add add xor cmpsl push xchg jo dec in int3 add sbb and sbb dec sub jmp push and or adc addl cmp repnz push push jo aaa or mov adc or pop ret aas jecxz inc mov sbb testb xchg add (bad) dec pop pop push pushl lods loop add cmp or sbb lock add (bad) clc sub pop pop sub sub or arpl das (bad) sbb pop xchg xor or mov (bad) mov and sub outsb add (bad) xor inc pop popf sub in or sub lahf add dec or and push clc aaa sbb into pop add or push inc shrb incl sbb xor adc push and adc and add or sub incl push inc lock add jle sub dec lret outsb and lock orb lock lea push adc mov push sub or or pop push push and sbb mov inc push (bad) and rolb pop in adc sbb jns sbb adc (bad) mov cmpsb add sbb and enter sbb sbb or aaa pop mov push ret xor add cli insl and sbb jp adc jne inc ja decl adc jg pop lock add mov pop adc ja scas or lcall cmpsb push mov adc or xor cmp jmp cmp or mov adc in movsl jne or adc adc aas pop shrb pop sbb adc adc or push or pop pop cmp jno dec or ss pop lret (bad) lods loopne mov adc ud2 and mov and sbb ror or or jne push sub adc and pushf aaa push out sub add test dec daa rcll push pop xor pop and sub cmpsb mov jb call in mov push testb sbb push and (bad) lcall pop and adc or pop lock data16 dec mov mov dec test lock add push pop push mov sbbl mov adc push (bad) adc in sub sub outsl rcll inc cmp push or mov ret jg daa jbe dec adc and xor sbb inc (bad) loop adc mov imul add mov (bad) out push add pop out sub insl in ja jg sbb xor ds push inc in inc adc test mov push pop adc cmp sbb push sub inc ret ljmp and mov sub out jl stos add das sub add popa cmp cmpsb push mov scas aad ficoml push xor xchg out in cltd lock or aaa xor fbstp imul imul bswap and xchg (bad) fadds adc jbe (bad) cmp adc cmp inc and cmp dec inc dec or popf push das (bad) in add dec adc mov jo adc xchg jnp jg loopne and or push pop test pushf mull rorb fs push loope push mov sbb dec add mov imul inc or adc mov adc outsb pop sbb (bad) out xchg or pop push and mov pop or aas mov jo pop or popa cmp loop (bad) in aaa add xor or movsl sub pop or sbb push cmp loop loopne or lret bound addr16 or push add sub adc adc and lods sub sub stos lock adc jge rcrl fidivl pop adc fs sub mov lock pop es les fstl add sbb pop shrb pop adc mov or inc or mov cmp clc stos fisub out adc js sbb sbb aas loop jg gs inc adc or and pop adc fist loopne sbb add fs ds sbb adc stos (bad) pop hlt sbb adc mov adc inc inc push or outsl inc lahf push and or sbb inc lahf push xchg cmp sub or dec dec adc pop xor pushf and cmp pusha cmp add push ret sbb lock jae sti (bad) sarl xchg pusha pop andb sbb push sub xor fldt add or adc push jnp cli or cmp push adc mov xchg outsl call jne,pn push adc or sbb push push fist push cmp push dec dec adc pop adc (bad) (bad) jmp or sbb and push or sbb sbb data16 incl or lds aaa adc fs sbb cmp dec jo aad rcll cmpsb sub add sbb sub sub cmp movsb sbb ljmp es xor or dec push inc lret imul (bad) icebp incl adc dec jae je (bad) adc out int js cmp inc add or push sub enter cmpsb jbe or aas arpl sub loope xlat and or pop pusha jbe sbb adc wbinvd pusha and mov ljmp sbb es cmp add push aaa jo or push (bad) pop or or and sarl adc leave push lea lahf inc sbb sbb (bad) out xor dec incl or pop mov or je or jmp pop (bad) add or (bad) add dec gs pop or push add imul std jnp imul fcoml sbb jg loope,pt jo lods mov xchg pop in pop out (bad) mov cmp cmp add mov shr rorl dec imul push inc clc lea push pop das xor xor lret add xor xor pop xor add insb and add jne (bad) cmc outsl or pop ds jae jp dec xchg (bad) incl pop mov das sub fs lock add and jbe add push cmp push xor xchg test dec and loopne add cmp outsb dec cmp lea frstor int3 loop or and and outsl mov cmp xor inc inc jp inc pop sub fs or outsb sub or test jp cmp ds pusha push negb inc cmp xor bndstx sub cmp test jb inc cmpsl dec mov lock ljmp rorb sbb push and push mov mov (bad) add push mov xor aaa xor and sbb es or xor cs inc pop adc xor ss and aaa mov ss mov adc sbb stos aaa adc enter add adc sub cmp or fiadd scas push xchg cli mov cmp or or add adc mov jbe add pushf or adc adc stos adc or pop mov xchg or or push push pop add fsubs mov test or add cmp arpl xor icebp addb push stos rcrb lock inc inc dec adc add lock and xchg insb ret lock mov mov insb sub cmp enter leave add inc mov mov cmp fildl lock pop loopne or lock sbb cmp adc and ljmp pop and mov mov adc (bad) rolb add or outsl lock adc lock adc pop xchg aas sbb or outsb repz cmp cmp jne sbb sbb xchg cmp sbb aad dec mov inc or xor bound or insb int3 negb inc sbb jg add push add push jecxz push shlb sub adc adc push inc arpl add outsl and or std push xor add stos xor in xor out inc in lea push dec inc xchg sub inc adc movsb sub add aad adc or movsl jmp subl aaa pop xchg push push and mov cmp push sub xor or cwtl mov xlat adc lret push sbb push adc xchg sub or adc and or xor or add xor outsl dec add adc adc dec add add data16 adc mov add bound daa or and or sbb sbb mov push cwtl pop xor xor inc mov mov arpl or xor loope fisubrl adc mov test sub (bad) push ret mov or pop add pusha or sbb sbb (bad) sbb sub es or pop ss dec sbb bound push test jecxz mov xor dec insl (bad) mov adc cmp mov orb mov daa and pop inc add addr16 add insb subb (bad) int xor sub iret daa lea pop aad aam xlat incl test xor adc or jo add sbb add cmp sub or add out add pop inc sub pop or or push xchg pop aam lock add adc mov push mov add jecxz jo test and loop bound or inc mov add adc sub dec pop xorl xchg adc or loopne mov push lods or or mov and popf and jge cmp or pop add mov add adc and sbb outsb in mov pop xor push lods imul ss or add (bad) pop pop push scas cmp (bad) lods and mov jecxz cmp neg push pop test ret mov data16 sub adc push sbb test or adc sar push inc cltd mov mov insl outsb sbb imul das push test pop iret dec xchg sbb cmovp cwtl data16 add mov imul cli pop or xor je and das or sbb and sbb imul add pop sub push sub pop jl sbb pop mov adc inc or (bad) xchg cld js cmp and inc dec and xor xor cmp sub jl adc cmp sbb lock lock jae test or pusha and jl arpl sbb push add fcompl and data16 xor cmp sub inc and xor fwait pop fucomi mov cmp jbe xchg mov xchg cmp fcom call push dec int and sub mov out jp cmp xchg adc loop,pn sub mov (bad) add push aam sti or add add add add add neg out into leave add daa (bad) sub adc nop fistpl flds inc pop add add (bad) (bad) outsb int add sub cmp adcl movlps pop adc setnp or add push inc pusha inc mov mov pop inc dec dec mov outsl cmp cmp lcall cmp sub jb popa je cmpl or test jge inc cs add in xor fsubrl fbld sbb dec rcrb ja sbb out add and jb insb outsl push into adc dec push push in ret (bad) or sbb ljmp dec sarl add add dec incl pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add or jne mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add push add push add add add add add add sbb add sbb add add add add add add add add add xor add add add add add add add or add add pop add add add in add add add pop pusha cmp jae insl bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds jae gs bound push inc mov aas add add add add add add aas add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aas add add add add add add add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add dec xor cs insb add imul insb insb add dec dec dec inc push cs insb add xor xor fs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add dec jo outsb push jb arpl jae outsl imul add je imul imul add je jb gs jo outsb inc add lock add add cmp ds add add add add xor sub add add (bad) sbb xor xor push add sbb or push add (bad) aaa add add pop xor xor or push add (bad) aaa add wrmsr and and cmp cmp cmp dec add jae outsl add add add add add xor xor push add sbb mov int3 aaa rol xor dec repnz push add out (bad) add xor add add adc jmp jl dec pop ljmp cmp or dec xchg or add orl push adc pop inc xor push add adc gs gs and jo xor adc add pop adc inc jne bound jbe insb insb xor xor or push push push xor push add adc push and jb imul outsl outsb xor xor add push push push and gs popa insl jo outsb and xor pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and (bad) add xor dec xchg or add (bad) add add (bad) add add lods mov push dec xchg sbb or and sub mov imul cs pop sti adc jbe inc add inc hlt call int3 and mov add (bad) dec in mov imul inc cmp inc into inc adc (bad) mov sub cltd push lods jb es jno mov (bad) push popa add stos cmc dec sub js movsl das mov out out mov push aas cmp clc jnp in or lock inc pushf inc add stos xlat insb lahf xchg imul enter fcmovb xor xchg and jl out dec sbb ret sahf sub out daa push jge negl push mov in cmpsl sub stos gs fcoms dec dec inc lcall loop pop xchg or push js inc int inc jle rcll lds leave (bad) jno add add mov divl sbb push add add pop lcall lcall in dec subb xor push or push add add xor and or push add xchg push das das outsl arpl je,pn popa ja gs xor push add adc add add xor add incl add xor push add pop add xor xor xor je jo das das arpl je,pn popa ja gs das push push push imul jo outsb addr16 inc arpl xor push add and push or push add xor push add sgdtl incl add add xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub or xchg (bad) or add addl pop xor jecxz sbb pop aaa pop cmpsb push lahf push (bad) ljmp insl jmp jl call jae adc test sub mov pop xchg add (bad) xor cld loop sbb sbb jns bound aaa push and mov fstp push aas sbb push push pop cmpsb cmp adc mov (bad) add xor add add adc or js xchg fidivl mov enter or dec xchg or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and (bad) add xor dec xchg or add (bad) add add (bad) add add and or jp sahf pusha or out cmp jl cmp sbb sub (bad) sub stc push or cmc icebp lods enter and sub clc mov dec mov (bad) jle push in out inc (bad) adc movsb fcomp clc loopne bound cmp lret test in (bad) sbb ret fadds push dec rorb rorl divb jnp dec push rcll mov mov xchg addr16 hlt push add nop mov cmp hlt cmp loopne jmp mov hlt xlat lods repnz cmp xor sbb and and sub (bad) aad dec in arpl cmp or inc mov xchg scas push popf aam inc shlb adc jle aas lahf jae xor iret pop aas xor xchg mov push call add add (bad) add clts add adc add add xor add pushl xor add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor arpl xor push add sgdtl incl add add xor and xor xor add sbb xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push add add jg cmpsl ret mov inc cmp add insl push or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor dec xchg or add addl lea push xor add push shrl cmc push and cwtl mov push mov cmp xchg sti xor adcb add loop into xor popa adc (bad) icebp outsb repz push inc jle ficomp mov xor or jno fmul fisub loope adc fdivrs cmp push mov and lahf push gs mov mov xor add add adc iret hlt cmp (bad) mov push sbb push xor dec xchg or add pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and push pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor add add sub insl popa outsb je arpl push imul insl jo outsb and jb imul outsb gs sub (bad) add xor dec xchg or add (bad) add add (bad) add add arpl cmp and jmp xchg mov fldt outsb incl adc std test popa jns pop leave dec xchg loopne dec and rcrl dec out test mov fs lock mov xlat sub int loope arpl pop mov pop mov cltd pop test sub pop out xchg (bad) inc push sbb xchg inc cld stos scas mulb inc lods jo out out int mov sbb shlb movsl sarb xchg pop gs out pop je inc xchg fmull dec mov ja pop push fisttpl pop xor fldenv dec popf cmp (bad) or icebp mov fnstenv add jp mov scas cs jo mov sti or loope sub int add add mov (bad) add or add adc add add xor xor push add and or or or push add xor push add sgdtl incl add pop xorb push or push add add xor sub or push add xchg push das das je sub ja,pn jae,pn insl popa outsb je arpl arpl xor push or push add xchg push das das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor jb cmp add pop add xor xor mov sub je cmp das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor insb xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub add push add add inc (bad) imul arpl aas pop ss push add and xor adcb cmc outsb pop int3 int3 je aam jge aas fucomi dec subb xor dec xchg or add (bad) add add mov sub dec lock bound aaa js test pop outsl sbb aam add lcall jns and fidivl hlt sub arpl in fs or testl mov mov frstor (bad) jno int je mov fidivr out mov sub mov mov xchg push adc cld fstpl dec pop push inc inc inc outsb or mov fimull jno cld sbb mov jnp imul push sub jg or lret insl add cmp loope hlt pop test sub dec sbb and push ret xchg cmp xor jnp,pn fsubl or jno push pop iret call mov mov and push lcall cmp xchg loopne mov xor add mov add and jge mov (bad) jb iret mov or dec xchg or add xorl adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor pop or xor xor xor xor pop pop or xor xor jmp or or add push adc inc dec xor xor push add or pop inc imul xor push add pop adc inc imul xor push add or inc imul insl popa jp popa insl and and je jb gs push arpl outsl insb outsl addr16 inc outsl cs dec je xor xor add or xor je insb and and popa jae and and jb jae data16 push outsl data16 popa jb and insb imul jbe xor xor push add add inc imul insl popa jp popa insl and and je jb gs push arpl outsl insb outsl addr16 inc outsl cs dec je xor push or xchg (bad) or add (bad) add add (bad) add add push fist iret in mov icebp sub xchg jo xchg ficoml nop adc mov aad mov notl mov cmp popa xlat call xor test mov ret pop mov imul inc fst jne das fcmove out cmc das cmp cmp push sbb xchg sbb or add sub mov fdivrl mov insb and adc cld push lds imul in mov push sbb dec int scas lahf movsb shrb lret adc subl insl out jns movsb stos lret gs push xor fdivrl sbb scas pop scas jns mov jmp sub add xchg add imul out pop ja fldl add add add (bad) add or add adc xor xor push add sgdtl incl add pop xorb push add pop add xor xor xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push sbb cmp cmp or dec add pop add sub sub or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add and push or push add xor or push add add xor and or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push or push add xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push add and xor adcb test dec leave mov out jecxz cmpsl popf xor push or dec add add add add xor push or push add (bad) aaa add sbb xor add add add xor dec xchg or add (bad) add add push cmp pop mov and popa outsl ret stos fistpll push (bad) add mov out shrl (bad) je pop lret jp cwtl das mov and mov jb lcall jo pop mov mov lods mov popa cmp addr16 jno and push js test aas inc mov dec cmp shrb jae mov jecxz fsubrl aad movsl mov clc popf in xchg ljmp pop mov inc int3 jmp nop sub pop inc addr16 push inc das iret adc dec push out dec (bad) mov pushf jo sub int3 sbb cmp inc iret push je punpckhdq arpl loop mov js lea cmpsb in idivb js arpl dec push std dec repz jns cmp jmp push or (bad) add mov add push add stos and in xchg leave aam xor xor dec xchg or add or push add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and push pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor push or xchg (bad) or add (bad) add add (bad) add add and movsl xlat mov imul in es sbb xchg divb imul jne xor push push int or mov cltd loope aaa dec pop into cmp xchg (bad) cmc daa xor cmpsl mov pop mov sti int bound sbb icebp jecxz cmp nop add cmpsl jbe jg add jle rcr add imul inc add fist jno push add add dec inc cmp mov insl orb aas sbb das xchg cli in ja mov mov cmp sbb bound push (bad) hlt pop xchg sub jle std movsb xchg cltd jg int movsb jne out adc sbb cs cmpsb mov dec jle mov icebp xor cmpsb ss xorb movsl int xor mov add add mov (bad) add xor push add adc add add xor add incl add xor add and xor gs or dec add pop add push xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push or push add xor sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add sgdtl incl add add xor or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul sbb sub sub and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor jb xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor and push or push add push or push add xor push add adc xor movsb sbb xor push add add adc jb push imul sub sbb push add add iret cltd test dec leave mov out jecxz cmpsl popf xor push add and xor adcb cmpsl ret mov inc cmp add or dec xchg or add (bad) add add out movsb les dec mov psubusw in jp and inc cmp insb sarl sbb test (bad) push cli adc dec and andl mov arpl inc call add test jno out add cmp pop adc (bad) aam in jns or jb aaa and or lcall nop pop cld cmp cmp cmp adc and int3 dec and nop pop pop mov cmp in (bad) outsl movsl and scas or mov outsl xchg pop mov pop (bad) jne arpl into xor sbb test lods xchg cli lods in xchg mov ret arpl adc cmp sub cmp add dec xchg (bad) xor add add add or or or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc add and jge mov (bad) jb iret mov or add sbb adc or push add (bad) aaa add or add add sbb or xchg (bad) or or or push add (bad) aaa add add sbb or push add (bad) aaa add or push xor or push add (bad) aaa add adc sub add add push add aaa andnps adc add (bad) pop data16 in xor dec xchg or add add sbb insb push and and dec in pop lea mov push lds lods and insl sub cmpsb popf mov adc scas hlt mov bound lret cmpl loope test (bad) fisubl testb das cld in mov rolb aaa icebp (bad) push sub jns cmp lahf cmp out fcomip jl xchg sub mov lahf out sbb sbb ss mov ja jge jmp (bad) (bad) add loope xchg test mov mov mov sbb fiaddl out jecxz leave add or aam loop out repnz xchg cmp fdivrl dec and pop int loopne jbe push pop scas add lahf mov xor cmp ja stos mov sahf lret aad mov mov push int3 adc mov (bad) add push or xchg (bad) or (bad) add xor add jb pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and adc iret hlt cmp (bad) mov push sbb push xor push add sbb sbb or xchg (bad) or or or xchg (bad) or sbb or xchg (bad) or movhps xor xor xor and or xchg (bad) or push add loope mov dec jp in sub and xchg out adc push or xchg (bad) or add add inc sub xchg fldenv mov cs pop cmp add sub and nop mov ret fldl ret (bad) fstps ficompl lds jecxz inc sbb stos into hlt mov adc push inc and cs add fcoms sub push sub jns call imul in jp mov and test cmp xor and xchg pop adc ret out leave mov and cmp dec dec mov sbb popf out popf addr16 jl ficom sub adc pop sbb mov push lock xor (bad) mov jp push lcall iret dec movsb int3 popf sub je inc lahf fstl sahf dec shrl stos inc je leave xchg and lret bnd inc (bad) mov in push push mov test jle mov add push dec xor pop (bad) (bad) (bad) div inc cmpl jge mov jmp push pop movzbl shr mov outsl (bad) (bad) mov sbb loop shl shr or xor int cmp jle inc lcall ds cmpsb jge push jmp mov inc add jle ds (bad) insl cld add add push add jne pop movb pop leave ret pop mov (bad) (bad) incl sub lea mov inc test jne sub (bad) lock and push push ljmp mov js cmp xchg xchg mov or (bad) mov sub mov mov inc add mov cmp jne in testl pop jmp fisttpl mov (bad) (bad) jg mov (bad) je dec dec jns mov mov mov shl sar mov std add rorl sar jecxz shl or decl push clc js inc hlt add lock sbb test add cmp pop cld clc mov pop pop mov add or jmp or inc mov push lea push call (bad) and int3 sub jne add or sub fistpl pusha add push je cmp je or je and lcall mov jmp mov hlt mov push or andl mov add xchg fmuls sbb scas mov (bad) ss movdqu sbb push pop mov rep loopne outsl insl imul add or sub or sbb xor (bad) loopne mov sbb mov add jg mov mov and push lea idivb xor adc cmp jne jecxz mull in sub xor jge repz jle add incl add je movb addr16 nop sti pop sarb ret incl jle jne push mov push aad (bad) xor add ljmp jo call loop pushl sbb xor ds sbb inc sbb add dec sub mov adc mov xchg outsb fcomps or jne (bad) jbe inc sbb leave mov jle push in je jbe adc inc pop iret int rcll (bad) es enter rcrb cmp cmp pusha and sub inc test sub push add push jne add jecxz cld stos les inc into nop sbb scas (bad) xor lods loop mov cltd cwtl pop add sar sub mov shl incb movb mov push adc mov repnz push je ret push or jne mov outsl mov (bad) enter or fsubr sbb jp stos fsubrs mov rorb mov sbb cs dec and xor test lods push mov lods (bad) js repnz cmp jmp mov and xchg or mov push push xchg icebp pusha rol call out adc mov mov add or inc and or cmpsb cmp xor push imul xchg scas or std pop js xor cmp jbe adc mov inc sub xor sti cmp je push loope sub dec jae int sbb and rcrb and sub or subl popl fnstcw jnp sbb mov xor lock iret mov scas add xor cwtl shlb mov std mov cmp jbe mov sbb xor enter xor sub jae in jp xor iret push jbe add sbb cvtpi2ps pop cli add jle call clc dec in call dec call mov and lods push sbb mov sub inc dec inc push adc pop xchg decb inc push inc inc inc jmp stc pop push pop jae mov shl or clc add movsl rcl jae cld mov sti (bad) clc push mov loop adc dec or add mov das incb mov call je adc cmp inc xor lea stos add mov loopne shlb lock or adc pop mov js dec lock movsl cmp pop pop push repz cmp xchg ljmp loop jle,pn movb ss and ret ss adc mov adc sbb idivb pop or push inc dec jae jbe or cld push and sarb and pushl mov adc mov mov and pushl inc cmp (bad) sbb mov dec lock inc jg mov pop fs and push sti rolb ret inc push ret pop xor push cmp sub leave push lea pop call pop xchg mul seto neg scas push cmp add addl mov mov pop or bound sbb and mov fild in and dec sbb sub xor insl roll jbe push cld push or push int3 mov jmp ljmp int3 and sbb outsb xchg mov and add jbe (bad) incl mov add push xor pop or mov dec sbb pop loopne or daa pushl insl insl call push push in ljmp fs pop jno mov jge or xchg (bad) in inc and mov xor fisttpl jnp sub sub add or or inc cltd mov unpckhps movsb pop push mov pop loopne aaa ret dec and push jle ficomp adc mov ret cmp or mov mov cli jmp cmp dec push stc mov cmpb sti fildll push cmp je cmp jb lea in mov and and cmp js inc adc push jle (bad) sbb fcmovu dec cmp (bad) aaa push ret andl lea iret mov scas rclb sub sbbb or mov sub mov push sahf mov loopne cmp and cmp cmpsb jns and push aaa jl sbb (bad) xor sbb cmpsl mov sbb stc and cld mov (bad) jne mov cmpb fbstp pop mov cli cmp mov push push sub cmpb mov je mov pushf jbe jo icebp cmc (bad) push jns inc mov pop cmp mov push lock jle rol adc cmp mov ret push sbb adc mov ret cli repnz dec jl fs jl xlat xor jl lea ret jnp mov jne mov shr cmp jne shr push push xchg inc inc fidivr into sahf nop mov rol or sub insb push or mov lret iret divl jle mov insl shll dec inc add ror or rorb nop and (bad) ds adc cmpsl dec push dec or clc add push mov movl dec inc in scas xchg in addl jg sbb (bad) repz fdivrp movzbl mov or fildl adc fdivr addr16 mov and add mov stos fsubrp jge faddl or cmp cli jle fistpll hlt jge insb lods loope jmp arpl mov mov pop in push insb and aas pop andl push into add mov push pusha dec dec jle push push pop cmp adc in (bad) (bad) jae out add (bad) mov jle fildl pop clc ficomp fnstcw jns add les xlat sarb (bad) push lret aam lock pusha outsl nop cmpl xor push pop push pop idivb sahf ljmp (bad) push push push lock cmp aam fsubrl dec pop data16 shrb loopne cwtl fwait mov enter and rcr dec pop fdivl sbb adc (bad) lock in pop jl push fsubrs xor inc cmpl (bad) push (bad) fildl inc adc or stc add aaa aad cmpsb loope inc inc sbb enter cmpsb mov call les add lcall loopne mov push outsb xor or js mov mov jg jbe subl mov cli mov ljmp (bad) dec divb push add add dec jne pusha or pusha jo test cmp xchg adc in add orl jge dec or mov push and insb add sub push sbb scas push jbe stc and adc sub enter adc dec stos jl,pn dec sbb mov dec sub adc fmull fwait sub adc push fidivl push push xlat jle adc mov mov mov add cmp (bad) sub push xor cmp addr16 (bad) push xor jmp mov lret add stos jo pop mov or jb and in scas mov or pop push test ss mov mov mov add lock les add (bad) ret in pop loopne in movsl push mov or sti mov sub push push add mov out hlt (bad) aas test xor jl push aaa cltd add loope or mov pop inc or sub jle lods mov or rorb int3 pop sbb movsb pop out or mov mov mov icebp cmp mov int3 iret loope lods loop jo xchg or or lods add dec cwtl outsb js orl or outsb sbb popa sarb in rcrb push imul prefetcht1 xor push xor cmp jne mov jg mov cmp sbb add je mov pop inc pop ja out xor fimull adc and ret imul add xchg cltd arpl sbb sub dec mov mov lock shrb leave outsl sbb mov or mov push sti fldt push es add sbb add push sub or add inc inc or jbe hlt mov pop sbb or setle or nop mov mov adc test push sahf hlt loope dec icebp nop or repz clc and mov xor mov add dec cwtl adc jmp push cmp lcall xor inc or or xchg incb sub jmp cmp jne (bad) jne divb jae push jmp inc jae les mov fidivr push pop out inc cmpb imul inc pusha xor pop cmp out dec or adc xor add sbb push arpl (bad) adcl xor adc daa jp dec hlt and out insb mov test or mov adc mov or add mov test lds faddl (bad) push sub xchg push sbb inc nop xchg and fmuls xchg in js ss mov cmp jne loope sbb je or mov mov pop ret add movb xor popa inc sub dec cwtl mov or or jmp sub fiadd add add out jg fimul cmp jb push inc movl inc sub roll cmp es mov pop sbbl or mov dec or or stos or sbb movsb pop cmpsb add repz inc ja cmp dec dec aaa repnz outsl jl fwait and cmp mov push push jne jno adc fildl mov imul dec add jne inc lea dec jo sub push pop dec cmpsb popf not and je stc call pop std je inc sbbl add shrb testb add addr16 dec add jb adc add into adc inc push std decb pop std xchg or push sbb adc xchg cmp gs jle adc push lcall push jb das std adc adc adc and adc sub mov and pop lods cli or data16 mov jmp clc je mov lea lea repz int3 in jmp xor pop adc push push add testb aaa lods pop orl jns jns fildll mov add mov decl les cmp xor mov sbb mov fsubr push xor push mov and mov xor jmp neg sbb push and push mov push xchg fdivl notb jge dec add push cmp es ss call clc push jecxz mov lods sub setne mov aas dec lea adc leave push inc pop sbb mov sbbl pop add je and sbb xchg stos cli jle push sbb out push lret in lods add sbb jno push mov push push or out push sbb data16 or cmpsl sbb pop jns ficompl rorb int dec lods call sbb hlt subl jg fidivl xor ds pop into adc or ljmpw cmp sti je push les dec adc and adc test les je push or mull jae es jmp push test bound cmp cmp xchg cmp pop push sub dec cmp jle mov je push and lahf jnp push mov adc mov inc xor dec dec sbb inc adc (bad) pop imulb negl ficomp push mov jge lret push xor sub jg adc push mov mov sbb aad xor sub repnz aas or pusha lret and xor adc and jbe mov shlb add dec push sub call adc xor ret loope pop insb sub xchg and out jo cmp or cmp sbb push aam stos mov repnz xor (bad) jnp pop jge adc inc cmp push cmpsl adc outsl shr sbb pop ret jmp mov rep movsw movsb mov push daa sarl cmpsb cwtl cmp sbb add xor aaa add adc add cmp fs pop int3 add jl pop sbbl lods js add sub clc ss outsb call cmp push in sbb pusha mov push pop cmp push rorb inc add pop push add push push mov mov jne push lds mov lods dec repnz push cmp hlt pop sub dec sub or andl sbb es jo insb xor fsubrl dec mov scas lods push dec cwtl fidivr mov (bad) clc testl sub cmovle sbb pop ret cmp lea cld push pop xchg lock (bad) mov bound cmpsl out rol repz pop into push sbb xchg push push pop pop jae fdivrl popf out je mov dec push cmpsb jmp or nopl les or fadd sub cmp je adc push sub outsb shrb xchg shrl nop insb mov or outsb cmp test jo mov sbb ret cmp inc push push cltd cs jb std cmp or sbb imul insb xor pop push loope ficoml adc inc sbb inc subl push pop dec das push loopne sbb test les inc addb xor cmp cwtl and inc dec imul arpl neg sbb push jne outsl mov jno ja add jmp test jl vpmuludq enter mov xor cmc mov test cmp enter mov aaa test xchg dec xor adc cmp mov addr16 nop sub iret negl mov pusha test or add dec jne lock jl push imul cmpl movsl mov push jo xchg jb icebp cmc mov enter and jb jmp xor fcomps arpl add dec mov bound push mulb pop push pop jmp sbb inc pushl push mov or rclb rdtsc popf cld and loopne jg pop xchg or cltd add cmp jl (bad) fbld add inc sar mov repz div pop lea ret outsb add or push pop add push mov add es mov call mov mov data16 mov (bad) in test jmp mov test adc and aaa push adc mov xor scas adc inc xchg fdivrp jmp mov ret stc adc push pop idiv mov mov or adc mov mov push or pop movlps pushf xor loopne sbb dec lea push mov ss (bad) jo xor pop inc lock xor push aam scas je pop mov fldt movsb lea rep push out push clc gs or stos lea inc add push fcoms mov out inc push adc outsl xchg (bad) push dec adc push lea jnp popf add add mov and and out icebp out xor and xchg lods adc jb add ret mov and adc and mov jbe jo lock popa mov les in cmpsb jb cmovl push popf cmp movsb daa nop xor jne (bad) shr mov scas ror or imul add jnp jmp movb cld sbb fsubs je sbb ret pop jo,pn inc and or sbb pushl adc cmp pop sbb add pop sbb repnz in sbb or jbe xchg call cmpsl push pop push or fsubl push cmpl xchg sbb pop movsb loope in cld fs push cld scas shlb je inc je,pt mov sbb or pop inc dec xor ret sarb adc bound add mov and je ja std and jb add clc (bad) nop mov inc add cmp add cmp xchg rorl and out push sbb (bad) decl push lea mov jle int3 dec xorb inc in sbb faddl mov inc sbb or (bad) je inc in mov lahf test push jbe sar xor fbstp arpl jl faddl neg dec lea js xchg dec movl int into sub pop bound test and xchg sub push mov xor or (bad) ljmp push adc out ja and mov add mov popf testb jb ret stos push idivl lods push outsb fucomp lock cmpsl mov jne mov or daa fidivl push cmp inc insb rclb add je orl cmpsb imul or push call pushw sbb adc mov sbb xor push rcrl stc sar nop jne or insl add xor add jo xor (bad) mov and loope lahf test mov sub inc sti lock mov adc adc fist jne das jmp jle push fisub jl or inc inc ss push pop and fcoms loope aam imul insl subl push xor xor lcall (bad) mov loope int3 sub mov aaa adc dec cmp pop repnz inc in dec add call loopne add sub inc lahf dec bound mov xor xchg and xchg in movl test xchg fisttpll mov clc or lea fsub cmp je imul jg and mov add and lods mov daa add rolb hlt cmp addr16 mov push or lea add cld sub leave idiv mov test jnp iret adc in mov std addl jg fimull test or xchg fcomp jmp adc out sub and pop cld and popa mov push loope sub popa (bad) dec sub jns cmpsl mov clc orl cmp cmpl pusha sub in xchg jmp push js subb or cmp shr mov cmp js out and or or popf jnp (bad) cltd jae sub mov inc and push cs add xor repnz call and cmc jne fcomps imul rcrl rclb aam loopne inc das cwtl add and sub lods (bad) addr16 mov imul or out rorl movb call or shr cmpl mov cmp lock call mov xchg push test mov and or stos jl mov mov arpl lea les mov lods sti or push addb push xchg mov loope adc daa (bad) mov push sub sbb and jmp or lret inc lock test cmp inc (bad) jbe adc cmp xchg (bad) cmp jo and jo mov jmp or insb insb jp ja mov (bad) xor idivb sbb pop js mov in and fstl xchg int3 sbb cmp shlb lods mov adc sbb push dec jecxz mov ret stos mov lods add (bad) inc cli sub add insl push test rorb sbb clc fistpl mov outsl sbb jl js push mov pusha mov imul add fdivr (bad) ljmp add scas push sahf jne jo push dec lahf mov pop cmpb repz imul pusha add cmp fwait jo clc push repnz data16 aaa ds ljmp jb mov xor push pop push cmp inc cld adc jmp je (bad) aaa push insb mov int3 cmp hlt daa cld aaa inc push fiadd jbe ljmp fadds fsubrs data16 mov mov or pop dec jge jmp inc imul into xchg jbe push insb aam or jmp scas icebp (bad) xor fs adc push mov or into jbe cmp loopne mov mov ds cmp jb push ss inc jae mov jb lea rorb fdivl push mov adc cvtpi2ps xchg lea dec (bad) xor fdivrp mov pop sbbb fiaddl add (bad) mov mov js sub xlat popa lock daa insb and xorl dec jg bound jo or into mov in and loopne lods sub sbb movsl int fwait into stos sbb movsl sbb pmaxub push mov xchg movsl sub jmp movsb cli inc mov jle das xor and out mov sbb add dec fisttp lock push dec or test pusha push mov pop pop push cmp or dec sbb out pop rclb cld cmp call mov push xor sarl jno lock sbb xlat repz clc push jno (bad) cwtl loop pop mov or sub addr16 add dec sub out mov push test fstps sbb pop lcall sbb sbb lods aas add int3 ret adcb and (bad) dec add or sti mov insb daa push test fistpll sbb mov or pop or arpl lret (bad) sti sub or xor add xchg aas cltd fs pop adc rcll dec jb xor add add dec insl mov test loopne adcb jecxz cmpsl clc mov add xorb test jg mov inc test jne jae push or pop add sahf jge mov (bad) jle push push and jo jbe shlb shl mov sub (bad) sbb add les subb imul push fstps or ds daa xor lcall adc pop push js push jle ja pop adc mov lea outsl dec js andl cs (bad) lcall lods es cmpl icebp out push into fwait mov cmp jl cltd test mov push mov mov add cmpl jb sub push add loopne inc (bad) repz std addb iret or add ss add sldt or int3 (bad) xchg fmuls test dec (bad) lea mov fwait jmp push test loope test xor and sub jae mov ljmp dec mov lods push mov cmp in (bad) pop or adc push je (bad) pop pop inc dec sti aam add lret pushf int3 es jecxz or sbb out test sub pop pop adc add or jb sub aaa or je (bad) (bad) pop pop test add mov loope mov std (bad) push (bad) cmp jae mov cmp inc inc cmp mov inc es add jo sub adc lods aas mov outsb or mov iret and (bad) add push pop pop (bad) lods or shrb sub cmp fndisi(8087 in hlt xchg add push adcl call xor push inc into add fsubr add lock inc xchg or icebp push rorl pop movb lea pop cs shlb lods aaa fsubs add push push fcoms sub and jle sub inc lret sbb push pusha sub out inc addb mov inc out adc enter in mov adc dec in adc or add outsb jl out lret push bound add stc (bad) icebp push push jle mov push push in add (bad) sti addr16 lcall sbb cmp sub mov hlt dec cmp sub loope sbb loope and ret je aam fldt pop sub fldt push negb jo aas push aam or aas mov mov mov test push js (bad) jg fldl xor mov push lock fadds int and iret mov ret push jl and jb push xor test arpl pop or jno sbb sbb sti push mov xor push call pop sbb and into in jo in mov nop push inc pop and pop mov cwtl push pop movsb xchg paddsb cmpsl xor push in stos rolb cmp push cli ds dec lea mov pop sbb pop icebp cmp push addr16 sti lock jae pushf xor cmp pusha test subl jb or fs iret lret inc pop pop add outsl enter add nop mov jb or jo xchg adc add push jbe js jns mov sbb xchg pop dec popa and or push mov inc roll and (bad) lock jae cmp sbb out imul sub or adc outsb pop push and sbb call cmp (bad) adc movsb sti out hlt or jmp cmp or mov add pushf mov inc inc push in and mov push add xchg cmpsl imul xor pusha jle insb pop pop lret mov into lea mov and sbb pop xchg xchg jl sub pop sbb mov js ja mov mov inc cmp outsb lea adc jnp aas jp test or fcomps xor loope out sbb mov adc mov push add cmp fidiv enter lret and push ret in mov jb or dec adc or add in add xchg push xor inc mov inc loopne adc lea sub push orb sbb rcrb xchg push (bad) xchg adc cmp mov xchg das or test add jno and mov mov jns rcl daa outsl int sbb sub dec adc mov mov push inc jbe out push push xchg loop add movsb into pop ss rorb dec je dec or dec imul mov pop test ss dec mov mov add cmp xchg ss daa mov mov sub and sub adc and mov mov push mov add dec jecxz dec js sub push popa cwtl aas cmp pusha cmp cmp (bad) sbb vcmpsd call loopne cmp (bad) in mov jno movb adc mov push je repz hlt jl adc and fdivrl sbb xor icebp xor inc cltd pop orb rolb sbb mov adc push pop into push scas sbb sbb add sbb aaa and mov (bad) jmp pop in pop call push inc pop int add mov fcmovbe xchg ret aas cs stc xor hlt adc jge insl xor sub xor or cmp fsubl sbb xchg and mov push stos adc imul cmp jb ja dec lret dec ds pushf push adcl and push xorl mov xor dec push pop add jl cmp jno cmp into nop mov loopne iret mov add dec mov adc mov ret lea adc and dec pop stos jmp mov and out cli insl fimull loopne lds movups pushf cmp mov lods jnp int3 or jmp loope adc or dec sub push mov mov pop add call pop inc lcall hlt in mov or fiadd dec addr16 call jne push out (bad) jnp out push push inc xchg push mov mov xor or add dec inc lods cmc push dec xor mov push testl pushf push bound cmp mov pop push push ja or sub jmp je (bad) iret aad cmpl je ret pop lock in js pop dec mov mov inc stos rolb push in mov mov adc daa xchg adc dec repnz sti cmp les and push pop xor push and out sbb movb mov xlat mov mov xlat test fidivr popf cmp xchg out (bad) pop xchg cmp xor div dec mov jne aas xor test sbb gs pop inc test mov das (bad) insb cmp jle incb jge mov lsl add test jmp or xor jge inc xchg jae xor jnp cmp cvtps2pi mov adc mov adc push in xchg test dec push sbb hlt mov or and adc lods adc push jbe lea cld scas pop clc jg je xor mov adc lods xchg sti mov enter xchg adcl (bad) push inc xchg adc addl mov test jno test mov and dec lock mov addl push push scas xlat xor test scas (bad) pop and adc push (bad) jae imul imul hlt gs push (bad) xor push out or jo mov enter clc out or popf loope push mov loopne divb ss adc dec stos mov xchg dec (bad) fsubs outsl lea and jecxz mov xor push roll inc frstor adc add orl icebp push fiaddl adc sarb hlt adc push adc adc push rcl adc adc stc ljmp ljmp cs cli sbb pop mov das fbld add jbe push sub jl add jo xchg adc push (bad) notl outsb and mov rcr mov push inc xchg mov test push pavgw mov mov imul cmpsl inc push rep fwait (bad) sub pusha mov cli stos scas gs icebp nop xchg add push dec pop mov aad jno subl stos lret sbb stos notl fmuls adc adc addb sub neg pop cmp rclb mov add out add cmp inc sub pushl sbb pop loop inc jb fstpl sbb and pop ds add movsb adc sarl loopne adc pop add sbb mov cld out imul dec test sbb add add xor out pusha hlt and or jle pop cld xchg push lea xor jg incl lea lea mov mov ljmpw cmp jl sbb cmpl jg mov jg in outsb insl imul sub mov dec dec mov sbb std mov std jg pop pop js push lahf cmpb data16 (bad) xchg mov repnz push mov mov pop xchg inc jno inc add ret mov gs pop xor mov inc lock movsl shlb push jl jecxz cmp je mov and ja add jne jb jle or sub je fdivrl out inc decl jne sbb push sub add jmp cmp inc and jp adc ds pop mov pop (bad) fnstsw jge add cs (bad) std lds push cmp jge psrad xor fadds push addr16 inc rolb mov sbb fmuls jo aas loopne xchg jle inc mov pop je pop aam pushf lret pop ret pop push adc push push js sbb hlt loope sub test add stc pushl jge aaa aam push in jb inc or and xchg mov lea or ljmp fist push push jns xchg mov roll sti pop addb xor adc inc popf clc jb push mov dec or cmp test mov pop ss dec mov (bad) aaa add and cmpsb xor test paddd adc or and ja mov lds ret lods cmovb mov mov push cmp jne (bad) (bad) add sub adc aad movl add push push call adc add xor mov push hlt add stc push mov pop (bad) push nop in in pusha stos push in sub mov insb and clc or (bad) dec clc jmp mov outsl fild shr mov out ljmp sti setbe lea jbe mov dec push push lea sub sub dec insb mov mov sbb roll dec in add jb inc and ficoml ret mov fs mov mov (bad) push push push and xor push cmp pop jp mov hlt rcl lods in (bad) cmp cmp mov mov into orl push test xchg insb clc cmp movb mov push cli pop push sub mov sbb das lret jae loop mov mov mov fs lret sbb neg pop lea shrl lods dec data16 xor fbstp inc push and dec pop sbb outsb enter inc and cmpsl ficom sbb or cwtl ss or xor clc in push sti xchg sub cmp jne sbb or mov sti pop dec dec push dec xchg mov adc (bad) mov (bad) jae imul cmpsl push push adc or jbe pop cmp fsubrs xor adc push pop mov push pop xor out scas rcrl push add sarl test sub inc jle cmpxchg sub dec push dec sbb int3 aas cmp xor xlat dec adc fnstcw out scas pop bound add cmp jbe daa pop ret cmovl push sub cwtl xchg push or mov xchg lcall xchg sbb and lock push pop mov xchg or or push push inc or mov cmp mov mov sbb xor roll jle sti ss pop pop lock rorl mov fstpt xchg jg ja aas int3 test int3 jb mov (bad) xor es push xor mov mov xor adc imul add nop pushf add repnz js jl pushf push push jmp hlt or add jl add jmp shrb jne jb ss es pushf inc lret add shr mov cmp mov mov in inc int3 push mov inc mov cli pop (bad) aaa sahf and add inc mov incb and (bad) inc and mov shl imul or ret ss ss rorb add aas mov adc ret jne ss dec push sbb pop push add adcl ret sub sbb call mov inc mov mov stos mov jp jo mov cmpsb inc sbb push adc ljmp add jno cmp and or cmp (bad) and pop pop jg or adc push inc lock ret icebp dec lock enter pop in or loopne add nopl ljmp or inc icebp lret inc add test aas mov cld mov lds inc or lea inc jge dec sub inc jbe dec jecxz sub and cmp (bad) inc sub push (bad) cwtl sub add push ss or stc shr push cmp and inc xor mov adc call jecxz or push xor or and aad test inc or pop or and xchg inc push ds or leave repnz in add add and movl pop or lds in push js clc add bound inc push adc cmp mov test cmp push or sysret leave inc ret (bad) sti rorl rorl push ret test lret push add or mov in or aad add in mov or push add jg je and add lret imull sbb mov rol (bad) adc lahf hlt idiv in ret push fstpt push loope pop jp add popf push pop push test jne or dec adc jne sub mov push notl pusha or pop cmp test roll popa nop les or adcl fbstp add jae cmp les xor cmp jp cmp pop pop adc xchg sub inc movsl int3 icebp dec add jae nop jae add ret push push push xchg aam xor loopne stos loope adc js nop push xchg ffreep sbb imul mov mov cmp and out sbb add in add or push inc and mov mov orb dec dec pop or add sub and out cltd xchg cmp shll and mov xor imul inc das aas test push aaa pusha pop mov adc mov les (bad) (bad) loop (bad) ss aas mov dec lods aas roll in jge bnd out test mov or or scas pop stc mov push test inc push dec out pusha inc nop mov sbb push sbb and test push sti adc (bad) pop push lock jns test xor push or ret andl or or or sarl cmp cmove inc lds loop movsb repnz push mov xor mov or or sub lea xor mov int3 add sbb xor push mov fidivr sbb jge or jge cmp and push les mov in dec adc shll je sub add cmp sbb sbb ret lahf push adc mov popf loope push cld pop mov jg cmpl add ficoml jle vunpcklps lock js popf je (bad) cmp adc movsl test dec dec pop pop mov mov stc movl cmp xchg aaa addl mov sarb adc test imul xchg push adcb pusha sbb mov jnp sahf add es push xor cltd push push and inc or dec dec (bad) xchg push mov ret push lret rclb loop jl inc ja xchg pop aaa mov enter or data16 cmp js rcll adc or hlt mov add push ret lahf jge jne stc lcall mov loope iret test cmp and sbb sub push dec mov push cld xchg popa adc mov xor push adc cs xor outsb les pop sbb inc xor sub nop push pop add call xchg fs sbb mov mov shr (bad) cmp pop add adc or adc clc sbb xor sbbb push ss or add sbb insl mov sub insl aaa push mov icebp mov push mov bound nop sbb jle cmp pop js leave aam cmp or mov or pushf ja mov inc sub ret stos int (bad) pusha or cmp mov hlt adc sbb cmpsl or xor mov repnz inc scas pusha adc lcall cmp dec adcb (bad) lock (bad) std sub add or fmuls push mov mov mov pop ret xor cmc or shlb sti jecxz or add mov push lahf mov xchg shl sahf roll mov dec and xor add loopne shrb jle inc mov jle jge sbb dec mov out and sahf inc push cmp add or lea neg and mov pop jbe loopne lea pop lret movsb pop jle and jg icebp mov or add xor stos pushaw cwtl sbb mov lea jecxz mov fistp mov ret sub cmp aas aam push push add add lods dec sbb test push jne inc sahf adc dec (bad) jae adc dec jne mov sbb je pusha bound dec sub lds lock or mov push roll dec popf push es add scas gs dec push add cld and jge pop inc lea adc pop icebp cmp pop mov xorl jp sub call pop pop add sti dec rclb andl inc or orl sbb loope pop or push and repz add hlt jle faddl jne inc push stos dec loopne lahf std push fs jge (bad) mov push lea cmp inc fisttpll or movsb lds pop pop push add or jne xor add pop sbb sbb lcall sbb nop/reserved jae notl sub mov sti add sub push sbb xabort (bad) jo std adc and pop cmc cmc lcall shrb rorb mov dec mov test jle inc cld mov cld jo (bad) cmp jne inc insl sti outsl cld fs fwait mov jmp add sbb test add push shrl xchg xor addb fildll dec push push add push mov pop bound push jle (bad) jg pop add mov push and cmp jle mov pop mov add or (bad) sti aam push or mov sti push pop xchg mov add aaa addl xchg les inc xchg shr addr16 add mov ret xchg out xchg cmova sbb decl add rclb add mov mov dec mov mov mov or pop jb sbb fs out loope push or mov jl ds ror mov lret cmp jne test jo outsb and (bad) mov jle sub popf xor sub mov cmp jne aad add ljmp and mov ret jge into ret mov adc push adc cmp jno sub and rol adc bound cmpsl jl repz pop loop push inc adc ljmp add add add cmp clc mov inc fwait and mov adc je mov shr aaa cmp jp pop xor cmp jge lods adc mov fiadd psrlq jl mov in mov and js sub stos inc (bad) mov ja pop jno lock aas adc and pop mov jmp jo cmp dec sub getsec out andl sub push jge or ja lea push add sbb push push sbb movsl rcll inc add sub push add rcr sub dec (bad) add add push sbb loop mov mov js xor cwtl pusha mov pusha movsl repz and add push notb push (bad) mov inc in adc push mov aas inc dec and adc js pop pop insb inc clc and mov fbstp or lds or jnp fisttpl jle push mov mov rclb adc ret cwtl push mov xchg out clc aam and clc and pushf add add mov in mov push lret adc and mov push adc jle dec in pop int3 push cltd push push adc pop int3 (bad) adc sarl dec leave sbb add cmp add push das rcll (bad) dec pop mov mov (bad) mov aas pop jle and clc jo push pop inc out adc loope xor xor ds add xor icebp stos jmp mov shll push and lods sbb (bad) aam outsl pop push sbb sub inc in dec jne push inc clc rcrb cmp inc push jle and xchg pop into sub sbb jp add push sbb les xchg xchg ret jg inc add xchg mov sub push dec iret outsb xlat call add and dec ret inc inc out mov fwait mov adc add stc or xchg xchg or xchg xchg pop jb addl loopne testl xor (bad) sbb cmpsl addl add js lea mov into adc and cmp fnop xor jge add jo ret lea fsubs add sub push pop cli hlt movl or or and sbb inc in adc cwtl cmp adc sbb lret adc cwtl push ret adc jne rclb dec push mov jne and xchg push adc inc mov jbe jno aas and ret push jo (bad) insl lea or sub test sbb stc hlt aas (bad) jg cmp jne aaa push pop call add stc dec push push and adc push or push dec mov xorl inc movsb add and pop push lods sbb cmp push fidiv xchg rclb enter adc inc xor push andl icebp ljmp neg sbb sar and loope add mov and data16 lea test jae sbb add test shll cs sti movl or pop adc fistpl inc test jbe je jle into sarl pop cmp and pop nop pop mov ss pop jle jae push inc in xchg or add sbb stos clc test cmpl adc rcrb pop mov mov sub dec sub test jne mov inc inc sarl pop aam ret sub lcall (bad) inc sbb cmp jl imul xchg sbb mov (bad) mov clc shll cmc pop push ds or adc jo xchg add ljmp or push test adc xor (bad) xchg adc mov or pop (bad) jbe push push or cmp xor test sub xor xor aaa xor lods inc push sbb pop sbb in and rorb icebp add sbb xor mov jge jb das hlt mov outsb mov mov cmp je xchg dec outsb repnz movsl (bad) sbb insl sub fistl inc lock enter push inc (bad) dec adc xchg or add mov pusha push or and push jge sub das sbb lods inc mov push push add push (bad) les add les mov dec cld out mov xchg dec (bad) jecxz mov add add mov cmpl dec sbb sbb adc mov pop sar outsb pop pop shrl (bad) sbb jbe or xor push mov push loop xchg push cmp in out xlat add cld and dec dec lea fisttpl add jo adc cmpsb popf roll xchg leave add fs push movb popaw sbb xor (bad) cmovb test add repz push shlb jae cmp cmp pop leave or pop or roll xchg push sahf or push movsl ret and pop xchg (bad) add and int3 enter or jmp lret out dec mov repz (bad) or cli add adc clc cmp (bad) push or cmp adc fist pop push enter and jl in clc stos push cmp jbe sub scas or inc cli push push inc adcl sub or or inc or clc mov mov ret inc sub (bad) cmc pushf xor daa adc mov mov mov xor sub decl pop jle add cmp in (bad) stos addl jge push xchg mov sbb addl popa pop mov mov sbb xchg xchg mov adc add shrb xor xor and outsb dec or add sub xchg xchg lock jo dec cmp cli add or push pop cmpl push push popa sbb sub add and jbe lods (bad) fistl or xchg mov sbb pop jmp add adc mov rorl sbb sar icebp addl lahf mov js xchg mov orb fiadd xorl inc pop jo repnz scas or pop push and lea push push scas movsl js or mov push sub jge das or and add cmc inc shr jne popf push adc (bad) mov lret adc rclb adc mov loopne in pop sahf push jo sbb lea push xlat jg nop inc imul cli movsb sbb xlat in scas push or push push gs pop push ds lods inc imul cld add inc add cmc cmp mov or or jge or push or and leave and sub push pop push sbb cmp pop adc add jo mov adc pusha dec call adc mov in push cmp and dec or inc push inc push or mov in inc pop adc test imul pop mov popf or xlat mov xlat sbb mov mov test add xchg daa sub flds xor (bad) je shlb add rolb xorl dec add pop or mov lds or sub or or sub inc aam icebp test pop push sbb rolb add mov test adc loop les in xchg push or push xor lahf pop lock pushf adc adc sbb add adc lcall lea pop mov pop dec xchg rorl xchg mov andl stos push add push mov (bad) dec sbb dec or and pushf or stc push push and (bad) sar xchg mov movb xor or dec in adc cmp xor or inc les cmp dec sbb sbb add adc (bad) pop nop enter mov cmc cmp gs inc ljmp push xchg incb push mov dec push push fldl sbb stc add push inc inc ret mov iret addps cli shl mov dec nop inc push jp fildll push pop cli add push push hlt adc or push cmp das notl gs rolb lea repnz xchg dec ret rcll sbb adc adc adc mov test xor adc pop and jne (bad) and jne mov add js sbb dec xor jns dec enter pop mov jge adc pop incb scas mov clc clc in push loopne sbb sbb sbb fwait es scas sbb sbb in and push movsl fs push xchg sub cld inc mov push push push std iret pop out push and movsl cmp mov xor and aam rcrb test pop adc push mov mov jl sub push push xchg nopl sbb pusha and and inc pop xchg push and or bound cmp push loop or and and pop loopne popa add add lods adcb sub inc sbb mov cmp jmp std jae inc fisttp add sbb pop mov cwtl mov add mov dec dec mov sbb or mov sub out mov jmp std out into jge bound orl popf xor or out and pop pop popf movsb jae andl sbb sub adc and and fs xor sbb sbb and mov lods xchg fcmovu mov aam sahf mov xchg add scas test inc in cmp aaa mov push or loope pop hlt (bad) push leave or jg mov mov push aaa movsb dec add or dec inc cmp lea push jb adc push jno mov mov test push push push js movsb xchg into or inc mov xchg push jo jns test inc mov adc push push inc nop add add push push add int3 jl mov cmpsb mov cmp push lret and aaa sbb aam icebp aaa mov jbe scas add les push push rorl test ret cmp (bad) dec sub pop push mov and jmp jl mov je push adc adc cmp lcall jne sbb lds stos mov test orb insl inc mov and aam push adc or inc pop xor mov pop and or add or sbb push push adc or sbb andnps cmpl rorb cmpsb adc scas adc sbb push subps or por push or fs sbb (bad) mov mov sub and popf iret dec fisttpll add in pop mov dec jns or fcompl mov mov or sub call rolb call mov decl shlb ret mov sub adc fwait xor dec inc xchg enter lahf add fildll test lea inc inc mov push outsb xor inc stc xchg add mov pop sbb test dec dec inc sub adcb mov faddl je mov mov aam sbb aas xor test call adc dec test add (bad) lret nop mov cmpsl cs mov call or sbb push jmp lock jmp or pushf or ffreep cmovne movq (bad) inc loopne out mov push sub (bad) mov mov lock adc adc mov and les mov addr16 das mov push (bad) sti xchg sub or or jge add mov mov cmp mov (bad) xor leave mov mov mov test call pop in jl dec loopne push sub push in pop jge sub daa push xor data16 rolb cmp jl lea xor lahf rorl pop mov mov xchg mov imul arpl or andl sub or ja sbb or sti repnz (bad) cmp jns or cmc cmpsb int sub in jo dec in mov add pop mov mov out mov sub nop loope repnz in adc ljmp ja cwtl cmp das call lea add outsb adc xor mov push js decb sub sub cld sbb testb and push or sbb dec pushf or jmp movsl insb and sbb xchg dec loopne fistp adc mov mov push push push push push rclb inc xor lret pop fiadd test adc pusha xor (bad) xor add add nop add aam popf cmp push fimull stc adc push stos mov fwait dec pop add pop dec mov push xor push sbb add daa jo mov or jmp cs aas mov mov jg sub test xchg js push push adc sbb int3 ljmp and push or sub stos lock aam pushf (bad) pop mov sbb push popa adc dec sbb ja movsl add lahf (bad) jmp movsl cmp test ljmp jecxz inc sbb js stos pushl inc push loop pop and add icebp xchg sbb xor or clc mov adc in xchg adc sbb mov xlat iret add test jmp and jo add add fmul xchg jno (bad) rep or sbb xor ljmp inc cwtl push add dec (bad) imul mov add sbb es and jae mov jb mov pop pusha xchg jno dec adc cmp icebp xorl add aad jle or add rolb push pop mov test pop fistpll cmp call add lock loopne push cmc rorl xchg inc xchg aas pop add je loope sbb add (bad) adc sbb lea aam sbb mov es or leave and and aam and cmp or mov adcl pop jo sbb ss and xchg (bad) jo adc push push push (bad) adc push repnz pop cmc out push in xor jg movsb sub sub lds movsb in pusha in xchg sub mov ss aad add sub and sbb fcoms aam add popl (bad) xlat lret dec pop or jne aas pop test inc cmpl push arpl jne pop pop sub and and pop pop push arpl dec adc ss inc jo inc jne sti or incb stos dec add jle lea mov cmp ret shrl mov pop jbe movsb addr16 jne adc pop inc inc movsl inc sub mov (bad) xchg cmp mov sub pushf adc insl enter fsubrl add sub out (bad) jge in cmp cmc call or or mov movsb aaa add dec aaa cmp or mov xchg les cmp mov or jno scas push or mov cmp or cwtl cwtl or mov adc pop mov subl les nop pop and test enter neg adc je push insb lret movsb inc flds dec js std (bad) fisubr inc inc std pop test mov jnp lods jl lock sbb out and inc nop int3 xchg loopne (bad) scas jecxz inc ret mov pop negb subb mov pop call or add add les js add stos sahf jnp repz out add (bad) xchg test cmpsl out cmp stos xor jmp lahf ret into sbb push or popa add dec pusha mov and xor add mov js dec add xchg xchg mov enter add je cmpl jne push insb sbbb hlt fwait stos xchg sbb andb inc push mov fs xchg push mov push xchg and mov lods push xchg mov add jl rcr sbb orl sub mov adc pusha test or or mov push push call sub std bound test (bad) mov pop or push pop (bad) push rcrl mov add adc imul sbb sbb cmp add (bad) mov mov call lcall imul xchg sar adc cmp pop insl ret jo or test inc dec push add stc xchg push popf mov or jle add mov pop sbb test (bad) lods aam adcb and pop (bad) mov adc shrb cmp bound inc mov pusha cmp cmp or addl pop add add roll xor in add dec push and popf call or or loopne mov and sub add pusha cld lods roll lock imul leave mov pop jo das pop add rcll cmp jge mov add repz cs popa add or xor add fstl push in dec frstor adc or ss movsl cmp push bound xor insb nop pusha jp call add sbb push and and adc das dec lea mov int3 and lds cmpsb jno addr16 or das mov rclb sti lods fsubl (bad) lods leave bound iret add jle xchg xor in daa nop or jnp in mov stos jne arpl adc mov add or sbb sub pop and (bad) cmpl add inc ficom pop sbb adc ret lds sub fcoml jne subl sub (bad) xchg es loope int push adc push fs pop push test pop into jno xor adc lock push sub and pop and in cwtl xchg xor stos lock gs pushf repnz gs in std xor fadd sub (bad) xchg fwait jae or mov out cmp push js cld mov sbb cmp adc cmp jne adc fwait sbb fisttp jns adc popl mov jb xchg fwait add mov sbb inc movsb jmp mov movl inc xchg adc dec push or cmp mov mov rcll mov push sbb xchg push jl push pusha sti dec pusha pop xlat mov xchg pop xor jmp das jno push sar out xchg sub es dec pop mov push cmp inc push mov aaa outsb sub xor fdiv pusha inc inc cltd inc xor pop sbb pop or aam bound jmp addl imul cmp dec and push push loopne loopne adc (bad) les sub inc loope mov movsl cmp dec es hlt mov or xchg xchg xor cld fld or sbb (bad) in cld or in mov mov fnstenv movsb mov mov popa pop push push decl movsb jno inc sbb jne rolb popf test adc add mov sub jne add or (bad) or cmp cmp push mov adcl add push aas test aas test cmp push lret push xchg testb pushf and or sub and sub inc sbbb rcrb sub bound nop rcrl and js cs add jnp jg ljmp sti inc inc addr16 ss cmp sub xor xchg xor jge,pt mov hlt scas cmp cltd (bad) fsubs into ds jle (bad) jne push clc adc jnp sti pop push or push xchg int3 inc pop xor pushl cmp jne mov cmp mov mov and or sub cmp jne xchg fdivrs movq aas in or inc xor jp dec (bad) adc push adc call push stos or repz mov adc jmp pop mov dec or add cmc sbb lea (bad) jecxz xor add or sbb xchg jnp xor push xchg loopne push adc push inc cmp inc popf add stos adc mov test pop jecxz sbb and scas or sbb dec dec jne push add inc mov mov lahf mov lea push sub jl dec mov cmp jne scas push stos sbb stc push movsb add jg inc inc lods mov sbb lcall adc loope inc sbb jne push push add sbbl push add lret scas dec outsl movsb push sbb mov or ljmp lods pop add add bound adc rcrl pop imul jno stc pop push adc mov xor push adc inc cmp ja mov push and fs lcall add sbb jl,pt push aam and in mov movb cmp (bad) loopne adc aas push push sub cmp pop insb pop sbb inc or push mov mov cltd idiv sub in movsb jle mov xorb and (bad) adc lret ret sub scas add push or pusha jecxz icebp jle mov mov roll bound sti int inc add and mov or add inc or or call in mov test sub sub push lock add mov jo pop (bad) pushf dec in xor (bad) pop leave lcall mov in lret adc jmp pushw add fcmovnb xor mov insl mov sub (bad) fist dec xchg into into fmull insl jnp fisttpll loope pop fnstcw xchg in roll clc pushf ret sub push xchg test inc (bad) push pop lret xor lods fs adc sbb leave cmp dec sbb push inc stos mov hlt fisubr or push mov jle fdiv and sub jg mov or (bad) and outsl ficompl jle clc hlt inc decl jne jmp pop std fisttp icebp aas mov (bad) fsubs cmpb mov je pop jo mov jge lea xor cmp jle lret xchg stc lea cld test ljmp adc into add push adc gs xor shll lahf mov mov cmp or adc adc wrmsr rcrb sub sbb idivb or push lret mov push push sub rol xor jp dec inc inc cmp jl jmp push mov rclb sbb cmp lock iret in les xchg push test std imul sbb cmp jp push sbb mov cmp mov and inc inc cmp pop push add hlt mov mov push cmp pop push pusha popa mov pop pop jg sbb jb insb cwtl addl cmpl push push test or cmpsb lret push lods daa sbb lock add lea adc rorb adc dec pop push jo test data16 xor xchg add ja (bad) adc mov hlt cmp loope inc xchg je fdivl cmp rolb jbe mov sar jbe lods jge xlat pop mov rorb fwait jbe int dec sub sbb rolb inc add repnz shll and mov movups sbb mov or mov adc addl adc and or xlat push xor clc jg pop js clc comiss jbe lea sub mov sbb ret cld fcmovnbe pop push or inc mov sbb inc add mov fadds lahf insl movsb ret dec imul (bad) jge js push stc jp (bad) push jae adc rorl jge inc inc push add (bad) ret roll and (bad) xor stos mov roll hlt (bad) push clc lea cmp push xor add fistp fdivrl (bad) mov jne mov pop jl es icebp push (bad) fldl outsl push stc push pop add push cltd xchg sbbl add mov adc das pusha (bad) mov ret and repz mov orl in fistl sbb xchg inc inc jo shlb push fs int leave mov fimul dec popl add fcomip jb inc jb cli mov lock pop adc lock les push rclb lods jns mov dec nop sbb lea dec adc inc jb fiaddl cltd or pushf push cmpsb jecxz jmp pop jne ja (bad) (bad) adc pop jnp and fcmovnu mov pop lock jmp pushl sbb aaa sbb push or inc or and xor xchg and adc sub jb xchg fs arpl xorl sub leave or xchg add and dec dec sub inc repnz mov (bad) jge,pt aas push jo xchg mov sahf and mov repnz sub inc sub shlb sub inc cmp or ja lcall dec push cld push mov cmp je xor jno cli add lods push jne push mov mov jbe jg outsl and push test jle add cmp cmp jne mov pop mov roll aas pop xchg fistp inc (bad) xchg pushf dec sti inc daa sbb pop push push or jp cmp loopne in nop inc xor mov and rorb rorl rorb mov or pop push push or jmp fs les cmp rcrl xor mov lea lcall or icebp imul or and sbb xor mov adc pop mov lds divl inc and iret enter pop imul jle mov jg inc push clc add test hlt dec push dec or adc push or mov dec mov jmp push orl sub bound sbb sbb imul xor pop gs mov addl lret (bad) mov ret add and jl sub fisttp or jbe mov push (bad) cli xchg add cmc adcl or (bad) je mov test sti or and (bad) inc arpl add pop xchg loopne cmpl je sub jmp and daa or imul cmc mov xorps in shll and or pop inc cmp add shrb inc pop dec call sbb mov lret addl (bad) cmpsb sbb push jecxz pushf mov and int3 aas sub movsb test mov mov jmp ficoml mov xchg sub and and push mov sub cmp es dec call add inc mov adc mov test pop mov inc adc xchg cs add gs divb insb or sbb aam adc mov mov pop dec push adc ds cmp negl jl mov scas and add sub pusha adc pop adc mov fwait xchg adc ljmp xor push mov ja push loopne mov aaa adcb push and pop loopne pop dec xchg dec xor add cmpb popa loopne dec sbb addl inc repz test adc fisub sub sub sbb sbb add push add pop inc xchg pop jne push adc fwait add or pop adcl and cmp add and push clc adc into dec push lea mov lock ret push sub div xchg inc add and daa mov inc and xchg js je jo repnz es jl scas mov test loop js jo das add add jmp xorb pushf jg je add cmp jne lcall jmp and jne jl mov imul popf cmp jbe mov pushw out xor jne xor mov push and push push pop cmc clc movsb xchg imul push cmp out mov mov dec in jbe cmp rcrl clc (bad) jne dec or dec imul pop imul xor je and movd xor dec daa test mov iret or rcr jo aad add mov xchg xchg loope pop add dec cmp jl mov cmp or rorb scas dec inc add xor cmovo loope sub pop jge lahf sbb xlat lret jbe jl fisttp inc subl jns mov jns idivb dec mov aas push fadds pop into mov cli jmp nop fbstp xchg stos (bad) inc pusha mov nop xchg pop sarb inc push ret adc les ret cwtl dec test push mov out ret and jl and pop test jl inc cmp add rolb and mov jge aam jo cmp mov inc lock dec lret mov adc xlat add adc add mov sub or rolb je movsb inc or inc in dec ds loopne lock out add jecxz,pn push mov push lea pop cmp add lock lret inc push xor xor sbb fild movsb mov xchg xor mov pusha jp and push push sbb add mov cld or and inc push bound fstl adc dec adc sub sti stos movsb lock cli dec incl xchg mov rcll pusha das inc loope shrb push call inc adc movsb loopne (bad) in or mov daa dec and xor cmpsb imul xor push mov adc sub iret mov xor mov movl imul add sar and rolb and xchg mov and xor or insb fcmovbe movsb inc sbb adc ds (bad) jae roll (bad) xor rclb test addb push in or cmp and push mov hlt test inc cmp shrb mov icebp sbb xor dec out xor or push pushf cmp push (bad) pusha mov mov push (bad) loope sub xorl push sbbl lahf rcrb lock mov test jne sar adc pop push out lea and les imul movsb (bad) jb mov lods mov out add push and and outsb setl sub ss (bad) mov cmp cmp pop jg cmpsl orl movl pop jge mov inc in mov or inc testl (bad) inc xor outsb push (bad) jle ret mov push or push cmpsb and cmp sub mov hlt push xor and dec xor out xor inc xor dec inc retw sub inc push lcall (bad) fldt jg and and sub sub and jne int mov iret (bad) cmp jb (bad) mov arpl push or (bad) out gs push adc ja and cmpsb arpl adc or in adc xor outsb adc das andb test fldcw or sbb mov ret dec xor add loop out or movb loop mov (bad) movl mov add and js xor lret lea nop rolb xchg data16 clc or or (bad) push jg push cmpl cmove setne dec and pop stos mov push mov dec add pop movsl mov adc mov sbb cmp pop jl add push adc sub ret pop push iret cmpl lea cld jg push cmp jne cmp jne push test pmaddwd cmp jne test add insb je clc in adc pushf std pop pop ret xchg push pop mov push jno and js xchg inc adc (bad) je mov pop lea stos push or rcll inc or cmpsl pop sar xor inc mov pop sub pop jns (bad) sti fisubl add add movl movsl or cmove and adc mov push icebp lods pushf add mov fldenv je adc popa jno sbb call pop push cmc mov adc in cmp shrl mov and sar cmp pop mov arpl ljmp adc push cld or push cs push out sbb add data16 push add outsb mov fsubs jl lea inc or and je adc inc inc in dec sub inc jecxz add shl inc xor (bad) mov addl imul outsb (bad) incb push (bad) mov jbe mov shr push sub cmp pusha cmpl jae xor or rclb dec pop push insl mov (bad) and or sbb inc out shrl fcoml sub cmp cmp je and mov cs or fistp jae mov sub inc sti loope xchg sbb mov sub aaa hlt sub je rep sub jo enter inc cwtl pusha je push inc pop je dec or dec jg lock jg jne test movsl inc (bad) sbb les lds push pop add add fwait addl shr fnstenv rorl push jg or cmp insl daa loopne xchg out rolb pop inc (bad) call xor movups push push mov jle push adc mov clc cwtl add sbb pop pop adc call test repnz test push rcr fwait daa push or or movb ja inc les or loope outsl pop adc or ja xlat and add push mov add add fcomps stos xchg and repz in pop aam push jno dec xlat push loopne dec ret add hlt cmp pop sbb les imul js adc icebp or pop jmp nop subl movsb dec std adc loopne sahf adc lea and push inc fbld push les and mov loopne mov push sbb push call or cmc (bad) sbb pop sbb outsb or adc jge inc jne jg push xor sbb scas adc (bad) sbb in rolb add lahf mov jg xchg stos xchg test in push inc add mov push icebp (bad) dec inc insl fxch add dec sbb adc lock stc lahf add ljmp subl adc lds push sahf mov add aaa mov pop pop jo xorl sub mov inc xchg aad jne sbb mov pop test ljmp inc stos mov lret push sbb add add add push mov and or xor movsl (bad) add adc adc rcrl dec adc push mov sub adc adc add rclb je sub push adc or sbb xchg mov mov andl addl push rorl or push mov cld cmc aam mov lea dec pop hlt pushf or lods or and sub and das addb inc dec sub (bad) push sbb jmp add clc andl xor and ret clc or inc push jge sbb push and add mov or shll sbb scas (bad) daa xchg orl push fisttpll dec stos mov adc sbb mov or ss sub push daa xor inc sub test pushl sub test aam inc mov sbb jge xor push bound mov mov (bad) aaa pushf inc add mov mov pop add add pop sub pop pushf mov add mov dec iret pop sbb push push push mov add ss xchg xor into dec mov pop sub adc push sbb outsl shrl push xor add xchg push adc inc cwtl es jne push icebp test or push mov dec outsb inc or inc rorl out pop add pop pop std push leave add or insl cmp aaa faddl inc push popf mov push mov test inc add lods fdivrs add pop mov dec and inc xor cmp and adc push mov enter push movsl inc fist sub in mov hlt (bad) mov nop cmc lods js dec clc and (bad) jg movsbl xor sub sar jmp pop add sahf xchg (bad) cmp (bad) jbe sbb ret add mov (bad) ja loopne sub jo sub jl push call adc aas mov rolb mov shl add or ljmp rclb add sti dec adc lock mov imul movsl xor dec or jl inc adc divps neg xor sbb (bad) cld ds inc xchg sub inc cld int3 add es inc popf add or sbb insb pusha nop pop jge sbb aam jae pushl pushf fsubp add jmp jmp push push data16 sbb jmp adc xchg (bad) xor mov mov clc and icebp xor inc lock inc or dec pusha push dec push push xchg and adc cmc fildl or fidivrl inc sub and mov mov xchg gs imul add pushf xchg outsb dec sub or cmpsb mov pop adc jne rol mov sti lds lcall cmp jb (bad) ja cltd testb outsl js mov (bad) mov jmp cltd es iret pop cmp int pop dec mov stos ficompl mov add inc push pop push and mov icebp daa jno vmaxps leave sbb xor test imul shrl adcb fbld pop sbb (bad) repz inc sub xor iret mov or adc sub loopne sub dec mov sub mov lret adc notb mov push add test sub or shrb dec add jb xchg adc inc inc movw das push jb add aas sub mov js icebp add imul movsl mov push sbb mov test adc loopne cmp dec lea sbb dec mov mov xchg sub sub xchg push push add inc pushf push addl or xor or pop or add fld1 test insb mov arpl sbb pop or cmpl sahf dec xor cli rolb push mov (bad) sub dec sbb add push mov sub mov or push sub push push xor aas inc jle cmp arpl test push push pop and ret inc lret pop or push and inc dec jnp pop xor and push scas fsqrt sarl mov or into and bound xor decb sbb dec cmp pop jge xor (bad) dec adc or xor lret inc and lock xchg outsb jg jbe or clc mov cmp nop jmp push jbe push adc xchg lock test cmp cmp (bad) pop cmpsb bound add mov (bad) dec cmp mov sbb stc lret cld sbb xchg (bad) push add add jo cmp adc add push or push cmp add stc xor adc pop dec sbb add hlt aad mov or or (bad) jno pop lahf jge mov push in idiv movsb push insl mov or or hlt mov (bad) cld mov lea rclb cltd lods adc jns mov scas out mov cmp sarb mov je in les add (bad) je and push mov test push nop lret movsb xchg add sub push mov jnp outsl mov cs and push add pop sbb stc int pusha sbb lods mov jecxz add lods (bad) push lret adc dec mov das add xchg or rorl add xor in (bad) sbb test or xchg push jl adc jp dec ja (bad) (bad) sbb (bad) xlat mul mov and test mov adc popa push cli mov cmpsb mov test sub hlt rcrl inc adc pop mov in add pop out je mov push sub push pop xlat xchg xor inc inc rolb cmc test gs testb fisttpl out xor lock pushf in aaa test mov and mov daa cmpsl adcb pop push push push idivl sti jae (bad) int inc sub imulb movsl push mov insl dec mov or test push hlt jmp aas loope sti lea mov sahf roll jb mov out and mov js push in jmp mov dec cmp push xchg sub xor add jmp and pop and dec mov in pusha mov fsts inc sub inc add fiadd push movsl loop out loopne pop push aas cmp pop mov (bad) out (bad) stc rorl cmp fnstsw pusha lods enter and pop fcomps imull mov mov pop popf rol enter insb out jae clc arpl popf adc pushf mov test test mov shrb stos pusha mov jle cli push pop xor lea sar push pmaxub jge add push push sarb xor mov std xor xchg xlat sub aam fidivl mov inc ss cmp jns dec add add jae arpl test lret cmp fxch mov fwait negb push fldpi dec cmp jle fwait jmp xchg fsubl loope in (bad) cltd pusha xchg jb pop sar sub mov aaa or clc inc and sbb int3 adc sub cmp xchg cld aaa inc lock mov mov inc pop test xorl inc loope mov cmpsl testl inc fwait inc xchg xchg mov add mov adc xor pop or dec ret (bad) loope sub adc and mov jge ja pop jns imul push push push xchg mov rorl (bad) std into jle xor cli add mov xor popf lahf loopne jg sbb add or cmp jne push push je lock cli jne mov sar daa sub sbb lcall sub nop add sub sub mov arpl (bad) lods lea pop into aaa inc ja andl jae add outsl xchg add mov addl sub pop daa daa daa mov fcomp loopne and add sti iret je in fild push adc mov mov mov sbb inc dec cmp fxch pop call push and jno int3 jb loopne add sarb out sbb sbb aaa lock mov leave insl fs imul leave leave loopne call xchg jg test mov mov loope gs call pop cld mov cmp sbbl shlb mov fs (bad) xor lds dec push cmp pop or lea enter rclb push shr pusha dec push pop jne or jns cmc inc push inc jo lds and arpl or lea or jb pop lock cwtl pop ja pop add mov cmp lock cwtl sahf and rclb test inc sub or sarl xor test add or aas imul cmp popa jp or xor shlb jp pop je xor pop add fisttp mov cmpsl xor lret loop jl mov mov rorl pop inc stos insb add popa dec (bad) aad dec or pop jg fwait ss adc xor push jmp pop adc push (bad) or and mov jl lock jl stos divb mov sbb jno pop jle clc push push rcrl push fmull push xor into mov xbegin pusha jo enter icebp xchg jle add mov cwtl pop enter imul push xchg pop mov (bad) mov dec and fcmove mov popa push mov inc insl cmp sbb outsl sub jnp cltd sub xlat imul xor sbb sub scas push pop (bad) fildll decb sbb mov stos ds pop dec jecxz test push imul in (bad) clc xchg sbb push ret push sbb xor add mov mov inc test mov mov adc shll mov clc or dec dec and scas and adc mov jns sub adcb add mov jg ret adc and enter push push or and ffreep or mov dec jns add cmp or inc movsb (bad) cli mov inc inc scas pop test aam rorb sarl call dec mov cmpl push push mov lea push sbbl outsl lods js or xchg jnp call push lret loop pop cmpb mov loope rolb dec pop loope xchg inc outsl in lcall sbb push ljmp fsub call shlb es adc mov mov or mov mov add stos popl pop xchg call fcom cmp rol mov cmp icebp push push sbb add repz sbb sbb dec pop in sbb jmp hlt add push in mov xchg arpl icebp and xchg pop and push movsl test in lret xor sbb mov mov dec adc aam das das sub xchg outsb mov insl jo and sub loopne xor xor push add mov lea inc mov dec xchg aaa xor mov fsubrl in ds jp cltd xor je cmp pop je iret mov loopne test cmp push clc rcr je jg sub loop outsb fnstenv and xchg xorl inc xor lock sbb jle loope xchg push xchg pop cli ret dec push dec jne in xchg xorb int and test or pop pop push aam adc int3 and pop push nop push sti inc leave insb jp inc cmp add jnp pop pop ret cmp pop popa in or jge (bad) je xor and sub test pop cmp cmp pop xchg fst inc jecxz xchg add or cwtl test fucom sbb cmp add inc enter fnop push mov mov mov or and or ror add jecxz cld stc insb and dec jl nop xchg icebp jl sub nop mov and stos pop les and popa aas pop or sbb push xchg mov mov or xchg add push xor ret mov inc outsl cmc sbb adc imul push or test push push jno sbb pop inc fisttpl push sarl sub fwait or incl dec out jnp sub ret sub add inc push test (bad) and test or dec or add xchg mov je loope push decb or mov jmp mov or js adc cmc cmp rcl pop or or cmp ja jne push icebp inc xchg ljmp mov xchg pop jl adc jg pushf mov mov insb fldenv xchg sub add mov xchg dec mov loop loop sub or push push insl add stos int3 shrb dec into mov negb sub mov pop sub int3 mov add lock ret rol pop add jo push push lret pop dec mov cs push clc stos pop hlt jno sub or add hlt (bad) jo or es inc (bad) rolb sub push sbb push jo js sub movb (bad) mov test mov xchg movsb add cmc cmp pop push add pusha adc push dec or jo inc dec xchg and cmp and sub and loopne inc add sar dec bnd sub mov shll daa push add push cwtl lea dec aam movsb sbb fisttpl xor dec jne and sub cld xchg inc or shrl ljmp sub mov pop mov test jns ret dec mov dec or adc push call adc mov or and ret pop stos add mov and pop ret push inc and fstl test sbbl jb xchg stc mov je mov jmp adc and mov cmp aam pop std push push leave dec mov push or sbb loope pusha cmp and mov inc xchg mov and aad pop mov jb mov cmp fld pop mov inc mov flds adc adc jge adc adc jecxz mov jecxz mov jecxz aam adc mov xor add sub xchg mov xchg imull rclb cli dec cli or xchg sub arpl and das mov dec add lret shll adc ja (bad) mov cmp cwtl add mov push jecxz ss or and push xor cmp xor dec mov dec ds mov cmp aad inc lods pop lcall inc out xor push pop pop call xchg xor dec aam lcall ja sbb push je (bad) in push or add test jg lret mov test jns fstpt js cmp cmovg fisub loope lods and rcl push push jns add in dec adc rclb add lcall fwait inc subl dec inc push ret dec jl inc int3 mov dec adc mov sub dec ror adc inc jg (bad) add js add sbb aas imul inc int3 (bad) jmp xchg subl insb xor cmpsl inc cmpsl push inc aas orl movsl adc and ds jb jb sub adc mov lea mov sbb or push push jmp or mov jle dec movl inc sbb add adc adc addl inc inc subl cs bound or (bad) test sar rclb sbb cld sub sub call jns cmp jae cmp stos mov jl mov jne push jecxz cltd divl ret pop inc add out add jae jp add loop insl mov subb jp or and pop loope (bad) sbb dec mov push pop fdiv lods jge call je jg mov jo andl add out inc call or clc sub das inc in xchg push in ss jp push push sbb cs (bad) call lret movb pusha xor pop xor jo pusha xor or dec push or adc mov mov push or lret daa mov jb adc adc lret or cmp adcl inc or adc or or jle add cmp dec cmp (bad) jbe pop or popa jl inc fisubrl xor and adcb ljmp lahf mov aas adc dec lea pop xchg sbb mov lea cmc call out stos mov jae inc and jae and inc sbb push xchg jp push push gs femms add xor add pop daa adc aam and cmp add repnz rorb cs test pop and test sahf fcmovnb push pop je imul and jp test push ss sub or add xchg jne push cmpsl lea test cmpsl cmp cli and orl icebp add push push daa inc pop mov (bad) inc je adc add xor (bad) and mov ds jne jp aam mov outsb sub sar jmp add cmp or inc sbb loopne int sub adc enter push push dec jo jle adc ja mov pop imul fild xchg mov cmpsl inc ja nop je adc fdivp je or je lcall or lret adc sbb data16 shlb adc stos sub xchg pop mov ss nop mov cmp fmuls popf xor (bad) mov arpl fs push xor popa xchg mov clc or lds push adc adc mov daa xchg test sub ret nop jne mov xor in mov sub add push push test cmp xchg addr16 stos cwtl lret jbe sbb loope mov test pop nop cmp cmpl or popf movsl xchg mov sub sub mov test jb xor or sub add mov push loope xchg aaa aaa pop mov loope push sub stos xchg dec and mov mov ret or inc dec sbb add jnp rolb pop and fsts jbe or shr js sti clc stc sub stos outsb fcoms push (bad) stc nop sbb inc push push jmp cmp jl push push (bad) xor ss movsb (bad) cld in loope pop test or add mov xchg nop inc push and push in push ret mov sbb push jmp orl mov mov mov lods adc mov lds mov enter push cmc xor lret xor data16 rclb cwtl (bad) repz mov push test inc cltd pop clc nop lods xchg mov lock push adc jne sbb call xchg add (bad) jne push push fmull in add sub add sbb jmp fucomp jle stos mov mov or fstpl push or jno adc push pop jp stc mov dec insl movsb push xor addps dec and insl add (bad) aas adc sub push insl movl cmp nop adc inc mov fadd and nop sbb out push lcall adc insl sbb scas inc mov aad inc dec push jno sub movl scas add add cmpl jl fdivrl add test jne lea pop xor lcall sub bound inc stos xchg test sub xor scas dec sub cwtl inc test inc out pop data16 adc lahf sbb inc xchg cmp mov jns insb loop pushf lahf pusha fdivs push inc inc sbb push enter ss inc push mov ss mov pop mov lds into sbb cmpsl inc push (bad) or or imul add rorl cmp add mov rolb sbbb add movl jecxz iret movl pop pop (bad) dec sbb int3 movsb daa in call sti mov inc or aad push lcall xor inc sub stos mov incl cmp mov xor (bad) push pop and rolb cmp sbb pop mov sbb jbe jl cmp pop or ss stos loope,pn (bad) (bad) std or push int3 add or sub imul xchg add inc cmc nop add xchg push into icebp push stos push lea in xorps mov lock inc push add or bound lods mov pop sub sahf in jne sbb cmpl pop cmp jno or iret lds add xchg sub pushf xor bound movsb add or xor ja insl adc cli aaa rclb es cmp nop mov jmp xchg imulb inc stos adc nop push pusha or dec pop mov pop mov push in lea or ret dec data16 lds pop int3 add inc cmp (bad) push fs add pop lods xor push call push sbb cmc adc sbb inc sub and and ret testl dec and pop dec and jmp clc mov push push jle sahf xor cli add lahf mov inc int3 add cmp adc stos push iret mov adc hlt add xchg shll std test iret mov out mov add or lahf orb adc cmpsl dec test into or cmp inc inc ret sbb or test roll mov movsb jl ja ret or inc sbb sub test je xchg data16 sbb xorb ljmp push inc sbb jo pop repz (bad) sub xor push adc pop or mov and and aas jg jle or dec pop mov adc mov cwtl inc jne and (bad) xor mov or inc pop (bad) fimull sub pop jge fnstsw and or mov mov or ds ret add xor jne push mov adc lcall mov sub xchg or adc sahf bound movl push cmp add or mov cwtl aam pop daa adc cmp push sbb dec cwtl push mov inc jnp and add add mov (bad) jno pop add pop or fcoml jns push fistpll xchg fistp lahf push and int3 sub dec lods dec dec aaa adc jmp sti push or fsts pop pop imul fnstcw xor hlt cmpsb xor xor popa jge sub xor in pop jl ja leave rorb fmul dec loope sub sub adc addr16 push mov xchg pop inc or pop inc (bad) adc mov jbe imulb loopne jge jb or add fbld xchg cmp fldl mov push inc push pop push add mov xchg jmp sahf or je aas aam (bad) mov mov sub mov jbe lock push add lahf push (bad) adc std pop jnp dec dec mov outsl iret adcb mov xor dec push xadd adc inc sbb nop xchg call cli movsb test out mov push fisttpl pop adc test inc mov jb pop inc mov rorl lcall mov xor les xchg dec data16 js dec xchg jo movl xor sub in jg arpl mov loope ljmp or lea add sub add mov mov mov cmp pop test jns movb lea in (bad) call sbb add inc xor stos jmp jmp mov and or add ss inc mov sahf push inc rcrb lea fcoml cmp ja fcomp je inc aaa je lock pusha jo pusha loopne adc adc adc outsl xchg rclb mov cmp jne adcl pusha imul add mov idivb cs add divl mov jl pop pop ja or fmull adc mov aam sbb push cmp dec pop addb mov mov call jmp add sub push mov mov and or inc push mov (bad) movsl sub ljmp aad lea bound lea or pop push add test nop rcrb push push lods mov inc push add fwait cs mov pop jle xor sub or loope (bad) adc cld pop lock loopne cmp je fnsave pop cld bound push leave inc dec sbb jg leave ucomisd lahf test jp push roll cmc fsubp push adc mov add decl cmc stos sbb inc mov pop cmp je cmp jne lea decl push sub cmp ja inc jmp cmpb (bad) mov ja jne push cs (bad) sbb push adc add test aaa jg lret push mov dec jbe mov add jle push adc jle je add push add add dec adc jo dec fcomip aam add je and cmp enter hlt stos (bad) jae hlt repz xchg test sar push push sub sub daa (bad) adc loopne mov adc xor pop adc dec xchg inc enter add into mov mov jne push outsb outsb bound mov and or ret cmp inc mov cmp enter in (bad) push aam add pop mov movsl test out cwtl out in mov mov rclb std shrl cmp jne cmp push and and dec dec jne push add cmp ret ret cltd (bad) jae lods fisttpl xchg pop pushl mov and adc mov xor rolb inc inc mov sahf rcll movsl (bad) push aad rcll popf into cwtl xor xchg rorb ffreep les pop adc push push sub test je xor aas jne,pn in outsb mov movb sub cmp jbe fmull imul fwait push cld push pusha adc jl jle inc cmp insl and test push mov shrl pop mov insl clc pop adc push or push loopne hlt add jecxz in dec push cmp jl or cmpsl subl jmp iret push jg mov outsl mov arpl in pop or push lcall xor scas shrb stc mov jne inc dec push push xor icebp push sub lahf fildll and dec and add cltd (bad) cmp rolb mov sbb mov loope aaa lahf and test bound add (bad) adc (bad) jg icebp scas dec push xor (bad) cmp shlb sarb fistp (bad) mov aam pop add pop roll ret outsl mov aam leave sbb sub lods push or pushaw sbb pop pop pop andl mov jne loopne mov jno mov cld pop sub push cltd int3 push sbb cwtl xor push iret fdivrs jg mov sahf or fwait add arpl jp lock or and adc adc pop rol loop jbe push fcmove add inc add mov sub in mov clc rcl jmp pusha jle nop repnz repz fiadd add mov ja xchg sub jg (bad) cwtl and out jmp es jo dec (bad) mov dec insb mov xchg xor dec imul jne mov jmp dec add pop cmpl pop mov or sbb pop mov ja pop cmp insb jmp (bad) and jae pop shrb xor jne or sbbl mov jg jbe mov cmp je mov and xchg or pop cli cmp subl gs (bad) in jecxz fsubl cld push orb push sub add pushf (bad) and adc or dec mov (bad) jno adc adc xor arpl mov dec bound cli movb mov mov push push xorb or dec push or push adc or or jle jle pop cmp jne movups dec jl je sbb pop shrb sbb mov sub jp and dec rolb push xor mov in xor dec enter fisubrl jb jmp insb lret shl inc sub mov and fs sbb lods (bad) sbb sbb mov fstl sti (bad) add in adc fwait or mov or pop aaa jo dec les push mov jecxz pop ss mov cmp je loop (bad) lahf push mov mov shr jbe mov out and sub and or jnp decl mov inc dec pop jne pushf outsb push lahf push push and add sub push or aas adc inc jecxz rclb push fldenv sbb adc and stos imul push out push inc push push add test cli cmp dec cmp lea mov jo inc ja xor push adc sub xchg xchg pop mov (bad) or push cmpsl (bad) aas or flds dec repnz dec sbb (bad) insl pusha cltd adc enter jo scas mov mov jae mov push icebp cmp ja mov inc jnp add add out sub adc outsl lret inc lea loope or adc subb cltd or lret pop fcmovbe jbe movsl push add push hlt add push dec les xchg lods cmp cld cli ja sar push repnz fsts push push rolb adc adc ds xor push cli stos popa push or decb jl stos iret cs lea mov dec jns inc xor ret push jp sar add add loopne iret mov sbb cld or adc cld dec add dec xor test pop and or and ds inc shrb inc mov mov or (bad) adc fisttpll adc xor mov pop aam ret lea push lea push xor add popa mov lds je xchg in enter dec xchg cmp or int jl movsl data16 sbb jmp iret jae push cld dec shrl push out xchg push cmp mov nop xor mov stc pusha mov sub in or adc sbb xchg or out lods rcll les xor and leave lock jl adc push push mov popa mov pop and adc adc das mov push jo ljmp and or add rorl loopne add adc rclb call push add lods scas cmp aam or out fsubrs cmpl pusha push pop push mov push push cltd pop mov lsl xchg add or cmp jbe mov mov push add lock loope imul push or and dec and int3 dec and xchg or or push push lcall jbe stos mov jg jae lret inc js push push push repz or pop sahf push movl lcall pop aad xchg adc jge mov jge mov adc add cwtl arpl jbe shll shl sub leave dec (bad) jae xchg rol and aas daa test insl mov inc cmp jecxz push mov inc cmp mov jb mov xchg test cli sti sub rorb imul (bad) mov xor sub or inc adc or jmp adc push inc xor aaa sub xor test cmp mov pop bound movsl mov test lods sub dec mov xor inc xchg iret push fist pusha test adc clc and dec jge and rcl and add sub psrlw pop mov add pop xor mov and mov lcall adc xchg push xchg shlb or fcmovnbe inc outsb movsl push aam movsb stos inc mov movsl test lods inc mov js mov (bad) test sub js pop jle and push cmp nop aam cmpsl data16 mov dec adc aad inc push push js fwait dec pop add mov add fmul jnp movsb loopne es cmp mov adc or por jb pusha insb adc addb push into push movsb push jmp sub ret or pop add nop add mov lcall xor cli sub or sbb cmpl pop inc dec dec scas test ret jge out lea enter and in inc inc add cwtl or mov dec sbb mov test arpl sbb test jb sbb sti mov or sbb jmp test or sti xor call xchg or aaa int3 pop xchg add rcl les mov fsubl (bad) jne push arpl movl add rorl push sbb jl pushf mov lret lds scas roll arpl and lret mov inc or pushf xchg (bad) rorb xchg roll insb add icebp push lcall fs clc pop jg movsb or adc inc fist outsl lea jp iret mov xchg xchg (bad) push mov add or stc push stos cld adc insb lea test pop frstor add xor (bad) cmp cmp lret daa push xchg jo push inc mov cmp add popf add cs inc adc dec jne imul adc scas inc dec sahf nop lret push clc lock jne xor xor daa jg xor xchg fwait mov jne into jno xchg push mov (bad) mov (bad) cmp xor push sbb and inc xchg (bad) dec jge jbe mov (bad) mov add roll sarl mov jmp mov outsl or (bad) testb or lcall xchg ja cmp or (bad) xchg loop popa dec and and cmp addb scas outsl scas (bad) or aas or insb pop adc xchg add push mov test addb lcall dec test mov ret dec mov or add (bad) adc mov inc nop add xchg mov mov add mov inc mov rolb lods (bad) (bad) daa rolb pop xor or nop sub adc mov mov mov inc xchg and imulb inc jne fdivs adc (bad) sbb xor and cmp daa dec inc and push js ds dec push push aad cltd jg lea lret (bad) mov xor mov mov incb adc and mov adc sub mov add nop je,pt adc cmp jne xchg (bad) adc cmp fimul mov jb pushf add addl pop mov ret add jae scas mov mov cmp jne nop xchg inc add dec sarb push and inc pop cmp push test test sub (bad) xor mov push pop mov push inc cmpsl jns push lret adc dec and push or sbb or add or sbb fldl and and push fwait pop mov xchg (bad) or xchg push fbstp add aas mov jp jnp je sbb ss push xor and ret mov add and inc inc aas mov and adc inc cmp dec (bad) sbb add sub cltd push sub aas pop pop or and pop inc adc cli mov inc clc dec shlb rolb jo pop jbe (bad) pushf cli movb jmp cmp jae push and cmp je cmp mov mov je or push cmp inc push leave stos test mov testb repnz mov enter dec xchg add mov stos lods mov add xor add pop decl cs nop hlt ss adc dec bound cmp mov dec push mov xchg lea cmp loope fdivrl es ljmp mov or incl js sub dec or push movsb inc dec scas es aad cmpsl push mov movsl add add and mov data16 push inc mov mov movb pop fistl stos frndint push dec pop mov lea ret and cmp iret and jae jne xchg xchg cmp inc push add xor and in in (bad) jb cmp jne jmp or sub jns adc movsl test add and cmpb inc cmp push xor nop sbb repz dec pop cld fldl stos pop insb sbb pop adc test mov pop or mov jmp inc xchg cmp add shll sbb mov mov fsub or sbb and add inc int3 dec sub insl cmc es out in jle loope nop mov cli aaa test clc mov mov stc and test gs aaa mov cmp jle inc adc dec jecxz inc and mov pop sub jne push ljmp jne pop inc jb ljmp (bad) push pop mov adc cld add ret test and mov fidiv pop cmpb jne or sti in lods jb lea data16 adc outsb jne inc or enter mov jle cmp out cmpsb xor popa jne mov jne push inc and mov cmp outsl dec cs sub jl int3 dec add mov inc sub andl sub mov inc je add push mov ljmp insb icebp cmpsb adc mov jbe loopne cmp mov adc inc push inc jmp dec rcrl push mov ret jns dec shlb sbb sub sub add ror jne pusha or add mov flds and jl sti pop sti push cmp or jp fildl ja pop cmpsb rcr idivb jbe add pop adc xor add jnp adc out icebp (bad) testl mov std (bad) orb aas and or aas push loopne add xchg pop jmp cmp out pop and ds iret push int3 ret cmp sub cs out loope mov xorb push mov test mov je or pop jne jmp or adc cmp je push mov sarl mov stos cmpsl cmc jecxz or or je add mov adc aad sub add fisubr lods cmp add dec imul dec pop mov sub jl ja je push repz push mov jg and mov push lea jmp enter nop inc call push sbb fwait clc addl mov push pop mov test mov xchg push loopne sub adcl test ficomp jne mov (bad) or mov dec shl testl xchg fistpll xchg or or je jl push sbb ret push mov mov sbb js adc add adc dec or ret or or icebp dec sbb pop and push add add mov testb je sub xchg dec xchg mov pop sub mov stos cltd sete popa imul mov (bad) fist push mov or dec or enter fs imul sub dec and add popf push lea jge pop mov jnp cmc jne or jge sub cmp push fidivl add and jp add inc sub add xchg in add fadd pop mov shl mov (bad) das inc fnsave (bad) push cmp mov or aas andl inc mov stos jle inc cmp xchg mov jge or sbb (bad) push sti adc loope sub push out push jecxz dec add out push in inc and into xor es test outsl mov sbb or loop rorl imulb inc loopne lods movl movl fistpll inc add mov jle mov lahf mov in pop dec xchg sbb je cmp jae jno jo bound cmp pop and jmp inc mov add and cmp mov pop mov inc cmp xchg jb pop jo cld movl cmp mov xchg popa push jp ss outsb lock jbe adc in imul inc call je ret pop pop hlt loope daa jne icebp lret mov jg mov sbb pop inc or and lret cli daa or js js (bad) aaa fcos inc enter cmp mov xor sub rcrb inc add (bad) xchg addb sub jnp orl add aas (bad) fcomps ljmp push (bad) fldcw (bad) test push push (bad) mov adc test sub dec js cmp adc mov dec scas flds rolb inc or mov imul mov flds xor test pusha je or or divb addr16 push dec stos movl jnp and mov in pop xchg inc and xor bound add clc jecxz sbb xor mov pusha adcl stos subl leave jg add sbb push adc ret sbb or or rorb xchg xchg and and xchg jne cmpb jne or popf je les les sahf sbb push lahf cli add sbb jp jne mov cmp sar cltd inc popf dec pusha dec pop add push test xchg cwtl pop cmp jne or je jmp add cli test mov hlt aas cmp cmp je cmpl mov xor add popf sbb add push fnstsw xor mov jmp cli add cmpb pop or (bad) add or inc lret sub insb fmuls decb mov add add or push sub xor adc mov cmp mov xchg dec push mov mov pop push lock jne sti mov fadds fimul int loop add (bad) add pushf add cmpsl xor add cmp enter mov rorl mov mov fsubrs fbstp hlt cmp mov aam cs call fisttp pop leave test pop mov dec add pop ss or sub popf cli dec je cmc push ja sub cmp (bad) aad inc inc cmp pop and popf fstl aam add pop das jmp push nop sbb mov push jle mov and xchg sbb jno mov incl sbbb and movl (bad) xlat int3 add adc sub pop cltd dec (bad) in es popa cmp ret mov mov push and lcall add sub daa and mov testb mov jl or shll adc jnp je das jne jne and addr16 inc mov sbb mov mov mov jecxz js cltd inc or push mov jo sarb clc mov sbb lahf xchg (bad) xchg fninit dec jb orb sbb cmpsl mov jae jae stos (bad) cmp inc mov imul push out pop dec je jmp jp mov push mov movl push jmp loope push mov pop loope push enter fistpll or inc jp inc add fdiv aas lea fdivl out je sub pusha dec cwtl dec sub dec and sbb dec mov jbe,pn cmpsb int3 sub ficoml ffree mov jle and xchg mov add cmp dec or aad in jmp lods mov iret and push add adc xchg int3 daa sarb lea jo or inc test push cmp push pop mov pop pop lods and test ja xchg aam inc mov mov mov (bad) call addl ret sbb pop dec xorb push incb jne pop inc sbb rcrl (bad) movsb adc fwait add inc dec jne add fdivrl scas push lret pop into push test cli jns subb es test movsl fisttp lcall js or push xor lea bound sbb cmp adc adc cmp cmp cmpsb les lods or mov pop loop out test or loope pop sbb inc xchg lods mov pop lods mov push jle sbb je sbb fisubl inc (bad) adc sbb inc sahf scas add xchg int push das rol xor or mov mov push and jne dec je adc pop mov sbb sub rcr ss adc ds xor (bad) inc popa aas pop insl adc add nop mov add add scas sbb xor pop pop (bad) push out dec jb movsb (bad) je mov add sub dec cld xchg xchg ljmp push add daa jmp add push add dec fs sub cmpsl lea pop dec ja push dec mov mov les add out shll inc sbbl add lods mov loope leave cmp lea pop adc and (bad) or pop daa inc (bad) jl inc sub loopne mov mov mov imul je pushf test inc push (bad) lcall outsb icebp call pushf adc xchg jge aad pop push test addr16 dec cmc xor mov inc cs lret mov sbb mov aam adc ss fstp mov sub aam movsb fdivrs push mov cwtl dec or add xchg add js mov add pop mov xor shr out add add push push push insb sahf es or or mov jg mov mov add jmp adc sub or push js lcall dec nop jno (bad) fisttpll inc fndisi(8087 test pop push test es in and and arpl xor js add cmp test mov add sbb push and roll clc sub add push repnz and call push es je mov inc xor cltd nop mov bound add adc adc or adc ss jns add jne stos iret push sub pop push push xor sub push dec loop je xor pusha jp aam inc and mov (bad) enter adc inc push mov out add push cmp push jle cmp arpl cmp or nop sahf cmp xchg iret addr16 out cltd out mov adc or (bad) je dec jno xor das mov xor push mov ds faddl ret test in push mov loop adc repz aam and or pushf jl rcrb inc imul neg sbb push insb (bad) out jo movsl movsb add push jg cwtl or mov jge inc push in and (bad) xor ret test or pop add dec add adc cmp imul cmpb je dec andb mov les bound scas sub xchg dec mov movsb mov comiss or insb aad call and pop push stc cmp and push add adc xchg test test adc push insb inc out aam inc movsb adc inc pop pop mov pusha aad in push dec fistpll hlt (bad) in sub fsubl (bad) sub push push adc xchg xchg mov adcb add dec sub cmp cltd ret ret mov subb push ss adc jl sahf adc sub push mov and mov subl push in cmp insl adc jmp pop or gs mov jns add pop mov (bad) sbb les inc sti cmpb je scas cmp pusha lods sti mov imul mov lahf test cmp daa and gs fdecstp ror xlat lret mov out inc in jb (bad) or mov mov push lea mov push add add cmpsl pop (bad) push dec mov inc gs jo xor ljmp call xchg or adc mov mov push insl push pop add jae fdivr inc loope,pn add adc aad mov push imul sbb enter (bad) sbb jne or cltd mov (bad) test cmp mov js or mov movl test test xchg or add loope mov or cmp add add mov aas inc inc jne mov xor push in (bad) rcll loopne popa inc es sub cltd cmpl push cmpb aad in pushf mov mov dec mov inc jmp scas xlat push xor inc test cmp popf cs jg push mov pop and mov inc fidivl sbb inc stc mov test mov (bad) jo popa or xor mov arpl clc mov mov and push xor cmp and dec ja imul push test add inc cmpsl add mov mov iret or xor add push pop adc and dec adc push xchg and xor xor or mov shrl xchg or (bad) sub adc (bad) xor dec testl mov test add adcl pop sub icebp add sbb sbb sub lds fs pop rcr push pop inc aam cmp ret shr test rorb jmp sub das or enter outsb call enter loope mov jge xor sti les bound mov aad test popf repz fs mov mov stos inc push and sbb mov add pop cli es sbbb (bad) push inc push push xchg aam mov xchg adc adc push mov or jmp and or (bad) shr insl push sbb jg xchg push adc sbb popa cmp mov lods test jmp and add xchg cli add push push in rolb adc and adc sub add in push inc or movsb add add add add or xor orl mov sub jne or gs add xchg pop and sbb pop sub in aaa sahf in xchg xchg or adc orb icebp dec push adc cmp add push xchg clc add dec add or xchg bound add and xor mov les xor dec sub mov movsb add stos cs sub popf pusha fs jl jo mov popa lock mov jg push lcall cmp push pop mov test (bad) mov test cmpsb mov stc ja gs sub dec mov and adc or imul jb int sub rorb daa add je ljmp inc addr16 jge pop fldenv dec mov pop mov sub mov aaa lahf push lea sub pop loope and inc leave sbb int3 aad aad push in aam xchg or enter sub push sarl inc mov roll and mov pop add mov clc or hlt jle pop aaa inc pop (bad) rolb or dec mov lcall jo test push cmp pusha sub movl push pop ja mov jle cmp cld mov adc push mov movl std jg jge push xor daa es sbb cltd out xchg adc addl and inc xor ret cmp ss adc das inc dec rorb (bad) loope call add call xchg ss sub pop or inc mov or inc xchg mull adc push pop jle mov lcall add pop (bad) mov cmc rorl loopne ja dec xorb dec cli xchg mov add sbb sbb mov inc push mov push sbb loop decl adc (bad) stc mov xlat and stc cmp jl pop or insl or insl push dec dec cmpb xchg orb test (bad) adc xchg add mov (bad) cld fadd test and iret cmp or out and insb (bad) mov rclb jno jg sbb adcl ja aam mov adc sahf mov imul mov and jmp cmpsb insl sub or nop fdivrl daa aad outsb and ret jns xchg je push mov add loope rcrb pop popf loopne adc xchg sbb dec xchg add xor jno sbb push push mov jne lock cmp clc lods das push xchg or ds add jle inc imul add or xchg sbb adc and (bad) sbb (bad) dec aaa pop repz in int sub xchg jecxz and push inc cld loope adc jp jno add cmp (bad) sti inc inc leave sbb fstps inc cld add cmp add push sbb push and lods loopne sub sbb int3 sarb push std pop movsb outsl in pop fiaddl rcll add push inc or lods dec (bad) mov jne sbb add mov adc aas push inc movsl or ja lds ds xchg mov add inc mov fdivr inc xchg jno jge jo push mov cmpsb lock pop jae adc sbb add add push sti add jmp push in cmpsb push cwtl mov pusha adc sub invd stos pop jp adc mulb push push mov push xor aam push aaa gs xor inc stos push adc jo jl outsb stos xor shlb sarb mov lcall lret mov faddl imul cmp test pop (bad) push lds dec iret mov jmp sub dec mov adc or dec sbb sbb adc dec and mov call popa jae shlb adc xchg sbb xor mov mov push jo ret push fimull decl (bad) (bad) adc sub and cld or xor (bad) pop add gs or adc and mov stos mov pop pop pop sbb pop popa add cmc cmp inc sub cmp outsb jle cmpsb push pusha out mov mov imul xor in lea mov adc fidivr lock (bad) and lea or add mov add push jo aam and or add ret adc mov mov inc fsubrs pop dec shrb movsb bound lea mov roll pop cld push cmp fadd adc test repnz test add sbb nop or jle loopne divl (bad) fistpl adc mov push sbb dec and pop lods shrl orl addb xor mov je dec je loop sbb movsb add call xchg or adc jb mov ss hlt or andl insb ja in mov push (bad) jne and mov les cld or add sbb cmp (bad) and mov push push loopne nop or movsl or mov mov shll jo xor pop sub push mov mov sbb inc sbb test push jo icebp addl cld mov les mov mov xchg dec adc pop push pop dec inc cmp or movsl cmc stos sub cmp fimull pop aad test mov sbbl cmp dec pop inc xchg jns xor adc clc inc add cltd adc or imul int add adc mov subb loopne int3 insb (bad) mov add mov adc pop insb xchg jne mov or rorb jle movsl mov fwait loope and (bad) push jmp pop iret jnp jns iret es push sub lock das inc adc add jo inc pop jge pop js je adc mov mov push push scas pop testl fbld cmp (bad) aaa jno push popf adc inc adc pop inc adc adc and jne add xchg (bad) push push js mov mov add or jmp dec sub imul sub push pop popa or mov es adc or pop or mov sub add xor pop xchg xchg push cmp xchg adc adc or sbb rcrl je adc cli mov add mov mulb add insb pop movsl pop push xchg lds add sbb push xorb adc (bad) out (bad) push sbb add les in cld cmp mov dec mov adc es pop jne jb scas insb sub je push rcrb clc pop dec es sub test jne fs xchg sub in xor fild (bad) jmp and inc add sbbb rclb mov xor or inc sbb lods mov inc in pusha arpl sub push sub ret sbbb jne sub push ljmp inc fisttpll mov add push adc cs or adc pop add xor div fiadd test pusha cmpsb lahf sbb mov popf es inc inc pop lock push mov pop xchg sbb inc dec cmpsb push inc imul sub pop or stc sbb lock and aaa sub or sbb adc sbbl mov cltd mov xchg jmp sub outsb mov je or je mov or jne dec xor dec xor mov sbb and mov add push pop inc add xchg pop sbb fmuls push imul lds popa mov push cltd xor or andl sbb loopne xor pop adc or test xchg mov lock add add jg sbb jae mov and out lret add adc xor push mov flds mov inc sub or test sbb and sarl inc jo shrl mov and add fxch push add movsl rclb adc sbb enter outsb inc sub and push inc fsubs adc sbb push mov mov out das into pop or xorl push rorb je orl pop pop sbb paddw push clc enter insb pop mov xor sbb ja shl testb push orl cwtl inc mov xor add adc push push push aas decb jne and (bad) int and pop adc loopne lods bound push shrb es bound inc (bad) adc inc pop add loopne mov lea mov xor sahf pop and call imul ss mov decl decl push add push sub push jo mov sbb mov cmpsl lea stos (bad) cmp out mov daa add fwait es push sbb (bad) addb mov (bad) or add popf xor or stc cmp push cmpsb lods or (bad) add and (bad) xlat and xor (bad) imul pushl or cmp mov pop repz jecxz add adc mov loopne jbe adc push jne xor inc xorl inc or mov mov push test push inc pop add aam shll dec daa pusha dec push or ljmp xchg adc push dec nop or adc add loop addb inc and insb stos (bad) movb leave dec pushf push test jecxz pop or sub mov lcall push insb and xchg aam mov push mov mov jge dec jne jb fiadd arpl cmpps leave sbb inc or add xchg rcrb xchg dec testl cwtl or (bad) in lock jmp add clc add jns and push mov cld (bad) mov add mov ljmp js inc aaa push (bad) xor jg xor cltd sahf mov fisttpl (bad) je shr inc mov in jmp adc mov mov fsub jmp leave and daa pop adc adc add add xor iret jl dec jl add movsb or scas cmp sbb cmpsl cwtl outsl cs jg cltd test add rol inc (bad) enter xor mov lds test jg addl push or mov fimull scas or sbb xor aad hlt cltd push sets add or push cltd test add adc out add dec mov or pop add mov scas xchg sbb sub cmp push lret or and cmpb sbb mov push pusha bound adc sbb sbb push mov push pusha cmp lock shrb dec adc or mov sbb rolb xor xchg scas arpl push mov or add sbb ret push sar jo aaa pusha mov pop jg push pusha sarl incb add or (bad) cmpsl sbb xchg addl sub pop push (bad) mov cmpsb ja xchg pop pshufw lods add sub and aas mov add and push dec push loop fbstp mov sbb sub jne cmpsb lcall xor jb fbstp inc popa ljmp adc int loope sub adcl sbb lret sbb dec dec push arpl mov int pop (bad) sbb jecxz pop xor dec or xchg inc sub push sti sub mov xor jo ret loopne inc adc ret and jle sub push std and cwtl mov inc cld add jge vmovaps mov (bad) mov pop sub xor sub cwtl ret inc xchg loop das add sbb insl pop mov xchg daa fbld pop mov addl xchg out mov dec jo cltd push lock xchg nop jb adc sbb test addr16 clc das aam sub sub sahf push dec inc or push inc mov push push or mov push push lea andl mov inc or imul mov mov push xor sti jle imul test movsl test inc xchg ds aam repz xchg sbb data16 push mov movsb (bad) pop add cwtl loopne sub fwait add imul push inc ret adc or sbb push test leave push dec mov shr movsl inc dec or sub and push mov nop lahf jae add mov inc pop dec mov mov xor roll add loope mov inc add ja pop aaa inc incl fdivrl sbb cmp clc and daa sub pop xchg or fidiv cmp xchg mov fisub xchg adc icebp lcall ja mov and (bad) fiaddl pop pushf dec mov jb lods and aam call xor icebp int test sub (bad) ficom ficomp ret xchg xchg test lcall icebp mov push fstl test rcrl imul pop xchg dec push pop dec dec or push bound test add loope test push xor jge (bad) loop movl xor push adc xchg push repnz push andb xchg xchg add xor sub sub sbb adc cmp add rcrl test mov es sub push inc push add pop rcl xchg adc push jns mov push inc lcall test xchg call dec or stos mov ss jecxz pusha call xchg push xor loopne enter xchg adc or or out mov mov cwtl mov pop xor sbb js push adc mov clc pop (bad) jne xor test (bad) dec lds inc jnp jp inc lcall push (bad) add movsb fadds or adc add nop jg jecxz and inc mov or mov xchg sbb nop subb jecxz pop pop rclb jge loop ficoml sbb icebp sub clc or mov test mov adc sub mov test aaa lock mov repz das pop les mov xlat add adc outsb ret jns out push cmp pop aaa call xor or sbb pop pop inc pop inc ret jmp pop fbld je fwait pop mov orb enter adcb sbb int3 mov in fisub mov xor aaa cmpsb into lret leave jns push mov or cld adc xor mov xorl mov lds icebp loop cmp jge scas cmp decl mov adc fwait mulb xchg mov sub lea inc or les js push inc dec or jl mov mov daa cmp inc pop push icebp divl (bad) xchg xchg sub (bad) cmp (bad) cmp cmp pop enter fnsave rolb outsl les test fildl and pop cmp test xchg mov push jnp lret push dec mov sub test dec aas cmpb add (bad) test and cmpsl pop xor mov jp sbb sbb (bad) adc mov add mov cwtl mov mov cwtl arpl xor jge push mov push lea push inc aam xchg inc mov loopne dec mov sahf sbb sbb xchg mov push sbb xor les sbb mov jmp mov das fsqrt adc andb pop divb push movl and je sub (bad) test cmc lock add aad or addb fnstcw sarb sub movsb test push inc add jecxz adc sub sbb xchg int and jne lahf adc sbb push inc jl or (bad) pushf push add cwtl iret add cmp push cmp or adc testl test das loope and jmp insl push push nop cmp push push or inc fwait push push pusha sub fwait add cmp int3 mov je or ret jo mov jo imul lret hlt push je sbb xor jnp add push outsb leave cmp push ljmp (bad) add add rcr xchg mov ret iret pop arpl test push push rorb lock add push mov and and dec sbb or inc inc pop mov sub (bad) cmpsl test xchg mov call test in test sbb jo adc add mov mov mov or mov call int rolb movsl lods in test push xor and jge push cmpl fstps sarl push dec jne and outsb mov mov jae pop int3 or mov fiaddl fwait sbb push sub mov sbb jle lahf fidivr sub test mov lret add test in std data16 mov mov cmp jl xchg pop sub aas or xchg dec mov mov dec loopne push sbb cmp aas xchg add or cmp mov push or std inc mov or jge jmp or mov push mov lret mov cld or popa rorl rorb lret cmp cld pop add cmc and push mov cmp cmp nop adc je cmp loop test movsl xor or mov cs push push dec in shrb stc push or cs xchg dec lods test xor sbb adc or test mov ret aaa sub ss or adcl add (bad) dec add add push mov imul arpl push pop imul add in and cmpsb and mov sbb xchg in test lret mov push cmp bound aad add xor mov dec ret mov mov add mov pop push (bad) mov pop cwtl mov bound pop pop bound xchg sub pop mov inc mov xchg ret mov sar push cmp sub dec push fadds xchg add int3 je jbe sahf add jae rcrb outsb shr or push adc and dec add in rcl std hlt pop dec nop push xor cmp or fisttpll pop stos cmp push (bad) inc inc aaa cmpl sbb xor xor pusha cld mov or push jmp adc push xor mov jp sub adc pop or mov jae mov lcall xchg hlt sbb stc movsb call sbb xor push dec or or roll push or inc mov push push rorb pop mov push jne sub fldenv in ror inc pop stos pusha pop adc sbb test ret ret adc dec dec adc xor dec std dec dec pop into bound inc add inc inc jle jle enter sahf sub pop test aad inc xchg adc xorb test pop push pop dec inc popa adc push pop movsb dec rolb clc pop jge in cs cmp dec and je mov push push jmp sbb mov cli (bad) inc cs test aas les or push and fcmovb add cmp jae fsubrl loope sub push ds loope nop cs icebp jle test dec adc pop dec jge arpl out mov xchg mov push mov mov lahf xchg mov nop out (bad) inc addr16 mov push in and pop lea icebp cwtl and clc inc dec jmp rorl push adc mov sbb push inc in adc dec inc cmp arpl (bad) loop in and popa add cmc inc cmp push aam test sbb or cltd rcrl daa push adc add xchg cmpsl and inc or gs sbb jl lea stos sarl imul shr cmc dec cmp adc adc xor lcall orb xor cmp dec cmpsb inc cmpsb and adc aam stos inc dec inc mov push inc push add adc or add adc (bad) int3 sub scas push and dec and loop (bad) negb push push cmp dec movlhps jae push pop aaa test daa sbb adc sub sbb inc test push lds add xchg (bad) mov clc xchg adc cs mull push dec adc pop mov popf movsl mov pop xchg push xor inc xor jne (bad) in lods aaa sub aas or test mov or pusha (bad) dec cwtl sub lret mov or or cwtl or add pop andl add data16 arpl std sub fs sub aaa add push stos adc sub xor xchg jge adc adc les add les loope in jle call adc push xchg fcoml clc or pop enter leave push push push or pop add sbb iret (bad) dec dec pop mov push jo or adc jmp mov dec imul out jg mov mov add pop or add inc cld add jmp dec push imul mov outsb xor add enter or sbb adc test sbb outsl push sub shlb pop pop rcrb out add push mov pusha cld mov cmp jle or adc sti sbb jmp jge sub dec aaa fiadd jne mov jge fbld mov mov or sub mov adc add mov xor add mov push sbb sbb imul pop or lock loopne pop pop pop (bad) jmp mov je sbb jmp sbb inc clc mov test js pop aaa lock sti pop pop mov cmovo lods push cmc nop pop nop xchg xchg and test insl mov xchg sti dec ja inc pop dec sti or or or mov mov scas les (bad) cmc mov fidivl inc imul sbb cmp or add xor andl push orb mov sbb inc cmpsb les mov cmpsl andl and loop cltd inc cld mov aam movsb daa lret (bad) icebp leave pushf jp les pop test sub lods fistl sbb inc mov movsbl push andb xchg pop xor mov push (bad) scas jo mov gs jae fsubrs je inc and push xor xchg cwtl inc pusha add mov nop add rcrl pushf aam sub add andl sub dec xor sbb add inc (bad) sub insl hlt pop mov adc push xor pusha pop or push mov mov push adc push mov test in data16 push push pop and (bad) mov adc adc push das and xor leave jb adc or push or repnz or enter ret leave or enter ljmp inc loope add int in cmp add mov push mov shrl push sbb cmpsl je repz in mov movsb dec sarl cs sbb lock lea outsl mov mov pop rorb out jecxz jg dec mov sub mov adc add push pushf les lds jl adc jno push adc sbb repz lods or pop es push push inc pop scas ja stos inc fcoms mov aaa pop add add fwait add push push js addb jecxz pop inc adc loop stos add adc test jp adc mov imul ret or addr16 and pop loop ret mov cmpsb jb outsb lea addr16 ljmp jb mov inc add je cmp or xor inc (bad) mov aad in sbb fmul xlat lods mov push call adc cmp cld sub mov cmp movzbw lea push xchg push rcrb cmp sbb and rclb pusha scas mov adc mov xchg cmp and mov sbb or push sub jbe mov pop fadds or add add subl jl dec jae ss adc jp adc sbb mov xchg xchg cmp push xor add jno lcall cs add and sti dec inc and dec add add dec or mov ljmp pushf xchg scas adc sbb add push in test cwtl push scas adc movsl mov and jb and jne mov xchg push sub dec sub pop jmp or adc loope add adc add push push push dec insl (bad) adc adc inc shr popf jg cmp mov xchg push and jnp mov cmp insb cmp imul xchg cmp cmp (bad) ds mov xchg sti adc jnp xchg mov inc andb pop orl xor ljmp stos sub dec cwtl cmc movsl push xchg jno or push push lret jle xchg pop pushf cltd jo xchg pop cmp cld push lcall jle adc push and inc pop push pop out aad push jl std cmp mov cmpsl ret stos xor fmuls aad inc push pusha sub dec lea (bad) je add sbb push adc insb rol add dec fs xlat je xor pop aas inc pop xor imul icebp jae xor (bad) sbb push test and push and fnsave bound cmp inc push sbb aaa sbb test inc enter push lea adc lret mov (bad) and xor or pop push sub pop dec sbb adc fs js out inc shlb sbb xchg pop cs adcb lds add push pop add and jecxz sti jl inc xchg jmp push loopne daa mov addl cwtl pop roll xchg pop arpl sbb movsb add mulb push pop das lret xchg sbb lods mov flds fstps push jbe sbb sbb push rorb dec not and jle cmpsl insb daa sbb mov lods int3 ljmp pushl jmp xchg push xor mov push popl xchg fwait adc cli mov jne add (bad) push push push pop ljmp mov add sahf mov les loope adc pop lea add xor pop gs push repz and inc into sqrtps into push xchg cmp adc pop jo dec or and cltd xor pop dec aad or add ss (bad) pop add xor cwtl sbb xchg push push sbb adc ja pop rorb adcb push lcall (bad) xor add test pop insb adc mov cmp inc xor fildl data16 xchg lea push jne inc sti push mov dec add inc add int aas add fidivrl dec pop sbb adc add mov jno fs pop (bad) mov sbb mov or inc add push push add sbb nop call cmp stc push adc xor test aas test adc sbb andb sbb and jg or inc jne inc jne cmp push cmp pusha nop adc pop jl sti lock jg mov sbb lock mov or push mov push inc in ljmp jb pusha jns movsl ljmp add cmp ja sbb dec dec jmp sub push sbb fs add mov push ror mov insb adc xchg popa (bad) and xor mov and jo (bad) mov adcl fstpl or addb and inc or xor push es mov adc mov cmp push and sbb and jno mov sbb mov mov test jns shrb or roll (bad) mov andl popa (bad) (bad) mov sub ret jne mov pusha std pop xchg mov aas popa mov pop movsl mov adc pop dec dec sub sbb pop xor or inc xor loopne sbb mov inc loopne lods or dec popa or xchg cmp adc bswap je repz or popa mov add repnz mov (bad) lock ret mov push aaa push dec push xchg inc or mov or aam lea push lea test xor add xchg cmp add xor mov mov sbb sbb addl dec inc and int3 jo inc jecxz pop pop xlat (bad) stc or add or mov lods mov push push sbb loopne inc cmpsb inc mov cmp and (bad) sub sub add and mov (bad) lock les flds or push popa les pop xchg or (bad) in pop ds mov push sub pop mov xor add or ret mov and movb inc jg xor inc dec add or jle fimull test es or jno jmp mov push lock and mov and xor mov sub adc mov fwait push sbb sbb add cmp cmc mov notl add lods jl add mov push push push add and popa inc sbb lods out aaa inc push cmp das push dec cld div es cmp jb sub fbstp mov dec pop addr16 xor jg jns mov cmp (bad) and mov aad ss and add sub adc mov xchg sbb das and mov dec addb adc and jne jl add adc push sub jne cmp les out jbe fsubrl mov cmc pop scas mov inc push push jb mov mov mov call (bad) xor (bad) das test mov add add in and push jecxz sub mov push xor or cmc cs rcll pop jno mov lea pop imul dec (bad) mov mov cmp sub or sub mov or push test pop pop adc pop push lods ret clc jecxz or or jmp (bad) pop test out xchg xor fwait sahf test incb mov sub mov dec lods adc ljmp jb mov mov pop mov lea pushf ss in adc pop movb ret lahf jmp xchg jno mov inc cwtl inc jmp dec jle cs jmp repz add insb add jb (bad) mov insl int3 jae inc add jno js jae seto xchg fadds push add ret or cwtl cmc and pusha or xchg jle jbe movsbl push push faddl xchg mov test cmp scas cmp jmp and cmpsb mov mov icebp xor add imul call sarb push and pusha and sbb out dec adc or sub dec push sub or jmp rolb add pop jnp lods or jg inc and pop mov xor rolb xchg fwait test push xor jns lcall push cwtl lea or push stos rclb push mov mov add sub movsb push pop and sub cltd add and cmp popf fwait (bad) testb sub sbb (bad) jbe and (bad) adc add inc mov mov pop pusha jmp sbb and add push xor je out gs (bad) out xchg or mov pop or in and aas loope jg test jne jmp add sbb icebp push mov cmpl jp push aas add jle cmp (bad) mov push jbe cmpl out movl sbbl das dec mov xchg mov pop mov dec ret push dec loop pop test xor xchg ds adc mov inc lahf es mov push mov lahf ret test test fimull jno lahf mov lods or adc lahf push push add or or clc mov hlt or mov jge fldl mov mov inc pushf mov and adc loopne lret movsl test mov push test dec sub fmuls in aam mov jne pop jg xchg (bad) xchg inc pop push imul insl push jne cld xor add je aam mov xchg gs pop daa xchg or or inc xchg aas mov rcrb aam mov shll fnstenv fdivl aas movl jl sub scas or mov in (bad) lret jo (bad) mov scas jo lods or add sub mov adc inc inc nop out cmp mov mov xchg xchg repz aaa pop insb adc and lock xchg and xchg es in xchg cmp daa movsl mov loope bound add mov mov je ret add add jne push cmp push jbe push sbb clc and cmp and ljmp je cmp je cmp je mov popf pushf (bad) lds sub mov jb inc or es stos and movb out cmp sti idivb jne push outsb jmp cmp adc sub je pop xor or cmp jl lea push push jmp movb ret mov mov jne push ret or sub ror jne,pn incl and add jne xchg pop push add iret outsb test decb ret xlat or push xor imul mov test lods add cwtl and pop inc ljmp cld rcll repz push stc inc enter or xchg and pusha popa mov and jne jo sahf push sbb aad add and imul pop lods and scas and mov sub ffreep push jl ja or sbb push cs scas je mov or into cmp jp out jne or ja je ja adc fild cmp lret jbe movw outsl mov xor mov push cmp je jge inc mov inc fcmovnb push pushw jecxz nop push ja dec add adc and ljmp ja and aam and or adc push add lea inc test add movsb rolb xor mov (bad) or test (bad) push push cld jmp cmp (bad) ficomp js pop mov xchg loopne add inc push sub xor repz nop scas inc movsb xchg stos adc lds sarb mov jae adc and xchg or nop xchg leave adc shl cltd pop xlat pop push and test mov dec dec mov enter fsubrl lds mov add (bad) sub push add mov lods test sbb pop jg pop pop ret jecxz sub mov popf mov jo adcb test clc mov and test leave out stos lret cmp push cvtps2pd shll push xor xchg push jns push add lcall mov jnp mov add ss or sub dec pop fisttpll push gs sbb mov or sbb or dec and inc (bad) or jne out and mov mov cmp aas pop cmpb into add pusha adc add mov jge iret movl add add pop adc sti inc and add or adc add cmpsl sub addb or ret aaa and clc sbbl jno or or xchg pop sbb jge dec or sub and rolb aaa adcl pop test inc (bad) add jo mov mov or add add pusha cmp cmp rolb mov add pop sub inc sbb test subl jg (bad) (bad) cmp pusha pop nop lcall fnsave cmp pop mov mov ror pop aam in pop cld aaa add push xchg push sbb mov mov out es sbb out repz mov sub adc js pop and adc dec inc xor scas or aas mov add jecxz push ret mov xchg roll bnd sbb or push lods adc (bad) jo sbb mov movsl inc pop fwait mov jp mov push adc and lahf push or lea cmp jb mov lret jae pop decb xchg push pop or fsts mov push xchg ds pop push xor xlat inc inc xchg movsl push and popa dec cmp aas loop push mov push push inc dec add fisttp and push xchg cmp and add lock ret (bad) incl lock jo test inc insb or cmpsl sbb dec mov lock repz xchg and jecxz inc lea mov roll dec mov jo sbb rorb pop add xchg lea inc jg mov mov aas jp lea ret (bad) loope andl aam push adc inc mov lret mov inc mov movsb inc or movsl lock or pop (bad) inc adc lock pop dec add add add stos inc adcl push or (bad) mov cmp mov sub ret and fisttp mov push and xchg sarb scas mov cmp jg negb fs add add jecxz movl and mov xor cmp mov test xchg pushf in mov arpl aam inc add add cmpsl sbb fs arpl aas cwtl inc and fstpt pop orb jo mov or lods pushl adc push mov movsb adc or adc push (bad) hlt push ret push push ds in loope sub pop push fs test xor fbld pop push xchg or or icebp fdiv int3 mov add inc pop cmp add dec mov movsb ret pop ret add jg movsb push imul inc fiaddl js inc js lock inc out add es xor icebp xchg scas mov mov repnz pop dec mov sbb inc and xor push jecxz sarb lock jp loop icebp mov rsm popa ljmp sbb or jg test add dec pushf loope mov adc pop or sbb jbe xor or adc adc push mov dec jmp xor and rclb lcall cmp in push mov aaa clc lea cmpsl das xchg movsb leave mov inc fs xchg fwait mov adc aas fistl outsb mov jns nop adc add stos dec out inc or sbb je inc cwtl call test and lahf test lock jg adc or or jg push lahf mov popf pushf mov mov mov out or add dec imul xchg xchg adc leave lcall lahf lahf (bad) mov mov sbbl xor rcrb (bad) cmp dec lret and arpl cmp cltd mulb dec push imul fistpll push xor add push bound sti aaa bswap gs popf add or push adc roll les cltd lahf sti and or cwtl sti mov pop ljmp xchg push add cmp les stos mov jmp add mov and cmpb pop clc add dec jecxz mov movsl adc or jle rclb aam mulb jae jb cmp xchg cmp mov es loopne fsts inc xor imul mov add and mov inc push loop ss decb jne mov or cwtl adc jl dec add sub aam push imul popa jo jae add cli sub jno outsl je inc push cmp add inc cmp inc pushl or inc inc cmp js jmp or int pop sbb call jo flds into push bound movsl and nop lret add mov pop xlat pusha mov jmp in movsl or inc popf adc add add adc or jne mov sbb add push mov test cmp or jp cwtl dec and dec add push push dec adc ret movb cmpb push sub pusha mov or sbb mov push mov call add mov insl inc insl lahf xor lods or sbb pusha and dec sub sbb add sub les pusha shll icebp push movsb adc cmp jo jno insl or and (bad) adc daa movb push lret xlat or adc lcall cmp jbe movb inc jmp jmp movsb sti dec pop push or push sbb out push aad cmp test dec (bad) dec add xchg (bad) js pusha mov mov push mov mov add mov inc xchg cmp fldl aad xchg cmp sbb dec jne mulb movsl jbe and adc pop movb lahf shlb cmc inc inc pop call mov push out push cmp push dec cltd mov xor fisttp dec sti lea jmp fdiv mov cwtl add sub add dec add mov mov inc push dec or push lods rorb push dec imul and add stc add loopne les pop push orb cs inc fildl jnp adc or dec adc dec inc dec lods fwait push sbb xor (bad) cmp dec and mov daa lock push (bad) enter mov push pop movl cmp cmp lds rorb std lds mov sub (bad) add pop loope cmp ss (bad) ret jg add jb mov add inc cwtl cli xor in adc mov dec clc xchg test mov (bad) xchg rorb test or mov xchg aas add dec push cmpsl adc sub sub fimul pusha imul pop sti rol daa cwtl sub and lds aam cmp pop cmp mov pop mov repnz xchg test jo jl xchg (bad) and mov mov bound jno add loop loop daa in push test fmull add nop xchg gs sub or inc fstps and imul mov xchg push pushf and fisubrl push jge adc cmp call and sub or adc fadds mov adc mov test inc leave inc push mov insl je lods inc cmp rcl and cmp add idivb push loope,pn paddb xchg push jne jg addr16 add loopne sar ret mov sbb add sub loopne mov cli roll pop cli les gs cld mov inc and cld xor imul test icebp lods mov pop push inc push push roll xor rcr add mov ss popf cmc mov dec and fiaddl xchg inc bound push (bad) cmpsl jbe mov mov push jae sbb ds popa dec dec dec mov sbb xchg mov add adc sub pop loopne push jge (bad) push dec cmp arpl nop test (bad) rolb add shll jecxz add sub pop rolb fcomi cld add aad xor xlat pusha mov pop pusha cmpsl mov mov add loopne clc dec insb xor mov mov xor add or fisttp (bad) neg sbb andb jmp add lea neg xor cmpsb jne (bad) rdpmc or (bad) rclb cmp lahf clc aam sub inc push xchg shr cmp es or mov jmp fldenv (bad) fstp sbb add cmp out jae pop sub add dec jo add std add movl push sbb or jl out cmp ror ret lcall mov inc jecxz sbb fmuls arpl pop adc test mov pop mov inc pop mov rclb movb daa pushf and nop push push add lcall pop loopne add cmp pop mov cmp je ss push pop push adc or inc push xorl scas add mov out add sub cli add ljmp ss dec sbb clc mov add push mov lcall mov add add dec add add dec fdivs test call loope orl jp rcr fisttpl test sar sub sub xchg or cmpl push mov mov adc add cmp test nopl jle mov cmpsb lret jmp inc nop and dec add inc popf pop out adc imul fdivs cmpl adc mov sub add jge jb xchg cmpsb les adc (bad) int3 (bad) add pop stc scas pusha shrl das jne xor add push cmp mov movsl clc inc call mov insl outsl add out adc cmp push je mov popf mov xchg push or add push jae (bad) sub add pop addr16 push pusha and imul (bad) push sub mov pop pop sub cmpsb dec jns movsb jne mov or xchg loop jne mov inc arpl fucomip lods add ds adcb xchg mov xor sbb pop xor push sub fmull cmpsl cld sbbl lcall subl subps mov mov insl or test mov add cmp push jb adc xorb adc (bad) adc scas mov lea and adc adc out enter sbb adc pop stc es mov sbb movl adc arpl xchg not in dec rclb dec and movsl jns inc nop clc push cmp or call mov mov xor mov int add cmpl (bad) xor xor enter sarb nop xor adc popa xchg sbb add adc push xchg mov es push mov mov aaa xchg jae call loopne and fwait cmp sbb sub int dec adc inc pop and clc std jbe and loope pop out jmp xor test mov lcall or stc or leave idivb mov int mov stos adc cmpsl int3 lea fwait sbb dec loopne gs xor mov add into or jle divl fidiv jle sub add ret shll mov push cwtl movb add (bad) js and jne or jno mov jmp or jmp pop loopne inc fdivr iret sbb nop xor lahf or push or lea lods mov sti sbb adc aas adc cwtl fbld add xor pop iret xor mov in pop mov or roll lock cmp pop (bad) negl pop mov popf mov lods and push dec mov mov int3 enter cs dec aas aam call in push cmp or test mov push orl inc orl imul lea xchg add loop pop mov pop xchg mov stos pop mov dec arpl bound inc loop in das pop add sti inc movl test insl and xchg pop leave sbb (bad) int xor shl xor addr16 pop adc sarl jl leave mov push pusha call jp jns jge pop push and mov or jnp pop mov mov add inc enter jno mov test or mov push add (bad) cmp or sbb test cmp and enter faddl push and flds and mov sub sbb int jp inc bound pop adc add lock adc or dec sub push loop test pop jle pushf rcr xchg std fstps imul and imul and adc and pop imul adc adc adc fldcw and aas scas mov sbbl imul add dec clc add movzbl push lea test add (bad) out pop es xchg jns add movb add add mov mov cmpl dec pop mov mov inc pop aam jb push rorb or loop add cmp pop (bad) jo adc sub shrb fs ret mov push out cmc adc mov jnp addr16 xor adc mov insl scas cmpsl jmp sbb (bad) fldl or loopne mov int3 in daa inc mov dec cli add (bad) repz je push add push pop cmp push outsb inc push (bad) xchg mov movsl inc and (bad) enter stc add add ja push push push jle leave push dec sbb push and dec lock sbb jle inc sbb mov dec test or and cmp rorb lcall inc cmpb jne pop cmp pop in push shlb leave movsb fldl or push push daa pusha add mov inc sub mov cmpsb jle ss and aas xchg or imul fmulp cld jo sti dec add and push in or xchg jo add in push mov add inc pop cmp fistp sbb inc mov fmull aad and lods inc (bad) mov pop dec sbb fdivl xchg sub loope repnz sub mov int3 (bad) clc rcll inc call mov jo push push push and dec cld or orb clc xor inc data16 sbb dec mov and (bad) add test push (bad) mov fcomps xchg js pop addr16 mov cs push pop add jp daa mov and mov bound (bad) jmp movq mov (bad) orl fdivl inc mov sbb pop inc push push push cmp sbb add dec js mov mov or repnz fs add leave push xor adc inc add fsubrl mov push movsl rolb int3 cwtl mov inc xor stos popf and repnz or inc je push insb push add or jl cli stos add mov or sahf add int3 aam int3 adc ret (bad) scas sbb or clc adc fmull popa clc (bad) shlb or mov (bad) sub pop or jl test shrl and sbb mov adc mov cmp mov cmp jb shrb mov jle mov pop and dec fdivrs adc push add inc push je fdivl cmp jge xor lds out cli dec test push jge call or mov inc das jl loop sub fcoms loop fsubrs jo loopne jo push push aam xchg pop sub fsub inc dec mov cmpsl fist cmp jl xor or fdivr hlt gs into sbb jecxz push ret roll hlt jae int3 (bad) pop xlat push inc add jg add cmp pushf shlb push mov mov xor das mov sub mov cmp push xor mov (bad) ss sbb aam inc inc les mov mov push or incl pusha push adc xchg mov jge mov rorl cltd jbe mov or push mov xchg in push push (bad) fnstsw ss xorps push cltd sbb movsl inc sub sub pop jns in lock and shl inc inc and in xor test test xor fldl push cmp in les lock xor faddl jo loopne subl imulb imul outsl insb xchg imul sbb xor mov pop decb mov mov or lods stos or pop dec pop shrb jo mov fucomip rcl push cmp sub setne sub iret (bad) jo or mov ja push lock lea and inc add cmc jns sti jne mov imulb mov jle cmpsb out xchg rcrb (bad) adc add pusha push jno sub jl pop test cmp pop adc into fist aam sarb aad mov rcrl sub pop inc and xorl push aaa jns pushl mov xchg movsl stc bound pop or cmp dec repz xchg test sbb outsb enter sub leave orl add icebp orb test test add add cmp push or inc mov cmpsb push inc push js inc add sub jb adc cmp pop or mov rorb dec js sbb inc adc test sbb cmpsb adc mov or in decl pop jne lret jne test xchg push cmp je mov mov inc mov push dec fs mov aaa push adc xchg dec test sarl pop dec fiadd (bad) pop dec and test imul xor outsb sub cmpl add shr dec movsb in call sbb jb push or popf sbb mov imull ret (bad) cmp cwtl sub mov cmp jae ret int3 add push push cs imul mov jnp mov ds pop inc jle mov cmp sub push jge clc test cmc xlat mov sbb cmp lcall lret push orl call add lret or dec sahf out dec andb mov inc pop dec pop mov add sub mov in scas imul push into mov lret mov cmpl xor fbstp scas sbb jmp mov mov cmp xchg test adc arpl xchg rcrb int3 lea pop clc ja push sbb stos mov adc roll add jns js xor xor and add mov adcl les pop sbb cmp jne mov aas icebp xchg mov cmp push cwtl andl mov int3 dec dec inc lods xchg mov and lds (bad) or dec or test pop jl lcall add sbb inc jmp xchg push sub push xlat nop push dec mov subl movsb mov in or push inc sub aaa daa xchg xor les jl jbe in and pusha sbb sub fiadd dec adc (bad) clc and hlt and dec sub shlb ljmp fadds jg mov mov xchg pushf inc loopne pop cld (bad) repnz cld inc cmp or inc mov je lret fs push xor test pop sub out rcrl adc and xor jg cmpl jl nop pop cmp mov xor mov imul pop (bad) push pop dec or pop rorl mov sbb pusha xchg pop mov out and lret pop dec mov cwtl pop pop scas push fs loopne mov xchg add or or sbb sti es or inc sub dec adc loope pop cmp nop xchg jmp sbb xchg jl push inc push sub add test movsb jne mov scas push jne jbe push xchg iret scas data16 les test cld aaa es pop cmp jnp xor mov pop jo sub or sbb je cmp in mov mov imul lods push push pop inc mov fnstsw arpl adc outsb jp dec inc xor enter ret pop roll mov in add das push push sar loop sti sub jne (bad) lcall mov fld inc cltd nop cld sub or outsb xor cmp sbb stos lock jb or pop jp push or mov push aaa into mov mov xchg cmp adc mov aaa mov xchg nop cli mov repnz jmp sar dec sbb adc cld mov sbb add add enter pop push add nop cmpl cmpsb and ja add cmpsl inc cmp sub int dec xchg je les adc dec pop xor or inc lods nop add jmp ljmp iret test cmp cmp cltd mov jne ror mov cmp add push movl aam test out pop xor in sbb (bad) test sbbl scas (bad) ficomp or mov inc add inc cmp adc or lea adc adc ljmp inc ret mov adc rcrl test enter rcr fnstenv pushf in sahf movsl jnp jl ja inc imul rolb sub adc cwtl sbb or adc xor sub adc pop lods cmpsl mov push (bad) jo push inc jnp aad mov push call pop ret adc cmp cmpsb pop aam push aas ret pop add adc dec and loopne pop ret push movsl sub push xchg dec lahf and cmpsl mov and xor aas rcll push adc stos cmp or dec loopne and mov (bad) jmp mov and dec xchg push mov mul jae mov cli dec cmp pop and les jbe dec xchg dec aam mov ljmp ret adc movsb lock inc out push sbb xor test repnz and daa rclb insl hlt jne es (bad) sbb mov cmp loopne rcr mov shrl push or aaa mov lea cmpb jge js cli cmp out in sub ds sarb and cmp adc mov and loopne adc add lcall dec inc lock neg inc loop sbb or stc mov pop or sarb mov dec mov cmp fisubrl dec rcll xor xadd insb add cli dec cli fbld mov and push mov mov pusha push fstps push xchg jl pop es ds int3 mov ds mov or (bad) fstpt fisubrl fs or and adc std adc jle add inc push (bad) (bad) loopne lret fist dec add mov sbb in int sahf push sbb push lock fsts mov adc popf jp fiadd push mov cmpsl sbb ss lods jbe pop fdivrl lcall in cs sbb out scas popa mov push add js out lea xor add add ret (bad) mov movsb ret xor cld movb pop popl mov lock dec xor cmp jge mov sbb mov jbe and add push cmpsl xor push cld and fsubl repz jne lods jmp pop ss sub and pop dec sbb (bad) or pop not xor jbe mov xor inc add jae push inc decl jne cld adcb xorl jne add (bad) sbb cs pusha lea fcomps mov shrb lea aad add mov (bad) dec imul dec add add adc push fdivr inc inc imul adc push test mov imul add add arpl es imul clc cmp ret cmp stos inc insl push cs mov add sbb or jl adc mov adc jle cli xchg mov cmp aas push rolb cld or sbb adc sahf adc or add cmp mov push sbb lcall mov lds insl sbb jmp movsb imul test add lea mov jne sbb add mov dec xchg and push jge lods sbb loopne adc and fsubs adc in pop jge movsb rol add shrb mov mov or cld push (bad) jl adc rcr ss adc cli and adc cmp mov neg jle dec decb cld dec (bad) pusha push cmp js insl lods adc and xor stos mov mul adc add sbb adc pushf xor repz sbb xor sbb (bad) jne (bad) pushf mov cs sbb pop addl rclb push in pop fcmovnbe sbb aas sbb xor icebp mov out and sbb push push xchg inc ret cmp negb push cmp push cmp sbb cmp outsb inc dec cmp not dec push xchg and adc sbb mov fildll out lret push bnd xor subl push decb fst add adc cli add (bad) jne adc mov sbb push add stos lock int icebp pop stos mov test push fisttpll cwtl int3 ljmp or (bad) add in lods jae (bad) xor fstpt addr16 xlat and mov inc pop in shr fsubl aam pop xchg lods xor and in push in mov push pop sbb lods mov (bad) sbb sbb lods mov rorb lret aam sbb (bad) jge ret jmp mov dec adc inc add add fdiv xor adc push mov and dec pop sahf ss jmp dec push fwait pushf mov add cmc (bad) sub mov add push pop jno adc cmp jmp lcall push mov mov push inc pop rcrb xchg pop hlt and mov inc dec aam ss or (bad) rolb and jo ss fs shlb add mov or pop or mov out inc mov jnp add mov sbb cmpsb cs cmp iret dec rorl movsb in sub pushf cwtl sub push in sets sub xor adc push test js xor ljmp addr16 pop cli (bad) push mov sbb std push cld mov subb push adc iret sti push cmp ret mull stc in call mov adc adc push lock stc mov sbb xchg push stc std and mov pop push std cmp jnp ss or dec pop ret or ljmp sbb xchg std xor pop add test cwtl fucom rclb mov ss in cmp cmp sub cmp jo jecxz loopne pop cmp jp hlt ret jmp lock (bad) pop int fisubl cmp lret (bad) jbe add pop add add xor push pop push popa incl scas adc addl outsb sub add mov add cld rclb test popa loope push cmpb mov mov adc add ret mov ss lcall stc push call mov cwtl sbb loopne sub cli cs or jnp mov dec cmp cld inc lcall int3 mov aas add data16 fcomps lock add jne push (bad) mov jp adc je aam dec je ljmp push bound dec test aas and xchg mov push cmp subb or pop repnz mov push sub enter ja mov out clc es xchg jnp cmp adc ds test jb lea call push leave cmpsb fistpll or dec sahf mov dec fst push or or adc dec add sub or pop jae xchg loop xchg inc add inc sbb add or adc pinsrw enter jo ss dec fiadd aam (bad) mov or mov jle adc add js add mov mov push add and in orps aas test inc cmpsl mov mov inc or cmpsl ret cltd enter ret les add movsb je add pop shl shlb add sbb mov push popa add es sub cld xchg push loope cmp or add call adc mov mov jp in test push mov adc in inc test rorl test js rorb js add mov stos mov sbb add inc loopne,pt push sub or test fwait sbb cld xchg jno push mov xor mov call adc sub mov adcl push call add fmul fidivl cmp stos rclb ja adc movsb jb adc fcompl add jo adc jne xor (bad) negl lods test (bad) mov lock ficoml or arpl mov mov scas jo pop add iret lahf push js adcb loopne ret mov test xchg push dec aam pushf pop sbb push shl or fisttpll or add inc mov test or inc mov loope sbb adc push add rolb and rorb fdivs jo jo pop clc xchg adc sub push add adc sarl int3 imul xchg pop lds nopl pop bound add ret mov and cmp js cmpsb scas and xchg sarl mov enter sarb jle dec add popf lret xchg mov lods nop or adc jo in jle enter add inc hlt cld cmpsl out aam mov jae add mov outsl sbb jo sub dec jg lcall dec in cwtl sub adc (bad) test sbb adc enter or in lds jecxz pop xor push hlt sahf rorl dec add sbb jo sahf cmpsl pop push repnz into dec stos (bad) adc jle push mov outsb cltd mov cli push mov pop add ds and adc pop (bad) pop imul dec push mov mov pop inc rorb and sub negb outsb jne cmpsl imul sub (bad) jbe cmpsl ret push aaa ss aaa add lret data16 je cltd sub push ss mov fisubr or lods or mov add dec xor mov add shlb fcmovbe mov mov lock insl push push mov loopne add inc imul fwait lcall pop jne pop loope popf popa or jl add jne inc add inc add or fistpl hlt mov and imul xlat xchg sbb push cmp push cmp add push push and cwtl sub repnz push mov insl xor aam push int3 sbb sbb jge or or jne scas aaa inc add mov mov test xlat scas push les into pop jbe adc push addr16 adc dec jne test enter (bad) in mov and icebp data16 lret add cwtl sbb pop imul clc clc push jns or dec sbb test add mov and call bound sub in cs cltd fnstsw mov lock ficom sbb adc push jo (bad) inc sbb adc sub aas and mov pop js xor ret push jg mov push js int3 hlt add inc orl or pop push ret dec js mov mov (bad) sub jp in add sub sbb gs ds repnz sysret js aas fmull jle lcall (bad) dec push dec clc mov jne push cld lock inc (bad) (bad) xor clc jp cmpsl mov sbb add push push or sbb test rcrb in shrb or gs movsb push mov aam aas int3 in (bad) mov jns sets or inc adc loopne lods loop sbb sub jnp adc or or dec loope mov mov ss push lock sbb clc mov mov and inc fmul push jle idiv cmc fcom pop lea repnz call (bad) in in mov js mov lods rclb js enter push xor pop mov push pop add or (bad) or (bad) jne js sbb pop scas adc (bad) and adc lods fcomps add cs and lock sahf rcr fmull idivb pusha repnz cltd cmpsb jb (bad) enter sbb fcoms lock mov (bad) ss push pop shlb sub or or mov xchg mov inc fs add aad scas xchg fisubrl mov pop out push lcall (bad) cs mov gs stos xor in sahf jae cmpsl repnz faddl pop pop push xchg push push add testb push sub mov int3 or or sbb testb dec imul push mov push clc ja rorl push out es jmp or pusha aad sub sahf (bad) clc adc mov xor mov clc inc sub pop fidivrl xor sbb sub es shrb xor push push adc xor inc mov test mov cmp xchg push enter sbb sbb cld add iret leave leave orl xlat and or or sbb push pop out test mov and cmc imul fdiv pop add adc call ljmp add add es faddl data16 adc cs and loopne ljmp sub jge pop es xor push xlat xor push push cmp in xlat sbb pop jl imul lods jge ja ljmp fsubrs pop or push fwait mov dec scas jl mov xchg inc lock pop mov fstps or cmp pusha and or or pushf sub push or or dec in xorb cld clc in cmpsl nop xchg mov rolb pushf xchg cwtl push xchg push sub jnp push sbb daa hlt jb mov inc sbb xchg jb lcall jnp sbb or lods cs pushf or xor xor clc dec push cmp jbe test inc add dec inc sbb push xor and inc or les mov inc call jnp rcrb loope scas inc enter mov addl sahf sbb std cltd add jne sub mov cld dec sub int3 int3 add mov rcl push or push loop xchg dec (bad) pop cld or jns mov lods fildll add into or call bound add add lcall xchg mov (bad) jg mov rorb push adc imul rol mov jns jbe mov cli mov rdtsc mov add jo add test test or or sbbb rclb adc cli mov lock jb jne mov jae or mov mov sub push popa and dec sbb mov sbbl jnp jo or in jne dec jb inc gs or in adc inc loopne clc cmp je movsl sub lahf inc daa push jmp adc dec mov pop mov lods inc rcrb or fdiv adc inc div sbb mov (bad) pop iret clc inc push into sbb adc shll xor xchg jno push arpl in pop out fwait pop lret repz pop rcr xlat push pop cs xor outsb aam pusha and in stos int3 les into sbb lock sbb jo xlat inc adc sbb addl sbb xchg mov out cpuid repz push repnz inc ds sub clc movsb fdiv insb mov movb mov sub stos mov mov push fsubrl adc out or add adc repnz pusha mov push rol sbb testb or mov mov pop inc push adc sahf inc jb subb adc push rcll loopne ret add adc adc popaw mov sub ret and int3 add lock add addb les pop lahf sbb jecxz mov shr int3 (bad) sbb popf dec or addl xor jecxz add mov xlat popa jg push aaa xchg jo rcll adc push rolb jne mov add xchg in xor (bad) pusha (bad) xor sub cmp sub fild xchg jl or ret out add int3 push movsb push (bad) sbb lock fdivrl inc and pop loop sarb sbb in loopne les (bad) mov jbe loopne mov add mov loopne or jmp dec int3 cmp push or call mov leave leave add add pop jp mov sub and lahf shlb xchg movl jb sarb xchg aas jle xchg mov leave adc and sub addl rolb adcb enter loopne aaa mov clc lret or sarb add adc sbb sbb adc add or loopne loopne jg loopne sbb dec sbb xchg fdivrl add dec call aaa inc in es clc adc sbb adcb and orb adc adc loope daa sbb mov orl aad xchg shr inc cld std push test adc scas jp jne (bad) push pusha add pusha push fadds pusha ja mov std adc ret xchg cmp int xchg call pop lret inc and lahf sbb rcr loopne je jmp mov or adc push pusha pop jge pop and adc inc sub mov and sub sarb inc xchg out inc pusha test out cmp dec pusha (bad) add ja out loope clc and cmp lods rcrb lods jne,pn repz lcall mov stos inc mov mov mov jmp mov push inc inc mov rcl inc loopne add pop daa lock push incb (bad) in push or mov xor add pusha imul and xchg lea das add or or (bad) jge jne sbb jge add add xchg inc add rorb popf sbb loopne mov cmp pop jmp cmc inc push add fsubs shll fsubl sub mov int sbb call (bad) data16 lret (bad) pop fcomps lods xor push add pop sbb icebp ds cmovae adc out add xchg push ficompl pop into add jecxz test jnp cwtl jmp mov rclb sbb (bad) and (bad) sbb (bad) loope lea sbb hlt push into and pop addr16 loope in xchg loopne repnz sub test loope push mov mov inc rolb inc nop enter rcrb nop inc enter nop inc push ror loopne insb sub jmp adc mov (bad) jo xor ret andb pop test jo test add fnstcw or clc inc xchg call push fsubrs out mov rclb or adc leave push pop or pop icebp hlt aaa sbb repnz adc sbb clc push mov sbb sub aam call mov popa sbb int3 cmp sbb out loopne add push popa mov jmp outsb pop sbb xchg sbb adc sbb mov xor loope xchg sbb and add addr16 pop add sbb popa xor (bad) pusha and (bad) or subl lods sbb fistpl rolb add addb rcl aam lods jno push scas jl lods repnz adc mov aas (bad) sbb shl add (bad) idivb in lock mov and sbb pop imul lock push sbb test push inc ja adc rcll loope jge int push xor cmp sbb and push ret mov insl (bad) rol test subl xor jo cwtl les sahf push rclb jb xor data16 subl cli add add shl (bad) cmp pop push mov inc mov cmp jl push mov (bad) dec push stos or in dec xchg (bad) daa jmp test or or fcmovnb in or cmp sbbb xor cmp jecxz lods shll or or insl ret sbb push sidtl cmp adc xor loope sbb dec cmp sub loope and movsb fistl adc jge ljmp dec add js pop jno jmp cmp mov pop shlb dec jne xchg cmc imul aam mov jo les pop pop sub incb add ljmp add add pshufw cli mov sbb (bad) das aas or inc adc jo mov sub sub xchg sbb sub xor xor adc jg inc repnz sti enter mov push add jo outsl cld pop pop push orl test add adc incl jno pop pop leave inc add mov dec aas pop sbb add add sbb xchg adc pop lahf inc (bad) cmp push or adcb add cmp lock add inc test lea insl dec adc test js lahf movl or jns repz pop fadd mov add fildll js leave push inc sub adc jg in icebp jl push lea cmp addb mov xor push or imul cmp jb dec call cmp xor or mov cltd push fimull xor mov inc and loopne fadd cmp lret or subl mov movsb movsb (bad) popw add pop or inc lock dec adc fistpl dec (bad) repnz add or sbb cmpl jle mov or mov lret dec sub imul aaa push or dec xor add in jle out pop pop ret pop adc je fld rorb rol xchg xchg mov js (bad) mov add inc in jg cmp pop mov dec (bad) shlb pop pusha imul dec sbb mov sbb (bad) mov push sbb push add or cmp xchg (bad) push enter xor jnp and fadd rorl pop xor pop or inc add nop adc daa dec push mov mov aad push push mov dec (bad) es or or mov push push mov test sahf and clc or inc xchg inc or and or adc in xchg mov (bad) jns add adc mov ds cmp (bad) mov imul mov call xchg jl adc or xor jge sbb push add (bad) cmp xchg icebp cmp jae hlt sub sbb inc adc ljmp ljmp add add push jmp xor jge,pn jae sub mov adc hlt pop clc jns das add adc sub bound sbb push into or je (bad) clc nop (bad) out hlt cmp cmp nop int3 int3 int3 test dec xor (bad) out pop emms adc loope stos or ud2 add adc ret jg addb lea cltd or adc dec sub loopne mov add dec pop inc jb hlt cmp pop add enter jb imul add add cltd mov or mov pop xor or test jo icebp popa and push mov adc pop ret add add and mov imul pop aas and inc inc iret lock xchg (bad) mov cwtl jne dec inc clc xchg pop lea cld idivl xchg lock jg (bad) mov mov mov jl sub in inc add cmp or add or xchg jne clc mov cmp fldl repnz sub fstpl repnz push add dec stos sbb (bad) xor out adc or loopne or add sarb rcrb lahf cmp xor dec inc xchg mov lods and andl adc and imul and sbb add es fwait sbb ret ds add syscall mov mov pop and inc mov pop push aad mov ja jg add adc repz add xrstors js dec adc nop jo mov or sbb imul imul imul cmpsb imul outsb lcall js sbb lcall and imul lcallw add adc sub cwtl adc cmp pop imul push jl push sbb xor mov mov or sub cmp push add out gs cmp or and pusha arpl sbb jo push cltd sub or fimul pop and sbb pop adc or and ja inc sbb and loopne arpl cmpsb cmp or sub sbb ret dec (bad) fs loope aam dec or jbe lods movsl adc add lret imul iret add nop cli cltd enter cmp mov rorl add (bad) pop inc mov sub stc cs or sub pop push jmp sub mov rorb push or push push rolb jge sbb lods call adc (bad) pusha pop sbb jmp or push xchg movsb adc cltd push pop pop sbb push aas cmp inc aaa test mov and xchg imul inc adc mov fadds add mov push imul and shlb dec push adc xor (bad) fcomps push pusha add and mov inc jmp mov or (bad) push or xlat mov insl or push lock lea out xchg jle and daa lea mov mov add adc inc or out fcoms push int test inc rcrb (bad) hlt xorl sbb enter mov xor (bad) call add adc sub (bad) adc cwtl add add add pop add loope push sbb jbe ret fimul or push fist fildll cmc push lods call xchg pop test or dec xlat out adc push test or mov dec dec xor or mov sbb jl push add inc ja mov test adc mov or (bad) push cmp (bad) lahf cmp pop adc xchg jge rol mov push add xchg or pusha adc pop and push or push add inc insl xor push push adc sbb insb sbb and rcll adc xchg jnp gs jl fdivrl sbb push mov sbb mov icebp adc lret sbb pop mov add inc jmp icebp adc test or sarl push pusha jl dec xchg push subb pop cmpsb in or mov lret dec or xor rclb xor leave loopne sbb push leave mov and lret mov and inc pop enter cwtl mov mov fs xchg adc lds (bad) aam sbb dec insb rcll push repnz cwtl mov mov mov addl adc jg in jo gs adcl xchg pop loop mov iret and push hlt in or outsl cmp fidivr and lea xchg mov mov pop sbb mov mov out xor mov push add sbb jne jb mov cld inc add add cwtl mov pop pop or and mov call in jle push push dec add lock into pop jo push mov cmp dec pusha iret add cmp (bad) sub inc (bad) push push jle dec jns sbb outsl inc test pop adc add and xchg add pusha add mov (bad) push in out scas dec clc sarb xor stos add cmp imul movl mov xchg loope mov jo or push cmc adc stos cmp data16 sbb (bad) dec pop push mov dec inc je fmuls sbb adc clc xor add inc lods jne pop bound and sub jmp lahf sub sub push adc icebp mov ja adc test xchg mov outsl push dec scas fmull dec xor jne je cmpsb lret imul enter test xchg xor xlat inc rcrb cmp pop iret fiadd push loop cmpsb xchg loop ja ret addb in aam fidivl cltd pop int3 add pusha mov clc dec std mov push jb in cmp sar jne fs imul cmp loopne mov add in out test mov sub inc xchg call roll into adc mov inc fsubl xchg mov jno mov mov and push pop xor (bad) lret lahf and (bad) mov sahf pop shl in cs aam in cs lret call test xchg lods inc in add test xor push sbb sbb rcl sbb dec (bad) pop dec insb inc jne pop or cmp test inc push out aam nop cmpsb sub pop enter test enter int3 out aas popa jns adc fdiv loopne xchg lret in or adc sbb test push ret ret xchg sbb xchg add adc and lahf inc mov lcall xchg sbb enter or or icebp push and push inc fs xchg push push jg or in mov mov jecxz push lock into jge mov inc jmp lcall adc aaa dec mov aas or into and inc stos push cwtl inc cmpsb pusha mov pop pusha mov mov mov dec fisub loopne xor adc xor cmp jl push lcall jb imul test imul pusha ret jae add pop test in es adc inc or and jle dec jae xor faddl pusha mov xchg loopne mov sbb jg and add lock add add fsubl aam in inc pop and inc cs data16 aam dec jae sbb aas sbb inc jb adc and dec xor or int3 adc enter xchg inc test dec mov add cmpsb and jg inc js push sbb stos push loopne,pn dec and jnp add pop pop shll les adcl ffreep fwait nop mov mov stos add jne fistp mov mov fist dec and xchg mov pop fucomi aas add add cs pop fmull and and faddl xor jns test pop fisttpll push sub pop fs pop out sub cmpsb test test pop and addl push lods inc or push jmp pop pop and fs add cwtl dec mov sar push push adc jg dec rcrb add out pushf jb pop push inc inc shrl arpl mov pushf jp pop sar lahf sar sub pop daa xchg movl or and and sbb (bad) lcall and add dec inc pop enter add cmp shrl repnz addb or push insb dec or or mov add pop inc enter into sub in enter add in shrb je pop shlb push nop add dec add mov push mov dec inc scas (bad) xchg inc sbb dec faddl enter and fstpl add mov inc enter mov cmp xor inc dec cmove push lods insb in inc and add mov daa sub sbb and dec les cmpl or pop and mov adc dec mov and fs ret rorl jg mov push es cmp (bad) fwait mov (bad) and pop pop gs and in mov loopne pop add sbb and repnz es jmp lret and std mov pop jb mov enter lods inc ret mov jg iret or xlat push mov mov lcall xor sarb xlat jbe push lea cmp cmp push js sub push fwait add daa lds cli adc cld (bad) push roll jecxz andl or test scas mov pop ret or inc enter enter loopne enter loope add enter cld adc mov je mov inc xchg out out mov (bad) xor pop inc sbb aam dec nop push jne mov test fist add jo push mov and dec xor adc pop in insb (bad) sar stos nop push xchg jo ja rclb mov cmp add dec jmp mov loopne arpl outsb and cs das push or lock inc sbb add xchg sub cmp out cli or push mov sub cld mov or movsb add lods and and inc or add mov inc cmpsb (bad) and and or nop mov mov jecxz fadds pop xchg push mov sub mov cmp adc or inc jno dec inc add pusha shll pop add mov fildll mov xchg test sti add or cmpb jno pop adc enter imul test adc mov fistp fsubrs sub dec pop (bad) js push sarl sub sar dec xchg nop in ficom aad stos sbb (bad) cwtl add shl cs cmpsb movsb out out inc inc lds inc jle or dec xor lea sarb add or cltd or add sbb subl mov lods adc pop mov pop add jns in add loopne ljmp andl jecxz cmp (bad) insb ljmp jg test add pop roll sub pop fildll inc push enter pop and jbe pushf or adc mov add addr16 fnsave push pop sbb inc mov jg add cld fs and cld push (bad) mov push stos lcall and rorb pop add dec adcb add rcrl lds shl lahf mov out movsl add (bad) xchg (bad) add inc xor or or xchg pop (bad) sbb fs xorb sbbl je sub aam xchg and or outsl (bad) ljmp mov inc sbb and sbb add dec push mov dec push add dec test inc add pop movb movsl jo push (bad) je (bad) mov fistpl xor sub lahf or lea jp xchg push jmp add inc mov push dec enter fadd or rorl jp popf and xchg adc and cltd dec into aas mov les outsl sbb cs loop and or adc mov add test adc pusha in aas cs call sahf mov add dec push cmp push add daa dec movsb rcrl aam and push test mov jmp sbb sbb push sub mov xor dec cmp jge mov cmp fcmovb pop (bad) std add popf scas sub xchg mov or cmp jge mov add cwtl call shrl imul insb std and fistl or add test movsl mov test data16 xchg adc mov loop add or test cmpl add lock inc cmpsl mov icebp xchg test aam dec adc pop jne pop pop sub mov mov add call inc jo shrb sbb jl push nop mov sbb mov rorl sbb push (bad) std loopne mov rorb pop push cmpsb rcr (bad) fnsave pusha push and and or jmp stos xchg adc add mov (bad) nop xchg and movl aaa xor push or jne aaa sbb add into xor adc lods into push add lods cltd inc push or xchg dec add push jne cmp add rolb or inc or decl jns insl inc sub (bad) fild xchg in ja dec cmpl test dec jge jp or xchg movsl aaa loopne or insb ja pop and inc push inc mov test lret clc cmp pusha adc inc lods xor bound test xchg ret js test push adc repnz bound add jne xchg js mov sbbl add xchg jo cmpsl and scas adc or mov add hlt pop cmp (bad) repz nop ss sbb inc jmp je bound rorb loopne (bad) ja jge inc mov lret inc pop inc in and (bad) popl imul mov enter mov inc stos and jne inc ds add ret adc and push push in not push dec clc loop (bad) xor loopne add lods test repnz inc or push mov les hlt add (bad) into adc mov pop loop pop sub loop push and or je (bad) and add sbb lahf adc mov push adc xchg inc cmp add lahf adc xor add aas sub (bad) or xor mov popa pop lods aam lods inc mov sbb jno xor mov pop cmpsb add in push roll sarb xor ja dec loope lds or aas jmp cmp hlt or in (bad) or popf xchg or pop mov dec jbe mov or adc dec lods stos (bad) jl adc popa or jne fild sub ds (bad) or lret cmp mov add roll popa lea xor sarl dec int3 jge jb sbb xlat aad jmp xorl sahf adc les ja movzwl jmp aad add mov sub pop sahf daa pop mov inc icebp mov add xor outsl lea mov mov add icebp xchg add rolb adc lea or cmpb pushf sbb pop test add and fistp sub aam fnstcw jno aas push cmpsl leave push pusha inc fiaddl fmul imul cmp jmp pop rolb popf add into inc pop inc clc sbb cld xor ja add add or sub adc sarl arpl pop jg add push add out (bad) sub imul shrl rolb mov enter fcomp and fistpll lea pop sahf xchg push jle sub fstps nop dec cmpsb imul or lock mov jne cltd (bad) sub push xchg flds inc fstps xor mov lock out pop mov das jmp sbb fiadd rclb inc xor mov lock and inc call sahf and fldl push add fmuls call push lock hlt sbb popf mov fldl push dec fstpl jne or add inc xor inc int adc sbb (bad) out push ret and inc and pop imul add in and js cmp adc (bad) fstp pop (bad) bound inc movsb mulb cmc push mov cmp push jo jecxz xor and test xor xchg or mov xor and out add add push add add aam sub add je test sbb add jge adc (bad) xor jo or add sbb loopne push je push pop mov add and ret aas add sub sbb mov push pop ds pop cmp adc sub jmp push iret movl add (bad) lock xchg sub xchg adc push and enter bound int3 fcomip xchg or mov ret adc adc enter call mov stos inc sti pop ja hlt or mov fsub sbb (bad) stc add test mov mov aad sub push inc jae daa mov and mov sbb imul addr16 adc mov popa jno mov adc adc les test sbb jl out add dec add mov fldl add stos sbb test push ret sub adc push push imul inc or ss adc add pop imul pop stc inc (bad) adc inc xchg xor adc push icebp adcb add imul test push xlat sti sbb dec add aam push or sahf push (bad) inc outsb add orb add popa jecxz or push movl adc lret sbb dec dec sbb jne mov shrb ds and add adc push cmp push push xor lahf js pop adc outsl aam xor imul sub lret sbb push clc mov or inc imul sbb or or mov ds mov add mov inc dec clc xchg adc repz mov enter push adc mov sub in addb add sub sar icebp scas mov adc push pusha xor js inc adc int ret adc fcoml inc inc adc addl fstl mov add or pop pop and add sub int push cltd inc mov movb pop sub and xchg adc lea nop push add dec in pop and pop adc add or sub mov sub jecxz add mov sub lea outsl or pop rorl add jb adc mov push adc bound cwtl or push xchg mov sub lea mov lret add mov movb sbb xchg (bad) lcall push add sbb inc dec fwait push cmp and orb adc jns jl add adc jns push lods or repz sbb adc or and xchg loopne add push sbb push adc or lahf jmp sbb in and aad adc jecxz es and mov jae mov jmp sub add sub mov add test rorl pop mov sub incl mov push mov jne stc enter test xor push test pop cwtl mov push ss js insl cmp add adc (bad) test aam movl hlt mov and daa inc or sahf adc sbb sbb mov sub or mov lods jo jl rcpps out sub enter inc loopne lcall addr16 dec xchg xor rolb icebp dec pop xor subl mov pop jnp into adc hlt fistpl insl add dec shlb sahf or rclb push cwtl mov xchg adc mov jne jne sbb popf mov mov js insb sbb test mov mov daa jb (bad) loop lea sbb dec mov mov rcrb fucom mov mov lds cmp dec jb leave add pop add ljmp mov insb pop orl adcb mov mov cwtl shl popa mov push rorb int jl add push pop or adc jb pop add cmpsl add push mov add cmpsl pushf push mov addw cbtw mov adc adc fnsave push pop popa xchg push inc add mov jo or dec or int mov test inc pop pop xor cs popf imul lret ficomp icebp aas adc pop xor inc (bad) (bad) ds adc push jnp sbb test add (bad) aam sbb add out dec je insl fcoms pop mov add mov pop or jne push in push stos xchg add mov jno pop sub (bad) pop mov add dec add or inc adc mov push std sti ret adc es scas jne mov inc and popf jae test jne faddl movsb mov adc pop mov push movsl jo push add push rorl mov rolb sbb fsubs mov dec rolb sbb xchg pusha cmp aam mov sub cmc or cld test test cmc inc es sbb outsl push adc movsl lods je (bad) hlt inc movsl adc inc or push jo ljmp test mov adc or or (bad) add test mov xchg dec out push mov xchg lea adc add ret mov push pop xor lahf dec or test (bad) cmp push (bad) pushl mov add mov cmp loopne lret dec pmaxsw or adc (bad) call and add lods add aaa ds or dec add pop push add or packssdw xchg in aam cld add nop bound movsl nop or push push cmp roll ljmp cwtl adc adc dec test lahf mov mov push out or mov cmp nop push pop mov and xor ja xchg lock cmp in and add arpl xchg mov sbb push pop stc and out xchg push popa mov mov sub jne or stc sub sbb push ds mov fadds pop sub add es cmp and mov lods bswap nop movups pop push or ret pushf mov adc pop (bad) pcmpgtw sbbl adc adc lods (bad) push push (bad) adcl jmp sub push push lods add mov loopne jecxz xchg test and orb push jle sbb cmp jne lock or mov and mov dec cmc cmp and add mov add sub push mov pushl push arpl pop enter incl cmp xchg ret inc or add mov test xor inc loopne push pop notb fmull add push mov xchg sub pushf lods inc sub push shll inc cmpsl aaa and and adc pop pop loopne popa movsb pop mov or insl movl xchg cwtl jecxz pop mov and jne cltd mov lods mov jo xchg and sbb out push cmp cmp loop cmp push pusha cmp in aam xorl cmp inc mov add mov xchg mov push jbe cmp or clc add rcrl negb outsl movsl inc int3 mov pop rorb scas daa les pusha jo mov arpl and cmp (bad) sbb adc adc (bad) idiv sti ret cmp push add inc or pop jp sub sbb cmpl xchg mov dec repnz push push pop push dec mov or jbe fnstcw jo dec jno mov inc pop stos add sti loope stos mov insb aas inc pop jo jl cmpsb jge adcl gs adc sbb sbb and or add sub sub push and adc inc push test mov xchg push adc mov movsl push adc sbb test les lahf mov add lahf imul rcrb inc xor insb push clc mov push scas dec mov add add out pop jnp leave ret add outsb js xchg push mov inc (bad) lock xor pop lock add mov sar enter inc sar push (bad) aam fwait jg in or push pop dec and popa call cli dec mov ljmp repnz (bad) loopne movsb fst and pop jo fmuls mov mov cmp (bad) cmovb fiaddl cmpps and mov pop leave mov (bad) in int3 jecxz or and or xchg jg leave (bad) xor jecxz out mov and or nop jecxz pop or out push out mov adc jmp inc dec jae add ss inc xor lock icebp nop push add and in pop add in loopne imul orl movsb mov lods and pop repnz incl xorl cmp (bad) test pushl mov ljmp inc repnz repz or cmp pop push lds ret test imul cld cld pop add nop and leave and cld and adc push in imul inc repnz cmc int3 and jb xor add or jns add negb fistpll jb cmp jg insb add fild inc (bad) mov sub sbbl sub dec aam push adc add lea push inc pop mov mov add or or xlat lea fildll mov mov sbb mov jg mov cmp or add outsb add fmull pushf or mov xchg insb mov fstpl jp outsl sub mov xchg rcr cmp adc ss and adc jo add inc dec lea sub sub and cwtl add mov repz mov (bad) cmp fdivs cmp dec and (bad) divl push xor (bad) push pop or and adc mov add jne lret pop int pop ret ffreep or or ret and mov jl pop jnp clc gs mov or xchg add adc add add or flds inc xchg aam pop and shrb in (bad) or adc lahf inc (bad) fist adc add into and mov mov divl sub adc pop lea pop mov pop push inc sub orb mov or add enter sbb nop pop xor sarl dec dec add aam inc dec aad aaa loop mov pop mov xor scas push add sub add insb or ljmp inc test and mov sbb xor movsl dec dec sub fcom les mov pop inc stos jne pop cmp pusha push xchg mov lods jge sti arpl nop xchg mov pushf adc je mov xchg cmpsl sbb test inc or ds pop (bad) mov int3 movsb inc insb add sbb inc and pop mov movl or mov dec outsl (bad) repnz addr16 xchg fist or call cmp add mov pop js jg dec sbb pop sub mov cld or push rclb cwtl add orl int3 int bound add push or pop and popa add add rcrb (bad) sub insl gs jmp push inc aam inc adc adc sbbl mov sarl cmpsb sbb jne or cmp scas inc rcll aam in sbb push cmp xchg adc ljmp je adc scas lods ds push sub movsb arpl sub jge (bad) mov outsl add mov push mov popa xchg cmpsl lahf cltd bound je add icebp push pusha add movsl fs adcl push sub jp dec lock or mov mov rolb sbb or and in pop jmp push add cwtl and lock add jmp cmovns inc movsl fstpl outsl test or xchg clc or ss jl push rorl test add lret add fnstcw mov lret pop adc and inc cwtl xlat scas pop sahf sbb or stos dec adc pop sub inc sti outsl dec pop dec cmp push cli popf or ret dec and add aad push std adc jle es mov dec inc jg mov cmp jne daa orl push mov arpl (bad) adc and and inc add adc push jge rclb cmp or lods jae and push bound cld push jns sub push and sbb pushf fisubl and test ret push adc push or or mov mov xchg adc push sub add cmp mov push push lods mov xchg pusha sub or push xor adc xchg cmp add je jecxz das and push adc (bad) (bad) mov rorb jae add movsb (bad) fild call push adcl (bad) shl das pusha ret test clc (bad) incb add cmp xor and mov aas stos loopne jmp jge inc popa les jmp jmp push cmp push push mov mov mov fs lcall cmp jmp inc adc xor addl dec shrb testl mov add adc add and clc cmp push enter and add or inc loope mov mov dec sbb or xor push push push pushf add ljmp adc dec or aad adc pop inc add insl pop in push push inc or test jmp lret inc sbb lea push adc shrb cmp pushf int3 add scas push sarl or dec pop sarl jmp push add fs subb cld xchg pusha jo adc dec cmp je mov jb in pop inc bound mov sub lock sbb mov test xor mov les jmp dec push push add mov fsubr push in mov inc adc push (bad) and mov (bad) je shlb jmp or xor (bad) inc mov aam aaa pop inc mov sbb sbb mov ret shlb popa add rolb xchg sub cmp lea test je inc (bad) nop push inc and fadd pusha mov (bad) mov popf jl lods mov lock (bad) jo or push mov xor add (bad) sarb mov sahf out lea ss inc js mov xor je mov or add lods pop outsb sbb mov add sub adc pusha jmp inc push and add sbb fs adc loopne loopne xor and mov rcrb add int3 add test lds add arpl or inc (bad) vcmpord_spd fsts mov and cmp mov mov jo into push addl adc ljmp dec test dec adc adc inc sti push jecxz adc dec mov cmp push sub push push loopne movsb sub mov xor out push ret jb and or in jecxz xor inc and in inc or mov dec sub and lock ret nop or sti or push and inc in ret xlat inc stos in (bad) icebp leave (bad) inc pop push add mov push test sbb stos sub or test xchg femms popa push sbb test mov sbb or lods dec pushf outsl dec and dec push fwait mov lock sub inc jb jg adc xchg add mov inc repz or jg adc lock or jg loopne xchg lock jne push rclb aaa inc add adc or xchg xchg cld lret test ret xchg push dec shl arpl mov lahf inc sbbl orl mov sbb jns fbld leave adc mov mov in push pop ljmp xchg insl sub or cmp xor xchg test mov arpl and sbb push aaa aaa push add jg fmuls ret loop (bad) mov movsl roll test and rorb add jl stos cmpb xchg popf add sbb jmp adc jp add mov jae movsb out std dec (bad) push or jmp gs (bad) adc mov adc add xor leave lods pop add leave dec mov (bad) shrb sahf mov andl dec mov bound adc push dec pop or mov fstl sub add mov (bad) pop leave or mov sub pop add rorl add sub inc dec push inc or iret xchg mov repnz movsb add mov push scas (bad) adc adc bound adc mov xchg jo add push push adc push enter je add add xor icebp scas inc adc imul ljmp les aam jno cmpsb sub sub mov fsts push push pop lahf push insl mov insb add mov push pop mov ret orl xchg scas jge icebp add mov sub jge and (bad) xor sub cmp lea iret nop mov inc dec mov add sbb leave scas dec sub xor sub jg push mov pop push jb xchg sub test push dec popf mov rclb mov sbb adc cmp adc sub adcl dec push pop js stos add mov loop mov mov lcall add or sub and and lcall inc test adc sub and jg and push sub rol sub or pop shlb shrl xor or push dec (bad) mov insb or lea mov mov ss vsqrtsd jg xchg mov inc add imul adc rclb dec ret (bad) jno cmp test clc push pcmpeqw sbb add mov sbb mov popa cmpsl pop mov ss movb call cld (bad) loope inc les jo mov inc stos add jg adc (bad) pop sbb dec jp xor lret mov nop ret stos es sub (bad) and pop mov inc jmp mov pop or push xor sahf xchg xor in lods or jo pop add fnop ret xor mov stos mov mov fldt add mov aad inc ret xorl push pop mov pop or int3 ret add (bad) addr16 rorb sbb sub (bad) sub dec clc ds repnz in inc add cmp jo test jl jmp rorb push or test rcl outsb cmp sub scas call insb enter rolb jb adc ffree lock movsb hlt cmpsl pusha nop pop and mov fcmovnbe pop lahf adc je pop aas pop add sub mov and inc loope push aaa push sbb mov push or sub or push ss sbb add cmp xor pop lea mov add cmp and je jecxz cmp xor sbb dec test (bad) jb into and pop popa imul (bad) out lea pop or idivl inc cmp jne cmp fimull repz popl addr16 call or xor xchg mov xchg nop pusha mov or sbb or pop sbb jp xor inc jl pop data16 clc and mov pop cmp dec xor add xor jne push movsl push or and xor jmp mov xor lret adc pop mov xchg sbb adc mov clc or mov addr16 cs cmp (bad) add jge or dec or pop push jno out outsl lret jle sub push xor mov clc push test mov xchg loope dec sahf stos repnz adcb jb pop mov loop hlt mov call into dec cld jne mov adc inc xor jmp scas mov cwtl pop xor xor push mov and stos push icebp adc notl push fs inc enter mov inc loop (bad) or jne,pt sbb jge,pt add xchg fsubs mov aaa insb movsb mov aaa jns mov and inc add or inc (bad) push rorb sub ret jae dec je mov inc xchg cmpsb dec dec and and mov adcb in and fcomps jg add sbb mov loop mov daa adc push add sbb sbbl sub xor and xchg dec jns pusha mov dec adc je jo jge cmp sbb or sub inc lds lahf adc imul cmp push inc fstps jmp fwait ljmp ror push sbb add ljmp or mov daa and dec mov or pop add xor into inc (bad) aas test adc adc add aas cmc push dec gs mov add push jle test or cltd sub sbb push mov and mov push stos scas sub jne jp sar inc outsl and inc adc adc adc or dec dec sub adc jns jmp add cmp sbb mov daa sbb in jmp inc fcompl xchg pop push add xor je xor adc inc dec arpl call mov or addr16 mov push mov adc out adc jbe jb andl jge add dec sub or (bad) sbb push aam sbb xchg inc cwtl lcall fdivl pusha das jnp mov sub pushf and mov fiaddl push aam cli add xchg mov add loop movl in rsqrtps out inc cmp push or inc xchg jge jae insl out jmp and mov xchg dec fildl and mov and or or cmp popl adc dec xchg or pusha mov rcll lret sbb ret (bad) dec sbb in mov in xchg add addb test call movsb loope insb movsl mov mov outsb push rcll inc pop andb (bad) fprem test dec mov xchg mov out out or cmp cmp mov shlb rcll rcll xchg insb lock scas xor cmpsl cmp mov rcll inc jecxz (bad) cmp cwtl adcl test adc arpl sub test push pop add lods sbb adc sbb dec or fimull inc inc add adc decl iret jbe lea cmp je sub rclb rclb movsl lods lock cli xor inc mov dec notl insb in in mov lahf pop nop jl xchg push lea push bound fisttpl fucom jl or and js sub ret pop fist xchg push rcrl roll adcl loope push jbe mov mov ljmp loopne je je aas sbb or ss les ljmp pop jae push inc xchg jle jo pop pop pop add lcall xor pop push jmp jns (bad) dec ret pushf push inc popa lock inc jecxz clc lea sahf cwtl and add jl cmp lahf stos stos stos sub test sbb adc sbb lret addl lahf arpl mov and add lahf fsubrs addl xchg movsl mov dec mov cs adc cs lds mov xorb insl (bad) sarl push or in imul addr16 sub addb and iret lock fmul xor xor mov clc mov mov sar arpl cmp (bad) (bad) xor pop rcrl pop or jo dec rorl call or pop int3 ret loopne adc test inc cmc adc mov hlt adcb jbe mov add (bad) jbe out xchg pop add js xor fadds fistpll cmp inc xchg adc and jae jp jns xchg pop lea or inc pop loope or cltd mov add xacquire push shlb js fbld (bad) xor stos popf and test enter scas hlt mov mov cltd in das cmpsb mov fisubrl push lret mov add or mov pop dec cmp clc ficom rol stos mov xor dec push add inc add pop adc xchg and shlb jns sub inc leave aas outsb mov test mov xchg out add add adc sub jg push popa cmp cmp sahf ds push inc js mov orl and mov pusha call loope jo leave add or adc mov stc push (bad) adc (bad) cmp push lock mov in push aas shrb rol inc mov movb clc jnp rep cmp jne pop test mov mov fsubl (bad) in mov or loopne popa (bad) ds sub xor lock inc xor icebp out push jae add cmp aas pop pop cmp sub mov sbb or xchg pop pop or nop push and jge inc dec dec out pop repnz rorl mov leave push lock int3 dec or popf add insb or mov xchg inc sbb or sbb jns cmpsb add and push jb cmp jmp push or cmp jle or aas inc mov in test push jnp aas sti jbe and add add mov xchg (bad) repnz add imul int3 dec mov xor and or test inc (bad) mov ffree mov dec inc and push pop leave je jmp push insl loope sub movsl test aas lahf sub mov sub (bad) cmp push or cmpsb and inc push pop cmp cld mov pop lods sahf mov pop scas and mov mov or movl push push iret add and jg adc add mov lea insb sbb (bad) cmc pop mov mov or xor or mov push sub aad adc mov inc sub and shlb xchg pushf and push inc stos outsl test pop or in arpl jns sub add jae cmp mov dec jmp pop and push xchg lods cmp fcomp popa sbb dec ret dec adc lret pushf and je dec lret xor loopne pusha popf add jle mov sub cmp dec adc adc sub adcb xchg push orb pop mov mov test push add xchg fiadd cmp test push cmp sub cmp adc xchg add jo test imul add or call sbb int3 push imul aam test push or sbb push and push pop (bad) fmulp popa or jecxz push pusha ljmp jno loopne adc pop fildl inc and mov and or push add adc or add orl xchg pop mov jl js nop repz sahf pop mov sbb das dec lret or add xor mov push and popl sbb or imul add fnstenv mov popa xchg movsl loope std lods dec mov frstor mov add or bound mov popf mov mov pop pop loop arpl cli mov push mov fsubr sbb jle mov pop jl dec in int3 pop or mov mov sub adc xor cltd cwtl (bad) aam aas mov mov sti jne mov cmc sbb loopne ss rcr rol add and and in (bad) sbb adc push out mov jge (bad) or popa lret or cmp xor mov cmp sub dec pop daa mov rolb cmpsb xor jnp (bad) fstps xchg xchg mov add lret mov lods add lea add add inc sbb or fsubs sbb outsb cmp daa or and xchg stos mov add push sub push add xchg and mov lcall mov subb xor inc add in mov add and and je dec cmp loope loope cld cmp fs push push jno pop pop out push or mov cld aas push push jecxz mov pushf add and sub inc (bad) xor gs xchg subl and aas mov bound sti add das mov jns sub push sub and subl mov adc cwtl pop cmp inc and rorb imul sbb dec lea sbb or subb push subb sub add push jle lea dec inc dec or jno and arpl in imul ret repnz add pop loop es and (bad) adc push add xchg ret aas jo or out add mov adc push or mov xor dec mov add out leave sub xchg pop sti or ret (bad) mov dec sti test movsl add stos pusha dec ret or sbb push sbb mov repz push stos out pop push or int mov sub add jo push addb aaa ret push jns or or sbb test add addb and and xchg mov sub inc dec adc pop jne mov sub andl aas icebp push or cmpsb or and movsl jge and xor inc mov push popf int3 sbb mov dec mov or add and js cmp call mov test or add sub fwait add lods pusha call add cld (bad) add mov add mov push insb hlt fadds push mov dec push clc xchg inc movsb aas add cld ljmp enter sbb mov test mov lods or enter je xorb imul cmp std imul sub cmpsl adc int mov mov inc loope shlb shrb cmp pop leave cmp icebp test or or addl addb mov mov mov add shr jmp or test adc and js jno sbb sub push mov (bad) lret fiadd dec (bad) daa and jo addl lods orl loope dec clc push mov shr test or dec rorb jb fs jne in xorl xchg jo add push notl cmp push mov jb push pop push stc aaa sbb adc push add adc add and movsb xchg cmpsb addl lds jp jae inc aas push dec sbb gs sub jg xor lea push push or push jg xchg add dec (bad) mov pushf leave pop test movsb mov xor mov mov test push sbb add mov mov push push sbb add dec add cmp jmp push cmp xor mov or xchg and mov add aam xor out adc sbbl inc xchg cmp out fs xor or add push mov mov adc xor xchg sub (bad) or ror stc adc addl mov mov (bad) xor pop xor fsubr push inc sbb inc iret addl push jg test test adc or inc std mov imul sub jecxz cltd jp mov sub imul aas dec sbb and ficompl shlb hlt shrb es jge push pop (bad) mov aas mov push push push jg leave mov out push and mov es sbb add shll mov stos dec add ss and push adc adc mov test pop popf and or cmp add xor outsl inc or add inc add sub xchg and dec push push push sub movsl push rolb dec push and xchg movhps popa pop imul mov pop xadd popa and push sbb push pop or ret sbb or rcll xchg data16 jle out enter aas sub pop inc mov xor xor in insl add pop add or push pop lds (bad) xor and mov test test mov push adc je ljmp int3 fmuls inc and repnz ret popa mov cmp xor add icebp mov add sbb loopne andl cmp outsb in add std stc inc sbbl adc idiv rorl and scas mov dec (bad) shr jl ret adc clc loop sbbb adc mov inc notl push xor sbbb push adc adc inc adc fnop and (bad) lock mov dec sbb loop sbb adc pop cmp dec or push mov dec push dec push sbb inc icebp test push out or and fs add sbb push (bad) xor sbb leave (bad) hlt sbb adc or roll push mov mov add roll inc stos mov inc sbb fcompl sbb cmpsb sbb in sbb jbe jo rcl and addb aam nop mov mov mov inc pop and xchg and leave test pop push inc out add arpl inc fiaddl sub add pop ret test loope and push iret xor xchg push int xor xchg das adc add stos push imul mov xor aaa jg or mov jecxz or adc test sbb inc dec imul sub push dec and enter outsb sub cs push jo fiadd xor pop cmc sub lcall mov push cmp pop xor jne repz adc movsl (bad) outsb pop add fild mov loop shrl cmp and mov add and sub andl inc sub or sub adc roll dec test adc push cmp lea mov pushf and adc adc sbb orb stc cmpsl mov add js (bad) cld adc or pop and test pop sub pushf rep add mov inc pusha mov rclb addr16 les add push add xchg pop jbe mov cmp js mov lcall push daa add add insb and add dec mov inc xlat add pop xor mov or jns mov or adc push test loopne push add push add sub sbb add sub or pop (bad) in out es pop mov fcoml enter jbe pop inc dec push jns fmull cmc bound punpcklbw incb icebp bound push aas jge arpl sbb dec ret cmp cmp rcrb and xchg insb es mov bound or dec ljmp popa xor adc mov inc sub cmp pop add mov jge sub mov dec (bad) push add sub (bad) mov nop mov lods lea xor loop push push push or daa xchg bound cmp loop adc test pushf call cmpb lret rcl les lods iret sbb sbb int3 add add jle mov insb jg add add and cmc pop outsb arpl out jecxz (bad) scas sub mov test outsl enter outsl insb xor stc fprem add push ret xchg out test pop xor xor sub dec or cmp test scas cwtl jne mov jnp iret call xchg cld xchg push sbb cmp iret or jge loopne xor aam mov fsubrs pushf sub rclb or dec icebp les ficompl sbb orl int3 cltd jmp pop andl inc dec pusha inc pop pop sub jns stc enter in or popa lahf out (bad) and pop pop enter dec jmp jne inc (bad) std rclb loopne push mov and adc inc add (bad) push mov ss dec pop add daa add ss xchg mov mov cld movsl int3 mov xchg dec call fs arpl incb bound scas cmp pop into mov mov inc idivl mov mov lahf int3 mov mov mov push mov push fstpl mov mov mov sub xor and shrl stos sub dec call loop movsl sbb (bad) add mov loop add jnp sbb enter xor mov iret cmp movsl sahf fcmovnbe (bad) mov popl enter jecxz aas and outsb je jo jg pop and xchg adc adc in push daa aad or add push sub push push jmp arpl jo xor aam mov sbb cmpsl aas push loopne add xchg aaa jb xchg mov lret add pop or lret out jbe inc add (bad) out jb inc add mov mov (bad) shl std outsl ret and into xor add rorl add adc pop push push jmp pop pop cs cmc inc jne mov orl push mov lds jns pop test icebp add ret jmp cmp sbb adc xchg (bad) mov pop pop add xchg push orb add in aaa sub fsubrl adc fcoms sub xchg sub xchg pop xchg xchg xchg jp mov or xor push cmp xchg or rcl sbb or loope ljmp test bound es imul rdpmc nop push les dec pop push add adc (bad) je int pop push pushf jp xchg mov mov cli hlt and leave ss lock popa lods fistl sbbb or or mov pusha add pop in adc or xor rclb lods dec sub xchg sbb cmp std add or insb in push outsl movsb mov mov insb mov xor add sub mov and pusha add sub xchg js in mov or mov test shlb mov add ret clc hlt jne (bad) mov mov push or (bad) lret dec lea sarl icebp ret cmp push push test pop stos inc aaa or daa mov lea adc mov xor dec add pop adc xchg or pop jbe ret sub push pop cmp mov add inc sbb cmp inc xor iret loope fwait and or sub sub stc mov mov icebp pop xchg mov jae dec add xor loop lock aad mov mov push or inc sub adc and push push mov lea mov aam in sbb xor or xor add or stos stos adc mov add lods ret push sub mov cwtl sub psrlq andl aad shll arpl inc insb sub sbb fnstcw xchg mov inc mov adc repz mov in xchg cmpb hlt movsb sbb test mov lods stos in loope xor adcl pusha movsb leave inc cmp mov fcomip dec sub xor lock pop clc push push outsl xchg ds dec add shrl les loop push push push xor add and test and daa push rol dec mov shl test stos inc xor (bad) sbb cmp repz add ja push lea test mov xchg rclb sbb inc adc orl xor (bad) pop sbb loope sub imul sahf or je cmp push dec dec (bad) adc add and cs cwtl loope sbb inc sbb sub stos shll push push mov cwtl (bad) nop or cltd ror inc or jmp or sbb lahf jno cmp and push arpl in jo jae xor push cmp adc sbb pushf das (bad) iret push jo dec inc shr adc or dec addl test inc inc inc sub mov rol dec xchg and jne inc pop popf inc push inc ret inc sub inc push jo sub inc xchg jno sbb pop adc imulb mov mov mov lcall mov stos leave lret cmp xchg mov pop nop out rorl push nop andl adc cltd dec dec fiadd into dec xorl pop push adc xchg iret adc fisttp adc add rcll adc xor in lret mov gs dec orb or sub inc dec in xchg or dec dec dec pop test mov (bad) lds jl lret inc or adc and pop lahf fiadd fildl sub mov inc mov add iret push icebp push aaa cmp out and sub pop mov hlt cld sbb push sub push repnz jno test push push rolb or add enter lahf fsubrs add dec jbe mov adc inc pop or inc repz push or push push pusha test push leave push sbb cltd push push push roll or movsb int3 xchg add push lock mov mov idivl mov jne sbb mov mov inc cmp xchg jl ret pop push and pop pop pop jp and push jmp call repz push lcall cld and jge call enter mov cmp mov mov ret rorl xchg outsb mov mov test inc xchg movsb dec and and fstpl or or push jnp fnsave test pop pop cmp or sbb pop inc imul leave add js pusha popa and jne push dec arpl or xchg pusha xor or jecxz mov in sub cmp cwtl orl ja push lock jne in mov xor test inc mov add jg mov test xor adc sub add sbb push lods xchg lret mov lods mov jecxz mov xor mov mov mov and push inc pop xor push adc mov orl inc and push cmpsl (bad) jge mov dec cmp xchg push and push rcrb loope inc lcall or jns mov add cmpsl push xchg lea (bad) mov cmp sbb bound enter mov loope jg cmpsl adc leave daa insl xor sub int add cltd sub mov push jno add sub inc mov in dec xor aam dec cmp fwait aam mov push cltd and arpl add and dec adc push pop xor cs xor movsl lea sub adc inc std push mov test imul or mov test cmpsb fs sub test into mov xor or pop cwtl sbb push lea jecxz or loope and in (bad) leave push add repz imul xchg mov rcll in push in xor add rolb (bad) jecxz xchg lea mov ja add xchg cmp xchg push mov jmp int3 scas cmp add mov addr16 sbb sbb push in pop sbb mov imul jo pop repnz insb outsb dec faddl mov scas cmp inc movsl inc xchg pop cmp loop inc imul mov cmp add inc add cmp and cmp (bad) adc or lods push aam ret cmp repz sub sub repz repz push pop push (bad) iret test fucomi imul push add add pop push add cmovle imul sub dec or inc fsts push push xor add imul test cmp leave sbb cli jno mov mov cmpsb push mov add clc rcrl push cmp call test push nop in add popf fs insb cvttps2pi push jl xlat push and add dec sbb shr and dec pop in push stc mov or lock in adc xchg or sarl je cmpxchg fiadd and mov aas dec pop cwtl loopne cmp inc pop fwait or inc jl lock add mov rorb out dec pop das pop mov inc cmp movsb (bad) jb les mov inc inc inc push xor add inc inc pop (bad) lods jl inc inc inc push sub (bad) rolb inc inc mov je popf inc inc inc cmp outsl ret loopne sbb cltd or test adc mov jns shrl ss sbb pop inc jmp int3 insb or out in repz pop mov iret repz pop push dec inc cmp cmp add sahf out mov int out out aam sbb mull loop (bad) repz repz ja jp pushf xchg dec jne add pop or inc (bad) incb movups adc add pop adc and and sbb and sub ret sbb push pop and test fs push lods dec icebp sbb movsb pushf mov pop mov add shrb add push push cmp cmp adc push in cwtl mov loop and pusha xor sub xadd dec xchg mov fbstp rolb add add fisubl fnop add pusha arpl pop bound (bad) int3 add xor mov sti xor push popa dec mov (bad) or and inc nop pop mov cwtl bound mov hlt push jecxz stos push dec cwtl push dec pop (bad) cli mov nop scas movq adc movsb jp mov add xor jno jg leave push test push push and fs nop ss jle test fs nop and rorl add je pop fs dec (bad) mov xchg pop dec cmp pop in mov ljmp mov cltd out dec and sbb outsl sbb push into xor andl int stc (bad) xor pop shrb add cmpsl mov cwtl adc or and push inc push sbb pand sbb push mov leave pusha shl or xchg dec mov or push sub mov cmp inc pop ja cmp mov (bad) xchg call in adc or fisub (bad) jne pop or sub cmp cltd nop jp adc cltd inc test add sbb sti mov jbe out lea sbb test adcl push xchg mov mov ret insb sub xor mov mov or std ss cwtl ss or cvtdq2ps jb mov nop int jno or inc push sbb sbb dec mov sbb sahf jg dec push push jb lods inc dec xchg mov and inc and mov jle jle add jle (bad) jbe inc jb add (bad) fdivrs push add or clc (bad) in test mov out test push sub cmp nop adc out rol rcrl or and add sub jle add sarl fisttpll pop push dec scas ljmp mov cmp call mov popa cmp dec or jne je mov mov les push out (bad) aam (bad) repnz push add data16 arpl mov push cmpsl fcompl loope adc push movsl xor addb xor sbb cli push fs push pop outsb lds pop push xor add and aad imul std or (bad) or pop push shlb pop xlat jbe test xor in stos jo shrl sbb ret mov andb or pop or push push orl lret cmp aam mov scas mov lea xchg sbb sbb xlat mov and mov push dec lahf push push ja sarl cmp inc ret das jo xchg or push mov (bad) arpl add xchg adc fdivrs (bad) push jge sbb mov add mov arpl outsl cmp int3 mov adc scas lret (bad) sbb sbb jo xor push mov adc mov inc push lea mov push adc add push push les pop jns xchg adc mov sbb xorl jp movsb into xor ret pop test xor push cmp movl lock (bad) dec les ret cmp cmp aas test fsubrl jne push mov adc and movsb push adc and ret inc in (bad) (bad) and mov decl pop dec sbb sub xor mov dec inc xchg leave mov sub adc ja,pn ljmp nop mov (bad) add or push sbb push je push cmp fimull jg (bad) lahf cmp fistp jge je pop inc inc cmp gs mov outsl (bad) adc cmp pushl cmpb test add xor cld jne jnp xor inc sbb jo rclb push adc nop icebp addl adc aas int xor sbb jb mov clc idivb ss xor xlat xchg add pushf adc or lods sbb push sbb aam movsb cmp or loope jge sbb idivl andl xor push dec xorl jge leave inc add adc repnz mov lret aas cs into add xor sub and push pushl fs es andl stos push lcall inc ret push sbb imul pop mov fstp push mov xor stc jne (bad) aam and lcall pop mov add lods cmp and test add push aas mov mov inc popf inc adc inc and xor pop sub mov (bad) or dec ljmp push mov mov mov incl mov shrb cld cs adc mov jnp or xor add add repz push es cmpsb cs sbb and xchg movsb inc jge std or add repnz cmp dec dec mov xor push add or jl jl sbb and sbb push test cmova push mov sbb (bad) pop test xchg adc xchg lahf fbld mov test enter sub sub jge rclb mov shll push into or out std (bad) cmp mov sbb aaa cld add and cmp xchg jbe out pusha repnz mov or inc mov sub mov and mov roll jne inc cmp jge jg xchg mov sarb mov push out and add data16 outsl pop fs decb (bad) data16 add add push (bad) call mov or push adc cmp sbb pop (bad) sub add int3 mov rorl push adc in pop push in pop and push pop in xor push pop ret push jae in sbb add jp imul loop shlb push clc push cltd loopne mov or sarl popa rcl iret and in lret leave mov inc add movsl leave inc roll mov or or clc lret aam scas inc fmull in add das cmp leave popa in sub or adc imulb pextrw sub daa dec repz and xor xchg sub pop xor (bad) fist lds test dec shl or inc sub mov xchg push and lahf add mov inc mov cmp mov pop dec es or rcll xchg inc (bad) xor push xorl and push cltd loope clc pop daa adc loopne fldl pop inc dec insl int3 mov mov xor nop fildl out xor adc inc adc in gs jns pop or inc push xor mov jb cmp ja stos mov adc cmp pop cmc gs dec adc dec xchg call pop pop and sbb clc mov xchg inc jno pusha cmp cmp jle nop sysret xor insl pop cmp sbb adc test add pushf pop es pusha sub aad sub xchg inc mov mov mov sbb add loopne (bad) or jb xor daa inc clc fsubl xchg adc jne sub xor xchg dec inc imul sub leave xchg push or (bad) mov test inc push insl or and sbb add mov pop push insb sbb enter rol and jg or leave fmull int lock cld lret cmp fmuls jg pop xchg pushf int3 sub and fmul mov iret ror xchg enter xor dec sbb (bad) imul aas or jo outsl dec das pop xchg add mov and fs push push pop push rolb outsl xchg addb dec clc xchg adc lods or and adc push adc add cs xor jbe sbb es inc call jo inc jb cmp dec andl jbe mov push ret sub jl insb mov fistpl enter andl mov lods and test lret mov pop jmp lock push cwtl cld jle pop add add repz adc adc adc and adc push mov fimul pop jg bound fildll push inc or push push jae or into mov inc pusha pop pop add scas bswap and or ror cmp sub adc push dec xchg (bad) (bad) or insl nop mov outsl rolb sub dec ret sbb mov sub or xor (bad) jmp add mov js add popl push or add mov iret shr sahf je xor into sub mov add popf xor inc repnz dec xor or je cmp fcomi int sub je cmp inc cmp and (bad) aaa adc (bad) xor outsb aam mov fdivs sbb xor add dec pop xor aas pop push adc xchg rcrb push icebp shl xor jne inc test es and xchg out mov popa sti mov push jmp sbb loopne push jnp sub and jl dec xor sub loopne gs cwtl sbb ret push adc (bad) enter push xor orl cld dec cmp push dec cmp bswap mov and xchg and aas or mov add and adc add enter xchg mov adc adc imul stos inc je adc fidivrl mov sbb adc lea add adc loop and dec or ss mov sti mov cmp fldt sbb stc sub loope sbb cmc mov cmpsb loope and outsl or insb out and roll xchg and push push xchg dec add js lds sbbl push je mov frstor inc mov mov ljmp jne mov imul fldenv pop inc bound js or aas xor pusha xor cld mov inc adc stos jae jle subb imul and mov xchg cmpb inc fcomp jecxz out or popf xor adc and andl stos cmp add mov shrl lret adc sbb adc dec hlt push inc daa or in lcall sub and sbb ret pop adc xor (bad) ret lock outsl fsubrs hlt mov mov dec and pop dec add rorl test push mov cmp push sarb jbe mov add mov and pop jb xor clc (bad) cmp add add les mov push ffreep add das jmp stc mov sbb pop jne pop fldpi add and adc sar inc test pop (bad) dec sub push mov add in mov xor (bad) sbb or aad insb dec fsubp or bswap xor jp loop aad add mov in pushf push mov mov sub psrlw add test and pavgb mov dec (bad) enter mov mov adc lds ljmp iret nop popa stos movsl inc cmp in je test push push sub inc fildll jb jecxz in jle or fdivl mov add pop es mov lea push add shrl add loope mov add sbb repz aaa je nop push mov rolb aaa jno or or enter mov wbinvd push and (bad) aaa or xchg pop xor sbb movsl fs lods xor cmp or ret loope push pusha scas scas dec std rorb aaa pop fmuls xchg push cmpsb sbb loope add dec push mov jbe hlt pop jnp add xchg js and outsl add outsl and mov sbb sbb pusha push lret and pop mov cmp cmp ret push sub mov push push sbb and xorl roll rcrb aad lea (bad) dec scas push push xlat repnz sbb mov mov adc pop or pop aaa push pop int3 inc mov mov cmpsl sarl push mov or pop jo dec add into leave dec add jl fs jecxz mov xor loop or or sbb jg mov adc or push les pop sub je mov (bad) int ret daa add cmp rcrl sub sbb jo adc mov sbb xchg lods clc push inc icebp jle push and dec loopne cmp adc cmp add push xor aam sbb and cmp cmp mov mov lret adc fwait out cmp jp and push add je mov into inc add orb pop sub adc sbb or fisub mov rcrl add xchg addr16 mov add aam lds push (bad) ret inc and mov xor ds jmp mov sahf inc xchg repnz mov scas pop out (bad) xlat or scas lret cltd nop push xchg and dec lds or popa sub dec cmp mov rcl xchg mov add out lahf mov packsswb out pop or ss or mov lods jae cmc push sub movsb test or sbb push mov inc mov or test lea jl sub push inc xchg cmpsb negl xor lcall push mov inc fidivl mov adc jecxz push call mov mov xchg adc push in push fwait cwtl push push or sbb or in xchg jnp or xchg sbb loopne sub add cmpsl sub into scas in and fcoms pop cmp jae jne cmp pop sub mov outsl xor js cmp xchg sbb add sbb mov push dec add cmpsb mov in movsl (bad) jbe mov movsb add fs pusha or dec int3 pop sbb sbb push add inc add aas cmp sub add in pop cmp js cmp inc lds movsl push stc lock (bad) out (bad) mov pop push inc cli pop sub sbb pop push sbb lea push fisttp sbb cmpsb mov sbb push lret xor mov dec clc add jg push sub fbld sbb and pop test add (bad) and mov sub jo fisubrl adc xchg and leave add mov and mov loopne push test ja mov cmp ljmp (bad) xor imul mov add push scas enter xor pop push fwait imul xchg sub shrb subl or addl lock xor push fs jo ret or adc int3 jg jne add (bad) cli mov sub scas outsl andb pop sub push dec dec mulb fcoms pop cwtl dec sarl pop pop jle jnp push cs popa push mov cmp shrb xchg pop push add mov add lock inc cmp jl cmp or jge sub mov cmp imul (bad) xlat dec add das sbb inc insl jl (bad) cld sbb add inc or loopne mov or insb xor sub mov and dec mov and cmpl mov cmp mov mov fadd and call sbb repz push push imul mov push lods dec in adc sahf add leave nop lahf add addl xor add xchg daa dec xchg pusha and movsl pop nop les imul jl inc pop lea popf mov sbb icebp push adc dec adc add mov or add cmp jl push adc addr16 jb inc fist sbb leave (bad) push mulb add lahf iret add clc pop cmc dec lods push push mov xchg add test fs mov bound mov lea jne bound mov sbb jle push testb dec and push mov inc inc lcall sbb add mov push push (bad) lahf rolb push inc daa jge das push xor jl lea xchg sbb lahf cmpsb push push inc sub ja add xor sbb push (bad) lds dec (bad) fdivr mov push loopne inc lods push and test inc dec jns mov aas pop or testb push push mov jo,pn mov pop cltd dec or jle repnz push push mov push test dec push adc jns and popf dec popa adc cmp xchg in cmp pop push jae pushf sbb mov imul lea xchg and ljmp push adc leave or adc xor or movsb lds push scas es lahf jo rclb mov ljmp pop les pop add and fdivl push fild sahf inc sbb and mov push out lea add (bad) neg in in xor push imul popl shr in inc add shlb adc in orl xchg xchg scas fmul or add push es adc xchg repnz aaa xorb push dec add push and jne imul dec adcb mov movnti lea loope dec push push mov jb pop mov push push or (bad) rolb shrb in dec and pop mov (bad) xor hlt inc lret aas adc fistpll push add inc clc xor xor push popf mov adc dec cmp mov rclb adc lcall mov and sub sub mov (bad) hlt inc outsl mov imul mov imul lret lea ror dec jo lods test dec cltd test push cmp dec lret insb add cmp xchg lea orb add or sub xchg je cmp sahf jne mov je jnp or enter add (bad) push add mov call push xchg adc pop push mov mov (bad) inc int3 add cmc cmp inc dec adc (bad) jo jbe ret mov aas test xor cmp (bad) push int3 jg idivb mov je push jl test test add test adc push movsb jg loope sbb adcl xor inc sub mov mov sahf rcrb push pop jecxz repnz or dec and sbb push xchg xchg sub in pop mov in and adc inc dec ret or add gs cwtl aad sub xor and and add inc andl xor sub sub dec cltd mov in sub shrb push push inc js inc imul xor pextrw cltd mov fwait aaa mov add dec ljmp add xchg inc push notl rcll fucomi mov xchg inc or xchg sbb xchg (bad) mov scas or pusha or add lcall jg jno test inc adc add jl ror jp sbb add adc mov dec add inc mov mov add mov mov jg ret lds mov mov cmpsb icebp imul pop add cmp mov nop pop and scas addr16 mov outsl mov dec cld adc test pop fwait rcrl test cmp jl adc and or jo cld pusha add fbstp dec ja pop mov test cld mov loope xor cld pause decl jne sub ficom add mov sub dec add adc push mov shrl jge jo jns jae adc mov push cmp je sahf data16 cmp lahf sub inc or jg sbb add (bad) xor mov gs fstpt push add mov dec lock scas ficom fcmovbe insl nop mov mov add mov pop lock inc popa aam rcrb sub adc push loopne test xor adc (bad) dec enter pop inc popa and rorb adc sub rorl adc pop or enter popa sti inc rolb aaa mov push or sbb pop adc mov xchg inc push lock (bad) cmp (bad) sub push sbb orl inc insb lock dec int3 xor icebp dec push nop add or add das js sub push cmp adc pop and sbb dec stos mov pop les push push cmpl (bad) inc push cltd dec les mov and (bad) or mov adc imul cld psadbw test cmp jne pop push insb (bad) jne or mov jp pop outsb fs jae adc inc adc sbb mov divb and and or inc (bad) cmpsb jno cmp imul mov sbb pop sbb loop push jo xchg outsb add mov adc nop pop lahf adc ret pop fcomps and adc das jg stos sbb sub test mov cmp hlt stos or push rorb pusha xlat sub ja xchg stos ret ja mov sub add lock pop mov ret jmp es push je sti push jmp mov dec xchg mov mov out dec add and or in or repnz test test hlt cmpsb (bad) cmp (bad) mov jge lea xchg enter test mov add shrb (bad) or and push fwait cmp sahf mov lea push sub dec cmpsb stos and adc and adc fildl xchg xchg pop cmp hlt jp push cmp adc andb call test cmp push mov clc mov inc jp je movl insl add les or add mov lret loopne pop lcall or mov push and fnstcw cmpsb adc dec int cmp push adc cmc or jl push lods push stos (bad) or (bad) out cmpsl add (bad) std push std push clc out lea lea or sahf lea cltd fistp and or add sbbb sbb fstpt jbe sub lahf cmp fs dec and push sub push lods or mov lock js ficompl cmp pop arpl or mov lods cmp rcll add (bad) lock cmp push hlt push shr inc add add push dec les inc ljmp or and adc cmp fwait (bad) and mov pop (bad) sti dec mov cmp sbb aaa shll xor out add mov insb ret add and push (bad) lock add test test add jo adc rcrl xchg mov dec insl sbb clc adc pop ljmp adc sub loope inc or and orl xor add stc aam mov cmpsl repnz dec aam rolb fwait xchg jbe add lcall adc inc jbe std mov mov scas mov mov fimul inc xchg push out roll inc daa insl pop inc mov pop sahf test jne hlt mov lea xchg addb push push jl push or xor pop add ret ss fmul rolb cs sbb or sarb cmp ss inc dec add push or (bad) inc and (bad) and notl sbb mov adc cmpsl cmpl dec pop mov test fcompl mov lcall adc addl dec mov cmp mov pop test add int3 push sub fs (bad) add or add xchg mov orb xchg sahf adc in pop daa xchg js or adc xchg or hlt pusha dec push sub das enter aam add sub jb or aaa push adc sti sub push lret jbe test mov mov clc jp push popl fistp test push addb xor push mov shlb mov fidiv xor push in adc pushf adcb (bad) push (bad) or fist xor cltd dec movsb and mov mov or adcl pop arpl fisubr lea in data16 lret adc cmpl sub cld inc xor stos xchg pop xor fdiv out and push dec repnz push loop fiaddl jl shlb dec loop mov iret sub out jle hlt jns pop add cmp jg out into or sub jo jb stos add add xor pusha jne or insb mov (bad) pop mov and and lods lea push hlt xchg dec mov lods mov inc (bad) test loopne js sti nop ljmp or hlt jo and call mov add mov clc insl xor sti or invd push inc ds rcl dec out push push push lret aaa es push shr fs dec (bad) and in jne sbb or in clc jg,pt pop cmp inc jl,pn or in jge fsubrp add adc add push xchg sahf jne pop xchg jle or aad xor add scas or jmp add ret jbe lret add int lods dec into sbb je add push mov or push add adc pop fsub std pop in mov sub push ljmp push push (bad) mov punpckhdq dec add ds mov fiaddl imul and add or dec mov and mov jmp and mov xor clc sub clc add mov mov nop cmpb inc add mov mov mov inc (bad) add aam test imul (bad) adc dec push pop aas sbb fadds or fcomp ret mov test sub inc stos mov inc enter mov sbb mov inc sub mov pop loop sbb push sbb jl mov jle int inc cmp cmp mov inc frstor sbb lock pushf insb dec adc and add (bad) cmp add lret mov jb jmp test xlat mov push aas cmp rorb inc adc jg out clc cmp jg pop scas jmp ja clc jg add add push xor lret jp sbb xchg ss jl jg jne mov sbb cld int3 or push lea or (bad) jbe je (bad) mov pop in (bad) or test mov pop lds add sbb (bad) clc mov push cs or mov ja je mov add scas pop mov add push pop mov aaa inc mov jae push add mov lea fcomip lods or xor lock mov (bad) (bad) mov cmp ficom test or jmp push stc xchg mov dec sbb (bad) mov add inc call (bad) pop shl orl sbb cmp out int3 bnd jle scas dec imul sbb fucomip call je jg mov xor pop rcrb adc jo sbb leave call push pop je aas xor mov dec cwtl bound xchg push inc cmp loopne shlb cmp ret das push mov (bad) dec inc push mov mov push push pop mov sub fucom out jp,pt xor push (bad) (bad) cmp mov inc push add enter push inc mov mov (bad) test (bad) lahf insb mov mov sbb mov leave jecxz int jnp lcall pop insb nop xor js jle push clc inc sub in fdivl inc iret loopne xorb jp mov (bad) std and andl or lahf push push arpl sbb test mov cltd inc js ret out adc ret lea test pop inc add pop fs pop ret and fsub xchg cli add shr pop xchg sahf ret pushf cmp out rcrb sahf pop add ret jbe ret sub adc xchg ja mov ds cmp dec add mov lret xor scas roll mov aad xchg push pop or add (bad) test sbb push pop push mov mov sarb sub or jns xor in pop dec insb sub aaa lock inc or push rclb and gs jmp mov mov pop in lock mov pop cld or and add add jl mov dec clc sbb xchg (bad) jae lret lea ret push sub add loopne add mov pop enter pop and ret lds fldl fistpl in das mov cmp dec add int sarl rcl sub call dec sub inc sub sub adc or divb or insl (bad) bswap xchg enter and xchg dec xor adc add cmpsb dec sarb adc pop arpl xchg xor mov mov jbe fnstenv mov pusha inc mov lea dec sub les int3 enter lock dec mov add mov sbbl cmp cmovbe jl sbb fisttp mov fist fs jmp pop push sbb mov aas gs push or je lods xchg adc mov mov fdiv cmp push out scas jl cmp pop cwtl inc cmc add or inc in out lret push push add push push and inc add fistl orl mov push enter or push mov push cmp adc das (bad) in or lcall stos cmp and addb jnp xor inc mov aas mov in mov or ret and dec inc mov push pop dec pop (bad) insl push cmp dec mov in pop mov roll add add add sub loopne mov add stos daa mov lock jno stos pop xchg (bad) jns add inc xor mov cmpb roll test arpl hlt fadds push lahf adc call or out shr cli test pop fimul inc repz imul sbb add lcall push or dec push mov rorb sarl lods adc cld inc adc jl dec dec fisubrl fmuls sub mov ljmp inc incb pop cli adc jmp xor jae sbbb aad sbb or pop aas or pop lretw ret mov or add mov (bad) fcom rcrb add dec jmp dec leave rol adc jb or daa fisubr ret push inc enter (bad) movsl ret lret or mov ja idivl (bad) sub xchg ss clc jae fimull push fdivrl mov add adc gs in rcrb mov jne push (bad) jbe ret push push in and mov lds icebp pop push xor repnz add hlt pop lcall inc leave add loop mov jmp call dec dec pop cli lea popa pop jo cld cmp (bad) xor push (bad) jae shl or jp movsb jnp jmp jmp loopne clc es mov jge xorl popf xlat rolb das in bound dec or adc push (bad) push test sbbl cli sub or xchg add aad jecxz out fmull mov rcl movsl add jl ret test ds dec lea scas cmpsb inc imul mov jge pop add push lds dec xchg mov dec roll fsubs sub sbb jmp neg fidivl rolb inc cli add jl sbb push cmpsl jne,pt mov int3 push mov and and xchg das sub mulb mov movswl push rorl stos inc jg nop pop daa test cmc shr pop lea dec xchg in je mov sbb sub lods pop jge cmp add jae in jae adc incb fmuls sbb pusha pop data16 pop and shlb pop idiv pushf adc mov sub incb push repnz pop add and dec mov mov xchg jo mov dec mov dec leave gs iret mov pop arpl inc enter mov sub scas push or jmp incl cmp nop xchg lret rcl pop sbb inc scas addr16 or mov pop lea xchg (bad) imulb leave adc add xchg pop pop jl and arpl and inc (bad) mov mov dec mov ds dec add movsl cmp pop sbb sub adc fmull mov movsl mov pop std test sbb (bad) mov lcall insb (bad) add jne push rorb js lcall (bad) (bad) mov add adc shlb pop xor sahf in adc in fimull (bad) fidiv fcomps rcll cmp mov xchg clc fimull dec jle incl pop jne bswap jge pushf or add dec cmp xor mov jns add lods test push dec lods (bad) int3 xor dec jmp push push add ja sarl mov fadds mov fnstcw mov adc faddl mov push data16 nop mov ffreep ret pop lds mov xor loopne jmp inc adc cli pushl mov cmp mov dec lcall sbb aas sub xchg and out movsb call xchg std std add xor inc xchg xchg hlt hlt sbb jb jmp xor push jge test push jo push xlat and mov or jl mov imul sub sub add je fimul es xor dec mov mov das movsl (bad) out leave and fldl aam imul push jmp or or inc inc js pusha mov test add jne add insl xor insl cld pop adc test jl lods sbb fstps jo push dec jp enter sbb inc cmp sbb iret in inc mov pushf jne aam mov ret rolb aad test clc ds sub add pop shrb adc mov leave arpl pusha sub fprem1 pop cmp rcl xor loop mov loopne int3 push ret mov cmp fldt push push pop xor (bad) add mov dec sbb push leave jne es bound add sub stos dec clc addl hlt scas sbb rcr je mov loope imul and sub and mov rolb nop call mov push add mov or mov jae shrb stos js jbe jae leave pop add adc xor fdivl sub test insl push add fnstsw adc and in rorb aam xor pop add ljmp aas loope inc lods std adc cmp das adc sbb mov repz mov push sub sahf int3 gs aam inc mov lock jl sbb adc ret es push sbb pop mov sub or adc subb les ret sub xor adcb dec (bad) iret mov push mov shll mov (bad) fisubr mov jle subb shrl movsbl or mov push lods inc and mov leave xor rclb stos jno ret jg insb mov adc pop decl pop cmp push test scas cwtl mov xchg test outsb aas scas test pop rorl pop mov notl ficoml mov inc shll stc orl pop (bad) test addb cmpsb xchg mov jg mov shr push andl and pop (bad) fimul inc inc addl or movsl push je ret inc (bad) loopne lock adcb fsubr adc ljmp lods push in in or pusha ret test out insl pop (bad) je xchg sbb mov lcall adc add cmp out nop nop cmp js cmp out or (bad) fadd or cmpsl sbb lock push push pop push std push pop add mov add inc sub rclb and (bad) clc and pop movsl jp int3 (bad) lea jb xchg pushf push lock bnd dec es inc xchg fwait cmpsb cmp enter incb repnz push loopne add mov pushf mov and adc inc and sub sbb mov mov cwtl lock push shr push jg daa adc fisub leave aaa mov cwtl rclb ja clc in add scas add lret or cld pcmpgtb les sub add fadds jecxz pop fbstp mov imul push shrb je pop lcall sbb and dec xlat push scas pusha nop pop jecxz adc xchg inc nop push test es adc stc jl cs add sbb movb dec jo fisttpl rcll jmp lahf cmp ret push in add push xor cmp (bad) jne push sbb dec sahf cltd and in call fwait into out cmp lret leave jbe adc lds data16 fldt clc mov xor sub pop add xlat jp or xchg jmp or addl sbb lret test dec loopne leave scas mov (bad) mov push lret int pop jge out or enter mov xor and int and xchg xchg or fdivr lret or cld add and lcall popa inc and test xchg lods add aad divl push xor cld sub cmpsb push ljmp or pop add pop adc bnd das and rorb lret mov test pop add jmp fdivrl fistl pop push xor inc (bad) add add jne add into ljmp lods push adc lods hlt rorb jl mov addl mov fsubrs inc add jl sti pop and add and jb lock or sbbb xchg xchg mov iret xchg cwtl dec xchg fcmovnu (bad) mov jae je inc mov and add jns mov push gs test xchg nop sub adc mov rcrl inc mov mov dec add cmp pop orb test lcall pop pop push dec ss pop andl add mov sbb adc cs insl cmp sbb add insb mov mov jo hlt call (bad) xorb or and add inc imul push jecxz dec sti addb in mov ret or add loopne aaa arpl enter (bad) arpl lock cli sti lret js jno push (bad) xchg notl inc mov adc lds mov fmul and and in (bad) jge orb dec mov sbb inc jg add dec add xchg cmp sbb cmc and leave std lret andb mov daa sbb into mov or ror repnz sub push mov and xor lock out test cmpl adc jns adc adc add pop movd or call and iret xrelease cmp in push mov rol insb dec hlt push bound dec and mov or xchg (bad) pop lret mov fstl enter or add pushf enter loopne in ds jno (bad) adc jl fidivrl adc or nop mov adc push sbb mov in mov je jbe jne sub mov dec push cmp sub data16 ret add add cld aad mov lods (bad) loopne cmp imul outsl movsl lea or fmuls push add fmuls call or fstp aam sbb jb fisubl (bad) gs adc push jne (bad) ljmp (bad) (bad) mov push sahf xchg push sub cmp scas or cs push push mov (bad) hlt dec jnp inc ja or inc cmp mov jmp jne dec cs add mov add cmp in xchg xor xchg mov add lods inc xor or sub pop dec lret stos mov mov lea imul ja subl arpl orl call cmp mov cmp mov mov xchg inc ret dec mov push xchg lahf jmp orb mov subl inc rcr dec mov mov lcall (bad) lods mov ror sbb mov fsubrl mov xchg (bad) sbb xchg jo and xor enter jmp cld jmp fbstp jmp push or nop push int3 incl push or mov inc xor cld xchg in mov pop pop push and test sbb lea sub das inc add inc cld data16 test movb inc push xchg mov (bad) mov ds sarb mov and mov push (bad) xor and sbb mov nop cmp popa add test adc cmp and clc adc lock stc add movl and sub pop std pop in cmp addr16 lret loope test les shl int3 dec mov (bad) test and (bad) xor sbbl jl xadd or das sbb pop in enter rclb xor sti add pop or fchs add popf cmc and mov pop popf (bad) xor ret push mov jnp mov adc push imul mov xor pushf or xor mov jge add lea sub lahf inc mov lds shrb das sbb stos into popf mov jl sahf call push push adc test mov mov jge pop push add stos pop push lahf inc pop mov sbb adcl sbb sbb and cwtl jg lods bound cmpsb (bad) into lea sbb fnop inc inc inc dec push mov ror (bad) icebp mov (bad) enter ljmp jo xchg mov inc call and pusha push mov fcoms jecxz movsl push addl mov and js or add hlt lods sub mov jns sub jge push jae jo mov stos add imul or push fdivl and adc and das mov add mov mov sbb jae cmp xchg scas dec loop cmp jmp ljmp jbe push pusha xlat leave sbbb cld leave lods inc xchg loopne mov cmpsb in push and lret ss inc ljmp aad enter in push cwtl xor xchg sub mov xchg inc cwtl push aas imul jne movsb nop fmull ret roll test lock inc js dec inc or rcrb jmp clc popa clc adc lret pop mov push add scas or pop sahf test mov push inc clc add in dec mov rol and rcrb jmp outsl or lret (bad) cs lea and loopne ret push stos movsl push cmp mov or push pop shll add aas sub out jo or cld dec cmp jge dec mov push inc inc arpl add out push or add imul pop jb mov jne lea wbinvd push movsb lock rolb mov xchg bound inc cmp sub cmp add fsubrs inc pop adc shll fiadd push dec or cs xchg rcl sub mov push leave sub fs dec push loop rclb xor inc push outsb jecxz xor (bad) fwait mov add mov mov imul mov push loope pop fdivl ret lea pusha nop lds or xchg (bad) dec cmpsb or (bad) adc in fsubl xor add fisubl add push dec jmp push push cltd dec xchg rol sbb inc lods xor dec jno mov inc jbe push jb sti jge xchg sub xchg pop add cmp mov mov add fs mov lret add cmp sub adc inc sbb jecxz icebp shrb inc sbb xor adc sbb sbb xchg jg push jp test pop xlat or sahf imul jae (bad) xchg mov stc inc (bad) addr16 fidivrl add cli aam adc sahf aam lock adc xchg lcall pop xor sbb inc and fs add mov hlt mov push add push cmpsl push pop mov xor jbe inc adc sbb jecxz repnz iret test call pop sbb push js movsb leave js loopne fbstp pop adc cltd cmp xor rol les loopne (bad) loopne jge fsubl and rclb pop push xor mov or fdivrs mov out add ja xor and inc cmp inc popa movsb nop/reserved nop sub push pop mov adc inc mov std mov xchg test inc and and mov pop xchg mov xor add mov xchg sbb test jp xor sbb or sub or movsb loopne push xchg out movsl inc add xchg adc loopne test data16 pop xor sbb sub aam (bad) mov inc loopne pop (bad) xor sbb push sbb or pop fdivrs inc dec loope lahf or nop (bad) enter cmp inc and mov sarb pop andb dec add add mov rclb sbb (bad) adc dec inc adc push sbb (bad) fs test and and insl pop xchg add add leave lret and and jl fbstp orb add mov add in or ficoml or jg sub add inc adc fldl pop adc mov pop lods adc sbb pushf mov lahf movsb fisubrl push cmp cmp mov push jl or leave pop sbb or lds add stos rcrb jb ret dec push pop out mov insl clc adc add and dec cmp (bad) out adc push push push outsl push push and sbb pop mov mov ja loope xlat or pop mov pop sbb movsl addb in inc das or dec mov sub lahf add push mov pushf sub mov adc xor insb bound push call es mov mov loope popa ffreep jns sbb test dec push sarb mov and inc mov or jl xchg sbb dec in loopne xchg adc imul xchg mov and pop (bad) push mov mov jns jmp push in idiv inc jl push out fisttpl mov cli add jmp dec cs ret xchg ljmp adc or mov sub add fcmovnu popa rorl clc cvtdq2ps or lret mulps xor aaa lods xor sar int (bad) cld addps insl lcall into jle inc xchg sahf imul js adc sbb and dec jne push ret adc or push outsl loopne xchg cld mov (bad) jg ja sub dec mov add lahf test sub fdivs lock lcall (bad) sbb add incl xchg xor movsb and cmp and test dec lea mov test add sbb push push gs fmul movsb mov lcall lock jmp call mov scas cmp xor and xor shl push lock dec add ret add add clc xchg push mov fbld test mov sbb push pop movsb rcrl clc mov inc xchg and fsubs (bad) xor cld decl cld cld adc sbb add sub sbb (bad) pusha test mov and dec jno shl ja xor sbb mov mov insb xchg xlat out jge adc jl push sbb aad xchg (bad) jg daa dec push dec cmp sub sbb pop jp sbb and repnz or ljmp movb lock movsl mov aas xlat lds lods sarb fiadd dec push stos fisubrl push clc xchg in xor push (bad) in jge addr16 jo popa or adc or inc (bad) icebp add hlt adc gs sarb sbb fadds jbe lahf sbb cmpsb cmpl movsb xchg jle or lods jnp loopne xor sahf test xor pop jnp ror scas lret inc push mov xor sbb (bad) (bad) mov add mov xor push push dec adc test sub lahf cld jecxz mov clc enter push lods or sbb push je push rcr andl dec mov sbb movsb sub mov sub test clc jmp cs xlat pop sub mul sub inc dec shll add arpl jg mov add ljmp mov push sbb insl inc sub mov xor pushf adc mov xchg adc jo mov adc and or adc adc sbb in or sbb push dec or lock fs add rorb in ja cli mov test mov lea lods fstpt bound sbb pop sbb or sbb in mov push fstpl jmp lret push or pop clc xor comiss scas pop or add call xchg jnp cmp mov daa adc cmp pop adc push cmp ret hlt fldl xchg mov or or inc mov jle loope fld out ljmp xchg lods ret push mulps pushw ja sub or adc sub aaa fiaddl decb pop push push loop or dec inc push sbb mov xlat hlt mov inc das dec sbb lea pop sahf jne add movb movsb lock fmul add in or adc test xorb push adc dec dec add or add push lret lcall outsb hlt jne dec in std mov sbb mov sub xchg in loopne nop dec enter jp inc imul add mov rclb cltd mov call in mov cmp in mov sub in daa and lock push push ja inc popa cmp xchg inc in xchg cmp mov rorl mov incb or push pop mov ja add add scas adc mov add cmp adc mov pop call push mov and leave hlt lock jmp je mov cmp (bad) push add cmpsl sbb in ret inc fs fmull shll test lea int3 add fsubrp xor add call adc sub sbb sub dec push xor adc fld fsts push orl sub pop dec add pop sub incb pop mov mov pop mov sub or pushf mov pop mov pop jno push mov pop mov jns adcl ja jno inc insl pop (bad) jb leave sub rclb mov mov not add dec and (bad) xor mov pop push pop xchg insb lret xor out cltd add inc testl pop sbb aas fisttp sub push mov or cli push loop fsub (bad) out jmp mov push outsl ret push idivb or mov pop add cmc pop add dec mov js cmp jg sbb add sarb adc mov mov ss les fcom int push (bad) adc or (bad) mov jne clc add xchg scas mov or iret dec adc lea sbb pop adc sub outsb (bad) jno (bad) and hlt ficom mov or jbe inc jmp es xor or mov inc cld add jmp sbb scas mov add add add mov mull mov inc clc sbb adcl roll (bad) subb jmp xor loopne push rcrl lret cltd push mov add pop push lods les xchg inc dec push or cmc jae sub jp push in imul jmp sub ljmp adc ret cmp test mov xchg sub mov mov sub dec adc int mov jns jp loopne std and inc cmp dec sub insl cs pusha jle rorb (bad) push call push ret jns pop add lret lret aam je cmpsl jbe aam jl dec cmpl les loopne add (bad) cmc inc lea insb xor push adc idivl ror enter loopne icebp push sub jb (bad) out add mov dec pop mov addl add xchg ror lret pop data16 adc jp inc cmp sbb movsb pop xchg test mov arpl mov sub test push inc aaa add add popl pushf pop dec sarb addb (bad) xchg popa add mov adc sub bnd loopne dec iret cmp subl test jb pop (bad) fs sbbl pusha fstl outsb sbb or orb daa rcrb push dec movb push mov into sbb inc mov add and jl lahf bound hlt cltd mov pop and sbb mov add push cmp aas xchg shrb (bad) repnz xchg push mov jo inc orb insb inc jmp aas sbb sbb xor pop jge and jmp (bad) sti aas fchs push idiv aas xor lcall aas ret popl test mov loop and and add ljmp mov lea imul fwait add rorl jo ror mov cmp jb cmp mov mov cmovs dec add insb out dec adc mov sub add mov pop in or inc push xor call xchg push add add inc sbb ficompl rclb pushf mov and inc jb and loopne pop jp ret or adc push push sbb sarb fdiv fldt sarl xchg add loop dec or add xchg in xchg sbb xor out orl dec fldl or jg cmpsl pop sarb add aam fdivrs in ror or push lcall dec mov adc rolb cmp ss mov mov add ljmp into jmp mov jmp dec jl xchg rcrb cmpsb (bad) mov and out jp or sarb and mov mov pushf lock arpl lock int3 and sbb outsl add dec psrld mov add leave inc cli pusha jne ret xor inc mov mov mov popa js mov xchg bound sar jge and ss ljmp add out fs mov push adc mov jg mov scas loopne xor test mov push je iret jne adc rorl jns (bad) mov mov xchg push and jmp and mov sbb jmp lods cltd leave mov mov sub adc add rcrl jmp divl (bad) pop and and rcll jle lea pop in xchg imul dec aaa sbb and movsl dec cmpl jbe or mov adc and (bad) or push sbb xchg xor mov lahf add or sahf jnp xor ror or or push sbb addb addr16 js push call or int dec pop push int3 add sarb or mov adc cli ret sub aam cmp fisttp xor data16 (bad) cmp fldenv push jg push loop sbb int cli push jg or fstl outsl int3 jne xor sub add push leave xor repz and xor or xchg jnp enter movsb in loopne mov call sbb (bad) rorb mov mov adc add sub sarb mov sub dec loopne add les jecxz jb or mov push subl xchg adc adc lds jae ss stos push test mov pop and xchg sub mov mov add add cld jne cmp add test jge jmp imul imul fs and mov jp or and mov inc jnp xor and add or or test mov outsl enter out fiaddl and ret rcrb inc and mov or (bad) rorb dec pop jnp subps add and mov or jno sub inc loopne or lds notb jmp js aad add ret jle pop adc add into adc mov jno out mov jmp loope pop loope xchg ss nop sarl insl jmp popf es lea jae jae and js gs lea in repz pop mov mov sbb push mov or (bad) out adc push rorl inc add push or imul cmp movsb test pop inc (bad) or ucomiss sbb add push push jp cmp or (bad) adc and and add xor dec (bad) jnp adc add cli aad repnz inc push imul add call cmc repnz cltd or cmp sbb push movb xchg dec or js rorl ja lock fisttpll loop adc out faddl mov aaa mov jno cld pop or pushw push pop mov and xchg bound loopne into sarl jge,pn in xchg js sbbl xor js jecxz cs xor cmp adc pop lock sub add je fistpll push ret repnz cltd mov push xor (bad) jne xor or xchg fnsave sbb int3 fld1 clc mov cmp xchg movsb cmp xor es mov cmc add insl (bad) stos loop repnz or or or (bad) jle push scas mov inc dec or and inc and jbe loopne lods (bad) push push loopne mov imul lea clc mov popa sbb rcrl shll insl loopne (bad) aaa push rolb mov popa pop push xchg cmpsb ss aaa mov add pop jle pusha shlb subl sbb fwait mov and in and jg sbb push mov xchg (bad) repz cmp sbb push or pop cmp push data16 or sahf and jp or pop movsl movsb insb mov xor mov sbb inc push lar push aam sahf sbb add add (bad) mov add inc int3 push pop lret mov jne cmp lock fbstp rclb adc (bad) jbe or and or sbb (bad) jae cmp push mov or lret in roll lcall add xor sub fs jmp inc push add or nop add or nop cmp in cmp and adc out or add out xor sbbb xor rclb adc or xchg pusha cmpsb inc xchg mov stc push loopne inc add push or call jg adc sbb jecxz rcl jmp adc or insl (bad) jle sarb sbb push add adc inc lea adc enter ret or dec jne popa or fnstsw jg pop rorl push imul not xchg push pop add loopne push xchg mov mov add rcrb clc scas add test xor sbb pop mov or pop xor rcrb clc (bad) repnz sbb loopne sbb sbbb insl jo rcr in dec sti out je mov gs pusha add out jmp addl or leave in call hlt xchg sub mov outsl lea pop fidivl cltd hlt andb lods pop stos pop xor or fstpt adc mov mov mov or sarb dec mov cmp or mov or or (bad) icebp xor jl idivl jp add push mov adc cld imul mov xor outsb xchg scas loopne fnsave ds dec xor push lock nop pushf pusha or jmp add leave (bad) lock or push add popa jmp lods or xchg test mov ret jp insl in dec add dec jmp add call sub in mov add gs adc ds inc or jo scas in popa mov jge or mov or push sti rol mov or fdivrl nop rclb ds and push jge,pt push cwtl loop das enter mov xchg xor mov jbe fstl mov jp and push cltd sti (bad) (bad) ljmp pop clc sub nop jnp jne jbe adc mov or lahf and adc nop rorl test sbb push push lods stos adc pop push sbb mov inc or inc or xchg sub ds xchg ret push fldl sub mov cld bnd (bad) lds cmc lcall add mov clc test sbb test add nop sub sahf std inc pusha nop sbb ds sbb pop (bad) xor into repz add lods (bad) insb ja adc xchg adc dec xor jo pop adc or mov out pusha daa in dec inc push sbb or push mov mov cld or push std mov aas pop and test js jge lea and lahf cmp bnd mov repnz jge cmp push or xor cmpl or icebp cmp (bad) cmp jg lds nop and or dec adc repz jg cmp dec call mov adc in mov adc (bad) or jle sub and xchg pop adc (bad) push sbb jle test aas jg lock dec fsts les and jno push add push mov incl jo dec (bad) add mov inc js jo (bad) loopne shrb fnstsw or pop js mov loopne,pt das mov sub xchg jbe movsb and (bad) jno and mov int shrl push inc outsl (bad) mov movaps repz pop rcrb and rcll (bad) pusha dec shlb addr16 pop push xchg lods mov jo push lret dec faddl mov sarl pop cld push outsl jecxz and inc mov sbb or push (bad) mov data16 xor or stos out pop push and cmc sbbb (bad) pop add addl and jnp mov mov lret aam adcl jb rcrb jp call movsl add (bad) (bad) (bad) or dec repz ftst jecxz push jnp ds add sbb popf test push fcmovnu or xor dec pop repnz icebp cmp je popf into push enter pop pusha or mov xchg cmp jo dec cmpsl or push daa (bad) mov push daa push jb (bad) icebp add or shll xchg sbb lods and sub adc fs pop push roll lret or add hlt mov out adc add or jns adc pusha mov fcoml jb inc xchg aas mov and cmpsl add sub pop or lds jecxz sbb xchg xchg imull cmp clc mov mov inc nop imul bound fisub iretw push aad outsl add push or add adc rorb (bad) rclb jp out std xchg inc call out xlat das ret cmc mov out mov xor (bad) jne inc addr16 out nopl out call push jno js jnp dec repnz inc sub fnstenv add push mov inc iret mov xchg rcl gs push push add int3 out pop fadd (bad) or push imul fidiv and rol adc rclb inc jns ljmp in lret sub aad std cmpsb sahf mov add pop addl mov fldt mov xchg fadds sub clc lea and dec sbb (bad) cmp cltd pop clc mov cld mov lahf and mov sbb ret andb pop sbb fiaddl lods dec aam out mov cmp fnsave add push sti add stc pushf add dec hlt push clc xchg das sbb mov sbb mov or jmp xor xchg dec cld ja xlat in or dec out or add bnd pop stos jmp pop adc jno hlt or xchg sbb cmp ret dec mov pusha mov jge pusha pusha ja out sub cwtl cwtl sub stc adc lods mov mov shlb or popl leave loopne nop loope lds fs sbb jb mov test cmp jns inc jnp sbb mov shlb jnp das sub add adc push iret and jcxz jnp (bad) idiv cmpsb jp fdivrs scas and es fidiv nop mov mov mov cmp fcmovb and fs or test out push pop adc cmp xlat xchg sbb cs pop pop or nop rclb dec orb sub ljmp inc jmp add cltd mov sbb loope fisub fbld lods add jge sbb inc jb sub stos or sub cmpsl push sbb pop in loop cli sar ret xchg pop inc popa enter inc sub fxch pop cmp add in xchg mov xor sarl xchg or or inc mov call xchg push sbb dec into aas sbb pop lock sbb leave push mov roll jp or dec jne jne add xchg push mov fidivrl or add sbb pop ds pop test fldl mov adc jbe mov or push and outsl jl fisub pop ret negl mov (bad) pop cs or push xor ja call pop pop sub ficomp out das stos cs cmp push addr16 push mov adc fsts push (bad) fist cmc and incl mov push pop sbb pusha int3 dec xchg pushf sub dec sbb jmp imul sub pushl add jae ljmp les cs jg jmp jg jg push repnz pop xor inc loope test lcall xor lcall lret push dec sub movsb into xchg and test sbb push fstpl mov inc test mov (bad) push daa cmc and int3 (bad) jg lods inc push mov mov push push icebp xchg sbb sub stc lcall and push dec stos pop (bad) test jb xchg inc pop or sbb and push pop push mov test js icebp push dec add or jae push or pop int3 ss push xchg inc fdiv pop divb mov push jmp cmp sbb or add loop and inc popl or fidiv aam sarl inc in inc mull bound pop je cmp adc ret lds push (bad) roll or outsl push lea inc adc sbb mov add add das lea insl xor in adc lea (bad) push je mov dec jecxz enter push clc clc adc jnp cs or adc pop jno or cmp sub (bad) neg xor pop enter pushl dec add or inc mov adc inc sbb adc dec dec cmc sub add jne mov pushl mov mov cltd loope cvtps2pd pop sbb cmp clc rolb fadd shl jo lock add enter cmp sbb lahf ss xchg inc inc push nop push add mov jg cld push inc adc mov adc push dec mov xor ljmp add and inc rolb xchg push notb icebp push cmp sti mov push sub inc jns lret call pop and mov jl js push loope clc scas loopne rol jno mulb lret inc dec dec dec popf jle (bad) or js cmp adc sub (bad) cld xor je loopne ret test pop mov and sub xor arpl ret add pop lock sbb fcomp (bad) mov testl mov sarl test or fnsave xor cmp shrl cmp xchg insl mov cmp mov or or loop mov push jl ret mov hlt add add cmp mov and adc popf test inc repnz xor xchg sub dec mov inc cmp dec test and lcall leave push add sub outsl (bad) test scas scas sarb mov sub es adc mov popf (bad) out and or and mov lcall adc loop or xchg data16 rcll push sub push inc addr16 push adc mov jmp jecxz sbb (bad) fcomi repz repz xchg cmpsl jge (bad) adc sub enter push (bad) ja lods inc and les dec inc test xor xchg mov cmp jb add jecxz add (bad) and push cmp or inc add xor sub ds cmp push (bad) aam mov les inc test sbb test xchg nop mov xor push ret inc push add les cmpsb mov (bad) dec push popa push xor (bad) dec xchg aas pop movsb mov das jg or popa cmp popa inc sti or pop add inc sahf nop pop sbb pop cmpsl or std mov adc lret xchg add adc and outsb pop dec clc stc sbb ret sldt (bad) adc mov inc or sbb push sbb or out and cmp push sbb shl jo and or lret mov sbb scas je in mov fs adc xchg popw or sbb jl or mov adc sbb pop dec lock movsl mov lods test xor pop xchg jo xlat xchg pop inc or in xchg dec or inc je fs and add or scas xor je cli cli orb daa add jb sub jb insl push mov sub jg adc test push cmpb pusha outsl jecxz mov adcl sub dec in lock cld jg subl push (bad) add nop pop add pop outsb jecxz dec or add add jg sbb pop sbb dec clc jg jo lea jne cmp pop mov inc and cmp add popa pop addr16 adc aaa jbe and daa cltd cmp push call sub add sbb jecxz and mov or enter scas add sub push int3 hlt pop int3 (bad) test jecxz push aam add xchg inc dec or pop dec getsec (bad) jno stos (bad) jnp lret push in daa pop les ret loopne dec enter ds jge sub adc enter sub push inc xchg and dec mov int3 inc pop lea sbb adc xor out shrl leave sub or jg inc outsl aam push sub inc inc shl jmp adc mov dec cmp mov push push (bad) push add or rcrl mov cmp adc inc mov bound js (bad) xor dec fmuls adc stos sub xadd or or xchg cmpsb imul call sub dec sarb add loopne negb in mov or and movsb pop mov or aam fildl shl push dec orb inc adc cmpxchg mov pushf inc fdivl (bad) (bad) mov fmuls inc inc fisubl sbb xor xor inc imul movsl pop jg add pushf mov enter jo jne ret bound pusha dec ret sbb ret sub pop scas sub jle mov push fs nop push movsl fnstsw lret cmp pop mov out (bad) cli jno aas push fstp out sbb decl inc and pop rorl test mov mov jae fcomp jp cmp adc or mov cmp pop inc cmpsb xor movsb out mov (bad) or cmpsl fcompl cmp popf fs test xchg fimull imul add push jns jae outsb push in cmp inc adc xchg fidivl add adc push mov lcall pop js (bad) inc adc dec test cs dec and mov cld cmpsb pop (bad) pushf incb pop fsubr adc fcomps adc mov aam popf mov adc push xchg ret (bad) dec sbb sarl sub sbb shlb sbb test or int jns push rorb fistp cmc insb loopne fadds xchg shl sti jo pop add add adc add dec xchg sbb lcall jg adcb mov std push and inc (bad) pop adc adc (bad) pusha cwtl pop test pop mov push out cmp sbb jp cmp (bad) ss inc cs shlb ljmp fidivr mov xchg dec pop mov flds mov clc push push jle cmpsl dec int3 out (bad) push pop xor push add cld cmp xor jb dec jne sbb jns jns push pop and sub aam data16 sub inc loopne push mov adc test jp sbb mulb xchg xchg ss pop addr16 cmp mov add ret movsl in out adc bound inc add jne dec dec arpl cld or pusha int3 in inc sahf fisttp in int3 inc les add kmovb inc add (bad) pop adc xlat fisttp push dec lahf push in (bad) into in mov movsb mov pushf mov xchg mov dec add pop push inc lods add andb enter cmp mov daa jecxz ror cltd test loopne jge mov pop inc outsl sbb adc inc outsb add cmp jne out in ret or sbb jnp lods lock cmp jne hlt mov aam xchg add pushf cmp orl cs jl xchg cmp sub mov ljmp mov mov and rcl mov add ret addb add lcall shlb je jmp cmp mov and loopne cmpsb rclb cld orb in jge mov xchg mov subl sbb xor jle inc test in xor xchg sub add or push add rorl push and out js (bad) pop subb sarb add rcll mov in mov sub in pushw mov mov inc andl xchg or dec and ficom dec mov addr16 mov inc cmp popa stc dec mov add mov adc mov repnz mov add cmp xor aad shrl jnp pop mov push adc sbbl pop add adc sbb shlb or add mov or add outsl lea adc es enter jno or test ja sbb push xor or or sbb aas mov add loope mov sbb push xor mov cmpsl mov loopne test jo sbb xor dec test lea loop add dec test (bad) nop cmpsb dec inc fistp inc cs xchg hlt xchg xor rcl or push inc loop sbb (bad) lea movsb aad inc loop dec cwtl pop xchg sbb dec ret lahf inc aas mov mov mov lock inc cwtl or repnz add cmp cmpsl mov or lahf sahf test addr16 dec inc insl mov xor sbb aam pop int test lea add or xor rcl test sub roll adc dec push push push in js sbb rorb aaa sti pop cli sbb dec jne xor rcl js shl call mov adc int3 or dec push cmp pushf dec jne dec mov out dec xchg out jns repnz test addr16 adc popa or in fcmovbe mov nop or inc cwtl dec nop fstl sti inc loopne sbb ror clc or sub cmpb cmp cmp lea orl mov mov ja push sub mov mov adc and cmpsb push mov inc pop mov cmp or or cmp cmc xchg xchg xchg pop ret sti repnz push xchg push test pop inc sub inc mov or mov (bad) sub dec dec enter sbb test out ljmp fs push out in adc jg jg xor and pop (bad) dec sub or dec push lret and sub ret push jmp test inc xor (bad) sarb xorl rorl jecxz add andw popa insb cltd push fcoms sbb xorl cmp pushf push and (bad) xor les add xor adcb or mov movsb xor fmul popl mov jl mov orl pop sbb inc xchg lret imul (bad) push xor adc scas shrb jne enter dec sarb aam movb mov pop cmpsb rcrb rolb sub cmp sbb cmp stos hlt and in hlt movsl dec mov inc fsubrl xchg dec mov orb push xchg cmp cmp pop aam pop aam popf or xchg hlt rolb push movsl xlat mov popf xchg lock sbb mov leave xchg dec arpl cmp xchg xchg movsb dec in sahf enter or shll scas out and xchg adc fistpll ljmp enter dec cs mov div sahf subl sub inc or mov sub (bad) dec scas lret mov pusha inc pop cmp adc repz or and in xlat xlat fs nop sub lret or pop add pop xchg mov cmp mov mov leave sub pop pop nop add xchg sub orl imul cli mov jecxz cmp and lock mov add mov std sub mov mov or out cli lcall and movsb pusha nop ja pop or mov push test adc je lods mov add in cmp mov pop sbb xchg xchg xchg mov or outsl jg fnstenv lret call ret neg xor mov mov insl loopne and mov push add add out idivb mov add mov addr16 inc sbb add pause leave xchg inc subb cmp aas jge jge add adc clc push rorl adc es movsl jno in mov cmp repnz ret sbb repnz add cmp cld loop adc cmp outsb xor adc dec xor sub xchg sub lahf lahf lahf pop and cmp cmp cmp fisttp (bad) adc inc lock insl (bad) flds xor insb das addb sub outsb xor mov sub add pop or (bad) testb aas or and xor adc jecxz in adc cmp mov or adc fbstp fidivrl pop push or cld shll pop decb sbb add pop add sahf imul push add push addl stos popa sbb pop pop xor nop dec sub push push mov add cmpsb jo repz jno xchg sbb jmp (bad) cmpsl inc jg mov (bad) sbb inc bnd dec imul cmp inc outsb add pop adc pop sbb in xchg adc and aaa cld aad push adc movups sbb or leave mov seta inc dec add or or xor xchg cwtl das repnz cmpl or sub (bad) decb and add fisttpll jecxz out adc or add enter inc cmp out loope jno xchg leave jnp ret mov add dec (bad) iret inc jbe ret icebp adc sbb test mov xorl cld xlat or pop or jae (bad) icebp lock adc add ret push lds clc into mov push adc pop mov or adc or push mov mov cs lahf push jb pop lahf lahf cmp push enter (bad) cmp xor mov rorl rorb and aaa sbb add xor add cmp mov mov lods mov in icebp mov cwtl add rorb mulb adc inc jle lret test out pop cmp inc adc xor or sbb inc cld cmp push adc in xor imul pop aas pusha fsubrl add mov add pop enter or push loope mov push xor adc andb mov inc lret inc ljmp adc ret inc pop add inc popf lret jl xchg movsl dec test pushf jne cmp fist sbb xor jo inc popf rol movsl jp sub pop dec inc mov mov mov imul out cmp pop aaa cmpsl jnp mov dec push jnp dec pop mov add add or (bad) jo lahf (bad) sahf push nop inc jl cs enter mov cmp addl adc add movsl pop out xchg ret jl lock dec or pop icebp cmpsl push sub (bad) ds or je test and imul sbb jb inc or inc push nop add push jp inc int jle dec sbb inc pop (bad) sub sbb aam or (bad) aas rol adc pop jl test mov inc lcallw adc clc add (bad) mov inc add inc shl cmpsb inc adc fildl js dec pop fiadd sub cmpsl mov cmp jge test add (bad) adc sbb loopne fistp xor out or jl add aam pop movsl cmp inc sahf movsl and cmp sub jmp lret shrl inc mov add lds inc mov inc test push movsl jle or push push cmp cmp inc or sbb and xchg lahf shll xchg add movsb ss inc or test push or or jl ds loope pushf cmp mov lcall movsl lahf cmpsl insb test cmp test fwait stos ljmp scas in mov cs mov dec aam pop mov pop adc inc sbb call jne (bad) pop dec aam sub add rolb pop into lret inc or inc lcall push and and dec pop add and or dec adc mov or sbb es ds (bad) call mov addl daa bound fcos fsubrs sub fistpll insl dec notb mov mov push mov ret scas test jbe aam (bad) jb mov xchg cmpl sub push daa test ret sarl addl and pop jno mov xchg mov push adc and cmpsb push xor movsl dec adc xchg or sub push pop add adcb fcomps pop xor rorb and jge ss mov xchg inc ud2 sub mov sahf pop sbb adc aaa pop fnsave lock add inc add adc jae xor inc pop xchg jno nop mov jge cltd mov aas inc stos sub xchg and cmp jae jmp sbbl pop mov inc push jb jmp dec lret cmp xor lcall mov ds and test push pop cmp cmc mov add inc ffreep xchg in push insl mov pushf push mov rorb sbb dec jp aaa cld push push int3 sub xchg gs sub cmc jb mov fdivrl mov (bad) out pushf xchg test adc lret sbb ficoml jg add mov mov cmp jne or jmp adc mov or dec cmp push inc inc xchg lods dec adc add scas ret cmp leave mov in sub insb imul (bad) mov and and add inc or sbb pop (bad) je adc cmp mov sub je popa xor mov sub sahf sbb xor sub inc rclb push mov xor xchg lcall movl or daa dec (bad) mov push jb addb push mov cli inc inc jo mov sbb addl jne push or or inc lcall inc rorb adc jno out cld and movsl scas cmc in xor push add mov mov sbb pop (bad) cmp nop mov adc in (bad) mov movsl jae xor int rcll in push mov sbb push cmc out cs lea lret xor add sbb jmp mov adc mov mov test leave sbb push xchg mov push sbb or out push mov js clc and push pop pop add in (bad) lea scas movsb je mov push and add push mov add and test stc std xchg call test in cmp cli xchg aam in daa push push sbb and rclb hlt mov lahf sub mov in add inc stos test inc jecxz mov push jns or lcall les sbb mov imul or inc test sub (bad) cld dec aaa fidivl inc pop loopne adc sub pop dec repnz push inc and mov xor int cmp or add dec add hlt inc push mov addl xchg (bad) aaa add mov xchg movsl and mov push gs sub or stos xchg pusha sub scas nop mov push addl addr16 push mov pop call or and lea (bad) and test pop pop outsb adc lret in in fmull lret pop mov and mov pusha mov xor pop adc push ficompl xor and add mov call rcrb add dec jmp jmp xlat mov mov adc push out daa dec dec adc xor fdivr xor dec adc inc xchg xchg push (bad) mov addr16 adc adc cs mov es dec rcrb or mov pop add test test dec lods es jmp push mov and add push minps cmp dec push push test mov scas ds enter xchg push cwtl in (bad) (bad) lret push add push es mov pop dec lods lock cmpsl pop stc imul (bad) xor push mov sub sub or aaa lock daa ficom cmp mov inc shlb sub add jbe pop mov stc imul xor or js shl fnstsw pop test sbb or xchg das popa insl stos andl sarb dec loopne or add (bad) lea aaa sub cmp push cmp jne call xchg fs xchg pop les fimull ret xchg (bad) jmp fsubl shlb movsl arpl push or dec xchg dec dec jmp jnp xlat pop add mov adc ucomiss add inc rcll jl add jns add add testb mov adcl mov push push test repz cmp in dec push mov push in inc lods (bad) rol mov mov or jecxz test mov adc inc pop dec bound mov sub bound rcrl pop or add push mov adcb scas push mov or cmp (bad) or cmp neg (bad) cwtl test loope jae pop (bad) clc sbb sub cmp cltd ljmp mov dec in mov add (bad) xchg arpl add and jmp xor xchg dec mov rolb mov (bad) rcll add xor outsb lret sbb or sarl xchg sub movsl popa mov mov sti test cli cmp (bad) or dec int inc inc mov or adc ret pop popa arpl sbb pusha movsl pusha inc or pusha dec cmp movsb pusha adc add dec mov inc or adc in lret testl pop rolb fprem idivb pop jmp mov ljmp lock negb sub popa shlb (bad) insl inc mov in sbb cld sbb sbb adc (bad) loopne in jle xchg lea mov and push mov sub lret ret (bad) cwtl ja push mov push inc test pop lea loop cmp pushf and sub and int sti add add and mov pop (bad) push imul loopne dec or push in movsl mov arpl xchg push push fcomp dec sti and push push les or dec sar jbe cmp fsubrs pop pusha mov scas jo inc mov adcb leave inc aas lea inc insl lahf aas test jno,pt sub or push popl cwtl movsl sbb sub je add cwtl frstor out movsb lods fisubr xchg into sbb test xor mov or pop int imul adc rorl add popf inc jge lret mov shlb shlb pop cli imul jmp inc imul push push jle in test dec ja push les dec add stos push ret pusha popf xchg aam (bad) mov (bad) mov jmp ljmp cmp aad or inc jge test xlat adc les outsb shl in jae pusha pop fwait cmpb xchg mov push xchg dec and push arpl lods std or je inc loopne fnsave and div sbb cmp mov jb insb push jns and adc jne es dec push or inc flds aam mov pop test pop push cmp push push fisttpl mov inc jmp ljmp xor adc (bad) cmc push out ret movsb lret push ss fldl fnstcw ja notb mov sbb sbb xor cwtl pop push xchg sub push icebp inc movsl inc add pop fisttpll (bad) xchg nopl aam imulb pop call jge aam test nop pop mov sldt inc dec lods cmp inc popf aad sbb fisttpl dec push lods inc push mov cmp add xor add mov dec and push adc sub xchg imul and lahf mov adc push lea roll add loopne icebp js test nop mov iret (bad) das rcll cwtl or dec push imul cmp (bad) fs stos dec cmp cmpsl cmp pop pop or sub or cmp push mov push and mov mov mov pop xor inc mov inc mov add inc iret cmpsl mov mov mov lds dec cltd mov (bad) movsl mov dec pop add sub or push and inc push or js jmp adc sahf cmpsl cmpsl inc xor add inc mov or (bad) mov insl add cltd add adc or add dec and add or add lods lret add add inc fwait cmp cmp mov pop pop andl cld push xchg push jge pop cmp inc bound push ret dec jns lds inc pop (bad) sti and dec pusha add scas mov add adc mov pop mov push cld pop stos jge paddsb xor test test or add or test fidivl and test push or or push push inc fwait or mov and mov cmp mov das out cmp dec or or inc stmxcsr pop mov fadds or pop insl sub out pop inc lods repnz (bad) and add add insb cli into rclb fcmovu dec pop (bad) push mov mov xchg and mov sbb xchg out fstl jb add jno std lods cmp mov (bad) test push xchg adcl ret sub movsb cmp sbb (bad) cmp push or cmp dec lcall test into dec aas jmp push push inc test inc iret clc mov or clc stc and lods jno mov out pop xchg push hlt push enter mov jl cmp sbb test repz xor inc into in jmp loopne xchg pop rclb sub jb test cmp orl add test addb push test xor dec add inc cmovg add test xchg cmp add aaa adc add sti add jge ret inc or adc pop adc add add nop adc cmp cmp sub jmp or and loopne add lods and xchg jg daa push pop xchg fwait daa pop push dec add test mov bound push or or jmp dec xchg mov push arpl xchg push clc lcall rorl pop push dec sbb adc (bad) popa sbb (bad) movsl jae adc sbb jb pop or je jns cmp xor lea lret cmp dec popa sbb bnd mov std fnsave dec sbb sub ss mov (bad) notl rcl inc add into test mov or mov cmpsl jecxz mulb xchg inc inc sbb mov cmp xchg or mov dec cltd pop aad inc jmp sbb je add loopne adc shrl sub or stc add in sti sbb je pop lret mov and les pop loopne out push mov xor rolb fwait sbb and imul pop mov lods cmc outsl (bad) mov lea push jl jb adc mov lret andl jl imul pusha mov lea xchg movsl mov push popa stc and mov inc pop dec fdivs shll into inc push mov cmc hlt pop loopne movsb and push xchg jo or lock (bad) js or dec popf pushf loope mov and into jne pop orb xor and mov inc clc test sub dec dec cmp add adc shrl pushf xchg sbb shlb out add nop out rorl ss jl push insb add push call add lods mov enter inc mov dec loopne xchg add push and xlat fadd sbb cmpsl push test jp nop mov jge or inc mov adc loope cmp nop push push pop push pusha sbb jnp mov cmp stos movsl mov div stos sub and xor push les pop pusha or rclb push aaa lds push xor adc nop neg popa mov xchg int (bad) xor inc roll and sbb push jg scas add test rolb stos add into add out lret lea dec jg sbb pusha mov jo ja sbb scas inc push adc mov adcb cmp pushl add sub mov or test push dec daa or (bad) jne and cltd cmp inc aaa jmp mov add or cli (bad) push push in inc shrl mov push or ljmp shr rorb sub mov in push popa es xchg xor dec mov jo dec or mov pop bound cmp sbb js pusha mov and inc pop call jb pop in pop int3 xor inc dec inc sub lea test inc cwtl xor push jge jo inc cmp push ss rcll xchg fldt lds pop outsl or mov and cmp add push push sbb cmp push ljmp bound lock mov in xchg jge cmc or push xchg mov stos into add xlat cwtl jl mov push fimull dec in (bad) push mov in xchg jge pop pop mov mov add jmp imull (bad) int lret sti mov mov stos push sub mov and pushl (bad) lret adcl pop or cmp insl add popf inc or jmp push fbld or gs and pushl add xchg mov clc fsubr pop xor inc add or faddl insb js clc (bad) pop mov pushl ljmp mov mov inc es add mov adcl push cmp mov rol clc or push mov pop add sbbb sub in dec jle jmp movsb or leave jmp lea arpl mov imul arpl add popa and or loopne and test sub nop aam js or jg sbb sub push pop sbb and pop push inc inc mov int pop push (bad) xor inc dec inc adc cltd pop inc xor xchg pop or fistpll cmp test jl pop pusha cmp imul sub hlt add xchg mov and out adc lds and femms clc popa add xchg push and adc xor ljmp push icebp mov adc push xchg outsb cmpsl jo adc xchg outsb push pushf aas push push sbb stos pusha mov sbb daa gs dec cld jne cmp push out arpl stos dec sbb jno enter out aaa js cmp jle ss push pop inc leave push pop dec xor or add add and lea (bad) or or rcrl and dec push adc sub dec pushf daa ret cmp sbbb cmp and pop mov inc cmp imul cwtl adc int3 push lods xchg push jmp dec imull adc mov sbb cmp jecxz loopne cmp ja or ret jg (bad) ret and mov test out or push ret xor bound sub lock xor jmp add mov aas xor push add sbb inc out dec push dec xchg (bad) daa je push les inc pop and daa scas mov (bad) pop mov ss add es sub imul aas add or pop add pop sbb xor dec lods testb mov pop jnp push xchg test aad fisubl cmpb push mov mov add scas jg xor pop test xchg xor test sbb xorl (bad) cmp andb int (bad) fist scas jmp mov adc sub popf sahf xchg mov or sahf jbe dec push xchg gs push and pop adc jb rcrb inc cmp mov arpl loopne mov pop cmp pop fldl out out pop or mov outsb mov fwait add pop enter mov test jl fwait sbb imul clc sub and or add rcll test mov adc add loop loopne inc add in test cmp and inc mov xor lods lea lea mov ret imul mov call push inc mov roll clc push jb rcrb adc adc adc adc lea in subl jp cmp mov push push pop adc push adc shrl jg adc outsl pusha and and pop push push xorl das push data16 loopne mov scas lock xchg fcmovbe pushf sbb mov sbb xor jne adc pop push inc mov cmc or adc rcrb xor nop push nop (bad) xchg add repnz add adc adc mov jl test push adc (bad) bound mov xchg lock mov aad movb js adc and xchg popf (bad) lock sbb sbb or jp push jmp outsb daa push call sarl shll movsl pushf aad je add cwtl je repz xorl rcl xchg cmp inc lock shr mov mov and in jl nop js xor fsubr or mov and dec les cmpsb (bad) mov and mov inc out add pop jle mov cmpsl mov mov mov cmc shlb lea pop jo add xlat mov cmp jp xor gs xor xor dec clc mov test cmc test add insb (bad) xor sti xor pop jb (bad) dec inc inc xchg cmp adc (bad) mov jb mov adc jae cmpsb sub or imul nop dec and xor inc mov sub stos ss lcall pop sub cmp lea mov inc les pusha add pop mov fsubs jo stc fildll pusha std push js pop dec push push jl fs jg sbb lret je push inc movsb aas test jne jge aam (bad) jns shrb dec sbb ja das sarl push mov push mov nop add cmp push mov sub insb (bad) mov lea bound mov mov test xor nop xchg movsb (bad) xor lea aaa pusha sbb dec daa mov add mov and adc xor mov push mov or inc xor push aaa add add adc pop push push pop and inc gs or imul jb xor xor add dec pop fiaddl add cmp xchg ljmp cmp test or in lea mov jno jge cmp insb decl sub test fsubr sbb arpl inc push fldenv loop jo imul add scas mov lahf fcomps add inc pusha dec and mov xlat mov (bad) movsl or xchg hlt push xchg fs mov mov push xchg sub shll mov pop adc popa loopne inc mov popa jno mov add cmp cltd dec and inc stos jmp push and (bad) aad or add jo cmpsb mov sbb push sbb cltd arpl cmpsb cbtw lods jl push cmc sub and dec pop push ljmp mov bsf test fwait push (bad) movsb fmull je jns into jmp xchg sbb sub inc add inc pusha mov add sbb add jne lcall inc add sub pusha and aas and lods stos (bad) enter and push out and lock and and bound inc jo push mov add push nop dec xor imulb push das dec mov and or outsb pop pop dec mov mov adc push sbb and nop xchg (bad) sub call in inc cld push loopne out mov xorb sbb fs push cld pop lock bound iret add pop pop in js imul dec dec sub sbbl test int mov div rorl xlat minps or or mov fadds adc jmp push out (bad) lret nop dec nop sbb int sti cmp lahf push xlat ret outsl add inc inc pop rcr and into (bad) je fcmovbe movlhps dec mov jnp repz (bad) cmp aam outsl movsl xchg mov out es fstl ret imul jno push test push sbb inc and std ret pop test rcrb fcmovnbe push out les ljmp sub pop add or arpl inc adc adc and aad pusha cmp inc (bad) sbb push test int test add sbb out data16 outsl ret mov ljmp scas fnsave pop mov fldt or cmp mov fdivrs fcoms sbb sbb cmpsb adc repnz insb fcmovu faddl aad loopne add pop rclb imul (bad) mov or inc lcall or test outsb fcomip adc pop add cmc jo xor ret hlt add mov test fsubl or lods lea xor dec ss repz push or push push data16 inc mov push sub jne pop add mov or inc imul out test loopne and dec or inc add lea cwtl xchg inc jle inc pop in push jns enter fwait xor adc aas rolb dec push rcl mov sub fadds loope inc add in loopne add lods shlb mov mov mov inc mov daa adc or mov int3 xor push sub aad and sub call aam or push jo clc inc pop in pop push sub je test loop push cwtl mov sub loopne lods (bad) mov xchg jl inc aam shll dec shll popf out push xor ds dec shufps jb mov pop dec lock popa nop xor lcall adcl inc xchg xchg out fisubr lret and into iret in jbe mov xchg ss and adc mov adc lock fcomps clc int mov movsb pop dec shufps loope or sbbl daa ffree adc pop sbb into mov lret jle mov es adc sub faddl xor jo xor cmpsl (bad) jbe roll pop fsubl xor es icebp inc or rcrb adc mov cmp ficom int3 pop sub jmp movsb mov sbb out dec sbb xchg jmp xchg cmp lahf jo sub add mov aaa (bad) pop rol pop mov call je and xchg loopne pop or mov enter nop xchg adc pop or jo int out mov jecxz pop int3 add mov mov test je or xor mov (bad) ss inc fild or add or jnp inc cld jnp inc sbb sbb sahf xchg daa xchg or neg mov cmc mov jmp rcrb inc inc jg push dec dec sub add dec pusha mov sub xchg or jo inc dec sbb adcb pop nop ret add mov lret in add mov outsb xchg or mov cmp cli je lea lock dec lock mov dec in int3 fs and and xor push in je adc and inc cmp lds sub sbb sbb or mov push jo aam fimul iret cs popf push mov mov ss mov mov outsl xor loope mov fistpl pop jb repnz mov and inc sbb pushl sbb out mov jb (bad) negb sub fstps pop nop mov loop inc jo ret pop pop clc in in inc repz fcoml outsb insl leave pusha cmpsl (bad) adc in sub daa imul fdivrs icebp push push jae xor fcompp scas repnz adc cmp (bad) mov add add mov (bad) xor mov cmpsb shrb adc sbb dec jle xor loopne lock lea pop xchg or aas lock mov icebp push inc add inc add hlt inc cmp es sbb xchg fdivs loop pop pop scas xchg jl incl push or dec dec or lret nop sub clc cld js pop xchg les outsl cli mov insb fstp addr16 xor and mov jo lods jns js pop jmp sbb lcall movsb pop mov mov movsb inc adc mov jo in inc add sub pop rcrl pop fdivrs test nop and clc dec mov bound fs adc jno leave test push xor jo mov imul and das pushf stos dec lds inc fldenv repz rcll les es popa fdiv (bad) push push pop cmp sub fcompl sbb mov xchg daa test and repnz cmp mov cmc (bad) jnp jns div adc jns pop pop fiaddl das cmpl and and addl negl push jnp scas mov push push ss pop mov jnp popa dec sti mov cmp mov pushf xchg push jge dec fcoms sbb xchg sbb cmp nop mov push call mov pop adcl insl cwtl outsb xorl daa jnp inc mov (bad) or out movsb push aam aam push add scas (bad) push adc add loop sbb leave std xor lret pop mov dec pop sbb nop/reserved imul mov cmpsb (bad) clc fwait add mov outsl mov mov out psllq push daa fs out mov mov in popa adc push jae lock cs dec into rolb imul push xchg or sar or jg scas add sbb addl cmpl imul lahf mov adc pop push js test lods cmp jmp pop and pop push add cwtl (bad) imul push mov ds jp inc mov pop mov pop adc mov xchg andl xchg xchg add imull cmp fild std lea pop les (bad) (bad) imul push lahf mov into rep and add sub clc test inc cmpsb aas jle js and jle nop test jnp call lret sar or ds cmp rcrb dec cmp dec repnz bound or xchg and mov imul fiaddl mov inc rolb and aaa notl mov or adc pushf dec fidivl mov cld cmp addb popf sarl inc int3 inc aas cmp fistl push jns inc pop (bad) add aas enter sub mov ljmp and (bad) jge insb jge cli sarl je add push jae (bad) js rcl push aaa pusha cmpsl rolb or push push sub loopne cs les mov pop inc in test adc mov add jl cmp push in inc sahf out inc cmp lods inc mov lret adc push add out imul cmp mov (bad) adc pop pushf push insl mov idiv push in rol sbb mov or add (bad) out sub mov dec int3 lahf sbb ret push jecxz push call and jl adc rcrb aaa mov jl shlb sub dec imul or or adc xor hlt adcl xchg ljmp mov dec add add jg jbe jg sbb roll push enter in in push sbb xchg sub inc xor dec rorl dec push dec das pop dec fcom jge and and (bad) lret gs lret push sahf and push das dec and and mov test je adc mov cmp ljmp and and add add xor add add xlat pop loop push and ret and stos cmpsl adc pop mov xchg in push sbb push mov inc push push mov xchg pusha mov and inc pop shll sbb in pop pop push cmp ret add jo pop (bad) xor or or jg jg enter es pop das (bad) in leave push mov and mov xchg dec add test sbb fcoms jg push push pop sbb dec pop lock das mov dec add adc mov xchg inc ss inc fldenv push pusha jmp inc andb push cs pop ret sar adc sbb data16 aas pop sbb adc mov pop pop cmp push pop ret adc push add orb lea pop into or in jle pop cmp mov sbbb gs loopne and push sahf and stos mov push fsubrl or jns fcoml dec insl push outsb cmpsl movsl mov mov incl dec and aas test push jg pushl in call clc push xor outsl rol fldl sub inc mov mov add pop add add xchg aam aad mov xor out add in add aaa cmp add pop cwtl or aaa sub aad add loopne adcb adc and movb push adc dec jo xorb lahf mov sub orb mov cwtl and std aaa ja push movsl xorb rolb fisub xlat inc xor pop jmp adc xchg iret sbb (bad) jp mov mov mov cld inc cmp outsb rcrl repnz mov adc lahf pop lea decl mov inc fadds call jns sbb or mov add inc test inc idiv (bad) dec das add pop push ljmp sbb mov pop call cs test jne xorl and xor sub mov add icebp or subl pop roll (bad) cld add in bound decl jne xchg pop andb xchg inc mov test add sub movsl push fistpl or mov xor or or push jp clc push mov sysret adc fimull push or xor mov push adc sbb push push sbb sub ja fcmovnu inc jecxz lret push inc jg pop ja cmpl xor dec mov lds addr16 mov and or or mov mov add sbb or pop bound jnp ret fild fs aam jno mov loope adc dec sti adc add not and jmp test add es bound adc inc or pop inc or or mov ds push mov jg ret mov jno push pop mov dec std xor sbb mov call inc popf imul loope jg push add jg mov pop adc push movsl sub inc xchg xor or cmp add sbb aam adc stc sti dec add or jmp push daa and fistpl shrb shrb xchg mov mov decl test adc cmp xchg les into mov call shl sbb nop xchg sbb inc nop out into pop and xor test insl mov fdivrl inc test inc or pop xor sub and push xchg jne sbb test mov clc insl loopne aaa outsl test je jo jecxz mov push jae add dec in sbb int push gs jle push add jl cld dec add xlat push inc jge pop and fs in sub add lds xchg sbbb inc adc icebp push xchg mov push mov push or fiadd (bad) mov cwtl call jo clc mov test lahf jg lock shrb add xchg inc cmp add add or or push pop pop ret fld mov dec add mov es xor negl and add pusha inc scas sbb push push pop mov jl rorb lret jne and lods lcall idivl mov mov pushf aas push cmp mov and rol xor mov pop or cmp repz add test dec and in pop lret xor in or faddl push add dec cmp aaa addb inc push cmp push aad dec xchg push push rol leave into or shlb jg adc aam addl push xor test mov or add adc sub mov add mov nopl shll loope mov mov (bad) jns jle or push addl iret inc xchg idivl inc pop xor je mov ljmp adc pop cwtl lea push mov imul arpl lret out add jmp stos sbb cwtl div inc rcll push scas xchg and mov inc xor adc push push xlat adc fabs dec lcall add cmp popa push adcb and xchg lods iret std pop mov jle lods insl bound add es dec sub mov outsb (bad) or pusha mov push faddl dec push or mov adc dec fmull adc xor or push push cs enter add ja test pop rclb add xor xchg adc mov inc sbb dec test int3 jl xor or push (bad) test rcrl pop repnz push sbb push pop (bad) faddl and insl les xchg cmp les sbb lea xchg and xchg movl in popf int3 sub rclb sub arpl jno mov test cwtl addr16 clc xchg xchg push or mov inc mov dec fcmovne push sahf sub aam sbb push add fidivl or rol push pushf clc push aam stos or push adc and or rolb cld add dec jno sub adc mov xor sub imul or nop (bad) inc packssdw (bad) push data16 shlb push orl sbb sub push cmc lret xchg jne xor cmc add sbb xchg stos inc pushf cld push mov out cltd add add mov add push mov mov pop fldenv lds rolb mov fisubr or add ja lods pop inc sbb push (bad) mov rorb aad add aas mov in sub popl add push enter sub mov cmp test leave inc and mov and mov push ret add and mov test cmp jg fcomip and loope fistp push lea cpuid sub mov (bad) repnz call or in add or pushf addr16 add mov or xchg sub adc shrb mov imul ret pusha adcl sbb ljmp dec dec jle mov (bad) mov push lea lock mov jo sbb mov and and sub mov or or cmpl or push in or sbb xchg mov scas lea cmovle rolb sub test sbb icebp inc dec xor (bad) add jns push sti mov push dec js fist fldl (bad) fstpl mov (bad) xchg lahf (bad) xchg pop jb jb enter sarl adc sub xchg push mov pop lock adc push sbb out out sub mov cmpsb jne mov push dec mov pushf or inc movb jge push cmp outsb ljmp push mov mov push dec (bad) mov dec push syscall adc adc inc lds iret add lahf or int3 push jb adc cmp push test enter mov or jne push push lods sub cmp pusha inc aas jp push roll xor sahf cmpsb xor mov add or and jmp mov fistpll or dec cmp jmp aaa ret pop pop je sbb adc inc stos cmp das mov adc in inc push lcall mov adc dec in gs mov xor sub push inc js js call aam mov jp inc add mov push es cmp dec adc lea and (bad) mov inc fcoms ret pop ret insb pusha loopne nop stc jle sbb push js add (bad) (bad) xor push fs mov pop pop rorb ret push mov loope sub ret scas jo in mov sub lret in rcl sbb leave or fnop push inc nop adc fmul dec inc leave mov rcr mov pop mov pop test dec xor sub rclb pop arpl cmp loop push test (bad) inc add xchg mov sbb into stc shl adc cmpsb or push je in lea in (bad) flds lock cmp mov and sti add and xor int3 popa mov dec xor (bad) cltd imul push mov pushf and mov mov addr16 inc shrb mov push mov add movl je push xor mov mov (bad) clc mov ret xchg rcl inc xchg push push nop mov cmp inc sub inc aaa push adc idiv ret dec rolb push adc stos adc iret add push dec aas xchg (bad) jmp (bad) ja dec sbb adc lahf test or test subl stos ss stos inc add sub lret push leave mov add stos (bad) mov divl xchg adc (bad) and adc aas add adc jg mov fistpl adc mov push loope add cltd lcall not not and imull xchg and add lods or cmp cld sbb and pop ret cmpsb inc insb aas mov jge push add push inc xor scas imul decb rorb in fstp and sub cmp push sub ja cmc inc pop and mov add cmp leave movsb mov push jmp add xchg cmpsl add or jl add fs sbb les jbe ret mov movsl out test sub xorl dec sbb pop add sbb sub xchg xchg fnsave rorb or enter add sbb sub push and and pop inc fiadd pop or jns cmp adc mov les and test enter xchg aaa shlb push adc mov sbb aad inc pop call in push add mov mov daa add sbb pop fisub fs (bad) je je fiadd add push push push add pop es lock add xchg sbb sbb dec pop or sub das pop mov or adc and cmp push dec mov ljmp jbe cmp popa aaa lea mov push add push and addb (bad) sbb out and pop xor add sbb mov inc pusha add lcall add sbb add lret xchg jb inc pop mov mov cmp pusha push dec inc mov adc dec lods pop lock (bad) add pop pushf cmp add cltd movsb movsl inc rcr push push lock cmp inc add cmovle rolb sbb or fucompp cmp dec sub push js js aaa dec sub lods and xor pop mov push imul xor sbb pop mov xchg sub push insl and or dec inc or mov xchg inc mov cmpsl sbb cmp adc xchg sub adc xor xchg outsb adc xchg fidivrl lock push push nop or fwait nop or sub jo mov lea push test and lahf add adc add add ds xchg and push dec push (bad) fsubl inc mov push enter pusha or xchg test sub mov in loopne cmp js adc adc pop mov dec loope sub imul add pop add inc js add ret cmpsb in jns cmp test push or in add or js or xor sbb mov mov flds mov adc stc add cld iret icebp xorb dec jecxz and inc mov rcr jb (bad) test inc movsb inc adc outsb and (bad) dec xor jno fisttp sbb add adc mov fdivr jmp mov movsb cmp mov lods sbb dec jmp or test mov push xchg cmp popf cmp mov andb notb dec adc rcrl adc mov cmp sbb fildll push loop pop sti or xorl fs push arpl js adc rorb dec xchg movsb mov mov push inc add mov mov (bad) xor rorb dec dec rcl inc add cld push dec adc inc mov cmp nop mov jl imul and sbb nop mov test dec (bad) popf dec mov cmp and rclb xor (bad) inc pop popa mov pop scas pop dec cwtl jg xchg inc cmp imul or jbe dec mov lret sub mov sbb pop mov cmp cmp or jns mov jp push or dec in sbb mov flds cmp imul insb push sbb rorl or sbb add jmp das (bad) jo jmp xor sub cmp pop test loop rcrl inc aad xor dec shrl inc mov jno or push popa lods mov test mov or mov fs fistpll fs fisubl add sub pop or xchg test inc push mov or xchg sbb int sub cwtl pop test inc adc pop xchg pop inc nop loop lock dec shr lar xor pop or mov push imul es arpl addb int3 inc jge push and sbb or and xchg xorl fcmove les cmpsl jae fs fiaddl dec push xor push sarl inc jp,pn push add gs push jnp dec jl inc xchg js and add mov (bad) mov int inc xchg push push mov xchg fwait sub pop xchg fild push or or ja sub pop nop pop xchg sbb pop or dec inc sarl push mov jg dec loopne xor or sub add add xor adc loopne adc and jge jge test aad rclb mov lcall es test add sbb sbb aam scas cltd daa loopne add sbbl push dec js push fs push mov mov sbb mov test and sbb notb ficomp sar test enter jo rorb loope push les mov push mov lock mov or arpl inc mov mov sub jmp dec insb push rclb mov jg fsubs inc sbb adc xorl xchg adc test push lret adc xor xchg in dec or cmp sbb cmp pand ja or (bad) xor test decl sbb aad shrl add jno stos mov sub xor add mov sub mov push clc adc and test push inc loop mov addl dec adc add rorl push popl pop test sbbl clc inc lock and (bad) adc dec push arpl or adc test xchg scas (bad) lahf pop add dec cmp repnz inc sub rolb push inc cmpsl xchg push adc push dec lret mov mov cltd insl fild inc in add mov dec jo lds inc hlt stos adc insl pop aad mov and pop mov sub and aas dec inc test sub cs popa insb les (bad) sub push jecxz outsb inc mov out cmpsb push loope push inc dec enter popf iret repnz mov cmpsl pop inc push cwtl or mov jo adc jg and push xchg mov push out jnp js popa add jne xor mov jo xor popa mov inc jne sbb mov xor push mov and sbb mov movsb jb cmp shl fsubs add call dec ret cwtl push jb add cmp xchg mov dec mov icebp and (bad) jge shlb imul test or shl loopne int push fmuls or sbb fwait cmp stos dec outsl lcall jne mov loopne or sub push and imul imul cwtl mov ds xor push mov fadd inc add or les pop mov sbb cmp mov mov cwtl xor xchg das adc jae jecxz (bad) aas add dec test inc inc pop les mov les iret shrl and fs test stos push jg aas jb push test mov push lea stos xchg dec imul push push lods inc cmc pop rol lods pop sarl test loopne loopne sbb stos add adc sub sbb xor xchg rorb push add cmp pop jge push add jnp adc adc cli jle fimull (bad) mov jg das lods jno aam andl lock and cwtl (bad) or pop inc adc mov popa daa adc adc xchg pop outsl dec pusha and add push sbb push call xlat ret (bad) pop sub test call pop push popa jecxz (bad) xchg jecxz iret add bound dec push fiadd pop loop imul dec outsb jmp ret or dec jne cmpl cmp int3 lret (bad) shrl mov sbb ret jmp mov pop add popa sub mov pop and cmp lea test pop leave push cmp adc pushf js aas dec add pop push adc xor xor push inc sub (bad) dec arpl out push jo enter pusha div movl push push insl push push inc ret adc lahf shll dec cwtl pop int3 or testl mov jb lods dec jne lahf push pop jne pcmpeqw cs (bad) xor dec cmpsl decb jmp xchg movsl loopne into xor jl inc pop push test inc push push mov jno xchg stos xor inc scas jo push cmp test mov (bad) aad push sub mov test ss push stos jno mov dec push push jno inc xor rclb dec push stos ret test or outsb decl je mov adc ret and jnp mov and fs in cmpsb lcall push fistp lea pop sbbb es and adc aas dec add adc pop lods and mov and jg aas cmp test fs ret xor xor gs pop push push mov call clc xchg test xchg mov mov sbb dec das test cmp lret clc push (bad) das ret and cwtl movntps pusha inc mov sub pusha sbbl push xchg orb fiadd lea (bad) push inc int3 sub dec and iret adc xor inc push insl in es adc sbb push xchg xor xchg lea dec xchg lahf mov or mov lret imul sbb push mov data16 int pop or mov push add jl popf (bad) xor adc mov mov dec sbb hlt cli cmp lahf or adc inc xor lea cs rorl les pop push mov sti lcall mov inc cmp lods adc daa ret xchg or push dec aam dec dec movsb pop xor sbb mov mov xchg rcrb mov ds pop lock sbb add dec out test icebp adc push jno mov jb jecxz add add push jns cltd (bad) loop xor jmp jno (bad) fildll arpl imul or sbb mov adc sub inc adcl movmskps (bad) add pop push cmpsl add test inc push addr16 and insb das mov push mov aaa scas jmp js cmc cmpsl xlat mov push sbb fldl notl ret push ja enter jp fcomps dec add leave test lcall int (bad) sti (bad) out ror push aam push cmp or in in pop hlt mov mov aad xchg dec or sbbb rcrb pop push loop aas sbb sub mov dec inc push popa push leave add jg xlat cmpsl sbb aad and pop xchg add test inc sbb add dec add das inc sbb lret cmp add mov nop pop push push xor iret pop mov test dec clc pop insl es add push add jle aas inc test mov xchg mov inc popf orl xchg dec cltd (bad) ds or jmp or xor mov (bad) std and mov loopne sti lcall dec ret or push orb popf mov mov (bad) (bad) cmpsl (bad) popa shrb push je jg mull mov in push xor rorl mov popf data16 jo cmc xchg inc adc and ss in xchg inc inc push xor inc sub dec mov outsl loope test rcll loopne mov pop xor dec rolb int3 mov pop inc xchg pusha mov or sti lock out in lock mov ret add adc and mov loop loopne or mov sub or cwtl or mov mov push arpl in mov jo push or push sub push push and addr16 push fdivrl lahf jge mov jge jne cmpl xchg aad mov sbb inc dec xchg fcompl or (bad) and adc adc mov push pop mov lcall mov dec xor xor mov outsb lea fcoms ret pop js test ss or sbb pop mov clc or pop lds add sub lea leave popf add xchg js mov and adc add add pop mov and xchg jo sub mov arpl mov popa pextrw push cmpsl nop push and jmp or pop or mov pop mov dec fistp lahf movsb xchg test inc rcll movsb jg arpl mov push loope cmp bnd inc mov inc in ror or inc adc dec sbb push jno add popf cltd sub cmp int push lret imul imul outsb rclb pushf or jmp push adc xor push mov mov jmp inc mov mov ret int3 mov inc sub jne inc stos xchg and and push push jo je cld adc ds mov mov inc sub jp lret sbb jne xchg jne jne pusha cmp dec shlb leave pop leave push pop fdivrl cmc lds push add sub lock sbb loopne and or dec sti add insb adc pop xor push add rolb shrl inc lock imul xor iret xor pop jnp pushf or jne leave jbe cmp negl faddl outsb jne imul outsl fidivl (bad) dec push lods nop dec sahf (bad) int3 dec enter jnp mov cmp movsl out mov inc fcoms jne adc xchg cmp pop (bad) push lea xchg push dec add sahf add push dec add or jmp lea sbb inc scas push mov pusha push xchg sbb rorb imul mov push add clc dec mov push inc ficompl test inc push popa inc add push xor adc jno add or cs ljmp jg cmp jne cmp jne add aas mov push fisubr mov or and push adc xor cmp push dec jecxz jge bound cmp jecxz or and jecxz push repnz inc mov dec adc lahf cmpl dec lods push ret mov or das leave movsl lea insb rcll in cmpsl imul stos inc mov push out inc dec mov push and push and movl decb inc mov dec lea cmp jb and mov cwtl push call mov push or ret jge sbb pop cmpsb aad rcrb ja xchg repz andl orl mov fimull lock mov mov push xor and add rol (bad) ja aas mov mov out mov sbb mov aaa dec test mov rcrb dec dec cwtl or pop and sbb inc mov push rol (bad) js or (bad) lea (bad) insl cmp sahf add (bad) hlt cmp jge enter sbb add seto mov xchg adc inc push sahf ret es sarb sbb jo pop imul insl or dec jne mov cmp cltd (bad) dec movsl shrb or inc or out incl in insb sbb push insb pop sbb cld cmp xor or inc jmp lahf dec push sub fdivr adc pusha xchg aam (bad) xor push sub push push hlt cmp push mov nop std aad or inc lret push leave ret jmp stc testb push lea fsubrp addl movl sbb cmp jge pop add lahf sub lahf es xchg inc adc call dec jge adc clc outsb lret adc mov cmp fimull mov jecxz ficompl loopne mov enter jb icebp fdivl sub pusha fmull add push dec arpl sub sbb or mov inc loopne (bad) xor das pop xchg dec repz inc pop push cmp mov cs das push or push cmp xorl sub dec mov cmpsb push inc (bad) xor push outsl and cwtl fucomp push andb daa lods push and sub fs imul inc lock clc test pop mov push clc add mov clc ret roll or mov dec dec dec add xor dec add bound add adc inc ret ljmp mov sar add popf das dec adc xchg dec call jne inc test mov pop lahf or sub add sbb add cmp pop shll cld adc push and or xorb lods cs pop aaa (bad) dec clc dec add outsl push xor insl or cld jmp sub mov movsb mov js add xchg pop add lcall mov push mov xor adc add dec inc push push pop cmp pop pop inc cmp addb push fist fist dec das xlat stc and inc mov or adc shlb sbb fwait das or mov rcrb dec add outsl (bad) cmp fldl addl ljmp push daa add or stos xchg out xchg mov insl adc push (bad) jbe jne xchg jge inc xchg lods dec aaa fldl adc pop cmp xchg sar push add test mull stos (bad) add inc sub pop and scas inc mov inc mov adc add arpl pop add push arpl sub pop fildll rolb add sbb pop inc inc mov push pusha clc push add sub push dec dec cmpsb test rorl inc and cs xchg lahf cmpsb xchg and sub mov cwtl pop sbb rcr test orb mov daa rcrb ljmp sbb movsl dec dec xchg cli insb sub pop xchg cmp jbe add add fcoml dec sti sbb lea pusha mov fwait roll and add or adcb xor inc or push (bad) rol (bad) das mov sub sti add inc pop jl add xor or mov daa shrl sub push dec pop js sub into push pop dec cmpsl xchg pop pcmpgtb jne rol add leave pop adc adc xorl imul mov or or add test mov adc sub out push cmp jno or inc shrl call (bad) inc es jmp sarl (bad) jb push inc jno add fadds xchg mov mov push inc in pop adc xor cmp inc pop test cmpb adc add test lds xor push or inc add nop (bad) jo jg hlt cld mov sbb jg xor jge cld mov push popa xorl hlt and dec imul add lock inc xchg mov add mov fs xor xchg stos in mov lea (bad) adc in in mov andl push and jge sbb loope push mov add (bad) add push shll inc add jle cmp incl pop or cld pop clc xor clc andb jo popa pop sub daa jno jmp adc sbb sarl push inc jp xor cltd xlat push xor mov jl sub or (bad) mov lahf iret mov sarb es or add cmp and adc sub popa push pop inc or mov push jecxz jp mov pusha mov xor mov pop xchg mov cld mov push jne js or mov mov aam mov rorb fidivrl or jns into adc js loop cmp fiadd sub add sub fs je push lret stos add js inc mov xchg fsubl outsb mov into jle push add shll outsl dec mov jne mov push or or pusha dec (bad) sub xor in sbb and inc cmp push ret adc test and mov push jle push mov sbb (bad) sub inc and (bad) iret push xor add cmp xor pop dec cs sarl jne sub add out fadds es dec add aas and mov add (bad) leave mov mov jle popa mov jne cwtl es inc ret sub in aas mov mov add add fstps push je pop sub add adc inc adc je hlt mov jl (bad) enter inc mov sti imul lods fstps sub in popf das sbb mov cmp clc mov pop xorl pop lea jle pop (bad) test lcall (bad) mov and inc lcall or push dec movsl clc add cwtl add push cld pop std sub ret (bad) mov adc cld inc sbb or add push mov clc pop jl divl std mov in add je out pusha lock int3 add movl and dec mov fist push stc xchg jg fldl fstpl adc dec in (bad) ficomp call fbstp lret pop sar ret clts add fstpl (bad) inc fcmovbe mov call inc cmp sub (bad) push leave add mov inc es int test add test pop add adc enter sarb dec shr shr or sbb and cmc insl xor or call rolb push fstpl mov push sbb clc fdivs jnp lds int3 shufps (bad) leave add pop shrb shlb lea jg pop add rolb inc add adc jecxz sti icebp es mov fistpl pop roll (bad) repz fldcw inc pop imul test cmpsl or divb add (bad) mov loope adc fbstp or daa mov enter hlt outsl or jl ret cmp inc cld pop adc test ret pop push mov and sbb add and mov test xchg cmpsl lods xor lahf jl sbb je loop lahf or inc js mov aas ret popa ret notl or jp push sbb xchg pop dec adc cmpl cmc push fcmovb jle inc repnz add nop js cmc cs mov jl push test pop adc ret pop ret pop inc inc sub lahf pop inc cmp mov cwtl jbe add rcr std fsubs outsb cld mov inc pop push xchg cmpsl mov lock add lcall xorl rorb icebp js leave xor jg or ss push or xchg sub (bad) cmp and lret stos dec adc ljmp pop inc test inc mov add ljmp xchg mov fstps fldl loop mov fcoms es add (bad) adcl xchg mov jg mov rcrb and mov sub or and cli in xchg dec xor or roll or sbb lret mov repz dec or clc lret and mov nop mov and lcall arpl les sbb pop (bad) jl and inc leave sbb or mov lock in xlat imul out in cmp mov lahf int3 mov loop xchg lahf fs shll fbstp mov inc adc add lahf pop in sub test pop add add pop adc (bad) movsl pop sarb mov test rcr in dec adc pop rorb push add sbb imul and fistl push clc (bad) sub inc add lcall pop adc push or in inc in pop cld cmp lea mov dec dec xor dec clc cmpl or push mov arpl shl adc xchg mov hlt dec add int3 add rclb push and shrl aam dec mov cmp idivl mov or aam rol jno test mov mov cmp sub or push inc cmp mov pop mov and mov mov inc jbe call leave data16 lods movsb hlt test test sbb rcl jo loopne inc aam and push pusha les fcoms or adc sbb pop or test inc adc mov inc mov adc push outsb pusha mov pop flds dec cmp popa fistp and or or mov scas mov sbb insl sbb sub xchg mov lahf mov adc rep sbb movsl rcll fimull xor insl xchg outsb les les and inc fist nop add andl aas pop or cmpsb nop dec loope sub xchg stos xor lea adc adc insb in mov lds xlat pop mov add int3 xor (bad) movsl add push pop ret xchg mov cmpsl pop jbe inc add lret add pop mov pop cmpsb push lock (bad) mov push sbb inc add imul inc arpl inc dec and push pop dec sbb xor mov sbb sub rcrl aas faddl sbb (bad) movsb or sbb push mov xor pop or shlb (bad) cmpsl imul rcl and (bad) sub punpcklwd pop mov outsl inc sbb clc pop or and sub inc add repnz add pop mov xchg inc add mov enter xchg or mov movsl call shrl xorb push test repz pusha dec test mov push fnstcw inc in iret add inc inc cmp and mov sub dec push lock sub adc iret addl inc leave inc and jne push sub les dec adc add sbb mov fs push adc push int fcomi inc dec adc enter inc push div incb pop aad push dec pop mov jno jmp and xor jp adc cmpsb lcall pusha dec xor movsb stos or aad repz mov scas adc (bad) rclb adc test jge mov dec insl movsb pop test pop jmp adc nop dec inc adc decb dec scas mov jle dec enter mov xchg mov dec and (bad) jg sub aad lea scas (bad) or addss push pop test fldt aas push mov inc and xchg stos or aaa (bad) xor add mov sbb aad adc in xor psubq inc insl add or or or (bad) mov push pop and cs mov adc (bad) and in xor ret push test jge fcompl push dec lcall mov push insl add arpl sar fistl or (bad) push add dec adc stos xor jne push jns shr and xchg add hlt sbb pop adc add add inc cmp inc mov adc shrl ret and mov sbb lret test pop or movb pusha pop add dec bound or (bad) (bad) aas cmp sbb dec cmpsb add test inc dec cltd aam lcall xor loopne jmp aad mov or jns cmp call cmpb adc icebp push dec movsl sub pop xor adc test clc lds sub test or inc sbb push sahf dec or f2xm1 inc and sub setae adc sub ret sbb (bad) mov pop cmp mov pop sub ficom dec adc add cmc movb push pop fnstcw movb dec push and add sub add dec and mov stos mov inc sub or mov push (bad) inc mov or push aam sub inc gs pop jmp mov sub scas add sub mov pop ret jg or mov push lahf iret sub (bad) and push and mov sbb cmp mov cmpsb in mov orl dec (bad) fisttp cmp or mov adc or add jmp fcomi mov (bad) or bound test jle lcall shr bound mov add add (bad) and test mov or rclb push push sbb adc xchg mov pop mov and lea daa ja xor pop mov test aas jg pop rcll push repz mov mov rclb mov push pusha xchg rcll outsb test inc or cs mov fimul push adc mov inc arpl in or mov pop sbb xor and rorb pushw adc outsb or lock mov jo lahf rolb mov ret or push sahf cmp sub cmp add or lahf wbinvd movsb int3 jl sarl cmp mov rol xchg test sbb xchg adc add inc ljmp jo and fnop push faddl inc mov mov pop pop movsb loop cmpsb int3 shll xchg xchg mov gs nop xchg pop rorb mov sbb mov cmp aas pop push add xor lahf xorl inc sbb pop add out (bad) mov aaa add pop mov aaa stos movsl sub cmpsb sbb sub or xchg pop sar arpl inc pop push incl mov mov add push pop in ja subl adc pop inc mov sbb inc xchg or test mov and mov pop inc push sub inc dec push inc inc cmp aam in dec pusha scas mov xor sbbl dec mov inc je add dec xchg mov test movsb lret or inc add enter dec out enter cmp jl mov or and push push fistp inc stos mov (bad) jl das jmp inc mov jg sbb in fs nop mov xor shr popf call dec xchg mov xlat sub pop and aas add sbb cmp xchg es aaa cld inc (bad) aam rcr jecxz xor (bad) call fwait and add daa or das aaa mov push pandn popa rcl shrl lcall add sbb push add ret push hlt pop sarl (bad) mov adc test push aam jnp inc rolb xor out add out xor mov daa adc aam cltd bound popf setg cmp add sahf adc xor xchg push sub push divb sub xor adc sub cmp arpl cmp loopne adc in repnz leave or ljmp mov push shr mov push lock pop push add das clc fildl fistl fcoms inc lea sub inc add stos push jae xor or add lods fisubl aam or mov push loope push fwait lret add and mov ret or js cwtl movzbl cmp and fildl outsl inc (bad) out ret mov inc cld adc pop and popa jb add pop rol shll add or mov neg loope loope add ljmp cld dec fstps mov fistpll mov xchg mov or push lock shr add mov les scas adc adc inc and imull adc sub cld orl cld mov adc sti mov pop inc inc dec push negl mov sbb xor cmp lods (bad) (bad) in sarb push mov cmp sub and add and mov leave mov jno rorb pop xchg cmc dec lea fistpll int3 xor xchg xor mov add repz inc inc rorb in ffreep or enter jb push xor loopne andl pop mov out sbb pop push lock arpl or jmp adc dec jne or mulb into dec push clc inc add test mov outsl loopne sub rcll loopne jg and jne and xorb pop and inc loop pop jnp sub pop sbb std inc sub and xor add in jmp add lret pop add pusha dec scas cmp fdivs push push inc je cmc xor cmp (bad) icebp dec cwtl popa adc adc (bad) mov int sbb imul push clc jne add sbb mov and and (bad) mov fs xor pop incl and or mov ja add into fwait mov es adc add jmp lea sbb into shr xchg push or fisubrl push pop (bad) loop les adc sbb jmp sbb sbb jle fisttpl push int int add jo inc adc sub fistpll mov in mov incl rcl lods or add jle xchg adc adc pop (bad) fistp adc and (bad) loope add incl add sahf add jb mov cmp (bad) mov add leave je rcrb faddl xchg xchg or pop test pop lret out add orb pop leave ret push mov xchg icebp or adc mov cs jno mov or mov sbbb sti xor mov add or enter sbb in add data16 mov inc push lahf adc inc and aam push inc mov lds mov sbb enter adc sahf or push mov popa add add (bad) (bad) push int3 inc sbb pop adc inc jne push clc dec jne mov adc xchg sub sbb or push (bad) add fmull mov clc mov (bad) rcl in cld jg js stos mov xchg mov inc sub jne push jge mov test mov xchg and add imul inc dec imul cmp cltd rclb test xor dec push rorb pusha jl es xor insl aas pop sub push in loope (bad) das (bad) pop mov mov mov (bad) cld fisttp dec adc adc stos repnz sub loopne sbb nop inc pop sub adc daa roll push mov daa imul mov roll push or jb dec lods xchg and shrb dec adc lret inc fist mov mov adc mov repnz and or aaa push xchg mov mov ret jns cli jb adc push lods mov jnp rol out into gs lea popf jo rclb mov xchg mov add mov push aad inc (bad) lea and dec lods repnz cmpl sbb lock out ret jge jg pusha pop dec pop inc lret or jg rolb push push out call jle push (bad) bound jb loopne cli add xchg adc clc jmp mov pop mov add push or shlb and jp dec (bad) lock adc cmp test jmp adcb push pop push add add jae popf shrb int and push add mov jmp push pop cs add push xchg test sbb add les sbb rcrl push mov ret jp jle xor or addb mov hlt lock in loopne inc and clc cmp lea adc jl mov mov inc cmp sti lea adc data16 add mov or (bad) arpl data16 xchg sbb in xor xor push add adc dec and cld je,pt mov int (bad) cmp dec insl adc pop or and pusha and push test mov and shr add push inc mov adc sbb or or mov jecxz mov fisubl sub inc lahf xchg add inc orl add sahf push cli mov cmp mov lea mov cmp add add mov (bad) pop (bad) xor out jl bound xor jno add pop sbb dec es jne and sbbb loopne inc sbb (bad) fldl fisubrl lret test in fwait add add push in js loopne inc ss add mov sahf jecxz jo orl std test xchg pop add lahf ffree add push aaa lea push cmp icebp (bad) js adc mov inc arpl pop cld (bad) mov sbb fwait dec jno sbb scas xchg push dec mov mov repnz lds mov mov jo daa cmp push push pop push jno negb inc gs sub push sbb adc and icebp xchg sub inc lahf and add push mov inc popf jae xor call cmp mov cmpsl jmp aas cmp pop mov jg jae sbb mov nop jg (bad) cmp mov fldcw loopne push mov add lock aas pop lock ljmp scas xchg sub hlt (bad) sbb mov add pop insb int3 repz or rolb lods nop dec sbb ds (bad) dec rcrb neg nop dec lds mov add mov lcall hlt adc adc mov push push ficoml inc or sbb push add or lahf sbb orl push xchg add jnp js xlat pusha lods cld enter cmp loopne popa test xlat and mov xchg jne movsb fidivr mov push mov xlat jl add pop or jns jg or mov pop movsb cmp cltd mov mov inc jb pop mov push push or ret dec clc push xorl xor inc or pop and adc cltd inc pminsw sub sub add or inc and add xchg stos js xchg or xor adcl into adc mov pop or jmp add xor (bad) (bad) push add lahf sub inc cmp mov xor cmpsb mov shrb sub (bad) hlt fidiv adc add mov sbb inc xlat or ret cmpl and or (bad) lahf add fs ljmp add inc pop cmpsb loope sbbb fwait add das sub add and xor rcrl fwait sub add paddsw and mov cmpsb dec sbb pop push lock pop inc lret repnz add inc xor inc or pop pusha adc pusha adc push mov ja adcl push xor adc xor adc leave stos js mov aaa fwait test add push lahf or add bound lahf and or dec lahf arpl mov mov cmpl push (bad) je daa jg leave push imul stos adc test xor stos dec daa mov cmp pop adc fistp xchg push pop dec pusha add inc cmpsb (bad) gs xchg lds leave add out inc xchg pusha cmp push test inc jo (bad) (bad) xchg push or fld mov cld push xor popf sub rcr dec adc pop or push mov fisttpll inc aas pop rcl xor pusha adc les fild lahf loopne jb nop adc cmp int3 pop adc add aas and faddl call enter sub enter in fsubr mov xor icebp fistp sbb repnz and inc and add pop push jne adc adc rcrb add pop and insb addl pop push add sub push add fist add push push in inc push add aas or push orb pop fistpll or push lahf push pop or addl sub paddb jo fisttpll in inc add lods inc sbb sbb rorb mov adc rolb loop jg sub aas (bad) nop pop shl aas inc lock and cld fcmovb xor dec pop adc dec lahf push call in and xor ficoml aas add andb lds ret sbb or or adc sbb aas cmp ds mov ds lahf dec jbe je (bad) lock inc call aas mov pop aam adc enter add pop rcrl lahf and dec pop in inc push push push push and mov jg and pop inc dec test popf push es lahf dec test jg pushf sub sub jmp stos mov (bad) push sbb shrl orl pop push dec add push je lea aas pop xchg jg lahf shrb and pop push xor and xor or andl push in xor push test push pop aaa pop mov aaa (bad) (bad) mov enter fbstp dec pop dec dec adc aas cmp mov jge clc sub mov ljmp or ficom test sub nop loope pop call cmp jg dec sbbl mov or push add add jb mov mov pop or add add imul xchg and aam pop fisubr hlt jle or sar add mov notl push lea adc xchg les out fdivs call scas test adc push cltd or cmc icebp sub push addb pop cld frstor xor or mov fldt pop or or xchg ret sub jne movsl sarl rcll and clc jecxz ja mov adc cmp add jbe addr16 ja cmc hlt xor add mov xor add or inc mov dec or jb sbb fistl push pusha lods and inc push mov pop sbb arpl dec ficompl lock into icebp dec lods sbb jg aam jecxz daa jmp lcall (bad) das dec movzbl or icebp mov loop in js jg mov cli mov pop adc jg ds sbb dec (bad) xor ret sbb push mov pop mov adc pusha jg pop es xor dec sbb pop out leave inc jb nop jg sub or in pop sbb je inc jg pop jg sub push xchg sub inc movl stc jg loope (bad) jo and push je mov adc jp dec int3 jg pop and jg enter pop mov lock push cld cmpl add inc movb rorl adc sbb cli mov cmp inc adc imul xchg clc or out (bad) (bad) decl cmp fimul je cmp fnstsw mov or cmp or das sbb add cmc (bad) das mov xor rorl or inc cwtl sub sbb addl insl and test dec adc push push pop pop jmp outsl mov rorb or cmp xor ret add sbb incb jo adc cmp or add xor popf test sbb add xchg push mov (bad) rcrl xchg pop test add push in mov or jle negb sti push add mov loopne mov out stos mov mov inc out notl jb mov mov inc push aas mov psubq sbb sbb or sarl jne rol add xchg xchg cmp addr16 bound xor mov xor add mov mov dec les aam xchg mov enter lods (bad) push mov and mov push push push add push add fwait add rolb repnz cmp mov push jb jmp adc xor daa ljmp (bad) mov xchg mulb test xor dec or lds (bad) psubusw and mov mov and shr jecxz add mov addr16 or push lea insl push arpl inc add dec or rclb or xor adc mov (bad) mov lahf les mov jmp mov mov add sbb jg add mov scas jne sub mov jo jl or mov push scas push pushf popf cmp and cwtl or and adc pop sub sbb or mov dec mov outsb arpl test pop or imul fnop add push cbtw enter sti cmpsb cmp inc sbb dec or out push or pop (bad) adc nop xorb pop mov mov sbb lds and popf cld mov add ljmp outsb xor mov (bad) or add xor aaa sub lock push in mov repz cmp mov sti scas inc icebp mov fist sahf jl add in cmp and out adc lea add xchg pop scas outsl add adc mov arpl mov jo pushf andb and push loopne mov mov div inc in adc ja sub mov jo lods xchg or or hlt adc push and cmp jo xchg pop lea enter fs mov lods jmp sahf aaa test mov mov fsub stos pop or pop mov adc in (bad) add push sahf add pop roll (bad) mov add (bad) daa movsl mov stos gs add loopne push sub add or mov or cmp (bad) mov or (bad) mov sbb push sub xor lret mov jmp test clc mov mov (bad) testl icebp sbb imul push es mov nopl sub orl aad mov or aas sbb pusha add cmpsb jae mov out outsl push or (bad) mov mov push (bad) dec das lret lods sti add sbb dec dec fldcw ja adc lcall roll lods sbb jmp rorl out jecxz mov fist mov bound add pushf loope arpl and loopne xorb cmpl jp adc out pop adc test mov sub and sbb repnz and inc out inc sbb addr16 mov jae inc test jmp adc in mov sub cmp mov rclb call add dec jl test add cmp cmp dec xchg out lods imul add dec clc and cmpsb mov or adc loop and loope imul or rcrb les (bad) js pop fimul (bad) popa or sub test nop pop cmpsl pop inc or gs sar sub mov insl push sbb or mov inc inc add (bad) call push mov fsubs je daa test inc xlat mov call pop loope fadds clc or xor cmp lods add fsubl lock dec pop addr16 sahf add popa add mov push bound mov xor adc into stos push add cltd sbb jl xchg nop sub jo enter ds fcmovnb mov aam dec fwait sbb mov into insl rolb push data16 lahf pop xchg roll push xchg push imul xchg fistl add pop push add lods xchg mov jb aam adc add pop fistpll add pop xchg sub add mov inc es xor ret aam adc fs push aam shlb aam xor fwait push xchg dec (bad) (bad) and rcll push (bad) hlt or mov jmp mov xor add adc xchg rolb mov jle jp xor adc popa jmp xor and fadds jns add adc cwtl jle and pop lock pop in push sarl adc unpckhps adc sarl add adc or push in ret pop (bad) hlt xchg dec or pop (bad) aam jo mov push xor inc dec jp rcll mov pop (bad) (bad) mov sbb mov sbb lret orl adc adc loopne mov jl jle sbb inc into sbb aas add pop in and add dec enter fcmovnbe aam cmp hlt ss cmpsl test cli mov inc mov (bad) adc push (bad) and or (bad) adc addb fidivl or pop (bad) mov xor cmp out daa js movsb inc fildll dec inc fmull outsb fcomi jmp test fcoms fcomp or cmp leave clc jo clc dec adc ret or (bad) lcall insb aam or mov and clc mov (bad) and dec xchg add adc pop test fnop lcall loopne call pop loopne call jl inc cmp jge add lret inc jl mov dec je dec sub push jmp add add fadds (bad) inc fstpt xchg mov xor mov sbb add enter in cmp or (bad) cmpsb jae push clc fmuls (bad) or dec pop inc fcomp push inc test lock fiadd (bad) imull test jbe adc jl pusha inc xor sbb xchg jge jo pop add add dec setnp mov (bad) shll outsl add inc mov or add pushf push mov lock adc fisttpll fistpll add sub mov int3 adc mov hlt not cmpsl and xor mov add dec test xor fildl pop clc or dec inc ret cld and adc and add cmp inc fdivl mov inc pop (bad) aaa pop fstps or mov (bad) sarb xchg mov or popa inc sub jbe cs adc mov scas and sahf pop aaa add xor repnz fiaddl push push mov cld test scas mov dec mov imul andb mov inc or pop and dec inc std enter add (bad) flds pop jb dec push xor lock or mov dec and stos sub sti sbb (bad) mov xor xchg add les sub icebp ret sub wrmsr cwtl (bad) (bad) mov jnp loopne icebp enter imul fistl mov cmp aas aas or imul shlb cmp sbb roll or add call ret (bad) xchg fs (bad) and roll push daa push and adc sarb cmc shl aaa mov push add adc push push xor nop jae mov xor adcl sub xchg in ret shr or add add inc call (bad) or add fdivr or jmp or pop cld cli iret cmp cltd shlb enter dec xchg sbb pop jo push cld pushf mov movsl add mov push enter test jecxz test shlb subl xor sbb adc inc repnz and add mov mov mov jo push call sub xchg push adc aaa daa add add outsl jnp xchg adc lcall push mov mov cld push push subl popa add or adc push mov xor sbb adc rorl adc mov adc ds mov and dec mov sbb push mov loope push mov faddl pop adc movsb test cltd dec nop pop notb adc mov pop roll sbb test loope sahf sti test repnz fsubrp adc divb mov lea sarb add (bad) mov mov cmp ljmp inc and add adc sub add mov push lock xchg data16 hlt fdivr dec js add or addr16 dec imul daa add sbb push add fsincos leave stos cmpb cmp fildl dec test sbb (bad) lcall fstps sbb push loopne push cmpsb ret jbe rol push xchg mov pop jns stos jge push and adc cmpsb fbld shll outsb sub mov mov add pop sub lret mov cmp mov andb xor xor sbb inc (bad) mov or mov stos inc sub sub test sbb adc data16 xor xor shlb add mov xchg or add adc lahf inc fwait adc daa push iret sbb xlat adc mov jl or jmp mov outsb mov xchg push xor rorb and jb cwtl (bad) notb ss (bad) js int3 test xchg test adc mov and jb bound mov popf cmp (bad) lea jp out pop sbb push jl sbb addr16 inc ret and xor mov inc cs xchg ret add and movsl dec xorb (bad) sar sbb jecxz and (bad) jo inc (bad) js xchg inc (bad) jp jnp (bad) xchg and jae (bad) loopne lock repnz adc and pusha lds fsts shlb (bad) adc and jbe jge and add adc shrb enter or in jg dec loope nop mov jb (bad) jl mov je inc add dec dec lea jbe or add (bad) adc ljmp gs pop sbb pop xchg push cli xchg sbb mov adc jge stos push add (bad) mov mov add inc cmp stos fidivl jge sub push loopne scas imul insb shll (bad) add fcompl mov add stos lods jle test or lret ljmp rolb mov push cld sub add mov cmpsb in ds pop or push push loope dec jge push nop sbb dec dec (bad) push test adc enter movsb mov mov in pushf pop sbb adc and xor cmpsl inc mov add or (bad) mov movaps and pop out jecxz dec cld cltd ret sbb (bad) mov mov loope arpl mov mov push lods inc add jecxz or clc push dec adc pop add inc jns jle or popa add inc mov adc cmp xor mov loopne jg push sbb xchg mov fs pusha lds inc cmpsl xchg xchg lea adc popf addb add subb pusha mulb add subb mov push js test int loop sbb fld1 (bad) jp repnz xlat fisttp add fcmovbe xlat sbb mov xchg wrmsr mov jle sbb cld jo std inc fmull and push add mov push repz popf pusha xor sub sbb clc mov sbb sarl adc mov and pop movd mov lea add and inc xor xchg (bad) adc (bad) or dec sub mov and shr push inc add test sub sub mov mov scas inc cmp pop call imulb lods fdivl or pop cld in xchg xchg cmpsl in cld icebp push scas pop cld sub add addl je adcl jg sub test and adc enter cld int3 and and pop add jb cmp clc xor mov xchg push sbb mov dec push inc enter inc leave test add lahf clc sub movsl inc xchg push inc sbb in and push inc mov js inc clc dec or icebp cld or dec jl rorb adc add stos add mov push clc xacquire arpl cld imul mov push mov add loopne jmp es pop or (bad) movzwl push adc movsl or add or add dec sbb xor (bad) mov or jmp pop adc cmpsl inc push mov (bad) jg fs stc add mov xchg cmp push mov add pop mov loope popf and daa push js mov pop xchg push rolb stos pop imul out jo xor add mov add xor test out ds lock into xchg cltd ret loop and out dec (bad) push sub dec clc dec add aaa mov adc xor add sub xchg andl enter cmpl rol mov lea inc xchg mov xor loop dec js icebp sar (bad) fidiv call xchg (bad) inc mov and or or add iret adcb add or stos push aas je js sbb in shr and pop or (bad) xor mov push sub aam jo pop ret in fisttpll dec pop out pop sbb sub cmp or mov adc pushf cs mov fnop inc (bad) or fdivl pusha addr16 shr or push les js jle and sbb pop rcrb hlt fisub mov xlat jl add popf adc push sbb ret nop or cmp adc xchg add jge cmp dec adc lcall pop cs add inc movl nop jo add pop ret dec cld and jnp or and std cmpsb ds add dec sub jne jno mov out ds inc mov or loopne lahf xchg or dec mov repz ds insb movntq and and push shrb adc sub push xor inc and mov pop pop jmp sbb pusha fistl movb lea adc sub sbb pop or mov add sbb jne sub xor test or or cltd nop sub aas imul or and push fidivl add cmpsb gs rcll repz or sbb pusha push push repz mov arpl push xchg xlat jne pop in adc lods dec lods xor fcomps adc pop push add das movsb repnz jne adc dec mov lcall mov adc or cld scas sub xor add jne pop ljmp inc dec cltd xor sbb clc sbb outsl lret pop sbb cli pop jno (bad) je (bad) cmp rclb mov and enter inc or or xchg add int inc mov les (bad) cmp jb pop enter mov push ds and sub jb ljmp inc js in (bad) jg or add push sbb adc pop (bad) cs xchg dec push inc ljmp sahf or or adc or adc sbb vpsubusb mov and fiaddl xchg repz (bad) mov js or call xchg jns fist stc add jecxz pop push (bad) ret shll sbb shrl mov pop jmp fmull push pusha das inc xor repnz mov jb or gs sbb shrl sbb xchg rolb int3 les mov daa or pop mov xor add fwait jmp lahf mov and push or loop movsb xchg leave jmp lods subb pop daa sbb stos and ds dec sub sbb inc inc or adc pop add sbb pop xor jb mov push mov or (bad) jb adc je dec dec jbe mov adc inc lea loopne push mov adc popa fisub lock adc imul or dec adc stos (bad) mov inc pop sbb push sub xorb mov cmpl pop iret push outsb jbe inc inc add pop xor lcall lods dec xor fnop punpckldq push icebp xor and (bad) fnstcw popl mov int3 fcoml ret push sbb js cwtl push inc mov xor ja push adc leave and out and sbb pop mov mov rcll dec or or outsb cmp jmp std mov cmp mov lea mov iret push icebp adc out fiaddl arpl test fsub sarl stos cmp mov popf popf (bad) mov (bad) lock and adcl lret push jle lret dec push xchg jns inc pop pop sbb (bad) push fcompl add mov cltd and pop lahf mov mov or in jecxz jnp out add mov push inc loopne lahf pop push (bad) xor shll xchg lret dec mov in jae add popf clc ret add pop dec dec lahf call pop loopne jle mov push push mov shlb mov add sbb adc repnz lret cmp adcl out push dec jo popf push lock mov cld adc enter adc mov or fisttpll cwtl inc cmp in mov stc inc inc jl pop fldz mov (bad) clc push cmp std fsubl push pop cwtl and adcl pop xor bound mov inc clc sub ficomp push call cld cmp add xor xor test cwtl push xor xlat cmp inc lret sbb adc xchg dec std fmull or mov sub es jge roll cs enter (bad) aaa sarl jecxz cmp loop lea fsts std pushf inc aad icebp (bad) add pop push inc rol xchg call xchg imul add or sahf out enter out dec cmp xchg add subb mov inc lahf in adc idiv outsl lea inc popa imul (bad) mov jg dec pop movsl cmpsl jne clc fwait add dec xchg push xchg lock xor repnz sbb add in dec das push faddl push jne fsubl pop mov (bad) sub or jne mov or push dec popa rorl jl push mov insb add rol and xor test mov jbe sbb js stc add pop push addr16 popa mov inc mov cli mov push push mov repnz lods outsl insb jb repnz push and int3 ja and in jp jge popa add jle cmp sub cmp mov inc sahf dec add pop in int3 fcomps sahf pop orl inc add push inc leave mov test xchg dec es mov rcll add mov push mov add int3 pop int3 fbld or cltd lahf or push dec jbe (bad) sub mov fist sbb and inc outsb (bad) clc add dec mov sub leave imul test adc subb aaa add sar add sbb jo add shlb bound mov (bad) xchg movsl push sbb sub push jl push call or xor mov dec (bad) outsb int pop mov jnp mov rcl mov push xchg les inc sbb dec mov enter sbb cmp lock (bad) push jl pop jp sbb js lea pushf roll (bad) pop add rolb add add cld addb or mov sub jo and dec rclb stos add (bad) push test inc sbb jne jg sub nop mov mov pop cmc ss sbb jecxz sbb pop cmp fnsave mov push pop insl ljmp mov xchg xchg push iret lcall and (bad) ss inc repnz or adc (bad) jns jo or pop adc adc js mov adc pop roll je mov lods (bad) push pop je pop sbb jge ret mov push mov add add or loopne push in adc notl es jl inc movsb xor inc call into inc lea cmp dec aam outsb jl dec adc mov adc mov xchg push push push inc push ss inc jo push add sbb fimul lret unpcklps jl (bad) jne inc push adc (bad) lea test jge (bad) adc lahf mov mov dec icebp add or add insb and adcl imul and lcall pop mov adc sub mov rclb dec jg insb add add scas pusha adc sbb adc push mov outsb adc call and add test std adc mov xor add flds mov lock pushf out jo loopne push shll fcmovu les or inc inc rolb push jne mov enter inc dec jo pop in and add aaa and or test insb add adc push jnp or data16 sbb shrl enter or inc or rolb pop xor pop mov (bad) xchg dec dec clc mov js mov pop mov das pop and adc lahf sahf sub jge sbb sub jl pop pop fadd pop push inc adc es mull xor mov (bad) cmp or push add pop xor mov sbb fistpll inc mov outsl and (bad) or inc rolb add call mov push rol rol int3 (bad) adc inc adc xchg (bad) push loopne ror or add repnz pop dec pusha xchg bound pop cwtl data16 sub ficompl sarb test div and and les mov adc push mov inc hlt push loopne ret cwtl push or mov or xor pop mov ss loopne gs scas inc loopne inc dec dec lret out and push dec adc clc ret jbe xor mov or and cmp and add ret sbb sbb dec inc push lea and loopne sub repz dec jae shl loopne jae pop pop push or cmp sbb enter or subb shll (bad) lods call mov mov push cmp mov mov arpl dec mov in xor adc or push fs sub sar mov movl or movsb cmovno test mov xor in pop fsubrs add or (bad) or es xchg add lods mov xor and jbe jbe sbb fcoms sub add loopne subl sbb hlt push clc das adc mov mov push and clc movb lret inc shlb adc xor jge adc cmp mov push aad clc cmc fisubrl aaa aad ss sub (bad) add xchg (bad) dec xchg rcrl pop test cwtl dec sahf cmp push scas cmp add data16 mov inc mov loop rcrb xchg cmp mov push test sarl xchg cmp lock call inc mov or dec add (bad) (bad) xor lock pop or push mov inc inc jl jbe xchg cmp push dec sub les xor mov repnz loop or push (bad) add ss mov xor lret dec adc lret mov test mov std call or cmp or dec loopne outsb mov mov sbb push fdivrs inc jecxz inc xor mov or cmp xor adc ficomp hlt pop adc xor mov mov mov je addr16 sti dec out hlt repnz sub lahf and mov and push pop jns adc arpl jmp nop push rol dec push fucomip jmp dec icebp jne mov loopne cli ljmp out sahf add or sbb mov ficoml in or ret mov add and adc cmpsl mov nop cltd or rdmsr sarb push loopne or add mov adc xor js fs pop xor shll jo sbb adc jp in test or call in sbb (bad) adc add ljmp xchg or loopne add adc xchg nop scas or cli and int3 int3 push add add js stos adc or imul push or add mov dec cmp inc xor push andl insl or pop cs adc adc mov test popf loop shrl mov lahf adc int xchg jbe in pushf lahf mov dec mov (bad) stc dec adc mov in sahf jne or inc push fs adc sub pop or int3 addb shrl dec movsb push inc sbb xchg clc push xchg stos rep jo cli or or mov jecxz test hlt mov add in and pop rcll je inc jmp lock add lahf adc inc or sahf rolb imul call xor pop loopne or sbb stc xor repz cld div repnz aam out (bad) js insb jmp stc sti dec pop enter and add add jnp or cwtl in out push mov pop (bad) je call imul mov outsl test orb subb push push clc out (bad) push daa cmp add jnp popa imul fisub (bad) loope in sbb mov fsubrp lods ljmp pop cmp mov iret adc shl ffree idivl add mov faddp call sub sub or jo and cmc pushf mov jge push out jne inc sub and loopne inc je lock test push push pusha into jl fdiv xchg out add and sarl adc sub pop es dec cmp outsb add inc xor pop adc and dec rcr call jl mov imul sub enter rorb add inc xor add dec jne xor inc aas in out mov test jnp orl cmp (bad) jp,pt fist or bound int3 adc push (bad) mov or adc mov loopne add mov aad inc pop sub lcall dec dec xlat mov push mov mov ror test data16 test (bad) pop int xlat sahf push or int cmpsb or pushf call jl adc movsb xor push mov imul iret or mov nop xchg leave xor adc sub subl jle cli dec insb pop movsb movhps add pop incl in xor lock test mov mov add jmp icebp movsb lock cs (bad) adc jmp in jb loop adc or mov les nop sub sbb lret mulb inc fisubr jl mov sti shrb aaa js dec pop scas and xchg movsl and mov jg or test (bad) xchg pop daa xchg cmpsb mov inc cwtl jae pop or jge clc popf or xchg adc sahf scas jmp xchg jle xor jp,pt arpl xor jns adc sub lock (bad) pop (bad) or imul jb adc or or sbb (bad) aad sarl sbb sbb shrl (bad) sub adc xchg pop or sbb sti add push call pop and pop cld ljmp movnti jo sbb push mov mov mov sub add lods cmpsl cli sbb mov insb add add dec jne lret sahf test add enter lods add movsl jo xor mov xor xor sbb in jmp push adc jmp or pusha mov (bad) adc jae push pushf je imul xlat test xchg ss call inc clc bound daa pop (bad) adc adc push cs pop or adc mov cmp and mov xchg sbb sbb mov add bound or cmp jnp push sbb out shlb xor xchg les add mov in or sbb mov lret jns sbb test xchg add cltd sub cmp rorb imul int3 rclb aam jmp sar lea mov push mov mov and push pop inc lea mov or and mov push pop stos enter repz add add insl jae int cmp adc cmp (bad) pusha test push movsl sbb mov xlat pop push add cmp push push fcoml shlb adc sbb push inc xlat fldenv sbb xchg addb or cltd imul add cld or dec ja int les adc adc or mov rorb and inc adc test sub jo loopne inc mov mov js xor stos and mov orb daa inc (bad) test xor jmp sti cld or add mov cld rclb mov jmp pop sub test sub insb lods mov sub ret imul popa lret ds add loop xchg test loope (bad) stc aad mov (bad) cld cmpsl mov adc (bad) add je xchg adc stc sbb mov das shl inc mull mov pop sub (bad) mov fs inc rcrl sub sub cld jnp dec xchg add or jb mov xchg stc push inc or fld incl sti lret add (bad) cmovo aas test (bad) dec mov cltd add add pop mov adc push mov inc jo pop arpl lea inc aas test push add or push loop repnz mov call test ret fs icebp push ds and sbb add add pop inc aam imul add and fldl fwait cmpsl in cmp pusha lahf cld testl (bad) iret add lret leave shll mov mov sub mov in mov dec insl add add cmp pop in fsub xchg mov roll adc notl xor sub (bad) rorb negb ret jge insl or pushf adc pop dec test leave (bad) in fldcw or mov dec add or sbb repnz inc cmp xchg loope dec stos dec scas sahf (bad) pop ret mov cld mov lds inc jae inc inc sub cmp jl push std or sbb (bad) cmp sbb mov adc lret add and in movsl lock cmp add int lds jno push aas movsb clc and orl push pop sub lret sbb ret mov adcl (bad) aad (bad) and int3 mov pop fldt popa aad inc mov mov in push loopne stos stc addl ljmp push test cli xor cmp mov cwtl std and fwait xchg jle push jno fmuls stos jo pushf push jmp enter jo or xchg add sbb ret mov out (bad) (bad) sti push (bad) jmp xchg imul imul enter fsubl add add sbb jle lea dec rorb add adc test nop mov pop jle mov adcb nop repz push cmpsb (bad) cmc shrb jmp iret jae dec inc sbb repz mov divl int3 jge xchg outsl or push cmp cmp mov pop fldenv pop (bad) adc push aad cmpsb hlt pop loop and jae nop nop inc sbb xchg xabort sbb outsl add popf mov sbb cltd xor inc lcall es adc dec pusha or add pop cmp mov lret xchg cmc jl icebp sub mov mov inc fadd pop cwtl or mov in mov mov xor xor mov mov ret es lret jecxz lock or inc dec inc adc push lods sub add (bad) stc inc and enter cmp and inc jbe jl jo inc push mov lods or sub stc mov jge mov xor (bad) out (bad) sub jmp shl das mov xlat loopne sub aad adc js mov adc jae ret cmp mov les mov insb or jecxz jne mov sub mov inc sbb mov mov lods (bad) mov scas mov repz push add pop ret es push add cmpxchg pop psubb push pop pop pop add jge test or xor xchg inc or cmpsl cmp jmp adc and addl or mov mov pop and std lret add xor xor out or push cs and inc or cmc mov stos loopne push pop mov cmc push ret or cmp adc sarb pusha insb or in popa xor adc push push xchg ret adc icebp ret inc cmp pop push adc call xchg test sub xor cmp push mov clc (bad) mov cmp psraw popa movsl or popa loopne gs cmp lret adcl ds subl nop inc inc add test mov inc hlt xchg and add xchg add popf cld cs mov dec loope bound lret cmp mov and in in jne idivl push push sbb neg (bad) lret jl or mov pop rcll fstps pop data16 pop mov jnp cmpsl cmp xor inc fisubr jge arpl aas fwait push pop inc ret rorb sarl xor cmpsb adc lock enter push roll les mov adc movsb fildll xchg jo pop ret hlt test push and rcr stos add and pop andl (bad) aam add mov dec test stos (bad) dec cmp cmp fldl or mov fs test mov xchg rolb call dec inc xlat js daa pop xor push jecxz add or test shrb jecxz add and push scas sub adc repnz jne jecxz sub and jb push sub jae dec ja or xor and xchg scas push xchg loope orb lods dec mov and in xlat lock add mov fstl clc or jne std push call mov jmp icebp add es cmpsb jno leave mov pop imul fdivr xchg ja loopne mov in lahf dec shrb call and pushf mov dec jnp pop pop fidivr mov repnz or xchg lahf fbld mov push clc les mov fidiv or cmp add inc (bad) add rorl jns stos or jne fistp adc jecxz,pt rorb ds jg adc fisttpll adc jns movsb push sub or pop jbe dec add ds pop xchg mov popf dec lret push loop mov fucom (bad) shll jno xchg int scas mov jne lds mov push les mov cmp dec movsl mov sbb popa jecxz jmp mov loop pop rcr adc iret adc popa aas iret push mov mov test ficoml hlt or jg clc lods (bad) dec ffree call in popa je sub lds addr16 push or pop jmp (bad) jo rcll or fcom inc mov add repnz test aaa xor ss mov jne push cmp daa sbb lods push sti iret jnp adcb pushf cli fsubl push neg add and daa mov adc pop add andl daa shlb test (bad) jmp push xor push cmp repnz lahf xor cmp test test cmp adc enter lock xor dec es popf add mov nop mov mov or mov cmp cmp dec add bound sarl and lret js test dec mov xchg cmp and pushf xor cmp push lret cmp push (bad) cmpsl cmp xor (bad) push adc or (bad) mov sub bound mov or nop mov xor or adc dec jle mov test ljmp leave repnz xor enter push cmp aam (bad) aas push mov pop adc cli aas enter sub movsb adc pop test addr16 mov aas testl and cmp sti es ss add (bad) mov pop sub sbb pop int mov shrb xchg leave mov lea inc in out fdivl in inc or pop lds or pop (bad) fistpll rcrb fbld js das push push adc or (bad) pop fisttpll pusha lea or add sbb repnz idivb or push or jmp sub aaa mov sub js or repz push lcall movsl out sti push js imul push repnz nop in push push add dec inc push mov (bad) adc or mov mov mov mov cmp xchg scas pop or popf push inc xchg lcall jne add loop mov call mov loope add mov test std sub inc enter xorl cmpsb add sbb fdivrl inc lock pop and lahf sbb leave mov or fwait cmp jno adc xchg int sub (bad) sbb mov mov aas cmp xchg fs adc mov push push push movsb lods or mov mov mov push sub mov and dec mov push adc cmp mov lahf sub ror sub add (bad) xchg fsub mov jmp test push (bad) out add inc mov mov mov fstpl loope lock cmpsl popf mov dec sub or mov mov sti xchg loope imul iret (bad) je push sub xchg xchg hlt push or pop xchg dec push pop (bad) sub int3 aam mov negb pop pop cltd jmp pop mov adc jmp movsb xor bound mov add add mov je cmp sbb mov iret cmc inc mov cmpsl pushl cmp mov or out push xchg mov cwtl or push insb jns inc mov mov pop loop mov xchg jecxz jo (bad) inc mov loopne or or or nop xchg rolb mov rcrb pop push jecxz fadd fistpl lahf fimull sbb add jns nopl test add or fbld pop mov mov cmp hlt xor int or jmp ja aas fisub cmp mov ror mov sbb cmp jb push adc push push adc shrl xchg and imul test mov add push mov mov clc inc xor cwtl cwtl cld sub rcrl jne inc js imul ljmp (bad) lock pop int3 push mov xor cmpsl pop sbb jge,pt inc movsl mov popf sbb je xchg push fstl insl xchg and rcrb test ret push aam clc cmp xor pushf xchg lods andl xor mov push sbb movsb xchg iret idivb (bad) mov adc loop fisubrl adc mov cmp mov test out loopne add xchg mov mov or and jo outsl jno mov into add ljmp (bad) (bad) push and xlat mov (bad) sub mov stos mov (bad) scas push out mov or lock mov mov fdivs mov xor cwtl push cld add xchg je mov loopew,pn add lret lods or jl adc aas data16 inc or xor adc inc add mov add dec push sub or pop inc mov add sub aad or fnstcw add in inc das (bad) sub push sub xchg add adc cmp add lock sub out jl sbb sbb outsl fld outsl popa push test test inc and xor mov fild add xchg shr in je dec fadd xor add (bad) inc or btc jno add add add jne inc push xchg jmp mov js push sub add or loop adcl inc stc add jecxz test push inc jb idiv test cwtl push nop lds xchg add cmpb push cmp lea lods dec in pusha lods movsb faddl pop cmp iret jecxz pop sub mov cli lds inc cmp pop clc sbb mov add pop movsl push mov jo,pt popf pusha enter das pushf cwtl pop or insb lea stc xchg movsl and sbb (bad) test lods divl xor mov or test add js xor xchg pushf jo mov mov insb popf les les lcall mov or leave inc inc mov gs in es mov add enter fcomi les jbe dec and daa ret mov mov inc mov addl fstl and jg imul jg jl mov loope stc add or bound popf je sbb adc stos pop mov and add mov dec mov insl enter sbbb pushf fcoms xchg cmp je and jecxz xor mov enter aaa jne sbb xor xchg dec mov pop dec sahf jbe adc xor (bad) int pusha inc mov imul loopne mov add pop clc add mov sub sbb adc pushf int or fldenv add and les ja jg push inc dec (bad) jg sub mov push cs (bad) cmpl dec or dec and add push rcll or add cld push cmpl jg or cmpl pusha jg push jg test sub adc rcll add roll add xor test xor jg sbb adc mov cs inc pop add cld jg xor outsl push (bad) jg push ret (bad) jg rcll cmp jg shll sbb xchg cmp sbbl inc test or rclb (bad) adc lock cmp push mov stos mov jno les nop cmp sbb cmpsb push shrb inc push mov or adc ret lret pop sub mov and or and jge lea push mov add mov loop adc pop movl push mov cmp jo mov incl mov outsl sbb subb out bound jno loope pop pop add mov jecxz mov fistp cwtl add sbb nop xlat sarl cs inc mov push inc cmpsb xchg mov mov add movsb dec in cltd fisubl push mov xlat adc dec push loop sub imul mul stos add or dec mov lcall fs cmpl imul mov sbb or add push sub xchg xchg (bad) mov adc jg pop push stos mov cltd sahf and xchg xchg mov cmp nop sets mov mov mov xor dec and loope mov lahf adc aad ror gs lock push imul lahf inc movsb sub add lahf cwtl jb lods mov add lahf mov xchg xor pop mov jb movsb adc test or lock mov repnz jg js mov jg les clc add xorps adc out mov adc cmpsb and xchg jg sbb orps or inc mov pop adc or jg jns and aam or mov mov subl cmpl dec adc add data16 bound sub jb (bad) dec mov stos aad push or mov inc jp les in mov out jg lret fsubrs sub cmp push sbb and lds pop mov shlb cmp call sub mov mov lods dec das mov mov popa sbb fisttpl pop dec data16 and cwtl xor neg add aad and and xchg arpl frstor dec mov push lcall leave push lret nop xchg pusha and add outsb (bad) repnz push ret cmp je lea fstl or loope popf les outsb (bad) aaa xor sbb nop fs or pop les sbb add stos mov icebp or (bad) and pop mov leave int int3 pop je out jb out leave cwtl out push stos and ja jb xor cmp mov jb jo out cmp repz test nop stos arpl loop pop or mov stos out movsl xor xor je imul or shrb das movsb out out push cmp mov mov fistp xchg and int fildl test inc les push mov aam adc sbb inc pop iret lods and inc pop lret mov pop xor pop and pop rcrl mov lret and outsb sbb push cs xchg and mov (bad) roll popa out insb add icebp push adc ret pop sbb dec push push pop adc xchg int3 pop sub imul inc dec pop pop test and pop or add pop mov inc inc add cmp pop pushf movsl and xor sbb std pop dec push sbb iret push adc mov push add mov mov lret fwait inc out enter inc pop imull lods inc popa adc jne test pop pushl push add lods fwait pushf dec imul push inc sbb (bad) dec adc in jne arpl push jmp js jno je xor mov mov inc jne xor lock xor mov jne xlat adc insl jg movsb pop inc les lret les in test xchg mov dec xor or jno fxch int3 int3 inc inc sub push adc and scas mov mov in mov add cmp sbb mov mov nop mov inc push mov xchg mov nop mov push add pop or mov mov es and add and push sbb lahf arpl sbb inc movsb xor xchg mov lahf or xchg sub xchg mov in mov and mov mov and mov mov sbb cmpl mov in and adc lahf mov and lahf lahf mov mov mov inc lock xchg and mov xchg jb inc add mov (bad) in xchg lahf mov add inc mov lret lahf mov push lods cmpl mov add inc lahf mov pop sbb jb mov fstpl inc mov pop adc lahf pop pop fnsave loopne push cmp cmp lahf out xchg dec adc mov aaa xchg stos mov push cmp in mov xchg fs cltd inc mov mov or mov mov and and or aas adc dec popf lret add mov call or push mov jp dec pop inc inc lahf fsubs push popf mov cltd mov shlb cmp das mov (bad) aam dec add dec push sbb pop jns mov loopne push subl xor insl movsl and push adc push imul cmp push std cmp lea cltd in in outsl rclb outsl das lods push inc int mov outsl rolb stos xchg outsl andl insl xchg lea stos pop inc popa jg les mov push pop mov mov inc mov shrl test xchg lret sbb pop xchg xor mov mov inc sub int ffreep push pushf mov add (bad) mov test das ds test jle mov mov in stos push pushf and sub in dec cmp xchg add ret daa rolb clc mov or push jp xlat xchg mov int (bad) pop test pop clc and push cs mov adc cmpsb lret lock mov aad cmp xchg dec xor jb mov (bad) cld mov jl les mov rorb movsb mov jne pop xchg nop push popa xor mov xorl pop mov pop xor rcr inc fimul int cmp outsb jmp das push jp fst pusha or push sub in sub stos movsl mov mov (bad) and sub movsl fcmovne test fimul and mov jmp lea or shrb or test mov lds lea or and cmp xlat lods dec jg mov aas nop push sbb xchg outsl scas or faddl pop pop mov xchg test mov sbb fistpl daa int3 loope pop arpl shll jbe sbb mov sbb xchg mov lods (bad) jno (bad) (bad) rcl adc aad loopne or cmp (bad) sub test in jmp sbb jmp dec add inc jl push dec pop jo pop sub fiadd or into repz or and dec add inc push bound mov jne daa sub xor xor lods adc (bad) jmp rclb movaps xlat mov sub or movsl cmp movsb dec scas sbb mov cmp (bad) jo or andl or mov and jo fwait loopne sbb pushf xchg cld movsb (bad) imul inc imul cmpsb sarl mov add sbb test cmpsb (bad) cmp pop dec cli mov and scas add (bad) jbe xchg mov pushf aas xor leave or subb pop push add js or mov mov sbb sbb cwtl mov stos mov fiadd bound mov (bad) cmp inc addl mov test pusha insl mov shll mov test xchg ja sub jmp cmpsl mov popa xchg mov (bad) xor rorb (bad) adc nop ds xchg cmp lods shrb nop pop pop mov xor test rcll in xchg dec rolb cmp jne push cmp nop jmp jl mov imul mov orb mov mov nop andl test imul inc pop jl adc xor push lea add enter rolb enter and bound pop sub movsb inc shlb or xchg test xor and arpl pop enter dec inc ffreep sbb sbb dec ror xchg aam fadds add loopne add sti (bad) pop xor movsb push and adc xor sbb mov pop cmp xor xor sub or sar dec jo and mov pop mov int or (bad) fcomps xchg in sbb dec stos jno and jnp roll lds out bound mov push or add sbb sbb pop mov ss mov mov cmpsl orl inc sbb iret jbe inc (bad) dec movsl ja test or lods dec clc jge jns sbb pop leave mov sbb lea pop stc fstps mov add pop pushf push aaa jl adc adc cwtl jmp loopne inc add aam (bad) hlt popf enter adc movsb and and sub mov fildll mov enter cmp mov dec fwait enter inc mov sbb dec in cmpsl inc xor out add add xor pop pushf push cmpsb insl or dec fmuls idivl (bad) out rcr add push dec sbb sti jl or lea jge cmpl imul inc or (bad) jmp xchg pusha lods outsl and cltd stos aas enter mov lods push stos mov add adc and sub in mov dec push add in je lea pop inc pusha inc les and mov les dec push mov pop addb lea inc push cmpb pusha dec xor mov pushf push das add sbb add mov push cli push or jmp pop fsubs (bad) insl sbb ja pop adc adc push outsb jl jecxz xchg lods les push cltd negb inc lock xchg das clc int jb mov rcr ret fwait sub js xlat and inc popf dec incb and mov (bad) cmc insb pusha jg mov inc imul jmp ret nop icebp mov add sub mov adc shrb imul (bad) les mov cmp jne movsb adc push or leave jns lods pop pop dec pop in jae lods test aad (bad) dec outsl repz arpl and in cmpsb xchg xchg ficoml das and push inc mull sub dec push movsl out arpl cmpsb stc pop scas and sahf addr16 ja bound js and stc div jns nop imul nop mov outsl jns push mov mov or cmc addb test dec loop and dec insl mov sub mov jbe in push push sbbl cmp push and or mov sti sub mov inc pushf imull cmpsb pop movb cmp pop lahf cli xor fisttpl cmp sbb icebp cmpsb push imul pop jb push sbb aaa push mov lock cmpsl pop xchg rorb jmp pusha sbb movsl push pusha sbb adc vmread mull test in adc aad and sub or jo scas add mov mov pcmpgtw lods test dec aaa dec pop mov insl pop mov inc test lods and mov add xchg push adc pop push lods sub jo js and popf adc pop pop nop jno and mov mov mov inc mov push sbb pop push dec xor icebp jecxz int cmp sbb push push cmp jae mov mov daa inc lods fstpl sbb pop jo sbb loope test in test mov adc ror cltd cmp pop dec jnp les inc gs (bad) sbb je imul inc inc shlb add or and or add inc and inc add cmp mov or test pop and xchg or and cmpsl xor aaa or add loope fistpl or mov mov aad pop mov push decl aas addr16 cli subl add cmp fstps flds add imull xor test add bound xchg xor adc jne mov icebp or sub sbb iret sbb xchg mov ljmp sbb in or out adc inc pop (bad) scas jge sbb mov fcoml lret into jp ret or dec push sbb fnstenv lock add (bad) int3 clc adc cli out add xor nop (bad) out clc outsb and adc imul cld clc and das or aas jecxz jecxz es cwtl (bad) dec xor enter rol aas xor mov add iret enter jns cmpsb dec add inc or adcl test loopne cltd add mov and aas aas popl imul mov movsl jge push and insb rorb (bad) dec aas nop out loop sub aas in rol xor sbb push dec dec jno aas pop dec add (bad) lods int3 and repz xchg out in xchg bound pop test sub test pop mov nop int3 int3 jmp dec aam (bad) cwtl imul inc and inc add dec sbb incl dec add lcall mov lods and and adc movsb add xorb sub iret mov stos lea (bad) cltd mov lret lods jo sbb lea sub or add lahf and or (bad) mov nop add push scas mov stos mov pop les add or addl push inc pop cmp rol inc xor mov cltd orl cmp lock cmc and xchg and imul cmp pop call adc movsl push jmp fisttp mov movsl fnstsw test pop push mov mov or sbb (bad) xor push loop mov push mov or and mov sbb adc loop xchg xchg xchg pushl xchg lods lods arpl rclb mov mov xor push les jne adc bound sbb cmpsl xchg add out iret or dec jge xchg jl fnsave and adc js xchg xchg pop push and mov push and add dec pop loop xchg mov adc add test and arpl jmp jmp push adc fmull ja sbb dec lock in xchg adcb mov in movsl and jb incb sbb adc push xchg addr16 adc adc ret lds sub jg adc (bad) add xchg in fadds jno lret cmp or mov cmp xchg mov mov mov ret and ds pop dec ret adc lret or sub mov and xchg mov inc add add inc ret mov adc add push lret lods mov mov pusha push mov cmpsl push and lahf je leave cmpsl sahf shrb movsb dec mov mov or jb adc (bad) and (bad) pusha jno cmp pushf scas adc cmp mov outsb mov adc pusha pop jae and add mov enter inc inc movsb add mov cmp xor int3 or nop and test add mov jg loop dec push mov lods dec add bound sbb push jb mov cmpsl jb mov pop les dec sbb mov cs test adcb pop (bad) and (bad) sub mov lds leave sbb sbb daa pushf and (bad) sub mov jnp enter arpl mov lds js (bad) xor fistpll test cmpsl inc jb jge popa sbb add sub nop sbb test add test (bad) lea pop enter dec jno enter ret roll or int3 lret add lds test lds lret mov mov jge leave shrl sub pop cmpsl jbe sub pop sbb das test sbb insb sbb addr16 cmp aam push inc cmp and sub popf hlt cmpsl mov (bad) adc push lahf ljmp in xchg inc xor pop clc adc lret sbb mov dec das je jl frstor jmp xorl adc ret add dec jle adc aam inc mov call xor and fnsave sub imul pop mov xchg fldenv movsb lret cld ds mov pushf mov aam loopne cmp rcrb xor shrl cmp push pop ljmp and loopne cmp adc punpckhwd test pop clc or push ljmp mov push movsl mov push sub mov dec lds pop cmpsl scas loopne adc je jns nop fbld fidivrl xor lods jge sub inc rolb test ja xchg shld movsl or scas test je cmpsb movsl push inc inc loope xchg push cmpsb cwtl or aas add add sub mov lcall call out mov pop ret int3 cwtl push or mov fs test sahf jno xor and push sti jecxz jb fbstp cld fs mov push push popa je paddq sbb (bad) or (bad) mov mov mov pop push or loope and es jl loope mov xor sub jle jl and mov jp cmp jbe (bad) jo sub adc das rclb mov dec pusha jns imul cmp add loop adc inc jecxz push and pop xor push mov nop test outsl cmp pop push jmp push adc pop and xchg jae fs mov inc xchg sahf mov mov xor fcomps or les ret pop jb out add push and test fstps push test je lock sub rdtsc mov sub jecxz aam inc xchg mov test and test cmp (bad) mov sbb mov jge xchg jne pop sub aaa sub mov inc adc xor xor incb fimul xor sarb mov or add and inc inc mov (bad) icebp pop fcoms out lock cmp mov push jb fxch dec pop cmp fmul (bad) lahf adc ljmp je or mov sub in push rcll out or enter pushf imul and (bad) in jge inc mov add jne dec sub (bad) push sub dec add cmp add daa or flds add lea adc leave add test mov xor clc mov int mov nop pop and std inc sub insl (bad) pop rol stc add hlt xor inc shrb lods jmp les test decl fwait mov fistp sub mov lcall arpl adc insl pop mov and adc pop mov test into adc je add cmp and out pop jg jno jmp sub push out out ljmp push cmpb inc dec in int pop movsb inc cs test push iret inc lahf pushf dec lds pop add sbb push leave and rclb rol xchg pop inc dec lea insb imul push stos pop xor or mov add cld sarb jmp xor pusha sub (bad) dec sbb and mov push sarl mov add add mov adc repnz xchg jl popl mov dec adc adc cmp dec and jo mov jns fsubrs pop adcl xchg mov add pop xchg pop int3 pop add rcll cld and adc movsl xchg lea pop jp int fistl mov ffree test pop push cmp add (bad) fistp or jl jns mov fbld cwtl out ficomp add jo cmp mov mov ficomp mov mov sub nop xchg mov pushf jo or leave dec lods pop std pusha pop and pusha inc fbstp aam inc or adc inc imul into rcll sub adc add xor in pusha add inc fistpll xlat into ret xlat dec inc mov lahf jns add fisub fldl adc xchg sbb cmpl fcompl movsb in sbb sarb mov call or push imul mov push popf adc sbb clc mov xchg inc push lret ret pop les jb mov mov mov js loopne mov mov sub and fistl pop rcrl dec ret adc xchg sti push pop mov mov inc clc sbb inc or push icebp pusha xor dec add mov add nop and push mov inc add or add in xchg (bad) loope mov dec pop dec push loope je mov dec icebp mov add neg jp pop dec mov pop sub divl lea push or je shrb mov push leave xchg dec lahf mov dec inc xor adc mov and jg pop test dec jg xlat (bad) adc dec xchg inc fs jg xchg jle popf cmp mov jns psllw push in hlt imul adc rcr fs fwait pop repnz add adc (bad) pusha lods adc jp add fldcw jne mov mov adcl xchg xchg and lahf xor fwait mov and jae lcall fbstp scas aam int3 mov aaa hlt jo es or and inc dec pop and jp das sub pop sti xor mov sub and dec pop sbb popa and (bad) cli lahf inc dec cs add jecxz mov dec shll push xchg fsub jo mov push (bad) cmc and lea adc (bad) call lret (bad) jne push cld dec add pop rcrl lea loopne xor push sbb insl add incl xor push mov bound and or sbb repnz mov pop (bad) adc mov add pop mov xchg loopne pop pop dec daa dec mov push gs rorb test adcb in je ftst in xor jnp xor ja sbb lods and cmp aad adc mov mov add cltd add cmc adc sub lods pop mov loopne js pop cmp out add popf push xchg cmp sub fldcw sbb outsb sbb add inc cmp lock adc mov lea gs sub mov inc jnp xor leave inc adc pop xor add data16 adc shl pop jne les xor or mov mov xchg in iret push lahf sbb add fs push cmpsb rcrb jl rcll or xlat test jge (bad) shlb sub jmp sub push xor lds or lods jnp pusha dec fild sbbl dec lret mov jae outsl and adc lea push push and ss inc mov and ror adc test lea and (bad) dec fstpt sti mov pop aad add push fiadd cld cmp mov push mov pop movups adc in subl push cmp mov cli rcrb gs mov sub imul mov rorl mov jo jo in call mov fnop lock (bad) or outsb push orl fisubrl ljmp scas mov aas (bad) adc adc cmp adc inc hlt das push and jo pop sub or sbb pop or pop jmp adc std adc and icebp and mov shrl push test xor push pop xchg jmp enter push or sbb gs mov push arpl mov adc add stc jecxz fadd push fildl (bad) popf (bad) mov stos iret pop int3 mov inc shld xor or into xchg pop dec pop ret lret dec cmpsl adc and add cmc lea mov imul daa cld js cmp incl sar xor test push and test pop jns das nop xor sub cmp (bad) and test scas mov jo pop das je fildll or jnp imul lock add push xor sbb push xor sbb cmp fcoml jbe mov call movntps notb cmp es inc pop add imul cld or out inc dec aaa aad adc adc test pop loop enter shll and aas xchg int3 mov add mov cmovne add popf and aaa jle in lea ljmp int call es jmp ret xchg xor push push xor xlat or inc push pop scas pop xor test fstps dec ret push jg sbb pop outsb fstp jo pop ja inc mov jmp les iret popf fcmovne test fcoml and inc ja adcl pop insl add clc aam lock aad rcrl mov jo fstl sbb pushf test or and sbb adc mov adc and shrb cmp ss (bad) loop ret pop jnp lock arpl repz xor hlt jnp xor and jbe shr and inc xchg cmp lods (bad) mov pop shll mov mov add aad xor sub bound xchg loop jno adc push mov xor mov mov push aas aaa or sahf pop test lahf mov add xchg mov lret imull sti ljmp jecxz or gs adc movsb (bad) das or and daa ror sbb repnz cmp (bad) hlt fdivrs inc inc cli xchg add mov (bad) push mov xor ljmp sbb add fildl jp test sti fmul push pushf lret dec adc lods mov inc sbb push int mov push sbb loopne add push xorl pop ffree adc in aad sbb mov or add enter ljmp lds mov and inc inc adcl xrelease inc cmc rorb xor subb xor sub into imul dec mov or sbb lock pop pop xor sbb inc sub adc clc and inc add mov pop cmp xchg inc pop lea add xchg pop pop and mov mov das movsl (bad) add xchg fidivl add iret jmp out call scas adc sbb push pop xchg push sub insb mov (bad) xor mov cld mov lea mov jg mov mov mov cmp loopne outsl (bad) test aam ficoml or icebp dec xor adc repnz loopew (bad) xchg in iret cwtl negb flds or xchg outsb sub xor add mov xchg mov mul out inc cmp movsb sub cmc pop jecxz pop pop or lret sbb ficomp lods mov sub cmpsl mov cmp pop (bad) jge push push mov in clc pusha ret cmp jmp pop mov shll movsl les daa out dec insl push (bad) aam fcmovb jl jg dec (bad) mov clts jno (bad) call adc in hlt xor lea test add pushf or or cld add push mov inc pop inc pop popf pushf pushf pop add push lock inc xor out mov jl mov mov sbb push lahf dec ds xor and clc gs mov out je mov aas mov jbe sbb imul mov pop sahf pushf cltd add push or in mov lret movntps sbb and sub inc inc insb sbb in std mov mov lahf adc add outsl aam adc mov mov xchg and call dec adc out popf inc jne das sub sbb push xchg dec sbb add dec shll ret pop or xchg xorl enter jp push jp inc icebp insl ret and ret and aas jno lods cmp jecxz movsl dec rclb notl fwait sub ss jle clc or ja sub or ja xchg pusha fisttpll push xor out push outsl and (bad) adc cmp pop dec iret xchg inc or xchg and inc adc sbb mov lods mov xor or sub push stos repz sub jle jp or and popa mov inc add lret push ror lret add inc fidiv imul jo and lds xor icebp (bad) repnz adc mov sbb ja mov popf fwait mov adc lock int push (bad) dec or clc subl or arpl inc cli xor xor insl out cmp inc push sbb notb xchg imul pushf sub sahf (bad) aas xor cmp in movsb mov push (bad) repz inc std push mov jne out rcl push out roll mov dec mov sbb dec sub cltd mov push pmaxub or xor ret xor jns jns push iret or mov sub adc cmpsl dec aad ret test popf neg fimull test push lods mov mov ljmp (bad) xchg scas xor sub xor add inc loop xlat inc (bad) mov rorl lea lea lea out add mov ds out sub sbb lea je int3 inc hlt outsl pop mov sbb call xchg and cmp xor ljmp popa sub jmp push insb loope cmp in sub popf imul jmp fisubrl push mul and cmpsb fs add add adc xor lock test js aas outsl push dec loopne adc test ss data16 aam cmp mov test sbbl xchg pop adc rorb push xchg xor mov pop fldenv adc sbb js and pop icebp fisubrl adc (bad) jmp aaa mov push or sub in push add xchg rorb aad inc add inc pop mov add rcrb ret clc xchg or fdivl sbb movsb or sbb test sbb aaa sbb mov in addr16 pop subb test adc cmp push inc out out out ljmp mov dec jle pop ss or lahf xor xor cmovnp imul push inc les sbb xor add arpl insb (bad) aaa lods pop xchg xor (bad) faddp sbb pop xor jns xchg (bad) jne cltd ret inc sahf mov inc ja test nop in pop xlat pop xlat shlb xchg out movsl jno imul mov sbb xchg imul jp adc xchg xsaves pop add xor insl and ds out aam imul xchg dec sub dec mov add arpl lods push adc adc sbb out stos adc mov add dec pop aad xchg xchg xchg imul jmp shll mov pop pop push aam repz cmp xor push (bad) rol jp and jbe mov add xor in enter and sbbb pop cmp add xor xchg aam clc cmp popa inc je dec pop in mov jg adc or pop and pop lods sub test or pop call push loope xchg cvtps2pi (bad) inc lock cltd push add adc xor adc xchg ss lahf pusha subl push mov cmp xor and test or or adc (bad) xor add dec in popf aam sbb cmp lods adc add icebp and dec jae sbb pop pop sub sbb mov jnp sbb pop inc test into mov xor clc or lea pop pop push ljmp sub aaa test test pop xor ret dec out and mov in iret xor adc (bad) sub ret int imul call inc jg sub xchg dec lcall cld fbld fs dec mov mov fidivl (bad) (bad) ds sarl pop pushf pop int in mov jns adc mov dec xor cltd test rorb mov add icebp xor loope dec mov loop je adc mov loopne xor and cmp cmp cmp ffreep xchg mov or cli clc push cmpsb jnp push pop push (bad) cltd sbb inc add jecxz pop movsl loopne gs xor xor and xchg (bad) inc push insb jg test out pop pusha pop out (bad) inc popa push test test or pop or xchg dec jg jo inc pusha xchg or js inc xor xchg mov xor xor jmp mov xor xor adc or cmp (bad) cmp je sbb dec xchg das fs fnstenv ss (bad) mov ret popf (bad) stc lea xchg mov mov adc js add je sub out movl out popf mov (bad) je ret cmp (bad) fs scas cmp adc pushf add add sub cmp pop inc data16 aam pop mov sub addr16 ret popa dec inc and add push rcrl imul fadds cmp loopne popa inc popa mov inc xor ss cmp nop pop and cmp pushf mov (bad) loopne inc push test loope fbstp pushf aam lea mov add jb xchg (bad) rorb (bad) xchg inc mov pop ljmp mov mov add jmp xchg pop xchg test test shll divl imul nop jmp orl mov insb push sbb rcrl popa and xor mov pop fist iret leave and adc push fucomi and jmp sub pop leave sub mov or popa fsubl iret mov add inc mov push cmp cs jp outsb inc sub cld add daa nop insl jno add fist enter fimull mov dec inc jmp fist out popl add in push push or pop xor cs pushf movb je faddp xchg push cltd ss and pop xlat popa cld daa sub add or dec nop pop mov (bad) jl stos arpl sarb add arpl enter ljmp adc subl jbe fiadd (bad) lea add (bad) lret imul sub sbb dec in add rorb call jae jbe aam add mov adc fadds sbb jge cmp mov push cmp int3 movsb cmp xor frstor or add and (bad) pop inc dec lods cld pop adc movsl and mov inc adc dec cltd in mov add je add xchg adc icebp shl lret or add popa and insl (bad) mov add dec ficom mov add (bad) outsb or add jmp jns mov xorl into jg mov sahf xchg std pop push add xlat daa lea ret test fadds xor mov or cmp mov decl (bad) fcomi ret lock rorl inc sub cld stc ror and fs insl lret cmp push call addb mov test dec scas nop aad test call js mov push incl or ljmp loope leave xchg int3 test mov or and sub jp sub (bad) popa and xchg mov jo dec test xchg cmp (bad) hlt rcll dec outsl mov xchg scas lock icebp push pushf repz idiv cmp mov pop pop jg and push divl inc test popa mov test imull push sub (bad) mov pop test and adc nop dec adc andb adc ret (bad) mov push pop in pop (bad) scas ljmp sub sub push dec call or xchg stos jmp movsb arpl pop add call inc dec ljmp sub aaa pop pop inc call push mov stos jo sub clc daa jmp sub push mov and or arpl or jmp or jg repnz repnz xor lret or loope adc test ret or sub xchg dec cmpsl hlt or fcoms lcall sub repnz jno orb jle popa movsl inc lock ret scas jb xor push xchg pop mov outsb add popa sbb jo add arpl add mov addr16 dec inc rcll mov ljmp les add add sub or xorl jne xor push jo test mov in push push cmp dec arpl lea outsl xchg pop popa nop (bad) inc (bad) mov daa xchg or lea jl stc or imul pop mov mov aad lcall inc mov mov sub rorl lods and mov xor sbb ror leave push fsubrs xor leave js and sbb jno pop pop lret or inc dec fdivp mov cmpsl jg add jo dec mov sahf add push sub add icebp add imul mov popa test or int lret popf mov or ret bound arpl jecxz das hlt fiaddl add add and mov flds pop mov rcrb int3 mov dec push sub mov arpl ja mov adc cli js arpl sbb mov add sub adc dec (bad) xchg dec sti cmp cmp lsl pop xor cmp aaa mov dec sbb daa loope xor lret call sub (bad) mov inc leave xor aad ja push pop inc push lods mov and mov ret cmpsl andl cmp and fistpl cmp adc xor add jne sub pop dec inc fistpl push adc rolb adc fiadd jnp movsb jne and fwait aaa and xlat lods (bad) mov sbb xchg call ficoml test fwait mov cmp jno pop or xor lahf inc arpl jp add rcl fist cltd (bad) out pushl jo (bad) (bad) outsb push xchg sahf pop mov lea lods pop mov sbb or dec shll out sub add sbb mov bound mov push jl sti out jge mov or sub dec or pop push loopne cmpsl mov jmp xor push mov sbbb xor wrmsr addb bound mov jne and xchg cmc sbb mov popa fcoms mulb xchg inc push pop lahf sahf ds sbb or add lock xchg roll inc fbstp pop jae or inc cld sub aam sbb jp pop add push inc push mov sahf popf lcall inc mov xchg pop popf and mov stos pop fmuls aas mov das daa iret (bad) dec xor mov inc push aaa pop nop xchg loopne pop xchg push ds js sbb loope mov outsb add pop jp iret adc push movb push out test and mov test push push sub adc incl cmp fldenv sub xchg movsl and fwait or fwait movsb mov sub xorl inc mov dec hlt mov inc test inc or incb inc mov or inc push orl imul fistpll je adc mov and sbb enter jl test dec mov lahf inc add mov pop xchg mov loop pop fstpl popf ret rcrl mov xchg and pop sar xor inc lcall ss aas push and mov leave pop adc jl mov and cmp ljmp add dec nop adc mov xchg jbe (bad) and mov xchg inc xchg pop rcrl push ja insb js mov pushf inc (bad) icebp vmwrite or fbld (bad) pushf scas and cltd or dec test sbb js rolb xor test test adc and and jg arpl jb test mov outsb xor lea (bad) ja jge inc cld xchg cmp cli sub ja inc mov mov stos sbb negl lds jecxz mov sbb sbb or jl andb cmp and cmp mov stos cmc mov in adc shrl or cltd fist sub inc inc dec xchg jmp test xchg mov inc movsb jb test mov (bad) cmc popf insl sbb (bad) pop xor movsb sbb bound sbb jns mov loopne in adc cmp or popa jns xor je jp sbb rclb jg mov (bad) test push add mov mov jg inc adc movsb popf adc lds (bad) bound insb sarl pop mov rcrl inc dec inc xchg mov dec je inc stos fsubs sub ret push loop pop pop dec mov mov push mov push mov mov jmp sarb int3 sub loop das mov sub icebp incl rorl or and jp mov xor adc in jne pop pop lock bnd adc das lds inc mov xchg das orl aam shll pop dec dec aam mov xchg in adc adc rcrb pop mov adc sub xlat and xchg mov xchg xor cmpsb jbe push dec shrl cmp loop mov jmp arpl adc ljmp push shrl sbb mov cmpl xchg mov lahf fistpll mov and mov fs jb and enter jns dec xchg mov cltd or xchg in mov mov cmpsb and sub scas mov jg shrb add push jg xor jg adc sbb jg stos (bad) aam mov push mov adc inc mov inc movsb jg xor mov mov mov and mov dec mov enter sub push decl mov pop jne pop adc dec popa mov inc lds xchg popa add or xchg pop lds xor test dec and and mov int sub push (bad) testl inc cwtl push mov inc add pop pop mov and mov or add dec sub inc mov enter adc sub xchg mov lds xchg adcb pop mov fisttp lahf pop and out popa cld mov jnp sbb pop fildl push ret inc xchg sbb add mov xlat adc (bad) mov (bad) mov jl add lock movsl and xchg and jo mov pop fistpl mov lds sub (bad) sub popf dec mov jb adc fcom (bad) jecxz xchg add jnp jl sbb sbb pop cmpsl nop imul int3 mov nop mov loope jecxz cmp roll test mov decb xchg rclb popa fadds mov test or and movsl jmp sti and in out nop dec mov fdivrs mov cld das add adc jne orl test rclb add mov iret lods mov jecxz dec movsl addl or aas out mov cmp mov lret inc push adc fs inc test xor lret dec jo jg xchg loopne xchg insb pop jbe jmp fldl lret sbb dec test mov jno add pop mov aad mov daa mov addl pop mov pop inc aas dec sub (bad) add dec mov ret xchg mov orl lock add jnp mov insb add mov xchg sbb mov pop push add pop sub aas fild sub daa xchg mov in lea mov jo mov and mov jmp lock xchg mov fchs out add pop cld push or hlt jae aas lahf add movl sub loope ja mov jo enter sub pop mov or pop mov mov (bad) or or bound fimul add mov aaa popa add and cltd mov sub fistl roll ret dec repnz lea loope mov icebp lods mov sub jp cmp jne mov mov fwait rclb sub push add outsl xor incl xor dec push and es or sbb sub sbb mov pop sub cmp pop pop push pop xor aas scas inc and and xor inc xchg add mov ficoml inc fcomip loop les pop cltd (bad) insl pusha add mov xorl add loopne mov push nop cmp and mov jg push inc mov jns aas inc mov adc xor inc adc loopw or in sbb cmp push popa movsb movsb out adc xor lea jg (bad) fadds mov test lea cmp sub cmp cwtl imul pop sbb (bad) jnp ljmp imull test lea call jnp jbe repz add adc add pop (bad) adc xchg add mov aas jl dec mov test lret daa testl pop inc xchg inc mov lahf xchg packssdw adc mov into lcall pop test sub mov loopne pop cmpsl nop dec das add int je dec test test lds (bad) btc jno ljmp pop rol mov or push mov cmp add adc xchg test xchg mov mov mov or sbb mov cltd data16 sub mov ficompl jl pop je std (bad) imul cli gs xorl outsb inc push pop jo mov (bad) or pop inc lret sub mov in or cld lods add push fisubl mov sahf adc dec jne or jl and add push nop aam mov pop cld lret xchg loope inc and sbb or adc mov out or stos sub xor xchg pop xchg daa adc ja (bad) pop pop jge mov mov pop ljmp incl popf sbb sahf mov sahf push sbb jns and sub scas lea nop adc jne inc jae shll fwait sub xor or cwtl xor xor jb cmp or jmp pushf ret fsts push inc addr16 fs inc mov jge push daa bound add sub inc mov adc arpl lods aas lret push jns xor enter (bad) sub repz pop sti pop pushf (bad) (bad) ss or lahf dec cli ret xchg in adc ret out dec pushf ret sub mov jmp pusha pop push fwait dec testb jge fisttp pushl mov or inc cmpsl lret push inc icebp mov lret push je inc or jecxz loop push sbb pusha sbb or sti xor rorb (bad) adc sub xor xor adc cs pop nop movsb pop xor popf xlat test test sbb push or lret xor movsb pop jge inc sbb stos adc stc test dec popf nop or push sub (bad) push xor pop ja jo add fistp dec and adc test push mov xor or xchg mov popa clc sbb and ret gs or xor jg,pt repz rclb push outsl ret or in push xlat sbb cli mov sbb dec rcl pusha pop add fwait sbb dec (bad) rorl push flds jge in rol in hlt into repnz sbb pop popa sub dec js loopne push mov mov xor movsl xchg andb cmp adc popa inc cmpsl sub mov repnz cmc push addl dec stc aas test repnz push inc scas push sub sub inc adcl sub add add jle pop imul sub sub adcl mov bound and xor rcrb lods and push test xchg or xchg (bad) es (bad) mov jbe sbb lds cltd mov movsb mov pushf mov shll lret pop shlb (bad) or adc (bad) lods pop rolb (bad) (bad) xor jnp imul sub lret push mov ret mov mov js pop xchg inc mov loopne pop cmpl sbb push mov pop mov xlat lods rcll add (bad) repnz rsqrtps mov imul ficom dec ret xchg push push aas pop jo mov and mov adc push ja add or pop dec cs movsl inc pop push mov loop and (bad) pop inc popa dec daa icebp test iret inc xchg rol in insl mov sub (bad) nop repnz adc push push repz cld xor pop cmpsb ret dec call ja test sbb and ret or and out inc inc mov das roll repz jge xchg call imul mov adc adc jne roll mov dec inc lods aad mov repz dec inc cmp push jle inc out int jmp js and (bad) je push sbb pop jecxz jno adc faddl jne mov inc pusha dec lahf js mov mov and or (bad) mov mov pop les and sub gs (bad) std add xor push or jns fist loopne (bad) fcmovb add sbb shlb pushf sbb fildll clc cmpsb sbb movsb lahf out jbe pop adc dec sub lea push test and push jecxz popa imul shll test pop add add or xchg sub inc pushf test mov mov jnp dec sub adc inc ss or push inc and daa mov popa sbb outsl lret aam roll and add mov (bad) repz jno dec lret pusha sub or in add sarb inc sbb adc stos enter push mov pop fsubr add flds add jnp jmp xor rcr inc lcall and and sub fdivs dec cmp popf inc dec popf jg add std pop addr16 push sbb and in xchg lret cld push sub ret adc xor outsb jne jne sub dec cmp xchg into jmp and pop bound fwait add and pop cmpsb sub pusha xor pop outsl inc arpl scas aam insb dec mov je push jnp ror scas addr16 fsts pop (bad) xchg xorb fidivrl jbe insb jle add mov ret neg or add sti add orl add xor loopne (bad) sbb outsl push popa xchg cmp jl lret loope into jb test push jno orb pop pop cmp gs neg mov mov sub fldt dec outsl and aam and sub stos int3 cld inc or lret in lret cmp sub fdivl add hlt add ds movl lret test dec sub pop cwtl imul xor psubsb lcall cltd push out pop lret popa sti dec push js inc sbb shrb aad adc cmp add roll test sub jg aas (bad) lret cmp push jmp fs mov ret jne fwait out dec ret mov and aad inc adc push sub lock mov adc cmp cmp icebp xchg push (bad) xor ret popf pop lgs addl aaa lds add stos andl jne mov fs mov and test pop pop mov pop dec sub cmp mov mov in imul add les pushf inc mov cli hlt push mov fisttpll sahf add sbb inc in push jne xchg sti stc inc cmc pop jmp flds (bad) pop gs lret and inc dec push xchg leave dec add mov sbb into xor mov xchg (bad) xor hlt pop xchg cmp mov pop mov or test push push mov sub arpl or nop add xor or or mov or push faddl addl addps ds dec arpl sarb stc cmp iret sub cmp clc (bad) sub lods rclb cld sub xlat push or push cmp dec movsb push pop int fild rol daa mov pop lea les js testl jg jle mov push popa adc nop mov add add adc lea dec ret daa daa xchg loopne mov mov mov pop jp sarl sub push inc pop jns xor repnz push mov into js rcrl or clc mov sahf add shrb out jbe pop mov inc dec pop and imul inc dec into hlt (bad) out jg stc inc push cmp or push rorl xor neg pop lret mov addb mov sarb mov inc mov sbb and adc out sub cmpsb (bad) push pop popf and and add sbb mov fildll add add outsl mov pop adc shlb and test jmp or pop aam dec pop push sbb aad add adcl movsl push rol inc jae pop lret rcr inc mov dec add imul mov popa jo cmp cli push bound mov lock mov mov test dec add and xorb pusha adc adc pop and cs push xor push mov push sub adc (bad) jmp lea rol cmp push xor orl (bad) lcall dec or (bad) xor pop xor xchg push (bad) push test mov cmp inc xor dec movl cmp xor xor shl sbb pop jnp icebp dec addr16 pop ret mov dec sub dec in add pop loope mov popa push popa push dec inc ret shll sbbl orl inc loop insl add push or inc (bad) aaa xlat sti imul add loope inc gs imull icebp (bad) jo add rclb pop fisubr and inc adc sub jae xchg xor add lods push pop js mov ds jle dec gs xor dec xchg inc mov popa sbbl inc inc pop add mov inc comiss popf popf pop pop loopne test xor adc rcr xchg mov push xor add add and adc lcall (bad) push add xor push mov mov pop jle lods fnstenv ja frstor jno cld and inc mov push lahf int3 lds inc mov adc lods mov pop fs mov lret xlat cmp inc adcl nop adc adc fbld loopne push rep (bad) fstps fs xor xor and mov jmp leave or gs pop ret xor add inc mov jo mov jb arpl or xor push xchg mov scas xlat rorb jne addr16 cmp or and or daa sub inc or jle add adc jne or xor and mov clc add adc xor add enter push lcall xchg out rorl sub clc jmp push sub shrb dec xorl inc pusha out mov or loope adc in push pop loop ss dec ljmp mov mov stos add ret test jne add repz and and hlt lcall dec cmp aam clc or insb or sbb push inc sbb (bad) mov popa pop (bad) xor and xlat loopne cmovp add ja mov xorb dec mov rorl andl sub or dec add (bad) repnz mov add inc cmpsl scas fildl adc ss fiaddl add lret nop pusha lea lcall xchg xor cs loopne sub xchg jo add xor ja jmp or pop movsl or fadds jl loope lock push jmp sbb jo jno adc imul (bad) push pop pop mov mov mov fildll inc test or add adc cmpsb xor jne xchg xchg xchg xor sub stos mov adc pop xorb add or lahf jne shr mov imul add add lahf sbb leave and and push orl sti lahf (bad) loope push and int3 (bad) and jo,pn pop sbb mov nop jb mov sbb sahf mov xchg lahf std loopne test mov add jmp jp dec push test xchg lock rorl mov or outsl xchg mov pusha loopne inc fistl push test ljmp cmp or fsubrl mov mull adc add mov add add aam xchg pop (bad) and adc sub iret fldl ljmp mov cmp sub add inc popa push or and sub mov push or imul mov outsl adc mov test (bad) les xchg jmp out addl push xbegin add jecxz lock jge or add mov pop push pop adc add repnz mov or sub std cld fidiv xor adc adc cmc test xor addr16 ret popa sub (bad) or push jp jo shrl scas or add rcll lret bnd mov jo insl outsl lock add pop dec les pusha (bad) ds (bad) push mov aam fs and shrd popa cmp jo xor (bad) jp add or sbbl in flds ss test dec jne js andl push jle mov int cmp insl decb addb or je push pop mov sbb mov push loop or mov mov cmp mov mov pop mov mov pop dec inc push xor mov adc or pop and mov add or pop push mov sub sub dec cmpsb sub daa and pop xchg (bad) xor fsubs sbb sub aam or push xor ret cmpsb in push fstp sub ret fiadd inc cli clc (bad) sti push xchg add sub pop add mov in add push (bad) or cmc pop mov ret movsl jnp lods sbb (bad) xor pop clc sbb add mov (bad) enter xchg dec pop rcrl rorb xchg popa inc add fstpt adc or cltd xor fstpl sbb push lahf adc lods (bad) fstpt lahf rcl jnp inc pop jg in mov ret cmp pop jge adc (bad) std je lods mov (bad) xchg inc xchg (bad) movsl cmpl push pop push mov mov ror sbb test std pop pushf add xchg pushf jmp or addr16 in push push dec jae mov or xchg inc mov adcl leave xor in xchg cmp cmp inc movsl notl sub sub scas add mov push mov add sub fisttp mov mov pop inc fsubs lret push or mov test loop push jge pop ja jno stc fcmovb push leave mov mov mov test test mov pop inc ljmp adc imul loope ret inc outsb xor add jecxz dec inc inc ret adc mov cmp lea pop in sub pusha mov and dec mov push mov adc fldenv push stos inc fsubrl push adc les aam and sahf push mov lret adc (bad) xchg fisttpl and jne cmp popa repnz shrb loop xor cmpl push jp sub inc mov inc cmp lea add pop sbb xor sbb mov pop (bad) xor and add jmp orb push fiadd ljmp xor inc scas xchg pop cli jmp or push mov scas gs xor aad daa push iret or shrb iret and xchg adc cli cli lea outsb adc mov in jecxz lock or popf push adc repz pop enter setb nop mov xor xchg and add adc (bad) popf leave dec push mov adcb rol adc lret add aas mov mov stc (bad) rorb xor adc xchg sub adc push push repnz add dec and pop aam cmp fmull jge push aaa mov imul cmpsl lods and mov (bad) fistp fstpl cmp jl lea sub xor xor xor lea sub push mov (bad) xor pop and mov pop xchg lods and lea jle insl jno xor leave push call sub or sub jp adc adc push fld cmpl test push fcoml and sub pop aaa pop sahf dec lock add aad adc (bad) lock pop xor lcall loopne mov sub and mov or icebp sbb cmp and adc inc xor fwait push mov pop push cmp inc add mov das mov mov jo inc inc fistpll and mov das add psubsb bound cmp cmp xor mov mov add xor xlat in bound int3 lock adc lahf (bad) sub mov add mov xor sbb loopne sub dec or mov outsl ret push (bad) aaa int3 cwtl mov sbb pop sub out iret xchg inc mov push push mov out cmp xchg push push lahf cmp insb loopne enter bound or lea cmp adc ss movsl add inc cmp adc inc cld add push sbbb nop lret inc dec dec sub inc fist pop or mov xor dec push xor pop loop cmp mov sub jo pusha into popf sbb aas sbb orb das and sub ret xchg ret fmull mov test fnstcw sbb movsl lock aas sbbl mov mov aaa (bad) mov jmp add dec mov lods or inc mov dec in jle insb jecxz dec test jge jl jne xor arpl fchs jae lods outsl push and lea inc clc lret xor or sbb inc cmp mov lock cmp mov cmp jbe je inc addr16 dec movsb xor sahf std adc lds daa sarl jg push mov das cs sub jns adc movl popf (bad) jle mov stc adc sti into test popa push mov and xchg or insl push ficomp inc push push jb fistpl cmp popl push push icebp xor or jl xchg cmp adc jbe mov dec xor inc mov arpl mov loope bound mov and mov adc jl mov (bad) (bad) lds pop push xchg ja loop jl mov fist inc and sub pop cmp je cwtl push xchg movsb das dec es fcomp mov xchg dec roll sbb popa and pop mov and or cmpsl mov cltd pop mov jge icebp pop mov arpl sub inc jmp adc mov adcb xor push or out pop fldl outsb push or pop daa or cmp jbe addr16 add fs sarl jbe adc rcrl clc jae test adc inc int3 jge cmpsl adc ret test xchg ret jno cmp lcall lock push push xchg out sub pop hlt add inc pop jecxz bound add mov js clc test fwait test add cwtl pop or pusha inc push dec cmp and and in mov sbb les lret inc fdivrs fmul lds mov inc or mov fs xor out mov and add dec mov jns add add xchg inc rcrl iret scas in (bad) fstpl or aas push push daa or dec or js fnstenv pop cmp outsb imul fcmovb add push sub sub lret cmp or cmp cmp ret rolb fcom mov pop adc int sbb in in call sub jp hlt nop and sub add aam jmp (bad) cmp jne cld xchg test test std add xchg sub or lock enter dec rolb push loopne push insb sub mov push testl test xchg les fldl fmuls cli ret inc add add push push or imul (bad) xor xor pop mov jge inc sub cmp repz icebp mov add andl fistpll in sarb jo js stc jne in sbbb sbb lods xor sub imul fs jle lock pop jnp int (bad) (bad) jnp daa clc push push and jo aas mov sub (bad) (bad) lea les rol lds scas in sbb in paddusb in inc in add and sub jb jb dec push cwtl cmp mov add jmp mov adc vpsubb aad cmp addb dec jecxz lds (bad) pop je jmp ficomp inc inc scas dec sti (bad) sahf fs lods insl insb nop movb mov dec call mov pop or dec mov jmp cwtl xor aam fwait pop push popf sub add mov xchg jbe bsr fldl xor jp cwtl sbb or mov pop adc int lods sbb hlt popf sbb mov inc or fdivrp (bad) xor lret pushf push dec or pop xchg dec (bad) cmc push adc lods cld dec (bad) inc cmp ret jnp mov mov jge lds loope (bad) jecxz lds (bad) mov movl mov sub xor cmpsb adc jb ret xor rclb inc push movsl (bad) xor xlat mov sub das fmulp lods nop lods aaa push pop lds pop (bad) adc arpl mov xor push sbb test push call not xchg loopne push (bad) mov aad mov xchg lret pop add xchg jne mov sbb lcall push stc test xchg into test por dec jne sbb pop lock sub inc js jmp cmp or mov je mov push ficoml or shlb pop add inc movsl pop in add push insb pop gs gs jecxz push ret in mov sbb and push cmc shrb movsl sbb faddl in and and test push mov sbb sbb mov pushf cmc adc mov fcomps mov push ret dec push (bad) rol sbb idivl andl imulb pop mov pop xor call movsl add mov mov ss and aad adc jecxz popf scas dec adc gs rorb std adc mov clc or das repnz mov (bad) xlat test push mov loopne pop adc ds data16 push popf pop stos inc mov mov cmp add jmp add jmp inc add sub repz dec adc lock loope int inc fxtract push mov jg xchg sbb jnp xor dec cmp fs sbb (bad) mov adc sub and lret sub lcall inc sbb test inc xchg xlat mov cltd fistp jbe mov jo add cmpsl imul jg cmpsl push mov mov push out jecxz or scas mov mov int3 sbb xor jecxz sub js adc or ret jae insl and imul pop iret sbb fiaddl nop pop dec and (bad) rcll mov add fcomps push pop cs push mov adc frstor push test mov jecxz rcll inc sbb addb xchg scas (bad) xchg stos jo std out aam and aaa out sbb aaa mov push test xchg fsub pop and loopne insb sbb insb mov jno add (bad) adc add out rcl loope lods ja jmp bound scas or nop bound cmp inc pushf fdivrl popl adc movl fdivrl lock pusha fwait push cmc loopne mov jecxz rclb les cmpsb or or (bad) fisub mov mov cmp test shll sbb or dec aas es push aas (bad) sub cwtl cmc xor lods cli out cwtl add ljmp inc add lea bound sbb jb adc mov loopne movsb rorl fisttpl inc cwtl or neg cld add sti test loopne popf mov js scas sub inc stos sbb repz (bad) ds xchg mov imul aaa push mov sub jns jmp loopne in in lcall ret fcmovnu mov test arpl imul xor pop jl and cltd xchg loope les mov mov jg xchg test mov cmp ret pop ljmp adc stos cmp cmp rep call add hlt pop in xorl jae rcrl push xchg or into pop subb push pop (bad) lock nop jae or rcr cmpsl lcall clc inc pop je mov inc divl jno aaa or mov (bad) shll outsb pushf pop mov pop add add mov fisub js jno lods or fbstp je fcomp jg rcr movsl push pop push lea enter xor mov cmp mov ja or enter dec or inc pop jne scas int3 js enter cmp test pop or sbb xlat lret fsubs xor dec or cwtl pushf je ss rcl xor les lds xchg dec sti rolb (bad) pushf jne adc loopne add (bad) add imul cmc (bad) int xor push add dec or fmull shll add and add loope (bad) cmp push les xor jecxz cmc popa sub and test jns push xlat mov (bad) jno xchg ficom sti imul imul sub dec sbbl mov sbb mov mov push sahf adc xchg fmul xchg cmp ficomp int stc dec adc inc xchg insl and roll int3 xlat lret movsl lds push out lods fs in xor sbb mov mov mov sub fisub jbe mov push push add in repz movsl das jge push jmp arpl ror ffreep sub movl shll xchg mov inc bound ds and pop fiadd and add cmp pop loop pop fisttpll xlat iret add xor jge cmpsl mov dec repz inc out inc repz mov push addl into loope mov imul repz xchg dec out pop int fisub or ds or dec push pop dec test ret add jno lds js cmp add add xchg sub pop dec inc dec cltd sbb je ljmp push jmp or sub lods push or push jmp inc ja lock push mov pop add pop mov test add arpl adcb bound jnp lcall push cmp mov not sbbl or and pusha rcll jmp daa scas movl jg das sar xor rorb imul ljmp pop fs es xchg insb int pop pop xchg mov mov sbb or dec cmpsl or movzbl rolb xor fdivp inc ja dec (bad) js (bad) and dec cli cmp arpl xchg add fsubs je pop clc arpl fadds mov in push hlt fwait clc mov fwait lock jle and loope fwait call (bad) fnstcw or cmp fadd pop sbb clc aaa mov mov or out sbb push imul sbb (bad) loope lret or add int fwait and jno sbb xor lods test add test mov add arpl lret sub mov cmp sub lea test rcll inc inc xchg push lahf fimull and arpl jno out inc insl or push loopne out or sub aam push fsubs mov mov popa sub inc addr16 xor std or add in inc es shrl dec xor mov pop push push shl call dec sub mov (bad) pusha mov sbb sbb arpl ret ret lcall roll adc mov adc insl mov adc hlt les loopne mov xchg (bad) fdivrl add mov mov dec adc ret ret xchg ret adc dec inc sbb subb xor (bad) or push jge cmp lds dec cli les or inc xor negl add aaa call call sbbb gs (bad) jg and fdivrl and lock in or pusha adc sahf jle mov adc xchg cmp addl ss adc jp rolb (bad) xchg enter cmp jbe mov mov xchg ret sarb fldt inc mov cmp les adc adc add mov inc add dec pop inc ja sub test xchg cs (bad) push adc das dec xchg fadd pop lret xchg loop or hlt hlt movsl mov sbb lock add fs enter clc and fs clc ret mov ja xchg xor xchg add sbb jnp ja mov sub mov sbb jnp ss and cwtl or lret or nop or adc jo xor ret movsb jecxz xchg mov mov and push push mov fldcw roll sbb and sbb inc test (bad) (bad) push loopne pop sbb (bad) adc andl pusha or movsl pop icebp xor loope movsl sub (bad) fldt das jecxz or inc cld add fistl add and aas cltd or (bad) inc test loop rcr push sbbl test jb xor xchg pusha loop cmp sbb mov cs xchg sub mov mov cmp jge outsb int sbb add js sarl and rorl add ja sub cmp fisubr dec add icebp insl adc add inc dec mov pop lods cmp mov repnz and (bad) cmpl push les sysret hlt movsb sub or daa decl es xchg xchg add insl loopne call lcall inc movsl push hlt movsb in xchg dec cmp jae loopne mov daa fisubr push dec mov cmpsl mov xchg mov mov adc addl add enter mov outsl mov popf push (bad) fldl xor lods sub and out xchg (bad) dec rol push out js xchg lret inc je test or xchg pop xchg inc (bad) push std xchg cmp mov adc mov cmpl data16 xchg push popa jmp and idivb mov (bad) pop cltd enter arpl inc xor inc pop cmp jno xor jl jp add jnp and mov mov (bad) dec and cltd mov cli adc jnp inc andb jg mov dec cltd out add cltd xchg add pushf test insl cmp mov ss mov aad lret pushf aad xchg gs mov rol xor pop inc loop mov xlat mov pop lret dec or adc adc inc ja cmp inc push jge subb cmpsb icebp les add popf lcall and mov lea (bad) inc or pop push (bad) ss cmp pushf (bad) cmp inc ret or cmp mov or lea js andl sbbl aam mov dec pop roll cltd insl add sub xchg push cld rcrl (bad) or mov incl lret getsec fs loope (bad) icebp ds xor es es jo pop cmpsl stos or pop push rcll push sbbl dec sbb push push push push xchg xchg dec iret sub mov loopne bound inc cs cltd and sbb mov cmp mov xchg pop js iret lret xchg out mov sub push add es dec mov punpckldq ljmp jl push imul mov push adc xchg es lods scas aaa xchg add sti pop call (bad) push ror leave leave insb push pop inc imul cli je push jp or aas mov ja mov imul dec adc adcl pop loop jle xchg cmp pop imul mov sahf outsb movups dec or sti adc sbb fld popf push push dec cmp es and and cmp lret data16 fsubl inc lods inc sahf roll cmc call sahf (bad) incb and cmp mov imul mov mov and ret inc aad fistpl pop pop pop ret xor inc mov fisubrl out je add xor add inc pop pop in icebp push div movsl (bad) xor add lods in sub xchg push push pop mov ljmp pop add adc pop addr16 test push shrb or xor xchg in loop inc subb cmp pop loope push imul test xchg sbb jmp sti xchg ret subl lea pop orb lock outsl jo (bad) int cmp or mov cmp jo pop jl neg or push and sbb and pop popa xor loope test aam nop fistp xor fstpt xor push repnz fsubp and movsb push shrb (bad) (bad) mov push cwtl (bad) pop sub xor mov and sbb xor gs outsl loope fcom rorl (bad) sub gs inc mov lret aaa enter movsl xchg (bad) lret sbb dec jecxz adc sbb outsb jecxz sub les (bad) and shll pop jno fadd repz jge push aas addr16 mov xlat loope push imul jmp (bad) dec mov pmullw aam push lret test fistpll (bad) pop inc pop out decb adc mov xor fidiv pop fwait jns dec pop jmp fwait pop lock xlat cmp xchg mov push lahf sub bound outsl inc or (bad) adc es xchg pop and and inc arpl inc or mov push xlat mov mov xlat sbb mov adc lds push or push test enter xchg scas and movsl mov mov adc dec jle mov (bad) dec mov aaa push adc xlat mov and sbb add rcr jmp pop adc js outsb xor pop lea mov mov or push and fild sub xor mov cmp push cmp mov push (bad) scas nop adc (bad) ja add out movsb fadd fildll and sub dec fadd and std mov push mov cmp xor mov pop repz loope fwait pop adc out and mov ss xlat xor pop dec cwtl in (bad) push mov cmc je adc or inc movsb dec loope adc push mov addr16 cltd cwtl enter mov je rolb pop fsubl jno and imul enter jne arpl pop sbb sub loope mov jecxz orl pusha cmp adc ja cld aaa mov inc insb arpl mov fwait shrb adc out dec adc idivl fstps in mov bound inc in test js or pop xor sti daa ret lret idivl adc in xchg sarb stos loope imul lock je cmp jmp xor dec cs pop lcall fs mov cmp add out inc mov loop cmp pop cltd arpl inc incb fisttp adc adc adc push pop or jb repnz dec test loopne cli mov and or les outsb fmuls jbe push jno sub cmp add int3 adc mov loope fcomp push insl nop mov mov add das jne adc sahf cwtl pop lods iret rclb loope aaa aad out push rcr xchg or mov add dec and dec ret or cmp pusha call sub daa push call sbb cltd nop inc fcom adc or lea leave dec les loopne in push add mov and mov push xlat (bad) (bad) dec loopne nop sahf xorl (bad) hlt and mov pop inc popf imul idivl lods aas aaa incl sbb loope sbb test cmpsb dec add aaa pop sub in jne xchg jno push call sub jns clc enter push xor push dec (bad) sbb dec lds ret dec push xor (bad) push and xor or lret sub xchg popa lods fs jno mov add leave xchg imul push pusha mov jno sbb xor ja or xchg pop push imul movsl jne arpl mov ss mull and scas xchg aad int3 data16 sbb sbb sub cmp add (bad) int3 add push adc lret std pop push rolb xor inc mov or jae push xor jno xor pop jge mov mov inc mov cmp cmp mov aas mov xor dec dec loopne pop pop leave lret cmp dec sub adc inc or dec add test aam jmp push pop mov push test mov jne mov add iret jo stos mov dec roll push cmp mov adc mov or movl adc imul xchg sbb adc push sub xchg call fdivrl jo jnp adc mov xlat mov int jmp push push push or mov add inc aaa and mov mov fisttpl rep adc inc jo arpl lods outsl test jmp sub fstp add mov mov jle mov das sbb ja pop iret insl ja dec xchg lock arpl push push loop mov xlat (bad) scas test pop push or inc inc and pop ret inc jno rcll pop shl or sub jno pop loope adc int mov sbb mov inc movsb nopl push inc sub inc jge or mov add inc sub jo lret add cmc xchg inc ret into ljmp aad mov dec aam loopne sbb sub enter or stos adc add mov jg adc popf sbbb cmpsl add mov cli add loope sarl mov and push add not dec call lret and adc sub dec or push adc add and mov pop cmp jo add jbe decl xchg push pop or aaa inc and jg sub sbb pop sbb test mov cmp sbb xor mov cwtl test push movsb aas pop das aam jno inc lock adc or call shl adc lds fs sbbl jne movsl xor inc dec jne clc in fstpt out jg (bad) push push ret xchg (bad) ss jo or shrl push adc (bad) or adc sahf std xor jo in and mov jb clc jge sub jle sbbl rcrl movsb daa xchg or js xor jge lock xor xchg pusha stc add sbb pusha push add (bad) and flds (bad) and fstps dec add (bad) in movl dec fstpl mov lods mov call push cmp xor and mov push mov out and mov mov test leave and jle pop ret mov leave inc and inc repnz or in ror cmc or cld mov adc sub sbb or mov or push push movsl inc bound pop jb xor add dec ljmp adc lea ja push into imul call or lods jmp sbb (bad) imul jnp enter sbb add xchg enter lods jnp inc push xchg push ss push ret lea insl in add add ljmp (bad) cmp dec (bad) movsl adc mov adc std jo cmp and scas cmp sbb stc jmp adc add add out jne ljmp into lret add sub and sub cmp push and sbb pop inc pop push dec leave push pop adc adc sti pop push inc sbb jl cmpsb adc push js inc fdivs mov push es out or xchg jp (bad) mov std ljmp ss sub dec add ljmp mov xchg or mov icebp out test add xchg into rol movsb mov inc mov xchg setne fistl mov out ret add push fcompl xchg mov xlat ja lret xor scas xlat xor add imul rcr aam sub mov fimul add and xchg and push inc ss add and dec mov dec jns dec adc clc xchg out mov ja inc repz adc leave and out cmp adc xorl test pusha rcr mull loop add cmp jnp adcb and adc es adc mov stos cmp fadds popf adc xchg sarl inc cmpb add fs xchg pop hlt pop pop cmp push xchg pop enter (bad) std mov scas inc lods fstps mov pop adc adc testl add add and sub inc mov adc ja push push (bad) jo (bad) sti loopne popa push pop and add or insl and shll or fiaddl cltd sbb mov add imul mov das fmuls sbb xor xor leave adc int3 test push lret sbb adc pusha ss popf arpl xchg adc test or push xchg push push jo fwait loopne push je pop fadd push and pop and mov cmp add sbb inc insl fcompl and jne mov adc gs cmp test pandn mov fwait sub (bad) cwtl xchg jb sbb movsl inc je adc fmuls fiadd push or xor fsts dec mov leave fnsave in xor cmp sbb mov add xor mov jg (bad) test push mov outsb inc ds sub rcrb dec or add addl mov push mov push push or pop mov or mov or adc int3 dec add jmp daa push clc ljmp rol or sbb adc fwait enter jne pop xor sbb jb xor jl xor and or movsl xor add inc xor les push push push mov fsubrs and jbe sbb inc push add repz cmp cltd movsb ficoml dec outsl dec sahf addl add jnp arpl loopne sub add ljmp dec (bad) in cmp cmp mov out pop pop jg or in push or (bad) jnp adc adc adc jge test dec (bad) adc sub repz or push dec adc add or sub aaa lods sti rcrl inc je sbb mov adc pop add rsqrtps test sbb in loope xor xchg adc (bad) lea xchg call roll xor add test je fistl pop inc mov (bad) cmp in pop adc popf dec cmp and sbb jae mov movl or (bad) addr16 cmp mov pop lahf dec or pop shrb jns rcr sbb pop mov push push xchg lahf mov ror cmp fdivs enter xchg mov jmp outsl dec sysenter sbb repnz lcall outsl fsubs sub sub jbe fucomi sbb pop xor pop mov popa out test popf ret mov or dec in fnstenv cmp (bad) cltd or pop and lcall cmp repnz or xchg sub fnsave ret and pop xchg in pusha push and push xchg insl aaa cmp popl je mov shl addr16 idivb dec or popa arpl push out lods or ljmp xchg in loope push xchg cmpsl ret rcrb rcl fsubl inc lret ficoml adc mov cmp ret jg jno mov addl int3 mov in push adc popa in dec cmp cmp pop ret sbb add add rolb fild add push sbb mov add xor lahf add inc data16 movsb or imul add adc and jg add dec test sbbb pop jg (bad) pop adc add shl jno cwtl adc les (bad) sub pop add mov mov add fistpl or inc xchg mov (bad) push pop es scas or jmp lods rclb xchg subl add dec and adcl inc (bad) sub inc or push leave sub or sbb jecxz cltd or or sti subb jb pop lcall cmp (bad) out (bad) jmp iret jbe mov mov mov stc nop pop push faddl and sub rcll sbb sbb cmc pcmpgtw and or push lret mov jecxz push pop pop inc lret mov cmp and push push es aaa lds leave pop pop pop scas aas jo mov rcr xor add push or cmp fdiv push or rcl jp ret inc clc cld es jp aaa out stos movsl imul andb sbb sub sbb andl shr jge adc pop xor roll daa adc inc pop out insl fidivl jb arpl cmp adc pop js sbb mov dec enter inc sbb cltd cmp and aaa call lds xor (bad) cmp repnz xlat add lods ret dec or mov adc and push add and mov rcl call es loop or mov cltd pop cmp ret jo push add fwait cmp clc push imul adc sbb add fsub and ja fiaddl sbb xlat mov mov xchg sbb jnp xchg mov fdivrl pop fidivr divb inc (bad) mov outsl xor ss aam xor lods insb dec shl jmp dec or push test adc stos std rcrb les mov add les inc (bad) (bad) movsl mov add add pop mov cmp mov imul adc outsl and sbb jge stos (bad) (bad) xchg lret and and jmp sbb cmp inc mov inc adc adc or inc shr add leave jns push mov adc (bad) mov jne (bad) push or outsb inc fs jge push out mov or mov and mov or cmp mov popa mov std leave outsl sbb xor (bad) jnp jge adcl adc jge cmp sbb arpl ljmp lock pop xor sub pop stc lock jl test push or xchg fdivs jmp xor xlat push or mov push pop xlat rcl xor (bad) fstpl (bad) jo sti adc jle xor fsubl ret mov imul cmp imul into dec pop push push ja jmp xor test cmp and jecxz mov in sbb mov or and dec jnp jae sub add inc rclb hlt jp push out aad jns push mov add sbb mov leave sbbl cwtl outsb cmpsl sub xlat push pop mov push mov mov movsl mov shlb sub jg call add ret inc sub pusha and shlb movsb mov adc inc sub adc popf xor lds cmp mov call (bad) popa push sbb cmp cli mov adc bound sbb xor stos jb push lds jmp xchg ss or pop push mov adc cmp jge and and hlt push cmc jp jge jg fbld sbb sbb adc xchg aam push addr16 aad push or and push addl dec scas inc sbb push lods lret mov sbb inc add shlb bound xchg imul cltd xchg les xchg xchg mov pop fbstp dec out divl sbb adc dec out test or aam loopne pop adc xor add mov inc adc jno xor call rol add mov mov sbb test inc clc adc adc subl xor pop dec lods (bad) xor cmp push and add cmc mul and sub or aas xor push mov test scas push stc sti xor fistpll xchg nop sbb call addr16 in outsl and aam mov popa and push gs jbe inc (bad) xor adc cli mov sub pop fmuls outsl pop pop scas mov sub xchg (bad) (bad) lret xchg or xlat and inc (bad) push xchg vunpcklps xor add int mov inc popf in cmp cmc pop (bad) sti orl aad cmp inc mov sub sbb adc sbb arpl (bad) cs add es cmp imul mov or mov sub je dec repnz inc inc cmpsl outsb in jnp icebp pop adcl xor fwait dec sub test mov sub jae (bad) mov lret ret or add movsl add dec jne fmuls jne add loop orb inc dec sbb loopne dec or nop (bad) xor push and and push add and lahf rclb ror js push and push add test mov popf sarb andl sbb nop and aas sbb lock (bad) pop cmp mov mov pop ret or push inc or mov icebp shl lret outsb xor or add insb dec cmp mov mov pop lret rclb push push cli pop jne mov shl pop cmp adc idivl dec xchg and arpl outsb iret jnp dec cwtl std jg and jg cmp pop pop or jle or fidivr test cmp stc psubq insl into inc or ret add and adc mov mov ljmp jmp sbb sbb dec inc add add fidiv jmp aad jl popf test fs shlb shll in rorb jmp lea mov icebp push lea rcll scas xchg jb inc mov daa mov (bad) rorb stos jne push pop add xlat fisubr ret stc pop jecxz insb mov mov lret xchg mov cmpb scas (bad) loope adc or je jl xorl out mov mov imulb imul mov imul jno xor sub mov (bad) das xchg lock movsl fisttpl dec mov add mov sarl add jg dec add orb add es push inc xchg push out mov xlat xchg loope jl lock je out mov bound xchg roll leave jecxz in mov lods insl adc fist mov stc and xchg (bad) cmp pop or jp sbb inc andl mov mov cmp or jne js jmp push not xor inc push pop aaa add mov pop adc pop jo push sub push dec addr16 lahf mov daa jno insl movsb pop scas and dec add hlt addl (bad) js add lea push add jge mov ret xchg cmp jle sbb aas fmull mov gs mov inc movsb pop rorb sbb mov popf sarl (bad) lcall pop or (bad) test pop lock (bad) lods xchg lods ljmp add dec add call (bad) jle lds add jbe psrlq push lahf jge mov jmp mov xlat adc sbb inc or out mov imul mov mov js jne,pn cmpsb jmp cmp sahf hlt sbb inc dec add sub mov mov enter adc sub (bad) (bad) or jbe negb lcall jnp mov jns xchg iret mov sbb rcll and fcoml loope xor repz dec mov loopne push dec sbb add push or pop xchg (bad) leave into xchg or fcom mov adc das add test int3 js add sub push nop or dec mov (bad) ja in mov push jge jne pop in push repnz push repnz pop packuswb cmp pop or xchg push sub and pop xchg loopne inc push add aaa xor fdivl cmc xor jmp es rolb sub jb enter fldl mov push or in dec adc cmp mov cmp aam push clc inc xlat add or push fstp sub jbe das in js cmp jge push push dec in inc insl adc mov adc jae xor push lods xor jmp inc adc fs xor lods sub pop adc or fnstsw dec fisttpl movsl fnstsw jmp jb cmp and sti and jl sbb je adc add test sbbb xchg push jo xchg xor sub dec loope pop pop test jg dec jmp repz adc mov mov pop (bad) lock push sahf adc mov push fstps mov mov adc or adc enter dec ffree in or sub repz cmc popa mov rcrb pop mov int3 adc jnp subl dec xchg test xlat inc xchg or mov fs outsb xchg add pushf jmp xor mov fs movsb imul sbb cmp repnz push pop pop or or cli or pop fs add mov loop repnz push in int3 enter in out mov test jb fcomp rolb gs clc add and or cld add shll xor sbb or (bad) call ficoml gs incl es push sbb dec pusha push dec sbb dec mov call aas add xchg loop push sbb add or mov xchg jp adc adcb les or divl test add adc sub xlat add sub or dec push or je mov (bad) mov cmc or aas pop gs mov inc adc add pop or sbb arpl psrlw (bad) cld cmpsl movl push add inc (bad) xlat sbb add add jl mov les mov loop pop mov and push loopne mov in jl mov rclb push and add adcl sarb fiadd repz inc adc jmp mov jg push xchg lock lea mov xor rorl imul push mov xor das mov cmpsb outsl fistpl mov pusha jo negl xor loopne mov pop scas loopne fnstenv jns stos adc aas loopne daa or push push jns rorb inc mov scas adc nop mov add cmp in mov xor jbe nop and popf sti pop xor sbb xchg pop mov jb push test fwait adc jne orl xchg mov rcrb clc jne mov push jmp mov popa cmp adc dec adc mov add test mov push lods jle out test mov xchg hlt sarl enter pop mov (bad) or bound pop dec push inc fcompl ss jo hlt sub xchg xor (bad) jmp pop add mov popa loope sub add jnp daa add cmp roll inc loopne notb cmp mov xchg add and pop out lds test rdtsc sub sub push clc xor jae push (bad) jp jecxz shrl pop stos sub lea movsl icebp adc ret xor rclb das and or xchg mov mov cmp add pushf sbb xor loop jo clc or imul jl imul add push push add cs or or inc or dec and add dec test sub or push lahf mov jne je mov push xchg pusha cmpsb mov and adc sbb sbb pusha mov lods cs sbb mov sbb adc cs lcall testl pop mov sub dec movsl cmp adc or mov addr16 roll popf xor push addl mov push je es scas push adc push loopne mov adc push rcll xchg add inc xchg clc add iret loopne shr add add jecxz mov repnz negb inc mov (bad) cltd xchg or or dec sar mov jmp cwtl inc imul sbb pop mov jne inc xor cs in add jmp mov mov fldl jne int cmp adc or push adc aas mov or sub add call loop add add push dec fs mov and les push sbb xchg jo sbb pop xchg rcll dec mov sub mov or and jne and dec adc pop sbb leave or mov xor outsb adcb pusha das and add inc mov adc incb push cmp jne adc xor leave pop dec xchg lea xor es xchg test or xchg popa lods pop rolb addr16 and shrl js xchg xor push adcb es movsb mov inc xchg sub xchg addr16 es sub dec enter and mov cmp and in mov in call adc cmp add mov xor pop and jl outsb jl jecxz push push ret fnsave insb xchg aaa push or add mov and lds mov lahf pop sub inc inc fbld and lret int xor pop adc add mov add test pop add or inc cmpsb (bad) cmpb cmp cmpl mov lahf cmp jle xor jb jl add lahf or shl jle push add (bad) push ret push add add cmp sub ja push or mov test dec add bound push lret fisttpl and (bad) fistl mov dec add pop add dec add dec aaa push add jno leave and lock jl push ja lds pop dec and xchg push mov sbb dec adc pusha repz testb fcomi or inc int sahf push push lods icebp add or sbb mov (bad) push add jmp mov push push pop ret add sbb adc xor xchg cli aas flds pop les cmp ret inc or xor pop and dec aas or mov sarb mov cmc cmp adc jp add ret sbb lock or inc and jne mov cltd aam in (bad) fstl and push lret cmp add es daa leave sbb cmpl mov pop leave jae sbb repnz adc das or mov and jnp push (bad) jae xor ret cltd lret fwait les or cwtl push call dec insb pop add jae xor jae jne add loopne or imul and dec add xchg xchg orb ret push mov adc push sbb add dec jb dec and sbb mov (bad) (bad) pop pop pop push mov sbbl jne aam sub movsl sahf orb inc add jmp or lret ja,pn inc sub test pop push insl dec popf pop icebp add clc loopne hlt push fdiv inc mov and pusha je icebp (bad) mov lcall mov mov arpl push dec jl inc test mov sub mov xchg or jbe inc jne and (bad) call dec jno scas dec push pusha adc repz fwait enter rorb or fs push mov pusha or clc sahf jp xor lret adc outsb mov dec or and loopne roll pop imul dec sbb fisubr push push fs or lret in nop pushw dec add call or adc lock lret push jo push enter inc and add mov sbb add add lea jae mov sub sub jg cmp mov ss dec popf fcmovnu lea (bad) ss add in adc imul add clc sub test pop sbb hlt (bad) ljmp faddl push lock (bad) addr16 mov (bad) sub sarl idivb pop sti cmovl xchg lahf (bad) neg lea lods andl add and xor pop pop push xor xchg mov or mov ds sub xchg pop mov hlt outsb inc adcl ret fcoms add push and ds inc sahf lret xor clc cld jne and (bad) and lea loop clc mov xor cwtl inc or lock cli sub add loopne mov fidivr fs mov jbe lahf (bad) es sarl xchg dec adc xchg aam push rorl and clc pop dec mov add movsb jne sub neg dec pop neg push or mov push push inc cbtw pop inc mov add or addl (bad) dec call jnp xor dec getsec ret pop and pop or inc lock xor lock dec orl (bad) adc pop add ret pusha fwait xchg (bad) fwait sub xchg mov repnz xchg xchg sbb ret add sub int decl cmc loopne inc imul lock test out jmp xchg inc scas fidivl inc sbb bswap dec add sbb repz sub push adcb cmp scas mov mov mov movsb or mov or popa out es or cmovs ret lret mov xchg cmpb sbb push rcll pop js ret inc dec cli cmp stos ljmp sbb add mov mov loopne add add call mov or imul adc enter sbb cmc lcall push xor lock or jge imul mov or dec imul pop or insb and add ss (bad) and in in xor (bad) sub sbb pusha xchg sub jg fwait push lods mov adc pop dec xor (bad) gs sbb out rol sbb leave push mov jp jp repz aas out adc repnz insl outsb lock sub andl pop inc sub nop jmp push xor inc leave jl push clc jl add pusha cmpsl or leave push pop add jbe pop hlt add mov sub dec mov mov adc in rol sahf rolb jo add fdivr in nop lret adc aad lock or add pop lahf push (bad) or mov call call cmp xchg xchg stos pusha push cltd inc sub ds jns std inc lock ret xchg mov inc popa mov mov mov inc ss clc repnz add cmp (bad) cmp rclb sbb inc fisttpl add mov pop bound lock jle cmc pop inc adc (bad) jmp inc mov push add dec js test add adc jl sbb jo xor inc pop or leave cmp and (bad) repnz xor jg outsl adc nop loope adc pop pop jns dec lret pop and cmp fcoms mov bnd mov or add je mov imul adc comiss fsubs ljmp pop fsubrl int3 das in push xor test add dec sarl add loopne xchg (bad) int3 push stos sbb pop pop dec adc add dec mov enter sub push stc stos ljmp add sub pop incl pop push mov jecxz sub sbb mov xlat lods mov pop push lahf lds add mov leave dec (bad) iret fcoms gs pop sub adc icebp inc or pop push jg mov aam jb xor inc fs inc xchg pusha mov fcoml xchg and aad dec clc loop adc sarl hlt mov adc cmpsb pop pop rcrl xchg test xor mov adc dec ret popa ja cmpsb cmp add test in and inc (bad) iret or fs (bad) xchg aas cltd adc negb movsb pop cltd pop insb xor cmp mov jmp bound scas lret arpl mov and add or sub fimul add and dec mov leave inc mov fistpll and mov lods or (bad) adc scas push and cld pusha gs rorb pop xor loope call subb inc (bad) inc jg ja add fisubrl idivb clc insl (bad) fwait dec pop popa adc je pop icebp or out inc dec enter xor xor mov inc mov popa aas cld outsl dec lock test addr16 mov cmpsl aas push xlat push dec xlat jg in jge push cmp es rcll jge mov (bad) jg lret and xor and mov inc pushl or rclb xchg jno and adc dec sbb in dec enter inc or leave je (bad) daa sbb cmp adc cmp inc pop lock es popa and scas adc sub jno movb and bound xchg sbb test icebp add mov add jb cmp jnp decl mov stos push and pusha sub inc orl push aam popa xor fadd adc rcll aas xor fmulp orl sub fsts test or mov (bad) pusha dec add lcall insb or inc sbb or mov addl mov cs cmp fcoms cmp fdivs das adc test sbb cmpsb rcr jp lret rep testb jne mov sub jne xor fistpll jbe sbb pop repnz mov add ljmp mov sub jle and ret inc jns adc push aam or cld and push popf mov mov xchg sbb rorb cmpsl out or sub aas sbb mov in add pop cmp cs mov fsubr in mov ja adc xchg rcrl aam (bad) dec or (bad) or rorb sbb sarb dec add mov ds jg daa fcomip fstp jae dec clc orl gs rorb das icebp jecxz je push shll jle xchg psrad insb sub es push inc adc lods adc hlt into inc xor cmp adc (bad) aaa cltd jbe or and jne jnp mov lock adc jnp iret (bad) iret adc dec jne mov inc testl or sar (bad) jb sub push insl sub clc inc pop add xchg lods or insb scas inc jl add call inc les and bnd adc leave adc (bad) (bad) xchg add enter cmp xor clc xchg (bad) fbstp dec adc dec sub shr add cltd gs imul cmp cmpsb inc mov mov and inc rorl lods mov and pop lods mov lock rcrb and in cmpsb cmp clc imul push jge add dec arpl dec add cmpsl mov xor mov roll jmp mov insl lret or adc ljmp sub push out and push push xchg add mov pusha jno es and sbb bound sbb je test xchg cmp or and sbb push arpl xor icebp mov adc into into (bad) mov or add add or inc iret xchg fsubrs xlat aad adc addl pop loop xor add clc clc and popa jg sub fucom mov mov xor (bad) gs cmp pusha movsb imul push (bad) clc lcall mov pop std jmp addr16 mov lcall shrb mov lock xchg xchg mov pop (bad) adc xchg cmp push js mov or es data16 loopne cmp lret or ret out fidivrl cmp adcb lahf dec inc mov int3 movsb das xor push cli (bad) or mov inc adc lret lods ds aaa inc push push mov inc lcall movsl nop pop lock (bad) adc add xor cmc jbe fwait into out add addr16 (bad) xchg lock into movsb adc mov nop (bad) imul sbb sbb push push fcmovbe (bad) cld repz xchg test jb and xor mov sub repnz inc inc add jbe jo aad aas and add mov push inc int3 adc adc push mov jge xlat (bad) adc jg jp mov and jl add adc adcb sub clc jp and call sbb and cs xchg or bound call push push (bad) je push mov pop ss mov mov clc cmp (bad) xor divl aas add clc cli cmp add dec test or insb jo js fild and push cmp ss push push push or mov xor inc lahf mov pop les or inc les lret adc mov jbe nop add mov add hlt lretw movsb into mov sbb sbb (bad) lea jb sahf stos pop xor ljmp adc pusha sub inc pop push add add dec add push pop cmpsb xorl pushf into movsb dec in add push cmp jbe xchg or dec adc mov jne inc into jl adc out dec iret xchg sub mov mov ja cld je adc add dec daa sbb and ljmp sahf or inc dec mov inc popa aaa lcall loop adc rcrl movsb xchg std imul add mov xor (bad) neg dec les cwtl mov (bad) adc and inc push (bad) jno adc xchg mov js lods push jo jmp add or push aam ljmp loopne and rcrb cmp sub fsubs (bad) jno adc repz pop xchg flds inc jmp in push xor (bad) jns ret sbb addl in push in shlb lea push mov cld or dec adc in add xor sbb rclb call sub adc xchg stos dec xchg mov fimul mov cmpsl repz nop inc push mov mov test les pop movb loopne xchg xor push sbb fstp push push push inc cs push push xchg push push inc rorl jo test ficompl sbb push adc fnop jl sub dec xor sar ror ret sbb mov cmp jg repz cwtl aad cmpsb das js jp jo pop imul fcomps add sahf xchg xor lock sub insl jbe adc in icebp cmp fnop mov or (bad) in add mov pop sub push loop int3 (bad) add push add push loopne rol es in jl sti test (bad) mov push mov pusha stos sbb lret iret sbb adc sbb add mov inc add popa cmp imul or add loop xlat aaa mov adcb sbb sbb lea pop sarb sbb sbb sbb rolb mov mov pop add cmp adc push shrb data16 or aam xor shrb aam dec sbb dec (bad) xor je or push jae xor loopne inc adc jo push inc in and add jl dec lock enter jno sbb icebp mov nop or fistpll loopne mov test jecxz test hlt vpsubsb jp push incb adc jne pusha call pmullw jne dec cld and rolb mov les pop lcall add sub add orb push adc add adc inc pushl sub xor sbb gs subb mov loope imul ja lea mov (bad) mov pop movsl add mov ja jp repz enter or cmp dec pop xor lcall cmp pop outsb or mov push xor or pop or or add or add ret or jmp ret arpl cmp adc inc xchg adc and jmp testl mov push xor inc repz andl inc test dec (bad) out mov add in cmp xchg push push sarl leave nop popa scas outsl sub nop xor lret adc leave sbb add cltd add cmp sub cmp pop ds nop xchg pushf in cld ret add push movsb inc clc jae xchg mov push rol and fist or jb lret lret jae pop jb lret add aas int3 add pop scas inc mov into in push and int dec or xor nop mov nop mov xor xchg pop lret into cltd push adc pop pop lret in fwait insb bound xchg aas adc loopne jle les adc jo mov sbbl rorb outsl outsl nop inc mov push sarb popa mov sbb inc clc xchg pop or repz repnz call xor push mov loopne adc inc je shl test loop lock sbb sub inc sub sub mov xor mov lods adc pop add mov sahf and aaa popa (bad) jo pop fstl lds push lods icebp inc cmp xchg jecxz add fldcw pop fstps push pop inc (bad) nop mov mov int3 inc add push sbb hlt xor push and mov mov sbb int push inc pop add pop push pop pop lcall or jns popf popf xchg xor inc xor jle popa adcl mov mov (bad) adc cmp add sbb int3 push sub aas or or sub lods inc loope in lods cmp mov iret pop dec ret pop int add adc ja cs push add add push mov adc (bad) jae aam mov xchg les mov push push test sbb sbb mov test sbb cld xchg cmp mov push mov mov popa sbb jmp scas fmull xchg fadd add sub sarb xchg push in or loope outsb jle nop arpl jle cmp jmp int3 lret xchg out lea mov jae loopne pop loope sbb add xorl sbb pop mov fmuls data16 scas lret or dec lock push nop (bad) push loop or adc dec nop mov mov ret data16 adc das loopne push and dec push lods inc add and sub lods fmuls (bad) jmp mov and jbe (bad) lret fidivrl pop mov add mov fidivr sub mov inc add xor hlt jb popf cmp in repz jmp (bad) cs jbe cwtl or fwait or sub jmp xchg andb nopl lods mov shrd lret push ljmp and cmc jl shr dec rclb icebp mov sbb adc ret add in daa loope xlat push sbb jp shrb test pushf lods xchg sub test adc cmp insl adc or mov xor inc xchg adc aam pop movsb lret in pop adc imul adc adc adc sbb mov sbb add scas xchg (bad) nop or pop inc jo push mov bndldx adc pop xchg xor js in div dec in aaa mov sub mov adc fcompl data16 jno sarl mov ror xor and xor in (bad) shl fwait adc orb or and cmp inc and mov mov sbb lds dec int rcll js pop or lcall cmp (bad) testb ss sub and or and sub sbb ret test hlt pop xchg mov (bad) inc adc jecxz add repz ljmp cltd movsb cltd cmpsb fcompl in loopne add movsl add stc xor xchg fsubrl push xor xor mov test loop je call fwait jb or clc fistpll mov mov adc pop loopne sbb add outsb mov mov xor sbb and pop push cmc inc ret call aad negl adc shll int3 jnp lock or xchg xor imul fbld arpl es sub adc add es out add dec movsb xor lods pop adcb and pop or (bad) sbb xchg mov fisttp xchg sub (bad) push push clc out cmp mov gs rolb loopne add mov adc (bad) adc loopne jmp lock mov mov fsubs mov andl mov xchg xchg jg ja push sbb (bad) aam sbb mov stos push xlat ja xchg dec leave fwait insb in ljmp sbb clc xor daa sbb xchg or adc inc sbb cmpsl dec rcrb aad and sub pop pop add mov rorb xchg push add mov sub (bad) mov (bad) rcrb fidivr cli jmp ljmp dec es cmp je jmp push cmp fwait and push adcb xor inc adc add inc nop sbb in push lea gs inc cmp decb adc mov test cmp idivl scas hlt pusha push cwtl je cwtl xchg mov imul ret sahf jl popf lret xchg adc mov add mov adc enter les adc adc jl push adc pop icebp mov add sub inc decl icebp adc adc and or push into pop (bad) adc ja in mov (bad) jle jmp aas push dec cmp mov clc xor and mov and scas xchg mov add (bad) push xlat xchg or push pop cmp jno lcall and pop and xor or (bad) fisttp cmp enter cltd pushf mov sub mov mov push lock jo mov rol je je sbb push js push push and mov cs mov sub sbb and xor int3 push push ret mov pop add dec mov jo imul or adc jae adc jo dec and xchg pop insb inc pop or (bad) xor lcall add stos mov mov mov arpl mov xor fistpll adc sahf into or mov sub xor mov test mov in rolb loop (bad) sub pushf fwait ret push nop mov fldl xchg mov jo add arpl push in scas adc push (bad) pop in ss cmp or pop add addr16 ror mov push and cmc (bad) fxch in mov cmp ret call (bad) or lahf pop out inc in lock add sbb pop sub loope outsb pushf sbb jb or xchg pop jle fisttpll mov and daa insb pop sub push aam (bad) es lods int cmp lret inc scas (bad) jp mov jecxz or leave mov loop or pop xchg jl mov nop bound (bad) lods mov dec jmp ffreep cmc sub cmp leave or push imul mov cwtl les idivl jmp add movsl sarb iret adc dec mov push add les (bad) xchg lea mov into add inc pop pushf mov les pushf inc lods scas lods or sub fsubl imul enter mov test xlat or rclb or push add ret ljmp cmovo sbb dec ret mov dec jecxz movsb xor add adc cmp push stos in fsubl sti inc fcoms lods jmp cmp int pop push and jae shlb push insl xchg mov outsl clc (bad) loopne rcrb xchg sti add pop push sub cmpsb add xchg jmp inc in push jae jns sub out out ret sbb pop ficompl adc and mull clc pop jae adc pop jo cmc or pop mov cmp fcompl mov rclb pop adc pop (bad) (bad) mov cld hlt clc sbb insb push or mov icebp cmp xchg pop cld ja inc sub cld lock adc ljmp jbe and xchg fs adc adc bound pusha fsubrl sbbl dec test fildl les ljmp sahf push push push dec enter shrb pop sbb and out inc test leave lret aam lods rolb push sub sbb mov add orb test (bad) and loop xchg mov pop sbb xchg sar pusha xchg ss popa imul add jb inc adc faddl adc aaa loope aas mov jmp test pop push roll ret mov mov pop mov and adc push test or and add adc adc mov mov pop movb cmp data16 clc sub add loope (bad) adc or or push shlb xchg mov mov adc sub add dec out adc jne or mov sbb pop movsl xchg rclb dec push lods mov cwtl je daa jge pop shrl xor aas pop or sub and and or push jmp adc loop fdivs dec cld popa imul imul mov xchg shl lret lea ret or xchg xor sub (bad) sub push ret dec ficoml push sbb push sub dec dec and push xor mov stos rorb xchg push sbb mov and dec mov and push loop dec cld xorl hlt and cmp inc ffreep rclb sub stos mov call (bad) pusha orb rolb stos and sub add lret dec xchg and and jb and lahf lods and into push je push cmp lahf lea mov addr16 int ljmp lock mov int3 (bad) mov push (bad) or addr16 xchg push fldt or and jno push mov imul or fistp lcall (bad) and sub push and gs adc arpl and bound add add push and dec push push mov sub and lea (bad) add or mov ljmp add pop or das cmp andb je sub xchg push (bad) mov push xchg push roll loop jb sbbb mov pusha jmp pushf aas loopne adc sub sarb mov je or sub repz fisttp mov mov sbb dec push xchg mov enter loop mov (bad) dec movb daa push (bad) ss add dec dec popf fs rorb push dec xchg ror (bad) or imul xlat xor cmp rolb loopne movsl jne arpl scas rorl insb dec jmp jae mov or add idivl pusha add xchg inc cmp pusha mov inc insb pusha sub jle xchg and js (bad) or mov pop sbb mov movsb or test dec fmull dec fmuls sub mov jae pop dec mov arpl add js pop mov cwtl or and ror sbb fnstcw in call sub test jae cmp jbe add into jbe pop sub xchg adc adc inc xchg (bad) jmp movsl push mov loope cmpsb jnp rorb sahf cmp enter out ds fsubr inc sub xchg and fidiv pop dec ficoml fsubs rorl dec cwtl loopne (bad) or cmpb push ljmp enter xor push (bad) and data16 fst sbb cmp mov (bad) or fdivp cmp and mov mov dec sbb ret pop movb xchg cmpsb lcall leave scas and xchg and inc and cmp push fwait ret xor and in sbb imul mov repz insl and roll push orb pop and test lea dec and push mov pop stc or test outsb jecxz jle xchg sub sub add lahf xlat ror icebp pop hlt adc or sub pop mov jno iret cmp aad sub fstpt and out cmp (bad) adc popa leave dec sub fcomps mov ficompl fcmovnu xchg fldcw sub shl inc cmp and cld mov imul mov rol jns pusha pusha and jno imul jne pop dec cs adc js sub jmp mov pop pushf fwait mov lds leave push mov push pop adc sbbl add dec or xor (bad) mov shr and inc add mov and jl add xor incl popa ds pop stc add xlat in outsb xchg es inc and (bad) rcrb outsl or (bad) add mov jns test stc push xor fnstcw push push (bad) pop dec pop push sbb inc mov and aaa add pop aaa cwtl adc push mov in pop or (bad) (bad) nop mov daa push nop cli cbtw ret (bad) jl xor shrd jo xchg test dec lcall test xchg mov cmp loope jle mov xchg andl and mov sbb sbb mov out sbb push call jo lcall pop lcall movsl sbb push movsl and dec inc movsb xchg js les xchg sub xorb out xor ret cmp movsl mov lea dec and inc and cmp frstor cmp push jbe fwait clc push dec addr16 test arpl rorb push xorl je sub pop cmp add cs xchg rorb sbb int jg mov jb sub mov (bad) xor sbbl xchg jb push pop dec push or ret inc in xlat mov addr16 cmp test xchg mov jecxz test mov mov sbb dec clc nop push mov sub bound mov or jle and push sbb sbb sbb mov pop fimull jge pop fisub add inc dec jl andl xchg (bad) jecxz push xor inc fs mov daa repnz rorb fwait jnp iret sbb pop jno int vhsubps ret adc jb in movsb adc sbb mov out stos fsts pop lahf adc mov in dec nop xchg pop (bad) lds sbb cli es sbb adc adc (bad) in aad add jne xchg xchg fisttp jo or mov add mov lret ja adc push jo pop mov pop push jnp dec push mov cmp (bad) repz mov sub insb inc and adc and ss fist xchg mov pop sbb call inc outsl or push pop or pop jae adc and fcmovb (bad) (bad) js fldl2t dec jne shrb icebp xor cs adc or pop in or push cltd xchg pop mov jbe xchg stos mov cmp addl sub cmpl mov outsl je and clc icebp mov or sbb add pop fstpl mov pop push test pop sbb popa or stos or pusha mov bound mov lret xor inc sub jl xor imul fsub push lods sar and xchg sbb les add xchg push pop scas sub add mov shrl dec (bad) or inc (bad) jp dec push movsl push xchg shrb stos sbb pop inc mov loope dec inc (bad) icebp add or ret xchg adc jb or dec fildl aas lret int3 icebp dec add add jno inc inc (bad) pusha call jns out in imul sti mov movb jge (bad) mov aas mov rcll push xchg stos orb push push push add adc add and clc (bad) das or or cmpl andb and ret dec loop aam rcl jo cmpl xchg sbb or adc lock or xchg sub xchg cmpsb mov pushf inc mov hlt sub push mov jne inc xchg and pushf pushf sbb cmp add enter sbb adc xchg out loopne and xchg sub cmp push or push sbb daa inc jbe mov cmp and pcmpgtd loope xor jbe lods movsl dec jl xchg cmp cs rol js and sbb cmp (bad) loopne pop jp add lds jne addr16 jle xor or fwait call cld pop pop adc mov xchg sbb jl pop inc fcmovnu stos sahf adc xchg fiadd jne xor cmp es xor stc jmp push (bad) fisttp xor icebp push mov movsl (bad) or mov push mov cs shr mov or sbb or push in rcrl fstpt push fild out adc inc pop adc pop jecxz and or cmp clc adc and sub sbb sbb lea or push inc xor inc and xchg pop pushf es pop call adc mov (bad) adc sub loopne gs data16 daa aaa inc out fsts cwtl andl push jmp mov int xor sub in ja inc jge and jb or sbb insl mov push insb stc sbb push or (bad) and jns pusha jo add lock add adc xor mov mov jo movb adcl lock sbb ret mov sti les adc fistl and bound add xchg jb movsb das fst cli dec ja jae or or dec aas and push and dec inc cmpb fild lods push ja jle inc sbb loope aas xor sub sbb mov jae shlb clc adc xor pushf sub pushf cli sbbb and movsl jge push fs dec cmp pusha jmp daa sbb add xor inc sahf rcr sti jp inc ljmp faddl inc inc sbb test cli mov das mov jmp xchg sub dec lahf loopne pop xor pop pop clc dec inc pop fidivrl sub adc inc sahf mov test test imul inc (bad) adc or cmc shrl mov ret (bad) lds adc adc or test add push mov push pop or jno inc les and jge jle jo mov sub les addr16 jecxz dec and mov popf dec cmp fidivr dec xchg and aad mov rcl insl mov sbb in mov sub shlb mov pop and orl dec and adc mov push push xchg inc loope aam (bad) or mov les inc call mov pop fcoms adc inc fcoms cmpsb or push lock or push insb jge stc sub addr16 pop movsb out ffree sub or hlt divl fs xor test push and add or sub dec push pop and (bad) dec mov (bad) les or push sub sub comiss pop (bad) lret xchg jo popf mov dec xor xchg lgs je test sub (bad) mov test mov mov nop mov mov sub jbe xchg ss iret dec (bad) js cltd jnp rcrb (bad) int3 pop or add cmp inc js inc jb scas pop fildll xor das push push xor inc test out push imul test jne mov adc jmp pop push or imul xchg push pop nop leave adc fsubrl andl or push dec mov mov lahf test jnp lret ret cmp not es scas orl daa loope movsl pop fcoml es mov mov lahf leave (bad) (bad) or lods imul xor scas inc test add push sbb test aas iret lahf adc rorb xor sub push jbe arpl xchg sbb sbb orl pop adc add out adc and dec or push xchg aaa or pop sub add mov popa and adc xchg fadds mov and dec mov xor dec or sub out test popf mov xor popa push or adc push xor rolb stc inc add and cmp dec xor fs adc leave push add orb and lds mov adc enter repz andl xor out je (bad) int inc lret pop cmp sbb pop push lods ret cmpsl movsb rcll scas xor movsb jl xor push pop push mov or js push mov mov push xor lock mov push and ja mov imul push cmp (bad) push or mov mov cmp sbb push or inc inc push mov call loope add dec cs popa xchg xchg je (bad) xchg aaa cmp inc test mov lock push fldt push pop add add or test or enter xchg andb nop shrb arpl mov or or mov outsb jmp add push fidivr or add inc sub loopne xchg ljmp in jmp (bad) inc xadd add js shrl add je lahf cmp sub fs add sub cmp rcll sub adc sub rorl inc xchg pusha mov cmp jecxz gs das inc mov clc pop (bad) repnz ss ret sub sub jl sub dec push and push or or pop push pop add or xchg mov aam imul fld std ss xor inc cmp push pop je,pt lea pop sbb pop jb pop ret pop hlt repz push in add adc outsb adc (bad) inc inc add push add (bad) insb mov xor js xchg push push xchg iret mov inc mov mov cmc and add xor loopne or test mov dec clc in xor clc and jne mov jno movb mov (bad) jae cmp and push fnstcw adc mov repz mov add loop cmp or xchg push xchg and inc xor sbb fdivl jne and fistpll out or xor add stos dec aad mov sbb cli sbb xchg je or mov inc mov sbb sub push push outsl mov (bad) das add loopne inc test pop cwtl loopne call lock add adc or xchg pusha cmc inc pop pushf out subl jge xor pop shrl adcl into sbb adc and or sub inc fnstcw (bad) xor jl pushf int adc sbb ret or xchg inc ds dec out sbb arpl imul popf sti adc jmp mov pop mov arpl mov jge mov test add push icebp fmuls xchg aaa insl sub sti add inc hlt in movl xchg (bad) and sbb and inc scas ljmp cs mov lahf insl mov mov jl mov pop out add inc test adc add mov sbb or and fwait dec lock push out jns lret jmp sti sahf xlat xchg sti fmull popf mull orl jmp xlat lds mov scas mov cmc pop daa outsb out int inc mov fistpll xlat std or xlat aaa lods addr16 cld xlat (bad) daa lret popa hlt or out inc fcmovu lock sarb cmpsl std adc pop ret sub enter lods dec and or xor adc test add loope xor cmp mov push cmc mov xchg xor hlt into pop mov add icebp sub stos (bad) int mov xor sbb push cmp hlt fcmovu clc lahf rorl lock add pop lods jne mov cs xor add sbb adc push (bad) cli mov adc sub in lcall icebp pop (bad) xor or ficoml test xlat adc inc xchg nop mov sbb pop push sbb jnp jge aaa cmpsb inc push push nopl adc mov cs cltd mov add mov adc fildl pop subl or lods or xor gs arpl loope mov xor mov cmp je inc js gs xchg dec mov loope int3 jecxz xchg adc scas nop jge xchg das lock adcl add jo pusha pop xchg loope stos test jnp sub pop test cmp jbe arpl test fiadd dec test imul mov gs add jnp mov dec push push cmp fmuls (bad) in push mov inc jae and sub jb (bad) pusha adc idivl call bnd orl addr16 mov dec sbb add movswl daa cmp push mov xchg ljmp js xor add test pop pop inc push ss jmp xor jle push mov push push sub mov inc arpl adc sbb shl xchg mov push imul fcoml add fs inc ja xor sbb sbb push cmp xlat jo push mov push add push fsubs loop mov cwtl or cmp and add adc sub fsts push xchg out inc and inc ret and ljmp inc jmp sub test inc ret adc and lods cmc in mov xchg in aad sub fcomp jl jo int3 and jecxz sub ret rcll jg fbld add in or mov inc loopne shl adc mov xorb mov mov jge jg int3 lock inc xor xchg cmp inc push push push mov adc insl xchg jnp push xchg test insl or xchg mov insb stos dec insl loop inc jmp xchg lret add lea lock lahf xchg mov nop mov sbb or push in mov call insb out mov in add hlt xchg cmpsb xor sbb adc add cmp cmp push adc movsl cmp jo inc (bad) loopne pop cmp add insb mov pop cmp pop outsl mov sub dec add pop xchg jp sbb jb popa cmp es sbb adc or xchg and and pop jl sub cmp inc push loope jne rcll (bad) dec ret cmp mov sahf icebp adc mov enter jmp mov jmp repz aam jecxz imul lods repz sub push lcall push out xchg jbe stc mov std int3 sarl jmp imul pop and jb bnd add xor pushf adcl mov pop enter dec ret push (bad) in (bad) adc and push or inc mov or insl mov xchg js frstor or sbb (bad) sbb and imul jp add mov repz mov fistp push int imul out popf mov imull or inc data16 jmp testl insl mov aam sub pop arpl pop push (bad) pop movsl shrl or or mov adc inc dec test rcll adc and sbb movsl dec sbb or pop add jae cmp xor sbb adc mov loopne cmp aaa jp dec test add adc cwtl bound aam push and pop adc xor fnstcw add icebp stos gs xor sbb clc push or push push xchg cmp cmpsl sbb push push or push rolb pop push dec sbb mov ss (bad) call (bad) cmp frstor or mov push rclb sbb adc xchg or mov inc imul xchg cs lcall inc or movsb movsb mov dec mov inc movsl cmp mov mov adc and add and mov add fiadd add rolb mov mov imul sub loope xor push out dec int je pop inc or inc xchg add sbb mov dec inc cmp or mov dec icebp int3 xor pop (bad) push mov jge xor pop add pop and sbb faddl repnz les push push jne mov mov xor inc aaa addr16 (bad) (bad) mov jmp cmp jnp lret xchg test faddl (bad) push push push cmc mov and or pop out in jle jge fadds cmp lret inc inc jae jge cwtl add test cld pop and add cmp nop mov jg inc pop dec mov xor mov movsb mov out popa push test int mov push push jb push jns and mov inc cmp mov xchg movsl adc (bad) pop push movsl jbe out inc and jge insb adc xor cld or (bad) shr and lahf adc sub and lea inc adc add and add mov lock inc xchg fs decl clc mov incl sub incl adc sub lret (bad) push xorb dec popa lds (bad) popa testb je adc imul rorl adc int pop ret loop mov aaa mov popa (bad) mov push sti mov jne inc test popf and xlat xlat lret test (bad) add push jno or xchg adc lods jae xchg jb adc ljmp (bad) mov movsl jl cli test push fist movsb ffreep sti enter inc xchg stc in dec mov arpl pop inc add xor dec or scas aad les mov sarl rclb mov add dec jbe daa and push mov push or sub dec fdivs add mov mov je add fcomps mov cwtl (bad) push mov cmp or cwtl dec adc or ds or push arpl idivl cmovnp in mov push push bound fcomps cmp add jne xchg jmp jbe lods (bad) jg push inc mov lods sbb stos fs xchg nop jne push xchg mov sbb mov add test popa xor rorb mov orl pushf add (bad) gs arpl sarb mov das sub sbb sbbl xchg subl xor xor sbb pop mov outsl jmp loop mov (bad) dec pop push mov dec and dec test inc cmp addl popf pop roll push add mov jns mov int3 in (bad) pop inc std lea jb xor mov push jb dec cmp jo adc fmuls pop ret cli and and lea cmp out test dec or xchg popf inc sub xchg test stos stos jno (bad) mov mov sbb xchg and dec xchg (bad) and aam mov les pusha and xor adc cmp or (bad) add sub int test push xor xchg xlat out xor (bad) jne jnp adc mov enter xor cmp adc or jo and int popf dec ret add sub sub add mov jne push sub or adc push sbb xor xor mov mov push aaa inc mov xor add push inc push cmpsb test loopne les sbb xor or or (bad) add lds in popf inc push and ret or stos cmp inc aam stc out js add push mov mov das sbb inc add test and sarb jmp push xchg mov mov or push cltd sbb mul or xchg or pop mov ret fbld cmp sbb repz pop mov mov push ret dec aam out cmp push push dec les or xor or or xchg push cmp scas test push or test or push jp imul xchg or add je and pushf call daa mov fwait (bad) jb popa das inc cmp fiaddl push mov aam cltd pop cmp repz cwtl push stos test cmp orb cli sub sub add repz inc or aam (bad) pop xchg mov pusha sbb outsb fnsave push mov push xchg fcmovu sub xchg data16 mov jecxz push fbld mov loopne sub in jno push cmp mov loop,pt and adc dec lock lcall cmc jo dec inc dec adc or call cmp push or add and xor fbstp push xchg cmp pop dec add mov lds pop or and (bad) push mov idivl pop sbb pop pusha (bad) jl xor mov addl and push lret cmp fdivl push jb and sub sbb and clc mov pushf les sahf fdivrs fsubrl or mov ret add scas sbb mov xor dec pop add and add daa jae xor inc sub dec repz sbb push dec bound push mov mov push xchg pop lahf sbb and lods fisubl jo aas or mov xchg mov sahf cltd dec mov and pop fnop inc shl ljmp out xor inc or push adcb add dec fmuls inc mov sub popf test lea pop and jo and xchg call loopne test in or xor loope pop in out imul popf out lea xchg hlt lret push and or push call loopne test inc in xchg mov or je jo xlat pop enter arpl shl ja cs xchg lock insb rol shll xchg mov (bad) leave in out push inc shrl (bad) int3 outsb inc sbb test xchg or add js push mov push ss cmp lods jne addl into jo fdivr hlt lock push dec jp or cmp jbe and iret adc sbb enter inc aaa enter mov add nop jnp test sub adc cltd push push jmp fxam into jne adc mov cmp mov cltd test mov sub pop das sti jb sbb clc clc inc or test mov add enter in xor adc and xchg sbb cmp cmp inc xchg mov adc mov pop pushf addr16 xor mov pushf inc or inc adc roll inc nop sbbb pop mov inc dec jp leave xorb dec rorb pusha and ss cmp or out mov pop dec mov pushf add sub adc inc (bad) mov movsl mov scas leave push call scas ret cmc mov lods xchg dec aas lcall xchg lret ror lret xchg xlat frstpm(287 adc xchg inc xchg ljmp xchg ret sbb mov mov xlat adc mov mov dec test mov fbld xchg in std cltd scas cmpsl insb adc sbb nop sbb leave aam pop mov xor add dec jb dec negb pop test int cld test cmp jp (bad) adc cli call sbb inc test (bad) or add mov fistp or sub cmp in and insl adc jne inc mov imul in cmp mov xchg xchg xchg push push push add xchg xor jbe pop dec push mov nop jecxz mov (bad) fstps test xlat orl mov repz or mov and adc aad sahf orb or stos inc aad pop sbbb insb fwait cs dec sbb mov pushf push (bad) mov test xor cwtl inc xchg mov shlb push pop and add loop cmpsl pop lcall dec mov fdivr shrb jae lret pop sbb sbb loop add subb or jl scas pop int clc xchg fs rcr mov sbb repz add or (bad) rep pop pop cltd add jns test sub and mov sub adc mov push aas add rolb fcoml movsl cmp adc (bad) les push push orps jecxz mov push cwtl or jbe dec add daa movlps xor mov xchg loop (bad) repnz xor loopne dec rcr ss movb pop (bad) jne jne add (bad) (bad) maskmovq testl test and js add push sbb mov mov inc add test (bad) (bad) in inc cmp sti data16 xor add les jns enter adc sarl and aas sbb pop or es dec xchg adc popa or push adc push divl out xchg andb xor push lret aaa xor les rolb or xor xchg xlat (bad) sbb or int scas out and dec or pop pop (bad) sbb sbb inc push pop sbb in inc fnstcw or roll clc add orl xor leave jno push pushf mov push jno (bad) lock dec sarb into jbe hlt icebp lret push into xor sbb bswap out test in arpl mov jle outsl push pop sarb inc mov add leave add not pushf push pop (bad) (bad) les lea cmpsl pop ja fldl hlt imul (bad) repnz xchg dec xor push lea xlat test imul inc stos stos call adc das adc xor call out inc cmp pop fldl rcrl mov lea shl jl sbb insl cmp divb mov sbb cmp shrb divb mov mov dec dec adc movsb xchg push jb xor xor int adc aaa lahf mov enter cmpsl and dec push sbb sbb and sbbl dec das shrl dec or aaa test sub add nop add xor or dec stos adc push sbb push inc ja adc outsl and mull and test mov and or loopne adc cmp dec enter fmuls xchg ds adc repnz or lret dec pop aas dec sbb (bad) (bad) mov imul inc cmpsl adc pop add orl in daa inc adc addr16 mov loope cmp movsl jecxz cmp jnp and sbb loopne into rcrb push out pop lock cmp xor mov mov xchg test ss daa mov jns cmp enter sti test and cmp sbb sbb aas loopne or adc pop pop out sub rclb imul or mov pop loopne into int popa add pop das fnstsw cs call adc enter push je sahf sarl mov inc sbb shlb inc rcrb jbe roll add inc adc pop pop mov push sarb pop and or sub mov xchg ljmp movsb or in jnp lahf xchg lods pop ret xchg les sub fildl mov scas and mov in jnp push inc in gs add paddsb loope mov mov pop icebp sbb push jns lret sbb outsb or adc sbb popa adc or dec sub sub (bad) js dec xchg or loop lods pop (bad) inc jne xchg outsl pusha xor es or xchg adc xchg jo jle mov xchg (bad) test jne jmp pop add pusha jno push xor insl jne es mov and push sarl nop push push jmp loopne pop adc mov cmpb jne lea push (bad) arpl adc lds or enter inc movsb in sub dec adc xchg jae jp inc sub hlt mov int3 int3 push add pop sahf cli movsb add loopne mov (bad) loop es and add mov dec jg inc and sbb mov fsubs push add pop pop jp inc mov mov dec hlt lock dec je add (bad) adc or xor dec sbb and xor adc mov push (bad) sbb mov in orb jecxz (bad) jae push ret lock cmp ja cmpsb mov cld imul xor sub mull pop js sbb loopne add sbb add pop in ret sbb or sahf aaa add loopne loop jnp rorb lea loopne or adc jbe fstl test adc bt ret rcr roll adc xchg mov sbb pop stos into ret nop mov add daa dec repnz pop push mov inc xor lock pop mov xchg repnz push jbe sbb xor add lock mov mov and jl fwait andb pusha in movsl aaa cmp push and mov popa sbb adc scas dec adc push fild push lea add and push or test bound jo cwtl inc outsb dec xor push pusha es (bad) pop scas mov lcall test xorb mov adcb xchg jle dec cmp jle mov fstl bound mov jecxz push jg jl lea popa jmp addb mov pop push xor jg pop xor mov dec or add mulb pop testl insb mov jmp movb push xor test add or or std ret dec push adc pop xor lcall adc sub lock push dec pop and push nop scas loope es or add fsub rcr and xorl xchg adc push mov dec outsb mov dec inc repnz mov fildl movsl mov loop sub or mov test jns clc push push dec sbb pop popa orl andl jge enter (bad) dec sbb add icebp dec mov dec add xchg adc jbe ss jp mov inc fimull nop rclb inc mov cmp lea push loope adc lock movsl sbb sub clc pop sub mul push adc push add rclb and push fnstcw cmc xchg dec jne add and jle push xlat xchg pushf sub sub jl ret incl roll inc push push pop sbb in clc lock fsub mov dec or mov push inc inc test (bad) ss push adc pop add sub add push push lock sbb orl in jmp and push add or pop mov xchg cmp or dec adc sub inc add pop add xor cmp and cmpsl add fisub mov lahf add and pop mov xorl fiaddl pop sbb inc mov ret dec inc add rcrl push push inc add adc test pop sbb loope in adc fadd test pop in cs in mov (bad) adc mov mov negl es jno push xchg xlat sbb push or add (bad) xor sub add ret mov cld roll sub jo aad sub push mov xchg fdivs inc aam mov mov and (bad) iret add add aas add jl push hlt mov clc add adc je inc pop and stc jo imul xchg mov dec add popf and mov pop pushf (bad) hlt (bad) lock or push aam loopne xor ret sti insb add in xlat movsl push mov aas push push pop cmp push roll pop dec mov (bad) push inc gs push repz and pop and push adc addb mov dec cmp inc mov (bad) push je dec je dec jne repnz jmp adcb jge or das out cmc inc rol (bad) add (bad) sub xchg loop jp add es cmp dec pop daa add mov push (bad) sti mov inc pop popa and and nop inc pop inc pop (bad) gs inc scas add call sub pop out inc adc test aam roll fcmove and imul lahf sub push inc sbb idivl popa jmp adc outsl xor nop and pop or or std leave add movb pop ret shll pop or leave xchg xchg daa xchg movsb ret in or cmpb adc push sbb pusha dec push es adc ja cmpsl sbb cmp inc xchg sbb xchg push push dec dec add mov mov or sti dec and inc popf fildll imul mov lret dec or (bad) inc xor aas jge and xchg push pop aaa mov push lock xchg rorb push loopne xlat push (bad) in (bad) xlat lcall cmp jecxz mov icebp inc je inc in jo xor pop cli push out scas xchg stc pop aam push lahf lcall scas add and sbb mov mov loope jmp adc sbb mov (bad) in pop pop and sbb adc sub dec jne sbb arpl test and mov (bad) dec dec sbb fldl popa sub mov mov and or cmp dec call mov stos inc aam jae test jb push mov iret scas rolb hlt sub push mov lods jle add mov jo adc mov cmp movhps cmovns mov test hlt xchg dec jl add push or outsl sub stc cmpsl pop mov push push rcl or mov sub and out mov dec imul (bad) inc call pop cmc call push (bad) mov pop test inc inc or xlat adc lret sbb loope pop xor in jmp or pop add jl outsb push rcrl adc sub scas imul xchg popf and inc xlat imul and jo push add mov icebp cmp push ja inc outsl stos pop mov add je jne or mov cmp lods adc je out push add adc pop mov mov and mov push std or and adc and bound push push add xchg jbe insb adc and mov mov clc (bad) jl mov mov add jecxz mov sub cmp mov push xor sbb push sahf jl movsb add (bad) imul inc frstor xor (bad) mul mov out inc loope loop enter add or mov add adc cmp aas xor xchg test adc pop mov (bad) push lock mov adc cmc mov fs mov add mov divl xchg xor clc cmc add and cs fwait jecxz (bad) lea add roll adc jnp sbb icebp push inc fiaddl lcall xchg add push fmull sbb (bad) nop dec loop dec (bad) inc in test jns lock inc mov loopne mov mov pusha mov dec mov loopne icebp (bad) jb xor imul xchg ret add and lret ror mov sahf dec addl lret mov add stos dec fs or mov inc pop jge repnz outsb bswap popf adc lret adc xor movsb sbbl clc push and sub mov mov or daa sbb dec inc add add ret and clc pusha jae jmp test stc jg test aaa leave jae pop cmp and sbb subb dec mov mov loopne or push mov and push cld add jecxz cmp cmp mov rolb or cltd adc pop (bad) cld test lds add mov ret nop dec movsb leave xchg ds shl hlt in cli clc cltd xchg test lcall cmpsb scas push xor push cmp fwait push mov push jle add inc inc mov cmp jne repz sub repz mov daa shlb dec and mov nop cld rorl pop push test pushf xor cmp fsubrl cmp pop sbb add pop and pop dec push sub sub es xchg rorb xchg loope inc call ret stos jp pop sbb das iret sub mov loopne repnz clc imul jl dec clc xchg mov shlb or (bad) jo pop loopne jno into pop pop fs dec pop aad shl dec cmp mov mov inc adc pavgb lret cwtl es and lds jno and add mov ret aad cmp fistp push jo pop or inc rclb jno jns dec loop sbb cld and adc add sbb ljmp and inc pop xor jp xor mov out push and push mov sarb jl pop cmpb je adc aam adc inc xor xor aam movsb inc cmp test sub rclb dec jno shlb pop punpckhdq dec sub movsl push es xchg add rorl xchg add int3 shrb or lods leave mov dec cmp std adc mov mov xchg jmp pop mov lock cmp sbb adc or roll and dec sarl xchg pop lods mov das lock out (bad) xchg inc sbb inc test mov cmc sbb cmp jb dec or clc shll jb xor push jns ss mov rorb mov lcall ficompl sub sbb arpl jmp push sbb repz push xor into call pop roll mov movsl add mov adc movups fsubl mov dec test cmp mov in dec sbb adc jbe add and mov enter out add sti or lret and sub or iret lock insb adc ret sub xor xchg jb leave pop jo mov cmp ret push je mov inc int3 aad repz sbb add adc lock pop adc add and or rcl and lcall mov push subb add cli push pusha fdivs sub fistpll sbb lcall daa fistp rcrb xchg or ficom cmp push sbb xlat rcrl dec sti imul adc add add add push push fimul cmp (bad) push test cltd ret arpl mov iret rorb mov add or cltd dec jb mov mov dec cwtl cld mov push mov pop pop mov inc (bad) je jb xlat les int3 nop mov in add adc ret bound cmc inc jno ds fs dec ror je ljmp push jmp cmp add adc rcll and or sub push push fidivl sbb sbb psadbw and dec inc adc and jecxz xchg js xor xorl ds hlt cwtl or pop xor xchg add mov pop jae jo adcl loopne add push data16 cmpl shrl pop fildl fimul add lock and in leave add pop orb jp sbb inc mov add bnd lea cltd ljmp rorl arpl leave sbbb mov add out enter pusha xor adc inc loope adc (bad) lods mov fnop and mov sub mov pop xor xorl or iret or addl mov mov and (bad) lock das push jne xchg mov mov jecxz fstl ret adc in pop fmulp mov sbb and push push push xor add xchg popa jns sbb cmpl push mov push lock push add push push jmp push loopne test cltd insb add mov pop (bad) jo or or xor cmp in add les push data16 fwait sbb adc adc dec inc sbb mov mov mov mov xor mov jg adc (bad) stos push mov pop jne movsl les cld push dec (bad) loopne pusha adc cmp cs sub adc data16 or xor lret pusha sbb sarb sub lds testb or inc xor test mov aaa pop int3 jge add rcll jp inc pusha shll adc cld loopne mov pop xor insb popa or fcomp dec xlat shr fsubr ss mov in dec cmpl les in cmp inc pop add lret or clc jne mov lods fsqrt aas cmp or xor sub ljmp xor push push clc bound push iret hlt cmp loopne notb sbb dec loopne fdivrs fs call mov add dec loopne mov int3 cld bound or dec das jp add je sbb into pop push adc xchg or notl and ss push incl sub movsl xchg cmpl je insl jecxz xor mov xchg pop jmp das or or mov sub cltd and push fs add or push inc sub es mov sub or in or mov mov cmp mov pusha sub adc cmp and sub or imul test mov leave cwtl mov pusha pusha lds and inc addb je inc cmpsb sbb mov (bad) outsl js and pop addb push dec sbb xchg mov dec in mov cmp outsl or jle push leave pop ret add dec or inc daa int3 dec enter push xchg jbe push pusha test add scas idivb outsb iret cwtl mov inc mov fs ret add das lods add adc push cmp xchg imul iret fisubl mov outsb or ret rclb rcrl sub dec or adc mov mov jae add dec xchg repz push pop inc adc jle add add push xchg mov adc pop mov out rcll mov xor inc xchg mov out pop int adc pop jb adc xchg and addr16 fldl or pusha rcll lods out cmp in imul xor imul jno decl push add test incl adc inc mov xor outsl movsl adc push or loopne push add cmp dec movsl (bad) dec in or push xor inc inc js sbb outsb xor pop mov and fistpl nop xchg xchg pop lock add out ljmp dec jp inc pop mov roll cmp sub push xchg lods push mov push adcl push add insb and inc rolb xor pop jno push aas xchg add add xchg insb xchg pushf mov fisttp (bad) hlt inc lods add loopne lcall pop add pop stos xchg popf into pop push mov mov sub or cld inc inc mov in lea das pusha loopne lcall movsl lret cmp cmp stos cmp (bad) sub mov arpl push lods add sahf clc push enter std push divl (bad) out imul jl arpl jbe divb enter push pop sahf mov pop add lock fadd imul adc jp aam fabs faddl add sub jne popa and or in (bad) push xor inc mull add hlt add pusha addb add inc test shll xor icebp cmp es push int3 ja push iret xor nop and out inc movb les pop pushf cmp adc pop add outsb int sbb pop pop cmp into xor sbb jo fidivrl inc add dec mov fnop sub pop xchg cmp call jl loope (bad) mov ret jo or sbb xor ja arpl mov (bad) xor xchg imul xchg dec add sub jmp insl sbb mov dec mov shrl loop mov add andl (bad) mov movb fnsave sub pop ffreep mov inc and mov aas adc inc sbb addl dec dec jl inc push push mov push sbb add add test loope ret test lock js dec movsb adc adc hlt scas sub inc xor mov sub inc cmpsb dec push mov push rol add rclb fsubs add cmpsb lea and pop ret push sub enter adc loopne outsb dec std clc or jle xor add jle in pop faddl lea push mov cmpl rorb inc dec (bad) fild mov dec and adc divb mov scas mov call adc push call fcoml das or sub inc icebp and roll and mov jbe mov cmp cmpsl into popa (bad) sbb xor jne jge (bad) or dec loopne bound mov adc or sbb dec adc and cmp adc ss add mov push je in adc mov mov cmp jl sbb or ficompl pop jecxz sub pop push rcll or cmpsb fs push test xor rcrb lock daa push ret xchg lea lcall loopne add push lock adc mov stos or in les push es mov and and sbb add leave push (bad) mov sarb sbb rolb sbb mov lcall or xchg adcb push sub or stos fs push mov add xchg les cli out pop dec jge xorb shlb push mov fadds lds mov xor ficoml rorl rcl push pop mov cmp sub (bad) mov iret in inc sbb scas mov insb loop mov nop push cltd js jp xor sbb mov out lods cmp xchg (bad) and jl fcomp or sbb shr (bad) dec push fcoms (bad) adc xor lret cmp jle gs in mov call loope push pop repnz loopne in and and mov lret cmp push lock inc add jne mov clc pop or aas xor pop daa shrb les fs les push pusha push lods mov dec pusha dec jmp cli nop sub and jl (bad) ret leave add add push aam ret dec iret mov sti or adc js or add add sub leave ret rclb int jge test sbb mov orl fnstsw in xchg push shlb adc adc (bad) leave sbb inc push ds in pushf inc mov push and mov push aad mov cmp cmp xor int rorl std clc enter mov arpl push fcompl adc sub cmp or popa and mov jmp push enter inc inc (bad) lds sub adc repz adc stos test sarb cwtl add sbbl add lods xor mov movsb push adc cmp jmp or nop pop sbb xor rorb sbb out dec pop sub pop push sbb lock orb jne adc jo dec mov mov sbb mov shrb mov xchg shlb fsubrs sbb add mov mov in xchg dec mov je lcall mov repnz add cltd cmc jmp xchg dec leave and sub push mov outsb or add loopne call push dec and sub xor lock or ja movsb loopne cmp push int3 and push js or test stos fiaddl leave adc mov cmp push fbld test mov add pop and or popa roll pop and sbb nop xchg xlat mov (bad) pop xor inc mov sub jo mov arpl mov mov movsb ja dec dec dec pop push cmp fbld and mov ret test or xchg push addr16 mov jl out (bad) shr (bad) lret cmpsb adc sbb insb adc sub rorb in adcl ss cmp je xchg cmp push or adc test mov xor out sbb mov add cmc push adcl dec rclb sub mov test mov pop adc sbb dec fmul xor sbb sbb div xor dec adc jmp fstp inc dec mov pop pop add jle cmp pusha and je fcomps cli dec lock add outsb dec shr mov adc dec jne mov cli or add cmp pushf dec add xor push xor dec mov scas fiadd dec cmpsb push jmp enter jp les cmp jle sub lcall pop mov jb,pn push in push insb xchg fwait and daa or push dec ret (bad) jl cltd xchg sbb fsubl pop pop nop imul inc inc je cmp test pop rolb dec loopne icebp incl loop cmpb fwait mov dec and mov fs mov sbb xlat mov inc sbb rolb inc mov movsw cmpsl int push test mov jecxz xchg popl mov pop mov test sub imul and or fwait dec cwtl push js add jl cld scas loope mov mov add lret clc lcall lods sbb outsb test push adc icebp lahf scas dec nop cmpl mov adc jne mov fidiv adc call in int3 into cmpb and sub faddl jecxz mov in fmuls xchg cmp insl push sbb ret pop scas imulb lods dec lahf mov (bad) das lret push adc pop xchg fnstenv sarl es sub add dec rclb bound jo mov adcb lds sbb dec repz divl loopne jnp xchg or ret sub or add cmp lock pop mov sub clc js inc xchg decl movsb pshufw dec ljmp in push lret nop add leave lea loope inc clc das (bad) ja add dec mov cmpl testb adc (bad) pop lock push pop inc adc lret movsb mov rorb sub sub pop outsb and dec push mov add mov xchg fisubl add sahf sub ret cmpsb rcrl jo testb rorb add pop or jle pop outsl pop xorl popf sub jne mov mov iret daa inc dec adc test sub dec jge xor jns sub data16 pop and (bad) pop sarb xchg and add pop ds lock sbb jae jbe pop sub inc dec jb jmp xchg jmp icebp jmp popf pop addl xchg push mov inc add mov add and sbbb push jns,pn sub inc sub mov and inc or xor add addr16 scas push sub xor stos mov push mov xor inc cmp mov lea xchg push jb add mov and jo inc cmp lcall in dec cwtl ss fwait push movsl adc or fmulp pop rcrl jmp sbb adc adc (bad) push adcl mov mov (bad) ljmp nop jge mov rol push cmp dec jo adc shlb add popa adc push jne cmp (bad) push outsb jmp adc jo add mov cwtl addl pop inc rcll icebp inc out pusha sti pop dec fstpl lods cmp cmp nop sub add adc ret fstp push push call sub call (bad) xlat push repnz cmp pop xor scas sbb pop or sbb pop adc dec or lcall add xor cmpsb push cltd ret daa icebp add mov mov sub push lods adcl and add pop push push adc pop or leave ljmp arpl pop inc or daa push mov cld push pop and inc dec push sbb lock shlb addl mov sbb daa add mov or sbb js lock (bad) cmp mov push sub or or jne repz (bad) jl les test jnp xchg imul adc or add xlat push adc adc add dec sti nop sub push leave cmp or das add dec enter flds sbb mov sbb loop les dec sbb ljmp mov es or fdivl pop mov mov cli int3 cltd lock js jmp add nop cmpl mov inc (bad) (bad) jno or jmp and cmp arpl pop and and and and mov pop or and or or lea mov jmp sbb scas xor sub mov dec pusha xchg pop xchg hlt orl lret dec push lods add or adc cmpl cltd cld pushf je ficom add dec push mov ja clc add fstpt xchg lret fbld dec sbb lea jb mov or sarb fnstsw test inc pop and popf push dec add push inc pop sub push inc add insl push pop es pop ljmp inc movsl lea or push lahf mov movb bnd shl hlt call pop int3 lods pop or adc adc mov das sub lcall jo repnz fsin xchg out shlb jo mov mov imull lods jne jl bound insb and push dec or xchg and cltd idiv lock jge xchg add xor pop call les movsb mov sbb (bad) and and xor adc (bad) movsb rcrb jl mov int3 bnd xchg or popa lock ja js jp outsb lea mov test mov and xchg js loope popf add (bad) adc imul and push mov pop movsl cld xchg dec mov xor (bad) jns dec inc xor cmpsb (bad) jg hlt sbb cmp sarb or push popa sub aad nop rcrb push rolb call adc inc or add or dec loopne dec testl loope cwtl xor mov xchg mov in mov fild push dec movl lock pop arpl push dec out mov sbb sub pop rolb lods movsl dec inc aam or add (bad) add shr mov repz xchg adc inc push ret or sub (bad) push jl xor mov mov cltd mov push sbb roll ret add fs sbb jo imul in dec cmpsb pop pop sbb inc pop adc dec sbb test call xor loopne stos enter inc out aad fcoml subb xor (bad) cmpl add popa imul dec data16 inc xor iret jo and dec mov push or cs rcl or incl push cmp psubusb lods adc ret fdiv sub loopnew jne xchg int dec movsl nop dec push push stc jl loopne (bad) adc mov movsb push mov add and add jge cmpb or dec sar xchg jb mov movl gs jne lock add les pop mov test pop add push test shlb add jb xor dec fsts push cwtl aaa addr16 imul iret adc inc mov movsb xor pop sbb sbb bound pop dec add cld jnp inc sub add jb fsts stos and loop mov jl sbb add mov cli (bad) icebp pop cmc ret inc xor imull mov mov inc mov cmp push daa pop inc pop lods mov icebp mov lock nop rcll imul sbb push sub inc pop push jne adc nop cld ljmp shrb (bad) fidivl clc fisubl add fmull cs adc mov mov push repnz ret extrq mov sbb lock (bad) int3 mov clc shlb sub enter add fild (bad) push pop add xor pop ret inc repz jo subl inc xor cmp dec je (bad) add into push pop int3 pop sub mov fidiv xchg imul idivb sbbl mov scas pop mov add push call dec jg add loopne push xchg cmp dec iret or iret movsb jecxz mov daa jb outsb push push insl dec and adc adc ja dec cld pavgb mov mov (bad) jge scas dec mov (bad) sub fcoml sub mov inc mov xor and push int3 loop mov loopne lea dec mov into xchg fisub pop orl aaa pusha and and and sbb add test out mov mov inc push push mull add in mov or inc jae xor mov das test push (bad) movb ret dec les (bad) inc jb xor hlt test push nop enter xor andl xor inc push adc add push or xchg add push imul lods nop mov clc push push xchg mov sbb pop add mov enter push popl outsl mov scas (bad) cmpsb lahf lock pop sub add and dec dec dec pop sub add leave mov lea clc push xchg cmpsb test and pusha fsub inc or stos enter in in pusha pop dec test int3 lea mov fldenv jo cltd push mov add pop adc inc loopne xor add adc call push gs hlt rclb sbb push aam xor stos into test popa pop iret cmc mov bound lcall push or stc sbb lret jnp dec inc cmc cmp sbb add sti xchg mov ret pop sbb outsb sbb mov (bad) xor jp push rolb dec rorb pusha xchg inc test add mov aam loope add adc out pop add cmp jle or pop rorb push in jp enter sbb imul movsb aaa or or (bad) aaa push sub xchg adc and adc xchg adc gs mov push pop popf out sbb pop sbb mov sbb xor xor cmpsb push push push add rolb xchg orl jne pop mov dec sub mov in mov mov sbb iret pop leave inc or push cmp mov xor jg aaa sub cld inc or dec leave cld ret (bad) jecxz or (bad) and movsb cwtl (bad) adc xchg cmp inc das mov pop leave or push pop xor pop or sub mov or sbb test fistpl pop or inc mov or push adc add (bad) scas fidivl sub and add inc fdivrs outsb test out xchg loopne outsb adc adc jne mov jbe adc imul sub adcb or ret add inc lods imul cmp sub out pop das or fmulp adcb adc in or push xchg mov and push mov rolb inc stc xchg lods inc and pushf push (bad) jne xor stos stos push mov stos inc pusha sub cmp add int pop pushf lea call cmp test and lods and invd jbe cs pop xchg iret cs push inc js xchg xor jl fcmovbe xchg fstl sbb and test pop ror add lods push push lahf inc (bad) xor repz dec ljmp out inc mov xor dec cmpsl or pop (bad) int inc cwtl data16 mov pop cmpsb in fdivrp mov push xchg push test pop mov es lret rep lods jp (bad) add push pop push subb adcb aas jne mov les int3 in pop or push sub mov xchg ss inc les test cs adc mov add aas xchg in loopne jo iret rclb and mov and sub pop pop mov jb pop xorb sub fs jne mov fcmovbe push inc xchg out inc sbb xchg or cmp fs add lea sbb shr xor (bad) loopne sahf xchg cltd (bad) hlt sub dec jnp sbb sub (bad) dec adc (bad) mov cltd xchg ds movl and (bad) or cmc loop and loopne dec inc or aad push push stos aam adc sub cld out jbe push jmp int nop jnp push xchg xchg dec or dec or push jbe xchg and aas push js (bad) sub adc and add push push test push pop dec dec pop or add data16 jl or fimul sbb sbb ja sbb xchg sbb scas imul dec jo add push cmp (bad) mov add das and cmpsl adc adc or sub pop pusha xchg dec in push pop and adc and mov inc jmp and lret lea cmc mov xchg nop outsl cmp pusha xchg cmp cli rcll int3 sub lock xor adc js mov pop cmpsb popf mov pusha cmp hlt push push xchg inc (bad) fist aaa popa mov je pushl push add loopne cmp ja daa xorb or ss push rolb mov loop inc dec mov ljmpw lods push jnp (bad) cltd (bad) mov enter dec in add push jb repz add push nop xchg add add div jle out aam or jge cltd ret rolb ss push or push push fldenv test gs fisubrl ret fist mov leave xchg shr mov rclb sub and sahf cmp sbb dec (bad) shr or or or gs sarb cli xchg ret in adc adc fist adc mov stc lods jb jge sub adc xchg dec jecxz shl pop nop movb shrl aas call mov and inc shlb cmp mov add xor xchg mov or inc bnd pop add je mov rolb inc adc xchg pushf (bad) sarl cmpl jl dec cmp jge cmpb jle mov add lock adc cmp jle (bad) bnd rolb mov outsb and mov xor xchg mov cmp dec pop mov es adc xchg shrb push mov repnz ds es ds mov bound cmp scas inc lcall xor adc pop sbb fbld xchg outsb dec add or cmp cmp je movl rcrl das cld outsl (bad) pop xchg push mov mov mov xorb and or inc and inc adc xor sti jne pop fdivrp cmpsb jb ja in jl popf inc jo mov (bad) xor loope or dec cli mov mov add lock enter dec std mov icebp dec fadds xchg add mov lock add jle xor imul loope dec popa jle mov andl xor jmp fisttp add mov cmpsl and pushf or push push loopne loop add mov add pop sbb inc and and lods sub adc dec lcall adc pop push add add add jl cmp jg insb push rcrb jbe xor sti mov pop adc ja movzbl fdivr cmpsb adcb loopne and or xchg mov cmp cmp jno push adc pop cmp (bad) xor and mov in dec jmp mov add mov and popl or xchg mov ss inc xor jo sbb jne stos pop dec (bad) lahf sbb sub clc jle rorb mov insl sbb inc (bad) jno adc xchg mov imul sbb mov add lahf jo mov pop adc mov jno inc pop push cs dec dec mov insb jne push subl add add nop cs push add rorl xchg lods sar push (bad) stos jle ret push or mov lret jmp aam or cmc add sbb cmp ss push imul jb sub loop sbb leave jne sub out and movsl mov ret cmp inc inc add xor xor test xchg pusha xchg (bad) nop fwait out sub sub jnp adc sbb in push notb or xor or cmp add add add cmp add or and or push push adc mov ret lahf jne adc cmp xor or push pop pop add dec push push mov push jmp pop femms in je iret call adc and mov add outsl repz push jne lahf leave (bad) repnz adc decl movl cmp fadd inc dec int pop scas add push cmp jb cld pop sub dec pop stos mov xchg push mov pop sti xor movl xchg or cmp add imul xchg jnp push adc mov mov adc (bad) in fbld mov es add push sub push (bad) rcll callw fisttpl ja sbb and dec fs add lea in push cmpsb jae xor jno mov rcrb xchg xor jbe (bad) jbe and cmp je add jae arpl push cmovno pop push mov mov mov cmpsb mov hlt pushf push or jge mov and sbb sbb jo dec adc out lret popa rorb push sbb pop jge cltd (bad) pusha enter fsubr daa scas jae aaa cltd cmp or mov jae jmp jbe mov cmpb add rolb fsubrl mov sbb mov push cwtl inc ja and inc adc sub add mov xlat push fcoml sbb xor add pop push sbb adc jg je sub leave inc inc mov xchg jecxz xchg add or subl icebp popa sub mov lods shl adc dec mov and test sbb mov je clc push pop cmpb sub jge je push push dec sbb pop (bad) je cmpsb add xor mov (bad) popa adc lea add in divb std je pop fidivrl adc jecxz inc int xor xor shlb fiaddl xchg das xor and push jmp jns js mov mov or inc ds xchg mov mov and int3 add add xor daa dec je dec jne sbb or into icebp adc jo fwait sub jne inc (bad) lods mov pop icebp lret dec add sub je or jne mov test push int pop mov mov icebp enter mov rcrb add or pop push add pop je dec cmp jg jl cmpsb lods mov lahf add add faddl push aam or dec mov push cmpsb mov popf jae lret pop push je cmpsl sub inc sbb xor leave cmp push push sbb or pop lods out xor subl cs jmp jbe push sbb and mov inc rorl xlat dec les jnp dec cltd xorl add pushf jmp cmpsb mov add (bad) xor ret pop das or inc push (bad) push push xchg pop sbb or lcall or jne negb lahf fdivs es lock pushf mov and push sbb mov aad sub fmuls inc jo ljmp inc outsb mov sub sub bound aaa or add je sub sbb jl das (bad) jmp sub add fmulp je push movb mov mov jg loopne cmc dec jo (bad) out ljmp pusha xor xchg mov cmp sti push setne xchg ret scas push dec and sbb add popa push mov into clc das sbb push dec jo inc pop jmp push sub out les and ficoml add sbb ss and push xchg mov mov mov test mov or pusha xchg pusha sbb mov add cmp dec and sub shrb push pop push push fcomp jl shrb pop add jbe xchg push movsl nop fnop loopne sbb clc sbb imul and jp ret fild add mov jnp pusha repz je and fsubrs mov js cmp dec push (bad) xor push stos push js mov stos sbb add sahf inc pop mov cmp sbb jne lock dec mov xlat rorl jne insl ss sbb push or jle aas xor dec daa outsb adc rorl data16 idiv je sub jne or pop andl pop mov push xchg test add ret or or je cmpsb sub jl adc or hlt rorl and or add pop sbb jl insl mov jg mov ja js scas hlt fiaddl cli dec and (bad) dec add jbe test add pop (bad) fdivs pop int3 inc or mov push or jno dec enter (bad) adc xchg pop add cmp cmp mov jns jae xchg mov ja dec cli xor arpl testb (bad) clts addl sub sub jle jge (bad) cmpsl sub mov or dec lods shl je sub mov xor popa sub lds fldt inc add pop xchg or xor nop (bad) xor jg ret hlt fimull mov add scas popf in cmp lcall lahf pusha push cmp cmpsb push cmp mov add sbb rcrb jo je iret push and shlb cmpsl dec jl adc xor test and inc sub inc pop cmp push mov icebp roll fbstp (bad) in insl (bad) mov ljmp ss (bad) pop jae pop push mov jle inc cmp imul jp add push (bad) pop (bad) push (bad) mov inc cmp (bad) rorb scas sbb aaa or lahf xchg pop rorb or mov out inc sbb shl imul xchg mov pop xor adc add cmp mov bound push lea mov nop xchg (bad) hlt fwait add clc push mov cmpb (bad) pop jg loopne xor jle test into pusha mov pop mov (bad) imul adc or cli xor jae sub or notb movl add lods in fwait push dec movl call inc pop sub outsl xchg sbbb xor je push mov add xor or rcrb (bad) fcmovbe inc pop xor push adc dec or sub out sub das and pop nop ret mov jmp mov inc shrb dec mov sub outsb (bad) (bad) je push or movq jo and and and rolb cmp call (bad) xchg mov cmc loopne xchg into push add xor push pop push test xor sbb pop in adc mov pop add jg aaa cmpb int3 (bad) es mov adc loope mov xchg call lret mulb sbb and sbb jl inc cmp test and int3 mov add dec xchg pusha jns pop aad push mov mov cmpsb addl pop xor or jle sbb mov and int adc mov push int3 std mov add sbb adc sub jne (bad) mov lock push and shl jb pushf jp aaa add ror xor mov ret aaa popf cmp jne pusha outsl jo mov add push sub jnp xchg std or cmp jb xorb sub push sbb jmp cvttps2pi dec sub aam xchg in sub sbb jbe dec (bad) imul xor cmpsl or jo ljmp mov pop push xor sub sbb mov pop jo sub mov lret xor test and std push cmp (bad) jae add inc pop (bad) rcrb push push xor cmp imul xchg adc jb xor adc jp stos dec adc jl push or test ds movl pop and xchg pushf inc jmp test movsb pop cmp jecxz xor add cmp and insb cwtl outsb popa cmpsb jno jg mov inc (bad) insb loopne add mov mov or call aaa loope aam and rcll (bad) mov jmp into (bad) jg xchg lock add inc jb testb je cmp ljmp pop aas xor int3 mov lea lea pop cmp adc pop sub xor push fiaddl mov pusha inc push stos pop mov jne ljmp mov cli mov push adc rol ljmp mov insb test cli pop fst and cmp pushf mov mov jbe pop dec and mov dec add rorl (bad) icebp push (bad) sahf cmp adc cmp pushf int3 test roll or inc xor mov les cmp jbe aaa jmp pop mov iret push and xor repz je sub lret in movsb lahf and ret add data16 scas test xchg add jo testl int3 jbe inc xchg adc jecxz addl add adc xor add int or call in adc movb (bad) imul mov xor rclb in leave inc xchg add and movsl (bad) je sahf popa inc xor fidivrl into push and jmp add repz je cmp bswap push xor ds pop adc inc nop mov fidivrl mov scas hlt add inc pop inc inc fsubrl lret test pop jbe out mov mov adc add loopne fmull mov dec lahf dec push ret push in ret cmp add lock inc cmp hlt fnstcw mov mov (bad) lods xor and dec sub or push out rcrb out sub daa or adc xor aas add dec or mov addr16 inc cmp mov rorb lock popf stos out in push adc insl loop jb dec push je and insl push imul imul mov dec ror pop adc adc enter or and add shrb sti inc pop and popf pop fs cmp adc pop sub mov mov pusha subb stc or add test dec xor sub int3 scas enter inc orl lods pop rclb and lret das sarl loope inc sub xor scas das or sti dec xor shll push or test inc pop out xchg mov adc or out adc or jnp shr sub cmpsb sbb jae inc add rcrl shlb jmp lret cmc or adc insb ljmp test push out add xchg push pop mov pop lahf mulb or push sbb add lahf adc jo cli xchg imul add andl jo lock fs roll not cmpsl in sbb add xchg adc jae inc in insl in out adc pandn imul mov jae hlt out push mov sbb lock fbld loop sub push aad push lods push xchg loope and mov scas mov jnp jno sbb or add pop add roll xchg sbb loop inc dec call inc push cmpl js stos inc pop ja adc mov data16 push cmp push and cmp jg add or push push mov inc inc cmp outsl ror scas mov jo cmpsb xchg testb sahf jb test cmp jae pop aas gs jno xor push dec inc jb lea jle xchg dec insb mov lea push scas push lea movl mov push jmp lret test push int or js popa push cmp loopne rcll std add cmp adc ret and in push mov dec and clc (bad) lock or xlat jbe les pop push push movsb mov mov (bad) jo divl fwait or cli and inc sbb inc jo sti push std dec mov aas or jne out (bad) cli jae nop frstor sbb mov xor sti and pop repnz add sbb scas aad cli xor dec dec outsb aam pop (bad) roll cmpsb cmp loope rolb mov mov adc jne cltd sbb push fbld jbe or dec (bad) rolb pop dec adc mov mov jbe inc inc pop mov mov pop mov jg pop mov je hlt add mov xchg fidivrl add dec push les (bad) ja hlt (bad) popa add enter pop outsb cwtl in ret jne pop cmp jb and pop jno mov add sub mov arpl mov xor mov nop int3 pop xchg add push xor push shll test inc add ret push leave push xor jno sbb xchg jo add das in out push adc push jb cmpl add push icebp (bad) fcmovbe push dec push or mov fisub cld push mov mov jle or xchg fimul sbb sahf inc fisubl shlb int3 mov fildl shr mov fsubs insl or add pop mov jl iret bound nop add jge mov rcrl inc mov aas dec cmp in xchg add pop movl sbb shr movsb imul dec (bad) jno data16 test enter cwtl cwtl lahf and stc dec sti sahf sahf or fxch add mov sub ret loopne dec mov fisttpll sbb jb aas mov jnp add das cwtl sub call enter dec pop (bad) jo je in xor xor adc mov adc mov push cmp aas outsl cmp sbb add jle pop loopne roll push inc in push and enter and cs in push fnstenv mov lret (bad) adc pop repnz mov sbb add push push nop andl mov test add scas mov and loop pop pop mov inc mov pop mov sbb inc scas inc cwtl sbb call iret inc fsubrs cmp jbe cmpl adc mov push out push xor xchg sub push or or or push (bad) dec mov pop inc ficomp adc adc fadd ss xor sbb adc pop (bad) aam mov mull fnstenv aam mov call mov inc sahf (bad) jne dec mov aas fwait inc add es test push imul inc or in arpl add push add sub cmpl adc dec sbb mov or cs lret mov push je xchg pop int sti jmp out inc inc xor jne mov mov fstpl icebp xor pusha or sbb jo push orl scas rcll cmp mov jle and movsb nop add jmp sbb imul lods in push jne adc cld adc ret ret rolb and xor push (bad) ja dec das dec test cwtl add pop adc out popa loop test repz scas add movsl mov jne aas push add cmp mov clc sbb mov or jl mov and dec inc shrl add jo or push inc cld add dec sbb xor call adc inc pop or add es push add push es dec mov lret push dec nopl sub cld xchg inc pop popa fs test sbb adc push outsb or push push jne adc xchg roll inc adc stos and push xchg jb test or push mov ret dec cmp shr xchg mov add rcl or add xchg or aas (bad) xorb push stos pop insb ss out stos jb lods je and iret data16 scas jg (bad) xchg insb sahf rep mov jmp mov ss repz mov rep fidiv mov jo out insl sahf addr16 push jle push push pop add cmp (bad) fistpll xchg mov or mov and push add lock pushf jmp pop outsl add push adc cmp sub jno add sahf sub adc mov and cmp je or mov stos dec out sbb inc sub sahf xchg adc xchg xor fadd adc push mov enter jg mov push fcoms xor push sbb cld inc adc fmuls push or adc xor push add js jle or out jo mov les pop pop push popf fcompl or insb mov sti and inc adc inc lock dec adc push call ja add or ja lods data16 pop mov and ret lahf adc lahf inc or sbb sub sub inc je cltd push and sbb inc pop mov pushl cmp mov imul pop inc sub add inc cmp jp cmc push mov pop mov add rcrb add loopew or sub push inc enter mov outsb pop dec (bad) and inc mov push or push je or cmpsl popf mov mov jle mov jmp nop sbb mov loopne (bad) mov nop mov ficomp pop je mov and add mov xchg ret js pusha pop ret pop push adc adc push cmp mov ja lea dec dec test js (bad) jbe sub add xorb lock std nop adc push or outsb addr16 lea xchg lcall insl or je les push jbe je mov add mov cmp test movsl jge cmp sbb pop add cmc add pop add rorb addr16 and mov inc adc mov enter add ret add jne sbb shlb pop jne into cmp add inc inc adc mov mov lea stos (bad) jle mov in shrb dec mov pop or push mov pusha roll cmpsb aam and movsb mov pop int3 cmp jbe push pop xchg arpl add mov (bad) jbe pop sbb sub test or je inc addb sub lea leave fadd jb sub push aaa adc or cmp das (bad) adc in sub add arpl sbb inc incb mov in add xchg jmp add and inc test adc ss roll sub (bad) jb cmp push rclb es dec mov push push sub push mov cmova sbb out inc cmp push insb stos sbbb jmp rcll dec sub ror pop add inc add add lea pusha xchg scas insb or dec pop sub push stos test mov adc xor and sbb push jo adc pop pop dec pop mov in sub inc adc push shl sbb (bad) dec push mov mov xor jb and fcmovnb mov pop adc pop lock fdivr mov orb into enter sbb ljmp push push jg xchg jno xchg mov cmp pusha xor jae lods pusha fdivrl lock sbb cmp add dec or inc add xchg sarb adc sahf ja and mov leave lock sbb stos dec inc mov int or popf add and (bad) jnp nop fcomp sar lock test or jecxz loopne into shr cmp rolb in loope rcrb aam (bad) cmp fs (bad) (bad) sub outsb inc out dec call add add push xor (bad) add cmpsb addb lock or cmp dec sarl sub push faddl add sbb inc fcoms inc mov ret cmpsb cmpsl inc dec mov lret mov cmc pop movl inc push pop push (bad) pop stos popa sub add mov add jge adc push adc test lea and loope jne lds in push xor scas push sub push cld xor cmp pop cld sbb sahf cmp pop inc add or sbb inc call lcall leave int ljmp xchg loopne push cmpl aaa or xchg fist lahf insl (bad) mov and sbb or mov fadds add rol fs out orl cmp lds test dec xor (bad) dec cmpsl pop stos add mov enter cmp bound cmp push je loop ljmp push rorb cmpl (bad) fld decl sub mov dec add je movsb lods jmp pushf pop or sub cwtl sub pop push cwtl sub jmp pop rcrl add xchg test add dec in mov sbbl jl sbb jbe aas mov or pushf sub xor cmp add mov arpl je xchg push jnp add push pop dec jp cmpsl xlat imul rorb shl add add fimull std divl push sbb dec pusha jne leave push int3 xchg orb clc mov add cmp (bad) jmp call in mov mov pop xor or xchg (bad) xrelease pop push cmp insb xor sub xchg fadd cmp shrl adc lds je inc and shlb add inc push mov or push sub ror mov mov cmp add xor nop jb shrl jl mov push and add cmp xchg jno or lea sub push aaa test lea xchg mov or cmc imul jecxz loopne xchg jbe pop add mov xadd idivb mov mov gs js pop mov les mov dec jae jae sbbb rolb cmp clc add fidiv xchg dec cmp jnp sub push or shll mov dec clc js cmpsb daa mov ljmp rclb mov cmpsb pop or sbb pop int3 lret xor push dec int mov sahf pushf pushf test add adc dec push push mov xor (bad) loopne add xchg xchg adc (bad) dec sub push add pop sbb mov lcall jne hlt adc jns sub fisttpll mov repz test ja cmp jp add inc adc ret pop (bad) adc add dec mov sbb xor xchg or add aam jmp repnz jp sahf popf (bad) int3 mov insb fsubl sbb sbb int3 add xchg inc add xchg add loopne incl cmp enter inc dec mov rclb test add dec inc repnz push (bad) xor adc inc dec pop mov ja loopne or sbb iret fs pop and xor rcll test pushl push sbb movl lea jg cmp mov dec jb and adc sub and ja sbb lods int3 sub add add cmp xor std ret rorb ret and jae pusha mov lds or or inc mov ret xchg xchg scas mov jne cmc xchg xor mov test test rorl push jns mov addb arpl mov pop add inc es mov rorb and int3 sbb add cmp cmc sbb mov mov je shr leave lcall adc (bad) dec cmp jne inc (bad) adc addr16 pop sbb out adc jb mov stos sub outsl int3 adc mov sarl loope mov ret sbbl call clc shll mov add sbbl aad ret je xchg push mov mov cli popa gs enter dec or sbb mov (bad) jbe push adc dec and push sbb or dec mov imul test jg movb adc mov enter test dec inc add insb sbb or sbb cli adc inc sbb or push mov lock lock imul mov fdivrl push sbb roll cwtl and mov (bad) test add add mov test dec xor sbb xchg or or test sbb push add push or icebp inc push cli lea jmp dec add notb cmpsb lcall and cld incl and dec sub (bad) and adc adc add shll pop or push lock add cmp or sbb or fadds add test notl push push add xor pop add pop fnstenv mov mov mov (bad) lock and mov inc adc ficompl adc jp push ss push aam add es movsb popa mov adc loopne adc dec or rcrl repz jne jl movsb or ret jmp or bound add jp inc add pop mov mov aam pusha adc push and sub or shr mov pop imul push or inc push pushf fiadd jp inc dec xor adc icebp ret add push push inc pop mov pop sti std inc sub xor inc lret idivb xchg jae push or pop clc cmp jne jmp jbe lock sti jl jo or insb je lock and mov mov dec add loopne,pt adc jb mov pop (bad) lret cmpsl push cwtl xchg push fisttpll fistl or dec xchg jns inc movsl pop adc push adc push out mov ret inc add cld xchg ret mov mov not std mov or sbb sbb incl xor push cmpsb jbe jo and jge inc mov pop jnp push mov pop xor xchg and pop movsb jg (bad) xor inc adc pop pop orb pop cmp shll jne rorl add (bad) cmp jbe arpl ja mov je mov mov or test add jmp jnp std lcall add icebp add inc outsl add sarl pop sub outsb lea mov cmc mov pop test mov sbb stos rorb or or in sbb fstps mov jle mov adc cmp xor push cmp add or shrl imul and into pop rclb xchg or lea inc cmp dec nop push mov mov int sbb into stos (bad) jno movsl push jl pop (bad) pop inc loopne or outsl stos sti test jl push xor pop stos dec shrl mov and outsl das loop xchg inc popa inc (bad) sbb dec add sbb push loop jp add push dec xor mov pop popa out add adc inc imul pop pop mov andl js dec test push push xor outsl adc pop jb pop or or jmp mov (bad) or cmpps jle cmp nop pop mov sete mov pop cmp add inc cmp pop and mov js add sarl and adc dec cmp and pop ljmp sbb dec inc sbb mull fdivr sbb add jns incl aam fsts cld neg jmp cmp jle loopne mov mov jmp scas sbb stos sti mov or xchg imul clc sbb sub lcall sbb sbb inc sbb pusha sti (bad) mov or add pop push push push nop push or roll mov orb and add pop fwait dec mov ja push xchg mov add sub incb loope ljmp aaa jbe pop pushf add rcl clc xor fs inc cmp sbb dec inc into and shrb add imul jl dec sub add imul je mov inc dec inc inc or mov xor andb js inc pop inc and les inc imul (bad) stos pop es dec ret mov push dec inc cmp and inc adc xor mov daa and pop roll addl pop ret mov adc pop lcall push sti or cmp dec test test adc mov aam cmpsb imul lea jo or pop or jl lock mov lock outsb push fadd dec mov push or (bad) and push sub iret xor imul mov adc mov and adc sarb xchg push push cmp icebp push and ret cmp fistpll mov test adc fimul mov xor ja fisttpl inc out loope push sbb push cmp ss xchg inc and and sbb xchg ret add cli (bad) add ss mov add loopne xchg jae adc sub in pusha pusha or (bad) sbb pop push call adc bound rcrl push ljmp jnp xchg je les insb cmp sbb push lods or (bad) lret (bad) into push repnz xor (bad) aad jo imulb test or sub mov mov dec mov add enter subl lahf mov dec or pop rorl fist mov sub je pop mov inc dec push xlat add imul pop pushf aas cmp or nop and je inc (bad) sub mov cltd ss xor out out sbb or lock jbe lea sub cwtl jae sub inc mov fisubr mov adc or jnp cld das inc add dec mov jne adcl inc xchg sbb xor xchg mov jmp lock fcom leave push mov adc shrl mov inc pop (bad) insb push ja pop inc bound push mov adc add decb pop and cmp jae sbb mov (bad) pop mov sub daa icebp stos repz test sbb or rclb sbb aaa sarb add push xchg jo mov jb test xor add push lcall aam movb cwtl add adc or movsb sbb push add popa push mov sub jg or xchg xor (bad) add inc mov and fdivrs adc ret add dec fcompl rol std in add rclb aam pop xchg pop cli pop ret nop and push lock arpl lahf cmp incl sub push dec push rcrb cld or mov mov add dec (bad) hlt fild test test sub repnz inc xchg fidivl sub push mov mov add loopne pop lock and test and dec cmp scas pop add repz inc add mov lret cmpsl add es (bad) xor inc mov or push js in jl ja lock inc mov mov mov or repnz inc push jb mov xchg or fsubrs push fdivrs inc xlat sbb into pop mov icebp mov loopne inc fidivrl (bad) lock int3 loopne add daa xchg cmp pusha or mov loopne jmp scas or movsl mov js sub push and ficompl or mov mov mov push or icebp sbb mov adc inc or lods add adc mov cmp mov jl ja and call mov push or mov movsb es (bad) pop adc dec movsb loopne mov sub mov add pop add jge push lock jle shlb mov daa add sub push or or push pusha dec mov push shrb add test out mov cmp out add lahf mov adc call lods test je shr push jne cs push jmp shr lods rorb push repnz push mov add jne cmp mov add sbb stos add pop push push (bad) nop fidiv mov xchg test test shl inc clc (bad) or push mov mov adc or xor (bad) cmp jae rclb push mov stos ds outsb inc shr fdivrs and jb mov jle push mov add inc pusha pop fsub or pusha or sbb ja (bad) outsl fidivrl add mov push mov mov or pusha sbb (bad) push push pop jp es add jo aas mov mov adc sub mov ret ret out mov adc ret sbb jmp mov nop add lcall xchg jo push cmp jo (bad) push pop adc out adc push pop (bad) ja push dec mov cmp cmpb mov pop out invd mov pop mov push inc dec push jl (bad) lock push sahf scas pop mov add push add aas mov enter jne cltd out mov mul shr fcomps add pop popf decl cld cmp pop mov add insb fdiv jecxz adc fcomps dec mov es aam bound push add pushf pushf pushf jl add add pushf pushf pushf pushf push pop or pushf pushf pushf pushf or or adc push clc cmpsb test xor cmpl cmp and jno and ds (bad) xor cmp add mov adc ret hlt lea test lea andb lea sbb jne not mov mov add test xor std lcall jo into xor jne push push cmp nop call xor cmp xor nop cltd imul js ret outsl idivb push popf or loopne sbb mov cmp push add fnop lret and ficoml cltd jnp add and jl or or adc adc push jb nop jnp adc rorb clc sub mov add pop inc sbb mov mov jb cwtl scas and arpl add mov mov out cmp test aas xor adc rol mov lods dec pop and nop adc out add push and mov and sbb mov xchg lock push inc mov and or aas fildl cmpb pushf cwtl sub sub add push sbb push cmp lods or sub test adc js mov push mov loop pushf mov or ss (bad) shr popl mov pusha sub mov mov lahf cmp jb mov xchg push pop adc mov sbb mov ja inc and xchg imul jne and pushf xor jp cs pop sbb inc sub mov and cmp sarb scas mov fisttpll inc push mov mov and sbb mov js xchg stos lods lea (bad) adc loope (bad) xor mulb xchg jbe movsl mov mov inc jb pop cs dec push push or loopne gs and push xchg add cmp fdivrs push sbb rolb dec loopne movsb dec fnstenv dec cmp scas out mov add fistpll adc pop aam (bad) or inc les lods cmp inc (bad) aaa clc lcall cmp push dec call push inc pop pop jl sub xchg add es mov fdivr sub lods jb sub add nop lock mov xchg rorb lahf mov cmpw pcmpeqw lahf push pusha jg mov cmp je or int cmp push test bswap pop insb dec inc add insl sbb aas pusha dec push adc push (bad) lea jg cld adc leave insl fisubr xor dec mov inc mov rcrb arpl dec add sub rorl mov stos (bad) push cmpsb mov push push data16 mov nop out add or and fisubl clc mov cld insl movsl push pop inc dec pop lea or push xchg or pop mov (bad) dec add xchg cmc add inc dec adc xor cwtl nop sbb pop add jbe test mov or xchg jmp loopne addr16 les nop inc lret mulb adc or shl loopne pop adc sbb add jmp ret sbb dec gs xor adc sub pop sbb and mov or (bad) repnz rol or add gs inc data16 cwtl and je jbe nop push test cmp add or negl push dec mov movsl push mov inc pop mov mov movsb mov pop xor std mov ss or push cltd cwtl or imul push mov (bad) jbe adc xchg mov icebp cmp lret adc dec cmp sub push cld jbe test mov sub mov cmp pop mov cmc pop mov (bad) cmp stos pop mov jp push addr16 mov arpl mov (bad) mov fstps or lahf mov fildl mov cmpsl push (bad) jnp lock addr16 mov push dec nop lock movsb pusha ja push mov mov out enter addl adc cmpsb dec adc fmuls mov xchg and stc nop popa xor push jle cmpsb pop or xor pop dec fs pushf repnz inc sub ss add push and xchg jg xchg and cmp test and nop imul (bad) dec or repz cmp xor les inc es cmc or cmp and jmp fmul xor jns mov loop test in and jns,pn push sbb and or addb jge add lea sbb pop dec inc add loopnew fdivrs sbb or inc rorb outsb jne sub push push add pop sub sbb xor outsb data16 call xchg ficom mov fs aaa adc adc pop (bad) push sbb or xchg sub add scas sub pop mov cmpsl add movzbw outsl push cli test mov stc cmp pop nop fld std clc inc adc std inc and div mov inc pinsrw add cmc sub jnp jo incb les add mov cmp mov mov lea bound push dec out lock insb scas jno xchg mov push and imul push push cmp add mov dec mov ds mov aas lock push fcoms mov or stos sbb or sahf adc loopne lods or int cmp (bad) dec lds aaa pop adc add add pusha mov dec sub lea push pop pop test mov push int3 (bad) add ret mov jbe dec inc es xor inc mov dec or jmp cmp or subl sbb cmp imulb fmull pop jp xor js xchg inc loop push mov xor (bad) pop xchg xor cmp mov inc jmp xor mov lahf jno call cmc lods or es or addr16 or into push or dec mov rorl aaa (bad) lock fist pusha addl mov xlat test push shrl stc mov jl xor fidiv stos pop rcrb jl,pt aam mov and frstor adc testl pop ss lock jo push inc and add inc push mov push jge jno or lock dec clc ret cmp xchg test xchg add gs inc and ret (bad) sahf ret cmpl sbb les shr cmp jle jne outsb aam mov mov sub and int3 xchg inc or out xor sbb adc stc adc data16 cmc sar xchg push add orb add or jle jge mov xorl sub cmp xchg popl and in repz rclb and mov add push and pop mov cs jg mov inc sti pop jmp lock sub adc and dec xor dec inc cmpsl pop xchg sarl (bad) out dec jp mov std fadds and add rolb pop loopne test lahf mov addr16 in into cmpsl (bad) add ljmp cli movsl aas lock push mov std push pop mov cmp imul adc dec xor cmp mov sub pop push andl (bad) push lea cmpxchg icebp add lods and loopne into in rorb movd xchg adc fsubr sarb push pushf mov sub xor enter jmp mov add ret dec shr add ror jg ror push loope mov add leave mov jg add movl lcall movl pop jo std or (bad) cmp das fisttpll mov xor add pop leave xchg fstpl jl test jge lcall inc mov pop fcmove mov xchg push decl lock js in test mov xchg movsb push adc adc adc push ret in insb dec fsubrl pop add and je (bad) cmp cwtl fild idiv lods sahf lret daa push je mov jbe jo adcl out scas cmpsl fisttpl outsl and test xchg cmove mov mov push cmp jae int3 jb dec in inc mov sti push pop or inc imul mov add xor xchg pop jl lock in dec lods cmpsl mov xchg xor (bad) fisubr mov pop sbb mov and insb cmp mov jne in out adc jae pushf mov mov and sbb nop push xchg cmp add scas dec add sbb mov mov jle dec inc adc fstps dec sbb xchg ret sbb inc lahf repz push adc ret inc xor dec adc push sbb out sbb pusha imul les std jle inc test mov push mov or push mov clc cmp mov pop jg xchg leave xor mov mov add lock mov hlt xchg lret jmp stos xchg (bad) or pusha pop mov lea dec xlat lret fsubrs mov lcall adc in adc xor push popa mov test daa orl xchg xor sbb in lea add mov xchg or mov or or imul in add add pop pop push sub push arpl mov add xor push lds add pop lea sub xchg push jb mov fldl inc add jns ret bnd inc enter mov sarb popf jmp scas push test (bad) pop lods loopne inc push inc push inc sub and push cld movsl pusha sub adc xchg adc das repz xor jo sbb sub dec sbb pop sub int3 daa cmpb movsl cmp lock repz bound adc xchg inc inc dec popa cmp arpl xor sub pop shl push jp push sti sub push sbb lock mov (bad) (bad) jg std outsl mov push push cmpl sub lock mov pop xor (bad) ljmp dec or pop fs fdivrs push pop cmp or add mov add adc xor mov daa movl add sub imul dec push pop xlat push outsb clc mov cs sbb push fidivl adc hlt movsb push sub (bad) out dec dec xlat or mov jae xchg and (bad) icebp jmp movsb pop frstor pop adc jns mov (bad) pop or sbb aad pop js pop pop inc fildll or push outsl lods neg pop sbb inc or rcrb add mov pop xor pop jno in xchg je sbb sub cmp or cmp xor dec and js lods loop loop mov adc and ret jge push fimull sbb adc mov sbb xor xchg mov add ret iret shlb outsb add js movb push inc add fsubrl pusha add pop rorb (bad) xlat inc loop xor cmp mov pusha (bad) push and and mov mov adc push push aaa xor ret push (bad) (bad) outsb pop pop or adc xchg and pushf add xor inc sub xchg (bad) inc push xor movl popa (bad) pop xchg or (bad) je or or add jmp inc inc mov imul sti mov arpl fcos loopne les xor dec xor pop dec jno and add test int jno inc mov adc pop and pop or sbb xor mov mov loope mov (bad) (bad) hlt repz aaa pusha mov fsubr adc lods (bad) adc dec jo gs test insl mov and aas adc testb lcall enter adc inc add or xchg movzbl lea or ja and or inc and pop addl xchg cmpsl push inc in ret mov jmp and cmpb and pop cld fs pusha jo jg and push jno add push push xchg add ss or or pop test xor ficomp lock or js or inc incb pop clc je lcall mov popa pop pop leave ja add jg daa mov daa push inc rorl add and movsb inc mov cmp rorl insl sahf or lock sub dec arpl loopne stos and mov adc dec (bad) dec pop in fistl cmp stos push loopne popa jae add jecxz in inc push nop sbb mov push out es push inc mov jmp ud2 fiadd int3 sar xchg xchg loopne add cmp add push idivb push movsl and scas data16 sbb shlb mov sbbl xchg loope inc push pop cmp jae loopne rorb movsb adc sbb ret dec jb fdivrp inc mov jns sbb push pop sub in cmp incl push lea fistpl aam jmp call inc or mov hlt inc ret lcall js btl inc xchg lock jg and push pop es add cmp cmp adc sbb les or pop mov jecxz push mov push popa ret push mov push or outsb aas mov pop movsl pop xchg pop cmp into dec jo (bad) cwtl sti les mov pop shll out inc sahf inc movsb mov sbb push adc pop pop xchg movsb jo call or cltd push mov push (bad) adc sahf mov or shl or popf in test or cmp adc movsb add mov or sbb cmp or sbb xchg cmp add push movsb sub ds or mov add pop repnz and outsl fldl inc sarl and mov js fbstp adc mov roll adc fcomps inc ds mov sti or jmp inc ja bound mov sub add add sub sub cld push es les jae pop hlt jb add mov and fnstenv and hlt (bad) adc ljmp ja aas loope adc ja push mov lock pop xchg fstl inc rcr mov (bad) jmp inc jmp addl (bad) cmp add xchg pop pop push hlt andb sub mov lahf lea mov xchg rclb cmp popa dec dec inc (bad) out es cmp in sbb inc adc cmp or cmp int sub jne mov mov push and cwtl notb (bad) xor pop pop push add add adc insl pushf mov mov push jno sarl int or inc dec jl sbb nop nop loop test and repz adc adc pusha dec xchg xor jg xor cmp loope subl scas loope push xchg push insl ss xchg lock je ss out mov clc jb hlt int or pusha mov jb jo push (bad) or ljmp das jae add mov cmp jp add sub roll (bad) sub sub inc mov mov sbb jmp cmp xchg orl fsubs dec inc fsts popf std cltd jecxz insl or pusha jmp cwtl push je pop push rolb cmc or (bad) cmp cmc mov adc loop movsl adc fcmovnb dec fistl pop bound push dec add xchg cmp in cli push arpl ds (bad) jmp lds sbb mov dec lock mov mov add test dec imul testl or lock pusha adc aam push add push pop rcrl and out push icebp mov adc outsl mov scas scas inc addb and dec dec hlt movb ret mov or sbb push repz sarl divb and decl adc add les adc cmp data16 and stos bound out das ds mov aam (bad) lea sbb (bad) mov xchg pop xor add xor test adc push or pop xchg fcoms (bad) sub in dec test loop jne push js addl jmp cmp (bad) add sbb push and cli in jne outsb dec jne ljmp dec inc aaa sub or (bad) lods loopne xchg pop pop cs add and movsb mov je insb mulb and pop fldt and lahf mov mov in adc ret push (bad) imul cmp xorl mov (bad) push btc in cld les sbb les in adc stos push add scas or pop (bad) fadds add adc inc lods daa xchg shrb push mov dec pop pusha (bad) jbe or movsb and cmpsb mov mov fs out idiv xchg jne clc xchg xor adc inc js loopne adc sub movsl rclb rorb push cmpb insl rcr mov add and add enter xchg or aas out popf jge nop nop unpcklps hlt and mov sbb push add add fldcw int3 aaa add test add lret inc xor cmp mov or push fs push dec std xchg jns cmp outsb mov mov out sahf out call sahf out sahf lock hlt clc clc cld sbb pop jp xchg add jns (bad) xor (bad) jmp outsb push loop rorb sbb pop sti and cwtl inc pusha and or pop and stc adc cld out sbb (bad) int3 xchg daa stc sub pop pop mov and push xor push jbe sbb jl add out add xchg push mov inc cs push add (bad) dec dec addr16 pop sub push add sahf ja fdivs loopne mov clc cmp sbb iret repz push sbb adc cmp repz adc or adc add loop fidiv sahf sub xor pop push xor mov outsb push and daa or push aas jecxz sub lods mov add gs push inc mov imul mov jnp xor xchg or or jg jns xor pop insb add outsl negl push push mov and rorb jl or fnsave nop lea shlb fdivs inc and jo adc xchg and clc int push (bad) hlt sub cmp jb outsl or rol cmp mov (bad) in push push add sub int3 test xlat sbb fsub cmpsb into mov xchg mov (bad) fidiv cmpsb push adc in mov lods xor jb push cmpl je add test fcoml adc sti cwtl mov inc loop ret fs pop clc mov add cltd inc xchg or mov jnp dec test sbb xchg inc test add jne idiv ret sbb adc sbb add jnp and mov xor in lret xor loopne data16 jb lods adc scas or jbe push jge xor jae xchg dec add jmp mov push icebp orb daa xchg stos cld sub dec adc fidiv push loope mov add adcb aam mov inc push jmp mov inc cmp or pop das (bad) pop jge dec jo add and test inc or aam movsb jmp cwtl insl js mov dec ss jae and je dec pop sbb ret es add out ja jl mov and fdivrp jmp add sbb xorl push jbe xchg ret cs call jecxz lods dec mov mov sub ret cmp fiaddl cld push add lock aaa pop adc les inc mov mov lret dec or (bad) and push scas or rcll pop faddl push inc (bad) div inc (bad) (bad) xor jo movsb andl pop ljmp mov add mov in push pop scas in mov adc sbb cs or inc rclb enter xchg ret out pminub mov sub pusha xchg pop lods scas jmp inc or mov popl fistpl mov cmp insl cld mov jmp and mov sbbl jno inc push or xor decb clc rorl add loopne mov pop dec inc inc add cmp mov fs aam mov movsb push inc xor lret jmp lds sbb or pop ja test lahf dec or into cltd mov adc lret add or jbe jns std arpl test or inc addl push jno add xor xchg out add loopne stos cs (bad) lea pop or cmp inc mov pop fcomps test fsubrs mov and xor dec jp jbe add sahf enter loope or cli rcrb mov (bad) movl aam inc daa pop aam enter sub push mov mov mov enter mov lcall std data16 xor inc and inc jmp mov aas shr push and jo or add lret gs scas and jne add sbb pop popa add push add aam sbb arpl imul movsb loopne pop fidivrl pop les shrb rorl sub ja adcl imul add cmp test mov jge cmp add (bad) inc or cli lock jp inc mov sbb cmp ja insl jmp sbb test rolb cmp mov xlat movb mov add movsb imul push jp repnz in in negl fisttpll cmp adc sub dec stc dec add mov pop adc js icebp mov sarb jmp rcrb dec (bad) mov add call push stos iret hlt test inc pop mov ljmp xlat push push push adc and les mov leave aas and xor push push and and nop or sbbb andb pop dec pop iret cmp xchg daa push adc sahf out cmp and hlt in in pop add cmp xor push dec push push sub int3 and xchg rolb push and adc sbb pop mov mov pop push pop repz addb nop (bad) repz cwtl mov push or push sbbb into in and pop in pop cmc pop mov mov add cltd xor clc pop daa cld sub add or mov fimul scas adc adc popl push mov dec and add add (bad) fimul add (bad) hlt stos jno push mov rep and pop insb pop testb js testb arpl adc adc mov or (bad) adc enter inc xor push add loope push or neg mov cmp fs add loope rcrl ss mov jg push add (bad) mov rorb call mov adc dec jmp mov jb jbe xchg dec sub pop ja sbb nop dec iret sbb adc inc test jnp clc je rep mov dec ljmp jmp (bad) clc sub mov and sbb jle les clc pop mov mov pop xchg xchg ret sub repz jmp cld xor call push push movb popf sbb ret jmp add inc pushf mov scas addl js add cmp mov pop je (bad) cld adc dec and stos out mov adc or and fs ret adc andb sub xchg or clc sub pop adc cmc sbbl dec add (bad) je (bad) xor push pop sarl les call mov std mov inc fistl jp jns dec cld mov push clc add lret (bad) or dec jne ret add les sub lea or pushf ficoml arpl das movsl mov cmpl mov adc xchg sbb cs and pop cli add cld jnp dec jno shrb and imull jne mov daa xor jo in lods jbe cmpsl xor mov scas aaa je xor xchg inc mov mov mov loop xchg pop adc push (bad) std movb pop jmp sub sub std add in and push clc push push push pop push and fldl dec test xchg mov mov cmp push or dec dec lock adc hlt mov popa rcll inc dec lahf add add mov add daa pop dec xchg xor fwait dec xchg out mov jge stos repz and stos hlt mov push cmp adc out dec or jl jne adc js push or insb mov push mov or dec shr loope (bad) push push in push cld xor in nop add mov fistl mov add loop out fstpl xor jmp test push ds add jne fchs jmp test inc adc (bad) test fld fucomp fnstsw fstp adc insb fdivrl subl sub jecxz ss add loop and inc (bad) jno popa and (bad) hlt lock xor jle sub cmp xor push xor sbb push cmp repz push cld jne mov push cmp jne (bad) es (bad) jne call aam and mov sbb jb jmp sahf lahf divl dec (bad) jmp adc (bad) jmp std sub jns std jmp cld cld jmp (bad) iret lcall rorb push cmc or jb or insb dec dec mov mov and test adc js adc inc adc mov xchg add test xor and push jne mov cmp dec cmp mov daa mov inc add ja fmuls add add (bad) hlt adc jb cmp add clc jecxz fwait in cmpl mov mov nop sbb ret inc xchg push aam and stos test sar jle sbb push pop fdivr or sbb roll mov in cmp mov pop add jo mov jmp ret mov or lock mov inc popa sub jge jbe insl and lcall jnp cmpsb adc ror into mov mov or lahf mov and add sbb xchg push imul mov jns sbb xchg ret sbb pusha imul fisub xchg jb lahf (bad) mov mov pop pop scas inc push and push (bad) jmp mov pop fs mov jne int jl inc notb and add rolb xchg movl sub pop movb adc dec push sti pop or push dec lret push or jae aas adc pop sbb setge mov and frstor sbb jmp ficomp iret imul lock or (bad) and add ret loopne adc out (bad) sbb loope add sar testb jne push sbb test testb je popa lods rcrb in mov lcall xor dec add or loop test sub push jmp std push and push insb mov push dec jp pop mov inc add or movb cs mov cmp jne mov pop push mov jmp add mov or bswap test in xchg xor cmp add lret leave jb call loopne adc add es loopne adc mov test mov movsb lock decl cmp jne dec sbb jmp add push daa add fwait rolb sbb adc daa add and repz push sub push xor or push std mov cmp lods cmp and add movsb adc and sbb add mov dec rorb pop add xor mov mov mov incl or mov jmp and dec lahf xorb inc fdivr sbb adc mov fsubp jl dec adc sbb int3 dec ret jb jne push clc jbe add jne or movsl and dec test jne sub or pop adc pop jmp pusha or add insb std mov sbb fs or mov ja shrb movsb lock (bad) jbe jge mov out cmc pop cld xor add pop bound adc loop stos or mull pop add sub jmp inc xor sub jo bound mov mov pop push jo outsl inc (bad) jmp push leave adc arpl add nop (bad) xor incl cs out mov adc clc lahf jne xor lock sub or add jecxz push adc loopne push rorl xor xchg jmp iretw xor cli mov jp push rol push (bad) xchg loop inc jne add insb inc cld cmp je ret mov daa push out iret xor and faddl mov jmp pop addr16 (bad) outsb or xor movsb mov dec out rolb sub mov lret mov and and sub mov stos adc jg cmp mov inc scas xor pop pop pop sbb pusha std add inc sbb add add dec and cmp sbb in push sub call push in and push xor or inc cwtl adc add rol push shrl out dec je pop test (bad) testb push mov xchg push add jl push push cltd stos or mov rcrb fimul sub xor and adc pop cmpsl jo out pop sub dec pop nop push add addl or adc mov add pop and out pop xor jge mov or mov daa es test pop or mov lods xchg xor sbb clc js mov je mov into adc mov dec mov out testb mov stos add inc adc cmpb jne inc pop jo add cmc data16 jmp ret cltd test js push sub adc daa xchg and push outsb sub and int3 dec sub jo stos add sar rorb repz and jmp jns add and aas clc cltd jo or or fadds cmp add bound not ret dec int3 jmp arpl imul in mov pop cmpsb ja test je test ja movsb sbb jmp add movsl push sub pushf mov xchg or mov sub mov cmp das xor addb clc test jne fwait andl add push inc cmp push test repnz pop hlt movsl dec out cltd insb pop xor jmp test sub adc test push test add sbb (bad) (bad) dec xor loope and cltd loopne mov xchg cmp movsb jo rcll pushf sbb jne incl adc push mov cmp push sub or cmp cmp jae or jae shrd shr xor loopne sub and shr (bad) popa push adc lret push or aas out push aam loop stos pop (bad) jmp or mov add cmp pop test sbb arpl lods (bad) push out jb aam mov je nop (bad) imul icebp imul inc insb adc test jns jae sub mov push in xchg test push icebp iret setp pop mov lret pushl push mov sub addr16 les cmpsb ud1 pop jmp lds pop mov pop adc or pop and pop sbbb xchg sbb lds lock push mov loopne aad cli sbb jge mov mov cmp mulb mov je lea ss popa xchg lret mov xor cmp cmp (bad) push push xor push cmpsl or sub add push fimull xor cmpsb lock ljmp sbb rcl jl popf pushl leave add or cwtl jo aas jo call pop cltd sbb push in and push push pop or jns and add fwait jae xorl add jno,pt jmp pop or lods cmc addl xchg mov push push aaa sbb adcl inc cmp sbb adc mov icebp sub sub inc push lcall loope (bad) jge jno add push push fstpt mov xor push mov xor sbb bound add sbb dec lret sub popa lcall pop inc xor push rclb mov and shl sbb rorl mov dec add pusha nop rclb and jl pop movsb (bad) out sbb add mov gs pop imul std pop mov cmp cmc jmp rcll dec orl mov in and mov xchg jb xchg adc push fwait adcb push pop ljmp pop inc lds push gs pop imul inc mov pusha (bad) jg rcl cwtl lea push or movsl stc loopne addr16 mov add pop (bad) push fs xchg loopne rcrb lahf test jmp inc and cmp je pop aam out adc push sub out cmp sub xchg sbb (bad) cli and loop add imul inc dec shll loopne loope div sub sarl add sar dec xor and inc lret push adc out clc sub mov mov (bad) cmpsb pop mov pusha xor add mov fwait or pop pusha mov decl mov jbe in or add mov add add sub jmp cmc push pop lcall push mov inc pop jg inc jo or inc jo push inc cmp ss sub or sub pop pop cmp inc stos and je fnop sahf pop mov das dec hlt or xor jl xor addl push pop jmp scas inc adc dec pusha jge xor cmp mov sub adc iret pop rolb mov pop lea ret mov js adc incl jge cs outsl or or or sub pop pop leave divl cld add mov pop js push nop fs out or leave jmp adc dec push sub adc mov int3 mov or pop dec dec pop into fdivrs push sahf and lea (bad) or dec push int3 dec push xchg mov notb pusha (bad) (bad) xor xchg rorl adc xchg sarl inc hlt nop loope clc scas mov (bad) test daa test or rorl push fildl mov mov add push call aam add push dec mov push sub inc test mov js pop dec push enter jmp mov push dec inc push pop pop push inc mov dec push push xor push lea xor cmp xor push in icebp nop lock orb imull fisubrl lea inc adc push adc int3 mov das adc sahf mov jo loopne cmp les xor xor cmp test pushf cli dec call push fdivl fcmovne and movsl push cmp repnz or mov xor and jp mov cmp push imul xchg inc testl sub in xchg jb sub dec jo xchg inc xor sbb (bad) adc aas cmp out pop pop arpl repz ss adc jo rcrl stc scas test cltd dec add clc rclb push or popf jbe or clc and pop and int jmp push sub sti jbe (bad) in mov mov pop loop rol push push push push jne sbb add cli loope cli idivb cmp in test je mov pop rclb std xchg pusha xchg rcrl lock or lea sbb clc adc popa dec cmpb adc mov cmpb or jae fs scas ds push (bad) sbb das test add ds imul movzbl add inc call icebp jg loope adc push xor lret pop push add sarl sbb lcall or add in insb frstor pop xchg or pusha fmull pop sub insl gs clc lea lea out lock mov pop aaa dec enter xor dec orb sbb mov and mov push mov hlt insl maskmovq notl dec cmp addl aad push popfw ds addl imul push fcoms push cmp jle inc or xor (bad) mov mov andl (bad) punpcklwd mov jo clc aam roll dec les push aaa inc (bad) in jmp mov (bad) or rcll icebp pop les push rclb push cltd xor add nop dec and mov test and add xchg (bad) test fdiv (bad) into ret push mov push and inc xchg lret xchg popf mov mov sti mov shrb jo jbe sub test arpl sub or les mov inc (bad) lock sbbb mov pop jne ret fiaddl add pop mov push add scas inc xor xor mov pop ret mov adc rclb outsb int outsb push or and add (bad) pop push jno pop jo xchg push add and adc sub in loopne lret andl cmc sub sbb inc mov push dec and lock das adc outsl je mov push jne xchg sbb mov or push sbb mov add (bad) pop pushl cmp jne mov adc in sbb mov inc sbb and les add cmpsb cmp pop popa jmp loopne or pop lock test pop jmp popf fs adc lret (bad) cwtl push cltd jo add inc sub sbb inc push xor push clc mov dec inc daa and pop inc arpl (bad) cmovs loopne push or (bad) fnop jmp xchg dec push xchg (bad) out or adc or dec cmp ret cmp jnp mov push and xchg adc xlat pop repnz das lahf xchg hlt push mov insl inc test sbb sub std rol lods aas lret dec ret push ss inc dec pop inc leave in xchg push test imul mov es (bad) jmp ss gs jle mov negb push add test out cwtl adc je push cmp push pusha adc ret repz test xor mov dec pop int3 push cmp mov mov fsubs lods push adc dec sbb adc push insl movsl outsl mov jne inc pop pop push gs add pusha jp popf sbb mov sbb or loopne test push adc sub mov adc inc fdivr jmp push clc fimul add decl adc mov inc xchg hlt and dec je dec into fdivrs or pop or add and andl sub push mov xchg push aas jg,pn or adc fmuls adc push or dec insl inc in mov jae cmp sbb sbb xchg mov ficomp mov xor sti mov jo rorl rclb subb cltd in outsl add mov cmp mov adc or rorb mov add adc xchg adc add lods xlat in push adc xor ret in notb adc xchg or mov xor out mov ret (bad) iret sbb cmp aaa testb adc and lahf ret mov adc cmp cmpl add push inc dec outsb loop xor and pop in jnp into pop push or mov (bad) sub inc (bad) imul fdiv fistpl (bad) leave adc fmul xlat jns call pop popf into push pop adc int3 or sarl inc (bad) sti sarb hlt (bad) adc sub dec adcl push hlt dec inc jno mov mov mov or mov bound dec arpl add inc pushf popa rcrl mov inc mulb es in pop sbb in pusha add add add stos adc mov inc aas inc cmp int push call inc xchg ret add push enter pop or add (bad) dec aam cmp sbb cmpsl jmp jle inc cmp cli or pop insb gs xor sahf mov xlat nop in xchg jecxz pusha pop rcll add icebp push pop into dec pop lock push divl and dec add or mov mov addr16 inc cs pop arpl pusha or loopne lret push lret add test push in (bad) sbb sbb jns push mov pop dec mov inc ret loopne add notb add xchg leave or (bad) dec arpl push push or (bad) das test push (bad) (bad) aad mov out test mov into inc add ja cmp jne imul pop xor xchg js je loop loop pop dec addr16 push add and in pushf movsb dec xchg lret inc lods ret add into orl (bad) push pusha pop cmp push mov dec popa mov or xchg sti adcb adc inc xor enter adc or jb imul xor add pop pop mov sbb pop dec pop imul sarb or mov bound lcall jne hlt xchg mov jg scas inc sbb adc xor xchg rorl (bad) sub out rclw nop jmp aam xchg push icebp lock aad lea adc test ret add xor mov pop and mov pusha fidiv inc push add or test pop mov or cmp inc cmpb inc inc loopne cmp cmp mov sub mov mov pusha lret sbb mov cmp adc fsub mov cmpl mov pop lret imul cmp (bad) ljmp loop jl xor cmpsl and sub cmpl ret (bad) mov out pop push ds ret adc out sbb into (bad) addr16 into sbb add sub in or push in loope test ds jne fbld or add push cmp imul push and and inc mov mov leave inc mov or fiaddl xchg sub inc jb call sub pop or jecxz sbb test push mov rcrb xor fisttp pop out xorb cwtl int3 sub lock (bad) fs add push fwait and dec test push js,pn inc lcall cs xchg mov mov clc jne pop movsl mov lret shrb add pop jle add dec lret jp sbb cli lea jmp movsb mov push push push add adc inc (bad) jmp jge addl fadds fwait arpl cltd add jl inc adc jo lods jmp mov push loope lret xor popf xchg and xor xor cmp call ret xchg xchg mov sub mov jae pusha flds add jbe int imul pop stos cmp fdivrs mov aaa cmpsl jno sbb pop aam loope fmuls dec dec out sbb push fiaddl (bad) mov jp lock mov sub mov sbbl dec pusha or mov ss sbb mov je push sbb push sub inc jg sub mov cmp dec sbb cmp or pusha and lret imul shl inc outsb stc pop (bad) pop mov mov rolb jno inc cmpl xchg cmp call cmp (bad) xor jne test ffree lods xlat repz mov pop jno inc cmpsl movsl fadd add pusha dec sbb dec mov push cmp rorl pop push int3 or test repnz stos aam jbe ds or push int3 inc or jno ja insl fcmovnb cmpsb repnz es ret cmp fdivrs jo add rclb pop jbe xchg add dec insl stos (bad) cltd dec sbb pop movsl adc pop test gs xchg jl jmp cmp mov cltd je and cs xchg sbb jmp sbb mov push sub iret sbb testb add add dec lea push test xor call fucomi inc xchg repnz jl inc or adc adc xchg mov leave push sub pop jo test fadds mov and sbb add add cmp push adc andps test mov push sub and sbb add cmpsl xchg jne rcrb les dec xchg xchg inc sbb int3 jne ds cmp mov pop sysenter mov loope push loopne mov rolb jge daa sub je aam les mov adc into lds inc les adc dec hlt xchg pop mov in cmp push nop loope std cmp jae fsts mov hlt cmp jl cmp jg mov xor push hlt lret jp push call push sub add and add xchg or out push cmp das (bad) ficoml jmp adc jb pop jns cmp xor mov inc subb cmp add or mov sub mov pop cmp ret and and stos mov cmc pop mov adc or push nop mov add adc imul leave and push or sub push or sbb jne pop add movups fisttpl or (bad) or mov lock lods and and mov push int call (bad) jle mov adc pop clc ss pop push xor inc repnz or cmp jne xchg mov add dec pop (bad) or cwtl mov jae sahf shr test inc mov add adc adc sbb mov xchg test stos or lock in inc js mov inc lock or (bad) xor in dec hlt adc pop xchg call push xchg pop shrl in mov and add idivb faddl dec out cld add dec jg adc orl call adc push movsb fadd mov mov aam in lock add orb jb (bad) jge jl sbb jmp mov and pushf and xchg cwtl enter mov scas or push adc sub sarl dec scas xchg inc bound xor jl or jp cmpsl adc fcoms jbe inc lret pop mov stc pop les push sub push insb and add ja pop pop leave lea mov add pop fdivrs sbb cwtl arpl pop mov jg sub cmp mov and inc or inc and inc sbb or cmp dec lock movsl out push daa movsb loopne jge push jmp arpl pusha out jle sbbl je cmp jne cli add cmp jbe jg xor jo or sbb pop add push jbe out insb lods and pop das xor (bad) push scas cmp jae imul sub xchg (bad) les jle das inc or or jl jne jg or inc imul push push outsb xor in sbb aam dec ret cmpl pusha or push ret lock mov mov mov mov sbb stos cld rorl push add mov inc mov loopne dec data16 stos ret mov ret push and pop repz inc add jbe xchg cmp orb push dec cmp pop sahf jo pop or jmp mov test or jl pcmpeqb je shr or and push jbe enter lea sbb jmp dec inc nop sbb aas or jmp bound lods iret repz lret data16 xchg sbb inc aaa mov jae dec sbb push mov add mov xor mov pop cvtdq2ps mov cmpsb mov push mov pop add push cmp add mov jnp mov add in sub lea rorl call add jmp cltd mov das scas push pop push or orl xchg dec test mov mov pop test push jbe clc adc xchg pop call iret cmp push mov andl fcomps and sbbb pop push mov imul in cmp or jnp dec jbe (bad) xchg push enter js sahf push fadds lea push inc es mov lock jmp pushl pusha aaa push cmp push (bad) push sub dec iret aad adc fcomi lret rcrb lods fbstp mov pop mov pop sub inc push push mov lea mulb mov pop and ret mov mov xchg xchg jne outsl and xor and mov add sbb rcrl idivb std or push jb fadds sbb and xchg hlt movb cmp sbb add test xchg sub scas dec fs jp adc lahf inc or jge add xor (bad) stos push fwait xchg inc cltd testl sbb jo imul lret or ret or bound ljmp sbb ljmp stos sbb imul lcall push or jle lret xchg insb in test push xchg aas leave pop gs dec push fisttpl xchg dec pop push pop test sarl pop mov mov adc dec sbb cmpsl aad out sbb and shr push mov je repz pop arpl sub and ds and pop aam leave test mov push sbb cli dec aaa imul mov jbe (bad) ret mov inc shr xor adc xbegin pop inc lods mov sbb cmp jle xor pushf jbe or jle jecxz loopne mov mov (bad) pop inc cmp lds and lea jl jg add fs push xor pop div inc lea gs mov jmp cmp xchg inc add faddl jge add les movsl or dec mov sub sbb push sub xor jmp pop add call lcall mov lds fisubr add stos cmp fcmove push mov fsubr lds call (bad) loopne and xchg mov dec sbb cltd test jmp pop mull adc inc inc sbb push or sarb jp add jne js sti push pop hlt rorb or or insb arpl sti and (bad) jl sbb push lcall adc pop aam orps adc fwait fs pop push inc jecxz jmp cmpsl sti and jno ja in jne push popf mov xor jo dec xchg cwtl lods cmp dec jle push outsb out push dec mov nop inc mov cwtl dec mov mov sbb or add mov outsl or cmp and in lea xorb pusha (bad) adc push ret repnz popa dec xlat cmp push mov inc or inc imul dec adc push xor add loop call dec sub cli cmp fcomps or sub xor jo mov or sbb mov js inc dec pop jne incb xchg (bad) or hlt or popl sub push in js cli push fadds mov or inc adc repnz adc or fstl or or inc push sbbl or add push add mov jb dec jo jb pop jbe cmp adc push cmp lods cmp adc clc or mov fldt push mov push add add faddp out and or add pop in ss and push pusha jecxz pop movsl inc mov mov add je push ret scas xchg je xchg repz sar sbbl push inc repnz mov or lahf test jmp fbld add mov aam push mov and push pusha mov push and mov lds cmp push jne lret insl (bad) pop aad lret sbb adc test jmp adc cwtl inc mov hlt adc mov icebp or je pushf aas movsl xchg mov pop jae aam sub and xor clc sub adc dec add jg add add xlat or jb mov sbb rcrl fsub sbbb ds mov shrl pushl pop lcall adc lret data16 jae cmp inc or pushf push rcr (bad) adc sub mov stos (bad) xor add clc loopne and add fldenv and (bad) test inc push inc cmp mov push sbb xchg arpl stos xchg mov pop jbe mov shrb cs fs daa mul (bad) iret inc sbb or roll ret push test pop jo fidivr fimul cmp aam xor clc add imul adc or les jo icebp mov xlat in loope cwtl insb adc mov pusha (bad) jmp mov or sbb fild lret mov movsl adcl inc shrb sahf dec push cmp mov or pop xchg pop rcll inc inc cmp in or mov xlat cmp (bad) sub pop les stos mov cmpsb pop jmp mov add add or cld push orl sub sub pop mov jo (bad) or mov cmpsb mov test or mov xlat adc pop pop push push jg add lock inc and xor inc test shll push mov (bad) adc push out mov xlat mov aam add adc push addr16 pop inc sbb or inc and lahf icebp sub adc cmpb push nop rcrb or mov push data16 mov or add pop dec pop imul sbb pop test inc inc loopew sahf mov (bad) mov cld shlb push inc mov les aam jo test mov and adc add and pop clc mov mov xchg inc mov jl sbb (bad) jp out mov ljmp dec mov mov jbe adc rcrl mov or jle push enter outsb fmuls inc dec sbb or mov ret dec mov and add hlt jbe mov hlt xchg mov and jo movsb pop in add sarb les mov mov mov adc jno mull mov cmp cmp jnp rcrl jo movsb push lea jno lret adc test pop sub or jmp adc pop sti leave push aaa and jmp aam pop xchg cld fmul lock add jns into lahf sti rolb je jno lods inc popf movsl loopne cvtps2pd xchg popa cmp push mov mov cmpl movsb in xor pop sbb insb out or lock mov or cmp mov dec jle cltd lret iretw mov and nop loope mov insl lcall inc add cmpsb in out pop adc push pop mov or loopne outsb aas push rcrb push push dec test int3 jle outsl jbe sar or rorb and push push cmpsl call dec ret cmp pop add dec or cmp fwait push test push mov nop cli jmp mov dec xor push mov mov fucomi sar mov sub push jne mov aam inc dec or xchg test rorb divl mov or lea mov mov sub lcall add add cmp xlat jmp xor movsb push mov outsb inc sar and mov loopne mov es xor pop mov xchg fisub mov and lods dec mov cmp cmp test pop add jmp push adc in add mov push push ret inc and into (bad) call das clc pusha (bad) stos mov clc sub dec roll les adc mov (bad) lahf sbb (bad) and mov lods mov mov stc in add add dec xor insl inc movsl pop adc mov (bad) in imul mov jmp insl inc add daa ret fild mov jbe adcl or loop stos lods jecxz dec sbb mov imul xchg cld movsb xor subb popa faddl (bad) icebp dec inc jnp lahf or jmp or and dec sub sbb xchg jo mov test or sub adc xor fisubrl jno push btr mov jecxz divl mov sbb ss mov inc repnz insb and mov sub mov pop aad adc nop push rcrl jo sbb std cmp cmpsl push mov xchg imul xor or mov inc rorb mov outsb out bound mov mov push adc je sbb mov and push cmp sbb jne (bad) je insl xor inc pusha push ds mov jl popa lret jbe out cmp push and insb push xchg sbb and cld mov mov es pusha or xchg ss addb lea dec add lea jo sti sbb js adc push add pushf mov or lret in pushf movsl or (bad) int3 cmc mov xchg aam pop jne cs lret negl loopne in in lock mov clc push fwait movsl fstpl and add xchg pop cmp scas inc or inc sub fs sarl test lret pop adc sti add das add dec imul sbb add sub add or lea sbb fsubrl or xor dec inc mov mov adc clc inc movhps push (bad) cltd xchg adc sahf cs mov mov pop mov xchg test out mov test push es pop lock movl lods inc ret stos push adc xor lret enter push push call mov (bad) in adc icebp xchg add xchg out pushf loope jl ss je mov lock dec jo jp movsb rclb or sub lcall push and loop lret adc xor repz aam call mov (bad) sub jo pop adc push mov daa pop imul inc mov stos dec lret push mov push mov xor aaa fiaddl loope add xchg and xor lcall retw xchg inc bswap or xor push in and aas movsb push inc (bad) jne mov xor jge dec jmp push cli and scas add aaa call sub pushl movb (bad) mov dec push push or cmpsb pop mov sub (bad) pop out cmp lea add mov pop sbb fimull xor inc xor shr fisub stc and adc push or aad xor insl outsb mov je hlt gs push dec into data16 call push add scas mov loope or movsl icebp adc cli mov lret icebp inc mov and jl xor sub and xchg sbb aas sbb push sub js sub inc dec sub jl lods and sbb cwtl xor data16 sbb mov (bad) and lcall sbb cwtl or xchg jle pop mov or push aaa and push loop push lea or movsl jno push dec sub sahf imul test adc insl xor das mov add mov xchg lcall loop push push lods adc sbb (bad) push lea mov jge dec and mov (bad) push insb rcrb pop loopne ljmp andl sbb xor jne popf mov xchg cmp ret std inc jl dec xchg mov jb xchg push pusha push inc or add xor subb imul or jle adc jl jne inc push rolb jl xor addr16 pop add das xlat stos mov pop shrb adc or test jns cmpb xchg inc cmpsb cmp mov inc adc aam jo mov xchg jle pop sbb and sub sub xor repnz inc out xchg fild mov mov or pop mov cmpsb pop mov jne inc pop icebp mov or xor dec jecxz push pop mov cmc dec inc loope ffreep call jae sbb shrl sbb xchg push cmp inc (bad) lds mov xchg mov out test inc pop rol cmp xor je leave jle mov push inc sub cmp addr16 jmp pop fistl mov pop jp or add pop clc sub pushf jns add fs fisubr clc push daa outsl pop call hlt sbb pop (bad) xor hlt adc aaa or push or int pop mov ja dec adc cmp mov or fwait jle xorl xorl daa notl and push sub add cmp mov mov adc sbb adcb js cmp add ljmp mov (bad) sub popa cmp lcall lret adc jl loope loopne ljmp fcomps sub orl decb enter sub xor add fmull sub add mov cmp push ret push bound adc and sub mov push jp in (bad) xor mov cwtl jge or cmp es aaa addb or sahf lcall add jbe inc je pop sbb daa inc ja popl into mov pop and mov or stos mov nop push fcoms lahf jo loope add loopne dec jo or mov lcall sub scas xlat jo rol xor xor mov mov shll or aaa cmpsl pusha pop mov mov aad mov mov xchg iret stos lea dec jns fistl bound push daa sub mov mov pop cmpsl push cmpsb adc pop sbb inc push xor (bad) jns or fstpt cmpsb mov rcrb movsb iret xchg sbb clc pop sub fldl imul mov shrb mov jg pop mov sbb mov lods test es add push imul ret adc mov pop leave or divl mov les fistl dec call cli push adc lock cmp or orb movsb (bad) fwait cmp push test les push lret cmpsb rcll jp sub idivl (bad) jbe pop jo mov aaa xchg pop scas jbe pop leave ret daa jb push cmpl or mov cltd stos mov jb pop push push je jo sub push dec data16 shll in push jb arpl push dec push adcl mov xor push jge je daa lock adc jg sub push (bad) push and popa jge xor xchg push mov jecxz push rorb push or push (bad) jg jl test push sbb push sarl fwait mov lea imul inc jb into jl add ss jne test or and test xor inc mov pop mov push cmp cmp cmp sahf loope or sbb cs cmp mov jno shrb icebp fwait icebp cmp cmp imul pusha inc (bad) cwtl je mov xor push test cmp mov (bad) loopne (bad) cld lahf nop push clc and or dec adc and or (bad) add cld cmp pusha jne push push or sub and pop loop clc cmp mov insb jle es loope lea push cmp xchg jle fimull ss jle pop pop stos xor call ret loopne andl mov flds or mov imul xor ret gs jmp das pop subl fwait js test dec or and (bad) and int add js (bad) push pop jo dec push fcomi xchg mov add leave fiaddl push movsl inc out (bad) jne pop adc add je orl ljmp add jo jbe mov pcmpeqw inc inc js orb (bad) test mov inc cmp inc mov je push inc inc sub push or xor dec push inc (bad) mov add xor js or (bad) push das inc rcrb inc test sbb popa (bad) sub je push ret push add test test mov mov pop and fldl mov js cli jg scas pop add jl mov sbb inc (bad) cwtl and push lea popf test or pusha and adc enter pop adc sbb pop sbb sbb xorb (bad) add jne scas dec sar mov dec notl lods xorl sbb dec scas mov ret fisttp mov cwtl fstl js mov xchg lods mov leave push jb insb test and mov push and mov popf inc lea cmp lea lea mov lock jb mov mov mov jmp dec mov mov push pop and xor pop sub or jl cmpsl jle out icebp pop add push shr inc mov push sub xor shr sar in in (bad) fmuls leave jne div mov mull xor out (bad) jb cmp sarb ja jb cmp add and rcrb adc mov out jnp orl arpl xchg pop push lea sub pushl out dec add cwtl xor rcll inc cltd mov mov push and mov or mov xchg xchg mov adc js and push mov je push orb cltd push addl dec push jne and leave aad clc push jne inc lea xlat xor push repz (bad) xchg inc into pop cmp push mov mov inc jo cmp inc stos nop xchg dec mov or scas or inc cmpsl cmc fdivs popa xorb xchg nop pop push jmp push loop adc out mov mov xlat or stc jp add add jle mov in inc mov imul test data16 sbb test je xor les cli and sbb (bad) fwait dec lock mov out sbb adcl add lea int and mov and iret push mov jmp dec je add pop dec jne or or inc clts mov push pop add inc pop xchg jno or sub or mov adc adc cltd or xchg add pop or push lea mov cmp hlt mov sahf fiadd adc rep lods subl daa les enter push in pop add adc adc inc (bad) ja stc cmp fs ret enter sub ret push push xchg cs mov jg loope mov mov xor orl mov push nopl icebp aaa mov adc pop dec fdivl jg mov addb enter mov imul xchg push mov mov add mov fimull add xchg xchg mov pop dec movsb adc xlat push or lret dec adcl inc dec or pop add and lock or arpl pop lea inc jmp xor fimul inc (bad) (bad) mov jo lahf or addb push push jne mov pusha push jne lea (bad) pop outsb in pop and push dec adcl repnz cld pop cwtl adc ja bound push adc cld adc mov sub mov pop mov loopne jne jmp add jmp dec mov loopne or outsl xchg ret xchg jns mov (bad) inc add es dec cmp cld cmovg iret mov int3 mov scas add jge daa loope rol enter fimul nop dec add and cltd fdivl or pushf dec stos lds or or cmp (bad) xor sub sti stc movsb test nopl dec test fs jmp insb mov sarb pop mov popf in mov punpcklwd pop lahf xchg xor mov sub jmpw xor cs adc call mov cmp loope xchg es cltd subb pop add sub adc aam loopne arpl stos pop mov fcomps leave or pop cmp add pop int or add push nop inc pop pop inc sub pop adc test mov xchg ret mov dec or test adc mov call nop out add or push cli sar loope jbe pusha clc ret adc ret cwtl movlpd vmptrld adc sbb addb xchg shl jae sub (bad) daa inc loopne push cli adc add adc (bad) jns mov mov adc add adc xor and xchg lock dec mov inc sbb roll mov outsb lret push outsb sti ror mov or neg xlat es push and push cmc sbb pop outsb mov mov lahf adc mov loop int3 sahf rol xchg idiv rcrl ret add add add jbe mov sub cmpsl pop inc mov and adc lds jae lea lds stos fcomps int aam pop iret pop rorb in movb xchg fstpl mov xchg out (bad) pop (bad) and std sub aam inc cmpb ja cmpsb ret stos movsl inc mov and mov cmp jo ficom sub into lock mov sub cmp in addr16 movsl (bad) and pop fnstenv pusha sarb (bad) add adc imul mov out jl mov inc pop sub or push push pop in jo out adc (bad) (bad) out jns or or sbb scas add add loopne mov pop je xlat push das push sarb mov pxor cmp mov inc or jns lret pop mov cmpsl sub cli push xor or jp and mov leave out mov roll movsb (bad) jnp adc pop pop mov pop pop decb pop ja xchg lret jo ffree adc or loop repz jecxz es dec and pop ret ret mov sti push sbb push lret cli shll and (bad) or test enter lea int3 (bad) fsubs test cmp add aaa pusha repz sarl in xchg flds fildl out adc (bad) push repz js ret adc pop loop insb fisubr fdivrs cmp cmp popa add and in inc in pop mov (bad) push sti or add pop jge fildl adc dec or pop jo fildl and jl mov or pop std clc clc xor (bad) cs pop fnstenv pop scas out mov call (bad) jno mov and adc int mov loop aam (bad) je aaa lods add dec push add or cmp loopne jmp js mov mov fldt shl fild mov fnop and mov add pop lret pop mov pop cmpsl mov ja leave faddl push push fdivrp xlat es cmp pop push ja addl or hlt cmpb push adc pushfw add sub jb cmpl je sbb shlb push mov imul mov xor dec mov es in ret inc aaa fcomps dec mov sahf ds rcrb adc or mov shll push jne and div aas decb mov mov dec push xor call push cmpsb mov mov cmp ret jns icebp or loope or mov mov dec les jns jae nop add (bad) xor sbb inc dec leave push in aas adc jl enter xor mov nop ret test sbb pop fistl data16 dec push out xor sbb fsubr add jb and scas dec inc push sub adc adcb jmp dec add insb popa popf add ja cmp sahf subb or push div add sub cmp icebp daa mov aad push pushf in mov jle cli enter xchg inc mov cmp sbb pop sbb add xchg imull loop jbe repz aas mov add push popl loopne cltd adc adc xor (bad) ret incb jg pop adc das fs test mov and sub clc stc shr fs rol lods or adc xchg je imul dec add push jo add (bad) mov pop out test (bad) stos mull jb jbe pop push ja leave popf outsb shll sub xchg es cmc ret (bad) (bad) scas and fwait je enter test sahf cmc add jmp push push sub cli cmpsb es fwait mov push mov lret xor add add add in shl jmp adc sbb jge push je arpl repnz ret rcrb or lret mov or xor popf inc (bad) jle loopne dec cld pop and jmp sbb push adc jns or jmp inc ss fstpl std cld cmc pushf and lahf repz test inc pop add mov hlt bts jmp in leave dec mov ret mov xor or jae loop (bad) adc mov mov mov pop loop xchg pop adc and mov or add sahf and fstcw xorl mov jg das xor iret pop fsqrt jno or jge sub mov jno inc cli mov jne gs scas and in outsb xor orl sub jmp fstp (bad) and add fistpll (bad) sbb (bad) xor lods xchg test jbe das adc or pop sarb aam fidivrl divl inc and mov sbb pop (bad) data16 jbe std les cmp je clc xchg inc pop rcr jmp mov ljmp cmpsb mov inc push pop sbb and call sbb mov rolb test dec call adc lahf (bad) mov add dec imul add (bad) dec pop adc imul pop mov xchg sbb inc loop xchg sarl adc mov imul jo adc sub add push aas ret add sbb dec mov add mov or mov inc lods loope cmp cwtl subl mov pop or enter inc mov push outsl sub dec xor sbb sub jbe add fistl popa in sub sbb (bad) mov aaa jge ja cmp sub repz push addl inc jg (bad) ja leave mov or leave into xor lret nop fidiv lahf adc je jb pushl movsl imul lock cmp lock lret fcmovu test xchg sub movb test mov arpl pusha mov mov aad test mov pop test lahf or push mov and push nop push pusha cs mov dec mov mov test test dec aam mov sub push enter add (bad) xor push push mov test mov mov (bad) push add movsl xorb cld push pushf jnp dec mov mov xor daa cmp iret mov sbb dec test std mov sbb jb or adcb test (bad) jne (bad) pusha mov pop inc shr ja cmc jp xchg or add dec or sbbl and xchg or pop mov movsbl movsl pop test mov add sbb cmp outsl mov jp mov sub dec adc gs sbb push mov xchg xchg inc and aam pop iret cmpsl adc shrb not xorb loopne loopne pop (bad) jnp data16 rcll xor pusha mov cmpsb sub sub nop hlt leave cli cmpsl decl mov jne inc adc mov divl pop lret je and aaa mov incl pop iret mov dec jmp and adc push pop aas test or lods add popf inc jmp jg add pop sub je push mov sbb movsl cmpsl jle mov push lret test call push dec out xchg fs cmpsl cmp and pop dec dec mov jo jg pop add add data16 jmp push or std sarb jne js mov loope dec push out inc jmp push xor sbbb je je ret inc imul es adc popf xchg push lock pushf dec sar adc adc shll dec sbb sbb inc je orl pop cmp fmuls add sbb daa jne or test pop aas or or adc adc fisub add and push dec dec adc mov stc xor push test lock mov in push push enter xlat and jo mov das loopne sub andl les jbe aaa mov lcall jnp add xor scas test or in sub xchg je mov or adc xor inc jno test pop or push test rorb pop insl xchg xor pop mov scas sbb dec add cmp add sub int mov andb or jg roll pop jo std inc adc icebp push fwait add sbb or or movsl inc mov add mov dec inc sbb and fcomps (bad) add mov iret imul ljmp mov inc mov pshufw bound dec lret add adc es cmp imul add or xor jle adc or ljmp (bad) rorl xor push inc xchg aas pusha lret ljmp imul and or xchg dec add or add dec inc sub xlat and movsbl test cmpl mov push sbb pop pusha out add add or je leave rcr stos or int3 push and mov loope mov ret (bad) aaa xchg adc je (bad) mov push jbe cmp ljmp aaa movsl int xchg cltd imul shrl movsb dec sub add inc or push mov cmpsb sub daa cmp lods cmp adc sbbb or ret cmp or aam or outsl out ds xor lcall int3 pop mov push dec and sub (bad) jmp mov jg push scas pop mov or mov push or incb inc adc adc test loop or cmpb sbbb mov fwait sbb ror imul (bad) ljmp push pop (bad) jo adcb mov sub iret scas cmpsl aas cmp (bad) sub (bad) fisubrl sub pop jle add ror cmp mov inc cmp mov loope inc sub adc jb (bad) dec imul daa dec jp mov adc adc push inc xchg movsb cmp mov dec (bad) jmp ret sbb aam fmul push out and addl xor or xor or mov vmread cmp adc adc dec mov test cwtl inc jnp das push mov cwtl pushf in js and pop sbb push mov xor sbb mov test adcl or mov push stos jns xor les stos adc or jg (bad) shrb or int stos sbbl insb sub out repnz adc push pop push aaa dec popa cmpsl in lods adc stos pop bound dec mov ret ret sub clc insl leave add adc mov sub aaa cmp mov mov fdiv fiaddl mov test leave mov aaa sbb sub mov out xchg jp fdivs add shr rcr push imul sbb sbb movsb sbb dec or pusha cmpsb push fsub jbe mov mov rolb stc stc stc or mov mov jmp sti fsubl xor or cld or fcom cmp rorl in jnp (bad) int3 pushf (bad) xchg lods hlt push add out sub enter pop fsubl xchg and jno mov mov ljmp add adc stos mov jnp lcall cmp (bad) pop jno push xchg aaa int3 add inc push push addl sub (bad) mov or jne rcl movsl shrb adc pop lcall mov mov stos outsl push mov ret adc dec sbb add (bad) scas and rcr cld push lcall sub xorps add shl pop popa push cli in jmp lret sarb push or movsb mov or and frstor rclb sbbl push pop repnz push push and and add sarl inc je clc push pand ficomp loopne cmp sbb mov int3 cmp adc or loopne mov sbb ret test (bad) xchg inc inc fwait push out inc call jecxz js scas inc pop mov sub add push loope test mov sub push mov fisttpll loopne out add cmp jb mov sub lahf sti sbb pushl insl and outsl fdivs (bad) test jp fdivrs imul je (bad) mov adc stos aas adc pushf inc or jae fildl or icebp adc jmp in xchg and mov push pusha cltd movsb loopne adc test arpl (bad) jmp cmp popa mov je mov sbb out inc loope stc dec scas lods iret xchg aaa enter pop sbb xor or mov add sarb imulb jbe sbb cmpsb push jb es xor andb enter push movsl es out cmp addr16 (bad) mov insb push (bad) pop dec xor and push mov nop lods add dec cmp (bad) rorb movsb push cmp mov (bad) or cmp cmp (bad) jp mov data16 (bad) je test cmp xorl ss jo xorl cmp sub push add sahf push mov inc sar subl mov stos mov int3 loopne fsubs pushl sbb xchg push sub les pop jns (bad) adc stc (bad) fdivp or push sbb in ja std inc mov add sbb sbb hlt push subb call sbb sti sub inc pop and add (bad) nop sbb cmc jo xor push in pop imul and jecxz push cwtl dec push sub mov mov pusha or psllw bound (bad) mov add js jle cmp xchg push (bad) pop push je lock sub dec sub mov push xor in fiaddl pop fsubrl loopne pop pop pop (bad) (bad) fcoml sarb std pop mov clc or cmc jns jns les popl mov mov inc (bad) neg push or push (bad) (bad) jbe test call in pushf sbb dec or and rorl adc pop in and clc or dec pop loopne pusha test jne mov push fwait adc cmp pop cmp adc mov (bad) push push clc and pop or pop jmp xor mov xor sbb je or push push movsl mov das mov jl (bad) test cmp jne nop or iret adc out or mov fwait push shr lds jns fstl add mov mov add ljmp cmp and add jns mov jne sub push sub xchg jmp adc add ret nop sbb shl add shrb loop push add add out push imul xor in test jmp pop and bound pop inc es mov pop int fs icebp nop add sbb fs bound xor jnp push adc add rcrl shll inc or cmp out add jno mov pop inc adc negl inc jge mov jb test mov adcl adc sub ret adc std cld sub clc ljmp or cld dec movsl sub in or or insl jecxz ljmp dec call test ss loop shrl mov push add add cmp pop sub mov aas pop and (bad) lea mov daa stc sbbl sbb inc push rcll call push loopne cmp sub mov add add hlt mov fwait and popf out (bad) out add and push lock and xchg or lds adc inc push ret rolb jbe test dec bound ficom lock enter mov in movsl jne cmp mov or inc inc cld cwtl jbe and dec and xor inc int push orb mov mov mov add nop aaa js lock pushf adc mov orl leave sub mov cmp test cmp sti sbb mov and lea clc cli sbb xor push fwait and mov (bad) dec jae scas popf push jb out sub mov add bound mov mov insb pop fidivrl (bad) ja push add push popa xchg pop mov add aam or bound mov jmp add jns push dec pop sub mov in pop mov push cmp cmp (bad) push adc mov xor ss ds test xchg jbe or inc aas jmp inc sub xor fldt pushf test jmp and rolb and cltd push out (bad) pop bound fidivr push push mov push movsl ror lea jo mov add add in cmp jb out into std into je push (bad) movsl push jmp movsl inc aas gs push mov stos push stc sbb and or push aas rolb jnp lock sub sub sub test (bad) ljmp pop mov andl out lea mov push loopne mov cmp jo pusha pusha sub pop jnp xchg sub add jmp loopne and fisttp inc cmp push hlt jbe clc movb ret cs inc mov jge add push (bad) movl xchg mov out sbb push cmp or mov icebp pop mov inc call add repz mov inc mov pop or jle jbe mov cmp jbe mov out rorb stc mov mov add jae addr16 jnp icebp (bad) sub pop into inc push ds and enter icebp or pushl xchg mov les pop push fadd repnz inc cmp aaa inc loope std pop stos inc sub mov pusha sti rep andl pop sbb push loopne movsl xchg lds sub cmpsb popf push (bad) dec push push gs xlat sub mov adc call testb insb ljmp cmp sbb add and xchg push or or (bad) in xchg xor inc adc fbld mov call lcall or mov mov jmp add ret aaa sbb dec out imul ja pop fwait jno daa mov mov popf xchg fstps shr and imul and or pop mov rcl mov jge mov push pop pusha and test inc cmp fsubs pushf and jo cmp xor fstl mov cmc and pop push ljmp jnp movb mov pop cmc cmpl ret mov adc loopne movsl sub jbe sbb ljmp (bad) sub push cmc xor add and push dec je arpl pop icebp mov pop adc jp dec lods pushl mov xor pop push out (bad) cs jno jno stos mov jns inc inc mov cmc cltd mov xchg leave and mov add mov mov rcrb mov outsb sbb cwtl daa adc xor mov mov mov pop or adc cmp imul cld scas adc fadds jns adc call xor and aaa add sub cmp or lcall or mov xor (bad) pop pop pop pop es or icebp sub sub jb nop add mov or out mov add leave mov pop sbb sarb mov popa or jae jge (bad) xor outsl hlt xchg lock sbb inc add pop movsb and inc jnp loopne push mov push push scas sub clc or (bad) or das sbbb pop ds dec xor lods dec dec sti sub push mov push std pop data16 sahf add add jo adc inc or add jg loop xlat add shrl mov fcomp rclb mov adc push bound (bad) jb shl jmp push imul lock ljmp push dec sbb lods inc ds cmp aas test pop mov insb adc test dec add jmp cli test jbe inc pop fdivl nop rcl popf test orl adc lea add xor sti inc and sub nop add nop sub cmp nop add inc inc dec ret add and dec push and sbb in popf adc push out mov dec imul insb and pop cmp xor xchg fucompp popf decb popa je insl jg jge cmp fnstcw or inc neg fldcw fs cltd cmp mov in (bad) xor cmp xor sub movsb pop test xchg jl dec add and mov adc jge lea push mov ja fisubrl jae and adc or sahf or in enter pop xor pop fstpt push sub push das pop jl sbb pusha stos mov adc stos es sbb xlat inc dec and ss pop mov and push and shlb jb dec adc xchg cmp int3 lds adcb les outsl pop cmp in das mov add dec popa sub fcoml push push adc mov test pop and lea scas sbb stos sbb add arpl int3 mov aad push cmp pushl cmp movlps xchg (bad) fdivrs inc gs sbb aad inc pop push insb push jno push jp and sub imul mov imul add (bad) or jecxz push mov loopne sarb push fs xchg lcall je dec shrb push enter jne rcrb ret cmp je push push (bad) lret push push cmpsb out shlb or mov cld js or sbb xchg and mov incl add clc inc jae je push push add or jmp inc out ret cmp xor add out inc orl add mov add push sub inc and and add pop lcall cmp sub je mov push adc and inc sbb insl dec cmp sub sbb xor adcl inc fst xchg lock stos sub push or xchg xor dec mov jo movsl push adc jnp push dec add mov push and pop add xor pop mov scas (bad) ret mov adc mov jo aam mov jl nop push nop push sbb xchg in xor test pushl (bad) push mov and in ss sbb cmpl xor mov inc push es loopne pop adc or inc js push push sub push fisub and dec mov and pop sbb popa pop repz or out mov cmp popf (bad) xchg xlat mov sbbl inc (bad) out mov or lods add push nop cwtl (bad) loop (bad) mov jns sarl pop mov ss mov ret or push jno xor bound adc xchg lea xchg mov out push adc push cmpb mov test adc mov daa stos mov mov add add add or stos addb and dec insb cmp sub mov xchg sbb mov push mov and mov fisubr pop arpl fsubrs fyl2xp1 insl test (bad) and test sub push leave in popl push enter std sub jmp inc push into pop lock in daa jb adc or inc loopne pop mov bound mov leave es je lret shrb call xor test add in pusha enter pusha cmp stos cmp cmp or xor or inc cmp test mov and movsl cld test pop adc leave or rorb sub fcomps add add adc push dec lret dec loope jns fprem adc cmpsl dec fdivrp jae sub add inc sbb inc dec jmp sub lods ss lock pop das pop and insb (bad) and pusha cli xor or lock ds and imul add mov and (bad) xchg mov das lods push mov je add push dec mov jno xor jnp pop leave inc mov add pusha mov (bad) inc adc test adc mov and out gs lock pop jo mov inc xchg movsl movsl xchg adc cmpsb cmp ret out pop cmp add adc pop mov adc inc or pop add jmp mov jnp jg lea pshufw insl lahf mov jb jbe popl in jg or jo clc jecxz cmp inc jo push and in testb inc mov xorl and (bad) cmpsl and pop leave sbb dec sub pop faddl add ja test jp nop and xor (bad) jmp or inc jo jno rcrl or mov fucomp mov mov mov add add xor stos push cmc pop cld rcrb jno jns arpl sbb sbb adc add mov std inc push add xchg jmp sub ds or mov xor sarl mov adc xlat lds push jne ja loopne cmp js inc adc sbb mov test mov cld mov (bad) lcall mov inc icebp mov push adc test inc (bad) dec out add sub jecxz or cmp ljmp inc lock pop js leave inc scas mov mov sbb subl push push xchg cmp or mov push mov jb xor cmp (bad) ficom clc and sti cmpb add repz loopne andb loop sbb mov mov and js in pop and push (bad) push sbb adc pushl or adc incl lret pavgb jmp dec push mov add pusha outsl push xor jno or enter rolb sahf rol data16 add xchg nop push psrld mov cmc mov adc push enter push loop (bad) (bad) testb ret (bad) xchg cmp into add rcrl iret insb mov dec nop iret add arpl inc or push mov push ret push push xchg add jle (bad) fs rorb jno push loopne aas pop test ss push pushf lods jnp add popf push cwtl push enter dec js mov add mov dec (bad) pop movsb inc movsl adcl jnp sbb jmp icebp push outsl in add test out cmpsb fisub data16 stc mov mov fnstsw andl pop inc mov paddq mov mov adc push mov test (bad) cs (bad) xchg cmp pop mov decb ja inc add add inc jge add test cmp mov insb or inc mov (bad) mov or popf mov adc divl lods mov orb stos mov dec std and cmp pushf push push xor (bad) js jno dec ljmp inc aas xor imul adc xchg lods adc add je repnz push call and (bad) jo jl dec movsb nop fadd (bad) or dec sbb inc testb push mov or or lret sub push js mov mov ret incl mov testb pop mov bnd and jge dec pushf push jmp andl jle rorb (bad) or aam (bad) mov mov cmpl jo mov sub aad add enter addb xchg push mov xor pushf lea in test jb int3 mov sub shrl shrb outsl mov cmp adc icebp and mov pop mov lods pop mov mov pop or (bad) loope mov jp clc add dec sbb lea pop and push push stos gs xchg cmp fbld mov std or mov add mov inc fnstsw cmp mov lea cmp ja ret lret jnp fimul adc mov sbb push sbb or bound pop out and mov orl xchg mov mov loope pop lock pop pop mov cmp add and dec cmp fdivl xchg lret pop or notb add and xor adc mov dec push dec mov mov inc xchg imull clc lds popa mov imul cs mov xor int mulb cltd call mov call or inc sub insb je loop (bad) divb add dec cmp inc sub pop aad jg jbe pop and push cmpb jne pmulhuw adc ja cmp push mov movsl and push mov inc fs push lcall outsl ss xchg cmpsb shrb js pop push loop xchg inc pop and das pshufw stos out mov out pop rcl pop rcl fisttp int addb (bad) jecxz clc es inc mov cmp outsl nop mov mov adc xchg jns je push or mov in ret test lock jno iret xor xchg dec sahf add fxch cmp jne xor or fcmovb (bad) jne fsin push adc loopne push incb dec push movsb adc push and (bad) fisubr jp outsb jg out xor mov stos sub hlt push je push cld pop (bad) ljmp cmp fistpl jge pop rcrl aam jmp mov and imul mov mov cmpsl jl mov aas sbb loop leave add mov (bad) pop add dec add jno test das adc lock jl inc js dec (bad) cmp pop jge fiadd adc mov or cs out idiv subb pop lock xor jle jmp orl jno das or cs ja mov (bad) or ds add out jl adc sbb jae mov outsl test inc fisttpl cmp test (bad) xchg or adc (bad) loope jl fnsave popf lods lock and mov mov clts sub jne call dec push cmp jae pop jle dec subl (bad) pop jo xor stos mov mov push mov mov pop pop add or arpl dec cmpb adc mov (bad) dec or xor (bad) notl and add shl pop insb xchg pusha aad and or push or ja ret push adc add (bad) lock push and cmp adc outsb outsl push movl shrl js inc jmp fs adcb psubusb mov pop mov add test ja negb divl push movb xor aad add clc push (bad) (bad) pusha lods adc add shll gs in sub sbb inc or mov sub cltd and xchg dec sbb sbb push jl jae adc negl xchg (bad) fcmovb cmpsl nop fs aas push xchg jne cmp mov das ja xchg movsl lea cmp xchg add or inc cs scas inc scas push cmp pop in inc push push sub sub loope (bad) xor lcall pop cmp dec jmp lea sub inc das scas sbb push bound negb mov je ficomp (bad) out xchg or add inc jmp dec cs sbb pop mov ss sti mov jmp dec cmpb sbb roll mov xchg cmp xchg push sub testb or adc and mov mov mov test mov or adc or sbb fstl fcoms jg pop mov xchg or lock insl xchg mov or add mov iret jmp mov xor jecxz (bad) xlat aas je aad stos sub jno adc jne mov ficoml push mov inc add loope mov rcr cmp hlt push nop mov dec ficoml imul (bad) leave mov shr dec inc pop lock add je xor je out adc out push scas lods mov pop mov dec cwtl mov mov (bad) test or xor ljmp es xor fnstenv test jnp (bad) jp lods idivl xlat or ss adc cltd jnp idivb jno mov sbb mov roll dec test sub subl pop lret in enter add insb xchg sbb cltd ret xchg jo jo mov sub push xchg pop inc xor push mov ds outsb inc mov ret pop xchg loop fs add mov (bad) orl mov lds gs inc (bad) fstpt lock add adc dec lock inc popa add movsl adc mov sbb mov enter test mov mov (bad) jecxz mov outsb dec xor imul or or nop add rolb js jns adc test push mov pop pop adc sti sbbb jge fiadd dec xchg fnstsw pop scas addl mov into mov js jg sub fsubrs push push dec and in hlt mov inc popf pop test pop push mov lret xadd movsb js lcall jnp lds xor pop in push sub mov pop xor push dec push and lock mov clc hlt outsb daa push adc and mov cltd cmp and push addb add sbb and mov cmp je cmp je jge or cmp mov sahf mov and push jmp fstl (bad) or insb cmp inc inc jl test mov lea mov rolb andl xchg in pop or or jecxz sti je dec je push sbb or pop lahf or insl cmp pop or and (bad) jle xor lret into in or or dec lret xlat cmp das inc dec add add pop xchg cmp nop scas inc pushf ret incb add (bad) in aam je fucomi arpl push je or je sbb sub push mov pop (bad) lock (bad) ja inc or jmp fnstsw andl pusha (bad) jmp sub fild cld and adc pop leave clc pusha jmp mov add push dec cltd aam or (bad) jno pop push push xchg add xor icebp sbb jle cmp mov add or xlat add push cmp inc or and add pop mov or cwtl or jmp push inc mov add jnp xchg addr16 dec dec call xor jl cmp cld sbb (bad) mov iret adc mov adc adc rcr xchg test mov inc lret test xchg loopne xor ret sbb pop xchg mov es push pop pop cwtl fsubs decl and popa bound imul dec test xchg nop mov jmp push push or mov mov pop dec push es add xor jne (bad) jae sbb jmp adc dec jne mov mov ret daa out andl dec pop or dec adc add popl stos out mov test sub inc push sarl cwtl fs call add and mov jo mov stos stos sub ret aam inc push mov mov pop mov or xor fcomp int3 stc arpl test mov xor fs cmp mov push jp inc add sub hlt mov enter sbb jo push je push jo call jle inc mov dec dec fisttpl and bound jno push loopne inc sbb and loope loop mov mov cmp push mov and sarl cmp ds in clc roll sub push push xor pop rol pusha xchg fsub imul movsb dec cmp fs pop mov dec cli add addr16 push cld out add shr jne scas inc adc adcb adc leave jmp hlt lret rolb (bad) shl int test mov jg xor insb (bad) xor push and sbb lea lock cmc pop push pop sbb pop pop dec mov add and cmp pop es mov adc lock or into in mov test ss push mov add pop pop inc imul or dec in xchg ja dec fadd pusha dec push pop dec in inc adc push rorb and add mov inc sbb dec pop fildl mov pop xor test das push push add pop sub cmp lahf jmp cmp lea xor xor mov mov xor add sar mov or xor push sub sbb ret adc add and push testb push push jp mov mov inc pop (bad) ss (bad) lock cli cmp sbb add repnz inc sbb stc jne mov mov je add movsb sahf cmc mov sbb scas push push sub add ljmp mov jp dec add in mov mov faddl or dec mov xchg outsb xorl push and movsb lret fimull push add or (bad) and dec add or ficompl pop cmpsb inc sbb inc and scas xchg mov push insl adc fs push cld add inc sbb sbb imul les cmpb cwtl or cltd add or and rcr ret adc sbb pop aas imul loopne cmp mov push push push pop add in sbb test or jg ror fdivl jmp incb in jmp decl push push inc jo ljmp or sbb loope cmp mov push dec idiv lret add cltd (bad) mov jl dec insb jmp (bad) jne lret push xor xor ficom and or inc popl adc or inc leave push push js inc lock test sbb mov cmpsb push inc sbb pop mov add jmp pop adc jb dec push or mov lcall lret sbb lea outsl push inc push mov add jmp xchg and add xchg and bound pop adc adc mov sub test or lock pusha cmp sub push setb jmp or (bad) sub cmp fs mov push xor pop add mov jmp ljmp adc (bad) mov cmp pop add sub mov adc (bad) or sub dec rcrl push imull jae stos cmp aas inc dec cmp popl mov push stos jo and push in mov cmp add insb lcall push jmp dec jle jp pop pop test ret xor data16 or sbb je addb push pop outsl or add movsb xor or push pop std push pop fisttpll (bad) mov inc pop das (bad) xor js or imul inc pop (bad) call (bad) pop xchg nop add or sbb adc inc dec inc repz dec xor mov (bad) sbb and (bad) push lods adc lret adc and mov test fist outsl adc jbe sbb inc cmp or xchg hlt lods mov sbb dec jo mov ret xor popa xor inc cld ret test mov or ljmp push adc xor jg sar push lea add mov add sar or jle push cmpsb mov dec inc sub sbb jne pop or xchg push and cmp mov push sbb add add test outsl lcall ljmp add add sbb pushl jno rol imul test sbb xor inc (bad) mov ret push sub xchg negb pop jb inc mov xor push pop clc lahf addr16 cli fsubl push add cmpl (bad) jg sub mov mov andl je (bad) inc jle dec cwtl (bad) jb or mov mov xchg fidiv addb movsl mov test loope ljmp jne orps inc call jmp push pop dec and dec inc clc adc lods test push push js inc push and add cmp cwtl pusha cmp pop fistl cmp xchg pop je (bad) mov cmp or or or pop push add ja ja mov jl loopne (bad) out int cmpsl pop imul push test mov cmp mov aas pop (bad) mov lock add movzwl loopne sub hlt rol xchg cmp pop sbb mov push jmp pop (bad) je pop cmp dec iret les das clc test jbe rcl jl sbb pop add cmp ret rorb mov jnp in fcoml inc mov sbb dec and mov (bad) mov out adc sarl dec mov (bad) lock inc xchg lret xor sub fs roll es cs imul imul adc aad gs fildll dec push mov inc and or dec add dec test cmp mov or in dec dec insb inc jne cwtl nop (bad) add dec sub shl movsl pop jbe clc mov fbld jns push adc fiadd into push jle jg sbb mov pop addr16 sub or xor sub and in dec mov ljmp shld xor adc lods stc or xchg fnstenv inc add sbb clc mov sahf push shlb push or push add lods sub loope loopne or es cmp sbb adc xor and mov add fidiv lret jmp mov and xchg rorl push aas push jae inc stos pushf xor ret xchg mov xchg add cltd adc ja lcall test mov pusha xchg lea stos fidivr mov xor rorl pusha inc cmpb add pop (bad) mov xlat inc sub bound jmp sub pop mov fs out cmp add clc jecxz enter icebp and in adcb and jl push mov mov test lahf xor or sbb inc inc aaa test jb je mov clc loopw aaa push inc fdivrs xchg mov or sub icebp call add or outsl or or push add fistp and add inc cmp imul lods cli dec mov sbb sbb jg or andl imul pop test mov (bad) sbb call je js fisubrl lcall cmp push push dec adc out fwait iret push and jg push dec and push jge (bad) jg outsl inc or jbe jle les lahf out xor jg jg jg jo mov or dec jne rolb aaa (bad) dec (bad) sti outsl in add adc xchg cwtl inc out and incb shl dec or xor inc xchg and add adc or inc dec push inc scas mov push idivb or mov inc push mov shr adc roll les adc mov mov ja dec imul jno cmp jmp pop cmp push popa ret cwtl clc cmpsb outsb pop jl rolb mov push pop dec aad pusha lahf or add insb (bad) sti pushf dec daa jo ret push or xchg inc add mov clc std imul xor add sbb mov leave adc jmp push add dec ret test push adc aam das jmp jmp das sub lret and or jp (bad) mov and fadd adc push ja push nop or pop or inc call (bad) jge icebp or (bad) xor cmpsl or and bound xchg add shll nop inc pop and adc xchg push popa cltd mov clc jne dec ljmp push inc or adc daa or pop mov jb jne cmp mov lea dec mov add inc xchg xor and lock pop inc int3 sub repnz jne pop cmp add mov xchg test pop pusha nop pop adc lock adc sti or cmp fsubrs jl mov adc pop dec push pop addl sti jb cmp cmp xchg test xchg test (bad) lret push (bad) ds sbb cs mov lea cmpsl imul pop pop adc xchg xor sbb pop (bad) xor sub rclb and loope mov sarl adc scas or or cmp aam loop rcrb jbe popa hlt sbb or inc jmp pop imul cmc rcrb jbe iret mov sbbb mov lea leave or lods push inc and push loope sarb ljmp sbb ljmp pusha dec and jmp popa mov and and mov in cmpsb aas loopne call jbe push or repz out (bad) dec js aad adc int3 mov movsb pop cmp test push ret jmp dec out xor lea in shlb xor fnstcw arpl (bad) adc add js add adc fisubrl mov and push mov cmp pop xchg add into or xchg ss push mov cmp jecxz add inc enter rol (bad) xor mov mull hlt test or xchg add inc call fadds push jae cmp add jp xor dec jmp xor inc inc mov mov inc inc inc adc aam pop je pop es lea and pop mov mov or jmp add int cld pop in icebp xchg (bad) je int adcl add je test sub inc cmp xor mov xchg add into inc add xor cmpsb jp test pop cld into ljmp adc leave dec add or pop jecxz or and lods test je sbb pop mov fdiv les push in jmp mov add add cmc add pusha call cmp jae adc call jae shl adc lea bswap ss loopne mov ss sub movsb les (bad) push push sbbl jl sbb mov jne inc xchg push fadd ds lods fistp imul pushf push xor pop ret clc lock test sub push sub add call les pop sbb mov add add dec cmp cmp outsb jb andl fcoms (bad) sbb insb cmp or out sub push nop mov push push pop push xchg loop dec jmp mov lea or (bad) jle pop push sti jmp xchg sbb add ud2 mov and xor les in push sti add adcl out nop cltd mov inc dec adc sbb jo jno add mov sar or fcomp jge mov sti arpl add arpl pop je pop sbb daa andl subl jbe pop orb add or or xlat nopl into sub (bad) jb mov mov mov adc push (bad) daa lock jp out push loope inc in je or dec or jne test xchg xchg gs cmp (bad) and add jns shl and jns or inc push inc mov clc add call jl xchg out jmp push repz push dec inc sar orb jmp (bad) mov pop adc pop adc fsqrt add cmp roll or ds aaa cmp pop ds xorb into push popl push mov adc jecxz push dec sti add mov sub lahf out add dec jo add (bad) rolb mov pop mov and fwait dec pusha pusha rorb test inc enter inc es fistp dec out mov jp mov sub pusha push gs pop adc idivl rcrl subps inc add inc mov cmp jne mov adc jg rorb sbb add (bad) invd push push repnz fild test inc jp shlb adc lahf (bad) sbb stos or pop es jmp pop fs popa pop adc inc pop pop lret (bad) add inc mov add std inc shrb (bad) jmp arpl xor mov mov inc cmp adcb loopne xor mov inc mov rorl test sub dec fsubrl les lock stos fs js xchg adc inc loop lret sahf cs or and or inc xor (bad) aas sar rorb cmp je mov cmp pop jne dec mov inc inc add inc negb pop push fldz outsb fcompl fnstsw test jp xor inc loopne jmp sbb fs push pop shr jmp xor mov adc (bad) or iret adc mov das cmp (bad) aam adc push mov lods hlt shrl cwtl inc (bad) lods add and mov sbb fmuls je je jecxz mov addr16 lock inc cmpb jbe or imul insb sbb or jmp push pop sbb fcomps sarb lahf rolb sub es lret mov adc jb adc inc xchg scas xchg movb cwtl pushf and ficom roll sbb andb jp add movsb insb push clc (bad) repnz or lods fs add scas jmp and and add sub bound adc je movb stos mov aas dec adc dec jns enter pop in add push pop idiv movsl ror xchg call sub clc add inc jo mov punpckhdq popa add inc rcrl daa inc pushf xchg ret push (bad) or mov push testb adc and (bad) (bad) inc add call testl add into add jbe xchg jge xchg sub sub lahf adc adc adc idivb (bad) xor sbb adc add pusha sbb inc aam jmp sub into ret (bad) xchg inc roll adc mov pop or ljmp dec inc pop pusha out insl std js lcall fimull mov call pop xchg push add mov lock or mov xor cli mov xlat sahf adc jl dec pop test and sub add xchg aam loope imul lea loop and or mov dec lock rol ret or add prefetchnta jb xor xchg add sub sub and push or dec addr16 es pusha pop mov (bad) lahf popa xlat mov insb movb or or aas imulb ljmp loop or stos addb or ret daa aam cmp (bad) jne bound xor sbbb xor sbb js sub in jmp (bad) xor pop inc xor jle insl or sub shrb cli into fsubl or mov imul cmp xchg hlt xorl and ss sbb mov loop sahf push loopne sub mov repnz add out (bad) jge fsubrl shrb hlt shrd ret aam add add insb dec outsl jnp daa cmp cmp scas sbb push movsl xchg add clc scas addr16 inc and xor out and adc cmp add rorl sbb inc mov incb push sar fnop push push push stos daa lods xor inc aad jne lock mov push dec rorb and push pop icebp mov cli sbb js jg jb xor test sti jp jmp inc adc (bad) bound cmp and mov (bad) jb std add mov insb add sub sub mov mov push jg mov push add mov mov sbb adc into sub gs xchg (bad) fs cmp and push in mov sub in mov cmp mov popa cmpsl push pusha test sysret adcb push cmp test xchg xchg cli sbb cmc shufps movl and push jle sbb push sbb mov inc jnp push jmp lock sahf fwait jge sbb adc neg add jp pushl or inc or call push lods mov lods fnstenv xor stos (bad) push sub push jo pusha or arpl out push sbb fdivs add add and outsb inc pop sub push xor imul (bad) push mov push sbb nop pop xchg or pop mov pop xor sbb adc pop call cmpl pop push divb lods pop and push cmp nop adc out fsubrs dec sub push dec dec push out testb pusha xchg push rolb bound push push cmp xchg cmpsb sbb int3 cld jl loopne jge decb add inc or inc (bad) pop call ror push repnz fadds popf jmp xor rorb fstps or popa mov jne mov inc popl lods (bad) incl insl aaa cmp push or inc sbb int enter xor or pop adc adc test hlt adc popf (bad) mov add pop lahf mov scas icebp ljmp jb (bad) ds mov jle clc and xchg xchg popa dec push mov out in push push mov pop mov jg call sti push mov jg push inc adc and xchg dec xor pusha jo mov dec jne mov pop or je inc shrb jle adc divb mov push adc or sbb add add add sbb stos and cli pop jle neg cs add and add add test jbe xor push adc or es xor jg test dec inc push popf add and (bad) add test mov mov loop arpl movsb push and (bad) sbb sbb xor sub iret adc push adc add xchg push mov push lret push (bad) fstl mov pop and adc and sub or dec cmp negl dec dec insl movsl das inc pop lcall mov lods je dec xor push jne je out loopne dec mov or mov mov rcrl pop in adc lret push add ljmp pusha add or sbb fwait mov sbb fadds inc aas das mov pushl cmpsl dec pop jl cltd xor pop add rclb adc push mov fstpt cmp inc mov je add cmc enter push sysret sub addl mov andl les mov mov mov ud2 adc or adc push and fsubs imul cli fs adc stos dec nop ret lret or out xchg inc (bad) sbb les aaa pop push hlt mov dec mov sub sbb push lods arpl add inc dec add mov add (bad) or xchg jle rol inc (bad) imull inc subb inc aas or adc or stos shlb adc and sub mov add lods out (bad) xor fwait lock scas loopne xor es arpl pop das mov inc in (bad) fnstsw cld inc and clc shr sub jno or jno mov int out inc jns insb insb add orl test and lods cmp enter fsubrs adc and and or push adc sbb jmp enter xor inc mov gs adcl fisttpll (bad) fwait nop dec adc loopne mov movsl xchg mov adc add ret imul mov dec push inc lahf leave pop inc and mov out push pop pop xor adc lods add call in test pop inc push stc movb insl insl lret push clc stc adc or inc jge cli push out lea push sbb jecxz jmp and or rorb add ss (bad) pusha adc add mov fs push movsb lock push test fcomp pusha jb jb (bad) test imul pop imul mov or pop pop sti aas xor push inc (bad) testb or or roll loop adc adc pop push mov loop mov xor or call loop and cmp push pop std push xorb mov push popf push setns (bad) mov jo cli xchg xor sbb cmc int3 add sbbl push and add dec pop lcall push adc sbb xlat add test insl or (bad) incb dec add pop pop inc pop cwtl push inc xchg or daa or fldl aam je push push and xchg test push loopne add pop jmp mov mov dec sbb fstpl push inc cli stmxcsr fisub xchg xor dec xor dec push jg or mov sub es jg xor adc add xchg ud2 sbb je mov push (bad) ffreep popa nop lock jp xchg jl into and jb out mov push sub leave fprem1 pop pop adc clc fstp insb jmp dec sbb popa and daa test ret pop jb in sub inc scas xchg adc pushl or lock pushf mov inc pop rcrl or negl xchg fcoms sub mov sbb rcrl and inc add push into mov pop and xor test leave pop sub and mov outsl sub or cmp xor mov cmc jo lcall adc cmp sub add icebp sub (bad) fstl and rcll sbb or mov sbb clc shrl lods adc call add push negb incb jl push pop cmpsb cltd mov add out lea dec inc out xor pop leave and or or inc inc mov sbb push cmp jge mull push nop or sbb dec fcoml push push ds mov jne pop push in jo pcmpeqw push sub lods imul sub pop notl add jae inc or add mov adc dec xchg ss inc daa fimull or xor push pop and cmp fcmovnb div cmp je mov mov mov (bad) aaa add inc mov sub jl jo inc sub ret xor out popf xchg push jbe inc shll cmpsb adc mov cmpl movsl mov iret movsl mov xor add xchg jno jl xor push pop sbb pop icebp add push and imul fisubrl sbb inc shrb and push jle push sub andl flds mov inc xchg mov inc sbb sbb push jns pushaw lea push sub outsb or out add mov pop add (bad) xor pop mov push lea inc mov inc rcll pusha inc rcrl (bad) aam pop or out mov mov mov sub dec xchg xor daa inc sbb mov dec xchg mov jne ret mov xchg fstpt jns addb mov shl cmp mov mov les lret xor mov mov data16 imull push push pop cmp dec test test add insb decl lcall adc pop or cs sbb rorb (bad) (bad) lea cwtl xor add pop dec in cmp mov andl jb sti push hlt pushl call inc pusha mov or mov aam add mov imul push xor dec pop jns in sbb sbb pop movsl pop and adc mov add add (bad) rcll call daa add rorw (bad) or adc jo or inc jnp sti jbe sub push xchg sbb mov (bad) cld enter and jl lock xor sub (bad) pushf push add sahf pusha in adc mov pop and or and mov cld enter pop inc loop or xchg addr16 lock adc aaa pushf cmp jg mov stos (bad) sub mov loopne add mov inc pop xchg jnp loop sub push add push jmp add testb add test add adc add insl lret jno scas dec gs cmp mov movsl iret lea mov xor push roll add andl lea add pop dec pop lock int3 adc pop ficoml jp mov dec mov jmp nop loope ss je adc dec add or lret fwait sarb pop movsl sbb dec inc fwait sahf xchg and cmp ficoml inc mov cld popf inc or cmp ret xchg subl push fbld and sub push fisub mov and cmp sbb sbb adc push jno or xchg pop incl adc movsl add cmp jle,pt or loopne push or std sbb add icebp inc cmp jl pop scas int xchg add jno adc or imul sti pop sub (bad) stos inc shll push inc jno cmc (bad) (bad) jl push (bad) addl hlt sub sub mov adc ret xchg mov inc jp xchg jbe xorl inc cmp lea jl jmp add cmp jl mov sub movb les add ret mov leave inc adc sub sbb bnd inc and dec push add test or fisttpl ljmp adc stos pusha sahf pop nop and (bad) or clc aas dec cmp cmp mov and mov out (bad) mov insl loope mov repnz mov hlt pop push icebp dec je xchg fcom jns call jmp sbb inc lret and lret (bad) xor mov adc rol push add cmpl push cmp mov xchg adc mov pop inc pop fimull fs cmp xlat mov add inc xchg test dec jl pusha dec adc push and push sbb cmp fisubl adc adc and dec adc jne jnp or jl pop sub xchg rcrb xchg xor add lea mov mov jns hlt sbb movsl sbb es and sahf cmp inc and insl xor clc cmp sbb daa push jmp outsb mov add mov fisttpll dec and mov add sbb inc inc lock sub popf ret add adc aaa inc cmp pop inc add or add sub jmp dec out icebp add lock push fs ficomp and xchg sub mov call add test jp or aaa or lret sbb aam and les xor cmpl jle mov or inc adc add nop in or (bad) xor jp es add inc xor mov mov jbe mov jmp add push cmp lods out cmp dec inc leave jp adc push fcompl subl push mov cwtl push push ficom out in sub lcall lcall imulb iret sub lea push bound push int3 mov and pusha sbb out pop xor push rep popa pop add xchg fidiv xchg ret sbb or ret adc cmpl hlt xchg mov jb jle push sbb dec cld xor and movsb xchg dec das and nop sahf mov call sbb inc xor test mov fdivrs sbb sbb test outsl xchg mov orb (bad) inc inc mov sahf xor mov jmp pop and push mov xor xchg lock enter ds fmull fs xor insb cmc movsl jns add xchg sub dec mov xor insl ret inc outsb adc cmp or and adc or iret insl sub adc rorb in ja mov je mov mov mov (bad) sti pop (bad) test mov enter push lret scas daa add mov inc and fdivl jbe sub push insb rorb sub pop xchg mov les and cwtl lods testb push lea mov xchg dec pusha dec xchg sub fsubs adc inc sbb pop add xor and andl add dec ret maxps repnz cmp (bad) lret scas les in xor je fimull push mov loope mov js lods das fimul aas add dec jne hlt xorl xor jmp xchg xor ffree sbb jbe rcpps scas es mov dec dec mov es ss and adc pop sbb or bound and call sbbb push fwait iret leave xor cmp scas stos shr nop mov push push pop and sbb sub adc call dec push andl fnsetpm(287 imul sbb dec inc or xchg es add and test pop arpl xchg inc inc popa ss or adc movb mov clc inc inc pop add jne in dec (bad) or or test xchg test mov xchg lret into jle add dec mov xchg adcl mov and popa sbb inc add xor pop andl loopne (bad) out cmpl gs loopne jl mov xor sub push push sahf sbb and outsb lds fsubrs imul out fstps mov loopne fcmovne inc leave movsb in das and in sbb xchg push xor and subl xchg dec int pusha inc fs idiv and cmpsl inc enter sbb cmp insb mov jecxz sbb movb add push js mov adc inc cmp je xorl hlt loopne inc sub nop pop (bad) icebp mov inc xor fs jnp shl les call mov test cli dec cmp les adc pop movl mov push inc jecxz mov add cmpsl adc and push push into xorl (bad) outsl jl nop sbb and pusha inc arpl mov andl inc outsb cmp adc jne fst add mov jae loop mov dec dec inc jmp pop or jmp cmp mov popf add add and outsl pop lds xor xor dec das sbb push xor sub mov xor adc pop iret inc xchg add dec adc ret add mov insb scas mov jecxz test out pop out fcomps cltd sub jl or sti sub jg (bad) xor aaa mov push sbb aad mov add push out jl add sbb addb push repz adc aas inc hlt mov xchg cs push sub add jp ja mov or (bad) js mov cmpsb adc fucom das ss xchg mov add inc jns mov pop fs je xchg mov add pusha add and xchg fiadd ja mov sbb lea lret push adc and stos hlt xor xor dec aas and (bad) pop add clc mov fsubs cmp jmp sbb mov clc mov push inc jmp faddl sbb and cmpsb mov pop lods push xchg pusha push (bad) cmp (bad) aas nop add or and xchg push rol ror mov lahf xchg sbb fdivrl inc and xlat xchg or rolb or dec les inc lock (bad) jl dec xor and xchg adc imul rcll or and and adc pushf sub add jmp push cmpsb test sub push mov enter or or rclb adc cld (bad) push pusha mov inc bound and mov in subl inc movsb cli adc jmp pop popa sbb add popa aas mov xor add loopne xor test test push lret rcrb xor add jbe cmp jbe or notb pop test sbb or adc pop outsb sbb testl fadd cli out jmp (bad) mov pop jp add jo mov push ss int popa jmp movsl scas or cmp push testw xchg andl js or lea xor xor insl in icebp jmp or (bad) stc clc je cmp mov add cmp push (bad) push (bad) jne dec scas inc inc push lock sbb dec inc dec jbe adc lcall xchg push sub call mov in inc push cmp adc adc cmp pushf fsubs jb pop push dec adc adc xor cmp sbb add add loope jbe inc inc xchg divl arpl mov lret fistl andb mov les enter daa stos jns sbb dec arpl fbld lahf or sbbb inc movsl pop xor push add jmp cmc stos and orl xchg mov adc inc test cmp mov mov adc pop jmp and inc inc dec mov dec movsl scas leave les push xchg mov (bad) in aaa movsb mov sub jmp dec (bad) iret jecxz inc clc mov sti xchg rolb rclb mov push insb mov push and add pop jbe loope push pop mov (bad) xor jne call sbb jb mov jnp or test stos insl ljmp arpl cmc ljmp mov add fild lock inc and shll mov push xlat lret dec inc movsb sarb cmp mov add bound mov adcl faddl shlb outsl loop in mov dec xchg mov or pop xchg or inc inc adc xor dec inc (bad) pop pop faddl inc push sti pop dec dec cmp sbb cmp and movsl loope hlt or mov jno lods or sub push nop mov in daa lea sbb loopne in jne inc and jge jp push test je jno in test cmc adc out les imul loopne inc adc ret iret adc fild test xor add shrb push jne mov cmp mov fs or cmp out cmp fwait jo mov fstps fwait movsl inc jg,pt mov inc (bad) push add or or popf or aam dec adc push cmpsl jns inc cmpsl cs pop adc je dec ja push je rclb imul mov outsl andl scas sbb jnp scas les ret dec cmp push popa pop cmp xor sbb dec std lcall movb jg xor cmpsb mov push fldt adc (bad) in in (bad) push aas imul push push sub and sbb lcall xchg shrb mov aas icebp outsl pop ficompl push adc data16 mov xor pushf dec or outsl mov aaa imul scas inc xor jb clc push ds rcrb sahf ljmp jne loop mov fs (bad) cwtl ss cmpsb lahf je fdivl outsb fdiv sbb push fdivrs out std ret adc mov ja clc lea addl es xchg or rolb inc loop rclb loop mov fmull and add (bad) push push ret lret fadd jmp add cs lea push out inc orl xlat (bad) mov call pop sbb dec push mov ja cmp push jmp dec mov inc jg pop xor repz into aad ror or (bad) jmp insb add int3 adc call mov es dec leave lret loop cwtl add xor out inc iret push iret pop push imul inc or sbb test add inc push inc xor mov adc popl inc push inc test lock ja loop,pn add shlb mov and pop and shl push sbb or and ret or lock andl push or dec jp loop daa sub or fidiv push bound mov jne push pop mov das inc xlat xorl and and arpl and push shlb inc (bad) mov fbld push jb sub aad adc leave nop leave mov push cmp cmp xor sbb push les lods jp fwait add or ja rol (bad) cmovnp jne inc inc or outsl xchg movsl cs inc xchg adc fmuls popf inc xchg sbb js inc jecxz mov out pop pop add ret subl inc xor push sahf nop shll roll or jne dec add stos jno fcoml xor aad (bad) sbb in ss loope pop test xor xchg enter add mov xor and cmpb mov jmp mov xor mov mov adc subl inc inc jmp les dec movsl jmp lock sub aad pop and and xor lock out inc xorb aam mov cmpl je (bad) int3 dec cmp fdiv scas cmc inc ret scas pop inc clc mov cmp faddl or je std lods add fsubr jp jne iret or inc loopne xchg cltd outsb and lcall inc or in sub add (bad) inc lret push xchg sbb aas add loopne push mov pop sti inc sub (bad) fsubs inc push push sbb fisub jb in jmp mov cmp js sarb cmp mov xor stc lret enter subl xorb lods stos adc jge pop sbb leave pop adc inc dec push dec adc fwait cmp inc cmp pusha cmp jp add sbbb pop push sti sub push xchg mov push cmpsl add add sbb rclb arpl lea adc mov aas (bad) in xchg sar mul lahf popa je jmpw or sarl andb and mov in test xor ja int3 mov or dec imul push decb fidivrl cmp loopne shl ljmp fimul lcall or sbb ss mulb xor sub fcom imul lahf mov popf jmp mov inc mov gs call push popf jl test inc jne rcll push sub mov mov hlt cmp mov lea adcb lock xchg inc add xor add xor aaa sahf in push je cwtl sbb push pusha cmpsb cltd pop push push adc in mov into je push das aaa mov lods test test jl,pt and or ret add add add insl or fmull jne pop repz inc sbb add jns ret xor jne pop es mov push pop ds cmp jne (bad) jmp lret push add jg dec push repnz nop push add or imul insb and jmp push fmuls into test push test imul loopne test jb lods shl sub (bad) subl sub add inc push sub push insb orl fstpt sbb sbb jno in xor es test rolb add bound rorb xchg mov mov jae test dec popa mov inc and push repnz rcrb cs lret cmp push pop inc and data16 xchg ss sbb inc inc sbb fnstcw test imulb sbb nop in and pop push or sbbb rol dec push mov push jb xchg mov test mov or sub shr sub add push mov add jno and xchg clc push je xchg jg cmp mov mov adc push fcomps cwtl inc jb mov ret cmpsb sub std fst insl jp sbb pop dec pop sub andl popf dec rcr or cwtl ret pop (bad) lea aam arpl pop push test mov subl cmpl mov mov jl and mov (bad) rolb sbb mov loope pop adc mov or and cmp pop mov enter (bad) dec addr16 jno xor ret je adc mov adc insb rcr aam push les xor (bad) stos push jmp sbb daa aad dec xor pop pop dec jl clc nop inc push sbb (bad) inc (bad) into sub pop pop inc les jecxz push int3 add andb cmp cmp (bad) mov data16 xchg es push push iret adc lds notb es and push scas ret or jmp cmp scas in inc push nop mov jno xor pop pop pop pop add adc add push and mov dec (bad) push mov roll sbb icebp subb repnz add sub cmc adc xchg test jb adc enter pop inc jo add mov inc or push js mov ficomp mov hlt daa pop jb xorb push pop sarl add and pop mov adc inc subb adc jl jge mov jbe dec cmp movsl je mov mov jbe and jmp loope lret jmp pop add dec loope push in add (bad) sub pop mov inc dec jne sbb mov inc add xor loope jmp cmp in add cli lock jo or pop pop hlt or icebp sbb jmp inc (bad) das jl (bad) mov lods or add lcall inc add imul inc call (bad) aam add or pop pushf test test and push jp or jle jmp pusha cmp xor push cmpl jb test lds int mov cs popa mov leave sbb mov push or ret int push fs xor mov idivl xor adc sub dec sti ja add inc cmpl jne incl lcall jne enter rorb shl sti sbb xchg pusha sub push mov sbb mov (bad) sub icebp jp inc or adc das jbe pop loopne xor mov mov dec inc cwtl popf xor out test cmp out cmpl ret jns dec test nop test outsl jg movsl (bad) xor inc and jne xchg movzwl add mov push cmp jb mov mov sbb or fcom fadds test push rcll movsl lods xchg mov inc mov lds mov ljmp xor dec js and mov add ds jo adc or pop inc mov iret xor shrb dec fisubrl add (bad) xor loopne call push mov jmp push dec nop mov xlat sub cmovs mov jo jno pop adc jge sub add je mov xor ja and je mov mov ret push pop or sbb loope insb das inc jecxz mov dec adc and repz add cmc addr16 adc nop ljmp jo pop es insl cmc (bad) (bad) nop add sbb inc and arpl je dec repnz push cmp sbb add add dec push xchg in (bad) aaa dec in (bad) loopne sbb pop (bad) and mov jb jmp fprem jbe mov mov iret cmp sbb repz inc and cld push clc adc dec nop and cmpsl fistpl fldt xorl xchg shll mov add cli push mov adcl out repnz lea pop add fldl dec jb (bad) lahf adc add (bad) js jo jns fdivl out sbb sub push or shrl sub xchg jbe lea cwtl aam les addb add inc cmp lods aaa fistpl and add shrl hlt test sbb stos je xchg inc push aad push adc lcall mov adc int3 sahf enter inc dec call push fcom jge xchg mov push mov jge jnp leave cmp pop xor mov (bad) fild pop sbb call ret (bad) sbb fs push mov add fstp mov (bad) (bad) jb or pop xchg hlt inc lock add xor cmp jae cltd and cs hlt cmpsl imul addl dec or jl (bad) in push leave sub add cmp (bad) (bad) pop push push fisubl shlb cli and in into xchg testb (bad) gs xor and and cmp test lods andl pop shl and inc (bad) addb inc int3 out add sub imul outsb push inc aad push cmpsb dec out fadds add rolb outsb test mov xchg push dec or adc cli fildl and ja cmpb pop adc adc scas mov movl pop or xor jmp jne jg lock clc (bad) push fisubrl xchg dec je in daa mov sub lock test sub fimul mov mov pop in andl and inc stos xor outsb or or ret pop (bad) movsl xchg cmpb rcrb cmc rcrl sbb fstp mov xor add adc lods mov jge mov cmp stos jp push xchg jo es push mov jo jb faddl push jo loope imul loopne xor loop ds inc outsl add sbb fstpt mov (bad) add pop cmpsl mov addr16 inc rcrb or ds mov mov sub test push rcrb rsqrtps stos (bad) not popa lock iret push out jae cmp jb orb push stos or mov cmpl dec je inc les xor (bad) jecxz sahf push out sbb mov push xor cs push xor inc data16 xlat mov jle jecxz mov test push lret inc xor mov dec dec adc dec and sbb mov adc jne sub (bad) decl mov mov sbb aas imul inc inc inc inc fwait pop sub addr16 adcb or mov pop add (bad) mov mov cli inc adc jns cmp cli rorl mov push mov jbe addl pop add in inc sub and ljmp cmp incl fimull jb add cs fsubl add dec xchg dec loopne mov (bad) (bad) jmp bound jb cld negb add mov fnstcw call (bad) adc pop hlt add inc loopne dec movsl push jmp inc pop add jo mov cmpb andb je jl add hlt rcrb mov ss and xchg push hlt push dec push xchg pop dec sub bswap insb add xlat jmp (bad) shrl push adc pop sub cmp cmp xor jbe sub push test fnstenv movsl inc push mov xor cmpsl rolb gs pusha lock cmp adc and pop pop int std (bad) dec or mov orl push loope mov mov mov jo ja mov imull mov call in test (bad) jae mov adc sbb and pop ret jne pop cmc and adc in add pusha push test sub mov test cs andl imul push jbe push dec pop xor stos lcall cwtl push fdivp mov cmp ja pop cltd inc pop cmp adcl ret or xor push jbe push loope,pt push rol xchg ja lret jne jge cmp (bad) jns lock ja push insb stos roll scas fs (bad) mov popf mov pop xchg xchg dec adc nop rcrb in hlt push inc outsl add xlat pop inc inc add inc adc sahf (bad) ss andb into jbe jl and adc add adc jmp sub and mov rolb and and sahf xlat cmp jbe loopne icebp jnp fistp push cmp sub jle bound and xor mov sub mov cwtl into and cmp push movsl test in inc cmp pop push or adc jae mov or add add imul ss fdivrp xchg adc push push out loope loop and lahf mov push aam and fmul inc in jb pop push fldl pop lock pushl push ljmp and push popf pusha lcall into inc into outsl in pop inc clc call xor mov cmp pop fucomip and lea and push cwtl jne jne scas add pop mov int3 jno subb mov jno sub xadd ljmp inc fsub outsl jmp idivb add sub movsl fs push and jae add jns and mov push out jae popl incl sbb inc sub jb,pt and nop push sub push add daa xor add dec enter push xor xchg cwtl call add jbe jne loopne jae xchg (bad) xor sub or adc and mov cmp jae lods aas cltd xchg adc fadds hlt adc push mov sbb dec push cwtl (bad) (bad) sbb mov addb adc fnstsw add repnz add pop imul popa sahf xchg imul add xor loopne or in (bad) jae sahf cld mov in mov out inc dec sub lods rclb sti loope sbb sbb cmp add rolb or cmc xor and mov xchg popa mov inc dec xchg je lock aaa mov in in (bad) cmp and (bad) xor add xchg dec inc scas inc adc aaa aas mov or imul add xor cmpl push sub cmp mov adc jne rcll add loop pop mov dec jb addl xchg pop repnz adc mov cmpsb push pop scas xchg inc lods out add aas pop add adc imul test scas or and add and and lods rcrb add sbb jnp sbb rcrl and mov push and shrl jne loope cs lock xor jecxz add push es add and in out test rcrb and sub sub je fwait mov lret or and int3 mov mov popl jmp aaa lock rcr lock adc jbe mov xchg adc inc fsubrl or sbb pop enter lock bound push push and sbb int (bad) ds jge je inc adc je dec sub sub enter dec loop out pop mov jne aam adc add adc push xchg adc and popa fcompl adc jbe push pop xchg ret dec push pop mov enter setns scas andl cmp mov push mov mov mov repnz or mov xor decl je push aas (bad) arpl cmp jb shr or push int3 rol aam loope pop push inc roll sbbl pop out xchg push test pop sahf hlt sbb sbb inc divl inc rcrl ja inc fsubrl cmp js pop sbb sub sub and pop jno push pushl push pop fcoms mov outsb pop or mov push push mov adc add mov or mov test rorb mov popa xor cmp fdivl imul or pushf fcomp out shr movsb add orl inc add pmaddwd sub or (bad) ds je ja int3 stos push jmp jbe hlt adc fsubs xchg or (bad) dec mov and lret rcll decl fsubs mov cmp jle adc aad dec sub xchg sti pop add xor xchg mov jle hlt or adcl sbbb dec cmp (bad) xor adc daa or (bad) mov inc or (bad) and jo jns (bad) aad inc push call sbbl cmp cmpsl or cmp xchg (bad) sub jp or lret int3 aam mov and js hlt adc out (bad) call nop xor jno (bad) les call jo jae in pop or jbe or and es mov xor rcrb dec add xchg pop scas or add lea inc add out jno push jecxz add aaa aam out push int3 xchg cmp movsl inc mov rorb pop fildl (bad) es lock adc inc shrl in pusha dec fisubrl jb lret or and imul and inc (bad) mov or sub sub and rcl rcl mov enter lock push cmpsb out mov (bad) in inc push cmpl and cmp ds enter mov out sub push mov sub orl (bad) mov add stos sub push repnz mov jnp ss xor clc adc mov xor (bad) push push (bad) adc adc bound add sub rcll push xchg jo cld lret dec mov jne pop roll mov xchg mov or lods jmp xchg movb fs adc fstpt je inc shrl test mov push or pop pop add push jbe scas pop add or push or mov jo or ret and jb sub add ret adc out add jmp jo pop ljmp dec lret lret test mov mov addl add jbe sbb nop xlat cmpb xor test mov rdtsc fimul xor cmp xor dec add je sbb ss xchg loop cmpsb pop and mov and inc cmp push addl mov into push (bad) sub cmp mov ja jp inc mov test xlat mov xchg pop and or jle into (bad) lock lock jno movl ret sub dec ret adc out test cmp mov jl and mov ret xchg mov sub pop cmp sbb push loop adc jbe and xchg push dec clc (bad) js xor popf ficoml sahf and pop push mov push or dec cwtl push jl cltd int3 pop pop add int das lret xor lcall (bad) or jmp or sahf rcrb jl popa mov cmp and push inc xor loopne pop sbb mov sub push sub add dec adc push scas icebp dec add mov sar xchg cmpl add aam je or push aaa fadds push dec add push fwait adc idivb popa adc cwtl jb mov mov dec insl int3 loope inc add xor jb cmp in xlat (bad) jae xor pop hlt mov jne (bad) icebp fs fistl es ret jp push clc fwait add sbb or es push mov sbb xor mov mov aaa pop xchg ljmp ss add or sarl lea and push xor sbb xor lret bound dec fstpt hlt mov fcmovnb pusha inc sbb add mov mov sarb shrb paddd lods dec xchg cs imul addr16 shlb jle iret inc pop push and mov jle dec push ret add js push aas cmc sub xor rol (bad) and dec add and les and cmp mov adc sub or xor add scas out adc xchg xor cmp out xchg jle cmp inc pop add sbb jo mov or fadd add sarl mov daa dec pusha mov bound orb call cmp mov cli mov jae adc sahf jp jo ljmp inc xchg push fs cmc push fisubl dec int add mov insl xchg sbb xlat pushf and sbb xor test adc xor inc jb push ficompl jb sti bswap ss mov jb ds sbb dec push push dec dec (bad) aam sarb movl push push sbb push add cmp (bad) mov mov add push push pop mov enter xor inc aad jb or std sbb mov mov fadds pop or andb cli push sub jbe iret xor xchg (bad) push and xlat lock push shufps dec and jge sub push xor pusha or dec mov sbb sub nop pop push aaa mov lret adc mov mov xchg clc test jecxz cld xor cmp aam ljmp ret clc inc jne pop or or into mov jb js inc dec and shr dec cmpsl jp imul jo int pop imul and lds ljmp push pop pop dec insb test pop xor adc loopne cmp lock sub mov cmp lahf add (bad) push inc hlt decl sub data16 lods inc inc jb test imul pop dec fadd mov pop mov outsl adcl and mov and jecxz add or cs mov rolb std fwait and mov dec ret mov push add lods xor push push in and pop mov out (bad) rorl jnp add loop sub fsubr clc cmp sub lods inc jae dec mov mov int3 jnp sbb cli iret lods add xchg (bad) clc rorb cmp jne cmpl jo cmp inc adc cmp jne jl test dec cmp sbb shrb js mov mov add (bad) ss xchg jmp fwait xor daa pop test and pop dec xor loope pusha and movl inc test jns call pop mov cld cmp cs js adcb test or add pop leave dec inc loop push mov subl inc scas orb pop mov or push lea adc xchg sub push push lret pop xor pop iret inc sub adc mov pop and nop pushf jb rcrb nop push push outsb pop in push cmp inc scas dec xor push test hlt popf cmp mov fimull cmpsb cmp pop fistl test and adc or or and and fistpll daa sbb enter sbbl aas sti or scas push push push lret and lret in std mov cld adc stos scas rorl out push mov repnz cltd mov xor cmp pop insb sub add push clc inc ss sbb or icebp jbe flds (bad) cwtl dec and mov jb push inc push sub xchg push add xchg ljmp and dec pop fisubr jo mov add add and aam sbb add mov out icebp jle sub push jno popa pop cmp dec pop push pop cmp mov jge call push push push add pop icebp sub add pop fstps sti jae mov cmp push sub sbb cltd add jo push mov jle jmp jmp xchg ror lods repnz sub sub lret rcll repz add xor xor jecxz jle mov pop fisubl xor cmp xchg in xlat and add jg xchg es or push adc and cmc or int3 sbb inc cmp cmp pop mov push stos inc sbb and dec (bad) cmpsb ja fimull cmc cmp addr16 loopne loope notl jmp (bad) idivl or daa call int3 roll cmp cld dec mov jb fidiv push xchg into pushl jmp push mov out inc push sbb jb pop fwait cmp imul lock xchg mulb cs dec xor mov add call sti or jb and lods add cwtl pop push push or mov lret push (bad) push popa imul in dec sbb jae lock lock loopne pusha loope mov js ljmp clc ljmp inc loope je loop in gs movsl leave jae inc push cmp cmp add cmp add inc popf sub mov sub inc pop dec inc fistl sub cmp push dec pop push dec xchg test dec jle imul mov add push mov ret adc mov std push add cmp jecxz adc cld outsl or inc add test push fiadd ret loope sub shrb gs sbb cmp mov cwtl je push push adc pop lds jg ret add (bad) fimull test fmuls adc push add lcall das test pop add dec rolb xchg rolb addr16 cmpsl faddl shlb pop sub mov pusha test push jl or xor jg adc fldenv push push jmp cmp in jbe sbb or jo mov or inc or lods pusha js sbb ret sbb mov rcrb rolb lret mov inc pop pusha add lock push mov les pop mov adc addl dec lock movsl sub adc (bad) int dec jns outsl inc sub sbb shrl cmp lret xlat subb pop mov sub mov aam xor pop lahf xchg pop or test insb inc mov pop or or and cmp push pop jle pop pop pop xor movsb inc xor pop std dec cmp or or aaa out and inc sbb mov in adc xchg dec jae inc jmp stc adc in mov in mov mov adc xchg adc jae in add nop mov pop adc or cmp scas ficomp or je leave push dec sbb cmp pushf and sbb test mov mov (bad) mov fnstsw imul mov rcll cwtl fs loopne (bad) cs push xor je add add and cmp clc outsl add test xor hlt jmp cmp mov je adcl add sub or sub inc adc popw mov inc mov stos sbb popa mov or sub push sbb inc xor ja call sub pusha andl jno inc and push aaa sub rolb pop or test or jp jb pop fmul insb imul pop jmp adc adc add and jnp es loop movq jmp sub fsubr adc or cwtl aam sar or cmp addb imul or inc sarl sub sbb cmp rol adc inc jne mov hlt movsl (bad) out pop push cltd mov inc je test push in mov cmp or mov mov inc xor mov xor xchg pop mov sbb push mov rolb lods pop hlt cmp imul push cmp sub call sbb sbb gs sbb adc insl pop loop cmpl sub icebp push jp xor sbbl inc sub lock ret fcoms cwtl mov (bad) or adc into lret xor jle sbbb jne aaa sub pop jns adc andb inc push mov cmp je sub orl adc sbb fisubl inc mov mov stos pop mov nop hlt dec and in pop add adc jb addr16 mov aas jae mov inc in icebp cmpsb fs push repnz or ja or xchg lret jp or pop or dec hlt add or pop mov (bad) mov adc lcall ret push mov pop mov lods xchg jno xor jne add lods repz pop or sahf ljmp sub sbb (bad) popa lods insl (bad) mov sbb movsl sub in je data16 sub mov jg lea movhps or mov xchg adc (bad) jne cmp je adc add movsb popl push cwtl clc addr16 mov sbb inc add jmp cwtl cwtl std inc ret iret out dec fwait inc in clc jmp mov fnstcw jle (bad) lret testb xchg mov hlt cld mov sub jmp loopne fcmovnbe (bad) (bad) inc mulb inc mov loope cld loope mov cld imul mov pop (bad) and cmpsl push outsl movb repnz es xor js jmp or lcall cmp jne adc daa push rcrb jne dec add push mov inc (bad) xlat xor xor mov sbb out dec cmp hlt ret sbb mov push scas leave and fsubrl jge xor or or lahf adc pusha out pop adc mov aaa or sub cltd js inc dec lahf mov pushf dec sahf sbbl jo jp push andl and cmp jne lea aaa mov adc push fdivrs pop scas flds mov mov das incl in andl js mov mov cmp hlt pop insb fsts and pop sbb icebp lock test inc ror mov rclb cld or fcompl icebp dec insb popa push mov xchg add ds or add add mov lods ljmp pop cli test dec cs pop cltd mov popa jne mov push add dec xchg dec andb mov js xor imul mov sub clc mov loope cmp pusha mov cmp fdivs lock fildl sbb xchg pop push lock shlb pop and out fldl sbb or (bad) jbe sbb loop clc lods lret pusha add mov rcl add push sub jecxz (bad) pop lret outsb jbe mov insb cmp inc cwtl movsb subl inc cmp mov xor mov stos fwait pop cmc sub fdivrl push jbe rcrb sbbl xchg call lods faddp sbb (bad) sub out pop pusha cmp dec (bad) mov rolb cmp adc mov pop sub add fdivrp (bad) push or add loope dec inc insl adc and stos push adc rorl mov sub (bad) je xchg fnstsw inc into inc sub rorl lret and jbe fdivs decl and imul lret (bad) lock xor sbb adc xchg rcr mov sbb in xchg or sbb pop mov outsl bound ret add out mov mov mov sub mov cmp pusha scas push jo test xorl inc xor pop lods and mov mov fidivrl cmpsb pop lret push pushf mov mov mov lods push mov fld sbb inc push shll (bad) sub test icebp add add (bad) out inc test test xlat xchg push or cld dec orb cmp punpckhwd add mov push dec (bad) (bad) jo repz jbe sahf ret fmull push test lahf mov pop (bad) mov test add xor imul dec pop xor sub sub push and icebp fisubrl xor dec (bad) dec insb push add test aam ficom sbb and mov and sub jae test dec dec mov test jp pop jle mov mov or stc outsl push (bad) sub xor das sbb push hlt lahf mov ret pop mov fadd sbb inc xchg jl sbbl or jl jmp or cltd dec mov xor imul mov or pop pop lock arpl (bad) fadds add icebp gs jmp inc push jmp xor cmp sbb jmp cmp or sub adc in lock lds push push sub mov adc add arpl dec mov and daa push mov fnsave mov adc pop dec sub add mov lcall mov hlt test outsb popa inc and adc push jno addr16 ret jp sub inc or and or push and cmp lods rep mov test stc pusha or push aad xchg and sti xchg or test adc gs sub or add dec jno pop sub cmp pop sub dec test mov dec xchg ss adc xor pop pop popa push aam jnp xchg mov mov les jns mov jle push sub int3 sbb je icebp pop inc mov in mov cmpsl add cmpsl xchg sub jno and inc cmpsl mov jle dec sub jecxz,pn or inc sbb pop sbb dec cmpsl pop out outsl xchg inc mov lea pop (bad) mov rorb mov stos movsb sub cld test movsl inc negl sub cmp add mov (bad) xor (bad) dec dec popf mov lods or lret sub or mov movsl push addl mov pusha cmp sub rorl push cmp sub mov mov cli ljmp test mov inc xlat lahf mov subl adc xor inc insb mov ss jns jle (bad) pop imul nop xchg dec or sub xor pop mov xor or rcrl addl dec mov adc push or adc inc scas pusha inc xor insl xchg rcl addl fs adc jmp repz jb lds pop adc fsubs push adc mov add mov rcrb das lret pushw mov sbb inc jl fistpl sbb adc outsl sbb xor or pop mov popa jmp cmpsl push cmpsl add jne jne xchg inc add test shrb xor sbb loopne pop out adc add push jno lods mov mov jp push pop mov xor or mov in jmp mov adc imul lock leave ret xchg out sahf dec lds cmp (bad) jmp ret data16 or cld inc dec xchg test lds jb push push stos inc push inc push push push sub sbb push xor push cmp pop ljmp enter jmp cltd xchg cltd push jno jb xor and xchg mov add sub sub mov xchg and inc inc pusha dec push out inc push cmp cmp add and ret add pop xchg adc adc push cmp in pop add test xor inc xor mov in call push add jo cmp jo cmp repnz push mov or jge cli jg faddl lea je xchg sarb dec cmp lods jns lock or add add inc shrb jmp xor enter (bad) imul and lods andb ret jp lods cmpl loope int xor ret push jo loopne movsl mov es movsb jle xchg in jmp mov add cmp push stc mov jp pop ficompl dec sbbl inc insb mov daa pusha push inc (bad) pop jmp add sbb pop xchg xchg mov xlat jmp out cwtl shrl cmp test push fmuls dec (bad) inc idivb pusha pusha into jecxz addr16 lods xchg cmp aad cmp push fsubl sbb repnz lds lds push jne inc test stos and (bad) jne sbb inc sahf scas pop add popa sbb andl or jno pop mov enter movb and imul dec or ret mov loope jo inc pop ret and inc ljmp inc push xor ja xor movsb cmp dec mov loopne popa idiv ficompl sbb lds or dec arpl mov or inc push jle outsl add sub push add push xchg adc popa mov outsl rcr xor push mov adc push add inc outsb or popf outsb lods xchg cmp jne and or sbb push aas or andl add jo in push movl xchg inc mov jne cmp aad add pop daa sbbb xchg cmc xor mov cmp stos adc and or dec or stos stos lea cwtl jp jp leave aam mov xchg es nop xchg dec xchg jmp cmc mov ljmp and push mov sub mov jo bound lock inc pop stos or aaa xchg arpl test std pop outsl pop mov cmp pop jmp imul mov sti in xor lcall add xor cmova in ret jmp xchg in test into and test int add subb stos push nop outsl outsl movsb test je fwait mov adc aaa gs sub sub sbb jb rcr mov inc cltd jle mov xor sub mov xchg mov xor sub fwait ss out mov out and xorb aas push cmp sbb push movsb jp lock and jg push cli movsb pop idivl dec cs sub pop jmp inc mov xchg lds mov cmpb sbbl sub lar rcrl pop cmp mov (bad) je lea in cltd test lods inc cmp cmpb pop push mov adc ja push (bad) xor push mov mov dec call clc push sub (bad) testb cltd int3 xchg je pop mov push xlat mov add mov lcall ljmp icebp push mov sahf pop aam fidiv mov arpl xor add arpl loopne,pn es shlb mov enter add pop inc pop daa fs or xchg jbe (bad) fidiv dec cmp dec cmp inc inc andl dec ja and stos mov push mov adc xor lock insl nop inc test andl jo leave ja sbb add push pop outsl or mov pop jmp push or lea dec dec jl adc cmp ds mov out aam jbe mov leave je cmp jb inc xchg sub jno xchg adc pop outsl adc add or add xchg jmp nop sldt sub sub sbb mov push add add pusha xchg jne mov mov pusha push jo divl add add jmp pop jecxz rorb pop xchg leave adc xchg adcb sub xchg add nop mov add pushf push add mov leave loope sti lea push inc pop pop inc ds in subl mov imul andl pop jg xchg cltd inc insl push or lret add movsl add lock jnp loope cmpsl and cmpsb xor loope add shrl cmpsl add sahf outsb sbb adcb lds das add movsb lea cmc inc loope xchg pop lock sti outsl test adc pop pop data16 mov jns and xor push sbb pop dec in stos aaa dec jae mov movl rcrb sub rcl aam jecxz cmp adc enter sbb add mov xchg pop out add sub sti (bad) (bad) push jne xchg push popf inc add add sbb and shlb minps mov push in clc in adc lret push ret pop xchg cmp je fstps add sbb (bad) or push dec pop push sti jle jg adc cmp jg fmull (bad) sbb lret xchg inc jo mov xor mov ljmp fimull sub lods or ljmp adc add test mov cmpsl test xchg repz cmp dec jno adc into add mov and pop mov and dec call fs addb mov in mov inc or cld inc loopne push mov cltd out roll mov xor cmp jne mov js jmp std add adc push pushw mov imul stos ret sbb ret cli cmpsb adc stos (bad) push mov incl or or sub lock testb lea add ss (bad) (bad) cmpsb xchg orl ret (bad) sub js dec and stos fwait aam (bad) xor and stc or test sub sub add aaa test mov enter adc adc mov and ret lods aaa adc push fwait movsb push add push sbb push inc pusha adc movl out lea push ret bound les je sbb cltd push arpl cli jg push sub dec sub adc daa cmp lret test sub inc lcall movsl push add cmp mov dec test push dec cmp push jo lret pusha mov add stc and jo xchg (bad) push sub or popa fsts mov faddl imul push mov es cwtl push adc ss ret inc jae mov xor sub and cmp ficoml jge cmpsb mov pop mov mov xchg inc pop inc in lea aam push adc test inc adc mov cmp mov push push jbe mov jecxz jle data16 dec cmp cmp mov pop mov fnstenv shrl mov mov mov mov xchg loope push jle cmpb inc inc inc fmuls mov clc shrb test enter or hlt out and movsl je inc cmp jl clc pop inc push push push push (bad) xor inc xor cmp sub ffree or sub sub out xchg clc mov and out xchg inc mov (bad) adc xchg or dec je adc push jg clc push mov lea jns imul roll or push pop dec sbb pop xchg sub rcrl sbb rolb ret and jle test push (bad) push jbe add andl leave inc call cmpxchg and mov inc pusha inc mov pop cmp add pop dec ret outsb xchg daa cmpb inc pop pop pop in add dec xchg and dec fnstcw mov push inc inc outsb cmp fdecstp dec inc inc sbb sbb xchg lret mov rolb push jo mov xchg pop and inc pop dec movsb jb lods sbb sbb notb lods icebp inc dec cmp je mov test ficom cwtl cmp popf sub or ret dec es dec cs jmp lea test inc add adc cli data16 xchg jo imul sub nop ret mov inc lock push pop (bad) push mov add dec or pushf gs movb mov or repnz je mov push mov add dec pop inc or sub adc lahf (bad) cmp adc jecxz sub iret jo pop dec scas pop mov push inc loope push fimull leave sbb cmp add test jne jae ret dec rol sbb push pop fild addr16 mov push inc js mov imul push lods jl stc or jo or sbb dec xchg add mov (bad) or in adc bound stos vpmulhuw imul (bad) jmp imul pop shll fwait push mov add mov (bad) dec bound add xchg add sbb mov daa cld mov mov aaa mov adc dec and enter add stos mov and xor add cmp bound adc mov or mov or pop js movd adc ja jg add sbb push push pop push rcrl xchg stos scas adc xchg adc loopne adc mov out and je jb (bad) loop jmp invd or test push mov pop add bound fsubp lods sbbl cmp push cmpl push or addb inc add mov cltd dec jo add inc std cmpsl in and jae lea push sub sub and pop mov dec pop mov nop sbb adc push add sub dec (bad) sbb sbb and xor or sbb pop xchg or fdivrl sbb sbbb in fcoml sahf inc pop mov test xchg and add loop xchg add adc gs add inc adc mov icebp add add int push mov pop jbe inc and cld bound jl cmpsb insl lea and inc loopne (bad) lret sub xlat mov mov (bad) mov jnp xor adcl push add push xchg push xor lret sbb leave mov str aam punpckhdq sub cmp add faddl fsubr xchg dec outsl lret int3 ss loope push mov arpl sub push das mov cmp add or mov sub fiadd sub cmp push or je inc pop adc pop shrb add cmpsl (bad) mov xchg cld test fs or pop test push mov or push outsl xorl jae sub adc and fs push and inc or fisttp roll fdivs dec mov jmp repz dec adc and js dec jl loopne cld push mov and movsb pusha cmp dec inc cli cmc xchg xor cmp xor mov or lods dec cmpsb mov inc adc (bad) fmull in pop cmp or adc xor js and (bad) mov sub jb call mov mov addr16 mov test sbb jge add and add inc pusha loopne outsl push leave push inc and pushf pushf or xchg fsts mov scas and xchg cmp sbb jecxz call lret ss nop push pop loopne aam aas bnd cmp or lds add (bad) adc mov inc dec stos push add adc and sbb mov insl sbb in xchg push je outsb repnz jnp mov adc dec rcrb mov and push test mov or test ss sub lea mov dec mov mov sar dec jecxz je imul mov das push or ret jb mov sub xor fnop push push jp cmp jns sti fnsave push push jbe sub adc and or pop dec jmp cmovb push inc cld pop fnstcw out mov fstpt and adc popf pop sub lods or mov or in fisttpll jp mov (bad) fwait mov sar rol mov and xlat lock loope mov pushf and fs push fxch iret or loopne jg and rol mov mov and in or pop int3 out (bad) or movsl js fadd adc neg jge fldl fldz ret or bound test (bad) shrb aad ret add faddl pop pop in in leave or pop pop faddp test pusha jge jnp xchg jae mov leave ret add (bad) lret js add loopne (bad) loopne push arpl nop sbbb adc add add arpl (bad) xchg xor and mov adc jp push cmc gs add hlt add add insl or add mov frndint fsub jb pop pusha fsub f2xm1 pop mov std fstp ret movsb inc push imul add icebp fs sbb fldcw test mov pop call sub and push ror fldl and rorb lock movsb enter or add or fldt xor or fcoms ret outsb cmp pop pop ret adc jp inc cmp xchg loopne in arpl fdiv adc cli adc pop outsb sub cmp les add mov cld fwait jmp xor mov or dec jb out std jo mov fcompl stc jle inc (bad) jae fmull push inc pop ds or jbe push jmp add pop adc inc pop cltd jae test test add adc cmp mov sub nop jne fcoml pop (bad) syscall out adc inc or cmc jmp mov sub pop negb and push mov inc stos ljmp and fbstp push imul push sbb or ss mov inc sbb je pop dec dec orl out adc iret push (bad) sbb movsb popa add sbb in lahf push and sbb dec and arpl xor test and inc jne inc adc adc and inc mov outsl (bad) push sbb fadds jo in (bad) rolb cmp je movsl push adc mov jecxz cmp (bad) rol mov mov push outsb add mov clc and cmp std and add adc dec call mov (bad) mov push aas jp mov push dec outsl adc add inc xor sub pop clc (bad) into jne test dec or daa sbb rcr (bad) sbb or dec lock pop xchg in adc sbb inc jmp jb sti (bad) sar popa out dec push sub incb shrb cmp pop fs nop jns mov popa daa sbb fidiv arpl jle mov add fcmove adc sbb or or or push jl sahf push cmpsb sbb lret jmp inc pop jno pop xchg mov outsb mov jp pusha pop xor loop addr16 xor rcrb push in push pop push inc jno mov aaa xchg lret xchg cmp inc dec adc xchg (bad) sub sbb js popf fs sub rolb push js enter test imul add jbe jo dec lock mov in fisttpll or movsb jb pusha (bad) dec sbb addl mov cltd sti js jg dec iret mov rcll push add add and jne add pop xor mov jl sbbl call inc and sbb mov sub test dec loopne inc dec cltd and mov adc mov sub push and cmp notb push call fnstcw adc notb cmp mov xchg fbstp adc or into mov add mov (bad) xchg into jns sbb mov clc cmp jmp push lar add dec add cltd fdivr mov and adc add (bad) add in mov popa add jmp xor mov (bad) repnz adc hlt push adcl inc aaa adc lahf clc push mov adc add mov xor xor test jo push (bad) mov inc ret test cmpsb fs or call frstor loope aaa fwait lret push jb adc add mov push pop sarb push inc fisubl addr16 fwait sub jmp push or pusha adc out inc decb dec call dec jle mov mov call mov dec or push mov xchg nop mov sub cmp xchg (bad) andl cwtl (bad) xor test paddd push or out xor sbb cmpsb add add xlat add insl add add add leave xchg (bad) xchg push push push sar or pop in jg bound add and or mov inc cmp test adc ret inc mov jge push pushl adc cld pop in fistpl nop sub je or fst or je dec fnstcw mov pop nop nop jmp cwtl xor and punpcklbw loopne rorl mov add xor pop push fsts mov pop (bad) int3 cwtl sub dec adc sbb fildl adc sbb jne,pn outsb add inc shlb xchg mov fiadd lcall bnd hlt pop mov inc adc fsubr fnstsw push pop ret push aad xchg add pop mov or add and cwtl xchg or jl sub adc push adc fs add push ja mov lds pop and inc cmp roll cmc out xor stc dec push add popa push ret or and jg dec bound inc push or and sbb inc ja jmp stc jb mov shlb add mov inc pop addl aam test dec gs loope rcll dec or je mov je push mov mov adc dec and jle popa ffree das mov loopne daa push xor cmp cmp shr imull out sub xchg (bad) inc dec rcl mov sub dec fs and push repz mov je xchg movsb and aaa loope mov add in push add scas movsb bound dec jmp lret les push lock push mov dec lss mov push mov lret and mov adc adc dec add cmp mov mov inc cmp or mov adc mov jb mov jb or lock add pusha (bad) push xchg ret pop mov xchg xchg mov cmp movsb aas dec add inc sub jbe lods invd call cmp movsb daa adc nop jle adc adc xchg add mov (bad) call imul test add fwait inc ret xor hlt stos out mov cmp add data16 out pop pushf ret and push movsl stos (bad) xor jmp mov push push loopne sbb mov cld lar shrb sbb mov inc add lahf xchg or push daa jmp push mov add or xor pop push nop lods jle dec dec jne mov test je sub pop xor enter and in sub shlb sbb sbb xchg adc add pop aam out adc pushf std js add sub add adc ja push push push or pop mov push fcmovne and pop sbb lret sbb adc push sbbb or jg cmp sbb xor mov es mov arpl xchg andl sbb imul jae leave adc js stos in adc cmp lahf adc jnp cwtl loopne lahf fcom pop icebp or cs inc dec or inc pop and rolb mov mov je hlt or xor push ret adc cmp (bad) xor or (bad) xorb xor mov imul mov adcb push push (bad) and mov pop sub (bad) sbb (bad) push sub sub xor xor movsl dec fcmovbe lcall lods sbb inc movsl imul es dec lcall jae dec movsl push dec push and movsb es pop dec and aad pop dec movsl pusha dec movsb sbb push xchg jo dec ficoml dec lods sbb mull dec lds ds xchg aas mov in xchg mov nop inc cs repnz sub sub pusha mov popa gs mov push xor or push loop xchg leave aaa insl test add shrb les cmp push sbb test inc repnz sub dec cs fsubrs mov fsubrl loopne sub xchg lret nop in call cs and aam xor inc xchg stos pop xchg inc mov aaa and sub lret nop push dec add mov or dec popa or dec lret nop pop xchg dec adc in mov mov shl xor repz xor pop and mov sub sub cmp gs xor dec cs mov jb xchg outsl cmp aas inc inc lret aad inc inc inc mov xchg inc dec sub nop pop sub pop montmul cmpsb xchg push mov add pop mov and scas daa loope (bad) repnz push dec xor jp fwait cmp (bad) xchg cltd addb inc arpl imul cmp adc ss and and sub in in xor cmp imul fldt cmovs xchg xchg push push pop pop xchg xchg xchg xchg pusha fs xchg jo js add mov test mov xchg cwtl pushf mov movsb test fsts inc mov adc enter xor fcomps loopne fs dec es es lock clc fmull fs jno add (bad) add xchg dec cmpsb dec adc cltd fs and cltd fs sub xor fs dec cmp push (bad) dec es dec gs xor mov push adc xchg dec pop pusha mov pop pop dec lods add inc push mov insl inc push mov and push adc and enter cli adc sbb sbb jge cmp pop xchg cs paddd mov xor push cmp pop int xor push cmp sub in leave in push xor aam xchg scas cmp xchg dec sub jnp adcb sbb jge mov fnop (bad) mov push stc adc iret push les (bad) xor push mov popa fmull outsl push pop aad pusha hlt cmc movsl mov pop or jmp lret mov xchg push sbb fimull cmp dec enter fprem (bad) lods mov ds push add lock fmull dec lcall rorl or mov inc xor sub mov rcpps cs (bad) notb cli aad mov sti pushf xor cmp sub push sti xchg xchg pop jmp and je jle call jmp mov add add push or sbb dec js jl add loope in fcoml adc xchg lods and xlat pop mov jecxz push pop jp pop mov pop gs push mov mov sbb cltd ljmp push jae and in pop adc sbb in sbb and and cmp cmp leave in lret inc mov scas call dec xchg jb bound and (bad) (bad) mov ret loopne dec lea xchg call shrb sub adc and sub and clc sbb and push and imul insl push sub push sbb rep xor push daa sub or xchg push movsl xchg ss sub push sub xchg pop shrb sub imul pop lods dec and push lcall add push test addb jb or orb xchg cmpsl dec js cwtl clc add icebp mov adc test sbb push or xor scas mov mov fcoml test inc xor test stos add xor out and add jmp rcrl sub movsb mov cmpb sbb adc pop rclb lret push lret add adc popa add subw push fcompl mov mov xchg sbb mov push nop outsb inc xor push data16 dec mov adc movsb jmp push mov cmp aam xor les in imul fcomps insb insl mov fdivrl or jg push push jbe outsb add dec sti and adc popl sbb add add inc insl repnz push or aas rcl (bad) adc sub sub mov rcrb mov cmp je pop out mov inc jne addb cmpsl adc out or push or insl adc into push push mov jp mov in push ret fcoml mov push gs in or (bad) jp dec cld cmp roll adc mov nop std outsb (bad) or sti or push push push jp xchg sub pop add inc mov mov imull dec cmp add cmpl mov mov sbb mov mov enter in push adc outsb out je adc imul or add movsl loopne lea aas sub jle add mov xchg push or push and adc in or negl pop add aam lahf push mov mov mov add lock cld sbb xchg test call xchg leave xchg and shrl movsl mov rclb (bad) les enter adc cmc lcall mov pavgb mov aam jmp mov lods aaa pushf and dec rdrand das int sti add (bad) int3 adc rclb mov push in stos stos lahf inc add dec mov dec pushf movsb mov leave cmpsl jge sbb inc (bad) out add and (bad) icebp rolb xor or lret sub sub sbbl lret inc xchg adc inc insl mov call test lock cltd sbb lea pushl addr16 (bad) hlt add or or nop test cli cmp push sub inc pop or mov fisttpl jle scas fildll add xchg rcrl jge add inc adcl hlt push frstor sub jnp or sbb sbb or outsb sbb (bad) pushl lea cld leave ret push adc pusha add push ljmp int or xor lret data16 sti stos cmp adc dec sbb jmp (bad) pop inc ds lea inc cmp ja add jmp sbb push add mov out je sarb fwait js je movsl aas mov mov inc rcrb or jmp or andb jae daa jmp xlat xor loope mov or push test push add and add mov inc and mov push fistl pop mov (bad) mov xchg add or loopne popa and inc sbb xchg sbb inc add cmp ds mov test jmp out and dec inc or sbb shlb xchg add bound pop or mov push pop cmp add xor push sbbl test or or pop lret (bad) in push mov or in add pop xor imul or sbb fnop jmp ret mov dec jbe push sub push or notb sarb jecxz sbb mov push sbb push jne jno test ret inc (bad) (bad) or mov push ljmp je test inc xor add xor inc pop loopne jl cltd cmp (bad) sbb je pop daa sarb mov dec jne aaa das mov push mov nop popf sti aam repz btr push fcomps arpl lds sub sbb and mov pop cmp push adc xchg push notb add repnz sub push push mov xor loopne adc jp adc inc mov dec insb in add cwtl (bad) mulb add addr16 push add pop sub and or cli add loop cs mov roll or out pop inc inc sub pop ret int xchg adc and add add cmpsb orl call idiv out (bad) dec push push cli xchg insb add adc or roll fcomip mov inc addr16 push cmp adc or lods or add (bad) jl inc dec push push xchg dec dec jns,pn mov test jo push adc je xchg cmp sub lock loop sbb xchg fs mov jecxz lock roll jmp (bad) push cmp outsb daa rolb sbb popf mov dec jno sub add jb mov add cwtl cli (bad) lret jmp pop and adc mov leave and mov pop ret test sbb sbb ficompl mov cmp ss pop or hlt loope loope cs mov lcall out jns rcl imul lahf test xchg daa add push icebp and andb adc adc mov adc mov andl push mov push test in and add je adc push mov repz adc ret (bad) int3 lea lock in fwait movsb pop add mov add jecxz ret rorl mov inc cmp je push add xchg enter mov xor iret push push gs lcall or inc scas negb xchg sbb cmp push repnz cld add or enter or mov add or lea xchg xchg or inc scas je push or rdmsr mov rcrb pop adc mov adc cmp in adc int (bad) mov stos inc push stos cmp pop adc xchg enter adcl and pop lcall sbb pop push repnz sbb sti dec mov cmpsb repz popf fdivrl cmp mov pop add lcall sub jns sbb addr16 sahf push pop ja sbb dec sahf push push inc pop pop add (bad) divl ljmp mov (bad) sti addl sub js xchg jbe cld dec mov mov push in imul repnz ret dec movsl adc in in sub mov push or jns cltd cmp aaa insl (bad) in call adc mov dec fsubrp cmp cmp xchg ljmp addb or in in xchg enter aad in cmp mov jb iret out out xchg out lcall lock jb inc lock dec icebp cmp pop mov repnz adc repz in std hlt hlt imul (bad) xchg (bad) std cmc cmc cmp cmpsl div mov and (bad) pcmpgtw xchg clc xchg in fmulp aas stc cmp and mov add cmpsb repnz loopne or or insl cld push push inc (bad) jne repz leave jnp std xor sbb add imul clc mov test popl push lea add rolb add add jecxz mov push shl xor in stos enter cmp push or and add aam or in xorl xchg scas inc repnz push cltd (bad) sti mov cmp sarb dec or aad xchg daa in cltd arpl and sti jmp sbb nop cmpsb out out out mov xchg lock cmp bound dec jae aas repz scas and xchg push inc jbe sbb stc fstpt xor (bad) or mov aad imul aad xchg xchg clc cltd jb shrb cwtl cli xchg jb wrmsr sti sti sbb sti or imul push xchg sub test sub mov test stos in add dec cmp push mov (bad) dec loop xor arpl loope in and clc and push (bad) arpl leave and out fdiv dec pop push pop out mov cmp pop sbb or mov sub into push xchg pop notl cmp inc or sub mov je leave or mov out loope mulb add icebp (bad) icebp xor repnz pop push xchg inc xchg repz sbb or adcl stos or push mulb mov mov push test cmp pusha (bad) divps cli adc je xchg cmp test xchg jo loope cmc sub insl sbb shll dec push xlat inc dec stos add push (bad) data16 test dec insb pushf scas push add push mov outsl jns mov repz push loope pop pop mov jp loop pop push push xchg hlt cmp jo imul adc (bad) xor mov cmc sub lcall in and paddq mov rorl int push call test int3 cmpsb jmp push and insb repz repz into push cs xor mov pop xchg adc mov add cmpsl cmp rcll test icebp icebp repnz (bad) stc cmp mov jmp repnz cmp hlt push hlt paddb test or cmc cmc je mov (bad) icebp mov notl push mov push mov clc or sbb scas add dec icebp xor andnps cld mov and jmp out lock mov jecxz fistpll add mov lret pushf or (bad) push sub or rcrl rol mov cmp aaa inc cmp cmp ret mov adc mov pop mov add fadds cltd pcmpeqw addr16 xor jmp xchg inc and fdivrp cmpsb pop fcmovb and loopne lahf add mov ss pop imull sti pop push daa push repnz iret repz cmpsl cli nop out mov int mov sbb icebp (bad) cmc cwtl stc sub xchg push aas adc cli or lock hlt mov jae xorl ror out (bad) in push or stos out fs int3 or or pop ret add or leave orb iret (bad) push add push or or or lahf movsl sub insb orl xor adc ja sbb aaa sub sbb movsb inc dec jns inc lcall loopne sarb add or lahf inc mov inc pop add sub inc mov repz sti jbe mov ret add jmp sbb push add dec (bad) cmp leave sub inc sbb push sbb mov push ss mov mov sub jmp (bad) rcll (bad) adcb xor lods in test popa (bad) jg std hlt mov push push sbb imul ds add push push and adc jo insl rolb adc rolb xor inc out push mov movsl flds arpl push jae pop sarl imul sar adc popa jnp fadds bound push jg jp push fadds aad xchg cmp (bad) or push pop dec jmp lahf lock sub dec push sub popf sub (bad) mov sub inc sbb iret pop xor rclb push in mov fdivr adcb add pusha in and or dec adc or add je jmp add push inc add push adc add test pop add sar or loop repnz jb jle outsl push cmp inc dec or insl enter adc imul add stos xor and push ret jle and mov dec (bad) ja add shl or add push add or nop and add or lds add push add adc pusha add add or roll pop imul cli add add sbb imull icebp pop push test cwtl and je test dec fcoml sbb cmpxchg mov inc je mov out add xchg loop neg dec cs loopne cmp add (bad) (bad) test xor and or adc ret xchg and orb adcb inc (bad) je jae popf lock push mov movsb cltd shll mov cmp mov add je (bad) dec and mov sub push je inc push pop mov mov movsb ds push andnps js xor outsl adc incl rcrl cmp hlt testb je jno cltd es shll lidtl cmp adc mov mov (bad) jne xor push shl out mov or mov cmp jb or sti std jle ja add jmp push push jb or ja and jmp pop lock inc sbb (bad) push mov adc out pop jo cld es sub je xor mov in ficomp mov div inc dec mov jl dec dec dec dec xlat adc enter mov into jne or and jno sub jp dec xchg mov pop dec jp divl dec xor push jmp mov xchg dec mov nop add js rcll jg (bad) outsl loope hlt pushf jne sbb dec pop dec clc movsb mov xchg add or or in fildl push sub push ss pop jle sub push xor and add pop add pop (bad) mov sbb enter rcl add inc jo and jmp mov push lcall mov ljmp jne and push ret adc xchg or call dec ja out or sub sbb mov pop jg mov mov jg push sbb mov inc bound lret ret out pop in push push leave xor cmp add test sub mov lods rcll push cmp add mov nop xor or mov nop push js cmove adc inc jmp aam cmc push in mov adc jns or add push or push push add stos mov or xlat dec orb or push push pop pop push dec pusha pop lcall fadd jg (bad) jle jnp mov enter (bad) and mov mov loop lods mov and adc or (bad) repz mov adc jne or xchg inc rcll cmc jne fldl jne dec bound dec inc pop les adc sub push jae sbb fistpll mov insl dec and rorb (bad) bound or orb sub gs cmp mov (bad) imul (bad) ret or mov (bad) mov cmp rol and cmp cmc sub push or (bad) push ret pop cld lea mov test nop sbb addl push pop jne pop add push outsl ljmp mov mov push sub and add sub add aam xor or imul sti andb jne sub call add pop mov add call imul sbb daa dec and add sbb inc or (bad) lock inc mov pop pushf xchg sbb sbb loopne sti add sarb push ret rcrb mov jle dec add outsb or xor sub jmp mov adc cmpb jl shll (bad) outsl adc incb pop rorb aam push call pop push icebp sbb sub adc or mov movsl pop mov dec and add push test sti das and sbb adc inc ret ret add xor jg and cmp jb roll sahf or mov push mov dec add or cmp and rorb push dec ss mov xchg loop fprem pop add or add add mov js (bad) je mov pop lds ret mov inc or mov inc cld jmp addl enter add push jl xor add cld dec mov sbb pop mov sti or loop add mov (bad) clc dec (bad) pop adc lea and jo rol pusha push rclb mov ret movsl outsl add push sbb mov decb movsl jl add sub sbb (bad) pop add adc jge aam push dec jns adc test or xchg call add adc adc jmp enter cld lock je loopne inc mov or imul mov inc or cmpsb hlt add shl pop dec dec sbb aam adc fdiv js mov insb dec and mov andl dec out jg jnp inc in cmp or insl add fdivrl mov jmp or (bad) int add ficom ret sub and mov or push xlat push inc dec data16 (bad) xchg fadd inc dec popa jae dec pop push lea sbb inc dec andl (bad) aad jge mov int3 and pop adc movsb ss jmp or fs and aas ret lret mov sub std cmp daa mov and xor jl add xchg jnp lret outsb lock movb pop cmpsb test mov lock movsl add leave xor dec mov ss imul (bad) adcl add std or inc lea pop cwtl pop sub add rolb mov shl not test cmpl (bad) or repz std outsb add mov out pusha lock mov inc adc insl pop sbb jbe dec mov add in and and inc adc push and add dec jecxz dec cmp or ds inc add hlt dec mov (bad) dec jo jns xchg flds cmp lock xor orl pop add fcompl jns sub orb inc roll ret stos inc sbb (bad) js lock ljmp xor sbb cmp mov movsl jmp add das pushf add inc add pushl rcrl push fdiv mov lea push sbb jb and fidivr add ds push or mov rcrl pop mov add shl je lea push pop sub pusha sbb xor or xchg xchg or jmp push and jbe push and loopne shlb faddl add and out test addr16 sub cwtl rorl loopne rcrl dec xor mov push cmp inc xchg loopne cmp pop adc js add push (bad) fidivrl aam test mov dec jns dec aam sbb inc inc push push mov hlt push aas mov or mov sbb inc mov sbb (bad) adc addr16 sbb push je inc inc xor or push mov inc popa xchg pusha mov or push xchg test and lock rcll push into (bad) out icebp sbb stos iret and mov jge mov and jge sub rorb push (bad) xor add dec mov pop js adc pop ds stos xchg or (bad) adc mov cwtl adc add or arpl adc or and mov insb loope and mov mov pop sbb mov xor and xor xor xor push jns pop sbb add das or dec addb loopne je cmp and sub sbbb jl push jmp mov mov sbb mov js xor movsb mov dec and lods es dec std andl mov dec insl cmp or pusha decl add jmp mov cmp aad or xchg outsl imul pusha sbb or insl inc add dec mov mov sub stos sub mov leave stos adc scas sub or jge into jmp pop outsl pop adc arpl push xchg adc jb test stos popf add adc xchg scas cmp mov mov daa mov cwtl cmp jle sub cmp xor fist mov push jmp mov xchg xchg or or clc push adc lods in lods cld and lock add mov and test mov jae pop sub fildl insl mov jmp adc (bad) out cmp inc push and fstpt add jne js jae enter imul sbb (bad) or push mov mov jp mov ficom bound jmp and cmp mov jo cwtl adc pop and push clc add mulb stc sub cmp cmp movsl jbe sub mov (bad) je stos loopne (bad) outsb mov je mov mov xor cld mov sub add jbe cld mov jl incb dec cs pop addl jmp push adc or iret mov nop add mov mov repnz sub stc dec lock adc jg cmc jecxz pop add push push inc jmp xor cltd fcoms (bad) nop xor push into dec and les mov or xchg cmp scas aam add cwtl jge add mov pop push sbb test cltd rolb adc adc mov sub dec leave sub add fnstcw jle xor xor push mov push mov test call push push or xor fstps fiaddl sbb mov push push or lahf adc into mov mov (bad) call or mov jl shll roll bound xor sbb sub (bad) pop clc jne aas mov push or mov daa dec xor fistp and jne inc testl ret enter les xchg int jnp into dec mov inc or adc rcl jae cmp push xor or xchg pop dec and push hlt push daa sub add insw push pushf pop push lea lcall or adc mov orb sbb cmp add repnz mov popf pushf cmovne je pushw push push js subl dec pushf data16 les add (bad) sbb ljmp roll frstor push add jle jp loopne xchg clc (bad) js mov shll push lock (bad) or shr cmp in mov jne adc pop mull into or adc inc mov (bad) fiaddl addb mov cmpb fadd loopne shr sbb loop call loope jo jne outsb mov add inc mov mov xor lock mov jne mov gs (bad) xor adc add add ja fidiv ljmp jmp pop sub push fisubrl enter js inc mov or decb lret push dec add cmp inc scas into (bad) or daa mov push mov jmp lods daa dec fmuls xchg rolb fisttpll jae jno (bad) repnz lods add cbtw dec xorb lret mov test jmp sub test sbb push jno jge pusha dec inc imul inc popa mov or call ss or pop xchg add add jo std push and mov sahf dec lcall addr16 mov rcll mov xor add and fstpl jle and es add rol or mov xor lds outsl (bad) jo pop push add imul addb cmp push adc sahf out mov sbb mov sub fistl adc bound sbb jle popl sub imul sub fdivrp pop ja mov js js insb fdivrl loop call xor mov lcall fimull sarb adc lret js cmovns fadds pop sub (bad) jae pusha and mov and sbb sar fidiv pop jecxz cmc mov mov ja popa sub popa cmp repnz mov lret cmpsb aam ds adc inc ret (bad) xor mov int mov dec sub ds insb fsubrl jne out les inc xchg mov idivl xchg or pop mov xchg inc sbb nop int3 lahf dec push cmpb dec enter inc das xor das adc loopne jns mov add loopne,pn cmpsb (bad) jmp mov dec das jo test dec and jp sbb test xlat shlb dec cmp cmpsl negb and movsb push pop mov mov ret sbb rdmsr or aas js lret es inc sbb fwait std xchg ret jge or sub jnp aam aam je inc mov (bad) push push add rcr mov or sbb inc sbb cmpsl and bound adc xchg adc aaa mov fwait test pop int3 (bad) xchg dec jp or dec hlt pop les adc push inc jb lea push cmp dec and jne xchg in dec js inc inc movaps orl xor lods xchg gs nop (bad) push mov jne or adc pop andl cmpsb es jge lock xchg mov mov addr16 test mov lock inc imul jle cmpb mov lock add or push push cli mov call push or (bad) nop pop jmp add xchg dec nop push gs movsb push adc inc fmuls or dec or and test cmp or ret cmp cli push fs jmp adc movsb iret mov loopne and sub sbb xchg clc or and adc push mov push inc pop fs dec push or mov push and mov rol adc lret and fs xor fdivrl out sub or push xor out xchg xchg pop dec xor jle push mov mov mov xchg sbb pop pusha enter push fdiv sub mov push pop xor inc das inc cmp popf inc sub sbb sub sarb imul (bad) clc gs push jg (bad) inc add sbb daa push inc ret sub arpl shrb jne and adcl icebp icebp in xor push mov dec jl add ljmp fistpl push push nop push jno or dec in mov cltd dec movsb push (bad) adc pop mov lock pop mov ljmp jecxz mov je or sbb jmp fsub cmp cwtl xchg add xchg inc lret push rol cmp pop and push pop and dec or pop xchg pop mov (bad) ret sbb cmpl jo adc movb mov push and dec inc pop test pop mov adc ss and into mov nop movsb inc lock push dec push mov dec or add in jb rcll call pusha sbb stos add push mov pusha add test pop mov xchg pop scas xchg iret lock xchg lods movsb sbb adc or pop in dec adc scas popa push subl xchg fdivp dec sbb cmpsl test xchg adc or and stos scas imul lret pusha add cmp push sbb ret mov jb loope shr sbb add sbb push fwait pop add jecxz jle das sub xor push mov push mov pop fcom jno pop arpl pop pop sub std jne pop fstps push lds loope pop (bad) popf add adc xor xchg cmp (bad) cli leave sub (bad) lea in jmp jmp enter jg in cltd xor pushf jnp push pop pop scas or xor or pop adc ds pop les je jmp push push xor mov test adc ja mov jecxz push xor pusha es fstps push das mov push xchg (bad) js add push xorl aaa inc inc repnz bound xor adc adc dec sbb adc js jmp cmp sub push xor xchg fldcw mov aas adc jae xchg and xchg xchg lcall mov mov or jb subl sbb cld adc nop call mov ret jp mov inc leave mov and aam orl gs push pusha dec adc push and mov ds push fwait xchg adc adc mov xor mov cli mov bound cmc mov dec and adc sbb stc xor pusha loope jge adc or js mov inc aaa sbb push xchg cmc mov stos sbb adc sub iret pop fildll rcrb ret xor xchg jo add add mov mov std push inc jbe inc jl std add pop and inc data16 ficom imul adc add inc inc stos data16 mov aad pop cwtl pop mov ret dec xchg xchg js push fsubs ds dec out xchg jmp loopne pop loop mov imul dec popa mov sbb cmp push (bad) push mov and inc add cmp or or ja jge sti lods movsl jge std mov daa mov sub or inc rorl sub addr16 and or loop out stos add jl inc jno pop jl push push sti movsb pop push sbb jle mov cli push pop clc std add imul fcmovu icebp cmp lret xor mov rcl pop adc loop mov movsb inc sti sub jge inc add or xor cs inc jecxz xchg js pop cmp jne and mov dec adc (bad) sub jae cmp or and add xcrypt-cbc cmpsl push inc xchg add ret or pop in jecxz adc dec aas push sbb add daa outsl cmp inc and into adc push rorb or js mov and or xchg or xor push test cld pop xor call add (bad) push push add test adc jno ret and dec jmp mov inc and adc mov mov popa (bad) dec cmpl inc fisubr sbb add sti adc jbe xchg inc in pop mov xor rorb and out adc movsb adc in add inc add add push fs adc xlat add (bad) mov rsqrtps mov jg out dec adc mov mulps xchg mov dec xchg cmp adc hlt cli xor or dec xchg lret add or adc add jb pop clc pop sub sbb jnp cmp add test (bad) js jecxz mov or pop pop ljmp cmp roll dec jp xorl imul adc insb out or dec mov (bad) or ja movsb inc fsts push xchg aas lea jae dec cmp sub nop inc xchg orb int3 mov lods add scas sbb lods inc mov jb mov and mov sahf in and icebp repnz push xchg aas outsb loop and js mov jne sahf (bad) psubusb sahf test pop int3 (bad) pusha les rcrb dec paddsb movsl orl pop fs pop add cli adc sahf enter and adc sub inc sbb sahf dec pop mov pop mov mov mov cmpsb movl push lock test push insl or int3 mov push clc mov cmpsb inc cld imul add lods mov lea sub xchg jno adc cmp push sbb xor adc ret pop or std push dec add and jmp adc sbb lret or push inc ficoml mov or or xchg test jecxz int3 add adc test loop add fisttp movl inc inc loope and mov xchg push or adc mov enter push xchg stc jae pop cmp mov jae mov imul push popa add push pop add pusha or push test addl xchg push mov loope mov and cmp adc push fwait adc movsb mov push dec (bad) insl and dec dec jg adc push lock pusha popa and cmp subb dec movb or xchg dec and adc and add pop pop xor inc leave pop pop sbb loop jo pop adc mov mov mov call add dec mov sbb mov test pop cwtl push push dec clc loopne push inc cmc leave inc push mov or rcr sub lds loopne cmp loope adc mov cltd clc lret fnstsw inc loopne insl mov jg pusha lcall lods int3 add adc call ror add lods mov or xchg lds cmp push pop cmpsl (bad) mov ret or lcall popa pop add mov dec add mov add roll (bad) lods fdivrl shll nop test adc push push xchg jnp dec scas sub dec js push imul call lret push xchg mov cmp xchg mov repz cmp decl xchg adc add jnp mov loop iret cmp ja mov in add fsubs ret xor (bad) jo fmuls pushf shr or aas mov andl outsl or cmp adc xchg mov add loope popa popf rcl test stos movl or pushf out je jns icebp sbb push cwtl or sti ss xchg push stos sbb xchg jmp add or adc rorl fcoms lods or push scas adc xchg mov (bad) lock xchg movb aas or fs ret bound mov xor push int3 in lock sbb roll pop mov imul movsl or std mov mov xchg adc inc xchg insb out sub sbb and dec inc jae add in sti sub xchg and jnp aas in inc mov adc in add cmp or mov add faddl fdivrp adc push and je mull and and (bad) mov fldl dec fsubrl mov sbb sbb xchg dec add or pop or stos jg add lock outsb enter or jns add clc jl cwtl push (bad) dec (bad) fidiv leave dec fiaddl inc mov (bad) adc mov pop hlt xor xor shl pop pop out ss jne mov testl inc popa nop fstps or cmp jnp fcompl (bad) dec insb arpl imul fistpl lods test sub or pop ljmp inc adc insb xchg jns cmp push sbb mov loope pop xor andl or fstl or hlt adc add divb mov mov ret cli mov loopne cmp cmpsb xor mov add sbb push shrb sub sbb xor xchg fildl mov rolb inc mov cmp cmp sbb rcrb push pop pop xor lods push cld rcr push clc mov adc or ss js fmuls mov xchg data16 adc nop lods or and pop cs sub pop xchg popa add jl movb mov cwtl or adc mov cmp push mov inc (bad) and repz mov movsl repnz jmp dec jo xchg jo fcoms cmp popa or adc popa or (bad) xchg sub dec arpl jne stos fisubl mov and xchg call mov pop cmp lock cs push xor rcrl ds mov je cwtl popf push pop lods inc or loopne ret popa mov call ret mov add mov jl jmp jno ret lock je,pt mov gs dec into mov scas or ss xchg jne (bad) fidivl icebp xchg mov or jbe (bad) repnz xchg adc jbe add je movsl jo and push inc pop xlat out (bad) int3 xor mov pop cmp mov and xchg fst stos dec dec cmp xor sbbl iret lock scas clc jle push pushl and mov xchg or (bad) pushf adc lods jne mov lret cmp jecxz popl sub pop mov xchg in inc or push stc xor xchg mov jae inc imulb fild js,pn sbb ret fidivl or in inc lock jae sahf inc push sub lea mov jp fnstcw dec cmp inc orl lahf sub mov sbb ret sub xor mov loopne call mov mov shrb cmpl js mov inc adc inc clc sub lret (bad) mov outsb push push xchg cli jg dec aaa mov int leave push sbb insl call (bad) je lcall test mov das jmp mov (bad) scas adc adc push or xor pop mov mov leave sbb adc test addr16 pop sbb movl jmp mov test jmp dec push lret rcrb cmp push fs xor sub in and xchg add test or mov fnstsw xor in push mov pop jb add mov inc add cmp gs push in mov inc cs jb jo sbb mov test nop lret test and inc xchg cmp clc xor mov ljmp dec cwtl ret cmp pusha jecxz adc das mov push pop sub arpl fs cmp jno enter mov in in mov jnp push or ljmp and inc mov lds mov sbbl jmp xchg sub or cmp dec and adc or shrl dec loope xchg cvttsd2si aaa push mov data16 add pop push add jmp sub or xchg and ljmp push mov xor mov clc push fsubrp adc fstps icebp in insl add cltd rolb sbb adc jmp cmp fcomp dec pusha or fstps and pop sbb push sub loope push dec rorb inc mov mov or dec push test loop sbb jp mov adc push push cwtl pop movsl into add ret sbb or rdtsc mov mov inc clc mov sub mov add lret ret add pusha gs cwtl sub adc imul cmpsl pop push sbb jle adc jl jno movsl pusha mov (bad) sti mov xchg dec inc mov rol sti push mov sbb pop jns stos insl pop and clc incl lock cmp cmpsb sub gs test dec popa jnp andl cmp jbe jle mov mov loop inc push jl sub dec sbb mov inc xor cmp test (bad) lcall or xor popa pop ss enter xlat es ret mov es push xchg insl sbb ret pop or mov mov dec adc imul add jnp dec scas mov inc (bad) mov mov sbb subl inc add dec pop or divl push jp or fwait adc sub and adc pop mov cltd sub and pop movl push xor or leave mov sbb pop adc imull jl jne sbb xor adc or dec fbld mov add insb fdivr div jmp sub dec or ret pop ja inc inc sub add inc mov or sub fprem1 mov lret xor adc xor pop nop mov lds add pop sub sub out nop mov sti sub iret mov inc call call xchg ret sub test (bad) shlb cmp fxch add xor jb pop jo jb sbb mov xor jnp inc or or xor and test divb rclb pop jle jle mov or xchg mov mov (bad) mov mov push adc add nop fstp cltd pop fwait mov xor sbb mov xchg cwtl jo fadd dec neg cmpl pop push mov jne cmpsl subb xor sbb add add pop mov pop add pop pop xchg (bad) sahf in enter push dec call push outsb and pop adcl aas inc cmp test xor xor fimul mov cmp dec lds decl and adc dec mov hlt (bad) and lret pushf cmp dec jnp mov or out test sub cmpsl push icebp mov push iret and cmpb pop push test mov (bad) sub mov arpl pop cmp call inc or xor mov enter sbb or ds (bad) nop test dec or add lea dec sbb std pop push lcall push sub dec inc jns push divb xchg pushf insl pop dec adc inc sbb push rclb mov fistpl inc adc movsb mov pop adc sub push and and ret sbb insb test aam fistl inc sub repz push mov or incl inc pop mov inc je mov mov je sub repz mov rcll imul mov sub fadds imul lret xchg in and out jmp add (bad) fldcw sub xchg push dec adc sub push adc add lods mov lods jp or xor jo add clc jae,pn imul dec call ficom push (bad) flds movsl pop cs sub xchg out adc shlb push inc dec inc add inc xor ret push insb jno xor or mov js lock add jbe jbe into xor mov mov adc push adc push ret jno hlt pop sar dec or mov xor push sahf add sub mov hlt xor in mov xchg sub in cs loope push mov inc push push add fildll mov add push clc mov or add dec or pop js add dec clc loope push or push mov add sub cld test (bad) sub out sbbl dec notb push push push push les adc lods rcrl inc add test push out pop pushf lock add or pop insb pop cwtl inc mov loop inc es jne sub clc rclb mov mov lcall pop sub incl sub mov pop sub test mov dec (bad) stos adc test pop sbb incl adc test push and dec test adc dec lock xor dec sub rorl jmp or lcall outsl outsb clc or gs xchg pop int3 daa scas or pop or cmp add xchg and dec cmpb inc xchg jo lcall mov cmp or adcb cmp push out or inc xchg mov les push add mov pop (bad) in jb pop aas dec dec movsb leave xchg cmp fldenv push fnstenv add ret in inc sub and nop cmp add or sbb adc call dec sbb das dec int add insl sbbl js pop pop or dec addr16 mov cmp ret xor jne sbb hlt lods mov dec popa das adc loope or js loopne pop and mov or jg pop sbb add es mov and hlt dec inc mov sbb cld sub add adc test (bad) (bad) mov adc dec pushl addr16 and push jl or movsb stc ljmp add imul push push dec push xchg inc negb pushf pop rclb jge mov pusha inc clc mov outsb or mov cli (bad) test cmp or add jmp adc ror and sub jno add das push mov pop mov in testb ficompl cmp sete xor or clc test dec jo pop jmp mov add and pop inc dec sbb push scas sbb ds push xchg xchg sbb imul subb pop inc pop pop and cmp inc cmp insl int3 or add shr (bad) mov xlat sbb dec adc mov cli pop add lahf jb cwtl push fistl or or lock mov and add aad rol ljmp (bad) mov mov sub and jmp les in xorb xor shrb adc push inc push pop xchg mov test popf pop ljmp (bad) aas sbbl and jo sub mov xor aaa and pusha push pop jno xchg pop add mov and insb or push lahf nop inc dec gs ja je mov adc mov sbb test mov mov aam sub xchg aad inc add pop lock mov scas push or mov leave and mov add dec sub ss das stos rcrl scas lea push leave adc ret lea and int add add (bad) movsl lods sbb (bad) (bad) loope,pt xor add sbb jno insb push test jmp adc cmpsl and cmpl rcrl mov xor mov inc sbb pop leave sub adc imul pop mov out add and push jp aam test cmp mov dec sahf pop mov lcall lock and pop inc sub subl fwait xchg cmp pop sub daa in and shr jbe lcall xor roll xor jne shr stos xlat es nop in fwait push lea sbb dec (bad) push arpl pushf jne pop add or pop lahf cmpsl jno jnp mov pop (bad) sbb and loopne dec sbb push loope sub fistpl addl dec hlt cvttps2pi add stc aaa adc (bad) mov clc jmp inc or push outsb sbb pop pop ss je lea test push lret ja mov iret inc add push (bad) or or push xor sbb mov adc cmp inc (bad) cmp and sbb jnp and mov dec sub push inc lea cmpsl and mov and leave mov or sbb sub call sub mov mov test and jbe jg aam rorb leave call or test mov (bad) push mov and arpl or js add push pand add cmp or (bad) or dec nop mov and cmp out xorb aad lcall mov int3 and addr16 orl mov mov insl and dec lods sbb xor ret jle and adc adc xchg or or xor dec xchg rcll jmp fnop sbb adc call dec adc lock adc and adc xor and sub stos push xchg add es push (bad) cmpsl jg mov mov adc sahf lahf jae in mov mov mov popa add cmp lahf test lea insb insb test mov sbb icebp test push mov clc dec pop arpl jg cmp add mov stc int gs mov pop adc gs dec scas jb push adc adc in adc loopne pop mov stos mov push or dec jg push in testl cmc ja (bad) inc xchg subl lods sbb lods jmp mov call rcrl and cwtl mov rcrb mov adc xchg movl add or test sub sahf add or pop push popa je call int mov lret cwtl xor je push adcl inc adcb cmp inc inc and mov sub out push adc pop mov sub fidivl daa push xor cwtl sub mov jge and mov je jmp mov jno push add mov sub or test pop jl lret adc arpl popa es adc test xchg mov and pusha jl xchg adcl add sbb pop testb or and and mov les mov xor imul and add or test sub adc xor pop popa (bad) icebp nop lods push inc xor mov pop and mov sub push loope inc sub or mov sbb test xor or pusha dec cmp out lods xor rorl insb call sbb repnz adc mov cwtl les mov ljmp lret les ret js (bad) jp jae jb das (bad) jne sti pop imul dec push jge jno mov push mov jbe leave mov scas xor loop fcmovne inc xor dec pop pop iret inc and xchg xor test adc loopne loopne add loope inc or dec sbb es or lahf in aas dec rorl cmp sub or sbb mov mov scas push ret push dec push and (bad) jns decl jle and cltd push inc pop mov sbb (bad) xor andl subl dec xchg fistpl repz add clc das lea adc inc je push sub mov or adc cmp add scas sub push shlb scas jb sub pop mov mov sub fsubr pop in test push sbb lock in lock pop and push dec popa test or ret ficompl xchg mov ja mov nop sahf je clc add jne andl xchg mov mov lcall sarl sbb test mov cmp adc add and enter imul xor jne sbb (bad) loope test mov cmp sub jle sub push bswap enter mov movb adc ret cmp cli lds cmpl mov xchg (bad) sbb inc cmp pop or jle pusha push or rcr out xchg iret mov sti sarb adc sbb sbb int sti jnp or and add ljmp repnz pop or adc mov mov ret push sbb add js dec enter or repnz aad sbb xchg pop and or or inc pop push dec shll orl jge mov or pop push adc mov add sbb ss sahf sub insl inc pop jb ljmp cmp pop mov mov jmp sub pop in test (bad) sbb mov rorb adc cmpsl ja hlt push lock (bad) xor xchg and mov jo (bad) es jo push mov mov pop jge cmp push and push loope pop js sbb sbb sub mov mov sub clc cmc inc mov call insl hlt movsl sbb dec fwait adc mov getsec ja jg push add or add inc rcrl mov adc sarb clc test dec fiaddl adc xchg inc push pop or inc dec aad out xor sbb sbb push dec xor fiaddl fs enter mov ret adc jne dec xchg hlt xchg mov (bad) sub push sub mov nop shl sub test dec jo iret leave sbb pop rcr push mov pop movsb sti xor or sub cli lods and pop jmp inc adc ret xor adc cmp pop cmp repnz outsb daa test ret jne mov inc es mov sub xchg imul fstpl jmp cmp jnp (bad) pop push push pop inc shll adc and imul icebp jecxz cmp imul test pop push lea or mov xchg js sbb adc inc add call (bad) mov add xor and imul je cmp xchg shr sub ret mov lock cmp js mov call sub adc or popa mov sbb mov or inc mov sbb dec int sub jmp xchg sbb jb repz loopne dec push push scas andl inc jecxz in or imul into imul test fsubrs and outsl cmpl cmpsb daa and aaa inc push mov fist adc hlt nop dec push push inc aaa mov inc roll das or jae jmp sbb dec jns jno xor push push mov les lds push je sbb push mov in pushf push mov aam jl jecxz xchg mov call push sub inc lret adc and xchg pushf inc jmp ret xor push sbb xor imul push dec test or xor mov ret mov push mov inc fiaddl stc xor sub into pop push leave loop or push shrl xchg nop popa scas jecxz and sbb aaa leave adc outsb pop psllq xchg (bad) js cmp pop jmp (bad) xor mov test adc or fadd push or test push push in out adc sbb sub cmp int sub jecxz xchg lret cltd sbb jne adc sbb adc in mov sbb cmp aaa je dec pop leave lds xor and mov call pop push mov push push rcrb xchg imul add inc sbb sub jb jae push or mov subl addr16 add and popa sub popa ljmp cmp addr16 test sub push and add rolb insl and jg outsl stos xchg jl mov sub dec dec inc test push int insl add add fldl fs mov jecxz xchg (bad) or dec fs push sbbl push mov into push add je test xor pop inc and or test adc jmp mov pop and pop mov inc loopne lock aad inc xor lcall ja sub mov ret inc jns cmpsl sarb sbb and pusha or or cmpsb dec add insb loop or pop inc xchg sub inc test adc clc not sub mov xor pop pop mov sbb xor insl jge fistpl push arpl xor jmp add mov repz insl jl fwait jp push jb xlat aad inc jne xor mov or inc cmp arpl (bad) inc roll cmpsb or and and dec or dec pop jo (bad) push cmp (bad) add dec sbb inc es ret add xor push popf xor lret mov or outsb fisttp scas or pop mov cmp mov and mov rorb fimull jbe mov add or jp and out arpl push add and xor mov aam loope mov loopne or pop xchg sbb jge dec and mov fcmovbe and and push sbb push lock sub and data16 and (bad) mov imul sti aas icebp jle push mov inc movb jmp or push or aaa xor dec jp fldenv (bad) sub mov dec adc mov stc or movw jb or or or outsb add fcoms or fisub enter push sbb rcr adc pop jmp mov push dec mov les mov insl xchg mov sub subb dec inc push pop pop addl mov push sar dec xchg cmp push dec fildll dec cmpsb shr rcr inc imul daa add or mov decb loopne adc mov fnstsw negl es ljmp jge cmp (bad) jbe (bad) (bad) in sti push sub cwtl and addl sar add pop and fstpl (bad) cmc cwtl mov jbe fsts push (bad) sahf adc or adc popa leave sub and int3 imul in mov scas loop loopne jg adc and and lea inc (bad) xor les andl cld daa cmpb dec sbb jl pop add jbe jg jae cmp cmp in loop enter lods fs inc or cs add jp or mov jne (bad) pop add in xor sbb xchg pushf cli dec and dec or call nop add cmp or jmp mov cmp jno cmp and movsb movsb cmp mov cmpsb adc sub and add fdivl inc lods and rorb add (bad) jle cmp mov xor lock subl movsb scas pop pop or nop cmp or dec ss or sarl add addr16 push lret (bad) lock rcrl mov testb dec hlt add mov add shr or mov dec jae mov inc sbb push push movsb daa add lock dec jp clc dec and mov testb dec cli and push pop cli inc cli div add mov pushf ret test or call rolb jge sbb pop pusha sbb adc and or pop aam shrl outsl and xor and data16 roll (bad) mov xor dec mov (bad) test mov sbb mov dec push pop jmp (bad) inc mov push ljmp inc loop sarl push mov push jge addl xchg and cmp in aam sbb and adc es out mov (bad) inc inc (bad) jne adc xchg fdivrs aam int3 movups andb nop and pushf adc mov dec movsb inc xor sahf adc in (bad) mov pusha add je mov push je inc sbb fcmovu or xchg mov ret (bad) insl test call mov (bad) sbb je add clc adc inc (bad) adc into or adc (bad) dec sub nop inc push in or jge call lock cld icebp or add jns loopne jne inc fisttpl sbb push in mov lret mov lods imul rcr xchg sbb sub adc orl negb xor movb jnp xchg subl pop or cli out adc test addb jno add and cmp pop repnz hlt inc rcrl call neg add frstor data16 inc imul mov ds jmp loopne call pop orb js and pop and nop mov loopne movsl out pop test repnz (bad) lret out ss mov cld or cmc scas add out (bad) enter lea xchg pusha dec rorb add pop inc add popa lahf push clc rolb jle loope push add lea mov (bad) push (bad) jae adc les in jne xor les mov ror or mov inc sbb (bad) pusha insb or jmp std mov cmp jge push cld stos aas sub cmpb or add dec cmp xlat aam (bad) adc incb sub sub loope add add sub loopne push ret js hlt xchg jp jne dec mov jb int add mov lods ret inc lcall lret or sbb mov mov (bad) rorl mov add dec push imul add dec popa push and ret lcall cmpsb mov dec inc daa adc jl ret or adc sub imul ja add pop jne or inc imull scas je,pt (bad) not nop push ret mov xchg aad mov movsl (bad) xor add pusha add jae test inc pop (bad) mov mov iret enter xor into pusha inc lock sbb and pop and pop pop push pop xchg xchg push cmovge mov jnp dec push ret or dec test xor (bad) cwtl pop cld fadds adc sub or lret or jo dec push add add push aam inc dec push mov (bad) movsl orl dec scas pop push lahf lods jne push mov sub pop iret out add xor mov mov add jno push rcll out and push sahf dec or and add xchg xchg test adc or inc (bad) nop clc mov adc xchg test sbb sbb or push scas inc jo push orl mov pop shll xchg ret mov loope pop dec fmull scas pop inc or mov pop lret and dec jmp or add or (bad) xor add mov hlt mov and sub out xor inc jg into into and dec into mov outsb pop sbb sub push pop mov (bad) mov pop sahf pop sub int xchg cmp jp shlb (bad) or xchg rclb sbb push aam mov in hlt add dec add pop lcall test lahf pop xchg jo lcall add dec loopne movsl movsb popf or push aas stos mov or jp lods and cltd and mov cwtl sbb rorl sbb push jb push cmp dec cwtl les sbb insb xchg (bad) pop xchg adc (bad) mov or sub loopne xor mov dec (bad) andl (bad) popl aad inc xlat pop adc mov loope add mov adc popf sub sub adc in nop je leave inc iret out dec clc adc call mov lock rcll push add test call andl (bad) inc jbe add jl in bound fildll or loopne push cwtl and aaa out mov popf inc ror pop out bound mov dec in push cmp mov mov jb loopne aam jo mov es mov mov cmp add mov es lret xchg and or push push (bad) adc sub andl push shl out adc loope add fmull ds hlt pusha fcmovnb dec lcall push shrl (bad) jge dec lret or maxps or or add pop lahf lret xchg push push (bad) mov adc add mov mov push mov mov dec (bad) enter scas aam dec or dec je out mov je fcompl adc movb push push mov or dec jae and push iret jle jmp in shrl and and dec add clc sbb mov out pop out xor ret outsb scas inc inc mov push sub and sub dec cmp mov or mov fwait mov fildl lods inc or pop or inc sbb sbb xor shrb or test ret faddl adc jbe pushl or sub xchg test pop loope add in dec adc loop dec fsts xchg inc jbe cmp nop lret stos mov jmp inc popa imul add int adcb aam inc cmp sub fcompl aam arpl pushf cmp movsb addr16 (bad) (bad) xor js or into lds dec pop cmp lretw add add xor repnz jae xor xor cli inc stos hlt and fmul or pop and sbb add stc loope test xlat dec xor cli xchg cmp sbb dec mov cmp xor add or sub xchg add push or rorb dec or mov mov jle jo or loop sub cs dec test jne push xor lock std dec lahf add divl and xchg and add dec cwtl push rorl or jg scas and insb mov xchg inc fs xchg movb mov popa mov xor cmpsl xor sub dec clc inc and push sbb das xchg icebp addb push xor adc add xchg stos mov dec or fmuls push cmpsb jo fcomi clc and aad into and jge scas or loop shr arpl pop pop mov inc add mov sbb add add sub mov sub dec insb adc sbb add pop incb rorl dec inc inc adc sub push inc pop (bad) jp cmc mov cmp in pop inc xor sub ficompl enter push ss jp xor inc gs ret push or push jle imull jo imul sbb inc das adc or adc or mov in arpl imul dec testb jne dec sbb inc mov aas ja testb outsb pop in ds jne dec inc and lea mov push add mov jae mov sbb push lock and movsl xor push push jle call sbb inc das jae jge adc add push (bad) and mov subl pop jbe xor addl loopne or push xchg xchg sbb push (bad) cmpsb xor push cmp mov fnsave xor testb hlt or lock insb test dec sbb adc das test shl mov and xor xchg push movsb cld inc sbbb cmp andl aaa repz jmp mov gs fimull add lock jl inc (bad) fcmovnbe punpckhdq sbb outsl push fdiv add inc add xlat dec inc adc pop xor xchg jne js jb add inc sub mov andb sub sbb sbb add cmc push fimull sbb (bad) inc push fcomps jg push imul pop add bound (bad) jno outsb adc rolb and dec sbb mov add adc xchg sbb mov cmp ss cmp inc add adc xchg test pop push je into loopne cmpsb cmc std or cmpsb sbb add jb or mov mov imul and jle popa ret sarb lea scas push shrb push pop sbb test sub mov or inc loope (bad) xchg mov into or cld sti mov cmp js dec sbb cmp sbb push pop inc and pop jecxz add pusha xor and sbbb mov nop icebp xor (bad) or or ss jae stos mov inc dec das mov dec fwait ret xchg imul pusha push push xor inc gs ret loope ret and pop inc (bad) and lahf sbb push xor push mov movsb mov mov pop mov sub dec sub sub push out hlt add add lret rclb adc xchg mov mov sahf arpl arpl addl test inc jmp add or sbb xor or mov cmp lock xor lret push or pop js or inc push dec nop dec pop out (bad) dec rcll andl push pop add test jbe sbb cmp inc imul or stos xor dec out fsubrs mov mov sarb lods inc jno and sbb in pop cmp mov push push and inc and mov and and xor inc push adc pop ret inc mov dec or add outsl sub or leave pop nop inc das pop test jmp inc mov dec inc push daa cmp jb add pop (bad) jo push fs in push and or xchg add pusha mov ljmp sbb pusha cmpsb and pop ficompl xor lea lods pop cmp inc or add pop jmp nop test lods aad fstps mov push push jbe test jne mov dec jo roll scas cmp cmp mov sub pop rolb rcrb pop jns clc iret (bad) rcl xchg xchg xor fiaddl loope pop fsubs push sub jg push sub jbe nop or test mov push hlt or push rcrb mov lea push (bad) push lahf xchg loopne and and loopne inc mov sbb mov lret add sub push aam sbbl es nop outsl sbb stos loope mov xor inc mov add add xorl sbb testl movb adc enter add push scas mov pop test mov sub in add outsb sub sarb ss int3 xor or mov mov pop or test fisubrl push or sbb (bad) cli cmp repz cmp pop jne xchg push mov pop test clc les xor xchg ss je jle add bound jne push imul add imul inc imul mov mov fcomps jle push mov in imul xor call add pusha test popf xchg lock dec cmc cmp mov test mov cmp cmp jne rcrb inc add test push inc inc sti fsubl clc dec (bad) or adc test pop (bad) sbb mov stos iret pop fsubl sub call adc pop lret popa add dec inc and icebp xor push mov xchg adcb add xchg mov loopne pop cltd dec ret push pop mov pop mov mov das lods lock push and (bad) lret insl popa sub pop add adc pop dec push add aas push adc hlt or fisubr shlb leave dec add xor xchg icebp sti mov mov cmp jle sti test adc mov pop hlt xor cmp sub jle dec adc mov aad or and rorb add mov in mov pusha and mov test inc rcll test xor or inc or push mov pop jne cmp xor loopne outsl or loop mov hlt pop mov cmp stos pop fisttpll ret add dec adc leave push int3 mov add nop pop repnz and fldcw popa xchg add mov mov add lea xchg adc or sahf xor fisubl mov lock aas popf mov test sub mov movb cmp add test cmc aad pop push adc mov dec pop (bad) xchg cmp nop jno dec dec (bad) mov add sbb inc xlat fcomps push arpl push mov add movsb adc andl dec nop or lahf mov in inc xor cmp and mov out rep in out and (bad) adc jno push add and jle clc add mov xchg aad mov push pop mov dec aas js fcoml mov xor aam in add fs mov and ret ljmp iret xlat pop test nop pop test adc data16 dec nop xchg (bad) jmp rclb std pop or ja or pop or mov jb sub in adc movsb mov dec or cmp add rclb mov dec add jne pop test or iret cli push in iret mov sub (bad) mov and (bad) aam mov mov sbb rolb (bad) xchg clc jmp and test push mov adc fiadd jno mov add addr16 xchg rcr (bad) push push cltd call cmc sahf sbb cmp xor nop negl pop adc mov adc and insb push sub jmp add pop dec testb or push icebp jmp test adc rcrb jb (bad) popa xor mov sbb mov and std cs cmp jecxz sub mov xor add pop scas mov ss out push fldenv sahf or pop adc ljmp sbb fisubl xchg xor push jbe adcl xorb sar and popf pop xchg mov mov push mov shlb xor adc jge call jbe (bad) inc ljmp stos jge movsb push hlt rcrb adc (bad) scas lea decb push inc sub inc popa test inc dec sbb fmul adcl mov and jle mov lds loopne arpl les lea sbb and sbb inc push push xchg push movsb pop movsb pop in shld sbb mov sbb cmpsl enter popa adc clc js inc test pop push (bad) dec insl xor push lds sahf je jecxz mov bound adc aas fdivs jg ret je sbb ret and cmp outsb int3 lods xor (bad) xor jg xor les push mov or loope push cld xlat and cs add xchg or movsl or and inc ljmp inc sbb jne pop push pushf lret (bad) out hlt mov addr16 jo sub fildl out dec std imul enter inc push sbb or (bad) je inc aam or add pop rcrb sbb bound or dec pop rcr sar sbb seta dec jo xchg mov dec add mov jle dec push clc (bad) lcall xor dec insb frstor dec xor xorl sbb ljmp jge xchg movb mov xor out add rcrb stc aam add or mov or cltd xor push (bad) ret jmp push jle and lret dec incl adc dec add sub es jb dec and mov or push cmp and dec sar out or test movl or lock adc mov or sbb push sub pop loope sub dec or or cmp (bad) ds inc aam loop mov (bad) mov out aaa sub rolb and gs outsl mov test jo adc lcall sub inc xchg sbb sti insl xor xor clc imul inc pusha xchg test sarl fldl dec mov test dec dec mov add sub (bad) adc push pop test lods or pusha jae push mov movsb (bad) cmp add dec out adc fildll adc pop jmp nop jp dec or cmp pop sub pop sti jmp cmp adc and aad jp or jecxz and mov jecxz lcall inc insb add jmp mov jmp xor add jle jmp cli push insb mov loop mov rcrb test lock inc sbb into inc movsl xor sbb dec stos push push rcll test sub xlat adcl xlat sub loopne sub aaa in divl pop lods xchg imul sub loop mov sbb icebp dec pop js jno mov xchg (bad) xchg insb repnz jno dec xchg xorb mov push lea fwait pop or lea mov movsb add lret dec shl inc cmp cmp or mov leave add jle adc pusha lea flds sub jne and mov or xchg hlt inc xchg dec icebp mov addr16 or mov stos sub and icebp gs inc cld and or dec gs xor or mov or sbb push or push shrb adc and sti popa inc cld pop dec add and test and add or or jns or nop add popf lea and addr16 cld not xor loope xor and cmp enter add fmul mov call lret and push test aaa push or test adc or ret add push and int3 mov mov and sbb jmp (bad) aaa nop cmp incb jbe cmp jmp inc and mov mov xchg jbe jl and jecxz sbb or outsb jl jmp sbb jl inc jg xchg or add and in cs (bad) sub aaa jge jb and push sbb mov fstps aas pusha mov pusha loope mov sub dec and test inc adc fnstsw xchg ds pusha fldl cmp js cmp cmc xchg das cli icebp inc push fisub testb es adc sti fist add test fild mov sub mov cli push mov das dec fwait clc lahf adc orl das shlb xchg scas inc test testl out and add pop outsl lods imul push and or ja adc int cwtl inc flds fstps jmp fisttpll pushf push shll lea jns rclb inc int jle (bad) xor test loope out pop lahf pop sub mov jl (bad) mov adcb jo ret mov lret addr16 lea or push inc pop pop fs sbb and sbb sub aam sahf test addr16 stos (bad) jnp jmp sub sub jmp pop jb pusha sub push or outsb das shr fldcw lea in inc adc mov hlt add insl mov mov jmp cmp xchg and scas and pusha cmp pop pop push popa xchg cs test sti les fstpl repz jmp leave xorb mov xchg inc repnz cmp add jge (bad) leave sbb sub std cli shrl sbb mov lcall loopne (bad) add mov push cmp mov addl cld std cwtl lcall cmpsb add push daa adcb jno sub int3 mov add and jne call daa push sbb clc scas sub mov adc add and adc mov test mov (bad) jno xor jp add mov jmp xchg movsb mov mov fs pop sbb sbb sub mov call out call adc and inc nop js adc sub je roll or push mov mov add xchg rorb mov xlat lea and pop cmpsl loopne scas dec adc or xchg dec xchg fbld sti int3 inc std or push jno or or adc dec add mov jnp std mov pushl lea lcall mov out sbb push adc or and cmp popa or mov mov xor jl cmp pop cmp cmp adc add pop mov int loop sbb and mov pusha push sbb lret fnclex and jecxz mov and and or mov jnp jg fldcw push push mov loopne adc fistpl fwait cltd sbb adc adc jbe xor mov xchg loopne outsb test or call test fldpi xor mov pop jge outsb popa add inc je sbb (bad) jbe xorb mov movb cmp ret push and push add mov ret and pop movsb inc push lcall cmp pop mov push icebp xchg mov mov sbb mov inc adc cmp jb and jns cmp ja add cmp adc (bad) cmp (bad) jno or les mov neg mov xor xor push xor jl xchg and fadds ret mov shrb mov (bad) cmp pop mov sub cmp xor sbb mov lds pop sbb push (bad) push jl jmp cmp pop or push in stos mov jmp cwtl pop outsl je fadds jp out xchg sbb pop inc aaa sbb xchg test push rclb mov xor sub adc gs (bad) je add or fisub out mov loope jne pop or push xchg or pusha mov aaa insl int jmp sbb or dec xlat xchg int push pop adc addl ror loope sbb imul or push es lahf mov cmp add mov ss sub sub push xchg and push (bad) cmp jo das add push cmp pop push out mov mov push fldcw dec or sarb addr16 mov imul (bad) idivl xchg sbbb pop js ja in insl fwait lret lret rolb outsl mov pop inc ss (bad) adc out int aaa lock jae cs (bad) sti inc sbb pop imul push fiadd ja xchg ret test dec inc aad adc scas pop push or ficom adc dec es clc fsubr mov cld pusha sub repnz inc loope (bad) repz and loop adc fldl mov sub or leave faddp sbb fmulp push repnz insb aam adc notb jge enter cmp lock lods sub pop and jb push sub xchg jb ja sub sub cli (bad) jb nop movsl ffreep mov sub push ss sbb repnz mov ret or pop mov out pop adc imul mov xchg int3 loope or rcrl mov ja push scas mov push ljmp movsl pushl mov mov jle sub inc jae mov cmpsb pop push xorb iret xchg pop (bad) (bad) decb in jne ret outsl aaa dec loop jmp and in fldl2e pushf ljmp int3 mulb mov sub pusha sbb cld jne fscale or mov rorb insb jge out loopnew not cwtl loope scas cmp or and add fldln2 inc push add test outsb pop inc rolb ret inc popa fcmovu jae aad jne pop in jmp sbb out mov mov push fldz or sub lods sarb test pop ja or mov pop add mov push sbb popa ret add adc inc cmp or mov sahf fsub daa jbe lock fcomp dec or pop fidivl push mov cmp daa fidiv and (bad) insl xchg jle icebp push lcall xchg ret jbe ret pusha fldenv frstor or pop popa mov movsl and add aad inc mov fisttpll sub lea cmp add stos mov fsubrs das mov push (bad) jmp jnp pop (bad) enter in add int3 push pusha pop cmpl xor pusha mov in lret sbb popf out daa xchg test (bad) pop je inc fwait jne mov mov mov cmp je cmp je push xor in sub lahf dec xchg sahf test jge (bad) inc fiadd fldcw fidivr push scas and (bad) sbb adc mov das and and cmp mov cmp test add inc push inc xor or in aam dec popf insb pop push lods sub jbe mov push add inc cld (bad) sarb rclb push les (bad) jge sbb pop mov hlt lock push push orl fstps fldl fldl sbb add push add pop add fcoms jne or dec add adc pop dec shld jae aaa xchg sub neg insl push loopne dec test sbb cmp jp sbb or add pop inc je add das and fisttp addr16 sbb and add sbb shrb mov xor mov push pushf cmpl push or lock (bad) pop nop sbb add mov les sbb adc xor fimull call cltd xor sbb sti nop add push mov (bad) hlt jnp mov sub arpl enter jbe loopne push or add sub popa fadds arpl mov shr das shrb sarb sbb dec add adc sbb or cmp adc mov lods cmp push push xchg dec jo add mov sbb and stc xchg cmp or sbb and mov cmpsl add add sbb mov leave lods sbb jmp fs pop pop xchg addr16 jb je adc jo pop or sbb push mov push xchg test mov inc add out sahf mov rcrl outsl js fidiv cltd (bad) icebp call (bad) repz scas mov jge push negb test jne and jmp xchg (bad) jp xor xchg dec mov es or xlat or jb mov pop mov dec ret sbb clc fsubl mov daa (bad) notl pop inc jmp xchg push and inc ss push mov xchg dec mov inc cmp data16 popa aas mov push les add sbb test pop push insb sub lcall ja mov xorl jmp out cmp adc xor inc gs pop pop test adc sbb and mov mov xchg jne and lods lds lock sbb dec frndint sarl stos xchg dec push inc les shll sub adcl push and push loopne daa adc fldenv or jae cmpl and ror add nop ficoml (bad) mov in jp aaa loopne scas shl (bad) xor ss push jmp cwtl sbb pop xchg push hlt sub in pop push add and pop imull push ljmp sbb (bad) movsb push rcrb cmp add pushf mov daa sti pushf cmp cmpsl mov jns pop adc jl aam add ss inc test mov jl push or mov loop (bad) fdivrl jg mov cmp pop dec ret sbb jns loopne xor xor bound enter sbb pop push pushf pop imul sbb fcmovb add xorl pop add adc cmovp cld mov outsb sub mov add lock sub (bad) xchg jae movsl fisubrl (bad) sub pop shr add aad mov aam stc inc jne pop push mov sbb lahf mov xchg mov and or outsl sbb cmp (bad) popa adc or or pop and outsb lea or mov (bad) fnstsw test aad mov mov ss add inc into or jae arpl outsb mov fwait cmp mov push inc mov dec loopne mov rorl insl mov jne cmpl inc dec sbb inc ret jle cmpb lods aam jo sub sub sbb nop (bad) xor inc call push push xchg fstps and pop jmp mov test cli add (bad) jno push adc xchg (bad) lret cmp inc sbb dec lcall xor popl cmp push mov int fidiv inc add cmpsl insl adc outsb cli popa push clc fmuls or mov cmp push pop add sub and and cwtl clc inc outsb push cmp xor das sub sub pushf lds enter (bad) outsl adc sbb jle adc js (bad) pop (bad) out jbe daa popf into mov popf add and sbb pop aaa test jge push nop call mov cmp imul mov mov dec add or leave iret pop test push movsl pop inc add dec adc cmpsl cmp xlat ret nop insb mov cmp xchg stos mov or pop and xor mov mov sti adc push cmp mov mov call or add mov fild fwait mov push lahf xchg sub shlb xor rol jns jp out faddp add aas inc cld fisub lea pop movsl pop push cmpsb add aad cmp (bad) jle add ret jns pop xor add cmc dec adc pop test imul xchg or adcb or inc arpl add jne rolb fild lea add xlat and sub cmp mov stc inc dec test jecxz or adc xor cmp push lret enter stos sbb dec cmp push ret jp or aaa jle add (bad) inc sarl rcl sbb add mov int3 inc jle nop rorb cmp inc xchg jo xor (bad) lock jl jle mov add xlat xor add mov je in sarl sti pop dec mov sbb xor (bad) and sbb xor les xchg jle mov jl jge in aas inc pusha xor or ficomp aam mov push (bad) loop mov cmp push sbb or mov inc adc movsl add fidivl mov add mov push pop icebp xor push dec ds inc adc xor inc (bad) dec add push push xchg sub dec loopne and jl ficoml or adc dec inc mov inc jg rol mov jl ret sbb push sub pushl mov mov data16 adc dec sti clc adc sub sbb mov xor and lods movsl shll dec lods pop sub push xor dec sub dec (bad) mov jl cmpsb negl out test leave ret dec jb xchg movsl lcall push xor or in icebp dec push add sub lea cltd nop dec scas (bad) xchg js in das sub push adc js maxps or adc cmpsb mov and mov pop int3 dec add pushf push push jo push adc dec cmp dec inc and (bad) cmp add xor pusha add lahf inc and and loop xor sbb sub inc adc sub xor mov mov and dec movsl rorb xor and ret push adc mov call daa andl xchg lret enter add lret xchg dec sbb jne push pop adc inc (bad) push and dec loopne xchg inc inc aas mov mov sbb subl out dec gs rorb jle xchg jecxz mov sbb popa iret pop ror inc shll nop mov dec add cs lahf pop add adc add mov gs xor push or shr rolb adc adc push xor subl sub mov cmpsl xchg jl add dec jl xchg adcb dec mov inc xchg js clc xchg lret iret popf pop inc or es loopne mov inc mull iret mov add push (bad) add les stc or mov mull test popf aaa loope mov and inc or inc mov scas cmp rcr xchg shlb iret jbe fisttpll inc push jno pop mov lcall dec lds add adc mov fnstsw xchg pop add or adc in and push add xchg xor ret addr16 jno add and dec int imul mov xor push jle jns,pt add cmp sbb adc nop call add mov test sub insl insl inc xor add daa pop fidivrl enter je jae dec mov jbe sub (bad) sbb dec loopne je (bad) pop fildl add sub into jae js mov cmp and jbe decl dec pop push aaa adc ret jmp repz push xor pop mov or les sbb lock dec int icebp push sbb gs js jmp stos rorb out mov mov cmp stc addr16 andl or cwtl js test inc or sbb fistpl push sub mov cmp xchg das fistpll je sbb mov out lock push js gs push jbe and hlt mov or xchg xor pop inc and push or les ficoml and and cmp loopne rorb or adc insl out lock outsl mov scas pop in insl jns mov enter pushf fwait sub jno sbb mov nop xorl repnz sbbl rcrl test add jge pushf and add push push mov or addb and bound xchg add mov mov pop xor xor add mov add inc pop and lcall mov mov movsl cmc jae in xchg inc add pop adc jbe lea sub jae jl mov mov jo mov add aad jecxz inc gs sub xor mov jp sub add int3 hlt mov push sbb pop adc (bad) mov pop push test xchg iret cmp inc jne dec in mov rcll add fisubl jmp rcl int fsubs insl fisttp push xlat pop out aam test or mov (bad) push test outsl mov cmp fcmove push push aam int3 push sub dec push call pop jl roll hlt test jle mov mov in inc popl push popf add jmp (bad) jae ret sbb cmp aas dec dec xor xchg ficoml loopne pop str in or sbb jmp dec sub sarb dec cld adc insb sub cmpb out add push clc mov push cmp movsbl add (bad) jmp and or push (bad) jbe pop inc orl sub mov ret and inc (bad) repz sbb shrl ret ret adc cmp rolb ret cwtl in ret inc push mov dec sub cmp sub push imul fimul adc push clc (bad) (bad) mov jno cwtl pop je sub bound xchg mov jle je xor nop in fbld adc xchg cmp mov mov jmp cmpsl andl mov dec rcrl shr dec sti mov stc cwtl sub inc mov push mov inc or xchg addb js mov and sbb (bad) adc ffreep jle movsl (bad) rcll push (bad) jne jmp xor dec adc cmp pop push pop repz inc loopne addl mov push xchg xor rcl xchg xchg or jnp pusha dec ret dec and mov add jne cwtl (bad) test xor mov inc or sbb test push (bad) movsl jne clc outsl sti or (bad) enter adc xchg and mov gs and lret jbe inc or je dec mov movq mov mov or xchg push ds xchg sub loop push xor fdivs cmc rorb (bad) pop mov jns mov jno frstor sbb cwtl or adc mov inc inc sbb dec (bad) xchg pop cltd cld je push or cmpsl data16 or dec es and push pop cmp sbb dec imul cmp jmp push (bad) adc sub push add mov cli outsb inc das mov test push adc out mov push add push iret fmuls push mov push add ss repz ds xor hlt adc pusha loope cmp jns mov (bad) (bad) out add rcrb hlt call (bad) cmp mov pop adc and add das xor sti and sub or mov sbb sub (bad) pop and sbb mov pop cwtl dec add (bad) adc add adc (bad) jmp or or pop mov pop mov sub add es dec fwait or cmp roll mov pop out hlt mov cmp pop pop insb ret nop jne lock inc call cltd or fisub xchg mov mov ja das xor jae xchg adc fldenv mov add das sub xlat js cmp jge xor cmp mov (bad) pop insl dec dec push aad cmp or insl movswl shr add inc and or xchg sarb or add add xor or sub or or mov add daa sbb jno xchg lds adc cld std xchg add push add lret push or fwait ret int je xor mov jo sbb and and arpl or jmp xor pop roll or inc imul fs (bad) push cmp add pop lret das in ret mov lods lahf pop xor jnp or ss sub xor aam sub lahf mov xchg inc dec add xchg and sub or add mov cwtl jecxz push xor inc loopne or adcb fwait and add dec or mov pop add (bad) jbe or push lahf ljmp aad xor jb call ret jno aaa and xor add call roll lods mov cmp jo pop loope (bad) and push push or and add arpl cwtl xor cmp loop into add rcll pop cmp push jmp mov sub das inc lret rolb add into or clc hlt jbe fdivrs and add rorl adc mov add lods hlt cmp xor lret xlat mov jne mov movsl (bad) lock inc insb cmp testl pop inc inc xor xchg pop out dec push sbb adc pusha mov add sbb xor and add inc movsb dec cs adc mov rorl or mov loop push cwtl xor testl mov inc add or sbb les arpl and and jecxz adc push and clc arpl les push jmp push pusha daa dec mov push mov out ss mov test xor xchg fs adc int or fadd sti popf and dec leave push rolb or repnz add sbb out jecxz rclb mov or xchg dec adc mov leave inc (bad) decl push sub sbb push jecxz sub jmp mov add add test or and fwait mov cmc or adc lcall cmc cmp out cltd in push ficom inc jmp mov and inc jne test pop or fnop or and sbbl cld mov adc and jbe jmp sbb out adc loopne insb mov cli push inc push leave sarl mov ljmp mov and or sbb movsb xor push andl sub or pop aam jle scas movb mov jo test sub mov pop or jge loopne mov and dec push lret shlb rorb mov cmp jns mov mov in dec push push sbb pop or inc add adc mov or and xor fs bswap push mov push test mov call test push repz (bad) mov mov movntq or je mov xchg or (bad) stos jge inc sbb (bad) (bad) push divb xor pop aad or mov pop or rcrl rcrb xchg dec pusha push push push std hlt or push dec in mov lock lds jl cli jae add shr or xor push and add inc inc jecxz adc rcrb jecxz ret mov inc rorl pop lcall xor repnz imulb sub sbb rcll push push stc sub mov hlt test pop outsb cmpb sbb roll jle pop push xor inc sti jns out push loopne push xchg lock call sub sub mov popf adc sub bound mov cmp add or cmp jl sub sub push aam cld ja xchg jo xor cltd add int mov iret or ret scas mov push jl (bad) add lock mov subl xchg mov fcoms enter dec pop pop stos add adc pop sbb enter xor fcoml fwait fs testb inc insb jne xor push into nop push mov or or orb push mov dec loop out xchg push iret or mov xchg push cwtl js fsub mov stos std add xchg call mov sub int cmp mov and cmp mov das adc cmp sbb or jmp and inc adc add es (bad) jp and cmp ror pop xchg xchg std mov clc sub cmp ja call or xchg xor sti jle mov orb stc test jne dec sub test sbb shr mov cmpsb adc cmc dec sbb pop or stos orb push pop add gs fwait add and rcrb push push cmp mov push (bad) jne inc fist lea dec cmp xchg out mov ret sbb outsb jmp lock aam lea mov add inc enter sub xchg adc pop jo adc hlt add and mov jle dec adc lds xchg sbb sub fs es imul pushf inc jns mov sub jle ret xchg mov sbb adc arpl jp or (bad) arpl mov arpl andb js mov jnp mov (bad) push push pop aas mov or stc jl pop push (bad) sub mov xchg stos sbb add cmp xor aad ja pop hlt rcrl pop and cltd roll push and push sub add add push sub sub push cwtl xor add orb mov lea bnd mov daa or les push leave mov sbb adc add or sub andb loopne push stos adcl jne pushf jg (bad) and jbe test dec or in sbb mov inc jno andl adc inc or add sbbl std inc pop loope add cmp mov imul (bad) mov cmp lea shll leave or cmc dec fwait ss sar xor (bad) imul mov fcoms xchg ljmp mov mov ret lcall (bad) stc add add mov in mov daa addl sub sub sbb lret test pop push pop and mov movsb mov les arpl ret push test mov sub or mov imul out or cmp loope fiaddl add fbld sbb test aad and inc cmp mov test push xchg push pushf pop mov flds stc daa cltd jbe xchg mov xchg or xchg add addr16 push aam in mov clc stos jp mov pop lea lea xor mov es mov outsl test (bad) dec cwtl in pop push pop adc sub xchg cmp fildll fisttp add pusha cmp aas lahf mov adc gs mov sub lds daa sub jns add push xor push jo mov mov xchg icebp add mov sbb add in jo test push popf cmp adc pushf sbb pushf push or xchg add jns cli mov adc push mov push incl xchg in and jb stos subb xlat mov mov jo dec std push bound test mov icebp push icebp (bad) test (bad) mov cmpsl adc call push push xchg pop push mov inc mov pop mov mov and stos pop mov pop call lret popf pop pop inc mov aas fisubrl inc sbb lea sub mov ljmp imul add cmp adc imul push cmp inc mov add loopne add leave mov aam ficomp push mov dec fs enter clc fisttpll jae inc test adc lods dec pusha adc sub xchg mov nop sub mov or cwtl adc jb mov cwtl push mov sbb cld clc scas (bad) inc daa nop hlt pop les sub push cmp adc dec and test or inc mov scas or adc cmpb loop xchg dec adc push adc lahf add xchg add call xchg jo rclb loop aam fild xchg (bad) stos sub repz xor cmp rolb test or xchg pop xchg cmpsl inc lret es cmp aam jmp add cmpsl inc popa add fidivl les mov aas les cmp dec rcl xchg sbb mov adc lea das mov sub mov and xchg sarb jb adc rclb push je xchg movsb jmp outsb mov ljmp xchg sub leave and adc lahf lahf lahf leave add lahf push mov enter aas sahf xchg add adc mov pop xchg imul adc push shr ficomp mov les mov (bad) rol push dec adc add lock jg cli mov add pushf cli pop adc and jg push inc mov in mov adc cltd cmp push adc inc imul cltd cld mov leave cmp mov inc pop enter nop sbbl call mov in dec js roll ret hlt or push mov sub inc sbb xchg lcall or adc int jl pushf inc jmp push cmpsb adc mov iret in cmp xchg orl pusha mov popf adc mov mov popf sarb adc sbb or adc jno inc jge add inc sbb mov enter sarb sbb inc enter add mov or lahf jecxz test mov in movsl fistp cmpb cmp aas mov and leave inc mov and nop push jb jecxz jmp sub mov push lahf mov mov mov movsb pop movsb dec in add push mov jae mov sbb loopne pop dec and enter push pop xchg xor movsl test push add add cmpsb ljmp (bad) mov aas cmpsl call pop add cs test and add or adc daa xchg addl stos and (bad) roll mov mov push and pushf stos inc mov pop stos enter rorb sbb in adc sbb pop pop cli ret mov and dec pop scas xchg pop sub push leave sub int3 les and pop push mov mov or xor adc test insb xor test lods xchg call inc lcall incl adc in xor pop (bad) loopne inc adc add sbb rcll pop scas rolb in jb mov scas je and fs rolb ret and loope popf inc test sub fist js das mov mov nop mov pop mov jmp and mov pop adc push xlat lea jmp pop cld pop (bad) mov mov adc mov sarl (bad) ljmp rorb (bad) leave or jae mov test bound sbb cmp mov rcrl call add inc add adc fist sub cwtl push xor out or and mov jmp pop cmp jg sub xor xchg xchg outsl icebp cwtl test mov sub push adc mov fs sbb std mov pop sbb push and sbb xchg mov int pop mov or mov xor nop add dec dec test sub pop and scas rclb test stos sbb jmp mov cld cmpsl push test enter push mov mov inc push mov xor aaa sbb add outsl inc cmp xchg jg dec mov lcall and jae jae movsb lcall push pop pushf mov lahf add sbb xor mov jg lds test dec rorl and scas ret enter jg sub mov mov mov aas fstpt shrb or cmpl dec pop pop mov rorl cmp psubq bound sbb (bad) notl (bad) inc enter sbb inc arpl mov mov aam mov pop mov pusha adc stos jg pusha lds cmp popf xchg scas cmp dec pop int3 sub pop xor add sub dec and cmp or push add (bad) fsub shrl push sbb pop loopne mov loope lea lea add dec inc imul movsl push jle inc imul adc sbb call jge jns lcall jmp scas nop xor push and lahf inc or dec out scas test lea (bad) sub aad xor dec fucomip push xchg push and mov mov test sarl xor lcall xchg movsl xor pop or adc icebp (bad) sbb push aas mov mov call dec inc add (bad) cmp bound lea test push and movsl test andl add mov and iret push pop and lea push mov mov xchg in jo sub dec or lea add or inc mov cmp and lret pusha roll ret inc dec pop pop adc mov in xor push clc push mov cmp adc pop clc sub inc dec xchg inc int cmp addb sbb outsl add mov pop nopl sbb sub sbb imul pusha pop dec movsl add add (bad) insb inc or arpl push ss push mov xchg loop xor or sub mov and les lods psadbw pop cmp push in subl das nopl cmp cmp mov ficom push aas lahf mov (bad) and mov sahf mov mov aam (bad) pusha in loopne sbbb sahf adc or loope lea pusha pop test mov setno and mov (bad) lods lea adc out inc mov push arpl imul jo pop push and insb aam inc (bad) aad mov adc orb shrl in movl jae test inc mov stos mov dec les mov pusha decl xor in bound in adc (bad) fldt sbb cmp lea nop mov mov fwait cmp adc movsl push xchg sbb mov sbb rorb sbb pop hlt (bad) xchg les repz and lods stos es push mov sbbl enter fistpll and adc dec les lret adcl cmp sti testl fildll insl rcll adc ss std jg rorb fs lea or das lods adc shll mov pusha stc insb sub pushf lret in std pop sub inc fild int3 lahf sub sub inc pop out int3 pop push test mov adc pop inc in sub in lret push loop xchg int3 push jb mov das add and pop add (bad) mov push in int mov or jg adc pop jne int lahf inc pushf stos mov into inc jmp pop inc or scas or aas hlt outsl mov (bad) mov fistpll out jae push mov iret daa or mov sub xchg iret and insb mov push pop xor xor xchg add fimul pushl pop push mov (bad) (bad) outsl mov adc es shlb pop pop mov inc pop push subl lret mov fadds mov xchg (bad) dec fildl cmpsb scas xchg or adc push mov lock dec or cmp lahf sbb add mov ficomp inc sbb push cltd pop es and js lock inc hlt dec mov rorb mov adc push ljmp rcrb arpl xchg jbe and jbe push adc mov dec ljmp sbb push cmc fcomps adcb jmp jns rolb aas fcomip imul lahf je (bad) lock lods sbb stc loopne push lds mov insl xorl es push sbb or pusha mov sub popa or inc fisttp lods lea fbld aad adc nop inc mov sbb and adc mov loop and aad int3 in or lea aad mov and sbb aad mov xor (bad) add (bad) xor or lcall incl (bad) cwtl jg das mov and xor add lea mov cmp pop cwtl pusha or xchg dec lahf enter fcom test sub add mov cmpsb sbb mov xlat outsl mov pop mov fsubs pop push add nop inc jg xchg inc mov xchg inc mov push dec pop pop push cltd and adc test pop pop and (bad) flds sbb xchg mov add cmp adc and pop xor mov pop mov xchg mov or jns (bad) lea or rorb push xor daa cltd pop dec pop mov fisubrl dec inc imul add xchg imul mov fisttp scas jb repz mov (bad) shr (bad) and add fs fistpl inc scas push jg and sbb jg or nop or lahf in cwtl test jg leave mov xor jle out and adc sbb sub add cmpl and add jg adc add or lods (bad) fsubl inc lds addb pop fdivrl jg test test jb (bad) (bad) js xor jg aad and lea fadd push mov lea dec sbb mov sbb adc sub (bad) and add sub pop mov dec hlt ficomp dec add bound cwtl lods jl (bad) lahf xor ficomp adc aas insb lahf fimul mov (bad) or jmp lods adc cmp sub pop dec mov add inc push cmp jecxz,pn xchg std test mov xor incb pop test cmp imul sar rcrb jno sub hlt xchg sub pusha jecxz inc inc js add lea lea sbb sbb fidiv cltd push mov ret lcall mov fisubr aas sbb add mov lea adc and (bad) adc shrl or add lods fsubrs pop pop cmp mov mov adc dec dec lea mov andb sbb mov cmp rolb or loope pop int3 pop adc cmp and jg jo adc mov in jecxz or push mov add adcl cmp dec mov test add out cmp cmp pop mov arpl lahf adc xor sbb push stos inc sbb fsubrs test insb xor ja push add rolb divps cmp cmpsb add imul adc push rclb jmp xchg xor les in push or add fadd adc dec mov (bad) mov inc jg push adc loopne inc sar movsb add add push cmp sub jo scas cs sbb (bad) fadd push test or imulb bound lret cmp and cmp test xchg imul lds mov mov and xor cmpl push adcb pushf in incl mov mov push mov leave jmp mov adc sahf push push xchg add cmpsl pusha and cmp cmpl mov lcall aaa mov fdiv xor (bad) out lahf movsl cs mov or adc cmp lea loope adc adc je pop mov mov out lea xor sub lods test pop subl push sahf mov xor cmovl pop jmp mov int adc inc inc sbb push call jg add and cmp mov enter leave in int3 pop lock inc jb fsubr add lock push pop imul or or xchg ss adc jb mov mov adc loopne jno (bad) out and test and js inc push and (bad) jo mov sbb fsts and incl xor or inc and add es push or fbstp (bad) hlt push mov or push xor stc loop adc inc ret cmc add stos inc or mov aas call inc into dec jl call mov inc insb call cltd pushl push mov mov jbe xchg cmc (bad) outsb rcrb push adc idivb add push jns inc push pop cwtl add icebp inc mov mulb push add aad je in insl mov fs cmpsb test jecxz lahf push js adc xchg add mull popa in shrl notl add fs testl mov dec cs call adc (bad) clc adc add (bad) push loope jge in mov push sbb insl in or cmp xchg inc dec (bad) pushf jg aad enter int3 inc fsubl clc push insb adc xchg inc pop push fbstp popa or repz int push nop cmpsl loope inc test or pop stc mov pop testl movsb sub sbb cli dec pop or mov dec adc pop sti and movsb and (bad) scas sti js cld inc mov cld push call lock aaa cld nop push call adc sub add (bad) jbe mov adc inc lret fdivs fimull jo cmovb std push gs std int3 add lds and mov and and add push dec stos jno (bad) xor fwait xlat es enter push sbb and mov int dec decl xor lds and pusha xchg or rolb decl andl pusha dec in or sub adcl loopne mov dec inc mov push inc jo or add stos pop dec aam stos mov aad add movsb or loopne add or out popf sub cld pop add insl push mov dec faddl andl aaa test dec les or mov pop mov roll notb xchg add test xchg add lods push ss js add mov movsb into xor inc pop paddsb lret rcll push mov mov int3 pop enter pop cld les mov cmp add ret adc mov jl push and jl scas adc add mov adc scas inc xor (bad) sub sbb imul test push scas fstpl roll xchg ret adc mov xchg pop mov ljmp ss movsb jge mov inc inc sub sub sbb cmpsb inc lret and jecxz (bad) jo and push xor sbb in subl inc jp je es int3 add xor dec or sub call out xor icebp xorl pop mov les loopne hlt fs fdivr lock in inc loop ret aad je adc adc (bad) jle in ret int3 add fs inc ds add adc lock subb mov and fist (bad) xor inc pop and insl pusha add enter add (bad) jb inc sbb nop jns jns movsb xor adc and or sbb das das das pop mov adc sbb outsl lahf pusha fist sub scas addb in sbb jno or cmpb xor dec pop sub mov push mov dec sub jnp lods sbb fsubl xchg mov fadd insb mov sub mov mov inc adc test or cmp add xor movsl fistl add sbb bound pop repnz in push (bad) dec cmp pop inc cmpsb inc mov push dec int3 lock push inc cmpsb lcall xchg jl lret sahf add fwait add sbb adc and xchg add jge jb les cmp sbb ret xchg (bad) sub test push (bad) mov lods das subl ss cwtl mov ror inc sbb add cs (bad) stos xor pop jl lods jnp les clc lds dec sbb xor and pop mov stc loope xor (bad) mull mov inc aaa lock inc rclb ret loopne (bad) jne adc daa arpl sbb sub sbb aas mov inc aad jb out adc fucom mov sti sub outsb add sbb imul push fcompl xchg int3 es clc mov push (bad) ss out xor or xchg hlt shr incb les jmp jl dec insl nop or insb pusha insb lods pop addb nop rol xchg or pop idivb mov pop outsl inc push jg cmp shl push fild push (bad) push or movsb xor cmp add inc addl xchg stos rcrb sub push push lahf inc push add mov inc sub lahf dec pop outsb push add jge (bad) and and or (bad) xchg outsl or push jo push test jge xchg outsl or jo push mov xchg outsl lahf pop lahf outsl or lahf xor xchg pop pop lea inc imul cmp mov sbb pop jecxz out or daa fmull or cmp inc xchg inc sub test add pop pusha adc ja in sbb pop clc je add cltd or mov and (bad) or test es push rol ret adc push pop jae nop adc dec insl pop clc push cmp les cmpsl adc fsubr add cmp sarl or dec pop jnp jns iret xrelease jns inc fidivr out popf cmpsl mov sahf int jns (bad) jno jb nop sahf int insb jae jo je (bad) rep fnstsw pop lock jne xor jns iret inc mov ja fidivr jns adcb push xchg fimul push push add fidivr into addb xchg mov data16 or push cmp or dec mov mov push fsubrl std mov jnp dec lods cmp adc cs or jecxz push inc pop push inc inc add pop inc pop (bad) in ljmp jbe insb imul and jae je outsl outsb add decl outsl and add cs add arpl insl outsl fs (bad) pushl gs arpl gs jae arpl jb mov jo scas fcmovbe ficom js jns add sub (bad) jbe and je and imul cmpsb inc xchg pop ss fisubl push dec push fs shrb out (bad) jb ja pop lret mov push gs adc sbbb push cld daa and xchg (bad) pop cmp cld outsl data16 jp and jp pop pusha mov inc outsb (bad) in popa not push sbb insl (bad) loopne xchg pop mov push dec dec and ds or pusha or pop sbb xchg pop inc cmp mov push inc cmp sub fsubrs add pop push jo lds sub push dec mov or xchg test mov outsl gs inc jno mov pop xchg dec push add mov cmpsl adc je cmp adc jbe gs mov xchg jne data16 mov lods adc outsb shlb ret push xor jae call mov mov (bad) in jne data16 push fild or add lods jge and xor push sbb sbb inc and int inc adc pop lock pushl (bad) insb fs imul inc jbe dec dec jo dec and aam sbb jp inc dec dec add adc ds ficoml mov rcrl adc faddl mov mov ds push cmpsb xor or adc mov ja daa inc mov insb jns mov or inc mov or fistp push divl jecxz shr popa dec pmullw cmp push jb lods loope inc mov std negb fsubrl cmp jmp xlat addl out daa mov inc push pop inc dec pop dec inc pop jbe push push pop mov cmp pop mov jg adc cs or mov or adc inc and cwtl cmp pushf aad mov bound sbb xor pop push mov inc insb div add sub je jbe loopne push shrl dec mov stos mov add mov aas movsb ds add je cmpsl mov adc mov out loopne mov inc sub jne fdivrs dec in aam xchg outsb push es clc push push gs imul xchg pop ds jbe push popf adc scas data16 outsl sub mov imul pop fcmovnbe adc sub mov fimul cs and push daa adc and sub orl and sub push fsubrs sub ret sub or mov popa mov xor push gs push movsb pop inc mov lahf xlat add pop inc pop out cmp pop inc popl daa rorl ret jp mov push lock push sub cmp dec inc pop stos adc in inc dec dec xchg push push loope sarl sub sbb adc pop rolb divb sub lods fisubrl xor fs mov push data16 xor in cwtl out inc adc and fbld sub imul push inc gs test mov out ret insb mov and add push outsl or fsubrp push sbb or popa sbb roll mov sub mov mov pop loop pop lcall add pop add add pop jae mov pop das pop add push aas pop outsl pop test mov jg jae mov add or add pop mov add pop rolb in out pop pop mov pop aas jg cs add xor sub movsb jno xchg pop jg (bad) das mov decb fistpl fidiv dec inc fldcw sub push cwtl orb or scas jge lods or add mov out lods mov sbb add jge cltd inc add adc insl pop mov lahf lock scas add add push scas sub jae repnz loopne sub inc insl (bad) cs pop mov sub and pop into scas fstpl js cmp data16 cmp movsl les and add ja popa outsl ljmp sub outsl xor sub add imul insl out and dec fs popa js xchg cmp sbb cs pop (bad) insl addr16 add in xor aas dec outsl arpl mov jo cmpb inc popa imul mov and loopne cld iret gs jne dec dec adc jns jb faddl cmp mov loope incl incl add add jmp jbe mov push ds add repnz dec pop sarb addr16 pop sbb pop xchg push jne jae daa jge pop roll fs mov jns movsl dec add sub push sub push outsl jae or (bad) sbb add mov adc and xchg fldenv jae mov fsts add inc jg jo xlat es je in popa (bad) lock and inc mov lahf outsl push aaa cmp xor sub loope jmp in gs sub pop lahf fnstsw dec jne push pop inc test pcmpeqb aaa jp sbb arpl cmp imul (bad) or arpl data16 fmull lock inc fs inc jns add mov push pop jns push enter or (bad) repz gs fsubrl or ret loop xor sbb mov fwait xor jp and xchg pop xorl push sub jmp push loop imul xchg outsb daa je pop testl xor mov jb outsl dec sub sbb sbb pop push lock lods cmp mov pusha push jbe cmpsb stos cmp adc ja push add push and sbbl push imul mov mov mov daa cmp fs mov adc push je (bad) mov lcall xchg push in fs (bad) loopne (bad) ficomp adc mov mov add mov lods data16 jae and push mov andb adc dec fsubp notb inc fs xor mov cmp gs mov jae (bad) shr inc outsl jne lock sbbb cmp jl lahf mov and or ds adc dec pop cmpl fs mov out rol pop push iret cmp out dec or fnstcw inc jnp mov xchg pop add fwait add mov push (bad) sub mov rcl add add fcomp outsb push fidivl jp sub pop ds push sub or fst ds imul idiv sub outsb and (bad) mov jecxz iret inc jne cwtl cli mov cmp test adc sbb fcomip loop xlat jge sbb popl cmp xchg and mov dec sub add or inc popa dec push add jns nop sbb ja push cmp das outsl nop insb push outsl pop dec dec push or add imul jl jp cmp xor es popa bound rorb imul and popa inc div and imul dec add or cmp (bad) push pop cmp cmp dec cmp fidivrl jae jle pop cli sub push pop xor jle jo sbb sbb dec pop adc stos test pop imul ret arpl aas sub pop mov insb out ja cmp shl inc cmp pusha je push pusha fwait pop sub push ja int3 sti or sbb jnp lds add add xchg xchg add sub shrd xchg inc add insb fdivrs ret xor push and ret ret mov loope jnp inc pop sarb mov mov pop inc cmc gs pop lret pop mov add mov test pop pop mov inc add sub aam scas loope repnz out jb (bad) add inc add pop (bad) sbb cmp jns sahf enter xchg or movsl sub test xor adc inc cmp cmp or xchg and mov dec in or repnz push (bad) mov js add mov into cmp les fldenv jp jno enter outsl and add ret clc cmp sbb adc push add pop popa call pop xchg jl push add pusha in test cmp pop jo or orl in add dec out jp,pn pop mov test sub and es mov add mov imul call cmp ja xchg pop sti push and jns bound les jns imull inc mov mov imul inc adc adc pop outsl mov leave xor add out mov inc dec add push ja mov sbb mov ret insb int cmc jne xor cmp cmp and mov mov outsb push jns mov jnp and std add push cmp fldl pop push imul sbb daa cmp jo xor pop dec xchg push sbb scas xchg data16 jne and cmp cmp mov roll jmp insb roll pop push add icebp add sbb test ds mov or mov and push jb xor outsb out push adc mov mov pop dec insb pop imulb das fs scas insb sbb inc push mov incb pop ds cmp fsubrs ret out cs addr16 imul pop adc popa (bad) loope ss jae push sbb or test or leave jae jb popf jge nop insl xchg cmp shlb pop and test call lea sub stos fs push shll add pop or je pop dec int3 shlb adc or subl pop rol pop mov out jae xchg pop mov xchg add mov xchg aas ja cmpsb jge fisubl loop mov addr16 and mov mov dec and data16 ret fistpl push stos mov jne imul cmpsl inc pop arpl daa pushf and and ss push int cmp bound xor inc in ja add loope pop add stos outsl cwtl popa add data16 dec in (bad) push sub shrl fisttp add jnp xor ds jb push popa movsl ja sub adc or pop cmpsb xchg jmp (bad) fnstsw into nop mov xchg mov xor popa jl bound sbb push loopne jne jo test mov and pop (bad) push dec dec mov imul ja pop xchg xor test popa mov arpl add push test (bad) mov dec push add sbb add cmp pop ficoml je and adc sub imul fs sub jo pop or mov xchg xor lods push lods popa test add inc add sub iret push int3 fadds jae aad loopne ret adc xor fiadd vmread mov outsl pop (bad) inc jno in add bound add xchg pxor and xor outsl adc push mov push xorl js add dec stos and lret ret mov adc mov and imul xchg dec jnp popa and xor add cmp and and loopne sahf push shrb outsb mov jbe inc sbb mov xchg mov sbb mov into arpl mov outsl and lea sahf cmp and cmpsb and push imul hlt lahf mov or mov add inc daa jl jne xchg mov lahf adc xchg into leave or shrb dec push dec jae pop sub inc insb and mov push pop nop add mov test sub dec inc add cmp mov ja (bad) flds xchg push imul les mov jecxz sbb sbb adc out les dec outsl inc cmp ror in out daa scas and out sar xor and cmp xor jae popa xchg add add inc data16 iret push xchg mov pop fildll pop ror fistl loope aaa add lea or loopne push daa or rolb xchg add sbb sub add lods or cmpsl push stos loopne je mov or popa sub xor push pop jnp or ja daa cmpsl outsb lods inc mov inc mov sub sbb mov daa mov pop lds inc fs sub dec lock jnp cmp rcl mov dec inc jne jecxz and cmpsl and dec shld inc inc mov sub cld fdivr inc inc pop push inc push rcrb sub outsl nop insl popl inc pop pop ss push scas mov and arpl sub xchg push mov (bad) jnp vmread popa or in insb es subl das mov rorb inc inc loop test jecxz inc xchg mov xchg cmp fwait mov insb jne gs sbb inc aad mov dec daa pop les aam addl mov jecxz jecxz pop cmp sbb add in mov cmp pop or push xlat or ficompl shll sbb ljmp inc lcall iret inc inc nop xlat push lret out and or pop sbb mov add sbb std push push push enter inc (bad) shlb cmp mov xchg and lods xchg lahf mov inc mov cmovle pop lret inc cmp clc push and cs or pusha xchg (bad) fcom dec js push sbb mov dec les or xor add inc sub fimull aaa mov lods xorl fcmovu outsb int3 loop test je push jne call aaa and push sbb add fs scas adc sub push push sbb sub xchg xchg jg cmc (bad) pop mov adc addb mov int adc dec xor imul mov push sbb insl jg fisub push add push push dec push inc inc inc fcmovbe scas (bad) pop inc push push inc dec inc lods sub dec adc or add push mov (bad) push shll xchg ja or pop aas adcl mov popa sbb stos pop daa test ds aaa sbb and bound insl sub mov xor jo sbb nop stos es ret fdivs mov sub iret rorb int sahf mov xor int3 (bad) push or xor and daa and sbb ret push jno cltd adc xchg in or jg inc dec push inc setae int3 sahf insb push data16 mov aas jecxz inc cwtl (bad) mov dec pop cmp (bad) mov scas add imul sar rorb jae loop nop mov add daa sbb xor mov jae pop iret ret mov out and and or cmp and add sub (bad) and roll pop sub sub dec (bad) fidivr cmp dec pop inc sub sub push xor pusha pcmpgtb xchg rcll loope es arpl add or mov aaa jo outsb adc aad icebp fdiv push outsl pop out xchg jecxz scas push pop lock popa cmpsl pop mov subl sbb pop pop cltd cmc or adc dec je insb inc popa mov push out lock mov imul push push push insb les mov pop mov push das mov adcb outsl insb add es jns lahf les sbb jbe pop sub daa cwtl mov (bad) xor inc das arpl fidivl push lods push pop test sarb fdiv xlat push push inc pop push inc inc add ja and daa testl cltd pushf push fdivl xor xchg popa push les xor sbb cmp pop movsb and sub jp fs jecxz pushl xor and negb dec xchg jo insl arpl sarb insl fistpl mov mov insl cmpsl dec mov mov dec jmp dec test adc jge lods adc pop iret mov lret pop imul xor sbb cmp (bad) pop sbb jbe dec push fnop pusha cli call test lcall aaa rclb pop mov xor pop or push adc lods lea out sbb jne (bad) push js dec (bad) or sahf mov inc add jmp sub pusha jbe adc test push test xlat mov out addr16 (bad) inc cmp push outsl xlat movl or pop mov sub arpl xor cltd xor sbb xchg sub or push out jg mov push dec fs cmc and movsl push and lock imul and lret aaa adc repz xor (bad) xor loope and outsb and mov (bad) pop pop inc xor fiaddl sbbl mov or (bad) mull cmpsb imul push loop push and xor push fisubl insl scas xchg sub add js sbb mov stos inc ds cmp xor or aas sbb subl push inc mov add and aas jbe pop jo enter scas lock adc ds xor push add pop sub (bad) arpl jp pop arpl or add dec mov aas shlb jo adc add add mov jbe xor fmulp mov and arpl ja imul andl orl clc test push and push adc lcall push mov outsb or adcl es lcall and scas push mov jle push pop test mov mov arpl xor addr16 js push push call fidiv sub jecxz cwtl inc xor and mov (bad) dec and and outsl inc jbe rcrl dec and jmp and or mov insl add push or sbb pop inc addl inc cmp lcall fbstp inc or jg pop imul xor xor sbb xor xchg dec inc mov out icebp js inc mov and int sbb test mov xor insb mov mov (bad) adc pop xor (bad) push sub (bad) ja nopl adc aaa mov cs cmc xor xor (bad) js adc test jmp mov jne sub loop jp dec and dec inc outsb mov insl and pusha dec push xor or loopne ljmp inc mov add fstpt sub std cmp jne pop hlt sbb add dec gs dec push pushf (bad) rorb fdivl jne movsl int test push test das xor inc jbe imul insl or dec inc dec or mov xor lock jne inc or mov lahf mov mov js (bad) (bad) push and rorb outsl and adc dec jne dec fdivs sbb sahf dec addl push rolb or shl push inc popa xchg jno cmp dec xchg es popa sti mov roll insb push nop inc xor imul cmp fdivrl sub inc cli jnp inc or (bad) rolb add push dec out pop adc sbb adc ljmp or dec enter insb hlt or fdivrl insl mov add jb adc xorb adc dec xchg adcl mov enter imull aam push push shlb cmpsb pusha out (bad) cmpsb aas cmp sub sub sub lea imull mov sub cmpl mov ss cmp sub push mov dec add xchg dec into test pop insl sbb sub mov mov mov dec insl (bad) js jnp jae insw lahf jne sbb xchg shll inc inc dec xlat aas add sbb jns outsl out push sub xor sbb dec pop je pop jno mov loope arpl pop or add das jl sub inc std push pop mov cs mov mov sbb mov jns outsb js cwtl sub adc test inc lock sbb fistl ja mov dec shlb rclb inc loop fisttpll push test jb cmp mov dec sbb sub inc lcall sbb (bad) pusha push push push dec push dec push dec push dec dec dec (bad) mov push dec push dec push push push push push push push and aas ret fisttpl push dec push dec mov dec push dec push dec push push (bad) (bad) jg ficom je push push pop push pop push pop push pop push pop dec pop dec pop dec pop dec push (bad) push incl inc push inc dec inc dec dec dec dec dec or push dec push dec push dec pop dec pop push pop push pop push (bad) outsl ja pop pop pop pop pop or push dec leave push push mov push push push push pop push idiv pop pusha push pop pop inc pop inc pop dec push dec push inc dec inc dec inc dec inc xchg outsb add dec dec xor notb push lcall outsl inc pop or pop push push push mov jge nop push pop push mov pop mov and js ja xor jb insb push mov fcmovne jbe dec and push pop pop pop push mov idivl test mov add (bad) daa mov push bound bound or or movsb scas xor or add dec inc jnp lahf push dec push nop mov hlt pop mov jo in dec pop push outsl dec push dec cltd popf fisttpll rcrb push inc cs xor in fiadd push push dec push inc dec push into mov mov dec je jg or fucomp cmp pop inc push or out mov add xor push push or outsl pushw scas dec (bad) lret push push and or sbb repnz mov icebp fstpl adc dec push dec adc xor dec adc pop dec dec dec adc icebp inc push inc push cwtl dec xor push pop push pop dec pop add popa dec hlt and push push pop lock push inc mov pop push pop push pop dec fsubrs mov dec setb inc (bad) push dec xchg cmpsb pop dec (bad) push sahf insb int adc sbb inc push inc mov test xchg sub push fxch aas fsubl jle pop inc inc bound pusha inc rclb jl cs push inc dec pop inc inc push or jo rol add fcompl adc push and dec js lods lea cmp push es mov and dec dec dec call outsl data16 aam push push pop cmp dec jl mov push dec pop (bad) dec add sbb orl pop dec pop add (bad) pop dec dec push push insb push pop and pop dec add in negb fmull dec push dec push rclb push cmpsb or cmp inc movsb dec and xor cmp mov xchg into sub cmp fisub mov lods imul push pushf cmp loop pop push js push dec push cld dec push push rcl jmp push mov mov mov pop push daa xchg pop mov xor scas push pop pop mov push push rclb enter pop sub dec push mov push pop or fiaddl enter dec aas pusha es ret sahf dec and add push sub data16 dec sbb mov out into dec rolb add add sbb inc pop pusha nop push adc push pop lods or shlb mov push jne mov push lcall and jo add pop sbbl mov cmp mov pop dec push cmp add dec jb cmpsb lods cmp and and add add incb pop rcll dec pop cmovb pop adc xchg add jle mov fwait push pop inc push ret ljmp inc mov sub andb test out or jbe xor ja push dec xchg test flds pop dec push jbe hlt les jecxz and xor test cli xchg xchg dec out (bad) sbb loopne push movb out aam push ja push loopne push push push inc jno repnz mov cmp inc inc jp dec in or hlt cs inc dec movsb faddl add or js push stos loope divb andb ds xor shrb jbe push dec fdivrl or adc add clc push xchg aam push cmp pushf dec fs (bad) pushf xor stos data16 jp push add push jbe push cmp adc xchg jp sbb cmp xchg add push in cmp inc test cmp mov cltd rcrl lock push push or mov xchg and dec popf mov xchg sub movsb xchg inc and push inc push fimul dec mov lahf mov dec pop test dec cwtl dec add adc mov inc add dec adc pusha dec cwtl mov push xchg and or add xchg sbb dec test xor sub sbbb push push jle push mov inc pop dec in cmp cmc (bad) or popa aam sbb mov add testb mov int3 push push and sub fimull loopne loopne lock lods adc sahf jae or lret das outsb mull stos push and cmpsl int3 cs adc test test int sub sub enter sbb add add adc loopne pop and add sbb pop cmpsb (bad) lret and clc rolb cmp adc or mulb cs or mov push or pop push dec xor xchg subl outsb mov cmp dec sub sbb dec out push dec mov inc xchg imul addl mov nop ds dec insb test inc mov cs or mov cs lds cmp pop push dec xor and (bad) loop xchg xor sub mov clc pop pop xchg sbb jecxz or inc pop hlt cmp insb ret inc ret dec jbe adc dec and loopne es in dec out or test push sub (bad) mov or or or je mov lods dec xchg jnp cmp loopne xor push bound push pop push test jo stos mov inc push inc insl push adcl pop push pop xlat pop ss pusha dec lcall sbb pop and scas push dec dec adc add xor pop xchg mov jno inc push inc jb outsb xor push inc or or pusha push outsb pop or xor dec sub pusha or push mov inc push pop inc push or dec lea or dec (bad) mov (bad) dec inc dec mov out cmp lret popa and loopne dec push lock push dec lret push pusha scas add nop add push dec test ds js out push dec lcall inc push pop push repnz (bad) ljmp xchg ret jbe lret xor sbb mov pop add in sarb push push cmp and push ficom and adc push es pop push xor stos mov xor dec push fs out aam mov pop dec cwtl loopne adc pushf add into ficom daa pop ds lock ficoml or push xchg out sbb push mov or xchg mov (bad) mov pop cmp insb and push add and mov cmp outsl or add adc jb xchg sub sub push push add push fcomps push popa lods jle mov push scas addr16 decb sbb cli pop sub jo test or dec cwtl sbb cmp pop dec sbb sbb mov and in push mov cwtl xor dec ret (bad) jb outsl jl ret jecxz add push add adcb dec insb xor sbb dec adc or test (bad) pop xor les or cmp scas mov sbb movsb push pop push mov xchg lock pusha mov pop push push pop cwtl (bad) sbb sbb dec inc or loopne add das ss cmp lods test dec or xor add or mov dec add xor xchg mov push in inc push dec xor fs xor pop icebp push or je sbb push es xor int3 pusha add push enter (bad) inc (bad) xor xchg mov daa subl jo test mov adc sbb js ret push das adc repnz dec subb dec fcoml je (bad) cmovbe jmp (bad) sarb dec iret push mov inc addr16 sub mov test leave fs jp loopne xchg jb scas andl andb push jno add or out dec adc stos and push pop or fadds xchg les sbb add mov rol xchg addr16 xchg push ret cmpsl add dec movsb sbb xor dec lods cmp mov adc lret jbe push mov (bad) cmc mov push lcall scas loopne iret out add cs adc enter add aam pop in dec fmuls dec pop push ds fiadd jo jbe repnz test mov push push pop sahf push pushf add push and cmp into inc int3 and rolb dec xchg push movsl inc das movsl ret (bad) fbld jo push hlt popf push mov sub sbb mov xor mov divb hlt xor dec test daa imul xchg push jl push out xchg in jbe iret push popl xchg scas push push mov ja sahf inc adc mov push pop dec pop push pop sbb push cmp rclb adc xor (bad) pop mov int3 sub add addl cmp mov cltd adc dec and mov cli xchg scas aam pusha popf icebp sbb imul or bound inc popa hlt sahf push and int3 adc aad mov enter cmp xor pop dec mov dec sub pop in push test aad push movsb cmp into mov add (bad) sub jnp lock push push adc sbbb bound sbb popf add (bad) and xchg or clc pusha sub es dec mov shl xor push cmp adc adc ficompl xchg lahf dec cmp adcb sub push inc or xor inc adc or push xorb in dec dec outsb js arpl bound lea andl es cmp out and jl or push mov adc idiv mov adc test push es bound dec pusha dec pop dec add mov pusha dec pop mov (bad) scas dec push push push (bad) jbe or add dec push addl imul js lods push adc push in aam dec loop dec rclb sbb push and adc into mov inc mov sbb popa inc push inc (bad) (bad) dec mov or or nop adc fcoml pop inc pop mov push inc sbb scas cmc xor xor lcall add and push push pop cs xor or pop out push int3 adcl scas push and cmp inc cmpsl inc xchg rorb push inc cvttps2pi push inc add pop inc cli dec dec rorl daa cwtl mov stos (bad) test sub pop mov out fmuls xor inc push cmp push or stos loope pop outsb out push push push add and ficom or inc dec and pop hlt lods addl add out imul add pop rclb lods push sub add in mov shrb (bad) xor pop push call mov push sub mov or out data16 push dec or sbb pop aam call push xchg das jmp daa pusha push das pop sbb scas sub add push pushf push setae hlt xor xor push insb pop cmp add sub movsl (bad) jmp mov mov and dec bound popa dec adc jp,pt pusha cmp push sbb sbb shll or xchg pop js push dec or push sub repz or sub sbb jp pusha add xlat push mov xchg stc jbe jle inc bound aam inc or push cltd pop xchg decb outsl lock subl inc cmp push mov and es xor mov jle push or leave iret ret jmp adcb cmp inc lock or mov popa or and adc mov arpl pushf mov dec js addb scas cld jle or xor cmpsb adc pop push push mov jl mov ds adc push sub lea pop push or pop (bad) jbe notb push pop in push cld adc pop pop popa pop bound sub lods mov mov jo and push add call dec ret add rorb aam mov push out push cmpsb xchg sub push mulb adc xor or push fwait push call or dec xor dec push add push test inc sub cld cmpsb add out mov stos gs pop dec popa loop dec add loopne dec pop repnz adc add sub pop push mov add dec cs dec ss scas push (bad) pushf aas (bad) sbb inc decb call (bad) pop adc add popa push loopne push cmp dec or add mov mov mov out pop add loope cmpsl inc cmpsb fidivr pop push xchg pushf push clc jp push pop stc (bad) mov (bad) shlb dec add insl (bad) shlb cmp mov jo or inc push inc rclb ljmp and mov lea and lock dec pusha dec jle add add into shl jle push scas dec popa ds xor mov pop push xor fmull add or js push repz push bound jno and adc out pop out sahf test outsl pop loop adc push gs outsb cltd cmc (bad) clc and or sbbb sbb sarl inc add jae inc inc leave push dec out loopne mov fisttpl adc (bad) fistpll jbe in jmp push mov cmp xor xor push or cmp (bad) and push rorl mov or je push (bad) scas jle inc inc mov mov sbbb loopne stos or push adc pop lea jo popf jl sbb dec dec popa mov dec ds arpl mov lcall xchg and push and pusha (bad) pop dec dec inc arpl cmp mov scas jo js pusha mov jo les dec dec bound push sbb sbb das sbb or push popa pop bound pop popa in sbb orb cmp mov push fcompl cmp in hlt loopne or dec sbb bound mov add adc adc add adc xchg push movb stc adc sbb push ret arpl sub mov popa or (bad) sbb pavgb xchg mov mov js and pop mov loop mov lcall adc ret int3 adc mov and sub test pop push adc int3 adc cmp sbb adc addl out pusha add push fimul scas or add push mov add test scas fcoml dec (bad) push lods (bad) dec xor movsl dec popa sbb pop add in push sub push xchg xchg dec push jno lahf dec xchg sbb (bad) dec jo jne sbb and and inc push and mov xlat pop add fs add in pusha jno sbb inc adc call pushf ds inc dec dec push repnz sub inc push mov ss ds rorb mov ret or push mov in popa push popa or add sbb push (bad) jo sub pop cs orb ljmp xchg out popw mov lret mov fsub push push dec das loopne mov mov push sbb pop jb aas call repnz lods test pop es pop shrl cwtl insb dec pusha aam sub cmp sbb add in adc inc dec mov dec fs or mov in aam sub xchg sub pusha cs add and push scas sahf mov cvtps2pi adc mov sbb sbb adcl fisub (bad) adc ljmp mov test in call negl mov (bad) pop leave or cld dec lods add movsl cwtl jbe and fs add lret push pop and sub pop pusha test aas add add dec push ret or xlat push dec cmp push xchg adc adc aas loop enter or subl (bad) cmp push dec insl (bad) mov bound cmp adc push dec push adcl int3 add pop add cmp adc dec jge fcompp mov dec push jle push add shrl lods mov sbb sar movsw lcall xor ljmp dec scas and push ret xchg dec lahf inc pushf add pusha add mov or ficom ret sub inc into mov ljmp jo lahf dec push mov clc pusha or jle adc lea popa and iret push lock dec rcr mov loopne fcoml loopne roll sahf adc arpl xchg cmp sbb add sbbl adc lods data16 (bad) popa mov cmp xor gs rclb stos inc adc dec lret pop and inc (bad) jae lock je jecxz mov jp push jp jp movsb xlat addb or lea or dec inc mov push pop pop movsl pop pop lahf or dec fidivr aam data16 fstpl add sub js ret dec jb loopne mov adc fimul cmp or lock bound testb cwtl pop call add inc je out pop mov or addr16 ficomp lock and pop xor xchg mov pusha push mov add sub ror push sub xor fisubl loopne add jbe test jnp jp xor xchg outsb add push lahf jbe or int test jae jb push into into test or mov or sbb sub dec cwtl pushf sarb add jl adc cmp add inc mov add ret dec push mov (bad) mov or ds loop mov dec or sbb rolb jge sahf add lock mov out jae add xor add push dec mov ret jl push test sub loop push outsb shlb jbe inc inc push jle mov push or push mov mov xor xor push in aam push inc mov push lock call jmp xchg loop pop add test int je sets bound addb outsb push inc ljmp and jbe or xchg clc jge pop pusha pop or (bad) out push bound xchg add js test fmulp in jp or mov push dec mov pop loope orb and jo mov adc add push and pop pop pop jbe mov inc xchg xchg or sub loop pop add subb or jno (bad) or push cs push pop add clc push sbb cmpsl lods inc dec dec add adc cmc mov dec mov push sub nop add stos pop add push in mov (bad) pop dec pop dec pop push pop and dec ret mov xor push and mov in popa (bad) sub inc into and inc dec pop inc add data16 fmuls pop in adc and push sub or addr16 inc test mov adc dec sbb dec dec add dec inc mov or add mov pop lcall popa mov stos repnz data16 xchg add or pop mov or lods or xchg push sahf jp push dec mov xorb push setae dec loopne and inc ret adc xchg rclb adc aam pop out xchg cltd int add xor ret loope repnz fild jg push (bad) mov ds or xor and pop push into adc xor pxor popa ror and sbb pop out daa adc add add mov adc push ljmp xchg and imul push xchg jb push push (bad) clc lea xchg pop std pop push pop aam push (bad) pop push pop loop xchg loop in int cs sbb cmp call jno outsb outsb push add sub lcall (bad) adc inc inc popa inc mov les inc flds push dec push dec or or jmp xor mov sbb outsl scas dec push jg adc add sti xor inc add jae inc sbb push mov shrb pop add sbb ret (bad) or or nop mov add out push cmp mov movsl adc fild pop negl icebp mov add dec test out adc adc mov push mov stos test push pop test push dec mov popa (bad) mov push push loopne (bad) stos cltd pop jg jecxz add rcll pop out or loop sbb and add (bad) push push mov cmp pop inc dec or inc daa (bad) jp pop mov dec jle adc add (bad) enter popf pop cmp test push push rcrb xchg inc or inc or inc pop mov adc negb or and mov out mov mov jae roll cwtl fs popa sub inc and dec mov fisubrl ficomp push xor or inc rorb inc push mov add mov xor rorb inc mov xlat jbe or pushf push pop aad and pop inc les in in subb lock or (bad) dec mov daa pushf divb lcall add dec mov inc add push mov sub in jp dec inc gs or pop xchg cs inc push dec mov inc sarl fidiv in popf mov lods lds ss sahf call dec dec repnz adc jmp add int imul xchg pop dec jl inc ja add dec inc xchg sbb cltd adcl scas pop pop sbb mov push pusha mov mov loopne,pn add mov jne cwtl cmp mull or and lods sub mov cltd add pop out jo in pop (bad) fnsave sub cmp ljmp cmp je pop add xchg (bad) push or pop les and bound aas fcomps pop scas pop call int and push pusha push pusha push pop movmskps cmp dec pop lods insb pop test lret int3 data16 cld and sbb imul or imul clc repnz cmpsb xor in cwtl mov xlat (bad) (bad) lahf xchg out dec jecxz cmp inc pusha dec inc jne ret add cmp push pop or pop into mov pop into (bad) inc mov xlat out lret leave aas inc sbb or nopl negl or into in adc enter inc mov push into cs sbb jb add and push cmp xchg sbb mov adc dec dec clc fsts or ret sbb sarl sub push jp dec (bad) rcrb push mov sbb inc ss insb xor (bad) or sub push push lahf add dec mov hlt sub push popa imul lret push rclb inc inc pusha push es cltd test or test movsb dec cmp insl pop cltd popa pusha push (bad) movsb jbe xchg lds sbb mov inc mov xorl or decl push sbb xor pusha int dec jmp push sbb (bad) aam scas jl dec add push or or lret and adc jecxz aam mov adc lcall pop dec pop dec pop dec dec add and adc inc pusha sbb jmp and js mov push mov cmp and push push pusha popl ss inc test loopne es dec (bad) push fdiv adc push mov push push cltd cmp jnp into mov (bad) jle arpl push data16 push add aad add mov add repz or aam cmp leave jle sbb push add outsl scas xchg inc inc add push es and and xorb jl rcrl dec in mov cmp jecxz push push ljmp (bad) pop push fs add and cwtl or or or mov dec mov push in mov js inc and push add or les pushf ljmp nop fcom mov and inc sub loope out dec mov lods xchg adc aaa adc in pop push sub fcompl or add icebp dec xor ljmp aaa outsb and sbb pop subb dec js pop mov or or inc (bad) movsb rclb sbb (bad) sub push inc (bad) mov pop test mov pushf or les fdivrs push dec pop enter fdivrl mov dec dec dec dec push ret mov push inc mov stos les jp sub dec outsb push push xchg das sub clc sbbb push xchg dec cmp push rclb lods andl jl jb stos add rclb (bad) dec xchg int3 mov and negb add add mov test cwtl jno in push sub or dec js jl pop sbb sub mov push add (bad) push (bad) sub in das faddl fs mov mov lock in movl stos stos mov jle inc or push sbb cwtl aaa sti rorb js data16 xchg xchg add dec adc jno cli dec aas push inc dec or mov insb mov push mov rcll and cmc add sub loope jl dec sub scas dec ret sub dec push adc loope push or push dec je inc jae add inc push jb inc add pusha mov ret lods cmpsb and pop or pop loopne or inc test enter jbe inc push int3 mov add dec into nop (bad) loopne or rorb or pop or mov dec dec adc cltd rorb cmpsl fadds push push sahf loope xor or test test cmp in or (bad) psubusw orb bound or mov arpl inc dec and add dec test or xor jg sbb pushf xchg icebp push xor xor push stc mov sbb inc add push inc mov dec mov jmp and adc ljmp std pop dec cwtl sub and (bad) add sbb lahf test pop (bad) ljmp pop push push adcb scas inc sub rcll pusha je daa push pop dec add adc adc in into outsb loop movsb fs and pop rolb xor dec movsb sbb push rorl cwtl cmpsl ret adc xor cmp movsb mov push mov xor inc or dec dec pop mov mov inc add sbb or rcrb int3 pushf lods pushf xchg mov sbb dec mov rorl pop jne je xor and (bad) iret das outsb mov les push cltd lea movsb push or or call push push pushf pop inc pusha jne aaa lcall fsubrp rcrb scas test cmpsl sbb sbb xor cmp mov sbb dec mov xor addb shrb cmpsb inc pusha fcom inc addr16 sub jo leave ja mov mov out out push sub xchg sub mov sahf imul dec inc je rorb adc cltd adc inc mov push adc (bad) add or add fidivr and fmull mov push dec pushf (bad) sti and imull xchg dec and adc and or mov sub inc rclb jecxz sub rorl mov xchg imul out nop pop dec decl cld push pusha pop pusha pop pop jle pop push pop pop pop pop pop push fistl sar es add dec push leave test push ret push dec jle sub add add (bad) aas adc pop pop pop inc test dec popf mov dec nop scas pop mov in jecxz push outsb ljmp push pop out fsubr arpl xor cmpsl pop cmp mov js pop aad lods inc and and xchg add jbe cmpsb mov or ds addl and pop push mov movsl outsb mov sbb das push pop cmp dec add (bad) dec cwtl push ret pop mov xor fidivrl roll push mov ljmp bound es push test pop inc pop rolb pop xor test sbb push es add test push xor dec pop pop xchg push dec lret mov pop iret aas dec push inc fsubr ja dec push test popa dec sarl push pop push sbb mov mov push pop pop shlb xor or leave test xor pop outsl std mov push push jmp cmp fidivrl push ljmp fiaddl add aas pop out addb movsb loop adcb pop repz xchg shr sarb test mov add inc scas inc mov mov or push dec push jl adc mov xor orb inc lret add adc sti or add inc cmp jle dec jbe pusha leave in ss pop rcrb cmp push (bad) sbb push or loope inc pop push fcomps (bad) xor dec push movsb dec mov mov dec call ss loopne sarb adc lock dec adc test loopne pop icebp mov xor jbe add inc les push xchg faddl and push cmp inc push dec add jnp inc popa or test and cmpsb outsb arpl mov or sub xchg test dec pop push pop or cli jne (bad) mov push mov mov leave dec cmp int3 cmp lods lea push loope stos dec movsl sbb inc cs inc xchg adc mov cmp pop mov rcrb sub or cmc pop mov pop es les test jp push and call dec mov mov sbb bound jle add push scas test mov or or pop add pusha pop pop outsl aaa lds cmp xchg enter sbb outsb jo sbb insb cmp (bad) int push addr16 push pop dec sbb icebp add add pop es call sbb out pop rclb push dec push mov mov (bad) popf lcall or hlt dec add xchg and aam inc or call dec jecxz lea mov popa test add ret adc inc mov pop cli cmpsb pop push dec adc mov cmp add jbe test sahf arpl and stos rorl xchg ret inc sub mov lock push xlat pusha orb jmp adc jl imul xor je (bad) sbb mov pop adc push xor push mov movsl rcrl dec loope cmc es push xchg (bad) mov xor sub xchg push add jo jno aad shrb pop push sbb or incl lods stos lea dec cmp fildll push fadds xor mov movsl loopne cli dec scas sahf push mov adc add add pop add dec mov adc pop pop pop cmpl dec sub lcall pop ss pusha or and test push lds out cmp int3 push jnp push push jg dec cmp push (bad) pop aam adc ret inc push pop xchg fmuls add fs pop cmp arpl lea jbe bound add lods dec mov data16 dec (bad) dec pushf add mov or mov insb mov push mov sub jno pushf inc test adc add add jo or inc test push pop push lock pop pop dec push pop add push jb push loop addb into hlt dec pop dec pop movsb push movb lret or inc push inc add imul imul jge sbb sahf sbb push mov pop add out (bad) dec mov popa cmp cs imul inc lret rclb je mov rol push sub pop pop js sbb dec add sbb daa shll loopne push pop push shrb pop fmuls pop and push pop push pop pusha gs scas push jbe arpl roll loopne (bad) pop outsl pop mov mov and inc sbb popa mov pusha or and jg ret sarl cmpsb pop sti dec inc inc adc inc pop (bad) nop jecxz mov xchg push add insb add jo xchg lret dec push and add xor lea (bad) fwait jge dec dec pop mov dec je js adc ret xchg adc add xor inc mov stos out and divl push push and rorb pop lret or sub addl inc inc pop loop jne sbb sub scas jl or shrb dec mov xor or lahf (bad) dec (bad) sbb aad adc xor xchg dec and shrb loopw inc push outsb stos scas (bad) mov pop (bad) pop jl popa pop lcall aas dec add inc push inc push inc push inc push inc add cmpsb int sub aas out mov fstps inc jge sbb lds dec pop inc int3 gs xchg mov rcrl iret inc inc dec dec inc or sbb (bad) jmp dec jl dec pusha test inc scas inc dec pop mov pop adc dec pop dec pop push inc test inc pop sub aam cld sbb inc add jo pushf xor jo shl mov cmp pusha loopne imul pop add dec push dec lretw lcall xorl or js (bad) out mov or movsl push pop cmpsl scas xchg push imul inc inc dec pushf lods maskmovq divl push xor push add shrb xchg fucomp or fimul js pop out into or dec es mov int push or in mov outsl dec pop pop insb dec insb arpl pop sub xor sub mov scas push push pop and pop inc push inc push pop inc insb push pop sub xor loopne adc push mov bound push xchg jbe pop cmp inc (bad) aas fcoms call xchg or inc mulb sbb aam mov adc push dec mov xchg hlt or mov add pop (bad) adc and outsl push push es imul inc sub push dec daa jbe mov cmp fiadd dec iret cli (bad) pushf push push dec jl stos shrl popf (bad) dec punpcklbw push out sahf push daa push adc mov inc das push cmpsl movsl cmc and pushf add adc mov daa adc push lods jmp and iret dec inc daa and rcl mov rcll sahf lret sarl pusha shrl lahf pop jne inc inc xor addr16 popf xchg scas mov xchg push push pusha (bad) mov (bad) pop adc lods das jmp mov test rorb adc inc lret aam out push xchg push nop test dec shrl dec sub mov add shlb sub xchg or pop mov push out hlt push or push das sbb adc adc sbb and push push add or jbe loop add lods adc iret outsb mov mov push inc fildll sub push inc sbbb dec push inc out xchg and cs cmp cmpsl ss lds cwtl test and mov jge,pn inc out out push dec mov outsb (bad) push push or cmp or ss dec mov imul sub and adc mov cmp and adc out in and iret pusha push dec push mov or push mov jno xchg push icebp test push daa add or pop addl lods push push inc sbb push stos loopne jb mov std sbb and mov das iret shrb ror mov mov scas xchg loop sub test mov sub mov inc xor bound nop bound jo dec ret mov dec jb hlt into push addr16 dec test add push outsl mov cmpsb jle push jnp dec enter sbb les out int3 push clc (bad) dec push push jl cmp subb cs xor in push jo pop cmpsl inc dec push add xor test or or or (bad) or and js add or sbb pop dec test pop lret mov or jo iret push (bad) or into sbb ret cmc bound shr cltd loopne dec or or and adc outsb mov dec adc adc mov bound xchg dec cmp in fnstsw out (bad) enter or int3 sbb inc xchg inc sub add adcb bound inc dec jo stos loope lea pop mov inc push mov loop adcl dec (bad) lret inc insb push dec cs push pop fmuls inc or push popa inc cs mov dec inc xchg mov jmp les popa xchg (bad) mov xchg xchg mov lret movsb sbb cmp data16 sbbb pop pop adc jmp mov lods (bad) loopne dec xor loop imul imul lret rcll movsb js xchg cmp jb ret push jp rcrb dec inc xor adc out shll or xor xlat dec cmp aas mov loop dec dec mov mov addl jo dec dec icebp jne insb pushf pop sbb ret lcall pop cmp jae mov call cmp mov sub jbe and mov xchg scas push add or push js mov (bad) or mov sbb and mov push jae les je sub and add inc sbb inc pop xor add outsb or dec or test pop cmp sbb es pop xchg sub push sbbl mov inc mov push jns (bad) int3 jp rclb or xchg adc mov xchg pushf push push adc pop aad test mov cmpsb andb xchg ret pusha sbb sub mov scas push inc add lret dec push or adc dec mov jmp stos lods das lcall mov lods dec sub add lret add pop mov loope adc pop scas xchg loop fmul lcall ljmp jecxz or lods xchg xor sbb shlb shr cmp and adc inc add pusha sbb inc cmp xchg jecxz adc mov out and stos cmpl arpl loopne mov sbb ret mov mov adc leave in sbb push add jl sub or stos adc push dec xor clc add orl ljmp inc push cld ret mov mov dec push leave mov adc stos push sub std scas out jne ljmp cs into push jmp fist sarb xchg sbb sub jmp cmp inc jo out lods mov mov mov jp dec xor andl and ret in and push mov dec (bad) imul mov push movsb fs dec add std dec dec fs popa adc fstps jb xor and mov pop (bad) mov movsl cs (bad) pusha and or out in add or addr16 or loop pushf fs jb push pop in pusha pop fdivrp add dec adc jo dec pop and lods or rol xchg inc add cmpsb aam or jb fsub push and insb sub (bad) sbb lock into push dec push push rorl mov ss jo outsb add add cmp roll and je push jle jo pop xor jb (bad) mov jp pop fdivrs xor ficomp add push jp push addl sub inc xor dec xchg inc je sub daa ret test dec rcrb imul mov rorb movsl sbb pop adc and mov and loopne and or sbb jb cs ficom and lds pop cltd lcall sbb lds cmpl dec rorb or sbb mov (bad) push (bad) or pop testl das addl add aam or mov lods je,pt stc mov add push jo scas mov mov mov mov sbb mov mov sbb mov ss pop outsl sub ss push (bad) test arpl push faddl adc mov xchg push lods pop and pusha adc (bad) data16 inc fs popa dec pop dec pop xchg movsl dec andl fildll mov pop xchg lds xchg jne push mov sbb pop push ret outsb mov dec sub dec arpl pop (bad) nop daa sub pop pop push xchg mov xorl fdivl sub pop add push push pop pop inc xchg pop inc aam push (bad) out add jecxz lahf scas (bad) out dec fstl xchg jp imul fimul aas dec push adc dec mov cmpsb ljmp add cs test cmpb xchg adcl pop xchg clc pop out xchg invd inc or roll inc cmpsl fs inc pop dec add addr16 or and or je (bad) pop dec aaa inc push xlat mov xlat test push out bound andl xorl lock scas das pop add jo mov pop pop dec or jecxz in mov sub repz pop push dec add inc dec dec push in movsl xor push and xor aam loop leave int3 push movsbl (bad) dec sub pop mov xchg clts scas outsb bound or or outsl rcll ret test cmp add aas mov or sub add aam es insb cmp mov push fnstenv or outsl dec pop or pop add add cld aaa or jae mov dec push sbb add inc pop scas aaa push sub mov pop push daa cmp je and jle dec xchg enter clc cmp mov push aad sbb xor divl pop sbb pusha push cmp push testb inc jmp add add in sub aad pop (bad) out dec push push pop test lods inc push xchg lcall lcall fdivr pop inc mov jge pop outsl push lods sbb sbbl push xchg unpckhps sub pop sahf ss ficompl and push cmp (bad) call (bad) mov fdivs mov lea add mov clc sbb xlat push pop dec dec dec adcb fwait test aaa clc xchg or rcrb sahf xor andl jne dec outsb adc nopl arpl and or rclb sub lahf inc pop pop adc loopne mov (bad) (bad) mov add dec stc add call roll imul jge pop sarb sbb jb int3 inc inc or rcrl out in mov test clc adc and cmp push sbb lret inc sub enter add mov lahf mov ficoml aas dec add mov adc xor pop or je push (bad) jmp adc aaa lock mov in pop dec pop in xchg or fsubl jp mov cmp rorb jbe push inc dec inc mov push jl stos push jb push lret dec jae scas adc pop sbb xchg xor xor push sub mov pop push or inc jmp dec adc js add cmp movsb lods push inc mov push rcrl js cli shr inc lcall jno aad mov (bad) ds fimull cmpsb rorb rol pop inc mov mov pop mov xorb sahf sub sbb testl dec sub sahf and or adc gs push mov dec sbb push sbb cwtl or sub sub xchg pusha xchg stos adc dec lock aaa add je and mov fidivl (bad) jno dec push cmpsb push int xorb rclb xor mov add stos adc ret and push mov clc dec adc stos inc push adc fwait orb ds lods xor test cmpb jne rclb mov jne inc test dec (bad) aam iret pop xor adc jo loopne sub clc push add or push pop clts or pop push push xchg dec mov push psraw cmpsb dec mov inc (bad) cs dec mov ds es cld lret dec add push and pop xorl nop movsl adc sbb add mov or xchg and dec push adc shr push sahf pusha dec popa dec popa inc add dec or pushf push or mov outsl push ss popl mov inc cmp aad cwtl mov push fwait lret pusha mov xor shrl add sahf cmp pushf inc push mov adcl or jno rol dec out hlt lahf jo test xlat loop fldl jb sbb cmp cmp push mov mov push popf and add pop jp arpl push addb jae push rcll mov add loopne mov add add or jmp fstl dec dec cmc popa pop test xor dec (bad) pop cmp xchg jp and loopne and repz mov fdivrp push pop dec pop dec pop push inc (bad) (bad) les pop mov inc enter push fsts loope xor bound repnz xchg pop push popa push xor xchg dec inc psraw push lahf add adc call mov loope add xorb xchg mov pop shrl cmp pop inc shll test in pop popf push mov dec jae push lods inc adc std xchg rolb push and rclb cs dec xchg push push (bad) loope (bad) retw push adc fs cmp add xchg sub daa dec push lahf xchg (bad) jp push pusha push adc xchg push xchg inc or add lods scas mov push add (bad) lock jae mov loopne sbb sub (bad) jbe lret (bad) pushf in mov jo cmc fdivl cwtl xchg push ljmp shl push jns andb add pop ljmp je rolb sbb jle and andl (bad) push sub inc pop push rcl pop adc add add pop data16 movsb or push mov mov mov pushf add out lock daa adcl add add lods inc inc push pop cmpsb mov in sub jbe loopne adc inc cmp mov sbb out pop push and push xchg rorb ljmp inc idivl and out nop xchg cmp call out and sub cwtl sti push cld cmp cmpsl push les imull pop inc pop xchg sbb aaa (bad) push or push js or cltd xchg mov push mov or jnp mov or rep popf subl jno jo (bad) inc and xor sbb pop loopne mov into xor outsl mov popa test hlt mov add ja sbb add bound add xchg mov lahf push pushf push scas js out lds cli mov aaa dec inc icebp loope loopne push cld adc out cltd imul inc loopne jmp dec and add aaa cmp imul push inc add pop aas push sbb jb push push push or dec roll xor aas lcall sbbl jae cmpsl adc out cs jecxz mov pop or loope es sahf lods add maskmovq divl test popl jg dec xlat mov dec mov add mov sbb jae push add es xor push sahf dec shll roll pop xchg rol xchg mov adc fdivrs cmpb xor cmp push sub sub pop aam mov dec call aam xor adc cmp fwait js pop jle fsubr ljmp into or ljmp pop scas dec pop dec arpl scas dec inc jl add cmp cmp adc andb fild (bad) inc xlat ror jmp mov stos mov inc and adc xchg outsb lds add or xor rorb dec jl sbb pop (bad) (bad) jmp pop das pop xor xor pop cs sub sub push sub cs fwait mov push rclb push fistp pushl jbe pop das pop xor or mov push push inc xor outsl outsl xchg push adc jno je dec js jns jns js jbe je in incl dec jae je jne jbe jo sbb add cmc fisttpl or aaa pop je push push outsl and outsb push adc and or ret xor push lods xor cmp push inc notb adc dec jle dec bound push insb pusha bound and xor push inc sub dec popa dec addr16 cmp jbe push cs push or xor dec cmp dec fs (bad) addr16 mov push addr16 insb push outsl push jle xor dec inc fwait pop pop adc dec push pusha popa push cld ljmp addr16 cmp jle dec sub push xor push inc pop movsb les daa push jle sub push xchg push push mov jns cs xor cmp adc dec pop push popa push push push pushf push sar test dec cmp push add dec sub inc popa roll dec sti shrl sahf push push cmp push ds lahf jns iret ror push mov mov push dec push sub or sbb lcall sub xor xor sub ss aaa push dec xor push (bad) jae push push arpl insb dec jae and push ss cmp inc scas dec inc pop push sbb sti fs push xchg push pop inc dec rclb dec inc pop mov adc jae (bad) adc push cmp inc or add subl outsb xor loope adc inc inc push push imul hlt or jbe sti pop inc pop sahf inc push popa pop popa bound pop pop mov sti addr16 arpl dec push dec inc dec adc push push or add mov pusha (bad) rcr mov dec dec ds dec ds or dec push sbb in mov inc push add jo push (bad) pop aas pop inc pop inc pop (bad) pop mov jp dec xchg or xchg mov pusha pop arpl cmp cld mov push gs arpl (bad) sub add add mov cwtl pop inc pop inc stos cwtl ljmp sub inc add or faddl ss inc dec add adc add inc or les mov mov push or mov sahf and add mov outsb or mov adc pop xchg push push imul fs dec pop dec lods pusha push pusha mov pop push xor leave and xchg mov xor mov es negb dec adc or dec dec push pusha (bad) in in dec addr16 or pop add push sub rolb addr16 scas cmp dec stos aas push sbb mov data16 push sub fs pop xor gs inc dec ss in int3 xor sub xchg mov cwtl mov ljmp sub and push daa inc sbb sub out adc and aad outsb mov ja (bad) pop inc dec fs inc dec or push pop inc pop sbb xorl add dec xchg inc ret mov adc loop inc adc ret or aas jb sub rcll bound sbb jb lea fs inc adc sbb jmp fist mov dec repnz pop pop gs test xor arpl xor push sbb pop dec xor push gs addb fsubl push popa dec dec inc pusha push push inc rcrb or add adc add sub push mov sbb cmp scas inc pop inc data16 xor (bad) decl dec arpl inc fs inc push dec push push xor cmp push das push sub pop sub pop das pop xor push cmp push aas dec inc dec inc inc add inc dec inc push shrb mov or xchg mov mov push xchg movb push pop mov fs adc xchg icebp dec popa push in aas dec inc dec inc cmpb dec inc dec inc push (bad) movsb pop daa push xor mov mov push mov jno dec pop xchg sahf test hlt jle insb sbb inc add in cld sub jecxz xor or (bad) xchg cmp cmp (bad) lock enter push mov push ja insb aas (bad) jbe dec pop mov popl sub lock push dec xor out sub xchg dec jae jbe dec dec movsb mov dec dec cltd arpl dec pop scas sub or dec cmpsb dec jg cmpsl dec push cwtl (bad) test loopne js stos add jmp cwtl pop adc ds xor (bad) or add insb pop mov shll pushf pop jno pop orb mov mov cmc mov pop cmovge xchg push sub les adc push repnz out add cmp rcrb imul cmp inc cmpl pop cmp push dec nop push outsl daa mov mov push pusha cs popa and or cmp es cwtl push cmpsb rolb test fisubl xor subb mov or adc or dec dec test dec insb add test sbb decb dec fbld cmp pop dec imul adc jae and push movsb es xor pop fldenv dec inc push adc sub push mov xchg dec test ljmp movsb scas ss cmp or fcoml dec enter dec sahf adc inc inc add es ss inc js loopne push sbb nop add stos add mov test pop xchg mov push jns and push test mov xchg dec push and mov xchg sbb or dec mov (bad) jne push dec pop push pop xchg fidivrl js xchg loopne jo sub cmp dec int3 xor or pushf push sub xchg test addl pop push lcall (bad) loopne ret xchg dec add sahf out cmp push mov xor ret test loopne std shlb pop ss pop pop out or imul mov or cmp outsb mov adc mov jbe adc cmpsb dec add mov pusha push cmp push push movsb xor out addb mov pop cmp push xchg cs pop adc and mov mov mov out adc sbb cs xchg push lods sub push mov dec mov xchg inc push cli push cmp and fcmovnbe push ja pop dec (bad) pop dec daa loop ficomp test jo xchg sbb shrb jbe pushf dec roll and fisubr ror mov es mov cwtl sbb sbb imul cwtl jo jle xchg ficompl sbb inc rcll mov dec mov dec xchg ret cmp inc rcrl fs fcoms in outsb lods cmp sub push sub jo and mov mov inc bound pusha out cwtl mov adc fdivl dec test mov sub push imul lock fcoms adc and dec sbb hlt pop push out mov (bad) or dec xor pop or in adc and xor or adc jo dec shlb arpl out in in in jo and outsb xor push cmp dec jne sbb dec or fldl int3 sbb sub inc (bad) scas xchg adc rcll or rorb xor inc add es popa loopne dec pop cmp mov xchg mov jl or xchg xchg pop test dec arpl pop divl pop (bad) repnz mov cmp or xchg popf mov pop cmpsb stos (bad) pop add cmpb add fadds test cltd mov or and das mov or rorl cli sahf mov add pop push or sbb sahf mov aam add or inc ss add into nop mov orl sub cmpsl push mov or imul lock int3 dec jg mov xchg cs loopne xor mov dec mov ret add inc sbb add jle inc inc mov pop aam mov dec cmp lcall xchg push (bad) or fmuls data16 sbb mov push fdivl cwtl dec inc or decl aad mov mov push mov mov push adc cld test xchg sbbl mov (bad) lret ss dec jecxz push and fiadd sbb inc or mov inc pusha xchg call push and int3 add pop subb adc ret cmpsb add (bad) sbb inc addb jl mov cmpsl mov push pop push ret pop orl cmp mov adc adc jl ds divl push movsl cs xor cmpsb push call and dec fnstenv fisttpll daa repnz fmull aam mov push mov roll fsubs push xchg dec push push shl in pop inc adc pop adc mov add adc pusha cmp sahf pop loope inc xchg xchg call aaa and cwtl jmp cwtl push mov cmpsl add pop pop sub (bad) add cmpsl (bad) scas dec cmp pop push jb xor mov cmc mov nopl and je rolb pop (bad) into sub adc sbb cmc push out push (bad) push addl test gs push iret lds dec jo bound ret or nop jnp dec mov or sbb add jmp nop dec mov test or push and shlb or sub push adcl pusha xor iret push push mov mov ljmp add or loopne inc loope test dec xchg add rorl xchg ljmp and test into call loope iret lock aam inc enter dec jb clc xor xchg adc pop inc add pusha add addr16 cmp adc ss add lds or mov es pop (bad) jmp add or (bad) (bad) xor dec dec add js lods pusha push or mov pop fwait testl inc adc pop into (bad) ret ret (bad) xchg xlat or test mov enter and pusha dec pop dec push mov hlt inc into stos outsl jmp jno push fsubs push bound adc dec push bound sbb adcb pop pop loope in lods mov adc out fs and mov pushf push mov pop cmp jo (bad) fmull and fsubp jp movsb dec push (bad) pop sub ss repnz adc aam mov and fild gs dec inc push pop data16 xor inc rcrl hlt dec int3 pop mov add mov xor pusha sbb sbb pop mov inc or ret add adc push rorl fmul mov or loopne je rorl in (bad) dec cmp dec pop dec inc or adc and or addl lods popf lods loopne or and push jl js pusha xchg pop cwtl pop dec mov push js mov mov and dec add dec into dec addr16 add add xor (bad) mov lock andps jo sbb aaa inc inc in addr16 inc mov and pusha and je setno sub call jp and jl jnp or mov js arpl dec (bad) mov push push inc dec add push push inc daa jbe es push xchg jge or inc adcb dec arpl loope jl mov daa dec mov sbb mov xor addr16 cmp orb int3 ret out fcom or inc add sbb sbb and loop cltd cmp push bound cmp das and push (bad) sbb fs push push in insb in sub je push (bad) push cmpsb cmp loopne push cmp mulb mov inc stos pop ljmp andl lahf push mov push jle or dec loopne notl sbb lock push mov mov add sub inc popa test out fwait sub (bad) mov or clc mov adc jnp or ja loope mov push or pop add imul mov loope push jo outsl mov (bad) sub fisubr push insl fs loope sub add adc or push les into pop test xchg stos sub pop gs rolb pop mov sbb aaa pusha clc and push (bad) adc lods ror push mov lods jge rcrb cwtl sub xchg xlat dec dec add dec xor xor add dec ret and mov lods orl inc mov xchg add fcoml loope insl jl push pop stos inc xor mov jle xchg cli xchg mov ja pop arpl inc popa push js push ljmp push cwtl pop inc pusha sub aas bound popa ds aas mov inc push inc push xor dec pop push js scas dec xor add pusha sbb fmuls sub and insb pusha dec adc sbb push inc adc (bad) pop aas push mov push pop jnp dec andb sbbl or push pop pop pop andl jp xchg dec pop aaa pop cmp out xchg xchg inc xchg and call push push pop and fnop psrlw rolb bound inc pop inc mov inc jge mov or fist sub (bad) mov cmp mov cltd push into leave mov jo pop repnz dec sbb adcl lds inc fdivrp dec pop hlt push mov or push sbb sub bound pusha nop inc loope sbb pop inc cs lods aad incb pusha rcr sub push cmp fmuls and ss (bad) cwtl pushf shrl push push inc dec adc cmc or mov push dec push adc sbb sbb inc cmp scas add and push mov pop (bad) aam rolb ljmp xor je cmp decl roll or pop xor cltd das movsl popa inc adc bound sbb sub push jmp sbb dec or xchg or push and push add or outsl dec int3 adc bound sub (bad) inc sarb cwtl xor dec ret push lea dec or sbb add mov mov fwait cmc mov cwtl push jg dec mov inc arpl leave jne sbb push mov in dec dec in stos rclb push jl pop jge xchg jp push (bad) mov sub pushf nop outsl push fwait dec je cmp iret push inc inc cwtl movl and leave movsl xor pop xor mov or push (bad) roll pop test adc lods shrb pop push push cmc mov inc fisub or jns pop arpl loop outsl pop inc xor pop push jg pop xchg mov xchg test in xor pop push dec int3 adc pop sbb xchg lea sub and or les push xchg and and popf mov fsub lods pop and and adc xor push pusha mov mov std divb xor lahf push push pop ljmp sub inc jne push lret adc inc dec rcrl xor push fimull sub dec aaa sbb mov xchg lcall mov aam xchg (bad) dec test dec rorl mov pop push pop dec cmpsl ja sbb (bad) ficompl mov push dec add (bad) xor lahf inc dec cmpsb cmpsb rolb nop mov sub or xor add sahf imul pop and push mov inc das pop pusha inc mov or repnz xchg adc add hlt in or subl pop push (bad) xchg aaa test aad loope push pop mov gs cmpsb sbb insl sub xchg scas adc adc adc fwait test mov or dec or mov ret push loop adcl and push push xlat das xor dec mov mov test inc rorl stos xchg dec lret call push inc dec inc cwtl cmp rorb inc mov (bad) pusha and and push push xchg pop outsl dec mov xor je mov push and sub sbb pop and pusha or (bad) mov add add negb mov xor in loope nop xor adc (bad) push inc and addl push leave movsl inc mov xor push daa xor push cwtl pop mov mov inc or dec pop dec push popa and sbb stos jle add cld add (bad) adc loopne pop pusha add jo je push fistpll ret push push ja mov imul pusha mov pop push xor sub test or js nop sbb dec fcoms push les lea sub dec add sub lret fucomip mov xor out inc push push rolb pusha push mov dec push (bad) inc adc adc ss icebp pop lods movl mov ret push xchg push inc dec dec jns psrld sbb stos inc add lahf outsl sub pusha aam cli shlb loop dec shlb lods or imul outsb xor or repnz and and xchg js ret scas pop test or pop test ret mov cmc mov add nop push xchg jo loopne out (bad) inc cmpsl (bad) outsb loopne cwtl movsl aas pop fs xor push sub (bad) jo das shr ret push adc notb jl adc (bad) push or mov push cmp mov cmp testl dec mov nop pop mov idivb and jg bound sbbl mov dec cmp adc (bad) pusha add cs pop and jg pusha push pusha xor (bad) popa xchg adc hlt and or pop pop add xor sub (bad) xchg test dec cmp mov pusha pop sub into add ss fs and xor roll rcrb ffreep xchg sub (bad) lds mov jo icebp hlt sbb adc push fnsave and test mov pop push sub push aam loope pushf add cmp push addb or mov out mov mov lcall xchg push mov into mov sbb pushf mov shlb test inc mov mov loopne cmp xchg jg xchg test nop mov movb fist sbb arpl mov push push rolb push mov pop push enter dec lret movsl inc test aam push add (bad) mov pop lret add or jno mov sti mov pusha mov or and mov mov push jmp sbb (bad) aam dec mov or sub test sub push inc push fs push ljmp xor and dec pop push dec add rorb jmp ja rclb rcll pop dec inc out adc xor push mov pop jg jb stos fistpl lcall dec ss lahf and loop push pushf and xchg and mov orl push (bad) push or jmp movsl push movl pop cli adc xchg insl add inc push sub push mov pop test or lea or add mov out test jecxz jno sub fsubr cmpsl mov inc (bad) ss push add push xchg pop add cmpsl mov roll dec and pop mov or push (bad) push inc (bad) or xchg rolb sub push or push test lahf push outsl fwait test xchg sbb fiadd rclb or adc inc scas sbb in xor dec dec or and or adc xor inc inc loope mov adc pop push sti rorb and mov into and push dec scas scas test movsl mov hlt push push sbb testb push pop and leave xchg (bad) dec loop gs out or dec jecxz or test mov dec es shrb movsl mov add pop ret outsb push mov les insb pop push ljmp xorl pop add push dec inc mov addl lods lcall pop push movsb mov pop jg ss adc inc push int jbe sub sub out mov dec xchg jne popa cmpsb stc scas and shll push dec dec push xchg dec pusha sub push orb bound mov push outsb ljmp mov mov mov mov cmpsb xchg daa and sub pop pop or lods mov out dec stos test or push cmc shrb adc pop outsb sahf push dec sbb mov or inc adc push dec inc dec inc add xlat sub inc push inc cs add cmpsl scas push add sbb add mov pop pop push push mov test hlt sub adc push in dec jp xlat add jno mov mov add jnp shl dec inc adc test mov cs sbb or ss js mov mov push inc push nop lcall mov insb mov dec and and sub lods mov mov sub xchg mov insb ret pop inc push jae rcrl sbb or mov adc test stos adcl ret pop dec xchg and and xchg add add xchg sbb and xchg sbb add push inc add xor dec js push sub mov adc (bad) sbb jb pop and jno dec mov push movhps or fild inc mov and sub leave mov inc pop xchg mov loop pop dec cmpsl add xor and add adc lods rcl orb cmpsl in test push fs push mov sub test cwtl int3 mov xchg mov enter dec test inc or push adc clc pop pop pop mov popa or out imul dec adc and xor movsl lods mov sub mov std xor pop sbb mov or loopne xor shll adc push les popa add pop dec sbb dec mov push decl or sub lea lea sub int3 dec outsl push dec push cmp insb add pop and nop test mov sbb daa push xchg ljmp mov lcall sti sbb ficomp jle and test insb jp jb iretw and add push stos jae nop pusha int3 pop (bad) sbb ret dec (bad) popf mov lahf push jle test or add and loope ds dec loop nop jo popa adc lods or mov ss divl mov movsl and daa jne pushf jecxz pop push or and pcmpeqd push or jbe or pop fbstp add add subb je push dec orl dec scas gs insl push inc pop or push push pushf pop and (bad) inc int lret or outsb push loop jne push std push push adc add movsb inc dec lahf mov daa orl and seta test cmovp xchg sbb fisttpl add ret xor and dec into push cmpsl pop jmp popa xor fisttp out data16 pop or xchg bound lahf ret jmp (bad) xor or or push pusha paddusw daa add xchg push out insb leave pop cmpsb push ss add inc or sub cmpsl xchg mov inc flds mov and sbb add inc adc push loope mov dec sbb and mov pop sbb or pop (bad) adc xor and pop pop lret push inc adc inc add mov ljmp pusha inc fbstp or pushf mov lock popl pop pop xchg xchg pop cli clc or (bad) sbb mov sbb pop or test stc pusha or xor imul aam test add cmp xor notb mov mov inc or (bad) or mov push dec sub and cmp lea pop or es push pop es pop mov push pop push sub cmpsb inc mov aaa daa push sbb add or loopne push mov cmp movsb stos sub notl push sbb or loop pop inc into mov sub or xchg fsubrs push inc push or dec insb mov pop and pop push push sub in push les jle insl add xor push fs push xchg adc in pop pushf cmp call push inc lods inc dec mov test xchg fs inc enter xchg call sbb push sub adcb adc or (bad) cmpsb inc insl ret cltd mov fs mov imul aaa push addr16 out xchg enter dec (bad) xor jno cmpsb or or dec pop bound xlat or or (bad) aam inc or outsl dec inc sbb pusha loopne add pusha dec sub ljmp mov cli pop adc cs or or mov sub lcall mov inc or int3 adc or dec dec pop push ss xor adc add icebp dec jp in dec dec popa push or adc outsb out jecxz adc lock add aaa jnp xchg push cwtl mov cmp (bad) jb adc in ret adc xchg dec inc ret and lock push mov stc xchg cmp add dec lods je push xor inc pusha mov ret cmp add ret stos add push enter pop adcl into and outsb jmp les or add jmp and imulb (bad) add or sarb add cld push ds cmpsb fdivrs je fimull sbb sbb movlps aam sbb or jl and push mov outsl enter out xchg in cmp inc sahf ficom pop das xor adc add inc pushf jge or push aaa push jb pop or rol hlt dec push push call hlt and add pushf mov andl adc (bad) mov sbb pop or and movsl sub push popf js push dec jecxz add push outsb adc mov push push out addb xchg or test rcrb orl sub mov popl push push cmp sub testb and sub cmp or ljmp dec sub aam aaa push loopne sarl inc sbb aam ret push or scas es fstps push mov fs lock outsb mov scas sub repnz adc push fs ret xchg push cmp mov push cmpsl adc and or mov pop cmp ret movb js push mov push fcom cmp clc dec cmpsb xor outsb dec rclb es test cwtl push mov pusha add cmpsl repnz and mov lcall inc dec push in add push data16 loopne pop lea pop fst mov jecxz xor xchg imul scas das mov or push imul inc cmp push popa add cltd inc arpl dec pop cmp cmpl in mov outsb and lcall pop and loope sbb lods mov testb adc adc mov (bad) lock pop sbb test or push sahf and test add pop sub push and sub xlat into (bad) in daa in mov or dec out ljmp xchg data16 sbb enter popa or and pop xchg push xchg xorl inc xchg stos mov pop dec pop dec pop mov inc or stos pop lahf mulb cltd or (bad) or std mov lock dec sbb mov adc pop push fs jae lock lds and jnp arpl shrl aam push sbb xchg xchg cmp push dec jp inc xchg mov inc push sti cmp xor push ret xor cmp mov shrb sub xchg (bad) adc out dec push and add call adc or sbb xor test xchg shrb pop bound das test rorb dec add cmc fldenv js and dec bound es push data16 adc jb push daa dec adc es push bound xlat jmp insb and pusha xor pop adc sbb mov or push dec adc dec shrb je push aas and sbb add rorb and fnstcw push inc push xchg cltd mov add pminsw mov mov push jp daa test or out mov sub outsb (bad) dec fld mov repnz enter pop pop sbb add mulb sbb or loopne incb xor inc and sti cmp lret xchg adc jno andl loopne pop fist mov hlt or push or daa and mov and dec xor pop arpl out pop pop or and add xchg (bad) xor mov (bad) nop ss dec mov ds test push add push xchg push dec addr16 cmpsb (bad) jae push dec push das dec push sbb lret pop add add xchg addr16 das mov cmp push mov pop pop adc inc jb es push adc cs pushf push pop sarb cmp sub out and loope sahf jbe xchg add scas cmp jmp (bad) arpl push pop ja out push inc mov push push or dec push fsubrl push dec cmp push push out mov and (bad) push and (bad) js or push frstpm(287 or push cmp jne or dec in and into push fstp cwtl fistpl push pop ja insl cs loop mov iret mov lods or mov popa xchg pop inc jmp cmp (bad) push and or or (bad) pop adc and push jl andl or lret xchg sarl or enter dec pushf sbb jg in test xor xor dec loopne outsb lret mov push fstps mov and push sbb adc scas push (bad) loope popa pusha dec packsswb dec fcoml push dec daa or jmp stos ds insb loopne adc or or lods push popa mov mov inc lea pushf loopne mov or les scas sub add nop cmp faddl adc les sbb or lahf adc lds loopne or sub adc fcompl push dec push mov xchg add sbb jl (bad) sub inc inc and pop cld xchg pop ret leave adc ret adc mov pop aam push enter sahf faddl mov and pop (bad) mov sub cltd pop inc add lret js shlb pop sbb or js jb dec sub xorl xchg and mov pusha pop dec mov jecxz loopne mov lods ds dec pop call or pop dec inc push rolb inc cmp fs xchg in sbb dec testl or rcll daa inc lock (bad) push mov xchg add xchg cmpsb sbb add xchg mov pop push or bound (bad) jno mov sbb call jns outsb out mov sbb jle cmp jns push (bad) adc sub aaa cli adc jp mov ds stos pop jp cmp xchg lods and in scas scas push lods das inc and (bad) or sbb sarb fist pop mov and in jb cmpl inc mov and pop cwtl fstl or (bad) cld dec (bad) enter int3 lret mov push push jge sbb pushf dec inc in push dec and adc mov mov jle mov pop or or rorb dec scas xchg and into add rorb pop sbb aad jb push mov hlt push std js mov das pop aas sbb movsl mov push outsl dec push call rcrb jbe jge jns sub pop aam inc adc pop cwtl call cmp (bad) adc (bad) rolb popf and add pop js sbb jo and sbb mov push int3 orb insb pushf or loopne mov sub cmp cmp stos rcll mov movsb rclb adc in ret loopne or add push jp shll bound push jbe inc imul cmp push fmull das and sbb push adc sub rclb mov pop inc inc loop ds inc or lea jae ficom cs idivb inc inc andl inc pop pop mov sarl cmp in loop xchg jbe lods dec mov pop dec cmpsb dec add lea mov push inc fsubs test inc sub push mov mov cwtl pop pop or xor add adc sub outsb mov popa loopne cmp mov mov sbb pop push (bad) or dec mov jno cmp pop sbb inc inc cmpsb xchg jl dec dec inc mov ss movsb xorb dec cwtl notl add xchg sahf and mov jns push daa sbb jne clc test lods cs leave jno and or sbb sti mov ds or outsb or imul add pop push flds js push sbb inc (bad) jmp shl and test roll cwtl data16 inc lock dec pop or (bad) xchg and andl add pop jl add xlat mov pop lock mov pop xchg push cmp leave inc add mov test inc sub mov psrlw mov ret add and je daa add sbb adc rcrb sub nop pop pop pop and push pop seto xchg xchg sbb pusha push test outsb or mov pop cli lds sub jmp dec dec cmp pop js sub movaps adc pop pusha loopne xor xchg pop add push dec push push flds pop loopne js jle pushf adc pop rolb push sbb ret pop inc xor scas lret pusha (bad) out (bad) aaa push andl lods cmp lock out sbb gs or push or cltd push push or les push push pusha adc or cmp faddp outsl mov dec inc jecxz pop push adc cs int3 add into rorb mov sub int3 cmp xchg jnp cmpsl and mov shlb sub addb push outsl cmp sbb fild xchg icebp or cs sub and (bad) mov (bad) enter add clc sub or lods inc push xchg call jo xor and scas aam lret cmc xor es in push xchg fs ss ss jno push sbb aas jb push in sbb add add and jecxz xchg dec fisttp pushf arpl mov lods sbbl adc and loop sbb test add add pop sub ds mov daa push (bad) xor std dec shll jecxz addr16 (bad) mov mov mov xchg (bad) add push cmp (bad) push ja lock xor push je scas (bad) orl push outsl dec and mov push clc nop into add jecxz adc mov jb xor js dec iret xchg jb mov xchg rcrb ret mov xor ret sahf cmp (bad) and sub lods push out lea push jecxz scas jno sub lea lea mov xchg push jno adc or pop xorb xor adc bound cwtl dec int3 or mov cltd push push push mov das cwtl xchg pop out cmp push outsb fldl mov push adc push xor push adcb popa add and (bad) stos inc inc jge dec aas xchg ret jo hlt mov fwait pushf inc cltd (bad) movsl mov adc mov and sbb mov fstl cmpl icebp lret lret (bad) test mov pusha ss push out mov ja xchg pop arpl scas fcmovbe stos xchg add imul sbb dec inc cmpsb std in jne sti daa or cmp andl mov out pop and dec into and mov sbb or divb aaa loopne jecxz xor pop (bad) pop inc jb mov mov jmp dec adcl outsb outsl push sub nop jmp out cmp mov pop das dec divb xchg push fucomip loopne push pop jp push mov shrb loope pop push jno mov xchg dec (bad) pop push or dec aaa cmp aad loop pop adc aaa mov sub xorl add mov ret push or or dec adc enter sbb inc mov (bad) pop xchg je pop or jg into push mov movsb or fiadd movsb arpl adc xchg cmp data16 insl xchg push (bad) mov pop mov push jg leave fmuls sbb push push out ret subl or mov add push leave dec fnstcw xor mov lret add lds xchg or rorb movsl adc xchg call xlat call cmp test push ret xchg jbe roll mov dec and cmpsb jecxz pop idivl push xchg dec aas in les jb mov inc daa and mov adc test faddp sbb lds push fwait clc xchg pop cmpsl push sub xchg dec (bad) (bad) idivb ficom pop push shll xchg mov in imul and and ljmp push lods mov test or sub imul inc pop rclb push sub push xor cmp aam push jo das push aam adc mov xor pop daa dec cmp test decl xor push cli arpl cwtl xor inc movsb adc dec sbb adc inc adc pop mov daa adc jmp push jp dec pop (bad) push or pop (bad) push aam jne push xlat sbb or or xor pop aad or dec cmp sub pop insb (bad) push sub out arpl ficom pusha pushf inc pop adc dec mov cmp pop cmp xchg push addr16 dec pop ficomp call or jmp rcl iret add lods mov mov push shll mov (bad) jne and fistl sub xlat cmpsl inc push push xchg push inc and or adc jnp adc add loopne icebp jne mov adc mov loope (bad) cmp repz push outsl loope or fdiv popa add dec mov rorl popa fs cltd or mov dec pop xor test stos lahf inc mov pop cmp pop pop and sbb sub and push in icebp lcall push adc or or inc cmc cltd and xor jp dec cmovl mov ds inc sbb movb sahf aaa adc dec fs popa jg push push and lea jb jp gs fmuls orb repz add sti jg cmpsb in mov dec dec rorb and mov fs push (bad) pop into pop ret or and imul add dec fld dec sub mov dec les mov (bad) jecxz mov loop pop push ficom shlb lahf rolb mov push loop adc decl xor popf outsb or cltd loopne les and cwtl adc add mov xor popa inc sub ds cmp xchg inc dec push out or lret iret sbb and arpl in jae push dec fcoml sbb in pushf push int mov push fcoml or or js mov divl mov push adcb push mov xchg mull cmp push dec mov push mov sbb jecxz je scas dec sbb stos adc xor jo inc mov ret pushf or loop rolb scas fiaddl xor ficoml or shrb lods mov bnd mov sbb adc test sbbl (bad) mov callw dec leave pop cld mov daa js pop dec adc push leave sbb adc loope sub call fmuls sub jo xchg out add sbb push (bad) or out xchg pop icebp adc dec (bad) cld mov pop aaa push pop jno jecxz pop or das cli xchg inc mov dec push dec movsb push adc cmp popa xlat adc out pushf and jl out es ficoml inc cmp pop call mov cmpb adc rcr aaa dec or or push adc sub aad adc jae mov mov mov add push lahf (bad) push or movsb xor or inc arpl push mov dec inc dec inc inc inc inc inc inc inc inc dec sbb or test xchg arpl cmp jmp pop inc pop inc pop inc bound dec arpl push pusha pop pop pop pop cmp mov add (bad) (bad) incl ds inc dec inc dec inc pop inc pop inc pop inc pusha dec pusha push popa xchg mov dec fs arpl pop bound pop add pusha push inc (bad) (bad) (bad) decl dec sub inc sub xor xor sub dec sub movsb (bad) (bad) ljmp insl aaa jno je ja jns jp jnp jnp jp jns aaa sti jg lock jno insl je ja jns jp sub jp jns into (bad) incl inc je jno insl xor fs push iret cmp push cmp jg decl inc aas inc inc inc inc aas inc cmp cmp pusha inc arpl dec addr16 push push push pusha gs addr16 sbb addr16 add pusha inc pop aas pop cmp inc add or dec inc dec inc inc inc inc lock inc dec or add aad mov cmp sarl push arpl popa pop mov into movsb pop sbb pusha mov out or mov pop inc pop aam (bad) sbb add subb dec adc bound sbb daa adc andb pop push (bad) pusha push out mov dec push pushf les sub rclb test sbb push push sbb add sbb adc test push add pop adc inc data16 pop sub add adc das loope dec jl js dec dec xor or inc xor add xchg pop nop mov or inc imul pop jne sub mov or xor push dec stos add xor or dec jle (bad) inc xor adc xchg arpl loope push or push adc adc sub adc inc lea fidivr push loopne xor cli push cs test xor jg fldcw mov subb pop jns dec add (bad) jnp push sbb dec sbb rol mov add push popf (bad) or lock add pop xor or sbb or xchg fdivrs aad sarl push jp push xchg and mov sub or std adc out or mov push add mul popa dec sbb lock push out aaa test ljmp inc or add jo aas cli push dec dec jle mov push push into push push or repz inc orb add or inc xor inc adc sahf pusha and add out or sbb adc add or outsl ds sub lods add es aam or push int3 inc cmp cmp or or pop adc cwtl push out adc dec sub and pop adc pusha dec sbb and push dec mov mov call or (bad) out andb add add (bad) dec movsl test jno pop sub mov add out xchg addr16 dec out cltd cmp or or push fnstenv push dec scas or or shrb jbe push and std sub pop push inc into pop mov into xchg jae dec data16 inc and cs test je push outsb gs push inc and jae jae jb xor or mov mov push or add add cld or outsb dec mov or add mov and sbb mov dec mov adc xorl or and adc xor fbstp jmp cwtl push sbb cli (bad) mov adc dec mov inc int3 or add xor (bad) leave aaa inc sub xor dec inc pusha inc cmp stos xor and enter arpl or jno pusha push pusha out in jmp scas inc push aas push inc dec pusha dec or imul push cs or add dec or and test jge pop inc in dec daa cmp bound mov adc dec and dec pop pop ret inc push sub mov nop (bad) fxch cwtl leave dec mov mov pop dec pop jg cmc xor ds xchg pop repnz or xorb js inc add out pop adc and jb mov jle repnz jl cmpl shl mov nop inc xlat dec dec pop and rorb xor or imul mov add inc loop mov pusha jle js or pop data16 mov sahf sbb pop int3 dec lahf scas push cmpsb push popa fimull mov sub pop pop sbb xchg or hlt mov inc stc es fwait and xor push insb nop sub and mov push dec push loope fimull roll or xlat fisttp dec pop pop pop inc cmp leave ficomp nopl sbb jg mov mov ds popw ja jnp sbb mov add push inc push (bad) dec push dec cmp pop jnp or mov out lods dec sbb add pop push mov mov popa lahf mov jmp pop fldl pop or bound pushw pop or fisub iret push pop and out dec lods xchg addb or (bad) cli mov fadds mov push xor sub or sbb push inc in mov andl and sub loopne in sbb inc adc add push add adc bound push push jge imull (bad) mov xor push and or popa les (bad) fisttp dec pop rorb mov call mov neg ficomp inc (bad) or shlb xor xchg cmp imull cwtl in inc push jl mov rcrb cmpsl pop mov hlt push or mov pushf lock push arpl sub sub lret and sub xor (bad) xor push or fldcw or mov and inc inc add xlat inc mov lods and sbb and push xchg xchg rcr xor ljmp test dec (bad) jo mov and push pusha mov das push adc add sbb in (bad) outsl fdivrp loop shrb push mov dec scas pop hlt or and insb fcompl mov push adc fidivr fstpt or iret mov mov push iret push (bad) pop sub mov fstpl lret ret nop add push add (bad) ficom push aam add jns dec cmp dec sub sbb or push ffree test adc inc push pop inc adc push bound pop repnz or xlat dec mov jecxz mov jo dec add xchg into sbbb add push cli xor dec test push dec outsl lds push sbb mov pop sbb push sub add dec xor add add push sbb je (bad) rcl push cs sub (bad) ss ljmp out adc outsb pop xor cmp pop rclb loop add push mov arpl jle sbb mov cmpsb mov pushf adc jo sub mov push outsb jo sbb lock mov sbb and jmp sahf inc xchg dec loopne dec ljmp or es adc adc xor and lea cmp sbb jb test inc aas xchg dec pop or sub (bad) jecxz or mov mov inc (bad) ja outsb outsb and sbb sub test cmpsl mov mov pusha dec xchg sarb ficompl xor add adc add pop daa or sbb out dec imul shll fwait sbb movsl cs push fldl mov push adc les jo addr16 or movsl outsl out mov std ss adc outsl jg xchg inc inc fisttpl xchg les add (bad) addb adc jnp sahf mov or mov mov daa mov add daa add and pop inc and adc dec xchg inc sub dec ja fisubrl test dec or add add and pop daa stos mov mov dec push dec xor inc loop cli and mov add dec or add jmp jo (bad) mov mov ja addb mov mov pop add push and or ss std roll ds and push inc jae pop jmp test pop inc jo cwtl dec movsb xor push arpl sbb pop pop add scas inc shll jmp aad mov les or scas sub pop mov rcrb pop push rolb inc popa pop adcl adc xor hlt xchg xchg mov sbb jo cmpxchg adc cli adc (bad) mov sbb pop dec cwtl sbb out push roll (bad) xor pop jmp aam mov inc or cltd pop dec cmp push cmpsb push cmp inc inc pop cmpsl stos mov (bad) adc les add pop inc les pop xor adc mov dec loopne sbb xchg cwtl push arpl jg popa mov push mov ljmp jne ret outsb xor andl loopne aas test pop lea push ds xor adc inc or pop or (bad) mov mov adc outsb shrb adc xchg add fmuls pop push test pop aad and dec in cwtl insb je or jl test in and push aas jg add push inc pop add add stc sub add pop push je mov and sub popa test inc jne xor addr16 enter pop roll test xor sub push pop sub cmp in jle adcl add push push mov popa mov and popa dec jb addr16 dec arpl cmpsb loope mov sbb or pop dec pop (bad) jno mov mov and inc repz pop push or mov call pop pop cmpsb decl clc shrb pop add pusha jne adc loopne dec push pop pop inc add and or loopne (bad) dec push pusha aad add add dec add daa insl pop test inc fwait mov and push push push add pop mov and mov mov insb adc push sbb movsb daa scas or adc mov inc mov mov lock xlat xchg adc loopne outsl rorb sbb inc pusha adc adc xor sbb imul xor cmpsb mov bound add push xor orl rcrb idivl mov add add ret insb rcrb roll imul xor test sub dec dec push add add sub and test push xor dec pop shrb xlat add test (bad) and jno pusha mov orb xor lods mov xor aas cli inc or (bad) inc and add or jae adc pop jg imul dec bound add adc add pop xor xor xchg test and pop mov idivl add add push or adc lods dec cmp out gs xchg fbld push add mov gs addr16 popa subb fidivl fiadd mov adc or ret cmp js pop xor mov xor aas dec inc jg add mov pop and jl dec inc and sub pop fwait sub or mov inc mov pop lods sub test sti lret push stos mov dec bound jbe xchg dec jmp push and call test popa sub bsr dec xchg cmova mov pop pop adc add add adc inc and add daa cmpsb loop lcall jo imul iret aas aam loope mov adc (bad) dec dec lods inc xor ja ja mov sbb adc cmp adc dec adc pop push cwtl (bad) dec dec dec inc ret mov dec xchg and arpl sbb add rcrb popa dec js fs mov cmp mov imul and (bad) cmp je outsl loop test mov inc dec jg es dec insb inc dec inc mov fisttpl inc or scas push popa popa inc pop jle and int push sbb data16 cmc loopne or dec pop inc outsb andl xchg and cli adc xor jge dec into xchg ds fimul pop jmp push xlat rcll les mov push mov or ror rolb or call fwait sub inc inc sub out cmp jb cmp sbb sahf push mov xor and mov pop push dec dec test pop dec movsb test ret push (bad) mov arpl push add cmp sbb push roll (bad) scas add sub pop cmp xor inc mov add pop dec sbb ret or adc push xor inc push mov or inc xchg fistpl sub and sbbl sub pop lds jnp mov popa movsl lock inc dec inc lock dec hlt push pushf sub cmpb push mov inc inc jnp dec or lret mov cmp pushf xchg lret sbb adc sahf push inc pop pop xor sub pop pop popa push aas aam fdivrs nop movsl dec hlt pop dec mov les dec pop sbb add sbb stos test add inc dec fs mov js sbb pop jns pop dec xor adc dec clc ss cs test es negb push (bad) loopne movl sub push dec adc sbb sbb test cli push mov inc push dec in mov and or or push mov cmp nop add cmp push imul cld mov dec cmp roll daa or cmpsb rol cltd les mov fadd push movsb inc sub mov or arpl sbb add xlat dec pop lods dec les cli (bad) mov fadd inc or xchg shr pop push jp dec imul add and imul xor test ja push ret or dec dec mov xchg imul and push or (bad) push sub rclb dec inc pop dec dec inc rclb push add sub imul or inc xchg pop add adc loopne sub dec test sub pushf cltd dec cmpsb bound sub and das mov sub fmulp lock mov inc dec daa push or aas test pop and movsl pop or adcl xor push arpl (bad) fneni(8087 xchg push adc mov or inc ja add sbb orl add add pusha sbb shr inc incb rclb loop jno lret xor push pop scas (bad) into and push dec push lahf enter incl sbb cmp xchg ret les (bad) (bad) aaa in pop mov inc and sbb seto add sbb adc test (bad) push lock xorb jp pop pop xchg fdivs pop daa or dec push add inc call insb inc andb mov or and ja pusha gs inc fsubs loopne pop inc addb movsb cmp xchg lcall or ret jg daa adc sbb or mov jecxz pop cmp dec (bad) mov lds loopne outsb test and jmp (bad) ds shrl stos dec sbb cmc inc add add sub rorb ret pusha out sbb add movsb mov xchg push or loop xchg lods dec xchg inc pop pusha adc pop dec push mov les and and popf add arpl sbb inc mov dec das hlt cwtl sub adcl stos fmuls (bad) or ss jo in sub push dec cltd xchg xor mov mov xchg mov pop call xchg in sbbb mov xchg dec lret and add jle sahf fnsave mov pusha add ret mov pop inc notl (bad) int or inc push inc dec jno adc dec and add pop mov cltd sbb dec sub mov inc fwait pop daa mov in popa sub xchg mov pop jbe pop mov cmp inc sbb pusha cmp pop das inc dec and int hlt or inc push inc or and mov (bad) adc sbb push ds jnp dec cld rol dec mov pop add cmp and push cwtl aaa xor ret in cmp (bad) rcr cmp push pop xor add xor rcrl inc movsb inc push fadds and push dec push or push inc push sub or adc xor add test es das sbb imul fwait cwtl mov dec pop xor cld dec test sbb or cmp xor jo mov mov imul dec push push and mov adc inc adc add sub or push scas add sub push sbb cmp xor roll pop dec pushf pop push nop bound (bad) xor add sub jg pop add mov add iret add adc popa pop addl jo inc adc add jne mov or pop xchg adc loop fwait ss push enter fs test or xchg inc into add jmp ja xchg dec pushf test pop out pop mov adc xor pop repz pop push dec int3 dec ret pop jecxz mov dec inc add pop (bad) (bad) sub pop pop notl mov adc dec and outsl outsl cs adc jmp jbe add mov mov cmp add mov shl scas inc or jg mov pop push mov or adc or cmp pop pop test rclb xchg and (bad) push iret push dec xchg add loope push xchg sbbl pop (bad) ss xchg es pop dec pop aam and out imul cs jo adc push jp add jp fist and push xchg dec add add mov push insl cwtl xchg push adc (bad) dec dec mov ss nop mov leave fcmovu gs cs loope jecxz xor call sbb add push dec mov add dec or mov xchg mov les pop push into inc (bad) mov mov ret adc mov sub lcall sbb out (bad) xor (bad) les aaa mov les add cmp mov fcoms sbb mov pop sbb jle cmp inc fs inc test in add jnp sub (bad) xor push ss js outsl dec scas in ret xor add cmpsl sahf jns (bad) push or xlat test push lea xchg mov fcoms add (bad) (bad) pusha push lds aas mov sub cmp cmp or aas pop push or sub mov loopne push cmpsl sbb mov inc mov aaa pusha sub data16 sub push mov mov push js cwtl push addr16 cmp stc aaa lret cmp ss rclb or dec dec pop out push pop push dec mov dec and and add add (bad) sbb sbb sub add sub mov adc and test frstor inc xchg sbb nop sub rep jmp or or adc mov pop (bad) jmp inc aas in icebp jno adc mov lock mov (bad) sbb int3 rcrl cmc ja (bad) jmp add into loopne adc cld or rcll test lret movsl xor and pop pop dec sub add add cmp and push daa (bad) int sbb cmpl lahf popa pop (bad) repz or mov aam rcrb jo lods pusha pop daa pop cmp fsubs add xchg aas hlt push pop inc loopne and pop popa and test cwtl gs sbbl xchg std push sub dec popl mov dec lret cwtl ret sub mov adc xor rcll sbb xor dec push fiaddl and jle adc sub pop pop dec hlt decb adc jle cld push inc nopl push std pop or (bad) repnz outsb adc ret (bad) imul rolb stos xchg pusha cmp dec pop push add fcom mov adc hlt add je jo sbb lret inc jp lock xchg ljmp push fwait push aad test sbb pop popf ret adc cmp ficompl sysret and fdivl adc xlat rcl fstps dec cld adc push scas rcll lea push mov push pop xchg cmp push sub xlat mov and addr16 pop add mov sbb test cmp orb and push das push stos or push enter add daa es rcl push mov sbb push cwtl xchg sub push aad lret daa push aas push push pop xchg (bad) pop cmpsl sub in add push pop fimull insl ret cmovo mov pop inc push adc sub pop push xchg jp movsb lahf jl push ret push pop outsl mov mov scas into (bad) (bad) clc cmpsl or push adc aas daa dec mov test or or outsl push pop add (bad) in nop push sbb add jo xorl lahf loopne mov cmpsl fidiv add fadds mov inc fs addr16 adc add jb mov and fsubl and mov xor mov aas inc out jo mov repz (bad) (bad) mov data16 addr16 mov test or rcrb mov pop or dec mov xchg push or cwtl dec push push sbb sbb add inc mov add cmp js lret push cmpsl fstps adc mov sahf int3 xchg test mov test or mov push inc (bad) cltd fimul cmp jecxz popa and test or xchg sub xchg ret adc sub jns add xchg push inc fwait push jge mov icebp lfs test mov fsts adc mov loope cmp sub fldl mov xchg add adc push daa or xor xor push or test add cltd sbb int3 (bad) push dec pop outsl pop cmp pop push dec (bad) jbe iret pop iret xchg mov outsl test sub push aaa and aam pop jo push push inc mov fbld enter and jmp enter pop add pop pop out or xchg outsl mov rcrb daa ret jo add nop push mov das push cmp insb jo enter (bad) insl cmp pop cmp pop sbb add jb and out push sub mov jo pushw nop push xlat xor or into or (bad) push jge adc mov dec xchg jae addr16 (bad) xor cmp test (bad) dec add pusha adc cmp js out lahf or jnp arpl mov xor popf out es rol test iret dec and push hlt add xor adc leave fmull jb xlat dec (bad) or push ss ja ja fs aam outsl (bad) sbb push (bad) insb or fldl out sti push scas xchg sub or adc mov insl jmp test mov (bad) dec cmp dec sub pop insb outsl mov insl cmp add add ret repz repz clc div repnz repz lock in ljmp in loopne fdiv cmp repz (bad) aam iret repz ror int3 lret cmp repz ret mov mov iret repz mov lods stos test cmp repz mov cmp repz cmp nop mov repz (bad) cmpb iret repz insb push iret pusha pop pop push push dec cmp repz inc inc cmp repz repz sub and repz and adc or iret repz add clc (bad) lock out call out sahf out mov out sahf cwtl nop mov out push inc xor adc mov mov mov inc testl out test andb loopne inc mov and sahf out sahf inc push pusha jo mov out nop cwtl mov sahf out ror fmuls ljmp negb push push or adc sahf out sbb and out sahf out xor cmp out sahf inc inc dec dec push push jns out pop pop pusha fs insb jo js sahf out sahf addb sahf out mov jns out cwtl lcall mov stos jns out lods scas mov mov jns out mov out sahf rol (bad) enter out int3 into rcl aam jns out fcomp (bad) sahf out sahf loopne in call jns out lock out sahf out clc cli cld dec repz add add add cmp repz pop or or cmp repz cmp adc adc adc cmp repz pop sbb sbb cmp repz cmp and and and cmp repz daa sub sub cmp repz cmp xor xor xor cmp repz aaa cmp cmp cmp repz cmp inc inc inc inc inc inc cmp repz inc dec dec dec repz repz dec dec dec dec iret repz push push push push push push cmp repz push pop pop pop repz repz pop pop pop pop iret repz pusha popa bound gs repz addr16 iret repz iret repz jo jb je cmp repz ja jns (bad) cmp repz jge jg add add (bad) (bad) (bad) cld or adc sbb and xor inc lock out fs jns nop call loope add and inc call imul in adc inc (bad) jno movsb into fxch adc dec leave test rol fwait sub mov movsb mov (bad) incl xchg mov mov mov scas jmp stos add sub lahf rcrl inc pushf mov and cltd xchg adc adcl mov mov mov inc test (bad) fs jge jnp jp mov (bad) (bad) (bad) jmp jb jo outsl inc outsb icebp insb movsb imul imul gs ljmp jno bound movsb pop jno inc pop adc pop icebp jmp push mov push inc push and loope les dec nop dec jns fs inc dec xor inc sbb inc mov out cli inc add add or and xor inc cmp fs jg (bad) jns nop xor xor xor xor imul in adc inc pop hlt jg sub sub daa adc dec test and jmp adc pop and xchg sbb nop sbb sbb sbb and jmp les sub nop push stc adc idivb and cltd adc pushf add adcl js (bad) jns or inc or or or (bad) (bad) mov lock pop nop pop cmp in xchg push inc push icebp add (bad) call adc inc add roll add adc flds movsb add inc add mov in mov add add addl nop push sbb add add ficomp cltd lock cmp push or sbb out mov push dec jns test neg mov scas adc and xor dec out idivb push push shll ss inc dec or inc cmp outsb jbe and adc xchg add (bad) into inc and or fsubp out or ret xor push shll es addl pop addw outsb jbe xchg xchg sahf cmpsb scas push add mov (bad) into (bad) pusha xor or out notb test push push push push inc mov ss test push pop test push outsb jbe xchg xchg sahf cmpsb scas or (bad) into (bad) mov out (bad) push xchg push push es cmp ss sbb xchg dec push pop data16 ret loope cmp xchg xchg sahf cmpsb scas mov ret loope mov xor sbb out negb xchg dec and push push push es mov ds inc and data16 dec and mov xchg xchg sahf cmpsb scas mov dec and mov sbb out idiv xchg xchg leave xor push push es inc dec es ret fs pop int3 outsb jbe xor xchg dec es leave sahf cmpsb scas mov leave xor test out (bad) dec push xchg dec movsl push push push push es test inc dec sub data16 jbe push test xchg push sub mov dec movsl push test push mov xchg out testb inc dec fwait cmp add pop imul push pop sbb jg (bad) (bad) (bad) jmp and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc xchg lret clc inc inc inc inc inc push test add cmp xor pop sar push pushaw popa bound gs imul jo (bad) call add ja jns jnp jge jg addl decl lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl (bad) (bad) (bad) ljmp lods scas scas mov mov mov mov mov mov ret (bad) mov (bad) dec leave lret int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne sti (bad) (bad) jmp in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl cmc lahf inc push add push ljmp mov push popa push daa push mov imull jno lret (bad) (bad) (bad) lcall daa das jbe int3 dec xchg cli jle popf inc xor imul xor inc inc mov dec test dec and jns push stc and add cld (bad) jbe test xchg das pop push mov or enter addb pusha rcrb rorl out (bad) imul dec outsl inc (bad) in or sar pushf fdivrl inc jg jg bound jae pop add mov fiaddl aam lock outsb sub addb mov int3 mov dec push lret push rcrl pop cs mov mov je pop sub pop xchg adc inc xor xor dec add jmp push xor daa add scas ljmp sub add sahf pop sbb adcl cmp xchg cmc inc jmp outsb adc push jle jae daa and sbb sub add outsl pop lods xlat xchg push mov mov dec jae push das jae push mov lods bound loopne adc jns jle mov test push fldt jae mov ret das sbb add or lcall arpl gs xchg dec jae or nop scas jge (bad) mov mov xor ss mov xor xor (bad) fiaddl xchg and testl je pop iret xor aaa js push dec movsl dec push pop dec push jg daa in pop inc inc push adc ss aas inc pop or loope outsl sub enter adc inc xor adc lahf (bad) (bad) jg dec es outsl and out push xchg sarl and xor inc ds int decl into cmpl push xlat aam add add cmp jg (bad) out mov xchg das call ja test fwait outsl dec xchg test pop or push imul ret imul int outsl icebp fsubr roll adc sbb dec sbb push out (bad) out aaa mov cltd int3 add testl addr16 lcall jnp pop lea cmc xchg add movsb and aas rcl outsl jle clc js,pn push sarl dec cwtl pop iret mov fistpll sub mov xlat (bad) xor push ret or (bad) jg dec ret (bad) enter aas mov in sbbb mov rcrb push rorb sub jle,pn mov xchg enter push and xchg lds inc std lahf and cmpsb cmp jne aaa mov daa lahf imul out int3 test mov aas lea jb xor mov xchg jnp,pt mov jecxz or mov aaa mov sbb sarl dec mov adc ss aas pop and out push (bad) stc movaps dec in mov nop aas fildll mov repz dec lods cmc (bad) cmp mov loop cmpsl pop adc cli mov aad and rolb inc push xor das lcall aaa mov xchg in jbe movsb (bad) pop jmp mov lcall fldl xchg aas mov repz insl xchg scas sbb (bad) js ret push or (bad) int (bad) jg mov xchg aas and fisubr imul out jno (bad) icebp addr16 inc adc or (bad) out inc cs add fdivrp mov or aas and pop add into adc loopne je mov pop cld add push jbe andl add add mov rorb cld in mov push je inc inc movsb into out mov mov sbb xchg jl (bad) inc dec sahf gs push xchg xchg scas daa rcrb mulb add js fwait (bad) lahf into pop jl roll jg and xor aas add (bad) fistl cld mov mov pop int3 push aam enter movsl aas jmp notb subb je sahf mov stos xor (bad) jmp enter test movsl sbb sbb inc stos cs (bad) mov cmp push or mov lods aas jae fdivrl cmp in std (bad) xor scas aas push add jno cwtl xor add fcomip mov loopne mov loop clc jecxz in sahf (bad) jg call das notb aas lret faddl lret rcrl xchg xlat inc mov fildl js in outsl lock cmpsb mov jg and xchg aas sbb aas cld push outsl add push mov push ret push aaa test mov jne lods pop jg fisttp in (bad) lock int3 adc jbe mov (bad) (bad) or sub push and mov and or lods xor mov sbb aas arpl dec cmp mov mov push mov repz out add pop (bad) push pop mov add (bad) jg mov (bad) adc aas inc mov pop es repnz daa mov ds jno in pop mov rcll mov push lock ret add push outsb pop lret cld imul adc cmp sarb loopne addl fwait push lods inc test aas mov out xor aas mov cld jmp mov push testl lret pop or outsl es mov les mov insb push xchg push sarb sarb outsl jle negb xlat add lcall sub xchg push je push and jno xor cmp insb jge (bad) in mov fild gs jge (bad) out insb sub aas dec sbb mov dec in lcall dec dec jg lcall jecxz lds flds test cwtl fnstcw xchg lds mov xor push rcll sub (bad) mov push lods jb int (bad) aas pop nop xchg jg fistpl sbb (bad) stc dec ficomp jo sbb movsb aaa inc cmc clc inc (bad) aas std jmp das sbb mov mov out cwtl ljmp mov loope push out push adc and jg sbb cmpsb add ljmp sub dec mov push push mov in push cld push hlt pushf pop push leave fisub jge ss mov sub mov pop mov jp rcll mov sbb mov in mov mov mov lcall aaa fnstenv adc mov sahf push pop lret aas sub xlat mov (bad) mov mov rcrb push push dec aas ficoml push ljmp (bad) (bad) lcall push fadd or idiv rorb dec imul int int (bad) aas jb or in jge stos mov jecxz mov adc jmp pop pop stos (bad) out add xor pop fmul lods lock outsl (bad) jg rorb and jnp push or aas aad add dec or scas xor int mov sar fiadd inc insb push sar out mov push icebp jp out inc (bad) mov and lea sarl fisttp jno jmp into mov and mov repz lods dec mov push imul mov test sti xchg cmp stc mov lock push fistp pop xchg add sarb ja stos stos pop sbb push outsl and sub fistpll push cli cltd imul int jle mov xchg cmp mov mov sub fistp inc sub jle push cmp adc push sbb outsl jle pusha addb mov mov add add popf mov int mov push xor inc adc rcrb (bad) incl sarl jl cs mov push jge lcall jle loopne and es cmp out mov dec cmpsb enter dec mov test (bad) (bad) or jns cmpsl xchg mov xor fsubl call add out xor add lret pop sbb mov out mov roll or push nop (bad) incb lock (bad) mov mov sub add xchg in int outsl jle jl insl js sub sbb aas jo or (bad) std fistpl inc push pop pusha repnz add aas insb pop inc pop ja cld out mov imul loope hlt mov movsb popa enter shrl or mov push add pop out aaa mov or xchg (bad) mov aas nop jb sarl repz repnz jae pop rcl cmp scas adc push enter aaa jnp push cmp mov add jg (bad) mov stc and in popa xor or adc dec push push push sarb and pop enter fwait inc into fstpt adc faddp mov fstpl mov inc bound ja and mov (bad) out mov ret scas (bad) cmp ljmp pop fistl cld call mov aas cld sub in mov fcmovbe inc push out int jle sarb xor in ret fcomps fucomip inc roll sub enter int jle cli inc (bad) mov xchg icebp rcrb add mov addr16 fmulp and popa popf push cli push and inc mov pop xorl adc jb add cld out jg loopne adcl bound faddl imul repz push jl xchg arpl mov add ret xchg mov fisubrl out inc push or stc int dec jmp hlt dec or ljmp add out ljmp dec or clc loop pop sbb in pop ret vmovups and imul sub loopne outsl idivl push add pop cld mov aas fwait dec frstor repz cld jbe push idivb inc push cmp pop repz mov inc repz outsb dec sub mov xchg pop cwtl push repz outsb scas and lods or (bad) cmpsb fnstsw mov jnp cmpsl popf dec jmp mov es jle fistl add jg push dec lods int xlat cmp cmp imull jecxz data16 add jle fistpl jnp scas inc loope leave jp je mov scas mov insl push jmp test scas loope iret cmc (bad) lret pusha cld testb push jb arpl (bad) (bad) loop push push aad add xor (bad) fldenv clc inc add lcall daa cmp das mov aad sub sub xor aaa push pop pop es mov aam add cld out push mov push cltd test gs roll sbb idiv in mov mov sti jecxz add push pop scas movsl inc (bad) out jle fild je test cmc popa cwtl gs fwait mov jne xchg (bad) rorb jnp xchg leave (bad) out hlt fldl and push sub fldenv in push scas pop (bad) outsl jle fistl (bad) cmp push cmpl int movsl lods sub popa push arpl sub cltd sti int jle sahf (bad) ss mov lea repz pop scas jle int idivb adcl mulb dec (bad) out inc leave rcrl jmp aaa mov cs dec pop fdivp lea jmp aas repz clc sub shlb js sti sbb stc int jle arpl out sahf cmp loopne jns shlb test out mov in pushf inc es push pop das jle fild sbb jb,pt adc dec jecxz push inc dec mov stc int mov jmp xor nop (bad) xor sbb rcll mov les enter and lcall mov mov mov sar mov int mov roll dec rorb out jle fwait sbb mull aad dec sub out mov sti leave clc int3 xchg mov mov mov mov das inc sub lods add inc cmp cld int jle (bad) repz sbb jmp push sahf adc sub loop pop pop and push movsl add jb push mov adc cld mov add push push (bad) jbe outsb mov dec into mov leave addr16 sahf xor repz daa add jl push stc cmp pop mov jo pop add (bad) adc mov ja jle push rolb pop pop call push sti int jle or pusha pop xchg mov insl stos xchg rcr or stc int jle mov jmp gs or sub mov fbstp mov xor js and dec outsl dec inc push negl dec cmpb negl shlb or xor bound and add sbb jle xchg std jo sarl out out or mov fisttpl ret popf je xor loop lods inc stc int push ret mov fmuls shrb mov ss popf fsubrl add aaa mov push in in inc inc dec mov aas cld lds bnd mov pop inc int mov popa mov cmpsl (bad) sahf inc sbb repz sahf push jno adc adc pushf mov xchg mov mov mov xorl sub sbb adc mov pop test sbb mov out mov pop jno jae mov outsb jle pop incb rolb xor fs sbb push shl xchg (bad) out or pop stc mov leave aad mov fwait push and decl mov int push pop dec add mov and xor push aas cli push jno add adc xor add pop das imul mov insb jle roll out and fdiv xor or dec cmpsl sbb sbb scas jb call mov mov adcb mov stc cmp sbb loop aas ds add push xor pop clc fistpl mov in cmc loopne push nop pushf out scas loop imul lods stos xor pop pusha (bad) push push in repz fisttp xchg inc (bad) and pop cld mov int jle sahf xor ds clc movsb cmp mov jle xchg test mov mov int3 scas aaa mov enter out add cmp sub (bad) out das scas mov mov fsub cmpsl adc andl jp pusha subl add adc in push or cmp mov inc xor shlb mov sub es sti neg and lods cmp ljmp xchg cltd addr16 mov testl mov xchg pop sti adc mov (bad) out cltd repz stc imul icebp rorb nop icebp ss outsl jle fwait jl jne mov int lods mov xlat divl mov jge cli and push int3 dec dec sub xor dec inc lods adc add sbb xor sahf inc (bad) testb pop insb fdivl mov xor cltd int jle adc (bad) jmp sub and add or aaa mov inc and mov ficompl (bad) aaa jp ss test iret (bad) fmuls out add out jno pop cmp aas dec mov cmp adc add in repnz mov enter popl ror or jg or aas mov scas xadd cmp int sar push mov aas ljmp incb xchg cmc push inc sarl mov cmp inc incb pop scas mov pop scas inc daa ficompl pusha push inc adc incl bound pop pop add add addb mov call sub mov cmpl lods aam xchg add out das and mov pusha mov pop movlps add mov fistpl outsl ret pop mov imul aas movswl adc outsb daa rorb outsl aad pop cmp mov notb fadds mov and insb add pop add fadds push pop shrl lds in inc mov (bad) pop repnz push rolb das jns sysret cmp orb mov lea cmp mov add pop ja push subl push add sbbb xor inc xor pusha add pusha add addl sub (bad) sbb sbb jb inc jo adc pop push add mov mov mov fadds add and push push push push loopne jnp flds pop mov pop cs push dec cmpb jnp nop push insb xchg es add outsb push jo imul addb outsl data16 xorb cmp mov xchg ss xor or mov mov sbb cmp dec cwtl add lahf insb imul jb add push mov popa mov lret jg add pop bound mov daa ror insb pusha or add lods or fs adc mov push cmp arpl xor pop imul fs sub fs pop notb xor xor adc shl inc inc pop dec add adc push fstl add das push imul push mov outsl iret insl xor push mov add sbb pusha popa insb pop sub (bad) jns movsb jae mov xor xorl add roll inc int3 add lcall (bad) cwtl pop add fcmovb push inc add lahf adc sbb das (bad) mov in adc fs push je mulb lock push add in push insb loopne insl nop outsb mov bound jo lcall negl mov mov out insb push test jle push test push in jnp pop es enter mov and jo jo lods push jb lods pop adc cs add lods push fbstp xchg inc scas (bad) mov dec add xchg mov sub arpl mov mov (bad) dec cmp mov pop ret mov cmpsl mov mov xchg testl inc sub mov sbb (bad) and push and loopne rol add jbe mov xchg adc addr16 push and into fistpll jg mov mov and ffreep xor inc ret pop push lock mov popa or pusha test loopne jo in shrb ds outsb add or lahf out pusha dec adc lea mov or add and adc adc imul lods jb das rcrb imul sub pop cmp mov or add pusha add sbb xor sbb pop adc (bad) mov dec push dec mov xor push shll (bad) daa (bad) ja out fist jo imul mov imul loope jns mov jne sub daa outsb pop inc mov mov dec inc adc dec add cmp mov push inc mov test inc pop inc push out pop inc fild imul pop incl idivb loope fist das popf sbb inc inc push pusha fs cmp es inc dec dec pop xor cmp loope fs xor insb push popa add mov and add mov popf fcomi clc push cmp loopne lds jecxz mov out sub ret xor sub (bad) mov movsb dec int inc daa dec xor icebp stos scas xor gs insl das and push or xor push dec (bad) je (bad) cwtl movsl pop push scas jae jo sti adc add insb je cmp add test and arpl ss mov pop pop xor add push pop scas xor mov add inc rcll fisubl aaa sti aas and cmp aad sub xor jnp inc xor jp lea xchg xorl sti cmp xor es jnp leave cmp adc in bound add lret sbb imul pop jae lock pop imull add mov mov jae pop push mov inc rolb mov call or sub inc push dec pop roll xor imul inc or scas lds maxps pop addl ret jne jne,pt lods sbb or inc mov adcb ja mov jp pop pop pop push push inc add mov push add arpl and sub insl ss push outsb insl dec and mov jbe cmp push stos mov adc sub (bad) dec mov mov xor xor insl inc jne pop ja in sbb das je pop or xor push adc ja inc sub and shlb mov daa insl insl xor sub insl addr16 outsb out aam cmc std xor mov pop (bad) pop mov jbe les pushl push insl insb sbb pop ret fs add repz sti out in aas add pop pop cmc sub (bad) add add out mov movsl or data16 ret push rolb jbe cwtl jne jmp dec loop insl clc addb add ja mov popa push in and cmpsl cmpsl pop sbb mov gs loop mov jno imul cmp fdivl mov outsl adc and aas sbb add (bad) inc dec cmp push xor lock jge rcrb (bad) jo test cmpb gs add inc rcl or fisubl out outsl or push push outsb xchg ror mov jl xchg adc add test pop mov enter movb jo xlat adc pushf iret jge cltd mov inc push int3 (bad) pop mov shrb sub sub mov or and jno sbb cmp push jae mov sbb sbb cwtl cs stos inc pusha loope pop xchg or cli add add sub pop push outsl push xor xchg imul add into cmp test outsl lods leave pop mov add (bad) or jle mov add ds mov xchg cmp loopne add xchg fs cmc xor push or rorb jb movsb aam cmpsb adc imul popf cmp push in jp pusha push ja popa js adc pop pcmpeqw push adc pop pop mov xor push and fwait and push inc xor inc pop (bad) packsswb sbb pop inc add ret in inc inc dec insl add (bad) loop adc pop xchg jbe outsl loopne das daa outsl jae jbe popaw iret pop dec incl add inc inc push push push dec inc dec jo sub dec inc pop sarb or or dec push dec mov cltd mov imul pop fs adc mov push cmpsl add sub es push xchg xchg mov add jne std or test insl jns mov fwait dec fildl ja push xor shrl mov mov lock repz test loopne adc cwtl out outsb dec push push mov aaa push cmp inc dec jbe xlat mov adc out fiadd mov sahf add fistpll add add add add lock pusha or je inc sub pop adc pop dec pop lret cwtl push lods out je xchg add jl xor fnstenv xor dec mov mov rolb cs dec xor loopne arpl je js test rorl jbe dec pop mov pop dec push imul inc and push clc adc push lcall cmpsb push das (bad) push nop adc and mov imul push push add les sbb xor daa add add addr16 jno dec pop or push ljmp movsb or loope adc (bad) mov insb sub icebp push sbb adc jg add pusha jg shrb loopne xor fs and lcall imul xor mov (bad) cli jp mov jg and add lea outsb cmp sub add iret and add movsb mov (bad) fsubs adc add test adc jmp idivb and dec pop (bad) and cs das int3 (bad) or iret push push push mov enter mov add add push popa mov inc (bad) mov pop xchg xlat popa add rorb push adc xor decl inc mov pop or je xchg or jo jnp xor pop or pusha push and repz frstor push loopne push cmp aas iret pop sbb js neg mov adc push push repz mov lock push cmp repz adc adc xor out cmp repz repz sahf test jle pop sbb jo rcrl push inc fdivrs pop insb sub push or out out mov jle push adc cmp repz mov fdivp cmp or movsb add (bad) out jns jnp push in pop pop sbb xchg neg movsl je test cmp aam mov push mov push mov repz jle push push add repz xchg (bad) xor int3 vmwrite repz lods push push xchg push in jle pop push push pushf out sahf out arpl fcompl cmp cs jno dec icebp push cld add push adc or repz pushl ret icebp sahf idivl add addl pop lcall xchg jns iret repz cmp imul out jns mov bnd repz shll mov pushl idivl leave lret stos add sahf test ljmp leave lcall into repz adc jmp inc pushl cmp jae (bad) cmpsl cs out cmpsb pop dec dec daa iret jae out pop sbb cmp (bad) imul sub dec idiv inc pushf dec sahf push pop ja ja out into jmp scas fistpll cmp xchg lcall daa iret jae sahf jg fisubr mov lahf (bad) dec pop xor incb inc mov loope jb pop jb mov test leave test jmp test lds pop jb movsl in and jb aad test cmc int test in popf pop enter mov xchg ret mov jecxz roll and mov enter lret stos jmp enter fstpt sti (bad) jb pop jb out pop jb pop xlat mov enter iret scas pop enter lahf fbld (bad) jle xchg lods sahf pop push add add adc mov push add add ds outsb adc adc (bad) sbb and add rep jecxz push add add sub pop push popa cmpsb rclb add xor and rol popa (bad) dec inc movsl add xchg data16 cwtl fisubrl inc dec out push sbb setle outsb or les clc sbb jge das cmpsl imul clc data16 or sub (bad) das fdivl xor sub fstpt and shll pop sbb addr16 xchg sbb sub xor (bad) orb les loopne outsl sub sbb cmpb ss es jae dec dec add push cmp xchg out scas inc aas xor roll cmp xor mov or or and add imul mov mov xchg dec lea jbe (bad) or loopne push jecxz stos and xchg mov inc mov (bad) mov cmp xor dec shrb or jo inc dec insb jns out dec in sub mov fs xacquire les insb mov add inc or jns mov fiadd pop add adc sarb xor adc pop xor and pop adc cltd mov adc adc add or lahf (bad) pop mov xor fidiv dec (bad) lea adc inc fidivl pop pop or mov push xchg outsb out inc add dec js ficomp les pusha push push call xor or and fbstp sub jne fcomps dec jbe lret add and into cmp jne add enter lods pop jp addl loopne push daa pop jnp arpl adc es daa daa adc push cmpsb jle add xlat cmc pop pop pop or xchg push xor push stos and cmp add inc add (bad) push dec add or into mov xchg push xchg add repz out (bad) push add iret repz sbb sbb sbb dec dec cmp sbb sub push out mov (bad) lcall (bad) hlt push xor xchg fs xor fdivrl jmp sar (bad) (bad) call mov sub mov sbb dec jno repz (bad) (bad) (bad) incl in insl push mov hlt movl imul std in leave gs (bad) (bad) decl fldcw arpl or pop adc in pusha aad jno (bad) (bad) (bad) jmp inc aam dec std test movsl cli test xor (bad) leave mov (bad) (bad) (bad) ljmp pop fild or shrl cmp ficom push xlat enter (bad) (bad) (bad) (bad) mov and mov cltd xchg mov mov or or and or (bad) (bad) pushl adc stos sbb data16 inc fdivl jno add aad cld (bad) (bad) out mov mov movsl in lahf xor mov js loop test xlat (bad) (bad) call mov cmp fs add hlt push imul (bad) call sbb xor mov push insb jnp add (bad) hlt or (bad) (bad) (bad) (bad) (bad) fnstenv adc mov mov bound ficoml gs aam pop (bad) (bad) lock mov into pop cmp mov aam movsl fisttp xchg fdivr (bad) ljmp (bad) shll jmp outsb xor mov sarb add in (bad) (bad) lcall or cmp add daa adc or and (bad) (bad) (bad) incl mov popa into push stc ficomp leave fldcw and xlat (bad) pop cmp jg decl mov (bad) cmpl or mov lcall (bad) cmp ljmp fildl push fdivl (bad) lcall jecxz cmp push or or push in decl xchg daa scas pop (bad) (bad) (bad) jg sahf pop jge xchg (bad) shlb add inc push imul xorb (bad) (bad) (bad) lcall out imul aam loopne rorl int3 dec frstor fistpll mov mov (bad) (bad) call aad mov call xchg shll push repnz addr16 cmpsb fldl mov (bad) (bad) (bad) aas dec ss fisubrl or scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov (bad) (bad) pushl jns imul andl shrb ss push xchg ja int3 add mov (bad) (bad) jmp das es lds or sub mov cmpsl call ret (bad) mov sahf fcos (bad) (bad) ljmp ret es pushf mov insl add ss jmp addr16 (bad) (bad) mov sub dec mov loop sub or mov xchg or call in out fdivrl fisttpl aam roll clc mov push int mov fcomip (bad) mov outsl ja mov out cli jo (bad) lret pop or adc (bad) mov (bad) scas (bad) clc sar imul push js or push addl (bad) (bad) inc mov cmp cmpsl notl pusha rorb imul push scas fcompl fldenv fild (bad) (bad) push cmp aaa push scas mov fidivr mov jmp repnz lret mov (bad) (bad) (bad) jmp sarb sub push mov jp mov dec popa les sbb xchg sub outsl sub mov or sbb sbb (bad) outsl jne add sbb push sub dec mov pop push (bad) xchg (bad) (bad) (bad) incl or ret call hlt jecxz dec mov dec jle mov sub (bad) (bad) (bad) lcall dec adc fsts jo js inc out popa push xlat scas cs mov xlat mov sbb test (bad) (bad) incl (bad) sbb sub test sbb insb (bad) fistpll inc aam push (bad) (bad) (bad) lcall mov adc mov popa ja mov out repz gs (bad) push (bad) scas (bad) jmp inc inc sub imul jo scas imul out pop sub sub pop or (bad) ljmp sbb repz fbstp push jo add call and sub xchg sbb xor pop nop sti mov lahf pop mov and (bad) jns (bad) (bad) push jae dec call inc cmp ficomp dec jns inc jle jmp (bad) sbb (bad) (bad) (bad) out adc push lea fnstcw mov dec hlt mov or decb adc add pop dec xor inc mov outsb lret push pop mov loopne decl xchg push xchg xchg push cwtl xlat ficom test loope xchg lret (bad) (bad) call les jb out imul push inc lahf test pop adc push sbb adc cmc decl and inc out and cmp dec mov fildll int3 cmpsl xor mov lods out sarb mov adc insb mov xchg adc jle push jns das mov and je or xor mov dec push jo gs out jle (bad) repz mov xchg rcl inc std (bad) (bad) cmp mov js mov test cwtl (bad) (bad) jg test mov mov scas adc out pop push insb hlt inc int fldcw (bad) (bad) decl pop repz inc ljmp ja inc xlat ss push out mov mov movsl (bad) (bad) (bad) incl inc jno mov ja (bad) insb pop push dec sub or sub (bad) (bad) fstpl adc cwtl mov scas mov (bad) (bad) call push mov push (bad) push hlt out les fdecstp jmp lea (bad) jg fild pushf sub sub dec jo outsl sbb sub loope (bad) (bad) jg fisub lds push call dec in mov movsb ret addr16 test es (bad) (bad) jmp (bad) lahf fdivrp cmp repz jnp call cmp mov or (bad) (bad) cmp icebp adc sub jae xor mov jo cmc shrb addl fcomip das cli mov arpl lods (bad) loope int3 mov stc dec xlat loopne adc scas or lea mov test and pop insb cmp les adc sub dec (bad) (bad) (bad) jmp test jns or cmp popf cmpsl push mov xchg adc (bad) (bad) (bad) jmp pop xor cltd bound fcoms into pop dec loope push jle push xchg sub int3 bound mov sub xchg call mov pop lods ret outsb xchg dec insb das mov adc and cmp sub adc jns (bad) (bad) cmp movsl dec mov movsb daa sub repnz (bad) (bad) (bad) mov out mov shlb es xchg aas mov adc (bad) mov sar mov gs pop jle aaa or jbe dec divl outsl cmc push lahf adc jb and pushl push add test pop mov jle fsubrl push mov outsl (bad) (bad) mov mov cmp (bad) test or stc sbb (bad) incl cmp es leave in push ja pop sub (bad) (bad) decl das sbb fildll sbb repnz adc dec jae adc (bad) (bad) lcall adc jp mov pop loopne dec cmp sub cmp clc or cmp (bad) (bad) (bad) out inc aas or cmp push add outsl jge aaa ss fidivl test push xor imul fldl adc nop in and (bad) mov (bad) (bad) ljmp fsubs leave pop sub and mov and mov sub fidivr sub cld sub ds sbb sub lcall das rorb (bad) (bad) mov cmp xor jb and push jbe icebp pop je fwait aad js (bad) (bad) (bad) decl jg or jl je jns push inc js mov (bad) jnp cs scas mov subb cmp nop es xchg decl ja add push or bound stos sub (bad) cmc (bad) (bad) (bad) jmp gs fs imul dec pop mov (bad) decl push outsb jns dec cld arpl dec lret or xchg mov dec movsl fstpl (bad) lcall push inc (bad) dec inc inc shll inc xor inc jae cmovo out inc sbb adc icebp push add push ds mov mov (bad) (bad) inc clc push mov adc push aad mov pop fist pop xchg pop mov movsb pop (bad) (bad) (bad) cmp jmp add sub outsl pop insl das lods pop sbbb loope jno loopne iret mov (bad) (bad) (bad) (bad) fldenv cmp imul out addr16 in dec es mov out push sahf mov jmp pusha in in das call mov stos jmp pop imul loope (bad) mov insb xchg (bad) test adc cli sbb sti inc les (bad) (bad) mov jg ret cmp inc icebp xchg inc or (bad) (bad) (bad) jmp xchg (bad) (bad) int dec mulb js push aaa mov fidivrl jecxz fstpt (bad) decl and fucom dec aaa fnop or xlat out test fsubr aam mov aad movsb (bad) sar (bad) (bad) pushl into mov rcrl and adc pop lds xchg pushf les fcmovb dec inc sbb int3 push push ret (bad) (bad) sti cmp ret mov call dec lret lahf lds adc jg inc test inc int3 inc insl xchg sbb ror mov ljmp cld insl nop cs sub pushf cmpsb xchg stos push fs repnz lds mov sahf xchg adc pushf mov outsl mov adc xor (bad) (bad) lcall xor dec mov or (bad) in popf orb (bad) jg pusha andb mov push pop (bad) out (bad) (bad) pushl faddl arpl pop xchg shl test into (bad) (bad) (bad) incl stos stc outsb movsb stos jl jmp dec adc scas adc lods sbb xor call movsb inc aas mov les clc mov stos std jl popf xchg mov mov sbb mov (bad) (bad) (bad) jmp (bad) mov fcmovne mov mov mov cmovns push dec adc (bad) push push mov mov fidivr pop pop mov jmp ret (bad) jmp mov out scas mov push xchg bound pop imul xor dec or loopne outsl add (bad) dec fstp (bad) (bad) (bad) ljmp xor loopne adc lahf push sbb xor cli jno lods inc enter lods cmpsl (bad) (bad) (bad) inc addr16 or outsl into int jg xchg adc mov aas sahf rcrb xchg call (bad) (bad) (bad) pushl lods and mov inc jp ds xor mov cmp rolb xchg or decl loop xchg xchg loopne ljmp cmp pop dec (bad) iret aas sub xchg in jecxz pop push or mov sub sbb (bad) les and loop outsl dec jg or (bad) jge aad (bad) (bad) decl lahf xor lds xchg lahf mov inc std mov pop fwait or cmp rclb (bad) lcall mov sbb mov jbe push lret pop jg test push (bad) jo leave (bad) (bad) lcall pop sbb pop mov adc shl (bad) fcomip ja push das lret jnp dec ja prefetchw or jae movl (bad) (bad) mov inc nop call cld jle data16 sbb ficoml daa mov mov out mov mov decl sbb cmp sub pop outsb xchg add cmp inc mov (bad) (bad) (bad) aas das xchg in pop xchg sub mov pop clc or test push mov fist inc addr16 jg call fwait push add in mov dec leave xor inc arpl (bad) (bad) stc movl jns aaa pop in push loope inc call cwtl call scas (bad) jg call out aaa push clc inc (bad) add daa dec and jmp cltd scas xlat loopne lret (bad) jg pushl cmp in mov inc aad in ljmp bound inc xchg out (bad) (bad) (bad) pushl enter jo sahf in sub push in cmp pop cmp outsb xor or (bad) (bad) (bad) xchg movsb loope mov sub dec dec cmc scas repz xor (bad) (bad) (bad) js sub dec leave hlt js scas dec rol std shlb pop xchg idivl sub fcomip mov and sbb pusha jle cmc mov (bad) out mov (bad) (bad) (bad) ficomp mov ret mov flds push ljmp xor (bad) and (bad) (bad) (bad) ljmp mov roll outsb mov push or adc ljmp into movsl adc (bad) (bad) (bad) inc bswap fsts xchg test lods sub sbb and xorb fcoms add (bad) scas iret jb leave (bad) (bad) (bad) pushl and movsb push inc xchg sbb test pop adc out dec jbe mov into lea inc fsubr inc call std (bad) clc fs jns stc xor xchg inc fidivl jmp (bad) stc mov mov (bad) (bad) decl lock imul ss test (bad) cs mov call std pushl mov loope into cs out add addl (bad) (bad) (bad) lcall pop jmp icebp and (bad) insb inc popa ds into mov iret test jg pop es (bad) (bad) (bad) ljmp mov (bad) out lret (bad) sbb loope push adc cmpl adc (bad) ljmp cmp jle cmp pushf in adc add sbb cmpsl push (bad) (bad) (bad) jmp ret ds outsl sub mov add xchg out mov dec or sbb cld (bad) (bad) call inc sub neg jmp pop test or xchg popa mov fdivrp (bad) out sub pop xor cltd or pop insl les jo hlt (bad) (bad) jmp xor push fisttpl movsb loopne jmp mov mov sub jl out (bad) (bad) (bad) mov sbb fs and repz inc ficomp fcmovbe jge fucom jmp (bad) (bad) mov sub push imul mov in adc pop dec (bad) (bad) (bad) jmp insb fsqrt (bad) arpl outsb and dec imul in addr16 cmp in (bad) (bad) (bad) decl aam rorb mov xor mov insb fstpt stc inc xor insb jecxz (bad) (bad) incl pop jne (bad) or pop fnstenv lods push mov enter mov (bad) call and and mov movsl movaps mov (bad) mov mov or and outsl jl pop push sbb imul faddl add jno cwtl shlb mov jno cmc or mov lahf mov xor leave (bad) (bad) fist add or sbb or sub out or jmp add push hlt sbb popa bound pop dec (bad) (bad) ljmp in sbb movsl jnp or (bad) cmc pinsrw fld adc pop and ljmp sbb mov jl sbb sti aam gs mov test into mov mov (bad) (bad) (bad) fbld xlat movsb rol insl rcl hlt sti inc imul cld lods mov pusha mov pop incl in jle or (bad) (bad) incl inc stos mov or xchg mov and mov aam (bad) (bad) (bad) dec popa in pop fdivrp push sub leave cwtl mov cwtl and xlat test pop mov pop cs xorl mov andl mov loop mov lcall ja stos (bad) ljmp jae push and or xchg cmp pop test push (bad) (bad) (bad) dec or add mov setae mov push mull (bad) (bad) call andb sbb outsb imul (bad) aam jbe shrl loopne fidivrl fisttpll stc mov fildll mov mov aad (bad) mov push fadd les incl cld fcomip push sarl addr16 mov fisttpll ss fmuls add dec add mov (bad) (bad) fbld ret test fist outsb mov inc imul sbbw outsl shlb int3 or xchg mov add mov lds (bad) mov sub add xlat jmp sub sahf mov scas sbb (bad) (bad) pushl jne mov or ss jb test add xchg mov incl jnp sub xchg rorb repnz mov (bad) (bad) (bad) (bad) fbld xchg rcl icebp aam inc push fiaddl int mov ja sbb inc ja pop out punpckhdq push cmp adc or (bad) (bad) ljmp popa imul push insb iret inc mov or adcl (bad) (bad) (bad) inc cmpsl addr16 shlb (bad) dec imul scas shrl (bad) pop faddl or fdivrs (bad) (bad) (bad) push test mov iret jg mov jmp lret mov xchg xor mov cmpsb mov xlat push xchg push ficom addr16 (bad) (bad) jg jp les mov sub xchg mov mov mov sub hlt call sbb xor bound lods lds (bad) incl pop cmpsl xchg xchg (bad) enter rol mov mov hlt fxch lods mov or scas jle adc decl subl dec ret push fldenv (bad) (bad) lcall jo popa out inc xchg cs xlat push aaa mov adc cwtl mov add sbb (bad) (bad) (bad) lcall mov cli fldt ja pop ljmp aam aas (bad) pop push sahf xchg test mov jmp cmpsl mov and call shl ret fiadd gs scas stos inc (bad) (bad) (bad) incl jmp imul jbe std imul sub or or sbb insl fild repz (bad) ljmp in jo jno imul sub mull sbb jne pop mov call lahf mov mov cmp out cmp jns push dec push (bad) (bad) (bad) jg sbb fisubr cmp jns add ret xchg push sbb xchg adc mov jmp cmp ret lds or xchg into pop int3 add inc xlat xor fist outsb cli bound pop push mov pushl out (bad) xchg xchg push xchg (bad) cwtl push (bad) int3 test (bad) cmc cli (bad) (bad) (bad) dec xchg jb xlat pop imul inc push mov pop dec test unpckhps sbb jo cmp incb gs imul and add lahf mov xor std pusha lods and scas mov shr lahf adc xchg mov leave dec (bad) (bad) (bad) jmp rclb ljmp ja das aas jns ss mov or je adc xor jmp mov fidiv jle xor out (bad) (bad) std ret rclb (bad) dec mov cli lcall js cmpsl cmp sbbl or ja clc scas lret mov loopne insb push insl fnstcw int ret (bad) (bad) (bad) push pop adc inc and shrl ja adcb out movsl add test inc mov push ja cwtl pop insb (bad) adc ss daa mov pushf add mov scas bound (bad) lds (bad) out hlt push out xchg (bad) call rclb pop mov test xor imul lret (bad) jo lods clc pop sbb inc sub data16 loope (bad) push dec nop cld arpl lods mov in test (bad) (bad) incl es scas mov (bad) repz cmp call imul (bad) (bad) lcall cmp sbb mov pop adc xor xor dec jo mov imul jp dec (bad) incl arpl ja cli xlat dec shl out stc add xlat (bad) (bad) fist xchg adc lea or mov pop inc sbb insb je aas (bad) (bad) (bad) inc sub push test cwtl inc jle test rorb cmpl hlt pop mov cmpsl (bad) (bad) (bad) lcall in add cld dec xor bound into jns fmuls dec pop push cli jle jnp sub xchg (bad) int3 in sub xchg mov xchg push mov repz inc gs (bad) (bad) inc lods insb dec xchg outsb jne mov call or push aas gs add in mov sbb mov daa repnz mov mov (bad) (bad) (bad) (bad) out and loope or mov jle shlb imul inc cmp ljmp (bad) pop std ja fsubl push jle hlt out push or (bad) dec cmp or lcall push mov int3 xor ret add push jp mov push lret fdivr (bad) (bad) decl push test adc psrlw (bad) or push out loope sbb fs xchg push or call loopne sub sbb mov inc pop mov sbb (bad) ljmp or stos ffreep sbb cmc adc cwtl call mov cmpsb (bad) lcall cmp adc (bad) xor push mov in cmp (bad) (bad) decl loopne (bad) sub cmp xchg mov or mov xchg cmp (bad) (bad) (bad) lcall pop aaa pushf jge xor sbb test xchg aad xor imul adc frstor das mov mov cmpsl daa aam es dec dec and (bad) jnp out and and adc sub pusha inc sub or jno hlt sub jbe (bad) (bad) inc cs enter mov (bad) jno out jae pop scas jb xor jbe dec (bad) (bad) (bad) ljmp je icebp jb aad inc jle fdivrl dec mov jge or jl bound jns je js push xlat ja call jnp lret mov xchg cli fisub cld (bad) mov xchg in pop push repz arpl (bad) pushl popa sub push cmpsb xlat aam fs mov dec xlat lret add scas cli and mov dec fs (bad) lcall fisub dec sbb lret dec pop mov dec cwtl frstor inc push lock inc inc dec testb cli jmp inc int inc inc addps dec out (bad) (bad) (bad) decl push xor addr16 jne ds mov or rorb adc push mov jle pop loop call in xchg xchg (bad) jmp xor sub add lods das insl loope ja pushl jno loop iret out jecxz movsl movsb cmp pop out fcos (bad) (bad) mov in or cmp in paddsb hlt popa call in mov (bad) (bad) call jmp ss imul rcl (bad) (bad) xchg insb sahf call test sti fdivrs (bad) (bad) lcall stc sahf les pop scas jne add dec bnd lock adc or cmc lret sub (bad) (bad) jmp (bad) dec dec fnstcw pusha fdivrs mov fstpt jecxz fidiv mov (bad) (bad) decl fdivl dec in imul test fdivs shlb add mov pushl shl jo shlb pop lds adc pushf xchg daa (bad) fisubrl jle sbb ret int3 ret xchg cmp loop (bad) sti rcl mov lret dec scas test pop lahf enter or icebp int3 inc ljmp int insl inc iret rcl into add nop insl cld ja sub xchg (bad) (bad) (bad) jmp ds xchg fs stos xchg and repnz loopne jo xbegin pushf cmp (bad) decl jns cwtl mov and add dec lcall xor pop pop mov mov sbbb (bad) fildll (bad) mov and (bad) pop push mov sbb int3 push test (bad) (bad) jmp cmp loop mov stos data16 stos movsb outsb stc scas jmp jl sub (bad) (bad) call dec lods outsl lods adc sbbl movsb jne jbe mov inc mov cmp (bad) (bad) incl mov mov jae mov sbb mov cmpsl mov mov fisttpl (bad) mov dec punpckldq xlat and adc dec pop mov xchg pushf xor loopne mov cwtl xor (bad) (bad) (bad) (bad) mov stos or mov mov out (bad) bound xor xlat cmp fwait jl jge dec mov loopne xlat add mov (bad) (bad) (bad) fcomp loopne ja pop arpl push push sbb call adc jno jnp enter cmpsb (bad) jmp inc int outsl es lods jg sub mov xchg rcrb dec call inc mov and xor pop or addr16 xchg shrb in (bad) (bad) call imul in xchg xchg fnstsw loopne iret (bad) dec pop loop (bad) (bad) (bad) (bad) aas ljmp jecxz in fmuls lock mov pop and sub sahf push jg ret decl dec outsl test or rcrb lahf rorb (bad) (bad) (bad) jmp mov lahf xchg sbb daa sub mov inc and (bad) xchg test call cmp ljmp nop mov mov iret push lret (bad) out fidivrl loope ret pusha test jo out pop mov test fistpll ret imul push ret ja imul setl (bad) (bad) (bad) (bad) ljmp fnstcw cwtl cmc cld sar nop out push jle fidivl sbb mov inc sub inc sbb mov cmp jg sarb xchg outsb pop hlt cmp testl call mov xchg pop in mov pusha push or pop xor dec test cmpsb icebp iret mov inc cs (bad) (bad) (bad) mov addr16 daa jo jno dec mov (bad) xorb inc out imul pushf roll (bad) stc (bad) ss jb pop aaa lret pop loope scas dec push incl call mov aaa jg ja out push add inc clc inc daa popf and pop jle js mov xlat scas ljmp clc pushl pop mov in pop mov push in pop inc pop mov in sbb bound and inc loope lcall jo mov nop push stc mov in pop cmp cmp xor or cmp movsb add sub call loopne scas cmc test and mov mov sbb cld (bad) decl dec scas cs add push movsw notl cmp and (bad) push repnz imul cmc xlat jle out rorl ret push jp jmp add rolb mov xor jg (bad) das rclb and stc popa lcall add fsubrs pop loopne adc dec lcall xchg (bad) loope xchg adc (bad) (bad) (bad) dec sub inc andb jne jp adc scas dec jae fwait push movsb icebp (bad) (bad) (bad) jmp out sbb test jbe out push into icebp mov inc lea call mov xchg push xor es jmp fdivs inc mov bound ljmp cmp push mov xchg xchg cltd xor es mov cld mov adc (bad) (bad) (bad) call ja ss adc out mov loopne jbe pop notb dec jmp aaa add ds insb (bad) push and ds inc test jle (bad) (bad) (bad) ljmp cmp es jl mov pop sbb mov repz in test (bad) (bad) (bad) jns adc imul mov jle cmp cltd in (bad) ljmp push outsb xchg cmpsl fidivl sub fisubr sarl lock out (bad) (bad) call sbb ds sti outsb pop sub push addr16 cmpsb int3 mov pop je into inc adc mov push icebp andl cs add adc push lock add or or fistpll cmp or xor cmp or stos push sub push stc aas jns ss pop push or mov dec out sahf out sub insb in sahf out sahf sbb pop fdivrl jns out jl add out and jns adc jns out jb or out sub jns sbb jns out jp push xchg jns out cmpsb data16 out sahf push xchg push (bad) ss sahf out jbe push mov jns out cs outsb out sahf out sahf push sahf pop fidivr mov jle add out and jns adc repz jns cwtl push or dec leave sub repz cltd pop fnstcw repz repz iret repz inc lds iret repz xchg push aad repz repz cmc or iret dec int lods insl in cmp repz popf pop fnstsw mov push sahf out dec add sarl out (bad) xor mov out sahf out jae repz mov sahf out lret sub stos stos out sahf out imul sbb fwait fwait pop pop fstpt out fstpt cmp out jnp sti pop sahf out sahf pop xchg sahf out (bad) daa daa cmpsl cmpsl out sahf out addr16 pop sahf out sahf pop xchg xchg push push xlat jns out xlat aaa aaa mov out sahf out ja (bad) setle jns jg jns out iret das das scas scas out sahf out outsl out out pop sahf out sahf pop lahf lahf pop pop fistpll out fistpll aas mov out jg call iret repz inc push and push xor inc cmp lret sub cmp repz iret repz add and adc repz cmp je (bad) addl (bad) repz ret and mov repz push or out sahf out adc sbb lcall push push jns out push push push add sahf xlat popf out sbb adc arpl jns adc lock pop pop adc add and repnz in pop or add sub mov sub aas ret stos adc adc adc push pop sbb xchg mov inc sbb dec cs cs popa test pop cmp or add (bad) jb repnz adc popa and jb adc lahf scas mov (bad) adc jno sbb aas mov or out or adc out pop ja and sub cmp push pusha jo mov shl add add push fisttp sbb jbe fnstsw sarb pop pusha mov in (bad) adc imul xchg jecxz adc or adc dec arpl sbb ds pop sbbl fcoms call xchg mov and jne cli gs adc into outsb or pop push adc add and (bad) jo sbb ss mov lea aas xor pop cs sub pop mov aas in (bad) jg imul or enter bound popf xchg ljmp push xchg sarb mov std incl mov test fdivrs stc decl jae cmp cmp fdivrp popa mov aas je lds xchg lds enter cmp loope and push decb (bad) mov repz in das (bad) pushl aas xor cld cltd jns lret cmp sahf mov (bad) pushl pop ja xchg int3 xor aas inc pop adc aas loope (bad) sub jmp xchg aas mov fwait ljmp idivb cmp pushf nop jg dec popf mov mov in mov mov jbe jne inc gs mov imul out je sub mov (bad) push inc lahf (bad) call pusha xchg aas aad pop push pop sbb (bad) iret xchg (bad) (bad) pushl bound push das pop pcmpgtw shll mov inc idivb inc lahf enter aaa jg mov (bad) aas mov jg mov mov mov (bad) mov scas jg mov mov mov (bad) aas mov jg mov mov mov (bad) aas mov jg mov fwait lock jg sbb mov push jg aas pushl dec xchg imul aas jmp aas jg adc (bad) mov (bad) jg fs mov mov push fdivrs mov jg mov jmp jno pop push jg inc mov lock jle add mov jg add ret bound (bad) jg sbb add call sub jg test and jg or inc or jg jmp sub jg adc jg dec lods adc or ljmp adc movsl dec loopne push outsl sub fist xor push movsl jecxz (bad) ds cli jp,pt decl sbb nop cmp and mov arpl or insl xor leave in in pop and mov cmpb enter arpl scas xor inc adc pop push mov ret incl jg add (bad) pop adc add sbb dec mov jg das lods out mov mov nop cwtl int out dec test mov iret enter out rcr jg push lock out lods clc pop adc and inc dec lods out push pusha jo nop aam sahf out mov faddp mov push inc pusha aam sahf out mov out fisub push inc pusha andb loopne inc push add jp aam inc push add fisubr fiadd add mov rcl sarb enter sbbb add push (bad) pand push sbb or push push sub aad and pop daa push je push inc push pop sub dec out inc inc fadds dec sub outsl fidivr add inc ljmp dec es in enter push pushf jne outsb inc mov mov arpl inc mov jle mov jns add pop sbb fisttpll inc popa push inc ret xor dec movsl add xchg inc mov loopne mov inc inc popa and dec shrb or cmp inc push push pop add dec shrb pop push movsb lock sbb and push cmp pop jbe adc mov jle test gs dec test pop dec push es sbb fstpt push je mov mov fldt outsl (bad) push ljmp mov es int3 jmp je out jnp ss push cmp inc movsl push jno out in insl enter mov add cwtl in xchg pop jb xor jo in adc imul imul call shrb jnp sub (bad) das int3 out nopl jb inc xchg push add shl pushf pushf pushf int scas xadd or fsubl inc fsubr pop movsb (bad) cmpb jnp pop ds jmp lods (bad) cmp cmpb and repnz add enter push dec in jmp cltd enter add dec pop and call shr lods xchg andb fucomi cmp sbb hlt out shr in leave lods mov addr16 das int pop lret and psrad scas rcrl mov (bad) rolb jbe pop and add (bad) jb jb lods rorb in cmp nopl add in jbe enter scas inc xchg add in in in pusha pop inc subb in sti jecxz loop das pop mov fucomi jbe outsl pop cmpl mov xchg xchg cmp loopne outsb daa addr16 mov sahf rorb jae pop dec xor jnp mov mul pavgw inc mov aas fucomi in orl pop xchg mov xchg xor loopne mov xchg in inc fneni(8087 dec das mov (bad) jae popf pushf fsubrl push outsl inc xor add pusha mov aam pop xor shlb std xchg div flds sahf cmp mov xor adc fs aas inc push xchg xchg bound mov xlat pop (bad) out dec xchg dec pop mov jo cmp pop sbbb lods aas or (bad) std (bad) sti lret orl mov in das xchg xchg pop dec pop test aas push (bad) (bad) incb cs adc push clc dec push aas test xor mov pusha and inc (bad) idiv out call mov es call loope jb aas pop mov mov rorb xlat mov aas push add xor (bad) fadd aas dec je stos mov jg lcall scas daa jp ret aas mov gs mov dec push jbe pop aas (bad) mov lahf ret dec push pusha nop fs rol push lds js movsb out (bad) pop (bad) aas clc out pop ljmp dec enter mov rcrl mov push mov aas adc push rorl add iret lret xchg mov (bad) mov adc or mov (bad) (bad) stc dec int sub std jg mov sub aas repnz jle jecxz mov (bad) (bad) aaa push data16 mov push ss js aas add or icebp cmp mov jle inc nopl ja lods mov stc add adc movsl inc sarb pop aam call xchg lods push (bad) push loopne push ds cmc xor push xchg mov fdivp aaa dec clc sti jecxz rcll dec pop pop inc test fdivrp sti dec sbb fwait inc push rcrb mov add int adc pop sub mov cmpl addb ljmp lahf dec jae jle (bad) aas les and mov out xchg daa loop clc cmpl dec xor xlat pop outsb (bad) xor mov mov fdivrs jbe lret add cmp fbstp push call rcrl fnstcw addr16 mul ds std sahf mov (bad) mov or xor pop mov fnstenv dec jle mov mov nop xor sarb sti (bad) ds gs fstpt pusha pop sahf or dec pop js jle push and or imul outsb mov incb inc xor push aaa loop pop add and cltd fnstsw add call push (bad) mov or in sub loop lock aas loope mov pop jg in or add inc inc (bad) mov cli adc sub je aaa cli negb xchg flds sahf insb std push popf imul cmp jns test dec out pop daa ds pop (bad) notb sbbb or js mov pop iret push push rcrl push (bad) pop jg adc push pop push xorb rolb dec aaa jg insl mov (bad) inc rcl sbb lret je aaa (bad) int addb pop pop push and push pop add insb ljmp mov jno add sti add push sub pop mov push mov xor sahf xor mov cmc fwait mov mov adc fistl insl mov lcall outsb push push and push cmp jg ljmp or sbb ds and lea and outsb xor enter fistpll add inc aaa inc lahf div xor inc or mov inc inc stos out lret (bad) mov pop sub push call fildll jb mov (bad) incb xchg (bad) (bad) mov dec push aas sahf out mov divb cltd imul out xor sbb lahf idiv mov call mov insl repz and push xor lcall jg jnp mov call pop push in popf sarl push jg repz mov sub xor or mov outsl (bad) xor aaa xor xchg mov or jle outsl mov (bad) shlb mov (bad) xor stos (bad) sti lea push and aas cmp sti sarb lods sub in mov push mov movl push inc in enter clc incl stos pop iret mov jbe cmp xchg mov ss std push ljmp push lods int or (bad) mov ds cmp xchg in cmc add push loopne sbb cmp daa cmp es (bad) std (bad) sti pop jmp mov mov outsb xchg inc jle loop jge mov add push arpl inc ds or pop repnz and aad mov inc push jg mov out (bad) push insl cmpb out lcall inc mov pusha xor mov and ljmp and aaa or incl hlt sahf jo xchg mov mov mov mov inc push loopne push stc ret aaa (bad) mov mov pusha je repz jecxz xor mov push mov mov mov in sar jg mov cwtl fimul push pop or xorl mov xchg xchg mov (bad) mov pop in js mov sbb cli (bad) mov mov stos lret adc mov mov daa aaa (bad) stc add xchg aam (bad) stos idivl cmp mov clc or push add stos xor ljmp pop adc inc jmp mov xchg sub mov dec sbb pop iret jne mov sbbl mov dec pop fdivr test mov int3 scas jmp (bad) hlt (bad) jg push inc lods mov cmp cmp stos mov data16 out clc push lahf (bad) sar cmpsl sahf push scas repnz xor (bad) jg push test jg mov inc inc sub movsl dec (bad) mov pop or inc pop shr sbb sub jp cmc jmp (bad) jge xchg mov icebp add or aas jecxz mov lods mov pop sub mov (bad) jmp dec fiadd js les ja jmp mov (bad) inc (bad) out pushf pushf pushf int3 paddd cld sti pushf pushf pushf pushf cli stc clc negl hlt repz pushf pushf pushf repnz lock pushf pushf pushf pushf out in in jmp pushf pushf pushf ljmp pushf out in pushf pushf pushf pushf loop loopne pushf pushf pushf pushf (bad) (bad) pushf pushf pushf pushf fcmovu fcom pushf pushf pushf pushf (bad) aad rorl dec mov dec dec dec dec into int lret dec dec dec dec lret (bad) dec dec dec dec mov ret cmp out adc rdpmc jae repnz inc aas (bad) daa daa daa push push push push daa daa daa daa or daa daa daa or or daa daa daa daa or or daa daa daa daa or or daa daa daa daa or or daa daa daa daa or or daa daa daa daa pop pop pop pop daa daa daa daa push push push push daa daa daa daa add daa daa daa add add daa daa daa daa add add daa daa daa daa add add pushf fsubl daa add inc add cmovo mov cmpb ljmp push and push popa xor or and xor cld sar xor sbb push or xor pop cmp mov aaa movsl inc aas xchg daa popa dec aas lret dec imul sub out pop bound xor leave cwtl push aas sub lods sub jp adc push aas mov dec test mov aas in adc xchg mov inc jo mov lcall mov cli (bad) hlt inc es or jg fild loopne (bad) out dec or fildll inc push clc jmp mulb sbb mov and (bad) cld jmp cli lahf push nop pop dec pusha xor aas xor cli pushl jle aam dec gs xor mov jmp inc divb sbb xor ja (bad) (bad) pop mov dec push mov mov imul mov fist (bad) mov andb (bad) mov xchg in int3 mov sar fnstsw (bad) jns stc insl aas ds jl cmp mov fwait imul adc mov sti incl outsb jo jp add or sub sti fistpl cmc push incb pusha loope xchg xchg jge pop add pop call cli mov aas mov fnstcw push fstp push jae mov (bad) out aad mov je sub lock (bad) push out in ja in (bad) mov mov push enter pop in xor xor or and jbe out adc test xor inc pop jg incl pop dec sbb stos ja jno inc orb gs xor pop or pop push pop mov push jns repz jg lds mov cmp adc and sub int fnstsw scas clc and fs pop roll ss jnp jg (bad) rcrb mov jl ja xor mov dec mov mov sub ja ficomp sahf and out fild jns jle jl les pop sbb jecxz or mov aas test mov pop mov sti sbb xor sbb dec pop lret cmp push cmp (bad) je int mov js dec push xor push and (bad) (bad) cld mov cmpl aaa ret and shll mov data16 call mov cld test inc (bad) fidivr sub and or fild adc jmp inc push fadds fwait mov call loope aam adc cmp cmp out mov outsl lock out hlt negl mov jecxz test cli repnz clc aad dec push clc rcr cld stc fwait jb jno out daa cmp jle iret mov cld nop push aaa pop daa aam test out aaa (bad) mov and xor aam inc lret in ret (bad) aas bound out (bad) repnz inc sbb fiadd aas daa stos xor stc repz imul mov jle incl pop int3 xchg lret mov mov aaa jle pushf inc iret push push gs insb cli sbb loopne aaa jg hlt (bad) cmc jne lret (bad) cld dec push mov cltd jl mov (bad) mov aam mov inc dec jbe cmc jg int3 shl je push daa movsl jno and roll std adc mov int push stos fwait jbe and dec insb mov enter addl inc cwtl data16 jno jle (bad) aaa test cld int sub aaa mov add lcall (bad) mov loope sub lea jbe dec ror cld mov enter jo call fwait mov test xor int3 jp outsl out fucom or mov push jo add psubq push xchg or pop stc int dec loopne inc xor das xor sbb outsl mov adc or mov xor outsb pop adc inc mov inc xchg popa xor add ds clc ljmp and rclb mov (bad) mov mov cld sub insb mov repnz push push es sbb push dec cltd dec call mov dec mov cmp test mov rcrl cld pop push movsl lock int and dec popa cmp fldcw sbb (bad) (bad) imul inc cmp dec mov jge sbb in and lea lcall fiadd jnp push mov (bad) mov adc sahf sbb loop gs mov inc fwait mov mov fs mov xor push ret push ljmp mov sbb pop inc stos fnstenv mov xor pop int dec (bad) clc (bad) jnp bound mov sbb cld cs jb jge sahf pop mov mov sahf jb idivl cmp xlat push xchg pusha mov movsl push jg jecxz mov out (bad) out pop (bad) jbe ljmp inc pop mov mov (bad) decl sbb pop mov mov pop mov iret clc mov sahf and pop ds lock sbbl fdivs mov adc sbb dec std mov push push mov insb std lock pop nop inc imul or lock add jl call push dec push add inc inc scas fs ljmp jmp mov into xor repz andb dec mov inc aaa (bad) (bad) mov (bad) dec mov mov dec pop das (bad) adc sarl cmc or out (bad) ffree push mov inc mov lea aas inc fldenv mov inc repnz stos js cmp sub ss ljmp icebp and mov add inc in lahf icebp mov dec xor pushf dec sub cmp pop adc adc mov fimul xchg dec mov sub push (bad) scas outsb aas inc inc adc xchg mov cmovo addb mov leave inc ds cmp jb fisttpll dec aaa outsl ss xor in jb xor cs outsb mov leave sub sub daa jb fisttpll dec and and and in jb push outsl sbb fcmovne sbb dec pop outsl push pop adc fmull adc outsl adc in jbe mov or pop outsb mov leave pop push dec add hlt dec dec add adc std punpckhwd mov stc mov fcmovnu rorb xor cmc repz repnz pushf fsubrl lock out in in jbe cmp call fucomi in jecxz loop dec fistp ficomp (bad) fnstenv cmp aad dec mov fucomi shrb pop iret into dec int3 popf pushf fsubrl lret pop leave enter cmp ret mov fucomi mov mov fsubrl mov jbe cmp scas scas dec mov fucomi lods outsl stos pop stos test cmpsl popf pushf fsubrl movsl pop movsb mov mov popf fwait dec mov fucomi lcall xchg sahf pushf fsubrl xchg pop xchg nop mov fucomi cmovo mov inc das mov outsb outsl xchg popf cmovo mov dec outsl cltd aas cwtl daa mov xchg cwtl xchg xchg das xchg xchg pushf fsubrl xchg outsl xchg aas xchg xchg mov nop nop das (bad) in cmp mov in in mov leave leave mov xchg daa daa daa test outsb das (bad) orl cmp inc jge mov fnsetpm(287 jl inc jnp jp jns daa daa daa jns ja fisttpll outsb das jbe je je cmp mov pand in inc jo outsl cmovo daa daa daa mov aas insb insb imul dec outsb das push push cmp fs jb cmp bound leave leave leave in inc popa aas pusha pop pop xchg xchg fcmovne pop pop das pop pop dec dec outsb mov outsl pop aas pop pop pop pushf fmull push push das push push jb jnp cmovo push mov in insl cmovo push cmovo outsb mov outsl dec aas dec dec dec pushf fmull dec dec das dec dec add mov dec outsl cmovo sub mov lcall call mov ds in push out pop sarl push mov mov ds (bad) pop dec dec sbb pop mov add mov mov dec es push addr16 lahf push daa jg ds ficoml (bad) out sub sti inc pop fadds std es stc dec js add (bad) out mov fidivr les dec or in ds jns mov scas cld mov ds subl mov sar mov or or mov inc hlt xchg scas cld mov sti inc pop pusha or cmc bound inc cwtl or (bad) dec nop cli (bad) mov mov pushl ds loope into fmuls int3 push add ds mov inc fist andb push es adc cld loopne,pt or mov jle inc (bad) ds insb xchg jb jg push rclb and xor mov cmp iret pop push decb jle mov mov and adc es add lea and pop xadd inc mov jg fistpll add inc jbe aaa stc xchg xor in inc add jno xlat ficomp loope insl sub adc and idiv idivl adc add and pusha push aas jmp cld loop or mov and aas xor cltd or xchg sbb jecxz jb hlt sti mov push sub orb sub dec addr16 mov pop jl inc or mov jb add aas fcomi jae int (bad) mov pop sub rclb inc push imul aad test pop and or ret outsl out (bad) out jo pusha jno pop dec and cld bnd not pop pushl pushl mov mov aam inc push aas iret jmp pop test inc sub (bad) daa push lock fisubr sarb cld data16 xor mov mov push push add outsb jnp jae outsl out pop fist nop out addr16 and lock or pop (bad) mov sahf cmp pop call mov cmp xorl adc aas or jg in mov sbb push leave pop dec xchg push lcall fwait rol jg mov rcrb and aas aam adc repnz jmp aas adc xorb sub add and ror ljmp mov or adc jl aaa pop and das aaa push (bad) out and pop mov dec sbb ds lock daa xor push adc sahf sub pop mov sub mov add aas mov mov (bad) mov test pusha ja push xor add cld sub inc out mov adc dec cmp adc aas and outsl scas cld shll (bad) add mov sub pop ds xor lods (bad) push stc clc sbb sbb (bad) mov int jg xor push bound add std int inc cmp lds cmpsl test (bad) or aas data16 inc sbb sub cmp (bad) movsl sbb fnstcw inc pop (bad) loop mov daa cmp sbb int3 jnp fisub dec pop loope mov (bad) jg orb pop iret rcrb movsl jmp add inc jo jae outsl push cld jnp scas and dec out sar stos out cmc or lret mov and mov jne and cmp inc xor push dec imul insb dec loopne cmc outsl mov jl mov aas dec push and mov jmp fcmove pop push (bad) out test fmuls xor add dec into dec push clc int lcall aas or daa mov push mov inc scas mov jbe add jle or cli inc pop jle int3 fnstsw lcall sub mov aad (bad) cmp push or std out fist aas jmp rorl scas sub dec mov cld aas mov xor shrb cwtl push divl push (bad) fcmove and xor lods mov adc jo in xor push nop and fucomip (bad) aad aas mov and lahf or push push repz adc out (bad) out push inc cs jne inc cmp ss imul xor jae aaa fsubrs cmpsb push mov or aas mov and std in mull and cmp mov pop js jns inc jg cmp in push mov ficompl push jne in jecxz inc out outsl scas or fdivl adc lock (bad) std add inc sub ss aas and sahf daa pushf xchg loope fisttp outsl push xor push test js dec jge add dec out in fwait sub test mov pop pop inc fdivr scas or sbb mov aas push lods popf lret ja jb aas rolb xchg xor sbbl mov pusha push push cmp pop stc fwait nop loope fsubrl dec rolb (bad) out ret dec call cmp cmp mov pop movsl push ja dec pop sahf dec dec mov fldt add cmpl inc repnz pop push pop cmp cmp rcrb xor cmp mov jg push add aas jle dec jl or xor lock sub les test pop repz ret dec outsl mov pop mov sbb dec lahf pop mov enter in adc adc or pop adc out movhps movsb lret into rcr push mov insl mov mov mov pop or (bad) std out ffreep sbb push movsb (bad) xor aam mov (bad) call aad push mov fs xor call adc jg in sbb ljmp ficompl stc fwait lahf jno sbb push test mov or and fnstcw adc int dec mov fstps xor and (bad) std jmp (bad) adc dec xchg pushf cmp inc pop rcr mov inc push (bad) out test fisttpl inc lret adc fcompl stc stc aaa lea clc mov xchg mov (bad) mov call mov pop ret sbb outsl scas cld andl mov dec fwait sub sub cmp dec ds fisttp ja (bad) div pop push (bad) ljmp pop push movsl nop xchg sub or out cld int call mov jl sbb sbb inc jae outsl scas inc loop dec and test pop cmp loop negl xor je das loope cli mov (bad) neg jecxz push lock and ljmp adc loopne in dec (bad) shrb out (bad) (bad) jle xchg in push push adc je and dec push adc mov ret loope out test mov mov jg std (bad) or push stos cmp jl xor int3 out (bad) out fild sub add adc call sbb xor repnz push mov outsl int ljmp aas test xchg mov mov cs std (bad) jmp push cmp aam movswl push or add (bad) pop mov pop mov dec or jle cmp jg mov xor sub pop push cmpsb and cs inc push mov sti mov jge xor (bad) xor and std jbe xor iret stc aas sub lahf push loopne test mov push fstpt popf andl jle in (bad) or xchg ffreep scas xchg dec cld fdivrl or lock aaa pop call lods xor pop rcr mov fistpll (bad) rcr add pop adc pop inc icebp call decl mov xchg jg cmpsb test dec mov repnz mov push sahf push xchg call or mov decl mov (bad) mov cld int lahf inc clc mov std movb aas push xor push in or out fbstp sub cld mulb out push test dec mov jle (bad) mov lods (bad) sbb js sbb pop int mov dec popf (bad) jbe sbb call (bad) sti push cwtl fisttpll jg jmp mov push (bad) jbe pop jb pop jle mov cmc out fildll jmp add sbb dec fcmovnu outsl out pop loopne lahf jno adc (bad) jg in aas push cmp sti out clc cmc xchg push scas movsl lahf inc xchg add fmull cmp mov dec xchg fldl shll pop out aas subl stos jnp bound add fild mov lods jbe cmpsb out mov fstps cmp push inc clc push (bad) (bad) mov loop mov push inc fiaddl pop (bad) (bad) call add repnz mov or dec int mov push or push repz adc inc mov add xchg repz and imul hlt lahf cmp pop fdivs aas stos call outsl sub stc xchg pop pop ljmp and xchg push adc (bad) mov jp cmp pop aas push push push test or das js dec aas push (bad) std mov loopne or (bad) lcall inc out mov mov cmp in incl adc add (bad) sti mov int jg pop mov mov enter icebp call outsl jg stc mov inc call push sbb xchg xchg mov sti jmp jg mov (bad) repz mov repnz out das cwtl inc pop lods hlt push mov xlat push dec push xchg mov lret sub cmc mov mov iret test fistp xchg idiv hlt mov sub aas inc xchg cmpb mov pop idivl mov fldl2t pop cmp repnz rcr clc mov sbb push push in incl push pop pop test scas cld int aas idivb cmp cli jg mov or sub cs sub jg mov and mov aam ror lcall mov jo mov clc (bad) jmp insl fnstsw adc xor mov out decl stc jg mov lock push dec jmp out pop xor xor sti jg mov shr pop (bad) lcall jecxz push jmp xor jmp mov outsl out (bad) out xor inc aas cld jg mov stos sahf cmp pusha lock fdivr movsl cmp jle lret sti adc jl lock push pop jle mov mov (bad) sti outsl mov in sarb lock cmp ss (bad) sarb out fistp lret mov repnz push cmp (bad) mov loope pop and (bad) (bad) in std xchg (bad) adc shlb push mov pop push aas add jnp push cmpsl push push mov mov (bad) (bad) jg aas push mov les out push fs cmpsb ret jns arpl xor scas mov inc imul stc (bad) in ja xor push push mov mov cmp xorb sub aaa (bad) mov adcl call ja sbb nop mov cld jmp (bad) mov gs movsb loop lea neg sub es loop mov mov push incl outsl jmp xor lret push xor dec xchg cmp mov insb pop mov (bad) (bad) popa fmull cmpsb cwtl testb xchg int3 push jno loop fcompl nop cmp shrl jg (bad) xor jecxz jnp daa pop cmp sbb (bad) scas data16 jnp dec (bad) int (bad) (bad) in fwait imul icebp aas cmp xchg mov mov stc jmp push mov lcall das xchg pop mov int3 pop push or (bad) cmp push jge mov jg call mov ljmp seta and xchg mov pop mov in dec jnp pop mov pop add loopne pop imulb xor stos aaa (bad) mov xchg cmp mov cmp frndint and mov in add bound test jne ds mov jle fdivrl dec pop push in movsl xchg xchg jle (bad) cmp outsb jp push jb mov incl cltd cmp cmpsb mov into push movsb hlt push push rorl sti jl gs imul inc cltd xor loope test (bad) mov mov dec lcall sahf push adc movsb xchg (bad) sarb push mov or or or cmpsb test aam fistl sahf push das ds add aad bswap jno adc push repz hlt jle outsb mov cld jo push jl sbb push sarb lcall push movsl pop test daa xchg cmp lahf xchg pop lds inc dec pop out pop mov mov test repz inc mov fadds insl scas mov mov sahf mov (bad) jp jmp ss mov sub aaa mov mov xor dec cmpsb fidivr ficomp lods add cli (bad) (bad) ljmp repz push stc and xchg mov or hlt aas js xor repz mov fldt cwtl jns jecxz (bad) pop sub dec push iret cmp repz out add fwait dec cmp add mov xchg pushf cmp cmp mov xchg mov nop mov (bad) jae rcl lock repz inc daa sub aad mov scas xchg inc push or (bad) cltd mov push xor mov sub jbe stc push fcomip pop jmp push pop rorb mov mov push cmc sahf xchg mov das push (bad) mov sub lods ficomp setb movsb push fstpt in out pushf push mov inc outsl ds sbb std (bad) out push cld notb out lcall dec fldl stos ds incl repz dec xor mov leave imul call imulb pop out xor cmpsb push or jbe loope idivb inc ficom outsl mov sahf test mov and xchg mov jle andl fwait rol ret int3 mov xor outsl mov (bad) and push xor xchg mov mov cmp fs mov int3 adc jne rcrb or addr16 mov aaa pushl das sbb mov stos mov scas cli fldt test (bad) push xchg pop in call lcall idivl cltd jp xchg sbbl aas cmp gs fldcw ds addr16 push jmp push shrl (bad) and xchg loope pop nop fimul sbbb push add mov push pop push jae mov out ja test stc dec in rcl push rorl cmp dec iret ss jns mov (bad) pushl adc ds daa add aas sub xchg mov mov and std aam dec popf mov push sti (bad) fldt clc int mov xchg inc fldcw mov (bad) lahf mov jle mov (bad) mov mov repz (bad) push (bad) in aaa cld es xchg jmp push xor push stos jecxz xor jo ss (bad) fildl push insb xchg jecxz adc test call aas and pop jns,pn fsubp (bad) aaa aaa push mov pop addr16 outsl (bad) jg push enter push cmp movsl xchg jl jbe push dec ficomp sbb repz pop mov mov mov mov (bad) xchg les mov jl cmp sbb push mov jg dec out lret cmp in jnp or pop aad pop dec pop mov xor push stos ss pop xor and neg add loope (bad) fldt mov sahf jns (bad) arpl lret stos jle sbb push imul leave cli (bad) jp in pop std not mov insb out xor jle rcrl lahf call (bad) dec pop xor mov lea pop push sti aas and orb sti adc (bad) (bad) test pop andb pop in jb jecxz mov jle outsl (bad) mov jbe cmp dec push mov push pop aam cs sar mov push int3 push test fldt cli sahf sub or xlat pop ret jb imul std adc mov ljmp push jnp jle cmpl push or or fidivl inc jle rcll icebp addr16 mov das shrb cmp out xchg insl (bad) push inc pop orb jle nop out fdivl mov fisttpl ror add cli ret pop push or push jb (bad) (bad) mov (bad) jl pop dec sub jp inc aaa fidivrl fcomip fildl popf jno dec pop xchg push aaa pop lds loopne add ds or jecxz push call push ds scas fistpll xor add test imul add and jle add lock ficompl pop fwait jnp xchg cld push pop dec sbb movsl add pop sub (bad) push adc andl in dec push mov cs push (bad) int3 test cmp dec (bad) sti push jp fldt loope or and jle nop movsb mov sub xor (bad) mov lods adc fdivrl pop popa out sbb push mov movsb mov popf cmp mov mov jmp or cmp inc outsb pop jbe push mov jle outsl mov lods std jnp or mov shll push xchg movsl repz dec xchg jno sub shl jns xchg je inc or and inc (bad) orl test insb andl out (bad) jg (bad) fcoms mov imul cmpl lds add and clc popa lcall lahf jg (bad) (bad) incl pop mov in outsl mov or cmc xchg cmp push ret scas frstor sub imul outsl sbb sbb mov xor loope out mov jecxz adc cld pop out adc push add lahf ret and mov push or mov shrb xchg mov jmp lahf fist cmp push xor mov lock rol or push (bad) xlat insl or mov std sti scas push push (bad) fidivr aaa movsb push call fcompl popa mov xor dec pop mov pop std fnop nop and aas cmp push cmp fild jl jge mov adc movsb jle fwait outsl (bad) imul or repnz sbb or xor scas inc lods lret cmpsl daa dec push aaa fistpll and orl enter and int jl mov lret insb xchg mov bound iret (bad) aaa jg (bad) stos fmul add cmpsl movaps mov pop negb out loope daa out int3 pusha data16 add push (bad) mov fwait outsl (bad) out lcall push ret in outsl pop (bad) out lahf notl mov cmp xchg in adc lds jg xor imul idivb sub movlps (bad) rcrb cli es jmp repz stos stc int3 (bad) mov int3 push scas adc outsb adc fnstcw fwait mov pop push xor in mov and test (bad) std fcmovnbe sbb icebp add in push (bad) xchg cmp fsubrl add sub mov lds int loopne jmp push call popw fadds movsl (bad) int sub lods leave fnstenv ljmp mov scas insl sub out xorl push repz jg stc out inc ficomp cmp das subl push (bad) jg mov push inc je mov or test (bad) imul fwait outsl xchg lahf sahf add and and sbb mov jg inc in mov outsb dec mov aas sti out inc mov lock mov cvtps2pi mov adc aaa (bad) int insl imul mov jecxz int jl sub cli mov aaa dec sub pop pop inc mov jg idiv shrl cs adc nop fxtract outsb push fistl lea in cld int (bad) ficom scas (bad) mov aam pushf in out ret out outsl jmp aaa push and xchg jle in sub test mov out loope push adc mov loop mov pop outsl mov add sbb push test (bad) jmp cwtl lock xchg inc sbb daa nop add cli roll dec mov pop jb jl aaa shr scas inc int3 add jae ds mov jmp jg int in ja mov xchg outsb daa and loopne xor xor adc aaa fstps cmpsb je,pt push sub (bad) out xlat ret in mov inc push (bad) cmp push adc push push push ljmp rcrb outsl mov out rcrl xor clc test lods and out mov push lods adc inc adc or dec sahf out pushf in int outsl (bad) pop js int3 in lock pusha das sub clc mov and fmulp aaa jg mov (bad) insl (bad) ja subl mov inc sar insb pop pop add push mov outsl sbb jnp movsl das ret test sbb out dec outsl mov sbb pop sub cld mov sbb xchg fwait mov mov icebp idivl hlt mov mov add mov and add (bad) xor and push (bad) jl stc addr16 add cltd mov ja mov dec decl jle cs stos hlt dec mov (bad) sub dec ja les in xchg loop call incb dec or fwait mov out mov jecxz push mov repz jbe pop cld out cli imull and cmp aas stc fwait outsl pop push aas and xchg mov inc lods loope push jecxz in fildll or js inc enter call aam sar clc inc stc call popf repz or sbbb jl aaa fistp out jmp lcall sbb repz fxch std popa inc cmp out mov jmp xchg sarl aaa mov mov sbb (bad) loop test push test mov ret fwait (bad) (bad) dec xchg test hlt rcl (bad) add aas stc (bad) (bad) or fwait outsl (bad) out sub adc mov sar or push xchg out mov sub mov mov enter ljmp leave aas aad shll or pop push sub jl dec aaa cmp (bad) das mov lods pop movsb (bad) add sahf dec pop loop push push cmp aam repnz aad outsl mov aas out push insl sbb iret push bound stos push dec xor fildll stc fs daa cmpsb hlt or mov rolb sahf adc icebp scas sti in dec and push fs jle aas xchg adc repz pop ficom push js (bad) pop bound out and jl sbb lea outsb ljmp add loope jecxz popa test mov movsb sbb stc fwait outsl mov dec cmp push popa loopne cmp mov jecxz fildll inc int3 xchg fstps inc jle dec jne ficomp and (bad) (bad) sti push xchg ret sbbb bound sub mov xchg pop loope push rclb loop fistpll inc scas cmp mov sti out leave lahf mov push (bad) jle int jmp in push push fisttpl imul push mov (bad) insl ret sarb pop imul mov loope fisubr stos fistpll and fcmove cltd outsb sarl pop lret in jmp mov (bad) mov movsb mov outsl sbb shrl mov mov mov push lock (bad) idivl sbb sahf ljmp cld repz jle hlt outsl js,pn fcoml fs scas adc sbb mov lods out mov lret jg and push bound into and (bad) lock inc or popa roll lar mov mov sarl add or push dec mov outsl mov bound cwtl das mov je ds rcrl mov adc push popa jmp int3 (bad) xlat pop mov sub popa fisttpll scas gs xchg mov adc sti das cli sbb data16 add mov insl push xor (bad) int sbb jp scas out mov sub out call aas loop pop mov pop repz imulb loopne push jmp or shrl jle jns adc daa cwtl cmp bnd add xchg cmp mov mov aas xchg add ret std sti in fistpll paddsb call fstpt inc cli imul push cmpsl and or lcall roll ret stc idiv pop pop ss lcall fsubrl (bad) pop xchg mov mov add clc xor push lea sub sub scas adc (bad) incb es aas lret or cmp (bad) xor (bad) cmc mov push jp add xchg push mov mov daa and (bad) cmp add test in fbstp fucom cli pop xlat aam repz pushf lods mov jae push push cmc mov clc mov inc aas or test insl mov (bad) (bad) cmpb sbb lock fdivrs arpl insb mov outsl inc nopl iret jae cmp repz rorb jge push inc out insb test hlt fwait outsl (bad) jg mov aas icebp (bad) xchg sub (bad) leave xchg out mov jnp call fmull std mov and rol cli jmp ret sbb call pop loopne mov jle fimul inc pop imulb outsl push mov loop mov or mov cld cmp adc inc fidivr or sub or lcall das fstpt inc mov jg jne ja jne mov jmp nop or xchg (bad) jg fdivr mov adc add aas dec jo add roll inc and pop clc in pushf jp push and jge ja (bad) aam or nop push mov stos subb hlt xlat push sbb add mov mov push frstor jns bound jle push fild pop sub and repz cmpsb lods lods push xor sahf lods idiv push loope test hlt cmpsb mov jle hlt push pop outsl in outsb in cmpsb inc fdivrp cld test sub ds add cmpsl mov test dec fcmovne push in lret fidivrl mov mov pop and (bad) int (bad) aas mov jp fadds xchg sub cwtl pop cmpsl (bad) cltd out (bad) mov fidivr push jns push ds addr16 adc fistp or push shll (bad) bound lcall mov cltd mov fisubrl xchg inc push dec inc mov out sbb cmp pop inc pop sti mov fild push inc outsb dec int pop in sbb mov jnp fwait jp jo sbb push call mov icebp mov aaa (bad) or push rcrb loope jnp mov loopne aam sahf data16 lahf imul imul movsl fistpll cs mov notb loop push or xor push insb pop loopne pop fistpll push int3 and pushf imul stos mov push jle int sbb jne mov das mov inc jecxz adc mov mov and out aas push imul cmpsb cmp jg call jle xor aas pop pop cmp icebp in sbb push push mov test popf mov iret push xchg inc in mov jbe std jmp aaa (bad) insb and aas push push ss in sbb test les lock outsl (bad) sub aad fildl stc or rol (bad) shll (bad) jg cli outsl movsb push fidivrl (bad) out imul fistpll mov sbb fs push fidivr aaa enter cmpsb adc sbb je in push outsl dec sbb js push cmc test mov rcr add insl dec test push jmp ds pop ljmp jle mov mov add (bad) jne rcrb xchg imul pop inc dec sub mov push sbb pop ret cmp aaa jg cmc xor fdivrp cmpsl pop std mov sub insl out or sti jge pop sarb jg gs xor pop dec nop in scas jle push mov xchg cmc pop outsl sbb push add adc repz or js clc jne das jb sahf cld iret mov std loopne ds mov push das xchg repz jae in aas push push es pop jg fisubl shrb jg stos fistp or loop hlt in jbe sbb stc out aaa ss mov dec in aas repnz adc and fisttpl push adc sarb ja and and aas rclb cwtl outsl das loopne push in push (bad) mov lods nop call (bad) scas mov inc xchg mov adc push call (bad) jb bnd adc cmpsb incb (bad) (bad) pop std (bad) fdivrp sub adc cmp sbb mov mov jno jno ds push fisubr sti cli mull call aaa popa repnz push adc (bad) mov mov jmp std mov popf mov cli (bad) popl push (bad) adc cld mov lret ds in sub scas sub xchg pop movsb aaa (bad) stc out (bad) in dec (bad) lock mov jno lahf lds aaa (bad) stc out fsubrp das js bound mov mov in jne aaa mov sub pop sub in jnp mov stc iret xor cld cmc mov out repz xor xchg mov ret pop mov lea xor loopne div stos mov ret loop adc or repz push dec int pop loope sbb scas mov fcomip fwait (bad) jl or push cmp jae (bad) fwait (bad) jl xchg movsl cmpsl or fdivrl add lahf outsl jle popf cs fcmovbe pop int add fyl2xp1 int jle push dec jae les push test xchg jp dec fcmovnbe stos mov adc jnp dec sub into ret mov push push xchg sub mov out lock loop std scas inc pop rorl (bad) sub push rcll scas aaa mov inc mov jg pop lock adc cld out mov or lret xchg div lahf outsl jle mov in xchg popa xchg enter lret push pop in stc push pushf and insb and push fwait outsl mov sbb xor inc outsl or repz movswl push xor inc ror and rorb dec sbb mov xor mov fwait mov sbb fwait mov pop mov lcall daa fdivl mov xchg loope push mov mov stos xor es pop idiv cmp test sbb scas jno push repz fisttp movsb push jbe add fwait mov and sub jle mov scas jae lret sbb or int sub push push lahf mov repz or push fstpt shrl inc clc mov add push mov xor sub jl rcr pushf insl mov dec xorb cmp dec inc sbb push cwtl dec faddl jl out mov xor sbb jge jbe sahf dec jl jae in fistp faddp push push cmp sahf pop or cs push je loopne pop push out mov stc out aad (bad) arpl push xor mov (bad) push adc imul pop mov push adc push outsl mov outsl cmpsb loope pop mov mov loop fistl xchg int dec jnp mov int aaa xor repnz push jl (bad) test cmp lock out mov bound xchg cmpl in xor repz push lea xor aad (bad) sub cmp fbstp dec fsts sub repz and mov outsl jle mov push pop movsb jecxz and les adc stc outsl popa jns adc adc leave sbb pushf mov pop push or out cmp int (bad) and push scas repnz add out lret lock out aaa mov clc cmp mov or xchg out (bad) out enter mov mov push imul mov add cmp pop xor pop xchg push (bad) jo jle mov sub dec sbb inc out mov popf aaa mov lahf daa mov scas mov cld out xchg push inc adc jg inc cmp pop jne pop out mov push sub (bad) jno or lds stc in dec sub repz push inc pop ret aas jmp pop aaa fidiv cld out sbb push sahf lcall push es repz mov adc fsubrp push mov xor in ds mov out push stc cmp fsub inc rcrb mov lahf out dec (bad) bswap and gs jle inc aad mov inc push pushl jecxz xchg sub xor push mov jp add aam outsb mov or sbbl xchg inc mov aaa outsl push pushf jae ss icebp out add sbb mov repz sbb int3 test mov xlat sti in cld out scas sub adc adcb xlat or into jle fistp mov fldcw out sahf mov je xor mov int3 shrb jle movsl mov and std out adc pop jl mov ss mov cmp fisttp ss in xchg sub sbb add and mov or (bad) (bad) sub push icebp lret dec sub jp mov in cmp out inc jl mov jl jle loop xchg stos push jg fist xor push jo aaa or bound fucomip stc int (bad) aas inc cli xor jae dec sarb enter stos fnstsw mov into xor dec test jne (bad) insl sarl (bad) push decb hlt cmpsl push mov push loope mov xchg inc xor sahf stos movsl and loope cs test xchg jge insb ja sbb (bad) cmp inc into aaa pop cmp or and mov outsl mov gs sub push jp inc push or (bad) mov xchg cmpsl mov push (bad) push add loopne outsb mov in enter int3 push daa dec mov (bad) gs push sub inc (bad) out (bad) mov in fwait and sbb shlb mov clc fwait add test jns jl push push sahf ss jmp and pop jns dec shl aas mov mov std (bad) mov pop fprem fwait sub push fcmovb out loop repz jp fcomps sarb push popf scas xor cmp fs push lods call loopne rclb xchg mov mov mov outsb fistpll mov (bad) sub fidivr mulb aas cli add aas stos lea xchg fstpt sub mov loopne sar das cwtl push ret cs xor and pop mov aas or mov push andl mov (bad) rorb jmp sbb sar add or pop mov lock sub add adc mov aas arpl mov lcall (bad) xor cmpsb xchg cmp sub pop mov leave or aas or sbb pop wrpkru (bad) idivb mov (bad) mov xchg aas das jg xor lahf aas pop aas dec in les pop mov add aas pop into jb add dec pop mov xor shr loop inc cmpl inc (bad) add fcompl addr16 rolb push cs test and xor sbb or fild cld iret mov lds and jae call xchg dec sbb fsubrs lods lds jg xor das in xchg out push or inc enter fsubr jb das fs pop lods jmp repnz mov jmp enter lods scas test sbb jp in ret pop jb pop inc push lret cltd nop in push dec enter out mov pop enter fs pop enter mov in cs push and adc inc mul lret pop jb je or pop and loope or mov adc loopne enter cmpsb test lods test push movsl mov and cmc mov mov mov leave into add (bad) ffreep lcall out daa fldcw push ret cmpsw aas shll cli xchg cmc das test pop faddp xor decl push xchg pop inc mov rclb sti incl call pusha add aas inc push push cmp pop imul insl xchg mov dec jns mov and mov cmp (bad) incb (bad) in js and cltd (bad) (bad) jle mov add subb dec les mov sub idiv mov out mov (bad) aas in (bad) xlat push (bad) push push push or loopne outsl push roll mov xor ljmp mov out sub jmp aaa sahf lcall dec aas outsb push mov inc out push and xchg into aas sbb xchg and or pop xor outsb fdivs sbb pop pop mov subl jnp add rcrb xor lret scas sbb sarl mov std push or sbb dec out sti andl jp pop sahf loope loop push ret (bad) jg ss dec mov aas addl mov ret (bad) int std push cmp adc mov push lock les outsl rcrl mov fnop and test icebp mov das jb out xor xlat aas (bad) jbe neg and lds sbbb movsb aas mov scas repnz addr16 sub mov add mov cwtl push das push pop in pop cld xchg ds add add fnstcw mov push mov inc repnz fldt adc lock pushf call xchg jl inc sub cmp sbb sahf int loopne pop fist xchg outsb or lcall pop mov lahf (bad) adc nop push fnstsw (bad) cmove sub std int xor shl stos aam sbb sub js (bad) ja push sarl inc mov mov adc aas fdiv aaa popf ja sub lcall push adc mov pop leave movsl (bad) sahf mov cwtl dec insb push loop lea faddl push jb aas mov aaa fildll xor xchg pushf mov mov jmp out sub adc aam (bad) xor (bad) mov sbb cmp popf mov mov sub outsl addr16 stos cmpl mov fdivs dec outsb push cld jle aaa jg cmp push sahf ja jns xor sbb stc sub cli mov popa cmp push jle mov bound fwait jg test dec push mov inc insl mov in inc mov mov xchg xor aam mov lcall (bad) mov push iret sbb aas test push mov iret pop arpl lods lret aad jg int sub xor call xchg test adc shr and xor (bad) mov les mov push sbb xchg insb push outsl fild cld sahf outsb shrl pop push stos push cli arpl popa mov aad and (bad) out mov add pop mov pop dec daa clts cmove or in cmc mov lcall xchg (bad) jge (bad) cmp sahf mov in (bad) mov xchg js (bad) aas pop movsb data16 in in es push es aas je dec dec jne push mov cld popf xchg xor jg je scas pop enter mull fild pop adc cmpsb lcall fcomps loop mov arpl outsb clc mov cmp das add jnp lock lds xchg nopl adc cmp out jnp cs push mov push mov das cmp imul lcall inc inc (bad) incl outsl mov add xchg test jecxz mov outsl push repnz cwtl sub dec jnp (bad) sub insl loope (bad) cmp push mov ret or (bad) aaa mov mov or out add dec clc rcrl fnop outsl or jge int3 mov mov int3 nop scas push int mov cmpsl cmp (bad) push insl jg and dec sub outsl push add mov les dec add adc cmp loop xchg push jns mov setbe scas jp into nop jbe push fistpll fwait int3 andl out (bad) mov mov cmp scas add sbb clc fistl (bad) push or loope nop in (bad) xchg outsl push xor xor push or test push add fdivl jns fildl xchg and push jno mov inc xor out push xchg xchg mov stos or mov sub add popa sahf enter inc (bad) push xchg mov fildll stos loope gs mov shlb mov or das or adc pop xchg cmp fildll ljmp clc mov out push inc pop repz xor cmp inc sti in iret push cmp push pushf mov int push (bad) stc and call daa jg and into xchg sub scas jno outsl push mov insl fwait sti scas dec les dec or lcall inc pop das push mov jae test inc hlt pop nopl sbb out push xchg sbb sahf cli mov add adc inc and fisttp or pushl decl or xor or lods pop or sub loopne dec push push imul dec inc das push mov fbstp or jnp add and or push inc pop mov xchg rcl pop mov mov xchg xchg dec sbb mov in aaa imul rorl pop jns (bad) decl or fldcw pop popa mov inc mov out test lahf cmp xor add mov inc add jo or sbb add jae inc sub push push icebp addr16 clc push cmp dec outsl push outsl jne push inc je inc or sbb xchg mov or mov (bad) (bad) js je sub or cmpl fildl push jne imull and and hlt inc xchg and por add cmp dec cmpsl xor sub inc xor push cmp dec add aas push scas pop ja xchg xor xor xchg sub gs jbe push jo push je and pop cmp aas dec fisttpl fs data16 push mov push or push mov jns push jne imul sbb popa jmp xchg in imul fidiv or mov ja insl sti aas gs (bad) lret and xchg je mov add cmp dec lret stos insl sub pop addl scas cmp out mov inc push data16 scas loope mov dec sub xchg ds jp sub das sub sub arpl add push in cmp push cmpl or daa dec (bad) das nop mov fbstp sti jo out outsb bound jnp sbb jbe mov outsb sub fistl insl mov iret xor fbld inc pop push faddl xor fcmovb cmpb aas cs pop push (bad) and daa cli sub inc add (bad) mov les cmp notl in (bad) shrl lahf outsl xchg subl pop outsl xchg lahf cwtl loop mov jg dec jecxz sub sub fbstp mov fist or xor add cmpsb jne jae pop ret stos pop arpl (bad) stos nop xor (bad) bnd outsl xlat add das rcrl jae lods mov add test jo sbbb pop sbb (bad) loopne iret arpl dec sbb rorb rcrb ds (bad) insl pop fbld jb fs add pop insb clc xor mov outsl psubq das pop cld pop sub fiadd lods loop test (bad) mul enter insl lret je out sub push add scas popa mov push fisub cmp (bad) scas popw pop ret pavgw push sub cmp xor (bad) xor andl fs bnd lret push and or pmaddwd cmp adc hlt mov enter adc mov sbb repnz sbb enter das inc mov lock and jb out push jp cld push dec pop mov (bad) in call test lahf addr16 jnp jbe fsubrs sub push push iret loope les fcmovne or add jl roll mov dec insl test xchg imul fcmovnu add inc das rcrb fwait cmp xor cmp push inc (bad) outsb out (bad) (bad) add dec add and jbe outsb add das das das and (bad) dec inc jl jl inc inc sbb add loopne dec fisttpll (bad) mov dec ja push call fimul jne add das mov movq in daa out dec push outsl mov inc mov push fistpll jecxz mov ret dec jp add inc jo inc das pop (bad) mov pop imul iret fcmovnb mov jns out out (bad) outsb sti adc (bad) arpl daa (bad) push pop pop stos inc jae push dec xlat daa push push ret mov pop dec packuswb jne neg iret sbb (bad) mov lahf (bad) jg in (bad) incl cmp cmp fs dec xlat mov cmp add das das adc loop push decl inc das push xor outsl popf rol jbe dec add add inc jne mov inc or inc jne xchg outsb das pop xor inc cmp lds jg bound push inc popa outsb adc into mov xchg jns jg addr16 cmp fs int mov mov jae push gs sbb jne dec outsl outsb and jbe pushf outsl pop dec inc aas test inc into inc push dec or aaa movsl aaa inc adc fildll gs sub adc xchg popf push inc in jle inc insl bound push dec dec inc cmovle and inc daa cs push inc push pop mov sub pop inc loopne inc fsubr and inc push inc pop inc dec fnsave jmp dec push pushf sub mov pop nop fistl in bnd pop jo cmp mov jae,pn shlb nop/reserved arpl or lock mov add add add clc daa pop imul pop and push pop loopne,pn fwait mov push pop jbe sar and add pusha push nop ret add inc dec add std fcmovnu xor sbb addb add xchg imul (bad) adcb test add orb (bad) daa push cmpb push and sub ja xor int3 push jo cmpsb test data16 arpl push rol xor dec or cli mov jl sub int3 rorb sbb cmp pushf xchg lea mov and in xchg pop xchg xchg mov cs or iret sub add add xchg xchg and jecxz pop sub or aas pop or aaa add sahf out push aas dec push pop mov mov ja xor push mov pop mov cmp imul loopne insb push xor data16 and cmp mov sahf divl (bad) pop sub jno mov decl jbe adc out es out aaa adc cmpsb mov mov repz inc push push xchg out flds das lods ja push ss imull cs sahf xchg xor mov xlat or push jo jbe das sub dec pusha sti mov icebp int jne inc data16 add or das pop inc and dec mov outsl jb dec lock add into pushf aaa dec outsl addr16 or (bad) outsl dec outsb daa imul aas mov ljmp jp sahf pop jl mov inc jecxz outsb cmp jmp dec push ret test scas add mov jo sub enter xchg fcmovu xchg jbe fs jnp ds dec sbb lds xchg xchg pusha ds icebp mov xchg xor mov cltd pop or xor repz ficom aam imul fist mov ficomp fwait es xor pop les ljmp dec hlt lahf or inc mov ds push test je int3 es daa mov (bad) data16 add pop xor mov cs lods xchg pop stos out stos xor subl xchg mov xchg adc sub clc mov pop (bad) jmp rolb mov mov into mov out scas sbb mov push scas jns fcmovnu jno cs scas pusha dec push addr16 fiaddl in inc ret (bad) push add xor fimull leave push or lret iret addl add add inc shr insb push xchg inc cwtl rorb mov add int3 addr16 js test pop (bad) pop add mov or cmpsb or mov or adc xchg inc mov jbe mov ret notb les add fs xor jae pusha outsl imul sbb xchg or or repnz not mov push imul push mov inc bnd sub std adc ret mov data16 mov xchg aaa insb mov add dec in rcrb clc push jbe sbb sti jl xor outsb pop dec das dec add mov dec arpl jnp rorl outsl enter enter xor push shll mov push imul je addr16 or fcoml insl pmaxsw xor idivl gs ljmp lea push lcall push add pop outsb jl adc add and movsb jo stos jo or int3 push fistpl imul mov ret mov xlat sub and inc js and sbb push xchg mov push out dec or fild in mov mov pop mov pop ret sbb xor adc push cmc add mov (bad) jo je nop/reserved and dec mov jbe arpl push je das push jae popa mov xchg jae adc inc dec mov jp daa mov lea dec mov js push push add mov int3 add and sbb and jbe ss mov sbb and jb test out cmp outsb add inc xlat mov pop cmp mov fsubrs test pusha shll push das sub xchg mov xor sbb push sbb rcr dec mov (bad) push in fiadd (bad) (bad) push push pusha lahf nop push push add jb je jmp push dec inc popa (bad) pusha inc fwait (bad) (bad) icebp mov pusha gs and push push or adc fadds dec adcl popl pop pop mov or (bad) add dec loopne xchg cmp call and adcl adc jbe je jae test pop dec addr16 push jne in fmul xchg (bad) ss arpl mov or xlat xor andb push ds popa mov mov jg fisubrl jo or adc pusha add sub testl jb in and xchg das gs cli arpl adc ds jg stos xor push or dec xchg das inc outsl popw push fadd arpl xchg mov rcrl jmp popw pop cmp and bound ds and sub inc jl jmp addr16 jle jmp xor sub jae xchg mov sahf push and sub out cmp push sub movups lret lret and fidivr incb jg pop pop sub push pusha sub jmp push add ss gs sub pushf imul (bad) int3 jo hlt dec sbb arpl sub cltd int jo sub push out jnp mov sub cwtl mov repz je pop push daa sbb repz inc xor mov lea sub sahf push mul jns and sbb adc add (bad) dec add dec or or es push clc out sahf out hlt lock call sahf loopne fcom ror jns out enter mov mov lods cmpsl movsb push mov pushf cwtl xchg nop test jns out jo dec inc iret rep sahf sub or int3 lods mov iret repz dec sub or jns out les sahf out insb pusha push xor repz adc in les cmp (bad) pop xchg pop mov cwtl ret popf jg test fiadd inc pop jle sbb push sub movsb nop add test push and ss mov and inc addl add add adc and mov (bad) xor push mov jo fcomps add add add push out aad mov add imul cs adc pop pop ficompl inc jo in pop outsb or fisttp push repnz arpl adc mov rorb or call xor aas aas add andl inc les xor mov imul xchg ds test fs jne push es je daa fiadd outsl cmpsb pop popa data16 and aaa and jo xchg cli insb outsl jbe adc gs sub mov jb or in aas push and sub jp and cmp in cmp (bad) push insb daa addr16 add cmp sub inc mov push xor int3 adc mov pusha (bad) push jae imul ljmp pop movsl test pop jbe gs insb arpl clc fmuls cmp insl arpl add and and add mov imul int3 popa pop or sti or inc pop jb pop xor push pop push outsb pop pop pop pop sti cs jae (bad) dec test mov push and push sbb test daa arpl mov mov loopne mov les fcmovb xchg mov and shrb imull jbe mov imul pop push je lods jecxz add xchg out gs popa pop int test dec outsb imull cmpl sbb and jae daa lds mov push ret sub jb and push addr16 cmp push insb jne fisubrl and or daa enter fldl (bad) gs popa jne shrb adc (bad) xor nop mov lds pop sub push pop das imul mov (bad) (bad) jns mov das jbe push xor pop test fisubrl sub lret daa outsb pop xor aaa enter or xchg dec sub mov out imul mov ss daa loopne mov cmp lock daa push aad test cs xchg frstor clts inc fmuls jmp push test fxch sub std sahf pop leave mov and jb std adc cmp dec push movaps ja repz inc add inc sbb push inc (bad) pop dec sub dec in dec push rorb mov test xchg push cmpsb sub jo sbb push iret outsb xchg dec dec mov jl dec sti jg push dec or sbb xor cmpsb rclb push int3 inc lret stos shrb inc cmpsb rclb inc orb mov inc inc cmovl cmp jbe jge aas sub aas sbb sbb dec push pop sbb cmp adc orb aam insb ja dec mov test dec cwtl push xchg cmpsb sarb pop mov dec je pusha (bad) je xor sbb xor cmpsb and inc pop clc imul dec fmuls lcall mov pop nop push jl sub test dec outsl xor into or pop inc scas pop fmulp iret sahf mov cmp xor push scas and inc add sbb out adc jbe mov push cld pmuludq inc psubsb daa popf push push fdivrl fmul push stc dec jnp push (bad) mov push dec lods negb push push dec setl inc nop dec dec lahf sbbb sbb push push dec pop fist out fcomps inc dec cmp or cs adc sti fildll push ljmp or add mov ja jns push jae jo or inc fildll mov rcrl test fildll and roll adc gs mov xchg add or fild cmp inc sub popa int in mov aaa aas popa js imul xor cmp and sub ret sbb ret pop js dec dec jo inc jl inc ret in or inc jg jmp jb jo popa aas ss vmovaps jg dec popl push xchg or xor ret outsl inc call push insl jae dec xchg pop inc xchg pop xor andl mov das es sbb xchg jns and (bad) xor shrb mov sbb out jo mov scas sub jp dec cmp jno iret rcrb mov test dec dec and mov push out fsubrl mov out jo jb jo aas xorb mulb ss mov fisub or push pop push dec push push cmp push pop push adc pop mov fcomp dec or fstpt leave mov push pop neg fcompp cmp push dec (bad) bound push or popa jns ljmp mov or stos imul inc ss fisttpl data16 outsb push fs into push push out push out push jle out (bad) mov push ficomp fsubrl data16 popa sbb jnp push push xchg ss out insb (bad) ss (bad) jp insb or (bad) fsubrp xor push adc es mov jl (bad) insb xchg mov push ss sbb jns jg xchg popf mov jg imul outsb movsb jne push je repz js cs sbb lea js das push inc jbe jle out (bad) jns repnz int3 or mov iret push xchg (bad) jnp ja dec pushw (bad) out das push sbb inc jge das dec jecxz (bad) dec movsl push test pop cs outsl hlt lcall push in incb mov push xor push dec inc dec cmovns out xor cmove scas test jnp mov xor cmp das pop add es push imul cmp inc arpl mov jbe insb xchg cmp sbb push popa and mov xchg ss xchg movb and push (bad) es out aam push pushf mov rolb cld aas push roll adc out sahf out inc fwait jns xchg data16 push testb cmpsb push push push adc pop sti call xchg mov imul rcrb shl push push or aaa fldl jg add les inc pop insb sahf addr16 outsl addr16 xor mov push inc data16 add or outsl repnz pushf jecxz fs cmp dec sub popa xchg test lods fldl (bad) xchg outsl xor dec dec or out fstp fisub xor pop inc cmovs into sbb ljmp cvttps2pi dec xor femms mov pop es add orb mov sub jg sbb fdivs cmp pop pop sbb adc lahf xchg xlat mov jg and popa (bad) aaa jbe mov push add (bad) jg dec or aas (bad) fsubl jno or cld aaa adc ss or sbb xchg std addl pusha add insl aas leave (bad) or push mov lret add sub jle fldl sbb jmp loopne adc popl pusha jg push rorb jmp fisttp or dec jno icebp pusha inc mov clc ret movsl (bad) pop push mov jno xor into out inc fadds push leave dec out jo iret jnp popl les push mov inc cwtl lcall and insb leave in inc imul dec in adc lea inc insl xor jecxz sbb bound jno mov outsb push push into (bad) int sbb outsl cmp outsl mov iret push repz mov inc push xorl mov push int3 lret shr or mov out jecxz imull adc shll out jnp pop out jmp scas fmull (bad) mov divb fwait (bad) fdivs add repz mov jg or push aad loope inc aad jo dec mov movsb push push (bad) je movsb jge fcmovne nop test sbb mov (bad) (bad) sub xor lods add pop ds aas push xor jns out ss cmp cmp and rorb cmp inc cmp ss or jns pop push or sahf out sahf adc adc jns lock iret mov push sbb cmp repz pop and and cmp repz cmp sub sub rolb sbb ds shrl dec xor inc adc mov adcl push gs bound loop dec fiaddl push jle cmp xor jbe,pn jb bound ja pop and push sbb push loopne hlt mov lret in pusha das pushf popa fs and aam mov push push outsb push jmp add mov push sub hlt das es mov outsl pusha insb popa das xor ja les ss aas shr xor pusha mov je dec movsb mov je out mov push dec (bad) sub or jb cld jg loop imul cmp and inc jg push inc lcall mov cmova outsb imul xor xor (bad) mov jae fs inc jp jns imul je sub jmp insb jne insl dec jbe push cmp push push ret push jg sub jle xchg lcall jle inc adc sahf cmp mov push insl pop pop dec insb arpl addr16 dec push xor jg jmp outsl jbe xor dec push ja inc inc jns push xor imul sti jg xor cmp push cmp push insb imul imul xchg sbb jp push push jg add sub inc cmp arpl out clc jne pop dec outsl adc jbe inc push jns push insb pushw mov sti outsl cs jb inc cmp push xor dec insl js pop sahf jne insl movsb (bad) cs inc je push xor jns je outsl push push inc sarl inc push imul push lock jbe dec jp jne dec mov fiaddl adc add mov ldmxcsr mov ja jp sbb push fidivl cmp inc pop (bad) dec or adc daa out cmp pop jp xor ja pop insl push js pop push loopne or sub ss jp jns inc push mov fist and jbe dec push inc push add cmp popf or stos push xor cmp fist xor add adcl outsb arpl fcoml testb xchg lock dec inc dec addr16 bound inc xor mov pop xor cs xor (bad) xor les xor lock cmp insl push push inc test (bad) popa (bad) ja imul addr16 (bad) push push fidivr fwait add cmpsl outsb add xor jmp jle inc cmpsb cmpsb jmp push aas lcall pop push aad (bad) nop outsl dec fs sub mov cmpsl lret add cld es add (bad) fidivr js pop mov dec pop inc jne sbb outsl mov dec push (bad) out inc fs pop jo push mov pop dec (bad) push xor mov push and or mov jno mov push jno orb sub fmuls flds ss jo cld fs pop push bound (bad) sbb incl cmpsl xor jnp xchg mov outsl arpl addb andl jl (bad) mul fmuls and gs xor cmp (bad) mov loopne leave jbe lahf sbb mov and jmp shlb sarl bound pop cmp adc into jb jns xchg and or or cmp testb aas add (bad) sbb out addr16 inc push negb push (bad) fs aas (bad) in nop or jns sbb add daa add movsb test or call push sub mov aas pop pop (bad) and xchg add or add lock fidivl mov and iret inc aas in mov popa sbb dec into dec sbb add push sub inc inc mov inc pop mov dec adc push jg cmovnp ret inc movq xchg mov and lahf dec jg xchg or xlat fimul sub rclb outsl dec pop xor pop adc out inc pop dec push loopne rclb addr16 push data16 daa mov inc or mov pop add cld dec add mov in nop data16 sarl daa dec inc push push mov adc outsl dec mov and mov (bad) pop pop (bad) loop xchg (bad) int3 xchg add loopne cmpsl movsl and jg mov lcall adc out dec xor cmp outsl mov fst addr16 sub insb outsl sub jl mov movsl outsl dec dec mov pop add daa mov pop dec mov adc sbbl iret vcvtss2si outsb push xchg pusha insb and enter repnz enter lods mov movsb pushf rcr adc decl add pop jb pop shr imul je call push push xchg mov outsl dec cld outsb mov xchg nop pushf cld mov pop sbb int3 dec sahf mov pop lcall daa mov push sbb push inc dec in adc outsb ss lea cmpsb adc (bad) push (bad) negb test cwtl ljmp cs pop inc scas insl insb sar dec (bad) adc imul pop add or adc jg dec pushf fdivr (bad) xor pop pop clc mov fs jo or pop jnp movsb outsl bsf xchg mov sub cmp inc xchg push cmp jb fsubr xlat loopne aas push push (bad) push or fdivrl dec sbb xlat ja bound sarl dec push pop xchg mov add inc aaa outsl dec fcoms mov test arpl xchg in nop aam lock inc or push in cmp push cmp sub outsb imul insb xchg inc jns,pn jl test sahf or rclb push xchg mov dec fcoms push dec jnp or push adc and add outsl dec insb popa out (bad) hlt outsb push scas push pusha push push dec scas addr16 nop adc call push mov sub outsl dec roll in push push cs sahf cs inc mov inc je xor push inc dec movl outsl dec xor xchg cwtl movsl loopne mov out jl,pn enter mov imulb adc push and adc jnp xor shrb shrb xchg jo pusha pop bnd outsl out out xchg dec cld outsb lods xchg mov enter mov xchg dec data16 clc xchg pop or dec xor adc inc pop outsl jae ja dec outsb inc xchg push fiaddl outsl sahf mov nop xchg mov dec out outsl repnz in fisttpll outsb fcoml dec pop xchg les int3 dec addr16 sub sub cmpsl outsl sete pop push pop js jae pop adc pop pop pop divl pop jnp mulb (bad) mov dec dec push pop outsl dec mov (bad) hlt daa pop add or mov hlt call or aas cs pusha xchg loopne fcom push jl push xlat sbb add xchg fdivs ds aas jae push roll je and iret in (bad) xchg xchg mov dec fimul and pop xor inc mov aaa (bad) xchg xlat outsl sbb subb pop add cs daa nop lahf addb jnp mov dec mov rcrb loopne or outsb pop adc xor popf pop and sub scas (bad) mov add addr16 jmp popa jne pop xchg cmp dec xchg jmp lods xchg xlat outsl dec stos jae ja data16 push fcomps inc outsb ss add mov pop xor cmp into sahf xchg or mov cs aaa pop insb push jl movsl and repnz in popf dec jbe data16 lahf mov adc ja mov cld lahf pop or sbb push pop adc addr16 ja dec push test mov or pop cmp pop jl push pop jnp mov pop pop insb pop sarl ja or aam insb adc ja ja pop or pop sbb sub dec out xchg xchg pusha lahf ja dec jbe mov push dec dec xor addr16 andb fnstenv mov iret inc add mov sub add xlat icebp dec or sahf pusha or pusha sbb sub pusha mov pop dec pop ja adc xchg dec in jbe fbld push loopne lock js ja js imul outsb test (bad) pusha bound fisubr dec push fwait or popa pop adc add lock sahf fnstenv add aam aaa fildll (bad) out xchg dec shrb pushf xchg mov outsl cs pusha xchg dec jp fcoms jno bound inc (bad) lret outsl outsb ss in inc icebp bound bound das pusha (bad) (bad) dec push pop iret popl adc (bad) cmp push test mul popf movsl and data16 push pushf mov call or addr16 mull les arpl (bad) arpl push adc mov push jl adcb add outsb mov outsb ss or inc xchg or (bad) out push aas js iret pusha or arpl push fdivrs das loope xchg xchg addr16 cmpsb or xlat fimul and mov pop fiaddl inc outsb push mov iret lds cmc pop enter mov pop fs (bad) aaa sub inc cmpl out jge outsb jmp adc fs incl or jbe inc ja dec out (bad) gs cmpsl je int3 mov gs adc lods ja adc jae int3 mov mov ja fdivs sahf out xchg push lahf data16 sub ret fidiv adc add mov test pusha jg jo loope xorl aaa data16 icebp rol inc data16 daa jle pop add mov mov push hlt pop outsb popl into je dec push mov push outsb mov rcrl mull pop (bad) ret add popf mov scas or ja aam ja (bad) mov addr16 (bad) rol inc mov pop dec jg push add mov jg mov or and into dec ljmp push adc cwtl (bad) mov mov outsl dec (bad) push outsb call loope daa push iret pusha xchg pusha mov pop jbe adc ljmp and mov mov push push push pop dec mov sub jg jmp push (bad) cmpsl mov lods push mov stos int add or and sahf outsl mov pushw dec push push push xchg ret mov insb push mov mov (bad) ret fisubr xor pusha dec push test push dec xchg jp or and xchg xchg pusha or or out jp dec loopne imul sub xor shrl mov sub dec imul in push test jl dec out pavgw xchg enter pusha shrl (bad) or (bad) insb pushl es insb sub xor inc fst adc dec cmp cltd sbb xchg je aas dec sbb and addr16 jnp (bad) ja data16 daa mov adc lods ja add mov insl or imul aaa outsl out (bad) lock dec mov inc imull push fs xor mov ja js dec seto cmpsl insl out (bad) mov outsb int3 xchg faddl and xchg xchg adc cwtl fisubrl cmp (bad) outsb xor cmp mov movl outsb js mov jge outsl sbb (bad) in fadds xchg adc (bad) ljmp push in sbb (bad) jo pushl jo push fsubrs add (bad) xchg aaa add sbb mov fsubs (bad) outsl pusha aaa outsl jo (bad) rclb add aaa push mov in mov add fdivrs outsl rolb aas xchg and xchg inc (bad) mov jo push adc xchg add inc dec xchg and xor pop dec or rolb aaa jo mov lahf jl das xchg nop xchg ja data16 clc pop inc pushl sbb xor jno cmpsl inc mov (bad) out das sub fsubrs (bad) mov push fs (bad) dec (bad) iret lds daa xor fisubr dec or jno jb push enter jbe inc mov cmpsb lahf add outsl in cmp cmp daa jb lahf jb push add sub xchg add loopne pop or (bad) xchg mov bnd xor add or test incb lahf ss mov add add int imul fldcw push or repz (bad) ss and cmpsl stc xor push or int fnsave push push fxsave rorl adc adc cld or pushw mov shrl adc adc fsubrl mov fcomps inc sbb sbb cmp sti out rcrl push pop lcall orl jbe mov nop and push cmp js xor out fsubs and cmp andb out sahf and nop (bad) lock jmp daa push push xchg shl iret repz add cs inc pusha andb loopne sub push jo repz data16 inc pusha into sti cmp andb stc cmp repz inc pusha andb cmpsl cmpsb adc das insb ds mov xor xor iret shrl imulb xor push xor xor cmp mov sarb cmp pusha cld ds mov (bad) cmp enter dec repz fldcw fiadd inc bound add inc xchg enter cmpsl stc xor push inc fdivrl iret mov cwtl sar idivl out dec pusha nop decb fmulp out jl push dec push cmp dec cmp dec lret loop push out repz loopne push mov iret mov fcomps push sahf push cmpb cmp hlt sbb ja ja push fist push push mov call xchg push lahf out outsb pop pop mov hlt push pop mov repz cld inc pop (bad) push shl sahf out pop inc mov clc cmpsl stc cmp dec pop mov fucom jns push lret popa into imul je rorl arpl out sahf out mov jns jns fs mov repz loope andl mov imul ss stos jmp outsb outsl imul mov stc xor out roll out sahf cmpsl cmp mov sahf loope sub rcrb push jne nop mov fucom jns pushl jbe push jns sarl ret sub xchg sahf out cmp cld sub lahf out stos int and stc cmp repz mov jns cmpsl sub sahf mov aam sbb mov add jnp cmp out shl jge push stc cmp repz into repz jle jns cmpsl cmp pushf int3 iret repz cli sbb scas sahf cmpsl stc cmp or int jns in sbbl jmp imul scas seta xor dec ja mov bswap dec fs dec imul add daa push adc xor (bad) in iret push pop jo lahf mov (bad) push cwtl aas mov daa push stos add in test or or in fidivr jmp stc push or imul mov in pop push dec add push pop aas arpl and push imul lea push inc push mov xchg or aas test mov sarl xchg push aam fcoml jl fldl aas out mov or push or pushf pushf dec and out out pushf pushf pushf pushf out out out out cmp aas mov mov cmp scas jp fisttpll push and push loop std iret out pop mov or out adc sbb and mov and push sub inc inc mov push dec or pop jle inc fidivr imul pop faddl aas mov push xchg adc cmp call lock (bad) call daa jl in jmp inc aaa or xor ja jb lock inc lock aas push xlat outsb and push pop add jbe sbb push femms jle xchg mov jnp aas cltd femms mov in loope mov mov mov fcmovne int3 adc aas fistp push and push test leave add (bad) icebp leave leave leave leave icebp icebp icebp icebp leave leave leave leave icebp icebp icebp icebp xor loopne icebp icebp mov sub rcr loopne out leave leave call repnz xchg in loopne or repnz pop push push or or aas cmp push inc or dec push push aas insl in jbe push adc aas xchg and ret jg push xchg pop mov aas mov mov jl fldl aas lds push int sub inc mov push fnstsw call jl lock pushf popf jge or adc movsl mov push cmpsl jg repz fnstenv pushw jo js and xchg xchg push fwait sbb push outsb aas cmpsb (bad) push scas or lea rorl (bad) loope in (bad) repz mov inc mov cld hlt add jg mov add hlt sbb sbb hlt cmpsb sbb hlt jnp andb adc outsb xchg popf pushf pushf pushf rcr jecxz inc mov cmc sub xor cmp addb in lahf cmc jo js cmp orb insl in fwait add mov enter push rorl or or jno in or iret addl enter idivb out inc daa push dec add push push pop aas data16 push outsb or mov and jle mov or xchg or sub pop and (bad) and call lock testl or es xchg in inc push or or aas stc mov sar inc clc cli je sbb test in adc push adc pop push push lock (bad) sti sbb aas les fadds insb push iret sbb enter xchg push andb and divb xchg jg orl insl in es cmpsl imul sub subl fnop fs clc clc clc leave dec ja stc stc or or stc push stc dec add push add sbb pop add stc outsb aas jns dec aaa jb addl out xchg fisttpl out popa (bad) xchg xchg jecxz repz xor cli cli inc movl ja xchg cli mov cli cwtl mov add stc sbb push iret test mov pop cmp jg and adc lock lea sti lahf push or xorl sti adc push and adc sub and xlat sti sti fs sti sti sti fs sti sti sti and arpl aas cld cld or xchg adc rorb mov iret pop data16 mov fidivr xchg test push pop xchg cld rcrb cld cld cld inc pushf pushf pushf cld std std (bad) enter std iret std daa std or pop pop xchg popf push std nop iret cwtl or cmp mov ret leave leave leave std mov mov and push fimul out out aas (bad) addr16 leave push daa (bad) decb decb sub add incb xchg sbb mov and addr16 pushf pushf pushf pushf (bad) (bad) (bad) (bad) xchg rcrl (bad) mov and incl dec call cmp lcall arpl imul jbe jnp leave cmpxchg imul and imul scas fwait hlt addr16 mov xchg mov lahf scas (bad) push cmp inc add lea pop cmpsl push addr16 jb jge mov xchg mov enter or xor decl or decl add iret add add dec in (bad) dec lidtl push popa add shrl jl push xchg xchg dec outsb mov or out imul xchg mov cwtl add xchg xchg xchg add add xchg xchg xchg xchg add add inc mov fildl test mov and loopne push jmp jmp adc decl out jmp pop push pop push subl add jb push nop xchg adc xchg mov inc cld cmp loopne call xor cmp push sbb fdivs in sbb mov arpl mov or int3 push lds outsb and push test mov mov xchg or rcr xchg xchg xchg xchg out idiv inc mov or adc mov fdivrl sub push xor cmp movsl jo sbb addr16 xchg in add (bad) push (bad) push cwtl enter aas xchg push stos add mov mov sbb push into or or iret mov push fxch fsts flds sub (bad) add xchg and roll pop push push add pop mov aas js push orl or aas movsb pop push scas or mov addr16 push xchg inc addr16 or movhps fcmovnb sub pop pop sub push aaa add inc push dec aas pop inc fadds insb push arpl outsb or inc mov push (bad) or mov fdivrl mov push mov stos imul sbb mov or add and sub jb cmp or xchg cmp loopne dec aas push xchg pop or or jns push orl add out mov ja inc insl das or daa jg cs (bad) mov dec dec icebp cld or add lea or inc mov sub or sbb push outsb aas push (bad) push pop punpckhdq fs adcb mov sbb ss adc aas lods out or jb mov ret jg sbb pushl data16 inc jbe int3 fimull sbb or enter push cmp and daa daa xchg jo jo xchg daa daa daa xchg pushf cmpsl mov push outsb daa mov rorl cmp jmp jo repnz aas or insl in imulb adc xchg and ret dec scas push push adc movzwl js push sbbl sbb inc cltd aas movsb xchg push scas sbb mov inc clc (bad) xchg ja or daa daa push (bad) or or (bad) movsb daa or iret xchg in mulb js rclb in xchg dec xchg daa mov sub push rclb daa daa call mov xchg or jb sti add push push or or ss (bad) push inc or dec push push aas fcmovne xchg in (bad) push adc aas enter xchg mov shl ret xchg aam flds add push adc dec jo enter es xor push cmp in not push inc add (bad) xchg xchg fistl dec sub nop pushf xchg jl adc adc iret push and and push push (bad) mov and (bad) (bad) (bad) mov and (bad) (bad) pmulhrw and (bad) punpcklwd insb push fadds insb push je jl test enter jg enter inc add setbe cmp sub adc adc adc adc pop daa daa daa mov pusha push shlb or sbb xchg ja jbe jb mov (bad) sarl inc mov xlat push out repnz std inc dec and (bad) fcoms xor cmp enter inc adc push sbbl arpl imul add pop sbb cwtl sbb pusha daa sub pop xchg notl clc movlps pushf pushf sbb adc adc mov pushf mov aas int3 fisttp jbe jb xlat or or aas adc enter pop (bad) push imul (bad) fstpt mov push xchg adc and push cmovs push lahf add cltd pop adc mull enter adc or mov push pop add mov fdivrl cmp push inc or enter pop aas sbb outsl or jp test scas adc adc pop or sbb mov dec jb xor fstl push add inc jb adc push nop adc in inc mov xchg cmp mov or mov pushf cwtl inc dec ja int vmwrite fwait and xor bound mov movq into sbb lcall cs cmp sub cmp mov pushf jg jb push cmp leave scas test scas rcrb xchg pop and adc enter xor inc popf push and jmp xchg adc leave pushf lods fsubs leave xchg dec scas in sahf add dec and and or dec jg in popf mov movsb push jb cmp leave in cld lahf (bad) dec mov test movsl scas lahf inc les daa xchg stos in scas fildl push (bad) shl daa scas jb stos in hlt mov xor out (bad) or sbb pop mov insl push mov (bad) dec xor jmp or les rorl pusha loopne mov cmp jbe add mov scas test xor or mov mov mov mov popa in add mov and pop mov dec insb (bad) dec scas xchg pop scas out mov mov (bad) imull out mov jb cmp push idivl out scas mov int3 notl mov adc sub movsl xchg and jg in stos in popa insb jl inc or jg jmp dec (bad) aam insl push and enter sbb sub aad adc jg in ret lcall dec into inc scas in mov les fdivrl test movsb cmpsb dec and push jmp adc aad jmp cmpsb lock (bad) cmpsb fs mov cmpsl lods fimull scas and cltd (bad) jmp jbe repnz jmp cmpsl repz test mov hlt fisubr and test mov leave enter test dec mov push xchg xchg test fs lods fimull add sbb ret stos ja fs std xlat or xchg in loope sbb aas jecxz push jmp jae fxch repz sti aas sbb pop push cwtl xor sbb and orl call xchg xchg test js cmp mov or fwait iret stos cmp repz rcr add fwait cmp xchg jg (bad) inc pop sbb sub jb sbb pop jb push add mov jno jb ror cmp sbb lcall and push sub xor mov adc push addr16 dec add push push pop aas insb and push outsb or jle in jbe addr16 xchg or in mov adc mov les iret adc adc sbb repnz sbb pop add into into sahf lea aas pop adc (bad) push mov faddl aas cmp push inc and sbb dec and add inc mov arpl jle mov sub mov xchg xchg fsubs push mov pop mov and push inc lahf scas jmp enter inc (bad) and push pushf sbb jb pop and imul xchg pushf jnp daa daa mov push mov mov daa daa rcr jecxz push or jmp addr16 xor pop and add xor cmp inc aas dec add insl in cmpsl pop scas or divb jb popa or jno jl pop sbb jb jl (bad) adc scas cwtl and daa sti add sbb repnz add add aas and and add cmp scas scas and inc inc mov aaa daa push dec push jmp iret and daa daa daa daa and and cwtl (bad) mov and aas and iret mov inc mov fnstenv scas pusha add xchg outsb in push xchg or call in in and and push loope in and pop sub xlat push call pop and add jge mov fxch test (bad) xlat and aas mov xchg mov cmpxchg femms ret or or or aas out enter pmaxsw notb (bad) aas xor in and adc adc push or ja xchg test and and jge (bad) scas or sbb mov mov inc mov rorl ror insb iret push hlt adc cmpsl cmp cmp add es cmpsl push pop adc pop push daa (bad) mov leave leave add es leave leave leave es leave leave leave es leave leave leave es leave leave leave es leave leave leave daa daa daa daa aad inc loope daa outsl mov jb add imul jae xor sbb jnp cmpl cmpsb sbb mov and daa daa daa daa and and daa daa daa sub cmp push or aas in divb outsl push xor subb cmp pop adc mov and jae jle in xor outsb setg push adcb (bad) mov or or add push xchg mov inc mov pushf pop scas jnp inc fsubrs xor scas mov push and add mov add pop hlt movq add cmpsl fs divb sub cwtl aas mov insb pop ret mov mov sub aas fldcw fs jmp and adc ljmp xchg and sub cvtps2pd bound enter push jne (bad) push test enter lea cwtl bt stos or push in or daa mov pop mov sub cmp sub add push add add aas mov jnp push rdtsc pop cmp cmpsl or mov jne orb sbbl cmp inc push push cmpsl pushf pop adc mov popa inc pushf sub sub sub popf int3 add pop push pusha pop sub cmpsb push cwtl pushf jo mov xchg mov cmp mov (bad) jbe cmp pminsw cmc jp push sub cmp sti insl push and sub xor enter push inc push gs insl in flds adc cmpsl adc pop call in ds ud2 sbb cmp sbb sbb aas cs lar and xchg push pop daa xchg insb xchg mov jnp pop add jg mov dec mov xor addr16 dec adc mov fs das imul push pop adc push adc das lahf das jg sahf int3 fisub cmpsb add pushf pushf fmull movsbl into mov mov pop (bad) or fimul jmp fist xor pfsubr lock adc mov pusha add jbe ss push jnp fcmovnb insl in push mov xchg pop push sahf or or jbe (bad) rcll sarl (bad) enter push in in adc aas sbb jnp jmp xor adc aas jb jnp xor daa push sub xor xchg in jecxz cmp inc popa push dec sbb push push lahf xor daa test pop cmp icebp das xor xor in in test pop adc nopl jb in and das sub sub aas sub cmp ss aas push nop push pop sub bound push jne push ljmp xor in mov mov aas enter mov lret cmp sub rcl (bad) shrb enter cmpb insl in mull xchg inc fwait inc mov shrb mov insl (bad) aas rorl dec psraw in call add cld dec xor ret enter call add in in pop push daa push das aas cmp jb inc push cmovp aas pop pop jns cmp gs (bad) pop jne sbbb sbb pop cwtl aas mov pop push stos popa mov mov repnz fs gs data16 xchg jno cmp aaa mov inc xor push push (bad) mov or iret dec test lock lods adc add adc lahf xor movhps add mov sar and xor add lcall xor enter xor xor xchg leave leave js mov addl rcl test test xor enter push push lds and and ss jns sbb aas mov xchg push and sbb pop test xor imul bound aaa fs aaa aaa aaa xor jbe aaa aaa inc aas dec aas int3 adc (bad) ret aaa leave in jbe (bad) aaa mov negl mov idivl (bad) aas shl adc bound mov bound outsb xlat cmp (bad) and cmp ds fcmovne xchg pop pop or lcall mov aas insb push paddsw jb je jl test (bad) out or mov cmp pop ret sub or cmp mov sbb or pusha movups (bad) out xchg imul rcl and add cmp mov icebp add xlat dec cld mov or repnz push jo add loopne jmp test push push push addr16 sub iret add cmp adc inc push inc ja jbe dec cmp (bad) bswap iret pop dec fcmovbe xlat aaa push out (bad) dec int3 pop pushf jecxz jg (bad) mov inc dec push cmp cmp bswap sahf mov inc push cmp (bad) js dec scas loope xchg fisttp fisttpll lret scas ss mov jo subb js (bad) addr16 je pop decl mov mov add mov inc fstps lock out cwtl dec fstpt seta dec sbb (bad) pop inc sbb inc adc fisttpl iret mov setle aas cmp in in add roll int3 sbb jb aam fmull in in aas xchg mov aas cmp push sysret sbb pop sbb in test jnp jbe mov mov aas inc out jbe out cmp outsl aas aam paddusb or in aas (bad) (bad) (bad) add adc adc adc aas insl in jbe push xor aas (bad) ror push cvtdq2ps inc push and mov iret sbb mov movsb in cltd iret ds (bad) pop jmp mov popf aas aas add or or inc dec (bad) adc adc (bad) aas inc mov adc add and push (bad) mov aas mov ret orl aaa inc inc and mov xlat inc xor pop xchg movsl jo jg in in inc jo jle lcall (bad) rcrb lret incl cmp mov cvttps2pi dec cmp cmp push fs rcrb fsubs les mov adc and mov sbb (bad) add add add cmpsl cmpsl daa daa mov inc andb es cmpsb iret inc mov stos cmpsl int3 push pushf push push push inc pop popf ret inc push addr16 cmpsb adc inc jg in test inc enter rcr (bad) jbe ja into and inc push inc or adc sbb ja lahf add push mov call fbld rclb push loope mov xchg mov lock sub pop add movsb add dec adc outsl into mov inc mov cmp imul addr16 lock or mov cs cmpsb push imul dec add iret lods das or (bad) iret jg cmp fildl iret push jle xchg mov les jb push incl mov ja fsubrp aas or sbb (bad) loopne iret shrb pushl adc jg adc rcl cwtl (bad) adc xchg mov add inc leave scas dec add push dec ret enter add rcrb mov int3 sahf pushf (bad) int3 add aam inc popf call inc inc test inc xor cmp inc inc jle rorl inc add dec inc mov lcall in inc loopne decl adc adc out dec mov rclb cs lock dec xchg rcl (bad) ja or (bad) leave lods sahf mov mov enter add add in cmpsl push (bad) dec add sbb and sub jns jb or adc addr16 ja jno push (bad) decl mov (bad) mov mov cmp out repnz cmp addr16 adc sbb sahf mov or adc jg shll push aam lcall enter insl movzwl jmp cwtl aam dec sbb dec sub xor push adc (bad) in fs push addb xchg dec ror test dec mov aad in mov clc dec add es adc pop dec mov (bad) mov mov xor sbb das fldt mov iret test add das out dec movsb or daa dec cmp fcomps dec aad dec jo daa sbb push outsl (bad) cmovge addr16 or lock sub cmp addr16 xor cmp fcomps addr16 jo dec cwtl add pop xor pop inc dec pminub dec lock sub test iret add adc dec inc dec (bad) and adc inc (bad) in jbe orb je xor lahf xlat xchg inc dec subl fist push push jb mov insb push pusha jbe xchg pop push push nop push (bad) adc mov pop jno mov rcr dec je push xchg push push and sbb or push push push iret or inc cmpsl push out adc daa daa push push das push cwtl push xor xchg push pop push mov push push (bad) aas rorl pushf lcall rclb out dec ficoml push daa push cmp cmovbe loopne sbb dec add popa (bad) inc add jno fimull mov or mov mov aas ret rcpps fisubrl fiaddl xlat push daa mov sbb push sub popa in inc pop push push lock and dec xor push pop add mov push pop mov push pop fmull lock lds push call push out rorl push push lcall xchg or push pop push inc pop roll push fmul orl (bad) pop push rolb addr16 (bad) ja sub push sbb test idivl adc xchg pop cmp pop push jne add fdivrp sbb jnp push mov mov call mov push adc and aas insl in fnstcw or inc or or in pop (bad) pcmpgtd jno jl sbb jb xchg jg aas lea jnp pop btc (bad) sbb inc mov in in sbb fidivr lcall mulps and enter and and aas adc cmovl fild push addr16 add cmpsb add jno mov aas leave fnstsw cmpsl enter pop iret pop cmp in pop push mov push pop es cs lea jnp push cmovno dec or lea mov xchg pop addr16 movq ja jg push mov jmp xchg pop shlb addr16 cs (bad) add out add jb enter add cwtl cs xor daa pop xlat loope jbe add mov mov jg inc sub and jmp xchg mov pop jmp psadbw incb sbb jb pop or add and mov or aas inc cmovge xchg and pop or or in jbe adcl (bad) in leave lahf shrb in lret pop (bad) sbb iret arpl pop and and xchg pop pop pop pop enter inc aas dec add pop enter data16 jno (bad) test cmp in or xchg leave sbb xchg pop imul leave leave pop pop pop idivb pop add inc xchg push pop pop and adc in or daa stos cmpsl pop jo jg fs pusha pop (bad) pop pop in jbe daa pop cmpsl imull in mov or fimull in (bad) loop in or jle add adc adc and adc outsl cs sub in pop cmpsl pop sbb mov push addl add jo cmpsl pop lods pop jb ss ret dec fmuls pavgw stc jnp cmp or aas decb punpcklbw mov mov adc adc add adc dec adc in popa pop (bad) sbb pusha inc xorl fist (bad) dec adc out popa adc addr16 mov popa dec in inc xor cmpb popa mov mov or out sub sub adc xor dec popa (bad) popa (bad) bound adc flds add out and inc (bad) push sbb fnstcw outsb aas ss push or cmp dec push popa or pop bound jl pusha jb (bad) mov bound dec daa out mov or xchg nopl or xchg pushf dec adc aaa and jb adc int3 nop adc cmp test sbb sarb mov pusha mov aas fdivrs inc add daa sbb jg daa or or ss cmp cmp pop cmp out in inc jb loopne cmc xchg nopl xor adc insb add bound loop,pt sti addr16 push shr aaa push orb jb sub test in push push out orb push jnp xor cmp push push xlat daa dec fmull popf data16 dec (bad) ljmp push mov mov out add imul call adc out dec fnstsw into cmpsl dec lahf push test mov mov xchg aam jmp jmp xor cmp je ja dec scas scas mov mov push and aad add xchg push fwait aas out insb repz push xor (bad) dec inc setb xor adc and xor or xor outsl push sub xchg pushf xchg dec dec mov leave leave test fsub mov in pop pop lds in add sub adc and jb dec shrl and nop dec outsb pop xchg outsl mov sbb pusha int3 pop fs mov pusha rorb daa addr16 imul push addr16 pop sub aaa out push scas in addr16 push jge mov cmpsb ljmp lret push adc or lods add das xor jne out in lock sub in and xor xchg aaa out out (bad) push adc push pop pop xlat xor int out cwtl xchg mov mov push and sub ss test and call test xlat add sbb mov dec mov das mov fild mov mov adc shrb inc mov aas mov rorl mov mov mov shll jbe dec jnp das ret sub xor (bad) int fxch fimull movsl das aaa (bad) notl mov rorb int leave mov inc lock in imul adc dec pushl pop or or sarb or fiaddl insl cld adc sbb adc jg repnz push das mov mov xchg sar push jl test mov adc hlt scas sar (bad) push addb repz hlt data16 inc fadds mov hlt fs dec dec jb cmp dec gs scas jbe jbe jae jo xor nop in fcmovnb mov xor or hlt hlt popf mov xor data16 and test dec cmc incl scas scas jno push or imul xchg push push scas loopne xchg pop mov push push out xchg rcrb add negb push inc inc push push mov or notl pop jl rorb fcmovne in push sbb js lar push dec negb (bad) in dec scas mov (bad) ja add rcrb out xor addr16 mov addr16 addb cmpsb loope out neg loopne mov jae jge pusha and add and and push (bad) dec shr push call cmp imul push push in inc lds push mov mov push push mov notl mov mov punpckhwd and or stc push loopne (bad) scas (bad) call adc pushf push push push mov adc push (bad) nop dec push mov or pop mov mov lock ret or testb sbb cs or imul jb mov cmp inc cli mov push outsl inc pop jb or es inc cmp mov push mov xchg sti incl jp xchg or push sti push scas push add fs add ds lods add xchg (bad) xchg jns or sahf daa cmp and dec sub scas ds push cmp xchg xor repnz cld push mov or inc inc sbb out push rcrb outsl inc pop stos sub scas enter adc fisttp jb inc mov jnp or mov inc dec js cmpsb out or mov add push (bad) std dec dec enter inc roll enter scas std mov std xor jnp pop cltd jns jno mov add lahf push aad std ljmp rcr imul incl cmpsb mov out dec adc in insb inc push ljmp dec or incb (bad) dec xor insb xchg mov adc insb mov stos fildll incl add rcr inc pop insl sub mov push dec or dec push push mov ljmp xchg jge sub or adc lea xor jmp (bad) push fist add rolb addr16 movsb cmpxchg sub jno inc xor add imul push push push js and push push jbe mull insl add jbe add push xor push fdivl push js xchg add mov or test cltd addr16 fwait pop addr16 rorb in mov (bad) out movsb daa push pushf add loopne shrd xchg pop sub test add popl inc popa in rcll (bad) mov psubusb adc mov orl test lds movntq out iret add outsl adc mov outsl cmp inc and add scas pop fimull outsl adcl add lcall shrl outsl leave push inc adcb xchg test mov add scas add and inc fild cmp loop or inc sti mov xor in sub mov adc or mov popa out ja loopne add jbe adc ss lcall add pop fcmovu cwtl pop rorb setl sub sldt inc call pop icebp pop inc inc daa cmp addb mov add adc call mov rcr pop jbe pop adcb ljmp push jne or imul mov dec fild and les testl or fmul add (bad) push push aam (bad) jne push fmuls fdivrl mov aas inc push lcall add push js dec outsl outsl jo outsl fs lcall fild mov add cmp sahf int push mov pusha jle xchg nop add jne orl incl mov leave jnp mov nop nop ss aas push rorb push jbe push lahf jg xchg roll fcmovne mov enter adc popl rclb push push inc roll out ds inc out jg or sbb inc and pop dec sbb sub mov repz dec add shll daa xor iret push mov add aad inc pusha or aas pop mov mov out mov push cld in aam movsb nop jns out jo push inc xor pop sti clc push fadd mov test dec cmp insl sahf out sbb cli hlt iret cli call push xlat movsb das (bad) cli lods iret (bad) cmp cmp cli mov je cli pusha (bad) out mov cli inc push mov push fcompl cwtl subb cmp out and add lock cmp repz mov jns iret and idiv call sahf les or ss push addb sahf je fs pop insb fidiv lds imul repz repz or pop dec mulb push or hlt jns out fdivrs sahf out pop inc cmp repz sbb cld aam cwtl js iret repz cmp add in idivb repz rep iret repz push iret mov sahf cmp adc cld fadd cmp repz mov cmp repz call ds inc icebp out lock iret repz mov nop je jns int cmp out clc aam mov pop out outsb out pop push xor ss inc out clc push push mov iret rep cwtl mov addr16 and sbb in hlt sahf out sahf loopne mov je negl adc call sahf int3 mov mov sahf out inc cmp sbb sahf out out outsb jmp push call out mov xchg jl cmp addr16 and cmp outsl out in imul lock out outsb pop cmp call fidiv push mul (bad) out in in push mov iret mov dec jecxz mov sahf out cmp loop push nop jo sbb je xor sbb and sahf lods sub or loope mov sahf out nop js xor repz out add in loopne int cmp mov push out sahf in (bad) mov nop fnstcw in jns insb iret fbld dec iret leave xchg lret (bad) fistp fisttp cmp cmp clc iret fsubp xlat fnop (bad) fisubr iret jl dec sub cld out fistpll frstor fstpl fsubr push mov insb sahf out push fcomi push (bad) jo fcmovu jns iret repz pop sbb fmuls dec adc rorb cmpl add jns xlat push ds push cmp xlat and (bad) mov faddl mov cwtl jo sub repz lock aam aad push xchg addr16 insb dec and aam sahf out sahf aam mov mov iret out fs hlt rcrb inc sbb in fistpll out xchg push jns out push int3 movsb jl dec repz out add fsubrs iret dec sub clc aam iret mov sahf push mov cmp jle rolb mov iret dec sub int3 loopne or pop int3 lret rol mov cwtl ss xchg ss test mov jo out pop cmp ficom leave rolb test jl mov sahf pop dec and in loopne cmp repz pop dec xor jns out (bad) cld ror mov out pop inc sub jns lods jnp (bad) pop add xabort aam jns out lods cwtl cmpb repz add enter sbbb in mov ret mov push mov push push ds aam test iret repz je push inc ja int xor rcr ds inc rol cmp push ficomp sbb jo sahf ja clc push lock out mov inc les mov pushf mov cmp repz fs (bad) mov clc push enter adc out cmpsl mov sarb mov js push cmp repz inc xor pop iret repz mov jo xor cmp or in push aam ss repz jo cmp jns mov push insb push adc mov (bad) sbb andb sahf divl loopne cwtl xor out inc mov pop inc inc or (bad) outsl jns push sbb (bad) mov push les push mov repz mov mov iret mov sahf movsb je mov nop jo mov jle fadds jle xchg mov mov push pop iret cs mov jle mov iret (bad) mov mov push int3 into into iret mov xlat mov (bad) mov mov fcompp mov mov sub iret mov push xor sahf mov lods cld mov sahf out aam or mov and clc sub shrb adc ja into rep lcall pusha repz sti es pusha xor jns int test xchg pop and repz cmpsl call sbb out cmpsb lock cmp rep movsl lock or popf out movsb fcoms mov in push enter mov jns mov fs iret sti ficomp push int3 mov addr16 loopne mov sbbl sahf dec mov mov cwtl push pushf sarb repz jo fwait hlt test loopne,pt (bad) lcall addl repz lcall loopne xchg (bad) cwtl jbe mov xorb jl js sub jns jns call clc push int3 rep sahf out and clc loopne repz les addr16 adc sahf out mov rep sahf out or xchg clc in repz rol mov mov repz push dec xor iret repz xchg hlt push aam mov mov pusha dec outsl repz aaa xchg pop or nop lock test add loopne cwtl dec adc cmp (bad) lock mov cmp mov (bad) mov push test sahf repz xchg pusha repz out mov shlb (bad) mov (bad) adc mov cmp push mov mov pusha cmp out dec xor adc adc xlat in add push xchg add cwtl sahf addr16 sbb hlt rolb push cmp test (bad) iret sti into pause push pop add mov int3 (bad) rep (bad) clc aam iret out ja aaa (bad) pop jl movl hlt xorl movl jns iret and jg push jge jle push mov adc cmp mov in xchg insb out out xor outsb jl jnp push lods iret out sahf jl xor jp enter cmp xor jp push aaa lock jp push jns sahf int xor mov shlb ja fsubrs repz inc jbe push nop dec add out ss cwtl js sub rep je aam mov iret sti fcompp jae outsb jae jb push mov cmp jno les jns jno jo push xchg insb sub call les push iret rep sahf push dec adc enter imul adc push push mov push push jle in lods mov into mov or pusha sahf addr16 hlt mov ss cbtw push xor hlt loopne aas aaa gs nop ss sarl aaa mov arpl and bound popa lock enter out jnp popa js (bad) popa out pusha test mov add cmp pop loopne movsb scas pop enter cld fistp pop cwtl push js sub lock fistp (bad) pop addb (bad) pop out pop call minps pop pop mov xorb loopne,pn aas pop push inc cmp sti fiadd ficomp pop rolb (bad) mov mov jg push iret repz and pop in shl jns out cwtl subb pop cmp les jl mov dec pop es mov das pop pop push jbe push push iret repz xlat push xchg push rorb adc fadds cmp push push xchg push in in jns movsb mov push add push insb fidiv cwtl pop push push mov test into repz dec out ss push push sub cmp leave dec call jnp popf int dec hlt into dec es scas dec sahf aaa push dec rorb repnz (bad) dec jl add inc dec cmp (bad) adc jmp rep sahf data16 sub hlt fsub fnstcw mov mov cmpb repz push inc xchg push cwtl dec or out sahf fdivs clc cmp repz mov pusha adc out inc fdivrs inc loopne out cmp repz js sub mov jg iret cmpsb or xchg adc pusha iret out cmp aas mov out cmp cmp cmp cmp push js sti fidivr push cmp ds push mov cmp cmp cmp push mov (bad) cmp adc aaa rcrb inc push ss adcb js es push js cmp out xor mov sahf addr16 enter arpl (bad) xor xor int3 out cmp addb call sahf mov das in mov jns addr16 add cs js mov jns es (bad) out sub sub push lods mov or in push sub iret repz lock int3 pushf pop adc loopne cmp daa xor out cmp outsb fadds test cmp cmp dec sub and js mov ss push outsb and adc push fnstcw sti xchg and push jo adc mov cmp out and cwtl test out cmp pop cmp pop fadds les cmp lds outsb push lock in xchg out or ret into push sahf push push cmp jl push cmp push (bad) sbb push scas in lea out das sbb outsb aaa sbb nop mov sbb rorb das jbe (bad) (bad) lea sbb add sbb jns iret repz pushf push adc neg push sbb fildll sbb out jnp add pop lock test jge out pusha pop push lock cwtl iret rep sahf and inc pop cli sbb adc into divb add adc sahf je inc push out sahf int adc mov cmp adc mov daa xor mov push xor iret out adc jo loopne push clc fnstcw ja and or dec scas add cmpb or or jns or fadds jo or ret out mov ds push iret pop fstpt jge push lock movl popf popf in or pusha iret add xlat add out mov add mov fidivr fwait inc add xchg or iret out pop dec subb test out fbstp cld fadds mov sti test jns out cli inc cli stc enter mov enter int3 lahf add mov mov imul push mov push hlt sahf addr16 repz jge rep repnz icebp mov lock push xor out idivl out out rolb ss dec in fadds addr16 push in lock jmp int cmp pusha ljmp into ds mov call sahf addr16 out mov out fildll inc in in push mov iret jecxz nop loop,pt loop cs cmp loope push pushf sub fdivrs fnstcw fnop mov rorb imul push fucom fadd mov fsubl fcomi push addb loopne fisubl mov insl adc push push sbb mov xchg aam push addl lock loope rcrb or lods sahf push outsb aam lahf add jle or mov iret jnp (bad) ror push pushf cmp mov cwtl push rol push jo test jns iret xor into in pop addr16 sbb mov (bad) divl push inc mov jle js mov pusha push mov cld das mov dec lret inc lods pop fldl push pop inc push add nop push jbe nop jae sub mov sub and pushf add mov dec pusha (bad) aas and push imul fwait sub push sbb fs inc push pop arpl outsb xor jns rcrb scas clc fild jg xor xor aaa aaa sub das je xor cltd mov xor inc dec dec sbbb or cwtl (bad) punpckhwd dec (bad) pop dec pop sbb decl aad jo jg ja je push mov xchg cmp jmp pusha push mov fstps repz push jo push push popf out mov mov push inc push ss adc je iret divb cs sahf inc aas push pop inc mov mov aaa push sahf sarb xor pop nop push rcrb push lahf jns in in cs jg mov lock push loope push loopne loop,pn ds jns loop loop xor (bad) push fidivr pop cwtl inc cltd push cltd fidiv fist fidivr fbstp es (bad) cltd inc lcall fnstsw lahf adcb out popf adc in in cmp mov loopne add inc pusha jl mov aas cmp inc push inc mov inc sub es movsl sub insl jb je clc dec ja cwtl insb pop inc lock cmpsb shrl mov mov mov add jg insl ss jne lahf (bad) xchg and add inc outsb dec or testl or sbb aas push inc sti xchg jl cmp mov inc or testb inc or out out int3 push xor out adc pop adc push sbb push pop mov pop push mov nop outsl sub add cmp pop inc jo jb jbe sarb aam iret (bad) dec push push cmp xorb and aas ds addr16 aas add ja and aas dec push nop mov jns inc inc inc inc and inc xchg inc sahf (bad) push ss inc inc xlat cs xchg inc inc out loopne idivl ss inc cmp idivb inc inc loopne inc cmpsb inc inc aaa sti mov sahf inc dec adc dec sahf insb sahf negl xchg dec dec push dec or jns (bad) lods out push out push dec mov loopne dec mov jle jg jo scas fcompp jnp dec push push xorb push loopne fiadd flds push xor pop jnp sbb jo inc cs push sarb jbe lock rolb dec add mov ja fisubl push cmpb in cmp lock and push jns repz dec mov loopne adc dec adc bswap mov xchg addb xchg xchg pop jbe cmp arpl gs sahf cmp xchg (bad) ss xchg xor pusha push out cmp nop (bad) lock and or popf mov dec mov popf and mov arpl mov lock pop sbb pop je pop pop pusha into mov add jb les aas (bad) pop dec dec xchg aaa call nop aam add in cltd cwtl or push jl push call popa jbe cs js aaa aam std mov popa (bad) xchg test pop xor popa das daa adc aaa lods add push push bswap push xor out je outsl push jo gs adc xchg cwtl movsb pop aas or loopne add ja add jae fs nop outsb pop jge push lds mov jns add dec add outsb loopne mov mov (bad) mov mov cmp movsl push add sbb bound mov add mov xor inc in push mov adc xchg testl sub jae aaa (bad) inc xor cmp cld fs mov insl pop sub push inc imull loopne xchg in gs pop je add or loopne addr16 sub push jge out sahf push xor add hlt loopne push cmp mov pf2id pop insb adc dec xchg or push mov adc jg rolb add adc xlat xchg lds mov jb mov ret inc rol inc imul inc mov icebp daa inc pusha pop jno pop sub push push add sbb rcrl adc movsl shll addr16 outsl std ss pop sarl stos packssdw mov (bad) mov jae data16 jo inc add dec popa mov rcrb sbb mov xor add jbe xchg adc jl push fmuls push loope cltd mov add fwait cs testb aam scas faddl jg pop inc aam adc pop ds stos dec clc mov dec jg xchg pop sbb xor pop or xor wbinvd mov leave in or or xchg fisubrl adc pop adc xor jbe popf push addr16 das push xorps pop imull nop jbe mov (bad) icebp jb push pop in mov jb fsubrp test pop mov pop movsb fbld sbb pop pop or inc mov adc push bound out add lretw daa dec sub sub inc (bad) or push xor cmp cmp (bad) test fcoms mov jg imul movsb push (bad) jns jb,pt (bad) and movsl sbbl subb outsb mov dec cltd cmp lcall iret mov mov cld add mov jle adc mov push ficompl pop fisubrl xor xor cld rcr fsubp stc xor (bad) jle sahf out adc sti and and adc insb sahf out or cli cld hlt iret repz call sarb cmp mov cmp repz mov cmp nop test insb push fs repz push dec cmp fdivrs repz sbb stc cld mov dec push hlt out sahf out in in aam sahf out sahf les sahf out pop dec inc cmp fdivrl out and adc repz sti mov clc push lock addr16 mov push xchg test pusha dec cmp sub imul jbe and movsb mov push add add cli and psubusw outsb mov inc (bad) dec push outsl mov mov imul push dec jecxz out mov test jns pop inc add add shl dec das orb imulb or adc pop push pop adcl dec mov or pop ret pop add das ja sub push pop les mov aaa iret pop push jne xchg outsb and push sbb push or add scas mov mov xorl push dec cmpsb sbb inc xchg sbb xor loopne das pop hlt lds jns add and add or pop gs mov push xchg adc xchg push pop adc adc push test cmp imul inc sub sbb mov (bad) lret xchg das insl add inc jb addr16 popf popa arpl xor aad jo cmp xor inc in insb dec rclb nop sub and roll (bad) imull sub or fsts add mov inc sbb push popa sub repz push js repz pop dec xor add repz fadd mov js repz fs dec cmp sahf out cmp add in fdivrs movsb adcb push outsb add fsubp jns xor and add inc jns ja push aam push lods nop jl imul out fadds adc push push mov jg xchg ljmp loop mov inc cmp jo push (bad) or sub sbb jg push pop fnsave or jo xchg imul add mov mov lods movl inc insb pop insb (bad) lahf fiaddl push pop mov call dec dec pop add mov and cs imul fisubl dec imul mov std mov push lods roll add push stos push add or shrl or xchg ds add lods or xlat jbe xor mov push inc xchg jecxz or decl xor inc push fwait push or pop rorb inc and add and push sub push sub hlt mov add and add (bad) (bad) mov add cmp loopne mov or sub jg bound addr16 or jb xchg pop and (bad) sbb jg push pusha test mov push dec test and or movsl mov jmp inc outsl add inc dec repnz inc pushf or in ds ret mov adc pop stc and mov leave sbb jmp ret inc and sahf mov sub inc rcrb and sbb cmp (bad) incl xchg xlat xchg inc push add inc stc mov adc mov decl (bad) (bad) fistpl js inc outsl (bad) loopne jmp xchg test mov cmp inc mov fisttpll jmp stos push inc mov repnz test pop stos clc scas adc (bad) (bad) inc cli inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or (bad) (bad) (bad) incl dec dec pop inc in xchg cmp xor dec cmpsl in cmp sahf xchg pop (bad) (bad) (bad) (bad) lcall lock mov popa sar mov fsubs stos xchg clc repz mov sub outsb dec leave fwait xchg and and aas mov add sti aas jno or mov pop fs dec (bad) incl clc xchg outsb adc sbb pop pop mov das dec loopne icebp aas rorb and mov mov dec add imul (bad) mov ljmp or xchg mov into popa test ja stos in (bad) (bad) (bad) aas das dec pop loope les aas xchg les jne int mov addr16 (bad) (bad) (bad) lcall mov xchg aas and (bad) loop mov jp popa push pop sarl jl mov das adc push mov inc inc bound (bad) (bad) (bad) jmp sub jge mov inc rcr push arpl int3 and call (bad) (bad) (bad) cli cmp jp and cmp mov cmp std xlat cmp mov sbb (bad) (bad) jmp inc inc pop mov jne fldt cmp jno shlb (bad) out dec nop pop cmp (bad) (bad) (bad) (bad) fisubl xor push lahf inc pop mov sub dec in ss push scas into imul pop add rcr jge call mov xchg cmp push andl dec dec gs std orl in xchg jge pop ficomp frstor and or sbb mov add push mov dec xlat aaa and add sbb mov push or popa inc imul jnp mov (bad) pop fs mov sbb sbb xchg and pop mov test sbb jb mov js mov adc jb enter or or inc mov sbb sbb jb enter push sub and inc mov and sbb sbb mov add adc adcb add nop xchg adc lods or xchg iret add pop js mov fnstenv enter inc and popaw jo push (bad) cmp inc inc adc addr16 xor inc xchg inc push bound lahf bound loope adc jns out push sahf xlat fldl sysenter push and pop xor fstpl dec out mov dec adc push adcl pushf movsl data16 inc dec push cmpsb sbb inc inc push and adc and je push addr16 push pusha push dec ja sbbl (bad) adc push mov add pop sahf jae popa jo inc ret scas into arpl ret pop adc inc push inc dec push push add (bad) sbb lcall xor sbb push fs cs pop xchg and popa jne jl dec inc xlat sbb (bad) xor adc outsb jne ja cs movsb xchg jo orb rol push inc dec fsubl data16 push inc inc cs add inc and inc je and jl dec inc push dec out pop (bad) lds xchg lahf loopne std xchg jo inc pop inc mov jle sub sbb (bad) pushl fwait or les je and adc jmp ds (bad) jmp (bad) popa arpl movsl loope fdiv pop pop lock and and mov push (bad) (bad) (bad) (bad) cmp daa mov mov sub insb push addr16 call xorl (bad) (bad) (bad) incl outsl sub icebp lea jecxz (bad) push adc cld in mov pop ljmp stc pop lahf fiaddl shll cmp aaa jg scas imul mov (bad) (bad) jl add sbb jp lods mov add mov ret jge (bad) (bad) dec (bad) push mov xchg rclb mov sbb mov mov lcall test xor mov hlt dec sub rcrl (bad) fildll push (bad) (bad) (bad) (bad) in pusha inc sqrtps sbb jmp adc insl leave and sbb push test (bad) (bad) call movsb mov xor pop inc pop dec stos pop or mov fcoml adc (bad) jg incl cmp add dec out xor enter ret dec sti scas dec (bad) (bad) (bad) decl xor cmp std and and stc xchg cmp dec fiaddl pop add and (bad) (bad) ds push fstps outsl push xchg mov inc and (bad) mov nop lds fs aad adc fdivrs shr (bad) xchg mov shrl or int jbe ret rcrl and mov cmc (bad) (bad) jmp out icebp mov in out adc fnstsw sub jg (bad) jno clc aas sub cld (bad) lcall push jns cld into mov in sub mov jae divl testl sbb or and into dec dec lea and enter ds and push cmpsb test pop xchg cmp inc sti push push idiv dec or xor (bad) iret pop add out xor cvtps2pd fldcw fs imul int3 fnstsw pop add xor xor inc das or and or and pop incl inc jae fsubr mov ds gs fdivl pop xor pop sti add xor enter pop xor mulb mov ds add mov insl fstpt pop rorb xor adc xor sbb pop test push fisubl sub ds cltd cmpsl das shlb lea jnp ja dec xor xor inc fisubrl test jns push xor inc pop insl fcomps xor pusha in inc arpl or xor xor sbb insl xor leave insl (bad) mov dec call jge xor dec add cmp push xor insb or cmp ds mov xorl and mov or cmp mov xor xor xor cmp xor pop hlt inc push xor cmp and xor call adc push loopne fadd imul cmp in lcall imul pop sub or jb ss cmpsb imul jb pop adc aaa push xlat int3 lcall xchg js inc push data16 shrl pop add push xor imul cmpsb pop adc xor cmp xor imul (bad) je jo xor or push xor sbb imul cmp jl imul pop add xor es sbb adc imul xor scas cmp xor push in xor fsubl sbb loopne ss movsb mov scas andb pop pusha pop and sbb cmp sbb push incb ret rolb imul or gs mov xorb sarl xor cmp scas bound xor sbb xor adc jo int3 or insb imul loope xchg xor imul or xor into sbb mov pop cmpsb xor fmuls scas mov push pusha data16 xor rorl sbb imul and in push loop push data16 idivb rorl jbe fidivl imul add push mov ss xor popf insb dec in imul sub rorb xor push push xchg and (bad) ret pop inc or imul add loop mov or pop push and popa jne cmp cmp push testb imul push sub sub adc pop pusha imul (bad) mov adc cmp (bad) xchg imul lret cmp mov ljmp mov xor imul xor into lods fmuls je mov xor add cmp sbb jb rol jo sub xor xor stos xor aaa mov or fnop lret sub (bad) mov aad (bad) or addl loopne rorb or cmpsl xlat dec mov test xor dec loopne lods pop inc xor (bad) lods adc sti sahf aaa imul mov cmpb push jo sub bound mov and scas jl scas (bad) add sbb repz push es push inc xchg jbe imul cmp dec aaa pop sub sub ds dec aaa adc cmp pushf rolb add or (bad) (bad) insb mov xorb or inc push or and jbe bound in push cmp arpl stos jmp and test mov imul push lret add sti stos orl js add ret pop push lea insb popa jo and movsb and push xor xor sarb and push mov mov or fisub cmp jp imul aad das inc sbb imul jo cmp jo ret (bad) sbb cwtl int3 imul mov loope cmp cli outsb add push or mov in adc out imul and ss scas add mov sbb sbb outsl imul mov add loope ret pop (bad) add xor adc imul sbb inc mov mov xchg ret inc xor fadds das inc sbb jbe xor and imul test stos cmp ret dec loopne xlat mov cmp ss mov jo lcall xchg insb lcall push outsb imul jbe into (bad) cmp pop popl mov lcall imul imul xor and push xor call xor jno push vpmulhuw lret dec xor jbe sbb xor data16 jne pop add rcll adc (bad) sub adc sub (bad) jne test mov cmp (bad) or or or jne jo adc ss xorb jle add cs pushf sbb enter inc pop cmp movsb or mov mov lods cltd fs popf inc adc or fsubrp jb test mov dec push sub hlt xchg jb add jmp bound adc inc push jo jecxz stc push movb xor ds aam dec repz xchg imul sbb add imul es imul mov ljmp mov (bad) sbb mov cmp adc pusha es xor xor or dec cmp int3 out xor subl xor mov pusha mov cwtl or fmuls mov or cmp mov push cmc lods pusha push outsl imul jmp and sbb or cs sbb xlat ret sbb xor lcall cmp les push pop mov push push cmp cmp inc cmp push outsb push cmp sbb popa enter jmp out sbb test lcall shlb xchg add cs fs xlat sbb cmp or (bad) dec xchg mov test adc js jl lods mov mov pusha orb push lods js adc rol add fidivl sub cmp add fbld mov imul add std add and push sub (bad) gs int orl jno arpl mov outsl and mov lahf imul enter ljmp xlat incb xor adc cld push cmp inc pusha addr16 stos bound sbb stos push jo mov scas sbb movsb loopne add mov call and add or data16 je cld xor push mov lods inc push ja xchg repnz out popf ret xlat cmp nop aam xchg push pop jp jmp and mov jl jo pop cmp jo sub imul or push ljmp lds or insb aad aaa shrb jo pop clc dec je lock xor dec cmp lock cltd dec adc (bad) mov faddl push cmp push push imul data16 xor mov insb xor fdivs jb jb ret or push notb add mov (bad) jmp incb add ret (bad) dec add adc jle mov int3 test vcvtps2pd movsb dec push cmp pushf xor adc cltd or (bad) lods cmp push imul sub inc sub adc or loope stos popa and or test push push das cmpsl mov xchg add int3 test imul mov inc insb leave mov rcll push sub dec jmp test push imul xchg lcall sbb mov pop mov mov outsb popa addl cmp push ret or xlat fidiv sub fsubr andb imul mov adc cmp dec or jp push pusha mov pusha dec aam mov pop cmp out xor mov mov xchg add jbe push movsb xor add pop outsb jbe gs into in mov fs ret sub rcl orl cmp xchg aaa mov or test rdtsc jo daa ret hlt cmp pop sbb adc pop inc lds xor inc jne jl adc hlt js mov ret add sub int3 adc loopne sub pushf dec popf pop lds inc mov cwtl xor insl cltd cmp cmp dec or sarb add and popf je xorb xor cmp nop cmpsb test cmp xor ret xor insl xor inc mov add adc sub push cltd xor jl fdivs addl push mov mov imul jmp lock repnz aad adc sbb jp xchg roll sub cmp adc inc lds and popf or pushw fisubr push sbb es inc mov cs mov insb mov imul or push jle mov xchg lds xlat call xchg sbb rorb lods push dec push in add add pop push push data16 fwait add shrl xor or dec dec sbb lret out (bad) adc sub movsl sbb or dec imul data16 popa or iret and xor xor (bad) enter xor xchg xchg cmp lods hlt loop xchg xor sbb pop lret mov inc push inc mov movsl pushaw xchg dec lods mov add pusha xor push lret into sbb pop int3 pop cmp pop sahf push test mov dec or or lea lods and sbb dec out test or push mov xchg mov push pushf insl push rclb das les bound and hlt setno xor xor pusha push inc adc mov sbb (bad) add xchg aaa or sub fwait out hlt add aaa sub mov repz hlt push mov cmp sbb adc test xor add pushf rorl mov aad mov loop xor jno dec xor in inc mov movsl xchg and sub rorb jp stos push inc test loop pushf xor push or pushf sbb pop movsb inc push sub sbb pop lock pusha add xchg aam insb inc int and dec push add xchg add or mov and (bad) mov sbb rolb xor loopne bound jo (bad) mov inc and xchg and test xor dec cmpb std (bad) cs test jecxz inc push out movsl loope repnz lock (bad) stos cmp movsl or arpl sbb adc imul mov inc cmp jae push mov sbbl xor push loope aad cmp and or sbb and sbb loopne add stos test outsb mov adcl adc mov mov mov mov stos inc out fmull push and rcrl les (bad) pop xor ss loopne pusha mov mov xor arpl sbb adc test int3 mov adc and mov test (bad) dec pop lods inc icebp jb mov lret push inc or popa and ficom pop sbb push mov roll inc pop cmp or push adc pop jo cltd mov roll shrb xor mov cmp inc iret sub or mov xor mov shrb mov pop cld sbb mov adc mov or out sbb (bad) jo or pop cmp adc push or hlt push nop sbb add out aas test mov shlb mov inc sbb mov ljmp scas xor or and popa shr pop sbb add mov pop pop mov outsb sub (bad) enter ret mov mov push loop adc jno sub cmp and std add xchg lea xchg lods cli ljmp imul add or dec ret test inc lock and and adc add sahf xor cs (bad) scas and dec xchg int3 inc stos push inc sbb cmpsl pop xchg xor scas and es sbbb sbb call jge xor inc or pusha arpl cwtl lea es sub arpl mov xchg sbb lret sub jp in movsb xchg or imul mov rolb dec cmpsl scas xchg push dec into mov mov movb das fstps push mov loopne pop mov icebp (bad) sbb je test sbb adc sub (bad) xchg sbb aaa loop add out xchg test sbb rcr jnp sbb das enter dec outsl pusha mov insl adc mov push jno xchg pusha addb ja xor and mov sbb sub and orb jo cmpsb adc icebp and ret add push movsl adc and xchg push add dec (bad) xchg or cmpsb mov mov xor movsb adc push dec and push inc imul cltd mov xchg test xor mulb inc in imul call or movb adc mov cwtl aad imul push add sbb or loopne pop loope adc jo fidiv addr16 xor pop mov push addl inc cwtl (bad) ret es push and mov jb cmp adc imul pop xor add or stos adc or pop add push lea jl rcl inc outsb loop cmp or sbb loopne mov xor adc stos std cmp es test mov jl dec dec pushf inc es mov push dec aaa xor xchg push test dec mov xor lcall or (bad) jb adc dec mov ret add jg jo pop sbb enter arpl xlat xor jle jecxz or ret into ljmp cmp sub into xchg rcll or lods imul orb sub sahf scas inc pusha gs cs dec test xchg push mov mov dec inc ret test aam fldt imul inc add cmpl loopne adc jecxz sub ret rorl ret mov dec add inc mov cltd jmp sbb adc adc ss movb add adc cmp (bad) fsubp xor ret popa mov pop jecxz aaa sub (bad) cwtl or mov dec adc adc ss sbbl and nop je push lods divl ret mov fnop (bad) lods test (bad) fdivrs cmovle test and xor dec mov inc cltd sbb loop or pusha inc fadds sub imul icebp in popa mov push xchg mov xor bound fisubrl or lock add or popf add xor stos mov aaa sarb sbb jmp jne xor jb ss rclb mov jno mov adc xchg cwtl and in pusha (bad) shrb xchg sub aad dec mov xor push push mov inc fstpt push popa clc push aaa adc (bad) out xor push mov pop mov sbb dec xor mov add and mov push push xor jo mov popa arpl cmp jnp inc test xor inc lock jne sub xlat inc (bad) mov mov cmpsl xor pop dec mov xor arpl fs int3 ret push lock (bad) lock ss xlat enter in imul adc mov xor pushf inc cmp cli test sub jecxz fstpl mov mov scas adc leave lods mov into xor cmp inc inc sbb xchg call fiadd dec test adc movb mov xor mov dec sbb push adc mov sub subl test pop andb insl pop inc sub push stos ljmp ss push ljmp movsb push sbb mov imul xor ss cli jns into adcb adc push cmp dec gs xlat out xchg (bad) cmp sbb sub and push imul (bad) xor sub int3 xchg aad mov xchg addl int3 aad xchg add push mov (bad) push (bad) xor sub adc mov scas or scas shrl dec add adc mov imul push push cmp adc fidiv inc pop xor push xor adc pop xor enter xor sub mov or or sbb lcall push mov mov pop ret mov pusha dec shrb (bad) push add xor out xor push and push scas and inc push lods rcr (bad) add push and test xor arpl leave push pop or scas (bad) (bad) and and sub xor test adc pop inc mov sbb loop cmpsb and iret outsl push mov inc or jns push je add inc or mov out push or push aaa outsl adc or gs pusha push mov ret add inc push (bad) mov scas mov sbb or imul or push inc mov je xchg jnp cmc and imul or adc or stos adc add mov mov or xor mov and xor sbb sbb dec adc and jo insb (bad) rcll test pop jmp test sub push add adc aad (bad) add outsl (bad) xchg push shrb aam ljmp and dec mov cmp sar pusha jno outsl jne push sbbb (bad) jo inc sub mov cwtl shll xchg mov imul mov or fsubrl add add fildl push cmp push push cwtl les cmp sub adc jmp sub pop jb xchg mov xor lds popa mov or mov popa lock inc shlb push xor jo in or and loop or mov xor mov sti rcrb cmpsb pop mov pop dec movsl sub xchg sbb and js add dec xchg pop pop loope jns cmp adc sbb mov movsb xor mov lock int3 add rolb fimul out out fnstcw nop and sbb call cmp lahf les daa xor mov lret dec fmull adc or jmp (bad) pop push insb push dec lret push cmp inc add inc test xchg gs pusha in fsubl arpl dec push inc push in lods loope into loopne pushf mov or add pop dec add inc xor sub cmp jmp dec mov cmp pop mov movsb push cs adcb sbb pop shr xor lds test outsl mov cwtl pop and dec cmp adc test adc stos or xor hlt ret xor and dec aaa call push adc cmp adc and mov loope mov xor out xor lret push popa outsl dec int3 test dec push dec inc repnz test xchg cmpsb cmpsl fs or jecxz cwtl or ret and or mov loop jmp cmp dec insb or ficoml inc adc xor fsubs ja or clc jmp popa or insb js test enter mov push xchg (bad) cmp xor in dec fisttp insb pop outsb out (bad) arpl add or aad and ret cmc stos and adc movsb or jp xor subl push scas or lods aam push cmpl fsubs sub adc adc xchg out sub mov pushf or push sub mov flds push lods sub orb adc (bad) shll jecxz jbe loope or push lds lea cvtdq2ps add in negb rcrl cmp cs mov jo adc and push (bad) jmp jo pusha mov adc subl mov orl mov cmp call ret nop inc inc loop xchg add push je movsb cmp sub mov xor popf scas push jb jno leave mov xor pop repnz jbe xor add add cmp cmpl call jp mov jbe ror loopne call das xchg adc push lds dec dec jb (bad) fnstenv sub lods mov adcb inc les mulb popf pop lods mov push or pushf dec push xor cwtl lcall fcmove push (bad) jno (bad) fnop and fdivrs outsl jo push adc dec int3 push outsl add sub or dec inc mov cmp push pop ficompl xchg pop pop adc enter mov bound mov xor mov xorl ss test enter imul push pushw mov clc (bad) xchg pusha mov add xor rcl and cmp adc dec xor cmp jo xor je xchg roll mov cmpb loopne rclb adcb xlat leave inc cmp xchg xor adc into sub mov mov sahf test aaa sahf and mov aam xor roll push adc xchg lods sub iret xor (bad) adc lret ret or incb inc movsl push push add fs aam into mov sub or and pop stos mov mov push jo sbb rolb xchg adc mov outsb das push cmp lret aam xchg fimul and xchg or sahf test add push or ljmp int3 addl sbb or jnp cld ljmp out lods mov cmc jmp rorb je push xor imull insb sbb insl and gs jp cld sbb push add mov cmp and orl cwtl fdivs rolb mov or pop mov imul or inc imul mov (bad) test into shlb sub push add pop fistpl adc mov pop mov pop push cmpsl rcrl or mov daa or sub inc push int3 fist imul sbb mov and sbb mov xor loopne and jno xchg mov scas push gs stos (bad) xor pushf xchg popa and xchg bound (bad) or in mov bound (bad) ljmp or divb push pushf mov bound cmp mov mov cmpb bound jae add inc mov ss push mov sbb addr16 adc icebp sbb and lcall mov les jo sbb push adc sbb data16 and leave ss fwait sbb fbstp fstp push loope mov test xchg cwtl dec fildll jo movsb repnz pop xchg movsb sub sub inc adc loope fiaddl shll into mov in xor add push dec mov pop jle push add jbe loopne pop negb lods scas add or jns jecxz mov and mov add lea mov fmull xor jae adcl lods int3 inc fidiv aaa ss hlt outsl mov sub movsb jbe ss sbbl fldl pop dec cmpsl dec pop ror and cmp adcb sbb or loope call adc add xchg dec test mov test pop mov mov or bound dec pop cmpsl inc mov sbb js sub addr16 and fucomip je daa lods outsl into dec jno mov test cwtl sub push popa hlt mov push rorb pop sub ljmp insb and xchg xor add mov lret movsl (bad) jno (bad) sub lds repnz dec ss (bad) or cmp pop add test call push fimul outsb ss jp (bad) or xchg int3 into outsb add cmp mov nop fnclex es push loope or push cmp and je sbb sub jo maskmovq testl out sub xchg xchg pop xchg (bad) pusha lods and and movb popf xor pop mov jecxz pop xchg cld and mov mov jns lods adc sbb add mov mov popa mov int adc inc inc or fsub insl (bad) leave and loopne pop add inc jp xor rolb push dec xor les sbb mov imul cmp mov (bad) loopne pop aad cmp jl xor pop xchg subl cs jecxz or (bad) nop push pushf jno inc pop (bad) sub adc sbb fcompl jecxz pusha mov adc enter sbb out shrb inc and cld rcrb es fcomp mov and cld push pop sbb jbe add mov cmp pop jbe push pop insb or pop mov jmp (bad) pop cmp aas test dec mov push ja jo add add mov and pop rolb cmc or mov pop shll and scas adc mov mov mov rorb rolb push cmp je fs sbb push xor fdivrl int3 pop fdivrl sbb xor leavew pop aam mov aad nop nop pop sbb sub arpl pop or xchg pop ret sbb fs add jo and ret (bad) inc popa outsb sbb addl dec adc shl push ss mov and ds or dec fdivrl xchg outsl pop push sbb ja ret js xor jnp rorb or push mov int3 mov pop cmp push inc mov cs dec inc cmpl mov pop jo loopne insb aad into mov fidivr inc mov pusha jl aam cmp adc and cmp mov aam sti mov mov dec test jmp and in (bad) shll cs lods outsb xchg dec gs stos cmp loope aad mov cmpsl xchg xor mov add adc and sbbb out ret push mov ret xor mov jne cli jecxz cs dec lods pushf andl test lods rclb adc inc mov loop push jnp outsb pop shll push out ret mov xchg stos loopne pop or aam xor inc (bad) fmuls stos fsubs push push mov imul aam lret je push ret sahf mov mov aaa jo pusha adc sbb out push jb dec into sbb sub aam mov cmpsb popa ss cmp dec mov inc loopne lock push pop or sbb sub movsl call lods dec xor xor xor test push mov roll ljmp popa pop outsb mov xchg add mov insb dec xchg or cmc xor mov cwtl sbb test and dec lods ret (bad) xchg mov mov insl add cmp cli xchg sub or mov mov xchg sub je shlb adc outsb mov xor adc sub inc sub fsubp sahf cmp add les repnz add push push add in jg push das dec gs outsb ss rcrb das (bad) (bad) or jno xor cltd and mov or mov fmull jb push adc mov xor and clc or cwtl xchg pop arpl xchg inc data16 ret bound fiaddl jbe adc mov mov jl or mov nop bound (bad) xor fs pushf push inc mov pop xor add lret test into pop add and pusha dec popa pop hlt add jb sub inc and arpl adc mov in adc mov sbb xor ret mov pop mov rorb popa pusha jo mov add adc mov int push xchg test ljmp cs into or jl bound jb cmp xor js or pusha dec call xor hlt (bad) fcoms adc dec push add jno jge add and addr16 push and cwtl imul mov addl pusha sbb sbb inc dec xchg xlat std add addb sbb xor mov mov hlt mov pop popf or push movsb cmp mov mov das xchg decb cmp adc sbbl movsl aam loopne stos adc push pop or loope sub std sbb (bad) pop xor mov push popa mov sub jbe lcall mov (bad) xor add dec xor add add cmpsl mov jnp mov call xlat fnstenv out adc cmp hlt nop and sub fcompl mov ret cmpb movsb mov or movsb rorl xchg gs lret cld jb mov ss xchg nop add cmp push add dec inc cmp cmp mov adc mov sbb pop sub or or mov je push stos xchg pop add push jecxz cmc xlat add mov push rsqrtps pop lret push cmp add loopne mov cmp decl adc loopne shrb rcrb xlat roll out int3 jp cmp and lea ret add aaa idivl push xor cmp movsl jnp push xor outsb aam cmp sub mov push rclb push jmp pusha jo nop inc pop loop pop stos xor push xor or add xchg mov mov sub loopne movsl xchg imul push pop lcall mov jno sbb out out cs mov test dec fs push cmp outsb xor das insb xor movsb (bad) push jo xlat xor out into dec pop jo cmp or enter rolb xchg lods fcoml inc jge and adc dec out inc scas addl mov (bad) jle or push xchg fcoms xor mov push push or inc test mov fiadd xchg int3 add lods out cmpsb or sbb mov ljmp inc or cli pushf dec (bad) lock jmp xor push jo mov pop test xchg rcrl sarb dec repz rolb inc jl cmp mov adc test cmp mov jecxz dec xor add sbb xchg scas mov xor loop and movsl mov call xor push loop xchg aam adc fsubrs je mov xchg or movsl inc pop insb in inc mov int rcrl push (bad) push add mov (bad) or xchg cmp ret push test mov fidiv test sub aaa loopne and lock cmp xorl adc sub push inc xchg addr16 pusha je mov jnp call (bad) je and aaa cmp cmpsb divb stos (bad) xor push movsb mov fdivrl scas or test mov adc cmp shrb sbb mov push and aad ss lret cmp loope and push cli inc pop push cmp add cmp and adc xchg sbb cld cmp outsb ret das sbb aaa xchg jns dec xchg jo mov pop ret inc or xchg add adc mov shlb add roll push out stos xchg push adc daa sub add cmp mov not cmp mov cmpb xchg pusha add mov popf jo jp in sbb pop mov pusha xor lds fs xor test hlt imul mov jge adc lds push jle xor xchg or xor push dec lods cli sub or push mov lds shlb inc xor lds sbb test pushf rorb or es (bad) ljmp dec movsb test loop nop mov stos cmpsl ss pop mov pop ret pop or ret sub fwait dec out sub push push pop add sub dec scas enter mov push pop insb jne inc xor mov or fdivrl xor or lret inc (bad) xor cmp mov xchg aam roll fcoms push push rcrb mov fsubs les outsl popa jo sarb (bad) and ret mov mov sbb and (bad) jno lcall stos ja ret adc xchg ja push cmpsl xchg jmp rclb mov pop push sbb and pusha adc sub movaps xor mov test mov inc and popa or add push rolb mov pushf adc xor adc add dec xchg pop adc sub mov cmp jo (bad) jg call sub or rcrl mov iret and inc dec xchg sbb mov push jo mov jl mov push inc clc dec jo popa les and cmp push js add addb adc pop push push push xor cmc cmp add xchg adc rorb pushf add dec mov hlt ds sub (bad) idivl mov mov jmp inc xchg inc sbb push (bad) cmc sbb jecxz ret in arpl daa pop adc daa andb jmp inc push xchg sbb sbb mov push movsb xorl (bad) out aaa push cmp lds loope mov xchg lock movb jo inc inc mov and or push jmp add and loop jnp adc inc adc lods sub pop lret xchg test sbb test (bad) in aas cmp pop push xor test xchg xchg mov pop sub jge adc ss pop dec sub das test pop mov repz inc and outsb inc mov xor adc je lods imul ret jno ljmp mov enter mov bound repz and loope jp fistp and pushf pusha xchg cmpsb leave sbb inc xchg ss mov lods sbb mov lock push sbb or push xor add out push inc outsb xor or push jle mov cltd xor push bound ds test push xchg pop int3 test adc fiadd or jo movsb mov ljmp push mov rcr es push sub sbb or lods or add mov mov cmp or and in movsl repnz push enter adc pop icebp cld sub mov mov add (bad) cmp jb je cmc xchg and add mov pop mov add cmp jne and sub mov incl icebp add ss int cwtl mov test rolb jo,pt ret inc out shrb mov mov ljmp les mov or push scas xor xor scas sbb addl out xor loop xchg mov push test scas or pusha and or rolb cmp cmp xor xor cmp adc das out fimull subl sbb push dec inc movb scas mov adc push xor dec aam mov arpl or sub mov outsl pop xor aas lods push imul sbb mov pop or mov lds xchg lahf lret add cmpsl mov cmp xchg rclb or lcall adc and or add mov shrb es xor jb in pop test fisubrl test lods insb mov loopne in or pop in (bad) fistpll loop sbb mov xor xor popa cmc pusha xor enter xor add (bad) sbb cmp pop sbb sub xor shlb jne xchg rorl add ljmp jecxz xor add lds popa jns dec mov inc sub cmc int3 add cmp in loopne push fldenv sub dec or jb jns xor dec mov test (bad) out xchg jmp xchg jle mov ds jmp jb xor mov mov shlb xlat jl inc rcl xor in sti loope sub loope (bad) xor cmpb push lods or inc rclb jecxz and aam or loope adcb push in test cmpsl sub popa (bad) shr fdivs mov mov subl push adc xor add lds pop cwtl bound scas imul (bad) (bad) add lods fsub mov mov fwait add dec cli ffreep rcrb ret in add mov test push rorb js mov jno pop sub fdivrl xor push mov call xor inc add lods mov xchg dec mov ds test xor lods or loop sbb mov cmp addr16 lods mov mov xor xor adc pop adc je test xor sub imul adc shrl jl cvtps2pi mov daa mov test pop jp and pop pop js adc cmp mov (bad) ficom and (bad) xor adc and int3 mov mov adc pushf adc ss jno lea (bad) push and stos xor sbb stos xchg mov and cmp push sub and je mov es mov int3 outsl dec sbb jno sahf jmp cmpsb xor xor xor (bad) push cmp ret mov sbb insb pop cmpsl aaa push out mov lods loope sbb push pop fmuls loopne mov dec push scas pushf out add sbb inc lock fsubrl dec xor bound dec cmp sub test mov ficom lds mov xchg inc imul jo adc and lock push cmp cmp cwtl jbe and push push pop out lea cmpsb pop dec fdivs jl sub cmp mov out or and enter adc js loopne push pop sahf adc push iret in test xor ret inc insl cmp ret push jne pop ret cs inc subb mov push (bad) bound jb or mov pop add lea xlat adc fmul movb mov sub pusha test mov mov jp inc or lcall inc call pop pop or loop push loope and mov nop jle mov mov mov aaa addl fbld cwtl (bad) lret mov dec repnz hlt xor popa mov mov sahf dec jne ret stos xor xor sub ret (bad) pop and rolb es sub loopne popf or fdivrs insb pop xor xor (bad) les (bad) test in out dec daa sub jp lds into ret bound arpl or scas es sysexit lret jecxz sub push outsb arpl ret mov xchg add rolb les arpl (bad) mov mov rorl and xlat aam adc adc adc cmp or pushf bound dec sbb push test ret cmp lock push sbb lret mov or rcl sbb (bad) jo cli push cmpb daa mov add inc mov test and sbb mov xor sbb adc (bad) jo sbbb lock add and in xor mov ret adc rol push xchg test xchg inc addr16 mov mov inc dec or in pushf cmp push sub roll inc pop test inc adcb imul cmp mov jns shll leave bound lods test adc sub and and push xchg stc add aaa push daa push pushf lret aam add mov je add lods aaa pop sbb enter (bad) popf add adc add or pop dec mov adc adc lcall mov pop sbb jns xor add or notb rcrb inc mov test add jp rcrl xor ret arpl sub loopne or cmp insb mov or fmuls js int pop cmp out arpl inc cmp icebp fxch pop (bad) cmp ss mov (bad) mov xlat push js gs test sbb jo mov sub (bad) or pusha ret jae and inc cmp adc add sarb int sub jp or push mov rolb mov add xor xor add pop int3 insl bound daa into xor iret cmp cmp (bad) gs mov movl inc movsl xchg cli popa cmpsl xchg ret scas xchg push (bad) push mov dec adc (bad) inc (bad) jo lds pop xor adc adc fwait test or js push inc xor adc mov adc imul add push sbb mov test inc or add outsb cmp inc jmp insl stos sub ret fisubl gs pop (bad) adcl cmp mov add movsb orl (bad) call adc xor jo mov mov sbb pop sbb arpl insl cs gs std loopne or inc push xchg sub addb outsb adc sbb cmp inc popl insl mov add test xchg xor jne or movsb or (bad) out and sbb push xor lret sbb inc bound rcrb add js adc call mov inc aaa sbb dec imul jno bound (bad) lret (bad) mov pop add (bad) xor ret jg test mov inc adc cltd pop sbb mov mov ret subl sub and push cmp into lea outsb scas adc sub enter sub push push test loopne and xor pop jecxz and bound push push push inc enter add movb inc popa xor fdivl cs sub jno stos dec sub and adc test movsl xor xchg sbb or sub into sbb in xor push cld or and xchg adc insb inc lods lock movsb and push add dec repnz stos sub xlat insb (bad) cmp mov xor int3 sub rol dec push (bad) xor leave add dec imul adc lods test pop xchg rcrl orl sbb cmp or pop push fwait cmp nop mov cmp lds gs sub ret daa push cmp xor negb shlb add push mov adc fs ret cmpl lea nop xor repnz out inc pop or mov js or push in push dec adc imul xor xor aaa into sub loope into (bad) sub push pop or andl sti pusha adc or rorb cmp xchg push jb sarb (bad) nop pop fs mov insb scas ss fistp push xchg and test test mov dec mov fdivrl arpl mov aam lea push cmpsl push xorb cmpsb and push mov or cmp push repnz sbb shld lret push mov dec sub rolb test sub and js fisubr sbb or cmp pop xchg fwait pop push pop sbb mov mov mov dec inc inc setge test mov and ret xchg lcall insl arpl adc and bound add adc sub mov jo (bad) pop mov (bad) dec sub fstps or push or xchg imul cmp out sbb jb adc (bad) flds adc lods mov out rcrb shrb or sbb and (bad) dec lea stos shl (bad) sub popa pop nop mov test xor cmp in push sbb mov push loop adc lods je and or bound decl mov sbb push mov jmp andl mov or in pusha mov mov xor xchg mov jecxz adc repnz js cmp lcall or sbbl and je es imul hlt inc pop roll pop mov xchg fs sub jbe ds push les mov (bad) fisubl inc xchg pop jbe syscall stos je inc popl cmp mov je clc scas push in lea jno xchg xorb sub loopne sub js pusha jo jl into or or inc (bad) mov xor popf bnd xor and js mov cmp sub aaa aam push and nop mov cmc pop ss sub inc mov sub lods aas dec jecxz add sbb pop test dec mov dec loopne xlat add addr16 pop add dec leave xor xor fidiv mov insl inc movsb sbb or arpl inc frstor lret insb or (bad) lock js cmpsb fwait test mov cli or cmp sub movsb ret inc and call les jl inc dec xchg (bad) cmp jle (bad) rol dec cld mov xchg push mov test jne lods std sbb mov mov push and push jo pop cmp push jno gs sbb das xor lods fiadd xchg je xor rorl ret paddusw or and repz sub cmp add adc repnz roll jp pushf sbb or push fwait ret ljmp sbb das in push pop dec mov sbb adc js (bad) mov pop mov xor adcl cmpsb mov test adc xor jl scas or imul subl jb sbb out pop fmuls (bad) rclb es sub xor data16 xor (bad) fistl mov adc ret adc lock push sbb xorl and xor xor xchg sub nop pop sub lea fnsave sbb lods sbb (bad) fisttpl or or adc sub xor testb les test xchg lods push cmpsl lock aam pop inc xchg push sbb nop pusha push add gs fcmovne int3 ret mov mov aas mov in cmpsb push sub ljmp jmp xor push dec sub or sub mov push pushf divb xor mov ss sbb or sub push sbb sbb lock push add and stos cmp mov clc add ret lcall cmp push aaa fdivl and loop gs dec cmpsb lock mov adc les ficomp popa jg shlb ljmp ret popa (bad) mov xor popa mov pop fcoms jno sbb jecxz cmp mov xor and mov test xor add daa fs popa orb mov mov inc pusha movsb mov aam mov (bad) (bad) pop enter jo repnz or fwait mov push jae flds movsb mov je push loope fmul xor arpl jo push sbb jno pop mov enter adc scas lds push push push js jno xor in les imul pop out int3 adc push sub ret mov dec or arpl xor leave pop add outsb je das adc test push enter sbb mov xor ds pop mov cmp dec xlat les or xor ds sub jns divl sbb out adc rorb fmuls fmull mov pop fimul popa popa jge xchg sbb sahf mov mov enter cmc test mov mov sub call add mov or jno and les cwtl xor mov (bad) jecxz jb loopne push sbb cmc xor arpl dec pop or xor add jnp in sarb sbb call movsb mov daa imul and aad pushf lods addl or ret sub mov addb sbb xchg jb dec les or mov stos pushf and cmp inc jmp fadds arpl insb (bad) jl mov or icebp int3 (bad) sbb jo lret push jmp mov mov outsb fs mov push imul hlt push adc sbb sbb sub test movsl sbb add test loopne mov mov sbb push mov js cmp push jno aam xchg and ret clc adc and rolb xchg int and insl sub insb push mov repz fs (bad) pop (bad) push cmp inc lret lret cmp sbb adc (bad) cwtl out mov cmpsb mov push repz cmp mov (bad) mov mov lahf rorl sub dec mov daa shrb sub adcb pusha push pop ss insl popa arpl sbb das push ret aam inc sahf and sub push sbb repnz test loopne cli adc mov cmp xchg xor inc stos cmp sets shl xor xor sbb (bad) rorb data16 or push cmp lret mov aam inc test leave rorb arpl jo inc ret push or scas mov dec pop bound and rorb ret int jmp push ficom and mov adc xchg mov mov test pushf xorl inc loope clc jl xor out push mov push mov (bad) insl hlt dec adc mov lods or push ljmp in add push mov push dec (bad) and lea rcrb pusha sub test lret dec push nop inc and nop mov dec ss push and movsl adc leave or pushf pushf pop repnz (bad) repnz sbb push pop imul cmpl arpl jne xor adc xor xchg pop fcoms daa xor xor or add xor sub orl jne bound pop mov add lock mov call or fmul pop sub or in add sbb pop hlt pop push and mov les lea cmp (bad) imul jecxz fcmovbe xor mov xor jo push cmp divl inc mov popa dec pushf sub fldt xchg xlat hlt add add and popl mov jl movsb pop mov pop movsb sbb sub cmp mov push out (bad) xor test inc dec push or adc cmp addb es and pop pop repz outsb jo nop mov (bad) jne sbb test imul movsb mov push jl mov mov xor into scas faddp in fdivl add cmpsb ja mov je mov jecxz lods push add xor add sahf add arpl add jne or rcrb adc scas sbb xchg mov push out call insl das shrl add adc pusha pusha lods mov mov xchg mov fist add add xchg jl or sbb sbb dec fmuls lock rcll fs ljmp lea pop xchg xor loopne and dec ljmp add sbb add add adc add mov and lret (bad) fsubrs xchg nop loopne loop into pop in pop les aaa cwtl aam ret or lret fiadd add xor inc and test mov mov mov sbb (bad) dec rcrb dec mov shr sahf pop push sbbb imul mov incl rcl daa push andb xchg rcll call popa xor add orl adc mov scas loope xchg xor or dec mov (bad) mov xchg pop pop int3 lret in and push leave mov inc sub aaa mov inc sbb pop dec int3 aam push jnp or enter push inc xchg xchg xlat lret into ret imulb or inc aaa xor daa adc xor mov jo add push fcompl ss sbb imul stos loope call pusha mov xchg in mov sbb rolb cwtl sbb (bad) test dec or sbb mov popa out hlt mov mov adc je ds or mov xor je or mov adc mov rcrb faddp push xchg xchg shl sbb add push loopne movsl jle mov mov lahf test jo push or pop pop dec sub mov jb push adc ss dec nop jno add xchg cld sub pusha mov and (bad) mov cmp xor mov jcxz and add lods add int3 xor sti add xor sarb or inc sbb rclb or cli (bad) dec dec cwtl cmp test enter mov xor in insb add loop jecxz mov sbb aas xor hlt xchg fsubrs pop mov push es repnz cmp add mov inc add inc pop mov push lods orl mov cmp mov out pop orb sub add jno jo add cmp and adc lods cmpsb jbe push jo inc cltd add movsb idivl or mov jb movsb dec and or mov test and dec lret es jmp lcall notl xchg aad jmp cmp sbb scas xchg lret and (bad) dec sbb out mov arpl mov add cmp cltd fcoms and cmp pop mov pop cmp cmp xor dec inc movsb pop mov popf lock pop xor dec inc sub cmpsb dec test lods push mov xor lcall es dec inc and pop sbb (bad) out fisttpl adc dec (bad) jb adc loopne push xor loope lods int3 imulb dec add mov jl mov inc sub inc sbb jo push (bad) (bad) fstpt loopne lods jb xlat cmpsl les bound inc in arpl loope dec out (bad) xchg mov sahf in add mov push and sub orl and cmpb lahf cltd test xchg sub lahf js ja leave and adc insl cmp aam nop pushf mov cmpsl jl pop add dec lcall cmp push push sub in loopne adc movsl push and ret cltd cmp ficom xchg insl lods lea inc pop inc xchg subl push scas cli jmp gs jl ss xsave loopne cmp imul loope push push ret pushf rorl lock add sub and dec cmp mov pop push (bad) inc sub adc mov push pop pop add aaa roll inc pop xor dec or lret or lret add loop mov jne pop loop lret pop cmpsl pop and pusha daa outsb outsb cltd mov (bad) adc loope lcall sbb xchg (bad) sub popa lods adc adc adc mov push movb pop insl pop or and scas jmp push pop loop (bad) rolb or lods mov dec cmp jp xchg into test sbb popa jg lock fistp dec dec add jo mov (bad) push push xor loopne add (bad) daa mov or sbb jae roll jp mov mov sbb pop js cmp or jmp test sbb daa pop jmp dec or sub adc (bad) (bad) dec into sbb and inc add mov cs inc bound mov lds (bad) add aad add enter leave adc imul push add mov sbb out xor test pushf lods mov sub ss jecxz xor push mov lods aad pusha dec fdivrl mov fdiv sbb xor push add pop adc lea adc xor nop cmp hlt add xchg in sti pop mov aad jne aaa mov aad std xor ret insb pusha sbb add xor pop mov push mov fist dec ret inc (bad) dec hlt (bad) push sub mov rcll inc test into (bad) jno or lods (bad) mov push jae and and jecxz leave xchg dec je or dec or adc and push jno,pt dec loope cmp call mov adc inc call and addb cmp lock push or jle mov sbb (bad) xor rorb mov fdivrp mov jne adc dec jnp dec xchg push or std sub movsb mov xor push cmpsl clc jp sbb cmp icebp jp xorb rol popa mov xchg mov int3 jne xchg xor pop dec xor xor fnstenv cmpsb mov add fstps bound into add ror outsb test pop aam sub mov jecxz pusha ror faddp and jecxz sbb gs pop xor xor inc mov sbb adc xlat mov loope xor mov or je loopne mov jo pusha daa stos and lods ret clc jl mov lar jecxz mov sbb movsb cmp pop cmp adc push and and insl mov ffreep andl movsl pusha mov cmp cltd addl dec jnp popa lods sti clc or mov pushw rolb mov adc xor sub pop or scas popa aaa push add cmp or das mov ret bound ret pop nop sbb push push xchg imul nop sbb sub push mov cmp xchg pusha adc popa test or cli push call cmp hlt add bound add mov sub adc rolb pushf and dec push sbb pop jb,pt push dec sub dec lock mov pop jp clc xor sub xchg cmpsl push fwait xchg adc jae push xor gs mov ret mov xchg test rcll adc or ficom nop sbb mov add mov adc imul or rcr repnz sub xchg push mov scas xor inc mov add lock push or inc test sahf sub pop mov or cmpsl fdivrl sub (bad) xor dec mov loopne push sub sbb or (bad) scas repz push pop sbb loope faddp or inc ss xchg adcl adc or mov loopne pop adc cld and sbb dec push js outsl jmp pop sbb das pop sub loop ficoml rolb shlb sbb pop inc mov xchg xor int mov inc sub lods push xor fs push xor sbb addr16 sbb call fsubrs lods in add sbb jnp jmp cmp sub nop sbb add repnz xchg cmp xchg addl lds mov and jecxz dec xchg fldl xor or xorl adc or push push mov mov mov xor jo or into mov add sbb dec aam into sub xor xlat and imulb xor sbb ret ja repnz add adc inc loope (bad) fimul push fsubl and loopne mov data16 xor cmp test mov or cmp or adc into cs pop fisttpl mov pop xor add adc test adc imul or mov loop mov push pop push inc pop faddl inc dec mov xor push mov in ret lea arpl add mov mov jge les mov push adc or push popf xor pop and push rcr add dec lret add es xor popf push or into movsb xor mov sbb orl pusha mov xor (bad) lret and aam cmp test dec mov inc mov pop xor sbb insl call popf mov ljmp add loope out aad jae inc sub sub in cmp push push inc dec inc cmpb scas rcrl jae adc push jo xor dec cmp push sbb adc jp or ret ljmp push xchg jo adc sub cmp cwtl icebp xchg or into or mov adc mov sub sbb and xor pop push add test mov cmp inc rol inc stos or add rorb test testl mov add aad or sbb js lods lods adc js sbb js xor adc into arpl pusha test mov mov add push cmp and mov outsb lcall push neg mov out gs in pop mov repnz or daa js add add push and ret gs test dec arpl mov xor rolb pop xchg scas cmp sbb and jmp lds cmp ss (bad) (bad) lret cvtps2pi mov sahf mov punpckldq es cmp dec dec inc adc mov mov mov aas fcomps jo dec rcrb lods adc or or jl stos rcll shl lea inc pop sbb or test xor xor or lcall xor bound add adc dec fildl and xor (bad) push push jae pop sub sbb rol pop mov adc sub fistpll xor xor imul lods js sbb adc in mov js sbb pop (bad) ret jae dec rorb sbb sahf imul xor arpl adc mov mov mov outsl stos cmpsl lods gs mov test jb mov inc mov addr16 mov call xor mov pop hlt lret add add jg sbb scas push push sub pop add or add add cmpsb loopne xor test mov push adc mov loop mov jecxz add dec (bad) push mov pushf inc test xchg push fs sbb test mov add jo add orb xor andb push push add adc xchg leave rcr dec or (bad) lock and lret push mov shrb inc inc mov data16 shll (bad) mov inc inc movsb sbb xor add mov loopne loopne,pt jecxz and fmull aaa and xchg adcb into xor mov fistp mov (bad) push dec mov jb pop mov push xchg sub roll roll sbb mov or jno sub cmp repz xchg inc rcll or mov stos out inc jno mov sub or push sub pop fsubs or mov or sbb xor mov add pop add jne sbb or call test mov sub sub sub inc sbb fsubr into jp mov stos lock pop loope ljmp mov xchg pop movsb xor pop fnstcw bound insl movsl add pushf add mov ss xor les fs mov leave ret mov sub sbb mov loope cwtl ret push movsl cs cmp je test popf xchg sbb mov rorl rorb cmp mov cmc xor or loopne je add xor adcl inc leave mov (bad) or movsb ret mov mov (bad) cmp mov (bad) mov sbb xchg push call inc sbb inc pop es add or into test mov cs and xor popf dec les inc dec (bad) push cmp ds ret daa mov lret and movb nop or add dec outsb lea jp,pt mov pop adc sbb and push push jnp adc mov push mov int3 dec jbe jb and sbb cli cmp mov pop pop js xchg aam adc ss mov jl aas (bad) enter fdivrl sbb js mov add push and cmp addr16 pusha mov aad pop jp jecxz (bad) into inc jp add js lds sub or mov scas pop insb xor or (bad) orl int3 cs mov mov xchg push and add jge call sbb or stc (bad) fldt (bad) xor mov xor ret xor imul or pop sbb cmc xchg add mov add inc call rcrb mov hlt addb test vpunpckhbw imul adc clc pop sub scas fisttpll cmp xor lods test mov dec les mov or xchg fsubrp nop add inc mov sbb or adc mov cltd dec add xchg jbe cs pop pop aaa mov (bad) andb ret mov add mov cmc ret dec sub or loopne and cmp push mov and loopne,pn sub sub cmp (bad) sbb cmp xchg in inc push pop lahf sub fadds sbb xor dec xchg dec (bad) cmp (bad) or fldenv adc mov fucomip mov or dec add xor mov add ret lock add push pop adc xor dec mov add (bad) sub inc (bad) (bad) mov mov mov inc inc xchg stc xchg pop shl cmp jbe lea out call inc sbb or mov mov inc add mov pushf mov mov add loope aam xchg test xchg mov or shrl daa mov popf inc xchg insl clc insb mov sbb xchg mov add dec cmp loop int3 imul popf jo sub add addr16 dec adc inc bound arpl sub jo (bad) jno pop ds and popa pusha mov pushf and arpl outsl xchg add inc mov add and mov call mov adc loope pusha add adc pop mov (bad) rolb adc bound lods test jecxz mov imul repz call dec xor xchg pop rcrb pushf mov clc xchg pop xor xchg pop ss xchg adc sbb sbb push and dec and imul jo xor adc add xchg mov mov rorl lea rcl insb xor add jo popf mov add pause lahf mov into jge pop fsubrl xchg mov dec mov arpl sub pop cmp repnz pop add lods test inc js pop adcl sub hlt xchg push xchg addl stos pushf lea push aas and and pop push rcrb arpl cmp adc add xchg and xchg ljmp inc pushf or mov xor add mov (bad) jo adc cmp push sbb js or (bad) je adc das mov add pop out lods and adcl out ret pop sbb ret push xor lods inc je sub clc imul dec nop imulb cmp pop movsl test mov mov add adc fnstcw sahf xchg cmp push movsb add and cmp loopne rolb or movsb push push inc andl loopne adc mov inc inc inc js in lahf jbe js xor pop push mov adc or ret lcall sub rolb popa lods add rol orl push mov sbb lret mov nop insb addl adcl or popl mov test adc sbb push inc ret pusha (bad) cmp pusha mov pop loope cmp cmp or push stos xchg add ret inc mov fdivrs lcall inc jl in xchg nop dec inc jecxz xchg roll mov insb push adc ds js ja sahf push mov shr add adc push add add test pusha pop cmp adc sub inc or sub sti pusha testl mov orl sub dec push lock dec js adc xor lods imul call shrl repnz (bad) gs call jne pop pusha loop,pn xor test fs xor adc aam sbbl xor push loopne divb pop punpcklwd mov rcrb push and inc aaa push dec mov push test dec jo cmp js sbb add ljmp mov mov popa dec mov add test xchg pushf imul call cmp cli in push (bad) mov xchg or pop stos cmp daa lea test inc push dec js mov lods xchg dec xor aaa xorl (bad) fadds mov and ror outsl mov or (bad) in (bad) dec sub mov add or dec mov mov (bad) (bad) xchg mov mov add aam clc jno or mov mov push bound and or push mov and jle xor cmpsl mov add xchg pop pop pushf lods dec or mov movsl imul add inc sbb or (bad) xor jno cmp push pop mov in dec stos outsl addb xchg add or jno push xor add and adcb adc jp scas ret fsts pop out cmpsb push rorb mov add lods add je fstl into cmp ljmp jae sbb push lods xor push cmp jp mov or loope adc (bad) push ror sbb es jbe and or into push xchg pop jg hlt pusha jo sub cmp sbb inc or mov jp mov push fs cltd ficompl dec les add popf aad cmp dec xchg fimull mov jno ss fdiv ss inc test dec dec mov std lock rol shl xchg inc push enter rolb lods or fucomip xor push sbbl add fnsetpm(287 popa movsb sub xor adc insl push rcrl inc adc dec in cmp cmpsl in roll loope pop sbb scas (bad) or cmp arpl or jb vmovups pop pop or or pop inc daa push xchg add and dec cmp inc mov or xorb xor mov adc test add push mov mov jmp xchg rclb mov or bound add fs popf popa sub mov dec rcrb inc dec es into push mov push cmp js or pop pop (bad) daa add xor dec sub sarb push pavgw out pop or sub lods xor insl fcoms notb mov loope ss mov icebp sbb (bad) sbb add into push add repnz xchg fist inc cmp rorl or or and mov dec inc ret subl cmp int push cmp fdivs (bad) cli shlb add ffree adc ret dec rcll imul sub add dec jp js mov or push fucomi fidiv cmpl or icebp adc push xchg test bound leave inc adcl dec sbb ja or push jo out sub adcb xchg push lret pop ret and daa lods movsb daa push out or push mov push pop popf test inc ljmp loop or xchg mov xor je imul jnp inc mov insb and mov (bad) test mov xor xchg mov adc (bad) and dec add test xchg test rorb push xchg clc pop xchg (bad) xor jmp sbb mov addr16 roll out mov sbb nop adc or mov enter and push mov sbb xchg push mov faddp fdivrs into js xchg add (bad) mov adc push insb and mov test or shlb aad addl adc std xor add call addl adc pop loope and and xor mov xchg ss daa jo push lods mov sub arpl or mov or jb jno inc pop add inc sbb addr16 mov xorb mov les test nop mov sbb push test jae rcrb push sbb xor rcll or push jbe dec les jo mov adc mov bound test adc pop (bad) push mov bound sub mov ret nop pop sub xchg and je jecxz sbb or and or nop dec aam les jle nop inc cmpsl cmc mov push mov lock cwtl pushf test push fnop sub pop jge pop popa or roll xor bound dec popa add or xlat inc nop mov pop cmpsl pop pop sub mov xor jecxz mov pop push push cmc inc cmpsl adc test adc jno sahf jp inc pop mov loopne outsb icebp sub fdivrl arpl sub loopne dec es add rcrl push or es cmc pop bound loope mov test or scas scas cmp push je dec push ret lods loopne jl scas aas mov fs out lret lods mov push add sahf xor sub sub and sahf mov xchg fs adc ja pop pop popa adc inc mov insl pop push or scas (bad) (bad) cli xchg sub add cmp mov mov xor push pop cmpsw pop mov pop and loopne ret jo (bad) imul lods aaa rorl loope nop xor mov xchg popa lods xor sub in add adcb xchg and cmc sub push enter (bad) mov movl push xor adc sub pusha mov inc mov nop js xor xchg and es shlb jl pop or mov sbb cmp jno add repnz xor push shrb andl movsb push hlt js mov das out clc mov (bad) sbb and dec xor add mov push ret inc movsl sub sub sub and pushf inc push xchg adc aaa cmp and loopne inc add add or out dec imul xor call data16 repz je cwtl push loop popf push sub pusha inc add (bad) xor (bad) js lea push outsl int3 add or insl test fs movsb (bad) xlat add mov mov loope call cmpsb aaa xchg xor jne cmpsl scas jg dec sbb sub xor add inc or jecxz mov popa notb (bad) movsb je mov andps (bad) mov rorb scas add ret sub push test jo xor scas outsb pop les xor daa ret ficompl ret loope or out cmp test fadd cmc (bad) jae mov mov test jb xchg popa (bad) iret loopne adc gs inc daa jbe cmp adc inc pop push mov pop xor add sbb push pop lods loope out outsl iret sahf adc mov dec inc frstor aam adcl dec les add dec ljmp (bad) popf xchg pop or je mov fsubl sbb dec sbb xor sbb add cmpsl pop push dec mov jo mov test mov inc jne cmp cmpsb add push pop xchg xor rorb sub push mov inc sbb inc mov or or (bad) jmp (bad) daa cs jg xor jge xchg add or cmp jnp test sbb cvttps2pi lods test xor dec inc adc jg pop push pusha sub rol pop lock adc mov arpl cmp (bad) mov sub push or jae inc fnsave inc xchg xor add ret mov inc pop xchg push test dec inc xchg jp (bad) sub inc push (bad) pop lock test ret stc arpl pop ret hlt mov sub adc int3 mov inc dec sub sub and mov pop pop add fild xchg pop mulb call pusha mov dec push adc outsb je dec (bad) xor and jo out inc loope mov (bad) lds sqrtps push imul je mov mov test mov pop adc dec mov add lret jg data16 pop pop gs dec jb xorl mov les push das shrb mov outsl jo xchg lods test push xor mov cmpsl jne outsl pushw nop xlat sub add inc std inc das loop push sbb (bad) jo cmp popa xor es lock xor sbb lea jp pop pop mov inc add inc cmp int3 inc ret jmp addb cmp lods cwtl jb sub (bad) mov dec ret addb pusha push or nop or popa loopne sbb xchg push sbb addr16 test push cmp movsb imul aas cmc mov and push or cmp xor fcoms subl sbb outsb and inc pop inc movb (bad) stos ret sub pop sub adc mov mov xor test cmp add or or movsl rcll loope jnp enter inc jo or andl cs bound or out dec push jl or or ss stos inc pop roll sbb xchg add or jge pushf test imul pop aam add mov pushf xor adc push add adc popa mov movsb push lcall dec inc js mov jbe cs sbb xchg mov mov pusha xor fs pop cmpsb cs pop adc mov xchg mov or mov (bad) xor mov (bad) pop cmp jno shrb jo insb and ret mov or lret sbb cmp fs aas rolb pop pushf mov pushf rsm inc ret xchg fxch das imul arpl xadd aam sarb sbb lret sbb ds push push daa fwait mov xchg (bad) push lret sbb repz mov shrl dec aaa data16 aas jo adc jo jb (bad) xor cmp jmp rolb cld or pop push sbb popf (bad) xor xor test adcb out adc popf or mov (bad) xchg notl xor shrb dec test jns cmp xchg nop push dec lret cmp sbb xor push popa mov pop daa inc fstpl push cmp aam lcall loop cmpsl adc jno mov add adc and push les add ss fisubr jmp mov jo push out js fnstcw or arpl lock xchg mov imul es sbb add dec movsb ret or cmpsl sbb xchg mov (bad) in aam js sbb sub js fld xor loopne xor mov xchg in sbb or dec add cmp pop push dec or inc xor mov rclb bound mov or mov adc fldenv (bad) sub cmpsl inc (bad) push mov rclb pop cmp inc mov jmp mov aaa daa dec jb cmp int3 fistpl and aam fwait mov or add push or xor inc or dec dec push add test add adc and adc mov add imul mov jns sbb mov xor push ljmp mov inc add xchg in arpl inc mov rorb stos xbegin flds int test sar mov pushf lods dec xor (bad) shlb je (bad) mov mov add sub inc dec xchg fstl or push pop data16 adc mov xchg enter mov add add pop xorl and or or xor sub xor mov aam out jno xor in jbe add and shlb dec loop loope sbb mov sbb adcl sub sbb lret js in aaa loope sbb rorb or cmp push mov cli sbb dec mov xchg push lcall xor xor imul inc add push inc cmp ljmp sub sbbl and flds and pusha add nop adc adc push xchg loop enter scas imul adc pop adc add pusha ja mov fsts mov das pusha push stc xchg sahf (bad) mov fs sbb outsl fcompl fs gs pop pop mov mov insl dec xor push movsl xchg (bad) lods xchg jo or xor loopne pusha adc insb into sbb xchg xchg (bad) or movsl or loopne (bad) add cltd ss les les lods push in cwtl inc bound loop ss (bad) xchg add movsb ret cmp push push hlt mov scas lcall je call or xor adc jecxz add punpckhdq cmpb add push add adc sub shrb call cwtl add cli mov inc test stos cltd addl nop popa and vmovapd jnp ret jecxz push mov xor mov loop aaa jnp clc stos mov ret test lock adc test cmp popf in inc xlat add jae stos xor outsb xchg pusha ja fadds (bad) pop mov dec mov dec mov adc sbb jbe nop add aaa pop add mov lret clc lods orb push xor and sub cld imul or push dec add sbb roll jmp sub inc adc cmp push cmp test inc jp loopne sub or fidivrl adc pop mov pusha pop adc inc lret push mov jecxz xor xchg ja mov mov enter mov add jbe xor xorl mov les mov pop or loopne outsb stos dec mov sbb sbb cld push test shr xor and or pop mov pop icebp rorb sbb (bad) dec mov cmp inc adcl sbb pop jg,pt adc pusha imul fwait cs enter add nop add (bad) xchg lock hlt (bad) sub fs mov mov sbb sub jnp jae adc icebp mov pop pushf mov mov add cmpsl xor jecxz push add jl shrl fistpll (bad) inc sub (bad) push xor inc xor add aas nopl int3 jecxz stc or jo sbb pop xchg je ljmp test fnstcw shrl sbb sbb outsw xor rorl shrl jbe sarb sbb or cmp je pop pop outsl or mov xlat cmp cwtl lods add mov xor test cmp dec fwait xchg xor pop dec adc inc sub mov call xor pusha add lcall jo pushf enter push mov (bad) daa bound scas lds push mov mov mov fwait lods adc pop push cli cmp mov xor ljmp adc mov push das mov pushf mov dec inc lahf cmp cli icebp into cltd cmp pop imul sbb add sub les pop dec add mov loop xor pop push mov inc jl add (bad) (bad) inc js mov (bad) outsl test (bad) mov sbb and and cmp xor inc clc mov mov add les pop sbb or js pop mov adc adc inc mov rorb jno xchg adc out xor outsb roll or cmp xchg mov enter lea ret add faddl rcrl mov push (bad) cld daa inc rorb sahf (bad) sbb xor and push xor scas fmull xchg ficompl jp mov ds and mov loopne out add mov mov xor cli js outsb test mov sub pop inc cmpsb inc adcb add (bad) sub mov jmp or and sbb mov mov int3 sub fidivl mov (bad) out fistpl leave cmc test cmp pop loop sub push movsb mov pop sti ss movsl adc add add sub xor insl jecxz add outsl inc jl inc mov into loopne xchg sbb (bad) or and push mul sbb cmc data16 add mov inc fiadd jnp mov jae xlat ljmp and adc and xchg add jno sub xor jo arpl xchg or jo dec (bad) adc sahf add add aaa (bad) repnz sbb leave mov lcall add into cmp and mov sbb xor push cmp nop icebp loop xchg adc rclb mov ret mulb and and mov dec loop outsb or loop je mov add cwtl mov sbb pop pushf sbb dec sub icebp xor les ret and xor and (bad) cmp sub mov lea fldenv dec loopne or lods adc mov adc mov dec insl aam jl ret loop sub xor nop cmp mov (bad) dec lods int outsl pop movsb push punpckhbw mov cmp push int and data16 push jo jl inc (bad) lahf dec inc test mov sarl (bad) jae std xor add ljmp test jge pop push ret xchg push daa or dec sbb xchg les and loop sbb mov into ret scas loope stos pop pop (bad) add les mov inc lret jo lds ss xor add mov xor xor rcr xchg add movsb xchg xor mov add shlb mov jb inc js mov adc inc sbb fiadd push pop mov js xor sarl add imul push or add jl xchg add bound (bad) xor nop xchg pusha jmp sub inc das divb rcrl pop pop xor inc test mov loop xorl lods dec popf or mov loopne sub cwtl mov pop (bad) ss push jae into ss pop xchg push pop and stos popf (bad) mov adc dec cmp cli dec jo rolb mov or movsb jbe push pop faddl aas mov rclb lea aam push pop (bad) es mov push imul mov or dec gs xor inc leave adc icebp fdiv adc push sarb pop push sub jl push ss sbb loopne mov jo xchg and lock fildll rcr or faddl pop fldenv scas ljmp jnp (bad) or and lret (bad) adc inc pusha sub mov sahf lea je sbb lock aaa stos mov ss ror cmpsb js pop or enter add mov or aaa aad xor add push or icebp xor push sub cmp lea mov (bad) cmpsb mov insb cmp adc aaa mov mov or mov mov add or ret mov fstpt add (bad) rcl fisubr xor xchg mov sub dec jecxz dec ljmp in popa jns cmp mov mov lods mov or pop fwait lods jno cmp or fwait sub pop je (bad) cwtl loopne fist add jmp int3 outsl add rolb add xchg xchg pushf adc jbe inc sub sbb push mov push fist rcrl mov pop jb jle push (bad) jo push pop cmpsb mov aaa dec push call mov mov (bad) or (bad) jp mov scas xchg mov mov jno in sub add mov insb bound adc xchg inc push repz rolb push push sarl xor dec lcall incb jle push inc ret xor mov cmp popa cmp sbb cmp sbb adc insb jp pop pop (bad) xor push mov movsb into addl pop xor add loopne dec pop add clc lods or decl andl (bad) aam (bad) xor inc add sub sub push movsl lret lea jmp call daa sbb sbb add dec dec scas adc xor or test pop sahf and dec jb cmp (bad) xchg xor cld mov or loopne loop add jne xor stos push xor mov test cltd fidiv dec fisubrl jmp mov or pop sbb (bad) mov pop pop pop add pop and ret lea dec pusha (bad) adc xchg xlat jl cmp test xchg add daa inc sbb gs lret mov (bad) push movsl sub lret mov insb stos (bad) leave (bad) cmpsl vmresume mov xchg adc fidivrl or jno in pop sbb insl pushf sbb mov xor jns movnti or mov movsb xor nop sbb xchg cmp inc stos sub lret arpl and mov inc mov jmp and roll adc stc adc mov mov xchg pop pop xor movsb popf xchg add or sub inc sahf add js push or dec loopnew mov add test push (bad) lret cmp and mov js (bad) push aam dec adc divl pop gs push xchg les add inc es rolb lods xor lods xor sahf pop test outsl test fisttpll aam xor jl test jno dec xor ss add adc (bad) sbb aas sbb sbb mov (bad) movb mov rorl or imul out sti dec xchg dec sbb or cltd xor (bad) fcom loop pusha je sub bound xchg movsl loope xor daa (bad) or (bad) cmpsl adc push lods iret fsubrs xadd push jp dec jo push xchg cmp push mov mov adcb cmpsl cwtl lds add scas out loop adc je,pn adc das loopne sbb int3 xchg dec arpl or bound adc and mov mov cmp les mov data16 mov out fimull dec add dec jne lods cmp add roll push add jae inc pop fs inc sub jo loop xchg mov jno cli pop pop xchg jnp pop adc cmp and iret (bad) dec lcall cwtl mov enter and jae inc adcl add cmp movsb les lods mov dec punpcklwd push xor or inc and loop mov cltd scas sahf jmp pusha mov jo cmp pop sbb in cmpb pop adc sub lcall fmull aam jae or push ret insl pop jmp mov xor js jmp xor movsl sbb pushf or inc dec inc arpl js and cld pusha add aad shrb and imul or and test mov xor sbb leave (bad) in add leave xor mull jo or push xor test pop lods shll adc insb sbb mov cwtl jno lock pop pop or and jo loopne pop popf xchg ljmp push popa push adc mov pminsw lret xchg mov call xor push xchg mov (bad) movsl or inc jbe popl ret adc xor xor inc je add pop sbb lods jmp jmp xchg and push (bad) in adc pusha adc cmp mov hlt jle dec pop test adc pop sub (bad) and popa or sbb sbb sbb jb fcom xor arpl mov push out mov pop inc sub push or mov add dec cmp imul into test mov ret pusha push je cmpsb lods and fistpll xchg outsb cmpsb loope dec lea lock mov xor dec fldl rolb fbstp add add push lret pop cwtl xor test ret repz jmp or push std mov sub gs or cmp les and faddl (bad) push and mov xchg xchg cwtl cmc jge mov in cmp enter loope inc push mov lods add out jle mov push js and lahf mov xchg test lea xlat test push les cmpsb or sbb cmp test roll aam cmp mov and xchg addb adc in or xchg (bad) xor sub inc (bad) in xor mov loop lock cmp xchg push jp ljmp ror dec cmp negl bound (bad) jne inc hlt cs sbb jb xor xor nop add pusha stos add sub adc cmp push dec test lods addl inc sub sub mov jo imul popa push test test jnp sub add add add jecxz push cmovo push or xchg loope or call out xchg lcall in sub lods out cmp add add loop xchg (bad) fcmovnb dec rcrb test inc cmp or jmp scas pop orl inc or sub push mov aaa lea lods jo lock inc mov adc rorb test mov aam cli mov jb xor mov ret addl fldenv mov aaa jg mov or mov push push xchg movsl push xchg (bad) loopne popf lods ljmp clc xchg push adc cmp (bad) mov mov mov mov or mov repnz xchg test test push mov lret imul inc sub js inc gs out add add jne adc ret adc fnstenv nop xchg fs js or pop inc push sbb xchg inc mov pop push mov add sbb popa xor ja or inc loopne mov daa or mov mov mov roll clc cmp daa mov dec imulb test cmp push sub mov mov inc push inc xchg lods adc inc cmp inc sbb push stc imul dec mov fs cmp xchg addr16 fimul pushf jns mov mov mov shrb xchg xor shrb js or hlt xor xor pop pop imul jno xor shr and xor ret xchg (bad) xorb dec sbb call loop or mov add je push movsb arpl adc xor mov insl pop pop mov xorb mov cmp scas lcall push or dec nop in std cs xchg adc loope push push pushf mov xchg sbb xor pusha add jns call add pop dec sub push pop adc sahf (bad) sarb xor cltd cmp cs add dec scas sub jp sub into pop pop xor fmuls or adc push loopne mov mov jmp and loop mov xchg adc and add loop lods sub mov das lods and cmp dec dec sbb jecxz add push adc xor out sbb je (bad) sbb dec (bad) push rcl pusha xor pop (bad) pop (bad) js dec mov mov or sbb scas repnz or add (bad) nop fstps dec sahf xor adc js push jbe and (bad) out push add insb add test bound sarb push add adc rorb push test test rorb push ljmp loope sub rorl and xchg hlt and pop inc or movsl mov mov cmp loopne outsl fadds mov test mov inc push les mov mov pop xchg pop pushf mov lds or sub and sbb stc mov insb movsb cmpsl xor lock sbb call cwtl cmp imul xor outsl adc push mov daa mov test ret dec dec xchg sbb lods add movsl jno aad lock sub es aas in xchg pop bound mov ret or push push cmc xor sub sub inc movsl pop aas jbe addb jbe xorl cmp sub mov clc mov pop or (bad) mov or jo mov push sbb ds lahf dec ret popf aaa sub mov sub pusha add lds lock sbb mov ja sub or call loop call xchg xchg or jns ss or xchg es mov pop jmp (bad) push scas addr16 fdivrs stc outsb adc cmp sbb sub pop das jmp pop mov shr xor jbe cmp mov mov popa cwtl jo shrl lods enter fadds sub imul les imul mov mov gs pop xor mov and dec ss enter cmc mov (bad) jge xchg cmp jge call pop inc (bad) adc (bad) or inc push mov call cmp add andb pop inc push scas pop test fdivrs jecxz pop mov sbb into (bad) rcl fcmovnb push fcmovb inc xor gs fwait mov lds jns inc add (bad) dec test shlb pop pushf int3 (bad) mov adc jno or fcoms js sbb dec dec mov xor adcb bound xlat cmp shl xor sub and xchg notb mov pop dec nop xor fwait (bad) mov lods add test pop cmp cmp daa dec inc jecxz push imul xor mov push push fwait cmp js (bad) sub dec adc push or xchg sarb lds mov dec adc dec xchg or nop add mov cmp (bad) mov xor inc inc push adc por aad leave pop xchg fstl das jno and aad addl (bad) mov lahf test bound clc mov adc or dec cmp xchg scas lret mov and sub daa add mov test or adc dec xor cmp add push (bad) mov or test nop test lods aas data16 dec xor pop arpl and sbb cmp push ss sbb pop pop adc jbe push orl loop pop mov sbb pop mov pop cmpsb mov outsl loopne test (bad) cmp pop adc sbb mov ficomp hlt repz push add xor int3 es rolb xchg pop outsb inc add xchg xor ror (bad) xor (bad) push xor sbb fstl cmp mov xor das lds pop aam insb loopne dec sbb fmul push sub insb call imul xor push or jno mov xor mov clc aaa (bad) jno or mov xchg sbb js subl push aaa aaa jo xchg js test and subl dec mov pop insb cs andb sbb aaa imul (bad) je or xor out xchg std dec jp rolb xchg (bad) movsb add push jecxz add mov push sbb xorb jns rolb xor dec movsb pop gs movsl ds add and data16 (bad) gs dec adc cmp mov xchg adc ret mov sbb popa inc bound cmpsb in push push aam test mov push xor sbb pop faddl lea and ljmp add xchg xor scas ss aas mov lea mov xor mov negb push mov insl or xor cltd pop jecxz arpl sub mov push or fsubl sub add imul sub sahf dec mov fs mov sub sub daa aaa addb cmp jmp sbb ret push sub mov mov mov lds cmpsl dec sub rclb add xchg pop push je orl sub cli aam adc (bad) xor ret mov outsb int3 pop xor pop test dec add mov mov mov lods push js clc adc or sbb lock in xchg add (bad) out pop jo mov sub xchg pop adc jb loop nop (bad) pop adc xor mov (bad) cmc xor sub sub mov bound pop ret mov popa xor fst xchg or fisttpl andb pushf clc call (bad) inc test cmp cmp lods test lods mov or test inc dec andl xchg jne shrb mov jecxz (bad) xor inc gs (bad) or ss jecxz rol pop jl into orl and dec ret mov adc add xchg popf xchg cs fiadd sbb dec and shr (bad) or mov lret or sub jno mov mov mov insl push aaa aas les mov mov xor popf in xchg dec loopne mov movsl in fadd adc and fldt ret add cmp xchg sub push jo xor mov (bad) pop rolb aam xor adc sbb and push and mov cmp or or cmp sbb int3 dec add es icebp sbb dec xor test and outsl sahf cwtl sbb and pushf and adc xor mov cmp rolb popa inc lea or cltd adc sbbb mov mov adc insb jo ret push push test fisubr fst and aaa fwait sbb or dec loopne test jns rorl mov stos rorb test push ss js jo in ficom packuswb add pop cwtl jne bound test pop add and xor test pop cmp mov shrl popa and or pop daa cmp (bad) test lea mov cmp (bad) sbb (bad) sub add jg and lsl repnz fld or cmp test les arpl (bad) jb lcall push jge mov sti dec xchg push add sub add lock pop mov jno push (bad) lret mov xor into (bad) pushw sub xorb inc mov std cmp inc js pop xor pop (bad) shlb in sbb xchg test or mov test roll or pop fdivrl pop mov fs pop sbb add inc rcrb mov or sbb test pop imul loop pop or xor ret fs inc pusha popa push leave (bad) mov and xor dec pop cld and xor lds sahf inc push push jo mov cmc (bad) cmp or loop popf xor sub movsb (bad) mov push and add test xor aam sahf stc pushf cmp js cmp mov leave test add push imul and push mov or inc movsl sbb cmpsl adc imul and fs sub dec jbe movsb rep (bad) arpl (bad) mov xor push movsl push pop xchg fwait sub das inc ja sbb ds xor mov pop loopne mov in decl insb repnz movsl pop mov rolb mov cs mov loopne mov and add gs dec lods add xchg movsb vxorps jbe dec adc mov inc mov (bad) int3 fwait inc notb push xor push pushf ret mov inc test test jns push or or jno js and sahf cmp fs rclb sarb lods push (bad) fcomps jo sub enter mov movsb inc xchg cmp cmpsl push mov (bad) xor test pop imul and shrb adc and adc inc and test adc cmp pusha jne rolb aam dec lods orl adc inc lods push jle cmpsb (bad) sub dec add lods adc inc push inc pop loope sbb add pop pshufw adc pop cmp rclb js sbb lcall mov daa fmuls jns mov sbbl sbb cmp dec inc mov adc (bad) in add or push scas lds add ficomp push outsb add adcl xor cwtl in sub je popf fdivrl xchg sub xor lods cmp aad das cmp pop nop dec or gs mov fnop dec jno fcompl and xor mov gs in in cmp and inc sub ss notl xor pop test push ljmp test sbb int3 mov jnp sub or sbbl sbb push mov inc mov cwtl dec (bad) shrb and sub or pop lcall push (bad) ret pusha fs cmpsl ds add test pop add daa or mov xor loopne movsb repz mov mov or fsubs jne into sub ja adc imul adc lods popa das sbb out pop xor aam cmpsb cmp pop sub cwtl int3 lea mov adc or adc insl add pusha add push and dec mov adc xchg mov sbb sbb or mov in dec loope out (bad) jne xor dec xor pusha aaa mov pop sbb push push jge sub rcrb mov mov ss inc stc jne or push (bad) stos inc popa jno pop cli pop push daa not fmuls or fcompl bound jae push sbb pop add push add and xchg mov sub jmp hlt sbb and jo xchg jno push insb (bad) lds mov adc push mov daa sub dec mov (bad) mov mov mov repnz idiv mov inc adc movsb outsl lret sbb divb inc mov xchg xor movsb jge je insl loop jmp adc sbb xor cld and out lret ret leave push and or jl rclb subb inc cltd push add in add cmp fwait mov and (bad) pop repnz ror popa add sbb pushf xchg js mov popa push adc aam sub jmp loop xchg inc and clc jmp (bad) fistp (bad) scas or jae mov lds cmp xchg aam mov lret sub jnp leave loop sub jecxz pop imul orb out or data16 cmp movsl stos push xorl cs addr16 ds or fistpl mov into sbb cli push fs pop mov (bad) xor (bad) sbb aam push inc mov bound cmp sbb arpl mov and mov lods ret push es xor enter test add mov mov daa push insb loope xor push adc xchg stos leave mov (bad) xor add adcl out push or cmp inc faddl sbb imul sub fcomip imul inc or dec aam ljmp or or lods cmp and push xchg sbb inc aaa xchg lock xchg xor mov mov or lcall xchg sahf shl out lock cmp rorl cmp jns std int cmp loopne push cmp shr cmp lods pop push pop or popf or cmp lds (bad) aas pop xor pusha je dec bound stos pop mov test jle sbb enter test sub movsl push pop loop cmp dec enter sub sub sbb inc sbb add pop sub daa test ror sbbl xlat jmp hlt mov pop xchg cltd xchg dec shlb sbb add in les in movsl ret or inc sub and add xchg bound test dec addl and xor stos (bad) dec or rorl test xor je and or xchg inc cmp sbb add push bound adcb mov ljmp sbb xor pop out and popf jb ret xor leave cmovae cmp (bad) icebp adc ret push xor sbb std and and xor int dec mov ret xchg ret mov test lods ljmp popf pop in outsl aaa ficoml jbe or or adc mov jno xor push push cmpsb sub add cmp out enter mov sub mov and cltd sbb (bad) or aad shll sub cmp push pop dec or dec test sub xchg lds add or pop out out ss dec mov call adc lock jg insl sbb (bad) push add sbb insb sub out and inc lock jbe or cltd mov cmp bound test cmp nop les mov loop fsubl xchg cmpsb rcl aam sahf test bound movsl xor dec outsl dec xchg push mov cwtl or mov mov mov mov mov repnz mov push pop jb pop push mov xchg insb push xor js add popf and popa loope out into and or mov mov sbb or sbb mov cmp mov mov (bad) pop xchg cmp (bad) ja mov mov scas imul rcl mov daa in dec addl dec rcll sahf mov add lods push mov jb xor and scas sbb loopne js sub add jae sub mov dec test or or and adc add jb jo sbb and sub test cmp shlb je addr16 xor or add xor imul cwtl push mov dec inc into push push xchg fmull pop mov mov adc scas fs sub and je pop pop adcl test dec mov sbb call inc push sbb dec sbb dec inc xor (bad) mov in fldenv adc add imul pusha mov sub inc push addr16 loopne test into xor movb push pop pop add rorb and adcb or mov shlb fadd or add lret xchg push loop add adc xor add sub sbb pusha xchg fmuls inc loopne popa out test add xchg adc ja shr mov dec xchg shl pop cmpl mov sbb std or bound inc inc popa xor sbb add and sub js xchg mov lock sbb sbb notb jo test xor pop or add lea aaa mov out decb mov mov sbb dec jb add into sub inc jns push into test or or addr16 mov push mov add (bad) sbb fsubp dec movsb adc jmp add mov rcrb cmp int3 fildll sbb push adc (bad) rolb pushf (bad) push inc sbb push xor in xor aas push inc xor pop adc fdiv rol push ljmp imul xor test ret ret adc aad mov push dec test outsl test stos and mov mov push lods pop andl lahf (bad) mov sbb or inc xor jg (bad) lcall and inc or push xor in or cmp xchg push jnp (bad) push stos xchg adc add xchg adc daa or lods jb or (bad) pop into test and mov adc sbb xor push xor and lock lods sbb js push sbbl jl mov aam addr16 dec xor pop jle push pop outsb sub or loope xor xor aam mov repnz dec sbb repnz xchg xchg movb imul lock dec loop loop pop fmull inc sub xchg mov jle pushf sub push inc (bad) in pop xor gs inc mov jge dec sahf cmp je clc int3 pop mov aas stos fsubl cmp mov xor fiadd mov cmp test fnop (bad) dec lds add insb pusha loop je xor mov (bad) je imul mov (bad) pop cwtl xchg push mov or jmp jle cmpsl inc add add fidivl pop aam sbb or aad jmp js or imul mov adc xchg push push (bad) (bad) rcr push and sub push push es shlb mov mov xchg add dec cmp dec cmp faddp and mov ss sub push pop int aam xor loope xchg stc (bad) rolb sbb lcall xor cs xor and ret sbb add sub sub dec not and sarb dec pushf popf scas xchg and lods fs mov bound add mov (bad) aaa out push movsb shll cltd (bad) xor call idivb (bad) xor sbb nop jo mov adc cmpsb roll and dec (bad) mov sbb out xor (bad) dec lock and add adc lret pusha loope cmpsl aas pop pop test call clc cmp cmp out arpl lret mov mov movsb push icebp arpl pop addr16 dec jp mov bound inc pop or movsl or add ret xchg subl sub and dec cmp xchg enter xor test push push (bad) xor rolb (bad) loopne notw lret mov lret adc xor outsb sub movsl push xor pop loope pop test push das loope or outsb stos loop pop xor add mov cwtl inc push mull cmp and nop sub xor clc insl mov push add jecxz mov or inc dec pcmpgtb out imul adc cmc cmpsb and jno mov sarb push add and rcrl inc sub sub mov sbb jp mov mov enter call lea popa xchg test sbb mov pop arpl fwait inc flds sub hlt mov mov jle inc cmc test ss push outsb ljmp or inc je enter sub push add mov ds mov movsb mov mov mov xor pop push testb call jmp cmp mov mov movl inc les mov mov xor sbbb movsb inc dec mov xorl lea into lea popa ret sbb and cmp bound popa mov lds sbb shlb xor cmp mov sti inc hlt xor or adc in add cltd or rcrl dec out sub (bad) jb popf adc and mov mov mov loopne jns inc leave mov pop cmp dec aas adc hlt xor dec in test sub js xor rclb jo (bad) jmp pusha inc mov (bad) jb sub inc inc (bad) and jne pop test cmp sbb add pop pop js lds or lods xchg push inc divb rorl ss lea add jge (bad) lock outsl xor sbb es cmp mov ret lds add into pop popa mov lret jp adc cmp cmpsl loopne and lods into fimull clc (bad) sub in inc xor cmpsl dec popf mov xor addr16 cvtps2pi movsb push icebp cmc push inc mov inc sbb mov add and or cmpsl add ret adc inc fistpll addb ret inc add inc mov or xor les je push js sbb pop loope (bad) and sbbb mov ror test mov mov rcll sub shr je ret loop and (bad) jo repz test xchg popa mov cmp fs into xor mov rcrl pop fildll stos xchg push xorl (bad) or fidivr inc lds loopne (bad) xor inc or xor call outsb xchg outsb test test adc out jge hlt rolb out sbb mov pusha cmp push and outsl mov aam mov cmp inc fnstsw fs xor mov sbb mov sbb xor pusha push xor sbb inc push adc jno lcall mov mov insb push sbbl or sbb sbb mov cmp enter inc mov add and xor jecxz ret sub cmp mov inc xchg nop hlt or ss sbb jno pop imul cmp and or inc or xchg lea sar sub sub jl xor jmp push and or pusha xor inc scas shrb (bad) lods or jno scas xor outsb and mov cli or pushf push (bad) hlt out adc sub mov test ret pop xor jo arpl adc mov mov sarb sbb cs push pop addl aaa cld rcll out sbb fcom mov lds jecxz xorb push xchg push push sbb cmp imulb mov lea loope jne push negb xchg adc jle push adc rorb orb sbb xor inc sub orl popf shr mov inc push test and and cltd hlt lcall xchg shrb push xor adc fwait cwtl (bad) call add push sub cmp jp dec rol sub movsb jo pop ds int lea cmp adc pop mov xor fadds and cmp xchg pop sbb inc xchg roll fldl lea jmp cmp mov inc push psraw shrb add cmp les cmp mov jb jno xor mov ds shr cmp add push mov fsubs pusha hlt arpl mov data16 mov popf dec xor daa push (bad) xor cmpl imul loope mov and jo sub das (bad) std xor or xor daa (bad) adc mov pop adc orb xor jl xor jo ret add (bad) xor mov sti dec imul sub inc cltd sub or add cmpsb dec scas mov dec xchg pop sbb fs sahf mov js sbb je (bad) arpl es nop push sub rorb mov dec or sbb ljmp lea inc loopne and popa xchg pusha sub mov and hlt or mov (bad) cli xor xchg add push pop or jno out add (bad) test test xor adc fsubr push mov or inc imul andl pop mov icebp aam ret pop mov cmpl xor adc js sbb add dec sar sub jbe das imul popa push adc adc xor inc lea cmp or xchg jl movsl inc and inc in hlt mov sbb jb adc addb mov jo inc out mov and notb xor test sbb mov and dec xor adcl add sbb xchg pop ds ljmp outsl arpl rorb loopne add adc push xor add cs bound popa pop mov stos js push xchg arpl clc rcrl lock cmp push jle (bad) or frstor jbe xor and cmp xor inc inc jge movsb in or les jge nop xor fnsave cli inc xor jmp ret hlt xor and ljmp out mov loopne (bad) sahf sahf sub sub out aam or xorb pop sub adc js lds push add xor adc lods xor movsb inc xchg mov adc push pop (bad) mov add and lods sub andl shrb push loope ret nop je xor inc dec bsf cmp mov test stos inc jno add loopne sbb loop test adc xchg xor cltd mov or pop or cmp (bad) addr16 mov adc ds into sbb mov inc add mov jl sub push adc int3 push les (bad) (bad) js pop adc jmp and je lock cmpsl (bad) in jno xchg (bad) dec jle ret sub imul pop insl push inc in and int xor inc lahf or je push pop in push (bad) xchg add pop sbb xor outsb jno sbbl punpcklwd scas popf in cmp push or sbb cwtl mov xor fiadd push lret mov fucomp xor cmp inc mov xor jo xor js leave sbb push or loope jmp add or popa insb movsl xor pop adc addr16 sub cs sbb in mov xor inc dec mov xor sbb sbbl lcall or inc shrl roll loopne mov and sarl je mov (bad) sbb xchg adc in jo lea aad xor popa mull cwtl jp lret js test inc ror ljmp pop xchg and imul (bad) jno jo outsb mov loop inc add add jns lds ja adc mov inc (bad) daa xor lods adc lret (bad) test fcomps arpl add cmp sbb sbb jg ds pop xchg jnp dec mov (bad) mov mov or xor push daa lods or arpl mov dec mov mov fdivl (bad) cmpsl mov or add fcompl or push mov call and push hlt and add mov aam mov push jle pop mov add ds sub pop iret add leave sub dec pop cmp push adc popa icebp js pusha and and ret push jp mov test push sbb (bad) jno js aaa movsb lea loop and sbb dec inc add loop jnp lock pop aam adc movsb fstps or rolb je (bad) sarb dec cwtl mov adc loope aaa adc jno pcmpeqb ja mov sbb or popa gs outsl subb ret ret and pop lods loopne sbb inc or lods sbb (bad) xor inc pop pop cmp mov or lret dec les pop inc sub pushaw sub sbb dec std lea lock adc or test or push add xor mov or sbb xor ljmp cld hlt (bad) inc dec jns cmp sbb xor lock mov push pop cwtl adc mov adc and or fisttpl mov insl adc push dec cwtl pop js psraw aad dec push rorb sbb cmpsl cmpsl arpl mov add sub jb dec cmp fsubl scas mov mov sub pusha push mov push mov push dec call dec sbb adc add jo scas mov push adc fmul xor outsl int3 dec je pop sbb loope dec fwait push (bad) dec dec in pop lea aaa pusha jb xor sub (bad) cmp loope xor inc pop pop and flds orl inc js call or rcll lahf pop sbb das mov mov nop push adc jns cmp or add pop lretw in lds push test lea repnz popa test inc adcb rorb mov hlt push mov push movsb mov sub and loop (bad) repnz aaa addl mov sub daa js scas inc gs ss and inc cmp pushf out in pushf mov mov jp outsl into mov sbb push mov mov xchg (bad) cmpsb xchg scas daa xchg pop pop dec mov push shlb dec xor test jb xchg or ja popa mov dec cmp lods adc mov icebp lods add xor add repnz push js mov xor loop daa push pusha inc push cmp out jno mov and mov push inc int3 push push xchg scas mov mov push dec jb in fisttpl inc and aam mov push sbb test xchg dec sub add mov mov test test push or push mov insb add movb xor pop sbb jge mov inc arpl xchg test or mov xchg cli out sub xorb dec punpckhdq lea test cmc jmp dec daa mov pop push mov mov imul ss mov jbe js popa and daa cmp stos notl dec ss dec mov pop or add rcrb mov jo ror mov (bad) outsb stos pop xchg ret sub ficom loope mov loope mov jecxz clc push push adc or stos lock push xchg test sub dec cmp adc movsb pop add lret popa and and lret jl push mov repnz xor movsb icebp mov lock sbb stos and (bad) mov out xor popf mov or mov sub aam mov imul lods insb adc inc push psllw out pop and push popa aam es mov jle (bad) sbb ror into cld push mov add pop pop mov jge movsb inc sbb cmc dec lods pop cmp cmp in pop mov sbbl or insb xor pop adc mov push cwtl sub add or dec adcl fdiv nop push lret icebp mov daa loopne inc aaa push je or daa fnsave lcall jg mov popa or rclb xor add inc mov xor and jp xor enter cmpsb ds mov das aaa pop mov addr16 xchg cmp movsl and add (bad) add aaa je pop rol (bad) cmp int3 jmp inc fnsave push les ret jb push and into push outsb insb or jecxz cmp insb xchg jo inc ss dec inc xchg jns or dec js pop iret sub push mov inc push push jle ficom sub inc iret lahf sahf jne fs outsl adc inc inc xchg leave sub xchg scas rolb sarb xchg mov jo pop dec pop sub mov add sbb and imul mov xchg mov cmpsb imul add sub mov push lods sbb xor mov leave aaa fidiv addb mov arpl pop or cmp (bad) mull xor sbb mov xor outsb (bad) adc insb ret aaa js and xor in push data16 test leave and sub jne xchg or shlb inc sahf loope loop sub push mov addl les in xor dec inc pusha (bad) push adc xlat or push imul mov lret insl insb popf and mov cli popf xor xor icebp test xchg mov adc add push adc or enter inc cmpsb insb add enter mov int3 pop popa and sbb shrl cmp insl add sub insb mov or jnp mov loope (bad) sti popf aaa xor lcall loope jb arpl daa enter sbb xchg and mov pop xchg push push aaa fistp sahf mov push mov ror mov lret or xor or fiadd add mov push add addr16 pop adc movsb xchg jo dec shll int xor mov inc sub int3 pop js sahf push pushl and arpl in or jo hlt add adc xchg les js mov dec mov test test add dec jecxz inc mov ret inc loop cmp lock push sete test xor add mov sbb outsb inc out movsb in adc lods mov les daa popa lea and (bad) xchg (bad) shll bound (bad) or dec push ljmp jo mov xor fisubr push xor fcomps les ret pop or and and push rcll dec (bad) movsb lea mov shr ja enter mov push sbb in cmpsl mov add movsb pusha add sub or push popf push aam mov and pop inc sub pop (bad) hlt test add subl jno popf fadd (bad) mov test pop mov enterw aas fmulp rorb add test sbb push mov lods sahf imul sti add loop adc movsl (bad) and xchg xor popl pushf movsl xchg mov cmp lret xor out push test rolb xchg test pusha mov mov dec push popa xchg loope daa sti jns or or or mov addb inc stos jo rcl bound jbe add mov (bad) loope pop insb flds je xchg movb add add cmc xor adc aad dec cs mov movmskps xor mov es pop loop jl mov or (bad) test xor inc aaa or (bad) xor je pop sbbb or xchg mov leave and sub or rolb sbb icebp dec jnp inc leave adc xchg jo mov in loopne popa addl sub cmp out stos inc mov adc adc inc sbb inc (bad) hlt xchg rorl sub mov add dec movsb lea sbb les insb sbb inc inc and movsb imul leave push sbb add fstpl and and bound inc lods popa xor int3 lods mov insl or popa inc ret push and pusha imul cmpsl add popl (bad) dec mov sub jmp rclb fadd pop xchg sbb adc push aam and std rclb leave (bad) pop adc mov mov orb inc dec cmp xor push mov jo sbb and rcl inc push push or dec lret insb pushf sub dec and pushf adc int ss (bad) mov and jge pop test lret add rclb push fbstp or xchg sbb dec movsl mov in das je popa adc sub push test push and aas rolb xor push inc jo imul stos subb jno stc jmp sub mov cltd iret add add loope lds insb cmp mov xor jl pop cmp sub add (bad) sti or sub int sub and pusha bound pop pop out sbb arpl push xchg and pop test adc lods sub arpl and fwait xor push sbbl pop cmp mov push inc imul inc jbe (bad) xor dec or mov add dec sub mov adc sub das push inc push xor pop shrl and cltd loopne mov inc jl arpl mov push test gs xchg cmp xchg pop call and jo lret xor shll jecxz pop mov cmpsb sbb xor and xor xchg test sub adc mov sbb xor cmpsl adc ja sub inc cmp adc push add mov (bad) faddp lea pushf push mov ret lds in cmp mov dec (bad) (bad) aaa loope loope xchg xor mov add aam fnstsw loop push xlat aaa push movsb xor jno dec sbb repnz and dec sti daa call mov aad rol and in jb inc add insb imul push mov rorb xchg push push and pushw sbb add inc test flds add adc test xchg sub lods pop xor push mov adc (bad) int3 xchg add test and sbb sub mov into mov sub cs (bad) add ss xor pop int3 rcrl sbb or sub out add pop stc or iret xchg xor and imul sub jno sub sbb mov inc cli jno addb and mov xor sbb cmp repz dec dec jl sub mov sbb loope sbb cmp add mov andb mov pop inc loopne jecxz pop or dec in xchg mov orb sbb push mov jp xor cmp (bad) (bad) adc sarb lret inc jg mov xor arpl roll push add add fiaddl mov inc jl sbb lods xor movsb aaa adc cmp es lods sbb push or pop xor add xorl adc cli mov dec bound lret push je cld mov test jl and or or addl test push inc (bad) lods in xchg hlt mov mov cwtl in ret rol lea aam in pop in cmp es mov movb xor cmc dec jne iret xor cwtl and mov cmp xchg pusha fnstcw sti in push hlt xor or xor cltd cmp mov sbb jmp popf or xchg and add ljmp test inc ficom push or add pop in call xor dec sub inc gs push adc stc xchg xchg mov pop test mov cmp (bad) (bad) bound or rolb into xchg dec fdivs insb inc mov sbb push mov xchg xor or xchg inc xor dec or adcl inc scas jno fs (bad) js imul popa and dec add sub test xlat mov adc inc dec fadds insb lds lods xor arpl ss or cmp lock sahf pop test fstpt inc sbb icebp addb cli mov adc push mov adc lea mov test js sbb pushf add dec xor mov and fwait test xchg dec push dec loopne ficom or dec ljmp lahf cmp push xchg fistpl add daa and add push data16 push dec pusha mov test das adc jle js aad les pop (bad) (bad) enter je int3 fsubs or push aad cmp xchg sbb or shlb fs pop cmp mov add jno sbb fcmovnb inc pop arpl adc push popf pop push out add mov push pop ret add rolb rorb push dec jmp sbb jne inc or jne imul xor add fwait push cmp jecxz rcl shlb mov subl data16 push mov or rolb outsb (bad) mov leave or imul inc hlt in mov (bad) (bad) xor sbb cmp stc jo sub (bad) sbb and lock lea sahf rcl and (bad) mov or pop cli dec or xchg jbe mov das fwait call arpl inc dec sbb xor dec jne ss rolb push (bad) icebp je pop adc (bad) ss sub enter ret clc xor enter (bad) rorb inc sub cmp pusha or mov add imul or test sbb xor das or cli int3 inc jp sarl sbb ja pop mov shr shrl popf and addl push or sub pop (bad) jp insb push inc ret mov ljmp loopne (bad) mov dec dec arpl cwtl bound or dec out data16 inc mov and (bad) push cmpsl test xchg xor nop mov loope adc or push cltd sub sub or lods in outsl push movb insl adc xchg lods or aam pusha and fistpll fcompl and (bad) mov xchg jo pop int3 push (bad) insb pop mov push push push loope dec test imul pop data16 push gs sub pop mov or stc and mov sub out sahf inc xchg add add mov jo mov sub mov cmpsb cwtl (bad) cmp rcrb xor js loop xchg xchg roll aad jl sbb jo idivl cmpsl test pusha cmp push mov es faddp test in test mov popa fnop in push sbb js jns xchg inc or mov stc jns xor push xchg sub movsl movsl and mov mov rclw pop test pop rolb xor push xor and inc cmpsl xor add mov push test add js mov add js or stos sub inc push pop out or sbb mov sbb fabs ret shrl (bad) sbb mov pop sti mov daa popa xor xchg or mov adc daa or test psrld clc je sub sbb pop pop stos arpl (bad) dec and cmp mov test in int3 inc mov add xor adc pop adc mov add lahf mov cwtl xor cmp cld push push jo test je ret scas stos ss cwtl xor loope arpl lods test mov les dec cs inc sbb js push adc imul sbb add dec mov aaa lock cld jbe sub ret mov add je shrb inc or adc ss mov ljmp push inc jae int3 (bad) dec je inc (bad) dec sbb lret jmp sbb lock add nop pop inc repnz jo fs les push push shr mov fnsave scas xchg mov lret mov int3 push frstor scas mov pop sbb cmp inc movsb push adc cmp cmp add int xchg push mov xchg shr push inc mov or test inc in dec dec fiadd jnp xchg xor scas xchg xor call and mov adc adc aaa sub shrb xor mov outsl lret xor mov inc sub cmpl mov (bad) and lahf aam mov loop add add lcall dec lea sub or xor or add xchg or (bad) xor rolb jp into xchg mov add dec cli adc xor sub sbb ds push mov cmp add mov pop lods scas push mov mov xchg lea adc adcb sub or cmp loope addl es mov adc popa popa fiadd and dec inc aaa xlat mov (bad) imul adc adc mov or lock das (bad) iret call insl jl insl loope outsl call test cmp rolb jg ret cs adc push rclb (bad) mov xor ret inc (bad) test dec ds jp add push push and push icebp xorl sarl (bad) mul mov adc jge test push lahf (bad) xor add inc loopne nop outsl dec sub sub dec xchg push lea mov or or call adc sbb ss lds pop sub xor or add cmp loopne push pop mov add mov hlt sarl mov dec movsb pop out lock movsb fist jo je (bad) ss mov dec inc dec push pop das or push jns dec das test jecxz inc mov mov in lcall call (bad) test cmp add dec add add dec push arpl jne or idivb inc movsl dec pop fstps clc (bad) icebp inc mov xchg xlat xor ret mov (bad) imul lock xor insb jecxz pusha arpl sbb and dec dec adc bound xor rcrb push cmp sub push repnz mov xor add sub mov orl jl (bad) pop dec pop aaa shrb mov add mov push call cmp or xchg push es sub mov js sbb ss addl loope sub and iret rorl and inc lock (bad) pop push pop inc pop sub movsl push pop push les (bad) repz subl sahf adc add jo inc mov (bad) rolb inc arpl outsl setns pushl dec in lea xchg pop rclb movsl ret jnp mov aam and sub adc aad push mov mov (bad) adc int3 push sbb add pop sub sub sahf loope sub imul dec jmp push fwait iret xchg inc mov (bad) insb les push movsl xor xchg mov push inc inc sbb xchg adc pop dec ds fstps adc test pushf add mov (bad) or add push (bad) and lahf mov mov sub es sub jne jo jns insl add sbbl and adc add js fcmovbe fistl orl dec adc mov and dec mov push and cmp test into dec fistl jp js mov icebp fisttpl popa lods pop jb xchg scas mov add cmpl popa sti push xchg jle add bound or mov jno inc rolb test mov push sbb mov cmp mov adc cmp jno ljmp inc mov shl adc ss jle (bad) and (bad) push adc or xor mov mov push and and add or dec aam mov xor scas xchg addr16 or stos mov aaa pop mov adc dec pop sbb xchg adc ljmp ficom sbb xchg imul shrl or push jbe mov pop xchg cmp xchg pop ret push nop lds adc adc pop das jecxz loope outsb mov mov cmp cli adc (bad) inc sub (bad) mov xor and sub pusha push inc sbb aad icebp ret xor shlb xor bound (bad) mov stos jb test lret sar xchg mov push sarb dec ret pop pop mov (bad) popa ret sub mov xchg loopne popf pop mov add subl xchg push daa test enter dec sub xchg popf lods gs fimul push mul and push push inc lea int3 out bound push inc sbb fwait pop frstor cmp xchg outsb rclb mov and jp add adc inc inc push or dec inc pushf inc mov lods pushf or dec add popf mov cltd or inc sub imul dec test or pop dec shlb xorb lret mov xchg and pop sbb sbb pop arpl or loopne mov pop mov jmp push fsts xchg xor fstps pop fcomi shr inc (bad) aam lret mov push dec (bad) jp dec jbe or adc xor inc pop pop adc push inc loopne mov mov fs push loope cmp and or dec add add mov vcvtss2sd smsw add pop icebp mov and aam xor inc test mov loope xchg adc les or es push push xchg (bad) adc xrelease add mov adc movsl xor push lock push ja add adc fs dec pop pop add mov mov jno inc addb sub out pusha gs mov (bad) push sbb mov push sub mov push inc and inc pop popa rcrl jl test movsl pop fisttpll dec add mov mov push jnp mov and es test mov xchg lcall cmp add lds xor arpl inc aad or lret or xor test push pop dec ljmp loope mov sbb push xor rorb sub lods inc mov inc insl adc pop add imul aam ret add push movsb jo loope and fwait cmp and add push or mov arpl in cmp and mov dec or cmp cmp mov xchg xorb inc ret jns xchg xchg pop mov enter xor lcallw sub cmovae dec in or adc sub mov daa push mov or mov adc cmc ja xor jne arpl push jae test and lahf xor sub adc pop cmp cmpsl shrb add pop loop cmpsb pushf cmp (bad) dec test xor insl dec add es fmull (bad) loope sbb cmp xor adc mov or push sub scas cmpsb push sub aam enter ljmp mov dec jae xor lods push mov jnp inc inc pop and es mov add pop or jb push mov or rolb fs mov fmuls pushf fdivl jno scas (bad) lds movsl mov xor push lahf movsl jne (bad) mov mov lahf sbb bound dec insb pop sbb mov mov rsqrtps jmp cld fsubr nop dec test dec or lret dec or sub jp add inc fdivs xor add xchg jbe call pop (bad) xor add xchg negb adc xor add js push and or loopne (bad) lret (bad) pop popa xor js xchg andl and sbb sbb xor fmul fimull sub imul scas jg sbb insl (bad) sub sti push addr16 inc data16 push pop add push mov or leave mov inc sub insb sbb popa mov lock sub test js sbb or mov mov enter pop fwait rorb loop mov enter and in mov mov mov stos push into (bad) push ret xchg rorl repnz sub adc xchg mov les sar jge pop pop dec jecxz push ret mov and sahf roll sub xchg sub sub and and mov add test dec sbb js test loopne aam ficom dec inc scas cmp fdiv cmp fwait test movsb xchg sbb mov mov cmpsl mov or mov test pop idivb ret lret nop test cmpsb adc cmc insl lea pop test and mov and addr16 jns add daa add repz js test fld mov xchg push inc pusha sub stos (bad) pusha popa das fsubl adc cmp lods adc mov adcl add rorb imul add mov mov mov pushf or std ret mov fisttpll dec inc cwtl mov cs xchg test sbb sbb cmp xchg les cmp ret (bad) sub xor and sub cmp (bad) mov inc sub loope xor das inc jle pop lods ret add sbb xchg pop mov test push mov out inc mov fsubrs mov adc add cmp inc stos add cmc push sub or xor adc (bad) aam loope (bad) adc in ret add sub dec ss andb js es lahf clc movsb sbb leave dec mov js pop ljmp xor and cmpsb nop dec add xor fidivl mov loop cwtl cmp aad cmp and pop mov pop sub adc adc sbb ret xor add xchg addl or sub sub inc adc adcb mov jg stos rol test paddq xchg inc pop aam mov and adc mov ret jmp mov lcall push es push push fidivrl mov xchg xchg popa mov jno push fildl mov je push addl pop dec and in sub fwait mov (bad) mov jno fistpl jo push pushf pusha xor popa test xchg inc lea or cwtl mov mov pusha out sbb add cmc push adc repnz xchg pusha dec test pop pop add push loope pusha outsb mov loope mov repnz and mov (bad) or jmp gs xchg sub jo inc ror addl xor insb push jle dec shl cmp sbb mov dec test js push xchg (bad) test add js pop xorl jae push test stos out push aam lea mov imul in push sahf push test mov fisubr xchg aad xor test das pushf add inc dec and cmp inc add mov jae and or inc fmuls jmp orb in sub or fwait push cmp push out daa frstor in dec push ds pop loope and and lods (bad) int3 or mov adc (bad) push xor std adc push mov add dec or cld ror push cmp lea add push (bad) lret mov gs cmc aaa push push inc jmp xorl mov jne fwait (bad) fidivrl bound inc rorb dec arpl or add jmp pop xchg rorb inc sub leave js or sti push ss and flds push dec mov add lds insb sub cmp out pop add movb roll je,pt inc imul jbe inc adc xor nop rorb daa sbb insb and add repz aad cmp cmp (bad) and and sbb mov mov mov adc pop xor sub sub add (bad) jb mov inc push fidivrl lret add sub xor cld xor sbbl cwtl test pop sbb (bad) int das ret sub sub adc mov ss jmp mov fs mov (bad) lret sahf mov ljmp sahf pop stos or lahf dec xor jmp mov dec pop shl inc bsr lret add or fmull or loop (bad) add inc inc push pusha or pusha icebp int3 inc mov adc int cmp insb and shlb push scas outsl adc fild lods scas insl loopne sub fs or jns int push cmp repz and ds leave push sub imul mov xor push mov inc sub inc mov cmpsl xchg mov add jecxz cmp xor js daa adc bound aam sub lret fwait adc arpl xor fld pusha mov cltd mov pusha dec sbb push dec add aaa icebp shll popf xor dec (bad) xor pop leave push add loopne test cmp in add or bound sbb pop imul or and or adc jne pop cmp pop sbb idivl mov mov (bad) mov add add pop ja aaa in inc cmp les flds shll aam pop inc inc call sbb pop or test ljmp inc adc or and adc lods rcrb pop xchg test lods inc or shrl test xor inc mov or dec sub dec add stos adc jo test inc nop bound sub xchg mov push jb sbb inc dec outsl push mov cmp popf fs divl bound int3 test push dec jnp loope add test mov jge cmp xor push das add xor add adc dec (bad) xchg or mov add cmp pop (bad) sbb js mov je add mov inc inc (bad) push push and sub jb push xor sub push dec stos es popf or push inc call sbb test cltd aaa jl jb mov xchg js pop (bad) cmp mov dec sahf sbb xchg lods xor inc mov cmpsb push inc xchg add mov xor xor ss sbb adc cmp push inc btc loop nop test lods jg test add aad ret leave jmp jb xor gs daa push push (bad) xchg or mov or rorl addr16 add imul fnsave cmp pop sbb (bad) outsl pop popa icebp or xor test cmpl cmpsb test push adc inc mov and and insl jns xor ja xchg mov xor adc and sbb mov add inc adc dec or out fstpt pushf mov js daa or mulps fistpll pop sbbb xchg jbe sbb mov arpl push cmc jp sbb jno lods push push (bad) cli popa ffreep or xchg jno push dec or xchg and push cmp push lock push sbb push jle mov mov insb leave sub inc lahf es arpl repnz push sbb sub addr16 cmp outsl add adc xchg inc cmpsb cli cmpsb insb adc jo test jne lret outsl inc and mov mov cmpsl aaa fwait mov mov les ja or adc xlat adc pop sbb pop outsl and xchg popa and push add add mov movsb rolb movb movb adc dec ja or mov push aaa xchg sahf jg ljmp pushf xchg xchg lods xor int rorl mov cmp sub pop inc test xchg push add je sbb sbb into pop sbb and adc xchg xor adc add imul and push push adc pop sahf sbb xor push and add sbb and lods je and push and and inc pop mov test push dec lret js sub lock rolb inc addl cmp or aaa push sbb and xchg lds cmp ljmp les imul (bad) sbb pop sbb fsubl lea outsb lea scas loopne aaa xchg ret lods cld pop (bad) inc insl call sahf rcrb clc divb aad push jb cmp push dec adcb xor ret and add insb xchg dec push (bad) mov bound xor mov pop dec jnp xor jbe lret add rol inc sbb and push jg push gs fmuls cmp or cmc pop cltd push add int repnz and fcoms lods and cmp and addl mov or xor and mov arpl mov sub or jbe pop arpl and pusha inc repz mov popf pop sub cmp icebp and mov loope mov cmp sub mov sbb dec push dec movsb fwait sbb inc insb loopne sub mov dec std aaa xorl stos insb mov mov mov xorl jnp xor pop je adcl mov sub sub (bad) fsubl xchg orb xor xor movsl addl dec mov cmc mov les push adc mov (bad) sti add adc push push sub pop xchg ret push (bad) jne add push lock mov data16 test jne add add shlb xor xor and sub add fstpl fnop xor xor xchg ret stos sbb push aaa sub push and inc push (bad) aam xlat xor pushf dec sub jo mov sub adc push pop add push mov mov into or add pop jmp or sub mov call fildll and test out sub outsl mov icebp pop push mov push and xor ds fwait cmc dec fnstenv adc in (bad) cwtl sub mov mov or lahf pop aaa cmp (bad) ror lods or and sahf jge ss (bad) mov mov mov sbb push xchg mov (bad) mov lock or fwait mov push mov xor fiadd addb cmpl outsl inc adc imul das add add jmp and movsl aam sbb fisub push xchg nop popa xor mov cmpsl andl and stos inc popf popa mov rorl jecxz faddp or test sbb or xor sti dec mov call sbb movb pop inc add add in mov push jo mov inc outsl add mulb dec mov sbb adc jns sbbb fcomip cmpsl movsb lds faddp ss jo pop lret sbb xchg cmp sub cmp or mov pop inc sub loopne ljmp cltd xorl sub dec mov lret shrb mov mov adc repnz inc sbb arpl popf xchg scas call loopne nop loopne jo and mov sbb andl cmp movsl push inc push rorb inc pop or inc cs mov imul xor adc rolb into movsb dec rclb inc rcll mull inc stos mov xor xor xchg pop mov aad add push and sub in mov mov xchg xchg mov les inc (bad) clc push insb imul lea fsubrl jno dec mov mov mov (bad) mov sbb mov xor outsl jl (bad) mov inc ret loopne mov pop jl cmp add mov push sbb es addr16 mov movsb (bad) sbb jg popa sub mov pop and and test mov push dec mov add mov ja test ds inc dec or cwtl movsb jo dec test dec rolb add sub rdpmc inc xorb (bad) or imul inc pop scas das int3 mov push test je lcall or shlb daa xor or test mov iret das mov cmpsl or add lret push add rclb in add imul add jmp addr16 pop mov push cs outsl sbb cmp (bad) dec fnop push xchg (bad) push pop das cmp mov push mov xchg jo (bad) or ret pop mov add rolb xchg mov add and push test push jne aad nop in and fmuls sub and mov lea mov daa cwtl inc mov push ret mov xchg fmull lret test sbb add add jo leave mov inc mov lock add (bad) lret add and pop or pop int3 lds pop je jp les shrb in lret push and or pusha psubusb hlt add adc ja inc push adc add and (bad) jmp pop adc mov add cmp imul dec or dec sub adc movb adc loopne sbb push aam jg xor bound mov aaa sbb vaddsubpd mov int3 nop orb add xor dec in dec xor mov adcl dec pushf mov adc jecxz outsb dec xor cmp daa push xchg pop inc mov pop gs add inc dec orl outsl ds test dec add or cmp adc jecxz loope or or js push add repnz push inc iret mov pop ret mov sbb lea test sbb pop adc pop push pushf ss push dec das ret out add pop xor test xlat mov rcrb int3 or bound test lock fstpt subb push daa or pushf xchg orl (bad) add sahf add adc and jns rcrb cs ret xor popa cmp xchg (bad) icebp xchg lds ret lret (bad) or sbb mov jnp aam test test or inc mov add dec mov shrl in dec imul jmp into or inc or (bad) je outsb orb add test popf clc int3 in and xchg iret pop xchg mov inc and sub xorb add xor jmp lods pop inc dec sbb mov cmp int xor lock mov je mov mov imull add leave mov add push loop gs aas or nop mov imul cs in push ds pop pop sbb fdivr aaa and add imul xor or add xchg cmp adc cmp imul add cmp cwtl and xorb mov push inc sub enterw fnsave pusha insl or push movsl lods out pop and addl sbb repz icebp mov push add addr16 iret adc sbb or test add in daa inc pop jnp xor mov jne and pusha loop lds pusha dec enter enter sbb (bad) cmp push inc test popf adc push mov enter fcomps out roll sub shrl mov movsl cmp adc push lods lds ljmp decb mov or hlt mov sbb push movsb into into enter push inc das popa and hlt popa cmp adc add inc add scas xchg in add mov aaa in add imulb adc adc inc cmp mov hlt or sub or pop clc or or rclb inc nop (bad) dec jmp jle enter fnstenv insb popa or (bad) (bad) shl mov (bad) punpckhwd and scas push jnp das sbb lods lret sbb repnz jmp mov adc fwait sub or push mul mov addl or ret sti enter jo sub das adc pavgb sub dec or nop inc fstps mov jp sbb jnp pop jecxz sbb test ret mov adcb sbb push fmuls inc push pop add and and pop and xchg dec lea sbb shrl sbb mov pop pushf rclb ds pop pop xor js add xorl pop arpl push fldenv lea sub rorb loope lsl add es fcompl into (bad) (bad) xor test cli ja xchg or rorl lahf push mov loopne (bad) call rcl dec mov add imul in ljmp xor dec mov jo inc fwait orl xor or add pop lahf add jno fcoml sbb push pop cmp imul jno add cmp mov je imul jecxz inc xor pusha test sub xor mov xor mov mulb push inc mov jmp js fisub dec sbb subb inc rcrl bound sub (bad) mov (bad) jecxz cmp test push and xor add movb fs mov dec jno pop mov arpl or or sahf jo daa mov mov xchg sbb xor bound sbb push inc arpl pop rcrb (bad) fdivrp aam push int3 lret pop add xchg mov (bad) xor mov pop iret pop push push addb and and jmp push jo mov mov inc aaa add repz pop add data16 outsl push mov inc loopne cltd mov sbb or cmpb jo sahf push sbb sbb inc (bad) lock jbe mov push mov pop lods fs mov jae push mov add ret (bad) or mov push fs mov lcall mov lea pop add aam add data16 in jne sub shlb jmp mov popf mov mov inc je jmp loopne and sbb sub (bad) xchg mov pop or xchg mov pop lds bound fnstcw adcl scas jecxz xchg gs addb sub in fadds test mov loope icebp xchg jp mov or or and enter aas movsl movsl test xor xor xchg cmpsb mov and popa lods (bad) jno sti jno sub add sti push push xor (bad) xor addl lret imul mov and jns jb insb das imul test lock jp cmp xchg and xor mov insl insl dec pop jmp pop loop add aad cmp pop jae xor repnz adc or insb mov xchg xchg xor cmp add push dec ret and mov xchg add sub xor and mov pop push test sub jo push sbb mov jno and aaa inc mov cwtl inc mov pop add mov (bad) (bad) imul loope stc push pusha push daa add push add pop sbb xor xchg add push movb sub add sbb insl stos dec pop sub (bad) (bad) xor mov (bad) mov dec daa je nop test add xor int3 pop les sbb sbb (bad) (bad) nop mov pop or pushf sarl addl xor insb pop xor mov adc cmp mov xchg xor dec sub pusha nop pop jecxz cmp lret pop pop aaa mov fistl jne xor xlat bound loope xor mov aam pop and sbb jno push movsl or sub mov xchg loope pusha jge jbe loop sub mov xor sbb or inc pushf or ret jmp aam and jmp ror in add push mov mov push aam push imul cmp (bad) sar or test ret inc cmp (bad) jle sub (bad) ss push xor pusha daa negb sbbl loope add icebp mov xor sub mov imul outsb xchg test push das cmp lcall mov leave xor pusha xor xor cltd push or add adc adc lods add popa test popf xchg mov push nop int3 popa push (bad) jb inc lret dec mov aas sub add ss mov test loope out arpl bswap (bad) sub pop fstpl inc jmp sbb pusha or pop call and test xchg pop adc aam add cmp mov aad sub cmpsl sbb mov (bad) jne xor xchg pushf mov dec fdivs je in loope arpl jne mov push or dec pop and push jp xor mov cmpsl js or add addr16 frstor loop imul pop addl loopne lock mov sub stos cmp ret cmpsb imul push sub and aaa lcall pop sbb rcrb in and push and aas cmp insl and adc mov cmp es xchg cmpl xchg inc jmp lods stc or mov inc pop mov push sbb xchg pop mov jae icebp das lret adc inc and lods or ret addr16 popa adc cmp rol pop xchg add rol inc fldl cmp and repnz mov and push rorl fild mov dec and movsl push addl pop add dec sbb test dec fstps xor pop jp xchg cmovb lret out xchg addl test ret aam andb mov fmull inc dec popa lods shll js inc sub rorb mov push mov incl inc add dec xor or ss aad add and je adc (bad) rclb (bad) mov mov sub xlat hlt mov pusha adc clc add rolb enter lret push mov lock test or dec push scas mov mov imul into push sbb pop enter (bad) xchg adc push int lods jo and sahf cs sbb xchg cwtl or (bad) and icebp jl push sub push hlt xor mov xor or inc pusha jno lahf lods or add jb adc lea push cmp fwait aam inc sub repnz sbb dec pop imul cmp bound dec mov adc inc js hlt inc or rolb push int push divl mov inc sub cmp sub or mov (bad) sbb cmp jecxz cmp xor sbb daa outsb mov cmp sub (bad) dec jmp adc adc sbb pop sub fsqrt xor pop clc adc sub enter add pop mov mov and pop sahf fdivr lret arpl inc dec inc pop xor ss or fadd fiadd push jmp inc or sarb mov xor mov (bad) mov lcall sbb push or adc pop dec or push inc stos lret sub ss jo lods xor cltd xor (bad) addl pop cmp and add ljmp lods push sbb mov addr16 dec mov jl insb jl push outsl add and add lret icebp cwtl add sahf shrb or fadds (bad) xchg inc adc pop mov into sbb shrb xor aaa fadd loop dec add lret orb cmp mov xor and or mov cmovo in mov push clc add mov dec sbb popf mov mov stos pusha cltd and sub out (bad) push add and sahf mov lea mov leave mov stos addr16 jno (bad) jno mov jge mov push mov nop mov loop outsb shlb in repz rol movsl dec push sub andl mov gs imul sahf arpl dec push in xchg out or dec sub and ss lea mov (bad) enter (bad) (bad) dec mov outsb jne loop push push sub fstpl mov pop and lods xor add clc xchg jbe jecxz mull lahf sbbb loope mov xor test cwtl dec adcl stos add mov sbb push sbb sbb (bad) (bad) adc js pusha js lcall or jb mov cmp repz xor push dec fist adc into mov arpl jecxz gs das lds jecxz adc imul sub jae inc adc movsl mov jae sub push add push add les in sub scas (bad) movsb push xchg jno icebp testb xchg add (bad) out mov adc loopne sub xor imul or loopne rorb loop dec cmp test and add sub js sub inc test mov adc ljmp add lret and mov (bad) enter arpl jb stos mov adc lea and add inc cmp lock rorb sbb adc push pop mov andb sub test iret rol jo outsb xor add imul cli jg cmp push pop xor pop and mov popa jo sbb inc or in cli outsb nop mov pusha rolb loopne mov lods push lahf lea push (bad) sbb into mov stos popa movsl rolb mov pop in xor fnstcw and push rolb icebp sub push (bad) arpl hlt lods mov inc push push and loop in cmp xchg movsb cwtl (bad) cmp pop sbb push add cmp mov and add or add scas aas stc loope inc adc int3 inc mov sub xor jge add adcb sbb addr16 (bad) and ret insl adc xor add and push das outsl sub or and rolb dec es movsl lds xchg insl bound sub sub add into xor push mov (bad) rcrb push cmp jbe test xchg push orl mov mov and mov and add out lods or popf gs lcall add fisub adcl enter xchg mov xchg dec add imul pop and inc cmp cmp jp sub stos and sub push push inc cmp je sbb cmp mulb mov (bad) and sbb aas xor add (bad) sbb cwtl (bad) fildll jne jns jo inc mov push mov pusha daa push push xchg orb popa add scas xchg sub jge adc jg sbb inc add push fdivl xchg xchg push (bad) xchg xor addb jbe (bad) cmpsl mov rep push in movsl xchg and out push negb inc repz dec pop pop push adc pop dec mov push pop or pop cld daa push dec add mov movsb test and adc inc and xchg rclb fild and sub mov dec mov adc cmp mov adc pop cmp cmp pop jle mov lds sbb and (bad) dec cmpsl in mov cmp mov mov lds int sahf cmpsb xchg imul mov test add cmpsl gs or xor push in cmpb inc sbb loope add movsl mov add pop jne rorb mov punpcklbw pop sbb lcall and mov inc add jo adc insl cmp inc sbb in scas addl push inc loop roll cli mov test lods dec jle add inc mov imul loope loop daa mov aad pop ret xchg (bad) or jo xor das and loopne sub enterw ret (bad) or xchg add xor cmp add mov mov add or hlt add cwtl in xor dec or dec add add aas add xchg push in movsb ret or mov rclb dec test add jb and jmp or in inc adc lods pusha arpl jmp call popa cmp les push xchg in fwait inc sbb xchg push in mov mov xorb data16 cltd add (bad) pop lcall sti add ret aam (bad) sub sub cmovno adc push sarl jecxz into sub push insb mov pop sbbl movsl ret push cmp mov dec xchg js and enter xor pushf push pop repz movsb push push pop (bad) insb inc call sbb add ds or cmp daa mov loopne shll push and adc ljmp mov out add push adc daa push xor add imul in rorb sub xor sbb sbb sbb in and es cmpsb jmp shll es sub jno or add inc or dec clc adcb sub lds adc out pop (bad) fcomps sbb lret test cmp push xor data16 loope xchg jo (bad) mov stc nop mov in adcb mov adcb inc push push popa movsl cmp pop mov push cwtl inc fmul (bad) or mov push loopne addl ss xor scas push adc aaa lea sarl mov les les mov pop aam dec test addr16 add lock lret add xchg xchg push (bad) (bad) lea xchg dec pop push push xchg imul lret movsb hlt add sbb mov jae mov sub das inc lock outsl xchg aas mov add dec add mov sub or cmp fldenv (bad) and mov (bad) and sti sub mov ds stos in insl push pop inc mov push adc ret xor lahf push inc push sub inc insb cmpsl aaa push jmp (bad) push xchg or mov or in adc inc cmp adc or sub scas aaa and ret xchg mov shl cmp (bad) aad jle lret cmp mov rclb mov jle inc test loop xchg add add jmp movsb out xchg jns addr16 test pop add push outsl cltd jmp cmp mov dec mov rorb jb orl xor arpl cmp shrl xchg and neg push nop push outsb popa insl push jl lret pop add rorb repnz mov sub add in sbb xor in nop icebp jnp imul mov mov push and movb dec xor (bad) jg add fcomps push pop aam pushl push adc loopne arpl loopne clc adc sub mov sbb jbe mov or roll inc (bad) lock inc loope add pusha adc pushf stos aad orl popa loope mov or into hlt or sarl sbb popa xor inc adc mov xor adc push push in ds push fcomps ds addr16 mov mov outsl jmp cmpsl mov adc or mov add or mov xor jo int3 mov dec ljmp (bad) jb adc add mov add rcl loopne sahf dec xor adc pop lock outsl arpl mov cmp dec loope pusha lods xchg or cmp jecxz xchg and mov sbb decb xor xor or (bad) cmp popl (bad) or and je fisttpl imul stos sbb push cmp adc jbe (bad) xor add adc ss addl push int3 daa and loopne (bad) lock std (bad) push sbb scas int test xchg scas adc out xor movsb fs cmpsl and ret fimull lds adc dec dec sub add mov xchg sub inc lea or aaa mov call push push inc fsub pusha xor pop xchg arpl jl fisubl pop push adc arpl fnstsw add add les add int dec aam cs cmc je mov pusha (bad) (bad) cmp lret mov rorb (bad) push and xor add test add imul js dec xor sub mov hlt jns mov adc cmp sub nop es (bad) pop mov mov aaa sub xchg adc movsb ret mov pushf inc mov test pop (bad) push cmp test sarl shrb movsb push arpl xor popf movb sbb and push push fsubl test mov je mov jl scas pop dec addb lods mov cwtl add and push lret cmp inc insl adc imul push inc add pop xchg push shlb pop jle ret lods test rcrl sbb mov inc call lcall imul xor xchg inc call sub dec or pop xor stc and cmp sub fdivrl bound lock xchg xchg mov inc xor inc test ret mov and in adc or inc jmp ljmp cmp mov sahf ficompl or (bad) ret inc jns cmpsl jae mov cmp lds sub loope lods sarb out pop sbbl aaa and jecxz (bad) sbb stos xchg rclb inc popa loopne lods push ret lods push lret sub xor mov add lods add (bad) sbb test gs xchg test xor mov out (bad) xor jecxz adc (bad) lds add popf lods sbb add mov imul xor loope dec or insl lahf add mov mov mov xor add add fcoml orb arpl inc mov xor pop arpl mov add xor cmp std jle mov mov pop pop or pop add xor (bad) fcmovu pop xor sbb (bad) insl cwtl or mov add sbb gs inc pop pushf add mov and jns push xchg (bad) sbb lods mov or or pop xchg rorb call add push (bad) mov mov out (bad) push sahf xchg xor push xchg ljmpw xor sbb faddp push mov into xchg adc xor mov sbb ljmp in or pushf add xchg dec test mov push xor andb stos dec shl mov sbb or mov sub dec lods add add or inc add dec sbb das pop push pop (bad) scas dec mov nop jno adc xor fs das and sbb jecxz ss push daa xchg lret sub fwait adc inc inc xchg add addb notl adc cld jp (bad) loope enter xor inc pop mov push xchg pushf sub adc test dec xor jne (bad) mov cmp loopne andb mov or sub movsl xor sub pop imul sub test sbb push les or loope bound jecxz xor cs mov jp sbb cmp call sbb push (bad) xchg mov cmc cmpl loop mov or mov imul xor jo dec xor sbb and pop push mov nop add nop in fwait popa or mov das add sbb xor pop fchs add fcmovu cmp es sbb sbb or (bad) xor ret (bad) dec movsl mov pop add ret ja lods push and je xor mov adc loope jecxz mov test fs pop (bad) sbb cmp les dec in nop (bad) loop cs pop pop dec les pop mov mov lahf dec jo hlt (bad) xor adc cmp cmp mov xchg rolb push ret pop adc cmp insl add xor loopne sbb inc adc inc ret add adc sbb aaa rcrb sub insb adc dec or xchg dec stc add faddl pusha insl mov sbb pop fsubs sbb dec in sbb pop cmp add pusha out inc clc aaa jbe dec jbe mov fidivl xchg jp jg sub xchg out scas jmp fisttpl xchg insb (bad) adc in xchg pop (bad) fisttpl xor (bad) cs inc dec sbb mov jnp sbb icebp xchg adc cmpsl (bad) jmp andb lea (bad) mov jae into inc cmp aas call scas cmp or outsb mov mov dec loope push mov daa arpl orb mov dec add ret and lds gs lret ds mov test sub ja push cmp jb push inc inc pop or lahf adc test dec orl xor mov mov or push lods push popa xchg sub xor arpl xor sub test (bad) sub (bad) jb push lods lods xor add dec arpl movsl xor or push (bad) inc jns aam sub add loop outsl pop pop mov or sub dec icebp fisubl push sbb sub adc cmp jo lock loope test stos and je mov xchg add pop mov add movsl loop and into aas jg jns pop cmp adc lret and mov or or adc sbb sub cmp (bad) mov mov insb or popa jne sub xor push je addr16 pop shrb bound push fcompl aam pusha mov ret mov adc jecxz pusha pusha bound inc cltd inc ror sub pop call inc push rol xor pusha fbstp xadd in mov repz dec sub add loope mov scas aam inc or jle jno mov sarl adc loop or adc or fs outsl das popf cmc andb imul sub ret cmovbe dec mov and pusha xor mov push dec (bad) (bad) xor sbb ret pop pop dec jge jo js inc mov jnp popf add and add or loop adc ret fildl (bad) xchg mov lea pop pop addr16 xor call push sub adc adc mov bound shll mov dec arpl jae mov mov loopne inc loopw jp dec imul loope gs cmp adc imul dec xchg cmc cwtl xchg test jbe sub adc add ror outsl and xor push and xchg mov fcomps pop mov es sub test in or insl push outsb push inc xor xor shll and mov adc xor and xchg mov mov insb loop (bad) push dec movb movsl add test inc sub inc push sbb es adc jl or and inc subb dec or pop add add inc mov sub add push mov adc out mov pop sbb dec sbb jno lret jmp test (bad) incl (bad) les in mov test adc andb push xchg mov xor out sbb xchg xchg adc push adc xor sti push (bad) adc sbb dec adc sbb inc int pusha xor mov fs xor push cltd pop cmp setns (bad) sti mov lret cmpl (bad) add pop ja ljmp pushf and jno pusha das pop mov fmuls mov add lcall xor and or xchg daa jge call (bad) xor sub dec xchg cmpsb movsb lret jbe ret in rcll cwtl add push xlat adc mov inc sbb dec and sbb das lret ljmp xor test inc fs mov pusha inc ret and lods or push icebp mov ss mov mov xor sub cmp mov pop lea add js outsl push and insl gs bound adc or adcb and xchg adc xor out daa enter jae test inc mov int3 push jge push dec sub test pop sahf mov cs das dec sbb mov roll sub push insb test cwtl aaa mov loope xchg sbb adc jo adc jae stos mov xor sbb pop cmp or adcb test xchg mov or cmp mov add cmpsl xchg push scas push xchg mov and pushf sub es xor (bad) jo (bad) mov push mov add shrl mov roll rolb push add jo ret test loope jo and adc loopne xor mov xchg dec jns rclb pushf mov or cmp lock or rorb and js sbb out ss push and outsb or test movsb pop adc int3 pop ss push cmp sbb dec inc rolb sti cmovg mov (bad) dec ret xor daa pusha sbb out cmp call dec push and push mov adc sarl out pop rcll sub add push or mov test and pop dec fbstp pusha sub inc add addr16 dec or inc sbb ret loope sbb cmp sub pop or xor xchg cltd mov cmp movsl xchg subl xchg cmp hlt pop add popf lea lock shl add jp mov inc scas pushf or mov lods pop inc mov adc scas xchg popa and enter add mov cmp lcall sub les dec iret test mov mov jno xor subl rol mov xor (bad) cmp jo mov addb sbb sbb jl and or addb dec cmp mov sahf ss (bad) mov sub movsb add and inc sub enter push stc adc xor popa js push enter inc sub adc adc jp push xorl aaa sbb sbb es adc (bad) ljmp xor mov sbbb ret inc les (bad) or js adc cmp adc mov lea es sbbb dec imul cmpl mov outsl popa cmp mov stos inc adc mov addl or pusha into scas or jns and inc and out add xchg hlt adc and pop enter andb cmp mov push inc cmp pop mov cmp add or out sub sub xchg pop sub pop pop cmp repz adc stos push jno lret fidivl pop in sub sub push xor or mov and outsb fidivl inc dec jbe stos add mov popa ret or xor sbb inc jecxz sub test xor imul adc mov adc cmpsl test sbb xchg cmp dec (bad) cmpsl icebp in imul push pop lods mov push or ds mov add sbb sbb pushf xchg pop loopne dec push (bad) rorb adc fldenv (bad) xchg or enter xchg cmp sub mov pmovmskb rorl cmp bound stos inc movsb int3 sbb push sarb add lods lret add pop (bad) cmc xor jbe push test inc add lods pop push push ljmp push mov and mov sbb or rorl nop mov xor lcall test loopne adc popa add mov ret and dec push and push mov xchg jb loop cmc (bad) fnsave aaa mov sbb dec xor rorb mulb dec jo lods sub add imul add sbb sbb popl pop sub imul sbb xchg xchg scas and mov adc pop push sbb xchg mov jno mov (bad) push mov lds xchg xor popa test leave xor pusha lea cmpsl (bad) mov scas dec psrad test push adc add mov rolb pop mov inc into in inc xor pop cmp mov (bad) mov lds xor lock in add mov hlt push aam xor sahf jle mov add pop rcll or cmp cmp (bad) repnz sbb and aaa lods inc xchg inc mov rclb xchg or push mov push out es clc mov mov sub sahf adc or jl pop lret addb test xor adc loopne pop add xchg xchg sahf add xor jp addl ret lcall push and (bad) jecxz xchg xchg data16 dec xchg sub xor and (bad) clc and dec or xchg xchg inc fstps jecxz pop add es mov or lret cltd and test mov xchg xchg sub or out fiadd push jno mov nop add sbb test add sbb pop or push sub pushf inc sbb inc mov and dec mov add xchg push jb imul sub test (bad) iret pop fcmovnb pop cmp in ss les push dec (bad) push or xor xchg cmp sub push dec fisttpl push xchg inc (bad) inc mov jnp or icebp rol jo dec add addr16 adcb imul and nop cld and xchg adc push mov (bad) mov mov mov repnz fs jno xor xor movsb ds out mov mov sbb push (bad) outsb push cmpsl pop or or insb and push push mov cmp pop das xchg xor dec cmpxchg push rcrb sbb pop mov sbb xchg test aaa sub add push cmp xor or in or jbe (bad) call movsb and sub popa imul jb sbb daa and xchg pop sub (bad) lock in iret sbb (bad) push and push jg lcall call dec cmp (bad) adc pop xchg xor add or dec leave mov or xor imul js out mov in xchg mov cmp mov inc dec call jo jg (bad) xor rclb xor sub je mov dec lock lahf les sbbb aaa adc sub test loopne xchg inc divl (bad) mov (bad) cmpsl fwait push mov adc pop (bad) pop in mov pop lods cmp xchg cmp and js xchg xor add fstpl adc (bad) cmp dec inc mov out rolb pop push add or mov js push dec movsl add inc xor xor mov add out movsl pop aam mov lock mov ja add pop call sbb (bad) pop xor push mov sbb rolb cmc sarb test mov fldl rclb add add sub out jbe pop xorb test daa inc popl fisttpll ret ficom add jp sbb cmp dec inc jge (bad) cwtl loope sub popa aaa and add aad les adc loop stos jl (bad) add scas and movsb pop pop and dec sahf ret daa pop (bad) jns push mov leave or rolb daa popf or push imul xchg stos ss (bad) bnd adc pop xor mov movsb lcall rcll add and sbb bound push pop adc mov cwtl dec je push xor xor mov xchg inc mov es mov daa fdivrs lods test cltd test sbb mov add xor sbb or mov push pop repz icebp and or fsts pop jecxz vmovupd push cmp pusha cmp sbb (bad) lret (bad) rclb sub dec lret imul lds ret mov lods adcl frstor add sub dec jp lea mov pop and mov mov outsb in adc adc ss push rcr pop push xchg imul cmp ret pop mov add inc mov daa pushf jp jl or or pusha rclb add ficom inc cmp jecxz sbbl push xor mov divl scas jnp pop xchg pop fldl push sub dec push test test and inc and (bad) addr16 js shr or mov outsl popa cmp push inc mov je add or aaa xor (bad) adcb cmpsl fs sbb test xor push mov dec inc enter mov and sahf addr16 push push mov fisubl movsl imul lcall push mov add inc pop xor xor jmp push clc or lds mov xor sahf or neg dec cmp (bad) sub cvtps2pi lcall add inc outsl leave rclb mov mov xor mov jb add add lds xchg (bad) in loope add ss pushf test and add cmp pop mov and jb jle fbstp icebp scas mov lock dec int fsubs and das cld pushf pop (bad) lods dec push lcallw pop push sbb (bad) fwait jb add sbb orb (bad) pusha xor pop loop pop scas sbb jp dec mov xor sub jecxz dec mov xchg pop ss test add sbb add lcall adc add mov fistpl cmpsl xor sbb push cwtl pop mov dec inc cmp (bad) jo sti loop shrb (bad) in sub ja rclb adc xchg xor xlat test adc xor or lock out mov pop and (bad) nop dec pusha imul lcall add test outsl sbb xor jo and dec push jne addr16 outsb pop push xchg add xchg fcmove js or adc mov or adc push imul push fiadd add (bad) push loope jmp pop (bad) bound enter loop cmp sub (bad) adc dec and in ret test add push cmpsl imul adc add add inc sbb popa pop mov inc sub mov (bad) push pop les std push and fsub in cmp insl pop add popa adc test inc aam push xchg add ds cli aam push and xlat pusha jo push cwtl das push fnsave jp cltd mov jl inc lea shr pop (bad) xor shrl test ljmp push jnp add xchg inc push mov fcomps addb pop stos jno popa adc push xor adc jnp xor je pop sub rol hlt xchg stos add lods mov (bad) cmp push ss xchg jo sbb pushf adc cmpsb bound sbb xchg lahf xor je cmp (bad) xor xor xor mov dec pop fdivs enter mov fwait pusha ret mov rcl cld out jns pop outsl add outsb les mov loopne xchg (bad) push mov mov jbe add adc stos fnstenv mov and add clc lea and lds sbb inc and orl mov cmp movsb sub push ret packuswb lods test das in or pop jl xor push call sbb fcmovbe cmc push xchg push xor add mov mov mov cltd add xor cli adc (bad) imul push jg add add subb rolb and mov fstl ss and ret icebp and stos xchg in jo addr16 and sbb push mov xchg add mov cs (bad) mov xchg das xorl loop daa and jmp and xchg mov adc sbb repnz add mov in popf ret and (bad) adc xchg adc xchg xor out arpl nop pop and das int3 fwait js cmp ss movsl adcb mov movsl or xor std jl mov fimul iret js pop or stc or sbb xchg xor push cld inc mov sbb pop inc add lods lods rclb into sti into jno and add mov inc and lret cmp cmp mov fisubl adcb popf add pusha add mov mov test push jbe inc xor movsb xor movsl cltd aam inc pop push push lods inc xor lods mov test pusha cmp bound loopne or add fldenv mov add or push ret inc inc (bad) inc add testb popa xor imul sbb aaa (bad) or mov pop push test fbstp cmp or push sub or mov nop lods push dec test pop or mov daa or xchg and test loope sbb xchg cld adc inc pop and (bad) lods xor popa arpl mov and cmp adc addr16 popa push sahf nop mov sub jno adc or xchg and dec or lods and pop (bad) pushf fs add aam cmp xchg cmp sub push rcll jns das (bad) stos mov inc jmp xor sub stc push add xor dec push xor and aas and mov and (bad) enter inc adcb add xor insb daa test mov inc mov fisubl jb jo cmc pusha xor cmpsb sbb and push sbb or push sub sbb and out push or jecxz in mov aam add lea lods push cltd pushf pop (bad) sbb cmpsl aam (bad) test jo dec add leave js mov adc and jns out ret and cmp xchg cli sub sub call push orb lds fldz sub rcrl sbb in outsl and scas xor push lret push mov (bad) jo cld jmp sbb adc push adc imul mov lock dec rcll fsubrs ja popf mov push jp (bad) push push nop andb lods jecxz insb inc add pushf mov sti aas pop adc sub or mov push mov sub arpl int3 or out loop rol loop fwait add leave enter stos or sub add add addl jns popf mov xor add aaa jmp jb dec xorb adc pop mov dec loopne movsb jmp ficom jo shrd inc cmp push or add fstps das sbb cmp nop push inc rorb xchg lods add xchg nop adc xchg mov xchg mov mov leave xchg push or js movsl xchg les enter lahf jg cmp push lds stos xchg (bad) lret pop push inc or mov inc or xor or sbb mov cmp mov les sbb jp aad cmp inc and icebp lret out adc inc dec xor (bad) stos out lcall fsubr addb push mov or subl aam xchg pop push js pop xchg sub nop xor sub cmp sub sub mov dec rcr in nop push push jbe ret pop pop xchg gs xorb inc data16 lahf (bad) mov ss xchg add dec call xor push push xor mov loop or push repnz cmp arpl xorl pusha push xchg jge imul jbe insb push or and lea push mov enter int3 xorl loop sbbb aas jne into ret or cwtl inc mov add and xor push mov mov add mov movsl movsl xor push ret movsl lods mov push xor push shl insb fldcw adc push and js xor movsl mov rcrl push addl mov popf sub aaa cmp add inc or mov loope cwtl cs mov loope aam lret pushl sub mov pop xchg movsb inc and inc inc aad out jo jle push pusha sub mov ja ja mov add sbb repnz xor jno or inc daa sub and rclb sub adc cltd or inc mov add (bad) sbb insb cmp mov sub mov or adc push (bad) xor push (bad) ror or leave js fxch in push push pop ss xchg mov in aad mov mov nop xchg and sbb sbb inc xor rclb lock add lods aas sub add sub mov (bad) daa loop fidivl iret add cmp (bad) push push imul and inc lcall add xchg mov lods or mov and adc inc daa adc pop sbb inc lea xor or addl or and insl lret mov inc lret insb in nop adc repnz dec ss pusha adc xor setl test pop sbb pusha dec pushf mov repnz xchg xchg or xchg sar jo or rclb push sbb xor and test add les add dec in lea mov cwtl ret leavew loope jmp xor cmp mov xchg loop cmp sahf loop aam jl xor fisttpll ss dec xor mov test fist lea arpl sub lods fwait ret jbe dec lsl pop ret (bad) jmp xor addr16 inc rorl xchg mov and push pop inc lods xor mov sahf fs daa loop sbb xor mov push cmp sbb xor mov adc cmp test rorb pop xor aas mov pop cmc sub add (bad) (bad) cs jp mov add mov cmp sbb imul (bad) int loope imul call bound xchg not and pop mov sarl push ror mul pop pop push daa mov mov ret cmovae adc sbb sbb bound inc pop xor fldenv hlt popa (bad) lcall popa aas inc (bad) lcall ss pop pop lea fstpt pop into or and jns imul inc and inc in je xchg bound out xchg mov mov cmp sbb and sbb test imul clc cmp or ss mov push lahf add lea insl xchg das ret or adc and or cmc push jle mov sbb das adc push sub pop gs faddl add lea mov dec fdivrp xchg cmp sbb add mov xchg sahf inc test test test push pop ret fwait mov mov cmp ror pop dec (bad) aam dec or ret adc mov dec push dec and pop aam dec dec push lods jp xor ficomp subb iret cmp add sbbl or in xorl xchg inc movb inc cwtl xorl inc mov andl repz mov adc aaa push mov rolb loope add add sbb or xchg daa ret lds clc mov cmp pushf mov insb inc icebp jnp mov movsl add and jae jns js out cmp rcl xor mov or sbb adc push mov out cmp push or int3 cmp jo add movsb adc je sbb xor loope (bad) movsl mov inc or arpl xor popa add add or (bad) mov pop dec cmp sbb sbb and (bad) fdivr je mov (bad) std cmp nop mov aad push dec and in je icebp push test rorb call dec add stos pop add or xor add lods outsb test rcll add push fyl2x xor mov idivb adc mov movsl test sub mov les xchg popa arpl std mov lds inc imul mov loopne adcb push (bad) ret test push (bad) lds jecxz cmpsl adc das cltd xor ss dec and adc shll loopne sbb mov xor xor or xchg rorl outsb scas and inc or xchg into dec mov mov call ret inc fnstenv js sahf repz sub stc dec fnstcw sub fdivrl cmpsl and sub and popa mov aad lods or in leave test cmpsl iret and gs inc xchg stos lods loop adc lods pusha jb sbb or xor daa mov aas dec add inc sahf mov xor ret jp aaa adc push jge lret dec lret sbb push add mov jmp mov push cmovae int3 xor incb or xchg in andl jno rcrb divl cmp dec loopne inc adc xor pop xor das lea xor sub adc movsl or mov mov sub iret push pop test sbb rcrl test xchg push and mov or into jo xchg (bad) cmp ror sub and push sub add test adc cmpsl dec sahf jg mov and int inc inc pushf mov pop ss sbb inc add pop mov test lea or mov test test pop inc stos sub ss mov insb push and sub add jo loope rcl (bad) inc popa pop pop sub pop mov xchg and xchg xor inc dec pop cmpsl dec ret add (bad) push stos shrl jb loopne,pt rolb (bad) sbb jb jmp popf jne leave sarl push xor cmp les pop xor adc addb imul gs push mov inc pop push adc popf xor and (bad) push dec add ss addb mov mov xchg pop and ljmp xchg mov fstp inc sbb pop cmp aam test gs add (bad) xchg fsubs inc popa push mov add xor out adc popa xor test fs fsubrs rol ret outsl sbb sub sub pop sub js adc mov xchg sbb fmul or dec pop jecxz jo mov rcrl sbb jp test adc imul stos ret sub cmp xorl sub mov sub xor adc inc cmp push loope aad push xor add fwait scas movsl daa loope stos movsb mov in pop outsb jne sbb or and xor (bad) dec imul sbb cmp sbb (bad) mov pop adc daa div adc ds cltd out push cmp rclb fiaddl pop adc mov imul pop xor mov mov or or push adc daa fs loope imul add pusha add outsb repnz in pop dec enter lods addr16 or push imul std int3 adc test push jno and mov adc mov inc loopne fistpl inc ss push push jg loope nop mov dec or (bad) repnz or xor mov lahf (bad) andb mov xor xchg addl xchg push add push ret adc popf rcll pop mov sub outsl andl sahf ret lock mov jo ds movsl push shr mov sbb or adc aam mov xor dec adc jo jns mov insl pop pop rolb cmp add or in adcl sbb or or inc ret ret (bad) or ds sub cmp sub adc inc ret push test leave pop test cmp xchg pop pop mov in gs mov mov xor (bad) dec pop adc pop roll or pop jle lock mov xor pusha lods pop add dec inc adc fldenv (bad) je inc or fnstcw nop xor and outsl movsb ret fdivs inc mov addl adc rorl push lcall int ss mov ja adc push incl or xor repnz mov add mov push inc js sbb fs rorb push cwtl shl add pop sub (bad) int mulps imul sbb jbe lods cli push and or mov movsb std dec adc in (bad) inc inc js inc (bad) (bad) dec daa sub mov xor (bad) push (bad) repnz imul or fldl test dec jmp and les imul (bad) mov popf xor sub outsb inc (bad) mov test push in jo mov pop (bad) leave jbe add (bad) sub sbb push push lods call mov add imul or or inc xacquire add gs sub and pop push and mov iret cmp (bad) sub sbb lret lock loope pop loop and stos js mov or jne xchg nop sbb bound pushf pop int3 sub pop cmp push cmp pop ljmp inc jb lock mov daa bound mov stos cmp xor test sub push addr16 movsb scas push cmpsl scas (bad) shrb or rcr sbb xor jp fs mov or inc movsb pop jl (bad) test mov push or xor loopne pop jne mov xor xlat aaa movsb mov push iret cmp nop add movsl xor mov test xchg sbb inc adc and jno xor add rclb and pop mov adc bound fild pop pushf cmpsb xchg lods hlt ror jnp mov fnstenv test pushf or pop pop sub or mov je push xor (bad) xor rol stc mov mov ret pushf sub fsubl sub push arpl loop pusha or and enter inc push jp mov call mov mov add addl in add pop add test push (bad) mov test arpl and imul dec inc movsl pop orl lcall imul push push mov loope ret pop mov dec or mov lcall rolb sub das sbb cmpsl xor or sti cmp mov mov xor cmpsl test xchg es movsl mov sarb inc cmp mov cmpsb stos push jno inc aaa inc sbb inc dec sub fistpl mov insb les rcrl mov and mov pop adc push js lods mov or jo push repz sbb jecxz pushf (bad) pop dec sbb sbb dec dec leave jg mov push aaa scas repnz (bad) (bad) stos lods cld pop and lods sub sbb repnz add icebp mov lea mov lods push cmp mov imul xchg add data16 pusha xor lcall and roll inc hlt xor xor or lds movsb sub dec imul dec lahf or add dec enter test mov pop hlt xchg dec leave cmp mov in cltd mov xor (bad) ret fildl ljmp (bad) mov push xor test inc mov sub xchg mov sub pop jge adc movsl (bad) repnz and mov loopne jl fs add (bad) scas xor cmp mov xchg sub xorb sub sbb (bad) and popf into sub cmovnp cmp js stos inc inc rcrb mov xor xor push xchg shr xchg xor cmp arpl sbb xchg rcrb xor mov sbb int3 lea or inc mov add mov int3 push test rorb out adc andb in mov rcll pusha lods inc mov push idivb adc pop adc pop test or rclb pop dec sbb fbstp std add lcall (bad) dec xor adc js test push pop xor (bad) je cmp fs dec ror enter pop push mov or loope sahf cmp popa or adc add adcl dec dec and (bad) jb push ljmp add xchg call lods sbb js (bad) mov jne pusha cmp rcrl push imul xor and test loopne push adc adc xchg nop outsb inc pop mov xchg fldl ud2 frstor pusha push inc sub jge add fidiv mov sbb pop sbb cmp or loope sbb adc jo loop mov test jo fldt inc and jo xorb cmp sbb mov mov ds ret div add jo (bad) xor shrl lods shr push js int3 inc sarb ror add (bad) cmc lret daa (bad) xor fcomps jne adc pop add inc (bad) cmp pop add enter hlt insb add aaa jge loopne loop sbb sub inc dec es mul and sub (bad) in lret pop sbb cmp mov mov and test lcall sti mov cwtl dec es pop xchg ret and jg dec sbb cmp add das and sbb pop and mov mov dec pop inc (bad) rorb or sbb in jo add xor into mov js mov lret mov call in sub mov xchg add (bad) ljmp pop cmp outsl inc orl and jecxz inc outsl pusha fs icebp push iret xor xor pusha and push mov or lret ret jns sub and and fwait pusha xchg lea mov les int mov mov adc sub xor movsl shll xor mov mov dec test add sub mov and in daa int3 pop push loope mov mov push into movb lea or push pusha and sti cltd nop or dec ret or pop popf int add push pop mov add movsl mov mov xlat adc fnstcw adc xor adc nop jecxz cmp jle push push loope shll jmp or pop xor adc add mov xor xor mov dec sub fistl and shlb xor adc jnp inc stos add mov dec xor and int3 inc sbb (bad) ret add pop xlat adc mov xor xor xchg int xchg mov mov push hlt mov pusha dec jo dec add push inc push add inc add mov inc pop or jno fwait add pop loop push hlt ljmp sahf int3 and into mov sbb adcl inc add sti jo push add add adc int3 add sub or push das and nop/reserved mov outsb mov std insb gs dec pop test push mov addb xor pop mov mov sub movsl dec call inc ss mov xchg cmp mov push mov std je cmp jb outsb dec popa fs mov daa adcl mov and jns push mov xchg cmpsb (bad) (bad) pop add and adc cmp js into mov mov dec mov xor adc outsb loop sub or add jecxz sbbl xchg pusha pusha add mov or adc loopne xchg addb push xchg add push adc enter test sbb aas push shl xor cltd and out lret fldl insb add int3 inc dec mov sbb cwtl sbb adcb mov cmp je sbb adc sbb xorl inc mov jmp lods mov mov or in test test xchg add mov (bad) xor lcall ss cmp aaa (bad) shll fisub xchg dec mov sub addr16 jmp outsb and mov cli outsl adc lods je cs push add xor pop bound pop js or rcrl inc ljmp xor cmp movsb adc pop mov adc xor cltd cmpsl mov xor (bad) (bad) push adc pop adc or sbb (bad) pop js call daa add add jne xor sub add sub inc or and and icebp or (bad) (bad) repz and xchg mov negl jle xchg inc imul sbb or adc and ljmp test dec es sbb js mov and das mov cwtl jg and dec mov hlt out xor rorb xchg or pusha sub mov mov dec push or xor lock ret xchg (bad) xor push js adc sub dec (bad) adc pop test adc adc dec mov and cltd pop fstpl or mov gs pop mov lods mov sbb ret mov inc ss sbb pusha daa ret adc add dec sbb cmp mov cmp xor cmp mov and popl or add clc and lock cmpsl addl test test adc imul adc sub add aam leave inc outsb or lret dec out ret inc iret xor inc sub jno xor add call xor mov and xor or mov es inc insb mov or dec and push or pop sbb nop xchg push inc sbb aam loopne sbb xchg (bad) xchg cltd fiaddl je pop insl jo sub dec mov cmp cmp add dec shrl (bad) xor lds dec cmp sub addb push add adc sbb xor cwtl outsb idivb fisubl pop push or pusha fs roll pusha mov or pop dec adc xchg cmp jp mov push loopne add in jmp dec cmpb push sbb movsl dec mov mov test ret sub inc and (bad) mov ret jl add inc push mov add cltd add ficoml adc sub sub or loopne xchg xor les mov aas jo inc and xor push cmp mov test lea pop aaa jo adc and xor repnz roll adc cmp test pop xor push ret mov add cld jne test orl sbbl jp cmp sbb or mulb and pop shl xor sub fidivl xorl popa dec leave xchg mov push (bad) shr dec jne in and sbb push adc inc sub add and xor fnstenv dec sub mov push test mov shll mov dec (bad) xor mov dec mov xor (bad) xor rcl pop jno lock pop loopne dec pop dec in and inc add lods pop xor adc mov or or mov leave (bad) or pop sbb adcl add movsl into add fbstp add shll sbb test inc push popf es sbb cmp sbb cmp loop inc dec sub pusha or xor sub or shrb pop mulb mov icebp mov movsb in pop or mov adc clc xor push dec sub movsb test fmul fadds or dec sbb sub dec add sub bound add (bad) mov xorb icebp test mov inc mov pop or xor mov push add xor mov nop es mul jo add insb sbb test mov mov aas push sub or call andl lea push push sub arpl sbb dec sbb test mov icebp xor and jns pop or add movl (bad) xor inc inc lret xchg (bad) xorb lea (bad) xchg clc divb pushf jns xchg and lret lret inc mov push iret add add popa mov mov orl mov dec xchg xor and xchg mov fwait pop adc xchg push outsl mov push and or dec mov sub pop and mov les xlat test mov push and test dec cmp cmp xchg mov lahf cmc pop sub or push dec and mov (bad) stos sbb push add mov fnstcw dec and inc push add call cwtl test cmpsb xchg add fs push pop mov add lods push loope sbb cmp inc mov jns xor push add ficoml jge push test jne popa imul or bound andl jae iret and icebp add push jbe mov aam lret rcrb pushf push loop dec push cmp ret test xor orl xor cmp add mov sbb fs imul jp ret js sub add data16 fnstsw adc adc decb mov sub movsb sahf (bad) sub cs adcb in or dec mov aam lret test mov pop lods xor sbb imul and lods mov loope jecxz fmuls add dec cwtl imul push xchg xor mov mov test ss mov je sub fnsave jns in sub bound (bad) cmp add adc rorb test ret mov and cmp cs mov lock mov and sbb mov sbb out push mov je or pop fidivr xor ret (bad) fcomi dec mov mov inc and push push int3 lods mov aam push fisub xchg mov sub sub push ret dec or cmp sub in (bad) cmp dec nop (bad) push add add or lret xorl pusha inc xchg sub loop xchg je cld push rolb or ret sbb xor outsb je mov je test outsl jo lea (bad) popa loop andl test (bad) push lcall jl pop int3 and xor mov push pop (bad) faddl or loop sarl add popa xor cmp jmp out dec mov sti xor mov (bad) frstor outsb out in inc popf nop ficompl insl and dec or mov cmp adc and fwait xchg mov (bad) test andl push add lock mov pusha dec shll sbb and xor xor adc cmpsb out jge inc js leave push in push push inc and lods imul push push or jge or lds add pop add xchg sbb std lret es xor mov aaa sbb cmp jo cli or lods or mov adc test in push and outsb or popa rorl pop push ret leave adc dec movsl shll (bad) mov adc call movsb adc cmp mov lea nop gs loopne test fdivp les leave add xor (bad) in sbb movsl nop xchg addb pop cmp inc cmp push jge fldenv ljmp loope pop mov push cmp adc mov inc js push sbb mov mov add and leave xor int movsl push cmp inc jae add addr16 push mov push sub dec or test not (bad) ss ss xor jbe push scas jbe inc imul xor es mov pusha mov fidivrl cmp test xor adc ror sub or mov sub pusha insb jp cmp push rolb cmp push test mov das stos mov pop xchg cmp aas jo mov nop jo out cmpl and dec andb inc cltd pop xchg xchg shlb jno add test jecxz push and sub adc xchg xchg xlat push insb xchg popf adc in xchg xor add xchg adc or jnp (bad) daa push jp mov dec popa lods lcall adc or push lds cs add pop adc jge jne mov outsb mov adc iret inc jl inc mov sub imul aad js pop xor mov flds enter mov sbb insb pop pop mov cmp or daa xchg lods mov xchg movsb fstps add mov popa adc into xchg or mov xor in test inc dec js sbb (bad) xor or in add shrb lds adc cmp mov jne jno js jp cmp (bad) sbb mov mov das adc sub fldenv lcall fbld aam or add or (bad) and cld ja xor (bad) notl inc pop inc and xchg ds aam sub mov lret ret or and rcrb or push outsl push in test add jecxz int3 insl daa jecxz push jmp dec or dec add (bad) mov dec mov dec into bnd pop jne inc cmp xor pop mov aam push popf push and xorl jno loopne cmp and fstpl add add in mov jmp popa mov cmp mov lock sub or xchg cmp push les arpl adc (bad) and dec jns scas push inc sub inc notb loopne pusha mov and or sbbl adc movsb push dec jecxz xor pop outsl ljmp aad mov push int3 and or pop lret push or arpl push xchg gs xchg and in rcl mov add cmc add xor sbb ficomp xor add mov xor sub add cmp or adc ficom pop pop (bad) lret call inc jecxz lret divl out aaa mov adc xor cmpsl mov jb adc adc add pushf xchg movsb sbb mov add mov xchg retw mov jbe xchg insb push shlb scas cmp pop jmp aam nop (bad) adc inc rclb xor or test imul xchg or add sbb xor js sub lret mov pop roll mov test roll inc mov pop int3 faddp push cmp fsub out out ret xor dec add enter mov pop xchg fs frstor sub push lahf jge xor fsub inc cmp adc adcl or pusha pop adc test or jmp sbb lock (bad) and mov jne xchg or jno rclb das and ret adcb shr add xorb out add cmp inc js xor sarb add or jg js push (bad) push sahf add lret stos lods sub das ss dec pusha push js sti mov pop cli pop and scas in movsb adc cmp pop mov xlat add pop jecxz push cwtl and imul repz mov dec pushl jae ret add jno and jno lret adc add lret cmp mov (bad) mov (bad) (bad) pop das fwait (bad) (bad) cmp jp inc sub and dec pop sbb xchg mov ret js xchg or and or jb mov dec sub xorl sub rolb xor sbb addl xchg dec add fcomps pop divb adc jno cwtl xchg lods rorl jmp ss add test xor dec add arpl jae jne arpl inc mov (bad) mov aas dec fwait imul mov add cmp lret and negb sbbl outsb shrb lcall dec insl loop aam sbb add push xchg pushf or jnp insb cmp pop addr16 test sbb jne outsb (bad) stos push mov outsl dec jbe repnz imul jb adc xor mov dec adc cmc mov rol inc mov add xor arpl cltd je jp fwait aas lret cmp adc jno lcall mov mov and mov dec adc loope jns (bad) jno mov inc rol test sub mov pop xchg xlat insl or into xchg dec and ljmp adc (bad) jge add sbb lds arpl jno lods pop pop ds sbb add and mov and pop cmpl sbb dec mov imul mov or or insb jmp xchg lea js cmc mov or fdivs adc lahf iret xchg es add pop ror adc loope xor adcb ret ds fisttpll cld and test cli adc or dec int or dec push dec push xor daa sub mov xchg sub pop dec fcom fisubrl mov pushf dec sub movsl sub mov inc mov rcrb or and xchg jns pop mov (bad) adc lods shll pusha push add popa xchg rorb pop add pop push inc cmc adc lock pusha push sbb xchg adc mov pop pusha sbb insl lcall mov int3 push cmp dec (bad) fbstp mov add inc ss test or ret insb mov adc adc dec popa mov and push sbb out outsb lea xor and (bad) xchg lret movsb (bad) xchg test inc mov dec xchg mov add lock or xor mov and push std push gs test loopne dec dec push inc (bad) shl fs push test fnstenv cwtl add push jns je rorb inc mov mov mov adc pushf and jb mov out (bad) ja add sbb test ss mov scas adc push aaa in test sbb test cmc orb push pusha lret cs add mov lahf inc dec lea jnp xor cmp xor inc dec lock inc and sub dec add add lods pusha pushf cmpb adc mov add ret dec mov dec sbb aad inc or xchg test xor in inc xor mov and dec and push mov test xor sub dec ret out nop xor test adcl in inc adc mov sbb push push pop (bad) pusha add and test add outsl lret loop jmp pusha cmp push jns outsb mov (bad) add int3 cmc lods ficompl stc push pop testb xor or cmp ret sub sub sbb pop xchg mov pop js cli jae js ret xchg or push xchg fistpl mov lcall movsl inc xlat add jecxz push and loopw and pop or xor xor ret adc pop or (bad) movsl or jae and daa mov and push adc (bad) push movq sbb pusha aam or cmpsl and insl xchg fsts push rorb or push mov xchg repnz dec jns adc lods daa xor push adc roll gs add pop jl push sbb sbb sub and rolb cmp or pop sub or bound xor sub leave xchg mov bound sub subl dec lea sbb sub sarb sub pop adc jo sbb dec aam fdivrp stos cltd (bad) add xlat inc aam nop adc dec jae das daa adc ret add push dec movsl repz rorb (bad) movsb lret imul scas jl sbb xor sbb rcll sub xor mov pop jo adc outsl mov or nop mov mov or lock and add jmp nop mov inc sub adc insb pushf pusha test mov and adc jo push mov popf cmp icebp add add (bad) lds xor and lods xorl fsubl shr jb nop sub enter setl popa mov sbb mov fadds hlt sub clc push js daa repz cmp xor mov or cs cmp rcrb stc insb jmp xor lods dec inc aad dec lock ror dec int3 mov jns pop add ficompl (bad) mov lods mov mov mov insb jns inc push sub mov xchg movsb xor mov jle cmp cmpsb push pop or fsubrl ret cwtl jl jno mov inc sbb test push or sub icebp xor xor test test data16 dec imul cmc pusha daa xor movsb aam rcl push inc xchg and mov cwtl pusha mov (bad) xorl fist test adc insl (bad) jno mov add je adc pop dec cli out sbb aam mov cmp cmp out into and es test (bad) add adc test enter adc dec xlat sub pop add gs movb and lret test pushf sbb jp adc mov push inc sub fs mov and fldl pop ret rcll daa lods inc stos adc xchg xchg mov add inc sub dec push or mov sub pop loopne into mov clc dec pop rcr xor add pop (bad) or push pop adc sub xchg pop les mov or cmp mov sbb das add xor adc push xor add scas pop push mov sub (bad) xor sub (bad) sub or dec pop sub outsb jno shld cmp sbb pushf dec xlat xor inc pop ficompl (bad) je mov lea mov rorb arpl jl call rep pop or jmp rclb or and xchg out mov lods or add or xor (bad) mov add add lock xor push pop inc call xor inc sub iret out fstpl js into cmp cs pop sbbl cmp sub iret pop dec dec cmp inc fidivrl loope mov mov add adc and and je inc sbb mov cmp mov outsl aam sbb adc or ret gs out xor lahf lods xchg dec push (bad) out dec (bad) jl and jnp inc aas or ficom fcomps cwtl add (bad) mov incl mov xlat (bad) jno shl es push in call (bad) or push out dec inc and mov nop hlt mov jecxz sub mov add dec sbb and cs cmp and call sbb and cmp and add dec loopne adc add cmc or ret pop addr16 fbstp xchg test push (bad) xor pop sbbl lcall mov mov mov jl mov push dec mov nop sbb sbb and jo mov sbb cmp loopne inc test mov (bad) loope in pushf fstpt add pusha mov subl sub popa pop lods inc mov or pop and cmp aad sbb xor mov mov aas and xchg test mov adc push ret and out gs sub pop into adcb ds inc xor pandn mov push adc addr16 cmp insb push add add repnz add loopne jo adc mov cwtl mov sub add test pusha sbb dec sub fdiv and mov and popa add and push adc inc sub gs sbb in out push or and sbb lods add adc js or xchg lahf cmp sbb js dec and mov imul mov in es and notl pusha jecxz sub jmp popa xor int3 jno xor gs inc or add add mov lods mov test mov sbb inc xchg (bad) sub (bad) mov (bad) jne icebp or insb movsb cmp mov (bad) cs addr16 adc mov pop mov jg mov sar enter fbld sbb cmp shlb inc test xor dec mov or add fwait sbb mov ud1 adc jbe mov xor in stos inc jmp fistl pop dec repnz xlat push sbb loope jecxz adc rclb mov push aaa jns add sub icebp add addr16 or push mov dec loop pop pop mov aad and les sbbl dec inc dec pop rorl cmp lcall enter jp adc mov fdivr mov xor loop add inc adc rol adc out test pop adc mov or cmp imul sti sbb and fdiv pop cmp movsb xor cmp (bad) daa mov or xchg (bad) (bad) (bad) dec jns pop mov xchg popf cmp sub punpckhbw mov daa in outsb mov shlb aaa jle push test loop and adc cmpsl pusha mov imulb jbe or and pop pop inc sahf adc xchg mull push sbbb in fcoms and leave int xor inc sbb dec xor sub and add xor xchg and or mov inc adc std je inc mov pop (bad) or loope subl inc stc xor mov xor pop call add pop dec mov jp dec cmp test add xchg loop push add dec cmp or test ret pop pop mov lods sub pusha xor mov into jbe inc mov ljmp xor pusha je lea add ret xor cmp subb or jno dec add jge mov add mov es add adc ret lea loopne sub mov sbb andl xchg lods sub xor inc adc add iret sub and arpl mov sub xchg sarl inc add outsl cmp xchg icebp xor and xchg pop lret sbb and rolb arpl cli sub iret or or cmp je xchg sub in sahf or adcl jle sbb lock mov pushf movsb movsb and push xor add rcrb mov jno aaa fwait push pushf inc sub test out dec push bound add pusha pusha icebp push inc popa lods push or mov jge sbb gs js into xchg push cmpsb push ja xchg push or pop cmc add into inc pushf cmp lods lods sbb add movsb or test mov divb je dec xor sub (bad) or adc insb xor rorb lods mov jno push mov jb adcl mov aaa mov pop add add cli mov and inc cmp pop xchg xchg sub in mov cmpl mov or popa or test cmpsb pop sub sbb loope (bad) je pop loopne pusha sub inc and leave adc and adc adc push leave jo sbb jnp xor sub add test outsl mov add cmc xchg dec sbb outsb inc (bad) ret mov cmp dec pop adc addb popa push and pop mov ljmp mov pop lods lock pop push adc adc sub sbb les sub sbb cmp and je dec (bad) jo push cmp pop ret add adc adc lock and cmp and mov adc sub inc jp or jb xor mov notl loope (bad) push push pop jp xchg leave sbb adc (bad) add inc xor aam inc call inc inc sub push pop push fs bnd lds sbb into insb or pop dec xchg lods push lds cs and inc mov push es sub clc pop test mov rcl xor xor leave push inc ret test jnp lds hlt and scas idivb ds add clc or add ret movsb xor adc xchg es sbb adc inc invd (bad) jmp xor (bad) xor push dec icebp xor in inc fsts xchg scas adc pop jo fimull rorb stc scas xchg push push ret ss nop adc inc or clc cmpsb cmp or cmp (bad) and mov add add mov mov add lcall test push test cmc fs clc fwait mov js sbb xor (bad) jmp adc add test jg loopne imul jmp or out mov push or je xor push inc push jmp rorl inc sub addl or stos test sbb cmp into pusha fadd inc daa sub ss fs sub or aad imul lods sub pop dec add jo and mov mov movsl flds and pop sub or jmp or add jb movsb push and adc xor dec cmp loopne lea or jno or mov imul mov jo inc test (bad) loope shll cli cmp cmp xor js es lock or loopne jmp sub dec inc xor and test mov rorl icebp test sbb (bad) and rorl push lock mov inc clc or outsl imul add adc xor xor and shrb sbb mov lock dec add push dec pop int3 adc jl jb int test add or or test imul add pop in insl mov pop sbb add or cmpsb in sbb cmp mov or lret xor addl push and adc cmp mov aad rclb xor push sbbb cmp mov xchg into test mov adc xor mov loopne popf pop in les test cltd aad lods jb add inc inc jno dec ret nop pop xor or adc test lahf jns add sbb jb mov js (bad) bound rclb inc aaa rorl fucom jo xchg testl or arpl cmp push jecxz cmp popa sub cmp sbb push aas in or cmp push aas push push inc arpl scas std xor inc arpl in loopne pop sbb xchg sbb and pop (bad) xchg inc das or jmp leave or aad sbb jb sbb dec rorl sub add push jno scas mov pop enter mov xchg and test test ss (bad) rorl fnstcw add (bad) (bad) (bad) or (bad) cmp loopne xchg dec mov shrl jnp ja xor dec loopne dec mov mov dec dec mov popf lcall dec inc test fld mov mov push pop (bad) int repnz mov mov and xchg roll sbb mov jl mov sub loope lahf fnstcw mov adc xor cmp mov or pop and dec lods add dec mov (bad) mov pop popa push jne jb rclb pop dec and push cwtl fcmovb insl or add lock mov je pop js jmp cmpsb and push push pop push push shlb inc imul popw push (bad) or inc sub cwtl ror xor add (bad) je mov mov sbb xor jns (bad) fsubrs pop or push (bad) and stos in in and sbb add sbb mov dec test xor adc sarb mov outsl push mov sub fcmovbe js jp clc sub adc sub inc fwait test shlb cmp mov add addr16 add or jo dec adc mov scas pop pop sub add in xor ret adc shlb sbb mov push out aaa jl test dec rcr mov push cs sub mov test add dec jmp add mov bound sbb shrb inc pusha cwtl nop pushf sub adc push cmp ret pop or mov inc aaa add and adc and mov xchg movsl push test and cmp popa jo dec nop out sbb sbb and test mov push sbb dec cmp rdmsr js mov shlb ret mov shrl push xor loope push fild sub jp pop aam pusha inc stc addl and lods mov lock lock dec hlt pop cmpsb loopne movsl or call repnz std or (bad) fldcw xor popf addl loopne cmp inc dec test imul add jmp mov mov or repz ret cmp in pop pop lret or xor add enter mov out and xor xor and mov or dec aam add inc test lods cmp add or js add push add add push fcmovb push and stos and mov xor inc fstps mov xor daa add pop adc push xor xlat cmp outsb xor adc xorb imulb or repnz sbb popa sbb adc dec jmp dec sbb inc gs insl xor adc add and inc cmpsb mull test pop push cli jl cmp xor adc or lods dec add xchg xchg cmp fs mov lods add xchg insb (bad) push cmp xor push mov lret fcmovbe lds jae fisub inc inc loopne inc xor test ficompl mov outsl sub sub inc pmulhuw and outsl outsb sub xchg add dec ss dec mov sub pop cmpsb lods or push movsl cwtl (bad) push sbb sbb pushf enter adc movsb aam add dec sbb xchg (bad) push add push dec ret mov xor adc icebp cwtl push inc sub std xorb daa push imulb gs mov jmp xor jo pop les lahf fldt or adc out lds add dec cmp sbb sbb gs mov add pop (bad) sub jns,pn and and movsb pop push dec xor push fmul movsl inc mov sbb out les fisub jns sahf adc in imul imul test repz sbb stos pop push testb add cmp mov mov sarb jmp or add aaa loopne aam or into adc sbb xchg or or push mov mov ja or outsb mov jnp rol nop lret push mov or and mov cwtl push add and lea and jecxz out mov cmpb fwait ss dec jecxz fistl ret ljmp into shlb jmp andb mov das mov fcompl adc movsl arpl add lods mov pop inc lahf pop fiadd mov xchg lods adc mov loope fist xor sarb adc lods test and movlps pop das lea xor (bad) loopne cltd and pop sbb adc stc mov push dec out pusha and sbb out test pusha nop dec and lods mov cmp lret or lds dec dec arpl pushf add mov lock loopne push mov adc dec or sahf sub (bad) fcoms and sbb sbb daa jns pusha fdivrs add cmp mov sbb dec pop int3 xor mov fucomi insl test pop ljmp fldenv mov and add rcrl cwtl imul mov and inc add jl pop aam xor mov pop mov add cmp ret mov xor psubusb jg mov push xor push mov inc test je ljmp arpl cwtl cmp ljmp aaa jne or (bad) (bad) sbb (bad) loopne adc sub inc cmpsl sbb imul and lods sbb inc rolb mov sbb lret push mov push cmp inc adc ret or mov sub rorl add stos cmp jo mov mov adc fdivrs stos mov xor xchg inc xor ret adc loopne and push dec or add xor xchg dec loopne movsb ss mov sub ficomp lcall mov push jo mov scas dec fwait sbb rolb jns xchg sbb and inc sub and lahf jb jb call sub mov aas cmc push mov and or ficomp (bad) inc xchg pop xchg mov mov repnz xor mov inc sti lock sub pusha sbb pop mov andb fcompl mov or sbb push testb rorb loope mov adc mov (bad) cmc or sub dec dec dec out ss xchg test outsl ds dec inc jo arpl bnd popa add ret or sbb or sub pop cmp dec inc insl or iret das cmp mov pop jnp mov push cmp adcl sti dec add mov fs lods mov js xor pusha push push or pop mov enter sub and es rclb sbb mov or arpl push xchg ret jge fmull cmp sar push adc jle or adc mov xor or adc loopne ss or sbb cmp mov psrlw inc dec lds adc push rclb push imul cmpsb push pusha loop adc add ret jl (bad) xchg mov (bad) fwait mov das into sbb mov xchg cmpsl dec and sub push cmp das push nop test adc push ss lahf push push bound lret sti inc jo xor pushf inc or dec xor pop loop mov sbb adc or jno jbe mov xchg mov add xor cmc repz imul mov outsb pop add lock stos aas pop test inc mov ljmp push mov mov inc pop cmp xor add shrb push dec scas nop inc adc mov push stos mov popf int dec adc ficomp arpl push mov out adc inc dec data16 adc (bad) stos xor out js fsubl pop sub imul mov popa loopne and mov fs dec and and xchg or nop ret lock fisub sub dec add rolb and stos mov mov mov cmp add pop and jbe xchg lods push xor in movsb push pop push popa or dec xchg mov pop inc and gs lock movsl xchg cmpsl jo,pn in lods je,pn push test adc dec mulb mov mov mov and or or push or lods xor and push shlb les fmull or clc in lods popa push and or xchg rcrl inc dec rcll rcr js (bad) sub les ds outsl pusha jno jmp movsb gs inc dec cmc sbb dec adc jp adc dec and push rorb mov add ror xchg jge adc jmp dec add pusha jbe adc add pop nop mov cmp rorb dec and sahf pop push push push fsub mov addb inc inc jg pop add xchg mov inc add add into sbb aaa or push xchg roll pop xor inc rorb movsl add enter imul inc rclb rolb pop sbb push aam xchg icebp cmpsb hlt cwtl inc sbb les mov push jbe inc fwait xor xor fnstsw jp or sbb and ret push xor outsb fmull inc loop xor add push add ret mov ss jno pop push iret push mov call mov jnp sbb inc ss xchg xor loopne adc ret and dec pop les addl xlat mov stos or bound out dec push js mov pushf mov mov loope xor ss dec ret dec pop adc push cli push mov add pop into cmp jno sub xchg ret cmp in inc out xor lods mov sub xchg sub cmpsb das adc mov xor leave jno inc jne movsb bound adcb jecxz pop outsl sub imul sub test pop pop sbb lods mov mov xchg sub push or sbb xchg dec and add cmpsb es dec add test stos sub sub pop xchg rolb or shl inc or lret std popa cli lock dec pop lret ret xchg ds xorl or std cmpsb add add mov or hlt mov repnz outsb dec lret mov imul xor mov mov jg lods push fdiv aas and mov (bad) or add rcr jl push rolb and xorl es mov xchg mov test rcl in xor pop inc sbb xor (bad) lods mov leave sub nop xchg mov sub lods loope pusha out test or add test sub sbb and xor cmp mov popa cmpsb sub lods pushf mov bound and add add dec das xor fcomps es (bad) leave jo push mov fmuls xor jnp xor pusha shrl xchg push les or cmp add fnstcw mov mov movsl xor test add nop repnz mov add sub sub das pop or ret ret sub outsl pop pop xor imul gs pop cmpsl push cltd mov aaa adc add aaa test mov and loopne or or sbb or and mov add xor and (bad) mov fistpll das pop inc inc rolb fidivl push xchg add add test icebp push cmp pushf jno xchg movb call jecxz mov push pop jo xor push add fistp xchg lea push xchg popa push dec mov xor (bad) lods mov mov xchg sbb sub cmp sarb inc out adc rol inc cmp mov xchg fcmovnbe xor pop test jp hlt or sub mov cmp mov dec loopne push into push push mov or mov sub or push jno les lar mov push fstl fldl add pop push push and test pop xor loop (bad) mov mov mov xchg shl mov (bad) jp js enter jns cwtl xchg rclb test js xor subl cli cmc and inc xor push rcrb xchg xor pusha xchg (bad) aam in in fstp or daa loope or das rcll pop mov and pusha ss xor or jge pop lret inc mov mov sbb rorl xchg mov adc mov dec jnp lods add mov add sbb cmp jo pop push sbb sbbl push push xchg dec cmp xchg or cmp nop pop xor dec sbb xchg mov xor nop adc add sbb sub add cld jb sbb imul add sbb inc mov es add dec push and pop inc xor push rcl or ret pop jmp xor mov aaa (bad) aaa push stos lock mov or and xchg inc lahf out sub mov inc add addr16 push mov mov mov enter adc adc jno jno (bad) ret mov cmp shrb xor sbb fadds xor lea or shlb or mov and les jae imul push dec popa inc (bad) jmp xchg in or dec loopne lcall lods je (bad) jbe inc adc sbb mov ret push (bad) cmp xor fidiv xor aam push test xchg js add mov arpl fs or aaa pop loop fnstenv call sbb popf addr16 adc or es out push test movsl aad xchg inc add pusha push movl iret scas inc sbb imul andb push divl or push push push lock sahf mov and lret ror sbb and (bad) adc hlt push mov test push (bad) mov aam sbb and sub push push adc add pop push jge mov mov and js (bad) or rorb cli and inc sbb ja xchg pop loopne test add enter jne adc jne push mov enter in ret roll je inc sub xchg xor add mov dec mov adc sub call insb push pop mov mov sub shl xchg pop pop mov adc in or xchg mov pop sbb add or leave xor inc outsb int pusha sub (bad) jp push dec xchg sbb pop fcomps pop rcrl cmp push adc dec xchg push ss cmp mov sbb and or sbbl push mov rol lds dec outsb or jge aaa xor xor cmp mov pop jecxz xor ja push outsl add bound xchg jle fs call stos test test loope test add mov ret jge dec push and or test fwait add aam push test push stos fs and pop xor lcall or shrl loop out sbb adc addr16 add lods sub and test sub inc dec stc roll fwait (bad) mov pushf adc xor sub or and test lods rorb inc imul xor insl xor dec or cmp xor add cwtl cmp call xlat cs rorb xor add shrb fbstp stos add jnp cltd sbbl pusha and push jne or push in mov shlb aaa jnp mov jae mov fldcw mov shrl jge out push mov inc mov fistpl leave push adc lret inc in lods and xor and jns lds pusha sub aam pop xchg pop pushf inc mov push mov fdivrs sti xchg xor mov cmp adc xor mov cli push pop or inc movsl fs nop push insl jmp mov loope (bad) add add or outsl sbb adc push lock sarb mov insb les add scas or lds cs jno dec dec and or cmpsl xlat or sbb hlt in cmp dec xchg cmc add push das pop sub sub fs push dec cmp (bad) cwtl sub sub repz or dec sub aaa push movsb adc (bad) or or adc push mov xchg push pop leave cmp sbb mov cwtl xor cmp fimull sub xor lea nop pop xchg movsl sbb fcmovne inc fadd cmp es fwait and xor xchg loope push or sub ss (bad) test test pusha and daa push in xchg ret dec push enter addr16 xchg popa jl test gs sbb divb test enter clc les stc ss insl imul jo je pop aam push scas je rol ret sarl dec adc dec jnp or or dec add adc xchg adc inc sbb in and movsl fcmovnu stc dec imul mov test dec sub add shrb les fsub xor aaa dec cmpsb test loop inc mov nop mov in je test cmpsl hlt mov imul add fs ja popa pop test loopne xor push out fcompl movsb mov mov push cmp ret jns rclb sbb das push xor cmp js xchg rorl sub fs push ret or push jg adcb das jno es inc (bad) cmp lods cli mov sbb aas pusha adc movsl leave sbb and dec dec and test sbb mov test sbb sbb xlat xor xor rcrb lods push mov mov fadds scas cmc xchg mov dec repz gs mov je jecxz jmp sbb pop mov cmp imul (bad) aad dec cs jno fildl dec and jo push pop je inc or or adc adc js and xchg push imul xchg add adc and xchg xor inc sbb rorl dec pop push cmp (bad) loop lock mov int3 push rol pusha or and jnp cmpsb xchg movb mov add outsl sub (bad) xor popf dec inc outsb adc sbb push shrl or adc mov rorb add lds mov aas les in in cmp lods test or xchg lods les and mov xchg inc sbb shlb pop popf xor cmp mov jg inc xlat push insb cmp adc (bad) or inc sbb mov add imul fcompl cld adc adc xor ret push test (bad) loopne lds pusha dec lcall aaa mov lret stos icebp dec xchg movsl sub sbb mov arpl lea and lods shlb push test and ja adc xor cmp inc push cmp inc add push adc cmp insl jnp,pn outsl fldcw cmp bound add imul icebp xor pop xchg outsb add loope popf sub stos int3 xchg inc xchg js inc ror or push mov xor das faddl cltd inc outsl sbb call mov rcr pop insw sub pop xor xchg add push mov mov shrb mov fidivr aam pop xor lcall outsb and sub or xchg cmp cmp push cs sub ret xor rclb adc inc cmp sub imul xchg mov sbb ljmp pop pop or enter in jnp ss aam mov sti loopne jge shll ja and imul push add cmp jl cmpsb movsb xor or das sahf addl add push xorl shrb and push movsl or out mov loope daa push sub js ret cmp loope ret arpl dec data16 leave aaa ds mov sbb test leave adc (bad) iret stos lds sbb jbe or lds jb int dec dec xchg jno push adc outsl daa ret add (bad) xor jle xchg scas (bad) mov mov addb adc add xor sub ret ja pop push cwtl and pusha mov mov ds sub jne js mov imul push inc inc lods stc mov imul mov sub xor push cmc inc or jno fwait (bad) fadd adc aam push or sbb cmp stos or dec in inc inc mov xor add rcll movsl lea test adc add cmp push add mov mov outsl pusha cwtl xor push xor xchg movsl or xor js push fsubrs jmp sahf dec dec sbbb bound push or or inc xchg rcrb adc cli insl pusha lods dec pop rcrb jbe mov jp mov in shrl inc cmp inc loope pop lea xor rol and pop adc mov cmpsb xor mov push dec lret jge arpl aam sbb arpl scas in popa mov call inc gs adc push jbe add adc pusha popa push jne cmp dec and or dec sti jmp jae xchg rclb and dec cmp loop add mov pop add jmp shrb jl (bad) xchg push pop mov sub sub ss lcall jecxz mov pop or shrb imul push ret add lods outsl aaa sahf cmpsb movsb sbb dec xchg dec sub push inc dec lods ds sti mov adc sub stos xor inc stc aam or push scas arpl inc sbb add add pop shlb push push sets call add and mov lods dec cmpl lret pop xor rcrb inc add (bad) adc mov adc enter mov xor mov add jbe adc dec xor dec fildl loop lods xor sub in sub pop dec push out inc add mov add rol sbb roll inc or gs insb leave fiadd jb xchg mov push mov adcl mov sub loopne aad mov aad andb (bad) lret sub dec sub jecxz arpl movsl xor inc lods ret or inc or xchg inc pusha test cmp lret push out rcll jo sub test xchg push rorb les loope call xor xchg and sub dec pop ret cli adc sahf test loopne and jno popa xchg bound or sub flds add loop cmp mov pushf mov bound or stos xor jp cltd xchg pop lea pop cmp sub add outsb popa xchg push js pop jl ss add dec outsl rol rolb mov imul and das push jmp sbb nop pop or add dec push fcmovbe (bad) out mov (bad) push lods cmpsl mov pop imul mov dec add mov (bad) inc inc insl push xor jo jmp pop sub stc shrb or adc outsl pop inc pop xorl or lcall iret add and (bad) rolb cmpsl xchg je orl push sbb sub or and out in mov pop cmpb xor aas addb (bad) xor je fistpll fcomps and cmpsb lods mov inc mov inc js jno shrl sarb mov jp pop (bad) (bad) xor dec jmp sbbb mov adcl sub test nop (bad) leave lock mov and aad lea push ret lods dec inc fs rclb imulb je shll xor jmp addr16 jecxz and xchg call xchg or jno mov (bad) adc fistpll lods and nop push dec loop mov in mov loopne or lock xor mov mov bound fs aam pushf movb cmp xchg mov cld sub and fidivr xchg pushf loope cltd jmp sbb and cmp sub push mov pop pop call add ljmp int3 inc xchg pop xchg fs test xchg cmp or sub jnp add mov adc test xchg mov dec sub mov xor bound add sub inc xor dec pop inc mov mov dec popa test xchg sbb and pushf pop jle sbb dec mov mov out inc add rolb add add sbb add inc jbe cwtl sub cmp xchg and sub (bad) mov imul add inc aam sahf leave mov adc cmp and sbb lock pop test movsl imul pop bound movsl mov test rcrb xchg pop cmp mov cmp push sub cmp roll push mov adc lcall jb ss xchg xchg and leave jb mov rorl fsts push imul xchg sbb inc mov mov add push popa sbb add lods push arpl dec movsl push sbb sbb adc lds or testl push jo sbb xor push repnz mov les push push and stc jne lods xor or ds xor cmp test in (bad) aaa mov push sbb ret jo pushf in movsl mov push mov mov fs mov test jae add dec lods and clc and test dec dec lret mov or fmul mov and xorl mov icebp das cwtl js xor inc add add pusha mov nop push in mov cmp xor adc dec ficomp outsl cmp aas and test dec and mov xor xchg mov mov aam add adc hlt add dec orl mov push cmp sub in imul adc insb popa mov cmp (bad) mov addr16 inc xchg mov or sbb mov pushf mov in lods (bad) dec cmp cmp insb xchg xchg or add push adc push cmp (bad) rcll dec ljmp test push sub mov adc xor xor pusha xor testb and ret mov rcrb sti gs pop adc mov stos hlt test push stc xor je les ud2 inc fldcw lods shrb arpl or cmp or adc push push xor mov sub and mov add test pop dec cmp mov add adc push pop rcrl mov in jno inc (bad) xor jns inc mov xchg (bad) jo das or or test lock in and pop test pshufw dec incl mov add iret (bad) inc and jmp mov adc loop enter xchg addb popa and add movsb ret dec shlb xchg xchg fs sub dec bound sub or mov dec lds jb movsl inc fs rolb (bad) pusha hlt adc dec movsb xchg push pop dec mov bound xchg and imul or add mov (bad) xor pop cmpsb xor (bad) adc push sub xor cwtl or scas fbstp mov inc cltd dec mov outsl lds sub adc test imul in add push pushf cmpsb ds jnp mov adc xor jno fdivrs arpl aad dec push sarb inc arpl or or pop push test test xor inc or push std mov mov sbb leave jecxz notb mov push cmp leave pop push sti fimul movsb sbb lret shrb loope mov push sub test xorb mov andl jno sbb xchg xor cmp push mov arpl pop and pop hlt add or lock xor push les mov jnp into rol or mov push cmp xor jl ret addb rclb xchg push mov test enter xor and xor mov (bad) xor mov js push inc mov std (bad) aam sbb sub xchg aam adc pop inc pop xchg in pushl sub shrl rclb pop push or gs (bad) rorb rol shlb or pop lret or mov dec xor sbb (bad) pop add push lods scas mov ja xlat inc (bad) mov movsl or or dec jb mov and out pop cmp jmp push and pop and test push dec arpl test sub push push xchg or imul sub loop mov mov fcomp mov dec push jno pop xor (bad) nop test icebp cmp mov rclb and insl js cmpb dec js jle pop rcrb xor outsl xor pop xchg adc or adc or insb outsl adc nop xor aam je and enter add or mov push in gs test mov lods xor pop (bad) mov cmpsb add xor mov daa rolb aas adc push push inc inc pop and xor push push xchg aaa push push mov dec sbb add mov xchg movsl inc fldt (bad) jb mov movsl jp mov mov sub ret scas mov cmp push mov mov fidivrl popa xor mov xchg loop or adc adc dec les sbb dec jl leave jb cmp roll imul sub lret sbb push test shrl inc add dec mov les jno sbb (bad) sbb push adc inc cmp lods (bad) (bad) and lock pop push xchg pop pop push xor cmpsl test mov lahf xor sbb enter push push rorb xor sbb dec or jle inc cwtl adc test and dec imul mov cmpsb rcl hlt mov xor push xchg or mov inc mov cmp xor cmp mov (bad) sahf mov (bad) out xchg mov adc xor cmc dec sbb mov ja lock adcb xor cmp xor sbb mov push push mov pop int3 push jp add orl lret jg inc clc rcr aaa out cmp add dec movsb fild inc or or xchg test mov sub sbb ret jl leave add popa int push xor xor cld sbb rcl (bad) jnp pop dec pusha fisttpl mov outsb fidiv sbb mov pop xorl jle inc add movsl mov inc sbb add add sbb pop mov pop test add dec cltd scas mov (bad) cmp (bad) xchg lret hlt sub mov out xchg (bad) popf xchg pop dec (bad) cmpb inc sbb and xchg inc rcrb mov insl test mov and mov rclb (bad) xchg mov and mov or mov call xor mov inc ja or or scas out daa add push mov or into ret mov push rol call dec icebp fs dec stos adc jb adc add mov pop sbb push xorl lea pop leave mov and fdivs xor popf add xchg movb xchg or inc sbb sbb pop pop mov lret mov mov xor call imul call cmpsb movsb xchg push sub (bad) xor cmp js cmpsb and or or fnstsw cs pop aaa jae and data16 pop pusha mov adc stos xor and mov fwait js mov mov shrl test sbb movsl push mov enter insl movsb or mov mov mov mov adc ret pop push ret xor xorb add dec add dec test sub pop cmp int3 js outsl cmp jo xor jae push sub (bad) push dec pop lcall inc dec ja inc lcall cmp xor icebp nop adc mov (bad) push mov pop push roll xor dec movsb dec ficom (bad) lea lcall aad mov and dec mov and sbb xchg shlb jns mov and cmc inc adc xlat or inc popf xor add sbb mov mov jecxz leave mov test cltd scas pusha sbb sbb divl add sbb jb push or push outsl xchg popa pushf adc out cmpsl xchg xor xor sbb aas adc fsqrt mov push shrb push cwtl inc mov in xlat (bad) push out sti (bad) clc xor or ret das inc or sub inc lds dec cmp add push adc adcb inc ret ds jo add sub lea clc pop movsb and jb aaa push or and push test cmp pop insb add dec xchg rclb sub dec arpl mov aam xchg gs push test stc fs pusha or mov jbe add (bad) mov adc xchg or (bad) jns shlb shlb pop add (bad) dec push mov push ret (bad) and fs push xchg mov roll sub adc nop add mov ret pop pop cld arpl ret fs xor push mov jp jno jo pop push add add cmp lret push mov dec push orl rclb dec or sahf or add test imul push lea inc or jo jmp push (bad) and pop adc or dec repz pop mov rclb cld adc mov shlb jl enter xchg or push loopne mov dec loope outsl test pushf jae sub xlat xchg jae lods test push sbb js and push adc and sub cmp fild add mov or adc les xchg lods mov push inc fwait and gs push xor adc cmp or jo or mov add cmp mov jbe inc es outsl push add cmp sbb sbb sti rolb (bad) imul xchg sub adc lret (bad) adc mov out adc arpl push popf cmp adc cmp push call stc mov pusha loop (bad) leave xor dec jp int3 (bad) and mov mov xor test nop nop mov add xchg xor out push outsl ret pop mov xchg cli adc xor in or or (bad) mov sahf pop loope addr16 or test fs xchg movsl pusha push mov sbbl popa add adc inc pop xchg sti inc push jno daa aaa in popa jno push (bad) gs nopl xor xor add sahf jle xchg ss mov mov adc mov daa pusha arpl inc loope inc shrb js jo popa jno cli sub and mov inc movsl loopne dec inc mov nop adc lods insb sub mov adc (bad) xor xor (bad) ss adc lods gs xor push ret insb mov enter push pop fs jns js scas xchg dec adc fs pop sbbb push lea cmp mov push outsb out rcrb loope sub sbb add lahf mov cmpl xchg xor sbb icebp lea sbb adc pop jne or movsb inc mov and mov add sti cli outsl xorl pop or fimul call sub sub pushf or push leave push andl xor push sbb in mov imul and inc clc xorl lods xchg cmpsb mov ret sarl xor adc aam add xor adc inc pop repz and adc add push mov mov mov and (bad) das aad or sarl cmp dec mov add fisubr call int inc xor stc xor pop dec push xchg inc iret pushf pop cwtl and cmpsl popa mov mov cld fisub add adc sub pop pop mov jecxz xor dec movsb push dec pop xor fisttp add mov sbb pop dec ret clc xchg sbb (bad) xor cmp frstor call or cmp and sbb xor sbb jecxz cmp cs mov xchg fsubl push and or lock xorl sub les ljmp add inc cmp fsubl add mov inc dec mov stc or subb imulb pop adc push jg inc dec sbb shrb ds (bad) mov dec or in adc inc cmp aaa lret bound xchg pop sahf rclb les push mov cmp mov ret dec xchg lret sub mov mov sbb dec mov fsqrt jmp add subl cwtl xor dec xor xchg lock jle inc inc mov pop or insl (bad) push or pop or and in adc enter loope (bad) mov es pop lea daa dec inc push dec xor add xor gs pop mov movsb mov push inc rdtsc jmp xor adc mov je repz sub cmp sub mov call adc dec sbb repz arpl pop xchg xchg mov dec and sub inc jns cmp and add aaa push sbb jl mov and daa adc and sub lods mov inc add gs mov xor sbb lret dec lret mov arpl dec bound inc es adc (bad) pushf sub nop push dec pop mov jb mov lahf mov out fnstcw and mov cmc and or test fs and popf aam push add loope cmp roll xchg adc (bad) aaa addl or iret sbb add dec sbb mov repnz ret js js mov jge call and and push ss rclb sub sbb ljmp add cs jne lock pop fs pop xchg pop aaa outsb jo and push push addr16 imul xchg pop pop insl xchg or das inc jne ss fistpl sbb adc mov loope and add and divb js test int3 xor or sbb mov iret outsb insl cmpsl inc pop sub imul aam (bad) (bad) divl xchg shlb cmp loopne enter das loopne and or or in movsb xchg mov rorb sub enter or mov and xchg adc push and pusha jo jbe pop jg or add call add xchg mov xchg or lock das cmp call bound ja js imulb cmp arpl dec cmp jp mov push sbb push inc aaa and lods xchg push mov mov lret loope cmp cmp (bad) jo and int inc xchg mov mov aaa push arpl xchg lods add xchg and addl ss push mov test pop pop push into (bad) dec inc xor ret test or cwtl rcrb push jb mov jae cwtl xchg cmp iret or xor mov into pop inc pop cmp jp test rcll sbb ja aaa mov movd dec lds pop push dec stc cwtl test or subl (bad) push cmp mov cmp es popf xchg inc mov ret lret (bad) jae insb or and addr16 clc xor cbtw add divb and cmp jns loop pop aam das mov testb push popf cli adc adc mov inc inc lret push fcoms lods mov adc movsb (bad) mov inc addr16 cmp in rol pop mov or adc insb popa jns in les inc xorb cmp sbb popa out add add add sbb ficompl or sbb pop fildl mov or pop and mov pusha mov add cmp xchg adc cmp and push inc or ljmp (bad) jmp jp and jbe jb icebp (bad) cmpsl lods ret loop push aaa mov ret arpl pusha sub adc or movsl popf sub sbb insl mov inc sbb movsl adc test push jbe pop ljmp cmp loope dec int rcrl inc popa dec sti fwait js repnz ja or andb push mov xor jo lods cwtl cmp push xchg imul cmp mov (bad) inc adc dec sbb lds push aam js lods lcall cmp leave sbb dec outsl push sbb cld mov inc mov sbb push arpl add mov and pusha jb lods fs push in mov add scas jne (bad) cmp test xor arpl add adc test rorb mov adc test sbb ret les arpl loopne test xor ret ss and dec add mov jbe xor or movsb daa adc lahf sbbb cmpsl stos inc ret mov mov cmp and pop adc push mov push test sbb shll dec das xor daa jae sub xorb mov rcr es adc add mov add mov jae loopne popa inc pop pop fnstcw fcomps push add add push or dec or add mov lock repnz sbb fbstp add ret xorb shll arpl sub cmc fsubs xor sub cmpsb (bad) into mov sahf dec push lods cmp bound aaa gs ret push xchg je add adc enter sbb xor sub int3 or (bad) push xchg pop loop push jg insb sub sbb sbb popf test inc mov sbb xor cld xor or adc insl jmp jecxz xchg int3 orb pusha scas mov push jo mov roll bound in test sbb inc push arpl jb jo ja rorb sub or mov loope popf sub iret and dec pushf in fdivrl test dec xor mov loopne add ficoml inc adc addr16 inc and cmp prefetchw or sti subl dec jg pop push test cmp popa xor jmp jno and lds sbb out mov xor push mov mov (bad) jae outsb or mov mov push xor add out (bad) push xchg pop xor rclb dec das cmpsl pusha push imul mov and inc bound test inc push shlb push (bad) push fisubrl aam mov fadds jae les (bad) mov push cmpsl enter xor xchg ss pop fdiv inc add fcomps inc stos inc xor inc test cmp popf xchg cli ss dec pop adc mov push xor sbb push pusha dec test sbb test cli cwtl adc dec or push sub ret xor in mov sub adc cmp and cmpsl cmc jo add test pop imul cmc es pusha in and or inc rcl scas sub or jecxz or fsubs and dec ret mov xor pop popf xchg sbb pop or lock addl mov pop sbb xchg add dec imul push dec ss add or shll adc inc jge fisttp jmp js aam and imul sub inc and jecxz and rclb push rolb (bad) jp lds push pop imul (bad) repz and pop push lcall pop cmp adc popa ficomp xor cltd push push push lea nop js shll push (bad) lahf addr16 inc adc (bad) outsb adcl inc sbb jbe mov ss sub jecxz mov xor mov jne (bad) lock ret or enter movsl jmp daa jo push sbb mov (bad) xor sub and push adc pop add mov pop add inc inc or jl or lock adc or push sbb inc adc pop addb sar jmp dec pop pusha mov push mov cmpsb dec add and fld nop adc inc sub mov xlat jp (bad) sbb fld shlb fld push (bad) imul push (bad) push xchg pop out cmp cwtl xor (bad) mov mov mov inc sbb test (bad) push adc mov test sub cmpsl adcb test adc cmc loopne mov fs scas ss mov sub ret adc mov and movb xchg dec sbb push push sbb mov (bad) insb dec cmp pusha mov sbb or xchg push dec xchg les and and or pop sbb or adcl push xchg in and jne fsubs inc imul test fidivl mov dec neg adc insb sub out jno sbb das fucomp (bad) push dec sbb jb sbb inc (bad) xor js ret in mov push lea mov push mov (bad) loopne call cltd gs xor inc shll lret or add iret arpl xchg test jae andl nop or mov in lock jno push enter push cmp xlat cmpb push adc stos inc ret fs push and aaa pop sub push sbbb icebp jge pop inc (bad) enter dec stos add (bad) adc out arpl mov daa test dec sbb cmpsl inc scas pop mov enter call stos sub xor ds lods adc (bad) xor adc jbe pop nop in sbb xchg lock adc push xchg jb adc imul (bad) bound pusha push loop mov into inc sub lock add sub cmp clc mov cmp cmc cmpsb in call pop mov inc mov pusha push out add xor andl mull or xor inc shlb cmc dec mov and sub cmp xchg or mov mov xchg dec pop repnz push test push add cltd insb inc sub in jb adc fs dec dec push dec cmp xor lods pop add add push jecxz push add adcl pop sbb lret cmp push sbb mov and lods dec add loopne xor cmp fcoms sahf pop inc add aaa add cmp jmp xorl lds fsubrs loope fcoms or mov repz cwtl and outsl pusha mov mov lock sub jge dec sbb mov sub mov cmp push lea sbb pusha xchg loope adc pop mov adc les clc sub xor fmuls outsb cmp cmp push fsubs test jecxz push or jp mov sub jb mov rorb mov and ret lret pop xor dec jge adc in xor lret push push or shll loopne pushf mov mov roll add movsb lcall daa add js insb mov push dec cmp push das sahf movsl mov add rcrl fild or daa cwtl andb xor xor daa or dec sbb mov xor sbb (bad) add loop arpl faddl fisubrl addl mov test cmp and rclb cmp (bad) into xchg dec pop fistl or idivl adcb gs shlb and sbb fildl adc cld js js lret lods ret dec cmp adc test in addb sub orl mov rcrl or call out adc add fist (bad) inc jmp or (bad) dec xchg (bad) (bad) push imul imul dec cmp push (bad) sub addl push cmpsl mov lcall mov and iret pop jo push scas add loopne mov cmp (bad) jae jo lea sbb sub and mov test adc and pop add pop adc add mov xchg rorb dec cmp ss mov add push and and lods daa inc mov mov add inc lcall and dec js (bad) daa mov push ss outsb dec pop int loop jmp adc xchg xchg xchg add das lret add mov adc xor pop xorl sub xor xchg add xchg add mov pop rorb inc xchg popf jmp fistpl popa les jl mov insl dec push push and xlat xchg adc and xor cmp loop or push sub or and jne pusha and add lods or pushf movsl sbb mov lea sbb sub adc loope mov lcall gs ret stos pop or adc rclb imul rcrl loopne stos cmp xor punpckldq ret xchg dec jo xchg xchg lcall andl hlt mov push adc out lock xchg int3 lock xchg lret fiaddl xlat xor psllw rolb ror push sbb arpl test add add cmpsb adc aaa jae add ret sarl push sub insb add xor and mov or mov rcrl lret movsb testl pop ret xor aaa push dec into rcrb cmp xor dec test (bad) clc and nop xor mov add fiaddl mov int and mov mov fstl add sbb addr16 fnstenv dec dec xor and xor lock xor test and rol cmp je (bad) out fs add adc jb rorb inc mov shll mov inc popa rorb (bad) faddp xchg push stos add xor sbb sub jo mov lea cmp jl (bad) sbb mov push mov mov or fdivrp mov lcall inc pop add cmpsl or cmp cmp adc lahf xor push sbb push mov push cmp inc xchg dec iret push mov repz mov lods rorb imul bound test pop mov sbb inc push cmpsl mov mov jo cmpsb outsl push leave pop sbb cmc pop sub fdivr pop int3 inc (bad) inc push inc outsl leave or adc rorl ret cmp add ret insb adc mov and enter fs stos pushf inc mov (bad) rolb cmp mov imul xor and leave xchg shrb dec insl pusha add leave test push je lods or and xchg fidivl in xchg inc push xchg andl push or xchg nop xchg das insb mov jl sarl loop fcoms xchg std push out xor insl in or enter popf adc lods jnp dec adc push lahf movsb or add arpl mov mov mov adc (bad) or add rcrb cmp enter mov lahf cmc cwtl rclb add add pushf (bad) dec xchg popa lock (bad) add fcoml imul fwait pop ds (bad) scas add mov mov sub rclb pushf (bad) or dec xor xchg jb xor popa push pop mov icebp ss xchg inc mov insb test roll or adc scas popl jmp jae lcall pop les ffreep ret inc cmp sub adc and add pusha sub cmpsl fstps push cmp int cltd rolb enter mov arpl mov ret (bad) mov (bad) addl cmpsl into fwait jb mov push sub pop arpl dec loopne add call inc addl rcll sbb test ret jnp int3 lret sub xchg xchg add pop imul pop addl loop movsl push ss or mul pusha inc or dec push or mov loopne cmp jbe out xchg and cmpsb mov jae jnp ja lock gs jo loope je repz push inc dec mov imul ss (bad) movsl inc dec xchg stos js add adc mov inc stc insl mov pop add sub and jnp sbb test stc test lea pop hlt sub rorb adcl cmp push mov mov adc mov orl mov xchg xor cmp push adc add sub cli (bad) leave jmp movsb cmp scas xor outsb inc push add sbb popa mov xchg or sub inc sbb sub mov xchg les push sbb fwait pop dec xor sbb pop mov dec mov cmp sub lahf imul loopne dec mov lcall lods cmpsb mov ret ja cwtl push enter aaa dec test jecxz popa popf xchg fstl dec adc sub jmp out or mov mov mov and xor add js (bad) inc sub or mov cmp adc mov xchg arpl aaa clc add pop shr je cmpsl inc xor xor jo cmp or mov das push inc sub jns sti or in or into jae inc sub jmp add sti pop push push and sbb insl mov insb xor ljmp jae nop xchg bndstx aad mov xchg or and adc push test dec jmp sbb inc sbb lret jmp fiaddl dec popf mov arpl int or xchg cltd fldcw mov or cs js inc xor push lock shrb mov sub dec cmp pop fucomip je inc xchg and adc adc in sbb pop fiaddl ret jmp dec xorl mov sub pop or or jmp pushf test inc popf insl fsubrs cmp mov mov inc push daa sti fsub mov dec xchg pusha xchg xchg and sbbb arpl xor and adc cmp sub and jns movsl mov xor in bound add aaa bound push pop insl sbb movsb xor add cmp sbb pusha mov nop cmp js mov xor or mov lret push pop jno ret jae or gs sbb and push xchg xchg and push pop test pop bound xchg or movsb (bad) jb lock mov lret pop mov jae incl or bound dec jae push aaa loope lock push inc mov xchg pop xchg mov push rcll nop mov pop int3 inc mov cmp loopne mov xor xor xor or inc add mov lret cwtl aam popa addb or add les andb xchg bnd mov jge xor xchg ror push sbb adc cmpsl inc mov sbb lods cld stos lret cmp lods jge enter (bad) and popf push lahf adc arpl pushf dec push outsl push xor sub test inc mov rorb or push cmc sbb push arpl mov jecxz js popf ret sbb sub mov push push inc xchg adc and dec jne (bad) rorb rcl pop pushf (bad) cmp inc into shlb pusha add mov loopne xchg push add or imull pop inc mov cwtl imul add das je adc sub mov jp push loope shlb xchg gs jns mov push push les rclb in pop into push xor and push aaa and and jge or push test ret cmp and addl imul add test dec gs push add std mov sbbl popa xchg adc js mov xor mov cmp or cmc or movl cwtl rorb adc lods dec jne imul xlat incb aas lock leave or push dec sahf or sub int and (bad) push mov xor lcall pop push pusha mov (bad) xor xchg and cmp mov ret sbb add push adc push mov mov bound loop test loop jb int3 add pushl movups xor and xchg push into add xchg pusha add or inc xchg cmp arpl add inc and and rcrb sub pop mov loope repz mov movsb int3 and push push (bad) mov or inc jge mov outsb dec jbe and rcrl mov cmp mov lahf inc addl movsb pop add or (bad) dec jecxz jae andl mov imul push scas lret adc mov and and mov ret push scas fwait pop andb mov aad es or cwtl scas movsb or imul or cmp adc test or adc and pusha or add inc and addb sub and mov add add add pusha loop jns xchg lcall push popa loop je sbb xor mov inc pop xchg inc test inc inc sub push movb clc sbb popa sub test push inc das popa adc adc sub dec shl push mov add cwtl pop pop or (bad) pop push (bad) mov cmp arpl xor imul ss mov popl loopne mov push aad jecxz cmp or dec hlt jno addl xchg cmp dec mov or icebp and and jge sbb pop add jge (bad) push scas mov jecxz add lods imul add mov call dec adc or ret mov hlt xchg mov enter sub pop cmpsl xor aam roll inc jmp jmp popf mov sbb pusha movsb lea jecxz mov xchg cmp inc cmp or add mov (bad) dec pop xchg mov xor mov inc mov add inc dec or bound gs jg fcmovb addb mov inc mov adc mov and out push ret and push movsl xlat sbb xchg lds lods mov and sahf gs nop sub and sub and or push sbb cmp pop push or sub xchg xchg cmp pop ljmp cmpb xchg test xchg dec or xchg inc js popf mov push adc adc mov xchg cmp xorl dec push cvtpi2ps and repz inc mov cmpl add xor aam pop scas ljmp pop cmp inc xor idiv fdivs or jno xchg roll sub xchg jo adc enter aam imul xor or cmc xor mov sbb jo iret mov mov aaa push xchg sub add pop adc sbbl aad lock dec adc mov inc dec adc dec add or sub frstor adc rcl lock sbb dec cltd xchg add imul inc add stos ss in ret bound sub adc xor ret aaa add sub xorl lahf inc sub mov push arpl mov push inc xchg dec scas ret pop adc cmp push add xchg nop push andl jb xor or mov pop adc inc jbe inc add (bad) mov fwait or je jg push pop pop add lcall pushf test mov rcrb loop fsubl xchg (bad) inc xchg dec arpl rclb add (bad) mov mov mov dec pop sarb add repnz mov mov dec loopne test dec push inc mov inc jl push jb push sbb jae or push aaa and clc fidivl xchg lock rcrb cmpsb imul (bad) cmpsb aas add pushf dec lods inc or xor dec xor or imul adc cmp loop sti xor push push and inc test insb je popf pop cmp rcrb mov sbb pushf mov fdivrl ss out mov in xor fadd push shlb add clc outsb xchg clc adc cmp cmp jb add sbb add push (bad) cld cli cmp push push (bad) mov icebp insb mov mov inc jns adc push xor sbb xor xor inc mov lahf jge popa gs imul je arpl bound adc call sub sbb xor (bad) xchg xor out (bad) loope jecxz pusha jns mov sbb outsl bound (bad) hlt out or clc andl sbb lock inc std dec mov (bad) daa mov repnz lea aaa ret jb fbld mov test shrl inc test dec add cwtl lods xor addr16 or rcrb add jne sbb push movl xor pop imul cmpsl sar pop lcall inc dec iret sbb lcall movsl jecxz adc lods add push imul cli add and jne pop popf insb in outsb cltd cmp insb cmp sbb test sbb push and js cltd mov xor or dec xor and cmp insb lds aam ret mov movsb push jp loope adc adc or push (bad) call sbb push push cmp adc mov inc ret cmp jns in or lods out jle aam js out leave mov or push inc mov out scas aaa adc xor xchg mov js es jns or push cwtl lods outsb lods push or inc je rcrb jl adc cmc add mov cmp mov and imul jg mov movsl fsubp and lds ret and mov push or pop sub mov mov pop sbb cld outsb sbb (bad) dec sbb (bad) aam in xchg shrd pop pop sbb mov (bad) loop repz sub cmp and adc fmuls or jo cmpsb jo cmp jecxz push dec xor xchg les mov cmp sbb cs push popf sub lock push jl dec enter or sub lds inc or adc daa pop ret add pop or lret popa and test adc loopne push jecxz push adc xor xchg mov roll add cwtl jbe loope fs (bad) and inc dec mov flds cmc adc mov jmp add mov mov push push loopne mov pop xor pop (bad) rol aad dec add pop test push pop sbb loopne fldcw clc jno xor xor cmp aad fs addl add cmpsl popf pop push xor or cmpsb sbb lret add or popa call es rcrb add add mov push mov mov inc mov push pop adc sub pop orl mov ds loopne add rolb mov jmp rcl leave lcall fdiv mov popa daa xor fs inc sbb inc cmp inc sub lods mov rclb mov xor sub pop inc fcomps adc or movsb test mov sbb lea push (bad) xchg add or xlat fs sub adc cmpb nop and roll das and clc pop xchg scas test sbb or add add cmp add xor mov mov mov or sub sub or imul push stos mov cmp lea mov jp inc and xor lds cmp xchg lcall test sbb xchg mov lods fbld and mov nop les insb arpl lods inc add gs add xchg sub or jbe loop pop add into mov push dec pop pop and push dec lea jmp xor cmp and pminsw lret ret (bad) add and outsl adc xor test and rcrb push jecxz mov dec cs dec add xlat xchg pop inc cmp iret dec shlb adc adc dec (bad) rcrl lods or push fcoml addr16 inc or sbb sub and inc inc inc jmp xchg cmp into fisttpl push or dec sbb push cmp mov add or or test ret sub adc inc add add in pop inc sub pop stos pusha dec ret mov stos xchg lea fcomps pop push or or imul add test or js xchg sbb call pop or insl mov mov add jno aam lcall cltd leave ret sub pusha daa jmp (bad) ss loope enter adc test jmp clc xor in fwait xor sahf xorl adc and sub test sbb out pop push pop xlat xchg cmp sbb and add je pushf popa test mov jg or cmc rcl sub mov lcall andb rcrb mov mov push lods test or in sbb mov call xchg cmp movsl in sub mov cwtl adc fs fdivrs cmpsb dec ss xor cmpsb pop (bad) jo jo jmp lret nop scas sbb xor mov lret dec add sub xchg movsb sub pop or mov test rorl insl test mov outsl jmp or aam mov ret std sbb pushf dec cmp inc xor aaa test and inc and arpl mov dec pop cmp pusha xlat dec adc loope loop aam repnz push test jp cltd clc pop xorb dec mov xor mov inc jp call scas xor add inc jecxz pusha dec cltd nop pop fsubl xchg scas adcl xchg xor add and rorb dec or sahf mov lods mov pop mov insb jp inc (bad) xor leave xor push xchg nop lea scas pop adc ficom and adc daa psllw push push sbb xor xorl js adc mov sub stos int cmp mov pop test loope mov aas mov and imul push push movlps stc sti rcrb or adc es lock lods and sbb add out idivb test sbb or pop (bad) aaa xor test adc pusha subl pop sub lea rolb (bad) mov enter inc or adc pushf xor sub (bad) sub dec data16 cmp outsb aam add add dec test mov cld inc sub adc fild in pop mov cmpl push inc xor mov cmp aas pusha or mov xchg sti pop adc inc xchg pushf inc fidivl dec sbb push mov imul dec insl sub push sbb xchg mov push add or dec or adc xchg movl or ret jb pop cmp rcr xor push and loop xor movsb cmp cld jne ss cmp push repnz sub pop lods jl add add dec nop es dec sbb inc lcall outsl push push lods notl xchg aaa push mov xor mov shlb and daa mov inc bound sbb test mov adc pop inc cli xor andl in jbe jae aam je sub jecxz add pop fcompl xor lret lock cwtl add adc rolb sbb sub addr16 cwtl lcall add les jg add cmp or pop fisubl xor aam mov mov ret lret sub xchg add or vpsrlw adc and stc inc aam sbb mov movsb notb push jno xor fidivl shlb inc push xor and cmc xchg push adc adc pop pop pop pop mov mov add sbb sarb sub ret xchg push or xor pop (bad) mov fbld lea xor push xor mov inc jo into mov add into xor sub pop adc push imul nop sahf add andb and jnp and adcb test mov jp cmp mov push int test sub or lods dec es call (bad) shl xchg repnz jns loop lea out or add aad loope imul or mov outsl cmp xor add ds adc inc lock cmp orl adc or mov mov jg or push mov xor inc data16 push push xchg lods adc cltd or xchg or rorb push dec sub jnp xor call mov add lds pop xor inc leave mov xor add push in mov cmp and adc mov (bad) dec ret lahf mov pop in divb ja nop cmp add push movsb push rorb inc arpl mov xchg xor add inc jbe clc cld lods inc loopne fisttpl movsl adc mov mov (bad) (bad) outsb pusha or pop push es xor push or sub and mov lock (bad) xor adc lret inc pusha sub and add add or shl xor stos jnp outsl adc shlb cwtl (bad) loopne andb lret leave (bad) xchg je dec in xor mov test leave das sub (bad) mov pop test mov jg mov mov mov adc and sub bound arpl loop lods sub jg add adc add pop jb enter call pop sbb loope (bad) ss add (bad) sbb or inc movsl or stos call incb add shrb xchg mov add jbe push xchg mov mov test and ret inc inc addb sub jb inc mov mov cmpsl or push jbe lods sub nop pop inc cmp fadds cmp lods and and and (bad) sbb inc es dec daa xchg pop push lret ret lahf xchg inc xor and adc fist lock call add imul sbb lock les or enter fidiv movsl sbb enter xor jg sahf inc dec sarl sbb int3 or or mov pop imul dec rcrb mov hlt mov jge xor (bad) ljmp (bad) mov add inc push push leave sbb sbb jo inc fstl shlb lock jmp cmp fwait jmp popa inc pop lret (bad) or and fcoml ret vmovddup cld mov cmp outsb jne (bad) xchg jp in outsb fisubrl fisubr sub outsb jnp push adc cmp add (bad) dec adc xchg fsubrs in jmp cmp add xor push and in ja and or xchg adc pop mov ror shll stc jns push fs aad lcall xor xchg pop (bad) cmp and daa xor test cmp xor js jo mov dec push push or repnz call lods xor or jb sbbl movsb arpl rolb jp add test push dec lea (bad) movsl sbbb add xor movaps cmp or iret mov sub pop lock push and xor and sub or xor xchg sarl add js cmp push dec push push xor (bad) fbstp (bad) dec pop lods sub adcl mov push cmp add call add in xchg mov out push cmp popa add out dec (bad) mov dec frstor push (bad) call enter mov adcb jp sub jge and push test sbb add (bad) xchg pop xor out or mov xchg mov dec jo cmp xchg cmp xor add or xlat imul subl popa adc mov add mov aad inc movsl and leave arpl and push jmp inc and dec movsl rcl js mov pop inc mov adc rcll imul sbb xor inc test adc and xchg jmp jge insb arpl add pop dec (bad) sub (bad) ret cwtl sub arpl jnp xchg mov add mov rorb mov addb add js pop test out scas imul mov add sbb cmp sub push stos dec mov xlat arpl insb lods or jnp cmpsb push les mov lods add and jge mov or inc pop repnz mov and jo dec ljmp insl pop pop fwait shrb inc stos xor or (bad) xchg pop sbb fs push (bad) jno jo ret ret adc arpl sbb sahf sahf sbb or test lret ss pop xchg ljmp and das sarl rolb xor mov pop fwait pop mov (bad) rolb sbb cltd mov pushf cmc add lock loope mov leave ss pop (bad) and mov push pop mov test push into mov adc jge dec jbe or inc add or push testb std inc pop adc xor mov dec cmp xor rcll sub loop cmp or jo cvttps2pi sbb lds and addr16 movsb push push push mov dec mov popf repnz insl add jmp bound xor cmp insl add mov loope adc dec adc nop push sbb xor popa mov add mov imul pusha pop ss sub mov mov icebp xchg mov jp sub cmp testb in ss dec pop insb xchg mov test enter fcomps (bad) ficomp loop ss pusha and js je push mov jecxz cmp pop xchg push push shlb mov nop push add hlt les imul and gs cwtl jmp jo push ret cmp in out xor xor push js and lea cwtl enter test rcrl in mov popa loopne inc ds fldl push push cmpsl in lret jl jmp nop xlat xor ss mov test xchg ficomp and dec push (bad) adc sbb sub cmpsl xor scas jecxz sbb mov or add xor or xor ljmp imul adc mov adc data16 xor or add mov addr16 push adc pop lahf inc popa ret fisttpll and sbb rolb nop rcrl xor rolb push aaa dec loopne and stos test or pop lcall mov ljmp mov cmc stc cmp out insl das adc pop (bad) jo pop xor sub jo mov daa adc xor cmp xchg daa in xchg adc rcrl sub in jge shr pop push (bad) inc popa stos repz gs or movsl cld stos arpl sbb fnstenv inc mov cmp adc xor mov loopne mov adc and shrb sbb mov (bad) (bad) sbb jno test push xor xchg movsl push or loop pop popa sbbl adc sub test movsb inc cmp pop stos adc cmpsb popa dec movsb jecxz ret test pop xor sub jo icebp mov adc pop and push ret jecxz and adc jg rorb fsubs sarb (bad) xor call fnstsw xchg xor jo push xchg push pusha bound or imul push push aaa push adcb inc cmpsl movsb and loop mov or xchg push xor lcall and cmc adc mov aaa inc add dec xor or jae cmp scas and in iret js mov lea adc adc mov or inc ror aam mov and adc add jno in dec or loope add dec fisttpll sub push mov dec daa sbb in or sbb scas popa lock inc mov sub or (bad) pop mov dec mov sbb pop mov xchg dec enterw xor test mov lds pop adc (bad) hlt or cmpsl or add sbb jl dec add adc mov add mov inc mov push push sbb sbb out iret jns xor inc dec add jg inc test (bad) mov dec sti out sbb cmpsl outsl cmpsl inc addl adc fcmovb pop sbb xchg mov cmc mov or je lods mov add lret pusha inc aas sahf mov lods sub insb cmp dec mov sub mov add sbb sbb xor imul pop repnz ror push add or add adc or (bad) mov inc sarb imul rcrb or lock sbb pusha mov adc adcb mov imul lds push inc mov mov sbb faddp call mov fist and pop jmp (bad) icebp mov cwtl es or pop adc jp jo lds push pop sub mov sbbl mov xchg bound jbe dec sbb ret mov popa je (bad) jge lea aad and dec mov pop sub xor ret aam jmp add (bad) xor jg adc inc jae sbb lret es xchg push cltd cmp mov inc addl outsb ficom inc add inc (bad) (bad) js jb stc adc add sbb jbe imul and into pusha push inc addb mov jnp imul mov scas sub add or xchg pop (bad) loopne shlb rorb stos jge xor push pusha repnz and xor sub outsl sti xchg xor popf push mov push js (bad) out imul add add xchg dec push xor and movsl inc mov test pop cmp arpl lahf cmp or call inc sbb divl sbb jmp or xchg push jge pusha inc mov aaa sbb enter sbb cmpb cmp add mov and inc pusha test lock push repnz enter pusha mov fwait aam (bad) inc loopne push push adc test adc xor mov mov lock mov jnp es js xor (bad) lret xchg bound mov pop adc fucom cmpsb sahf rolb xchg lcall rol cmp inc pop dec popa sub outsl jbe test leave push sti std add push or cmpsb dec (bad) roll test in sbb ret iret dec lahf add inc mov push outsl das in dec and dec xlat and dec sbb out mov pusha or lock test push adc inc and popa jns lea add sbb shr cli sub (bad) fistl push xchg fiadd push nop xchg and pop add icebp dec lods adc aaa jne nop popf dec inc pop push add lock xor xchg add pop mov (bad) out or pop xchg mov aaa orb insb arpl sub add mov or rcll insb repz ss mov sub jp insl cltd and pop and gs sar add xor xchg pop pop test adc sbb push mov andb push mov js cmp cmpl js jae out orb rcrb pop fidivr loopne push jo sbb inc mov xor push mov lds xor jnp adc or dec rclb adc mov mov jns adc lds or push js sbb imul push mov gs add rcrb sub mov pop xor enter loopne rolb mov mov andl call push cmpsl inc add inc lea dec mov leave inc (bad) ss subl loopne fsubs xor or in and and sbb mov mov sub adc ds test arpl inc int add inc sub imul lret or xor outsb (bad) ret inc and adc sbb lods jae outsb rolb into (bad) xor pushf mov add fstpt xchg testb fsts (bad) or call jecxz call xchg lret fs mov ss sub pop mov add jo pop mov imul or cwtl nop or enter xchg push inc sub lcall inc (bad) rcrl or pop or adc jo pop loopne add sub lea push mov adc (bad) xor test cs fadds xor pop xor jb nop or inc sub test xor mov cmp inc xor and sbb xchg cli mov fsubrp pop (bad) aaa fs xor pushf xor dec mov in cmp mov ffree mov xchg int stos pusha mov mov push mov outsb cmp mov (bad) shrb ret pushl ret sub inc and popf in out and mov nop push or dec and xor mov inc push push add or or sub (bad) xchg leave push or sbb subl bound test push xchg cmp jecxz pusha or repz inc sub test shlb je mov hlt movsb dec inc xchg pop lcall adc inc mov xor pop pop or jb loope sbb sbb imul icebp cltd mov xor nop aas dec cmp cmp xchg mov cmp test mov sbbl ret lret xchg sub cmp push cmp xchg popa pop adc mov pop js pusha xor adc push jmp lock adc test pusha popa cmp rorb mov xor xor and sub inc mov sbb roll or outsl xor cmp in xlat lods test ds rclb test dec mov add test or cmp or sub push (bad) mov sbb xchg fwait jns addr16 in xor pushf push mov and sub mov cmp push push xchg xchg xor rcll repnz inc pop mov mov dec mov dec adc inc dec mov rol out or mov fimull adc pop and ds push or inc cmc test loopne outsw addr16 rcr push pop mov pushf fsubs test push dec mov enter dec sbb xchg test pop into lock pop insl dec leave stos (bad) movsl int3 ret rorb js nop inc ret (bad) mov ret stos popa adc adc imul arpl insb mov int and mov (bad) pop cltd imul insl push pop xor push fs or inc pop pop jae add push jp inc cltd pop dec popf jnp arpl inc mov int3 inc rolb push ret (bad) jo mov sub fwait (bad) cmp enter sub sbb lea cmp and addb movsl cmp mov imul mov (bad) push lods push movb or pusha add test add call xchg mov sbb and jmp ret xor and mov lea sub xchg push and lcall xchg sbb dec add push adc mov jecxz mov lock or stos fcoms dec shrb and jge mov add pop insb jecxz cwtl dec loop cmp sub sahf and inc pop les sub (bad) lods cmp shlb push xchg push pusha and sti cmp xor pop xchg int fisttp lods cmovs mov adc or lea leave add aaa outsl or adc cmp add mov and xor and popa and mov nop test or adc jo (bad) xchg lret push movsl or pusha hlt xchg sahf aaa clc loop sub push orl jmp xchg mov (bad) and xchg imul inc and dec inc or mov xchg mov mov xchg scas popa popa arpl add adcb imul xor dec jecxz cltd push lock push icebp shll test xor mov dec xor test cmp sbb das dec or adc stos (bad) mov insb loop adc mov std incl cmp cmc loopne inc cmp push and mov add fldenv dec sbb rclb and lret enter test inc sbb insl jge or dec cmpb and mov lcall arpl pop clc add dec cmp lods lds xchg aas adc add mov add rorb test mov add add inc xchg or jno nop add push xchg rol mov fwait outsb repz and (bad) xor lret sbb push out (bad) push inc dec das and pop pushf sub test xor mov rcr pop xor dec js sbb test hlt addr16 fstps xor dec enter add cmp pop mov pop mov loopne fsubrs bound (bad) jno stc lds push jbe and pushf test fidivl and push xchg mov dec push dec sub icebp js ja pop out xor cmp xor nop push adc xchg and bound out sbb mov pop inc dec hlt test insb push lret add mov es andl inc push inc add mov and fistpll flds mov ret dec and pop fcoms adc mov jno pop (bad) orb addl sub add push repnz xor (bad) mov jmp and js jb lret test ror fsub rcl (bad) dec mov push mov push or jecxz out sub xor hlt or pop add xchg jno push sbb push stos xchg adcb push dec leave push gs dec or sub cmpl jg bound add mov lea sti and fimull lcall lahf pop rcll push loop loopne or and cli sahf or movsl add and and pop or pop mov push sysret bound popa popa jo pusha stos adc dec shrl sbb gs push jecxz leave adcb movsb test xchg outsl dec dec jb xlat sbb xor ret imul lods cmp arpl add add loope sub dec incl imul push in and and sub pop dec cmp lcall or arpl (bad) icebp adcb lds int3 cmp sub pop dec and es nop inc mov imul dec or push ss xchg fsts add adc jecxz je out lds xchg add movsl mov orl lret test add fdivrs inc inc mov ja imul xor sti inc rcrl push xor lahf aam cmp jmp lods pop push icebp xor pop push add mov js sub adc repnz inc sub mov rcrb test sbb gs in mov push addr16 inc mov pop add push js test adc fstpl dec js cmp inc inc adc push and dec adcl xor rol outsb mov adc cmp inc imul inc jp add cld repz mov adc icebp xchg dec dec push mov add mov (bad) mov or sbb inc sahf aas mov adc add popa add inc and popf push (bad) adc and or jmp sbb jns mov in jb and sbb add insb pop sarl mov adc daa mov inc push pop arpl shlb dec outsl fcompl sbb xchg pop pop and jecxz mov imul (bad) and dec lock mov xchg push (bad) or xor enter push pop xor jge les imul mov push adc rorl pop push andb imul add push mov rorl mov inc add mov jae push lods jno scas dec popa jbe adc cmp ret fdivl xor (bad) mov into add ficom cmc fcoml aaa test repz sbb dec add lods adc ficom mov (bad) aaa (bad) pop sbb in mov sub sbb or sbb ret adcl xorl das call add out sti mov sti or sub icebp adc iret xor mov add das popl pop or out pusha push mov push popa imul rcrb in test subl cmp xor (bad) xor mov fisttpll sub sub jno test adc addb and xchg loope xor adc or xchg pusha sub or inc jp mov andl (bad) push and inc xchg cmpsb jecxz mov or jne sbb push mov dec sbb fnstenv cmp dec leave bound icebp and ds popa test dec jo repnz or pop rorb (bad) pop mov jbe or movb push or outsb fsubs adc inc or sahf pop (bad) mov inc aaa imul mov xchg push pop (bad) add jnp add adc aad stos insl cmp jno scas cmpsb jecxz push sub add pop lods rolb push xor jp out jno dec pop (bad) (bad) mov sbb in mov or (bad) repnz mov and or inc mov sbb into add and adc xchg lods or outsb iret mov cmpsb in mov rcrl mov mov (bad) les hlt xor addl jecxz adc nop mov adc mov fisttp sub mov jne xor mov stc add loope jbe pop test movsl (bad) enter inc mov je sbb xor xor or cmp add xchg xchg mov test addr16 cmp adcl xor bound out sbb test rclb sbb and fs lcall add ja fnstenv bound lahf xor xchg pop lods pusha outsl dec pop int3 dec adc add out pop adc mov add lret shlb sbb push pop sbb lods mov sub scas icebp sub sbb test push mov sbb repnz mov (bad) (bad) xor and popa add pop (bad) ss xchg repnz inc push or or adc pop mov (bad) xor mov mov mov or add or sbb sbb sarb pop mov mov call mov inc jne add cmp or push add xlat inc push adc push sbb popf adc les and mov push and add insb xor push subl stos mov les das call and add xor xlat js (bad) or pmulhuw sub (bad) xchg mov jo movsb lods cmc aaa adc pop loop push sbb xchg xchg push imul sub data16 sbb lcall shlb mov pop loope mov adc test in (bad) xchg cmp jecxz fchs nop lea mov sti and inc ret arpl pop mov sub clc xchg and lcall jle cmp adcb jno xor cltd test xor mov adc push push sub loope cmpsb lods arpl pusha enter xchg jecxz mov mov pop add push in and push out bound icebp daa inc rcrl fadd pop xor (bad) xor xchg cmp and fstps push or lods cmp adc mov or xor or push adc lods add dec sub cmpsl sub xchg adc cmp outsb add cwtl ret add mov ret repnz fdivs jmp enter xor adc adc or push inc dec outsb notb movhps or xchg and or adc rolb xchg and sub xchg sub xchg xchg pop xchg std lock insb (bad) test pop (bad) push test xor (bad) and scas mov xchg adc int3 or mov or push stos fnsave add add inc (bad) lock pop les flds into fwait incb mov pop aam pushf pop test mov nop dec add sarl adc pusha xor mov mov push push pop pop daa sbb fmuls pop mov and or (bad) sti inc (bad) lock or fnstcw sub dec cmc mov add fdivl lods sub mov or lods test roll sarb insl arpl push pop inc cltd and data16 push popa inc xchg fisttpll push jne pop int3 and aas ret adc dec imul insb xor (bad) mov sbb sbb pop lea loope and xchg ror dec jl lea adc or mov pop dec ret rclb push add xchg sub add orl adc outsl push nop sbb sub dec ljmp push pushf (bad) jmp push lret sbb jbe sarl outsb call mov and add sub push daa movsb mov add xor push pop stos mov xor inc adc lahf sbb in daa mov adc sbb (bad) xor dec cmpsb xor adc daa xchg ret mov adcb push fildl cli jecxz lea jge xchg or add dec repnz pop mov imul jmp mov fildl (bad) daa test or je in or enter adc sub repnz es mov jle mov or stc test sub inc call sub adc push push mov adc arpl xchg add movsl push jns add aam xor or mov test add inc mov add loopne add mov and cwtl in cmovae push add push mov addr16 (bad) pushf dec sbb jae popf xchg mov aas (bad) sbb (bad) push lods sbb add jno add mov movl cmpsb xchg (bad) xchg mov dec outsl pushf push sub aam mov lahf out push sarl xor fistp xor push pop loope lds cmp rclb cmpsb push and add addr16 add mov push sub shrb stos push sbb dec or cmpsb dec add sub enter mov dec div les mov or sbb popf pop xor in push pusha xchg rorl add mov push xor bound inc or inc cmp cmp cmp (bad) je push xor mov inc add cmp cmp push adc hlt add call addl or xchg lret mov test dec cmp cmp (bad) les jne call sub in sub punpckldq ret xchg js test adc and xchg inc mov mov pusha pop testb mov add lods lea push jae add inc movl dec mov ret jne xchg push mov inc push add jbe rclb das pusha popa jo or cld xchg and int3 dec fwait or dec pop adc lea add popa inc pushf fldcw add mov and add std addb fs mov add cmp dec rcrb loopne (bad) push add testb js mov mov inc rcll dec (bad) mov sub fs pop jmp sub loopne inc sub mov repnz push adc pop pushf popa inc sub das insb rclb inc popa outsb popf inc mov shrb cmp mov mov mov (bad) push fs jmp cmp test xor mov insb test or nop pop xor repz xor adc and lret cmp push pop pop push cmp and call daa push popa lahf cmp lret lret test xchg mov push push ss icebp insl add pop mov sub adc mov jmp jg lcall sbb repz add cmp xchg test sbb adc jmp or or push xor dec jg adcb dec or and (bad) cmp sub and fdivrs xchg jns push inc xchg and arpl push mov loope ret or xor and cltd pop loopne int sbb inc and add push lcall shll sub add add xor rclb rolb and iret sub dec mov jp test je sub dec mov imul movsl (bad) xchg cmpsb pop aaa dec shr mov mov js nop test inc xorb mov fdivrs add jmp enter mov fistl mov mov cmp sub popf mov out inc xor add add aaa jecxz ljmp adc movsb test rolb mov ds jns sbb dec arpl cmpsb mov add push (bad) add test adc sahf aad jecxz pop jmp add aaa and cli pop adc fadd lret mov inc or mov sub insb shll push mov push rorb (bad) rcrb lcall test insl mov jnp mov mov xor push inc or jge out sbb imul jmp or or sbb imul add icebp or aas pusha mov add sub jmp mov inc mov mov lods movsb data16 pop dec or in cltd and or or push mov mov mov lret mov out or mov loopne imul sub test rolb dec (bad) pop xor mov jae mov xor fimul sub xor mov adc mov out js adc jecxz nop push rclb dec in les push or popf inc addb test nop sub imul or jo xor inc outsl pushf pusha and push pop rorb sub cmp jecxz rolb aaa pop mov sub daa int3 cmpsb mov add mov cli aad pop inc pop pop dec shll (bad) mov or daa pop or sub mov xor js or popf mov ficompl push rcrb inc sub dec push add hlt add fmuls mov fnstenv and clc xor loop unpcklps xchg jb jecxz add or fist cmp adc add dec js scas fld pop pop jg xor mov pushf or push mov mov outsb cmp jmp daa xorb xorb loop sbb das sub jmp sti add sbb sub cmp fmull lret adc dec xor push and insl mov sbb fs push sub mov sbb and pop test inc xor pop lcall dec divb test gs jno clc mov xchg sbb sbb push adc and xchg and or adc sub sarl pusha fild mov xchg mov xor test ss mov pop imul mov ds loopne dec adc cwtl scas sahf lret pop add or gs xor dec test test lock mov xor mov sarb ffreep xchg cli xor mov pop mov push adc xor loope js lods scas punpckhdq mov icebp or nop cmp mov jo pop push out pop or mov jno push and imul cmp jge add aaa adc push insl loope mov sub add lds ds push add fwait cmp pop xchg movsl fistp sbb jo inc mov dec inc loope add ret mov or (bad) mov and mov fiaddl enter test movsl lds sub test sbb or jne add or push ret push repz enter add icebp add or cmp sub flds push lret mov xor lahf sbb push and inc mov sub shll cmp loope and add or push and xor and sbb cmpsl test and test imul push bound or (bad) xchg sbb dec push dec ret mov cmp add sahf cs xchg xor shlb and inc cmp test test (bad) xlat arpl xchg pop jge push push mov sbbl repnz popa or inc sahf inc add inc sbbl push cwtl push imul dec mov orl sbb in dec xchg mov sbb xchg jle rol xchg xor nop jae mov dec (bad) mov jb ret nop stos add or mov mov inc fbstp and inc or call jle xor sub or subb add pop xor and mov or (bad) inc sarb cmp loopne ss lcall mov test or xchg add adc cmp jl mov mov iret or xor pushf enter mov dec inc rorb xor outsl les or js adc mov push stos jno les lock rolb aad sbb pop jbe fadd push je mov lea out sub sub xchg mov jp cmp push ja lock or lock ja or mov xchg xor imul sbb cmpsb jecxz inc test push dec cmp sbb push lret lcall inc mov inc mov movsl dec sbb adc inc cmpsb jo lea lock inc pop pop jge ret shlb dec cmpsl sbb xor push add add mov push scas add ss xor popa mov cmp dec fbstp adc mov or insb add push sub sub mov (bad) test sub mov xlat shlb push rcrb pop jmp xor push jge or jle fcmovb pop call push dec js inc xlat or xchg nop fsubs inc lods sti cmpsl test xchg orb imul das lret loope adc sub rclb and mov sub mov push xlat cmp sbb mov sarl dec data16 or daa lea pop loope dec mov push ret push enter xor mov dec add ja mov xor (bad) aaa scas add push push xor jns fldt ret xor addl and (bad) pop pop jo inc imul cs push adc sbb unpcklps data16 pusha and movsb xor (bad) imul or add cmp lcall popa test aad sub inc xlat inc or push xchg mov pop mov sbb mov jbe cwtl shl mov cmc inc inc push mov mov sbb mov rolb add sub ret pop dec jmp pop adc or ss daa in inc push xchg ret outsb mov xor imul push mov rcrb sub cltd rcrb mov add movsb leave bound pop (bad) fcomip xor sbb adc xor stos int3 or xchg sub adc rcrl fs cmp inc lods adc and pop sbb pop (bad) sub aaa shrl clc cmp lods (bad) out sbb je fildl sbb inc xor nop es inc daa lock sti add je clc dec adc sbb and fs jne and jp shr add fs loopne movsb mov add daa cs ret lds xchg int3 xor xor adc dec and xchg sub test inc pop lret xchg push das (bad) dec dec mov adc addr16 sahf rorl add fadds scas xor cmpl mov inc adc sbb or fs gs mov push jbe jle inc daa add test and mov je sub movb fcoms cmpsb sbb add push out mov add mov push cld cltd and jbe cmp xor xor je (bad) xor movsb add lods xor test add test or or test fbstp testb les mov xchg push fwait js cltd push inc sbb test loop and push mov sbb shlb sbb jg xor or or mov mov and ret les inc mov pop fwait insb loop dec mov fsubrl addb lock incb sbb or xor or cmc jo fsts and orb add xchg popf mov addr16 dec cmp sbb add push push mov fsts (bad) xor xor adc add mov addr16 insb fadds subl and inc push add mov adc jecxz push xor push inc sbb jge dec adc pop add push pop inc pop fldenv jo popa jno icebp or mov sub enter mov sbb pcmpgtw sbb or (bad) adc or jl daa push dec inc or sbb mov shrb jecxz adc and add pop enter cli mov aaa cs or dec or push mov nop ficompl pop dec sub or pop mov lods jae xor pop adc adc cmc xor sbb jmp ret xor mov fwait loopne add nop cmp sub xchg push mov mov adc dec xchg xchg and sbb mov movsb popa push sub push test push sar mov push push xchg sbb inc mov pop fisubl inc push (bad) pusha cmpsl xor mov xchg or mov sub (bad) lret ret xor push push or adc sub addl jae ljmp and xor add les or mov pop test mov sbb inc mov mov cmp lret adc test push pusha popa ret lods jnp int3 push or inc sbb or lods and add or aaa test js xor push es push sbb movsl xor sar pop test mov add pop dec sub roll pop sbb ficoml mov push jae ljmp test rol sub pop sbb push xchg inc es xorl jp,pn sub insl xor xor out loop cmp dec nop sahf call xor jae inc inc xchg pushl xor mov cmpsb les cmp xor fldcw jbe mov test adc sbb push rorb push or dec jg into adc imul sbb mov shr (bad) ret in (bad) adc es sbb or inc lea movb xchg in jge les jo pop (bad) (bad) jmp fwait lods mov or loopne push stc jp xor leave (bad) or ret pop xor jb add jnp adcl mov adc mov add add pop addr16 or js mov cwtl gs popf xlat das fdivrp jbe stos xor xor mov inc adc loop orl inc add cmp loop daa aam or push ss nop and xchg (bad) mov insb mov pop inc jno add xor nop cmp mov adc add rorl ret (bad) xor fsubl jne movsl rcll dec (bad) (bad) dec inc pop test xor sbb mov push lcall mov adc pop lcall sub pop push (bad) dec sbb and adc adcl adc mov xchg lods pop or push adc or ds adc cmp cmp sbb dec add sbb rcrl movsl or test push xor pop subb mov or add lock cmp call fs inc mov cmp xor mov xchg sahf repnz mov sub pop pusha test sub gs lods xchg push cmc pushf cwtl jo adc xchg mov loop jle cmp add and rolb inc xor jecxz les iret mov test sub or inc dec daa or push and dec mov test dec pop inc xchg xor or mov arpl add add push leave push xorl sbb dec (bad) and js rorb pusha adcl (bad) push fst sub jecxz xor jecxz dec test lods scas inc fcoms dec xor lods add aad add cmp cmp add xor pop xadd cmp fcmovnb mov scas and lods pop xchg xlat mov push and xor das fwait pop add mov cltd jo sahf imul lret mov add add arpl xchg jb xchg dec (bad) ljmp xor inc ror xor push rorb adc pop lcall add orb cmp js dec dec jnp mov dec add mov movsb push jne mov sbb push mov jbe popa sub movsl or incl add mov sub pusha int add insb sbbl xor and xor xchg push mov sbb sarb lea in inc inc push sbb outsl or (bad) add jno add sbb push add mov or sbb xchg lcall push pusha add adcl sarb (bad) jo or (bad) xor cmp js adc lea fs cmpsl add jecxz sahf or dec movsl in pop popa adc in (bad) ss or jp mov mov pop std jnp test rcr movlps mov adcb and lock popa ss xor inc mov lods cmpl jb pusha repz movsl mov aad push inc mov xor xor bound mov pop popa and pop sub add add inc das add jp test xor repz je addb mov add movsb pop cmp sub inc add (bad) or adc jmp ljmp out nop adc cmp jmp fucomi adc stos lret xchg and lods neg jo xchg inc adc jo fsts dec arpl in and pop add sarb xchg test adc cmp jl rolb fdivr cmp rolb mov repz arpl add sbb xor addr16 push std mov jo imul fistl xorl icebp or test xchg int3 and arpl dec pop xchg pusha or inc pop loop adc dec add cmpb std mov out movsl adc inc cmpsb rolb mov xchg lea and inc js cltd rcrb sarl cmpsb enter or and sbb (bad) test popa les shrb cmp lea pusha add jbe sbb xor sub push sub inc dec push or push mov push cmp test add cmp mov xor icebp and outsb lret dec xor lret add adc cmp xchg bound inc push call push add xor inc cmp push xchg test mov fidiv test adc xchg or sbb mov add add int mov or sub add dec scas mov cmp xchg (bad) aaa ja dec or push lret test pusha and lds stos xchg in ret adc or cs xor xchg dec addr16 mov add dec add loopne add push pop int3 xchg sbb or push ror sub jge xor arpl sahf add sbb sbb adc fisub adc jno shlb inc adc or in mov or mov jp add js loopne sbbb xchg popa cmp in sahf and lods (bad) or xchg xchg xchg sbb dec mov or rcrl mov nop or adc push imul xor lods mov mov dec jle add pop jg jno ret pusha cmc and pop mov cmp lret and add pusha add dec pop dec or clc loope mov xchg ljmp int adc mov mov jno lock or pop adc xor dec and cs leave inc adc and aaa loope dec sbb mov sub aas add pop dec sti xchg test jge sbb ljmp sub pop inc mov aaa mov adc mov push xchg or xor or js xor dec push ret jne adc addr16 pop sub cs fs loopne and popf movsl dec sub or mov rorb test aaa stos inc inc pop adc test cmp xchg jo mov enter or adc jb (bad) stos add xor push or (bad) add mov sub int3 lea xor mov (bad) jo lds dec ret insl cwtl xor pop in adc inc fwait jmp push cmp int3 xchg test pop add xor sub dec inc pop jns lcall add pop sub sub or aaa popa pop inc mov pop (bad) or and call imul sub lods shrb and pusha icebp adc inc or mov xlat xchg rcrl arpl jle adc test movsl nop repnz cli (bad) jo ss xor divl dec fldl mov inc or sbb jne stos push movb sbb jo dec inc jnp cmp mov mov xor jecxz push cmp out push or jbe dec add and lds stos xor push xchg jp popa cmp shrd cmp mov out popf inc test and pushf cmp sbb fstps ja arpl je (bad) push xchg sbb xor add xor sbb sub xchg add test inc gs push ja add xorb xchg pusha gs push (bad) inc add push hlt stos xchg inc push push arpl xor pop xor dec fisttp mov gs fstps popa push xchg sbb imul jns inc mov (bad) aam mov xor xor (bad) or ret jae sbb (bad) shlb (bad) jns or dec mov scas and push inc lea sub adc xchg xlat cmp imul xor popa fs bound add or lea pushf push mov or push add dec sbb ret daa cmp sbb dec js add lea lea mov mov push pop mov mov cmp mov pop daa insb mov scas arpl loop ret popf xor pop ljmp and leave add test bswap xchg xor adc roll mov lods fdivrs sarb or lods or inc rclb (bad) or inc add addb and ret lret mov mov mov in mov inc pop rcrl cli push iret ss adcb push mov sub xor xor arpl cmp and cmp xorl out sbb cmp jne mov xchg ror jno push pop xor add sub cmp in in add aas enter jo lret adc out daa pop mov dec lods push adc push mov mov push daa inc sbb into (bad) cltd pop inc inc mov sahf push or sahf imul or xor roll movzbl xchg divl dec sbb imul mov sbb (bad) xor add sbb sbb sub xchg popa test insb mov xchg jbe fidivl outsb loop lret (bad) pop bound rol dec adc fdivs add jp cmp repz imul pop ret fidivr loopne sbb mov push pusha sahf sub xor or std test rorl mov cmpb cmc fldl cmp aaa pop adc inc and sbb mov call call add or or and dec test dec sti or cli flds add mov add xor push push lods mov or popf fs cmp into rcrb add test mov sbb pop adc movb jnp lods push mov fcompl arpl sbb sbb pop lcall push subl pop mov or add out es test jo inc xchg push sub ljmp sub push js imul and leave popa aad test aam mulb and pop inc push add push sub popa xchg js dec dec xchg pop mov dec loopne mov lock pop loopne push test pop cmp stc or test cmpsb (bad) sub inc cmp call sub pushf mov sbb sahf es (bad) mov movsl test xchg inc adc sbbb or addb mov and loope inc ljmp inc shld or movsb xchg daa pusha sbb testb cmpsb dec or sarl pop jae xor shlb push push push push push xchg (bad) mov in pop sbb jo add push xor add add mov ret mov sbb es cmp xchg and sub popa mov insb test sub cmp lcall mov ja (bad) (bad) rorb or lock test cmp jl push inc stos insl jno arpl bound xchg pop xchg mov cmpsb nop popa push popa movsb push js inc mov xchg (bad) stc add pusha adc add inc cmp inc lret jg adc sbb paddq ss repnz jno mov jo lret sti and test mov inc xlat popa int imul xchg shrb pop push add push iret pop cmp add paddusb mov (bad) arpl mov (bad) in in test jns scas xor data16 add cmp pusha jno pop push lock enter mov xor pop dec and outsb cmpsl cwtl fwait adc jb jmp inc loopne sub je inc pusha leave sbb xchg shrb fild add (bad) or inc hlt pop sub xor push das sub js xchg cwtl add mov cmp (bad) sub rcrb pop adc test icebp cld xchg imul sub mov lahf mov or bound movsb jno cmp pusha and xor pop xchg cmp mov xor dec xchg insl or adc cmp and popa push jmp mov push js movsb inc pop and (bad) inc sbb mov pushf pusha or xchg sahf dec lods add jmp sbb add data16 sbb pop cwtl mov pop test fs add sbb xchg invd arpl add push test push mov dec std pop mov sbb xor and sbbb xchg je and jmp inc mov andb sbb fisubrl jo andb adc test xchg (bad) ss mov loopne inc jno rorb leave lret popa pop rcrb add and in or or dec sti xor sbb imul adc jbe mov bound jecxz (bad) dec add xchg repz mov push pusha or push or dec js or push add in push out or and push jp adc bound pop enter pop dec add sbb dec adc rcll out std mov add and pop xor cwtl inc mov jecxz adc sub (bad) lret (bad) aad cvtdq2ps sub mov sar push pop sub xor aad push xchg mov push push add jmp dec jecxz pusha xor dec adc es mov cwtl add ds pushf or jbe pop cmpb pushf jp iret movsl xor lock lea gs cmp xor add sub mov cmp sbb loop jnp and or and test and (bad) mov popa sbb adc jo or bound in xchg mov inc or (bad) pop rcrl mov inc jnp inc sbb das int3 andb adc mov fs movsb dec mov dec iret mov je inc mov adc xor cmp sbb xor sub loopne enter add inc ljmp mov shrb and inc test pop sub cli arpl adc addl pop xor aam pushf add into add out adc popa test push or inc sub or or add popa fldt cmp mov and push inc movsl dec mov repz mov pop sub mov sahf sub xor (bad) mov fcomps (bad) dec mov mov inc add inc aaa xchg ret shll xlat xor (bad) aaa jbe push xor push push lea ret sub inc inc push (bad) inc test mov and xchg xchg xchg out test pushf mov add add jo jno or sbb outsb pop sbb in mov daa dec dec aaa jbe xchg xor jl fwait rcrb push cmp loopne xor jno imul mov mov add pop js xchg or pop pop push adc int3 push adc (bad) push and adc sbb sbb or xor aam cmp inc mov (bad) sarl mov ss inc xchg mov sbb inc or sbb and adc and and movlhps xor pushf insb and jnp sbb and jbe test add pop pop inc pop test mov sahf sub xchg test pop fsubrs nop or mov pop cmp outsb jae in loope repnz dec adc aad leave dec xor and dec jno js mov push mov push push lods sub cmp mov ret ret cmp or ret cmp xor nop dec lcall xor xchg in push pop scas out roll cmp or popa lods sahf dec cmp das fcomp push or scas xor push push fadds jae adc xor or arpl cwtl std dec pop mov and rol sbb inc or pop or mov arpl das call (bad) mov add push aaa add call and dec dec mov (bad) hlt aam mov inc lods add lahf and mov aas pop mov out dec mov xor gs sub inc loope xchg add mov xor add dec bound shrb and sbb int3 sbb roll push push pop outsl push pop inc das mov sbb mov add xchg addr16 sbb pusha or cmp mov pop sub je leave ret jno push cmp sub xchg outsl push mov lods cmp add loopne adc lahf ret inc lods xchg pop and or jne pop push cld pop inc or inc jge and push es mov cmp adc ficoml or test add sar inc sub mov adc repnz push popa aaa cmp rcll sub loope lods test add push adc pop cmp js xor cmp cmp adc and insb pushf add cmp adc int loopne cmp sbb orl roll mov add sub (bad) xor js xor xor test test dec enter (bad) mov mov sbb popl lock imul cld ds (bad) mov xorl dec std dec pop nop push add adc mov out lea inc push add sar xor gs movsb add je inc arpl and dec loopne sbb pop xor dec add ret jbe rolb sub outsl pop push ret fimull xor push imul adc adc hlt mov sbb sub or sub in movsl and and cmp xchg loop xchg mov nop sbb sbb popa sub lods add js fdivl sbb mov mov push or add sub aad shll jbe push inc adc mov add jno jbe adc sub jo lcall mov sub (bad) cmp ja or fldt cmp cmpsb add or mov cmp cli orl inc sti fmul xchg jo adc leave arpl pop adc rclb addr16 jecxz das ja clc add inc dec pop jb int3 lcall les out mov xchg jns mov xchg jge xchg mov push mov and rorb inc xor push and popa push dec cmpsb fs push push call gs sbb andb pop dec popa adc out lock push pop cmp adc bound push pop push xor mov or test ss inc sub or cmp adc or into adc ficompl fild sahf xchg clc xchg adc and lods and inc mov mov les sub test adc push js xor scas gs test adc inc and xchg xor fbld push jne jns loop les (bad) call pop dec lea cmp les xchg pop rdmsr test pop push jnp push xchg xor cwtl sub inc push push icebp jno mov add pop jo test pop mov pop add (bad) xor lret push mov jecxz pop mov ret add aaa jo mov jecxz xchg mov add xor cs pusha ret push (bad) ds mov loope ljmp loop cwtl dec daa pop jecxz sbb aaa push mov and or pop inc call xor arpl sub mov inc lods test jl sbb mov ret and jmp cmpb mov mov inc lock mov popl or fildll mov call movsl or je mov enter xchg shll push shrb cmpsl enter data16 aad test xor xchg test sbb enter (bad) mov add imul add jmp test mov loope pop sub insl xchg xor add repz mov jp sbb addl pusha mov sbb and mov dec lods rorl mov inc aaa insl cmp mov test dec aaa (bad) lods add inc mov lcall dec mov lods jno scas in imul sti push mov sbb mov cltd in test sbb mov ss pushf inc lret push lods and xchg or adc adc cmpb cmp sub push rclb mull inc xor rcr xchg sbb into nop mov js mov imul cltd mov pop and add dec jns push jle mov popf mov or outsl ret add popa adc mov lret inc pushf push pop pop push mov out addb daa pop sub lea pop jns push and adc mov leave popf out add or leave idivl das mov jae les ss add movsl popa fimull les mov mov pop movsb add fiadd xchg sub xor mov mov xchg fdivl and pop pop sub lret enter push (bad) jb dec inc pop lahf scas aaa mov add sub push cmpsl adc inc push mov jl (bad) adc in dec pop loopne inc add xor inc daa xor xor jae mov mov inc inc add sbb adc inc mov cmpl pop aaa testl inc adc (bad) mov enter adc iret or xchg mov add (bad) loope bound push (bad) sarb and and and push push or stos xchg test movsb push imul sbb je clc addb inc sub mov xor cmp sub add and add dec jns xchg (bad) sbb insb sbb adc add out or xchg or pop js or je inc pop or pop inc rcrb dec (bad) and movl jp (bad) hlt pop mov hlt lods adc dec mov adc or inc movsb jmp inc loop (bad) push or gs xor test and mov mov mov sbb inc subl inc orl and pusha test lds push jp insb cmp les pop add ret add ficompl cli or shll imul inc xor iret mov jo or aad push std and pop pop pusha xor sbb insb sub xchg xor das or or sbb movsl lcall push sbb test xlat cs ret dec xor movl sbb push pop lret cwtl sbb dec pop ss fildll push sti xchg add je adc aaa jno int3 push sbb test inc cmpsl mov adc xor push add (bad) xor inc and jnp jb add out xor mov xor jecxz dec imul stos imul add xor jo mov add push scas fsubl and gs call pusha and xchg mov inc xor fiaddl add push and fucom ds outsl or xchg jns sub add hlt psubusw push add jl scas jo cmp cwtl (bad) int3 sarb in clc cwtl aas arpl test pop xor push push test dec mov test sub test xchg ss fisubl pop mov sub pop daa movsl xor outsb sub dec adc xor mov add mov inc movsl dec call push sti push xchg ljmp ss push adc rcll cmpsb pop xlat aaa femms repnz lret add and ja xchg sub mov pop and pop mov inc ljmp sub jb enter or mov mov cmp movsb xor push shrb inc cmp xchg add out incb fstps outsl cltd mov push and cmp js or out ret or add inc and sbb jge stos or and aad xor mov outsl pop push pop (bad) ja jnp or xchg adc xchg ss outsl and popa imulb das enter sub adc jmp add adc add mov dec std xchg cmp sub mov xchg rorb test in xlat or sub adc or dec xor jns or or iret adc inc add sbb and pop xchg rcl mov and lods or or pusha sub push mov adc xchg or dec pop sbb sub test es mov insl dec add inc push add mov and pushf fs les xor rolb mov cld pop xor mov add inc aad or sbb les add dec inc insl pusha movsb push xor ret ss adc pop sbb or or lret (bad) jno pop adc and subl cltd fsubrs cmp ret rolb sub sbb xchg test leave outsb and jge push inc (bad) sbb mov jl popa mov and jo dec (bad) gs xor jo ficomp mov jmp leave cmp cmc stc ret jo cmp inc imul lods ret jbe,pt (bad) xchg ret sub cmp pop mov pop pusha inc add cmp pop jae mov sbb cmp in movb mov xor add dec imul push or jae mov aam (bad) xor adc rorb pop xor inc xchg xchg movsb pop add xor test inc loopne lea cli push adc sbb inc (bad) xor push sub (bad) in cwtl xor movsb cmp pop inc js fs lods lds (bad) xchg push sahf and fldenv lods add cmc add and and popf xchg xchg mov scas inc sub push push push fs pusha sub adcb ljmp push and xchg cmpsb sub or xchg or adc xchg mov mov dec mov adc dec ss sub fcompp ss or sti push sbb push or es xchg xor test jecxz dec mov pusha bound push push mov xor in cmp xchg (bad) les pop or mov pop out imul fidivrl xor ljmp daa mov sbb xor adc ret push xor sbb shr xorl aad arpl xchg gs dec cltd cmpl outsl pusha xor push push dec cmp (bad) cltd and fidivrl inc daa sub adcl xchg nop xor es sub or jmp es mov mov pop nop js mov sub addl adc adcb cld shlb and rcrb jp nop xor mov arpl sub mov and cmpsl sbb or pop mov dec and sbb js shrb mov cld in sbb mov add xor popa mov pop pop sar xchg pop call cmp mov xchg aam rcrb (bad) repz xchg test sub xor aad je inc xor push les (bad) lods or xor ljmp (bad) popf movsl inc add leave iret sub nop lret rolb popa push add fwait dec subb adc pushf and jne gs es inc jp movsb xor push dec mov in das add cs lods dec sub js jne inc aaa aaa cwtl sub xchg sarb inc addr16 cmpsb mov loopne rolb jo push xchg fisubrl adc push aaa ror dec pusha mov mov shrb imul fistp push xchg xchg sub lcall outsl (bad) movsl (bad) and aaa or or cmp es js inc sbb xor popa lods xchg add cwtl xorl imul pop call mov mov cltd pushf popa push mov fst mov popa or adc push fiaddl mov xchg inc xchg lock add aaa dec les xor dec push daa jmp (bad) mov sbb int sbb xlat sbb gs xchg lea xchg cmp push jno xor dec pushf gs mov mov mov lea daa pop pop xor cmpsb add cmp shlb and sub clc jg push dec or sahf mov xor cmp and fildl mov and add xchg mov addr16 (bad) pop mov xor inc adc push lods mov outsb adc imul fstpt pop mov dec mov add (bad) push roll ret call xorl (bad) push idivl leave lock dec pusha jecxz adc pop cwtl insb inc loopne (bad) aas inc nop mov gs mov aaa movsl xor sub inc (bad) movsl aaa rcrb lds cmp dec js cmp push and mov adc adcb movsb mov xchg add mov pop rorb cmp fbld xor xor jns push xor cwtl mov xor les (bad) (bad) mov pop enter lock cmp sbb loop dec and (bad) sbb jns les pop mov jmp (bad) js mov pusha add popa push sahf adcl mov cmpsl pop pusha and lret loopne mov mov dec mov inc sub cwtl sub cmp stos adc cmp es fadd mov outsl mov and pop dec loope dec xchg xor pop mov and lea xchg fstpt mov test ret jo mov inc push daa mov inc inc pop pop enter sub or fistl insb mov mov (bad) mov jo push mov leave adc sbb pop or adc sbb (bad) xchg or jl add sbb sbb insb inc xor test mov loope pop or insl lods dec out push add add mov cs xor inc pushf stos push imul mov test sbb xlat into (bad) mov sbb ds add lea inc cmpsl xor inc inc add cmp popa mov fstpl sbb idivl add add jo scas sub jae sbb iret mov aam loopne mov inc (bad) fstps ret sarb push sbbl adc shrl sbb adc xchg pop fidivl sbb jae jns mov jbe mov clc xor or scas test rclb pop lods sub adc and inc setl mov dec hlt cmp nop cmp adc lret push cmp (bad) popa pop mov inc pop sub pop inc sti jno push adc sbb inc dec adc popa inc pop inc imull fsubrl xchg in pop or pusha or inc add popa fs pusha cmpsb (bad) lret stos and push sub xor cs add dec sbb mov sub addl sbb xor rorb add sarl push add movl lret jo pop and insl xor out rclb jb push test push add fbld sbb dec inc dec pop or inc mov add or orb pop dec pop pop arpl in call rolb xchg xchg and cmpsl in fwait rorb sbb and pop leave lods pop mov ret cmp rol mov sub pusha icebp mov movsl pusha pop sbbb sbb repnz add movsb xorl mov inc xor push sbb xor add adc sbb (bad) nop mov or (bad) stos jno add dec (bad) int3 push shrl dec out stos fadd sbbb pushf mov mov lods xchg out test pop push jb ret push xor adc inc sub jnp (bad) iret adc cs pop imul jmp or mov out push rol adc xor xchg xor xor imul fs mov dec cmpsl add and sub adc push add push imul adc movsb adc or pusha stos shlb fs sub addr16 test subb notl jae cwtl mov push loope ret xlat je gs inc icebp sub inc jecxz sbb sahf adc (bad) into xorl sbb jcxz bound (bad) fcmovnu pop xchg shlb adc pop addl add les mov (bad) roll jp pop pop cmc gs aaa jne fxch mov push lret leave push adc icebp sbb sbb popa xchg adc ds inc add je or mov fisttp adcb pusha arpl pop adc inc cltd adc sbb inc add jmp xchg outsl arpl ljmp bound jb inc mov insl sbb pop or xchg sub push add push pusha int mov or and push arpl lds movsl inc dec adc or je push sub mov cmove out mov fwait pop adc cmp or aas dec push xchg push jnp mov stos fs test pop adc cmp js xor gs xchg mov (bad) sbb inc push xchg repnz mov mov and pop adc mov ss dec mov xor ja es bound pop adc xor fbstp adc out fnstenv gs js dec xor lods xor dec add jno xorl or jp dec ret test pop mov lods shlb shl add sbb or jo adc and test imul sub and rcl adc mov nop cmp dec lret push sbb inc add mov nop or sbb fstl roll gs fs orb rclb sti cmp sbb mov or or rolb sub and ljmp adc mov mov enter inc add xor pop aam dec jmp cmpsb xor xor cwtl rcll xorl aaa inc test lret push inc mov fs jno nop loope cwtl (bad) fs bound test fstps sub rcll test daa pushf or jg cmp xchg inc (bad) xlat add adc adc iret es repnz aad push xchg jbe fbstp aam lea iret mov sub and pushf int3 inc nop mov loop and inc adc add mov and mov sub fmull shr xor test nop stc mov and xor xor mov mov imul mov dec lea cwtl add cwtl pop inc mov jg xor pusha gs push add push or xchg mov xor out cltd jp lret mov (bad) pop mov inc imul in (bad) movsl jno and and xor nop or jo popa jno xlat int movsl xor test sub jecxz out xlat xchg xor jecxz xchg lea pop addr16 es mov or cmp add movsb mov push push enter inc or mov insl cmc lods orb adc mov xchg imul (bad) fadds push sub sti push add add add xor cmp test outsl imul jno mov add outsl roll imul and sbb xchg rcrb xor and pusha xchg jne mov or add sub push cwtl nop pop (bad) mov adc and pop repnz aaa sub sub fdivl jbe xchg mov or bound addr16 mov scas arpl sbb adc or daa sbb inc sbb sbb sub mov aam (bad) fistpll dec ret stos sbb and pop outsl adc enter lds je ret sub addl push mov iret repz pop stos jle das or divl daa or cmp movsb scas bound into mov in outsb data16 inc pop sub scas shlb test inc mov sbb jg (bad) mov lods jge ret inc mov or pop jmp sbb dec add (bad) hlt push mov or (bad) mov dec js outsb je sbb mov jl xor mov xchg outsb mov call (bad) or cmp rclb repnz pusha popa sub leave in dec or xor jb push ja xor push push mov dec popf enter (bad) jmp xor xor sbb mov pop pusha mov pop aam test dec sbb add subl pop and push insl sbb repnz test and jns repz xchg push outsb and (bad) ss add mov pop mov les xor scas add ror rcrb js mov lcall ret xor cld dec (bad) adc pop xor jno mov cld popa mov test (bad) aas gs subl sarl xor pusha adc sbb add dec inc lods inc ss movl inc mov pop mov dec xor loop nop orl or outsb add enter loope stc test sub dec mov int cmp dec mov add xor mov clc inc loopne xor xchg movsb aam sbb in sbb imul popa call dec (bad) adc mov xchg movsl imul fadds nop adcl mov mov jo scas adc or add out dec push movsl sub jno adc cmpsl je jo fldl adc inc xor inc rclb int or mov pop cli xchg xchg inc dec rclb cmc jno adc popa mov pop and cmc dec ret bound movsl xor int add pop aaa push nop mov outsb mov (bad) iret out xor push cs xchg jno mov mov inc or sub inc jns push add cmp mov and adc xor dec mov mov push inc dec test xchg inc sub push xorl cmp lods xchg inc nop inc mov inc fimull pusha bound xchg js stc outsl cmp lock sub pop inc addr16 sbb arpl mov adc lahf xchg sbb xchg xor and xchg or mov stos jmp test jno stos sbb or ret xor xor shrb jbe xor (bad) cmc add sbb loopne dec xor mov push mov xchg loope adc pop es add daa arpl inc pop xchg xchg mov add cltd xchg mov loopne pop pop ss (bad) push call int3 jmp rorl jo xchg (bad) movsb inc dec cmp push inc sub cmc adc push pop dec cmp mov ret adc sbb or push sbb or (bad) popf imul xorb flds daa cmc jle push push jecxz loop ss add (bad) sti push xor cmp pop lret ja xchg orl movsb xor mov cmp shlb lock pop cmpb push add adc and pop lcall xor mov push (bad) or pop jne push imul test add xor sbb test mov jecxz je jb repz cmovs mov pop mov xor sarb push cli ss push and aaa push push pop adc (bad) leave scas or dec adc imul or ret push mov inc dec (bad) mov jns rcrl std push and push inc xor test add arpl push stos mov adc sub xchg lds movsl (bad) and mov add sbb xchg inc adcl pop xor ret jae rcrb test cmp aaa or sub dec cltd (bad) mov add xor jecxz inc and in pop xor mov loop out cmp ss lds pop xor add mov loopne je bound sub lret cmpsl xor xor sub pop clc adc add es int3 and repz add push stos mov (bad) loopne test aam jb pop push mov cmp xor and pop movsl push pop mov fcom pop mov xor loope test cwtl cs jo outsb popf or mov push pop inc sub sarb xor and mov lods xor adc mov and cwtl aad mov fs (bad) jno sbb and pop mov ss adc adc adc push xchg adcl fiaddl push sub push int push inc fsubrs mov popa insb shrl sub or popa mov push sub ljmp push aaa and sub test pop and sbb and push (bad) sbb jmp xor push fldcw enter cwtl shll sarb mov out loop xchg sbb imul out push mov mov cmpsl mov mov xchg lea push or (bad) or jne loope and xor xchg rolb inc sbb fwait dec repz (bad) mov fistpll pushf inc popa loopne sbb xor add ret stos dec clc xchg push and push pop cmp add mov mov pusha imul movsb add inc jns inc test xor xor cmp fisubr mov inc xor movsl sti xor or push or lret int3 out sahf push pop test sub daa cwtl cmp jp add jmp dec mov xor test pop shr insb bound mov pop jo fisub test (bad) dec pop (bad) aaa mov shlb bswap ss dec push add cmp andb bound mov loopne inc pop adc adc loopne dec lea xchg xor inc fistpll jo insl imul adc push sti sbb inc dec aas and adc arpl jo divl sbb (bad) orl stos scas cmpsb gs sub xchg push or jo ja jecxz nop daa lods ret mov aad push xchg (bad) cmp pushl pushf add mov mov pop pop lds lret movsl bound mov rorl or inc inc xchg popa add and mov mov adc (bad) mov fld pop and dec and push (bad) stc xor mov inc cmpl or sbb mov pushf and or shrb lahf add into adc cli into sbb test bound addb (bad) clc (bad) mov add sub fbstp test pop daa scas inc lods fs mov leave push add sub gs xchg sbb push sbb js cltd xchg push sub shrb and sar hlt pop sub js xchg add mov rolb ret push (bad) xor cmp fldenv lods cmp cmp push or xor inc and mov rclb jo pop add xor jne fdivr or sub dec subl pop mov or sub inc or add aad jmp and icebp and lret inc rorb adc lods add pop mov add mov or sbb mov ret mov sub jno inc (bad) xor xchg sbb mov xor gs test mov lock sub jns rcrl shlb inc rcrb lods pop loop test data16 fldl arpl jp dec adc jbe pop lcall or xchg mov xchg lahf into push andb inc push cmp movsb loope xchg fwait cmpb inc sub pusha adc xor (bad) mov xor mov jne add je ret outsl aam mov mov jne xor in or add cmp popa lret mov inc enter xor dec mov ret rcl mov xor lret or lcall outsl rorl xorl scas push xchg sub ss push (bad) push xor inc sbb rorb xor insl out dec sub shl jno or pop pop inc sbb push enter add xchg rorb stos in pushf xor or push test inc ret mov xor and rclb str out movsl jb sub jae push or or ret xchg dec xchg push and jecxz imul mov add or mov mov jbe sbb icebp inc add sarb sub bswap std lds loope add push push (bad) leave test pop xchg popa inc dec mov push lret jnp std inc jmp movsl and mov imul jno cmc push icebp sub out or mov test cmc imul or insb lret mov shlb sbb (bad) sti push lcall adc sbb scas inc push enter mov loope mov dec (bad) sbb popf and in lea (bad) cmp xchg loope fcoms fcmovb test mov mov leave mov xchg fisttpl add and in mov test jg sbb pop push loopne push or xchg daa add (bad) aam mov inc inc jno sub (bad) cmc and sahf add adc vmwrite or sarl icebp shlb sahf xor push pop add aaa or rcrb mov mov xchg cmp sbbb push jecxz inc xchg sahf jo jo add sbb cmp or je sbb test sub mov daa push and rorb sbb daa sbb xor add xadd jo call sti add add sbb lds fiaddl cmp imul dec pop or or test add inc push adc stos fidivrl xor (bad) rorb push iret adc xor push cmpsl or test lods pusha fimul mov mov in xor loopne mov mov jno sbb push sbbl push popa ret pop pop add std fadds in inc mov (bad) andl cmpsl and icebp shrl pop pusha lods (bad) mov add xor pop inc mov inc out (bad) xchg cmp pop andb add sahf sbb mov dec add insl loope xchg push dec bound or pop and or mov pop adc int mov sbb inc out mov (bad) lock or pop mov je les adc (bad) xor pop or xchg rclb xchg add xor push pop or pop xor dec and sub push dec popa mov jecxz aad mov mov and push mov sbb lret xchg adc add iret (bad) push and lret mov loope das ljmp insl inc addr16 adc sbb cmpsb or xadd ret mov and lcall cmp mov arpl out and push push ret mov and sahf stc mov pop lods add stos push (bad) push xchg lea or mov incb jns mov sub mov pop adc xchg inc fiadd pusha cmpsl and dec push jecxz fwait cmpb pop mov xor mov dec xchg loopne (bad) mov xor dec sub test cmc or iret pushf pop lret loopne rcrb test cmp js aam movsb dec xor leave (bad) mov sub pop and rcr jo (bad) cmp es add and push test push cmp cmp push es popa (bad) cmovp loope out add movsb lret leave push mov jmp pusha mov aam adc loopne or xchg push add add xor cmp push dec lret adc sub ret push cmp xor daa jns pop imul mov test xor mov sub push (bad) cmc rclb test dec dec mov inc in adc aas xor push push xor or loope cmp mov (bad) nop stos dec loopne adc sbb adc inc and scas push cltd (bad) outsl jl lea inc imul cwtl mov fs lods xor (bad) outsl shrb fwait rcl adc insl out sbb cmp (bad) in dec jno push mov xor loop inc inc daa xchg pop enter ret mov push out cmp dec inc and add (bad) (bad) jae push cmp pop and mov ds push inc adc dec xor sarb add pop push popf sub adcb sbbb popf mov inc lods adc add mov add fstl cmp scas inc push movsb roll sbb sahf xor adcb insl add daa push insb (bad) sub out inc in rorl cmpsl cmpsb pushf sub addr16 add push imul test insl js jne jmp pop or addr16 sahf fimull push adc add pop add ljmp out pop and popa and sub push les icebp test sub bound or mov xchg add mov clc xor xchg xchg dec sbb cld push sub movsl (bad) sbb or jnp and push xor or bswap mov std adcb and pushf add rcl nop cs in in insb rorb xor sbb push divl leave push test and sbb jbe inc push imul loop dec mov outsl sahf pop aam push mov mov mov xor or jmp xchg add inc push cmp scas inc das pusha mov adc movups das dec (bad) call shrb or dec loop sbb jp cmp inc mov add push das repnz pop ss xor into jns inc xchg mov and into ss adc sub or fsubrl mov push jb add push dec mov repz xor jp in pop mov call sub mov pusha stos xchg ja mov or pop jns sbb sbb test data16 mov test add and push call jl adc gs mov pop sub mov push and mov cmp sbb or ds loop or or cmp pop xor mov mov xchg pop inc cmp (bad) jbe xor dec and add (bad) in test cmp mov cmp imul jno fs popa cmp add jo aam sub xchg fildll ja or pushf popa mov mov cwtl or test sub adc mov decl insl xchg xor sub push add xor sub and add dec or mov aaa xor and mov inc insl add push inc test lret cmp cmpsb loopnew mov xor ljmp add sub inc push loop xchg push lods dec xchg rcll dec cmp push jbe fnstenv rorb subl ret pop (bad) gs push les jo mov inc test add mov pop fbstp imul xor cltd xor sub or test or cmpb add mov jns pop add stc sbb sarl adc jp add mov mov sahf rcll in sbb mov mov aaa das add je push xor imull or lea dec aaa lret add add inc test nop xor pop in ret sbb adc jae cmc add cmpsl lods cmp or mov adc push jmp inc cwtl and cli mov andl shlb adc (bad) cltd push sarb mov mov (bad) jmp pop ret lock xchg xchg jne pop sub mov divl pop inc adc addl push and cmp inc lods sbb lea and pop lret mov pop push push imul inc mov data16 mov add lea test inc cmp ret lahf push stos dec sbb sub xchg pop rcll push pop xlat xchg xor jecxz mov ret imul mov jae adc adc lods movsl adc mov mov adc iret (bad) xor shlb sbb rolb sub and sbb push jne (bad) jo imul or xor imul adc test sub xor xor das inc cli xor mov mov mov pusha xor mov and or dec add sbb rorb dec addb mov mov pusha or push add adc lea dec addr16 shlb sub fwait jnp sbb mov call add push add fwait adc inc into nop and leave add or sarl sahf je jno push psubsb xchg pop push push rorb je xchg lock mov into adc and jmp mov sub mov mov cmp sbb jecxz xor xchg push cmp insl lea dec (bad) cmp add adcl jo xchg and push or loopne xchg scas imul and and mov sbb xchg gs stos xchg push adc insl pop xchg movsl or push sub xchg bound xor fnsave sbb mov outsb outsb add inc repz imul gs les push les loope lret mov and inc mov insb call into aam sbb adc sub and sahf mov lods sub pop add and xchg icebp xchg push dec xchg lcall sbb stos dec lcall push push hlt mov ss mov jmp inc inc mov test jge dec daa nop cs sub cmp xchg mov test scas test add lea adc push cmpsl adc push nop xor sbb mov lods rolb inc sbb xchg icebp xchg add test stc popa cmpsl mov outsb ds and cmp add dec adc movsb add add shlb test sub movsb xor add pop push ret xchg js leave shll inc popf push or xchg push mov pusha sub xor dec jg ret or in scas pusha ret out cmp mov mov clc enter iret outsl loop xor or sbb mov mov xor je out sub das bound pop adc or sub pop inc daa pop lods add lods popf adc adc add add push and mov test mov lods jo subl fisubrl or mov adcl push xchg or (bad) xor pop in xor push cmpsl in sub and js mov daa leave shlb push push dec sbb add mov mov dec (bad) push add sub sbb lock mull sub push js jb dec mov lret xorb cmp outsl cmp arpl or lea lock sub add jo ja cmp xchg shrb fldt add mov sub push xor add mov sbb fldl ret pop movl jo (bad) shrb add inc and repz pushf in cmpsb cmpsl loopne test iret mov cltd out mov inc lret pop fiadd dec mov mov rcll imul xor jmp testb enter popa ret inc lock and xor xor xor shlb xor cmpsb inc xor add sbb pop xchg inc aad xor sub lcall inc lods addb adc mov loop fs ds inc cltd insl cwtl gs leave xor (bad) lea mov mov adc bswap xchg or jne les ss lds xchg or roll jnp mov and pmullw int loopne xor sbb and and ffree rcll nop pop adc pop xor cmpsl sub aas je xchg faddl dec arpl jnp mov mov sbb test aam orl sbb aas cs ss (bad) lods jb lods xor sub fdivs mov push pop xchg gs sahf xchg lods or lds mov push xchg mov scas pop test add pushl mov xor inc ret (bad) mov xchg lret lret dec xchg test mov or pop and lea nop adc xor movlps inc push mov mov xchg inc imul mov rolb xor js (bad) cltd mov lock jno imul cmp sbb scas outsl dec insl or cli fild xchg inc dec repz jns xor adc xor rolb pop push xchg adc cmp or cmp push or mov pop sbb pslld push pop movsb jae adc push xor fadd inc or jle loop sbb and mov lcall aad rclb sub lods outsl sub push dec sbb pop rorl inc adc adc std push iret xorb inc test popa stos adc xor scas xor jno xor ret jae inc add adc arpl add pop push sbb mov or adc mov mov mov push mov fnop shlb dec inc cvtdq2ps mov xor lods or movsl jp fidiv add movsl sub (bad) popa fdiv dec xor xor das sbbb inc dec sbb and inc shrb push ret aam mov movsl outsb or jo es push xor inc xorb cmpsl sub aam in jecxz dec adc cmc jae popa pushf cmp (bad) and (bad) inc xor sub jo inc inc stos push inc mov lea dec pop adc lea xor enter rorb xor push aam (bad) lock js test psrlw mov cwtl pop lods sahf (bad) sbb das mov add lret test add sbb mov je arpl mov pop js aas xchg sbb adc mov mov pop mov sbb imull cmc sub xor xchg movsb xor scas push and lea dec xchg dec (bad) push (bad) imul add mov (bad) add (bad) dec push lea xchg jne mov (bad) and aas cli cmpsl shl or dec js icebp rcrb or cmp inc adc das or xor ffreep (bad) mov jecxz pop outsb nop ljmp adc insb sbb adc in and test das push mov xor cltd sbb mov outsl orb xchg and cmp and mov mov add leave pushf dec sub mov add jp inc and es pop mov push or testb xchg dec cmp and fsubrs pop jge sbb add add loope lods sahf js orb arpl mov jp mov add lock fwait jp cltd xor movsl inc aas cmp or mov add add imul mov cmp or sbb sarb push mov adc xor jge movsb mov mov dec sbb mov dec pusha movsb hlt or lea ds mov cmpsl andl rcl add rcrb pop add (bad) ficomp add (bad) cs adc shrl xor jo mov xor sbb popa adc adc adc push jge or aad ljmp and loop sbb push sbb jo (bad) sbb xor sbb or rcl dec and fist dec pop xchg xor and mov add sbb cmp push cmpsb int3 add popa jno pop mov movsl adc adc jb out adc or (bad) cltd lds pusha add rorl aad jnp cmp sub mov mov loopne mov stos and movb mov jmp ljmp bound cmp jne add scas xor push int3 adc cld in and pop xor push push pushf sub dec inc sub subl or xorb and sbb fstl add push sub cmc lahf cmp adc or or ret sarb imul js or (bad) dec loopne nop fistpll add jo test mov add ret (bad) push sub leave lret pop enter mov adc movsb (bad) mov jns scas insb xor (bad) in repz addb mov or ss adcb inc fisttpl dec test push jno inc cmp in sbb push sub sub pop dec ret icebp movsb push add fadds push mov push add pusha or cltd jb jno rcrb or lret out jae jno xlat dec sub and cmp fsubp xor (bad) or dec outsb rcrb sahf adc inc sub xchg sbb xor sub xor xor inc sub test pop push xchg xchg ret mov add mov movsb sbb cmp mov and adc rorb test sbb xchg adc movsl adc mov js inc in sub dec sub rorb push cmp jl (bad) mov aam mov fidivr (bad) xchg popa imul imul insb inc fisub mov pop add sbb add push mov xchg mov aas mov push and pop movsl pop xor push cs loop xor scas fsubl decb or add lock mov cmp add adc mov mov stos aam pushf sub dec inc sub lock push mov push sbb or pusha fildl adcl test sbb mov and sbb test mov push fldt imul aad or cmp lahf mov inc mov mov inc push mov sub lret xor ss test repnz or dec cmp jo cmp add and fisub lds icebp xchg dec xor aad shlb inc orl and aad or jns (bad) cmp or inc inc cmp jns pop xor gs add push mov rolb jmp add bound ss add xor mov inc push or xchg xor add flds dec and and pusha inc (bad) cmp pop sbb in ret mov sub sbb jb shrb push rcll int3 or test in sbb lods xchg xchg xchg inc shlb add and daa xor inc lods movsl sbb pop push inc mov (bad) jno leave adc dec adc pop xor js or push arpl cmp inc mov (bad) insb push rcll nop sbb add ret scas mov cmp sbb mov test push pop inc push jmp (bad) cmpsb out mov dec lods test mov outsb ret cmp jmp and sub (bad) and add hlt lea add and cwtl mov pushf or popf sub or fidivl lock xor xor xor inc insl sbb lods add dec sbb ret adc insb sub mov pop fdivl dec pop shll pop push imul das pusha mov movsl inc mov and jecxz pop mov mov imul movsb pop sub sbb in jecxz sub xor xchg (bad) test mov loopne add lret addr16 popa outsb iret stos fcompl movsl sbb push cltd sbb push xchg sub mov push test sbb cmp leave leave add test into aaa dec dec adc push pusha pusha add mov dec addr16 pop rolb mov popa or cmp shrb push or lods mov dec xor sub and adc xor lock mov sub inc (bad) dec cmp mov cmp pop xchg mov or imul add test jge loop test sbb jb push imul adc push inc dec jbe push push jnp cli (bad) xor adc adc cld popa sub insl add add jns into inc imul fildl pop sub xchg out (bad) ja scas inc xor xor pop mov fimul aam dec int3 xor ret pushf movsl in mov adc fistpll add test push inc xor add jle xor and sub subl and cmp jne inc add sbb cmpsb jbe sbb es ljmp movsb inc mov sahf inc cmp fmull or pop and xchg sub sbb pop add or cmp addb mov inc stos sub pop sbb shlb push ret mov lods sub sub or inc sub or push inc das sub adc in inc lods lods inc es ret and push dec (bad) fstps into sarl lahf (bad) adc xchg mov outsl dec or adc push jbe dec inc adc test sub cmovns xchg (bad) xor lods xor in dec popf je sbb hlt and jmp and mov dec bound xor cwtl adc cmp xor and mov mov lret shrb enter cltd stos rorb or dec lcall adc mov lea cltd pusha inc mov addr16 add sub andl pop (bad) into jmp xchg arpl push lods mov dec mov rcrl in sub cmpsl call fmuls mov aaa inc mov das cmp cld (bad) mov dec sbb lahf pop addl mov push jnp mov xchg add xor xchg xchg aaa mov push fadds es pop gs in lock and xor push or pusha jge int fld and xorl add je cmp out inc or xchg or mov or lods es cwtl ss sub or mov add jbe loopne shlb push loopne and xchg out lods movsl ret fiadd cmc js mov push xchg cmpsb pop out addr16 sbb add stc pop sub repnz orl and aad sbb xor mov mov xchg pop data16 mov dec sub lds or sbb add xor mov daa fcomps (bad) add es inc rcr lods sub loop (bad) mov or fmuls mov mov (bad) leave lods lea daa xchg sub es mov mov and pop sbb adc nop mov xchg lea out push inc add ret jo test sub repz dec cmp xor inc xor ficom nop or aam cmpsl push aas adc inc lcall add sub dec pop jb fs dec jo xchg or and bound pop cmpsl cmp (bad) and sbb mov add sbb dec jb popa push outsl mov cmp inc sbb sbb insl add shlb jmp into xchg es mov jecxz rcll push and xor fnstcw and out sbb lock jno loope xchg dec stos push lock dec (bad) xchg mov cmp jge push movb xchg dec das push and mov mov pop pop sbb fsubrl cmp mov pop mov outsl test jmp bound pop or lock mov push inc imul test and sub xor test mov dec cmp stc and mov inc aas out fcoml (bad) ljmp pushf push xchg push or lcall test arpl rolb xchg mov cwtl dec or add subl mov loopne sub dec jge mov xchg test adc test imul dec cli shlb shrl xor mov lret and add lcall jg or add adc (bad) dec ret inc aam push std push ret inc (bad) sub and xor xchg cmpsl dec sub push xchg sbb push cmp int push les bound mov or cwtl sub rorb mov adc push negb fimul xchg inc pop ljmp and mov aaa push sub aas cmp xor mov xor repnz shrb andps bsf lods movsb add xchg jge jecxz (bad) pop in mov inc mov or push imul pop mov dec shlb das ja add sub das movsb cmp cmpsb push push cltd arpl dec adc dec scas xchg add and inc add out pusha lahf es fdivr cmp lahf cmpsl loopne dec ja js push mov mov pop jnp pusha mov mov (bad) mov push daa aam inc cmp push dec pusha or fstl xchg xchg push cmp push cmpb inc pop pop addl add mov fsubs call rclb ret add stos gs sbb (bad) dec inc jo call xchg sbb lds gs pop mov sub insl bound jge pushf mov adc xor sub pop shrl xchg pop enter add ss (bad) xor rcll xchg mov cltd mov enter lea mov mov rcll adc jno dec xchg cmp xor mov and sub es popa xor test add add into aaa (bad) and pop enter mov jno test mov pusha xor inc or cmpsb mov mov cmpsl dec mov sub js pop adc movsl inc pop sbb cltd xchg mov mov or popa icebp (bad) adc scas sub js jno addr16 fs imul dec xor test push shr inc ret cwtl orb int3 popa jbe rcrb shr lcall into rorb push jne popa (bad) push dec xor mov xchg (bad) movsl gs fcoms test xor xor mov and adc push sub or mull popa adc repz mov inc jmp test shrb sbb sti adcb sbb lea and cmp sbb mov mov lock (bad) hlt js jmp mov mov add pop add incb mov insl jmp xor adc addr16 jp add sti out out pop test nop add cmpsl add jae (bad) adc push xor xor sbb std adc cmp test sbb divb mov or mov enter add sti inc inc loopne std (bad) xor mov and mov mov and into in sahf in dec xchg jg xor (bad) mov add in mov xchg adc das mov mov add inc sbb rcll xor mov add xor stc adc sub out insb test add sti add or adc ret adc lret and insl outsl adc repz inc lock and sbb mov push sbb inc imul xchg pop (bad) shr adc add mov cltd xchg and xchg push and popa cmp pusha loope (bad) mov sbbb add adc adc lock and ret pop test daa lret inc and add cmc mov push mov cltd adc mov sub pushf mov dec outsl jno ss fmul xchg cmpsb inc or es xchg lods dec mov std pushf int sbb push xlat dec push inc bound sub push and stos xor adc pop test dec push xor dec inc pop or test or pushf fs pop sub xor lods inc cmp xchg adc call sub dec xchg and ret test or adc popa cmp add popa outsb ret or in add cmp inc xor push mov imul sbb popa add pop inc mov aam adc jno sub adc adc inc test out add pop mov popf push and fwait mov movsl in adc cmp hlt push sbb mov (bad) xor cli ss mov dec mov inc rcrl or dec mov push daa xor or jge sbb mov imul xor out adc imul addl dec or popa dec inc imul or inc mov rorb jne sub adc add out pop jl mov push mov in inc mov push mov xor sub mov loope sbbl push daa jl add fbld loopne lds xchg add xchg ss add roll roll mov mov aaa xor pop push mov or or push fcoml daa add or push sub mov cmc in inc test xor call jbe lea add daa push sub (bad) xor test push nop mov add movsl pop pusha bound loop pop pusha fsubl call cmp cmp movsl or adc test add mov jle enter add push lret cs dec cld and ret enter adc xchg gs xorb mov test fwait dec push jge repnz push sbb xchg mov cmpsb mov sub outsb addb push xor mov and out dec xchg add arpl dec inc push enter cmp cwtl or sub mov add cmp xor (bad) (bad) js pop mov aam add insb pop into imul jp xor aaa in out ljmp pushf and push jo mov nop incl sti ds rcll adc push clc or js adcb or xchg add xor insl data16 pop fistpll mov inc arpl mov loope outsl fwait inc (bad) mov xor xor dec cmp push push xchg pop call lods adc popa pop inc nop mov rorl add js lret mov arpl or test aam inc mov sub adc push add cmc dec xor jmp inc addl jns das cwtl and inc cmp push mov mov rorb push mov push ret push imul sti into inc (bad) call jns push adc in sbb cmp jo fmuls mov loopne mov xor shll scas cmp loop mov xor mov push adc movsb (bad) sub loope sbb pop adc pop leave push add add add mov movsl stc stos and pop fwait repz and adc mov dec fstps xchg sbbb scas out les sub pusha enter aas xor sbb cwtl mov pusha mov mov xorb or or ror (bad) in movsb cmp jne xor dec (bad) and mov (bad) xchg clc (bad) shlb xchg or lods mov xchg and push out test pop cmpl int xchg loopne aam sbb sub loopne enter inc in cmp adc das mov xchg aam insl and or mov xor into or loope jnp push add out es mov outsb sbb into dec add loope xchg pusha xor lahf xor pop in or sbb push ret mov loope xchg adc pop loop push xchg (bad) add (bad) das fmull outsb push pcmpgtw and fcomps jb add and pop mov adc dec cmp scas lea rorb addr16 inc sbb in mov xchg sahf test insl add loop in mov xor lods xor cs sbb mov adc inc rorb outsl sub sbb add (bad) insl imul mov xorl mov pop dec cli in pop test ret sbb jmp pop sbb lcall (bad) cmpsb and jne add mov xchg ss jecxz mov jno mov push cmc pop enter lret aam dec mov pop inc push adc cmpsb jge popa lret and mov add bound add adc dec js loopne cltd xor xchg push xor sub sbb mov dec pop push ss inc xchg test inc dec pop adc rolb dec outsb arpl add fisttp adc cmpsb sub sub lods jo jb pop xor xchg arpl cmp xchg fwait push add or push sub xor push cmp pop mov add inc and scas popa pop xor mov movsb add and jbe inc push in fwait test xor les test xor mov dec imul and inc mov int3 rclb inc add xchg (bad) inc dec cmp sbb inc mov fcmovu cmpsb scas movsl pop add cmc or push fadds imul and movsb sub cwtl adc lret mov jb cmp xor lret rcr xchg mov cmp push xchg xchg xor das (bad) es mov aad lock es cmp or insb test or arpl jae pusha xor cmc insl sbb inc or pop inc call js dec push or adc negb js dec addl icebp cmp xchg sahf and loopne mov jg or adc xor outsb adc insb and sub adc push mov lods and and loop xor cmp sbb shlb aas cmp (bad) or jle,pn cmp xor add mov test cmpsl mov cmpsl lea pop jecxz test bound cmp pop xor inc (bad) add and dec cld leave xor sub scas rorb popa cmp stc (bad) mov add fnstenv data16 dec or push js push xchg sub adc add ret mov (bad) (bad) in adc js,pn add gs mov push insb add xor cmp and push adc cmp mov mov sbb sbb add (bad) test lods test mov ror xor mov dec or aad push movsb mov push or daa lcall pop in gs or xchg icebp imul dec jecxz cmp inc xchg adc ret inc sbb cmp push mov sbb or xor (bad) or xor add sub mov mov les loope sahf xchg cltd cmpsl xchg dec sbb pusha and es sub cmp and inc add push mov push pop test push xorl out xchg dec jmp jo je (bad) sti push test push rorl push outsb xchg jno or lret and nop test adc pusha sub and dec adc scas jecxz inc jecxz js mov pusha or adc mov aam or pop mov xchg add sub rcl ret cld pop jmp mov (bad) les stos sti sub movsl js and adc pop add xchg and xor mov cwtl mov inc cmp mov popa and arpl lahf or jecxz ja dec xor dec ss lret adcb mov adc fdivrp mov pop sbb flds popa and xorl sbb mov loopne nop mov test inc out inc push cmc aad mov lods xchg sahf out inc pop mov or leave js add dec lret lahf (bad) mov dec adc dec movsbl add lahf pop xor test pop and dec movsl outsb mov orl pop jecxz push or js gs ss subl in rolb push rol cmp mov add adc push lret jae test mov push xor (bad) (bad) insb adc ret mov leave mull adc les jb mov movsb arpl inc sbb mov rorb add xchg imul rcrb insl popa cmp jge mov cmp cwtl int3 push rclb mov daa push pop cwtl push shll repnz sbb ja sbb push dec mov sbb jle or test cmpsb pop aaa shll mov sub xlat jb mov push and sbb push ret in xor xchg (bad) cmc push and inc in inc imul ss xor adc popf leave jns out xchg cmp jno adc inc push pushf movb ret aad mov icebp fisttpll cmpsb cmp xchg xor inc cmp aaa pop mov dec nop xchg pop xchg pop xchg jle inc fbstp xor add mov sub dec js les inc or inc lods mov ficom xchg cmpsl inc mov cltd out enter js mov shlb and imul lock insl pop or push gs pop insb pop mov push repz lods mov imul daa sbb add call popf push xor aaa pusha xor cwtl and gs aaa je push ret les ret or ss add xchg jp test sbb test stos orb daa mov adc dec mov icebp adc and lret cmp cmc std mov push cmp test fdivl int pop push mov and mov loope ret or add sub pushf lds inc xor xchg xchg dec and push mov jbe ret sub mov pop aam push cmp dec inc (bad) pop (bad) fld and ret pop pusha mov and push xchg stos xor enter mov xlat mov ror pop or bound je push sub jne and inc insl dec (bad) lret mov xchg (bad) push (bad) aaa xor jne jo ret mov test xor into daa mov fstpl dec mov mov mulps push test faddl adc (bad) or cmpsl (bad) mov dec sbb mov (bad) test sbb push sbb jmp or or push xor inc inc jmp adc and jb pop or mov and mov adc or push popf push inc fcomps jle aam add jge or test xor add push mov dec add sti push test loopne lahf jns inc cmp test pop or inc ret mov adc imul or inc cmpsl lahf loopne jb ret pop and xor pop add inc adc xchg mov push rorb inc loopne in inc dec add movsl adc notl jo and mov and out gs das or mov xlat fs add or xor mov out cmp fwait push outsl inc ret sbb or test mov adc xlat js ret addr16 data16 sahf mov sbb or in insl jns arpl jmp fiaddl sbb mov (bad) adc jo add dec enter push cmp insl push lods adc cwtl xchg (bad) inc or js xor lea cmpb inc pusha fisubr movsl adc sbb inc ljmp repz or or inc pusha test imull and sub jecxz scas xchg pop test mov xor ret add adc nop adc aad pusha and daa inc sbb sub xor mov lret test cmp push fimull ret inc shlb adc gs lea and sub xchg jecxz cmp cmp add xorb mov xchg jnp in stos aam or or pop and pop or bound add jae jo mov (bad) push jo fbstp mov dec repz mov xchg out js pusha mov jb cmp cmp (bad) adc pop aam jns loop cmc shll lds in pusha setl scas push js sub xchg cltd mov icebp cmc pop mov (bad) imul lock sub add mov dec roll (bad) shrl (bad) or loopne add inc jae pop test inc xor aaa pop ret push lret lods add pusha xlat dec pop sbb and fistpll add iret add cwtl cmp pop lods push mov ja rcrl xor rol arpl inc ret es xor andb ret test xchg lret mov imul sub movl rclb sub xchg pushl pusha and mov or push cmp lods jno mov push adc push stos imul and nop nop xchg icebp or lea ret (bad) pop or incb int3 jg push jecxz push dec pop xor (bad) xor mov div dec (bad) mov add pop jno jge (bad) aad and jecxz xorl mov dec push dec or push xchg test (bad) aaa pop xor fisttpll xchg dec xchg ss rorb and lds sub popa push and mov jo adc sbb rcr push rclb loope cld inc imul and mov jge in push cmp and mov pusha adc lcall xor leave mul ret dec popf xor sti xchg xchg push xor adc (bad) aaa sub mov arpl sub pop pop lahf dec xchg xor inc xchg test dec push test ret mov sarb lret loopne push and mov xchg popa movl icebp xor mov shrl jle add sub xor and and mov bound dec adc ss mov and sbb mov into sub imul cmpsb jle je aam jg jb lock sub pop lret sub or dec lret xchg cmpsb push xchg dec add test fwait dec xchg fs sub mov mov cmp xchg mov mov xor clc pop add popa add adc adc enter addb push (bad) xor mov fstps add push xchg (bad) cmp sub lods xchg test ret enter fwait iret push daa sbb ss addl and lea cwtl mov movsl bound out cmp in push and or xchg sbb pop test stos aaa rorl sub adc inc outsl pusha ss mov test xor mov add pop int3 orl sbb adc mov shll inc pop push push js (bad) das jmp (bad) push or or mov dec js add pop adc add fisttpl push adc (bad) sub out (bad) fstps sub fwait xor mov scas hlt outsl mov sbb or (bad) and inc mov push xchg add xor push testl aaa or roll mov xor cmp sub cmp or scas movl lods or mov fdivs xchg xor cmp mov (bad) add and and xchg icebp cmp rorb mov or popa dec leave adc int3 adc mov xchg movb int3 sub or sbb xchg sahf push pop mov xor sbb fidivr push adc fiaddl enter and push mov and push rorb inc push mov rolb and cmp mov cmp push or sti outsb lea cmp aad out into push mov (bad) rclw js mov sub sub sbb xchg (bad) push sbb movsb and loope (bad) lods outsl (bad) mov (bad) popa mov xchg push rol jl mov ret dec out or push jmp pop mov adc jb icebp push rcl push lods or and inc mov mov ret (bad) jmp mov rorb jecxz sub xor addl pop insl adc std es les inc faddl shrb (bad) adc nop pop xor mov xchg cli aaa ss pop push mov dec (bad) loopne inc adc std inc pop xchg movsb inc xor adc or mov stos jmp dec ds sbb fnstsw add xchg (bad) jb dec xchg jne ret pop xchg xor sub lock sbb sar adc cmp add push sbb sbb call in jecxz sub sub xor lahf adc xchg push rol add mov rcrb cmp and test sub sbbl sbb enter outsl or jo bound add xchg dec nop fs jno lods addl adc jne mov adc lret loope xchg push ljmp mov xchg enter push push fcompl ss or fwait xlat or xor popa jl pop test lahf or lret aam lahf sub jno leave leave sbb jbe imul ret push adc or mov or push mov sbb push and lods add sub lret pop into nop sbb xchg xchg movsl mov dec cmc mov mov and mov js sbbl adc inc cmp rclb add mov and and xchg mov adcb loope aaa mov ja add and or and mov adc sarb xchg lods loop pop xor pop test xor fwait inc dec xchg inc icebp add pushf add (bad) or or lock ret push inc loop xor pop or mov cmp add sub xor pop outsb cwtl or push in xor mov lret imul jecxz mov push add xchg fadd loop add xor stos mov add mov mov xor cmc xchg lock pop mov pop cltd push bound int nop push test pop lret adc arpl mov jp jecxz (bad) jno lcall punpcklbw frstor add mov inc sub xchg adc add sub lock mov jp adc pushl sbb fwait adc inc xor sbb pushf popa popf push leave mov mov into or mov mov sbb rolb enter mov xchg (bad) jmp fbld and pop (bad) fld pop sub inc flds push and mov ljmp mov movsl gs inc push jnp xchg lock stos jno aam sbb iret out inc arpl ja inc ljmp mov add sub mov xor rclb mov add addl aaa insb pop push and pop dec mov add push or int inc call pop pop pop inc mov xchg test sbb in (bad) data16 xchg sbb lods lods adc popa push xchg (bad) jne ds sub pop mov fbstp sbb adc ret loopne (bad) pop sbb test add pop adc outsl mov pop (bad) das sbb dec cmpsl sbb adc ss les adc dec xchg icebp les inc mov mov pop cmp xor cmp andl xchg mov sub cmc push aas sub pop push add fucompp sbb inc call mov xchg dec sub aam dec lret xchg cmp sahf or push fstl pop xor xor lea and and les cmp movsb cmp inc and fdivl mov jbe cmp push pop mov dec test jnp pop or aaa imul xor (bad) xorb pop sub repnz xor pop inc inc js sbb and in roll insl pop outsb jno test cmp in jbe add sbbl mov lret xor dec popf and nop xor xor inc mov push test lea jo and test dec inc lret adc andb xorb push pop add push fs add sub xor or mov mov inc xchg inc adc stos adc aas and sbb adc jnp rolb push scas xor pop enter daa mov mov pop outsb outsl in nop in daa pop xchg xor test push inc push out inc xor pop adc mov add jge les or mov ds adcb jno rol mov push push daa dec mov mov adc daa jo mov ds imul dec bound add sub and xchg cs frstor mov xchg sub ret pop or sub mov or addl mov ret mov jecxz mov adc pop mov and push pop loop enter fnsave inc jbe mov xor or push ss pop sub stos add add xor shl mov rcl ret jne aaa cmp inc pop push or inc imul xor mov mov xor mov sub aaa pop roll iret inc and das enter not aaa rolb xor or jmp (bad) bound rolb movsb pusha sahf popa cmpsb loope mov inc jecxz and xor (bad) adcl inc (bad) cmp mov dec lahf add adc cmp add cmp xchg cmpl outsl dec adc and or movsb or aad adc nop in or pop push lcall lock in push arpl fs pop xor xchg push mov xchg sub sub inc xor sbb dec push jmp mov aas cmp cmp pop les cmp (bad) lea xchg sub popa mov xor xchg rol and lret aam arpl xchg out xor xchg arpl mov adc shlb (bad) sub popa xor loop mov bound push xor or lock push in shlb mov scas jle push and lret xor push inc pop movsl xor adc rol mov pop push mov add mov call lock lea pop add fs cltd xor insb and pop or into mov or ret add adc add nop jmp mov sub jns jo mov mov sub mov cld mov (bad) mov aam xorl pop fiaddl mov icebp into jb in mov es mov pop add pop adc dec mov xchg jne hlt cmp adc push ljmp mov incl jge xchg movzbl fwait push (bad) lock or sbb test jae repnz pusha mov mov jge sbb cmp xor (bad) mov sub and pop cmc sub xchg push dec insb push push or out rcll cmp inc call adc fsubl xchg and movsl or cld add aam sbb aaa inc cltd xor fild adc cmpb (bad) adc pop mov add movsb xor xor sub lretw fidivl imul pop mov int3 movsl dec add sahf adc ret enter xor mov enter icebp or daa js sbb lret test or sub test add mov scas stos mov xchg push or adcb mov test cmpsb mov xchg mov sbb sbb popa (bad) push mov xchg push repnz inc add mov inc xor mov adc lret or inc mov and imul and mov inc lahf sub popa sbb and in push jbe popl mov sub jno mov inc ret das xchg mov xchg add inc lret lds sub add jg jae ljmp add sbb lea push dec adc push in pop inc das mov sbbb rcrb push adc mov (bad) bound sub or (bad) sbbl les insb xor xchg fcoms aas movl nop and imul movsl (bad) mov mov aam mov addl test ret loop jae adc fstl movsb jo push add adc or test test or mov sbb pusha ret pop fdivs (bad) add sbb dec pop mov mov aam xor arpl pop pop inc aam rcl and arpl xor cmpsb add test xor pop push es push mov lea pop test icebp int3 lahf cmp xlat insb sbb xchg inc xor jmp mov pop inc mov lcall out xchg outsb xchg add xlat dec inc mov adc test int aam sbb outsl sub test addl insb add jmp jmp ret sahf dec mov jecxz mov push gs pushf pushf mov sub inc js mov dec (bad) dec xchg (bad) xor inc pop pop sbb popf inc cmp push mov add adc test cmp pop add fs lods outsl mov or xor jno mov cmp rcrb mov cmp icebp pop adc add adc nop mov gs pop pop in popa and mov fistp mov repz mov aam outsl cwtl xor (bad) pusha mov pop mov test mov mov or aad push xor loope inc sub pop mov pop lods sub test xor adc push adc cmp jecxz or call sub mov ss pop fcmovnb inc xor sbb dec movsl xor call cmp aam inc test xor je in in jecxz (bad) xor pop ficompl ja cmc add xor sarl push sub xchg outsb dec movsl xor (bad) daa pop inc mov adc sbb mov cld arpl and cmp inc int negb aaa std mov and lret sub or out push add dec and pop adc jp movsl push (bad) test pop aam imul and cs xchg pop push fwait jae pushf into push ss les jmp adc out bound add sarl out and xor addl rcl loope and fcmovnbe push cmp xor ss xor fisub mov or inc xor outsl jl push das inc mov mov push or rclb ficom xor pop gs in mov xchg ret xor movsb mov xlat and lret dec in movsl mov sbb or inc jb rolb movsb xor push and addr16 push pushaw inc xchg pop lock push mov adc das push jae and dec xchg add pop test and jmp or pop test mov xchg sub add fs xor insb xor test inc clc mov popf mov push jp push cmp les (bad) icebp je cmp fist daa add das add leave fldt push adcb je sbb in std ret (bad) lret adc cmp xlat cmp shlb test and sbb inc ret mov sbb call fisttp mov insb inc mov adc sbb lock in xor mov addr16 jb inc lret adc enter xchg inc and dec mov dec mov sub or popf or mov inc add jns nop xor or pop movsl inc jecxz adc and fs or add mov lods xor xchg xor and and xchg sti test xor pop and mov test ss pushf pop or push inc fsubrl and pop inc into ret and (bad) dec mov mov and and mov out add mov bound sub (bad) rcll sub xor sbb xorb sub and mov leave ret (bad) aaa mov imul dec fdivrl dec xchg mov dec add shl inc fldenv fisub push test dec outsl insb test stc mov mov push enter push mov sub mov adc movb (bad) mov test jo pop dec adc rorb jno lea mov lock cmp lods (bad) jne hlt sub fcomps loopne sbb push nop cmp jno loope and gs jg dec pop inc stos pop cmp popa (bad) test test cs daa (bad) shrl pop mov ret aaa pop test and mov or ret pop pop outsb adc (bad) ss sub int3 pusha xor hlt pop dec pop inc push sub (bad) push (bad) fdivs lea xchg and add adc adc push push mov dec test add adc jb jno sub popa and add mov cwtl mov push jecxz xor or sbbl dec jg les xor xor lods and shlb daa (bad) xchg fadd aam outsl sub nop shrb adc xor cmpl add lods xor fdivs and xor aaa add (bad) adc lret int3 aaa inc add (bad) cmc aas push cltd movsb add pusha jb push adc and jmp or or inc push push sub or iret cmp xchg and push lret add adc jne push cwtl inc and cmp cs add and cs in mov xor insl leave sub mov loopne stos xchg add (bad) fbstp push adc sbb xor rclb pop inc (bad) out js mov test icebp pop push add insl lret sbb mov nop lret inc movsb fisttpll imul and sub ret je xchg sbb push mulb and nop into out orl and push lcall xor std aam ret and bound aam sti xchg or and rorw cmpsb lds inc lods jns test xchg adc pop shlb rorl xor xchg (bad) arpl bound push mov xchg push xor add decb adc inc sub dec pop mov sub adc inc dec popl sbb mov mov and or inc jmp jecxz mov push pop mov push xor test dec mov sub add and dec xchg popa addl shl lea mov loopne inc movsb jno xor sbb mov and add (bad) mov jo test jbe inc dec push and push testb or rcrl jge imul sbb mov into sarb pushf jo loopne or push xor into or call adc push (bad) inc inc inc sub or fstp inc jmp test loop shrb pop mov mov sbb (bad) out ret jno dec stc push push fadds mov jbe jo into inc fiadd popa cmp push sbb sub or add or jnp pop rcrl xchg dec xchg mov mov lret sbb enter mov enter inc xchg int3 dec cltd data16 mov or inc mov jno mov and test ss dec and adc mov cmp sahf imul cmpsl shlb add sub push sub addl lret cmpb lock daa pop dec dec popf and test inc enter inc inc jno and inc pop push out je mov push lea adc and jl stos xor test jl cwtl add xor sub xchg add stos aaa push and rcll mov scas test dec pop add pop data16 adc xor inc push test shll push es sbb outsl es sub lods popa (bad) jge adc mov (bad) leave xor imul sub into inc xor insb or pushf sub mov (bad) popf insl test sbb and mov loope imul add mov push sti and push or test mov jl push lcall add and inc mov or sbb imul add xor fs dec leave pop mov xor and or rcr sbb lret rcrb mov sub in cmp and xor stos pop bound cmpsl xlat mov mov xor outsb mov sub lods cmp orb pop (bad) pop dec popf test movsb add jns les (bad) mov ja xor test ss add lea mov cmp and xchg push push jo jge mov push push ret inc xor pop pop jg adc or xor or mov dec xchg mov dec xor mov xor pusha in int3 or pop adc dec add add cmp dec enter sbb xchg add call aas sahf aaa push ljmp mov lret fs imul insl pop (bad) push sub mov pushf dec ret push cmp sub aaa sbb or mov dec mov sub xchg push or inc imul jmp fist inc pop (bad) mov insl orb and mov mov lds test push push (bad) shl out mov mov or (bad) xor jns cltd arpl loopne cld pop inc ss pop das lds sbbl xor ret mov xor and adc shll vpinsrw adc cmp cli add das insb arpl xchg xor fsubrl inc or int loop or outsl push popf ja ror push xchg pushf jl push ljmp movsl pop dec arpl xchg subb scas sub test or inc sub inc movsl inc adc pop or cmc pop adc or dec sbb xor aad dec cmp xchg popa push xorl ss dec push or add add xchg arpl addl xor cmp sahf inc leave mov pop aam mov inc jo cld fistpl lods xchg mov add sahf and jno dec pop xor xor inc mov lods dec mov pusha ret shrb xor fildl xor xor mov jae int3 push aad xor call mov xchg and mov clc add aam xor push cwtl scas mov mov (bad) dec daa loopne sbb bound loope hlt xor andl into imul dec pop data16 call (bad) xor sub dec sub lret dec into push mov leave loope (bad) xchg (bad) adc shrl pusha setg or xor xor and inc jmp xor jb push shlb (bad) outsb inc xchg (bad) xchg inc inc mov cmp punpckldq mov adc pop pop push and (bad) mov ret push cmpsl mov outsb and and cld xchg xchg test (bad) jg xor rorb mov imul xor push push (bad) jmp mov pop aaa bound mov adc pop test pop jae jne ds scas xor push xchg insb dec loop push hlt push dec movsl inc sub (bad) sti cmp sbb xchg xchg push ss jecxz test imul mov mov cs enter pop or loop loope inc ljmp mov lods and sbb loopne rcll lcall subb pop aaa es adc fwait shr add pop rcl inc cmp in (bad) je loop xor mov and lods adc mov cwtl dec cmp mov xchg add pop dec icebp fiaddl push verr add imul ret add xchg sbb xchg arpl or or (bad) and jp mov lret mov push dec pop das mov sbb push xchg jno inc (bad) mov xor imul push into rclb enter test adc adc xor dec std mov xor nop/reserved ret bound add add pop or addl test jbe dec ljmp aad sbb add flds add sbb (bad) xchg ss xchg inc mov fidivl xor mov add and mov (bad) and dec push mov sbb pop fnstenv xchg sub cmpsb push lock add rorb dec sub and int inc lcall mov push pusha jmp jmp xor andl test out adc mov mov aam cli add stos xor movsl jmp mov or (bad) arpl push jb add syscall sbb bound jae adc pop and add loope std xchg dec xor xor or aaa mov jae jecxz xor test mov mov int3 push xchg sbb adc push movl mov mov cmpl lods sbb loope pop push cmp add xor rolb ret je mov (bad) cmp cmpsl mov xor push mov andl pop rol in ja add mov dec jmp popf lea sub xor push (bad) rorb mov pop (bad) dec jl or pop dec fs addl inc inc add sbb add sbb loope dec inc (bad) leave sbb xor mov push inc xor or push or test push sbb test adc mov add out mov lret sub nop jno inc dec lods lds rcrl sub pop insb pop pop sub sub sbb test mov insl adcl cwtl in call and out mov dec je hlt pop aaa or outsl sbb scas call add mov jbe and add and sahf mov jo imul loope push sbb push cmp and dec movups mov sbb inc jno push mov cmpsl dec mov sub sbb stc ret inc mov pop test mov fiadd pop or movsl xchg xchg dec mov std imul mov or cmp or lods xchg mov add xor add (bad) mov dec jo mov sbb pop mov mov test xchg rorb add push xchg inc sbb cs dec pop into nop int scas adcb xor lods (bad) sub movsb mov and cmpb add adc loopne sbb mov cld fbstp jecxz or iret sbb in inc mov sbb dec dec jbe lods addl test push xor sahf xor cmp popa add adc xor push (bad) rcrb jle push add (bad) mov dec pop push cmpsb orl enter iret xor xor xorb push sbb lods adcb xchg stos sub arpl dec sbb fimul insl jecxz outsb movb jo dec arpl and xchg in lock pushf sti cli (bad) jo or adc mov pop push lcall add loopne sub pop ret decl xor xorl add ss add arpl jle pop sbb mov mov addr16 and dec sbb (bad) jb sarb ss push js push mov add xchg sbb sbb add aam jge mov out jnp or xor push and xor adc mov inc or dec ret or cli mov movb ret add add xchg jno and mov xchg mov insl test pop aam mov inc pop sub mov xchg rorb lods xor jo inc pop pop cmpsl rorb push in mov sbb loopne dec ret adc loope imul xor leave pop out add out orb xor xchg xchg sub mov insl roll and lret mov imul add popf and es test lods or add mov pop dec mov xor lods push gs mov mov xchg push add pusha or cltd sahf xchg inc fsts cmp imul mov xor mov arpl xchg push dec dec jp stos int cmp pop mov pop into add call lahf dec xchg mov adc pop inc push setp adcb xor les and adc (bad) mov aad jno pusha popa test jne adc in sbb mov xchg mov mov add loop and or ret jle jne or push dec xor mov maskmovq testl in imul sbbb mov lock imul inc test adc adc push jnp sub jecxz icebp or mov jne add push xchg pop add add mov xor lcall or xor leave xor roll and xchg sbb imul pop xor xor sub les imul xor sub aam sbb or sarl fdivrl cmp jp sub mov jbe int3 pop dec xlat dec xchg fadds call pusha popa push jmp cmp ficom mov jb shlb and or add pop and andl pop les (bad) cmp (bad) inc push dec dec pop pop mov lret ret ja adc roll dec push add addr16 mov (bad) push xor pop or cmp xlat and leave push adc mov in xchg xorb iret imul add nop lods adc jnp xchg or ret add dec out cmp les mov adc pop sbb and cmpsl mov test sbb xchg lods push xchg leave xor dec adc add pop adc cwtl nop loope mov xchg pop je pop cmp jne xor addb add fstp pop xchg ficompl push xor pusha inc and movsb sub mov sub fs scas mov inc xlat add push stos mov test adc (bad) icebp sti cmovp inc pushf sub aam adc scas xchg scas rcrl stos xchg xchg push inc dec enter movb or sbb mov enter and xor xchg lea xor les ss pushf mov inc pop test sbb adc mov adc lret test repnz (bad) adc (bad) test pop shlb enter js jns or push test fisttp or jmp adc fistpl aaa in mov mov lds ljmp pushf cmpsb mov andl inc cmp xor rcrl mov out fnstenv nop mov scas cmp pusha add lcall adc sub mov addl mov xor fwait inc rcrl icebp dec add add pusha mov (bad) or push mov (bad) js sbb ss sub add pop sub or push inc lret popa sub sub iret and insb lea (bad) iret or mov test mov (bad) pop mov push outsb push out sti dec dec mov xor xchg sub jmp fstl pop ffree push push sub add sub pop clc stc lea mov jecxz xor bound ja or or xchg add imul mov or outsb arpl cmp adc pop addr16 fimull mov stc mov push cmp mov sbb mov push cmc adc loop add inc sub xchg mov and leave push out sbb les xchg pop add add pusha (bad) sbb movsb mov push mov popa cmpsb movsl dec sbb lea xor mov and ret nop inc dec bound adc mov add daa test push test cmp loopne add xchg movsl test insb rolb fstps xlat jo mov add loop dec or sbb inc call pusha leave jno repnz pop mov movsl arpl dec ss dec insl test push jp pusha les push pusha add add ret enter dec pop adc jnp test mov (bad) adc mov fcoms and or arpl popa insb and (bad) pop add mov inc mov (bad) inc imul std xchg add pop cmp lds fcomps inc adc (bad) xchg xorb shlb pusha addr16 adc loopne adc dec adc push mov push push sbb pop inc and push and inc cmp dec xchg and loope aam push dec add sub mov iret lock hlt out shrl mov shrb ret cltd xchg mov test je mov pushf or pop enter dec sub fnstcw lret roll xchg xor popa imul xor push (bad) adc adcl andb test std cld xchg sahf xchg cmp sbb or ret pop pop mov pop sub xchg inc sub and mov fldl push jp xor mov inc xor jns mov loope pop xchg mov lcall aaa pop ret popa add jb sub pusha inc (bad) jp bound rolb pusha dec out mov mov add ds fistl cmp nop and js pusha test pop test out push mov js lds aad mov inc ret mov icebp push jecxz add jbe adc ficoml or cmp aad push xchg jno sarl sbb push sbb xchg in sbb or loopne out xor dec pop cmp lea pusha xchg outsl cmp sbb or or fistp daa cmp imul aaa pop lcall sbb mov xchg mov xchg sub sbb arpl jmp rorl push (bad) inc mov jp dec add push push jno dec mov jne stc adc nop gs xchg inc sub mov dec mov sahf sbbb data16 mov dec (bad) or pop push or adc push roll inc jbe push adc xor test mov mov mov dec add adc test cmp xchg int shlb dec ljmp loope add inc bound pop pusha insb sub cmc bnd xor gs and pop add xor aaa fwait mov clc add adc pop mov push mov in pop gs (bad) add ss cmp jl inc pop xchg lods cmpsl mov xor adc pop xor (bad) sub push dec (bad) rcrb xor mov stos ret jo add jno inc or mov arpl popf pusha xchg xchg (bad) and adc pop test insb push cmp mov jo jge xchg adc inc add cmc mov and sub cmp call fbld mov xchg rolb lods cmp mov adc rclb mov sbb inc xor add jo mov xor stos test and push pushw bnd push aaa lods and fwait in push out mov cmp jp and pusha decl sub xchg std sahf mov lds dec fwait int3 sbb push jmp cs dec imul push test fsub adc test mov aam or jne and mov or ret iret loope mov dec arpl cmc sub adc adc adc add sub leave adc xor and cmp dec sahf adcl (bad) xchg adc insb mov in add pop insl and fistpl lods ret dec inc pusha daa sarb lret insl inc dec rcr ds ret movb cmp push clc ficom inc movsl or rcrl rcrb mov scas dec pusha mov out jbe adc cmp arpl or sbb stos push xor push sti test inc loope xor insb lods subb inc imul xchg sbb call dec xor mov enter xor out mov or pop fwait sbb in iret nop in lods sub or or arpl mov shlb mov mov add sbb loop lea gs push sub pop adc adc sbb js jne mov or dec inc or xchg imul nop xorl push in mov add xchg xchg sbb push dec cmpsl or das add cmp dec adc dec pop inc insb or lods pop sbbb xor mov mov push inc mov arpl ret rolb addr16 xor pop mov je push mov repnz dec lods loopne sub cmc fnsave adc or ds je adcl lret push addb or sbb xchg adc les dec sub sub int3 jge fimull test mov pop leave xchg jbe ret push popa popa adc pop pop add (bad) inc fidiv testb pop or lahf inc pop adc jbe lods add xchg addb nop mov or lds lods inc cmp adc adcl push xchg jo sbb dec mov pop xchg mov xor push xchg loope dec sub or pop jg je jo fist ficomp dec inc call push mov pop xchg fnstcw std cmpsl xor clc mov imul cli and je into mov pop andb push or mov popa pop mov inc push cmpsb loope imul lahf pop mov lcall pop jge dec mov xor mov cmp insl xor jb mov loope sahf in add test adc and adc push mov and les push insb push push (bad) xor pusha dec jo sbb rolb sbb in xchg mov cmp pop dec sbb add pop js cmp and sub (bad) pop sbb push xor inc insl dec mov push in adc dec sub and adc xchg dec (bad) mov stos or into lods pop pushf mov push jnp dec nop ljmp scas inc sub jl les sbb popa push adc adc jnp sub dec das add mov xchg jnp test pop or lods add (bad) adc test and test test xor lds mov add nop push dec lahf xor out je pop jns les fs dec pop (bad) loop cmp xchg xor pushf add inc imul or outsb lret hlt xor lea outsb sbb xor inc rolb sub cmp and (bad) lahf rcrb and xor inc add sbb mov adc inc or xchg mov cs pand mov popf sub add mov or dec push xchg ret jb dec pushf mov inc lret arpl mov and movsl pop pop imul movsl inc jne mov lock and sbb or outsb mov or mov sub ljmp in mov and pushf pusha loopne (bad) mov or push inc inc xchg sbb (bad) push loopne dec and sub pushl outsb push in aam iret cmc dec jno arpl fstps sar and loopne (bad) push jmp fs cmpsl dec dec arpl pop movsb jmp std xlat xchg pusha push js cmc (bad) roll lea mov push inc js and pop cmpsl pop (bad) adc xchg sbb mov push inc sub dec int movsb inc (bad) cmp sbb daa dec mov outsl pop ss aaa xor and test push mov call fwait and adc cmovbe xchg pusha addl sub or scas lret add cmpsl cmp inc gs xor add mov stos adc rol pop add cmp adc push sbb cld push or test lcall xchg aam mov adc mov roll mov inc cwtl mov ret imull mov ficompl fsubrs (bad) push mov cmc cwtl scas xor ss fdivs leave stos fs lock cmp inc xchg out sub dec lea jo push xchg inc (bad) (bad) pop mov dec sbb lods xchg test add or jnp mov adc sbb cmpsl mov (bad) pop inc lea mov cmp es xor ret or sbb out and mov mov sbb pop (bad) faddp add cmp pop lahf daa push cmp mov xchg adc js (bad) xchg dec fstl test imul lock cmp add pop jge xchg or lcall inc outsb adc xor js in pop movsb dec or push scas insl sbb fistl jle adc and insl arpl add add sbb mov cltd adc ss sbb fcomps ss push fist mov dec stc adc sahf (bad) les fnstenv bound push sbb jae xorb and adc dec lret adc jne ret sbb aaa sbb in frstor adc cltd aam arpl sub push jmp cmp cmp mov jns ja push lret (bad) push (bad) dec pop xor movsbl daa add and add fistl push or sbb jp dec adc mov cltd adc cmpsl leave nop sub xchg into js mov jl cmp movsb lea addr16 jecxz mov adc sub or xlat fldenv in jo fldcw jne rclb mov lret je (bad) or add mov inc xchg into cmp leave inc sbbb in pop adc (bad) sbbb mov dec cltd mov in add and xor mov and lret push addl sbb popa mov or mov mov cmp lea add push sub push ficom and es mov (bad) fimull add jmp cmp push aam xor imul js pop mov xchg xor test fistpl sahf and inc inc lock mov xor mov cmp imul mov and pop pop stos pop xor ret test cmp xor invd mov xchg popf aaa inc bound and and pop inc movsb cmp shlb sbb and inc dec pop pop adc lock jmp dec pavgb sub adc mov xor jmp push xchg or call sahf imul test push lret test cwtl or dec aad mov cmp popa enter push sub dec subl shrb or mov mov adc add mov mov bound lods jl cwtl test or mov sbb lret jbe sbbb lret mov inc and and mov inc and sbb add inc pop mov mov inc add add lret pop inc out das mov adc push adc mov xor xor (bad) adc or and mov add mov fistp imul mov sbb mov test inc dec push pop mov or lods xor and icebp hlt bt mov mov cmp and xchg or pop daa cmc sub test clc and and xchg push xchg fldl inc cld mov mov mov lea push xchg sbb mov or icebp cmp mov add or sbb add sub lret adc in gs dec xchg xor mov je inc cmp aam inc (bad) dec pop gs popf movsl sbb lods insl add pop or notb xchg and xchg dec xchg xorl addb sub push ss sub test ret adc rclb push hlt (bad) pop into mov jb and pop test push xchg push (bad) push ljmp ret jns inc jnp mov cmpsl hlt inc lret sbb subb sub and (bad) mov popl movsb lret or xor add (bad) sbb shlb pop test and adcb sub insb pop popf push xor lea fnsave les dec and push lret mov (bad) sbb jns push mov or lock xchg add cmp test js aaa xor daa lds outsb icebp adcl incb adc (bad) cmpsl pop mov push divl movb js push mov movsb hlt dec lret or or shrb mov cs mov stc fwait loop or jb xor and dec sbb inc cmovbe bound imul daa cmp shrb and dec pop inc sahf push stos or add push jl (bad) xor xor pop push ret mov outsl test add inc nop inc push or mov xor test (bad) lea or scas xchg int3 out or mov shrb ss ficom xchg mov mov jg out (bad) outsl std ss mov dec test movsl mov ret or cmp mov daa jp add push mov lahf out xor xor dec sub lock ret push cmp test jo inc test cmpsl daa adcb in fcmovnbe mov shrl cmpsl test sbb popa aam inc xchg push movb (bad) outsl xor (bad) pop test (bad) jae insb fs adc xchg jp pop pushf xor jb (bad) mov jmp push rolb mov adc adc sub push mov sbb sbb dec add roll cmp sbbb aaa pop cmpsb in dec xor pop es xchg ror or and add fwait jl add push das cltd or or xchg stc cmp sbb dec add movsb or push xor imul jmp sub imul int and add add sbb cs sbb sub inc xor sub xchg and icebp or xor push lret rclb jno popa pop xchg sarb mov hlt imul loop movsl sub jp js enter call or ds pop push popa and pop inc pop jmp add push cmp sarb jo xchg outsb dec insb pop (bad) pop fiaddl dec sbb mov push xor xchg cmpsb cmp aaa xchg icebp or add adc lock sbb movsb or jo sbb adc or mov mov mov dec loopne aam orl lea stos lods addr16 in cmp and pop xchg adc movsl insb inc or sbb and loop jmp dec jo xor ficom lea and (bad) mov dec cmp sub bound movsl inc add insl loope push cmp enter lea outsl cmp test inc movsl sub test daa scas hlt push or jl imul (bad) xchg jo test pop jo adc call cmpsb sbb cmp aad inc loopne movb adc inc sbb xchg sub rol sub xchg and divl (bad) jmp lret fs ret push gs adc mov movsb inc mov sub insb sub sbb push xchg rcrb dec das mov add xchg xor into mov add dec aas xchg pop mov test dec pop outsl enter mov fwait xor pop dec or adc leave out leave inc divl fnsave rorl pop mov fwait sub enter mov and push outsl inc test fcoml imul adc add lock and sub sub test in aaa pop add adc mov xchg add ret push xchg insl mov int3 dec enter inc fstl adc jbe xchg repnz lret mov imul mov sub jg xor inc test mov cmp dec cmp outsl nop mov jb push xchg xor or dec inc xrelease ss sub aad addb add sub xchg jne push sbb movsl mov sbb daa dec rorb lods outsl mov ss xchg mov add cmp sbb mov std jno xor xor push xchg or xor push jbe (bad) xchg xchg rcrb sbb push or mov imul pop mov fwait inc xor dec rcl adc mov or cmp cmp (bad) pop jno xchg xchg lea xchg cmp popa and jge pop pop ret loope adc sarl adc xchg pop adc rcrb test insb fs add push add jno testl jbe cmp sbb lea add dec sbb pop lock or xchg xlat adc xchg test clc shlb fildll test sub add je sbbl inc arpl sub and loop cmp adc xchg push xor test (bad) loope mov push inc dec inc leave and movsb pop sbb mov movsb imul xchg pusha lock jg cmp sbb lret mov movsl jns inc mov das loopne (bad) and rol scas mov xor jge mov les pusha (bad) or xor inc cmp mov lahf popf inc mulb sbb pop lods push imul xor je stc mov sbb xor xchg mov leave dec adc or xchg (bad) call push ror dec out push pop xchg adc and nop mov xor xor sbb lahf nop jge inc pop movsb inc or into fisttp ret daa push rorb mov add push push cmp es loop movsb adc sbb jg cmc add ds xchg or outsl loope sub push xchg inc inc cmp mov cmp pop mov mov jo imul push add or (bad) fcoml (bad) xor js test or add xor push repnz in push sbb adc jo xchg shlb outsb cmp aaa fs xor cmp pop icebp pusha or add pop or sub and dec mov xorb sub mov sbb sbb push jo bound fcoms or sbb xor add inc lods add sbb adc test add cmp popf loope sbbb lock adc icebp jg nop sub daa adc push mov sub ret or and in sbb les ds sub addr16 shlb es and sahf mov pop mov mov orb add or mov addl (bad) xchg movsl xor adc mov daa dec mov push test push call dec pop mov pop ret sub inc mov dec push pop sti and cmp sbb cmpsl and aam or call dec push add xchg (bad) push sar xor je shll adc test sbb jno sbb ljmp pusha imul and or add paddq cmp push xchg dec adc ljmp mov je sub (bad) add pop (bad) hlt sbb add cmp sub cmc jae subl adc fild movsl xchg push lea jp inc jno imul mov and (bad) jb mov xchg shl xorb push rol adc cmpsb and mov sbb nop sub push pop pop addr16 pusha insb aaa mov and sub sarl int3 or push movsl subb cwtl aaa and in adc out loop dec mov or add push dec ret xor stos jno cld add sbb or inc pushf jno mov push inc push pusha push mov and sub bound pop or pop lock mov punpckhdq dec rcl data16 xor add or push push pop outsl loope add pop sub push inc cmp xchg lea lods xchg mov and enter adc mov test sub rcrb xor sub mov lcall xor xor push cs cmp flds xchg cli out and adc add dec bound enter or adcb jp mov sub movsb dec dec xchg xor xor rclb and xchg adc fs test xor adc imul sbb sahf sub sbb sub and pusha add lea insl jl (bad) cmp or std mov adc push (bad) js cmpsb loopne mov sbb add cmp js stos and (bad) mov das call sub mov fs jne daa or jb cmp push add dec into pop push ret lret mov add rcl test or inc mov dec pop out sbb add das inc jp mov popa xor test loopew xchg pushf adc in jecxz adc xchg and xchg call fistl sub add mov aas and or xabort xor test (bad) popa fstl add in fild xchg xchg sahf xchg (bad) test fcomps (bad) mov inc push out push mov cmpsl inc cmp adc rcrl mov dec xor fisub or and cwtl and or sub or jecxz (bad) iret jmp jbe add nop push and fs insb loopne loopne rol ret nop mov push push or imul sbb loope adc addr16 push (bad) pop xor xor sbb adc ret cmpsb ss pop add push (bad) cmp sub mov rorb xor xchg pop or and int mov adc aas lock cmp outsl lret pop push mov inc add or (bad) mov dec dec jns adc and or leave cwtl daa int3 (bad) or sbb test cmp mov inc addb mov mov cmp xchg mov jne aam pop fistpl mov mov adc dec xchg jns rclb dec adc sbb stos aam lret sub xor loope push dec aas fidivl and add mov gs lds insl fwait andl mov mov cs (bad) sub add mov movsb test gs inc sbb xchg int3 inc jnp mov push sbb test aad adc xor and sbb xchg addl sarb shll xor addr16 xchg (bad) sar imulb (bad) sbb sub pop shl push mov cmp das mov gs mov xchg adc jbe adc sub sbb push sbb bound pop cmp pop dec test adc dec xchg iret pusha sub sbb xchg mov jb and cmp test sti rep loope ret mov push sbb cmp or aam ror add movsb ja sbb sahf enter movb jnp (bad) cwtl jp push loopne imul enter and orl jmp push push ret xor aaa inc or adc imul fcomps cmp mov or mov aad (bad) push mov insl in and and and mov sarb cmpsb xor fsubrl mov or push out out and jmp (bad) lock push adc add xor mov sbb xchg adc and jne sbb inc repz jecxz jne sbbl (bad) and push nop sub pop ret or pop ljmp test pop sbb xchg popf (bad) rcr or test and call lods cmp lds mov xor or mov jge mov and adc test pop mov jecxz outsl and std push and or xchg add stos xlat or xchg add and mov push inc jecxz mov hlt mov pop pop mov lahf sub xchg lret addl ud1 cmp rcrb shrl add aaa dec sub clc pusha mov add xchg cmp and subb cmp inc lock cmp loopne xor mov push cmp mov add sarb mov push test adc je and or xchg pop push xchg adc xchg fldl xor inc inc xchg or fdivl inc lods xor sub inc pop ret dec into push test add insl fimull xor push adc sbb pop sub sbb push std sub pop xchg push in in xor add pop sbb fisubrl push stos add jmp adc cmp xchg gs ret ds push (bad) xchg pusha xchg pop outsl pusha imul sub imul xchg mov xor sub aam adc adc js pop xchg xor (bad) mov movsl cmpsl lods inc popa inc ss inc pop enter add sarl add scas or lods cmpsl cmp test sbbl push mov ja xor outsb push lds lahf push mov cmpsb mov xchg xor push xor or mov ja lods add ret les sar mov xor adc cmp icebp in ret dec and mov mov xchg test imul arpl and stos sub stos ret sbb dec pop or xchg xchg and xor mov mov mov fbstp hlt aad xchg in add adc pop or loope test push and in loope rcrb pop dec out lcall dec push dec xchg inc mov sbb leave fidivrl cmp adc pop je nop push movsl pusha jae inc add mov jb mov mov push sub xchg pop stc push mov push push sbb lret jp adc add jle aam imul cmp je or enter mov test sbb push sub xor out xor adc xchg data16 push in sti xor mov lock push mov push lret adc sub jno or es sub shrb sbb xchg push push mov ror fwait xchg mov dec push shll loop mov cmp fidiv mov jo sbb jo sub xor or xchg mov cmc sbb jmp or mov xor cwtl cmp insb dec inc and sbb imul inc ja push inc cmp or xor and pop xchg daa sub xor (bad) dec cmp popf sbb imul jmp sub cmp fmull pop add sbb xchg inc jns andb nop ljmpw pop lock int3 mov dec xchg sub enter xor nop adc mov aam mov stos inc pusha xor cmpsl (bad) in test test inc dec add xor rorb inc (bad) sbb lock test nop mov inc sub sub xchg and inc and je icebp xchg sahf test enter mov (bad) xacquire mov add adc loopne popf dec imul fsubl push ret pop inc imul xor xor or dec lods lds push push xchg loopne jmp adc cltd adc mov dec call inc or mov push sub sub push push dec sbb rorl popf rorb icebp test int xor loop repnz test popf inc rol js lea push popa jmp fstl cmpsb xor dec xor or mov dec ljmp lret mov adc cmp sub mov imul sbb push add sar pop xchg xor imul hlt xor rol push push frstor movsl movsl outsb adc mov popf pop inc add stos cmc sbb fistpl push adc add xor sbb mov push or int3 mov push xor (bad) xor dec mov add dec inc and lods mov cmpsl push (bad) int aam repnz (bad) fs inc adc imul cmpsl and iret in add dec int push push and lcall not xor test jp imul xchg dec jmp add or (bad) add jne fs and roll outsb or gs xor xchg cmc aas xor into xor xchg mov sahf add les mov rdpmc movl cwtl mov cmp lods adc add rorl push or inc sbb sub pop push adc pusha mov aaa rcl mov or xchg pop add loop pop inc test cwtl shrb aad cmp ds pop sbb ss rolb imull popf fistp sbb and pusha push and push stos into xchg mov test push loopne xor rolb pop xlat pusha push xchg or outsb popa adc pop mov or movsb add dec aas call inc dec cmpsl mov and fildll sub divl jnp sbb mov in mov lea sbb inc xor push sbb pop push outsl and and pop int jmp push cmp roll dec (bad) lret lea xchg rorl clc sub cmp leave pop aam rolb inc or xor stos and push inc or repz mov mov xchg and into test sub mov test test or xchg fisttpll adc loopne xchg lods cwtl es cs cmpsb xor pop out mov adc bound cmp out adc movsb adc and bound test (bad) lock cld pop daa cwtl dec xchg sub and cmp sbb add add adc dec test sub cld lahf xchg and mov xor dec xchg adc imul jbe xor add mov mov mov sbb and outsl lret push arpl mov sub inc test sbb icebp add cmp mov add iret mov in jp xrelease enter or les inc rcll imul mov popf aad xchg addl sub movsb aaa push orl and leave test xor stos add inc popa sub cltd aam dec mov pop xor imul out popa or and sbb adc jecxz cmp sbb int3 andl dec sbb adc cmp xchg scas mov ret jle adc add dec inc and jns xchg push push xorb xor pushf mov sub dec in inc jmp fild mov dec xchg inc or mov addr16 sahf and mov add xchg lahf subl inc pop or pop mov push mov sub push pusha jne mov arpl and mov jp jb scas pusha (bad) fcoml iret adc xor push mov rorl and mov pop popa jo adc daa pop mov cmp or mov inc adc popf jp add sub pop out lds push repnz pop leave fwait ret adcl cs mov lret call push je test cmp test xor dec ret xor loope mov xchg jo jo mov bound int3 dec push jb dec ljmp pop adc sub enter adc cmpsl stos test push or mov inc cmp cld in test in repnz mov xchg push jp fsubrl test and or xchg dec fdivs (bad) cmpsl jmp dec fwait popf popf fs ss pushf adc inc lret rclb sbb xchg imul add jl,pt les mov (bad) inc or jb int3 in addl cmc jmp es loop cmp xor ret sbb cltd pop push sbb pop jmp sbb movsb inc repz movsb xchg add inc or mov sub lret inc xor aas scas inc lods xchg sub push mov pop and jns repnz rcrl xchg test add jp leave or add or or push and add fldt add mov jno cmp mov ljmp aad jl adc js push jae push sub push data16 ss push and pop sbb mov imul ss mov inc xor daa lret and adc lcall mov mov dec and outsl pusha je cmp (bad) jo jle roll xchg or in scas (bad) mov push lcall ss add loope push (bad) jb leave cmp shrb mov lock xor and and dec mov mov imul in lods rorb adc xor imul adc or pop loopne sub ficoml or cmp sub aad pusha mov je sub (bad) mov or mov inc xchg arpl cltd ret sbb xorl cs xchg sbb pop shlb xorb xor or imulb testl ss and fist or xor addl cmp xchg dec add xchg dec xchg ss pop (bad) fwait sub sub add pop push jmp scas add popf and xor add test enter xor sub lahf lcall popf lret xchg ds imul sub add or cmp mov cmc jns (bad) and imul arpl add mov xorl gs popa mov mov addl loope pop or hlt (bad) sbb icebp shrb xor movsl fcomip icebp inc adc or out popa dec cmp dec sub cmp jno pop loopne dec sub push sbb or adc fbstp in add xor add mov push (bad) orl push push push and push or sub inc imul adc cmp pushf mov jmp (bad) hlt fmuls cmp fimull andb adc pop add mov or inc xor mov add and fnstcw rcrb arpl in imul lcall (bad) mov pusha fsts (bad) inc lret shlb lods sub sbb or xchg sbb inc lret sbb cmp pop jno dec push fs cmp adc repnz shlb lahf jae sub sarl push in nop mov mov js xor mov rcr sbb pushf push inc and xor loope pop pop ficoml lcall jb pop push pop inc into daa or cwtl xor nop cmp jmp and or add in or pop mov sub rcll repz push and xchg daa icebp xchg mov clc pop xchg cmp inc adc movsl add test or add xor sub or popa push pop lods xor or mov mov push pusha mov inc lock add loopne fstps daa fs and dec cmp jmp jbe dec push stos xchg xor or or cltd fwait push aam lods imul sub inc mov xchg les push or cmp lea dec leave xchg or and inc nop push lods (bad) jmp cmp push add xchg xchg inc pusha les popa jecxz inc fistp enter jmp icebp dec fldenv adc push popfw lock inc es dec cmpsl or xchg dec pushf xchg push and je bound std xor or xchg icebp inc lods xor sbb inc dec test gs add mov stos pop shrb sbb xor insb push mov inc neg adc dec and iret and push adc add or adc xchg out sub pop cs and jmp push sbb pop or mov pop lea dec movsl and insb test add ljmp scas iret stos rolb inc push or fstl xor mov test xor ret dec cmp addl les push push in or add movsb sbb je and cmpsl xor mov push jge mov loopne inc ss subl and sbb dec out mov scas test xor js mov mov (bad) push jns push dec loope test lods mov or push in mov mov xchg aaa adc mov dec addr16 rol icebp xor jl les popa dec movsl xorl adc sub push mov cmp xor divl insb adc test inc pop ja mov adc lods jno (bad) adc xlat fisub dec daa mov xchg fs fldcw adc sub lret add xchg pop sub xchg sub mov dec add cmp jns mov inc push add enter adc cmp les push and bound ret arpl mov es je cmc stc ljmp xor xchg cli mov fbstp inc dec adc mov sbb jo adcl dec xchg bound adc js or push jb aam adc lahf jo xor in adc or mov push or mov adc add or inc test jnp push fnstsw mov shlb or rcrb or dec and mov (bad) (bad) xchg lock sub cmp clc inc adc sbb imul jl jae addr16 bound daa or scas xor sub mov and mov je inc push cmpsl xor xor sub inc gs push insl (bad) xor sbb or imul xor inc adc xchg add fwait test sub add xchg mov and ret lret mov (bad) lock in and inc rolb imul outsl mov jl jb sbb mov pop pop sbb dec jmp push cmp arpl je test in jno or push addl cmp movsb sub movsl inc pop shlb fdivp movsl dec jge movsb mov pusha leave pop addr16 sbb mov xchg inc cmp sbb and ss and ficompl and (bad) inc pop mov cmp and fdivs cmp mov test cmp aaa push xchg and and add or loopne test sbb xchg push loopne push or inc cmp xor sub lods enter arpl and gs add mov mov adc pop adc xchg lods jae jecxz sbb dec sti push gs das or xchg loopne cmc and imul shrb cmp not dec cld mov jno push movsb adc dec dec mov push and das lret mov sbb rol call xor mov inc (bad) lds rcl adcl std inc daa sbb and fucompp xor ss pop xor in outsb aad pop test movsl outsl test sbb pop loope sub pop sub dec mov mov mov jb rolb pop ljmp pop mov pop add js imul inc push cmp cmpsl pop fild popa mov inc pop repz jg cmp lds ret sub push mov mov add das cwtl dec cmp jno cwtl js mov mov loop inc leave push shl inc push xchg inc push sahf or ret addr16 push mov sub mov xor leave mov adc jp mov inc adc push addr16 lret mov mov push (bad) lock xor inc jo inc ret or xor dec imul (bad) shlb (bad) into xor int xchg pushf sub movsb add rcll fldl pop pop imul sub xchg ret and sub cmpsb andl push mov pop xor loop or inc pop es jne adc jne push data16 int3 jg push shlb ds inc imul icebp add mov leave fcompl dec daa outsl mov sbb js call pop (bad) roll sub in jnp and xor mov xorb jl mov xor nop rolb movsl or (bad) inc shrb or aad add or xchg and push or lret adc cs inc test pusha jo xor jmp fdivs mov int sub mov add or sub or xor in mov stos adc jnp movsb (bad) jmp andb cmpsl test test (bad) mov or addb adc xchg xor aaa jg iret sbb add pop push cmp enter lret pop test jns sub xchg loope and xor mov insl or outsl loope push leave ret pop add jno loop jb jp outsl movsl and push in icebp inc mov and dec dec xor pop fldenv (bad) xor xor adc adc and push idivl stos dec (bad) lock lea mov addr16 jo xchg mov xchg rorb inc add dec pop test xchg rorl add cmp dec mov sub fs push test adc imul mov add inc mov jbe pop sbb pusha and adc add cmp dec inc mov or and cmp shl add add je pusha push sbb ret test inc test cmp fs popf xor pop nop cmp push xor inc dec sarl jmp (bad) cltd ret in add subb lds cmp or jne xor sbb aas pop pusha and and xorb inc xchg push cltd sbb xchg cmp pusha mov push dec lss adc xor add outsl cmp bound in ret mov xor xor int mov int3 adc add test pop (bad) adcl data16 dec jge mov (bad) mov adc lods popa and scas mov sbbb scas mov hlt sarb cmpb ss and adc xchg cmp sbb push rolb daa sub xor push adc test lret xor jnp inc rorb fsub ret and bound pop (bad) aam inc scas cmpsb xor adc pop cmp mov pop adc rorb arpl test mov push fs xchg mov xor test xchg add arpl stos sub cmp (bad) test roll jp mov or repz and jbe test mov sub and xchg arpl das add pop loop call test and or cmpsb popa adc dec push hlt arpl sbb movsl andb xchg loop fbstp push dec popf test and push mov or and pop cltd je fimul add mov xchg xchg into (bad) jb loop aas xlat xchg std cmp fs cmp sub and flds sbb fstpt ss push fwait jecxz ret add xchg mov scas (bad) fisubrl push dec push push push and mov lds xlat pop cmp leave (bad) (bad) xor inc pop dec sbb rorl dec mov mov popf jge loopne pushf and or aaa subl mov icebp add es mov leave lds sahf rcl sbb mov loope es push int jne ja mov ret xchg fdivl daa cmp daa or pop addb rolb xor adc or bound insl loope pop fist fiadd sbb lods and cmp sub or sarl in mov xor ficomp andl (bad) and dec (bad) lock cmp insl mov sub and push lret xchg cmp or mul enter shlb aaa xchg (bad) cmp fiaddl ljmp nop mov lahf scas sbb xchg mov adc (bad) dec push adcl popa inc push add xchg mov and add or jae mov jge mov and sbb pop xor jno sub cmpl daa adc or adcl cmp jns sbb mov inc popa sub rorl xor cmpsb es mov sub mov sub xor enter arpl and cmp rcrb call stos mov sahf test fdivs push push add les ljmp loope inc fs xor inc cmpsl and xor shrl pop stc add or repz inc pop mov push test add inc mov test inc mov and ss or xchg xchg dec mov mov xor pushf das mov hlt addb add xor jne jo jno jmp in jmp push in lcall add xor inc pop and xchg (bad) ja cmp push rcl add pusha add xor jmp xchg into rclb and adc movsl xorl pop enter inc jle pop addr16 mov pop pop and (bad) pop xchg jge or push xor lds mov adc mov xchg test xor loopne or mov dec les pop cmp add mov xor enter jmp movsb add gs dec jecxz sub iret je test sbb dec xor xor test jno sub (bad) aad imul (bad) lcall xchg loopne sarl and xchg (bad) cmp in imul add js mov inc jp and test xor cmpsb jne sti jmp loope sub ret pop cli sbb data16 adc pop (bad) push mov fidivl inc dec (bad) xor adc cmp (bad) or inc fidivl es mov insl push sbb sbb lea dec push pusha imul ret xchg arpl add xor sbb add add mov push fbstp jp xchg or mov mov (bad) mov movsl fnsave cmp cwtl add xchg fnstcw jne popa mov push loop push pop add aas xchg add xor (bad) sbbb in push punpckhwd mov aad pusha add fadds movb insl sbb fs jge loope nop sub pop roll push and adc rolb or dec jl sub mov bound dec cmp ficom inc imul pusha jmp adc lods sahf dec nop and adc je sbb mov imul (bad) inc popa xor popa inc push (bad) in pop dec movsb fs xchg insb aam add inc inc aad pop add jnp xchg gs mov pusha xchg jge pop sub sub cmp and adc xchg gs sbb add orl mov dec popa outsb add fs xor push rol xor arpl inc push cmp jg adc add add insb lods lret jbe mov insb xchg and dec add out xor int jo add sarb sbb test xor adc add or adc or and mov xchg jmp mov mov cld cmp inc or xor cwtl out push fadds adc nop test ret es xchg and xchg xor xchg adc (bad) rcrb xchg dec or xchg push lods ret cs or insb xchg xchg dec sahf push xchg mov add shlb dec or pop fidivrl sbb xor fwait push adc loopne or cmp sbb inc or subl xor pushf sub jae loopne pop push ret pop jne sub sti push inc sbbl jb xorl fstp add push add cmp adc addr16 cwtl and or pop and nop mov push dec lahf push pushf mov pop cmpsb push and or xchg mov pop mov dec push and mov pop aaa mull mov mov cmp cs inc dec add mov addb push ds inc ljmp mov inc outsb inc add rcrl add (bad) rclb ds mov and arpl push inc es pop cmp pop xchg rorl and insl pop inc cmp (bad) adc fisubrl mov inc xchg or lods arpl repz or add test or jg outsl add mov mov sbb sbb inc add pop inc ret push nop pop xchg stc outsl ja test pusha jmp cmp pusha pop mov pop inc sub pop dec dec data16 push imul jnp mov jns mov mov xchg xchg sbb mov (bad) iret cmpsb pop andl add push sahf mov pusha or mov int dec or (bad) mov bound int cmp jo (bad) std out inc mov lcall and inc rolb inc std in jnp test je inc xor dec sarl push jae xchg sbb inc mov adc insl fbstp rep rol or aas addl gs out or pushf clc xor dec icebp add ds and or imul or xchg lock or sbb jb xchg ja in pop add fucomp mov mov adc (bad) mov push icebp push cld push adc xchg xchg imul jmp jns xchg and mov xor lods push notl ss ds mov pop bound xchg ds pusha mov push and fisubl adc sub pusha dec jns xor cmp hlt movsb push push sbb popa sub jno rclb out test call dec mov mov subb rol movsl xchg and mov add (bad) push xchg push cltd ja lds gs and movsb ret fildll mov out mov cmp std sub (bad) xchg sbb push ret mov push xchg dec aad lods inc inc pop in ret mov mov mov lahf lahf xor and iret adc inc xlat test rcrl dec lret ja adc sub xor mov out xchg push rcl fs rclb pop pushf movsl cmp divl adc jae lret dec and cmpl add inc xchg sbb fs sub andb inc lods fisubr (bad) mov fldt adc push add dec test xorb bound in inc jl ret add in add sub add mov push movsb sub addr16 or aad dec js sub lods or mov push out dec rol adc xor es inc mov fs jae xchg xorl jge push pusha arpl or aaa lahf inc sbb inc movsl shlb xor sbb scas rclb fsubrl arpl adc imul cmp adc inc mov nop lahf mov jno nop es imull push jge loope (bad) aaa cltd cwtl or outsl add lret (bad) push loope es adc hlt mov sbb movsb cmp pusha int sub and pop lret pop mov fsubp inc sbb fdivrs cmp cmp dec imul xchg or popf xor aaa jns inc push bound movsb adc adc push mov inc addl or add jge and and pop mov push repnz push or dec mov inc sbb push and lcall lds dec lds daa loope adc lcall and and ret push fisttpl adc (bad) test mov shrl loop (bad) out push dec or (bad) xor cmp mov scas into pop cmp fcomi and mov enter dec sbb test mov cmp sub cmp test (bad) mov outsb cmp insb lods adc push add popa add or clc (bad) lock sub xchg (bad) sub js test jno fcoms popa sub add dec je loopne adc inc lods dec mov leave fsubr shll test add int cmpl adc pop dec add xor adc cmp out or and adc lds imul popa inc sub mov jne lret pusha insb mov or xor popa pusha cmp adc inc xchg dec xor les add ja aam dec call dec mov jb frstor rorl enter out adc and test add and fimul inc xchg inc fnop out ss inc sbb adc sbb das cmp es lods insb xor scas xor jp sarl mov cmpsb es hlt push pop adc js (bad) adc mov mov insb ficom mov mov cmpsb mov add mov gs and int3 mov aam xor xchg fidivl aad sub mov call lock ljmp xor adcl sbb adc add iret pop mov aaa dec jns stc loope jo push stc movsl xchg push cmp call mov outsb lret cwtl adc push mov pushf test push sbb adc imul repnz andps xchg popf movsl movsb addb xor push (bad) cmp add scas adc lock into xor sbb leave leave fwait out jne pop lods test cmp push add xor testl call rorb sub mov roll imul adc adc adc les push or movsb repz aad xor xor aam add fdivrp mov lret inc mov lods (bad) rorb push ret inc inc jo mov and roll in jno icebp cmp mov mov nop sbb mov lods and dec adc inc rolb sub pushf pop aam jns jp cmp push xchg sbb push (bad) mov sub push sbb in ret mov lods sub adc adcb nop pop ljmp mov inc xchg lods cmpsl xchg fsubl or inc xor scas and je push inc pop out imul jo into test pop and inc pop jg rolb xchg pop rclb xchg inc sbb pop fs add inc cmpsl jnp shll pop sha256rnds2 outsb lods mov sbb xchg push push push inc or xor add xchg rcrl xchg push nop cmp sbb repnz pop fisubl popa fdivrs in xor sbb adc int3 sbb mov (bad) pop loopne fdivr insb push or push mov (bad) aaa add xchg sub outsb or or mov pop and ret lods or mov inc xor xor cmp orl lret aam add mov adc test (bad) xor fild jg sbb cmpsl pusha cmp mov inc cli je inc iret inc aas shl loopne js pushf es dec jmp sbb test inc popa or leave daa ret mov jge and aam fwait rorb sub mov adc sbb jns cmp lods fcmovu xor add ljmp cmp xlat xor rol push fmul (bad) and cmp shlb adc and test mov xchg jmp mov sub rol fnstsw add pop fmul scas (bad) rclb movsl loop jge rorl (bad) sarl leave sbb pop testb test xchg and dec xchg or jl dec dec mov (bad) addr16 mov scas xchg (bad) outsb and mov fnstenv jecxz pop jmp cmp ret xor xchg sub cmp mov sub jo jbe lea mov negl sbb push rolb adc gs push mov bound jl and push inc rorl ror rclb xchg cmp push mov jmp imul xchg dec shl decb lods sub xchg dec pop iret lret sbb cmp loopne inc imul add cmpsl xor pop mov jg xchg or xorb pop add jno or lret insb xchg push adc inc xlat insb adc es in daa fisttpl cmp fs movsl push dec add add mov mov cmpsb sbb mov sbb pop outsb pop (bad) call cmp push jp aaa jne add xor mov jno sbb fdivs (bad) rcr and cmp xchg xchg addl sub test movsb popa dec icebp outsb pop add imul imulb (bad) xchg movsb adc mov outsl in movsl jno (bad) in and or xchg pop or out orb xor jb xchg lods sbb inc dec clc add popa adc test cmp add sbb insl aas (bad) mov pop (bad) jo rcrl inc cmp mov xor sub mov add inc add lret pop adc and (bad) sbb (bad) push jno add lea jnp dec or in jp xor imul shll push mov sti lds or cmp lret iret dec pusha pop and stos or mov cmp sub loopne jb adc pop into lcall push push xchg clc popa imul xchg xor imul and mov add sub insl rclb mov adc sub lods outsb fnstcw mov dec scas mov push adc inc push mov xor icebp xchg push mov orb mov aad ret (bad) xor cmp mov cmp or enter or (bad) push mov pusha pop add dec push add (bad) and (bad) xor divl pop xor ss fwait imulb test push test xor and xchg call addr16 cmc sbb psadbw adc popf add lods add movsl ljmp sbb add movsl and mov xchg jmp inc pop lret or pushf in (bad) movb pusha cltd rorl xor int das sbb cmpsb xchg movsl imul dec aam or push add push mov arpl mov in add pop mov xchg cmp mov push cmp cmp pop inc nop aad xchg mov push xchg rcrl and pop push xor sub push (bad) shrl dec xchg dec jae jecxz js dec cwtl xor rolb ret or or sbb add fwait lcall in push and lods xor sub mov pusha xor and cmp xor loope icebp adc icebp inc inc ljmp cmp dec mov and adc xor addl adc inc (bad) or add cmp jge xor ss pusha mov mov in call sub lock jbe dec xchg enter or imul orl mov push or stos add mov pusha add mov jge or movsl sub jg push add out cmp inc xchg cmpsl sbb push mov cmp or pop pop adc adc ret xor xchg test xchg test dec add mov mov inc push out jae test pusha mov sbb outsl roll xchg lods lds sub std (bad) xchg lods and insl nop xor enter and jl aaa jg les sbb xchg dec les les sti dec lods push fimul out push sbb mov or dec jmp (bad) addl adc ret or in mov adc aam cmc or add mov xor add mov shrb push mov movhps in push jo adc ss xchg ror pop dec push dec mov out jmp adc xchg (bad) (bad) ljmp loop lds icebp pop ficom mov or sub jmp xor xor mov shlb push nop (bad) shll and (bad) xchg and mov loop loope addr16 hlt test adc clc std pop addr16 pop cmp sbb nop test aaa mov sub push ds out jnp add xlat dec lret ret ret xor (bad) sahf sub or mov jae dec ret out test sbb mov and pop pop and inc mov shlb mov ss rolb dec icebp dec xchg aaa js or jns cs xor add insb scas mov mov sbb sub sub mov xor add sbb addl cmp or pushf (bad) ret ficomp adc mov int3 sub rclb test and fs sbb pop xor adc dec sub adc loop mov les gs mov and adc xor mov xor jmp test mov mov push mov ret inc sbb enter sbb icebp (bad) divl adc popa das int3 push adcb inc push sub fsubs pop sub fdivrl loopne gs ret in dec jmp imul and and fwait add lret pop dec js jno stc and sbb outsl jecxz adc popf test xchg movsb inc sarb pop mov ret add dec xchg call ret enter test lahf and add gs leave push ja test xor sbb outsb or add sub mov leave cmp aas mov xchg jo fisubl mov xchg lods and fsubs xchg adc je iret andb xor xor in test cmp mov inc loope mov dec mov or imul sbb sbb sbb bound es test mov sub push hlt mov mov imul inc stos mov push or (bad) ss (bad) xor jnp loop cmpsb jne mov xor call ja fild or test jp lods add or imul lcall mov pushf das or mov test imul mov cltd xor stos cmp addb aaa add fimull cmp mov push test dec ret cmp stos ret push lock add sub add xchg ret cmp shlb insl adc (bad) xor mov lods cmp inc sbb dec dec xchg and test lods imul (bad) mov inc or jmp inc lods jg xchg mov aam aam adc inc add test ror fsubrl fnsave add rolb inc xorl sbb ret popa test mov inc jp ret add jge js sarb sub sub push sbb mov sbb test (bad) or sbb add aaa xchg pusha inc sub test aam dec ljmp sbbb push pop out dec mov repnz add xchg and mov mov inc xchg in outsb pushf pop rcl lea push mov daa arpl push shll dec and mov and adc sub orl and adc in push cmp and data16 add (bad) pushf fs adc popa xor add xchg popa jae cmp leave (bad) push mov inc mov int3 mov out loop ret push lahf std or push or mov imul mov mov inc pop dec orb sbb cltd xor loope lods aam and xor sbb gs push inc add incb mov cmp test sahf push dec fldl dec inc pop je mov jge (bad) or pop adc add adc imul loopne lcall outsl arpl loope push push dec add mov lods mov mov mov xlat incl int3 sub mov dec and xor sub inc fs jne int3 sub dec xor popa inc cmp jl mov icebp xor adc add jle inc push inc lods fbld or out ret cmpsb mov xor lea fcmovnbe adc imul fdivl inc out xchg insl inc movsl mov and stos xor push push inc daa daa outsl mov (bad) fwait pusha adc add dec xor jmp xchg pop and cmp xorl fldenv adc push and orl push aad loope mov xor pop or roll addb sbb xor and xor inc shlb icebp inc inc mov jecxz repz xor add xchg mov dec rclb add push cltd (bad) or sarb sub ret dec xorb sbb xchg sub xor mov js addr16 and mov and cmp push arpl (bad) lods mov rol jns add inc adc data16 sbb lret dec add pop pop les in mov adc aaa test in xor push add add xchg jmp (bad) xor movsl add mov sbb sbb cmpsl add loope test pop push (bad) aam movsb dec dec add ret mov sub xor dec pop (bad) xor (bad) dec test mov scas or mov and xchg dec dec insb mov daa and stos cmp push push xor inc fldenv mov or mov dec addr16 mov movsb mov push scas add lds xor mov mov popa movsl outsb rorb xchg stos shrb jno pusha inc cmp pop aas dec jmp (bad) mov int3 out cmp or test push xchg lock in dec aam (bad) xor stos and xchg movsl cmp adc addl add adc pop xchg movsl lret sahf out jno les xchg jge sbb in xchg push ret push out les xchg das dec (bad) or movsb adc insb dec xchg (bad) loop test xor xor xchg xor pushf cwtl int arpl mov push inc rep (bad) xchg insl jns icebp and lods cmpsl cs xor lcall lret popa sbb clc leave sahf add sub ret jg orl inc mov adc imul push ror pusha or cli rorb pop adc cltd ret or bound lods fadd and xor sbb dec leave sbb pusha mov mov sbb cli mov dec mov test loope repnz mov arpl inc dec movsb xchg mov add mov je ljmp into pop xor xchg push aaa xchg (bad) dec mov punpcklwd add ss mov xchg insl cmp lcall add adcl ror inc aad mov das adc fadds pop enter mov fistp push pop in rcrl test sub xor add pop je xchg adc es sub or fildl adc cli xchg andl mov cmp xor sub mov or jno xchg xor mov mov push fwait ret rcll lret jo push adc xchg test stos push mov pop cmp popa and lods sub sub push pop or (bad) mov push sub push or into xchg xor std xor inc mov (bad) je mov arpl rcrb mov add mov adc repnz ljmp adc test int addr16 or and mov loopne lret inc and pop and mov cmp inc cmp jo sahf cmpsl stos rclb lret popl adc nop test cmp addl and sub mov pop rclb (bad) mov repnz shll je iret adc cwtl movsl jmp mov sub in aad adc sbb rep scas push aas pop cwtl (bad) push cmpsl lea mov gs mov sbb lock pop fdivs (bad) and xor outsl rcrb mov fisttpl and dec push aaa enter popf shrb popa mov lods flds loope add (bad) sbb cmp pop sub and (bad) xor in push pop or xchg jbe sbb mov outsb mov iret jns insb pusha je icebp add cmp xor popa add cwtl test dec outsl sbb pop test test aad lret mov cmp dec and dec or fs xchg loope fildll pusha popa insb sub jp add and movsl lods test sbb and inc popa mov dec cltd outsb xchg mov shl jne mov outsb lock addb cli dec (bad) xchg mov xchg jns mov imull popf and pop adc movsb mov test cmpsl aaa push pop and lret leave les pushf xor les inc cmp loop xchg dec xchg xor add inc push lahf push lret inc call add fwait arpl pop or dec mov mov cmp and jbe cmp sahf cs mov pop arpl add imul dec dec push sub sub int3 fimull and rcr lds leave adc xor push add cld iret or leave cmp push sbb movsl sbb pop cmpsb pop inc lret fist cmp (bad) icebp lods pop sub add add inc add daa adc flds adc nop pop sub add lods xor ret jae jno cmp fiadd pop pop aam cltd fimull jo aaa push (bad) popa sbb (bad) lock fidivl enter cli jnp (bad) add xor mov movsb add movsb add lods jns rol xor add sbb mov push push lds inc movsb cwtl dec xchg int3 adcl arpl rorb dec jo ret xchg or fs daa xchg dec repz or (bad) leave cmp rcrb add les arpl cmp add roll xor xlat or lret outsb dec imul adc loopne adc mov add adc aam mov and cltd cmp cmpsb add cmp push repz fidivl or popa loop mov rcl aaa pop cmp push pop ret scas cmp daa dec andl push stos sub cmpl gs ss mov or pushl imul test dec outsl test mov pop out arpl (bad) push hlt mov add int3 dec push or push mov movsl clc cmc xchg mov pop test clc rclb push aaa test push aam and stos inc mov mov cltd xor xor pop sub adc mov pop pushf imul sahf jnp test mov xor add sbb lret stos or mov or mov jp pop push sbb sti cmp mov mov xchg loopne jle adc sub arpl inc inc adc push mov xorb popa lahf xor arpl and test enterw fwait imul inc call (bad) mov sub mov std (bad) addr16 xchg add adc rcrb mov int xchg jbe or leave outsl sub lods pusha andl jle mov cmp add scas nop rclb inc mov xchg xor pusha pushf mov dec mov inc dec sbbb sub xor pusha iret xor inc nop dec sbb dec lea mov add in mov (bad) fs (bad) int3 xchg mov xor sbb xor sub les lock cmpsl xchg jb push sub les cmp movsb xor pop add imul arpl add stc imul or pmovmskb add aad add dec pop arpl insb outsb test je jmp mov dec (bad) xor xor ret aas inc lea add pop dec (bad) in clc xor xor add loope (bad) aaa cmp (bad) cmp inc adc mov add loope pop call bound add push mov add cmp add sub popf data16 xor sbb push clc les (bad) shrb adc add mov fild adc scas mov xorb xchg push add leave and ror mov sbb mov lock mulb je and dec pop std cmp inc (bad) jb (bad) xor pop fstl inc jns mov and xchg in push dec pop mov out cmp sbb lods mov shrb mov fldcw add sbb pop dec sub dec mov sbb jno adc sub mov lods fs add or push xchg sub adc hlt lahf xchg push (bad) inc cmp or xor insl test pop xchg cli xchg push leave es pop ss test mov add mov lahf push dec pop (bad) adc or push and repnz mov jnp push scas test ror ds inc mov hlt lods fldl cs cmp mov test imul xchg xor imul jns dec sub mov xchg push cs fnsave sbb xchg (bad) push stos inc and or mov sub call mov into mov xor mov and or mov shr pop inc jl js orl xchg jg cltd mov or mov sub in out jmp test and pop or test mov arpl leave push ret mov test (bad) cld add pushl inc aaa inc push rclb lds fimull push mov mov (bad) or dec xor adc adc jl sub mov lds outsl imul mov test adc mov (bad) cmp adc adc leave adc inc loope sub mov loope xor xor cmp add pop adc lock push dec dec mov jns add xchg xor int3 push sub xchg or dec imul dec mov mov pop cltd cmp add and adc pusha popa jl repnz add jo cmp rorb in test imul pop add jb scas outsl adc inc adc mov push cmc and jp inc add xchg xor lods addl xchg popf sbb sub jbe dec imul mov aam or ret insl aas lods dec or push and push add lock adc xchg lods or sub add add loop fnop dec push (bad) shll ret mov push das cmp ss popa jnp loop (bad) icebp cmp or ds inc (bad) ret or cli inc dec xor arpl jae lods pop and mov mov cmp or cwtl insb out fwait andb jl mov inc xchg push inc lahf mov sub out daa mov adc lods mov dec leave ret adc aad aaa adcl push scas dec out movb mov xchg dec mov push mov insl mov sbb aaa (bad) loop test sub (bad) popa or xchg jmp fwait pop pop and or rol loopne jbe inc dec inc adc inc movsl add fs rclb xor cltd xor mov or loopne cli les inc pop cmpsb inc or or (bad) inc sub outsl aas dec inc add ljmp xchg pop aam xor xchg and out cmp or dec dec and add jo les mov (bad) mov xchg orl neg sub jno clc movsl daa cmp test fsub or call sub fidivl or adc sbb or ljmp pusha sbb cmpsl mov xor xor adc or add add (bad) pop mov pop add adc inc pushf xchg cmp rolb or movsb mov imul sub sub sti jns xchg and cmc push inc lcall and gs aad mull fwait pop scas (bad) mov jno adcl mov adc pop pop mov jae loopne (bad) repz sub add inc push mov lret and cmp arpl xor dec mov jns mov sbb add sbb loop arpl pop or jne mov sbb lahf jbe mov push (bad) loop aas inc dec rolb inc loopne or nop outsb (bad) dec (bad) jl (bad) loopne fwait addl add jmp or or shrb jns sbb cmp cmp or add cmp adc push and je jae or mov (bad) mov xchg loopne movsl inc xlat push sub dec sahf xor or add push adc pushf (bad) (bad) sbb add fbstp jne mov or nop xchg adc dec sub dec cltd or xchg les or (bad) shrb pop xor or add (bad) mov add mov push sahf out xor (bad) sub cmp xor mov or pushf jne xchg xor dec xchg mov les test cmp pop repz test sbb arpl iret popa mov adc add call sbb push add push std mov mov add into stos jnp js test pop xchg in adcl dec add or cmp fdivp inc in and mov adc mov or or sub mov xor push test out and test and notl sbb and (bad) inc daa xchg nop popf test cmpsl fs jb push fcmovnu outsb addl les repnz fiaddl mov add push loopne push dec es fbld pop or adc mov mov mov and movsb push and ret inc aaa ljmp mov jnp jl pop rclb outsb lcall mov and mov ret test inc cmpsl pop mov mov shlb xor inc inc adc inc adc add andb outsl and cmp pop mov push test xsaveopt rcll lods in adc fwait and mov adc push add add sbb mov xchg cwtl xchg pop add mov sub dec xorb cld mov sub or les lret int roll sahf add repnz fisttpll fisttpl imul and push addb inc ror ror push inc sbb fucomp sub dec or jecxz addr16 ds jb push push orl in lods push mov adc jmp nop cs addl pandn insb pusha xor insb gs push lods sub add push sub jo xchg outsl sub dec mov mov add pop imul mov push add and or add sbb aaa lcall cltd inc sub es adc sub lds fldt mov ds sbb lahf mov or xchg das cwtl pop icebp push fwait nop xor cmp adc sub mov push sub aaa jl in inc mov push and push fcmovbe cmp mov xlat cmpsb push or add sub or js or rcrl addl mov gs and nop push ret sbb cmp les std and test cmp xchg gs loop sar dec and mov cmpsl xor mov push or (bad) sub gs or xchg adc test cmp pop pop movsb xlat orl arpl test adc in pop mov lea push add add mov movb inc lret jmp sub jge ret scas aaa sub xor or das pop adc xchg (bad) pop ret lods adc cmp pop (bad) ror js sub add adc aaa inc sub mov js popa (bad) adc movsl mov cmp add das adc insl sbb pop cmc add xor sbb and and xchg lds push xchg loopne rcll test cld mov add pop push xor and push push lods mov xor add xor aam popa test (bad) js lret push faddl cmp sahf sbb jg enter xor mov lret pop xchg dec loopne fcomps loopne xchg add add push or jp xor xchg push pop inc xchg push dec movsl aam xor dec mov sahf flds dec sbb xchg mov sar sub inc and scas push add adc push sub push cmpsl xchg mov sbb or in add and test cmc jbe push dec add or xor daa lahf aam mov xchg test lea add ss repnz lods sbb and into ret sbb in fwait xor pop popa fstps imul adc add inc orb (bad) mov and mov and lock mov pusha cwtl sub xchg mov jp and push and and ds and or adc fsubs test mov xchg jo adc adc test jb mov mov inc imul xchg jno sub push add ljmp sbb leave popa cmp push lea mov push inc sub int3 lahf jbe arpl (bad) insl (bad) (bad) pop mov mov dec arpl cmp scas (bad) cmp sub lret mov mov jmp pop adc rcrl test add adc inc cmp add cmpsl inc push test push lret ret setp loope inc fstps cmp bound adc push lret clc cmpsb hlt jae mov sub shll and xchg mov daa dec dec or (bad) adc sbb (bad) xor movsb sbb jle or sbb loope or adc mov push dec mov clc jmp mov adc xor mov or out cs sbb dec jno sub sub adc mov mov pushf mov adc inc xor cmpsl jo sbb xor add or push sbb mov xchg test xor fildl dec dec notl nop lcall into (bad) dec pop imul cmp sbb ss dec inc add cmp inc jo or xor sbb adc xorl rcr add ss sub pop adc addl inc lods inc fstps xchg popa sbb pop push and sbb xchg jmp inc fs mov push xor push add ss inc mov cs mull ja adc ss or or ds or in cmp push loopne and pop push pop movsb xor or mov inc ja arpl xor sub scas popa xlat mov inc ss dec or outsb jge ret mov xchg in mov add sbb cmp add inc cmp into xlat ret jne add inc cmp xor jg push ret pop dec pusha sbb (bad) mov adc adc cmp lea lods into fdivrp int scas dec xor adc shlb aaa jecxz cmpsl lods aas push xchg cmp (bad) mov mov ss lods add cs nop xor mov push cmp mov scas aaa lods cs lock arpl stos inc mov sub movsl mov add cmpsl arpl sbb lea dec cltd adc sbb ficomp add shlb jecxz sti jne add mov test mov cmp mov or (bad) adc test pop sbb sub cmp test jmp sub cmp (bad) mov push adc (bad) cmpl loope enter adc dec loope pushf mov cmp test (bad) xor ljmp test movsb adc add dec stos popa mov addb xor pop add movaps jle test add insl das pop cmp cmpsb push pop xor and movsl and lcall pop push adc push jge rolb mov adc adc sbb sahf inc mov out or lods lods and sbb sbb cmp imul inc fwait pop push sub imul mov sub lock fwait mov push inc sbb repz cmp pop adc xor stos test pop dec addr16 and cmp dec inc (bad) fdivl movnti (bad) xor cmp ja mov js inc scas push std insl xlat cmp or and leave xor outsl movsb cmp xor xor add cmp ret out call sub jmp sbb lahf loopne xor xchg mov mov or or mov dec fucomp (bad) sub test xor stc add add ret mov mov inc push dec fnsave mov addl cmp (bad) mov inc cmpl push mov jnp or sarl adcl push xchg pop mov push xchg test sahf sub or or popa imul xor inc and xchg rclb and xchg shrl insb lret mov test (bad) or fcoml mov test or sbb inc jge dec movsb push nop add fnsave pushf add mov dec pop movsb xor inc mov sub or lret push dec mov (bad) fstps lea and inc insb or in repz pop jmp xchg pusha cmp adc stc and flds xchg xchg mov das pop fbstp je xchg adc and sub inc js xor or add xchg in or mov loopne mov or add ja popa aam xor add push xchg and add pusha aam sub sbb sbb leave lahf mov adc adc push imul xchg cs jmp push mov or int cmc (bad) mov sbb and rolb outsl push inc popa adc sbb stos jmp xorl or add inc add ret sbb and es xor loop (bad) xchg mov lret jecxz sub add and adc in popa sbb cmp in mov pop hlt test inc and pop mov push jg (bad) hlt push adc add jo lahf nop add mov pop xor cmp mov sbb movsl and inc inc cmpsl sbb dec mov icebp mov cmp push sub inc xor push add jnp sub test arpl adc and and into mov sahf sub je push adc imul cmp push xchg push stc and fisubr rclb sbb es adcl insb dec js add sbb imul adc hlt or inc push mov ss rclb and ss inc movsl or cli jne mov cmp cmp punpckhbw (bad) iret out and mov loop fstpt sub jp popa imul lret insb or leave outsb imul cwtl mov or rorl sub hlt push imul aam popf xor dec add and je fistpl adc test ror rcl ret lret xchg xor pop movsl fidivrl hlt push aaa (bad) jmp fldenv add add and fdivrl xchg inc push or je ret push out push popa adc xchg add imul add jmp (bad) push push hlt (bad) mov jae inc cmp call xor add fisub push mov xchg sbb adc push and cmp ds imul sub push inc xchg pop add mov cmp (bad) or std inc inc and imul mov call jne mov test nop pop mov insb or stc or jo add jmp add and xchg push insb adc mov imul aaa nop cmpsl in pop jg aam mov pop sub addr16 xor inc js mov add or push arpl mov mov dec (bad) jecxz jmp loop push pop add int3 mov cmp and push push les mov cmp and and cmp inc mulps pop cld aam or add mov lret and popa mov mov pop pop sbb rcrb dec ret push push aad inc dec push scas xor (bad) dec loope pusha hlt dec pop loopne inc add xchg imul hlt aam rolb pop ss mov and shlb das adc pop mov popl sub mov pop test add subb sub push xor lods leave pop inc pop or mov daa arpl je pop es dec stc rolb mov (bad) or add cmp jno cmp lods xor bound or pop pop getsec sub mov test and push and xor and fisttp inc adc xchg mov pusha dec inc loop and or or sub pop js mov or or mov and cmp push sub mov adcb cmp pop (bad) add xor (bad) test adc cmp push dec sbb jns pop xchg and inc out dec orl xchg sub inc xor pop cmc rcrb xor cmp stos mov add adc add pop sub sub mov (bad) or movsb add pop inc test sub cmp push sbb test addr16 mov push ret shrl or out xor imul cmc jne leave cmp jo adc insb xor fnsave cmp xchg and xchg pop cld pop lods lods and addr16 in push ret adcl insb add sbb and rcll inc add ds jns cmp xor enter mov insl (bad) lock mov out or inc add sarb lahf iret rcrb js in push leave dec mov into out test push add iret xor enter sbb inc jl hlt test inc mov and xchg hlt jg sbb add push nop and xor scas bound ret lock pop and nop das jne add xchg push add nop divl sub or (bad) add xchg xchg xchg in adc popa push jo imul jne fild mov push sbb dec cmp sbb xor xchg movsl cvttps2pi push adc lds xor adc (bad) es and lods pop add xchg scas pop (bad) movsb sbb imull rclb imul pop inc popa xor in insl jbe (bad) aad xor add push xor push push call (bad) mov addb mov popf xor add cmp mov and sub int lods and or sub xor or and and mov inc xchg add bound enter pusha test test cltd add inc aaa sbb data16 inc adc add add mov xor cmp xchg sub dec es dec pop fadds mov mov xor loope xchg imul scas add fs (bad) cmp dec aad push ds pop inc inc lcall adc dec sbb cmp xchg lods shlb popa popa cmp pop push inc pop mov sub pushf movsl adc roll xchg add (bad) sahf pop fsubl dec push add and inc push (bad) push ss imul mov and add lds (bad) stos mov mov pop xchg and fnstenv add daa arpl addr16 (bad) add and sahf fs pop cmp sarb or sbb pusha pop shrb cmp (bad) xchg xor out pop sti jl popf adc ficom test sbb loop mov mov and mov movsl xchg or push scas fsubp aaa pop xchg cmpsl add ret addl inc dec add inc and pop sub sahf mov das xorl cmp (bad) xchg out es pop gs and notb cmp xchg bound stos sub jmp aam (bad) mov adc mov stos fistpl and xchg mov push inc test sub mov sub fsubs xorb insb gs in imul and dec mov aas aaa xor add dec or dec cmpsl loop movsb dec mov xchg mov inc push lods cltd je dec iret lds subb into add lret cmp cli lods xlat stos xor mov jo sbb and pop mov mov adc ret pop shll mov add or add cmc lea nopl xlat lock inc lea and pop mov inc adc inc imul pop pop shrb mov fs and rep cs push xlat xchg loope sub es mov mov stos push sub xor sub mov mov pop sbb jns add pop inc jl mov test cltd (bad) sbb pop dec or sub (bad) or imul int dec or mov mov movsb outsb lea xchg mov and sub pop jno mov add push inc sub dec push inc test xor outsb push out movsb push xor bound jg nop xor xor inc push push mov add imul add xstore-rng cmpsl inc ret xchg cmp inc cmpsl (bad) sahf mov pusha and fisttpll pop inc push xor mov sub repnz or xor cmp lods jo mov ss add dec xchg sub aam cmp insl stos les dec ret add pop push cmp mov xchg movsl insl jge andl sbb cmp dec push pusha fwait dec adc mov push pushf sbb test mov xchg imul mov mov add add mov cs je mov lds mov push sub xor jae mov loope pop mov imul or scas dec adc mov nop jp sti jp sbb inc mov lods adc jl mov ja test pop pop fnop les sub xorb or phaddw fadds mov or push xor stos mov dec cmp xchg inc or rcrl xchg push xor add xor xorl adc push aam daa mov inc sub test sub mov push fwait addb cltd cvtps2pd imul sub push cmc movsb mov int fwait pop mov (bad) rolb das loop push leave fcoms mov add inc adc jbe jo jl ss add add lock mov daa pushf repnz (bad) push (bad) xchg jnp jo mov popa out xor dec test (bad) sbb sub mov into stos ss pop test rcll rcrb fwait and sub ret sahf inc sbb add (bad) mov adc and add shrb push add sbb cmp inc push push add adc xchg jl das mov mov push rorb or rcrb dec imul and adc imul cmpsb in or and sub mull mov xor cmp lret lods and dec add insb movsl xor cwtl fs mov outsl in (bad) pop and mov test dec enter rolb sub xchg aaa and popf mov mov push and xor or dec pop imul outsl ss add xor out push xor popa mov insb inc in push add cmpsl subl jne or push xor pushf or mov fiadd or pop movsl or or cli inc inc push sub getsec fdivrl popa ret xor (bad) dec lods mov xor mov aas push dec xchg or popa (bad) or orl (bad) in or ds push adcl push pop movsb fisubrl js or xchg fisubrl adc cmp rorl adc push or js jmp loopne adc add (bad) mov mov or ret sub xor daa pushf jo insb data16 mov pop sub rorb popa push push xor shl es jne nop cmp lret imul andb (bad) dec push xchg and add cmp sbb jp jecxz xchg arpl push sub jg xor rorb xor inc mov popa cmp insb dec nop repnz sbb rol dec pop inc cltd test test cwtl sub or xchg daa aaa sarl mov adc or dec xchg pushf mov sub pop (bad) es mov es sbb sub pushf dec mov add imul mov idivb or lock insb loopne lret mov or lods lret outsb shll jbe cmpsb inc lret js cmp xor lods mov jge dec mov push mov push ficomp pusha lods imul arpl test xchg pop dec mov or or and xlat fildl and (bad) mov add mov sbb adc or sub jae loope sar sbb outsl add test push sub cmp or cmp (bad) mov xchg sahf or imul and xor loop jmp adc lock mov inc sub imul mov pop xor and shrb push dec adc add dec rcrb lea lods subb sub mov jge aam add push sbb and or ret popa pop rcrb xorb xor xchg push daa or sub sub sub mov push pop popf sbb push test lods je popf ds das mov (bad) mov mov push (bad) add jo iret xlat movsl movsb push imul orb cmpsl ret mov dec mov inc or xor push adc cwtl rcr and sub lods in add cmp repnz repz xor inc inc call or cmp shlb mov shlb dec pop push ret xchg sbb push outsl mov sbb sbb add mov xor jecxz nop xor mov xchg xor or push xor add xchg or inc movsb fs adc jecxz fnsave sub cmpsl ret sub fcmovu push cmp xor mov and xchg pusha mov adc dec cmp stos cmpsb subl js popa xor pop test cmp outsl je add mov push add (bad) gs dec fistp xor mov ljmp packuswb sbb xchg movsl sbb cli or pusha inc (bad) into pop adc pusha inc ret fiadd sub popa push xchg inc pushf push xchg mov xor add pushf lock mov and and jns inc rcll cmp (bad) loop or xor mov xchg push fisttpll mov mov xor sbb mov les cmp or xchg outsl (bad) push add jne addr16 cmp test push aaa pop mov dec and mov clc add mov ret add jns outsl jmp push push in fsubs fcompl ss add pop push mov rolb outsl push cltd (bad) sub imul and adc icebp sub add xor loopne inc mov cs test push test xchg mov push lods dec adc hlt adc xchg xchg test repz xchg (bad) add sbb mov push cmpl pop or sbb cs lret pop inc mov sahf dec fcomp lcall das or and cmp cmc mov (bad) ja cmp push rcrb add or xchg rolb out or add mov or out das sub mov in mov cwtl lods cli ja dec test sub es xor gs push lret lret or mov or jno (bad) inc sbb fs push (bad) and movsb dec insl jo push das rolb and pop jno into xchg inc xchg xchg popa sub jecxz test rorl xor push orl pop aam outsb (bad) sti xchg out or sub sbb xor jmp or xor and out movsl push loopne loope or lret into pop test fistpll sbb push (bad) sub push rcrb (bad) xchg cwtl imulb addl dec push xorb pop imul roll and mov and mov hlt xor or or adc jmp and jne lret xchg or lea jmp cmp cs pop movsl ret mov jg xchg sbb shlb adc push in inc leave add mov call jl inc inc sbb fiadd push cmp sub mov sbb adc push jb push add pop loope popa adc dec xchg add sbb sub ret push ss cmp cmp inc and leave in push inc rcrb dec js jge push xchg mov popa jecxz ss xlat push mov cmpsb mov xchg add adc mov sbb jecxz push xor ret lcall es mov adc xor cmp fldl das cmpsl adc push adc call mov mov push cs fs (bad) lock lret xor or mov addr16 test ret fistpll sbb xor bound jae outsl lds loopne sub pop (bad) fwait sub mov daa add cmp inc cmp push fnop jno bound lods adc inc aam movsl xor sbb and stos test pusha fsubs or adc dec push in mov adc sub or dec popf pop stc fwait (bad) adc xor insb leave dec daa add mov xor sbb dec sub lcall popa out and pop xchg or or jnp repz inc incl add adc mov test mov mov xor add movsl and cmp pop pop add repz adc sub push or ss dec pop pop mov pop add scas xchg and mov xchg inc (bad) leave (bad) add jmp addr16 dec dec and xchg es cmp push fistpl lret or cmp inc lea cmp xor push mov and popf cwtl mov dec and (bad) pop movsb (bad) dec add sbb mov xor lods adc pop pop mov inc mov cmpb or ret dec enter dec ror stos das adc cmp cmpsb add gs sbb inc sbb daa xchg add add mov mov lea and add inc rcrb mov test cmp arpl cmp mov imul pop cmovbe imul cmp loop (bad) roll add cltd mov cmp jno and inc movsl mov fisub xor xor or movsl test push leave dec rcrb sbb cmp sbbb lods mov aad lods or sbb (bad) mov mov int3 pop push mov cmpsb push dec xchg or mov cmpsl pop mov je fldcw pop cmpl test push test pop dec rol nop ret jns dec adc pop mov mov pushf jle mov pop hlt xchg fs jg (bad) inc or xchg jecxz add aas in mov test rol lcall xor sbb xchg into negl dec shlb shrd add loopne mov enter adcl mov rcrb scas mov cmp test test add mov lds enter sbb adc arpl jge ret ret mov xor pop les add ret jae aam ret lahf inc cmp insb xor mov adc stc sub push xchg xchg fyl2xp1 insl mov sahf imul mov test leave or push cld insl add cmp aas xchg call cmp push adc sub ss rcrb shrb imul fldl or and xor or movsl cmp xor nop adcb ja adc sbb call mov iret outsb sbb in jnp or nop icebp xor xor xlat adc inc xor mov inc scas test cmp sbb add or rolb xchg inc enter ret cwtl adc int3 sahf jge push mov daa hlt and push push mov jnp or repz push inc mov aaa xor dec inc dec push push xor scas sbb mov pop addr16 sbb mov stos rol ret outsl aad xor adc push push inc xchg cs mov imul mov xor adc or sbb cmp dec and mov aad xchg ret and and (bad) cmp mov jae xorl aaa icebp ret jo mov sub mov jb test mov xchg loop pushf popa loope outsb mov mov push inc and xchg test inc popa xor add ljmp or xor lods stos jnp mov sub sbb and aam sbb add jnp mov subb fdivs daa and adc js adc push std out add sub or mov std cmp ret inc adc mov or pop xor xlat out xor mov rcll mov imul adc in adc loopne sub adc aam dec lret je or mov fs sahf mov pop int3 es jge shr cld jecxz mov push ret add sbb mov (bad) xchg pusha or inc mov pop xchg xchg pushf gs add movsl xchg sub stos nop push add sbb roll pop jb imul cld inc lret pop add fldenv dec lds inc loop aad dec and movsb add mov xor push repz dec cmp ss mov cs pop (bad) rclb sbb mov or add aam sbb aam pushf inc lcall sahf pop mov and push push push and mov insb xchg or add and add adc rolb add or mov mov icebp ret xor sbb repnz cmp mov push test orb push push push scas repz and daa icebp adc sub sahf jmp je xchg dec pop es sub cmpsl les jmp arpl or inc pop inc mov sub popa test jmp add sub adc add add mov lods mov dec adc mov inc fisttpll call gs mov outsl or mov dec xchg (bad) xor sbb in ja cmp andb orl cltd sbb test mov scas shrl push adc aam dec mov invd sub sub fsubrp jbe add arpl subb adc sbb loope jnp cmpsb jo cld jnp and push rcr rcrb sub inc adc add mov inc gs (bad) mov jae dec sbb xchg push sub scas adc and cmp xchg addr16 mov andb jno ljmp or add jnp scas inc imul lret fistpl add sbb lcall ja test cwtl dec pop stos test insb jmp out sbb daa js fnop push push cmp out insb leave xchg or inc inc fwait and dec insl aaa xlat sbb mov mov push bound inc dec xchg das inc ss push jo out (bad) lock ret (bad) xor insl inc pop or imul cmc push loopne mov test mov arpl fwait mov in or jp add xchg push add lods arpl xor xor mov orl adc dec add inc lahf fbstp repz loopne adc or xor imul add cmpl jp mov rorb aaa daa adc cmp push shrb call loop xchg mov jmp xor pop pop mov xchg mov inc xchg test and mov xorl pop adc lret fidivr mov jge repz adc pop dec cld dec pop psraw lds mov outsl sub shll test mov push aam sub (bad) sahf dec test and lcall push and adc lret sbb mov push andl push pshufw inc pop sbb out or adc loop movsb or test stos fs xor rcrl jge outsb gs pop pop or pop mov mov push movsb inc jo out addr16 add and inc sahf adc pop roll insb popa movsl aaa bound sbb jae push mov push push aam sbb sub xchg outsl mov out mov pusha loopne dec rorb shll or sbb popa mov or adc adc lock popf or and xchg lock pushf gs in push mov mov (bad) add mov and inc sub fdivrs xchg ret mov inc adc xlat xchg fs test dec (bad) test stos out fistl and lods mov dec add (bad) insl fnstsw adc and add and push xor push imul movsb dec or mov xchg call xor push test add add mov imul fldl aad lods and in fistl ret dec loop add mov push pop (bad) mov xor cmp mov adc ss lea rcrl inc mov add xchg cmp add into add push xlat shrb jne inc mov cmp xor pop inc xchg push add adc sbb test xchg sub add or hlt pop push lods jns xor adc dec lret or inc dec ret incl jae (bad) push insl loope ret xor (bad) in rolb loope pop inc mov push xor adc jmp push cmp inc sbb and mov push mov sbb fucomi mov or sbb out lods xchg cwtl jp test (bad) and js lahf cmp imul mov push xchg xor rep mov xor jo jb xor or or push int les dec outsb pusha fldl rcr xor add gs dec call insl mov ucomisd cmp push add sub push inc mov sbb (bad) push dec mov xchg (bad) inc arpl pop and or or sbb ss test fsts pusha incb test cmc sub (bad) lods pop (bad) int3 sbbb ror cmc dec cmp jg or faddl jl mov pop shrb and loopne fisttpl adc pop sub fnstsw jo push sub movsb out push xor mov les add gs sub lahf mov push inc inc loope inc jnp or xorl mov mov leave mov jns dec es dec pushaw or dec inc sub mov stc lea cltd pop xchg stos test es sub (bad) push addb mov and bound enter fdivs xorb cs adc dec and test movsb lods sub or scas les pop pushf xor lret outsb and xor dec sbb jmp add pusha add bound mov call (bad) out addl xor movb cmp jmp rcrb add dec pop sub stos jnp jecxz sub test xlat or dec cs or xchg xor cmp adc sub movsl addb loopne fwait pushf bound adc sub mov std cmp les and push sbb stc dec aaa faddp add test sbb sub push and sbb xor daa xchg cltd xchg cmp sub mov cmp pop and or in or shrb mov inc fndisi(8087 into add (bad) sub add add or sbb lds inc lcall xor add mov popa lock popa adc inc adc gs add jmp xchg xor inc inc sub mov xor sarl pusha inc xor and mov mov outsl and or mov xchg mov xor andb imul inc push adc sub adc sbb shrb cmp xor mov and or popa dec sbb addl rcl xchg sahf jmp xor and loop sarb loope (bad) xor push lea sub movsl mov rcl adc outsb ficom adc call sbb dec mov dec inc test adc or (bad) push sub fnstenv cmp mov mov stos lea dec xorb cmp xchg scas xchg jo or popa sub sub (bad) (bad) call xchg adc lahf cmp dec out inc and addl adc sub or test cmp mov add mov cmpsb or mov push jb test andb pop lea dec push mov cmpsl icebp jge out xchg or jns scas (bad) xchg imul lcall mov add movsl scas push xchg mov mov xor sbb (bad) (bad) movb rclb xor stos dec jecxz mov pop cmpsb inc inc push xchg and inc into push test mov adc ret jp js mov ret addl (bad) int3 cmpsl pushf mov push xorl in inc mov mov cmpsl lds stos test test pop sbb das add mov xchg bound add insl aam mov into and sub into lods xor add in sarb add sbb dec shlb xchg lea xor cwtl stos mov adc (bad) or (bad) sti adc sbb push pop fdivl dec or jb or pop test xchg gs mov push or mov lret inc mov inc xlat jp pop and cmp xor or or shlb or xor add and (bad) lds imul xchg mov xor and adc add mov dec (bad) sbb mov int xchg and fstpt movsl shlb lock xchg shlb xchg sbb fwait pop sbb mov cmp xorl mov cltd loopne jmp xchg mov shrl xor dec add adc xor xorb or movsl pushf sbb (bad) push ret clc out push push dec jmp and xor loopne jns in adcl adc (bad) xor inc inc push and mov mov mov shrb sub dec or and xor jp popf outsb push add int lret fistl into pop jbe pop dec mov mov sub idiv js pop nop gs xor dec jecxz push adc cmp sbb or xchg cmp fistpl xor fldl sbb add inc jg nop xchg sub mov mov adc cmp pop pushf xor xor test inc movsb lret cltd in push mov inc (bad) cmp mov cli xchg movsl sub xor adc ficompl adc jecxz (bad) or inc xchg test xchg push cmp adc or mov mov add or movsl (bad) add add dec ja fwait inc jmp lret adc xor and mov and sub push mov cmp daa leave andb daa jo dec enter add lahf xor xlat xor insb lret fldl mov ds xchg insb pop jmp test jmp lods mov pop ret cmp lahf push mov add cmp lds inc push lock add adc or loop sbb cmpb mov add popf sbb ret cmp sub ja (bad) xor adc inc lea fsin sbb jp shlb push pop jns pop xlat loop xchg mov loopne sbb or out jne jne or dec fistp inc data16 push adc cmp and xchg or inc enter or add or popa aas or jg and sbb call jge movsl ss (bad) adc xchg jae test rorb stos ss (bad) loop das jl test pop xchg adc push xchg xor mov outsl rolb cwtl or and mov cmovge (bad) jo or push pop lea pop outsl data16 sbb adc and andb push aaa std sbb ror loop push aas mov iret jo dec or push mov xor or cmc fdivs jo ret xor inc inc and mov cwtl jp push or cmp cmp mov repnz pop repnz and imul push add or or dec lock (bad) mov mov (bad) or inc fdivr cmp or inc mov push mov add add mov pop dec bound js sbb xor or cld inc sbb inc add pop shlb or dec xchg jp mov sbb xor sbb dec add jmp mov arpl lret sbb imul add add enter dec mov addb pop sub inc out dec ret adc (bad) and or shrb lock or cmpsb cmpsb push jno test add pushf or sub insl insl add adc mov lcall xor ret sub ds daa jge xor inc and push pop (bad) dec out aaa repz sub in pop aaa push imul or inc adc lret imul shll daa cwtl scas pop stos mov daa outsl sub les sub inc pop add sbb sub add jo (bad) lret out sbb fs pop add inc add repnz push or add and stos xlat test (bad) fist out call xor xor push outsb or imul add mov sti cmpps lock testl xchg adc xchg fwait adc popa sub int3 test push or xlat or inc sub cld aam popa test or (bad) out inc lea lds popa insl jmp dec xor test jge repnz mov sbb and cmp les pop repnz xor aaa mov inc (bad) inc pop push mov mov adc jmp sbb in push push fadds lods mov xchg loop mov push mov sub xorl adc sbb addr16 pusha and push adc dec popa (bad) (bad) and adc xchg lods enter sbb leave ss imul mov cmp mov xor orl add addl js sub sub out cmp xor mov in rcll push cmp and add pusha sub ret mov rcll pop and mov imul dec fadds ljmp ret aam xor popa mov dec add xchg (bad) ret mov sub lods fidivr push xor jno sbb xchg push add test fldl hlt push xor rorb js adc sub adc mov mov dec aad sarb add les and into xor xor pop lock xchg push mov cmpsb fisttp jp or sbb xchg adc insb mov or push sub jp and inc pop test icebp dec cltd xor repnz adc xchg mov or add lods loopne pusha loopne cmp test adc xor outsb icebp sub push xchg popf fisubrl popa (bad) pushf leave mov sub leave adc or out (bad) rorb lret xchg int3 pop pop repz push sahf push push aaa cmc adc loope popa lock clc and pop jnp popf or cmp movsl adc inc xchg xorb lea mov inc xchg mov inc xor (bad) dec pusha popf push insl cmp test sbb push je xor iret sub add xchg cmpsb iret ret test xor dec outsl cs add add test (bad) lcall sbb and and xchg add and nop adc dec pop (bad) push add push adc movsb xor pop sub mov mov inc inc mov add rcrb lods xor push repz into sub roll push stos xor and mov push add imul xchg lea lods or dec dec inc frstor dec add dec and cwtl test in movsb int3 add cmpsb push push push add lods sbb js faddl xor stos dec adc mov in aaa add popf xor insl sub movsb lds lret xorl (bad) inc add push pusha xchg fistl arpl adc push mov sub or push outsl adc lds in or cmp lahf mov in mov or or mov and jne push mov stos test cmp xor adc inc pop addb inc and push push cmp add insl push aam negw push add fiadd loopne das inc xor rcrb dec repz lcall mov cmp (bad) lret (bad) mov cmp fsubs inc movsb jnp jl dec push inc add adc fs mov and ror sbb lds insl rclb mov adcb and (bad) loope pop sbb xchg sahf mov movsb jb sbb dec ret sarb push mov dec adc in and inc je or iret cmpsb pop mov movsb adc fist xchg lcall in add adc and adc int3 lret into scas jae inc lods dec mov dec les add push jb mov in outsb add or mov popa nop mov sub ss mov dec xor jae (bad) push insb add dec mov int3 jno loopne mov push mov add push shrl jmp and inc sar add add loopne ljmp or test cmp push add icebp sbb daa add loopne in ud2 mov xor and push add push add andb ret dec cmp add add loope movsl and les push (bad) mov (bad) divl dec sbb (bad) mov and jecxz cmc (bad) cmp cmp and scas inc ss loope add add lock sub cmp ret pop fiadd loopne sub xchg lret in add sub mov lahf and jge xor popl cmp lret in es mov mov push push call cmc rorb ret rclb xor fs or dec add adc add outsl and mov jg pop push push insb lods pushl lock xor movb inc andb test pusha test fwait scas or cmpsl rorb and (bad) popa adc push mov addr16 aam das jne insl loop push cmpsb or add and mov addb sbb movsb adc cmc xor inc xorl pop fs fadds mov aad adc bound fmuls sbb imul add sub adc and and xor cmpsl movsl sahf push sbb mov mov sbb mov adc cmp mov sbb mov es add orb in mov push sbb je dec pop daa sti bndldx pushf andb jne inc and imul cmpsb hlt (bad) or mov or (bad) adc pushf mov daa push movsl adc mov aad mov xor xchg es add mov mov xchg les aaa xor push mov push aaa out mov rcr mov lods mov rorb std or nop mov add pop faddl add mov dec std inc or xchg (bad) cltd xor mov and pop fsts (bad) mov fwait and (bad) xor jo inc mov in popa mov pop mov aad addb push clc pop sti push sarb scas jecxz in test jp push adc (bad) clc (bad) fsubrp xor adc pop xor nop mov cld cmp sarl andb pusha pop fdivs iret cmp add int add xorl mov shl aaa cmpsl pop ret add dec xchg sbb adc nop movsl sti sub sbb add sub es and test mov cmp shlb mov adc mov imul push adc inc mov inc and stos xor nop inc test je sti adc mov mov mov pop xor sbb scas or sbb fs lock xchg in lock xor popa scas add jmp sub cmp popa (bad) mov popa jmp pushf inc test pop pop sbb and outsl pop jbe pushf and and (bad) and insl icebp scas jg mov imul add ja adc and loope inc loope insb mov or movsl pop in aam mov sbb sub pop xchg jge insb fadd dec sbb push adcl push jecxz (bad) (bad) subl add mov jge insb and in pop dec sub out cmp sbb pop jb pop and fnsave in repnz inc add (bad) adc xchg sub add out mov dec mov xor inc xor mov or pop add dec and pushf popa inc fs push les xchg hlt xchg pop adc push inc shl sbb mov jne mov adc pop loop movsl stos pop xor xchg add adc les inc xchg or xor inc mov inc pop movsb scas and mov or mov fstp imul cmp sub cmp mov cmp pop mov or add leave (bad) xor out mov sbb or push outsl lcall pop or arpl gs pop dec and lods pop hlt sbb rcrl in mov adc insb iret add add mov popa enter adc push adc sbb ss inc dec lret add pop dec ss xchg push adc add enter lahf pop rolb mov cmp mov inc adcb or into push scas push cmp shrb fld add xchg push pop (bad) test movsb xor subl mov xchg int lock lds fisttpll add leave push dec sub dec sbb and xor icebp and test push pop les push pop push mov or xchg dec mov es dec xor das loopne and addr16 sub test sbb xor in popa popa and js add jl fcoms inc push mov js test scas add jmp int lock xor push lret jno mov in add popa sahf pop test or sub icebp add (bad) mov ja xchg test fs sub jmp mov xlat xchg movsb ficomp lods lcall add aad jmp pop iret pop test jo (bad) popa add add cmp or and shrb std xor ljmp call mov mov mov mov pop add mov ret scas and fsubrp and adc sbbl aaa add xchg xor imul inc or or dec add sub push add or jle inc pop push inc cmp aam mov ss outsl pop fs orl or mov orl fcmovne cmp mov dec sub pop push pop pop sub movb lea push cli roll push ret jnp add outsl push arpl loopne add xchg and fistl jb bound push or lret add mov stos shrl inc ss rcrl xlat dec and pop or cmp addb lea adc dec sbb std and inc add ret bound and push xor xchg scas add add jmp loopne pop (bad) xor icebp ret inc je (bad) sub xor push pusha add nop mov pusha test sub mov mov add inc jecxz test jae pop mov adc xchg add popa mov js add sub test sbb cmp (bad) mov push cli andb call push add sbb mov xchg lret outsb movsb je lods cmp dec dec fimul test or adc adc (bad) sti dec gs add ret flds cmp pusha jo insb add adc adc dec inc lock push fxtract nop pusha xor push xchg fiadd rolb sti adc push dec rolb mov mov sub stc push mov pusha add dec adc sub adc mov mov push push xor aam xchg add imul call scas and mov shll cmp or inc cmp (bad) xor xor push sub pop and jl xor inc call pop xchg xor xor clc fmul push je sarl jle pusha adc or lods jno xchg hlt xchg insb mov mov mov push adc adc jno dec xchg movsb cwtl arpl fwait xor pop sbb push xor or push xor lock xchg sub aam ror sbb sbb loope movsb dec insl push push rclb pop xchg cmp jmp push xor pop or add add ret jmp cltd adc rorb cmpsl aaa add pop add inc mov fistpll xchg sbb or addb or jmp add mov jmp dec es add sbb pop enter add les out sub mov xchg stos pop icebp inc dec mov or inc and xchg mov shlb inc adc fs ret xchg xlat inc imul inc notb pop lret rolb xchg sbb cmp pop mov test mov adc mov add js sbbl ja addl jo inc inc inc xchg pop xchg add movsl shl sbb or rcrl xor jo add adc mov pop xor adc (bad) push push inc or add cmp xor xor or aad lods jb test dec push divl cmp inc push mov xchg add add cmp add adc add jle insb sub sbb push inc xor js mov mov push cmp mov mov mov push jp cmp jl daa push push rorb cmpsl mov mov mov insb add sbb (bad) mov inc jl out in cmp push int sub mov adcb lea add imul inc mov jns sbb into cmp dec adc jmp aaa and mov outsl and xorb xor cld rclb fwait cmp push jecxz sbb and stc sarb test shlb inc lahf pop enter xor xor les les or add movsb sub test aam popa pusha insb fcmovbe push adc sbb xchg (bad) push xor or inc adc lock mov (bad) sbb add dec ret adc mov insb mov push inc mov push iret xor loope or or xor cmp add inc cmp arpl addb pop ljmp shrl push adc add xchg mov arpl pop add push mov cli rolb mov mov sub enter (bad) mov pop sub in popf inc push insb jmp mov insb mov imul test cli sub xor or or pop xor mov xor push test fldt add jae xchg mov xchg xchg jno add jl pop arpl inc popa fs (bad) or push jge outsl add pop or sbb sbb xor and or lds dec out cmc enter xor cmp sbb test push push add mov or or jne or imul enter dec sahf arpl pop push xchg loopne add sub mov sbb pop test push push push sub sti mov js mov aad mov mov movsb xor or pop xor xor (bad) xchg adc push hlt jb adcl int3 sbb cli sub mov xor rsqrtps les stc xor test test dec testl push and xchg rclb xchg loopne pop imul inc cmp xchg inc sub sub or inc mov lcall cmp push pushf mov aaa push mov xchg mov jb das add pop lea in fwait ret dec (bad) sub mov enter mov sub jecxz mov adc cmp js sbbl test xchg ficom or xchg pop inc inc aad inc mov int3 add sbb pop mov add jge fimull lret je push xor cmp clc (bad) repz lods push addl (bad) aas data16 loop test mov pushf sbb mov stos xorb or (bad) mov push adc jo ret or inc lods push xlat repz push inc imul xor sub sub and lock lods xor sub push push dec (bad) imul cmp push fwait xorb adc pop pusha or mov pop jae mov xchg xchg scas xchg mov add test add lds (bad) xchg xchg add roll inc loope push xchg cmp or addl fiaddl scas xor xor xorl or jnp add in xchg andl jmp pop insb cwtl stos pop outsl push pop aaa xchg lret pop pop outsl inc lods cltd and dec xchg cmpsb inc add imul fimul mull lea or addl inc and inc cli push sub jge mov negl lods sub fcom lea adc loop sbb mov sbb fs pop push push js js inc cmpsl aam push addr16 xchg sbb andl mov mov data16 (bad) mov jmp xor rcll jnp add in int3 add sub mov or and loopne add testb jmp cmpsb push jo mov push popa jg les pusha pusha push dec insl aaa jne loopne lods in or add add sbb sub ds mov add movsb add sub adcl test lcall mov push add (bad) or nop pusha add mov into nop repnz add xor scas lea fildll faddl jno pop gs pop (bad) fistp xor cmpsl movsb adc ret push es adc mov (bad) pop xchg (bad) xor xor add or sub pop xor add sbb fild xchg ret and popa incl xchg imul mov adc fs sub inc cmp add inc lock mov dec insl adc cmp (bad) push aam jo pop and mov addl imul lret jb and and inc stos fldenv gs and addl and mov sbbb outsb xor fcmovnb arpl popa jecxz xor dec rolb dec (bad) add outsl fsubrs nop scas sbb sub sub jmp ljmp and pop daa and inc fiadd popa pop adc cmp dec mov int3 mov and push xor dec pop and xchg mov adc pusha rol test xchg xlat icebp pop push mov mov aas js outsl inc jbe xor adc mov push fisttpl jmp in shrb addr16 lods inc jbe mov fnsave xor rorb leave inc adc pop lods ss or pop mov or mov jmp add mov cmp movb mov inc test push jg mov roll push pushf push inc rolb (bad) lods mov das xchg mov inc lret mov or (bad) xor fadd fistpl sub dec sbb (bad) rcrb leave inc push sbb mov dec cmp push in sub or js pop daa mov or cmp sbb test into and inc inc pop aaa outsb inc js pop mov sbb jae test push rclb lods add cmp pop jno,pn mov jecxz ja pop pop mov inc xchg lock mov xorl inc jp add loope imul xor pop fimull mov cmp rcr cmp mov mov hlt pop jns mov loope push pop xchg add mov pop ret lock sub pop fst push aam inc cwtl push aaa cmpsl lods add in mov jo push and (bad) mov mov xorl test xor stc sahf pop mov pusha push test or cmp leave or sbb mov fwait cmp (bad) sub xor dec cmpsb pushf and test inc inc cmpsl ret jae bound jmp mov pusha jne aad and dec pop mov stos cmp rcrl adc outsl test xchg lods hlt addb aaa add jns mov add outsb dec aaa mov mov xor push mov ljmp add sahf js and xor add imul xor gs addr16 stos dec adc mov pop mov test arpl fdivl jl out cmc sbb inc sub lods inc push fadd (bad) mull out lret xlat xor adc inc adc push or xchg pusha cmpsl ss or add inc imul sub cmpb inc and mov ffreep ret cmp out xor test sbb ds xchg mov dec mov or or gs adc imul js xor pop add sub or pop mov in inc ljmp mov jo pop test push sub punpckldq stos and rorb and je fwait aaa movsl test aam pop dec xor sub add sbb lods aaa push and dec adc andb xor mov sbbl mov push inc xor and fisttpll mov inc or inc adc xorl mov clc js add add sub mov (bad) nop iret ret sub xchg (bad) jns lods imull cmp aaa xor xor into and (bad) push sbb stc popa lret add inc popl cmp or or ret adc ret or mov sbb sbbl lea nop push lret inc add out movsl xor imul pop mov inc movsl lahf enter add popf jp pusha cmpsl or pop popf mov shr popa xchg xchg cmpsl add mov lock shll jge sub adc adc cwtl cltd jb addr16 mov les loopne or jecxz inc add push fidivl ss push sub mov and sbb add push aam in cmp push loop mov (bad) daa ret test inc adcl cltd xchg stos out (bad) ss pop push xor or jmp aad popa pop sbb inc movsl mov jge dec sbb int3 nop add in push ljmp push adc sub pop jmp pop or fs in insl shr or adc inc adc (bad) notb fldenv or add or mov sbb popa lret or inc test rcll push mov inc js je cmp xor sbb mov (bad) repz mov pusha xor xchg xchg adc aaa mov xor mov inc leave jo push cmpsl cmp loopne jp das lods inc mov loopne push xor shrb mov mov cmp xor adc mov add jecxz shlb int and inc sub fldenv mov idiv inc adc (bad) mov jp addl or popf sub xchg pop loop xchg add jne lcall test inc inc push or mov or jecxz dec adc adc in xchg inc out loopne fwait sub pop push scas mov popf dec push dec cmp xchg xchg pinsrw aam mov inc sbb xor fimull add cmp flds or pop sbb push ljmp cmp lods rorl add (bad) repnz mov rorb add add sub inc sub xor sub pop cmpsl std nop adc and jns dec call cwtl scas mov inc mov cmp cwtl and notb cwtl js mov inc sbb lea jno ljmp andl or adc dec add rclb xchg cmp arpl fisttp mov xchg lock (bad) daa cmp xor leave pop push or sub mov sti adc xor pusha inc aam sub mov ret adc mov das fs mov fiaddl pusha xchg call addl fs aaa shlb sbb call pop xchg fstpt or pop shlb outsb cmp cmp mov xor and xorl test loope inc iret fisttpll and xchg ja sbb je pop sahf mov (bad) leave rolb in repnz inc (bad) sbb shll and push jo push sbb lret sbbb roll or adc mov and inc inc sbb add add in repz or mov pop cltd or sub call adc pop pop stos iret jmp push and lods lea in and cmp stc mov jns nop dec ret sub or sub xchg popa in adc mov mov adc sub adc inc rolb and sbb or adc pop add mov mov adcb or fidiv add fwait rclb mov rcrl sbb nop dec cltd lret pop xorb mov lods movsl xor fistl jl or mov pop jmp sub add aam jmp and int mov fstps xor add xchg or xor imul pop outsb les pop adc adcl push xchg add subl dec add or jns jo push sub pop sub or lods mov mov popa lret dec xchg or mov mov repz leave dec push and xlat xor dec sahf inc arpl inc push add cmp (bad) int3 mov jecxz outsl ljmp sbb aam push lcall icebp std addr16 dec pop jnp dec (bad) mov sbb pop mov bound xchg (bad) loopne bound test movsb test (bad) cmp push sub pop sbbl cmc lcall inc jb divl inc movsb inc (bad) xor negl sbb mov xor or arpl pop loopne or or in inc adc lret xor inc shlb loopne or rolb inc mov sub pop inc push sub xor lods inc sub arpl (bad) pop arpl ret ret bound sub adc adc sbb sub sub or adc push mov add xchg mov lea lret dec jne popa and pusha jp nop lcall add es xchg (bad) call add pusha cmp sbb jge xor (bad) in dec in adc adcl add sub dec pop or cmpsl imul mov loopne ret mov xor lods adc jo dec loope inc adc lret jns cmp dec mov sub and fistpl jl aam xor jnp (bad) pop (bad) cmp sub lret mov mov xchg mov push or add xchg or add in movsl je inc add cmpsb jbe push stc sbb cmc cmp mov jecxz pop sbb or ret xchg sahf push push dec sub jmp lea pusha xchg pop (bad) cmp xor nop adcb mov jns sarb adcb sbb gs add push dec xor stos mov (bad) movb xor sbb adc mov mov add mov pop pusha shl pop xchg mov inc (bad) data16 mov or mov or ljmp xchg or pop adc add add add xchg add jp test mov loope bound mov sub lahf cmp add xor inc xor and xor sbb addb sub (bad) cmc sub imul lods lods cmp push movb insl ret test rcrl insb repz xor or inc xor xchg push stc push inc adc mov jnp mov mov add fsubs nop xchg movsl popa frstor push xchg das sbb xor push cmp fwait adc push or add inc ja and stos and dec and lods sub mov sub and mov jecxz adc xchg pusha repz popf dec test xchg adc sarb add inc (bad) jmp cmovae pop lret push (bad) cmc les stos into pop push dec stc sarb add das cmp lahf popf mov xchg mov adc xchg pop dec mov mov or xor or jge sbb push cmp ffree sbb sar pop or adc mov add stos xchg test add mov sbb push xchg loope pusha lods sar loope and cmp push rcrl xchg mov sar xchg lods mov add ss push sub pop inc test inc lret (bad) and or shl imul mov and or es movsb pop pusha ficomp fcoml lods pop pop add in sub or jmp test data16 xchg mov pop test or adc mov pop repz or xchg jo js test pop mov xor or or adc mov out mov jae rcrb dec push psubb adc or push or lods adc insb cmp sub lahf adc insb jmp rcll iret sbb (bad) test incl mov adc lods add dec pop mov nop jo outsl add cmp pop adc inc mov imul jmp (bad) mov add dec rcll mov adc test int3 cmp and test mov cmp addl mov or xchg loopne and jge js add cmp xchg andl jb aaa sete das pop sub mov bound push pusha add xor xchg mov rorl loop pop adc cmp push ljmp or xor ret mov xchg xor fs mov add mov cmp mov add daa sub inc lret sbb lret je or mov inc push inc cmp ljmp inc mov push in sti inc add pop push xorl xchg pusha or stc mov xchg (bad) sub cmp aad push ret andl repz inc (bad) mov (bad) repz push js and ljmp mov cmp movsb jecxz pop jge iret test inc fdivl or xor ret or (bad) roll or es in std fbld ficomp jns pop imul mov mov push adc push rcrb (bad) std pop mov int3 or fsubrs xorb pusha push sbb stos bound shl or nop lods add rorb cmc pop test fwait mov rcll add imul lods sti xor mov lods xor and and rcrl shrb mov mov sbb or and inc sbb imul dec roll pusha add or mov or fidivr sbb cvttps2pi sbb sbb cmp movsb xchg sbb push les cmp arpl ja lcall shll inc aaa inc loopne push push xor pop cwtl xchg inc jnp cs sub dec popa mov push xchg hlt push pop cmpsl push inc jmp jmp lret adcl arpl repz and rolb (bad) adc lret mov mov push push ret lret nop and fimull (bad) mov cli mov lret sarb cmpsl ret outsl mov add inc or or mov and or lock or mov out dec mov jp xchg jg sbb sub popa push (bad) (bad) lds sub movsl cmp (bad) xor sbb jne ret mov jge pop test push iret sub mov jecxz add outsb aas push cmpsl lock or test mov mov rcl add mov sub push mov sbb adc adc xchg mov mov pop jnp sarb adc cmp dec adc cmp pop jmp push add push adc mov (bad) jne mov sbb or adc aam int3 dec sqrtps stos push push repnz mov daa pop inc jp mov and lcall out mov orl lods fs lods cmp inc call jo mov pop daa movsb ret xchg mulb pop fbld push push dec sub sbb dec xchg push inc push push push push test mov leave pusha push aam xchg xchg or mov inc je lcall sbb mov inc popf popa fbstp xor and mov xchg mov outsl add inc sub and xchg xchg cmp adc sub lods out dec sub cmpsl and mov ficomp push sub orl jae xor add mov sub mov add xchg or jecxz nop xor in xor or push adc shrb xchg xor mov fild xchg mov mull cmp jno dec push sub pop (bad) in sbb or ret jno (bad) or shr push dec mov mov cwtl or hlt push dec jmp sbb add jno xchg xor outsl sbb xchg cmp mov sub push int3 cltd and mov mov mov add sbb je and ret dec nop sbb test or cmp pop push (bad) call fwait rolb inc mov mov add add ljmp mov add dec mov je pusha jno mov lods cmp jmp and imull xor es adc mov and xorb das stos dec jo loopne leave sbb stc mov adc or mov xchg cmp xor adc lds sbb push fsubrl mov mov addr16 push dec adc mov jp xor dec sbb push lret jo mov mov or test jecxz mov push js lock (bad) xor adc fsubrs xor pop insl cmp add aaa aas imul mov mov js inc add push inc cmpsb mov outsl in xchg and popa xor aam dec xchg mov or mov mov dec jmp xorl sbb pop push lcall mov xor mov pop sbb fisubr push or ret outsb movsb dec add roll jo add sub adc mov pop sub test add xchg jg and test mov jecxz test movsl add xchg cmp dec out cmp xor test ret pop xor xchg sbb mov nop stos cs add sbb aaa jg cwtl daa sub sub pusha inc push daa jmp mov int push xor pop xchg xor popa xchg or sbbb iret xchg xchg add dec xchg and add loopne inc sub fwait mov mov int or add push (bad) and test roll and pop push (bad) mov mov out xor daa and add cmp push pop movsb arpl lret add add mov loope mov cmovp lods pop and mov or arpl icebp mov push sbb sbb inc xor or sbbl mov and jle dec dec mov lcall xor and es or (bad) sub outsb cmp lret or mov popa shlb fidivrl jnp add lods mov pop cmpsb cmpsl icebp inc mov mov or adc push adc inc xor cmpsl or and and fwait mov sarb cmpsb xor inc sbb cmp mov sub push xorl sbb int or ret lcall roll mov or or xor xor pusha xchg xor and xor add xchg arpl popf add xor shrb imul or sbb aam jb mov jecxz mov sbb cld es ret adc or lds xor push or cwtl dec jmp loope lret test lods mov fist push shll mov cmpsb or ss inc add daa xchg es rol jp in lret inc cmp jecxz lods inc leave rclb lods insl mov mov add push and or ljmp rolb arpl pop jmp sub test mov pop nop add mov and or hlt rorl pop popa (bad) daa xor inc pop ds mov sbb insb stc cmp je add jnp scas lea in out leave outsl pop roll mov rorb inc push or inc sub ret dec mov hlt (bad) mov fstpl rclb rorl outsb pop or rcrb shrb dec adc sbb mov xor int dec push mov (bad) rorl shrl (bad) popa xchg and imul add insl cmp lods or or clc and lcall xchg mov jne dec xchg and xchg sti daa movsl addb xchg popa adc xchg mov and or push ret pop sub push mov push cmc inc pop and dec sahf add push push cmpsl inc and lock into aad rclb or out xor and ret mov gs test add pop divb (bad) fsubrs mov and (bad) mov lret jp add mov add mov insl sbb xchg fucomi or es ror xor jecxz es (bad) dec inc (bad) icebp outsl lret shll insl test ss sbb and cli adc or sub ds or (bad) mov outsb cmp pop cmpsb dec imul divl adc add mov scas pushf mov dec xchg add mov popf int3 fld bound fadds add push insb sbb mov dec sbb inc adc mov cmpsb inc add mov test and ficomp push addr16 mov lea pushf lea and mov push popf sbb int add repnz inc or cli dec xor addr16 add arpl mov add or in jns xchg inc dec inc or sub lret nop jge sbb jge adc and sub pop xchg scas pop push jo adc push lea or rcrb mov adc mov mov inc movsb inc push test aaa add je test cltd sub testb add mov jns xchg sbbb cmp or pusha adc dec xor sbb cwtl xor imul (bad) lret sbb and fldl add adc jmp mov xor push mov sbb mov xchg push lods push pop and inc and sub test cwtl fadds xchg je pusha sub pop fnstcw or or and loopne lods pushf fnstcw add bound int3 leave mov pop lret movb jno pusha jg daa lret push bound and insb bound das test psubsb add xchg aad and cltd fstps xlat loopne mov push ror shlb sbb push int mov or nop inc xor sahf push andb sbb loope addr16 aam dec pop pop mov test lcall insl jno mov cmpsl push adc or inc call dec rcll (bad) inc jmp ret or mov pop leave adc or or lret mov and or mov in cmpl add test push subb ss test cmp xchg mov cmp or mov mov add and add mov xchg mov add (bad) sbb and cmp mov aas rcr (bad) fdiv daa lret dec mov sbb inc dec lret push jae jle and push (bad) aaa jnp sbb loope add xor sub push rcll cmp push dec (bad) jns sarl nop inc pop pusha pop pop ret xor lret adc jbe test inc or adc imul mov movsb pop pop mov insl xor xor inc mov in pop adc andl add pop arpl andl std and popa les movsl gs add ret pop (bad) push sub pop pop push mov or jecxz and test lahf mov adcb mov or bound dec mov (bad) xchg adc cld mov inc sbb gs pop sbb imul mov std push or add mov cmpsb pop (bad) pop sbb or xchg inc dec push or ja cmp lea push lret cmp push call lea inc aaa inc cmp aas pop fcomps pushf cmp jnp dec lahf dec arpl mov lods add aaa or cwtl mov pushf xchg pop sahf add xor pop push xor loope jmp cltd xlat adc outsl or sbb sbb add or adc cmpsb push ss lock ficoml dec mov mov jg xchg lods test dec mov aaa pop lret xlat adc dec pusha or add push mov stc ss push mov mov enter sarl jl cmp enter or loope mov (bad) sbb cmp sbb add inc push push push dec pop sub iret andb (bad) jp dec test leave mov gs call popa sub (bad) xchg lds add adc inc adc cld xor jge cmp fnop or mov cmp leave sbb xor ljmp shrl add or push and and dec xchg inc push sbb pop dec pop daa mov cmpsb add dec sbb mov xor js sub into sbb adc mov dec lods scas or insl xor popa push rcll inc in or and stos fwait xor int3 adc test outsl js or pop rorb test sbb push sub sub pop inc dec mov xchg sahf mov lods inc fistpl adc shlb sbbl xchg add jecxz jo adc rep mov (bad) fs push xchg xor mov or test fnsave mov aaa mov inc lea subl jb shl sbb cwtl xlat into xchg mov (bad) dec inc xchg adc or inc pop fisub add es repz sub mov ret stc insl cmp loope and or dec sbb cli adc mov mov mov and cmp push mov cmp mov push jb inc pop mov xchg hlt sbb lods mov aas sti subl xchg or outsb lea dec lock insl imul test xor sbb test push inc xchg sahf rolb daa test rcrb add lret pop movsb xchg scas sub pop sti sbb xorb pusha iret dec sbb testb fiadd xor addr16 popa adc int3 fidivl jmp mov movsl jnp push addl and ss lods push pop add push cmpb lods jne pop cmp pop pop lret xor sbb int cmp dec sbb and adc adc adc adc dec daa dec xor iret fisttpl dec jo add cmp (bad) int add xor lret and movsl adc in sbb push jecxz test mov jno dec daa sbb lods xor push cmp inc dec pop rorb sbb fs andl add mov adc cmp and leave add imul roll pop sub mov cs (bad) faddl arpl xchg (bad) add inc or or adc inc stos sub sub sub jmp sub addl out out imul or jno jmp subb fcompl add movsl rorb or pop enter mov push popa cmp pop fnsave fs fistl sub xor push bnd subl in shll jmp jno fnsave mov mov mov sub lcall cmp and repz (bad) nop push dec sbb loop sti dec sub call xchg xor in cld sbb mov sub and dec addl sbb int3 xor aam in call cmp mov dec mov xor xchg or jo dec or cmp mov adcb push test das arpl add sub movsl lods clc xor mov jne adc pusha jno rorb add ss push add cmp cmp in dec xor dec fiaddl ds or test outsb insl add imul test movsl xchg adc bound jmp cli xchg aad xor mov push mov adc pop add or (bad) in inc and lret or das pop mov bound lds popa test and xorl mov xor xchg or rol sbb and mov loope adc lret xor xchg lods mov mov sti mov (bad) mov inc xchg mov insb imul ret mov add sbb or (bad) jecxz push adc imul mov or rcrb mov loop mov sbb pop pushf daa ror jmp into push or xchg pop xor adc (bad) scas xor xchg inc or mov adcb test sub gs xchg outsb push push js jns xchg mov xchg or insb inc repnz aad mov cmp outsl inc out add xor cmp add dec sbb add mov or cmp mov test lods and dec pop rolb inc movsl add inc adc cmp mov and lret jb frstor add mov sti or loopne jb dec mov pop fnop dec dec xlat xor pop xor xchg or mov pop popa sub jo in mov int jp xor jno pop or push stos pop (bad) jo inc dec outsl lret mov daa adc lret rcrl inc xor cmc gs jns rcll add xchg in rolb adc stos push and sarl or xchg push gs adc push inc fs test sub xor loope loope inc cmc sbbb cs xor xor adc ficom aad mov ds pushf inc sub xchg aaa and repz lret adc int3 (bad) je ret adc add pop fsubs lods pop xchg xor sub sub mov xor mov xchg cmpsl mov dec xchg and test dec cmc sbb pop adc adcb das jae ss les lea iret mov sub or or add mov ret cmp popa sbb cmp and loopne pop xorb push mov loop and xor sub inc or cmpl rolb (bad) push adc (bad) jns addb xor add mov pusha and orl xchg jb xchg test dec jmp sbb xchg out in cmpsb mov dec xor movsl inc or daa xor test sti and xchg inc mov jno notb cld sub insb enter or lahf push std xor lea nop sarb adc loop addb xchg adc xchg dec lret dec ret sti test or ret xchg xchg sbb imul fiaddl push xchg fs jne int3 or push imul popa xchg jno pop lcall xor mov es cwtl xchg cmp cmp adcl (bad) outsl xchg mov sbb or sbb xchg add loope or push push bnd inc dec pop mov js pop dec divb xchg xor mov adc rorb dec sbb xorl xchg add arpl sbb fisubr lea and insb xchg movsl inc sbb sbb lock sub or (bad) mov sub mov dec pop adc sub mov xchg stos add sbb pop out dec shll jo add sbb fnstsw cmp or pop ficom orl jo mov mov add lahf inc rcrb and or lods sarl daa sahf xor and mov mov loopne xchg stos dec pop mov adc jns les mov test cmp icebp add pop add or test push mov adcb push in sbb jl push mov lods fs xlat lret or xor add pusha mov rcll movsl adc (bad) test incl es loope sub push insb ret lods mov out cmp and insb iret pop (bad) loop add adc loop xor and arpl mov shrl mov xchg cwtl arpl les pop xchg push test js lods out insb sbb mov mov and xor mov daa or xor or mov subb rclb (bad) cs test sub pop sbb rcrl jnp aam adc je ret leave or xor imul xor xor inc icebp xchg stos or lods adc and pop punpcklwd dec rcrb aad and sub adc rclb mov daa add iret jmp and gs add add xor pop fs pop jge mov sub and pop fistpl mov or mov mov sub bnd pusha or xchg scas sub pop xchg int3 mov push ss call mov lret (bad) repnz mov dec lods push (bad) ss sbb sbb inc repnz xor cmpl data16 or mov lods nop add faddl jp xor or add jo push (bad) pop xor (bad) gs loope or js or mov movsl repnz loope xchg and adcl sub sub divl fwait nop pop jnp lods sub movsl imul sbb ret imul pusha pop push add jmp mov cmp push pop add or push mov arpl mov or (bad) rcrl test xor js loopne or inc adc add push int3 mov aas pop cwtl mov andb outsl sbb rorb add call mov lret in cmp push mov jnp push test loopne sbb nop xchg adc mov sbb cmc push inc cltd inc jge pop lahf aaa (bad) sbb add mov inc jmp push add mov dec cld adc movsl bndldx addr16 pop sbb das jno add mov andl pusha or hlt dec add loopne sarb cli ffree add push xchg xor sub sub xchg sub or int lret nop adc lea es and mov lods popa add and outsl jecxz pop add sarb test aaa (bad) rcrb (bad) xor popa lea xor dec inc fild xorb inc pop pusha andl pop sbb mov push push les clc cmpsl inc sbb push adc test xchg mov lock movb or addb add inc jl add add fisubr xchg adc rcrb sbb xchg push xchg and dec sub push andl inc and adcb or mov vcvttss2si sbb jge and add push push loope cmp mov pop cltd pop loop fbstp mov inc or dec mov inc add cmp rcrb fs and xor icebp dec adc les jo add jne loopne mov pop push dec dec ljmp inc movsl (bad) sbbl sbb push sub push jmp adc roll les jb rorb leave (bad) adc or mov mov add and push xchg mov xchg mov mov inc or rclb addb dec shrl rorl aad cmc test mov ret or mov std fdivr push inc pop shr pop add dec arpl into loop inc cmpsb orl rorl mov xor pop sbb pop sub ds lods nop xor sub jp add in inc add movsl sbb test pop mov cmp mov pushf xchg push popa lea sbb xor mov cmp push arpl mov push xchg mov cwtl lock lock inc push inc cmp sti add and add sbb stos es push test pop loope gs xchg (bad) push pop repnz push les imul xor or jo test sbbl push and cmpsl js or jp sub orl jno xchg popa (bad) testl mov or daa push aaa aas add (bad) push fwait sbb mov or adc (bad) (bad) aaa lea mov inc rcl ret aam out ret ss pop faddl leave xor ss push xchg flds enter pop pusha fisubrl cltd push test shrl shlb shrb adc outsb hlt pop inc push xchg mov (bad) cmp insb xchg mov or push sbb enter das cmp sbb cmp repz fldenv adc nop add js test shll ja mov adc (bad) pusha mov sub xor test popa inc (bad) fcomip ret dec and push leave sbb mov insb dec movsl les mov cmp es or popa push fildl in mov bound jmp aaa push pop xchg fs jecxz cmpsb lock pop cmp add xlat popf and push stos and jecxz loopne enter ss push sub in cmpsb lret or push sbb pop into mov pop dec jne add (bad) es inc loopne mull xchg movsb inc or test test mov jne jp hlt das cmp pop popl fadds int push push add sub add lcall (bad) push xor arpl jae adc adc or and sub test fld imul iret xor add or cmp mov cmp pusha jl xchg pop sbb mov inc dec nop test jge xchg xor mov lods mov push and inc mov mov pop cmp lock sahf (bad) jbe xor fcompl stos rorl aam mov dec xor dec (bad) cmp cmpsb (bad) gs and (bad) pusha andb sti xchg andl pop sub jecxz mov mov icebp cmovnp stos push fmuls sub addb add ret sub adc test inc dec lds popa push dec or push inc inc inc cwtl jns insl or les mov cmp jns stos or js push repnz sahf ss popf xchg xor js (bad) movl sahf xchg jne or xchg inc inc lds imul fwait fwait mov bound adc push lcall mov scas cmp or push xchg popa pop (bad) (bad) pop add nop mov jmp xor or pop mov adc lods loopne mov adc xchg call mov (bad) aam mov stc jg lcall sbb sub xchg xchg out dec js mov es push sub jmp push mov pop inc mov push ljmp xor or inc loopne and xor insb add test dec imul fcomps jb pop inc test pop push cmpsb pusha and jno push sub ja popa jecxz out addr16 push push adcl sub imul dec inc inc arpl jne mov push xorb rcll xchg xchg (bad) ficompl ss ret ret stc fnsave adc push hlt (bad) mov adc lock sarb xor andl iret dec add and fwait fs mov dec les popa gs out pushf test push mov xor dec inc mov cmc stc hlt or cmp sbb jp stc aaa sub mov push cmp or xor std mov sbb add adc lcall adc movsl mov and adc aad je nop add and jb sti rcrb daa sub hlt xchg xor sbb add inc jnp xor push aaa pop arpl sub adc or or inc bswap inc xor sub iret and popf mov int je sbb psllw pop pop or and pusha out or andb iret into insb dec test insb fsubs add sbb add mov push add jbe inc or xor dec lea adcb sbb xchg and fnsave xchg dec out ss pop jle les call jl (bad) lret movl push xor loopne mov nop xchg push mov sbb mov cmpb push xor add add or xor adc sbb or xor test test jmp js das popf or mov inc dec adc pop mov or or add fwait dec xchg jb mov scas and rcrb js xchg mov mov dec or and sub push add adc xor popf dec lods fs or sarl (bad) or sbb xorl and (bad) pop cmp jp or dec test mov xor (bad) or xor sub adc xchg dec or inc mov dec push fs lods push xor or jecxz and clc movsb xor sub or cmp andb movb or sahf sub je xchg test dec xor inc mov add jl mov sub movsb mov daa roll daa subl add xor cmp jb in dec xor cmp aam js sub test movl lods xchg xor rolb sarb lds aam cmp ror add subl mov in lret mov jno xor and outsb test push sbb sbb popa or arpl dec sbb add mov inc and cmp test js cmp dec jno add or cmp movsl add outsl sarb mov pop cmp movsl ret cmpsl push ss or and inc xor push movsb sbb bound or fdiv (bad) in imul sbb mov or or test test dec jge rol inc aam or dec mov jne or dec or sbb pop adc xchg andl iret push xor jmp mov mov mov (bad) rolb push add pop jo lea xlat push in sbb cmp or pop sbb inc xchg or movsl int (bad) or imul dec xor inc mov add les or test aas push xor sub and xor aam xor inc add fist or enter and sub sbb jge lods sub int inc sub lret into shrb test adc xor or sbb lds loope popa adc loopne mov xchg loopne adc adc scas sbb mov mov xchg or arpl add test xor lea sub mov xor bound inc jecxz js xchg loopne jo or pop aas cmp dec xchg cmpsl push shrb pop add mov insb int pop dec js iret pop or sub mov pop not xchg pop inc fiadd xchg rorb loopne ja add adc add dec aaa pop or (bad) fldl or cmp xor fs iret fist mov xchg jmp add les into addb inc (bad) xor pusha imul mov or xor iret jmp jmp adc cs popa lea nop outsb out lret sti push xchg add icebp adc inc ret cmp adc add mov mov or pop (bad) sub sbb andl dec add jmp ss das cmp aaa mov (bad) xor mov data16 xchg pop xor adc push and sub mov mov rcll inc fild adc pop and cmpxchg8b fisub inc mov mov xchg xor mov into shr mov rol pop dec subl add inc ja push inc (bad) les incl popa gs test fwait stos aad add adc aam xchg mov addb xchg mov popa mov cmp cmp scas adc mov cmp outsl in or mov and add jg xchg loope,pn test sub jae,pn xor dec test cmp mov mov adc and push and pushf xorb xchg andl sub cltd inc test loopne adc push mov mov lret imul and push cltd pop add inc cmpsb cmp jl dec sub lahf push mov jl cmp pop adc mov pop mov xor popa xchg add add mov dec add sub push sysenter int3 pusha enter and inc sub sbb inc inc mov xchg add add mov push aas imul xchg sub ljmp test adc jne jge xchg xor ret fimull mov ret dec rorl pop jle pop xchg pop dec aad push xchg mov mov mov js mov lcall push mov xor shrb jno rcrb dec fcompl stos sub pop lcall (bad) aad popa or and pop imul add or pusha mov xchg scas das jle lods xchg push arpl adc repnz ret inc xchg fwait ds test mov sub sub popf push push nop addr16 push adcl push rolb outsb mov insb and or add or (bad) add sbb test inc pop push xchg and lock sarl inc cmpl or lods xchg nop push mov and mov cmc ss add fisttp dec sub bswap adc ljmp add add in sub imul add outsl int3 test nop lds pop jl xchg fstl push mov and pushf (bad) ss enter jnp sub dec popf and and adcl or (bad) mov inc cmpsl loopne pop xor inc in mov arpl rcrb insl mov add inc test je sbb ljmp dec add popf inc cwtl jp fs js or adc cwtl fbstp loop test or mov adc daa rcrb outsb inc jmp xor add jg xchg xchg jne adc mov add sbb outsb hlt les cmp in and dec add and lea inc test mov rcrl mov dec xor fcmovnbe adc sbb pusha inc mov xchg je xor sbb je mov xchg add xor sbb lds pop sbb adc push nop add and cmp or or cltd inc push lods or mov popa arpl or mov mov push xchg cmp add cmp push bound loope xor sar mov sbb push jne (bad) shrb lods mov addr16 aam pushf (bad) sub push call xor lahf movsb xchg inc dec mov rcl sti mov aam insl js mov inc xor cmp inc inc xor test mov cmp addl js sbbb test inc add adc jno mov pop shlb dec adc or xchg mov push dec adc mov and mov sbb or out scas xor inc sub sub push dec popf push sarb jnp divl shr fs or sar in cs cmp xor inc sbb xchg decl or subb fsts xchg mov dec mov sub and jp (bad) (bad) fwait xchg pop pushf and inc xor movsl xor sbb add inc or jnp loope popa xor in push js inc sahf imul sti sbb adc test in test mov pop outsl or mov ret add movsb add add or hlt mov mov inc push nop pusha jecxz xchg sbbl xchg mov xlat sbb dec mov dec mov xor xor and arpl jo cmp inc mov insl inc xchg mov imul mov test mov lea push (bad) icebp (bad) dec pop scas add ret adcl xor xor inc jb mov xchg cltd mov imul jno xor and addr16 sahf xchg xor lret rolb or push inc cmp inc adc xor ds and adc ret cmp inc aaa lea mov gs sub rol pop cmp or js cli and outsl add mov scas ret nop add inc mov hlt add call add fisubl add fdivs xchg test pop xchg adc jo in xchg pop inc movsl inc popa add inc xor rolb movsb dec sub ds mov mov xchg sbb mov pop cmp xchg xor imul sbb ljmp jge out xor orb pop xorb adc dec rcrb push inc or push xor push pop mov aad push inc shlb inc xchg lods adc and push dec repz jo pop imul iret cmpsb popa xchg add push adc dec jmp nop cmp adc mov (bad) fs pop xchg stos xor add xchg xor adc or add xor xor pushf inc (bad) xor push pop mov adcl mov mov cmp cmp imul lds fbstp mov leave sbb add jnp shrb xorb lea inc inc adc adc fsubr aas sbb add push ficoml pop push fisub sbb je inc pop arpl lahf xchg aad adc xchg sub and mov in or or fs arpl adc orb inc and sbb push cmp jo mov mov lods dec mov popa adc jo cltd pop xor mov test xor inc js test mov mov xor cmp mov add mov xchg movsl cmp dec test push sbb add scas andb clc mov push add stos push cmp xor or (bad) xchg xor cmp mov and dec rol pop jo cld push das inc sub dec dec adcl pop and bound mov add idivb push or sbb mov cmp enter xchg sub enter daa sbb mov sub cli adc adc mov xchg insl bound mov adc es xor xchg cs pop jmp sub lds mov mov cmp test pop (bad) pop inc icebp mov dec or ret jmp ret test push in imul mov or mov mov inc add sbb sub faddl movsb hlt imul jb dec ss adc mov cmp fstps dec mov outsb call pop push sbb push mov add cwtl push icebp je sbb inc add rorl lods sbb mov add jmp pop clc xchg test test mov and mov sahf and or pop jecxz movsb sbb lods ficompl stos or jge and daa pop inc mov dec adc mov mov pop dec xor pushf mov popa pusha and or add add add inc sbb dec push popf dec add cmp sahf aaa xor xchg flds roll add rorb add das pop pop and fbstp adc insb mov sub aaa xor sbb lret dec adc stos push bound jnp in add push pusha imul dec bound inc xor adc sbb xchg and pop (bad) cmpsb icebp add daa mov adc dec push add push xchg aaa inc sub fwait rcrb mov cmc outsb aam inc loopne cmp add push pop cmp inc mov xchg add pusha jmp or sbb mov or adc sbb stc in adc test pop and xchg shrl loope or mov nop (bad) call es (bad) and push inc xchg arpl cmp add xchg xchg in pop or xor ret add call clc sub call dec je popa add aaa repnz dec xor push jge imul push rcll mov inc sbb mov lahf test dec or movsb in mov orb test pop cs movsl das and enter fdivs xchg mov and dec cmc and mov cwtl (bad) and sub std xchg enter jae or daa test or pop fdivl ss pop add rcrl add shlb adc lret loope cmp or addr16 inc mov popa pop scas sbb lahf and cwtl or nop mov or inc test or getsec movsl adcl rcl test test mov push jp lret pop lret cmp (bad) ret push or loopne push add mov loopne mov flds cmp adc ret jg xor adc test decb adc push (bad) xchg or popf stos daa sub iret cmp mov pop xor or scas adc sub clc jge adc js lahf xchg insl mov add pop adc sub or lods dec call mov cmp mov aam test add sub aaa xor cmp push (bad) mov sbb sbb and or lret push mov jmp sbb test push adc pusha xchg xchg imul dec movsb lea add fwait cmp or pop add sbb test inc dec sbb mov sbb xchg aaa push xor sahf (bad) and lods xor dec jnp sub fidivl push (bad) call sbb pop jb or idiv mov rcrb jecxz fs add test pop popa adc dec inc arpl shrl mov add fbld movsb pop enter in ret pop out jbe addb push pop add call inc (bad) pop sbb xchg movsb ret insl sub dec inc jnp xchg aaa lea jnp inc cmp out mov test stos mov lods out mov xor insb xchg les mov leave xchg jge sbb lea sub loop mov push pop adc jb hlt and int fmul jb jg push add and ret mov xor call push popa add fs add pop stos add cmpsb in insl pushf or jmp push ret in cmp adc add push bndldx dec add movsb and mov test or ja,pt jns inc pop ds adc mov xchg add lahf push mov adc pop adc imul fistp push cltd lods xor sbb pop lret dec push (bad) xor shrl sbbb loope and jns orl push (bad) xor inc rcrl add iret and or nop adc or (bad) mov adc idivl mov or mov movsl mov rclb and cmp pop cmp mov sub fisttp jge xchg xchg xchg fdivs add xor adc adc and lea xchg lds leave movsb push hlt sahf sub cli sub in cmp or add inc lret or mov cmpsl dec push push jns xor repnz pop add or pop pop jecxz push push scas fs imul scas mov call nop test shlb jl shr bound (bad) ljmp sbb xor mov fnstenv jno jp push mov jmp jg fldl mov mov dec call or adc add sub ret xor add mov add fs loope xchg xchg dec data16 or dec sub and mov and add or loope test sub xor scas movsl orl jne cmpsl sbb (bad) aam add (bad) or xor or dec adc test dec rclb mov (bad) ss push adc adc xor and icebp fs jmp xor add add sub pop jge add fwait arpl addl cmp rolb add cmp sbb xor (bad) mov add pop jp pop or rorb cmp dec pop test push xchg test jb dec popa push in fbstp test xchg fisttpll dec and (bad) sub (bad) dec dec pop (bad) add std and (bad) push and mov mov rcll xor lods lock andb mov (bad) adc and cltd (bad) lds popf aam repnz push xor arpl sub hlt leave and sub jge mov movsb lea xor sub test mov or pop mov add imul push jp inc mov pusha add or imul and inc nop inc add sbb inc sbb imul (bad) sub inc push sub adc or push (bad) in lods sub imul pop das repz outsb push test xchg sbbl sub pop (bad) test add mov test sbb adc lret pop and dec push mov (bad) rcrb pop lcall rcrb les divl shlb mov pop sbb rorb aas lea mov das sub dec mov and add std xor xchg lds xchg mov mov aaa xchg fsts test test lods xchg popa or lods out jns dec add mov xor popa xchg nop sub dec or mov icebp ss sub mov (bad) dec inc or test sbb lret and jge shrb pusha popa lret mov cmp sbb ja dec cltd add add jno arpl lods or sbb cmpsl sahf push inc or call dec sbb fldt fadd adc aaa pop shll mov jno aaa je dec push (bad) and insl or mov xor push mov add pop repnz xor mov adc pop lock lcall push sub leave (bad) scas xor test jne add xchg mov cmpsl lods testb xor (bad) and dec loope sbb push ret (bad) aam or inc jbe dec lahf sar xchg mov in fs sahf push sub cwtl inc inc js (bad) xor sub sbb and test pop push push dec or add xor and dec fucomip and repnz mov xchg incl leave fwait add dec xchg inc imull and cs inc cmp sub and dec movsl sbb adc sahf dec bound dec and xchg ss repz lret jmp iret add dec sbb test cmp je pop adc or or mov outsl (bad) jb mov sub sarb or xchg mov rcrb adc loopne and xchg cmp rorl fs pop aam mov lods add add rcrb lods rorb cmp add add and lret xor stos inc xor inc pop push sbb fnstcw push popa cli jmp xor (bad) test pusha xor mov add lock pop int movsl sub or xor (bad) fdivs adc xor insb or (bad) xor sbb repnz xor sub adc mov inc in cmp sub mov sub cmp xchg inc addb push shl mov pop xorb aas mov adc rcl mov movsb lcall cmp rcl mov and aam adc jg hlt inc imul xchg add sbb cmp inc lret fmuls cmp add add and xchg or push dec dec mov or dec (bad) mov jns push jp movsb inc add int3 dec xor sbb xchg cmp lods test lret int3 mov push lea adc inc xor and dec sbbl cmpsb (bad) mov mov push cmp lock inc mov xchg pop dec fnstenv mov jnp and inc imul xchg outsb xchg xchg lock sub movsl pcmpgtb inc imul adc mov sahf and push daa in push dec (bad) repz movb xchg jae (bad) mov push orb add cs sarb mov je loopne adc inc push mov or jbe nop push loopne push (bad) mov xchg add fs jl lds xchg cmpsb jno mov lods dec dec cli dec xor jne out pusha adc xor pop sbb add sub xchg arpl adc inc sahf data16 sbb add out xor cwtl mov push or daa and faddl scas test loope fldt pop dec push adc sub adc lahf push mov in xorps shrb in xchg lock inc or add bound movsb mov fistpl jbe and les repz fs inc dec loopne or mov or in iret inc testb add mov sbb add (bad) fstpl sub dec (bad) sbb mov ss add sub insl xor mov jo xor xor dec mov flds iret xor inc ja mov (bad) hlt push (bad) xor popa rcll call sub push pop jns xorl cmc pusha lcall push push adc pop sti andl push mov fucomi movsb add jge xor shlb xchg xchg inc ret or mov sbb inc push insb and cmp fist lods lods mov sub inc sbb lahf add sub roll or mov les jge or pusha js (bad) mov int3 jb test jnp adc (bad) add lea rcrb sub or inc cmp inc dec aad push inc pop pop add add inc jno inc les dec add rcll mov mov ret lea setp in add xorb lods xor ret dec loop outsl push inc push push pop (bad) test and mov and xchg xchg (bad) dec enter (bad) xchg mov pop xchg mov inc pushf (bad) pop sbb cwtl mov movsb shr adc add aaa roll aaa add mov mov xchg popa mov adc rolb mov popa and mov or cltd mov aaa cmp out adc xchg outsb aad adc cmp xchg ds leave addl pusha daa sar insb or add dec sbb and call fldt add sub adc call adcl mov dec and mov xorb xorl sbb loopne cmp and (bad) mov xor jns insb inc aam ficompl jo and and jo fwait mov lods xorl les inc sbb adc add or lcall add ficom add stos sub sub mov aaa add cmpsl fs or aad pop loope xchg inc insl dec push add sbb xlat fnsave arpl or aas imul lock and dec insl jnp clc adc xor test jns ret data16 (bad) mov lret pop dec fsubrl mov fs rcrb imul fcmovnbe shrl mov (bad) add in and icebp cmc adc cmp addb cmpsl mov les add and aas mov adcl das rcrb push mov and (bad) xchg sub shrl fisttpl mov out xchg xor jmp mov gs push sbb cmp pop push add pusha or call mov pop mov rclb xchg fwait cmp imul jae movb addr16 rorb (bad) sti push mov leave leave push mov je add sub mov xchg xchg lock xor push (bad) xor jmp std (bad) xor push dec ljmp in xchg rclb xchg rolb sahf or (bad) (bad) popa je cli sbb arpl inc imul dec insl dec pop fildll pop dec data16 out lret add cmp mov adc dec mov outsb jge adc jmp add rorb pop ficom cmpsb xor js jnp sbb pop mov jbe test or push cmpsb and add cmp xor (bad) jbe cmc and add les pop lret push mov add push xchg xchg mov adcl test gs xchg push (bad) in and inc push loope mov xor lock orl mov mov mov lods icebp add push push and and loope rorb cwtl fisubl jbe pop dec mov iret out add add rolb jae pop mov fcoml jo mov mov lea xchg or sbb dec in add rcll xchg (bad) jecxz dec or int test inc xchg bound xchg subl dec add push and pop ds sbb mov mov pop push sbb add cmp addb cmp fiadd or lar and mov mov mov mov jae aaa and sub mov (bad) adc mov add test mov dec lret cmp pushf (bad) sbb gs les dec sbb push lea pop xor add lret sbb popa in std out nop sbb pop repnz inc ja sbb inc mov jno xchg insl pushf sub into and xor jne imul dec mov and (bad) out flds fucompp xor adc imul xor add jl sarb add out lods rorl loop loop adc je pop int3 scas gs nop loopne (bad) xor test fwait out add xchg dec nop add push pop enter aas inc add push pusha add add pusha sbb xchg rcrb ret or cmp pop mov inc mov test dec fildl imul mov and fwait mov jecxz add mov shll shl fisttp mov jmp mov jo call jno arpl xchg std test lock sub xor sub sub lock and xor shll js insl add mov push stos (bad) lds inc pop lods adc js sbb push sbb mov pop cmp add loopne dec or mov sbb mov push insb or or jo add mov in insb pop mov xchg mov cmp add push arpl lret dec js outsl mov push enter (bad) jge add add arpl std aaa in adc lea adc sub into les cmp xchg jb inc bound gs cvtps2pd or test xor fldl mov xor pop or dec mov mov mov mov mov or push or dec (bad) adc gs movsb push adcb push xor mov jmp or cltd lods adc fnstcw lock inc repnz add loop popl (bad) insb dec fs jecxz mov lar ret pop loope les and pop push or xchg and add sbb inc lods adc sbb sub xorl ss or pop popa pop xchg loopne xor dec pop xchg mov mov adc pop mov mov dec cmp push adcb xchg sar dec add out push inc xor add lock roll jo dec pop fnstenv aad aam xor adc sbb mulps mov push iret inc adc xor mov inc lods and stc dec cmp fildll mov ds fmul mov mov daa and sub push xchg mov xor adc push sub aaa jno xchg mov cmp cwtl pop pop mov rol add xor xor adc loop push js pop aaa fwait mov ds loop imul sbb insl cmp add xor dec push push or push push imul (bad) inc cwtl inc sti jne push inc (bad) aaa in and popa (bad) movsb out xor xchg cmp xchg add pop test dec (bad) mov or jb dec pusha push pop jbe lock add jecxz or test sbb mov push imul add (bad) mov jae es xchg int enter adc scas icebp out inc dec es add jmp add jns and inc dec push mov popa add sbb test xlat adc inc (bad) adc push andb cltd fs add das mov sbb mov adc movsl cmp sub xor lods mov xor lcall push imul or mov xor mov xlat scas pop mov jns jge dec xor add pop mov mov dec dec cmp mov test jmp adc fwait rcr ret roll int3 fldcw and lret gs imul popa aas mov xchg std and and jno inc dec popa xor sbb addb add cwtl jno imul std nop sub and sbb push add jno sbb test shrl fdivl add mov and rorb xchg sub lock adc jb inc and push (bad) xchg xchg stos xlat inc or push add lods add repz (bad) mov aas pop cmp insb gs sub and ret dec xchg mov pop js adc xor jp fs loopne jmp fsubrl and and into push xor hlt push (bad) add dec and or mov add pop loopne push popa add fwait add sbb or dec arpl add dec sahf xor outsl lods outsl xchg shrb arpl inc adc sbb cmpsl fcom mov roll je mov xor sub (bad) xchg xchg cltd mov cmpb popf lea into nop mov inc leave repz push fidiv add jecxz sub mov sbb loopne ret mov mov jp mov mov ret or js imul sub xchg aaa add rcrb push mov loopne pop add mov push pushf dec lods mov rorl inc adc daa sbb or xor es sarb bnd xchg mov movsl xchg add imul add add loopne lea test mov dec fstpl mov add mov mov cltd rcrl jns cmp pop enter mov or dec push dec cmp sbb dec pop xor ret mov add add push xor dec push test add dec aas or and xor aaa rorl and fistpl xor dec mov subl sub adcl sub or mov pusha dec mov mov es jp mov push or push sub xchg lods add xchg push ret sarb bound push rorb add pop push arpl (bad) dec je (bad) lds xchg into pushf or fcomps mov andb scas push xor sub mov rorl jns loope cmp xor call and sbb pop lods lods aad fidivl mov pop outsl sbb or test test mov pop fdiv gs adc add test add sub fidiv xlat or jp and cmp or push inc xchg dec inc push cmp orb adc add add dec repz sbb cmpsb xchg xor jecxz,pn in add xchg cli dec ds or cmp cmpsb mov sub jne add stc xor addl push xor add pop lds inc or add jg xor push mov pop cmp dec xchg xor sbb outsl xchg lock inc (bad) ret add sbb inc sub and add test add leave and movsl ret jns enter add adc mov shrb adc ljmp jp mov flds (bad) test mov movb dec call push addb or aaa jp fs push loop sti xchg xchg adc mov mov and outsl (bad) add push or inc jmp xchg loopne mov das ss sub inc xlat aad arpl lret fimul and adc and mov mov fnstenv jno outsb cmc mov jmp dec mov inc xchg and and insl pop lods mov xchg xchg xchg iret or mov or cmpsb lock gs fnstenv test daa scas mov dec xchg and inc pop pop enter push das or add and rcrb aam inc pop mov out xor or push and mov outsl outsl lea icebp jp imul mov fistpl dec call and sbb fcom adc ret stc out pusha pop pop or pop and adc sub rcrb aam push cmp jne dec lret cs add jb jno and aam or xchg sub dec shll adcb divb (bad) sbb bound dec out push sbbl test test cmpsb sbb cmp cmp push insb stos fs orl not or into mov add stos mov cmpsb aaa incl adc and xchg cmp mov lods inc sbb mov inc test mov sahf pop fidivr lcall or outsl sub jle push addb add or add jmp mov mov inc mov inc das push or inc and mov (bad) and dec add sub cwtl mov mov push xchg xchg jo ret add ret cmp push or mov mov jno int push inc add ja add lret jmp cmp push gs fild and add mov (bad) xchg faddp loop push add sub scas push mov xor push andl xchg jmp adc xchg xor and rolb and insl call xchg xor push mov mov xchg pop jmp mov cmp inc arpl inc and stc lret sub test lods insb pusha fs loope popa rolb lods sub mov and pushf dec lret xor movsl xor adc insb movntps push data16 sub lods pop or xchg xor or add sarl lret pop (bad) outsl xorb loopne lea ja imul xchg cld xchg mov add cltd add push rcrl insb lods xor push jle dec or push in notb dec inc dec pop mov mov rolb mov pusha sub mov sub mov adc and pop xor aaa xchg negl xchg movsl addb xor xchg and cwtl mov das dec jl sbb lock lds les (bad) mov mov fdiv sub sub aas lods xor rolb or sub lock jae xor sbb repnz arpl and adc scas test frstor sbb or sbb adc (bad) or cmp mov mov dec push sbb xor xor sub mov mov mov adc shl test cmp test (bad) push adc inc lods or pop sbb dec es and (bad) in repnz adcl adc add pop lods mov imul adc sbb mov daa inc push adcl mov pop and ret xchg stos in nop test or inc shrb xor dec sub sub mov dec mov and dec pop sbb inc xor orl push adc lds push xor cli or mov jl xchg inc xchg mov sbb fsubs sbb movsb aas add sub dec mov mov mov mov and mov pop or sub mov add inc test sahf push sub je xchg cs push pop (bad) mov arpl sub pop jecxz iret mov inc cltd push jbe inc push (bad) add cmp test cwtl push stos jne lea cmp orb pop aad cmp adcl lods imul and mov cmp test sub mov push pop adc (bad) add dec inc dec jno add gs loopne and sbb (bad) mov adc test daa and xor and xchg dec sub das test sbb js cmp test mov mov or xchg dec loopne cli cs cmp mov lea cmp sub mov adc dec adc (bad) cli push cltd xlat mov test sbb stos lock cmp sub lret pop or in and lods outsb rcrl sbb dec aaa mov fbld loope add xor and cmp movl push add inc roll dec sti loope add jge jne xchg outsl lock movsb test push xchg sub mov and cmc adc shrb sbb repz adc xor mov stc xor les or pop arpl pusha dec sahf xor movsb fwait sub movsb daa jnp jns pop adc xchg cs loopne daa das outsl mov insl pop inc mov fstpl adc aas pop push inc adc lods xor cltd rcrl cmp mov pop rolb lret inc sbbb xor sub fcmovnb aam mov or dec (bad) push pusha sub adc mov mov addr16 in sub test add fs mov fldl xchg je sub pusha ret mov mov xor adcb inc mov cmp push orb movsl adc or dec shrb jge fisttpl pushf dec mov aaa adc arpl leave imul imul fsts mov rcr jg cmp inc cmp or adcl dec jp xchg decl xchg mov neg inc adc mov popa xor pop sub and inc or add inc and xor xchg pop or shlb xorl fbstp sub cwtl lds (bad) push subl add and js adc test aaa pop inc test ret push pop test push stos xor or (bad) add add dec lret test xor xor daa bound add rclb nop adc dec jo xchg lea movsl add or xor or xor jecxz stos and sub mov rclb imul jns inc add jae push mov mov add dec jmp dec sbb adc jne mov push out add imul and add (bad) and push or push mov jge les movsl pop cmp jmp xchg xor push push aas in test inc adc adc inc enter lds lock or xchg xor faddl std cmpsb push jp lea cli inc cmp or xchg adc adc cmp leave push lods pop mov or fsubs and mov push and cmp sbb mov mov mov icebp add push jns jbe add or stc jmp xchg xor mov mov xchg push sub dec sbb rclb or jg nop xor sub scas andb sub dec mov sub mov adc aas decl dec frstor insl nop mov inc pop xor sahf dec jmp adc ret xor mov lret ljmp test imul lret mov pop sbb push mov add inc movsb mov int dec add add jbe pop inc (bad) xor inc cmpsl inc subl xchg add icebp cmpsb add test or fmull or popa movb push fist sar and and and ss dec pop lea sbb mov gs adc imul push mov mov xchg xchg mov rorl sub cmpsl and (bad) leave lea dec push and adc or imul pushf nop pop popa lea inc push test imul and cmpsb inc pusha pusha adc inc add sub push add cmp pop add jmp rol mov inc ret dec adc inc jnp fwait test add insl push pop (bad) imul jl add push loopne mov inc orl xor and shr adc or and jmp jo mov sbb in insb xor shrb cs or arpl insb or pop cmp and (bad) cmp jbe leave ds or push sub xchg call rclb add ficompl cmp cwtl test imul lods arpl push repnz call mov inc dec and pop pop inc inc lock mov jnp test cmp xchg jno inc fistl loopne insl inc mov xor xor sbb pusha js pop xchg cmp test pop jecxz insl out add add and rcrb (bad) mov xor mov inc jbe cmp popf scas rolb sbb push fidivrl push dec or or pop dec xchg xor sub in movsl inc sbb push ret and loope sub rorl xchg push daa int3 mov adc xchg xchg std push push andb dec xor lock daa insl loopne pop sbb sbb (bad) popa insl add cmc sub imul fs push add dec and or and rorb adc stos or subb inc sub cmp mov ds xor adc jbe pop xchg dec xor mov je adc fistp lock daa js bound (bad) add imul movsl inc xor xor and inc add or sub xorb popf cmp dec xor ds lea add sub xor cmp pop or (bad) lahf dec add imul cwtl pop test daa dec add scas imul push pop or sub pop xor mov mov xor rorb or and jecxz in andl xor sbb pop xchg inc or mov add push cmp enter inc adcl movsb out and jp push es outsl inc jmp inc push xchg add inc arpl imul sar cmpsb and movsl lcall cli test pushf xor inc stos and ret and sub inc dec arpl stos pop aam mov mov bound xchg inc (bad) dec sub je sti inc push sub sub mov cmp movl xchg sbb inc ss test jg and jmp pop adc xchg out sbb pop pop push xchg xchg or bnd lods and (bad) mov jb pusha (bad) lock jo mov in in pop sbbb cmp and adc pushf rcrb xchg (bad) push aaa push test push insl arpl mov mov test inc and popa mov stos int inc pop les lahf xor sbb leave xchg ficomp cmpsl test sub fwait ret les int3 push add push addl sbb add (bad) or or (bad) inc cmp movsb dec and (bad) or push aam push icebp push pusha setbe cwtl xor xchg xor mov add and daa sti push inc mov movsl inc std and xchg shr lock inc add mov in add xchg mov pop sub fsubs nop xor ss test fldenv and push dec mov adc adc xchg insb inc xor mov pop dec shll mov shrb xor mov xor es mov dec stc xor or icebp cmp or jo push iret fwait ret movsl lea and push adc inc mov or dec addb xor sbb pop sbb push mov mov adc push mov push mov sub jne aam adc popf insb mov push aas cmp xor or add adc loopne inc pop ret cltd popf stos ret xchg leave std sbb xor fidivrl or loopne test xor mov cmpsb rorb xchg imul jmp inc sub pop inc and xchg pop sub incl repnz scas jno add xorl sub jno popf push push and mov das sbb mov inc sub inc mov sbb push xor mov or loopne and push dec jmp sub xor add aam xor mov pop sub pop push aaa pop or xor add mov add and cmpsl push lahf test dec dec add add insb and mov add add inc dec sub add imul cmp dec inc fcoms pusha (bad) je or add xor sbb jo ret inc or xor and or xor nop push push push clc inc (bad) mov inc push jo je inc add stos sbb xor imul add jmp loopne ja aam push imul adc push xchg loopne add push mov sub icebp dec or mov test (bad) mov data16 add adc pusha dec (bad) add movsl addl adc dec pusha (bad) adc popf shll and lret mov (bad) mov mov sahf (bad) mov outsl adc (bad) mov out dec push push (bad) mov xchg mov adc add ds nop dec nop lods pusha adc nop sbb enter inc cmpsl jmp adc cwtl inc fiadd xlat add mov mov sbb arpl pusha sahf push pop jo shlb fs loope pop dec inc outsl and pop jge push loope and mov ss js dec xor pusha insb loopne ljmp cmp push nop sbb cmpsl gs and movb or dec das jns sbb mov scas push lods mov rorb mov ret mov aam xchg inc stos or jns sub and mov and adc inc sbb or xchg add adc mov push popa dec adc popa inc dec jp cmp jmp test xor cmp into and daa mov dec ret mov aad jo inc mov and and adc jp xor lahf or push lahf and cltd push ja movsb pop cmpsb add mov sbb popa xchg inc jecxz mov mov push in mov sub xor and sub out mov xor (bad) addl (bad) mov adc inc lods mov addb mov sbb nop sbb decl add outsl out sbb arpl adc adc or push adc xchg lea addr16 call lret xorl jmp sti xchg add dec mov fiaddl dec addr16 sbb dec lods xor aaa add adc or adc mov xor push cmpsl loope adc es shlb add pop sub pop pop pusha push pop and ljmp push adc jecxz fdivp sub dec test rcr xor mov clc sub repnz sub and movsb mov es cmp push push add push jge or addr16 inc int3 cmpsb inc aaa inc rcll pop add lret sahf es xor ss pop inc push add or adc test jbe (bad) fist clc xchg xor sub aaa hlt lods loope sub insb inc dec dec xor in xchg mov sub sub sbb xchg push inc mov or bound add imul xchg je rclb (bad) mov mov pop sub adc cmc ret cmp adc xchg mov pop (bad) int inc sub js lret jo cmp stos sub inc and push out mov sbb loopne mov clc and sbb mov jbe sub sbb pop cmp add fidivr (bad) xchg arpl adc add outsb test cmp fwait int mov xor add push inc subw je aad orl mov add (bad) rolb call popaw sbb pop sti in mov in mov adc pusha popa add sbb (bad) mov sbb stos inc mov add imulb shr shrb xchg lock sub repz je rclb sbb je je nop in inc popa or jbe pop sbb loopne jnp lods addr16 mov mov rolb dec stos and or cmp rcr gs aaa pusha pop xchg aad arpl pushl call movsl cmp and mov cmp mov daa sub jbe sub adc and dec mov sub or fildll pop mov dec adc imul push dec rcl sbb mov push xchg fnsave enter imul andb aaa popa dec add sbb cmp push sbb push test cmpsl mov xchg mov add pop or mov fs mov sbb roll cmp push test inc add stos cmp cmp or js and icebp sub xchg adc aaa mov cmp lret xchg sub movsb adc mov mov add dec rcrb mov fisttpll mov adc xor or mov pop test std test pop ret mov mov or lcall push push je pop ljmp cmp movsb cwtl scas mov jp fwait xor or sarl add xchg dec leave mov xchg adcb in je add inc arpl inc sbb out push push sbb xchg add jnp das sarb mov rorl lea rol aas jbe sbb loopne or sbb jecxz inc push data16 cmp inc inc out in sub and ret xchg ret pop fwait inc add pop xchg xor sbb add or test jbe add fs mov push popf fs fiaddl test scas nop shll add loop adc sub outsb sbb iret xor mov jmp aad xchg add cltd roll cmp cmc add xchg xor sub repnz jns add xor lea push rcrb js nop sbb or cmp push sarb add sbb inc bound add fs (bad) mov adcl xor daa sub inc mov cmp mov sbb and (bad) movsl ds hlt (bad) aaa mov inc jne xor rcll fstl xor sub dec in mov rep mov ss nop pop fildl add mov cmp (bad) dec dec test fcmove jo xor sbb dec popf add stos xchg add les and sti sub shrb adc pop jecxz or nop adc push xor mov inc cmp gs mov mov les dec add dec arpl add sbb xchg cmpb add (bad) pop je cmp pop insb cmp ret or xchg cmpb insl rorb loopne or cmp or dec (bad) push inc sub xchg mov sub faddl repnz test mov fdivl in arpl pop add popa shr iret aaa cs in scas rcrl push or insb jae xchg xor and pop (bad) xor ret daa enter jl push popa adc out cli xchg cmc mov scas xchg add ret rol and insl jmp (bad) icebp xorb xor loope cmp xchg shrl sub jnp inc pop adc adc cmp xor outsl outsb gs ret jp nop mov mov adc popa rcr sti and push jp lahf fld push nop sub xor test add lods or lds sbb mov insl js faddl dec ljmp lods movsb test (bad) mov rcl dec lds lea je add test pop mov inc xor lods addb jne cltd xor das jae xor add je cmp rorb push xor test or mov mov push xchg mov aam xor sti test nop mov roll fisub adc add pusha xchg xor test sub pop add gs fdivs nop mov aad mov orb icebp dec adc or scas outsb pop stos xor imul js sbb stos and add js in and cli test add enter insl dec mov mov das jecxz out mov (bad) repnz mov dec jb popf in push adc pop or dec adc inc sub in imul inc imulb cmp dec xor jne test or shlb andb adc movsb in insl dec cmp cmp jno inc push push stc push lods inc sub dec jnp or cltd add mov xor dec adc add popl pop js push fldenv (bad) rolb add adc mov imul push inc push jp (bad) imul call mov clc xchg mov push add sub inc xchg cltd jb test sti pop fwait xchg xlat je in dec pop imul pop daa adc lret cmp pop cmp dec lods add hlt mov add adc sub push rcl insb mov mov jge sub cmpsb sbb inc dec int popa inc inc dec aas andb jecxz jnp dec ret adc pop add mov (bad) lret inc nop dec push test mov icebp cltd ss xor fwait in cmp sub ffreep rcll xchg inc call test clc cmpsl aaa mov or add mov inc aas push sbbb jmp inc xchg inc sbb pop mov adc fnstcw call (bad) xor ret jmp xchg pushf test push or inc (bad) jno sarl mov js dec pop jb sbb imul cmp xor sbb jecxz add inc dec repnz or push xor xchg hlt xor and test sbb loopne jns jo test popa or xor cmpb pop and push jb push test cmp push inc mov and push orb push mov sub scas xchg adc or cmp sub addl out adc in push or fsubrs (bad) roll sbb andb and dec xor mov cmovae cmpsb adc xor imul mov js daa dec mov xlat orl jmp dec add add dec imul stos sub outsl insl gs inc rolb dec subb lods adcl mov pop lret rorl pusha xor push cmp sahf test js repz cmpsl xor push out and les pop sbb and jecxz movsl sbb (bad) insl mov mov jl or dec or cltd loopne shrb sub inc stos jo popa je lahf push orb jmp sbb sub push and outsb cmp push pusha divl sbb inc in pushf push rcrb pop les outsb mov (bad) aaa add xchg lods push rcll adc popa mov pusha mov (bad) pop test xor lods dec (bad) test test xchg sbb (bad) or push push mov inc mov jnp adc adc sahf out pusha lea (bad) dec jns pusha and add pop add add ja sbb and aam test xor xor (bad) add outsb adc xchg add inc mov cmp push push push xchg iret cmp divl and popf shlb or push inc pop sbb mov or icebp or test cltd sbbl mov test xchg clc pop cmp sub mov popf push ret test adc pop aaa or and or xor or stos add add inc rcrl lods lds andl cmc push inc push dec fild add xchg cltd test xor movsb icebp bound out add mov insb adc add xchg sbb int3 add cmp push movsb (bad) dec mov mov (bad) lcall nop pusha pusha call test sub cmp lock sbb pusha inc (bad) mov outsl ret jo inc add jmp sub dec cmp jmp and add mov mov and cmc cmp mov (bad) xchg int3 xor push cmp loopne incl pusha and sub sub push into push shrb stos cs push jecxz into pop inc rep fsubl js pop sbb popa and mov add cmp sbb cwtl pop sub jp pop inc lcall adc pop sub inc rol icebp push xchg xchg add adc inc push mov inc popf popa xor loope loope lea ficom cmpsb pop mov mov in dec mov outsl xchg inc movsb push leave out xor and and mov inc test leave bound push movsl nop sbb inc adc das jecxz cwtl lock lods lds push clc xchg bound pop scas mov push and mov mov mov rorl cs add mov push dec cmp fist push inc addl sub pop push inc dec pop add mov in arpl dec sub xorb cmp in movsb cmc std dec sub shrb inc pop pop push mov xchg adc sub aam sarb or insb outsl xchg jno add xor pusha pusha pusha lods (bad) mov xor lcall int3 fcmovbe jp addb dec enter addl test and adc pop pop outsl lret mov (bad) sbb inc xchg adc xchg scas in and push daa out insb add xor cmp lret or in and xchg xor push dec sub adc mov jno lds inc pop popf mov test out push lret rcrb push aad mov or xchg cmp xchg sbb add pusha add (bad) xor inc outsb test inc arpl inc pop or add adc lods and inc pusha push add lock popa jno add xchg adc cmp pop rolb cmpsl xchg cmpsb test popf cmp pop lock cwtl stos sub xor popa dec ret into imul fistpl push addb mov inc test das xor leave xor pop jmp or xchg push jp movsl lds mov pop xorl xchg int inc call dec adc add insl jmp clc and loopne mov adc lret test mov push inc (bad) test dec or arpl mov inc xchg fidivl sub lcall push xor imul rorb je adc add sub andl and adc cmp loopne fildl es xor push sub cltd mov inc and or cmp daa loopne xor dec inc loopnew mov add xchg mov or cmp enter inc aaa push adc cmp and and cwtl sub xchg mov xor push sub dec call pop pop les cmp jecxz cltd outsl xor pop sbb or adc inc xor or and pop loope ror sbb xor test popa loopne add jmp fistl xorl das adc (bad) inc sub cmpsl jmp sbb imul xor jo mov ret cmpsb test dec pop mov gs dec adc xchg arpl arpl divl xchg ret rclb mov xchg or sub cmp sbb pop (bad) xor push xchg sub sub xchg lcall push mov ds push lods xchg xchg cmp js adc sub popa jl sbb daa xchg add push stc push fcoms mov js push or imul xor mov and int3 fs inc push dec sti mov inc and (bad) mov test dec out das jge and in pusha adc mov daa pop pusha bound icebp das and loope je and and and push push enter out incl outsb fisttpll sbb xchg pop repnz mov dec ret cmp nop and jmp into add mov sub pop pop jmp dec pop loop push fildl sbb repnz sub jmp addr16 pop push fs pop fadds mov test (bad) cmp pop pushf pushf add iret add adc pop aam std xor add push pop rclb dec or outsb xchg inc movsl pop or pop iret cmp pushf mov push adc icebp and or addb int idivl sbb dec or cmp jmp sbb sbb pop mov (bad) xor cmpl sub (bad) dec int3 test add addr16 adc divl lret mov inc mov lea dec lods jl arpl ret sub adc mov add jecxz push (bad) js dec sub dec mov push mov mov hlt es cmp fs scas test inc adc test cmc and sub and sub mov pusha mov gs test cmp insb mov push pop adc int ror rolb dec rcll mov dec jo sub jo ret mov outsl sbb or mov jle jmp mov push inc cmp rcrl xor out lret xor adc mov pop loope dec movsl mov insl test ds and addl test (bad) fild nop jne adc sahf mov sbb mov fbstp stos xor push dec xor pop pop sbb lcall ret xor divl mov mov js mov pop nop push dec cmovs push xor std push aam sbb ljmp pop lret xchg cs repz loope add insl pop xchg and inc js xor nop rclb jns jmp sbb aas addl adc inc (bad) jo sbb imul push sub dec mov test mov sti addl inc sbb xchg daa add imul mov or sub ret adc sbb or mov fs push add test in cmp psubsw pop ret mov into xor cmp sbb mov in ret push cmp popf adc dec xor xor rclb inc and xchg sub ss je mov sbb mov push mov (bad) xor and (bad) and dec push into add dec sbb xorb les jo jo dec sbb sbb lea or cmp arpl test dec ret fldl pushf sbb pop mov or and xchg cmp mov pop mov gs cs (bad) aaa test imul loopne pop sarl pop inc jmp or (bad) mov cli mov hlt (bad) mov and inc xchg mov or mov icebp xor (bad) cmp mov mov cmpsb inc push stos sub ds gs jmp inc les test lods aaa in pop insl xchg push (bad) (bad) call pop lret in dec adc gs adc pusha addb rorl out bound cltd icebp nop sbb fidivl jb xor jg jle dec test movsb xor xchg xor rclb lock mov cmp mov xor mov sbb nop arpl push and dec jno jbe fsts sbb dec ss add xor cmc add imul push wrmsr test imul push xor lret lea notb cmp lods add pusha fadds loop sbb jl push inc add (bad) loope adc and movsl sub add or jns or xchg add xor or jae lods lods pop inc cmp adc xor xor add push sub aam dec mov pusha cmc cwtl mov leave leave and stos pop ret lret dec outsb mov dec and aaa lahf adc cwtl or les popf and leave mov icebp or adc rclb pop sub test dec rorb sub or clc mov push xor mov or mov inc jae in push daa sub cmpsb cmp leave mov popa inc out xlat pushf mov adc popf or aaa call mov push push and (bad) or lock or xorb or lcall sub adc sbb stc add rcl dec sbb push fldt push clc inc mov (bad) xchg add cmpsb test xchg jo fisttp and or adc push ljmp sbb das inc dec std add add and jno xor mov movsl mov fcomi mov jo ss push js movb add pusha adc mov cmp sub add add or push mov xor pusha sbb (bad) lds mov or cmp pop sub rol or sbb pop lea add or inc shl sbb scas ja test and mov adc inc fstpt inc sbb and xor gs add popa cwtl xor xchg push cmpsb sbb lods (bad) sub jg popa or mov sbb adc add ds ljmp mov shr lea (bad) ret adcb arpl inc shr popf or sbb and add insl test pop dec sub xchg cmp push fmulp dec jg push subb mov inc (bad) call inc sbb pop push cmp mov pop leave dec aam ret lret adcl fstpt ss inc push mov or lods pop rcrl mov jns decl movsb stos rol xor loopne arpl or in arpl mov daa push pop mov sbb mov int fbld xor rcll aaa add dec jbe and sub mov or or sbb adcb cmp mov push jae test mov adc pusha add sbb mov fcmovnu test mov nop jmp pusha (bad) sub push sahf ds pop add sub and xor mov cmp pop xchg lret mov push outsb mov clc add aaa xchg push aam mov jno adc xor bound addb cmpsl sub pop (bad) lds jmp adc shlb sbb push push xchg popa xor jecxz repnz lcall (bad) fidiv pop pop shlb (bad) cmpsl mov rclb push cmp xchg cmc add mov movsl mov and cmc cmp xor leave mov lret test pop and add fs arpl xor cmp add (bad) adc enter gs mov xchg arpl inc or fidivr call mov push mov lret jecxz sub jge lds insb pushf jno adc pop inc inc lock enter lea jno adc adc pop test sbb mov lds sbb xchg aas xchg or arpl push or mov clc mov sub (bad) mov push mov shlb pusha inc bound popa mov js rcll mov rcl in pop insl cmp push xor pop arpl xor in jo inc mov sub ret xlat add or shrb mov add pop fs lods dec adc test icebp je sub inc mov popa lea icebp xchg sbb and and leave sub lea xchg mov push (bad) adc aam add test adc rol add dec pop sbb sbb outsb sbb xchg daa mov imul jle pop add mov push (bad) inc cmp int xor or ret mov mov mov add inc dec sbb xor and ret push aaa sub imul movsl xor xchg dec xor add sti stc cmp stos or add dec xor aam cmp jae xchg lea adc loop mov cmp cmp xchg adc add jecxz jnp mov lds mov xor lcall push dec out adc sarl push adc push xchg pop or or sub sbb std jl test add cmc mov imul test (bad) adc dec xchg testb or xor push repnz adc xchg jo inc and add adc or mov dec xor pop xlat push test fstpt jo xor add or jnp lods xlat add push and popa lret dec movsb fldcw arpl inc cmp (bad) xor jb adc fs jecxz cmp bound xchg divb xor inc cmp cmp imul sub pusha or mov cmpl ss sbb add shrl jne add (bad) aaa cmp add pop pop out packsswb lahf fwait lods popa or jbe adc lret push (bad) cli (bad) fisttpll and ret push andl inc or or mov (bad) adc xor rclb nop cld push lret pop lret in inc int dec std out xor (bad) lock inc fs pusha lods pop xchg and icebp and push sbb mov xchg xchg xchg inc adc call faddl outsl or pop dec movsl push dec rolb push adc cmpsb xchg jns xchg and gs mov cmpsl dec and adcl sbb push xor mov xchg cmp (bad) jo pop push push or add jge cmp aad pop pop dec or bound in push addl xor lds pop sbb cmp aaa xor pop (bad) mov sub lahf mov push leave std sbb dec mov pop or sbb test xchg add pusha or sbbb rolb xor dec push push cmc xchg adc call cmp ret pop inc jecxz lret addl push or push sbb ss mov fcomps ficompl push pusha jo or sbb add sub daa dec pop mov sbbl cmp cmp dec mov jns sbb dec sub (bad) lea fs shrb mov sbb aaa mov mov add (bad) pushf lret mov fcomps mov add xor pop dec and cmp test dec push test xorb aam cmp sub or dec ficomp add repz or mov push dec xchg mov xadd in or push lret hlt and dec arpl inc xorb inc jp xlat sub mov stos sub dec add jmp loopne pmulhuw pop fist add xchg test push lods dec xor inc jnp dec sbb daa imul xchg sub add xor cltd xor andb pop rolb inc xchg icebp mov sub int or fisttpll adc xor pop mov sub add adc fcom cmp add inc push add adc or ret add and pop rcll stos sub and leave lret test imul pop mov sbb fnstenv or inc sub xchg inc pop rcrb xor or outsb nop jo outsl dec nop and inc ss cmovg inc and xor mov inc inc mov inc push fdivs adc or (bad) cmc subb lret and add add movsl lret andl call (bad) jno xor imul ret adc stos out je (bad) jns cmpsl mov dec and (bad) cltd loopne mov dec push adcb and mov sbbb sbb mov icebp add mov leave sbb gs mov xor add pop push dec rclb lods idivl push sbb mov fisttp push outsl push test push jp xor inc and andl lods jne push pop push sub inc or xchg pop or dec aad add sbb mov test andb push shrb lea pop aam mov popf mov lods and inc cmpsl or loope dec sbb push (bad) and cmc pusha sbb mov and xchg add test cmp fidivr fiaddl inc fstpt jecxz in das or or or movsl insl lahf jle mov dec push xchg inc xor pop pop clc pop ret mov inc xlat or xor jno inc aaa inc mov inc xor leave inc mov loopne sarb push mov adc dec add jae rolb push rcll and xchg adc sbb in cwtl mov pop fstps test stos inc cmp push xor pusha addb sbb mov sbb inc sbb xor sbb and mov xchg cs dec mov or leave insl repz mov jp outsl test sub je nop add jecxz test int push je xchg mov sbb pop inc mov lea xchg jae rolb fldl fdiv movsb and int3 scas lock hlt (bad) cld xlat inc test dec xchg orb inc lock mov and cmpsl inc sahf or and ljmp pusha xor xchg jnp push cmpsl push jbe add xor jle add pop xor aam inc rclw rcll arpl sub xor adc addr16 mov sub add enter push inc cmp mov cli xchg test adc lods push out mov fldenv mov jp outsb inc pop adc mov sub mov sub push (bad) sub cmpnleps dec scas dec ret xor lret popa lock std push add (bad) lods pop inc jp jmp add mov movsl or add sub push stos insb lods lock mov popf mov xchg jns pushf dec ret mov xor push sub lret stos mov cmp add mov sub sbb ret mov inc mov mov sub cmp or xchg mov stos daa cwtl mov adc orl dec cmpsl jbe dec sbb adc test and iret mov sub mov and xchg (bad) add subb add cwtl arpl lret icebp je movsl adc shlb mov add popa movsb sub orl push add sub push mov or sub push or cmc aaa inc cmp inc inc add loope and and push loopne lods add jl (bad) outsb lods test mov xchg xchg dec add or cmp sbb inc or out inc push daa imul ja fisttpll xor inc inc popf and cmpsb sub mov das sbb xor inc inc leave popl and ficom add pop xor push pop (bad) and les mov adc cmp pop xor add inc ss fwait aas sbb add mov ret xor or icebp movsl inc bound add push (bad) xor xchg dec push popa aaa movsl je mov (bad) jno cmp xor ds xor and cmpb rclb mov adc push inc fwait xor add adc add shrl popf rclb cmp insb add mov mov inc adc out ret cmp aaa push aam roll mov mov stos lcall test add add or pusha add pop imul xor popa lea in jbe and int3 sub (bad) sub and loop sbb jmp adc ljmp adc xchg jns insb out lock jo lods sub add lods sbb daa cmc adc xorl add mov xchg fldl xchg movsl mov sub mov xchg je mov movsb add or (bad) arpl dec cmp dec dec push sbb mov and fwait in and inc dec lods movsb pop xor cld bound adcb enter mov js add add jmp add or pop mov sbb xchg fcoms daa jge lods dec test in popa frndint ss adc imul push addl sbb add aas aas add or mov cmp mov mov pusha fs out movsl inc add ret add fildl sbb and sbb scas das xor stos lea test or cmp leave xchg fwait xor dec lods adc clc (bad) fdivs sysret adc inc popa sub push cwtl (bad) lret inc add pop je xchg movsb and aas loope ret mov add or xchg cmpsb (bad) pop add popf xor and sub jge xor test xor sub cmpsl inc (bad) and or shr test enter and cmp push pop pop das jp js push or mov xchg add xor outsl ret and (bad) repnz adc inc pusha push rclb xor dec cmpsb cmp or or and push es lret sub shr xchg or or rorb scas sub jo inc (bad) adc or andb aad add test add inc dec dec cmp daa es mov shr inc mov or inc fwait int addl lock movsb mov add mov outsl pop add xor lret xor sbb mov inc dec leave nop bound pop addb add outsl lock push push xor xor jo in dec cwtl xor lcall pop sbb shrl inc push sub mov ret adc xor pusha sub sbb inc mov xor icebp sbb sbb inc imul add mov cmp mov and jmp sub js add pop add adc mov nop aad adc push cmp adc and cmp or test mov xor xor out pop mov xchg add pushl nop sub inc imul xchg inc adc add adc add mov xor cs dec or fisttpll and add pop fldl cld pop ficom xchg andb out add mov (bad) cmp rolb cs lahf ret pop addr16 divb sbb sbb iret scas hlt xchg pusha pop rclb or xor sahf xor rcr push push stos int pushf xor push mov and add push nop jb adcb lods leave mov xchg mov mov mov xor sub mov cltd cmpl sahf inc mov inc dec sbb push jge mov xor ret aaa daa jp or hlt mov sti (bad) inc ret cmp adc adc pop fildl inc data16 push pusha add cmp pusha add aad lds (bad) sbb (bad) jb mov popa jne jno mov sub cmp mov lds inc push test movsl jno das loopne leave xor cmc sub cmpsb sbb cld mov ja cmpsl mov pop jno inc test adc out sbb mov push jge popf add add or push sub xlat mov popf mov jmp push les jb adc and movsb add mov insl ret xor or mov sbb jge loop test push xor rcrb xchg test add in mov inc sbb daa lret inc xchg data16 pop lock sub dec pop mov jmp or push or jo or push xor adc cmp pop sbb jno bound fiaddl xchg dec enter and or (bad) pop sbb scas dec dec lods add mov xchg mov mov aad and push jo lock jo int adc cmp push daa sub adc or push pusha cmp dec or repz push push roll mov add ss lods sbb add popa popf stc mov ficompl popa add mov or gs xlat enter lret and xchg cmp mov (bad) ret sub test stos adc dec push mov or inc or aas or cmpsb (bad) push and pop inc and lds push push inc xor mov data16 mov sbb inc add sub sbb mov mov xchg fild jle sbb imul jp test xor or rclb push cmpsb sub inc bound mov les or cmp inc pusha add test xchg loopne loopne loopne jns shll sub xchg movsl mov ret pop insb or popa adc xlat sbb xchg sub jne mov sub dec mov dec adc pop xor inc or popa popf xchg pop fs pop lock inc (bad) xor fbld rorl mov imul (bad) shr xor pop gs inc pop add add pushw rorb stos pop outsb enter pop adc inc lods cltd adc xchg mov lahf ss sbb sub dec in popf add (bad) sahf shrb jle inc mov test (bad) jge and push xor or pushf gs (bad) or mov lods mov lods shrl lea push loope ss sub or adcl xchg outsl rcrb add (bad) movsb fsubs xchg or sahf test arpl loopne cmc jp ret or adc pusha das pop (bad) xor inc mov test dec inc jbe je xor popa and cmp cmp cmp arpl aad add inc sbb sbb cmp pop ss jmp (bad) andl ret hlt nop cmp pop loopne jmp or push gs lds gs stos sbb dec or arpl fs and fildl mov in pop mov sbb shrb mov sbb lahf dec fmuls sysenter les adc and iret movsl dec (bad) jo cltd cmc dec push push add inc jmp aam sbb fucomip das and cmc addl xchg imul mov add movsl add xchg mov add fistp mov sahf movsb xor pop in inc add jmp rcrb dec and xchg add call xchg pop xchg push add sub leave (bad) addr16 pop cmp adc jle ja loopne imul xor dec es jecxz fidiv sahf inc das mov fidivr push jmp loope ja pop es xor and enter jno cmp pusha or rolb imul pop arpl popa dec mov imul xchg push add xchg cld fldt adc jecxz loope loopne aaa cwtl push test mov or mov cmpsl rcrb and or fsubs andl aam mov in andb or (bad) loop sbb mov movsb mov add mov mov xor (bad) sbb sub sub insb nop add and adc sbb adc inc push pop add ja inc pop insl lods push je xlat xor ret test xchg mov divl cmp push rcl push pop dec add sub lods fisub ret xchg or adc lock add jge call xchg push adc adc mov repz in adc sub sbb adc cltd and and add mov popa rcl repz xchg push add leave cmp inc enter push mov lods pop xor sub data16 or andl (bad) ss loop imul pop pop shrb shlb jno dec add or jb mov add sbb and add sbb add push or addl sbb (bad) cwtl dec gs popf add pop (bad) lock inc inc push popa inc rorb jb mov popf dec mov push loop sub (bad) adc pop outsl mov jmp push ljmp sbb or mov xchg test inc dec hlt ss ret (bad) or mov inc push popl cmpl testb mov add mov xor mov and pop sub sub leave cld xor sub xchg dec repz sbb pop addb cmpsl add lret pop into xor lods insl (bad) loope popa shrl xchg insb xchg rcr aad add mov jmp lcall pusha inc add cmc xchg inc test (bad) nop shrb xor adcl pop test or cmp push test cli cmpsb stc xchg xor sbb add sub sub pop ret sbb subl cwtl imul adc or xlat xor xchg bound and add sub xor mov add movsl orb jl bound adc add or ret inc add dec pop inc dec sbb arpl push cmpsb sub dec adc cmp add or add out loop xor test into rorb mov test sbb iret sbbb repnz (bad) add add and das push push or xchg mov imul add dec mov dec aad xchg add movsb and mov pusha push cmpsb loope adc pusha or add xchg mov xor push inc xchg repz mov aaa inc repz xchg adc push lock sub push xchg adc add cmp stos imull lea or rorl cmp movsl xchg mov xor dec adc sbb or mov sbb inc jl sbb inc lret add push stos lods lds pop and stc mov shrb adc or jg enter hlt sbb pop sbb rcl sbbl dec bound or or or inc std daa cwtl aad jnp fidivl iret and cmpsb pop cmp jns popf adcl sbb push loopne pop xchg movsl xchg or cmp sbb pop test loope stos dec inc sbbb add fwait sub cmp pushf and cmp push and loopne pop lret cltd pop push sbb pop nop cs fildll rorb ja and fisttp cmp sti xchg sub inc and adc cmp and sbb adc pop adc xchg icebp xchg xor aaa jmp dec mov out sti or sbb mov test and adc mov in inc push or loopne jle loopne cmpsb push xlat js mov xchg ficoml (bad) add je loope adc and das lock push iret std imul insb mov rcrl orl movsl sub leave adc pop mov rorb pop push dec loop popf test cmc sub sbb adc push xchg mov push mov adc xchg and nop or je test dec ds cmp test mov lods cmp lret xchg inc xchg dec lock insl inc movsb xchg (bad) scas fs xchg movsl lret ficom fiaddl andl mov fsubrs dec loope xchg adc add outsl push push outsl pop mov adc sbb sbb xor jno add xchg adc sbb mov movsl mov or push sub pop fucomp push addps xor push mov jo push mov push add push dec ja rcl mov das (bad) addr16 pop or dec das ss mov pusha adc add xor fucom push rolb mov lods movsl ret inc pop or int xor and sbb inc dec mov or sub inc push sub inc adc fidiv mov pop mov (bad) (bad) cmp xor inc (bad) dec dec mov push cwtl xchg adcl hlt add dec out test and (bad) xor pop mov sub clc ret cmp es push jle int3 or dec sub push add cmpxchg imul iret add insl sbb jbe adc dec dec cmp int3 inc call lods inc add icebp add lcall or pop fldenv mov lock or dec mov inc and xor xchg sub rclb dec jnp add mov lds rolb push dec mov and jb or pop fs mov or xlat std and dec pcmpgtb cmp or xchg push mov dec bound xor pop (bad) rol xor mov sub sbb push adc adc xchg pop jne lahf test ret jmp test mov inc jb xchg and hlt out push and enter xchg test pop sti sub xor cmp adc push hlt inc adc (bad) nop and pop push xor adc cs gs ss test pusha sti es pop jge mov push adc adc dec test push pushl mov test inc adc xor outsl or or scas popf jb mov nop mov lcall xchg out popa push rclb xor andl dec loopne mov mov fcomps cmc pop push cmpl nop in cmc dec push das xor movsb jo cmp or mov mov lcall loop cmp adcl and (bad) jo inc and cmp add hlt dec (bad) xor fs xchg lcall and lahf adc add xchg movsl push jo stos adc cmp push and sarb add sbb push mov bound xor insb fcompl pop xchg jb (bad) in test nop push dec int xchg pop pop insb cltd movsl mov arpl push aam xchg mov or es cli cltd jg pusha push push lcall leave (bad) jecxz sub leave cltd and mov dec pop popf gs cmp cwtl xchg adc rorb mov jecxz inc cltd or or mov mov loopne es stos or fstps cmc adc adc nop mov inc xchg or xor pop sub pop or mov adc pop jo pop sarl inc cmp cmp adcl je fbld ja adc dec imul popa add mov ret int adc and addl and mov jo inc dec or lock loope or gs and in fildl push lret lcall popf add ficompl je cltd and lret xor push orl es rcl push sub cmp fnop xchg sbb push inc mov add cmp inc (bad) xor sub add add lods fistpl lods and xor push add push fistpl mov sub or enter push popa xor inc cmp add push (bad) or push pop (bad) out sbb cmp daa rorb insb insl dec enter mov subl xor testb pop sbb movsl adc nop or (bad) hlt sub lret rcrl stc xor lea (bad) pop pop mov add sbb sar mov aaa jno fs and test sbb xchg divl insl cmp add js rolb mov scas insb popf sbb mov sbb lods push ljmp jo xor mov into xchg mov mov jecxz mov add outsb lods xor xor or or (bad) je (bad) inc adc or jp into out fwait add add push inc sub das xlat xchg in leave outsb sbb rorl lea pop cmp add lret add into nop xlat dec rep jp mov es push xchg inc push xchg rolb cmp sub sbb dec insw sbb cmp stc adc inc movsl and fdivl aam cmp mov pop xor test inc test and (bad) in and stos lods hlt mov adc and outsl nopl pop xor movsb cmpl jno in push ret sub inc xchg cs add movl test scas xchg es add es mov mov push xor pop ss (bad) xor mov or lret dec jb test dec sbb popa add test outsb imul dec inc mov sbb or sub ret sahf push incl test xchg push inc stos cmp add insl push mov addl inc push xlat dec add daa enter cmp add sbb shrb mov sbb lea addb xor pop ret ja imul mov jo mov or bound jae pop add and dec inc adc xchg cltd and adcb adc orl dec adc xor push push movb push pushf sub push pop or push sub out push mov add mov push inc ret addb xor and loop jg popa int3 add pusha mov fs (bad) push inc mov bound insl cmp inc jmp jno or and pop (bad) add pop and sub push xor xchg push (bad) loope das adc mov or ret pop add pushf test pushf or arpl xor pop cwtl sbb and cltd jecxz movsb es jno xchg push push mov sub mov fs loop,pt jne or rorb test cmp add adc lcall sbb xor ja inc dec xchg rclb sbb mov addr16 adcl (bad) xor inc sbb and push xor pop sbb xchg dec lea jl and inc lret adc fs rol xchg jb inc mov sbb out xchg int3 (bad) inc test data16 ljmp and fbstp lock aad lods push push mov stos cmp mov loope and mov xchg fildll push (bad) add xchg xor or aad push pop add pop inc lock mov xchg mov xor pop shl sahf inc push sub add enter lock add into mov lea add sbb (bad) pop mov mov xor loope sbb shll adc lods sub sub push pop pusha xor and and (bad) out dec adc or xchg adc jecxz adc dec xor ss and add dec (bad) dec or inc pusha push negl push movsb lds test lea arpl push frstor loop cmp aad lods inc sbb imul jl add mov loop xchg pop cmp add outsl leave mov sub loop loope push iret xor sti es popa fs mov or adc loopne inc loop xchg mov cmc rorl add mov xor addl add sbb push sbb adc inc push xor aad xor adc and nop negl and icebp lahf loop sbb mov push fldcw xor mov cmp cli add sbb nop (bad) mov les ret jnp push loop outsb add adc xchg movsb xchg add push shl sbb (bad) cli xor push xor and fsts adc jle cmp push pop push push push xor jns lods or and sbb xchg sbb push mov rolb push pop pop dec push lea jo sahf sarb cmp xor push rorb lea je sbb mov cmp jno fdivrs call and adcb xchg xchg add push xor dec sub or push mov lea imul loopne cmc adc (bad) (bad) rcrl sbb (bad) lret sbb ret or int fildl push mov sbb mov mov mov push and sbb mov sbb inc test (bad) mov adcb movsl add add pop fisttpl fs xor inc adc (bad) push jb mov repz xchg loope (bad) sub adc xchg pop and jo or cmpsb inc and sbb inc cmp push jnp insb movsl or lcall sub dec xchg inc mov in aad mov and cmp lea dec xor sub popa imul xor leave iret adc sbb xchg icebp popa getsec pop leave lcall mov loopne or int pusha pop push inc mov xor stos imul and sbb lret adc pop dec push and popf sbb mov sub xchg pop aaa xor push push pop push les sub xchg inc mov outsl inc mov loop xchg dec (bad) pop out xchg popa or shr sbb xchg adc je insl jecxz rolb inc and pop xchg movb jae lock add (bad) (bad) cmpsl push and imul int cmp sbb adc add lods mov lods lods push dec dec stos mov inc sarb inc pushf in inc jp (bad) popa jmp sbb xor and decl adc ss arpl sbb mov jg mov jmp pop xchg test outsl inc cmp loope and pop shrb pop push (bad) stos repz push outsl or or adc mov cmp sbb and add icebp mov xchg mov inc mov orb inc cmp stc pop sub inc inc cmp cmp inc xchg mov aam loop add cwtl rclb mov add add (bad) push (bad) jne xor cmp imul xchg pop sbb push pop xor sub lret lea xchg ds movb add xchg and test andl ss jnp dec add cmp test fisubr inc push xchg jo cmp shrb imul jo sub cwtl sbb or add push add sub cmp nop daa jno lock or rclb add rolb inc xor mov mov pop pop xchg lea sub cltd shrl or jl insl sub push sahf and add roll pop and rolb out xor xor xor sbb jmp rol stos (bad) mov (bad) fadd dec dec mov mov or push pop rorb adc mov nop lods mov and cmp cmc sub pop loope or mov sbb adc enter adc (bad) push pop xor hlt inc jecxz in mov ficoml mov mov pop popa push (bad) pop popa push mov call stos xor test mov popa inc sbb movsb mov or adc popa jno add mov dec pop in inc test jp cltd xchg mov xchg push cmpsl sub push loop insb test aam leave lock stos push movsb adc or movsl or les lods loopne scas pop faddl inc sub ja and add lahf add adc outsl lea pop pop jp push sbb lret cmpb aaa popa pop mov enter mov loopew adc push cmp cmp inc mov or sbb int cwtl icebp add xor jl cmp shll int fs pop cmpsb cli push and cmp jge sub add ss dec loop push (bad) mov addl insb jns loopne cwtl aaa lahf mov arpl push fs mov or outsb xor cmp sub movsl mov xchg sahf (bad) xchg and push pop mov sbb test xorl addb rol dec or xor push shlb loope add or mov mov (bad) and push dec (bad) rcll dec adc jecxz in sub xorl mov rol jo imul ret arpl fs sbb jno js inc xorb mov imull enter fcoml loop cmpsb in dec les sbb inc rcll sbb and or je lds mov addb sbb add std loop test dec rorb push push pop inc arpl push or or or cmp push xchg pop add (bad) leave xor sbb popa rcll sbb mov xor cmp adc xchg in loop mov or stos mov mov lock inc sbb test popf lea add xor arpl rclb popw inc pop inc pop mov shlb int3 sbb sbb ficomp insl xor (bad) (bad) daa and or jmp inc dec es mov syscall aad mov in aaa pop movb cmpsb shlb scas mov and pop push pop pop push test cs mov xor add (bad) cmp and add mov xchg and sbb outsl test xor add ljmp push or cmp push setnp xor sbb leave jmp mov mov xor movsl or test adc test fs std mov clc xor add outsl adc sbb aas jecxz inc add cmpl or fnstenv or mov neg xchg mov jbe xchg xchg inc (bad) lret mov mov jae outsl push pop cmp mov daa sahf sbb add or cli movsb mov mov cmpsl mov movsl add sub push and or and push jg movsl mov lea popf mov push popa loop push inc imul mov xchg sub jns repnz outsl cmp xchg sub sar push and mov mov dec insb mov adc andl movsb pop xchg add cmpsb mov xor insb push push daa in mov xor orb push mov (bad) xor cs add pusha movsl pop mov lret addr16 cmp or adc movl int3 ret or scas test add (bad) popf or or das dec adc or add arpl sbb (bad) test lea cmp adc cmp (bad) push test mov dec lods sub adc sub cmp add and xor mov cld andb movsl sub xor leave cmp add ret sub les jo pop sbb inc xor mov fs dec (bad) jno les or aam mov add adc mov (bad) enter ljmp sub (bad) ds loope aaa inc cmpsb shlb (bad) jb pmaxub es iret mov pop xchg or loopne insl mov inc cmpl test je xor xor imul xor jmp pop orb loop add daa sub push jmp orb push push jbe adc fs xor mov adc adcl andl adc and ret aam or inc popa and test or sbb loopne push ret sub pop pop xor lds (bad) int3 inc movsb sarb xor and adc sub sbb sbb sti xor adc mov jo enter adc push pop inc cmp fidivrl rclb xchg fldl xchg mov xchg inc outsb push orl and outsb inc jp dec repz repz aad xor dec ret and push pop rcll bswap or add xchg or popa jecxz adc xor icebp test dec rorl aad loope fsubs sbb faddp out repnz pop leave lret insb sbb pusha (bad) cmp add pop ret push js rol ret jmp and imul mov mov lds xchg add in rclb add jne and mov repnz pop and and or scas ss jo sub in test push shrl movsb xchg xchg cltd sbb mov rcl inc mov or int3 test ss je stc shl add loopne jnp fcomps sub jnp dec pop lea add jmp or popa xor add cmp pop les in (bad) popa test dec cmp fldcw ret shll leave cmp pop enter and nop xorb inc mov test add push cmp cmp ss mov mov lods test pop adc cmp inc cmp icebp aam xchg push je (bad) and push sahf js insb push xor add xor aad shlb xor pop mov lea dec mov sbb or lock int add mov in sarl mov pop xchg hlt dec xlat (bad) mov (bad) jne push dec or or ss sbbl and mov add add pusha or xor lock nop xchg xor or mov ret lret inc inc ret pop mov sub bound add cmp mov cmp ret jne sbb imul test add lret add or adc outsb ret xchg xor test xor jns hlt or pop mov and pusha sbb test mov push movsl adc lcall movsb or push adc adc cmp pop lret sahf lods or mov or mov pushf ja insb stos push cmp jo data16 xchg lcall sti dec movsl mov add cmp xor push subl jo insb sar jae,pn xor xorl and or mov ret jge test ret shrb mov stc andl mov outsl sub insb xor and sbb mov mov add out adc (bad) mov or outsb test mov mov mov and shrb lret pop xor xor add out ss test adc (bad) (bad) xor bound shrb daa adc fmuls jp and and movsb adc inc adc cmp push lods and sub pop repnz adcl and push mov sub push sbb les inc pusha pop push outsl leave dec repz lret sub mov cmp xor ret daa (bad) adc mov mov pop rcll adc cmpsl test sbb ja or mov xchg (bad) int sahf es xchg sub mov mov pop push adc rclb xor inc mov adc cmp mov or outsb dec add xor cmp pop nop mov popa pop les xchg punpcklbw pop inc mov add test and adc (bad) lret mov inc pop ss cmp imul sahf pop rolb dec xchg or sti xchg sarb nop mov or push test inc stos movsb adc push jo roll (bad) sub test test pop sahf dec pusha xor stc int add scas sub and mulb sbb dec fisubrl cli int push lods inc loopne in dec js test inc or in or bound mov adc test repnz js test and jmp or sub mov or nop sbbb xchg and sarl cmpsb cmp lods xor push sub adc je push dec iret out movsb roll or imul xchg sub dec sbb pop (bad) xor cmp andl inc mov add xchg mov add arpl pop xlat jno add pop mov cwtl push add nop pop xor mov mov xchg sub sub mov bound and lahf outsl cltd aad dec mov repnz mov popa push sub mov enter push pop loope fsubl push xchg pop xchg int3 xchg hlt dec xor sbb push or out ret cmp xchg add ret stc out (bad) xchg xchg and cmp loope jns mov fisttpll shll aaa xchg cmp lea roll ret test mov jb orb xchg aaa sbb mov adc mov iret add out jmp xchg in pop (bad) xchg mov shll mov sub movsl add xchg cmc or xchg xor pop and pop push fsubrl jmp xor fisttpll mov bound cmp js les add mov mull sub and inc add adc pop dec push and mov pushf and data16 xor mov xor inc fdivrs sbb inc xchg sbb lret movsb les mov lcall leave xor pop or or shr pop or lcall or out xchg mov loopne jmp jl xchg ret fcmovnb test mov cmp sbb sub jnp imul fstl das push dec ret xor or (bad) fiaddl sbb sbb arpl into rcrb das pop and and shlb cmp xor add push test push or andb mov adc pop call jo adc cmp pop mov aad aaa aas add rcll dec and lahf inc fs mov cmc test push sbb add push pusha (bad) dec xor mov addr16 sbb add push or cmp (bad) push mov (bad) push push push pop inc xor and or add mov daa sar insl imul mov mov xor push andb inc pusha stos aaa jae mov mov mov loopne add scas sub xchg or mov imul in sbb xor xor pop push adc cmp adc and mov into xchg fdivp xlat mov pusha dec test pop jge rorb mov shrb xor mov aas dec jbe inc pop dec es add add mov sub movsl add adc je call sub outsl lea (bad) adc and adc add pop enter push js sti int3 call inc inc pop xor push lock cs add daa ss nop mov pushf sub inc sub push or mov sbb sub dec add push sbb popa push mov lods adc mov bound pop xchg (bad) addr16 add sub ret add mov push icebp ret or fadd fwait xchg std dec mov adc (bad) out mov mov add pusha (bad) (bad) jne rcrl add add and js fldenv dec fcoms inc ds leave mov imul adcb lds mov aam or mov add mov inc cmpsl dec adc mov arpl cltd jo add icebp or xor int or xchg stc or lret push adc add mov and daa mov pop test or int jbe rcll lods in push ffreep dec sbb mov and or add adc popa add fist sub add lea xor shrb (bad) pop pop and add xchg xchg mov mov push inc adc or icebp or xor hlt insb dec cmpsb mov cmp dec push or fistpll dec loop cmp mov fbstp ja lods (bad) imul sbb test pop test xor adc call imul inc lods xor (bad) jne mov push add test add imul mov push and add aad mov dec and pusha mov mov mov jb js push pop xor popa xlat xor call lret jno cmp add sbb lahf and ss repz cmp push loope fs xor sub enter outsb cwtl xor imul movsb add cli or mov xchg push es cmc add adc leave inc outsb insl add xorl outsb sbb mov and and scas mov (bad) xor js insl lret sub cs xchg outsb or inc sbb mov pop (bad) rorl dec and dec ret data16 outsl xor dec pusha push push sbb mov adc cmpsl dec or sub (bad) orl pop pushf popa add or mov addl icebp out xor push sub pop gs (bad) adc sbb int fnsave mov add (bad) repnz push cmp rolb and cmp inc test jno out icebp sub (bad) mov inc cmp mov and out adc and mov add push stos xor adc rcr test adc dec gs pusha or sub cltd popf cmp push fsubrl add (bad) aaa fistpl lahf add pop adc add nop cmc insb sbb xor mov inc imul push xchg sbb mov ficoml cmpsl inc ret jae adc inc add pop shll jbe pop mov ja sbb outsl nop lret lods push jmp and jecxz mov sbb test cmpsl adc xor adc add push cmp sbb test xchg sbb or or je sub lret xchg adc push sub shr lods scas sbb and sub xchg cmpsb lock imul outsb mov or aad inc sbb (bad) (bad) sbb mov int3 nop mov movsb sbb xchg mov bound mov add or ljmp mov xor fs fidiv dec ss inc loope jp imul nop nop or fild xchg jg and lret mov ret sub push mov dec or lret push sbb dec mov mov mov pop lahf test cmpsl jecxz adc or add mov (bad) xchg outsl fnstcw sub mov add jecxz fistpl sarl stos add js jno add xor or cmp mov and cli dec jo inc imull push aaa cs jno add or mov xor dec jno mov xchg test xor sbb mov xorb (bad) and or test and push imul pop adc (bad) mov xor sub sub inc test xor inc inc and add stos xor movsl lods pop out add or hlt mov aam call adc loopne lret outsb adc mov add loopne sbb aaa mov sbb cmp popa movsb pusha scas pop mov jo (bad) repz and cmp cltd lock lds bound scas dec xor xor add pop lret sbb jb outsb mov cmpsb xchg sub in in shrb pop loopne xchg xlat ss mov (bad) imul rcll insb rcl sub out push call add gs lods adc sahf (bad) sub cmp scas rolb and sbb (bad) push ret fs movsb xor dec icebp cmpsl or sbbb jnp or mov nop mov push add push enter or repnz xchg adc inc popf popa arpl pop dec inc adc or (bad) not push xor inc es pusha mov clc dec inc fs pushf mov add (bad) and dec xchg lods cmp xchg sub cmpsl cmp rclb punpckhdq push mov cltd mov insb clc adc sbbl dec dec adc insb pop push call pop cmp test sbb test fcmove cmpb add scas jmp mov lea and jnp fadds movsl and mov push (bad) adc sbb jns add dec pop cwtl xchg sahf xchg roll scas roll dec dec or insl or movsb mov das test jo daa imul fcomps insb test shrl rolb (bad) cld inc shrl push cmp adc mov arpl and mov sbb sbb push aaa scas loope add icebp add cltd xor sbb sub (bad) ret call adc lret xchg addb sub lret lods mov inc sub in xor sub inc or rorb (bad) xchg cmpsl sbb inc mov add xor out xlat addb fsubrs add jno in cmp arpl push inc xchg xor (bad) mov pop jbe push sbbl add mov dec dec je stos xchg sbb pushl popa loop push mov cwtl mov mov mov inc mov movsl lds xchg cmp jmp stos cmp loop or insl or clc jno xchg adc or inc push jmp pop or test add lds adc cmp inc test stc xor insb inc hlt xchg les enter dec mov lret ljmp xor nop rolb mov jp pop nop pop mov fwait ljmp xor lea lret add (bad) adc push sub adc adc adc int3 ret sbb add imul adc and xor xchg lock xchg rolb cld dec cmp mov jno les sbb and adc loope add or xor push mov mov (bad) dec pusha sub rorl mov dec or leave nop frstor or sbb add or ret mov lds cmp mov lea inc mov dec and or movsl and or pop lret sbb and sbb movsl xchg xchg mov mov (bad) xchg shrl jo inc push jb lods imul lahf xor mov and xor fsubl scas imul (bad) xor mov or push cwtl adc popa shl rcrb add add sbb and cmp pop pop or test inc fnstsw sub dec push push lods add pop out xor inc outsl add test cmp mov adc xchg xorl cmpsl mull insb mov test mov mov popa pop jp mov daa (bad) aaa (bad) mov adc push mov xor and (bad) dec add lods add aaa pop scas insl inc sub add cmpsl xor jae aad xor cmpsl xchg loope sbb and fwait add adc sub ja fs sub push sub ds mov xchg add mov fs mov adc insl insl dec add pusha or push pop les lret ss pushf lods outsl cmp push mov sbb cwtl mov ss pusha adc add xor dec mov loop xchg dec sbb in sti test ret shll mov sti iret or mov imul fs popf xchg test (bad) jo jecxz inc test mov aaa inc adc xchg loopne sub lret pop ja pushf and pop dec (bad) loopne xor ret or imul dec sub pop mov adc pop and and mov bound adc fisub add fldenv lret or les cmp or loope mov roll add xor inc cmp popa lods sub js xor xchg js (bad) xor inc or and rcrb movb pop aaa loopne jecxz cmc aas adc int pop faddl lret stos cmp dec aaa or jecxz dec and ret jne loope pop adc mov add add adcl jmp (bad) dec pop mov cmp mov (bad) ja push xor mov pop jno ds jno dec xchg mov sub dec xor adc aad or fwait pop dec and xchg add dec rorb sbb xor lret mov and orl ret mov (bad) (bad) mov int sub enter push aam cltd mov adc in (bad) mov mov jo or cmp test inc sub mov shrd cmp test cs enter fwait xchg mov pop jae cmc insl or rolb mov in mov shr ret cltd repnz push in xor add cltd dec sbb add sub add scas push pop fwait cmp sub xor sbb push or sub push push mov mov mov xchg test push xchg add loop pusha xor mov or mov test mov imull push sub in ss mov movsb mov popa lds rolb mov daa int3 imul inc mov xchg insb ss mov push sub andb aad test sbb jge mov inc mov cmp or mov fs mov push into loopne xchg add lds test mov dec pop mov push (bad) sbb push imul js dec adc stos adc rorl movsl ss sbb adc imul pop adc pop pop sbb or adc adc sub and jle stos cmp cmp lds pusha and push jecxz or pop xor and pop push scas pop xchg jno add xor mov add fstps push add xchg mov add adc imul imul aaa in dec or arpl pusha or sub shlb cs test jbe call stos je ret jmp adc data16 and xor mov add add inc adc mov lcall cmp dec xchg mov pop xor rcr pusha addr16 lret mov movsb and xchg data16 push push pusha pop mov pop cmpsl mov push dec xchg sbb or pop mov test or mov xor test addr16 sub inc mov aam pop sbb js add dec jg es adc adc ja (bad) leave js and int3 fmuls add xor dec pop push dec xor dec (bad) sti pusha stos inc sub sub pop lret loop pop ret imul imul xor pop or xor cmp mov mov mov push popf imul xor xor loop inc add ret push push dec test andb loope rol dec jmp std mov out (bad) xor das xor daa sbb imul popa fsubs xor adc inc js dec mov or adc test add or js and cmp test subb or or jg loopne bound cltd cmp (bad) sbb push sub push cmpsl dec shr mov (bad) mov ret dec mov add sub xchg mov sub or adc (bad) mov sub outsb add mov and xor outsl lret inc dec mov fld and rcll aaa adc pop xor gs sbb dec xchg (bad) xor add inc jl dec jmp dec inc js hlt sti add sub dec inc ljmp lods xchg dec xchg mov dec stc ljmp mov push lcall push jle mov sub imul cmp dec movsb add or pop cmp mov dec js dec mov add insl jmp dec out subl test out stos xor movsl xor pop push dec adc pop add sbb dec rcrb dec inc mov cmp cmp pop ret lods and loope or push fild (bad) mov int3 inc aam or (bad) rolb sahf sarb popa add mov xor out xchg sbb sahf or sti and mov pushf in fmuls push ss inc fwait lret aam sbb cmpsl movsb test xchg fs add inc pop xchg sbb adc fwait or arpl (bad) sbb mov or inc lahf mov pop cmp lea scas shlb mov mov sbb pop sbb jmp sbb adc loop add push ret xor adc push push mov push jecxz xor jb call pop loop inc lret and xchg push xor or inc insb call lods pop adc arpl mov aad mov mov push and add inc jge sbb cmovnp addr16 jecxz inc and (bad) xor xor int inc loopne shrl int xor mov sahf (bad) or push add add sar adc (bad) pop and enter add xor sbb cltd adc lock adc shrb and popa push sbb fwait scas sbb add scas cmpl push and sti das pop mov movl je jecxz daa xor push test jns das bound mov and or adc outsl nop and gs sbb dec mov orb add insl sbb mov fs cpuid in xor jge add andl or cmp imul mov outsb loop sbb push es and arpl jne xor scas xlat mov aam addr16 inc rolb movsb jmp sub dec sub enter inc rolb pop xchg add or jp add xchg push (bad) or sub popa dec movsb imul pop inc add test cmp jl roll lock mov shl cmp dec xchg aas loope push stos imul shlb mov dec loope fwait inc outsl mov inc mov xchg inc and mov mov jle xchg xchg rcrb dec js mov sub adc (bad) rclb movsb sub pop sub xchg fld and or (bad) mov adc lds popa shr cmc imul pop or in movsb test mov cmp dec xchg push js push pop sbb add test adc mov je pusha gs sbb xor and jbe mov sub or ds (bad) pop xchg mov aaa pop mov lods lock or add in sub xchg pushf inc lea mov imul mov es xor int3 xchg nop add (bad) rcrb add shl sbb push sarb fs mov adc cmp and or add dec push std rclb lods cmp and and adc and fnstcw and xor xor adc leave and cld mov in addr16 test adc sub pop xchg adc lret popa pusha mov adc xor aad pop sbb pop pop add sti and adc lret add test pop or fnstsw adc sub adc push addl nop js jle cld cmp cs xlat xor cmp pop or xor lock rcr xorb push lahf mov hlt mov lcall lods jo cmpsb je push sub outsl adc jns mov call loope (bad) fs rcrl sbb xor dec and sub je xchg adcb lods frstor or aaa test sbb add dec cmp aaa pop mov push mov inc push sub or sbb cmpsl jge,pt mov adcb adc fsubr les mov pop and mov imul or xchg and in gs mov inc push jle or mov xor inc xor push xchg sbb push adc nop shll jbe cltd cli adc xor sbbb or into faddl add mov loope lret or push into adc les add push xor xor sub and out adc ret adc add loopne pushf fsubl xor fstps mov ds repnz repz sub loop sbb outsb add mov nop cmp imul mov fs pop add lods xor adc xor pop inc mov xor ret inc add test inc adc mov jno cmp inc mov mov ja add add mov push addb aam loopne cltd (bad) adc nop pop sbb cs adc jge mov jmp xchg insl dec xor mov sbb daa dec jne xor pop out sub sbb sub cmp adc fsubrl mov mov jnp bound subb sbb mov cmp arpl or imul jns adc (bad) aaa das incl arpl insl movsl inc sbb or cmpsl gs sub adc pushf cmc sbb jp adcb jp jno insb aas xor mov push sub or test pop (bad) fwait insb lods (bad) in inc adc jmp adc push das dec push xsaveopt xchg lods or or or cmp adc (bad) xchg and gs lar mov jo add or mov pop cmp cmp push xchg add or push addr16 xor xchg les dec outsl pop xlat adc xchg rol mov add int cmp fidivl sub inc int3 ret xor or or mov lret dec mov es daa mov flds jnp cmp add jl or cmpsb mov xor pop adc and out or test mov sub sarb xor jg sbb add lock inc cmpsl add mov popa jge xor dec inc movsb stos (bad) aas adc (bad) pop mov pusha lods int3 fistp mov or xor movsl xchg loope xor movsl push jo jo xor (bad) sbb sbb (bad) pop dec push sbb mov cmpsl aas (bad) xor (bad) sbb mov fdivs xor inc sbb push add ds dec jnp or mov shll adc or dec repz or fs dec dec pop add lret cmp sub xor scas aaa decl lret pop adc xorl dec push es jo jb bound adc jmp add (bad) loopne push adc xchg (bad) xorb inc pop dec add add orl or rorb sub out nop js xor (bad) mov adc js shrb inc push push push mov (bad) jb sti sub pop mov and and into xor push adc jecxz xchg mov das dec cld xor hlt mov (bad) popa and sbb xchg push push adc pop ja shrb (bad) aaa pop mov pop xchg xchg mov pop cmp and es inc xor mov dec pop xchg cli mov imul pop sbb push xor push inc or inc or adc lods push mov mov pop movsl loope xor addb sbb mov test ret stos mov add jecxz cmp pop xchg shrb fistp or mov inc sub (bad) call pop cmp add jl dec and js (bad) and add jg pushf sub dec push xchg hlt push and imul pushf cmpsl sbb shlb and add sbb lock popa jl cmpsb hlt xchg xor pop mov add gs rolb fldcw cmp bound dec mov insl add sbb and inc insb loopne adc fiadd int loopne or mov sbb mov aam add (bad) inc mov jmp pusha test cmp jo xchg (bad) xor and jne lds dec cwtl add xchg adcl and push cmpsb es daa lea out cmp rcrl (bad) js subb adc jno daa rcrl or es imul push inc loopne enter pop sub sub in loope imul sbb mov movsl lcall les jae adc cmp addl xlat or xor mov and add rorb and mov cmp jg xor inc pop mov lods or fildll xor add addr16 lcall insb loope arpl or xchg movsb jl and gs fwait jmp xor mov push pop inc (bad) xor or ror (bad) je loope xor cmp mov pusha sub and inc daa push ds xchg scas cmp or adc jb mov xlat dec add jno sbb push adc lds or add sbb push mov adc je rclb push mov data16 pushf or sub cmp sub or loope mov subl adc adc aas inc xor push daa imul push add test pop loope dec sbb push xor adc movsl ret aad sub call xchg test rcrl pop aad push roll pop xor push inc dec data16 adc cwtl xor adc lds jmp movsl sub xor cmpl and fistp mov loopne sbb mov and rcl mov cmpsl cmpsl movsl mulps pusha jno sub mov dec inc test ljmp add xor push dec and mov rclb xchg ds push sub mov add add jno shrl fnstcw insl mov (bad) sbb sub nop cmp cmp loop xor adc push in inc inc fild or and andl ljmp loopne mov pop and mov xor xchg ret cmpl bound je out jecxz scas sub outsb leave es xor sub sbb into xlat fcompl inc and data16 add sub cltd cwtd andb mov test in push xchg cmp add or lea mov mov lea xchg xchg aaa xchg mov sub lock sarb fwait (bad) lock je das or xchg mov or inc sub adc mov add test pusha dec or std xchg sbb or mov adc pop sbb mov push push xchg lods push pop scas test rcrl cmpl popa sub (bad) cmp jne into aam mov xchg or inc cmp pushf lods inc imul mov inc or fwait xor enter insl sbb cmp dec jmp or sbb cmp mov add sub or and jecxz xchg cmp repz jo loop mov jp jecxz aaa fimul or pop dec aam dec sub and xchg push ret or popa loop andb leave cmp pushf pop dec and add (bad) pop scas lock pop and outsl roll adc sbb cmpsb mov lods adc push daa dec sbb frstor add mov pop push xchg lock xchg dec sbb arpl and push (bad) or mov cmpsl popf jp xor adc movsl and xor adc pushf adc adc adc xchg add or or aam sub (bad) (bad) movsl mov or dec (bad) dec add cmp es sbb mov add lcall inc fnstcw int pusha or mov lds mov daa sbb add mov ljmp sbb xor or fnstcw jo cld xor arpl lea xchg test xor push and movsb dec mov add adc adc jnp test fcoms lcall pop clc dec adc mov xchg and lock ss add lret inc xor jno xor daa jmp mov movb sti jecxz ret sub cmp xchg sub push es add mov mov push sub (bad) adcl arpl psubq push stos add push pop dec add mov test (bad) add add inc adc or test push icebp sbb add pushf cmpsb dec adc js adc ljmp xor insb daa xchg dec out sahf inc and push xor nop push shrb cs insl loope cmc pusha test xchg sub rclb xor je sub mov and xchg sbb sub sub lods (bad) dec sub test or push pop call pop mov stc push xor add std ja popa popa or imul xchg add mov adc pop lahf xchg dec dec xor adc sub cltd or test sbb inc cmpb push das cmp aam fisub add in movsl ja popl push dec clc sub pop cmp sbb ja jno sub rorl enter int xchg rcl mov push push pop mov or mov dec add in inc lahf shl sbb cmpb in add ret mov xor add pushf and jge shrb mov scas xor movsl and jno int3 sbb jp je adc add add and pop mov ret stos test add pop mov test inc cmp sbb xchg andb mov pop and push inc repnz or push dec adc leave add ss or std std push mov jo xor movsl adc or mov insl imul mov add xchg mov jle fiaddl ficom imul insl dec cmc cmpl arpl pop xor mov inc dec or add inc xchg mov pop cltd (bad) or and adc inc push clc test add sub mov mov outsl (bad) and mov (bad) (bad) rorl (bad) test out pusha cmpsl inc insl ret (bad) pusha imul push lock or mov xchg xor outsb pop xor cmp je xchg mov sbb mov pop or daa xor xor cmp pop inc pushf test (bad) push fcmovb mov add cli adc (bad) jae xor add adc sbb push jle pop insb or neg (bad) jo and mov sbb and cmpsl xor jbe pop fcmovnu insl in movsb nop inc sbb arpl aaa xchg testl pop sbb sub pop pop subb es mov movsl fldl inc aas add add inc mov and int cmp arpl mov lea adcb jb pop xor leave (bad) cmp ret xor fldenv xchg and adc dec xchg xchg pop sahf movl movsl xchg xchg ret rorb mov mov and inc cmp mov sahf push (bad) imul (bad) xor and sbb jmp push xchg dec bound xchg xchg push dec and loope or mov fnsave movsl lods shl push or cmp das into add lods mov xchg mov and fwait xor addr16 sahf adc daa popa outsl mov xchg mov xor imul cmpsb push mov mulps cmp push sar orb cld xor mov (bad) mov fs aaa add inc pusha lods jbe addl shlb add push add mov jo add xor repz xor adc mov loope or or xchg sbb xchg push aad addb mov insb or push clc sub ss sub addr16 aas je push or fs adc nop repz and inc and dec adc (bad) fisubrl (bad) dec orl adc scas or push pop cmpsb sti fcoms mov nop lock leave es fisttp pop jmp push xor adc sub (bad) xor add mov add mov es adc cmc xor sbb mov arpl add jnp xor sub add xchg and xchg mov (bad) test adc sub mov cwtl or loop add add rclb push inc xchg rcl jb mov test mov adc sbb xchg xor and rolb enter and gs mov xor outsb cmpsl dec enter int sbb or pushf scas pop adc test andl sbb xor xchg add (bad) loopne loop into jae pop inc mov adc xor lds js (bad) sbb pusha sbb mov fnop cltd aaa xchg sbb lcall (bad) sub (bad) aaa inc xor pop or push sarb or mov loope jae mov movsb orl and push xor bound xchg mov leave xlat out or pop xchg (bad) mov inc aas mov xor add pop dec and cmp nop mov xor adc add cmp rolb movb loopne scas fs mov pop jp xor push daa dec popa bound nop aaa mov scas in and frstor adc mov push or dec mov popf cmc mov push andl (bad) and in inc pop cmp and dec xor rorb fistpl or ret dec (bad) jle or xor addl ret inc fwait cmp mov lds (bad) and or xor lret xor movsl or push push push dec sti push fcmovu sbb xorl inc mov lds xchg and mov arpl or mov inc test fsubs sbb in sbb xor cmp xchg xchg sub inc (bad) movsl loope (bad) dec add shlb fild flds add add jge out adc inc dec jecxz sbb xchg mov inc mov and push push add mov jno sub fcomps add adc xor leave jb cmp cltd pop insb inc test sbbl les movsl icebp imul pop add add dec cmc mov adc mov scas add test sbb push inc sbb in std (bad) pop jo insb mov mov loope lock add inc movsb mov and sub and sbb dec fstl fldenv push push add leave and mov cmp ret mov mov dec outsl add mov shrb pop ljmp xchg mov and das loope rorb cld es orl and dec adc or imul lahf ss xorb je lea sbb testl out scas or (bad) xor mov sub push imul jne dec lret xchg loope mov push jge inc push or flds and and insl and mov shr arpl pop jo mov out xchg sub imul imul sahf sahf fldenv xchg insb pop gs and push dec xchg and dec sbb xor adc mov push (bad) repz xor add xchg jnp mov mov int shrb or in fs shlb inc sub jb jmp aam and add xchg mov aas xor nop sbb int3 inc cmp pop add nop movb dec mov cmp or cmpsb pusha (bad) inc or mov xlat icebp dec dec into sbb adc adc xor bound (bad) cld xchg add mov gs rcr rclb jo push cmpsl xchg mov adc cmpsb xor sahf jbe sbb mov xchg lcall and mov stos mov cmc push aam es aaa icebp sbb dec push imul sub mov lcall dec movl popa bound or jge add dec test int jecxz push inc adc andb insb jns dec add lods inc xor test mov xchg and sar hlt popa dec icebp mov and int (bad) mov inc adc xor das push xchg add pushf push test add pop sbb xor xor imul cwtl add mov lock add xchg (bad) popa popa fcoml sahf lock movb push cmp cli repz inc pop dec mov repnz int pop and adc test sbb inc sbb aad sub and mov inc push cmpsb (bad) xor pop and add test push js or add (bad) or rolb pusha mov dec dec adc inc mov inc int js jo push adc ljmp jg sbb flds jo pop stos pop jo addb inc mov xchg ret mov dec sub idivl pusha adc xchg inc sbb add imul mov mov xor pop (bad) out outsb jns inc cmpsb cs adc jnp out pop pop or push roll inc xchg mov add or adc jo cmc dec xor decl xchg push sbb rorb movsb push shll inc inc sub xor std scas or mov jbe add adc sub inc and and and cmp cmpb ss movsb inc jne mov and test shrl jbe adc dec mov inc mov (bad) das pop inc popa dec push xor add lret pop call into adc inc sub mov sbb pop pop lods or aaa push rolb fcompl clc imul subl pop enter mov and dec xchg push mov bound pusha sub pop loopne and push aaa sbb lods leave sub xchg push mov adc stos xor or nop pop or pop push jne daa cmp or mov xchg mov xor lcall ss inc fisubr mov aam add mov pop rolb xor sysexit and or bound or cmp push dec adc or lds call fs jo fadd flds fwait mov sub (bad) nop add ret sub adc out add xor call mov rorl loop cltd andl push adc add ja push mov xchg sub inc or enter push add shrb push jle mov add mov inc pop data16 test and inc dec ret (bad) jecxz and jmp sbb pop cli cmp dec sub cs sahf xchg and cs sbb and and test in and add pop xchg xchg loop add or inc loopne jae push int3 inc jne loope xchg add addl mov and adc in dec mov adc andl xlat jle mov aaa popf push jne sub loopne push loope mov movsl add or sub mov xor dec lds add pusha sarl cmc cltd pushl pop mov add clc mov int adc mov xchg (bad) push adc or movsb ret jmp mov ret mov xchg and outsb sbb rolb sbb (bad) pushf addb pop or and mov add mov mov out lret jo add add and fidiv pop mov dec and loop add xchg xchg loope les and inc inc xlat divl ja and dec (bad) push add adc mov mov sub imul push ret add adc add inc mov adc cs test xor mov cli call rorb push popa adc cmp mov mov das outsb or and sub sbb cmpsl or sub orl ljmp int3 xor addr16 jno dec add lods xor nop xor (bad) mov fndisi(8087 pusha and inc outsl in sbb xchg hlt dec jecxz inc add mov movsb (bad) jmp or mov adc push cwtl test sub or dec sbb adc andl rorb movsl fs loopne imul push inc aas push xchg push dec add lods mov lods fwait or bound imul sbb and es insb aaa push jp xchg iret xor dec jecxz mov pop cmp cmp xor cmp push sahf pop popa pop mov fldenv in mov mov sub in add and or xor adc add pop shrl xchg or sub ljmp and call rol (bad) mov sbb cvtps2pi xchg xchg (bad) xor lds ret std push push cmp inc sbb movsl aad xchg movsb lds shrl mov pop pop or (bad) pop int3 adc xor xchg xor and test lcall cmpsl add jb inc push push or adc sbbl lea daa add insb xchg adc xchg pop test mov xchg inc xor add or mov add push mov inc inc sub push fdivrs mov push inc lcall add mov adc fabs inc add cmp (bad) pop or push xchg punpckhwd inc and dec pusha cmp xchg inc xchg daa jmp and rol ficoml xchg lds sub dec cwtl sub inc xor sti jecxz jp xchg xchg pusha and adc xchg or rol adcl nop mov jo sbb inc mov mov ret lret (bad) sbb ss cltd xor lea add lods push xchg cmp mov sub loopne add mov xadd ss (bad) daa lods push cmc dec xchg add pusha pop xor pop rolb leave sbb jne xchg (bad) sbb ss popa adc mov sub jp pop push gs push cmp pop or xchg cmp int push xorb adc jb jno test lret mov lock xor push (bad) cs inc ss mov add inc rcrb mov fcmovnbe call lret lret sub es loop add cli nop imul mov cmpsl push lahf in and sbb mov arpl mov push lahf and push add inc lods test adc fistpl push ljmp sahf cmp cwtl shlb add fcomps rcr jnp add add mov js xchg xor inc sub (bad) dec inc mov pop pop test inc xor cmp sbb jno jg or sub dec in movsl adc sbb lock shll dec inc (bad) xchg or xchg and pop add (bad) sbb jne scas mov pusha fs pop mov xchg cmp xchg and cmp ja movsb loope lret gs and push jmp xor aad ret and pop xor ret movb and sbb popa test adc mov leave nop dec outsl xchg push jns mov movsl dec or sub cmp fcoml add dec cmc inc aaa sub or and dec cmp lret pop push or gs ds push scas jns ss add addb or or add xor les and mov add les sub xor inc xchg or pop pop and dec mov mov mov fldcw clc mov ret sub jo pop sub pop pop cmp adc xor dec fldcw inc (bad) loope adc (bad) out mov and lret aam push aaa mov or enter mov sub mov sub adc cmp lock lret adcb pusha jno ret push popa mov mov inc sbb push clc sub insl push mov test or sbb cmp push mov rorb jle mov imul inc mov adc ss imul cld cmp pop sbb in add add push xchg pushf mov cltd xchg mov icebp mov push xor ret sub push pop xor dec dec sbb out test mov aam orl mov (bad) pop pop sbb or push jae mov imul rcrw add adc mov inc movb dec mov xor xchg xor stc (bad) sahf nop inc adc add shll push idivl cmp add and enter adc add mov xchg (bad) push loope in insb add lret add and mov repz stos adc mov jo sub add xchg rcll daa sbb xor gs test add push (bad) push xor push xchg or xor sbb xchg sbb lds sbb sub xor dec or add test xor sbb cmpsb jge in sbb rorl adc pop imul fistp mov imul dec xchg sub arpl xchg xchg inc pusha insl sub adc lret mov imul sub sub mov or dec (bad) or mov insb addr16 mov push xor rol icebp cmp inc out cvtps2pd pusha sbb add test dec lods cli mov push or icebp call lahf lods and dec cmp mov and pushf adc sbb pusha mov mov push fldl sbb cwtl xchg lock add xor scas fsubp inc push cld xchg mov xor mov cmp into rorb xchg fisubl push mov mov adc inc into aad adc xchg mov push or xor scas ss and xor nop cmp int3 gs or push add test test rorb stos pushf fwait sbb push inc rorb inc dec inc jge push (bad) mov dec ret lds adcl aaa mov sub outsb pop or flds add xchg nop ret push dec ret orl stc dec test pop rolb jne push add vmwrite push sub dec stos mov add or nop cmp sbb mov or push cmp push lea sti scas dec or ret push test inc inc clc test adc adcl test in pop aam ljmp inc adc and fs mov popa loop jg add xor rcrb dec gs and es cmp mov sbb lahf mov lret add pop (bad) inc xchg sbb cmp (bad) shlb add cli mov or imul mov pop inc ret arpl cltd mov lret pop pop and or add jo dec scas add mov imul fs imul jecxz inc adc pop adc sbb adc test and aas (bad) aaa mov leave jp or pop pop cmpsb pop popa xor out xchg arpl (bad) cmc xor gs pop and lods xor inc daa and xchg loopne inc cmp mov push xor cli imul or cs cmp jg or pop test cmp add mov inc repnz mov mov test cmp ja and or (bad) and lods jo popf iret mov mov leave mov adc (bad) xchg pop icebp sub mov and fcoms add arpl int xor imul mov sub inc pop inc dec xchg or mov es clc sbb and or pusha call xchg and dec (bad) nop push inc mov xor pop pop (bad) cmpsl and movsb mov xchg push mov bound arpl xchg mov push jp fbstp fsubl ret (bad) cmp ror xor pusha inc nop or xchg add and mov mov push xor jns push sbb adc sub enter sub loope mov sbb and cmp aam jmp fmul pop xor add xchg nop mov push sub pusha add push test add andb loope insl rcl push or mov (bad) ljmp ficom dec movsb sbb pop rolb xchg mov push mov dec pop add xor push gs int cwtl lcall pop ret sarb pop lea xor and add xor push insb add xchg sti dec push leave sbb cmp adc xor pop enter int push xchg or arpl in push and test dec in jo dec mov cmovs rclb add call dec aad add jmp or test cs js insl push and dec fldcw and add cmpb dec dec mov subl nop xor pop jne cltd push push xor mov xchg or pusha xor jno lock push mov push aaa inc sub rolb and or int hlt or inc adc es sub mov cmp (bad) mov sbb and adc mov sbb dec inc ret xor mov or dec cmp int push dec mov cwtl test add xor inc mov (bad) ret mov dec stos xor mov pusha sbb cmp sbb or mov xchg jo xchg and mov imul adc add sub mov cmp and jo jmp pop (bad) or pushf dec lret pop cltd repz push stos fist pop mov add add rcrb pop inc mov cmp mov add sub wbinvd xor add push push xor and or pop ljmp push rcrb sub insb lods dec fbstp je mov loop or pop adc sub cmp dec dec mov jb cmc and add jp sarb mov mov inc sbbb shrb add push jge lret and lods sbb fmuls dec (bad) cmp lahf or test xor cwtl jae stos jle (bad) and fadds je pop popa xorb ss sub rclb sbb or xor rcr xchg movsl inc popf adc ret pop push ret scas (bad) xor push stos xor xchg adc daa cmp mov xor scas or add pop pop jne inc push fmull and mov add (bad) roll (bad) xchg mov mov sbbl push cwtl add dec (bad) push mov daa adc xor cmp test sub jns mov adc mov add cmp pop jmp ret pop xor push nop jb (bad) xor add movsl push dec push ficom dec add sbb daa push mov or lret dec les ja test push xor clc addr16 inc or xchg hlt stos add nop sbb sbb inc inc jnp or and sbb ss call sbb sub xor gs ss xor or push mov aaa adc and or xorl stos test inc mov cmpsl aaa nopl mov or rorl or pop jg sarl fwait sbb mov xor roll or and xor add xchg test in push jp or mov jb test ret cmp test mov or xor mov clc popa inc xor add (bad) sbb jne add mov adc pop adc mov cwtl dec mov mov and mov push xchg inc cmpsb pop inc sub aad gs insb inc (bad) dec js mov movsl adc add sbb or std or xor gs mov xchg or fist add or add push xor mov jp push pop sub dec sbb andl cmpsb imul dec adc mov arpl add movsb imulb push cltd and and insl jmp rclb and pop adc sbbl push pop fdivl jne shll loopne insb sbb ret mov mov push inc xadd jl sahf add push in ss mov jge mov adc xchg sbb loope dec scas fs xchg and mov imul mov sub loop xchg insb jns testl ret jo aaa je sub ret nop test push fsts enter sbb cltd les ss adc dec lods popa lret push push mov adc lret or mov and adc or ret stc or xchg mulb xchg xchg or add js inc rol nop (bad) xor test int test inc sub mov inc clc jne jnp jecxz cmpps jbe sbb fnstenv sbb rcrl mov xor (bad) jns sahf mov jp push sbb inc jl insl pop lcall dec cwtl ds push nop and cmp jno adc dec jb xchg imul bsf ficompl pop dec and mov dec sbb dec and sub fcom adc test push mov inc jo sbb cmp add and cmp cmp fstps jb outsl sub jne and loopne rolb popa add xor add ret rol (bad) test rcrl aaa xchg and dec pop adc mov mov and push jecxz jl mov inc inc lret add sbb xchg out insl or ss aaa (bad) push adc pop mov push mov in push pushf xor mov insl sbb scas test sub imul icebp add and pusha push jg push add dec sub sahf and xorb sbb push popa out lcall and push mov ds sub movsl mov cmp inc add or adc push bound dec or mov xor sub leave add jno cmp mov xchg mov xlat or mov sbb dec dec push movsl sub mov sub add sub mov sbb pop lcall xor pop adc adc stos rcll mov sub xchg push cmp mov lods xchg sbb or bound test dec gs mov and pop push imul adc or aas movsl push sbb or add cmp jg add push pop add js and movsl lcall lods xor xor mov (bad) orb add sbb fwait pop add mov inc hlt lds fild xor or pop sbb sub pop pop aad jp jecxz xchg xor mov pop lock adc insl lret (bad) sub sbb sbb imul es xchg rol mov sub imul imul cld gs ret sbb ret faddp push mov aad pusha add jne xchg outsb pop fidivl mov test or xchg mov add sub cmp jb (bad) mov pop sahf mov inc ret jecxz mov scas or bound nop adc dec or or test icebp loopne pop push dec sbb call adc cmp imul xor shll mov push sbb xorb add push add test nop jno and mov gs add inc or test or or jecxz fadds daa add test sub mov mov mov or in cmp ret test or pop or dec pop nop fucomip xchg (bad) xor out lock subl test icebp xchg inc xchg pop les push insb jns mov and xchg push nop push mov lock add cmp sub add inc add addr16 xor lods test push dec xor (bad) sbb or cmpsb test or jns mov xchg dec je es lods push in pop test and popa jl push mov push (bad) jge test and jge add bound xchg dec pop adc cs shll cwtl xchg in sub mov das ret jns or cltd call mov or lret add outsl ljmp cmp jge add xchg lahf loopne mov add insl add push jbe mov gs shrl jbe jp ffree cs mov or pop inc ret (bad) mov pop scas shr aad inc (bad) dec sub sub sbb jecxz flds pusha inc and leave js inc add test jp cmp add ret gs fs or xor adc or jno push push test out push js dec inc push mov and and fs lahf push xchg and pusha and dec sti leave xor cwtl test mov mov or sbb mov adcl sahf inc and insb push dec fldl sub or aam inc call push dec test pusha add into jecxz lcall and mov fdivr jp or out popa cmc inc jmp (bad) or cltd nop xchg pushf push popa or xor or int xchg loopne fs bound pop sbb shrb insl cmp pusha test sub mov add push xchg shrl cmpl sbb push sub lahf mov xchg cmp add push cmp push les pushf xor enter xor gs test push or mov cmpsb push pop shrb popa int3 adc mov mov pushf sub (bad) ds cmp and push inc aad pop sbb xor pop cli (bad) add jo dec mov jg xchg inc add push adc test subb xchg out pop imul div fistl add xchg mov lea push and mov jno adc les cli rcrb mov lea test inc push out xor lret xchg or data16 or or push push mov pop xor mov in inc and dec insl or adc jns xchg test repz add movsb add enter lcall fstpt and xorl dec mov xor subl imul pop inc cmp imul and lahf or or loopne stc fld enter xchg enter ds jmp dec xor xor imul cmp cmp dec xchg mov or or sti fs mov dec dec repz popa push push xor arpl daa cltd sbb sub or sub mov mov cmp adc lock or sbb dec add or mov add mov repnz inc roll add and sub and and imul (bad) bound test jmp sbb add popf adc (bad) sub arpl adc add dec test scas adc loopne jmp add inc dec or mov addr16 xor sub popf adc mov mov js push xchg nop pop jbe xor sbb mov inc xchg and movsb mov sub movsb test popf es xchg ds outsb push rorb enter pop lcall inc adc leave push cmpsb imul xchg dec mull adc or xchg pusha mov and jmp mov xor xchg sub xchg cmpsb outsb push pop sbb inc loope fildll and lret mov add add adc or cmpsb in add xor mov addr16 mov fs mov and insl adc cmp and divb mov or inc add jmp sbb fstpl insb lea cld xchg xchg test dec and mov and pusha mov sbb xor mov loope dec std test ret in xchg sub in adc mov and jo stc ja push sbb pop inc jecxz pusha mov push outsb iret enter mov aaa jo mov aas sbb je or outsb pop imul xchg mov nop int3 adc loope or ret pop ds sub aas (bad) xor adc jo jno mov bound jne popf or and aam or xchg popa rcrl lods lods (bad) sbb pop test leave in mov rclb mov rcrb jbe mov mov fmuls cmp ud2 popf xor sub add push mov add sub (bad) repz aad lods sub push mov jne sub sbb cmp adc movsb repz jae pop xchg (bad) inc or sbb mov nop popl add bound cmp mov movb lea mov adc and add inc test dec lods test cmp fsubl mov add call dec js mov xchg addr16 mov inc roll or mov inc xchg push call pop (bad) (bad) or xor mov pusha mov dec pop outsl dec add sub inc add mov and cmp insl push shlb icebp cs xor push add in mov jne xor dec xor cmp push popa add shll xchg mov dec pop out pop test aam and loope add sbb adc mov (bad) rorb add int3 popf out cmpsb addb xor test xor (bad) or rcrb addr16 xchg mov sub inc cmp inc leave andb adc gs and sbb add (bad) push mov les pop dec rcll push lea popa xchg insb xchg jo or imul adc pop je lret ret sbb xor xchg cmpsl pop jno test push outsl xor sti xor add test push lret js dec xor cli cmp jecxz aaa xchg or xchg add shr les and cltd mov je xchg sbb add ljmp and andl push loope ret inc mov (bad) jnp js inc xchg insl pop lock push add dec dec stc add jmp mov cmp mov xor add and outsb cmp ljmp sub add or jl inc xor xor pushf popa xlat cmp sub ret es sub test mov lret jp lods push jne add ret shrb loop sbb cmc rol lods imul das xor adc dec sub rclb pop test mov pop (bad) lret sub inc call push add je (bad) xchg loope test popa push iret outsb mov pop xchg xchg les mov or xchg out inc mov popa push aas dec insl pusha addr16 sar adc rolb lock jmp dec push mov je or push outsl xor lcall in sub inc adc add nop loope jnp (bad) sbb or add pop inc sub loope out adc nop mov ffree (bad) sub cmp scas mov loope sub rcr inc daa mov scas dec adc push orl test xor popa icebp and cmpl into cltd and ret mov mov sub dec jmp sub jne xor add inc and xchg popf cmp iret mov mov (bad) xor or adcl sub xchg or jnp xchg xchg add inc and sbb clc xorl mov imul cmp mov add inc xchg mov or add adc popa jno cwtl rcll sbb mov push sbb mov pushf lret fs popa xchg outsb fisttpll sub dec daa sub adc xor enter or imul pushl scas rcl mov and rorl add lea pop pop hlt adc mov push andl mov insb xor pop movb aad pop jp inc sbb popa or adc push sbb mov inc push movsl and or adc sbb xchg add dec xchg add add lock movsb dec add and push add mov shrl xor jp int xor inc divb or jne add xor pushf cmp lods add push sub push mov rclb pusha pop (bad) aaa movsb push pop or adc push cwtl push and xor mov pop lcall pop add nop xor inc push add pop pop js pop rcl roll arpl (bad) pop scas adc in jae adcb or mov and shll add pop stos sbb loopne xchg adcl test sub add icebp rdpmc inc and inc mov rclb sbb iret inc mov mov jo stos popa push mov rorb mov push lock out pop int3 adc jmp add add pop push sbb pop repz rorb (bad) or xor add sbb dec xor mov mov aad rcrb (bad) fisttpl popa lret (bad) add sbb add (bad) test sbb mov mov cwtl mov pop push cmp gs orl dec inc in loopne pop lret popa es mov inc pop add test fcom cmp jl add pop or adc cwtl xlat dec xchg dec or and gs xchg add out cltd xor sti jg add lock push adc jmp in jnp sbb pop pop cmp mov cmpsl xor sbb mov test ret ret mov (bad) daa adc (bad) pop stos dec int cmpb inc call inc push mov add inc xorl aaa movsb sbb lock rolb dec and pop sahf xor in mov adc mov add adc insl imul outsl xor movsb shlb movl cmpl inc or add mov and adc mov sbb test inc add add mov adc rorl sub ficoml sbb mov jno pop fnop add nop adc add aam add pop (bad) repz add cmpsb pop or mov imul pop pop insb mov xor sub pusha loop dec popa cmpsb push add mov test push cmp popa cmp add or call adc mov cmp aad push cmp xor adc or adc sub lods sub sub add dec mov in xor les aam adc and aam imul fldenv imul (bad) divb sbb cmpl test xchg push lea in ljmp flds iret xchg and xor gs outsl adc dec cmp gs mov lea out je push (bad) lcall or and ss repnz rcrb xor adc mov mov stos cmc mov push push adc andl inc pop icebp adc add add push jns js lods movsl test pop or scas pusha sbb jb pop xor push adc icebp xor mov cmp or sahf push lock sbb mov dec mov mov roll stos cmpsb pusha ds mov loopne leave out pop inc nop mov xor xor rolb rcrb (bad) xorl jb andb jle or iret and lods shrl lds and dec enter pop ret xchg sbb add sub aad xchg jne pop popa jl std cmp or pop psubusw lret pop test fwait cmp sub frstpm(287 inc and or in add sub and popa pushf xor jmp or loope out push xor sbb repz mov rorl fsubrl sbb andl or ss dec or cmc aam inc (bad) cli push adc inc mov js push add aas into dec js scas push add xor adc or mov and adcb cmpsl ret ret sti mov mov decb sahf dec imul and sub fwait add jno jmp fstpl clc and (bad) cmp mov lahf mov or xchg call inc sub test mov fcomps dec outsb push pop shrb jno mov sbb and add ja imul cmp mov pop lods jecxz and sahf or push xor nop mov push lret jns mov sar ja mov ljmp xchg (bad) and cltd test push inc cltd (bad) mov lock movsl dec xchg push es addb dec scas and sub or and lea push sahf stos cmp vmulps rorb xorl fs xchg pusha push xchg xchg sbb xchg (bad) js inc jmp and popa mov lret or sbb repnz and aaa push inc xor sub jnp mov fistp lret fwait into inc add or lods sub ficoml dec imul cmc push inc rclb xor popa xor rcl jae nop (bad) adc into daa repnz xor push push add pop cmp sti (bad) adc lret and mov sub inc and in add scas iret mov mov sbb adc popa push xchg outsl cs or inc mov xor inc mov (bad) sub push sub sub mov ret ret ret rcrl dec mov inc xor das test adc adc and pusha jg jp pop mov aaa sbb test xchg xchg stc jo mov dec or pop or addr16 mov and sub ljmp jb add cmp cmp (bad) ret cltd les lea dec lret sub push sub mov es fwait adc daa test pop dec imul xchg add imul insb xor xchg imul fadds cmp js adc or mov ljmp scas rorl je mov inc adc (bad) mov fwait imul mov inc mov daa add or lea insl sub lds xor xor mov ret outsl mov pushf and push xchg or fadds sahf mov shll movsl mov movsl add andl pop and push (bad) (bad) ss call inc sub xchg fnsave cltd sbb sub or or dec jnp and inc jmp push cmp (bad) mov mov les push out test mov lods sub stos popa or xor xor adc mov mov sbb dec cmc xor jecxz sbb xchg (bad) outsb mov mov ret gs shl inc xor sbb sub dec adc daa mov ds or sbb repnz insl mov adc popf dec or (bad) jnp sbb cmp jecxz lods nop test push and lret xchg adc inc mov xor push rorl xor mov mov or movsl xchg or push or dec sub push bound out jnp gs mov xor dec adc pop sub push test push mov test adc ja imul mov sub dec inc rcll adc add mov sbb xor adc xor dec or lock imul data16 fadds jno,pn push mov xchg adc movsl xchg movsl push (bad) jmp into (bad) or pop or mov mov cltd dec pop add sti lods and push test xchg insl xor push dec push gs cmp mov into nop add xor pusha fxch adc je or and das push push call rcl pop and xorb fisttp les add adc mov mov sub (bad) push xchg popa mov mov xor xor xor adc push dec dec shrl inc jae loope (bad) mov push sbb lods lret out call add in loopne add add aaa add inc mov mov jbe or outsb cmp and adc ret gs inc (bad) fstps testb mov outsb cwtl push adc pop in mov or inc mov push cwtl mov inc xor xchg adc add jne push jle xor dec mov push dec cmp sub inc stos xchg add pop or mov dec pop out in sti enter pop movsl push xchg and call xchg and sar cmp fldl and ret sub adcb mov mov data16 push mov pushf jle nop and or xchg add aas and cmpl mov pushf ret test inc and sub pop push add push call adc lea or sub shlb rolb sbb lea cmp jno jbe xchg test cltd insb mov sbb mov out pusha or mov testl add sub or add cmp dec imul xchg (bad) iret xchg je popa fwait and (bad) push andb and add pop mov sub mov int sub pop insl movsl push insb push sbb mov loope repz aaa push or iret ds push inc sbb jne rolb add pop push xchg pop xor loope adcl in cmp inc xorl daa cmp xor or cmp cmp xchg or adc js (bad) xchg inc aas and mov sbb sbb test and and in fwait dec adc xor (bad) xor mov arpl mov adc mov inc lea xor mov lds xchg xchg ret nop sub mov scas push lds movsl sbb or addr16 mov mov aaa (bad) xor ljmp sub (bad) or sbb sub or or or inc fidiv sub jae cmp addr16 pop aad mov arpl lea fimull scas ss add inc pop sbb sbb adc and xchg dec loop and fbstp adc xchg stc clc push daa inc jg loope (bad) adc push or dec sub dec cmpsb pusha sub inc and inc jmp sub xchg nop in mov test sub xor xchg arpl xor mov dec cmp adc inc pusha sub dec roll loopne mov or lret mov xor je sbb mov jbe or fdivs push add test mov sbb loopne and pop test pop dec adc push sarb pushl or adc movsl and mov or dec xchg add push les add ss dec (bad) add loope or adcb sub into adc dec movsb sbb sahf jno or or add dec jecxz mov andl mov imul and (bad) mov push je leave push and hlt sub cmp movsl pop xchg dec or (bad) aaa inc rcl es jl push pop ret cli nop and jnp sub scas ret and push pop lods (bad) and cmpsl imul push movsl add and xchg mov or xchg addb addl sub pop xchg sub cmpb xchg sbb add sti push push mov in lcall or push mov popa add or shlb jmp jno loopne add incb xor inc sahf lods (bad) sbb iret ss cmp pop loopne cmpsb adc push into test cmp dec lret jae lock add out inc add imul mov mov sbb mov mov and movntq adc push pusha hlt mov mov or cli inc push xlat mov jne movsl ss mov xlat push add movsb and bound or rcl pusha popa add lret add in pop and ficompl cwtl rolb (bad) xor inc cmp data16 sti xor out mov mov pop dec ret dec pop mov dec inc jp and mov aas dec fs loopne dec xchg push les add jecxz test lock and (bad) push movsl and aad lock jb xor pop sub scas stos inc or xorl add and test cld or sbb aas pop xchg inc loopne sub sbb adc mov adc in call xor test inc xchg cmp cmpsb adc add pop xor mov sbb or pushf and loop adc test inc push lock inc sub bound sbb mov sbb push aaa lods mov mov mov (bad) icebp mov pop rorl or adc aaa add and ljmp xor pop xchg pop sbb or and je jnp (bad) jns pushf jge mov xchg cltd xchg push xor dec ret mov call lcall gs popf lcall rclb insl pusha mov and scas mov test fistpll mov xorl pop les pushaw icebp bound push pop push into pushf pop add lods xor mov popa xor jmp loope (bad) test mov rolb jmp js,pt and fldl xor cwtl data16 xor add rorb sbb cmp xlat and leave pop push sbb pop sub rol xor cwtl test push pusha xorb popa cltd mov sbb enter lods xor jbe test xor loopne xor and lods push inc inc es and imull and xchg lods and sub movsb sbbb ret pop addb scas adc and push iret cmp es cmp add cmp add rolb test xchg inc pop int3 push sarb or sti push cmpb sarl jle dec pop dec cmp push or cmpsl or rorb je jne rcrb pop sarb imul xlat sbb or lods loope sub pop mov push jo mov mov gs sub cmp mov add and das (bad) lock daa arpl xor sub mov jae stos dec jmp xor (bad) sbb movsb cmp test fucomp sahf cmp dec sbb and sub outsl and ljmp inc add mov mov mov xchg mov push orl pop pop inc rcrb andb outsl sub xchg mov sub mov imul inc xchg das jmp lret adc pop jo xor cmp adc dec cwtl out xor fbstp xlat icebp inc push mov add adc je adc dec (bad) xor sub mov daa or js sbb xchg shll in lret aad push pop pushf es repnz fildll xchg insb jmp (bad) xor sbb in xor or (bad) xor add sahf sub dec inc xor pop pop mov push or adc mov ss andl dec lret test scas int or test or ret movl add ss sbbb cmp loope test clc push xor jns mov arpl mov shrl ret arpl adc xchg push mov arpl les mov movsl dec mov test (bad) addr16 call and add adc pop movsb (bad) xlat add push xchg cmp or pop xlat adc pop mov sub or sbb rolb sub or dec shrl loope add add push xchg adc sbb fsubl push fldenv or dec xchg (bad) jp jecxz jns xor insb lret add inc jb xchg mov test cmp sbb xor dec std pop js roll stos lret leave sub lods add andl adc leave mov mov cmp rolb inc sub addr16 inc in cmp imul lods call and inc push inc ja movl sub addb shrl or fdivrs inc ja sbb fistp das dec xor push xchg or xor or mov add (bad) dec push fisub sbb push fist adc dec js repz sbb pop inc mov xor adc imul cmp aaa dec mov roll xor test push mov cmpsb lods mov (bad) cmp dec and lock cmpsb gs inc fstps rorb push xchg mov test adc sub xor add pop pop sbb xchg mov xor lret and sub cmc sbb mov add dec and mov sbb push xchg add loopne adc xchg xchg dec loop,pn shrb and fwait in sbb xchg and ret int3 arpl xor mov push xchg cwtl es jp mov inc add jg xchg cmpsb or ret jne lahf cmpb je (bad) dec (bad) sub cld xor adc push xor mov adc and pop jno dec add cmp mov push outsl (bad) es fadds xor aas sbb cmp cmp leave inc (bad) mov adc pusha bound or xchg xchg sub mov test jne add xor jns mov or and push movsl sahf js and sub and mov ret cmc mov or jl pop repz cmp adc into aam ret test jno (bad) lahf lods arpl inc adc fisub fsubrs sub lds shrb or sbb and pop imul rol pop adc test pop and xor jg pop xor push mov movsl mov ror inc xlat jo mov sbb jo cmc mov inc cmp or nop (bad) popf sahf xchg mov or rolb lcall pop out fdivrs in adc rolb aad pop push cmp xchg or xchg xor inc and and inc call repnz cmp pusha and (bad) andb mov adc sub enter fs add and inc mov add cmp jg lret jne add (bad) hlt jbe dec or push rcl xchg (bad) bound (bad) xor cmpsl cmp sub mov mov sub js xor add pop rorb xor xchg mov pavgb add push dec and xchg pop xchg sbb xchg fsubs mov pop pop jge and rol outsl mov cmp dec pop leave mov fidivr enter fbld xchg push popa dec ficom adc pushf add or in pusha or and (bad) cmp push pop pop pop lcall or (bad) push mov test or or mov adc cmp dec test xchg sub ss nop sub inc dec loopne das lods xchg add shrb rclb push add sbbb cmpsl push or inc out inc das out mov sbb imul inc test mov xor or daa (bad) and add imul es add sti dec push dec mov int fs rcr pop (bad) pop xchg inc popa sbb xor pop inc push mov ja in pusha and jg inc lods push out (bad) xchg fsubs pop test lret sub jl xchg and aad add cmp cltd dec lods jae mov cmp mov mov inc mov bound adc ret hlt cmp test sbbb popa push pop imul sub add push jo or sub xchg test bound andb pop push stos adc movsl scas add lea lret fwait push movb xor push push mov cmp js mov add jne jo (bad) notl sbb mov outsl pop (bad) push lock inc ret xchg xor mov je popf sbb and aaa out daa and dec push rolb mov mov aad arpl fcomp shlb jbe xchg sahf and push adc cmpsl inc movsl imul (bad) aaa xor push ret push dec xor pop (bad) xor xor cli xor sub sub sub daa (bad) icebp rcll xor cmp add inc in mov shlb bound insl stos ljmp adc xchg push xchg mov clc and xor test data16 push out cmp test mov and repnz dec inc sub xor inc inc sub xor gs adc sub xor cmp xor cmp movb and jmp lods add ss fild arpl mov sbb inc int pop xor xor push and je xor lods loopne adc movl push cwtl lds insl pop adc cmpsb mov (bad) rcrb dec lea push inc daa lds mov daa mov xchg ret adc add or data16 sbb cmp cmp sbb inc movsl cmp adc in cmp sbb push mov add cs gs ret pop addb or xchg idivb xor sub int xchg xchg mov add and repnz xchg or in insl or jns into adc pop sub cmc gs xchg repnz sub sub mov out nop adc inc mov push or sbb jl pop inc cltd add pop mov imul mov out aaa xchg xor daa lcall dec popf cmc inc test inc add xor xchg (bad) sahf movb pop rol mov add mov push add inc mov or andl dec mov bound sbb sub pop add jle aam or movsb xor pop cmpsl sbb jae xor sbb xchg lock inc mov fisubl or lock in and sarb arpl add or jecxz pusha push mov inc add mov shll test adc or loopne sbb rcrb sahf mov bound inc dec or mov add add xor cmp or mov add scas movsb and and or mov lods jne mov lcall das gs dec in imul inc and mov test repnz jmp movsl and mov sbb mov xchg ret outsb lret add push pop in inc cmpsl gs movsl xor inc nop push sbb dec inc xor push mov mov hlt dec aas push or loope and sub sub jnp dec dec (bad) jb inc jp sub xchg pop push sub or test push xchg sbb or es cmp arpl and leave xchg adc lea cmp add xor data16 and push add pop dec dec add mov cld jmp mov add push stos test add stc and rorl adc fsincos loopne push cmp pop movsl and sbb cmc and mov (bad) or push xor sub cmpsl sub or lcall call xchg inc jno in adc movsb pusha (bad) or pop add jecxz scas mov pop and mov add add jo fstpt jo (bad) repnz and mov in nop mov adc sbb les inc push push or or loop sbb bound cmpsl adc test mov cmp push xor daa ret pop jmp add or loop push or inc dec and sqrtps in in dec push mov adc aad mov add push popa enter fmul bound mov (bad) bound roll mov (bad) pop lea xor push dec sbb xor and int3 mov or mov and add (bad) xchg pusha mov push inc lcall lods pushl pop jnp js xor dec test sahf mov ret xchg cmpsl xor xor xorl pop les insl mov pusha lods lds movsb add icebp or sbb xor pop mov jmp rcl xor and js fisttp sub addl mov jp add nop sub or lock and xor add inc xchg sbb jb xor test js daa fs sbb cltd xor pop cmp hlt dec lcall jbe pop imul jecxz and aam xorl xchg inc fnstenv adc fist xchg cmp pushf icebp (bad) mov adcl push (bad) xchg mov test fsubrs jb mov lret flds ret inc sub lret inc push (bad) mov sub add cmpb test sub cmpl nop mov jge or and xor out pop lods cs mov or inc mov ss aaa inc add sub movb and shrl mov add xchg xchg and cltd xchg push adc jl or xor rclb or pop push or mov into xchg push subl and xchg aaa sbb (bad) xchg ljmp lea ss push and push inc cmp lea lods sub inc inc mov adc leave xchg mov lea push addl add (bad) jno js addl inc lret cmp icebp mov mov jo adc or adc sub cmp sub outsl dec xchg gs push xlat sub or in stos mov xor or mov add test pop das ret rcll dec push dec sbb xchg rol fsubs mov pop mov xchg cs push add push mov sbb sbb push xchg rcrl mov xchg push add test pusha pop inc stos addb dec call jmp lds pop jbe lret loop leave or fidiv sbb add push push jnp inc sub adc pop arpl add pop or imul pop out or pop cmp inc js lods inc or (bad) cmp mov in sbb rclb out nop mov dec mov pop test fs hlt imul (bad) jne xor xchg add add sbb push sub cs sub popa rcl and push pop cmp int dec mov (bad) xor sub movsl inc xchg adc sub inc xchg ficomp adc popf sub push pusha insl inc mov jb inc sbb mov or cmp hlt shlb in inc les loop pop test cmpsl dec pop imulb xor xchg sub mov adc inc and repnz roll jo push leave mov ror lock pop inc jmp pop add inc pusha test mov mov leave dec or push add dec inc comiss jne loope cmp xchg jle or mov pusha in test mov cmp add enter xor shrb push sub jno inc xor xor dec lods (bad) bswap lock lods mov pop or jge or fidiv mov push imul dec bound cmp inc (bad) lock (bad) es lret test sbb test test mov ret pop add nop dec pop (bad) cmp daa adc sbb ss cs jbe sub (bad) push loope inc test and ds sbb and push mov add loop test fcmovbe mov add pop lahf icebp daa test cli pop xchg or roll cwtl mov mov mov roll sub jmp adc pushf cmp in pop popf sbb mov jns jae (bad) pusha adc fldenv fs xchg sub xor jb sbb and rcll leave adc lds push mov push dec (bad) xor or icebp fdivrl add aaa popa or cmpb xchg pop adc rcrb or sbb movsl ljmp sbb mov cs sub lret mov inc imul mov aaa adc push das sti pop ret rcrb dec aaa xor or xchg fisubl push add (bad) xor mov or lock cmp push movsb and add pop sub mov mov or adc push and push lahf (bad) enter lret sub and xor mov or or inc ret ror mov insl sbb sub test and and test xchg bound xchg sub adc inc sbb pushf test iret pop mov xor insl test pop (bad) adc lret inc dec iret ss and je movsl mov cmp or add (bad) jns adc mov popa xchg lods bound and pop xor push arpl mov mov dec cld aaa outsl in or xchg test add enter and add or leave cmp add and jp push (bad) imul frstor or xchg mov sbb pop xor and sbb dec lods inc mov and xchg popa mov int3 ficomp sbb lods mov mov mov inc les push xor orl pop dec and fnop xchg js pop push shlb ret inc rcl lret test aas xor inc jnp inc mov pop fistl notl enter int3 add cmp cmp mov inc and sub ret das dec mov add add cwtl sbb jg cmp adc shrb fwait dec (bad) sbb es cmp loope sub xor fnsave leave shr and sbb loope xor cmp dec pop sub icebp data16 ret jecxz pop mov fist aam inc dec or das inc test ret cltd fbld xor and adc xchg jnp sbb js xlat pop mov lods out xor mov jns cwtl sub pusha sub adc xor cmp xor arpl sbb ds loope and and loope test inc xchg jg pusha dec mov testb test fyl2x insl popa movsb mov and syscall jecxz imul leave mov xchg nop lock popa test and push (bad) mov rorb bound pop cwtl loop pop xchg and or mov mov sarb lcall adc add add and or pop xchg pushf or xchg (bad) add and xor sti gs popf add push std add int jecxz xor sbb or push add push ret mov les sub and or add enter leave sbb lds mov pusha jne inc repz or mov repnz inc or into mov xchg fcmovu cmp ret sti mov andl dec jmp lods orb or jne or cmp fisubr jo dec test push and sbb cmp ss insb (bad) cmp or sbb adc rcll xchg xchg movsl lods ficompl mov push sbb nop fidivr mov adc sahf mov loope jmp jmp jge je movsl and mov pop adc or sarb js mov pusha inc cwtl jno inc inc pop fnstenv sub les out jns insb bound mov cmp (bad) and xor test pop rcll popa mov pop outsb add sub lahf and pusha shlb imul ret jle adc mov mov aas inc and add sub pop test jae ds pusha in in mov xchg mov ret or lods push sub ret xchg mov pop leave and addl inc sbb xchg add xor mov js jo std sub sub xor sub sbb mov pop or loope sbb cmpsb adc mov mov mov mov xchg inc iret adc adc inc jns (bad) jge sbb mov xor inc sub dec rcrb out xchg movsb mov movb inc lock mov mov mov aaa roll adc push jo sbb xor (bad) and xor xchg xor adc sub dec xchg ret push xchg and and dec inc push ret dec inc sub mov mov test inc cwtl cwtl xchg adc and addl ficomp ss and mov int xor pop push sbb and dec (bad) xor roll shrb xorb dec push les sub mov insb xor inc xorl dec push insl inc lahf leave xchg adc mov pusha popf lea pushf data16 mov xchg mov mov ret lahf add xchg movsl cmpsb iret pusha test mov sub (bad) pop adc sub add sbb insb or mov xor add xor add mul inc inc sbb and test data16 mov ret xlat jg insl sbb or xor push or inc (bad) xor inc movsb and lods sbb mov xorl mov mov add add divb out test cmp ret insb sbb inc sub mov dec or or xor movsl jno mov pusha sub xchg xor xchg or inc xchg inc or adc inc mov test js mov sbbb cmp xor imul test lret jp xor xchg and dec sbbb sbb xchg mov fadd cmovp xchg test fcmovne adc aaa push fildll jb adc popf or test adc popa pusha pusha xor stos inc arpl adc dec add inc jg icebp addb shll jecxz (bad) xor pop add fxch push lea ret or jg rol loope mov sub sahf es in mov adcb and in repnz loope jge pop xor adc jns inc mov fs testb adc js add push and test movsb insb loope sbb test mov mov and add das xchg adc or fldcw pop inc push xor fnstenv and lea je push inc or jecxz dec inc push mov lods (bad) xchg adc loope fistp addl push jge ret xor ret es lret push inc adc mov and add mov or imul sbb int or and xchg scas add je add xchg xchg and mov dec pop or sub or sub xor ss mov imul dec loopne inc xchg shl aam inc dec mov fdivs sub stos popa dec je mov cwtl and pusha fstp call push jo (bad) pop mov push or xchg lods adc xchg push add cwtl jo (bad) mov adc cmp aad addl sbb add lods int or xor pop loope mov xchg test mov push insl xchg dec or lods pop imul cmp or xor inc and loope aaa mov sbb mov (bad) xor fld lret xchg xchg fwait cltd sub imul lock adc mov rorl sbb les mov or pop aam cmp mov dec mov adcl add cmp mov jbe daa (bad) inc test enter jecxz xor inc jno les or ret loop mov and test rcrb add inc (bad) mov sub scas adc and sub mov inc in andl or push in lret (bad) mov or xor movsb push or jmp addr16 mov inc push popa sbb (bad) cs and insl mov inc jecxz imul xor inc pop lahf xor inc js loop sub mov pop enter stos inc pusha gs xchg dec imul push repnz popa jmp xchg inc cmp mov inc adc into pop (bad) popf cmc xor mov les call rclb add adc adc rol (bad) add or dec cmp out xchg sub ja dec or dec push xor loope hlt test xor dec and rcr cmp stos sbb push or pop adc mov mov outsl add leave cmp mov sbb and sbb mov add or bound (bad) lahf push mov (bad) push mov add loopne adc leave sbb push mov lahf add and xchg js dec xchg cmp enter sub outsl imul ret outsb adc add dec pusha xor (bad) jp mov push ja dec push sub push mov adc xor jmp aad add popa inc mov sbb test add aaa lcall rcrl sbb dec xchg inc pop sub push lods out insb fwait call movsl pop or popa add ret ret sub test mov inc jo sbb (bad) sub dec jp pop mov lds add int addb test sbb or imul or and repnz inc pushf push cmp mov adcl xchg or movsb lds dec mov scas inc sbb add popa icebp outsb and sbb out add sub test sub sub test mov popa (bad) roll adc aam dec xchg adc xchg ss mov inc rcll sub xor xor leave insb and or arpl jo cltd fisubl andl add gs cs and xor mov dec adc sbb xchg push jmp inc push mov xor mov lea mov jb xor or jp iret xchg jno or and leave mov and and add subl and das sbb lods adc insb fxch adc mov insl mov xchg jo pop pop (bad) or das outsl sub pop mov jge call inc fbstp jge test aam cwtl mov aaa and or in xchg das sbb jmp cmp (bad) mov mov sub cmpl sbb push dec je dec mov mov stos or ss inc xlat mov imul or and outsl jmp ret lret push or inc xchg test popf or inc xchg and lods add pop ds pusha fs fistpll lods lock inc shl pop mov mov mov cmp adc add push je pusha (bad) xchg or ret jo lea sbb rcr push add enter mov dec jno push xchg and sub gs inc or sti lahf rcrb xchg push gs xchg jp push nop dec add jbe and mov test fistpl mov inc test daa popa lods popa and push xor xchg mov rclb pop mov mov ret xor lods lea ds add rorb xor lret cwtl andb hlt aad lods add frstor enter add xor jmp mov or xchg ss jns nop mov sbb xor fwait rorb xor testl repnz (bad) mov lahf jle mov push xchg bound adc pop mov xchg popa arpl xchg cmp push jae insb pop xchg or sub lods xchg adc sbb cmp sbb inc pop push and inc push sub stc adc sub imul jo add mov loopne sub jne mov inc cmp pop lahf call add mov and sbb dec lret test xor sub ljmp mov pop std lods leave push push popa sub imul (bad) rcll mov dec or rclb pop add mov in dec push adcb popa das dec pop adc ds xor or lret pop test pushl jmp add mov pusha or dec popf mov loope ss in push mov or add or stc push push or jp xor dec xor cmp dec xor mov daa dec orl push shrd (bad) or add imul add bound add inc sbb xor sarl or mov add das push pop ret loop nop sub xchg inc lea fs daa and cmp test sbb imul pop clc sub xor xchg inc pop dec test jg add leave (bad) pop lock bound or mov loop out add mov loope add xchg enter andb pusha rcll test loop outsl in stc pop cmp in mov mov pop push dec pop cmpl adc xor cmpsl and je xchg xchg pop add icebp xor sbb test mov or enter xor sub loopne add jl pop adc pop hlt dec popa imul mov nop lock inc jb mov add push rcrb in mov sbb add xor adc addr16 xor and pop mov lds add inc sub cld sbb int int3 or and pop sbb mov addb push loope mov rcr xchg loopne fwait dec lock dec mov adc add push insl lret cmp xchg adc lods and or xor ss ljmp lcall outsb sub mov nop dec jb lcall andl mov idivb dec mov add or xor dec rorl pop ds sub xor fsubrs push test fnstenv sub xor xchg push and mov pop pop mov adc add push lret pop and sub cltd popa dec xor outsl mov (bad) mov icebp add dec xchg lea xor dec push jo pop mov js sbb lods mov pop add xor inc outsl fldcw loopne or or faddl and mov pop inc adc mov adc js xchg inc and pop mov xchg jp test inc or ljmp adc add add sub call ret dec sub mov xchg xchg inc mov sahf adc push push test xchg jl dec or inc pop dec xor mov sub xor add movsb sarl shll ss push or mov test and xchg add shlb stc test jo mov mov inc (bad) (bad) lock insb xor push ds inc pop pop and movsb adc pop aad test sub stc fldl dec sarb lds aad cmp dec aaa push push xchg or add bound sub jbe inc and push jno jae shlb lods enter test inc xor xor xchg lods sub push test dec aaa in adc inc mov cmp or sub cwtl cltd or xor pop enter add mov sbb data16 mov pop add mov dec popa ret mov dec xorb or cmp xor xor xorl test daa dec (bad) mov xor xor mov popa push cmp mov and cmp cmp xor dec push mov fwait popa dec push and mov add add fadds loopne sbb lret nop add test sbb push ficom ljmp add (bad) mov or daa fstps mov pushf sub jecxz add lahf xor leave xorb add sbb js mov mov xor mov push lods add pop outsl or inc xor test add jns inc jnp das inc pop or movsl dec cmp pop dec xchg (bad) test adc mov cmp dec aaa jne add and mov loopne ret dec xlat or bound (bad) (bad) xchg leave ret add push ds adc adc aaa dec push ret pop push xor test ljmp xchg adc sbb dec (bad) xor pop stos sbb fnstcw aam leave outsb popa or inc add gs pop cmp add inc sub fdivl cmp ficomp push mov dec push bound sbb sub cmp push mov xchg and pop dec loope outsl cmp add imul xchg adc mov jno and fnstsw push ss adc adc sub lods imul aaa and sub or notl test add mov scas and add and sub mov rolb pop mov lret mov jne push cpuid mov pop leave adc add stos xchg lcall fistpll das (bad) xor push push mov add js ss mov mov mov in mov or push mov cmp sbb andl adc daa mov test dec sbb adc xor sbb inc xchg mov or mov es nop mov mov pushf add adc or fsubrs mov orl xchg mov mov pusha push leave and and or daa xor addr16 xor inc mov dec mov pop jmp in xor stos add adc and mov and push mov (bad) mov (bad) sbb mov cmp pushl and or pop add add jge xor pusha pop (bad) sub sbb pushf (bad) addr16 popf and xor jg xor sub mov cmp fcompl xor sub sub xlat add cwtl push leave push push mov add lret gs xchg sub mov shl xorb sub pop mov dec sbb sub add shll ror xchg xchg push pop test imul adc movsl push mov or ret pop xor pop cltd pop lods mov ljmp or (bad) ss xchg mov test sbb data16 jl aas mov add xor pop or imul dec lods inc pop stos mov lcall pop sub adc adc movsl mov sarb es add or mov push rcrl dec popa inc add js sub loope dec jnp movsl push push mov xchg cmpl aaa adc pop sbb arpl fmul popa push das sub sub lods shr pushf add push sub xchg jno and mov cmp push xchg dec mov or hlt xor daa test movsb test ret cmp lock test and sbb scas dec cmovb lods out mov inc in mov xor out pop mov in mov add (bad) jno aaa and pushf mov and rcll or out test insb cmp pop mov jge int add (bad) xor int3 jbe add or jno imul pop mov adc je push add pop sbb pop dec aaa mov lods rol or dec sub shl lods lds add fdivrs dec mov ret pop enter xor add fs xor add aaa sbb add push lods or dec pop por pop gs mov add pop xor cmp jecxz and lods mov adc xchg jg or jmp cmp adc mov add cmp test frstor xor cwtl clc and sbb iret mov cwtl cmp inc xchg dec in add push cmpb jno inc dec mov les ret outsb dec push loope sbb xchg push add sbb ret sub and outsb xchg sbb (bad) in rol nop gs dec loop pop std ret adc cmp pop dec and xchg add leave (bad) sbb fucomip imul xchg insb test inc xor ror test mov jbe or sub add icebp pop sbb imulb movsb cmpsb outsl mov imul repnz flds rcrb jae outsl jb push add mov pusha pop jb imul dec add inc xchg xor fdivrl or xor xlat rolb js and jnp fadds mov sbb adcb nopl dec inc or jg cmpsb cmp imull pop rcrl or xor sub or nop daa add jo leave cmp or xchg and leave cmp cmp lcall scas dec pop arpl cmp xor or enter xor inc lcall lods test push in (bad) xor xchg mov cmovp loopne cmp sbb or insl es (bad) mov push imul sub (bad) xor jge pop add lret cmpsb inc nop push jp mov adc add sbb jecxz js xor cs add popa dec ss arpl (bad) mov and xchg ds ror xor pop jo mov shrl and xor mov cmp popf and sbb mov sub or rorb mov jne xchg call xor (bad) mov push insb pop push mov add mov pop push pop xchg out and xor cld or loop mov inc js (bad) pop cmp xchg test sub cli mov xchg pusha mov fsts add daa dec test push test rol dec sahf push cli (bad) sbb xor pop (bad) inc xchg and (bad) xchg or dec std sub sbb ret xchg andb dec cmpb movsl push inc popa movsl xor (bad) lods daa add adc (bad) and into xchg mov test jl (bad) les subb jne sub jae pusha inc sub lock xchg push push jb adc popl cmp mov lea xor adc dec pop and cmp movsb mov push lods inc cmpsb inc xchg cmp sub xor inc inc adc jb addb dec sbb js sbb mov push fcoms adc dec enter test lret mov mov jo lds mov loope es outsb cmp adc es imul adc lock insl int inc pop pop xor test cmpl and push xchg push cmp adcl dec cltd (bad) and or and and cmp and shrb cld xor aaa or (bad) enter xor add pop sub pop pop (bad) mov dec push das add add pop xor jne pop xchg jne inc add or leave pop nop movsl jno lea mov loope popf mov add aad scas ds adc call and add (bad) int3 cmc out lock lcall lds inc dec imul mov arpl mov and adc std bound xor adc push ret fsts and mov inc xor sub add test popa test jge aaa adc lock flds xor xchg cmp and lock add insb in test lret push inc xchg pop pop into inc pop test push test xor loope or ss xor and mov in push adc sbb (bad) or push orl jno or add push pop leave pop sbb push inc xchg imul cltd sbb mov les xchg (bad) xor mov and pop das loopne mov adc dec in mov and jecxz jmp adc adc and pop xchg or xor pusha sarl (bad) je scas or pusha and push ficoml push inc and xor adc sbb sbb add sub dec mov rcll cmp cmp push and test popl fcomps xor push add movb lods fidivrl mov or sub dec test jmp xchg adcl (bad) mov mov add inc imul cs mov xchg sub add (bad) or cwtl mov lock call mov stos xchg pop push out divl sahf mov inc push dec andb mov xorb loopne cmp roll mov push sbb and dec jp (bad) test mov call sarb dec ret ret lds push popf jbe imul cmp nop add and sub nop push add lahf dec xor mov xchg xor inc add mov frstor lods dec ret jbe add or sub subl cmc pop add ljmp stos pop aam and lea and fildl sbb icebp inc test xor sbb out movsl adc mov sub push out sbb add shll ds xchg in add lret mov pop sahf cmpsb mov in ss popa add jecxz cld (bad) adc cmp andl mov nop xor cmp push or mov inc sub mov sub sbb ss stos lock sub sti jg push dec popf (bad) out popa push push xor jne xor dec push add sub mov sub (bad) lods adc or push mov add inc fisubr lret or movsb arpl sbb bound push cmp jae sarl push loope adc add push mov mov sub lret pop and cwtl sbb sub mov test and fdivl (bad) push ror push sbb or daa and sbb dec in fdivl or or test adc and fnsave lea or lcall sti xchg mov push xor mov adc or lock outsl out adc inc arpl repnz popf xor movsb mov dec andb pop pop xchg std jo ret int3 mov arpl xor cmp shrl je sbbb insl xor outsl dec (bad) or dec inc call xorl xchg daa int3 mov (bad) push push addb cmp sub xor mov xchg add sub and mov xchg (bad) pusha jno out and push mov jno mov cmp dec pop adc ret add jecxz add fwait xchg mov and dec loope loopne dec sbb test pop adc sbb movsb mov aam rol mov in popa mov outsb lcall push push add mov es ss jo mov adc jge xchg ret and mov xchg clc jns test add push popa jge cmp les sbb xor and int jmp fstps jle pusha rorb inc out inc push xor sub xchg sbbb out xchg add add or adcl subl push mov fs mov iret push push pop or adc enter mov cmp lods dec or xor inc aaa inc adc test ret and and and loope (bad) dec sbb xor sbb pop ljmp xor mov sub pop test in inc add notb ret popf xchg push leave inc sbb inc bound cmc push movsl or insl or cmp or or outsb add push xchg scas push mov lods bound (bad) cld (bad) cmpsb dec mov sub push xchg inc shll les xor call jnp xchg cltd mov sub pop or add pop dec ss std dec dec or ljmp or sub mov push dec mov push cmpsb ds and adc daa lret inc jno test pop (bad) mov imul or outsb jmp add out aad and mov in in or sbb jg xor fadds es popa inc add and push rclb enter adc test mov sub repz adc popa insb loopne adc js imul fs jae repnz dec xchg (bad) pop mov ja jmp xchg movsl xchg dec or inc sub adc cmpl or (bad) inc inc cmp ret mov out ja leave add dec mov (bad) dec dec pop or std push mov jo dec movsb and xchg and icebp lock mov js mov or cmp es xchg rorb daa (bad) adc push sub movsl xor lds jno or pop sub xor inc nop mov mov nop arpl lds loopne adc stc mov roll lea sub or xorl sahf jns xor xor mov push adc and insb rcl push mov xchg xor jge outsb daa lret mov popa dec inc pop cmp or xchg sbb es aaa mov and aaa fldl xor mov inc xchg add rolb xor ret push in dec loopne xchg mov xchg mov cmp mov stos lahf push pop js movsl dec cmp jo popa imul aaa lea adc push add pushf add pop adc or pop ret adc inc mov int3 push in enter mov sub cs ds push nop add sbb and sub inc aad test dec nop ret aaa stos mov xchg and test push sub xchg jns dec cmp sbb pop lcall add adc mov push (bad) mov and ret (bad) push xor pushf mov push sbb int push shlb inc dec lock pusha iret push mov cmp lods insl pop test mov cmpl xor cmp adc imul mov and pusha cmp fwait cmp dec sub inc or insb fadds repnz mov jecxz movb push and adc mov test addl add cmpl stos sbb push mov mov and sub mov repz add jle sahf dec pusha xor mov sbb insb mov rolb inc mov cmp sbb sahf add loope push pause push adc inc add dec test adc xor loope je mov and out jno sbb inc and or imul push (bad) jo xor inc imul dec pop sbb lods movsb mov fsts (bad) dec movsl xchg scas add insl xor test mov xchg push ljmp xlat aaa adc mov adc loopne jecxz stos orl adc loop adc sbb cmp xor sub (bad) lock push mov hlt or jecxz (bad) mov jno push inc mov xorb or mov add mov inc addl adc or lret lock ret push xchg push jmp leave push mov dec imul ret addr16 or cwtl cmpsb sub inc leave jns pop mov movsl and dec adc xor dec xor mov sbb pop fcmovnb sbb aaa pusha xchg popa sub dec fwait js das push dec or jmp imul dec add xor add push rcll enter xchg dec mov dec or arpl mov dec mov add add popa and dec pop push gs call add in gs push lea xor rorl push in and xchg cmpsl popa and outsb sbb shll add mov sub arpl push adc mov iret push add mov push pusha andl fidiv mulps push shlb sub sbb addb dec add xchg test mov test push push inc xchg daa lret dec cmp sbb mov movsb or arpl cmp dec in popa push push push jecxz movsb test imul mov sub dec rolb shll mov fistpl sub lods sbb scas xor inc sub or imulb loop inc push xchg stc test aas dec push sti push and xor push mov sbb popf mov loope sbb dec adc sub sbb jno stos adcb pop movsb insb sub inc jecxz repz fcoms mov add movsb and xor jmp pop xor or add xchg movsl lods inc jmp push rep inc push addl xor fldt rcl xor sub insl pop dec xchg (bad) fwait pop test xorb rolb lods push outsb adc push xor xlat test test and pop cltd sbb sub mov lods add xor repnz and les cmc xlat in add add xor leave add aaa mov push dec fldl xor push cmp jge daa movsb sbb xchg into mov cmp lods fwait mov add xor dec pop repz mov bts inc das loope out test aad outsl cmp cmp call cmp and sbb cmp inc rorb pop hlt sbb add test xor xor arpl out out and sbb jp xor add mov test lea mov mov xchg cmp push xchg push leave ret rcll push mov sub pop mov pusha sbb sahf cmpsb xor loop add pop in test (bad) xor pusha inc jmp fld nop inc mov xlat push pop and rorb mov xor in xor mov shlb add jb outsl sbb (bad) inc lds or movsl dec pop ljmp dec or or lods (bad) xor sub jge xor sbb cmp sub xor imul adc mov movsl add or movsl fcmovnbe mov pop movsb in sbb call add ret stos pop call or in dec push adc sub lods jne mov (bad) sub or add pop (bad) mov enter inc jp xchg push in mov add mov add adc inc mov pop clc negb or add jb (bad) adc adc imul out inc inc (bad) xor (bad) insb sub fs pop lods nop adc add sub inc and adc sub sub dec pop inc lods sbb out movsb pusha dec cmc or add test push dec sbb mov push lock popa jno jb push ret xchg or pop jnp cmp add inc imul (bad) loope jno or xor mov xchg movsb inc imul xchg test or notl mov out sub daa xor xchg xchg enter lods leave sub jmp test xchg sub repnz push adc popa mov in pop ret rolb test adc mov aam push ret jmp sbb pop or aaa cmpsl or test lahf dec cmp add sahf (bad) mov push sbb jo sbb inc test mov mov test dec add xchg push adc dec or mov rcll (bad) je into adc xor daa sub inc and inc out xchg andb (bad) mov mov jae pop push stos gs loopne dec sarl and add in push sub dec ljmp fwait xor cmp inc rcrl and xchg lock addr16 imul sub cmpsb gs xchg imul inc int test mov hlt jne add dec imul xor pop add push repnz pop adc jmp xor add sub popl jns inc lret rol lds inc sub jae arpl cli js mov mov push sub dec xchg sbb add xor icebp adc sub aaa sahf add aam and inc xchg xchg xor dec xorl daa or dec (bad) mov sbb pop mov dec aam scas dec popa sub mov movups mov lds fwait cmpl sub stos add test ss leave inc test add inc rclb or cmp or inc inc mov and leave ret adc adc adc jbe popa (bad) inc outsl fmuls test cmp popa popa xchg xchg sub imul add sbb call adc sbb lods outsb adcl test lds sub and nop sbb mov leave adc and jno mull jo test inc sbb sbb or je mov and xchg ret dec jmp sub pop inc loopne in je fld push int mov push xchg ret imul loope xor pop inc ljmp xor cmp ss rcl call insl cmp and xor cmp out fdivrl add insl cs pop lea lcall and mov add nop push shrb pusha dec add adc (bad) adc xchg ja rcll (bad) xor xor lods mov hlt sub mov (bad) xor ret pop sbb inc and or aaa or add or jg sbb pop (bad) cmp rclb dec and out push mov lea sahf and inc add or adc hlt (bad) xor add gs imul lret adc imul xor mov mov xor sbb test sbbb add pop shlb mov stc outsb and test fstpt rcrb mov inc addb dec imull je cmp mov mov das or adc adc sbb ss int mov dec push dec sahf adc or add and fwait lock adc sub movsl inc or add push inc jmp xor ss lds out mov push leave add cmp int3 sub sarb stos pop mov mov and or mov (bad) clc movsb pusha mov push pop push outsb add inc mov loopne push push add adc cmp ss in std ret stos xor mov outsb xor cmp ficoml out push sub xlat mov sbb or imul inc xor test push and dec movsl or loope (bad) aam out inc inc aaa insl lahf xor jno xlat lcall test xor vcmpsd test add or xor aam push push fmuls lods test xchg bound ljmp sub mov ds add pop dec pop mov jmp sbb adc inc daa jl leave or or pusha fs inc and dec adc rol movsb test and adc mov or add inc mov xor pop xor imul dec add dec or or mov and mov mov xchg xchg and jo fldl (bad) (bad) movlps imul sub mov (bad) rcrb xchg insl fistpl in adcb mov add insl lret xor outsb leave sbbb add cli inc mov xor pusha add add xor pop jns gs movsb adc pop adc rorl sub add das gs lods add cmp jecxz add subl int jne adc les js sbb cmp (bad) test cmp xor xor popf in sbb adc mov push sti cli xchg rcrl sbb inc (bad) sub ret add les push add and cwtl arpl lods mov add rol xchg cmpsl jge adc adc push cmp loopne lods jmp arpl xchg imul and sbb test mov push std xlat xchg (bad) fs lods das mov movsl cmp orl imul xchg push repz push mov sub mov xorb mov mov xor mov lcall lea sbb mov mov jo lret add call mov and and xchg pusha xor fs adc xchg xchg sbb jno push adc js nop sbb cwtl push pop and sub test dec xchg pusha fwait xor js pop out andl sbb pop movsl shrb in add cltd xchg adcb test add cmp add sub and or aaa xor sub cmp push xchg ficom int3 push push cli out adc jnp and mov pop test and lahf add xorl mov aaa movsb or (bad) mov addr16 xchg xor stos push inc loopne mov jp jecxz xchg scas and test cmp ret sub popa scas add cmp add adc add push sub or sbb xchg rcll adcb mov mov xor nop inc bound dec inc mov mov (bad) dec mov cmpsl ja or mov pop and ss (bad) and mov es adc pop cmp push cmp and add xchg and ret rolb sbbl mov sbb sub frstor les or adc sbb sub push push add and ljmp cltd out sahf cmpsl push adc dec push repnz pop cmp and mov ss add (bad) or ds xor rorl insb or mov in jle mov cwtl add pop push mov enter aam popa and ret xor or popa subb cmp inc sub push sbb xchg int3 dec add cld out sbb mov cmp inc ja js test into push xchg inc daa pop sub pop and les adc sbb pop lahf das test inc insl jl (bad) negl inc xchg xchg mov mov inc and nop jge aam (bad) nop (bad) lret rol sbb adc push push xchg sbb test pop pop mov mov add sub js sub movsb popa insl push jecxz mov xor mov mov xor adc xor adc mov push mov dec rcr ljmp jp or xor adc mov push mov (bad) dec lcall arpl cmc or push pop iret xor loope xor jb popa and sti sbb je xor xchg pop test or cmpsl xorw xor shrl adc and cmp sbb aaa into push call cmc inc inc mov push sub pushf jge adc out add and xor repz add mov dec clc ret adc xor mov cs or fist sbb dec xor inc popa pop pop mov sarl inc xlat pop leave push sarl aam xor je adc lret sub add rcrb jb test das mov sbb cmp xchg inc leave lea addr16 xor sub mov xor lret or ffree das mov jne fsts inc movsl or mov fs dec gs sub mov push xor test dec xchg mov call xchg cmp loope xchg cmp sbb and lds cmp jo mov js imul pop pushf jecxz xor push or xor mov insl andl inc fsts add push mov lret and mov mov shlb jp and mov xor movb sub outsl (bad) lock add push aaa sti push dec loope mov xchg push or sub lret add jp ja lods push dec or dec lret (bad) sbb add lods mov add cmp divl cmc dec cmp aam lods sub js adc test mov fwait aam or pop adc xorl mov stc sub popa and ret sub inc push cmp mov fs push add xor mov sub stos aaa push and and loopne push adc jno or sbb mov shrl sub sbb loop xor sbb xchg inc sbb aad rclb stos insl rol sub repnz adc mov xor push inc test hlt test pop push jo or or mov push nop mov in mov push std pop scas pusha add loop and and test inc mov cmp inc (bad) cmp mov jbe ds push iret xor xchg xor (bad) cmp dec in add jmp ss or ss enter insb pop sub push mov and inc jmp nop sahf jp and push (bad) pusha mov addr16 mov and add imul xor inc adc dec and std stos xchg mov jno loope cs jl push dec inc push jecxz or (bad) (bad) push add sbb js jmp add lods das ret dec lea dec lret mov sub jae loopne loop cltd lea lock iret test cmpb mov out imul push fstpl dec jp and shlb mov push jns test pushf mov out jb insb push packsswb or mov jecxz cmp adc pop imul mov jo push rorb sbb loopne in pop push push nop outsl or inc cmp adc add mov je ss mov dec sub (bad) ja add dec xor pop and addr16 adc push xchg and ljmp inc and movsl xor push das jne and add xchg cmpsl xchg xchg push repz xchg and or test cmp das or pop cmpsb (bad) dec add add and sub mov in sub cmpsb push jle in adc sub ss mov inc add add sub mov push sub mov mov mov clc inc stc cmp popa rorb lods mov nop lea lret insb or rorl subb mov xchg dec sbb cmp sahf rclb insl je adc pop adc data16 jno add push dec and mov mov ret push mov in test inc int loopne call cmpl push imul adc popa xchg xchg mov add cmp sbb xor testl mov lret lret aas std movsb xchg xor (bad) in lcall or push mov or add jno inc lods fsubs mov adc push adc pusha dec inc push lea mov dec push and jne leave xchg shll and dec sub or add and sbb test or mov xor add stos xor (bad) jmp shll (bad) sti or xchg dec adc pop test subl lcall sahf popa xchg ss popf cmp push mov push sub add adc inc pop ds and add nop xchg in xchg mov pop adc adc sbb sub jo xor in mov arpl push das (bad) xor pop fdivl insl dec rcrb inc add pop adc sbb arpl lds xchg or sub xor push sahf aam xor ret inc cli mov mov pop jl add and scas cmpsl lods add adc rolb pop sbb mov decl jge xchg jae pop call xor adcb xor jl test xchg sbb add dec fldcw (bad) or mov imul mov or mov jb invd pop dec pop dec and adc jo outsl fcomps stos add clc mov nopl pushf movsl xchg xor pop sbb push cld jnp xchg icebp orb or dec xchg jno adc rcl adc lret ret and icebp orl int3 iret mov popa xchg aaa xchg inc les mov pop and dec rolb pushf adc inc mov mov inc fcomps mov es imul xor fs ljmp pop xchg xor test sbb rcrl imul fadds add adc popf push out adc adc fstpl sub dec insb push add gs or inc mov in dec ss ljmp pop xor fcomps or adc arpl fadds add lods leave (bad) fiadd sbb pusha and jnp cmp mov add movsb ss xor xor les jecxz je mov loopne adc sbb dec lds add and nop xchg (bad) fdivs pop sbb testl jmp or sub mov inc lods inc xor or fmull or dec xor mov jg or xchg rcl pop mov or push or sbb sub inc cmp xor push or (bad) stc insb and xchg in push movsl je adc adc mov sub xchg mov into test iret lods jne enter lock test popf std xor sbb mov pusha movsl xor adc test (bad) xor mov ja mov dec jne add sbb sbb (bad) loop adc or xchg mov inc or pushf cs test add call add mov cmp inc call lret add inc lods mov dec xchg repz sahf test inc inc dec sub add adc cmp jbe xor insb and mov adc dec les or xchg shlb orl int add mov in sub insl xor mov rol das ret pusha mov dec sub xor fs push inc call test js adc lea and mov test mov or fdivrs pop dec inc iret push mov in adc inc sub arpl inc out or add add mov push and addr16 lods in mov fbstp xor addl fidivl test mov loop adc cs movsl or or call dec bound adc sarl (bad) jmp nop mov pop nop pop inc jns adc xor dec fadd push pusha test inc fstpt xor xchg cmpsb pop jmp or push adc dec les jmp sbb imul rorl addb jne xor or xchg enter iret test dec push pop jo adc std loope mov cmp inc das add jb jo adc xchg mov push test lea or addr16 pop sti aaa pusha xchg nop xchg jno repnz and imul push fs add sub xor dec sub dec adc pop mov push jb mov test adc and icebp rolb push ret ds lods xchg leave sbb or mov cmpl xor test (bad) std popa adc lret insb pop das mov or (bad) pushf sbb xchg fisubl and and das inc imul (bad) xor cs xor lea and jo mov add push out sarl (bad) cmc ret jo mov data16 loopne inc pop or mov dec rol add cmp xor out call xor ret mov daa andb jl sub cmp sub and xchg cmp mov inc enter pop aam xor push mov jl rcll adc dec test pop or (bad) mov ret jns cmpsl xchg push dec xchg lret mov adc movsl mov jl xor into xor push add subb inc add push sub mov fild or mov cmp xchg popa fcomps mov lock je loopne xor push and rorb xchg jne lret xchg ret jecxz inc pop add jno jne mov xor adc cltd inc sbb (bad) push insl xor mov ret icebp adc push xchg gs mov xor add add dec cmpsl sub mov or xor fwait inc cmp mov je pop dec and add sbb add into add rorb (bad) sarb arpl dec add loopne dec dec sbb bound xchg adc sbb add xor add movsl jns adc add test data16 sbb adc xchg dec push mov scas add into gs or shrb dec pop ljmp out dec call inc movsb loopne lahf mov int3 or nop adc add scas push popa enter inc cmp movsb sub inc sub mov add or push rcrb jp adc or cld lret add pushf pop data16 or sub push xchg xor stc cli or adc add xor fcompl lret push lea or adc dec cmp xchg mov mov and (bad) mov mov es ret test dec or ret jecxz scas dec bound arpl ds xor stos inc adc sub cmp xor push popa dec insb xchg daa add mov sub mov and lea xor sbb out movsl adc dec pop adc mov ret (bad) xor into mov xchg jno dec inc push pop popa inc add add push mov add sbb leave adc dec adc popa and add mov int3 inc push aam mov lds mov sub rolb cltd add (bad) test xor int3 ret lock xor and mov add add rcrl out xor and les lods popa and (bad) lcall dec imul out jl adcl lea pop xor fiaddl gs loopne ja add gs dec xchg sub daa sbb pusha imul push and xchg sti (bad) mov jno orl leave inc and push sbb or popf ljmp inc sub dec or leave gs ret sbb cwtl jecxz rolb push cmpsl addb and cwtl lds rcrb movsb cmpsl or test push or xor adc fs imul loope test and test subl jecxz and imul jg adc lods inc in ja rcll pop addr16 push pop stos outsb dec test pusha cs push aam xor imul mov or add inc pop jo pop adc lret mov jle or lret mov sub popa loopne cmp enter or loopne mov lret xor in js push adc mov shlb dec xor cmp dec jl xchg andl adc js lock cmp jecxz mov sub pop outsl cmpsb or xor jns daa or adcl cmp out arpl ret mov push or pop dec or xchg cli mov add (bad) es fwait or scas add repz pop gs pop add or popf fmuls lds dec pop lock sbb sti cmc adc pop sub and jo pushl popa pop imul pop xor xchg in xchg ret mov or add sub pop stc aad or movsl stc xlat pavgw or xchg mov and (bad) or add sbb in clc insb arpl call fldl sub sub movsl in xor adc push lcall pusha xchg addl inc lret dec adc push inc dec sbb add sub jo aas cmp popf repnz dec dec cli mov dec jmp xor xchg lret mov add fwait popf and or rcll adc push test and pop dec aad gs clc inc xor mov push push mov dec insb add inc sub jecxz xor sbb push push mov ljmp test popl add xchg sub ret pop mov adc mov fldl add repz dec fsubs shr sbb cwtl jnp pop sbb inc pop dec mov jg inc into cmpsb push aaa ss and dec xor or fs dec adc (bad) test fisttpl jecxz add pop or insb adc push add or lea sbb and xchg sbb mov or lds xor orl or les xchg ror xor adc shll lods push jo push adc dec popf test (bad) (bad) lods xor push mov add mov xchg aaa sbb das bound ret jb movb popa mov inc addl xor loope push push into adc leave pushf sub or sbb push pop loop mov push rorb movsl in pop xchg inc sbb push sbb int3 and sahf cmc pusha or sbb pop in lea add in inc inc subb mov jno rorl push or sub mov add mov insl or push mov ss lcall stc (bad) mov mov cmp rorl test mov mov xor adc sub fist daa movsb xor xchg push outsl and dec pop call aam bound dec sub fiadd or pop (bad) pop jl xor out ret std js mov add das mov lock shlb fbstp leave inc test and movsb push sub jge xor mov leave push mov lock xor adc push insb sbb xchg sbb cwtl inc iret dec add and xorb or nop mov mov adc xor imul push mov mov rcrb mov mov or mov insb push mov cmp push pop adc xchg cmp mov sbb fcomps das sbb or or lea enter xor sub sub mov arpl mov sub inc jmp inc push into mov adc rcl jb xor inc ljmp dec (bad) addl pop addl or in cmc rcrb cmp push xor push xor or daa and sbb or aaa daa inc cli nop (bad) mov push adc and dec pop push lcall arpl (bad) xor mov inc ljmp pushf or pop rcrb stc jp sbb mov jbe mov les mov mov fidivr stos nop test lock stos sti mov cmc shlb imul and fadd aaa sub test and rorl adc mulps cmc xor pop scas dec fs imul xor imul push ret push je,pn mov (bad) and xor fwait popf and sahf loope push mov cmp cs sahf (bad) mov sbb daa xor popa or adc xchg int3 or bound dec sbb inc mov add jecxz movsl dec cli mov xchg dec jno lods mov jo andb arpl inc add out outsb cmp push xor xor xor mov lods lret jg sub ret inc dec ss test test (bad) pop add inc imul jecxz and cltd pop mov cmp add repnz sti loop lds push jno sti xor xchg shrb push lock xchg dec lods pop fbld add lods popa push fistl dec and inc lea lock (bad) sti jns jp fimul mov inc or add mov addl lea andb inc pusha and test insb insl inc (bad) adc mov outsl cmp ja daa xor add mov inc test pop sbb sub sub lret pop sub xor xchg xchg inc andb bound jns cmp inc xor mov (bad) cmp xor or adc xchg lcall and push push jmp out les cli cvttps2pi xchg repnz push cmp cwtl test inc sub add call outsb and xchg jecxz loopne lods mov mov stos outsl (bad) rolb mov and mov aad inc and push push and xor repz mov xor add (bad) xor pop inc inc pusha jo add add cmp imull mov or adc add and mov shrb popa cmp add je adc ljmp pop adc push and pop (bad) pop push cwtl daa xor rorb and add sbb fldenv dec pop push cmp (bad) and leave adc inc jae xor orb mov rol mov ds add test and jecxz subl das movsb add pop pop test xchg cmp ret push iret addb add ret add push mov lock xor xchg cmpl lock outsb mov pop push test push sbb mov jbe popa pop cmpsb mov movsb and cld sub lock dec xorb insl pusha inc and into fcomps add loopne lret inc in (bad) popa or dec add pop inc test cmp addb adc mov and cmpb pop xchg sub test stos xchg or and xor (bad) pop xor cmp pop dec pop or (bad) xor inc jbe push test mov insl sub lds sub dec roll int3 mov popa jmp loopne push inc dec fiaddl imul setp sub add adc aaa inc xor jb xlat mov fwait add mov dec and xchg scas dec arpl push push push cmp jp js (bad) mull mov mov movsb add iret (bad) inc sbb xchg and add push mov add mov movsl dec push imul jno ret in movsb data16 ret inc loopne pop xchg xor mov lods lea rclb cmp xlat adc test sub lock cmp mov popf add xchg sbb inc insl or pop subl loop and xchg roll and imul outsl sbb lods and test loope lret push mov sbb add or popa push add sbb std and add lds sub popf iret fsts sbb loop xor inc or lods jne jmp cwtl add push (bad) mov and pop mov dec pop lret xlat or incb add cmp xor cmp xchg mov adcb inc xchg andb dec adcl and aas lods clc loopne test add sub add sti inc loope cmpsl cmpsl pop hlt lret and sub leave mov ror sar pop mov add (bad) pop (bad) stos addb push loope lock adc leave (bad) xor rorb sub loope push cmpsl cmp rcrl in add fs insb cwtl test cmp rol xchg lods dec inc mov sysexit hlt rorb sub dec and ret addr16 xchg ret repz adc jo mov lods mov and mov sbb cmpsb cmc or sbb pop das lock push scas xor or mov (bad) movsb xor mov dec lea add insb jge or mov dec lods jnp lcall mov imul push in dec fldenv sub inc pusha add and dec xor push lds or shlb pusha insl jnp inc xor js xor add lock outsb push outsl pusha outsl mov fdivrp xor push nop mov mov fist andb or and les lds mov lods dec adc pop (bad) repz adcl loope xorb pop adc aad xor adc inc adc mov addl push rol fld int3 call cmp mov dec xchg in and test lods jo push pop ja cmp lods mov mov sub cmp or mov popa push mov scas push test add subl mov cwtl xchg mov mov mov sbb js cmpsl sub cmp push mov push nop call pop mov clc push sub sbb popa jns notl inc add sub add push pop and mov stos lods add sti fiadd pop or cmp xchg cmp mov sub sbb aas push sub add dec jno addl or inc sub jecxz sbb push adc push cltd cmp add xorl or jae pusha push push mov inc pop jbe adc xor push int3 add cltd push mov xor fisttpl mov pusha jbe cmp inc lea inc fcomps addl and jne and dec xchg add divl push les dec addb dec or test jns or adc out js imulb add popf push adc mov add pop adc loopne add and int jb rclb sbb push jle cmp call add xor ret mov xchg lods jne xchg mov adc mov adc push xor ljmp xor or aad and scas jmp dec mov inc jecxz outsl inc ret adc dec arpl movb test inc or sbb push sub or pop out jo inc daa mov ss sbb out xor mov jp xchg cs cmp call mov add adc mov sbb adc nop xchg int3 xchg test (bad) mov inc push add jecxz jo inc xor add dec cmp or (bad) xor mov stc popf icebp inc add das sbb iret and ficomp adc inc xchg cmpsl cmp and push je add insb (bad) or push insl cmp outsl dec (bad) sub pop and call test dec aam pop andb and mov (bad) xchg leave dec (bad) push lock push pop sbb xchg addr16 in arpl xor adc mov cmp or dec fistpll dec xor les pop sbbl push inc rclb xorl xchg js jmp or je dec sarl sbb mov pusha mov cwtl fldl pushf inc push jns cmc fsubrl push and add adc push xchg cli mov push xlat ja (bad) nop add cwtl and adc sar add leave and daa and or sub push mov test movsb sbb mov fcoms scas int3 sbb add and cmp pop jne xchg test lret lea dec mov or test test add or das adc test push cmp pop mov push (bad) lods pushf or mov inc add ret or fwait sub add add cmp sub (bad) insl (bad) das sbb js adc pop xchg and mov sub inc sbb cmp or jp lods rolb dec fld adc mov push mov xor add lods xor hlt mov mov rcrb pushf xor stc movb ret add movsb pop xchg xchg xor stos add fsubrs push adc jb je adc in aaa fs xor fsubrs and mov pusha popa xchg cmp mov lods insb and and dec loop popa adc add xchg js xor adc pop rclb scas xchg mov sub dec xchg pop inc popa rclb arpl je dec daa inc js and adc in sti add xchg xor or xchg (bad) inc jbe fiaddl (bad) mov movsb fnstenv sub sbb repnz arpl repnz dec pop inc repz jne cmp and xor push (bad) nop lea sti xor cmpsb movb mov or jmp push adc rcrb (bad) lret adcl aaa out pusha xchg adc stc or mov inc xchg and pop lcall or or jnp adc jle lock mov aad inc inc data16 dec inc cmpsl insl shl xchg pusha sbb push loope lret leave test movsb pop push jmp cli (bad) pop or or (bad) and in jne stos adc push mov gs aam add push dec movsl or add aaa outsl test ficom inc push cmc cpuid test rep dec es add nop adc inc sub xlat xchg loope sub mov mov or or movsb mov mov js rolb lods or sub jb sub insb sbb inc mov or loope push rcrb adc popf es mov fdiv outsl stos mov mov xor insl loop xor lret or xor aam or xor sbb aas popa or xlat cmp mov fisubrl push stos adcl fs or cwtl or or pop inc ret or pop (bad) add bnd mov inc imul rclb pop xchg and js (bad) push or add sub lock dec pop and inc mov aaa popa mov xor sub rolb mov ja xchg js (bad) mov (bad) cmp ficom fidiv adc add sbb and mov xor ja test add into test pop sahf mov or xchg stos loope xchg xchg mov sbb mov sub push and popa pop fwait js add and mov rol fisttpll nop aaa sub daa ficoml lahf xor ss ja cmp int3 push inc lea jecxz movl test pop jp xor add xchg and gs sub pop insl xor out xchg nop adc (bad) imul lret dec adc or mov dec lock add and shrl or or adc stos xor inc les push mov push xorl sarl in and dec scas sbb xchg and or into (bad) call mov adc pusha cld sbb or mov test mov xor test shll mov xchg push and icebp xchg int add pop movsl fnop push (bad) or add adc inc mov hlt xorl pop cmp mov je xor subl ret mov push icebp inc inc mov or xchg cmpsl movsl rcll gs adc push icebp outsl xor or rorl pop mov stos andl loop adc push or scas add pop nop jge and push cmp imull mov fadds xchg inc fdecstp ret push ss add add fsubs adc clc mov cmpsb or adc test lods mov jmp push pop mov pusha push inc test iret js es and mov imul xor add adcl push aad xchg dec (bad) mov shlb add lahf cmp adc or cmp test mov lods mov pop push mov xor adc sbb xchg inc xor mov js,pt and jl ss push cwtl imul mov push and js inc cmp fbstp add push add mov mov (bad) sub mov ret sbb jmp addl mov fnstsw lock repnz (bad) cmp cmpl xchg jecxz test and ret sub jo push stos add imul xchg add lods popa int3 rdmsr mov nop push mov dec adc pop movsb cs jo cmpsl test sbb mov icebp ss ret inc sbb or cmp push and mov lret xor dec rolb sbbb jg outsb cmp ss push xchg mov push addl subl pusha sbb xor shrl xchg jl fnop mov add (bad) mov inc fist lock pop cmp or fmulp xor or mov xor test mov pop lcall rorb ret fsubr push sub xchg add or sbb push and xchg add addps push xchg pop arpl fs mov and aaa add sarl push add dec cltd add cmc (bad) and mov xchg and cmp inc test push push rcl adc out dec inc mov pusha add lret js xor loope push mov pop adc int cmp dec push mov jne sub daa enter cmp push jmp add push mov or xor ss ds adcb lret inc dec outsl inc mov orl popf hlt or add dec test xor shll add push pop jbe add lods sub mov adc loopne sub mov rolb jne sub rcrl sub dec fwait mov xchg add fdivrs fcomp xor and xor add xor iret (bad) pop test mov lock js dec dec push sub (bad) adc jecxz lods and loope adc adc and pop mov sbb inc lods sub sub adcb and popa jne xor mov gs loopne pusha or pop pop stc xchg gs movsb sub push sahf dec inc inc push test popf je mov xor shlb add add aad icebp into sbb sarb sub add sbb xor mov push xor push sbb adc popa cmp int xchg and dec dec or cmp subb xchg adc dec out leave dec adc add sbb test movsb xchg inc pop push mov adc xor jae mov lea push and addr16 mov adc mov test ss mov (bad) out xor push xchg div nop test outsl add cltd js ficoml loopne mov sub (bad) xor addr16 rclb xchg arpl dec int xchg inc ret xlat enter jnp xchg cmpl test xor dec adc (bad) scas (bad) cmp push lcall adc push cmp add push sbb rolb pop jno ret dec xor (bad) mov inc pusha icebp in adc lcall cmpsl xchg xor loope sti scas push adc pusha lret push cmp dec and or or inc push push test add inc aam sub push jne sub mov into sub enter nop mov inc fbld gs xchg (bad) xchg popa stos sub mov add push mov les inc sbb sub xor push rolb in out xchg fstps or mov mov dec sarl inc (bad) scas xor test cmp movsb mov repnz mov dec mov shll or inc rolb xchg out xor arpl call xor addr16 jnp xchg mov add sub push mov sahf adc and jae push mov push sbb and dec insb or xchg fidivr cmp js fadds popa jne xchg rorb out xor mov mov push sbbb or pop outsl ds xor outsl xor and adcb pop (bad) dec push ret gs adc inc rcrb fldl dec test mov dec rol lret inc and call or add clc mov jno xor xor iret mov mov inc or das les sub rorb aaa push push mov ja mov add addr16 push cmc shrb inc lods mov and pusha sub adc or sar xchg xchg popa jno fadd inc and add cmpsb mov jmp and mov gs sub std push call cltd clc mov and xor jmp jecxz adc fcmovb sbb and sbb cltd out into data16 xor sub xor inc inc or sub loop adc add sub sbb jbe call addb pop pop ret inc (bad) mov das mov loope inc mov add inc lock mov inc andl pop push dec and in rol js ret bound xlat data16 aaa hlt aam jl xor enter out aad lods and clc add int3 rolb std and xchg lea loope xchg sub scas xor test and xchg adc aaa popf add xor adc inc xor les test add lock sbb push pop add add xor out dec adc movsl and or test or jmp lods xor ret xor jmp pop push xchg xchg adc add addr16 int3 adc int3 addb rcr sub dec pusha pop pusha imul push xor scas das xor xchg sub mov xor push cmp dec leave jne mov adc dec pop in sti in mov pop sbb xor sti pop test xor push add iret les add rcl idivl add mov mov lock pusha mov jp xchg in lret cmp stos mov xor mov inc xor test (bad) cli test sbb into xchg mov leave dec mov xor mov insl test (bad) pop lahf and xchg ret xor cmpsl je xlat adcl pushf pusha rcll xchg gs sbb dec daa dec mov mov mov cmp and movsl xor inc and add add loope mov scas mov outsl xchg int int3 push pop add cmp nop xchg lods movsl mov cmp sbb dec aam movsl and push or inc (bad) adc and sbbl and xor xor inc pop mov adc jns xor mov adc push (bad) jo mov mov lea and mov and rorb daa (bad) popa fs and mov lea fs loope rol or movsb add or ror mov mov loop test rorb scas or aaa pusha fsubs pop stos push add push push test dec imul xor add movsl pop mov push stc mov scas fwait adc or mov jl sbb sbb shr popf adc andb arpl ds adc sub out or push icebp imul add int sbb and and rcrb sub sbb mov mov lds sbb push and fs pushw sbb mov xor test cmp dec xor daa add mov mov arpl sbb test push adc inc adc (bad) pop xchg iret dec push popa sahf ljmp je pop pop cmp mov pop fistpl js test sub inc daa jo and (bad) adc jge (bad) jmp inc xor rolb shrl xchg hlt adc test add and dec lret jge adc pop inc dec (bad) sbb cmp add lret mov clc xor cmpsb andb add push aaa add cmp lret inc mov sub pushl inc lea mov mov xchg or push sub add leave sbb or adcl or lods popf add clc adc sub test icebp nop jbe sbb jmp subb pop add or icebp arpl push sub hlt push sbb jmp jae movsb sbb fldt test daa loope sub dec dec inc cmp inc dec cmp xchg add out cmp add xor adc cmp cmp test sub dec inc adc xor xchg bound sbb dec popl cmp iret mov sti jo dec adc dec sbb orl inc orl jge ret sbb (bad) sbb popf in test push cmp add lcall pop inc pop xchg cmp adc stc and adc sub adc pop pop pop pop andl sub xlat push or xchg jne adc (bad) or test push add fnsave adcl repz adc dec sub scas arpl flds adc bound lret out dec rcr dec fwait movsl jo xchg les sbb mov aam add cli sub add xor (bad) sub (bad) and mov sub xor jmp add sub or add xchg dec lcall fildl add inc pop xlat pop rolb mov mov add mov xchg add cmp js lods aaa movsb lcall xor or mov ret add in pusha sbb mov shrb push lock sub xor add add and test insl xchg push repnz inc adc and push (bad) adc jmp lret jmp cmc ret cmp add inc fisttp or sbb sub mov push push xchg adc loopne adc into (bad) sbb xchg nop cmpsb ficom jge add add (bad) jns pop push sbb cmp js popa and scas (bad) mov or add inc mov mov xor (bad) and and or and mov add add xor jne jns xorb jo or mov sub mov push push popf pusha sub inc sbb or (bad) mov or call and andb stc dec lcall xchg adcb mov jo mov pop sbb add fldl add and lret add pop mov jbe or pop rclb mov hlt xor sub pusha stos scas imul pushf in push sub add jge cld push addb outsl mov roll and loope sub mov push cltd cltd jbe inc sbb movsl fwait jp and mov dec imul push movsl inc shlb fistpll mov fs aaa sub test shrl xchg jp dec pushf mov insl shrb sbb xchg sub sub push pop add enter xchg xor repnz test int3 sub sbb dec rcrb aaa add ljmp (bad) in or add push jo inc add pop add dec aaa ret cmp dec inc mov mov cwtl into sahf mov adc aas mov loope arpl popa outsl jo inc pop adc sub mov or xor mov mov push xchg inc clc cmpsb mov mov fmul and or inc jmp mov sbb mov push or jae sbb xor (bad) andb xchg xor mov cmp pop (bad) stos and add sbb and aaa sub push add cmp mov sbb lea imul add pop inc ss je or adc inc mov push (bad) push enter inc mov xchg popa imul sahf pusha mov inc jle or and rol inc jb test popa lods (bad) std adc inc in inc dec fiaddl cmp adc stos dec sub mov xchg subl inc cmp push sub adc xor jae pop mov sti mov subb adc inc jge adc popa das loope sub sbb pop test push test xor jg mov xor push mov xchg cmp add xchg icebp inc aas add jp dec cmp lahf dec bound mov sbb pop add jmp movsb gs into push mov dec test mov cwtl pop addr16 mov dec dec xor loope sbb mov pop adc mov (bad) or pop xor dec inc push stos das mov dec sbb rolb adc ljmp cmpsb add test adcl adc mov fcmovnbe mov mov roll fist fwait xchg mov sarl pop mov cmp dec sbb ss and mov aas push pop fidiv push pop jmp cmp les pop cmp int3 cmp and sbb xlat (bad) push insl fistp rcrl pusha cwtl add imul add add subl push push inc push xor add and mov or mov (bad) aaa loop ss mov mov sub xchg sbb (bad) xor fcomip cmp fadds lea mov mov adc movsl mov jge icebp push nop lods frndint icebp xor mov icebp lret fcomp js mov fildl push or movsb ret aas mov pop mov fwait movsl sub cs jb pusha pop mov insl add stos test mov rol js dec pop cltd or sbb mov pop cmp out dec pop adc les nop les cmp mov inc les outsl movsl sahf push test xor lret adc inc sbb test pop cmp mov test push jg and (bad) push adc inc xor adc adc arpl mov loop jnp stos mov stos scas cmp popa jno mov lods and (bad) or dec xor fwait sarb pop mov xchg xchg fmulp and (bad) test sbb cmpsb or repz sbb dec pop pop fimull adc and fadds mov ds cmp mov pop in or nop andl xorl dec push adc imul dec imul aas lock sbb inc xchg sub xchg and mov sbb cmp mulb jo jne (bad) adc fwait xor test pop arpl lcall dec stc shl dec ljmp add adc cwtl and sub push xor pop fwait (bad) lock adc adc icebp loope and sbb inc loopne inc mov sub aaa add sbb push rcrb aad push and pop or (bad) jmp dec pop add lcall loope aaa and adc mov js test aaa and (bad) imul adcb xor and sub ret mov mov sbb insb insb sbb (bad) dec sbb push aad shll inc adc add dec imul mov sahf daa sub test (bad) jo flds dec sbb fwait mov xchg rclb xchg push movsl imul pop dec in dec shr and or pop cmp xchg adc mov test cmp add aaa sub je and scas xchg cmp push dec leave leave lock sbbl xor xchg and and xchg ja addb cmp wbinvd xor std dec mov lods mov (bad) push adc sahf pop bound les rorb xchg aam mov xor decl lds add adc lods xor inc push and add scas pop ss push sbb dec mov dec and std add ss xchg or push xor mov pop pop mov xor adc pop fisub inc or push push pop cwtl lods les (bad) mov pusha add sbb add add mov mov repz inc sti js mov mov xchg dec jns adc or cs movsb test or inc dec test push mov push add cmp ficompl push fcmovbe mov (bad) sbb xor bswap xchg imul pop cmpl ret cmp or (bad) loopne push jnp add xchg mov je sbb jle xor cmpsl xchg mov dec inc leave lods push and imul ret cwtl loopne xchg aaa jl xchg xchg and adc add dec jp pusha xor and sbb pop cmpl pop adc cmp add dec jns jp in xor loop dec pop adc roll inc mov xor dec sub sub aad fwait ret sbb lock test sbb xlat cmp dec cmpl lods aas add flds popf lds push es andb mov or cltd scas fiaddl adc add jns push xlat out add or inc lds mov dec xor leave aaa pusha das cmp shll (bad) cmpsb add nop hlt dec inc mov movsb outsb int test clc lea movsb lea cmpsl loopne add adc or inc xchg adc (bad) shlb insl add xor dec cmp and inc mov jo,pn mov (bad) mov add mov and pop das gs and and pop ret pop pop ret aaa push inc push xchg xor push mov sub outsl push add sbb pop jecxz or jmp push mov sbbb pop push pop inc dec (bad) sub inc fldenv and pop xor mov stc fdivl ja pop xchg inc iret mov inc inc repnz loop lods adc xorl cmpl pop dec adc loope pop movb adc enter and rol xchg xchg dec dec xor push dec add add lods adc fwait clc cmp pop push mov shrl fidivl cmp in sub or loope and ret (bad) adc xchg mull sub aaa or pop pop fstpt push push inc dec stos or fwait sub add xchg stc xor add xor mov inc pop add pusha popa jecxz das int push adc outsb push jo shlb bound xchg dec push inc dec jne and xor ret scas xor or mov cmp inc test icebp xchg cltd inc push pusha mov loopne or sbbb mov jne pusha jno sub and daa rcr sub fwait xor and jo mov add rorl xor lcall (bad) shlb shll (bad) js add rclb dec or mov dec add and mov sahf and push xchg test or lds lahf rorb push arpl inc mov adc pop andl adc push imul inc push stos xchg xor or aam aas mov rclb cwtl and add mov (bad) aaa int3 sbb or mov pusha loope pop add inc sbb lods xchg les or xchg and fcmovbe cmp (bad) fcmovbe nop pop dec lea jl sub inc sbb (bad) sub pop xor lret test push arpl pop sbb push cmp adc lds or push cwtl dec add jbe xor (bad) lea or or inc ss ret adc ja imul xor adc mov sbb xor cmp add and lret cmpb sub mov cs jne aad into adcl dec or leave les andb jmp cmp shrl imul and xchg add pop ss nop fwait push inc iret add dec xor push iret nop xchg sbb push cmpb xor xor aaa pop out fwait sbb loope cmpl mov lahf pushf loopne loopne xor dec addb gs sub jns mov push xor lcall adc test scas mov mov add add mov pop aam cmp fs add xor fnsave rolb or cmp push movsl sub pop mov in pusha push shlb roll cmp cmp or ja adc test ret movsl and cmpsl xor (bad) aam mov inc rcl or and inc cmp push or pusha imul inc push scas sub je gs (bad) adc sub add mov imul popa sub outsb jg add ja test add or (bad) cmp sub ss inc or inc xor and rclb inc adc push addl imul (bad) xor add mov jns mov scas cmp insb adc cmp add subl lods mov mov sub loop movsb push xchg fninit cmpsb push push cmp xor and and (bad) add ret xor fcomi (bad) pop and cs add sbb in jecxz pop cmp push (bad) xchg xchg les and ljmp aam sub xchg dec rep xor jne xor jge adc xchg daa stc or and fstl lret (bad) mov or mov lods dec lods mov push xchg xor lods fs adc adc mov or jl fcmovnb add jae cmp lods xorl fcmovnbe pop pop arpl in dec adc clc imul ljmp adc lea das pop shll das sbb lods pop pop int3 cmp add and ret rolb xchg cmp xor imul js cmpsl lock repz jge and add enter lods inc test loop adc adc or xor movsb add push pushf pusha push lock mov add ret test or and wbinvd cmp inc js inc lret jp mov test or out dec ret inc dec cmp inc push or cmp pusha jbe xchg (bad) jp test out movsl adc mov mov movsb add xor dec add and adc push jecxz xor fwait mov or xchg ficomp xchg (bad) (bad) mov xchg mov dec and in ret mov xor and jae pop daa loop xchg xor inc rcll faddl push aaa pop lock ss aaa pop rclb lea add and dec add fs pop sti dec mov rol mov push dec bound xchg mov and mov xchg dec rolb and pop dec pop nop jno fdivl lods les imul mov and mov xor dec add orb outsl dec mov rol ss mov pop dec sbb movsb rcl xchg sub mov or jae pop cwtl (bad) mov inc les pusha into pop stos add pop cmp add out xor into inc mov or addb movb xchg hlt mov sbb jmp mov gs xor inc and sbb popa push repz cmc or icebp mov cmp ja movsb dec add ds (bad) sbb shlb and push sub adc test lcall pcmpeqb cmp bound sub jp mov pop addr16 push lcall jmp sub or sbb sbb jb add and push sbb imul dec add fucomi loopne cltd cmp mov or cltd mov lods lds or jmp rcrl sub xor dec xor and and add std jnp outsl pop gs fsubrs dec test ret nop imul or inc sbb sub xor mov sbb sti gs (bad) sbb arpl push fs ficomp lods ja and arpl rclb sbb push push call cmc imul mov shrl out sub lea pushf xor int je lcall and fcmovu cmpl inc mov cmp dec js mov mov mov dec sbb cmp jmp adc nop inc xor bound (bad) xor mov sbb ret mov rclb jge jo push outsl cmp test pop gs inc mov or sub xor in or mov (bad) xchg cmpsl pusha dec in fdivrs add arpl je xor test inc xor addr16 dec sbb xor mov dec sbb and fnop and sub xlat imul xor sbb out cmc xor xchg push push insb pop arpl xchg push or jo in in sub std sbb mov leave mov mov fsubrs out and cmp (bad) aad leave sahf inc fldt adcl clc add lret jo add xorl xchg aaa push shlb sub lret push and test mov push xchg or (bad) lret adcb pop or or pop mov (bad) ficoml lcall pop add adc xor cmp inc xor xor pop sete or aas fbld addb inc sub add cmpsl xor add lea outsl adc push leave bound xor pop pop and sbb and aas cltd and dec or cmpsl cmp js xor mov dec or lea lock adc cmp add cmp push and sub movsb ret icebp addl (bad) and pop popa shrb sub div or xchg hlt dec pop xlat push mov pop (bad) icebp loopne sub sub leave aam adcb jbe xor mov pop and or dec xchg xor and pop sbb xor xor incl inc enter mov scas add mov xor jg or rcrl push cmp dec inc mov cmp adc push sub fistpl cmp xor inc add cmp xchg push inc roll or and mov insb mov cmpsl push dec sbb sbb pusha call ret sbb xor out movsl xor in lea lods enter push push add lret jge ja inc or xor addb mov push or mov inc xchg xor fwait pop fbstp xor adc xchg test scas ficompl sbb rorb sub pop mov push pop aas arpl cs push mov in pop les cmp and mov and mov or xor add repz sub mov xor (bad) push push es les mov mov (bad) inc mov add xchg push sub rolb pop or icebp or les jb adc xchg rcrb dec daa std inc xor dec add test dec daa mov sub and lahf xorl ja mov add sti insb loope mov xor push idivb enter dec inc mov aaa (bad) jg lock xor pop adc ja sub add xchg data16 cmp loop or push (bad) sbb dec loope xchg iret pop jp shl dec xor adc xchg xchg mov push scas and pop insl rcll jo push xor add push test push popa adc daa test mov jno adc cmp mov or test inc dec pop fcomps xor push or push add xchg lahf push and iret mov mov pusha (bad) mov roll ret sub rcrl xor xor adc sti jp and pop add fadds test lods shlb and pop push out rolb (bad) roll and dec cmpsb shr fwait xchg mov ret cmp and and lret cmp je add xor dec xor sub xchg ljmp (bad) ss cmp je arpl popa and jne dec pushf adc std xor jp and pop pop xor pop adc pusha nop sbb aaa add or loopne mov test ss divl mov (bad) or lods xchg sbb mov cmpb adc lods mov dec cmp lcall inc int mov xchg cwtl cmp xor xor subb test loop out add adc cmp jo or fidivrl adc out push pop dec mov jmp xchg or xchg adc inc nop xchg xor ret loopne sub xor lret xor pop dec xor std xor jne jae jp mov adc test ret gs xor loopne mov inc arpl push out push ret cmp aad push dec xchg lock (bad) jecxz movb xor mov aad or mov pop push pop push imul xchg into pop xchg xor je daa popa movsl add loop adc cmp lods ss push sub xor or adc add rolb push rcl outsl aaa cmp adc mov loope or nop add jmp inc or mov daa dec mov stos xchg jmp je add bound arpl push adc arpl ret xchg fsts iret test lahf sub add xchg xchg add push xchg in mov rorb andb and push push mov xor add mov sbb xchg add sbb cmp xor xor les dec scas data16 adc shrb and push inc cmpsl add add xor push xchg push sub add iret xchg mov mov sbb test (bad) jle and xor mov lods sub lds pop xor dec or jecxz xchg mov inc add xor pop xor push push and pop stos pusha rcrl mov push pop adc bound and rcrb xchg pushf inc cmp xchg rclb ja push add ret xor xor mov push xchg or mov cmp and cli xchg lods inc sbb loopne inc mov sub enter cmp xor xchg rcrb or cmp mov inc xor dec adc loopne sub icebp movsb (bad) dec pusha test mov jo add xor mov add sub or (bad) adc mov and jmp or push cmpsl lds (bad) and and sub add aad dec ss push rcrl jbe outsb rol enter pop xchg mov or dec cltd ss mov xchg mov rcl stc rorb lds (bad) xchg popa lods pop xchg dec ss add orl lds mov lods test mov sbb popa insb (bad) sti (bad) nop add mov and inc sti xchg es add sbb lods adc dec xchg js movsl dec and arpl pop inc add jb (bad) push or lock jp (bad) adc pop push push sbb push sbb bound add jnp setl cmp jl push jne dec rorb and pusha mov dec sub or mov repz fadds inc adc and push xor xor mov adc mov dec pusha sub mov test insb sub inc push rcrl stos dec ret ficom imul pusha pop call and push fimul inc sahf inc loop je mov pop shlb es dec add cli inc cltd scas nop push xor pusha sub xor push adc sbb cmp xchg test outsl adc bound xchg jp adc mov and mov roll mov inc call aad jo sub push (bad) jecxz popa push das jae xor lods dec xor cltd mov test and add cmpsl popa mov sbb add sbb mov sarb jmp lock mov fldt addb ret push mov dec pusha xor push mov sub inc sbb mov cmpl movsl movsb arpl cmp and js test iret pop mov push adc popl pusha jcxz insb cmpsb popf mov fs push sbb dec cmpsl incl mov push inc in jl mov pop in jge xor mov push inc dec xchg push sahf and xor pop lds xchg push repnz or push mov jo push (bad) mov nop lods push (bad) add add add insb xchg xor lock push nop cmp add addl pop sbb xchg xchg mov inc pop adc (bad) mov dec and push cmp adc pop mov ficom mov cmp js inc pop add es push ss xor lods lds nop push jl test in pop xchg add pop inc sub adc dec dec imul xchg xchg push jp lea pusha sub push sar insl arpl sbb lret xor push xorb xchg mov sbb xor inc (bad) sar sarl pop inc push push add inc add shlb fs add push jl addr16 pop fwait add leave add mov or pusha dec js xlat addb lods das mov insb dec test mov inc pop add add fs cltd add adc mov or jne xchg xor movsl pop sbb inc js ja dec inc mov add lock sbb cmp pop (bad) test push push pushf adc mov push loopne loop add add and in lds mov sbb (bad) xor popa inc lock xchg jnp inc push xor mov adc adc movsb sbb out xor in pusha popf test push fbstp nop mov mov sub add add rolb adc fsubl cmp aaa lds or enter rorb lahf jle xor sbb fisttpll jl ljmp xchg add inc and jo fsts sbb in dec and mov iret into jp dec (bad) ss inc fcoms dec dec mov adc mov jp inc xchg pop xchg adc stos ds pop leave pop xor xor sub add xchg cld and sub mov ss add cmp ficompl sub lcall jp adcb dec xchg pop cmp test xor xchg push and inc lods dec es or dec or mov dec mov int push inc or loope xchg (bad) mov push push lahf or rcrb sub add xor and js mov sub mov pusha dec dec push and jecxz inc sbb or jb jno mov sub loope dec xor cmp mov sbb add push jle dec sbb mov add lea add out imul addb lahf inc xor inc aaa pop sbb xor xchg fs loopne mov sub adc js data16 mov mov iret pop and or inc sub lret jno,pn add dec leave push inc mov xor adc sub inc and add and je and sarb xchg insl call in cld inc pusha or mov xor (bad) push xchg rclb jp call cmc inc xchg xchg loope mov dec pushf gs jl mov and inc out dec add push push sub aad ret test (bad) movq dec inc adc imul push pop popf xchg push xor push push mov inc mov xor xchg mov xchg (bad) xor push push sub cmp pusha or or sub jl rcrl mov sbb jmp add adc or mov adc pop test pop adc mov movsb jne pop loop rcrb es and addr16 and arpl and imul sbb or mov mov pop push or addl add xchg mov (bad) push daa in test fs jle cmc dec mov push jne (bad) pop mov xchg xchg mov inc cmp adcl clc add addb push sub mov repnz inc shl dec sbb outsb xor ret sub shr dec adc mov in pop jno call popa adc loopne imul adc cmpsb aam lock xchg imul sub adc adc pop dec sub test (bad) gs inc das ficom shlb pop xchg adc jle xor nop push insb inc jmp imul lea fldt je ss push or or sbb inc mov sbb hlt add mov ret xor mov adc add and test mov dec sysenter dec inc test inc fldl test pop ss cmp pop movsb adc aas add dec sbb cmp rorb std or xchg jo or cmp add add cmp movsb pop fwait mov add mov fdivrs mov xchg sub xor inc test inc xchg pop nop subl push or sub dec pop adc loop fldt inc push adc jns imul aaa das popf test pop fcoml in push andb jae add sbb mov dec mov and test mov inc les xchg icebp subl mov pop adc daa xlat add and sub das sbb stos add adc or enter cmp (bad) fildll je ljmp dec pop xor mov inc inc xor jne xor inc sbb jb xchg inc xchg mov orl push fwait cmp add lods fnstenv adc lods inc fisubrl pop pop hlt (bad) fidivl adc cwtl and xor pop stc test shlb and and (bad) mov lods mov jge add add loope popa dec pusha aad sbb popl dec cli and mov daa inc (bad) add sub das ds imul sbb jg xchg jo data16 adc cmp inc popl iret cmpsb xchg sub jmp add int3 ss lods inc cmc addl adc sub jmp in loope arpl adc adc and adc rorb inc mov mov push dec mov test sub ljmp mov negb push adc sbb (bad) and mov mov lcall outsb stos sbb or lret sub push sti and add pop and push cmp jl add mov xchg cmp roll icebp inc sbb imul pop sbb push xchg cmp bound xchg fwait addr16 out dec pushf insl shl xchg and jo add bound inc jg pusha dec lret rcrl (bad) out xor mov lea in inc jmp cmp mov push dec and cmp dec andl add adc movsb or pop out rolb mov mov mov xchg mov in jl rorb mov addb es inc ss push add pop shrb and sub and inc cmpsl jge adc inc icebp (bad) nop or mov xor popa adc mov lea xchg push sub and fsubrs xor push adc (bad) adc mov or inc ficompl xor xor push xor pusha adcl pop xor mov sbb pop aam add or (bad) orl rcll xchg pop adc jno cmpsl dec sub adc bound lret pop pop (bad) rcll xor test jb ret and movsb add inc adc adc xchg pop sbb shrl mov adc mov xchg sub or std or movsb adc ror pop mov add inc lea mov jnp cmp mov movb cmp mov mov pop jge aaa mov jmp or cwtl sub stos divl sbb adc xchg or imul xor and jp and iret mov mov test push das sub cmp insb or inc jmp mov push imul mov adc pop aas nop and add flds es or jnp ret ret push cmp jnp or stos movsb inc cwtl xor mov adc mov adc pusha add les repz pop xlat and sub xor xor push add add or mov jno in cmpl pop and xor pop outsl lea inc aad insb or sbb divl movsb and nop push mov push pop ret insb adc mov and mov adcb pop inc in xchg and pop out jmp mov jb lods lds popa ret inc fcom xor xor outsl roll sub orb pop pop test mov push mov adc movsl outsb jae mov mov popa sbb pop cmp popa add mov lods add movsb adc (bad) lock addl lods dec push ret adc xorl mov or cmc addl rclb inc loopne lods clc jo sbb inc xor push rorb mov xor pop xchg mov sbb inc rorb jo pop lret shlb jno add addr16 pop mov mov rcrl loope (bad) adc or test bt push shlb inc cwtl and pop flds sti mov fadd cld push sub insb lock cmp sub inc adc imull sbb in loope jge mov adc xchg sbb xchg es push or mov fadds add popa arpl cltd and scas inc mov mov add add add arpl jle xchg xchg or xchg adc dec in and xchg pop mov int3 add rolb outsl lods test bound adc aaa push xchg (bad) insb or shrl adc pop add pusha lods icebp sub xchg xor ss sub sub lahf inc and inc xor js add jmp sub pop sbb push inc and mov push xor xorl inc inc pop sbbl sbb dec andb insl cmp ror push fwait and fwait mov mov push push xor mov add push xor adc ss test gs pop orl mov fsts hlt add rorb pop mov nop mov inc adc popa sub push sbb mov pop xor push cmp dec sub and jne xor cmp jbe inc into jb rorl dec push mov add push mov add mov xchg insb repz and lret stos loope sub mov sarb xchg sub imul sub dec cmp enter sbb cmp and xor mov out mov clc mov sub or rcl jae,pt adc and jg lock inc add cmp adc add cmp mov mov hlt in jl les fsts dec and xor or add rclb movsb adc gs orl push test and push pop push and pop push icebp in ret sbb test test jno inc xchg cmp jg jo lret push xchg outsb dec xchg cwtl daa lods test xchg ljmp ss int push xorb sub xor xorl pushf inc ret xor xor xor sarb pusha gs cli add sub and adc lea mov jl dec lea dec dec lret cmpsl in mov dec stos adc pop test mov arpl sub aaa lods sbb adc xchg mov lret xor ret lea adc adc mov mov or cltd adc lds mov inc cmp jo lret fist dec pop inc negl inc sbb mov add test and subb scas xchg pusha adc sbb popa and adc lret add or or imul test pop cmp dec lret mov mov sub push jo and and ret xor add push lea nop gs sub (bad) arpl or stos int3 imul jo int3 xlat sub xor add lret stos imul or mov mov scas mov push mov xor (bad) int add xchg sbb bound out js or pusha pop push nop in and jg xor xor sbb xor mov dec inc (bad) add mov test adc pop mov in or mov sbb test pusha add add mov test sbb adc pop mov push sub xor cmc pop cmp push xchg xchg push xor aaa sbb pop pop pop repz xchg push daa je pop lret dec push push or insl and fist mov sub sbb xor inc sbb add sub aam pusha or jno xor or mov (bad) bound stos xchg ficoml add loopne add sbb and mov mov enter arpl xchg sbb dec lds inc mov jns cltd and cmp xor leave sbb and cmp push mov and dec adc pop and lods (bad) mov or pusha inc cmp push aam sub lds fwait mov push jno push adc dec xchg mov insl adc and sahf xor and jmp les sub pusha andl dec (bad) sub pop xor pop sbb data16 xor cmpb or lret push loope jno pop cmpsb nop push daa movb (bad) cmpsb mov and in cmp mov xor popa daa jne in popa pop icebp push push or adc xchg sbb les dec lock out push adc xor xor shl mov mov (bad) xchg or xor push dec fnsave lods xlat mov iret sahf jns dec xchg ret inc mov aad mov add ror push mov mov pushl (bad) pop inc sbb pop sub xor add xor cmp xchg and in xor xchg or push inc or xor (bad) and bound lahf test dec ret inc sub mov mov add xor xchg add jbe pusha call aam shr adc sbb mov sbb jge xchg dec pop add add mov inc shrl fmul push insb sbb xchg rolb xor inc test push in adc xchg add daa test inc mov movnti pop gs (bad) push cltd (bad) xchg dec rcr jo add outsl imul test and pop xor dec xor xchg or pop sbb popa and loop push push aam pop cmp inc repz xor pop push xchg enter mov pop notb test sub or add outsl cmpsb fiaddl repz cmp iret xor sbb ret (bad) mov lock setle stos sysenter lock lea sub dec mov push inc dec or push std push pusha sbb paddw mov jmp rclb sub xchg jb es mov mov imul jae (bad) add aaa fcmovnbe xorb pusha push push movl or xchg sbb adc js aaa xor xorl pop dec sbb inc sbb mov stos (bad) clc and xchg jbe test das xor adc lds mov inc rcrl pop sub mov inc xchg lcall xor xor or icebp or push cmpsb insb loopne test xchg ret add and movsl jae xchg and or or and mov xchg and je popa sub xor (bad) aaa lods cmpsl mov push jge outsb add or aaa and ret xor sub sub sub loopne jns jbe mov cmp add sbb mov inc test pusha add mov or xchg (bad) lret pop or mov xor sub ret adc stos dec shrl inc jge pushf cmc adc sub mov dec inc daa cmp mov outsl iret mov ja mov inc xchg xor add shrb ja mov test mov or arpl lcall loopne fcomps push rcll sbb rcl pushf es sbb or popa jno cli or outsb inc adc xor icebp xor sbb and dec (bad) jmp test xor jp and lret and out push sbb push xchg cmp es cmc add imul repz nop in add imul cmpsb ds mov inc push push mov aaa xchg mov sub sub xor mov pushf push les in flds mov push xorb or ret push jp lahf jno dec mov mov nop sub adc xor sarl mov test orb rcll mov (bad) hlt jecxz add adc in sti or or xorl push pop jmp pop mov cmp bswap ret sbb es xor sarb push movsl je xchg aad jno fdivl testl inc pushl mov dec push add popf or and inc inc dec scas dec stos xor std xchg sub dec arpl mov pop dec std cmp push (bad) or test xor ret scas fcoms add out mov xchg mov push push add and ficom insb cmc adc test add leave mov outsl xchg sbb dec add dec pop add xchg mov dec add jge fwait (bad) fdivs inc xchg xchg adc ljmp xor push in pop pusha and mov loopne inc pop int3 sub add mov and insl sub xlat lea cmp and dec cmpsl mov int and shr pop rolb rolb or test or aaa daa inc dec cmpsl jg push sub popa mov lret mov mov add addr16 or imul cmpsb mov (bad) xchg cmpsl sub jmp push add push test push rolb push lcall leave push inc push xor ds js jecxz adc lea cmp (bad) (bad) cmpsl nop cmp sarl xor mov (bad) pop sbb mov xchg gs mov jo mov mov cwtl mov push and nop imul movsl sub xchg xor jbe orl dec xchg test xchg (bad) insb dec xchg int3 dec mov daa cmp add pop sub cmp rcrb lahf jp cld or inc loope movsb sbb mov add sub stos mov (bad) add inc ret add cmp mov xor xor mov mov insl pop and push call and mov push adc ficom xchg sbb nop adc xor imul inc xchg ss xchg nop adc lret or or cmpsl xchg xchg repz jp push imul fcoms and pop lcall cmp adc sbb lea clc jne or dec add add sbb icebp test add add mov or dec mov adcl fidivrl aas sbb (bad) in shl jae xor mov js mov fs pusha aaa cmp push addl aaa push jno mov cmovg lea test xor fwait test nop (bad) (bad) cmpsb pop and and sbb enter imull imul and and addl inc jmp and rorb fcmovbe push mov dec xor mov rol dec call mov adc inc jge push fnsave dec aam xor fcoms subb (bad) (bad) cs mov mov icebp adc and lahf and pop pop ss xchg add push pop and movsb inc (bad) and xor xor adc mov stc pusha add fdivs sub jb mov dec test rorb imul sbb and mov bswap cwtl lahf fwait xchg or xor jae sbb mov rcl add fwait cli repz aam jne inc mov rcll leave sti in mov pop xor xchg and dec inc sbb insl push inc ret or push jmp repz inc adcl xchg xor push jno je adc arpl loopne sub sub dec pop dec rcr loope cmpsb mov dec cmp rorb fs mov and cmp mov adc and mov pop (bad) sbb sbb mov das adc fadds add sub mov adc and aaa ds cli sti cmp xor add mov inc adc push daa push mov dec adc and ficomp inc xor add gs dec dec daa in cmp pop adc mov mov or jl sbb (bad) pop pop and fwait lret rcl xchg fdivrs inc test ljmp add cmp push popa mov pusha sbb andb adc jmp jge xor cmpsl mov imul sub and add icebp or (bad) xchg imul dec add mov cmpsb and xchg out rolb ret push inc mov test inc xchg pop push or add xor arpl add lods or lods jno ja arpl jb in call push add sbb inc sbb xor and add dec mov je push dec mov imul or test xor cs inc inc jns xor popa mov adc les dec ret rcl adc or mov loope push out addr16 jno idiv add js jns xor pusha jmp push aam jmp push das mov mov (bad) ss bound and ret fisubrl bound dec jmp add and xor push bound mov imul jmp das outsb mov push mov cmpsb out addb mov dec pop pop mov cmpsb mov sbb andl fildll je xchg adc test cmp adc aaa fs adc xor xor jno dec adc and or lods or push adc in or cmp add inc dec mov fcmovbe pop daa les sub xor inc dec int dec nop mov mov xchg mov xchg inc lock adc dec inc js pop xchg inc test out mov pop mov add lock push xor push aaa dec sbb xchg xor adc or imul aam cmc push mov xor (bad) movsl popa (bad) push sbb leave xor mov cltd cmp dec mov jmp pop or mov inc cmc xor testb dec gs push rorb xor and add hlt stos or xchg push xor xor pop pop or stos add in or mov push push incl xor fucomp rol ret xor imul (bad) add mov sahf or sbb sub inc stos clc nop adc pop push sub lock into cmp stos ss mov push mov loopne push stos pop add push xor xchg test mov add add cmp aad icebp or (bad) call cltd mov dec imul sbb je rclb and mov mov push pop xchg inc out cwtl sbb push push push ss sub mov mov sub adc cmp mov pop add and loop movsb mulps mov xchg bound sbb stos jbe push les mov cltd cmp mov and cmp xchg cmp sbb (bad) iret push sarb idivl pushf mov popa add fbstp sbbl inc outsb aad mov rorl mov xor ret fistl adc or rcrb lea mov add enter xchg jo daa mov dec lea xchg dec insl loop rol call test mov sub lret cmp xchg xor sub ficomp adc sub mov outsl mov pusha or add mov sbb or nop subb sub movsl sahf test adcb addb pop xchg mov and mov push inc int imul pusha scas push xor icebp insb push mov and mov sbb roll imul pusha push push and (bad) daa push insl push cmp aam inc jge and mov cli cmp adcl out or test dec imul add mov push sbb fbstp cmp pop xor mov adc pop fadds insb mov and or add push pushf dec test stos mov mov xchg sub mov dec sbb add ret js loope mov add inc mov or inc cmp loop mov andb adc and mov dec cmp push outsb lea adc aaa mov jae test test mov cmp sub mov lret cmp push ret lods pop adcb xor repz bound cmp mov rol jg test add inc add iret jbe (bad) movsb cmpsb call xor call sbb pop add int int dec sub mov sub fsubs xchg adc roll sub (bad) xor inc test cmpsl pop add stc sub inc xor enter inc push mov test jnp dec mov push mov outsl leave rol je add leave pop addr16 dec inc lock pop jns inc movsb or and xlat sbb or and dec addb mov xor xchg gs loopne dec xor xor js or xor mov add movsl mov pop mov mov stos lret in add xchg and inc mov push inc mov cli gs xor cmp daa mov icebp dec imul fidivl cmpl cmp xchg xor adc out ficompl leave and sbbb and and dec ds sbb push adcl loopne xor jmp adc push sbb bound jge inc pop push adc mov and rcll int fadd and mov push leave and xor and ds loop sbb mov outsb or pop dec lahf ret sub test adc int or push or mov push rorl sub cmp adc sbb in je cmp (bad) mov (bad) xor cmp mov or loop cmp dec (bad) movsb and and dec sub adc in add xchg xchg (bad) and loopne dec xor lsl mov idivl je dec sarl lret fistl mov mov adc movsb mov and cmp xchg js cmp aaa lods fist push or push inc pop dec dec mov adc push push in daa mov inc cmp enter add push popa sub test pusha stc loop mov xchg (bad) sub jmp int3 fadds data16 dec mov gs daa pop push xchg mov insb xor inc add jb in dec xchg in sub add lcall mov or cmpb inc xor cmp js mov xlat lds or aam push jmp dec or aaa pop adc mov push sbb lea mov cld dec cmp pop sbb mov add iret mov push mov or or push fisub outsb mov cmp sub sub (bad) (bad) mov xchg xor fdivs sbb pop ret cmpsl cmp and popl ret movsb add xor popa adc jns push (bad) adc lods push cli add fsubr or push add or enter dec les push push sahf (bad) fnstenv pop and and (bad) sub cmpsl iret aad arpl inc test ret or push xchg pop adc test sub sahf imul imul jecxz (bad) dec imul xor icebp mov xor fsubl inc js pop sbb sbbl aaa xchg push (bad) aaa adc ficompl xor daa add and flds js inc pusha sbb mov sbb (bad) xor sbb movsl dec cli add adc (bad) or cmp stos movsl pop mov sbb pop shr sub push dec push sub sbb cmpsl or inc addl add stos aad loope sti imul nop push xor pop fldcw dec push and fimull jmp (bad) xchg gs push or sbb jns ret push lret cltd xchg sub inc xchg and adc dec mov push mov mov pop pop mov cwtl (bad) sub sbb and repnz sbb or push xchg dec movsl pop sarb pop inc arpl jno pop mov sub sub sbb and push mov sub jp adc sub mov pop dec fstl xor lea fs (bad) mov inc xor call xor test ss lahf xor inc xchg inc icebp mov stc cmp sbb mov sub xor cmpsl inc push adc mov (bad) add sarl outsl inc xchg push (bad) aaa dec push mov fidivrl jae jecxz sub loop mov add mov and insb mov xor rclb push data16 test push or xor mov ja aad les or add inc repnz mov inc (bad) push (bad) sbb loope push xor mov mov stos movsl mov jp ret xor inc inc adc sti rorb insl pop dec or or add xor test sub movb mov lock rolb inc dec lods or pop mov adc sbb push mov push dec jmp es loope mov ss lods cmp pop mov xchg push mov inc div push sub roll into sbb nop popa cmpsl icebp xorb (bad) xchg pop into scas lods or xor daa push movsl push lahf xor push shlb test add and cmp lods push push mov (bad) aaa adc pop add clc and jno xor inc pop das lret lock inc sar sub (bad) xchg bound or jo jns inc call pop sahf ss dec inc mov or fnsave jne fnstenv dec push adc rcl movsl or mov nop push xorb mov pop (bad) lock icebp and daa ret add shr arpl or or sbb cmp shll xchg sub xor mov adc or insl loopne test xchg add aas popf mov cmp sub adc sbb mov mov jp dec cmpsb push lods testl in sbb adc adc mov jns cmp movsb adc sti xchg rcrb or pop add int cmp (bad) lcall aas sub and sub pop ss fbld mov pop adc test push fadds andb sbb (bad) mov jae sbb and les es xor leave pop jmp in xor sbb pop push dec pop add push aad int3 push adc pop push add adc sub xchg xorl mov pop js push shlb imul das inc dec xlat and mov scas fwait jp adc xchg (bad) adc or cmc inc mov nop cmp arpl push enter add lret out (bad) test adc js (bad) mov sbb mov xorl scas xor (bad) jo mov mov inc (bad) jl add mov or inc adc aas inc xor or les outsb jmp push inc or push into xchg adc and adc sti pop adc popa adc es pop mov adc insb aad mov hlt cs loop test scas pop inc pcmpgtd bound icebp add ret pop xor jo fsub sbb dec sahf push mov out xor sub xor or test jno xor dec cmp in adc bound push push mov sarb ss fwait pop mov or pop js jp adc ficoml or pop fwait ss add lock fs movsl loopne adc or lahf dec fnsave (bad) mov lcall mov xor mov rclb outsb lcall mov movsl jecxz fldcw sub inc push and mov push xchg sbb push xlat pop push or das cmp inc inc or xchg xor push dec cmp mov test fisttpll pop dec fcmovbe and fstp pop mov loopne lds dec (bad) xchg xor rolb add movsl inc pop ret and pop inc fldt cwtl cmp pminsw xor lods sbb je push out mov icebp mov jmp dec push xor inc inc adc sub inc popf jb push dec push test aaa ja inc sbb xchg fsts mov pop aaa mov andb xor imul arpl (bad) xor adc lea sub or add fs mov loopne pop adc xor test pop sub and sbb fidiv or cmpsl lods inc iret add movsb adc push dec xchg rcrb gs loop loopne xor pop iret lcall dec add dec mov fsubp fdivrs ffree ficoml mov add incl scas xchg lods inc or movsb nop cltd daa and (bad) subb mov mov fwait outsl mov bound loop xor insb loope icebp or add mov outsl rcrb inc or sbb sbb inc int leave les add xchg inc mov add mov das in sbb call xchg test sbb test movsb mov mov insb adc pop mov mov inc sbb jnp cmp inc bound sahf xor jae xor lods cmp popa add popa orl sub mov fsubrl or dec pop jecxz cmpsb add sarl add or popa or shl enter (bad) andb hlt sub (bad) jmp push xchg jmp adc xchg ss sbb sub adc cmp loopne sbb mov push nop adc or mov mov fwait dec inc or and xchg int imull xor test adc or xor lods popa loop dec cmp (bad) fisubr adc (bad) sahf dec ror mov or ret and xor xor std test push stos mov nop adc sbb or push insb xchg (bad) xor xchg xor or xchg pop test aaa fs fucomp xchg jo or mov sbb shrb inc mov jmp push push sahf lahf hlt gs mov or (bad) push or xchg xchg popa or adc add insb dec icebp rcrb cwtl sbb shll add xorb cmp loope js xor xor or dec stc xor add sub or je testb rorb or or fs xor sub aam sub loopne and imul dec arpl jnp and jle sbb sub or (bad) popa sbb xchg sub mov mov (bad) lahf xchg repz in xchg fcmovnbe jo gs push pop add adc add jmp gs and inc and ret fwait cmpsb mov lock dec push and add dec add cmp dec sub push leave ja add rcrb rorb lods shr or and inc xchg cmp or dec push movsl stos sbb jge pop push jp pop jl mov sbb adc clc adc add cwtl inc mov pop and push es pop sbb xorb sub xor jle popa inc pop inc pop js mov pusha test or jmp adc fadd inc mov call or pop test popa xor jne pop dec mov inc inc pusha mulps imul in jg roll sub sbb sub ret mov aad addl xor mov lcall test ret dec je adc xchg xor mov cmp push loopne and push popa xchg mov aas and sub push and mov daa pusha insl insl xchg cmp adc pop mov test pop add outsl adc sbb mov xor push cs xchg mov inc mov push cmp out cmp inc sub lahf sarb and dec mov daa pop mov mov inc pop sub mov pop inc xchg repz sbb inc or or sbb or sbb mov ret and mov push (bad) call sub and mov loope xchg jmp add insl test pop (bad) pop dec mov sub arpl xor pop (bad) mov stos ss jae add push cmp adc push jne or hlt fmuls push call or sbb jp and subb pop push loopne dec dec test test jo and stc xor aam cmpsb pop fs pusha mov jle rol or xchg loopne test pop jno outsl cwtl inc sbb mov add pop or cmpsl adc sub or mov push or sbb arpl sub sbb into add das pop mov insl sahf push imul ret sbb loopne movsb leave ficom js mov add push aas shrl jle xacquire stos inc lret mov rclb fcmovnbe add xor popl add sbb sub xchg and (bad) std leave sbb cmp in dec clc and orl nop popf dec or aaa inc pushf popa addr16 ret sarb outsb mov mov les mov push mov or pop and ss mov adc add xchg sbb pusha mov pop je xorl add inc orl or and aaa mov mov add mov mov mov cmpb inc adc das arpl push xchg inc cmp xchg push sub jo in xchg xor sub or cmp push or movsb adc or pop arpl fs sbb movsb jge mov adc mov pop xor or jo xor and push clc xorb cmp mov dec xchg adc inc push and or adc cmc inc dec call test push push xchg mov add xchg ret push test or push xor xor push inc pop cmp jbe adc xchg subl fild rcll gs xchg add mov xchg test sub addr16 popl inc sub cmp xchg add or test pop pop add xchg loope aas mov mov push insb js scas cmp (bad) cli inc bound stc lcall and mov dec stos inc adc xor in dec or mov xchg inc ss dec push sub pop adc lods sbb scas mov inc push add cmpsb xchg pop dec inc push xchg inc sbb mov imul cmp sub incl adc sub dec ljmp xor or inc mov es fimul daa sub cltd sub cmp inc push push push fstpl inc ret lret test push int es xchg stos push jo xlat xor ret (bad) add popa imul pop inc add andl inc push ret inc arpl arpl ja xor scas test dec xchg lcall (bad) jp cltd cmp popa mov rcrb (bad) popf gs or xor js and add mov sub flds fcmovbe dec rcrb push cmp ret into pop in je (bad) mov or jno ljmp push push jecxz or jp cmp pop ret ret inc mov out aaa and ret sbb sti inc mov sar xor enter pop or jae test cmp xor push ds mov xchg push push push cs and leave dec packssdw inc mov inc (bad) rcl dec lahf sbb test add ljmp or scas pop lock sbb mov cmp sbb inc aad adc xchg imul mov andb pop xchg fistpl inc and inc adc into mov loope or or xchg inc sub jp or cmpsb dec ret mov or or dec cmc xorl inc lcall sbb cmpsb lods cmpsl arpl xor rclb roll jb sub js cmp in insb lods psrld jmp adc daa clc jg cmpl lea or into out mov mov cmp push xchg push shll and jne pop les movsl bound arpl mov xor gs or test leave sub lods jo imul dec push rcrl sub nop/reserved add ds jns sbb adc mov sti jle cmp and fisttp pop xor jmp pop (bad) and ds pop stos dec sbb inc inc (bad) push js hlt lods mov sub pop loope gs ljmp push push inc fldl jp sub adc popa and scas lods mov (bad) xor ret mov nop movsl cmp jne bound ror sub add pop pusha jns pop lret sbb gs add mov mov adc loope sub mov xor pop pop xchg sbb iret ds xor inc stos xchg sbb pop jg (bad) xorl pop xchg popa xlat gs movsb (bad) xor xor dec inc mov push xor or inc add repnz mov pop push cmp data16 xchg and loopne (bad) push dec ret or xlat mov mov dec pusha sbb sub dec adc andl push mov adc jle or jge das imul movsl fwait pop pop dec aad sbb inc mov cltd mov movsl aas jnp xchg (bad) mov xor repz and push xor inc pop and (bad) push (bad) stc dec adc push jecxz dec or or test cmpsl xchg xchg mov cmpsl dec pop pop xchg enter push add icebp and inc js lds jnp pop loope ss inc push and test jbe push ret mov xor data16 push scas rcrl add and out insb inc pop push mov xchg add sub and cli add mov inc ljmp adc nop and lods push and cli cmc lret xor xor lods or adc jae add mov int3 inc adc pop aas xchg icebp sbb popa sub mov or mov outsb xchg mov pusha es aad adc xchg add and sub pop dec cmp pop pusha or roll cmp daa (bad) pop adc and push sub mov aas adc inc lock and leave rcl xchg daa lock mov and addb ss add push icebp popf mov lods xchg inc xorl or mov pushf inc lea mov adc out sub pop test add stc add cwtl ficomp popa push dec popa xchg mov inc enter dec sbb mov nop sbb in xor add sub mov sahf pop movsl jp,pt pushf lock (bad) mov or mov adc mov ds adc test enter or add fs sub lock add mov arpl or mov sub imul popf fwait adc (bad) dec rolb sub insl es call ret dec mov xchg test scas cmp ret nop cmp rol sbb mov lahf sbb add out popa adc xchg js dec and ss xchg or cmp outsb and adc adc cmp and int lds (bad) or cmpl es push xor mov repz adc and pop cmp xchg popa inc arpl cmc xchg sub xor add or lods dec jmp imul xchg mov adc mov addl or sbb ss test adc inc or mov bound xor mov pop and lods enter adc rclb push pop push add mov push dec xor ljmp nop (bad) push test ds cmpsb in popa cmp mov sarl add pusha add xor frstor enter out aas mov cltd xor xor mov call xor popa mov add or dec cmp imul aad push sbb test and xchg movsl popl nop cmpsl inc or cltd addb rcll clc push fsts fidivr inc or xchg mov push xchg rol push daa dec dec sub shrb fldenv sbb mov adc mov ljmp out inc and shl xor add push mov addl mov push pusha push leave pop insb adc mov or sbb (bad) incb fwait lock test mov push dec mov add add xchg mov or jmp enter sbb test in mov mov mov pop aam lods xor sub sbb scas and adc jo cmp mov mov imul and push inc icebp rol cmp jp or adc lret add push or mov push hlt mov push inc sub pop sbb lret cmp inc imul jae mov xchg add loop stos add add insb pop imul lods sub adc and push or mov fstpt pop sub inc pop pop pop sbb addr16 inc mov in pop push mov popa xor popa pop imul mov mov jl and out sbb adc or outsl adc hlt nop add (bad) jle inc xchg (bad) and and add incb inc dec dec mov and jp loope push add (bad) pop dec pop (bad) sbb mov add ss or xchg test pop inc xor push pop inc cmpsl mov add push jbe add jmp imul movsl daa loopne jmp cmp ret js xor lcall adc push sub xchg xor xlat adc test xorb out cmp cmp push pop dec fsubs jecxz lods xor lods inc pop inc and xchg pop sbb fimull cmp (bad) xor or cmp js rol adc xchg mov dec int or lcall stos mov movsl cmc enter sbb sbb faddl movb leave mov movsl dec push push pop fwait rclb cmpsl pop inc stos or cmp int sub lret mov sbb pop adc addr16 xor jae,pn iret xor pop sti popa or push or gs mov fstps in (bad) jo mov dec push push sub mov shrb (bad) sbb add andl cwtl cmpsl add adc gs sbb xor inc mov xor in pusha enter xor jmp jecxz cs call shrb mov daa mov lds sbb cmpsl sub addr16 (bad) cli mov repz es cmpsb shll jmp xor pop inc popa stos pop push jge lock cmp push pop mov ds sbb mov (bad) rcrl add or mov add mov bound popf add mov and int3 mov int push xchg pcmpeqb lods adc mov mov xor out and lahf int3 push mov add mov pop mov push xor cs and sub and inc or stc int3 fwait adcb cmp arpl or (bad) mov (bad) cmp loope cli aas pop (bad) and xchg test or or pop dec repz adc adc add mov (bad) ja (bad) test and lds gs mov flds adc xor or fs fbld push pop les or cmp push les js adc xchg dec pop movsl fildl push jo rcr out or or push push push push mov mov adc add cmp lods and sbb (bad) fwait sbb hlt sub xchg pop clc mov dec and stos rcrb adc add jl push push xchg daa push dec add icebp or push adc xchg xor addl mov ror (bad) xchg loopne movsl and shrb xor (bad) sbb sub add and xor gs xchg fstps pop push cmp fnstcw add pop jp sub and xor and adc test push addr16 inc dec pop mov inc adc sub mov xor xor sbb lock sbbb test and mov das xchg sbb insl or xchg mov cwtl xchg jne dec sub cmpsl jmp add push fdiv push gs xor (bad) push adc orb sbb sub sbb and mov push xor and ss shrb mov addr16 and push nop daa or xor mov aad loope xor std sbb call mov (bad) add cld sub dec iret xchg arpl hlt dec ja es (bad) add dec xchg pop nop lods mov stos xor addr16 xchg and das xchg or mov inc mov sbb pmaxsw push xchg adc and and mov repnz sbb popa lea and sbb mov cmpl push nop nop sub or sub insl outsb xor loope aas (bad) imul add mov adc shlb sar popf mov inc loope mov mov sti test or repz cmpsb push inc pusha xor sub iret cmp leave sbb out jae mov inc cs sub jp arpl faddl adc and aam adc adc jmp dec loope js cwtl jo push xchg mov xchg xor pop sbb push adcb adc xor or dec cmpsb push fmuls jne (bad) dec add repnz cmp rorl mov movsb add mov mov adc cli (bad) sub pushl test pop test repnz ret leave inc (bad) popa shll lods or push mov mov or arpl and inc mov dec adc enter and dec adc in add pusha mov leave out into ret inc aaa ja xchg movsl adc into mov adc push jno add add mov je fs ret sbb and dec add inc and mov pop add cmpsl clc gs push lods int lea adc xchg xor (bad) cmovo sbb adc jo push in xchg mov xor mov sub and sbb mov push mov aad inc jbe pop insl dec xchg xor add lcall rorl lret inc mov xorb mov xor mov lods adc mov sarl int3 imul or inc sbb int or sub leave inc inc pop inc add scas mov fbld shrb sub push sub push sub pop or inc jmp call adc popa add sbb or js inc xor or add lods inc inc arpl cmp dec inc xor in arpl push ret add xor mov dec inc pop jno cmp je push or fidivl or lods out xor sbb int3 sbb dec mov fsubrl rcll andb and dec mov add dec or mov inc pop les sub sbb mov pop dec mov and pop and and inc xchg sub pop aaa aaa dec loop and imul sub cmp xor pop pop mov and lret mov add dec aas pop ret pop or inc dec shrb push push or dec push or dec dec int ss lret movl lods mov xor cmpb pop imul cltd or sub adcl leave imul outsl aas movsl xor jecxz (bad) adc pop inc dec and push sbb (bad) sbb stc dec xchg fadds addr16 mov add shrb xchg (bad) cmp add popa lea xor and mov movsb add pop xor jg add sbb movsl lock aad lret mov cs arpl lods icebp addr16 loop mov push outsl insb shlb jns ja sub mov mov pusha inc xor add or sbb pop and adc xchg sbb xchg and lea mov jns inc cmp movups inc loope xor pushf and inc scas aas shr test inc inc sbb data16 sbb cmp popa sub and and and sbb cmp pop dec test add adc sbb pop and dec sbb add xchg rcl stos lea pop cmp add add cwtl dec dec cmp mov xchg add or dec fs and push call adc cmp mov cmp add lcall xchg xchg xchg mov cmp arpl vmwrite cmp mov jbe mov daa daa ret dec adc or pop in xor popa pop or add nop jecxz and fs xor xor mov setnp dec es sahf and pop fcomp or aaa shrb addl jecxz sub cmp out stos ret mov lahf ljmp js adcb xor sbbb sbb inc pop inc stos add adc adc gs jmp cmpsl popa adc pop add loopne or inc addb ds and sub ss cmc psubusw xchg sbb dec cmc dec or inc shl and xor add jl adc (bad) loopne inc cmp push mov xlat popa lret loope mov push cmp cmp adc cmp or xlat cmpsb pop sub mov sub and ret pop and xchg and and add mov jno lret sub enter add push popf aaa ds cmp jp mov test daa sbb or adc cmp dec enter shrb inc sub call lret and imul dec mov in inc (bad) js cmp inc xor and stos add dec loopne push (bad) lahf xor and test push (bad) mov inc imull dec or aam pop das mov xor (bad) mov je add popa jae arpl mov mov add xor ret data16 xchg or mov lret and xchg inc inc xor pusha jne dec mov pop dec cltd xor add or les popa adc aam sahf cmc xor icebp push pusha mov xchg inc js test pop sub idivb pop xchg ret adc cmpsl test push ljmp es sahf add sub test insb push inc xchg xchg rorl imul pop (bad) sbb pop dec push mov lods cmp les nop add jg clc mov lock loope add inc sub and inc imul and mov inc dec add lods inc lods enter push lret cmpsl xor push dec loope mov xchg test andl nop rcrb push mov loope into fimull mov popa call sbb sub insl test adc xchg aaa das pop mov add add lds inc mov je mov sub dec inc stos cmp mov and inc push adc arpl add inc adc mov xor lods sbb or cmp jl xor sarb test or inc jo ss or leave pop xor adc cmpsb add push dec lds ret mov xor xor test mov jae popa inc daa sbb clc nop mov mov (bad) xor pop pop cltd pusha sbb jae push add ret cmp imul aad adc popa cmp gs or movsl push imul xor dec sub movsl add test fist xor call inc aad cmp movnti xchg addb xor ss inc xlat xor sbb adc insb pop ss pop cmpl and xchg mov sbb dec mov lock or add loopne or js pop pop xor inc mov std repz aaa cmpsb inc mov imul and jns cltd or (bad) idivl or hlt ret xor xchg adc (bad) mov sbb mov or xchg cmp (bad) mov or imul add cwtl lret in inc pop jno inc movsb mov add ss xchg rorb pop pop lahf movsb or add jg mov loopne xchg aaa roll add lea popa push cmp (bad) xor inc lea ret ret lcall and outsb dec sahf cwtl nop sbb cmc stos xor arpl cmp arpl js addl and add push push xchg xchg jp push (bad) xor sbb adc aaa lea jae pop add rol xchg inc cmp mov mov sbb xorl inc bound and fistl add adc jge sahf es nop sbb (bad) xor rorb pop js cmp xor inc gs pop jmp adc loopne sub pop sbb cmp mov dec sbb (bad) jg mov lcall icebp aaa and sub or jecxz jp adc mov sub orb mov inc lahf xor sbb mov cwtl fs aas adc aam add xor mov mov dec pop das push sbb add jecxz add pushl pop jmp mov mov dec rcrl mov pop inc pop test js int3 xchg pop out push insl loop inc popf lret rorb js xor push jp movsb pop xorb sbb push pop aad addb push (bad) adc jns in mov fistp (bad) and mov xlat xchg fcmovnb rol mov test xor xor lods or ret subb or push sub lods fs loope and ret xchg adc arpl nop pop xchg inc mov andb inc cmp pop adc pop push mov inc push inc fadds mov aas outsb adc hlt xor push nop mov push add jns cmp lods popa sub ret push cmp dec test dec xor push and insb aaa fmuls or inc pusha add and dec ret leave sbb mov sub nop lock mov mov xor insb mov add or imul sarb and mov mov sub outsb add aam sub push lods adc hlt push mov dec inc movsl and xor (bad) add sbb scas imul movsl push dec add mov rcl mov add xchg pop movsb je sbb nop adc mov pop leave mov mov adc mov mov icebp dec jecxz adc inc fild push jp jno clc lret in inc loop mov and cmc mov xor movsl in sub dec es mov je add in fs stos (bad) aaa inc xchg loopne arpl jp aaa push inc xchg and xchg push jb repz mov cmp sbb sub into sbb loop dec movsb dec jmp aaa dec sbb xchg repnz shrb inc lea test and or adc and negb sub push push push push push mov mov cmc jmp loopne xor push popf mov and leave loopne adcl add push adc xchg leave jp or push fwait pop insb push mov add iret mov xor dec mov push mov cmp xor pop dec sbb pusha rcrl inc divl rclb sub mov lea loope xorb and xchg add mov test mov addl xor adc pop xchg lea push mov xorl out dec repnz rorb inc dec inc stos fnstsw add xor push rorb nop sub cmp sub and xchg pop or lods or pop arpl int3 lods push rcl ret adc adc sub push inc and push adc or inc mov cwtl sub and enter es aad jae or inc mov pop or mov add mov adc es movsl sub mov adc adc movsl xor addb pop ds jne (bad) adc cmp push cmpsb mov cmp push add xchg inc push sub roll xchg les jo or out dec mov mov and or movsl (bad) mov addb dec adc enter inc sub addr16 dec mov fs inc pop inc and sti jo sub pop pop stos dec int adc add repnz lahf mov jnp lret rorb test and mov test ss push or sbb inc xchg mov stc dec mov cmp add nop shrb repz adc das or test sub pop rorl nop and aad mov fstps test mov push mov and or mov out enter sub (bad) lea fs mov in push cmp nop inc pop mov shlb lods xchg lods push or push inc and test push aaa dec push inc mov and fsubrl flds jae pop xchg pop (bad) jb xchg mov popa xchg fwait mov sbbb adc pop and mov add and or adc inc pop sub or pop pusha insl lods mov inc andl (bad) (bad) imul xor sub dec mov inc test and arpl inc adc sub push jmp xor xor loop inc pop adc aaa pop std sar sub xor pop mov arpl pop insb push inc dec sub push xchg movsl (bad) icebp (bad) mov sub sub ljmp cld push and inc xor xchg cmp test xor fldl loope nop inc or or cmp push push rorb in pop xor movsl mov adc lds jo xor jno lret dec sub adc nop test push xchg scas or adc sbb or and hlt jb gs jg push push aaa pusha or rclb or jno (bad) dec and push ss je sbb add pop inc dec mov pusha dec aas (bad) mov inc xchg stc or and push dec add and xchg xchg out cmp xchg and stos sahf xor stos xor inc sub inc add mov shl mov les repz cmp stos adc or add orb int3 jno adc adc lds sub pop add and mov jae inc pusha add mov stos sbb ret xchg xor push xchg jne pushf movsb xchg xor dec push sub sbb ret lds movsb add (bad) aaa sub xchg cmp jno push add push movsb adc loope xor in stos and cmp sub (bad) sub shlb sbb and lcall xchg dec in test enter and push dec adc orl cmp push push adc mov cwtl inc sub sub (bad) push cmp mov inc push clc xor pop fstl fidiv shlb xor sti nop int3 inc mov xchg into sub push dec pop and jl add int3 add mov xor dec and adc or les sub test sbb out cwtl xchg pop and sub pop (bad) test sub or enter or loope dec dec addr16 mov pop jl xchg (bad) pop mov repz arpl xchg je mov inc js jp or popa push add cmp push push or lods imul and mov or test xor pusha sarl dec or pusha adc sbb mov fcmovnbe adc sub sbb sbb popf lcall test pop and xchg rorl dec fwait ljmp lods mov push adc cmp inc pop push rclb or fistl xor ret loope or aaa xchg xchg adc and dec aaa inc jno pusha push jns cmpsb cmp adc aad push sbb and xor pop (bad) inc pop js imul aam ss sub or popa add or cmp lods punpckhbw xor adc or and xor lds mov xor std xor xor stos lahf inc and sub jo popa push add mov mov test push jge cmp add and add pop lahf inc xor and cmp bound dec and lods xchg js jne xor and xchg stos add add push pop test add mov cmp lcall pusha popa mov nop loope inc push stos add mov mov dec push mov dec cwtl xor inc pop inc dec sahf inc leave enter adc rorb xchg inc sub in or mov xor or divl adc imul roll dec push rolb sub mov mov imul adc popf xchg or pop out add (bad) fistpl xor inc xor pop push mov mov mov jo push xor arpl clc push xor insl sbb lods add adcl insl enter push jbe and or or roll imul lods lea ret cmp les add dec adc inc fwait int mov and sub sbb loopne jge sbb and xchg xchg add adc lods das and mov pop js push jae (bad) rolb sarl push inc xor ja aam andl insw lea clc dec push cmovns push xor mov lods lods xor push pop les andl mov and sahf mov push cmpb les sar nop xchg lea xor pusha cmp sbb push lret and (bad) andl sbb ds inc cmp xchg and and (bad) ljmp add adcl pop pusha pop dec xchg cmpsb mov les (bad) lret and sbb add clc test lea jo inc mov jns cmp sub xor and and mov bound xchg mov add (bad) xor and sbb adc jmp test sub cmpb jnp lret inc imul xor int in lods inc mov or or or sub cmc (bad) lret sub mov and rcll imul in xor addl cmp push shlb and mov je bound inc push mov lcall bound mov daa adc adc fwait aam rclb cmp cmpsl les sub cmp xor xor mov add xlat and push aad push js adc cmp jp adc jp mov mov dec lods mov into dec mov rorb lods inc jno or das xor rcll mov adc and inc in rclb pop or pop arpl add rorl fcmovnbe mov dec pop repnz adc cmp jg cmp dec in ljmp pop lock xor cmp dec outsl call add sarb fisttpll adc adc loope std cmp fdivrs rclb xor xor mov rcr dec and mov and inc inc cmp inc mov lock arpl sbb or mov cmp mov dec imul shlb aam add movsl dec mov push pop movsb dec dec cli dec std xor cmpsl test aam addb sub (bad) mov xorl enter dec dec mov cmp mov inc sub cmp sbb lods add mov mov mov je dec jp xlat push lods xchg or aam aas (bad) lea inc fcoms cmpsl mov rolb xchg adc dec add loop lods push ror jle sti cmp es lods add (bad) mov pop cmp nop pop test movsb call lret xchg in pop stos mov xchg push insb jo (bad) (bad) mov inc popa sub dec and xchg js enter xor xchg sbb in js push or les sbb in imul push (bad) xor je push in and imul pop or mov lret cmpsb fiadd dec jb test mov dec (bad) loope js les pop and fs mov test add mov sbb xor in mov pop pop stc xor test xor mov pushf movsl adc jnp and sbb inc enter mov dec repz inc inc fildll and arpl leave test xchg fisttpl cmp test sbb push dec loopne cmovns pop rcrb xchg iret cmpsb add sbb call xor xor (bad) enter ss cwtl or pop arpl test loop xorb inc inc and xor popa sub in sub (bad) xor mov or roll pop push add cmc pop add mov push rolb sysexit gs adc add out add pop adc out sbb xor add mov js dec popa sbb lds or xor or arpl cmpsb pop fistpl add aam imul test mov in cmp test dec pop daa data16 in adc inc (bad) adc and pop movsb or sbb xchg cmpsb loop xor xor cmp or mov inc mov adc push gs jecxz xlat xor or xor add adc inc jp (bad) std pop dec xor adc hlt mov mov pop leave (bad) aam add ljmp cmp in inc or push push xor sbb outsl pop popa mov (bad) sub outsb enter xor repz lcall add and test iret (bad) xor loop jecxz or mov and add sbb ret cli cmp dec addr16 sbb mov xor mov xor in push lods lock pop jno xor and movsl cmp insl sbb insb sbb int3 fld (bad) fnstenv xchg lods pop adc rol dec xor pop or adc cmp sub cmp test xchg inc jo repnz gs pop dec test fistl aas xchg (bad) mov adc mov fisttpl nop sub or jo inc adc subl test pushl adc pop inc jecxz and adc fs add popa js and pusha pusha and ja subl out cli xor cwtl cmpsl lods xchg push pop sub pop loopne lods pop xchg mov xchg movsb or cmp push dec out adc sbb or inc bound dec and add inc and lods movsl pushf sbb pmulhuw sbb rcll in add mov loope sub mov scas xor xor int3 xor insl lods pop adc (bad) xor xchg add xorb xchg movsb test adc inc stc xchg es mov lods les pop nop xchg xor add ret cmp mov and loope or xor xor adc aam mov fcompl inc and adc xor xchg insl adc and add aas mov add or lods je adc inc xchg mov jo mov inc mov xor pop mov and add sub iret leave popa mov adc xor loopne adc arpl andl popf xor adc mull mov mov aaa subl rcll and dec lods xor ret es test add inc jg mov jne pop lcall cmp xor popf push jg add push push inc jb dec js mov or pop test ja or enter fwait cmpsl xor int3 lods or test mov adc adc ljmp and imul xchg sub add repz mov inc adc (bad) sbb pop and dec jae sbb adc jmp sub cmpsl mov or add inc dec xor mov sbb xor leave (bad) mov cmp add popf out sub shlb xchg push loope add jge and pop inc cmp mov loopne dec movsb popa jecxz xor cmpsl outsb into xor icebp xor jecxz jnp or mov icebp fs adc inc xlat jmp xlat xor out inc or add mov fmull mov cmp xchg mov or inc cwtl mov ss push mov dec jge cmp test adc cmp mov inc adc add cltd inc hlt out sbbb or int3 andb (bad) lret or dec dec add pop adc and inc sbb adc push sub add test andb cmp add std sbb xchg subl mov mov jmp test pop and ret adc add or ror je fimul lea sbb aaa and push adc or xor or push dec das popa ret (bad) mov sbbb xor xchg inc dec and inc lret mov cmp stos cmp sbb fcomps pop push mov dec bound pop xor jbe pop test aad adc jmp add aad add (bad) dec sbb dec adc push push push xchg and (bad) xor xchg cmpsl push mov lods int push lea cmp rolb lock sbbl addb (bad) jns mov icebp xchg inc lret in xchg cmpsb xor or lods inc add cli adc cmp orl mov aad push bound ss iret xchg nop xor pop mov fs cmp xor push (bad) jo dec nop mov add xor (bad) push or aam es or (bad) jno sub add push mov leave adc pop movsl xorl insb (bad) push pusha sbb jne test sbb imul nop push test xor addb loopne test fadd push push xor addb mov leave or pop imul xchg movsl lds mov fwait dec and fistl jnp and bound mov jno (bad) andl dec rcl das fstps adc xor dec mov mov arpl ss sahf xchg cmp mov inc or add push (bad) push xor rcrb je sub add adc addb and popf pop jmp and mov adcb dec shll out ficoml xchg pop sbb int3 and dec lods inc ret mov xadd push rolb (bad) mov inc out sbb sub nop dec lret test jnp or (bad) mov aaa sahf dec xchg xchg insb xchg fbstp shlb add mov mov jae and or adcl mov sub xor and or fnstsw adc push addb faddl mov xor (bad) out xor pop push sub sbb inc jne movsl outsl cwtl mov xorb nop aaa popa imul jb mulb cmp insl pop dec push add pop and dec cmp in nop xchg sub popf scas sbb add pushf dec sbb mov and mov push xchg mov (bad) mov adc test add xor inc xor mov xor or add push mov sub seto dec push movhps push sbb and and push xchg rorb cmp aaa push sahf ret loope sub inc xor mov sbb xchg add inc data16 insl repnz rorb shlb nop leave xorb adc sahf jmp sahf add pusha (bad) adc push fxch hlt ret inc dec test int adc faddl xor cmpb pusha inc andl pop pop push lock pop dec xchg mov popa shl adc push mov adc outsl (bad) xor pop adc cmp mov xchg pop xchg test lcall jns bound ss pop and push pusha int gs rcrb dec jmp add ss xor xor jno in add dec into test sbb dec and sbb and inc jmp sub imul into push sbb push test inc lods xorl sub jl xchg mov push nop es lret (bad) sub mov imul sub ret cmp out leave in add and cli dec test inc shll lea and add rcrb xor pusha (bad) cmp int3 and sbb inc into add and sub jecxz sub push jp mov cmp sbb icebp movsl xor cmp mov cmpsb jge (bad) cmp adc lret dec ljmp es mov sub dec js adc in fild lahf sub out pop add pop (bad) xor sbb rolb ss shll pop xor add popf test push in test dec mov push push push add jne pop adc mov jmp push add int3 xor dec sub push jl lods xor call and or xchg dec rcrl (bad) and sub dec or adc push ljmp sbb mov lea or or into push xor sub sahf inc test dec add mov mov cmc sub das dec xor push adcl and std jnp mov mov (bad) xor or daa xchg mov push movsl xor cmpsl sub call pushf inc dec and jne xor stos lods push roll insl mov shlb lret (bad) icebp dec sub test dec cli pusha pop mov lods lea xchg xchg ret gs mov xchg sbb dec xor loop sub test inc mov push jo popa call xor call leave ds call mov xchg pushf rorl fisubr adc leave xchg lret push add or sbb fsubrs cmp je fs jns or in dec out xchg pop jge int3 outsl divb test cmp add scas dec pop mov dec cmp adc or push adc test adc call mov mov loopne jmp pop pop imul add xorps dec or xorb pop add xchg cmp xor popa adc and push aaa jp sbb xor (bad) daa add movsl add mov cmp mov lods scas mov or sub mov push mov shrb or imul sbb pop sub popf and cmpsl jo sahf adc loope mov sbb xchg lods cmp push cmp andl inc adc insl (bad) in mov mov pop sub fcmove xor xor jns pop adcb or movsl add in out xchg int3 fwait out scas adc or lret hlt nop mov or das inc lock das or (bad) or pushf mov sub les adc and addl enter push pop sub mov incl xchg cmc mov loopne xor jns add jl (bad) loop push test sbb (bad) jle shll xor sbb pop add add sub imul sub test shlb push ret sub lock lcall jne xor sub lea xor fadds jns or sub rorb mov pop pop mov adcl mov mov inc jmp mov lea dec les mov mov or sbb sarb lret out aam push xor sbb adc inc pop int3 inc pusha xchg sub cmc lcall add les pop daa push aam and cwtl mov fisttp sub inc iret xchg adc mov shrb mov or stos fiadd inc mov mov mov loope cmp adc push adc daa mov pop addl mov jp xor rclb ds inc dec adc push imul (bad) xor jnp xor add test or xchg mov xor cmpsl dec mov jecxz adc add push mov popf andb inc sub dec cmp or push repz adc or (bad) xchg sub sti jecxz adc jo sub imul add mov loopne pop and dec icebp add xor dec xchg inc pop xchg push movsl lock mov shl cmpsl jbe sub rcll dec push xchg shl adcb mov xchg mov mov das rclb add sub mov mov pop pusha in test mov addb push pop daa ljmp lea push sarb inc and sub clc arpl jge and xor or rclb xchg (bad) mov adc aaa mov xor outsl pop sub fldt mov insl add jl adc add cmpl xchg dec out fmuls mov and add sbb or jae les ja inc (bad) pop mov inc xchg aaa jge add or cltd imul add mov cmpl fwait lar mov add fwait ret lcall icebp addr16 mov xor repnz sub or sub push mov inc and xor cmp or and mov inc dec enter test stos andl push cs shlb jmp andb lahf das jns sbb fild and xor sbb mov movb mov add or js and loopne dec sbb stos sub mov push pop adc mov lcall in or bound (bad) ret xchg or mov and es rorl test dec xchg movsb xor push ret repz and pop rolb (bad) aam xchg and inc sahf cmp cmp jo or sub fwait dec lcall push add sub inc pusha lods test push pop adc add cmp nop pop xchg xchg cs rclb es mov jp jae xchg lock inc js adc repz leave mov or fmul es inc popf or adc xchg pop jne std or test xor cmp push aam mov mov push mov mov add test ret xchg and xchg in sbb mov mov pop add dec and add jae push ss dec andb cmp dec and cmp push push into sbb sub int3 mov outsb sub adc pop adc xor add inc popa push inc jg xchg xor sub or lock lea int and sti outsb push lret icebp inc add inc lds leave add ret popf lcall pop jmp pushf pusha enter sbb adc xor push adc xor xor cmp lods lds leave mov add mov pop ljmp addr16 add fdivl orl cmp or mov dec lret shll xchg mov xlat jb and shrb push shll and add mov imul xor rolb enter sbb xchg gs inc daa fs sbb loope and xor scas mul fiaddl and insl pop mov andl sub aad push xor lahf clc xchg xchg lods xchg push xor inc ret pop and inc pop fist xchg and subb mov test mov lods jne cltd inc xor xor xlat je push or or sti push sub inc (bad) mov mov add cli nop sub bound push loopne or dec xor ss aas push rcrb inc test push xor scas xor mov add cmp sbb je (bad) jns out shr and test (bad) inc cmp outsb mov popa loopne xchg mov into movsb loopne iret lds push add test push xchg ja ds adc sbb stc sbb add stos inc stos movsl cmp arpl xchg adc or xor rorb mov xchg cwtl inc daa or pop add xchg adc out sbb mov sub les push push sbb in popf push sahf les aas xchg pop mov leave and sbb pop inc mov (bad) jo rcll sub dec xchg out xor sub xor call xchg dec icebp fs push add mov test flds sub mov add adc lea add adc push clc jo adc loope negl arpl push enter pusha ja cmpsb inc pop inc cmp mov xchg out cmp xor data16 mov add pop jae lock add xchg loope test mov adc lahf nop dec fdivrl add icebp and adc fild bound aaa and dec inc std jle inc xor test lods xchg lds out (bad) mov dec cmp or mov movsl mov push mov mov adc or cmp or push or jo inc adc aaa lahf sub pushf test pop pushf std hlt shrb enter inc inc mov mov xchg sbb mov xlat pop sbb sbb loope mov aad adc xchg add and cwtl xor repz xor jne mov xchg inc jg xchg xchg shll pop arpl mov dec add psllq pop mov push cmc sub imul sbb out inc jecxz and sub int fisubl jle xor aaa push pop test dec sbb dec mov mov pop fwait sbb lods sahf push mov imul out enter or adc repz dec cmp mov outsl push sub cmp test fadd cmpsb pusha or or mov sbb mov adc sub repnz insl push or leave es jp add fmuls and test pusha or and jo lock dec add rol test xor and (bad) push les sarb arpl sbb mov add dec cmp or sbb and and inc mov (bad) cmp inc mov popa push nop lods (bad) lods push push repnz add stos lahf push sub mov out add dec jbe jge test xchg cmp or pushf insb insb or xchg inc loope push sarl ss adc inc mov sti xor sbb sbb mov xor mov inc inc adc jo adc call or sub arpl lcall mov outsl loop and adcb jns aad in pop addr16 dec or xor dec test rorl adc orb adc cmp (bad) stos inc xor (bad) and mov pushf pop ret and push add sbb pop mov aam addb (bad) ret xor and or rcrl cmp mov xchg movsb pop rclb push fmulp lods imul cmpsb insl dec pop mov or lock xor stos sub mov popa jge or mov fbld cwtl cmpsl out or es lods xor lods jno adc and insl inc nop mov pusha loopne cmp leave addr16 cmp or pop xchg xchg and jne sub inc mov insl mov xor call pop pop cmpsb jnp push xor rol pop jmp push pusha xor mov cmp (bad) xor xchg push push les adc dec pop or cmp push mov pusha mov daa test xchg shrb and ds enter push js vmwrite fiadd fiadd lcall pop rcr daa pop mov push xor add dec pop loopne mov dec aam sahf (bad) xor pushf xchg xchg push fist cld add insl cmp into lahf ljmp sbb lods xchg outsb mov (bad) cmp test push cs rol dec fstps les xor fldcw and (bad) mov mov cs xor out cltd xor cmp lcall nop push adc std xor dec push or loope xor or add mov inc sub pop lods daa mov subb sbb repz call lods xor push and js (bad) sbb les scas push add sub jp add inc xchg adc push or (bad) or sub leave and add mov mov jnp mov (bad) dec dec cwtl or dec sbb ja lods subl sbb xor stos cmp (bad) aam imul fidivrl es inc xchg ds xchg (bad) jne mov std bound push pusha add xor add fsubrs mov (bad) dec sbb and test popa xchg mov inc push imul insl fstps mov movb sbb int3 cs inc mov or mov push cmp lcall mov into add or pusha cs arpl test inc xor pop inc inc mov (bad) push js roll gs sahf insb and inc mov jp xchg sbb mov mov (bad) ss shlb mov lock cld inc les mov add rorl lds popa lea push push movsl sbb add sub fcomps shufps push xchg imul pop cmp cmp inc inc xchg and push aas flds pusha enter mov mov pushf mov add or inc or or xor adcl or sarb xchg adcl push push mov dec pop xlat push mov and pop movsb push leave test adcb ret or fsubrp test xor cmp shrb or pusha pusha ret jns test ret push xchg inc xor gs and test mov ds (bad) sub roll stos xchg test (bad) jmp adcl xor pusha sub dec mov add in cmpsb test jmp sbb cmpb pusha adc dec mov outsl inc add and lea mov fisttpll sub mov sbb and mov mov mov mov fwait insl push mov imul ss stos loope push push and ss test inc fild adc push sbb add jae dec mov and jmp pop push mov add in rol sub xlat (bad) sahf or aaa xchg jge les push and add push das jae mov lods sub xor sub sbb lea push mov iret xor xchg push arpl and jl loope adc jbe dec aaa inc test js js dec cmp add lods and mov push xchg xchg incb aam sbb ret push mov add das xchg sahf inc test xor in (bad) js lea fmull test inc mov adcb (bad) repz outsb and jne mov adc mov and leave inc test push mov dec push gs mov mov dec ret arpl ret jae adc xchg push cmp loope pop mov xor mov xor daa sub sbb outsl (bad) sub jns das sub xor add inc popa sub mov inc xor aad inc xchg test test outsl pop cmp add xor mov lods inc adc push (bad) lods and (bad) mov xor push pusha ljmp mov pop sbb add adc mov inc pop test xor and cmpsb pop xor dec (bad) xchg mov dec shrb or add xchg and jno jge lea adc jp fcmovnbe push xchg pop lods rcl pop cmp xchg pushf adc cltd dec dec mov imul push dec and sbb rorb mov xchg jge xchg in enter fstl jmp test jp aad push ljmp sbb in test outsb leave fistpl adc and inc dec add inc cmp xor pop fdivrs nop movsb mov and popa add inc movsb adc adc and push (bad) mov stc cmp aam xor mov xor mov rcrb or pop mov push pop (bad) xchg and lahf aam jecxz (bad) movsl xor jo push mov (bad) cli and fldl sub pop mov sarb add xor call lret leave cwtl inc outsl adc stc test or inc aaa sub pop and pop mov adc and scas add test dec mov dec sub xor bound pop adc cmpsb or in and insb sbb stos stos in mov fsubrs mov mov lds push cmpb mov sbb insl sub adc xor mov add inc or xchg sub aaa ds nop outsl adc daa dec mov mov mov cmc inc adc and xlat xchg inc pop pop popa adcl insb push cmp inc inc sbb push jmp insb dec xor add movsb (bad) xor ljmp or fs or leave faddp cs xchg imul mov lods xor inc and adc int3 and sbb fwait cmp cmpsb push jecxz push inc push cbtw inc and push fisttp ss pop pop add sbb inc mov fwait and pop fidivl inc sbb cmc out js xchg pop or add (bad) xor mov fwait add and and mov xchg popa inc xchg mov mov or push mov or pushf (bad) push ss fistpll loopne xchg mov aad xchg cmp mov sub cmp xchg mov sbb into jp pusha dec out xor pop mov dec pop add push add shrl and cmp xor pusha insl adc xlat push mov add mov add nop xchg pop pop andb mov sub pop push (bad) cmp lods rolb ret adc mov sbb iret sub add mov test sarb inc mov bound cmp fiaddl dec in repnz add mov push cmp mov cmp add xlat pop data16 ret jle std mov dec test inc jecxz fbld adc and nop popa iret leave cmp aam or int3 insl rcrb cmp and mov fbld lcall arpl mov cmp out js mov xor lret xor add lods cmpsl dec mov stos inc and (bad) or or fs mov cld inc (bad) xchg add xchg rcrb mov pop loope and (bad) mov imul scas adc pop pushf dec mov or test jns sbb (bad) xor pop test or lcall or (bad) adcl xchg sub inc mov sub test push mov or adc pop jl andb and xchg rclb pop jl incb fwait mov sub jmp xchg xorl loopne and pop rorl pop xor arpl roll test stos bound add test pop push sbb mov in (bad) push jno sub and dec orb sub add sub mov fildl inc mov xor mov mov movsb adc sub pop sbb fcoms inc sub fcoml imul xor add int pop push leave cli and sub push movsl push pop lret sbb mov fs adc adc xor lret pushf mov and xlat and cmc push (bad) adc dec (bad) icebp or pop aad adc int3 push or (bad) rolb mov (bad) fbstp mov fwait add (bad) mov push mov or or or push insb jecxz pop mov add cltd push in inc xchg outsb ror in or add cltd xor mov jne or arpl nop pusha add inc test fadds mov mov rorb inc fsubs add daa inc lret imul (bad) or data16 popa pusha xor movsl dec inc push mov or test jge and push pop inc outsl sub xor sahf pusha dec cmpsl jmp lods jno dec cmpsb xor pusha pop (bad) xor push call xchg or insl add mov lea adc mov jle mov xchg add (bad) fidivl hlt add loope inc call mov das jmp test mul or push and add xlat add (bad) xor mov xchg test adc mov lods adc or xchg andb xor adc in rorl daa add (bad) or or sbb jge lret adc mov add pop cmp xor arpl xor mov rclb add addl dec inc add xor add insb add add movsl and or add jecxz and pop fadds test or mov dec jns mov (bad) jno movb in inc mov movsb in pop stos iret sbbl xor fist mov add cli roll and xchg lea mov adc mov sub dec sbb dec ss mov pop shr and mov fcmovne inc mov xchg dec cmp xchg popa xchg lret and jns xchg lea sub movb ss movsb sub or cli adc lock cmp pop add out ret incb inc jmp mov and fwait imul ret add inc fisttpll test outsb addl and mov (bad) add push sub pusha fcoml lea or inc rolb add loopne scas adc xor or push lds out lea out sbb mov mov imul lea sti add dec add pop orb dec mov mov xor push inc inc xchg or push sahf add bsf pop negb mov push andb cmc js shlb mov pushf popa sbb or test imul inc mov cmp das adc popf ret sub mov xchg xchg pusha add in ret rol pop fdivl test (bad) add and adc lahf xchg in dec mov mov or jmp mov daa or add push or test inc sbb insl sub push xchg add add ss xor xor pusha test je (bad) jne mov mov inc es stos imul sbb pusha jno fmull or xchg ss or pusha std rcrb xor add xor adc scas jmp xor sarb or or fidivrl lcall fisttpll and adc xlat mov bound lea inc mov pop pop aad hlt and div or gs lods fwait pop xchg test cmp stos xor nop push push inc cmc adc rolb insl push or jo lock gs lds int pop mov ret dec aad loope imul test mov push arpl jo dec adc xor xchg add add sub rorb push sbb movb frstor mov arpl cmc xorl ret jne loope in sub sub dec stc xor test jl dec cmpsl adc and test xor xorb xchg dec cmp gs push mov inc push fsubs inc enter fbstp in aas adc fimull int3 cltd rorb dec and or and mov jo cs push and pop ss mov or add es push test imul pop xor iret pop pop wrmsr mov aad add xchg cmpsl pusha push xor rorb pop scas push push mov dec cmpsb cmpl inc pop pusha adc inc fwait sub xchg and and ret cmpb add xchg (bad) or outsl push fs jecxz pop dec or arpl mov dec push xor inc jp iret xchg jp test lds stos pop lods jmp or push pop xor loopne and mov movsl add push inc pop arpl lods leave movsb and or jbe inc call push or dec movsb dec jbe in fcomps push sbb popa pop mov addr16 xlat fmuls xor add lahf push pop xor movsl push out sbb (bad) push loop cmp mov inc ret (bad) movsb fs xor pop xor es cmp loopne sub xchg xor or mov andl je add adc add push and cmp lret stos icebp push inc pop or fisubrl push sbb fprem dec pusha dec js mov fdivrp dec sub popa cmpl pop sub repz mov xor test lods adc jo xchg pop test addb jbe addl xor insl pushf aaa mov mov cmp or (bad) rorl movsb enter cmp fist or in or push rcrb or jmp adc or adc iret adc fs pop sbb jp iret loopne test xor mov adc inc cmp cmp cmpl push gs in xchg inc sbb cmpsb mov sbb pop dec ret popa and test add add mov pop xor rorb andl cmp pop into and adc xorl adc push pushl sub movsl pop mov sbb popa sub push (bad) xchg cli arpl push xor lods or lods and mov inc in or sub wbinvd xor fsubl mov (bad) fdivl inc inc push jno out sub cmpl jb imul pop andl ret or mov shll int3 std jo add lock mov lea inc les enter aaa pusha mov and or pop lahf fwait xor pusha shll scas rclb and out (bad) adc dec enter xor pop dec adc fs push xor adc mov mov add inc sub lock lcall pop and mov das jmp pop in data16 out aam ja sub sub xor inc aaa sub xor (bad) mov (bad) mov or cltd cmp and ss sysexit add cmp inc adc adc test (bad) mov fadd push adc add popw cmp mov and cmc (bad) sub adc adc mov mov pop leave push out dec dec pop inc cmp push xlat dec mov xor aad adc addr16 add jo jns loopne mov decb inc and daa sbb dec jnp movsb je (bad) xor mov test pop cmp pop xchg sbb or cwtl in xchg xor xor xchg ja inc lea xchg pop push roll adc fs mov xchg push xchg les jmp es (bad) out es (bad) sub push mov sub sub addb shll pusha dec and sub dec adc pop mov cmp add orl test sbb ret insl out pushf xor push adc pop dec inc push jnp loope pop jno lods push push icebp or jb xor aam and es lret adc xor add inc add loop mov fldl push rclb push movsl add mov xchg or enter mov int3 add jne add dec mov bound inc fmul pop pop mov leave sbb xorl xor inc or pop add sub outsl or push jno ret inc je je xor xor xchg pusha or or inc sbb (bad) mov mov or push inc test xor or rorl (bad) popa (bad) test push ret and mov mov add loope mov and ds dec fldcw jmp mov jbe cwtl add add jl lds movsl lods insl jo xchg mov addl pop sub gs sbb push mov pop pop and xor push xor scas ficom outsl mov lea mov loop ret rol push add mov or fildl (bad) stos inc and xlat mov and test or add jg cmpsl sub insl and jmp les test notl xor inc sbb push add mov movsl lods cmp xchg outsl xor pop or cmp mov call int push fsubs enter js mov lds gs sbb (bad) xchg push pop or xchg add inc jmp stc pop or ret push adc add movsb adc push mov xor sub icebp cmpsl xor mov cmpb jmp push jmp sub dec xor scas ret sub nop and (bad) mov or dec pop push lods cmp xchg pop ljmp inc mov adc and popf adc xor add in or outsl mov lahf pop or or popa pop mov aad test dec inc jno or icebp fisttpl lds loop jbe adc stos and add pop fcoml cmp push jmp lret or and roll jae push sbb pusha ljmp sbb pusha int popf or fs setbe pop pushf pop popa enter inc sbb test sub add loopne push pop mov mov dec ds inc xchg dec mov inc cmpsl xor aaa jno inc rorb lea leave cs lods dec addr16 jmp popf xchg xor fdivs pop pusha xor out inc add inc inc sub jae xor cmpsb outsb sbb test test pop adc rclb inc cwtl clc sub lods shll add pop push aam pop adc ret inc cmp fcmovnb in fstps jb xchg mov inc adc icebp dec subl xor out lods jnp dec pop dec cmp mov das adc add lea pop dec inc loopne push sarl xor dec add inc xor loope xor lret jp add sbb test xchg popa inc shr je inc jecxz push mov add outsb push dec (bad) adc xor xchg mov (bad) and cmp gs ficom les mov xor loop or and add dec add nop and xor lods dec mov push push cmp loopne sbb push es cmc mov xor pop xor cmp shr mov xorb enter loope call fs xor enter mov pop inc push mov add mov mov dec inc dec or mov pop loope cwtl push and psrld insb push clc shrl rcll orl mov xchg mov xor adc rsqrtps jmp pop mov inc mov jae orl sbb mov mov cwtl adc xchg pop pop mov mov add xchg add adc jp les mov and add mov push push sub into cmp xchg mov add test loopne cmp or pop inc cmp dec ret sbb sarb xchg cmp cli xchg and xlat cmp sbb and mov xchg adc out inc push jp rcl inc xor adc test rolb mov pop (bad) mov xor popa adc mov ss lea inc xorb outsl and and inc loopne add or cmp or cmp in sbb add mov xlat add inc push enter pop data16 cmp lea pop add in or push inc and cmp popa dec jmp (bad) into sub add mov sub lods popa (bad) xor jmp movsb nop hlt mov sub ss and add ret popa sub sbb movsb or push fwait rorb add xchg outsb push mov pop out sub imul imul cmpb lret test inc cmpsl loopne insb pop fsubrp xchg fstps mov enter add and inc cmpsb cltd rcr mov sbb lahf cmp adc adc and xor mov or xchg dec or lret nop loope sbb xor sbb push (bad) test adc or fisub inc dec inc imul jns ficompl mov lret sbb pop add sub movb pusha jno mov aam add adc pop sub mov mov add iret test mov into push mov inc daa inc (bad) fdivrl cmp ja and dec es sub ret jnp dec enter jne add sahf mov xchg movsl or sub add mov xor mov or push leave insl int3 imul mov (bad) arpl mov push add fsubl cwtl pop sbb call mov push and mov sbb pop int inc test xchg sbb mov movsl adc cld (bad) xchg dec test cwtl xchg dec fsubl push mov xor add shr cmp jmp cltd xchg test (bad) and pop sub mov adc xor xor mov mov add (bad) sbb pop jl push lods fnsave xchg (bad) add push lods lods rorb movsb (bad) dec sbb rcll stos dec add lock cwtl mov mov test jnp das cwtl cmp dec imul dec xchg mov pop inc pop push xchg stc je jno mov and push dec pop mov cmp popa add int3 pop in sahf sbb rcr push in mov movsb jno das pop movsb add dec sbb in xchg add or and lods gs (bad) cmc ret or movsb cmp push adc inc or lret lcall or and sbb dec pop push dec je mov inc add inc pop out dec push sbb aad jnp dec pop (bad) adc (bad) and out hlt push mov xor xchg aaa xchg mov sub mov mov (bad) out fmull ss mov xchg dec pushf cmp pushf add add je push mov mov rcrb and imul push sbb imul mov out mov inc mov imul or rdmsr push add test (bad) rclb icebp pop dec je push dec int pop add aaa adc cmp aas xor xor pop push out hlt add push jl popa lods xchg jle sbbl inc adc shrl xor inc xchg jmp rolb dec xchg (bad) dec iret add dec cmp inc xchg adc and lods jns xchg add xchg add mov or jne shrb and incb pusha push rol inc dec and dec out push test xchg (bad) insl stos jb add dec imul aaa adc inc adc mov jae loopne inc adc stc push add in mov and dec nop cmp add jl popa andb repnz xchg pop shrb into xchg loope sbbb mov adc jo xchg ret or insb sbb xor test andl and test lcall jge nop mov add jmp inc popa sub lock mov xchg cmp jb mov pop retw cltd add into dec jg inc sub pop sti inc iret mov push shrb sbb sti fadds xor cmp xchg adc sahf xor or cmpl sub adc cmp push inc aas nop aam sbb (bad) xor je jg adc aam mov add test xor jno xorb inc sahf loope pop xor dec xchg add roll jmp add adcb mov mov sub or ds sar xchg or pop mov xor ret add push add xchg or movsb (bad) adc jp les pusha mov sbb add popf rorl cmp or push xor es dec outsl cmp sbb negl addb sahf (bad) mov xor adc add push mulb sub popf pusha mov lock adc addb xchg or add and repnz push scas sub xor add cmp cmpb inc mov xchg das and dec inc aaa push dec leave or mov mov and lods fadds adc (bad) xor mov int iret pop push test mov pop jo push pusha sub rcll adcl pop mov inc (bad) test mov inc test pop out lret or test inc adcb addr16 add and push push es cli jge dec mov mov mov inc dec sbb cmp mov pop xchg sub call fwait es rol adc mov stc test fistpl push mov enter adc xchg mov sub icebp cltd arpl pop insl jno aad inc mov xor cmp mov push call pusha inc lods andl add push imul jne add add mov mov ja adc cmpsb push repz jp and mov inc xor mov sbb pop arpl imul sub nop test dec ret pushf addl fcomps imul inc adc push rorb xlat mov cmc cmp and xor (bad) xor pushf pusha sub push mov in dec or rclb fs arpl or mov movsb daa sub push add mov test push or mov rolb popa test jo jge and and shll (bad) xor or adc mov mov movsl sub add bound sub and sbb (bad) sarb jl xchg adc (bad) xchg pop call sub mov xchg rorb adc clc cld pop ret sub sbb pushf out popa or add fs or (bad) inc jns out adc and inc rcrb clc push mov mov xchg or sbb inc sbb sub (bad) lea push mov and jp aaa popa js loope les or mov xchg imul aas or cvttps2pi lcall jmp mov push mov sbb cmp and or push pop fiaddl mov sbb cs fdivrs subl push popa sbb mov mov stc pop fnstcw add or cmp pusha sub leave mov xchg loopne sbb mov push sti or inc add rcll mov xchg lret add add (bad) loope orb mov xor pop sbb adc shrb mov inc sub pop jmp xchg add or pop pop and mov sub sbb sbb sbb gs leave mov dec or cmp pop pusha and adc add mov cmp test add and movsl inc jp iret add jecxz arpl push test insl jge add roll sbb and and test mov imul popa adc add jns stos push and aaa cmp or or lcall cmp adc adc cmp nop mov adc mov inc pop xchg sarl adcl xchg push imulb sbb xchg out sub inc call (bad) mov mov pop mov pop mov xor ret sub test fistpl inc cmp inc lahf sbb mov inc pop sbb mov mov in cmp pop cli mov and adc cmp adc or jbe xchg lea xor sbb sub stos jmp insb sub mov and hlt mov int or add xor loope adc cwtl pusha jne pop adc mov (bad) repz lret add mov rcr dec push rorl ljmp pop fs std imul inc mov sar icebp xor orl daa inc push and mov andb cmp mov stos mov or add out mov dec mov inc mov fcmovb test xor adcb sub and sbb inc xchg int cs shrb push or xlat pop xchg or adc test inc test sub clc and cmp sbb cmc ret js fildl adc js jnp push sub add rorb dec and enter adc sub push popa mov ds and imul rorl and xor adc sbb roll cmp pop add sbb xchg or xor and mov popa adc test aam imul cmp pop cld xchg sbb sub lock xchg cmp test arpl lea nop fwait xchg aaa or in sbb jmp pop sub insl lea mov lods sbb je jnp sub mov popa les not fstps inc or xor fdivrp add mov je jne add adc push inc jmp pop daa loopne push (bad) movsb inc cmpb xor addl sti mov test or cmp inc enter inc (bad) add push jns inc subb aad xor cmp xchg int sbb cmp cmp or or jmp insb xor xor adc cltd arpl xor repz xchg sbb (bad) adc or jo (bad) (bad) adcb jne and add in xor or jno push or pop cmp arpl jge test inc pusha adc imul adc js mov lds mov loope popf ds lcall gs rclb nop cmp test dec jns and fwait pop or ret pop push pmullw lds adc lock mov add (bad) hlt push (bad) aam (bad) xor adc sbb lods xchg ret (bad) add push cmp and xor or mov sar xor add mov inc cwtl or jp out sbbb mov and cmp jmp sub fisubl jmp ds adc mov or cmpsl shlb out fldcw arpl (bad) push lock xor xor int sub dec adcb aas xor inc sbb test adc and push pop and inc jge inc dec push mov push nop inc out test push ss xlat and pop mov cwtl or cwtl pop arpl outsb ret xchg sbb in cwtl dec ljmp push or mov cmp daa adc adc insl and stos imul rorl outsb xchg in mov mov inc roll push enter dec sbb add sbb ret jp pop les loope cmc add pop sbb pop sbb dec push imul rolb xor cmp in cmp mov pusha lret jnp add cmp push or stos subl add add aam pop add push mov mov xchg mov push adc or pushf add mov add mulps add popf push push xchg mov mov cmp jmp xor adc in xchg xchg movsl test (bad) xrelease add xlat addb out xor xchg addr16 icebp inc or daa or add sub and lock cli push lods push aas push xor dec or xor arpl sti xor daa xchg sbb push movsb pop xchg jno mov mov mov mov and in jmp jnp xchg nop xchg fbld xor (bad) lret (bad) jb sub xor inc jecxz nop in xchg inc or aas mov ds inc jo or ss sbb push xchg mov push jno push mov add push or cmc cmpl xorl (bad) dec and jne icebp mov (bad) pop mov loopne and lock mov int3 call cwtl adc ret andl xor test pop mov icebp jb pop or mov fisubrl bound orb test xor je popa xchg jno pop xorl (bad) dec ret inc sub gs mov sahf inc das roll push push lret adc mov movsl inc pop sub inc outsb enter mov dec divb nop mov or and lret sub cmp jge or or arpl test sub nop push leave (bad) cmp (bad) xor or xor sub outsb (bad) (bad) add mov inc xorb (bad) jmp and dec imul push fwait add pop dec add sub js jbe sar mov bound add dec cmp test fs mov daa xor loope sbb jge ror pop or ret or test ja xchg dec adc movsb ret dec mov enter mov add mov bound sbb jp inc pop sub cmp fimul xor imul inc vmwrite and ret repz xor fs sub sbb (bad) cmp and add push jge adc outsb pop xlat xchg pop mov jge popa push and jecxz jo ret and mov mov xchg cmp jp pop std mov pushf inc mov es mov addr16 sub adc push jo inc dec (bad) nop jne loopew nop sbb push in loop pop aaa cmp xchg jno pop mov mov and dec xchg jb sbb dec ret cmc gs movsl nop outsb or ss pop and loopne imul xor push daa lret xor push sbb jbe ret movsl mov add jno in mov js mov fsubl pop in xor adc push xchg rcll mov sub and adc adc add push test jp sub imul and mov inc and mov outsl loopne ja leave push add cmpl push loop push (bad) adc push or das fwait rclb test repnz xor (bad) sub aaa push push pop or in lea mov mov and jp mov pop sub sub int sahf or and imul sub xchg jne and adc pop and (bad) mov xchg xor xchg and jnp popa movsb dec sbb xchg inc xor xor add cmp xchg addr16 adc pop nop adc rol xchg cmpsl mov dec test inc xchg inc ljmp xchg in lods test mov cmp leave fstps sub pop and loopne and pop mov or incl mov push loop sbb nop mov mov fsub sub aas cmpsl xor push xchg jo jo mov or push subl jmp shlb or loop jnp cmp xchg inc mov sarb cmp jg dec mov sbb and push dec adc push dec xor xchg push sub xor jno adcl xor lcall add adc sub sbb dec pop lods ret test rolb xor push and add loop cs adc sbb outsb add popa sub fadds push sub jp mov imul pop nop mov push jnp loop fild dec das imul inc neg mov es inc pop inc loope fiaddl andb mov movsb lds lcall repz test (bad) in push xchg xor adc or adc dec push test add xchg or xor or push mov sbb xchg in fcoms pop xchg ds ss xor test rol rol xor sbb mov ret mov in cmp repnz movsl ss popa mov leave outsl add lods push addl inc popa sbb add mov push jo add sub in rclb mov enter pop jnp test pop fsubs je inc xor xchg sub mov jbe out xor or push subl add test or pusha and insl add cmp outsb xor mov xchg push les push js imul mov aad test adc jecxz push mov call popa lods aam fiaddl dec inc dec inc xor das rolb jbe outsb arpl mov jne arpl ss add lds shl push mov sbb dec (bad) adc sbb je ss and dec add ret ret pusha (bad) adc pusha adc andl inc arpl push inc cmp subl mov adc cmp aam adc inc inc outsl lea test push cmp cmp and push aaa dec sarb (bad) xor nop dec leave sub mov push pop lea adc and movsl daa int3 lcall loopne and mov xor cmp inc (bad) dec add adcl add dec or jl xor xor js xor inc push jns mov pop pop adc adc mov sahf es aad or ret add fisubr ret (bad) mov jmp cmp dec daa mov and int test insl mov in call dec arpl push sti sarb loop pusha xor jl ret or pusha sub mov or nop xor cltd xor pop fisttp lret (bad) (bad) insl std inc dec add lds sqrtps sbb and lret jecxz xor dec push pop push inc adc ljmp (bad) xor add xchg lock sub int push shlb or xchg fs add mov int pop add inc and test fidivl scas mov (bad) lods lea and stos lods pop mov lea add pop data16 (bad) xchg add cltd dec lds mov mov push outsb cmp push pop mov mov mov (bad) jb shl adc popa inc inc rol addl and add je dec pop add inc xor inc mov pop ds add dec rcl sbb adc sar xor adc mov sbb or out pusha push arpl (bad) mov insl lds pop shr cmp insb je ljmp cmp mov add (bad) and jne (bad) xor mov cmp push and xor (bad) dec mov jecxz or dec xchg fsubs push inc or inc mov xor ds sahf inc or lods mov jmp dec mov xchg xor inc add sbb adc xor mov lret and mov adc gs mov inc adc das push ss (bad) mov adc pop inc xchg mov pusha sahf adc movsb push int adc or fwait out in dec xchg push pop push rclb push inc lds adc and bound or mov (bad) and xchg mov sbb aaa add xor icebp sub subb pop ret or xchg mov cltd mov lock xchg mov mov cmp sub test adc sub lahf add add dec pop movsb cltd les mov xor ret lahf xchg imul jge xor sti dec repnz sbb fcmovbe cmp add test sub add push std push stos add ret pusha aam add test lea or add inc mov inc or and sub sbbl adc pop lods pop das call loope js and inc xlat shl mov and and sbb cmp inc adc rep pusha or popa ja pop (bad) mov pusha test roll adc enter insl pop pop jae xchg stos test dec in inc or gs xchg addb dec in mov add xchg lods outsb roll pusha test pop mov lods sub inc dec xor mov inc lret inc sub into dec stos and sbb xor or gs and adc test add pop adc das (bad) int mov out dec sub push sub flds dec stos pushf sub add or popf popf or and xchg xor insb or rclb (bad) jp push mov pusha dec mov dec jmp cmp pop and (bad) push cmpsb test and xchg aas cmpsb shlb movsb fisttp (bad) push lock add popa shl xor into xchg scas scas call std insl or (bad) aaa jo dec scas das xor xor stos rcl add scas or (bad) push dec inc stos insl loop adc jno push adc sti movsl cmp jae fs xor mov movsb xchg test add or sub mov shlb shlb popl sbb xor or push xchg nop out and push mov xor adc andb dec shr inc pop xor mov mov xchg movsl cmp lods pop (bad) xor leave daa and add pop push add mov push ret dec bound sub xor adc add push xor add sub je mov sahf adc or mov xor pop lret outsb aas lods sub jecxz xor inc (bad) xor add sub adc in sbb add mov pop jmp mov add nop mov sub mov xchg lea in test mov cmp push inc pop push fdivs jo inc add imul pop or inc and cmp pop lods popa xchg xor fsubs mov mov sbb mov int3 mov pop xor adc sbb sti movsl cs mov xchg pop inc jo adc (bad) dec mov mov call cs jb sbbl aad cmp xchg nop fwait mov xchg nop fisubl cwtl mov cmp push imul adc push sbb in xor mov outsb insb jl sbb or (bad) or icebp cmpsl mov aad cmp adc cmp (bad) sub jl and inc std sub lods adc movsb pop or adc ret sarb clc xor rolb sub mov adc clc xchg (bad) mov mov movsb or and shrl lret adc cmp lods adc jmp mov mov mov xchg popa js and ret pusha add das aas shlb and mov jnp sub fwait dec adc push xchg cmp ret icebp movsb mov js add test popa and mov incl xchg push xchg add fs icebp nop xchg pop dec mov inc jno aaa add push aas mov sub adcl icebp shlb mov lcall imul xor fdivs adc imul xchg push xchg and xor sbb dec leave jo icebp inc test adc inc cmp inc sbb xor fs sub xor sbb lods lret pop sbb mov sbb pusha and jmp loopne pop cmp out cmp rorb in lret outsb fldcw jge fildl dec rorl cmp int3 lcall and btc dec mov sbb or push outsl and xor inc (bad) stc push push cmp arpl lods dec add enter lods xchg lods rorl add inc nop sub xchg sbb jmp andb mov xlat pusha push pop add push cmp in xor sub ret lcall add mov sub adc and push roll das push cmp bound stos or sbb popa dec inc sbb adc push lds leave push aam fldt rorb add cmc mov push (bad) push adcl lods push mov (bad) imul xchg rclb cmp and adc xchg push inc ljmp bound xchg dec loop xor lds in jecxz jo pop pop and xchg test shr mov fsts sub adc mov xor mov or lea or add jns and adc and cmp dec xchg xor sub dec and pop xchg xor insb push add iret rclb push xchg cwtl and test or xor mov into xor jb and and push pop dec movsb cmp aas ret out (bad) xchg repz ret and sbbl adc inc lret in push dec in add inc mov inc mov daa inc push push inc and sub loop push (bad) clc add and sbb sub pop xchg mov push pop aaa pop adc hlt sub test push lcall dec loopne lret adc dec ss aaa inc xchg aaa mov adc int ret je add repz arpl add rclb sahf pop and outsl sub bound pop mov ret mov add pop xor and arpl mov push inc inc addb adc sbb sbb pop dec mov sub cmp inc adc cmpsb fwait sbb cwtl xchg add test test mov pop push pop add lods in mov dec adcb pop imul push and aas js jp fstpl int cmpsb or xor xchg shl dec sbb popf or inc mov aad xchg pusha loope fiadd ss dec xor fnstsw cmp (bad) pop jmp or aaa pop push push mov push add scas inc leave add dec nop cmp addb xchg add add add cmpsl lock lock xor cmp test lods inc orl pop dec or dec frstor xor mov mov sub mov push (bad) xor xchg addb cltd inc cmpsl sub jmp test jmp roll mov sub xchg rolb cmp pop mov subb add mov adc mov sbb imul add cmp add (bad) stc fwait mov insb bound fsubs dec mov adc loope cmpsb shll xchg xchg xor ret inc lret or aas jo call addl rclb pop inc lret ret fildl or popf or psubusb imul or adc xchg orl sbb sbb pusha rolb adcb xor lahf xor adc pop imul sarl fbstp sub push (bad) xchg or flds sbb mov mov or xor xorl pop or cs sbb xor int inc enter jl rclb jnp push push arpl cli push shrl sbb xor addl ficomp test mov pop loope pop sahf loopne inc dec jnp push mov xor outsl sbb dec scas popa xor insb je into mov xor daa xlat lcall dec cmp push fcompl xor add roll mov xor mov pop inc adc adc sarb dec das sbb test add add test iret xor add rorl mov push xchg bound pop mov mov ret add mov shl rorb sub add aad js sub mov jbe pop push or dec sbb loope dec xor lcallw sub cmp jae sbb orl push shrb scas pushf adc mov pop xchg mov cmp addb test push push xor hlt daa xor cmp mulb test lods xor lods insl arpl dec and jnp orb dec pop or pop xor dec sbb iret push lcall xor inc fmuls pop push mov push sub add iret add lret push add imul mov in inc and xchg xchg jb movsb inc push or xor inc xor mov xorb ret ja mov mov pusha add adcb bound inc mov xor pop int push cli xchg orl mov sbb add cwtl dec addl xchg cmp and (bad) sub leave inc push jo popa in stos ret mov dec pusha into xor mov or add sbb xor repnz lods lds gs or and mov fiaddl dec adc lret ret mov mov jmp inc subl xchg push push and aas sub ljmp add jae xor mov inc mov shll movl lds es icebp xor sbb sbb xor shrl jae dec xchg je inc lahf sbb cmp in pop sub or and and aam in call or xor sbb loope test mov popa lea loope sbb lahf and fdivl jl sbb and jae and dec or adc jno or sbb dec repnz dec (bad) pop adc push mov cmpsb loopne imul (bad) ds push mov add daa movsb add fs xor insl dec dec outsl add clc sub add xorl xor sbb lds daa shll xor arpl cmpsl aaa hlt insl add cli add js xchg sbb jp mov gs and add mov jp lea inc daa add sbb and sub push fcom mov pop cmp popa enter add xchg fstl das or adc test js mov out nop lods arpl and lods or jmp out (bad) mov jge jne mov lret adc cmpsb nop fldln2 stos or gs rcll or pusha inc ss insb mov add sub aas ds loope mov bound jb jne popf sbb cs aaa insl push push sbb mov xor push xchg or sbb (bad) sbb push add adc enter xor mov adc mov lods das daa add add xor test xor jge add inc loopne pushf lret xor fs orl aaa lret sub (bad) and (bad) scas pop push ss cmpsb mov outsl lods dec aam push mov jmp inc mov inc sbb insl adc push or mov or xor popa and mov (bad) dec inc mov in push cmp adc (bad) (bad) xor xor repnz add push dec leave inc add add movsb and add jo xchg fbld pusha and add adc (bad) rol sbb dec sub test test jp or xlat and xor jne add scas loop inc pushf adc xor addl and inc xor (bad) and xchg xor add mov ljmp cmp sub inc jne or imul add cmp in std dec imul or mov xor xchg xchg rclb cmp jl cmpsl cwtl pop adc sti push push mov aas scas mov inc push adc or insb shll inc add add and rorl inc cltd xchg popa sub add sarb push test cmp xor movsl into das scas movsl (bad) add xchg sbbl roll pop add or adc outsb es shlb mov cmp in jnp rcll mov add fidivl sub mov shll jo fwait js xchg stos mov add and and dec rcrb xor push insb inc rorl add inc jmp add insb andb and xchg and (bad) imul adc lahf ds std xor test gs xchg mov jl (bad) fcomps push imul loope and cmc xchg push add cmpsb scas shlb shrb loop lea adc int inc inc jl les push sub (bad) mov xlat aam ret jns rcll and addr16 (bad) sub insb cmpsb fnstenv popl subb rcll push bound inc enter mov push add rolb repnz mov sub and fsts rolb jno xor test xchg mov xchg or lea inc mov bound or sbbl xor data16 ret cmp test and sbb jns fiadd adc or push inc out or inc xchg and dec leave pushf push sahf and xchg mov xchg int3 test sub push dec rcl xor or xchg lea or stc enter cmpsl cwtl mov cmp mov insb dec mov test sub xchg js dec sub popa cmp lds mov add add test or imul data16 das mov ret and rorl jmp mov daa cmp inc push loope loopne push and adc pop mov sti test jge ret xor dec ret out insb sub mov icebp dec sbb mov mov xchg inc dec js cli fnstsw adc int3 sbb xchg movl dec or jecxz and nop mov pusha lea imul push (bad) jp cltd push ret pop sbb arpl movsb xchg (bad) cmp push popa or inc or pusha (bad) mov call sbb push dec cmp add test jg add xchg adc or add and add sti xor paddsb and imul dec push adc jno xlat xor cmp adc ds and xchg push push pop xchg mov mov pop mov add hlt dec stc jno push dec dec iret and repnz cmp call pusha pusha fcomps xchg push outsb pop and gs dec mov pop dec add jne mov roll sub and test insl dec cmpsl push adc movsl fwait and sbb test inc fsubs test xchg les mov adc add in loope inc pop adc add cbtw dec xor mov sub gs xchg jo cmpl test and xor addl test xor les fwait fwait (bad) xor xchg cmpsb xor roll sub or push rcl add dec pop imul ret mov popa jno fsubl or ret pop (bad) bswap les aad sub outsl pop fstps (bad) loop int and sbb sub test insb or rorl aaa pop and test test rcrb inc jecxz mov adc stos jge (bad) xchg sbb (bad) or or or or or lret aaa xchg pop and add ret pop pushf aad mov or sbb push jno arpl lods lds push and test (bad) mov imul int3 xor shlb daa xor cmp sub jle sbb roll mov stos lea inc pop mov add and mov cmp or ret inc aaa andb jmp mov pop push add mov xchg fyl2x push push dec rcl in notl lret pop cmpsb jge addl mov ret pop aaa jecxz and lods push add inc jmp aam inc jae es cvtdq2ps or jno adc mov pushf fidivrl mov jbe dec sbb lahf sub or inc xor mov loopne xchg push xchg add mov xor jno hlt jo dec mov sbb sub jnp lcall inc das mov loope push lcall xchg adc xchg adc cmp mov or js (bad) lret std lea xchg adc add xor cwtl les mov add push cwtl test add leavew push mov adc mov std (bad) fcmovb add adc xchg push shrl lock lock mov sbb mov stos xor xlat cmp cmp in inc sub daa fidivrl imul xchg pop sbb or fwait add fwait add jmp hlt add mov and dec js mov js addr16 dec lret jecxz and xchg icebp jbe push (bad) pop rorl adc orb das mov dec mov cmpl xchg or push in test xor push xor adcb sbb xchg shlb scas pop fs sbb mov xorl jmp jne (bad) cmp inc push sub stos lret or mov xchg ret xchg add jo push mov sahf es call xchg lahf mov ficomp mov lods and out sub pop (bad) loopne fsubs les outsl add je mov sarb inc loope std xchg xor xor dec inc xchg popa cmpsb sub sbb add (bad) jns lock push push push mov add mov xor add sub add xor shrb dec push mov lods xlat cmp test mov ds xor and insl lret inc cmpsl lods xor fsubl xor push rolb out arpl mov js mov das (bad) xor fistpll cmp push outsb jge xchg mov rcrb and mov sub push cmpsb pop outsl add loopne mov and push test js lret mov lret or adc mov pop jae dec pop ret pop mov pushf dec sub add cld pop mov jo push and xchg dec or push gs mov into ljmp sub mov rorb pusha inc or arpl or cwtl sbb or sub sbb rclb movsl xor ljmp inc cltd push sub pusha mov aad les dec xchg sbb cmp cmp jmp or (bad) pusha add rolb cmp push dec add sub rcrl and test mov popf and les push xor add aam imul xchg cmp lret adc shrb mov and adc inc or test cmp fwait mov jecxz xor insl test and and inc lcall add jb popf mov (bad) gs loop jnp push xor and cltd mov and rcll movsl xchg cs stos or adc and cmp sub xor sub (bad) aas (bad) test mov faddp and ret sbb out movsl insb sbb andb scas rclb or push iret sub les or loop inc inc ret cwtl aaa lods adc adc dec inc xor gs push dec and nop push push add rcl jmp mov aam or rcrb pop add repnz jnp xor push in call or xor mov sbbb orl and lea inc sarl cmp add xchg xchg inc sbb nop lea or (bad) pop loopne jne xor add pop xchg push arpl xor (bad) lahf arpl movsb or jmp sbb (bad) and add mov push or adc jno add rclb sarb adc add dec add and aad add or jb lret adc xor stos sti xor test mov and sub sbb fldenv sbb in push push add or ss lods cwtl es movsl std dec lea add or lcall add pusha sub mov add xor inc mov or xchg ret loopne je jno insb lret mov sarl movsl adc cmp movsb adc pop imul xchg and and and loope shrl icebp and ja and or mov add dec movsl add pop test lret into mov pop and shlb cmp lods andb and cmpsb fs outsb adc and cli or mov and mov test sbb pop fstpl add mov test aam sub int and popf xor scas dec mov sub rclb push pushf in cltd pop xchg (bad) sbb xor add js add add lret add sub xor mov and cmp ret sub push push and or mull test and xor add (bad) aaa mov mov ss (bad) sbb (bad) dec pop dec loop loopne ja cwtl add fs aam and mov pusha test test test cmp push inc cltd addb xor mov mov orl or or xor orl pop lahf dec lcall test inc iret aaa leave xor mov clc mov dec xlat dec sub cmpsl imul repz cltd addl xchg push movsb sarb dec lret rorb nop xor or or loopne aas push aad pushf mov pop sbb xor xchg cmp mov jo add aas shll push pusha or mov mov aaa mov xchg push (bad) xor dec ret arpl xchg aas adc (bad) rcr andl ret adc and xchg jmp cmc add mov call add in pop adc inc jne add xor fildll sub (bad) cmpsb pusha inc addr16 bound lret inc ds sub xor sub pop jmp lock xchg and pusha inc jl xchg mov jae dec adc sbb adc loopne mov ljmp jbe push or mov xor rcll frstor add xor xlat repnz dec aad mov cltd sbb sbb sbb push cmc sub mov addr16 dec adc lret dec sbb and mov pop lock add mov iret adc nop mov dec arpl mov or pop sub mov inc subl jg cmp cmp mov jno xchg push and popa rcrl cmp js dec mov fsts add pop dec ljmp jmp mov movsl adcl iret pop lock sbb xor push sub sub or mov mov int3 int test push xchg sub xor inc dec cmp sbb or push jo xchg jo sbb pop dec ret gs iret push add jmp sub es push lods and arpl adc aaa sub xor test cmp add inc inc ror addr16 dec enter (bad) mov and shlb or or daa xor sbb add add or mov pop fimull shll cmp fwait xlat lcall (bad) xor jo push jnp and (bad) jae mov loopne and jge push sbb and adc dec roll outsl push movsl movsb xchg add or dec adc daa leave ret cld cs add inc pop test nop test out sub (bad) lret (bad) mov pusha mov insl jmp and inc adc dec mov and and mov xchg mov pop pop adc dec cmp mov mov and lods (bad) jge mov pop inc cli jae add adc inc lahf xchg adc cmp lods fild in jmp push cmp mov cmp xor insb (bad) adc jecxz inc shll arpl jo,pt adc sub inc sbb addr16 push add and mov js and lret push push sbb dec gs test in lods hlt or std movsb pusha push pop xchg or dec loopne cmp aad or xchg jno test leave orb push mov popa nop scas add dec xchg stos mov es xor and or dec dec push data16 jo sbb xor xlat xor inc adc push pop ret nop cltd sbb test push scas shlb cmp ret cmp sub add lret outsl push repnz or xchg adc pop sbb or lods xor and fimul xchg mov lret sahf dec aam imul pop sbb sbb out pushf ret fs lea pop jno push cmp icebp sub push dec mul sbb dec dec and mov push push insb pop pop fstpl or cwtl es inc test push or xor pop mov push dec addr16 or pop jns subb lods lret aaa and popa pop lea adc dec sbb cmp mov cmpsb fs fdivrs xor sub or mov das shrb sub movsl add out and sbb sti je adc xchg pop lods imul andb movsb jb aam adc sub or in xor inc lret sub mov popw mov shlb mov (bad) xor imul flds icebp or push pop and mov push cld cwtl fistl les xchg test nop repz adc pop xor sub mov lds les sub rclb es repz sub add leave shll jmp pusha fdivl pop push jp setle and mov lods add data16 sbb aaa push mov mov arpl or add pusha dec in push lds subl pop cmpsb subb popf rorb out adc inc aam popa or xor mov ret fimul cmpsb sub sub or add inc sbbb cmpsl rep inc mov and mov rol and movsb int3 ss cmp push push mov xor ss add test adcl imul sub sub sbb lods cmc cmp mov dec push mov or xor rcrb push stos and cmp mov or adc sbb loope or push pop push xor lret cmp xchg xor mov (bad) pop fmull pop or xchg je (bad) inc stos sub shr repz ss xlat xor sub ret movsl addr16 xor sbb jo aad push xchg nop fldl sub xor sbbb sub and xchg pop xchg in push leave fisub lods inc (bad) sbb inc dec addr16 xor lds nop and cmpsl aaa push pop inc push or icebp into xor xor cmp mov ret (bad) add and mov ret cmp test jo cmpsb lret mov daa rorb mov jge loope xor xchg adc push mov ficomp test loop popa cmp cmp aam add aaa loopne lret xchg lcall sti fldt movsb and icebp inc call fwait aad test pop xchg sahf push cltd ret xor test and cld js shld mov xorb ret rclb pop sti js or je sub daa dec stos mov adc cmp mov lock fs aaa add loop pop inc (bad) loopne pop das loope pop js dec clc and xor jge cmpsb sub mov and sbbl sub xlat adc dec arpl and add js mov pop mov lret or dec enter out or leave std sarb inc mov (bad) push xchg aas mov adc dec rcrl sbb popa pop movl sub add sub or push cmp ret fldenv mov cmc insb xor shl mov loopne jno shr int ljmp nop cmp or lret mov daa out scas or or jns adc pop mov xchg inc out sub sub dec and dec jbe jmp cmp mov and scas mov scas inc sbb mov cs inc jo and sbb pop xor xor push adc push sbb shrb push mov (bad) xchg sti lock sub or loope lea cwtl or inc sbb sbb pop push mov pop std rorl nop (bad) or adc inc add pop mov or adc add dec mov cmp loopne xlat xor push lret cmp xchg inc and and mov addr16 jnp mov add inc sub inc mov mov enter xchg lock out inc fwait add mov mov sbbl add ret js dec dec aaa ficom pop sub add cmpsl mov daa lea negb fucomp int mov fnstsw sbb sbb shll mov adc and in xor inc dec cmpsl test inc fildl mov insb sub sub sahf ret lahf and adc xor push in inc or cmp mov dec pop rorb cmp push xor ss cwtl and xor push mov push pop inc roll lods loope dec imul lea jo xchg andb insb aas push bound xchg arpl xor mov jle sub add add loopne sbb mov cltd imul test lds ret daa xorl loope sbb pop or vmulpd es rorb cltd jnp movsb xor test adc cmpsb rorb push jecxz xor adc push pop scas lds sub out add mov xor dec rorb mov lcall sub ret xchg xchg mov jnp add sarb xchg push sub mov pop inc push loop les or popa sub rol popa sub mov loop gs sbb xor leave dec inc or add add sbb fs cmp into adc xor aaa pop mov adc or sub push ret push imul inc loope fsubs or dec adc rcrl sub mov mov xchg insb add loope xchg adc or test lods push rorl inc adc repnz or cli cltd and (bad) mov insl mov addr16 test rorb shlb mov push jmp out jno ret rorb dec cli cmp (bad) mov ret aam push and or mov sub add inc into lahf inc lret adc inc push pushf or adc cmc pop mov gs js push add pop (bad) and mov jmp or and push mov xor or jno push into push xor mov sub ja sub movzbl cwtl push gs mov push and sub ret mov mov adc rcrb or xchg add out inc pusha pop fwait mov cmp out fwait add cmp popa sbb xchg add (bad) or and inc adc and fsubs xchg imul dec xchg xor inc push or mov jmp and mov push adc in pop sarb cld lds sub aad and dec push mov jmp xor fs inc or lock dec pop fwait sub les inc sub mov xor and push and and adc xor lahf (bad) int jle xor adcb das pop push add push mov lods sbb test xor dec add sbb cltd inc jns add imul popa add and daa ljmp push or cmp pop les pop xchg mov icebp sub push push sub (bad) xchg rorb into xchg sub dec mov or inc sub dec dec xor xchg gs cltd int lea test mov cmp add pop mov xor xor push imul xor cltd clc sub push sub hlt (bad) mov push mov movb add and rcl pop test jns and mov pop push mov rcll inc movsl gs in pop xor inc ljmp mov inc imul xor sbb mov pusha or jo push test sbb lds imul adcl pop orb in push inc adc mov xor or notl inc loop ja xchg rclb fbstp and sub add jbe sbb xor pop mov add add add adc lods and push faddp sbb in mov jecxz lods aaa push inc push cwtl xor jae jns inc xchg in mov lea xchg sbb insb jo popa inc push pop lea mov xorl stos or ret or xor mov fcomps mov ficoml loope xchg js enter fiadd fidivrl pusha add inc loop lods popf sub push je mov inc dec aaa adc or sbb stc sbb out das pop adc shrb cmp shrl pop mov mov xchg dec test mov mov or mov lods add or xor mov mov and leave and test cli imul or pop ret jno add outsl insb jecxz add push js dec popf xor std in adc push and xchg int scas popa movups adc adc mov cltd mov inc shr sub nop movsb shrb pop aas (bad) xor lea jp pop (bad) xor addb cmp mov inc push repnz dec and add inc jne inc xchg inc pop xor dec inc jns sub dec sbb add push cmp xchg test xchg data16 movsl add sahf mov mov into pop fcmovb fistpl fstpt adc adc jno inc cmpsl sbb mov push lock lret pop js inc fcmovbe bound lret xor cmp xchg xor push mov pusha cmp push add mov cmp mov sub inc sbb sub add or mov dec aad and dec js pop leave lods hlt (bad) inc mov rolb xor mov ret jns xor fidivr rorb sub imul ret add enter pusha inc dec or insb leave cmc sub or xchg mov popa jmp stc insb or ljmp pop xor xor push adc add mov pop xor aaa es ret push inc loope add nop and push push loope popf mov dec jecxz sub loopne es or cmp fmul js dec mov dec iret test pop movsl inc arpl mov cmp pusha sarb mov shrd xor add xor mov outsl push sub cmc and push push pop xor xor loope (bad) popf or lods push xchg sub xchg xchg cmp adc xchg pop and cmpsl adc test xor cmp sub shll add sub pop xchg aam test mov xchg pop lock sbb cmp aaa popa pushf outsb in js lea shlb xchg addb daa lea xchg mov add bound add mov rcll jb pop xchg inc xchg and mov mov add call dec out inc mov lahf fs mov ret inc xchg cmpsl popa and add rorb or adc xor xchg inc sbb sub and imul into loope xor and adc imul and aaa jp inc add adcb pusha adc cltd pop in in mov repz push cmp push add ljmp rcrl fs or xor adc jns sub mov imul adc xchg mov mov hlt mov adc and jo xchg stos push pop popa stos add xor inc inc or add pop or add dec sti xor jg push mov ds aaa jns mov ret push add pop add push imul mov xor mov jne xor insb insb jo lret xchg xchg mov daa and inc sub xor les or mov mov data16 inc jmp pop mov push pusha inc lods pop das sbb xor or or cmp rcrl add add or inc jae sub inc xorb pop pop pop xor push out mov push rolb jb mov dec push mov xor adc rcrb aaa test pop addl and cmp insl adc cli std adc in sbb mov andl leave nop inc add xchg iret mov inc int3 inc aam fs outsb and imul arpl lret fwait inc xchg xor inc or mov loopne or mov xor and xchg sbb js scas mov add adcl fmuls daa dec mov add enter pop aas leave mov add or sti sbb popl dec and jno adc js xchg or pop leave cmp aaa dec or xor out pop add mov sbb icebp dec iret les cmp fidivr cmp or inc lods icebp sbb xor xor jge xchg sbb loope repz ret jo test loope subb xchg mov sub add xchg mov inc cmp popa adc sub movl push push pop adc mov ret pop pop daa jge xor andl inc push stos mov dec sbb mov push mov sub or imul frstor mov mov xchg adc adc loopne,pn or xchg adc lods jmp leave cmpb insb pop or xchg subl cmp sbb lods popf add fldcw xor push pop and leave mov add (bad) rcrb lahf push mov cmpsl push dec xchg popa les and pop add ja add pop faddl add xchg bound fnsave or loop push mov pusha lretw dec rclb mov add or lds mov dec nop cmp mov adc xor repnz add jne sub and std sarl aaa lods or xor xchg cmp test sub pop jmp ret inc or test mov xor jno subl mov and lret cmp insl fldenv movsb shrd and movsb xor cmpsl add loopne daa cmp ss cmp push jmp sub pop inc aad jge pop xchg mov inc and dec jle or sbb lcall jnp xor adc dec inc add add xlat stc adc dec sbb push adc and add es imul scas cmp (bad) sbb cmc sbb (bad) adc nop lret or repz in mov mov push (bad) aaa cld push loop imul inc in sub popa push cwtl xor pop jne lods mov arpl add movsb adc push inc mov dec push add or sbb pop mov popa sbb or xchg dec sbb dec add dec dec mov sbb xor add jno aam test popa push mov js xor push insb xor rorb inc add and dec push push stos inc lret mov push daa hlt (bad) adc aas (bad) adc mov mov xor or sub sbb and add dec sbb push lock mov mov fwait mov imul sbb inc roll int or xor push and lcall jb mov fimull mov push or sub leave imul dec pusha push xor sbb mov mov (bad) or jg xor mov inc xor xor push xlat (bad) scas add cmp sbb mov in and push insb imul out in push adcb lahf xor gs aam inc out fstpl lahf pop push and lret or xlat hlt imul or les inc jp inc adc imul push adc xchg xor jo icebp arpl or push lods add sbb fiadd cmpsb mov xor or gs or sbb outsb cld nop xorl loope sbb and and sbb cmp imul jle test dec pop mov inc dec pop sub xchg lret cmp mov insl out loope lcall or movsb or lcall icebp insb sbb cmp rorb dec ficompl adc xchg clc dec sbb mov stos lods loopne adc and pop xor insl sbb dec cmp aaa xor jp sbb dec cmp dec shrb sarl cmp xchg daa add push lods mov mov dec mov aaa dec js cmpsl xchg mov pop jb shlb mov xchg adc pop inc add inc stos scas cmp xor (bad) mov inc shll pusha insl push mov push in pop or dec cli or add mov inc add dec cwtl mov and pop adc add cwtl mov scas pop aaa popa jmp add xchg repz sbb xchg pop xchg pop test xor (bad) adc dec xor jp sub or lods pushf lret adc and insl jae jp lcall scas imul xchg cltd aad inc sbb loop (bad) mov out mov cltd xlat sti cmp push lods jg dec add insl cmp jb xor sub test adc add fnstsw cmpsb mov fs (bad) lret addr16 test test lcall pushf mov and push add mov popf inc xor add nop mov enter sbb push add dec in adc and popa mov add inc loope leave xor sub mov sbb cmp cli mov mov mov addb xor jmp mov add dec shlb cwtl and jbe xchg adc fcmovnb and sbb cmp or adc test lods mov mov jnp add xchg iret imul inc sub leave and jmp test jne outsl dec loope pop adc mov push movsl adc loopne xor push fs pop sub lahf xor mov test add lea ss subb inc sbb les xorl jmp dec and lret jecxz xchg popf cmp add sbb mov xor jbe push enter lret ds cs ss inc or inc movsb icebp sarb mov xchg popa jbe xchg les pop test sub or sbb sbb dec adc (bad) xchg cs out gs inc xchg push sbb sub jo xorl inc adc cmp rcl daa or into xchg mov push std xor sbb add and sub imul xor sbb adc dec mov push sub dec and cltd pop loope mov das cmc addr16 rolb or call cmpsb mov sbb lahf add xchg loopne mov push mov xchg pop fstps xor shrl test add adc mov xchg add lock mov add mov in add clc rcll lgs or movsbl and ss inc or xor loop ret iret sub add and sub xchg adc cltd cli mov sub inc (bad) jmp mov insb fsubrl aam and mov (bad) ja loopne test mov stos and ret mov (bad) popa loopne adc mov inc inc jecxz mov cltd lret iret mov adc lods outsb mov push and mov pop jno dec xchg or mov or cmp or cmp push bound mov mov sahf xchg xor or xchg inc jo sbb add adc dec mov lret insl inc sete xchg fs pop (bad) and sub lods xchg hlt sti and jo inc out inc add and sub mov adc popf mov push (bad) repz aas mov jp add push lds lods xor add cwtl popa pop pop cmp or add negb mov xor int3 (bad) mov (bad) and cmpl mov mov jb add leave push in pop mov xor mov jns call xor sbb faddl rcrb xor sub xor xchg jo pop ljmp mov pop shlb inc mov in js push mov daa add mov or dec sti mov xchg sub jmp lahf or sub add add lds mov lods xlat jo add stos push mov add ret add inc xor scas push adc mov (bad) hlt add scas cmp addb mov rolb or push daa popf (bad) pushf inc movsl icebp stc mov mov inc in lock cmp (bad) mov add out adc pop loope sbb sbb loope mov or xor xlat add les or inc fsub repnz cmp xor push dec adcl test add loop pop and add and pop mov push daa inc fldcw lods jae leave fcmovbe aad xor sarb popa loope and dec mov cmp movsl mov sbb and and xor push dec scas jge mov dec mov sbb xor or fnstenv gs mov movb adc xor and add lods mov popa fisubl inc sub xlat xchg add mov mov inc jo es and rolb push xor outsb mov cmc and and enter xchg subb add dec add push xorl lea jno mov inc add mov sarb and loopne mov test ret mov inc setb xchg popa js std scas daa cmpsb add xor mov call fcomps and xor add jno or sbb pushf adc sbb or and xor and xor xchg lods js or cmp outsb sbb rol imul lods (bad) mov imul push mov pop push push inc rorb es push jl adc or adc es sbb xchg adc adc push fdivr aad add rolb xor adc sub xchg call mov das push test add or stos dec cwtl mov std das dec les pop add inc dec dec mov or addb imul xor xchg (bad) enter int3 ret or push or pusha mov (bad) dec arpl add pop sub xor pop sub push outsb pop inc sub jno xor inc clc inc mov cmp dec mov or pop rclb pop xchg loopne xchg sbb sbb or adc arpl pop (bad) loop push es add xor push or sti ljmp imul repnz xor mov rcll mov sub and dec stos dec pop sarl stos inc push push or pushf adc dec push in xor enter xlat fwait lea aad and popa dec adc andb (bad) mov std pusha push and and fstpt and pop adc arpl sbb lods adc or (bad) popf or enter push repnz movsl (bad) rorl lods data16 (bad) xor pusha xchg adc mov insl mov inc fdivrs test bound xor adc aaa add push or sub mov mov xchg adc dec adc lods push jb inc and xor pop or rol dec (bad) dec pop aaa xor lret pop iret and outsb or ss iret xor fsts mov xor dec aaa jecxz mov js arpl mov daa fidivl inc aaa int mov or out xlat or or fstpt bound sbb jns or ja pop push inc sub jo or sbb lret sbb gs push dec or in dec xor add pop scas sub sub xor mov mov dec insb add and dec movsl sbb sub imul sub sub mov stc sub pop push jg push fildl (bad) or mov mov stos mov and sub sbb sub inc pop mov fcoml lock jb or mov cmp vpcmpeqd mov jnp jo mov push out loop push lods add sarl stos mov loopne push popa imul mov pop test das add or das roll es mov dec pop idivl inc addr16 mov das lcall add daa stos lods push cmc sub add cltd jbe adc and or test sub arpl mov rcll into xchg inc xor and mov xchg (bad) lods dec xor push (bad) jo mov adc add rcr xchg in (bad) mov (bad) sbb or dec inc push xchg mov pop push mov or jb pop adc scas inc jmp add enter jns aaa icebp or mov and sbb or sbb cmp push mov xor fisubl sti mov fs mov add addl (bad) inc push test loope loopne or insl xchg fs xor xor inc cmp addl lea movsl imul push cmp mov add and mov and inc xchg or mov xchg lret cli popa jbe add popf ss mov and or pusha dec xlat cmp or sbb and xchg xor and adc das or inc xchg dec dec pop popa sbb dec xor (bad) xor xor xor and pop inc lods push and roll insl inc dec int3 dec jl mov fldenv mov push shl pop and in cmp rcll pop rep and test or push add mov and mov outsb aas jne mov add pusha xchg ss insl das xor add adc insb pop dec leave mov sbb sub push jl xlat ret xchg movsb push out mov iret xor mov aad lahf sub mov (bad) mov xchg andl inc or lock cmp dec dec add cmpl push sbb loop push mov add js mov xor shll pusha cmp dec add sub inc jmp inc or insl or sub mov test leave sbb add adc pop testl leave jmp lret cmp js pop imul sti mov jmp ss test int (bad) pop aad jo (bad) jae cltd ret leave shr adc outsl sbb adc sub adc rclb pushf and dec lea cmp movsl movsb and dec and xchg scas icebp fwait inc jnp std inc call xor sub movsb add pop loopne or push sub pop daa loope inc fistpl inc ss test rcrb andl push imul je add cmp insb adc xor ds dec test rolb sbb sub adc rolb jne inc imul push add dec lds test mov rolb sbb pushf and xor or sbb mov xor push xchg dec cmp push test outsl and or or pop sbb les inc ret ret gs subl (bad) xor inc sub add inc add dec lds sar mov lret and fisubl mov jl add ss movsb adc pusha fdivl int add xor cmp or mov (bad) mov mov jb mov push or or and sub fsubrs inc pop ret or inc push outsb lret sub add cmp test jo mov ja subl mov inc jns rcrb sub sub lock jno pop adc cmpl add rorb popa and push cmpsb cmc and mov or loopne push mov arpl lds sbb pop repnz addb adc hlt sub xchg ret mov enter push mov les cmp lock add push mov adcb cmpsl xchg mov add jno adc mov cmpsb movsl in ret addr16 inc sbb and loop cmp or movb (bad) add jae and push jecxz xor mov xor test lea int aam dec out jg cmp or cs loop adc dec mov add mov add push sbb push test xor mov (bad) nop sub mov fbstp les cmc or cltd dec or pop mov rolb sub in cmpsl je adc in inc sub or aam imul ret psrlw or dec add clc and aaa nop mov lds pop rolb les lds jle enter add insl xchg pop movsl inc lods xchg xor xchg xor inc jecxz push adc (bad) cs cmpsb add inc std jne pop and cmpsl inc sbb lret lods mov add ret movsl (bad) outsb bound (bad) cwtl push call xchg xor arpl add pop sbb or shrl add and (bad) lea mov or xchg lcall into scas sbb and aam test add adcl xchg add in and mov push cmp cmp add pushf jmp mov mov xchg lcall mov xor arpl sbb xchg mov add pavgw cmp mov pop or dec imul sub lret mov adc pushf inc pop and xchg dec dec inc and xchg dec push cmp sbb pop pop insl sub ret das dec test or je iret scas xchg lret add leave or (bad) in or das sub push std jmp mov int sbb add and mov adc ret xor add pusha iret sbb shlb pop gs andl inc popa (bad) mov xor ret dec mov addr16 stos imul lret push fisttpl imul clc and mov sub movsb dec test gs addr16 aad mov pop fidiv pusha shlb cmp mov ss cmp adc mov or stos or je and adc andl mov push in xor xor pop pop fisubr fiaddl aaa xor push mov imul and mov test (bad) xor mov push mov jns mov sub lahf jno sub xchg lock in cmpsl gs decl incl jnp ret pop lods mov fs xchg mov adc lret mov nop pop mov scas inc or lods aad movsl shrb sub adc pusha add adc sub test aad pop test adc cmp addl adc push dec inc push (bad) xor test pop add mov dec cmp fs js dec mov push or dec mov in dec or push ds pop repnz movsl dec mov movsb in push (bad) dec sbb cmpsl mov push sub jp fistpll call out movsl dec sub sbb mov xchg dec adc out add movsb add dec or stos frstor adc push xor add nop loopne adc and and inc adc jecxz int adc mov aam push movl popf inc f2xm1 mov insl lahf pusha inc lods (bad) mov cs (bad) cmpsl cmp arpl ss pop xor pop xor fsts (bad) (bad) fisubl cmp movsb or or add pusha dec or jno test sbb xor push cmp add fsubs adc jns mov pop adc aad pop insl outsb add fstps test dec adc fisubr add pop xor and add fldl add push sub and rclb sub xorl jns mov add pusha cmpsb inc mov adc dec js cmp adc sub jnp and movsb jne,pn pusha loopne outsl insl cmpsb xchg rcl sbb ret inc push jbe dec loop or inc xchg jnp and inc or sbb in or imul imul xchg or mov and cmp lret ret (bad) sub adc inc daa push data16 inc lea aaa imul insb push lods dec testb push cmp add test inc xchg insb dec outsb add daa pusha cltd cmp sub lds stc test pop loope (bad) mov or leave or mov jbe push dec adc cmp add dec daa or mov dec lcall mov and mov out daa inc bound arpl test add daa add xor add mov lods mov and loopne jl cmp aas js pop xor adc sbb pop icebp or pop loope or push shll mov test dec jge xchg in and push xchg out ja shlb push rcrb jae pop lahf or adc push lds mov cmp add arpl scas mov sbb sahf add es in push ficoml add sbb adc leave cmp movntq dec popf inc sub push js push test xchg cmovs mov add add mov mov sub xchg popa dec sbb cmp adc imul sub inc xorl add add out xchg sub loopne ret aas pop mov pop add mov loopne lock or movsb dec (bad) sti add cmp in jecxz xchg addps pop and pop popf mov icebp adc bound insl or mov nop fmulp push pop (bad) xchg xor jae pop adc push aad or or out xchg test pop icebp movsl and lahf imul mov and lods or pushf cmp and jmp ss push outsl insl adc and and pop loope adc and nop mov inc xchg nop xchg inc pop jmp inc adc xlat movsb add movsb mov add rclb arpl ds pusha fcoms and ljmp outsb push sbb cmp add arpl push xor adc (bad) xor inc push popl loope xor lret aad shl xorl dec aad icebp mov mov mull push pop (bad) loopne xor (bad) cli (bad) call mov and and pop insb push into nop aas mov adc sbb inc fdivr and imul pop or lret push and add or adc cmp cli orb push xchg mov jge inc inc add test rcrb std jb sub sahf xchg add adc dec lock inc xchg dec loopne mov and xor stos sbb mov pop sbb gs push loope (bad) jae lock push mov lds xorb push stos test mov les sub pop movsl lea cmpsl add rorb xor daa insb cmp js cld scas adc or insb cmp lods ret xor nop inc ss rcrl in and js or push pop mov mov inc pop ljmp insl and jp aam adc xor mov add pusha pusha roll and mov test xchg (bad) mov lahf xor xchg or sbb data16 fmul sbb imul mov fld dec or dec xchg xor mov shlb or push mov (bad) dec push xor fwait dec pop add add jge lods or aam inc imul inc xor (bad) and dec mov dec cmp dec or mov sub push mov sarb dec mov pusha and lret lods adc adc adc sub mov push dec dec xor mov jmp xorl sarl push lret add nop stos sbb je xor add add jo ja mov mov stos push test push inc repnz xchg gs aam push fcomps xchg dec sub xlat mov insb xchg test dec fstpt xor dec iret ja xchg mov push sub dec movlps pusha sub add mov inc jmp stos or dec dec xorb lea mov pop dec jecxz inc pop mov adc cmp adc pop leave xsave sub movsb cltd (bad) push and jo stc jns mov fdivrs add lea mov rcr adc sti xor push pusha outsl add mov pusha cmp ret les mov or push push sar mov outsl xor or fsts add ljmp dec mov push push or xchg outsb add jp or push es inc mov or inc lret jmp fwait pop out jmp lea mov ljmp dec push test dec pop xchg xchg mov adc loop add lods or shlb push or arpl dec push test pusha adc mov sub fldenv xchg mov aad inc sub test mov lods loopne popa sub popl xchg cmp movsb dec cmp pusha sub inc xor movsl push ss add inc cmp add dec imul dec inc mov mov and popf adc inc addb jl dec or jmp aaa pop or mov daa jno push and (bad) (bad) loope addl fnstcw loope inc fisttpl xchg mov sbb std clc adc dec adc xchg cmp cmp ja gs jne xor sbb jecxz push and ffree dec test mov add popa sub push addr16 leave loope xor xchg or sub aad add movsb inc int dec sbb (bad) orl rolb or mov (bad) jno pop mov or mov mov add hlt pop popa and push add adc and and dec pop xor pop sub push pop jbe fild adcb fs push mov pop xor inc sub adc mov xor adc popa jno push sub dec jns pop (bad) fcoml push and test pop test pop imul cmp outsb adc fwait pop orb popf sti or xchg or mov or cmpl (bad) movl pop dec lret not call mov xchg inc sbb in or xor sbb nop xlat test mov fisttpl movsb push or add dec mov ret cmp jecxz push ljmp cmpsb inc or jne inc popf jne and shlb mov out cli sbb pop mov cmp iret addr16 cmp test pop add (bad) orl call cs sbb test fs dec movb mov sarl inc fnstcw sarl lahf and mov or movsl push inc xchg sahf test loope inc xor inc (bad) sub inc xchg cmpsb add gs iret mov xchg aas rclb add inc loope jl and and sbb cmp sub sbb (bad) push inc in xor aad or cmp insl pusha inc lock dec cmpsl es pusha imul sbb sub (bad) test sub sub mov scas je mov (bad) fwait lock (bad) jge bnd push fisttpl inc sbb jmp inc dec xchg insb and cmc xchg jae (bad) adcl fwait adc dec jl les clts lods mov add movsl add sub push and push ret daa fiadd mov dec add aaa insb adc or in xchg pop inc rclb (bad) popa push and add jecxz fsubs jmp fldcw add lods loop sbb and xor push andb outsl inc ret pop jno mov xchg xchg push mov xchg adc or mov dec ja lods test cmpl and jecxz imul push sub addl and mov imull addr16 mov orb mov or or xor add int xchg jb mov aaa push xchg daa adc or imul add movsb test sbb jno xlat stc xchg loopne add daa and xlat fisub addr16 cmp add mov add fwait xor adc mov mov mov or loopne repz mov mov hlt or cmp sbb xor adc xchg sub and inc lods dec rcll jb xor cwtl mov test xor sbb or pop push pop add rorl sub loopne cltd dec aam or xor testl lods inc adc cmpsb or xchg pusha daa loopne cmp movsb or push int mov cmp mov xchg movsl cmpsl (bad) or dec sahf insl bound arpl add shlb inc imul and idivl (bad) gs and dec xchg movsl cmp dec subb pop adc addr16 mov xor xchg sub mov add loop aaa add dec cltd dec popf ss sub fstps adc gs jl ss and xchg pop lea adc jne sub and ret lock fs adc xchg and add xrelease sub cltd movsb daa nop add test dec call fs push lds lahf lret push scas outsl and loop mov xchg sub push lods mov scas add ret sub and add mov add mov popa pavgb or adc sub xor mov sahf aad push imul mov dec mov aam sbb inc imul inc cmp sbb nop cmovns enter adc (bad) insl xor lods xor inc mov dec dec iret adc xlat daa adc add adc gs mov cwtl and xchg jo fdivrs or pop insl imul xor mov xchg fildll push test fisttpl inc repz in sub or dec push nop xor leave out inc xor (bad) test xchg lret xor lea sub int dec loopne pop dec mov std mov cmp dec dec js (bad) out sbb test mov sbb aaa xor nop push daa stos (bad) sbbb sub sub adc and sbb mov pusha jbe outsb xor es mov jp sub xorl popf in pop xor sub test mov dec jno push adc and xor js add in cmpsb dec jp out aaa dec shr stos test in sbb das mov into insl sub mov add (bad) test jae daa int3 dec dec int mov rorb push outsl add (bad) insl enter mov js addl (bad) inc sbb sub or (bad) adc sahf sarb fisubrl jns pop and add lea phaddw les push mov loop aam gs and or push sbb mov arpl adc pop es cmp dec sbb test push test loopne sbb jp cmp inc xchg (bad) adc test cmpsb int3 lds xchg pop add and outsb loope pushaw popa cmp je and shlb sub xchg xchg stc pop sbb dec add div test lcall int push pusha mov cmp mov (bad) mov inc xor cmp and mov push pop mov icebp or mov (bad) xchg dec add cwtl stc dec rcl mov xor xor pop mov lods xor mov imul sbb xchg mov test adc das add ret aam (bad) aam sbb push out inc or fisub xchg and fild test or (bad) mov icebp xor xchg popf mov inc push add adc imul inc in xor in test jp popa and jge add mov fs (bad) test test or cmp andb cmp fwait scas add ss cmp pop test lods push aam mov lods add mov pusha rorw fs xor aam inc add in mov dec or test mov adc popa shrl add xor pop adc adc pop cli push or xchg jno inc ret rolb pop xchg movsb (bad) test add add into bound mov lods and xor les insb adc mov xchg sub imul push mov arpl cmpsl mov cs mov pushf sub out pop mov sbb add inc (bad) test lret xchg mov inc loope jno sub fcomps add insl jge rcrb inc test pop sysexit loope adc and push and jnp mov es insb or loop int xor insl aaa push xor xor xor cmp rcll dec lret insl inc stos mov dec or call xchg sub dec inc or sbb xor flds xor mov add jmp jmp xor dec add adcl sahf cli inc enter mov inc inc lods dec imul and popa sub stos jmp add pop jno leave test adc cltd cmp nop lahf popf xchg (bad) sbb jo pop or mov movsb or test and jl cs mov out inc orb adc rcrb mov xchg and pop sub addb sub pop js daa dec popf mov push jge add dec test mov mov or add shll inc arpl sbb fs and test xchg and push lds fs cltd xchg jecxz xor or lret lret inc push mov sub imul fwait mov add mov xor mov xchg xor sbb xor lods xchg xor jnp popa pusha popf cmp xchg int push mov xor int3 ja add lock sbb sbbb imul arpl add sub push push add or add push sbb jmp repnz mov mov adc or pop push dec jae (bad) jp xor cmpsb push insb push jo leave and or sub mov leave jecxz imul repnz (bad) dec outsl xor add mov jae xor pop dec sub mov xchg nop cmpsl jnp sub mov pop or andl sbb jo insl movsl xchg jno dec pop lock popa gs push mov punpckhdq adc and sub adc pop addl mov add sub lea (bad) lods or mov (bad) outsb rol daa lcall push jb xor movsb push jmp push int3 push mov je cmp sbb xor mov push jb fs sbb adc rcll lcall xor test push sub pusha pop pop xchg shll daa sbb addr16 fs add xchg cmp dec and pand or sub cmc mov push mov mov mov push movsb add sbb scas or adc cs dec jecxz and jo test push daa and mov cmc mov xor es (bad) movsb mov or push fiaddl ror dec xchg fwait roll mov add mov and and jl or dec and inc es cwtl mov lcall dec xor popf mov xor sbb jno adc adc adc xor or jne and xor mov test adc sbb orl dec and repz add pop inc pop sub leave dec sub jne xchg push inc insl out xchg fs jns add mov imul movsl xor inc push lock sti shlb mov xchg sub jne sbb popa lahf sub pushf or mov adcl fadds arpl call xor cs push xchg add inc xor add mov xor add or lods mov movsb out mov ds test or lcall js rcl inc ljmp inc mov dec mov cs and push (bad) mov test in push cmc sbb dec test rorb subb xchg lock sti mov lea add ss mov pusha inc enter adc lods movsb sub add sub push push sub fs or daa push xor xor xchg and add rcl jae xor (bad) push dec addl adc clc and adc sub add push es xor or testl pop int lock jmp leave mov add inc inc xor ss cmpsl push lods dec popa jmp iret and mov stc add add adc pop xlat add popa aas mov andb popa inc or sbb add or js adc imul pushf addl pop xor lds sbb imul fcomi and xor add sbb pop adc lret les test xor lds rcrl cmp pushf test gs jmp inc jmp sti or lods xchg xor and inc jl push addr16 fadds sbb cmpsb mov add lods push adc xor xor cmp cmpsl inc arpl push (bad) pop xchg sub sub icebp and inc and sub (bad) add ret jle jb je daa xchg insb xor mov loope add mov sbb cmp push call adc dec shrb pop imul jl sub (bad) xchg popa and add or pop ss lock or pop lcall add ret pusha insb movl (bad) cld pusha adc std add add push adc pop stc xor call popf mov fistpll shll scas xchg sub cmp add mov jbe adc sbb add mov mov hlt movsb xor cmpsb dec adc ret sbb mov sbb mov adc pop mov das (bad) mov lahf cld sub lods and and xor push mov (bad) xor je xchg and movsb jbe xchg inc xor add pop or pusha and dec add dec psubusw (bad) cli push or or repnz aam adc cmp jmp imul mov inc loopne sbb cwtl xor xchg pop pop xchg inc inc sub pop sbb inc cmp hlt inc int and enter add pusha pop test mov jp imul imul daa loope jl (bad) xchg inc roll xchg out sbb dec ret mov jmp mov es stos push int mov xor mov or cmpl cwtl pop call mov inc adc jle dec imul loop ds xorl or (bad) fstl (bad) jne dec add fsubrl shlb pop mov es push (bad) js lods rolb mov out mov nop xchg lea lea adc dec ret push mov mov pushf or les inc orl std cmp insb (bad) sbb or inc nop or dec frstor xchg jb add jmp rolb sub cmp fidivl aaa loopne adc aas or pop mov insb dec mov sub xor mov outsl sub pop or scas dec mov test xchg jo ret in inc movsb dec (bad) xchg inc sbb scas and pop add icebp or loopne jae imul mov cwtl cmpsl ss and xor push add cmpsb xor and xchg mov push fsubrp xchg in inc addr16 adc ss jg inc cmpsl inc inc popa inc ret add sub out pop and push adc loop xor pop or popa pop adc and dec mov lds xor xchg dec ret add sbb (bad) iret andl pop xchg jl lods inc mov add xchg xorb lods or xrelease xor sbb and sbb sub xchg and inc jg test clc mov rolb test or add inc mov enter inc sub and add sbb push movl xchg add or in adc or mov or ficompl mov shlb es rorb lods aam fstpl mov push xchg push scas adc or iret push push add mov fsubs lods sbb bound mov sbb fnstcw adc pop sub mov rcll push gs addb addl sbb pop jae cmc test aas je enter jne adc dec dec inc cltd andl daa adc js test inc mov xor sahf mov sbb icebp add push or cmp mov fnstenv inc test pusha mov decl and mov shr movsl add or push (bad) xor popa mov and mov clc push jno mov sub or fisttpll lds cmp cli xchg inc sub ret (bad) rorb sti mov imul cmp jmp mov sub jbe rorb jecxz push push and sbb mov sub movsl (bad) push popa add adc pop pushf hlt sbb jecxz pop mov mov push dec sub cld inc sbb pop xor test pop sub inc xchg lds cwtl sub aaa mov xor gs lret pusha loopne cmp add cmp cmp test in or sbb fld lcall sbb sub add pop stos andl jl insl pushf and sahf movb add pop cltd in sub and (bad) (bad) and xchg inc stc jne ret xchg inc outsl sub int3 cmp lods xchg sbb rorb mov inc mov sub daa je dec xor or and xchg loopne sub sbb ret sbb adcb lock sti loope sbb test adc add or ret (bad) mov xchg mov pusha jg sahf and hlt popa inc jg xchg (bad) loop jge roll or leave add mov gs in adc push dec sbb ja and inc lcall cmpsl xrelease fdivs (bad) add cmovs call clc out sarl nop ret cmp les and push and push fldl jmp or in jnp push sbb xor arpl mov inc das or sub sbb pop sbb xchg xlat pusha adc xor rorl mov cmc xchg gs and add add mov xor pop mov and xchg movsl and popf push add rorb divb insl (bad) sarb or pusha add sbb mov or or pop xchg push cmpsb insb push loope push movsb pop gs pop stos daa nop stos jno push adc bound add inc cmp xor cmp xor test add inc or roll icebp popa inc addl dec ret dec stos mov (bad) cmp lds add popf mov ss xchg push imul test xor xchg pop mov imul ret mov adc mov inc jno mov push loop cmpsb jne (bad) mov xor rcrl roll or aam shl add fld sbb (bad) insl dec pop mov (bad) add ficomp sub adc sbb call ja inc out xchg jmp dec movsl mov xor adc pop xchg lahf add addl adc sarb or sbb sbb fadd sbb inc aaa or mov arpl mov add cmp adc or rclb mov in or and adc inc sub and cmp scas dec cmp adc mov test inc dec sub pop call fwait mov (bad) jne xchg sub jp adc aad pushf hlt enter mov adc mov dec cmp sub add mov clc cltd daa mov and or test test or pop sahf inc push xchg sub popa and add cmp pop push mov and adc xor mov std fdivrp add inc mov leave ret sbb add cwtl enter fcmovnbe add inc mov test sub lret mov sub popa inc ret pusha inc jmp add mov xchg or and add pop jno stos test aaa and jecxz pop rcr lea push movsb or or or push clc pop jge mov xor lret mov insb jne adc xchg rcr or (bad) inc sbb and pusha mov dec or mov mov clc xchg sbb lea dec sbb mov jo pop dec xchg jns or stos or xchg mov lea cmp shlb xlat sbb adc adc inc cmc add nop test sbb (bad) leave adcl xor fldl push adc cmp mov push mov adc and pop xchg mov add add (bad) icebp or cmp stos pusha cltd test xor leave pop les (bad) lret (bad) push push sub push in pop lret jo sbb xor roll test outsl jno cmp inc mov mov or mov and ds push cmp pop inc mov adcb outsl jno add sbb adc or mov inc dec add sbb xor loope xor test cmp inc xor nop nop mov or xchg in push cmc pusha or inc inc xor lds cltd sbb xor add int imul push add and test dec xchg push mov insl or lcall push jecxz add pop (bad) sub sbb pop push test or (bad) push ltr call and lret lock pushf xchg push xchg jne sub push pop sub xor adc gs ret insl ret mov or ret push addb lods iret adc les shl mov or and mov inc dec mov push mov xchg sbb std lods xor inc shlb dec jg push daa sbb or dec lds cs xor add stos mov and sub lea es (bad) pop scas incl jmp fidivl and out insb cmp xchg or sbb add dec add xorl (bad) push jecxz imull lock data16 or insb pushf and std dec movsb fadd imul pop mov test ljmp push inc sub test test or out jecxz push and xor or lds or (bad) daa fwait pop les inc ljmp adc add push adc (bad) (bad) call lcall adc add dec sbbl rcrl adc repz fisubr mov adc inc push xor sub inc push inc loope mov push dec sbb sub nop xor popf xchg push pop add or addr16 stos sub sbb sub adcl dec repnz test daa jo mov xor aad jmp addb push (bad) rclb mov adc test jmp call mov xor aam dec adc js stc emms or xor adc dec lods cmp cltd pop inc push imul inc gs ss loope or aad inc fstpt xor (bad) xchg cmp adc pop mov mov jmp add mov mov sbb ret ds cmpsl mov pop movsb shll aam or sub lods xchg dec cmp and push shrb cmp cmp hlt mov sbb fsubr xchg pop mov imul xor mov xchg jmp sahf dec fidiv push sub rcrl add shll push shlb sbb arpl mov int3 inc push sub and mov sub pop sarl xchg xchg xchg inc mov dec les and push inc pop adc stos sub subl or inc fwait pop xor pushf imul sbb adc movsb ret adcl pop call mov xor dec sbb jp popf mov daa (bad) jne je adc cmp call xor jae test pop dec mov loope dec mulb sbb dec cmpsl aas push scas mov xorl cli xchg mov or mov sub xchg lds sbb pusha add add imul pop xchg (bad) mov adc dec sbb or aam lds and dec lods pushf popa or xor movsl or insl lret cmp test adc add test shll adc (bad) xor gs inc sbb sub sub dec mov or (bad) adc imul imul cmpsl cmp loopne je inc add sub in xchg test rolb out sbb xor aam pop add push shlb imul inc pop rcrb xor sbb es imul pop cmp (bad) shlb add js pop xor inc xchg lods inc cmp adc pop add dec scas or fs jge xor mov inc pusha adc (bad) rcll mov and insl sub xchg test mov pop dec jno xchg xor inc pop push aaa or aam lea icebp adc dec movsl adc pop data16 mov shlb push leave xor push leave icebp rolb sbb test adc cmp or sbb xorl push adc pusha lea fidivrl dec inc inc xchg adc test add push jl mov xchg or jne rcrl aas fwait lret sarb data16 jae inc cmp ret les adc iret cmpsb insb mov (bad) cmp mov ret xor pop sbb add dec sub bound pop fdivrs xchg and dec mov mov loop repnz pop sbb sub jecxz jb adc subl addb les add sahf xor dec icebp dec pop outsl out inc mov lods add popa adc xor (bad) cld adc xchg and sbb add (bad) hlt idivb shrb jbe pop aaa stos jnp (bad) mov jecxz cmp inc sub js lahf lret xor push pop mov add pop and andb or adc cmpsb mov xor sbb sbb xchg push xor jae or push sub lock jb mov xor inc add das push addr16 fsubs jno aaa rorb xor mov pop and sbb hlt movsb rcl fist push outsl inc mov punpcklbw adc or push add push test or xchg test add jg or sub scas adc popa mov movb dec inc push shll add dec pusha (bad) cmp push adc and test test das cmp leave rolb test incb ret cmp xorl inc test xor xlat addl rcr iret cmp mov or rol aam add sbb call lea xor out cmpsb ficompl (bad) fiaddl xor adc test push and xor fscale adc dec (bad) cmp pop shrl add xor xchg or xchg (bad) (bad) sub sbb push add daa insb or pop inc mov or inc xor popa cmp orl sub insl lea inc cmp (bad) lcall pop leave lds pop es or pop or and xor and addr16 xor jns lea test pop test idivl add inc pop add fisubl and inc test in jo test jecxz cmpsl test inc mov flds inc adcl clc jge ret in push sub push insb mov (bad) dec cmp cmp in mov sbb xchg cmpsb xchg insb mov lahf (bad) mov dec xchg adc into mov jge xor shl ret rol push imul dec (bad) popf inc dec xor mov and adcb inc cmp xor loop mov mov inc out daa mov jnp cmp jno rcll (bad) mov xchg out inc inc sahf inc pop cmp lods cmpl push sbb stos pop (bad) and sub cmp sub cmpsb dec insb ret aam mov addr16 lret push inc push mov add or add push or mov or and imul mov mov repz aam loop mov add flds and lret mov add (bad) xor jbe push test add dec adc mov insb mov cmpsb and adc or fs xchg lods dec pusha inc fidiv (bad) jb imul fmuls test lea xor and repnz cmp inc pop insb xor xor dec jmp add dec cmp xchg or dec inc dec cmp xor pop add cltd lods aad mov aam orl add and test xor pop cmp sub rorl adc pop push fstps js dec cmp je push mov repz lcall pop inc or xchg (bad) repz dec (bad) push fsubs and dec jmp loopne mov mov or sub cmp les test ret int3 and (bad) and xor test xorl dec clc jmp test inc jnp and cwtl out cwtl mov insb cmp loope loope popa or pop inc jb test insl rorl jmp daa nop or or push sub getsec ss mov popf cmp enter mov jno sub xchg adcl test sti xor add jbe mov mov sub or and ret ret xor jp or inc pusha jo cmpsl popa cmp push dec sahf mov pop test add ds and sub cmp adc xchg sub cmp pop int3 xchg add loopne cmp xor mov sbb (bad) fcomp xchg popf mov pusha mov xchg or sub and enter sahf xor cltd movsl inc ret fidivr or push inc xchg mov mov sub add nop pop cli mov sub xor fs into push sbb andl or cmp xor pop xor cmpb mov mov sbb adc daa cmp andl inc and cmp dec mov sbb and push adcb ret adc push aaa js or call dec dec xor push add adc (bad) dec daa mov (bad) pop mov sub mov inc stos bound jne int3 xchg (bad) jge lcall push or jmp add mov sbb mov lods je insl sub aad rclb aaa or ror push jb rcrb mov cmpsb nop push add and inc movsb push or push movsb imul xchg pusha and or inc imulb add insl fistpl add cmp mov lret adc sbb movsl dec xlat mov mov sub and mov rcrl sub mov lock das xor and sub adc pusha imul xor sub mov je out add mov mov aaa (bad) push sbb into nop movsl stos and push popa inc xchg mov sub add cmpsb arpl inc aaa xor sub popf sbb xor jge dec dec adc xchg dec sbb je mov test enter push add push sbb add cmp popa push add sub add mov cmp outsl push pop in cltd jno pop mov mov imul movsl adc jge push xor icebp or jecxz pusha dec sbb xor data16 sysenter inc or mov mov pop xchg mov cmp rorw (bad) jo (bad) push ljmp push adc sub pop adc (bad) js push dec test insb sbb xorps cmc rolb and dec out xchg or or inc xor adcl pop xchg sbb or add and inc and mov adc xchg icebp add adc ret push mov adc jo xor lds inc loopne mov es inc dec clc or imul add and psubusw imul xor movsl shrb push andb sub arpl pop orl leave (bad) cmpsl jo insb cmp or push push pop jb test mov lds mov adc xor rolb add mov cmpl loopne push insl adc xchg dec imul out xor test imul cmp push or xor sub or or cmp hlt les sbb lds rclb pop arpl xchg icebp and add lcall roll adc sub and add pop sbb test and mov cmp lods add adc bound pop sbb inc mov mov (bad) dec (bad) sub sub je jb add push mov sub or arpl push or fildl dec push insl (bad) mov pop add (bad) adc xor mov or insl and mov and cld and mov push (bad) mov or jae nop mov pushf xor rcl repz lock pop adc cmp dec xor or xor ret (bad) and ja jno sahf xor jle mov mov dec add add mov sbb xchg repnz mov sbb jo mov test sub sbb movsl push push mov stc push inc xchg sbb int push inc or imul or lds loope mov sbb jnp inc inc inc push mov push and xor or ret xor ss and sub movsl xor pushl add xor mov xor sbb nop mov ret xor inc addr16 inc movsl mov (bad) ss pusha imul dec xchg pop adc mov add es inc add popa adc and mov mov push or lcall aaa fmulp xor arpl cmc cmpsb sub sahf adc xchg (bad) and lea lock leave insb add mov and xor fmull outsl lods inc xchg xchg mov xor mov int3 out mov push xor cmpl imul jecxz pushf pusha sbb jae adc lahf addr16 fldenv pop sub arpl or sub in mov push iret mov mov push insb and push and lods or cmp inc pusha adc shll mov fistpl andl movsl add popa subl and imul mov jge (bad) xchg test stc push inc adc inc ret dec sub ljmp addr16 shrb xor mov xor hlt ret xor add push add fcoms jecxz add and sarb mov sbb daa cmpl roll dec sbbl nop je xor xor cmp lcall test add dec jle dec push nop and pusha popf add addr16 ret mov adc or xor jns test or out lds and lea lret or adc and xchg or jnp,pn je test push mov or dec add dec cmpsl xchg fiaddl insb xor jns cwtl and xchg out add fidivl movsl inc or add movsb lcall adc stos sub xchg pop (bad) jb jmp push dec in mov dec sbb arpl adc add jmp sbb out push popa lods jno imul cwtl inc xorl sbb sub sbb mov sysret notb mov sub ds and insl xor xchg test inc adc sub push mov (bad) cmp pop pop push push add push pop rolb lods repnz cmp jecxz lock pop dec cmpsl cmp mov mov xor pushf mov pop cmp addr16 push inc leave inc xor orl pop test mov roll data16 cltd sub xchg sbb nop cmp sbbl out and or mov mov lods adc aaa pop cmpsb or mov cmp hlt (bad) sti subb inc or mov rolb lea jbe adc cmp sbb movsl dec std sub out fs aam dec or in mov and movsb fwait mov or jbe push and jo adc in adc mov push pop sbb sarl sub adc sbb mov or xchg push mov jne jae add adc lods push push outsl ret test sbb xchg dec cmp movsb pop lock inc sub mov jg and xor mov subl imul push xor mov lods cs add and sbb xchg push nop add mov mov pusha shlb (bad) jle mov movsl mov xchg test mov cmpsb xor std or inc pop out lods adc sbb pop adc sub (bad) in mov cs sbb cli add or dec xchg cmpsl jecxz lods orl fld sbb mov imul mov push xor sbb js cmpsl repz pop add aam rcrb pusha xor insl add jmp sahf inc and in dec cmp mov sub xor or jo ljmp cld popf pusha lods inc mov gs add push rcl push mov pop rcll push daa or subb xor inc bsr lds sub or push xchg inc sbb sub sub into and inc and pop cmp jl es xor std dec xor movsl xor add loope movsb sbb rcll cmp sahf or mov lods jo or popa inc mov dec mov fwait or jno xchg scas fld or mov outsl xchg push or test lret and test sbb xor ss sbb sub push outsb lds je inc xor or xchg jne pop sub push and inc xor add inc cmp inc mov sub popa inc or or jno rorb xor adcl (bad) dec adc imul or jmp mov imul jne imul xor xor cmp push mov mov pop or ljmp sbb cltd push xchg cmpsl lcall fadd jge call inc cmp adc xchg cmpsl lret or inc inc test mov dec ss pop shlb mov lret add dec adc inc xor fsts push push sub sti push sbb sbb sub mov imul roll pushf push int3 repz cmc imul dec lods shlb pop pop mov adc (bad) mov mov sub jne cmpb sbb add mov adc cmpl adc adc dec fld rolb ret add test push pop mov sub dec movsb flds add push sub or mov popa sbb pop daa gs push inc inc shlb ss dec test (bad) hlt pop out xor inc xchg add loopne mov pop pop adcl add sbb mov add js xor xchg xchg test daa push andb sbb push push inc test imul dec cmp popa insl (bad) stos or cmp and xchg imul xchg out rcrl (bad) sti push daa inc mov add mov cmp fwait les jno push (bad) xor aaa cmp push mov loope inc mov lock jle xor (bad) adc and and adc inc xchg mov xor pusha aaa jno out shll xchg sbb inc mov cltd popf mov xor add xchg repz mov add test fnstcw add or jg cmpsb movsb mov jl mov add cvttps2pi add imul outsl add flds xor sbb fdivl xchg (bad) cmp or xorl mov push and jecxz pop mov push and xor lods dec jge xor inc and xchg test adc (bad) jae nop add (bad) ja (bad) sub add dec mov fcom push xor xchg shlb or je stos xor push push iret xchg idivb jnp xchg or xchg xchg insb aam xor test and insb imul sub cmp dec push das bound pop fldt sub mov mov in mov xchg inc sub dec pop pop inc or sbb mov mov gs or add adc nop push pop dec pop loopne jecxz inc sub lock fwait push push sbb mov mov or cmp dec sahf add ljmp popl sub add sahf jnp xor mov xor js sub sarb sbb rolb leave addb push sbb pop incl cmp push or mov test push hlt pop leave lea xchg or je sbb push and sbb es inc add sbb add pop mov adc cmpl rorb shll lret or xor add push popa sub xlat pop xor leave shrb js pop enter imulb fnstenv pop pop test xchg and dec xchg test add sub fldl icebp repz (bad) movsl sbb pop pusha sub inc mov dec out jg cmp ss (bad) in push enter jne daa insb popa loope insl enter inc sete dec sub mov aas mov mov xchg sub sbb push scas inc and xchg sub push xor add mov imul fdivs adc or nop or fmuls rorl lret mov gs xchg push addl sahf sub test sbb mov push dec ss hlt mov xorl sbb fcomi inc jp adc pop (bad) mov xchg icebp inc (bad) push (bad) mov push mov mov out test xchg xchg cmpsl cmp scas nop pop popf push xor adc mov sub mov mov aad cmp sub cmp push fsubs divl xchg fs andl imul push test mov cmp dec loope js add stos imul mov loopne ret insl add mov (bad) push test and popa loopne or xchg loopne es scas in fcomps punpcklbw mov fwait cmp and outsl sahf adc jno popa sahf add mov stc or mov push sbb mov xor mov and std adc loopne jnp jbe (bad) add (bad) imul push aam addr16 insb loope pop roll insl inc inc adc mov cmp mov test cmp icebp aad jge les mov rclb pop imul push push jb xchg mov lret lock or cld pop sub xor mov mov and sbb fimull or jg or or sbb xor pusha pop xchg sub sbb xor rcl fidiv xchg xor pop outsl loope add flds jo cs inc pop xor cli xchg movsl lods mov nop (bad) lock mov sub sbb (bad) pop or shrb mov ret ss lds xchg sub dec sbb out adc add inc adc rcrb ret fstpt cmp popa jge fidiv mov add fist push sub add test and dec mov mov add dec ss inc xor (bad) (bad) xchg add add pop cmp (bad) mov mov adc adc inc ret gs es mov les xorl adc lret add test mov mov aas cmp loope jmp gs sub inc xor loope xchg outsl sbb and dec mov pushf lock fcoms lret insb fmull lock loop and enter shlb fwait (bad) xor (bad) xor add adc rolb sub sbb inc push (bad) sub jmp jg sbb push fisttpll mov fcomps add lahf dec enter sbb add adc adc push loopne aam cmp xor fwait or sbb aaa aad or cmp or xor jmp rcrl mov fldt (bad) jns mov and adc xchg outsl xor mov daa scas call call (bad) xor (bad) mov aaa cmpsl lea pop xchg cld arpl pushf aam (bad) mov pusha and andb inc mov loopne cmp lret addl (bad) sbb lea loopne xor das sub pop jmp and sub loope out mov and gs call imul mov addr16 xor or add imul pop add mov and jb rcl mov add inc mov sbb repnz xor push sahf mov loope movsl mov scas mov mov std or xlat xor shlb xchg nop add or (bad) ficompl jo jge cmpsl mov xor (bad) fs shr push xor outsl icebp xchg test ret lcall add (bad) aaa movsb xor (bad) xchg add lcall lods add in pop or fs sbb pop xor icebp lret inc xlat inc xlat xor leave pop cmpsl (bad) xor mov movsb jne push xor and in push inc das push xor cmp push arpl xchg inc pop sbb cmp pop rolb push jno ret es inc repnz mov loopne sbb xor sbb push inc pop dec pop xor mov mov pop test fdivl fld1 xor fisub imul xor enter dec cmp ss sub ret dec or ret (bad) cmp mov mov sbb mov dec jns pop aam pop call add mov xor xor nop mov xchg ret std xor jae mov mov cmp mov shrl xchg dec int add jge dec and cs or or mov xor xor (bad) adc mov dec loop lods dec stos mov arpl lods push pop dec pop push je inc xor push sbb xor nop ljmp jl dec and sub cmp pusha lods mov xchg or pusha dec cmp call addr16 notl xchg and pusha subb aad push xchg inc inc adc dec push icebp add insb add hlt lret lods mov xchg mov add and fwait mov pushl mov mov lds mov out aaa jmp rcl or (bad) fisub pop fs inc add xchg xor mov add loope imul imul mov jg insb movsb lret add push mov push cmp and adc rcrb je iret xor xor cmpsb rclb and add test xor push stos imul push xchg xor or (bad) adc popa dec out xor (bad) test cmp (bad) lcall out ret xor mov gs stc stos cmp xchg push ret stos ljmp rcrb js ljmp push push or pushf xchg mov popf xor mov pop insl add inc enter pop mov jns cmp mov sbb mov or add sbb push inc jo jmp flds ds jl movsb bound dec add or add mov xor out pop xchg and js outsb movsb (bad) and sub add dec rcrl cmp (bad) daa addl inc lods cwtl push push push or out mov notl push nop lds fldl push mov dec pusha out push push pushf inc lods movsb dec stc inc push xchg xchg cltd xchg mov movb insb xchg or push and or loopne and mov dec xor enter sbb jmp cmpsl add adc das (bad) aad sub pop xchg movsb push sub jno loopne push xor test or push sbb lds push push and jno push sbb popf push or movsb sub adcl addr16 bound (bad) fisubl mov mov inc adc test in mov fwait adc xchg lock mov dec lret fadds or mov inc or dec ss sbb push idivb push mov movsl cld or in xor add add push mov lcall icebp sub add xchg and movsb xchg adcb mov sub cmp mov sub add sarb add ret bound and inc adc xchg dec iret test and in cmp xchg adc sub mov inc dec pop sahf nop cmp xchg movsb xchg les mov and enter sub lods add movsl sub fist mov lock mov dec xor adc push sbb cmp into push and cld xchg test lret outsb lcall daa add and xchg push ss daa push mov adc push dec mov js pushf xor les repz mov adc xor add bound mov adc pop inc xor sbb inc inc pop dec cld xor rorb push adcl mov mov and test xor je icebp mov dec popa cmp push faddl inc (bad) and push pop mov dec js mov popf xor lret out xchg sub mov xor push xor xor shrl dec sbb or xchg roll call jo mov shlb fs inc pop xchg movsl fistpl and push inc stos xlat xchg xchg push in or in adc adc fidivl xor or ds rcll jo mov fnstsw push jb pop ret test add dec xor pop and and mov xor adc and (bad) jo push in enter adc push mov mov pop dec jo add mov sub rorb pushf lret or adc rolb or in popa sbbl pop pop or mov orb pop dec popa imul dec aaa (bad) push xor xor add test inc pop sub insl lods dec cmp jns xchg mov or sbb loop dec xchg (bad) or (bad) push push ss sub jae xchg add pop adc add and cs fiaddl (bad) sbb xor dec adc xchg (bad) rcll push push xor add sub push imul adc xlat inc lods lds adc xor fnsave sub sbb popa das mov sub pop aaa movsl popf xchg cmp adc sub mov jmp insb inc xchg into adc (bad) xchg call adc mov aas sub or push push pop inc jmp lock xor sub inc andl push nop mov jecxz inc andb xchg test add cld sub xor iret mov push jbe mov sahf jnp mov cwtl adc call or xchg or lret jp insb xchg dec sbbl mov cmp shl sbb imul push pop sub int xchg xchg lock movnti push push or popa int3 and sub lods out ficomp addl pop movsb push lret pop pop loopne push rorl mov cs das sub loop xchg fisttpll addr16 jmp js adc or dec sbb out xor xchg add sub sub or test sbb and aaa inc or nop scas lods add cmp movsb adc pusha inc jmp sub dec or sbb popf outsb addr16 loope cmc add jb int subb pop push call and jg xchg call ss addl leave xchg jp add rclb jmp (bad) sbb add andl adc ss xchg nop cs leave sub insb mov and cmp xor fldl lret sbb insl mov int inc push rorb inc add iret inc bound mov sub xorb push notl jbe or imul adc inc mov xor mov jmp jo mov jbe bound xchg pop or or test xchg adc test add jmp mov aam adc imul aad lock pop push test nop pop int3 dec cmp or inc popa or nop sbb xor mov js (bad) xchg xor add lods push dec loopne xor mov scas add xchg add pusha cmp nopl pop adc int adcb (bad) leave jo jge mov sub cmp and test (bad) dec mov repz xchg loopne gs jno dec fadds push lahf pusha pop test lret outsb stos andl cmp lea mov addr16 montmul cmpsb inc jmp clc xchg ss dec adc xor mov hlt pop cmp cmp xor push xor xor ret pop adc (bad) icebp push mov and repz pop daa mov mov ss rcll sbb lret in sub pushf add pop mov sub mov xchg fisttpl xor push movsb popa je inc lods cmp (bad) mov push lock shr xchg popa pop sbb lock (bad) or popf aaa popa js mov push jle outsl pop pop xor mov push ret shlb mov mov add inc adc sub fwait sub pusha fcomps xchg cmp sub or sbb adc arpl test gs stc mov lods imul adc xor pop push popa js or dec inc mulps adc push inc (bad) mov icebp lcall add inc add mov pop mov orl dec sub adc test call (bad) adc or dec xchg pop jmp out lods inc test xor (bad) loopne mov inc stos adc adc push lcall rcrb add fwait sbb mov add imul sahf movsl dec add and and movsb dec xlat adc xchg insl lea add arpl leave add js inc test arpl adcb addl sub mov jo push inc call subl (bad) xchg stos and leave bound push push pop mov xchg mov cmp mov inc test and push (bad) bound aaa in add add add aam push pop adc lea or xor mov xor mov or or push xchg and jo inc aaa sub mov or jge icebp fs sub aaa lahf xchg add rcll test cmpl cmpsb pushf xor inc mov sub or lds sbb jecxz push push insb push mov xor jnp dec (bad) and ret push dec outsl xchg add sub dec push dec push cmpl mov add inc jo sbb xchg xchg push dec call and push cmp or arpl mov inc cmp push (bad) mov sbb stc inc ret vmread or push xchg xor rorb ret jo adc mov int3 arpl jbe test add js cmp cmp movsl and imul mov add inc insl loope test daa or pushf test push (bad) adc xor jno aaa mov addr16 cmp xor adc and arpl shrl push (bad) add sub fs inc out or and sub roll sub and mov mov xor arpl inc ret imul rol nop loope pop sub andl and adc shll push mov mov in stc dec rcrl xor pusha adc orb fcmovnu sub pop enter inc ret xchg sbb mov rclb das jmp xor out daa insb add imul ret jmp dec sub rorb adc or add dec add fdivl jecxz test add ror push xchg dec push xor and into xchg (bad) cwtl xchg mov and loope (bad) ja xorl dec mov aas movsl mulb std pop cmp in mov mov pop push iret popa cmp rolb rcll cwtl mov aaa dec sub pop das dec xchg movsl xchg divl or insl adc inc es ret sub dec clc jo mov add adc subl dec push add test push lock mov (bad) adc mov mov add adc cmpsb lods mov mov test cmp mov mov imul jecxz lcall inc pop popa lret mov (bad) jno inc adc adc fisttpll dec sbb lret mov mov jmp sbb xchg mov test push pop inc and and mov ljmp lods cmc jno sbb mov dec popa cmp rclb or dec mov mov lea (bad) adc loopne adc or mov push or (bad) xchg inc cwtl sbb add lock movsb jno jmp jno fimull dec xor and popa push xchg add dec adc icebp or mov or sub and insl mov mov cwtl sub xchg arpl sub or sub add mov and (bad) mov add lds rolb and ret movsl gs stc es rcll enter xor and jmp xchg adc prefetcht1 (bad) mov adc pop fbld (bad) or pop inc adc mov ret adc sub inc test lds lea or sbb sub or das call xchg xor out addl aaa imul (bad) je push sub (bad) xor (bad) aam enter cmp and mov inc call push mov pop mov pop mov dec roll and sub mov and enter sub (bad) push pop xchg xchg outsb pop jmp add in imul jle mov and push push add sub dec inc ljmp xor pushf and hlt xor gs sbb fs adc insl sti add and xor push cmp sahf (bad) xchg lods dec mov cmp add movsb inc inc (bad) jno fcom pop imul cmpsl mov lea dec shr xchg adc add mov add dec (bad) mov push mov mov test nop pop push inc adc mulb adc insb push sub fistpl jmp test pop gs fwait sar adc sbb or sub or cmp dec pusha insb movsb jle add out sbb subps fmull sub test insl adc sbbb pop addl or pop lret lret rorl clc mov mov test aad dec outsw pop incb or inc mov jnp or nop sarb dec add xchg xor push xor adc adc dec add push enter or or xchg inc imul loope cmpsl sub popa mov and mov lret orl push rclb ret lods lea mov popf xor sub or sbb mov lret add adc sub jecxz fs scas (bad) fldenv imul loopne std sub dec js jecxz mov sti mov sub mov mov les adc inc xor sub xor iret pop lea add popa aas and inc sub mov xor sbb fisubl pop mov cmp sub icebp popf and fimul and imul loope mul cmpsl mov sarl sub or sar mov push popa sub xchg pop pop mov mov inc or and pop pop pop inc adcl or and cmc xor loope mov sbb fs popa cwtl dec je (bad) pop adcl and and or clc add lret lock xchg jecxz xchg ror xor and sbb add adc xchg mov inc cwtl inc xchg inc pop inc inc ret test arpl mov popa cmp pusha mov lods mov or and fnstenv orl sbb sub rclb jp ss insb xchg add (bad) scas popa adc and insl cmp mov sahf jns xchg push xor loope sbb rol mov ljmp xor sarb adc lea jnp xor push fwait mov sbb xchg and adcb mov cmp sbbb add pop jmp or and cmp mov test and js lahf sbb and lods (bad) xor mov mov fs add sbb adc add push daa lcall xchg jge cmpsl sbb inc test aad adc mov or mov fcmovne call inc adc mov pop out mov xor adc pop jb push mov xchg mov ss and adc cmp dec or xchg mov out xor or push inc sub lahf push je or into cmp testb sbb stos adc popa pop ss xor dec add jae sbb xchg sub sarl in outsb dec pop sub sbb xor out xor int3 add loopne pusha sub xchg or push inc sbb pop movb push mov add jne pop test shll bound cmpb dec (bad) icebp xchg xor mov insb adc push lock and (bad) adcl xor lret adc lock inc dec push xor add inc dec movsl scas cmp cmp xor daa push ss test dec pop pop xor insl js ljmp scas or xchg out rorb push add dec scas add mov addb out stos sub jbe mov daa fadds aad test adc push fucomip test rcll jno ja xchg adc ss inc and gs add add sub ss xchg xchg and in pop add jecxz dec pop jle inc sub push loope add lret arpl lret mov or mov mov sbb pusha movb xor or jno dec movsb dec leave cwtl dec inc mov pop loopne jne aas repz sub or xchg lcall lods or xchg pop jb mov push test xchg js or test jo xchg int3 adc pop lds fisubr sub cs mov add cmp adc rcll popa inc test bound es xor pop movsb lock aad xor cmp mov popa arpl in (bad) lods sbb mov and sub dec adc das ret push iret ret jbe push movsb mov cwtl (bad) jge mov loope js jmp sub mov test popa cmp (bad) pop and lcall fbld cmc fmuls xor xor pop cmp jp push adc mov icebp mov dec (bad) xor add xor xor sbb out lods imul xchg data16 cmc inc or pop mov push jne adc sbb cs popf ffreep push push add jns xchg loopne fst pop leave fwait push scas inc adc add aas cmp gs (bad) movsb add xchg sub mov xchg loopne ficomp das lods fmuls outsl addr16 cmp and ret pop daa cmp sub adc loope fdivs jne test inc insl and mov sub test lret mov fsubrl or or stos pop xchg mov loopne (bad) cmpb inc or insl fistpll or movsb sbb and pusha or push dec dec mov pusha cs xor add inc xchg jns or pusha jno pop dec xchg test xorb or and or orl xor dec or add push jecxz mov or dec aaa and outsb push test aaa add or inc jo mov pop xchg jo push out pop fcoml pop repz push push fistpl jno sbb test nop or xor xor push insb loop nop xchg xor jns pop dec sub nop adc outsb ret test sbb (bad) mov sbb or inc push nop (bad) xor or and sub xorl mov jmp inc icebp cmp sub cmp inc and mov subl pop jo nop lods roll xor jecxz popa dec xor shll ss add inc jbe int3 cmpb inc mov sbb rorb enter popa mov aam or icebp jno inc add mov and add pop or mov je xor xchg fs in xchg and loope pop test dec cmp (bad) push add sub sub les or pop push pop mov movsl push add xor jbe nop and movsl adc inc scas sub ret (bad) fdivl or mov cmp test sbb xor (bad) sti mov sub ja or addr16 sub sbb jo xchg hlt fwait mov fstp mov out push pop sub xor andl addl and dec imul mov sbb fsts xor mov jmp dec mov pop fld sbb adc push xor jno daa ret mov scas dec sarl and or and or jae push inc stos xchg popf xor (bad) mov pusha test push (bad) cmp xor imul cmp xchg lret push pop dec shll pusha push adc mov push inc or inc enter test out andl icebp les dec popl pusha sub or dec inc cmp (bad) xor leave xorb sbb jo xchg inc pop push push inc xor mulb rcrb mov leave pop int rcll test lcall add mov sub jecxz sbb sbb shrb ret call test pop lahf pop push data16 cmp nop xor push xor sub adc (bad) sub inc xchg dec and adc fwait nop push aam flds push jecxz imul pop add xor xchg adc lea push or sub adc add dec dec mov adc xor lock xchg mov sbb dec add insb adc test sub xchg and inc mov leave js xor xlat and (bad) xor mov xchg xor jo cwtl xor push push xchg xor or popa sub popa addl int3 push xchg dec and add movsb (bad) lock cs and test insb sub mov xor ss cmp je (bad) das inc rolb test movsl sub pop iret popa gs mov dec xchg inc cmp sbb pop mov pop inc push sbb pop cli pop inc mov and ret sub xor push or pop pop nop or jg adc pusha movsl (bad) dec jl sbb les xor and ss push mov and lods in mov sbb in inc leave dec xchg stc sub jne,pn adc or test popa and dec sbb xchg cmp loopne mov pop add mov daa (bad) jo adc (bad) xor sub adc pusha inc or add dec (bad) push test xor and pushf or xchg les mov bound mov push rcrb iret mov and ret xor sub push imul lock loope vpsraw mov cmp mov inc mov loopne and add or in mov aaa mov push sub outsl enter lods test add sti or mov xchg mov adc inc (bad) or imul and jo rorl push xor dec sub and imul inc popa push lret mov ds push stos sub lock dec and sbb jne popa enter icebp ret push inc mov shlb add call ud2 or jns dec sbb mov (bad) (bad) dec adc mov mov ret popa lahf cs push hlt iret dec jecxz test pusha clc and add add out pusha mov inc and frstor fdiv nop xchg lahf and lods sbb test gs xor add or insb cmpsl cmpsb or and lcall xor rcll adc lock stos xchg inc pop mov xorl loopne push push mov pusha daa mov add (bad) out ficoml int3 sbb dec enter mov movsl pushf mov or or pushl sbb (bad) lds ss sbb add cmc mov cltd or setno cmpsb push pusha or leave mov mov adc cmp test xor jmp or push loop xor pop adc sarl jmp inc gs jae test cmp or adc shrl add jne xlat inc test outsb xor xor xor mov scas popf cmpsb sub sub mov test push dec pop cltd dec jecxz adc add jb sub xchg add inc outsl pop or cmp mov pop adc dec sbb or add hlt mov popa adc xchg xchg adc sub xor dec or nop pop loope movb xor inc test jge pop or fiaddl (bad) inc inc test leave insl loopne js or outsb mov ret sbb mov xor popa and nop or scas in or or outsb xchg movsb mov push or and pushl addl push adc cmp and nop jecxz add mov inc mov js fcoms lods sub call test mov leave les leave cmpb (bad) xor pop or pop mov sbb inc mov or rolw int inc inc add repz xchg or andl dec divl push mov test add ss addr16 daa addb or sbb xchg mov mov sub das testl mov nop ret push test add or and jns mov int3 ss jecxz xor or inc unpckhps sub icebp mov xor cmp js dec add subl lods and imul and stos xor cmp test pop jns sahf and or push inc add (bad) imul jo arpl (bad) aaa mov and sbb adcl jge inc mov jmp stc aad mov mov push add repz call shrb jno fildl pop dec aaa push or xorl xchg xor call addl pop imul addr16 adc dec xchg add push or addr16 adc (bad) loopne add jecxz mov mov xchg pop push mov rorl (bad) movsb loopne adc movsb push or cmc add xor push add jno pop jo inc in xor leave inc mov jmp add mov loop xchg pop sbb aam sti std inc mov and inc dec dec mov adc mov pop lcall push push lds add subb test adc and xor lea push dec nop lods pusha loope jge and dec pusha inc xchg xchg or inc or cmp or andb cmp test (bad) (bad) sub sub inc orl adc jb insl je test (bad) stc push push xchg or cmpsl add add lods std insb or xchg aad mov xorl mov sbbb ret sbb jb xchg outsb rclb xchg mov jge ret stos (bad) fstpt inc pop adc enter and mov sub and icebp mov sub inc adc xor jecxz xchg dec dec pop or xor lds test or sbb dec dec adc sbb mov lahf push ffreep push nop and mov xchg or pop or or ret sbb mov pusha inc int call mov ret cmp sub outsb out mov sahf test repnz (bad) cwtl xchg pop cmp or rolb cwtl mov movsl dec lahf mov icebp or mov push pop pop fwait js mov test popa rcl cmp imulb xchg inc xor push or push and mov jge xchg adc pop popa imul inc test and pop add imul mov mov loopne jae pushf dec (bad) mov fdivl xchg adc and jmp leave or mov xchg cmp (bad) xor in sbb or repnz popa inc xor sub lock jno or xor push sbb dec hlt mov inc xor (bad) jo inc (bad) leave inc cmpsl inc push (bad) inc sub or lret nop sbb inc mov xchg das add adc mov cmpsl xor test pop sarb adc dec push nop inc roll adc rol je loopne pushf insb pusha push push arpl xchg sbb int test test xor push insb (bad) mov test xchg lods imul aam mov rorb imul add movsb cs and addl pop pop (bad) and xor roll cmp es or inc pop mov cmp (bad) xor jae xor xchg dec movaps push xchg dec (bad) jp push xchg jne or or loopne popa dec dec nop xchg sub std repnz pop cmp adc inc xor inc add sub or daa and or add add rcrb lret add insb rol test js test push mov jne,pn jecxz mov xchg xchg push xor dec pop adc xor packssdw pop push mov nop push add adc pop cmp sbb add mov inc push pop xchg pushl inc pop xor adc cmp sbb cmp xchg jg sbbb pushf test popf test shll stos dec sbb movsl adc mov dec loop and inc dec mov mov cmpsl arpl pop mov cli cs sub fadds adc inc ljmp fmulp outsl mov xor sbb add sub or mov ljmp lods add stos es xchg mov sahf add or mov (bad) and xchg mov xor (bad) movsl or mov test repz xor loopne or cmp push inc xor stc jnp sbb mov adc (bad) adc xor push mov je ljmp or sub test xor icebp stc arpl mov rcpps inc mov sbb int3 out xor and xchg test dec dec aad aaa inc and xor cmp adc sub dec arpl mov (bad) add popa pusha mov imul rolb jp push and mov movsb cwtl aas and xor or mov jecxz and mov jno loope push fldcw movsb inc sbb push xchg sbb lock push inc adc push xor js sub xchg int and cmpsb mov and inc test sbb sub xor dec xchg or mov jnp fiadd xlat (bad) cmpsl xor pushf mov mov and pusha mov xlat sarl add add ret jg xor lds cmp xchg add sbb arpl shrb mov push pusha aad cmp (bad) lcall mov sub lahf add ret push push das cmpsb mov or mov or (bad) mov ret pop les jmp xor xchg mov sbb orl dec pop (bad) loopne jl fcoms inc test cmp cmpsb mov dec test adc push daa xchg or xor cmpsl ret pop movsb rcl xchg jbe jp sbb ss das sub inc add mov mov movsb push or (bad) or push insb adc inc jno sbb dec and jmp push xor (bad) (bad) xchg lock xchg push mov pushf pop in xor push inc addl ljmp xchg fs pop inc inc or ss jo,pt add fwait xchg jmp mov aaa adc cmp cwtl pushf inc mov adc dec fst sbb sub add pusha dec add test mov xor sub js fistpll test or mov and test cmpsl mov and pop jne add (bad) lcall inc xor cli xchg inc and inc ficom mov test add repnz sbb dec push pushaw inc cmp dec add mov ret and jno imul aam in push pop xor (bad) mov cmp dec add bound pusha push push lods push and mov sub dec xchg xor pop add lea inc push push mov push and cmp sbb mov xor ret mov insl nop popf subb add lods dec or call rcrb aad xor sarb lea mov ret inc inc aam push cmp adc les mov inc aaa jo push pop add mov clc lds push aam or push nop jge push add cmpsl insb fldl xchg and pusha lahf gs nop mov fwait jb sahf inc test push popa enter and mov leave mov test call or call jecxz dec (bad) mov add stc and or sbb adc mov pop xchg adc movsl xchg and addl push das lods add sub push or xor xchg ret or push xchg pop add or cmp movsb daa in cmp daa gs dec xor add into jo xlat pop push xchg aaa mov fist add and int stos dec ret out jge push xchg adc inc add pop xchg lock add (bad) push or xchg jno xchg add (bad) sbb sbb les xlat mov mov arpl or push inc add test ret adc enter cmp lods xor clc jbe rclb or sub loop stos jle mov cmp pop mov mov jns addl or stos xchg push andl (bad) cmp and rol add sarl xor adc add xchg xor dec lods pusha and loopne fnsave pushf (bad) lods subl adc cmovb add gs and add jp mov sbb daa cmp mov add into add pop add pop (bad) adc lock inc data16 add dec icebp cltd and adc into xor popa adc stos add rcrb out ret jb ret sbb fwait les das add xor call imul sbb mov js js lret mov sub jb test inc push and xor test adc loope adc out adc pop or pushf je dec ret sbbl jne or data16 add cmp cmp adc sbb (bad) aam and jns loopne push pop or cltd pop test mov pop dec mov roll inc xor sub shl mov arpl mov xor or (bad) push xor sbb push sbb sub xchg lret popf and jae repnz jb sub and pop mov and jne pop pop inc loopne inc inc imul mov movsl cmp adc fxch push dec jbe and nop add xlat lock sub lods add test lods or (bad) jno pop (bad) ret and mov cmpsl or adcl xchg ficompl stc mov sbb mov stos xor add mov xor mov or cmp mov ss jo or and inc mov inc gs std pop ret inc orl and nop xchg xor pop sbb or mov lds or pop xchg loopne pop jae or and aas xor mov and xor movsb push add xor rorb pop xor cmc sub mov mov lods push sub shrl sub mov push rorb mov xor cmp push popa mov insb pop mov xchg addl mov jnp into sbb inc insl xchg mov xchg jb jg xor xor mov call rorl aad and add mov inc mov xchg inc xor mov fldt leave dec es iret fsubrl and add popf nop dec enter sub (bad) loopne lret push test lahf enter sbb fsubrs (bad) (bad) add add popa test xchg ss add mov mov mov fidiv push or add push mov add insl mov jne in xor rclb add jp cmp xchg into dec jmp aam add pop cmp xor shl cmp cmpsb sub cwtl ljmp push adc pop jbe and pusha sub push pop nop jmp mov nop add (bad) and add clc add lret adc insb and sub cmp lods cmp pop xor dec cwtl aaa and sbb out mov repnz mov jbe,pn bts pop ret inc and dec mov imul jno daa inc outsl mov outsl xor std xchg and inc cmp (bad) fdivl movsl movsl xor pop add adc add or pop dec fldl testl loopne sbb or fcoms sub cmp rorb jle mov and shrb icebp sub sub push push push test sbb popa icebp cmp inc pop push cmpsb xchg lahf adc cmp adc and ret mov inc inc (bad) or bswap loope ds cmp xor adc pusha fldt pop push push xor rcrl add and mov sbb add or xor mov cmp jg popa pop cmp add add cltd adc and aaa jl xchg and imul pop sbb and pop dec xor push ret and cmp out ss rorb dec jg sbb adc pop outsl xor aaa jne insb inc xor sbbl xchg mov rorl xchg xor dec cmp int inc loope xchg or adc mov hlt popa das fwait or imul leave sbb mov mov stos test or fcmovnbe sub test xchg pop and dec inc dec arpl add fs xor icebp inc inc lret inc adc mov push jmp das enter mov and jns (bad) inc or cmp or pop fwait les loopne push aam or ljmp push and shl mov add pop pop jno adc xchg push push gs sub pusha sub inc test cmp sub movnti add xorb or inc pushl mov add test les mov orb adc jecxz adc jo je (bad) outsb add inc pop jmp and xchg xchg (bad) xor fwait sar sub orl mov or clc sub push adc stc pusha add cltd inc push andb dec adc add shlb cmp xor xchg or sub aam and xor push mov push sub fwait sub cmpsb adc mov jge cmpsl mov push movsl das sub ja xor or outsl xor test pusha and mov pop lret push ds add xchg adc or addl mov je test (bad) int3 or sbb sbb or (bad) push dec add adc pop cmp sub adc jmp add mov or and in xchg mov inc jo mov mov fbld dec (bad) pushf repz rorb or push nop cmpl jp adc inc mov inc add push (bad) and pop popa xor pop or xor adc mov pop sti dec rclb lea add daa jl test stc jae ss lcall sub cwtl inc xchg mov inc les ret pop cmp mov in dec lods mov or mov mov sub stc jl add leave cmp stos mov mov cmp push xor jae inc adc add pop daa ss cwtl mov mov pusha or push xchg sbb add sbbb dec rcr mov rcrb daa mov test add mov arpl jge mov lret adc aam sub ss inc sbb jo test inc mov (bad) mov adc ret xor outsl rcrb mov (bad) xor mov fcoml test mov or sbb test xor jl sub mov (bad) lock push sbb popf mov rolb fisttp aam lret pushf push ss bound or xor js xchg mov arpl push lret xor xor or cmc insl pop das clc or adc inc movsb xor adc lea mov ss test daa xor mov pushl cltd and jae ss dec sbb fmuls (bad) fild push xor lret int3 rclb imul pop pop mov aaa add jnp popa or add dec sbb aaa mov nop inc mov push ficom lahf add add dec inc subl fisubl inc adc cmp sahf gs add or jge push je pop sbb jae dec adc pop loop aam push test mov xchg ret pop loop pop inc xor jnp (bad) xchg movsb jg test sbb popf jo sbb dec xchg pusha arpl xchg sub test adc sbb test push jbe mov (bad) imul xor (bad) leave enter scas mov mov xor dec adc (bad) push inc push scas insb or inc mov mov ret inc nop xchg loopne sti and mov mov cmp fnstenv shrb dec dec and xchg inc je inc test and adc or pop add test and cli orb (bad) push add or sarb aaa stc mov and test mov adc sub test push xchg mov inc aas or push push mov xchg imulb test ficom inc xchg sbb (bad) mov lock xorl iret dec or xchg mov xor shrb daa int3 push xor push movsl mov inc popf (bad) mov sbb lock jnp and or shrl and cltd xlat add addr16 cmp test jo scas movsb mull adc mov sbb pop nop imul fs cmp aad test cmc addl add or add push outsl sti inc pop and pusha adc add mov xor jae pushf or add sbb mov pop dec sub nop mov sub test pusha movsb arpl xor and popf or ss pushf xchg sbb movsb jno cmpb mov dec pop xchg add sbb inc lods repnz adc pand lahf inc or mov mov dec add push imul mov rol jle aaa andl scas mov mov mov test pop aam pop dec xchg cmpsb test fadd cmp push ret fstl aad or xor xlat lret dec ret sbb adc mov pusha ja inc inc push add or sbb dec adc mov xor cwtl mov push lea rclb sbb add push imul add inc dec lods pop cmp dec cmp mov and inc xchg es xchg xlat xchg xchg push insb cmpsl or or ret inc add scas cmp push xor xor fsts xor jl mov or push jo inc mov or sbb fidiv push mov loop adc ret enter imul adc fwait cmc sub dec or subl sbb xor nop sub adc adc xchg cmp popa lods add and inc enter pushf jl pop dec and sub gs cmp imul sub adc inc test out dec or aaa inc and lods iret mov bswap add mov gs lods mov ret add xchg mov lods mov and test pop fiaddl into add jge inc addr16 (bad) insb adc xchg xchg add arpl lret add or adc adc das or cmpsl fisttp loopne or test subb sarb lret xchg ret lar add sub sbb jbe push adc add enter es shr inc jno push ja adc mov xchg insl mov xchg ret ds pop push add push mov js xor inc mov scas cltd lea mov and dec add movsb dec dec pop sbb (bad) sub loopne shrl inc mov enter fidivrl add popl test daa adc inc cmp inc adc roll mov sub sbb adc xor js mov or sub or sub repz mov (bad) jo cltd xor sub pop setns xor imul mov test orl and jne and inc aas aas subb or outsb out push dec push push iret daa or adc or scas ret add xor fimull mov rol push mov sbb aad gs mov movsl add pusha fnsave pop dec push inc pop pop jo gs dec lods add jg aad mov (bad) lock mov sbb fildll sub cmc pop fildl xor aaa sahf inc popf mov lods add sbb adc push mov test addl nop sbb push sub fiaddl inc inc add (bad) adc sub mov test and push push add adc dec outsb and sbb repnz dec pop mov mov cltd int test mov sub flds adc xor add ja add inc aam dec add xchg adc out cwtl inc adc pushf or pop inc add cwtl xor js jl or cmp loopne insb sbb cltd jmp mov sti pop xchg push dec jmp pop mov xor lods inc sub ret les adc cmc sbb mov mov xor pusha adc add pop jne mov xchg rcrb arpl movsb mov (bad) sahf dec adc push cmp cwtl push or test into add jecxz xchg inc xchg or push pushf add or sub jbe hlt xchg iret es fldt inc add or fildll fwait xor xchg sub cmp cmp or pushf pop sub mov add outsb sub and adc pop push adc push adc in push jmp aaa sbb loope orl packsswb int dec lds adcl jns pop xor arpl sbb popa sub add jae,pt xor sub pop pop add or mov sub push inc sub xor rcrl dec and inc xchg xor sub pop leave outsb push sub or mov xor mov and xchg sbb lods ret push pusha and movsb pop test dec mov (bad) lock mov add cltd and xor sub dec nop call (bad) xor cmp and ret pop or ljmp push (bad) or sub cwtl xchg shlb popf jge dec dec js mov lea xchg fldt pop xlat add sub or jg hlt jbe cmp xor or adc mov sub xor inc sbb jae test sbb test or cmpsb mov popa and mov andl pushf scas lret adc xchg push sub nop repz or or popf daa dec shlb push mov pusha movsb fbstp pop mov pop fsts rcrl and adc xor xchg add pop aas stc shrl or dec inc pusha lods cmp sbb mov pop ret cmpsl sarb aas and cmc arpl movsl inc pushf dec sbb (bad) and jge or mov mov loopne subb pop jnp movsl adc ds add pop mov bound (bad) ret pop or sub movsb push push pop stos in mov dec insl leave push xlat pop dec mov shlb sub sahf jo adc shlb sub pop or mov and mov sbb lock inc cmpsl inc loopne sarl rclb or test and or mov inc mov sbb add inc fistl push mov mull and mov push cli stc mov es push lea jo out pop xchg sub inc (bad) or dec add push dec enter dec js push (bad) add testl ret jnp add lods adc sbb xor sub jecxz adc cli and or adc out dec pop insl push cmp lds pop mov adc pop push xor push les loopne pop mov int jmp xchg movsb js sbbl sbb push sub xchg movsl push and sbb lods cs insb and pop lret dec mov mov test and pusha sbb cmp add mov xchg and stos dec lret xor and mov push xchg push sbb daa lock sub test test cmovns insl loopne out and dec or and xor xor adc aam fs pop sbb push fsts xchg or ss dec or push inc xchg inc and jno ret mov mov mov or xchg hlt push aaa sbb inc js mov ljmp push (bad) dec mov xor inc in and sti aam add push cmpsb jmp dec inc aas test sbb aaa inc ret jg (bad) and scas popa add and ret sub movsl es sbb out push in or in adc mov inc (bad) inc rorl xor cld jg mov or insb sub adc mov (bad) cmp inc push mov mov mov push mov orb push adc xor sbbb cmp push xor (bad) xchg mov and xor xchg lahf ret int3 insl xor cmpsb rcl sbb pop movsl loop cmc jnp dec xor xor push test add movsb jo jns lods mov cmp stos push xlat xchg ds pop push push mov inc or add (bad) add push sbb add ss push sbb int sbb or test test xor fs rorb pusha sbb sub (bad) mov push push push stos test push and jge in repz adc test adc out push enter adc inc js enter test inc ss pusha push test ret xchg mov xor sti xor add add ret bound mov imul pop pop dec inc push mov imul and imul pop and add inc and loope xchg popa flds xchg inc pusha dec mov cmp mov inc adc notb mov in outsl and dec test dec (bad) push lods loopne mov inc lret sub dec sbbl dec add sbb in jmp and mov in or or inc mov add pop pushf test icebp jno and subl nop or lods inc stc inc loope test or pop xchg mov (bad) xor (bad) cmp pop push xor test jne pop ljmp jno or sub xor pop rolb sub clc xchg dec push loop and sbb add xchg and inc and jne or or mov out jnp adc sbb js inc and loop push push or daa fwait pop loope push xchg in les sub cmp and sub adc xchg addl mov adc or xlat icebp sub setno xorl jo in inc popa sub mov mov push and pop pop ret xor push or fmuls stos pop adc xchg add sub aaa lods movsb mov stos std push js dec mov xor xor test sti cli test insl sub xchg and daa sahf xor inc mov jb test mov adc adc shrl lods mov fdivl sub lods or jge ret adcb ja sub or cmp jns inc xchg fs sbb sbb fistp pop xchg inc test scas or adc cmp imul add pop pusha or test mov jne mov out faddl sbb and and or pusha add repz jno sbbb ss push mov xor movsb cwtl sbb sub sbbb and jo inc inc ret jb cmp nopl test (bad) (bad) cmp pusha test fs lock mov ret push test sub dec xchg stos xchg (bad) leave pop rolb or stos xchg mov pop inc and cmovp push mov ss add test xor loope nop (bad) sbb lods xchg add jb inc cld clc (bad) test push or mov or fstl (bad) sub dec cmp push movsb and mov push jle dec stos nop (bad) hlt adc xchg jno jae mov or (bad) sti nop add mov sub push xchg xor ficomp jo xchg lahf mov dec sarb dec (bad) aaa jne mov push (bad) or add or push add mov arpl xor or jnp adc cmp adc imul inc jo (bad) mov xor roll inc outsb dec mov sbb pop rclb mov in daa jb lds lret cmp add sbb (bad) xor jo sbb mov jp test dec adc inc sub fnsave or add ret icebp loop movsb add mov pop ret adc pop pop dec sub pop clc lods cmp pop dec and inc adc andb es inc and and mov lods sub or sub push dec es or scas cmp sub stos ss adcb lret leave test test insl inc dec xor mov lods push cmp loopne and and inc sub xor fildll and jge xlat xchg or stos adc insl pop iret pop push ret imul xor xor sahf imul xchg or and and xor sbb cmp push rorl mov (bad) pop push gs inc cwtl loope es sub inc das jecxz jo arpl rcrb push add add inc mov popa xor inc sub or or mov adc movsl fs aad cmpsl mov or test insl lret jo xchg movsb push icebp pop fistp cmpsb xor or or mov or lcall push add mov mov push mov sub cltd and jns sub jp add test daa (bad) sbb pop xchg push mov pop mov outsl sarl push mov ret sbb int cmp test add insl pop and adc sbb roll adc popa xor (bad) test scas push lcall lcall or adc xor push push dec push add inc adc jmp xchg or sbb push dec sbb addr16 adc add jmp add or inc outsl ret cvtdq2ps das leave pop push mov lods addb mov (bad) dec loopw pop xchg nop push js imul mov sbb sbb popa and test arpl pop mov xchg mov gs loopne pop push jecxz cltd dec and and mov pop ljmp mov int3 inc andb jmp add adcb push mov lret aaa insl enter test adc inc std xor xchg fnop and pop (bad) lret or inc jle inc xor mov cmp mov adc (bad) dec add add pop aam jmp pop xor xor (bad) mov inc push and mov jno cs iret xchg outsl xadd or cmpl jg dec add dec or cmp adc mov inc xor and cld test scas test sub add dec push xor popa mov repnz adc mov lock pop loopne mov pop in dec pop cmp mov adc adc xchg lea and or or test orl pop rorb xchg mov or (bad) xor xchg pop sub push pop xor sahf mov adc pop lds jnp pop cmp ret (bad) add fincstp popa cmp (bad) adc and cmpsl mov jbe mov mov sbb pusha dec orl or das f2xm1 (bad) mov xor test mov test jnp add (bad) fisttpll mov aad adc setns xor mov movsb mov movsb and or lods add mov adc xchg adc cmc mov or mov adc movl push mov std lea mov insb popa int movsl adc push fisubl imul jns add sbb mov pop add xor pusha imul jae,pn cmp xchg lret or pop and pop addr16 xchg ss nop adc inc mov fsubs mov or (bad) sbb insb sub push fistpl ss pushf subl xor roll ret sbb push sti jo sub and xchg or cmp mov adc shlb jecxz mov mov orl mov dec push add push iret jmp push orb sub or stos pop into lcall sub mov inc push clc add mov or lods mov cltd rol mov out ret jge and sub mov mov mov inc (bad) and popa loope adc cmpsb ret or rcl jecxz dec inc xor bound icebp or dec aam mov ret (bad) xor add add sub rcll rcll out sbb inc ret enter popa stos mov rcl test jns shl ffreep pusha cmpsl inc push xchg insb test and xchg pop dec and rol mov xor jo add (bad) les mov test adc push es ret pop xchg in adc mov enter pushf dec xchg stos ljmp lret in loopne lock popf sub cmp fwait (bad) mov das or xchg insb xchg test mov (bad) in mov xchg sub add push push test jno mov cmp xchg test xor inc mov cs jo xchg mov push add js mov add nop mov xchg jo pop sub insb loope or test sti inc loopne test push shlb and pop jge and inc mov mov icebp push dec pusha in mov mov loope daa adc inc mov jecxz sti je push xchg push loop sub xchg loopne mov push mov pop sub test pop push sub mov mov or (bad) int pop add pop inc push mov andb addb das lea jb xor sarb test rclb movsl fcoms inc pop icebp and dec loope sbb (bad) push mov mov es pusha jb dec mov sub push pop mov inc cmpb or outsl sub xor orb dec push dec fiadd pushf imul add inc pop inc cmp daa push pop mov cmp repz out mov cmp je push roll (bad) or adc and and push nop ss das inc xor add add push es adc repnz movsb xchg cmpsb rcll push pushf pusha mov push sbb adc adc xchg sti mov adc mov out and sbb aam dec and xlat adc adc xor xchg and imul leave daa xor rclb cmp sbb ret pop lret bound mov test out divb push iret ret mov sbb (bad) loopne xor adc ret ja ja adc sub insb mov mov jns nop sbb imul popa sarl jmp lods pop dec dec pop rclb add sub aas xor adc dec popf out scas xchg inc cmp cmp xlat add add leave imul push sbb insb pop into push fs frstor jb xchg (bad) pop mov dec push sub mov js daa fst xor xor insl jp or arpl stc arpl pop aaa xorb movb sbb mov pop adc add adc cld nop push cli pop xor inc xchg sti sbb xchg xlat mov fistpl pop frstor mov push and mov sti dec dec test cmpb or mov sub test cmc and pop mov test cmp xor inc imull and push sub cmp cmp cmp test pop cwtl pop cwtl sahf fs inc movsb mov push leave adc js cld test xor pop lret cmp or (bad) inc js add xor addl shrb (bad) and fs sub add jns mov cmp or xlat clc xchg mov lret sbb sahf mov mov (bad) push cs ret push ret dec popa test mov mov mov inc mov lods mov imul bswap fsubrs out movsb inc daa inc add shll movsl (bad) cmp pushf lahf je mov shrl int cmp (bad) xchg data16 test pusha insb dec lock mov add fcmovnbe dec (bad) pop pop cmp push push xor xor and sbbb sub addr16 lcall fsubs or and loopne sbb nop xchg das addr16 and mulb or cli es or cmc and push cmp in jae inc push call sbb xchg xor fsubrs push pop sbb dec daa mov sub jp enter jecxz ret add sbb mov test xor ss mov popa inc adc mov sub push rclb shll or lods sub push dec push pop add test xor shr add aaa xchg adc cmp jp jmp sub andb or daa or mov lret pop arpl add dec jl push ret orl jno cmp cmp icebp adc push cmp xor setb adc popa mov push jg adc sub mov adc outsl pop pop mov mov and dec jns aas jp inc and lcall push xor rcrb xor pop or pop add add enter fisttpll push aaa push enter cld xor mov lds or sbb lock adc js push cmp out es or and sbb mov sub add rcrb push sbb sub enter sbb mov adc and cmp or fs (bad) cmp sbb fdivr mov inc jp dec mov and mov lret mov lock ss sub sti mov push sub sbb fist add adc orl rorb jo adc push xchg and and ret and jmp movsb xor insb pop sbb sub (bad) adc mov lret xchg movb sbb int3 sti adc mov lahf ss jle js push xchg inc sbb jecxz pop add (bad) xchg add leave pushf mov or cmp mov add sbb mov or push cmpsl mov fstps imul outsb pop xor int imul dec flds outsb dec shlb adc adc rclb cs cmp xor lock adc push adc inc test (bad) pusha sub push mov lods dec nop lret add movsl push inc call xchg rorl mov es sub dec add add add adc cwtl push insb pusha loopne and inc xchg mov mov sbb inc sub lea push sbb xchg adc push dec add pop ret adc pushf cmpsl hlt xor sub scas dec inc xlat xchg push xchg cmc ljmp push stos push jo leave js int (bad) imul inc popa test inc dec adc cmpl push rcll add mov jl sbb adc or jnp outsb faddl (bad) xor nop xchg and add sub dec insb jns sub pop sbb adc mov loop dec or dec sbb nop inc sub xchg jo mov insb inc push mov lock xor mov adc pop or pushf xchg jp or adc push pusha add pop push adcb stos mov dec jl into ss xchg arpl mov cmp loopne mov lahf insb inc (bad) xor jb cltd leave dec insb add outsl or inc inc push lods inc shlb mov pop ror xor (bad) add inc and adc sub movsb loope inc sbb mov shrb (bad) xchg adc and xor dec loope cmp cli xor push loopne test sub aam mov xor pop das sbb add cmp and sbb inc mov jne push sti add jp mov inc inc and test test or in fucomip fwait sbb xor sub mov xchg out inc adc add add movsb lahf dec adc push add xor mov test sbb pop pop sarl adc mov (bad) mov mov inc and cmpsl or in mov sub xor cwtl rorb cmp mov or aam dec sub lahf xor jle or mov or ffreep lods lods adc shrb or movsl or or and push test and mov xchg lret adc pop inc pop cmp (bad) adcl mov xchg inc jmp (bad) aaa stos es call sbb jecxz lldt hlt dec sbb cltd sub (bad) movsb (bad) cmp inc daa mov pop push jne fildl cmp test mov lea and pop int3 add inc xor mov mov lret adc aam adc shrl testb rolb dec adc or pop test mov ja push into lcall js push stos xchg gs inc add xorb inc loope xor dec add add add add sbbl sub bound cmp outsl sbb ret pop aad rolb cmp xor pop lcall adc ror xorb mov dec arpl sbb xchg popa xor xchg inc (bad) out xor dec bound adc add rolb xor pop and test ret mov push loop pop dec (bad) mov sub mov inc xor lods or imul xor or sbb jo arpl cwtl mov lahf fmull sub movsb push sbb adc in arpl cmp pusha (bad) adc ss lods pop (bad) inc xor sbb (bad) adc in push (bad) mov and add lahf loope adc in gs xchg jo cmc mov std jns int3 pop inc xchg das cmp adc pop das xor inc and sub adc rclb pusha dec mov sbb sub sub inc in (bad) lahf xor ds mov popa adc mov and or inc adc xchg movsb sar fwait or mov les sbb mov int in xor dec and xchg mov jmp cmp xchg and xchg (bad) int3 sbb sahf jo and roll sarb jno push inc stos sbb outsw popa lea inc and (bad) dec jp dec jle add loopne inc aas pop add add and and (bad) icebp mov sbb xor dec cmp push or cmpsw dec sbb repz xchg push pop pop add or pop ret add jl adc xor out and push stc les lods inc scas or rcll (bad) aam or inc pop mov sbb mov or pusha insl cmp daa pop dec pop js (bad) mov cmpsl push jno fldl pusha rolb dec lahf and inc mov (bad) sub ds adc popa mov repnz dec subl xor inc add add or fsts cmp mov imul sbb pop das or aaa jg,pn xor add pop outsl decl flds mov fldt fcomps cmpb daa and cltd xor stos sbb popa or xor inc xor jmp test or movsl and push ss jecxz pop adc or dec or sub mov xchg addr16 stos add and gs and gs dec push add sub dec test shrb les enter sbb cltd ret aad imul rorl add adc imul sarb rcrb or jne ffree mov add (bad) mov into or dec cmp inc or mov outsl loop test (bad) cli jecxz ss hlt xor loopne popa jne daa or test mov jae adc and or jmp in ljmp mov inc add jecxz adc and fldcw add ret neg xor sbb xor add xchg aad (bad) mov and pop aam nop (bad) push adc or sub pop js dec xor cwtl pop and inc test push nop mov int in and mov outsl sahf cmp dec or pushf cmp lods popa sub push nop nop sbb andb push mov mov cmpsl or dec out inc and (bad) sbb inc dec and mov lea cltd jnp mov cmpb xor or or test lds test jnp inc roll rcl aaa or dec ret inc imul push sub fistpll and sub leave js sbb pop xor js,pt inc lods inc (bad) adc fadd sbb test call push push xchg fisttp fisub fsts or sbb add ds rcll popf scas or popa push mov jne adc andl inc imul or mov cmpsb rorb pop jp or imul addl arpl or leave sbb lds inc rclb dec repnz mov inc cli pop inc (bad) je lods test push dec or push or or rcll mov mov das ret sti imul bound addb add pop jns leave fldenv sub idivl adc test mov pop pop outsb daa xchg fstpt ret aam insb jns lods xchg add pop pop add jb xor cltd add add cmp or jp (bad) mov sbb mov in sub mov mov cmp mov and imulb xor lods pop (bad) mov daa (bad) clc ss sub xor jge ficom push aad push mov js inc push dec mov loope sbb xor or xor jnp adc lcall nop cmp pop fcmovbe mov push adc sub (bad) jo call mov arpl push repz inc dec inc lods fisttpll push mov xchg jmp xchg cmp cmp lea popa shrb push mov rorl dec push jbe ret mov push dec adc ret pop mov lods movsl push cmc shlb jns mov xchg popa ja mov ret fmul xor ret mov xchg stos sub fimull lret arpl imul and loop ret or test ret dec sbb int mov divl sbb push dec popa or dec push dec pusha sub mov jo push ss push add xor xchg and xor xor daa dec dec dec ret cltd xchg dec xchg or mov (bad) sbb sbb or adc and mov lcall dec rcl adc push add divl cmp jmp popa push mov push cs pushf sti jo mov mov inc je fwait cmp push push adc fnsave pusha lret jne sbb and fisubrl fs mov leave mov sub jge imul mov and es mov or and daa std mov add inc mov add inc sbb pop pusha sbb mov xchg xor add xchg movsb push fbstp cmpsl sub popf rclb inc sbb int xor pop xchg rolb fnop pop mov mov lods orl xor mov add (bad) dec jns inc sbb pop xor or jno push dec xchg and mov xor sbb sbb imul (bad) xor add add jo mov mov jne xor adcb push pop xor xor xlat ss xor sbb insb sub add add fcom (bad) xchg je sbb aaa xor (bad) mov jmp sarb out dec shrb lret test pusha cmpsb xor jne xor push adc adc test dec ret leave js mov cmpsb xor and push pop in mov leave inc mov pcmpeqb es sub and ffreep add ljmp mov adc jo jmp mov int dec or mov test test inc test adc addl aaa loope xor mov inc dec popa sbb mov add test addb cmp mov jo in or popa sbb add push mov push movsb mov repnz or stos add xor add xchg mov push das add cmp rcrb add addb mov xchg cmp daa leave outsb jae sbb pusha imul inc mov or cmp jb cmpsb xor sbb fstps jl pusha or cld out xor pop es js and lods cmp lret pushf pop mov push (bad) cmp or inc loope rcl mov add lods (bad) xor jp pop push leave les pop pop lock sub and inc add lods addl push adc les add and cmp lea adc stc or js mov icebp or scas aas xor fldcw nop aas enter sub mov or sbb stc and dec dec fmuls popf mov dec (bad) jns in or (bad) push xchg add push add mov (bad) mov aas sbb outsl pop scas cmp jo aad xor test (bad) add or (bad) pusha in rorl push lea inc xor and sub stos jne rorl cmpsl mov cmp mov lods adc adc and inc jge dec or inc pop dec pop mov outsl mov mov inc mov add push xlat (bad) push fs sbb das lods inc or (bad) mov dec xor xor xchg in shl inc mov add add ret loop jecxz sbb cmp rolb pusha in sub or cmpsb sub push pop sbb push sbb sbbl ss jb jge xchg movsb test test adc xchg pop sbb bound imull cli pop aaa popa cwtl pop inc xchg inc addr16 shlb ret fld orl stos cltd push mov push or and mov leave aaa xchg adc inc imul hlt rolb aas add nop push insl pop add adc xchg rclb adc push or and add inc and jle inc test sbb add adc test loope push rorb push ss mov xchg jb xchg cltd mov inc mov lret hlt dec dec push lahf jmp push gs repz push leave or xor das pop push push dec mov fidiv stos add pop sbb jns add pusha add cltd aam movsb imul aaa or dec mov and popa and sub and adc ss jo mov iret add dec psrad cmp push enter adc add add cmp inc enter jno mov sub repnz inc in popf cmp das sbb xor push push sar xchg cmp adcb adc sbb pop mov mov jle mov inc rcrb in sbb popa (bad) xchg jge mov cmp inc pop xchg movsl ret popa xchg sub btrl dec xor je pop fisubl jo inc sub xchg xchg and and mov rclb in xchg and imul les push rorb mov test nop lret xchg aas rolb cli jno ss andl dec aam sub dec shl adc adc inc cmp fmuls adcb mov xor imul pop inc adc loope or aam sub mov or lock adc pop push dec leave pushw (bad) popf push outsb mov pusha sahf dec xchg addb xlat shrb xor mov mov pop xchg outsb pop ret imul mov and shll daa sbb push pop stos add mov dec dec fistl js cmp lahf and pop lods xor std add xchg mov push fsubs cmp mov leave inc andl pusha dec xchg inc sbb rcrb sbb xor movsb int3 imul dec sbb dec leave cmp imul leave adc inc jmp jne (bad) xor (bad) dec adc and sahf cmpsl inc or cmp orl cmp inc test xchg push test and scas popa jmp sub pop xor mov add lret adc inc add jno ret inc dec in or aaa dec lock ret mov inc add or mov in xor and lret lret ss rol and mov outsl xor pop dec and pextrw pusha leave sub outsb sub pop mov or sub adc add jnp mov mov stos es push mov mov sbb sbb sub int push push test xchg or pop sub lea sbb push xor cltd inc leave nop sarb inc xor mov and or stc daa pusha and lea push jns inc inc add iret sbb test xchg add movsl xchg xchg adcl lret dec pop test jae add pop push or inc (bad) insb mov dec std inc pop test mov jb addr16 test xchg add adc inc or add mov xor mov jae fnsave or inc stos cmc sbb and xchg pop shll mov mov cmp (bad) or mov xchg mov dec aas stos sbb aaa mov mov and repz mov dec push mov aam out push aaa sbb sub mov pushf pop lret sbb mov adc aaa enter jg push pop enter and and fidivl gs addb mov and (bad) mov arpl mov inc icebp sahf loopne popa jno das mov inc out inc inc sub add pop inc xchg mov push addr16 mov mov or rclb jne lea sbb ret xor jo adc jecxz sub push xchg repz sbb popa nop and xchg jl cmpsl lahf aaa adc dec bound or mov loopne (bad) pop jo and cmp sub mov fwait addl pop add js addl jae jb fnop dec inc mov popa sbb andb (bad) xor lds push sub and push movsb popa sub sbb or mov (bad) dec add arpl cmpsl cmp or inc pop adc pop ljmp enter int or pop push (bad) sub xor lods mov stos std xchg rolb dec sub push inc movsb xor fldl mov mov fcompl adc popa sub lods mull test aaa sub js jne arpl out das or and jge and jae insb rclb add repnz bound xor and xor add fsts (bad) xor shrb or repz rcr mov mov inc fistl add shrb add add out inc or mov mov arpl mov inc imul and loope and pop sbb sub ja jo or stos rcll sub fwait sbb pop cmp outsb sbb and inc push dec mov jmp mov jne lea adc mov fnstenv imul call movsb push movsl mov leave es outsb fdivrs inc call adc and or adc adc pop or sbb lods xor ffree popa push xor inc push xchg mov xor aam leave add dec das sbb or sbb lock shrl pop inc mov sbb stos ret inc lods dec mov mov sub mov xchg mov bound add mov add push mov inc xchg das or dec rclb xchg mov sbb jecxz rol (bad) mov dec andb out mov jb or or lds xchg popa sub mov add imul xorl adc or dec cli and js aad adcl orl push jmp mov pusha insl movsl fwait cmp dec test lds pusha popf mov cmp dec sbb dec lret xchg xor daa add int push repnz mov sbb imul test cmpsb xor mov cmp or jle mov cmp push rorb xor xor adc loopne add insb add and stos ss mov mov or pop scas lods iret adc push add xchg rclb jns add cmp add inc mov and and dec enter add inc je pop mov push insl (bad) mov or lods xchg dec rclb (bad) mov and loopne cmp mov and mov sti mov repz cmp or add pusha sbb inc mov sbb pop mov hlt dec adc lds add xor popa adc xchg sub adc stos adc orb sbb fcoml (bad) sub adc ret (bad) mov mov adc call pop push in pop ss add loope ret aas int flds (bad) in xchg adc sbb add les xchg mov hlt scas stos aas jl add push jne dec xor data16 add dec mov mov imul add or inc jmp xor leave xchg ss adc rorb subb cld mov dec inc push sub cmp jp push or sub sbb push push fstps mov push fmull push xchg in (bad) arpl sbb or leave jmp push test mov arpl pop add pop adc and sub sbb mov setae sbb adc sub xchg sbbb mov iret test out push sbb dec stos aam push pop adc jns xchg jbe mov and pop dec in loop adc push pop xor xchg sahf lea and xor daa or xchg sbb fstl in or adc imull ds sub and mov pusha inc popa or adc addl mov xor fildl in mov and xor rcl or lret enter fcoms fucom fwait sbbb lcall test popa shll imul cli push (bad) in icebp cs nop lods add hlt dec pop mov frstor ffreep sub call pop (bad) mov aad cmpsb pop lods sub inc add rcrb fiaddl add mov push add sbb loopne fcoms pop inc xchg rclb add push add nop sbb fnstenv jmp jl cmp push xor adc mov call push adc movsb push stos adc mov jmp fsubrs adc adc pop lea loope inc mov add jno sbb dec add sbb add sub test sbb ret inc dec add xor adc leave test pusha js fidivr adcl loop loope ss dec shll xchg loope sbb popa push mov (bad) mov xchg ljmp add sbb adcb and add sahf push adc test xor (bad) xlat movsb test lea lret fisttp adc push push dec xchg inc ret mov dec jns lods scas pusha mov mov pusha js ret leave repnz inc push lcall sbb add fdivrs fisttpll mov mov inc or mov xchg sub sub in or push inc popa adcl pop outsb or lods add push in xchg add or and push sbb (bad) mov arpl mov test inc sub mov scas inc xor rolb (bad) xchg xchg cmp repz mov push or jb pushf sub (bad) jb xor iret sub and mov xor imul inc xchg in test xor inc push leave adc jnp loope adc fisttp scas test sub pushf adc das xor adc cmp xchg rorl rol imul pop clc and mov int sbb and inc or cmp insl fwait lock lods xor push or sub shlb inc add pop fbld dec dec nop repz mov or or or cmpsl aas inc dec adc mov sbb cmp dec add add fsts mov or imul add inc adc lods add jnp js xor jl pop xor mov arpl cmp push fs and or movsb or andb push add lds (bad) lock sub jge push add call mov push sub sbb rorl mov cwtl xchg push add call xchg add pop adc movsl cs sahf or pusha inc out or push adc or inc and dec gs and pop addb xor dec lea imul enter arpl or popa jmp adcl lea pop xchg and mov xor mov add adc add mov sub add adc movb mov das mov sub sbb lret popa dec xchg xchg addb xchg push push cmp adc les mov xchg jmp shlb dec and xor sbb mov inc xor lcall cmp stc add subb adc pop rolb stos pop mov cmc pusha pop add cmp xor enter sbb jle inc push push aas sub mov test inc aaa lcall xchg add int3 test mov or cmp pop add and xchg fildll cmpsl (bad) cmpsb mov sbb add wbinvd mov inc loope mov test add out mov xorl pop adc dec inc out pusha or dec test cmp fsubs loopne xchg cmp jb sub push sub inc add pop fsubl adc xchg mov adc sti add xchg dec fisubr jne loopne add or and scas rorl pop mov pop xchg xor cmpsl cltd (bad) jo add add fs ds scas cmp (bad) gs sub adc mov inc ljmp jge scas add lea rolb cltd or cmp inc mov pop push jno dec xchg add pop push cmp imul lods push pop aaa test lock mov add das imul lds mov (bad) or shl lret add sbb (bad) dec lahf xorl xchg hlt dec adc popa xchg inc fcoms xor add adc ljmp lret and inc (bad) xor adc loopne cmp sub add repz popa ret or dec sbb sbb rorl aaa inc (bad) cs dec dec out out inc pop pop xor dec lods or jns xor pop sbb mov dec (bad) pop insl lea cmp pop (bad) lret sbb inc shrb mov outsl ret int3 lahf aam mov sub enter nop or xchg jne test xor mov push jne lods test jg mov (bad) mov insb xor xchg (bad) mov aaa dec sbb scas dec fnstsw xchg sbb mov out ficomp and arpl clc dec mov sbb out jecxz jae andb xor push iret add (bad) mov shrb dec and inc pop daa mov popf jnp into (bad) add adc inc das dec adc xchg adc lods repz test push test pusha add xorb loope adcb xorl cmp cltd rorl fiadd push mov nop sbb sbb and adc enter adcl leave dec pop or sete xor add xor loope and pop mov loope imul adc lods xor adcl mov ret mov add lds jmp imul outsl sbb (bad) xor cmp xchg das movsl inc sbb fisttpl xchg dec and in push aas cmp imul xor and xor add adc jmp add and push pop mov jge xor repz mov and pop insl or and jmp xor rorb xorl nop xchg mov out lcall inc xor movsl inc call adc mov dec pusha aad ret (bad) in cmp xor gs dec sub mov inc imul cmp and imul lret inc test inc push push cmpsl popa test hlt imul pushf lods inc shrl xchg cmp inc insl adc pop cmp addl xchg add add cmp pop cmp aam push push mov pushf sub daa add mov add mov aad push pop fldenv or push and xchg and ss lock sub sub dec lods and push pmullw inc imul inc xor jne xchg popa or test or rcr shrb mov shll inc or mov adc addr16 add jnp xor sub dec or lock or (bad) out (bad) subb popa inc movsl lods jecxz sub inc insl rolb xchg pop clc and icebp loop xchg sbb xor test inc jge test cmp dec into push adc jmp push js dec inc mov or pushf and sbb popa mov repz push mov and xor sbb mov sbb adc push jae add in push popa sahf xor imul mov mov scas xor add cmc dec lods or test cmp (bad) lods and jo decl (bad) mov (bad) scas notl mov sub and mov mov bound mov xchg inc lret js stos (bad) push adcb sbb inc sub sub push cmp imulb lock adc addr16 fxch xor sub or adcb or into ret lods outsl mov dec pop pop pop xchg xchg cmp mov adc movl mov outsl push test xchg or es sbb fistpl cmp popa inc mov test and inc mov in dec inc mov sbb popa dec stos dec mov add loope inc jecxz pusha inc clc sub push xchg test mov add sarb outsb mov mov test push (bad) sub jge rolb push cs adc insb pushf imul xor inc mov ljmp jg cmp imul fistl jne dec mov xor and sub imul or xor (bad) cmc cmp insb add and mov push daa fldcw mov gs cmp rcrb shrb inc pop (bad) or prefetch or (bad) xor dec test loopne mov imul xor jo test aaa lods and cmp dec js xor ss rcll icebp in jo rcrl jecxz and mov push xor (bad) dec (bad) aam fnstsw aam xor xchg dec loop and add xchg jno add (bad) mov ret subl jge (bad) or add adc int3 sahf pop or insl mov into xor adc ret add jne xchg inc adc sbb sbb add push inc xchg sbb xchg (bad) sbb or dec js adc inc inc test push adc (bad) in js mov mov pusha push shlb mov (bad) loopne sbb and mov fisubl push sbb xchg imul fnstsw outsl mov mov (bad) lods mov in insl movsl jo push xchg and xor pusha and rcrl dec rcrb jge cwtl jne lcall dec popa out lea lret xor ss loope sub xor adc lea add adc dec inc or and inc shll or sarb lcall sti ffree cmc jo lea into loopne and or and push imul add js sti movsl dec or dec lds xchg mov les cmp lods mov out adcb mov dec aas lods adc rcl jno push add test fstpl mov add adc shll test (bad) xchg int3 mov push popf inc and pop jno ficom cmc jbe or call bound sti popf xor xor push inc xchg push mov jns sbb xor pop push bound sub push xchg lock pop pop inc cmp mov add xor jae outsl in imul popa sub sbb cltd pop or sbb xor xchg gs iret xor dec xorl jmp add mov xor sbb out adc (bad) dec sbb (bad) pushf adc icebp les xor nop add jo dec inc xor (bad) push dec xor bound add mov scas cmp xchg rclb add leave mov inc fcomps push rcrb xchg pushf sub arpl (bad) lds das add or loop pushf or ja push lea test mov adc or adc and adc out fistl or outsl arpl mov mov ret sub rol xor fisttp or movsb sub (bad) jg or nop cmp imul xlat or mov imul sub xor jno and sar jl pop les or inc ret test test push jp inc stos les add fisttpl or pop and inc nop sub ret xor es sarb loop mov push and dec add aaa xchg leave adc inc and neg ret inc mov icebp xor jl aaa (bad) fsubl shrl into nop and ss mov mov push pop mov movsl and jb mov aas xor mov and add xor and in lret and adc cmp cmp psraw sbb icebp xor fistp xor xor dec jo mov insl (bad) xor sub and mov xchg or jg int cwtl mov and (bad) ljmp xchg xchg and jmp cmpsl das inc stos xor mov sbb mov dec cwtl pop lea mov iret push das sbbl pusha mov sub pop test ljmp mov je add (bad) lods xchg pop movb push test and adc xchg adc stos mov icebp inc adc cmp das lret ret ret (bad) push mov xchg sahf rolb std and sub in lret fwait or push inc and dec insl jne es les jp push cltd sbb (bad) mov fs push or (bad) jb pop sub dec imul inc mov daa loope push sbb les loope pop clc mov xor lea hlt (bad) and fstps push dec and and test mov and cmp xor sub add dec xor or inc stos out mov add and sub (bad) dec enter insb sub rcrl gs sarb aad mov cltd mov pop pop das repnz enter ss or adc sbb fisubl test pop pop inc test push outsb rol xor loope add enter and xchg mov jmp pop or pop mov addl xor adc adc stos push and popa xchg jmp and inc mov and xchg sbb lds sahf dec cmp pop loope (bad) xor rclb xor rcrl pushf gs (bad) dec sub dec jecxz loopne xor dec xchg sbb mov cs ret add insb js (bad) dec imul xchg je aaa fcmovnb add sub lret xchg xor rcl or dec pop adc fisubrl aas popa lahf push and xchg push je mov inc sbb pop sub mov imul nop mov and pop and mov cmp pop inc xor roll xchg cmp pop test xchg xchg aas sub adc ret mov jge dec mov out rorb lret lea cmp sub mov sbb mov test xchg icebp and lea mov and xor test popl jb popa adc ret or mov add pop loop loopne push out (bad) sbb les sti mov mov xor inc flds fs nop test data16 push sbb push xor bound hlt std mov xchg pop test push push sbb int loop push in add sub push pop mov add mov mov inc xor (bad) xor mov or and sahf inc xchg and mov xlat js cmp test xor mov out sbb sbb sbb add pop or pop mov xlat adc mov hlt dec sbb das imul fs and movsl outsb pop xchg and ficoml je sti pop xor test sub test (bad) mov (bad) (bad) stc jne pusha and mov inc xchg jne and mov cmpl lret add cmp test mov mov jg xor push add mov add xchg js add fiadd sub pop sbb (bad) push xor push nop push lock xor and insl fs pop inc loopne inc xor or xor mov sahf sbb stos and in xor addr16 add fisttpl xchg gs popa (bad) cmp xchg xchg cmc jecxz push pop xchg fsubl adc pop (bad) addl inc inc push sbb hlt and add pop jae mov enter loopne and dec movsb push add cmc mov (bad) and dec add mov mov or fmuls lds push xchg add mov xchg xor add push jb lods pushf xchg add pop (bad) xor ss adc adc inc adc arpl jecxz or out and fldcw sub xchg mov imul add add sbb mov ret rolb arpl push cwtl xchg leave inc pop xchg stos xor or pop rcl aaa gs out jge movb jne loopne dec cld repnz arpl cmp cmpsb pop bound inc sti shl sub inc or stos mov and ljmp scas and or mov ss in or cwtl sbb leave xorl mov orb cmp xor pop outsl in xor add jmp sbb lock or dec cmp xchg rsqrtps cmpsl add sub adc cmp (bad) lret out inc out or mov hlt and insb ljmp (bad) sbb loope shlb loope stos daa popa pop dec jge arpl adc popf inc les inc xor inc add lcall add sbb in mov sti in xor or imul nop mov dec xchg inc or in ja sub loopne push inc add adc nop test lods pop les jmp cs dec sbb mov nop cmp mov ss leave push mov adc icebp sub adc in and add push mov inc inc mov jne xor dec xchg sub sbb pop inc cmpsb and mov arpl dec dec adc inc xor xchg cmpsl sub and orb dec pop popf sbb mov and int add fs pop test or aaa mov enter js and jo jo icebp ss lret cs bound jmp xor mov jmp inc push cmp push wbinvd mov dec stos in sbb mov mov inc shlb xor lds aam mov loope xor or push mov (bad) or cmpsl lods fnsave movl imul int3 pop dec sbb mov movsb xchg lods inc movb xchg xchg cmp cmp cmp inc inc lods mov pop sarb pushf push (bad) ss cmp push xor inc xor pop mov inc insl add pop xor cmp (bad) sub add shrl add pushl push and outsb loopne lds mov dec and leave inc add sahf mov fsubl sbb imul xchg mov push inc (bad) in lea leave fsubs jmp leave and dec add sbb mov fwait push test add or mov add call and movsl push or sbb aam enter (bad) daa add and sub sbb adc shr or jmp push addb mov jbe inc sub pop mov arpl sub jo add mov cmp inc pushf js ret add or lret shrb ficompl orl pop fwait sbb pop mov adc or or pop lock pop xchg outsl add add jb mov adc dec jns mov cmp in (bad) ss pop or xor sbb or push or inc adc leave adc push loope adc xchg dec sahf test movups dec jno sbb add sbb jmp pop xchg pop add mov mov mov or sbb mov mov sbb adc or add sbb xchg addr16 mulb inc (bad) mov insb (bad) mov mov nop leave mov push mov or push rcrl dec and rorb js xor xor dec add or insb pop mov dec aam add and add jge sbb popa and xor mov fsubl xchg aas ss add push xor daa nop inc and or rorb and push fwait and ret or xor and inc push fldl aaa push mov popa movl jb movsb adc mov xor adc or mov adcb jmp lea inc adc and or cmp (bad) mov mov mov push inc mov inc and fcmovb (bad) lock push mov (bad) and and push movsl mov add add sub lea les insl fmuls pop mov adc aad arpl addr16 sbb and mov xchg cmpsb out xor xor arpl mov and or xor dec jno dec push nop mov inc cs sub sub enter push je add adcl gs dec mov and mov addr16 ret roll orl mov andl lret mov mov or ja repz add fimul xchg loopne push mov aam add or icebp js xor cmp inc out xor add xor repnz pop mov inc roll push push inc xor or mov imul movsb cmpl les pop sub (bad) dec dec pop sahf das enter push inc (bad) xor add or fistl cmp add mov xor ret inc cmp idivb or add pop xor inc sub or (bad) dec mov push test xor xchg mov cmp mov mov inc mov fldt push inc stos insl icebp or pop cmp xor mov jl rorl ret add ret nop mov imul outsb lret test lds (bad) mov mov xchg mov jns mov ret nop push (bad) push pop (bad) push inc mov mov cmpsl gs cs adc into hlt pop adc loop and sbb pop xor sbb das cwtl dec and inc stos ficoml (bad) and stos jo mov and test mov mov idivl lds rolb add sbb inc lret js pop test sub (bad) xor inc jbe add daa or insl xchg mov push stos movsl mov imul and iret outsl mov xchg dec mov and pop xchg adc nop and in and scas push push or cmc std scas inc add outsb sahf dec ret xor add or sbb cmc fwait sub sbb push popl add adc xor cmp repz sbb cmc add cmpsl adc repnz rorb xor inc sbb sbb cmovge sbb (bad) jno sbb jns shlb add leave push das ret adc and adc xor mov xor push out andl mov cltd xchg sbb hlt insb xorl pushf orb aad movsl add jo add xor das pop adc rclb loope aaa pop pop shrl mov push (bad) movsl mov movsl xlat jo add mov xchg mov aam cld xchg es jns mov cwtl aam pushl fwait pop dec adc xorb rol aad jns xor xor arpl add or or mov insl call rcrb arpl sub nop addl lea jle rcrb imul mov icebp xor pop aam scas jns or popf cli and mov pop dec (bad) mov inc ret loope or mov fwait lds orb mov test or roll jae mov mov mov pop or and xor arpl fiaddl cwtl mov out sbb push lret call cs jl (bad) sbb sub and xor in loopne add and int3 jo add pusha add aaa add (bad) mov mov test cmpsl xor mov test add xor inc pop (bad) push cmp sub movsl mov (bad) jno sbb out xor or jecxz xchg fs push andb sub into rolb xor pop (bad) fs das pop pop inc or adc out mov or or in xor (bad) xor and lret imul add or fnstenv sbb mov inc rorb aas add sbb mov xchg mov sahf es aam xchg xor xor loopne sbb jp xor inc push insb test popa and pusha and pop sub mov mov xorb xor arpl sub daa sahf sub adc add sbb and fwait dec mov fnop xor push pop push sbb ret push or xchg cmp daa cmp adc sub div and lret cwtl mov lock cmc sub inc mov or jmp xor ss or and mov clc mov test add or push mov xor xor cmp or pop lret and fsts inc and (bad) addb xchg xor or xchg int mov jo xchg pop push push inc pop and movsl inc imul sub adc les dec rolb jmp sub inc push test daa mov xor push test aad xor repnz xchg jne (bad) (bad) xor mov rcrl mov push xor arpl push add mov sub xor test and sbb add mov loope xor mov test add es cmp sbb sub and xor push jge sub add in arpl lret xchg movsb adc popa push inc mov test adc xchg cmpsl adc sbb mov scas add push lret cmp (bad) mov call xor xor xor fs aaa imul dec ret aad ret movsb jo icebp xchg pusha dec loopne movsb outsb mov xchg int3 push cmpsb leave xor xchg xchg lea mov mov lods lea inc rol stos iret mov adc aaa lock in int ss add add jmp or scas inc test or xor je sbb adc mov loope je test jecxz and mov sub xor mov daa mov add sbb sub pop mov les mov and jge mov pop cmp xor adc push or shlb pop add or cwtl out xor mov push mov hlt cmp call adc fistl adc and mov bound jge dec adc and push dec mov lret sbb dec sub int add cmp mov test lods sub sub adc xchg inc mov out sbbb add xchg cmp icebp xchg ret cmp sbb xchg cmp mov cli xchg mov xor pop call test test shll orl add inc out ret lret addr16 lods addr16 aam and dec popa (bad) es or inc movsb xchg and dec dec or outsl or jmp fsqrt daa inc pop gs xor sbbb test movsl dec in mov aaa push inc fiadd adc inc adc or sbb push pop add xor dec cmp aam lea push int ss inc push lret push popa nop clc addr16 cmp arpl xchg xchg and cmp mov leave pop mov ja (bad) sahf insl inc lods adc call shrl sub inc adc in ljmp add inc and sub rclb jle cmp pushf fs mov add mov add adc pop out inc sbb mov mov push cmp loop stos mov bound mov mov popa jo add pop mov xor outsb sub cmp lcall pop or cmp (bad) shr xor xchg add test subl and call das cmp xor test xchg fs imul (bad) int3 jge movsl mov or icebp xor leave nop add jns stos add sbb (bad) xchg xor adc dec dec sub les and mov daa test inc popf (bad) ja (bad) xchg or dec xchg xchg or ret das pop dec clc xor jg add stos mov add inc add stc pop ficom jecxz cmp adc xchg xchg je sub mov ja dec fbstp jno enter push pusha xor pop xor cmp lods xor gs aam and mov or dec and mov pusha fdivl add icebp jg sbb jb mov mov xor inc inc sub popa inc fcomps das mov sub push fnstsw pop dec adc push jns pop int3 fildll into jne cmpsl mov add pop sub or enter ficompl xor in leave (bad) add jg (bad) xor sub jmp mov mov das (bad) call mov add sbb enter or dec out cld lock inc xor and adcb xchg mov gs int push stos mov dec inc pop fwait andl push and ss inc xor cltd sub adc cmp fwait pop xlat imul pop xchg pop test cmp movsl ficoml mov or daa cmp js mov add or or mov mov movsl add insl enter rolb or pop stc jbe cmp inc bound loope add pop sub xchg loopne out out ss xor clc adc pop add icebp ret sbb mov sbb xor adc mov jae test test mov es pop or push gs fcoms push xor pop dec pop arpl or add ss xor loopne or push push add sub sub mov movsb ss jl pusha pop es je cmp mov sub push sahf js inc imul lret outsb push xor xor inc arpl hlt or push ret fwait popf test or or and or leave and daa xor inc loop int ficom xor inc pop xor pop lret scas imul pop int3 xor pop jmp mov mov push xchg xor push and fwait and mov rol xor popa mov cs mov sbb fstpl aaa or push dec xchg jmp xorl mov test mov xchg jnp or push mov or (bad) test (bad) out arpl insb sbb mov (bad) pop lods push cmp movsb ret ret jnp in add push pop inc xchg xor inc push ficomp popa sbb popa push (bad) add aaa add and push insb loopnew enter push ss mov (bad) jne lods movsb push or cmp flds insb add inc sub pop mov test xchg add adc add xchg int pop pop aam cltd xor cmp fidivl cmpsb mov iret mov mov movsb es xor pushf inc ret adc xchg or or adc fidivl sub mov or adc xor pop addl js xchg lcall fldcw sbb adc ret cmp call or (bad) xchg lock cmp into add jl adc pusha adc sbb ret and sbb xchg dec or jbe sub imul loop rcll xor sub push addb xor pop xchg cs jmp and sbb push pop icebp (bad) xchg ja,pt ret (bad) and cmpsl and (bad) dec or sbb mov loope add pop loopne xchg sub xchg xchg inc xor ds mov pop mov icebp pop js outsl mov xchg mov movlps add call push aas ss push sbb es (bad) ljmp sbb inc add call pop jp sub (bad) or mov clc das dec cmp subb pop inc sub or shrb xor xor nop psrld test cli jg repnz xor push inc push jno or dec push xor xchg out sarl hlt adc add add (bad) ss sbb push fldl inc dec and pop pop sub pop adc sub mov divl rcll xchg inc das jecxz pop lret mov fnstsw test xor ss or aad mov xor xchg movsb xchg sahf sub pop out mov and dec outsl lock movsl fs call cmp pop int cmp les inc push mov arpl sbb out cwtl mov pop dec jl je or loope out in cmp popa xchg inc pop leave pop pop adc adc lock push test or sbb cwtl cmp test test jmp mov cmp (bad) ja pusha arpl push xchg adc insl loop mov cmpsb lods xchg pusha jmp jo dec imul cs (bad) mov cs loop ss mov add xchg jo jecxz lea (bad) xchg mov push push popa lea popa inc xor andb enter xchg fwait push rorb fs imul sbb outsb push fidivl push mov lcall jmp add dec lods leave imul lea lcall adc (bad) xor jno mov inc add imul (bad) out dec dec push mov pop aam mov mov pop pop pop je fiadd dec in mov and rcll sbb insl mov clc sub lods rorb mov cltd inc outsb pusha mov and or push mov xchg sbbl ret inc push add add pop pop pusha adc enter xchg xor xor and gs push or adc cmpsb push adc push jae lret fcoml dec (bad) lret pop test test adc and add inc fwait or dec xor insb pushf icebp jne or test aaa push mov lret cmp subl jno xorb ret xor fdivs js jbe or add mov pop fadds mov xor adc add add xor push push cs jb push ficoml and fldl xor roll fldt ss pusha inc xor sbb (bad) xor mov dec loop mov testb xor popa mov jb lods aam mov roll sub mov xor inc and andb test inc and xchg push popf sub inc xchg mov je and (bad) or orl inc xor and sahf repz jb mov and ljmp cwtl xor adc or fs dec sbb mov icebp or les das add (bad) (bad) cmp push or aaa gs add test arpl inc push in outsl sub xlat mov shlb push jnp inc and push xor mov ss mov lcall loopne jns mov sahf adc fidiv sub ss ja xchg sbb xor mov pusha arpl and fs push or popa notl lret and xor xlat sbb lods lea inc inc and and sbb push sahf pop and push mov xchg xor out fistpll jno jo cs mov subb test or and inc and sbb sbb pop dec dec test arpl pushf cli leave sbb xor jl les fwait adcl adcb mov bound jno adc xor lahf pop nop xchg inc ja and jno jge dec js xchg add xor stos xor adc aad xchg roll test pop cmp cmp lods (bad) add prefetchnta ret sub push xor stc xor add test xor mov xor xor mov xorl jo or mov and mov sub inc add inc outsl mov or je pop test fmul ret fcmovnb (bad) pop mov sbb orb xorl (bad) fisttpl std sub inc xor cmp (bad) lds cmp aas loopne mov das pusha mov and adc sbb lcall jge push and or test fs pusha mov loop aad cs cmp fbstp loope or pop in adc jo loope sub loope mov dec js push outsl xor imul mov ss xor mov nop dec fwait ss add mov lcall xor cmp popa add cld xchg imul mov and ret or lret mov xor cmp dec cmp test lods xor sub or push lods in add dec (bad) hlt (bad) xchg inc pop loopne xor mov push js mov xlat js add mov mov sbb push xor and mov or test mov or gs inc inc inc or add fsubs pop add loopew addr16 nop mov dec or inc xchg xchg mov or inc lret mov inc in mov xor out push mov add mov ss fs and int3 inc js add lret mov jmp cmp mov mov mov adcl and and push jno mov jnp jne cmp push sbb pushl add inc sub pop xor mov sahf push xor add mov clc mov pop es add popa add jl xor add and add jecxz xchg or or xor sub loopne in inc daa xchg jb inc and push mov lods in outsl shrl sbb addr16 xchg dec jmp out add shrb bound dec or mov ret mov sbb clc pop mov pusha sub fist add add cmc add jl sarl push ja (bad) adc or fwait xor xchg inc jmp imul lods mov mov call cmp dec cmc mov or add pop mov inc adc (bad) ljmp xchg push sbb leave push sar dec jp into sarb and inc sbb sub jo adc sub movsb adc sbb outsl add sub sub pop sbb or inc push dec popa xorb add cmp add rclb jmp and cmp aad jecxz mov mov cmp push movsb xchg rorb aam arpl andl inc fsub aam es test mov sub push insl ffreep imul mov add or outsb loopne stc xor and cmp jno xor aad add mov push add jecxz xchg insb int3 inc push ret xchg jecxz jne mov dec lea add and rcll and adc pop les or out add adc push xorb (bad) scas and xchg add push add jo add pop mov mov or sub lock lods sbb mov or or leave add insl cmp adc push subb sbb (bad) and iret add add fwait dec and add dec add inc and clc push or aaa roll pushf call jge rolb call and test pushf mov cmp xchg xor sbb mov je xchg pop xor xchg add add mov imul mov add test xchg lret xor (bad) jl aam cmpsb fwait dec xchg imul ret xchg fild xchg rorb pusha notl adc adc adc sarl nop rolb popa mov and rorl adc xchg gs pop mov or and leave rol cmpsl or sbb or and test ficomp and push adc push sub mov inc sub lods fsubrl mov sub sub cmp fmuls sub jne inc jbe add cmp cmp dec ja push ret add js inc inc or add bound mov inc jecxz mov add mov sbb mov sbb jnp,pt adc push add inc cwtl xchg xchg loopne dec push xor test add pop aaa or nop xor push or scas fs rorb aaa xor test pop test daa ret pop nop movsl push push loopne sub mov sbb adc add clc dec (bad) xor sbb out push mov add mov mov scas add adc mov fwait push orb sbbb cwtl lret dec cmp adc inc sbb xlat repnz or xor fsubs insb and add fisubrl call push jb xor sub or loop out mov add push mov push pusha les add xor jbe sub and leave jne pop dec nop mov xchg push sbb sbb mov sbb mov rorl xor adc xchg sahf or mov jbe cmp add addr16 and test xchg inc mov cmp and leave and pop in call shr in mov cmpsb and inc imul xchg jae xor (bad) and pop push (bad) or fisttp (bad) add add inc mov jno jecxz enter cmpsl aad xchg add outsb push andb cwtl jge pop rolb mov ret ficom mov notl xchg pop sarb cmp adc sub or inc sbbl movsl pop aad arpl sbb lds jns or arpl lds hlt pusha lahf clc mov fdivl adc in dec (bad) hlt movsb xchg and jbe inc psubusb jae xor add (bad) mov sub mov dec add mov adc stos lret sub (bad) aaa or xchg imul cmp lods imul add and xor (bad) xor adc cmpsb orl jmp xor adc adc movsl ss movsl add adc inc and enter inc inc inc push addr16 add lods push iret mov loopne leave xor xchg repnz adc sub and das lods adc imul das cwtl lret dec mov loopne xchg push dec repnz dec adc and test pusha or xchg mov dec pop aam jne xchg add data16 test pusha push add (bad) xor mov pusha nop or add lret adc mov test sbb jne int3 gs adc pop rolb xor daa and and adc test ret inc inc pop (bad) push and push popf test mov enter int push call push insl loopne add add and lahf xor dec xor push push adc imul inc mov (bad) (bad) mov mov push (bad) and cmc dec arpl aaa sub adc cmc dec sarl (bad) shll xor sub mov sub (bad) add cwtl movq loopne add ret test sbb dec xor cmp rcrb sub mov addr16 orb outsb shl xor add dec sub nop pop enter jp xchg mov rolb sub mov adcl adc add xor pop sub push pop xor ss jns test or mov push mov into sbb push jae int xchg sub bswap rdmsr sub adc mov xor ss adc sub inc outsl cmp mov mov sub xor mov movsl (bad) xor mov inc sbb mov adc pop pop outsl mov fmuls jnp xor pusha cmp adc movsl das sub insl roll es sti fisttp add xorb sub xor aad and gs fcomi xchg xor inc lahf sub or outsl add mov push dec adc call xchg or xchg pop jmp imull rorl push sub xchg addl pop push adc aaa in imul sbb enter mov imul in fmuls dec xlat fsubr sbb inc imul or xchg dec adc jb mov mov xlat and dec ret adc popa xor hlt add test sub lahf ss xchg loope inc js clc cmc adc insb push les add fidivl sti fs push jmp pusha add ret mov or xchg hlt (bad) and inc inc or jo sub shrb (bad) insl lcall nop cmp dec test mov sub jl (bad) mov lods ja pop push fcomip js sub ret fimul cmp jns add rclb (bad) es add inc pop mov pusha and inc dec mov lds or push mov stc xor cmp xor cmc test xchg lods and xchg aaa xor dec adc test test inc aaa xor lret push cltd out movsl mov loope xor inc inc mov sbb cmpsl fidivl push lock mov ret andl fisttp rcrl xchg stc sbb sbb test add loopne js cmp xchg les push adcb insl enter mov test push sbb sbb (bad) mov xchg sub sub mov pop pop inc and cmp fiaddl add push pop inc mov mov adc ret cmp shlb test push es jge add cmp add and (bad) pusha pop mov jmp mov inc xor inc aad mov popa mov les or add (bad) xor adc inc lea sbb mov inc or (bad) adc ret addr16 xor mov mov jno add lahf and and test xor imul or jbe lock adc add lea in jle daa lods lds inc flds addr16 and popl add cmpsl mov and and dec loope je dec aam mov negb ret sbb movsb pop push adcb xchg arpl xchg mov add sub cmovl mov js pop test or jg cmpsb xchg jp popf nop (bad) ret xchg dec data16 or outsl and inc sub push aas or jnp push pop sub std or imul pop mov pop in sub mov rorl dec movnti push std fldenv sbb and rol test add loopne jg add mov cmp fisttpl mov or dec clc movsb lods cs aam test xor adc add xor push insl push push pop imul jmp (bad) scas insb enter or push xor sub mov cmp mov rorb sub add sub add mov xor lea xchg cltd arpl cli mov xchg movsb xlat (bad) and pusha (bad) movsb add pop push inc add rorb dec mov push rcrb xchg lds xor mov (bad) cmp movsb lds push push or xor pop les into xor or add rorb mov jge mov mov jno lock add aam stos pop nop sub mov mov loope test inc stc xchg xor mov pop pop mov or into xor sbb ja call call and add sub cmp mov adc loop lea mov ss mov mov movsb cmp nop inc nop imul push xchg mov mov pop inc les addb mov inc sbb sub rclw pop xorl adc xchg sub gs mov incl nop jne xor popl inc sbb or add insl cmpsl dec inc jns or test and icebp sbb push and or inc xchg pop aam inc jecxz adc add or inc inc and insb in xchg xor push and inc or ret jl xor add push sub test add mov inc mov adc push inc movzbl xor xchg jo pusha lcall pop mov push push (bad) xor or (bad) lret fcom bound xchg jo sub xchg jo inc divb or push push rcl pop inc (bad) fsts ret sbb jge xchg mov and loop rcrb stos cmp lods xor ret add adc popa gs xchg aad (bad) (bad) xor xor (bad) sub add pop fldenv xchg pop mov andb add outsl jle mov mov psrld test test inc cmp lea pop int sarb in mov adc arpl or cmp ds aam or lea push and mov les repz pusha call cmp sub in push cmp push imul sbb test movsb rcrl push xor dec adc rcrb jb sbb roll data16 mov jne cmpsl xor outsb fsubs and xchg cli xor push mov or mov pop jl sbb (bad) pop fist cwtl cmp (bad) mov popa and add xor mov xchg or (bad) sub fwait lods orb or jne cltd cld pop fwait jp add xchg ret xchg sub mov sbb jg add jecxz cltd (bad) lods je adc jl es out xchg mov add pop daa cmp test add fwait pop (bad) mov adc mov add pusha and pusha (bad) lds adc loope inc nop inc cmp dec mov icebp leave cmp pop xchg or (bad) mov mov fistp cli dec mov mov cmp data16 ret mov add imul jg mov cltd les cli gs push insb movsl jl std mov pop pop adc xor mull test lock add cmp sub inc add mov cwtl sub gs cmp fsts cmp jmp gs lock leave std inc lock jl adc inc enter sbbl or or cmp ss (bad) test add sarb aaa adc test xor adc jo sbb push jns mov and aad adc jle rolb nop lret and ret loopne sub jo lods mov add sub mov fisub xor lods (bad) sysexit ret inc inc mov pusha gs inc addb fldenv push inc mov xor xchg test sbb insb bound and sub pop cmp pop adc pushf push bswap fnstcw cmp aaa sbb xor inc mov subl cld test push adc lret movsb add dec xor pusha cmp clc aad xchg lods pop cld sbb inc ret dec sbb sub or ret inc sub xor cwtl (bad) ljmp pop mov ficoml cmp pop pop mov jnp insb or jbe jp mov sub rcrb std outsl cmp lea loopne mov lods stc and mov inc or addl push aas cwtl xor push jo addl imul mov sub loope jle push xor sub jmp push mov mov fwait xchg enter xor jb push pop pusha push pop into lahf (bad) (bad) xor mov mov into (bad) pop inc adc movsb ret adc xchg or xchg repz add fistpll cmp test pushf xor adc pop jmp adcl xchg xchg cmpsl inc out inc test lret fbld sbb insl xor xor mov insb jnp dec fistpl mov xor test mov cmp add xchg pop dec mov adc lods jns pop push add lods cmp nop mov movsb aaa or and and xchg add mov daa add inc sub adc adcl sbb lds aas or nopl push nop rcll cmp and jb pop test sub pop inc push out cmp or sub cmpsl movsb mov mov les mov pop sub mov push adcl jnp xchg mov adcb or test loop xor dec sbb nop lock push xor jge in lret enter or jnp pop js or and arpl add lds jbe xchg nop or and pop jae pop or or mov jo mov bound je fsts inc and mov pusha push lea xchg sbb dec icebp xchg notb imul push mov rolb pusha pusha pop xchg inc sub stos sbb arpl int3 adc dec dec pop mov jns mov inc or xor test and frstor mulb adc outsb daa or flds in mov add xrelease (bad) mov fild sbb sarb movsb gs adc inc loope or jg xor xchg xor cmp mov rcll mov xchg mov adc es or add push dec std mov adc imul add xor xchg dec cmp pushf test xchg addr16 xchg and in adc push mov mov xchg int inc xchg sub sub add xchg cmpsl mov fiadd rorl outsl dec xchg and cmpsl and aas sbb mov rcrb mov sbb inc mov insb in (bad) aaa sbb jb addr16 mov inc dec pop mov add add or push inc mov fcoms mov into sbb lods in adc pop nop cmp mov imul pop sbb adc sarl or mov (bad) add insl (bad) flds scas js mov mov jnp test rcrl pop jae push jmp rcrl jecxz je sbb pop adc push cmpsb push push sub push (bad) xchg mov xor xor lahf xchg test adc xor aaa lea sahf inc mov rolb xor mov sbb xchg xchg and or add mov and adc sbb dec sub mov or xor xor rcrb xchg ret dec adcb mov lret shrb cmc insb fild sub inc pop fsubrl fisttp xchg les dec pop mov pop and xor xor xor xor leave pop xor lea lock and or or imul push mov or pop or dec out add ret sub and cmp mov mov inc jo stc es mov dec push mov (bad) cmpsb adcl dec xor adc shrl inc dec (bad) nop lret xor add sahf cmpsb mov xchg mov jge add or and andl rcrb xor push jno das dec inc pop sbb or test (bad) mov sbb inc orl xchg or xor xchg rorb rcrl out sub js sub loopne mov jg push mov dec adc inc lock and or mov jo mov (bad) mov sub in popa lods and ret xor sbb pushf sub pop lea and xchg pop jne jb lds add adc mov aam and stos add (bad) mov sahf or push pop aaa ret mov popf mov into adc or push mov nop cmp dec (bad) and xor rcr sbb imul and dec jnp fadds sbb xor push mov test add xchg push pop (bad) hlt mov push xchg cltd xor mov test pop sub and cmp nop cmpsl (bad) dec jbe sbb cmp cmp push cmp pop xchg adc rcrb inc sahf xchg jo or sbb mov jmp enter mov pop mov mov andb popa pop or inc jo push xchg fldenv mov test gs jecxz icebp or push xor in add push sbb or movsb mov rolb addb shlb aaa iret bound rorb adc pop add and dec mov pop incb inc adc xor adc mov int3 sbb add sub addr16 insb mov in sub cwtl pop daa fisubrl js ret xchg push sbb rorb or dec pop push cwtl mov xor test rorl push sarb or imul jo mov test leave pop xchg and loope lea jae jmp and insb (bad) clc xchg aaa jno xorb (bad) out or mov xor jne aas cmp mov mov xor xor rclb lods and jbe mov xor faddl cs sbbl xor fisttp cmpsb mov das lea shrb mov mov push test repz sub rol daa add test cs xor popa pop cmpsb loop subl leave xor cwtl js shrl xchg inc jb ja ret dec arpl incb or lds or rcrl xchg sub rcll mov inc pop enter loopne roll shrl popa cmc fwait jo mov mov enter mov ret sub sub ret mov inc sub rcll test xor adc orb sidtl lret cltd xlat gs mov sub enter sub insl jl cltd ret mov mov pushf mov test roll sub mov jne nop inc cltd leave or lret fwait adc pop mov pusha les rcrb mov push mov and arpl xchg mov test inc ret scas and inc movsl jecxz push xchg sub push push sub adc sbb add mov dec jecxz or inc xchg or into int lock mov xor movsl nop and dec mov es inc or in and cmp add mov jns mov mov cmp add add and add cli sahf add adc and ds cmp testb daa push sbb dec (bad) push mov inc rorb stc (bad) jo hlt jns test pop sbb sbb xchg mov je lods jmp xor lods mov dec or lret adc pop orb stc fadds pop xadd sub imul inc push sbb in push fisttpll mov cmc add outsl or cmpsl xorl lret (bad) adc fildl xchg aam xchg ss xlat shlb ja inc xchg add or sbb dec cmpsb mov sub orl cmp and inc test movsl insb clc add sbb xor imul and testb add popa adc and imul pusha popa bound repnz jae adc add cmp pusha push xor cmp lea add mov xor aaa xor mov xor inc test movsl (bad) xor xor mov xor or xchg sbb xor fildl xchg dec lea (bad) push push or mov add push sti cmp push push daa or negb jno xor add out push mov cmp add std xor add dec cmp xor jbe aam int add call cmpsl roll xchg inc jmp popf fwait pop push xor xor inc add or inc mov add popf icebp std cmp or pop inc xchg scas and andl push rclb inc sub movsl mov sub jmp (bad) or addr16 jmp icebp mov adc jo lea xor mov or mov lret mov scas cwtl xchg jo cmc out xor push inc and lods aad mov cmp pop inc ret xchg insl js sub xchg xor ret jge flds sub push cmp mov add (bad) arpl xchg rcrb outsb adc hlt lea xor mov mov rcrb mov ss rcrb add test movlps xor cmp int3 sub lds adc add or sahf sbb adc test les or push push shlb aam or and (bad) movsl lods (bad) xor pop adc mov test js mov sahf cs add test lock or push and xchg pop test xor dec jb rclb adc inc cmp or iret xchg test cmp or xor (bad) xor ret (bad) jns mov pop push imul jge cmp or or cmp or popa sub xchg adc or mov xor mov inc lret ljmp and add ret inc test lea pop ret xchg xabort xor sub or adc outsl sub js or and xchg iret rolb add add pop or jnp mov and cwtl sbb jmp cmpsl mov sub aam fstl jmp sub push cmpsb mov test adc cmpsl (bad) lods fildl sbb and add inc cmp and mov and addr16 xor dec inc incl (bad) in pop int3 lea dec sub inc mov out cwtl xor (bad) add aas loopne jp fs or addl mov xchg jmp or popf popa push je leave inc push rcl or ret shll popa or and add mov xchg xor xchg push pop xchg sbb rorl adc (bad) icebp add das adc lret dec dec xor mov jb dec add icebp gs inc cwtl jne mov gs je shl pop ret out or or lock xor or inc ss dec push push (bad) mov xsavec or inc psrld adc das xor adc and xchg or int ja fadd xchg pop sub sub add sub and mov addl cs lret sub or arpl mov xor addb add test adc jno pop pushf mov sbb into and mov add mov or pop or mov xor pop movsb inc (bad) aad cmp and mov test cltd xor or sbb fwait jno adc dec adc mov jno (bad) call push xor dec pop cmp shr and fimull xchg mov pop out cld jl test enter scas add lds adc inc bound mov mov push mov lods dec or std mov jno add mov adc lock push dec pop ret rcl sarb mov addr16 adc and cltd subb xchg std nop adc cmp jo inc mov inc jp sbb pminub scas ss dec add dec loopne sub test inc inc pop jo adc je jne and andb ss es add jb cli insl cmp or (bad) mov cmp sbb xor xor push jne xor loopne push sub add mov or push ret mov loopne rolb icebp mov add mov xor push mov sbb arpl push adc sub adc outsb inc xor add aaa jmp xchg aad sub std adc mov and xor sbb jnp add test (bad) cmp adc add lret mov xchg aam xor jns xchg pop sub rcll in scas add sub fmull push (bad) add rcll mov sahf les ficompl dec fwait sbb xchg insl movsl dec pusha fs sbb adc int3 mov push sbbb int3 dec or rcrb (bad) push cmp inc cmpsl add ds xor adcl wbinvd adc add xchg pop rolb sbb fstpt or inc aaa dec mov mov dec lods (bad) aaa and dec add and or pop mov add inc xchg sbb mov rclb sbb pxor insb xor add adc das insb loopne sub gs sbb add sub mov inc mov cmp fisubl mov std inc fcmovnb lcall inc push lods push xchg cli and mov sub push arpl (bad) sub add pop adc (bad) dec adc or xchg push push ficom cs mov sub popa inc adc and (bad) inc sub xorl sub fcomps dec push sahf cmp dec sub pop adc imul lock sbb add dec mov jg inc or daa cmp or adcb dec loope das movsl xchg lret fwait (bad) les cmp jecxz rcrl nop (bad) sbb in je pop mov sub addr16 mov test sub sarl adc or inc imul imul sub mov add adc xor inc mov cmp adc aas cmp (bad) lds jbe das ss addb aaa orl dec js pop fld bound pusha mov cmp add push mov repz (bad) adc lds sub in loop (bad) test and xor xor push dec sub or dec enter repnz jo int add addr16 cmc dec xchg andb dec pusha add mov lock push and inc call lea or test icebp mov lods push sub rcll or test inc or dec xor add dec pop rclb lock push lea mov mov jp mov popa pusha xor or xor sahf cwtl dec in xor pop mov mov lods xchg mov loopne gs cli test lds ljmp repz add int3 (bad) cmpsl add xchg lock int3 and lahf ffreep xor into adc xchg ja push (bad) (bad) sbb lahf jecxz ret leave rolb or ds mov dec mov xor shlb jl lea adc dec mov sbb xor in movsb outsb pop push sbb xor adcb icebp push int3 inc or sti xchg repz inc or ret add and out loope jge xor pop dec loope data16 and (bad) cmp popa (bad) mov xchg jo addr16 add sbb sub sub ret jp or cmpsb lock add nop mov push and movsl addb push data16 xchg push push mov and enter or sub or popa mov mov popf stos loopne test xor cmpb jne push dec pop aas aaa movsl test adc rcrb cmp test inc push or xchg inc or add mov icebp shrb push pop sti lret bswap push mov loop add daa or sub decl pop lret sub aas scas rolb sub orl (bad) xor ja mov pop shlb pop sbb lret mov and xor add sar (bad) (bad) sti mov cmc inc imul xchg cmpsb cmp mov or (bad) iret (bad) stos add fadds push and mov loope cmp ret cs or inc incl sbb xchg mov add xor (bad) insl add inc jno inc fstps loop push js (bad) and (bad) inc sbb xor sub insb sbb lods mov jl push dec std aas xchg sbb dec push mov adc mov and and adc or add lahf popa insb push sbb scas popa jecxz cmpsb push xor (bad) mov test cmp or or popf mov jmp add and cmp add sbb inc insl outsb cmp inc or rcr inc mov scas push mov mov cmp rorb test push pushf or sub popa cmpsb leave popa test imul pop mov gs movsl pusha jl mov xlat pop jnp and lret test iret scas ret dec adc push shrb or dec add xchg mov bound xor test xlat xchg lea (bad) pop xor add ret imul lods adc xor sbb jecxz and xor lods mov dec les mov cwtl push lods es dec adc jp rcll or jecxz and addl lea xchg pop push arpl mov push mov dec sbb rorb (bad) adc repnz inc out sub pop push inc jmp add lea xlat cmp imul rclb xor rcll xlat mov loop add fcoms cmp jae jg xor ror jecxz xor mov loop push call and dec test (bad) nop lds rcll pop adc outsl pop and cltd insl adc push movsl pop les test sbb sbb clc or fild cltd cmp mov lret inc sarl push jg je movb in and and and or sub mov or leave dec js push pop mov cmp int3 push pop mov inc mov add loopne pop cmpsl test pusha mov push adc insb mov adc add inc push adc fcmovne movsl bnd fs add adc pop or xor pop or pop adc sbb mov cmpl mov nop dec xor icebp or loop mov movsb int or (bad) jno jo adc lret cmp faddp xor add mov dec sbb addr16 sahf lea (bad) pop jno int push pop test jne bound jne lock inc mov adc adc pop xor xor js daa inc js test fsqrt sarl iret inc (bad) xor xchg insb and mov aaa and xor and imul sbb add lret and inc lock pushf sub push mov sbbl and daa mov mov dec movsb mov hlt inc (bad) ret ret pop inc sbb push dec mov push cmp mov ret repnz add or mov mov jne test imul (bad) sbb xor cmp mov dec and lcall ss int les (bad) sub dec adc lea xchg sbb mov add pop add dec out pusha fmuls mov push mov adc icebp dec sub xchg mov mov arpl push jbe mov xchg xchg arpl inc jmp repnz fadds pop popa sub mov adc mov aam in mov add int3 adc xor push call icebp or call push sbb jge rep lock sbb mov mov lahf push sahf sti loope sub outsl test mov js pusha cmpsl fs cmp add (bad) pop pop orl test xchg sub jp mov fdivl (bad) xor js push mov jns js add aas pop cmp mov imul imul sub or mov stos in lea pusha outsb pop or sbb subb hlt sahf leave out outsl test mov pusha and adc pop push (bad) test cmp push pusha inc and mov pop inc lds or pusha dec loope (bad) test js jne pop sub mov add mov ss push ret sbb sub or or add add movsb xchg movb lret addr16 test mov lea add sarl mov and aam or fs mov xchg lcall aaa orl sub push xchg (bad) shll pop inc inc and cmpsb insb and cwtl sbb add xchg stos gs les xor add add (bad) xchg and popa and or or nop or iret sub movsl add cmp nop jl xor sbb mov xor in inc fldenv cmp fwait in gs cld pop cwtl push test add or and or mov mov (bad) (bad) jne arpl push fucomp xchg mov add call or stos popa add cwtl les jmp xchg add push mov mov add (bad) dec ret or xchg inc push xchg test dec movb sbb inc leave add ret mov mov mov sub lods js loope (bad) loope notl cltd scas push (bad) xor and loop push mov sub dec cmpsl orl cltd sub (bad) jne push inc mov cltd mov ds mov adc pop or sub mov (bad) (bad) sub (bad) xor add popf js and mov jecxz sbb jb cmp nop popa sarb push or mov adc mov daa popa dec add sti and and mov pop xor and sbb pop lea mov mov jne mov and loope arpl pop dec sub pop and or mov mov jecxz pop test sbb jno mov and jo sbbb add add nop mov inc sbb rcrb in test mov xor sbb (bad) cmp inc pop mov inc cltd inc adc or jp mov fs test cltd xchg dec sahf adc add and mov jo ljmp push mov jmp arpl pop dec lahf lret fadds mov jecxz and sub add in lock scas jp ss add (bad) xchg (bad) es test push (bad) fadds sub or jno mov arpl xorl jns sub stc sub push daa aad pop rcrb xor sbb add lds jp adc aaa (bad) xor sub or add add cmp fistpll mov cmp ret sub inc inc call pop cmpb xor lock add mov add adc inc aam addl test nop fwait movsb orl ljmp add or xchg (bad) cwtl xor ss xor les mov cmp insl inc sbb arpl or sbb mov pop dec sub pop insb mov cmp pusha fs cmc or shll add mov (bad) hlt xor ds aam xchg inc mov pop adc pop dec popa dec and scas mov add rol inc add adc ret xorl test jmp push xadd adc mov lcall sbb pop mov xchg xchg cmp mov das add rcrb push adc xchg and aam dec (bad) inc ss xor inc adc jp mov mov dec or adcl pop xor test jno leave and insl outsb pop xchg rcrb jnp xchg xor jge adc xchg jmp cmp out pushf pusha pusha and inc xchg scas subl les flds leave or jb jnp and pushf xchg pop (bad) imul aaa jae push les dec sub xchg add or (bad) fcomps sub xchg add loope cltd or mov mov and cmp ret aaa repz cs loop mov and xor bswap rcl (bad) test test jle cmp sub or mov cmp mov jo xor ja push test outsl and inc mov or in adc cmp fidiv xor fdiv cltd mov cmc cmp add or test pushf adc inc into and or (bad) push stos ljmp push inc cmp cmp loopne bound andb xor or aad lds ss in inc xchg sub xor or mov push subb add add mov pop js xor movsl je inc loopne cwtl test repnz nop fisubr mov and test xor xchg mov popa loope sbb and lahf add mov or pop push (bad) (bad) jecxz jne push test xchg or jmp mov repz cmp xor mov out shlb sbb add test cmovno outsl add shlb dec dec inc and push sub nop adc xchg inc sub adc mov inc cmp cmp xor mov call fstps xchg add adc push je inc les mov (bad) lea test pop enter xchg push movsb xchg les adc adc (bad) xchg mov sbb or rol pop jmp xchg lea shrl dec and xor dec pop mov or sti movsb lods push adc adc jb cli cmp in clc or punpckldq aaa xor insb shlb call and sbb shrb or cmc cmp aaa movsl inc add fisubr adc mov out mov dec sbb rcr int icebp add xchg ret lahf push scas inc sbb pop inc pop jmp movsb loope dec shll add rcr mov repnz or inc mov in adc or dec and mov dec fwait inc xchg mov loopne xchg outsl stos adc adc xor fsubl cmp mov add xchg loope sbb test and fstl pop imul xlat imul nop test das add push inc fdivrs mov xrelease adc nop pop mov adcl sbb dec sbb xor sbb mov xchg mov (bad) faddl push ss (bad) sti inc adc dec dec stos pop sbb das cmp leave xorb mulps es xor xorb dec test xchg adc pop cltd xchg adc xchg inc lock ret lahf roll mov cmp xchg adc (bad) lock sub addr16 adc adc icebp imul or call jb lea cmpsb xchg push add inc jbe add addl or and add ds inc sbb xor cmp (bad) rclb imul and cmp adc aad jns out sub add push (bad) aam fild roll and loopne lret xlat jnp bound mov lahf add mov mov add sarl push mov mov stc adcb add int3 push cmp xor jmp dec dec xchg dec aaa (bad) bound xor imul mov pop jns xor push adc movsb xor dec aad xor loope aaa sbb popa (bad) ret and inc or xor sub add add sub popa sbb mov sbb test popa mov iret pop jno inc xor leave jne pop mov bsr add and xor pop in (bad) ja cmc xchg movsb mov dec mov xchg or mov fdivl adc push sahf jb pop mov repz fnop leave (bad) sub cmp mov mov xchg pop bound sbb mov mov sub insb jmp imul jo dec push or fisttpll aaa pop clc xchg movsb push mov mov xor ret or xor xchg test arpl or divl adc sbb ja sbb add inc mov xchg mov push nop daa or jmp pop pop rorl xchg xlat bound pop xchg fsubs xlat sub sbb pop cld je or aam adc sbb xlat aaa lods or movsb popa mov jmp mov jp inc test push nop cltd pop adc pop in mov add lcall ret movsb sbb push mov lds repnz lret in dec ja stos and xchg inc push in mov pop mov add in dec cmpsl rorb imul rorl xor jno arpl xchg pop sub mov add je dec add add sub or sbb sub adc rolb in xor add and cmc loopne test out lds jo icebp jg popa add pop add sbb jl or sub scas insb pop pop lahf nop add inc cmp sub push inc xor or push and or or fisttpl xchg or outsl pop fiadd xor push pop or pusha iret es ja inc lcall xchg lea ror popa push mov iret test jns lods sub xor sub iret cs ljmp insb dec lods sbb sbb adc cs loope sbb aad ss push sbb and imul dec andl stos fidiv push pusha lds push pop push dec sbb sub mov xor mov inc shll inc xchg sbb push mov dec xor or pushf inc push dec and (bad) lahf sub rcll icebp nop mov inc lret dec mov mov mov lods repz and insl mov pop xor xor add test mov es or pop push rolb icebp adc imul xchg (bad) ror push sbb sub jmp popa jecxz jecxz add aaa and mov loop test aas dec adc or outsb pop add adc (bad) mov sub lret jp lock add mov push addps cmp and push ja jecxz mov or repz aaa inc nop mov pcmpeqb xor adc nop movsl dec mov popa dec or ja (bad) or aam add insl or xor aaa pop adc mov out add cmp inc inc call loopne sbb je push jmp add icebp xor xor into xor adc mov jg jge push inc inc add in popa call cmp ret (bad) loop or lock inc mov cmp and mov xchg and mov mov cmp gs iret or adc cmp addl xor lods xchg xchg popf sub test xchg hlt add pusha jecxz lods inc js pop xchg mov nop adc pop sbb icebp into (bad) sbb loopne inc arpl push pop lret rcrb hlt mov push inc sbb ss lea shrl add hlt rorb hlt add adc std cld popa cmpsl xchg xor mov or add add or and and jmp cmp into outsl lock mov push adc xchg addr16 cmp jo fs test xor jge push mov or mov cmp adc fldcw add xchg rol dec push lock jne jo adc (bad) test sahf inc sbb and sbb test aaa sahf mov into (bad) lods cli mov adc hlt insl fmuls inc rcl pop and add daa addr16 pop pop imul std cld mov xchg add fiaddl pop mov stc loope adc int cmp lods xchg inc jecxz call les mov xor rolb and cmp outsl xchg mov mov push jb andb or cwtl sbb cmp popa push popa gs lret push orl popa inc data16 iret (bad) mov or repnz add sub jnp movsl aam shrl and and ds and int les insl loope xor mov pavgw fwait lods sbb lods js sub add dec enter dec push cmp and lods inc or je xor mov add mov add or adc pop sbb sbb ret xchg sub jecxz and adc rorb jo fcmovnb sub pop push dec sbb fsubrl arpl insl add or pop imul pop inc mov xor sbb pop dec or inc jb adc adc add push ljmp lock push lods iret rclb dec enter aaa mov popa cmpsl (bad) xor xchg xchg mov xchg add sub sub ret inc push test pusha loop pop mov sub cmpb cmpsl mov rorb dec mov (bad) lret addl adc jmp xor xor pop pop mov lods in andl pop push (bad) shll dec inc cmp dec cmp sbbb scas mov repnz aaa adc out mov xor dec xor popa fcomi xchg (bad) das sbb push popf sub test push cmc das xchg xchg jb jns xor stos hlt in pop test xchg or xor pop xorl mov shlb add sub adcl dec sub sbb (bad) xor mov and stos mov mov adc xchg and inc pusha lcall pop sbb dec ret (bad) sub pusha imul or adc xchg push cmp and rorl es fwait or push popf fdivs inc cwtl and mov call xor add dec sub xchg push mov push rol or (bad) shrb push inc inc xlat and fwait (bad) adc out xor xor cmp add push add and sbb or pop xorl cmp or xchg sub adcl xor (bad) iret popf mov dec xor (bad) frstor and data16 xchg and (bad) adc subl xlat mov in dec xchg popa or (bad) sbb xchg dec push int3 test sbbl iret or xchg hlt and xchg adc adc sub jne (bad) stc xor add dec loope xchg pop pop ret mov and jae xchg repnz or add xchg inc movsl or mov sahf adc xchg add (bad) add mov insl test lods dec test rolb ds cmpsb push jp fidivrl add push jbe sbb sub gs push sbb sub inc or mov es shlb movsl lds pop jns lods dec loope in lods xchg pop or emms ret pusha shll lea sub in or or dec cmpsl or and movsb lret cmp push cmp sbb (bad) mov fs sbb (bad) mov xchg test or test inc call addl loopne dec xor jnp push mov (bad) xor pop or mov mov (bad) push test sub jne add imul ja (bad) adc sbb cmp fistpll lcall inc dec lret test mov pop adc inc arpl movsb push xor mov enter push aaa inc jecxz or cmp movsb push or sbb lock mov lock adc test cmp xchg and jg,pn adc aam and (bad) push outsb pop (bad) pop and push in push or dec adc mov push pop adc in xor sahf mov xor add leave movsb xlat add xchg je arpl (bad) mov fisttp or push add lea ret adc fwait lods jbe mov insl cmpsl mov cmp imul cmp (bad) mov xorl sbb or xor xor and inc ss fcomps dec mov jmp jmp arpl popa sub mov add movsb lds lock xchg and inc aaa add xlat aaa popf sahf dec test pushl pop xchg jne ss ss inc push test lsl gs mov add sbb or xor cmpsb int3 push add (bad) sub lret push lea cmp dec push and xor add adc popa mov inc add sub imul xchg lret cmp pop or call inc add jae xchg sbb test mov icebp xor inc or pusha bound ret enter sub or xor adc cmp xchg ja add and jge mov add or rorb xor movsl cmp mov add imul and je ret xor xor arpl pop lahf dec add xor mov popf jno add mov jmp test leave mov in cmpl lods cmp nop (bad) insb and test mov xor sub jae test xchg add leave inc call test sahf xor aaa fnsave adc fistpl sub (bad) je and sbb xchg inc inc gs jge (bad) or pop xor sbb sub pop mov enter cmp fist dec cmp lds dec sbb mov adc rol fldl ret push daa repnz sub iret scas insb inc into push dec pop (bad) mov push sbb cli cli add repnz dec fildll lcall lret rol xor add xchg lea imul inc mov xor sti jne inc arpl pop add push add test xchg xchg ret xor add push sub add and in in sbb leave lret je xchg or push push mov mov xor add adc mov push loop out cmp fldt outsl dec fiadd adc xor xlat lods add bound nop sahf cs sub add pop data16 or and sbb (bad) leave addr16 pop add pop outsl pushf pusha mov push xchg dec jmp mov insl xor dec pop mov orl push or mov dec pusha rcll les insl pushf or xlat xchg jb inc xchg mov inc das data16 rcrl jo int dec push inc leave or or push xor enter icebp or sbb cmp aaa cmp (bad) or faddp xchg sub outsl mov aad (bad) adc adc les mov aaa add mov ss inc mov arpl cmp sbb or out or mov or leave cltd insb mov sub dec popa push inc jo jge xor orl or mov push pusha mov imul outsb in sbb xchg adc aaa dec pop mov fnstcw or lcall mov inc pop bound sbb xor adc lods or add mov sahf push and mov dec movb mov adc mov adc fimull cmp sbb jnp repz scas add cmp add xor mov xor mov xchg sbb arpl pusha mov nop jl cmp (bad) inc bnd xor aam int3 adc adc inc mov dec sbb outsb pushl xchg mov jo outsb arpl jae outsl jb in (bad) out popa addr16 fdivr loopne adc dec inc add add pusha add (bad) fldt inc add sbb push add mov out ficom pop push pop pop pop or or or or adc mov or jae jg pop or prefetchw pop mov jmp dec or inc add or push add add and add add les pop inc add fild add loopne push inc mov jl add (bad) (bad) out or jge add add push adc pop and xor mov incl inc mov adc xor (bad) js pop sbb sbb sub jg dec in cmp inc inc inc dec dec dec push push push jg xchg push push pop pop pop arpl stos imul jns cmp (bad) incl mov xchg cwtl cltd lcall test stos mov mov mov mov mov (bad) enter rcl aad xlat fcomp (bad) loop in out call or push hlt cmc div clc stc cli scas pushf into icebp sbb test scas adc mov add scas adc icebp adc int xor push pop popa jno and adc mov sar add adc loope icebp add pop push mov mov pusha inc roll adc fiaddl or js or add mov clc or jae mov adc (bad) mov adc sub mov mov mov rolb in in jae cmpsb jb out inc xor or or pushf adc xor mov mov xor push and cmp out arpl test add and adcl sbb lods adc out mov push mov lods pop int3 (bad) adc (bad) push faddl in xor aas xor and aas xor int3 sbb and pushl sub subl hlt (bad) cmp jb inc dec xor addb jg push fsts push enter adc aas cld add jo push pop outsl (bad) (bad) decl arpl inc pop xor fs outsl addr16 push cmp popa push js pop push mov addr16 (bad) (bad) decl dec jbe pop inc push bound aaa dec inc xor push addr16 inc xor dec jns pop std (bad) fldt xor jp xor jne push jae push dec dec jo inc imul outsl out sahf inc xchg dec dec push xor pop inc jne imul sti mov imul inc xor arpl xor addr16 sti lods insl dec js mov push xor dec inc arpl dec imul push inc inc inc push inc dec addr16 outsb dec ja loop shl loopne imul bound push push testb inc push popa xchg cmpsb inc xor push ficom jl xor cmp pop mov dec out jno jns pop lods loopne daa dec push push pop xchg outsb in loopne outsl ds outsb gs insb movb pop insl js push push sbb aaa pop es xor fs push push sti rcll into push addr16 dec pop xchg leave repz mov addr16 pop push sbb mov nopl addr16 (bad) (bad) (bad) (bad) (bad) mov ljmp out sar repz mov mov xlat int3 (bad) imulb (bad) (bad) (bad) pushl std (bad) loopne movsb loop mov (bad) hlt aam iret jmp mov (bad) jmp (bad) (bad) (bad) dec (bad) out mov mov shl rcr cmpsb mov fadd mov mov int mov (bad) mov enter loopne out test into mov in rol fldcw call mov jmp mov mov in ret loop aam mov mov (bad) (bad) (bad) (bad) mov out iret int fcmovu mov ret hlt sarb mov into mov sti ret icebp (bad) (bad) (bad) (bad) mov fistpll movsb ror lret test mov (bad) mov rcl mov lret aad lcall rcr (bad) int fsub mov cmpsb shr mov test lret aad (bad) (bad) (bad) call shl mov shlb out mov cld (bad) in rcl stos mov jecxz scas ror icebp mov rcl lds (bad) inc fcmovb into pop cld (bad) inc clc (bad) sarb lods (bad) mov shr (bad) (bad) lods pop xchg dec sar xchg call ret out (bad) iret (bad) mov mov (bad) (bad) icebp lret mov insb clc jmp loop int3 shr cmpsl mov cmpsl sarb incl fadd movsl mov cli into enter loopne mov idiv ret ljmp mov mov shr movsl mov ret mov mov (bad) jmp shr imul rol mov (bad) std enter mov out mov enter cld not ljmp mov mov shl xlat mov lcall loop dec xor out ror (bad) (bad) (bad) jmp mov test out mov aad enter mov sbb (bad) ljmp mov into mov shrb (bad) out int3 ret (bad) (bad) pushl lods mov leave (bad) mov ror mov (bad) in inc ror ret mov (bad) pushl into std ret cmp cld rcl mov mov mov clc aaa inc (bad) mov xorb rcl (bad) (bad) out js mov push mov lods (bad) mov int3 rcl xchg iret sar das pop hlt mov mov mov ror ret divl fcmovbe (bad) jg dec repz inc in shr rorl loope mov mov mov out mov decl fmul scas call mov (bad) (bad) mov (bad) mov mov hlt mov sarl int lret xor mov clc leave mov out int sarl les (bad) (bad) (bad) mov movsb aam rcr lock enter stos (bad) mov aam aad cld (bad) mov enter int3 lock rcl in iret (bad) out jecxz lods mov loopne mov shll ret enter ret shlb push (bad) icebp mov shl mov mov sar mov mov out ret mov lds mov jo fcmovnbe mov (bad) mov imul mov (bad) (bad) iret cmpsb mov cli pushl mov xabort dec pop (bad) cs ljmp mov aad fcmovnbe stos out mov ret sub (bad) (bad) call inc int3 in (bad) mov into mov mov fnstsw jmp iret leave fnstenv mov scas mov test (bad) jmp (bad) stos aad (bad) icebp (bad) hlt shl jo xlat (bad) mov enter outsl fdivl (bad) (bad) ljmp xlat in int in in lods aam shrl test mov into mov scas fcmovu in fbstp mov scas cmpsb mov iret mov lret lret in mov cmc shr mov outsl incl out test scas (bad) (bad) ljmp mov dec lock ljmp out mov (bad) incl add or mov ljmp loop mul mov mov rcrl neg mov mov int mov fnstcw shlb ret add in (bad) mov out loop jecxz (bad) lcall imul idivl out jecxz jmp test stos int ret fsubr repz std int sarl ror sti sar shlb iret aam (bad) lock mov in mov lret lock pop mov mov call shr push adc in jmp mov aaa cld xchg (bad) sarb xlat (bad) mov adc hlt (bad) ljmp xor hlt mov push sahf mov into std mov mov mov push (bad) (bad) lret into stos lods pop into cmc shlb rolb int3 mov test (bad) std mov jg add imul mov fcmove mov lret cld ljmp aad repz ret call lret mov mov pop insb (bad) mov in int mov lcall mov mov ljmp mov clc out mov mov mov shl cli lock mov lods pop cld or lret mov (bad) rcr (bad) scas xlat scas enter scas in (bad) jg stos lret ljmp (bad) out mov loop sti ret (bad) (bad) pushl mov icebp jmp mov mov shr mov outsl cli or jmp lret aam mov mov (bad) mov out nop shrb cld (bad) push in (bad) icebp fsubr sar mov mov int3 out sarb cli mov icebp repz (bad) mov mov fcmovu rol lret lret shrb add mov cmpsl out ljmp (bad) int3 or (bad) pushl in jecxz int3 iret mov fnstsw cmc mov enter (bad) in (bad) in scas sar les pop scas mov fidivl in mov fcmovb fsubp div mov std hlt (bad) mov ljmp mov mov enter lock mov shlb iret sahf loop ror (bad) aam movsl jp (bad) mov stos scas fs xchg (bad) sti fs adc stos cwtl aam (bad) ror mov repz mov mov out test inc in mov pop das sar ret shl mov lret push (bad) jmp pushl std sbb decb in mov mov fadd jl mov stos lods leave mov cmc pop (bad) jmp jg ja mov sbb (bad) fsubr mov add insb (bad) fbstp aad mov mov lret clc out loope ljmp ret mov (bad) in decl enter scas in cmpsl mov cwtl and mov cmc fcomip out jmp push mov mov mov lds mov fnop aad mov mov pop gs jg shl clc lret test mov in (bad) decl out (bad) bnd mov les scas mov cld lcall ljmp stos in lret (bad) int3 mov push sarl inc mov (bad) mov or idivb rol mov mulb (bad) loopne stos mov stos pop mov xchg push mov mov mov pop fcomip mov aam (bad) icebp mov (bad) lret leave loopne movsb data16 dec into cmp in fldt cld add test jmp fimul mov mov mov (bad) repnz mov outsl fadd (bad) fdivrl in mov mov push push xchg sub sahf mov cwtl mov mov ret (bad) fidivrl mov xchg out lds mov out ret divl mov fldcw enter mov mov icebp xor cmpsb test cmpsb mov out aaa mov (bad) mov ret sar rol (bad) mulb mov mov push shll sub mov (bad) xor pop les cmp mov dec pushw ds dec fnstcw ret fwait adc mov ljmp mov lret stc bound push lret or (bad) icebp enter xor in jbe jle stos push add pop jo pop fidivr rcr ss pop rcrb js mov test ret stc adc push push shr into in push or insb rol jle sti jp inc mov (bad) in scas (bad) jmp sbb sti out aam sahf push mov mov mov or shlb lret rcr ror data16 mov ljmp sar out scas (bad) cmpsl mov fcmovnbe mov int3 in sar dec outsb cmpsb les mov add fnstsw inc lock mov mov sbb add repnz dec mov (bad) into aam int3 ret (bad) icebp mov push mov or pop test js add mov jbe loope (bad) in add (bad) hlt dec dec push divb pop xchg enter xchg subl out out dec mov sahf (bad) push lret data16 ds scas pop shlb (bad) sahf push mulb dec mov (bad) cmpsb sub add mov jbe leave out shll pop mov lock clc adc in leave ret out or lea aas lret into out pusha inc xchg out mov jecxz (bad) jbe enter divb cs roll push xchg mov push or in (bad) (bad) (bad) mov mov (bad) cmpsb mov test and cs shrb lret add pop sahf enter mov cmp andl es mov pusha add add out mov mov (bad) mov in scas (bad) enter cs lret int popa fistpl jbe rol mov insl inc lds insb stos push fdivl test or mov mov or out mov fnop sti ror scas or (bad) sbb jmp cltd add mov add (bad) lock out mov mov data16 out dec (bad) insb xchg xor sar leave loopne cmp sub ss aad movb into (bad) int3 lock push leave mov jp out iret repnz out andl out shl scas je mov pop inc out aad sbb push push into sahf push out scas jp push shrl aam cli mov loope mov lcall xchg shrb out into (bad) aaa pop mov xchg sahf imul leave lods mov pop ds fsubrs test pop push sahf sbb adc fmul movsl mov mov dec data16 ds in mov sahf (bad) out popl lods stos (bad) outsb rcl mov mov sbbl and (bad) mov jp push loopne sub mov ret scas je gs out into enter ret mov push cld out std shr out and lret scas jle xchg mov fsubr (bad) mov push xchg xorps mov es adc out shl mov subl fsubrp enter lret scas lcall shrl aad inc push dec xlat mov es enter in mov cs adc inc or addb cli mov ljmp push leave fxch mov jle jecxz jb gs std int mov inc shlb insb sarl (bad) lret aad lods shrl pop leave stos or or dec (bad) in data16 mov addb iret mov fmulp jmp fs (bad) (bad) stos push jbe dec lock mov sub or push sbb fdivs fstps jbe movsl xlat fcmovb out mov in jb outsb mov mov es in sahf ss aam push aam fildl add cmpsb mov cmpsb mov push and leave scas add repnz cmp (bad) (bad) push push fnstsw xchg fwait std cmpl fnstenv ret add ret pop lret hlt mov (bad) cltd ret cmp ret xchg inc mov es mov aaa push call fcoms ret icebp pop push xchg mov iret call push pop (bad) or jbe cmpsb cmpsb push cmpsb mov cmpsb into rol push xchg dec fistl mov ret mov stos mov in (bad) in aam (bad) in jbe mov mov repz int mov ret cli mov xor add outsb cmp mov ss mov loop test (bad) or sbb jbe dec int (bad) mov fwait ret out xchg jmp mov inc mov (bad) repnz sub mov inc mov mov xlat lret data16 aas xor shl sarb (bad) push mov movsl cmpsb push (bad) push (bad) leave and fisub pusha aad sar mov push fwait add cmp ljmp sbb (bad) xlat mov data16 pop sahf or cli ss jbe dec pusha xchg rolb repnz push inc jmp (bad) mov push out les insb pop movb clc add jae jb data16 jp fdiv ret (bad) ficoml mov pop (bad) jmp in add lds cli lock xchg ret dec xchg (bad) shl lcall (bad) mov (bad) sub or sahf lods (bad) icebp mov jnp outsb dec mov dec aad loope pusha das push (bad) out mov pop dec movsb push andl push ds push sbb data16 cs fnstcw lcall xchg dec mov pusha jo sahf (bad) dec inc fstpl int3 mov shll and rol lods outsb ficom or out out dec cmp mov and lret iret mov (bad) dec fs fnstenv loop outsl push pushf lcall in in cmp sbb jbe cli xor (bad) das (bad) fucom rcrb enter sub add ret (bad) into sub (bad) mov xchg insl jo sub adc imul out dec cmp loopne sahf xchg jmp jmp jecxz mov sarb mov or out clc mov add data16 mov xchg push (bad) push jbe test loope iret mov sbb push mov mov fildl mov mov aad push mov sub in mov in ret jmp (bad) sahf int3 icebp bound mulb out (bad) in sub cmpsb mov adc fcmove ljmp push outsb scas cs sbb xchg push push test movb push add idivb and and mov mov loopne mov mov mov mov dec jnp inc movsb sbb aam add mov int mov add xchg or dec xchg sub ja xchg rcl int3 ret aam jmp leave pusha (bad) insl stos cmp lret mov push inc shrl (bad) lock mov add push sub push mov mov xor cmpsb negb clc ret sbb test fdivs jp loopne (bad) cli jbe in push in cs xchg jecxz or mov stos ds mov sahf lret shr jbe data16 xor and (bad) call mov (bad) jb lea inc into stos ret repnz int3 out pop scas hlt fsts xchg sar add mov loopne adc int3 icebp loop cmpsb ror (bad) ljmp mov stos mov jb push (bad) es call cmc sub pusha sahf mov cld rcrl jp xor ret add dec dec pusha cmpsb test iret push scas lret dec test into add mov lock mov lods mov out push cmpsb (bad) adc ret out cld out adc sub cs cmp aam aad aad cltd lcall ret and xor rolb out lret pushf mov sti sarb mov int pop sub (bad) hlt jle data16 add in iret int3 enter lds aam sar loopne (bad) stc lds ret mov push jmp push sbbl (bad) out aad lret (bad) pop subl mov push push push add gs stos stos push add xor sti push pop ror shl (bad) shr lret or mov fsubl mov mulb mov stc adc stos js aad xchg aam mov jo jecxz jb (bad) into jecxz lds pop loopne xchg lret mov faddp out int3 mov pop out ret or loop mov or or dec repz out in inc xchg push mov push and negl (bad) cmpsb out add cs movsb scas (bad) mov or cmpsb rcl pop int3 lock cmp scas in sbb ds mov outsb fldcw add enter cltd cltd ret scas and dec inc inc fcoms shll fisubl (bad) incb mov sbbl pop mov insb callw dec (bad) inc add rcrb inc out adc ljmp (bad) loope xor sarb push inc inc rcll icebp orl call mov (bad) inc fsub jp ret mov pusha xchg adc xchg shrb dec cli xlat mov mov aad add scas cmpsb out out fiadd ds pop aam push repnz add jbe into cli ror mov mov aad jg push cmp aad mov rcr jmp lea mov mov es add outsb mov add stos shrb (bad) mov xchg cltd popa rcr mov ds iretw rcl mov mov cmp push fisttpl aam shlb cmc inc int3 data16 aam mov pusha clc xchg mov jmp jb lds ret divb cmp lret in hlt sahf cmpsl add ljmp rorb mov sbb (bad) cli lret or lret fisub sar cmpsb sub in sbb in cs (bad) ss xor leave lods inc mov data16 cs push sub data16 data16 loope imulb outsb mov push int3 stos mov enter outsl push mov sbb aad mov xchg test add out out push outsb sbb sub mov out mov shr mov sub incb mov adc jle mov xor dec ds fist or lret aam aam imulb xchg add adc negb aad add mov rcrb dec das sub loopne stos repnz mov lret leave or data16 push xor neg inc xchg mov iret push mov rcr mov add dec rcl mov push push shlb (bad) lods mov out cmpsb jmp cwtl es add mov ret mov ljmp jle xchg dec pusha xchg or and lods mov adc stos mov inc and sbb aam add dec mov into test add inc and mov out test adc mov mov mov pop roll xchg add fcmovb int (bad) loope insb fsub out enter mov or sub out mov mov ljmp add pop mov (bad) scas sbb and test mov int3 push pop add fiadd ss js push push push fcmovnu ret xorl inc mov into mov push dec mov fisubrl (bad) ret into dec jle,pn bound xchg jbe pop push adc push idiv movsl std add scas out shrl imul es cltd ror scas sahf mov lods inc xchg adc in idivb lcall cli mov mov lods mov mov shlb sbb pop mov mov mov xor mov mov ljmp mov addb mov imul and mov orl (bad) push adc ficom (bad) enter mov or imulw xor xchg repnz pop push mov (bad) and lods pop mov (bad) mov pop mov test add sbb aad mov add dec scas push lock in ret mov ljmp jnp xor shl sub (bad) out mov movsl scas testb in out (bad) loop jecxz sbb rcrb add cs sbb inc (bad) mov lcall scas rcr stos es xor rol enter xchg je pop mov xlat and mov push in push mov rolb add (bad) sub call mov fdivp in lods aad add jg mul push repz xlat ljmp lcall inc lds fmulp push (bad) add test aad es jg dec in ds inc jbe imul mov fcoms jge and lret lock add ds cmpsl out leave insb xchg or mov (bad) mov mov or xchg cmpsb ror mov loopne cmp sbb xchg mov mov cs inc xchg or imulb add (bad) xchg mov repnz fcomps add or fdivl aaa add (bad) rcrb int3 in push cwtl adc push es jecxz fsubs xor pop aam negb ljmp es or cs mov xchg mov rcl pop mov (bad) or (bad) lods ret mov jbe ret cli out inc dec lods movsl jbe push mov mov loopne orl loop test (bad) mov (bad) out dec loopne sahf push cs inc mov int into mov in dec lods inc outsl cmp fsubs push xchg jle shlb (bad) xlat lock dec mov jle add dec push ss cli mov aad dec cmpsb xchg insb cmpsb enter loop jbe scas mov mov mov loop shrb rclb into jb into xor or stos int mul out ficomp ss fistl aad clc xchg ds cs int3 cli (bad) into pop xor jp mov add mov call movsb mov cmpsb sbb mov jle test pop xor ret iret and ret sub cs aam mov add loopne xchg pop into jbe xchg mov out shr out fisubr clc mov xor jle stc mov mov or inc (bad) lret push push hlt add xchg ret scas sbbl leave shl inc adc es fisubr xchg xchg cmp cli ret sbb ret out bound xor stos mov lock pop xchg into mov (bad) fisubrl shrl mov (bad) pop mov mov test fnsave xchg cmpsb mov cmpsb rcrl js sti into std out out into (bad) rorl rol mov cmp or push stos out pop cmc icebp push sarb fdivrl (bad) out push shrl push cmpsb cmp (bad) (bad) xchg or add xchg lock stos push xchg mov mov cmpsb push lret stos (bad) jmp add fcomp shll sub pusha mov add subl xor rcrl adc or mov insl add cs (bad) mov pop mov xchg fildl fnstcw hlt lock pop pop mov fsubrp xchg or xor into cmp cmp and rcll or xchg (bad) mov xchg inc push adc stos dec cmpsl ret out xacquire dec subb jecxz push sbb bound rol fisttpl mov (bad) fdivs cmpsb inc mov mov (bad) pop push cwtl inc adc xchg push rcl cmp out sub (bad) fsubr mov ss or leave mov inc scas ljmp inc xor (bad) outsb orb inc inc cli loopne (bad) cltd mov repz add mov (bad) out ret cwtl stos (bad) or push sub mov add cwtl sbb mov (bad) lea cld dec enter or repz out xor inc pop notl movsl add out xadd sub fmulp fadds xchg xchg xchg push push je and out ljmp jb mov fsubrl (bad) repnz sahf js pop push sahf push out (bad) mov jl add or push adc push mov mov ret fwait mov adc pop shlb mov iret int loop dec and mov addl mov mov add add xor scas (bad) mov add push loopne push mov push test inc and lods out out cmpsb xor outsb shr mov inc fbld cld sbb enter stos ljmp lcall xchg sbb insb inc ss sarb xchg push lods (bad) out dec js ret mov negb mov rcll rclb pop or cs repnz aad add jbe push add test and mov mov cmpsl sbb jo inc mov push test pop mov mov clc fsubl enter mov shl sub data16 xchg push lret stc mov test push xchg push cwtl mov add pusha out or adc idivb stos and push bound jo in imull mov pop pusha (bad) ja jle sti fmulp stos into js push inc fiaddl repz inc stos mov decb repnz inc popa outsl (bad) stos scas enter add fcmovbe into out mov xchg out adc fadds int mov jecxz push dec cld mov iret leave push mov mov hlt push or push xchg (bad) push in (bad) in push inc xchg bound (bad) mov scas lret aam out dec ret push sbb xor push ss mov test leave es movsb mov mov test jecxz dec (bad) inc (bad) cs ljmp dec roll inc lods pop mov enter rclb mov jo push (bad) push into cmpsb hlt int3 ret xchg cmpsl or lods push out jb add add xchg and and out mov mov mov mov mov mov push (bad) cmpsb fimull cli shl jmp mov cmc and add out idivl clc fcmovbe mov rorl aaa add jle mov iret repnz adc mov leave scas sbb rcrb jb shlb mov xor clc push dec add mov dec adc (bad) dec mov enter shrl fnsave dec rol loope or fcmovu mov add xchg inc shl xchg add out mov jo or inc mov add loopne loop push call inc (bad) push push and (bad) mov mov ret inc mov repnz dec jne dec pop push stos stos rol pop cmp mov les add mov ljmp nop or mov pop mov shlb pop (bad) (bad) out adc fiaddl (bad) stos mov mov pusha test enter inc es fimul mov or xchg push cmpsb into into push sbb adc jp mov lcall cli mov xchg xchg loopne pusha add ret pop es lods in mov sub nop xchg push mov lock or loopne xchg fsubr hlt movsb mov add scas mov (bad) fcmovbe clc mov xchg jo push scas push ds outsb xchg fnstsw add adc xchg ret iret (bad) mov movsb mov push ret pop stc mov int3 dec cs lock aam data16 xchg int pop fwait (bad) sar mov push lret inc es mov or mov (bad) ss xchg std mov lret rcr sarl (bad) xlat mov mov rclb cmpsb xchg or pop into lods mov scas cs push lds mov out shl (bad) in sub rcll outsb mov mov add int3 sarb into mov mov add lcall push lock (bad) mov mov rclb lret out rclb push (bad) icebp ret movsl or (bad) mov fcom push dec orb icebp add push xor fsubl mov iret call jbe adc sti fcmove xchg cmpsb aad or dec es jo ss rcll and call push or ljmp mov mov cli data16 cmpsb pop out lods add add or mov in mov dec or fimull test sub add jmp adc inc jle xlat add dec sub into jle xchg sbb jecxz xchg (bad) jae (bad) mov aad inc push add testb in sbb mov mov sahf mov add add push mov push fcomps es in or fist sar lds enter mov jle call sbb ss iret es outsb pop test push push (bad) add mov pop cmc jp adc push es aam cmpsb loope pop pop push hlt mulb push rolb call fidivr shrl fbld mov dec into sbb (bad) fcom data16 adc (bad) loopne loope test ret inc shrl cs mov jle or mov add fisubr clc push push inc (bad) mov scas mov inc add mov push pop dec pusha add (bad) (bad) fmul scas dec ffree or mov mov ss fcomps out xchg inc push xchg int3 in shlb (bad) add es add mov mov mov scas or into jecxz test mov pop lods js (bad) push (bad) lock fidivr out xor or mov inc out mov sub or pop (bad) idivl adc test dec push add les aad sbb ljmp mov push jb mov leave cli ljmp cmp gs mov mov in (bad) fiadd imul cmp lock pop lock sub or mov lods mov (bad) mov popf push fmuls xor xchg lock ds pop int cmpsb cld push stos add add inc movsl mov push mov fdivl push push mov xlat fisubrl lock and (bad) mov xlat mov pop sahf mov jle add add (bad) lcall mov repz ljmp outsb out add arpl ret es add cli loop sahf ljmp jmp ficom data16 or mov movsl adc int mov pop cs mov and stc add add inc xchg inc (bad) mov inc jo push xchg xor outsb or (bad) out test sbb gs shrl lods adc mov (bad) (bad) mov outsb rorb mov loopne (bad) shll stos mov es mov mov popa mov ror inc out orl inc out sbbb and es sub mov push (bad) jno or jle,pn icebp mov push xor cwtl inc sub fimul in call fsub and mov shr rolb lea (bad) repz into cmp std pusha pop xor lock mov sarl into xor push mov sbb les shlb vpmullw aam int3 xchg (bad) cmpsl mov inc mov jbe mov xor pop mov les enter popa orb add clc iret mov leave fdivs jl,pt leave xchg gs push mov sar jbe sbb mov add add mov bound mov mov es movsl fnstcw pop or ret or xchg mov test out jnp sub aam movsb inc sar mov out (bad) scas stos fdivs mov (bad) mov test lods out mov (bad) lock or push shl xchg mov inc in mov adc cld stos in mov test push (bad) or (bad) ss mov (bad) mov int mov jp lret mov add sub cwtl add push and icebp add sti dec pusha inc mov iret stos mulb mov decb int js rorb mov mov aam testb cmc mov mov dec add fmull popa test adc lret outsb (bad) mov movb sbb rorb adc test rcr (bad) mulb aad push mov mov (bad) mov in idivb sub leave (bad) jae and data16 shr pop sub (bad) call out mov push (bad) rcr fist push int push out loop or (bad) fucom jbe xchg pop ffree or mov mov xchg in add mov jmp data16 sti dec cmp mov shlb stos add test xlat adc out (bad) jmp mov pop push andb fdivs hlt mov or in ror into iret jle rolb out es subb ret mov enter jmp add call cwtl loop outsb ficomp add dec push lret movsl add mov mov sub (bad) (bad) jbe inc jo push pushw pop lods sbb loop mov add mov xlat fdiv jmp mov (bad) and dec jp ret stc pop mov rcll iret jp inc pop int in mov nop aam call call mov add (bad) or or shlb lods pop add xor lods into mov enter scas ret mov pop sub fstpt sbb mul cmpsb mul xor push stos sbb ret xor inc push aad pushl (bad) (bad) aam scas lret out shr fmul loop int mov mov icebp ror sarb leave repnz enter dec sub mov mov ljmp nop mov lock mov (bad) fst mov fwait pop pushl mov lret mov mov in shlb movsb test ret out add scas shl enter out mov mov push icebp dec (bad) mov shrl xlat dec les repz lods js ret mov mov rcl fcmove mov (bad) mov mov movsb mov scas sbb jmp (bad) pop cli mov lret ret iret (bad) mov iret hlt out es fild cmpsb leave fcmovnbe mov ret stos cmp ret xlat mov pop in mov push mov int3 mov fsubs shrb (bad) cld iret out xlat clc jg or inc enter jecxz iret scas mov or lcall es cmp sub mov mov out mov (bad) iret les loop pushl call repnz cmpsl xor ret mov mov (bad) and mov mov cmpsb into (bad) sar ljmp jg pop xchg mov (bad) repnz fidivr mov clc lahf mov lods vcmppd repnz mov cmpxchg dec out ljmp mov sbb out mov sti ret shll scas mov mov mov mov lods (bad) jle mov mov sbb enter mov test fcos negb sarb call lret cli enter into in rcl icebp mov (bad) cmc (bad) aad clc adc stos outsb rcl adc fcomp mov mov ljmp mov mov mov lret loop mov mov loopne int inc fadd (bad) (bad) out test loope icebp jecxz out stos mov scas adc clc fsubs mov int push cmpsl leave ljmp mov enter fldt leave mov mov mov out fucomip call jle lds mov ljmp mov les enter shlb jecxz (bad) repnz idivl ljmp fisub mov test sbb pop add jecxz stos lds pop cld add ret cmpsb mov mov mov enter rol jecxz (bad) (bad) mov add jmp clc into jecxz mov ljmp mov loopne jmp hlt lcall or ret enter out rcl mov (bad) incl mov mov mov int mov xlat mov mov mov cmpsb mov in icebp mov mov rol cs mov iret cmpsb (bad) scas or negb movsb lds sti push mov jl mov in (bad) sarl add dec lret (bad) push rolb jne mov sbb mov sub ret fdivrs dec (bad) (bad) aam leave leave lods aad int enter repz insl push aaa scas (bad) rol aad jecxz loope ljmp loope aam mov out fnsave push mov je fcmovb out lret into scas aaa sar sbb clc mov (bad) mov mov out cli mov lods mov mov ret mov mov into repnz aaa or icebp pop pop mov cmp mov test loopne scas sbb mov shlb mov mov scas (bad) mov jle cs mov mov pop enter lret or or cmc (bad) test (bad) mov int3 enter (bad) push lret icebp iret push (bad) lret xor repnz int repnz (bad) xlat aam (bad) imulb leave (bad) (bad) mov (bad) sbb enter decl (bad) mov fcom lret xchg mov cmpsl ror (bad) fdiv mov out hlt mov pop ret (bad) lods int3 sti mov push repz mov xlat (bad) (bad) (bad) (bad) mov in out fsub fst fmul lret test push add cli (bad) in cmc xchg (bad) jmp (bad) loop leave inc hlt mov fmulp bound mov call jecxz lret ljmp mov fcmove lods ror (bad) mov fsin (bad) (bad) int shlb (bad) cld (bad) mov in int ret std cmc jecxz idivb mov scas les fldln2 lret mov rol mov aad mov bound mov adc pop insb in lret cmpsl rcr jl aam push sbb stos ror add xlat vunpckhps repnz in mov (bad) cmpsl lret push cld int out leave push (bad) in into divb fdivs out mov int (bad) mov lret sub (bad) fdivs dec leave test sarb test (bad) out leave rcrl mov in mov mov in push mov incl mov mov rcl (bad) ror mov mov in jecxz or mov cwtl (bad) push scas add dec cli aad mov mov idivb je sbb mov mov loopne loopne push mov mov mov mov mov mov xchg mov push inc mov inc mov shl fmulp hlt (bad) mov fmul stc ret out cmpsb ret mov fidivrl push fst fsubrs rcl aam divb loope ret std pop hlt mov mov shr stos (bad) in or mov mov xchg mov in inc in enter ret mov mov adc fisttpll int3 mov stc aam call mov lods fcmove aad clc mov rol sar mov stc (bad) (bad) fnstcw clc aad enter icebp sti mov movsl (bad) sbb (bad) (bad) int3 test lods mov leave out in outsb jp cs std ret (bad) icebp inc sub scas rcl fldenv stos outsl jmp ljmp int3 (bad) stos repz pop clc mov pop jmp test add sbb cmp xor loop mov mov (bad) idivl pop clc es enter les (bad) ficoml hlt sub int3 cli in scas xor xor mov xor xor lcall xor xor repz xor push ds pop out sahf out xor negl push xor xor mov xor out out sahf out or lcall sub pop movsb jmp push vmwrite cs inc push inc dec insl bswap std and inc inc push dec inc inc daa aaa inc fs insb jne inc popa jae pop dec inc imul jge aaa inc imul sbb or cmc cmp add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add addl orb push add nop inc add add adcl adc add nop push add inc inc add add add and inc adc nop push add add addl orb adc adc nop push add add (bad) mov add inc gs gs jo popa je inc sbb mov adc push jae jb outsb inc dec push aaa ljmp imul outsb je jne je inc jns outsl push imul mov jb inc xor jle xor insb push arpl outsl sti lea nop jbe sub in sti aaa fs jb arpl jae fiaddl test or and sbb outsb mov mov jp dec outsl inc dec imul adc scas inc fs push inc or jge xor cmp dec popa insl add neg xlat inc insb outsl jae dec popa outsb fs mov fisttpl adc dec popa push inc jb fcompl xchg les test outsb mov sub push data16 dec jo adc or fldenv pusha inc pop lock cmpb add xor gs fnop fs js (bad) outsb rcrl imul insb dec bound inc je popa ss pop clc cli adc mov out mov jae jb rcrl fist leave dec jae pushf jo loopne lcall push jns sbb mov cmc sbb outsw aas push xor pop push pop jb popaw or cs dec inc daa push je ds jns (bad) push int ss dec fdivs push mov faddl jmp pop fstpl xor inc data16 bound imul xchg addr16 rorl lds push cmp xchg hlt inc fildl lret push lods jb es jne sub pop mov pop jo cmp fneni(8087 jne push scas sahf inc (bad) mov xor fistl pop pop out jbe adc lahf shl cmpsb add addl rcrl cmp lahf jae push push xchg push movsb insb test pusha icebp push outsl stc movb enter add gs sbbl push jno push sbb or jne or or dec inc dec pop sbb sahf adc adc sbb rcl sub (bad) enter push sbb xchg fs dec popa inc idiv jl pop push push test in inc sbb ret (bad) add xchg fstp vmaxpd adc pusha mov imul je pop jne push fidivrl jge ret xchg outsb cmp add add add lahf xlat popa nop jo push je push outsb push or mov pusha fs or nop test outsl mov ret (bad) push or (bad) ss pop (bad) mov push dec and push add cld fs sbb sbb inc fstpt fisubrl andl rcrl or fbstp (bad) fldt sahf add or lret cwtl add mov cmp inc int3 mov pusha add adc cmp in push dec push rolb movsb sub or dec stos push xor sub shrb mov cmp addl lahf inc pop leave (bad) xor (bad) add ja clc inc fs xor cmp adc bound addr16 loopne (bad) test in (bad) aad jbe ja lea lock inc addl mov imul or inc adc je sub fs je outsl sbb pop ret mov xchg jbe adc push imul out adc insb ss adc inc dec inc jmp ror push push inc inc stos adc insl mov lahf push fwait dec popa bound mov stos inc mov insl sub xor insl pop mov mov dec movsl inc jp dec inc push imul jp sahf and faddp in mov inc movlps lods dec jle lret inc popf out bound xor rolb push inc xor sti adc xor inc pop fimul push cmpsb or push mov in lods pop dec or jae add inc add adc pop sub jno cmpsb fdivr js pop push outsb lods fstps addr16 or mov push fisttpll outsb cmp loope and jo cmc xchg ljmp cmp and adc out push or arpl lcall daa ja push add les pop pusha xor lcall xor pop cmpsb imul sbb sbb sbb frstor or mulb and or adc movsl add push add adc pop add or movsb lock push idiv lock add sub addl add or or or idiv outsl inc adc pop sbb push comiss pop unpcklps push or pop adc or pop or (bad) sti call adc or or and or push adc sbb push and (bad) decl cmp or sbb pop cmp xor dec bound cmpb push pop push adc fcmovnu movntps daa es push add sbb sbb or pop and push pop sub xor sbb rdpmc or and jns (bad) scas jge push mov sbb or push adc or (bad) (bad) (bad) fildll or adc push cmp push sbb or ret and lock (bad) ljmp add prefetchwt1 sbb jae pop data16 cmp inc test or outsb mov lods scas mov adc add aad push in pop mov lock add adc outsb pop jle push pop jns xchg (bad) jg das and mov rolb lock out or fwait mov inc adc (bad) incl cs push mov lock adc sbb xor std (bad) mov adc sbb les sbb push sbb add adc sbb pop or add gs sarb fidivl sub stos inc cmp lock or lret pop imul fistl inc icebp cmpsl in mov jp sbb and jp add push jg pop cs mov or and adc xor in out es adc fcoms imul orl add adc push ljmp dec sar jnp cmp or adc push in jns xor bnd out (bad) out xor notl sub divb cmp lock int into dec pop xlat mov (bad) xor inc or or scas mov mov cmp lock add sbb inc (bad) adc sub pop jnp imul xor aas or lock dec or add ljmp inc lods data16 jno sub adc add adc sbb loop push incl or popa testl add mov rcl sub add cwtl lock adc (bad) adc sbb stos and lock pop (bad) mov push lock push and push xor imul and and sub inc and pop rorl fdivs les xlat cmp int cmp inc pop pusha ja (bad) cmp cmpsb mov sahf pop mov sbb pop and and mov (bad) mov inc ljmp cwtl adc pop imul xor sub xor xchg js in xchg (bad) loop mov mov mov es lret iret inc and push xor xor cmp add mov adc pusha push inc negl dec repnz push jmpw push sbb adc add adc gs mov or dec or lock sub cmp stos dec add and hlt cmp adc sti (bad) pop mov or adc je fsub mov inc add daa pusha push lock pop xor loop sarb ret shrl nop and cmp les cmp out idivb pop sub xor arpl outsb lcall enter add or jl xorb xor out repz pop iret or nop (bad) push dec notl cltd cmp lahf xlat insl out scas pop lcall and sbb movsl or mov repz insb popa mov mov imul jns or arpl aad cmc aas mov lds adc cmp dec mov sbb rcrb adc adc je xchg sub inc fisttp cmpsl jne jo nop sub test or sbb or nop rorb add dec mov scas adc sub push add sbb inc sub inc and call lcall add adc sub bound insl flds dec push ret fimul gs daa inc add and fsubp loopne dec push inc adc add sub pop sti stc jle addl add xor jno das or fstps movsl add fnsave pop cmp sbb push ja in pop push lcall outsl fistl add fs inc cs pop mov add jg fisttpl push push in push and push pushf inc xlat add push inc mov mov jne mov cs test loope out xor cmp les xlat (bad) call add or insb xchg inc push or mov or inc lea rolb sub out pop adcb sub (bad) or push pop push dec lock add lcall push push push jg add out adc js add adc sahf lret add subb std sbbl dec movl (bad) and or push adc xor mov sbb pop lock adc lock cwtl xchg sbb out fldt xor inc pop adc push adc add pop adc lock arpl cmp fsubl adc add mov adc and das push movsl xor push daa mov imul aaa sbb cmp or ffreep incl sub adc xor sub ltr aas push and sbb decl pop cmp daa pop sub push or unpcklps outsl push xor xor jns sbb and sbb inc or xor js fildll sub push or js inc outsl jg pop push or sqrtps inc mov xor pusha add cld sub cmovle pop lock push lock lock and adc jle or or jae addb jle rclb fidivl sub xchg notb jle xchg add bound jno jmp push lock pop addl lods loop ficomp add aas (bad) scas lea add adc mov add mov cmp movsb xor dec fnstsw add sbb popf sub ret inc outsb add xchg jnp call insb inc or xor outsb add jge and daa pop mov jne scas mov adc test sahf cmp cli inc call aad enter adc sbb adc ljmp jge jle jle je in nop (bad) jo xor mov loope out (bad) repnz add cmp push insl sub mov mov icebp add add push loope adc ret aam mov gs jns xchg pop xchg les add xchg fstl mov sbb int loopne xchg jmp mov repz push sub je jnp add repnz scas bound pop sahf add ficomp out loopne jo es and decb lcall jo rorb rcll daa sarl sbb add jnp sbb loope fbstp inc jle ret lahf bound sbb in xchg pop cmp negl inc pop add fcoml arpl and js imull pusha cmp out push add and in fisttpl addl loopne jbe lods adc rorb adc bound (bad) iret pop mov mov lock aam adc jbe jle pop add or movb lret xor (bad) (bad) call adc cmp pop jmp mov xor and pop push data16 cld jg ret jb mov outsl (bad) lock or repz lock add inc mov andl adc or push push sub add ljmp cld adc and dec adc inc ja dec dec add or fsubrl inc or sti adc pop and or dec test cld insl cmpl add aaa pop sti sti add lods enter or push or cmp and push or bound ja dec add xor add inc cmp sub and pop loopne and push mov sbb push sbb sbb mov iret pop bound xor push dec lock lock add add outsb cmp sbb or adc insl or mov add mov aam adc (bad) mov add loopne push fs add ret pop imul loopne or aas add les test sub shrl adc daa push sub or outsb testb rcrl pop addb movsb rorb sub lock cmc pop sahf and stos movb mov sbb pop lret fcmovu (bad) mov sub xor lcall push add pop add sbb enter or (bad) mov dec sbb push pop (bad) out fimul push adc push mov scas lock dec call mov sbb jge xor or or or pop pop jg decb pop sbb pop or pop inc or or or or out sub sub cmpsb or and call and inc push or dec mov or or push sti ja xlat stos or sysret or sbb or and push adc jne or or or (bad) out in or or sbb sbb adc or sbb sbb (bad) dec scas sub push test insl xchg add push icebp sysret roll jbe adc add pop lock cmp cs cs bound jp xor aaa or adc or and (bad) (bad) aas push cmp or jp or adc adc testb or aad sub or in pop fidivr sbb dec sbb push and pop mul adc cmp xchg sbbb push adc (bad) sti pop mov cmp loope mov out or inc jl ds pusha dec push test in jmp movsbl rorb rorl sbb or or push loop out push mov jns cld popf call imul (bad) adc jl movsb pop xchg mov adc adc adc fcoms jnp xor outsl fcomi or stos sbbl fstps (bad) movsb cs push inc (bad) mov push fsts scas cld fistpll mov adc add xor sbb xor mov pop ja bound jno dec inc adc sub les pusha xchg dec adc or ret push and mov add sub mov dec mov mov sub ret push adc ss aam xor inc pop or mov push jns fwait int adc push lcall dec fimull test es ljmp push lcall or divl dec xchg jp and push jge (bad) test and sub nop adc adc or stos scas cmpsb loopne xlat sbb imul add or mov adc rolb pop adc lock xchg mov or cmp stos (bad) movsb mov ds nopl (bad) xchg or or adc lock jl mov add push lock mov add (bad) or push push mov add add orl aas daa dec sub incl push fdiv and jge push xor insl add mov mov aad sub and lock outsl ret cwtl adc sub or outsb push cld mov sbb add or cmp or adc loope in mov ss push add les jge pop dec pop xchg mov testl mov pop andb fwait add fwait cs mov aas rorb jnp js inc lahf or sbb hlt mov push sub push cs fldl add sbb dec add hlt or jns imul loopne jo jp pop add (bad) and stos lahf pop or adc insl add (bad) iret sahf mov push faddl pushf add sbb sti outsl sbb lret add and or adc sbb rcrb add add mov ds or add inc pushf push adc scas mov sbb inc sbb mov outsl dec or es push xor addr16 mov or push jne xor lcall push cld or adc inc aas add sub addl aam jbe lret adc cmp sbb cmp cmp loop and dec and push add adc fs mov test add aas dec sbb mov xor cmpsb imul pop sub imul cmp xlat cmpsl adc or pop in pop mov mov stos bound mov add sbb enter loop cli push xchg setbe imul repnz or sbb xor std pop mov (bad) cmovnp adc add xchg movsb inc sub mov mov rolb add adc push sub scas add inc add sti int3 movb pop incl or icebp add jnp pop push push insl jnp scas dec xor adc pop paddd loope adc data16 pushf adc mov call cmpsb (bad) (bad) jmp add and push (bad) jg add adc adc out clc pop icebp or xor aaa add pop or and cmpsl sbb push jnp add out mov xor mov sub push pop dec push or pop and jle and xor roll lcall into and inc std mov or inc add sbb insl cmpsl pop lret in inc dec add xor mov push loopne (bad) mov xor cs push xchg and mov jae js and add jecxz pop je out and and pop or and push sbb mov (bad) add (bad) call push adc or or push cltd xchg mov ss or add je jle (bad) lock push insl add subl add pushf add aam and das add pop pop add je aas adc subl push push dec sub test mov sub push push loopne push (bad) jmp pop cmp xchg sbb out adc sbb jle mov inc in outsl rorb cmp cmp pop xor (bad) (bad) loop mov bound loope push test adc or adc adc add pop and dec xor mov adc and or push sub push adc sbb or sbb jle (bad) sbb inc dec pop or pop fstpl sub or add inc or sbb sbb sbb inc stos shrb pop jb sbb ja aaa cmp or sbb test or sbb inc (bad) in neg mov push aaa or cmp push or push or or cmp or and push add pusha lods adc or es inc sub inc or aas or ljmp or or inc iret mov or je sar jg sbb cmp lock add adc and cmp jmp or and aas sbb adc push add or push sbbl scas push adc (bad) das stos js push pop adc or or push or or sbb dec adc hlt pop sbb xchg in pop sub sbb push push xor adc pop ljmp or and add fidivl adc or or sbb push call jo dec outsl pop jne jl or sbb lret daa sub adc jbe aad dec dec push ret js,pn (bad) xor add or cld add and sbb jp or or add add xor cmpsl push xchg jo dec in int3 add sbb and sbb dec sub jmp push and or adc addl cmp repnz push push jo aaa or mov adc or pop ret aas jecxz inc mov sbb testb xchg add (bad) dec pop pop push pushl lods loop add cmp or sbb lock add (bad) clc sub pop pop sub sub or arpl das (bad) sbb pop xchg xor or mov (bad) mov and sub outsb add (bad) xor inc pop popf sub in or sub lahf add dec or and push clc aaa sbb into pop add or push inc shrb incl sbb xor adc push and adc and add or sub incl push inc lock add jle sub dec lret outsb and lock orb lock lea push adc mov push sub or or pop push push and sbb mov inc push (bad) and rolb pop in adc sbb jns sbb adc (bad) mov cmpsb add sbb and enter sbb sbb or aaa pop mov push ret xor add cli insl and sbb jp adc jne inc ja decl adc jg pop lock add mov pop adc ja scas or lcall cmpsb push mov adc or xor cmp jmp cmp or mov adc in movsl jne or adc adc aas pop shrb pop sbb adc adc or push or pop pop cmp jno dec or ss pop lret (bad) lods loopne mov adc ud2 and mov and sbb ror or or jne push sub adc and pushf aaa push out sub add test dec daa rcll push pop xor pop and sub cmpsb mov jb call in mov push testb sbb push and (bad) lcall pop and adc or pop lock data16 dec mov mov dec test lock add push pop push mov sbbl mov adc push (bad) adc in sub sub outsl rcll inc cmp push or mov ret jg daa jbe dec adc and xor sbb inc (bad) loop adc mov imul add mov (bad) out push add pop out sub insl in ja jg sbb xor ds push inc in inc adc test mov push pop adc cmp sbb push sub inc ret ljmp and mov sub out jl stos add das sub add popa cmp cmpsb push mov scas aad ficoml push xor xchg out in cltd lock or aaa xor fbstp imul imul bswap and xchg (bad) fadds adc jbe (bad) cmp adc cmp inc and cmp dec inc dec or popf push das (bad) in add dec adc mov jo adc xchg jnp jg loopne and or push pop test pushf mull rorb fs push loope push mov sbb dec add mov imul inc or adc mov adc outsb pop sbb (bad) out xchg or pop push and mov pop or aas mov jo pop or popa cmp loop (bad) in aaa add xor or movsl sub pop or sbb push cmp loop loopne or lret bound addr16 or push add sub adc adc and lods sub sub stos lock adc jge rcrl fidivl pop adc fs sub mov lock pop es les fstl add sbb pop shrb pop adc mov or inc or mov cmp clc stos fisub out adc js sbb sbb aas loop jg gs inc adc or and pop adc fist loopne sbb add fs ds sbb adc stos (bad) pop hlt sbb adc mov adc inc inc push or outsl inc lahf push and or sbb inc lahf push xchg cmp sub or dec dec adc pop xor pushf and cmp pusha cmp add push ret sbb lock jae sti (bad) sarl xchg pusha pop andb sbb push sub xor fldt add or adc push jnp cli or cmp push adc mov xchg outsl call jne,pn push adc or sbb push push fist push cmp push dec dec adc pop adc (bad) (bad) jmp or sbb and push or sbb sbb data16 incl or lds aaa adc fs sbb cmp dec jo aad rcll cmpsb sub add sbb sub sub cmp movsb sbb ljmp es xor or dec push inc lret imul (bad) icebp incl adc dec jae je (bad) adc out int js cmp inc add or push sub enter cmpsb jbe or aas arpl sub loope xlat and or pop pusha jbe sbb adc wbinvd pusha and mov ljmp sbb es cmp add push aaa jo or push (bad) pop or or and sarl adc leave push lea lahf inc sbb sbb (bad) out xor dec incl or pop mov or je or jmp pop (bad) add or (bad) add dec gs pop or push add imul std jnp imul fcoml sbb jg loope,pt jo lods mov xchg pop in pop out (bad) mov cmp cmp add mov shr rorl dec imul push inc clc lea push pop das xor xor lret add xor xor pop xor add insb and add jne (bad) cmc outsl or pop ds jae jp dec xchg (bad) incl pop mov das sub fs lock add and jbe add push cmp push xor xchg test dec and loopne add cmp outsb dec cmp lea frstor int3 loop or and and outsl mov cmp xor inc inc jp inc pop sub fs or outsb sub or test jp cmp ds pusha push negb inc cmp xor bndstx sub cmp test jb inc cmpsl dec mov lock ljmp rorb sbb push and push mov mov (bad) add push mov xor aaa xor and sbb es or xor cs inc pop adc xor ss and aaa mov ss mov adc sbb stos aaa adc enter add adc sub cmp or fiadd scas push xchg cli mov cmp or or add adc mov jbe add pushf or adc adc stos adc or pop mov xchg or or push push pop add fsubs mov test or add cmp arpl xor icebp addb push stos rcrb lock inc inc dec adc add lock and xchg insb ret lock mov mov insb sub cmp enter leave add inc mov mov cmp fildl lock pop loopne or lock sbb cmp adc and ljmp pop and mov mov adc (bad) rolb add or outsl lock adc lock adc pop xchg aas sbb or outsb repz cmp cmp jne sbb sbb xchg cmp sbb aad dec mov inc or xor bound or insb int3 negb inc sbb jg add push add push jecxz push shlb sub adc adc push inc arpl add outsl and or std push xor add stos xor in xor out inc in lea push dec inc xchg sub inc adc movsb sub add aad adc or movsl jmp subl aaa pop xchg push push and mov cmp push sub xor or cwtl mov xlat adc lret push sbb push adc xchg sub or adc and or xor or add xor outsl dec add adc adc dec add add data16 adc mov add bound daa or and or sbb sbb mov push cwtl pop xor xor inc mov mov arpl or xor loope fisubrl adc mov test sub (bad) push ret mov or pop add pusha or sbb sbb (bad) sbb sub es or pop ss dec sbb bound push test jecxz mov xor dec insl (bad) mov adc cmp mov orb mov daa and pop inc add addr16 add insb subb (bad) int xor sub iret daa lea pop aad aam xlat incl test xor adc or jo add sbb add cmp sub or add out add pop inc sub pop or or push xchg pop aam lock add adc mov push mov add jecxz jo test and loop bound or inc mov add adc sub dec pop xorl xchg adc or loopne mov push lods or or mov and popf and jge cmp or pop add mov add adc and sbb outsb in mov pop xor push lods imul ss or add (bad) pop pop push scas cmp (bad) lods and mov jecxz cmp neg push pop test ret mov data16 sub adc push sbb test or adc sar push inc cltd mov mov insl outsb sbb imul das push test pop iret dec xchg sbb cmovp cwtl data16 add mov imul cli pop or xor je and das or sbb and sbb imul add pop sub push sub pop jl sbb pop mov adc inc or (bad) xchg cld js cmp and inc dec and xor xor cmp sub jl adc cmp sbb lock lock jae test or pusha and jl arpl sbb push add fcompl and data16 xor cmp sub inc and xor fwait pop fucomi mov cmp jbe xchg mov xchg cmp fcom call push dec int and sub mov out jp cmp xchg adc loop,pn sub mov (bad) add push aam sti or add add add add add neg out into leave add daa (bad) sub adc nop fistpl flds inc pop add add (bad) (bad) outsb int add sub cmp adcl movlps pop adc setnp or add push inc pusha inc mov mov pop inc dec dec mov outsl cmp cmp lcall cmp sub jb popa je cmpl or test jge inc cs add in xor fsubrl fbld sbb dec rcrb ja sbb out add and jb insb outsl push into adc dec push push in ret (bad) or sbb ljmp dec sarl add add dec incl pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add or jne mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add push add push add 