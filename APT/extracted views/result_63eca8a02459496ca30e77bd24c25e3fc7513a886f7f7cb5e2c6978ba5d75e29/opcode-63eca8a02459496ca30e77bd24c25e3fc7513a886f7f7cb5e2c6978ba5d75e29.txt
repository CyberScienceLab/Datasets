pusha or add add add add add add add add add add add fdivrs add clc mov add xor add add add add adc add add xor add add add add adc sub add or add xor push add add add adc sub add or incb add adc add add sub add push sub add xor add add add add adc sub add push sub adc add adc add add add sub add push addb add sub add sub add sbb pop add add adc jle add add pop add push outsl sbb add or pop and or notb mov ljmp fldenv lock and mov or pop inc add add add add add add add sar ljmp xor add sbb add or add add outsl push add push and adc add sbb add sub and sub and mov sub (bad) push add add outsl sbb add fsubrl add add adc add add add add add add adc or and add add add jae add push or add or push add add push sub add sub add add or or sti xchg dec adc xchg and pop pop data16 jl in and inc or add outsb add add add add add add add add add mov add or xor and xor push and sub and sti xchg dec and rcll sub add add sbb add add outsl push add or add (bad) add adc jbe cli bound (bad) (bad) (bad) decl or or pop or xchg cmp (bad) incl jnp add add add add es push incb sbb add jae add or add or and push and in mov (bad) (bad) call add daa inc push xchg pop and push jb popa cmp (bad) (bad) incl sub add sbb pop add add adc inc add push sub add or add add outsl and add or and and add xchg pop and jns (bad) and pop popa or jae and add add inc add add add add add add (bad) (bad) ljmp adc sub add or jle add add sldt add jae add or add or and (bad) mov add or and sub and pop and push adc (bad) push pop add sbb add or sub add add add adc push add add adc or adc add adc or xchg in mov fisttpl jae add push or and or adc (bad) add add jge or adc adc and enter pop and sub popa pop and nop xchg xchg gs and sbb add sbb add xor add mov add add (bad) (bad) decl add add add xchg add or add outsl sbb add pushf adc pop adc dec test (bad) lcall add push pushf adc and or adcl pop and or aad leave mov inc or and (bad) call add and outsb hlt (bad) and std xchg mov (bad) (bad) incl jae add push or adc or push and enter and cmc push mov cmp (bad) (bad) (bad) jle add add outsl and add jle add add outsl and add add xor add add adc add outsl daa add or and push mov adc add and sbb and and push add add (bad) (bad) jmp add xor add add add add add add arpl lea add add add push sbb add or push or or and and and popa sub inc cli pop and sarb pop push or pop pop bound or pop or mov orl arpl jecxz sub and cmp (bad) incl sub xor add add add add adc add add sldt add sub add or in add add add sub add or add add adc add add add sub add outsl and add jle add add adc add add add sub add outsl pop add push pop pop sub add push pop sbb or add popa lea add add arpl push cmpsl adc push (bad) mov mov mov addr16 pop pop and and add add add add add add add (bad) (bad) (bad) ljmp push pop or or add es add add outsl sub add jle add add add push sub xchg and ss and sub popa sub in lahf cs and mov push popa cmp (bad) (bad) fisubr es add add outsl sub add fiadd adc sub add or pop (bad) (bad) (bad) fimul adc (bad) push or add outsl sbb add fsubrl add add add add sbb add add add add add add add add add add add add add add add add add add xor add add or add jle add add add push sub in sub pop and or pop iret and pop and xchg in mov xchg notb cmp or pop inc add add mov add add add add adc sub sbb pop and xor popa sub add add add daa add push sub add outsl sub add fiadd fiadd sub add add add add jnp add or xor add add add add adc add add add push sub adc add push add add add adc add or add xor add add or add add and pop fsubrs loope mov and xchg leave les or pop inc add add sar (bad) incl add add add and add sub jnp add add or xchg push and es and popa sub add add add add sbb add push and ljmp and add sub add or add xor add add add add adc jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add sub add or jnp add add or or xor add outsl xor add add add add add add xor add add add add pop add add pop jae add or add or jnp add add xor add or jnp add add adc add aaa add or jnp add add outsl cmp add add add add incb push add push jae add or add or jnp add add or xor add or add or jnp add add sub xor add and and pop psubq data16 test sarl pop popa pop and push add add (bad) (bad) incl add add add add add test movsb add add jnp add add pop add add sti add add add or add or jnp add add xor add or jnp add add outsl cmp add add add add or aaa add add add or add or jnp add add inc add jo xor add push and pop xlat dec pop and in cmpsb sub pop (bad) (bad) incl jnp add add cmp pop jae add or add or jnp add add xor add or jnp add add push add jo aaa add or jnp add add outsl cmp add add add add incb sldt push jae add or add or jnp add add dec add add aaa add add add or add or jnp add add pop add jo xor add add add add popl add pop pop jae add or add or and and and popa cmp jnp add add xor or jnp add add outsl add jo aaa add or jnp add add outsl cmp add push and cmp outsl pop and icebp popa cmp incl jnp add add incb adc add jae add or add or jnp add add in add and add add add or add or jnp add add addl jo xor add push and push lret mov and cmp (bad) (bad) incl jnp add add xchg add pop pop jae add or add or jnp add add outsl add or jnp add add xchg add jo aaa add or jnp add add outsl cmp add add add add incb adc add jae add or add or and add inc and add jae add or cmp pop sub add or sub add or add or and add and add jae add or inc add or sub add add add add inc add or sub add add add add inc add or sub add add add add inc add or sub add add add add inc add or sub add add add add inc add or jb add jo add add push sbb jae add or add or pop sub add add add jo xor add add add jo aaa add or add push add add jae add or inc add or push sub add sub adc add or add adc addb add addb add add add xor add add add add adc sub add sub adc or mov add or add push or xor cmp or ror (bad) adc popa gs push add add add add add sbb add and add xor (bad) (bad) ljmp push push add cmp sub and cmp pop pop or add push sub and jno loopne and pop xchg sahf add xchg add add add xchg xor and jb fs xor adcb add xor add add adc sub add add jae add or add add add add add dec add or (bad) (bad) incl pop or sbb add add add jnp add add dec add or or add and xor sub add adc add adc add add add add add add dec add or add add pop shrb add xor adc add add add add add or add add sub add sub add xor add add add add sub add sub add fiadd add add add fsubrl add add add add or add add add adc add or add adc jnp add add outsl dec add or add add xor or add adc jnp add add outsl push add or add add xor add add add add adc jnp add add push add or mov add add add add push add or push sub adc add push add add add adc add push sub add xor add add add adc jae add or add add sbb jge add add sub add add add push jge add add jae add or add add jnp add add outsl push add or jnp add add and outsl push add or jnp add add adc outsl push add or adc add add add adc jnp add add add add or add adc add add add adc jnp add add add add or add adc add adc add add add add add add outsl push add or add adc add or add adc jnp add add outsl push add or add add xor add add adc jnp add add add xor add add or add add add add lcall mov pop data16 mov pop and ret and add add (bad) (bad) (bad) incl add add add add adc push and sbb cmc lods popa sub add add add lcall das add push sub add xor add add or add add mov or sbb or pop data16 and and add add (bad) (bad) (bad) call add add add add adc push and and sub add add add add add add outsl and add outsl push add or adc add or add adc jnp add add outsl push add or add add xor or add adc jnp add add outsl push add or add add xor add add add add adc sub add push outsl xor add es sub add xor add add add add adc sub sub xor pop add add add adc sub add add add jp add add add add xor add add add add adc jne add add lret add add pop inc arpl pop and jne data16 jl shlb and and (bad) lcall and or or add lret add add stos add add add add add add add add lds add add add add add or push and enter xchg nop add add add add or push and fisttpll and and popa cmp (bad) incl jne add add and jno dec and imul push (bad) (bad) incl jne add add dec jl sub and out and (bad) incl jne add add and push jno sub and cmp (bad) (bad) call push and insb imul popf popa cmp (bad) (bad) incl movsl inc add add pop add or push and and adc (bad) (bad) pushl add or add xor add add add add add jnp add add xor add jne add sbb jae add or push or sahf add add or add or xor add movsl inc add add xor add fiadd add add add push arpl pop add push adc and jecxz aad pop and dec clc shll rorb and call pop jae pop and roll popa and inc add add add add add add sbb add scas (bad) (bad) ljmp xor or add or add jb and push fwait or pop or fs mov mov pop (bad) (bad) jmp lock mov sub add add add add inc add add add xor sbb add add add add dec add add pop add or add or xor add outsl pusha add or add xor add add adc add push adcb add adc add incb or add push outsl cmp add jle add add incb or add jae add push outsl cmp add jle add add incb or add jae add push outsl cmp add jle add add incb or add jae add push outsl cmp add jle add add incb or add jae add push outsl cmp add sub add sbb or test add or add push or pop and mov sub in and (bad) or jmp pop and aam stc pop and pop sbb pop inc add add ret lcall add add add add cmp add add push xchg outsl popa add or add push push pop pop or lock push jle add add bound add xor and sub and mov fiadd fiadd sub add add add add add addl add sldt add add adc add arpl add add add add sub adc add pop add add add adc sub or add xor add add add add adc add or sub adc or aad add or mov add jne add add push sub cmp (bad) les popf pop and jne gs adc test popa and stc aad popa and inc push add add add add add add add add add mov (bad) ljmp jae data16 or add fcoml jecxz fldt popa sub and sub and (bad) popa int3 and outsl add or and pusha and pop pop or add add pop pop outsl push push or add or outsl imul add or pop or add or fisubl stos cmp (bad) incl movsl or add sub add adc or pop add add add adc lea add or or cmp lea mov or cmc rcll gs add add add add add add (bad) (bad) call add add and pop pop sahf pop pop pop or lret dec xchg aam int3 pop add or shrb mov and sub xor add add add adc mov cs and movsl inc and pop and sbbb shll (bad) and pop popa and popa gs add add lret call add add add add adc or and repnz cltd hlt lock sub add push xchg add xchg outsl insb add or sbb or push add adc add or add pop pop outsl outsb add or add or cmp add add daa dec cli adc add adc int pop cmp add jecxz xchg jge daa pop popa pop and es sub and inc push add add add add add add add add add pushf add add adc sub add movsl or add outsl jno add adc (bad) dec xor and and sub add or add or or add sub add or lcall and sbb adc div fucomp pop popa cmp (bad) incl outsl jae add movsl push add add add jo add sub and push and (bad) add cmp (bad) (bad) incl outsl je add sub and dec cli adc call cmp (bad) (bad) (bad) fisub jne add add pusha push jns adc adc int pop cmp add jecxz xchg jge daa pop popa pop and es sub and inc add add ret (bad) (bad) incl add add add add push or add or add cmpsl xchg jecxz pop and in call push sub adc add add pusha add add adc push add add adc add add add sbb push sub and je or and push mov pop and test stos lahf movsb or or pop inc add add sar (bad) incl add add add add push push sub add sub and pop lds cli jns imul add jp add xor add add add add adc ja add push sub add jae add push sub add sub add xor add add or add jle add add pop and pop and out cmpsb adc and repnz and add add xlat (bad) (bad) incl add add add add sub jo sldt add pop add or add or add or push and insl mov pop and sub add add add xor add add add add adc add add add adc add pop add add add adc adcb add add xor add add add add adc add add add adc add pop add add add adc sub or add xor add add adc add push sub add je add add sub add mov add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add inc push inc inc push mov add cmp out mov xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add inc push inc inc push mov insb leave (bad) addr16 sub rorl es inc sbb jno adc ja add add add add add mov add add add push add add add add xor xor dec add add add jo inc add add add sbb add xor dec add add xor xor imul hlt add add dec add add pop add inc add add add inc sldt push dec add pop add add add xor cmp push add xor add add add push add pop add add add add push add pushf sbb add data16 inc add push add dec add dec add dec add pop add aas add adc add push add js outsl add add xor mov insb xor xor jne gs cmp xor xor outsb pop push xor ss push dec aaa push gs arpl xor ja outsb inc inc push dec push or xor dec push inc inc pop aaa xor cmp xor jp dec xor aaa aaa jbe xor popa jo pop ss jbe insb aaa inc push or dec jb dec jae ss jb dec inc push dec pop dec jns dec jae inc or xor xor xor inc dec xor push dec xor dec jbe push ja dec inc xor or imul ja push push inc aaa pop push pop imul jno pop aaa pop insb push ss addr16 fs jp popa xor dec push jb arpl js pop dec xor dec inc xor jbe pop je push je jae xor cmp ja push jae inc push xor push xor je imul inc bound xor push push xor push dec xor xor jns js dec or dec je xor xor push jbe dec inc dec cmp xor or insb inc insl push inc jne dec cmp dec push dec jns inc inc jo push xor or pop inc xor xor xor jb cmp data16 bound pop xor xor js xor pop bound imul push dec pop dec push imul push insl dec imul cmp push push or arpl jp aaa push jno dec xor or add (bad) fdivr loopne adc dec inc add add add pusha add (bad) fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or roll popl add add adc add add les pop add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add push (bad) stos repnz stos sub jbe icebp pop roll pop movsl push fadds lods push mov adc adc xchg xchg xlat inc xchg int es cmpsb lea sub test push cmp xchg cmpb in lcall mov mov xchg mov repz int3 into popf sub out and jae sbb imul inc test imul (bad) pop mov aam movsl (bad) jmp repz imull push push push add aas adc bound lret out (bad) adc jp inc int3 cmp xor jae das into int3 dec push xor in mov cld mov adc push es sahf test dec stos and mov sub push stc jns mov push pop inc (bad) clc out rcll test inc mov dec ds mov sahf jae cmpsl int3 mov adc adc dec ja cmpsl popa and adc adcl adc outsl lods lea jbe mov add cmp sbbl mov jmp ss inc mov loop lea mov jo lods sahf lcall xchg pop xchg xchg cmpsl mov lds fmuls push jmp sub movsb imul ds inc out lcall sub mov mov outsb shl bound sub out pop push movsl fs pop inc adc pop and or dec xchg scas mov movsl xor jae inc repz cmpsl fcmovnb mov dec xchg pop dec pop enter sub xchg mov inc repz lds repz popf leave cmp loop,pn push mov test pop pop push gs cmc dec sbb inc lds mov jl push fs mov fs and mov jb inc ret les sti push push sbb lcall and inc es mov dec and sub mov pop cltd inc call push daa jge mov inc aam sbb mov mov cmpsl mov in inc pop aad loope push pop rolb sbb or xor xor test cmpsl sub or int3 inc imul push cmp pop mov fisubrl es inc fdiv add pop push lds fwait pop pop das int3 jns dec add push in stos imul push pop inc popf mov adc test and adc xlat xor imul and adc push mov aad jp shl out lods rcrb lods test xchg mov mov mov push lea push xor xchg inc dec push or push mov movsl out sbb (bad) imul or test pop dec pushf mov sarl scas jae hlt sti imul lcall xchg xor movb adc into ljmp mov and push sub inc inc rcll imul push dec dec mov dec xchg into sub pcmpeqb pop push pop lret stos or push notl jae imulb lret inc dec addb push stc jmp fsubrl dec adcl jmp enter adc dec sarb sub and mov inc jbe rolb in xchg push push popa pushf or push add out in lods call pop mov jp bound movsb and loop xor mov aas repnz lods adc (bad) outsl fst mov mov rolb mov jae lods (bad) mov dec or loope xor aam jbe jae fmuls xchg lds or sbb add mov jo push sahf or push sub test and xchg xchg mov loop ds mov cmp and xor addr16 ss pusha push in or aad pop daa xor push aad test pop push cmp and sbb jp repz and sbb cmpsl test sahf adc mov or rol sub sub dec push leave mov leave adcl and mov pop out in xor push adc shlb sub test lods les stos inc dec test ficompl mov mov daa inc loop movsb loopne xor icebp jmp icebp jl mov add xchg stos add or mov imull es imul (bad) xor inc cmpsl fs jbe arpl mov fldl inc push jns inc test jne popf int3 jecxz mov xchg stos mov and ds push and imul mov mov je or leave das push pop imul mov fwait insl (bad) push mov adc cs out (bad) popf pop test xor cmovns push pop test jae push jno test sub mov xchg stos orl lods cmpsl int hlt push out cmp outsb adc lods aam mov push push sub stos inc inc jb cmp enter lods stc (bad) imul or icebp and dec daa gs (bad) movsb cmpsl jne sbb pusha bound push cltd mov xor push in aam orl fistpl push dec bound int pusha jae lock xor insl into imul dec jno xchg test dec mov lcall mov into lcall adc push push dec int mov adc mov stos scas xchg adc xchg (bad) flds add lea ror out mov int adc jb xchg cmp push cmp dec adc insl inc mov xchg push inc ss int mov lods push cltd or int3 (bad) not adc outsb xchg fadds jecxz ss sbb pop sub adc ret push sub pop xchg and cmp popf shll jb lcall xor mov repz nop test pop pop jno fstps (bad) xchg lds and dec xor mov inc and daa xor pop xor mov sti push adc shrb mov mov pop sub sahf dec rcrl iret xor int3 dec push bound cwtl adc push mov dec pop dec push mov adc push cmp negl inc mov xchg jae repnz aam leave test scas imul push pop out jno cmpsl (bad) xor xchg push mov xchg mov lret stos push (bad) ja mov push lret pop inc int mov or test mov mov mov insl jl popf loopne into repz stos dec xchg sub loop and movsl pop add stos mov sub mov cmp movsb cmp pop mov les sbb pop adc mov loopne repnz arpl mov and inc xchg or push mov fwait mov sub jo dec jns mov mov pop movsl arpl mov js dec jno xor push cmp push ror push test cmp movsl mov bound shrl inc fistpll stos int3 dec xor insl stc int dec sbb pop xor push sbb xor jae rcll sub push push outsb push sbb inc push repnz imul lea sbb inc je xchg or movsb lret scas cmp std in jae pop inc pusha push mov pop xchg lea ss adc push pop xchg mov mov push pop xor inc imul cltd pop inc test jae ja add push pop sbbl xchg sub dec adc pop and cwtl cs ss cmpsb aad cltd sbb and push pop cltd sub fwait lds enter jl or xchg stos inc pop int pop push enter out movsl test pop popa xchg pop push sub mov inc outsb sbb test jbe stc xor and push test or aas sub icebp enter sbb stc push xchg dec sub stos std call and push inc adc icebp push jecxz xchg pushw xchg push pop inc mov or push inc jne xchg je (bad) (bad) test sti xchg push inc jle iret jg popf daa fbstp mov out jo outsb xchg push pop dec loop sti add mov adc fwait adc push les jle (bad) flds aam inc push xor xor ss xor data16 cmp dec push aaa jno xor outsb push cmp jbe ss jbe aaa dec xor or insb imul arpl pop jo push inc push cmp insl jp ja dec bound inc xor xor xor or push inc inc xor xor jne outsl popa xor cmp je js je pop outsb push inc jb or inc jbe inc xor ss cmp outsl fs cmp jb xor push outsb addr16 imul or pop push ss inc push inc bound xor xor push inc aaa outsl pop or inc xor inc push xor dec insl xor push cmp arpl ss xor imul jns jb pop dec inc jbe imul push push jb ss ja cmp insl imul js xor imul push xor xor imul xor cmp inc je xor jo xor push or push jae jne insb xor inc dec inc inc xor pop imul jae imul xor inc popa popa dec xor inc bound inc dec gs bound aaa xor cmp or outsl gs jp jne arpl push dec push insl outsl dec xor push jae cmp xor xor xor inc jns xor xor push fs gs push inc xor outsb inc inc push inc dec jo bound cmp xor dec jp push xor inc ss add (bad) fdivr loopne adc dec inc add add add pusha add (bad) fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or jb lcall add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add (bad) sbb leave sub xor popf cmpsl data16 jl xchg pop jl sbb test xchg stos xor test les mov dec sbb sub sub ret leave imul push sub or push xor xor inc push lret fldl in mov (bad) push stc inc dec pop pop aam or sub pushf sbb pusha adc pop sbb test out and fidivl pusha in jae call lret mov movsl pusha push lahf insb loopne dec xor outsb (bad) movsl (bad) ss mov in sub mov loop inc push nop loope sbb (bad) mov xor xchg outsl xchg push dec dec jnp je adc xchg cld ret jmp adc ss sarb cmc aas sub push add (bad) rorb jmp or push lods gs inc adc mov xchg dec repnz sub fnsave (bad) das cwtl push dec xor dec shrb lcall jge mov fiaddl xor cmp lret jb mov and stos mov sub and mov xor dec leave mov fcmovne mov xchg fst cltd dec in (bad) lahf insb lods mov int mov iret pop dec stos and and or push leave int lds loop mov pop (bad) push pop push lahf cmp dec addb mull fwait mov pop in lods movsl nop in pop dec lds sub movsb (bad) aam ficom rcll adc push sub mov or fimull and dec out inc dec cwtl push xchg pop daa xor add push dec dec enter dec pop dec imul or js pop sub lret hlt inc out xorb xchg adcl gs and and (bad) imul adc adc xchg std call push xchg stc xor and aam fsubrl push push test inc lods fstpt mov jae test stos int3 loopne push in mov (bad) mov pop or nop inc sbb pushf in test inc cmp or sahf cmc mov fwait and push lods lods adc xchg mov insb sbb adc xchg xchg inc xor stos js into (bad) movsl gs leave cmpsb insb out popa arpl test insb push xor out mov in sub lcall mov movsb (bad) jbe mov aaa int3 add mov in add xchg sub ret jo mov push xchg push test int imulb (bad) dec adc test push outsb xchg fldcw orl push aad add inc inc xor and test add xchg adc mov lcall pushf mov imul sub rcrl cmpsl in mov sbb dec mov or push test arpl dec xchg mov sub sub jns,pn sbbl stos cmc lods jns out addr16 mov dec adc fmuls loope cmp adc cltd jno dec add jno mov sbb mov and test sbb arpl inc popf aad jbe push mov lret mov jb cmpsb push push xor je divb icebp stos sub loop js cli lret xchg xchg cs lds frstor mov mov into fcoms arpl addl cmp mov sub loop mov sarb xchg mov cmpsb mov dec out fnstenv fs or mov cmp pop mov fs pop gs xor sbb xor push and push (bad) push dec or jge lods std imul fsubrs push orb add fisttpl push ja aam dec push sahf dec push sbb adc movsl sub push dec push leave lods push jge clc push dec pop jle sarb iret ret dec (bad) push addr16 xchg jl push test ret dec add push lret xchg stos mov xchg mov repz adc dec push push imul pop or xor leave add mov cmp sbb sub jmp mov rol pushf lods push loop sbb gs push divl pushf mov mov fstl mov push mov jmp pusha inc dec cmp dec test movsl lahf jbe insl push xchg push daa fmul ss pop scas or mov xor push fs add imul mov dec (bad) push mov jno aad jns fildl xchg pushf sahf xchg test dec adc cltd gs addr16 push jae mov cs test aam and push xchg fstpt xor push (bad) mov test sub pop pusha jge push lret xor test inc lods mov push pusha push (bad) jnp sbb push xchg outsb les pushf aad pop and xchg mov cmp push xchg jp (bad) lods add rorl xor cmp push mov lahf mov add pop out lods adc cmpsl lock int mov ds adc push clc mov mov mov ret adc (bad) lock xor mov or ds cmpsl dec mov clc mov xor jl xchg mov mov test xchg nop incl jl mov inc cmp adc test out lcall push in cmc test jo ljmp call dec cltd (bad) fldenv push and inc cmp popa stos add testl add xor add add add add add sub add data16 cltd add int3 add incl push add push xor push data16 add add add add add add add add add add aad add data16 cltd add int3 add incl incl add xor jmp lcall (bad) pushl add xor xor add add add xor add sub xor xor cltd xor int3 xor pushl push add push xor push xor xor xor xor xor xor xor xor xor xor add aad xor xor cltd xor int3 xor pushl incl xor xor jmp lcall (bad) jmp add xor data16 add sub sub sub sub sub push add xor data16 cltd push int3 push jmp add xor data16 jmp add xor data16 cltd data16 int3 data16 jmp add xor data16 data16 data16 incw pushw jmpw lcall (bad) lcall xor cltd cltd add cltd add cltd sub cltd sub cltd sub sub sub cltd push add cwtd push cltd cltd push int3 cltd push lcall xor cltd cltd or cmp stos add cwtd stos cltd cltd stos int3 cltd stos lcall xor cltd cltd aad cltd aad cltd incl cltd pushl cltd jmp lcall (bad) dec add int3 add int3 add add add int3 sub int3 sub int3 sub sub sub int3 push add push xor push data16 push cltd int3 push int3 int3 push dec addb xorb andb cltd int3 or cmp stos add stos xor stos data16 stos cltd int3 stos int3 int3 stos dec aad int3 aad int3 aad int3 aad int3 aad int3 aad int3 incl int3 pushl int3 jmp lcall (bad) (bad) incl add add incl incw cltd incl int3 incl (bad) ljmp add sub ljmp ljmpw cltd ljmp int3 ljmp (bad) call call call call call call incl incl incl ljmp ljmp ljmp call add aad call callw cltd call int3 call (bad) (bad) incl (bad) pushl (bad) jmp lcall (bad) incl add add stc add add cld add add add or add inc xchg (bad) lea movsb push popa mov bound xchg movsb dec pop frstor in arpl dec outsl xor leave aaa outsl shlb addl xor (bad) sahf sbb push mov inc xor sub mov movsl xchg push fnstsw inc arpl test mov xor test cmp sub mov lret loop lea fistpll or (bad) xor lcall mov lds sbb loopne pop imul sub adc enter xor jecxz mov mov or lret aaa inc sarb (bad) xor loopne roll int addl movsl sub and pushl xchg test stc mov mov mov mov shll and and push pop movsl mov push imul mov popf out outsl ss gs enter aaa pop ja xchg rolb xchg inc add aaa adc imul push inc adc push mov ss dec scas aad sbb mov loope rolb mov push xchg mov mov movsl push pushf dec or inc hlt pop dec (bad) nop rorb cwtl (bad) aad push mov pop (bad) fiaddl pop mulb push popa rcll dec xor int3 inc sub arpl inc mov jne hlt xchg jg jo fldenv or dec call lods cwtd pop xchg jns sahf je jns adc loope addr16 imul addr16 dec mov mov dec inc bound in dec int xchg inc mov adc inc ret in xchg nop ss mov movsl inc jne insb push aam imul inc loop adc pop rcll pop xlat mov movsl out imul ljmp pop sbb test (bad) pop pop arpl ss add (bad) cs xchg pop test jno jno (bad) test xlat loop add and push inc jmp aad dec (bad) bound aad ret inc pushf jno iret mov pop and std sub push dec sbb push xor mov cmc outsb repnz imul in or jmp bound in roll xor pop pop inc das insl lods sub and jnp dec fisub out movsl pop cmpsl lea dec cmpsb pop outsl adc push xchg mov movsb cli pop mov insl and lods outsl jns push xchg cmpsl mov cli fnstenv fs imul cmp cmp pop jne lea dec imul (bad) dec push repz jmp aaa fsts lret ficom outsl jnp shrl adc test insb jg pop leave fistpll lahf xchg push ljmp (bad) aam pushf mov push mov xor lea cltd mov cmp mov and lcall lds sub adc das mov mov adc rorl mov dec mov mov subl jmp out pop repz pop pop sbb push xchg fisub aaa pop fcmovu push add xorl inc and daa test repz push mov or cmpsb cmp adc (bad) mov add dec pop inc cmp sub push mov jb jb aad sbb dec cmpl mov ficomp or insb pop subb xchg xchg cs jb adc inc movsl cmp mov cmp inc dec jno push mov (bad) inc mov pop sub add rorl jno es mov ret cwtl test adc mov xchg jmp sbb je leave jl lea sbb rclb push loope inc mov xor das xor in scas cmp movsl dec leave imul and adc pop stos mov dec test jmp lahf mov xor shr or pop xchg inc xor and sbb sub dec mov movsl loope divb dec sbb ljmp sub jae or inc pushf add or mov or out mov cmpsl mov ds dec ds mov pop adc inc dec imul mov jle xlat movsl sub pop enter inc test mov addr16 sub inc jmp xchg jb mov push xchg xor ja add sbb and mov mov lods test sub pusha imul test adc sub ret cmp inc lock cmpsl and nop xchg xchg ret sub pop nop push cmpsl sub pushf lods fldz push xchg test push sub fild mov mov cmp cmp push mov xlat sbb orb nop sub popf notb dec stc ja lds scas adc inc das sub aad gs (bad) sub mov and xchg test sarl or push push ret mov push mov int3 mov mov test es mov out pop aam sub xchg jne addb aam mov pop test mov push imul lock push xchg or bound pop ret xor push pop (bad) rcrb iret andl inc jmp notb sub repnz xchg subl idivb lds cwtl mov stos jb dec dec mov cmpsb sub adc dec xor lret nop shrb pushf cmpsl mov movsb call adc dec pop ss sub lcall nop aam mov sbb inc ret test pop pop jge mov (bad) cld lcall pop fdivs pop scas push bound sbb lret sub in (bad) dec dec adc sub sbb xchg lretw test pop add int3 fbld add or stos cli movsb push stos lods push mov mov sbb arpl pop sub or mov jge dec jmp gs and lcall inc aaa xchg inc inc aam xchg dec mov (bad) lock and pop ret arpl adc lret ficoml scas dec shrl in mov aaa push dec xor cmp (bad) cld loopne xchg adc or inc out dec and adc test xor pop pusha outsl adc loopne scas clc and pop mov jp cwtl dec rolb bound inc or (bad) ds adc jp fmulp pop xchg repz out ret je inc mov cs sub and sarl xchg int sbb jle test xchg fs mov popfw addl addl mov sahf (bad) out out push mov shr mov repz cmp pop pop lret dec pushf mov data16 fiadd aam lcall push lea mov inc dec pushf rorb fisub cmp lds (bad) dec jnp adc or popf inc inc gs sub sbb jp pop das fidivl fisub mov xor add xor addr16 inc lds jmp xorl shlb jbe or (bad) jae pop (bad) dec jmp xor (bad) loop shlb adc outsl xchg sbb xchg jae sub and addr16 out lods mov mov pop sahf push cmp cmp in insb push jl xor add and sub (bad) jb mov jl push pop push inc mov or inc adc sub (bad) push daa imulb mov stos add push (bad) notb repz inc sub ret dec xlat jmp fwait and push test sbb test jbe mov cwtl xor fdivl mov inc pop icebp dec pop mov fisubl sub cmp sub xor mov jle inc stc je dec loop xchg xchg adc xor add push adc jge xchg sbb push mov mov push dec xchg fldl je dec jg sbb and add adc ret cwtl dec mov and mov sbb inc sub inc and imul adc imul bound lods xor mov jg sbb mov xor std test arpl idivl rclb adc dec sbb pop jne adc xor into xchg jp sbbl pop mov sbb pop shlb inc sub loope adc dec mov int ja add xor lret mov jg loop dec mov imul xor sub push jb xchg pop jbe adc icebp cmp pushl mov push push mov aas gs in push pop push sub sub popa cltd jo lcall add and arpl or jb call mov mov cmp ds test test push out insb push insb lea xchg data16 dec add bound or lea dec or aam xchg addr16 adc mov pop inc test cmp xchg adc mov push pop xchg lds sbb xor inc or es js xor lea fwait repnz or aaa adc mov push jb adc jmp pop push adc jmp call push int3 loop scas jbe fiadd dec ret adc pop sub fadds mov rcrl adc (bad) cs xchg xor fstps loop cmpsl xchg mov outsb sbb lcall out pop test ret push dec and icebp xor ret xchg mov inc lahf mov adc mov mov cli mov out and pop jecxz lahf sbb push orb ret and in pop add inc pop jno ds popa or sub fwait stos icebp pop jae mov (bad) adc and push shll xchg sbb data16 xchg cltd xchg clc cmp sbb adc js cwtl dec rcrl xor cmp sbb xchg or jno xor adc lea and push insb cmpsl jo mov notl pop xor sarb call jp loope rclb adc fwait mov push push cmp xchg sbb jmp adc gs push xchg lcall xor dec test (bad) push inc jb inc xor cltd popf daa stos jns sub (bad) aas push das dec gs xchg bound or mov lret movsb push bound push pop jno sub inc mov adc sbbl xor sub inc and cmp fdivrs clc test add jns pop lret mov inc push out mov (bad) mov cmp movsl xchg cmp ss mov icebp and cmpsl dec adc sub es repnz nop mov std fmuls pop cmp mov sub cmp aaa dec bound xchg ret arpl push push cmc and rcrb loop pop hlt pusha xlat and push stos fisubl cmp loope sub push push xchg jle jno cmpsl xor sub imul notl lds adc push push jb xor or inc mov push mov addr16 inc pop mov loop mov xchg je mov push mov icebp xchg xorb lret inc jmp add xor push cmpsl loop pop or loopne mov or push lcall mov pushl xor push push xor mov adc test stc xchg (bad) adc mov sub dec pop in pop mov aaa add mov mov xchg test lea bound (bad) dec inc (bad) mov pop mov mov in push push sub mov insl ja jb jno test and jnp ja or dec andl dec test or adc inc xchg jo push xchg (bad) sti imul adc jno or popf mov xchg daa loopne sub or repz repz mov das mov lcall sub xchg mov pop mov repz jecxz cli (bad) xor outsb rcrl xchg mov cmpsl mov lahf and sub xchg test and xor loopne mov push cs dec inc ds and mov dec xchg xacquire gs cmp add repz lds loope xchg es mov loope xchg inc push imul fimull int3 int3 jbe sbb push ds xor sbb sbb cmpsb fsub pop sub mov pop aam add mov dec insb sub push xor mov int push movnti cmpsl jl mov xchg (bad) shrb mov pop test cmpsl mov push js cmpsl (bad) ror dec pop push dec sub popa scas push xchg sub rcrl dec push inc and arpl inc aas push push cmp mov in or and sub mov xor xor leave sbb and sbb inc jns xchg mov andl and stc mov mov xchg mov stos das mov std mov imul sbb mov xor mov test or js pop roll fnop (bad) jp mov xchg and les lret mov add mov cmp xchg xchg int3 incl leave js jns mov lods test lret movb jp (bad) (bad) je sub mov fs std mov pushf loop aas push (bad) xor sbb inc loope cmp incl cwtl pop cmp sub cltd mov fimull sub into ljmp jns icebp repnz data16 shl jl jbe push fs xchg inc int3 int3 fistl jmp int3 movsb dec xchg sbb scas fs xor lods add hlt stc adc pop dec push jns dec (bad) push xor outsl enter xchg je cmpsb dec inc inc inc fsubs or sub outsb dec test push add mov cmpsl aad adc sbb dec mov sub fcomps bound roll test push ret fucomp adcl push and pop int3 push lcall mov imul xchg je rcrb or pop ljmp (bad) or mov enter loop imul insb sar mov lods add add pop (bad) imul push addr16 adc idivl xchg jns or jo arpl mov test scas cwtl jbe sbb jae sbb sub je and ret jb inc outsb decb dec (bad) xor andl cld mov js pop jmp lahf add sbb xchg push cmp imul cwtl push and inc roll adc jle sub push adc nop or outsb sbb fs bound inc enter test inc mov or icebp scas adc cmp in ret (bad) inc bound rclb push xor stc leave mov (bad) mov add xchg adc fnstenv aad mov mov fbstp or out jl pop xchg sbb (bad) rol lock dec dec dec lods std mov jae xor xchg cmpsb sub loope xor lds aas pusha out push loop mov (bad) xor jle push cmpsb fwait ljmp repz jno push aaa pop or push mov sbb dec inc sub mov aam aas inc and repnz stos and bound test push push xor jge clc xchg mov sbb jbe add pusha and cmc pop jge incb out std je or outsb adcl test inc test and subl in push lahf add (bad) subl scas in (bad) jge jge rorb ljmp cwtl repz push jne cmp pop mov sbb cmp mov (bad) mov repz (bad) test test es mov dec sbb adc xchg pop outsl cmc adc scas (bad) adc lea mov leave add or sbb rcrb inc xor dec lcall dec push cmpsb mov jo lcall lock lcall arpl sbb ds push mov dec bound cmpsb and mov inc mov or popa rorb ret rcrl dec call outsl fidiv cmc dec pop xchg push scas dec jp mov inc xor and mov sub mov inc dec or enter cmpsb pop sub rorl push jecxz inc adc daa xchg adc push dec (bad) xor adc dec mov divl les jp (bad) int lea stos fdivs rolb ret xor imul sub shll ret ret sbb cwtl mov sti cld cmp dec dec mov das jge mov cmpsb shlb iret mov cmp sub fisubrl xor xor xor mov and ret mov inc ds xor and scas cmp bound add push leave xchg in es cmpsb dec ljmp imul and stos xor or stc scas sbb cli insb dec sub mov xchg mov mov dec test imul mov movsl les aaa les (bad) cli fisttpl lahf sbb (bad) adc or and lret sarb mov xchg pop mov mov repnz adc scas cwtl (bad) arpl cmpsl or ljmp dec xor xor mov mov es push sub les inc cmp fmull dec or enter movsb jae cmp leave repnz stos mov scas fucomi xchg into inc nop add out mov (bad) jb leave (bad) add xor adc rorb stc dec sub mov dec pushl and mov inc jp mov pop inc rcl or pop jmp pop xchg jnp mov adc push add inc mov xor enter fs and sbb lods lcall mov clc test xchg xchg je pop mov leave xor mov lcall mov or and pusha fidivl mov jge ficoml fwait inc mov lcall inc xor push aaa mov sbb dec mov fstpl out xor lret test insb lret pop cmp out mov pop ljmp and jns mov bound mov mov inc les mov xor mov in or ret popf mov mov or sub fwait lcall push lret inc xor call pop gs mov pop xor or stos mov jbe xchg lcall hlt inc adc xchg in fldt sahf ja call inc xlat xchg mov movsl hlt cmp aaa clc inc mov outsb call fisubrl push (bad) outsb or (bad) je cmp sti sub pushf icebp add imul lock jl mov cltd out fs adc and or add mov iret sti int and mov jmp into xchg xor fcmovnbe leave or in cmp mov rorl mov aaa aad adcl mov loop,pn addr16 repnz sub or push ja mov es mov mov es popa xchg clc int3 xchg and or test out and aam or in es je xchg lods fs sbb and mov pop movsb xor bound cmc (bad) loope shlb sbb cli pop scas out inc mov mov xlat push fstpl rclb xchg mov movsb dec dec repnz notb jb loope adc adc and inc cmp fisttpl dec sbb (bad) and sbb adc js cmpsb or xchg sbbl scas outsl xor enter mov sub loop add cwtl daa mov or sub inc ss popa jb lcall test in xchg push mov mov and and jmp pop loope in and sub fimull and les das cmp es movsb sub or dec mov dec dec or jecxz xchg xor dec ret add push scas jmp and stc out in nop cmp repz add sub xor jp rorb cmp and mov (bad) cld jno nop add and adc sub mov cmc or outsl fsubl dec xor pusha adc fidivl xchg repz aam dec inc ret insb push cmp shrb sub inc sub mov ja aam aad pop jns mov outsl xor pop and repnz fucom jne lea mov in push push js leave xchg (bad) fisubrl sub xor lahf jnp addr16 mov enter movsl dec leave stos pop push das out xchg and dec mov add xor sub out daa fwait rolb faddl inc mov stos add (bad) mov ja xchg jle or cmpsl xchg push jae inc pop int or mov mov insl dec mov push ss nop loopne mov syscall add ret fdivl sti inc and mov loopne mov lods mov (bad) push mov xchg pop (bad) inc mov rcrb ja push stc out gs imul mov dec mov adc call mov daa cmp cs push test sbb cmc xor in int mov jb,pt push test ja push jae fldl adc push sub mov mov and dec loop pop cwtl in in aaa sub out or sahf mov mov aad fadds inc addr16 call sbb pop outsl les into mov lds adc adc cmp xchg sbb mov fsts cmpb push aad iret fucomip xchg iret je push pop mov cmp cmp scas out push inc mov in inc psubq mov movsb mov xor push cmpsb jno fimull out sub stos out dec and jge add aam and inc call cmp out mov sub popa mov cmp orl in cwtl ja push dec bound push cmp addr16 imul repnz sub pop sub sub push and ret pop sbb push push xchg mov lret xchg push sub rolb pop incl in mov mov xor sbb inc cltd or in pop iret in xchg fwait push (bad) sub mov imull sbb js push dec int3 mov aam mov inc loopne setp dec test int sbb pop xchg pop xchg in xchg fwait push ss add push or cmp push adc or and xchg mov out insb and sarb sbb sbb mov xchg fs or pop rcl sbb jle sarb sbb lods mov xor sbb and scas push mov lcall cld mov cwtl inc mov imul (bad) mov or (bad) (bad) (bad) mov add push lret xor insl mov (bad) repz mov lea aas popf add dec sub cwtl shr cmpsl or add mov xlat mov js xchg pop aam insl repnz jecxz lcall lea pop cmpl jnp lea sbb adc mov sarl pmulhw scas movsb and mov adc adc fwait mov lods lock cwtl loopne cmp aas add repz jmp adc mov rcrl divl or inc mov sbb xchg mov pop cltd adc arpl jns sbb or or or lcall push inc (bad) repnz dec addb inc mov (bad) (bad) lret mov sahf mov shrb cwtl aas add mov mov fcom xchg add inc dec loop loop mov mov or (bad) cmp sub sub or daa les xor sub ret and dec dec rol cmp and add cmpsl popa or cmp outsl add sbb enter or jp,pt mov sarb dec lods lds jns mov push mov scas imul shlb xor addl jmp aas lds rclb fildl (bad) rolb mov loope xchg nop jmp (bad) jo stos stos and push mov add stos lods jns inc xchg inc jecxz cmp mov xchg or add in inc insl mov lds call test ljmp decl or inc das mov and les add adc icebp or mov cmp out sahf adc cwtl ret shrb adc enter into int3 add enter lret adc dec mov inc cmpsl cmp fnstcw and dec mov movsb lret nop rol dec rcl xor dec xlat add and and stos cmp movl int rorl insb imul mov pushf add or dec sbb adc mov or cltd mov pushf push in popf add mov cltd mov adc adc mov stc push mov mov ret xchg in or inc sbb into push (bad) xchg out xchg mov jmp add movsl dec dec lock dec or cmp sbb add fwait clc and sbb cmpsb xor sub leave mov adc ret lea adc sbb pop or int3 add rorb jno ret popa lret xchg popf cmp mov mov into cmp je sub xor xchg fcoms mov mov sbb pop dec lret leave lock test push lcall or and xor mov xchg mov sub or xor dec or out shr xchg or cmp push pop xor js mov cmp lods sahf push or jnp fwait and mov test jnp,pn (bad) fldcw loope imul push mov inc in adcl in jns incb mov in lds push dec sub add jmp stc cld aas pop call dec js repz arpl jb or mov cmpb jp out add mov push je sub popa mov or sahf add xor int xchg in arpl and sub mov xchg je (bad) pop jb sbb sbb (bad) xor jl aam in popa sti add cmc daa mov jb cwtl in je dec and lret dec jnp imul mov pop int les xchg lret (bad) jne push inc dec sub dec push pop aaa call mov lret mov mov xchg xchg or add ficomp aaa sbb add pusha sub pop icebp add daa inc sbb (bad) jecxz sub xchg cmc push mov adc inc (bad) fbstp inc push (bad) sbb cmpsl or test xchg mov jg,pt xor sahf out inc sub sub or clc aaa dec jno dec jge jae xlat mov adc adc notl jp imul test imul mov out inc jno sbb adc mov jbe sbb sbb jecxz mov or fiadd loopne xchg jl (bad) scas (bad) jp mov push fwait lock loop outsl pop test gs mov inc fmul inc sbb (bad) jbe inc jb inc leave (bad) sub or mov mov lods cli dec or cmp (bad) mov pusha nop jmp arpl test repz xchg jne mov cs pop fsubrp mov or daa cmpsl subl aad mov lods lds jmp pushf test lahf mov xor jns sub movsb xor sub adc cmp imul outsb arpl or cmpsb (bad) fcoml xchg dec jl loop popf mov pop sti ret inc adc daa call fiadd and fcoms fisubl mov jb dec imul sbb lea mov push pop xchg mov sar xor cmpb lods fbstp test data16 push data16 mov imul pop pop pop xor mov dec or nop (bad) (bad) call addr16 loope pop pushf push sbb cmp cmp sbb imul clc pop cmpsb xchg insl sahf xor in mov jp (bad) daa jmp pop dec movsl inc (bad) aas push aad jp lret inc mov cltd jb (bad) jmp mov out stos fwait addr16 sbb jae xchg jne cmc aaa repnz pop cmpsb sbb mov push jg (bad) mov jl (bad) jae nop xchg pop jo (bad) dec or sub mov dec imul (bad) cltd add fstps and fcmovbe inc outsl sbb push and pop sub in addr16 imul (bad) stos mov add mov lcall mov sub mov clc (bad) xor scas out mov xor out jbe cmpsl mov out in sahf xor ficompl adc push mov mov sbb cld mov or in iret out xchg daa sti and decb stos mov dec fnsave sbb cmp (bad) lret xlat roll mov or sub stc test je aad dec mov shrl movsl fiaddl in (bad) jmp insl mov test int pop mov fidivrl outsl push mov in das mov fildl mov inc test inc xorl push jne and mov or mov push rcrl gs movsb mov xchg daa ja pop push xchg sub in mov sub rolb pop imul movsb scas aas cmp sub jne mov repz (bad) pop pushf andl lods mov add mov out mov into dec ss test fwait xchg sbb aad outsl mov sub inc (bad) lret jge stos lock or mov lret or and loopne adc dec scas cmp (bad) cmp ret inc lds in in jg or aaa pop xor stc shrl or mov or jae dec dec mov cmp sub fldenv mov push in mov mull push lea incl and arpl std out and hlt inc pusha and lods jo sbb addl jo xchg out loop jp push shrb jbe fildll fwait scas sub and mov cli sub loope lock stc add daa inc fsubs dec push iret sub sbb mov pusha mov pusha xor sub mov lods mov cmp jge sbbb and lcall adc je stos pop add xlat lret pop dec push sbb mov fptan mov int3 mov in xor pop es inc stc fild divl int3 pop bound pop lcall (bad) js adc cmp out add rorb jg pop movb je jno dec jbe test into rorb das dec mov add sahf cmc xor sbb xor hlt mov xchg ret shll divb (bad) ja xchg xor adc mov mov adc and test test (bad) xor jecxz push xor lds jbe roll jmp mov xorl mov xchg pop mov outsl adc xor xlat cmpsb xor lea dec push xchg call and push mov jo test mov mov rcll xor fdivl pop sbb mov dec push mov test enter movsb movsl stos push cltd jl lock fwait jmp cmpsb int fldl mov mulb movsb mov cltd ret adc movsl pop (bad) mov mov out cmpsl push sbb mov dec xor lods or test xor jle pop dec push sbb or test add insl push push sti ss mov sbb xor xchg sbb in jne aas push or dec mov mov mov movsb stos xor jp inc inc jne push or mov and int3 dec cwtl xor cmpsl cld mov add inc hlt loopne jp mov loope imul xchg hlt xor mov (bad) lock iret dec das mov addr16 out lret mov ret loope push xchg pop inc mov pop xchg fwait nop popa xchg and mov push rcll pop stos js fsubr mov pop into dec inc imul xor xchg add ret mull adc fwait les sub or and aad jge flds aam lret xor rep add sbb mov pop jmp out mov xor mov push add cmp imul mov inc fdivr and push repnz sbbb iret (bad) sbb jnp std adcl test pop lods cmp clc mov call (bad) mov lcall pop dec gs sub mov adc push add movsl cmp repnz add jnp jle data16 and push sub mov cltd lods inc push movsl mov xchg aaa movaps ret jmp xchg sbb lock aad sub mov cmpsb and movsl sahf push mov movq cmp rcrb mov ret loope adc sub cmpsl dec sbb stos and stos adcl cmc pop out cmp inc test mov into lret pop lahf outsb (bad) and or pop daa inc dec (bad) aaa dec dec (bad) mov dec and cmpl push cli mov mov repnz cmp xor pop or fdivp cld ja adc mov lock (bad) pop add arpl notl cmp xchg andl fistpll push push mov xchg shrb in inc mov jne jno outsb and mov in dec jo mov sbb je dec fucomip push or imul nop mov sub lcall ds ficomp jg mov pop jmp outsl xor sub xchg or insl adc push jns in jg lret ss push push push inc cmp sbb fmulp setns mov loope jg jle mov xchg add aam call xchg sbb push jmp lods je in lock ret pop jne and push and cmp loope mov adc addl out lcall xlat xor cld push (bad) (bad) or js xchg add push mov roll or pop cld fsubr fwait xchg sbb pop fsubp and pop fidiv inc dec jbe jecxz mov (bad) mov and shrl push add cltd or rolb nop xchg subl push and (bad) mov xchg out sahf add cmp jno and jmp dec into inc xor int3 in mov arpl outsb inc mov cmp outsb push addl lcall sbb inc in lds jge mov xchg cmpsl mov dec push pop xor mov test mov sbb pop fdivs bound out scas pop and cwtl mov aaa push mov sarl frstor mov (bad) loope (bad) jno inc jmp sub (bad) sub js das adc test adc out mov sub xchg hlt ret out or stos push je in xor scas mov adc cmc arpl flds inc addb sbb hlt jbe dec xor and cmp and mov aaa pop add add mov sbb add inc pushf (bad) jae mov jbe mov popf mov xchg adc pop cs dec pop or mov dec jae stos add div ja imul sbb in imul xor nop dec pop inc dec aaa mov scas pop xchg xchg call inc pop (bad) loopne push shll push adc rcrb pop fsubrl rcl and dec xor and add jo push call sub inc repz das push mov cmp mov xchg repz xor push mov lods sarl xor dec shrb shrb andl pop out mov outsl jmp lret pushw push js push lods mov scas xor ljmp sbb adc out imulb cmp inc imul jb scas push and pop mov popf pop sub lock in cwtl insl aas dec sbb psrlq push shr iret repnz xchg das xchg sub xchg sbb je repnz push xchg pop push sub inc std popf pop push sbbl lods aaa imul jbe fadds jbe pop pop sahf jg ffree xchg xchg lret ljmp clc push jmp push loope inc movsb jecxz adc aaa jnp data16 pop add ret (bad) iret loop cmpsl fimull mov mov xlat fnsave add mov xchg pop cmpb pop inc mov mov gs into jle idivb dec or daa lods mov add jb inc mov push xor mov xor and xlat mov jmp mov pop out cmp bound sbb sbb adcb jge lret push fimull lret das stos mov mov sbb dec sahf dec mov fnstcw je xchg std mov cmp lcall jle jecxz shlb pusha push sub dec pop add in inc sub jg nop sbb shll in add adc lcall (bad) mov loopne das push test jb sete int3 and adc inc cmp fistpll mov lcall jp movl test test mov and idivb aam or repz stos aad add aam into or (bad) xor test xchg adc imul std adc mov repz movzwl ljmp out pop add lods dec mov inc xor cltd adc mov mov inc add push sbb negb push and inc inc nop mov movsl pop pop ja push cli xchg cmp mov subb mov push movzwl (bad) mov xor aad cli dec (bad) psrld stc pop test scas push clc push jbe mov pop out test lret inc sti fldenv push and fistl in sub ds mov inc scas pop push rcrb das inc nop xchg jecxz scas pop mov push enter bound add or pop add xor jns fwait iret cmp xlat push cmp xchg das insb in pop xor dec jns sub sbb fwait mov push or xchg aam int dec out bswap popf movsb ret mov mov jmp lods and push jmp and xor add out (bad) (bad) mov gs (bad) mov ss int adc outsl cmpsb lea mov jg sbb fwait arpl jge out repz pop mov lock lret mov clc es adc test or jp stos jne arpl mov mov scas adc mov mov cs cwtl (bad) loop cmp leave iret pop sub orl test test insb cmp xor iret mov push mov inc test dec cli push cltd (bad) hlt push adc jbe arpl mov test sar inc shlb xchg ret repz je dec out dec pushf push mov repz cwtl xchg dec test jl inc pop inc (bad) jne decl jbe lods cs sub adc repz dec orb fwait mov ljmp aas dec iret lcall fdivrl mov mov dec or xchg fldl lahf aaa (bad) enter xchg cwtl sti lcall xchg and pop adc jns cmp fcoms sub add dec cmpsl add pop dec xchg mov lret lret andnps xlat jbe jbe dec and push imul cmp ja dec and and and mov jb mov push push imul xchg add movsb adc add xchg inc fcoml fcmovu lods hlt cmpsl push inc les or inc das mov je push mov popa adc decl loope cmp aas fs jg mov pop out cmp sbb dec cmp shl mov mov xchg xchg xchg imul adc icebp xchg pop icebp ror test jecxz or (bad) mov mov int3 cmpsl mov fbstp jns fwait sub aaa push stc addl loopne and imul (bad) dec mov out mov push mov mov cltd test repz sti repz push inc sub fisttp adc nop inc cmp fstpt popf mull cmpsb mov xor adc hlt dec loopne push mov out icebp push or inc lods fildll aas lss push jge cmp popf aam sub xchg pop insb ret add cmp ret sub fmuls std cmp sub addr16 ljmp cmp inc cmpsb pop inc insb out jns mov pusha sub inc mov shrl jbe mov jge dec xchg cmp sub out and test gs aas jns fs add (bad) and dec add adc fidivrl mov lds scas aam int push mov add es repz or jae cmp mov push sbb js adcb fcomps mov test jnp lea into ret or rcll xchg popf xor push call mov das sbb inc adc js ficoml pop lcall enter divl arpl les rcl test in std imul arpl repnz push lcall inc leave cmp mov popf pop adc add pop cs repnz repnz mov pushf loopne nop sub mov in imul sti call test push cltd adc mov or mov ss into (bad) imul xor test dec lock and lret cli imul mov lret punpckhdq xlat je hlt xor jg adc sbb jnp mov lret sub jl cld popa or or inc pop popa dec popa mov dec ficoml pusha mov and mov es push push cmp ss jnp ret out mov stos pop jmp dec (bad) mov xchg cmp imul movsb jl jg dec (bad) mov add add push or inc jp pop jp or lcall dec fadds push add push (bad) imul dec (bad) sub inc adc adc popf test cli repz mov mov test pop outsb mov xchg xchg pop mov pusha xchg xor jp adc dec pop and push pop jns cmp push stc sete jl mov jecxz repnz mov mov adc push movsl xor inc mov add and sub in adc ret fs pop mov mov (bad) sbb fstp add mov or fdivrp jb mov cmpsl arpl xchg out pop jns mov jne iret ja and add mov xchg sbb jno aas rcll lea repz or add mov mov pop rclb (bad) (bad) mov repnz sti sbb into xchg jle and bound js jp jmp jg cltd inc lds loope stos pop loopne bound or lret jae notl adc test pop push out ret mov xlat loope cmp dec mov int mov dec lret ds pop mov xchg inc or mov xor jbe push pop insl test sub add pop mov es out fstpt out daa adc mov in jmp sub xor xor dec push gs div adc jb inc mov or stos pop lea imul (bad) mov lods sub pop mov imul xchg (bad) stos sub (bad) mov in sub test sar lret test sbb mov push cwtl cmc mov clc dec lock test or clc jmp into dec mov loop test xlat push xor adc (bad) cli and (bad) jmp std fisub pop cmp stos pushf (bad) lret xchg lds je mov xlat xor addr16 scas jl out fwait push lock (bad) jmp lret out cli nop fldenv out xchg movsb imull xor mov pop negl cmc dec jno inc jge movzbl jecxz ljmp xor mov cmpsl imul xchg and js dec out sar movsl std je iret jl into pop or fcoms cmp mov push jbe shll aaa xchg mov jmp repnz fcmovbe push mov pop xchg js outsl xchg ljmp test mov xor or gs mov mov pop jge fcoml out and cmc mov aad xchg icebp (bad) insl or (bad) mov loope push and and xchg cmp cmp inc out push sub sub mov test sbb pop std and lahf lea push lods loop fdivrp mov lock ror add cltd jne divb inc lods movsb inc lahf lcall sti ret aaa inc sbb push inc push sbb sub inc pop or test and cmc gs or sbb int3 adc (bad) sarl sbb jne and test mov lcall mov adc jnp add outsb mov cmp jno adc lret inc jo xchg mov aad scas mov jne sbb add xchg jge test lcall pop imul and in add sbb aaa push push mov xor sbbl and jne leave mov (bad) repz mov cmp adc cmp movsl stos out roll inc jbe or hlt fld push repz mov (bad) mov mov ja iret test dec or sub xchg or xor jecxz or mov in insl xchg ja pop mov mov xchg push or xor dec (bad) mov mov arpl pushf mov jle sti inc pop adc mov je xor jo mov cmp aam and aaa adc mov jb stos mov fs in sbb imul xor xor popa adcl cmp xchg (bad) repnz and jle and orl mov pop sbbl movsl dec adc addr16 and and dec jb lahf daa daa and add inc dec int mov xor inc add cmp cwtl xlat push lret (bad) jmp idivb int jp mov mov sahf inc pop ja data16 xorl mov push push out sarl aad or xchg outsl jo pop xchg ljmp inc (bad) mov pop add push xchg rcr test (bad) or sub adc outsb mov sti lock ja pop lret pop sub ficompl bound out mov dec adc (bad) lea cwtl mov sub lret and add mov adc push xchg loopne cmpsl and nop dec stos fucom ss mov mov mov or mov rcrb inc mov insl in push into jge sub cmp data16 out (bad) fsub (bad) mov push xchg add jmp lret mov cwtl enter mov (bad) gs add scas push lcall shrl aas test aaa xlat pushf and sbb out sbb xchg mov (bad) push dec hlt sbb outsb gs aaa daa dec hlt push jl mov fst fs add bound call movsb mov dec sarb and testb out gs jo stos (bad) xor inc hlt and dec (bad) and inc mov jb inc jb aad cmpsb push inc mov iret mov lret add sub into pop in cmpsb adc cmc int3 xchg pushf sti out sub dec fsubrl ljmp (bad) scas and fildl lock adc test dec movsb cmpsb xor pop adc inc (bad) fdivs mov push test jl push int3 ret arpl xlat fs stc cld sub (bad) lcall notl in inc movsl into or push (bad) xlat outsb xchg push cmp sub or cmpsl outsl xchg adc bound mov gs mov fiadd sbb ljmp test jl xor dec inc test adc (bad) xor and pop pop out popf xchg adc mov or hlt loopne xchg pop cld xor jb push jecxz imul cs (bad) inc and loopne data16 aam push inc and adc inc xchg mov sarb jns iret cwtl mov sub jbe cmpsb inc add pop pop aad pushf sbb mov rolb fcomp inc and fs loopne arpl mov mov jg fimull mov je jo lcall lods jbe jecxz into out hlt ret fmul add dec (bad) mov roll ret je mov lods test xchg or mov and mov lock adc inc fimul add outsb (bad) scas and sub mov ficom mov (bad) in lret mov pop test sahf inc ljmp cltd in (bad) push ljmp divb or xchg test arpl xor je (bad) cmp adc jp repnz (bad) fimul adc shlb nop ds movntq mov xchg sub jmp outsb mov push mov cli pop dec ret mov testl mov out push jae inc movb sbbl jmp pushf sbb and mov push mov (bad) (bad) nop rcll stos insb or jmp std inc add cmpsl (bad) mov xor push rolb mov inc ds add dec add add pop jae in sub inc and daa xchg jecxz add aad inc nop out mov ds mov sub lret dec cld ds leave outsb imul xchg loope stos xchg (bad) mov loop add cmp outsl idivl xor mov fldcw aad and repz push out scas inc pop sub mov push es mov int3 sbb cli xor push or pop into outsb sbb test cmp push stc or or cmp mov jb shrl mov mov iret cld mov inc add out fwait and pop test arpl xor loop insb dec sub leave push (bad) mov (bad) (bad) loopne sahf sbb sub push jnp mov test push int ja lcall inc dec jb mov sbb test inc ret push arpl and out dec stos les nop mov fwait in loopne push xor out pop es dec addb push inc arpl test add stos xchg lcall xlat or and lds test push cmpl les insl xor pop pop enter pop inc adc test sub loop mov (bad) cwtl sti ss rcll fldl popa jl icebp lods inc (bad) lahf roll xchg int3 std jns loop dec adc jb imulb fcomps insb push add sub mov adc nop out ret mov aas xchg cld ds cmp cmp insb mov jno xchg xchg rcl pop movsl imulb xchg sub shrb sbb push addr16 imul fcoml jl push xor lret and nop mov inc fisubl (bad) pop iret and lea and jbe sbb int3 dec sub jle sub mov or dec test push xor (bad) mov fsubs push jnp cwtl lret adcb fwait xchg dec in push lods test bound fiadd ljmp popa or mov out jecxz pushf pop xchg mov xor cmp cltd push mov rol add cwtl mov sbb fwait ss add (bad) push sub add (bad) xor (bad) (bad) push (bad) mov mov xorb or add xor dec rcll mov mov cmp (bad) or loope adc cli fiaddl mov and push push xor mov pop pop sti dec cmpsl aad jnp movsb mov sub sahf popa sbb fisttpl loopne or cltd mov xor adc decl popf mov xor aad (bad) pop lret lea jne sub lods push jle int3 mov push jne call mov (bad) ljmp aas cmpsl inc stc mov (bad) xor or lret lcall ja inc loope pop lea std push jb lahf mov pusha and and imul cmp pop (bad) mov inc pusha loope sbb pop stos or jns outsl scas and lret cmpb xlat jno or jmp dec add jmp add pop dec add dec cli lock je xor fs cmp iret repnz pusha mov je test sbb xchg imul cmp iret sub insb mov and mov arpl inc loopne jnp sub jae add xlat xchg in mov inc out adc jp adc or xchg scas jns insb loop jge (bad) mov mov sahf fnstenv mov or mov out out test outsb add mov sbb shr sahf jmp repz mov call xchg lods cmp mov movsb aas sub pusha icebp pop dec xchg out cwtl sbb mov les test xchg dec test out mov xchg cmp hlt and fnop mov fildll push inc cmp push sub lahf pop imul fiadd jo adc inc cmp sub ret test ret mov lcall lock clc outsb test mov xchg scas pusha out cld fidivrl scas mov and stos mov xlat shr bnd dec leave sbb insl mov fdivs movb mov push and xor push mov mov cmpsb out cmp xchg sub (bad) jmp cmp mov add pop enter lret fistpll jo add and push call nop mov push jnp xor pop in dec test sub pop dec jo pop pop sahf cwtl cld add pop adc ja push fs in jmp ljmp jb push cwtl jp sbb fisttp mov loop xchg adc fistl in xchg xchg fidiv addr16 mov jge popa xchg lods cld cwtl fldenv pop das cld sub or (bad) dec push inc test aam sbb std mov lcall mov adc mov dec lret es sub xchg push ret xlat mov lcall mov and dec lcall jmp sahf rorb sub fstl sbb loopne cs sbb (bad) jb cmp sub int rcll scas imull (bad) and in (bad) test and push xchg test push push aaa sub mov es (bad) and jnp xchg cmp inc out jl mov iret xor ja mov add push pushf jecxz xchg dec adc rclb icebp or nop leave test jg cltd jmp aad fbstp cmp mov (bad) jmp jmp stos jno lods xor stc cmc pop xchg arpl (bad) fxch imul or sub mov stos ret xchg push ss sbb jmp pop mov std orb out xor in loopne ret stc nop (bad) cmp test dec cmpsl ljmp pusha mov and dec xchg adcl (bad) outsb scas pop xchg hlt fdivrp into rcl mov loopne inc into push sbb xor inc cmp lods add std mov sarb sub inc pop jl push aam vandps mov pop out mulb movsb loope movsl test int cmp add sar mov jo cwtl mov inc in sbb enter loopne and fs nop bnd adc mov and lds sbb (bad) into repz pop xor xor sahf dec and push mov push insl dec in shrb xor in das dec jle jbe popa aad push pop mov int cmp jne mov decb pop push shll pop stos ret mov push inc mov idivb xchg cmp push or inc pop ja lcall stc (bad) notl mov mov cmc out imul mov nop scas test es or pop fldt mov mov mov subl (bad) or push fldl lret stos adcb sub and insb test pop dec sbbb inc or and and and ljmp dec shll std xchg insl js jmp lret shrl out gs jnp call adc pop and out pop mov mov push cmpsb mov sub sub push sahf inc sbb rcll hlt xor xchg ja in cmpsl xchg and (bad) outsb mov outsb push add arpl lds in cmc inc mov push sbbl dec mov sbb push xor sub push outsl repnz popa (bad) sbb fs pop xchg mov cmpsl cli jno fist sbb pop icebp cmp xor mov adc pop (bad) (bad) adc mov lret add fldl insb out cmpl mov fdivl pusha push dec jmp lret (bad) inc xlat xchg mov enter in imul (bad) enter in dec jno push (bad) dec mov mov jnp subb fsubr inc in add aam icebp pop int3 (bad) jl cmp aad jmp pop sbb add inc rcl jp fwait jno cmp shlb inc les outsl pop jnp lods push inc pushf into clc je cmpsb inc scas push cltd aaa movlhps cmp mov add sbb cmp cwtl ja sub xlat jp fiaddl adc xchg test lret aas adc xlat lea mov lret push rorl mov imulb inc std add pop popa and push into aam cmp rcll mov (bad) test pusha pop lds pop xchg loope and mov mov (bad) (bad) gs ds rcrb sbb mov sub jne repnz mov ds mov or hlt adc fcoml in sub into dec imul arpl in (bad) in push faddl cmc test mov test sub das popa stos mov outsb incl mov mov mov arpl roll mov push data16 dec dec insl add adc je or pushf lcall out in sbb xor sahf mov stc mov pop and imul xchg add jbe fnsave sbb leave pop or clc imul pop push inc push js sbb into subl inc and jge and ror clc push xchg jb jmp mov shl mov movsl cwtl outsl dec xor iret gs and sbb mov test fisttp inc in xchg cmp lods inc mov cli jo sbbl hlt dec pop mov cld pop cmp das addl fcmovu sbb clc add int mov ret insb sub pusha push arpl push xchg out into aaa lea bound inc stos jge mov pop jne (bad) hlt sub mov cs add mov or mov icebp jb inc xor lods sbb call xor insb xor lock add cmp stos repnz in jp add sti mov int cmpsl repz (bad) fisttpl push es out hlt fwait mov pop push js fmuls inc js aaa jle test xor or sahf fist mov dec scas insb shld mov mov push sti pop stos or jae mov das sbb sbbl insl xchg xchg dec push lahf outsl or cmp clc repz lret mov arpl lret fwait push adc idivb push xchg popa (bad) and jp mov mov ss leave cmpl jb cmp scas push or pusha mov push bound mov inc shrl imul (bad) mov testb push push adc out addr16 and stos pop test cmpl mov or popf in mov push cmc sub push fsubrs mov cld cli and jnp adc repz out or lods sub adc jne mov jns cmp mov sbb ja fs shr mov xor stc cmp mov ljmp stc push xorl xlat ja add in pop jb sub push mov insl aam insb xor xor fcmovbe xchg aaa gs addr16 dec enter add add pop add bound pop fildl sbb xchg xor aam jge push faddl lds push jns sub outsb std lock xchg popa jo ds add fs cmpsb dec aas add mov (bad) int3 (bad) out push push xor pop xchg test outsl (bad) xor jg jmp jge cmp ljmp sahf mov mov lret mov lods jo ds cmpsb jge and dec insl dec fsubrs sub imul test fsubl outsb xchg xchg or dec xor push out insl in cmp push xor (bad) loop stos mov sub mov das inc jnp lahf mov cld pop jle pop pop fcomip pushf inc dec ja cmpsl mov dec cmp jle push (bad) cmpb jg mov jl ret scas jecxz or sub jnp xchg lods mov ret mov movsl push pop shlb push je test lock or test stos vpsubusw xor (bad) es je mov mov xor hlt movl pop xlat push push dec mov jno leave rcrl sbb mov lea mov in mov out jno fdivr loopne in loopne inc xor out xchg enter inc lahf lea or in add imul xchg (bad) jg jmp pop jmp jecxz call sbb test push popa fistpl xchg adc rclb push insb pop pushf into test sub (bad) daa push pop push imul cmc xchg ja lahf inc adc or dec dec jmp cmp xchg pushl (bad) push mov inc jp mov daa pop rcl ret das add ficoml mov f2xm1 cmc mov inc in arpl into inc or stos bound mov dec (bad) jg cltd add cwtl mov sti lcall lods add pop scas test mov ds mov imul pop push push lods cmp cmp (bad) push adcl lret dec subb test stc xchg mov cmp mov pop mov mov lret xor mov shrl adc out xor add (bad) mov int3 sub or aam sub repnz aaa inc mov mov jnp or cltd xor add sahf ss mov psrlq push mov loopne std mov test repnz dec movb dec gs mov pushf mov test mov dec std xor sub mov jecxz xchg mov jne xchg nop jp inc faddp in jp lret mov insb gs pusha push sbb rolb imul and push mov out test divb dec orb mov pop int sub xchg in (bad) aaa lods jnp dec sbb sbb cmp iret mov ffreep cs cs jbe js xor adc xchg sub adc add insl je sahf lock push push test int jmp jb fs dec sbb or inc shlb and xchg jnp or xor dec je xchg pop mov mov and jno fstl and and iret das mov pop fisubr out (bad) icebp cmpsb jbe clc ljmp clc cwtl loopne movsb js (bad) imul fild popa (bad) jne and adc push into js pop sub imul or insl add sub (bad) (bad) adc dec aad outsb mov negb xor or repz lds fwait pop in mov pushf mov lea rclb push push icebp cmp repnz xchg inc cwtl add xor iret in out loop inc loop in push cmp cwtl mov fwait pop jne js dec rcrb push lahf sbb jno into dec addb in mov sub (bad) pop divl xchg fisttpl lods pop notl mov and test je sahf xchg jp mov pushf or popa aad mov pusha cmpsb test (bad) cmp add xchg out jle push inc adc jb jb (bad) in loop push negb sub out cltd movb insb inc xor fidivl cmpsb sub shl pop jge hlt popa cmp and mov outsb (bad) push cmp imul and std (bad) jo shlb mov add adc inc sub mov xchg and aaa dec rorb movsl les jl fnstenv push xor scas jo in jmp sbb push sahf inc bound aaa cmp push mov mov (bad) adc out mov jnp iret sbb xchg hlt add mov push pop mov cwtl xor mov dec daa xchg xchg push mov fwait dec push add loope repz inc mov push push jae int3 jge in iret ss dec push sahf testb inc (bad) pop inc ror push xchg sub clc adc cli sti add out mov sub xchg push sub mov mov and xlat cs push push stos in push xor test cmp stc xorb jg mov enter test mov test mov sub dec nop jae inc sub outsb inc and add cld movsl lock roll add xor inc push xor inc movsb pop ljmp int sub lea in sub adc jne or or gs mov jb dec push adc xchg rorb push dec and sbb inc jb push mov xor and pop out data16 and sbb pop xchg adc sti fist cmc test sub cmpsl adcl push sbb sub jmp cmpsb movsl out iret test lcall in popa not push ja pop cmpsb mov or mov out add mul sbb jl inc aaa inc or jle push mov xchg orl inc push sub push push push mov fld pop popa pop mov in and cwtl lods pop (bad) int test push ss sbb repnz cmp arpl mov jg mov movsb cwtl hlt xor sub daa out popa or dec icebp sbb push dec icebp addr16 jge dec sub (bad) notb fcoml push aas ss stos scas in dec int (bad) stos adc ss sbb cmp shl xor pop jo enter inc xchg sub dec fucom add cmp pop call mov xor and (bad) jmp repz inc mov addr16 outsl (bad) cmpsl aad and add inc dec popa sbb mov lea add lods push jmp inc push repz pop gs and jle mov ret sub enter cmp out jecxz mov xchg movsl negb lcall or sbb movq pusha lods inc xchg jge aas mov pop inc repnz lds jle hlt ss inc enter clc mov pop lret xor push lahf int3 imul inc adc (bad) sti ret cwtl leave sub outsl arpl add sarl data16 mov int3 stc int pushf mov out fsubrs xchg bound or sbb fstpl mov mov inc loopne (bad) scas and sarl out mov cmp or imul adc xchg and mov pop pushf (bad) icebp pusha mov mov cltd stos jno (bad) dec imul stc inc pop int rcrl add sub jecxz leave pop mov push sub lret adc mov xlat push dec mov ds js inc leave js std test and test pop mov bound xlat ret lcall ljmp xchg arpl add out pop lret dec xor out out and mov js mov fnop out addr16 inc jmp cmp movsl push xor mov push das push int3 loop push lcall (bad) dec and sarb cmpsb (bad) push inc push and (bad) dec addb sbb das out jg repz sbb mov and inc scas dec nop mov jecxz mov decl cmpsl xchg out ljmp xor push in pop shrl jmp mov rcl inc sub jle out push popa out das mov push cmp ret loope mov outsl shlb mov arpl sbb lret push jp cmpsl sub stc jbe jge das jbe sub cmp cltd xor lcall lock mov cmpsb sub cwtl icebp push (bad) jnp dec movsl pop test push inc lock lret ret add sbb jb inc adcl insb cmp mov jl and xchg inc and push loop sbb fwait stos pop cli fwait push push mov fstps lock test xorb ror aam arpl out inc fcmovnu push (bad) jp fwait daa mov mov ret mulb jns rorl cmp lods jecxz mov sti mov mov aam (bad) jae xor jle aas jle mov lods cmp fdivs pop cmp xchg mov lock or cmp stos ret pop shll mov dec fdivs adc movsl or adc aas xchg je mov jle jle movb xor loop aam insl inc pusha cld cmpsb rcr repz data16 xchg int3 and jbe or dec mov inc jne lods sub jmp mov lea xor mov sbb scas js sarb adc mov jmp or mov add (bad) aad movsl loopne out fild ds std inc inc cli jg cs cs mov add xor lods test sahf xor jecxz cmpsb fadds loop int into out mov sbbl or ss imul mov cmp movsb (bad) stos mov rorl (bad) mov imul jl mov inc push insl add and push mov loopne or out dec jbe xlat xor fistpl test xchg cmp imul or mov mov sub imul sahf jl mov aam jp dec mov scas imul stc or fstpl push cmp cld (bad) cmp int3 cwtl xor mov dec rcl movsb xor (bad) or lahf sub lcall test pop fstpl (bad) jmp push cmpl sub int3 pop loop inc popf (bad) adc lret lahf add cld ret xlat pop push cmp mov aaa sbb jns jae dec out mov sbb inc dec shlb inc mov ljmp addl iret test jmp and les ds (bad) jo push loopne fmul sbb ja inc stc inc push and cmp popa orl adcl fistpll jp fildl cltd inc cmpsb fisttp lock pop lods (bad) (bad) lret clc sub and adc or scas jnp mov pushf mov int3 inc outsb mov xorl ja out push rcll aas cld aaa mov mov rorb movb xor mov fistl xchg (bad) or dec adc sbb in lock je push jp inc sbb pop leave ret aas mov xchg push push into mov push mov insb jp sub mov mov fsubp popa push lahf les test and addl mov push add add and sahf sbbl popa es fldl sub push movsb clc pop sbb push cmpsl pushf rcl xchg dec je adc inc mov cmpsb sahf shrb cli mov mov or pushf and outsb je frstor add lds les scas push das and pop hlt scas push sub je mov das jnp daa outsb sti imulb out lods mov (bad) mov jnp pushf dec das mov ret fnop jg sub dec (bad) scas test xchg test mov mov in adc scas cmc data16 jae aas mov test add iret push push sub mov and or ja bnd cltd scas aam xchg ficom lahf or mov leave fimull bound mov mov pop push jo aaa mov cmp xlat adc jb aas inc cwtl dec adc and imul mov shrl push push aaa sbb inc stos (bad) sbb jp fcompl adc xor cmp je and mov or add cmp enter push dec cs cmp lods movsb enter dec add cmp hlt fstl les cmc mov push or mov lea sbb push mov mov daa (bad) or inc or out jbe push aas inc dec mov icebp ja lahf and jns insw cli xchg inc jle imul add out sbb push in mov inc int3 xchg iret jg inc or pop push add xchg mov aaa mov pop and lods negl movsb or fisttpl add push inc mov xor xchg in loope (bad) push push sbb call pop push and or sbb fisubl cmp (bad) cmp mov push call mov subb jb lea stos sbb std jns dec addr16 dec cmp xchg xchg or mov mov (bad) push in push arpl sub mov inc (bad) mov insl pop mov mov add daa sbb lods add icebp sub mov insb sub push mov ret sub push jp repz jmp jns push loop cld sti inc mov sub inc dec int xor add repz (bad) jo cmpsl add push aas les mov push ret xor mov in mov xchg push xlat mov test and mov outsl cli push cwtl cltd push sbb cmp and cltd adc pusha out mov mov dec jecxz (bad) icebp div ret push or adc in or cmp inc enter xchg push lret or pop dec mov xchg push outsl (bad) jb dec mov push pop js sub cmp fldl fistpll loope jns lods mov jnp pop sahf mov jge (bad) and xchg sub jno mov and stos add add adc mov or daa inc sub enter loope test leave enter dec test mov lret into out stc cmc test aas xlat stos jne push hlt fdivr sbb popf push mov xchg mov add dec push repz sti sbb imul add mov lea pop pop enter or mov push or push loope add inc jbe jne nop cmp xor pusha mov lret inc fildll xor int dec mov mov test aaa inc mov mov sti xor jp add pop mov xlat (bad) fnop inc sbb jae adc mov mov mov sub pop adc mov mov and aam push mov fidivr mov or jb add movsl pusha lcall imul push outsb lcall xchg lods cltd ss mov pop and xchg mov mov and test cli loop adc lock add enter ds mov jl cltd or lret lods sub call aaa add rolb repnz pop xchg sub inc inc push (bad) loop repnz pop lods jg lcall int mov daa pop mov pusha sub and sub jecxz mov rcrl sbb push or dec sbb mov mov pop mov sub jno push sub nop out dec or add sbb stos dec jns xchg jne ljmp dec rclb push sti icebp pop or sbb je cs (bad) insb mov mov cmpl clc push aad sbb pop pop xchg test fcmovnb sub push xor dec push mov pop xchg fisubl xor jns xor or mov nop cmpsb mov in pop popf (bad) in ja or lret sub jo stos cs cwtl mov fcompl cld (bad) (bad) (bad) push dec loopne mov dec pop rolb das mov popa push adcl loope push push mov push cltd inc sti ja aad pop sub lahf js cmpb scas scas lods cmp popa out and aad mov imul rcrl aam xchg dec pop mov outsb push pop popa cmp adc push nop xlat jg imul adc or mov mov stos inc je push pop arpl cmp sbb (bad) xchg fbstp and test loopne loope mov bound cld cmp clc outsl popa movsl ficoml fistpll mov mov add sbb sub cld sti sbbb xchg adc jo dec scas cmp popf pop cmp dec push gs cmc stos cmp cmpsb adc sub pop pop xor test test sub (bad) ljmp popf enter pop mull (bad) ficompl sti testl into mov inc and icebp jge and jne stos fnstenv jo test fcmovb push aad test fimull cmp or sub pop and cmpsl inc add ret add jge out mov or xor adc dec adc xchg xchg pop aas cmpsl sbb repnz fsub xor cmc test xchg mov mov call dec xchg lods cmp xchg aas jbe dec shrl in xchg jb inc repz mov mov fs sub adc push out ret push xchg ret jns lock inc jle cmp cmpsl xor or xchg push js fdiv sub add mov popf sbb pop jp bound or mov inc push fsubl in jne mov cmp aam insb clc invd les sbb xchg jecxz ja (bad) imul ficomp fsts mov pop xchg js push mov adc clc cs sti mov aad fucomp and ljmp adc es xchg (bad) or add gs sub (bad) sub daa leave movsb cmp adc fiadd jns sub sti test mov mov lahf jae shl mov jnp movsb iret cmc dec mov das fisttpll cltd sahf and jne fsubl xor (bad) mov sbb sub inc repz sub push rclb jbe,pt rolb loop into into sbb xchg push mov ja (bad) mov inc mov cmp sbb inc pop and sub or repnz mov call xor mov popa imul (bad) dec push jge es and and test cmpsl jno daa and xor lods ljmp inc daa or das ret bound mov and stos popf into (bad) mov push scas leave movsl mov xor into outsb sahf xchg fnsave push (bad) inc pop xor cmp inc xlat packuswb dec adc pop cli incl inc scas and push test and mov mov sti ret test jmp jno mov jg inc fbstp pop and (bad) mov jle inc push push cmp push mov pop hlt xor (bad) in adc cmc adc sbb pop adc out cwtl ljmp xchg das in adc sarb pop jno imul xchg in jnp or add xor jmp movsl incl test lock mov in xchg leave and pop fidiv sarl mov sub fistpl cwtl push jg rcrl jle test adc dec xchg fcompl sub (bad) jb pop das sbb sbb mov insb adc outsb mov mov xchg push jmp xchg dec imul mov jle jne test and dec add and jae lret cmpl and std aad push pop nop movsb (bad) rorb xchg test call cwtl jle stos mov or jne ret or mov sub ret outsl scas int3 jne cmc and push les xchg sahf add pop mov sti les xchg dec in imul cwtl mov mov inc pop cmpsb in inc hlt (bad) imul insl jo adc fdivrs cmp jbe lock jmp xor mov xchg test mov adc mov sub cmp or sti sub gs ja mov add inc jo rcrb fdivs popa cmc cmpsl adc mov ljmp (bad) repnz add sbb inc pusha pop nop stos ss mov add jb mov mov jmp fimul decb lea outsl leave jae (bad) cwtl mov jp cmp xchg insl xchg sbb (bad) pushf jle or enter int3 leave (bad) jge jo out mov lret mov es sarl lahf repz push ret rcr mov mov sbbl inc add lea jp sub xchg and aas cmpsb mov outsl push into jl ljmp out out out insl out mov xor mov scas std lods lock lret gs jne in cmp fldl in (bad) xor jnp pop fwait test inc inc mov or and pushf inc pop and add pop inc repnz arpl sbb cld (bad) mov inc flds pop bswap ret outsl inc mov xchg push out xchg and (bad) lret sbb xor mov int fild pop mov jl pop addr16 inc dec mov int3 loopne xchg test xor xor fdiv sub sbb mov mov inc pop mov rorl add xor loop jnp add push lock cmp fwait xor push into pop sub mov ja push jnp xchg adc add repz add push mov (bad) xchg mov dec push call out add or cmp mov push call out mov test scas pop fildl pop inc jecxz mov inc jecxz mov and sbb das (bad) or sub sahf fisttp mov scas adc data16 sub leave fcmovnu (bad) idivl aad or mov or sti arpl mov nop cmpsl mov cmp xor sub xor popf sub push jp dec mov lock xchg mov sti fcoms add bound cltd cli push lahf (bad) stos out inc test adc sbb push sub clc pop jecxz aam xchg popa push jl adc pop sarb or xchg push cmp ds or mov es sbb xchg (bad) sbb test lds and in and lcall lock push mov mov sub in mov adc repz mov dec jo sub jge or adc fwait adc cmp sbb sahf inc (bad) fs rdtsc icebp outsl xor or inc add ds push vcvttss2si (bad) mov cmp pop pop jl and mov and and (bad) jne mov sbb mov in push mov cltd seto sbb fisttpll jecxz xchg mov nop lods push jmp adc mov add push cmp imul call cmpsl mov jp sub outsl mov cltd into xchg mov push (bad) adc sub loope push pop pop push jecxz ds jp jno xor dec clc fsubl sub sbb push xchg sbb or push pop or (bad) mov loop mov bound scas fs jo out test mov inc icebp dec arpl fmull gs ret scas bound sbb fs aaa lea (bad) cmp pop pushf mov xchg hlt and insl popf cmp (bad) in rorl rorl xchg sub jmp jne mov movsb jp pop push jmp ret or mov ret xor insl add icebp lret out fnsetpm(287 cld push pusha jmp iret push fmull or or xlat and pop aaa mov xor scas cmovnp xchg arpl inc jae fnsave xor mov int jle mov sbb mov ret dec rcl jp jb shr in and jge adcl test nop push cmpsl xchg jb mov icebp jp in push push and ss push (bad) je outsw loope (bad) xor outsb pop mov cmp nop xchg mov arpl sbb int pop lret mov lds fbld add push clc jnp (bad) mov call mov test xor lcall cmpl das shr sub or mov mov sub (bad) cmovno rolb in imul out mov les int3 xor rolb in movsl inc ret pop mov (bad) pushf mov mov jbe les or adc stc mov fisttpll std div movsl add sbb ss cli mov fisubrl push sbb movd xlat test gs inc inc ja cmpsl xchg test pop jg,pt mov mov jp fs push mov aad cmp jns call fdivrl add xchg sbb test jp fwait mov jp jge ss cmp (bad) or fcomi sub test push jmp cltd xchg pop and push sub std loope int (bad) and jne xchg pop vmovsldup xchg xor ss (bad) je mov aaa fimull add sbb movsb mov cmp idiv scas push test sub imul jb (bad) (bad) sbb push mov xor xor inc test jno push jb push jge popa mov fs les jg push outsb scas pop out cmp inc int3 pop jge and jl xchg inc jp aad or cmp push icebp popf loop push rcrb in idivl cmp pop cmc pop and xchg out (bad) jmp xor in mov mov lock fcomps push dec shr sar popa aad cmp popa push fildll push cmp push jno aad cmp mov (bad) sti and pop dec jle xchg aam cmpsb imul test cmp sub data16 dec fidiv jns mov pop xor pop or xchg inc mov pop push dec cmp nop cmp mov inc push pop sti jns fs jp inc lock in jge push daa jmp dec jp xor std or clc loopne push mov pop pop push xor sar jnp int3 cld lods imul mov mulb push inc imul sub or sbb fs or pop jne dec adc or or xchg out call rcll scas mov pusha imul sub lahf pop (bad) dec out dec ljmp lods pop fstpl xchg test gs push stos (bad) lret addl fsubp adc cmp aam sahf jae (bad) xchg sti fwait in mov lret push popf repnz sbb ret call movsb ret mov add and iret xor (bad) xchg in pop adc lcall mov imul pop xor (bad) ja hlt sub mov loope sti xchg (bad) aas outsb movsl jo inc xchg popf xchg jmp cmp mov dec inc jecxz leave (bad) jo sbb int lahf enter loopne loopne scas inc sbb (bad) ds sub dec ret incb xchg jmp popf insb sbb aas mov xor (bad) jae dec mov ja jae pop xchg xor xchg sub popa mov mov jecxz (bad) push imul cmp stos cli cltd cmp es (bad) call jae sub jbe ret lahf insl test movsl test mov pop jae call push inc mov cmp adc push aam xor iret adc in mov xor enter mov (bad) lods jno sti lods cmpsl pop pop sahf (bad) sbb icebp jge push bnd xchg loop data16 inc dec xor (bad) mov jecxz pop xchg mov insb pushf push in and mov rcrb (bad) jne jmp loope dec aaa sbb lock repnz push pop jbe loopne rorb pop cmp cmp mov fnstenv fwait hlt xchg pusha (bad) adc shlb test jns neg ds cmp and (bad) push popa (bad) shll mov push mov popf out test mov aad add dec movsb push cmpsb mov add push ss js push xchg pop bound scas xor jl scas jle cmp cmpsb dec mov and jne es cmpsb add jb mov pxor inc iret insb and xor push repnz clc js movsl in fadds push popf aam iret mov mov or fist xor cltd or sbb outsb (bad) inc and jo hlt inc test incb dec jg das and fldl es mov stos sbb dec imul or and js,pt pop cmpsb enter call pop pop cmovo cmp rcrl aam cltd push mov cli mov cmp scas gs loopne xor push lock enter dec inc lods inc push jbe mov lret or xchg into jnp sbb and gs mov cmpsl (bad) daa sub sbb push fnstsw dec fisttpll inc iret daa into xor in mov icebp cmp outsl add push into or notl out and cmp ds jmp lcall mov mov cltd hlt icebp js cmp je push and stos add test adc int pusha and test jecxz (bad) repnz pop sbb jnp xchg je iret adc test jo fwait jge lds (bad) fstps xor mov out popa fsts icebp push dec dec mov cwtl ret inc jl stos lret stc push pop (bad) dec idiv sub movsl push pop les pusha mov call adcl cmp push test (bad) repnz jmp jl add or fldl scas stos outsl xorb mov and and pop scas push insl imul stc jo cmp pop adc aam push push pop inc sti inc addr16 push lock sub mov mov ret xchg pop (bad) xchg sub inc fildl ltr sbb fstl xchg int and imul push rolb mov and cs jns or mov setno fstps rorb push cltd jno fimull inc adcl push dec add test mov rorl push cltd clc cmpsb pop xor ljmp and sub sbb or cmpsl and aam lret and xor mov fdivr xor pop out leave and and pop out test sub inc sbb xchg pop add cmp jl enter dec sbb js dec bnd jns jp mov sbbl or out and sbb insb clc cs pop cmp cli or fdivrs mov repnz dec add push sbb je adc aad xchg mov les out repz ds push push mov jnp mov and sti xor pop xor and jne jbe test or cmp fdivl sub pop pop mov xchg mov loop push mov sbb or nop ret sbb aam push cmpl test cmp (bad) cmp insb mov adc fsubp add sub test (bad) call adcb pop pop dec lret dec sbb int3 cli aad sub add loop mov or daa sbb cmp ss inc mov xchg lcall cmp jl cmpsb push mov add jbe adc mov nop imul jmp daa inc pop pop jmp push mov fnsave mov xchg aaa arpl pop shr mov fiadd add je fnstenv scas and push fimull mov mov inc nop js imul add int3 adc inc adc add sarl cmpsb sbb adc cmp lods xlat pop leave fimull mov scas add cwtl and add faddp inc sub add jg push add icebp add ret or mov add sub lds push cmpsl das push add add push lcall dec xor rclb pop lret popf outsl iretw repz ljmp sbb inc xchg xorl inc enter mov dec jns adc xor sahf xchg rcrb ljmp push xor icebp xor cmpsb mov or addr16 fwait divb mov clc jg adc mov mov sub xor insl sbb push lahf int3 jecxz in push pop idivl push xchg inc mov (bad) push sarl imul sbb push dec push xor call mov mov push ja add cli inc xchg je popa cmp test xor (bad) lcall fidivl notl out cmp mov push (bad) sahf ljmp cmp add jae stos pushf pop or add mov das mov inc jg pop cwtl stc pop scas test adc lret test mov xchg inc sbbb sub insb push clc adc call (bad) test icebp out pop push cmpsl bt or jb (bad) push or mov add push and xchg xchg cwtl push (bad) or ffree sbb pop popa and int3 movsl adc push scas add mov lds inc les lea pop jb mov pushf je and fisub cmpsb bound ficom pop pop cld popf out popa dec loope sub rol dec fistl inc dec div inc sub xor jmp scas (bad) jmp (bad) iret shll sbb and fcompl mov cmp movsb jne insl and js jnp mov xor stos js cmp cmp mov adc frstor push and fsub fnstcw push mov loope (bad) add jge mov jns adc xlat idivl imul punpckhbw push mov sbb or leave dec mov push hlt out nop cmp dec push dec or iret xchg (bad) outsl mov (bad) cld dec add test mov mov cmp (bad) loopne push imul ja lea xchg dec ja push out aam adc jl test dec pop mov sti mov mov in jnp daa arpl pop pushf scas aad push jne push dec nop aas push popl inc test sbb repnz adc stc (bad) into adc bound imul mov subl mov fs fist adc bound or xchg fmuls and lods sbb xchg movsl mov ds ss pop pusha pusha sahf and push pusha xor push into jae das pop sbb adcl cld cwtl ljmp scas inc push arpl ret push rcrb daa dec hlt neg lock out ret ljmp mov xlat fs mov xorb xchg es inc or je sub jb pop je jge xor push neg out mov repnz push xchg fsubs mov rorb dec adc push push pop sti out fcmove sarb jge loopne scas sub xchg test pop push jns or jbe add inc or icebp lahf adc movswl scas sub jbe dec cmp js push or push mov dec (bad) jge stos adc add jnp jno pop mov stos int sbb dec test adc sbb sbb clc movsb xor addr16 push pushf pop adc sbb test inc push dec call mov cmp sbb (bad) mov movsb mov jb sbb arpl bound fnop dec jp mov push fldpi xor xchg orb inc xchg fsubrl stc sub lds popa push sbb rcll mov and jg fisttpl stos sub adc rolb out mov into gs dec push iret dec mov lret dec mov jle mov (bad) push push inc or lods es push jge adc xorl pop imul stos fsubl aam js cwtl rol dec or inc fs aad jbe aad and repnz inc pop mov cwtl std adc repz imul outsl sub xor inc mov xchg cld lods inc popf or aad out jge test push mov shr sub xor lret icebp adc dec pop sarl sbb int js adc (bad) push fistp ljmp pop push (bad) jmp inc ljmp mov mov loopne out and (bad) pop lret lds leave mov push mov movsl dec movsl jno shrb and cmp xor testl xorl ret pushf jle xchg imul inc cmp ljmp enter dec cmpsl mov push jno repz ljmp clc js jb inc xor xchg sub mov push int fcmovu loopne test pop aad jecxz and adc addr16 push mov jge adc mov jae daa (bad) pop sub mov jb outsb inc js fldl cli pushl mov sub dec sbb sub push fcmovnbe sbb fldt pop orb loopne sub stc fstps movsb inc xor loop or push notl into insl lods insb out dec sbb mov insb xorl pop icebp or js inc clc sbb xor call sub punpckhbw out mov aaa fsts jno xlat cmp cmp ds xchg shlb ds mov sub add (bad) adc or ss (bad) (bad) loop mov dec ror iret popa add frstor mov test sbb scas fisttpl ljmp (bad) push es sarl mov lods into mov fcom (bad) rcll jns popa dec lea jmp rclb popf fs cmp sti int lods repz stos adc mov push xchg lahf sub sbb ret test adc dec or and subl inc shrb and inc fiadd ljmp xchg and mov loope scas or es lods out sub in in lods mov add and rcrl jae jne pop push push into cli xchg inc jle mov test dec js ret cs pop pop dec shll inc xor je cmp aaa fcmovnu mov fcomps lcall or mov mov push movsl js xlat sbb stos ljmp outsb mov ja fs inc pop ss mov pop and push push inc sti mov mov cmp sbb and (bad) fnstenv insb or enter repnz fs into insb pushf cmp sub rorb test in mov xchg sub movsl repnz es inc add imul rorl cmp add ss js mov push ss lock sbb arpl push dec (bad) push dec mov dec mov lods jbe rorb aaa sarl cmp incb insb imul cmp outsb sub ds cli fsubrs mov (bad) dec fistp dec push jbe xor int3 mov xchg mov mov scas sub mov inc repz sub les add loop mov cld hlt divl scas cltd aad dec xor scas sbb pop sub mov lds xchg sub mov hlt scas cmpsb mov push cli push mov fisttp insl mov and icebp pop sbb cmpsb stos dec popfw (bad) sti push roll lock mov sarb xchg js or jb dec adc add xchg fcmovnu movsl add imul icebp mov add out mov adc and imul (bad) out push sahf (bad) adc daa add ret or sahf mov stc in mov xor das dec and mov jge xchg (bad) lea add cmpsl adcl cmp dec into dec andb stos or fucomi ret das mov cmc inc sub repz or movsl iret aad cmp xlat test inc out xchg call repnz xlat loop fisubrl sub xchg push shrb mov (bad) lock cmp movsb movsb je loope sub (bad) jg sub sbb jg mov sbb pop or int3 xchg pop mov in (bad) cld or loopne pusha rolb jo jne push xchg lret fisttp lds pop fildl mov and insl mov sub cwtl data16 mov and xchg lret cmp arpl roll add mov add sbb inc pop push add arpl hlt nop mov pushf cmc daa js mov mov out stos arpl cli mov cmc pop mov mov fldt fistpl cmp sbb pushf cwtl cmpsb adc mov mov pop (bad) rcl mov push loop imul xor out test rcrl push pop cwtl mov mov js pop sarl lock incb lods maxps ljmp push fsubl loop fist push push adc cmc std fstpl mov inc int movsb cmpsb out aas sbb jle icebp les (bad) movsl shrb sbb pop mov mov in cmpsb nop push fldt lock and das adc movsb add xchg dec fisubrl call shlb mov out pop jp jge pusha push outsb mov mov push jne cld cmpsb enter pop jmp cli popf lret mov imul adc fcomps mov jp jmp mov mov call inc cwtl clc incb add jno mov cmp cmc mov cmp mov imul int fcoml cs jmp add jge cld xchg cmp and push imull sarb ds stc mov mov out cmp push push rol pop or aas inc ja inc sub arpl mov (bad) xchg pop mov mov sbb pop fs lods jecxz adc xchg popa mov push sahf into cltd mov daa pop mov js add (bad) xlat mov popf xchg cs mov daa or int fstp pop add out adc (bad) xor shlb pop inc cwtl pusha xor push fmuls out cmp (bad) test icebp mov stos xchg sahf in cmp jne (bad) leave jae mov out std stc lcall or call out ds shll and int mov mov fsincos xchg sbb lret xchg std mov inc and jbe call addr16 xor scas in pop testb clc push outsl out movsl (bad) dec mov int3 sti daa es mov or daa push pop and fildl aad xor jae jne add in inc and pop test xchg (bad) loop and mov mov dec icebp pushf mov rcll or jnp aad hlt push inc std ja cmpsb mov jecxz mov test xor and mov aam xlat and fnsave or pop in arpl test cld gs mov xor lahf sbb (bad) (bad) push inc pop push out mov insl xor lret pop adc mov out lods popl jae jge ss gs out inc mov jl lds pop cli and rcl shrb fistpll adc push adc and xlat pushf mov cmc std xorb loope es int gs push push sbb mov out pop in push sbb jo movsl gs mov or jns lahf (bad) jg adc test pop mov clc cmc xor jp (bad) ret pop pop push scas and cmp sbb push out out pushf push clc xchg aad cmpps sbb arpl cwtl pop add push adc mov scas mov adc jbe (bad) xor ds movsb jp push sbb ds pop adc cli jle jp je xchg lahf fcomps movsl mov aad and xor mov add add rorl dec out mov out icebp xor or mov fisubrl xor push orl jne cmp mov movsl mov lret into pop inc xchg js mov lock mov shrb or data16 dec cmp push and and les (bad) pop add dec adc pushf cs jge cld jbe xchg xor int3 sub jne sbb and aad stos or inc and xor and jno jnp outsb (bad) pusha cmp mov fist test and adc lahf sub out cmp mov rcl xchg (bad) das adc lahf imul icebp outsl test and mov jnp data16 add sbb inc mov fnstsw out (bad) push outsb jnp push ret fyl2xp1 sub xchg in jge (bad) insl sahf lock dec mov adc push ljmp adc cmp insl aaa or xlat push sbb add cmp cmpsl hlt out les push fwait jl xchg add fwait iret flds xor cmpsl pop jp push cmc mov aad push push in sub dec movsb sahf ss shrb rcr cmpsb adc sbb (bad) fidiv jecxz stos mov lcall pushf mov jns adc cmp jp adc imul dec out jmp jmp pusha pop loope jbe (bad) lock fistpll adc cwtl rorl in mov sahf (bad) mov xchg jecxz insl rcrl inc sbb rclb inc cmpsb (bad) repz (bad) stos fsubs pop mov xchg mov pushf dec mov in xor les test cmp sbb popa xchg and repnz push xor in pop outsl xlat sub fs aaa fsubs popa push inc jp nop lds jnp add adc pop rcr xlat insl sbb imul js sarl pop adc loope mov sbb xchg dec mov xchg hlt rorb stos jae push stc add cmp fdivl sub sbb stos leave or mov (bad) (bad) pop scas dec in mov dec mov dec jge scas push xchg sub inc gs push scas mov dec cmp adc scas and and lcall jmp js sbbl xchg unpckhps mov imul jge movsb aaa xor setle pushf scas push insb push pop or dec push dec imul lds loop sub out fsubr mov gs sarb mov loope out orl pop mov jmp xor mov pop std scas pop dec adc xchg mov or jb scas add add (bad) (bad) subl cld mov in popa mov cltd dec xor test mov cmpsb sub and mov aas aam out jbe mov movsb mov mov adc add push (bad) scas fmull xor aam jno push int3 stc jle cmpsb lods lds dec movsb xchg inc push std or es cmp add dec jp ret pop sub minps mov xor and cmp mov jno jmp rorl stos mov or std add gs call movsl mov sarb aaa xor mov push sub cmp and iret cld stos mov test jg mov adc fcomps jp mov push xor lea xchg fildl mov movsl (bad) call in fisttp ss mov ja cmp jg push sub mul adc pushf repz testb mov jb sbb mov icebp mov adc iret inc lds dec mov jecxz push fs push lret andl fwait inc (bad) leave fidivrl mov pop ret hlt out fldenv repnz (bad) ss hlt aaa jecxz outsb nop and jnp insl xchg cs mov xor inc ficomp inc push loope xchg enter or or and test movsl (bad) jmp and pop lahf jge and mov insb pop repz xor cli loopne out mov pop int3 sbb data16 cmpsb std mov jnp out (bad) cmp dec aas jbe cmpsb ja inc xchg (bad) cli jne gs aas dec push or or dec ds mov pop add loopne fsubs test fldenv lahf jp lods mulb adc or aam sub mov cld mov loop out loope repnz push test or sub mov (bad) cmp insl mov push cmp repnz test pop push addr16 es jno cwtl add out faddp pop pop sub enter sbb or cmpsl jb cmpsb aam sbb add daa pop xor fcom call fxch fwait push dec adc test jne into inc fisubl test inc inc cltd xlat shrl jne add daa pusha add insl popa push push push inc dec mov cmp mov jecxz adc rcrl jne sub mov jge movsl cmp jne scas lcall fnstsw repnz mov fsubrs hlt popf fs mov lret mov enter test loop mov or pop xchg push rcr jo (bad) stc cmpb repnz lock mov int xchg jns rcrb mov adc and out mov call xor pop lock or mov sub stc pop in in and ss outsb jge xchg int3 sub lods sahf push xorb aad inc mov mov out xor xchg dec lret fmuls xchg ljmp fmuls inc inc in (bad) stc and mov jl jp adc (bad) xor push xor jl add jle ret cwtl pop fisttp out add xor push add imull outsl call mov or inc adc xchg mov pop dec inc lret aas add ss sub insl add fs repz inc or push clc sbbl adc bound dec sbb xchg scas test popf aad push jg pop jecxz jl test mov jl mov ret xor out in sbb mov (bad) dec xchg test sti sub das out sbb push cmpb iret or mov in data16 dec mov sbb add movsb xchg out negl xor mov shl xchg jb ffree inc inc mov inc push rorl fwait mov and test jno mov arpl and and jnp (bad) cmc aam or dec dec push cmp adc jae lahf int xor aaa mov pop add sub fwait sub fcomip addr16 inc jne movsl movsl fs xor std popf jbe rcr fidiv mov mov push mov jmp jae and add cwtl and repz lods pop adc dec insl xchg cltd std mov icebp mov (bad) nop xchg (bad) mov add mov pop and cltd insl ret push inc cli push and mov dec mov mov jg jmp daa and jae leave pop pusha pop call mov mov push mov aad lahf cltd jl push mov pushf push js loop jl or dec call push lods fdiv aas ljmp cmp dec pop pop xchg xchg out cs push cld fistpl add fisttp das cmp mov add sub jae mov insb out testb pop push lds xchg test add pop dec push int3 ficom or pop push lods mov mov fwait push cmp iret hlt push (bad) mov insl repnz fsts es pop push xor ljmp inc (bad) jb or cmpsl arpl push jno ffree sar cmp negb mov data16 cmpsl inc cli (bad) and cmp cmp mov mov adc add xchg mov fstp cmp adc jb stos xor test nop into mov lock pushf movsb pop out ret (bad) sbb sub inc dec xor inc outsl push jns dec push imul xchg orl push xchg test push fistp sbb bound xor mov adc mov rcr mov shlb test mov push mov test js push cmp imul mov mov (bad) aam dec lods fcoml xchg push pushf sub daa mov lock cmc (bad) or rol push imul pop cwtl (bad) mov push inc (bad) jns jne jmp out sbb test clc push jo xor and imulb push push mov jmp in lods push mov imull imul cmp inc jg and lods cmpsl mov out lahf call js jnp aas fidiv sub dec in pop adcl in sahf cmc movsl decb push (bad) push mov stos sub add fbld jg xor icebp xchg cmpsl (bad) jb lods cs ret inc (bad) push mov and sbb nop subb dec dec scas in mov or pop push outsb inc jl adc mov dec mov cli in in pop dec scas inc test ret (bad) jne aad add mov sarl fidivr mov fnstenv pop xchg add add jl enter aad cltd lcall gs ficoml mov sarl (bad) cmp lcall or or movsl pushf pop sbb test aas or pop daa adc cmp and and insl pop gs mov push inc xchg adc lods aaa shrb mov fcmovnu adc sbb add inc cs je (bad) jb fadd hlt cmp movsb js ja into push push test cmpsl pushf push in shll sbb push dec popa test mov ret mov je call popa xchg aaa cmp and xor sti pop inc int sub lods inc scas cmpsl hlt xlat data16 repz pop jae adc inc mov (bad) cmp or (bad) mov aaa enter xor inc dec sub fnstenv js in sbb push loope enter jge mov xchg adc pop cs jbe jno clc sub cmp sti sarl lock (bad) sarl cld adc jnp xchg push (bad) in fistl test (bad) fistpll int3 stc movsl push jb (bad) mov cmpsb repz and sbb enter inc outsl popa or sbb sub lods xchg icebp sub jle ret add leave inc testb into xchg cwtl jo into aam andb int push ja add xchg cld repz sub inc (bad) ljmp ret push adc loop addr16 popf jo outsb ja mov popl and rorb pop hlt imul (bad) dec xchg jne sahf mov lods cmp rcrl dec jg add dec fstpl mov inc lahf sti and and cltd rolb scas cmp jno mov icebp and jge aam fmull mov jo mov inc idiv inc in call rcr pop lea jle jmp jbe movsl popa pop cmc out aam sbb mov gs adc inc mov cmpsb scas stos stos icebp ss pop icebp ds pop adc dec push push cmpsl mov lea and xchg cmp push pop and scas sarl dec (bad) dec adc repnz adcl adc xchg repz (bad) push push test or daa lcall pop cwtl lock movsb cmp dec js mov insb add fs rcr xchg push inc andl stos leave (bad) jns xchg dec push push dec mov lods mov jmp xor pop fninit sbb js inc sub (bad) in ret mov pop sub repnz sbb das (bad) fildll out cltd cmp (bad) div sub mov ror dec icebp jb cmp push pop adc xchg mov push xor arpl outsl mov and test jne jno jbe adc jb pushf rorl std cld jo mov aaa jge inc xchg dec add insl faddl xchg scas add mov (bad) (bad) lret cs push in cmpb jno aam xlat imul pop movl out idivl enter rorb cwtl loop int jae jmp sub xor mov outsl jl jmp fcomip push sub jb mov pop bound add mov ljmp add dec popf xchg cmp aaa rorl or rol fldenv dec mov popf cmp push mov mov mov pusha ficomp notb pusha add jb dec imul test dec out mov out xchg xchg enter add mov test sub fidivl imul sti mov xchg (bad) icebp rcrb xchg pop mov pop cmp je pop daa lret fimull cmpsl out push negl mov inc inc pop lods (bad) xor fdivrs lods pop movsb adc out sbb aam (bad) in test xor cs push sarl lahf pop in ret loopne pop loopne imul dec out out stos push jae lret add insl (bad) push mov ret sbb fldenv (bad) aas scas jp dec std lret fsubr inc enter dec outsl loope or push sbb mov loopne ja mov push fdivrl sti mov sahf fs rorl mov or dec push push mov adc fisub pop jno stos lret out push ds or fdivrp mov mov scas mov fisubr aam sub leave mov xor push flds orl ds pop stos adc mov xchg icebp add clc fimul hlt sub jb mov lcall test xor idivl div cli mov mov shlb das or ljmp aaa and mov bound cmp mov icebp daa jne popf and je lcall jne mov mov pop or subb sahf fistl call push add cwtl push rep andb xchg dec in or xchg mov mov pop jecxz popa test mov (bad) (bad) dec xchg push jmp stos ret js mov add cmp inc adc jmp je cmp mov int3 imul jge inc push xchg test sbb xchg mov jecxz enter sar lret xchg and fldt arpl (bad) nop or rcll mov push inc add jnp test mov xchg jmpw mov push mov (bad) mov call inc xor xchg int3 out dec and pop cli sbb jbe fstpt clc shl (bad) loope lcall mov mov mov sti or lds inc ljmp enter enter hlt sahf push rcl ficompl cs fldl pop lea int popf or aaa imul cmp clc leave or nop mov dec and ljmp pusha xchg sub outsl in in xchg jbe cmpl (bad) (bad) cmpsl mov adc lret clc pop pop daa int3 aaa xor mov mov push jg jo ret (bad) ss add rorb mov sbb psrlq fs push insb jge ss sarl xchg or mov mov test mov mov shrb lcall push xor dec jb cmp pusha jl in push cmpsl sahf rep popa jmp daa mov mov pop test jmp xchg mov ja and ret pop enter aas and (bad) jl xchg mov push and adc inc xor int3 stos mov rorb cmp rclb popa pop dec lret push xchg (bad) aad inc mov sbb pusha inc (bad) cmp aam (bad) jge jmp dec add xor outsb fdivrl popa and ret cmp or imul push jae pop cmp inc sub pop ret mov lret fstpl sbb adc inc jp push or fadd and pop dec push or nop ret dec adc outsb mov adc adc cmp mov fcomp dec xlat aaa adc outsb inc pop inc mov js pop jns iret or adc mov mov sub push test pusha xchg testl rol stos mov push hlt ror arpl movsl ds or (bad) adc pop scas call sbbb out mov pop mov ds adc loop in inc push mov xchg or or (bad) fcoml loop icebp cmp (bad) pop xchg xchg fild rorl in mov adc pop pop jne addr16 dec mov (bad) xor push imul lds dec popf adc lock mov push lods fidiv pop mov jle das fist outsb rcl stos mov popa fidiv test jns dec pushf and loope (bad) dec in mov pushf das and shlb pop in jg xchg xchg xchg fbld sbb pop adc add add sub int arpl gs mov xchg gs dec cmc push lahf add imul (bad) jmp aaa pop add insl insl scas cmp fdivrs add test inc scas xor out jle int xchg push inc or cmp inc data16 add or xchg or sti and pusha rclb sub adc insb mov scas test rcr xchg (bad) xor int ret pushf or jmp mov add xor in aam addl mov cld pop xchg adc cmp lds in xor jmp add pushf loope or or cs stos test mov push jns clc scas aad inc gs jns xchg inc int mov jnp mov daa in push dec lcall xchg stos jne mov inc xchg dec stos pop mov ja mov hlt scas lret push xchg adc daa pusha pop xor pop fnstenv jne sub arpl loope hlt pushf jge sbb sti push xchg stos mov adc add inc and add repz xchg rclb jnp mov sbb repz pushf icebp popa dec stos fwait mov pop rorl and leave jo movsl aam mov dec pop aaa fsts dec inc cmp fs fstpl sti ficoml add mov push call lods movsl movsb rol push or sbb mov (bad) mov (bad) in push mov ss aad ret and adc in sahf loop lret mov xchg test movsl pop fdivl mov xor mov lahf movsb mov sub jb dec repnz pop psrlq dec scas mov sub xchg fldt push pop sub ja pop push cli mov push loopne lcall popl mov mov imul mov sub push je cmp orb notb sti (bad) inc pop fbstp es ret mov xchg mov je ds dec pusha shr inc popf stos mov cmp pop xor jg fisttp lods sub jmp popa cli dec push mov sti sarb (bad) movsl mov fwait arpl mov lret (bad) xlat mov imul notb jbe mov jg es mov and cs lds pop mov dec (bad) popf sbb jecxz mov pop sarb dec outsb aad lret push lret (bad) adc sbbb (bad) mov and orb xchg jp das sub mov jmp jne sbb negl sbb xchg sbb jmp xchg popa aam xchg push or inc push hlt cmc in jo inc je fdivrs in dec or fnstenv int jmp add insl pushl (bad) fcmovb mov jns (bad) jle jl leave and (bad) int test cmp xchg xchg (bad) sbb (bad) xor sarb repnz dec call nop inc popa xor push jnp repz or jp in (bad) mov int (bad) (bad) ljmp pop sub sbb sbb push pop outsl (bad) je mov aas pop mov sbb mov push lods jecxz xchg lods es jne enter xor lcall not fidivrl int add xchg pop orl jb imul push sbb stos add dec inc scas xchg mov mov add add fildl adc out dec out outsb or (bad) jne fistpl addr16 popf adc adc adc and test inc test pop mov cmp loop cmc add loop mov imull xor fbld lods or roll or in adc adc jb cli mov inc xchg sub mov mov add call mov add pop imul loop adc cmp in jne outsl sahf call ja xchg adc mov (bad) mov mov scas test push xor icebp add mov cmp jg jmp fisubr mov pop ds es jle push mov test lahf push sahf nop mov mov or outsb addr16 xlat icebp add imul jo and jae push dec push jne ret call das add cmpsb or push xchg gs mov rcrl jge stos test xlat jb adc inc data16 xchg dec insb sahf dec and jmp test jg and xor inc jmp or jno xor push adc jle aam jb mov cmpsl jg add pop (bad) imul imul sub push or mov aad adc notb cmpsb add (bad) ss (bad) sbb pop mov pop loope fsts and daa fcmove cmpsl xor fs out into mov jmp dec das dec (bad) lret jecxz pop mov mov mov pop (bad) stc je in dec sub ja mov sbb out bound dec push outsb pop ljmp sub adc out mov sbb out push inc xor or mov xchg in fwait sahf in push fwait add cli mov jnp push cltd xchg bound mov xlat or mov xchg mov rorb inc inc adc pop mov cmp mov mov xchg les cmp pop pop xchg mov or dec fmul mov xchg xchg cmp mov psubb push jmp dec pop iret mov mov xor mov cmp inc cmp xor fbstp dec orb inc push fsubp xchg push mov push mov xchg sub dec dec xchg push sahf mov cmp add dec xor jecxz ret sti out jge lds ja jp cli out shrl cmp mov cld xchg push push cmp add add mov mov xchg pop cmp pusha icebp scas mov aas in pop (bad) sub lds pop sub imul xchg addl cld inc (bad) notb mulb out push pop fwait lock push movsl jnp sti aam bnd pop int3 sub pop lock cmp mov push test sub pop mov das mov dec xchg ret cmc dec mov pusha sarb orb into imul push jae sub lcall scas cs cmpsl sub dec imul dec jbe stos push and seto xchg jbe inc xchg popf adc mov test cmpsl sbb cltd mov jae (bad) outsb popa outsl xor repnz push gs mov mov dec ljmp mov and cmp sbb pop fnop mov pop sbb out jge fiadd adc jnp incl dec inc gs mov pop (bad) mov fstl loopne and insb addr16 daa aad imul inc (bad) and jmp inc shll mov xor cwtl mov push push pop jb in jne xlat cli cltd outsb xor mov test jge les jmp paddd and ja decl cmp das cmp int sahf sbb pop xlat in sbb sbb cmc dec jns push das test inc mov movsl aaa rcrb mov sti pop cmp or insb dec movsl (bad) insb sub mov sub adcb out push mov cmp mov xlat rcrb pop add out sub mov fmul lock scas loopne fisttpll in rorl ss mov mov outsl fcompl push outsb mov adc mov fldenv mov inc sbb lods aad cld or cmpps mov sub pop fistp push mov mov mov in cmp insl push push insb inc add cmp sbbl (bad) jmp icebp pop fisubrl rorb mov sbb sbb mov jno int3 fs pop aam jb add fwait mov xor cwtl gs adc lret int jne mov icebp push ds jge mov cltd test out out call out hlt stos aas dec xorb sbb dec push mov and dec cltd lods jle iret loope cmpsl mov xor add jbe mov iret (bad) jecxz lods push mov sub xor xchg jnp lods sub popa jg fisub mov aam cli mov inc dec movsl enter add push sahf ja push inc icebp lea (bad) pop sub loope enter lret adc xchg ja cmpsb imul jp jg and cmp shll js fldenv popa push mov cli push andl mov cli mov fildll xchg pop mov xor das out sbb gs push addl sbb xchg lea or sbb and fildl das add lods mov dec cmpsl fs shrb jne rcr inc repnz gs sub and outsl test xchg fistpl jmp cmp pop add inc mov in sahf xchg pop xchg push inc xchg test add movsl mov icebp repz xor hlt popf cmp sbb lret jge movsb loopne dec push mov shrb (bad) aas lret ljmp dec in and push je nop mov sub jge cmp and test adc jp add or nop add cmp jns mov mov or bnd iret cld sub cltd dec cmp cmpsl sub jno and cmp lret pop loop mov mov push and ja arpl or or xor fsubrs mov push scas jae gs mov jmp cmp loope sub add rcl xlat cmp lods mov mov fstl cmp xchg scas and movsl lcall cmp mov gs loop ret jp je cmp sub dec mov sbb nop jb (bad) aad xor mov outsl xlat scas hlt fdiv xchg fwait add fucomi rol mov insb pop and mov data16 dec mov dec js or (bad) test pusha sbb ficom mov cltd shll push pop and mov popa sar xor mov or inc sub pop lcall rcll int3 xchg xchg cmp push mov jl fnop cmovge lds and movsl test push mov rorb popa dec push dec push push add mov aas fnstcw lcall and addr16 add sti pop mov dec add in lds loope sub (bad) and scas mov cmp cmpsb stos lret cmp xchg lock or pop mov dec mov inc fs sub pop dec lcall inc (bad) push mov scas add adc in mov (bad) or (bad) jb sub pop fisttp xchg in inc (bad) dec pop xor cld stos mov jae into pusha xchg or scas std (bad) cmp imul xlat inc cld and out sbb push cmpsb pop sbb cmpsl pop mov (bad) mov data16 lods sub push mov push push jnp insw imull xchg ret movsb mov inc add sahf insb jb jbe and std xchg jae mov jns xchg sub call push push cs in stc fnstcw ja icebp pop xchg dec push add stos sbb inc add pop cmp sti push push sub or dec (bad) xor or jmp lcall xchg dec in pusha insb lea repnz pop pop in sub ds and test xor push pop jnp rorb push xchg pop fwait js or jno enter shl sub push adc repz ljmp insl sub or mov or xchg lcall gs sbb and pusha jmp xchg dec js sub out in popa pop cmpsl xchg pop push jle cmp (bad) jae int3 cmp inc dec idiv test call inc aas outsb or pop pop dec mov jp jnp ss mov sub adc push sub adc and aaa inc jl mov lock (bad) sahf inc dec and jae and cwtl loopne pop (bad) cmp pop mov shlb add insl outsb push cltd dec sbb adc inc jecxz push (bad) js jl pop je mov shlb xor fildll fistp movsl rorb mov dec cwtl test pop mov (bad) jno loopne adc cwtl ljmp pop mov cmp xor add notb push aam clc add cmpsl xor (bad) (bad) mov out sahf jnp cmp add out adc jecxz test addr16 dec add xchg clc subb pop daa out or cmp pop xchg js,pt out mov jno pop divb pop jae (bad) mov addl aaa (bad) mov (bad) jbe push dec clc aaa imul xor dec loope mov cmp pop sub xchg mov xchg jmp cmp mov es mov cmp mov (bad) mov xor les (bad) push fadds jmp jle push pusha stos cmpsl inc add scas pop in movsb jmp scas cld scas rolb movsl cmc sbb jne pcmpeqw adc in imul repnz or xchg imul adc adc cmp adc push fistl pop or (bad) test repnz dec popf fbstp mov imul outsl sub add movsl and sbb js xchg cmpsl mov lret mov xor imul add mov jno gs and push jg dec push mov push int test aam fs mov frstor and ljmp xchg leave xchg clc adc inc sbb adc std inc cwtl test sub out jg sub and jno rcrb outsl addr16 cmp xchg outsb xor inc imul insl and mov mov fimul add pop push dec pop xchg popf jmp cli stos push sub loopne ljmp out movsl or es aas fistpll inc add jb jmp pop js add cmp (bad) jmp add dec mov or ret scas repz xor scas scas dec sub xchg or iret pop or xchg sti lcall push adc push loopne fildl and adc pop and xor sub jb lods mov div int3 repnz jg mov cmp and or icebp icebp pop out push addr16 push pop lcall xchg pop jmp iret add add pop mov out adc lock call fistpll clc icebp (bad) and mov scas ss fstl xor xlat lods lds push inc cmp movsl lret test jns mov jno mov jle lret pop pop cmpsl cmpsl aaa rcl fcmovbe ret mov pop movsl sub push jae mov mov (bad) iret fucomp jbe add out jnp test inc lret shlb mov decl fisubrl imul sub jnp sub cmp mov test daa icebp hlt jmp add sub push adc je adc or xor jmp dec cmpsb jae xchg jo jecxz pop fsts gs sbb add xchg mov push test mov jns imulb ret std xchg dec fcompl sub nop cmpsl sti sub adc push and lock (bad) sub cmp lock es dec dec pop js (bad) pop add push mov xchg and mov hlt mov and xor movsb fnstenv lea xchg (bad) lret xor pop repnz sbb out mov das sbb les sahf fs rorl imul es loope push mov out out or cs or dec fst aas push loop leave inc ljmp and fistpl mov aad fildll jp cmp loope popa icebp movsb outsl jp inc sahf scas mov test cmp mov mov cwtl cmpsb mov xor xlat int3 mov in pop andw jbe mov (bad) (bad) cs lahf sbb ficom inc inc pusha test push sub sub add xchg mov mov cmc lock fldt loopne xchg add lods push outsb cld scas pop or addl inc mov test xchg outsb xor nop xchg adc mov xchg leave xchg xchg adc dec sub push leave cltd dec pushf hlt mov (bad) dec js sti and pushl cs adc cmc add aad test mov jne lret (bad) movsl push xchg out pop loope loopne dec (bad) cmp out adc add cmp add iret loope mov daa push outsb dec xchg (bad) jmp sub jns adc cmp cwtl mov lret mov cmp mov push sbb dec push mov cwtl clc repnz push out mov xchg lea mov mov cltd orl ja out mov movsl push mov xchg jge inc cltd pop out cli daa in sahf out mov ret dec jae and test jmp in xchg add stos mov dec cwtl jne outsb or xchg sahf sub push cmc mov mov xorl add loope repnz add shl out cmc gs into jnp adc xor addr16 push mov mov mov nop xor and cmp xor jo adc call cli int insl std xchg adc adc jp jae fidivrl or (bad) je jno pop jb lahf mov fidivrl iret ja xchg or das js int3 das jbe cmp lea jb xchg xlat stos xchg fstps xchg pop insb pushf inc lods fadd test mov movsb xchg jecxz and jl sub adcl xchg cmpsl jne test ja lods imul and getsec data16 jae push cs leave mov xchg jp mov mov clc aas push sbb lock jbe std pop xchg dec inc (bad) (bad) jnp in sbb mov daa push es rcrb xchg stos insl pop mov jbe int3 pop mov dec cld hlt out in ljmp std ja sub in sbb aaa lret adc cmp jo xor adc or push pop mov movsb fisub mov fcoms xor sbb das je xchg mov pop xchg add imul xlat leave stc movsl shrb mov push dec mov bnd push es lods sbb cmp ja negb lea and fnop and xchg cmp sub mov xchg icebp ss xchg xor or jp inc and sahf sbb outsl mov and xor sahf mov popl movsb sarb repz mov mov dec fldcw jns call sbb test jl cmp imul sub into xor xlat adc std (bad) pmullw test cs ja cmpsb lret aad rcll inc repz lcall stos fnstsw nop mov sub push aas out mov pushf fildll je sub push ret dec and icebp gs js push xchg fwait movsl xchg outsb mov inc mov mov (bad) ds mov mov xor pushf loopne or sbb xor jno push push sbb nop mov and roll jecxz push pusha (bad) cld xchg test xor or out inc roll mov fs mov gs pop cs insb jmp jb ret fwait in jnp add pusha add xchg adc sbb dec loope xchg fdivr and cld add sbb jne inc test xchg mov adc adc and (bad) shrl loop lods mov ss out in enter lea mov ficompl mov cwtl add cmpsl cmpsl pop cmp jne add mov call push test adc (bad) or das jecxz push push sahf pop cltd pusha push (bad) pop pop jb mov incb xchg lahf movsl add pop sub fmull mov scas mov jne stos mov (bad) icebp dec (bad) dec dec bound cmp imul jmp inc cmp data16 call sub popf or pop jle inc iret push mull jne cmpsl inc outsl test or mov xchg das je mov vpmaddwd or lret in mov mov sub push push jecxz imul xchg xor xchg pop jle out loope inc call fist sub sbb jmp inc in xor in pop push push push push stos scas sbb push test jecxz pop lock sub cmpsl daa add shrl pop repnz jbe clc jg aas cmpsl sbb push stos xor data16 push jl fs jns add cwtl loopne out nop sti insl (bad) xor xor cwtl cmpsb (bad) out faddl pop cltd inc in sbb (bad) jne pop push lock rolb mov iret fstps popa (bad) and and mov dec shr aam adc mov inc xor xchg les gs sub inc dec jge mov (bad) bnd dec xor das jbe push cwtl outsl repnz pop clc or lds mov dec and adc imul ret out mov inc xchg inc aas aas pop xor sub or jns add cld out rolb push xor sub jnp or stc jbe mov adc xchg jae sbb push test mov sub addr16 insl jbe in pop scas js fldcw xlat push movsl sarb mulb in into jp mov (bad) popa or xchg cmp arpl jg xchg sahf popf dec (bad) fs sbb jno mov push or push mov cmp xchg push push and xor push daa (bad) mov out popl adc and mov insb xchg mov hlt and dec push xor jge and (bad) js scas pop or mov lods sub insl jmp or jg cmp pop sbb mov push jl cwtl pushf push mov insl push fdiv and cltd mov outsl leave int lods mov inc add bound inc mov cmc mov xchg dec dec pop jns aaa mov lea push xor or fisttp push lahf mov bound aam lods cld and cli cmp inc ja jbe test fsubr jg aam dec xor scas ja shl (bad) add jne sbb or mov xchg lret jbe in repnz cwtl mov pusha ds sub sub cmp add push scas mov fadds jo xchg inc dec mov lods jge mov mov mov sahf jecxz aam cmp xchg or dec adc fiaddl popl lods mov add fnstenv (bad) (bad) std addr16 repnz pop sub add mov mov dec roll mov insb lods into and rorb xor mov xlat (bad) sbb push bound xorb in push mov mov ljmp sbb xor xchg arpl xchg (bad) dec push (bad) and pusha add lret les push movsl or rclb mov cmc ret out push rol mov push icebp adc cmp repnz push ss and pop sahf cwtl stc cwtl adcl pop mov or lea bnd je sbb addr16 std ja and jbe mov jl jp addl jmp and add out xor je mov frstor sub test xchg sbb or fcmovu shrb (bad) call ljmp ss push xchg out imul cs push popa cmp sahf jo or dec xchg (bad) mulb loopne pusha adc xorb mov pop or pop mov xchg and adc xor xchg sbb jne sahf inc je test gs test jle dec test rclb and sbb mov stc xchg lahf cmpb push inc push or xchg xchg maxps test cmc adc cmp adc xlat jecxz push mov arpl fdivl in pop insb (bad) jbe jnp (bad) mov das inc lock in fiaddl ja push pop adc aas or xchg push mov xor out dec mov fisttpll rorl js iret push in loopne test popa pop jne pop rclb pop in cs sbb daa fimul movsb fcompl inc rolb cmp cmp cli aas repz out sbb push cmp push inc mov xchg popa (bad) mov lea inc pop and in mov lds lods cs js iret cmp pop leave fisttpl fcmovb mov or add mov dec mov jnp push popf add jecxz ficom pop (bad) mov ret call outsl adc cmpsl or fisttpll sub das std sub dec adc mov into jnp pop jmp mov mov mov mov sub pop sub fisttp push lds lcall cmp and pop mov mov cli daa mov sub and xchg push jo mov ja,pn mov and scas or jmp mov push sbb xor mov ds jne addr16 inc cmp cmp mov movsl xchg jb leave xor sarb add mov xchg push jge jge test test dec ficom xor inc sbbw xor push shrb in pop push scas ret test (bad) not jno pop jb xchg xor push imul movsb scas sahf jl stc cmp div js cmp push dec (bad) dec dec add sbb jmp fistp in es jbe cltd je mov sub cmpsb dec pushf sbbl xchg xor addl test imul (bad) int3 fucom mov in xor daa dec pusha aad push inc push (bad) das test orl jecxz mov ds std iret jno stc stos jge fbstp cmc lret pop scas mov aaa in fadd sbb popa jl adc ret test push leave cmp pop jl out mov jno jg rcr or cld call jecxz and add je insb mov lds scas inc xchg loopne mov lcall jge sahf fs fldt xchg xlat jl sub stc jo xchg xchg adc fldl inc jb add incb cmc or jbe mov dec or xchg mov push cmp mov int movsb dec mov sbb sub add aaa adc sub into enter sub cwtl xchg loope addl push (bad) mov sbb mov icebp mov pop add (bad) and and repz gs mov pop cs pop push mov loope in ret mov aaa fstpl (bad) test push std and lea sbb jecxz jg,pt aaa pop in dec push fldenv pushf ljmp jo out dec xchg icebp leavew or int les aaa in roll sub lock dec test mov test icebp cmp loopne cmp imul in xorl push mov cmp sahf sahf scas cmp jns mov fisubrl dec dec loope mov or stc sbb (bad) jbe sarb hlt inc xor jno loop sub stc dec push stos (bad) loop hlt cwtl pop cmpb push pop mov mov xchg call rolb push push faddl or decl add (bad) jecxz aad adc mov arpl jl std iret in xor or aas jb cmpsl jg jge push ret repz jno repnz test cwtl cmpsb jge cwtl xchg adc aad in adc or (bad) out jno jge nop fisubr imul sbb push jmp sbb ss movsb xchg pop clc or cmp clc lds mov rcll (bad) idivb testl mov mov sbb test (bad) jg fidivl shll sub stc fbld push sbb jle jg fistpll and mov mov rorb call jno dec mov loopne imul leave fist or jne repz jne pop jecxz rcll mov test fcmovbe xlat shrw pushf scas add mov mov mov (bad) iret jae push jno,pt out scas mov gs inc and shl in ret iret mov out je adc pop loopne (bad) fistpl push inc cmp add xchg mov les clc das arpl xchg or xchg jge repz and add cmpsl ds inc inc adc mov jnp loopne xchg cmp andl stos push xor jl fisubrl (bad) cmp mov or mov ret xor bound xchg pop inc cmp push cmpsl dec add prefetch xor test ficompl cmpsb push sub cmc xchg into pop lret push rclb loope mov rol inc or inc (bad) jns ja sti jp xchg pop add mov push xor xchg dec notl (bad) cwtl jno xor push les test pop les mov mov cs add test cwtl push xchg push lea idiv cmpsl lds mov movsb rcll pcmpeqw jno test ror dec insb cs stos fnstenv or xchg repz movsl mov ja push jle dec mov mov sub bound pop ljmp cltd das and cmp scas adc push cmp into in xchg push cmp push bound pop or das add pop dec mov or add xchg mov in push cmp cmpb orb imul jmp test pop repnz mov shrl insl dec lahf sbb adc mov roll lock xchg mov or aas inc repz sti shrl stos push and call mulb push test nop mov xchg jle jne lret dec dec dec lock push stos xor out mov mov stos and idivb sub adc cmp adc xchg leave mov (bad) sbb jl mov pop je adc iret mov mov jae fstp xchg add arpl aam std cmp lods lcall lahf mov (bad) out adc sbb sub rolb mov lods inc dec sbb mov adc idiv adc sub fsubrl adc insl jno cltd mov push pop xchg pop ja xchg pop int3 or mov sub push mov stos xor aam sub push hlt push imul orl bound cmp lock jmp enter cmp pusha insb push mov inc jl daa sbb dec mov repz stos add jp dec mov cltd sbb mov sub sar daa jle shlb xor stc ljmp mov aas mov lahf cmp ja xor add adc mov clc lret mov decl push addl xchg jl pop lds dec or (bad) mov cltd insl inc decb jb cs mov push jp loop aad iret xchg loop mov inc lea in idivb test insl aam shrl xchg and test inc pusha daa (bad) inc mov mov jnp mov in jno adc jp pop (bad) idivb push adcl roll jmp ret cmp daa xor ret xor mov (bad) lret sti ljmp mov or rorl movsl mov aam lods (bad) dec out sti stc pop leave pop xor fcoml nop jns aad hlt test xlat mov dec out ret jb sbb xchg mov jbe adc mov lcall mov mov ds je (bad) dec and and je insl jns pop outsb xchg push ljmp rclb fwait popa mov out and jo dec push ja test mov push mov stos pusha jecxz fimul dec cmpsb sarl adc sub hlt push (bad) jns jne and add inc cmpsb push cmp mov (bad) iret jg inc out cltd adc sbb push push (bad) mov fidivr xchg mov lock mov push insl aas sahf test cmp push or pop into iret clc loopne or mov test add cmc or lret pop nop push nop xchg xor lret (bad) je jg and nop ffreep mov mov sbb movsb inc insb and xor imul push push iret das lahf dec mov js cli or xchg movsl cmp push xor sbb jg push jns cli (bad) fcomps adc test adc and daa dec sub mov rcrl sub hlt inc push xchg cmp adc jge lahf jnp pop into pop mov mov lcall outsb dec jp xchg add xchg fsts push push rolb jle cmp test xor lret jecxz testl nop lcall jno lods add (bad) xlat mov es xor test dec dec push xchg dec cltd pop (bad) (bad) (bad) adc push push pop je andb and mov mov and test push scas ja cld mov int popa mov fstps lcall mov insb inc stos movsb or jecxz mov and cmpsl test fs xor movl clc cmp sub lds dec jnp adc cli pushf sub sti fmul pop push mov jbe xchg xchg fwait add lods adc push add mov addr16 (bad) cmp int dec mov sub dec mov out jae int3 mov cmp lret inc and insl dec adc adc fsubl jecxz lret and in loope mov jo,pn (bad) mov jno,pn insb or xor ljmp pop lods pop pop mov lds pcmpeqb (bad) in popa stos push adc lcall xchg or mov pop mov push leave stc adc hlt mov sti adc in pop add jge dec lock pop ja leave mov jnp bswap scas fisttpll lret cmc pcmpgtd mov jnp lcall lock scas push ret test xchg mov xor rclb arpl cmp pushf aam push rolb jmp mov std les mov sti hlt das or lods mov aas lods stc push dec dec jg adc lcall mov das and xchg xor out sbb mov sahf xchg cltd sbb jae push add pop or in add pop mov loopne push pop inc imul outsl dec lods xchg cld sub jae clc es insb in push call adc aad adc outsb adc jno adc cmp repnz cmp jns repz cmc push out mov fsub xor xor mov icebp stos push outsl cmp pop mov cld mov sub (bad) js icebp daa cmp rorb ret xor test data16 stos dec xor ret xchg gs sub push loope call imul fwait mov cmp inc repnz adc xchg out fcmovnb mov cmp lods jb inc inc mov lcall jne imul jp cmp ret stos or ret mov push add mov jge add lods sub xchg dec xchg sub test cltd out pop push pop mov lds push divb cli fdivrl les mov enter push cmp inc out mov orb adc xchg scas jae icebp mov and orl mov rol inc enter mov or pop addr16 rcrl lcall stc mov xor mov insb lock sahf out scas stos orb scas popf aad push adcb fs aaa push sub lcall inc cs gs (bad) jo xor movups cld dec mov push and push jnp sbb fs loopne not stos mov adc dec push mov out push or dec dec (bad) sbb push mov sbb pop dec dec inc or xor xchg test mull test jb lahf jbe add ss stc push or jno popf mov negb imul ss ficom lcall sub rorb in dec std outsl fwait rol insl sbb mov shlb outsb push jbe fisttpl lcall cmpsl divb mov (bad) push into jl repz mov mov mov ficompl pusha pop les push xor loop scas pop aaa mov aad cmp lock sbbl fstpl inc push sub call cmp and ds insl call out cld (bad) das js aad nop ror jle mov jl imul pop push inc ds sub enter pop mov and or (bad) dec push lcall (bad) mov lds movsb test les xchg ss lahf test xchg sbb mov out out cmpsl insl cmp xchg jge and std jecxz mov jae fs cli out xchg rcrb xchg outsb sbb lods ljmp push sti xorl pushf (bad) and loop notb lods popf scas js pop inc icebp cmp je pop jnp mov js orb jle mov in lods pop push jp adc inc add scas sbb or (bad) out iret and mov js pop mov addr16 or or movsl xchg lods xor int3 jge in lods adc sub enter add mov lcall sub xlat icebp mov xchg imul addb fsubrs movsb mov test mov push mov jp out dec aas vmovntpd or or xor loope xchg jp pusha xor push (bad) push jmp es pusha mov and or mov inc dec dec mov roll cmp xchg xchg call js movsl adc mov push (bad) test rol faddp pop mov clc add cwtl cs (bad) loope popa addr16 emms iret loope rolb sbb sub mov mov imul cmpsl and or sti icebp dec add imul add dec loope ss sbb xor fwait ret loop xchg outsl sub and repz outsl pop insb xchg les popf arpl jbe les xor rcll test inc fdivr jmp fs sub stc test movsl pop mov stc popa pop add lds les into mov enter inc lock adc ds pop popf repnz call and test lcall mov addr16 shrl mov xor push jb pop imul cmp cwtl push cmpsl push popf mov adc dec dec js cmp pop cmp sub shlb repz fsubrl js push push test imul shlb std ret daa adc scas xchg sub and lds das pop (bad) repnz sbb push xchg push ror jnp pop adc pop (bad) (bad) mov stos (bad) dec or fnsave mov jecxz cmp int3 mov out jnp fdivl or xor push sbb mov dec dec ja push jmp test mov mov xchg faddp push lea aas lret in fsts xor jo xor ficom or xchg or mov inc out jle stos dec jle jle cwtl lcall (bad) push xor stos push cmc movsl dec loop pop (bad) iret xchg in xor mul stos dec inc add shl xchg gs scas (bad) add xor cmp rorb vpshaw lds (bad) mov mov push mov cmp loopne fst add add gs xchg sub js mov in xchg fnop mull push inc mov push movsl into daa mov jmp sbb es dec inc in mov jae lods stos xchg in and fnop pushf mov imul xchg rorl jmp (bad) cli push xor pusha and mov ret fimull mov iret dec mov rorb or inc adc addr16 das sbb es or stos repz call push push adc icebp cltd push in repz popf xchg (bad) mov cmp pop jno test fldl push sbb enter or inc xor cmp gs mov jne cmp out mov iret cli sub (bad) jmp mov inc fstp inc mov adc xchg inc xchg aad pop bound lret sub xor lret fstpt insl (bad) out lret sub out xchg mov adc sbb (bad) std cmpsl push or dec inc push xchg pop push lods mov clc sbb jne in repnz push lcall enter insl adc jl scas mov pusha repz into stc jmp mov in clc inc repz sub cltd sbb arpl fmuls fistl mov out add stc mov sbb mov (bad) sti insl mov outsl (bad) movsl sti test xchg sbb xchg mov clc nop push mov mov or pop mov jmp dec sahf pop int3 mov in gs cli and push cmp aad push dec push add adc je cmpsl cmc outsl or stc shl adc les push jge xor sub lahf icebp lds insl ret xchg inc or xor mov xchg jecxz sbb aam in pop sbb push out (bad) mov repz sti lcall std xchg test adc scas cwtl fwait mov push adc cs inc pop xor jae sub mov mov or dec int3 xchg push mov mov loop jnp lock inc scas push in mov inc xchg or jmp out sarl test test fstpl xor xchg mov sahf sub cwtl nop (bad) and cmc cmp jp xchg repz push (bad) pop in divb mov sarl jb,pn mov cltd rcrb sbb pmaxsw scas adc mov mov pop xlat push lcall dec lods ss aaa mov es inc call leave in push mov fisubl fcomps lret cmp mov mov nop (bad) or imul pop aaa fnsave xchg and int3 js jge fs (bad) rcll xor aaa lret jge popa call dec add outsl lret es sbb jp push cmp stos xchg mov movsb mov hlt ja sub aam es xlat adc mov clc js push sbb dec inc cmp adc mov dec enter call cld lock dec dec pop mov loope cmp push mov repz decb inc jmp add loop clc inc int lea mov inc or push (bad) lds sub mov or sbb mov (bad) pop arpl pop push sbb popf imul out test pop mov dec and xor jle loopne sub ret outsl dec sbb shr fmull inc mov adc sbb frstor push call out mov pop jge in fs ret into ret pop insl adc add flds sub xor rorb (bad) inc jno inc into fldcw stc outsl mov jbe test fmull xchg dec repz ljmp cmpsl adc jg addr16 push and push sbb bound scas frstor jns inc mov mov repz push fsubrs call push inc shrl popa mov jne ljmp cmp fmul xchg and mov int push dec es dec test clc pop in inc mov mov jg or adc adc xlat push pop cli adc jmp jge es cmp loop push ror pop leave je mov outsl adc sub sbb std in (bad) xor and shl mov je push shrl fmull jle in arpl cmc add push loopne sbb cmp jl in and jo and hlt push pop mov popf jmp lods cmpsl test and dec idivb xor xchg inc sub cmc call shlb test sbb test inc xchg stos adc dec sbb (bad) lea movsl jmp cld mov pop sbb push ljmp mov push fildll sbb sbb or push xchg pop jae push jle fwait mov js jno dec sahf cmp notl aaa mov pop lds mov mov and rorb testb mov pop sub ss out or mov iret lds push push mov inc push in jp cmp adc into in jg xchg mov xor push aad mov cltd cmp or sbb (bad) sub jle adc cs rsm mov sbbl sub mov movsb outsb jno cmp push lret mov (bad) sti in (bad) xor loope xchg jno mov dec sub dec inc push cli xchg push sub (bad) push fcoms or xor dec fistp and out dec addl insb mov cwtl adc movsl mov pop mov add ret insb mov or movsl push xchg sbb jp fistpl cwtl jne add push loop in cmp ret push or data16 push sbb sub mov inc inc mov or ja fistp adc push xchg out and push pop push loopne (bad) mov inc cs in fdivl rclb pop pop sub xor test out shlb in (bad) icebp jl pop lret cmp push insl lret cmpsb mov ffreep call sbb movsl dec stos push mov fwait fs (bad) ja mov mov mov mov ljmp mov mov lds lods dec ss rcrb sub and mov dec test (bad) out sarb xor mov outsb jecxz jmp add (bad) sub inc push les cli add es xchg dec dec scas out mov test movsl stos push (bad) mov push lcall mov popa pop insl push and dec jp aam cmpsl daa clc xor mov aad int cwtl dec or popa xchg sbb mov sbb xchg adc (bad) dec push mov mov xchg sub inc imul dec lret fistpl mov lret nop mov and jp cmp (bad) out adcb push lahf mov cmp jo sub negl ds cli outsl (bad) cmp pop fsubl fiadd xchg outsb stos inc loopne jle inc mov or mov adc test mov sti cs sub cmp mov out xor cli sub xor push int movl fdiv in ficompl stos sub cmp adc cmp push inc sub cmpl shlb fidivr cmp add popf pop add push ss cli loope ret mov mov ljmp (bad) lods sub sbb mov popf push mov or inc popa inc repz fistpll mov or fimul aam ljmp jge add pop arpl pusha fwait repz xchg cwtl stc aam (bad) mov and or sbb add sub jge pop out xor out ret add jg bound popf (bad) pop push test jne enter gs mov cmp ret inc roll pop xor (bad) xor lcall push mov push fdivp cltd sbb cmp fldcw std imul add cmc mov and (bad) fmull add mov rcrb jmp push lock inc sbb mov cmp xor xchg pop aad pop lcall (bad) or fmull sbb jb shld ss inc dec les scas pop lock clc sbb cmp movsb xchg pop int3 scas and dec rclb dec inc (bad) in xchg xor stos xchg xor (bad) mov movsb movsl jo inc xor shlb pop imulb lods dec sti test push pop outsl test jl scas lods and or push xor jns inc inc sub rolb xchg add andl lret adc shr jo cmpsl outsl out push mov mov adc sub out jle pop pop mov add sub push cli lret adc push hlt add imul pop or sub jnp insb clc jge pop daa cwtl bound mov aas lea mov repnz test sarl rclb (bad) or xchg negb and lcall dec xchg dec test js and or jbe dec jno popf and lds xor js outsb imul (bad) xor inc mov (bad) aaa mov cmp es stos movd pusha (bad) mov les mov mov test push popa lods inc cvtps2pd mov arpl cltd hlt scas xchg sbb stos lods pop sub test jo sbb sarl scas mov jbe cmpsb mov pusha hlt data16 (bad) addr16 incl dec shll inc jp dec andl ds sbb icebp (bad) loopne or (bad) hlt into sbb ret loope or pop xchg push adc mov jns dec repz in sbb pop push ljmp test jmp (bad) jae push fwait sub adc mov andl add xor adc subl inc int3 movsl mov hlt out out sbb lods out push in aaa cmp loop mov negb jecxz enter (bad) xor jb sbb test inc (bad) aad mov leave shl (bad) aaa jae icebp xlat mov mov cmc fsubrs ljmp or jno jb arpl mov orl cmpsl inc adc mov ficom and fdivrs lahf or and push cmp dec pop mov or (bad) xor cwtl pushf cmpsl fwait and push xor push jnp dec xor adc clc inc mov (bad) shll xchg push lea lds sub insb sbb (bad) jnp add ret scas xchg lahf es sub xchg in test addl enter add dec add xor xchg lret sub sti cmpsl imul jnp push inc mov popa mov jo clc sahf or add mov add and (bad) dec jno jb movl push xor jmp loop nop or enter inc mov insl push mov ja push ja ds loope (bad) rcl xor xchg dec jb cmp pushl xchg pop pushf push add dec xor jns jp or lods into ja cmpsb inc mov cmpsb jo pop out clc jo mov cwtl mov pop push or pop xor arpl mov fs (bad) out dec jo data16 int3 sbbb (bad) xor test adc mov mov ret outsb test pop notb inc mov (bad) ss fsubrl lods insb cmp push shrl mov leave xchg lahf leave mov mov fisubl inc pop mov shrb stc push sbb xchg insl lahf inc cwtl popf mov xchg (bad) dec adc jb mov scas flds (bad) and iret push ret adc or push pop test dec pop lods pop outsl ljmp leave xchg pop adc xor xchg out js pop je fstl mov dec mov adcl lret sbb pop je in pop stos mov mov push jne push inc movsb or fcoms xchg jge or enter push aas or sbb pop inc lcall enter dec mov pop add mov lds outsl add cmp mov cmpsl jne divb int3 dec xor roll (bad) fldt test ja mov xor xchg lahf cmp and sub out mov push cwtl cs ds (bad) xor or fiaddl orl push mov punpckhwd lret aaa sub mov sub cmp adc push ds or mov dec or dec fs icebp xorl mov mov adc mov sbb mov out rorb dec ret xchg (bad) icebp popf mov mov jle fisttpl mov mov inc add mov mov mov jle xchg inc or mov leave in (bad) int iret push push pop in aas xchg push add inc mov stc (bad) (bad) imul inc pminub jae jg lcall js int mov (bad) and stc push cmp les mov notl sub div inc rcll lea dec adc mov lahf jo lcall (bad) inc jp mov jno jnp insl in sub fwait scas cmp mov xchg jne mov jbe pop adc std aas push mull addr16 (bad) repz and and test cmp aam cmp jl pop push out lahf ret mov pop xlat jmp lret cltd adc mov test (bad) add add movsb cmp (bad) jl test pop push fs pop movsb add lods inc jo adc jecxz idiv adc clc jp jg (bad) jl dec xchg mov or xor or lahf and shll mov cmp and or adc out outsl sub movsb inc mov repz pop mov imul or sbb cld sbb pop sub dec or (bad) loope mov xchg imul cmp xor adc inc xlat or cmpsb inc dec cmp dec sbb jno mov icebp cs je ret stc add push lea outsb lcall jge lret loop pop fwait mov pop rolb mov sarb loopne cmpsb (bad) mov rorl ret lahf adc pop cmp in cmp popf test or push dec push int imul pop adc mov xor dec popa sub fimull pop push mov inc mov adc clc nop outsl jae jecxz ljmp adc loope mov pushf add repz scas outsb sbb sahf xchg sarl stos cmpsb loop sti dec mov cmp push loope lods nop (bad) mov xchg ret arpl xchg push and mov clc add cmp cmpsl dec out out int and pop loopne mov enter push js rorb push add adc xchg cld cmpsb pop enter push xchg out push and and data16 data16 xor in fadd movsb sbb cmp clc cmp mov dec mov and movsb (bad) pop ds fs mov jp and sub jg jb jl mov idivb sbb ja mov sbb mov shrl (bad) pop jb pop pop test in mov insl pop dec adc inc gs push or xchg fistpl dec push push push or addl dec fmuls xchg sti loopne push cmpsl loope cmp fbld add mov add icebp cmp push jp mov cmp ret rclb and adc sbb mov cli subps xor aad push dec fdivrl stc lret rolb cmp xor pop push test xor out das inc out icebp lds sub and inc pop scas jle pop push jno fnstcw sbb mov mov inc xlat mov sbb push subb je sub iret jge fldl lds xlat popf repz aas push mov loopne neg fcomps xchg mov xchg cmp adc daa pop aas mul rcl leave push test jno lahf pop and stc mov lcall sbb out add or ds cmp and (bad) sub dec loopne aas hlt jp aad mov xchg aad aaa mov (bad) pop movlps fstps ds mov stos xchg loope call jle jle cltd scas call or fcmovnu push xchg nop loope push adc pop mov inc jnp inc push scas lret lods lods ss mov pop dec mov and pushf push mov add idivl mov sbb adc push call mov cmc sub repnz bound push push adc cmp cmc outsb fnsave aaa xor (bad) imul lcall mov imul cltd mov inc add pop jae sub or pusha and inc jbe push xchg stc xchg xchg in sub arpl gs cwtl pop add in jbe inc mov ret jg lods and xor dec stos out les mov xor cmpsl xchg sbb adc repz (bad) mov enter mov loopne adc divl mov out add adc jge rcrb movl pop xor sbb stos cmc sarb mov sbb push pop lds push adc sbb addr16 ja push sub mov (bad) mov clc stc in out add int3 fimul sbb adc pop mov fisttp inc dec popl sbb fldt cmp or sti es adc sub xchg enter dec mov je dec ficoml movsl aad xchg mov add lods adc adc lods mov ss mov pop jbe aas into mov push dec idivl stc fwait dec outsb mov mov xor orl adc (bad) fldcw add sbb adc test lahf adc cmp lods sub (bad) ljmp jae xchg (bad) jmp imul push xor gs xchg lcall cmp in mov (bad) jbe popa adc add push add les enter aad sub jmp mov rcl mov in mov movsb (bad) cs sbb mov les push lret cltd pop ret xor xchg and and or pushf jbe test cld (bad) cmpsl mov out repnz cmp ja ret push and mov sbb or pop loope cs xorl push cmp xchg fst ljmp hlt xorl cmp push sub pop rclb add les lods mov push push movsb push jp stos mov mov pushf xor fbstp int cmpsl and les outsb outsl (bad) dec int shll lahf xchg test mov xchg (bad) sti mov cmp das pop iret add rolb pop (bad) xlat loope jns divb mov dec mov pop jl inc xchg cmp and mov lods mov cmc repnz addr16 cmpsl insb sub mov adc pop jns mov jns xchg and popa sbbl ret les mov xchg sub (bad) call mov cld pop ja ret into fs (bad) xor imul mov inc lock mov (bad) xchg sarb addr16 test movb nop in ret imul mov sub and push inc (bad) test insl and fsubrs xchg popf sar imull mov or out adc fcmovnbe mov shll adc lock je push loopne pop mov lock aad test xcrypt-cfb cmpsl gs lret xchg pop (bad) into xchg test push test mov cmp jecxz pop sub mov pop ds push mov aas inc jae aad stos sti jle jne adc xchg cmp add jae aas lock xor cltd jl jo (bad) xchg adc insl cwtl sbb lock xchg lods dec or xchg fstp enter pushf sub jge imul mov jno jle test ror xchg aad lret cmp mov ret (bad) shlb psraw mov pop (bad) (bad) push add lret jnp add mov lea lea sbb popa sub and das int sub ret cmpsl popf notb and imul cmp mov (bad) int3 jp hlt mov enter clc mov mov sahf inc push or int push rolb in subl or pop fbstp mov dec test cmp test (bad) jns imul jl call lret pushf jnp mov je or fucom inc dec sub mov in xchg fsubr lret push nop cmp jecxz xchg rolb leave iret mov push js jns fbld jmp outsb jne or nop or out inc adc movsl pop push mov or push into shr aam cli cmpsl xor pslld xchg mov stos xor je or push push adc jae jnp leave dec dec imul outsb mov out or lcall cmc outsl scas sahf nop jns insl sti into dec iret lahf jae lods rol add lods in dec sub movsl push scas cli push (bad) hlt repnz loopne imul icebp in ret mov cmp mov adcl mov or out loope push mov dec xchg and mov lds and repz sbb xor insb jp (bad) ficompl int test mov lds jo sbb mov sti add scas lcall push sti xlat push out lods add push mov push add adc aad push cmp gs sub or icebp mov mov adc iret rclb std sub lock shrl or test cmp hlt fwait arpl in mov xor stc push dec cmpsl cmp nop icebp mov sub adc lcall adc lock pop jl shrl pop jecxz aaa push push lcall out ret (bad) or (bad) mov out mov mov (bad) cmc jmp jne or mov (bad) vcvtdq2pd lret jecxz (bad) pop dec add mov in inc ret mov jbe aaa and sbb xchg xchg pop add insl xchg inc iret xchg ja mov jecxz xor lcall (bad) sti xor mov shlb jo xor cmp repz (bad) out inc in popf lret (bad) les rcrl add hlt lock sbb jg sahf mov pushf stc es vpmullw xchg fcmovne fs pushf and das mov inc daa js nop xor sub pop mov aam test shll lcall lahf push dec aaa shll cmp push jb lods cmp and das ror iret incb xchg xchg sbb fimull pop dec mov stos xor das or js aas cld adc push (bad) mov push cmpsb add icebp xor xchg pushf sar jle pop scas das xchg push cmpsl ja add leave dec call stc pop sub fsubr (bad) pushf pop lods daa gs lret mov push add (bad) sbb pop iret dec sahf inc cmp or fs enter bound rcr xor sub fisttp jb,pn aad scas icebp cmp or loopne loopne cmp inc jns ficompl dec insb jg scas ret jmp aam mov repnz xchg js mov iret std sub out jecxz and repnz push fs jge mov mov jbe mov inc inc pop cwtl inc shlb repnz sub ja xor insb adc lods in in xchg in (bad) push adc cmc add pop loop inc mov inc adc sub dec mov (bad) test push ljmp jno jbe std add fcmovu and cmp adc and add into add nop pop or loope and stos xchg sbb cmp xchg pop mov inc pop lds add sub adc push pop or lahf lret sahf jbe lods arpl repnz sub sub imul scas add movsl enter stc push mov popf push daa orb lds ss (bad) lods (bad) (bad) sbb (bad) imul xchg xor mov loop repnz (bad) push or rorl (bad) xchg cmp ja dec loopne fucomi (bad) bound lods stos xchg inc add pop iret cmc outsb jbe out adc or xlat xchg adc mov cmp jnp daa xlat jle mov lock sub xchg out rcll rorl call lcall int3 sbb in push in cmp clc shl (bad) inc dec cmpsb aad add aas loop xchg jne das cwtl pop push add xchg lea xchg movsl arpl jge or int3 aad adc mov stos sub jp rep jge inc cmp xchg xor sbb and mov xor mov adc xor std rcrl or sbb test repz mov dec fisubrl push bound jp mov inc inc jecxz sub push dec pmaxsw cli sahf push jnp xor pop sbb or das fdivrs jecxz sub jno and jbe dec fisubrl pop add jge shr mov adc ret rorb mov insb dec push pop rorb dec mov jo inc into inc xor pop orl mov push mov add les out xchg fldcw addr16 or sub cli inc outsl loop mov ja ss (bad) fidivr aas xor push inc adc push ja cmpsb (bad) jo fldenv mov jmp adc ret mov int3 (bad) loopne sbb scas ds adc xchg adc sub hlt ljmp out mov push mov dec scas mov sbb loopne xor out aad mov in andl xor dec rorl xchg xchg enter mov mulb in cmp xchg push mov jmp xor test sbb push inc aad imul psraw stos fcmove outsl mov movsb loope add dec mov aad xor or sti jl xchg stc mov mov jmp push sbb enter aad xor fs rep and sbb xor (bad) (bad) es lret jbe mov jle sub sbb repnz movsb mov cli fadd test or mov cmpsl mov scas jb out inc sqrtps push stos clc or int3 nop scas test je xchg xchg lret data16 sbb mov sbb add stos xchg pop pop and iret lahf int3 or rcl push or movsl sub xor dec cmpsb rclb iret jle mov iret (bad) mov add (bad) and js addr16 adc fisubl mov out lds bound mov pusha or scas ljmp xor mov pop adc mov or ja jne mov jns pop scas sbb (bad) jl pop test decb movl add add sbb add cmc push push adc sti xor ja lret sbb sahf fs repnz add push mov xor inc add xchg aam xchg movsb add xchg push xchg pop xchg clc test lret into or mov mov mov clc dec add in pop int3 mov fistpl fstpt xor (bad) jbe repz int pop arpl jbe add adc subb jae test push mov addr16 dec cli jg xor push das scas sub xlat test lret dec push in outsl jnp pop insl ret cwtl test jmp cmp xchg or ja test ret repnz test push sub push jmp lds out pop pusha rcrb test fldl jl sbb mov rcll add fwait stos inc or cld jb push dec push jnp aaa xor jo xor mov daa cmpsb and loopne aam sub and xor sbb fsubl xchg js sub das adc and jmp sbb dec dec or insl pop (bad) jl pop cmc aad sbb xor add (bad) ss mov xchg aad push dec mov arpl ss jp push pop scas leave fsts outsl idivl adcl jns in mov lret out outsl pop inc das inc inc mov sbb addr16 fprem1 adc unpcklps add add mov cld adc jmp mov shrb push xor jnp pop xorl inc repz rclb jle je mov imul fisubl ror jae sahf fmull xlat stc mul cmp and (bad) movsl js lea je sub addr16 std (bad) push iretw (bad) mov pop dec repnz cli or dec pop lock jne jnp dec ljmp adc fsts scas das mov xchg cmp out xor add mov push cmp cmp repz pop or jmp int3 fildll pop pushf aad daa movsb shrb xor loopne stc cmp mov sbb popa mov add pop scas pop inc pop jns push xchg push out fild and cmp push push aas insb push and adc jb iret in push stos in sbb xchg arpl jp hlt cmp rcl push sarl popf mov aam das repnz jmp xor cmp mov pop and icebp adc or cwtl in insl cmpsb jns sahf call lock xchg dec out mov jns pop stos cmpsb scas les stc loop int3 pop je xchg movsb xchg rclb test or push scas mov loopne push push subl and fisubrl fistpll add (bad) mov cvtps2pd fwait in xor cmp andl mov icebp gs daa push xchg xor add fstps push pop dec or je xchg xor mov scas lret cmpsb mov mov xchg cmc pop mov pop outsl mov sbb sahf jbe add inc mov hlt mov stos pop (bad) lock push enter or mov sbb into pop jb jns jno mov (bad) incl and loop cltd rcr fiadd orl leave outsb out clc mov mov mulps jb mov pop sbb xchg jae sub popa jbe imul xor mov push out inc (bad) mov lret sub pop call sbb rcll and inc mov jecxz rcll call and mov andl movsb mov xchg (bad) insb cs mov leave in pop or fsts outsl insl out nop xchg inc add mov das sbb (bad) sub (bad) cmp sahf sbb decl add pop loopne add lea mov das dec pop sbb mov iret push push outsl pop mov std pop lret insb mov fsqrt mov push pop fwait jecxz push or inc adc ljmp aas sbb jle and push and hlt xchg ret sub fwait sub pop and std xor mov inc loop xor jmp adc loope nop jno dec int das fsubrp xor xchg sbb es inc leave add cmc mov repnz sub or add jp imul adc ljmp addr16 in andl addl and lods mov pushf lahf mov in mov cmp sub mov popa out popf ss faddl insb mov sbb mov push push fnstsw mov ret inc lcall or fdivrs imul mov ja nop test aaa scas mov push or dec incl ds mov ret cltd mov rcll fnstcw xor adc dec test adc in or or pop mov sti sub dec xor sahf (bad) loopne and xor sub movsb lret dec xchg inc jb mov in jp,pn sahf inc cwtl adc xor mov or nop mov mov jp ja dec outsl daa mov add push int (bad) stos mov scas add fs pop xor enter xchg (bad) push mov gs ljmp mov pushf das jle mov cltd mov adc mov lahf sbb out pop fs sarb pop xchg fldlg2 aad and in mov scas cmp sub lret aad push xor pusha pop scas pushf add pop (bad) lahf sbbl stc cld add ss loope pop mov addr16 jp jae inc adc cli fstl adc add pop (bad) idivl insl sbb imul cmp fwait or out xchg shr mov es out xor adc inc pop jge hlt fmuls imulb nop jmp cmpsl (bad) xor aas jns inc gs adc mov jmp cmp icebp sbb lods dec jnp enter cltd push adc sub dec jg cltd xchg into xchg jne popf pop add push std adc fimul cmp lahf in pop sbb push movsl sub xchg iret xorl nop inc cmp lea in and insb pop inc call cmp xor fld1 mov xchg test leave fsubr jbe into cmovge push cmp adc mov pop sub repz sbb lret cmpsl test subl cmpl mov int3 pop lds setae jb cmp stos push or cld and testb and aad mov shll (bad) adc (bad) (bad) int3 xlat cmpsb icebp jb stos pop pusha loopne xor dec dec cltd in ljmp jae ja hlt xchg ret stc xlat dec cmc into dec mov clc je aas xor dec mov outsl insb fcomi xor push mov leave lret mov jle add adc int3 fdivrs mov mov or cmp adc test stc inc imul push jbe data16 jecxz int inc add loopne mov loopnew pop leave clc test imul mov icebp sub mov mov mov or mov jge iret hlt gs pop (bad) add inc mov push fcmovne jo fdivrl fsubl pop (bad) jmp aam jbe ds mov (bad) fdivs repnz stos mov dec imul arpl mov (bad) bound bound aad sub xor scas ds jp mov xchg add push mov mov push sti lock lods jae add dec lock jp in mov jb cmp mov xchg pop insl dec mov jne scas inc pop insb inc imul adc int3 lret dec ss lods jnp test add inc and cltd clc sbb pop loop out adc ret stos nop hlt enter iret dec and (bad) fxch pop dec (bad) push arpl or sub jbe jge mov push inc add sub xchg sti or xchg (bad) cmc loopne cmpsb lret ljmp aaa in or push (bad) push mov or in adc pop mov push test adc push ljmp (bad) outsb cmpsb cs test xor insl xchg fisub and cmpl push loopne repnz cmp and xor cmp sub or sti mov mov xchg add rcl dec daa dec push ljmp aam pop and out ss lcall cmc int stos cli inc clc jb out mov jl out jo orb scas bts inc clc add adc (bad) je pop hlt pushf ds unpckhps mov push dec mov in addr16 repz mov inc push stc ror inc jne mov adc std es jecxz jmp push (bad) push adc mov adc mov aaa pop daa push fisubr push adc test mov adcb cmc imul push ljmp xchg int3 out push jmp stos movb insb int3 inc outsl loope sti iret mov mov addr16 pop sub or movsb inc cmp cmp and dec adc out inc adc mov sbb out xor mov fdivrs test mov inc and mov xchg adc cmp fdivl leave aaa push negb test out shr enter xlat and lea cwtl test neg sbb into jo pop inc push movsb cmp pop sbb lcall mov ficomp inc xchg rcrb lret shlb addr16 in mov scas mov aaa inc adc mov repz xchg ljmp (bad) pop imul sub repz out mov jo ficoml movsl push nop test cmp adc lcall cmc adc (bad) je xchg add rcr and push int3 out insl lret loopne (bad) mov and psubsw lods jnp pop mov adc bound cltd dec jecxz call mov adc imulb ss mov and jbe fmull mov lret dec mov js sub mov movsb sbb mov and testl in in push push adc in jbe lea xor outsb repz add push fild repz imul loope popa mov and incb test inc xor flds loopne cmpsb mov cmp std jno setp sbb sbb out xor loop pusha sbb imul out lds (bad) add pushf dec stc or pop popf into xchg xor outsl ficompl ret mov mov cwtl mov cs popf fstps xchg imul test cmpl (bad) pop mov lds xor in jb add dec inc ds je aas sbb xor das xor stos das (bad) arpl or and jmp xor inc cmp insl pop xchg ss mov dec or nop mov decl cs adc and orl add xchg add cmpl imul inc call sub xlat inc ss xchg movsb mov cmpl pop or ss sbb adc pop popa pop and mov js movb (bad) sahf mov sbb jl aam adc pop cmp daa adc adc test shr lcall push push ss mov xchg dec dec or and pushl aaa imul loop sub pusha mov pop jae dec xlat sbb stos xchg in (bad) icebp xlat fildl test xchg call jne out mov scas cmp pop loop test rcll fildl inc cli jo fucom xchg mov and cmpsl in sti jae xchg and stos icebp loop pop call pop aas cmp dec cmp lds mov mov inc inc adc pop mov (bad) jb xor lods sahf push insb (bad) fnstsw jo jmp sbb sahf js or insb mov aad rcrb cmpsb (bad) jbe movsl popa (bad) into push mov sbbb cmpsl ss mov xchg dec add xchg fstp mov sub sbb in sub and in out add sub inc xlat ret adc shrb shll sub mov pop push jecxz ja repnz or mov xor xor (bad) mov les imul test mov test ljmp dec ljmp cmp icebp and adc data16 std push jp cld test cmpsb pop cmpsb leave push jge add sbb lahf adc ljmp jns jb pop fcompl mov test cld jae cmp fsts jo (bad) mov push bound jb gs dec scas (bad) shlb and jne inc lods mov data16 daa and mov mull pusha test insl cltd mov fs ret xchg nop inc adc arpl sub ds test fidivrl push fwait mov (bad) sub mov mov movl fs adc cltd sahf mov sub test jle sub jl dec dec dec mov mov ror dec test dec lock pop jns xchg sbb nop sub das mov adcl mov mov sti popf sti push adc js std sbb in addr16 sub fs sbbl jb stos loop pop aam xor xor cmpsb lea ljmp stos mov mov cli mov (bad) dec ret push pop fs lret xchg enter mov stos sbb mov mov clc std inc mov test test lea xor (bad) stos out into pop gs jmp loope loope sub push in lea test inc imul (bad) cmp out jg cmp pop dec stos imul and (bad) fwait mov rorb jecxz cmp adc pushf fild push and imul bnd and cmp sub aam rcrl les jne bound stos xor (bad) pusha cmp mov daa cmp mov (bad) push daa iret scas sbb xchg repz mov or jb das rcrl mov jo mov incb cli push jb imul pop xchg pushf movsl scas sbb inc mov pop adc mov mov adc push jg scas mov jne push push push rcrl xor fnstenv popf push lds sbb enter and int je lds popa or stos xchg inc xor daa fcmovu mov scas imul mov dec iret and push lods aam add lea pop xor (bad) mov push dec pop fsubrl pop xor pop sbb jns xchg out adc mov cld lods mov cli mov push jle cs dec dec test (bad) int push dec mov add and rol lock dec jns les pop cld data16 fwait iret xchg sbb jb or lret jecxz add xor sbb mov ficomp lds stos jp dec or mov cltd das jmp stos jg out inc stc cmp cmpsl cwtl dec add repz ds (bad) and cmc insb frstor movsb sub in fwait and pop or inc aaa movsb dec pop cmpxchg call xchg push shrb sbb test lds test mov or loopne repz test dec std xchg or xlat ds jnp ret xchg sub pop lods pusha rcrb adc inc jo cmp and mov xor xchg xor jecxz mov mov fcmovb add popa adc stos mov dec cmpsl ficoml jmp xchg sub inc aas or movsl (bad) repnz xor push aaa es xchg outsb xor mov pop mov dec (bad) repz rcrl fisttpll std (bad) mul xor cmp pusha xchg and arpl ret mov insl outsb cli xor xchg andb loope lock lcall (bad) cmpsb repnz jo movsb mov pop test mov cmpsl (bad) out inc fidivrl jge xchg inc push cmpsb jbe lods cmp cmpsl stos and aam xor pop add daa mov pop dec lods mov cli pop xchg sub rorb movups cmp pop xchg repnz add icebp add mov (bad) inc loop dec stc jg lahf (bad) ds push enter (bad) push xchg xchg inc (bad) mov and mov mov daa xchg inc shlb cltd fwait lahf test fstl and dec in xor out repz inc lods fcomip cmp (bad) sub sbb jne inc or (bad) jmp push fidivl jmp enter xchg das push sub jp xor std fnstenv jg xchg shl dec jmp nop scas jge inc andl cmp inc mov xchg jp sub leave push fcomps inc mov mov jbe test mov dec movsl pop inc jcxz fsubr in out dec fsts lods lock pop cwtl fsubrs arpl pop jle jl xor shll mov sub cld (bad) shll mov in inc push dec push mov sub out ljmp pop inc leave pop dec push adc nop sub xor mov mov lcall inc xchg mov aaa or cli or mov hlt fmulp int (bad) dec ds mov ficom in insb sbb in jge xlat ljmp leave or repnz dec xor nop flds sbb jbe sbb push (bad) hlt mov lea sub loop icebp dec pop mov and jns xor mov out ret or mov mov imul in (bad) push xchg jle and sbb mov xchg or pop jp mov inc push or add lods jae jo aad add xchg ja xchg jnp outsl stos in push ret jecxz aad sbb mov adc imul pop push rcrb xchg push pop mov cmp mov push es mov (bad) mov negl out or leave add daa mov adc inc loope les cmp or pusha int3 cmpsb mov add push imul sahf xchg arpl push out mov mov and sub inc aad outsl pop or mov outsb sub in cmp jno dec (bad) pop outsb icebp dec mov nop sti loop gs or mov mov (bad) imul (bad) testl (bad) ss test add lock (bad) jo mov mov inc out pop ret inc fistpl in xchg xor (bad) mov cltd fmul fisubr dec lods inc div aas add push clc and cld inc sarl and arpl aam cmc imul pushf into insb mov push imul sub jbe add mov inc out jb adc add jb data16 lods mov or or test rcr mov pop (bad) sar adc lods mov sarb fcoms push mov push ret es int sti rcrl sub data16 xor xchg add jae pop xchg jbe xchg jmp add push and push mov xchg add xchg sbb pop adc cmp sub xchg jnp pop outsb add cmp pop leave ljmp mov aas and fdivrl or mov inc sub pusha or je addl loopne and (bad) (bad) ljmp sbb mov and mov (bad) fildl pop inc out mov insb into cmp cmp and xlat (bad) cli sub inc adc xchg inc test popa ja out sbb sub jle sub jns cmp ficoml and (bad) dec iret fcomp mov dec outsl lock pop mov jbe loopne adc (bad) jbe pop xchg cmp or enter jb mov repz push nop (bad) neg (bad) in sahf xor mov mov arpl pop test (bad) mov or mov gs ljmp and xor iret imul inc mov inc mov popf scas xchg test (bad) testl and jno mov lods fiaddl aam popa sub clc sbb dec sub aaa stos je push loop pop xchg push mulb and mov pop psrlq cld sbb fld fmul leave frstor js jle and dec adc xchg and hlt dec (bad) fstpt push les out movsb jns mov in mov sbb into push (bad) mov pop or mov jnp jp cmpsb out xor ljmp mov cmc cmp xor pop inc mov or rolb pop sti sti add stos mov out cmp and push outsb jmp push jbe xchg arpl sbb test mov xor clc mov mov repnz push les dec and xchg in inc mov jns inc scas push dec mulb sub lds lock pop movsb je std popf test les stos mov es loope and (bad) inc push lds repnz cmp xchg jb inc imul lret mov cmpsb xchg xchg leave xor lock jb cmpsb jmp int3 les push shlb push sti sbb mov cli lret outsl jae or test subl or sbb sbb pop mov cmc inc jne dec mov cmp and mov mov sub nop das fidiv cmp ficoml in fsubl into test ja es adc add cmp aad insb push mov addl push add subl cwtl aas fcompl xchg push pop div jae mov mov mov jb or mov push shr xchg xlat fildl test cmp push mov and pop gs jmp imul sbb mov sbb dec pop (bad) pop or cmovne mov test push into cmp leave aam loop sbb aas inc sbb pop add in pop mov shrl sub movsl loopne push cwtl and sbb mov popl xchg sub adc test out dec adc sahf js add sbb je std push cmp xchg insb fnsave (bad) popf data16 mov xor das sbb or fstl mov fnstenv out rorl into js cmpsl cmpsb insb (bad) dec push cmp xchg pop test in pop popf mov frstor cmp (bad) es jle es fbld mov fucomip xchg les add mov add push mov in fdiv sub (bad) mov insb push mov (bad) adc and and cmp lods (bad) jb cmp ljmp fstps inc adc mov jp out cwtl jbe adc push push jecxz inc mov and or jl sbb lret mov fwait rol mov imul dec test xchg pop inc std cmp sbb outsb inc mov xor int3 andl mov jne test pop rclb int inc mov adc je add adc mov mov jbe movsb leave xor ret icebp inc xchg lret jb insb or sbb pop mov pop outsl cwtl or jae stos mov adc sahf pop fisttpl xor jae inc inc lea mov xor cwtl lret out (bad) dec arpl push push fimul sbb mov (bad) xlat ljmp add mov ds or add jg leave dec xchg xor fnstsw add pushl sbb and dec out nop in push and adc sarb dec sub jne lods sbb pop pop insb dec pop push mov push sbb adc mov movsl adc js iret mov inc out (bad) mulb hlt pop xchg push insl ja mov imul stc jl mov mov (bad) outsl add sub lods jp bound and es mov add fistpl (bad) int3 mov inc dec push (bad) or cli lcall sahf inc xor xchg insl ret andl rcll arpl push or mov cmp das stos xchg rcl and sahf jb jg xchg jmp jno adc push xchg (bad) out pop add jp mov (bad) sbb in lea sti mov xchg add stos jle sub mov dec int bound sbb fwait or inc testb push popa inc sar (bad) xchg push dec fild aas sti jb mov xchg xchg inc data16 or sbb add mov (bad) xor fdivrs mov xchg pop rcrb test xchg xchg aaa test sub shrb bound in test popf mov xor add fwait into lcall jb pop dec (bad) aad hlt lcall push add loope mov push sbb mov (bad) dec inc pop shrb pop add sub cwtl or xchg data16 in (bad) cmp xor push xchg test pop and ret mov add movsl aas inc jno in testb ja xor xor rolb and inc xchg (bad) adc pusha add testl test cmpsl fmuls pop add pop xchg sbb test or jne movsb add cmpsb add xchg cmpl pop xor jg ss cmpsl add mov iret stos add dec mov arpl xchg jle jp ss push out fsubrl xchg add xchg and push add pop es loopne (bad) cwtl clc xchg add (bad) in mov add cmpl aad lds jno aaa push sbb roll pop dec cmp jecxz hlt xor dec add cmpb mov pop xchg jae arpl sahf push (bad) mov xchg mov out ret in insb call mov cmp jge into and (bad) dec pop add cmp dec cld notl icebp inc cwtl ds adc hlt pop aas jns stc pop fwait push fidivr pop inc loopne push xchg mov mov (bad) push outsb movsl sub or inc lcall cmp jno rolb jecxz out ficompl mov test lods cmpsl push sub cmp push mov out lea (bad) xor jecxz (bad) jg push mov sbbb inc int3 add mov dec lret dec add mov sbb pop in dec in shrl mov (bad) int xorl int je lahf push imulb mov fcoml lcall xchg adc cwtl (bad) int3 inc mov and fs (bad) push daa cs lea aaa roll iret or sub sub je scas push sti sub out mov mov call sti or push fsubrl add aad mov mov sub std loop push xor (bad) xor (bad) loope popf push jo xchg or fsubr mov jo sub lret jle gs inc mov rorb lahf rcl (bad) sub inc mov (bad) cbtw jo (bad) fisubrl enter mov jmp popa incl (bad) sbb (bad) ja mov (bad) sub test xor mov jecxz lock icebp cmp int out fldl push dec loope cmp xor sbb scas jg,pn orl loope inc xor sbb dec jmp mov xchg les loopne sbb inc mov push inc sub pop adc call nop xor or xchg testl lret (bad) lods mov movsb scas lret les out dec pop mov dec adcb fdivs xchg out pushf test loop xor push jne ds adc arpl dec iret pop lret sub xchg and push rcrl xchg mov pop in mov xchg popa mov adc push dec add mov push imul mov sarb sub (bad) adc popf pop or addl imul cltd not adc cli mov lods dec out push sbb out rol dec pop imul push sbb popa cmp push push dec push sbb (bad) dec xorl sub jmp jecxz ljmp stos cmp dec push (bad) pop out pop and sti adc mov (bad) dec jne mov jp jp and scas mov push out ljmp fnsave or stos jmp lds mov cmp insl cmpsl ljmp das pop je pop xchg ds or stc cmp das xor testl stos (bad) cmpsl int3 jmp xchg pop aad cld cmpsb pushf jg dec loope xchg xabort paddb mov push int3 jp rcrl repz dec xchg adc and jae fwait icebp loopne add fucom add inc xchg ret leave stos xchg ret xchg rorb mov (bad) cmpsb in or mov and (bad) or popa inc cmp push rol sub xor insb lcall pop sahf add pop mov popa xlat lahf gs faddp or shr adc mov push adc xchg (bad) mov push je push out mov inc (bad) mov push je pushf leave push inc ds xchg jle dec cmp jb cli xchg jecxz pusha jp mov pop mov inc push fwait lock or mov nop (bad) roll adc daa rolb daa call les scas je dec xor (bad) xor and push xchg mov scas inc xor repnz subl or out dec (bad) divb cmc insl pushf dec js adc jnp popa stos scas shll push mov fmuls in insb mov in iret pop pop fs cmp dec dec scas adc cmp ds lahf pop mov jne adc xchg mov ret jnp fs mov imul daa pop add add jns sub (bad) (bad) push rorb lea sahf icebp adc es addl jae (bad) (bad) ficoml mov das dec and mov jns (bad) shrl inc aad shl and xor inc dec repz stos lahf jne lret ud2 sbb scas pop pop or lret cwtl push xchg pop ss out loop push push fmuls and dec lahf dec lret fnstcw sub cmp xor add scas add push push lock fwait sub call inc jo out and xchg in nop int3 cwtl sbb rcll sbb pusha loopne ds jno les rol mov out lahf add lahf push adc add adc pop jmp jge jle jae mov es mov notl xchg cmc lods inc mov sahf add dec outsl aas ret inc cltd mov sbb push pop jle enter call insl into leave jle xor ror (bad) aas add pop outsl jmp test lds jbe jg mov scas add lahf mov or push arpl xlat xor pushf xor cmc test inc sub sti sbb xlat andl jnp ljmp adc sbb aad cld mov and in cli enter cmp adc lods (bad) enter cmp or arpl insb aas cmpb cs shrl jns aam (bad) xor and in sbb mov dec (bad) cmp and imul mov dec (bad) (bad) mov jmp mov movsb nop test scas adc and sbb daa or fstl adc xor adc xchg adc aaa mov shld mov ror (bad) fnstcw ljmp ficompl stc mov cmp stc sub jns aad jmp xchg call addb cld loope cmp loop sub fwait andl xor cld fs out and jmp add cmp xchg pop fist es mov dec ret mov aas adc add lret and hlt leave outsb mov int3 jg leave inc int movsb iret mov jg inc aaa insb fsubrp addl bound push adc leave pop inc fidivr mov mov or pushf push mov ret xchg mov xor mov push mov scas dec sarb push pushf mov add dec cmp int mov cmp and (bad) push xor dec add pushf mov add cmp clc inc pop xchg test nop xchg (bad) jbe adcl in ds inc adc outsb mov popf pop cwtl xchg push out jmp dec call or (bad) ret jne in mov stc jecxz and js push inc jne cmp mov rorl ret mov pop fcmovnb xchg mov (bad) push imul icebp cltd mov in flds mov push lods lock pop iret imul push xchg leave mov jmp fnsave xchg daa outsl or in fildl ret xor inc push inc mov xor mov xchg (bad) mov and inc xor xchg inc mov pop lahf mov dec inc repz es popa dec loopne jp xor ljmp repnz repz jo mov (bad) jmp lcall xchg jg xor xor sahf or xchg out lahf xchg xlat (bad) inc mov cs hlt js and ds cmp rorb adc mov out cmpsl push enter mov sub sbbb inc pop sub jp xor jo cmp mov cltd cmp (bad) and sbb icebp mov jg dec add ljmp mov jbe fisubr sub hlt xor (bad) int insb or lock lret imul xchg icebp cltd loope cmp insl nop cmp dec pop add xor mov leave mov push lods int3 dec jae push hlt or push es das xchg lods pop pop dec popa xor jmp imull inc lods lcall mov cmpsb cld sub xor js mov sti and or jo cmp inc pop iret in sub cmp and add or stc dec cmp and lretw add xchg pop jp xchg cmpl sub push mov jno adc pop cmp lock hlt add pop mov mov imul fs push sbb mov pushf ret pop fimull outsb jl add push repz sub jb movsb cltd call push ss push fs mov sbb cmp push test push mov push dec inc (bad) insb inc dec push inc jp jle cwtl cmc pop adc sub mov loope or pop test fistp mov xchg mov out dec andl jnp mov lods out xor and inc adc subb std (bad) xor jp in or imul lret add (bad) fistpll dec lret inc rep loope adc sub xor push pop test pop scas dec movsb (bad) aas je and or aas in jne pop movsb aas in pop inc out dec jo add sbb pop int3 (bad) loop xorl inc mov lahf xchg sub mov and movsb jae (bad) jl ret jle lret pop loope vcvtss2sd xor jns xor out test movsl into dec (bad) cmp add notb shr (bad) xlat xor out cmp pop loopne dec sbb popf inc mov mov rcrl xchg mov cmp mov pop or (bad) pop into push cs xlat lret push sub cmp cwtl insl stos xchg test out lcall jns mov mov aas cmc lret xchg cmpsl int3 xchg xor push mov xchg arpl push push sub das lcall aas add data16 rol cmc push sbb repz stc mov dec aas (bad) repz mov xchg jge xor adc out xor add pusha sbb sbb dec imul adc sahf fild ljmp xchg neg gs inc push mov push sub cmc sub mov mov imul jmp xchg repnz and pop mov push int3 dec pusha push sahf iret jns push and (bad) gs pop cs je adc shll pop ja push and push fiaddl pop lahf arpl xchg push test aas lds dec cmp push sbb hlt adc pop sarb push aad cmp xchg cmp ret push xchg sbb sbb popf es data16 icebp mov nop sub pop xor (bad) inc stc arpl aad xor dec mov add stos sbb add dec cld aaa add mov dec jo mov stos cmp and (bad) pop push das sarl inc nopl inc pop lods call inc test pop out mov mov int3 rcl xchg or lea ucomiss imul (bad) sbb addr16 scas sbb ficompl movsb sbb (bad) repnz cmp jecxz and aaa (bad) insb mov jl or ds je push add xchg fistpl pop pop hlt push (bad) sub in aad test lods repz scas push mov aas cli xchg xchg mov add cltd sbb dec imul arpl mov mov cs push mov imulb andb (bad) mov jbe (bad) cmpsl rolb inc jl fildll pop jge mov ss sbb mov inc pop fnstcw pusha push cmp add sti pushf cld push das pop or cs adc add xor push stc sbb pushf mov xchg stos adc dec push pop dec mov std jecxz push pop jnp jp (bad) mov imul (bad) xor xor fistpll and xchg jne xor add (bad) rorl gs mov mov jbe mov ss shll fisubr pop sbb in xchg test loop hlt xchg inc push movsb cmp cltd sub test and add iret cmpsb fisttpl das and fs rolb js or shll pop mov dec lea leave cmp pop cmp in mov adc cmp jg mov insl jne,pt xchg and sbb xchg jge jnp cmpsl neg call movsb mov xchg sub dec insb cmp xchg cs pop lahf lods sahf dec mov push mov test jb es out stos test xlat int cmpsb sbb imul stc das and repnz mov pop cmp adc pop pop cld push push cmp outsl enter fs ficoml cmp jp cmp fcmovne lret jns push in cmp or sub adc mov xchg roll dec rcrb jecxz adc cmpl ffree rorl in pop adc adc cmp fwait jmp sbb push cmpsl inc add outsl popf mov cltd jg sub push sub push jmp shl mov fistl nop or xor xchg in cltd sti jge rcr es adc adc fildl nop and (bad) jb loope inc and js xlat mov push pusha pusha out arpl sbb xchg cmp dec out sub lret fsub fs fldcw shrl xor jecxz cwtl add insb adc jmp push pop cli icebp xchg jp xchg xchg iret fisub add xor or mov xor dec call cmp or sbb insl ja inc dec push nop (bad) hlt fstl out insl jmp call ja movsl jae rcl push sbb orl and movsb gs lea mov idiv (bad) lods pop dec sahf and hlt mov push jae fcmovnb jae cmc test leave js sub mov or (bad) mov mov xor shll jge inc mov leave mov and sbb add lods or (bad) adc lret jg outsb js mov shll mov sub sahf int int3 mov mov mov pop or sbb ds test fnstsw ficomp je push inc (bad) and ds pop (bad) cs jo inc jae into cmp jno ficomp adc push aam mov or je push aaa std mov or inc sub mov cwtl pop imul call and push int adc xchg inc lret in repnz inc mov mov push movsb popa cmp pop ds pop xchg pop insb adc sbb xor jle imul leave loop (bad) lahf push leave mov xchg fisub lret sbb inc and in (bad) mov and dec mov inc fwait xchg or adc mov cmp out fadds aad pop xorl mov stos pop (bad) stos xchg ret js lahf in aam test fisubl into (bad) imull ss movsl mov nop lret push mov xchg loop add mov loopne adc andl test cmpsb lea int3 inc push and xchg pop lret int3 aam mov test flds xor testb sbb pushf mov inc jae js mov adc cld pop cltd (bad) out mov and fs jl fsts add fmul cmp fimull test loope and (bad) (bad) inc outsb in pop stos pop mov rcll in daa leave jp jmp mov and mov cmc leave lea outsb xor lods push fs test cmpsb mov stc dec scas aas adc cli rcll add cmp sub (bad) cmpsl loopne lcall or test sarl cltd dec leave lahf inc pop push popa (bad) mov xlat cmp cltd loopne lcall jae cmp mov push and add mov inc adc lds add ljmp push ss out sbb rcl data16 pop xchg lahf andl xchg mov mov out daa lcall lea mov jno mov and (bad) mov mov cli lcall mov sub ljmp mov mov jle in mov jle sbb mov xchg ret mov movsl cmp dec and out repz in push xrelease enter mov push pop xchg repz iret add movsl jecxz mov xchg in sahf pop clflush aaa (bad) into add (bad) pop faddl (bad) xor sub cli enter std popf sbb clc mov jns icebp cmpsb and jmp push std (bad) int3 push les lods jmp xchg incl jl xor add sbb mov inc lds stc addr16 test jp inc cmp pop nop insb outsb inc sub (bad) into xor jg aam fidivl hlt or add add xchg test cmc inc test or jp inc shlb push test insb stc push mov call mov or pusha mulb into push loop mov bswap rorb shrl sahf dec jp inc adc shlb xchg jo fsubrs adc shll stos sbb std jnp or dec fiadd movsb nop out cmp mov leave gs aad imul sbb outsl jge das dec xor sysexit and lahf push cs inc sbb adc jnp fs xor scas out or sarb ror mov faddp xchg push sahf mov mov frstor inc out les push xchg cmpsl jne and pop dec pop cltd mov xchg fbld (bad) les mov dec mov xchg les mov aas sarl push sarl pusha dec outsb rclb mov xchg adc adc or cmpsb cltd popf lea imul imul bound adc push stos repz iret or cmp je jnp ret add dec xor pusha sahf push js cmpsb xor xor add dec aas addr16 (bad) jl or cs inc repnz clc stos stos cmpsb in pusha sbb push test sbb lds xchg loope xchg xchg (bad) leave sub cwtl sarb movsb xchg dec inc cltd jecxz loopne sbb insl mov mov jo or pop ds stos cmp mov mov not sbb mov int lods shr js aam pop sbbl lret jo jnp push stos mov call out outsl lock sub sub jnp addl cmp sbb xchg push outsl jmp adc js rolb xor pop lcall out add dec inc and shrb fs insb sarl sub loopne (bad) jne jne cwtl add lret cld jae pusha jl push loope sub mov jmp (bad) je (bad) (bad) (bad) xor or mov add loope sbb inc (bad) mov (bad) dec adc adc outsb pop stc or jecxz out cmpsb push leave dec or and mov aas pusha mov out je repz sbb (bad) pop and ja (bad) negl divb lods jge jb dec mov (bad) (bad) xor bound aad aas leave mov jne mov push dec lcall stos subb jno pushf in xor call adc push pusha mov repnz daa push xor and xor in xor mov cmpsb lret sub pop ja mov jge (bad) inc and xor and (bad) in das mov es mov pop sti rcrl scas aas arpl nop pop in or adc lcall adc pop hlt cmp and xchg mov clc in iret mov push xchg mov xor xor add sub fwait inc in dec enter inc pop leave in lods or mov mov arpl insb mov fdivl xchg lods push enter popf sti (bad) vucomisd ss sub jl fwait loope out daa pop inc andl (bad) aaa push outsl ret mov push outsl int3 sti xor mov lds lea sub xlat int3 dec or xor fldl movsb jg cmp jae mov adc sahf and and aad jae sub push popw mov sbb jb or push add enter imul ficomp dec push push je mov pop das movsl mov mov (bad) xchg mov xor testb mov dec jnp adc fwait adcl sbb jge mov mov add scas insb dec repz test and clc adc lret jbe jne in popf mov cmp inc stos test mov push pop xor data16 inc subl les lods shl or ds mov dec fmuls push and dec dec xchg or orl (bad) mov jl addl ss test inc ja sar cwtl xchg pop loope (bad) jbe add jl out jp xchg xchg jno pusha mov mov mov sub xchg in (bad) inc std sub pop dec ficomp pop dec sub or push insb fwait (bad) das jg push movsb push mov dec push lock push push xchg movsb jmp mov xchg lahf jle call adc pop stos mov jle,pt mov xlat mov cld (bad) out adcl dec movsl xor sub into and imul ss dec stos mov inc push in pop test dec sbb lods adc mov push cmp cmpsl add movntq jge fstl movsb xchg inc stc pusha adc push out dec (bad) test xlat aam addl jle rclb xor loop mov mov jbe out add xchg std jle aaa pusha mov sbbb push stc or mov std dec and or dec test mov push dec mov stos pop sti pusha or xchg pop jns ja cmc fs cli pop and cwtl pop jns push cmp xor xor fs mov fcomps push pop test xor insl sbb fidivl jns mov cmp pop stos insb mov xor xlat enter mov pusha mov jae cmc popa mov pop xchg lds loopne jb sub int sub cmp mov xchg stos mov clc cmp and in cmp inc mov adc andl lret mov (bad) std add rcll pop or sahf cs hlt mov sbb icebp inc push adcb push lret (bad) push push adc xchg jae popa fst pop push pop gs jl dec xor out je cmc pop or mov leave movsb jne mov sub dec push xor xor jae cmpsl mov leave and add lods pop dec in push call mov gs sahf std pushf (bad) and jne mov cmc cmp push popf xchg or movsl decb loope dec cmp fisttpll sub xor aas outsl inc mov sti cmpsl fsubrl xchg addr16 bound mov das insl fsubp and je lods fcomps sub lret jnp roll test cmpsl jae sbb sub stos xlat jnp loope jne push xchg jae push cltd add cmp pop mov cmc lret (bad) daa xor sub pop mov popf sti xchg cmpl push pop pop or lock sbb pop cmp pop cmp pusha scas and add movsb movl dec sbb mov std loopne mov fs (bad) daa xchg test xlat pop or fbstp pop repz add add and aaa adc jb pop add into sub jmp into dec pop in (bad) adc xchg lahf shl sub (bad) fstp xchg hlt loopne mov mov int xor hlt sbb outsl cmp jo jmp xor outsl and loop pushf loop adc scas icebp xor out jns dec das in xor dec jne adc pop sbb scas dec xchg adc adcl pop mov test add add mov xchg loop adc mov in mov xor aaa fs dec xlat stc push push stos lods lcall (bad) sub xchg sbb loope lock add aam pusha sub add (bad) xchg sti test mov sti mov (bad) shr sahf (bad) outsl hlt lea fdivl ljmp or adc adc outsl jge push js push jno into and mov lret ljmp (bad) hlt cmp xor mov xchg nop sub loopne mov iret jns sti push xor xor into adc enter jge loop sub xor push or arpl (bad) out dec ja pop arpl mov jb test or add movsl cli pop push jl mov cld mov int adc add jno jo mov mov lods xchg mov repnz push push lcall fdivl mov inc outsb jb mov jbe cmp push push add dec loope int dec leave lret out inc and les lret sbb aas mov cwtl push in aas test add cld or jnp icebp pusha dec mov lods std xorb lret jecxz sbb sahf mov outsb mov cmp icebp mov adc stc fsubrs and jp dec adc adc xor aam rorl xchg inc out sbb hlt xor inc mov mov cld mov imul and and fs dec (bad) movsb ret sbbb push or sub jmp and push aam cmp in mov aad cmp xor inc or mov jb sbb ja mov hlt leave js cmp or cwtl lcall adc add cmc cs pusha movsb out cmp mov outsl loopne sbb dec hlt fcoms shlb lret (bad) push leave mov aam in roll (bad) aas inc cmp repnz (bad) cld jle inc sub data16 lods scas mov pop push iret test std inc lea xchg bound xchg daa xchg cmc push cli push mov ja frstor iret fcomip sarb jnp mov subps dec in lret jne sub fstpl sbb call mov and push pop inc ret divb mov lret jmp rcrb dec js pop mov and cltd sbb xor je (bad) aam popf cmp (bad) outsl in aad addr16 cmc push push outsl and out sahf ret sub fisub xchg ds sub pop iret sbb mov or sub out xor sub out mov enter jbe fisub ljmp xchg pop (bad) dec lods push loop in mov or out popf xchg mov repz mov xchg inc mov jecxz inc mov sbbb pop stos inc xor inc (bad) int3 pop push nop stc pop pop negl xor test cmp lods int in mov cmp (bad) cmpb push adc addb xchg frstor pushf dec loop and dec out pop inc adc jecxz mov fdivs add paddw clc cmp inc pop adc in mov clc push push pusha es push jp dec fmuls roll mov adc std shll sbb (bad) bound mov pop js pop pop sbb cld dec mov push fistp dec shrb jno or ds addr16 fldenv fildll or out test (bad) addr16 ret mov sbb push or outsb dec cmp xor inc mov lcall cltd sub aam es mov jbe lock sbb xor fwait cmp (bad) fadd add adc dec sub adc and xchg incl les movsl cmp fildl pushf jnp sbb inc mov (bad) and inc popa addb lds inc xchg vmwrite and cmpsb push sbb push cwtl or ror popf add add push out das loop fsubrl mov inc adc cld jnp repz add xchg push jne aam repnz ds push aaa leave inc sbb enter outsl clc xchg mov adc inc loop add adc adc imul ret int3 popf lods mov sbb add popf add pop iret push and xchg cmp out lahf xchg (bad) aam mov cmp (bad) sub rolb add pusha jbe inc imul xchg pop sub mov adc cmp cld ss repz cld sub or sbb and cmpsb imul xor mov mov insl pushf mov mov xor mov std mov imul and pop add push push test dec jnp jp xor int3 mov push lea cmpsl sbbb and jp cs out stc (bad) cmpsb loope push jb xchg pop into add (bad) push mov or xchg mov mov iret jmp sbb movsl dec push aam add xchg add sarl scas clc decl je ret repz push aaa inc ret jnp jns dec sub pop icebp fadds push xchg loope pop in and ljmp sub xor imul adc sahf lock outsl enter aad push xchg mov int xchg aas roll arpl mov pop bound icebp mov add pop cltd daa or mov sub push sbb lea dec mov jbe arpl sbb mov in movsb jecxz mov jne movsl pop into jns cs and cmp stc mov andl pop sub mov xchg (bad) idivb dec add mov (bad) cmc adc or (bad) cmp jmp aam and rcr adc fmul dec mov cmp push fldl and mov lds movsl ljmp das sub fsubs and cmp mov add mov aad int3 jge cmp dec ljmp repz fmull in xor jb addr16 mov lds cmp pop imul mov outsb cmp rcrl (bad) fstl loope insb jnp mov out push repz shl ss adc les sbb test add mov mov iret jnp aaa in lret ljmp test movsl lods inc push xchg outsl cmp add outsl je (bad) roll jmp es insb push out (bad) mov or leave ret arpl icebp jp mov sbb mov in ja sti jl lret pop or movsl adc xor ret lods mov movsb sarb cwtl push lret lock dec push in sbb cmp fs pop adc or mov or aas outsb hlt movsl push cmp add inc pusha leave daa xchg loop insl lcall and mov out xor cmp xor aas jb sub and ret lret fsubr cld push sub data16 xor jp cmp (bad) jg sbb test fist scas inc dec adc (bad) (bad) jbe sbb sub mov dec xchg inc outsb cmp inc outsw cmp les or inc add push lods (bad) fild inc flds or push inc ja outsl (bad) push pop leave pop pop and and jns xchg cmc adcl repz jge mov mov ret rep or insb clc arpl mov sahf xor adc mov adc lea pop aas out mov pop ss pop add xor pop jmp dec push cmp cmp addr16 ficomp icebp (bad) push fwait pop test or cli mov fcom inc jnp std sub cmpsb ss push jno ret jae ficomp xchg ja and or jg sti add xchg scas mov cmpsb push xchg sub and pushf cld jp lret add inc push std dec jge loop dec addl mov dec adc lea es adc mov lahf adc push outsl mov mov pop jne add in das inc or xor sub lret stos adc es push jmp bound and fdivr push or test mov inc or (bad) cmp es inc popf lahf push je pusha mov cmpsl into stc rcll daa dec mov and mov mov ljmp inc rcrl mov xor mov cmc xchg in pop (bad) fmulp stos mov mov jne sahf pushf xchg in out jl out inc pop jl jo fs jb cwtl arpl fnstenv jcxz fimul icebp shrl xchg ljmp test (bad) add cwtl pop repnz jo les cmc out cmpsl test mov or mov cmp mov jge mov mov sbb jle pushl sub movsl sub cmp and inc jmp xchg rclb (bad) mov xor push dec sbb cmp dec pop fdiv push dec push xlat mov data16 push inc mov sbb pop adc in sub cmp jno addb fs out pop xchg (bad) bound mov flds out inc gs add scas out jmp sbb lcall cld dec pop sub adc and sahf adc lock mov inc sub lcall das cmp dec mov int rcr leave sub and lcall xchg xor inc sub (bad) sub mov sbb insb pusha jmp push push or gs data16 nop add push mov sarl adc pop cli pop movsb lds mov or lea loopne push mov mov (bad) sbb xor in adc and js pop adc xchg push (bad) dec jg imul mov (bad) sub lds add cmp dec xchg (bad) or add ret pop or lea dec xor cwtl mov cltd test stos and mov add push sub mov leave jno loop or notl jne std adc sbb dec jg sbb sub pushl jb data16 cmpl jne popf pop xor xchg mov jns mov bound sbb and and jmp xchg loope scas jecxz test inc mov addr16 es inc mov sbb mov add mov mov pop and sub and adc ljmp dec dec out xlat and push js sbb push les push dec pop (bad) enter aad and outsl add xor jns jecxz inc pop inc add fidivrl not add mov adc popf or add dec cmp aam push mov jp iret cltd jns nop dec cmp popf fucomip gs gs mov xor pushf cmp mov into (bad) push stc mov cmp test insl rcr out in outsb mov sbb mov pop in popa les icebp xchg mov push jbe out cmc xchg mov inc ss pusha sub xor mov loopne,pt jmp fisttpl inc push arpl roll ret pop insb insb hlt push mov movsb mov adc cs pop rcrb scas sub test ljmp les bound sbb in dec scas pop aas stc imul divl jnp cwtl jae ret mov daa and jg fiadd inc mov ret mov aas and cmp cmpsl cmpsl in into popa outsl lret shrb andl shll popa enter sub (bad) add mov push enter rorb (bad) lock and icebp scas push sbb mov into pop mov test cld gs jmp repnz mov cmp cmp enter dec notl xchg xchg insl repz int decb enter loope sbb mov jns sti ss cmp mov mov bound cmpb sbb push xlat or sub cmpsl aam int3 das outsb mov push push pop mov aad ret jae bound cltd mov cld cmp push cmpsb popf ljmp imul jne ds xchg repz mov or outsl aaa inc call mov testl js push out imul insb mov (bad) into lahf pop les lds mov xor into dec mov jo scas je stos lcall push mov mov mov ret popa (bad) outsl cs mov jno leave cld push mov mov (bad) mov int3 adc push test imul mov sub ss pop xor jne push call mov sub inc enter scas mov mov ret push push fisubl rcrl (bad) mov ds mov les gs cmp or jbe add fimull add xchg push gs lret scas sub repz mov hlt insl mov jne jecxz rcrb (bad) inc (bad) pop cmp add pop jb popa push stc mov cmp and leave push in add imulb pop popf pop push ja push fiaddl mov jg mov jno adc aaa pop xchg bound push inc in cltd call sbb test push lock icebp or dec mov add mov popa lahf test add xor pop fsubrs jae sbb mov int3 arpl add push sbb (bad) mov xchg xor rclb std pop shlb xor notl cmp jbe sbb pushf mov mov cld movsl mov clc sub sub dec push push sub lcall enter (bad) sbb xchg loope push insb inc inc and jmp imul mov cld ror (bad) data16 loopne in or pop jno ficompl stos xchg test pop clc test push in jnp insb aad aam cmc xor lea mov xchg mov enter data16 cwtl add and jg mov ljmp adc fwait jb xchg in push jno and lock cmp add push sub jmp push mov sbb sbb cmpsb and mov or xchg dec sub mov insl jb outsb fmull fcmovbe popa jge,pn (bad) test sub pop (bad) subl jecxz push outsl or jne sti ja xchg rolb or add in xchg (bad) mull xchg mov jecxz jo mov sbbl (bad) lret pop repnz xlat push test into and (bad) movsl xor pushf sti sub push inc movsl and test push xchg sbb roll push enter insb dec sbb mov in xor insl inc and jne xor xlat xor dec fwait pop addr16 repnz in aaa lock jl sbb add sub (bad) icebp nop dec out sub and in lret mov movsb jne inc lahf pushf decl sub adc mov dec push xlat pusha jno jnp adc mov (bad) dec inc js in pop mov pop mov add lods mov rorb sub imul mov pop hlt xchg inc jne add imul jmp (bad) jne jmp js pop ja ja jge and mov jg mov cmpsl jb push mov lds push adc sbb xchg rcrl shll aam dec sahf fcoms inc movsb daa test adc dec add xchg ljmp push xchg inc loopne clc test aad into movsb mov in mov mov push add xor ds (bad) mov in pop popf fwait aad stos bsf mov mov mov and out mov pop fsubrl test test jnp mov cli and test leave loope adc pop lods std lcall adc out decb je nop mov loope scas add jmp add mov test inc lods and sbb daa cmp fdivl mov leave in in xchg add add aam add xchg jnp dec cmp rcrb mov aam mov add icebp dec lret dec push and inc xorb mov cmpsl dec (bad) je das mov xchg test mov aam sub jmp stos adc mov loop fadds or inc enter or das jo out stos (bad) jmp or pop daa fldt pushl sub stos push fiaddl pop ja (bad) mov test jno xchg in les (bad) mov (bad) rcr jp sub (bad) rcll dec adc movsb pop rclb setp dec push inc pop test jg les or and popf pop add test lods insl or xlat push int mov mov dec lcall aam sbb leave loope push cmp aaa mov faddl pop jo mov adc lea aad lds or adc inc cs into pop xchg fwait invd jae cmpsb outsl xor or xchg loopne sub add bound shlb jb xor push cmpsb xchg mov dec das dec outsb insb add or or jge cli pop repz push daa (bad) aaa lret mov mov add or or test addr16 pop imull mov shlb dec jle pop xor nop jl testb mov fistpl add xchg ror rorb push dec mov lret cltd mov lret sbb rolb and pop push movlps pushf es cmp push cmpsl mov push cmp ss pop pop or adc hlt mov popa (bad) loope push mov into loope out dec test imul cltd pushf sub mov test lods fs lret stc push fidiv fnstsw imul xor mov or ror and dec jo into (bad) stc mov push fldl (bad) loope dec stc pop dec dec dec flds fwait cmpsb fldcw jo ja les push jg fstps imulb adc shll pop cwtl or lods inc jae in outsb std (bad) arpl cmp out adc aaa repz ds jne cltd add add test pop jnp or test call subb or out arpl pop idivl aad jmp fucompp mov add push (bad) and and sbb inc rcrb std pusha xchg xlat pop imul cmp xrelease push out xchg orb mov adc xchg rclb (bad) mov inc movsl icebp (bad) in test push xchg mov fsubrl mov adc mov mov and inc xchg push inc (bad) add xor into sub (bad) js xchg out push add push mov int sub loopne bound mov inc adc push iret frstor lret or add jne sub int (bad) or add or repnz popa sbb pop or lods push in sbb fcos aaa inc push add mov icebp lods jmp in in push (bad) aaa or sub mov out rep jge andl dec loopne test rorb pop jb scas fs rorb insl ss add cmp push mov and lods push and (bad) negb mov sub sub xchg roll dec cmp mov insl sub ja out add mov add xor or add mov mov fwait jns inc push jp mov xor push pop or nop insl dec out inc aad xor fist xlat mov mov sbb adc mov das inc xchg sub dec jecxz mov inc outsl out mov leave dec aam icebp dec stc xchg xchg mov inc ficom push lcall jecxz mov cs in popa and int3 (bad) sub xlat cmpsb in jno adc pop mov js or pushf clc jle push xchg loop rep sbb stc cltd (bad) ficomp sbb dec hlt jp cs pop sbb shrl out addl dec jmp or arpl dec pop or lods sub aad (bad) mov dec mov lods sub cmc and pop bound aam lods subb pop bound dec into movsb dec mov dec stos cmp enter ss in xor flds scas test lret stos cmp and fisttpll sti lds mov imul dec je scas int outsb daa and sahf jg dec sub inc xor imul adc and dec loope inc adc fldl sbb and test mov sub mov ret sub jb outsb stos shrl daa pop shlb dec fadd std mov out les leave test push dec jp adc dec movb mov add pop sub cmc cmp insb mov cs jae sub pop sbb jmp or mov cld mov incb subl pop adc shrb jl (bad) sbb leave xchg in inc out loopne dec insb or add fsubrs (bad) sar sahf sub add xchg or lahf jp xor iret jno push pusha lcall mov aad dec in mov add fs movsb pushf add mov inc (bad) ret mov inc lods cmc pop lret mov sub cmpsb add add sahf aaa rcll dec in test mov adc push inc adc mov jg in loope dec js test lds sub push js scas add mov lods insb int sub sti push jne ffreep enter cld movsl mov sub pop cmp (bad) xor sbb jae or ficomp or movlps (bad) jno mov scas mulb mov lahf cmp in mov mov or (bad) mov xor dec pop xor lahf (bad) mull cwtl mov xor sbb push lret cmp or movsb push mov mov fdivrl mov shrl sbb fsubrp mov test cld and jl sbb inc inc or or push pop test fsubl mov xor jne push pop mov push out xchg shr icebp stos sbb fisttp gs into stc loope pop test dec adc mulb mov inc imul pop scas jl imul push xchg mov pop nop test push mov pop mov sahf imul sti push popa ret iret xchg data16 push rclb lds adc inc add daa mov sahf xor and stos jp or in jl arpl mov test add mov leave negb mov movsb xor outsl inc lret leave mov lret dec push mov sub pop outsb xlat arpl push out cmp push mov (bad) sbb (bad) cld es arpl lea xchg inc pushf scas (bad) mov add xchg insl fdivrl push sar out sub cmp lods ljmp push lds jnp fsub ret lock and pop cmp in add int3 lea sbb pop adc cltd jne popa mov popf mov jecxz popa lret mov iret inc cltd daa pop pop imul lds lods ja aaa lods popf and xchg xchg xchg cmp jo (bad) frstor jnp or in sub push lock mov and fisttp mov add sub push int3 mov mov add sbbb pop jae add fstpt push cmc lea lods sti (bad) mov lret idivb xchg mov jne out mov mov rclb mov adc cmp loope sti imul push iret xchg icebp orl push push int fwait stos sub xor jno jmp fistp movsb sahf push mov scas cmp fadds mov shrb push xor lcall fild xlat dec lret rolb adc add leave aas cli pop xchg xchg faddp mov les movsb pop leave or jge sbb repnz lcall or jne dec cmpsl or push movsb dec add std scas test daa lock mov dec push add pop in dec (bad) std cmp jmp push jge and jp jnp rcll dec addr16 pop fcmovnb jmp call mov xchg or add lahf xchg sbb xchg inc movsl je (bad) dec xchg int3 and xchg js out adc mov sub cmp daa xor in imull or sbb push mull iret arpl (bad) rolb call ljmp js sub std outsb mov jge fisttpll push pop dec sub sbb mov enter mov sub pushf cmpsl mov pop bound lcall mov jl fwait mov mov aad cli push and pop or inc imul add mov test test inc xor sub xchg add popa cmp sub imul aaa insl pop (bad) fnstenv (bad) xchg outsb cwtl mov std jnp nop fnstcw or stos or push (bad) fsts jb outsb aaa or jl xor sub xor popf inc nop mov mov xor in xchg fisubl test in (bad) cmc or (bad) dec add jns jnp jge cmp fwait and movsb mov mov xchg pop mov add bound es mov push xchg mov (bad) out sti aaa jnp jl fsubrl bound imul outsb xchg cmp iret pop sti jbe push mov popw sbb test xchg addr16 cli clc clc xor jle movsb clc popf cwtl and add lret neg xor or cmp subb xchg push mov add xor fiaddl add in or xor imul aaa add fistpl addr16 mov mov cmp sub sbb imul mov mov stc pop cmp mov mov fcomp dec and mov into out mov adc (bad) aad neg jo xchg xchg cmp sbb or movsb loope loopne fldcw pop lods es sbb scas stos or pop out push pushf inc (bad) xor cld inc dec push iret pop cmp (bad) push ret das cmc jne movsl in sti test das int mov cmpl jno cld out sub and fidivrl adc adc cmc aad mov loop xor imull push xor or sub lods push out or push jle adc jle mov out neg adc (bad) cmp test mov mov arpl loop jne cmc mov dec lods xlat mov add icebp lds fwait scas add mov adc push xor les addr16 popf sub mov addr16 jnp icebp (bad) popf movsl daa sti out aad fnstsw dec jmp and addr16 cmp mov push jecxz push pop fisubrl push insb lods pop jge dec loope aaa movsl mov mov ret test and mov (bad) push lds push or push mov fninit mov jb enter jno or cmc jecxz push or mov movb pop and push mov jg push xorl rclb lods pop jp sub cmpsl dec js insb lret push mov adc cmp pop xor pop popfw ficoml inc negl inc out sbb sahf (bad) sti cltd jb gs sub lret (bad) lock jl std inc push hlt dec sbb xchg dec xchg aaa imul fidivl add and out and hlt sub sbb pop push cltd adc pushf aas lahf fdiv pop jmp inc roll orl (bad) negl dec xchg adc inc movsb (bad) (bad) jp jne push mov lcall jg mov ficom in inc cli pop push or jg sarl push xchg movsb cmp stos push and mov push int3 (bad) imul lods pop jmp ss mov mov fldenv lods int mov scas out daa push mov dec scas jg adc add test push outsb dec push pop imulb andb inc dec in xchg dec mov jl push rorb mov pop cmp xchg aas push lret scas int in mov into pop add lret pop cmp add xchg push dec mov push jle push fcoml jmp leave jno jge int3 dec fsubrl mov cmp cli je cmpsb lods rcr fldenv xor xchg adc and pop push cmp cmp and addr16 pop pop cmpsl clc sbb and sub inc lods sbb aad imul sbb adc aad fwait or addl int lds push daa cld nop leave sbb inc adc mov lods adc ret insl or js dec xor adc lods inc mov push xchg and pop pop inc adc fs or lock xchg jecxz and push adc outsl dec mov or sbb sti fstpt div pop insb mov jp xchg ljmp push and cmp dec in sub rcrb mov fistpll lahf cld push mov fnsave stc test adc and and hlt mov es sub into xchg adc ss pop sahf mov add mov (bad) iret dec pop mov in fadds cwtl jae mov mov or xor and mov inc cli pushf jae mov fistp jge mov pop es and cwtl sub (bad) fsts xchg adc test rclb inc mov neg mov fimull cmp mov cmp ss mov int lret or add jl pushf repnz fdiv lods push inc les hlt push cmp hlt fldenv test fstpl in lds sbb sub inc fldl and es cltd push lods sub loope mov mov (bad) sub adc fcompl das rcrl daa lds inc loopne mov sub xchg sub fcmovu jnp pushf cwtl lods jp xchg pop ficomp cmp subb jns (bad) jp sahf sbbl je cmpsb xor sub cmpsl shlb push inc mov sbb cwtl test test lock iret xor jmp insl jg mov add mov lods mov dec push mov pop (bad) pop mov jecxz inc or adc push scas jnp movsl (bad) fldl add sub lret inc nop out jnp mov adc enter xchg lcall inc ficoml push add out sbb adc (bad) xor and (bad) ja sarl lea sbb jmp push dec or xchg fisubl out or (bad) add adc jecxz rcl cs xchg adc xchg jle fisubl das or cmp push and fwait xor xor imul fcomip pop mov push repz fadds inc mov dec mov sub inc (bad) in xchg xchg xor mov xchg push and xchg mov (bad) xor jmp dec sub cmp mov sub xchg mov ret pop bnd into repnz push cltd sbb push adc in adc fmuls xchg insl scas sbb hlt mov mov lcall out outsl int3 mov and outsb sub inc fnstenv mov jo scas cmpsl pop arpl mov push or int3 (bad) aaa aas js dec and or repz mov sbb popa pop shll jmp iret cmp xor out push dec mull aad xchg loope xor push sub aam fs out add scas lea scas xchg xchg fild lcall dec xor fwait les mov das (bad) jp jle mov mov out inc push add push rclb fidiv lret out mov and out cmpsb mov jecxz lods adcl adc sbb bndldx push sub aaa mov enter xchg (bad) (bad) xchg iret mov daa fisubr sub or inc cmp inc sti dec add push repz shl (bad) imul flds icebp xchg mov enter (bad) pop cld cmp shll push xor add jmp in jle aas pop out fcompl pusha (bad) sub jle xchg or ljmp mov xlat rcll mov mov into jnp push stos mov jo bound sbb pop pop pop mov sbb pop pop mov push dec lds or jecxz adc call ja dec insl out mov lcall or scas pop add stc fbstp stos mov fnstenv pop (bad) test jae repz xchg mov (bad) cli mov fldenv hlt outsb (bad) stc adc sub xchg mov (bad) addr16 push cmc dec or cmp popf mov mov subl movsl in aad adc out inc dec pop dec sub jle mov cwtl outsb gs push jno sub ret rcrb pop clc call aam dec inc lods add push fsubs outsl gs and je loopne sub push test in inc int stos jo stos cmp sub out fistl jmp mov jno pop push and ret test pop pop aam movsl push inc mov (bad) inc jno mov xchg mov aas fs fldt xchg xor dec sahf loopne sub mov (bad) push xchg mov loop cwtl jb mov cmp fidiv scas inc jecxz xchg inc imul pop aad sbb into fisttpll pop cmpsb movsl outsb out jae hlt lods add test mov inc cwtl xchg pop mov lods jge pop imul sub or mov enter pop mov dec sahf xchg push cmc xchg pop mov jg insl orb mov mov jns mov into push lcall loopne (bad) neg jbe,pn pop pop stos loopne add ja adc mov movsl push out jecxz mov lods adc sub sahf in js sub insb insl mov rcll jbe fistpll and imul jge cmc ds in fld push xchg cmp mov or movsl (bad) jae sub adc adc sub (bad) sub aam rcl or xor sub mov mov sbb push in or fnstcw sahf out lret iret xchg test sub add sub cmp add cs pop pusha adc inc mov popf jb xchg lret xchg xor dec xchg add aam imul or push jnp lcall mov and and push cwtl inc adc or mov div cmp xor inc mov or repz dec dec inc sub lret jae stc jnp aad adc aam dec repnz repnz inc enter push leave xor test in nop clc jmp sahf push pop sbb inc add inc ljmp out mov fnsave push pop loop sub push fwait inc adc xchg and mov xchg jnp and cmp addr16 sbb aad and lods es jg (bad) xor inc sub mov xorl xchg fsub push fmulp mov jne pop dec jnp or or pop or and jne pop aaa push rcll pop ret pusha cs mov dec mov stc lea xor ret in cmpl repnz push std aaa cmp xorb pop cli mov ja lods add int adc mov sub mov inc mov outsb ss out fs mov cmp test inc js insl mov add mull xchg loope inc aam or bound repnz arpl dec pop sbb push and lods scas mov sub ja jmp jle pop loopne fbstp mov add push jo mov in xor mov sub stos dec pop inc push movsb rolb pop jb xor loop mov mov push mov sbb add push dec mov xor fbstp outsl cmp lcall lret (bad) mov das (bad) and xchg or rorb jl bound lcall or addb hlt (bad) mov sar push orb mov pop inc xchg stos ja fdivp dec jl das fstpl mov mov or mov fcmovu push mov jl adc mov pop aad stos scas lea int3 int3 inc (bad) mov adc sahf push fistpl add aad xchg xlat sti lods add shr jge pop dec or mov push xchg mov xor roll rep div (bad) adc int3 mov cmp mov jno sub cmp mov jno dec adc mov loop add push mov lahf push sub sub fs sbb or and jo jg outsb repnz mov pop lods jl in gs test add dec cmp jno test stos shrl lahf vshufps scas inc fnstsw imul clc cmp lahf scas mov xchg dec adc mov lods pop mov mov sbb cs xor xchg mov pxor mov xchg loope lods jmp stos jns repz mov lahf jecxz cld mov outsl push sbb (bad) not mov fdivrs les pop pop sti or sub xor sti jae lock mov insl mov xor push mov push loop imul fadd test call dec sub fld jp popf mov imul call xor adc jb je jmp test ljmp data16 (bad) fsubl push or loopne pop mov jecxz cmp imul push mov imul cltd jo sub ja mov (bad) xor (bad) js iret test lds fcmovu inc outsb xorl jmpw xchg mov adc mov or jns inc mov sbb shr xor lea dec and loop std xor into mov mov mov cmp mov outsb push mov and adc push stos flds fisttpl sub ds push dec lods sub inc inc sbb push sub popa sbb or into cmc test add andl loop sti mov sub fistpl mov sbb jge movsb sub (bad) insl cwtl insl push cmpsb test rcr bound das ret sub jp cmpsb decb insl cltd in loopne arpl in inc pop js es sub jp iret fldenv cs dec mov ret pop call cmpsb sbb test pop mov sub mov stos nop adc movsb test xor mov roll push sbb dec test mov icebp xor xor dec stos psubsw test mov icebp jns mov pushf pop mov mov inc hlt outsl sbb push insb cmp sbb pop idivb jecxz das pop (bad) cmp xor and add dec dec test repz jge aas mov ds sbb mov add outsl test (bad) adc jmp or mov xor ja js js mov (bad) inc adc sbb dec (bad) lods fdivr lock imul stos rcrb mov js push cmc xor cli pop dec into and and sub loope sub pop lds sti ds ficompl pop mov orb jne frstor lock hlt fisubl and push or inc xor or xchg xchg jne in aad sbb fs aaa lods pop loope dec mov mov fstpl inc mov shlb xor stc aad mov jbe push je lods ficompl xor lahf or xor push fcmovne dec adc test fnstsw lds push js mov repz push cmp punpcklbw push dec pop ret out mov fidivrl jle dec push cmp lret bound (bad) xchg sbb imul insl cmp push daa push jnp andl mov or je (bad) adcl sub out inc hlt mov sub pop mov mov or pop adc imul lods scas test xor cmp or jb addr16 dec fcom lods adc pushf mov cmp call fdivr cmp mov fdivl jl,pt inc push xchg inc add fsubrl inc jae repnz ja mov or scas jno stos in lock daa iret inc jge jbe fwait sub mov pop dec or adc pop prefetchw sbb push insb (bad) push sbb inc push gs aad mov (bad) jnp lock data16 lcall mov les cld nop stos add pusha cmp ret (bad) push jle sbb jo test ror add mov push jmp pop jo stos mov mov leave push and mov repnz or sbb rcl jle pop push loopne fcoml or scas add sbb rcrl xor ret jno sub in orl jle cmp lret ret mov mov pop leave cmp xchg loopne inc cltd leave push jns sbb dec fistp xchg sarl cmpsl jo lahf (bad) loop (bad) rcr pop mov sub dec and cmpsl jne sub loop mov cmc int3 xchg pop lock mov mov faddl imul pusha loopne in sbb dec xchg pop (bad) fnop iret aas je xchg mov and cltd rolb dec or bound fs (bad) and add cmp sub ss test (bad) pushf push int dec jp jle pop xor jge mov jmp push push cmp fucomip ja sbb jmp mov out pop call out mov test inc notb xchg imulb bound inc fsub cld lods jne sbb mov fiadd inc imul into push (bad) push mov outsl stos fadds mov (bad) cmp rcrl sbb adc inc add fidivl (bad) es push push loop jns dec sbb jp std lcall inc mov movsb mov jmp imul add mov cli je pushf data16 xlat mov xchg mov ret setns mov jle adc add adc cmp fstpl push mov xlat nop cmp pushf jg sub inc movsb pushf scas cmp add scas mov rcrb or lds (bad) push iret pop enter or or inc fnstsw outsb mov cmp cld jmp mov and mov sbb add mov mov lea js mov jb mov pusha add scas cmp jo int3 cmp lahf adc jae pop lret cs lcall xor xchg bound fwait sarl jge mov out cmc mov pop push cs sbb pop adc cmp add mov sbb out pop fucom pushf add and and or or xchg das and inc (bad) repnz cs xor xor dec scas add mov notl lcall dec inc jne imul das daa push or int or js fmuls pop add fldenv divb jge jg mov stos adc popa cmc cmpsl add ds bound cwtl shr mov imul sarl push sbb scas mov dec fildl fsub mov mov in jp fadd push dec testb add cmp ds jb jmp in mov cmp rol pop aad mov xor sbb lods (bad) sti dec mov in mov xchg (bad) aas nop push in sub add push loope dec frstor inc (bad) or inc lahf cltd out call xor test xchg sub call jl cmp iret xor lahf repnz push movsl push push out inc sub sub add dec inc bound dec fsubl stc or sub adc pop add xchg js jnp lods sub mov rorb call or aas push cmc jmp pop clc imul or stos xor pop sbb jge or loopne and (bad) in cmpsb xor shl loop shrl mov aad addr16 or loope cwtl add dec mov std xchg jo jbe aad inc imul cld call xchg addr16 leave (bad) pop jl sti mov mov jle pop (bad) xchg enter (bad) xorl (bad) fidivr test mov test roll test mov daa mov inc test sub outsl xor xor jmp cld ds cmp jmp inc lds push leave out stos rcrl sbb push mov sbb cmp mov xor jmp and adc sbb je cmpsb notl push cmp hlt and jns jbe lea cld and mov xchg out inc fstpl fbstp jno cmc in mov call mov insb pop cmp xor jle cmp cmpsl mov je fs pop lcall xor je cmp jnp popa cld cmp add ficoml shrl in and outsl mov sbb pop dec mov enter dec adc leave or outsl pop clc pop lock sbb int3 (bad) cltd jp in mov enter sbb imul call inc pop push aaa or (bad) or cmpsb loop mov and out fist adc ja push daa add mov push and push mov mulb push push into inc aas adc lods jg stos mov or aam pop pop push mov sub cmp and cmp inc iret adc std jo sbb cmp cld (bad) or mov (bad) lret aad ret and push je das loopne jo jg dec cltd dec sbb jecxz je dec dec pop lods xor icebp dec shlb outsb test xchg cmp repz push loop xor mov imul add sub mov (bad) hlt je in in mov jo xchg test jno fnstsw and es cmp inc sub cmp mov xor jbe xchg insl fldenv xchg sub xchg int adc imul inc mov cmc mov mov xchg and push xchg and mov push mov mov xchg popf mov jmp add arpl lds add ror lods nop insl and push addl sbb lret repnz push mov cmp push pushf mov hlt jne xchg adc aam (bad) xor movsb std rcll (bad) je dec push insb loope cmp cmp adc (bad) test sahf jp add into or stos mov (bad) mov lret decb rclb mov xor add xor cmc mov jbe fdivp daa rclb jle jl xor or jo (bad) or jne xchg fs xchg sub adc push sbb add movl inc and (bad) xchg inc jns fnstenv ret (bad) ficomp lahf fcomp mov pop dec and cmpsb push leave dec clc imul inc cmp or xor out jne iret iret aam mov xor jbe mov stos push cwtl ss (bad) mov sbb pop negl int rcrl lds movsb jne loop xor push fisubrl int3 data16 out cmp lahf cmp mov ret (bad) rol (bad) arpl jns loop repz subl fimull pop pop ljmp stc or mov mov push (bad) jnp and push icebp cmp std repnz push mov decb rcrb fisub ret and sub ror ffree cmp jae in inc dec mov daa es mov xlat xchg loopne fdivrs jecxz out fimul fnstsw ret jns push adc cli ja into and std insl out dec repz mov add jle aam into movsl repnz sbb out sbb ja in push push xchg jbe jb fiaddl mov mov mov (bad) call lret aad or cmp pop dec stos loopne and cli xchg dec add mov mov (bad) aas inc stc enter push xchg (bad) and clc or out jl repz es pusha jae icebp pop dec push jp,pn mov insb sub sub hlt push pop inc mov test cltd push insl mov cli stc inc jne loope inc xchg cmp sbb xchg lds leave or mov pop and xchg xor or call push adc (bad) jne repz dec dec jb pop inc xor cmp inc mov lcall (bad) xor mov jno (bad) cli mov sbb fdivrs ljmp cmp scas jle enter scas adc inc sbb aam movsl dec push (bad) lock in sbb cmp mov jge pop mov or mov xor scas aaa les mov sub je jp jnp xor cmp inc aas fs adc nop mov add mov inc mov lcall xor popf arpl and stc cmp push mov insb mov mov test inc (bad) icebp xchg test leave add out mov notb aad push jp repnz inc mov push mov inc (bad) mov sub and or icebp and push hlt add add sub push cmc fistp bnd xor popa pop sub add pop jecxz jmp out enter mov insb out xchg bound and xor jb cmp add cmp lcall mull cmpsb int3 aas cs push and mov ja mov ret pop pop dec push addl shll pop dec fadd and adc pop add lret outsl push popf out jne mov incb sti (bad) in or insb pop mov jae mov aaa fwait sub jae push stc mov mov (bad) mov cmpsb add bnd ror adc movsb and dec sbb cld xor fisttpl cltd and adc outsl icebp enter je fstl and inc shll fildll pop pop fs test mov pusha push negl loope jge das dec or mov cs xlat pop inc sbb xor out xchg dec pop test jecxz adc aad lret ret push rcrb loopne adc dec icebp jmp dec hlt push int3 insl mov das lods push sti sub jo xchg inc push jns inc test gs xor push sarb mov fistp push inc jp inc aaa ficomp lret or ret pop in xlat cwtl cmp or leave xor aam dec pop jmp (bad) jae adc cmp sahf fwait jne into and push fadds lret adc push popa scas ds mov and jo or (bad) xchg xchg xchg jp fstp and jle (bad) shll fistpl enter clc rclb sub lods adc sbb std push insb dec sbb mov jecxz out lea mov insb or and movsb lods pop stos insb iret test dec jge xchg insb sub push jmp cltd fldl xor scas incb test pop test dec pop das jns lcall lret adc imul imul mov ss fisttp into mov adc test movsl arpl (bad) mov mov (bad) call pop mov pop push testl cltd jge sbb std jle inc jp xchg xlat xchg imul hlt in push int3 test adcl push rol mov rol fild dec cltd sub jo ret mov adc mov es call lcall jmp je dec mov and add ja mov mov mov loope mov sub pop jle pushf and int movsl lods stos push add jnp xor pop inc or inc adc aad mov adc push mov adcl add (bad) jo xchg repnz das xor and pop xchg add push and cmc push nop das xchg mov dec mov pop jge fcmove cwtl lgs clc in sbb xchg inc test inc push adc inc out test mov push jb pushf sbb leave jl addl lret jnp pop js movaps or inc sahf fmull jl jne pop (bad) bound in lea lahf fisub or leave and iret pop pop insb dec clc in lahf cmc jno arpl add xor gs data16 mov and scas arpl (bad) fildll pusha jge int3 xchg sub adc cmpsb xor cwtl rcll sbb lcall xor lods lcall sahf repnz sti mov lret shrl pop jnp dec adc popf pop jb sbb stc ds inc dec outsb sahf xor pop cli popa int jne js jmp xchg mov out cli and jecxz pushf mov jno xchg jae rorb cmp gs and ficompl pusha push xchg out push mov incb pop in mov add lds push fidiv shll outsb lods dec aas popf pcmpeqb sbb sbb in cmp push stc rolb pop into xor int inc lret adc jp popa fdivrp and jb cltd cld add adc mov sarl int3 pop and inc ret rorb lods rcrb xlat xchg jnp jge mov popf (bad) (bad) (bad) cltd movsb adc jmp mov dec shrb arpl push adc sub stos inc rcrb jl or lods jae loopne pop and andb sbb mov mov stos pop mov js ljmp into leave and mov mov or xchg inc mov rolb sbb jl cmpsb mov jl scas cmpsl leave jb jb lods and mov lock dec mov pusha dec mov pop daa xchg test sbb es imul stos add dec stos test xor test mov shll iret bound push adc add insb iret jb cltd dec imul mov or roll out dec push mov loopne mov pop test jns aaa fwait lret sbb stos aad inc gs sub and scas mov mov add pop or shr cli dec mov (bad) push jl jae mov loop mov icebp fsubrl lods xchg imull repz insb mov int3 vsqrtpd pop in daa stos pop dec mov rcrl xchg jns xchg stos or mov (bad) icebp ficompl hlt sub aaa outsl jae imulb in insb dec xchg push adc cmpsl out pop cmp mov (bad) in pop push inc loop (bad) or sub inc and cmp xchg sahf mov jbe or cs das mov aaa outsb mov loopne fsts (bad) sbb hlt gs push dec fstl insb inc ss pop xchg bound ret mov cmc movsb ret pusha ja mov clc fistpll out jge adc int xchg pop lahf test stos (bad) sti jle cmp jae adc fwait popf inc cld mov out xchg fldcw out out jle rcll mov pop push lods pushf sahf and add sub (bad) xchg xor jmp jmp cmp pop lock (bad) lret dec (bad) dec inc (bad) mov inc addr16 fsub scas ret push jnp push aad inc add iret sub xchg pusha add pop pop mov lock les mov xchg std clc pop cmpsb bound test sub test (bad) mov scas lods shlb aaa inc pop fldenv xchg ljmp (bad) push std sub inc cmpsl or push jo mov inc cmpsb test cld xchg mov dec int out xlat orw push xchg add sbb lea lahf and xor sbb popa mov inc mov mov movsb lods cltd cmpsl adc sbb push or push je xchg movsb stos jp push icebp mov (bad) pop es sbb xor repnz lods and mov lds and jb cmp mov sbb mov xchg push adc ret push pop imul shrl stc (bad) jmp (bad) in mov push cmp push xchg ret (bad) (bad) and sti or jle dec sub stos mov iret cmp pop ret or xchg negl push jb in lret rolb ror ds sbb rcr dec cmp loop or mov adc xchg mov repz in jo fsubl xchg (bad) push dec xchg xor call cli adc (bad) push fucom inc and in mov and hlt pop stos xor cmp pop test jecxz mov mov mov stos lcall push andb (bad) mov loopne call imul sbb fcomps mov out and clc divb into sti int cmpl lret popf lds cmp add cmp dec (bad) call cmp mov loope loop ds fwait pop (bad) jmp sub push xor nop (bad) jno sub shrb fcompl pop jo test rcl sbb push shrl loopne sbb outsl xchg hlt mov jp xor xchg js inc call int3 or je pop push dec movsb fdivs fyl2xp1 push aad pop cmpb das (bad) rcll mov pop sti out loope mov add sbb fidivl enter add loop in xchg lods out subb fstpt stc and lds mov mov (bad) jnp mov pushf mov (bad) (bad) clc add dec jae,pt push mov sub jge xor cli jae rclb scas dec iret popf push cmp mov xchg add jmp dec push call push lods pop mov xchg cmp mov dec push mov ds icebp cmp inc adc cld movsl dec pop stos aaa gs outsl jg jge data16 jmp (bad) jns add js clc mov dec loop rcrb fnstcw stos push and test aam in cmp adc int cs jge inc jge out jp mov sbb fisttpl test add cs pop into xor lcall jle subb addr16 into pop int aad mov sbb adc xor in data16 xor mov ret jp push (bad) subl pop sbb mov xlat popa loopne in lret test mov push fcomi or hlt aas adc cmp cmp dec inc sbb xchg mov cmpsb xchg push xor popf mov gs add mov add pushf adc cwtl xor push sbb test mov mov jb sub (bad) jmp pop and daa cmpl push pop iret push cld fimull sub sarb adc frstor pushl mov cmc pop sti (bad) or fsubrl pop dec push loopnew push push pop fistpl xchg xchg or pop and mov xchg mov fsubs aaa test push pop (bad) mov pushf mov push jle add loopne lret jae add xor lcall cmp pop mov jne pop jle fbld mov repnz pushf (bad) mov inc sbb and mov push inc gs cmc cld fadd mov dec adc loope cmp shlb or push std (bad) pop mov clc sahf scas xchg cmp iret pop insl in push inc (bad) loopne pusha add fiadd mov jae fstpl xchg xchg (bad) or mov adc jns fsubs dec dec dec push pop mov jge jb push push lods push sbb cld insl stos jb mov jne sbb shlb dec push sahf out mov jae into or loope adc jns add xchg inc cmp cli adc js sbb movsb and pusha loop repz lods add inc jl inc cli stos add (bad) in in push mov mov (bad) lahf mov jl or xchg mov or jle xor ret rorb pop loope jno stos (bad) ja lock in cld mov int xchg mov sti ljmp and nop imul data16 lret ret add je and mov mov lock (bad) mov mov icebp inc fcomps fldcw cltd push test fdivp sub cwtl arpl stc js test mov aaa lcall fstl xor (bad) je inc mov fdivr xchg neg mov xor inc arpl stos lret cs add loope test scas nop mov sbb idivl test lds jg sub pop add push inc xchg aam or out adc outsl rcr loope mov ret adc add xchg adc popf adc in xchg mov outsl adc es sbb inc mov push sbb jle mov mov jo lds mov push (bad) push icebp xor loop cmp sbb ds ss loope ret jmp xchg notb mov push fidiv xor jg in stos cmp jno stc xchg inc pushf popa call psubq add mov nop xchg push push into dec jle cmpsl pop cmpsb mov jl dec inc xchg and mov ret jle push outsl dec xor mov fsubl shll push rcr fldt mov lcall ffree dec cmp ja xorb shrb dec pop dec xchg xchg jo xchg mov test movl xchg and sbb scas xchg push add aas fcompl sbb imul stos rorb (bad) lea test pop dec push dec pop pop or out add sti (bad) aam ficom lea lods rclb incb movsb push dec cmp cmc pusha scas lret imul js xor and jle sbb aam jae es and shr xchg in or dec (bad) mov stos les test push xor shr xorl sbb std movsl mov or sub add clc lret lods cmp jae inc add inc xchg adc ljmp jp in mov push push popa lret loope int pop loope pushf aad fdivl pusha adc int pop cmp std test cmpsl mov std lea lods jo mov cld fwait inc data16 outsl fild jmp pop cmp into sub lcall mov xchg outsb push cltd testb or lock mov and pusha mov out sub test adc jae dec sub fistpl push pop lcall call jp dec xchg push adc jge jge cmpsb pusha add inc adc pop negb scas xor push gs mov aad push in cld (bad) into sbb cwtl xchg loop lahf xchg fnsave rol and jmp push pop jns (bad) jnp fldl outsl sbb ss in inc mov ss leave int mov daa (bad) mov sbb dec or mov ret mov dec pusha cmpb sti test imull enter push scas (bad) aaa scas xchg mov mull xchg fcomp xchg subb mov enter lock fcmovnb out cmp inc cmovne insb sbb xchg push ficoml pop imul imul add push push outsb cmc and cmpsl jp jo push push jbe jae sub roll loope andl xor fisttpll inc lret repnz inc mov (bad) in lret sub sti addr16 xchg addr16 jb popf test sahf fsubs push sbb repnz repnz push mov pop aas sub int3 push dec xlat out addr16 pop test jecxz adc cmp dec cmp daa dec (bad) or in cwtl in jns jbe sbb add (bad) jae (bad) je push int3 and lods mul add arpl cmpl lret rcrl or add out add fmuls pop test xchg loope dec stos adc jbe (bad) sbb lcall sub bound push sbb mov (bad) rol mov push jmp sbb out xchg daa test int3 push lahf (bad) (bad) xchg sbb sbb mov inc or idivb test jle and mov fwait pop (bad) mov es pop mov xlat es push jo xchg pop cmpsb dec subl add or pushf leave pop (bad) inc aaa int sub into sbb and push cwtl loop push push stc or mov pop sbb mov insb xchg cmc ror ret or lret mov and or iret cmpsb dec jno mov ljmp mov push xchg sbb mov ja in aad fsubs dec je sub xor pushf jl jo mov test int mov xchg mov pop or fdivp arpl pushf lods xchg xor subl fldt rol xchg stc in idivl xor dec mov jnp int xor inc and scas out bts push sub pop data16 push stc std cmp clc lock jb mov xor inc sub pop mov inc test (bad) daa ret jmp fstpl sti mov cmp sbb sahf mov std xor test loopne daa ret pushf imul (bad) xchg pop call shll fdivl adc lret mov mov adc int adc jl enter stc dec mov sbb cltd (bad) xor and int3 ja ja sub call sbb jbe xchg xor mov sub xchg jno xor cmp pop xchg mov mov inc or cmc mov sarl push incl or outsl jnp call sub cmc xchg in mov test push mov in hlt pop or daa sbbl addr16 in cmpsl sbb sub nop cld shrb sub in fs sahf push sbb cmpsl add mov inc int3 pop mov mov popf inc mov xor cli mov (bad) (bad) movhps (bad) fisttpll mov aam subb and mov and jbe in mov add push adc mov and stos cmp movsl xor xor xchg repnz push sub sub sqrtps insb lcall sub mov and and sarl xor cwtl xchg gs out bound dec sbb cmpsl fnsave test jl pop sbb mov les jb sbb in adc mov leave sahf jl or adc cmpsb jl sbb sbb pop push sti jl pop repnz cltd and mov adc mov mov jmp and lock sbb fdivrs sbb es mov xchg mov neg movsl add mov xor xchg cmp in pop in bound sub jle ret mov mov sub and dec fdivrs mov cli nop cmp dec or and sub imul xor sbb mov lahf pop jne inc stc dec mov push or insb mov popa bound jae xchg ret inc scas int loope jbe sti sti int mov xor sbb jne testl into and lea in movsl cmc dec (bad) (bad) sub mov mull popa out xor or xchg cmp jns cmp ja ds enter and xor inc jb push in sub adc sbb jmp ljmp fwait push pop cmp shll (bad) pushf aad mov sbb loop dec jo push cwtl dec sub push and dec sahf pop jno sub ror or and xchg mov pop std mov int cmp sub jl rol xchg fs adc aam movsl or fcmovbe push mov int3 int3 aaa inc and jmp inc popf fldcw aas popf push popf adc pop popa inc mov loope dec adc mov cs rcr fmul (bad) outsb dec (bad) cmp in push iret cmp movsl sahf and pop jo out cld sarl fistp cmpsb pop xchg dec aad dec clc imul pop popf mov mov sbb and mov std mov sbb test lods add movsl jns mov mov mov xor inc das add mov push jbe push scas mov movsb arpl sub enter and les andl arpl jns pop js lret rorb pop scas (bad) repz xchg rorl mov scas mov fs adc aas pop es rep outsl xor fildll cltd ja leave or (bad) mov xlat in lret gs les xor fcmovnb sub adc xchg test gs inc adc les ja pop sub push cmpsb lock out push pop nop int cli sub rdmsr iret mov cmp seta (bad) iret test mov mov sbb adc bswap iret mov ret inc repnz je or pop fnstcw adc dec sub (bad) stc out inc push and sti ja dec (bad) mov pop inc out fcmovne scas push or arpl lods hlt (bad) xchg (bad) cmp repnz xor pop mov push ss vxorps lods push scas add pop (bad) ja dec pop pop ds ss mov in mov std aas inc pop dec xchg arpl (bad) jnp push sbbb xchg adc lcall outsb fisttpl ret xchg gs mov icebp lret jbe ret (bad) insb decb jnp push (bad) cmp call stos scas and mov mov pop and mov adc mov fildll stc push std cwtl popf loop sahf push xlat add ds jl add call das mov insb mov sub dec addr16 jmp cmp dec out push hlt and add mov stos mov icebp into xchg jp cltd mov mov mov scas popa and lods sub lea les inc (bad) sbb sub in lock xlat cs lods dec mov mov subb adc adc stc jge push (bad) xor dec loop aad je out xchg cli pop push mov (bad) sbb add lahf dec lock adc fcmovbe xchg test push cmp lods out cmp mov cld scas push repnz loope mov dec cmc mov jnp bound mov mull add mov xor cmp jecxz cmpsb icebp into rcll dec mov es inc mov sbb pop jne in sbb std push cmp movsl and xor lret mov (bad) mov xor xchg sti push dec outsl aad push stc and mov or dec add jmp add push push lea push sahf aaa and dec outsb fdivs cmc icebp sbb and mov fstl movsl push in add sbb fucomip in sbb pop xchg lock adc or lahf hlt call pop (bad) or mov and daa xchg out fsubl mov jne cmp nop pop ja jbe mov sbb cld fidivrl adc add add dec dec rorl adc mov dec adc mov scas sbb sbb movsl mov andl fwait mov test clc loope jo pop xchg lret (bad) leave mov ljmp push mov or in inc pop sti cmpsl and call arpl xchg cmp in mov jge xor int pop or pop fnstcw orl enter adc test lahf pop mov sub int xchg and ljmp jb jecxz pop and lock xchg mov out lret adc loopne dec or cmp dec repz xor mov sarl test fstps addr16 aad cmpsb jb aas and push (bad) sti push or aad mov cld mov mov ja adc and sahf push fistp cmp pop sub jb addr16 out cmp ja jmp mov es out in aaa mov mov and pushf or mov jecxz sub fwait mov xor fstps (bad) adc sub push mov xchg pop das mov arpl xchg jg pandn adc (bad) mov mov sub leave push ja and arpl lret fsts adc mov mov dec dec xor out lahf sub dec lret (bad) aaa and dec clc cmp or dec inc repz inc andb xchg mov push xchg enter into out enter push inc or dec add inc loop pop or gs pop push xchg inc dec sbb out popa (bad) cltd and push lea dec inc shll mov jp (bad) ja pop xor mov xor inc nop scas insl jl ret or jg cmp push test les cmc fstpl mov push cmp mov test in sbb cmp or movsl (bad) sbb cmp push std adc inc sbb iret push cmc lods push fprem1 aaa stc test stc sbb pushf mul pop arpl mov mov lret out and psrld rcrl push jl mov mov add popf (bad) dec push bound lock push icebp (bad) cmp mov inc scas xchg (bad) xchg out (bad) cmp and ljmp sbb sub add out pushf out jmp js aaa cltd and and cmp xor aam pushf sbb push mov inc (bad) mov outsl out cmp aaa in add ror inc negb sahf xchg fstp push inc mov call in cwtl fnstcw shll adc (bad) out xor ss push je (bad) int3 test jecxz orl dec fisub (bad) jno icebp and push clc push lock jo cld enter mov or aad push sbb insl in push fisubl lods cmp (bad) clc mov repnz bound inc mov jle (bad) fnsave out divl (bad) sbb xor cmpsl out test loope xor notb sub mov leave add xchg push push cmp adc hlt and insb out cmp mov aam cmpsl adc mov int3 push out gs xor push cmc int or enter xlat cmpsl pop repnz fstl cmpsb xor lea stos mov test fisttpl xor mov add cwtl add pop mov fwait mov mov fwait mov call push sbb mov jnp jl out cmpsl icebp jecxz sbb repnz xor pusha nop mov xchg xchg mov enter cltd call cs insl mov push xchg add ja outsl push xchg gs fdecstp adc (bad) out adc xor inc push into ss mov aam into xchg fimul mov pushf insb and push nop add ret pop ljmp sbb sbb aam dec packuswb mov lods jne cld enter stos jnp inc js xchg mov inc (bad) jae in push (bad) sbb fxch int3 cmp xor and mov clc leave aam lods ss adc icebp fninit xchg or js cld test and pushf sub mov cmpsl loop lock cmp scas popa cwtl add pop incb int3 fs pop jne or scas fimull jecxz adc je xor dec sbb or ss cmp outsb hlt sub outsl (bad) movsl push lock push xchg xchg push repnz xor call push data16 cli pop fs sbb inc mov push jne cmpsb fwait jns lahf pop es or insb loope mov dec xchg jle test xchg pop test pop pop and std repnz js push jo pop or iret push aam mov or mov jb mov sti js (bad) or push cmpsb aad xor pop js pop jmp mov dec cmp jp iret ret xchg and mov mov aas push xor mov adc test jecxz popa in divb sbb push ljmp sub es fs dec mov add push cmp dec pop mov fnop cld and lcall push jmp xchg icebp sbb call push sbb push push out mov cli call fist (bad) jecxz (bad) loopne xchg sbb dec cli rorb fstpt aad cli fwait repnz fs push sbb jno adc insl lock cwtl sbb mov add add fistp lods or inc sbb in sarb fs mov pcmpeqd mov mov lea les mov inc mov cltd into pop xchg xlat mov sub dec in (bad) sub shlb lcall out push mov dec addr16 add cmc rcl sbbl scas std dec adc pusha mov es fiaddl inc fsubrs cmp out call loop pop xchg push in xchg push mov cmp leave pop adc sub xchg xchg stos xor popf cmp cmc negb adc xchg out xchg xor bsf js (bad) push xor cmpsl jo nop inc cmp inc xor movsl rclb iret (bad) fldlg2 sub mov push push or lods cld jle mov rclb jbe or pop adc inc scas gs inc movsb sub daa adcb push cltd lea mov lods in xchg add outsl pop xlat or push cmpsb addr16 call sub mov cld inc enter fisttpl int addb pop xor js sbb xchg or aam jmp into dec sti aas repnz jg lret out imul flds xchg loopne ss or aas sbb mov inc jle (bad) xor std xor scas mov adc lock inc in dec jl xchg int3 mov xchg cmp add std mov ret mov mov jne pusha rolb stc push push adc jl fs xchg push push jle dec push sub push dec or pop inc cmp idivb dec (bad) icebp imul jg imul lods pushf (bad) xchg or sub jl jmp lahf scas sti scas js push and out repnz cmpsl push hlt mov mov ret scas or mov cld inc mov bswap sub sbb jmp fidivr pop stos jne inc xor pop jecxz loopne xchg jge stos jo and add adc sbb js inc pop pushf mov push and pop mov dec xor mov mov pushf mov lds pop dec pop pop mov xchg stos push sahf and xchg repnz mov cmp xor flds jg adc in push xlat sub outsb sarl test jmp test adc test lret and setg jmp inc cmp and mov hlt shrb sub adc ret mov jmp in (bad) and sti pop clc jp xor jne dec hlt jecxz mov popa inc push xor sti movsl std add mov push lods cwtl inc gs jnp cmpl xchg push mov pop cmc adc out xchg in (bad) icebp ret lods popa dec jno notl cmp nop loopne jnp push adc inc into pop jp enter aaa aad mov test mov jle xchg xchg sbb inc sbb imul xchg lods adc mov subl add xor mov jbe es adc ss dec jnp lahf push cld push jb sub pushf cs push ss imul dec cwtl mov pop in pop push stos mov enter or cmpsb (bad) adc movsb cmp pop lods xchg hlt (bad) dec push mov shll enter inc sahf sbb cmpsb xchg pop sahf js shrb das inc rol xchg sub mov addr16 hlt fisubl into and and mov cli int aad lret jecxz fwait xor fdivp out and rcl inc xor dec cwtl dec or cmp dec xor cmp inc cmpsl jns lcall ud1 and test add (bad) pop sub add or bound loop push sbb fidivl movsb push inc push (bad) ret xor fsubrs xchg sti es xor outsb push mov mov or call or repnz sub fucomi fcompl fisubr cmp pop sub sbb in (bad) jns (bad) cmc jbe addr16 (bad) jae inc (bad) fiaddl es sub jnp ss std xchg lret fisttpll jb xchg jae inc ret adc mov inc dec aaa pop mov cli loopne (bad) (bad) adc push dec cmc test pusha outsl cwtl fcomps mov jecxz test inc inc les add test (bad) push xor mov out (bad) xlat pop clc xchg xchg (bad) mov push sahf scas pushf popa add xorl dec push sub (bad) ret rcrb jg ret fwait fs je mov movsb ss xor xchg loop adc lret cmp sbb xchg std cmpsb adc adc dec fimul mov jne ret xchg stc (bad) icebp or insl mov fdivp xchg cmpsl ja fild ds out inc in jl in pop mov pop (bad) push loopne sarl fnstcw cwtl mov insl fist hlt xchg jmp jmp jns testb mov add xchg bound adc mov cs sub and (bad) daa mov pop ds or push mov and mov lods loope add dec mov xchg cli mov out xor jmp xchg hlt cmp in enter cmp xor (bad) or jmp (bad) ffree hlt adc lea cmp jmp cmp sub icebp adc (bad) dec rorl sbb mov es imul pop fistpl mov jns or (bad) push pop sbb dec jne test insb fwait into xor dec jns mov jbe mulb out and hlt cmp lcall mov jge cmp and arpl xor adc sub xchg xor xor and inc cs jmp loope aas cmp xor push jns mov test lcall push cs cld dec cmp (bad) xlat (bad) xor or in adc push push mov repnz add mov sub pop push and cld jno stos mov test dec outsb popf into push xchg out test jnp cmp je testl mov jae arpl xor adc xor stc or mov andl loop bound inc gs push imul jno push inc cwtl (bad) jae ret aad das jnp gs push sbb fcompl gs outsb sbb push hlt mov mov leave adc in sub es cmpl sub mov mov jle sub cmpsb call sbb inc pop insl inc add mov mov sbb xchg cmp insl fdivl pop xor lret mov aas bsf dec jecxz mov inc and xchg aaa cmp pop push and pop jb das cmp pop push pop xchg adc (bad) popf xchg push ds push adc test clc lock lods outsb sub adc xor pop inc sbb loop fiadd push sbb cld or fiaddl repz adc adc push dec std push imul shr jecxz xchg shr sbb and sub pop and add outsl dec sti enter add cmc test das es stos mov adc orl cmp mov xchg mov je cwtl push jl inc sub lods scas lcall js inc and aam xchg fdivrs cli xchg pop jl pop int3 (bad) repnz out sbb popf mov popf sbb xor sbb inc das sbb mov test mov lock pop notb scas adc pop mov daa es cmpsl leave sbb xchg cmp mov call into dec mov adc ret jle inc sbb (bad) mov rorb pusha in dec xchg sub addl mov push mov push in push jo movsb lcall lds push xchg fldl inc pop clc inc adc push fnstenv inc lds dec inc pop jbe fisub (bad) jl lcall sti sahf mov rolb out adc mov mov lret fdiv mov sub cmp jb adc icebp mov adcl pop (bad) iret imul fiadd arpl jg sbb (bad) aad mov cmp negl insl hlt adcb cmp aad xor pop mov pop ljmp lds sbb cmp inc adc and mov inc popf push xchg dec mov mov (bad) push mov and add out stos out xchg repz lds add mov mov nop xor ret jne fsts stos js sahf add insl bnd into repz jl cmpsb in fwait push mov movsl sub sbb std insb jecxz push js cmp bound ja inc cld aas pop out iret iret in sarl shll mov pop lret and mov es or sub xor xchg mov sbb sub inc mov xor dec add mov add and outsb push xor mov mov (bad) iret inc lds xchg cld jge mov imul jo mov loop ja inc test test je hlt add cmp ljmp mov cmp push or mov lods inc mov mov adc mov (bad) cmp inc fstl pop (bad) xchg mov jbe or popa pop mov (bad) in movsb in mov mov mov xor lods push mov jle cmpsl add shrb inc fildll hlt xlat cltd xchg inc addr16 movsl jno out or push add test add dec das adc (bad) shrw mov movsl ret xor pop lcall push iret mov das aam scas xchg jmp add frstpm(287 or pop loope popl stos adc out ja cmpsb pop inc jnp cs mov adc test xlat push jge addr16 push cmp popf lea jnp jae sarl stc sbb push xchg icebp or (bad) addr16 lcall xchg xor insl xor adc clc in jb push aam imul fucomip mov ja loopne test jle jge stos jae mov mov pushf pop popf pop fistl inc mov test sbb push insb arpl mov xchg mov jbe cmp decl push insb xchg (bad) ljmp push test imul mov clc sahf fnsave inc stos repnz stos je jl int int3 adc js js lcall pop enter jmp int push loop loopne (bad) sar dec mov push aaa pop lock bound pop push mov fnstenv mov call ja push fldl pop sub aam push js out divl cmp xchg pop xchg mov clc std mov jecxz pop cmp paddq scas mov scas inc add jl call push cmp out xchg fstpt std xor out fwait ja mov lock mov cmpsl pop insb into and rcll std xor iret mov adc mov sub daa sub jne mov idiv daa (bad) dec stos ret (bad) pop les inc loope sbb pop lcall xor jb push push xor ljmp js or icebp js lods pop add gs arpl push jns dec vpmacssdd sub aas aad jl mov ret mov add sahf cli jl pop mov mov add out scas fistl popf jae insb pop addr16 call mov sbb xor jnp jmp in sbb stos sub push int sub fsubrs xchg xor insb push dec andl pop cmp lods inc mov shrb cwtl in xchg jo leave or cmpsl cmp dec arpl mov inc sub adc js imull mov mov inc pop mov nop mov js in xor dec iret push int3 push mov insb xor imul fcmovu std cs es (bad) cltd test xchg dec in pop call test icebp stc in push out fimul mov lahf mov stos add cmp adc ret sahf ja pushf clc adc lods mov lahf sub pop addr16 test leave lods xor inc (bad) mov xlat bound fistp dec iret mov icebp xchg in adc ret cld dec pop mov xor lea mov fwait add mov and int3 mov movb ficompl add fdivp xor leave mov in (bad) lret scas sti repz push mov shlb subb mov popf jge mov faddp push popl mov mov aad mov xor pop pop fs xor lret dec in fnop sarl jb cs pop outsl ret jns xchg int rorb and jns lcall mov popa push pop js inc add vxorpd cmp pop mov pop and scas jle mov mov sarb jg mov sbb xor adc loope test push mov add cmp insb out daa into and fistp dec into pop push cmp pop xor adc loope jle ret jg adc pop fwait cs push jbe pmulhw lahf xchg jmp xlat hlt and lcall jg mov push addr16 (bad) call into (bad) das lods pop pop in nop jb fstpt adc (bad) fistl sbb dec sub ret push addb test push jns sbb cmpsb jbe mov pop adcb imul jno adcl out lret sahf xchg xor icebp dec push inc adc sahf (bad) in (bad) mov fildll movsl cmp jp sbb jo popa stos push lcall mov pusha imul call mov add data16 leave shrb pop and in or aas sbb add pop hlt cmpsb push std das inc mull mov lods push mov dec dec mov repz sbb pusha cmp mov rclb pushf leave stc dec jecxz push xchg ja or lea pusha ljmp jl lds stos inc aaa ss jecxz bound iret popl ret adc outsb mov js xchg ret or je and jecxz add imul xchg sub mov aaa and sub hlt loop push mov jae pop adc mov jbe inc jbe cwtl adc add notl mov in out out mov sarb adc cs push adc fcmovu xchg stos in xor mov stos cld in pusha test sub add pop loop stos inc pusha pop (bad) push incb fxam repz pop in sti lahf add and and cmp push fwait psllq test (bad) jp fstps loope inc out jae cld (bad) mov outsl lea jg lcall lahf call aam repnz mov idivl pusha fdivl inc cmp push mov mov push sub cld movsb cmp loopne aam and int3 shrb loope pop loopne mov jecxz adc test xrelease popf lds mov cmp cmpsb pusha mov or stos jp pop add inc pop std cli adc and pop mov push push out insl mov addr16 es leave push and aam ss ds mov push push sub mov jmp mov inc lods sbb lods inc cwtl adc in dec movsb scas (bad) mov pop mov ret mov pop fcmovne movsb je inc repz or jnp lret sub dec int inc pusha push subl sbb cs stc mov (bad) insl xor dec push in movb xor jmp ja icebp fsts imul aam mov push in xchg push push dec jbe fincstp lock pop mov lock add je mov xchg adc lret sub and rorb jp or adc rcrl dec or pusha ret dec cltd (bad) (bad) sub adc out pop sbb in sub mov cmp jecxz hlt mov repnz orl sbbl inc jmp in jnp pop ja leave mov adc dec fbld push pop cmp nop notl or popf cmc (bad) jmp (bad) adc and mov neg jno dec add das leave test sub test les mov fstenv sahf mov outsl (bad) clc inc adc cmp pop mov (bad) dec movsb arpl fdiv xor xchg andl push pusha inc insb fldlg2 and mov sub and out cltd adc jge into call pop jno stos jno mov jmp lret pand mov (bad) (bad) inc sbb cmp ficom movsb adc sub dec pop cmp and pop clc xor xor mov fcmovu sbb sbb aaa fnstcw inc jp push ljmp pop clc popf jg push xchg out adc stc cs testl push into jne push sbb lods (bad) lods sahf add js fisubr test pop dec xor sbb mov pop adc repnz clc test push push fnstsw cltd add lret mov mov (bad) sbb lds pop xchg jge mov xchg jbe or pop bound mov lret add lods mov in das mov int3 or test cmpsl dec xchg je fstpt ja push icebp cwtl and xchg arpl adc sub lods add int jae add leave ss imul jl mov fwait pop adc mov lret (bad) lahf mov mov sbb stos push push enter int3 mov inc imul pextrw outsl pop pushf cmc pop adc sbb push push adc loop jl adc hlt mov mov idivl test push cmp int mov pop iret je xchg adc daa inc and inc push xor in insl in add xchg test (bad) sarb aad outsb dec xor jl and inc sbb mov popa pop mov dec inc pusha andb sub add ja add and dec xchg cwtl pusha push scas insl fidivrl sub mov stc aaa add lret insb (bad) mov cs cwtl and (bad) push movb add dec lds mov add rcrl xor mov mov inc addb int pop cltd sbb dec fidiv rolb inc sub and push aad sub push scas pop jecxz lds out into dec icebp out gs cs out sbb lock aas (bad) pop test xlat ficoml or das clc repz mov inc loop subl lret jecxz xlat xchg xchg loopne (bad) mov jne bound jl (bad) cltd ja ret push mov jb outsb inc mov ret xchg xlat cmp push and cwtl inc lea (bad) push fcomip notb dec xchg repnz jmp in rorl lods into jge or mov xchg lods push push push pushf or cmc mov repnz dec les jge enter test lock dec mov mov inc mov mov das lds cwtl jp lret or jl jo lock push xlat sbb push fisttp or dec test push or push pop pop rcll ss lret stos stos dec dec mov xchg dec and mov mov mov icebp mov cmpsl pop cmpl test sub loop jg xor mov aam sbb in cmp stc jbe mov daa push mov addl lds jne or ljmp cltd in add mov leave lfs sahf and mov push fdivrs pop mov or pop std adc or popf (bad) repnz sbb iret adc imul hlt mov test out jns jbe pop or inc dec (bad) imulb scas xor adc cltd sub aas adc lds jcxz ljmp jo cs cld int fsubp push out test jg push out inc daa pop (bad) rcpps in popf sahf pop pushf xchg add leave sti and inc jl push adc pop cwtl pushf jmp mov loope push jle cmp adc pop (bad) hlt (bad) outsb loop push lods add aas inc mov in pop in pop and and cmp jo enter adc ds rcrb lret mov pop stos push iret stos cltd cwtl (bad) in (bad) clc std sbb pop inc jle aaa jno or fdivl add test es mov pop cmpsb fwait mov jns inc fistp xchg sub add mov dec and xlat hlt or cmpsb xchg ret or in cmp sarl adc mov pop push dec repz and subl sarb lods arpl mov xchg push or adc adc test sbb mov sti cmp stc loop sub fimul push stc pop int xchg pop sbb dec xor dec sub and enter sbb inc bound gs mov or pop gs out or sbb jmp clc (bad) lods pop sub aam inc fwait sbb sbb jp loope mov lcall pop leave cltd add into pop clc push adc xchg add call call mov loopne and jp rclb (bad) icebp pop aas in jmp rorb jns inc push jnp (bad) stos push jl dec test pop leave adc xchg pop jno pop ficoml ljmp mov inc pop mov fldcw mov mov in sub pop dec xchg leavew inc das gs xchg mov cmp cltd sbb push or mov push dec jl sub fnsave lret (bad) dec jnp dec mov pusha test lock push sub (bad) repnz or insb push push jge es leave insb inc jns cmp out pop lea mov jo test or or fbstp aad mov lods (bad) lds push test adc inc jo sub mov (bad) push sbb orw push stc or out pop outsl (bad) cmp mov daa sub or pushf mov leave ret xchg out call jae mov fisubr sub add lds pop and scas stos scas clc test outsl ss mov loopne mov imul int3 jbe xchg int3 push adc pop int dec (bad) jge scas mov mov fprem1 xchg xor pop mov sub jl js inc imul mov aad jecxz jmp cmc or sbb adc xlat mov sti xchg lods add jbe aam mov push pop stc or mov or sbb popf inc mov in mov int outsb xor data16 lahf aam daa pop add sbb in lcall add lahf xor lock adc mov insb (bad) xor push push loopne lock dec stos in sbb mov int3 in adc repz or mov sarb jmp dec inc mov xor loopne in xor push mov jns lds sub test or (bad) adc mov adc lcall add dec mov jecxz negb push cmp dec pop scas mov push or and cmp fcompl dec mov pop mov repnz lds int aad fucompp jecxz roll pop mov dec cwtl or sub data16 loopne add push popa adc xchg into bound sarl out aas (bad) sbb (bad) xchg push (bad) xchg cmp and jb imul insl lock js arpl dec xchg cmp dec popf mov test (bad) incb lds ja pop out in jl lea pop js xor pop sti cmp in iret jle fmuls iret inc and pop xchg xor lcall lods cmp lock popf cld lods xchg inc and lea pushf add sub pop pop test sub and pop pop pop pop add mov cmp sbb js or es xor into pop sbb mov lcall inc ss notl pop (bad) mov cmpsb cmp lcall (bad) cs sbb pop sti sbb inc repz and jnp jae add lock dec push pop sub movsl sub (bad) movsl xor mov shll xor mov gs add jo rorl xchg cmp dec (bad) enter dec test sysenter das fwait sub mov jmp adc jb add cmpsb neg xor mov test fildl movsb mov adc jle push fs jns jle inc ror insb cltd xor movsl add mov (bad) mov sub adc dec (bad) insl xor xchg loope cltd lret mov in fisttpl cltd cld mov in sub outsb cmp (bad) stc cmp sahf clc sbb push or pop ja pop enter xor cmpsb jle add pop popf mov push push out cmp add outsb pushf iret stos pop (bad) daa inc sti mov aam stc cwtl cli enter fs inc movb out jecxz pop movsb rcr mov orl gs mov lret mov lret mov jns ljmp mov add aaa cmp loopne fisub sub addr16 jns mov (bad) lock scas pop je mov je (bad) push sub mov dec imul cmp mov pop xchg clc pop adc ss dec leave mov add mov lret sub xor insb dec in push rcrb xor mov inc pop stos repz ds int3 imull sub or sub sub push fsts jbe mov (bad) mov jmp aas lret out rorb push sbb add adc fist push mov into (bad) popa mov into add sarl lahf xchg sahf movsl orl imul jmp sbb dec enter xchg mov xchg mov pop inc dec mov sbb fildll fwait push xor idivb ret enter xchg in inc pop jb mov call mov dec cmp mov in xlat out sti mov pop add mov mov lcall scas cmp xor fistp mov loope or into or in sub aas je and pop rcl cwtl fldl xor mov divl movsb push sti movd inc clc push xchg out sub add inc fsubrl dec mov and sbb fisttpl cmp icebp add (bad) sarl mov push sub mov insl (bad) pusha mov pusha mov popa (bad) xchg sub stos jecxz cli mov mov mov push (bad) int sti cmp pop cmp dec mov ljmp jle push pop xor (bad) (bad) jne push in aaa inc adc inc mov aad xor sbb repz div (bad) mov and pop (bad) negl ffree xor in int pushaw sti ret insb movl cltd jle cmp rolb add inc cmpsb lock mov pop or mov dec dec cwtl insl movsb pop insb out xchg inc sbb cld jecxz mov test test fs cmp sarl out cs and fbld and adc xor pop xlat mov mov test cmp push xor jecxz rcl adc dec imul (bad) repz in mov inc flds mov negl leave (bad) test (bad) dec scas aam adc dec les scas jne je paddsb push mov (bad) cs jecxz adc xchg adc cs aad mov imul push in adcl mov aas sub mov mov rcll test insb sub mov ss pusha push lods jo lds mov inc cmp mov xor inc adc daa jns repz aaa jg fisttp xchg adc in aas ret rorb mov adc imul daa mov popa mov inc addr16 inc loopne and adc adc pop mov in cli sub xor or jnp push jno inc push pop out insb insb or fstpl sub jns fucomp sbb fcomp int3 pop aaa pop or nop push sarb and mov loopne (bad) in mov sub xchg (bad) adc cmp jle lods push out push daa jg sub xchg jnp arpl add sub fildl lock lret fcomps or or or push sahf loopne ss (bad) mov popf and sarb xor push insl mov xchg and push fxch adc (bad) xor (bad) popf inc pushl aad sbb sbb mov fsubrp ss push mov jmp mov adc cmpsl cmp xorb (bad) repz movsl mov jbe inc neg test jp mov dec sbb mov mov ljmp xchg pop xor jl mov and dec sahf ds (bad) mov add pop adc xchg pop ror sbb jle ja mov push cltd add push insb jo out les push xchg and imull mov in (bad) cmc sub ss lahf push jnp in push cmpsb xor mov ret je lret (bad) rcll fistpll shrb cmp xchg sub iret pop les xor test push mov outsl lahf hlt loop imul adc fnop imul sbb mov jge out je mov xchg int ds cmp mov bound andb or add adc and xchg repnz dec xchg lcall and mov out inc mov mov rclb scas jge les cmpsl in dec sbbl in jbe sbb jo adc xchg sbb repz imul and stc mov jb pop mov push scas xchg pop inc mov leave ret add mov int and push repz xchg sti inc mov mov enter cli hlt pop imul (bad) xor xchg adc testl mov cmc xor iret (bad) out flds and fwait cmpsb sbb jae xor cmp lock es shlb mov aad insb mov test mov popf sub pop dec out scas je movsb sub push test and iret jmp mov repnz (bad) xor inc std (bad) stos xchg fbstp fnstenv jecxz cmpsb cmpsl cmp dec jge mov (bad) jnp insb (bad) in xchg pop repnz add out inc inc mov add or push fildll push addr16 insl or out arpl js sbb and xchg pushf in loope jmp xlat and mov imul jge jecxz cmp shrb and inc int3 mov or mov subl push enter andl inc data16 out mov adc addb out stos test iret je (bad) mov sub in test mov pop sub imul jecxz stos mov sarl inc aam cmpsb mov inc jg mov cltd imul lock cmc outsl iret and lds out jbe jle push lods fsts xor scas icebp cmp dec push notl pop arpl clc iret mov gs mov call lcall mov (bad) adc xor dec inc pop rcrb insl imul cmp ret mov or ret mov xchg jle stc fisubr hlt (bad) negl inc or bound mov push inc mov pusha in or add inc mov ret jae sbb gs out and fwait mov mov add pandn adc pop leave xchg je shr or cli je sti aam cmpsl inc inc pop sbb outsl sub adc pop out mov mov inc ret jl,pn dec (bad) inc xchg inc jmp inc (bad) or (bad) stos test xchg loope pushf call std mov pop in mov xchg lods fnstcw jecxz xchg iret xor pop ss and je xchg popf (bad) icebp push and fimull pushf sahf popf fnstsw adc inc mov ud2 (bad) nop pop mov xchg sbb subl jns adc nop lahf arpl adc (bad) lods push test inc ret insl adc imul push cmp out pop lahf mov std aas jp bound leave jne or dec pop jae fdivrl or mov or es push pop stos add cmp xchg sub sub xor loopne xor xchg add and inc or (bad) lcall xchg inc mov scas jle add jecxz repnz dec clc scas fdivrl lock xchg sbb and pop daa sub and xlat repnz sub mov and in cwtl test frstor mov in loop jne mov xchg or movsb jnp pushf inc cmpsb int3 push push out xchg sbb fistp dec sub imul stos add xor inc lret push loop mov jl xor mov fist xor cmpl inc fidivl sbbl push sub movsl loop or (bad) dec and pop mov or ss aam or lcall sbb xchg jo mov adc iret nop cmpsb repnz nop jmp cmp mov xor jo jbe xor (bad) (bad) int3 data16 xchg lcall dec int3 fimul outsb jge sarb jno (bad) sbb pop mov pop inc (bad) adc xchg add js lea or aas dec pop sbb add xor cwtl lret jne mov scas sahf ret push xorb jecxz lea cmp icebp push hlt jne,pt xor xchg add pushf shl inc jno aas addr16 dec push repnz fldenv cs inc insl and inc cld scas xchg sbb or lret imul dec scas lahf adc add add jmp (bad) add aas or sub insl lods movl out add aas cs rcl cmp cmc lods nop nop pusha xor popf arpl mov jno mov dec shr aaa or xlat sbb push jmp sub push scas daa or into insl int3 pop sbb stc iret decb mov call pop and faddp sub lret mov inc mov cld xchg cs push adc or xchg pushf push stos fidivl icebp xor loope cltd adc nop mov js sub inc push xchg mov call push sub movsb imull pop popf cwtl inc inc out push loopne (bad) mov sbb (bad) sbb insl dec (bad) (bad) dec fs xor and mov aam fistp pop and inc cmpsl xor scas insb dec hlt sub jl mov cltd stos jne mov (bad) loop in aam jno or and (bad) int es hlt jne ss movsl sti aaa and pop xchg xchg lea adc xor dec sbb jb insb scas jge xor js and or and or pop in xlat enter cmp lock out vdivpd lock les add pavgb mov add enter xchg cmp push addl movsb add addr16 js mov lods mov xchg xor or add adc mov mov (bad) sbb push mov mov jne dec lea ss add scas jo fsubrp leave shll jp,pn xchg or pop mov sub shrb sub xor lcall sbb (bad) mov push fist inc mov fcmovb stos ljmp push add sub sbb mov ret lahf cwtl fs fwait jecxz jle mov stc inc mov ljmp int3 das les lret sbb xor dec cwtl dec jne xchg mov jecxz push cli or es mov mov in add inc movsl icebp lods fidivl jl in add imul pop mov xchg iret imul test or aas popa mov xor xor mov sub push outsl adc inc rcr dec repnz (bad) jp aas push add js xlat inc pusha stc (bad) test push jbe cld mov sahf bswap js cltd inc scas dec adc dec adc (bad) cmpsb pop int test (bad) xchg xlat mov out das je push fs inc int (bad) fxch ja shrl mov cmpsb data16 rsm in mov xchg mov push popf add jns cltd pop outsb jmp add ljmp or sub lods pop lods pop sub cli out dec mov adc mov stc stos dec out xor mov or lea insl and xchg rolb mov mov je xor fcomp inc xor int3 push fwait movsl je mov dec fs or imull adc js lret jb jle (bad) scas jne outsl cmp add and mov jmp into mov mov in fcoml fmul das mov xor js imul arpl and enter dec ucomiss scas sub add mov ficom cltd push aam pop sub mov cs fcmovb aaa out cmpsl cwtl ret pushf mov adc adc fwait adc jb pop aaa dec or and inc lret or or daa sahf outsl jns mov (bad) in mov pop mov gs mov arpl les sbb push pusha outsb jae in (bad) mov adc outsb ret adc push (bad) daa fdivrs mov test sbb (bad) adc jbe jno push cmp (bad) push add imul faddp dec (bad) fsubrp cmpsl jge adc pop jae mov std mov or test fdivs mov test in fdivs insb stos mov fisttpl insb jne ljmp xor in aaa out add cmp push rcrb (bad) cmp fldenv mov jg (bad) in lods out jge cmpsl mov iret repz xor push push pop push ret inc out dec mov ret repnz aaa lods mov lret xor mov and add mov xchg sub mov pop cli pop jb scas or fist xchg xchg cmpsb push push sbb push or test imul jl nop imull popf cmpsb or (bad) stos outsl sub sub sbbb add dec out mov push cmp imul jbe mov jno mov cwtl stos shll inc and cmp or inc dec hlt loop daa das xchg hlt push (bad) cli insl mov mov int3 lret push gs mov hlt cld mov push out rcll push rolb js sbb and lods mov cmp pop inc das add fnstcw mov mov jp push lret je pop es mov sarb push (bad) nop les mov adc dec or ljmp mov (bad) jg cwtl push ljmp outsb into and cmp adc movsb sahf cmp push insb inc js mulb jno adc out (bad) insl cmpsl xor clc imulb pop sbb pop outsb push push inc int int cwtl sub cltd aas fwait in pop cmp (bad) fs or add mov cwtl jle sub mov xor (bad) cld sbb lods jp,pn in into mov pushl (bad) adc pop inc xor push mov rolb and std outsl push sbb fstps lods (bad) pop jmp cmp cmp sahf (bad) pop jno nop cmp push in and xchg pop inc pop lds sbb (bad) adc cmp mov xlat jl pop fwait int3 cld nop (bad) fadds mov cltd sbb bound loop ds sub adc fimul cmp push push sub adc (bad) rcr cld xorl mov inc test push pop (bad) mov add (bad) mov inc cmp bound push arpl imul lcall je or or push or stos sub xlat push andl ficom cmp out xor cmp out jecxz jne xchg xor cmp imull dec pop pushf mov int inc sbb jns jecxz adc mov scas push stc rorl movsb outsl (bad) or dec fldz mov (bad) mov mov fidivr adc push adc ljmpw (bad) repnz out fldcw adc jmp push in inc pop add outsl arpl stos test xchg out add ficom jbe outsl xchg icebp sahf jp and jg icebp bound push cs sub int3 push jmp out fnstcw push adc mov jae jecxz mov ret xor cmp sub inc mov mov push mov test add lahf inc das ror jo inc mov cmp xchg xchg les dec fnstsw mov mov stos sbb jnp mov lds insl adc call push cltd mov sub and dec sbbl mov ss xlat in outsb dec popa testb ret lahf out add mov fist sti daa xchg cmpsl or mov mov jmp and xchg mov and iret (bad) (bad) mov pop cltd iret mov test dec xor lcall pushf jb mov cmp ds pop bound mov cmp pop push enter add sti mov pop push sti clc ljmp and push xor idivl and in xchg xchg (bad) ror icebp dec push call add sbb imul out jecxz rcrb push sbbl out loope and stos imull push lods jne lcall or pop inc daa outsb pop fs dec imul push and shl inc enter icebp (bad) fldenv repz jl in in pushf dec js sahf mov mov repnz push imul mov mov inc scas and subb pop or loop sbb mulb je jp enter popa sbb imul and sub mov fisttpl mov test inc popf sub popa mov mov jo jno popf cmp into mov push mov out in inc loope xor jae imul and ss jno das mov rolb push mov inc lahf xchg pop jmp xlat repnz jmp push push push jne in ret jl test stos gs je sub mov mov jecxz mul xchg clc jno aaa xchg or test cli or jae add jge inc sbb or jge aaa xchg and pop inc or loop imul mov mov sub insb mov sub loop cld cmp insb pop jne (bad) ffreep push insb test adc mov inc hlt insl lock dec pop jns (bad) xlat mov dec sar scas (bad) push xor int cmp mov adc rcll cld das rolb jl fldl stc loopne mov int3 push (bad) or lods mov inc stos pop xlat test in test pop test jp dec arpl mov mov imul outsb dec xor jg or inc in xchg dec aaa (bad) gs dec sub jle cmc mov add mov xor stos push mov (bad) jne push shrl aad sub out pop add outsb cmp xchg jl (bad) scas xor cmpsl sub pushf inc ret jb mov xor jne fstp loope imul inc clc repnz rcrl decl inc mov jo sub cmp clc push inc inc pushf xchg add xorb xor lds sub ret fwait or inc andb mov mov testb aad popf jne mov cmp fcom push stos push jg cs pop lret inc jbe mov jp daa insl add fildll ss pusha xchg ret jecxz inc mov fisubrl push lahf call sub movsl daa mov (bad) jb push cmp out loopne lock sub fldcw sti (bad) sub push add or pushf jmp mov (bad) dec or dec fidiv mov insl jbe or cmp in sahf mov (bad) pop ret xchg sysexit (bad) mov repnz dec mov orb xor and jmp mov push ljmp sbb sahf and aad and fstps insl jo jmp or mov sbb add movsb dec nop cld jno fwait (bad) fs sub push inc ljmp dec cmp push lock jae test add jle and imull pop insb mov into sbb aas jo cli call data16 stos testb insb xchg sbb pop xor clc insb in mov cmpsb scas repnz jns leave insl jmp pop mov lea loopne enter fsubrs sbb (bad) fs call mov cli cmp xchg icebp xlat mov popf outsl add sbb fldl ds ret mov popf or lcall or jecxz daa xchg (bad) int3 fldenv dec mov xchg mov call cltd sbb stos fnstcw fcomi bound push push mov or pop sub jle fmul in scas (bad) stc mov loop pop inc ret and xchg add add divb jmp pop mov (bad) fstl outsb mov mov adc xlat cmpsl outsb jo jo add popf loope push add shrb inc outsb test sub sti popa jmp xchg mov xchg xor dec mov cmc aaa and xchg jne (bad) adc rclb sub pop dec add push jge fstp add shll pop pop jns js adc dec xchg adc jg (bad) rolb push psubb insl int3 in fnsave int3 lret (bad) cltd xchg adc mov cs popf push test ljmp jbe cmp int test out sar nop stos fistl and test add adc scas xor add mov pop sbbl cmpsb popa in sub out mov jge sbb dec sub fs or aas jnp loopne call insb addr16 fwait shrl mov pop mov cmp test lea jmp lea sbb shld arpl cmpsb xor (bad) jo arpl test xor xor dec mov add icebp hlt loopne mov mov aam or es push fs push or insl jno or ljmp (bad) stos mov cwtl rcrl popf ljmp mov sbb insb adc scas or out outsl add push notl ret sbb push adc mov push lds mov xchg in jmp fdiv push imul ret dec lods mov jecxz inc mov or jmp cltd xchg sbb (bad) popa cmp xor (bad) lods sti das mov mov daa push xor stc mov dec jae adc or insb repz scas ljmp (bad) or enter stos popf dec mov inc or fsubrp movsb lahf ret daa (bad) mov outsb std and pop je mov (bad) repnz add sub push addl (bad) pop mov push jp call je jb std mov imul jb aad inc lds scas cmp lret mov mov jp icebp mov dec out dec dec mov rol test jle loope mov aam movsl mov sbb or push nop pop rorl add stos ret out lods inc xor loop jl dec lea je cld nop lret scas pop pop mov sub cmp hlt in add push cmp mov call ror scas xchg cwtl (bad) fldt mov fdivl and xor (bad) cmpsb icebp inc lock dec rclb nop dec stos mov das adc xor push or in sub (bad) jge imul mov cmp (bad) inc mov jo stos out mov out pop mov cmp call dec xor push lods xchg dec jns pusha push xor inc jp int cld or cmp in or aad mov orl stos mov pushf mov int3 notb cltd sub push jl cmp int3 outsl outsl data16 sub dec sbb mov fwait dec add push js fbld jg int sbb (bad) into shll lcall mov cmp lea and add adc pop fs out dec fisttpll xor enter jns adc inc fildl cmpsb das mov test movsl dec sbbb (bad) adc cmp dec outsw jl mov push or inc pop movsb ja and mov imul lods cltd out push int pop (bad) mov out mov imul rcll int stc sbb mov imul push lods out data16 sbb (bad) movsl sub sub xchg jne push cmpsl add pushf ret xchg (bad) xor das mov iret sub sbb mov pop sbb pop movsl jl dec in mov rcrb sub and push loop (bad) lock or test subl mov stos xchg (bad) xor xlat aam (bad) lret dec pusha fwait dec jg or faddl ss lock mov add xor inc mov or adc inc or mov sbb pop xor xchg mov or cli xchg or sbb mov push xor and push (bad) aaa adcl and mov test mov and test inc gs cli addb fcoms sbb fsubrs jae lret es jge fwait xor lods cld stc sbb das int xchg fs fs pop cmc scas loop lods cmpsl pop mov mov push dec cmp adc movsb aaa sub jnp loope std sub and adc aam mov js je stc out mov repz daa xor daa insl cmc dec cmpsl adc mov rolb cmc mov pop xor inc sbbl sub mov imul js inc push cmp mov jl mov xor lods aam jne jno mov popl jg vpcmpgtw inc (bad) imul xor sub xor pop sti popa mov lods scas sbb leave fidivl xor adc dec ss sub xchg jge fisttpl fcmovne mov mov adc inc ficompl dec sub insb jmp ds in fild or push and mov into insl jmp movsl (bad) pop je js jno (bad) xor mov jmp push inc jge shl jne sti xor repz stc jp mov xor cmpsl pushf ret int pop mov mov sub and inc or mov sbb test jp popl das adc mov fwait or (bad) stos repz cmp repz rorl or xbegin ret inc or nop (bad) addr16 xor and jmp cmp leave xchg shrb fwait sbb add movsb mov ja xchg dec jns and mov bound popa mov jl pusha lods jl call inc data16 pop fistpll out jns xchg dec ret lods xor push sub incl scas inc push add cmp pop fwait (bad) mov inc push jnp pop jnp das outsb cmp push pop dec dec xchg sbb dec popf or xor mov mov inc dec xor push add inc jl cs sbb iret outsb imull xchg je adc pop pop das pop jle jae jns jl (bad) sub mov xchg jne das ret ret mov add fcompl mov pop jl add shlb mov jns lahf lods cmp ficompl jns (bad) mov scas cwtl mov ds and jle rclb imul mov push sbb and test mov icebp out inc xor mov (bad) jecxz xor adc add in (bad) sahf lds jne xchg (bad) clc sbb jb gs ss cmp lahf or mov cmp cmpsl or adc (bad) fcompl sti lods mov or mov cld mov inc roll xor cmp mov outsl idivb dec mov push sti (bad) mov jle add cmp data16 stos pop adc adc ret pop add lea int imul dec mov lcall cmp clc jg pop aad pop mov aam jge sub xchg push mov scas repz mov lea aad pop lods cmp adc cmp sbb mov out jb sbb mov fld add push pusha jns pusha mov mov add xchg stos outsb jne or loop cs les (bad) es out cmp lods sub inc inc inc pushf add cs push cmp push lods movsl and stc cmp dec cmc sub iret mov ret in xchg das arpl jmp xor or lret xor stos add and ret int sarb in pusha dec cli icebp stos int3 into js and cmpsb hlt sarb lret daa bound stc ja ret sbb fisubr add mov mov lods inc je jbe (bad) dec add lock sbb mov jge loop (bad) xor imul xlat popa ror ss push outsb (bad) imul xlat inc push and js (bad) mov pop pop adc inc popf sub sbb mov push addr16 mov mov push sub mov cs in sbb stos je mov or push fcmovbe pusha xchg add ss and jmp mov xchg xchg lods arpl and insl xchg push cmpsl mov sub sbb fwait stc jns push ss mov add mov cmpsl cmp mov sub or (bad) jns fisttpll xor iret scas faddl push and lea les dec jns ja xchg mov inc dec mov nop dec addl mov sub fsubl mov cli lret sub add mov bound inc lea dec sti iret jns mov add lods jecxz push dec jno mov xor setl fisttpl or scas cltd rsm je xchg dec cmpps mov stos inc mov pushf xlat imul loop in dec jmp jg or test inc mov push mov scas adc mov cmp cmp fcomps jmp pushf cwtl sub data16 out or and rcr daa (bad) pop mov push xor cs sahf in int cmp (bad) dec xor lock imul mov sbb or lret lock and dec and std push mov pushf xor call loope push orb aaa test in adc mov pop sbb cltd xor test dec in sbb pop dec pop rcrb aas mov jle bnd or das iret sahf sbb lods negb push mov jp (bad) stos into shrb ja sub scas xchg outsl push xchg in pop dec add aaa pop call push pop into lods (bad) inc jae sbb or outsl jl out mov sub inc idivl pop loope and aad lea sarb mov lcall outsb and aaa (bad) leave mov fistpl mov movsb jl jo and icebp icebp enter leave stos ret out in sahf insl call ljmp fdivrl addb popa test loope repz jge in jg,pn jb xor cmp in loope cwtl test cmp sub int scas es mov in ret or imul xchg mov mov push push jno cmpsl call push push fs fldt xor or dec sub mov jo test pop call xchg nop clc cmpsb cmpsb push test ds loope in add mov (bad) (bad) mov jne cmp mov popf sahf test dec (bad) imulb lcall hlt std jle push and fcmovnb loopne shl mov repz mov pop insb int3 lahf adc mov iret fsubrl arpl mov lods pop pop cli and aaa loop stos jae je and dec jo pop test addb xchg gs mov xor xchg or addr16 mov test inc push and mov add dec and int cmp lret mov dec lods and shll dec aas sub adc adc aaa cs mov test fdivs in inc (bad) xlat and cmc pop adc inc ljmp sbb scas mov icebp (bad) fdivl (bad) icebp push adc pop jae loop and addr16 push push cmp xchg and mov cmpsl outsl sti mov jl fs (bad) je push fisubr add pushf or loop dec mov jbe stos xchg xor pop or pop or (bad) cmp mov bsr xor mov sub (bad) data16 jg push and (bad) mov sub dec cli fwait repnz push and add cmp xor fcompl pop std push lcall dec fstps sub cmpsl in imul jmp lret mov loopne fcmovu call mov xlat shlb and daa (bad) xchg outsl mov jecxz jb jecxz shrl mov dec hlt and add (bad) fild or sbb (bad) loope shll push add insb jno mov xor (bad) call imul call push push mov pop xor dec mov mov xchg inc movsl hlt test (bad) int (bad) cltd pop dec repz inc scas push data16 sahf aad mov mov push sbb jecxz push mov xchg mov daa out stos sub ret repz stc jnp xchg xchg push dec push and cmpsl and pushf into test pushf aaa and add outsb sbb imul push rorb mov jae pop pop fwait cmp repz pop lea xor jg mov mov stc xchg jae cmp arpl sarl dec or or pop lods test pop aam or cmp out xchg sub sahf in sub xchg in in cmp lds jge jle jae or addl jb pop mov and jae mov ds xchg scas jl in sub in sbb xchg clc jo sbb scas hlt mov stc aaa sbbb mov inc add and push xchg (bad) aad sub movsb into popf jno xor and dec jnp insb push movsl and adcl out rclb xchg sub je adc popa insl mov push jge cwtl aad aaa jmp inc jnp sub pusha and mov aaa mov xorl mov test insb xorl shr lcall enter std cmp or add je les xor insb mov dec shl jle sub push sbb nop inc shlb jecxz aad cs jno repz (bad) icebp test fisttp inc test xor int sbb insb stc xor addr16 in into mov test sub outsb cs xchg push shlb sub jne popa imul push or pop mov or insl (bad) jnp push pusha mov rcrl pop dec push add std repnz jge sbb imul insl sahf std adc movsb js inc pop cmpsb mov push bound nop fmull (bad) icebp out ja lods mov pop cs jecxz mov mov xor push push jl mov mov rorl add jmp pop popa inc call xor lret push jecxz sub arpl shrl adc repz movsb and aad push lahf and cld mov out adc sbb add lret xor popa repz jmp or inc imul xadd in fild ret sbb inc out mov mov dec jmp loop sub cmp xchg shlb jmp jmp loop sub ja sbb pop mov (bad) int jb loop sbb ficomp cmp inc les lods pop mov jns push and push lds jl mov cwtl add or dec push dec sub adc insb ja (bad) sub push (bad) fadds add or cwtl mov xchg je lds or fstpl loopne in aam mov out mov mov adc inc ss xchg dec mov mov sbb in jno fdivrs sub pop mov add bound sbb int3 mov or fcoms xchg (bad) and sti lds pusha fcompl rcl mov lods mov in mov jns sbb ljmp or das (bad) dec in in xchg dec adc jae xchg outsb mov ljmp dec fisttp pop fdivrs aas push notb or fimull pop mov and jmp or or mov inc push jbe insb mov popa sub or pop sbbl sbb sbb dec inc jno xor cmp jmp cmp daa mov shr jp in aas sbb lret aaa sbb cmp loop inc shlb jmp adc daa (bad) jl pusha pop xor sub xlat lret mov or int3 push lods leave mov outsb lock add test ljmp insl int3 mov ljmp lahf mov aaa pop aad stos mov insl jbe into dec ficompl pop inc mov xlat pop adc sbb fstpl fcomip sub mov pusha sub pop insb fcomp sar push inc push call sbb sub adc shrb jo sahf jnp shll jge les sti in xchg pop mov dec in or pushf mov jg es loope lock jmp clc in rcl xor stos mov and mov fnstcw mov lea stos cmp mov (bad) add cmpsl jle lods fs out iret xor dec push fimull in xchg xchg or (bad) mov mov jne add mov (bad) aaa mov in jbe mov sbb inc mov les icebp push pop aam enter sbb rorl (bad) jns adcl dec or das push aad iret int3 enter lahf xor jns iret cld push xchg and xchg mov or mov scas mov pushf cmpsl cmp (bad) mov pop or js (bad) pop imul sarb xor imul cltd insl jns movsl cld add pop repz inc cmp inc scas push jp ljmp xor mov std mov imul pmaxsw leave xor pusha imul cmpsb push vpcmpgtb mov rcrb mov jl xor call (bad) imul mov test iret pusha mov jo ret (bad) call xor sub add inc scas push loope mull xchg push insl cmpsb inc or mov jbe cltd pop mov sub pop into cli js cmp sub inc mov in leave imul mov ret jb pop addl cmpsl lcall and outsb mov mov (bad) mov adc insl mov and lret ljmp in sahf (bad) in sbb jb imul inc mov rclb push jae dec xchg sub push cmp pop pusha mov mov mov data16 push xchg in mov popa mov add ret shlb (bad) loope insl into pusha xor dec fs int3 hlt xchg (bad) int3 or mov shlb add shrb repnz jns mov xor xor pop into xor xchg add js arpl dec (bad) imul bound inc fldln2 add enter out hlt fldt mov dec enter pusha and mov xchg enter xchg js ret jecxz or xor jp (bad) jo pushf dec call in nop test iret or mov or inc or (bad) ds int lock sbb inc lret adc cmpsb (bad) pop jge and fdivrl sub pop out gs add sub cwtl lock dec push sahf mov xchg pop mov push and or imul add push or lret fdivr xchg fs call imul push mov stos sbb or stc gs cmp mov mov stc sbb incl cs lock xchg test adc (bad) popa adc sub aas stc movsl outsb lcall scas lds adc jl jp pop add inc inc in mov ret in cmp and shrb roll dec into (bad) sbb es push (bad) push push into add cli push sub test loop jp cmp dec test js push leave jp mov xchg loop les int inc sarb mov sub mov popa inc out cmp loope loop add repz outsb push mov movsl lods mov mov sbb push mov stos push cmp dec xchg xchg jge sub or std test jl mov mov mov mov lods pop and sbb jge sub add jno and push add mov mov cltd dec or xor mull movsb mov inc jmp pop loope mov out loope push sub jne add std imul and fstpl adc sarb mov (bad) mov es sahf test and sub or or loopne push js pushf and mov stos jbe lret divb cld pop push out cltd mov pop mov sbb call mov jl ss jb pop and hlt lods inc rclb adc sbb outsl arpl fs jmp addr16 mov jo mov push fwait addr16 sar sbb mov or movsb shrb (bad) adc loope inc push and push rorb pop dec lods test stos in push lret dec inc int daa cmp mov lahf xchg bound cmp jnp mov cmp xor movsb dec outsl inc fcmovu add cmc jp imul lahf sub pop xchg stc addr16 incb xor (bad) seta insb out jo mov imul fisubr jb mov outsb daa ljmp stos loope cmp adc iret fwait mov push (bad) sti roll mov push add push stc xor or add add lea in or ret push ja cmp sar push mov adc add lods inc das out mov imul inc or and enter dec gs dec lea icebp ret inc xchg and or sbb cmp xor (bad) xor jmp jnp sub sbb adc (bad) push xor jnp adc xchg ds mov pushf mov (bad) jl lret test dec cmp xor stc in sbb inc jbe loop sub (bad) dec and icebp aad lods xor gs mov enter std add xchg iret fwait inc loope or pushl inc addl loopne mov adc pop cmp adc dec cmpsl jl cmp inc inc stc (bad) in int3 mov pop popa sub lret pop add cmp dec push in xchg jmp jne (bad) mov or cltd leave mov repz scas sub pop mov fiaddl punpckhdq or lods fcomps in sbbl cwtl pop and ret push sub jb or mov xchg push out es mov xchg ss (bad) xchg adc sub nop fldt pop fdivrl into pop sahf fildll mov mov lods inc add daa or xchg sbb lret xor gs gs adc in inc adc sub and mov fldz subl and add mov cmpsl and push pop dec lods dec mov (bad) jl cmp mov xchg sub mov xchg scas ds xchg out xchg sub jns aaa or lahf xchg out cmp loop cmpsb jp xor cmp pop das xor aam push jo mov ror aad pushf mov jno popa (bad) sub xchg int jmp mov or sub mov (bad) out mov std out inc ficomp btr hlt cld mov jnp andps pushf mov daa sub cmp std sti flds mov stc inc xor lea pop mov mov ss ss and faddl push into sub ljmp mov test sarl movsl aam sbb inc les (bad) xchg gs lds xlat outsb jl (bad) into outsb xor adc jp leave cwtl inc in add xchg add mov sub sahf jno cld (bad) stos pop push adc push adc sti enter (bad) repnz cli push (bad) cli cmpsb mov xchg jno xor ljmp das jns mov pusha bound orb push sahf xchg (bad) loope mov and (bad) fbstp loope and insl pushf icebp jg mov jbe pop mov inc pop add jle ljmp and ja outsb fisubl lcall stos test fnstsw lahf sahf insl inc push pop and mov pushf iret aaa imul push sub xchg add (bad) adc fs (bad) push in sbbl sub pushf pop adc inc (bad) aam dec jl aad mov sbb rcr xor inc mov insl in mov cmpsb mov mov or cmpsl (bad) jge xchg test push cs stos (bad) fcompl movsl sub fmull adc xchg test cmpsl xor sarb popf jle adc int sub (bad) iret push shlb push in mulb sub lret fisubl push jae add mov and popa enter xor ljmp pop test pop cmp cmc xchg fwait jmp xor idivl in in mov lock sub adc adc and mov mov mov pop lods xchg pop cmpsl rcr mov in arpl std mov scas xlat dec cmc sahf mov test dec xchg jmp mov mov mov js cmp jnp lock jmp xor scas mov adc pushf mov test in cli popa cmpsb imul cltd out jmp ja int3 dec mov psubsw sbb mov xchg jbe je scas scas mov jecxz and (bad) (bad) sbb lea mov dec cmp clc stc dec lahf imull iret pop sbb fucomi sub (bad) sti leave xchg fcomps test pop sub scas jnp dec lock fnstenv jbe mov sti xchg cmp inc xchg insb inc outsb mov stos sbb mov jp xchg out jge (bad) xor inc outsb mov mov adc test fisttpl sub popf inc mov mov test lret pushl (bad) inc xor (bad) sbb es popa pushf test xlat jecxz into (bad) fsubl xor test popl pop bound mov sub loop pop add int cs (bad) (bad) mov push lds pop sub sahf push gs (bad) stos ret imul pusha jmp cmp mov sahf (bad) movsl movsb imul mov pop aaa mov sti fadds dec adc adc loop jae mov out jmp decb mov and inc (bad) pop or stos call lds icebp inc inc cmc xchg sbb pop fadd gs mov loop xchg arpl nop or insl shll adc xchg lds in lret aas xchg push xchg insl repz inc loop,pn fbstp mov or push sub sti lret ljmp (bad) xor arpl addr16 jnp dec popa ret or out ljmp jge repnz ds xor (bad) xor jno sbb sub lods out (bad) in cmc dec sbb xor imul (bad) mov cli cmp mov pop ret inc clc xor inc xchg mov cmp xlat mov dec mov and in call fs loopne imul adc fildl cmp xor gs ficomp jns cltd out dec hlt mov pop lcall rorl das pop mov xchg xor fwait hlt xorl pusha popw add mov dec out cmpl repz aad dec inc sbb xor les daa in cwtl enter push xor (bad) xchg sarl cmc (bad) and cmp pop aas mov int cli mov sbb or ja adc cmp xor xorl test pop fmuls jb daa pop sarb mov push jae testb (bad) int3 lods pop pop inc in cmp into xchg xor xor push xlat sub mov sub dec dec popa (bad) mov sbb push xchg mov fwait (bad) mov pop add (bad) ljmp inc sbb lea in lret add sbb faddl xor out fcmovne movsb lcall (bad) pop push pop adc dec (bad) enter je fwait out xor in out (bad) mov jl insl popa or ret sub sarb sbb popa adc pop aaa jb jo nop js mov jno and movsb xchg scas ds mov xor pushf std xor ja pop (bad) call orl push push hlt popa mov inc jecxz stc pop adc inc daa xor inc movb test and adc jmp ljmp dec push cwtl mov adc lds sti out sub stos fisttpll jle pop jg push mov div ret (bad) adc js in inc dec repnz cmp dec out mov lcall inc jnp sub aad and and dec sbb rcr mov pavgb add cmpsb test mov out lods (bad) mov in aam and scas xchg inc loop ret or or and push add loopne (bad) sub xor mov scas add mov (bad) sbb out cmp jae,pn sub xchg decb loopne pop dec sub orb dec xchg sub dec out xchg sub dec les adc xor sahf roll fucom in cmpsl push cld ffree test pop cld data16 mov pop (bad) or xor mov and adc jo decl xlat xchg mov mov fdivl outsb int3 xor sub xchg aas or xor xchg lahf mov add dec gs mov inc (bad) aam cmp xor cmp mov stos mov loope adc fwait adc sub jecxz stos add mov sarb jno pop mov std (bad) cmpsl outsl call movsl xor pop pop leave adc into inc inc sahf fsubs dec dec xor stos inc jmp out hlt stos xchg sub jmp ljmp ljmp out ffree negl xchg fcompl xor testb ror sub cmp test xor addl stc xor push and jmp (bad) xchg xchg push mov outsb jecxz (bad) mov or mov (bad) sub ja xchg int3 mov js sbb js xchg fisttpll cmp (bad) jno (bad) sub fwait je cli insl lahf shlb ficomp inc jge sub mov push cs shl cs loopne (bad) lret pop and iret mov cmpsl push rorb inc pusha and lock inc mov xlat push cmp adc test stos negl stos loopne pushf mov mov lds (bad) addb aam lea jecxz sbb mov jmp jmp cmpsb repz or enter sub xor dec lods ret ret (bad) nop sbb ret gs mov mov xor jp icebp (bad) shrb push sbb add insb add popa push dec int ret xor jne sub lcall dec or push push lods fdivrs (bad) ljmp loop cmpsl (bad) fimul lods mulb fisubr or or adc pop pop pop mov xchg out test fs add dec out mov (bad) dec test loopne aas jp pop cmp dec xor adc sbb out push dec push sub xor sbb mov test sub incl rclb aam (bad) bound dec aad out add add push insl fs imul xchg ds mov add popa fcmovnu jecxz and in test cld pop stos xor cli push jb mov jmp ficomp mov stos adc dec fbld mov add sbb int out imul mov rorb imulb pop inc sahf add cmp mov sub imul sbb ret inc dec out mov lods je jne imul fsubl sti scas mulb cli stc xor movsl and jbe loop je inc mov insb lahf xchg cmp pop (bad) push or and xor fiaddl mov mov and int cmp ret bound sub lret or pop fwait movsl push cwtl nop pop xchg xchg cli ret aas mov test adc jge hlt dec push xor loopne bound lods adc cltd push fistp cmpsb mov add xor lret mov adc (bad) jmp jne pop jns adc ret icebp mov push enter cmc push outsb sub fdiv inc pop inc out cwtl mov lods pop jge jg cmpb xchg stc jne in xchg mov jbe fs out pop push jbe xchg fidivr mov sub adc add mov adc mov in cs xchg inc sbb (bad) jnp sbb mov cmp in push dec or adc jnp inc cmpsb imul jae pop xchg pop out xchg cld int sub pop xchg inc mov test xchg push xor aad ficomp scas mov inc in pop (bad) stos or ret dec mov test or cmp push xlat add sub mov bound (bad) add aaa sbb testl sub jge cwtl cmp outsl out imul jo sarb and out clc fs bound inc movsb push je adc mov adc flds mov and gs movsl (bad) adc add pop xor aaa sti (bad) push lret jecxz xchg inc or mov sub dec add inc aaa call mov into mull (bad) xor lods sbb lahf sbb push loop push pop shr push clc jae pop outsb ja dec adc cwtl in outsl callw ret rorl mov xlat mov (bad) out andl sub mov pop cmpsb aaa jle and inc and sub in mov imul (bad) jb test (bad) sarb mov add adc pushf fsubrs mov pop cmc mov nop (bad) add fidivr ja xchg mov jg and mov dec scas dec push repz in icebp (bad) xor lret xchg dec fucomp add mov aad mov sub (bad) shld push and pushf cltd andl push lahf mov repnz das jecxz ds jnp sbb jge dec stos (bad) outsb xchg insb jnp popf lods insb adc inc jp jecxz or sti paddd push pop jg arpl mov nop insl mov lcall cmp gs test mov mov icebp sub popf jnp jp dec scas test push cmp or ljmp fucom dec cli cmpsl mov pop (bad) jnp and mov pop or setae xorb ret insl or mov pop and pop sub add rcll pop push mov sbb xchg jle mov aaa pop in call in xchg lahf pop fdivl pop mov repz insl mov out (bad) jb popa pop sub and pop popa mov idiv fs cs push sbb cmpsb xlat cli push push jno xchg jno mov push bound (bad) imul xchg jo out pop xchg jno sbb add mov cli sub inc out mov lods mov in divl mov idivb (bad) aaa lret sub adc aas mov rcl jecxz sbb and push stos ss ss cmp test lds (bad) jae jle or push mov cmc das or icebp pop pop popf dec in movl js mov fcmovnb into push adc rorl mov in push or sbbl clc cmc xor push pop lods nop int3 cmp ss test aad push mov lahf dec leave ja pop and pop and enter (bad) nop add dec loope cs ljmp rol iret push xor outsb inc and dec inc call loope push push ret inc enter test jp cmp push fcompl xchg sub xor in xchg mov adc divl jg in inc stos jbe rorb aad insb inc dec add and cmp sub push popa sub pop mov pop sub aam fisubr cli sub and test push test cltd cltd imul fstp ss fldenv xor (bad) bound pop xor rorb mov mov cmp roll sub movsb cltd xchg jns cmp cmpsl sub lds out xchg cwtl test cmp cs addr16 out in mov sahf aaa (bad) aaa jne (bad) cmp ljmp adc scas cmovge ret lret lea lea inc dec mov aam jne sar xchg add mov bts cmp xchg mov or add or jl pop js stc push enter mov sti ja std in into adc and mov dec inc bnd cmp stos addl adc xchg (bad) pushf pop stc xor fisubrl shl (bad) nop outsl mov xchg (bad) clc (bad) fistpll out jp jmp push lea (bad) ffreep aaa ljmp insb data16 int jnp mov cwtl lods int3 jne mov inc insl (bad) or cld popf add clc push mov jno frstor fstpt (bad) lods mov adc xchg lds test popa mov daa sahf mov andl jnp test or stos lret sbb je data16 in ljmp jae jge or jecxz and adc pop scas mov push js mov inc mov das insl sub mov ja and in add lods iret push inc cmpsb repnz mov xor mov inc mov sbb or and movsb jno or div add clc and sub add scas push add pop rcll xor jnp movsl (bad) pop sbb cs dec push or pop stos (bad) outsb jbe add and (bad) mov push mov out mov clc fdiv outsl dec call mov sbbl mov cmp adc les movsl sub fiaddl (bad) inc in (bad) sub cmpsl lock aaa jo inc or std mov push sbb lds push test lds lds cmp lahf dec mov add outsl movsb outsb sbb xchg repnz ljmp sbb fcoms fildll rorl out inc fmul sbb cli les imul inc xor push cmp cli dec int3 xchg jge add sbb sti out add aaa aam js mov outsb fstl jns mov pusha out sbb aaa sub fiaddl pusha adc fcompl add mov pop jne sub mov sbb popa adc lea pop jecxz xor ret (bad) std popa push mov pushf loope dec cmpsb cmp xchg dec lret ja popa xchg or das insb xchg into stc es arpl int3 fistp ret jle sub nop cmpsb push movsl mov lar in fidivr xlat mov jecxz push cmp push push loop cmc out imul loopne mov pop mov pop mov test cmp xchg daa arpl fistl jp fcmovb cmpsb dec sbb pusha lods xchg jae and sub mov and push cmpsb mov sahf xor ljmp pop xchg stos push hlt dec fistp dec pop ret mov jb (bad) fdivr xchg inc adc mov dec push xchg pop add (bad) pop ficom dec and rclw stc cltd lret pop jmp sahf cld fild arpl push cmp fcmovu push adc sbb jecxz fs mov mov sbb lea lea roll add je (bad) ss xor incb xor cwtl pop xchg sbb xchg mov popf cli xlat sub jle jo lcall (bad) sahf adc lret pop mov fcompl mov aas push das mov xchg pop movsl jl pop cs ljmp rcrl enter mov cmp dec mov lea lods push mov lds lret inc sbb mov add adc cmpsb mov push cmp adc xchg xchg sub icebp mov ffreep jns icebp pusha cmp fmuls xchg bound sbb pop js and push cli (bad) bound cltd adcb arpl cmp xor aaa dec loope mov dec sarl add fdivs add sub ret adc jecxz,pt movsb scas xchg imul cmp xchg in pop and pop sbb gs cld adc pop pop ss jecxz push push mov or (bad) or add or push push mov xchg xor xchg add test add mov cld ret jge xchg in repz fdivrs adc xchg inc (bad) mov add loopne aam cmpsl xchg cltd mov sub jl in pusha adc mov jle movsb jmp cmp pop or sub in mov pusha inc (bad) jno xlat fmuls add and sbb inc sbb xor call and rclb addr16 lock je (bad) push lods dec rcll pop js sbb hlt inc aad push imul movsl xorl lock pop outsl and mov data16 jae or xor lock or (bad) (bad) js and in enter daa adc sub test scas and or sbb xor popa inc rcl out stos rcrl fnsave rolb push mov xchg loopne adc test mov fcmovnb lcall and stos pop dec mov xorb sub div fs sti jecxz lock fwait push lret ret mov insb adc or sahf outsl push fdivs jmp js sahf hlt mov cmp imul mov iret inc or jmp cmpsb (bad) das cld inc lock (bad) adc hlt ljmp add test mov outsl mov sbb dec jae mov imul mov repnz and pop lods dec push xchg (bad) clc in pop shr cmp and aad call fs (bad) mov pop dec push mov mov fidivl out cli lods mov dec lods or fbstp (bad) aam push pop ret (bad) in sub jmp fs mov roll outsl es movsl and dec (bad) ds inc dec mov adc xchg movsb shlb lock repz sbb or (bad) dec mov adc mov push pop adc scas out lds cmp sub jg imul xor das incl std cwtl or enter jge add mov subb jmp lret mov add push add jne aam js dec or cmc lret pop dec or rolb loopne inc push push shrl cmpsl xchg loope xor shr jb test mov fiaddl dec cmc (bad) movsb jno ja inc es xchg xchg and push xor pop lahf and mov add repnz movsb shrd xor popf in dec subb xorb cmp push loopne and mov or push inc dec sbb jbe cmc mov jb mov dec stos push in fwait out inc (bad) push mov es js imul lcall arpl sub loopne pop jl push or dec in inc mov xor inc sti xchg les out leave enter pop jo mov mov mov dec nop fscale les jno push test (bad) (bad) or cmp ret push and jp dec shl scas pop stos xor mov xlat mov icebp je add (bad) dec push int ret cmc xor stos adc lods idivb mov jle test (bad) insl mov ret daa out pop repz (bad) (bad) imul mov sub hlt push jns sub out inc std rcrl push add push inc fwait repz jle test or push inc test jbe xchg dec lods mov fsubrs push ss adc pop inc int inc inc fwait add daa cmpsb dec sbb push mov fcomps mov mov fnop notl push mov dec in dec or das mov lds fsubrs enter insb pop mov sub xor adc out test insb xchg push ret bt push cwtl in mov clc xchg dec mov xchg mov add cmc cmp and scas xchg out mov xchg mov scas mov adc inc stc jns mov fcomi jmp test aad jns pop inc into inc in jl mov mov cli sub inc inc into daa lods pop mov ret adc lods jmp imul pop lds mov sbb add pop sub inc out jmp mov mov jo das fild xchg sbb loopne outsl fwait mov (bad) push shr (bad) xor inc test push stc mov sbb (bad) mov mov and add xor cli faddp cmp lea or cmp popa add sbb cmp xor adc jp push mov jge imul js jns pop push mov pop and xchg pop jmp cld inc dec pop (bad) adc test add into push push sbb cmp inc test mov pop sarl mov lods stc es mov push mov sub cmc mov (bad) inc jmp inc jae mov (bad) pop fcmovu cmp cs shr inc int ror rcrb adc sub jne stos xor jmp enter gs and jbe call cmc push insb and xor push rol imul push outsl mov out sub imul dec (bad) clc sti fiadd test pop jecxz sub shr cwtl lods hlt push into xor or (bad) mul pop imul dec stc xchg push push sti and xchg enter inc jno arpl push out xor mov les (bad) fwait dec push cld stos push data16 add enter stc pop call ret ficom jo xchg dec inc or ret jno and sub call adc outsl pop xchg cmp ret and mov jbe sbbl adc mov or (bad) adc jg mov ja rorl ffree lods jbe in insl movsb (bad) cmp aas xor adc jnp out mov dec jnp sbb (bad) mov rcrb aad aas xchg cmpl pushf inc repz and adc xor out aas pop jo mov inc fcompl push lock xlat sbb xor jmp scas xor mov jo in cmpl ret lea es jae mov das pop inc repz jmp mov mov push inc test cmc test xchg nop movsl fistpll xchg mov lock shrb fwait jno je addr16 loope xchg pop add or shlb cmp xchg aas pushw or repnz cmp and pop add xor sbb mov in ror inc (bad) das mov loopne out scas ds addr16 pop roll lcall cwtl subb outsb or loopne xchg je scas les pop dec sub jl ja fstps inc rorb lds lcall sub scas int3 mov xor es jne ret inc dec push jp test sbb dec pop mov jp mov rorb sub test sub inc popf std das pop xchg js xchg pop adc and (bad) xor cmp nop cmp outsl mov nop jno pop mov shlb cmpsb call cmp or mov mov push sbb clc ret (bad) aas or mov lret andl cmp fcmovnbe (bad) lret xor lock jne mov xor cmp xchg xchg push cmp sahf sub cltd xor push in aad adc sbb add das mov xorb mov cmp mov lock test gs mov cltd js jge jbe cmpl fstpt lock adc aam or or jae dec lods fisttp xor out int insl in jle mov push xor inc adc lods jge sbb add lods push popf push movsb insb (bad) repz jmp sbbl xor fcmovnbe sub sbb aad int3 mov dec mov dec mov xlat pop and or aad push mov or test sbbl lret push sub js ret shrb adc gs pop enter pop sub or dec or or add inc icebp pop push or (bad) cmp sbb or nop std mov int ljmp jno jge cmc test fistpl mov stos jp outsl pop pushf bound (bad) push enter xchg pop outsb lret or cmpsl xor cli fcomps jne (bad) mov (bad) mov insb jbe xchg insl and shll sub or inc mov lahf cmp (bad) fcmovnu xor daa ret mov pop repnz inc test cwtl dec mov js outsl dec push sbb inc mov das inc jno loope,pn sbb pop (bad) test shr mov enter cmp dec loope (bad) fldenv out ja mov push xchg push cs das fild sbb cmp mov dec aam and and xchg xchg cmp insb (bad) and imul lret popa popf out push or inc cmc pop out mov xchg jle sub xor adc lds mov adc rcr xchg into mov xchg mov push scas push insb adc or xchg test dec mov cmp jmp lods cli push addl (bad) mov push sub int3 pop pop into movb hlt dec repz mov clc xchg lea mov lds and cmpsl dec cmpl jge roll fcmovnb mov (bad) push sbb jg dec or popl mov xor icebp imul cmp pop jnp stos jb mov mov push (bad) xchg mov lock add (bad) xor ljmp insl xchg inc cwtl (bad) in rcr addl jb dec lds cld and mov pop jp add fwait jmp ret push push xor or daa and sbb xor dec push xchg inc gs popa xor stos scas jle das mov push push insb mov out call out push inc movsl xchg lret adc and addr16 cld es out pop mov fmuls adcb es xchg dec imull pop int3 lods push and stc (bad) pop jge mov cmp and sub in lock jnp xor mov mov mov insb enter mov shll lret push (bad) jb jne or enter mov push test and xchg dec pop cmp mov outsb push pusha inc add add in or aad (bad) xor push in inc jp sbb xor les cmp stos int or jl xchg aam mov xchg mov mov cmp mov ja mov nop push outsb inc std mov xorb jne cltd mov aad mov test mov push mov push xor add mov aam jge in ja sub jmp pop lret xor push (bad) mull scas mov ljmp (bad) scas sbb cmp subl decb std mov sbbb fdivl push jns adc (bad) iret lahf lods out jp or les lahf icebp xchg aaa (bad) repz jle jle pop push jne ss jae (bad) cli nop inc pusha mov adc hlt movsb push xorl pushf popf bound jbe mov sbb fadds inc xor dec std arpl mov jae sub or sub cmp dec cmpsb sub (bad) pop (bad) in sti test cmp loope scas push jp push fstpl ret push inc shll dec vmovntdq imul adc mov xor sub add mov outsl pushf xlat pop popf xor or xchg movsl xchg leave loop rcrl fdivrl int mov adc jne or mov cmp jmp or pop orl pop add pop ret enter push lock stos or add push xchg lods (bad) addr16 dec das xchg pop lret sub js sub mov mov or shll in push icebp xchg movsb or fdivs aad out sub xor jno sub repnz cmpsl mov sti and mov mov push ret pop xor xor push mov jnp mov lock scas add loope das inc mov scas dec loopne mov jmp or jg hlt repz cmp xor xchg dec xchg int3 mov sbb jbe mov cmp sbb pop repz leave call jo sub jmp fbstp mov push sub and stos clc xor das sub push inc cmc xchg mov cmc add lahf bound (bad) jmp jnp mov insl mov fstl push lret xlat pop int3 in adcl push jno int ret into pusha ds subl mov cs sbb mov sbbl subl ret adc (bad) clc hlt jge jecxz je mov adc daa cmp inc fdivrp inc mov xor mov xor out jb loopne push lods add jo mov dec dec mov sbb mov mov mov xorl or aas in ljmp jg,pt mov in movsl jo mov xchg cli mov inc ja imul xor xchg and call arpl add or js cmc lcall sbb arpl adc les push jno mov lahf xchg ficoml dec push cmp loope xchg sbb icebp ljmp inc fild (bad) cli jl imul mov jbe xlat cmpsl hlt inc fstl shrb clc xor cmc push pop dec fimull jno mov jg loope sub add jo xchg xor push and aas sub cmp pop xor call pop push cmpsl xchg shl pop or push loope or push (bad) loopne rcrb stos cwtl sbb xchg dec mov icebp fsubrp es imul fidivl mov xor shrl jns popa mov and xchg cld push jle xchg inc sarb ficoml movsb clc (bad) int jmp (bad) out lods cmc popf xchg test ljmp test xor mov add mov cmpsl add insl sbb jle std pop mov mov mov cmp loope ss jmp daa push (bad) ja fcoml xor jg js ds icebp or stos aaa int inc stos push jno sub jecxz and fmul int3 jnp cltd dec pop inc pop add xchg pop or std mov jae fwait fwait nop jg xor inc aas ffreep pop inc daa xchg scas mov cmc aas stc pop insl (bad) xor out pushf arpl pop push dec out aas ret jge ds lods mov scas (bad) jbe mov das adc xchg aas stos and mov mov mov lock mov test into push mov and dec rclb pop pushf imul sbb jo stos addr16 or jle inc std test scas out je nop sbb outsb leave ds or aam faddp cmpps or or arpl lds outsb xor mov fucom mov or pop rsm mov enter sbb call or mov mov fisttpll pop or fwait mov and fmuls ljmp jo cltd jmp movsb in pop pop pop insl out xorb lds outsl fucomip nop out arpl jge in add fucomip sbb adc dec sub push out add enter jg and (bad) jno dec cmp bound jl lock jge jae cmp push jne xor xchg lret inc loope lods ljmp imul sub push pushf sub pop popa fcomps orb mov test cmp arpl sti data16 cmc inc fimull dec xor xchg jmp sub xchg aas push jp mov push lods mov or test lock rcrl testl mov (bad) lock inc mov cmp out inc dec clc es shlb in das mov inc (bad) out mov clc mov cmpl jge cmp stos inc arpl (bad) or inc or (bad) call popf imul cmp test scas jp cltd sub fistpl frstor xor mov pop jp xchg (bad) push add mov imul dec orl in push inc dec movl pop xlat pop add stos mov mov dec jge shrl mov ja mov jl mull sub mov adc and xchg pop fxch mov mov in ficomp out fbld rorl repnz ss repnz test notb int3 xor pusha hlt adc adc nop jmp xor mov mov mov push jnp mov aaa sbb (bad) push xlat pop lods xor adc jne xchg lahf push gs xor sbb add dec clc mov mov jnp je inc mov fisub jmp mov lea sbb sbb (bad) stc inc sbb stc push nop mov jbe mov sahf push adc ret mov arpl ss xchg out popl sbb jns aad push ret xlat mov lock into (bad) in fisttpll xchg mov test jge stc in sub aas (bad) cmpsb cltd inc loope clc je imul pusha adcl and fnsave ret lods cmp or mov push mov fsin pop les pop cmpsb dec add es inc scas ljmp xor jg cmp fnstenv sub mov mov push rcrl jno cmp mov inc inc add push jbe ds mov std out ret mov insl push pop xor out repnz jae dec mov sub adc sub mov (bad) push xchg mov mov sub add sbb cwtl sub jne push popf inc cli clc inc mulb and add fistpll ljmp adc push dec mov (bad) mov sub std mov icebp insl sbb sbb lcall out xchg cltd mov cmp pop jb dec mov scas movsl push jge idivl pop arpl and cli jo in cmp xchg inc ret pop jbe add xor sbb push cmp mov mov int jp xlat pusha inc fwait mov lods cmp sbb sti (bad) rcll jbe test les aaa mov (bad) mov add fistpl loopne xchg sub in xor sbb push adc loopne les (bad) pop mov cltd outsl jne pop pop xor sub movsl mov fst fisub movsb loopne mov aad add mov ljmp cmp push mov ficoml jl (bad) sar shlb mov fisttp sbb jae out mov cmp (bad) cld jne jbe jns outsl jl movsl lahf sbb je or stos cli call push in lods sbb aas mov xchg mov or pop xchg push imul scas mov out enter inc out add scas pop test and mov or and aad aam add repnz inc stos outsl inc cltd jp imul (bad) repnz les dec ss dec adcb ja push mov gs rcrl mov popf out mov decl rolb and mov mov fwait cmp mov test fs mov xchg jb lahf sbb fmulp aas lret lret adc sub lret sahf test stc (bad) mov pop dec fldt pushf pop push mov mov mov or pop test add nop and push iret mov popa stos sub inc aas lret lods add xchg sub xor sub push popa fist jg lcall add sub test imul inc test sub std lahf cmp add stos xor (bad) mov loope jg (bad) insl mov or pop add adc jecxz mov imull or pop xor bswap and cltd (bad) push hlt sti cs mov inc loopne inc adc sbb push jp sub or out pop (bad) lcall call (bad) jne insl jb mov aaa rorl xchg mov pusha outsb and bound sub xchg stos mov jnp pop dec add int fisttpll inc je not mov mov sti ljmp int test sub lret (bad) int scas in lret loope push pop adc sub bound lahf lret xor lret inc test test xor stc dec loop xlat xor or (bad) arpl inc xor xor push fimul inc leave xor adc sub fistp dec pop xor pusha cmp dec sub popa jp push and aad dec sub pop adc mov lock int or ficompl roll push mov inc orl in inc jnp mov xchg push fsubp fidivl pop push in mov mov and rcrl pop (bad) xor mul sub sbb ret out stos adc sub lret pop cmp sub or push int3 call call cmc ret fidivl xor leave mov add out mov aam pop enter push test xor lds push ja push xchg xchg cmp mov adc mov mov std xchg div mov test sub and mov mov sub into in or loopne std insl je cs stos ret into and test mov cmp inc jno mov jge stc scas rcl xchg imul or and out xor loopne xchg cmpsl in xchg cmp or movsl in jg jp popf mov aad xchg lret ss ret mov int lahf lea cmp xchg xchg jb mov and and lods loopw aas out scas out push inc mov sti (bad) mov insb leave test loop mov (bad) stc lahf test adc and sbb idiv es int3 mov cmp in jp pop xchg and imul mov lock push xchg xchg cwtl mov pop out push xor in mov xchg dec xchg add fwait and lcall dec lret mov adc jb arpl ret or xchg pushf lods xchg les push inc mov jno push and pop je inc divl push scas in iret or aam in sti test clc mov mov ret cmp jecxz jae jns jnp test mov leave inc or xchg movsl loop dec rcrb mov jp mov div jns jae add mov cmp sbb and lahf aad xchg testl test xchg out sahf jno mov jnp movsb pop jecxz jmp addr16 jmp (bad) insl addr16 mov leave sub es push jl adc and mov jbe mov lds mov mov iret dec jmp sbb pop jmp pop jl adc push dec xor out pop jl cmpsb push mov jne (bad) icebp add fs stc outsb cmpsl pushf jg in adc mov into jbe cs loopne dec aad fistpll xor xor mov repnz mov lahf xor cmpl mov push mov jmp adc enter std in fsub push test push push pop push mov popf fdivl lods push dec sub and cmp jae inc mov ficoml xor sbb lds add adc jp sbb ds mov cs pushw xor mov sbb popa or into jae (bad) xchg dec mov push mov and cmp mov (bad) bswap movsl and div cmp stos lods pop mov push repz fwait in mov xchg pop mov cmp push add lods xorl (bad) ficoml mov pop xchg pop scas xchg xor pop pop mov mov adc sub xor jmp orl mov cmc cld stc add sbb loope mov into xlat (bad) daa or and aaa aad cmpsl out push push adc fwait mov xorl sub test jbe mov ret sbb insb sub jns or (bad) leave fnstcw outsl nop dec mov add stos mov push pop sub mov mov sub (bad) or sbb insl push (bad) in into push divb into loope ret mov imul sub inc push loop dec stc (bad) sarl xor ret cmc (bad) mov ror outsl loop xchg imul cltd ret in lea imul fcoms inc aam fildl shld push fldl2e sub les push mov pusha (bad) pop (bad) into (bad) icebp lret ds pop mov jecxz pop cmp bound adc mov xchg imul inc and (bad) fcmovnu xchg pushf jle cmpsb int3 mov aam adc add mov adc sub mov jle test imul stc jmp aaa fsubrs add rcrl jmp inc (bad) nop ja inc cmp xorl inc inc or push cmpsl sbb data16 test ficom pusha popa dec dec sbb decb inc mov mov dec and jo mov adc mov cld out add sbb rolb negb adc inc jns cmp xchg test inc sub movsb pop and sub add roll int3 push out mov sbb mov cs out and (bad) std jnp pop cmpsb add xchg bound js dec mov aas mov sbb pusha pop jae jmp push aaa out insb (bad) scas test mov push xor add leave jbe dec push test xor ret add jnp mov sbb ficomp cmpsl lret mov popa insb and gs push dec push mov mov add xchg jecxz jmp push jne sub (bad) jae jnp push rclb cmp xchg in xchg and test enter fs rolb popa jbe loope mov in lods push push out lret test ja enter adc mov mov mov inc push lds mov rcrl mov sbb jb pop addl aas loopne test jae sub and imul imul mov pop sbb pushf pop dec xchg adc insb fwait insb sbbb pop enter xor scas add xor push push mov loope and jno addr16 cld adc inc popf jnp inc dec or scas dec loope leave cld jl inc (bad) adc add dec sbb rcll xor imul (bad) cmc or sbb dec outsl stos sub dec sub (bad) ljmp mov les adc outsb popf (bad) jbe into and mov int (bad) in or push in xchg out fildll xchg cmpsl sti or sbbl sub (bad) adc jno xor idiv cmp sub rcl in sbb push inc push dec movsb mov adc cld ja je faddl mov negl pusha insl push and cmp es and int mov pop sub outsb (bad) fwait loop lret scas mov xchg and data16 jp cmp jns or mov fstl movsb jecxz shr cltd test call or add lds lock sti inc push imul inc mov ja ret jne jnp inc into inc cmp js popa test xor xchg gs lcall xchg mov jl popa call ds das mov in push orl adc roll repz push aaa pop imul mov test cmp and mov sub rcrl fnstenv imul (bad) push enter addr16 (bad) cltd mov imul rcl and insb sahf xlat inc sahf pop push out (bad) sbb divb in pop or in ficoml test out lods shl mov in push (bad) xchg xchg cmp roll mov rolb das jb lods sub jae cmpsl sbb dec mov and or fmull movsl push popf ret inc cmp (bad) xor dec sti scas jp sub imulb or test xchg inc lods popf sarl inc push jbe rol scas imul push bound leave add jbe (bad) lret and add inc or jns adc cltd aaa out loope insl dec fs xchg xor xchg inc mov push fsubp in jb jb ljmp mov shr fwait nopl in and in aad push dec cmpl mov mov or mov mov sub scas repnz (bad) adc sbb sbb pop pop inc in cmp lret xlat (bad) insb aas push add jne je xchg mov xor fsts aam (bad) stos mov je loopne out test push xor jns cs jecxz inc aaa es fiaddl daa adc aam movsl sub jae (bad) or lcall mov adc adc aam test cmp pop ljmp jns jecxz xor mov pusha push lret out xchg cmp jmp mov sti xchg leave mov or into movsb sti sub pop or out ret adc inc lods sub ret inc mov (bad) xor cmp push stc sub sbb or cli and push cmp add (bad) xor sbb cs adc jo jbe pop sbbb jmp add add cmc pop add inc dec pop dec pop stc cmpl sub pop cmp sbb aaa xor inc lret mov arpl inc sub sub mov pop in and inc outsw xchg xor (bad) mov sub fstl je push js mov fldt jb and push fdivl and fs jmp push mov in dec jne xor mov ljmp add stos rolb movsl hlt adc fwait (bad) xchg roll int add movl adc pop nop inc push in cltd enter pop insb mov adc push stos stos shlb pop and mov dec sahf push je xchg idiv sarl inc scas mov add cmpsl inc mov xchg xchg into mov popf push xor push negl daa andl repz out ss mov mov ljmp call aad sub enter inc jne pop stos out xor lea pop fwait rcrb jmp and lahf stos (bad) mov outsl movsb scas dec popf lods sbb mov or mov mov adc js das movsl faddl call aas and inc push out xor pusha push pop push cmp cli push adc xlat movsb (bad) mov popa add cmp lock scas mov push out push iret xchg pushf xor adc pop push push rclb adc call mov popf fs clc stos clc in xor or xchg gs out sub xchg out xchg popf push (bad) (bad) mov xor mov cld ljmp leave divb fsts aaa (bad) pop mov addr16 sub jae dec ss cmp push add sub push push jo inc loopne dec ss loope,pt jnp cmp jl (bad) xor xor (bad) jmp stos into clc xchg ljmp js notl es lret xchg mov jp adc xchg dec pop mov insl and cmpsl lret mov xchg clc lcall cli out xchg mov jae jp fstl adc lock inc iret mov push dec mov inc add pop test out mov clc pusha pusha pushw push push rcr std adc jbe hlt jno sbb mov or mov nop add mov jnp cmpsl xchg shl out loope adc enter sub (bad) adc (bad) mov movsl daa sarl adc and into xchg fcom fnstenv dec xor or imul adc (bad) in fsubrp sbb gs dec movsb push xor jo pop mov fwait or pusha jmp pop pusha pop test call mov cmp or cmpsb imul jns xchg cli xchg test mul sub xorl lahf jge pop (bad) fsubrl cmp out cmp mov ret adc xor int mov sahf ficom or rsqrtps stc (bad) mov mov xchg les inc rorl icebp scas or xor enter aad cmpsb faddl rcl sub in jl add scas push push sub push jns enter jg aas shrl mov rcll mov dec adc or pushf aad into int jp aam (bad) daa mov push sbb mov fist test inc jno popf js cmp jge push jno xchg cmp pop or mov pop shrl jne inc mov aad in lret push in or mov sub dec gs scas dec popf xchg sahf mov sbb aas sbb or test push popf pusha cltd stos xor cmpsl jle pop repnz jmp xor (bad) mov jnp ja adc cmp xchg neg mov loope nopl js dec sbb mov cli ljmp dec dec inc pop les push fwait sti call push cmpsb (bad) pop mov pushl addb xor mov push ljmp lret aad shrb mov lret sbb imul pop fwait xor sub adc sub mov adc sarb adc push mov fisttpl cmpl mov jecxz adc and cmp cmp mov mov add cmp movsb std pop ds out cmp idivb jl push lret sbb (bad) add mov dec sbb xor pop out insl sbb adc push push ljmp (bad) jecxz cmp push cmpsb iret mov stos call mov call xor mov lods insl lods sbb sbb add push inc and repz and sbb adc inc ret sub cld mov lods jg sub out push (bad) loope mov xchg push divb scas xchg mov lock pop or pop jne (bad) jnp lock (bad) jecxz dec incb gs inc xor xchg push and sbb push dec jne mov add add test add pop popf fdivp cmp mov popf cmp add pop outsb sbb sub fs mov fmuls ret jle mov shlb push sbb imul repz rcrb or mov dec jne adc adc movsb jge xlat sub subb insb bound push dec jl lahf mov test mov jno nop adc xor lods out cwtl in adc insb pop inc cmp or idivb stos mov rcll dec add or (bad) mov lea dec (bad) or sbb xor dec popf jne sbb shr jbe jo cmpsb xchg mov jnp mov andl sti je loopne cmp mov fmuls sahf sub cld push sbb idivl mov dec cwtl popf sub jb or or push inc and ret sahf mov leave adc cli inc sbb and stc in fcmovne and icebp push pop add (bad) push sub or (bad) lret (bad) test sub shr jle insl pop je pop fisub movl pop lret adc mov imul xchg xchg test sub lods lahf xor mov fcmovu push ss lock adc jp jg push cmp mov mov inc fistpll jg jp (bad) mov mov movsb idiv push or nop fwait imul out das daa andl mov out sub or std das test mul imull repz cmpsl jp (bad) arpl outsl out scas aas sub cmp popa lcall adc rcl mov sbb (bad) or push sbb push es js (bad) imul fisttpll ficompl cmp fidivrl jle jbe rclb loopne xchg cmp in test pop and pushf mov xor and mov add scas mov adc jae sbb loope add es jge sub out leave jle cmc std push pop cmpsl aad negb mov (bad) daa xchg daa enter mov dec (bad) mov in popa mov rolb hlt je push inc mov add xor xor push sbb dec jge mov or insl mull lret sahf add sahf mov sti adcl sub mov in dec lods rcrl lahf addb push xchg pushf pop push test mov mov cmpb dec push mov pusha push or (bad) mov dec clc add xor leave dec sbb mov mov inc push fdivp xchg and sub jne mov aaa jg mov inc mov inc je sub pop push cmp ds scas sub xlat dec cmp mov and mov push outsb das mov mov mov lahf cmpl fs stc add and and lea xchg jle lahf test fnop or mov inc cmp cmp cli push repz mov (bad) (bad) imul mov jne aam xor sub sbb out pop outsl lahf fnstsw lock or fildl fldenv das mov mov pop ret movsl mov xchg lret outsb and and (bad) lahf je nop push or (bad) jo add mov jg push repz xor mov cmc aas imul jle push icebp add lods pop or mov lock sbb sbb addr16 mov (bad) mov btrl jmp cwtl fidiv cmp inc mov rcrb lahf scas mov sub sbb mov mov out ljmp shrl adc scas jo into or mov xchg fsubrp loopne or ljmp sbb loopne leave call out pop inc repz mov and sub adc fnstcw jl cmc mov push fldt js push mov (bad) mov pop scas cld in sahf sbb sbb in or and jno insl dec or add inc mov and jle dec sub push sub push (bad) pop dec fisubl leave push mov outsb (bad) adc mov ja (bad) out mov jo aad aam mov inc cld out rcl ret push popf pop js and or aad pusha test out movb and xchg fs data16 fstpl dec mov out push pop add rolb mov jecxz push jg in push jl cs iret in out enter xchg add mov and xor out sbb jl cmp fdivrs jno mov xchg lcall xchg in (bad) jnp xchg inc in cli dec xor fildl mov mov inc dec into push mov incb and pop xor push negl mov mov xor stc lea lea (bad) sahf mov test add jnp repnz dec xor add mov xchg or jmp pop mov push push xchg leave test out push dec push jp jge leave lods ret mov add sub in pop or movsb enter in push push push push or scas sbb sbb jae sub in popf (bad) loope push out fptan push inc pusha sarb test test and icebp sbb mov out clc jb fwait adc mov pop popf push fnstenv jb mov xchg arpl cli ret imulb sub xchg das push call aad push or and mov mov idivl or push add adc and inc bound xor lret or pop repz call sar dec adc jle fndisi(8087 les lahf cmp out scas pop paddb add fsub in into je mov ret outsb push cmpsb push push sub xchg js lods mov cmp in out dec (bad) icebp in inc mov pop arpl fdivrs js inc scas rorb in add mov rcrl (bad) scas jbe dec (bad) call lret stos jge pop sahf mov and (bad) mov jg mov insl popf xor xchg jecxz test cmpsl fcompl fs mov aam add mov roll (bad) cmp fimull sub push and mov mov pop aas mov pushf mov std mov push or xor loop int (bad) jo int addr16 sets scas jno sarl push mov mov in or jmp inc and ret imul loop in inc bound jb pusha lea jmp int lds cwtl rcll jns ficoml push push jg and aaa into sub inc stos sub iret sub stc inc mov jecxz sub (bad) xlat mov pushf (bad) pusha js mov add mov mov es dec adcl push mov cltd dec fsubs xor (bad) xor rorl les fwait aam push sbb les aas test pop loopne out xlat iret mov and ss int je pop out sbb xor lgs jno out cmc sti xor cmc sbb pusha scas fisubrl and les fdiv sbb mov xchg pop jo rclb jns mov xchg lods das test ja sbb ja add lret hlt mov pop call pop lcall pop fnstenv xchg dec inc adc dec sbbb mov dec nop nop lods sbb test test lods pushl cmp divl daa pop jo out and push out lock add adc (bad) hlt jg adc inc or xchg xor or push ds idivl push jb dec add push xchg jne out pusha (bad) out sbb scas iret es mov stc pushf fiaddl jb and or scas into or in cmp (bad) rclb inc cmp push sub in (bad) mov dec pop push fildl inc (bad) fidivrl daa or fs add cmpsb mov sub adc mov pop jl inc nop nop mov xchg sbb jbe in push aas push out and hlt xchg in add iret adc idivb int (bad) mov sbb popa movsl jle dec push cwtl lret pop jb inc xchg out mov pop adc pop jbe jp xor mov in inc (bad) pop fisubl (bad) mov dec and mov lret pop sub or scas mov or pop loope mov (bad) xor inc inc idivb insl add jb (bad) jp inc or mov insl fwait mov xor (bad) das call mov pop sti dec push fcomip out push test sub xlat out (bad) lret jb push (bad) enter scas loopne mov xor pushf and iret sbb fucom push cld loope test push dec lds es inc push imul gs scas fwait dec mov jnp and cmp and sbb xchg mov dec pop int lea xchg std cltd and jo clc popa stc adc mov xchg sub shll (bad) adc push iret or sub in daa push and dec stos (bad) je adc aad mov mov push push add gs push xchg scas cmc mov cld cmp mov jno add push cmp stos (bad) lods cld arpl js popl shrb mov sub jl gs mov mov mov mov jmp inc pushf jnp popa test call hlt xor xchg js xchg (bad) repnz push sub fs xchg xchg fisttp or ja (bad) das add je hlt dec (bad) fs jmp stc sub dec pop add enter dec xchg mov sbb push and shll sub mov jecxz dec dec in add sub xorl int scas cltd xor dec push sbb out pop xchg and xor (bad) movsb cld lock test (bad) or jne sbb xor ret addr16 rolb call scas inc arpl or inc or dec jno pop cmp fimull mov cmp pop jle dec rcl xor push push loopne mov shlb cli xchg dec mov mov lcall xchg mov (bad) sub add pop push lcall ja sub push outsb mov arpl pmulhw inc test inc imul and iret repnz bound imul rclb jp mov mov push or inc les in bound icebp pop loopne fmul imul xchg push je popf add stc pop xor ja (bad) fwait out sub and daa fcoml sahf lahf push lds add xchg (bad) cmp cld adc int3 jg stos pop xor mov push aas jne (bad) xor repz and push cmpsb cmp cmp or into mov (bad) add adc fdivl pop jbe and jge jbe or icebp rcr inc sbb sbb out out push inc jo dec aad pusha xor mov push test pop sti pop iret xor cltd inc imul mov mov mov or jmp (bad) hlt dec inc xor jb mov sbb push rcl fs mov decl pop je das dec sbb add adc mov inc push lds push jecxz and (bad) test sbb shrb scas inc inc stos and cmpsb xchg or pop push or test mov out test outsb (bad) xor sub jbe lret dec lcall push mov cltd out nop out inc sbb xchg pop mov out (bad) jl lret movsl pop shll enter out addr16 jmp and scas sub xor ret les movb lret adc mov loope dec loope test adc add rolb inc push pop int3 (bad) (bad) sbb jae das ljmp ja jnp stos pop (bad) insl inc cmp mov je stc add inc or mov or inc inc jmp fcomip add inc jno lret or orl mov icebp jmp xchg stos jmp (bad) or stc pop test fisttpll jge lret movsl cmp (bad) xor lea mov pop add dec fsubrs fcoms jge fcmovne adc mov into addr16 sub or ficoml xchg lds jne cli cmp push push imul inc imul push mov sarb or and xchg (bad) loopne in (bad) in insl popf mov xorb adc js shl cli notb mov lods adc fcmovu imul inc out loopne popa jnp enter adc sub in push xchg daa negb cmp outsb lcall ja inc xchg pop xor mov (bad) jge jecxz ds cltd mov pushf int3 xchg in shl gs in int mov insl jle inc lret inc leave adc mov data16 popa inc cmpsl mov jp sbb cwtl or fadds adc mov cs ljmp aad in aad sub out dec xor inc dec cmp loope xchg push add into lods cmp xor jne sbb jb push inc stos repz out (bad) or mov call repnz fwait add gs pushf mov jno cmp inc pop ficompl scas xchg inc icebp pop std nop xchg xor xor ss or inc xor fnstcw push or mov pop ret lods adc outsl jae mov inc jb pop or push cmp and sbb (bad) push (bad) ja out push cld lods pop clc mov (bad) cli dec imul push xchg in pop inc and mov jo fildl enter xor inc or pop andl gs pop arpl fistl cmp dec ficom leave rorl pop dec sbb lods and nop inc js inc lahf rcrb das fmuls enter pusha xchg adc sub sub repnz aaa fisub sarb (bad) jo cmp sub xchg add mov pop aad repz mov jae push out push dec data16 push ret jnp pop xor add jns xor inc andl and and xchg fsubs in push push insl cmpsb arpl rclb add (bad) sbb push inc dec hlt sub pop bound lods jb scas js add jmp das mov aaa mov xor int sbb in out ds pop fcmove mov cwtl dec add xor es and loopne pusha xor outsl out and lcall jb in (bad) xor cmp xchg aad xor or add jno mov mov fcmovne aam daa or (bad) (bad) dec inc mov jg test add adc mov stos fild add orl sar xchg inc data16 mov and out inc push xchg ljmp jmp fs mov sub in jne jl jae or je imul dec inc repnz xchg ja mov clc xlat in push imul jecxz negb sbb cmp jle mov pop aaa (bad) sbbl into fdivrl pop fidivrl dec add leave dec push mov dec aas xor jo std xchg jbe (bad) in pop mov (bad) fidiv lea aaa cwtl imul add (bad) fsubl int3 rorl inc jne pop (bad) jl cmp inc mov pop cmp dec add lret lcall xor outsb xor fs and mov in cwtl fwait or mov adc insl lock stc loopne stos cmp xchg fmull inc in movsl rcl repz mov mov pushf imul test fdivrs fnsave push hlt dec cs jns dec push call (bad) fs insl (bad) add xor sti or jbe push mov paddusw mov mov insb movsl mov std loop std inc pop push add add xor ds pop data16 mov sub pop mov sahf mov hlt out pusha stos (bad) mov xchg out jo add cmc mov mov loopne mov ljmp push rcrb sahf push mov jmp es insb mov insl inc pop fcom lret xor or cld hlt mov incl mov pop int jp sbb push sahf jbe xchg addr16 sub out or in test adc lock push push sub cli rorb repz jno sbb or sub mov clc jecxz fwait jns (bad) ljmp arpl mov xor pop (bad) mov xchg shll push mov lahf sub std in cmp push add xchg out clc jmp inc xchg stc loopne cmp out cmp sbb andb pop inc cmp iret ret add fsub inc pop iret cmpsl push das scas xor fimull mov sub imul xchg mov fwait adc (bad) lret mov cmp outsb cmp xchg and mov stc push in sub and test pop loop aas jb push loopne xor add mov jo jecxz loop mov mov ljmp pop mov daa js and jl sti sahf pusha aaa lds jnp in xchg faddp mov xchg mov shrb or (bad) outsb popa (bad) ss xchg in (bad) cld jge test shrb push arpl cmp sbb push les sub cli xchg adc sub jo cltd cmp dec add in add je pop sbb daa in add xor (bad) cli icebp mov jns xchg push pop xor sbb add sbb fwait insb and mov mov pop xor inc loop das add shr (bad) sub outsl cmpsl xchg movsl mov pop orl xchg (bad) dec outsl jae,pn inc mov lret retw lcall xor fisttp imul rorl lcall enter or sbb notl pop stos (bad) sbb rcll movsb pop or std ds ret mov inc mov fwait pop add cmp inc test inc jo (bad) test push cli in mov in add lret xlat jg out mov testl in push lods sar and daa in or in adc push cmp pop (bad) lret or cmp lods and pop sub inc push test (bad) mov pop stos andl add push adc outsl aam and mov aam sbb notl and pop shll test or adc sub fistl push repz cmp incl hlt dec inc fiaddl mov lret cmpsb xor xchg or insb or fcoms repz xchg xchg xlat mov jg xchg xchg mulb jg stos popf sti lret push dec mov xor fdivrl (bad) cltd pop stos sub shr (bad) sub jae cmpsl ss inc fiadd stc fidiv (bad) in and cmc pop ret mov enter sub jp cmpsb mov inc fs les cmpsb rcr lret inc cmpsl push pop (bad) mov add xor outsl aaa or gs or cmp xchg insl xor ss out mov or push jbe cmc mov cli jno mov jns in pop lcall add pop pop pusha and or push xchg loope (bad) pop ds mov mov inc xchg xchg mov fnstsw and push ret dec sub mov push cltd pop in fnstcw in lret cmp push (bad) cld pop scas mov ret fldenv mov out or mov (bad) icebp push scas fildl jns lds int fistpl xchg xor xchg (bad) jno dec int3 je imul add gs out mov jns fidivl loope js xor jl int3 ss xchg xor jo in mov cmp (bad) out movsb jle js mov cli cld dec add jno jge jo push aas pop jg jne lods pop cmp (bad) icebp repnz fimull ds sti xchg out cmp pop nop les pop adc (bad) or push cmp mov out int3 jae dec mov out adc mov push dec fisttpll movsb pop mov rcrl movsl xchg aad sub mov lods std ja arpl stos repz ret seta xor xchg ljmp (bad) jmp and roll cld jnp pop or into lret add sub push push out sub outsb add stos push repnz adc cmp pop xor adc push inc sti mov loope mov and (bad) daa cs leave push cmp cmpb aad push (bad) bound hlt test scas inc and (bad) and fcmovnu sbb lock sbb inc dec dec mov outsb mov push test insb dec ss mov and xor jne test push clc dec call xor push dec adc jp mov or je inc aad pushl cmp loopne xlat les cmpsb icebp stos mov ret scas inc push popf fs adc cwtl cmpsb mov mov mov add incb push mov push cmpsl add pop lods fildl mov decb adc inc xchg xchg pushaw cmp outsl pop jmp adc pop imul (bad) inc and or or inc and bound xchg inc stc aad maxps dec and pop sahf or pop sbb insl lods dec ljmp lret ljmp iret sahf (bad) adc test frstor cmp push push mov add cld jl ror mov fcmovnu divl push in mov lret loope (bad) or (bad) int inc cmp mov pushf dec xor jb mov das mov scas adc pop stos stos rcrb inc sub fdiv iret cmp xchg dec nop jle aas push dec in cld fild pusha mov lahf mov das dec (bad) arpl je mov dec decb aam push jne faddl into sub and xchg (bad) mov jge and add sbb popf add lods int data16 push xchg jmp repnz icebp cmp shrl xchg cmpsl mov inc repnz ja cmp mov test and adc pushf cmp out andl (bad) dec int push lods cmp xchg cmpsb lea fsubs es or std inc sub shlb mov dec out (bad) jmp cmp pusha sub shlb inc (bad) out test or sub jp out fsts cli xchg cltd incl mov mov mov mov xchg push pop loopne in fisttp xor imul and call test xchg sbb adc nop cltd push (bad) dec (bad) cli push cmp jno adc xchg cmp adcl cmp inc sahf imul jg push out add ja pop jecxz adc pop add cltd test pop int3 mov push ds test test fldt data16 mov in iret fisub or pushf fistpl mov adc or jne imul pop or movl fldenv ja cmp popf pop fnstsw or mov setb out xor inc call fiaddl inc sti lcall clc andl pop jbe (bad) mov pop lods add icebp mov sub icebp fdivr xchg fcmovnb xor out pusha les adc rcrl sbbb movsb inc inc mov imul cmp data16 mov int sbb fnstcw jo sbb aad add leave mov int addr16 and lods push or inc push loop pop cmpsl ds out jp xor movsl div pop pop nop lcall xchg lds xchg stos loope aas inc fcomps in in adcl xchg in jae xchg adc js mov loop int3 or jecxz mov push and cld jbe aaa pop mov fistpll adc xchg ret enter cmpsb mov sti push inc xor call and push and mov (bad) scas cmc adc sbb ret shlb loop aaa dec lea dec cvtps2pi mov mov fist push mov sub stos in (bad) insl adc mov and out sbb mov jbe inc add sub mov addl mov fsub (bad) lock mov mov js shlb test subb cmp outsb sti dec add aad nop aaa adcb jne xor es mov xchg lcall mov sbb sbb cmpsb mov and movsl andl and dec fwait jns pop daa cmp ret cmp mov mov das cmp call idivb jl daa adc ja mov enter mov or sub decb xchg and push incb dec cltd idivb int mov xlat and ljmp dec jns,pt rclb pop and lcall add neg xor insl mov sub and push xchg arpl xor pushf aad jo xchg or cld xchg push or push dec xor fwait out dec scas ds xor dec test js adc inc pop sti mov cmc mov mov out push jmp jecxz out leave imul mov add adc notb out or sbb sbb xlat push or dec cltd out (bad) daa mov cmpl aad jl je test stc push into xor xchg pop xchg mov ret cmpsb lods loope test loope add dec lods out cli clc mov les js pusha dec sub jbe adc imul sbb rorl clc sub aad sar inc test test jnp xchg mov scas pop lret test mov aad leave lret push push pop in outsb push sarl add pusha jl jge sub xchg mov je push mov fstpt in aad inc xor xlat mov es fnstenv push mov (bad) shl mov cltd mov cli sahf and call or pop rol aaa sub or xor mov mov push ljmp sbb shrl sbb push or jl movsl (bad) mov clc sub js jae pop push inc push or mov or jl jle jnp pop popf cltd mov xor or pop mov cltd dec xor xchg adc lea stc movsl cs out and test sub insb mov jmp jg insb ret or inc pop sub aas call push inc cmp sub adc jno clc cltd pop or xchg and insl push push in inc std mov xor mov pusha lret jmp pop inc and adc mov dec push push (bad) and mov mov or adcl mov sbb pop fwait dec mov adc mov mov out sbb mov mov pop mov jp lret ja jnp icebp jnp int3 lahf es xor loope outsb leave lods add fdivrl das sub mov push or ljmp pop pushf cmp cmp mov call jg fisubrl cmp or push stos insl not push in sbb aad dec sub es cmp int mov test xorl lock imul jl ret popa and data16 imul test cld xor inc xor lds push mov sub xchg xor (bad) les icebp dec fistpl or scas sbb in inc inc popf gs scas lcall ror mov jns cmp paddd push in pop push ja add mov sahf repnz daa sub push mov je stos je mov call pusha and sbb xor mov gs mov mov lea sbb lret dec or loopne push rorb out add jle cmp loopne cmp fcoml and pop cmp and int3 lret xchg pushl push rorb adc mov loop sahf roll loop fwait incb add xchg inc push lahf loope sub lea ud1 cli or push scas ljmp inc rcrl or in nop stos xchg inc rorl push (bad) mov cmc mov cs test xor pop movsl xchg add add hlt sub insb pop std xchg inc xchg sahf mov push std jge xor (bad) and or xlat out out xchg push mov pushl mov jae dec mov sbb push decb xor lahf jge repz sub enter pop mov jnp fs (bad) scas mov jb aam push arpl xchg jmp stc jno,pn out or ds xchg pusha mov push aas mov sbb ror popa sub mov sbb xorl rcl popf jbe xor xlat xor out outsl and xor in fidivl or cmp mov dec stos ss out daa sub xor arpl fwait cltd sti mov xor add insb lds cmc or lods xor xchg repz int xchg dec mov test dec ficomp sub sahf inc xchg jmp and cltd jp pop dec insb sbb std arpl xchg mov jg xchg xchg repnz cmp add lret arpl or jae mov fnsave clc xor xchg pop dec mov or stos pop imul notb ret xchg hlt (bad) xor xor mov imul test xor in fsts movsl cmpsb xchg aas xchg pusha adc jae and dec pop inc dec cmc mov ljmp cmpsb or cli xchg or lods jno leave adc sbb adc dec add pop push dec imul cmp adc js leave iret sbb xor (bad) (bad) std mov or jo sarb (bad) pop dec add pop sub pop pop push mov out aaa dec sbb push cld and jb into dec mov cld add sahf xor ret mov mov aad outsb push push cmc imul mov repnz rcrl mov xlat ja lret mov lds sar jne aaa shll mov sbb pushf adc push xchg pop (bad) fsubrl mov out cmpsl sbb fistl pop nop hlt loop cmp sahf and test rcrb popa mov pop int3 adc daa add cs or and xchg popf loopne mov adc movsb sub lahf andb addr16 in xchg adc clc lds jne lods inc fcomps ss daa mov dec xchg and jl icebp sbb cmp mov jo lahf test movsl jl add xor scas scas mov mov addl imul mov les push insl pop sub popa push pop loop (bad) (bad) push enter icebp xacquire mov icebp pusha ror hlt sbb ffree inc and jno das inc scas mov test mov jbe popf or jo xchg xchg icebp test mov std push push dec fsubrl jmp cmp rcrw loope scas dec test xor aad xchg test inc bnd mov scas rcrl fbld inc cmpl and cld pop fild repnz in inc mov repnz aas mov mov popa push or in mov pop fwait xor pop lds popf mov jmp aaa jmp push cmp xor daa loop push inc stos pop stos cwtl jmp add jnp test lahf js mov push mov (bad) dec subl push aam lods in or lret es cmp pop lret es sub imul xchg cmpsb fwait jns int3 xor xor inc add add pop and lods or push test sub jnp pushf lret adc or pop pop pop sbb mov pop push shr loope subl movsl pop push mov sbb xchg xchg jo and and and pop test or ja data16 cmpsb mov js pop pop nop scas dec je rorl ljmp cmpsb pop jecxz and mov cmc mov mov cmpsl mov dec jb add mov es push xor rcr sbb sbb and iret leave push lods push or iret repnz bound add xor imul adc cmp cmpsb cwtl push les mov je jbe jle scas aad jge mov ficoml push xor icebp xchg es js sub cs iret fbld ja push fsts test xchg adc stc gs imul mov in jle daa push jnp inc dec inc xchg insb std cli (bad) xchg out inc push mov or push dec mov in (bad) dec dec (bad) hlt pop icebp dec add pushf (bad) (bad) lret sti lret (bad) jecxz (bad) fcoms aam xchg lcall sub cltd popa cmp test adc pop sti xor xchg ja adc mov gs xor fist mov and xor mov add xchg cld pushf outsl mov int mov and add inc out pop scas js das and mov mov add idiv pop jecxz cmp mov out pop jno mov jecxz and mov mov negl dec adc mov mov bound out dec dec push fwait push insl push and fisub lea lods and inc mov fistp and jecxz mov pushf (bad) mov xchg lcall push cmc cmp call mov (bad) mov jp enter icebp mov test cmpsl stc push mov cmc loop ret or dec cltd stc cmp aad inc dec aad pusha popf repz add inc fucomp outsb notl ret fucomip dec loop imul jbe (bad) fsubrs repz or sbb (bad) pusha into test popf cmpsb cmc fs push out mov scas xchg test pop cmp mov jge xchg call mov pop daa pop xchg sbb adc push xorl adc add das (bad) daa mov ds ret into xchg and xchg int3 xchg sti mov add cmpsl sarl xchg sub (bad) out lcall cltd jle sbb and aaa imul cld mov sti lods mov fisttpll fsubs cmpsl cs dec and xchg das das xor fwait into mov popa adc jmp aaa xlat sub (bad) ljmp test dec add jnp mov cmp adc inc dec mov leave movntq adc repz push cmp mov pop pop nop cmpsb sarl add mov xchg out mov and adc xchg push out js cmpl sbb jl mov adc inc fwait dec gs and stc or adc stc das stos insl adc mov enter xor push xchg sbb jno arpl (bad) repnz imul out mov scas insl in test sub shrb jg mov push out mov and cs dec lods in and add cmpsb fldenv xor (bad) mov ljmp lock lret nop mov xchg lret aaa xor jp subb sbb xor adc int3 (bad) mov sbb lret inc shll fistp sbb push fs add push leave or stos cmp mov stos clc mov or int3 data16 mov mov mov outsb icebp jg popf push pop mov cmp imul aas pop xchg fsubr sbb in test addb mov cmc push mov mov inc jae imul jne je lods out std pop sbb pop lock aam testb bound xchg icebp push sar or adc mov enter push mov fstps mov out pop inc mov cmovno or popa push xorl sub popa mov add jo adc incl inc and icebp sbb arpl mov mov mov scas je imul jne (bad) icebp outsl sub pop sub cs aaa gs sbb aas icebp mov in jbe jns xor pushf aad mov ffree mov (bad) notb push mov or rcrb shr dec es fwait jbe push sbb inc das dec cmp xchg sar stos and dec sub popf inc lock dec xor shr jge std mov dec inc sahf and jecxz lret mov sbb xchg push in iret jns inc and xchg mov pusha loop icebp jb mov pop in into dec imul jmp inc lcall mov loope or insl es sub mov cmp jo or (bad) hlt push xor sbb movsl aaa pop loop pop mov (bad) mov arpl push loop or aad (bad) dec mov in mov leave adc jnp out lret adc movsb xchg rcrb jmp bound mov mov cwtl add pop das pop ret movsb pop rcrl xchg stos jmp int3 push mov dec pop pop add mov mov sub mov pop or push xchg or cltd (bad) xor inc dec or leave mov push scas jo mov cli cmp cmc (bad) aam fidivrl (bad) mov push out mov push xor sub fcoml adc aaa pop adc sub fucomip fnop jg push mov mov cmpb or idivb jge sbb cli mov sub fbstp js sub push popa push jg insl or cld push arpl ror jns in mov jnp pop lret sbb pop push aaa xchg iret mov inc clc xchg (bad) mov loopne test and inc imul adc dec int aad hlt test (bad) ja cmp xchg mov ja cmpsl xor out adc (bad) pop (bad) in push mov push xor lds in stos jne fimull addr16 popa sqrtps mov jecxz rorw inc jmp enter sub insl xlat aas call push loope lret bnd xor push xchg insb mov cwtl cmp push jl inc cmp shlb sbb and lds sub dec je and cld retw sahf dec cmpsb push and xchg mov xchg jns std lods cmpsb xlat cli or (bad) mov insl mov mov pop repnz stos nop adc sub (bad) cmpsl in andl push cmp sub inc push or mov or or xchg repnz adc cbtw mov lods dec mov rolb stos dec sbb out fistp push xchg arpl inc add sub mov cwtl sub jae push push cmp ss popa xor push bound outsb jp outsb je aaa jae cmp inc jb xor outsl outsl cmp dec imul dec dec jae inc xor inc aaa jb inc push or cmp imul xor aaa inc dec jno push dec je pop dec inc jo aaa xor dec dec insb outsl bound cmp gs jo push inc inc jo inc arpl jae xor jbe push cmp push js push inc push xor insb xor aaa dec xor dec je cmp jns xor bound xor jp jno dec xor xor imul push insb cmp insb xor pop inc xor xor push xor dec xor push dec imul je xor je inc dec xor fs inc cmp jbe jns jne ss xor imul cmp gs dec push outsb dec imul je push inc jns xor or insl inc pop jno jbe xor jp outsl xor aaa pop inc inc jne push dec jno push jae cmp dec xor jno aaa fs or jp jno imul je xor xor aaa dec pop pop xor jbe push jbe cmp addr16 jno push inc inc je pop push pop xor ss push inc ss xor jb xor cmp jns push or ss dec xor dec inc xor bound gs dec insb xor aaa jns jo xor push xor jp dec or dec aaa bound xor dec dec dec xor cmp xor dec push je dec inc js inc dec push push dec jo dec push inc bound cmp xor outsb inc popa xor add dec inc add add add add or add jbe xor xor add add add add or add push xor add push je imul add add add push push add inc add adc add and dec inc add add inc add mov insb outsl bound add add add add add push push mov add cli and add add add add adc add pop add add add xor add jge add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jge or mov sahf add add add sahf add add add add aas pop inc pop push add or or add add or cli or ds jge push add adc push add adc adc add add add add and or pop es add add test add add sub sub add sub add add sub sbb add sub sub add sbb add scas sbb add scas sbb add add out enter cmc sub adc test add add push cs add xlat sub add movsl cs and or add push add das jge push add jge push add jge push add add add add add add add das aad adc add aad or and sahf add add jge adc xchg aad or mov sahf add add xor xor das lret add xor add add xor das adc es das adc xor aad or pop xor xor push add add xor adc add add jge push add jge push add test add add add add xor push add add xor push add or push add jge push add scas sbb add or push add or push add add add xor or fnstenv sahf add add xor sub add add add add add add add adc pop add add add add add add add add add add add inc or or adc add push add xor add add add add add add add add adc add add add add add xor add add add add add add add add and add add add add add add add add and add add cmp addb add and add add add xor add add add add add add stos daa push add add xor mov add sbb adc mov push add add and add leave add add add add add add add add add add add add add add (bad) add add adc add add add adc aas push pushf add add push movsb add add add add lds adc xchg and add add jno adc shlb add add sub adc pop sub push and add add add add add add xchg inc add add add add add add add add add add addl add aam add add addl add mov add add addl add mov add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add dec add add sub add add add add add add xchg sbb adc adc add add add xchg inc add adc add add add movb or add add add movb or add add add movb push popa add add sub add add add add add add addl push imul add sub add add add add xchg mov jp sbb dec sub xchg inc add add add add add add or sbb pushf sub xchg fistl (bad) add add add add add sub xchg rcll mov sbb add add add xchg add pop lods add sbb add add sbbl sbb mov add add xchg cmp (bad) add movsb add add xchg mov (bad) add add add add add add add xchg lods sbb add add xchg sub mov das add add xchg rcrb add add add add xchg cmp (bad) add add das add add xchg mov add das add add xchg xor mov and adc add add addl and xor add add xchg sub or and inc xor add add add add add add addl and mov add add add xchg lahf pop flds and mov add add xchg sbb adc and cmp add add xchg add and add add sub add add add add add add xchg inc add and add add add movb or add add add movb or add add add movb push popa add add xor add add add add xor add add add add xor add add add add xor add add add add xchg add add sub je add add xchg add and add in add add xchg add adc sub add add add add aaa add add xchg add adc xor sub add add add add aaa add add xchg or add add add add add add add xchg or add xchg or sub xor mov add add add xchg sbb adc xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) or (bad) or or add add adc add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add add adc add add and add add add add add add add add add add add add add add add add add add add add add add add add or inc add add add add adc add add add add sbb roll inc add add add sub loope inc add add add sub icebp add sub stc add sub add inc add add add dec add add sub sbb inc add add add or sub inc add add add pushf add add or inc add jecxz adc inc add add add or adc pop das pop add and add das mov pop add add or popa add add push das popl sub inc add adc bound popf add add pop das pop add and add (bad) add das popl cmp xor mov dec add add add das pop add das outsl add das mov addl mov mov add or xor inc add add add add add das sub add das sub mov add add add xor xchg add xor add add add add add dec add add add add add xor xchg add xor sbb repz add add xor flds push das gs add insb add add add addb push aaa add add dec add inc add add inc add jno xorb add inc add add add add add les (bad) add add xor xor add add inc add add push das popl xor sti xor xor add add add add mov xor add add or pop add popl dec add add xor add add xor add add mov or sti xor add push das popl or inc add add inc add add inc add add sti xor add xorb add or pop add xor add or jno xorb add or cltd add add das dec add mov insb add popl imul cltd add add das mov mov les pusha add or test add add insb add jb cltd add ja test add add push add add inc add add inc add add add add add add add add add add add add add add add add add add add add inc add add inc add add xor add inc add add inc add stos add add add add add add add add add add pop adc push add pop adc push add pop adc push add or add add or add add xchg add add add add add je test roll fild clc add add add add add add add add pop add add add add add adc add add adc add add cmp add test inc add add dec add add add add add add add add add or add inc add add add or add and add add add add add add add add add add add add add add pop sub add add add add add add add add add add add add add add add add add add sbb add add add add xor add add add add add add add add add add add add add add add add add add ja add add addl addl add add add push jo je je gs insl cs add arpl insb imul jb imul inc outsl fs je jb bound add jae gs cs arpl imul jb cmp outsl fs gs arpl outsl jb push cmp sub cmp xor das arpl push ss sub add je imul jns je insl add dec inc aas pop ja and pop es cmp insb dec sub je insl cs imul inc outsl jb jae inc outsl jb add subl (bad) loop (bad) loop mov orb stos loop scas loop scas loop stos loop lods loop stos loop mov subb lods loop mov subb (bad) loop stos loop mov subl loop stos loop mov subb mov subb stos loop lods loop lods loop lods loop stos loop scas add subl mov subl lods loop mov subl scas loop (bad) loop mov orb lods loop lods loop lods loop scas loop mov orb lods loop lods loop stos loop stos loop stos loop mov subl scas loop mov subb mov orb scas add subl scas loop mov orb mov orb lods loop lods loop scas loop mov orb scas loop stos loop stos loop scas loop stos loop stos loop stos loop mov orb scas loop stos loop scas loop scas loop stos loop scas loop lods loop lods loop stos loop lods loop stos loop scas loop mov subl subb mov orb mov orb scas loop scas loop lods loop lods loop lods loop lods loop stos loop stos loop (bad) loop lods loop (bad) loop scas loop mov subl mov subl loop (bad) loop stos loop (bad) loop lods loop mov orb loop lods loop (bad) loop scas add outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add subl loop scas loop stos loop scas loop stos loop (bad) loop lods loop stos loop stos loop mov subl mov orb scas loop lods loop stos loop (bad) loop stos loop scas loop mov subb (bad) loop stos loop lods loop mov subl lods loop mov orb (bad) loop scas add je outsl outsb add subl lods loop stos loop mov orb loop mov subb lods loop lods loop mov subl scas loop lods loop scas loop scas loop stos loop scas loop lods loop lods loop scas loop mov subl scas loop lods loop lods loop lods loop stos loop mov orb (bad) loop scas add je imul loop stos loop lods loop (bad) loop mov orb loop scas loop scas loop stos loop (bad) loop lods loop lods loop mov subb stos loop lods loop stos loop lods loop scas loop stos loop lods loop mov subl lods loop mov subb mov subl mov subl scas add subb scas loop mov orb stos loop lods loop stos loop lods loop lods loop lods loop mov subl mov subl (bad) loop lods loop stos loop mov subl lods loop mov subb (bad) loop stos loop scas loop scas loop (bad) loop (bad) loop (bad) loop scas loop stos loop scas add subl scas loop scas loop mov subl mov subb loop scas loop mov subl scas loop scas loop mov subl stos loop scas loop lods loop stos loop mov subl lods loop mov orb mov subl add subl loop stos loop scas loop mov subl mov subl lods loop mov subl stos loop stos loop scas loop (bad) loop lods loop lods loop lods loop mov subl stos loop stos loop mov subb stos loop lods loop lods loop lods loop scas loop scas add outsb je jb jae loop stos loop stos loop stos loop lods loop lods loop lods loop (bad) loop mov subb lods loop lods loop (bad) loop (bad) loop stos loop stos loop lods loop (bad) loop lods loop lods loop (bad) loop lods loop scas loop stos loop lods loop mov orb scas loop stos loop stos loop scas loop mov orb mov subb loop scas loop scas add orb loop mov subb scas loop scas loop mov orb stos loop stos loop lods loop mov subb scas loop mov subb scas loop mov orb mov subl scas loop scas loop stos loop mov subb mov subl stos loop scas add subb mov subl (bad) loop mov orb scas loop mov subb loop mov subb mov subb mov orb stos loop mov subl (bad) loop (bad) loop lods loop scas loop mov orb mov subl scas add je xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl loop stos loop lods loop scas loop stos loop mov subb lods loop stos loop mov orb loop lods loop lods loop stos loop mov subl lods loop mov subb lods loop stos loop stos loop scas loop (bad) loop stos loop lods loop lods loop scas loop scas loop mov subb stos loop (bad) loop stos loop scas add orb lods loop mov subl stos loop lods loop mov orb lods loop scas loop scas loop lods loop lods loop lods loop mov orb mov orb loop stos loop scas loop mov subl mov subl scas loop mov subb mov subb subb mov subl stos loop lods loop lods loop lods loop stos loop lods loop scas loop stos loop (bad) loop lods loop lods loop lods loop stos loop stos loop lods loop mov subl loop lods loop scas loop stos loop stos loop scas loop (bad) loop stos loop (bad) loop mov orb lods loop stos loop scas add jb popa insl add jae gs cs dec add subl mov orb loop stos loop lods loop lods loop (bad) loop scas loop lods loop lods loop (bad) loop lods loop (bad) loop lods loop scas loop scas loop mov orb (bad) loop stos loop lods loop stos loop scas loop (bad) loop lods loop lods loop stos loop stos loop stos loop mov subb lods loop stos loop stos loop scas add orb scas loop stos loop (bad) loop stos loop (bad) loop lods loop stos loop (bad) loop lods loop lods loop lods loop lods loop stos loop scas loop scas loop mov subb loop scas loop (bad) loop lods loop lods loop lods loop scas loop mov subb mov subb scas loop lods loop mov orb mov subl orb mov subl lods loop scas loop lods loop lods loop lods loop lods loop mov subl stos loop (bad) loop mov subb stos loop stos loop (bad) loop lods loop lods loop scas loop mov subl (bad) loop lods loop mov orb stos loop scas loop (bad) loop scas add orb stos loop mov subb mov subl lods loop (bad) loop scas loop mov subb lods loop stos loop lods loop lods loop stos loop stos loop lods loop mov orb stos loop scas loop mov subb loop lods loop mov subl mov subl subl mov orb (bad) loop (bad) loop (bad) loop lods loop lods loop scas loop stos loop stos loop stos loop mov orb lods loop lods loop (bad) loop scas loop stos loop stos loop lods loop (bad) loop stos loop scas loop (bad) loop mov subl scas loop stos loop lods loop mov subl scas add subb loop stos loop lods loop scas loop lods loop (bad) loop mov subl lods loop (bad) loop stos loop mov subl loop lods loop lods loop (bad) loop stos loop stos loop mov orb stos loop lods loop lods loop stos loop scas loop lods loop stos loop (bad) loop scas loop (bad) loop mov subl subl lods loop scas loop scas loop lods loop lods loop scas loop (bad) loop stos loop scas loop scas loop stos loop lods loop stos loop mov orb lods loop scas loop stos loop stos loop lods loop lods loop stos loop (bad) loop lods loop lods loop mov subl (bad) loop scas loop lods loop lods loop mov orb (bad) loop stos loop stos loop (bad) loop stos loop stos loop lods loop mov orb lods loop lods loop mov subb mov orb lods loop (bad) loop lods loop (bad) loop mov subl stos loop stos loop (bad) loop lods loop stos loop stos loop lods loop lods loop (bad) loop mov subb imul loop scas loop stos loop stos loop mov subl mov subb lods loop scas loop mov subl loop stos loop lods loop (bad) loop stos loop (bad) loop lods loop stos loop lods loop scas loop stos loop stos loop scas loop lods loop stos loop lods loop lods loop mov orb mov orb stos loop scas add orb stos loop mov subl stos loop stos loop lods loop mov subl (bad) loop scas loop lods loop lods loop lods loop lods loop scas loop mov subb stos loop mov subb loop stos loop scas loop mov subl scas loop lods loop scas loop stos loop lods loop scas add insb je arpl je gs gs je add jbe imul jne dec outsb imul imul add jae outsb arpl jae insb je inc jae outsb arpl insb insb bound imul popa insb insb bound imul bound arpl outsb fs outsb jbe imul gs insb je cmp arpl inc imul insb popa jae cmp add push arpl subl loop (bad) loop mov subl scas loop mov orb lods loop scas loop stos loop stos loop lods loop mov subl stos loop lods loop stos loop stos loop lods loop stos loop stos loop stos loop scas loop scas loop stos loop scas loop lods loop lods loop lods loop lods loop lods loop stos loop scas add orb loop stos loop mov orb loop lods loop stos loop scas loop (bad) loop scas loop (bad) loop stos loop scas loop scas loop scas loop stos loop stos loop stos loop mov subl mov subl loop stos loop mov subl scas loop scas loop lods loop lods loop mov subb subb scas loop mov subb stos loop mov orb scas loop stos loop stos loop lods loop scas loop stos loop stos loop stos loop stos loop stos loop (bad) loop scas loop mov subl scas loop stos loop lods loop stos loop lods loop lods loop stos loop (bad) loop lods loop lods loop scas loop scas loop scas loop scas add subb lods loop stos loop (bad) loop lods loop scas loop lods loop stos loop lods loop (bad) loop stos loop stos loop mov orb mov orb stos loop stos loop lods loop mov subb lods loop mov orb stos loop (bad) loop scas loop stos loop mov orb lods loop lods loop lods loop scas add outsb outsl insl add subb mov orb loop lods loop scas loop scas loop stos loop mov subl mov subb scas loop stos loop scas loop (bad) loop (bad) loop stos loop mov subl loop mov subb scas loop stos loop lods loop scas loop lods loop mov subl scas add subl mov orb stos loop stos loop stos loop lods loop mov subl (bad) loop scas loop stos loop scas loop (bad) loop stos loop lods loop stos loop lods loop mov orb loop (bad) loop scas loop lods loop lods loop (bad) loop lods loop lods loop lods loop lods loop lods loop lods loop (bad) loop stos loop scas add subb lods loop stos loop lods loop lods loop lods loop stos loop (bad) loop stos loop stos loop mov subl lods loop stos loop lods loop stos loop stos loop mov subl mov orb loop (bad) loop scas loop mov subb mov subb stos loop lods loop (bad) loop mov subb orb mov subl loop mov orb (bad) loop lods loop (bad) loop mov subl scas loop scas loop scas loop stos loop scas loop stos loop stos loop stos loop mov subb loop stos loop mov subl mov subb lods loop lods loop scas add push fs gs dec popa outsb popa gs jae gs cs arpl imul je addr16 jo jns loop stos loop (bad) loop (bad) loop mov subb (bad) loop stos loop scas loop stos loop lods loop stos loop stos loop lods loop scas loop (bad) loop scas loop scas loop lods loop (bad) loop mov subb stos loop mov subb mov subl stos loop scas loop mov subl (bad) loop mov subl imul loop scas loop mov orb mov subb (bad) loop stos loop (bad) loop mov orb stos loop mov subb lods loop mov subb lods loop stos loop lods loop scas loop lods loop mov subb lods loop scas loop stos loop mov subl (bad) loop lods loop scas loop scas add orb stos loop scas loop lods loop scas loop stos loop stos loop mov subl loop mov orb lods loop lods loop lods loop lods loop scas loop mov subl mov orb lods loop stos loop lods loop scas loop stos loop stos loop scas loop stos loop scas loop stos loop scas loop mov subb orb lods loop lods loop stos loop (bad) loop scas loop scas loop scas loop lods loop mov subl loop mov orb loop mov orb loop (bad) loop scas loop lods loop stos loop stos loop stos loop mov subb lods loop lods loop lods loop (bad) loop scas loop stos loop stos loop scas add orb mov orb loop scas loop lods loop (bad) loop lods loop lods loop scas loop mov subb lods loop lods loop scas loop (bad) loop lods loop lods loop stos loop stos loop stos loop scas loop scas loop stos loop lods loop stos loop stos loop scas loop lods loop lods loop scas loop stos loop stos loop mov orb (bad) loop scas add orb (bad) loop scas loop stos loop scas loop stos loop stos loop stos loop scas loop scas loop scas loop lods loop stos loop scas loop (bad) loop (bad) loop lods loop scas loop scas loop mov subb stos loop stos loop stos loop lods loop lods loop stos loop mov subl mov subl scas loop lods loop mov subb orb loop lods loop stos loop (bad) loop mov subb stos loop lods loop stos loop stos loop (bad) loop mov subb stos loop lods loop stos loop lods loop scas loop (bad) loop mov subb lods loop scas loop lods loop mov subl stos loop mov subl lods loop scas add subl stos loop scas loop lods loop (bad) loop lods loop mov subb (bad) loop (bad) loop mov subb mov orb stos loop mov subl stos loop lods loop (bad) loop stos loop scas loop scas loop mov subb scas loop scas loop scas loop mov subl add orb stos loop mov orb lods loop (bad) loop mov subl lods loop scas loop stos loop (bad) loop mov orb scas loop mov orb scas loop stos loop stos loop mov subl lods loop mov subl (bad) loop stos loop stos loop mov subb gs outsl jb push je gs insl add subl lods loop scas loop stos loop lods loop lods loop mov subl lods loop stos loop scas loop stos loop mov orb stos loop stos loop stos loop mov orb lods loop scas loop lods loop stos loop scas loop stos loop (bad) loop mov orb stos loop stos loop stos loop mov subb subb loop (bad) loop stos loop lods loop stos loop stos loop scas loop scas loop stos loop scas loop scas loop lods loop lods loop scas loop scas loop lods loop lods loop lods loop (bad) loop lods loop (bad) loop lods loop lods loop stos loop scas loop scas loop mov subl lods loop lods loop stos loop scas loop lods loop stos loop lods loop lods loop scas add subl mov orb (bad) loop scas loop (bad) loop mov subl stos loop lods loop mov subb stos loop lods loop (bad) loop scas loop lods loop lods loop mov subl stos loop scas loop scas loop mov orb stos loop mov subl loop scas add subl lods loop lods loop stos loop (bad) loop scas loop stos loop lods loop mov subb (bad) loop stos loop lods loop lods loop lods loop (bad) loop mov subb loop mov orb loop stos loop scas loop stos loop mov subl stos loop lods loop lods loop mov subb orb mov subb loop mov subl loop lods loop scas loop lods loop stos loop lods loop lods loop stos loop stos loop lods loop stos loop lods loop (bad) loop lods loop mov orb mov subb (bad) loop mov subb lods loop stos loop lods loop stos loop lods loop lods loop scas add subb loop stos loop scas loop mov subl scas loop scas loop lods loop mov subb mov orb loop stos loop stos loop stos loop stos loop (bad) loop (bad) loop scas loop stos loop lods loop scas loop scas loop lods loop mov subl stos loop lods loop lods loop mov subl orb mov orb (bad) loop lods loop mov subl stos loop mov subb mov orb (bad) loop (bad) loop stos loop (bad) loop (bad) loop lods loop stos loop lods loop (bad) loop lods loop lods loop stos loop lods loop lods loop lods loop mov orb (bad) loop lods loop mov subb subl mov subb mov subl stos loop stos loop (bad) loop lods loop scas loop scas loop mov subl stos loop (bad) loop scas loop scas loop stos loop scas loop scas loop mov subl mov orb (bad) loop lods loop mov subl jae gs bound push jns je insl cs gs arpl outsb add subb stos loop lods loop lods loop stos loop lods loop mov subl (bad) loop mov orb lods loop (bad) loop stos loop stos loop mov subl stos loop stos loop scas loop stos loop lods loop (bad) loop scas loop lods loop mov subl scas loop scas loop scas loop scas loop lods loop scas add subb loop lods loop stos loop mov orb loop stos loop scas loop stos loop stos loop (bad) loop (bad) loop stos loop lods loop scas loop scas loop lods loop scas loop scas loop lods loop scas loop scas loop lods loop stos loop mov orb lods loop stos loop stos loop stos loop lods loop (bad) loop lods loop (bad) loop stos loop mov subb subb scas loop stos loop (bad) loop lods loop (bad) loop scas loop lods loop stos loop (bad) loop (bad) loop scas loop mov subl (bad) loop lods loop mov subl stos loop mov subl scas loop lods loop (bad) loop stos loop mov subb loop (bad) loop lods loop mov subb orb mov subl lods loop lods loop (bad) loop (bad) loop scas loop scas loop mov subl scas loop mov orb lods loop mov subl loop lods loop lods loop stos loop stos loop mov subl loop mov subb lods loop scas add subl mov orb loop scas loop lods loop stos loop scas loop (bad) loop mov subl lods loop (bad) loop (bad) loop lods loop (bad) loop mov subl mov subl lods loop (bad) loop stos loop scas loop scas loop mov orb scas loop lods loop stos loop scas add subb mov subb stos loop mov orb lods loop stos loop scas loop stos loop stos loop lods loop stos loop stos loop lods loop lods loop stos loop scas loop mov subb loop stos loop stos loop stos loop scas loop lods loop lods loop stos loop scas loop lods loop stos loop lods loop mov subl scas add subb mov subl lods loop stos loop lods loop mov orb stos loop mov subb stos loop stos loop stos loop lods loop lods loop (bad) loop mov subb stos loop scas loop stos loop stos loop stos loop stos loop stos loop lods loop lods loop stos loop (bad) loop mov subb loop scas add subl lods loop lods loop scas loop mov orb mov orb mov orb loop stos loop mov subl scas loop lods loop (bad) loop lods loop lods loop (bad) loop (bad) loop (bad) loop lods loop lods loop stos loop scas loop lods loop scas loop scas loop stos loop lods loop stos loop stos loop scas add orb loop stos loop stos loop lods loop (bad) loop stos loop stos loop stos loop (bad) loop stos loop mov subb lods loop lods loop mov subl mov subl scas loop stos loop (bad) loop scas loop mov orb stos loop stos loop scas loop stos loop scas loop (bad) loop scas loop scas loop scas add subb mov orb loop lods loop scas loop (bad) loop scas loop stos loop lods loop lods loop (bad) loop scas loop mov orb lods loop lods loop lods loop lods loop stos loop lods loop lods loop stos loop scas loop mov orb lods loop lods loop (bad) loop lods loop lods loop mov orb scas loop lods loop scas add fs gs subl scas loop mov subl mov subb scas loop scas loop scas loop stos loop stos loop mov subb loop lods loop mov orb stos loop mov orb scas loop mov orb stos loop scas loop lods loop lods loop stos loop scas loop stos loop stos loop scas add orb scas loop stos loop mov subb stos loop stos loop mov orb (bad) loop scas loop scas loop mov orb mov orb lods loop stos loop lods loop lods loop stos loop stos loop mov subb loop stos loop mov subb mov orb loop stos loop scas add subl stos loop (bad) loop stos loop mov subl mov subb mov subb lods loop stos loop lods loop lods loop stos loop lods loop lods loop mov orb loop scas loop (bad) loop lods loop mov subl mov orb loop lods loop (bad) loop scas add subl mov subb scas loop lods loop stos loop mov subb stos loop scas loop stos loop mov subb loop (bad) loop (bad) loop scas loop (bad) loop mov orb scas loop (bad) loop stos loop lods loop scas loop lods loop mov orb scas loop stos loop stos loop (bad) loop mov subb orb lods loop mov subb lods loop lods loop scas loop scas loop lods loop scas loop stos loop scas loop lods loop stos loop lods loop mov subb loop lods loop (bad) loop stos loop stos loop stos loop lods loop lods loop scas loop (bad) loop mov subl lods loop mov subl scas add subl (bad) loop mov orb loop lods loop scas loop lods loop lods loop scas loop mov subb scas loop stos loop mov subb lods loop mov orb lods loop stos loop lods loop mov orb (bad) loop lods loop stos loop stos loop (bad) loop (bad) loop scas loop (bad) loop stos loop scas add orb stos loop stos loop scas loop mov orb lods loop scas loop lods loop scas loop stos loop (bad) loop stos loop stos loop mov subl loop stos loop lods loop stos loop stos loop (bad) loop lods loop (bad) loop mov orb stos loop mov subl stos loop scas loop stos loop scas loop scas add orb scas loop lods loop stos loop lods loop (bad) loop mov orb stos loop lods loop scas loop stos loop scas loop mov orb loop stos loop mov subl scas loop mov orb stos loop lods loop stos loop (bad) loop (bad) loop mov subb mov subb mov subb orb stos loop lods loop stos loop (bad) loop (bad) loop (bad) loop scas loop stos loop mov subl stos loop stos loop mov subl lods loop scas loop scas loop scas loop scas loop mov orb loop lods loop lods loop stos loop stos loop scas loop (bad) loop scas loop scas loop lods loop (bad) loop scas add subb lods loop lods loop scas loop mov subl mov subb scas loop (bad) loop mov orb loop mov orb (bad) loop lods loop lods loop stos loop mov orb lods loop lods loop mov subb lods loop scas loop stos loop mov subb lods loop scas add add subl stos loop stos loop scas loop mov subl stos loop stos loop scas loop stos loop scas loop mov orb mov orb stos loop (bad) loop lods loop (bad) loop stos loop (bad) loop mov orb loop lods loop stos loop mov subl scas loop (bad) loop lods loop scas add subl lods loop stos loop (bad) loop lods loop lods loop scas loop scas loop mov orb loop stos loop scas loop lods loop scas loop stos loop scas loop (bad) loop lods loop scas loop lods loop lods loop lods loop scas loop scas loop lods loop lods loop lods loop scas loop lods loop mov subl lods loop (bad) loop scas add subl stos loop mov subl lods loop lods loop mov orb loop lods loop stos loop mov subl lods loop (bad) loop lods loop lods loop scas loop mov orb stos loop stos loop scas loop stos loop lods loop lods loop (bad) loop stos loop lods loop scas loop mov subl jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add subb loop scas loop mov orb scas loop lods loop mov subb stos loop scas loop mov subb (bad) loop (bad) loop scas loop mov subl mov subb loop mov subl (bad) loop scas loop stos loop stos loop lods loop (bad) loop stos loop scas loop scas add subb (bad) loop scas loop scas loop lods loop mov orb stos loop lods loop mov orb scas loop mov subb lods loop lods loop stos loop scas loop scas loop stos loop scas loop mov orb loop stos loop scas loop mov subl lods loop lods loop lods loop mov orb orb stos loop stos loop (bad) loop scas loop lods loop stos loop scas loop lods loop lods loop lods loop lods loop stos loop stos loop lods loop stos loop (bad) loop (bad) loop mov subl mov subb mov subl loop (bad) loop stos loop (bad) loop mov subl lods loop scas loop scas add jae jne arpl add outsl je je gs insl cs jb jo jb imul loop lods loop stos loop stos loop stos loop mov subl mov orb lods loop lods loop lods loop mov orb mov subb (bad) loop lods loop mov subb lods loop mov subb loop lods loop lods loop stos loop stos loop mov subb lods loop stos loop scas add subl scas loop scas loop lods loop stos loop stos loop scas loop stos loop lods loop lods loop (bad) loop scas loop scas loop scas loop mov subb loop stos loop mov subl (bad) loop stos loop lods loop lods loop stos loop scas loop scas loop scas loop scas loop lods loop lods loop lods loop stos loop lods loop lods loop scas add orb stos loop mov subb scas loop scas loop lods loop scas loop (bad) loop lods loop scas loop lods loop scas loop lods loop lods loop stos loop lods loop lods loop lods loop scas loop lods loop scas loop mov orb lods loop (bad) loop lods loop stos loop stos loop (bad) loop stos loop mov subb scas loop lods loop lods loop scas add subl stos loop stos loop (bad) loop lods loop mov subb mov subb loop scas loop mov subb stos loop lods loop mov subb lods loop scas loop mov subb scas loop stos loop (bad) loop stos loop lods loop mov subb stos loop stos loop scas loop lods loop scas add subl scas loop mov subb lods loop scas loop scas loop mov subb loop mov subb mov subb loop stos loop lods loop mov subb scas loop scas loop scas loop lods loop lods loop mov orb (bad) loop lods loop (bad) loop mov subl subb mov orb mov subb lods loop scas loop mov orb stos loop lods loop scas loop lods loop scas loop mov subb stos loop (bad) loop lods loop stos loop lods loop mov orb lods loop stos loop lods loop mov subl scas loop stos loop scas loop scas loop scas add subl mov subb mov orb loop stos loop scas loop scas loop (bad) loop scas loop lods loop stos loop mov subl (bad) loop mov orb stos loop lods loop scas loop stos loop stos loop mov subl stos loop (bad) loop stos loop lods loop lods loop scas loop scas add je imul jo imul push gs imul add jae gs cs outsl outsb imul je outsl outsb add subl lods loop lods loop lods loop lods loop scas loop lods loop scas loop mov subl mov subl (bad) loop stos loop mov subb lods loop mov subb scas loop lods loop scas loop (bad) loop stos loop lods loop mov subl lods loop scas loop (bad) loop scas add subl lods loop stos loop scas loop mov subb (bad) loop (bad) loop lods loop mov orb loop lods loop mov subl loop scas loop mov orb stos loop mov orb stos loop scas loop stos loop stos loop (bad) loop stos loop (bad) loop lods loop scas loop scas loop scas add popa jne je push jo je je gs insl add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add jne addr16 bound je jb bound add jae gs cs imul imul jne imul jae inc jae gs bound imul imul jae gs bound gs jb jo imul imul jae gs bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound jb fs je je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound jb fs popa jb inc je jb bound add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add jae insl bound imul outsl outsb inc je jb bound add insl jo insb gs outsb gs je fs je jb bound add inc push push inc je jb bound add outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc bound addr16 outsl outsb push jae jb outsl fs je jb bound add imul jae bound je jb bound add imul jae bound je je add dec inc aas pop pop ja pop and pop pop es cmp insb dec pop sub outsl jne arpl add outsl je je gs insl cs jb jo jb imul outsl jne arpl jb,pn jae jne arpl add jne gs je jb inc gs outsb jne gs je jb addr16 inc jne jb outsb je dec outsl jbe dec gs add imul insb add jb jns inc insb outsl outsb add add gs add imul je inc jne jb outsb je jne je jb add je add imul gs imul add jbe insb imul insl inc js gs imul imul je inc js je inc outsl outsb je outsl insb add jae outsb fs popa jns jne add jae gs cs jb ja outsb add imul pop dec outsl arpl imul pop dec popa insl add jp add je push imul pop push popa bound fs jae je push gs add je outsl outsb inc popa jae add je push jae push imul jns gs popa arpl outsl insb outsl jb inc jbe outsb je popa outsb fs gs popa fs inc insb imul pop push jae inc outsl insl jo je bound je je dec insl popa addr16 gs jb push imul outsb je imul je outsl insb add je inc jne outsl push arpl gs imul outsb jae jae je inc jne outsl push arpl gs outsl fs je push arpl gs outsl fs insb outsl jb addr16 push push jae je inc popa arpl outsl insb outsl jb jae je inc insb imul add je inc outsl outsb je outsl insb jae inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add outsb je inc outsl outsb je je insb add popa jo imul add je inc outsl outsb je jae je inc outsl jb inc outsl jb gs je insb add jb inc outsl jb gs je insb add fs dec outsl popa add jae insl gs popa jns jne add js add add insb insb arpl popa imul imul insb imul jns insl gs imul imul pop dec gs jae je dec push add gs je inc arpl jo outsl jb dec inc jb jo outsl push jb outsb jae outsl jb add outsb jae outsl jb inc insb outsl arpl jae je dec je insl add je dec je insl add addr16 outsb je jne insb inc js gs imul pop dec outsl fs gs popa outsb fs add fs gs popa outsb fs add je outsl popa fs outsl fs gs dec bound arpl jae outsl jae fs js gs imul je insl gs gs jo jb add outsb dec outsl fs gs outsl outsb jae jb arpl add arpl je outsl outsb add arpl jae data16 push imul jae arpl dec outsb outsw jb popa je outsl outsb add add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je dec outsl fs add je inc popa jo arpl jns addr16 inc outsl jne je dec dec imul je insl cs outsl insb insb arpl outsb jae dec outsl je jne jo jb gs js gs imul insb insb arpl outsb add je xor dec outsb jbe insb imul inc jb je jb popa inc js gs imul arpl outsb popa jb inc outsb jne gs je jb inc imul jb inc outsb je jns inc gs gs jne arpl gs push gs jne arpl gs addr16 push popa insb jne add je jns add outsb jne gs je jb dec outsl popa add jb popa je js gs imul insb imul add popa bound imul jns gs push gs outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je push jne add je inc jae gs bound push gs imul add outsb arpl outsl outsb imul add punpckldq jne je je outsl add xor add inc add add add add and push add add outsl add adc add je push add add xor add bound jne je je outsl add xor add jb add insl add punpckldq jne je je outsl add xor add dec add jb insl add insb add jp add punpckldq jne je je outsl add xor add inc add outsl add je add push add add add add dec add or outsl add insl add add adc outsl add add add popa add add push add outsl add add add popa add add jb outsl add add je imul add add outsl add jb arpl add add or ds mov adc inc push cmpsb add mov pop push sbb mov and add add add add add push or push adc add adc add adc add adc push and add sbb sbb adc or push add or and add add sbb and adc sbb and add sub add or push adc add add or and add add add add add adc add adc add inc add sbb sbb add adc add add add add add inc add add and push adc and sbb or add dec adc and or push adc add or and adc adc sub and add sub adc add add add or or adc add add dec adc add adc add adc push adc add adc add adc add add push add add dec add add push add adc add adc or adc sahf add je insl cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add or add add add add add push sgdtl or outsl je je gs insl add add add add sbb jo jb addr16 outsl je je gs insl and xor cmp add add and aaa cmp xor arpl sub sub xor xor bound add add xor xor xor xor add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor xor xor add and add andb imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor xor xor add pop add or subb or push adc or and adc adc pop adc sbb adc push pop push adc or or or add sbb sbb add add adc sbb add adc or subb or add add and sbb subb adc add inc or sbb or or pop add or pop and or adc or pop add add inc adc pop adc adc pop add or add or mov pop jg aad cmp or and add or and add adc and add sbb and add push and add sbb and add and add adc add sub and adc add or and xor cmp push and add xor and add cmp pop add or add add or or or and or add or add or adc dec push add add adcl adc adc add dec or dec sbb or sbb adc add dec or add andl add add xor pop push adc or add add add or add add sbb pop add or or add or pop push adc add addl lods or push adc add and adc add inc add and add add inc sbb add add or inc push and add adc add adc add add add add add pusha or add add outsl jb js dec popa imul jb gs insb add add add and 