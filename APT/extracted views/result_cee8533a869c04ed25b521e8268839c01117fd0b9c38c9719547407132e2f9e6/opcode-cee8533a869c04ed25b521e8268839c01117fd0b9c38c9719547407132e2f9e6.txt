push mov push call test jne push call pop ret nop nop nop nop nop nop nop push mov lea push push push push movl call mov pop ret nop nop nop nop nop nop nop nop nop nop push push push push call add push push call push mov movl call mov push call mov mov push call mov add test je lea push push push push push call mov test je mov push push call mov push push push mov push push call mov push mov call mov push call test je mov push call mov pop test pop je mov push call call pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov push push call mov test jne pop xor pop ret push push push push push push push call mov cmp jne pop xor pop ret mov lea push push push push push movl call push call pop mov pop ret nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov test je mov mov add test je mov test je mov mov add add test movl jbe mov mov add push push call add test je mov mov inc add add cmp mov jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop lea mov add pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov add call test je mov lea push push mov push push mov mov movb movb mov movb mov movb movb movb call add cmp je mov mov mov rep mov mov add mov mov mov jmp mov mov add add mov mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop nop nop nop sub push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov mov mov test mov je mov test jbe push call mov add test je push push call add test je sub mov lea mov rep call mov test je cmpl jne push push call add test je push call mov mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub lea movb push push movl call push call test je mov mov lea movl push push push push push call test je movb mov push call mov and add ret nop nop nop nop nop nop sub push call test jne add ret push push call mov test jne add ret push mov xor lea movl rep lea push call mov pop cmp je cmp je xor add ret mov add ret nop nop nop nop nop nop nop push mov push push call push call pop ret nop nop nop nop nop nop sub push push mov mov push call add test je push push call push call test jne push push mov lea mov push rep stos stos lea push push call lea push push call movb mov or xor repnz not sub lea mov mov mov or repnz mov dec shr rep mov lea and push rep call add test pop pop je lea push call add test jne pop pop add ret lea push call lea push push call add mov pop pop add ret lea push push call add mov pop pop add ret nop sub push mov xor lea movb rep stos stos lea push push call mov lea push push push push call pop add ret nop nop sub push push mov push push push push call xor xor mov mov mov lea mov mov mov push rep stos lea push stos call mov or xor lea repnz not sub push mov mov mov or repnz mov dec shr rep mov push and push push push rep mov lea push push mov mov mov mov mov mov call mov cmp je lea lea push lea push push push call push call jmp lea lea push push movw movw movw movw mov call lea lea push push call mov mov mov mov mov mov mov mov push push push push push push push call mov cmp je lea lea push lea push push push call push call push push call pop pop pop pop add ret nop nop nop nop nop nop nop nop nop nop sub push push push push xor mov xor lea mov push rep stos stos lea push call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call add test jne pop pop pop mov pop add ret xor call cmp jae mov jmp lea movl push call mov add xor cmp sete inc mov call test je mov mov xor lea mov rep mov push stos stos lea push push call cmp jne cmp jne lea push lea push push call lea push call add pop pop pop pop add ret mov mov lea push push push call lea push call add pop pop pop pop add ret cmp jne cmp jne push call push push lea push push call add pop pop pop pop add ret mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep mov mov mov lea mov lea rep stos lea mov push push stos push lea push push movl mov call add lea lea lea push push push push push push push push push push call pop pop pop pop add ret mov sub test push jne mov push mov lea rep lea movl push call test pop jne lea movl push call test je mov dec je dec jne mov cmp jne mov cmp jne mov pop mov add ret cmp jne mov pop mov add ret test jne mov pop mov add ret cmp jne mov test jne cmpb jne mov pop mov add ret mov pop mov add ret cmp jne mov pop mov add ret cmp ja mov pop mov add ret movl xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov sub test push jne lea push push call lea push push call lea push call test mov jne push call mov push push call test jne mov shr jne push lea push push call add push call pop add ret nop nop nop nop push mov sub push push push xor mov xor lea mov rep stos stos lea push push push call lea push call mov xor lea mov rep add lea stos push push stos call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and rep push mov mov push call call mov push call mov add cmp je cmp je cmp jne mov xor lea mov rep stos stos sub mov lea mov movl rep call add mov pop pop pop mov pop ret cmp jne mov pop pop pop mov pop ret mov mov xor lea mov mov rep stos mov mov stos mov mov lea push mov mov mov xor mov mov rep stos stos lea push push call mov xor lea mov rep stos stos mov xor lea mov rep stos lea push push stos call lea lea push push push push call mov lea push push call add test je lea lea push push call add test je mov xor lea mov rep lea push push push stos call mov mov lea xor rep mov lea rep lea lea push push call mov xor lea add rep mov push movl movl movl mov mov movl call push push call lea push call test je mov cmp je push push call mov push call xor pop pop pop mov pop ret lea push push call add test je mov xor lea mov rep stos lea push push push stos call mov xor lea mov rep stos lea push push stos call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call lea push call add test je mov xor lea mov rep stos stos lea push lea push push call lea push push call mov mov or xor repnz not sub lea mov mov mov or repnz mov dec shr rep mov lea and push rep call lea lea push push call add lea push lea push push call lea push call add push call sub mov lea mov movl rep call lea lea push push call add test je call mov push call pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp jmp jmp jmp mov test jne cmp jle decl mov cmp mov mov jne push call test pop mov jne xor jmp andl mov push push mov call incl pop pop jmp test jne mov test je mov push lea cmp jb mov test je call mov sub jmp push call andl pop pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret jmp cmpl jne pushl call pop ret push push pushl call add ret pushl call neg sbb pop neg dec ret jmp jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call xor cmp setne mov ret nop nop nop nop nop nop nop nop nop nop sub push push mov push push push push push push push call mov cmp mov jne pop xor pop add ret lea movl push push movl call test je mov mov mov push push push push push mov push mov call test mov je push push push call mov add push push push push push call mov pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov mov pop pop mov pop ret nop nop nop nop nop sub push xor push push push movl call mov test jne pop pop add ret push lea push push movl call mov push call lea push push call test je mov lea push push call add push call add test jne mov mov lea push push call mov mov cmp je lea push push call test jne push call pop pop mov pop pop add ret mov push call pop pop mov pop pop add ret nop push push call ret nop nop nop nop nop nop sub push push xor mov xor lea mov rep call mov cmp jne pop xor pop add ret lea movl push push call test jne pop pop add ret push lea push push movl call mov push call mov push call add cmp jl mov lea push push push call add test jne mov mov lea push push call mov mov cmp je lea push push call test je jmp mov push call pop pop mov pop pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call add ret nop nop sub mov lea push push push movl call mov push push lea push push push push movl call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov cmp jb cmpl je push call xor ret nop nop push mov push mov push mov push push push push push push push call test jne push push push push push push push call test jne pop pop pop ret pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push push push push mov test jne mov test je push push call test jne mov mov add cmp je mov mov mov add add add mov lea test je mov push push call add test je mov add add add test jne pop pop pop xor pop ret xor mov mov add pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov push push push push push call ret nop nop nop nop nop nop mov sub cmp push push push mov jne mov push call add mov xor cmp mov je push lea push push call mov push lea push push call add push call mov mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov push push call push mov call mov cmp je cmp jne push push call mov cmp jne push push call mov mov cmp jne push push call mov cmp je cmp je cmp je mov cmp je cmp je cmp je lea push push push mov call push call mov push push call add push push push call mov cmp je push push call mov add test je push lea push push push push call test je push push call mov add test je push push push push push call test je mov test je push push push call add mov jmp push push push push push push push call mov neg sbb neg mov mov test pop je push call test je push call mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub push push push push push call mov push push call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov mov xor lea movl mov rep or mov mov mov mov mov push lea xor mov mov push push lea push push push mov mov mov movb movb movb movb movb movb movb movb movb mov mov call cmp jae mov lea push lea push push push push call cmp jae push lea push push lea push push push mov movl call cmp jae mov mov mov push lea push mov mov sub add mov lea lea lea push push push push mov call cmp jae mov lea mov push lea push lea push push push mov call cmp jae mov lea sub push mov call push call cmp jae mov mov mov mov mov mov mov lea mov push lea push lea push push push push lea push push mov mov call cmp jae mov cmp je mov mov testb jne mov push push call mov pop pop pop pop add ret nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov push push call add pop pop ret pop or pop ret nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov mov push push push call add pop pop ret pop or pop ret nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop call jmp nop nop nop nop nop nop mov jmp nop nop nop nop nop nop push call pop ret nop nop nop nop mov mov test jne or mov mov jmp ret nop mov mov ret nop nop nop nop nop nop mov push push push mov lea mov push movl call lea movl call mov mov add ret nop nop nop nop sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop ja add out inc add loopne add sbb adc add mov adc dec add gs add rolb adc dec add inc dec add jnp add add adc inc and push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea les adc dec add pop dec add add dec add cmp push add jno add mov add sub inc dec add movsl dec add pop push add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov add jne add imul xchg pop add or adc pop add (bad) pusha add ss add outsb popa add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push cmp lea jb sub sub test cmp jae sub mov test mov mov mov push ret int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret jmp jmp jmp jmp jmp jmp jmp int3 int3 lea jmp mov jmp add inc imul add xchg add call push fdivr decl jne and aas jae jecxz in cmp aas pop (bad) mov pop subb mov pop imul jg xor dec lods push out sahf out ret mov sahf pop fstpl cmpsl mov aaa sub sub cs mov jae pop test dec rolb stos jae fst push enter sub rorb fucomp dec fiaddl movsl push sbb sbb mov sbb cmp dec lret nop sbb lock or jl sub sarb sbb xchg dec cmpsb daa enter mov fdivl xor scas inc xor ljmp pop adc fisub adc fcompl add rol ret out decl sbb add in jae mov jp shrl fsubrl dec or inc lret ret pushf hlt jl mov iret inc lret ret add pop fsub jns gs mov loope popa in inc sub ljmp sub mov out push sbb jp pop cmpsb negb not inc mov (bad) xchg push lret add mov cltd mov (bad) data16 call pop cmc and sysret test inc mov pop jg mov push mov movsl leave cltd cmc mov and jle mov jge fs cwtl add adc cltd das imulb fstpt adc add popa int sub rcrb negb jbe call cld or les in cmpb jl ficom pushf call int mov out mov xor and outsb inc xchg xchg push mov fwait push pop (bad) fstps movsb sub mov jae push dec nop sbb adc push popa inc pop xchg in sub addr16 arpl inc pusha in pusha out pusha pusha dec or movsb add xchg imul daa lock add sub or mov aaa push mov adc roll xchg inc push sub add mov scas dec rorb inc xchg push or stos mov push rcll cwtl jg sub dec movsl lea shrb add out cmpl ds push rorl in movb xchg ljmp data16 jecxz shrl pop pop test inc add sub fcomp pop jle inc jmp fstps add pop enter add pushf sub mov fstps inc aam add adc mov sub jae mov sub or xor ret mov test stos testb scas push lods cmpsl push or inc popf fs mov lcall xchg lret js add dec xchg or aaa ds lds sbb mov sub sbb push hlt sub sbb sub jge ss add ret jmp dec cwtl (bad) xor aad push pop pop stc je push dec mov inc movsb mov clc pop cmpsb mov add push (bad) mov insb out aaa jg xchg ret mov out adc in add sub sbb mov push jnp jle out or pop out xchg mov in xor mov xchg scas dec mov pop xorl loopne jl push pop mov inc cltd push xchg push mov push fdivr adc iret fldl cmpsl pusha mov or add out aad inc jle lret cmc mov cmp xlat je (bad) inc and add out jnp std mov cmp xchg hlt inc sub rorb lds fdiv lock adc sbb push (bad) frstor mov xor cwtl repnz sbb fsubrs sub mov loopne scas push gs inc rol mov dec xchg gs mov sti cmpsl dec int pop or cmp inc xchg jecxz adc popf leave shll xchg data16 negl mov xor int3 stos jg push and and jns push sbb insb dec stos jmp movsl cmp loopne movsb lcall cld inc mov add rclb cltd jnp (bad) sbb and int3 notl mov test stos scas pop mov sub adc out sub das add or xor lret dec lcall mov daa inc dec jl sahf mov movsl sub dec je push sbb mov ja sarb les es lahf movsl cli loop push mov mov sub or out dec push pop and xor divb inc and jae (bad) lret pop mov pop cmpsl cli rclb adc lret subl pop js xchg pop test jnp leave or push and movsb pop insl stos dec stos or test inc dec cmp cs jno push pop cld add and xchg sub out sbb ja bnd push dec nop mov dec (bad) in sbb fimull fist testb in aam in rcrl (bad) int3 sbb push sahf addr16 and push (bad) loop jne iret pop xorl inc (bad) in in mov push xor add jle mov mov cmpsb stc int leave loopne push push push dec mov (bad) insl in fdiv cmp mov and jg mov cmp mov imul stos mov pop or sahf sub aad test js test ljmp das (bad) sahf call jo xchg fildl pop lods test xlat adc inc clc fneni(8087 add js adc or sub or push mov int3 icebp pop sub xchg std mov mov mov ja sub push sti mov mov xor push aad (bad) nop and push loope outsl mov dec xorl (bad) out jg pop xchg xor (bad) pop sbb jbe mov inc sbb xor pop dec jge out add test (bad) imul xlat aam xor mov cmp xor push push mulb mov sub je sti test adc sub (bad) mov ljmp xchg loopne pop (bad) cltd ds xor pop xchg jo push push adc fildll pop adc fstps jl shll push lret xlat xchg jae jmp js and cmp pop cmp add call hlt push mov dec je data16 jp dec xchg mov lret cmp push add adc movsl fwait jno xor aas add inc sbb dec xchg lret andl aaa fwait stc lret push or sti fcomps pop push mov mov call jnp jne cmp xchg (bad) dec mov (bad) mov pop (bad) adc jmp ja rclb and mov push aad enter push pushf mov jns inc imul mov in incl add cs out test test sub jl call adc testl les fcoms stos je lea pushf jge inc rorl subl xchg test daa flds divl xchg popa add fidivr div popf je daa loop mov xchg sbb cmpsb pusha jae pop pop test and fisttpl daa in bound push xchg rcrb and pop push and pop arpl mov mov pusha jp out std jae inc hlt inc ror data16 js test adc int std sub icebp cs xchg dec push in mov or imul sbb mov pusha stos jo sti (bad) xor fisttpll (bad) fsts fcomps jle cmpl xor dec jp nop in hlt out sarl pop clc pop and mov loope mov xchg and mov int3 mov inc push imul jle jecxz xchg shr les out adc xchg pop out mov out (bad) cmpsb cmp lods rolb pop push (bad) les mov lret add jg mov inc jno or pop adc ss aaa inc aam loopne mov xchg ds mov jge (bad) fwait adc rorb fcompl and ljmp outsl sbb add loop sbb jecxz mov scas mov push je mov stos mov out sbb sub clc jbe lock mov mov xchg mov xchg xchg push popa cmc or or aaa jp (bad) mov sub xchg in or inc xor and loopne adc inc pop adc jl mov loopne push je sub stos jns stos push or or (bad) inc lret dec lock ret jae (bad) and sub mov fildl lret mov ja xchg test mov cmp inc add hlt out stos jmp xchg xrelease cmpl cmp andb jbe jbe push xchg cmp icebp or bnd arpl test pop lcall and xchg dec push xchg repz test inc imul aas js cmp xor jb mov mov cmp jg xchg mov inc mov stc xchg loope fs add and push jg fnstenv rcrb das xchg xor sbb daa inc xor jne mov jnp xchg movsl popf push push icebp mov jno inc or in popa cwtl cmc xor les sbb xchg dec jge jge ljmp mov add jmp pop and xor lea ljmp mov sti ror push cwtl mov or fnstsw pop popa insb (bad) js cmc inc jbe pushf aas jg pop cs test test push push insb into int3 cmp mov les insb mov push (bad) pusha sarb xchg pop and fisubl mov in and mov mov out sbb jle pushf fstpl in test inc push hlt sub jnp or (bad) mov jae adc outsb insw rol gs and test pop sub xchg push or adc shrb pop test and icebp mov push hlt outsb scas cld cmp into cmpsl aaa cmp outsb xor cmp dec mov pop xchg jle push (bad) enter movsl sub popf dec dec (bad) outsl xchg leave sbbb dec xchg mov jmp mov pop dec shrl dec call out push in ljmp add out sbb xorl sub popa in xlat adc (bad) pop lret xlat jp rorl push out push out aad enter push jp mov dec cs pusha cmp inc ret adc lcall dec out xor aas sti push fs inc hlt sbb fadds pop sarl pop dec pop mov fs sub fisubrl push inc adc sbb dec int3 jbe and dec fmuls sbb cwtl out vmwrite loopne sbbb cmp xor cli movsb push (bad) sub testb lcall dec js lock mov xor or popf scas add sub (bad) fmull pop enter or loopne xchg in loop repz or jb pop push movsl in arpl fbld cli jmp inc imul in adcb jp fidivrl cmp (bad) xchg dec out js mov jle inc add popl popf sub or adc pop inc mov jb xor imul pop pusha xchg mov out (bad) outsb lods das ss mov test pop and add adc movaps adc repz test stos fcompl loopne ja add sbb xor dec outsb xor inc adc leave adc sbb cwtl or pop jp fistpll pop repnz mov xchg mov popa repnz jnp ja std outsl jecxz (bad) stos push pop push and jp fcoml cmp adc and push push mov xchg out adc addr16 outsb jbe mov xor loope aas ficom xor and pop aas and call outsb (bad) fdivrs lods lahf add and pop addb jnp jmp stos insb in cld clc jle xchg into movb inc dec mov pop test jecxz push idiv push test test sub mov mov push inc sbb dec rcll dec mov movsl jnp mov test out xor aam mov lock xchg jns int lea xchg lea push into jae cwtl jle test dec outsl (bad) psubsw data16 cmpsb sbb dec nop mov into int3 movsl in nop mov insb call nop mov std push popa ret icebp in mov (bad) adc gs cmpsb inc lea addr16 push out ds cmpsb lea sbb stos sub add jb pushf (bad) lahf cs sbb lret pop test xchg sbb mov jl aam loopne or or cld cmp mov sub fwait scas fnsetpm(287 and insl (bad) inc test into xor in jg cld inc pop cltd pop sub inc xor shrb push sbb inc shll jns cli xor adc xchg add fstl sbb pop clc jno mov movsl mov cmpsl mov mov ljmp or add nop fcompl out insb pop dec xchg popf jmp imul in pop fdivs inc in mov enter cld stc sub cltd imul fxch mov push lods xchg test xchg inc and pop outsl lret pushf jp insb (bad) pop jg out mov adc mov add aad inc jno xchg iret ljmp daa repnz jae mov rorl incb aam leave incl clc adc jnp cmpsl push (bad) icebp outsl in lods push push xchg cmc cmp or pop mov imul shrl ds stos stc mov loope mov or loope jo fwait stos mov sbb add sbb mov and sahf lret xchg or test inc push test inc sbb cli cmp pop jecxz and aad (bad) aam lods stc cmpl push cwtl (bad) sbb enter add add test push into cmp insb (bad) xchg int3 xchg adc jo (bad) push mov lock les jae bound jmp stos pop pushf icebp gs mov cmp jp xor xorb test subl push nop jo (bad) iret cmp (bad) lret jne fstpt push stos pop fldt shlb daa dec out jle push test inc dec mov and rolb sarl push lods xlat call pusha push xchg push push stos test call lock adc movsl sbb pop mov mov out mov outsl scas icebp scas jp fcmovne aas xchg mov pop lret aas mov loop push rcr or or jae jb ret and dec mov cmc mov push mov mov das cld pop (bad) xor add jae inc dec mov add mov hlt sar es inc lods mov xchg xchg cmp pop pop outsb and sub call sbb lahf aas (bad) idiv jge in xor or xor jo sub lds movsb pop xchg lret (bad) pop in (bad) mov jp arpl fnstenv or mov add gs xchg jecxz add dec dec sub mov stc ja and inc xchg mov test adc pop lcall jne pop ret stos jns,pt and aas popf xchg loopne daa add stc sub test in fstpt inc push dec mov sub cmpsb sbb insb in mov movsb push fistp sti pushf (bad) mov out fldl push cmp mov or arpl add das push mov sub imul loop aad or xor fucom cmpsl ret loop repz out addr16 in inc sub pop adc cmp jae jne inc roll fsubrl sbb cld inc sub and mov inc das andb cmp (bad) adc ret mov das add inc xor cli dec stos mov sub aas imul mov sub sub gs in rcll imul pusha ret sbb mov clc rclb jbe dec pushf test sub cmc call insl sub jbe lcall (bad) out popf gs (bad) jae loop xor xor adc (bad) flds fisttpll in (bad) out scas jl dec aad leave push lret adc in mov sti stos cmc ret (bad) jle ret test and xchg mov mov jo adc out mov mov and inc mov push scas mov icebp cmpl jge or xchg mov cmp mov cmpb loop in pop sub pop icebp into lock faddp pop mov sbb and sbb fdivp or sbb sti fwait sbb loopne cmpsb jne mov and idivl hlt or clc scas aas xor push and scas pop inc adcb inc ss popa sub mov jmp mov cmp js mov dec fs (bad) lock scas addl sbb je jecxz jge or xor arpl inc (bad) jno or pop or mov out dec nop mov push xchg cmc (bad) cmp sti je and ja fwait push or dec sbb cld jb (bad) cwtl add or arpl sbb jnp das ss mov cmp push jbe mov cmp das out push lahf sbb cmp sub add sbb js adc mov arpl adcl int es xchg (bad) outsl into data16 (bad) fcomi pop mov push push push call outsl mov ficompl cmp lret or cmpsl call std sub inc inc fs loop rorl incb sbb adc out push xchg dec add pop xor sahf fsubl addr16 and adc xchg mov mov std pop pop aad popa inc ror adc jne add xlat sbb clc dec adc inc push ljmp in test and xor sahf sub int rolb dec fnop mov add (bad) insb and sub inc sarl adc ret push lahf adc or jle outsb fmuls lret add jp mov jb (bad) pop adc inc jbe jge jge out arpl imul sbb cs rep inc test mov jge arpl pop xchg jmp mov inc nop sbb sbb adc imul cmp dec jno sahf flds adc sbb in repz jl jnp jmp in rorl aas shrb loop push cli aad lahf insl sbb cli add dec orb mov xchg xor mov out push xor shrb scas jecxz test imul sub sbb jmp jmp pop repz dec or xchg push sbb or pop mov or fdivl test call test adc pop sbb in insb or and pushf nop int3 aas pop inc inc aaa out mov adc in dec icebp push pushf adc inc lock adc cmp inc es ret push pop daa sbb or cmpsb xchg icebp and xor jnp and xchg xlat dec jp in in jns mov decl pusha and int aaa add push jp add xchg fcomip or lret (bad) jmp inc inc jle call and mov leave and adc fwait insb sbb adc rcll inc sub loop sti sbb sub or popf jle scas lcall nop je pop mov xor jne xchg mov rcll insl sahf pop movswl ret add dec test dec rol push mov mov loope pushf icebp add cmp lret sub pop add xchg mov xchg ficompl loopne and xchg sbb jmp push daa andb xor test insl addr16 cli xchg imul mov dec test jns out ljmp (bad) add (bad) and push movb test push jle xor inc adc inc mov andb nop cmc int3 inc dec push add imul fdivrl cmp xor lods stos cmp pop fiadd ss inc ljmp int cwtl jbe ret (bad) push lret in push pop notb (bad) mov callw sub pushf notb sub xchg int cmp pop inc mov roll dec int xchg or outsl xchg lret inc in add add adc imul add add ss scas rcll ds hlt aam jne test dec or lods mov cltd push or popa subb or xchg mov push dec and push pop or mov nop stos sbb cltd out jns sub mov xlat int3 out je mov adc cmp test inc sti (bad) lds arpl add hlt add mov (bad) out int3 lret ffree out scas faddl fcmove add fnsave or mov add xchg gs les sub jl inc dec sbb inc inc out scas pusha nop movsb (bad) push fisub cmp pop push fistl in outsl nop dec inc xor mov push lock pop cltd jae mov mov lret flds mov fsts lds jmp pop inc xchg jmp sub outsl xlat in repz jmp shrb or lock loope popa mov ret aaa (bad) aad dec int repz dec mov in fistp in into jno outsl fildll lds adc xchg outsl push xchg sub push mov push fnstcw pop mov lcall jbe arpl mov dec fnstsw test sar sbb and iret adc pop jmp inc jecxz pop (bad) sbb outsl in lea (bad) mov dec ja cmp jne js pusha mov add repz fsubrs sub cmp push lcall sti pop pop or push or lods jg jp adc mov mov (bad) ds subl fisubl rcl sub ret nop decl clc xor dec popf xor xchg inc sub and xchg sahf xchg (bad) inc div cmc pop pusha rorl sbb or push sti inc push push pop arpl xorl inc movsl repz push mov jle mov fdivp fbstp add xchg push rorl dec inc insl cs mov pop inc cmc ret pop hlt es lcall leave sub cld jge (bad) scas sub fisubr cmp sbb jmp mov add sbb xchg dec mov xor sub dec adc cmpb in xchg sub bound fcoms iret jns in das push dec cli mov fsubrs orb jl mov push inc xor mov add loope inc push push hlt ljmp shrb inc mov imul mov fbld push inc and or pop daa dec sub mov mov hlt stc cmp sbb dec popf mov iret mov (bad) roll (bad) cmp and popf push and notl ja jbe shrb iret rcrl scas fsub imul (bad) xchg sub sub xor mov addr16 stos adc gs add ljmp call lret (bad) cmp cmpsb dec inc xchg inc cmpsl (bad) popa cmp jmp dec aas mov jo ljmp aad cli dec jno push cmp xlat xchg mov mov movsb inc pushf nop cmc pop sarl pop shrb (bad) mov inc xchg arpl jg jmp pop mov mov fwait enter ljmp adc faddp arpl sbb adc (bad) or jg loope dec sbb inc (bad) sub repnz mov lods cmpsb ds push test xchg adc test jp fadd sub in imul xchg lcall push fbstp repz xor or (bad) (bad) add stos imulb (bad) pop jb rcrb daa xchg dec mov mov fsubrl dec sub jbe pop fcomps xor pop cmc fistp ljmp fcomip mov stos xor jno int3 fbld pop mov outsl adc or cld or push jns pop push pop fiaddl aam pop in (bad) out in push cmc push or pop test mov xor mov fimull data16 jge rcpps or lcall or out in fimul or add or gs sbb es inc bound sbb insl stos add pusha int dec clc jnp sub jno imul popa in in scas clc aas (bad) lock movsb aam dec jl out pushl bound pop lock xchg call repnz cmc or sub add or scas mov aad (bad) lcall or scas sahf sbb mov sub jns fld or push (bad) adc ficom negl int3 dec lret mov daa adc rorl jns cmpsb pop out insb adc sub sbb ja repz int3 add pop cltd fwait rorl enter xor jge movsb decb jecxz jo cltd enter jo,pn push jo adc mov add adc mov adc stc push mov movsl in das nop push pop or out jecxz out push xchg mov adc pop xor add repz pop scas ds lea in jle pop dec je ret jp pop jb pop nop xlat and aas xchg cmc stos aam mov in mov dec mov dec dec mov and mov xchg push lock mov mov jmp orb adc shll in loopne add xchg ficom out lret sbb out lods pop outsl inc lahf xor ficoml sbb pusha cmpl lds aad test and out add add sbb (bad) lret repnz inc sub sbb mov push push jns out in in movsl aaa (bad) sbb push call cltd dec ficoml xchg push dec cltd aad mov jge cmp ficompl dec out mov scas adc xchg add popf outsl push add xor sahf rorl mov pop mov jp or je cmp mov xor ret ds paddsb mov (bad) repz pop orl xchg pop popf lock mov cmc icebp test and and fwait subl test insl outsl leave mov nop xlat xor in push in std and ficom fadds cmp int3 and xor jl sub outsb xor movsb lods leave push dec jno mov jno adc clc inc repz aaa inc fdivr jp dec incb jl sbb sbb stos in mov inc (bad) mov stos scas faddl fstpt scas cmp inc out push (bad) lret hlt cwtl (bad) rol add ss mov inc inc or sarb add xchg hlt cmc mov pop andl es fstpl xchg push into mov xor mov mov pop push shrb or std dec cmpsb mov cmp (bad) inc add das fdivp jo insl loope xor pushf jne xchg jecxz dec clc lds lcall mov cmpb mov push xchg xchg inc jp std les or inc int3 insb popf negb scas out xchg cmpsl in lods jmp jecxz or (bad) and add inc and lds cltd mov popf sbbb leave call imul lock pop cmp cmpsb lods (bad) pop inc out inc (bad) and int movsl xchg add cmpsb mov sbb mov push std repnz (bad) repz or imul pop out pop or dec in xlat loop add jbe fisttp ss out das sbb lret (bad) enter adc mov and pop cltd scas mov shll push out mov add xor lret cmp and jle faddl lcall add mov test sub fwait or lea mov negl call pop inc (bad) stc cmc sarb add jno push ljmp sbb leave or int lcall xor pop pusha stos stos xor stos mov cli rolb cltd enter adc pop cmc ret jp clc movsl inc mov call insl imul add cmpl fcoms gs dec (bad) dec push inc mov sub shr dec xchg mov jl push fwait (bad) jmp add pop les pop jle lcall outsb mulb jnp sbb push xor sbb pop mov in mov cmp test lahf (bad) and or int3 in xchg or dec (bad) lds lea pop xchg jle pop fwait pop in test mov jmp add inc add sbb jmp test out adc (bad) jbe and mov sar or lret adc pushf loopne (bad) loopne xor mov add js mov ret cmp iret leave cmp fnstenv outsb dec stc xchg test in popa xchg adc (bad) (bad) je lock xor (bad) rcrb aam add pop adc es inc mov xchg (bad) lods or mov pop add lock jno add mov iret inc (bad) addl sub sbb mov mov inc mov adc dec mov push adc out jmp (bad) cmp testb sbb sbb cltd insb sbb ret aas mov sbb cmp sbbb mov sub mov popa test mov (bad) or (bad) mov aad test mov or enter sub dec jbe or inc leave cmp mov jnp shlb or testb mov cli ret dec or push or mov xor xchg cmp xchg sbb in mov push inc or (bad) aam imul add push pop insl fisubr test loopne popaw mov adc fmuls mov or cmpsl cmc xchg jmp iret leave (bad) mov daa js das mov mov movb adc data16 imull aad mov mov sti aas mov dec inc stos or add adc (bad) jo (bad) clc pusha pop std jno mov mov dec insb enter pop into das cmp lea outsb and dec daa jno dec add or add arpl sbb push jecxz jg pop or shlb scas sub movsl pop adc daa xchg sub pop mov aad frstor repnz sbb pop aaa js daa and pop out mov xchg cltd mov sub ret jns nop pop cld iret (bad) cmp shrb adc xchg int3 jns push popl out scas pusha nop lods lret in lret lret sub rcrb jmp cmp dec sti lcall cmp loopne add cmp xlat cmp nop mov lret in jbe mov stos das ss sahf lea jle dec inc insb inc inc xchg out inc mov fildll dec rorl mov pusha inc pop inc (bad) aad sti in repz gs es jno addr16 jmp rolb sbb add out cmp shrb popf jg mov jg fsubl cmp or leave or inc push jle xor and loope fisubr xchg xchg cs inc popa sub aas je inc dec jb jle inc lods lret push jns,pn xchg sub sahf (bad) mov jecxz cmpsb push test sbb test inc (bad) iret adc or out push dec adc sbb push fdivp insb aas fdivr push imull jo sub orl daa icebp ret mov push mov fisubl cmp cs add xlat bound out out and xchg inc jmp lret or xchg (bad) mov fmul leave mov lods push mov faddl (bad) fsts popa jne jnp (bad) adc mov icebp mov clc pop decl addb call in adc call in aad (bad) call mov bound cli nop aad dec pop xor jne in aad inc jmp fsub xor jl mov inc pop cmpsl enter push test push idiv lret cmp into clc inc add push enter push out mov addr16 out aam mov sbb mov xor lods xor out std stc mov bound in (bad) in in xor stos push add out xor movl mov xchg xlat sub nop sbb in stos rcrb sbb iret lock fwait out xchg (bad) cmp mov xor (bad) jb int sbb lea mov rep shlb lea movsl loopne dec add call inc inc popf pop (bad) sahf sub mov out (bad) pusha stos sub push add mov add cmp or mov insb shr test sub push incl adc rcrb push mov (bad) mov add jns jo xchg mov lock jne repz ljmp xchg xchg inc mov leave dec and enter mov mov loope les outsb pop pop ret pop xchg adc push aad fisub jne dec inc (bad) dec movsb pop inc xor dec jae sbb cli adc orb ss jb sub loopne stc inc push addr16 push xchg data16 mov adc test cmp es xor addr16 add (bad) sbb dec call push jne pop loope jb adc mov sbb xchg cltd and addb jmp xor loopne lods js sbb shrb in jne sti inc pop lahf xchg pop movsl mov and push xor data16 xchg pushf or add or jno push repnz jmp pusha pop (bad) out aas pop popf lret and iret stc mov iret mov pop sarl out outsl mov jbe bswap call lock ret pushl dec vunpckhpd jle mov (bad) jno push mov shrl dec inc mov push subl stc push push lahf gs inc and add subl xchg test xlat (bad) or int cld inc bound push ss jno push fcomi pusha (bad) or sub jmp rcll inc ds fcmovu pushf mov add sub jnp fwait jl and jno insl sub mov jg jg enter stos fwait pop in (bad) mov pop xor jo popf add and xchg call fcomps aas push cmp pusha sub (bad) lcall lods test jg sbb jbe pop das pop jg xchg xlat mov or inc mov sbb in xor or mov sahf inc mov cmp fdivr (bad) dec popa inc xor mov sbb dec fmull ja aam lcall out push sub rol jns dec out mov mov or imul adc icebp test push lret sub es rcll stos icebp out gs es (bad) mov dec mov les dec imul push mov pop add out mov fidiv xchg mov inc mov loope xchg enter test jle orl cmp or test out aam xchg into daa into es sub inc xor nop dec aad adc (bad) popf or sbb andb mov (bad) inc iret int3 sahf pop aam mov test push pop fadds inc cltd xor jle push mov out pop mov in in dec mulb (bad) in xchg adc loop mov and push inc cld imul xor mov mov movsb mov clc and adc test jmp pop faddl jmp sbb jnp aaa fildl ficoml imul cltd ljmp ret aam dec scas ret pop pop pop mov inc stos (bad) lock test int3 daa cmc insl sub jecxz je pop dec les mov (bad) mov cltd jnp xchg out fildl (bad) adc cmp dec ror mov call xor out test or jle adc aad push mov popf shll rorl lock dec (bad) fcmovnbe add fs outsl sub xor xchg sahf mov test sbb sti inc mov xchg test jecxz xor pop xchg arpl cli jne mov sahf mov xor test jge push cmc outsl lret scas cs sbb mov es and (bad) mov loopne (bad) in sbb repz cmc jg xchg int3 jb shll gs stc imul ja jns pop add jg pop push pop xchg stos lds cmc sbb cld aaa or push dec cmc ret (bad) out movsb add mov out jl sar fstpl fstpt mov divl fcoms (bad) lret push pushf add fstps mov pop lcall and lods cmp std pop inc push and sub add dec enter ja insl mov jo mov push es mov xchg cltd and sbb push adc pop fs sbb cmp aam mov push cmp out rol jo pushl rcll pop (bad) icebp mov push in imul stos loope fs ret push push leave mov or dec imul or insb add push mov jle rsm inc xchg xchg in ja inc pusha mov adc pop stos push fstpl repz (bad) or push imul scas lock cmc insb mov adc mov movhps scas les cmp sub add out jo mov (bad) sbb sti mov push out push inc ldmxcsr sti subl (bad) xor bound (bad) bnd je lods aas mov popa mov push clc notl adc mov out mov pushf lret mov add or mov enter imulb pop cmc mov add sbb dec out in pop sbbb in mov xchg test jns insl enter ss sub xchg pop lods inc add xchg mov iret sti sbb xchg (bad) in mov xchg dec in mov fnstcw sub mov outsb icebp mov rcll mov add jle push into movsb pop xchg jb scas sbb lea push popf adc cs ret mov or test mov (bad) mov (bad) mov pushf mov push jle lret imul dec add sbb mov mov sbb mov cmp dec cmp (bad) jle pop mov insb jbe push icebp and jmp mov mov outsb mov pushf dec xchg mov and jno lret mov (bad) decw xlat jmp movsb enter repnz int3 add scas xchg stos mov jl test cli xchg push iret imul les popa lahf jnp insl mov lds std stos or push dec pop pop fs icebp sbb movsb dec fisttp or sbb or mov jg mov pop xchg inc pushf add aaa (bad) sbb cmpsb fcomps subl es gs aaa or sub lcall xchg lock xchg xchg mov or in mov fnstcw das push insb xchg inc fsts (bad) pop mov ret xchg and mov lret nop into jge (bad) jae pop jb shll push mov (bad) push xchg mov push fadds jecxz and xchg mov idiv imul leave inc popa xchg outsl nop lret testl lods es lock ljmp hlt dec ror push hlt cmpsl pop es or into dec ret in int3 repz (bad) cmp cli into inc mov cmpl (bad) mov imul jb ret inc popa into loope out out fidivr adcl sub out ss ss xchg jbe repz inc bound cmp push inc inc or pop icebp orl mov xchg lock mov sti ss xchg ljmp scas sarb or lret fisubrl cltd add push xchg pop mov aaa andl add scas stos mov iret mov sub aas or adc sbb sbb mov xor cltd jne dec sahf adc icebp fist pusha leave mov sti aaa (bad) scas and sahf and fisubl pop pushf lods cmc int in jne in mov jle lea stos fildl iret and lret test (bad) sub push loopne fwait repz mov std xor pusha lcall mov mov mov loopne ja es xor test inc test push sub sbb mov and and rol xchg ljmp add mov cmp ds push and (bad) je je movsb dec imul inc idiv les adc out test mov fwait mov add negb (bad) (bad) lock (bad) xor sub jbe pop and nop in inc lcall repnz test fadds enter fmul pop into pop lret or and insb mov dec addr16 lret popa push jg popa jecxz fild xchg pop push xor iret fisubl fist mov xor mov ds mov outsl pop or imul cmp (bad) dec mov lcall loop pcmpeqd or lcall jl push test pushf xlat pop xchg jo xchg dec pop xor repz out lea pop sahf sbb pusha jb call inc adc pop mov notl sbb lea aam jle pop mov js xor or das or stos (bad) jbe pop rcll cmc add adc sub rclb push or ja (bad) repnz dec cmp (bad) mov mov or lret mov (bad) dec or clc lds and out xor xchg mov dec add add cld push inc lahf pop outsb (bad) inc xchg mov mov fisubr scas dec mov mov test out push jns cmp (bad) ja xchg sbb adc insl sti jp pop int xchg xchg pop in mov inc adc movsl jge sub sub pop sbb sti dec and or loope cld ja jns pop adc cmpsl sbb cmpsl rorb push out push xchg jbe mov repnz or pop cmp sub pop inc mov popf and sub mov sbb dec pushl js aam loope mov lahf hlt andl and sbb stos inc rorb loop aad or scas sahf femms pop xchg es mov int3 test je jno jno push jne mov or pop ljmp std pusha (bad) imul mov data16 stc in in pop and dec int fsubs popa or (bad) cmpsl mov addb arpl cmc xor mov ret int aaa out cmp sbb pop shrb in cmp inc dec sub xor mov call imul cmp aam push add fldenv pop mov stos int cmp sub idiv js fwait add pop lret add xchg in inc aas (bad) lret dec loope push test cli stos pop and inc jmp iret or add xor int pop int jne lcall xchg pop rclb sub and test js scas imul push sbb incb jle and push and sub jp ss and pop jmp pop and aam add mov jmp cmp pop pop xlat (bad) pusha test xor ret mov jae and jmp push jecxz sub mov inc addr16 jmp dec mov leavew dec or in mov sub movsl inc fwait push (bad) xchg adc leave or ffree push popl hlt inc xlat sbb stos inc popa xorl inc lds xor fstl jne mov mov jae test js nop sbb jbe fildll xchg es push inc pop pusha dec pop add pop sub scas mov (bad) cmc push xchg pop test xchg xchg mov adc das xchg push or adc jg sbbl aaa mov sbb inc mov lock rclb lret jl pop pusha push aad ret inc mov adc sbb lods arpl dec lahf out jbe pop in fiadd test mov ss imul clc (bad) or ss cmp aam insl loop cli loop sbb xor or call cmp mov clc pop lcall push das mov dec cmp lret imul out inc pop ret pop cs enter test int push out lret popa dec pusha or bound jne inc mov mov xchg mov lds pop mov repz repz aad sbb adc add push xor loop dec cmc aam test sub sbb mov leave loope pop loope xchg pop adc sbb into sbb xor sti scas imul mov dec adc loope imul sub xlat xor pop mov adc (bad) jp xchg pop dec fcmovne cmpsb frstor push mov imul add add and loope jg sub aad ret mov xchg adc add (bad) out (bad) cmp inc outsl or sahf imul push adc mov mov pop adc add cmp fldt je into cmp mov lret rolb repz add jae (bad) movsl fbstp hlt ljmp jl pop leave (bad) je std pop cmp dec lcall jmp clc (bad) mov ret pop add (bad) ss in insb imul je ljmp fnstcw jmp mov (bad) pop cld mov call adc outsb jp or (bad) or inc push inc jo inc imul test dec js sub mov aas xchg push cmp sbb xchg (bad) les xor jl jge xchg enter push xchg xor dec outsl cld adcl mov loop pop and dec cmpsl loope ret cli cmp mov in gs (bad) lods inc sbb mov loope stos push scas fistp (bad) and sahf inc pop xor push mov lods fistl xchg dec dec fiadd out jge lods aam into das push sub fnsave lods push movsl push das push fcmove pop pop jne test mov xchg mov (bad) lods xchg mov sbb and ficomp sub push or int3 fcomps or frstor pop inc loopne adcb in xor fsubrl adc stc popf addl out inc enter sub mov push (bad) imull mov sub push decb jo popa lret or adc in out xor fs in gs mov pop mov jne xchg mov int into add dec in fbstp sub jg ja sbb jo movsl or lret ss dec xlat mov out pop dec (bad) mov fcomps jae xchg add sbb mov loope (bad) push xchg pop mov push cmc cmc stos lcall and in xlat sub imul cmp jns dec cli in xor add mov cmp sub fistpl inc cmpb popf mov pop cmpsl xor fildll jmp rcll je or jb stos adc pushf jle sbb cs out jmp lea or rorb nop sub imul stos or roll lock bnd je jo arpl aaa test stos mov sub aam mov and mov popa lcall inc cmp (bad) pop out cmp popa push mov jb fisttpl imul xor pop sbb adc mov (bad) cld ffreep int cmp aad mov pop les loopne jl pop pop push es daa cltd ja cmpsl divb lcall pop xor cmp test dec pop test adc (bad) jle mov insb (bad) sub (bad) xchg das sbb adc sub jle rcll jg movsb or ss inc lods sbb dec fmuls mov ljmp adc repz push inc add lret insl repnz push int3 xor outsl fisubr mov push mov mov mov dec add cmp cli dec sbb push inc fimull mov nop inc gs dec loop xor mov or popf jl ja inc in lahf xor cmp push movsl int fmul ret mov test jecxz imul sub loope xchg fmuls test cltd push cltd inc sar bnd push jl lahf lret repz mov cs cmp jle outsb test cmp pop fsubp hlt mov ljmp cmpsb pop fmuls mov aad pop aad jle ror aas add int3 push movsl in or xchg scas push out shl les iret mov (bad) jns clc xchg or add cli ret test sysenter sbb pop das fadds xchg ljmp (bad) xchg mov mov into or clc inc or lock sub mov ret or push sub mov sti (bad) hlt rorb mov lods sub dec mov aad lds xor sbb es rolb xor mov outsl std call mov shrb rolb jl sub add inc repnz dec push cmp pop pop adc mov and inc repnz xchg push jle push jle lods sub add fucomip aam subl (bad) popf pop dec jb inc ja and pop popa outsb jmp arpl pop fucom enter ja dec in xor jmp xlat push rorb or sbb mov shrb push aaa mov dec push (bad) mov cld mov (bad) (bad) mov lock jae jae xor jmp jecxz fistp or jbe test aad fldt jg push pop or adc (bad) push insl mov push push and mov ror fistl and mov mov into xchg enter int xlat lods dec lds fsubr mov lods or jae xchg push lret lret xor mov sbbb mov popf cmpsb mov sti sub inc daa (bad) leave pop pop xchg mov ret js mov scas popa adc cld sub movsl cmp aam jo and inc pop in in mov imul sbb push ss in lcall sub pop push mov call mov rclb or fistl insl insb jns scas mov rorl mov mov ja mov ret fdivrl mov pop ret ret or mov cmp addb movsl ret mov std mov (bad) lret pop mov nop les mov add pop (bad) lret or test out jl and dec or jg cmc out and add adc call les pop dec pop cmp dec adc inc repz push mov jge lds flds (bad) mov aad shrb pop mov adc insl or jp iret jo or add std (bad) idivl or push or insl jno mov push (bad) fcoms xlat cmpsb adc sbb sarb jmp bound sub das daa (bad) inc fiadd mov idivb popa es add push es inc fwait xor out or pushf shlb cwtl adc popf movsl pop pushl jecxz add jno test adcb or jae xor xchg test shll jno stos jle pop mov (bad) inc into lods cmp sbb inc sbb mov enter push cmp xchg movsl rcrb push add add test enter fiadd mov push xor push aad ljmp stos jnp es das test jmp pop add cmp mov and dec xchg mov sbb pop test (bad) pop pop xor sub es mov xor cmp sbb (bad) lock sbb and adc mull push scas js pop lds jmp not dec loope mov cmp cmpsl flds add add xchg leave pop jne iret movsb popa lock jnp cld and inc mov enter pushf fwait jnp xchg ds ret jmp and cmp mov ss push and lods sub fstl out out mov incl sbb mov dec fwait lock inc inc daa or clc aaa jg pop out les dec dec jno push jmp (bad) insl lret pop xchg jl fwait jno addr16 pop sbb jle lods (bad) iret lret lret dec push add or add jb adc mov xchg ljmp or dec outsl lods cmp add sar test into lods hlt jge mov or sbb cmc sbb cltd cli les daa sar xor fstl enter add pushf jne (bad) sbb jne int3 sub pop jnp and orb dec and enter mov sub pop mov or inc (bad) sub repz pop mov sbb (bad) negb sub inc int3 push int3 or int std cmp dec aas mov inc notl xor push out js std mov adc fwait mov mov loop and insl mov insl mov push mov adc push sbbl xor xchg stc orl pop stc xlat enter lcall xchg pop loop movsb add imul jge (bad) repnz hlt jge jb andb xchg les repnz mov vmptrst and outsb pop int into mov sub loopne mov xchg push notb in mov mov mov andb repz insb xor mov (bad) movsb call mov mov mov xchg adc xlat fabs push or popf mov shlw jae ret add icebp inc std popa push jmp mov adc mov (bad) std inc jne lods pop movsl pusha out mov fbstp js adc add movsb les add cld sub clc cwtl or sub dec cli test jg pop into adc xchg dec pop stc mov mov inc jl (bad) jecxz int3 mov mov mov pusha and dec inc xchg dec mov (bad) mov nop cmp or cwtl dec xor dec scas in out pop mov push into iret mov pop adcb outsb lock cmc jle movsb push fdivp sub jmp xchg ret or or stos mov push into mov push inc insb sub cld test and adc mov lea (bad) cld test aaa push imulb sti mov popf sbb fdivp mov fistl fsubrl and test sub (bad) sbb mov fidivrl sbb bound sub pusha pusha jb cmp fcoms cld jp or add fwait sbb (bad) push mov xchg inc out and inc sbb mov lret xchg adc or lock mov fucomi gs in ss push adc in pop (bad) out jns test out and push mov and mov enter mull adcl (bad) sbb sub das dec sub mov aas stos gs (bad) popa dec dec inc inc aam (bad) repz cmp test sbb inc push and fnstenv push fwait mov sub mov jbe popf call lds leave bound dec jmp leave and addr16 cwtl dec inc test mov and inc fucomip fstpt cld lahf push inc push push xchg out mov in into sub sbb cwtl sbb dec dec add xorl es ret mov xchg push pop pusha and jmp and iret sub ds xchg and fcoms (bad) cmp push stos pop lods jae or mov mov xchg enter sarb loop sbb insl inc dec push repnz pop negl mov bound insl test jae jns xorb adc rcl imul xchg fcoms insl (bad) popa inc dec lock push lock xor pop xchg in (bad) and adc cmp add es or and pop jp add mov enter sahf lret add push push int3 dec cli ret push movsb in add jl cmc adc and inc or call sarb incb lahf jnp push cmc xchg sbb (bad) hlt loop decl mov jne in jmp cltd icebp sub (bad) xchg or movsb mov (bad) jl xchg push loopne (bad) jno mov (bad) mov es test sub test movsb xor cwtl xchg jae stos sub idiv outsl xchg xor mov dec dec jg sub mov hlt clc jne jecxz test mov popa pop jne stos ljmp ljmp ds add cs shrb or popa mov adc cmp xor mov das or icebp xchg (bad) lea in dec inc arpl mov mov aas (bad) repz aas jg inc sbb std add xor inc cwtl repz push xchg arpl out sbb (bad) inc jbe fwait jg (bad) clc cmp mov stos enter cld cltd mov cmp (bad) (bad) (bad) test shll adc xlat jae adc jnp daa xor call adc stos pop jbe ds pop mov cmp xchg mov lods sbb loopne jl and sbb inc mov push mov xor hlt int cmpl jne mov jne cmp jnp adc mov int3 dec stos mov (bad) fcomip out int lds cs fisubl adc push stos sub add cli mov mov clc cmpsb push dec cltd ficompl mov mov inc iret lock or mov pop jb es push js out mov ljmp push mov sbb dec ret std fwait cmp jl stos sub repz jns or mov in cmp adc adc test movsb mov je bound cmp add pop pop ljmp je mov jae addl int3 push cmc inc icebp inc shll jmp or fs cld jmp mov mov les (bad) push enter mov lock aaa fmuls popf out pusha xor fwait addr16 frstor dec repz leave cmp and lock add dec push dec jns inc test mov in iret aas je inc out mov loopne jne fildl push inc cmp lods add scas sub (bad) cli cltd in orl fs lock jmpw inc daa stc pop mov mov mov in test jp lret xchg movsl loopne ficoml lods jns xor xlat pushf jmp cmp push mov das out jne mov in xlat out cli (bad) outsl pop in pop and xor loope stos and ds int3 stos pusha rolb arpl pop ja mov clc cmp jp xchg outsl or mov add std pusha popa pop stos out inc das sub out cltd sbb call pop mov in push aam lock or sti ret in jecxz lods fdivp add adc mov insl rcl xchg adc in clc imul fcoms lcall xchg xchg mov xor ja mov int jno,pn pop push lcall (bad) sbb orl rorb dec adc jge dec pusha out loope in xchg mov out (bad) mov add cmp mov or push addr16 pop stos push xchg push jns add xchg inc fldl push stc add sub jecxz xorb (bad) ds std xchg aam adc xchg fsubl call xor and dec jae sub cld sbb outsb pop push mov jecxz dec dec xchg (bad) xchg mov sti xchg fsubs and loopne,pt push xchg sub jl mov aad in add leave inc push lcall or push push mov pop mov mov stos pop (bad) mov pusha inc call and push outsl push adc out dec gs pop aaa adcb insb jp add xchg popa (bad) jmp mov insb addl sbb add or and add (bad) fisttpl sub dec loop or or mov into inc mov cmp stos cmp out outsl sbb add gs sub fmuls and xor loop cltd mov inc add ret dec js bound fisubr rcrb dec add scas mov fs int3 mov not push (bad) int3 xchg lock jp movsb cmc pop stos mov test mov gs inc out dec cmpsl push sub mov (bad) mov out (bad) pop pop popf ret or addr16 or mov push xor aam (bad) xor or aas fstpt cld test fwait add fild sub xchg stos scas push xchg or ret pop scas iret mov movsb pushf xchg or mov (bad) mov mov mov in cmp mov xchg dec push les sti (bad) pop (bad) repnz inc lret cmp shlb or dec jg adc ret outsl add jns movsl mov xchg xchg test push and aam push mov cld inc add les ror imul fcomi push (bad) in leave popa popa stos sti xor into adc shrb lea jb add js xchg fidivr and orw test movsb mov int3 xchg mov sub (bad) and out jmp ljmp sahf mov lds mov push fcom or dec ffreep sbb push cld dec (bad) and cs add fs xor aad sahf pop jmp push lret repnz lods fdivrs aam fcmove outsl inc xor test int3 mov out insl push pop shrb nop sbb push dec ffreep or (bad) xor popf pusha cmpsb mov add int lods popf mov mov jge add xor or cmp add dec out orl sub pop clc add pusha daa add pop or cwtl push dec loope dec lds cmp inc ret adc movsl jbe jp or pop pop mov sbb iret jmp xchg aaa shll sbbl xchg or add test (bad) hlt lret ds fcomi xchg push push xchg inc mov inc test fcomp and push aaa lret ret lret dec mov cmp psrlq dec outsw xchg and popf push mov sub dec mov rorl je out test pop cmc (bad) es les shr jo popf jecxz and rorb mov insb jmp xchg aam sub out sbb inc sbb adc nop lea sub fadd sub push into call jno loopne stos xchg xor mov les aad jmp addr16 inc pushf adc fildl sbb aad sbb lret lock fdivr popa data16 ljmp (bad) (bad) pop dec xor cmp in adc pop iret inc mov rolb daa fistl sbb or jmp (bad) mov cmpsl adc jne bound ficompl inc push dec dec inc (bad) mov fbld neg test push and popa cs cs (bad) jg lret push (bad) frndint ja mov push pop inc mov or incl cld mul test pop inc and jno loopne mov je cmp movsl (bad) fisubr dec cmpsl push call std pushf out fcmovnu addr16 ficoml es pop jecxz fidivr jecxz addps push pop cwtl and cmpl and pop pop cmp fcom (bad) (bad) lret aas lds addr16 mov iret cmpsb je sbb stos xchg (bad) mov push xchg les fildll test mov xchg pop xchg or dec (bad) aam rcl push push xor cli jns push (bad) mov xor insb cli pusha and fisttpll sbb movl daa mov mov sub test inc fstpt cmc je pop mov cmp lcall aad fdivl repz cs lds fbld mov les mov mov mov pop lods les scas shr lds pushf jno sahf sub (bad) mov mov cli xchg sbb ret cltd in push mov lock inc sub outsl cld fidivr pop pop ret stc stos mov jp pop sbb jp inc or pop add stos nop push sbb push (bad) lret mov into imul (bad) adc jg jbe hlt repz jo test push jo std loop or cli pop or sti xor mov pop push sbb (bad) mov dec mov adc jne mov das jle iret lcall pop push inc stos cmp loopne mov fildll jne xchg data16 fsubr test xchg push mov push sbb movsl xor ja xlat ret dec call lea xchg inc pop cmp std sub sbb mov inc addb push test sub or sub jnp jbe sbb push gs adc fdivs mov or sub daa xchg subb push gs xchg popf mov jbe mov sbb push and es sahf push sahf inc sbb jecxz stc (bad) or adc jle negb (bad) xor (bad) cmc addr16 xor inc sub jl icebp adc aam push enter mov (bad) push mov xor push sti lods cs shrl jge mov in inc sbbl xchg mov (bad) pop push jae (bad) es scas jo sbb mov jp add lods or and mov (bad) or popf push je pop lock pop push lds addr16 push data16 and xchg and movsb loop mov xchg push enter ret mov xor ja imul add xor das sti or pop fisubrl movsb loope in xchg into adcb cmp cmovle out sbb and (bad) cmp lds cmp lahf cwtl iret mov pop sub xchg inc add or adcl data16 inc pop jge cli jge push ljmp sub movsl jb fs les mov xacquire in std aad sbb enter xor mov repz jmp insl cmp pushf dec loop addr16 mov pop add mov mov mov jle test mov in loop sbb mov out inc pushf adc icebp sbb bnd in jo cmp and (bad) or xchg loop aaa (bad) sbb inc test sarb inc mov push or icebp adc scas sbb jo je jae adc mov mov add rcrl mov pop or shrb out inc xor aam pop sahf popa sub in mov jnp (bad) call or pop and inc (bad) mov in icebp ja jns into nop in int3 sbb out scas sbb push mov mov mov lcall sbb adc sub aaa xorl test out test mov test fucomip inc aam rol ljmp adc js bound pop and cs xchg add push pop (bad) ljmp aam dec mov add test push adc in fwait rol mov mov or cwtl xchg in and call fsts paddsb outsl add nop jecxz and cmc repnz inc sbb subl into jle mov jo mov arpl les sub (bad) inc shrl clc mov stos cmc es sarl test dec ljmp sarb mov and fistpll inc shrb mov cwtl fnstcw (bad) adc mov rol pop push call leave pop push sub pop xchg ljmp push iret (bad) or dec movsl sub mov out loope js and adc sub fnstenv cmpsl sarl inc (bad) push (bad) stos mov mov nop xchg mov or jne (bad) fwait sub jbe out jmpw (bad) daa movsl stos sbb push lahf jmp cld scas imul sbbl mov or xchg ja dec stos int cmc jecxz or ds js movsb xor mov (bad) xor into sbb jno cmp outsb insl stos or mov (bad) xor aaa dec ss pushf pusha test mov daa stos inc pop sub xorl and mov dec inc mov jg repz stc ret aaa pop mov mov shl push xor cmp jnp mov sbb jns mov (bad) sbb jae xchg xchg hlt jno scas div inc iret xchg jp mov cmpsl sub stos sbb movl inc movsl mov pusha pop pop and jne sbb daa sbb fucomi mov sub fdivs test aad jle rcrl push dec out xor in mov jle xchg sub lcall inc cmp xor psrad jle cld orb jmp mov outsb in aaa xor movsb dec lea je sbb and (bad) sub sbb jmp sbb jl cmp divl outsb in rcrl imul mov mov insb shl mov push movsl movsb cmp fldt push add mov cwtl push movsb fnsave call (bad) adc (bad) lods movsl add inc inc or je jge loopne andl mov ret adc push jmp test mov negb in xor dec xlat cmp jmp (bad) fcomps gs mov adc xchg mov das cs add jmp pop push gs xor repnz jp shrb inc je bound (bad) pusha rcrl add jg sub pop lock adc ret ss dec add loope sbb inc rcrb aam push cs push push jge loope lods pop movsl roll out inc fbstp pop xchg mov lds stc repz mov xor xchg jne or nop add dec test inc xchg sti jmp mov mov xchg fsubrl in xchg or rorb push js pop fistpll clc push js fs sub sub and sub and bound adc mov pop bound call std mov cld inc sbb cwtl es and mov loop pop fwait add mov inc fdiv ja sarb xorb jge pop jg ret pop push ret jmp adc fwait aaa pop pop push mov inc adc shrb (bad) jle jb mov sbb and lock (bad) enter or add lret bound mov dec pop das sub sbb shrb fldt subl adc cmovle js fwait (bad) jae,pt mov push xchg fidivr out push dec fmuls xchg xor and mov add shlb push push pop lret inc (bad) jbe mov push insb inc or inc in or out push jae mov insl in push aaa mov mov mov mov sub mov mov mov mov loopne mov int std outsl lahf scas mov sahf cmp bound jp cld rorb push dec fsubrs (bad) jl xor (bad) ret loopne pop les fucomp (bad) std out fcompl jnp (bad) test sti (bad) inc test push cmp push fldl dec into or push stc cld test cmp add xor mov rcll in or and sub mov (bad) sbb push repnz out jmp jmp xchg enter leave pop jmp pop xor sub sub frstor inc cltd (bad) sub sub cs mov nop popa mov sub outsl lahf mov add push ja movsl pop dec inc stc mov cltd cmc push cmp insb and popf jnp xchg jl or dec and sarb arpl out aas add dec lods and push ss cmpsb push stos pop push cs adc js mov shrl jns xchg mov xchg inc clc jl dec pop nop push fcmovnbe mov xchg jo ljmp push lret add in pop or outsl mov jl jmp pusha aam outsl jae fldenv mov mov ret aam push imul fisub int orps (bad) ret aas xor ds inc movsb sbb pop jnp sub add add mov (bad) dec inc mov push es cs inc mov movsl (bad) (bad) inc inc out rcrb lds iret push mov xor inc sbb mov or imul xor les fdivrl inc arpl cmp push sti rcrl pop add inc inc adc rcrl rolb (bad) orl pop mov scas js mov (bad) push shl inc mov ds test incl pop js js adc sub inc mov sub js cmp xor jp int3 insl mov je push push andps xchg fsubl dec push daa rcr or sub and adc pop xchg mov cmp iret mov (bad) aaa icebp mov out int fistpl loope repz sbb cld xor xchg int3 mov sbb jae lret fidivr fcmovnbe mov (bad) mov jl lock or inc insb pop dec xor mov sub hlt testb pop (bad) into bound out fbstp ret sub dec xor test test sahf xchg mov into push pushf mov jo jp,pt int3 xchg and arpl (bad) les faddl jp or or xor mov nop sbbb cmp sahf leave mov cs mov movsb fwait js das push lahf cmc test cmp jo add cmp and js dec loopne movsl leave cmp cmp push sub dec (bad) jo dec sti leave push inc movsb or mov cwtl sub (bad) movsl sbb mov inc mov mov sub adc rcrb inc xor shr sbb shl (bad) push (bad) (bad) mov outsl mov cld aam andl shl sub dec mov inc cli xor adc rcrl cmp mov and add je xchg out leave xor sub push sbb cmp or (bad) cld (bad) adc sti loop shrb fidivr setnp mov aaa mov lea lds int cmp inc sub inc sbb (bad) shl in fisttpll xor enter lds repz in (bad) stos jb dec mov sbb lret cs (bad) les stos daa cmpsl and jo outsl data16 xchg (bad) nop xlat pop mov loope and dec (bad) int3 out (bad) aad push mov imul divb jle xchg inc xor push mov jmp lcall xchg mov cli fstps fidivl cltd jns cmp sub stos repnz mov mov movsl int3 and or push pop sbb jns arpl dec insl in scas sbb xchg mov inc xor sbb add je jns popa in sub mov adc sbb adc dec mov mov cmp cli mov push stc ret int3 mov aaa outsb inc inc pop int3 scas push mov sbb shrb dec xorl loopne data16 cmp add jle aas das call insb fisubrl cmc cmp int3 mov outsb and cmpl mov dec jle lods and pop push pop test add aaa and hlt sti cwtl dec adc xor dec lock jno test lds rclb xor jp gs fiaddl xorb popa aam xchg daa loopne adc enter cld stos cmp out sbb idiv imul mov jnp add rclb cmp jge aas fbstp push sbb cmp mov dec and je,pn push loopne ds arpl fsubrs sahf sub xor (bad) jb mov sarl mov test dec add dec fcmovbe xchg pop and fucomi data16 fistpl stos fstpl jl daa out lods ficoml mov mov sub and insl ret inc mov addl aaa cld mov addr16 ljmp cmp mov in cwtl mov sbbl inc int3 push enter adc fisttpll (bad) arpl sbb (bad) and cltd outsl adc clc jnp sub sbb inc addr16 inc push pop fcom inc lret cltd insb insl lahf jno es pushf sub ljmp xorl lock in fwait pop test push mov (bad) pop or cwtl or out dec loop mov mov rcr mov and clc jno sbbl jp mov and xchg nop clc cmp imul inc sub or sahf and mov pop add lods add mov sub jge mov cmpsb bound shrb lods cmpsl and or in inc sub and dec pop inc dec in jecxz negl mov fcomi or pop mov lods test pop pop out add sbb mov mov (bad) aad lret pop add pop repz jno add (bad) mov loope ret or push mov pop loop ret (bad) jns (bad) and out adc mov enter insl jne stos (bad) sti push xor leave mov mov sarl sub int add scas jbe cmpsl pop decb or lea xor xchg ljmp dec stc or stos andw jbe fistpl mov pop repz fdivrs mov jg arpl dec push pop shrb lret pop inc xor int subb mov fwait mov lret loopne jg add sahf decb ret and (bad) adc lods sub das lcall push scas pop adc xor jnp out mov movntq and popa (bad) enter sbb in mov stos or adc (bad) cmpsb out lret int3 test mov pop push jp test mov ret dec mov jp in out pop test mov pusha push xchg scas pop mov repnz xor and lods jo icebp fbstp pop mov inc and cmp adc xor js and aam mov jnp pop add ja loopne cmp les jp sub and (bad) aas mov (bad) or movsb mulb jne outsl xor call inc sbb mov in xchg dec pop cmp pop cmp andb lret lds (bad) daa sub jle adc pushf clc and negb xor dec xchg adc pop push jmp das lds or sar cmp pop sbb push iret add ret add push push shrb lahf sub clc and xchg sub and xor sbb nop fsubrs out call negb fistp loop cmp cs adc or loop leave es test test dec cmpb shrb jmp pop jl pushf je inc mov xchg pusha or lcall fincstp mov dec adc mov mov push out dec mov pop or in stos sahf in lahf dec in (bad) mov lods (bad) jo in jo mov add or stos icebp (bad) pop sbb iret or aam add repnz js aaa push lds (bad) fcmovnb out push xor mov notl or jns faddl jecxz daa cmpsb xchg clc adc mov pop insb imul sbb mov cmp push out cmp loop iret pop movsl jge push push pushfw sub mov lret push into call sbb sbb mov mov push push dec mov fwait movl sbb sub sahf dec add or add or and dec cmp std in std popa jns inc shrb add ljmp repnz test lret ja ret adc subl sub mov sub sub mov call sbb mov leave xchg scas and lock dec add repz jge push add add mov das (bad) jnp cmpsl scas das push shr and mov sub mov (bad) (bad) mov sysenter loopne pop ja inc adcl jmp lock jecxz outsl pop push pop (bad) inc mov (bad) cmpsl cmp mov mov idivl pushf shll dec fisttpl outsl lret addr16 ljmp lds sub cmp pusha aam int pop sbb push ja jg sub push xor mov out out xchg or ret or iret mov iret mov add and sub (bad) dec rol xor sub adc sbb xorl je mov push xchg mov or adc and dec cmovge add mov stos je pop push push mov ja ret sarb stos adc fsub cltd mov inc sbb dec mov cmp add xchg jno sbb add add lods lret sbb push or dec mov xchg and xchg mov adc sbb (bad) ljmp mov (bad) pop arpl add cmp sbb inc ret mov fwait (bad) shl xchg (bad) popf or pop movsl inc push loope shrb popa cmp jmp cmc (bad) jl or sti adc movsl push and jp popa loop,pn pusha ret mov mov jae xor lods mov popa mov xchg push add dec ja out jb or fnop into movsl mov adc jne jecxz and sub mov pop sub jne test jg std and sub cmc out inc fadd insb xor les mov dec sub mov fnsave mov je repz test and jecxz ss sub cmpb mov jmp adc dec push aas sbb mov aam aad cmpsl mov sbb or test mov pop test adc dec dec stos ljmp (bad) mov add add lret lret dec jge subl or scas (bad) cmp and lods lret inc push stos mov sti pop lds fnstsw sbb (bad) pop pop mov xchg inc push cmp xor (bad) fbstp popf mov inc push outsb stos cmp sbb pop ss shr or or dec fisubrl cltd and push mov rorb test mov mov rcr xor cld pop push sbb jne or loopne sub mov int enter and xchg mov push clc rol insb pop sub xchg lods imul inc adc cmpsb (bad) xor sbb adc mov ret jmp pop jge addl add (bad) stc mov incb inc push js jae cmc mov mov mov fmuls shr std aaa bound hlt jmp jno movsb (bad) dec mov movsl adc stc inc rcrb or xor pop leave mov jl and cmpsl dec mov pop test jno adc icebp movsl xchg ds inc test fwait push adc cmp sbb ret jbe mov xchg adc cmp inc xor scas (bad) mov mov sub mov cli loop fdivr andb mov sub cmpsl (bad) stos adc jmp jg push mov jle inc jbe loope test pushf and je mov (bad) xor dec int3 cmpsb push dec aam sub stos mov test ret shll mov pusha aaa sub lcall movsb jns cli imul addr16 out call mov pop insl rclb das lret or in jge movsb mov int imul sub mov dec jnp ss jae push les xor push sbb adc adc adc mov dec mov es cmp pop mov inc out mov pop xchg inc sti into mov cmp rcr and and (bad) mov pop pop aaa fstl sub je sarl xchg xor (bad) lds mov incl popf popa push or xor jno fnstenv repz sbb or leave rolb pop sti adc or sbb pop inc (bad) aas jl sarl sbb jo cmp ret xorb movsb and push test popa pop stos cmpsb inc dec push mov jae cmp fdivrp (bad) pop arpl ret add and es (bad) inc mov std mov mov xorb mov lea (bad) sbb sub (bad) or lret call mov (bad) adc lcall orb addr16 mov sbb lret and lcall shr push (bad) mull cmc lret repnz dec xchg js xchg dec repz adc dec icebp jae mov icebp or and pop mov lcall adc mov rcrl (bad) call enter push push adc jo movsl mov mov mov or outsb sahf addb push sbb pushf xor bound lcall pop out lahf lea lock push test xchg push sti (bad) push sbb jne mov fisubrl pop pop sbb (bad) push scas fdivl test inc (bad) fiaddl cld repz out fiaddl push das jno cs pop dec notb cld push arpl and lea into lret mov popa stos insb gs cld jg,pt out xchg inc js int and xchg decb pop push cmc mov pop aam xchg jg inc jl ljmp pop adcl iret cmp (bad) mov lods jg cmpsb dec fwait ret pop addr16 jne es sub imul xor (bad) jl dec dec fldcw pop jbe dec mov mov cwtl add mov aam inc sar adc rol sbb mov into adc push lods sub pushfw in sub je push push nop pop data16 add jp push push and pop add arpl add icebp jb dec xchg lods mov fnstcw movsb out jnp sti arpl ds push add dec jg in jl ds jge repz cmpsb cli or cmp sti mull aam in in fdivrs rcll decl test loop push mov fisttpl jne dec (bad) icebp jg stos pop jge out add dec pusha mov insl aas ds inc xor pop cmpl faddl mov hlt sub call cmp cmp test cmpb pop pop lods mov push (bad) push lds mov dec sub and arpl shr mov out inc sub cmp adc mov and cmpsl add mov mov jae (bad) jno push lcall jb or mov lods mov or mov into adc out ret xchg and shr pop push nop mov cmc sbb mov jnp add cwtl insl pop inc mull shrb aam fidiv aam push mov loop out dec sbb movsl xchg mov sahf lret jno xor xchg mov mov (bad) jp add or add sub movsl ds call ljmp and xor (bad) jno ja in adc pop in rolb xor fnstsw cmpsl das iret imul mov adc push inc adc cmp mov aad bound mov call outsl or mov lahf vpaddb sub dec sbb push aaa es sti fdivrs inc dec dec adc repnz out jne push int3 fwait pop fwait scas mov mov out js jns pop xchg jns aaa cmp add jle bound and mov mov repz mov xchg mov call add jge push outsl sub sub jae shlb cmp nop push and ret into cmp repz inc cmp sbb sub call cmp adc pop in xor cmp lods or and mov jne shr xchg push xor orb lahf push jo mov sbb in cwtl addr16 and xchg loop push mov movb adc outsl xorl mov xchg notb (bad) dec xor aaa pop mov icebp or daa shlb in sti mov es adc pop cmp popa jp add out (bad) aaa rclb fwait scas and pop bound in xchg repz jecxz adcb addr16 mov jg lea xor pop frstor xor or inc sub shlb sbb fs (bad) mov icebp push sbb xor mov mov fdiv fdivl mov adc int bound cltd lds mov jne jne xlat idiv out jecxz jmp lret adc mov mov xchg pop and jl inc (bad) fsts popf imull xlat add aaa (bad) dec mov mov fdivrl and sub mov imul cmp loopne rcr orl jle xor loope push inc mov in sub dec adc cmp xchg xor add je xor test or js mov pop jecxz xchg das push aad pop xor (bad) mov nop mov cmpsb shlb jne std pop mov push in call lock sbb ds ljmp int rcrl imull ljmp inc aam nop in mov cs or (bad) out movsb clc and jmp push stos sar mov push push mov lcall (bad) aaa pop dec pop sbb cmpsb sub in in mov xchg xor push and fcomps pop fidivl xor cmc inc pop lret push imul pop push cmpsl or sub outsb arpl fistl mov dec (bad) lock mov adc into mov enter xorl nop lock movsb xchg add rcrl test (bad) mov stc popa xor fisub stos je xchg orl and fcmovu mov mov cli dec aaa xchg insl adc cli rcrb inc cmp pmaxub and ret inc mov or push or mov pop int and dec or sbb pop add popl adc sub insl pop icebp lcall outsl xor dec xchg or popa nop mov int sub inc data16 inc repz jg std inc add lret xchg mov stos ljmp lds data16 inc mov mov iret lcall or addb ret ja mov loop in xchg pop es mov fisttpll push add pop nop fisttp mov lahf cmpsl xor iret xor adc push push or cmpsl dec mov sbb std shll repz out fnsetpm(287 js xlat and inc popa cmpsb adc add add adc xor fnstsw xlat push aas int rcll cmp cmp jo add mov ja sarb dec xor (bad) (bad) pop mov stos in lcall mov loop adc or jb dec mov mov hlt sahf sbb jo push pop dec pop cli mov inc shrb out cld adc adc ret fcoml sub xor xor jo rolb call jnp sarl and add fiadd (bad) xor int3 sub fucomp fildll and cli pop fs pop repz sub es pop mov xor sbb fild mov jecxz loopne repnz enter jae int out push mov jno loope ljmp shl jo sbb lods bound sub add leave iret fisub inc lahf les sar push (bad) call shrl mov jne daa pop mov xorb xor shrl sbb adc mov jo lret (bad) stc xchg ja jns outsl xor cltd mov jo std jb scas jno ficomp add push dec sbb mov outsl jecxz sbb mov jae push fsubr or fdivrs jno add shl outsb loopne pop scas xchg nop jecxz add inc add jne mov adc cmp (bad) jne les dec adc lcall sbb sub movl stos mov mov xor std sub xchg sub jge adc sbb in scas xor xlat out push adc jnp into addr16 mov (bad) (bad) and ret xor or xchg dec test pushf or sar mov ret and inc test sub ret mov sbb sub mov lds scas xor mov ficompl bound jae call and xor pop adc test aas sbb and push movsl jmp (bad) xor xor mov dec aas xor jns mov inc (bad) stc mov pop testb icebp fnstcw pop aad repnz repnz xchg daa xchg loope mov and mov rcrl dec adcl xorl xchg js jno xchg or jmp leave movsl inc dec dec movsl int insb mov xchg mov inc pop push scas mov or mov lcall sbb or (bad) mov sbb lret mov cltd and out pop push jae lock adc cmp stos aaa stos out (bad) cmp mov lock mov mov add bound mov or ja test and push icebp add adc (bad) aam cmp (bad) sbb das sti je pop and cmp push lret mov daa jo outsl pusha fs lea out daa in add pusha pop int3 incl fidivr (bad) (bad) das iret push (bad) lcall mov (bad) rcrl fstpt sarl pop mov pop xchg in jge repz stos jo fdivrs dec fwait in pop push fwait in imul sub mov loope idivb into sbb imul mov mov das insb std jo pop ret xor fistl inc and leave xor lahf in xor cs loopne mov popa inc andl scas jecxz notl popf jp cmc pcmpeqd and lahf or jno je cmc out popa jecxz push push lods movsb cld cli call cmp loop mov std popa jbe imul xchg stc jl push pop xlat add das shlb pop aaa out mov pop jmp push stos inc sti out jge push pop jo lret jne (bad) sbb xchg bound inc push call test or cli push sbb push dec mov mov arpl mov xchg loop std sub int xor sub mov test gs inc add mov add stos std test inc cwtl cwtl cmp pop or xor test inc stos jmp add mov add mov dec cli mov sub and xchg fnstcw cmp jle pushf pop daa push fbstp rorl popl cmp dec negl pop push fild in jno fcomip mov push out adc sbb or sub xor (bad) movsl pop adc in and sti cmpsb cmc push or mov pop cld mov sar pop in loopne (bad) xor int xchg mov pushf xor add jno into dec scas sbb sub mov cmp in (bad) xor scas add xchg outsl pop inc or jle mov dec mov daa in gs andl cli repz cmp lods fidivr adc cmpsl or or jmp fnsave cmc fcomps or push repnz arpl and push sti xor jb xchg dec dec pop fs mov jae dec jbe or sub pushf jecxz xor mov fnstenv mov (bad) in add sbb insb jecxz mov and jbe scas pop les insl pop sbb sub and cld sarl arpl ret and jge add cwtl loop xor push repz jbe dec sub arpl adc mov loope cmp loope jo incb aas jo xchg or jbe push fdivs inc into sub ret test (bad) rorb xchg push xor sub mov inc mov imul pop sub insb cld mov (bad) imul inc cmc (bad) xlat out iret fstps inc ljmp or mov and stos mov push addr16 testl jp dec cmpsl mov out lret outsb ret scas out mov es out inc and jmp mov pop adc les sub push jmp cwtl jmp pop mov sbb mov adc push in jge pop mov pop mov nop jns in outsb pop dec jecxz cmp cs fdivs inc cmp add out jecxz addr16 (bad) rcrb out lret daa sbb mov pop inc sub scas inc jecxz in push mov inc mov xor dec sub (bad) fsubl out mov xchg in stos sub push fnstsw mov in call int sbb push aaa xor push hlt iret (bad) iret push or add sub cmpl vxorps mov mov mov fwait iret xchg js pusha stc dec enter movsl shl inc fild orl sbb dec fistpl negb ficomp dec adc dec ret sbb adc divl mulb jno repz or xchg sub xchg orl out sbb adcl cmp dec gs jns xchg xchg das mov stos mov (bad) imul sbb daa adc push ds jmp (bad) aaa xchg cmpsb hlt mov out lcall jns jae fildl mov jl add push stos loop in js cld mov inc pushf aas pop push inc xchg push test pop push jl jne lods mov mov les enter adc sub adc mov iret addr16 mov or dec xchg movsl lods adc (bad) (bad) fsubl push dec push jp dec mov in cld hlt xchg fwait pop (bad) jle movsb push sbb cmpsl ror jge ret ret mov sbb add in stos shl call out stos add fisttp push pop and xor movsb addr16 jecxz nop mov mov push inc mov adc and pop fcmovb in xchg (bad) jp xor (bad) push popa dec hlt push icebp mov mov mov lret dec les scas call lods shl movsb adc iret dec xchg cld mov cs std xchg cmp aam jbe fadds inc cmpsb outsl mov jo sub mov xchg sub jmp decb pop xor (bad) imul jp push shlb or sbb cmp push in add jns push insl push loope aad fdivs mov lods and loopne sbb ret jg jnp jne pop xchg mov testl stos add loope adc cmpsl insb or xchg (bad) cmp jge arpl lret rcll sbb stc and xor jp xchg dec iret and inc or add jg push jbe pop dec and jmp test (bad) out (bad) in jmp and mov in fisttpl sub pop dec and movsl les rcrl out or dec jp lret lahf test imul sarl and cmp mov lcall iret or push and sub jo jb out sbb mov adcl loope (bad) out std sub pop call or add loope fwait lods adc pop addr16 inc cmp pminsw and sub jl inc sbb or outsl out pop inc test push push pop (bad) mov enter fldt push hlt test es lsl pop (bad) (bad) pop and cmp mov sbb push pop rorb push jp lcall mov add and ljmp out mov loope ret mov movl add inc push stos adc xchg pop xor div inc adc inc add mov out pop movsl into outsl ret add sub movsl int3 and call mov inc inc lahf xor add dec add inc mov jne loope je push xchg jbe dec fisttpl pop jp and (bad) jmp cmpsl inc pop cmp or mov imul mov arpl cmp lret mov push pop jg fistl fcomps cld pop mov mov adc add movsl push fisttpll or mov lock ja lock jae push add std mov add mov sbb push dec popf fwait cmc gs pop int3 mov lock jmp ret imul pop rclb in push inc mov push xchg int3 pop jmp dec mov aam lds ljmp lret pop pop or ret lret push jg mov add and leave scas (bad) rorb sbb jge and cmp add pop orb mov mov orb inc pop repz push cwtl imul stos out or push roll lods mov js (bad) fcompl loop cld cmp lock dec into mov push mov xor jmp cmpxchg inc sub mov scas jnp loopne arpl lea xor xchg mov mov jnp add mov sbb cmp cmp (bad) ja or mov rcrl lds sysenter (bad) in test mov xchg push add push fnop push jno pop int3 inc cmp cli in dec dec (bad) imul pop ja xchg imul inc or jbe popa sub xor aaa aas xor add repnz idivl into cmp dec mov jo mov pop mov cs mov mov mov inc pop add popa call rclb loopne or mov mov sbb dec in popf dec lret mov int3 pop sahf or ja jo std pop je push mov and mov dec mov scas mov mov pop and inc sbb or pushf in mov jp (bad) es cltd sbb loopne imul das dec ljmp out pop pushf and pop inc shlb inc fimull in cmp push inc repz out and cmp sarb int lret sarb pop (bad) xchg out mov xlat int mov stc cltd or and bswap or push sbb lock sub out sub icebp pop cltd mov out xchg inc cmp ret inc (bad) das mov push scas in jg push ss fsubrl mov fstl mov ret sub and (bad) fstps pop sbb rcr enter aaa call push mov repnz mov xchg sub push (bad) mov loop les jnp and pop stos mov and mov jle jmp add popa insl roll fcmovnb nop idivl cmc mov das pop add lret dec int test inc jecxz cmp sub dec gs or insb mov sahf nop pop inc mov adc pop sub cs movsl in dec jg mov cmpl das xchg scas dec insl xchg jp ficom shl (bad) or xor sub ss jge mov mov rol jne cmp out or push iret xor aam fmulp ljmp pop fs fistl rol std in rcl sbbb cmc jae out aaa es cmp int3 add and jecxz inc pop mov mov pusha mov lahf mov movsl inc pop sub mov jo leave or xor loope pop fidiv pop imul pop and popf cld dec and mov xor add jp roll daa sub icebp adc sub dec lea inc mov test (bad) mov pop add lcall scas sub mov and shrb push adc adc mov mov movsl push and icebp sub rcr cmp (bad) jbe jbe sub loopne ret mov lahf fsts sarb rcr and js jmp ret ret push inc std stos adc mov data16 shll sub mov cwtl inc inc mov jbe outsl lahf lahf fmull cs xor imul xchg jl pop mov idiv sti sti mov fwait in xor testb and loope adc mov mov add inc cmp ret push rcr imul in or in xchg dec daa fstl and hlt add or aam jne mov mov cli mov nop (bad) sti or cltd scas jno sbb and add sbb and push dec pushf sub ljmp imul stc inc add push sub aam cs push sbb je js fldl test inc sub testb inc movsl (bad) out cmpsb fstps sbb (bad) ds xchg jbe dec cmp dec push cmp push inc int jp sub sar adc sahf push scas inc and shll and jne xchg ds mov cltd cmp out jp lods xor jle ss mov jae pop inc lcall fsubl and insb inc (bad) inc loopne jl aad fmul mov sbb data16 and or cld mov xchg roll sbb jbe dec cmc (bad) mov mov (bad) repnz in fldcw loopne cmp mov incb lret or and xchg push cmc push xlat push addl aaa or sbb mov pushl loop das jne dec xchg int inc adc loope add sub pop mov les pop (bad) fisubl xchg jnp adc sub fidivr ds push sti sbb mov out xor ficoml jo push dec or mov sub jns inc scas mov nop ja in pusha mov pop shl jbe nop movsl fdivl inc mov adc clc dec pop lret jb jne mov or or outsl mov mov fucomip pop mov jg jbe jnp test rolb lea dec mov gs pop add dec ds pop pop outsb lcall pop mov outsl sahf mov jo lea jnp mov push sub or sub or adc cmc inc mov scas scas mov add loopne xor scas push call sbb les js mov inc scas pusha or add inc dec fstpl jb outsb fisttp test rclb push mov test jle out cmpl (bad) jle cmp xlat pop pop push sarl pushf insb int3 aam pop nop pop out (bad) mov xor inc xor dec mov and mov addr16 cmp push xchg fstp mov cmp or mov xlat ljmp int jecxz in pop enter mov and fs mov jge jns and push jnp int3 mov call sub ds aaa out aaa stc jns out xor lcall arpl fcompl loopne push adc nop (bad) loopne test pop inc testl push mov or repnz push sets cmpsb sub (bad) ss in out jnp,pn mov lods xor or or xchg jnp das clc out and sbb or loop inc scas jmp es in rcrb xchg dec test xchg psrlq mov mov jl cmp add jle fwait insl push cli sub mov mov pop cs xor les add mov mov push nop xorb aam or push arpl mov inc sbb jp dec data16 xlat cmp dec movsl adc adc sahf imul mov roll sub xchg into sbb lcall xchg mov jns lret and xlat out loopne (bad) rorb jo inc mov xchg imul xchg out adc (bad) (bad) jae iret or sub push cld fs loop and pop outsb pop lock inc repz shrl imul mov lods inc dec pop lods das sub aaa std mov add dec mov mov cld lods jg test mov fisttp aaa shl mov cltd cltd insb idivb lds out or mov inc aam (bad) dec cmp xor jae nop inc ljmp nop out sub sbb and jge mov call fcompl loopne cmp xchg sbb enter stos sbb insb hlt ret stos movsb je inc ja sub in repnz mov mov mov icebp lock clc es jp or mov in (bad) sahf jg cmpsl add lret pushf cltd sbb mov mov mov (bad) stc xor sbb clc and add inc adc (bad) or pop dec and (bad) dec hlt hlt orb pop cmc or or iret pushf push xchg add jecxz mov imul daa movl sub pop add lock jg or mov dec int inc xchg sub insl jge hlt int sahf je adc popf jb movsl mov lods inc xchg jg mov lcall mov jnp pushf dec push or sbb sbb movsl push sarl mov mov mov (bad) inc fildll fs call insb pop aaa dec mov rolb negl or push leave adc lds aad mov ret jp mov rorb ljmp js sub and mov (bad) sbb push jg xor add repz add dec out push mov pop cwtl lcall pop cwtl out shrl adc jp insl imul les mov and dec cmp lahf (bad) push leave sbb push repz movsb and aas mov add ljmp stc movsb adcb lea ljmp sub daa push mov xchg orl jecxz and push aam push ljmp ss loop icebp cmc popa in andb mov mov loope rcrb xchg inc call stos jge jmp or xchg pop jbe push xor sub dec lret lret sub adcb push jmp mov in rorl cld lahf xchg add imulb cmp sti cld sahf hlt mov ffreep cld lahf and xchg orb xchg xor push scas jecxz jmp fs sub or dec or jp mov fidivl shrb jge aad mov (bad) sti mov mov lcall cmp pop imul and or adc cmc cmp subl mov jo imul pop pop or lret lret divb push adc xchg jle xor or stos dec (bad) rol test iret pop enter lret inc mov test lock (bad) fldl test sbb inc btr and cmc xacquire sub iret adc insl out stos lock add mov cwtl xor shl adc jp mov enter mov paddsb out cmpsb jae inc cs mov adc push rclb and imul mov push push sbb mov push mov cmp dec fs xor add mov push inc int hlt cwtl lret mov lods mov mov imul pop orl mov pop mov pop jb add mov mov jo sub rcrl insl pushf pop stos clc in sbb nop or rolb pop lods js inc cmpsb add mull scas lahf out insb popf lods and adc stos inc pop push mov stos ds ffreep out (bad) arpl hlt stc arpl (bad) pop cmp mov lcall xchg jl lcall subl aam in stc mov push jbe ret test sbb jne aaa cmpsb inc xlat (bad) xor aas jle adc pop dec add mov outsb in test adc fstpl push test add jno or cli call adc and test sti mov aad dec mov inc jge pop cmc pushf rcll (bad) aad lahf xlat adc dec add mov ret outsl lret lcall pop push jle adc dec cmp sbb dec sub lret sbb js pop pusha mov mov js andl jge pusha shr clc cmp test fstpt test adcl arpl cmp jge ror sbb push xchg in lahf in fs ret add scas dec sub xlat inc push in mov scas ret rorl test subl dec fimull cmc enter cmp cmp mov pusha cld psrlq dec test cmc ret (bad) push add data16 mov cmp ret or aaa iret imul push cmpsb ret mov cltd out jno dec sti cltd shlb pop dec nop (bad) jae ss pop or icebp call jmp pop push xor xchg lret dec mov add xor xor and pop clc jbe lret xchg xchg cmp dec inc add push mov jne and pop ds push xchg repnz ret add stos test inc push push jge sbb aam (bad) lock cmc fldl call dec dec (bad) sti pushf jle dec pop push leave adc pop jge arpl ljmp cltd mov mov aam dec jp jecxz mov mov mov sbb adc push popa pop das dec and (bad) sub jne mov cltd mov (bad) js push add jne and cmpsl movsb out mov das sub lock add cltd in (bad) jbe std fwait paddw lret push lods scas and in repz adc pop call shll jbe mov sbb and cmpsl sub mov stos cmpl cld push scas in or dec es xor cmc pop inc adc pop lods jns adc push xchg add movsb push stos mov xorl sub les jmp test sbb push pop fimul icebp xor pushf std out xchg sti lret jmp add out lret xor imul sub mov cmp add je push push div xchg push or push ffree xor jbe or push inc bnd js cli jle cmp jmp faddl dec jmp test fnsetpm(287 fisttpl sub imul jp loop cld jp mov mov std push pop push lret dec je movsb mov (bad) pop mov outsl pop cmpsl ret enter and lea aas xchg adc test movsl loop imull sub jmp movb jl int3 stos sbb nop cmp mov xor lea mov mov fist push iret dec jmp fnstenv jmp popf ret jecxz mov loop outsl in js in pop add or clc and and dec in icebp jo mov sub pop iret dec mov add cmp mov outsb mov push ss cld pushf push jge leave pop jp lret pop xchg cmp (bad) jns and cs xchg jno cmpsl xchg ljmp stos xchg js sbb push xchg sbb push je xchg mov cs lcall pop adc or pop adc scas and int3 add xchg cld sbb popa out add movsb push ss inc and pop mov mov push dec mov div repnz jmp movsl into fdivl jp and jmp pop mulps mov mov mov xchg and sub pop xor pop add push cmp push sbb mov push add les loopne sub jp mov mov xor cmpb ljmp and adc push add jb lods xchg test and jp mov scas insb mov mov pop jne xchg orl xchg mov jge mov (bad) popa (bad) fadds mov (bad) mov inc xor pop ret clc ljmp int adc jl push jmp and mov jl adc jns sub out test dec push int int3 cld pop in lret add push aam lret ds adc cli cmp outsb jae sub jp pop (bad) xchg lds dec inc jmp into mov fstps and mov mov testl std pop dec imul pop push fdivrs sub add lods clc adc pop js jp mov and fidivrl push xorb xlat decb sub aam inc pop or push mov outsl popa mov (bad) mov lock push xchg in jle jne pop test xor pop pop rolb and imul (bad) jb cltd into cwtl rorl pop dec inc jge stc lds pop int in mov notb pop test mov lret popf loop lret hlt jmp inc outsb or xor lahf jne lea pop stc mov xchg shrb je pop and lret dec (bad) clc xchg test sti insb adc movsb jecxz test jae,pn jle sbb adc cmp xchg mov add ds push xchg out jnp movsb fwait lcall jge (bad) repz mov fidivrl popf cwtl pop int3 sahf (bad) pop ljmp cmp das repz dec lret fstl (bad) into cmpsl jmp push addb aad and test cmc cmp fidiv js cmp fucomi mov fdivs outsl out and mov pop bound (bad) sbb fs (bad) and push sbb in in mov dec push scas adc sbb insb mov lret insl lcall pop push pop loopne rcrl (bad) push push dec cli std push repnz adc push pushf jo push xorl aaa insl sbb push and movsl shl ror fcmovnbe pop ret xchg cmp jp (bad) xchg jno inc lret mov cmpsb jg xchg add rorl jno test insl jmp fmuls scas lea aam sbb push test fs jp in lahf jo and jno dec lods repnz pop notb mov mov mov xor jne int3 jl mov cmp leave aaa cli neg push cmp dec adc xchg adcl lock (bad) sbb push xor ss int3 cs jnp fnstcw fcmovnbe mov int pop leave pop xchg (bad) cmpsb (bad) mov gs push stos xlat inc sarl jecxz cwtl es adc into jb orl pusha gs in adc mov xchg pop sub lds mov scas enter test (bad) rclb gs push rcll and (bad) xor nop lock fwait jmp dec jge and cltd xor dec fnstcw jo iret xchg fs (bad) jne aaa inc sub cmpsl insb lods scas cmp jge adc push push movb dec pop and dec push mov xchg mov jo push lcall mov cld mov sti mov cmp ret xchg ljmp add adc arpl xor arpl cmp xchg fbld enter divl in ss pop cltd cld mov jmp out pop or fnstsw pop in adc sub icebp cmpb fsubrs mov stc inc cmpb test js push sub jbe out dec ret lret ret addl rolb cmp push jne sbb and and xchg add sbb fldlg2 pop dec and out js daa daa sbb ret dec mov xlat sbb lock cmp mov jmp jl lods rcrl or jnp add mov in subl mov (bad) mov inc sahf fs dec jge dec push pop cmp (bad) fadds and adc fwait sub mov fsubr and iret rolb mov (bad) mov push lret push jnp div lods xor mov xor test sar stos int push xor sub mov or pushf (bad) dec or cmpsl sbb pop popa push xchg dec xor dec ja cmpsb stos loope fistpl lcall stos call (bad) jo sub mov or es push inc sti mov clc xchg test or aaa and xlat ss dec cmp xor sbb and sbb les mov add inc fisttpll imul scas fdivl sub fwait jmp jle push cli scas pushf mov sbb pushf adc es push dec lock dec xor cmpsl pop imul stos stos xchg pop es cmp and lret rcll add and xchg push xchg aam cmp or jne aaa insl out fistpl mov std mov data16 and lret pop push and inc add ret fwait out div push es icebp dec inc pop mov or mov clc adc (bad) push in fs ljmp and mov mov mov (bad) ds push cmpsb sbb pop jmp stos fisttp sub ffreep pop push cmp cs daa sub popa jmp int3 fisttp cmp addr16 sub sub nop inc and sar sbb cmp lahf jb push mov and cmp movl stos loope mov sarl imul es mov jle movsb xchg adc outsl fiadd sub push push push dec inc stc loop adc dec jecxz fisubl sbb mov (bad) inc adc xchg xchg inc fsubp and adc (bad) in cmc ret rorl jle ret movsb pop cli cmp and mov out or sti adc pop fucom dec lcall and cmp addl and rcll adc pop jge fmull dec adc aad or and xor or sbb xor and lahf lcall enter rcr aaa jecxz lock popa mov sbb mov mov (bad) mov and or or inc add xchg push jmp fs jge and sbb adcl nop push adc push xor jp (bad) scas (bad) jl adcl cwtl inc add inc (bad) cmp mov sbb fs pop fwait movsl mov shrl mov push mov jo pop iret in out lret cld sbb sub insl scas push test nop pop xlat pop xor pop and imul adc lea rorl mov xor aam (bad) mov fstps mov sbb sub inc fs sub dec and inc std pushf clc sub pop dec jae imul lock ss dec mov lock mov cmpsl push fs adc call ss jae or mov or mov sub in in ljmp push lcall mov cmpsb push cmp leave out pop scas pop dec in shl (bad) xchg jecxz daa push test cmp xchg dec rcrl loop push rcrl nop jl xchg xchg lock adc in inc push push jnp ficompl push jnp pusha leave xor pop pop cs nop scas dec cmp pusha hlt pop adc adc push imul rorb sub bound jle pop inc adc pop ja dec fstl push (bad) leave movsl pop dec mov jo mov lods pop nop das jns mov ret dec and push push jl fsubs bound mov dec xor jl hlt fcompp mov jnp test xor fistpl xchg jl in adc in cmp (bad) sub sti addr16 in xchg mov pushf loop inc loop inc cli sub jecxz adcl jle mov pop scas pop iret jo int jp adc mov mov lock ret out xor out sti xor ljmp adc or iret xchg out jb adc (bad) aad repnz dec pop in pop xor (bad) xchg pop jns sub or cmp sbb and xor mov les rcrb sub hlt mov stos cli dec and cld mov mov jo ret test (bad) xchg lock jns lds dec mov jmp fldt jp mov gs fcoml push xor cwtl dec cmpsb and sbb jp and pop outsb loop adc dec int3 test add rorb jo dec and ss movl les push mov cmp aaa cmp mov stos inc movsb xchg dec inc or cmpsb jmp jmp addl mov push arpl mov shl xlat mov icebp inc inc loope (bad) (bad) arpl mov jnp (bad) mov inc or mov dec adc mov enter repnz push cmpsb sti out pop dec repnz sahf sarb add ja jmp js (bad) std mov (bad) mul sub xchg mov mov nop (bad) jp (bad) sbb cmpsb xor imul out je (bad) and cmp or insb stos cmc push or (bad) hlt xchg test jmp sti lods movsl je cmc je lret mov imul ror pop insb cltd push sub lret pop mov arpl cmp (bad) call or (bad) or dec sbb sarl xchg int mov adcl push sbb cmp out test inc jl adc ret push and (bad) dec movsl (bad) in jae dec sbb nop pop adc aad lahf or mov sub and pop jae (bad) pop adc aad sub test cmpl pop cmp mov inc movsl jp hlt dec xchg out cmp test daa movsb pop outsb lea cld sar (bad) pop lods push les add stc lock rcll cld mov push (bad) popf mov lods into hlt sub mov mov and lods bound mov cmp jp gs ret push cmp jecxz or jne jo insl dec or cs inc nop mov sbb ss test sub cwtl pop jle push jno enter insl iret daa cmp sub or clc in pop int enter in mov enter in mov enter ret rcrl mov sub fisubrl nop sub punpckldq mov les dec xor cli test adc xorl mov xor xor pop data16 pop mov dec add in xchg (bad) sahf arpl mov mov cmp inc (bad) (bad) or punpckhbw xchg mov (bad) sub fstpt push fidivr cmc fsts aas push dec out cmpsb cmp insb pusha js popa mov imulb cli jecxz mov icebp mov xor (bad) test dec sbb and pop xor xor punpckhwd ret ss sarb fxch aas insb cmpl sub push iret pop insl fisttpll into or mov dec mov fldenv xor xor mov pop push repz jb pop xor pop fs cmp adc enter outsb das imul adc daa cmp bound insb call mov xchg xchg mov cmp mov jge repz dec jno jl jns dec pop mov das js imul add or mov lea inc pop sar outsl (bad) mov js popf sub mov mov mov out fwait ret sub lret fnstsw dec nop pop incb test in inc movb mov sbb lods mov xchg movsb jmp int3 inc fldenv dec mov xchg lods add aam roll cmp (bad) mov mov addr16 jo jne jmp popa into xchg mov notl out mov sbb or sahf mov pop cmpsb cmp push jns jmp iret push push fsub push xchg and fadds daa sahf sub adc jp roll xchg ds xchg xchg add arpl pop fsubrs cmpsl fcompl push push gs cmp adc movsb js mov loope daa xor cmp adc mov xchg mov push xor dec test xchg pusha push insl pusha push mov leave jnp ret fwait imul test jbe ljmp sbb xchg mov inc mov push xchg cmpl xor outsb nop leave xlat mov mov sbb mov bound in cltd (bad) xor pop dec dec ret jmp jbe fnstenv xlat sbb gs push mov inc pushf ja imulb sbb push dec cmpsb and neg mov mov test jnp add out aas mov cmpsb mov jb pop jbe mov mov neg or loopne sahf pop and mov add mov lds in sti push in push int or mov and inc stc (bad) xor fsubrl xor and xor repz sub fdivs stos jno xchg xchg xchg popf pop mov popf jge push ja lea push cmpsb or and movsl in sbb cmp les hlt daa mov (bad) jmp fucomi or and icebp (bad) popf xchg sub mov mov cmpsb addb mov (bad) pop fimull ds push mov cmpl sbb sbb pop mov aam adc mov mov clc pop sub pop push iret stos es lock test hlt push xchg test adc mov xor xchg aas imul xchg xchg dec dec dec rcr fmull pop dec pop jns and mov push sbb xchg in mov dec ja and jnp push test mov inc mov popa xchg dec loopne lahf call and inc lock ss adc fwait cmp cmp xchg mov in or jbe adc data16 adcl stos test sub (bad) xor jbe (bad) call insl jg jb and cltd mov lcall int3 jl adc sbb xchg sbb push sub xor jno mov mov fs fnstcw xor int mov hlt clc xor bound (bad) daa jle inc pop push ret mov mov fistp fdivs add mov pop adc mov ret cmp das push outsl cmpl add mov adc sbbl cmpsb mov dec sub add add xor arpl enter ja xor out and test (bad) jbe mov lahf sub jg sbb aam call notb pop and orps mov mov push and (bad) and and movsb pop cmp stos sahf sbb push ficoml pop mov xchg lret pop mov cli inc call mov xlat xor and push sub mov and aaa fisubr das xor adc inc cmp loope mov mov jne das sbb cmpsb bound shr adc inc adc lea pusha pop int fstpt mov ds cmp sbb out sub icebp aas sub cmpsb xchg xor mov test (bad) mov imul (bad) xor arpl ret add add (bad) push cmpsb add popa push sub lds sub andl sbb mov out sbb sti jo loope (bad) icebp cmc arpl insb xorl pop jae sub xchg das xchg mov sahf pushl push inc xchg dec mov insl push into fsub mov fs dec and push ret lods xchg std mov inc dec cmp sbb and into ljmp xor int3 fstl (bad) mov mov inc jp shrb jp popa popa lock mov push int and add xchg notb inc push stc pop xchg sub xor lods aas repz test pop lods jle lods pop adc (bad) mov add sub mov fs mov xchg mov iret (bad) dec adc movsl popa xchg fsubrs insl cmp add mov push sub jle cmpb or jne xchg add cmpsb mov (bad) jp inc cmp dec ss loopne loope pop or sub cs sbb stc sbb pop xchg sub mov into arpl or pop mov arpl xor and cmp cmp mov sbb leave cmp lret rcl push mov sub jecxz adc andl les or sbb popl xchg scas dec popa pusha call inc jp out rol pop ret test cltd inc sbb int3 or dec fmulp int3 insl int adc cltd pop enter jecxz popa test mov pop and ficoml lcall push and mov and fwait or dec lea pop and pop inc pop adc cli adc mov dec loope into test int clc int3 cld rorb mov pop (bad) test push add int into and jnp lods repz fcmovb mov dec mov test dec int3 sbb enter (bad) sti (bad) rorl out sbb ret enter jbe xchg cmp iret inc (bad) pop rol iret sbb mov icebp movsw mov int3 inc lock inc insb and push sub out rcrb fmull les inc int3 inc sbb int enter mov lds mov les dec lret (bad) scas popa addl push scas ss int repz call xchg pop jno add imulb cmp jns icebp xchg sbb inc out ret fldcw (bad) jg pop in into mov out js imul ljmp leave cmp sbb pop inc pusha mov jmp or popa push loopne jl in mov out dec movsl aaa or fist mov lret enter xchg leave mov push call inc fisubl jp mov data16 xchg fnop (bad) pushf jno sub dec sub xchg jl or push lock fs inc cmpsb push nop inc aad arpl dec push negb pop stc cmpsb aaa outsb adc insb dec (bad) mov sbb sub adc mov push push mov fiaddl shrl scas das cmp stc fwait (bad) in cmpsl mov ds adc xchg mov mov clc push arpl cmp jae xor pop (bad) push negl sbb scas sbb addr16 lock scas sbb mov divl iret pop popf add jb aas or jbe sbb jns mov int movsl cmp in jle daa insl push sub les inc xchg inc push xchg clc js loopne stc out icebp cli loop sbb xor clc jp (bad) jge adc cld addr16 or std inc repnz loopne jo and mov xchg popf pop mull sbb divb cmpsb (bad) mov into mov fdivrs je cmpsb scas mov inc icebp xchg lock cmc jecxz dec in fwait insl or xchg loopne aad jmp xchg cmp lds add mov cmpsb push aad jnp (bad) out add mov icebp fstpt int (bad) xor inc es incb out cmp ret push movsl add sti fdivs fadds mov jo and push xchg sahf jl lods jns and inc mov xchg dec stos (bad) out mov inc out (bad) lcall or inc pop enter pushf inc lods in inc cmpsb gs cmc push xchg pop sahf sti dec adc (bad) mov add orb mov pop jmp stos out stos lret cmpsb push icebp add popa pop insl pop cmp (bad) loope loope sbb or iret xchg jp adc pop stc data16 lret jne gs mov in xchg (bad) xchg add pushf sahf push mov adc push mov push scas push orps push loopne test jp movsb mov mov mov add gs inc dec jne (bad) fldcw loope dec mov inc nop push mov lds mov loope les in (bad) sub lahf stos lcall movsb lock outsb repnz sub inc mov pop pop inc (bad) lret lcall out lret mov jo inc (bad) (bad) fcoms in pushf out mov (bad) out mov inc pushf xor xchg adc cld mov movsb icebp or sahf leave or add xchg push dec imul movsl cmpsb movsl movsb jle add add xchg test pop loope arpl xchg xor ret sub sbb test sbbl rorb add dec nop push sbbb push jl roll dec nop inc nop int fnstenv fbstp cwtl (bad) xor lods sahf or dec inc fsts scas ds lea add mov xchg fbld mov movsl lahf scas or mov ret adc imul out stos push add adc jbe xchg (bad) js jl lods jecxz mov lcall pushf outsl je je jo lock cli aad adc out xchg xchg minps int inc mov inc stos dec mov rcrl jl lods add inc pop dec pop into or les in out jmp push rolb push sbb mov mov dec in out aas aad lea sbbl sub das ficoml dec cs mov jo jne push pop orb es push pop pop sti iret add push repz mov pop pushl pop loopne ret push sar lods mov pop lcall rcrb mov xchg icebp test sub icebp add push icebp or mov clc insl lds loope xchg pop cmpsb (bad) insl add test mov dec pop or jmp enter out or pop or in scas fsub mov mov adc lds out fnstenv fs in mov sub or mov mov dec add sub or dec add inc cli (bad) aaa enter dec cld pop lods lds dec pop outsb dec push xchg sbb sbb test pop dec testb and fldln2 fld mulb mov andb xor pop (bad) and pop dec out pop call push clc movsb cmp jne dec aam in dec je mov cmpsb push dec in inc test adc mov gs lds push fisttpll pushf leave dec adc fbstp xchg add loope pop mov (bad) xchg xchg loope pop or cmpsb fyl2xp1 aaa pop xchg xlat inc out fwait sub push pop mov sbb out pushf sub sahf aad or cli pop hlt mov mov adc dec pusha mov xlat aas mov xlat mov push gs lcall and test ds in aad adc dec fildll push mov mov pushf jg xor mov xlat (bad) repz jecxz jne pop lods lds out inc add mov (bad) dec dec dec cmpsl (bad) xchg dec jns jns or push test subb fldt inc sub (bad) adc inc test sbb in decl xor xchg or dec xor sbb inc cmpsb movsb (bad) sbb outsl mov icebp or imul pusha xor loopne test pop outsb (bad) xor pslld inc mov dec mov out frstpm(287 fucomi fucomi fisttpl out mov push mov je int outsl insb pop (bad) loopne inc xor xchg insl repz fistp bsf mov pop dec hlt or and pop (bad) daa pop fmull in lods pop jl push xchg mov lds mov setb (bad) mov lock xchg or pop fisub adc push xchg hlt mov (bad) ret aas dec xchg xchg out push push cmc or pop scas pop mov xchg mov pop dec cmc leave mov in sub dec cmc call sbb scas (bad) cmp data16 ret inc shrb cmc pop mov fcoml call cmp mov in scas push dec in call mov mov jmp aam fbstp fwait add inc divl mov push stos or sub or dec push dec rorb fcmovne repnz mov mov movsl xlat or adcl fild fist dec adc fistpll or mov push ljmp fbstp lea (bad) pop lahf and mov insb (bad) and fistp iret movsb add (bad) mov shl cwtl push js je lods movsb push xchg std ljmp cmp (bad) mov add pop out int3 lret xchg sbb cmp push jmp jne in gs push pop pop (bad) pop js dec jmp (bad) (bad) or adcl adcb or aad jb adc xlat dec rcr dec rorb add hlt fucomip mov je cmp lcall sahf into lock lock stos lods leave dec lds cwtl sub jg add dec fdivp adc mov jno cmp std xchg test xchg pop add sub add addl sub test xchg test loopne pushf add pop fcompl in loopne test add mov lahf dec mov lock xchg fisttpl shrl dec add stos sbb dec or inc rorb and test adc lds js popa mov adc push stos cli dec lcall sub incl ret xor xchg aam clc iret cld mov pop jl push or movsl adc stos call or dec negl add pop add push dec lods mov into adc iret cld test sbb popl test xsha1 cmpsb lret gs test xor lret or jne push cltd sub fidivr test fdivr add inc cmpsl and js mov or cmpb mov jle (bad) insb mov xor sahf pop xchg adc fs add xor add fild mov dec imul mov pop fdivs sar and adc pop das cli inc mov xchg jb clc enter in outsb mov je je add mov pop test or or cmp add shlb xor in xchg arpl mov xchg lods push lds leave mov imul in pushf inc lods int3 xlat shr xor sub lahf roll inc add mov xchg xchg mov inc mov sub jg and (bad) int3 sti sub aad mov mov inc add fbstp xor lahf mov sub mov loop pushf call stos pop (bad) stc call movsl (bad) repz (bad) hlt xchg or inc add jne out jb (bad) fcomip ret push xor jne outsb sbb icebp inc pop sti mov test push cmc cmpsb push test mov test pop or pushl loope stc jno mov or cmpsb (bad) mov inc in add xlat ds pop mov or jbe movsl popf test sbbl jl xor mov pusha add bnd repz pop iret jmp stos inc adc (bad) out pop cmpsb pop dec icebp rcrb cmc cmp push arpl loope imul sbb fist mov xchg pop (bad) xor inc mov stos call inc xor mulb loope in or xchg dec testl xor scas cmc pop ret jne fwait std fs ret iret pop cwtl xor imul push mov push push imulb mov jae or xchg xor lods mov (bad) in repz cmp xor sbb aaa rcl sbb ljmp add xor shlb mov xchg cmp jmp mov pushf sbb ret stc mov inc jmp fldl pop mov ja ret adc aaa icebp mov pop roll or pop inc lock aam mov mov and imul ljmp jae add sbb lret mov call mov mov adc jge lret push pushf (bad) lret (bad) in pushf cld insb lods lea dec leave iret (bad) lret (bad) in pushf cld insb lods lea dec leave iret (bad) lret (bad) in les in dec mov pop xor les dec arpl test sahf jle lods cmp das outsb xchg int3 (bad) add loope push dec icebp cwtl or adc inc arpl add xchg sub inc xchg call mov test jnp jb sti test xor xchg or (bad) sti ret jp rcr and inc imul in xchg hlt adc fstps mov aad repnz movsb loop add push pop add decl add std test xor jmp or mov pop sti xor fs leave (bad) mov xor xchg mov (bad) int mov dec xor mov lret aad lcall int3 test iret mov mov and and (bad) jl popa jle mov pop sarl mov mov inc and mov outsl insl lods xchg push push push jnp jmp push adc les jp cmp cmp and imul push jg inc (bad) push jmp add cld insb lods fsubrl nopl pop shll mov pop and jmp inc insb ficompl or out or int add dec repnz fcmovne pop jo in add inc pop jae xor xlat cs clc and xlat (bad) mov fdivl rcrb lods cmp inc outsl fwait lret push jecxz fist adc divb adc add cvttps2pi xchg es mov jb add sub sub sub jg pusha dec aaa and mov int mov std aas lret aas or cmpsl mov popa movsb add jb sti jbe jb or mov sbb lahf pop cmp or bound in test xor and clc sub mov sbb push xchg xor test add cmp xchg scas jae adc and cmc jge push push (bad) aaa arpl js scas inc jl lret int repz loopne lock dec adc or test fs (bad) in cld inc aam push sub mov addr16 add sub or adc addl pop jne xchg jp repnz std push in and stos pop test gs movb (bad) syscall nop jnp or cmp sub dec mov dec inc incl hlt int3 inc cld in push dec nop jno and jnp fs roll pop add pop jbe push rcrl push dec ds push loop daa sahf push aam push icebp cmp cmp or add sbb jp outsb aam das pop pop or cmc and dec fdivs mov jo xchg xor cmp notl add aad arpl cmovle xchg and sahf add ds xchg lret aad dec in xchg fmuls test cmpsb icebp jo nop sub adc (bad) aaa pop mov mov test insl mov aam and pop sbb cwtl add rcr in pop mov xor mov aam jb cli lds or xor jbe fwait out sub cwtl or adc jne cmp out mov jb enter enter mov (bad) das mov ret lret enter inc mov cltd cmp fldl mov cltd add mov adc inc pushf (bad) dec daa das inc pop xchg sub into fwait mov cmp and insl xchg test jbe jle push and (bad) jbe jnp pop mov mov pushaw jge das inc sub fstps add pusha jbe rorb stos xor sub pop mov and test pop shr xchg cmpb loop and push mov jno jbe into aaa aam inc (bad) rclb pop loope pop fsubr hlt inc xor stc je mov cmpsl stc insl xchg dec lods mov ljmp dec pop mov lods xchg or xor mov mov sub xchg call push out pop cmp (bad) and movsb bnd stos outsl imul inc lea mov sub sbb stc sbb inc test inc push sub xchg adc stc cmp insb scas mov sub or xchg sub fadds sbb xchg cmpsl mov jb int push enter ss fcoml addb cmpsl arpl push data16 fcomps cmp push pop dec pop and sti cmp cld clc jb add or fs sti bound test mov sub dec (bad) flds sub xchg mov cmpsl popa loope ss inc cmc and mov push xchg and pop lock je repz lret lea jge rclb sar push in pop add int3 inc push lods xchg cmp repz pop push mov add in stos ss movsl add xchg ror sbb (bad) notb add cmc imul or test sqrtps mov ficom push enter imul nop xchg sub xor xchg mov and aas (bad) inc and pop pop sbb adc scas popa shll sbb movsl adc fs jns imul faddl cmpl fwait insl stos xor pop and sub add popa test mov jns sbb insl (bad) and cmc out stc into or and (bad) lock ret int3 cmpsl push add mov mov mov leave push lods mov jae inc dec outsb es sbb mov jnp mov dec jge inc mov seto and add and jge sub push pop punpckldq rcl paddsb stos sbb ret inc or jbe sub test addl punpckhbw xchg sbb dec dec into cmp xchg imul push sarb and call aaa (bad) dec cmp mov iret aaa jp adc jl ja inc xor push or mov mov fxch inc in xchg gs rcll loop dec jle into cltd push lock xor icebp andb pop addr16 ficoml jb ret sahf and scas mov data16 mov pop pusha push push or dec push jle and mov mov subl je les xchg xor lods inc out shlb ds int daa scas outsb mov lcall jnp xchg xor lods and cmp mov or sbb inc into jno push push lods popa adc jb into pop bound xchg and fildll icebp into sub mov imul lahf lret inc mov or and fwait jb adc cmp je es adc xchg jne (bad) fs lock adc jecxz mov inc sub cwtl push pop jae pop inc dec push push mov push sbb loopne sbb cld cmp out push (bad) xchg aaa xchg movsb sbb push in leave add adc das mov mov lods es jmp fwait and xor loopne xchg jl out pop outsb out les out push mov mov xchg pop sbb pop xchg mov dec data16 push (bad) or lds call jb push mov and xor jle fwait pop lcall (bad) ss test lret fs cmp sbb ds daa lea sub jecxz clc fildl data16 and mov cmpsb in push in test inc cmpsl push aaa call (bad) xor mov sbb sub fmuls rclb mov inc outsl jmp out clc pop push movsl mov xchg mov mov mov jo data16 cmp stos cmp rolb sbb movsl jae fsub leave pop fistl lcall lahf aam inc xchg ljmp aaa sbb clc inc mov negb pusha mov ss and mov aaa cld sbb fcomps adc jae adc mov add out jno leave mov pop aaa jl popf or jp arpl add cs imul xchg jge popf ja js jo fcoms arpl daa (bad) xchg jg xor add (bad) mov or mov (bad) cmp popf push inc inc cmp dec jmp cmp adc aad sub mov std jg call xor cmpsl (bad) ss cld call jle (bad) neg sbb sbb rep xchg hlt call mov orl ret sub push (bad) aas mov lret xor inc adc fisub sbb test (bad) pop je and xor imul lahf mov push (bad) lods pop pop mov cs mov sub push cmpsl add je cmp jae and sub mov scas mov push jb or dec jnp ljmp insb xchg std jmp sub and insb xor notl add xor imul pop jl cltd adc lret cld adc push scas pop adc (bad) ja ret pcmpeqd cmp mov jb add (bad) or lret push lods add xchg aad popa fxch mov cs pop mov push mov mov repz imul pop pop das repz mov adc push rcrb test and call sbb fwait mov or repz pop rcl dec xchg dec (bad) push mov add stos dec lods clc xchg cli mov xor out and ret add or inc dec test adc mov (bad) cwtl sub addr16 clc inc addb fsts mov dec int sub nop cld decl in push pop pop (bad) leave sbb push jecxz sbb leave faddl inc adc out lea pop xor and mov inc aad push pop inc inc cmc lcall repnz jne pop and leavew je mov jnp xchg test xchg xchg sub ljmp sub arpl mov inc mov or mov (bad) aas dec dec daa pushf mov insl fdivrl push adc jmp push movsl ja,pt mov and add fwait stos test ja xor mov push sbb sub imul cmp and mov (bad) shll les rclb cmp pop (bad) xor and mov mov mov push and xor icebp adc repz dec gs jae loope xchg mov cli sub ljmp cmp (bad) popa cmp adc mov inc cmpsb adc sbb aam xor jae mov mov inc push mov mov add fldcw cmp adc pop cmp cmp sub int cmp and pop scas aas (bad) jno cmp clc xor inc xor and pop sub cmp cmp repz shll dec lahf cmp adc adc xor jae loope in xor cmp andl mov cmp xchg popa cmp adc pop sub cmp and mov xchg mov mov mov and dec lahf aaa cltd jae scas aaa shlb mov push cmp adc sbb add cmp pop xchg aas shll mov xchg add mov movsl mov xorb jae sub mov and cmp scas adc xor repz aas adc jne in jb adc cmp jae jno inc popa cmp cmp adc jae roll roll cmp xor jae mov xor fwait repz push mov xchg jno mov cmp push mov movsl mov or xor adc pop sub adc cmpsb push fsubl bound push push adc push and adc jne shll adc (bad) mov movsl adc out fnstcw mov dec jae scas aaa dec cmpsl stos lods gs add cmpsl aas push mov jne pop mov push lds and mov adc push jno xchg mov dec and mov xor xor adc aaa cli jae or or jb addl sub popa cmp push popf popa cmp adc or dec jno out mov adc std jp mov cmp (bad) dec cmp gs add mov jno jp sub cmp xor sub xlat mov (bad) aaa or pop sub ss pop xchg aas call jbe aaa mov ficompl sub mov mov mov cmp and cmp and loope scas jae outsl in (bad) cmc enter inc mov out mov ds push roll xor stc repz dec cmp mov jne mov and jno dec sub sbb cmp cmp gs aaa sbb sub mov mov cmp repz mov cmp jae stos popa and adc jbe push mov cwtl repz shll test cmp jae mov cmp push mov popa cmp adc pop and clc roll xchg or mulb inc jne daa adc (bad) aas imul mov (bad) xchg aaa ret sbb and push mov gs add xor push adc xor repz aas add xor jae icebp add mov jae insb inc lret movsb enter sub push cmp imul mov imul popf xchg fistl jno aad stos jmp mov mov sub divb xchg mov sahf outsl dec mov inc imul mov (bad) jg push lret or lret lahf in push (bad) mov sub test dec push hlt (bad) push mov xchg dec add outsl lret jns (bad) jp xchg mov lahf cmp fbstp jno inc out dec dec cwtl xchg cld insb lds shrb fucomi int fs add xchg cmpsl sbb in sbb divb imul cld inc and xchg add fdivl pop cmp inc push mov jmp xor cmc adc loopne (bad) cmp xor jno int3 push iret inc movsb pop inc xor sti sahf iret int jl cmp in and enter mov inc mov pop int dec mov adc and push lret xchg inc mov pop loope decb mov push dec lret lds mov push push in ds lock inc jnp scas pop in or fucomp iret scas add mov xor rcll test into cwtl (bad) cmc or sub insb mov (bad) bound dec dec mov cmp popa inc and fdivs sub outsb adc loopne xchg decl repnz in idivl push lds icebp xchg xchg xchg call cmc xchg fcmovu mov mov in or fs daa aad add lret icebp shlb loope fs ss enter addr16 push mov shlb dec int3 mov out cld pop sarl enter xchg mov das pop pop sbb scas lret rcl nop (bad) mov (bad) xor and dec mov test fimull xchg arpl call sub jnp gs ret push pop dec cltd add jmp mov pop and jns mov pop jle sbb mov push movsb xor mov mov add test mov sub cmp lret jne call xor or cmp daa jmp dec dec lcall ret sub shll pop test sbb adc lahf xchg addr16 ror leave mov movsb (bad) cli shrb jno insb lods and xchg pop mov loope cmpl pop lods cmpsl leave clc insl addl clc mov push mov bswap xchg lret sbb sbb mov and push gs xlat adc jae cwtl or jge lahf int cmp mov xchg mov mov daa (bad) dec inc cld dec in or dec daa scas mov in sub mov mov mov je test int3 cmp dec jnp ret jl cmpsb dec aad in push mov (bad) cld push or fsub mov push jg jg add adc stc mov mov push loopne jns js cmp scas jae pop in pop mov lea aaa and jmp stos fisubr ffree pop xchg leave pop jecxz push mov or xchg pop xchg sub insb movsl xor jl fadds mov (bad) data16 scas insl (bad) or les mov idivb xchg mov lds in inc andl xor ds mov es dec and out mov sbb lret pusha ficompl arpl mov sti bound stos int stos inc xchg mov scas or ret push lea lahf lds inc pop repz push mov clc shrl in fs cwtl ret push xchg xchg mov jne mov ret (bad) mov aam mov fstp scas iret add pop cltd cld cltd and sub je inc mov (bad) dec test inc rcrl hlt jno xor fwait lcall loop mov fdivrp sub cwtl cmc (bad) xor out dec add notb cs leave loopne xchg mov cmpsl popf (bad) and mov push (bad) imul jbe add roll lock repz lret cmp push movl pop jp add outsb xor outsb jmp std aam xchg stos add dec das out cmp xchg cmp pop dec movsl lds add lahf repnz xor ret das inc pop mov sub jle sbb jns push cmp cld lds add cltd ret xchg lock xor repnz dec mov inc std push or sub out xor cmp (bad) jl add or pop insl aaa imulb jns xchg sub dec ret xor pop das jle adc popf ljmp xor (bad) push mov dec mov (bad) es and test xchg cmpsb or add in addr16 sub sub arpl mov mov sub adc jmp adc rcll mov sub cmpsb out pop inc add fwait mov jl hlt pop dec (bad) jno bound fnop std aam lea push pop ret or imul push xlat arpl adc mov pop push mov push scas xchg sbb rcr jecxz dec lds push mov adc jae ret mov pop stc lret sbbl ret push inc icebp cwtl pop mov sti ss lret ret cmp ret (bad) daa sbb (bad) adc sub sub xor repnz xor mov hlt mov popf mov sub (bad) mov xchg mov cmpsb popf dec enter lsl pop sub pushf xchg nop jge adc sub std addr16 mov mov insb sub mov xlat adc jnp inc adc jg pop adc dec pushf pop addr16 xor hlt loope aam fwait sti std jnp int xlat or aaa pop rorb loopne mov (bad) push sbb mov rcl mov mov call cmpxchg inc sub daa xchg imull and movsb rcrl sbb mov xor cmpsl outsl inc push jns ss (bad) jns lcall xchg lcall adc mov and dec dec stc loop jp sahf movsb out (bad) push mov mov je movsb test jns sbb adc out mov or mov jae mov ret ja mov ret pop int3 fmuls cmpsb cmp cs dec (bad) and in and jo pop dec xchg shll sbb jg adc mov push dec dec xchg es mov xchg pop dec inc inc pop out dec js dec pop cltd test mov movsb fs repnz adc cmc inc rcrb lcall mov jne and adc mov lods xchg cmp cmp test popa lock pop mov mov aas mov dec and scas xor jg push pop nop adc in push aaa dec mov cwtl outsl inc or movsb mov add xchg mov arpl cmp (bad) mov xor sarb sarb inc pop mov scas (bad) les nop mov jne dec jbe xor dec icebp jge lcall xor inc pop pop dec push hlt scas jmp loopne jecxz and repz scas test pop xor mov jg popa cmp in mov xor jnp ljmp psubsb inc mov in (bad) lock pop push cmp (bad) loopne push data16 test loope lcall fldcw cld fldcw js,pt cmp outsb jmp xchg sub cmp (bad) aam sbb cltd (bad) in mov sbb out (bad) lret (bad) mov aad xchg mov xchg stos pushf cs cmpsb cmp push sarb xor scas in xchg pop cmp xor mov loop or and stc add dec test ljmp mov andb lret sub push dec or adc ljmp iret fs fild pop aad push sbb in sbb rol add inc add cmp shrl xor inc addr16 test not inc scas sarl fdivrl mov dec cmpsb shlb in adc sub jp loope into mov (bad) or sbb push iret rol sahf arpl jne pop inc pushf out xchg scas mov in lods ja shlb cltd stos push pusha add pop sbb push mov popa inc cmp leave jnp hlt jae jg scas rolb nop mov sbb mov mov dec adc sbb test and push in outsb jo shrb sbb jbe pop lock cld xchg fcomip push (bad) lods cmp ffree cmpps popa aam jge cmp mov in aam jbe dec sahf test rol addr16 sbb mov lods outsl insl pop mov mov rorb and xor dec adc dec add outsb out xchg test lods stos mov addr16 mov fwait lahf mov sbb call sbb fimull orl sub or mov stos push lret inc or push xchg dec lret and lea std lcall add mov jbe pop fwait push daa mov jg or xchg lock das lret fdivrs sub frstor cwtl fwait dec xor jae or sbb lods jbe mov data16 and imul sbb loop leave sbb cmp mov call dec mov push pop mov xlat out mov pop (bad) das adc or adc pop adc popf push in dec dec mov xchg xor pop xor pop cmc cmp in nop cmp mov int sbb scas add orb inc test popl clc adc mov (bad) in in xchg or sarb mov enter nop pop lret ret lods push jns dec (bad) in xchg ljmp pusha dec pushf pop ret mov adc dec push fidivl cmp adc lret xchg outsl push mov (bad) je sub gs jecxz sub jnp mov xor lock fisubl xor in rcrb sahf outsl xchg push xor xor inc mov xchg xor xor inc dec fisttp push push jo add lods repz cmp insl jmp in adc movsb xor or adc adc (bad) mov aam xlat jnp movsl add popa lock stos fistpl mov arpl imul rcrl pop enter jecxz out stos decl popf (bad) xor push fisubrl (bad) lahf in dec (bad) sbb jp mov daa aam jmp cmpsb or in jecxz xchg jecxz add sarb je nop sbb test ljmp pop out adc pop lods imul jo and fildl jb ljmp jmp cmp rcll mov inc (bad) int jl mov hlt mov imull dec mov pop stc call les cmpsl add pop aam xor cmp std and inc movsb fcomip mov mov mov cmpsb jb pop pop lret mov rorl jecxz dec das scas mov mov test xchg sub imul js inc mov test inc add dec or out cmp insb adc (bad) mov mov dec sub insb lock xor sti inc testl adc cwtl inc scas loopne xlat ret unpcklps xchg cmc adc inc jg popa shlb je into mov stc negb add sti bound in into pop imul fdivs roll cmp ret ljmp sbb ror sahf scas aaa test cmp mov insb push fiaddl repz or out mov xor ja inc add fcmove dec test and lret ret inc ror lret bound in bnd in cs outsl inc add into clc repz (bad) jns mov add bswap dec xchg idivb (bad) jae faddl popa fdivr shr ja js adc (bad) add or add loope stos mov and fildll mov xchg stc ljmp in sub rcl lods (bad) jns popa mov aas add roll js xchg xor and jge test and mov negb push mov hlt and mov dec xchg clc sub sub sbb repnz or mov popf pusha bsr je lea dec out lea in xlat xor add xchg stc xchg pop or push adc mov xchg fnsetpm(287 xchg movsl enter cli call cmc imul pop cmpb and xchg jmp insl leave bound mov popa pop fldcw fdiv jae and lds inc or popf loopne dec ds mov punpcklwd adc daa xchg (bad) inc lret adc cmc or leave jb lret push xchg mov sahf xchg je rcr out dec jge loope dec (bad) fdiv lods add inc jl popf cmp mov sbb mov jecxz insb or xchg pushf push jae iret cltd lock aam jnp mov xchg cmpl jno in sub push sbb sbbb iret cmpl jl pop mov add mov jg sub outsl push push ret pop sub aas (bad) adc dec fwait inc cmp pop and mov psubsb aam mov dec aam jb (bad) cmc out pusha rolb cltd xchg sbb mov dec leave les dec inc mov and dec sbb cmp push dec jecxz adc or mov ficom stos pop add int inc cld pop xchg xor lock fadds push fwait and loope addr16 aad inc je ficoml out dec scas push lock inc mov iret mov xchg aas in dec fs pop pop mov (bad) (bad) dec and nop int3 push mov cld mov push sub aam xor pop adc fstl movsb and mov push adc xchg outsl pop movsb xchg sbb lret xchg shlb int inc (bad) fildl push not js inc inc xchg test xchg mov adc xor xchg pop dec add or mov pop xchg xchg jbe inc push mov loope adc xchg icebp scas fild and mov jle jne jp or pusha xor (bad) jo push mov ficompl lret test cmp pop shrb loop mov and cltd adc mov jecxz adc sub xchg sub out movsl push (bad) dec xchg dec fnop sbb clc sub xchg add inc addr16 es (bad) stc lock and add adc xor push fimull addr16 std insl or andl mov in popa loop in mov dec pop mov push jmp insb sub jb adc jl pop inc insl sbb mov rcrl pop out jmp (bad) hlt sbb pop aam movsb addr16 add cld push stc lret push adc and inc pop dec test mov jg leave out aam xor xchg fs mov outsb fcoml cmp jbe pusha and add loopne jns push out pushf xchg (bad) lock rcrb mov jo jle xchg xchg xor arpl lea popa js xchg hlt jo jno xchg jle stc mov test add loopne sub andb je (bad) out jp xor jge add gs and jge aad adc mov gs sarb rcr jg and inc jecxz mov data16 dec push jp out xchg xchg add and jae les push in arpl push sbb shlb pop sbb ja mov push mov scas sub or pop std mov push sbb push jne sbb mov imul (bad) inc mov add out add lahf std push pop push (bad) (bad) (bad) sti jb adc test les repz jp mov push test mov test jecxz mov sub loopne pop jle arpl shll or leave jl fldenv push sti xor sub jmp fisttp lods imul addl es pop lock dec (bad) iret or (bad) mov lcall ss mov sub out fidivl jne xchg (bad) mov sbb daa (bad) mov cs inc test daa dec fisubrl loopne enter mov sbb xor sbb cmp fstpl mov repz dec mov sti movsl xchg jle and sbb aaa push popf ficom push inc push jo pop shlb jecxz jmp jno xlat jo daa incl push iret add (bad) stc loope (bad) mov bound sub divb sbb xchg pusha jb ret ja pop pop cmpb mov andb push add test mov add sub cmpsb cwtl loope adc mov mov add psubq add loopne jmp adc add lea iret and xor pop mov sub mov add lret out out push in int3 or int3 aaa and mov adc dec sub jae stos int3 clc (bad) or dec mov push inc cmp sub xor ss lahf and sub mov int3 jecxz mov pop push jge push lcall push sbb daa cli in jne jb ds inc add add rolb mov adc inc fwait les mov sbb lea test push cmp and clc pop (bad) xlat fidiv sub push sub sarl (bad) les mov (bad) sarl mov out mov sub fs mov mov mov or cli jns pop mov pop mov sub mov repnz or xor popa inc or pop sbbl jne cmc jne lcall ds mov and push dec sbb jle scas ljmp pop adc int std cmp ja cmp insl pusha push jge pusha jns (bad) test (bad) dec std pop pop mov into (bad) jo xchg in xchg mov enter imul rcrl jno mov outsb jg pop inc mov cmpsb cmpsl std jge jmp sbb call xchg je pop push xchg sub push dec pushf dec mov mov stos mov mov insb ljmp shlb gs jmp mov test ret cmpb shrb push mov imul and sbb cmp aad cmpsb jmp aam aas lret adc (bad) and push aad clc (bad) pop add js (bad) push lods pop jmp mov out cmp add mov lea pop cmc mov in add pop lds in mov cmp jecxz mov sub jne outsb add cmpsl xchg and mov dec push jnp add (bad) jmp ss cmpsb jmp sbb icebp into mov lods and inc sarl jmp fisttpll jl fsubrs sbb lock push lahf dec divb stc inc fwait pop inc int pop mov sbb ret ja jb in xchg (bad) test popf sbb mov inc pop pop jb cmp ret aaa pop repnz cltd cmpsb lods and mov jl mov or mov popa add push ds push and stos xor sti sbb and add adc pop movsl mov rclb sahf sbb mov xor addr16 ret pusha cmp or mov mov mov popf es or add mov loope cmpsl mov mov mov ficom lods icebp jns push cltd fs add dec insb or inc test xor or pop aam adc inc adc imul popl sarb mov pop pop xor adc cmp inc imul mov adc add sub cs sub cmc lock mov cmc (bad) lcall pop push pusha aad js je push pop lds sub cmp jnp ljmp pop inc push jmp and mov mov mov (bad) xor lret into stos jmp into or (bad) xor pusha mov add pop ret xor outsl loop dec ret lahf dec (bad) in cmpsb pop jbe in shrb pushf add lret xor fcoml mov jecxz xor adc rcll xor repz fldt ret ljmp std jle daa mov insl inc add xchg mov lret shrb and sbb fcmovnb or jnp outsb xchg adc jecxz or cltd lock push test loopne stos fsubrs add xchg pop std xchg hlt and sub push xchg or jl dec cld rcr cmp push sub pop pop stos pop ret push cs scas fnsave mov repnz push cwtl dec (bad) clc push jo and jnp jbe pop aad push cmp xor cli in sbb adc movsb xlat arpl je inc xchg pop imul xor pusha divl push pop adc mov dec fadds mov cmp lcall lcall lods xchg jb lea imul ja jnp mov sub mov and lahf jle dec mov lds jg xor fsubs jl push sahf mov mov mov out xor popf call in xchg lret cmpl sbb scas sbb jmp ror cmp outsb cmp clc pop add dec mov cmp (bad) js add push pop push sahf jno fsts mov iret xor sbb xor idiv cmp ja pusha sub jecxz pop insb hlt incb xchg divb xor jge ret xchg inc mov or in cwtl sub fcomip push push dec mov stos push inc and pop pusha es inc mov int3 test mov xor mov repz push inc push mov jae push imul add leave pop ss jmp lret cs mov or xor lods lret (bad) out insl pop pop cld push jb inc and cmc jno jbe ret mov addr16 add push push jns mov or (bad) (bad) std xor fadds xor pmulhw lods sbbl sub sub popf lods test aaa adc cmpsb aam jo js inc jp aad outsb dec mov mov scas repz adc inc jle sbb cs push push fdivl and mov sbb xchg inc movsb into subl mov sub rclb adc lds shll and inc outsb lcall stos sahf test xor jno jmp jbe sbb call enter cwtl clc jnp jnp and out ror dec pop mov push cmpl out add popa xchg dec fcomps sti inc or loop lods fcmovnb nop fdivs rclb hlt sub aaa inc js bound sub hlt outsb sbb jae push lods mov dec pcmpeqb outsb rcr call ret inc jge aaa cmp inc add add hlt call aam mov cs mov dec adc hlt (bad) jno enter jge lock rolb iret sbb rcrl (bad) mov movsb adc (bad) fcomi cmp into or pop mov test or xchg (bad) lock cmpl cld fdivrs pop sbb sbb mov jno scas and dec inc sahf rol enter inc stc push sti xchg outsb dec inc pop pop cmp xor idivl outsb out xchg (bad) lods push or jbe flds dec jne dec sbbl jmp cwtl fcmovnbe std dec pop in and inc dec pushf xchg lea jecxz loop xor adc call adc dec mov loop jae pop nop mov jns pusha xor cmpsl mov push rclb xor les cli inc dec jp,pt push jns dec mov mov inc out lock mov (bad) repz xchg xchg dec rsqrtps jl mull lods mov jecxz jno cmpsl dec inc mov cmpsl mov jle pusha lret dec lret xchg imul roll dec pop clc mov nop sahf js bound cmp cltd push pop pop (bad) pop leave xchg jecxz lds out cli jns sbb out rol sub adc int mov fs xchg adc push (bad) mov inc sub dec mov mov xchg pop pop adc inc stc arpl dec pop sahf inc pop hlt dec (bad) cmp push sbb sub pop hlt jmp jecxz mov pop out enter (bad) xchg loope daa mov dec mov xchg imul lcall out sahf ja dec dec lea inc pushw popf lahf jmp ficom xchg test mov add stos and insl dec arpl xlat outsb or jb sarl or (bad) cmp dec push daa pusha push lock ss arpl jecxz dec or push add test cwtl std fidiv dec sahf out mov mov dec cmpsl sbb popf cmpsl mov into shrl je push pop pop in fildll lock hlt sub out addr16 jle popfw aas adc and iret mov stos cmp in mov in push jle ror inc push or jae (bad) jne shrb and cmc pop or mov lret jnp adc dec cmp bound sbb mov repnz lret cmp call imul (bad) pop lds mov testb inc xor add jmp pop push adc fs jae aad repnz xor cmpsl not (bad) push push mov pop mov mov mov test out aad lock movsl xor rorl or ljmp mov (bad) movsb xor bswap inc pop mov jg jns enter fdivrl xor (bad) cld loop lock lock jb jo lds mov mov fs hlt xor scas inc mov pop inc sbb (bad) aaa adc pop push push xchg mov int3 bound jnp gs and aad aad jo sahf push adc mov mov jne adc imul daa mov lret imul mov decb ja outsl cmp pop mov push outsb addr16 ficom fs lock xchg ss adcl mov jb mov in jne xlat pop dec fdivrl xor lea test test cwtl imul cmp mov sbb movsb lret aas cmpsl jo add cltd test stc mov mov leave subl js movsb lahf jmp or out pushf xchg leave in sbb fidivrl ret movb ss xchg mov sbb xor das add jecxz jg push imul jle rclb leave jge adc shll jb jb xchg and cmp enter mov or sbb pop data16 insl lea (bad) aam cmp sbb dec xchg into add gs mov pusha adc mov cmp loopne neg inc inc add push fsts jae jp ds sbb loop pop sbb bsr xchg inc adc test add add or or rol xchg adc add loope add cmp inc jp mov sbb sbb ret (bad) int3 pop aaa outsb jg out ret mov fwait stc call cmpsl adcl dec xor push (bad) mov je inc sbb clc mov add fsubp xor ds pop repz outsl sub fstpl or fdivrp imul repnz mov xor push inc aad stos inc cmp push (bad) add or dec ret inc mov andl repnz xor and (bad) xor fs lods adc ja jge popa add popf cmpl test xor popa xchg jne sbb pop rcrb or jae cmp mov xlat push ja fs insl mov lret into xchg (bad) mov mov dec xlat xor das sub lcall fidivrl sub add add pop dec les dec stos adc jns (bad) repz pop push out pop push repnz inc inc push pop sbb stos jb cltd jge negl jns js sub scas addb sbb fmull inc inc sahf lret mov les loopne xor cld push iret dec mov int jbe hlt cltd or inc pusha popa jmp sahf lcall mov (bad) lahf mov push jg std inc jno andb repnz jnp mov clc pop loop add test out dec aas pop jno inc insl xchg lea test dec cmpsb xorl out xchg mov loopne cmp out mov andl pop imul (bad) sahf fnstcw pusha mov xor push cli xchg (bad) js lret stos or fcoms es xor jle xor stos out pusha call inc push mov (bad) sub xchg pusha fidivl jbe pop out pop mov mov int jecxz imul sub cli pushf aaa jb aam jp rol inc adc push mov rcrb movntps xchg and jg mov pushf add mov sub rolb out mov xchg mov mov inc and std cmpsb imul ja jbe std out mov or cmp dec pushf lahf dec push lock add test loop inc pushf mov (bad) clc adc in push sahf js js mov movsl fdivrl cmp cmpsb in mov inc outsl cmp push lea fnop js das push jne loopne lods sbb jno or push cmp in adc adc leave adc lods femms jmp and cld cmpsb (bad) mov mov (bad) xlat pop inc jnp jge lret cmp xchg xchg cmp js shl cmc jno ret jmp mov or cmp cmpsb push mov aaa sahf cmp or sbb inc mov adc sti stos in sub icebp mov jl xchg lret mov or mov and aas fs cmp push dec push mov inc mov fld or out cmp mov or out push xor pop mov cmp rcrb in xchg jae rclb (bad) fnstsw in fisttpl inc movsb pop (bad) (bad) or popa mov dec mov aam cmpsb or push int3 aas bound xchg inc and into dec dec cmp fisttp mov xor xchg push or bound mov xchg mov xchg add test ja cmp pop or mov nop jns xchg mov cmp dec xchg sbb dec into aam cmpl mov sub dec cmp add ss mov dec or jle xchg (bad) or ror jle sbb (bad) outsb pop ljmp pop (bad) out push xor cwtl (bad) cli push mov sub loope sbb sub repnz ror xchg fxch inc xchg lds cmp sub mov andb cmp imul pop mov inc sub ret inc (bad) outsb pushl in xchg fisttpll push nop cmp cmc outsb mov rcrb sahf add inc fdivl push gs mov loop pop add (bad) insb jl sbb mov or mov cs out jg das fwait ds push scas push aam mov mov push sbb jnp test jle sub add (bad) pop cmp (bad) add jecxz mov dec cmp pushf xor inc mov repnz (bad) sub sub cmp cmpsw dec cs shrl (bad) mov in push pusha xchg inc push sahf push pusha dec sahf fwait addb imul dec lret mov sbb lcall jbe clc aam aad mov lds or (bad) jae lock push in popa mov (bad) push mov imul add sub or aaa stc ret pusha nop pop iret lds in ret (bad) jb lahf imul mov xchg or call test in outsl in push sti js mov dec sub dec cmp sub mov cmpsb jmp mov mov lods jnp mov loopne stc arpl imul sbb pusha mov mov push int3 push mov sub es add pop lds call lahf cwtl lahf jno and mov fstps inc xchg scas jnp loope les cmp stc mov cmpb scas negl lret popa (bad) mov dec rclb adc push mov data16 or push pop cli sbb fdivl test xchg inc xchg pop and outsl add mov push jg jae sub sub icebp inc popa inc inc pop or mov sub push and popf inc dec roll pop clc (bad) rcr int inc pop mov scas dec and dec jb sbb into inc andb jae into xchg mov xor popf ds test push dec in repz scas inc inc sub sub jecxz scas lahf movsl or (bad) iret movsb lret pop pop (bad) add xor mov or (bad) mov add jge sub ljmp inc mov mov pop sbb push cmpsl adc xor inc sbb stos sbb fcoms int3 add cmp xchg mov lods inc rcrl pop add jnp in and sbb adc ljmp cmpb adc popa mov fidivrl mov push lds in and mov outsl dec in jecxz mov nop pushf dec icebp movsb (bad) sbb imul push adc push stos xor fwait test ljmp (bad) xor add mov pop jo popa pop fadds aaa rcr push cmp cld sarb jecxz xchg int inc loope (bad) enter rcrl adc xlat and in mov mov jg insl pop add mov movsl jmp icebp add pop xchg arpl mov mov outsl ja divl xchg ror leave or repz sub fsubs mov (bad) mov push mov loopne stc ret xchg sti jle imul sub xchg fiadd lahf mov (bad) je repz xchg loop dec pop imul out (bad) out jbe,pn sahf fsubrs xor fnstenv daa imul sub hlt gs jg aaa sarb jne sbb mov sbb mov mov dec lcall xchg out push loopne sahf enter xchg sub aad fisubr inc fmuls scas orl pusha cmp and adc je (bad) std popl inc or (bad) (bad) bt clc (bad) loope in cli out stc into and popf xor fsubr arpl ja (bad) mov subl aas mov jo xchg repz and xor mov aas mov idiv jnp pusha and imul mov mov jecxz orl dec cmpsl add jg test fnstsw pop test jo lret or fwait cmp jecxz jnp jp xor push pop cmp and xor push and loope dec pop ret add inc cmp and mov mov ud1 sbb je xor aam (bad) ja repnz and in push dec xchg sbb cmp nop xchg pop test dec adc fbld sub pop and addr16 ja sub inc pop je fstps cmp xchg (bad) jmp fistpl pop cmp pop dec xor xor pop bswap and ficom sbb repz adc xchg xorl pop enter mov pop sub and not (bad) in shl inc xor imul mov (bad) xlat (bad) mov pop and sub xor pop push cld jo outsl cmp mov bound movsl mov repz sti sarl sbb pop sub sub pop and add ret imul xchg repz push cmp repz (bad) (bad) add mov nop repz mov jo jmp sbb adc inc addr16 call and mov sbb inc push adc jae mov inc jge fwait mov push xor sub (bad) ljmp mov cmpsl sbb cs xchg inc push sub mov adc push fwait mov int3 jns bound xchg fwait clc mull inc xor mov adc lret adc cmpsb cmpsl sub addr16 mov jne pop xlat and repz pop (bad) ja xlat cmp jae mov xchg inc push cs loopne mov inc out push sub mov rorb inc fildll push dec or int (bad) jne lret stc mov outsl dec (bad) jle jg aad bound sub push jnp (bad) mov not fidivrl adc cmp lods scas xchg or pushf decl xor enter and jl loopne adc (bad) ja xor or cltd mov push outsl loop jns ljmp aad inc sub dec dec lahf iret sbb pop jge and sahf popa xchg jo pop loope pop push notb movsl inc cwtl mov test jmp push shlb sbb int3 pushf inc sahf and xchg testl cli sub (bad) popf enter cld push pop dec sbb xchg cmc pop cmp mov not inc mov cs in sbb arpl lods mov sub outsl mov (bad) popf shlb add inc rcrl pop cmpsl (bad) sarl xchg es pop bswap jp lods push push xor ljmp sbb jno movsl mov jle js or andb ja lea enter cli or cmp outsb lret mov popl out adc rorb in jno push into (bad) je inc dec push jl popa aam mov adc jo jo mov xchg fnstcw mov insl push hlt push ss xchg ret bound and (bad) iret sub xchg fucomi loope call jge mov cmc call ljmp jmp cmp loop test outsb jnp pop jns outsl add jbe lahf mov sbb daa mov mov lods xchg mov fiaddl jne out sti xor or lret xlat mov sti test sti stos roll lret and fbld lret lds dec xchg mov mov pushf (bad) jle xor sti cmp mov and adc mov jo cmp scas push (bad) scas scas lods dec mov loope xchg xor orl mov and rcr lret subb xchg dec and cmp data16 pop ret aam lock mov sbb in sub movsb push call aad mov ret out cs ljmp cmp inc cmp jmp mov (bad) inc push inc pop sub pushf add mov jl jo ret sub sti fucom insl (bad) jno divb insb xor inc add mov jl pusha imul gs (bad) cmc xchg lret jge movsl xor mov sub adc jecxz lea dec fmuls ds sar arpl xlat push jne xchg sbb jmp aas cmc rol mov adc (bad) aaa movsl into adc lods inc testl imul cld mov fcmovnu fsubrs fidivrl mov lea or fsubs mov lcall popa in mov xor pop or loope inc push adc sbb int3 or pushf fimul sub pop test sub stos idivl mov xchg push scas sbb pop mov mov sbb adc pop lahf push adc xchg adc dec (bad) test pop inc lods in int3 dec int3 fmul inc aad dec stc iret movsb fisttp cli test test fimull sbb add pop mov imul loop mov sub xor stos or dec hlt mov jp cmpsl dec sbb cmp (bad) mov jno add cld pop lret pop fistpll pop dec dec stc xchg pop ss lret and in sbb push hlt (bad) push nop leave aad push into inc mov lcall lds loope nop faddl jl lret cmp mov jge or and out lock add push sahf mov bound scas sub sub loope pop fldt ret xchg into and lcall loopne outsb or imul std lock sbb sbb inc sarb jecxz arpl xchg icebp xchg rorb js enter jo cwtl scas mov lea lods push add sbbb out in mov mov negb push sub test mov xchg aad lahf flds fs pusha jl dec xchg outsl sub cs mov sbb mov bound push ljmp stos mov cmp mov pop cmpsl push shl lret (bad) add cmc push jo (bad) adc mov iret (bad) or sub (bad) cs pop outsb insb das mov es std inc cmp inc or movsb xor or popa pop inc push ficomp jo scas mov shl pop cld sbb sbb mov mov notl or adc xlat js mov cwtl call lds xchg sub imul int insl outsb adc jns jp rorl sbbl sbb and test fdivrs pushf mov out fldenv mulb xchg xchg je cmp lods ljmp (bad) fldenv adc stos cmp loopne xchg loop adc push jb popf ds inc push fwait sbb fnstenv sbb dec repz loope rcr in or pusha les sbbb adc mov and into xchg leave inc (bad) xor cmp cmc mov dec jne xor rep movsb mov sti mov add jnp mov mov adc ds jle and push lds jl dec stos pop xchg jo sub (bad) jnp fildl hlt mov adc fistpl xor sub sub cmc je adc dec xor jl addr16 jg jmp inc push mov push jecxz adc addr16 jmp pushf push pop mov lods imul inc addr16 ds loope (bad) sub mov les xorl out sub jmp je or adc fisttp push in es dec xchg lret (bad) testl pop repnz pop cli fimull adc test pop xchg inc mov dec xor sub sbb nop adc adc adc cs or movsb fdivl sub xlat clc mov mov stos push adc gs pop mov test rolb push mov jg ret push pop mov adc pop inc xor mov insb loop or lock push and imul mov mov cmp leave or push pop sub mov and call cmpsb daa adc cmp arpl movsl sub mov lahf sub add dec or push out ss int3 jp xor push icebp and mov sahf into test and fmuls mov xchg jecxz icebp fwait and aaa mov jl jl lock push repnz ret fwait test mov inc dec int push out or ljmp in mov lea pop js jbe nopl inc icebp cs scas repnz jg xor sub dec loop inc or fistl (bad) or dec pop bound negl jl adcl (bad) mov mov repz push insl sbb inc inc sbb jl push rorb mov jl sbb lea jle pop lock cmp fwait and mov jne movsl aaa mov pop nop mov imul popf insb mov lret cmp pop movsl sti mov cmp stos cmpsb inc add insl or push push mov push jae sbb inc mov push nop out push inc out pop mov outsl aam outsl mov leave adc sti push sub cmp jo jbe lock iret mov jb aaa repnz adc cld xchg xchg dec inc adc sub add push adc mov push jo xchg pop dec icebp pop xor push lret insl cmp or mulb mov cmp mov dec jb jns xor insl sbb subl and lds ja test aam push cs in cmpsl hlt inc jbe mov jno or mov mov aad jge cmp push in pusha inc fildl (bad) mov jae (bad) test pop mov sub adc push xor divb pop (bad) aas add push mov mov sbb xor loop pop je xor cli inc or mov mov femms fisttpll pusha mov lret mov lahf push scas mov mov or dec push adc fldenv in (bad) in jbe fwait xchg cltd popf jecxz sub movsb (bad) xor in loope pop (bad) mov mov or dec dec jb pop rep pop push mov xor sbb jbe mov jle sub add mov dec sahf jno leave pop jb jnp pop ljmp pop and daa lahf sbb jg ficompl xor add push push imul mov std fidivl mov mov mov jns into std pusha cs adc cmp inc adc sbb jne les stos pop xchg and (bad) xchg push push xor xor add adc push nop dec xchg scas jmp xor js inc push mov pusha sbb loopne mov jnp pop mov push shrl mov mov sbb and fsub or pop sub test cli fwait mov cs dec es les (bad) adc addr16 dec int or je sti popa or rolb popf lea mov mov push xchg xchg sbb ret movsl push mov movsb jns mov loop adc add bound test rorl push or arpl je (bad) xor sarb stos jno inc adc clc loop fidivl push mov xchg mov jno mov or pop xchg imul jmp xchg mov scas adc imul fstpl fsts sub sub xchg inc mov jge push imul imul (bad) ds lret add mov add jne inc popa xor push inc pop stos rorb int add data16 loop and jbe ljmp push mov lods pop xchg repz ret push push sbb icebp enter push adc or add popa ds pop inc and cmp fistl addr16 frstor jg adc add add loope mov xchg hlt outsb int3 pop sarl mov jmp sahf xchg negl pop (bad) js lock mov mov ljmp jecxz fisttpl nop mov test lea stc mov mov cmp cli cmp dec push xchg push sbb add mov pushf stc sahf (bad) es mov xchg adc pusha sbb test test ret aad imull sub sub inc mov out or fwait pop xor insl lret mov or imul add in add popf pop pop jb mov push adc or mov je fmull mov (bad) pop imul mov mov outsb fimul dec pop mov pop lcall shrb push mov lods mov loop arpl xor push jns fsubrl hlt and push ds cmp and in push sbb mov fs xor mov jl push les jne inc jb in addr16 mov in xor inc add or lds xchg lcall aaa add adc es pop fdivl add in (bad) mov pop and and jae jo push out stc xor in rcr aam inc sub push fs or popa sbb pop rolb lods add lahf aam int addl add mov xlat sbb fscale scas loop bound rcrl push push jne mov add loop dec or jo adc push bnd add sbb mov dec fldt mov jg push mov sub (bad) sub out test enter cmp xchg or sarb add sti (bad) dec sub and xchg pushf and xor (bad) mov xlat rorb mov sbb gs stc mov xchg lods stos mov cltd push push mov jge cmp xchg jno jge sarb (bad) jl js adc mov or sub cmp xchg jmp adc jmp into mov jmp push fstl push ret leavew ja mov inc out xor pusha lods fdiv mov push stc xchg sub mov jnp mov aas lret push lret sub jno mov mov cmp (bad) cmp lret cmc mov mov pop imul lock inc insb mov jg xchg xchg and sbb cmp test ss repz nop mov sub je or jp or cmp lods push jle mov mov movsb add mov push pop out popa inc lods insb out gs sub out jne xchg (bad) out push js (bad) inc mov jnp imul stos or movsb mov inc les ss push or int xchg clc push call and loope outsb sbb mov lea or mov sbb xchg xlat sbb jg cwtl mov pushf mov jp jle ficomp out mov out mov mov in sub push pop mov jb test imul js imul sub je stos mov mov jg adc adc outsb outsl push or xchg push cmp mov (bad) fstpl mov mov pop xchg mov out and fisttp sti inc rcrb lds inc int3 adc lock bound jno push sbb inc cmpsb loope and (bad) push dec cmp dec add mov add out hlt push seto movsl xor pop rolb sbb xchg aaa xchg mov adc mov xor sub das add lret pop and cmp in dec sahf fwait jb js outsl jno stos lock mov mov loopne stos fstl push lds aam jno or push sbb lods cwtl fs cmp std cmpsl repz pop (bad) xor pop loop dec mov mov jmp sbb aaa in lret push std cmpsb push jmp enter call (bad) int3 adc enter inc mov enter pop cwtl mov imul (bad) push xchg int fs or mov cwtl xor adc mov xlat adc rcll (bad) adc push and push mov arpl sub sub xor out mov loope add adc loop,pt es jp ffreep nop jg jnp rclb cmp push lods push popa insb xchg push scas sbb iret sub jb pushf (bad) ja jbe sbb dec out (bad) xor mov sub out sub cmp and mov test xor jae mov add xchg aad jbe push pop or movsl ja test push sbb or ss into sti push stos push mov or sti adc sbb sbb outsl cmp add cs (bad) cli stc pop lea shrb mov xchg jge sub (bad) ds push jmp and insb xor and xchg cs repnz sub xorl mov in scas cmp jg adc or add mov sbb in (bad) int push movsb cmpsb dec (bad) cli dec dec pop roll add or lods pop mov xor dec jmp mov imul adc cs adc or test adc cltd dec xlat ret out adc jbe mov push cltd sub xchg inc jne push pop cmpl ror mov out xor ds mov push mov notb mov sbb mov sub sbb jnp adc and cmp movsb xor pop loope mov pop mov (bad) fstps pop hlt mov out repz (bad) xor movsl sti repnz cld repz xor xchg adc fildll (bad) loope adcb and roll jb sub stos loopne and lds outsb xchg adc pop jmp subps add cs mov (bad) (bad) into ljmp idivl push nop mov out mov inc ret pop popa std (bad) add xor sbb das and cmp repnz xchg jp dec dec push xor xchg or aad ja mov jge addr16 aad adc ja pop sbb lock dec adc or repz xor lods adc aam sub adcl inc je sub pop pop add push mov stos ljmp xor sub fimull mov inc push jge push inc movsb mov inc cs push popa rcrl hlt roll shlb movsl sub leave pop sarb arpl mov sbb jno sub mov lods leave jg inc sbb lods fild jo test imul sti bnd push sbb scas out mov leave xor inc sub sub or fmuls mov cmp adc add cmp push mov lcall mov add lahf and (bad) popf mov push fidivr mov repnz xchg cmc sarb xchg jp pushf adc (bad) dec jge daa into mov out cwtl inc mov arpl inc sti and mov out and out xchg aaa and pushl movsb sbb mov std stos pop es loope repnz lret fidivl adc aas fstpt lcall (bad) aaa ljmp pop scas add jb repnz mov add sar insb mov movsl jb ja (bad) jo iret adc push pop (bad) or inc stc push lods pop xchg push js popf jg pop aad scas mov aad test outsl jno and movsl adc push fstl jl sub sahf ljmp pop in rcrl xchg (bad) movsb push inc neg cmpsl and pop movsl inc or fistpl js push imul pushf add dec insb adc mov and rcl in jecxz fdivl fdivrl lea sbb inc fadds (bad) jbe jmp sub sahf adc lret popf xchg scas mov pop clc or xchg lret or push pop pop insl in xor lock stos mov push ljmp ret addr16 xor xchg mov fs push fs xlat push (bad) cltd xchg xchg add add adc addr16 loop jle and sbb stc add (bad) mov pop mov jbe push ss lods pusha dec fistl test xchg jnp inc cmp add and fwait sbb lods mov or xchg stos jecxz orl xor add sbb (bad) and sub pop scas and pop cmp jbe sbb into push jb imul dec sbb sub jecxz mov push fnsave dec push je ficomp test notl mov clc aam hlt lods dec test scas js rcrl das cmp sti adc sbb add jl dec fist sbb xor out pop push mov adc scas mov jns add jmp lock adc les sbb cmpsl cld mov imull in and rorb xchg or dec cld sub arpl mov cltd imul inc inc in sub inc xchg (bad) xchg mov add in icebp aaa scas xchg xchg test push mov sarl fisttp mov add iret jns push inc out call add stc adc jb std mov sub rcrl mov jne shl sub aaa js fisubrl fcoml mov sub mov mov add dec xchg insb dec imul mov sub lock xor dec aad lock mov sub lret imul xchg outsl incb mov popf jo lock jns sub js and aas ljmp (bad) push outsb mov mov shl sub xor mov xlat sbb xor xor pop pop push fdivrl push sub mov xchg fiaddl inc mov push repnz loopne das das nop inc push loop add aam je mov jle mov sub adc popf es mov bnd nop add gs adc mov andb ret popa (bad) or idivb sub and loope inc xchg lds push mov mov cmpsb jb (bad) jp inc cmp repz add and pop shrb dec shll sbb and (bad) mov pusha jnp nop popa adc lods push aaa inc roll and add jbe aaa pop insb push mov pop outsb mov pop repz addr16 mov fidivr and (bad) lock sbbl fnsave mov jbe xchg xchg insl xchg add pop jg aaa and adc mov (bad) sub aas fs iret movsl sbb movsb sbb pop inc push cli xchg adc sub pop adc jno push icebp dec lds or rorb jae pop and shll jnp sbb pop test xor lock push adc xchg sbb sar push (bad) fisub fadds adc fsubr int3 xchg aas les inc add pop lds jb arpl std xchg mov or ss adc mov push cwtl test xor mov fs stos lahf xor fidivrl je cmp inc inc lahf xlat jns scas das mull jns es dec push push xor jmp mov cs sbb mov inc enter pop cmp aaa ret mov test jle xchg notb out (bad) mov inc lcall inc cmp adc mov jno int3 sub leave das enter inc adc sub out data16 pop push (bad) ds fild loope mov pusha scas int addr16 xor adc stos das push mov jbe ret ss cmp mov in cmp lods cmp in cmp lea inc mov nop clc jmp faddp loop pop ror iret ror ja imul adc mov sbb inc imul sbb xchg stc adc mov mov sbb fst and popl dec mov (bad) xor pop dec int3 lret imul clc aam dec test jl into sbb mov push fmulp add adc cmp cmp dec stos imul movsb in sub mov bound icebp sbb daa in pop jns mov rolb dec push pop stos add xor ss (bad) js stos xchg call push push xor outsl std push ret call fwait sub pop sti rorb pop and aad push lock js xor inc xlat adc pop lds jne pop aaa in leave and int3 test nop ss and and and addr16 pop add pop int3 lcall xchg lock loop repnz and sbb xchg std xchg mov addr16 sub call in push bound aam and faddl cmp ds adc in in lds arpl ret mov add cs fs mov (bad) jg repz xorb push movsb popf fildl sub cmp push icebp and fwait popa imulb sub fimull pushf xchg jge lods adc dec mov mov mov xchg or pop fstpt add outsb shlb and xchg ds push loop xchg xchg ja cld inc pop jae push and in mov das in lcall cltd push mov mov nop pop mov fcomps nop cs mov repz jae mov pop (bad) mov inc mov mov sahf enter mov push out int3 lods out xor mov and mov sub (bad) outsl cltd dec pop dec aas mov lcall popf push sbb addr16 push ljmp fs push cmp and mov cmpsb pop mov push iret js dec out fwait insl xlat add or insl popa jns push (bad) mov push adc or and in imul mov (bad) mov mov xor pop mov xchg ljmp adc inc inc add (bad) aaa fwait sbb fisubr sub dec push insb mov stos dec (bad) mov pop push sbb push sbb std sub add xchg repnz scas sbb jge lea in inc popa jg jnp loop arpl mov lcall and (bad) (bad) nop dec or sub mov push or rcll xor add mov mov sbb cltd mov imul sbb ljmp add mov das fs aam scas jge movsb mov fs xor aad xchg nop mov test cmpsb mov lret push mov add icebp xchg pop xchg das mov xchg sarl (bad) push aad out xor je pop imul stos test inc out pop push ds push dec sub idivl aas int mov jnp add adc jno add jnp mov sub jno xchg pop mov xlat pop or repz cmp adc sub cli jnp cmpsl mov jnp jno inc and xor stc les mov pop adc push mov jns add mov jnp mov jecxz pop fdivl out test xchg sub inc pop mov fnsave mov shll mov push lods mov nop mov jnp adc popa sub sub and cmp sti cmpsl mov pop cmpsb jno negl fs negl in lock pop xorl sti cmpsl fsubrl pusha ficomp iret adc les enter das ds push mov dec rcr sbb stc in sub push cmpsb je lods fbld xchg nop (bad) aam in mov clc cmp sbb add stos mov cmp push and jecxz outsl xor bound icebp jae lods iret push dec and lock mov outsl mov jecxz cmpl test std cmp mov add pop jns mov lock mov mov sbb cs cmp setae frstor push and sahf shl movsb mov div mov mov jo lcall dec int cs inc fnop add push mov xor rcl (bad) add fdivp fidiv adc ss cmc cmpsb in push in lret (bad) adcb and (bad) mov sbbb mov mov add or mov cmc sbb push mov sqrtps mov or (bad) xor push and stos ss adc add enter int3 gs rcrb hlt test pop (bad) push and fbld cmp and push cltd (bad) cmpsb or dec mov fucom adc fisttpll lea add call inc imul lods xchg aam mov mov jne ljmp outsl cmpsl adc (bad) inc in addr16 ljmp in mov lret dec test mov arpl pop xor hlt xor pop dec add xor jb out loope rorb in jb (bad) loope imul out pop sbbb dec push mov (bad) mov (bad) xchg xor (bad) xor (bad) mov ret jl jb xchg sub inc dec jns int mov (bad) sbb push daa iret and push push insb rcll enter add test inc in push and jns sub xlat cltd test pop sub mov jae sbb cmp pop (bad) mov notb mov mov xor cmp sarl imul mov daa mov jg xor mov mov xchg add lea in adc xchg dec pop call loope fnstcw pop adc sti add outsl sub jg stos xor es xor push sarb lock sarl in inc es (bad) pop ja xor or ret (bad) mov add jecxz cmc btr and cmp dec test (bad) xor push jns fdivrs mov loope shll jae xlat ss mov adc jp and xor lds shrl test sbb pop jnp sbb lods sarb sbb sub loop xor insb loop cmpl and cmpsl pop enter int mov dec cmovno pop adc int sub pop (bad) mov mov imul iret sbb mov les adc and inc xchg sub repnz in xor ret mov mov cmpsl pop mov adc push fadd insl loop push pop loop pop or and sub (bad) je add fstps mov (bad) out adcl pop scas (bad) xor out leave call xchg jne int3 add lods xchg or das (bad) int jmp push jg xor (bad) sti stos fcoml mov out fild pop cld push into enter cmp and pop (bad) or sbb dec mov jge and adc loop call push xor adc ds mov pop adc sub jb dec stos sbb ret ljmp push cmp jne mov jne mov (bad) mov and push and int nop/reserved dec jecxz fldl and cmc xor shrd sbb sub cmp inc insl cmpsl jg repnz dec sbb repz xor push jne pop cld or dec xor sbb call inc loop out fs mov ret js xchg addr16 xlat adc cmpsl divb rolb sub mov fidivr adc jecxz jnp or pop xchg cmc add adc mov adc cld mov sbb jl mov mov adc cwtl cli mov or in mov shll sbb mov mov jbe in out add adc faddp mov jg repz pop and (bad) jbe fisubl dec lret xor sbb (bad) cmp iret rcrb xor sub es stc js adc cs or dec js mov (bad) popf push or add cs and dec push push mov dec xchg inc sbb add ljmp inc sbb std mov mov xchg leave stc shlb shlb jnp mov or mov add mov mov lods jmp push divb out push gs (bad) push mov push jnp in adc imul cmp sarb arpl hlt push mov mov xor sub inc dec dec out cmc ret mov fistpll movsl fisub fs mov pop stos cmp divb rclb movsb jbe add pop sub aam jae test xor mov mov inc pop fnsave pop dec pop cli pop btc movsb mov xchg lret lahf cmp mov xchg inc lahf out (bad) pop mov sub adc jg pop sbb fdiv dec xor xor mov xor (bad) dec insl arpl mov cmp sahf or mov xor jo stos push repz inc rclb lods push xchg lods (bad) jp lret aad sbb daa cmc rcrl pop pushf adc adc mov stos mov mov fwait ds cwtl xchg mov imul sbb or mov xor cmpl (bad) xchg jg pop into cmp mov inc pop insl and ja xor mov aaa mov or lods int3 and (bad) jbe inc mov mov sbb mov hlt sbb daa and cmp insl std shll int3 mov in (bad) popf ja inc jnp sbb sarl mov popa or ss sub decl pop jnp lods repnz jb dec jl test push ja cs xor adc (bad) sbbl xor lods cmp push (bad) fimull mov andl jb lcall icebp movsl nop into lret inc dec cmp mov pop leave (bad) mov insl cmp push je dec xchg sub into popf cmpsb xor dec push mov inc popf loop inc xchg mov cmp sbb inc test sub fdivp test xor call adc es sahf cmp sub inc in fmuls cmp jnp inc sbb mov mov test aad mov or pop push or jb push xor cmp and xor mov loopne aas xor jnp sub ja xor push inc xchg cli lods jge mov sub and mov jns mov jnp dec mov sub jns push and ja jo sbb pop sahf insb lret jp cs mov shll and sbb jg xor lods xor pop and fldt cmp (bad) jb jecxz xor sbb loope ja xchg jg repz aam sbb mov jne loopne lea jecxz mov mov loop or adc pop dec push mov push cmp lret jno adc cmp mov mov jnp mov push mov adc and and jnp jno and mov cli xchg inc adc icebp adc mov pop pop stos jno adc xor mov pop nop mov pop loop push cmpsl mov mov pop repz xor mov pop nop mov sbb mov jne ds jno push out bound mov pop mov xor xor jnp jno add mov ja gs and ljmp fstpl sub mov addr16 mov or int3 dec int3 mov dec leave movsl enter or leave mov stc in je fsubrl test cwtl xlat dec dec clc jne lods int3 mov inc stos push fadd jmp into fcompl sbb dec dec shrb nop xor shll dec out mov pusha cld lds and out sub and lea mov (bad) mov inc in fimul cmp add repnz nop je mov cli not fs ljmp imull loopne lahf outsb test lahf fildll (bad) aam out pop test bound pop loopne jl clc sbb push inc iret mov hlt insb pushf out xchg mov mov dec leave into lcall mov xchg fwait xchg lahf jbe rcrb out in ficoml insb lods mov ds int3 xor dec repz rclb jne lods mov loope sti push sbb or mov aas aas dec (bad) xor mov xor mov mov adc dec dec (bad) xchg test xchg lods cld arpl addl fs fwait push sbb int int3 int3 fstpl push repz in jbe vmread out fist mov dec in lock mov int3 mov int3 leave aad sarb mov xlat pop mov cwtl cmp aam lahf outsl js inc cmp adc mov lcall shrl popf xchg xor xor sub iret arpl sub test add sub cmp mov xchg jnp xor jle xor int lods mov bound int xlat inc push imul sbb jno nop push push or clc nop mov mov jae sbb cmp and arpl lods mov sbb push mov mov test mov jbe dec mov sub lock pushf lret aaa in pop cmp jo into pop pushf data16 int aad jnp adc dec sar loope (bad) daa movsb xor (bad) mov jnp in aas enter mov jnp test les mov sub notb mov mov daa movsb addr16 and or pop jl push lods ss sbb jnp test shl fdivrl push xor xor add or xor xor ret jbe mov lock jno add xchg cmp les sbb mov xor jae mov dec push inc xor dec and inc xlat out rorl adcl or insb sub push fsubl cmp jp divl test and cmp lods adc jbe hlt xor and shll xchg sub adc fstpt idiv test jp xchg xor test pop lahf (bad) jb idiv data16 ja sbb push rclb jp inc repnz les mov insl inc cmp mov rol cmp gs mov ret xchg lret cmpsl lods inc or push test ja pop pop mov xor subb cmp cmp xor xor and jbe les insl enter out xor aaa mov mov xor pop ror fmull mov in dec push or in std enter (bad) jg sahf int3 dec les int3 sbb pop lret push enter inc push or xorl push int3 dec cmp pop int3 cwtl mov int push int3 lret cwtl scas les cld or into int int3 inc sub pop int3 fmuls fmul inc or lea inc mov outsb out fmul xor inc mov cs fmull stc mov inc fmull in inc push or push mov mov int int3 mov pop (bad) lea fmull scas int3 mov in push int3 test mov dec cwtl sahf int3 dec les int3 sbb pop (bad) rorb std shrb in inc inc or mov lcall push push orl jns xchg mov mov pop (bad) sub lods mov inc adc pop sbb in imul cld xchg mov inc push push push jbe insl push (bad) call arpl (bad) inc cs push push jbe insl outsb xchg mov xchg jg adc xchg mov mull push outsl jb pusha not push dec stos js lcall movsl adc and xchg cmp cmp scas fsubrs ljmp mov enter mov clc pmuludq out into mov dec sub adc sbb (bad) fisttpll jb pop icebp xchg dec sti sbb out push or outsl mov push mov scas insl mov jmp mov mov and jmp bound sbb ja fstpt nop dec inc fbld fsubrs sbb ljmp xchg shl addl xchg mov inc jle inc shlb insl or int aad scas mov mov mov sub ljmp lds jb push ret gs paddsb or ds cli imul in cmovl cmc roll push (bad) jb imul mov jo hlt jns mov test repz (bad) mov fdivl push (bad) mov addr16 imul dec fs sti repz cld neg mov xor jnp jno pushf (bad) push mov add out (bad) lock or je stos scas mov or mov add aam arpl mov cmp xchg mov cmp stc inc pop (bad) push dec push xor sub pop mov and imul jge cmpsb inc dec push loope push push leave fidivrl pop (bad) cwtl jge stos bound cmc ss add (bad) fs inc (bad) mov jmp outsl sbb xchg xchg push sub mov jb addr16 cmpsl or mov inc dec pushf gs popf pop fs mov xchg xor sub mov (bad) mov adc mov jmp inc inc cltd std in add jbe xchg sbb (bad) (bad) sbb mov (bad) es (bad) shrb pop frstor and push test sbb js movsl pop mov in aad insb push (bad) int stos aam and cld push lcall enter add (bad) cmc stos xor stc or aam xchg sahf fdiv xor cs ljmp iret dec dec cmpsb sarl hlt imul sbb aam jle xchg push mov test test stos nop push jno outsl pop and push inc (bad) pop jbe pop sarl push lds scas lods add pop push xor icebp iret int out add sbb jle fs pop das repz sbb push inc inc stc repz mov dec je int cmpsl pop fsubl push lock rclb adc pusha out mov ret add cmpl movsl das mov (bad) cltd std pop xchg mov push fidivl enter fadd lcall mov mov ror into int xchg cmpsb and sbb out ja dec aam pop insl xlat insl arpl out pop mov (bad) sbb inc aam dec test or and scas push pop or push cli sar imul aas movups clc xor loopne hlt inc outsl jns mov enter xchg inc jne or cmc sti in aas scas sbb push arpl aam push mov test xchg mov fdiv sbb mov outsb (bad) lea add shrl data16 aaa or and daa mov icebp iret (bad) loopne push clc push sarl push out sub in push out in rcrl dec push jge lret out lods mov lock outsb push insb in add sbb mov push movsl clc pushf pop sbb add outsl or ret ss jae pop jl stos or lods fisttpll xor call lret das and stc and sbb popf and mov mov in mov arpl sub dec lret or cwtl ljmp or cmp dec lret xlat stos aad pop xchg adc into or pop (bad) (bad) bound jecxz outsb or roll lret cwtl and lods sbb sub push push movsl mov or out or cltd xchg in xchg shrl fsubs insb xchg lahf push lret (bad) push xchg mov loope and xlat (bad) stc repnz outsb cld andl in or sub rolb jbe imull jle lret jecxz pop jl dec jb out test inc movsb pop mov inc inc mov dec test out pop or jecxz push sar aam pushf cmp call lcall mov push xchg (bad) movsb and adc cwtl fiadd adc sbb adc pop jge test adc jns sbb sbb jp dec mov sbb int jno jg (bad) (bad) outsl xlat push or ficoml out pop mov dec push cltd outsb push ret pop test (bad) neg loopne jmp jle cmpsl cltd stos das dec lea pop imul test sbb jb mov fnsave xchg enter lahf in push aaa imul pop push ret jl movsl adc hlt (bad) jecxz (bad) dec push mov push leave push jl lds pop lret mull (bad) (bad) enter (bad) cs mul out adc cld mov lret or inc pop aad incl push sbb (bad) ds mov jl out mov test out pop sbb addr16 mov (bad) push jo je mov cmp out aad fisttp mov fwait or jl lods popa add (bad) mov lods mov ja loopne les or inc cs push xlat mov push into mov sbb cmc jno cwtl outsl xlat scas in popf cli dec inc in loopne mov xchg add pop or inc mov mov inc dec mov fisub sti loop jl and push cld in pop and push pop fcoms push mov jno sub rolb clc xchg fstps add inc push js out push push dec cli adcb mov (bad) push mov dec jbe out jbe out adc cwtl push xor stos out loopne std fcmovne test adc inc fwait hlt xchg paddusw (bad) mov sub mov dec test jp movsl popa into popl inc and sar aam sbb mov out cmc adc pop mov pop jno lahf mov aad lods ja (bad) mov dec mov xchg out in stc fwait inc repnz and fidivr test clc sahf adc leave pusha nop mov mov gs sub fwait lahf pushf push push stc sbb outsl paddw enter (bad) hlt jmp adc push inc lods inc push mov dec lods dec sbb mov (bad) rolb pop add pop sbb int xchg aad testb pop lds std add inc mov test repz mov stos xor cmp fdivrl ds mov push mov ja pop xchg lock imul add in sbb mov xor push pop mov inc push outsb out in push aas jbe mov push pop xor outsb idivb js dec cli mov leave (bad) pop dec fucom jecxz inc fidivrl sbb out sbb or lods das pop inc pop inc repz in (bad) hlt dec repz movsb jge mov jno (bad) outsb fcom adc dec dec jmp adc add insb add mov pop and dec xchg jmp inc js mov or dec js jns ljmp pop jl add and je dec fistpl fmulp (bad) movsl fxtract test sbb mov imul dec int sbb pop sahf mov xchg sbb movsl int leave xchg mov pop ret dec xor push add repnz out mov jecxz mov xor mov repnz jge jmp cmp mov (bad) ficompl dec (bad) (bad) test or insb cmp jmp dec out insl adc test fidiv out add mov notl pushf or xchg sub cmp stc cmp cmpsl fxtract sub jnp bound outsl aad jbe pop jb inc es push ret aad dec into push je cmp dec test add fwait rcr test mov movsb call sub insb mov push pop out adc xchg push movsb jne cld jle pop or mov ret sub out dec sbb mov outsl call push mov sbb mov movsb inc std insl (bad) jbe fxch mov leave xor push (bad) jmp pop popa js sub lods push es in and test repz int3 mov or les jp aam dec in cltd (bad) (bad) in jecxz or movsb stc pop jno xchg or add xchg popf mov jle jo test rorl test andb or adc push aam mull jmp shlb test add sarl fs add adc xchg js std out scas mov jmp cmc cmpsl sar push clc and and xlat rcrb pop push jecxz js jecxz dec cs sub cmovae pusha sub cmc cmpsl lret scas pop out xchg vpsubsb (bad) fmull inc ret lret (bad) push enter mov iret out test add stos or imul in lret mov ljmp (bad) pusha ds mov ficomp dec out out mov push dec fistp push xor pop mov pop pop imul jecxz int3 inc jge test pop sub mov mov jecxz,pn insb shl loopne mov lea (bad) aam inc insl inc lods dec inc outsb jae orl pushl enter into xchg dec pop bound mov lret loopne xor mov inc imul mov int (bad) test mov in scas test aam cmpl mov fstps in pop stc push dec test call jl stos sbb out or enter and cs pop outsb test or scas test pop pop shrl lahf add out add lods or mov popf pop cmpsb out push aaa or pushf xor sub fmulp xchg and aad insl lods pushf lea mov sbb xor xchg or jo pop popf ror aad mov push push loop mov mov fstpl sbb xchg enter int3 push (bad) sbb cmpsb imul cli cld jo (bad) sbb push sub fcmove fcmovbe frstor or sbb js pop dec test test pop mov jbe mov out inc (bad) or out lret dec fnop xor xchg mov xchg movsb dec pop mov lea fs mov cmpsb inc iret andb aad cmpsl bound push push loope mov fxch into dec icebp mov mov dec dec fdivl push pop jne ret loop push ret sahf out (bad) inc or test stos mov push pushf cmp shll fsubl push and inc push fldl (bad) cmp push pop xchg insb out daa sbb loope fsubrl push or rcll and aam jae pusha pop flds inc iret pop cwtl out mov or jae fiadd inc (bad) enter push sbb sbb test inc rorl mov inc inc into mov dec add popf loope shr rcrb mov push or jnp dec sahf push shrb decb out and push out (bad) out sahf push mov hlt mov inc inc or adc movb outsb pusha paddb pop orl repz cmpsb mov jnp mov mov ret xchg mov sub adc sbb sub adc push inc popf xchg enter jp jp sti mov dec loopne mov scas adc cwtl push fistpl (bad) ja rcl jmp stos lcall inc jmp sarl lahf sub rclb xchg pop into push lret xlat mov mov push (bad) xchg pop rorl rol nop movsl aam push call outsl mov dec es mov decb test (bad) xchg scas cmp in push pop add dec loope push sti loope dec test xchg dec adc push sub push ret lods mov and test dec or fcomps stc fisub in sbb jnp add stc ret fwait add jns pop dec popf in xlat notl test and in xchg inc inc out outsb scas rolb js in decl rcll dec imul sbb (bad) and dec jp add push pop dec push mov roll movsl adc mov sbb or vmulss jge popl cmp negl fistpll in sbb or mov mov out movsl mov lcall rol mov in test loop into pop mov (bad) mov mov and mov je les push sub mov jb sti js mov adc ret jmp icebp xor xchg sub das loope sbb fisubr pop scas repnz pop mov fildll mov fcompl outsb xor inc or nop imul xlat fbstp ss xor push test lods sbb cs addl (bad) mov xchg pop imul mov or cwtl lods lea (bad) pop stos xchg movsb push mov fidivr repz inc ret loopne and out insb std insb (bad) jb jecxz mov or xchg fsubrp fs sbb dec ds inc jo (bad) movsb fldt movsl and mov mov test aam jne xchg sub cmp inc je dec out popa rol lea cltd push out sahf stc sbb (bad) movsb imul or mov lret inc mov pushf sub lahf bound dec iret cwtl cltd ss out cmp xor test fwait je in in aam pop pop or repz dec popf add xchg fmul ljmp dec fwait mov cmpl shlb pop sbb or dec push xchg and mov insb (bad) aam xor jnp idiv inc mov sti xchg outsb adc sar scas outsl and inc ret leave mov adc push and lret pop dec rcrb (bad) inc sub insl ds push lods mov aad aam stos ret xchg shrl scas mov sub dec loop xchg and imull dec leave (bad) testb leave sbbl mov mov imul loopne out mov imul std mov sub (bad) call clc rolb outsb fcomps popf jge sbb pop fisubl repnz test (bad) jo out iret jge leave dec popf xchg test out jo hlt sbb pushf cli popa (bad) push lret mov imul xchg mov jne imulb mov imul pushf js mov sbb incb push mov xchg jne sub mov mov adc in shlb mov (bad) test lds jmp and or gs (bad) movsl gs xchg lcall into push mov lds outsl inc mov and pushf shlb pushf pop dec test movsb loopne adc arpl call sub cmp shll or push mov and in mov into and cld outsb sub sbb xchg pop xor mov xchg cmp jle jmp (bad) leave (bad) lock scas adc popa or sbb popa or test xchg mov (bad) rolb out adc inc imul mov dec lret cs insl adc rcll sti or es test xchg inc jo hlt insl pop test fistl dec lods mov xchg pushf repz xchg movsb cwtl ja sub scas cmp add sbb jle stos inc (bad) loop inc lock pop divb pop push adc jmp outsl popf dec mov lods imul or lock pop in sub inc mov sbb call fs std sarl std subl push (bad) divb adc in mov movsb enter pop rorl les fiaddl add or cltd lret sub ret loop pop mov out sbb fist scas shrb push mov adc jge call cs push rcrl (bad) out outsb jle ss inc ret mul test int3 sub orl jno mov mov inc aam sbb xchg xchg lret clc stc fcoms pushf adc into inc mov mov (bad) xchg or test pop mov test lock cmp mov das xchg in ljmp inc rol and push sub loopne add inc mov pop or sub xor (bad) fiaddl pop icebp dec jnp sub test or adc cmp (bad) test sub pushf jecxz leave orl hlt mov addr16 dec popf iret or fisubrl lods mov imul loop insl dec in bound data16 nop mov cmc add in jmp pop int mov in arpl inc dec dec push out xchg hlt and dec pusha outsb test out jmp lea out test (bad) xor sub xlat test ja and lods mov dec pushf in dec (bad) cmp int and outsl inc sarl aaa addr16 unpcklps and rcll (bad) stc mov out xchg test out ss lods stc and insb movsl insb aas insb gs (bad) mov inc sbb push xchg gs push or js and xchg pop inc push cmp xchg lcall lahf xchg imul xchg clc mov (bad) pushf and clc cld imul mov xchg in mov popf jo icebp sbb test outsl push xchg ret or and cli test or mov popf fld int3 cmc xor xchg fist xchg mov sub test rorl dec and shrl pop inc cmp (bad) cmp or dec data16 imul fsubrs add into bnd or jg insb pop (bad) mov pop cltd mov add lods push test xchg (bad) jg (bad) push push fisubl inc in je xor daa js,pn in stos fldcw lcall cmp add push rorb push dec xor push test aam clc in mov fisub pop dec scas pop imul pop repz mov (bad) bound fisttpll (bad) scas sub lret dec outsl jmp vpcmpgtd cmp loopne ljmp into add xchg cs jo lock or add pop sbb mov jo or (bad) vandps cmp enter (bad) int dec xchg and inc inc inc addr16 movsl cmp mov data16 pop (bad) cld mov stc mov add mov jle cmp jp jmp push dec jecxz sbb cmpsl test add pusha mov xchg mov pcmpeqd push ret jmp lock (bad) mov clc in pop ficompl test pop aam loope das sub (bad) xor insb pop lret xchg outsb lock mov add cwtl pop in stc adc notl jg or or gs adc add jl push fdivrs mov lds or dec rol fdivrl mov sbb push aas adc fldl mov fcoms test dec lret ljmp fcoml jb xchg pop sbbl adc rclb and (bad) pop in jp out je push sbb test push jnp rclb dec xchg or mov mov push xlat test (bad) cs dec roll (bad) shrl dec std sub lret jl push and pusha inc push rclb fsubrs lds dec push jae cmp fcoml popf mov mov sbb movsl inc mov hlt pop aad fs fidivr lea test fildll rclb xor sbb movsb data16 cmp sub dec addr16 jo popf dec dec sahf ret ret cmpsb mov int3 fcom jmp daa adc jmp insb or lcall jo data16 pop dec jmp push jb mov cmpsl rcr decb mov outsb popf and inc pop xchg (bad) aam sar js movsb jno bound test pop adc pop pop sbb imul int jp jg into jmp ss lret jns cld mov ds fmul mov fnstsw pop xchg xchg sub fbld sbb or dec fldcw loop xor pop stos rcl fst pop sahf jecxz int3 sub or test jmp mov inc lods incb mov xchg enter out dec push jecxz push ficomp jbe clc xor cli or stc in hlt dec jns add outsl pop xchg lahf scas jbe dec outsl xchg push mov call push je fmul insb jmp dec aam (bad) stc test outsb push insl push lods pop das ss or stos sbb pop imull cmc je mov jmp insb cld pop mov test ret pop in cmpsb loope mov sbb cmpsb std xor adc lret or movsb mov inc les inc xchg imul jb test jl stos daa subl pop sub fsub aam fwait loop loopne lcall das cmp and (bad) (bad) mul xor sbb (bad) leave aam jl test test fisubr test (bad) lods loope sbb and (bad) nop nop shr test (bad) fiadd mov xchg into lock push dec stos or mov test cli orl sar xchg ret pop insl mov jne test out mov out shr roll movsb aad cld xchg lea push mov enter scas and push bound inc jecxz xchg jle fdivr sbb scas outsb cltd and aam scas (bad) (bad) (bad) jg stos daa push mov cld sbb lds cmovne pop outsl inc loope mov int3 clc add inc push test inc repz mov push scas jnp mov dec int3 mov add lods movsl fisttp push lods repz xchg jo fldt cmpsl inc inc (bad) test push sbb add data16 pop cwtl cmp add cli ret xchg mov lods outsb jbe ss mov call lret dec sarb push les cld outsb cmp and daa dec ss flds push (bad) mov adc sbb and aaa imul push pop or pop dec dec popa mull mov movsl add push aam jo pop push dec test mov rorb rorl loope adc lods stos or rclb fistp test andl or cwtl test dec lea out xor or mov (bad) repz xchg icebp nop adcb lcall pushf cmp test sbb jg sbb stc repz and pushf outsb adc outsl pop and stc sar sbb fdiv hlt xor test push lds inc leave popf fimul outsb lret mov pop fisubl pop in incb adc adc pop mov xchg ficomp (bad) xor into mov mov (bad) sti stos jo or mov xchg fmuls sub xchg enter inc rorl cltd mov ret sub scas rorl lods sbb cld (bad) aas push inc or push mov sub in sub or lahf fidiv shll lea in add lock (bad) iret pop and fucomip xchg xchg xchg mov lods cld scas mov push (bad) mov lret sub mov sarb mov stc int test pop mov int scas xchg pushf add stos in mov push ret xor out fsubp fisub add lods xor push loopne int3 cs fs pusha (bad) mov jns iret in pop dec pop in test cmpsb (bad) repnz pushf adc popf push sbb lods or dec pop arpl and repz arpl mov inc test loopne stos scas and loope pop and jecxz insb push stc les (bad) aam cli je aam iret mov lret pop push sbb xor lods inc bswap mov mov movl call lock add xchg lret stc cmc andb rclb add roll sbb pop jp (bad) outsb shrl rcll divb sub add push push push inc incl mov fcom add jmp and sub inc jne cmp test iret les imulb or inc loopne or popf xchg frstor pop data16 jmp dec test lahf mov into (bad) mov out jns test mov outsl dec call cmc iret jo test cmp lret mov xor mov imull je repnz fsubs leave mov ds pop inc fnstsw iret ss (bad) loope xchg in sbb pop cld lods loopne add push push xor sbb mov push fimul or int aas (bad) enter jnp (bad) addr16 loopne loope dec clc test aam (bad) mov jle inc fdivp cld mov hlt mov dec xor sub leave push mov lcall stos sub sbb push iret mov (bad) jmp popf jns in mov out pop lret enter subb in pop pop mov cmpsb xchg js (bad) out or mov push movsb outsl icebp negl sub mov insb jg cli dec sub test call inc xor repnz mov xchg aaa xchg cwtl mov pop cmpsl inc xchg dec xor jmp ljmp mov add leave dec fmulp mov and xchg iret nop or out inc iret fiadd iret and adc repz std add lea jp mov test mov insb fcompl push loop mov (bad) outsl aam mov cmc arpl or mov adc sub adc jnp push mov push ja inc jne inc xchg xchg icebp mov in stos (bad) (bad) sub mov testl movsb aam mov cmp out ja pop (bad) push jno add or add push movsl in scas or dec (bad) cltd gs lcall (bad) adc cli mov arpl enter cmp push adc mov lcall inc leave xlat aaa lea lret loop cmpsl add sub mov fldt cs mov xchg add lret sbb pop xor xor leave or xor inc mov das (bad) imul (bad) icebp shlb dec cmp mov ds xlat stos adc pop fsub aaa sub pop sti fs xchg jle loope fcmovb pop cmc mov pop jg sub andl cld scas js or or popf fsubs mov mov mov sti push sbb or out call cmc loope in popf mov or jnp daa pop jns xchg les pop fiadd jae or mov (bad) jl jmp sahf ror pop add test or icebp dec sbb nop movsb dec jle ja adc hlt outsl push mov test add je out outsl push rcl mov movsl ds pop xchg popf in addr16 cltd jbe jb and fistpl bound xor loopne cmc adc xchg inc orl pop data16 dec mov (bad) jae outsl lock add addr16 imul ror sbb ret dec sahf push xor in push sbb jmp mov nop insl sbbl (bad) pusha clc cwtl mov fidivr scas jp adc popa lahf and lods lcall outsb jl inc sti cltd pop (bad) dec xor (bad) fdivr sbb js cmp int3 mov and imul fiaddl icebp xor jo and lods ret stc inc insl sbb popa dec mov pop in and test xor mull push (bad) movsb and xor xor dec sub cmp test mov (bad) rcr aas add int3 push pop gs pop pop add test dec std add mov push in ret fisub outsl sub dec mov or jecxz or mov pop xor int3 dec rol push (bad) ror loope pop int3 xchg dec mov std inc arpl aaa sub and test xor mov pop jnp xor mov xor cmp iret jb aas push ja cmp cmp pop ds int and cmp push xchg cmp ss xor sarl aas int add ss repnz cmp xor mov (bad) xor imul mov adc jp das xor popf loop ja,pt xor and cli xor cltd mov jge cmp and xor dec int3 out ret jl push mov lock subl daa cmp xor cld les adc pop rol pop xchg inc jb loop mov enter les rol jae and aas xor and sbb cmp mov andl sbb icebp sarl xor icebp cmp xchg add stos and aaa jg sub icebp jl inc jb je mov daa (bad) imul and sbb arpl aaa and sbb mov ja outsl mov les (bad) int3 or xor in mov int3 mov loop scas fldlg2 cmpsl mov lret jae or xor mov jg dec aad out iret ret xor out jle jo xor jnp cmp and testl xchg (bad) jbe xor adc and lock sbb mov and and and and adc mov das adc and (bad) nop cmp xor xor packssdw sbb cmc cmp add mov mov mov mov repnz adc sub sub xor dec lock xor (bad) sbb xor push cmc divb mov push cmpsl add or or inc mov (bad) mov pop adc lcall push rcrl dec push and and mov inc jae mov mov mov enter xor ficomp cmpsl fwait xchg cmp stos xor out mov and xchg pop and xchg mov (bad) into cmp jg mov mov xor jo repz xor sub and shll daa insb cmp arpl push loop inc inc pushf sbb jl or push push sbb in (bad) test push add mov lods adc sbbb dec mov jg outsb pop cmp dec mov xor push jo mov in pop and jb (bad) push xor arpl stos cltd and sub lock xchg enter inc ret fnstsw fcompl sub cmp xor fs stc or test clc imul lods dec mov or adc xor cmpsb int3 sbb data16 (bad) rcrb (bad) repnz imul adc loope aad add add add fwait enter adc mov jp daa xchg test mov sbb and add mov cld clc ds dec jmp or int3 dec in xchg std sub and jnp loope sub add push ja mov and pop (bad) je ss xor insb shr andb pusha jns int3 pop scas rcrb popf mov (bad) pop or and and sbbb or and pop and cmp xor imul arpl repnz and das push loop ljmp add adc adc stos ret repz les in outsl dec mov mov int int lods inc jne mov mov (bad) jae pop lret insb cmp mov cmc sbb inc icebp outsb mov inc sbb mov mov xor push (bad) faddl inc repz repz add ret in sub andl pop xor and aad mov in and out jmp ret mov ret cmp inc ret pop inc jmp sbb xor movb jecxz sub pop add mov and jo xor xor enter xor sub (bad) fwait xchg mov sbb add lret sub adcb pop jbe cmp add cmp jb fldt xchg test or shlb xor arpl mov xor (bad) lret lods jnp cmpsl (bad) xchg sub mov sbb push pop cmp mov xor sbb and xor aam sub insb dec int3 mov xor jl cld jl iret jb in mov int3 dec mov jl mov ret lcall fcoml jge hlt std ret cmp out into xor mov mov xor stc call fdivr enter pop int3 int sbb insb int3 into fldl mov aam mov sbb add mov cmpsb add (bad) dec scas popf inc xchg mov mov sbb add loopne das xlat push pop (bad) xor dec xor sbb out les inc ret mov (bad) repz scas das jle pop dec ja mull pop inc pop mov cmp xchg xchg outsl scas scas (bad) faddl mov fbld (bad) mov push test xchg das cld lahf rolb or jg cli pop iret jno adc xor mov and ret in mov add pop and int and enter sub xor jmp mov mov sti ficom cmc popa frstor push push je sub pusha or jo adc nop cld imul in das xlat push push xor inc jecxz inc cmp out mov les lret jnp and sbbb icebp jo adc daa mov les push mov scas (bad) test mov sbb inc xor mov enter out xor mov or rorb (bad) dec mov jns cs pop std inc lcall sub or ret pop daa sub add mov sbb sbb int push xor (bad) and mov push inc add jns les daa pusha outsb sbb andb aam movsl and xor ds lcall outsb out aam jl mov inc dec (bad) rol mov and and cmp add js cmc out cmp cmpb mov cli std stc std and int3 fs das xchg cli pop call xchg in fcoms push inc mov icebp sbb jo stc cli or ret mov mov sbb pop in insl pop xchg pop ds xor and nop mov mov cmp lret xor daa and push (bad) inc test stos xorb dec push jnp adc test xor fdivrl sub in mov jge out movl (bad) das add adc or push cltd push shr pop fnsave mov ret stos into push outsb or adc xchg lret (bad) inc fwait lods (bad) int xor pop push push (bad) lods enter dec movsb daa lods aam jno divb push add fstpl sub fsubrs cld in and cmp adc xchg push inc pop add inc outsb xor sbb scas mov inc jle ret dec cmpsb int3 jp jae enter nop aas mov adc mov outsb lahf scas das rcrb orb andl setns lcall inc nop aaa stc insb xchg sahf leave pop push out leave cs or push cmp add lret nop aas and and faddl lret mov aam iret cltd sub pop ds and js bound jg push cmp add sbb ja out xor add mov xchg and cmp inc aaa mov jecxz leave add push lea aam cwtl pushf call dec fisttpll push incb sbb jb loope jns xchg xchg stos xchg pop dec or fdivrs std xor mov loope outsl adc sti xchg jg jecxz pop (bad) ja inc loope (bad) ja inc cmp ljmp call add adc lret push popf adc insl cld inc inc jp or inc dec jecxz,pt in pop pop dec aaa stos cmovle lods inc push push inc test es mov incl rcrl inc xor cltd dec fisub mov xor mov adc mov xor (bad) jnp out adc (bad) dec adc ds cmp stc xor outsb xchg sub push inc adcb in or and dec dec adc and stos inc lea push in sub and adc push orl jle pop fcmovb out pop subl push xchg insl sbb xchg jmp cmp inc fwait add insl ret fisttp mov inc in iret test sbb (bad) pushf movsb popa push jno push jl add lods in cmc sbb test shl push xchg call cmp cltd ror push adc faddl add packuswb aam (bad) pop orl cmp mov pop ret push insl xor dec pop jo add pop inc pop push sbb sub icebp jp rcll (bad) fdivrs push or mov mov add push and adc mov ss lcall ja sahf push or jg and ret stos enter fwait cmp test cltd mov ljmp and insl dec adc (bad) xchg push sbb test lods adc cmp xchg mov mov push xchg shr mov loope pop es push stc (bad) xor out adc pop in bnd adc pushf xor sub ret into push or loopne into cmp aad in stc addr16 or xchg sbb scas mov push lods mov lods sbb jbe rorl xchg mov sub cmp sub outsb cmp xorl insb jo into sbb sub jnp stos outsb repz mov outsl jp test mov imul add stos ffreep inc lret and fmulp xlat out dec sub sahf add xor inc pop gs adc roll icebp push dec subb and daa xchg loope lcall push jns pushf out xor (bad) mov dec push insl adc push in or shrl test dec fimull movsl call ret inc loop cmp adc insb cltd xor dec stos inc testb scas jae (bad) sbb push scas add or shr cmp jg push sbb and mov inc sbb push cli daa pop sbb shll fstpl mov push dec push (bad) mov arpl test pushf loope add add mov addps push mov xchg mov outsb ss inc aas adc push mov mov push test rcl shr ja add adc loopne xchg jo fisttp sub push mov out or or mov push mulps inc push loope es push lcall repz repnz sbb add rcrl fsts adc sbb pop cli repnz fild push mov scas loopne sbb (bad) add das mov push inc shl push pop cmp push pop xchg mov and lret inc movsl shrl stos or dec (bad) mov in jmp cld pop bound mov mull mov popf mov xchg cmc add das js jnp push cli dec sbb mov xor cmpsl loope in sahf mov inc stos mov (bad) out loop lea stos enter out lret repz lea sbb icebp fimull jge dec mul out test adc loopne inc icebp xchg pop (bad) xchg outsb mov je jp in push lods adc or out cld mov jg pop nop pushf or inc and mov cmc add into lds cmp iret scas dec mov jns cmpsb das pop mov mov and int add clc jne in sub fcoms push insb call sbb shrb xor xchg pop fcmovnu or add enter test adc movsl xlat test mov test add inc jg mov dec cmpsb rorb call cwtl arpl divb add pop or fs clc mov adc addr16 mov pusha fldt dec pusha popa cmp jno outsb cmp cmc cs lahf mov lret dec and in call repnz notb cmc cmp notb cld aas mov adc inc inc xor mov xchg outsb (bad) std mov xchg fdivrl pusha pusha push nop dec push and mov push xchg jle (bad) push in push sar pop jo lds pop xchg outsl ss in stc (bad) push inc sbb sarb lock mov cmp sbb pushf fs stos or mov or mov inc in mov adc leave out hlt iret push pop cmc sub mov inc dec popf (bad) hlt sbb push gs mov loopne lock adc les or and dec dec test int mov pop mov jge pop test and neg je xchg mov (bad) aas loope sub push cmp mov enter cmpsl sub (bad) clc cmp dec stos imul push or push mull lret cld fnsave ljmp mov cmc push (bad) sbb fcoms pusha cmp (bad) jnp and add xchg (bad) push cmpsl or (bad) push xor xlat mov lret out aam pusha xor sub lcall pop notl pop inc out push inc dec and xor sub lcall cmp dec cmp idivb mov mov pop scas pop inc rcrb inc dec jle jg movsb pushf ljmp pop or cmpsl mov pushf pop cli lcall lods test in (bad) mov in stos (bad) fdiv popf mov jg aad and mul adc repnz sbb shll lock std inc jno dec ds out fisubrl xchg lret repnz repz in inc lahf mov imul out cmp dec sub mov sub pushf add adc xor fucomp stos loopne in in push (bad) (bad) push lret or cltd mov shl or leave ljmp scas pop mov sbb out dec cli (bad) mov je mov scas js adc repnz prefetchw (bad) xor rolb or add fbstp adc add movsb (bad) sbb xor daa cmp pusha outsl add sub in sub in lods dec mov push lock mov cmc mov jle pop in mov pop adc mov imul (bad) xchg inc (bad) clc cld cmp mov xchg inc mov scas icebp jp or inc inc dec mov int3 es lock into aam test pop sub les inc int scas jo enter cmp adc imul push fsubp cld das mov mov push clc movsl mov push jo sub dec xchg dec sti test mov enter movsl gs (bad) hlt icebp cmpsb shrl call jno mov jl sbb mov mov ret xchg and add dec sbb cmpsl (bad) call lret lahf fldt sbb scas addr16 dec jnp pop fucompp popf adc shr addr16 jne lahf mov hlt cwtl inc jmp test mov jmp js lock je pop psubsb aam add mov fimull insl ljmp cmp push pop (bad) lock ds das test adc aaa fcmovu sub and xor inc mov pop ljmp xor xor in imul push adc push ret xchg lods arpl add (bad) sbb xchg sub pop pop mov jbe and mov hlt fcoms loopne insl pop cld mov lcall cs stos adc pop aas mov ret (bad) mov jae cmp ljmp cmc add pop adc xchg fldt rcll imul rorb les addr16 and sbb call pop js shr xchg push dec jb sub lahf popa test mov dec bound lahf mov arpl inc cld xlat and or mov shrb add hlt adc insl insl or clc and das dec je cmp (bad) jno (bad) fisubrl scas mov dec pusha aaa jns sti sub (bad) sahf push inc sbb jg mov cmp cmp dec and push dec les push mov addr16 pop icebp lds aas xlat rcrl stos pop mov xchg jge popa mov or adc sbb dec js or cmp push jmp mov dec ret shr push insl cmpsl cmp mov and cli adc pop dec mov or xor adc repnz jnp xchg xchg lahf cmp inc sub lods adc loope insl test sub (bad) iret push cmc addr16 add das dec jl,pt or movsb push mov xchg insb cmp daa mov xchg pop mov mov cmpsl or mov addr16 mov cmpl push pop jnp in fcomps xchg lds mov (bad) sti and xchg out fidivl out cli mov popa nop insb aas fistpll push fidivr cmpsb iret and scas xchg cwtd je pop lahf sahf test push js mov aaa call outsl nop push shlb add or scas loope xchg test jp (bad) cwtl data16 mov push leave gs cmp repnz mov ljmp xchg addr16 lods jmp push sbb add mov inc and sub faddl and out gs orb xchg dec add popf cld push jmp mov add in ret popl xor sbb fwait mov mov or rcl adc (bad) icebp (bad) or into inc xchg push out jl mov cmpsb addb and dec imul cmp lcall sub inc xor (bad) mov inc aam mov test out (bad) ror sbb pop in or mov fwait pop sbb hlt xor dec dec shlb fwait inc push cmp lret or aaa adc stos pop mov pop inc mov lea in xor lret nop mov push ret repnz insl xchg pop call cmp sti dec or cmpsb add scas cli into mov jns and xor dec pop pusha adc loopne xchg test mov leave outsb push xor cmp fimul dec push push cmpsb les or adc jle rorl sbb fimul mov popl pop pop (bad) mov push push xchg dec jo inc fs repz rclb and int3 in repz add popa cmc ret in cmp cmp scas dec or jl add aas mov push push cmp imul rorl sbbb inc aaa xchg ljmp xchg jbe insl outsb jb repz fimull cmp jle jb push loope adc push mov arpl pop sub mov stc cmp mov push mov jecxz pushf sbb sar push jg cmc ficom out pop sbb xor xchg dec movsb rorb frstor jg outsl nop push push push dec in push jmp jp arpl jmp push or rorb addr16 (bad) lret dec mov sbb leave add addr16 insb push mov daa and inc push xchg fsubrs jnp mov (bad) std xchg aaa lods in and inc sbb adc jnp fisubr enter inc int arpl dec cmpsl popa (bad) repnz mov hlt mov mov int clc fnop rcrb subl sbb pusha pop test sbb repz in and fistpll stos mov sub adc mov cmpsb int jmp idiv xchg dec (bad) jne adc xor ret cli or test sub scas lea cmp mov lahf sub add and cmpsl dec or adc and inc lock cltd inc iret mov clc cmpsb loop addr16 sbb test xchg mov fs fs or out data16 xchg jae dec mov dec stc jl test push outsb mov imul popa enter adc cmp mov fs (bad) loop clc xor inc mov pop pop cltd fcomi loopne adc sbb out not xchg loope call and and sti in popa push xchg (bad) or jne adc pop movsb adc push lahf lods lods add sub loope ret adc sbb mov adcb adc out ret jns inc jns movsl in sub push cmpsb (bad) xor jle fiaddl loope aas adc inc out icebp loope xor movsl pop cmp lea xor and imul push xorl das cmp mov je mov jmp and push dec and inc adc push or scas outsb mov jne sub fisub jne js jae adc lods call pop xchg out sar mov call les cs adc sbb lea lock push loope fs imull jo and sti hlt cmp dec outsb aad in (bad) mov mov (bad) xchg enter mov cmpxchg mov push sti push push test (bad) mov mov movsl push adc push into mov daa iret lahf xor mov lea xlat mov popf mov das jle dec add rcr inc lcall add sub popa stos xor shl clc lret inc icebp aad ljmp cmp stos lret into push sbb lods fsubs lea mov in sub push pop cmp mov sbb xlat push mov fwait mov add cltd jle or fisubrl scas adc mov and fsubrs sti xor adc mov jecxz and ljmp push or int3 popa adc push out lcall adc lods cmc add inc out cmc sub fldcw xchg sar cwtl xchg pop xchg leave xchg push push adc jl mov or (bad) gs (bad) ss push mov sahf xchg in call xchg jle in sbb stos decl stos lret cltd cmp in sar cmp or sub mov add aad cmp push fild not popa fwait mov pushf add inc outsb dec xor mov push repnz push mov aam lret xchg push add add jnp rorb leave pusha call jbe adc (bad) sbb jb mov pop les xor mov dec xor lahf bound aaa inc (bad) sbb push out dec mov or outsb test jg test pushf shl or mov dec rolb jns push addr16 notb aas mov data16 (bad) subps out pop xorl xchg push insl or bsf sbb xor jp dec lcall aad sub cmp arpl push add jnp mov imul or add stos ljmp insb xchg dec xor cmp lahf in fwait pop mov (bad) iret jle jge add out xchg sbb lahf dec mov push jg cli adc or (bad) mov sub lods inc out sub mov pop in adc or add or ret xlat cmp scas iret mov jbe popf jo mov lcall into and scas add push sbb or cltd imul stos fstps sbb xor add (bad) stos incb fwait xor dec rcrl clc cmp fdivrl aad pop stos lret stc mov cltd adc ret adc (bad) pop js mov inc lea pop pop xor pop and xlat test inc sbb dec lock movsb out cmpsl ror and sbb sbb pop lods shlb ljmp lahf jo dec test fidivrl jmp jb leave cmpsb inc jne nop out cmc lret jns aas cmp adc or cmp loope popa rolb in push jge push pop icebp cmpsb rcrb in clc jecxz mov test inc push sar or insl out jl repnz call popf xchg sbb push (bad) negb int mov inc pop jmp outsb loopne pop pop dec lret mov outsl (bad) std cmc mov aaa arpl fldl push sub mov cmp dec repnz lods xor cmp (bad) mov sbbb and scas in (bad) lret push test scas leave push and cltd and sub sti test les stos scas adc xchg inc pop fsubs adc test setb in rcl mov push out cmp and stc (bad) shrl sbb (bad) (bad) rcl inc and daa or dec pop lret mov push sbb data16 mov jbe test xchg mov fimull mov lods xor pop push scas and push pop cmc mov fdivl daa sbb divb and push test btc out xchg jb leave pop mul fsubs add mov cltd fnstcw jmp sbb scas inc push dec shl movsb and cmp mov sbb cmp or lea jp cmc mov pop lret (bad) fldl sbb sub mov icebp xor and mov insl dec lret insl cwtl mov mov jo lret mov push mov mov cmpsb sbb enter in jns add stos testl add push pop cmpsl test cmp add mov dec fist lcall pop dec pop and dec outsl outsl stos and adc test push sub loope cltd mov cwtl gs sahf mov inc fwait xor push add lea mov push and jne repz jns jecxz (bad) mov in (bad) jae jge (bad) les dec pop sbb mov mov sarl sub or add inc popa mov mov lock hlt push pop (bad) xchg (bad) sbb sub (bad) or ret aam fcmovnb jge or mov push jecxz cmc repnz ret rcrb mov fwait push mov and add das ret mov loop sar mov (bad) out in xor test mov mov jbe lock pop out sub (bad) mov inc lret hlt cmp std xchg inc cld in adc cmp sub push data16 push out (bad) cmc loopne inc pop je mov pop bound sub mov inc mov cwtl ljmp in stc add cmp pushf je scas jo lret mov cmp fsubrl imul jl mov mov xchg movb jo or fbld jno notb add xor arpl test pusha sahf fnsave xchg push dec dec mov dec adc ret mov repnz sbbb dec or add mov add xchg mov sti (bad) out sarl daa movsl pop (bad) fs mov je xchg push xor or adc comiss out cmpsl jge sub (bad) mov movb out mov add sub push cld xor arpl test imul inc and lcall jg inc stc add std mov mov imul rcr icebp cmp inc dec mov outsb and add push (bad) movsb in sub sub es add out iret and adc pop ja inc inc sub stc mov sarb mov pop mov push aas (bad) push movsb hlt cli ret (bad) test pop sbbb imul lock roll pop and sub add out mov dec (bad) xchg loope sarl call mov adc xor data16 stc fsqrt ret and mov pop add pop and sahf cltd rclb jbe (bad) mov insl enter jo sti hlt aaa loop xchg push lahf arpl xchg daa adc fiadd repnz jp paddusw lods mov sbb sub into push sub (bad) jnp or lcall (bad) fs or fsts jmp loop daa cwtl daa pop cmp xchg mov pop pop lcall shr data16 mov lods mov das dec pop lea mov stc dec mov fwait jno (bad) jb out cltd add cmc mov es xchg loop fcmove add mov rclb int3 cmp adc test mov pop push adc inc dec pop dec pop lret push ret mov xchg loop mov sub sub bound cmp stos pop push push cmp inc mov icebp pop fldt pop imulb movsb (bad) int push bts stc int3 xchg dec cmp inc pop ret xchg and decl ss add dec loope add loopne int scas in adc inc test sbb andb fcoms mov xchg push push fs adc add jo jmp outsl pusha mov js mov inc sbb dec mov xchg js call inc sub lahf (bad) xor fbld andl dec mov adc aas xchg imul xchg and arpl cltd xchg xchg cmp jae inc dec and loopne stos insl and xor push (bad) xor fldpi inc dec movsl test sbb sbb pop outsl sbb mov (bad) push jns sub xsaveopt jns sti jb ja jns push sbb es mov sarl pop inc mov pop lock rcrl in xlat jp loopne gs inc aad ljmp sbb test (bad) xor mov xor xchg or add test lcall int3 (bad) sub pushf or test inc scas aad mov je add sub xchg or xor cli mov test aaa inc and xchg mov xchg sbb or lcall mov fisttpll imul sbb jne iret nop repz les push xor outsb add mov xor idivb xor aam and push leave jp insl lcall push ficompl xor test mov mov add and sbb inc fsubrp sti sub fnstsw test sti push pop mov int (bad) in roll lods addl arpl push mov mov aad cltd cltd mov mov and es (bad) pop push mov das dec (bad) or xabort xchg pop pop adc inc sbb adc and pop (bad) repnz xor mov cltd sbb pusha fs xchg fs xchg mov pop clc push sbb push cmp gs mov f2xm1 add xchg mov mov (bad) push and test sub cmp dec and jb and inc or mov cmp sbb jbe mov pushf inc push or fcoml mov outsb (bad) mov mov movsb in das (bad) ljmp nop push jae ja xor loopne loopne clc cmp call pop xchg mov nop add mov inc arpl xchg mov loopne out add mov mov adc in fwait push ss (bad) (bad) dec clc dec test cmp lods cmpsl jo (bad) jno dec push mov mov inc sub sahf mov sbb inc mov mov in xor out in pop push lock lret pop jb fs nop lret cmp xor pop out leave cmc mov aam ja retw sbb lret pop stos rcr sar jp add imul mov cmp jnp fs or lods adc and mov pop jecxz cmpsb test pop mov fcoml dec loope fwait pop movsl imul jbe push pusha jp inc jp add or or bound (bad) insb mov clc lock pop push mov clc dec loope call jb cmp pop jl and jp fcom out iret cmpsb dec push stos mov in add rcr lret xchg jnp adc loopne cltd pusha fsubs jbe orb sahf inc pop js lret jno arpl loope sbb dec pop xchg jb inc scas inc in xor jge adc mov xor loop sbb aad push xchg insb and addl out test sbb push call adc pop (bad) test dec test xchg sahf cs rcll pop sbb xchg (bad) out jns jecxz jb in xchg dec aad jns jle xor inc cli test inc jecxz stos les es jae and arpl ja jnp xor push cmp jb into sub (bad) and xchg insl (bad) ds loope fcmovnu arpl sbbl inc sbb outsl roll lds cmp dec sbb cmc out mov fcoms push outsl (bad) xchg in inc and pop pop fimul (bad) xlat popa cmp pop adc sbb sub pop push shrb and cmp xor lret jmp aaa sti (bad) in imul scas scas and add mov fidivl pop flds push inc dec xchg test pop int3 mov rol lods or sub dec outsl dec das push xchg or scas mov inc add xchg (bad) call adc sahf or jp pop jno in xchg or dec inc int into sbb xor sbbl sbb rclb jmp loop add out lret cmp push shl popf jno repnz sub jo (bad) fidivr sub mov or jecxz (bad) adc add dec cmp mull fcompl nop sub sub mov cmp lret jne decb xchg pop lret stc ret std and (bad) call movb jmp outsl inc fwait jne (bad) clc aaa (bad) mov cmpl roll shrl scas gs inc jbe inc addr16 mov lcall bound jnp inc pop pop fs sub inc addr16 sub add es jb nop flds into inc outsl adc cmp aaa test inc das or inc sar mov leave out sbb cltd or adc cwtl das imul mov adc sub jo mov xchg dec mov inc sahf add and bound pop fxch repnz add sub daa enter sbb cli div mov in xor and xor add pop js rcll sahf (bad) pop xchg icebp mov fldl adc inc (bad) mov lret test push cmp push xchg rol add into repz ret hlt out push cs jp insb lods sub out or outsb mov movsl dec lods adc (bad) (bad) jae and mov es pop cli pop in ja fcmovnbe lret xchg add and cmpsb jno mov mov mov cld lret adc jmp lods and inc ljmp ja mov fcomi push and mov pop jbe push ret popa mov mov ret outsl cmp push dec (bad) xor adc sub or xchg jecxz pop iret (bad) pop shrl ficomp in test lcallw mov sti jo rolb mov repz push xor or pop mov xchg fs and mul xchg xchg xlat jp (bad) inc xchg rorl (bad) dec dec adc fstpl push mov (bad) fiaddl xor cltd dec movsb dec cmp pop in insl aad jbe push clc pop mov fcom popf test or dec rorl mov cmpsl stc push push cmpsb (bad) push es in cmp sub cld inc cld or jne movsb popa jl fidivrl scas xchg imul sahf push int movsb cmp xor mov repz std nop ret add adc push adc incb push fisubrl add stos dec mov sbb (bad) cmp lahf push fidivr shlb and dec loop outsl mov xor or loope xchg adc mov xchg ja adc sbb jns adc mov insb lea mov sti jl rclb lret lahf (bad) mov xor insb fdivrs lret sahf aas mov lds push push xor sub aaa xchg add and ret (bad) hlt mov push jae mov cmp cmpsb lods mov push jns leave outsl adc cmp int or gs and xchg or pop popf andl mov popl arpl pushf mov pop lret jo and shll and adc insl push das xor (bad) adc mov mov pop es test add gs mov mov fadds xlat fwait mov scas es xchg inc pop fwait add loope jp jecxz pop shrb daa orl and lret pop inc and shlb popl das pushf popf out sub (bad) mov outsl add shlb xchg push dec xor hlt popf adc addr16 in xchg outsb push fistp adc xor jecxz insl add mov mov mov test es or ds pop pop lods sub test mov jmp jle mov mov or mov jnp lods push frstor mull rcll dec fsubl cwtl cmpsl popa sbb in cli push adcl lock das jbe pop (bad) xchg adc insb jnp mov outsb push scas pusha mov (bad) dec pop add inc push jb (bad) flds (bad) sti insl (bad) mov out push mov in rclb cli xorl xchg xor ss mov add imul loope mov inc cmp shl mov outsb outsl repnz xchg fwait cmpsb push movsl in lcall jno lods sub add jae subl pop jecxz push scas and ss cltd add or arpl call movsl xchg jmp daa jge aas test fdivrp push sub dec inc (bad) test cmc sbb cmp jecxz jg dec mov (bad) mov push jge lret je mov mov inc cmp mov cmp call dec clc jns mov dec inc movsl add or dec clc mov fdivp lock dec sbb loope (bad) ds xor test xor in scas adc push lahf xchg adc mov test jo cmp mov pusha jp cmpsl inc or or add inc rcrb mov fistpll aad ret pop xor or rcll xchg mov int dec dec mov loopne xchg mov cld popf cmp mov mov in sub fs or sub arpl jle rolb and cmpsb movsb popf ljmp inc add adcb push out (bad) rolb insb adc pop cmpb jp pop repz std hlt adc add std dec cs into rcl adc push jl xchg add cmpsl pop int3 sbb in out dec icebp sbb mov movsl mov rolb mov push push gs pop cld xor loope cli and sbb push fistp addl sbb movb and aas push testb jecxz arpl test je mov data16 sub sub insl mov pop mov adc sahf pop fldenv cmp out repz std mov daa and lcall je lds in mov int3 rorl lds inc push loope jb sti (bad) movsb dec int inc jecxz leave cmp xchg je inc adc repz dec sbb (bad) mov rcr jbe add lahf push ss insl xorb out sub xchg mov xchg jno cld mov dec sbb loope (bad) loopne cmpsl inc les (bad) push jmp lret xchg add (bad) ja fistl mov or lret fdivrl dec (bad) push mov data16 or stc sbb cmc mov paddq inc leave gs xlat ror adc dec pusha movl sbbb sti push mov mov push jp sahf outsl test pop in jbe cmp dec out sub imul les cmp pop push add or fstps or inc or add pop push dec jg pop pop shll shll (bad) (bad) out fs push shrl div sub call push inc pop mov push and sbb mov fsts leave es imul (bad) xor mov cmpsb int3 cmp sti sub insl add fcompl shrb fldenv sbbl hlt ljmp dec iret mov out cmp sbb inc popf sarb fstpt inc xor cmc adc fwait insl sub into sub cmp push jb out xchg (bad) mov (bad) sar mov jno test mov mov mov adc push mov sub roll and lock mov push adc es lods mov iret (bad) mull cmp jnp adc orb pop add fisttpl das scas shlb xchg jae in adc ss push popf push data16 cld aas test mov push inc test es lock enter push xchg push jno js arpl int inc sub fwait cmp cmc sub ljmp add pop enter mov cwtl hlt mov sub inc rcll ja loopne cmp scas sbbb (bad) ficomp aam jl push mov pop movsl pop push add jge pop and pop sbb fucomip cmc out and daa jo mov fimul fst sub or mov sbb dec scas rsm in stc and imul cmp push mov push adc adc xchg mov rorb sub fwait fwait test (bad) in xor sti (bad) out and mov (bad) test mov out inc xor xchg sub inc mov jns (bad) xchg (bad) xor xor out out not mov insl je (bad) xchg add mov pop jne movsb pop (bad) (bad) (bad) mov leave mov js pusha sbb sbb mov cmp dec dec sbb mov sub lock repnz xchg out cld icebp pop pop ret movsb test daa leave and and sub dec pop jb aas int push cltd xor push jmp mov ret or adc lods repz orb jecxz pop pop pop ljmp mov cld outsl (bad) outsb mov (bad) out movsl jns es aam in or out jae sub jne jecxz push loopne into jge inc inc adc push or pop xchg sahf ret lcall out aad lea negb roll mov aam mov mov xchg jne jne rol mov das ds or shlb adc lods popl xchg in push dec push lods cld test mov mov fimull push div sub lret out mov push jae scas jae into andb (bad) pusha shll inc and push test ljmp stos and outsb xchg call (bad) clc icebp xchg mov insl add pushf jns es sub mov add add ja sub aad jg inc cmpsb and loope mov ficompl sub xchg xchg js test mov mov ret xchg cld pushf lahf push dec push dec push jns fmul add push mov fucomi xchg call rclb and cmpl popf mov dec cmpsb push add lea mov push cmp rorl (bad) (bad) into mov pop inc dec sbb clc xlat insl fisub and (bad) clc xchg jmp (bad) jno mov (bad) push sub in dec mov inc imulb mov je xor cli push in in hlt mov imul jo pop movl movsl sub imul pop insl fistl fistpl push ret cltd xchg dec and cld cli mov notb xor fmull addr16 roll clc lret or lock adc pushf mov jns andl mov jp sarl add or mov addr16 pusha xorl dec mov add insl add js not lods mov pop flds rorb dec shr mov xchg call pusha adc out mov or lret dec ss fs loope sbb int and imul xlat cmp mov dec jno xchg sbb lods arpl and sbb push (bad) leave dec xchg cmc lret cltd rcrl mov iret lods inc mov sbb cli popa out (bad) mov stos (bad) loopne sub or mov addb out sbb gs mov cmp push dec adc cmpsl xor jo movsl idivl xor movsb mov test cs ficom inc push pop jg lds push mov and das fsubs cmp adc (bad) sti fildll fistpll shrb aam mov jb arpl xchg bound adcb add cs rol pop xor mov push mov (bad) xchg push test mov (bad) pop movsb and dec jmp jae jmp cmp sbb stos lcall cmp into mov cmpsb imul mov adc lock mov pop nop (bad) jg dec repnz or bnd cmp pop cld or inc pop mov xchg sbbb mov ror mov add xor add xor scas push je mov shrl mov test iret fucomp cmpxchg pop pop fimul aam pop push lret add insb mov test jno (bad) out ds push out mov fmul test fwait (bad) cmp mov es hlt pop mov stos jge inc fsubp arpl sbb roll loop pop fdivl ficoml inc xor loope xor das pop enter push mov addr16 call in out or push push push jmp js push mov push push mov leave roll insb out push and mov push pushf adc scas hlt test or inc shl and int xor insb (bad) jecxz push mov pop cli lock lods cwtl mov clc dec jl outsb mov xor jo dec cmpsb pop mov in mov je insl xchg mov cltd inc insl or test shrl (bad) ja sub imul push mov xchg nop mov add stos sbb inc cmc adc xlat test jle (bad) and mov mov pop and jb dec sub xor pop in insb push add daa push frstor inc add adc cmp dec sarb dec dec fdivrl mov mov pop enter push and mov popa mov or cwtl or or test dec test pusha add sbb mov adc dec adc stos ljmp stc clc bnd imul or lods pop jmp push jne pop scas cld cli jo adc push adc outsb jo imulb inc xchg xchg mov inc jp inc pop hlt push in xchg ds dec xchg dec (bad) mov test dec outsl jne cli dec mov gs or insb add test subl fistpl clc jl in jg inc pushf je xor xchg mov cmpsl test aam in push jae pop xchg aad fsts and cltd and and sti xor stc (bad) es cmp or into popa pop mov vmovhps es lahf inc jo or or push and lea mov nop lods ljmp mov or jecxz mov lret pusha xor les add sub jmp cmp push jmp push mov and jne mov sbb ror arpl cmp stos out aad mov loopne daa (bad) jbe cltd pop jae (bad) movsl mov in push add cmc xlat and out rclb scas in mov loop cli push adc cli sub or sbb lret or es cltd ja call adc xchg cmp and cmc stos mov imul fcmovb in mov pop xchg adc cmp fsubrp pop ja mov inc outsb push outsl jae popf xor mov push imul xlat ljmp fdiv std imul and cmp scas imul sub loopne sub lret push test into pop xchg mov lret mov (bad) xor fisubrl out pop sub mov mov jmp jle pop fildl mov push addr16 push fs lods hlt pop sti xchg inc out imul xor pop (bad) mov mov pop fstl mov mov mov ffreep lret scas sarb cld add dec xchg mov sbb ss hlt sub xchg push push stos mov adcl jo leave mov or push and popa sub or or mov dec test cmpsl sbb dec dec xchg lahf adc insb leave lods fwait (bad) (bad) clc ret loop inc fcmovbe popa mov or jg rcll inc mov dec sub pushf pop outsl cltd dec hlt xchg push mov mov outsb sti rcrl jo and or mov mov daa dec leave data16 add shll add (bad) lcall repz sbb add popa out sbb idivb cmpsb lahf xor movsl mov imul negb cmp loopne mov sbbb lds mov movsb (bad) int3 int3 and aaa fmul sub add out mov aaa sbb push xchg arpl pop adc cmp popf mov inc dec push aas pop std adc xchg add mov sub out fisttpll pop popa inc sbb je lods mov jmp clc dec inc and xchg lods pop cmpsl out pop loopne xlat out add aaa repz mov push lds mov into fldln2 rcrb or mov js mov fstp push fnstsw sbb test or inc add mov loop cmc data16 pop pop pop scas scas mov mov leave push mov (bad) jmp lea mov test dec (bad) jmp xchg icebp lret xlat mov mov ja pop pop mov mov (bad) data16 (bad) int and in fbld pop insb sub idivl in pop pop xorl rorb mov sub add jmp jge lods cltd push cmp lods andb dec mov pop xor (bad) or stos push or into and cmp mov (bad) fild mov adc push notl push les fisttpll push mov jbe popf cmp jp inc nop aad into jae mov test sub dec mov mov push faddl add fidiv test sbb xor pop rcrb out scas and mov sbb (bad) call jmp into mov xchg enter std pop mov lret dec lods ljmp jge xor xchg pop cld loopne ja cmp add xorb cmpsb xchg scas clc decl ret sub xor movsl add mov clc sbb adc pop add jno pop sbb jno lahf xlat out jne sbb xor push ljmp testb add icebp js and push fist fwait (bad) out clc sub pop aas or cmp or imul sbb inc sbb mov icebp ljmp adc cmp and aas push cmp cld fisttpll pop nop (bad) xchg test xchg iret inc es jecxz mov mov int3 add adc scas outsb mov or daa stc xor or aas es push fstpl call and lds and and add sarb int inc repnz xchg sbb in inc gs enter test mov push shll cvtdq2ps cmpsl or in dec and push inc insl cli mov sub lcall cmp cld or in jb enter jge lcall (bad) push add jne push fidivl or jle lret xchg jnp rorl pop jns push scas add (bad) (bad) sbb ror jg addb popf aas jb inc stc lods cld cs test (bad) call ja (bad) sub insl or mov stos into jbe push push mov sbb jge mov inc dec loopne dec incl (bad) call mov adc xorl popa adc xchg sbb test lea out pop loop int (bad) mov lahf lcall rolb mov ror stc mov push sub and cmp test andps sub enter fisttp cmp call sub jo sub cmp mov notl aaa pop xchg mov clc sub xchg int adc fcompl xchg out xchg in cmp mov mov push bound sub pop push mov lods mov mov leave or sti add pop (bad) pop xchg rsm test mov jg lods fisttpl testb pop inc scas idivb add fldl std in stc enter or sbb sub imul cli pop cmpsb rcl mov test jo adc pop ljmp pop mull daa mov xchg jno,pt aas mov and cmp sub xchg jnp xchg mov dec dec icebp int3 or insl les xchg adc inc dec add lds int3 xchg (bad) pop (bad) aas insb aam xor dec aad std dec rorl mov pop xchg xchg dec jno js inc mov stos addr16 popa and loope fbld inc es jno test jns mov popf cmp adc test repnz movsl mov out adc call or hlt add pop stos push fadd insb andl cmc je ret lcall movsb je sbb mov jae aas (bad) (bad) aaa loopne jb inc shufps push sub lods pop xor fldcw std sub lock loope or jae pushf add push lret pop dec mov push out insb push ffreep push mov xchg or jl pop ret pushf lcall and stos or pushf mov sub jp fnstenv inc (bad) call xorl insb or push push jns xor clc mov and les sbb lahf in or xor ss insb push push and sti lods (bad) mov fs insb xor (bad) push xor js fdivrp sbb jl sbb stc inc lahf lea pop lcall jmp shlb mov leavew mov (bad) mov inc popa xchg push inc pushf pop xor rcll push insb (bad) mov cmpsl andb in (bad) or push adc pop rolb stos cmp mov les clc and xchg or pop xchg lret in mov mov inc or outsl adc mov inc lods std in jecxz lret rcll inc into fcompp sub pushf add jb mov sub inc pop inc dec inc andl mov lods jno hlt stos nop or imul mull leave enter jecxz xchg xor adc adcl inc in dec in sbb xor jmp xor adc pushf icebp (bad) xchg insl popa aad jo mov dec or mov mov jne inc adc ja scas dec call fs call push mov popf mov jle inc sub (bad) aaa sub xchg dec push lock rcr addr16 pusha retw lahf enter mov pop sbb xor gs xorl js repz and fimull or (bad) jns adc in xlat ss imul scas and cwtl mov ss mov arpl or stos sub jae dec mov int sub lock cmp xorb jno ret inc fadds rclb addr16 insb aas loopne mov pop (bad) sub dec mov sub dec xor test mov fisttpl pop dec scas loopne ret icebp xor fsub jg test cld dec inc pop cmp movsb roll jmp lcall sbb test test add sub push sub add jp repnz cli test xchg adc push test insl xchg stc sahf aaa xchg cmp repnz add push out mov or adc xchg sub mov arpl iret cmp into dec es adcl cmp rcll xor loopne push inc jmp mov xchg (bad) pop mov (bad) xchg scas call in test lret enter adc bound cmp mov popa sbb mov int3 cwtl cld insl sbb add sbb dec jge xchg in mov push mov outsl (bad) stos add push fist sbb dec sbb orl push repz cli leave or outsb fnsave in repz adc pop sub jbe div xchg lahf xor xor std lret inc fisttpll push (bad) lcall sub shlb xchg stos sbb (bad) jbe push sbb xchg mov mov inc dec sbb jb insl add add insb pop mov das outsl lock enter mov (bad) jbe mov daa lcall jge push arpl mov out xchg mov or xchg shrl scas repnz lea mov jmp lods push notb push aaa rorb jnp (bad) push stos stc sub jmp mov lods push and lahf xor rorl mov into jge sbb push xor nop test lea imul sub dec push mov inc rclb out fisttpl and or jo mov or push xchg jbe inc push loopne inc outsb insl (bad) out int fdivs mov pushf xor sub and es movsl inc sbb xorb cmpsb and and mov mov fabs or in pushl mov bound cmp inc jle push and jo xchg (bad) icebp add or push and xchg xor movsl stc out fstpt xchg and loop test rolb imul cmp push cmp out sub mov scas call test (bad) mov stos or mov loope jno clc popa (bad) cmp bound fnstenv in fidiv dec stos mov fwait (bad) fxch lcall inc jnp ds (bad) mov jnp aaa aaa ss mov (bad) fdivrl jmp popa fwait or lret dec push out push jo dec and mov in (bad) or pop sub dec inc mov pop xor dec xor fisttp sbb cmp jge dec adc addr16 outsl push loope mov inc xchg cwtl lea mov mov ret jmp mov out icebp and dec movsb jns jmp fwait add stos mov mov lock sbb icebp jge sub ljmp lahf aas adc dec adc mov and pop movsb mov mov cmpl addr16 lret addr16 push stos sub nop or jo dec into lret adc test jb mov jae aaa mov pop sub jl ds xchg fistpll arpl cmp jns mov pusha add call andb fbstp aas fwait mov and outsl cld enter test adc fbstp shl push les dec inc aaa mov xor xor mov jmp (bad) repz movsl aaa dec aas dec or lahf push popa out xor sub aas and test push cld fstl rolb or push adc pop mov imul jno sub ss jnp call cltd pop jg jl pop jl adc cmpsl fisubrl out sub movsb sub mul daa mov loope js (bad) fwait inc or xor and or repnz outsb dec mov add in fwait jp push std std and xchg insb stos add mull adc test xchg (bad) fs pop cwtl rcrl cltd outsl jmp lods outsl les jp lahf outsl mov mov shrb mov scas jns jl inc scas mov and sub cmpsb xchg xchg mov push popa pop cs (bad) je push into sbb push push lods adc xchg xchg aas pushf test mov stos mov ret sarl clc lahf adc and shr or fimul insl mov fadd aam in pop cmc mov sarb mov sub aam jno mov add adc dec mov mov stos pop leave sbb add pushf dec out aas xor je call push xor jl insl xchg lea (bad) (bad) pop push scas sub jg lods add adc (bad) int3 mov or sbb push lods pop xor pop xor shl loope fbstp push mov mov nop sbb or rorb ja cmp je adc jno mov lret jg lcall or pop outsb in pop mov jne out cmp mov sbb xor adc pop mov adc dec fisubr sbb cmp or inc outsl inc xchg push out dec adcl mov jno nop jg xchg inc pushf ds inc testl inc pop add fstl jle jmp push es popf rorl loop lods mov rolb mov test mov lods in pop cmpsb cmp xchg mov sub cmpsl out stos or or mov test dec mov adc ss out pusha nop jg cmp inc out add mov (bad) fisubr jp cld in add mov adc out lds (bad) adc popf loop into out cmpl mov scas cs in js adc lods and imulb (bad) xor cmp js adc into pop js push push or lcall add xchg and cmc test sbb and or dec lea cmc (bad) xor clc push enter call mov pop inc clc inc dec push jo xor cwtl or in aam sbb or das mov sahf inc stos add ret cs pop loopne sub aad dec or call xchg dec popf inc mov int3 int3 (bad) scas push or push jp cwtl xchg lahf sub xor lcall daa mov jnp andl loope fsubs push sbb mov (bad) subl hlt fldt xchg stos and imul scas movsl xchg push in out xchg aaa mov nop cmp fadds shl sbb sub push loopne adc mov adc (bad) mov rorl push mov inc ljmp pop push scas xor ffreep push xchg sub and cwtl push aas xchg cltd mov stos sbb sub loope jl pop sub cld or inc sbb sub aam xor out add fcmovb movups mov cli sti push mov test mov outsb and sub cmp nop jb mov xor and jnp ret mov inc sub sub cs pushf xchg sub and popa cmp mov inc std push iret and test xchg jmp or loope mov xlat mov int fdivrs pop mov cmp cli (bad) popf iret mov adc add imul fcompl (bad) sbb pusha ret add fildll sub and mov inc mov loopne lods int les sti cmp xor pop xchg (bad) cmp lcall and (bad) fstps and das rorl loopne nop pop std lods jecxz mov ljmp mov jae gs jne in insb jo dec inc cld dec div dec ds mov adc dec aam fs xchg add mov sbb inc jnp orl into lock xchg mov pop ds cmp scas and outsb jns adc xor sub or adc ja in insl cwtl cmp in (bad) mov out into aam popa outsl (bad) out mov fdivl or inc pop sbb subl loope inc scas inc popf lcall add mov mov lret jae fmull sbb dec lahf call aam mulps dec push popa dec rcrl insb cli incl xchg pop rcr jecxz inc fcoml sub test mov decl and imul lds aam into imul ljmp sbb mov pop fldcw push lret cli scas sub fbld stc rorb inc pop lock mov jge push add jns pop das imul arpl jno insl mov mov popa inc pop xchg dec and jnp aas and dec mov mov loop xchg mov mov and mov ss (bad) cld xchg or pushf pop int3 cli fnop mov in jp mov (bad) push add sub popa iret mov push xor jl push subb pop out push pop std xor insl test xchg call or add outsb je mov adc mov aam mov outsl mov xchg loopne mov mov xor pop (bad) paddusb sbb mov and mov popa (bad) mov adc pop jp (bad) mov push scas (bad) jno xchg xor sbb sbb mov gs mov movsb in mov dec sub scas adc in lea rcr xchg add arpl xchg sbb sahf pop adc sti int mov jbe lret inc rcr xchg push mov pushf pushf (bad) fsubl inc cmc xchg cmp xchg xchg jbe (bad) imulb int3 loope rcll sub pop jecxz push cmc pop adc (bad) mov pusha lret jle or movl add jne icebp cwtl icebp pop mov popf or push sub fidiv xchg out or inc add mov or adc adc lcall push int3 sub push jne add cmc inc xchg subl inc dec cmpsb test mov cs test aam das xor ja add xorl jg fdivs sti out fsub mov lods sub sub (bad) nop outsl aam shrb mov adc sbb rol (bad) js dec adc cli mov xor mov cli jle dec in jns ljmp arpl (bad) xlat cltd or sbb and clc lods enter mov fsubl and adc cmp push addr16 cmpsl jecxz add gs (bad) xchg divb (bad) fsubr pop mov rcrb ja xchg shr push leave xchg jg sub cwtl ds aas mov (bad) int3 mov pop or lcall cltd and les add movsb cmpsl in inc or mov and arpl pop mov dec jmp fimull add inc mov rorb lea loope sub jge jge rcl mov mov sub add sub or neg (bad) mov roll pop mov ret mov arpl mov daa stc stos scas (bad) icebp xor mov aam push cmpsl xchg add out lret dec clc cmovl stos adc test test mov sahf dec ss fsubrl scas dec movsl sbb sbbb pop rcl (bad) popa negb ljmp addl mov mov xor add ficom push xchg fstpl jbe or pop popa xchg dec or rcl dec mov lea sahf mov inc push mov out push (bad) or mov mov repz test mov and mov and loope rcl ds roll cmp shrb dec (bad) call addb daa add sbb and inc adc mov push pusha mov adc xchg into add das sbb push enter (bad) sar mov ret cld call mov popa shl enter arpl loope repz or or add add xor (bad) jo fsubr lods sub or sbb repnz jns sbb push (bad) xor pop dec add pusha movsl xchg add push dec lock shrb dec imul pop mov cmp xor rcr mov add mov popa pop adcl movhps add jno nop rorl rclb mov jl mov or cmp mov xor xor sti dec loopne add cmp lahf aad and lods iret mov and das ja imul and insl lods dec xchg mov jp sti adc xor mov and pop xor ds jbe and pop int3 push fwait lock sbb dec push aam rcll or lahf push (bad) cmp inc pop mov cmp mov pop push stos sti jb xor pop xor addr16 jecxz xor ljmp jmp adc cmp xlat sub fisttpll jo adc shrl and or mov repnz aaa mov int3 xchg pop push or shrb add loopne and in xor subl fnsave sub andb pop and jns lcall fwait fwait jae xor xchg insl jge daa dec cmp xchg fucomip lret sbb ret fisubr mov leave xor ljmp mov push loop jl test test data16 movsl popf and cmp sbb cltd push test movsb (bad) fistpl call mov sub repz dec jne pop ss jg xchg mov js les mov add lods outsl gs lods xchg (bad) jo ja stos pop mov mov dec adc repnz sub mov jg cwtl sub scas out add sbb push jbe add add lcall iret dec nop lcall sti imulb lret pop jae mov mov test lods sub inc (bad) push scas dec das clc inc lods mov enter mov cmp push mov lahf fldenv rcrl test fmull fmull sbb cmpsb add push stos lods addr16 mov mov mov mov cmp popa xchg fisttpll mov ficompl imul stos pop xor (bad) mov and sahf or gs call or mov int mov sarb cmp jne hlt cmpsl aaa (bad) in out and test push mov cmp int push (bad) sbb adc mov sbb pop std pop xchg or push movsl popf fwait push gs dec (bad) int negl ljmp xor xchg and mov lods sub cmp cmp xchg sbb add xchg lret test mov lcall mov xlat push adc out fprem1 push (bad) fidivr xchg ds std dec push dec ficompl jle movsl push sti dec repz stos pop jo lahf das mov loopne pop loopne sahf and in jnp outsb (bad) xor mov rol jns lret push xchg insb rcr ss scas shll cmp lahf jns sbb ret lds out dec fs cld xchg push fnstsw (bad) dec push mov pushf popa imul lahf cltd xor ficomp enter jne pop mov mov mov btr lods test xchg sbb add das cmpsb stos mov sahf (bad) push ss cltd mov push test cmc mov jp jo,pn aad pop movsb mov ljmp arpl push dec stos mov aaa adc test movsl inc mov inc sub mov stc adc lods test stos and ret pop sbb jmp cmp push jmp lds lds push jg mov and icebp es add sti arpl lret notl nop xor out test lods push aas push dec insl cmp stos stos pop test loopne outsl dec jl imul divl icebp sbb xor sbb or (bad) or outsl fistp popf loop xlat adc aas adc inc add (bad) insb sub jl outsb adc and push int (bad) jnp lods repnz (bad) rorb jmp stc cmp test loope jle sbb (bad) je js pop xorb pop add in js mov push pop je mov add call pop inc adc xchg push addr16 out mov and add jge and adc test sbb cwtl mov sbb jb (bad) (bad) mov int3 mov mov lahf jmp or cmp jle mov insl and mov call cmpsl test sub ds inc jg xor mov push cmp popa popf (bad) mov lret ds cmp pusha std fsts jle scas push sub rorl ror jnp lret sti fmuls (bad) mov fs xchg or pop cld add dec orl adc xchg (bad) xchg add aad mov repnz cmp rolb mov xchg fs pop cmc lods cmp test data16 add aas icebp jmp sbb enter adc mov sbb jl je push outsl jo dec call jbe or push dec dec dec jns pop leave mov je push les cmp (bad) add data16 in sub mov cli mov hlt (bad) int cwtl xor sub out push aaa inc cmpsb (bad) shl pop add adc fucomi ds pop dec and dec iret (bad) js out xchg push fsubrl stos jnp rcrl in (bad) jb pop push mov aaa mov sar int3 fsubr lahf scas imul mov aaa aad push jnp incb or sub addr16 stos stc lcall clc cld cld xchg push mov gs or xor push pop push stc fist sub popf out add inc xchg dec out jns add lcall add inc pusha pop sub cwtl into sub mov xchg adc mov and nop jp mov dec xor mov data16 dec jl test jle popf mov jne cmp insb orb dec and pop movsl ja sub add push jae pop std mov fwait inc sub and jmp loopne add scas push pop xchg pop jno pop aam sbbl inc lods in stos and movsb xchg das lea scas cwtl mov add add inc cs ljmp mov test roll cmpsl outsl js (bad) cmpsl cmp dec ljmp test stos imul xchg mov stos sbb into aam fidivl push fadds lock roll stos in inc roll jo rcrl or lds pop xor add bound gs (bad) mov inc and mov data16 add call cmp jp in imul adc shll imul shll and or jge ja das jl in mov daa gs rcrl divl push test in cli xchg stc inc inc int push das xor pushf lods lret (bad) in cli fbld sub rcrl cmp lcall cmp mov shll xor cwtl inc inc dec push pop inc pusha lea addr16 jbe loop add add and or mov pop push sahf sub dec xor fsts ficom repnz test dec fisttpl enter lret jo lods (bad) lock in mov dec dec mov or xchg jmp (bad) cmp mov inc mov xlat or fldenv lcall int ret enter jo push mov xor pop jle stos inc movsb xor fdivrl nop push mov dec pop sbb dec dec or insl int3 es sbb cmp and ret test add sbb inc xchg das icebp test pop aaa cwtl inc in mov in andl sub stos es jno pop push or call pop jne jmp pop or or mov les jne decb dec stos mov xchg inc fmuls jecxz in or push xchg pop addl add lods adc mov scas loopne jmp cwtl shll cmc sbb test jno cmp out sbb cli icebp push push pop jle mov and movsl push or nop lcall inc mov movsb jo pop js ss imul jbe cmp cmc fmull mov and mov push xor fnsave sbb jmp adcl sbb dec adc add jno xchg movb dec out xor loopne rcll ror into mov pop nop push push sub aas mov stos int3 inc pop ja cs lods dec fistpl mov sbb data16 sbb fwait mov add aaa inc pusha and sub in add aad xor jg cld leave sahf dec (bad) dec adc mov cmp imul out fcoml mov jo fidivl negb imul sub cwtl jnp aam imul inc mov push dec sbb inc clc (bad) test lock shrb pop ds cmc push sbb ss sub in pop or into imul leave lock dec xor lock gs les lods dec mov (bad) mov dec daa add jo mov nop xor xchg cmp and adc mov inc fildl negl popf pop xor xor popa out int ret cwtl xchg je je mov out sub sbb xor mov pusha popf lods scas mov push std fsubr daa adc lcall shlb mov jge daa cwtl mov sahf push xor (bad) jbe push int3 (bad) xchg or xor (bad) lods ficoml dec fsubrl shrl clc call cmpsb test dec aas push push insb mov mov pop sub pop mov (bad) or scas (bad) lods stos (bad) pop mov sbb mov mov les addr16 cmp adc (bad) lds cmp pop out push xchg aam int3 mov lret sbb inc fisub lahf lea pusha cmp mov or push push jbe movsl test sub sti repz jle test roll pop cmpsl pop test sbb inc inc int mov sbb sbb insb cmp orb cmpb adc pop (bad) push leave jne scas (bad) xor mov ret aam out mov dec mov xor loope addr16 push fmulp xchg inc add pop mov mov ds enter push pushf mov sub pop ljmp jbe sub in mov loop clc in addb dec dec nop sbb lds out jg mov loope or push pushf jno imul mov mov xchg jb inc cwtl mov sarl jge imul and lret dec xor pop adc mov sbb (bad) enter cmp cmpsl adc imul fcoms xor push test pop pop mov or fs cmc ljmp ds repz call mov into cmp or daa add fisubl lret cmp test add das (bad) icebp outsb imul sti fsubl sti lahf out pop push inc sbb pop lret pop mov fwait dec sbb push icebp lret sbb (bad) stc lcall dec cld xchg divl mov push cmp jb (bad) out push pop ret mov pushf add mov in ljmp pop ljmp and repz mov shrl mov (bad) jbe sbb mov int3 test mov int jle loopne sbb mov lcall test jge sbb enter shll rclb pop in add cmp mov cmp push cli dec sub sub add (bad) sbb mov lret xor cmp jae test sbb mov (bad) int xchg jecxz mov ljmp insl int (bad) inc test mov xor sub stos lret cltd lcall fsubrl add pop das cmp jmp sbb in aam add pop sub jbe xor inc adc cmp sbb xchg and cmpsl mov clc add push arpl cmpsl jp sbb scas mov jmp push aas hlt xor lahf adc (bad) sbb push (bad) cli in lods into mov aam pop das adc pusha sbb jmp dec pop mov xchg cltd (bad) aad aaa xchg mov ja jbe add cmp sbb fcmove cmp mov and addl in mov xor stos lcall cmpb pop cmp es xor cltd push add iret cmc cmpsb xchg cmp dec arpl xchg addr16 imulb mov xchg xchg fadd out jne mov ficom imul xchg int3 pushf ljmp or ret mov cmpsb data16 aam lret pmulhuw lea inc sub cmpsb cmpsl (bad) sbb sahf dec jecxz mov cmp jne cmpsl push and inc xchg mov jp push sahf lret sub mov shr jle in aam insl push mov or lret imull push add rcll outsb jge pop notl lret mov ret xor pusha mov cli ja mov sub pop sub std lock mov add out idivl std jg cltd add cwtl (bad) mov sti lcall add and subl inc dec jo insl cmp mov xor mov jmp stc jge (bad) pop pop out pop pop sbb adc push bound loopne xor popf dec xchg jecxz jmp repnz dec lds lret cltd mov es out jecxz push xor pop hlt sub test xor add cmpsb xchg sub (bad) js daa inc ficompl sub and pop sti inc dec inc pop leave test in (bad) aaa stc adc fiadd inc es dec movb mov pop cmp stos (bad) ret cmpsl std cmp arpl decl sbb xchg pop insb loop xor add dec dec in lds or fimul mov (bad) jmp data16 mov sub mov lret add icebp add bound imul clc fmull inc test aad in lea xor jbe (bad) scas lcall (bad) jg data16 lods cmp fs imul lahf test mov jle in outsl leave add testl xchg test sub push mov test fs xlat inc repz (bad) int loop push aam push sti outsb stos jge cmp sti stos pop cs enter xchg add xchg (bad) pusha lret cmc cmp mov push cmpsl and aad pusha or out mov inc push fdivl shll dec mov in push adc stc mov test push sbb push in shll xchg divb pop adc in repnz push repnz jmp pop mov in xchg xchg add notl clc out jl and xchg pop or xchg cmc insb push fstpl cs cmc sahf sbb enter xchg jne and push mov add imul mov xor or jmp dec dec sbb inc push adc jg cmp lret shrl ss in jecxz sbb cmp sbb push mov cmpl adc mov jns sbb sub lcall test int dec push push fwait stos mov jbe std andl pop and mov mov sub cmpsl movl (bad) (bad) int3 mov cwtd jle test (bad) cli pop xor fwait in jl push mov ja jne pop data16 jecxz out int3 jle cmp push mov (bad) insl (bad) sahf in push or xchg lahf std lret popa mov inc cmp jg test pop or mov rcr xchg inc dec pop dec adc test mov cmpsb mov in xchg xor sbb fldt jl jge sub fdivrl ljmp fildl xorb icebp jmp or call and pop push stos mov sub iret xchg les xchg sbb hlt fs xchg adc cmp pop jecxz xchg jg mov adc jb,pn int3 push lea fimull sbb and pop (bad) xor and sahf inc push inc dec dec sbb and popf sbb jmp cmpsl sbb cmp mov lret mov (bad) xchg aam enter add icebp xor cmp and loop mov cwtl push or xor mov lcall mov daa mov (bad) enter jno mov jo (bad) cmp adc inc in sbb inc jae push out loope cmc cmp imul jmp mov sti jmp and add inc sub int3 andb fstps cmp pop mov sbb in dec nop jecxz push sub jge dec lret fnstsw mov jns das xor stc xchg dec jp pop xor jle out movl insl (bad) icebp rcrl std jmp add adc jae sbb xchg out aaa cli push int3 pop push push icebp arpl inc imulb nop cltd je or sarb push outsb cmc cmp leave push cmp push mov lock cmp or and jne int loopne daa fist adc (bad) inc xchg pop int adc ja jae sbb mov mov nop inc mov sbb xchg cmp cwtl cld in cltd push add push leave pop pop test stos sarb rcr xor sub inc and and call lcall outsb pushf xchg pop inc mov inc mov sub iret or and adc fldt dec shrb pop and (bad) test mov lahf mov xchg (bad) icebp fcmovnbe sbb adc sahf xchg cmp push adc nop std mov jmp imul insb cmp mov ds jno xchg out lahf out gs cmp cltd mov cmpsl xchg mov test push lea out loopne cli pop jbe jge lret jnp push out (bad) fsubp mov sarb mov dec and cmp outsb or std (bad) sbb in adc mov push shr pop out ljmp pop shl in inc xlat add xchg dec movsb lock pop inc lcall sarb inc in or aas xchg test pusha mov ds pushf mov popf insl js adc and pop in aaa pop cmpsl cmp inc popf loopne dec and and or adc mov test aaa lods loopne std xchg lods cmpsb movsb repnz into jle jnp jmp out adc insl fs movl jbe mov cs rol jmp dec mov mov ss sub loope mov mov (bad) out das cli ss dec in jl mov and mov and jecxz sbb pop mov mov lods mov shrb and aaa fisub pop sub lods lods sub xchg push sub stc lahf cmp fs xor adcl test cltd cmp imul inc test fbld push mov mov mov aaa xchg add ret sub cmp xchg mov xor dec or cmp sub xchg xchg icebp stos dec cmp int cmp dec jecxz rcrl sub fcompl dec test sub and jns leave iret loopne imul sbb (bad) jns adc add mov and fisttpll and jns mov les pop or jnp int3 cmp inc (bad) scas rcl mov ljmp rcll repz das outsb xchg loope pop or sarl enter mov mov pusha sub cmpl lret xchg pop mov mov int3 pop in inc (bad) out into add inc push jg cmpb mov movsb cmpsb xor cmp imul or leave dec xchg mov fisubr (bad) mov or mov movsl lret add ljmp lcall lods lods aam movsl repz inc or bound sbb push pop pop jb mov fild jmp dec cmc sbb push push scas inc scas xchg gs lea aad pop aas jecxz pop test andl aaa aad inc test and and push cmp xor test stc shrl into cmp aaa and adc fwait cmp adc test mov lods cmpsb pop scas push xor lret mov sbb xchg hlt xchg movsl fldt jno xor iret loopne push fisttpll sub pop jp ret frstor push cmp xchg std and inc sub aad xorb ja fcmovnu arpl and xchg stos xor repnz pop in out mov mov push inc add bound and hlt mov loopne sbb cmp fs push in (bad) push xchg ljmp rcll in stc mov sbb stos ficomp sub lahf test shlb test pop lret cs jge out pushf icebp jp scas sub or out mov lods jns cmp and push js mov mov inc sbb rol fidivl aad or lea sti and aas enter daa lret inc push aam popf int xchg loop cmp cmp adcl sahf into sub add mov dec ffree out cmpsb enter xchg pop out cmp cmp xchg in outsl es mov cltd out add and add mov movsb xchg push stc jecxz or push clc inc mov fcompl mov and add mov outsl or bound lods sub sbb push jae jne fiadd xor rcll lods lods jecxz cltd loope or aad xchg out pusha leave xchg ljmp es imul xchg aam ss and inc ljmp pop or mov push mov mov stos das sub adc mov pop popa and les loope hlt push xchg outsb pop pusha pop push and sahf mov fldcw pop fwait or insl out push push add add (bad) repz out ret xchg fidiv xor or loop pop (bad) xchg (bad) pop fldcw sti (bad) (bad) arpl jle call call xor std add sub cltd test adc cmp mov and movl aaa outsl sarb lods mov mov sti sbb jns and mov jns pop jb loop ret mov ds sub ficompl jle inc mov mov cmp and lcall jbe inc pop out mov or (bad) shll cmpsb push movsl mov pusha imul addl jbe mov fcompl mov xchg les loop xchg add jge fbstp jmp out gs jge sub lea insb hlt and pop xor fprem pop inc mov lock jecxz cmp into pop rolb mov pop dec mov stc int (bad) xchg push xor arpl mov in inc cmp mov xchg mov orb or mov test mov jp fwait adc cmp or popa out pop sub pusha push sbb and mov sub call push mov jmp xchg and adc dec fidivr int mov fiaddl inc lock and clc jp lcall cmp gs add dec out repz jno jno dec mov push push and lock or gs cltd fimull inc movsb jno rdmsr mov dec xchg scas xchg mov push mov lea cmp movsl cmp add addr16 leave mov sbb test mov testb adc mov int3 aam adc or mov imul jo mov add pop int fmull adc loop test rorl adc and outsl adc mov pop stos sahf clc dec sar push xor jmp cmpsl push xchg mov sub pop addr16 call mov int3 shl jl jne mov bound ja sti mov (bad) out clc gs clc adc iret fbstp push push imul pmullw add lea jae fisttp and notl dec int je push inc orb cmp mov sbb mov js xor in push cmp ds pop aaa xchg test test int movsl ret push xchg enter ret into cmpsb inc dec mov aas imul mov iret xor cmpl into sbb jb out addr16 adc or dec stos jbe push ljmp push std push or xor push movsl cmp hlt adc mov rcrb cmc lahf cwtl pop iret jbe mov cmp ret cmp out out pop xorb sbb sub jo dec int and imul mulb das test mov or sub ja ja fldl sub arpl cmp aas fcmovne mov int3 aam (bad) mov popa xchg data16 dec mov sbb cli aaa and insb sti jle stc fwait mov pop pop imul add mov xor loope push lret xor xor lret dec pop loop cmp lret mov shr addb jae adcl movsb pop icebp (bad) add jmp fwait cmp mov inc data16 cmc cld push jp jg mov mov das pop sub shll xchg dec int3 xor ret icebp shrl push repnz cmp cmp in push xor mov inc sbb pop xchg cs mov xchg loope inc stc call mov clc mov std pop adc jcxz fwait and in loope (bad) icebp std loop sarb rcll sbb sub das mov popl outsl jnp jl dec pop mov push xchg dec nop add pop jg jb and push jp dec mov outsw fmuls fcoml mov jne loope sbb loope and mov jns cmp cmp pop jp mov inc jmp cvtdq2ps dec lahf add test cmp cmp push loop fs mov cmpsb sub fcoms test ljmp stos add int imul pop int3 in adc pop jmp pusha in lret jp inc add xor andl mov sub cli sti mov bound jmp pop mov push jbe sub scas xor jge loopne subl xor and mov xor clc (bad) imul loopne popa add das out inc mov push jp adc pusha cmpsb jnp popf cmc lea loopne pop dec aam int lahf ljmp or imul dec xor xchg lcall les push add (bad) enter push (bad) repnz (bad) and sub scas (bad) cmp fstpt test sbb pop outsl lods dec sbb push and pop push mov rclb in sbb popa cmpsb jp,pn insl stc int3 push aas jbe out mov xor lods les loop sub stc loop dec loop (bad) imul repz fimull sbb push dec jecxz cmpsl sbb adc dec cmp adc add or sahf lds stc mov dec or ror mov or and dec cmp pushw sub ret lods outsl push adc add hlt add int3 add cmp jo adc out mov jg mov mov xlat daa cmp (bad) arpl inc inc dec dec aad or inc outsb inc clc pop mov clc cmpl xor clc sbb dec in mov mov mov and sub cmp lock out xchg aas hlt lahf hlt movsb cmp or (bad) leave pop aas stos insl xchg out (bad) mov xchg out pop test lds xlat imul dec dec xor ficom pusha js xor (bad) in dec sbb jge xor std jecxz or daa mov and pop int aaa popf xor lcall lret scas (bad) hlt jl mov mov inc jle aad mov pop xor jg mov ret lahf dec mov jge mov push lahf jnp lahf mov lahf aas lods or adc pop mov inc xchg scas lret push aad jle stos mov jnp andl sahf in inc aas inc jge arpl mov out mov adc push push cmp cmp inc xchg dec in jl rcrl inc mov mov (bad) out inc cld sarl dec icebp fs test fiadd adcb jp cmp inc sub xchg fcoml push mov mov pop and ja iret mov xchg sbb mov test loopne cmp lods xchg dec jnp adc mov sbb push mov and subl cmp int3 push scas inc (bad) or (bad) pop (bad) outsl test mov push add stos xchg addr16 mov and inc xchg jae ret adc pop inc and shrb pop in inc cmc out jne push fisubl mov cmp mov shll loop sub sti fcompl sbb and mov jmp lret mov jbe xchg mov mov insb hlt in mov mov clc and dec and pop rcl mov addr16 xor cs fnstsw cmpxchg pop add push mov and sub iret jo in jb inc std mov dec fsubrs push mov (bad) xchg lods (bad) dec scas inc and out cmp sbb fimul stos insl dec push clc notl scas mov loop cmp out cwtl fisttpl lahf inc imul mov pop or repz sub fldenv andl jns std sub fisttpl icebp mov cmc pop mov lds cmpsb pop into jne add test pop and or mov insb mov (bad) mov repz (bad) into xchg cli mov mov (bad) fcmovnb (bad) cmc add jge int stos mulw pushf imul sub ret add push in aaa jp notb and xchg mov test xlat movsl adc pop addr16 stos mov sbb shll push iret mov sbb mov leave lds mov mov inc std fwait bound xlat jb cli sub adc fsubrl pop fldenv test mov cltd ds jno mov jns divl fsts inc into negb or push lds push mov mov fnstcw xchg clc add add movsb sub outsb data16 dec loop int pop aam sarl dec dec int xor aaa fnop push fsubl jp dec aaa and mov mov pop mov mov roll mov lock incb push cmp into orb pop ja ret mov (bad) sub jbe mov into pushf mov popf sub sbb mov mov ss xchg sbb or in insl fs addr16 rcll cwtl cmp inc lock sbb mov movsb xchg fdivr mov clc and aad in insl push sub mov push adc xchg push lret (bad) test jns adc add test pop push daa cmc js int3 lret enter fs repz cmp fildl sub fwait dec lret enter cltd inc int inc fcompl out dec stos pop add mov pop inc cs xchg push pop xor mov jge fwait cmc sbb adc (bad) adc xlat push sbb mov std inc or adc inc jnp xchg (bad) jne or rcrb xchg idiv orb mov pushf pushf cmp int insl sub lret or (bad) outsl xlat stos out das sbb pop fs cmp sub imul lods mov push inc cmp bound dec xchg imul iret xchg push ret xchg or dec adc jno add sbb leave (bad) fnstcw cld cltd dec mov xor adc (bad) divb out dec and mov mov aas insl sub add xor xchg dec inc add in cmpsl shl aaa addb xor out xor or sub dec (bad) not or stos mov (bad) test iret xchg mov mov repz movl lahf subl insb (bad) push test call xchg out add pop lods mov adc ficom mov jge cmc sub divl outsb iret mov (bad) xor fstenv mov jo je ss js jbe addr16 insl mull adc or xchg lock push in aas sub out das ficompl fstpl xor jno ljmp push lcall sbb cmpsb sbb jmp mov test or sub int3 out push xor call popa sbb push gs or enter inc and mov jecxz cmp push es icebp (bad) cld test xchg mov aaa loopne mull out or fisttpll pop inc xchg inc sahf fisub leave in mov pushf mov shlb data16 dec (bad) mov dec dec outsb imul sub jecxz cmp cltd (bad) daa mov jb mov sti sub (bad) xchg lods (bad) xor and jne test xchg xor mov push test ss stc jp xor pop addr16 mov push (bad) jno or cmp adc mov pop mov insl or scas mov jae ja push call mov mov or loopne repz js xchg push test std fwait mov lods mov dec (bad) in xor xlat pop push sub add fdiv jle bound nop jl movsb ret lahf fs and (bad) call and sarl add fmulp cmp push sub shrl cmc jmp xchg xor test xor repz icebp sti push loopne xchg lahf xchg lds in das inc mov and adc in gs xorl test stos push call gs mov jl in dec out aaa inc (bad) and fcomi mov fisubrl xchg cwtl mov push cmp pop pusha cmp sub push dec mov and jnp fs addr16 push ljmp or mov sahf inc push jecxz cmp inc mov (bad) or (bad) int jmp jmp out stos adc dec dec mov mov xchg sub cli out adc sarl icebp xorl adc popl sbb in mov mov and or and xchg int push jl jge rcrb xchg shlb loopne pop (bad) pusha mov sbb sub mov repz jae cwtl ss scas mov cld inc mov enter mov adc jp fcmovu fwait mov or mov jne mov jle mov sbb (bad) sahf mov pop add pop outsl or mov jg leave sbb xor insb lret pop push dec mov sub in insl cwtl dec mov fcomi sub adc loopne mov sub push cmp mov add fldt inc push xor cmp fmull sbbl mov (bad) movsb sbb repz dec scas sbb fbstp mov test pop dec or xor mov iret xchg mov out daa shlb ret push insb jp dec scas enter xlat jle xorl (bad) (bad) and and xlat xlat inc cmp btsl pusha (bad) std xlat pop subb imul call dec inc les mov sbb cmpsl fldl test loope les loopne mull sub in push (bad) cmpsb jp push cltd outsb in lret cmp push ret cmp mov outsb pushf and dec subb mov lods mov (bad) sub clc sbb iret iret adc popa xchg add daa (bad) scas dec repz mov roll xor push jle nop lods cmpsl (bad) scas cmpl ret (bad) sub or xchg aaa (bad) jg cmpsb inc xlat iret sub sbb call clc adc icebp xchg lock cmpsl mov mov repnz repz cmp and pop add pop mov sbb xchg call in fstpt xor or cmc negl jne (bad) push in scas mov frstor lahf jmp xor loop xor cld sti adc mov (bad) xor in ds aas fsubl (bad) adc (bad) lds xor lret arpl cmp xlat pusha les inc xor repnz mov or dec add imul xchg cmp lods cmp pop (bad) or cmpsl xchg push sub sbb imul xor pusha pop bound aas mov mov cld adc or mov xchg mov clc and mov out fwait and fidivr dec pop cmp sub mov xchg es aaa add pop jle fldcw repnz inc adc lcall inc lret jne mov (bad) fwait add xchg cmp add add lahf add push (bad) pushl jns jecxz dec mov incb lret imul stc sbb add pop pop mov lds jg lret add adc data16 fs jle jg xchg push les test sub sbb jae repz inc mov movsb dec jp fildll sbb cwtl cmp jb stc stc fs xchg xor xor jl cmp (bad) out jmp mov dec in fs fs lods es sub cli shrb (bad) pop test pop cmp and mov cmp dec into or add cmp mov dec pop mov (bad) pop sbb add adc ds sbb mov pop push hlt (bad) jmp jle mov in mov (bad) mov pop xchg loop int aaa dec lock add fisub sbb rorb clc fs call (bad) das pop cmp (bad) lcall ret jp arpl rcrb sbb cmp pop cltd rcrb mov arpl into testb rorb testl pop cmc mov cmc sbb sti movsb ret sbb fucomip repz mov (bad) psubb fwait or sub out into in mov mov in sbb in sub mov jmp or mov mov cmc int3 ss mov hlt int3 das sti int3 pcmpeqb xchg loopne sti outsl push out add pushl and lcall pop mov inc mov stc lcall out lcall int3 (bad) and push imul jp data16 add pop mov sti int3 xchg add lahf gs inc xor (bad) fs inc xor add add add jb incb push aad jge jg jp push ror or adc ss jle test daa movsb or mov xchg adc repz popl data16 sub iret fdivrp push jg fnstcw ljmp fs les (bad) lret dec lret xchg sbb mov adcb or iret loope inc sbb jae jns add std mov std sbb fwait mov jecxz mov dec pop popf pop dec jbe hlt imul (bad) xchg or hlt sbb ds mov sti xchg in push popf subl inc in sub cld push test sbb push cmp and push mov loop mov push roll push sub and jp jp push dec xchg mulb movsb fsubrs pop mov pop xlat mov stos inc cmp bnd xchg pop adc cmp outsb push mov push int3 out loope jbe iret pop sub sbb or cltd jge push push mov inc test inc daa sub mov (bad) call inc ja int jne fisubrl daa xor in int3 fild sbb pop bound movsb out cltd xchg and xchg mov enter repnz cmc aas add outsl push retw out lcall mov daa clc or mov mov xchg cmpsb imul xchg sahf mov ret popf adc cmp sbb jnp mov or mov std sub in cmp sbb add xor xchg (bad) int push sub xor jb sub test ret setg mov mov fisttp mov push gs push pop mov or xchg mov dec inc ret adc dec sbb icebp push xchg fstl sahf popf popa lods xchg cmpsl mov xor mov mov jbe into or loope dec std mov inc and xlat negl and add pop mov dec sub gs or ret das das addb lods mov call push and flds nopl xchg lcall pop jle xor mov sbb movsb out incb mov ja fmull inc mov dec inc mov sub test (bad) adc jecxz and mov stos das leave cmpsl leave cltd sub cli cmp iret lea outsl popf mov popa mov in lds cmc mov push scas pop into mov xchg pop pop hlt rclb mov jns cmc cwtl outsb pop pusha lret jne sub mov lods int3 xor or and mov jp mov cmc out arpl aaa sub out mov movsb jle pop fucomip shrl rolb sahf push add sti pop mov push dec sub rcrl jns scas outsl popf or imul xchg sub cltd popa mov movsl dec movsb movsl imul and jecxz sub inc sub lods ds xor insl push scas add sub mov dec jmp int xchg test in lret (bad) mov int3 cwtl sub out loopne sub loop push fs and and jb cld sahf mov push jp addr16 sub push add (bad) fild mov or icebp sub inc xor sub and aad inc addr16 aaa sub clc out cmc jg in xchg ja and mov dec pop push fstpt lods or cmc jecxz in jno and mov pop lods pop imul mov sbb test add add pop outsl aaa xchg pop adc (bad) cmp fldl and or shlb ret sbb xlat lahf jmp addr16 pop cmp mov imul les pop xor decb cmp pop pop cwtl addr16 dec in push cmp mov out shll jnp dec and sub pop loop jno jne xchg fcomi adcl repz mov push cmp fidivrl mov mov pop sahf or gs in aas scas inc int and fisub out sarl dec xchg pop push pop out jp jns call or popf adc inc jmp sbb frstor movsl aaa test dec jb push mov or cwtl loopne (bad) mov std mov orl mov dec mov mov scas push and nop lock cmp mov lret adc (bad) std mov nop das mov loop jne outsl push aas cld sti and pop into fidivrl inc lahf pop fdivl sub lods jb lahf lods fwait sub xchg mov jne sub or jmp jns nop xor mov lods inc inc push sbb test ret push jmp (bad) cli mov mov xchg jl frstor lods add sti push mov cmp js mov push mov lods mov scas loop je jno leave jge cmp mov dec adc lods mov mov pop adc mov adc mov dec inc rclb data16 pop xor js and ret pop in shlb or dec sbb lret mov clc push pop mov aad cmpsb push mov insb xchg dec mov jbe daa loop fistl jae out sarb cld pop test int3 push pop jmp jg mov jecxz xchg (bad) loopne (bad) mov mov je bound (bad) jae sahf push out out jl xchg and loopne fldt mov mov dec pop cmc repnz mov arpl xor push push push cld mov mov add cwtl push sbb fist inc in dec fsubr lds pop aas push test (bad) sub pop dec jo dec iret (bad) into and aas cmc mov lods fdivl xchg push sub (bad) dec sahf outsb std pop jne pop jecxz or cmpsb xlat inc sub pop jbe adc jnp lcall inc fsubl and xchg test jge xchg push inc sub popa pop lods push cs ret pop movsl sahf mov imul out jnp jns pop xchg mov and inc mov push mov push stos es push lahf rcl sbbb addr16 inc dec sbb pop dec fistpll rcl pop and nop jb and jne sarl js shrl test xchg push retw mov cmp pop sub add idiv xchg (bad) mov or pop pop jo mov fadds adc bound jge nop fimull lds jmp push or and sub movb call std mov stc adc inc mov std dec pop (bad) jbe cmp mov leave ret loopne stc fdivrl icebp jmp xor push or out mov test decl xchg jl xor pushf pop pushf push sarb ss and pop fisubl jp sub (bad) adc test lret pusha imull adc dec mov sbb (bad) cmp bound movsl orl cld outsl (bad) fwait mov jecxz stos sbb cmp push mov aam arpl es in mov or sahf lds jp jns clc cld ficom imul hlt push lods xor les xchg or inc and cmc inc (bad) dec les mov adc mov insl popa (bad) inc (bad) fmul jmp popa mov data16 movsl push fbld adc jns mov xchg mov shll dec add das mov mov inc sbb and mov push push (bad) pop insl inc out add cmp std dec outsb out std lods es repnz in xchg icebp pushf lret xlat int3 call aad aam xor std sub test adc mov loop cmp mov xlat in scas mov xor lds mov (bad) outsl jmpw sbb loope loope mov adc arpl mov ja,pt xor clc cmpsl fcomps and inc nop pop cltd inc mull sahf add jb test repz and mov in pop push addr16 sub mov dec pop jo leave lahf mov movsl sbb pop int into fidivr sbb dec stos xor or data16 nop insl mov and repz push adc and mov dec or lahf scas mov push fstp xchg adc lahf cmc adc jg and addr16 add jecxz sbb mov cli nop or aas xchg call stos inc aam and lcall xor fwait imul pop fidivr mull fcoml (bad) icebp mov std fwait or pop jne push pop sbb lret adc fdivrs dec gs or jmp or pop enter cmp sbb mov inc fadd and rcr inc outsb xlat fsubp int lret les repnz es jl sbb cmp mull sbb and sahf sahf jno cmp fnsave dec in jne lods out fldenv clc xchg mov (bad) pop mov test xorb (bad) adc lcall push inc aas mull out mov cmp jae lods fs idiv aad lret sbbb jno rorl adc (bad) or mov sbb xor mov add fld incl pop loopne pop or (bad) cwtl and hlt (bad) popf adc daa stos addr16 push cwtl aam push sub pop cmpsb xor pusha lods sub xor fcom inc push mov lcall cmp dec insb push push dec movsb push cltd test add xchg inc push xchg in xor xchg ljmp cmpl (bad) ret lahf inc scas and idivl sub xchg inc lahf mov push mov fisub and int3 jnp sub leave fdivl lret ficom fild adc or and xchg xchg loope jmp dec jge or lea shrl imul mov pushf xor adc sbb jmp out xor test pop sbb jnp in lock testb sub add mov hlt imul int mov push out outsw in mov mov adcb jge mov les adc push jb into lea imul in adc cmpsl aad ss cld and (bad) in int and jmp mov addr16 incl (bad) inc imul xlat mov (bad) lods jns mov xor aaa insb inc pop mov sahf sub mov dec adc arpl inc sarl adc sub hlt pusha rcrl in jo outsb arpl into pop mov add jae (bad) insl icebp sahf in cmc pop in sbb jge aad imul pop (bad) mov add pop and fimull iret out mov sahf ds inc sub stos js lret xor jne xchg cmpsb jg mov dec enter pop shll jnp xchg sub adc arpl addl ja dec push stc jl pushf call inc push jmp add (bad) std insb test mov call lcall lcall call stos and xor sub andl ds loop inc test arpl and jl aaa inc push repnz push or mov pop add xlat cmp aas aad adc es push cmc mov mov dec jae mov mov ret mov movsl int3 sahf pop insl inc roll test lcall imul push mov gs lea lods loop xchg sub cmp cmp pop cmpb push insl ret ds daa xchg call loopne pop ds arpl dec pop add push call push enter (bad) js test (bad) inc cmp mov (bad) cmp test imull push xor sbb imul inc jne pushf les xchg push cs push adc lock push inc (bad) inc mov fistpl push xchg mov bound dec test aaa je jecxz xor or cs xchg dec lods push pop (bad) movsb out bound adc fwait pop in into jp into xor xlat fstpt and mov xlat ret mov cld and js push mov add xlat dec lods nop mov and xchg arpl jp addl adc cltd adc (bad) or cmp adc xor loop or fs mov add sub mov xchg std ja pop mov movsl out mull mov sub lods xchg sbb mov movsb inc iret mov dec xchg mov mov lds xor lock subb les and xchg mov add cmp movsl stos push hlt movsb lahf lods push ss xchg inc faddp les int3 daa mov aad std das mov in lds push xchg cs mov sbb loopne mov mov cwtl int repz rcll ss aam add fwait inc push push stc pusha in repz fdivr movsb push ljmp add in adc inc xchg cmpsl test icebp sub mov repz mov fwait aaa mov add in sbb inc loopw push mov cmp (bad) push sbb mov cmpsb ds (bad) pop inc bnd push dec lea dec and mov test mov and add notb mov jbe adc cmp push test pushf xor mov (bad) scas adc xchg xor mov jns mov mov adc jg (bad) xchg push es add xor jnp imul into xchg push inc test mov (bad) pop ss and mov repnz ficompl jg mov outsb call mov xchg aas adc xor repz in iret adc xchg jmp in (bad) mov sub push jnp rcrb xor rorb add add jg popa pop (bad) mov lcall sub pop xor into mov (bad) daa cmp rcr test dec jb out xchg mov mov pop xchg or loope jg in mov lods mov out in sub add lahf mov cmp add push mov fdivr addl in sbb lds arpl imul mov xchg (bad) hlt cld mov and outsl test adc sahf out sahf and jb xor push xchg push js jnp xchg jo jmp scas lods sub add cmp sub addl je cmp xchg std inc ds and or sub sub push xor cmpsl fcmovnu ds inc (bad) shrl mov (bad) jl jg cmp push jge sub xchg mov daa sub lret or sub test out sub std std inc sub xor les xor in rcrl imul mov fs xor mov int data16 pop add jecxz or in fisttp pop testb iret lahf mov pop mov jae mov fidivr decl in mov fisubr mov adc cmpsb ljmp (bad) in mov push jle insl cmp xor lcall ud2 xor mov enter mov adc nop cmp dec fcomps push imul push lods orl fwait push rcll mov mov pop sub jge popa xor lahf std or mov imul cltd push daa inc add dec mov pop test sbb jge (bad) sbb movb outsl jno inc or jne and jns push and dec fidivl mov dec push cli into dec inc mov sbb sbb jmp (bad) lock mov xor xchg xor sbb movsb stos pop cmc dec cld dec lods mov pop es nop dec cs mov dec xchg jb sub and xchg sub adc std repnz push xor test fwait lcallw mov cmp jo loope sbb pop loope out ret and cmpsl in sbb js cltd pop mov jg addl or jmp clc adc cmpsl xchg gs lcall push jnp pop fwait inc pop cmp mov add stos jmp sub stos je dec imul mov mov mov call mov dec push adc jae mov das ja jae jbe test imul fisubrl add addr16 cmp stc xchg push mov es pop aam mov bound xchg in jno js rorl notl adc fisttpl mov hlt subb xchg jmp sbb nop pop pop mov xchg lds mov mov dec nop mov cmp jo ret ljmp mov imul mov stos rorl movsb fs aad xchg sub jnp xchg into popf dec add sbb aam fbld xchg add push testb jns xor xchg sbb xchg cmpsb jmp sub or scas or out loop and push push mov mov hlt cmp bound and xor in (bad) aaa push pop xor mov sub cs gs jle cmp mov adc xor mov insl cmp mov mov out add imul dec pushf cmp and add movsb sub lcall jge js das mov popf fcoml fld jg jb roll adc mov jno cmpsb inc pop popa or stos int fs inc xchg lods out clc lds out sbb adc int addr16 pop inc inc lea add out and cwtl xchg (bad) leave push bnd xchg mov add sub lds add jb in xlat out mov out aaa test outsl dec fiadd sbb sbb add repnz lea xchg andb mov lock dec movsl or imul scas cmpl pop das fs push pop stos cltd sub repz jp mov test gs xor sub mov scas mov fildll add mov fldcw mov pop andps jns mov pop jne lret lods push scas pop mov (bad) push mov popf (bad) mov test mov imul addr16 negl out ret mov pop push leave sub or cmp cmc fs xchg adc movsb pop mov xchg adc mov xchg add or repnz jb mov mov cmp dec (bad) int sbb (bad) jns pop xor adc out lds dec mov push push (bad) in imul xor (bad) scas pop shl insb and pop fcoms pop sub inc inc fnsave icebp (bad) jecxz mov inc lock movb or insl inc lret xor (bad) xor hlt pushf jnp jmp dec push and inc push inc jecxz adc add pushf or inc sbb loopne mov xchg mov movsl add (bad) ss inc popa cmpsb nop pop inc dec cmc sbb or inc add movl clc ljmp or xor mov jno adc mov jle jl add lret movsb cmpsl pop lods lods jle scas adc scas fwait mov mov ja decl mov push cmp not pop cld (bad) xor sub add mov jl enter and jbe or push adc push (bad) mov fstpt or dec xor sub cwtl movntps push stos mov pushf lods leave (bad) aaa popa cmpsl cli out mov mov jg fbstp out and pop mov jnp popa pop icebp inc mov test sbb push mov cmp icebp in int pop pop xchg add insb mov sbb data16 lds sub pop pop or dec xor push in sub lret adc scas (bad) xor sub inc aad mov add jg push jbe arpl fistpl in cmp pop rcrl pop mov in (bad) in sbb push mov js sub add sub mov mov ret sub lea int loop xor mov and insl push jnp fiadd cmp inc outsb test and jb call outsl adc push in jns out mov jbe jge les inc push fiaddl or (bad) and mov jno out in and cmpsl enter (bad) jne inc mov sbb cld call mov insb pushw jl (bad) leave test push outsl inc lock popa jg pop mov (bad) jae inc and adc pop mov aas push out (bad) sub or xor jo in lds mov aad fwait mov loopne int3 test cmp push fimull mov insl or bound movsl mov lcall out rcrb ljmp fidivr adc jge jge gs data16 cmpsl inc sub movl xor (bad) (bad) jecxz mov sub push cli xchg (bad) int out xor in sub cmc jmp (bad) out daa (bad) pop jo mov xchg packuswb (bad) in xor cmpsb sub shld fsubrl and add loopne cwtl nop jp push mov or xor cmpl pop test ret daa sbb nop pop cmp aad push mov dec pop dec movsb xor push lret or add xor fs add mov lea lcall jns xchg xchg pop test and inc dec flds sub cld stos repz mov dec cwtl mov data16 mov jno mov fdivs add test mov shr xchg lret xchg pop cmp mov arpl sbb jns test dec sarl add mov xorb cmp xchg movb lods imul sti call cmp out mov aam ja pop cmp add stos jl dec lds cmp add sbbb fwait sub jp scas pushf inc scas push into sbb fadds loope or inc out in cmp lret dec outsb or rcrb adc js pop shlb xor rcr and jg push clc mov lods push inc das nop imul sahf mov mov movsl out jg ss pop mov xor add test rcll xor jg push xor rcr test xor xor sub mov mov jno dec repz sbb mov xchg adc insl dec add and jo outsl lods out xor lea je xchg movsl mov jnp js call not inc sbb ret pop or shlb mov xchg lea (bad) push cmp stc jl push aas bound jecxz or add mov dec add cmp std es push push ret leave push std in call ret loop aaa mov sbb repnz das lret outsb inc je mov scas scas fs xorb iret lods ret lods outsb fnop (bad) dec jmp jo ljmp andb xchg cmp jno fwait sbb sbb pop adc mov sbb dec daa call ljmp adc out lahf mov cwtl in test fs push cs insl dec cmpsl inc testl loopne fnop adc cmp xor jmp insl and daa jl gs mov mov addl pop adc jbe (bad) jo in jno mov mov add into (bad) (bad) notb add (bad) movsl (bad) or lods (bad) cmpsb iret testb lock lods sub loope push mov mov lods mov (bad) lock xchg into iret xchg jae imul pop xor pop cld mov or mov jno stos xor pop adc cmpsb dec cmp subl out or cmp push mov mov inc in sub inc int fwait dec ds xchg or push inc data16 push dec xor popa dec mulb sub dec call clc sub lods mov cmpsl sub scas stos jb mov movsb or repnz std mov add pop push and (bad) enter int test and xchg jae mov cmp sub lock inc dec add imul sbb jae ds rolb mov test aad cmp mov test test pop push lahf mov out sbb dec cmp in cld mov mov arpl (bad) mov cmp ret jecxz int les mov enter dec (bad) int add flds pop sub mov in outsb xchg stos hlt sbb sbb or sti pop lcall push shl xchg stc adc incl mov xor sahf mov (bad) scas inc fsubrl push rorb (bad) fmuls dec pop mov into cmp pop sub jnp (bad) sbb out jno dec jno loop cmp fmulp cmpsl pop int3 int3 mov adc lahf fildll jg stos aas mov lahf xorl jg push mov mov mov lret loop adc ret push lock out imul mov cs lret adc sub sub and jp dec int sub or fimull jmp add shlb and sbb lahf adc popa sahf jp mov mov xor push and (bad) mov add sar dec fmull mov arpl mov mov mov mov or bound ficoml pop loope mov jecxz mov dec (bad) mov fisubrl mov inc lock adc popf jns movddup add cmpl loope jno xchg repz out add insl jmp push mov push xor fsubp xchg int3 call cmp sti stc cli mov cmpsb ljmp inc lret ja dec sbb jg adc out or cmp in jae dec aad ja mov or das mov (bad) pop (bad) and outsl mov and (bad) or aas (bad) lret fs jg dec mov mov jl mov sbb pop movsl call mov (bad) and outsb dec out add imul movsb addr16 adc jmp fwait add mov dec jne mov insl fisubr sbb push int3 mov cs jns or push ss fdivl add repz dec cmp jg lock adc dec push outsl fisubl cmpsb fild and imul popa fnop les sub inc mov adc xchg inc push frstor lock mov mov pop out movsb pop push inc lds mov cltd jmp arpl int clc xchg push pop jne fldl xchg pusha and imul cmp xchg mov aam (bad) add sub pop or stos mov push addr16 into add jp (bad) pop mov sub adc js sarb out call mov xchg stc fxch or test push mov push xchg cmp andb popa xchg ss mov inc mov mov dec add jne sbb das mov es daa mov sbb movsl pushf jg ret mov mov rcrl movsl xchg psubsb std call lahf push imul xor or mov sbb test testw fimull int and jae mov out xchg jl (bad) mov into mov add sub sub push or scas adc aas dec (bad) fisubrl dec int dec add lret add inc aas fbstp pusha mov add mov xorb jle pop dec test push inc iret pop das sub sub mov mov adc pusha push inc lock dec fcomps arpl dec insl adc lds arpl add jnp dec mov cli pop scas inc inc push repz ss jmp pop push (bad) pop and test sbb fldcw xlat stos cmp xchg inc ljmp imul pop add fsubs xor insb dec cmpsl push lock orl stos shll mul ja xchg mov mov scas jae mov cmp and out (bad) mov xor jne adc pushf push cmp fstp ret pop out mov inc in xchg jle lret cmp lods (bad) int3 add cli pop lcall dec sahf dec cmc (bad) mov jl jge jle (bad) (bad) dec or xchg ds sbb in test movsl fnstcw pushl mov lret mov or aas test or mov pop mov jnp lcall jnp add data16 outsl sti mov or arpl int gs or sbb les fbstp and jno mov mov pop xchg mov pop xor xchg lret sahf (bad) jo lahf mov gs mov and sub push jns xor mov cmp test xor mov inc cmp ljmp sub mov out xchg fildll push ss mov movb aaa gs repz iret arpl jmp push inc sub jmp dec lret aad push lock pop mov mov neg mov sbb dec sub push rcrb mov rol outsb call inc dec (bad) mov push hlt inc fdivrs loope das leave cwtl lock push ss push popa mov cltd xor sbb or mov push mov mov test add cmc jmp outsl les andl and xor nop mov movsl mov and mov push mov jge and lret aad daa dec cmpsb sbb or stos iret or and test test xor xor adc cmovno ss ret mov test movsb fidivrl mov mov imul sub cmpsb push das push ds sub enter sti pop (bad) ljmp and sbb pop or arpl movsb mov mov sbb ja icebp sbb cmc inc xchg ret inc mov push jo (bad) mov jg movsb test or cmp lock mov arpl jl add add lret fild sub add xor or dec adc nop or int xchg cmp mov in jge lcall mov outsb cmp sti stos add sarb dec sahf xorb push cmp xchg fwait stos mov hlt popa fnstsw jbe cmp in mov cmc cmpsb into cmpsb dec cmpsb or leave (bad) mov test imul (bad) scas pop and cs xor mov test xor pop cld mov adc or rorl xor pop jnp lea jne rclb pop inc rolb les push adc sbb lods pushf jb out fistpl sub sahf jp sbb cmpsl mov and (bad) jl iret jnp dec xor ficom (bad) mov out jecxz js aad sub cmp test pop mov hlt popf sbb sbb jnp inc push push fisub in stos cmp jne popa add pop add lds or nop mov roll fs int imul lea imul imul imul jns pop bound sbb mov xlat aam and imul cmc sub setge adc enter jle rcll and ret sub clc out mov adc cltd stc cmp ret xchg in pop xor loop adc mov mov mov cli (bad) xchg mov sub jbe shll insb jb sbb sbbl jo push je push jb xchg mov rclb sbb dec fdivp add cmp xchg cmpsb push cmp xor test outsb lahf pusha cmp test imul cmpsb stos test (bad) je mov in push cmp in xchg mov aaa jnp fwait mov adc roll jnp je stos icebp and imul xor jo bnd aaa push sti adc add ljmp and fldt jle fwait and pop call add cltd loope inc iret cmc or (bad) mov mov mov push fisubrl repnz ljmp icebp inc and mov aas inc xchg mov lret mov (bad) stos fistpll mov jl mov mov dec lret or nop jg call ja (bad) leave insb dec mov sti add xor sbb sar ss out (bad) cltd adc mov aam int dec or rcl dec je in cwtl jno sbb cmp sbb or daa jne in lods push int3 aam adc dec jns test in xchg inc mov gs pop aad gs stos sbb xchg mov add sub shrb fwait mov lahf movups bound loope cwtl pop sub outsb xor inc dec sbb (bad) daa pop dec adc rorl sub lahf outsl arpl in mov (bad) dec std cmp cld outsl or adc xchg lret iret (bad) push imul in mov ljmp insl push bound mov mov and mov cmp daa ljmp dec (bad) ja cmpsb je cmp sbb sub lcall mov mov fsubrs cltd cmpsl outsb mov mov adc jecxz out test push out jmp mov lret jbe,pt push test cmpl cwtl cmpsl or sar sub aaa out (bad) pop cmpl mov push rcr ljmp ret lahf loop mov cmp push cmpsl mov mov popa test and inc mov sahf sbb and and arpl out mov popf mov cwtl sbb fs lea push mov lahf push jle fidivl outsl out dec push fwait xor mov jne clc jg subl daa lock xchg pop mov fidivl inc jle mov nop push stc inc mov pop add pop mov (bad) hlt (bad) cmp xor sahf sbb imul cmpsb dec lods mov push push add faddl push pop lods outsb dec (bad) jnp mov imul mov mov and or test out adc xchg adc dec dec mov jb andb cmp sub push pop mov push stos gs ja mov faddl cmpsb int mov test xchg adc loope jmp repnz xor stos jp adc loope popf xchg jns je mov rol pop mov fistl shrl jge loopne mov jnp xor lahf cs imul cmp dec jmp sbb out mov nop push sarb jmp imul insl mov movsl jmp imul es bound add out and jle or (bad) into mov fwait mov mov lock outsb dec jmp jnp and out addl add sub jo sub and dec pop jge mov aam xchg movsb nop inc pop add insl xor adc mov push pushf das bound (bad) and sbbb pop mov loopne xor in sbb sti mov popa rorb mov xor test inc mov or sub xlat sub mov mov lcall add shrl insl pop test jge push add imul adc cmp push pop cmpl clc adc into adc addr16 xchg fbstp pop mov stos dec fcoms mov in xor mov popf stos dec in divl (bad) mov cld mov test xchg add data16 into dec mov jbe dec outsb push mov ret imul sarl mov mov (bad) int3 pusha jl inc mov and rorl ja repz arpl lret mov mov daa dec mov cmpsl add sub cmp es mov jecxz and jae sbb mov pop lea xor test ja fbld pop test mov imul daa mov lret jmp mov (bad) push dec fstl ljmp (bad) je insl fidivr scas xchg insb jo push mov (bad) sahf fsubrs call loope cmc push inc aad rcr loopne (bad) xchg adc sbb popa test out mov pushf xor mov cmp sbb mov jne mov clc mov xor mov (bad) push sahf mov add sbb ja xchg and pop mov and push inc mov mov subl es push je scas xchg pop push repnz mov xchg xor cmpsl cmpsb sbbb fucomp mov movsb mov jecxz adc cli fild hlt jle push lea call xor sub movsl int cmp in mov mov sub addr16 push inc mov das cmp push mov popa xor lahf imul arpl sub pop rorl pop or or mov shlb insl jbe adc or insl lcall mov arpl and cmp dec fucomp out mov cltd ds mov adc pop dec orl movl cmc fcomps loope jmp cmp (bad) mov outsb sub int3 add in inc sub cmpsb (bad) sbb push xchg mov loope add bound pop jg out ret jecxz jecxz test repnz cld addr16 in into ret push imul loope and sbb fimull mov xlat rorl cs ds sub enter dec lahf jno in sub hlt dec lock outsl lcall inc jae mov adc sub lea mov mov int3 cwtl mov call sub stos pop add ret mov inc dec ret jae repnz mov mov pop test test fisubr adcl mov into outsb mov fbld repz mov xor test add push push aas inc ss cmp dec push es rclb repnz lcall inc mov xchg cs jo jle push mov adc or int xchg xchg cltd mov es nop mov xchg shrl or jbe mov mov mov fsubrp sbb shrl outsl sub mov xchg es sbb jnp jg leave (bad) cmc ret jg add loope jecxz lods cmpl or test out pop or faddl into hlt test xchg add add int jecxz push int pop ja mov pop push mov (bad) dec clc cltd repz jae xor push cmpsl adc pop cmp (bad) mov test scas pop or movsb enter out fwait sbb aas arpl fsubl mov mov mov ljmp lahf xchg shrl (bad) fnstcw sti mov xchg dec jb cwtl xchg call jns inc cmp jmp adc insb jbe xor sub cwtl data16 scas sub idivl insb lahf adc in scas cmp xor mov mov jne pushl loop or or mov rcrl scas cmc mulb pop and (bad) aaa inc lret call rorl sbb call xchg cmp rcrl jle cli or insb ss int3 adc out inc pop xor movsb mov push les mov out pusha mov repnz jecxz aad pushf orl mov cmpsb adc stos pop pusha push add push mov dec mov adc pop (bad) test out fldenv jle js jae in push (bad) jo xchg mov xor jae xor xchg je loop pop es jbe rolb cmp mov out and rorb sarl adc aaa test sbb add (bad) adc push fbld cmp push pop rcl mov loopne mov push in push outsl (bad) (bad) lcall (bad) call cwtl sbb popf cmp jecxz int3 xchg dec xchg adc imul and inc mov das bound inc dec iret loop popa cmp inc xchg lods fnstenv (bad) aaa sub sbb scas sub out mov mov arpl cli sbb sub adc cmp sbb (bad) xchg ficom mov inc cmp cmp mov (bad) shlb mov sbb icebp and mov popf lea mov aaa mov rorl aam ljmp lea cmp cltd or lea fist jns add pop mov pop pop xchg leave in xor pop add hlt sbb fcmovnbe sub rcrl (bad) xchg aaa ds cmp in scas mov or test adc in in sub inc into andl xchg ret or xchg mov lods stos addr16 into es dec shll push jecxz clc push mov jno mov in sbb stos mov adc test sbb or bound pop add xchg roll inc dec out pop popf mov mov dec ret mov lahf or cmp xor repz (bad) hlt adc xchg je jno cmp xchg pop cmpsb stc mov mov xor inc or aaa in ds aaa and stos lcall mov subl xchg mov insb or repz loopne dec push push dec lret inc enter dec sub imul mov jmp push sbb add (bad) jmp ja mov aas add mov push mov inc aam decb out add inc jae,pt mov mov aam sub test jecxz call int cs aas sar ss xchg push mov cwtl das imul adc xchg cwtl iret sti jecxz adc js stos lret fwait rcrl and pop iret mov outsl pop or mov xchg (bad) pop in or xor push cmpsl sbb adc insl in mov dec inc dec xlat sub sbb and mov mov sub rorl or xor int jg xchg (bad) pop sbb mov fisub (bad) mov outsb (bad) (bad) jg lahf sahf cld movl xchg fwait cld and out adc sti stc cltd ljmp or xor xchg dec xlat or mov jl inc lcall lock fisubrl sbb mov sub lds mov push aam fsub xchg les out jp ja ret xorb inc test sahf pop imul sub sub mov aaa dec inc cs lea mov notb dec bound icebp popa in push lds mov insb insl sub data16 jmp or sub fcmovu xlat cltd movsl inc sub div add fdivl leave mov rcrl mov push and lds adc and lahf mov (bad) scas inc jg mov sbb scas fs loope (bad) mov (bad) mov mov test pop and decl pop loop rclb enter call loop push xchg das adc mov jns sbb imulb xor push cmc or aad (bad) movsb add inc inc mov fwait sar ss push xchg lret add mov es aaa ret jbe div mov pop add shrl gs sub jns dec push cmp pop orl gs insl cld inc dec dec cmc xlat dec jmp pushw and ss jo lahf push enter (bad) jnp sbb in xor dec pop lds std pop sbb push hlt addr16 push mov test test sti mov pop jns movsl jmp push pusha hlt dec scas popf add mov loopne xchg inc add fsts mov inc lods int3 fisttpll cmp and call scas cmp hlt inc push inc mov lret xchg dec inc pop mov decl sbb dec sbb lods pop sbb lock (bad) decl and xchg dec std out scas inc mov push xor (bad) repnz fxtract pop fidiv fidivr sbb pop loope out cmpsb fs daa cmpsb cmp inc bswap addl cmpsl les push push mov aaa repz addl push inc mov and arpl mov push push mov cmp into lahf sahf push push mov sub mov adc mov ret cmp pop addr16 stc pop fnstcw aaa scas mov subl or rorl mov das test out jbe jne dec call jecxz push lods cmp je outsb imul psrlq (bad) je nop adc and jne cmp shrb fwait adc mov loop cmp outsb sahf fs les mov fiaddl xchg mov clc add add add fs and adc mov rcrb mov adc or xor repz jmp mov xchg jmp add or jbe stc loopne sub dec push iret insl mov cmc pusha repz cmc inc push mov jl mov bound mov cmp decl pop push clc jge lock sbb leave repnz jle pop cmc insb cmc pop xchg test in sbb fadds dec sbb mov aaa cmp ds dec daa shl mov xor xchg jmp mov push ljmp jns (bad) cmp out sbb jno mov jg bound addl cld sub call push iret enter push mov mov dec cli outsl in mov push or clc and xor push pop mov push outsb sahf mov cs or imul rep xchg jb sbb pop sub mov pop mov testl jmp cmp (bad) xor gs xor xchg lahf or pop push xchg es xchg mov push mov es jmp push cmpsl jl cmpsb jo inc (bad) incb jb out inc cs fwait call nop mov in test lods pop add orl inc mov outsw mov cld leave mov orl test bound imul loope push pusha iret push adc mov int3 shlb rorl or mov sub or mov insb mov push (bad) inc daa pop adcl mov movsl xchg daa dec pop (bad) mov insb xchg (bad) mov inc cmpsl mov jp cmp hlt jne daa hlt cmp shrb out test and pop lods cmpsl mov iret and cmp push shl stc test imul xchg arpl mov call pop push mov xor lods push pop mov scas adc insb push out mov call loopne pushf scas subl repz outsl cmp cmp push les fbld jecxz das fisubl mull pop cmp test add sub scas mov mov pop xor inc cli int inc xchg push xchg dec out in add pop lahf sbb push call mov xchg (bad) (bad) gs (bad) mov int3 jmp ret je sub int3 mov sub push and jle dec mov out dec adc int3 push xor push xor int3 pop lret nop in jl ret or xor ret mov loope femms jg cli aad shr pop sub xor pop sbb subl sub mov (bad) fistl mov fnstcw aas fdivrl test fdivrl cmp xor mov icebp out mov fidivr ficompl mov lret jns out ss sbb jmp mov (bad) sbb mov adc das out insl scas adc dec sub outsb xchg imul mov jne push lcall xchg iret jge cwtl repz push sub jmp lret mov lds mov mov lds data16 (bad) sbb dec into pop mov mov loope mov lock bound movsb jle,pt test add int jns and call call add sbb adc mov cmp push add xor push jno mov es mov push inc xchg std js adc xor fnstenv cmpsl mov stos in popf scas es mov push pop and xchg sbb jecxz movsl outsb imul clc xchg (bad) cli imul in mov loopne scas mov aam arpl repnz and or out xor imul in or (bad) jne mov jno (bad) ja or xor pop dec sub xchg cwtl dec or cli mov nop outsb loop fbstp adc sbb pop cwtl fdivl fisttpll movsl mov mov mov ja lcall lcall dec inc jge mov mov sti sub push movsb repz xchg mov leave xor cli jne jae mov jbe aas xchg popa mov or xor test jnp mov and stos es push sub adc rolb push and jge ss aaa imul stc xchg out mov test add lcall xlat mov pop outsb and movsb andl movsl cmp idivl dec aad mov jle rclb pushf cltd popf pusha sub add sbb (bad) js out lods repz or fistl jno sub mov iret (bad) xchg jg mov clc xchg daa mov aaa xor lret jl ljmp mov mov pop cs mov mov add pop cmpsb xlat cmp cltd pop dec pop lds cmp adc mov xchg sbb (bad) pop repnz lret mov clc daa sbbl shrb or pop xchg les jecxz sbb repnz jmp or cmpsb push call shrb sbb rolb lret shrb push add or jno cmc stc inc push movsb out faddl jae clc or push stc fwait mov rolb jnp test stos mov rorl adc cld je (bad) adc test adc cmp xor test add hlt or jg add fcoml (bad) sbb adc outsl push cmpsl jbe add mov insb mov cltd mov push or cmp xchg adc lret fdivs xlat sbb xchg sub push add inc hlt xor sub test sbb cmc pop xor lds movsl test xchg cmp imul pop mov nop iret dec mov repz mov out mov jno jo sbb imul out in push sbb stc adc scas imul aad adc inc mov ja inc mov divl in mov xchg pop cmpsb lock inc sbb push jbe mov adc inc sub bnd push inc fmuls out jecxz aam lret mov cmp lret push or xchg add in test insl jmp mov pushf cmp test int leave fistpll cmp sbb or stos mov movl xchg inc sub push ret sub iret inc xchg dec adc dec and jl (bad) out adc je mov (bad) mov out popf enter leave inc mov xchg std rcll cmp and dec jbe in hlt fwait add loop cltd xchg adc or fidivr xor xor lock or and outsl xchg test movsl (bad) mov fxch sarb mov cmp imul or and fldt popa in add mov jb cli or mov cmpsb adc push jmp lds mov and push out jnp add cmp and dec mov dec inc movsb push ljmp pop loope inc pop in push cmp xchg mov jo orl stc sub xor adc out cmp pop fs sbb xchg mov out das add leave out mov dec insl pop xor call adc (bad) jnp fildll push xchg jmp (bad) mov je push ja push sarl push inc lods cltd mov push mov dec inc jns out lea pop sbb xor push push xor push mov sbb jb dec repz push pushf dec mov xor sub jg sub lods jge mov jmp pop mov ljmp aas cmp scas inc xor into cltd push pop mov shrb push addr16 in insb aas inc push xchg mov jnp decb (bad) jl push into pop repnz aaa pop pusha aaa insb mov inc test push scas cmp pop sub xlat fwait jo imul and in repz xor popa fs adcl jl,pt (bad) inc pop bound jle mov fs movsb icebp jno sbb (bad) and and pop rorl (bad) movsl lock nop and (bad) xor xlat repnz pusha or (bad) or pop push (bad) pop sbb icebp leave (bad) (bad) xchg sub or imul mov mov xor xor fadd jg push dec in subl sbb sub or out int xchg inc enter jne icebp dec push add inc in cmp cmp mov jecxz jnp pusha add pop test ss or repnz ss (bad) push adc push mov imul or adc test sbb sub out sub lds daa mov ja cmp roll mov dec cmp movsb jbe cmp mov lds push iret repz mov fnstsw xor and outsb mov pop bound gs inc cli jle cltd sarb mov push inc fsubrp repz mov (bad) repz mov gs mull push jp iret ret stos dec mov xor jl mov cmpxchg push aaa pop sbb repz call xlat push stos and dec jmp dec inc inc hlt inc inc outsb pop push (bad) jno imul xor scas push iret jnp repnz push pop inc daa std sbb dec sub (bad) jmp or jno aam jecxz lret xlat sub addr16 out add les sub push xchg cmpsl xchg mov in mov mov (bad) int cmpsl jnp scas lahf sti (bad) mov sbb mov (bad) repnz xchg hlt popf pop mov mov mov enter dec sbb push lods jle add cld mov cs xor mov sub cmp bound or mov push andb sahf popf xor pop stc cmp jbe repz repnz lret pop lea mov push loope pop mov dec jge icebp push cmpsl inc xchg test (bad) jp rclb lock inc mov mov js push test rcrb mov xchg add mov lcall jbe sti stc push js pop xchg mov and sbb mov add sbb sbb mov les movsl jnp subl adc (bad) lock in cmp lock xchg out nop cmp adc xchg dec test neg mov cmc cmp mov aad add inc mov fs xor adc call pop ljmp jecxz into popf stc add test enter pop mov xorl mov mov (bad) cmpsl cmpsb jge jae jbe out call test or mov lahf lea mov sub dec jp (bad) jbe lret push mov push cmp or int3 mov jl push imul js mov sbb sub enter ds sti jnp jle dec cmp add not add push jle insl es xchg ljmp dec dec stos adc mov jns int mov or push imul mov loope xchg out es adc add roll (bad) sub jle lea mov imul out out test lods loop jns mov pushf mov cmp add pop ret sub xor jne pop in rcr sbb stos out mov xchg aam sbb std fistpl mov mov fistpl adcl lret sbb fstl mov xchg (bad) lea or std pop jge (bad) cmc test mov pop imul or movsb in (bad) into dec sub sbb outsl dec adc mov js lds sub lods hlt mull sub mov imul sub cld fistpl jae test js pop pop mov mov iret out neg pop mov mov xchg dec inc iret out cmpsb lcall sbb lock in je jge mov or into mov movsb imul push lret add pop lods pop je jb mov in cltd mov (bad) jle and jle (bad) icebp pop xor inc test inc lret pop fnop (bad) push xor cmp mov mov sbb cmp insl stos in or andb and add add cmp jle sub js xchg inc (bad) sbb inc jle frstor xchg add cmc clc sub into jle pop xor repnz or sub int xor nop test jmp jns je sub (bad) int jb aaa cmp mov push xchg enter inc insb inc jle dec pop rclb push pop push cvttps2pi movsb mov movsb xor or nop add fstl into mov mov or into ljmp mov call add aam in push mov jno into lret iret mov mov fwait lret in outsl test xchg push shrl fist adc push aad shll inc push push cmpsb (bad) jecxz mov sbb sub sbb jle inc add stos sub fdivrl inc cmp push out ret movsb sbb cmc inc sbb fcoms movsl adcl movsb inc and mov lods loopne xlat aam add mov lds xchg inc into stos add test or aam inc inc icebp mov ljmp popf adc movsl pop jle dec xchg adc and and push add aad je aam hlt mov clc stc pop or jbe jae test mov pop stos mov mov pop adc jnp push or sbb or jns jae inc xlat out inc dec or fisubl fdivl cmpl mov popf ficomp int3 icebp and jmp and add mov jg mov pop inc jmp or sub adc mov fisubrl mull sbb pop or enter gs je (bad) fildll jae outsl sub sbb adc enter dec pop dec jmp fmuls stos add aaa in sbb lods adc xchg pusha popf lock jbe dec dec lods imul cs pop dec lods sbb pop enter fcoml push scas insb mov mov sarl cld xor out mov mov inc push shrl cmp pop mov fmuls sahf test add xchg fcomps aam (bad) adc and xchg in shlb mov cwtl push jge (bad) mov jmp xor jmp mov icebp mov inc lods lret cmpsl shr (bad) jmp jp jno fcmove es pop inc addr16 ljmp or test sub fstl or xchg mov iret cmpsl cld push push xor loop or mov adc mov jns lock xchg mov loope xor incb cmpsb cmp fadds subl out aaa mov or insl jle jp jo push jl pop jg imull mov loope xchg mov loop pop fldcw cmp inc in (bad) push enter pop jb (bad) cmp dec fistl mov ljmp or jb adc xchg sti ret sbb cmp and out nop mov (bad) (bad) fdivrl sarl cmp test pop (bad) push stos sub xchg mull xor ja ja dec ds mov cld aam cwtl shr cld jb (bad) push (bad) enter icebp out push cltd call ret mov xchg dec cmpl out mul leave inc shr fisttpl mov movsl cmovo xorb mov insl stos iret lret (bad) les dec pusha cmp scas cld inc mov sbb fwait push aam cmp add adc push mov or sarb xchg leave lods test int3 cmp xor sbb cmpsl (bad) xor dec rol adc pop sub fcomi sbb popf dec arpl mov movsl je jmp xor out out (bad) jns pop mov sbb mov out inc shrl dec aam inc add repz xchg adc les fistpll gs imul xchg and andl push mov fidiv lods lret ja xor ss fsubr inc mov std insl mov sub jmp dec negb jbe xchg adc test adc fisubl (bad) and leave sbb mov pop inc inc ret test rdtsc repz push ja (bad) in push out mov addr16 inc insl or sarl push das fcomp fdivl popf dec xchg out pop inc and test rcr mov stos push out sub jb and pop test out and and sub push in adc pushf addr16 scas push cmp lea or in pusha test inc adc ret loop lock adc andl aam sub xchg and pop icebp enter mov add mov add int mov push xor inc dec frstor mov adc pop mov jle mov fs xor jo std lea push out cld ret sahf jg aad repnz loop mov mov shrl js popf jae sbb jge xor inc xchg dec xchg jmp push sbb outsb pop imul out rol insb lret cmp fs mov adc pop pop icebp fildll loopne jmp sbb dec sub push mov lret or outsb sbb insl cmp push xor iret pop add cmc icebp mov cmp enter xor jg inc insb xor getsec enter cwtl cmpsb gs pop dec mov pop (bad) jne pop add pop lds sarl dec nop cmp sbb aad cmp push test (bad) push iret scas pop push shll stos js hlt in js outsb xchg xchg or xor lret lret push ss dec pop fwait mov sbb cmp fmull or mov fsts ljmp push jg inc or (bad) imulb cld ss (bad) sbb fcomp inc pusha iret or fisttp dec jl ret add add pop push clc outsl jg lcall push lods sbb or adc mov and mov hlt adc xor pop bound loope aaa lea jmp sbb test cmp sub mov jg shl movsl repnz dec xchg sbbl dec cmpsl xchg mov ja fs mov lea pop insb and sbbl pop cmp xchg sub push repz cs lret push jbe cli cwtl dec or mov loopne nop test in insb movups cmp out xor out or call leave cmpb test pop out sub test adc cs pop add mov dec sub pop push add jg cld lods test shr mov xor repnz xlat je lcall addr16 xor lock and (bad) popw cmp jb insl clc ds idivb mov inc jg das hlt into mov negb jmp mov out dec xchg push lods pop mov xorl sub ficom sub (bad) in repnz xor stos jge cmp adc in sub fdivs add loopne or jne in stos mov test mov jecxz cmp sub stos sbb cli fstpt pop xchg (bad) jge,pt jo rorb push stos and add es and mov sbb cmc sub shrl pop inc dec pop hlt lahf sub cmp xchg jp ret or loope fstps jne fildll fwait mov divb jo rcr sub js pop cmp dec dec push mov sbb outsb popf fisttp cli mov inc sbb cmp mov mov movsl jl aas loope js push mov sbb sbb and cmp inc (bad) jae (bad) lods inc data16 es and jecxz jne jbe scas jo inc pop je fs (bad) daa subl (bad) and jae mov inc fbld in mov jbe mov adc or jne scas ds icebp adc mov mov inc in pop push mov test xlat and inc loope and add (bad) sbb (bad) (bad) add fistl jo push xor shrb dec lds xor add pusha ret add pop jecxz add mov cmp outsb lret inc ficomp loop in int jge xor mov je lock stos insb sbb pop lds mov add (bad) sbb daa fwait hlt andb jecxz mov (bad) mov mov ljmp mov mov (bad) xchg jge jns and xchg pop ret inc je lock lret and cmp call xchg fld pop insl cmpl cmp mov jmp dec cmp rorl push addr16 sbb repz dec inc jns xchg xchg and and xor popf xchg dec (bad) mov add jo push push jbe (bad) sahf stos not adc mov push dec mov sbb insb xchg loope cmp jp mov into sbb inc mov jns mov inc mov fucomip push jecxz rclb mov insl test repz aas pop sbb fdivp movsb jb imulb dec cltd testb (bad) sbb scas mulb adc or jecxz repnz fs mull jae adc dec push ja sub ja jg push cmp mov mov push int3 jno or mov push cmp lret sub jecxz and mov adcl ret sub mov lods jmp sub je sbb sub sub sbb insl cmpsl int3 inc xchg std scas cltd lret adc andl adc add mov repnz mov xor in fisttp insb jns repz jle andb scas jb xor outsl mov adc mov test nop cmpsl jnp jbe jae pop (bad) mov lods clc ret adc add inc jo (bad) (bad) subb std negl ljmp push adc repz inc pop stos pop mov xchg or jne pop dec sbb sub dec loope and ffree pop inc and add jmp ss xchg and mov push mov fcompl sbbl lcall cs pop xchg ret mov push leave fldcw or addl and push jb test mov pushf sub adc pause jb pop xor int fiaddl das icebp xchg sbb outsb push xchg in in in dec cmp inc and mov dec sbb mov push mov or jp mov aam (bad) mov fldcw mov outsl or fisubl lahf jmp sub jne test in (bad) pop sub pop lock sbb ret dec xchg es pop jae lock iret pop loopne (bad) in dec dec arpl xchg lea inc cmp cwtl hlt loopne test sbb and mov sbb dec or cwtl inc stos push or xchg jecxz jecxz mov lock mov and jno cmpsb cmp test ja add nop aam rclb mov lret or and dec repz in xor xchg (bad) mov inc jno sbb pop pushf xchg negb push es orb dec mov xchg mov mov aaa enter mov ss movsl push sub jecxz jge and cs xchg pop mov popf fcomip jae clc jp mov sar jp movsl jnp pop sarl pusha adc dec (bad) pop (bad) int3 sub mov dec jl mov or mov int daa push fisttpl in push icebp mov dec in jle sbb or sahf lods push xchg es jnp mov sti sbb jb pop push in mov dec ss xchg pusha cltd in je mov or fs adc int xor and imul adc insl add aad test xchg xchg adc pop inc mov in jb jle xor leave pop in (bad) cmc mov dec les cmc ss gs loop add xchg ret mov (bad) push adc daa cmpsb (bad) push test push lret ret pop sub and mov sub mov xrelease pushf fildll gs xor xchg movsl scas aad mov dec dec add hlt and cmpsb or adc shlb test sbb pop pop cmpsl pop push push jbe push inc frstor fs scas sbb xchg faddl lahf test rorb cmp add lods jns clc sbb lds int3 in pop and adc idivl lods xor (bad) out mov sub jg pop fcomps aas add (bad) rcrl outsl repnz test adc pop jmp sbb stos outsb sub movsb in lahf push pop test xor in pop pop or rorb aaa add movl push into call sarl dec pusha out cmp notl jne dec dec (bad) cmc inc mov push ja out or aad sar jge sub pop outsl xor inc shrl call push (bad) fldl sbb pop push xchg fmull or pop jne (bad) out xchg sub fldt and jns jbe adc mov push jle mov push adc movsl mov aaa cmp xchg shll xchg icebp and test test andl cmp add adc mov jne orl inc out lea fsubrs inc push adc (bad) xchg pop pop xor je mov ret cmp (bad) xor push fisttpl loop mov and sub ljmp adc ret push stc jmp adc jns and fnstsw (bad) fnstcw mov fnop lahf push sub mov js push push mov sub dec cmc sbb fst and cli adc insb test pusha push andb push int mov pop aam and adcl jbe push aas subl (bad) mov push es mov call jb mov ja enter and pop sub ret adc adc push test push lahf mulb lret cmpsb std or sub sub enter stos sarl pop test lahf iret adc adc dec xchg pop loopne jae jnp push bnd fdivr clc cmp cmp stos aam mov into lds inc cmp xor loopne out sub fildll repz out and add inc cmp outsl gs aas aad mov popa movsl pushf push push mov mov test lret inc nop shll je lods sub add dec mov cmp popa mov hlt mov repnz add cmp je orb inc mov pop pushl and xchg pop xlat inc lret jbe jno das les in push cmc sbb fwait out pop imul out push rorl xor inc imul pop sti inc jb jae insl add inc cmc pusha mov mov imul popf stos bound fisttp pop and mov loope push arpl xchg jecxz pop sbb movsl lret cltd cmp mov mov (bad) inc pop mov and (bad) dec push out and add movsl push sbb push dec imul pop jne int clc out or or xchg pop push sub lahf cs cmp push lds sub pusha leave sbb stos dec negb or or (bad) test jle jno add jne pop mov adc jne (bad) inc loope incb imul xchg pushl push inc and sahf (bad) xor ljmp inc pop jne (bad) and cwtl mov negb push push scas pop cmp xchg stos inc popa arpl sahf cmpsl add repz mov lds mov jnp mov jae dec mov pushf xchg jnp cmp (bad) mov lret ret rclb popf cmp mov loop cwtl out xchg mov cmc lret xchg mov mov push inc xchg fwait cld or pop sub sahf insl fdivrp loop jo sub jl dec nop out hlt rcrl stos dec insb stos aas jne sub cmp inc cmovp fsubl popf push sahf mov cmp out jnp dec jno fincstp stc popl fucomi (bad) incl mov xor and jecxz aas add out sbb adc (bad) daa (bad) adc xor cltd xor int3 fimull mov jo and sbb jae imul js jnp aas or nop push dec jo add pop cmpl arpl add pop leave xor and sahf fucomip sahf add and arpl pop test pop (bad) xor pushl adc or insl daa mov nop lret add or pop inc aad adc es adc fistp inc xchg pusha dec repnz dec jmp out fwait push scas (bad) and mov cld insb imul pop jle fidivl pop imul jl mov dec stos mov out lods adc add inc fwait sub push cmpsb jne push lahf mov mov sti shl adc repz push int and sbb sub jne add push aaa lds mov sbb dec in ret decl dec inc ss sbb scas jno add lret push ret sub push mov cmp rcrl std enter movq push jo cmp (bad) (bad) sub stos jge lds pop outsl xchg pop cmp xor push jl popf inc jp mov add pop add sub pop imul sub fsubl leave xor sub int3 int3 in fs daa sbb xor stos dec push ret mov lcall pop loop xor test mov jp in out pop loopne loope insb and xchg (bad) loopne push push outsb mov sbb das jne mov out jae sbb clc sbb push rcrl (bad) out inc mov icebp enter iret inc sbb sbb outsl (bad) pop sub xchg push sbb fcoml dec mov lcall pop add pop call inc lock mov mov dec addr16 add mov mov push mov push ret adc sbb leave (bad) jne out push fcomps outsb mov fisub mov jb ljmp movsb jnp push push dec ret mov jb xchg sub in sbb mov inc mov jne div out inc sbb bound jb (bad) je clc shrl xchg jns sub ficoml fdivrp (bad) fs je xchg jp fdivl les add mov pop in neg mov (bad) in mov hlt cmc loopne sbb call jg icebp fwait mov push mov fsubl push mov mov icebp mov jne into pop mov loop enter movsb pushf mov lret inc les ja sti push cmp ds push mov push sarl fild (bad) enter inc fdivs out xchg sbb pop and jecxz addl lret lea movsb pop (bad) pop ss mov and jne push jl icebp pop pop int3 psubusw pop add mov pop cmp sbb cmc mov pop arpl fmulp jnp jne lcall icebp es cmp or in cmp push sub (bad) and mov jl gs mov sub aad mov xchg pop jnp dec imul int aam fbstp sub xor sub into int3 push jo or aad loopne push cmc jl leave push bound dec mov mov push mov (bad) mov out mov ret sbb add cmp xchg dec (bad) or sbb outsb sahf inc int mov outsb iret lcall arpl xor lcall popf mov insb mov fwait js pop (bad) jmp xchg inc fstpt or iret cmpsl jg adc dec xchg cmpsl pop btsl sub mov into out xor and loop lods add cmpsb pop xor lret fwait sahf iret xor out sbb (bad) push or (bad) adc loop leave add inc mov xchg repnz movsl mov adc out sub fildl mov and out stos jle ret xor sbb cmp out or fnop pop test xchg xchg xchg mulb or ss cmp adc pop imul jo mov push mov lock nop ja jg mov addl icebp lea xor stos (bad) (bad) mov mov cmpsl fisubr inc ja (bad) sub mov sbb movlps rcrl xor roll jbe mov aam inc mov cmpl cwtl mov mov outsb cmp (bad) or stos aam xor dec pop test aam lea jnp (bad) and rcll jns jo fs pushf push sub sti jbe pushf mulb clc mov pushf mov and iret dec mov mov pop mov push pop mov popf lea mov pop dec sbb fbstp out pop ljmp popfw jp aas inc mov push mov popa push adc push adc stos fbstp movsb jge xor inc xchg out cmp test jmp aam sbb mov popf sbb js xor xchg daa in aad mov jge loop and xchg aas xor in outsb into push sub movsl mov xchg adc mov test insb out cs xor in adc sbb lods and repz mov cmp push ret fildl popf mov decb push enter lahf stc add fcmovu sbb std sbb addr16 pop cmp in aad out sti or mov jmp xor cmp add arpl imul mov ret mov mov pushf pop mov adc push sbb mov xchg jo or jl les aam (bad) mov aaa and idiv inc (bad) mov pop sub test js jge sub cmp dec mov int3 mov movsl sbb or (bad) (bad) dec out out leave xchg mov mull xchg mov (bad) das fnsave dec divb xor js mov dec sbb icebp test (bad) int add fcmovne into xor aas aas pop pop xor mov inc (bad) movl loope cwtl jle jg out cld or daa jne mov fucomi inc cmp icebp cld aam loope insb or iret sub dec mov push sbb dec mov mov test repz mov add sub lahf xlat dec nop repnz pop mov xchg andl sub pop dec jp scas pushf shll cmp mov sbb ja les cmp aaa adc fsubrl std ret in aaa out iret push out adc jge in fsubrs sub sbb xchg mov sbb movsb or aam xchg mov or and in pop dec add test mov mov movsl or stos xor fdivrl lahf pop rcll int3 into rcrl fisttpl lret or aaa cltd push sbb add mov push (bad) cmp les js (bad) sbb or cmpsb scas or sbb mov cwtl loope (bad) mov mov stos les nop jns add std sub dec nop mov (bad) pop aam add pushf outsb iret and roll sbb test jp adc pusha cli pop sub push (bad) push pop in jb or sbb mov les movsb (bad) pop cmp ljmp stos sbb pop je inc bound sbb xor hlt pushf addr16 imul jno lcall pop cmc dec out pop jb mov sub add scas dec es addl daa (bad) mov mov (bad) xor leave scas xchg jle cs insl dec pop push insb sbb iret enter sbb inc loop push push outsl push xchg add sbb mov adc scas adc jb lea sub jl nop sub ss lahf push pop insb cmpsb xor cmp cmp lods loopne in mov faddp pop xchg jbe ljmp repz xor mov cs mov test cwtl jl or lods cmpsb (bad) cmp imul inc test push sahf pop out (bad) lods rcrl sti js and std shrl fimul cltd (bad) adc cmp fildll mov es outsl mov in ss out add and addr16 test pop loop int3 cltd push dec xchg jecxz xor arpl ljmp jbe call or push push and jmp fdivrp (bad) dec outsb (bad) lods repz je cld mov scas repnz aad mov (bad) mov xor shl xor (bad) cmp in fstl ret daa or mov repz lea daa sub test push jle mov cmp sub or les mov pop in inc (bad) dec mov xlat jb push mov leave fsubrl adc xchg cld out rcll mov inc cli inc mov loope pop stc mov jb shlb (bad) push lods mov pusha (bad) inc (bad) mov iret stos adcb adc je enter pop aam dec imul jge sbb jg test push test (bad) jl pusha push das int3 clc rorl hlt sbb mov in push inc aam mov xchg (bad) push aas sahf or inc pop adc fwait addr16 pop out push mov push pop bound popf (bad) out mov ficomp jg xlat push aad push les jne sbb dec dec sbb and arpl jne dec push test fucomi in jmp imul jl (bad) js imull addl (bad) aad ljmp iret call sbb push (bad) andl ljmp xor rcl xchg jl sub pop sbb mov aas mov jo movsl cs hlt imul add sahf pop inc pop adc ss (bad) jo pop fxch adc xchg xchg int loopne xchg dec lods mov inc mov sar arpl out cwtl pop push in mov jnp jecxz xchg data16 repnz mov xor cld dec fcmovnb xor pmulhw dec add mov cmp loopw int out jae mov aaa hlt test push sub sahf inc daa dec aad in pop mov jmp cmp jg sub inc rcrl sub push inc cli out pop inc cld xchg mov movsb mov stos sub lret dec cltd jnp adc imul into push xchg stos dec sub jno data16 (bad) xchg orl movsb leave int3 mov fdivs lods clc lock repz jae mov sub bnd aad or les lret ficomp add and jp push mov xor iret xlat mov ss adc sbb cmp xor repnz rcl fadds xor sbb jns pop mov aam testl ds jg fdivl mov (bad) sahf fwait dec xchg ret adc icebp jo inc ror adc inc pusha pop (bad) mov add cmp mov cmpsl out jno adc fidiv testl sub incl clc daa add lret aaa adc pushf ss lods xor sub add andl in les mov fs daa mov test (bad) push ljmp dec cmp or xor inc in (bad) cmp ds add lods mov insb cltd cmpsl mov (bad) lock ljmp iret jae inc popf jnp inc ss pop loopne loope cmp ljmp mov add ds outsl sbb xor pop xor jo lods pop imul shll pushf movb roll in insb ror jl jp mov xor rep mov sub popf mov push jnp test daa jl lcall dec or shrl fcomps pop addr16 lods lods mov arpl jle jo stos cwtl mov cli aam mov ss data16 lods sarb cld adc mov inc cmc es sti fwait xchg test cmp push mov pushf lea cmpsb pop mov aas pop fbld das ret pop loope loopne add fnstsw and test (bad) jo (bad) iret loop loop xor iret test inc sub int inc xchg rorb (bad) mov (bad) enter mov and push enter (bad) mov into pop pop lea inc inc cld adc add pop ja dec rcrb push sbbl pop out fdiv sbb xchg mov jnp mov cmp mov (bad) push aaa out mov rolb sub and xor cmp test mov cs popa dec jge cmp or mov loope stos mov xchg ficom nop jns lret lahf rorb and dec sarb (bad) pop loope mov aam pop sub dec jle pop sub pushf xchg (bad) mov insl imul les cmp dec pop xchg adc movsl xchg fcoms adc xor add dec je push test outsb dec inc test dec imul jp pop fild scas nop pushf addr16 pop loop xor ljmp sub clc or lds xchg pop mov add jp leave add cld test movsb sbb aaa std lods lods vmovsldup repnz (bad) sahf pop jmp pop push push adc insl out dec add out stos (bad) mov push gs jbe inc hlt sti jns pop inc repnz mov jg aad aam lods pop and pop or insl xlat stos mov rcrl dec push sub js ret call xlat in insb (bad) ljmp lcall scas rcl mov jne scas xchg icebp xor in lret pop mov or xlat out mov xlat mov xor cltd dec mulb enter pop fldt int pop dec data16 xor sub mov insl xchg lea push or insl imul mov lret dec outsb nop mov dec out xchg mov dec cs xor dec sahf mov aam pop dec ds addr16 scas xlat jmp mov mov cmp imul sahf mov push pop aas mov insl xlat cmpsl and xlat sub iret xchg ljmp mov (bad) (bad) xchg sbb cmpsb into xchg mov sub and in aad stos icebp dec push and mov xchg decb xor push into out pushf lea ficom loopne xchg sbb adc mov or dec xchg and xchg pop cmovp in jge mov in lahf xor iret sbb enter mov test push rorb sbb invlpg cli or cmp aam mov or xchg ja jmp xor lret cmpl sbb imul std and cmc or jmp cld repnz dec sub pop mov scas negb adc xchg in jae aad mov jno mov pop das dec lahf push mov fistl adc push das mov movsb add mov sbb xchg insb pop aas inc pop fisubl sbb jns pop dec mov decb ja dec cmp dec shlb (bad) rorl test or imul push jnp,pn mov test pop into sbb pop mov jno or inc push sar dec xor jnp testl les insb mov (bad) push addl insb pop dec mov mulb repz cld push scas cli sarb loopne notl sbb ret inc sub cwtl frstor adc cld mov jge mov paddusb pop cmp rep cli js sti or cld out xor dec out jne stc shlb aam xor push adc pop add fwait inc mov cmc shl add lds stc fsubrl test sbb mov hlt sub in das pop xchg dec bound jp sti pop and shll fwait sub loop mov (bad) in cmc mov call lods push inc xchg mov cmp xchg scas aas mov scas sbb adc mov roll popa sbb (bad) dec out fucom mov push (bad) arpl in cmp cmp lods ss dec test lret test adc mov mov cmp mov into mov test push lds xchg jl xchg into subl xor out xchg ds in xchg cmp pushl ja cld dec rcrb mov cmpsl xchg ja inc (bad) or jne pop xchg int or sub push (bad) or fxam les sub fimul and dec lods mov das cmp or out push ret add aas pop orl popf dec (bad) or in not movsl (bad) fistpll xchg xor sub lock pop mov jns (bad) rorb lcall cmp nopl loope nop or and and pop cmp ljmp jle cmp popf mov and imull push pop daa ja cmpsl arpl lret adcl arpl out iret jmp daa fbstp sub into dec daa fild std cwtl inc mov xchg out jge adc push es xor adc adc xor cli or jae scas test fwait jae scas mov xor xor mov inc iret movsb into inc fucomp lods fucomp movsb push fucomp dec outsl int push in sahf test sub push stc shlb push cmpsl stc push ljmp xchg vmovaps cmpsb mov pop add mov xchg jg jnp push stos jno dec rcr push ja (bad) mov fcmovnbe mov call mov ljmp adc das or jnp jb add aas lds lea (bad) jl mov lds insl sub jbe push dec fdivrs in ljmp outsb add idivl dec xchg or and nop and addl cli and mov adc gs xchg es sub mov lods sbb fdivs cli push ljmp xor lock lods inc lds mov test push inc int3 fisub pop jge sub ror iret call std xchg push fsubr sti cmp sbb ficomp add cwtl gs add aad lods (bad) out movsb rorl loope sbb fbstp (bad) push and loopne push add mov mov or out test (bad) pop loop mov fidivl sub aad xchg outsb inc test pop mov (bad) int sbb mov pushf inc stos mov ret pop leave push mov stos jae add mov (bad) into sub les je ljmp nop jecxz xchg fdivrp push jnp stos push sub outsb ds in pop or iret adc dec (bad) mov xchg sbb out push fstps mov push cmp scas cmpsb jmp in ret cwtl aad pop (bad) int3 movsl jge pop add mov cmp imul push xchg adc mov cld mov test pop push push outsl das (bad) xor inc lahf jecxz push jb jne outsl add jmp icebp fimull ds or jno fstpt in cltd pop pop (bad) mov push pop ret loopne push jecxz sub jbe mov cmp cmc insb add mov (bad) jne leave fcmovu call in lahf push or cmp pop xor lret stc jmp lret je clc int or in pop dec push sub and adc adc pop push push inc cwtl pop inc gs mov cmpsb ljmp out mov xchg mov xor lods (bad) cld ljmp push icebp adc dec pop scas sti fistpl out push mov (bad) in sarb pop pop js inc xor rol in in fisttp (bad) enter fdivl mov adc xchg push sahf push inc xchg in leave leave arpl jne mov mov aam push popf mov or sbb dec pop or jo clc rol stc sub sar add cmp out sbb mov or out clc mov and push xchg lods bound scas mov jns lds xchg mov jl jne imul fcmovbe mov ret int pusha pop scas sub and test sub push data16 out mull sub scas loop inc adcl hlt pop pop and icebp repnz push or lcall (bad) decl mov push loopne jecxz xor icebp jp int3 adc push or inc faddl mov add pusha cltd les add sub shl mov ss insb popf scas push pop add lahf ret xlat insl xchg pop xchg sti lret dec xchg inc xor fsubrp push pop xchg mov cmp xorl lods or or adc es sub fildll ficomp dec push sahf fs mov dec sti push repz fs jmp test sub in ret pop add fistp jb stos (bad) hlt es cmp push dec cltd xchg mov lret clc xchg insl test loop add mov jo std jno pushf push aad ret incl mov mov jl gs test in test sbb jl jl dec cmpxchg stc mov cwtl nop jns aad scas pop dec not sbb inc movsb jne fwait jo rcrl cmp loopne std aas adc ds test or mov add fsubrl pop (bad) or or mov dec daa out lea xlat push and push or add data16 in js ljmp mov pop mov xchg pop xchg sahf mov bound pusha and mov adc loope push aam lods cltd test cwtl (bad) dec test (bad) mov rcrb cmp aaa mov pop sbb lock sbb jne inc and hlt aad pop push sub ss shlb cwtl cmp pop mov je jne mov je test pop arpl dec (bad) clc mov mov dec sub std rclb fwait popf pushf fld sub icebp xor mull dec (bad) ds xchg mov xchg cld cmc mov aas dec inc stos mov pop loopne jl push mov adc xor pop mov (bad) jp outsl add or jns dec lret shrb orb inc repz enter popf imul sbb pop inc outsl out ljmp pop sub jmp js iret inc sbb xlat pop jns inc pop push pushf or nop rorb call fidivl or stc cmp divl pop insb sbb sarl sbb dec push fwait (bad) or fidivl ljmp dec fidivl or xchg aam fs or sbb mov xchg and rol pop jp cli or std test sub mov fisubrl push mov jmp stc and or sub outsl mov jno ljmp mov es pop push xor mov sarb loope pop push jnp inc inc mov dec cmp sbb sub hlt ret test aas dec (bad) sahf in je mov mov and divb push lea hlt shrl cld sbb xchg mov add das push dec in pop psubq xchg jnp cmc mov pop jno jle jns std mov (bad) pop scas mov jecxz cwtl mov mov fcmove in movsl xadd sbb pop push xor cmp pop jbe pop (bad) jno aam popl mov sub hlt pop xor or pop dec sahf ret (bad) imulb (bad) lock cli jb std fmull popf mov leave mov insl dec fistpl movsl out shrb push pop jno mov stos out adc xchg aad add cmpsb adc jmp mov or push mov mov lahf and xor ja cmp loopne popf mov outsb adc xchg add mov mov loopne mov lea outsl cmp push leave add xchg adc mov or push and pop fwait sub cmpsb (bad) mov jmp ds fbstp xor lret (bad) cmpsb test mov push push imul pop cltd daa ficom sub (bad) ficompl lds dec hlt (bad) int subl out cwtl add (bad) imul pusha push mov push jb insl lods pushf mov cmp inc insl jbe mov jg cmpsb rol stos pop call cmpsb dec insb out jne push fcoms push movsl daa das andb int fs adc jae sbb fmuls mov sbb mov shrl mov dec or push sti fldl lahf iret in testl push mov (bad) push dec mov lods mov push subps fisubl jge or cwtl sbb xlat push and (bad) ds mov cmpsl mov mov cmp or rcl sbb push (bad) fnstenv int (bad) xchg push (bad) sahf or xor into and push push loopne ja mov push cmp and test sbb loopne imul scas dec or mov inc lock andl push pop sbb rcrb test fidivl test mov pop sub aad push mov outsb dec shrl sahf rorb hlt mov leave rorb (bad) (bad) stos loop or (bad) pop aad xchg fsub cwtl or addr16 mov loope lock or movups fld data16 nop stc scas es adc std cltd cmp sti (bad) pop out cli pop (bad) popa sub sub repz dec (bad) xchg insl rcrb mov and movsb call dec jl push fstpl jp (bad) rcr cmovo clc insl ljmp push mov jp loopne cmp add sub lret out xchg mov push sti jno aas shlb arpl movsb data16 pop push sbb call push pcmpgtb rolb pop dec lds idiv clc pop mov shrb call aam pop addr16 dec pop int3 stos fnsave mov dec imul rcrb cmpsb jp fxtract fmuls cmp xlat cmpsb faddl hlt mov int jb cmp fsub dec push lods negb xor dec sub in cmp cs (bad) mov int3 mov scas (bad) push or push add push push shrl loop push or sbb fisttp mov out inc and sub cld nop ss mov inc fstp (bad) rclb pop rcrb jl,pn jp sti xchg jae lret xor inc stos rol fistpl push mov into dec in pop push xchg mov cli lea lea mov mov roll sbb xchg hlt imul add ror (bad) cmp sarb unpcklps fiaddl push inc stc lahf or popa jbe xor sub push test ja ja pop outsb loop mov xchg cltd push icebp mov sbb call mov mov les fidivrl xlat lea mov roll xchg scas (bad) sub jecxz ljmp push adc icebp imul dec add repnz std jo mov insl fdivrs push iret add int3 fstl scas jne movsb mov or sbb outsl ret ret adc imul js cmp mov aam adc ds loopne popa sub add mov inc lahf (bad) xchg movsl mov fisttpl aad (bad) leave jae push xchg incl mov int3 push repnz jecxz pop xchg cmpsl pop xchg mov je data16 ja xchg adc (bad) stos addl pop dec outsl imul leave xchg jne adc fcmove xchg fs and movsl in jne or dec or call scas scas pusha xchg loope pop scas enter lods mov jmp in mov mov pop jbe cmpsb mov (bad) mov xor fs mov (bad) mov pop mov lret sub inc mov imul mov (bad) xchg out mov pusha inc iret stos pop movl mov enter mov xlat inc jb fsubrs mov inc hlt inc or sub cmpsb sbb pop outsl xchg (bad) loopne (bad) sbb fsubrl sbbb (bad) movsl push stos (bad) movsl leave repz mov fnstenv sub push and js lcall pop stos iret je ja dec and frstor mov jns dec lock adc or insl xor add int cld pop (bad) mov cld je ss gs out xor gs adc dec adc mov jnp pop in dec jnp xchg dec adc push or jne subl in mov popf inc add or sbb push mov jb idivb or push inc mov ficompl or sahf push push mov push dec movsl in test aaa mov mov and sbb test (bad) (bad) pusha jne loopne fisttpl jg add fnstcw gs add xlat push and jl add mov sbb out lahf lods dec sbb mov mov sahf mov jo clc rcll push mov push jb pop sbb lret test or adc jl (bad) sub icebp pushf mov jne sub aad mov mov sub push ljmp out mov lcall xchg add inc sub loop xchg imul mov pop mov mov and inc into cmc xor insb add adc and pop dec out lods dec iret jnp into and pop sbb sub cmp cmp mov sbb or dec xchg test shlb and fnop inc or sbb jnp test add xchg mov loope iret ret mov data16 lea (bad) movsl je pushf fimul add xchg lret and repz xchg stc xchg mov icebp loope add pop es leave or ljmp push das or (bad) mov imul mov sbbl cmpsb lcall sub cmp into jae stc in mov arpl add lds rcr out sbb or xchg incb or rorb dec push out js inc xchg mov add or or (bad) jo out fnstsw shrb pop scas inc pop sbb jp popa inc in loope mull xchg loope push lods mov add sbb add lods clc dec scas loopne sub fisttpl sbb pop xchg ljmp lods sub ss inc dec in xor pop push insb outsl xchg cltd pushf imul fidivrl rcl dec iret sti mov fisubl mov add mov sbb cld fldl in stc jle in xchg (bad) scas jmp (bad) in pop leave dec (bad) fs push out cltd (bad) int3 mov mov ficomp adc dec adc jle rclb mov pop pop mov jmp pop ret jne mov test (bad) or dec add pushf iret inc clc (bad) rorb jge mov mov gs insl scas test pop sahf cld adc and test and mov or sahf dec imul std jns add add pop ror pop mov mov sub lea push pushf lahf mov cmp or sbb xchg push lds cmp push or mov fsubrl dec pop ljmp push xchg or data16 jbe pusha pop insb dec mov js dec imul arpl jl mov sbb adc in popf in pop sahf or sub jo loop repz pop inc dec mov lods das or pop xlat iret rcl cltd shrl xlat mov mov mov push pop cli into insb rorl push mov jp pop fiadd rol push dec shlb xadd gs and aam loope movsb cltd ds inc stos sarl push jecxz sbb dec cltd jg (bad) push mov mov popf jne mov shll mov outsl (bad) adc or xor (bad) mov test and icebp ret push (bad) lea adc arpl or cli cltd adc mov sbb sbb cli outsb dec jae testb sbb pop lock inc pop inc pop in gs mov cmp shl inc xchg in fsubl and seta or sbb aas movl push (bad) push test add and pushw dec cwtl fstpt jno insl add mov xchg inc (bad) fwait xor inc call add dec push mov jo sti or movsb pushl outsb stos and push push inc or loope cmpsl pop push jg (bad) xchg push ror mov mov gs push sbb jo (bad) inc sti nop cld pop mov rcrl aam fidivr into shr es lods mov stos xlat fldcw jns and addb sub or inc fwait jmp adc push push and xchg cmpsl xor adc dec or les jns xchg push push test fnstcw adc rolb repnz xor mov scas lea sbb (bad) sub push xlat call cmp movsb cwtl ds fcoml cmp (bad) mov xchg sbb data16 lods cmp inc orb xchg fcmovu fcoml pop jns push movsb insb lods jmp out lds jnp stos mov lcall lret ljmp aad insb mov mov (bad) mov rcrl into cmpsl inc imul scas jle mov test add pop sub lret (bad) push xchg mov aad inc out xchg jge shrl sub lods adc jecxz rcrb out call les ds fwait movsb xchg call aaa push rcll enter lea loopne scas push outsb add (bad) inc dec push int pop ficom pop insb stos (bad) aam push shufps pop xchg shr mov aas nop push aad or lods and pop xor movsl js imul pop jnp mov dec xchg sub xlat test xchg (bad) mov adc std fist fs (bad) cmovl cwtl push sbb mov js jmp movsb sub clc fcmovnu leave inc scas jge mov push mov or xchg jno jecxz push and insl movsb jno jnp pusha cmpsl enter pop fnsave mov ret popf mov jmp lahf shrl mov ds or adc add dec pop imul mov rcll cmp clc sub or push push outsb mov dec xchg adc rcrb jb insl je aam ss movsl mov push fstps push lret rcr mov rcl call iret outsb and aaa mull data16 inc mul pusha (bad) out cmc pop push and iret sarl out out push rcrb ret rcrb and (bad) mov lods (bad) dec in push std jmp fstpt mov sbbl je out cmp cmpsb push stos xlat or jp clc loope mov sbb es push imulb inc dec push fisttpll pop jae test sbb test or mov sbb and test fs out xchg aad out nop mov (bad) mov into cwtl or adc insl je mov leave popf dec lcall imul adc xchg leave dec bound jbe inc fadds cs mov sbb xchg stos jge mov rcl lds cli inc hlt mov dec mov mov pop push pop movsl xchg dec dec fs jp dec scas mov jge xor cli inc jo scas pop ja jp cmc enter fisttpll int jmp std cmpsb mov sahf (bad) mov inc xchg nop xchg adc jae mov mov push fistpll xlat into mov mov push jnp push daa jns rclb lahf leave push mov scas jp into cmpsb mov into inc cmp in push (bad) jns cli dec push cmovg jmp mov stos mov pop or nop push repnz inc bt add push test rclb stc dec lahf push lds adc add rclb fidivrl cmp and xchg das popf scas sbb jmp cmp in adc out push xchg xchg cmp adc lock fwait xor add push out lock cld jl xchg stos icebp inc mov mov adc in (bad) or es lcall mov lods test sahf dec addb inc fsubr repz int3 movsl js mov test dec adc sub cmp fs popf xchg pop mov xor js rcrl sub lcall test cli xlat add les mov js call pusha dec add lods fcom sbb jnp sahf rcrb mov ficom fistpll mov leave dec idivb cld clc mov cld pop mov addr16 push adc sbb sbb adc lret xor jg data16 ja mov inc sbb adc mov push cmpsb aas std lea pop mov sub mov cli inc cs xlat mov mov cmp jmp hlt iret and jg pop jbe pop mov stos ficompl pop insb xchg lahf dec pop inc outsl xlat (bad) dec leave enter stos push stos sahf int3 push es in dec mov mov mov sub push or xchg add or loopne mov xchg fist mov inc mov mov mov popf cltd mov inc mov loopne fsubp or jno jbe mov and maxps in stc inc and sub cmp js mov jecxz push fwait and das call idivl movsl inc movsl pop jne push (bad) decb lods cmpsb int jnp lods lea andl (bad) ret test xor inc mov aas push das add push (bad) dec mov xchg shrb fdivrl addl lods sahf mov add jbe popa xchg push fidivrl xchg inc cmp lret xchg jmp cmpsl xor popf jae mov stos mov clc test and enter mov jnp test (bad) lea std jo clc hlt cwtl out pop leave mov jle ljmp mov push stos fwait push (bad) in cmp sbb ja and dec out sub sub scas je (bad) dec out es lcall loop adcb xchg adc fiadd (bad) (bad) cmp dec imul sbb fldcw insb or or into push push or xlat (bad) cmpsb scas inc sbb adcl cld mov nop mov inc mov lahf jl xor xor jp mov addr16 sub jae in xchg sbb pop pop imul add (bad) cmpsb sbb (bad) int subw add cwtl adc push aam mov pop (bad) fdiv lret jbe adc sub add out and cwtl xor push fisttpl lcall mov cwtl into jne lock add push repnz xor xchg pop test pop fstps loope dec cmp cli or xchg push mov cli cmp sahf mov jbe insb shr mov or mov in push push lds es loope and int inc mov lea add xor ret push iret push xlat test insl popf and fisub pop sbb test jge adc leave leave or stos leave stos add jnp loopne stc popf popf xchg (bad) sahf iret inc cld xlat imul std pop xchg mov pop cmc sbb int dec fwait pushf dec mov add es fisubrl test jmp lret mov repnz (bad) mov push pop mov xchg mov repz jb popa cwtl aam mov pop xor movsl enter sbb lret push or mov ljmp loopne jb (bad) xchg cmp cs pop xchg sbb push orb (bad) cltd adc outsb enter jmp (bad) xor adc mov stc sbb lcall call inc mov in es or inc imull or adc enter inc fs push xchg mov hlt mov pop (bad) mov bound jbe jle mov dec data16 negl pusha add jecxz mov sub inc stos pop pop push test ja fbld and stc xor icebp and fcompl pop adc adc (bad) pop lahf inc outsl push add aad cmpsl fcmovnu push sbb dec adc mov pop cs icebp dec or dec sbb pop jl mov lods lds or cwtl xor pop (bad) jge push fs mov shrd push push out movsb pop and dec outsb cmp test mov inc mov sbb insb arpl fistp aaa movsl xchg xchg fldcw js jecxz imul xchg movsb nop adc xor stc dec imul jge pop jo inc aad mov (bad) enter in mov lock gs (bad) ds dec push addl dec loopne test in cli pop sbb inc mov cld rcrb pop negb xchg mov or pushf pop insl popf aam jl cld dec mov push jecxz fcoml (bad) dec rolb inc out xlat sbb cmpl mov pushf iret mov mov lods insb test sbb add loope pop sti fisubl (bad) call jno xorl fdivl or les cli inc sarb add in sbb outsl jb lea jae jo cwtl fnstenv int icebp popf mov cmc push inc aas pop jl les scas les fs (bad) aad lea mov outsb xchg (bad) or push ret mov pop pop mov fidiv jb,pn sbb cwtl stos ss lcall xorl test pop cmp mov lods aad inc cmp rorb sub in inc push mov rcl xchg outsb fnsave (bad) or cltd pop rorl xchg xor jne mov push call xor or xchg xchg lds xchg nop xlat pop pop es arpl in lcall adc mov cli lock mov mov mov mov bound pusha std pusha push adc lcall pop (bad) cmp stos and icebp cmp stc sub fwait dec xchg xchg sub std (bad) or cmp addr16 movsl pusha jne mov test mov inc popa or pop dec inc out lods add and (bad) jae pop and add in sbb into fimul push lea in (bad) jno inc call push fild call aad xchg mov cmp out repz mov gs and sub jg inc out test sbb jp push (bad) jmp scas mov jno loopne mov stos pusha mov fidivr lds cli adc pop outsb sbb outsb cmp popf xchg add jae xchg gs outsl push mov push pop mov cli jb dec (bad) push sbb icebp mov mov repz cli cmpsl cmpsb out js js pop jb imul and or stos cltd imull jae mov aad or outsb loopne xchg add pushf jns test sub ja rcr insb fisttpll adc out dec sub mov (bad) lcall nop jge popa jae lcall das stos fstp sahf fs push lock in xchg ret test sbb scas and push sub mov jo fs sub aam fcompl rcrb movsl pop and xchg jnp in pop lea inc cmp pop mov mov jmp out in xor push aad xchg inc int rcr cli icebp xchg sarl popa sub std loop (bad) adc adc lcall outsb mov xor test bound push xor mov test data16 sub add push or cli mov or and (bad) lods out cwtl shrb or in les cmc push mov addr16 push fistpl call out ret add xchg add sahf fwait pop xor das pop jl cltd stos and mov sbb mov sahf movsl dec call mov outsb xor scas in in icebp (bad) push push push test hlt lds mov xchg cld mov pop (bad) ss dec leave add scas mov leave clc mov push aam or fsubl aas outsl push test pop lods push or sbb sbb into pop in in cs push cmpsb push icebp cmpsl aaa pop mul mov mov inc adcb mov loop mov jl and test pop xchg daa pop pop pop out mov fadds in dec insl iret jbe loopne cmpsb mov inc inc push bound repnz mov pusha (bad) hlt movsl outsl cmpsl or pop or incb hlt adc stos outsl adc andl adc mov popf sahf or sbb aam mov test xlat push loopne push pop fndisi(8087 nop (bad) xor pop jl or fnop int3 inc mov push (bad) icebp add cmpsb mov pop sbb addr16 scas test jmp xchg outsl imul inc movsb mov rclb pop sbb xchg flds in addr16 stos xchg (bad) test sbb jnp mov sti add into mov add jb mov mov dec cli rorl xor or insl push xchg dec push lahf xchg push dec in add hlt aad repz ljmp pop ret mov movb out push movsb call mov ljmp inc or addr16 in movsl or jb mov pop mov lcall adc push shlb sbb pop jns es pop insl andl fldl ret loop into cltd divb mov sbb es cmp dec add and movsb and ja cli test mov xchg push dec js sub jo mov dec jmp dec movsb xor hlt xchg out js and test iret sbb sbb sbb dec mov sub btr adc aam or and cwtl mov sbb inc test inc notb std mov jle adc cmp lods stos in (bad) out lea rorl (bad) rorb fsubs sbb das pushw test sub and sbb ror xchg enter mov aam clc dec sub fcompl out in gs xchg dec cmp jmp mov insb mov rcl out fsts (bad) addr16 mov dec mov cwtl shll dec (bad) xlat and lcall jo mov sub insl aaa push mov es call inc mov lret fisub and mov inc mov std jae push in mov mov dec shlb out sub add pop popf xchg outsl scas jecxz cwtl xor pop (bad) mov sbb push fcmove out adc out dec lahf jge fwait gs jb,pt in adc or fcomi repnz lahf cmc sub rcl fcmovne cs out adc push nop jbe pop into les out sub test adc push ljmp insl popf movsb sbb cmc ret rolb nop inc inc sbbl in xchg push andl adc pushf mov cmc fistpl sub in mov aaa outsb int sbb out xor rcrb push fcomi fadds sbb jbe jo lea in ret nop adc adc jecxz jne lds push loop jo pop mov outsb inc sahf negl scas movsl cmc fcomps mov call fimul pop cmp mov pop push mov arpl inc test (bad) mov lea fimull cwtl int add inc pop ror mov lock jp mov push aas mov and cltd pop xchg dec pop push and mov scas inc mov fwait jne jmp inc (bad) mov push or aam icebp jmp and mov xchg pop inc add popf push xchg xor std cmpsb push cmp inc (bad) or xchg imul push js mov mov add mov sub addl daa clc imul sub inc mov add out adc xor fisub dec out add inc jle sub lds sbb pop mov cmp out xchg mov out das test popl (bad) and xchg xor inc add lcall out cmp or jbe loop inc dec mov push fwait mov (bad) int push mov loope std ret movsl mov out dec outsb hlt sub cmp mov or cmp dec jne add dec stos xor bound xor dec into sbb cmp and out and sbb aas lahf in rcrl xchg addr16 (bad) les inc sub into sub adc fadd or (bad) in and gs mov scas dec fwait or xchg mov lods fldcw cmpsb stc stos test mov or (bad) sbb or pop sub push test pop inc pusha push dec sub fwait imul adc jns sahf daa (bad) divb inc cld lods loop add rcr (bad) cmp leave dec jns (bad) dec lcall pushf and mov scas fs xor cmp dec or pop out pop ja inc test adc mov sub movsb test aas rcrb subl jmp inc dec aad popf cmpb lahf in fadds xor fldl je mov gs xchg rcrl sub cltd push sub sub xorl test shr cmp and (bad) push fdivrp cmp idivl aad sub adc adc mov test icebp sub lods fidivrl push enter (bad) adc mov fldl call pop dec ja mov jns add pusha clc cli push add adc dec jle dec cmp ja jmp aad rolb mov je jge clc inc (bad) shr lret enter insb push out xchg jmp int mov (bad) fnstcw mov mov add inc movsb dec out (bad) adc xchg out jg inc sub jl,pt pop dec lret ja xchg es xchg dec sub and inc dec push (bad) popa jle in pusha sbb jl cmp fwait nop push cwtl xchg fwait mov sub fstps insl rcrb mov (bad) bound or pop or inc pop incl or enter cmpsb push mov add push xor and pop dec sub stos jne pop hlt jo jp (bad) sub pop insb (bad) sbb daa cmp (bad) mov hlt mov pop mov call xchg fisttp insl jo (bad) lods sbb xor adc add into shrb mov in jnp dec xchg add push mov shr cld ja adc lods sub cmp aad rcrb fsubrp hlt test rolb jp push shrl popl movsb sarb ror xchg arpl dec mov clc sub pushf pusha add fcoms mov pop mov ljmp out in movsl test sub outsl sub pop jp xchg andb ja rorl bound push dec pop xchg sub inc aam adc xchg adc imul sub xor repz or (bad) mov lahf mov ja shrb les inc fldl cmpsb jecxz or and cli dec sbb fs (bad) and hlt ret dec push adc and adc xorl xchg jl int and mov sub into dec push stos in sbb subl fcom push pop movsl xchg and fisubrl stc or mov inc outsb cltd imul push into ffree int3 and in jns push (bad) lret mov iret out or pusha push mov dec and sub nop fs icebp fmul repz sub cmpsl (bad) pop mov mov push std (bad) lods xchg push jae pushf prefetchw mov test push das push fcomi ja leave test cmp sbb xchg loop lret fldt out mov adc cli push dec mov mov xchg pop pop outsb iret nopl into fldcw les mov pop addr16 std pop lock mov jmp adc sbb outsl mov lock sub fnsave xchg push adc insb sbb aas ret xchg push inc lods scas vpcmpgtw int (bad) je cmp rcl daa xor jle cmpsl fistpll push xor mov andl icebp insl jle push xchg mov jmp mov cs pop jp push add sbb hlt out push mov shrl (bad) div add es xchg or arpl dec jnp in repz cltd cmp lret orps lods (bad) cltd ret add aam loop or and push sbb hlt jno int ja test push fidiv jnp popa and in or pop ja lock fucompp dec adc popf push hlt in pop loope (bad) xlat outsl sbb jle aam sbb mov data16 cmp call hlt leave outsb adc mov cmc dec out mov jb dec cmp lds dec dec int or sbb cmpsl clc out lock in sbb mov mov mov xchg cmpb sahf movsl les inc xchg pop mov xchg pop xor jge jbe mov dec leave sub xlat je jecxz mov cmp cli in in push cmpsb popa sub cmp stos test cltd fsub aad sbb push mov les pop imul xchg xchg repnz (bad) (bad) add movsl or shlb xchg sbb dec adc js mov ss insl lock mov mov mov arpl adc inc in dec jmp mov inc lahf mov jge cmc add inc jno movsb stc rcr jle out jne jb iret mov rorl ds (bad) mov xchg dec loope into adc js push rcr movsb xlat gs or sbb in dec cmc add jle cmc lock or cli jne push loope lds cmp enter cltd repnz push push jnp aam jbe lock cli add test js or fwait lret jne push add lock add add pusha jmp (bad) or lret mov jmp call incb lods (bad) test int popa add aas fcom hlt mov fisttp cltd add cmpsb or lcall jmp pcmpgtw outsl loopne lret or push inc loopne lds dec push lods hlt sub jl jbe or ficomp bound enter mov sub es and lock rcl icebp sub cmc mov sahf add scas imul es test inc xchg mov mov lcall dec outsb es shll mov inc inc xchg cmpsb xchg xlat lcall xchg push xor stc outsb std sbb push sub ret aad mov pop xor cmp stos outsb xchg es stos and cld std dec sbb decb fcmovbe pop push pusha aam sub and adc decb inc xchg sbb add ja out cmpsb (bad) arpl add insb mov and jno fidivrl xchg (bad) jbe outsb (bad) xor in push cmp xor dec cwtl pop cmp stos mov fidiv fimul jecxz ret mov (bad) cmp aas add (bad) (bad) pop pusha pop mov push fcompp out ljmp rcr shrb popf pop scas pop mov test test aam mov cmp jg fcomps fwait rcrb cmpsb (bad) mov xchg pushf movq adc rcll push ss mov fimul outsl lods jg add mov inc clc movsl out js cs mov pop push jecxz push fwait xchg cmpsb xchg and cmp xor (bad) ficompl add push cmpsb out mov dec fnstsw loope,pt ret scas jo icebp cmc stc xchg jp xchg bound push lret insl fimull insl sub popa sub inc or fcoml fdiv test rol (bad) mov add ret in scas lret dec fisttp fdivl mov popa fisubl or mov xlat std and mov sti popa push mov out fldt (bad) xor mov fs in loopne pusha bound inc (bad) mov rcr sbb out and add add lods jnp dec addr16 addr16 enter xchg out jns push or fadds cltd xchg js adc push (bad) hlt jbe ret sbb scas bsf jge xchg ja sub sbb sti mov out data16 mov hlt jmp outsl imul lock fdivs insb inc push in and xor stos mov cmp decb sbb adc fucomip scas clc outsl call out mov fwait pop out mov rcr out adc pop ds aam push and sahf add sub mov jmp mov and mov mov or push jg xchg roll dec and push mov add jle lret lea loop and mov inc fs jmp shll xchg das jle push push imul testl pop push inc aaa xchg mov repnz jle xor lcall lahf arpl test in lret fwait cmp frstor (bad) cmpsb pop ds daa std leave fsts xchg mov jge adc cli stc lret (bad) jbe adc jmp cmpsb xor les repnz negl (bad) ds repz sar ficomp in or dec sbb out test xchg paddd fnsave es arpl cmp nop repnz mov push cmp scas add aam dec xor cmpsb mov or mov adc xlat js call push pop rcl mov je jnp cmp mov push pop mov mov pop sub mov insb dec or pushf dec in sbb mov push (bad) out shlb sub roll repz arpl scas shrb adc cmp test xchg jle push xchg pop jge js divl xor loop push inc inc fist jg (bad) scas jle stc sar (bad) clc push and mov lods test inc jge inc xchg xor inc sub adc in dec decl jae int cli jecxz outsl pop push outsl rcl test lcall ret inc jo int3 imul add data16 mov rcrl test inc cmp fcoml int3 test iret lock stos mov ds push sub cmp xor stos aaa xchg xchg mov in jb (bad) fdivl movl int3 mov and fs call or scas inc inc js push sti int3 inc (bad) jge mov mov (bad) daa mov cmp (bad) xor loope fisubr insb dec xor stos aaa setge push xor andb pop shlb ja loop pop mov xor adc push and in fwait into or mov sbb dec and xor push cmp adc dec fmuls stc jmp push jne lahf xchg mov mov dec inc test mov push pop (bad) xchg movsl cld dec rcr repnz or js repnz push cli jecxz mov xchg xorb test mov cmc icebp lret in mov xlat rcrl xchg ljmp sub adc pop and in adc jecxz xor aam mov popa jno neg decl pop imul jecxz lret xchg or mov imull pop mov nop mov cs jnp xor (bad) jge mov (bad) jmp vpsrlq test out jnp div aad cmp sub fdivs fmull xor lret mov and rclb xchg movsb jnp push add icebp pop movsb mov repz in dec mov into dec in into add xchg int3 mov jmp popf rclb sub dec inc push sbb xchg xor sub dec mov mov or mov pop fmull test add fadds and outsb push and pop cli enter pop in (bad) sub gs daa mov (bad) out dec les xor push mov jmp les std mov in sub xchg or fsubrl xchg inc pop lods add mov jbe dec in int3 test fsubl mov sub mov sub push (bad) fmul mov es incl xlat and out pop or dec aaa xchg mov rorb cmpsb mov push ljmp add mov jp cmp ljmp and push xor adc dec mov addb out or call xor mov inc lods adc xchg ds xchg ss sbb int3 loopne in mov jecxz and pop ss sub sbb ss pushf aaa dec in or ss aas shll xchg cld jo shrb adc mov (bad) cmpsl cmp inc or les xor xor push pushf mov cmp jle (bad) into cmp or lret int3 std insb int3 retw stos enter mov inc adc cmpsl xor sbb and mov fwait pop clc arpl xor (bad) ja mov jne mov popa ja mov xor insb les mov daa stc or lock mov xchg aaa jno in (bad) bnd sbb fwait pop jb mov popa ja mov aaa cmc or lock mov cwtl aaa js mov xor push ja mov adc jns mov and in (bad) (bad) (bad) sbb and pop pop repz (bad) ja mov fmul xchg dec push push mov fadd lret adc in mov sub adc push sub sahf or mov test int3 popl add sub ror mov xchg mov jmp push pop push pop push mov addb fxch xor jg jno jns jne fnstsw mov outsb jle fmuls les int3 sub insb mov sbb sub cmp leave push cmp cmp adc jae iret ficompl loope pop int add fwait rcrb (bad) mov lret das mov stos sub sbb xor lret lods jle imul (bad) out or sarb jbe jl mov ret pop icebp pop fldlg2 add stos loopne sti dec and push (bad) call pushf ret mov and in dec add sbb dec mov or and insl mov lea dec push jl inc inc cmp xchg icebp mov cmp mov lret adc adc (bad) addr16 and sub mov out mov xchg mov xchg cmp std jo (bad) jae out mov daa mov aas lock fisttpll dec repz add jae and adc pop xchg jo cmp jo cmp cmp and imul push xor std movsb ds cmp clc adc bound adc shll and mov or mov ficom and ficom mov ret xor movsl daa lret aaa and js cmp add incb inc mov dec movsb xor or icebp mov sub js mov jb add sub or arpl clc and or rcll cmc push pop jae mov mov push adcl ret xor ret xor xor imul mov fbstp sar jae add int3 loope cmp in ficomp (bad) mov and sarl push jae xor lods adc rep data16 jl mov int3 (bad) mov int3 push insl test push add xor xor imull mov mov jae loope fsubs fbld bound js inc mov daa testb data16 dec xor adc notl jae or jle pop cltd jb aam mov lcall cmp cmp mov jno fadds sbb push pop scas and aaa xchg adc sub cltd add cld rcrl cmp sbb loope mov (bad) xor jp aas addr16 mov xchg cwtl xchg mov test in adc js cmp js cmp out out jo (bad) inc and sub js into aaa stos jno gs out ret js xor mov mov lea and js cmp or push cmp sarb fnstsw fs mov sarb insb rcrl cmp repz and scas jecxz mov repz mov cwtl add xor mov adc testb jg and cmp loop mov icebp mov xor sysexit push aas adc fbstp das mov jae mov lods or je cmp push mov and mov std dec cmp loope dec push and cmp xchg std inc cmp inc aas dec mov ret add push mov jg ret xchg aam xor add nop mov inc cmp (bad) aaa cli (bad) jle,pt push fdivp xor mov xor push aaa or xor pop pop mov add pop xchg push cmp arpl rcrb repnz loop inc sub and xchg add xor cmp int cmp adc push aaa inc lods repnz (bad) cmp sub ret cmp ja and mov jbe mov cmp aaa dec xor js cmp cmp mov mov lea lea icebp inc push add in cmp loopne sarb addr16 aas mov xor aas mov push or mov and mov daa xchg out test mov repz jo pop aas divb out inc aas jo xor in xchg out test cs add mov aaa or and imul xor xor subl adc adc adc pushf mov jmp xor mov adc arpl jo (bad) sbb xor aaa lret xor jp and pushf add jne and (bad) add adc mov pop xchg out in or lods xor pop loopne or je xor jnp lcall push int3 inc mov lret les adc int dec jno faddl mov pcmpeqb cltd rclb nop mov jmp out jmp ljmp psubsw loop xchg add in sub mov dec mov lea fcomip (bad) sti pop pop push mov mov push push pop sub sbb call sub ljmp je (bad) subb ja sub mov mov cmp sbb push mov sbb inc pop xchg xchg sub addl nop mov sub mov add jmp sub cli lods pop loope les leave pop test lea fcompl dec xchg (bad) fidiv lds sub mov sbb adc or xor mov and shl loopne call jo add daa nop movsl push out inc pop mov xchg pop and push notl push movsb push test pop adc aam cmpsl push in outsb decl stos push stos shrb movb roll frstor inc jne,pn scas adc push lahf xchg cmp insl ljmp mov pop aad es fs inc pop jmp cmc jne inc push je xchg pop mov pop std das std outsl std ljmp mov dec add adc add adc adc pop jo hlt mov pop cmp push fxtract (bad) fldenv (bad) mov (bad) pop (bad) sub lret test test movsb dec or or or jge pop cmpsb insl movsb jge jge mov test inc lret ret ror fsubrl sub test ljmp cld jp sbb cld test jmp arpl mov bound bound jb jle jl call loope mov mov ss cmp sub xchg es cmc sub mov xchg push imul pop cmpsl mov popf loop inc pusha or rcll rcrl xchg adc adc xchg mov jbe jle jo js jnp mull call pop xchg mov push test jne arpl outsl inc push outsb gs int setl add and imul push outsb xlat pusha (bad) cmpsl jecxz jmp out out mul xchg cmpsl out out out (bad) or add mov sarl mov sti xchg sti (bad) mul jmp icebp mov cmc add ret mov (bad) loope sub jb fwait loop jmp aaa stos sbb xchg cmp mov jp lahf andl pop outsl or es adc cltd shrl popf pop jmp mov cmp pop adc lahf adc pop adc adc adc adc adc xor pop shll addr16 addr16 test addr16 fs in add xchg add adc pop adc sub push in adc xor or xor or orb (bad) (bad) punpcklwd push cmp xlat mov mov hlt leave cld cmp mov cld (bad) cld sbb xchg xor add lods mov adc adc adc adc xor xchg arpl arpl shll arpl arpl arpl test arpl arpl arpl arpl arpl pop pop pop sbb lahf pop pop pop pop pop fstl sub xor int3 inc sbb ret sbb sbb xor aam mov nop mov mov push sbb push sbb inc xchg jne push lahf push cltd jne or movsl mov push lret stos mov dec scas dec mov lret mov int3 rcr lret fs int3 mov sarl and (bad) xor pop inc jne adc aad xchg icebp imul jecxz jnp or loopne (bad) fidivr lcall mov inc sbb xchg mov xchg add cmp or fs jno cwtl int3 rcrb cltd xchg test roll add dec add mov movsl jno cmp mov adc sbb xor mov movsl mov mov ds (bad) mov out out push add pop push js daa out subl sahf in cs mov fucomip inc pop and dec dec mov dec int3 dec lds dec fiaddl sub je int int3 cmp movsb inc and enter lret mov cmpsl fiadd fsubl leave mov sbb mov (bad) or ss shld (bad) mov sbb pushf sbb inc sbbl jae mov js adc jnp imul ret shl or jae sub or add pop sbb mov inc roll cmpsl insb or push repz lods jmp mov and xor bound cmp or imul cli (bad) dec test lock stos xor iret mov (bad) sub xchg pop or xor xor cmp pop arpl outsb push mov or (bad) or or movsb imul fistl inc mov mov inc notb and gs gs xchg jbe movntq leave sti mov xchg loop enter js xchg push aaa in jl jnp dec and fucomip sub fimull mov in (bad) jns adc push mov xchg mov cli xor sbb mov lods clc inc add shrl sbb mov jge jno push xchg popa and loope cltd fldenv cld mov lds cmpsl aas add sbb stos test stos movsb adc les or pushf sub popa imul jl cmp testl out test idivb sti dec cmc mov adc and enter idivb jp es dec xchg jmp inc adc mov adc xor lahf jb sbb aad lcall push sub mov sahf xlat jp cmp test repnz jbe push mov std jg mov push lcall icebp js ret dec (bad) jb (bad) daa nop sub outsl xchg xlat push jno jle popf test outsb (bad) mov lret pop push arpl imul stos idivb push sbb jns dec loop enter sbb fcoml daa dec inc pop and push lods xchg xor in dec mov and xchg imul das test push test mov cmp rcr inc or inc push out inc fstps (bad) adc jns and cwtl push in adc dec shrl in in sti (bad) (bad) cltd jo adc or out ja sub pop mov aaa cmp fdivs dec dec push push xor mov mov fdivrs inc push pop dec mov sahf pop in pop jl adc addr16 jle enter lret arpl jne xchg xchg jae shr jle push jne out push adc jmp jle daa add add std out rorl mov jno mov popa fildll xor movsl inc lahf sub sbb aad jmp ficomp mov inc fs pop push jecxz xor jno sub or (bad) pop scas pop mov cmp lock popf in call or bound repnz pop and (bad) mov movsb addl mov jns sbb sub fdivl test mov or enter pop fmull mov cmc cmp cwtl loopne cmp or pop push inc xchg repz (bad) jae mov cmc sub pop mov loopne jo lret (bad) (bad) (bad) lret pop lea pop out lods push cmpl pop jae cmpsl sar int (bad) mov dec (bad) stos je fucom js cmp jne sub lds andb (bad) mov inc push push aas fcomps fs lock ret push fimul mov cwtl pop negb out or push sub nop (bad) mov mov addr16 pop imul outsl mov movsl lret sub jb insl gs cmp and mov mov loop mov aam (bad) jp push imul clc and dec xlat das jmp je jb fs cwtl imul push cmpsl jmp push lahf and out out and outsb outsb mov mov pushw inc ja pop stos or sbb jo mov xor mov mov mov add dec jp icebp cmp mov xchg ds mov jmp mov mov pop pushf mov sbb je mov out dec and mov outsb jne lret lahf iret and mov outsb jns mov nop xor aas dec mov pop aas popf stc and fs cmp xchg call je lds xchg dec aam stc mov loope sub and mov in out xor pusha test mov pop jo pop lods and mov into push js,pt mov (bad) les push aas jge mov dec push cwtl push mov and pop popa add xor cmp and lods stos mov ds mov add jle roll das cmp dec pop dec mov addps daa lret sub mov pop push (bad) aad js mov push (bad) jge push rclb ja and fxch jge lock rol jns jl mov and mov add outsb xor mov lods into lahf out mov cmpsl movsb mov test out out daa test add roll mulb mov push push xchg (bad) insb shrl and aas inc cmpl add or lods adc icebp stos test out sti imul imul mov xchg xchg imulb dec rorb out out mov mov mov dec fabs (bad) fcomp xlat push fbld testb cmp cmpsl imul xchg push mov cmp mov mov arpl lods aas xchg mov mov out add sub pop sub cmp or into arpl mov loopne (bad) mov ficoml push xor mov adc mov mov les repnz lcall mov xchg xor fnstcw addr16 pop sub jecxz or adc mov out scas jl mov lcall jno data16 pop mov (bad) push lods add jl ret jno jne imulb pop ret mov push push dec sub mov cmp call xlat cmp out cmc jb inc add cmp mov (bad) (bad) dec add add out into pop pop outsl push adc xor jns add leave in or ds cmp sub stos das sub je push mov cmp mov jb sub lahf aam js adc push push cwtl scas mov movsb mov xchg jp mov mov fistpll and sti sub pop push inc dec and push xor or out (bad) xor repnz or fdivrs inc jg imulb sub mov cmp lods xor cmp pusha cli lcall mov add mov adc jecxz enter dec adc pop mov push imulb mov aad out lret pop pop rorb inc inc push pop dec inc cs ljmp ss inc mov add or mov out movsl sub or jne fidivrl imul leave sub mov test fs jl inc movsl imul sub ja cmp xlat xchg dec push into rcr jno es ja mov test mov mov jo pop cli daa fmulp and and mov out and adc iret hlt aas call in in jle negl mov or in pop jne lcall iret imul std adc scas mov loop (bad) xor sbb movsl inc loop pop cmp rorb pop lock rclb aaa inc (bad) jae xlat nop mov xchg mov and xchg lahf and hlt leave movsb fsubs push shlb xor push data16 mov sub leave in xchg arpl cmpsl sbbb enter xchg adc inc mov sub lahf idiv jae test push cmp push nop fcom movsl (bad) mov add sbb jecxz mov xchg add (bad) ds jae aad (bad) xchg enter movsl fimull daa out out jl push (bad) sbb cmc jno and cli cmp mov push push cwtl push lret movsl (bad) mov mov js (bad) mov inc mov iret cld xlat js jmp enter fistpl add (bad) cmp (bad) jo mov fsubs iret cmp aas mov dec adcl xor ret xor add jae jb cmpsb mov pop ds scas dec sub xor inc cmp jae lods lcall daa imul stos pusha sub pusha cmpsb or (bad) out jl cli add sub ja repz mov leave mov je in xlat xlat sub mov dec das mov outsl pop inc mov scas pop add adc outsl xor inc pop cmp adc and je xlat or mov jg jo xor cli arpl fcompl in pop jnp jo push pop sbb sbb inc jo cmp movsl data16 push cmpsb pop jo fiaddl cmp mov mov sbb imull lret fistp cltd lods rolb jmp cli add jl push popa lds lahf and mov cmp cmpsl ret add push dec sbb mov iret xor sbb cwtl cmc lods push scas stc sub fbld les cmpsl (bad) mov mov call (bad) movsl scas push inc pop cli test clc fisub push jecxz pop (bad) pop mov or clc rorb mov arpl insb cmp lea mov je mov or xchg pusha js pop jae imul into cmc psrlq scas lcall repz jo add dec daa lods call cmpsl add pop cmc xchg (bad) jno and cltd fdivrl push call xchg xchg (bad) jg cmp pop adc xlat cmp lahf pop jo dec jmp mov xchg lahf stos stc jp scas cmpsl out (bad) jmp mov imul rep test xchg xor (bad) (bad) (bad) or push cmp jno or aad add cltd loope sbbb leave cli mov jbe mov sbb movsl testl push sbb outsl ja stos mov fstpl fsts or sbb mov aad sub push loop lock pushf add aas pushf push out xchg dec jmp gs sub faddl dec out pop dec loop xchg dec movsb test pop push push adc por test mov push dec movsl lret push test sahf pop inc jo add scas mov add nop add aad (bad) scas mov jbe ljmp or xchg xchg push fsubl sub lea test out imul dec pop pop arpl inc xor loopne mov jl pop or into std pop mov cmp repz push ret scas lret es mov xor ret test imul xor (bad) or in and push or in push aad cmpsl test mov aas lcall sbb xchg (bad) roll or sahf mov out jo fidiv jbe jne xor push call jmp and mov inc jle mov jl ficom mov mov (bad) enter pop not out xor outsb push or and popf jb pushf xchg push mov mov add es push (bad) int3 push movl and add xchg out mov fsubl xchg cwtl jp xchg lret sub clc inc fwait xchg and sti std jb push inc shrl sbb push das adc xor fsts add xchg adcl loop loope and add ss sti in xor mov mov push dec loope (bad) fldcw jecxz test or push sbb jae or mov loope daa (bad) jg push xor sub cmpsb rsqrtps pusha xchg mov psadbw sahf push jmp iret aaa insl cmpl push insl mov jmp icebp fwait sahf xchg sub pop test push xlat stc and mov mov and das mov adc flds iret push clc or imul data16 loope add jns out xchg lcall loop fs push imul adc or movsb jno loop cmp push call cmp pushf xor movsl pop (bad) lret mov jl xor mov cwtl add inc adc mov nop les and xor jle in ljmp inc jle mov ljmp sar jno stc or gs sbb xchg push push adc xchg mov (bad) dec mov cltd popf jle aas push nop fucom inc outsb outsb fs fucomp push pop xor pop sbb (bad) stc rcrb aad es add xchg mov lret rsm repz sbb setne mov inc push (bad) fildl inc cmp xchg outsb sub or aad rcrl sub pop cmpsb cs out mov stos xchg lret cmc sarl out push insb inc jo cltd les ljmp and in into xor push adc push push add jl adc jbe push dec je fistl pop lds lret sarl imul (bad) divb in mov jnp or insl jo add push sub dec mov inc push cs inc jnp add jae loope or jl inc add cs leave xchg lcall dec xchg loopne mov jp outsb loop mov dec fdivs jge imul divb mov aam js out out cmpsb push and scas pop sub lods pushf stos outsl add pop nop cmp sub add std jb mov dec lret jl add or ds popa sbb fsubrl arpl jo cmpl xlat out scas fcoms or dec lods out dec adc sub test add out pop cli (bad) cmovp imul leave arpl lock stos orl push inc cs xchg xchg cld jbe je loop pop roll test sti xor sbb pop cmpsl xchg mov aas aad and flds mov je incl lock fiaddl inc fwait cmc jae mov fcmovnbe mov or jmp mov cmc insb (bad) push adc shr dec inc jo lods lret int3 sub sbb push call or mov jmp push push imul out pop mov pop roll lret jb cmp cmpsb inc nop sbb fiadd mov dec push fnstcw cwtl push push mov mov test mov cli in stc push ja adc imul sub les ja dec inc cs fs fs push lret jle push cmpsb popa out cmp sahf call imul leave jp adc and mov push dec adcl in (bad) mov ja adc mov negl daa js mov loope out test jecxz aas jne rolb inc xor outsb xchg scas adc xlat mov out test cmpsl gs lods inc pslld mov clc and mov aaa or jg mov jbe mov mov cmp lahf shrl pop test push cmp jbe sbb dec mov pop lods jg xchg mov and loopne push cmp scas mov sbb xorl dec dec push dec mov fcoml sti xchg scas jns mov iret adc inc mov push stos daa cwtl adcl push aam nopl sbb or ds push hlt in jo js push mov fldenv and fldenv push push mov mov lcall jp imul sub addr16 lds cwtl jmp jmp sbb cmp pcmpeqb mov negl mov mov mov rcrl jmp add add in mov xor (bad) jae add rorl (bad) adc pusha addr16 mov out ss ss sar loopne push ja,pt lea dec push push or or push cmpsb insb bound xchg sub (bad) dec lret mov mov cwtl ljmp mov pusha sbb test mov ljmp inc mov jbe inc xchg jp test and mov inc and adcb ss pop xchg cli addr16 jle loop mov pop xchg inc stos jnp scas popa add mov lret arpl jb add push sub mov jae lahf das aas insl or aad fbstp repz xor test sub pop sbb insl xchg insb hlt sub outsb lods mov push push roll into (bad) sub je jb sub imul cmpsb fwait cli xchg das (bad) mov or push inc xchg mov mov enter rcll inc cmp jecxz mov or sbb scas daa jle mov pusha mov add mov or mov mov out lds or mov adc adc movsb lret bound sub mov ret imul adc push sahf jae pop shrl addr16 into fisttp jecxz sti lret xchg xlat mov or adc mov cmp sub mov or outsl pop fcmovnb mov xor mov pop mov in repnz jns jno mov cmpsl insb jmp pop (bad) adc repnz ja mov clc jmp test mov in cmp fild mov add stos adc xchg out jmp pop jb insb push mov ja jbe test mov addr16 push mov imul push dec dec mov or (bad) add fs pop sarl jo into fidivl mov fbld push repnz add push scas ds pop xor aaa fiadd imul imul xor dec and sbb mov push push or andl out cmp push push popf push mov (bad) mov xchg cli aaa mov fwait sbb std or jle lret hlt sarl adc inc mov add jecxz adc pusha pop iret outsl xchg sub out jl push cmp cwtl (bad) push (bad) jno out add mov or jmp daa mov dec in jl xchg out add xor xor mov lods add ss insb bnd cmp xchg sbb add cld out popa cwtl sub in jp xchg adcb or insb mov cwtl mov mov inc out xchg pop scas sbb rolb sub outsl fiaddl jb je lret loop in jns outsl ljmp pop inc fimull insb imul pushf adc lds loopne adc aam neg mov push lds insl inc lods je sbb xor lret push pusha or lds push (bad) xor cmpl xchg out gs movsb push dec into sti fs xchg sbb les xor push dec push repnz mov push mov loop lods scas loopne push repz jp dec pop mov push mov in gs data16 cltd jg cli cmp or fs cmp dec cwtl rcrl stos pop mov jmp std dec (bad) out or divb fs and insb call sbb push mulb sub or flds inc xor mov outsb pop pop inc cmp xchg cmp loope or inc lcall pop xor xor mov ss mov (bad) mov xchg adc outsl popf pop jno jo jno xchg ljmp std sti jp sub mov jmp add xor sbb out pusha in leave andl out cmc int3 sub popa mov in mov xor or les (bad) out mov mov hlt ret hlt xchg xlat inc mov sub in mov push sbb sub cmp cmp (bad) sbb shll out jne ficompl adc inc stos movsb add std inc nop cwtl add mov enter sbb sbb imulb mov jecxz jecxz xor mov xchg xorb arpl lea mov sarb xchg xchg stos stos cmpsl outsl and out fs (bad) xor mov dec push (bad) xor jbe mov mov in movsl or lcall es fcomps lcall jecxz (bad) clc cmp lcall fsubrl mov jb pop cld cmp dec pushf mov (bad) ss pushf shlb jmp or mov jno scas xor int3 mov sbb (bad) xchg dec and fwait mov xor popl mov cmp sbb nop mov popf scas dec push pop out clc mov inc fisubrl and subb mov push dec out add mov pop jg imul jmp hlt or loopew aad push in out arpl in (bad) dec fs cmpsb shlb cmpsl (bad) mov hlt push inc (bad) xchg das cmp pop nop xchg das outsb mov mov fiaddl test lods mov lods adc enter cli xchg (bad) push stc inc mov lock sub (bad) mov enter lock or cmp ficom dec fsubrl gs mov jbe cmp push lods ret ljmp cmp xchg xchg dec adc push daa shrb fisub imul decl ss das add stc mov hlt sbb jns arpl rcll or adc ficoml add cwtl das ret mov enter cmp stc hlt push movsb push xorb xorl std rcr loop push mov mov aas mov mov mov punpckhdq cmp cli mov sbb xchg mov adcl mov bnd push (bad) mov stc fsubrl jb inc pop jmp cmpsl dec in push or jmp xchg push mov jp negl push jnp push ljmp and stos pop mov pop cmp push mov data16 ljmp loopne xor call sbb lods adc or jge dec xchg out xchg (bad) ljmp sub je push in and adc out jno xor repnz test push insb and cmp out and mov shrb popf mov rcll mov pop shll scas mov (bad) mov pop jne mov lock pop push leave cmpl jnp push bound stc push add sub int xor pop push into cmpsb push lea jae push adc sub xchg shll sbb arpl outsb push sbb cmp aam dec inc xor mov (bad) sbb adc (bad) fimull or pushf clc mov into push dec arpl push inc fistp xor jnp cmp push mov xchg dec pusha loop mov mov xchg fucom xchg call (bad) aas push dec jno dec lcall and inc xor (bad) out jnp dec in outsl mov and (bad) jo test test int les dec mov les cld mov dec lods inc fsts int3 repnz sub add das movb mov dec push pop mov sarl adc inc and mov push adc jp jo jge inc cs xchg and fdivrp nop lret mov (bad) mov je fwait or nop rcrb rcll mov iret ljmp xchg jg sub xorb std mov mov cmp or sub enter jnp ret nop cmp in pop sbb inc (bad) and mov cs dec mov or out sub and mov fnsave jne mov lds or ljmp icebp js stos sub fisttp jae leave or mov insl fistpl cmp aaa shlb xlat adc jbe inc add mov sahf and and scas lds dec dec inc sbb inc leave mov cmc test or aas rorb push mov add lret ficompl sti adc arpl rcl into loope mov out adc dec (bad) sti adc std jns xor pop (bad) dec push cmp or and test in dec adc push (bad) jo outsb push imul push enter test lret xchg cmp sbb add ljmp fldenv mov xchg inc sbb fsub mov and dec ljmp sub jl in cld lods (bad) repz flds lock loop mov in test jmp addb loop pop call jl loop and fisub sbb mov mov inc ret cwtl mov jl cmp sub push mov push decb dec ret dec lcall aad mov xor dec push jg stos orl pop movsb lock dec aam pop scas in outsl in add lods jmp xchg lea xor fwait xlat xor xchg sti lret cltd and sub test adc insb add push repz pop xlat repnz inc sub mov add cmpsl mov jo ds mov inc ja mov push enter mov sub lret (bad) mov arpl xchg push dec cli xchg inc fnsave add pop push pop sahf bound adcl daa jmp mov mov cmc and (bad) test or cld ds adc xor sahf loop aam push scas xor out xor faddl bound (bad) repnz sbb pop xchg push and cld pop gs sub aam jmp sbb add xorl jns mov or insl in cwtl dec jge (bad) lcall xchg clc lock dec inc movsb sub imul loop and ja push iret inc cltd mov (bad) leave push xchg and push xlat dec inc mov mov std cmp bound inc iret push sub loope loop push lcall inc xchg adc test mov cmp mov or jo sbb cmp or push incl pop (bad) pop ret into and lods loope xor hlt push sub adc or or xchg aad scas loope fistpll mov (bad) fldl imul inc repz fcoms add mov or jb fldt jae out pop jns pop xlat push pusha stc pop jnp popf in inc fbstp cs jo pop mov movsb pop push dec cmp mov sbb iret scas sbb sbb loopne inc in jp outsb bound inc cmc lock fidiv inc iret jns (bad) lock mov ds (bad) divl lcall js ret pop lock movsb orb pop push insl test adc cmp cmp sti push cmc scas aam dec jle (bad) (bad) jle mov and aad shrl adc lock xor out xchg xor mov sub sbb push mov movsl mov fld cld push dec lds mov unpcklps jbe mov pop xchg es sahf inc dec sub mov fcomps cmp xchg or into int3 cmp sub xchg lret cwtl fmul mov cmpsb mov in jns jmp in add out mov sahf push faddp and cmpsb mov iret lds pop sbb inc fiaddl addr16 ret lret mov cmp inc adc test pusha enter imul enter push jns dec movsb jmp les add ljmp or pop dec inc pop pop add mov into imul pop icebp adc mov call and int3 mov sub dec fwait or or adc aam cmp ljmp fcmovne inc sub test aam inc mov pop pop nop lret mov scas addps nop mov jle or imul xchg and mov push jle test js cmpb sub sbb inc mov arpl dec jge mov dec mov lods pop cmp push sbb fs mov int gs xlat add aas add scas test sbb add loopne (bad) repz xor push int stos inc popf inc inc das je gs out inc jecxz cmc clc movsb push pop test lds imul add js in xchg inc mov pop insb push bnd xchg push repz scas mov push cmpsb test lcall pusha imull mov xchg adc in pop dec xchg push sub fs xor dec lret cmp and pop add push adc stos cld idivb loop in cltd mov or xorl inc cwtl (bad) add ret xor adc mov mov dec sub xor arpl pop push jecxz push mov je repz or aas pop push enter mov jne in dec pop movl ljmp and dec push test pand sbb ds jmp in dec push fldenv dec pop aam sub ret cmc shr pop out das insb xchg dec arpl pop and sub mov imul popa xchg shrb aaa int3 lcall daa push xchg jmpw push mov cmp jo mov mov div sub xor scas mov jo mov jp dec cmpsb fwait (bad) mov js sti enter daa pop je es cmpsl mov dec iret or cmp sub cwtl sbb (bad) pushf stc pusha leave push arpl push xchg dec dec push sbb xchg adc mov sub jl mov xor xchg shrl into stc out push int3 and loop or mov cmpl (bad) out sub cmp in addr16 (bad) mov inc jge stos push jmp xchg push in (bad) dec es add mov stc inc mov lahf (bad) pop loopne pop (bad) enter sub rorb dec (bad) mov mov xchg lret inc cmp mov adc pop or cmpsl jno mov mov dec pop mov xchg into aaa js rclb (bad) or fisttpl push push movsl inc xchg loopne fwait jb inc push scas cwtl test inc adc and les mov dec (bad) in adc cmp xor out adc cmp sub loopne and cmc cwtl mov pushf pop sub aad dec add cmp mov arpl fwait int jbe (bad) dec cwtl push imul sbb test dec jbe enter mov (bad) pusha loop test loopne sub ljmp sti int sub pop js shll idivb repz xor cmp gs mov jg (bad) mov push (bad) imul xchg into adc add push dec shrb sbb aad cmp inc adc inc cmp punpckhwd xor jns lock add inc outsb push dec icebp imul add xor insl sbb pop add xor push stos add xor aaa inc xchg fstl jnp jge lods xchg mov add cmp xchg push adc ss mov mov jae test repnz insl enter or mov jg mov cli mov lock adc test add or xchg jecxz inc neg mov xor clc in cs lea mov loop adc (bad) pop xor xchg test push push sub out arpl mov scas pop dec or incl sarb xchg jns mov adc cld cmp ret mov jmp ss out inc out sahf sbb in jae lret xor cmp ja push lret cld divb mov in pop (bad) xchg popf enter jno xchg and test test rcrl mov pop (bad) adc inc out sub cmpps orl push xchg pop ds bound mov sti pop mov and mov test (bad) jbe dec leave (bad) sahf cmp loop sar push xchg aas dec push vpmaddwd stos sub pop inc (bad) ljmp jae bnd fcmovnu push jmp scas mov xchg jne,pn loope pop push jmp adc xchg popf xor imul and dec lds sbb lcall pop push lods jge je cld cmpsb test add and cmp out jecxz sub (bad) push add or cmp lea xchg inc jno jg xor pop adc out enter arpl jae clc scas xor add push out cs sti push ds ja push outsb (bad) jae iret pop into mov out imul and loope jg aaa xchg (bad) push gs das jp jns xor lods inc test sti mov mov fs movsl into adc fwait mov cltd xchg push loope das outsb (bad) jb mov cmp pop sub sbb cmp cmpl outsl test bound mov dec adc mov aaa xor bound out sbb (bad) cmc fnsave xchg push lods imul lods aaa cmpsb jbe push add sub ss sarl mov pop cmp and push cmp add insb dec lahf inc lea jecxz xchg mov js push mov es cltd (bad) in xor add (bad) add test and in out mov mov in pop movsl jae push mov jb push jecxz inc repnz iret scas cmc cmc pop jl xor loope js jae les insb adc fwait xor pmaxsw shl outsl loopne pop aas pop and mov leave or xchg mov sub sbb adc ret pop adc pop pop adc jge pop xor and push xlat sar test std lret stos lcall inc test orl adc mov add mov cmp and mov mov addb sbb or dec notl inc xchg insl jecxz lods mov test push push and aas sbb xor xlat sahf sub push xchg sbb sbbl mov adc sbb in xchg test sahf dec loope rclb push inc mov aas insb mov sub sbb loope imul pop rcll (bad) dec mov notl in cmp js cmp cmp fidivrl movsbl imul inc xor lock mov andl shrl xlat jns add add and jle lods mov and add sbb adc cmp cmpsl inc cmc push or pop inc dec addl cmp dec scas cltd lea dec xchg cmp pop lcall lret lds inc xchg lock cmp lds das fldenv testb fidivrl lcall mov test ror test push mov mov lods inc mov push sub ror jecxz rcrl mov mov fcoms repz imul ret stc call sub xchg iret xchg cmp rcrl push (bad) mov xor push nop xchg push xor cmp clc into cmp mov mov aad lahf pop mov int mov lahf mov (bad) hlt dec cmp cmp pop (bad) dec inc je mov xchg ljmp dec push loope cmc cmp pop jle aaa lds ret add aas lods stos mov fadd and lea out jg aad inc jno cmp jge fdivs addr16 in imul (bad) (bad) sub icebp add push and icebp cmpsl sbb cmc test lea add std lcall and rorl xchg mov arpl sub push cmp add push jle icebp ret sahf addr16 out incb lods mov leave adc mov lahf (bad) loopne and fcomps and lea imul cwtl es aam and jl in sub and std out mov lds push stos adcl aaa lock or hlt adc sub insl aam (bad) rclb lods fcoml xor iret and or fildl test or fistp negl pop xor popa xchg pop movsb clc jnp adc cld leave mov into test (bad) hlt mov bound sub dec add lods jle jo add arpl (bad) int loop (bad) enter scas and pop test notb xor mov xchg mov and xchg (bad) pop lret in mov fisttpll mov push xor mov ja test scas push adc loopne dec dec hlt loope lcall add enter out dec mov push test pop icebp push jae ret sbb adc jmp js out xor sbb lock lahf dec jl cmp jo sub ret mov dec inc rorl lods cmpsl daa nop lret sahf orl setne xchg and (bad) cmp sbb lock adc inc ss call movnti jle mov pop out aaa mov shll cmpsl xor into pop jl mov add cmp iret mov leave (bad) mov in dec mov pop mov push dec mov mov cmc mov bound jge adc push fdivr and jb adc repz pop dec ss aad jnp test and cld xchg pop adc inc mov and popa pop jns ret add roll cmc dec mov movsb roll repnz dec lahf movsb repz pop daa iret test fbstp mov add xlat enter sub pop add fucomi cmpsl fstl icebp lret and mov jp adc push lahf int repnz jne ror scas (bad) xor lret das scas test adc dec in adc (bad) sbb mov inc mov pop add fildl mov mov xlat mov adc movsl int3 jg fsubrs sub mov or fs lret pop scas inc call xor loope lret enter inc mov hlt add rol adc mov repz rcll test pop ret fwait sub sti sub int lock sub dec loope movsb adc sub dec adc pavgw sub pop push imul jne xor jmp lret lods mov cwtl enter arpl mov mov (bad) and aas cmp jg and dec pop jge mov jns xchg jg repz or dec cmp mov sub pop lds bnd rorb sar aad sub mov fistl sbb xor loopne iret mov in stc inc xor jp cmp jge insl push push scas sahf fldl mov pushf pop mov mov sbb adc or adc xor repz mov adc or lret and push (bad) mov mov jae (bad) adc imul arpl sti sbb std int cmp loopne xor into popa and add jp insb fimul ds xor and mov pop pop jle jmp push jecxz imul lahf push loop repnz lods mov minps xchg jns and repnz (bad) mov subb pop cmp rolb jnp ja pop aam negl mov or and jp cli sbb lret mov fdivrs and and pop mov jmp leave mov xlat or xlat js gs jl and pop dec pop push xor mov and scas out mov in and aam mov into fdivrl mov cs loopne mov ja adc dec sbb mov xchg pushf daa lods xchg imul arpl test je enter cmp arpl lcall adc fbld out push gs out nop rcr lret inc or arpl push (bad) shl and mov dec out pushf shlb into or nop (bad) movsb sbb or hlt out jp or or push int3 adc mov into fwait mov repz mov sbb (bad) jge clc lods mov dec cmp jecxz mov (bad) pop in sbb fcompl jae nop ss lret push lds nop sbb cld add js sub sub xchg mov jp movsl pop add pop cmp pop xchg xor add mov out fcoml mov adc test popa or notb in dec cmp or out jg push movsl jo xchg pop jae in adc in xor jl les daa (bad) xor inc adc test mov add test mov cmc (bad) xor inc dec scas jb inc dec enter adc inc mov and cli daa fnop sbb dec mov xor pop add mov arpl jbe adc inc jle (bad) int mov (bad) rcrb mov jnp insb and ror jl out scas sbb push cmpsl adc jp xlat adc push cmp mov cmp (bad) xchg ds pop inc cmp cmp push mov dec xor push movsl push mov and cmp push rolb xchg push xchg jp in xchg out movsb or cmp push inc mov mov mov dec adc data16 xchg lret outsl push jbe sub cs mov out lock in neg xorl fisubrl jae push mov push sarl sbb hlt shr out cmc clts pop ret add jbe sahf jbe (bad) pushf lgs inc test mov push mov add lcall sbb lock adc fucomi mov je inc pop (bad) push pusha dec push and imul ss stc fdivl fldenv jge xchg push (bad) enter pop out cmpsb es rorl push mov cmp mov and lret cs addr16 addr16 icebp (bad) dec sub movb sahf cli gs insb mov inc jo lods pop mov lea mov mov or mov mov xor pop enter or les fidivl lock fildll push loopne pop iret mov rclb xchg ret adc pop nop dec push lods mov mov dec hlt lret stos (bad) push jmp insl cld sub adc (bad) xchg (bad) out je pushf out int imul xchg inc xchg mov jae sub test fs push xchg mull add popa add loopne gs xor pop sub inc into dec lcall mov mov sbb pop test xlat cld cmp hlt pop sbb xchg out jne pop sbb cltd cmpsl mov pop inc std xor adc dec push fwait or out (bad) mov int ja sar lods ja sar ds inc xchg cs dec aad fdivl and push jp pop cwtl ljmp pop add das sub inc and outsb push fwait dec cmp mov cmp push dec insb cmp jbe mov lret hlt arpl pop jl pusha mov jo fild cli (bad) sbb test repnz insb inc sbb mov and mov adc aam add add and add push inc nop cmp mov shrl test inc xor fimul cmp (bad) cld and mov sub pop adc jae mov into add nop xchg iret sbb pop into das imul sub ss sbbl imul inc test out xchg cmp cmp add jmp cmpl (bad) mov lahf pop xchg cmp cmpsl nop movsb pop push decb or add inc cmc out lret scas dec sbb int pop mov adc inc xchg cmc inc cmp andl lock aaa jmp mov xlat cld sub pop (bad) pop mov out cmpl mov lret pusha test movl (bad) out inc add aas mov mov or das sub sub sub std hlt lcall push roll lock push add ror or repnz xor dec test mov mov jo mov psadbw inc adc mov iret adc stos (bad) repnz jmp (bad) mov aas sub repnz and mov and mov mov bswap mov mov iret mov ror insl cmp shll add cld sub (bad) fcmovnb and les fsubrl (bad) dec rclb or decb pop (bad) stos (bad) (bad) cltd push and sub xchg lret cmp sbb xchg sbb pop fwait mov cld cmp adc inc adc mov add mov mov push sbb pop (bad) adc mov sbb jg fstl inc jl mov popa scas jg pop out pushl cmpsl push mov mov push test mov cmp sbb adc push jb cmp and jnp loope repnz iret xchg lahf and mov add (bad) scas adc pop mov in push lahf sub lret inc xchg sarb push sahf cmp dec xor cmp jns outsl lock jns jns cs mov push jbe,pt iret ror adc repz and mov dec popa aaa jmp mov adc or jae pop test enter insl stc cmp push push mov inc jle mov jmp sub jae adc pop jnp enter icebp mov sti mov xchg movsl lods mov icebp fcmovnbe and jbe cmc mov mov dec pushf (bad) mov in sbb xchg and jg jge (bad) mov insb push or adc cs cwtl inc mov enter sbb lret rcl enter arpl pop jmp jmp hlt adc insb sub sub iret dec cmpsl xchg push popf adc jge or iret gs (bad) enter call cmp in or xlat xchg lods shrl sarl jle hlt in mov lret into mov mov popa enter pop pop sbb sbb push (bad) movsb inc aaa xchg outsl notb rcrb jmp arpl jge mov icebp xchg mov call aam mov mov xchg or sbb and int3 lret loopne xchg sbb int3 fstl fnstcw insb jno pop dec popa je pop fidivrl mov pushf aad scas and insb sbb mov inc sub dec ss mov movsb or lahf int lods inc aas add jnp and clc pop stos pushf mov movsl mov icebp cmpb out std jp cmp lret xlat cs sbb test or fsubrl and or out lods (bad) in mov cmp mov mov sbb fstps stos mov add pop aad inc ret sub or mov inc mov dec jne or loopne shrb out mov push inc inc rorl ret mov addr16 fucomip xchg inc inc xor push in rcll and rorl das iret mov out push sbb pop xor jnp jp mov add sbb dec xor or aam movsl jecxz push iret mov lods xchg dec mov cli lret mov int fisubrl lea dec insb adc fimul stos (bad) fldl test popf insl pop movl pop insb data16 push jmp inc jae int pop scas cld or out xor in sub subl rorb mov add mov js dec pop fnstsw lods sti pop mov cmp mov mov js pop cmp or fs pop inc cmp xor fisttpll xchg mov lret cmpsb ffreep jnp lds jl mov sahf adc cld int3 xchg adc icebp pop call nop cld jl cmp sub push cltd rcrb inc push pop jo ror cmpsl in clc fnstsw sti enter fildl ret inc bound ljmp std lcall mov xor mov push push cmpsb aam sbb jge scas lods or pop ficom repnz pushf push daa shlb push and and xchg scas jbe aad xchg cmp scas js loope pop cmc cmp sarl jns push sub jg xchg inc cmp lea iret dec dec inc ret xor fcoml pop cmc mov mov sbb mov and fcoml rcr test inc jb addr16 test cmpsb mov or fnsave sbb loop mov scas arpl pop les xor imul xlat ljmp inc sbb aam sbbl or aaa je fwait xchg mov scas fistl fldt (bad) xchg cli fistl divb repnz mov addr16 xor mov adc sti lret and repnz daa les enter adc pop adc test iret xor shrb adc cwtl lahf lret sub xchg int3 add (bad) (bad) js enter cwtl les insb mov data16 dec add cld adc sub inc ljmp out lds push mov outsb pusha ret mov call dec sub lock push (bad) int3 jl lret lods rcl std leave aam (bad) cwtl into lock mov dec sbb dec dec inc clc sbb test mov (bad) cld push cvtps2pd (bad) dec in (bad) mov insb fstp pop pop loopne dec in sarb pop pop dec lret repnz mov lock sub in ror pushf scas (bad) int3 pop test fsubrl jl ror mov aam movsb (bad) fdivl and repnz std dec inc ja ret add cmc (bad) cmp jecxz (bad) test xchg fcompl (bad) inc lret test lods pop sub hlt xchg sahf jae jg mov iret mov ss clc xor cmpsl lods in (bad) pop jp mov fildll cltd pop (bad) xor clc lods dec pop dec in int3 cmp pushf int int3 les and xchg sbb and fadds add dec loopne int3 in int3 lret ds enter push in mov push stc pop es mov mulb jmp sbb fwait lahf mov xchg push or xlat push sub xchg lret lods mov xor (bad) and into popf pop fwait sbb xchg push je push inc ds jb xlat cs clc aas test pop mov push sub xchg out lods push jg jmp (bad) addr16 sub mov mov outsl mov mov push shlb cmpsb iret mov movsl lods loopne dec jl pop mov mov adc pop add aam popf pop jg xchg cli or aad imul cmp aad jl sbb and call adc xor add push adc scas mov jae les push push outsl mov sbb mov cltd mov push test lret jecxz inc jecxz add mov mov pop add int3 push or dec add push pop and aas (bad) pop push jmp loop pop jb add adc mov xor jnp xor xlat mov push push mov fwait mov and dec fldt in jmp cltd mov or xchg sbb mov and xchg loopne jbe rcrl imul jl mov sub mov jg pop or (bad) ds jbe popa pop add sub add push push cmp sub mov clc imul pop movsb aas imul inc iret js cmpsl fstp xchg cmp add cmp add jne pop inc inc dec sub into sub loop imul jo loop sarl cwtl or popa jge sub dec xor adc mov mov and aam mov aam dec adc daa addr16 mov jl,pt loop in pop mov mov fidivrl in sbb arpl mov mov orl sub dec mov pop jl or pop test enter adc mov and stos pop in rol sub adc and shr jae enter out jge xor ja pop (bad) lret or scas cmp ds cmp out leave fbld jl mov sbb add test cmp xor lret mov jno fwait push sub test mov lea sbb loop mov fiadd cmpxchg in and and aam rcrl int3 rolb aad dec mov jnp mov mov pop push popf jo inc movsb or inc je mov insb in mov mov lods insl out xchg sbb test xor sarb mov or or push out xor or scas aaa jl paddsw int sub and rclb imul (bad) lock lea lds aam cmpb mov add cmp aas and adc xor ds aaa scas repz dec jg ret mov nop mov mov adc mov add call add les lods enter rcll dec (bad) mov je popa mov das jg lock pop mov sub and decb xor pop repz decb rolb mov and neg hlt bound xchg dec jmp sbb aam adc xchg lret mov stos adc and push xor (bad) mov rorb or leave popa sub inc dec inc popa or mov jg inc mov aam into lret dec enter mov lret jp es push notb mov (bad) cmpsb push and sbb pusha dec xor pop xlat shll dec shl test aad repz insl push cmp lcall dec or ror les push pop or sbb clc mov call adc cmpsb addr16 sbb xchg or dec and scas push jg sbb addr16 pop frstor in cltd fist imul dec push bound jb mov cmp dec clc or fistl push int sbb fwait popa xchg xor ret and std push divb lret push jge sbbb inc mov lcall cmpsb imul add sbb add jle xchg xchg add xchg push jge pop and sub mov adc lods xor and adc or xor int3 pop sbb push sub je fwait add cmp cwtl ljmp pop sub and movsl mov in cmp rcrl add int3 mov mov add sbb ss mov loop outsl cmpsb insl xchg xor lcall sbb sub daa loop (bad) jne shll lahf xchg ret jae xchg push loop (bad) mov xchg add iret out rcll dec outsl adc sbb mov (bad) xchg and pusha push scas bnd cmp fstl push sub jbe insb push (bad) aaa loopne add cmc mov xor xlat arpl bound int loope insb jo mov push xor out sbb xchg lcall daa add adc sti enter imul mov dec jge sbb movsl fldenv add jmp stos push into aaa fldcw push gs xor cs insl cmp jns and push sti fs and and cmp lahf ja push aas jno add mov cmc inc ret pop stos and sahf pop stos jecxz xchg jg pop ljmp insl mov out jb sbb int3 inc (bad) fsubr inc into enter iret mov sub xchg mov rol cmp cwtl mov jbe cld test sub xchg fmul mov int3 mov arpl mov sbb les or xor mov loop pusha pop mov mov lea mov mov popf mov mov pushf mov enter (bad) ljmp xlat lret cmc (bad) aad push mov mov mov negb rcr lcall into outsl in test insb xor lcall dec dec test les int3 cmp je pusha mov push mov (bad) ds outsl cld jmp (bad) int3 adc faddl stos (bad) into mov int3 call int3 dec lea leave (bad) les (bad) cltd xor loopne jnp push ffreep mov invlpg mov or (bad) loopne pop sub lcall inc les popa push add mov ror scas or scas (bad) lret lret int3 push sub ljmp movsb into scas sub rclb pop or (bad) clc sbb std insl into cmp push dec push roll mov fdivrs sub mov mov dec mov mov xor das sub repnz and mov push roll sub inc push push or movsl fstp sti movnti rcpps dec add fisttpl inc mov dec popa repnz xchg xchg sahf imulb dec adc repnz adc ljmp sub add pop test (bad) (bad) and (bad) dec sub mov and sahf mov (bad) roll jb imull mov mov dec xchg push mov (bad) repnz rorl sub add push in pop dec fnop call add insl mov xchg (bad) rcl (bad) lret outsb (bad) mov out or insb lcall dec lret iret sub insl in bnd add out loopne cltd (bad) flds aam dec int3 fcomp xor bound pop dec test and jb pop xor jno imul xchg fldcw fisttpll repz dec arpl add aam dec cs mov inc add cmp pushf inc sub add add inc and fildl jge jns divb dec push loope mov aaa into mov lea sti aam xor call cli iret sub cmp add loop (bad) das in mov int3 lods add lds fwait or sti cmp mov adc call cmp das mov cmpl mov mov cmp add add (bad) arpl inc and adc mov mov lock ret inc and negl and add xor mov in or lar xchg dec xor das mov sub adc stos scas lret cmp jne (bad) and cmp add ror xor xor jno cmp cmp jnp sbb add add loopne xor (bad) aas out or xor pop jne mov hlt lock lret jns fdivl rclb xor xchg repz nop mov jo dec mov shrb jecxz push or les mov jg mov (bad) test enter ljmp icebp hlt push aaa mov jg outsb call mov (bad) insb push cmp dec xchg xlat adc xor arpl and inc mov inc cmp xor loope es sti (bad) adc into pop call push orl pop and and dec mov jp xor add aam imul xchg aas add jl (bad) sbb es jnp xor add add inc xor call sub xor repnz jl repz lret stos repnz mov pop cmp xor sbb mov xchg movl cmp cmp xor or out jecxz xor aas enter xor cmp add xor dec arpl xchg cmp dec sub xchg cmp movsb sti fisub cmp adc js xor cmp in xor ljmp fwait daa ret arpl mov inc xchg mov adc xor cmp dec adc mov insb xchg mov sbb mov cmp and pop aam cmp xor daa scas sbb xor sub iret ljmp and sub inc mov dec sub and scas add xor or int int3 (bad) mov adc je inc mov and es adc pop mov mov testb xor push xchg dec scas sub push inc loopne jge xlat outsl mov push bound inc xor mov ret push cmpsl push mov push loope (bad) mov inc mov and adc xor add in mov xchg (bad) sbb or insl je dec mov nop sbb call xchg cmp loop lds sbb add cwtl inc mov mov pushf cmp int rorl popf or push imulb sub xchg xchg ret ret xchg (bad) ret sarb mov leave in or fadd xchg pop ret sarb in mov dec xchg bound sub pop pcmpeqb mov repnz dec fninit data16 out jmp aas jmp add cs mov aad outsb jb (bad) cwtl out pop test cltd (bad) lret sub xor lods leave loope stos aam gs jl inc test push push add flds pop enter lods (bad) fisub sub decb or fmulp inc (bad) out mov (bad) jae push aas mov or add inc loope cmp test out push xor ret cs mov push arpl pop leave mov gs test lret (bad) (bad) push fsubr fucomp (bad) fcomps out js inc mov xchg out into and lea aam (bad) fdivl mov sub mov (bad) out dec and dec inc push ss mov outsl dec pop mov mov lock insl cmp imul dec xchg push insb mov sbb or pushf fs push flds iret dec testb fldenv enter dec mov movb pop je leave add pop jne jecxz inc cmp jmp les test incl pop pop cmp stos dec test jge lock jge movsb or inc mov or das aaa sbb pop cmc sub test and mov mov jecxz stos mov cmp sti std xchg cmpsl xchg xchg add shrl or imul cmp pop icebp sub (bad) mov xor cli xor mov and cli mov neg sahf or mov imul sbb adc lock push adc push jbe xor hlt jno dec ds lods push push sbb xchg lods sbb add add lods in jge popa and inc jge andl mov jecxz (bad) mov (bad) lock ss dec test mov adc in lahf lock inc jae sub mov cmp bnd xor add (bad) jecxz mov xchg enter dec mov jecxz movb icebp push aaa mov and aas stos aad lods xor push repz movsb les fcomi bound rol inc inc ret inc sarb lods xor xor les inc or adc and pusha dec sub pop jno int inc adc push inc sbb (bad) jmp mov dec scas jge push xor hlt push int scas lods lret push lret adc push cmpsb sbb lods addr16 mov dec adc sub movsb push loop mov xchg je mov ja hlt fist fcomip dec fcoms fdivr jecxz xor out or sub hlt sbb dec out jge outsl iret scas mov lret sbb xor cmp add dec cmp jb int3 push in push push aad or push push push ss sbb or call out mov ljmp aad dec dec dec ret int3 (bad) (bad) mov dec mov mov out mov movsb arpl jne mov stos jb in mov insl jecxz enter dec push cld call (bad) cmc mov dec mov enter mov int3 dec pop fs mov (bad) scas cmp insb sbb mov clc adc sub out pop in mov fsubrl (bad) in xchg sbb adc (bad) in add inc and adc in cld pop outsl lea mov aam outsb dec fsts or cltd bswap mov or hlt mov inc fcom outsb sub lret imul pushf data16 les (bad) mov enter pop in add sahf js mulps lods dec dec enter jnp sub (bad) je and cmp fstl cmp mov and pop test sbb mov clc sahf cmp aad xchg subps int3 aas gs mov cmp test cmpsb sbb loope dec in enter cmp push repz pop ja clc ret push adc xor xchg fidiv and test call ds movsl push (bad) sub clc jb stos out dec push fiadd jmp mov lods rorb add push into int3 shl mov or fimull into call (bad) jl jae jns or cli mov push add les cmp imul inc subl jg mov jo mov add and pop jno fdivrs shr lret in pusha push lcall scas add sbb inc movl movsb cltd adc dec lret jmp cmp pushf outsb mov xchg insl lcall fisub loope aam outsb imul clc pop outsb loope clc jns mov fistpl adc xchg pop lods push push mov pop push stos movsl stc xchg push insb js sbb aaa pop or mov pusha scas jno sarb ret push in pop adc enter loope xchg int3 cli nop inc sub or pop push test pusha aas mov xchg loopne test (bad) jbe in imul mov mov lahf (bad) push ja cmp cld mov jns (bad) jae xchg add pop daa scas pusha add daa mov pop ss aam xor fsubl pusha xor mov dec cmp mov cmp xor mov addr16 into lcall and jp jae push repnz jnp jecxz roll push int3 xchg cmp cli insl or sbb je movsl push cltd xchg cltd ja dec ja jmp and popa cmp add xor out pop pop dec inc jns loopne jnp aam nop nop test add les mov cli and inc movsb call jbe adc in jecxz xchg mov jns xchg sub nop rorb dec mov jmp ljmp repz push mov sub pop loop cltd cmp in cmp cmp jmp xchg es scas popf dec pop sub movsl and fldcw ds (bad) push ds lea mov dec cmp call daa inc bound pop js dec dec sahf add pop mov fisttp push dec lea mov or inc cmp sub xor ds or pop cs hlt and or leave fs inc push clc mov dec (bad) pushf lods out fidivrl cwtl outsl call dec jl outsb cmp imul mov pop push inc outsb loope jnp loope daa enter and dec popf push mov (bad) cltd das mov into lret pop into in daa (bad) xchg push sbb stos mov pop stos ret cs add mov nop sbb ljmp imul test ljmp and insb inc xor loopne ffreep test hlt aas stos push movsb push lret sbb lods fidivr scas push outsl or mov mov inc dec push loopne push rorb sarl sbb mov mov in jmp mov scas push imul lods mov fisubr mov or enter mov hlt dec pop ret pop out orl (bad) fsubrl jmp out in lahf sar or frstor pop adc jns jp into add ret pop je inc jns pop cwtl into add or out dec cmpsl enter sub bound (bad) and (bad) lock ljmp inc out inc enter xchg push inc pop movsb mov mov in pop pushf mov fwait out add fsub (bad) (bad) mov aad cmp cld add aam sahf es shl push add and sbb faddp int3 call aad out dec pop jmp xchg pop leave xchg addl lret xchg insb (bad) (bad) int3 push dec (bad) into daa js loop cwtl mov mov push add push sti mov sub test movsl addb scas push scas mov in lcall aam xchg cmpsb mov jno xlat scas hlt inc cwtl shrb out test stos lods add push push out test (bad) mov outsl (bad) xor divb mov (bad) pop cmpsb ss loope loopew inc mov std mov enter addr16 in imul pushl sbb inc lret dec inc or dec sub mov daa outsl or xchg dec nop jns sub imul mov pop lds fcomi (bad) js rcrb fdivrp push pop (bad) dec imul dec stc aaa inc rcl out cmp out mov in stos sbb pop sbb pop nop or ret jb pop lods fidivrl ljmp pop jecxz dec fisubl addr16 sbb ret jl (bad) loopne push call daa sar cld xchg (bad) jl sbb mov aaa rcr ja enter (bad) lock not stos ror rcr stc fsts dec aas call mov (bad) fnsave cwtl hlt sub int3 inc mov adc cmp cmp pusha das xchg dec je push inc rcll addr16 xchg fcomip jbe ss push push andl jbe addr16 sti pop add xor mov stos in ret push pop inc aaa xchg scas js add lock mov dec xchg cwtl add or jmp push xor mov jg pop loopne,pn jns dec ret and push (bad) (bad) lock mov cmp mov das sub adc (bad) je pushf sbb sbb leave mov int3 and (bad) in dec lea jle out dec lds jmp loop mov js xchg mov out pop sub addr16 iret loope (bad) push (bad) aad push push add int3 rorl shrl fisttpl (bad) loop push das in cmc iret andl adc jnp aam aam nop js sbb inc cmp inc hlt out rclb gs nop add xchg xchg hlt (bad) or sti int3 in lret mov dec pop inc imul cs les mov dec fisttpl movsb movsbl out mov in js jmp (bad) mov call mov cld js loopne (bad) mov enter mov fmul out icebp lods push xor xor inc lcall cld icebp and enter push cld adcb pop sub push sbb jg out mov inc lcall sbb or out mov les cmp or scas jmp in dec jmp and call test xorb xchg push cmp xchg aam scas fwait into fwait into fwait into fwait int3 movsl or das in lds mov out stos fisubl stos mov cmc xchg ret mov fidivl push inc push sahf xchg sub (bad) mov fstpl fdiv sbb pop sub jmp into insb ss popa imul inc mov sarb push sbb xor mov sti push inc sub outsb nop out ja inc std mov (bad) sub sub xor out movsb pop sub pop add insl mov out fbstp or dec enter (bad) outsl dec sbb mov iret out pop mov sbb fdivrp aas pop gs xor jno shll add enter fdivrp push mov mov push movsl push loope lahf push and push mov add inc xchg (bad) jge int sub jb mov clc add andb (bad) or sti addr16 call dec popa insb mov iret aad (bad) call nop adc jb jg shrl pop add movsl cld push xchg repz fs push (bad) cmpsb enter paddusb lock push les sub pop adc aas imul cld movsb (bad) xor dec ror mov sbb out adc test push mov mov fdiv popf rolb popf iret popa repz inc or aas iret pop shr das jecxz push or jge loope mov in loope adc cld sbb test adc mov fild adc ror pop outsl inc push pop bswap leave pop sbb mov xor in jno pop push sbb out cmp jmp xor push daa aas adc mov ret (bad) in xor pop aad (bad) and fnstenv test in (bad) or fdivrs cwtl ja (bad) aas in sub mov and sbb out mov push sub xor mov outsb fdivs into ret (bad) fcoml mov inc mov add movsb mov enter inc aas fimull loop lods testb rorl pop jnp or fstpl jp jb inc push dec in jge sbb pop push mov mov sbb push outsb jne es nop push xchg lock mov push popf les sub fmull int sub stos mov cmp cmp jl int clc xor (bad) fmuls sbb xlat shr mov jmp mov movsb not or xor sub or jge out sbb xchg loopne sahf es xchg cmp fnsave clc pop iret sbb es arpl (bad) and inc mov int and pop jge insl mov daa les (bad) ljmp pop jl pop jl push cmc cmpsl jmp lods cmp (bad) pop dec xor iret fstpt push fldcw jg int cld out (bad) mov les ja cld lret push hlt mov add mov les mov popa xchg cld hlt (bad) or fwait sti daa out pop pusha les jns xor mov lret or lcall pop inc pop cwtl jo cmpsb (bad) cmc (bad) cmc pop inc popa dec push sbb mov int3 mov xor or fiadd in int3 and (bad) enter sub mov sbb or add xchg gs push in cmp lods bound push dec cmpsb fsubs pop lods dec std mov int3 addr16 int pushf xchg rol stc (bad) stos sahf icebp int3 mov xchg decb repnz jmp add pop (bad) hlt push iret push pushf rcr mov pop mov jge add dec test jmp loopne or mov xchg xchg int into sbb pusha or out sbb iret in int3 cmpsl sub mov int3 mov sub out aad movsl pop int3 data16 inc hlt fmull lret inc inc and fldl (bad) jge mov movsb div (bad) mov dec (bad) aas inc (bad) jbe int3 add ret (bad) pop sbb (bad) lods hlt and dec dec mov sbbb and pop test and pusha jb adc push adc xchg xor loop xchg cmpsl mov popa sub inc jae dec pop add mov xor sub mov mov inc or shl nop xor and sub xor pop dec or frstor push lret adc adc mov jne sbb pop mov dec pop cmp mov pop push sahf xor pop sar mov sub (bad) and mov jnp lock inc test cwtl inc or xchg and mov cld (bad) cltd das mov sahf xchg xor adc fdivrs hlt xor rol dec (bad) aam inc flds adc pushf xchg inc cmp and sub enter jmp fdivs movsl and mov dec out divb fistl push fcomp inc pushf or clc cwtl pop push sub out or cmp sbb out lods scas shl dec xorl dec jbe dec out insb popf mov push cwtl aam push dec pushf test fisttpl fistpll aam stos mov inc push sub rolb into dec cs ret jmp or addr16 add push adc inc sbb inc push and or fcoml sbb in adc stc sub cmovp or dec (bad) cmpsb repnz sbb dec xchg pop or fucomp mov mov or dec cmp fildll in mov mov add cmp (bad) imul push fdivr inc add lret jle xor add stc inc pusha mov imull inc add (bad) adc jl push mov pop int3 int dec rorb bound dec sbb roll xor mov (bad) sub xchg add sti int fnop into cmpsb xchg outsb out mov jmp mov (bad) nop (bad) repz fdivs (bad) rol jge pop aam int in hlt mov mov imul jae add dec mov hlt adc dec jns or imul and stos rolb fcomi (bad) lock (bad) rolb in pop or push test les sbb ljmp js lods lcall mov test inc or pop not ds xchg faddl (bad) leave lret je shlb mov cmpsl xchg jb lock hlt negb inc jae xchg int3 pop enter les cs jne les fsub (bad) in mov sbb int3 insl (bad) push (bad) in mov in mov ffreep call into xchg int3 pop add int pop fmulp in les fmulp in dec mov dec lds enter ret dec xchg int3 pop insb fsub mov in in mov cmpsb int pop fmulp in and xchg into pop push enter loopne pop mov es fmulp in les (bad) lret jmp push mov dec (bad) pop fmulp in jl xchg into aam mov push sbb fmulp in iret sub sbb fsubr dec cmp xchg int3 pop (bad) or les fsub (bad) in mov dec jmp into pop fmulp in sub imul push dec (bad) sbb enter mov adc mov mov stc dec lds enter (bad) cmpsb int pop fmulp in les fsub and popf (bad) xlat jns fsub (bad) in mov jbe xchg int3 pop insb fsub add outsb mov loop jle imul jp jne jmp mov and fdivl notl jb jmp cmp aaa in stos les sub pop dec and pop or pop gs sub mov sub imul (bad) idivl fwait pop push mov sbb adc add and fcomps mov mov jle pop push add and or pop mov enter iret cmc mov xor ds mov imul mov iret daa add shl cmp xchg movsb pop cmc (bad) xor sub push push repz push idivl push das (bad) jmp decb pusha mov sahf cmp xchg jecxz push xchg fwait pop xor testl lret sahf xor and xor cmp mov or imul and push push cmp aaa mov hlt sbb jns dec xor mov insl nop pop cmp push adc loope nop dec cmp imul mov gs push adc sbb add jp fstl popa pop stos stc std dec stos pop sbb aam scas stos and (bad) fstpl (bad) jge jo mull js stc xor pop dec xor xor mov pop add adc sbb push out jo and mov adc js js scas jo sbb ret addr16 push pop orl mov adc aaa push lcall adc push pop (bad) repnz shrb mov xor lods sub xchg xor jo add in mov xchg push push mov push lret pusha cld enter movsb mov jb push outsb test orl pop cmpsb pop mov iret out mov push jmp jp mov mov sahf test ds add pop outsb xor testl xchg pop push shll shrl pop or mov add mov xchg xchg loopne imul and imul dec pop pop pop jp dec cltd xchg and test sub or pop xchg xchg lea dec sti (bad) pop cmpsb push icebp or andl inc push test push mul push negb cmp push jl and (bad) jo rcll aaa ret js or (bad) and cmp or mov ds cmp jg jle (bad) push lea sahf hlt hlt or out inc inc add cmp mov (bad) adc sbb jg mov aad scas sbb addr16 loope pop stc ficomp and loope xchg dec jmp sbb adc fxam dec mov push aas lahf fstpl or add je or sbb sbb arpl jp fwait idivl ss cs daa push pop jbe les push rol testl ret xchg fnstsw test subb in es arpl aad fisubrl fcmovnbe xchg jg xor enter dec out push icebp inc pop add mov sbb add mov out mov or cmp lods insl dec daa pop hlt sub mov sbb sub jl shrl mov and popa sub adcb rorb (bad) jae popf inc jns dec jne jne fdivrs and xchg das jge cmp sub fwait test sub add push inc mov pop jbe add jne cmp dec adc adc or mov popa dec mov xchg cmpsb push push xchg pop (bad) in push xor pushf pop lock cli mov pop fldcw mov cmpsl fstpl clc (bad) sbb mov (bad) mov adc pop inc inc pop add xchg jns cli mov or aad and repz add cwtl adc test pop fdiv jb dec cmp pop cmp bswap adc xchg mov jmp in out mov sbb mov stc and add cmp inc adc and ret aad inc imul fcomps and mov adc mov pop add and flds cld test ret push imul test add mov sub or mov cmp push es cltd push sahf xchg fcompl xchg add push or adc sbb inc or pop loopne jns dec push cmp ljmp and sub pop lcall clc sarl push sub mov in mov mov cwtl cmp inc aam push adc sbb lods sub sub cltd (bad) in mov testb xchg addr16 mov sbb sbb xchg push sub (bad) jb pop ret inc mov dec lock jg inc sub xor gs fistpl mov adc fidivl jns xchg leave cmpl add sbbl mov ljmp jae leave mov sbbl and add lods icebp ljmp movsb into mov xor cmp mov mov inc pop in xchg cmpsb mov cmp jns notb sti or mov sbb sbb lret push mov aaa insb mov mov pop sbb mov xor repz pusha loop (bad) push pop add mov addr16 (bad) inc cltd push int3 lahf sbbl or adc lock sbb pop and daa cld subb cs xor inc out test inc jno subl mov push adc xchg mov and sub push (bad) cmp daa sarb sub insb ds cwtl cmp and stc cmp cmpsl dec mov adc inc idivl leave sbb pop cmc jg cmp mov insl add daa inc movsl clc daa fbstp or adc mov push pusha xchg stos cli mov jno and or mov test test ja mov mov jmp and or outsl mov scas into ja adc inc xor roll popf jg xor loop insb inc mov mov inc sub les add cltd les es xor xchg lahf pop sub and jmp pusha loopne dec addr16 in sti popa es or lret mov cwtl sbb sub repz das mov and pop int3 or mov in inc fbstp and adc push jae mov adc aam sub mov rcr inc insb hlt imull sbb push mov subb (bad) aad and fs insb push fiadd cmp pop jg pop sub inc fwait cltd mov out and mov add jns push ficomp push cmp dec xor test pop scas loopne push insb jne push adc in jg push cmc std lgs nop and arpl out (bad) out addr16 jns out test cmpsb jns inc add cmp xchg inc pushf inc std dec ja inc insb cmc int jecxz inc (bad) push jge mov add mov mov ds push mov or ljmp mov jecxz jmp out (bad) inc test add ss mov into nop cmc mov ja xchg sbb or popa nop adc cltd add inc or das xor sub imul sbb mov cltd rcll outsl xchg lahf jecxz imulb xchg cwtl push inc pop mov leave inc mov jae aaa inc push nop mov nop daa inc sub (bad) je push lds mov orl movsl stc sahf into dec aam adc js adc out xchg add int mov pop sar aam sub iret or adc nop push (bad) nop sbb fstpt inc xchg or (bad) loope test lahf adc scas out stc addr16 dec cmpsl outsb (bad) push aas addr16 fisubl and and xchg fmul add sub pop push jle addr16 sti cld ljmp data16 mov cli aad dec xor xchg aad aad push adc jns pop sbb cmc imul (bad) push scas jbe pushf test dec adc adcl adc outsb mov jns stos andl cmp mov into push jne scas cmpsl push push mov push cmp fwait dec jns sub dec stos pop ret (bad) popa cltd pop pop mov pop sbb xor rclb xchg dec inc add fcoml mov pop jo (bad) jne lods adc int3 jmp subl push push lods and pop xchg mov test out add push mov (bad) out xor lds push jne subl push mov fnstenv mov clc lahf add add fldcw pusha das mov rcl popa cltd inc data16 outsl dec jp nop xchg pop bound (bad) std ss mov inc cmc les jo xorl push ficomp pop jmp pusha pop insl inc repz mov mov inc fwait xlat fdivrp arpl fdivrl or (bad) mov jecxz sbb push mov loope dec push dec es fistl in outsl xor punpckhwd fwait or (bad) outsl mov adc mov sbb stc and leave (bad) mov jecxz xlat xlat inc jp mov in out sbb lret mov push fistpll (bad) lret fild not pusha jp mov pop (bad) scas cmc sub pop xor (bad) je mov loopne pop xchg scas adc or push in out add push sti sub and cmp and xor sbb lds cltd pop lea movsl pop adc mov hlt mov loop pop add dec or add arpl jns fwait out out jnp mov cltd popa xchg mov aad bound mov imul sarl add ljmp xor idivb imul jns nop mov mov cmp (bad) adc mov push pop mov (bad) cs cmp sahf shrb sbbl push cmpsb rcl les das and je dec sub movsb mov inc imul mov xlat jae ja mov jbe aad ja mov cld addr16 xchg cmc add xor fnsave fs jp aad pushl je fwait ljmp les adc push sahf cwtl outsb fcomi push lea jmp das jne mov jle xchg aam jl clc sbb cmp push sbb loop jmp cmp addr16 pop mull adc lea push stos mov rclb pushf xor lcall ret inc xchg cmpsl aam cmpsb out loop push pop mov mov imulb pop stos loop mov sarl fnstenv cltd sub jbe sbb test lahf xchg sub lea mov mov (bad) mov out add push jns push popa das sbb sbb mov inc (bad) aas (bad) pop loope push test mov sub mov sub inc push aaa (bad) ja das sbb jns rcrl jp mov push push negb fwait js lea sbb mov outsl pause sbb leave mov mov clc out inc jecxz inc xor cmpl adc outsb mov mov lds in dec dec adc jecxz out pop mov andnps mov loope sub fstps sahf aaa aaa gs mov lret inc and xchg je,pn imul adc das loope xor addr16 and xor (bad) push jecxz (bad) cmp arpl sarl je mov pop aas into mov rclb inc mov mov enter (bad) je inc stos pusha aad sbb add pop out leave sbb xchg aaa std addr16 (bad) mov dec jp rcr or push and add pop jp lock gs and pop movsl scas adc pushf pop jge or loopne add mov out test dec (bad) aam movl mov sub (bad) dec cs ss ja,pn das xchg xchg sbb daa ja mov mov mov mov movsb xchg mov fnsave scas sub cwtl cmp inc js xchg sbb mov sbb js pop ret fdivs std adc lcall aad mov out mov and aad (bad) dec cwtl ja xor arpl and add movsl push dec mov xchg mov arpl (bad) cmpsb loope jmp stos or and lahf xor and or es and sbb flds cmp loope bound inc push push movsl nop pop dec sub in cmp stos mov adc scas pop adc push mov movsb data16 push insb lods enter aaa xlat fstpt scas js adc mov (bad) ja jg cmp xor ds and stos sbb aam xchg mov pop clc lcall rcrb rorb pop leave inc push jmp loop pop adc push aad dec and adc mov push or bound out cmc pop jecxz cltd (bad) jle into addr16 nop ljmp mov jbe inc icebp movlps mov xchg push mov inc in js (bad) jg in mov pushf aaa rcrb lods (bad) adc pop sbb lahf adc lock adc push jbe push or cli test xchg mov or into or mov imul es mov repnz stos or fstps mull out sub xchg cmp xchg dec roll add aaa outsb bound and sub sub movsl nop cmp mov imul lret cmp sub jno jmp addr16 loop testl jge sbb mov in insl mov cltd adc dec sbb mov repz in clc jecxz in test xor hlt cwtl or sub loope xor std pop dec incl mov into pop scas in pop jge mov rorb jne insl lds fwait mov or (bad) mov inc insl (bad) dec add or gs cmp daa pushf jno aad add mov lcall jle add push adc xlat mov push jns adc add in mov add leave gs pop inc ss push enter xchg (bad) pop add inc xchg inc push dec inc ficom lds inc mov sub jnp jecxz data16 ficomp xor mov std cmc jno mulb sti popf (bad) cmpsl repnz jns insb loopne (bad) (bad) add std lea fwait mov in movsb sbb jl es std (bad) aam pop xchg dec in insb xor in push inc in and fs xchg jno ljmp cwtl nop inc push fs ret test nop out or (bad) jns pop push scas (bad) fisub push mov add jbe or mov icebp xchg stc and loop jl mov out mov cmpsb mov mov stos lahf sub lret adc adc icebp and xor insb mov icebp jb sbb jae inc (bad) pop out das jne sbb cmp mov xlat fwait jl int (bad) jne nop test mov ret jnp (bad) mov sbb lock stos add pusha cwtl fcoms ja stc into (bad) ss leave jb push mov dec xor mov push decl xchg insb cmp mov jp pop inc mov test inc (bad) xor (bad) add mov out mov cltd dec outsb insb out xchg pop cltd leave mov dec mov push test lods cltd bound ss movsb ret inc call dec das pop jno enter rcrl lock and or mov repnz iret scas inc adc adc mov dec divb inc into dec cmpsl or cs ds push ret daa inc xor jae xchg rorb loope sub xchg data16 xor repz in mov data16 mov sahf dec div sub inc jns push movsl jnp and push mov inc push loope pop (bad) pop fnstenv sbb sub add cli fiadd pop cwtl lret jnp dec cmpsl add pop inc inc in repnz xchg mov inc pmulhw std mov inc movsl paddsw xor and sub or or lahf lahf lahf cmp arpl lahf repz mov xchg cli in popa rcrl loope xchg rorb mov mov or (bad) sub push jg jecxz cltd flds lahf xlat in fwait xchg push mov mov pushf cli push jmp xchg mov jo xchg xchg out inc xor pop test je xor imul in jbe iret shrl fs adc pop (bad) jmp sbb iret in jbe lods fsubrs aas sub negl inc (bad) jno jae data16 sub pop nop xor dec rcr sub add aad xchg push adc adc adc adc scas pop out or and (bad) aam xchg push (bad) sbb cld testb xor cmpb cwtl fisubr cmp sbb lods fistl cs add pusha cld lods mov mov cmp jmp xchg bound push or xor cmp cmp cmpsl out daa out scas cli std je inc ret ja mov dec xchg imul sbb mov push in push out push fdivrs and jbe push mov pusha and imul xchg cli es sub fistl (bad) sahf sti mov push mov jne dec mov add xchg data16 xchg stos cwtl cltd push xor jecxz fadds inc and xchg fstps popf ret fisubr sbb lahf mov mov lahf cmp push cmp cltd sub sar xor dec fiadd imul mov adc ss aaa (bad) mov insb nop and xchg sub add sub add dec dec pop test xchg jp pop scas xchg xchg jo repnz lds mov rolb xchg sub dec sub adc sbb in mov std fwait mov repnz cmpsb pop mov sbb ds jp mov shr mov jp pop lret movsb inc (bad) and fistpll pop fwait inc (bad) negl pop mov lods xor fldcw mov push cmpsl mov test mov xor jmp or lcall sbb dec adc push mov fild sub sub cmp imul sub jl mov jae pop add mov jg (bad) xlat jg mov pop cmp pop mov cwtl adc cli insl inc repnz mov notb lret cmp cmp pop fidiv sub pop sbb (bad) pop xor es aam into xor cmpsl mov scas rcll mov fidiv addr16 gs mov into xchg loop push sbb pop jbe fistl pop push (bad) mov (bad) or adc sub dec push test jo mov mov dec and pop xor add jle mov mov mov mov mov xor rolb adc dec daa scas sub aam mov mov aas insb aas iret sub fidivrl aam and (bad) aaa scas leave cmp xchg xor or ja scas out jmp push sbb ss jno xor rclb pop jl inc shrb mov enter mov jge xlat popa inc scas inc adc or adc lahf adc insl sbbl mov or popa out cmp insl dec jno mov lcall mov adc pop ret ss add cmp mov rclb fwait adc pop pop icebp cmpsl push lahf jno es lds cmp or int push xor push mov cmpsl mov stos xchg ret and xor sahf jg mov rolb and jae cld or add fdivl add push rclb mov loop mov inc and ret sbb cmpsb lds push mov stc aas in dec js or mov ror cmp pop or dec ja orl in mov leave outsl std xchg adc int3 jb je lock int lret fdivrl daa pop sub mov xchg in out insb lock mov in pop (bad) pop fs out (bad) dec sarb jmp push into xchg (bad) sub pop lcall dec dec repnz fisub mov lret sub lock repnz icebp fimull shrb push xlat mov cmovnp mov dec (bad) std (bad) dec adc lret dec out int lcall fwait lcall out (bad) scas cmp sbb pop shll sub (bad) out sub push xor mov jg js jp xchg cmp ds cmc imul mov repnz addr16 loopne out adc (bad) mov or mov ljmp je adc pop mov add sub sbb push imul mov jle xchg pop jle cltd jmp xor dec (bad) jmp je mov scas cmpsb jp addb jecxz insb pop (bad) sub cli sbb push and sbb movsl xchg cmpsb ja adc pop or or mov xchg or lods push mov add movsl jecxz inc push inc popa cmpsb mov lcall push xchg pop dec xlat data16 das mov xchg adc cld xor notl ljmp movsb mov out aam push push push xchg mov add push push loope pushf ds push imul push adc pusha lret out lahf neg mov push pusha push movsb lcall xchg and sub scas inc shll das adc pop nop add xchg xchg orb sarb push repz xchg mov inc xchg mov bound popa add ljmp sbb xchg add inc pushf cltd loop bound in mov sbb mov add icebp cmpsb jp sbb and inc xchg pushf mov iret mov adc push shlb mov repz test es lcall cmpsb jbe adc adc jl pop add or repz pop jmp notl xchg or addr16 mov cmpsl lcall fistpll jge mov lcall lcall sub sbb inc push aam cmp or insb mov stos (bad) lret daa aam xchg push outsb jecxz popf sbbl or lea int enter or out leave scas iret das into iret sarb ja test int3 outsb fmul mov insb int3 dec pop rolb cmp jg sbb and mov cltd add jg sbb bound xchg sub and aas jg lods sub mov xchg je adc lcall in sarb shlb mov (bad) jo and push xor dec (bad) mov leave add lea mov sbb inc mov fmulp insb fldcw in xchg jno ret inc das lds aam int3 (bad) cmp pop pop int3 mov cld xor cmp and adc adc icebp bound loopne imul daa and and or jge cmpsb mov mov sub (bad) inc or xor and push cmp or inc push iret jecxz sar cmpsl cmp cmp in inc repz mov cmp (bad) xorb mov pop xor imul iret andl pop mov aaa call or cmp cmp and outsl xchg pop xchg or cmp addr16 in insb fimull leave call sbb leave xchg shll cmp aad sub xchg xlat .byte 