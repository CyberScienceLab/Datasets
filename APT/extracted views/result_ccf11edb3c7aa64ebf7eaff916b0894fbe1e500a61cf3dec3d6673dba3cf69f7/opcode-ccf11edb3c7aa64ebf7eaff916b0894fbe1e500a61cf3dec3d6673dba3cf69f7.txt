xchg pcmpgtd push xor xchg xchg push sub push data16 or mov retw inc or data16 push in push data16 or jg push data16 or popfw dec push data16 lahf or data16 pcmpgtd jbe pop xchg push popw les data16 xchg pcmpgtd jo ljmpw jge data16 or mov inc push or data16 or and xchg push xchg xchg pcmpgtd jbe data16 sbb mov pcmpgtd jne pop (bad) or notw sub addr16 aaa mov pcmpgtd add dec insb push mov insb push data16 add test data16 or data16 data16 dec push mov data16 mov or data16 data16 outsb push data16 adc arpl in out push xchg sbb inc xchg pcmpgtd sbb push data16 imul scas lahf or add add add add lret mov add add add push push add inc add add add add pusha insb inc add insb inc add add add add fcomps inc add add add add add insb inc add insb inc add insb inc add inc add inc add outsb inc add inc add outsl inc add inc add inc add jo add jo add jo add jno add jno add jno add inc add jb add jb add jb add inc add inc add inc add inc add jae add inc add inc add inc add inc add jae add add inc add inc add je add je add je add je add jne add jne add add inc add inc add jbe add jbe add jbe add ja add ja add ja add ja add ja add inc add js add js add js add js add js add js add jns add jns add jns add jns add jns add jns add jp add jp add inc add inc add inc add inc add jnp add jnp add inc add inc add inc add jl add jl add jl add jl add jge add jge add jge add jge add jge add jle add jle add jle add jg add jg add jg add inc add jg add jg add jg add addb addb addb addb addl and addl add inc add (bad) inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add test cmp test ja inc add test lcall add add inc add inc add xchg cmp inc add inc add inc add inc add inc add xchg xor inc add inc add inc add inc add inc add inc add mov das mov das mov imul inc add inc add inc add inc add inc add mov test inc add mov bound inc add inc add mov inc mov inc mov orl inc add inc add inc add inc add mov rorb add inc add lea mov inc add lea (bad) inc add lea xchg mov cwtl mov cwtl mov rorb inc add mov cmc mov rorl inc add popl push nop inc add inc add nop inc add nop inc add nop inc add xchg inc add xchg inc add inc add xchg inc add xchg inc add inc add inc add xchg inc add xchg inc add inc add inc add xchg inc add xchg inc add inc add inc add add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add inc add inc add inc add xchg inc add cwtl inc add cltd inc add cltd inc add add aas add add hlt mov jo inc add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add cmp add add add or dec inc mov aas and add add add add inc add push xchg add je outsb popa jae add add add adc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub and add or jbe cmp inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub inc mov add add add jmp add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add jnp lods sbb add adc test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub loopne inc add add add add add sbb add add test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add mov add add add jb add add add inc add add test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add add jb add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add mov add add add jnp mov inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add mov add add add add add sbb add pop add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub inc mov add add add jnp cld sbb add or test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add jno add add add inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add add jnp insb sbb add or test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add add jnp movsb sbb add or test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub xorb add add add sbb add or test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub nop mov add add add jnp adc inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add jno add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add out jbe test inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add add jbe mov add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub (bad) mov add add add in jbe hlt sbb add adc test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub lock add add add add add inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add mov add add add add add add add test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add add jbe pushf sbb add add test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub add add add add add sbb add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub xor add pop in jbe or inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub xorb add jl inc sbb sbb test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add add push jl jl inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add add add add add test inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add mov add add add sbb add in sbb add in xor add add sub add add add add add add add fidivr add add fdivs jg pop add add aaa inc add add add add push add add inc add add add add je inc add add add ss add add add xor add movsb xor add pop xor add or add mov add add inc add add add xor add add add add add add xor add or or add add add pop inc add sti hlt add (bad) (bad) decl add add add add add add add add add inc add pop inc add add addl add add add insb je addr16 fs jo push outsb add push gs outsb popa jae push add add mov sbb and adcb movsb add add jecxz add add add and add add add lret (bad) and inc repnz aas sub add add add add add add cld push add add add inc add add test inc add add add addr16 add lcall or inc add mov add inc add add add add add add or add (bad) (bad) incl add add es add mov add add add jae add add add add add add cwtl and add add mov add add add mov add add inc add add fdivs jg mov sub add xor add fsubrl add pop and add sub add inc add add add add sub add je inc add cs add add add add cmp add fsubrl add nop and add cs add add add add inc add add sub add lods and add cs add add add add (bad) incl add add add add and add cs add (bad) (bad) incl add dec add add sub add pop and jle pushf cs add add add add dec add add sub add js inc add cs add add add add push add add sub add xchg and jle lods cs add add add adc push add add add mov inc add cs add add add adc pop add add add or inc add cs add add add add pop add add sub add push idivb fsubrl inc add add add add mov and movsb pop inc add pop inc add and and inc add inc add add add add add and and inc add inc add add add add add and and inc add inc add add add add add inc add and movsb pop inc add pop inc add inc add and movsb pop inc add pop inc add and movsb pop inc add pop inc add and movsb pop inc add pop inc add and and inc add inc add add add and add and movsb pop inc add pop inc add and add and movsb pop inc add pop inc add inc add (bad) (bad) incl add add sahf cmp clc add sbb or sbb add es add add or add add add add add and (bad) (bad) (bad) jmp cs add inc add add add jb add incl add add add (bad) (bad) (bad) cld xor push sub add add add jb add incl add add add (bad) jmp inc add add add mov add add add inc add add add add add incl add addb add add in inc add (bad) (bad) decl add or add insb sub add incl add addb add add sbb inc add (bad) (bad) decl add sbb add jl inc add incl add addb add add push sbb (bad) (bad) (bad) decl add sub add mov add incl add addb add add mov inc add (bad) (bad) decl add cmp add nop sub add incl add addb add add les inc add (bad) (bad) decl add dec mov add add add add add add (bad) incl add addb add add cld sbb (bad) (bad) (bad) decl add pop mov add add add add add add (bad) incl add addb add add xor inc add (bad) (bad) decl add push add add add add add (bad) incl add addb add add insb sbb (bad) (bad) (bad) decl add js inc add add add add add add add incl add addb add add movsb sbb (bad) (bad) (bad) decl add mov add les add incl add addb add add fcompl inc add (bad) (bad) decl add cwtl mov add add add sub add incl add addb add add adc inc add (bad) (bad) decl add test inc add add add sub add incl add addb add add dec sbb (bad) (bad) (bad) decl add mov add add sub add incl add addb add add test inc add (bad) (bad) decl add enter add add lock add incl add addb add add mov (bad) (bad) decl add fdivs add cld sub add incl add addb add add lods sbb (bad) (bad) (bad) decl add call add add sub add add add (bad) incl add addb add add hlt sbb (bad) (bad) (bad) decl add clc mov add add add add add add (bad) incl add addb add add sub inc add (bad) (bad) decl add or add and add add add (bad) incl add addb add add fs add (bad) (bad) decl add sbb add sub add add add (bad) incl add addb add add add inc add (bad) (bad) decl add sub add xor inc add incl add addb add add aam inc add (bad) (bad) decl add cmp add inc sub add add add (bad) incl add addb add add cmp inc add (bad) (bad) decl add dec mov add add add inc add incl add addb add add je inc add (bad) (bad) decl add pop mov add add add add incl add addb add add jl inc add (bad) (bad) decl add push add add inc add incl add addb add add inc sbb (bad) decl add js inc add add add add incl add addb add add or inc add (bad) (bad) decl add mov add test add add add (bad) incl add addb add add pushf sbb add (bad) (bad) decl add cwtl mov add add add add add add (bad) incl add addb add add push outsl jb insb gs outsb add jb outsl je arpl add add gs outsb je add add jb outsl outsb popa jae imul outsl je outsb arpl xor outsb insb jns add jp jb je add add dec popa outsb je arpl add jae gs add je outsb jae add add inc popa gs jb add add dec jne add add inc outsl jne insl popa outsb add outsl je insl imul add inc insb bound imul inc bound jb insl outsb je add bound je xor add add insl imul add inc jbe jb outsl outsl add add inc jo popa jb insb add jne insb popa xor add add jne imul dec outsb je jb je jb insb add add inc imul imul arpl je arpl add inc gs insb insb xor add add bound imul add add insb popa je add push jne popa jb add push gs outsb popa jae pop out and dec mov nop mov xchg das pop mov imul xor fmull mov sbb and adcb movsb inc cmp xor (bad) ss test cltd iretw adc pusha rcll jb xor cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add hlt sub add push add add add add inc add inc add add add add push imul push imul push imul cmp xor or stos add xchg inc outsl jb add add push imul push imul push imul repnz lods xor or stos add xchg inc outsl insl insl popa outsb xor add add insl insl popa outsb xor add add gs xor or push add add add outsl test push lods icebp dec mov (bad) mov popf pop ret add push lods dec test mov incl add add (bad) aad and inc repnz aas sub cmp stos popf sub (bad) out add insb bound imul cli dec lods xor or stos add xchg inc imul jae cmp dec gs je insb add dec lods xor or stos add xchg push jne jae gs add add xchg dec lods xor or stos add xchg push gs jae insb insb imul add insb outsl jo popa addr16 add add dec lods xor or stos add xchg inc insb jne jns add sbb xor or stos add xchg inc insl insl gs je jb gs add add dec lods xor or stos add xchg push jne arpl jae insb xor add jb outsl insb gs insl imul jae popa outsb jp xor fimull xor or stos add xchg push imul xor add push outsl jae outsl arpl imul xor or stos add xchg push outsl outsl fs outsb add add bound xor or stos add xchg push popa insl bound add arpl gs arpl jne add add insl jbe insb insb add add dec gs insb je data16 insb jns inc jne outsl addr16 insl add add or xor or stos add xchg dec outsl insb imul add push imul add add inc outsl jb gs add outsl outsb outsl jo outsl jb jne xor add inc gs jb outsb gs xor add add insl outsl jb imul jb arpl insl popa outsb add inc insl imul jns jb add dec popa jae outsl outsb popa gs outsb xor inc data16 popa je outsl outsb add add popa jb push outsb jae popa jb add add dec popa fs jb je add add bound push cmp add add outsl jo jb insb jns imul gs arpl add addr16 bound add add push outsl jae outsb jae outsb add add bound add add outsl jo popa imul add push jo outsb fs data16 add inc outsl insb imul add add inc outsl jne push add add gs jns xor add ljmp adc pusha rcll outsl xor add outsl jae outsl outsb imul popa jae imul jae jne outsl jae arpl popa add add dec popa jns outsl jne add imul add dec jae jo add add jne outsb add push outsl insb imul jne imul add imul arpl dec popa insl insl jne add inc outsb je popa jb add add inc jo je insl imul popa arpl add add popa jns outsb insb jns add jae gs push gs imul popa xor add gs add add inc bound fs outsb je add add push imul inc popa jb imul add jae insb imul add add push push arpl xor add pop add add add add add xor add add xor add or adc add add adc add or or add add or add or imul cs add add or fs outsl outsb imul add xor inc add add add mov add add add mov or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add push add add popa outsb addr16 gs imul imul mov inc add add xchg mov add add add mov or je jmp push mov call jmp add add add add jb imul insb insb add add add inc gs imul outsl outsb dec outsb outsw push add xor add inc add add mov add add add add or je jmp push mov call jmp add add add add jb jne jb push popa insb jne push add lock push xor add add lods mov add add add mov or je jmp push mov call jmp add add add add jb gs xor add add push add add insb dec outsl jbe dec gs outsl jb add add xor add add mov add add add add or je jmp push mov call jmp add add add add je imul outsl outsb dec outsb outsw push imul inc add xor add add les add add add mov or je jmp push mov call jmp add add add add gs xor add add add insb insb push imul outsl arpl inc xor inc add add sarb add add add mov or je jmp push mov call jmp add add gs jne jae jb outsl jae add add inc add add fdivrl add add add mov or je jmp push mov call jmp add add add add arpl outsl jo jo outsb jne add inc add xor add call add add add add or je jmp push mov call jmp add add add inc jo outsb fs outsb jne add inc add inc add add hlt mov add add add mov or je jmp push mov call jmp add add add inc gs jb jns outsb jne inc xor inc add add add add add add mov or je jmp push mov call jmp add add add add je jns je insl dec outsb jne add inc xor inc add add or inc add or je jmp push mov call jmp add add add add gs je push outsl jo jo outsb jne add add add mov adc add inc add push add add xor add add inc add ss add add sbb add add add mov or je jmp push mov call jmp add add add add popa jb outsl ja jb add inc xor inc add add and inc add or je jmp push mov call jmp add add add add popa jb jo gs add inc xor inc add add xor add add add mov or je jmp push mov call jmp add add add add je dec popa insl gs xor add aaa inc add add cmp inc add or je jmp push mov call jmp add add push add add add add add add or add or add adc add adc add sbb add sbb add and add and add sub add add add add add add add add add add add add add add stos xchg add add add add add add jl add add add add add add dec add and push add jb jae imul and dec add data16 and popa add popa add insb add bound insb add and add add adc add inc add push add add xor xor add sbb add dec add das add add add add dec add add add add add push add add add add add dec add add add add add push add add xor xor add add push add add outsb add outsb add ja outsb add add add add jo jo add push add add add add add inc add imul jb add add push add add jb imul add and add jbe add sbb add dec add jns bound outsl add jb add add add add add sbb add dec add outsb add jne popa add add add add add add push add add add jo insb add jns and add jbe add adc add dec add jne jae add add add add push add add add add jb imul add add add adc add push add jae je add and add jbe add add push add add outsb add je popa add add bound insb add add adc add push add jne outsb add add add add adc add inc add insl add and add jbe add add or add inc add outsb add add add add add popa add je add and inc add outsb add add add add add je outsl add and inc add outsb add add add add add add add add add outsl add je add push add add js inc add add add add add add adc add inc add insl add add jo aaa add add add add jae and imul popa add add add je and and add add adc add dec add imul outsb add insb add add add add add add add jo jo add and inc add jae add add add add add add add and inc add jae add add add add add add add add add dec add add imul add push add add add insb add insl add add dec add data16 imul xor add add push add add popa add add insb add add add imul outsb add imul jns add add push add add insb add jo je outsl add jo add add add add data16 push add add add add add outsb add jne add insb add add add add popa add add outsb add add jo jb imul imul add add add add popa add bound outsl add imul jb add add add popa add add add add add add inc add imul jb add add push add insb add bound insb add add adc add push add jb popa add outsl add outsb add add arpl imul add data16 add add add outsl add outsl add add add add add add inc add add arpl outsl add jb jae xor add add inc add add je xor add add or add inc add outsl add jns cmp add add dec add data16 cmp add push add add outsb add outsb add insl add je add add add outsb add outsl add insl add insb add je jns add or add inc add add add add add popa add imul je xor add add add add add insb add jbe imul outsl add jns xor add push add add popa add outsb add jae xor add jo add add add add xor add add or add push add jae jne add add inc add jb je push add add add add add add jo add xor add data16 jb add jbe add xor add adc add push add popa add add outsl add add add outsb add insb add jae push add xor add push add add insb add arpl imul add add add add push add insb add jne outsb add add add jb add outsb add add aaa add add add add push add insb add je add add dec add popa add popa add popa add add add add add add outsl add add outsl add add add add jbe add jb imul outsb add xor add push add add add je insb add add jbe add add add push add add outsb add add add add add add imul data16 add add add add add add add imul add add imul add add add add push add add add add inc add jo popa add imul jb jae add add dec add add push imul push add add popa add je jo push add popa add add inc add add add add popa add add add add jbe add add jbe add push add jb imul je jb outsl add xor add or add pop add popa add xor add adc add dec add add popa add arpl push add add add add add outsb add jb popa add insb add outsb add imul add or add dec add jbe outsl add xor add add adc add inc add insb add and dec add cmp and add sbb add push add add add add jb popa add je xor add mov dec sbb mov cmp adc add push add push add add add add push add add add inc ss dec dec add add pop pop jbe popa dec bound gs pop pop jbe popa dec xor jns add pop pop jbe popa inc jo xor add pop pop jbe popa push cmp je xor add add jbe popa inc jns jne add pop pop jbe popa dec xor jb add jbe popa inc jb gs bound add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec outsb inc jb outsl jb add add jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa dec bound gs fs data16 add jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add jbe popa inc jb gs je dec imul pop pop jbe popa dec gs add add jbe popa push je push outsl push outsb imul add jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push je push outsl inc outsb jae add pop pop jbe popa dec xor popa jb add jbe popa push je inc outsl jo add add pop pop jbe popa push je inc popa je pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb gs je add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa push popa jb jne add jbe popa inc jb gs popa jb add add jbe popa push popa jb jae dec add add jbe popa dec outsb inc jae jb add add jbe popa push popa jb outsl jbe add add pop pop jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add pop pop jbe popa dec jae je imul pop jbe popa inc push inc imul bound dec xor add pop pop jbe popa dec bound outsb add jbe popa push gs popa jb jb add pop pop jbe popa push bound outsb add or add add test inc add add add inc add (bad) (bad) incl add add daa inc add inc add add add jno add add add inc inc add add add das inc add add add inc inc add add add inc inc add add add inc add add sbb add mov push dec inc add add add das inc add inc add adc xor add mov inc add add add dec inc add das inc add add add (bad) cmp add inc das inc add add add jle push das inc add add add adc cmp add mov inc add add add dec inc add das inc add add add sbb inc add add add add add inc add idivb je inc add add add or add add add jle nop das inc add add add sbb dec add add add add add add idivb mov add add adc dec add add add js inc add idivb mov add add or push add add das inc add add fcoms add idivb aam inc add add inc add add das inc add add sbb add idivl hlt das inc add add inc add add add inc das inc add add test add xor push add add add pop add add sub add fcoms add xor and add inc add add add sbb inc add add add add add push inc add idivl sub inc add add add add add add idivb xor inc add add add add inc xor sub add mov idivl push xor sub add inc add add add add add add inc add idivl insb xor das add add adc add das inc add add add idivl je inc add add add je add fsubrl add loopne inc add xor add add inc add add add sbb inc add add add push inc add idivl mov inc add add add or jl add les inc add add pop push inc add idivb xchg xor dec add add sbb addb add add add add add add jle mov add add adc test add lods xor dec add add inc add jle mov add add sbb mov add fs inc add add js inc add idivb enter push add add or add add add push inc add idivb aam inc add add add xor sub add add add add inc add idivl fdivl inc add add add inc add add pushf push inc add idivb in xor inc add add or cwtl add add das inc add add adc inc add idivb cld xor or add inc add add inc add add add add idivb or inc add add add adc mov xor add add jle adc inc add add add verr inc add add add pop inc add xor sbb add inc add add cs add add add inc add xor xor add inc add add inc add add movsb pop inc add xor inc add add adc mov add lods das inc add add clc pop inc add idivb cmp inc add add inc add add inc add add add inc add idivl inc xor sub add inc add add sub add mov idivb push xor daa add add or add add add pop inc add idivb pop xor or add inc add add add add add and add idivb insb xor inc add add push add add add add add add idivl jl inc add add add adc enter lods xor push add add pop inc add jle test inc add add add adc add das inc add add add add idivl nop xor sbb add inc add add add add add add add pop inc add idivl pushf xor cmp add inc add add add add sub add xor add xor adc add inc add add add add add add add add idivb mov inc add add add adc faddl add lods xor or add les add jle (bad) xor or add inc add add add add add sub add idivb int3 xor push add add adc in add mov inc add add idivb fdivs inc add add or add xor push add add pop inc add jle hlt xor push add add or add add add pop inc add idivb cld xor cmp add add add add add jl inc add xor sbb add inc add add add add (bad) incl add add add add pop inc add cs add (bad) (bad) incl (bad) clc add add inc add add add add xor sub add inc add add xor sub add shlb push idivl and inc add add inc add add add add add or inc add xor dec add add or add add add inc add idivb cmp inc add add inc add add add add sub add mov inc add xor cmp add inc add add add mov inc add add shlb add xor add add inc add add das inc add add add add add inc add idivl push xor adc add add das inc add add cwtl bound add jle pop xor and add inc add add add add inc add idivb push add add add sbb add fsubrl add push arpl xor add inc add add add add add add idivb jl inc add add inc add add add lods xor or add mov idivl mov inc add add add sbb sub add fs inc add add add inc add idivb nop xor xor add inc add add add pop xor adc add xchg fs add idivl pushf xor adc add inc add add add add add add inc add idivb movsb xor cmp add inc add add add les inc add add add add idivb lods xor sbb add inc add add add add add add add jle mov inc add add add adc add das inc add add add inc add idivl mov add add adc inc add add add mov add idivb int3 xor sldt add sbb inc add add add add add inc add idivb aam inc add add add adc dec add add xor add add inc add idivl loopne inc add add add adc dec add add add shlb loopne jle lock and add add add sbb cwtl inc inc add inc add add add inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add inc inc add inc add add add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add inc inc add inc add add add add add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add add add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add inc inc add inc add add add inc inc add pop inc add pop inc add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add inc inc add inc add add add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add inc inc add inc add add add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add inc inc add inc add add add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add inc add pop inc add pop inc add inc add pop inc add pop inc add inc inc add inc add add add inc inc add inc add add add dec inc add pop inc add pop inc add dec inc add pop inc add pop inc add int3 xor or mov sbb and adcb movsb pop out and dec mov nop mov xchg das pop cmp xor or stos add xchg mov add dec add add or push outsl jb insb gs outsb add imul add add inc add add (bad) (bad) (bad) jmp add popa outsl je outsb add lds add jl add in add pop or add add add add add pop add gs cmp or cmc sldt or or add add add add pop add gs cmp or scas add add or add add add add pop add gs xor or fwait add adc add add add add add gs xor or pop or add aas or sbb add add insl gs xor or notl add daa or add add add add pop add gs xor or fisttp adc add add add add pop add gs xor or jno add or add incl sbb add or add gs aaa add pop pusha adc add xchg or add add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add adc push adc add add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or call add incl add dec xor push lret (bad) and inc repnz aas sub outsl test push lods icebp dec mov (bad) mov cmp xor or stos add xchg stos sti push add push add or dec popa jb outsl je arpl or gs popa addr16 bound outsl aaa add add inc add dec mov add inc mov inc mov add add add add add add adc add add adc add lock dec adc rcl adc sbbl dec xchg pop add dec pop ljmp adc fcmovnbe imul or mov in mov mov int hlt out aad lret or insl pop rcll fnstcw js xor std jmp arpl mov aad push or repz call jns ljmp lds jge sahf dec adc lcall pop or mov mov loopne or call js add lahf pop pop xor outsl push mov inc (bad) stos popf and xchg jns outsb ret cs fidiv dec mov sbb sbb mov and and mov push das mov cmp xor out add push adc xchg lds lods push rorl ret cmp scas mov mov dec jecxz testb aaa sbb mov xlat and insl fdivrs sub ja mov bound pop push push test rclb add std inc in push xchg adc mov arpl push repz inc cmovae (bad) stos mov xchg (bad) xchg xchg dec rol and or fs inc xor ss jmp cmp aad je mov mov mov in fcmovbe and fnsave jg cmp adc push fcmovbe jl,pn inc loopne sub mov mov enter push push pushf ds aaa xchg pop scas sbb hlt fdivl or insl es cmpsl mov dec cwtl mov mov loopne add push mov shr jecxz sub pop shrl sub push imul aaa jecxz lods movsl xor movsb test imulb add xchg inc mov inc and pop pop xchg xlat bound shlb repnz nop iret jg sarl jp (bad) shll add dec rcl rolb mov lret insl inc sbb ds push das push and out test in fs inc adc lods in stos pop out push loop stos xchg fsubrl lock push or subl xchg (bad) cld call adc mov nop inc add xor sar or ja out gs pusha jmp sub out dec pusha inc and xchg dec push repnz test pop popa dec lods pop cmp xor pop dec sarl stos xor lcall inc add (bad) sub insb mov or pop push in mov xor sahf inc pop das xchg sub sbb lret push lcall sti xchg dec pop (bad) mov hlt divb jmp jmp xor adc into mov add xchg add mov xchg sub push mov call xor jae add test pop mov sarl and test sub mov stc jle jnp add pop lods xchg clc arpl xor sbb and (bad) cmp std imul addb sbb add inc (bad) cmpl and fwait jb in test mov aam clc mov stos jmp mov inc cld ficomp and int cld xchg nop ja sub xchg out sbb dec sbb push xor cmpsb fldenv ds into cmp or push jns es mov (bad) xchg mov je in cmpsb push dec lret add xor or aad fisttp in mov or and add cli cmp cld xchg (bad) js mov jecxz push out ret out add call mov or dec data16 fsubrl sarl nop xchg push add fistp adc (bad) dec pop lret repz or fsubs pop loope pop and pop jnp loopne cmp (bad) rorl mov push test in push mov mov rolb cmpb xor pop ret es jmp mov scas cmpsl jns xchg add and daa (bad) jns mov jno inc push bound pop lods aad dec mov mov add (bad) pushf loopne into xchg and mov clc pop and js cs fs sbb pop lods arpl popf inc repz je in shlb out cli xlat stc int3 rclb lea or sbb cwtl push ss out repnz js test in xchg xor mov fptan jle mov sbb leave cld mov and and push lock clc loop xlat sub stos stos push enter flds in fdivrl loope mov adc push bound mov loope hlt shrl push sbb xchg and sub nop in push push (bad) aas add ret sub add outsb pushf mov pop cmp lea push mov or test outsl push pop add popf mov and movsl in push out jg xchg mov and add mov xor fmuls in nop hlt sub add cmpsl leave adc xchg (bad) xor rclb fadd pusha push lods push lea dec xchg or mov jl and stos cmp (bad) sub mov pushf fdivs mov in (bad) jae call int dec jno call lcall cmp mov adc lds add fimul (bad) (bad) sbb icebp leave imul cltd orb in xlat or aaa mov daa roll mov fidiv fldenv addr16 cmp cmpsl mull out es push add aas loopne addr16 push dec sub loopw subb test adc out mov jmp inc xor lock stos insl ljmp push cmp sbb popf push inc xchg bound cmpsl rorl xchg xchg push mov mov inc into ret sbb add mov aas pusha or das sbb xor out cs sub shr jns outsb gs jno pusha ret lahf xchg sub lret mov pushf cmc inc cltd or xchg adc imul call push sub lods mov (bad) (bad) mov stc sub fisubr cmp cmp outsl cwtl pop adc jne push shr jecxz ds xor cli xor jg pop mov sub hlt in lret sbb pop outsb mov mov in xor sub push inc leave xor cmpsl xlat pushf icebp mov inc sarb jp (bad) shrl adc rclb or sub nop stos jle mov je dec or fmul xchg mov or pop divl jmp aas or dec faddl pop jno into icebp call sarl insb cli add ljmp das fbld add lods push mov sub add and xor fs cmp sahf xchg addr16 aad pop sahf jg lock (bad) int3 mov (bad) movsb call mov fmuls or add add mov jbe jnp pop add dec pop xor stos pop pop push dec in testl aaa add icebp mov xchg aad mov sub dec out xor rclb adc pop jp (bad) lahf mov sbb bound std popf and (bad) lea sub test idiv sti (bad) stc inc iret nop cli cs lea cmp push test dec test pushf pop pop popl pop xlat pop adc sbb push (bad) push nop outsb fdiv jp ja mov sbb xorb lret hlt out xchg inc rol push fadd ss push popa mov inc cs xor xor dec imul cmpsl jae das cmc clc icebp lret xchg scas cmp das es out or test pop push and fisub cli add mov cmpsl in pop cmpsl andl fucomp and outsl mov inc cmp sub (bad) test pop xchg fucom loop lods cmc movb icebp mov int xchg xor outsb fwait (bad) xchg in or jle outsb xlat adc push cld mov pushf outsb addr16 mov xchg xor mov aas xor inc mov (bad) stos popf and lret mov mov sbb hlt mov dec cmp xchg repz and pop push int3 into or mov insb inc sub jl aas dec por loopne movsb fs inc add xor sub cmp dec cmp push cmp mov clc rorl dec mov lods loope xor sub out xchg add jbe jb repnz fcmovne shlb pop xchg nop or mov pop fwait inc pop lods cld mov inc and xor or dec sub and call or inc inc outsl popa out rcrb addr16 les mov mov ja testl test ret pop adc stc dec out mov lods adc rcr mov jl dec cmp icebp ja leave sbb cwtl jp ja add sub ss test xchg rclb mov jmp push or mov fld mov sbb mov aad sahf cmp lret cmpsb fs data16 push mov repnz nop and je inc jmp mov iret aas pop fstpt mov (bad) fld es cmc cmpsb stos in push or subl mov jb adc rclb ds jl sbb sub out mov inc notb aam dec daa enter neg in mov into jecxz fstps mov mov movl or sbb adcl movsl pop jne pop jle mov dec andb sub icebp cmp mov es leave dec ja out adc pop inc mov or jae ljmp mov shlb and mov xor mov (bad) dec sbbl fs xor push push or xor xchg mov sarl jo icebp mov sub or jo loope nop pop or push (bad) fmuls and jg std pop adc int3 aaa cmp mov ja fidivrl mov lods push sub mov pop std sahf imul mov mov mov mov push mov pop inc push and push cltd lcall or pushf inc ljmp mov adc fcmovnbe (bad) xor es jne in shr sbb jmp or arpl push ret lcall dec mov ss mov in sbb add addr16 add sbb add mov pop repnz xor and lds ds scas xor jecxz mov gs and (bad) jmp mov jne nop mov or in fnop aas negl ror mov fisubrl ljmp mov pop mov mov push push and xor xchg cmp cmp sub push mov and bound lret rcrl push xor push dec iret cmp popf int3 xchg out rsqrtps outsl lret subb andb cmpsb insl outsl push xor mov hlt xchg mov movsb insb dec imul lea pop mov push leave gs mov or mov push push pushf cli or sub inc notb mov lret xlat je sbb in mov movb addr16 mov xchg in test adc enter mov arpl mov loope movsl mov xchg (bad) in jecxz adc stc std adc sub sbb dec jnp fldenv hlt lret lock mov jecxz (bad) sub movsl sahf xor or sbbl pop adcl out fstpl jg dec loop cmpl pusha (bad) lcall loop or push fsubrs pop outsl fwait xor add mov cltd ss cmpsl fldt jo jge push adc mov push inc leave repnz ret pusha sbb cmp xchg inc mov cmp sub push les xchg es daa dec ljmp pusha jp into das inc jne or fmull repz in das pop dec in mov cmp xor inc fildll test jg popa andb insl jo inc dec addr16 fisubr push cmpsl ret aad (bad) shrb add and outsl jns xchg mov popa adc push cmpsb dec xlat fwait cmpsl loop or push sbb fwait xor js jecxz data16 sub stos mov push jns xlat push mov mov mov (bad) (bad) (bad) sbb inc test test mov mov shll (bad) mov push push push xlat shrb cli or test (bad) mov movsl test mov xor lcall push and mov mov sbb dec jo mulb cmc adc icebp xlat scas (bad) in mov pop popa and mov loope mov push in pop insl sub dec or (bad) in stc dec cmc jle dec int3 xchg in test inc sbb jmp dec insb arpl mov out cmp gs mov mov or jp mov pop sbb sbb pop jecxz divl mulb int3 ljmp cmp cmpsb test push aam push sub scas stos ret mov mov pop mov out popa jmp cmp and lahf insb (bad) or mov lret dec cmp xchg and lods popf fs imulb dec fs icebp lds add (bad) rcl xchg inc xor adc dec inc sahf in xchg xchg adc iret test nop lock rcll inc (bad) dec leave repz lcall xor lahf cmp jns push xor xchg inc or cmp lret movl nop or jp push push rolb or cmp ror lcall icebp add adc lret jecxz ffreep sub mov stos scas add sbb inc cltd adc ss sbb and push jo push popf lods adc mov cmp mov jno mov leave loopne stos xchg fwait arpl bound mul fld enter adc sub xchg and inc inc (bad) mov and inc xor mov xor jl leave test mov sbb add test cmc pusha (bad) mov daa stos aam dec jno mov inc cld out xor jne xor jecxz bound (bad) lods mov fcomi or add inc mov xchg xor cmpsb fidivl xchg jge sbbl out xchg dec rol and or push arpl rcll pop mov mov push (bad) jno pop jmp int3 cltd inc or or fcomi adcl ss arpl sub shrb nop add lock or pop xor in jne inc andb dec sbb sbb fwait xchg loop inc arpl test test pop push and out jae (bad) adc or repnz cmp cmpsl adc mov or push push out (bad) jmp shll and jne inc cmp insl push sbbb push cwtl (bad) mov xchg inc rol pop fld aaa cld xchg bound subl mov sti or push xlat mov in sbb push mov cli sarb popf cmpsb insl dec sub inc add in popl sbb hlt push test jmp mov mov loope or dec pop ja or lods jle cwtl or mov jae popf (bad) repnz inc scas push out daa (bad) dec js mov divl jmp jle and pop add insl mov push dec clc lock or lret jo ret rcl sarl nop xlat (bad) add mov insl sub sahf repz pushf dec push sarl and stos cmp (bad) push loope cwtl fnop outsb cmp jae leave pop jns icebp lds add mov and lea rcrb mov sbb cmp stos cmp dec cmp xchg adc add jle pop test shrb mov int push jno or mov inc lods (bad) jle ret in dec cltd mov push out push jge call es adc (bad) add jecxz push cmp iret jl jns xchg add and ja push sahf test cltd jbe imul int3 push mov mov aaa aad adc test repnz xchg pop add sti or adcl cs int pop leave pop xor add repz push sti out fcoml (bad) pop inc pop test jno iret popf pop cmp jmp notl sub jle xchg int3 testb dec shlb mov mov cmpsb push adc fsub fldl test or push movsl leave outsb or mov data16 scas sub push sbb fwait inc jg jle cwtl mov push jecxz push jl iret jl add pusha cld pop outsb mov add mov lret xchg mov add pop adc push ret dec lods dec fstps jne pop add jl out ss or push lahf ja and lahf aaa push daa xor in add xorl cmpsl sbb or adc (bad) pop shrl jns dec subl add push inc or or inc stc push pop mov and ljmp mov or aad test lea movsb out aad push pop shrl sahf inc bound popl cmp mov inc ds into out or pop inc mov inc push bound pop pop xorl mov add fisttp sbb into cld sbb in jl stos rcrl rclb orl addr16 sub stc (bad) mov adc jg pop sbb push sbb xor xor jp repnz rorb inc jmp test out jns jno addr16 int3 enter mov pusha mov or lods sub pop divl inc add and ja pop push popl pop xchg pop int3 jb (bad) mov std stos mov pop push aaa xchg in and je mov test dec nop inc mov inc rorb pop fadds adc into push mov dec xchg adc sub push out xchg or jg je lret pop xor dec insb ds add sbb (bad) jnp ds in scas dec leave xchg push push and xchg fnclex stos sub pop les cmpb ret pop adc mov stos mov mov and mov pushf pop (bad) stc out lods xor sar popf cmp inc sub and sti cltd sbb sub jmp mov pop push cmp cs cmp mov mov lds flds ss push push mov xchg (bad) sub insb mov xor pop lret xchg xchg lea jl pushf cld scas inc sbb ror insl nop arpl imulb sub cmp test out das xor and push arpl mov cmpsb dec and es xchg dec mov push lock mov jns jg dec xchg pop fimul scas pop and inc (bad) sub rorb lds leave or cmp or or test sbb jo or pop sbb jmp sub mov sti (bad) sub lahf les dec movsl movsb lea (bad) xlat call repnz cmp mov jno jae or and enter dec and cwtl scas adc (bad) iret fidivl sbb aas sti insl repnz lret cwtl push ss out ss repnz mov xor test mov (bad) cld or xor xchg fsubrl gs fisttp xor jne pop push push test iret adc ret mov and sti mov inc and ja pop xor cmp push mov jne ret popa adc pop xorl stos test in dec mov ss out cltd hlt cmp mov mov test pop bound cld repz sbb sbb push cs push in mov dec cmp stos xor push insb fistpll movb xor pop test mov xor dec test (bad) imul mov negl mov inc push fs popl mov scas out mov or int mov push (bad) push test dec stos cli mov cld fistpll sub jne inc sub push sub shrl (bad) mov mov movsl rolb or cs or xor ss sbb dec inc pop sbb dec popf inc xrelease cs push sbb sbb out scas pop dec cmp out jne enter jp sbb mov ss lods and cmpsl in repz test subl fnop inc neg jp add ret outsb dec fisubrl cmpsl push mov daa sbb das sbb bound sar ljmp call push inc clc movsl popf outsl addr16 adc xchg fmuls es add (bad) stos sahf cmp movsb roll (bad) sbb lret mov inc jl call bound mov xchg aas add stos and lds insl push pop and and cmp jns jo ret push mov loop push in xchg in cmpsb mov out cli xor outsl add repnz in test push and pop movd mov dec inc in adc ljmp xchg mov lcall pop xchg aam jg mov rcrb pop sub cmp fsubrl or daa and std mov inc pop arpl pop xorl sbb or add lock testb xchg es jp rcrb orl add jge (bad) int dec loopne shlb cld fcomi cmc jno cmovno dec test call cltd push jnp mov hlt push cltd and repnz iret and push ds out inc push dec pop mov ds stos jp popa fadd ja mov pop imulb inc (bad) sub and loopne pop adc andps jl aaa stos push outsl js pushf aas push xor inc cmp pop cmc cltd push dec cmp sbb sbbl int jno fidiv sahf loope rcl push mov xchg and subl mov push insl clc mov in push xor cmp out (bad) mov loope pusha mov sti or pop in andw in xchg push and cmp mov mov or jno fidivr mov fstpl imulb (bad) sbb dec movsl popa mov xlat fcomps xchg xchg push leave mov dec mov pop sbb jecxz shl (bad) cmpsl mov inc mov push xor movsl mov add mov xchg add jp push fstl sub pop xchg outsb enter lock mov sbbl pop cmp dec inc fsub add and js sbb (bad) sahf jp outsl jae fnop mov pop stos add pop pop cmp stc pop jb cmp insl test out aad mov mov insl xor jae rcr aaa pop push rorb mov popa and adc mov lea lahf hlt in pop xlat dec adc in add cmp push pop mov jl fimull xlat mov cmc repnz pop inc cmpsb push xor sub push inc push jbe jb add cmpsl xlat shlb repnz nop into ret pop shll rolb pop sub nop lahf add mov sub es mov enter sti (bad) or cmp lret pop xlat (bad) jne arpl pop xchg lods cli fmuls mov add jb jle imulb dec subl mov addr16 out stc leave fwait mov outsl jl adc mov mov xlat mov sub movsb enter cwtl push stc jne lret jns ss xor and (bad) dec mov icebp or inc jb sbbb push addr16 test fldcw ret or aam scas cmp arpl and scas clc jns xlat cmc mov xor (bad) stos jno insl dec std sbb stc fwait (bad) fldl ror fnstenv xor (bad) adc shrb mov dec and adc adc inc call (bad) jmp or cld scas pop sub lods mov out scas stc leave inc mov push mov cld and inc jle mov movb jb mov mov loopne cmp pusha mov divl std fisttpl call pop (bad) shll loope add into repz daa cmpb pop test popa lahf lret shll stos bnd shr mov jb clc movsl insb outsb stos inc notl popf xor mov call push ss arpl shrl inc loopne out sub xchg sbb jp lret mov push iret jno push xchg loope shl and mov push daa dec inc mov or clc pop nop and and test and cmp inc movsl inc js dec jbe scas add outsl outsb out pop pop loope lds (bad) cmc fwait mov pushf jg pop ret test jecxz sub jge xchg xchg mov lods cmc repz mov pop sub movsb out (bad) cwtl sub rcrl pop out orb and push movsl dec sti pusha jl repz sub xor add add or ja push adc dec mov xor lahf add scas or sbb pop in push int3 fisttp pop jb iret aaa sub clc pop xchg and and enter cmp jg push mov enter mov ret ret mov mov jge inc dec fwait sub divb add out sub pop aam jmp and jns sub jns jne pop jge (bad) dec push mov icebp in jle (bad) jo insl adc (bad) sahf inc sub mov xlat mov ja insb pop (bad) into jo pop ret dec inc and fcmove mov jbe (bad) and daa sub pop fprem1 push or pop dec push pusha lcall pop and xor sbb (bad) shlb movsb fsubs insl adc orb push xchg mov jmp cmp fstl sbb lret repz int3 dec shll data16 and cli mov push sub mov xchg xor sahf jno hlt faddl mov roll and popa push scas popf xchg jl loope cmp sub repz imul insl push sbb (bad) lea mov push mov cmpsb or fsub lock ret xor lahf test mov imul dec call cmpsb mov call pushf les gs shl pop add ret fsubl divb adc scas mov bound mov repnz sbb (bad) push mov jnp pop lahf sub jmp mov js outsb dec add xchg add sbbl rcl movsb in cmp test lret push add mov enter mov (bad) or mov mov ds out adc add sub sti xchg ret lcall inc and cs mov inc xchg jmp stc xor loopne cmp sub mov jl hlt mov xchg and adc stc pop imul add mov mov xor outsl cmpsl mov out insb in pop rcll cmpsl imul xchg loope shll icebp popf jmp pop loope and inc out in add cli xlat xor sub push inc or in test lods (bad) into and daa push pop sbb pushf mov adc movsl cmpsl mov cmp xchg loopne sahf jne lods int3 mov andl pop sbb mov xchg dec iret enter cmp cwtl and inc add add xchg outsl push fisubrl sbb jle je (bad) mov mov mov out xchg sub (bad) imul xchg push cmp test inc inc mov push lret dec lret add and je push sti repz popf cld push xchg or aam push imul jle xor add pop pusha (bad) add in in sub popf jae (bad) data16 jae dec addr16 xchg mov inc or add xchg icebp jge jb mov test aas pop jecxz call cmp test lods fdivrl les add into sub repnz jl lock and pop cmc lods lds fdivrl insb rolb fwait cwtl aas bound xlat mov mull fdivrs or and inc (bad) xchg js ss fs in xchg mov (bad) fisttpll inc (bad) push nop outsb fdiv jp ja icebp leave mov sub aam dec jno add scas arpl push sbb fiaddl cmp mov js xchg stc cld cmc iret fpatan jg mov (bad) lcall dec cmpsb stos es cmc lds mov push test out cs stos and pushf adc xchg sahf stos in fiaddl jle jp or scas sub mov mov jl xchg adc sahf dec push fadds sub loop ficom aas cli sub adc lea push cli fs pop (bad) insl mov inc clc call notl fdivs out cmp fiadd (bad) push inc cmp call pop sub push pop enter cmp adc lods ds jg cs cmpsb insb mov xchg add push in sbb iret scas (bad) xor adc mov push leave fs mov rorl (bad) cmp movb cmp push ret test das mov loop gs or aad add sub jns lcall daa xchg pop mov pushf (bad) xchg in test mov xor push push jmp stos mov push xchg jbe sub cmp stos inc scas mov add out loope adc adc sbb cmp cmp nop jge (bad) adc lcall rorl std dec repnz hlt adc cwtl mov addl ret mov fcomps loopne add jo dec cmp dec lret mov addr16 shlb adc sbb ljmp mov pop (bad) cmc fsub fnop cmpsl xor or mov std out jne mov push mov jmp scas adc (bad) add jbe insb dec add cmpsl jns xchg add and jp int loop ffree outsb sbb lock cli insb sub xor push test pop sbb cs mov cmpsl in out xor stos andl inc or or and jg pop pusha rclb test aam lahf pop jmp mov leave dec loopne ja mov sbb stc lcall push jle pop inc cmc fs add xor sarb outsb pop or dec jno mov adc mov lods inc icebp insb scas sub bnd lcall mov outsl inc jle movaps and data16 adc loop and outsl fnstenv xchg test das jecxz arpl (bad) lods lods das fwait pop xor xchg mov fimull xor push cmpsl cli (bad) loop jae sbb pop out (bad) imul mov ret mov imull sub (bad) jae sti and shrb fs mov psubusw xchg pop outsl pop out jmp xor inc test daa das sub sarb outsb pop or repz lock fcoms rsqrtps cwtl pop and jns xor dec fidivr lret mov repnz sbb and gs pop lea push imulb test out cs jbe or sbbb and imul push inc ljmp jns dec es bound int lods push movsb shrb iret inc fstpl sub test les enter or inc xchg cmp neg mov ds xor loope sti js push dec leave dec ja out pop cld cwtl shl mov or mov clc insl adc jle pop mov or ror stos sbb xchg (bad) dec sbbl int3 xor adc int3 cmpsb xor cmp pop mov sub scas pop and mov lret jmp mov jecxz lods movsl cmp or sub shrl lods mov pop pop pop leave mov fidivr xchg dec jmp adc mov dec sahf mov sbb bound cld rcrl rclb orl pop ljmp xchg std xor iret nop push aas pushf ljmp inc mov cmp rorb mov dec push movsl xor push add lds fs repz aas xorl pop push sbb hlt jg adc int3 mov inc jne jp inc jmp cmp data16 out mov repz mov mov sbb sbb imul loop mov sbb enter outsl add rep add out insl jp fsubrp xchg xor dec lret xchg movsb lea repz scas push sbb ror mov push mov mov in scas dec ds cmpsl fs out imul jecxz,pt adcl rcl fistl and aad loope sahf jb in xor and pop pop inc mov sti jg and ss and jle orl pop je leave sub outsl inc call std push adc int3 jecxz arpl adc jnp fidivr inc ret popa mov cmp push out sbb call mov int mov fldenv pop or dec mov das aaa xor test inc xor jmp js je sarb sub dec xchg movl out or add jg es out call mov pop lea xor push add and movsb cwtl icebp lods xchg or add add add fisubrl in adc sbb inc cmp push xor and xlat in icebp mov dec cmp lret loop mov js mov mov cmp lret sbb or push loopne repz je ficoml out cmp sub push data16 xorb sbb xchg lods es pop xchg and stc sbb mov and ljmp push je cmp adc or fwait pop loop xlat and inc cmp pop int nop movsl pusha lea les mov mov rcr outsb std or xchg pop mov rcll lods cld sbb mov xor xor jbe shll out cmp pop mov in outsl (bad) mov dec jne ret cmp (bad) mov (bad) cli mov arpl (bad) shrb mov mul imul outsl jmp rcrb out outsl jecxz cmpsl mov nop and sbb mov push es inc scas leave dec lea cmp aaa pop cwtl inc and sbb inc xor pushf hlt insb cltd enter (bad) add pop cli add insb fdivrp or dec imul and stc mov fdiv pop and adc mov lods hlt jno paddb aaa jne fdivs cmp jns jmp notl push ret icebp xchg cmp jno mov dec mov scas loope jns sbb xchg (bad) mov daa lods aad dec jb cmc jmp adc add inc xchg push aad lret stos inc iret ljmp in sub pop cmc push addr16 jae arpl call or add add xor push das int push mov inc mov mov jnp aad mov mov or fstl and out push ljmp add sbb js outsl enter aaa mov aas movsb movsl push jmp aas ficom sub sub mov xlat mov or loope mov enter add jo mov in jb lds fnstsw les call push nop aad std cmp mov rcl push or bnd mov js jmp test lods push rcrb int cmpsb xor jg fwait seto cmc push xchg rolb or and mov sub out mov test push fildll or mov cmc fucom icebp int ret xor and pop push scas std push (bad) bound (bad) cld rorl lds mov mov aaa fdivrl cwtl rolb int pop cld insb and dec lret rcl mov fist inc hlt jb and mov sarb imull push shlb jne imul ljmp xchg repz jge ror in loopne (bad) int3 test popf in or sub xchg pop lods jp imul mov in adcl pushf and fbld dec sbb adc adc iret mov mov sahf pop or jmp xor or sbb inc stc mov xor fwait sbb adc pop jb imul mov sbb sahf stos adc xlat xchg jno mov xlat mov xlat jl or and je xchg icebp push mov idivl xchg mov or flds fdiv jbe mov cld aam dec fs xchg jnp (bad) insb mov arpl in mov adc aas or sahf je (bad) insb xor cmp testb bound sub mov mov cmp dec xor dec and sbb mov imul into std cwtl pop sub ficompl sbb push xchg mov leave sbb pushf mov insb or daa dec push sub cmpsl pop mov cmc icebp xchg xor mov push js dec push jns int aas (bad) in sbb jae add add hlt lea mov inc mov idivb imul cmp push inc fs jo insl jg mov xchg sti inc lret shr arpl add pusha loope dec mov insb pop mov push je int mov mov lea add sti aad fldenv pop push cmp mov mov fidivl or xor pop loop jns bound outsl scas scas and jo sbb dec cmc jle dec mov and shll adc ja insb pop mov testb in adc cli gs xchg idivl (bad) lret (bad) adc sti and sbb xchg adc imul cld mov adc xchg dec cmp sbb movsb sub imul pop or das jae daa jle cltd pop inc clc (bad) mov loope dec mov insb pop add jnp xchg mov push loope push jp int inc inc jg add movsl cmp mov into xchg jae push sti mov xchg sbb xor push adc add pop xlat int (bad) and ds add (bad) cld mov aaa jns adc dec sub outsl mov mov sub test leave lret and mov inc test dec adc push push mov pop push (bad) (bad) enter imul xor dec sbb adc mov sti and inc jle dec jnp jo xchg in xor adc loope dec jl cmpsl cmp (bad) jge out movsb push data16 mov fwait in xchg inc cmpsl ret cmp jae ss loop xlat ficompl fsubl mov pop lret addr16 outsl test xorl xor mov add inc sub popf aad scas (bad) inc int3 sahf sarl sbb loopne gs ficom add xchg mov dec xor jnp out pop aam iret pop mov push je into pop mov cmp add push lea insl inc hlt icebp or fsubl sbb mov scas jns aad lock or into xor mov loop add jne and iret xchg cwtl xchg sub jg mov stos kandw mov xchg fcompl mul sub pop mov mov sbb movsl xchg (bad) adc pop aas dec repz sbb jae inc adc or xchg push lods mov pop jnp push adc loope push fadds sub inc fst sub iret cmp xchg aas mov in aad mov adcb es call push xor pop fwait pop push sub sahf xchg push xor sub mov sub mov mov sbb cmp mov stos sub inc fs dec mov sub bnd jl and sub sbb add jmp and movsb dec inc jae mov xchg lds lods push adc sarb (bad) rorl add test dec fisubrl ret push dec xchg pushf cltd test fcmove jns mov jle push and inc cwtl mov jl divl jbe mov inc in xchg mov dec fistpll push xor xchg test leave jecxz add inc aas adc gs mov clc cmp dec aad scas jge lret loop cld leave and cmpsb inc dec fmulp jne sbb jo (bad) cwtl and xchg pop popa popf xor add and (bad) mov pop cmp loope push fcom sub add adc sbb mov out ja mov adc mov jns (bad) stc lock sbb into (bad) sarl loop add mov push out sub and fcmovu xchg or or in test inc aad inc sub shrl xor jl sbb pop mov mov dec xor pop inc xor push lds sahf pop xchg cmp das shrl xchg mov push loop push aaa mov push out mov xlat jl jle cmp mov pop and and cmc mov xchg out mov (bad) jno mov push loop jns dec sahf mov (bad) lahf push add mov pop xor jne (bad) (bad) mov cmp fisubr jae cmp push pop xorl sahf xchg ljmp jns icebp sub push mov aaa inc xchg and jne or pushf or gs movsl lret add push push push pop cmp xor pop dec sbb test data16 mov or test or fstps xor inc shll jns in pop jne jo pusha jnp jp xchg adc shl xor std cwtl sbb mov or mov std or adc cmp idivb pop out shl push add mov rcrl mov leave or and jecxz cmp movsl call sbb out out add sub sub int3 sahf fidivrl rcl (bad) fbstp stos xchg iret rcll aas xor imul mov jns jle dec out bound adc mov not mov imul testl loopne or sub pop ficomp in inc add and xchg imul int3 push sbb pusha mov and cld in jbe sbb adc xor iret mov push mov (bad) andl add push mov push push cmp xor xor jae,pn xchg inc mov jp sbb push inc jnp inc and lods xor jno jae or fcmovbe sbb lcall inc cmp jo adc dec in push push (bad) cli add dec cmp push cmp xlat negb movsb jno jecxz and or xchg insb push sub pusha cmp sub into lods (bad) (bad) mov es test cmp jg dec jmp ljmp test out xchg in out add lock (bad) jle and pop push jl sub sbb sti add jmp adc xor pop jecxz jp in xchg sub push push lods popf sbb ret cmp xor lea scas push and fimul cltd divl sbb mov xlat and (bad) in leave push mov movsl push jg inc push adc outsl js lcall adc and jnp pushf stos inc and xor (bad) ja pusha mov or adc sub stc (bad) clc lret into (bad) cmp pop mov cs mov xlat xchg dec fistl int lret mov add dec xor test iret gs lods sbb mov mov add adc add les std je outsl clc pop enter loope or jl jb or or bound mov sarb inc (bad) ja mov pop pusha jae mov in js or icebp and cmp cmpsl cmpsb in push sub sbb scas ds mov pop sub popf mov adc xchg lods (bad) test js ja xchg push int3 mov loope inc fimul test push sbb (bad) pop push sbb jle les or loope pusha sbb add cmp pop push notl into jne loope das cltd and mov cmpsb lret (bad) push adc ja int hlt cmp call jmp lock mov pusha iret call scas xchg sbb push aas out das jae sub test xor mov or adc add dec iret ja pop and lcall mov clts push sub jmp (bad) ret mov sbb (bad) cmp sbb mov int and ss clc fucomip xchg js xchg mov adc mov cld scas push sbb lea mov jb mov push icebp sub cli sub sbb adc lea push stc arpl pusha hlt test neg jne sbb aas pop fdivrl jmp cmp mov jge scas pop ret xchg xchg flds hlt jnp push (bad) sub xchg pusha mov inc sub out xor push movsl mov cli orl dec data16 fidivrl xor dec sub sbb mov fs inc add xor out daa lret mov pop add jle ja loop pop and and lods gs out outsb mov mov out and dec sar scas mov push push inc dec popf mov or adc push jb adc mov xor stc sbb out or scas xchg (bad) pop enter leave movsl ljmp aas scas jle lret xchg pushf fisttpl rcrl lcall push mov and fsubl add lret out je stos xchg sbb jno sbb push xchg in cmp cmpsl mov xchg int3 inc arpl hlt mov jbe xchg jbe push jl leave loop aas cmpsb popf or mov sub xchg and dec rol jno mov or and out sub push nop sbb aaa push pop scas aas popf mov jae (bad) into mov (bad) test sbb mov cwtl adc xchg mov fcoml or movb stos subl adc ds pop outsb (bad) mov dec idivl cmpsl xor sub outsb inc out aad sarl scas cmc jb adc std outsl hlt xor xor jns add addr16 pop pop adc imul xor xor mov adcb cmp cmpsl dec in push mov and (bad) inc rcll nop push ds push stos addr16 mov mov dec jle stc lods push jl jnp xchg mov push loope push jp int3 jns xchg (bad) mov cmp fcoms (bad) repz cmp je mov xor mov fisubrl inc lcall je pop faddl xchg mov bound fisubl inc shll mov mov test pop cmp sarl mov cmp add mov push mov das icebp (bad) cmp cs je (bad) sti rcl push dec push or cmpsl mov jle pushf in xor mov or pop mov daa sub movsb out (bad) cwtl rcrb shrl out xor fdivp aam sub adc fidivrl dec pop dec loopw mov repnz stos xchg (bad) xchg aad lock push fcmovne sub int3 inc rcrl lds mov xchg repz (bad) fwait ret cmc mov (bad) in (bad) loop sub in aam adc add cmpsl xchg test loop test mov loop and shlb out faddl call ret inc cmp push mov and or xor jge sbb jp sub push stos xchg xchg hlt imul mov push loopne xchg jns adc sub xchg xchg stos pop cmpsb mov pop cmp jae mov xor hlt and jb cltd fcompl lea push mov sahf pop or pop fs test idiv repz sub shlb clc int3 xor sti ret xchg cwtl pop cmp sbb mov or dec mov inc cmpl (bad) fdivrp fdivrp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp fdivrp fdivrp fdivrp faddp faddp fdivrp fdivrp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp fdivrp faddp fdivrp fdivrp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp fdivrp fdivrp fdivrp faddp faddp faddp faddp faddp faddp fdivrp fdivrp fdivrp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp fdivrp fdivrp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp fdivrp faddp faddp fdivrp faddp faddp fdivrp faddp fdivrp fdivrp fdivrp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp faddp fdivrp faddp fdivrp fdivrp faddp fdivrp faddp fdivrp fdivrp fdivrp fdivrp faddp faddp faddp faddp faddp faddp fdivrp fdivrp faddp fdivrp faddp faddp faddp faddp fdivrp fdivrp faddp fdivrp faddp faddp faddp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp faddp fdivrp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp faddp fdivrp faddp faddp faddp fdivrp fdivrp fdivrp fdivrp fdivrp faddp faddp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp fdivrp fdivrp fdivrp faddp fdivrp fdivrp faddp fdivrp faddp faddp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp faddp fdivrp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp fdivrp faddp faddp faddp faddp faddp faddp fdivrp fdivrp faddp fdivrp faddp fdivrp faddp faddp fdivrp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp fdivrp faddp fdivrp fdivrp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp fdivrp fdivrp fdivrp faddp faddp faddp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp fdivrp fdivrp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp fdivrp fdivrp fdivrp faddp fdivrp fdivrp faddp fdivrp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp fdivrp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp fdivrp fdivrp fdivrp faddp faddp fdivrp faddp fdivrp fdivrp faddp faddp faddp fdivrp faddp fdivrp fdivrp faddp fdivrp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp fdivrp fdivrp faddp fdivrp faddp faddp faddp fdivrp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp faddp fdivrp faddp faddp fdivrp fdivrp faddp fdivrp fdivrp faddp fdivrp faddp faddp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp fdivrp faddp fdivrp faddp faddp fdivrp faddp fdivrp fdivrp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp faddp faddp faddp faddp faddp faddp fdivrp fdivrp faddp faddp faddp faddp faddp fdivrp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp fdivrp faddp fdivrp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp fdivrp faddp fdivrp fdivrp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp fdivrp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp fdivrp fdivrp fdivrp faddp faddp faddp faddp fdivrp fdivrp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp fdivrp faddp faddp fdivrp fdivrp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp fdivrp fdivrp faddp fdivrp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp fdivrp fdivrp fdivrp faddp faddp faddp faddp faddp fdivrp faddp fdivrp fdivrp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp fdivrp faddp fdivrp faddp faddp fdivrp fdivrp fdivrp fdivrp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp fdivrp fdivrp fdivrp faddp faddp faddp faddp faddp faddp fdivrp faddp fdivrp faddp fdivrp fdivrp faddp faddp faddp fdivrp fdivrp fdivrp fdivrp faddp fdivrp fdivrp fdivrp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp faddp faddp faddp fdivrp fdivrp fdivrp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp fdivrp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp fdivrp faddp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp fdivrp faddp fdivrp fdivrp fdivrp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp fdivrp fdivrp fdivrp faddp faddp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp faddp fdivrp faddp fdivrp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp faddp fdivrp faddp faddp fdivrp fdivrp faddp faddp fdivrp faddp fdivrp faddp faddp faddp faddp faddp faddp faddp fdivrp faddp faddp faddp fdivrp faddp fsubp ficom nop or adc pop lock inc int in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp lea sbb ret adc ja scas fistp (bad) cmp enter mov insl pop mov cmp mov mov daa mov cltd icebp jo insb xchg sub cmpsl ret jnp push pop loop dec test call inc (bad) sub xchg mov adc and lcall pop in icebp lcall mov std or jb imul push sbbl divb sub mov pop mov imul cmpb cld popl aas test cmpb into xchg xchg mov nop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jmp pop int3 popa xchg stc pop cmp movsb rcl sub xchg jbe xor mov clc push add inc sub sahf loopne pop in jl jnp mov pop mov data16 aaa and mulb push ret inc out lea and and enter mov jle mov std sbb adc out xor daa mov cltd icebp jo sub adc stos (bad) pop insb je pop pop (bad) cwtl jo mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor mulb push (bad) lods cmp lea and xor enter mov push mov jo adc out xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall icebp jo sub adc stos (bad) daa inc push (bad) jbe out cwtl cmp in stos inc push xor inc xchg sbb and pop sub adc adc xchg inc jle fs (bad) js jae dec jge mov aam mov push mov fwait jmp sti xlat jg mov mov test imul outsl mov nop (bad) push or sub (bad) imul adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xorl test incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jb aam mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sahf loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec push bound xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) lods mov test loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb and outsl cmp push xchg xchg jge test movsb push cs add notb rcl andb fwait ja imul loop js mov xor inc aaa cmpsb clc aam or dec (bad) jnp dec aam repnz push jbe xor xchg inc frstor push dec fs js lea push xor cmp add or mov xchg sub xor push inc out xor adc add adc clc push shrl dec xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp fildll push outsl sub and xor dec out mov cmp xor inc xchg int3 repz fwait push inc jge mov mov aad in inc jmp mov out jg ret jns push adc adc popa and test dec pop pusha es fcmovu loope (bad) push or into mov and sub orb inc jne add lds push xchg loop,pn adc and pusha cs adc add sahf pop stc or push mov in dec scas dec push pop das mov cmc xor leave flds pop cltd jb mov scas push (bad) add pop mov icebp fstl pop in lahf in push leave stos int (bad) sub lahf daa loop icebp gs mov arpl xorl inc lcall sti add movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl clc aaa lods adc movsb aad pop (bad) xor mov iret loope ror jecxz inc pop or jnp adc sbb pop test mov fsts mov xchg cltd mov sbb movsl lcall push ret mov test (bad) leave or xor xchg cmpl mov dec mov out stos shrb cmpsb lds mov daa mov rcrb push pop add test neg pop std fmul dec adc push xor cs lock sbb cltd (bad) mov cmp mov jnp loope int3 (bad) (bad) cmpsb je (bad) xchg jg add loop xor xor sub dec push mov pop sub faddl (bad) push repz es adc dec cmp imul adc les inc mov push in jo into xchg inc pop mov iret push jnp dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall adc cmpsl cs or sarl (bad) adc xor pop and fdiv orb mov call shl pop imul fcompl or xor xor mov dec (bad) lods aad out gs cmc and mov ds (bad) insl add ss iret dec outsb xor cmp inc add daa shl and loope sub inc stos mov insb je incb popa mov aam cmp (bad) imul int add and add xchg lret mov jno test cmp lock mov push dec (bad) xchg decb xchg ljmp inc cmpsb in data16 xchg push sub aad fnsave negl and xchg mov imul pop std shrl fnstenv mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor or gs mov mov inc stos subl imul push sub mov iret push pop and xlat data16 push bnd lock xor mov addr16 sbb (bad) mov (bad) adc jne inc das popf xor adc xchg cs je icebp pop push xchg mov sbb stc xchg xchg push push lods aas sarb ss dec call in xor push int3 inc out jge xchg push dec xor in test hlt cltd ja ja out inc iret test xchg in mov mov mov (bad) cmp xor mov fdivr mov scas cmp (bad) sbb mov adc rol pusha dec add div incb sbb iret loop aas out xor sub dec loope sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmp enter mov (bad) and add sub movsl xchg gs xchg mov les jb ja mulb xchg mov inc stc cwtl negb sahf mov jecxz inc int loopne fmull pop lock inc jne push fild pop mov dec adc mov ret adc push mov jmp adc outsl or je,pt pushf push xchg (bad) fisttp (bad) xor mov insl push mov jns dec jmp xlat outsl xor pushw repz mov cmpsl ret push je dec or lret cmp insl add inc sub xor xchg shrb repz or test push (bad) xchg jl xchg dec movsl (bad) (bad) xor sub mov sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc addr16 xchg add adc outsl mov int sahf add inc sbb mov and xchg roll push mov inc xchg push shrb aaa in mov in sti and loopne imul mov ss mov sbb sbbl inc loop hlt int3 pop movsl ficom arpl cmp mov and add jo divb scas fcompl test mov stos xchg test lods pop std or dec jmp lds cmpsb jl lods fistp add xor cmp pusha enter or lcall mov jg and test pop mov (bad) adc adc cmp push jns push leave mov lods stc xlat es push in cmp pop or mov out out mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push seta adc cmp add cmp lds or dec mov cltd mov xchg int3 and (bad) xor mov push push insl je sahf mov cmp lock stos fwait dec mov pop mov xchg xchg xorb add inc stos inc lock ds and shr lods jecxz cld sbb push lret fs push insl sub xlat inc jno mov jae dec lret popa (bad) xchg aam fisubrl int3 add adc outsl mov sarl (bad) in outsl fildll (bad) push mov pop mov jns repz xor xchg insl inc sahf mov les call insl in mov rcll pop push aaa push push and scas cmpsb xor test xor in addr16 and lret jo scas mov decl movsb add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fsubp mov je lds bswap fcomps fdivr daa mov repz mov push sub popa ja mov call ret mov jp mov or pop adcb and xlat stc loopne pop movsb sarb (bad) push stos mov jns arpl out addl movsl push sub jle push loope test aaa loope hlt and and and gs pmaxub nop cld pop (bad) mov mov dec mov in les cmp lea (bad) imull cltd and inc fisubl push das push insl jecxz xchg jbe jns fsubl ret jo enter iret adc je mov jle repz sbbb mov mov data16 inc mov mov aad jl adc test cmpsb xchg push jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge (bad) fldenv jl mov jl pop push cli inc mov pop inc or pop rorl adc push add fcompl inc sbb lds pop lds (bad) mov cs mov stc mov and sti mov icebp out xchg jnp icebp lods fbld pop loopne xor faddl lahf jl push popf frstor xor mov sbbl jnp and insb cmc mov jo adc jb je or xchg (bad) push lds mov push std ficom sarl xchg fistpll dec sahf jnp int cmovbe adc loope andl mov mov pusha jmp sahf jp nop mov lods mov insl int3 mov mov dec add or pop or ljmp es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp imul outsb ljmp call pushf sub inc cmpsb pop ds sub add dec xor adc push xor out scas gs (bad) shrb jecxz jae jnp push lret int xchg lahf stos in mov lods iret adc mov push jnp xchg repz popf outsl xchg (bad) mov in dec xor sub leave sub inc sarb push push aam mov enter jmp add sub jl mov jae mov fimull jge cmp imul push dec or out inc jne addr16 cmp pop mov adc xchg mov xlat mov repz ffreep in push sahf loopne aad push (bad) cwtl ja inc popa out mov lahf enter xor imul movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmpsb fcom sbb outsb cmp inc adc jp mov into push std or cmp mov insl cmp je test repnz cmc es icebp popa and mov std mov in ret xor mov jns mov jne in arpl movsb lcall xchg xchg lahf (bad) aas jno loop sbb push ret mov fbstp or adc rcr sub pop lods mov inc jbe pop push cwtl test dec jmp addr16 dec fcompl (bad) ljmp out cmpl push neg mov data16 shrb rcl mov mov pushf mov repnz jae jge sbb jg sbb pop mov mov addr16 fsubr sub fstps fisttp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aam xor xchg jno stos pop aad sub lret push pushf adc outsb sti pop mov mov and inc mov inc or cs xchg (bad) push or sub cmp out push (bad) imul in sub mov push inc js dec movsb cmp into jecxz and fdiv sbbb inc rcrl ret lods mov mov notb scas in aaa loope fbstp shll call sub mov lods popa sti mov or inc mov outsb jno (bad) or inc xchg cmp dec daa mov sar hlt xor or mov mov cmp xchg ret (bad) cwtl cmp adc cmpsb daa fs jge jns shr (bad) (bad) aad movsb adc cmp rolb (bad) sti pushf jl lcall js cli mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jmp dec inc in dec (bad) and cltd int3 (bad) loopne push in jbe movsl es enter jecxz mov pusha jge pop rcrl dec ds sub add ss into dec outsb stos out and scas scas xor lcall out fucomip and lds jmp pop xor add push mov mov rcl scas iret adc mov cmp mov jnp adc pop inc ds jmp (bad) cmc xchg addl mov sbb sub (bad) cli ret fsubl cmpsl mov mov fisttp dec pop cmp nop cmc lahf mov outsl mov aad adc imul add andl arpl sbb jne outsl incb movsb pop pop or std in xor stos pop lcall mov mov dec aas jbe mov es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop loopne xchg pop jmp mov sbb lods pop mov xchg xor repz sub mov cmp xor or lahf leave push leave stos jmp int std cs pusha push mov mov mov addr16 mov mov fs mov pop (bad) test pop test stc or inc scas inc mov popf push imul sub lock push mov in dec (bad) clc adc js cld cmc jge pop mov push std jnp mov cs ss out mov clc adc stos fldl enter inc incb xor loop mov cltd jl inc (bad) push movsl and xor leave mov jmp pop xor addr16 lds xlat lret pop pop pop push pop sub dec aad js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or mov add out js sbb nop loopne aam jb ret or dec fwait add push (bad) or rorl insb pop push pop push (bad) popa fsubrl mov in mov lret jmp jle jp cs aad mov dec es xchg cmovg xchg push jge cmp sarb lret ja cwtl loop mov js mov dec and mov mov adc lods pop push nop mov bound mov pop xor ljmp fsubl outsb xor jmp rcl je imul in add faddl xor sbb xchg dec repnz dec push sti xorb fidivl cwtl xor std mov push push inc xchg test pop and inc gs (bad) out int cmp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall into mov add push bound (bad) repz test (bad) mov imul sub notl sbb inc bound or pusha xchg mov mov les ds sub add psubd aas sbb lods lcall xor push add add cmp or mov push lods inc loop mov cmp and insl out cs mulps sbb lret (bad) je mov out xchg inc ss mov pop outsl cmp imulb mov pop lret les inc movsl ds hlt xlat mov add xor jg mov test cmpsb push mov fsts aad nopl mov and xor cmp dec in in addl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov insl xchg aaa in mov in sbb jp mov dec sbb (bad) push scas mov lds jbe shll adc cmp cwtl mov lret pushl sub sub cli or pop xchg or xor lahf inc out xor loop mov cltd jl cs push movsl and xor fisubrl bound insl (bad) loop fistl aam pop xchg adc loop sbb loopne dec push jbe (bad) mov pop movsb mov shll iret gs test cmp mov mov sbb outsb dec mov dec push iret dec enter dec sti pusha and dec loope mov pop js cld in data16 stos subl mov and sub adc jl (bad) mov aaa pop ret xor jns daa adc das ds jmp add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ffree fdivr (bad) daa ds cmp mov add sub adc adc xchg mov mov cld sbb lahf dec (bad) ss aas mov xchg push mov inc jae mov cwtl das jge bound dec (bad) out push (bad) sbbl shrb cmpsl xchg jo cmc push inc xchg addr16 ja (bad) mov sbb mov jecxz das push lret sbb stc shlb jne out popf and loope adc inc shlb fsubrl or add sub cltd jo loopne jmp dec repz lods movsl xor addb dec sbb pop aaa popf test insl add fcompl adc mov jo and push bound add or cmpl xchg pop xor addr16 int pushf js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl xchg out pop mov icebp jmp lds (bad) rcll jb lods mov (bad) mov push mov mov cmp cmp jae ret xchg cltd mov lcall gs xchg and call test mov rcll jle daa xchg repnz and scas ficomp out jg movsb sti push stos out inc push jg jnp stos int insl call mov fisubr lods je cmp (bad) outsl push jp xchg cld dec mov ja pop (bad) decl mov jo stos inc (bad) push ds jp xchg vpmacssdqh call inc inc divl enter rep ds std push cmp and out push xchg add adc and sub rorb xlat imul cmp jg,pt in pop fiaddl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc cli mov xchg test imul cmp ror push inc xchg lahf negb popa cmc gs movsl push sbb push int or mov std adc imul outsb mov cmpsb dec call in jne inc sub xchg rclb into push xchg or fs pop (bad) pcmpgtd repz ljmp mov stos jns dec stos mov xchg inc jno adc cmp out dec je outsl hlt imul mov adc xor pop pop sbb test xchg sahf cmp sbb pop in push push loopne mov xchg fnop into jae xor or xor sub adcl call js hlt adc jecxz mov dec mov pusha mov arpl pop push popf ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl popf sub gs inc ds dec mov repz push xor rcl push aaa sub lahf inc (bad) aam sarb inc adc insl cmp mov push in ljmp jae aas orl jecxz sbb jnp inc (bad) jbe int dec (bad) es out popa fdivrl leave xchg adc testb std ret (bad) sub sbb cmp sarl xchg mov sahf add push pop jg test cmp mov leave pop pop push xor imul push dec inc jg ss arpl outsl lcall dec pop int daa inc jbe sahf sub jecxz xchg dec imul xchg mov xor or jno (bad) test addr16 popa mov loop jne mov gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call int add mov fwait push push mov lock push xchg push mov stos mov test jge hlt mov mov popf push (bad) int mov sub mov (bad) adc les mov cmp movsl es in imul outsb (bad) cmp mov and mov add cmc test dec xchg inc out fs je test ja in dec ret inc js das xchg icebp ret mov cmp lret jbe outsl xor pop mov jp sub pop fsubrs aad (bad) (bad) jbe mov es in (bad) dec sti (bad) call push int3 dec ljmp sbb jecxz xor and dec ret jns and jg arpl jg mov icebp inc ss insb mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xchg sub sarl xor cmpsb push sbb mov and jne mov push dec movsb pop sbb gs loop push mov sbb loopne pop mov push in nop mov push daa inc xlat outsb scas (bad) sbb enter pusha jp jg stos push out fnsave or and xor and add push repz dec sahf das cli inc stos push push add scas cld pushf cmc sub icebp sub cmp cmp fildl jbe lret outsb (bad) (bad) std push xchg and sub dec xor addr16 pushf xor into mov push fcmovnbe sbb dec inc mov adc push push lods test add lea dec imul jae rcll popf lock xor call cmp paddd ds repz lret pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg cltd pop test push push shrl lods push in shrb ja pop ret xor jbe ds inc addr16 push cmp sub add loopne icebp (bad) cli mov mul dec cmpsb in sbb sbb push push imul jmp inc xchg addr16 lds xor jno mov aad adc jb jl dec fwait push pushf fs xchg hlt xlat lock test lret popa push cs xor mov mov test xorb ret xchg xchg sbb or adc jle mov or mov sbb stos test jo inc fcom and je push add adc cmp lret jp mov fcoml mov mov inc inc sub dec or cmpsb xchg mov cli ss mul cmc xorl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push jnp and mov or fcomps leave out jne sahf (bad) mov lret stc out lods jno clc arpl fiadd and cmp ret mov inc cmp sahf add movsb addr16 cmpb aam ja call pop daa sub sbbb scas cmpsl loopne movsb gs aaa pop mov jbe outsb add pop (bad) push insb mov movb dec out push push xor sub push sub push add cs mov (bad) fcomp je push gs sbb cwtl pop mov add jecxz pop movsb mov popa and inc push mov dec insb jno mulb sbb pushf (bad) mov dec pop push aad sti shr ljmp ss inc pop popl jle mov xchg xor (bad) sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc mov sbb arpl add adc popf adc dec pop dec sbb or sbb cmp xorl adc sbb addl dec push aas (bad) adc jo call out adc adc jbe loope test flds pop ja idiv adc and mov lds jl in inc or sbb sub dec push jl mov mov iret dec outsb xchg fdivrs out (bad) int3 lea movsb dec lcall pop int3 push insl imul out push movsl cmp neg stos iret pop pusha mov mov and or int addl fs dec test sbb int cmpsl stc dec adc aas adc lods mov or mov xchg cltd mov sbb jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc popa and cmp cmp push repnz pop xor mov (bad) jmp sarl mov push std sbbl out outsl cmp cmp mov iret cltd sbb or in mov mov pop cmp mov cld push cmpsb imul lods mov adc mov pop in adc out rcrl stos inc mov fs cmpl inc cmc imul push mov out rorl sub sbb imul or and push xchg inc sbb cmp cwtl imul leave sub push inc (bad) xchg dec cmp mov jecxz lret mov xor sub fiadd mov adc imul jae dec jg loopne xor cltd inc jle xchg arpl dec popa les and push lods cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fimul cmpsb enter inc sbb sbb (bad) rorb mov mov lret fidiv cmpsl es cmpl jbe je bound sbbl push xor imul (bad) ficomp jmp cmovbe cmp mov loop jecxz add div mov mov and fmul mov pop in sbb outsb or sbb xchg movb xlat jbe xlat loopne xor sbb push out mov xlat fs dec pop xchg imul add lea (bad) fadds imul enter test mov inc stos jno mov fisubr stos ds insb add mov in mov jl pop test or mov mov jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sub push mov xchg adc fs inc mov clc adc fisttp jns mov sbb xchg std cmp lahf dec xchg xchg pcmpeqw inc aas test pop dec xchg (bad) mov rorl mov outsl and in jge int3 or adc inc iret gs push js mov mov xchg sbb in rcr pop sub sti adc arpl imul ffree and (bad) push sub or pop jl (bad) jno pop fnsave mov mov aas leave movsb pop js nop add sarl xor arpl dec gs mov push lds sub std jno rcll jmp ja xchg or sub outsl neg es lret in jmp lods xlat stc cmpsl ljmp cltd les fcomps subb movsb dec or inc aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc push add inc int loopne sbb int and shl lods movsl push out cmpsb fcom sbb ljmp push push push sub cmc psubd aas add rclb cld arpl scas cld mov repnz gs cmp fwait std (bad) jmp jg jge test dec clc scas cmp iret adc dec sub adc push lret in adc cmp sti pop ja aas or mov jecxz add dec add lahf jmp or cmpl lods (bad) push fsubp xchg xorl xchg inc mov lret in mov lds pop add cmp outsl (bad) aad or stc into adc imul rcrl push (bad) xchg xor out push dec loop iret mov adc fistpll lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl dec in mov je enter lock sbb lret sbb cmc je divl into jmp xchg (bad) or sub or inc pushf fnsave push inc dec adc fisttpll out (bad) cwtl jnp and inc add push out roll scas aad js (bad) push movsl pop popf test shrb mov gs mov loopne inc lods test xchg add adc mov cli mov pop and jmp fnstenv pusha and scas fmull push out cltd mov repz cmpsb enter push inc data16 std or das cli lcall push push popf ja in data16 shrb sahf into ficompl inc sub jno cld gs cli fiaddl imul icebp dec out or movsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub mov inc jl,pt cmpsb cmp imul mov adc dec fwait mov sti rclb shr sbb cmp call data16 pop stos lahf imul add (bad) sub sarl cmpsb call fiaddl fistp pusha inc movsb stc mov jl (bad) jb fdivs jge xchg scas or or push (bad) fistpl or pop in int3 jae sub mov lods pushl pop add xlat adc pushf fsubrl out into jmp jle mov and ss (bad) dec mov out stos sub xor data16 jns out fdivrl mov stos inc inc insl je inc stos data16 mov outsb pop stos push repz test movsl lcall imul (bad) dec mov in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov repnz mov js xchg xchg dec inc enter lcall (bad) fistpl mov mov mov adc xchg xchg daa rol or lea ja sahf dec pop aaa adc xchg xor rcll mov idivl and insb leave push es call mov lea and or loopne stos jg sbb cmp cmp rolb lcall rcll cltd jne notl shrl mov jo inc mov (bad) mov fpatan sbb fcmovne test push lcall mov int3 jnp in sub sub xchg pop mov nop cmpsb ret push push sbb data16 les cmpsb (bad) imul adc je dec jmp mov andl ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl into bound cmp loope loop add jbe imul test daa iret in stc mov xlat call xchg and fimull or sub cwtl les in sbbl push std mov mov push popf stos (bad) in shrb pop dec int inc inc ljmp add addr16 scas pop jb stos ds mov inc jne dec jnp,pn into in inc enter rcl push pop cmp pusha faddl lcall das insb js push inc jg push aas mov pop mov (bad) adc or fist jle dec repz lods jnp cmp out cmp nop ss (bad) mov lret sub sub sub xchg add into (bad) fild push popf dec lock icebp (bad) out cmp fidivl inc aas pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp cli int into cmp ficomp out arpl dec pop mov push inc sub incl or pop cmc xchg fwait mov pop jb xchg jns cwtl sbb push in shr outsl dec ret jns mov push es inc fbstp push jo movsb and out pop loopne adc lods rep push outsl jp mov cltd aaa xchg xchg cmp adc movsb jb enter les or loop fdivs (bad) leave adc mov dec cmp inc lods xor cmpsb inc test sahf loopne sbb add sub cltd pop sub xor loope jle movsl mov cmp xor popa dec jle je jno mov aam insl add dec push adc xchg jns dec jg dec mov mov xchg jae or mov in add jb cwtl cmp xchg jb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc cmp divb sarl movsl xor dec sti (bad) in cmp pop pop sahf and (bad) push jge repnz xor das call pop icebp shrl mov test and pop mov pop fimul pop and loope mov pop movsl lods imul rol sbbl lods add xchg mov popa adc fmuls cmpl jne je (bad) repnz pop je xor add or add push cwtl mov jg (bad) lret js insl sbb inc xchg mov out out cltd (bad) xor inc outsb divl les cmp movsl ds hlt fbld pop push dec mov pop ret cmp or arpl (bad) (bad) imul fldt mov ret cmp divb mov movsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov test sub (bad) mov mov popf and jmp jae and sti mov mov or sub cltd adc stc arpl and pusha insl scas push gs fidivl sub cwtl add xor psllq enter mov insl fsubl add xor dec gs into mov inc cmp cwtl mov mov inc xor imul mov in pop nop xchg dec push enter das push lret sbb and fs sbb cmpsb xchg shr nop mov test lods push mov mov dec in dec and popa pop xor xor (bad) lods mov cwtl xchg les cwtl int3 pop inc scas jne decl lds mov jns (bad) scas xor and int das (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cltd icebp repz shll outsl repnz in jmp jo mov out into cmp addr16 or aaa xchg in sbb inc test push aam mov jl fprem push leave xor xchg pop xor sbb fs push mov movl xchg das mov push pop fwait mov insl pop fistpll jge inc aas aam (bad) enter or dec sub pop sbb sbb pop mov outsb sbb mov jno loope or adc adc cltd mov sarl xchg cld xor in inc dec mov mov (bad) adc mov mov fcomps imul sbb mov xor jno push add in idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc cwtl xchg icebp lcall lods jno shrb imul dec fcomps arpl dec clc or stc aad shrl pop pop xor data16 gs mov cmpsl cmc dec adc adc mov mov leave xor sub loope push or or ret sbb jge sub dec adc repz test fsubrp stos mov xor scas sbb (bad) or jno addr16 mov scas lret pop call cmpsb mov sub jae aam jecxz pop test sbb xchg xor mov test divb mov arpl in mov jmp mov dec mov add test mov sub xlat dec fnstsw fbld pop in xchg std dec iret mov outsl mov push cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adcb sarb rol aas xchg xchg pop mov in mov cmc out mov pop outsl (bad) lcall mov pop cmp out jns pop jb push add add pop int3 or sbb roll popf inc jmp mov sbb lods xlat jns lahf fsubrl out call fisttpl hlt xchg mov or test imul pop std test scas out stos mov je adc fisttpll call jnp imul insl stc jecxz,pn jno movl flds xchg (bad) jne rorl stos sahf sub mov lods cmp je ret negl (bad) or fdivs mov and in dec adc aas sti enter pop in (bad) xor popa ljmp int3 fbld push dec loope mov pop int fldt pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmpsl inc xchg xor adc test je push jo cmpsb bound push lea jl mov xor (bad) icebp add cmp sti rclb out add jp and into outsl push popf (bad) ss mov daa cmp mov ret gs (bad) mov rcll ret pop inc (bad) xor dec fwait les (bad) hlt fbld pop push pop push dec mov and mov les pop push inc sarb jp sahf jl outsb ret mov push popa stc sub inc jne das sbbl xlat ror pop sub xor xor sub add dec popa (bad) adc scas mov sub loopne mov cmc out movsl add rcl or and inc adc gs lahf xor out mov push test push std or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fs and or arpl pop call jnp inc lahf test je (bad) icebp fmulp rolb pop fisubr or mulb dec loope outsb subb imull pop lahf aaa sbb mov dec add ss loop rolb enter (bad) sahf xchg jae neg aaa mov imul ss in cmp jb leave adc sub aas pop sub xchg shrb ror adc push lcall movsl data16 lods xor dec lahf stos inc test fwait inc or mov push push mov pop rolb lahf mov mov push cmpsl loope stos mov cmp cmc pop inc pop mov inc and lock bound mov stos xlat push jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sub push cmovge xchg std in mov pushf outsl arpl decb aad stos jle xchg add or in rcrb jmp cmp in pop dec pop mov sti jno (bad) lcall ja sub mov push ret sub pop dec pop or dec xorl lods sahf call mov fst jo ftst lret testb cmp repz pop dec mov pushf rorb push (bad) fnstsw pop std and addr16 in jl (bad) dec pushf stos inc test jae (bad) test cbtw pop sbb jne dec fisubrl sahf and es into mov push dec add in push repz inc xor inc lods cmp inc incl aaa sahf fs sub xchg leave sub mov aaa loope mov cmpsb push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xor subl es jb or sub inc outsb jns inc repz mov test in stos mov je bound inc adc icebp std jg negb mov stos scas lret pop call fs cli lret mov out into and jnp and add lea mov jl dec adc jge cmp inc and inc inc dec push mov fs fld push sub cmc outsl mov sbb repz xorl mov cmc lahf ss (bad) mov repz mov xlat jns jg pop push cmpsb (bad) imul iret rcrb pop inc enter mov xor cmp adc cltd cs pusha std jmp jge fucomip lods mov insl int3 push fs dec pop in mov adc daa cmp push std cmp (bad) sti inc jbe call ret idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall in jne inc dec cmp ret dec mov xchg in mov xor arpl hlt lcall es nop mov ss jns pop gs mov cmp push jl xor sbb cltd dec addr16 sbb sti lcall cmp cmp mov sti xchg or loope inc sub sbb mov pcmpgtb sub push call repz lods jnp or out lcall fdivl in push lock imul pop std test repnz inc cld fnsave and bound xor fdiv std mov mov or xchg add inc loop jbe insb pop fidivr outsb jbe fstpt pop mov rclb mov mov mov mov nop outsl jno inc and leave insl sahf fwait (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc sti mov sbb call scas sbb add mov and out pusha iret cltd fldenv pop repnz mov mov xor les cmpsl (bad) imul movsl pop fwait or stc jp mov aam lret addr16 mov xchg inc xor xchg xchg negb into or in iret adc inc pop or sti adc mov (bad) add and push sub aad gs and fisubr lahf les cltd icebp loope push cmpl loopne popa scas xor fbld pusha std lods cmpsl adc ljmp add cld add mov push xchg ja inc xor xor enter jmp cmp push mov mov lock and ds es shrb fimul dec or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push mov leave mov imul xor or and stc dec push adc or xor int3 push inc sbb dec inc jo jbe fldl out xor addr16 jp mov ret dec cltd add mov add push out mov jl adc insb jae icebp or pop mov ret pop lahf mov and lret push adc inc stos inc sub jno mov aad adc push mov push lods xchg and das jge cmpsb jnp dec push outsb out pop cmp xchg data16 adc inc imul add aad imul xlat xchg (bad) insl pop rorl jbe add xor popa ja push dec cld cmp shrb fsubl addr16 push mull mov and andb je in adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mul xor or insb inc mulb xchg lret scas cmpsl test jb xor cmpsl jecxz sub repz xor leave sub jns jnp and imul mov popf lcall lcall adc push insl stc out ret add push out roll test adc push cmc outsb in and sahf jge dec outsb push dec inc cmp rcrb aaa bound xor rorl shlb cmp aas adc in adc cmpsl sbb adc pop xor (bad) mov das pop mov and lahf sub jne inc and push pop sti or loopne cli adc out or cmpsl inc gs lret jo mov fisubl inc cmp insl lcall cwtl cmp pop add jl aam adc pop cmpsb xor test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fistl pop mov in insl push push ljmp lret sub out fadd cld dec push loope scas mov inc mov jo ja jo inc adc jecxz (bad) call fwait lcallw out scas jnp jmp mov lret gs jns mov hlt test lods or pop mov mov fistpll repz sub sub xorl inc aas hlt in mov test dec dec notb cld fmuls push xchg xor and or out out inc mov (bad) in stos mov test pop jle das mov sbb mov flds stos iret cs sbb repnz out push mov scas les mov pop int lret fnstenv mov sbb rcrb xlat dec pop popf xor addr16 lods mov repnz sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fstpl pusha push and stc cmp sub mov or and dec nop mov adc sti adc xor push jecxz adc (bad) and (bad) shrb int3 pop movsl leave jg xor popf pusha insl ds add std or or scas lcall inc push jmp mov and xor cld and jne bnd mov jne and mov dec xchg inc pop (bad) push sub pop sbb mov pop rorb jne out mov pushf arpl sbb cmp inc jg inc sbb loope inc outsl sti jg gs adc lock sti pop push mov imul (bad) call into push sbb rclb fcmovbe xchg (bad) or pop pop mov jne mov push dec movsb mov lahf push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc test inc enter push sbb in roll in sub out inc stc arpl jb xlat call xchg push sub aad add lods push fs fstl cmpb (bad) cwtl fidivr fiadd mov aaa push lds repnz add xorb fstl nop aas xor mov fwait mov dec push aas mov push popf jbe sbb ja sbb push (bad) push dec and popa je aas push add pop lds clc mov lds lods inc imul jbe xchg mov push xchg roll dec repnz scas movsb xor loope std enter pusha mov mov cmpsb loopne push pop xor and or inc xchg jl push icebp in add lods mov fwait mov mov movsl jle or shll push sub inc stos fdiv sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call neg std adc loop push mov push or push push mov or cmp adc clc sbb cmp xchg cmp sub jl xchg mov mov xchg push bound add ret pushf cmp or ret repz test aas dec fwait pop imul mov adc clc int inc and add or and fdivr and js (bad) test dec and jp or push in inc pusha mov hlt push push jmp pushw das aas fildll movsl or lret aad out rcrb fsubs ss sub cmp std xor add adc xor lods mov jnp xor movsb xor xor test and push out mov idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and mov cmp sahf mov lcall cmp mov cltd and insl js xor fidivr out out or jg fcomi mov push dec mov pushf dec fcmovne jge mov pop inc xchg jmp mov insb orl fucomip subl aaa aas leave into inc add or and push jns bound mov repz jo xor dec cltd gs call cltd cwtl cmp jge popa dec xor mov adc ljmp dec repz xor sbb bound push push fmull mov stos test (bad) push cmpsb mov rorl dec cmpsb in aas cwtl in jl cwtl fsubrl xchg jno xchg dec sbb cmpsb cmp les (bad) in inc sub outsl mulb pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmp mov daa adc dec and jle les mov cmc push cli les and sbb pop mov mov loopne ljmp popa pop std push xchg rcll stc dec mov and sbb sub mov xchg arpl sbb jecxz stc stos push das add scas mov loop mov jg rcrl test inc out lret sub lods jno add and cmp and movsl outsl lock test dec lock sarb das ss ja hlt fs dec xchg inc xchg or sahf or pop xchg xchg push lahf (bad) mov push mov jne pusha xchg fwait aam sub (bad) jge cld or pop aaa sbb in or or mov pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lods mov sub xor je pushw insl and pushf or sbb push mov cltd popf cmpsb outsl sbb lahf cltd cmp adc push pop jecxz mov into lods call pop bound loop inc xchg adc inc stos inc idivb xchg shr sub cmpb idivb enter mov or cmp pop inc push mov add fwait outsl mov subl insb mov inc mov ret pop sbb xchg xor cwtl jge addr16 and dec movsb loope fsubl addr16 jbe out popf and adc jns xor mov mov mov in call neg jmp xchg jb sub sbb ds sbbl push into dec outsb mov mov scas xor arpl dec gs inc inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno push sub pop add mov lret bound xchg add xchg ds sbb and cmc lock inc sbb xchg xchg lea movsb rcl inc sub xor into ret push outsl mov int3 enter mov jnp mov push mov lahf enter add std jge (bad) mov and or fcoms inc repz or (bad) scas leave movsb aad sbb bound js int popf sahf stos mov dec icebp nop and jl addr16 stos scas (bad) mov loop add mov lret xchg lret pop jo jno test pop mov mov dec jg bound orb ret dec arpl (bad) jno sbb and jbe cmp lds icebp sub jecxz sysenter dec mov dec in and cmp (bad) mov fisub adc or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push insb (bad) xlat xchg iret jg pop inc fldcw (bad) gs rorl stos pop cmc mov jne mov push dec movsb pop xchg outsb aam sbb je inc fsubs subb inc dec or insl in mov inc mov cmp fsubrl cltd mov loop push or in lods (bad) jo push out call xor clc divb decb cld or not jle daa xchg jmp inc test jo and bound dec adc icebp sti mov pop call movsb inc ljmp out addr16 fdivrl mov jmp arpl cwtl andl or das out sbb shrl mov cltd js (bad) lea in and sub xor push fisubr xor cmp pop sbb xlat jle shr or mov pop sbb stos fcoms and push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec sar repz jnp and imul sub pop popf daa add push jns jo mov or inc jne cmp iret cwtl push inc ja call mov push aaa cmp dec sub test int xchg (bad) jns imulb inc mov jmp sub cld jl mov mov jmp idivl insl mov xchg daa nop jne fcompl mov jmp jo cmpsb and inc repz or outsl pop and adc ss mov cs fwait add mov or and inc ja mov pusha jmp xor push sti inc bound or cmpsl cs pusha sub lret (bad) xor outsb (bad) jmp fild fsubs dec faddl jmp inc jns dec jp movsl adc push jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fnstsw out bound mov push (bad) push mov orl xchg inc mov ret ss orb addr16 xlat xor mov cmp pusha fcompl imul fcoms inc xor movsl nop push (bad) push dec nop in in arpl pop add rcr sub and inc lea imul cli jg fcmovnu adcl dec adc adc pop leave jmp aaa mov jg test lock push leave stos into (bad) push std (bad) fsubl ja and and push sbb pop jno cmpsl das cltd jne pop add sub int data16 push mov (bad) shrb inc loope cmp dec cwtl ss dec popf orb cld dec jae inc lock out out fs mov stos stos add sub lret mov mov cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl in xor and xor adc imul adc sbb cmp orl xchg stos pop xchg or sbb ja pop xchg sbb daa mov pusha std sub outsl mov in add test mov enter pop push sub adc pop push xor jle movsl mov sub shrl repz jmp mov lds sub or test rcll mov cltd sbb xor or icebp ds jb dec sub adc cli int pusha mov xor jne sbb and es sbb xor pop mov mov pusha std sub and popf dec adc test pandn icebp mov mov adc sub push cmc and rorl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall ret js (bad) aam mov push hlt xchg mov or gs xor leave dec adc notl cli icebp pushf out xor jns xor cmp repnz lds jne cmp cmc pushf or inc outsl outsl call xor inc popf sbb cmp sub sarl mov mov mov xchg jmp jge fimull jmp sub je xchg add mov int3 push mov stos call mov stc in and (bad) inc xor pop scas daa int3 pop stos xchg fmulp mov cs xlat mov shl mov nop jecxz imul inc push and les or jae sbbb aas inc sbb add je push les mov aad add mov popf inc inc xchg adc push bound inc push jecxz and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl outsl adc or xor leave into or mov mov into push clc mov adc icebp sbb xchg notb jno cmpb arpl ds arpl ret lock jb push sbb movsb (bad) push mov lcall test xor mov sub repnz or pusha popa cmc adc iret cmp leave pop xchg insl mov jl aaa loope es push in (bad) lods mov mov adcl aas mov mov jno mov stos out inc adc jo es pushf int3 mov pop scas cs outsl arpl cli pop int cmp mov sbb je sbb add insl and lahf dec mov (bad) loope mov lret jns bound mov mov xchg scas mov lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pop fsincos cmp pop repz jp fwait dec fnstsw fisttp aam push xor lret (bad) out (bad) jo pop cmpsl inc aas or xor movsb int3 cmpsb inc ss out in push pop lods dec mov movhps push sbb sbb sbb xchg lret xor jg (bad) aaa mov mov or push pop mov enter mov xor sbb (bad) lods mov enter pop ret dec das lea repz xor leave hlt fstpt xchg add stc popf out xor outsl jns xor dec gs into loop xchg mov mov pop jo hlt (bad) test mov dec mov test add adc sbb (bad) cmpsl sub scas xchg mov xchg adc js mov icebp mov push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec pop outsl adc (bad) clc sub mov pop xor fsts outsl movsb xchg (bad) lods cmp lea leave sub mov enter leave jg les or das mov arpl pop fidivl or mov outsl and dec and sarb dec pop decl and stos ds pop iret adc sub adc inc sahf dec jno jnp dec out sarb jl adc dec stos inc xchg pop xor jb pop movb les dec fwait add sbb jns jle lods test mov int3 jmp data16 pop negb inc add cmp ret bound dec into (bad) or ss addb dec push lods mov adc jg movsb mov xchg sarb out add sbb jns add inc call ss or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall repnz jmp test xor and mov mov and sbb scas xlat fs add rol jbe sub sub in jno add scas fdivrl pushf daa mov mov jno sbb (bad) pop sarl insb je inc jo imul inc cmp xchg or inc rcrb mov push (bad) xchg mov cmp mov ror pusha popa add int ss pop xor mov rcll sbb dec cltd clc mov adc jbe flds jmp add mov jb pop les in mov inc jle jge std or add and sbb jo sub push insl mov xchg cli scas das in dec loop adc cwtl cmp push out stos lods fnstsw lret push imulb dec pop ret mov loop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc cmpsl push jmp cmp mov icebp fnstenv adc push fstpl call push push mov (bad) rcr addr16 stos aaa notb cmp add pusha loop jnp js push lods cmpsb cs ret dec jp rcll xchg scas (bad) imul into nop mov sub jge or fisubrl daa bnd sub mov cmpsl xchg gs insb ja mov rcll insl mov sub aaa loope es push mov addr16 (bad) out sbb cmp pminsw cmp cmp outsb cli adc mov adc inc lea cltd inc jb push and xor loopne inc xchg adc out nop pop jge,pn insb ret mov sbb dec cs push jno in imul mov pop and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cltd ja arpl sub aaa mov lods mov cli dec inc ficomp mov fildll add mov sbb (bad) pushl popf sarb jno xor out add mov xchg dec dec inc jbe xchg adc mov mov lods inc lret inc icebp jo jp and add ja mov xor cwtl cmp fwait inc (bad) mov mov push mov cmp pop mov clc mov insl adc cmp add xor mov xor std xor pop fbstp cmc push fwait mov pop xchg dec nop js es mov pop (bad) jmp push cmpsl push faddl repnz popl adc mov pop cmpsb mov xchg or inc rcrb mov push (bad) xchg mov cmp mov adc jo pushf jl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov and imulb sub mov ficom dec aas mov mov xchg ljmp xchg mov lret lods cmp push mov stos call stos subl push repz adc in inc cmp inc mov fldt cmp pop lds pop inc insl je imul push fs inc cs add ret stos shrl xchg sbb les cmp mov fist cltd ja adc aaa out fndisi(8087 mov cmpsl xchg gs insb aaa movsb mov dec (bad) sub pushf dec enter fsub pop xor call dec pusha aam in gs mov cmpsl mull test lds jge movsb add std inc iret and adc xor enter jns loop adc inc jge jge outsl (bad) daa (bad) cwtl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp mov mov push mov cmp mov loop xchg xchg pop xchg scas jl aas incl aad stos xchg pop lahf cli leave mov sub jb xchg std cmp pop fbstp pushf pushf xor jmp sti das mov out inc pop jecxz push decb pop (bad) mov enter fdivr jl out jbe scas sub dec into (bad) or ss addb dec push lods repnz in cmp je int dec rcrb sbb lcall pop cmp mov test arpl outsl sahf sbb xchg call fidivrl scas mov dec cmp outsb lret out dec jle je fcompl mov movsl leave movsb push mov xor js sub pop popf daa fldt cmp pop lds repnz insl je lcall adc cs xchg dec lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstl in cwtl xorl adc dec stc ror jecxz mov mov js add cmp pop in push mov xchg ljmp xchg mov lret lods cmp push mov stos call stos subl push repz adc in inc cmp inc mov popf daa fldt cmp pop lds popl je lcall adc decb imul pop shrb xchg or imul mov pop bound incl aad stos xchg pop lahf cli leave mov pop rorb aam (bad) aam cld sbb sti sub sbb and mov xchg dec jne lcall mov movsl sahf data16 iret loop or arpl pop push push inc adc cmp nop cmp mov add nop cmc stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl pop add test movsb rcl icebp sub insb iret mov push add mov lods test leave sbb mov xchg in cmp push std sub in (bad) mov lret out dec jle je sbbb or jg cmp daa mov jns jge xor xor addr16 pushf loop (bad) xor test andb in add out inc (bad) in inc cmpsb jl lods fistp inc sahf or dec stc pop cmp cwtl cltd cmpsl loop in arpl inc aas aas mov leave cld fistpll scas mov sbb shll enter mov pop lret mov jae pop xchg jl or add mov cwtl adcl mov mov out stos iret test push sbb mov cltd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) hlt pop sub gs imul loope incb pushf xchg arpl ret xor pop pop mov push pop js push outsb cltd pop mov fldcw and add xchg imul mov push in dec mov mov add jae ds nop inc dec es mov pop (bad) jmp push cmpsl push fmull lea add cmp negl cmpsb dec mov ret pop mov sbb cli push (bad) xchg mov cmp ds lret xor pushf jl add add rclb or mov flds loope dec lods cmp popa add fxch sub mov sub scas aas or aam int3 cmpsl mull xchg (bad) dec sub in jno add scas fisub stos int sbb xor mov ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc subl repz mov cmp pop imul jne jno push dec mov pop fwait add xor xchg (bad) xor xor mov shlb or cld addb mov dec out cs mov dec loope out inc inc jbe (bad) and clc mov test adc cmc jnp pop xor leave jmp adc scas pop testb icebp sbb in movsl movsb ds xchg sub sub add (bad) xor scas inc mov mov cld push jae,pn add dec push adc cmp pop mov sbb adc inc aas std add js dec jbe cmp mov pop mov jmp nop loop mov aas (bad) xchg les es and arpl lret cmp mov xor enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jmp fildll ret adc dec or inc test mov nop rcl mov xor fwait mov repz decl pusha push sahf (bad) pop jmp (bad) (bad) jnp pmaxub mov pusha jne movsb movsb mov push sub aad gs mov stos fmuls rorb dec push jne repz xchg nop push mov into mov ja addr16 cwtl sub inc ds rcrl mull jbe jo mov ret test inc cli in pop pushf xchg dec push enter das push lret sbb dec rcl lret addr16 jne out inc adc add rolb movsl sbb (bad) sub add mov and sub xor cs sub cmpsb loopne push pop xor test outsb mov es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl notb xlat fs mov stc insb fsubl shrl insb mul call and pop std cli jmp divb popa xlat push scas sub dec xchg aam popf into out dec pop sahf mov pop pop lret insl dec out lock inc stos inc and jae and xchg jle cmp ja mov aaa cmp mov jg jns pusha jbe lret sub cltd xchg push cmp fwait dec jo cmp roll repnz add aas pop or into pop dec adcl lock adc or pusha sub fistpl mov xor push test mov shr test sbb mov cmp inc lock loope adc xor sbb sahf xchg (bad) in cmpsb dec mov out dec fsubs xchg aad and add dec xchg jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std inc iret and mov cwtl dec cwtl jl or bound and (bad) mov std add and out shl das in sbb lods push or inc add dec mov pop push aas fisubrl daa repnz mov cmc push sti das pop or ss pop sbb in roll outsb neg xor pop mov ja mulb es inc and dec mov xchg cmpsb enter cmc jns lods bound fnstsw pop adc fwait xor fidivl cltd fmull mov adc gs xor icebp jne lahf imul into push push dec lret divb xor (bad) in sbb ljmp fwait xchg loope mov call out jno ss pop jb cltd mov jb push push xor pop in mov mov js pop je mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fidiv dec cmp repz mov js xchg inc sub insb push mov aad xchg xchg out and cmc and dec add mov push cmpsl (bad) adc roll jne lret and mov jmp mov pop inc dec lret addr16 cmc jno movsl push rcll mov inc mov hlt (bad) pop dec push dec jmp out jno add sbb or rol in out jle pusha pop lods pop xchg push inc insb cmc mov iret ja adc lods or cmpl jne je dec cmpsb inc pop orl push mov ret out sbb stos pop sbb jne adc repnz fild pusha pop adc rolb fwait and or add mov mov (bad) adc (bad) in pop mov mov or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop mov leave and int3 mov shr repz leave daa jo bound call jns sti mov fdivs (bad) scas mov mov xor lock fwait cmc xor (bad) ret (bad) daa add mov sub or fistpl cmp inc jp adc aad js leave repz fnstsw (bad) fwait leave popf mov fimul pop fld cld dec roll xor cmc lds stc movsb mov lods movsl mov push and inc mov jmp lods ja cmpsb test add inc test imul pop jno xchg or or fnstsw stos rol divl into and jno mov js outsl lods loopne dec roll and aad or fldcw xrelease push push and data16 inc dec lock outsb pop popf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcmovnb and mov movsb jmp inc and push sub or outsb cmc xchg fiadd and jo and (bad) ja push in push jg jne mov xlat je fs roll stos inc lods ljmp (bad) arpl movb or dec jbe in (bad) icebp lahf jp movsb insb jmp pop inc inc lds jge mov pop adc pop arpl mov cmp test adc pop mov (bad) pop xor mov int3 mov jbe xor hlt ds repz aam add or xchg out enter scas inc and lods add cltd icebp jae stos xor repz add lahf stos lcall mov mov mov or mov and adc mov repnz pop adc (bad) lock lock cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp ret inc fmul in sbb cs jl or fidiv sub iret popf in dec xor cwtl test xchg pop pusha (bad) clc sbb (bad) loop mov pop jno fadds popf mov ds sbb push mov lods test and imul sbb lret scas rorb in jp add add inc lahf divb rorl sar jmp xchg das scas into loop and scas enterw xchg and imul xor sub sbb outsl cmc data16 or lret add jp into sub xchg push xchg adc sbbl jmp aas xchg mov pop mov sti mov dec pop cmpsb jl lods inc inc fnstenv xchg (bad) jne in mov (bad) sbb rcrb cmpl dec mov scas lods mov and pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) sbb mov push xchg mov dec pushw das lods pop and add dec scas outsb out lods cmc jb dec mov ret data16 or data16 pop int leave and xor jg jns or pop loopne xchg sti std dec cmp xchg mov add lret xlat mov (bad) icebp (bad) xchg pop outsb movsb and adc or daa popa lret imul (bad) test leave push loop,pt jle adcl mov and iret sbb lds add dec inc mov sbb aas cmp iret sahf mov ds lahf movsb rclb outsb lcall cmpsl int mov and sub in aad jbe add cmpl cwtl push dec movsb pop sahf es mov jno cmp fmuls vpaddw mov test sub sbb rorb addr16 jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lcall lret lods rcrl push out push adc clc lret pop inc cmpsb insl ds sub add enter or mov mov popf stos int sbb or jnp sbb push insl int (bad) mov dec and inc mov jne rorl lods rclb xchg pop popf test sbb rcrl xor mov sub dec jo or repnz aaa into insl in mov xor jnp pcmpgtb sub data16 mov sbb lods pop inc or pusha xchg int3 pop jo push push lret mov fcmovb (bad) cmc inc push dec or xchg lea push add pushf adc stc pmaddwd mov cltd push gs sbb stos mov test stc out sti add outsb stos lods pop pop sub mov mov shr mov imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc (bad) xor in mov dec cwtl jae jb add lock dec mov stos stos add sub popa les jnp outsb rcll pop xchg sub in xchg mov lea call mov xorb xchg dec xor addr16 sbb pop popf and stc cmpsl sub mov dec (bad) (bad) jns (bad) lcall out cmp and shrl add adc adc pop jne jne pusha xchg jb js int3 jae pushf mov rorl dec les leave movsb aad add xor inc sbb scas dec dec rcll leave and test insb repz (bad) push mov add mov lret imul sarl jmp or pop sbb or mov das sub loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cwtl xor test jo dec or icebp inc aaa lods cmp jmp in xlat jnp out inc push pop repnz pop lods neg aaa push xchg mov jb in out and rcl rorl scas xchg mov insl cmp inc dec pushf cmc mov cmp mov es pop adc ljmp add mov mov fistp pop push jge cmp sub fnsave test and aad (bad) imul inc jge mov jl cltd (bad) mov sbb xchg inc flds in sti xchg cld inc jne lds (bad) mov test addr16 stc push xor add mov xorb icebp hlt and mov int sub test cmp or cltd hlt pop cmp loope push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fnstcw adc jno movsl push rcrl loopne aaa pop mov pop xchg jmp mov lret lcall lret mov fcmovb sarl imul imul cmc xchg out out xor fadd fsubl mov test call sahf into mov inc cmp iret cwtl mov push jbe (bad) imul adc mov pop pop cmp dec movsb shr xlat or ss repz jmp push aas push enter dec mov or and inc mov push (bad) xor popa cmpsb or xchg (bad) loopne mov pop adc ds jnp mov shll out mov pop adc mov push addl test imul fildll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xor fimull adc ret or imul add jns bound cmpsb mov xchg shr or xchg xorl mov pushf push xor xchg fadds ljmp loop sbb (bad) inc pop (bad) sub sbb cmp mov and in test loopne fwait or mov loop lret sub sbb repz cmovge lds sahf arpl imul pop xchg pop mov arpl push cs ss hlt in cmp jb movsl lods popa repz xchg repnz adcl push jle bound stos push sub out scas mov cltd jl sub repnz lds cmpl jno inc neg rolb js das movsl scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall divl movsl out inc jne popa mov pop pop movsl sub xor ds push add aas sti daa xchg fs in bnd mov jmp imul stos push inc dec cld cmp sub stc popa fs jb add sbb ret std adc ds ljmp xchg out xor frstor pusha js xor cltd or out cltd inc cld sti xchg js lock nop lea sbb xchg (bad) mov xchg xor mov test lret inc outsb jb outsb loopne cmp mov push xchg adc xchg mov push movsb inc clc clc cmp movsl ds hlt fist pop push (bad) fldenv jle xchg inc shll adc sbb cmp push loope xchg (bad) in adc or cmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add shll loopne mov add subl (bad) cmp inc call ss outsl or xchg pop mov jbe insl out fbld mov cmpsb dec call in jne inc sub out sbbl lcall mov xor and lods or jl pop mov stos jae test cwtl mov jle mov fld jmp pop lret mov inc jne popa jg scas or jbe fdivs jmp sub mov adc push insl xchg mov add (bad) mov rorl clc push mov mov popa pop and sahf jl push mov sub pusha and lret mov fld shl fidiv pop lcall lcall xor arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push int aaa jo adc insl je xchg xor mov stos inc jle lods or mov sub mov fldl push push lret inc xchg addr16 (bad) rcr stc test jmp jmp cld mov push divl enter daa push dec iret fcmovnu arpl out je xchg mov cmp scas xor jecxz test bound jp jp jle sahf jl rol jl (bad) out in pop adcb inc cmp jmp stos ss subb inc or fistpl sub cmp addr16 movsl out adc xchg xor dec std lds and push fcomps adc setnp mov out in sub orl push into sti in inc cmp mov into push and fisttpll cmpsb dec fdivr movsb sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli inc scas push and push fnstcw faddl push (bad) sbbl xchg div and sbb movsb mov mov into (bad) xchg xor es aas mov fdivr movsl xchg pop movsb inc subl sub loopne jmp (bad) fbld (bad) xor jb mov sbb lret rcr rcr aas leave add jno or pushf or jl ret xor pop es mov test lret adc loope mov dec push cli push imul and in lahf xchg add adc dec fwait or mov xchg rol popf push and cwtl (bad) mov pop mov (bad) lret mov inc rolb push push out lods cmc push xchg pop das js outsl or addr16 adcl push xchg xchg push jp jnp push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov lea and inc pop push xchg add in mov (bad) pop lds clc mov jo jmp xor js xchg cltd imul ret mov divl mov push jbe lcall push push hlt insb (bad) push aam xor dec pop xor cwtl adc sub xchg decl loopne,pt cli adc loop scas scas pop pop and adc sbb aas pop daa test sub fnstcw mov (bad) xchg xchg pop xor mov (bad) push mov xchg test xchg roll and xchg jo test jno mov mov sbb fnstsw repnz lret sub imul in mov lods jge test arpl cwtl loop pop aam cmpsb jne push lahf xchg inc push sbb call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push in lods loopne pop adc mov ret inc and jno add icebp loope mov pop lea sub xchg int3 cmpsb pushf pop cmpsl add cmp fidivl sarb out rorl jle cld or xchg icebp ret pop ja or xor inc fdivrl fsin cmpsl dec (bad) jae pop xchg push rcl inc (bad) xor push push cmp repz sbb pop shr pop dec ret jns movsb les jne adc mov and xchg xchg (bad) fcmovne adc sbb ret push ret cmp loope mov mov mov lods cmp push dec les in xorl sub mov adc enter pop in movsb sti mov jae fnop lods mov mov pop or movsb push out mov and repnz mov jle std fnsave (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc and lds adc nop or cmpl jne je xlat mov mov stos scas cmp roll push adc xlat stc xchg jmp mov int xor scas add jbe sahf negb sahf or xchg addb loopne test push push es dec (bad) adc lods aas mov cmp lea ss push (bad) jne aaa into inc repz or sub jle dec inc std or lcall mov fsubl fcomp mov mov ret jno daa test sub fnstcw test cbtw pop fldcw fwait adc pop jle cld ficoml loopne push xor mov inc xchg adc add sbb pop cmp dec cmp jno divl or xchg idivb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sahf arpl push push pop andl ret jmp mov sbbl mov pop test xchg stc fcom cld popf rcl dec daa mov jns lcall add mov dec inc (bad) sbb add subb ret sbb mov and pop xor fcmovb add cmpsb dec or int3 stos or loope inc out rcll (bad) sti in jge jle fs cs mov lea movsl jg or jnp mov cs sbb mov sub xor int mov adc cwtl test jecxz cmp in shll pop jb mov js xchg nop in sti and shl pop imul mov push adc rcrl xor push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp and cmpsb jne adc stos clc dec arpl cwtl sbb cld or cmp dec mov stc add imul adc jb mov mov mov test iret cwtl push (bad) mov sub pop lret add adc pop in pop jl jnp push (bad) push xchg inc xchg push jo inc mov push mov mov jg pop int3 mov sti xchg cld inc jne sbb test arpl jmp ja je daa int3 hlt insl mov adc xor or aas pop (bad) mov into push out rcrb xlat dec mov lds in imul pop lds mov lret in mov (bad) jg push mov aas adc lods mov test cmp jae cvttps2pi jp xor fildl and add xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl and lock jbe sbb cld imul pop std test sbb inc cld fnsave and jbe ja mov (bad) jle inc imul test cmp sub push std add ds pop cs mov popf mov mov jne js xlat stc or mov loopne jecxz repnz imul fstps push scas fnstsw icebp decb adc pop mov aaa loope xchg mov in divb lret sbb push ret push aad mov and pop cmpsb inc and pop sub sub mov int3 dec outsb jg pop roll scas mov xchg adc repnz jle in xchg mov repnz jge arpl fstl cmpsb sub popa rcrb cmp (bad) add repnz dec adc sbb push out js mov leave mov leave or xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov pushf adc xor mov dec (bad) stos xchg call pushf arpl aam (bad) fldl (bad) sub into pop dec xchg (bad) imul mov loope push inc lock cltd sub jb ret sbb rcrl divb jo add repz negb fnstsw icebp decb adc pop mov aaa loope xchg mov in divb lret sbb push ret push in dec hlt push adc adc sbb ss clc in lods idivl cli lea jle xor (bad) leave push mov gs xchg out push lds add (bad) fnstcw pop fmulp call test pop stos pop std mov jne popa jg test rclb out adc sub gs mov aas push out inc addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp nop mov pushf xor loope dec cmp mov bound sub adc mov ja jno sahf mov loope pop dec mov inc cmp and bound pushf adc icebp and stos xor test outsl repnz loopne jae adc xor je adc cmc mov imul popf cmpsb cltd int (bad) jns bound jae bswap mov aam cmc adc inc jns fisubl lcall insb sub dec push mov imul pop repnz lret ret imul push imul test and adc xchg je mov mov loopne jecxz cli fist (bad) and (bad) stc sub loopne lcall fs stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrs rorb sti lods stos arpl dec and and fisttp js (bad) aam mov push mov repz dec idivl and bound and scas data16 mov repnz inc xchg in xchg mov or and jns out out roll hlt jo stos pop mov add or xor pop mov mov jno cmp popf push dec xchg sahf negb fnstsw mull jnp je popa cmpsb mov or pop mov fcoms adc and sbb mov inc std gs pusha insl inc push push sbb add and xchg push lahf inc push and adc sbb sbb hlt in inc lods test sti scas or mov stos push mov ficom mov push and jnp push sub mov into sub sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg incl mov js repz push (bad) scas pop jb rcrl ret pop push (bad) sbb pusha (bad) jg (bad) nop dec es stos jne ljmp xchg pushfw lret cmp movsb (bad) push mov mov dec iret sub sub daa sahf or mov mov loop lret xor xor cmp jmp and addl imul pop insb dec leave in stc push push mov ljmp bound cli aad aad gs popf aad sbb out ljmp add or xchg shrl out addr16 testb popf movsb dec pushl push aam lcall cwtl ds pop call (bad) sub repnz (bad) dec pop rorl jbe andl or xchg stc pop mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add cmp in cwtl repz jae call dec nop pop in mov call stc mov and inc jmp and pop (bad) and mov repnz pop movsl jb push sbb cltd aas pop sub mov in inc test mov je scas lret mov sbb or and and je call push cmp mov negl cmp in sbb fcmovb movsb outsb push test pop pushf std inc jge add fdivr cmp jo sbb xor into fs call jns cmpsb lret add sbb das js jae xor mov icebp in and out je xchg mov fcompl daa lea push pop push inc shr inc jp sahf jl fadd mov push add mov and jne xchg lds pop mov daa pop mov xchg inc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl test mov xor mov cltd inc stos mov ds pop lods jne das fisttp (bad) push int3 pop js clc in push cli stos orl mov test sub enter sbb fdiv and cmc xor test out mov std ficom pop imulb xchg add iret in aad jbe std in movsl setne movb mov in pop xchg bound add insb andb shlb cmp aas adc cltd lods dec mov pop mov arpl jb or or dec pop (bad) fisub int3 pop mov lcall scas sub std or mov out xor lret fcomp mov mov xchg fistpll mov stos jae rorl cwtl push div lahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push jg jge and shlb inc je insl xchg unpckhps (bad) push mov scas int xchg sub mov jb cmp sbb ret inc cmp mov out dec dec ret jns and sahf arpl xchg push popf imul push (bad) insl jge mov (bad) jl rcll call lea in xchg push inc popf fimull lds gs xchg in sarb xor xchg dec repz jg call shl pop mov xor rcl and xor adc int ret jb in mov and shll idivb pop movsl jbe sbb dec add call int or adc outsl inc mov sti mov movsb rcrl xorl fsubrl mov cmp xchg mov lret imul sarl jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push or pop sbb (bad) aad pop imul cld lret mov mov add mov mov pop cmp repnz sub mov cmpsl adc popa mov stc push push and lods jne add sti cld movsb push out adc movl add call int3 bound add and adc (bad) out cmp rorl jae jmp xor mov insw jo lret sub dec pop nop cmp mov push dec push loope pop mov imul mov out nop in mov stos stos add sub lret mov mov mov out xchg and fsubrl in and popf nop pusha arpl push sub sbb shufps fiaddl add data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl insb cmp in sub aas stos ss fiaddl fisttp jmp add mov xchg pop in sbb ss cltd mov or div lods mul out dec loope mov pop js ficoml add pop dec mov lds add cwtl pop popf movsb dec cs pushf or xorl lret lret fstpt xor mov cmovp test adc shl mov fnstenv sbb push data16 cmp daa adc lcall sarl push frndint dec or lods dec mov jnp rcrl pusha mov sti lods xchg int3 xor cwtl movb jb cmpsb jno pop lret pop shrl cld imul pop std pop jecxz lods add scas mov xchg ja addr16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push test gs inc ds inc loop jo push movl jl mov adc xor lock into push std and mov xchg sti fadds jge popa out inc out mov and daa xorl xchg lret loop (bad) out pop cmpsb sub cld jo add pop push (bad) mov sbb jb aad cmpl or dec xor cmp rcrb addr16 xor mov cmp jmp stos ss not sub cmc in negb mov xchg pop in rcll mov es pop (bad) jo xchg pop pusha and add xor and lock inc cmpsb pop xchg inc sbb jmp enter mov insl fsubl add dec sbb sahf into scas cwtl xchg leave (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall das call push fidivr pop cs mov mov and mov xchg test lds mov std and into outsb pop cmp inc xchg subb popa sub add and jge sti adc push popf insl jb or adc das lds dec xor stc adc adc xchg jns dec push mov out iret dec outsb ja pop mov xor loope jp jae ja adc mov inc shrl movl mov push iret adc and adc ljmp jg mov es inc data16 fs push jg cld dec xlat jp (bad) xchg mov xchg adc lds sbb cmp subb mov push fcomp cs test dec xchg pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp addr16 les cmpsl (bad) imul movsl mov dec clc push xor addl or xchg sub scas jne gs push not adc inc in mov rorl sbb in rcr sub jmp sti movsb movsb arpl in mov scas pop push sub or aam popf je mov add (bad) and cld std or ds incb cmc popf daa or xchg jl push jns jo mov or ja push aad loop jo adc inc push in jmp mov or pop loope mov and jne mov push dec movsb mov cli xlat fmull mov cmc push leave push mov adc icebp ret jnp insb lock in xor add inc mov mulb xchg (bad) sub xor repnz mov dec mov sbb imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) in stos idivl and mov xor bound test fdiv std mov mov or add inc loop mov cmp mov int3 fsubrp jnp aam mov or sub pop (bad) lds jmp lcall lea fdivrs sub dec push mov (bad) or mov iret mov out sahf arpl mov out xor outsl mov ret (bad) sub sbb cmp rorl push pop movsl psubsw adc jp xchg dec jle movsb cmp lret jecxz cli pop dec (bad) xchg inc popf xor js pop cld cmp aas adc lods mov mov test cli enter mov pop pop les in (bad) mov push (bad) lods aad jo or cmp test shrl cld imul pop std pop jecxz out add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jne scas lret adc and mov jo mov addr16 out bound test pop xor sti xor mov ret cmp divb stos jg movsl (bad) pop leave mov or stc aad aam lds mov xor loop les inc lods dec or insl in mov test cmp jae fist sti lods (bad) int3 xor jae andl (bad) loop (bad) fidivl sub aaa (bad) popa repz or popa iret sbb jecxz mov out scas mov dec cmp or outsl je xchg sub pop add out out shll jae sbb xchg jp aam js sbb cmpsl loope dec jb call movsl inc dec cwtl jae mov push cmp sub jl lds lds and outsb sti sbb dec xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fbstp xchg das sbb pop pop decl xor punpckldq mov xchg rcl hlt imul loop movsl setne imul pop sahf data16 iret test jo testb cmpsl xchg dec adc aad add or mov pop test mull lods pop loope push jle jge and ja and mov enter mov jle mov std or jno add stos into pop scas push popf ja cmp push (bad) cmp arpl nop ret xor push scas int mov and cs xchg pop lods lcall loopne scas inc jmp in in dec movsb sbb mov fdivr lret mov js inc lods dec cmp inc aaa jbe mov (bad) jnp fldcw repz (bad) jmp scas jp xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl outsl push inc arpl gs and negl adc roll push inc jle mov out adc mov sbb cwtl mov cmp push push cmp in dec das mov pop std xlat pop addl mov add icebp cmp cmp mov dec pop cwtl ds xchg push add scas call mov jbe lcall inc mov dec lret mov mov jp xchg cmpb jo lcall fsubrl pop xchg jmp ja jg outsb mov rclb js in sbb push subl or add subb mov cwtl fs mov loop mov loopne xlat mov (bad) icebp sbb jno adc mov mov adc jge sub xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) mov popw inc adc push loope std test out stos mov je notl add jno std or xchg notb jno jae jno pop call gs repz mov dec fiaddl shrl adc mov cmpsl mov das (bad) or fdivs xor test fmul inc mov jmp cmp je adc (bad) xor or and bound scas lods cmp mov pop and enter int3 push xchg cmpsb enter in sbbl push std mov scas xor idivl sub push movsl and xor leave adcl xchg mov push push mov sti sub sub push inc or in mov or mov int3 roll dec dec sti je xor jp dec mov pop stc aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rcll dec mov clc outsl cmpsl mov (bad) mov (bad) in and cmp popa fsubr ljmp mov sbb mov cmpsb (bad) imul movsl psubsw gs sub sbb movsb xchg mov lret xor xor arpl fisub test mov sbb outsb adc lods stos jmp mov pop inc jge jae mov jl sbb mov sbb dec add mov cli or dec xchg js mov and popf je int mov cltd jno mov inc ds jmp mov mov push dec lret jp outsl xchg imul and cmc gs push mov or stc cmpsl sub xchg (bad) notl lcall fsubl mov mov in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov dec pop int and jbe add inc mov add mov test jmp inc in in or inc inc clc cmc mov loope out xor aaa pop ret xor adc inc mov xor sbbl mov jg lret fnstcw out inc inc jmp shll jb sbb adc fs popa add test dec daa aas jns push xchg cs mov addb mov push in and mov das (bad) mov ljmp clc pop push lahf xor sub aas xchg xchg (bad) (bad) out movsb mov outsb push call or cmp loope dec es and lods cmp cmp aad icebp dec data16 pop sti mov (bad) repz cli mov cmp ljmp mov jne daa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov adc fcmovne aam idivb jp jg movsb push out jo imul push mov mov xchg mov test add jbe xor jmp loopne push int ud1 push jmp pop xor sahf mov mov shufps scas outsl imulb cmp xchg enter mov jno adc (bad) out xor sub cmp mov adc pop inc leave (bad) movsl push movsb add jae,pn xlat pop int es jbe inc pop and arpl cmc jecxz xchg xor in jb jle fisttpl lods xchg mov mov sub jle xchg fnsave loopne jae stos adc je (bad) fnstsw mov jp or andl int mov lcall lahf stos jge inc je (bad) xchg bnd mov ret mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp mov ljmp jp mov out sbb lods dec lock jns cli lret add push jae (bad) or sbb jbe pop cmp std mov loop outsb lcall (bad) (bad) mov push fsubp mov aam movsl add push mov aam sub sub sub add xor push jl in xchg push (bad) mov enter dec jl or outsb adc ljmp fisttp and and inc cmpsb loopne push pop xor mov cmpsb xchg sar cs loope lods loopne ja push sbb and repz sti cmp xchg in jl scas jnp xor push insl (bad) mov (bad) test sbb jl xchg imul dec sbb push test (bad) pop lds mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call gs mov push inc sahf mov fcomi sub cmp fcompl mov scas lods xor dec pop adc sti bound mov xor and and stos adcl fstpt int3 add and and mov push xor cltd mov (bad) pop adc xor and bound test (bad) ss mov mov or mov sti enter sub ja lret adc ret xlat cmp mov fwait imul mov mov addr16 pop out xchg push dec mov (bad) bound pop mov add test mov es xchg cmp leave addb test inc sub add nop stc pop mov mov cli mov sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and or push pop jge mov sbb loopne xor stc arpl push cmp cmp jo or sbb cwtl andl lcall das cli inc cmp inc mov daa or test aam lcall push jmp pop xor push rorb out xchg lods icebp hlt and jle movsl test lods inc sbb push xchg mov shlb lahf or sbb js pop jmp dec (bad) mov jbe mov mov mov pop es push jb adc pop and in cmp jb inc adc pop push ljmp rol jb ss push jo sahf stos stc mov mulb mov mov mov push call cmp ljmp xchg lahf adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov cmpsl icebp stc add push add mov je insl xchg unpckhps and jmp (bad) jns es jmp add ss jmp and push or add and dec xor jb xchg adc fucomip push mov ds fsubrl test and ljmp ret jmp bound inc pop js pop xchg dec add xchg dec les lds rolb jb test xchg in lret inc lods out mov insl in scas sbb in roll in (bad) pop int es jbe dec mov lahf faddl dec jmp out lea js jae sahf mov or gs pusha or aad adc je (bad) ffree add mov xchg pop lcall out mov std add loopne mov sbb mov dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jns xlat imul rorb pushf push dec movsb subb stos ss sub out adc lds fnstsw and jecxz mov add lods mov mov sbb lods test or inc dec (bad) lock test imul pop std mov bound lods mov dec push jmp (bad) jns hlt jo mov addr16 stos mov jbe xchg cwtl popa fdivp into (bad) jae jmp jno test pop mov push sahf ds dec xor sub inc xchg bound jl loope fs sbb push cmp shrb fwait imul xchg dec jg lcall fsubrl out cltd xor cmpsl dec repz mov cmp push sub mov fwait add data16 xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc cmpsl mov pop lds mov add jl jge xchg in mov inc int enter mov jnp out xchg outsl xor stc mov int3 xor test (bad) mov push jg or pop stos adcl sahf add pop mov pop popf je fisttpll pop jns jecxz nop jl in dec mov and cld sti mov inc loop imul dec xor adc add add (bad) daa das sub sub add xor aam in sub lock mov mov test (bad) sub cmp mov aaa loope jle movsl mov addr16 cmpsb push out cmpsb stc pop cmpsb fdivp and cmp mov pop dec jg aam in scas pop xchg sub jo fstpt or je fild mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp mov ljmp mov std add nop test push cwtl pop cs cmc dec add or mov dec xchg push mov xor int pop push (bad) pop sarl arpl or int3 rolb and push push xor adc add pop cli sbb or mov dec sub nop mov iret (bad) stc push (bad) sub mov rolb outsl cmp sbb xor test (bad) lea setne roll lds stc mov xor inc cmpsb xor sbb add ja push sti sbb mov mov fdivr mov mov mov (bad) xorl sub (bad) je xchg cmp adc mov repz xor leave std fstpt add out xor aaa pop ret xor mov imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rcrl inc stos out jle mov testb xchg js dec cmpb mov xor je pop dec mov rol mov bnd sub shrb sbb sahf mov sbb cs and adc aad (bad) jb das mov mov add or xchg popf xchg or and leave pop test adc je into test fdiv (bad) and pop ja test or fsubrs pop shrb lahf stos cs iret adc mov (bad) jecxz hlt out inc fdiv test xchg mov out mov xor stos inc andb in out mov add inc pusha xchg cmc orl data16 dec push push jmp cmp push fldenv int3 int3 nop gs mov dec xchg pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) mov in dec test loope in pop call jne out rcrb loope pop dec jg mov mov daa xor push ret sub aaa sahf insl and sbb je enter stos testb mov push sub popa and jmp xor fnsetpm(287 fs (bad) mov mov aas leave sub and adc mov dec mov jl sub push and insb mov xor push pop cs inc jno jne mov cmp jo imul cmp push iret (bad) xor push xor adc jle jnp shrl pusha mov sti fs enter jnp lret add jp ret daa adc scas aam stc fisttpl mov repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec sub cmc idivl and (bad) inc call int into mov movsl dec mov add leave mov jne cmp push repz stos cltd sub xchg jns lahf inc push jnp add ret pop mov add add dec cmp adc cmp ret sbb loope cmp jmp adc add add pushf push mov popa push es fdivrp (bad) xchg pop (bad) push mov or xchg jp movsb xchg shl mov push dec xlat pop scas loop xor xlat add loope mov xor xor cmp inc xchg mov in mov in enter je mov jae int inc and popf mov jle movsl mov das fcmovb mov cmpsb loopne push pop xor mov or gs pop std bound loope push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add scas gs das ja inc ret xor jns jne xorl add jne addr16 das lahf stos mov ret in xchg or xchg movsl inc mov dec pop cmp push ret fistl bound add insb xor test jbe nop push daa pop dec (bad) stos push pop dec cmpsb loopne mov ret mov int xchg pop (bad) rclb arpl push and push jecxz adc (bad) sti push inc insb mov pusha and jns xchg bound cmpsl out das inc loope xchg or nop dec cmp push and aam std mov pop call xchg rcrl fidivr fistl aam pop (bad) test mov (bad) icebp dec xchg or repnz and adc pusha aaa mov js fprem adc (bad) dec mov jae aam cmp xchg cmp jmp test js lcall mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall fsubrl je loop popf outsl mov das push push dec xchg mov cmpsl int pop inc adc outsl sbb and int das add movsb pop shrb cmpsl aam and rol push pop daa pop mov xchg inc xor add xchg sti (bad) jbe pop mov test fmull and mov movsl xchg cmpsb push or cmpsb push cmp pop punpckldq lea lods mov mov push scas (bad) outsb cltd sub and ja leave adc (bad) das scas xor jb mov mov xorl imul or cmpsb push mov (bad) mov or mov mov out insb pop cmp pusha faddl jb in mov cmc (bad) dec push dec loop sub sahf loopne lcall mov or insb fistp movsl push cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp popa or xor sub inc in ds repz ret dec mov shll out mov (bad) fcomps jg xchg test es cmp sti adc out add jp adc icebp mov sbb repnz jae call (bad) addr16 mov out mov stos inc cmp sarb fucompp add cmp add adcb push jg xchg xorl pop inc mov sub arpl aam (bad) fisttpll jp rorl pop xchg xchg add in adc pop sbb je pop addr16 je rcrb lds clc mov (bad) jns lcall pop gs and fcmovne mov xor popa mov mov movsl dec roll movsl pop xor icebp push pop lret scas pop ss mov dec sbb or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor cwtl mov pop sub sahf (bad) in add mov loope fsubl ja data16 inc addr16 push adc (bad) jns mov int jl adc scas pop (bad) (bad) sti lock pop lock dec xchg jb aam or sub push (bad) xchg jmp lret mov js shll addr16 and imull fdivrl push fiaddl in mov insb test push mov and movd outsl gs cmc adc cltd cmp push xchg mov xchg call (bad) or xorl inc jge xor push jno push aaa xor stos outsb out xchg clc cli cltd dec pop lds rclb mov push add loopne mov leave imul inc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov pop adc add add push cmp jge sbb in testl and adc rorb push into ret cmp sbb test jbe roll mov or rol xor fsubl gs pusha test dec and scas cmp or mov dec xor fisubrl push jecxz sbb push and mov inc jmp jne mov fs imul in sub jle movsb out fstl adc insl (bad) pop (bad) frstor pusha rorb icebp jo ljmp mov out lock fstl fnstcw add push popa scas adc inc pop xor dec xlat pop test loopne decb add ret mov cltd add mov cmp sub stos jb (bad) arpl imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xorl jle std sub pushf popa dec mov sub fs adc mov fld shl inc jno sub aad pop cmp mov sbb ret xor (bad) jge in xchg (bad) push lds mov xchg popa addr16 testb inc mov xchg jns js or pop mov mov and xchg jl cmp lock push lock out mov out cld ret xchg sbb jne jmp adc jo stos xchg dec es stos pop push push dec lds lea nop cmpsb xchg or add test xchg dec rorl ds xor dec das add cmpsl or jge ja pop jo idivb sub push cmp push aad add icebp stos jg jnp fistpl int sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call std sub (bad) mulb or gs pop xor lahf mov pop sub repz loopne (bad) out stos iret daa into mov ja aaa popa ret jns jo pop jae aad and pop cmp ss std mov popa cmp sbb js test loop or div add fprem pop cmp movsl pop sahf cmp fimul gs sti movsb inc fcomps subb dec jno push repz outsb movsl daa sub in pop enter mov (bad) cltd mov movsl int3 dec ljmp in cmp pushf nop or dec mov in pop cld or pop or pusha idivb lods out scas lret iret gs gs scas test mov mov push inc jmp lea add insl add cmp mov rclb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call adc (bad) lret inc sub out stos inc jl xchg outsl lea push lods mov jb mov pusha in bound pop stos add xchg or dec movsl movsl iret out push lcall mov xor addr16 xchg out scas pop push inc call ret dec into pop inc gs ds cwtl pop into mov rorb xchg test adc scas pop pushf fidivl sub stc adc decb aas jbe (bad) mov lret andl or push cmp fdivrl and add lea cli mov pop jle jge pop sub xor dec pop (bad) notl cli icebp pushf out xor aaa pop ret xor jbe push rcr sti movsl xorb stos out cwtl jmp stos jno loopne neg adc cmp lods fdivl inc lret pop in cmp test rcl dec daa mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push mov js cli cltd (bad) mov shrb loopne dec in pop dec nop mov inc stc arpl call xchg cwtl popf (bad) pusha and bound out sarl push test or pop and pop pop out into mov je in cmp mov hlt jo mov addr16 inc xor insl je bound mov outsb push inc xor push cs aam pop arpl mov daa cmp jb inc jnp,pt repz cmp sub sub pop fsincos cmp push adc enter sub add sub jl in cltd mov pop (bad) call ljmp fbstp push imul inc out in pop in dec push enter arpl mov cmpb and mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp repz test mov add test cwtl xchg pop mov or xor cs ret js (bad) aam cltd fisttpl mov repz and adc xchg jmp iret ja adc xor inc cmp sbbl fs iret push insl and pop adc neg cli scas mov jno adc push or mov xchg push insl lods xchg in cmp jecxz ja add sub arpl shrb insl in mov inc hlt in roll inc call js push and fildll movsl pushf pusha dec push (bad) mov push int3 pop jle dec in pop (bad) mov mov dec mov adc cmp inc in mov int3 jp jae xor andl inc push add in pop xchg (bad) iret movl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out mov push pop jnp out sahf out and pop bound mov ljmp mov ja and push arpl cmp lds xchg fucompp fld daa insb mov xchg push or mov dec pop jae es pop xacquire jle inc fldcw cmp cltd mov mov (bad) xchg movsl mov cmp std push adc and and and cmpsl sbb fnstsw lret mov test dec xchg pop mov arpl mov xchg les xsha1 cmpsb dec out inc cmpsb loopne push pop xor sahf add call rcl or pushf shlb dec test xor out jl xor cld out mov std ficom outsb je xchg xlat sub loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl leave pushf rcrl jl and imul pop int3 lods in jecxz sahf adc jo add mov dec xchg mov addr16 aas negl lods sbb jg mov push push sti fs enter pushf pusha scas xlat push push ret push sub xor add enter inc repz adc mov push push leave push push push lret ja outsl jno or dec gs push jg jnp outsl int3 push insl and mov mov push aaa add sub dec mov lret aam inc jecxz xchg dec inc test push aam mov or cmp leave mov and inc and add dec push cmp fs dec fcoml js pop adcb mov loop addr16 pushf outsl dec repz mov rolb adc cmp and sbb daa or lock les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp xchg xchg rcrl jo jecxz lcall sub test fs in sub sub loopne popa cmp jbe lcall sar dec bound sbb mov aad mov fld shr fwait aam xorl outsb stos jns pop scas xor fildll stos mov mov add test jno jge jno arpl add adc mov xchg cmp mov mov sbb inc mov fdivrs lcall repz mov test loopne out push dec sub mov jmp inc jbe add faddl sahf jl mov xor test out mov push jl jecxz in lods test arpl adc push jle lret aas loop adc (bad) out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp sarl int3 push insl and fadds fwait insb or mov out inc sub out or mov sbb sbb xlat xlat push jnp or push xor loope jge repnz pop push pop stc aad repz cmp pop lret shlb sub pop pop push in dec sbb push and xchg pop sbb dec rcrl adc or jmp aad jecxz out out or adc test push inc pop pop push lcall das sub mov fidivl cwtl lret xor fucomi out (bad) repz in mov jb sti enter fisttpll inc pop insl fisttpl mov cld stc or movsl mov dec adc bound push mov inc out shrb mov dec fsubs fnstenv clc dec mov les adc mov scas xor je pop clc repnz or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov add mov cs imul in rclb lock fndisi(8087 cmpsl sub xchg xchg rcll gs cmpb sti in xor das call adc pop in add test add dec fsubr jmp xchg sbb mov dec ficoml mov pop jbe xor jno inc daa sarl test sub add mov loopne cli adc or push jmp ficompl cmc std mov jl in popa and pop xchg popa outsl and (bad) cs addl ret mov inc icebp dec out push mov sub in in popf push shr mov adc inc stos inc pop inc mov in inc sub pop fbstp or test mov push insl mov movsl iret call lods out sub pop mov int3 pushf in ja sub int3 dec xchg jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jg add jl push cmp test jmp in fwait or stc cli movsb mov sbb lahf push jb mov std pop clc push dec jne roll mov xchg jnp jmp inc adc xor xlat jle or hlt in cmp (bad) cmc movsl fidiv cmpsl push out les xor jl imul std test push inc mov idivb adc icebp and addr16 sti and jo je inc jbe jmp mov cmp nop or test jne popa mov bound mov hlt jl mulb and in dec adc sub sahf loopne aad lods pop adc mov xchg and inc jmp sbb or (bad) xchg jecxz pop dec loope mov pop js or and stos adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec test pushf adc xor out data16 shrl sahf push jbe jnp sti jae shll mov cwtl mov add popa shlb cmp (bad) add repnz dec adc pop mov mov nop idivb ljmp fwait sarl xchg ret mov dec pop dec fwait les cmp ds hlt fild push (bad) pop and xchg pushfw adc out sbb pop pop push inc rorb insb imul adcl mov cmc (bad) push cltd and stc fnop add pop xchg jbe jno pop xor jg mov push xor adc pusha or in pop mov mov sbb rcll push out sub loopne push pop xor test jle add xor das cli inc fadd xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec push push bound adc scas aam and xor or out add and jo (bad) mov sub jg int mov adc cwtl test or adc pop mov xor xor test and dec pusha dec or repnz aaa adc jle jnp sarl mov sti lods mov xor test mov mov enter dec in pop cwtl adc sbb jmp mov scas mov pop push push lret (bad) mov pop lcall testl add mov data16 push das add (bad) into out pop pop leave dec or xor mov pushf or mov pop jb cmp into aad movsl lret xchg out in xchg push jbe mov add mov fstps (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push and xchg add fwait loop jmp (bad) push repnz push les (bad) mov cmp ficompl gs inc mov xchg mov push jbe jecxz hlt jbe std sub inc das aas pusha aam mov nop push mov mov or sub loopne daa ljmp in std jnp iret add cmpsb mov orl fcompl jmp inc jns dec mov cmpsb jle outsb jns pop adc je (bad) fnstsw std and mov mov or insl push lret mull (bad) adc out cmpsb (bad) imul and sub mov xchg je (bad) divl adc (bad) iret (bad) xchg push insl (bad) and andl mov (bad) jbe dec xchg pop shrl mov push push es pop fbstp fdivs and add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov jbe and lock cwtl les in scas add pusha pop lods test ss mov sub push int or mov xorl jae je xchg cmp faddp sub repz mov in icebp mov pop mov add test push aam mov mov cwtl jae pop mov aam cmc cmp lds jbe push jbe adc hlt into mov mov jbe pop cmp std dec pusha cltd fldenv int3 repnz or jecxz addl test push lea setnp jge stc cli movsb mov das (bad) or fdivs jge xchg scas or push cmp addl and or imul inc jp or (bad) xor fnstenv mov jno pusha and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xlat xchg jmp loope adc cmp mov mov lods data16 scas jg jmp insb cmp and push cmp cmpsl dec je fs dec push out dec jle sahf imul push pop mov lods lock sbb mov dec pop xchg out and push mov or sub xchg imul bound push jp mov jae xor sub sbb (bad) decl pushf fist jge sbb out out mov mov jle mov cli inc stos xor into (bad) leave and dec cltd inc push mov jg push scas adc mov add sti mov inc (bad) out jmp roll loop or adc push out pop mov nop inc xchg daa mov push (bad) ss mov xor dec add xchg aaa insb (bad) dec adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec mov xchg in in sti das call dec and mov in insb jne rclb sbb lods pop push test jb jg and mov (bad) add in jmp or mov pop dec pop outsb mov fwait gs loop mov cmp mov mov test dec repnz push cli and movsl arpl push push in cmp jno xorb imul enter inc ficompl fldcw in stos push lar scas insb aam lods (bad) xor and ror mov fisubr push add adc rolb xchg xchg mov fiaddl imul sbb dec fistpll jb xor cli mov or jo mov sub sbb mov ret sar xchg pop aam sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmp or out push decl es das daa dec pop (bad) negb xor pop or int3 pop fstp mov mov pop ss jbe test out stos mov mov (bad) fdivr cmp jo (bad) hlt lcall push dec inc movsb mov xlat xor int mov roll (bad) adc fwait push ds mov icebp ret pop outsl mov lcall movsb adc inc stos inc sub inc xchg cmp test sub fs test not out cmpsl dec ret jns mov xchg daa push inc mov movsl xchg (bad) xor fcompl jle sbb mov mov in cmp pop jne pop imul jge das cmpsb ficomp imul add dec cmp arpl push mov xchg pop in mov std fcoml (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or push subl push sub xlat or cltd subb mov push (bad) dec push mov sbb pop xchg out int add lret je push mov add and xor mov std mov dec push add imul lret adc pusha jecxz jnp lret cwtl popa lret icebp pop aas inc cmpsb xchg daa gs jl into lds imul adcl push mov (bad) test scas push ss loope inc sub pop or bound fisub in div inc pop or mov loope jno inc pop mov sbb and mull fmuls fwait jo pop sbb int3 inc ljmp add pop pop dec mov sub rcl pop (bad) (bad) mov xchg rolb push inc loope fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl incl push ss sub pop adc fs test mov mov div mov cmc out in pop clc cmp cmpsl ds cld fs mov cmpl mov jae enter imul repnz decb aad daa cmpsl aam js cmp cmp shrb mov ret not hlt pop (bad) adc fwait mov pop subb mov jno jbe pop mov negb jp inc jbe cltd push mov push mov call xor and cli stos orl rcrl sbb leave stos in (bad) and int push cltd icebp sub pop add test es fldt mov repz imul notb movsl jb movlhps mov popa ja jae ret sbb outsb aam gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec pop cli int inc xchg sahf negb mov xchg pop in (bad) lea sub mov insb je pop int3 push push push subl cli pushf jl bound jl in mov sahf lea test cs add enter push inc out xor xor into enter nop jecxz push andl lds lret call or fisubr fnsave cmp sub adc pop adc jns mov (bad) aas loopne cmp and sbb xchg ret sub lret je test or ds xchg xchg dec es ss push fucomip xor (bad) icebp pusha fisttp lcall inc jmp bswap jl adc mov mov pop sub ja pop add xchg stc pop aad movsb rcl lahf push (bad) aad push lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insb xchg xor dec (bad) and xor inc xor inc mov lods (bad) mov push (bad) lods push inc pop mov int3 pop sbb mov in push add addr16 add xchg xor (bad) inc mov repnz jecxz jae xlat es ret pop call push test daa sti sbb xchg lock (bad) cmp sahf or bound inc je in push mov pusha addl daa pop jne cmp mov mov repnz dec inc out int sub shrb je fsub cmp sub jbe das cmp dec icebp (bad) and imul pop shlb mov or mov repz test into ljmp cmp arpl xchg in push jg aam xlat mov add iret cwtl push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add dec aam imul xor out inc test push aam mov enter dec cwtl jae psraw les insl jecxz sti in jbe jmp hlt adc jns jnp les dec and jnp mov int cli les imul xchg dec ja add ljmp dec pop stos push test popa and push mov iret cmp ja push lods mov and enter pop sub lods pop adc mov fldt sti lea mov bound mov xor fnsetpm(287 sub jbe sub mov dec outsb stos out inc enter and bound xor fdiv std jg hlt lcall stos jae cmp pop add push inc roll jne dec ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc sbb pop (bad) jp pop in mov xchg in xorl std and xor jb cmp and loop aas sti and loopne imul jae loopne mov pop inc jbe dec adcl lods cmpsb in mov mov jb sbb pop aaa mov pop sub repz cwtl test mov push mov add jb in shrb sahf mov mov cs push cwtl pop cs ret jno into outsl push out into out cmp mov loopne mov jns sub dec fild jb xchg mov mov mov lods in lret mov add fdiv xlat inc dec adc sbbl pop rcrb or sti push ja sub les mov fwait nop or xchg cmpsb jb dec push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc push mov mov lcall fisubl adc inc les repnz pop in int3 pop fnstenv fist popf call mov cwtl icebp (bad) adc popa int and (bad) inc push sbb loopne sbb xchg cmc mov cld (bad) icebp jb jp adc ror jb inc ljmp cld mov or fucomip lcall sbb and jno jge das or dec (bad) data16 adc cli int fisubrl adc addl in adc sub icebp inc sti adc sahf mov xor add cmpsb ss pop push insl scas mov xor cwtl add call mov push (bad) sub int sbbb repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jg stos inc test adc sarb ljmp jno pop mov dec adc inc xchg lahf imul jle scas js add and mov sub xlat cmp adc cmc mov mov sub les mov push cs faddl sbb jle cmpsl int mov push mov ret cmp divb sarl movsl (bad) fwait sub cmp or and mov and inc fcomps insb js mov aas adc xchg fs loope mull scas xor aaa loope mov in negb cmp cwtl imul dec call dec add outsl mov addr16 int fsubl pusha xchg push (bad) jg add test and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov sbb inc mov stos adc iret dec xor adc fs and jne mov jns into aam pushf mov bound xor lret cmp adc xchg in mov mov arpl imul jae rcll lcall jge mov jb into xor sub leave into cmp sbb and or push (bad) hlt jmp rcl lret pusha sbb push (bad) mov imul pushf xor out scas fmulp push push mov stos adc daa out push and jnp popf (bad) negb adc test bnd mov adc xor repnz fwait shl xchg ret cwtl xor stos test xchg hlt and jg jns movsb les loop in add (bad) (bad) (bad) xchg sub dec xchg jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg addr16 aad in fisubl js dec push into test sbb xlat stc arpl outsb aam jb sub mov mov in shlb pop frstor dec cmpsl test xchg mov int3 adc das push lods pop xor push sub or xchg or sub cwtl mov pop sub daa inc jmp enter mov mov jp fstpl sbb lcall and mov mov xor or ds or pop sbb dec das add jge dec add dec fldcw imul jmp push dec int3 enter pop in mov and mov nop push ja pop mov push mov (bad) cld imul cmpsb lea or scas ror mov fld shr xchg popa out xchg js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add jbe xor lds rcl lret pusha mov movsb mov in jl aaa insb outsl lret xor sub add mov inc mov inc ret jno sbb (bad) out je pop pop cs pop mov mov mov xchg stos outsl inc lea push lods mov jb mov loop adc test jmp xchg popa lea movsl (bad) (bad) out xchg push xorl cs dec mov (bad) (bad) imul scas bnd test (bad) mov and cmp scas pop divb xlat jg movsl lock clc push add cmpsb xchg pop aam clc das sub outsb sbb gs (bad) cmp dec mov mov jne inc aaa into mov and jae xchg and inc jmp or push and scas jmp lods (bad) jo push out mov enter aaa adc sub cld imul add stos (bad) sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb stos (bad) fmuls out jl push xlat hlt lcall cltd mov call push mov cld lret arpl adc dec ficompl rcr mov psubsw push add adc negl pop (bad) dec leave lahf jbe jo loop push jp insl (bad) aaa in mov ret rorl sbb jae loopne xor push jbe add push bound ja adc pop mov scas (bad) cwtl fdivs test sub add mov sbb push sub dec adc clc mov hlt jo mov or pop add inc loop (bad) dec xor aam lea push mov sbb aad in out push mov sub add mov xor (bad) mov test mov cld push or (bad) test mov and movsl movsl iret call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp add xor ja sbb fsub jl aas test jl movsl xchg fnsave pop in xchg dec push das pop loop cmpsb xlat stc mov pusha pop das cmp loope ja xor and (bad) call jmp pop aaa sahf mov or loope pop int and es outsb (bad) gs mov push imul cmpsb insl sub xchg fldcw lcall inc pop out push lret aaa fcomp mov in mov xor test mov xchg popa xor sbb cli cmpsb lods (bad) imul cwtl mov inc dec imul inc dec cmp xchg sbb hlt jbe sti mov pop cmp mov loop inc shrb (bad) sub rclb mull and cltd sbbl movsl int3 jae and sahf jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) lcall arpl push mov mov adc pop test push push pop mov mov jle fstpl sbb lcall adc dec mov pop inc push mov dec push imulb dec pop (bad) aaa xchg or loop sahf mov jbe lods add add mov push mov addl jl cwtl adc sahf push (bad) add add repnz push insl mov sbb in inc push sarl push mov lea mov jp or js sub js or (bad) xchg pop sbb ja pop (bad) (bad) stos aad in sbb mov pop subb pop dec loop add addr16 push mov negb loopne push (bad) jmp arpl jb xlat and lahf fsubrl cmpsb dec pop shlb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lea or inc jle mov iret dec outsb nop arpl mov or (bad) fcomp dec cwtl jl push shrl jl ljmp pushf inc dec std mov popa fdivrl mov cmp addr16 mov es into mov lret sbb xor sub pusha pop outsl pop mov xor sub cmpsl nop in sub imul jae pop inc push test add and push ret dec adc neg dec lahf adc xchg xor cltd dec cmp dec add mov add or ret test out mov std fdivp cmp sti xor jns xlat ret mov inc icebp dec out push mov mov mov clc popl out fcoms icebp out cmc xchg lahf add aas fsubrs xchg js cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov loope cmp jmp mov jle popf mov and cmp add pusha in mov sub fcomi sbb lcall imul movsl test add ret and jne ret mov adc negl shll mov and mov ja call mov dec (bad) xchg fmull xchg fwait aaa loope adc xor lods aad mov aam dec mov xor push sub xchg fsubl inc fadds adc int popf sahf stos mov cmp arpl push push stos (bad) push scas int mov lahf stos adc mov nop pop jo enter jmp insb xchg stc clc sbb rcl ss idivl aaa dec inc adc enter into mov jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp jae adcl gs and mov push (bad) jns (bad) out mov inc and loope lret sbb ds xor outsl insb sub icebp jo (bad) push mov mov insl add lcall out jmp and jno sbb pop cmp imul mov sarb mov adc stos inc (bad) push xchg xor std gs adc cmp adc jbe ret sbb insb dec jnp dec pop cmpsl movntq cmp lahf jmp pop nop cmpsb mov adc pop cmpsb or sub dec xor cmp daa pop cs and lock pop lds clc mov (bad) xchg inc popf xor jbe push xchg sahf int3 cmp push jb pop pop rcl xchg jnp aaa ret pop push add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl push sar jo adc and lods rcrl push out adc js fnsetpm(287 lret dec xchg push cmpsl iret cs iret dec outsb ja mov pop add scas xor outsl jns mov mov and xorl stos mov call out ja cs add or sbb adc test lret jnp xchg pop mov das adc and push adc repz cwtl mov and sti and loopne mov pop cs nop mov dec dec dec lret sti lods mov mov lret mov pop dec adc sti fcoml pushf adc jg sahf pop sub cmc pop pop inc sub fwait mov xor aaa pop ret xor jns int ret xchg push add mov inc (bad) push push push add je sub mov lcall mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc add jae sub clc lcall in ret dec add bound ror test das adc lds add ljmp mov lock (bad) outsl insl inc in cmp push mov xchg pop fs or inc rcrb test sti sbb scas cmpsl sub fmulp ja mov dec ss rorl xchg dec mov bound pop mov jnp sub loopne daa mov and fbld stc cs xor fnsetpm(287 pop bound sbb pop inc jle pusha inc jo ficom into mov stos int repz and or inc inc ljmp iretw cwtl push push pop mov or dec xor adc test dec push into mov mov das (bad) push rcr ja mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and sub add addl sbb in rcr enter cmp lock push movsl mov inc sub adc fild lds or xor sub imul or push add out loope add mov or shrl call push scas lret pop call fidivl out mov mov insb and sub fisttpl adc in (bad) fwait cmp shrl subb adc aaa mov adc push inc cmp sti clc cmp cmpsl ds sub int mov pushf dec (bad) lret fbld xor int3 mov leave outsl mov sbb enter outsl insl mov cmp int leave sti and nop pop jbe enter jmp outsb xchg stc or xor xor jg mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl popa push inc aaa into or (bad) sub dec icebp push aas or mov or mov lods idivb jp dec jmp loopne movsb or je dec lock in pop jbe dec aas leave sub test xchg add mov push lret dec push arpl or fisubl in xorl fucomi add push mov inc sub add sbb and arpl test sbbb mov cwtl adc je mov outsl loopne aas push fild mov xchg push je loopne mov outsl jbe fincstp sub and (bad) mov push popf stc jno sahf or aaa adc sub gs sub mov push nop add pop scas scas mov xchg ja cmpsl loope (bad) or xorl inc jge jae cmc mov in push mov outsb dec jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp fdivrp arpl cmp lret int mov xor push incl add notb mov aas or into lods ret cmp xchg pop jae loopne pop lods aas fwait das paddb mov add sbb cmp xor jecxz mov push or cmpsl add xlat or loop sbb mov (bad) stc pop mov dec sub pusha cwtl adc je mov pop loope aas push fild mov xchg push fs loopne mov outsb jbe fincstp sub and fildll (bad) popf stc jno sahf cmp aaa adc sub fs sub mov push xchg add pop scas scas mov xchg ja cmpsl mov (bad) or xorl inc jge jae in pop call push mov outsb dec jle add cmp dec jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sbb imul rcl dec daa xchg daa pop mov xchg inc xor add dec cmpl xor jnp dec lods dec sub xor stc mov lods jne das add jne sbb and lock cwtl data16 inc repz jmp mov bound into push (bad) frstor pop std and ret fwait in jl (bad) push stos inc test out (bad) test ss xor or lock jge cmpsl int ja xchg out mov or cs sub fwait sub push js cld dec xlat jp movsb in adc push push (bad) data16 cli push inc jbe pop dec in sbb push or mov mov gs (bad) push mov addb dec or stos cmp test in mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl ret negl adc mov (bad) xchg inc xor jb cmp and and loopne imul jae fist push sbb int3 fisttp les and dec fs mov imul adc aam ds sub repz pop test and bound xor fdiv std jg cmc lcall stos jae and fwait pop or mov daa shrb xchg (bad) jne rorl stos sahf mov mov lods cmp je ret das (bad) or fdivs mov and in dec adc aas sti enter pop in rorl popa ljmp int3 fbld push dec and cwtl cltd (bad) pusha and mov ds sub add inc dec stos add xchg out shll out mov (bad) fcomps jg arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in jl jb inc ljmp add clc gs daa lret data16 xlat mov push push shlb dec mov daa cmp out lea jo cmp (bad) addr16 movsb out mov stos inc cmp test fucompp add mov xchg mov push sti in xorl pop inc mov jmp bound bound mov aam les ret cmp mov gs hlt les cmpsl sub xchg xchg roll popa mov (bad) jns lcall clc push dec loop add jbe insl sub sbb mov and stc mov dec repz lods jnp pop scas cmp push daa js (bad) aam jns in pop (bad) mov mov xorl das cli pushf fcomps push push and adc mov mov addr16 jae mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cwtl mov push and roll test xchg (bad) mov mov and jne popa inc push cmpsl ret sbb outsb adc iretw (bad) xchg scas or fidivr aad add and pop outsb dec nop mov push leave mov push push std cs jnp push jbe dec lret cmp adc xchg lret pop and call cmp cmp das lcall mov xor insl jp mov mov insb mov mov lcall lahf stos lret arpl jge in dec movsl cmpsb mov je dec dec ret mov daa insl xor jl jle test mov jge lea push into push push out cmp nop cmp jmp sti xchg rolb fucomip push mov adc xor in addr16 pop or pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sbb das frstpm(287 fiaddl mov lds cmp mov ret sbb push xor push dec sbb dec loop les adc mov push loope sub jmp mov mov jnp pop lods cmp mov mov test dec rol mov mov or xchg nop pop out xor data16 inc inc jnp in and pop xchg jmp mov std ficom push push movb imul jbe movsl push jmp push adc imul rcl xchg mov mov cwtl xor cwtl movsl aas sti enter adc push iret adc push sub inc out pop stos movsl int3 jo sub pushf fsubrl out out push movsl lods mov mov push scas (bad) jb sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg add xor stos or mov xorl imul sti cmp sbb and sbb mov adc aam jmp andl insb ret jns cs cwtl jae iret xor mov aad jno scas inc cmp jge test add cmpb jp dec push out xlat xchg xorl stos xor lahf jmp nop nop dec sbb nop aas rolb mov es mov cmpl sbb mov jne popa xchg push cmpsl ret sbb mov and xor in inc rcrl iret lods mov cmp lock add stc repnz push aaa jle cmp pop out lea sub cld or mov sbb idivl add xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmc push xchg mov and loopne jns mov sbb stos push lock cwtl cmp xor push mov cmp frstor loope inc notb imul lds clc mov jo out xchg cli mov inc mov icebp lcall xchg in xor push mov xchg add and fsubrs mov jno pop aam cwtl data16 inc repz jmp test push jle bound xor cmpsl adc sbb lcall push add inc loop jo adc test and int3 mov push pop inc cmp pop ljmp (bad) push dec xchg or mov leave or mov dec mov pop push int xchg cmc sbb add mov cmp pushf cwtl scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp pop and daa int3 aam incb (bad) fisttpll jns les cmpsb (bad) imul outsb inc push inc and addr16 sbb movsb cmpl lret mov mov inc inc adc addl addr16 insb pop idivb pop loopne int es jbe xlat mov jne pusha xchg xchg adc xchg jns fwait add mov dec mov scas mov outsb mov bound loop mov cltd mov gs jl jg xor cs jno movl cs pmulhw inc adc mov outsl push inc and test push pusha pushf xchg (bad) xor xor xor pop fimul aas adc lods mov movsl mov xchg stc and out xchg std pop xor and push ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop out inc or xor sub mov in imul dec dec inc jbe ds xor scas mov gs repz cmp stos mov stos int loopne push inc adc out das fcmovbe into xlat adc xor adc mov and inc test cwtl push (bad) inc imul cmc inc mov out fsub ret lahf negl repz scas jbe push mov xchg mov dec out out and pushf in mov xchg sbb xlat and cmp inc (bad) xor pmulhw xor mov adc sub sbb sub pop add insb ss mov rolb pop push aas push mov sbb movsb pop xor mov xchg and inc jmp or cmp dec push mov cmp lea lods popa movsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmpl or cmp jmp outsb cli xchg xchg bound xor fdiv std jg lock stos jae xor sub mov cmpsl pop in inc jbe or test mov clc push sbb push push push or xor xor and mov mov mov fistpll mov inc xchg push rcrb push test loope imull and (bad) mov stc jno repz clc enter mov dec les ss aad adc ja stos mov and adc mov mov addr16 cmpsl add iret iret cwtl imul cs inc push pushf (bad) jae icebp or sbb sub stc xorl mov inc sub je jb test std sbb xor cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fs cmp cmp push les loope xorl pop inc mov jmp popa nop dec sbb jp cmpsl int pop xor dec xchg test movsl leave loopne jmp (bad) movsb mov sub mov add jmp xor dec xchg xchg or mov add xchg mov pop loopne push aas js mov or les lods idivb jp push push sub aam rcr int3 xchg mov rorl loope (bad) dec mov adc cmp and lret fcomps mov cwtl ja jnp es xchg mov adc push das mov imul mov nop or inc push inc and mov mov arpl lcall insb push ljmp and rcll enter pop in rcrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jae or ljmp mov dec cmp dec and in cmp int3 pop lahf jns jmp pop aaa push xchg popa repz push loopne add jg test mov pop popf ja cmpsl xor jecxz pop xorl dec and inc push sub repnz rcrb outsl int popa inc mov pop mov das pop mov int pop (bad) xchg into push inc (bad) scas js (bad) out (bad) mov xchg sub adc adc cmpsl xchg jmp enter hlt fistpll in icebp paddsw xchg std in ret test scas sbb jle jp jbe xor test test in mov mov and jne mov push dec movsb subb test lcall mov in mov inc lret dec aaa sahf mov nop in rcr pop or jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out iret repz xchg mov fnsave testl pop sub xchg call pop jecxz rcr mov pop bound cmp fdiv cwtl ds or inc adc or push add std add cli scas loop xchg in insb pop jo dec shr (bad) (bad) push movsb adc jl (bad) negl cmp cltd ja hlt jl in and rol mov add lret or pop sub pop loopne sbb mov fbld adc and mov loopne movsb or je cmp enter rorb aaa mov adc stos icebp and outsb leave and rol or pop mov jae and pop or mov jb outsl xor jp int3 data16 imul dec dec decl ds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl daa cwtl fdivrl fsin cmpsl mov lea mov aad jno mov cmp pop cmp jmp rol repnz push imul movsl shl dec push iret cltd fnstcw out add inc nop xchg mov dec dec js in je test sbb add or imul mov lahf (bad) jb xchg cmp lret cmp sub sub push popa pop and xchg dec mov pop negb or mov jae popa ljmp aam ror adc or sbb inc jle add mov jl lds mov mov sub and shlb leave xchg push jmp pop xor enter mov ret add xchg xchg pop sub or nop mov (bad) jmp cmp je fdiv mov loope jecxz mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov mov nop test stos mov jnp shrl add cmp xchg mov jb sbb leave mov ja inc out adc sub cld imul lcall out mov lea (bad) jns arpl pop ret in or mov dec std mov cld pop out inc lret ja sub xor pop inc pusha clc jl dec pop ret cwtl mov loope push dec inc xchg push jo inc mov cmp mov stos lock in (bad) or cmpb or pop push rcll xor popf jmp insb xchg outsb jo adcb lds rcl adc lock mov pop (bad) mov push in (bad) hlt divl leave mov inc push mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp call sbb sbb in shl mov sub mov dec and push sub or aam ror push insl (bad) rorb mov in adc (bad) or jecxz fcompl fwait jl add inc and jnp outsl int3 push insl and add repz add sbb int loope push dec pop cld (bad) push mov push mov rcl mov fsubs inc xor cmp mov pop pushf insl in scas or jae test mov insl mov lret pop pop and loopne mov insl cmp stos test inc pusha sbb xchg addl daa mov inc mov imulb das pusha cmp push (bad) jg add insl movsb mov cs or dec push bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) dec ret fwait ljmp jne pop cmpsl inc push push or sti (bad) adc mov fwait shrl fpatan xor (bad) jbe push mov xchg mov inc xor inc sahf leave mov cmc lahf ss or aad sahf dec into xchg in imul in mov insl lock imul mov cld push bound xor cli push out cmp sub cmp fsubrl inc out enter mov jg cmp push pop js (bad) aam in fisttpl call stos mov mov pop test fldl out xor and xor lcall std push test movsb add hlt mov sbb hlt and movsl sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) fidivr test adc lcall pop pop inc lods cli cld cmp into or in adc mov xchg cltd mov pop ret enter lahf test cmp out lea js call adc inc jns xchg mov test adc pop bound and repz mov jl aaa or mov mov mov cmp add cmpsl dec aam dec push pop cmpsb mov je dec pop pop lods dec or or dec sti movsb jmp ljmp aaa sub ret sub imul inc das test xor jne,pn mov pushf int clc dec cmp out (bad) ds popa (bad) dec fwait push push xchg test mov sbb inc sub addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl inc stos cltd ja hlt jl xor cli mov aas les push mov jae sbb pop mov jbe das cmp dec dec lds and aam or ja jns and mov mov aas leave hlt test dec pop (bad) jo scas scas pop pop adc lret (bad) or jge cwtl aam aaa mov pushf xor neg cli sub sbb cltd sub outsl imulb cmp mov aam comiss daa xchg cli pop in mov pop cmp loope loop sbb jbe mov pop imul jae pushf dec enter mov xchg add inc mov push jl movl mov cld imul pop std test ss inc cld fnsave inc test daa loopne (bad) mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli push cwtl jnp push sub jmp sbb daa or (bad) or mov in sbb jb unpckhps test cmp mov pop jb sub push fsincos gs pop push insb adc (bad) xchg (bad) les jg push out xchg xorl and lahf in nop aas in repz adc xor sbb outsl movsl mov sbb mov xor popa mov pop cmpsl ret loope aad lret cli xlat rcrb in inc rcrl iret lods mov jb jnp add cltd dec xchg in or movsl es ss hlt in cmp mov in es stos subl imul outsb ja movsl lods or mov adc icebp and subl xlat lret popf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp std mov pop push inc xchg outsl or dec ficompl rcr mov cmovbe xchg mov in lret jmp cmp mov jns dec pop pop sub frstor into out mov jmp stos rcrl xor lods jnp sarl insb (bad) lcall lret mov fadd shl loope ja mov out stos push push add scas fstpl daa mov mov jo inc or pop jae mov lret pop call push movsl stc xlat push sub jge inc icebp dec lahf or inc cmp adc test xchg add std push nop jno adc (bad) xor push popl fwait out adc das sti (bad) repnz mov sbb and idivl inc xor jle xchg data16 cmp pop or sub push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall fnstenv mov stos xchg jno pop lock lods xchg gs cmp mov or mov leave pop out xor into stos sbb push mov mov push aas in test pop pop insl aas imul nop mov add adc jl jp popa pop inc out sub lods xchg and cmove cmpsb movsl cwtl pop test aaa (bad) push repz or mov cmp notl sub out scas mov and push cmpsb ja push push inc bound scas mov inc addr16 push roll cmp idivb nop or lahf inc pop movsl leave adc das fld jge dec (bad) lret adc inc lods ss sbb dec or hlt inc aaa daa cmp in pop or mov div pushf mov push into fbld push (bad) std mov mov call fnsetpm(287 add push stos adcl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xlat xor xchg push lret fcomps js pop call or aaa add lods mov daa ret xchg int3 xlat mov adc fsubrp xor pop mov sub mov imul sbb adc mov inc xchg sbb pop fwait jmp lods jg sarl lret loop data16 sub xor inc dec pusha jmp adcb aas rolb mov (bad) jge mov addl aad in mov mov and jne popa xchg cmpsl ret sbb outsb adc addr16 (bad) xchg scas or fidivr dec loop aad add mov aam mov push push sahf iret das int3 fbstp jmp xor inc punpcklwd jb sbb das sbb out in adc sbbl jbe xor push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sbb fstps push inc scas test ret jg mov scas pop push fnstcw test push cwtl pop incb nop loope bound inc jne fsubl loopne push sub mov sbb es ss add inc aaa xchg adcl pop test dec popa mov push sti movsb xchg mov jne pusha xchg add dec dec test cwtl add psllq add jecxz mov mov xor adc icebp repz (bad) and mov jae (bad) sbb das mov mov mov ret jno sbb cmp dec inc test addr16 mov push jo inc add (bad) mov inc ret cmp xchg pop push insb popa pop clc rclb ret xchg in and cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc andl inc adc sbb inc int inc aas push pop adc push into sbb xorl iret mov and bound clc push es sbb sbb sub xor daa pop mov and cmp add dec inc cmp insl sub sbb mov mov xor movsb xchg mov lahf jae inc inc lret and fisttpl in xchg mov rorl loope decl (bad) xchg add add scas mov (bad) push add call scas mov std in adc dec sarb dec clc subl sub mov xchg adc xor inc scas imul roll daa test mov movsw push rcll jae ja inc sti adc sahf fs and imul cld aad test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push popf stc lods test adc jns dec push mov test push push leave stos mull loop punpckldq xor fdiv std mov xchg mov int pop inc ljmp std xlat sbb push mov xor dec shll push (bad) out add dec mov daa cmp pop xchg xor icebp out repz mov mov stc stos sub pop fnstenv std add push clc mov andl dec push popf imul sbb arpl cmpsb repnz jmp imul je jl xchg stos outsl mov pop lock xchg je fmull adc mov data16 mov add pop sub popa pop icebp or cmp xchg loopne mov jle sti lods stos fldt push or scas xlat pop push ret mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jp inc pop divb jle daa xchg icebp pop jecxz int mov js popf movsb dec cs jl push (bad) hlt lcall sub dec cmp jno push inc lods push mov dec xor insb neg inc movsl inc call push mov ret div cmp xchg cltd hlt pop cmp cmp xchg mov sti xchg or jmp enter shrl mov test cltd pusha sub cmp lcall push ret pop movsl mov out pop aaa adc add mov sbb leave bound mov mov outsb (bad) hlt lcall es xchg popa arpl repz adc roll repz mov cmp mov cmpsl mov stos jns bound lods mov xchg lock push ret (bad) cwtl inc cmp icebp sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov mov mov cli jle lods test jne adc mov jge mov pop negb inc cmp aas dec or into (bad) fcom jecxz fs loope push mov mulb pop xor mov das sub out ja iret add mov or jnp push aas in fcomps cmp and cld mov push movsl mov push bound cltd lds xor dec sbb repnz repz in imul sub add inc mov (bad) fadds ljmp xor insb fistp scas (bad) insl mov cmp cs (bad) mov hlt and js movsl lock orl aad jecxz jbe jge stos mov jns xor dec loop sub mov sub (bad) dec or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl in out repnz mov stos xchg std or pusha xchg push popf aad cmp test (bad) mov xor dec cmpsl iret notl adc push (bad) (bad) stos daa mov jp or andl adc stc fucomip add push mov out into xlat sub out (bad) es pop sbb sub popa jno jp sbbb ds mov sbb cmp stc dec push lea int3 jne push test fmull pop dec rorl cmpsl mov xchg daa mov out xchg std in jecxz addr16 dec mov jp or loop cs cld aad cmp jb mov cs jmp cmp or lds mov hlt jl ss and xchg sahf negb push pop mov (bad) adc roll in out dec ret mov stc es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fisttp (bad) fs lods fs insb (bad) lcall addr16 add add mov cmc pop test push pop mov xor xor insb (bad) out (bad) int mov push out pop call sbb cwtl mov imul es ss lock js pop mov push cmp sbb daa pop mov xchg inc xor add aas adc lods mov add xchg push mov inc add inc mov and or mov aam fcmovu in mov fld (bad) xor rcll mov bound movsl lods mov mov lods inc jb in shrb sarb jp sbb sti in add hlt fdivrl push push push add pop xchg movsl jno lea repz mov adc das gs into (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns es mov add leave or loope ret push out scas cmc in imul cwtl clc shrb insl mov mov and pop push mov mov ret pop xor jp or js sub adc xchg pop sbb ja pop mov or pop pop sbb gs push aas icebp (bad) lods cli inc mov push aas in aam loopne insl aas cmp out cmp fildll and mov scas adc lods cmpsb lahf cmc or fs sbb mov mov pop aaa pusha dec ds sub add ss into dec outsb mov add scas data16 xlat pusha addr16 fnstsw inc imul and dec and mov dec lret outsb je xchg xlat xchg (bad) dec push rorl jg dec mov addr16 pop mov xor pop das xorl add call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov and sti and loopne mov pop cs nop mov adc inc mov lods (bad) or xchg jb popa adc fs fnsave cmpb lcall cmpsl jp adc jns fistpl cld sub mov test xorl or (bad) adc cmp push dec or ret daa lds cmp inc pop aaa sub enter and bound (bad) mov cmc xchg addl push mov roll cmp in push jmp ja insb bound dec mov push lcall dec pusha in add jp aam (bad) fcomi adc (bad) mov jg inc cmp jo call rcrl adc rcl and ja stos cwtl divl data16 lods out repz addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp subb loopne mov jnp cltd hlt sub fsubr jmp sub sbb movsl lcall (bad) cmp repnz pop jle jb and stos adcl test adc lcall movsb xor mov in xor xchg (bad) push lds xchg (bad) in jmp movsb (bad) test stos inc incb adc xchg pop sbb (bad) mov cmpsl ret jecxz pop xchg push rolb pop jne cmp inc xchg inc movsb and cmc cmc out sti enter dec and (bad) sub and sbb ja fistp pop lods or ret aas insl gs mov and insl dec sahf ljmp cld xchg test ja movsl lods negl push push mov lea shrb mov xor pop stos incb je pop or dec pop inc push movsl std js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp aad iret adc sub (bad) out bound mov dec jg (bad) push xchg jge adc incl and sbb cmp cld dec push add ljmp ds sub xchg pop sbb push push xor clc loope nop cmp outsb lcall addr16 sbb pop stos xchg cmp in outsl sbb and cmc stos or (bad) pop ret sbb mov jbe xor test and scas mov sbb rcll dec or lods mov xchg roll dec pop int es jbe imul cmpsb out cmp ret ja lea int nop clc negb or jne dec jo lret mov stos mov lret pop js data16 jo fs lea int pop popf mov mov iret iret cwtl sar stos fisubr in inc int and mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or stc mov or cmp insl pop inc xor push xchg addl and or pusha inc push mov pop stos call arpl jg inc cmpsl lahf and and loop enter mov nop pop in pmaxub cli or out xor cmp jo icebp dec fstps addr16 test xor sbb into cwtl and outsb xor mov mov icebp jns xchg icebp cmpsl addr16 cmp mov inc xchg xor pop jb or mov mov aad jmp mov (bad) mov es lahf lret mov test (bad) mov xchg data16 sub fisttp into xor ret jb rorb or or inc fcoml sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp outsb nop roll fnstenv sti xor fwait mov test add repnz ja jae,pt in lahf xchg jnp pop loopne jmp cli adc xchg mov lods mulb push ret inc out inc outsl xchg das sub and xlat stos adc sbb mov fnstenv xchg cmpsl adc dec and ret lds ljmp mov negl (bad) sub addr16 or in push add sbb jge in xchg mov xor insb cmp inc in negb inc jbe mov jns dec jmp in push cmp mov ret inc fstpl lods dec push test pop pop jb mov ds or insl add repz jns outsl cli adc inc bound and fdiv jno fistpll in add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fidiv jmp mov lcall jnp scas dec or mov push push (bad) out out sahf (bad) and jge dec push bound int add jns (bad) inc mov xchg adc test push mov (bad) ficom add stc jg rolb imul jbe pop cmp (bad) stc push in cmp loop sbb add jp pop or into les sub in aad dec sbb push lods imul xchg lret mov pusha es (bad) (bad) and loop aas insb mov or sub pushf and out pop int es jbe pop out fisttp les and mov push daa js (bad) aam popf fisttpl hlt xchg mov add inc add and cmp leave xchg push push fnsave aam (bad) out cmp fsubrl and adc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call std add ret xchg xchg cmp sub or pop jp mov xchg jl xor sbb (bad) int xchg mov js cli fnstcw inc aam mov in rorl adc mov mov cmpsl push or faddl lahf jl push xchg in mov jecxz sbb cld or mov out or dec add inc scas push popf daa or xchg mov lea mov scas lret repz jge cwtl cmp jb adc mov sub or mov popf out sahf fiaddl lahf loope push jb decl sbb inc lock (bad) out movsb out mov inc push divl inc push das xchg xchg pop cmp push push pop push data16 cmpsl push add int3 arpl aam (bad) cmp andl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl imul cmc hlt and dec mov jne mov sub mov sub inc dec adc ss pop ljmp mov dec sub push inc push and das iret out inc mull push add lds dec gs xchg adc lret mov fcmovb rorl in pop mov insl xchg test (bad) lods lcall insb mov jno jo sub roll std test dec add jne (bad) orl add pop jp into test (bad) repz mov outsb std push sub in and push pop xchg imul outsl adc std mov sub (bad) jmp cmp push mov mov jns in jecxz add loop pop xchg pop test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc dec fs std inc pop pop popf daa fsubrs mov ss lea (bad) mov je xchg outsl pop pop clc stos inc cs inc add (bad) (bad) in out std adc inc std cwtl dec push bound ss jns ljmp or incl fstps mov xchg jl add xchg and and ret call sub (bad) leave mov cwtl loop cmpsb sbb roll cmpb paddd or (bad) mov in test clc inc xchg sti jne aad or addl std lds cmp mov mov sbb ds rorl bound mov mul out (bad) repnz sti insb js pop dec cmc inc lret push in xchg les jle movsb fnstsw add inc cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall daa ja mov jns lea mov (bad) cmp std dec xor xchg cmp cmp pushf shl cmp inc (bad) xchg pop jp lods cmp cmp (bad) fdivrl sub outsb sub cmp fdivs loopne push inc repnz mov aam outsl popf mov jae lods mov sbb cmp cli pusha jbe sub cmp out pop cmc and imul imul or dec cmp or dec or (bad) fsubrs mov xchg test adcb or ret imul sub bound jecxz inc int cmp and inc lea cmp ficompl mov and mov fldz gs imulb adc mov adc and xlat mov hlt outsb xchg inc dec inc aaa mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sbb jbe leave in mov xor cmc push int cld insl das cmpb daa cltd xchg fbld dec mov cmp repnz (bad) stc mov movsb rorb (bad) cltd push mov and cmpsb xchg add xchg push mov sbb adc pop mov roll enter lahf mov dec insb xchg sbb inc and (bad) repz add call movsl adc mov lret adc sub add fwait test test sub jo data16 es and aad xchg (bad) add jnp push in jmp cmp test cmp mul cltd hlt pop cmp loope and add lea in add les mov sti lods mov xor jae dec test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl imul adc aam ds sub mov or push dec adc mov push lret iret push push cltd icebp sub jl cwtl xchg lea cs adc mov fisubr inc negl mov stos xchg xchg movb push mov leave dec cmp adc lret lea mov aad cmp sar int loop and pop pop mov xlat mov test mov lahf or pop mov scas insb decb aad (bad) jle xchg js sub inc cmp rclb lock imul push scas xor in dec sbb pusha loope xor jge and in mov mov mov aad mov add loopne adc jl inc mov lahf mov dec cmp out push mov pop lret pop aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmp ss iret dec outsb ja pop mov xor aaa pop ret xor jbe lods rcl mov test sbb sbb dec lret data16 xchg js jmp xor cmp rclb lock cmpsb pop lods push dec movsb pop sahf sub cli fnstsw sbb xor inc pop cmp inc cmpsl xchg gs movsl fnstsw pop dec sub (bad) clc cmp push jbe stc arpl call out lods cmp jae adcb add repz rclb add pop mov jl inc loop (bad) fmuls into mov mov ret inc mov test xchg adc shll jae sbb jmp push mov jno xchg jg cmpsb stos mov mov add call rorb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov (bad) out cmp es jecxz push pop pop push dec out nop jecxz popf outsl mov leave mov aad pop xlat add sarb into fwait add ret cli sbb (bad) rcr scas in (bad) cs mov push repz mov mov mov sbb lcall mov xor in rclb rcrl jmp outsb rcrb xor in shrl cmpsb loopne adc in cmp adc sub sbb jge push inc out mov cmpsl mov test jo jmp xor xor lds add insl (bad) sahf ret xchg xchg cmp test push js push neg xchg or and jl inc sti push (bad) and pusha cwtl imul mov dec je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cltd add push aas stos or inc movsb lds dec in enter fldt sub out xchg add pop hlt test push leave iret stos lods inc imul and mov and xorl pop mov scas mov cmp sahf fucom shlb test mov push and nop mov inc shr mov out sti and push icebp sub jl adc aaa enter fwait mov repz in inc push mov jns sbb or cmp and push dec ljmp adc les cmp into xchg xchg cmpsb sub add sbb xor stc pop gs sbb push rolb xor (bad) lods mov int inc aaa popa vpunpcklqdq xchg mov cwtl fdivrs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl movsl mov test push and adc mov imul push adc or push adc out xor fnsave jo sub pop ret xor ljmp std fisub iret xchg (bad) imul es pop pop movsl cmovae cltd or imul sub push stos ss mov mov ficom test jbe pop test (bad) adc rorl adc std or adc (bad) bound push sub aad gs lcall inc roll push popf aas leave pop jae cmp cli inc fisubr xor stc into mov das push or clc inc ljmp or mov jae add popf adc push repnz xchg hlt push mov lock imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl subb test sub mov and and cmc mov jmp xchg xchg jnp dec jbe stos lahf in call ret xor jecxz cmpsl xchg jo repnz rclb ret mov add sub cmp loopne adc int push mov adc stos or pop movsl and iret gs mov push daa mov dec pop aam sbb cltd xor loopne aaa push or (bad) lock jmp ret cmp and xor cwtl adc fldenv dec push test adc xchg (bad) movsl stos push jnp out scas mov jmp push cmpsl or or jnp pop aad int sub movsl frstor cmp sub cmp pop dec or or out mov xchg jl dec adc (bad) adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp dec incb nop in iret in sub shlb je leave xor jecxz popa push pushl (bad) or or ret sub sbb xchg lea cmp sbb and ror out xor psrad in ret push jg loop push out imul add fisubl add xchg jns je sbb pop fwait into mov or or arpl xchg fidiv cmpsb cmp (bad) jp scas out mov into mov pushf in (bad) or xor cmp adcb sbb pop lcall adcl gs jae fldt jp or inc sub xchg and inc popl adc pop pop in cmp adc ret negl test pusha and roll sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jno popa xchg push aad fidivr cs pop push daa insb jmp mov (bad) int3 push stos push jecxz adc (bad) and insb pop insl fnsave test gs mov fld rcll add push loope mov fimul sti mov sti scas aad (bad) js sbb test aaa mov loopne and jo dec mov pop push out dec jle xchg aad hlt and add sbb mov sbb xor popf add xor sub xchg jb xchg sahf negb (bad) xor mov or sub add inc mov and push sub aad add pop fstl mov mov test sbb mov mov hlt data16 push ja aam mov cs cmp neg daa or into cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add (bad) (bad) cmp stc ja xchg daa insl push outsb jb jb sbb push push push lret or aam int fwait movsl cmp or pop jnp enter mov adc in test sub dec pop arpl icebp in mov sbb inc xor fs push mov lock mov roll xor sbb mov xchg push je and (bad) stos bnd popf lods pop pop imul jae pop stc pop inc dec add lahf ljmp inc cltd push and outsl push popf cmpsb subb faddl cmpsl out jmp popa dec push pop pop fsubr xchg mov rcr fidiv mov xchg pop ss push jg insb cli test arpl mov jno xchg mov nop jl jns xor inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov or stc or sbb inc mov (bad) (bad) sbb nop and push dec inc lock dec (bad) pop insb movsl push leave push push xchg mov aas aas cltd mov pop inc cmp pushw and lods cmp rcll (bad) (bad) int3 pop jle scas rclb dec xchg repz out outsb inc push cli out inc mov jo lds push iret adc pushw cltd sbb or into ficomp inc cmp fwait pop or mov push push ds imul xchg daa shl mov mov lret jne mov xor cwtl je add adc xor ss lcall push jmp iret pop sbb int fidivr in sti jl shl xchg dec scas or pushf push jp lret popa push fwait (bad) icebp pop ss sbb dec sbb push sbb xlat ljmp or dec (bad) or mov xchg (bad) push dec clc push xor push in sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pop das sub scas stos ss loope lods push mov mov popa pop pop shrl jecxz mov sbb sub add cld xor xchg js clc in pop cli stos adcl pop jge stos fs push inc loopne dec scas xor mov mov adc adc lds xor call iret and stos int pop dec int3 data16 mov pop cmc push inc (bad) nop add mov cmpsl mov pop mov cmp repz repnz dec inc xchg into or in iret adc add inc out in rcrb mov xchg xchg inc mov out out push movsl ja cwtl add int (bad) je jmp out pop test add jbe xor and (bad) fdivs pop ret xor movsb inc (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl int3 cltd and push sub mov daa add sbb shrl mov sbb imul (bad) mov rcll sbb sub jl adc repz out fwait jmp out push dec ret jns push jge sbb nop xchg dec ljmp adcl add test or xchg push mov ds movb mov jne stos ds ljmp sub jmp jo dec inc insb mov dec push add push pop push call sbb cmp lcall add or sub idivb test cwtl icebp incl pop out popa cmpsb subb pop add int3 or sub mov rolb iret add lret lret stos int adc and mov addr16 gs push je jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in cmpw pop push pop fwait js lret ds outsl jl sti add std inc inc fwait mov push lods rcl not fdivrs xor cltd ja repz mov and aaa test fldenv aad pop lods mov jae push sub enter pusha jae or sbb and fdiv inc sbb mov sbb dec aas leave dec pop std or push pop int cmp das mov sbb and fdivp arpl push lock into push iret imul rclb and imul xchg aam in pop mov jle ds je lds mov cmp push adc (bad) mov dec mov jbe or xchg inc lcall fwait xrelease mov pop std jmp outsl scas sbb or and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall lret mov sub cmpsb (bad) pop movsl jp sub rorl cmpsl sub xchg (bad) repnz repz jge arpl or inc or or sbb mov push and xor sahf and leave lods mulb pusha mov outsb lret lcall xor test or inc sbb pop inc jle lods (bad) inc dec fdivl push add lret jo stos iret imul inc clc jae lea cwtl push push cmp xchg gs and lods xlat pop lock sbb lds dec jmp mov add dec call insl pop ss mov lods dec dec xlat adc popa or xchg (bad) lret fnstsw pop rcr dec insl les and mov and push stos jp fsubs and insl inc mov cmp int3 inc mov outsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jl push and data16 mov mov xorl mov std jno xor repz cli scas push (bad) xlat mov daa push ret push dec incb fldt push popf adc mov loopne xor loope fnsave ljmp push mov dec xchg pop pop fcmovne test shr xchg ret jns sbb xchg xorl out fcompl sti pop outsb jo adc sarw jbe xor jne inc mov (bad) pop int3 xchg ja xchg adc sub pop pop sbb xor push mov js mov mov enter pop in or negb mov or and jb jp inc adc sub loopne push pop xor aaa (bad) in cld or hlt cwtl aas leave das cwtl add adc call lods insl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsubl fsubrs (bad) jecxz and leave lods push jmp pop xor inc movl sbb movsl xchg cmp movsl insb xchg lock ret pop insb test lods sub sbb add mov loop cmp xor insl sub sbb mov push jmp stos rcrl xor call dec pusha insl mov pop sbb and adc or xor jnp and bound and aam cwtl call hlt lcall cltd mov call push call fnstsw push out sahf in jnp aam sbb dec or pop test add jns mov aad push xchg push add lock aam cmp jb dec push in xchg mov push and ret sbb xchg cmp xchg out ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp andl pusha cltd lahf adc add outsb jo xchg adc into (bad) popf xlat or fs (bad) call lock enter lds mov pop movsb rorb (bad) in inc sub cmpsb mov mov dec loop or and shl pop outsb push sbb (bad) push jno loopne xor xchg stc mov aas jo lds and or cmpsl aad gs jne fnsetpm(287 lret mov fld (bad) xor ss iret dec outsb test in pushf out xor adc icebp std ja negb inc mov js xchg push std add cli lret mov dec xor addr16 stc jno jmp decb mov fcoms loop repnz int xchg out lcall dec loop fmull sahf imul sar in and inc jmp sub jns lahf fcoml sahf push inc lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc fnsetpm(287 mov fsubs xchg inc sbb push inc jle xor ds push push mov call icebp jo cli loopne sahf push xchg lcall inc loop repnz cli dec cltd mov mov movsl mov (bad) (bad) out fistl test add jns loope pop rcll mov mov sub sub mov out cmp les fucompp or lahf scas ds hlt pop mov jae inc lret popa mov pushf cmc lahf jmp clc xchg dec sbb addr16 xchg add lcall mov push cmc (bad) xchg add popf jb or adc lcall xchg scas sub fiadd dec loop aad add mov mov test xor pop mov mov movsl es push push xchg and jb sub sbb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle in sahf adc or into inc jbe xchg add mov fcomp mov inc mov push or jecxz test push sub call test faddp pop movsl pop outsl lret ficompl rcr mov cmovbe xchg mov rcl and icebp lahf cltd xor scas adc repz mov cld dec call sbb shll sbb lods mov es out cmp pop (bad) hlt cmp push dec stc xor mov jno push arpl les inc xchg inc loope je (bad) ja mov outsb sti scas das gs data16 (bad) push addr16 push sub std cli xchg jo mov fisttp jno inc popf or mov pop sarb ficom out dec dec dec mov or cmpsl cmc or pushf jg pop xchg enter and push std xor sahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp into sbb mov mov dec add push sbb jg cmc jp aaa dec testb lret (bad) jmp jle inc shll test daa xchg dec pop pop sbb repz lods rcl mov sbbb cmp int3 orb ret movsl call xor add mov xchg fs pop push (bad) dec push add fsts pop and lcall mov and jns inc mov mov xor inc pop cs out andl dec cmpsb sub mov stos int repz and jl or scas xor out xchg xchg enter xor push leave mov cmp arpl inc push cmp (bad) push jne xchg (bad) imul ret pop repz push stos (bad) and mov mov add inc mov sub cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop sub xor sahf jl mov (bad) lcall (bad) aas xor mov jae movsb push xchg or and mov lret daa mov sbb sub cmp cmp stc lds outsb pop xchg mov std mov stos adc out inc mov jnp add xchg adc and xchg sub inc (bad) data16 xor push push cs sbb xor and jmp dec ret jns nop mov (bad) adc movsb and pop (bad) sbb inc cmc test movsb xlat cmp jg ret xlat xor stos push lods or push add into (bad) je xor sub xchg lret xor cwtl jbe int xor je push inc cmpsl cmp imul mov add out sub inc add inc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push jecxz adc (bad) and sbb mov sbb inc and mov jbe mov iret dec outsb jno or mov insl cli mov and cmp jnp cmpsl int insl (bad) mov cmp sti rclb mov in test adc dec or inc sbb xchg je loopne mov loope jecxz fwait mov push jle xchg sahf negb fucomi sub dec nop mov aaa adc push (bad) jecxz imul test inc scas inc loope pop cmc and jg jmp mov jle stos rorb outsb cli pop pop sar scas scas jge sbb mov cltd cmpsb sbb movsb inc xchg sti js addr16 arpl push popa inc loop ja adc inc mov sbb mov inc pop mov sub mov dec add dec popf cmpsb add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl addr16 fs outsl test (bad) or mov xchg sahf imul push jns sbb jb xor dec (bad) out sahf push xorl cmpl arpl imul repnz push xlat sub or jne xchg add dec fbld inc push popf lret xchg jp xor mov lahf test (bad) xchg addb cmp nop cmc aas sti enter insb movsl push rcrl jae (bad) dec fidivrl pop ret enter pusha mov mov xchg xor sub scas sbb sub std or pop fist push (bad) sub popf dec or cltd icebp cwtl dec xor lcall stos (bad) adc cmp adc into and (bad) mov leave push into in pop movsl xchg incb adc cmp jmp ja data16 loope cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl repnz sahf loopne lcall jae dec dec push sahf adc cmc and popa cmpsb mov sub ss and lock jno pop cmpb ss (bad) addr16 lret fcomps jg mov sbb cld out scas xor bound inc mov xor sbb push fsubrp sub cwtl ss jl,pt xchg cmp mov adc test std jns adc jo lds push lret mov sti adc mov dec (bad) addr16 mov rep gs push es pop cmp pushf cmp stos popa addr16 add xor dec adc es test dec push lods loope adc jg pop cmp repz sahf cmp pop jo xor subb fs sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp loopne lcall lea adc jbe mov lods pop pop jge jae xchg inc scas inc out xor int3 mov cmpsb enter in pop (bad) lea jle daa xchg icebp mov fs push cs flds push lret mov jo jle sub imul jno adc mov stos jns ficomp jge,pn xchg cmp jb inc (bad) sti or test (bad) adc xor movsb mov lcall stc inc jns dec pop pop add lock adc nop xchg mov sbb movsl int3 jo mov pusha and add inc lea in mov jmp push test inc enter xchg push inc mov lea loope jns,pt jo mov addr16 lock incb test adc lods inc cs push jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sub (bad) repnz movsb dec adc push xor xchg add std push nop push jne inc (bad) scas es aas xchg pop pop call push mov xlat push jbe push (bad) outsl mov (bad) cli push inc jbe aaa jmp movsl rcl fisubrl fisub out stos (bad) outsb jo sbb sarb sti jge xchg insb cmp adc push into mov lret sbb and ror or mov std jmp jge outsl add int3 (bad) sti into mov cmp push dec (bad) and cltd mov movsl mov lahf faddl sahf jl push xchg gs stos aaa incb cld or jb mov icebp fstl mov mov or fcomps leave out (bad) and imulb in leave jns mov and lahf stos int pushf outsb xchg (bad) mov sbb shr lret jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call imul xchg lret xor std sub push aaa xchg xchg stos aas enter and xor repnz push pop leave and mov sahf je pop int3 xor push mov (bad) int lea stos jns addr16 fisttpll mov mov repz jo xchg stos pushf sbb xor data16 dec (bad) roll sub sbb push sarl cmp xlat mov pop sbb cmp pop add adc mov mov sub es inc mov cmp push inc cmp xchg pop and enter sbb repnz pop and pop cmp (bad) dec lods ss dec mov adc sbb outsl jp or push into sbb jmp dec es sarb mov xchg je fild (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp nop sub sbb and fs cli int aas test lods cli push dec outsb movsl nop in stc xchg loopne pop mov jae,pn dec dec inc lcall insl sahf std or pusha xchg jb loopne push pop xor inc or inc repz mov inc cld fnsave sub mov stos push add and xor leave xchg and inc lods jno sbb neg das xchg adc test push dec fistp sbb jle in cmp loope sub add xor rorb leave push aad pop fnstsw not mov cmp inc mov inc or roll mul out dec loope pop sbb mov mov rol inc mov push (bad) sti in stos test stos out stos mov fnsave shlb in rcr sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall popa stc out shrl neg daa lret pop into xlat mov push push shlb dec mov daa cmp daa jle inc mov cmc push adcl and rolb mov inc mov cmp add mov repnz dec insl mov sbb cmp jl movsl shl dec jo cltd fsts pop repnz add insb inc nop xchg mov dec inc sbb test sub call (bad) movsb mov xor mov rorb std lcall xchg xchg in sub jb out and push or sti xchg cltd mov scas int3 xor test into and mov jo push and push mov mov and add cmp test std cld lret pop leave and loope mov xchg out push lds test js xchg push std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xlat cld mov ret pop aas ret pop jno pop dec xchg dec push (bad) mov addr16 leave sbb xor sub mov mov scas jne repz in inc push (bad) fistpl add fcomip loopne enter sbb xlat jle rcrl jne pusha xchg mov and rol mov pop sub pusha inc loope lods bound out inc dec fbstp sub or adc adc icebp jg ljmp leave jns jmp pop xor (bad) arpl lods fnsave mov pop push js add sub push out fmuls (bad) xchg insb fdivrl fldenv mov pop jb sub inc mov into cmc mov loope fs dec push inc cli rolb int3 pop push pop fnstcw inc push cs enter pop repnz repnz (bad) jge cs (bad) aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov movsl rorl jge popf jo imul fisubr popf (bad) xor out xchg cmpb fsubr das pop add xchg push add mov or dec nop mov pop sub mov (bad) mov xchg popa pop std mov in cmp clc push mov out add inc add ss int outsb jg add fiaddl out xor hlt into push cmpsb jg add test and inc jbe sbb dec in std jne inc cmp adc sbb inc push into test insb pop pop (bad) mov mov mov and pop dec adc and pop popf mov dec call adc sub shr sti adc jecxz movsl in movsl jnp sub clts out out dec pop scas call fwait mov sbb push sbb add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov fdivs push ret out jmp leave adc pop xor jge,pn xor inc or fs sarb mov mov dec dec sub dec xor adc call ficoml das es jb inc mov and loope mov adc adcl (bad) push push jge sbb nop xchg stc xchg cmpsl sub push mov xchg add test jo into cld xor (bad) mov test pop sbb sbb mov cmp es dec pop stos xor pop sub js mov inc dec push aad push fnstsw scas jmp int3 xchg jo adc popf inc inc or movsb mov sahf add (bad) cld mov out and test mov aad add pusha pop lods test cmp div xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp icebp jmp (bad) (bad) ljmp je xchg cmp sbb jl xchg loop rclb lock fldt cmpsl sub xchg xchg roll pop mov inc xchg add insl xchg aaa in mov in sti and loopne imul mov out lahf ljmp and fisubr out xor shrb jne inc scas jle lock mov test and dec sbb ja icebp cmp jo mov addr16 stos add gs out sti add push out shll jae sbb jle cld or std movsl dec adc sarb loopne cmp (bad) push sbb dec adc lds push push shr xchg dec ret jns int mov pushf xchg daa test in cltd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pushf nop cmpsb repnz inc mov cmpsl (bad) setge ss pop fldenv mov adc loopne fistpl xchg roll dec mov inc sahf mov inc xor mov loopne imul mov dec dec sbb jmp cmc and (bad) (bad) or sbb js (bad) fidivl testb stos mov dec mov add jbe xor loop mov cltd cltd add or pop popf mov outsl inc add push out cmpsb jle sub mov push adc pop sbb ja pop popa ja push dec test in pop xchg adc push (bad) jns (bad) lcall comiss rorb outsl mov leave pusha fsub sbb adc jbe movsl es shr jmp pop dec jmp in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl icebp lods push xor imul in push push fadds das imul outsl jne popf daa fcomp mov mov andb or or in cmpsl fidivr fistl aam out iret mov notl aam out add sub jmp push lods mov mov inc adc fwait shll ret inc es mov subl mov dec sbb lahf mov sbb jne add mov and mulb roll ffree (bad) jmp cmpsl pop xchg xchg lock dec testb dec out inc jne gs je hlt pop sub cltd ja mov mov js mov and mov mov movsb or dec (bad) jnp jg pop pop ret (bad) lock push or jmp cmp push popf in or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lds push fnsave adc push adc ljmp jno imul (bad) (bad) xor and push and mov cmp (bad) in cmc lea popf xchg sub fcmovnbe push daa popf cmp lock adc jo xchg js add xchg push fucomip loopne pop outsl pop movsb (bad) and dec lret movsl adc mov test adc addl sbb pop lods mov dec mov leave xor mov xlat push or xchg and inc and jbe or popf icebp jo pop add imul loop dec (bad) out mov adc cmp adcb or mov xor inc js sbb loopne mov or jns ficoml arpl lret sti xor fucom mov test les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov push dec dec dec popa jnp sub mov ret cmpsb pushf lret dec repz adc imul sub adc cmp mov mov add in cld out lcall adc in das mov lock jb xor lret dec nop in or xor mov and int push aam xor sti movsb mov fisttp les and mov push daa js (bad) (bad) mov jnp std gs pusha insl jns sub sub (bad) push jbe bound mov mov fidiv stc ret sub mov lret and pop std mov outsb add mov xchg (bad) push adc or add insl pop mov jge pop xchg fidivl (bad) xchg rcr cld mov sub hlt inc aaa sbb aad frstor pop mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jbe sarl stos das movsl jge test pop inc aas mov shrl sbb rol sbb cmp xchg fisttpl mov out xchg lods in ret std fdivrl xchg repnz and sub or stos inc ja pop dec jl xor xor mov adcl mov xchg ja lea adc or sahf cmp or sti xchg adcb push lahf out and fisubr in cltd fsts repnz ret (bad) (bad) outsl or les xlat xchg arpl test and test xor movsb rolb (bad) (bad) jns std lcall loop inc xchg push enter test add sub or xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pushf mov cmpsb xchg nop mov mov sbb stos out outsl sti or sub xor leave into push xchg or out and (bad) push and data16 daa and subl and les mov push pop test repz push dec je dec lock cli add cmp sbb jbe pop addr16 jp xor cmpsb inc daa gs push mull cmp sub push sbb cmp mov frstor mov push push push jecxz adc (bad) daa jo mov sbb jno pop mov aaa (bad) xchg repnz or imul jbe in push add jmp gs stos mov mov xchg push push lds mov xchg popa jecxz mov out mov lret insb jno push outsl push inc arpl mov inc popf cmpsb cltd int adc movsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec cwtl jae setno or fisttpll aas sbb push inc sbb in in clc jg mov xchg jmp push notl imul pop repnz ret insb adc mov xorb stos xchg into mov pop movsl test negb or sbb outsb aam gs push mull pop dec and icebp mov jnp shrl inc mov std or pusha xchg fcom sbb les push pop inc jle push adc mov idivb loop and or loop loopne mov or lcall lahf stos int pop inc loop ds push loopne loopne xlat insl (bad) push dec idivb or fnop fdivs fsubs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp fmuls out mov insl in scas sbb in roll in incb push mov dec sti pushf pusha fsubl fisubl jo sbb mov mov mov pop and mov add and push fcomps mov jl imul and add mov cs push xchg add sbb mov sbb sahf and inc loope sub ret mov popa scas (bad) scas es stc adc push std ficoml xor pop mov xchg or les mov stc outsl in adc jp aad (bad) fildl inc ror or xor jmp sarl add out mov or stc aad clc pop lds clc mov das xor mov sar xor cmp xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov pop pusha or sub adc push xlat jle imul lods mov lea lods popa pop arpl inc cmpsb lea test sub add cmp shll or loop je ja addr16 cmpsb and andl popf push jmp pop xor addr16 lret imul pop in xor adc sbb cmp adc (bad) lret ja enter loop (bad) mov mov (bad) lods mov mov loope sub jbe adc pop inc jnp incl divb inc out sub repz popa in sub mov push push leave mov insl fsubl add xor dec gs (bad) cmp fidivrl and fnstcw push ret add popa xlat push or jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmpsb push mov pushl xchg sbb push mov stos mov rcrl ljmp push aam mov inc push mov xchg loope clc clc cmp or (bad) cli out inc es rcrl aaa mov push aas jae and pop addr16 imul pop sbb insl neg jnp pop movsl cmova jne adc bound cmp movsl fadds xchg daa repnz sarb push dec loopne aas push mov lock or imul ljmp mov ret mov pop js fsub lret pop mov pop je push sbb jmp fs leave stos ds lds daa arpl adc jg movsb mov (bad) mov loop jbe nop icebp xchg jecxz inc adc mov hlt xor mov lods lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push fwait mov (bad) xchg aam dec movsb das cmpsb ret cs lock mov adc repnz mov pop dec imul or and push into cmc in cmp jb popf dec insl pop xor aaa cmp mov sbbl jmp in stos mov xor out jl push hlt lcall push scas mov std or movsl ret sub pushf int3 jae icebp or in divl push aam cmpsb mov out cmc pop jmp mov mov ret pop cmp push push clc shrb insl int adc out push mov pop scas sti dec pusha ss sbb scas fisubl cmpsl jl jg push xchg loopne in inc fsubrs jbe insb mov sub fwait mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add jno gs and ds lods (bad) cmc out notb pop pop nop inc rcll jae ja fdivrs sub popa pop and fisubr cmpl fdivl pop fnsave out jbe dec shrl pop shrl fcomps or fsubrl mov mov mov pop mov stos jg or xlat out dec pop or jp das jno gs jo shl pop xchg xor cltd ja divl mov adc add cmp fs xchg pop mov mov int xchg push pop inc jmp jb lcall push inc lods scas outsb adc mov or jecxz rcl data16 shr pop loope jno sbb shrl lods sbb or pop adc icebp cli xor lods rcl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl test add in imul mov xor out inc and mov les dec xor mov mov xor sub or (bad) inc pop out xchg jge add lcall shll cmp push jle test inc pop xor mov shrb pop cwtl mov (bad) imul test mov popa cmp or imul popf fildl bound xor sub sub cs xchg insb mov loopne xor add mov jmp mov stos or (bad) push mov lcall mov lock or jmp and push inc add or cmpsl cmp or mov into jl cli jle lcall stos inc lods jnp xchg std mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cld lret jnp or test ja enter jmp (bad) rolb fdivrl in pop xchg out adc test pushf sub sbb addr16 (bad) mov or sbb inc sbb jb jmp xor roll or fcmovnb daa js sbb popf push push movsl fidiv mov divl add pop push sbbl iret out jmp xlat jmp movsb sti push stos out inc aam jb inc ljmp mov fnstcw (bad) jbe sub xor int3 mov push or paddw popf addb add cmp jo,pn inc dec lea mov aad leave andl jns out cld stc lcall xchg xor lods pop inc mov mov fwait outsl mov aam fcmovnb ret imul pop jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop xor orl pop popa jg test das push push (bad) adc inc add dec test and test or lods sbb jae imul rcrl xor pop fadd daa scas pop sbb xchg jae into rcll mov cmp xchg popa out sbb jecxz sbb scas pop lahf ret loope mov pop and pop outsl int inc inc ljmp into dec push mov out pop jo mov aad (bad) xchg es adc out cmpsl mov aas xor xor and cmp lods pop mov dec call pop in or sub mov push add jb xor roll stc inc jle sub jno cwtl xorl or cmp dec mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov movups stos in sbb popa adc ljmp or xchg xchg mov in jnp aam stos mov mov jne je lea inc add in js (bad) scas mov jo pop push add cmp mov xchg pop mov enter hlt adc cmpb out add mov ljmp jmp insb inc jp js cmpsl movsb sbb imul mov sub adc decb xchg jg xchg popa daa jb stc xchg inc movsl xchg insb js inc adc push nop in add pop pop fcomps or pop push mov (bad) push fincstp push ss cmc in cmp or and std cmp xchg popa (bad) cs sub push pop aas ja sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldcw jns and sarl add test pop xor cmp mov push mov pop sbb mov lahf stc pop mov dec iret data16 cwtl leave mov (bad) jmp sti loop aas push fist jmp inc xchg push rcrb pop mov pcmpeqd fincstp sub and (bad) out dec gs popf stc jno sahf sub adc sub add (bad) js nop add cmp ja cmpsl movsl push (bad) or xorl inc jge jae xchg mov data16 push mov outsb dec jle lods sub cli adc xchg dec push cmp (bad) inc test push aam mov insb jns adc jge mov jl insl lock or lcall xchg xor in and out xchg sahf and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std mov loop cmp scas xacquire mov xor xchg (bad) or sahf add int lods cmp je ret negl (bad) jb fdivs mov and xchg dec adc aas sti enter pop in rcrl jae,pn or ljmp adc imul outsb fidivr mov call pushf sub inc cmpsb sub insl add test test adc leave xchg into push push lret adc lods or or push imul cmpsl loopne daa ret xchg outsb js xchg dec push jl push out mov mov imul pop sahf ret mov mov adc aas sarl cmp cmp mov xchg out jbe push mov pop lods imulb sub or inc loope pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and out (bad) outsb int mov cmp daa mov jns jge xor test daa aaa sbb mov lcall addr16 cld test hlt repz call adc stos (bad) mov mov cmp mov sub jmp cmpsl push jmp cmp mov insl imul pop jb cld into stc aad std dec push ds mov jbe ret pcmpeqd (bad) call ret outsl add and call pushf hlt dec (bad) cmpsl xchg jo mov adc jp cmpsb mov and or mov mov roll xor push or xchg cmp lret cmp sub rcrl mov fnstsw push test mov mov push and test inc scas pop aas (bad) cmp or inc or dec hlt addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc hlt popf rclb dec popf pop std andl add scas mov data16 mov adc xor add mov pop into and jae fs popa xor pop repnz (bad) cmp movsb adc not fdivrl (bad) lods inc sub in push mov dec and mov pop jge into dec loope mov (bad) mov shll es mov mov stos gs fisttpl push inc test mov lds nop mov push adc and mov xchg (bad) mov xorl fisubrl cli inc cmp dec inc stos add and pop cmp int3 add dec sbb mov pop adc jge and incl ljmp dec ss stc mov lock cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in pusha (bad) (bad) ljmp es push lods repz xchg je out jno adc and (bad) dec sbb lret nop mov mov push loop fbld orl add mov imul add stos inc adc push inc jno push aas (bad) hlt adc push or sub cli test aam push imul inc sub arpl push daa mov insb or push pop stc or fcmove mov push (bad) jmp cld mov add xor sub cmp lret lods int lcall pop cmp lret jnp insl je pop cmc add and jge out loop je xchg test sbb or test lods bound adc sbb mov sbb scas xchg mov xor mov add sti push dec push popa xchg test (bad) clc adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov shlb std frstor call lret push jle sub pop gs mov push (bad) jbe inc mov mov push inc insb cmc mov imul shr pop std jo mov or mov jl inc in or mov mov fistpl sub push lds push popf rclb ja (bad) pop add pushf arpl dec stc adc mov inc ljmp scas add pop sarb jp arpl fdivrs mull push push or nop (bad) negb inc scas sbb jle test lret xchg ds movb jnp (bad) sbb mov sbb das (bad) sbb fdivs inc js push inc sahf mov test getsec sahf loopne arpl dec sub mov popf push push sahf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop mov pmullw gs cmc and aas cmpsb enter and shll xor in xchg dec dec mov xor mov and push xor sub mov push std jno lods neg cli mov ret push cmovs rcrb xlat dec mov gs in insb (bad) je fdiv pop das mov test fsubr subl lods mov or mov sub cltd mov popf ss in mulb push (bad) imul js mov and push sub push push subl mov adc adc sahf je cmc outsl pop arpl xchg and test test jae je sub mov push out mov jb dec xchg lahf dec mov lock ret push lahf sbb ja je call cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sbb cmp push xchg xchg stos and in pop sbb push imul repnz jp pop lcall mov out mov mov (bad) loop adc into sbb cmc sbb pop clc xchg dec push and fwait cwtl sbb scas push push cmc xacquire push and inc fdivrs insb js ret fnstcw jbe shll mov cmp aam sbb or sub pusha lods cmp lea fldt pop mov repz jne pop std loope cli adc stos and popf push lret repnz (bad) jle in mulb jne mov jno andb push xor imul or inc movsl lock xchg push insl add in sub push lods ss repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sbb hlt loopne imul lock pop mov mov push lods popa pop push jecxz pop adc push or js gs inc adc dec xchg xchg ror jbe pushf aas leave into push add cs into mov int3 xchg fisttpll sbb xor in jmp pop add in push in and adc cmc mov sub fsub movsb fwait jg jnp or or ds (bad) dec mov or dec lea mov aad push xor pop repz (bad) jmp ds xchg (bad) push mov out lods arpl sbb mov push loopne test adc loop xchg adc sub jmp adc cltd mov das sub sti mov cltd outsb dec push shl scas inc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall movsl popf std (bad) pop jnp in add fdivp fsubrs jl mov add xor insb pop push test pusha dec xor sti iret pop cli cmc ds lods jbe in jecxz iret and outsl inc aaa lods cmp or rol ret jnp jae push insl sub pop hlt test push pop imul sub and pop sub pop xor sbb cmpl dec add insb inc call lods and test mov dec ds bound pop int3 add fdivl lahf jl sbb mov daa push out daa dec ds sbb insl add or jno mov pop jno xchg es and (bad) hlt cmp inc insb movsl xorb inc pop xor pop jns dec stos cmpsb mov loop bswap (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push sahf inc lea rcll push cltd test std add mov out fwait and adc jge shrl fucompp jbe sti sbb xchg andb adc in sbb popa fsubrl in and nop or ret xchg (bad) push or cmpsl in pop inc sahf push dec xchg out push rorl ljmp mov jmp hlt fstpt and xchg int mov std push cmp sbb imul fldcw movsb dec bound inc lea lds loopne mov sub inc dec call xchg jl sub push cmp sub xchg cmpsl pop pop (bad) add sbb mov loopne jle mov inc push insl push cmpl add fwait mov ljmp mov sbb rcl inc adc mov mov pop addr16 push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg mov sbb xchg mov cmp mov sarb imul xchg repz adc pop mov js in mov out xor icebp xor jge dec lods scas insb jo out cmpsb sbb inc test xor enter cwtl or sub std and out stc data16 data16 push lds mov cltd test lcall mov cmp ljmp mov sub cmp add cmp unpckhps dec mov pop mov dec adc add jge cmp dec xchg addl iret push push out sbb fwait addl out ret jns xchg es ffreep mov cltd decl test add adc sahf imul leave mov dec xor lahf push inc popf std in cmp fsub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call out mov loope movsb or (bad) les adc (bad) daa dec nop repnz add sbb push xchg test jge and in or out and xorl and add popf jp push or mov inc push pop adc sahf je int dec je push stc mov pop lcall out adc ljmp imul cmpsb pop (bad) sbb psubsw push aam dec movsb das (bad) dec rcr ja adc mov sub mov test loopne pop daa popa mov sub fdivs lret xchg (bad) in xchg popa or xchg sti jg lea xor in (bad) ss leave pop jae cmp pusha fidivl push adc data16 mov hlt inc jnp jae jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lret push insl mov (bad) jb jmp inc rcll je sbb stos sub sbb (bad) xor mov inc jle bound jle inc xchg cmp xor mov jb icebp iret lea test shlb int add mov shrl out addl sti dec cmc lahf (bad) jle nop dec sub mov and jg addl (bad) cmp fldlg2 dec pop movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp fisubr imul adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop stc in cltd cmp dec xor test minps shlb push or inc ds popa xchg loop jl js,pn fs aad pushf dec push lock cmc push fsubs sti pop pop cmpl daa dec jge sbb ljmp mov popf outsl pop xchg add cs xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc mov repnz adc movsl in dec inc jne mov xchg inc pop cmp lret jbe mov insl mov adc lods stc inc test pop push in xchg (bad) jp pusha stc push mov jl pop xor lods (bad) dec jns (bad) out inc out aas mov jnp sbb leave jmp fwait mov jle (bad) push std lret adc cmc xor outsl jge and push adc data16 incl das mov cmp in fildll lcall daa adc pop movsb shufps pop or xchg stc stos or lret jecxz sub int out sub adc mov cmc roll loope es dec pusha and mov inc mov jbe add and hlt mull or lods jns out push aam cmc add xchg ljmp pop jg jbe cld or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld mov scas or popf mov and jae adc repz inc insl xor push std mov cmp xchg inc std inc cmp sub inc mov insl lock adc push pop aas pushl mov les inc ss and aam mov mov mov pop fnstcw insb jno fbld push enter xchg (bad) sahf data16 outsb mov in push push out aas and mov mov sbb xchg sub push dec or add int lret and mov rol add out mov add rorb outsb pop jbe and and mull sub lods sarl pop cmc lods pop sbb mov cmp jg leave jl cld or adc xchg xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cltd iret add sub adc subl inc insl lock pop cli cmp mov xchg (bad) and addl mov adc cwtl repnz pop shrb fwait scas loop in xor fmulp fildl lret jg add pop outsb xor lea nop outsb ja (bad) pop and lahf popa and scas lods cmp xchg xor and xor (bad) mov pop sub adc or jp inc mov scas scas cmc xor adc sub sarl xor jo pushf sub jns mov inc cs inc inc mul push (bad) adc sub mov sbb dec push bound (bad) xor js repz dec ret aaa sbb aad test ret cld mov mov fwait or test jg push xchg dec out fisub adc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp addr16 loopne mov jecxz push or dec (bad) cmp jmp imul fimull push imul clc pop and movsl rcr mov cltd std sbb jo (bad) pop push jns loope mov jae add pop and mov mov ja ret pop and lods cmp std daa hlt and cmpsb (bad) xchg add jb sub add movsb inc orl cli adc fstl scas pop cmp cwtl icebp xor xorl stc jo push cmp push mov testb fisubrl mov dec dec pop popf push pop inc cmp in cmp movsb pop cmp stc rcl inc mov jno adc and sbb push pop ss sbb pop in adc jnp shlb adc sub pop addr16 lods nop and repnz addr16 (bad) xlat stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and push enter mov cmpsb xchg movsl push sbb cli jmp icebp scas xor adc lock jne gs fbstp addr16 sub jne xchg mov mov stos inc xor ret negb je adc add mov dec adc xchg inc test xchg outsb jns ljmp jge mov jb push (bad) mov push mov fwait imul xchg dec cmpsb cmp arpl int3 imul mov sbb mov adc mov dec into es push or xchg dec pop inc mov inc mov in cmp js cmp and cwtl ja mov insb mov clc push add rolb loopne pop in cs xor mov adc jbe pop int3 fbld push popf mov aaa leave push mov popa inc jne cwtl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jo cmp cld or pop or aam int3 insl into scas xor xorl aam in add mov fwait inc cs out pop mov dec stc insl push sub shll jns gs dec jecxz sub int cmpsl lret ja push adc fcmove (bad) mov jbe movsl mov lahf cmp mov pop loope xor pop lods testb jecxz adc push lds insb and jb lods mov mov popa jnp add shll jp xchg je inc out xor ret pop sub fs bnd jge push or add incb adc je mov stos sbb movsb insl pop cld push pop push or loop xchg xchg jl inc outsb cs cld jp iret xor nop mov xchg xor jge pop adc out shll fbld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec ffree push xchg loop mov cmp stc imul xor pop fcmovu mov bound movzbl pusha add icebp imull scas fcoml push push adc movsl pop jg adc dec mov xor ret mov ljmp insb mov sbb pusha enter rclb test sub mov clc enter xchg cs dec cmp cmp iret dec mov xchg dec dec push cmc sarl lods xlat and adc sub dec adc push sti inc (bad) xchg jo sub adc stos incb or fmull sarb or shlb sub push inc jne mov sub jg (bad) mov xchg insb aam mov add movsl add sahf mov dec movsl jnp mov pop rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc jbe pop push and mov dec or and xor enter mov and (bad) push xchg or cli jl and xor and pushw jo pop adc pop ret xor lret jb loop push daa (bad) mov and cltd jge mov inc push adc push push aas push push ret and fisub xor inc ss sbb cmpsl cmpsl mov xchg lret popa inc xchg repnz adc and adc and push mov arpl sti data16 outsl mov fadd push inc into add rcrb push cs std jmp cld insb push and sub push pop mov xchg stc jbe movsb rcl lret ja xor or mov sbb (bad) cmpsl popa inc mov sub adc push jbe pop sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pusha cs mov cmp cmp enter lods fsubrs inc jno leave test xchg sbb cmp scas xor dec lock adc jg push add add xlat jb mov (bad) das inc icebp cmpsl and inc jbe jl jnp xor xchg stc pop jae ret movsb xchg add stos mov push (bad) js rolb ljmp push hlt mov mov outsl push les dec pusha mov push dec push (bad) addr16 lea and jmp rorl leave movsb outsl std or adc fbstp scas scas push pop popf daa mov repnz push adc stos addl adcl push mov stos inc cs cmp adc pop sub das mov mov dec adc xchg incw fdivs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld jae inc pop inc sbb aam clc aad cld outsb push mov fwait pop mov jg jns dec orl mov imul lahf data16 mov (bad) push or jno cmp xchg xchg mov nop and adc movsl movhps xchg stc pop into or lahf lcall xchg jbe fs mov (bad) shlb es mov and push loope push inc and ljmp add cmpsb call push ds and or dec adc adc adc add aas cmp xorl fbstp sahf mov dec lods cld icebp push and (bad) stos inc cs sub sarl or dec push sub jge sbb in cmp rorb ja imul or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl insb lret fildll loopne aaa sahf sar mov mov jne xor lods (bad) cmp lods decl (bad) dec lea jne jns xchg lret fiaddl pop les fwait fs jg (bad) sti inc (bad) (bad) jo jb add (bad) inc cmp aaa xlat gs scas mov add shll sub jne sub fs jb aam ja jo,pn in dec mov nop mov mov lret sub sbb mov (bad) dec pop mov mov outsb mov inc xchg out in sbb sub cmp jno insb (bad) imul mov ffreep mov cmpl add xchg and pop pop sarl sbb in cmp enter mov adc in mov pop pop xor fnstcw sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov jle mov loope sub call mov cmp loop xchg outsl push fidivr inc outsl imul xor pop sbb pop leave (bad) pop sub inc out notl add push add ss lret gs jecxz sbb mov and call mov dec insl cmp jp and pop in cmp hlt mov adc mov push (bad) jno xchg stc mov add mov cmc insb les addb inc cmp orl mov pop mov in sub ds mov outsl insb adc or adc ret push ds inc in add icebp jo and jnp pop or push call (bad) fs (bad) dec ja mov sub sub jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp ja jg jnp sti or sub pop leave add outsl jmp mov stos push cwtl bound and and mov pop shrl jmp xchg in in ljmp push xor push mov jno cld or mov push or dec stc or testb inc jp das mov sub pop in cmp scas mov cmc dec push aas iret mov cmp vmovd xchg sub rcl loope rcrl xor xchg cmp cmp xchg and sub idivb imul adc mov les pop out dec in lahf adc or jbe inc add push idiv inc xor int3 js out dec jns scas (bad) das pop icebp xchg repz loop inc jl jl pusha jns sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sbb lret movsl mov lcall jmp ret fdivs movsl ja std mov aas xchg aaa sub rorl ja sbb ret cltd adc xor fsts mov adcl (bad) loop sarb dec ja sahf int cltd sbb xor or push sti dec negb or adc xor xchg loop jle fidivrl sub jbe in imul jg mov mov sub pusha pop xchg insb cmpsb roll xor push imul cmpsb out cmc scas xchg sub add pop xchg rorl in sbb add popa mov xchg pushf and jg outsb aas imulb out cmp into loopne xor or sub popa inc push pop mov aad sub sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor insb fmulp test add pushf add sahf (bad) mov mov mov fsub adc jbe pop inc and lods cltd pusha push push mov dec aaa lea cmpsb enter mov or int xchg or cli gs inc out xor jnp jne mov gs andl jno (bad) xor or cwtl pop push fcmovnu cltd inc sbb fldt mov nop insb es dec xor jne in adc pushf pop inc or sar lret ja xor mov or jb (bad) sbb ret pop lea (bad) or jecxz insb mov add push xor (bad) (bad) push and mov xor cmp pop mov cmpsb mov hlt ror insb sub jle movsb and pop outsb lahf adc inc pushf xor scas pop pop repz aam into icebp sbb inc or adc xor test stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop std mov cmp mov stos sub pop sub jl notb jle inc cmp push jnp push pop xchg cmp lcall jae inc cs pop sbb mov cld cmp push lret pop pop sti clc jg jns dec inc dec stos arpl sub rcrb shl (bad) adc pop sbbb xchg repz movsl pusha push sub in push or rcl lret push lcall (bad) rcrb ljmp (bad) pop shr mov addr16 adc pop (bad) adc jl (bad) cmp in test push sbb mov or sub jle movsb xor and adc lods xor scas push pop cld daa cld and icebp aas repnz or adc xor add je pop scas mov cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp loopne,pn inc ret out clc or and xor pop pop ret stc sub shr jecxz ja xor fwait int mov js add rolb ret in dec cli jnp mov adc jbe pop pop and pusha inc push stos lods pop inc xchg dec add ja ret enter mov sub or ja aaa out pop scas (bad) xor popa cltd xorl push adcl jno (bad) sub std cli cwtl adc fdivrp inc dec xor sahf sbb push xor push adc sbb dec jb lock insl (bad) jns ret out or push ljmp push aam mov jbe in hlt bound fwait jmp cwtl xchg or es jl popa mov data16 pushf pop mov xchg mov aas test aam sub stc xchg ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc lret pcmpgtw pop lea cli stc xor movsb cmpsb shrl xor (bad) test inc js add lods add sahf xchg mov mov pop (bad) fmul adc jbe pop xor pop lods andl inc in dec lea cmc push and xor enter mov or rcll pop cli jge and adc daa mov cltd sti jo sub gs jno (bad) and mov push push cwtl fsubrp inc inc xchg jmp cmpsb mov nop jno jp das movsl jnp ss in sbb xchg cli lret ja jg add or lods fcomps int3 loopne pop xchg push cmp push shr mov jno push loope xor pop lods idivb daa mov cs gs pop andl movsb jmp ror jl jo leave movsb push std dec ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub cltd icebp jo push cmp and es mov jb mov mov pop outsl xchg popa pop mov push pop js jne jbe cmpsl dec jo cmp out dec shll aad js jae sub add mov (bad) mov xchg cmp fdivs (bad) out je mov and or cmp stos xor push mov push (bad) or xchg (bad) or out dec test pop dec mov mov nop imul dec pop movsl dec push aaa jne in pop xchg lea or (bad) mov mov sbb sub lods lds ljmp (bad) push ror mov jno and pop fdecstp add cmp call sbb cmpsb loope scas sar jnp outsl jle movsb and insl outsb mov xor scas sbb and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli icebp add inc or test stos popf inc pop je pop lea stos stos sub clc xchg ret aam std or fs movsl cmovp pop mov in sub imul insb enter sub mov test xchg mov mov pop mov jbe pop ja cmp (bad) lods insl inc xchg dec or jp lret enter mov or or cli inc push cmp xor adc lds sub pusha orl jno (bad) and mov cmp faddp inc inc xor sbb adc pop sub repnz cmpsl cmp roll ljmp (bad) out sbb cmp pop aam (bad) mov popf cmp in pop cmp das sti xchg pop stos dec cmpsb push sbb fldcw lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec and (bad) cld aas imul push cmp notb jnp jge or jge sub xor or shlb pushl cmp ror mov inc sbb repz push xlat mov pop in dec cmpl (bad) lods int je mov les repz sub andl movsb jmp xchg fdivrs pop insb sbb dec ds jle sub pop cmp dec mov cmpsl pop outsb pop push in jae jmp insl xor arpl ret or loop mov push inc and xchg cmp sbb mov stc pop push insl (bad) mov ja xor fidivr popa sub (bad) rolb mov cmp add dec aad into popa jne cltd pop xor pop ljmp push and xchg dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec icebp enter imulb inc data16 xchg js fs adc mov jno dec in cltd icebp aaa xchg pop inc or pop add sbb fwait or (bad) push test cwtl cmp mov imull out adc or push mov lret dec jo cmp inc xchg push mov js jae inc jge sbb cmpsb adc movsl cld cmp push roll sti bnd jns dec es fbld push mov cltd aas push std shll lahf pushf outsl mov aaa (bad) push or inc out pop and (bad) push cmc fs imul or fnstcw popa lret mov inc add (bad) (bad) jmp sub iret js addl test test loope in idivl add sub icebp mov fisttpl movsb aas pop (bad) cmp push jb inc aad test popf in arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pusha pop lods xlat or cmp mov pop decl outsb int3 mov fstpl aaa push les sarl stc mov daa frstor cltd iret xor cmc or shrl push jbe xor pop das in cmp lea dec pop shll leave inc pop sbb mov aaa add mov push call push dec (bad) jnp clc shrl aad jno xchg xor pop lods nop pop inc and dec lea push inc arpl lods xchg mov insb sbb movsb push mov push daa out pop scas (bad) xor or xchg jo sub adc jecxz imul cwtl cmp (bad) inc dec xor xchg arpl push adc sbb cmpsl sub mov sbb add add sbb lahf sar ret sbb nop hlt and mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl fdivrl jns dec add popa popl outsb ret (bad) push movsl mov fisttp imulb icebp dec lret pop ss xchg xchg icebp dec jecxz dec jge cmp jnp and mov push retw lock (bad) notl stc inc sbb aad cmc pushf sub cltd sub in (bad) mov mov pop test loope jo xor xchg add mov dec lea lcall test loope arpl outsl insb adc or xor popa fdivl mov push popa in inc or add adc pusha mov stos fdivs cli repz cmpsb (bad) push stc dec dec sbb jne sahf push sti cwtl sub (bad) mov mov inc sbb fmul (bad) fsubp outsl (bad) cmpsb sub mov mov (bad) stc shrl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop xchg aas xor mulb push (bad) loope inc out lea dec inc jns ret call imul aas xchg insl dec cli adc xor rcll test not adc inc outsb adc adc xor adc aaa fwait out pop insl xchg fisubr and cmp xor pop push jl jnp xchg jl cs xchg inc ds pop mov and hlt cmpl shrb mov lods pop (bad) jns or inc push jmp mov xchg jmp in jmp jmp imul pop mov mov roll ja movsl dec outsb and cs push clc sahf js popa enter jecxz ja sbb int3 movsb mov or aam (bad) mov or in ljmp aad mov xor push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc and mov sbb fidiv adcb inc enter mov pusha jnp data16 sarl or adc xor xor daa mov xlat test inc ljmp and sbb cwtl cmp lds jecxz scas mov xlat insb push push cmp (bad) pusha fs cmp sbb pop hlt pushf xchg xchg jecxz ja xor insb fmul mov add cmpsl add sahf loopne push push adc xchg mov pop rcr adc jbe pop pop and lods xchg pusha inc push jmp dec add jne ror xorl push fmuls pop cli and scas lahf xor pop cltd (bad) jo sub dec adcl mov cltd (bad) cs push mov push push xchg ficomp inc negl cmp gs xor pop adc sbb ja mov push pushl xchg out pop fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jo sub inc jb aam mov jno cmc hlt pop or jmp leave xchg push (bad) jns inc es fbld push xor adc adc xchg (bad) push sub mov es mov pop stos popl mov pop movsl (bad) inc jne mov mov movsb call lret ja xor lret int mov js add lods add sahf (bad) mov mov pop into fcom adc jbe pop pop and lods mulb aaa mov inc xor das or xor (bad) stos mov movsb fldt inc imul and cltd inc (bad) (bad) dec pop popf push sti inc jmp jo sub jge pop addr16 mov imul fadds xchg jmp nop inc es das movsl jnp and aaa in push xchg mov (bad) mov jecxz ds shrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sti sbb jmp aad lea (bad) adc mov push loope xor aam and (bad) fidivr loop fwait and xor cwtl jmp rcr jb push mov outsb mov push inc stos xor scas inc pop in daa in clc icebp or or adc xor test lods sub add jbe jmp jne aad lds mov jns ja gs push push cmp cli bound or pop xchg sub and mov cltd cmp pop or pop lcall dec sub arpl adc adc or loop and jecxz aas test push sub out imul pop jg adc cmp ret xchg fstps enter inc pop and mov mov xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc aas (bad) cmp mov (bad) jmp into insl sub test cmp pop (bad) faddl pop mov jb (bad) cmp into push mov cmpsb test inc pop sub push mov cmp inc cmp scas cmpb mov das je xor fldenv jno scas (bad) sub mov cmp and rcll nop or pop or movsl movhps pop in cmp movsb rcl xor jo mov js add rorb loopne pop in dec (bad) jnp sbb pop mov mov movsl xor pop lods cli pusha and xchg dec lea and movsb out jmp sarl leave movsb push loope outsb cli mov scas scas xor sub mov repnz gs jl cwtl test (bad) pop insl je cmpsl xlat iret cwtl cmp fisubr movzbl je push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl js mov mov clc aas cmp bound xchg ljmp gs mov push mov fwait jmp add cmpb dec es pushf in jl popa fsubrl mov data16 pushf outsb mov xchg mov xchg icebp jno sub xchg mov nop or adc mov push inc je in cmp movsb rcl xor xor mov js add roll loopne pop in dec (bad) jnp mov adc cmp mov pusha and jecxz inc out lea mov cmpsb enter mov xorl outsb cli out stos mov xor and or xorl add ljmp std mov ret imul xorl dec pop movsl mov in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp movsb rcl lret ja xor mov js add aas add sahf loopne pop in dec (bad) jnp lea adc scas scas sbb and mulb push (bad) lods cmp lea arpl mov mov jle movsb push std adc mov xor daa mov pushw (bad) or jl cwtl jnp stos incb je pop std mov stos inc xor jno pop cmp adc pop sub adc adc add fild fnstenv adc aaa sbb movsb sar aad cld dec push mov fwait jmp add jg jns mov mov arpl push mov imul lahf addr16 pushf outsl mov xchg (bad) fcomps add test cmpb into xchg xchg mov nop or in dec sbb jne in cmp rorb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jbe fsubl mov js add sarb lahf loopne or push dec (bad) jnp mov adc xor and lods cmp mov adc jmp sarl mov push std adc adc pop out xor daa mov push mov fnstcw adc data16 incb je pop sti lock cmp fildll imul es and dec insb xchg stc pop cmp movsb rcl lret negl int in js add rolb loope dec rcll into sub mov adc jbe (bad) and cwtl mull add lods cmp lea xor ljmp add movsb push std or js push cwtl (bad) scas scas xor and or xorl test pushf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cwtl ret pop stc cmp mov sub js mov jno sbb (bad) dec adc insl pop aas decl out out pusha mov inc and gs fcom ret push mov sbb cli xchg fucom js cld inc dec fbld add imul sahf data16 outsb mov lock repnz mov lods xchg xchg mov jb daa adc sbb gs stc into arpl movsb push mov jecxz sub int in sub or mov test loope mov push dec sub rorb dec pop jbe add and div pusha jg (bad) lods push sbb pop cmc lods jle xor xchg ljmp pop jg push cld or xor xor sub sub cmp jno movsl inc insl sbb push std push ret cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp test imul adc decb push mov pop in cmp clc pop xor repz loop inc (bad) xor out fnsetpm(287 jno push popa lock roll aaa sub dec (bad) xrelease mov add pop jmp lahf lods cmp popf add and inc xor shrl sub es or dec push inc jns scas scas mov jp icebp sbb (bad) xor fdivl (bad) pop insb je dec cld mov repnz cs jg div imul rcr mov sbb sti dec arpl add out js and inc adc sbb aad call add fwait leave shrb jg jns dec fs arpl scas push test addr16 (bad) sbb or sbb cmp loope imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmp rorl push cltd add or clc pop mov movsl rolb mov xor ret int3 (bad) jns adc mov cmp cltd mov (bad) insl stos lea push jl loope dec and mov insb mov dec gs and addr16 shll sub add movsb sub push inc jg scas scas or cwtl icebp in subl and xor out stos sub insb je je mov pop push mov leave inc cs in ret push inc xchg or dec pop pop imul cltd aas in cmp pushf pop cmp rcl sub jno cmp push add dec arpl sahf cmp pop in and jnp in pop jns mov pop mov pop lods cmp and (bad) cmp mov fs jecxz and pop cmpsl enter mov (bad) mov outsl cli sarl inc out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ret scas xor xchg hlt lock inc or in xor pop stos decb jne dec xchg (bad) cwtl xchg cmp xor negb movsb (bad) adc stos pop cmp mov mov dec push dec dec loop inc add xchg push jge mov jb stos (bad) mov mov (bad) hlt mov xlat push das cmp jle iret in dec es bound cli add mov sbb pushf pop int3 out out das or pop inc test rolb sar push or insb dec pop xchg inc insl and cmp es xor jno pop mov mov push push add push jp sahf pop fistp out xlat jnp repnz adc or pop mov pop lods mov and sarb xchg lea mov and dec cmpsl enter mov jle movsb push iret push cli jns inc out gs scas xor and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push jo push or (bad) xor or incb je stc mov mov movsb sbb xchg cmpsl xor mov int es adc imul sub add ror dec les lock mov cmpsb push add dec inc test push imul ror (bad) push mov adc lods mul jge (bad) and out cmp lock leave jmp lahf mov jle cli push std add sti adc out xor jnp and jno out push adc outsb data16 idiv inc leave sub cmp fildll sbb nop minps cmp mov dec scas sti dec push rclb mov clc fdivs ret pop cwtl jae aam mov aam (bad) or das jnp jg stc sahf dec es iret arpl ljmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pushf outsl frstor (bad) (bad) mov cmp iret xchg pop call or out int3 pop movsl push xchg inc jne insl cmp mov lret ja fdiv insl mov js add mov push ljmp mov shrl idivl add leave lcall adc das add pop mov popa arpl pushf xor fsubrl sub jle enter es jg sub sub lock adc popa out adc aaa ret cmp mov rcrl repz mov jb or adc cmp pop or jae into mov mov inc adc les daa inc lods mov test popa inc rorb and aas push jmp add aas xor shrl pop es das lea jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp shrb xchg sbb data16 int pushf jl stos arpl daa mov scas xor inc std mov sahf dec or (bad) bound loope in sub adc jle jmp jl cmc lods iret daa pop push js cwtl jp std popa dec pop sub enter cmp and xchg inc add inc jecxz mov sbb push imul aam mov sbb cmpsl xchg js test test das mov divl push movzbl jle jl popa lcall out sbb (bad) std ljmp pop hlt dec and mov xlat insb push push aas xor add sti or loop mov hlt inc adc mov sbb js test mov xchg pop mov (bad) jno sbb stc sahf adc mov das adc xor aam mov mov jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp outsb enter dec pop xchg je xor sub push fbld cltd fnstenv dec data16 jbe notb mov pop or cwtl jl fidivrl jmp xchg mov xchg inc inc arpl xor xor sbbb pop or out mov xchg cld xor pop adc fildl adc movsl jo call and les ss popa pop xor es cmp loop aas xchg or loope mov mov jb cmpsb pop test jg push adc mov push jmp inc ss dec out cld lahf add pop jns jge inc test mov jle jmp cmp cltd iret xor dec xor jl out imul push jne sbb aas push or je decb inc inc inc jne pop add mov aaa adc inc jmp out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jb sahf out ds jns dec jbe mov jle ud1 push xchg push jp enter outsb jecxz (bad) in xor ret inc repnz cmp movl xor addr16 add cwtl sub lret movsb ror jbe and dec adc roll leavew mov jl dec pop std mov cmp mov mov jne and sub into xchg pusha and (bad) ljmp adcb jne aam (bad) movsb leave inc jno bound lods in cmp mov shll inc in push ljmp push testb pop fildll fs cld cmp pop mul sbb or cmp shlb sbb mov cmp rorb pop add mov ds shrb test aam nop push dec inc jp loopne jge mov jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) xor and lods mov dec xor and fdiv dec je (bad) movsb stos in lods shrb xor cmp cltd jo add sub dec out ljmp rolb adc mov pop sbb jb std cwtl adc in fnstenv inc push jl test adc fisubr push decl aad je or loope inc mov xchg das stos sbb jnp pop cmpsl into fnstsw mov jmp outsb xchg sti adc cmp dec es fnsave jle sbb adc sub xchg call imul in sub int nop or jnp and sbb cmp movsb xchg mov lret pmaxub fildl (bad) mov les lcall pop int aad push jbe pop ja sub lahf add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov add outsl ja mov pop jbe popw lods movsb push clc or mov daa lahf dec shr jnp pusha in push aam adc inc outsb and push sub sbb mov push test in push xor (bad) (bad) push jl das lret inc jne test (bad) mov cmpsb jecxz mov fistp and lods and call movsl sbb pop mov sub cs and pusha fs insb inc push rol or lods fnsave imul inc fisubrl cld jne lahf adc pop js jl pop and xor iret jnp jmp dec pop fnstenv sub pop pop cli pop imul jno jg stc dec push push aas dec or and mov lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec sbb mov iret andl fucompp mov cmp or das push es or add popf xor (bad) out imul out push or (bad) insb gs sub pusha ja adc enter dec dec enter mov add fcmove (bad) aaa and hlt jno mov pop call pop mov xchg loopne outsl ret mov bound subb and mulb jle mov pop loop xchg sbb cmpsb lea jo insb or outsl mov es mov in pop daa lret and xchg add dec jb jl inc add adc xchg xor cmp jp iret cwtl cmp mov iret xor jmp cmc jno inc dec pop (bad) push push and or push repnz das push scas mov sbb push add repnz add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc rorb pusha pop jmp adc mov jno mov adc ja sub leave cltd pop jne mov pop sub nop push jae pop ret aad lds sub scas leave loope mov xchg jg sub sbb inc ljmp sahf push repnz fs out cs lds add (bad) push xor mov xor pop inc movsb pusha dec cli ja or jg ret xor incl aad or and sub sub pop or cmpsl fwait es lret sub lcall js cmp cmp mov lret popa test (bad) cli pop mov in sbb stc sub dec lods call push mov push (bad) dec pop xchg or orl sub lret mov xor pop or push out fcmovb add sahf movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp cmpsb (bad) jo cltd mov or adc or push loop jp xchg push sub xor loope lahf into mov inc jle movsb push scas jl lahf gs pop fisubrl in dec cld xchg add dec popa add xor jno fwait sub add pop lahf in pop and icebp jmp mov popa rorl cmp xlat push xor sbb push push mov mov xor mov sbb pop enter mov loop xorl loope jle mov js xor out test jle out and push cmovo cmpsb mov inc outsb dec insl xor dec outsb cwtl adc and sub insb in pop fdiv sub jnp add pop adc cmp xchg jne jb fucomip pop and pop push insl cmp pop cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl out push push cs sbb inc mov aam mov test cmp and mov scas sub call ficom cli lds in loopne inc cmp cmp addr16 add hlt lret xchg add js pop or icebp out cmpsb incb pop es push shrb sbb cwtl pop rcrb mov fistp add lods mov dec das push insl lods in into test rep les mov rcr lds lods fbld aas (bad) cmp imul mov (bad) pop and push bound lahf jmp sar je jo popf lret cmp js sub inc pop push lcall ljmp sub adc pop mov fmuls hlt sbb adc out jns adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp nop cmp lds ja xor sbb mov and (bad) scas bound mov push in cmp adc enter push jbe pop jbe das shlb pop xor ds sub jbe pop xor xchg incb inc bound lods (bad) pop std or sti inc and inc sub inc in jne mov mov sarb adc fwait xor std int push and mov adc xchg jl mov or pop (bad) dec aam cmp dec push hlt xor mov xchg test add mov sti mov jmp fmull fstps out sbb dec es jle cmp adc and ficompl lea sbb mov cmpb into (bad) out or fldenv insb inc cmp (bad) inc xor pop imul mov fwait (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivs xor add mov daa insb lret lret jbe std mov mov movsl vpshuflw mov push jg push push mov add xchg add rolw push cmc mov bound inc sub xorb daa and jno out push in (bad) fldenv or adc add mov fs fdivrs hlt fwait cli add int3 (bad) mov scas xor sub sbb pop jnp mov mov push xor out bnd inc sbb pop fadd jl mov ja mov or inc cmc in int3 jae mov mov in (bad) and (bad) in addr16 out gs lds jl lds jle pop ja mov pop mov add out cmc xor sbb jbe add or adc lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xor inc mov loopne fwait push outsb imul mulb add push jbe push cmp push aad imul pop jae jge sub insb sub mov fwait sub lret call pop loopne loope inc push lods pop imul ds out xor xchg lock jle inc jg pop in sets dec repz loope and xor stc pop jo fwait out jecxz (bad) sti push jmp mov adc mov lret inc rcll aas xchg call jnp cwtl in sub pop lea pop inc cmp cltd adc xchg add sbb mov jg outsl adc cs imul mov addl push ljmp sarb (bad) dec and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) sbb sbb sub leave pusha jne add jp mov movsb mov mov xor in bnd inc adc data16 jb addb mov dec jmp jge stos (bad) ja add cmp jbe les ds in xor aad pop sub adc sbb push adc fistl fnsave fldcw sub sub add adc lea push sub arpl repnz xor jp imul outsb aad push inc inc outsl jg stc das pop sahf je ret cltd inc stos add aaa push pop xor subb pop imul imul mov and push jmp mov pop (bad) jmp movsl repnz mov sti pusha dec ficompl pop es (bad) push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push dec inc jb les sub cmp jl in mov lret jno sub xchg (bad) repz cmpb cld adc mov pop in test gs subb push sub lahf adc adc or dec ja lds dec pop push inc ds aas mov imul sbb inc ljmp jno inc push out fmuls push mov fidivr out mov gs push sub in sub aaa adcb sub jp xchg xchg clc mov xor mov add pushl mov xor movsl bt into js pushf out sub adc fist call and inc ja leave stos mov scas iret dec pop insb xor mov and adc jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc lahf add fnstsw and lock int xor jno inc push out fmuls push mov fidivr dec sub jge dec jns frstor adc jg cli xor inc mov scas or add xor in clc xchg subb push loopne pop lahf xlat aas fstpt lods or sti add adc jo icebp add out jg jne in hlt dec jp cmc gs add xor insb ja sbb lods jle lret sbb xchg xchg pushf shrb insb mov dec insb and (bad) outsb shlb xor cmc out enter into addr16 xchg sub sbb (bad) add adc es cmp out stos (bad) mov push mov push mov add push ret cmp push out fnstenv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl ret imul out fmuls jne std icebp pop or stos fsubrs inc repz cs mov repz inc popa adc xlat outsb jg push sbb jl repnz imull push add leave lea fcom pop jmp mov dec xchg jp mov and adc xor xchg and mov xchg cmp sub mov dec adc pop movsl enter sbb add out inc sub addr16 xor ret mov jmp sbb ret dec xor sahf repz adc jle jnp std jnp add (bad) or outsl jge hlt xor jb fstps xor daa jbe and lock mov (bad) mov das dec test outsb mov ret or mov xchg sbb fbld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call scas stos xor pop ficompl dec mov mov repz inc popa adc xlat outsb jg push sbb jl repnz imull push add leave lea in negb icebp xor scas mov dec jmp jnp cwtl jecxz cmp mov pop inc cmp lahf add ficom or fsubs inc dec jp stc mov jg imul rclb pop push fidiv sub sub fnstenv xor mov and sub shlb std in dec pop mov enter in mov push stc addr16 push or lcall dec in xor in xchg mov dec dec fisubl daa push negl repnz ja xchg lds movsb add xchg inc nop ficoml push pop jbe cmp adc loop pop xor sub (bad) sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aam mov ja test and and scas jno nop adc icebp dec out clc test subb and jb lock mov dec ds mov dec xor jl inc pop push iret dec mov inc push out push mov hlt scas or jl jns or mov adc divl call daa fdivrs dec sbb pop aas or jno in cpuid sti das divl bnd icebp pop loope cmp roll jo imul (bad) mov mov (bad) sub insb cmp repz mov xor cmc out shrl addr16 mov pusha push clc leave inc inc cmp sub sub ret xlat (bad) cltd insl jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sarb (bad) sub inc lret push fbld jp icebp lahf repz xor pusha notl les ljmp fldlg2 stc dec ds fnstenv pop std jmp scas sub cli jnp and das lahf jp mov nop test xbegin or imul pop stc (bad) inc ja loopne pop loope sub and adc xor xchg and stc mov xchg cmp sub mov dec adc pop movsl enter sbb add out inc sub addr16 das mov (bad) or pushf es sbb ljmp adc arpl pusha outsl xor dec push iret pop ret push cmp push nop arpl les jo add push and sar nop cmpl jg movsb (bad) rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov rcrl sbb add pop aad test imul es push xchg test out and jae in pop repz mov repz sub (bad) outsb bound pop sbb or in test rcr daa fdivs mov inc arpl mov jl test (bad) aaa mov test ja stos in je mov inc pusha sbb adc es cmp mov roll das mov push lods dec sub push ret cmp push out fnstenv aas adc fwait shll sarb shr dec and push mov loop push popa sub sarl xor mov mov add inc xor sti lcall inc in out in addb rclb xchg sub int fnstenv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg sbb imul cmp or xchg add fsubrs in sub mov pop and pusha push test or es jno fistl fnsave push clc popf sbb dec push jl jb les mov push lods iret fnstsw loopne fwait push jle insb add xor push xor jnp into sub or daa jle push mov add insb add ret lret mov and mov fsubrl mov sarb push sub cmp and and fdivl outsl xor shlb fcmovb sub push jp add jnp sub cmp jge (bad) jl pusha lds push out inc xor sti mov add lds rcrl mov loope lock out loopne push addr16 push push sub cwtl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp into pop xor sub (bad) sub je popf aam mov ja test and and scas jno nop adc icebp dec out clc test subb and jb lock xor push stos mov lcall rorl or add fs xor xlat movsb mov fisub dec fsubs and outsb jmp test push mov push ret jle mov push inc rcrl jae sbb mov adc call jl lretw outsl push out mov (bad) cld pop and popa pop mov sbb jne nop adc adcl pop js push ret inc adc xor test dec adc stc dec cmp sahf out push sbb push lret or or inc mov or or add (bad) ret xchg xchg sahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc push pop xor mov int3 movsb popf sbb fldt mov repz es lret pop inc hlt in adc aam adc xor dec into fiaddl mov inc pusha and cli jl aaa sbb mov lods sbb mov xchg xchg jmp repz add lea push xchg xchg jl lods imul sub adc call jnp cwtl jmp inc mov in mov and test and push jb stc mov imul inc in (bad) ds jp mov sub jne jmp into push xchg inc or inc or xor mov arpl repz add xchg mov repnz inc jp sbb sub xor push retw nop xchg lahf fdivrl xor mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc imul (bad) (bad) xor mov ljmp jae sbb cmpsb and lods cmp loopne sbbl cwtl call pop push scas in test dec cltd jns ss fmul pop sub addr16 (bad) ljmp aaa loop or adc mov pop xor push iret into fmuls rcrb ja scas inc cmp adc bound dec fs pop icebp decb dec xor fs sahf jae (bad) mov lods add dec dec inc mov fldenv xlat mov sub lcall pop jecxz (bad) daa inc sub lret sub hlt scas es pushf outsl stc out mov xor jecxz cmp out pop movsb cmc popa lds add cmp adc cwtl dec (bad) mov nop xchg pushf fdivrl pminub adc in imull movsb inc ja mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp out test jae mov jne sbb in mov and ret xchg pop mov and push jb stc mov imul inc in (bad) ds jp mov sub jne jmp into push xchg inc or inc or xor mov arpl repz cli add ffree xor stos daa scas outsb pusha cmp in dec add sbb dec popa (bad) (bad) mov std jo cmp or (bad) je mov jo xchg aad movsb adc jmp jo mov cmpsb sbb pusha sbb xchg imul and and ret cmpsb mov test bound jl xchg jg add fs mov cld push xlat push jmp sbb lock add xor shll iret js out in push and outsb jno xor push dec adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rcrb mov jg cld and je flds jge and add mov (bad) (bad) (bad) mov or fstpt xchg clc sbb or lahf push pop sub incb fisubl (bad) lret cmpsb ror push cmp sub cmp int dec mov jns cmp int3 popa jno xor rcrl cmc xchg cmp shlb aaa fnsave sbb lea imul imul loope movsb adc mov pop in sti inc ss mov div pusha push stc xchg or sub xor iret cmpsb mov xchg xor dec imul sti and adc lret jne lret sbb dec jg popa ret jne mov jmp xor xor inc mov xchg ljmp mov nop sbb jb (bad) outsb gs add dec in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call test out xor call movsb scas shrl jbe rcrl xchg cmp decl mov sub bound mov std mov push test add es cmp mov roll inc icebp xlat and or scas jae nop adc movb push les mov xor (bad) jbe cli jmp adc lods fisub outsb jno jle js loop insl cmp push (bad) lret pop icebp xchg push push dec or rolb incl add popl inc addr16 jns or mov and incb sub notb (bad) or pcmpgtd stos pop pop sub mov mov pop mov sarl pop lds jns xchg (bad) mov scas push bound les sub dec loop cmp xchg (bad) cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sti inc das sbb lods mov pop cmp inc ffreep jns addb loope mov or push movsl out js add cmp test inc or xchg das add sbb into test insl ja jo (bad) in mov push xor sbb jg and dec int js ja jb lds ljmp xchg in (bad) push and lods iret daa inc aam cmp xchg inc clc push les ss popf sbb nop xchg mov xor sti xchg (bad) pushf mov lret mov into cmp mov cld fnstcw mov flds fcomps cmpsl or stc cmp jno cwtl test push lds inc negb dec adc mov sbb clc (bad) sbb ljmp arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov ret add pop and outsl xor jae outsb (bad) push push cmp and xchg cs push pop dec inc mov lret mov int3 lods lcall fs lcall push cmp out and mov (bad) std adc xor pop hlt pop jle hlt jae cmp add out push pop jne test push insb in imull outsl add leave movsb mov insl aas push cmp pop inc in or xchg or out jne sbb fbstp in dec xor mov je jae mov jg jo scas lret sub fwait bound mov fcmovu pop xor addr16 ja aad lcall push lock mov push mov fidivl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc and xor mov cmp dec inc add sbb jge repnz mov jno test test dec cmp pop in call or xor movsl bt into js lahf out sub adc fist jmp xor cs inc ja leave stos mov scas iret dec pop insb xor mov adc inc rclb rcll inc sti push (bad) sahf push mov das pop jb pop add add mov add jecxz test mov cmc xor xor popa jp imul ds and sub out jns xor lock or xor dec xor popf ret loop push jo lret cmpsl xchg fcmovnbe lods lret xchg hlt and or lahf and push pop jmp shr movsl call cld and roll mov mov (bad) xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push or add xlat scas imul nop jecxz adc test daa pop ret rcrl in push in mov add mov out sahf cld fnstcw mov flds fcomps cmpsl sbb test js shlb ds insb jo lods in lods dec sub xor test sti bound bound dec lock adc add dec xchg ljmp pop aam sub jo imul (bad) mov mov inc (bad) jb insb loope in je ja int je lahf ja in mov cmp in insl (bad) lods enter xchg sbb fsts mov and push fs je mov pop jge cmp cs adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call repnz fxch push nop dec js jo inc adc sbb cltd pop sub pushf xor ret das pop inc push ljmp out faddp das popa adc pop and jae aam cmp add inc sarl adc loope or mov (bad) xchg stc sbb ds ja sub clc add es (bad) mov insb ljmp out hlt push cmp xor in push sbb loopne push or add cmp cld addr16 popa lret cmc (bad) sti push jmp mov adc mov lret inc rcll aas xchg call jnp cwtl in sub pop lea pop inc cmp cltd adc xchg add sbb mov push in inc notb mov addr16 mov out dec jmp testb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) addr16 mov xor (bad) jbe cli jmp adc lods fisub outsb aam pop xor (bad) cmp push or repz daa adc test mov popa lret mov adc in test inc call inc ja fild mov movsl jecxz pop in mov mov mov pop dec and or cmp scas cwtl cmc mov insl jae inc sub xorb daa and jno out push in (bad) fnstenv and lret incb je sub (bad) notb divb dec xor dec sbb inc jmp dec sbb je push fsubrl push mov fistp daa cmp and ret lcall push cmp mov mov rcrb addr16 cmp jno pop jecxz pop jecxz or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call iret adc jg jo sbb cmc hlt sbb add das int3 insb dec add test sbb aaa xorb call lea inc in loope lea shrb and cmp int3 loopne aad cli push push aaa movsb sbb imul in addr16 out addr16 lods push add aad mov mov jle inc fs icebp imul or popf push (bad) fildl fldenv push std mov movsb push das add out pop add add xor push mov (bad) (bad) jmp outsl aad pop repnz popa rclb adc lcall add popa (bad) (bad) mov std jo cmp or (bad) je mov jae xchg aad movsb adc jmp jo mov movsl sbb pusha sbb (bad) add adc push cmp and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec lods stos mov inc pusha and or push (bad) into inc add push jmp mov js ja jb mov add ret cld fdivrs sahf ljmp pop jns push dec add sbb sub cld and je flds jge and add mov (bad) (bad) (bad) mov or fstpt xchg clc sbb or lahf push pop sub incb fisubl test cs mov stos xor outsb pop in out dec jns out and sub int3 popa push jp cmp dec jl mov and mov cmp negl mov push fisub and jo cwtl std push xor mov in cmpsl and test gs xchg dec inc pop or ficom pop jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsl ret push mov cmp fstl push enter add imul call add jecxz mov ret push jg ret bnd or and (bad) push sub sbb push hlt cwtl sub sti mov adc je push lahf scas mov pop daa daa ja fisubr addb xchg lds movsb add repnz lods aad inc xor fsts jmp aas lea and jge enter in insl insl inc pusha and or push (bad) into inc add push jmp mov js ja jb mov add ret cld fdivrs sahf ljmp pop jns push dec or or pop jmp dec or pop out inc lcall sbb jno add daa xor imul cli call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jecxz ret ja sub decb scas sub lods es sbb cmpsb rcr adc dec jnp jo xor icebp jmp repnz (bad) jnp sub cmp jle (bad) jl pusha lds push out inc xor sti mov add lds rcrl mov mov mov push push aaa movsl add pop loopne ss add pushf adc mov gs pop movsl inc push jae iret movsb mov mov push jle movsb push pushf jl mov dec (bad) faddl fsubl dec and test cmpsb inc inc or xor cmp pop (bad) jnp mov or cmpsb leave and fadds mov push and in or in cmp shrl cmc pop xor mov xor addl mov and outsl aad aad push jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out pop or push adc dec xchg lea xchg push dec ja fwait lret scas aam push xchg add popa add pop ror xor dec in cltd and inc data16 cmpl cs ret (bad) stc push xor mov dec xor or dec push jl jns cmpsl mov or insb or sub rcrb sub pop adc sbb xchg add stos jae xchg clc or or adc or popa or fucomi push mov xchg shlb push jne jmp cmpb int3 jecxz sbb lds cmp (bad) insb data16 pop lds leave mov inc jnp mov lret jne inc add aad mov sub shrb push clc loopne clc out sub adc shrb aam insb dec cs cld push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl ds testl test inc popa jle jmp scas aas xor xorl mov cld pop jmp insl or addr16 xor movsb inc insl and push cmp mov add fimull jno addr16 (bad) movsl push jae sbb in jb cmpsb add rclb add fisubrl push pop lods call pop decl aas (bad) je ror jno lods into jno sbb fnstenv jg ficom ficom xchg and ljmp cmc and xor dec push leave movsb cmp push xor pop ret rclb daa out (bad) scas add out addr16 stos mov dec pushf (bad) call iret inc xchg push xchg jbe cli pusha popa xor adc arpl add loope dec mov and mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xor jb dec or mov push cmp mov (bad) in fiaddl mov loopne hlt sbb es mov ret packuswb lahf int3 int3 jmp lds jecxz pop cmc dec repnz pop stos cmc jecxz mov mov sub push ds xchg xchg mov dec insl in mov ja cmp testb push incl push repnz test xchg jecxz jno mov jo sbb lods mulb and xchg loopne aaa (bad) and loope xchg dec dec jne cmc mov pop push sub or leave cmp push inc std xor lret pop das fiaddl imul pop xchg insb gs jl push adc and mov mov shrl loop lods (bad) dec hlt insb push pusha dec pop iret or orb sub jp movsl mov fstl mull xor icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lods push inc in test xor clc dec xchg pop mov mov test dec aaa incb in or dec test pop inc ret lods jmp dec mov cmp or xor dec clc popa cmc sahf push xchg pusha data16 out cmpsb jno lcall in cwtl fistl mov pop and je jmp dec (bad) out jnp cmpsl lods adc das ja (bad) and dec jmp mov adc ss or in cwtl and mov out mov (bad) bound sti adc sbb sub mov sbb push jo cli adc clc jecxz or inc hlt pop cmp mov dec lds push dec pop lret sub ds push repz dec insl lret popf stos xlat ds and fbld adc fsub imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec loop mov aam rcr adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov dec adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall or ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall int mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmp fisubr inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xchg xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl and or xorl test incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or xorl test incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp out (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jmp sarl leave movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov push push inc repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor in negb xor (bad) stos and out jns pop (bad) ds mov sbb or sub mov xor dec enter xor jb and test add pop xchg or sahf stos lahf lods jno dec jae cmp xchg dec pop bound out rcl push push scas (bad) mov (bad) cltd jae in cmp fs cmp aad adc push je mov cld push mov (bad) ret mov pop push mov fsubl cmc lahf enter dec rcl je rolb outsl mov into xchg xchg mov nop or adc movsl mov add pop in cmp shrl cmc pop xor jno repz cltd and xchg push add xchg call jnp cwtl mov sbb and (bad) dec sbb nop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc dec xor xchg dec inc jle aad pop cmpl std es adc scas xor daa mov inc mov bnd and xorl test incb cmp pop std mov cld xor loop stos fildl dec adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sbb aam mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl rorl adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jo mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec pop movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sarl leave movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop loopne dec (bad) jnp (bad) mov cmp jbe push xor pop in mulb pop (bad) lods cmp lea and xor int3 jmp sarl leave movsb es or cli adc out xor daa mov cltd icebp cwtl repnz test incb je pop std mov stos inc cs sub sbb adc pop sub adc sbb inc sbb clc incl xchg ljmp fs mov push mov fwait jmp sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec das dec fbld push mov xchg data16 js mov xchg (bad) push or cmpsl cmpl imul mov dec dec movsl movhps xchg stc pop xor not xchg lret and mov loope js sub rolb loopne pop in push (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo jl and add outsb mov or cmp fisubr imul adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp (bad) push in cmpsb (bad) and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov xor icebp push sbb sbb enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov insl sub scas daa je dec arpl es cmp dec inc (bad) xor gs arpl andl inc jge sbb aam mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul xor and sub stos mov je xchg inc pop (bad) cli adc cmp hlt or pop decl sbb rcr dec in add insl add (bad) lods mov test loopne pop in dec (bad) jnp mov outsl push and xchg xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov cmpsb stc add out mov jge,pn dec xchg repz (bad) push push pop xor es insl push jo push add jno incb je pop std mov stos inc cs test movsl mov lret mov lret scas lret std push and push or aas sbbl dec inc xchg movsb jg adc pop mul dec (bad) lahf adc mov mov rclb aas into xchg push inc aaa mov dec lea and xor enter mov mov mov sub pop pop fidivl data16 push arpl inc mov popf xchg je ja or cmp sbb cmp add cltd xchg mov cmp bound xchg ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call leave jg pop xchg xchg add rclb pop aam (bad) inc out (bad) adc jge insl inc cmp std and inc cltd subl ja (bad) jnp lret mov cmp loopne xchg and push mov loop xchg cmc es fcmovbe ror jecxz ja adc lcall lds add push mov test jae add cli cli icebp and add jae jge adc mov aad pop (bad) repz std divl sbbl or clc sub mov cmpsb cltd mov jg out dec mov push pop xor daa mov cltd icebp jo or insb aaa push ds push jle sub mov inc in push imul scas test xor xor xchg hlt dec mov and push xchg gs jl cmp arpl mov add mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl (bad) and pop mul dec (bad) lahf adc mov jae xchg xor xchg cmpsl (bad) mov jne mov mov test (bad) stc (bad) ljmp adc xlat pushf mov xor (bad) (bad) icebp fadd inc lods xchg mov add arpl sbb adc adc cld ror sbb jmp int inc cmp sbb adc pop cs mov jg insb fidivl iret outsb mov xor aam outsb xor mov jl lcall mov call push divb in rolb (bad) jo push adc or movsb or lods jae push dec out jo (bad) sub into xchg xchg mov mov and sbbl adc push enter mov call add gs (bad) lods inc int hlt outsl (bad) fistpll shlb mov call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ret or addl loopne add andb sahf icebp divl (bad) sbb or jmp sarl jmp imul push and lea mov jnp nop or or dec push arpl mov dec lahf mov test sbb mov adc movsb add mov and stc ret rcr inc fwait fs arpl mov js and lds fwait shrb pushf dec divl inc cmp in push movsl xor shrl jle movsl add add fs loop popf pminsw sub and add mov xchg push in mov add arpl sbb adc scas fimul fldl sbb xor int adc fsubrs ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp icebp data16 jecxz sbb inc sbb xchg jl loop push mov cmp js loop pop mov push dec xor push mov imul push pusha rcll lods es xchg call lods ljmp (bad) es fisubrl and fcompl jecxz jp pop rcl xchg (bad) mov ds movsb pop xor mov insl popf data16 lods mov in xor xor popf pop jns pop mov mov jbe pop jl push mov add int3 pushf icebp inc fstl gs cld rolb push fs pop call (bad) xor into loopne lret imul ja push add mov mov aas xchg or xor jo push inc popa sbb cs dec in andl xchg adc cmpsb test dec pop mov mov jnp std data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmp repnz mov ljmp or lds aam roll mov cwtl xchg mov push push daa iret cwtl stc ds lods in and xor cwtl mov mov cmc (bad) leave loope sbb xchg mov adc leave movsb push in dec test dec mov lahf rcrl rorl mov scas aas mov ds pop or pop pushf jge inc lods ret push push and mov push call adc push sub pop shrb cmc lret mov jns (bad) stos scas ret (bad) loope test les and xchg dec cmp js mov data16 jo xor dec mov fild fcmovne push ljmp push and addr16 lds ja fldenv sub cmp pop jnp loopne daa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out insl mov jns lods mov stc xchg (bad) in daa mov push pop jle les mov cwtl sbb nop call call pop leave fldenv pushf push mov cmp fimull push icebp xor xchg mov mov ret lcall and xor mov xchg pop adc dec ds pop mov movsl vmwrite pop (bad) stc sahf cs mov push es in xchg push adc aad lcall jecxz stos mov or (bad) push in xchg xor imul leave xor push dec pop cmp ret push repnz and repnz cmp lock rcl iret mov push cmp xchg sub inc mov pop fstpl mov dec lods pop cltd int3 jbe sub dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp movsb (bad) insb test mov pop inc xchg insl outsl mov jnp xchg bound test pop sub lahf fcompl sbb shr inc ja aad dec lret shlb mov dec mov mov cwtl loopne cmc add xchg and (bad) cmp xchg fmuls xchg outsb mov and pusha pop mov fidivrl fdiv inc sbb stc pop cmp movsb rcl lret ja xor scas inc scas aaa jmp adc loope lret xor out arpl jns add popa or add xchg adc and xchg xchg xor sbb sub push shll fwait mov loop push inc out xor daa mov cltd icebp jo sub adc sub sti loop xchg mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall movsl (bad) (bad) xchg and pop fs pop xchg xchg inc adc stos mov pop pushf outsl jp push pop (bad) xchg mov dec sbb mov (bad) jnp mov adc jbe pop xor pop (bad) movsl xor cmpsl rcll cmp (bad) sub jb daa dec or sub sub subl stos or sub cmpsl xor adc adc cwtl cmp fisubr inc negl cmp adc pop sub adc sub adc pop inc sahf aas xchg ds test fs mov push mov fwait jmp jge std fsubs lret or dec xor and testl mov xchg (bad) push or sub xchg mov nop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov sub rolb enter xor lods push cld mov mov js add rolb loopne pop in movsb xor push push jmp jmp and int mov stos (bad) lods cmp lea and xor enter mov aaa sub shll pop iret and out int push ret test inc sub repnz adc stos incb je pop std mov stos inc jge,pn mov movsl push xchg ror lods popf mov pop cmp movsb rcl lret ja xor mov js add pop pushf scas cmp add xchg jbe repnz xor loope xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push popl sub lcall aam inc insl imul std sbbl stos inc das mov inc negb pop sub nop mov mov dec adc xchg sarb add mov jns jae inc jge sbb aam mov push mov fwait jmp sti xchg jg jns dec fimull arpl push mov sahf sahf iret pusha outsb dec in mov jp icebp xchg mov or xchg sub dec iret std cltd inc dec fs dec add je aas sub cmp in lea mov into es inc xor jmp inc mov add push xor add cmp stc mov fcomi xchg cltd push mov dec les stos jg push sbb adc movsb xchg in cli fdivr or ret lock jbe mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop jmp out add out push or sbb mov jae jae and adc mov (bad) pushl stos movsl (bad) adc xor (bad) mov or (bad) and sti aad mov jmp mov dec je addr16 and data16 adc pop repz jle add and aas jl jge dec mov (bad) std adcl sbb aas andl jg sahf xchg sarb fnstenv pop outsl or inc inc fcomi vpaddsb sbb (bad) inc lea lahf pop iret inc xchg mov (bad) nop cmc pop into das ja jecxz mov cmpb movsb (bad) out lock jge xchg cmp pop mov xor push lods test ja xchg repz mov test dec dec faddl out insl sub ss fsubrs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg mov mov aas test cwtl cmp ret push dec outsl pop or adc js ljmp fidivr sub mov pop hlt out in test fnstenv add pop in hlt push push aaa movsl push jp sbb push (bad) in add mov out scas enter pop push push movsl pop das mov popa out jmp push shll jp mov mov inc and jbe int in cmpsb pop cmp rcr push repnz (bad) icebp popa flds inc or loope pop add mov xchg xchg mov lahf mov in adc inc pop jne test aad add cs pop jae stos ret or push imul jo add shl out sti or and aas dec pop addr16 (bad) pushf stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov cld or and outsl jl xchg movsl mov iret fucomip sti or and ds pop addr16 (bad) popf stos mov sti or and aas dec pop push lods mov std or xor pop imul leave xlat in decl push pop insb jns xchg mov in add and push data16 lods vlddqu jns stos ret push push sub inc push popa outsl jl cwtl movsl mov into fucomi testb sub jo mov fucomp clc add dec push fs lea in add push pop insb jns xchg mov in add sbb aaa inc push pop insl jp xchg mov out add sbb bound mov fsubr testl push arpl mov fucomp add or and ds pop addr16 (bad) lahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp icebp add push pop insb jns xchg mov in add sbb ss push pop insb jp xchg mov out add sbb aaa inc push pusha insl jnp xchg movsb mov int call sub inc push popa outsl jl xchg movsl mov into fucomi testb sub inc push gs mov fucomip cli or pop push stos mov cld or and pop push test (bad) jecxz decb daa xor dec pop push test (bad) in add sbb aaa inc push pop insl jp xchg mov out add push sub inc push bound mov fucomi testb push sub inc push bound mov fucomp clc push adc cs push fs mov fsubrp stc push adc das cmp orb fsubrp stc push adc das ds pop addr16 (bad) pushf stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl decb sbb xor dec pop push test aad lock sbb xor dec pop imul (bad) aad repnz push pop imul mov in decl push pop imul mov in decl push pop insb jns xchg cmpsb mov into fsubr testl push arpl mov shl in sti or and aas dec pop addr16 nop popf stos mov sti or and inc dec pop imul (bad) aam lock or and imul enter decb sbb xor dec pop insl jp xchg mov call sub inc push popa outsl jge cwtl cmpsb mov into fsubr testl push fs mov fucomp clc push adc cs push fs (bad) pushf stos mov shl out sti or and inc push pop insb jl pushf stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsub repz push sub inc push bound mov fucomp clc add dec pop addr16 nop sahf stos mov std or and imul enter decb daa xor dec pop push xchg xlat out add sbb aaa inc push pusha outsb jnp xchg movsb mov int3 (bad) stc adc aas push insl test xlat in add push pop insb jns xchg mov out add sbb pusha outsb jnp xchg movsb mov int call sub add fs lea fucomp clc push adc das cmp push gs mov icebp decb daa xor dec pop imul mov in decl daa xor jns xchg mov in add push pusha insl jnp xchg mov out add sbb pusha outsb jl xchg movsb mov int3 (bad) cmc add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp popa jno mov fsubrp cli pop adc pop data16 mov in cli pop adc dec pop push lods mov std or and push xchg xlat in decl push pop imul mov in decl push popa outsb jl xchg movsb mov int call sub jo mov fsubr testl jg cltd cmpsl mov iret fucomp clc add dec push arpl mov fsubrp stc push adc das cmp push gs lea fsubrp cld or and aas dec pop push stos mov cld or and aas dec pop imul enter decb sbb xor pop imul enter decb sbb xor pop imul (bad) aad lock sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jns xchg mov jnp lods (bad) add sbb popa outsl jl mov fsubrp stc push adc das cmp push gs nop popf stos mov cld or and push lods mov decb sbb xor dec pop push mov fucomp clc push adc xor dec pop data16 (bad) popf stos mov sti or and aas dec pop push lods mov std or xor pop imul leave xlat in decl push pop imul mov in add push bound mov fucomi testl push arpl lea fsubrp stc pop adc das cmp orb fsubrp stc pop adc das cmp orb fsubrp stc push adc pop addr16 (bad) popf stos mov decb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall daa xor push pop imul mov in add push pop insb jns xchg mov out add sbb push arpl mov fucomp clc push adc cs push fs mov fsubrp stc pop adc xor (bad) nop popf stos mov decl daa xor jns xchg mov in add push pop imul mov in add sbb pusha outsb jnp xchg movsb mov int3 (bad) cmc add sbb popa outsb jl xchg movsl mov int call sub inc push bound lea loope cld or and aas dec pop push lods mov std or xor pop imul enter decl daa xor jp xchg mov out add sbb pusha outsb jnp xchg mov in add xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lea shl out sti or and inc dec pop imul enter decb sbb xor dec pop push test xlat in decl push pop imul mov out add sbb popa outsb jl xchg movsb mov int call inc push arpl mov fsubrp stc pop adc das cmp orb loope cld or and aas dec pop push stos mov std or and imul (bad) aam out cld or and imul lret (bad) hlt add sbb popa outsb jl xchg movsb mov int call sub inc push bound mov fucomi clc add dec push fs mov fucomp clc push adc cs push gs lea fucomip stc pop adc das cmp jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl lret fsub repz sbb aaa inc push pusha outsb jl cwtl cmpsb mov into fsubr testl jle cltd cmpsl mov rcr jmp push adc das cmp pop data16 (bad) popf stos mov sti or and aas dec pop addr16 nop popf stos mov cld or and ja fwait test in cli or and inc dec pop imul leave (bad) in decl push pop insb jp xchg mov call sub inc push arpl mov fucomp clc add dec push arpl mov fsubr testl pop data16 mov fsubrp stc pop adc das cmp pop data16 (bad) pushf stos mov sti or and ds pop addr16 (bad) pushf stos mov rcr in cli or pop data16 mov fucomip sti or and aas dec pop addr16 nop popf stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov decl daa xor js xchg mov in add push pop insb jns xchg mov out add sbb popa outsb jl xchg movsl mov int call sub inc push bound mov fsubr testl push fs lea loope cld or and imul (bad) aad lock or xor pop push test (bad) in add sbb ss push pop add mov fucomi testb sub inc push bound mov fsubr testl push data16 mov loope cld or and push lods mov decb sbb xor dec pop push test (bad) jecxz decb daa xor push pop insb jns xchg mov in add push pop imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec xlat in decl push pusha outsb jnp xchg movsb mov int3 (bad) testb sub dec push arpl mov fsubr clc add dec push fs mov fucomp clc add dec push fs adcl or xor pop push test xlat call lret adc ds jb mov pop cs pop ja stos ret fscale sbb dec pusha jns cmpsb mov push aaa push addr16 mov loop adc aas push jo mov sbb dec arpl cmpsb mov xor jl stos rcr or cmp (bad) lcall sub xor pop imul lret repnz sub inc push gs xchg mov in cli or and xor inc dec push pop data16 ja mov mov call adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ds dec pop popa imul cmpsl scas mov jecxz hlt std add xor pusha push xchg pushf movsb lods mov enter ljmp daa xor inc dec push pop addr16 mov mov jmp pop and xor inc dec push pop outsw ja mov mov jmp adc inc dec push pop bound jge mov mov out clc add adc and xor pusha imul movsl scas mov enter in cli pop adc pop push xchg add enter jmp cld add xor inc dec push pop arpl xchg mov out testl sub cmp dec push pop outsw js mov mov out clc add adc and pusha imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl orl mov ljmp es aaa inc dec push pop bound jl lea ret int3 aam in clc add or sbb push pusha push xchg pushf movsb lods mov (bad) iret fsub jmp adc and push pop popa push jnp lea ror fnsetpm(287 in cmc std push movhps sub cmp push pop gs jbe xchg mov out testl sub cmp dec push pop push xchg pushf movsb lods mov (bad) iret fsub jmp adc es aas dec push pop bound xchg mov out testl sub addr16 orl fsub jmp adc and push pop popa push jnp mov ror (bad) in hlt std add xor inc dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jle (bad) cwtl mov int3 aam in idiv or sbb sub cmp pop addr16 orl rcr loope repnz add sbb dec push pop fs jne xchg mov in cmc incb adc and xor dec push pop outsw js mov mov out clc add adc and cmp push xchg fwait movsb lods mov (bad) rcr loope repnz add inc dec push pop bound jl lea ror (bad) jmp std add xor inc dec push pop fs jbe xchg mov in clc add adc and cmp push xchg pushf movsb lods mov (bad) iret fsub jmp adc daa das cmp push pop arpl jge mov ret fnsetpm(287 in cmc incb movhps sub cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call insl jbe xchg mov out clc add adc and add inc dec pop popa imul cmpsb scas mov enter jmp cld add das cmp push pop arpl xchg mov out clc add adc and xor inc dec push pop addr16 orl xlat loopne icebp stc add adc cs dec push pop bound jl lea ror (bad) jmp cld add xor inc dec push pop arpl xchg mov in idiv pop nop/reserved sub cmp push pop addr16 (bad) mov leave (bad) cmc add add sub orb fsubr clc or and outsb jge cltd test (bad) shl lock sbb imul shl icebp decl sbb cmp arpl (bad) lahf scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fucom out testl sub cmp dec push pop addr16 orl xlat loopne icebp stc add adc and push pop fs jne xchg mov out testl sub cmp dec push pop outsw ja mov mov out clc add adc and xor inc dec push pusha push xchg pushf movsb lods mov (bad) iret fsub jmp adc and push pop popa push jnp mov ror (bad) in cmc incb nop/reserved sub cmp push pop outsb ja mov mov out clc add adc and dec push pop arpl test mov in idiv pop adc and xor inc dec push pop outsb jbe xchg mov in idiv pop adc and xor inc dec push pop outsw ja mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec aad out clc add adc and xor outsl js mov mov out stc add adc and xor pusha imul movsl scas mov leave rcr jecxz cmc add pop adc and xor inc dec push pop outsl js mov mov jmp adc and push pop popa push jnp mov ror (bad) jmp cld add push push daa das cmp push pop fs jne xchg mov in idiv or sbb sub cmp pop outsw ja mov mov out clc add adc sub pop popa push jnp mov ror fnsetpm(287 in cmc incb movhps sub cmp push pop gs jbe xchg mov out clc add adc and pusha push xchg pushf movsb lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov jmp adc and push pop popa push jnp lea ror (bad) jmp std add xor inc dec push pop fs jbe xchg mov (bad) fucomip lock add adc push pop arpl xchg mov in idiv pop adc and xor inc dec push pop outsw ja mov mov call adc and xor pusha imul movsl scas mov enter ljmp es cmp push pop arpl jle (bad) cwtl mov lret aam in idiv or sbb sub cmp pop outsw js mov mov out clc add adc and push pop arpl jge mov ret fnsetpm(287 in cmc incb movhps sub cmp push pop fs jbe xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fucom out testl sub inc dec push pop addr16 orl xlat loopne icebp cli add adc dec push pop arpl jl mov ret fsub in idiv pop adc and xor inc dec push pop data16 ja mov mov jmp adc and dec push pop fs jne xchg mov in idiv pop adc and xor inc dec push pop outsb jbe xchg mov out clc add adc and xor inc dec push pop addr16 orl xlat loopne icebp cli add adc and push pop popa push jnp mov ror fnsetpm(287 in cmc std push push pop and xor inc dec push pop fs jne mov mov out clc add adc and cmp imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall enter jmp cld add adc inc dec push pop bound jl lea ror (bad) jmp std push movhps sub cmp push pop gs jbe xchg mov out testl sub cmp dec push pop addr16 orl add loop hlt cld add xor inc dec push pop gs jbe xchg mov out testl sub cmp dec push pop push xchg fwait movsb lods mov (bad) iret fsub jmp adc and push pop bound jnp lea ror (bad) jmp cld add xor inc dec push pop fs jne xchg mov in idiv pop adc and xor inc dec push pop outsb jbe mov mov out clc add adc and push pop popa push jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov ljmp es inc dec push pop bound jl mov ror fninit in hlt std add xor inc dec push pop fs jne xchg mov out testl sub cmp push mov enter jmp cld add xor inc dec push pop fs jne xchg mov call adc sub pop popa push jnp mov ror (bad) in hlt std add xor inc dec push pop fs jne mov mov out testl sub cmp pop outsw ja mov mov out testl sub ds dec push pusha push xchg pushf movsl lods mov (bad) rcr loope repnz add inc dec push pop bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl lea ret lret aam out testl sub cmp dec push pop addr16 orl xlat fucomip add sti add sbb dec push pop popa push jnp lea ror fnsetpm(287 in cmc incb movhps sub cmp push pop fs jne xchg mov in idiv pop nop/reserved sub cmp pop outsw ja mov mov out clc add adc and xor xchg mov in idiv or sbb sub inc dec push pop addr16 orl xlat loopne icebp stc add adc sub pop pusha imul movsl scas mov enter jmp cld add xor inc dec push pop arpl jl mov ror fninit in hlt std add xor inc dec push pop fs jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle nop cwtl mov int3 aad out testl xor arpl orb add ljmp xor inc dec push pop fs jne xchg mov in idiv or sbb sub cmp dec push pop addr16 orl xlat loopne repnz add sbb dec push pop bound jl lea ror fninit in hlt std push push pop and xor inc dec push pop gs jbe xchg mov add hlt std add xor inc dec push pop fs jne xchg mov in idiv or sbb sub cmp push pop push xchg fwait movsb lods mov (bad) iret fsub jmp adc and push pop bound jl lea ror (bad) in cmc incb nop/reserved sub cmp push pop outsb jbe mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov out testl sub cmp dec push pop outsw js mov mov ljmp es cmp push pop arpl jge mov ror fnsetpm(287 in cmc incb nop/reserved sub cmp push pop outsw js mov mov call adc and ss push pop bound jl lea ror fsub out idiv or sbb sub imul lahf test mov in idiv or sbb sub cmp dec push pop push xchg pushf movsl lods mov enter in hlt std push push pop pop sub cmp push pop fs jne xchg mov in idiv or sbb sub cmp dec push pop addr16 (bad) mov mov jmp adc and push pop popa push jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl ror (bad) ljmp sub cmp push pop fs jne xchg mov out testl sub imul movsl scas mov enter jmp std add xor inc dec push pop fs jne xchg mov in idiv or sbb sub cmp pop outsl js mov mov jmp adc es add push pop arpl xchg mov in idiv pop adc and xor inc dec push pop addr16 orl xlat loopne repz add push push daa xor cmp push pop outsb jbe xchg mov out clc add adc and pusha push xchg pushf movsl lods mov (bad) rcr loope repnz add sbb dec push pop bound jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov in cmc incb movhps sub cmp push pop outsw js mov fsubrp repnz add sbb dec push pop popa push jl lea (bad) int fsubp out clc add adc and cmp push xchg pushf movsb lods mov (bad) rcr loope repnz add sbb dec push pop arpl jge mov ret fsub in idiv pop nop/reserved sub cmp push pop outsb ja mov mov call adc and xor popa push jnp mov ror (bad) jmp add pop adc and xor inc dec push pop data16 mov fsubr repz add push push daa xor inc dec push pop arpl xchg mov in idiv pop adc and xor inc dec push pop outsw js mov mov jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli add adc and push pop bound jnp lea ror (bad) in hlt std add xor inc dec push pop outsb jbe xchg mov out clc add adc and aas dec push pop bound jl lea ror (bad) in cmc incb nop/reserved sub cmp push pop outsb jbe mov mov out testl sub push xchg pushf movsl scas mov enter ljmp daa das cmp push pop arpl xchg mov in out testl sub cmp dec push pop push xchg pushf movsb lods mov (bad) rcr loope repnz add xor inc dec push pop fs jne xchg mov out idiv or sbb sub cmp imul cmpsb scas mov leave rcr jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push std push movhps sub xor pop push xchg fsub out testl sub cmp imul cmpsb scas mov jecxz sti or and aas dec pop insb jnp cwtl cmpsb mov add dec push pop outsb ja mov mov out clc add adc and xor pusha push xchg pushf movsl lods mov (bad) rcr loope repz add push push daa xor inc dec push pop fs jne xchg mov in idiv pop adc and xor inc dec push pop outsb ja mov mov out stc add adc and xor pusha imul mov testl sub cmp dec push pop addr16 (bad) mov mov jmp adc inc dec push pop bound jl lea roll aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsub in idiv pop adc and xor jo orl xlat loopne icebp cli add adc and push pop popa push jnp mov ror fnsetpm(287 in cmc incb nop/reserved sub cmp push pop push xchg fwait movsb lods mov (bad) iret fsub jmp adc and push pop popa imul cmpsb scas mov leave rcr loop repz add das cmp push pop arpl jge mov ror fninit in hlt std push push pop pop sub cmp push pop gs jbe xchg mov out testl sub cmp dec push pop outsl js mov mov jmp and aas dec pop outsb jle popf lods mov or es adcl sbb cmp imul xlat loopne repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push pop bound jl lea ror fsub in idiv pop adc and xor inc dec push pop imul cmpsl scas mov out clc add adc and cmp push xchg pushf movsl lods mov (bad) rcr loope repnz add sbb dec push pop arpl xchg mov in idiv or sbb sub cmp dec push pop outsl js mov mov call adc inc dec push pop bound jl lea ror add in idiv pop adc and xor inc dec push pop outsw ja mov mov ljmp es cmp push pop arpl test mov in idiv pop nop/reserved sub cmp push pop outsw js mov mov out stc add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub cmp push xchg fwait movsb lods mov (bad) iret xlat loopne icebp stc add adc and push pop bound jl lea ror fnsetpm(287 in cmc incb nop/reserved sub cmp pop addr16 xchg mov loope repz add xor inc dec push pop outsb jbe mov mov out clc add adc and cmp push xchg pushf movsl scas mov enter jmp cld add push push daa xor inc dec push pop fs jne xchg mov (bad) int fsubp out clc add adc and xor inc dec push pusha push xchg pushf movsl lods mov (bad) rcr loope repnz add pop and xor inc dec push pop outsb ja mov mov out clc add adc and xor pusha imul movsl scas mov enter ljmp es cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call arpl jge mov ret int3 aam in idiv or sbb sub cmp dec push pop addr16 orl xlat loopne icebp cli add adc push pop popa push jl mov ret fucom out testl sub cmp dec push pop addr16 orl xlat loopne icebp cli add adc es inc dec push pop bound jl lea ror fninit in hlt std push push pop and xor inc dec push pop gs jbe xchg mov out clc add adc and xor pusha push xchg pushf movsl scas mov enter ljmp daa xor inc dec push pop arpl mov enter jmp std push nop/reserved sub cmp pop push xchg pushf movsl lods mov (bad) rcr loope repnz add inc dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insb je xchg mov in idiv pop adc and xor inc dec push pop outsw ja mov mov out stc add adc sub pop popa push jnp mov ror (bad) jmp cld add xor inc dec push pop data16 ja mov mov call adc and xor pusha imul movsl scas mov enter ljmp es aaa inc dec push pop arpl xchg mov in idiv pop nop/reserved sub cmp push pop data16 ja mov mov out clc add adc sub pop pusha imul movsl scas mov enter jmp cld add pop and xor inc dec push pop gs jbe mov mov call adc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall imul cmpsb scas mov enter jmp cld add push push daa xor inc dec push pop fs jbe xchg mov in idiv or sbb sub cmp dec push pop outsl js mov mov call adc es aas dec push pop bound jl lea ror fsub out idiv or sbb sub cmp pop outsw ja mov mov call adc and push pop bound jl lea ror fninit in cmc std push push pop and xor inc dec push pop outsb ja mov mov out clc add adc and xor pusha imul xchg sahf cmpsl scas mov jecxz hlt std push push pop and xor inc dec push pop outsb jbe mov mov call adc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call bound jl lea ror fsub in idiv pop nop/reserved sub cmp push pop outsb ja mov mov out clc add adc and xor inc dec push pop push xchg popf movsl scas mov add rcr jecxz hlt std add xor inc dec push pop gs jbe xchg mov out idiv or sbb sub cmp push jl lea ror fnsetpm(287 in cmc incb nop/reserved sub cmp push pop data16 ja mov mov out stc add adc sub pop pusha imul movsl scas mov enter ljmp es cmp push pop arpl jge mov ret lret aam in idiv or sbb sub cmp dec push pop addr16 orl xlat loopne icebp cli add adc daa das cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop fs jbe xchg mov out clc add adc and cmp push xchg pushf movsl lods mov (bad) rcr loope repnz add adc inc dec push pop arpl insl jbe xchg mov out testl sub push jl mov fsub cmc add push pop push mov int in cld or daa xor jle pushf stos mov sub dec pop insb jnp cltd cmpsl mov shl lock push arpl mov in cli pop adc push gs lea fucomp stc push adc push pop outsb ja mov (bad) fucomip icebp stc add adc and push pop popa push jnp lea ror fnsetpm(287 in cmc incb nop/reserved sub cmp pop outsw ja mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp int fsubp out clc add adc and xor pusha imul movsl scas mov (bad) rcr jecxz hlt cld add xor inc dec push pop outsw ja mov mov call fsub repz sbb ss push pop insb jns lcall jecxz hlt std push push pop and xor inc dec push pop outsb ja mov mov call adc push pop fs jne xchg mov out testl add pop popa push jnp mov ror (bad) jmp std add cmp dec push pop addr16 (bad) mov mov jmp adc and push pop bound jge mov (bad) into xlat fucomip icebp cli add adc and push pop popa push jle pushf stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push and jno nop mov in std pop adc and xor inc dec push pop push xchg fwait movsb lods mov (bad) iret fsub cmp jnp pushf stos mov pop adc and xor jo orl (bad) jmp std add xor inc dec push pop outsb ja mov mov call adc push pop arpl jge mov ret fucom out idiv or sbb sub ds push pop popa push jnp lea rcr loop repz push push pop and xor inc dec push pop outsb jbe mov mov call adc and push pop arpl xchg mov out clc add adc and ss push pop popa push jnp lea ret fsub out idiv or sbb sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp imul test mov in idiv or sbb sub inc dec push pop addr16 xchg mov out clc add adc and pop popa push jl mov ret fsub out idiv or sbb sub inc dec push pusha imul cmpsb scas mov leave rcr in cmc incb nop/reserved sub cmp pop addr16 orl aam in testl sub pop bound jl mov (bad) int fsubp lock add adc and aas dec push pop bound jl mov ret fucom out idiv or sbb sub imul cmpsb scas mov int (bad) lock add adc and ss inc push pop bound jl lea ror fnsetpm(287 in cmc incb adc and xor dec push pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jp mov enter jmp cld add xor inc dec push pop outsl js mov mov in cli add adc es cmp push pop arpl xchg mov out stc add push gs xchg movsb mov aam repnz and inc push arpl xchg movsb mov (bad) int3 aad out testl sub xor pusha imul movsl scas mov enter ljmp sub cmp push pop gs jbe nop sahf scas shl add add and add sub leave fsubr stc or and xor push popa jo inc pop outsl adcb jmp mov fucomi sti or and hlt add and ds pop ss pop arpl xchg mov inc shr stc or sub inc dec push pop outsw js lea out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and inc push bound test lret std push pop xor arpl test iret loope add es push addr16 add add pop sub arpl xchg mov out stc add adc push pop arpl xchg mov out stc add adc fs xchg mov hlt add and inc push gs lcall or sub jle sahf lods mov or pop insl jge pushf stos mov jecxz cmc std push movhps xor js cltd stos mov or sub dec pop insl jg mov lock add push push daa das cmp arpl lea fabs ljmp daa xor inc dec push pop arpl xchg mov in cmc incb nop/reserved sub cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl outsw ja mov aam out clc add adc push pop add ja mov mov in cmc decb adc and bound jge nop cltd mov iret fsub ljmp ss dec push pop arpl xchg mov in cmc incb adc and arpl mov mov jmp std push nop/reserved sub cmp dec push pusha imul stos mov iret fucomip cld or xor pop insl jle popf (bad) out std or sub dec pop data16 nop cltd mov shl lock sub cmp pop push xchg sahf cmpsl mov ret int3 aad out cli add cmp push pusha imul test (bad) fucomip repnz add push pop sub dec pop addr16 orl lret aad out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cli add inc dec push pop outsw js mov ror fnsetpm(287 in idiv or sbb sub push jl mov ror fsub out testl cs inc dec push pop outsb ja mov ror fnsetpm(287 in idiv or sbb sub ds push pop arpl mov mov jmp std push nopl sub push jl (bad) cwtl mov iret fsub ljmp xor jge fwait stos mov or sub inc pop imul clc add adc push pop fs jbe mov mov in cmc adc sub cmp pop bound jle xchg lcall fsub out clc add adc inc dec push pusha push jge nop lcall cld or sub cmp pop popa imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov leave rcr in clc add adc sub insl ja mov ret int fucomip add std pop adc and pop outsw jns mov (bad) into xlat loope hlt std push adc and aas dec push pop outsb ja mov (bad) into xlat loope repz push adc and outsb js mov int loopne repz push nop/reserved sub aas dec push pop outsl js mov int loop add sbb insl jge popf lods mov and inc push data16 mov rcr out sti add cmp push pusha push jle xchg pushf cmpsb mov (bad) loop testb adc sub cmp push pop arpl orl in stc add sbb sub inc dec push pop push lcall in clc add aas dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jo test rolb fsub in cmc decl adc sub cmp outsl jns lea int3 (bad) loopne hlt decb adc dec pop bound mov rcr out cli push adc and cmp push bound mov clc or mov or sub push mov cld push and dec bound fwait lods ret std adc sub inc dec push popa insb jbe mov lret (bad) loopne cmc add adc dec push pop push jg xchg lahf test fucomip hlt decl adc cmp pop arpl orl int loop testl ss dec push pusha imul xchg lahf stos mov lret ljmp xor dec push pop imul mov repnz pop adc xor push pop data16 xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add call sbb push pop push popf cmpsl mov (bad) rcr call cmp jne mov lret add inc push pop push mov (bad) repnz or sub inc dec pop fs mov (bad) rcr jmp and jp lods mov repnz adc sub inc dec pop arpl test jmp dec pop jb cltd lods ret xlat jmp adc xchg adc jns mov cld pop adc push pusha imul cwtl movsb scas mov repnz or push sub dec push pusha orb fucomp hlt decl adc dec pop outsl jp xchg mov int in std or push pop push mov fucomip testl pop jb (bad) pushf test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti pop adc sub inc dec pop addr16 mov rcr ljmp inc push pop push movsb mov enter clc add sbb xor dec push bound xchg int in cld or sub inc push pop push cltd movsl mov leave aad in clc add sbb pop fs xchg iret (bad) repnz push and imul mov cld or sub inc push pop push movsb mov enter clc add sbb xor dec push arpl xchg int in cld or sub inc push pop (bad) (bad) fwait test ret jmp sub jbe (bad) pushf test jmp sub jbe (bad) pushf test clc add inc push pop imul mov loopne stc add inc push pop imul sahf stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fsubrp testl push pop imul popf stos mov rcr ljmp inc push pop insb jns xchg sahf stos mov in stc push adc sub inc push pop imul movsb mov lret lock or and cmp push arpl mov hlt add sbb pusha outsb jl xchg movsb mov int call sub inc push popa outsl jge cwtl cmpsb mov rcr jmp push adc das ds pop addr16 (bad) popf stos mov decb sbb inc push pop outsb jl cwtl cmpsb mov rcr in cli or pop push lods mov add sbb bound mov loop adc inc push gs (bad) popf stos mov std or daa xor jp xchg mov call xor push pop insb jp xchg movsb mov int call sub dec push arpl lea fsubrp cli or and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc dec je xchg mov lock sbb data16 xchg mov ljmp push popa jo mov and scas leave loop sbb dec push out pop and add mov inc bound mov jmp jb aam push sub sbbl mov cmp mov pop aaa push imul mov inc pop jns mov jmp jo mov and test sub pop ja cmpsl rcr push cmp mov repz pop cs dec pop push xchg loopne std or sub inc push gs xchg mov call xor pop imul cmpsb mov shl out std or sub inc push fs nop sahf lods mov adc cs pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loopne std or sub inc push fs nop lahf scas mov add dec pop imul mov dec bound mov jecxz sbb push (bad) jecxz sbb pop outsb jl lcall add sbb gs xchg mov jmp xor pop outsb jl cltd test (bad) aad repnz sbb outsl mov and push clc inc dec pop insl jg mov in adc cs xchg fsubrp sti or daa xor jg pushf stos mov add pop cs add dec pop insb jnp cwtl cmpsl mov aad repnz sbb lahf lods mov and jp xchg adc sbbl movsl rcr sbb push jno test cmp mov xor insb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp in cvttps2pi (bad) sahf mov test add inc popa jle mov notl cmp xchg mov repnz shr or enter cmp xchg mov lock test ljmp add cmc pop inc popa jg mov push jno lret xor xchg mov pop jle ret in sub mov pop sub pop jle ret cs jbe mov popa andl loopne and mov pop jnp ret in or push jne mov insb cltd mov outsb lea add cmp jae cwtl stos mov sbb jl mov add cmp test clc or ds (bad) movsl (bad) jmp cltd mov inc push addr16 lahf mov fldlg2 call and dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall adcl or cs push addr16 mov adc cmp jnp inc jne shl cs jp ret sub xor mov add dec jae mov jae mov js mov add shl and sahf mov xlat jmp adc ss pop outsl (bad) xchg test xor xchg test or xor jge mov add je lcall cmp jne pushf scas ret pop sub mov add sub push data16 mov add jnp mov add sub push gs mov push xor imul mov fsubr add sub push fs popf mov xlat ljmp xchg mov push xor and mov add insb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add jae pushf mov fdiv add outsb test adc mov add imul mov sub mov add cmp addr16 mov or xor lahf mov repz push jle cmpsb mov push xor jno cwtl stos rcl add ja lahf mov (bad) add sub push imul or xor outsl mov je mov and pushf scas ret cld adc cmp gs mov adc cmp mov negl imul cmp jmp xchg mov add push jno mov out push xor nop mov add (bad) and mov insl xchg mov add insb xchg mov jo mov insl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sti pop inc insb nop mov je lret ds andb jl mov push mov cli pop inc mov mov pop jg ret jecxz es imul mov push sbb mov push je mov pop jg shr sub ja ret cs jo mov jae mov out or push jno mov sti sbb pop jns rcr sbb shl and cmpsb lret in push cs jne mov std sbb andb jl push jge (bad) hlt sbb sar sbb data16 mov std es ja ret inc insl cwtl shr inc outsb xchg mov mov jne shr inc imul jae mov pop cmp xchg mov out or dec imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp cltd mov pop andl lret xor cwtl mov cld pop inc bound aaa pop js mov mov push scas roll add (bad) add test push jo mov hlt push xor fsqrt sbb sbb pusha andl je mov jae mov jge lret inc push mov push mov hlt sbb movsb int sbb cwtl mov mov mov jge aam and cltd mov xchg stos sar xor aam and fwait ret out aaa pop subl iret mull dec jp fildl sub xchg mov mov pop jle shl cmp lods xlat add out adc (bad) sti pop inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov push mov xchg js xlat ljmp dec cmpb rolb xor shr inc jno iret sti sub mov sbb mov jg fisttpll ss mov nop mov cltd enter jne lret clc and jns int3 mull push jle sar sub int3 add or popa mov xorl dec jbe sar and movsl sar sub aad sub roll xor mov pop cs mov jle faddl xor or pop xchg jl sar and scas fadds sub mov js int3 mull dec ja leave negl dec outsl fwait (bad) addr16 (bad) in adc imul das pop mov fwait roll xor lods fisttpl inc push ret in adc jae lret inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl int es xchg mov xchg shr push jns into sti and add in aaa pop mov movsb add push xor mov adc imul mov jle xlat ljmp das popa mov ret inc insl xchg shr aas insl xchg shr cmp mov mov xchg adc fwait mov jp shl cs jne mov jnp mov insl nop mov stc sbb lea outsl xchg mov jbe shr xchg lret aas data16 subl mov lahf roll xor mov lahf int rcr add sub push imul add mov outsl xchg sbb mov adc ds insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall or aaa dec arpl test sbb arpl (bad) fdiv push sbb dec bound movsl mov sub pop jno lahf mov out adc mov add jbe mov pop xor scas (bad) loopne or sbbl es scas (bad) or cmp test or (bad) cwtl lods int in xor movsl int sbb nop mov or cmp jnp movsl mov sub push insb popf mov fcomip or ss bound movsb mov xor jne mov push and xchg stos ret or xor cmpsl mov sub stos ret add js stos ret (bad) add je mov adc cmp scas (bad) (bad) or xor bound cmpsl mov push lods (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call out add jno lahf mov loopne or ss popa jbe mov or xor mov sub push xchg stos mov sub insl sbbl sbb inc pop jb popf mov (bad) or xor mov add daa aas push outsl test and xchg test sbb inc pop jae mov or (bad) mov loope (bad) cmp jg stos rcl add xor js leave fdivp or xor mov adc cmp addr16 test shr std adc aas push insb (bad) xchg lods (bad) fsubr push cs fs cmpsl mov sub push push xchg lods ret add cmp into out adc cmp jl test push sub insb adcl jp movsl mov sub test (bad) in add das inc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl add daa aas push imul pop sbb dec pusha js shl or aaa dec gs test aam call das dec pusha jl stos rcl add xor mov xor je mov push and scas (bad) (bad) or cmp jp stos mov xor fs test fdiv push pop xor add xchg lods ret (bad) or ss push fdiv or pop jne test xlat out add xor ja movsl mov sub pop outsl xchg adc inc addr16 mov xchg addr16 mov fcomi push sbb inc pop jno sahf mov fcomip or cmp lods ret (bad) or ss fs stos rcl push sbb xchg mov fcomi pop sbb mov sti adc cmp imul add xorl inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall movsl mov sub push imul add jbe mov push sub pushf mov fcomip adc aas push insb test or push mov xlat sti and mov and dec fs loop push jne shl xor int3 adc (bad) negl inc arpl inc addr16 mov mov xchg mov jns leave mulb inc insl xchg mov subb pop inc push mov negl aas arpl and xchg mov pop sub ja (bad) lock dec ja shl xor icebp sbb mov imul cmc cmp fiadd daa dec jae mov jns int sbb bound jno mov test insl lcall mov pop xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xchg mov test jns aam sub mov or pop test jbe vunpckhps mov xchg sub repz xchg mov xchg ret inc jae enter ja int3 mull push jl rolb xor (bad) pop out pop dec js int3 clc and mov jg sar sub mov push xor mov mov xchg mov xchg ret inc jne sar sub mov or fs mov test mov mov xchg (bad) inc jb leave repz jns iret clc and mov jp (bad) jo sar push inc push sub mov popa test mov leave out adc fildl daa dec jae mov (bad) mov pop push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push adc pop jle (bad) lock arpl inc outsl cltd rcrb outsl xchg mov enter popa xchg jno fimul xor std and mov push jne mov outsb nop mov negl ds xor mov mov (bad) sub enter jb lret repz mov je ret cmp fildl into clc and jp aad imul out adc aas imul xchg mov mov jns lret push jge (bad) xor jb sahf mov loopne or ss bound movsb mov sub push insb sbbl and dec addr16 lods (bad) fnop aas inc jno mov push mov add xor mov push ja ret repz bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall aaa dec popa ja mov push and push push aad call cltd mov sub jo pushf mov fdivp or aaa dec fs movsb mov sub stos rcr pop and dec gs test sbb pop jle scas (bad) (bad) or cmp jnp test aad add xor jne mov adc inc pop jo popf mov in adc ds push cltd mov fcomip adc fdiv or xor mov adc cmp mov (bad) or xor cmpsb mov sub sahf mov or cmp mov fdiv or cmp jg lods ret fcomi pop sbb dec pusha ja cmpsl mov sub popf mov (bad) or cmp (bad) mov repz xor test (bad) in add das inc pop jae sahf mov loopne or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp stos ret f2xm1 push sub outsl xchg and pop (bad) lcall cmp jl test (bad) in add xor ja movsb mov sub jo popf mov loope push cmp adcb cmp mov adc cmp scas lds fnop push and xchg lods ret fsubr or aaa dec arpl test sbb inc pop je mov cmp jp cmpsl mov das inc pop outsl xchg (bad) cmp push fdiv pop sbb dec pusha ja movsb mov xor ja mov mov adc ds xchg add and clc sub sahf (bad) xor movsb leave cmp pop inc dec mov jae shr inc push inc imul sbb lahf leave mulb dec jl roll xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc and hlt adc mov push jne mov addr16 outsl xchg mov insl nop mov jmp inc imul in adc imul jge into negb inc jb mov subb mov bound dec je (bad) jmp ds xor mov dec andb test push mov jle int3 repz jp (bad) negl inc outsb xchg mov xchg jl test xor jp mov gs mov and mov (bad) and mov negb aas imul aam and test push and (bad) mov jmp loope sub jne ret xchg outsl xchg mov clc sbb out adc jle (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl movsl leave out adc pop jg enter pop jle (bad) ljmp ljmp stc push inc push test pop js mov jns (bad) jmp nop mov negl cmp ret sub mov cld push aas pusha test popa xchg push jae mov pop lods jmp test dec insl lea sti sbb pop js mov mov dec push cmpsl (bad) daa dec push stos lret sub jns mov mov loope and test test jno scas int3 out adc subl ja mov mov dec jo mov repz pop jnp mov bound sub outsl mov pop test test out es arpl push cmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xlat jmp aas push popa jb xchg cmpsb mov (bad) cld push pop xor xchg scas int3 jmp pop jo xchg movsb mov fldl2e sti or arpl test lret call and inc push data16 lcall adc aaa dec pop push lea cmc push pop inc pop outsb adcb cli or aas push popa jb xchg test lret fsubr (bad) adc xor js fwait lods mov push sub dec pop insl jle mov clc or sub dec pusha jno xchg movsl mov (bad) add xchg movsl mov fldpi cld or data16 lcall adc mov hlt adc push outsb (bad) mov stc or adcl pop jo xchg movsb mov lret decb and inc xchg stc or aas push bound xchg cmpsl mov mov dec imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sbb cmp stos mov adc push mov adc imul mov shl testb sub dec pop outsl adcb sti or cs push bound xchg cmpsl mov push and adcb sti or das inc push arpl xchg test lret decb and inc push data16 popf scas mov adc insb jge mov testb sub dec pop outsb jg mov lahf mov xchg dec imul cmpsb (bad) and jecxz and (bad) out es sbbl fild and pop jp mov fcomi or sub pop jo xchg movsb mov fsubr cli or je xchg test lret decb and inc push data16 cltd stos mov adc ss pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb cmp mov add cmp test clc or jl mov add je cltd lods rcl stc or xor jge mov add sar sbb pop andl pop andb mov add cmpsl mov sbb lea call and test cmc or sub loop mov dec pop outsb adcl push gs sahf mov xlat ljmp outsb adcl adc mov pusha (bad) movsb (bad) jmp (bad) movsl mov sbb ds fs sahf mov xlat ljmp jg movsl mov sbb inc push data16 lahf mov fldlg2 call and test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sbb inc push data16 lahf mov fsubr (bad) adc ss pop outsl (bad) xchg test and xchg test into loope or inc push push leave add repz sbb (bad) call js sahf mov xlat ljmp jae mov loopne push xor xchg dec insl nop mov clc sbb pop jle ret and mov jbe mov pop jle (bad) and stos lret in or popa jg mov pop jns mov jmp xor outsl lea xor outsb mov cmp jae cwtl test add and fwait lods mov adc jnp popf scas rcl repz pop insb jle mov stc or sub dec pusha jno xchg mov adc xor push addr16 fwait lods mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl loope add insl jg mov clc or sub mov stc or pop xor imul mov shl cmc push pop sub dec pop insl jle mov stc or sub adcl or arpl test lret decb and inc push gs cltd stos mov adc pop imul rcl cmc pop sbb cmp outsb jg mov (bad) or sub movsb mov xlat call ds popa jb xchg cmpsl mov push and inc push gs cltd stos mov sbb cmp pop jo xchg mov cli or adcl cld mov inc push data16 cltd stos mov adc cmp insb jge lahf mov shl testb sub dec pop outsb jg cmpsl mov adc xor jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl loopne add jl sahf scas rcl cmc push pop sub dec pop outsb jg mov clc or sub dec pusha jno xchg movsl mov fucomi decb and inc push insb jle mov (bad) or sub mov stc or sub dec pop jo ret testb sub dec pop jo xchg movsb mov xlat jmp aas push bound xchg cmpsl mov push pop inc push data16 lcall adc ss pop push mov cmc pop sbb cmp outsb jg mov xchg mov inc bound mov repnz jnp popf scas rcl repz cmp outsb jg mov out adc dec inc jbe mov jmp test jecxz es test dec insb mov pop andl (bad) repz push je mov stc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl es data16 push js mov cld sbb mov repz push jbe mov bound and aad adc push jb mov stc sbb pop jge mov pusha andb xchg mov jne lret xor jnp ret cs jns mov je mov je mov pop andl in sub loop sub jae mov imul jne mov outsl xchg mov je mov je mov ja shr cmp mov push ja shr xor popf (bad) ljmp in adc jge iret hlt sbb pusha test pop jg leave repnz cmp mov pop jg mov bound and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) out sub xchg mov negb cmp mov dec outsb mov pop jns mov pop (bad) mov dec push lods (bad) repnz push jne mov push (bad) ss js mov pop jle ret in and xchg or inc test push ja mov popa sbbl mov popa (bad) movsb (bad) add cmp test inc pop jge mov push jne mov out push xor mov dec push lods int3 in or dec test xor (bad) out or dec add cmpsb iret in or dec sbbl cwtl mov cvtsi2sdl sbbl inc pusha jge mov in or inc pop jns mov jmp js mov jmp jae scas lret out sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xor push lahf mov inc pop js mov out pop cmp mov xor cmpsl ret (bad) pop xor xchg xor xchg xor sbbl inc bound mov in pop and jge mov out or pop jbe lods leave in sbb xchg scas lret and jp mov out or inc bound adc dec data16 pop js mov call js mov dec imul cmp xchg mov push je mov in or dec gs mov cmp xchg mov cli pop xor lret ljmp int or dec xchg add aas pop jle mov push jb mov in or dec insb mov sub jno scas int or mov push jne mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call out push sub imul cmp cwtl mov in adc dec insb mov ss outsl lea cmp aam push sub test cld sbb pop js mov push jo scas int3 jmp sub mov ds jp mov repz dec jno scas into in or dec insl xchg mov out or inc andw push jae scas int3 call jge mov push jo lods leave out and popf mov dec insb mov aas pop jns mov in or inc bound adc scas int3 jmp xor nop mov in or inc push or dec data16 xor lea inc xchg add inc popa jg mov push js mov out or dec imul sahf mov push outsl cltd mov dec imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop cmp cltd add je mov icebp adc push jae scas int3 ljmp fdiv push aaa pop js mov push jb lods int3 in or inc arpl sbb sti and push popa push mov xor popf mov popa sbbl or jb xchg cmpsl mov adc xor outsl lea dec push clc sbb pop jl mov push ja mov hlt adc push inc pop imul mov xlat call inc push fs cwtl lods mov adc aaa dec pop imul mov aam (bad) or sub adc xor test lret push xor pop jo xchg movsl mov fsubr decb and inc push data16 lcall adc jnp sahf mov shl cmc push sbb cmp outsb jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call call inc push data16 lcall xor push push mov adc insb jle mov clc or test in daa inc test add inc push add cmp jns mov push jo lods lret in or inc arpl mov cmp jns mov jmp and jnp mov in or pop jns mov jmp and inc pusha jge mov testl push je mov outsb xchg mov push jb scas lret ljmp shl and mov popa andl push scas into out or cmpsb (bad) and js mov popa test inc pusha jge mov xchg inc mov or inc arpl daa dec imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out adc push jno lods lret sub test cmp mov fldl2e sti or fs cwtl test add and inc pop push mov repz daa cmp insb jge mov std push pop xor fs cwtl test call and inc push addr16 pushf lods mov adc ss pop push lea hlt add pop outsb adcb stc or mov push daa cmp insl jle mov (bad) or sub dec pop jo xchg mov stc or aas push popa jae xchg cmpsb mov (bad) cld push pop xor addr16 stos enter dec addr16 scas int or inc arpl and mov repz dec xchg add ds andl lret and shr or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec insl lea inc fs mov dec push pop sub mov cmp xchg and pushf lods mov adc aaa dec pop imul ret cmc pop sbb cmp pop outsl adcl inc push arpl test lret (bad) adc jl lahf mov lock inc arpl sbb push jne mov repz dec imul xor jno scas int3 cmc adc push je mov clc sbb pop andb imul shl sub pushf jbe enter dec jo negb cmp jl mov pop js mov popa addb dec outsb jb ja flds daa dec insl lea mov scas iret icebp adc push je mov (bad) pop inc popa mov inc popa test inc gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) lahf mov insl lea jg shl es insl mov dec imul in or pop sub mov jns mov push insl jle mov (bad) or sahf mov pop jl mov push jne mov add inc pop jle mov popa andl mov arpl inc gs sub xchg movsl mov fldl2e sti or gs pushf scas mov das dec outsl adcl std push and inc push gs cltd stos mov adc xor adcb stc or jne cwtl stos mov adc xor lea (bad) or sub xchg movsl mov fldpi cld or fs lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec loope push sbb push outsl xchg lods mov push daa cmp insb jge mov notl das dec pop outsb adcb sti or inc pop jge mov scas xlat clc sbb pop jle mov pop jge mov repnz add lea inc bound sbb enter cmp enter cmp mov ss jo stos (bad) sbb dec imul sub mov xor push movsb mov inc pusha jl mov in or mov add add cmp mov ds jns mov jmp jp mov call (bad) sahf mov dec push push jne mov xor (bad) repnz dec outsl xchg mov push jbe mov repz push insl mov jae mov lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl daa inc mov dec insb mov push je mov jnp mov dec insb nop scas into in or jo mov icebp adc push outsb mov jl mov pop jle ret sub mov dec je mov pusha andl aaa push jbe mov mov repz dec outsb lea dec push test mov lock cs insb mov push inc test inc jne mov pop jg mov pusha andl out adc pop jns mov notb inc test pop and mov pop jge mov pop jp mov pusha andl jg enter dec insl mov xchg mov negl cmp (bad) cmpsl int comiss lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pushf mov pop jge adc dec push add push je lods leave out add push jl mov pop shr sub insb mov dec outsb mov inc andl cmp mov inc pop jle mov push jne mov repz push je mov repnz repz push jno mov lock lea arpl sbb mov out or sub mov dec insb mov outsb xchg mov pop jp aad dec sti jl jbe mov push or lret xor cltd mov bound inc xchg adc push jae mov hlt adc push stos lret sub mov dec insb mov push je mov negb cmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push jbe mov pusha jg rcr sbb pop jns mov cmc adc push outsl lea insb mov jno scas int3 ljmp ret push cmp xchg mov repnz dec insb mov inc bound sub test ds jp mov push je mov hlt adc push jge mov outsb (bad) scas iret out push das dec outsb (bad) mov cmc adc mov popa (bad) movsb (bad) out sub mov sbbb adc push jne mov imul ret in sub mov dec outsl (bad) scas loop and andb mov popa (bad) shl pop aas pusha jle out sub mov insl mov popf mov test dec outsb mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp stos enter dec insl mov mov adc push jae mov sti sbb pusha andb mov stc sbb jl cli pop cmp jp mov repz add cmpsl lret out (bad) cmp mov dec jne mov stc sbb andb insl nop mov mov push and insl xchg mov test addr16 (bad) jmp cmpsb (bad) in daa dec imul jae shl xor cmpsb int3 icebp sbb add push jl (bad) call mov push jno mov stc sbb add pop (bad) test push adc push js mov mov or dec jno mov sti sbb pop js mov das inc push push lret push sbb xor imul add inc bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub mov push stos int3 in push xor cltd mov outsb (bad) mov notl cmp lods (bad) cmc or xor jae lcall and inc pop insl adcb pop sbb add (bad) or inc push imul push pop mov lods icebp adc je mov sub push data16 mov pop sbb inc push imul repz sbb push jns mov add daa cmp je fwait scas rcl cli or insb adcl pop insl adcb xor xchg mov std push insb lea dec push lods into in adc push jbe mov jae mov notl ss jne mov daa dec outsl nop mov negl inc arpl sub outsb mov pop (bad) cmpsb (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cwtl in adc pop jg (bad) jmp jmp sub mov cmc sbb pop andb mov dec imul push jno mov dec jns mov jae mov stc push dec popa xchg mov sti sbb sbb or je lcall mov notb dec jno mov xchg pop andb jl shl add or mov pop jg (bad) in es outsb cltd mov popa add and test inc popa andb arpl push ja mov popa andl std pop inc popa (bad) test in or mov lock inc popa mov dec insb lea cmp popf mov jge rcl std adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc pop jge cmpsb mov sbb push gs lahf mov fucomi add cmp test clc or xor pop insb test insb adcl push data16 mov add jbe popf mov xlat ljmp jno cltd lods rcl std adc aaa pop jnp mov fsubr add sub pushf scas ret fsubr (bad) adc test into loope pop sbb inc push imul push sbb push data16 mov jmp cmp arpl sahf mov fsubr lcall cmp enter dec outsl nop mov negb aas xchg cmp mov ret aaa pop jl mov xchg bound sub negb cmp (bad) cmpsb enter push jp shl sub lcall in push das dec jo xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli sbb pop sbbb pop sbbb push cld push inc mov sar push cmp out sub mov popa andb jae mov sti sbb pusha andl in and loope es insl nop mov negl inc popa subl das push jo mov negb cmp jno mov imul xchg sbb popa xchg pop je lcall and pop outsl adcl or das inc push push nop mov add jl mov fsts mov call daa cmp jae lcall and pop insl adcb push sbb push addr16 mov add cmp adcb adc cmp jbe pushf mov fldlg2 call and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xchg mov clc pop cmp cltd mov std and test dec push lods int3 out push xor cwtl mov aaa imul fdivr pop inc insl xchg mov pop sub jne test repz xchg mov (bad) test and xchg mov xchg mov andb movsl sar pop dec jne (bad) inc push mov mov (bad) test cmc sbb sahf lret fcmovbe or pop subl sahf (bad) jmp cmp mov fisttpll xor mov mov jg sar and jne shr inc push leave hlt sbb push inc mov das sti adc call mov mov ss lret ja pusha add daa ljmp push xchg mov (bad) fistpll mov ficompl aam mov fwait dec xchg (bad) scas xorb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas dec xchg out (bad) pop (bad) (bad) repnz nop or jbe xor outsl cltd in bound test xchg (bad) adc nop jb push rolb mull rclb xchg mov fisttpl cmp dec jns (bad) fst dec shl out stc jne push adc cmpsl movsb push push cli lock dec repnz or pusha in cmp jns outsl or sub rcl stos mov repz jns aam cs fidiv inc pushf mov outsl aam scas and lret mov js mov pop lret and loope push xor jp,pt scas mov dec dec inc add incb cmc into adc arpl push push push repz adc jo xchg mov leave dec push lahf sub sahf mov mov test lret insl pop imulb pop mov mov mov jle into negl inc outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop subl lods sar and fwait ret cmp mov (bad) es jne enter addr16 xor fiaddl sub mov data16 jns leave icebp sbb lcall mov sbb andl jl add pop inc push mov sti rorl das push jbe mov jl (bad) xor mov jno mov jo mov cld and lea pop test pop jnp ret out sub jecxz sub xchg mov outsb xchg mov std and mov mov jge lret out adc out das push jne mov outsb xchg mov std and lods iret repz cmp lods iret repnz pop andl jg (bad) out adc pop jge (bad) xor cltd mov enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in adc pop jnp ret sub (bad) and nop mov sti sbb int sbb into icebp adc (bad) out adc pop jg (bad) jmp xchg mov xchg adc pusha xchg pushf loope sub out push cmp mov xor xchg mov jbe ret cmp test inc insb nop mov (bad) and mov outsl xchg mov cmp xchg mov jbe mov jne mov jbe mov jnp vmovups pop mov imul imul outsb xchg mov ja shl xor jg lret cmp lods (bad) negl inc push and xchg mov je mov jl leave lock pop test mov outsb xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc in add loopne das push jg sar and fwait (bad) out pop aas addr16 mov pop xor push (bad) stos sar and xchg mov test outsl cltd ret inc insl xchg mov test je (bad) cmp add iret (bad) cmp inc rolb sub fwait shl xor add sbb (bad) cmpsl lret out adc pop andb jl or push (bad) (bad) cmp test pop andl cli and fldl daa dec jo out xor cmpsb lret inc imul lret add and xchg mov xchg test lea insb xchg mov or faddl sub movsb int and mov or pop test mov jl (bad) cmc sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ret xor jl (bad) call cmpsb int sbb xchg mov cltd shr cmp test negb inc data16 push jge into negb dec jae push dec jbe shl xor scas xlat add dec jbe (bad) ljmp (bad) daa gs mov xchg jne ret cmp mov push fmull xor cmpsl int les sub lahf sbb sahf (bad) lock jmp addr16 and bound (bad) mov or pop mov shr aaa imul cld and xchg mov mov mov lods xlat jmp out pop inc imul jle int3 hlt sbb insl xchg mov push xor mov or pusha mov pop test andb nop mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lcall scas fmuls in cmp lods sar and lcall outsl cltd mov (bad) mov jmp cmp in inc jno (bad) gs testb xchg mov mov pushf (bad) repz bound arpl xor in adc jle xor (bad) (bad) cmc sbb bound inc imul aad sbb ss andl test add test negl loopne in or arpl fdivr and hlt sbb std and xchg insl cmpsl sar and fwait ret call mov outsl cwtl shr cmp mov dec jno ret ss subl sub xor aam and jno mov jbe (bad) ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call popa xchg test je mov mov subl cwtl shr mov test popa xchg outsb fwait (bad) out sbb mov add push subl xchg mov add insl xchg mov jne mov jne mov ja mov jbe mov jnp (bad) xor jge (bad) in adc pop andl out adc pop andl sti pop inc imul push mov cli and mov data16 js ret xor mov push jnp (bad) call mov push jl int3 icebp pop cmp xchg bound cmp cmpsb lret cmp leave icebp or xor pop jae mov push and dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov or xor pop jae popf mov fdiv pop sbb inc pop jo lcall sbb inc pop outsl test add cs outsb xchg mov sti adc cmp jnp movsl mov and dec arpl mov or xor pop jae sahf mov (bad) pop sbb inc pop jno sahf mov (bad) or ja mov or xor popf mov fdiv push sbb inc pop outsl test add sub xchg lods ret add sub push xchg test push cltd scas ret fsubr add sub xchg lods rcl add jg test adc inc push imul call ds aad sbb xchg pop jge ret out sub jb mov push mov stc sbb xor add cmp in adc push jp shl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec jo mov cmpl add xor mov push ja ret out cs jne mov ja shl cs jne mov int3 repnz cmp movsl leave in adc jl ret out sub fldl sub xchg mov pop sub xchg mov mov adc sbb pop andl or mov jno mov push sbb pop andl or dec jno mov cmc and (bad) mov cli and scas sar sbb mov pop jle (bad) call xchg mov imul hlt pop cmp mov push je mov insb (bad) mov stc sbb bound pop andb lcall (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call clc sbb pusha andl jge (bad) out xor cltd mov insb nop mov clc sbb popa test lods (bad) repz cmp (bad) jmp andb je mov push and sbbb pop jnp mov pop jge mov pop jnp mov pop jns mov notl ss jne mov repz jae mov notb xor (bad) icebp adc push outsl (bad) scas int or dec imul inc xchg inc bound es xchg add mov aas pop jle mov pop jp mov pop jnp mov pop jl mov pop jns mov push jbe mov hlt adc push jb mov out adc push jae mov icebp adc push outsl (bad) scas into out push cs insl lea dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub mov dec outsl lea imul mov aas pop jle mov pop andb pop jle mov pop jns mov notb xor (bad) lock dec outsl mov dec jo scas into in or stos leave jmp mov inc arpl pop ds jge mov pop jl mov pop jnp mov push jne mov repnz push jno mov out push sub int or stos leave jmp xchg inc arpl pop aas pop jge mov pop jns mov pop jns mov push je mov repnz push outsl (bad) scas int or dec push test dec mov dec pop jno xchg lods mov pop xor imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl push sub popa je mov cld mov dec pop outsb adcl insb adcl aas push gs sahf mov xlat ljmp outsl (bad) xchg test iret loop pop sbb mov out add cmp jne fwait scas shr arpl lahf mov fsubr (bad) adc dec pop jo xchg test into loope pop sbb mov (bad) adc ss pop jb xchg stos mov sbb inc push addr16 mov fdivp add sub fwait scas rcl cli or imul mov fnop add sub push arpl pushf scas ret sti push and pop insl adcb add sub (bad) fldlg2 call and test cmc or inc pop sbbb pop jns mov jmp mov ljmp add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdiv or xor mov push and pop insb jg movsl mov sbb mov (bad) adc dec pop jo xchg test sub push fs popf mov (bad) jmp dec pop outsb adcl push data16 lahf mov fsubr (bad) adc dec pop outsl (bad) xchg test into loope pop sbb mov add sub dec arpl pushf scas ret cli or (bad) scas into in or dec push push stos int3 in or mov pop jns mov imul loop and pop outsl (bad) xchg test or cs push addr16 lahf mov fsubr (bad) adc ss pop outsl (bad) xchg test into loope pop sbb inc push push (bad) out push and pop insl adcb sbb push fs popf mov (bad) call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl insb jg movsl mov sbb push gs popf add cmp test dec insb lea push js mov inc pop insl adcb pop sbb push gs lahf mov xlat ljmp mov push and pop insl adcb add fs lahf mov fldlg2 call and test (bad) or inc push push (bad) (bad) add inc push push (bad) (bad) add cmp je lcall push xor jge mov add cmp test (bad) or xor jge mov or xor jge mov add jae cltd stos mov sbb jnp mov call and test (bad) or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl imul or cs push data16 lahf mov fsubr (bad) adc dec add xchg (bad) or jge mov add cmp jae cwtl stos mov sbb inc push outsb adcl inc push data16 lahf mov fsubr (bad) adc cmp jno xchg test pop sbb mov std adc ss pop outsl (bad) xchg cmpsl mov sbb inc pop insb jg movsl mov sbb das inc push push (bad) fldlg2 call and test (bad) or inc push addr16 mov call and dec pop jo xchg stos mov das inc push imul add cmp jae cltd lods mov sbb jnp mov (bad) adc dec pop jno xchg stos mov sbb inc push push into loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb inc push addr16 mov call and dec pop jo xchg test pop sbb inc push push (bad) (bad) add and test (bad) or inc push push int repnz fs popf mov (bad) jmp dec pop jno xchg stos mov sbb inc push addr16 mov call and test (bad) or dec pop jno xchg stos mov push xor jge mov add je lcall pop xor imul mov fsubr add cmp je lcall das inc push imul add cmp jno xchg stos mov sbb inc push addr16 mov (bad) adc dec pop jb cwtl stos mov sbb inc push push (bad) ljmp outsl (bad) add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) or jnp mov add cmp jae cwtl stos mov sbb jl mov add and mov std adc ss pop outsb adcl push data16 lahf mov fsubr std adc ss pop outsl (bad) xchg test into loopne push sbb jbe popf mov xlat ljmp cmp mov pop jl mov pop jns mov pop jg mov pop jnp mov pop ja mov notb mov repz push jb mov cmc adc mov repnz push jno scas iret out push cs insb lea dec push test inc xchg repz push jno scas iret out comiss lea dec imul dec xchg add test inc test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ret and pop jg mov pop jnp mov add inc pusha jg mov pop jl mov pop jns mov pop jns mov std sbb mov push jbe mov hlt adc push jno scas iret out push sub leave call test dec push push and ret loop and jg mov pop jnp mov push mov push jo scas into out or stos lret ljmp (bad) in and arpl and test pop jle mov pop js mov notb add push jae mov notb xor (bad) lock dec outsb mov dec imul mov cmp loope pop aas pop jge mov pop js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor jb mov out ucomiss mov insb mov dec xchg push and shl pop ds jge mov pop js mov notl cmp xchg mov cmc adc mov icebp adc dec outsl (bad) scas int push sub fdivr pop aaa push jne mov repz aaa push jne mov repnz push jo scas into out or test inc test inc test inc data16 inc popa andl mov pop jns mov pop push cmp xchg mov pop js mov cmc adc jecxz sub mov out sub imul dec imul movsb (bad) and (bad) sub imul dec insb mov dec imul dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp test dec insl xchg (bad) repz push jo scas into icebp adc pop cmp lods into lock loopne and (bad) hlt sbb pop jg (bad) imul pop andb add inc addr16 mov add jo mov jg enter pop jg (bad) jmp movsb enter push jns jl fldl daa dec insl xchg mov sub (bad) mov negb cmp (bad) movsl (bad) ljmp or mov jo mov jb mov outsl xchg mov xchg mov mov mov sbb bound jb mov outsb xchg mov jo mov jae mov jae mov or mov jne mov outsb xchg mov stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall imul jmp inc mov push mov sti and mov jp shl das push ja mov jne mov jbe shl xor popf ret pop xchg insb xchg mov jne mov jns shl cs jns (bad) xor mov hlt adc and lods int adc loope sub fwait mov mov push ja ret in xor popf ret ja mov pop (bad) cmpsl enter push ja mov pusha andl jl shl das push jbe mov (bad) negl cmp jg lret xor add mov repz push js mov cltd shr or dec andl pop jp mov push outsl lea dec push stos int3 out cvtps2pi (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add ja mov adc mov inc pusha jge mov dec insb mov inc data16 dec jno mov cmc adc push jne mov repnz push jno mov (bad) notb ss js mov pop jge shl daa inc push or scas into in push xor xchg mov hlt adc push jne mov notb xor sbb pop jle mov gs sbb xchg mov cmpsb (bad) add cmp (bad) lock dec push dec push inc bound sbb pop jge mov push jne mov out or lods int fdivrp sbb mov clc pusha sbbl scas aam adc dec push cmpsl enter inc sbbl ret and (bad) mov inc data16 inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sahf mov pop jge mov xor cs jns into and arpl imul fmul cmc adc js (bad) out sub mov je mov mov sahf mov pop ja mov cvtsd2si cmpsb (bad) in and (bad) lock push jno scas (bad) lock push je mov mov xchg inc data16 sbb pop ja mov hlt adc mov movsb ret loop xchg fdiv adc xchg jl cmpsb int3 dec sbb jge adc andl mov hlt adc push jb mov lock test out and shr push sub insl mov inc andl pop jp mov push jno scas int or xchg pop ds andb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lods int3 jmp sub mov inc pusha jg mov imul push jne mov clc pop cmp pushf mov arpl sub mov cmp clc and imul push jbe mov jb mov sti sbb popa test outsb mov push jne mov add mov mov push jno mov imul in or mov negb cmp cltd mov arpl sub mov movsl int3 icebp sbb shl and (bad) and (bad) add dec imul test out daa inc test inc bound pop aas pop jg mov imul dec push test dec imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec push pop daa inc test dec imul cmpsb (bad) and test arpl inc data16 inc arpl and pop jle mov pop jnp mov pop ja mov notb mov pop js mov cmc adc mov icebp adc dec outsb lea dec imul stos leave jmp xchg inc test inc bound and jle ret jecxz and arpl and pop jg mov pop jl mov pop jnp mov pop jge mov pop jl mov pop jns mov push je mov repz push jno mov lock jnp mov pop jge mov pop jl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp cltd mov push jbe mov cld sbb pop jnp mov pop jp mov pop js mov notl ss ja mov hlt adc mov pop xchg mov std and lods (bad) repz cmp (bad) jmp pushf mov jae mov jo mov std and mov pop andl (bad) out sub cmp stos into repz cmp test pusha test pop test push sub cltd cmc scas mov add push adc push js shl xor pop andb lahf ret cs jne mov js mov jb mov push mov clc push inc mov pop andl andl jl (bad) out das push jne mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov sti pop inc mov (bad) mov stc sbb mov pop andb fwait mov jne mov outsl xchg mov std and mov arpl cmp movsb (bad) ljmp lock pop andl out das push jbe mov outsl xchg mov add dec jo mov (bad) and mov popa test pop jge ret out cs je shl sub xchg mov insl xchg mov cld and mov popa test subb cltd ret ljmp add push jnp int3 hlt sbb in cmp mov add push jnp lret repz xchg mov subl sbb xchg mov (bad) stos sar and cltd shr cmp mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call stos (bad) add push jp int3 cmc push inc jo shr cmp mov add push jg sar pop inc jne test jne (bad) in push cmp or popa lea mov insb xchg mov xchg ret lock jbe leave lock mov mov push cs subl ss (bad) stos aam sub faddl cs jns lret inc insl xchg shr cmp adc loopne xor adc jp int3 in adc dec gs lods aam and je int3 mulb (bad) jmp cmp mov mov jns leave icebp sbb mov cs addl dec je ret ljmp or pop andb xchg mov test cwtl mov mov jns leave lock mov sub jp lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) mov add pop test cltd shr cmp scas xlat (bad) es jne ret jmp cmp mov subl cwtl shr cmp scas (bad) std and jae ret cmp scas fiadd cs jge int3 repz xchg mov subl push ss mov jge int3 repz xchg mov jle int sbb imul mov jns enter lea mov mov lods aam and je ret ljmp add dec jns enter mov xor test outsb xchg mov (bad) test outsb xchg mov test jns enter insb xchg mov test cltd shl ss mov pop xor test cli and cwtl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc jmp fwait mov loop adc inc pop jb mov xor xchg adc mov sbb dec pusha ja cmpsb mov xor arpl stos rcr or cmp sbbl ja cmpsb mov xor fs stos ret or cmp jg scas (bad) fdivp push and pushf mov jecxz adc mov fdivp push es insl test sub jno mov push cs pop jne movsb mov xor js cmpsl rcr or cmp lahf mov das inc pop ja cmpsb mov xor arpl stos ret (bad) or cmp adcb and sahf mov in pop jnp ljmp xchg scas (bad) (bad) or sbbl sub jb mov sbb inc pop jbe movsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc in push cs pop jbe cmpsb mov xor stos ret (bad) or cmp adcb and pushf mov jecxz adc inc pop je lret icebp or cmp (bad) lcall inc pop jo lahf mov in adc inc pop jae mov sbb inc pop jbe movsl mov xor lods (bad) fcomi or cmp sbbl insb test adc inc pop outsl xchg adc inc pop jb mov sbb nop test fdiv or cmp sbbb add subl jb mov jl rorl test scas xlat add push jns enter fs shr inc push shr aas push mov mov test nop mov arpl mov push and dec arpl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and popf mov fdiv push sbb inc pop outsb sbbl push das pop outsl test push sbb inc pop outsl test add sub push imul (bad) adc cmp cmpsb mov and lea cmp imul (bad) adc ds push rcl call ds push shl sti adc cmp jp movsb mov and dec bound mov pop jge test (bad) repz cmp cmpsl leave in rdpmc push jnp (bad) jmp xor mov push jns int adc pop jge ret sub jno mov (bad) and mov imul jne mov push mov negl inc arpl aaa pop jle enter pop andb popf shl sub xchg mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sbb (bad) cmpsb into repnz pop jge (bad) call (bad) in pop insl mov lea (bad) mov push cs jge int3 hlt sbb popf (bad) cmp mov jmp dec jbe (bad) in adc bound push jle int and ret jmp cmp mov add dec ja (bad) in adc fildl sub mov jo mov test je ret ljmp jmp dec mov xchg pop jle (bad) out sub (bad) and mov mov pop jg (bad) jmp cwtl mov push mov negl cmp (bad) movsl enter pop jg (bad) jmp cwtl mov insb (bad) mov clc sbb popa test push js mov lahf (bad) out push cmp add push jns enter lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub test jo mov subl xchg mov test ja (bad) out push ds mov mov sub repz and push push (bad) or sbbl sub jo lahf mov out adc (bad) cmpsl mov cmp mov loop adc inc pop jb mov pop das inc pop jbe movsl mov xor jns test and push imul xchg stos ret or cmp jg scas (bad) (bad) or cmp imul adc aas push outsb xchg push cs pop jnp stos ret or cmp sbbl insl test sub jo lahf mov in adc inc pop jne movsl mov aaa dec addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or cmp (bad) cltd mov loopne (bad) ds insl test sub outsl xchg push cs pop je mov aaa pop subl insb sbbl sub outsl xchg adc mov sbb dec pusha js cmpsl lret lock fisttp xor flds das pop test xor js cmpsl mov aaa push lea xor jge lods vpmaddwd test adc inc pop je movsb mov xor arpl stos ret fcomi or inc pop jb mov sbb dec fs lods (bad) fdiv or cmp insb test sub pop jae mov sbb dec arpl stos ret fcomi adc inc pop jo mov sbb dec popa jns test and push push loopne adc aas push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lahf mov out pop das inc pop jbe cmpsb ret or cmp test adc mov sbb dec fs lods vpmaddwd test sub pop jae mov push xor mov sbb inc pop jbe cmpsb mov xor arpl stos ret or cmp jg scas (bad) (bad) or mov (bad) es jbe int and fwait (bad) icebp sbb dec bound stos rcr or cmp jg scas (bad) fdivp adc mov xor jp test and push push lcall aas push outsl xchg push sub movsb mov sbbl outsl xchg sbb inc pop js cmpsl mov ss data16 lods vpmuludq cmp imul ds outsb test adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov sbb dec fs stos ret (bad) or cmp sbbb es jb mov sbb dec pusha js cmpsl mov xor arpl lods (bad) fdiv or cmp sbbl sub jo lahf mov out sbb sbb outsb xchg mov (bad) stos sar and cwtl mov xchg xchg mov subb xchg mov inc insb lock mov movsb fnstcw jno mov subl add adc arpl cmp test xchg mov mov jmp cltd mov outsl xchg mov jae ret ljmp clc push inc ja (bad) ljmp ljmp dec fist cmp cmpsb lret icebp push cmp lods (bad) cmc sbb pop (bad) cmpsb int sbb add push xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jno pushf mov (bad) or xor jae sahf mov fdivp or xor jae sahf mov fcomip or xor pop jne lahf mov jecxz push and dec fs rcr add xor jno pushf mov fdiv or mov or ss popa jbe mov or jnp cmpsl mov sub mov fcomip or xor mov or aaa dec bound mov or jnp movsl mov es addr16 cmpsl mov das inc add mov or jns movsb mov cmp jl test adc aas push push xchg stos rcl add sub cwtl lods ret fdiv or aaa dec bound movsb mov and xchg cmpsl mov sub insb (bad) cwtl lods ret fsubr add das inc pop outsl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcomi push sbb inc pop jb popf mov es addr16 cmpsl mov sub imul add sub lcall xor jno popf mov (bad) or xor pop jl test shr (bad) adc aas push insb adcl pop outsl test push sbb inc pop jb sahf mov fdivp or xor mov or adcl pop jno pushf mov (bad) or xor jae sahf mov fdivp or xor pop je lahf mov loopne or xor mov and dec arpl movsb mov and push gs movsl mov cmp jnp movsl mov and nop cmpsb mov sub test fdiv pop sbb inc pop jb pushf mov fdiv push sbb inc pop jo fwait mov fcomi push sbb inc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lcall das inc pop jno fwait mov fdiv push sbb inc pop jno mov (bad) or xor je sahf mov fcomip or xor pop je sahf mov fdivp or xor jae mov or xor mov or xor addr16 cmpsl mov daa cmp test shr (bad) adc aas push push xchg stos mov sub push insb (bad) xchg lods ret add sub push insb (bad) xchg lods ret push test scas (bad) negl inc mov pop inc insl xchg mov cmp jl cmpsb mov and mov sub push xchg test adc cmp addr16 cmpsb mov and dec arpl mov pop jle leave out pop fwait mov jno mov std and mov jle (bad) out sub jb mov outsl xchg mov std add dec outsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call aas popa test push js mov imul mov pop jge ret sub xchg mov jmp inc push pop cmp mov push jp mov insl nop mov stc sbb lret xor pushf mov outsb xchg pop dec insl xchg mov cli sbb lret out adc push jns mov insl (bad) mov clc sbb push sbb pop andl add dec insl nop mov clc sbb popa test pop andb cwtl mov push push cmp mov dec jb mov add dec outsl xchg mov cli sbb int3 out adc jp shl sub mov cli sbb arpl cmp (bad) movsl (bad) ljmp loope daa dec insl nop mov stc sbb popa test push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge ret out sub jb mov std pop inc mov pop jnp shl sub mov imul pop andl add push mov negb cmp mov pop jnp ret sub xchg mov push adc (bad) out sub jno mov (bad) negl inc imul insb (bad) mov negl ds andl test xchg popa test push pop inc push mov jmp repnz xchg xor push jne mov insb (bad) mov stc sbb popa andl js mov test pop jl lret xchg aam adc mov cmc adc push outsl mov dec xchg add inc push sbb pop jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc out sub mov dec insl lea pop jp mov arpl xor xchg mov out or lods ret sti push and pop insl adcb add addr16 lahf mov fsubr (bad) adc dec pop jo mov and pop insl adcb add sub bound fwait add adc dec pop jo xchg test pop sbb push gs sahf mov (bad) jmp inc pop jae cltd lods mov sbb jnp mov add cmp test (bad) or cs push addr16 lahf mov fsubr (bad) adc dec pop outsl (bad) xchg test into loope pop pop aas pop jge mov push ja mov test clc or xor jge mov add cmp jae cltd lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp je lcall push xor insb jg movsl mov pop sub fwait scas rcl cli or xor imul mov fdivp add sub mov add cmp test (bad) or jl mov add cmp test stc or xor jge mov add cmp popf mov inc push data16 lahf mov fsubr (bad) adc dec pop jo cwtl stos add aam cli or insb jle movsb mov fnop add sub bound fwait scas rcl stc or aaa dec pop jo xchg test into loop or cs push imul in add and test (bad) or inc push push (bad) fldlg2 call and adcl cmp je lcall pop xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jge mov add cmp jae cltd lods mov sbb inc push push (bad) fsubr add cmp je cltd mov xlat ljmp outsl (bad) xchg test int repz sbb push fs popf mov (bad) jmp dec pop insl adcb push sbb push gs sahf mov xlat jmp dec pop jb mov cli sbb push jns mov notl mov cli push inc arpl cs jo mov repz iret lock cmp bound pushf scas rcl cli or insb jg movsl mov pop sub popf mov (bad) jmp dec pop outsb adcl pop insb jg movsl mov push sub bound lcall pop xor pop insl adcb add sub pushf scas ret cli or imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle mov sub bound lcall adc dec pop outsl (bad) xchg test into loope pop sbb push gs popf mov (bad) jmp inc pop insl jg movsl mov push sub popa jns mov fucomi add cmp jae cltd lods mov sbb jl mov add cmp jno xchg test or cs push addr16 mov add es fs popf mov aad sti push and pop insb adcb add sub bound fwait scas rcl cli or insl adcb add sub bound fwait scas rcl cld sbb jg cmpsl mov sbb push gs popf mov (bad) jmp dec pop outsl (bad) xchg test int repz sbb push gs sahf mov (bad) jmp dec pop outsb adcl jno xchg stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov pop xor imul mov pop sub push ds jg mov pop jle (bad) and (bad) in and andl arpl and andl push pop daa inc data16 inc andl (bad) mov inc test dec insb lea dec imul dec imul cmpsl (bad) out es test push pop daa inc data16 inc test bound and test dec insb lea dec insb (bad) scas into out push cs outsl mov dec outsl nop scas (bad) lock push jbe mov notb ss jbe mov popa andl (bad) jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg mov icebp adc push ja mov add mov sti sbb (bad) jmp je mov (bad) and xchg dec outsb (bad) mov notb aaa pop js mov test adc pop js mov bound ss jp mov push or cli sbb jge shl and inc popa jle mov dec push sti pop xor jno lods lret xor mov inc popa jg mov push jne mov icebp ucomiss cmpsl (bad) and pop jp shl and mov xor insb xchg daa inc pusha jnp mov jmp and pop ja mov jmp jns mov jmp jne lods enter xor insl mov xor mov ds js mov in or push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lods lret ljmp add jecxz sbb push jb stos enter aas pusha jle mov push jae mov icebp adc (bad) add mov lock sub imul fwait mov pop jle (bad) and jle mov push jne mov cvttsd2si xchg cmp lcall mov ss jo scas int sub cltd mov lock sub sbbb andl adc push jo cmpsl (bad) loopne sbb mov in or dec imul cmp xchg mov in or inc popa jg mov clc and cs sbbb jae,pt mov fcomip add jg mov clc or sub dec pusha jno xchg movsl mov fldl2e cld mov inc push addr16 fwait lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add pusha jb xchg test lret or js scas rcl hlt push pop sub dec pop jo xchg movsb mov fsubr cld or fs cltd stos mov adc aaa dec pop imul mov fucomi add and jle mov push sub dec pop outsb adcb stc or adcl cld mov inc push data16 lcall adc aaa dec pop imul rcl (bad) or sub int3 out add insb jle mov stc or sub test in decb and inc push addr16 fwait lods mov adc mov repz sub pop jno xchg movsl mov fldl2e sti or arpl cmpsl mov mov inc push push mov adc inc pop imul in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pop sbb cmp pop outsl adcl inc push fs cwtl test call and inc push data16 cltd stos mov adc ss pop imul rcl hlt push pop sub dec pop insl jle mov (bad) or sub movsb mov jmp inc push arpl cltd stos mov adc xor push mov pop sbb cmp pop outsl adcl das inc push bound xchg cmpsl mov adc xor push push in or inc pop imul ret (bad) or sbb inc push bound test lret fsubr call and push jae mov out or inc test inc push or inc pusha jl mov dec insl mov cmp xchg mov in or inc bound mov pop js mov repnz push jo lods int3 ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xchg inc arpl xor mov jecxz and mov cmp lcall test cmp add aas popa andl mov pusha andl iret lock push mov dec jno mov clc sbb cmpsb (bad) jmp mov dec push or xchg mov hlt adc dec imul movsl (bad) call test andl hlt push cmp xchg mov pop jl mov popa xchg mov aas pop jns mov jmp and pop jnp mov out or mov jmp sub mov ds jge mov push outsl mov inc pop jnp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp cwtl mov cmc sbb (bad) jmp sub (bad) mov mov inc xchg push ja mov bound sbb push outsl mov dec insb mov imul cmpsb (bad) and dec imul inc pop jnp mov push jbe scas rcl hlt push sbb cmp pop jo xchg movsb mov xlat jmp aas push popa jb xchg movsl mov fldpi add aaa dec pop imul rcl hlt add pop insb jg mov clc or sub dec pop jo xchg movsb mov xlat call ds pusha jno xchg movsl mov fsubr cli or cs push popa jb xchg add add pop insl jle mov cmc push pop sub dec pop insl jle mov testb sub dec pop outsl adcb stc or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push popa jae xchg cmpsb mov fldpi cld or arpl stos mov adc xor push push mov adc aaa dec pop push mov cmc push pop sub dec pop insl jle mov (bad) or sub mov clc or sub push arpl xchg test lret fsubr add and lcall adc mov add jnp popf scas rcl repz daa cmp insl jle mov (bad) or jae xchg cmpsl mov or arpl cmpsl mov push pop xor arpl cmpsl mov adc xor ja lcall adc mov sub test in decb and inc push data16 lcall adc xor push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov lock and inc push push mov adc aaa dec pop push xchg stos (bad) loopne sbb push jb lods leave jmp sbbl dec pop imul ret aam (bad) or sub dec pop jno xchg movsl mov fldpi cld push and inc pop insl jg mov clc or sub dec pusha jb xchg cmpsb mov (bad) cld push pop xor gs cltd enter push sub bound fwait scas ret (bad) ljmp jo xchg test or ds andl addr16 mov add sub pushf scas ret fsubr call and test (bad) or jl mov or inc push push (bad) fucomi add cmp jae pushf scas ret sti push and xchg cmpsl mov sbb lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) flds lock sub bound lahf mov fldlg2 add cmp mov sti push and pop insl adcb push sbb push data16 lahf mov fldlg2 call and test clc or xor jae mov in or xor jle mov add sub pushf scas ret cld mov dec pop outsb (bad) xchg test into loope or inc push imul add pushf scas ret cld mov dec pop outsb adcl inc push addr16 mov add jbe pushf mov xlat ljmp jno xchg stos mov or dec jno int3 clc push and add (bad) or xor jge mov add cmp jae cltd mov out add sub bound fwait scas rcl cli or pushf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc (bad) ljmp jno xchg stos mov push xor jge mov or dec insb pop jb mov nop mov negb cmp fwait mov pop jl shl sub mov pop scas aam pop inc push adc mov std push inc push push inc lea sbb cwtl mov arpl xor jecxz sub xchg mov sti sbb (bad) pop andl icebp sbb cmc adc push je mov stc sbb andl xchg mov cli sbb arpl aaa push jnp shl sub xchg mov add dec outsl mov insl (bad) mov negb cmp leave out adc pop jle (bad) in or mov test pop andl cld add dec jno mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl nop mov es js mov outsb xchg mov jmp dec outsb xchg mov (bad) and nop mov push sub mov and insb mov push test inc lea pop js mov pop jge mov pop jl mov pop jge mov arpl cmp cltd mov je mov negl ds xchg iret repnz pop andb jle loopne sub ret xor (bad) lods into in or dec jno mov negl cmp mov dec jb lret xor fwait mov outsb mov js mov bound sub mov inc test arpl and sbbb pop jg ret (bad) sub mov inc scas (bad) repnz push jno mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push adc push outsl (bad) scas into out or mov (bad) xor mov pop jle and mov mov sbb bound fwait mov jae mov lahf ret sub xchg mov cld and sahf ret sub jbe mov imul pop (bad) movsl enter push js mov xchg pop jg loop xor test outsl xchg mov test ret jmp scas (bad) std and jb shl xor stc and cwtl int3 cmc sbb in ss xchg jb shr cmp scas (bad) std and add push jl int3 hlt sbb loope xor cmpsb into cmc sbb outsb xchg mov mov add push jl lret repz nop mov push cs jge lret repnz (bad) mov adc bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl js add hlt sbb xchg mov jle int sbb push sar and xchg mov subl cltd shr ss test jno faddl push jl lret inc push sub hlt sbb imul push jge into cmc sbb in ss test jne (bad) push jns lret inc push mov test xchg shr inc jo (bad) cli and jbe (bad) lock push imul adc add jns test and push push fdivp push es lret das inc pop ja cmpsb mov xor arpl stos ret or cmp sbbl outsb xchg adc inc popa xchg subl mov and push push (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc pop jb mov and xchg pop das inc pop ja cmpsb mov xor arpl stos ret or cmp jg scas leave loopne adc inc push outsl xchg cmp in adc mov sbb dec bound stos ret or cmp jg scas leave loopne adc aas push outsb xchg cmp mov in adc inc pop jb mov sbb dec pusha js cmpsl mov aaa dec addr16 mov negl dec jns sar sub sbb push jl scas fisttpll aas push lret stc xor mov adc addr16 (bad) icebp push inc jb int sub mov mov xchg shr inc ja xlat push xor mov or insl cwtl leave push xor xchg or mov imul std and jae ret ljmp in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp dec js int3 mull dec jae (bad) icebp sbb js fadds xor roll sub stos (bad) ljmp push jg fiaddl sub mov mov cmpsb aam sub mov or test (bad) mov mov lahf int sub jecxz aas insb xchg mov mov mov inc jae into sti daa push jl sar and sahf int and lret dec jae ljmp pop xchg ret push (bad) pop xchg sar test in sub (bad) add data16 leave add add imul loope inc imul cmp sub mov mov bound jl fsts aaa pop pushf sar xor cmp push mov shr jne fs lret pop xchg mov (bad) cld inc jle jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call clc and mov mov sbb mov hlt cs xchg ret push aad jns,pt fisttpll inc jno pop xor cli ss (bad) add mov mov movl adc pushf xlat add outsl test mov xor mov lods fsts inc (bad) pop cwtl enter je out xor add sbb hlt sub cmp ljmp push mov mov sbb mov sbb add out push mov ret lock push xchg mov enter xchg aam aas insb movsl rorb xor aad mov sub mov fcoms adc jmp pop mov repz sti sub divb outsl lcall adc inc xorb icebp and xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov or jne loope dec (bad) mov lret or add sub dec cmpsl rolb cs (bad) cmp int sub mov adc mov test cmpsl iret add out inc jp (bad) (bad) xor xchg mov fwait sar xor xchg mov lods aam xor add lock push cs lock sar and mov adc outsl cwtl int sub scas out inc imul push ja xlat or lock subl rolb jmp int3 add pusha xchg add cmc das pop xchg (bad) (bad) cmp movsl rorb cmp fisub push lea shr push lea mov sbb xor lret insl mov mov mov pop dec xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in and in adc ja fistp inc jg jmp hlt push pop mov mov push push jl out sbb mov mov (bad) adc cmpsl fild aas imul icebp sub int cmp int sub xor ret pop test into clc xor mov mov adc jb aam add arpl mov ljmp dec jbe ficoml cmovns out mov pushf ret cli and mov getsec insl xchg lret repnz lods push mov jmp dec jg fldl leave divl fs pop pop mov add push iret cli aaa pusha pushf (bad) std sub ret pop xchg sar cmp or jne fildl inc jl add adc scas (bad) dec mov mov vmovntps mov les ja loope dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push (bad) mov lret lods fsts inc jnp add sbb adc mov sar cmp aam outsb cwtl into imulb inc outsb movsl into push xor add scas jmp push jge loop dec test sar gs int3 (bad) jp loope dec jp fistp test sbb scas ficoml cmp mov or push in xor ja fildl inc outsl test push xor int3 testb fs int inc outsl mov sub mov or fist cmp sar xor mov arpl rcr and push jg mov clc xor pusha mov aaa data16 vpmuludq cmp (bad) fwait mov cli adc jb mov pop js cs popf mov fs ret fildl and mov sti adc jae mov imul je stos ret and subb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fisttp lahf into out sub shr inc jb rorl xor pop inc jl jl mov push dec add mov mov in xor movsb fiaddl xor mov adc fwait enter jg aam sub roll xor mov mov subb ret insb pushf into ljmp mov mov mov cli inc jne aam xor (bad) mov mov xchg iret sti daa push test lahf enter jb enter js iret ljmp push xchg ret lock movsl roll cs xchg xchg aad add pop jg sar xor aam and ja vmovups arpl inc outsl cwtl shl cmp mov rclb in cmp fild xor stos aad daa dec ja sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push jge (bad) in adc popa test jo int sbb in xor loopne sub sahf (bad) in adc pop (bad) test negb out dec ja (bad) out adc sar push inc push mov subl xchg mov leave out sbb (bad) mov jbe int3 negl inc imul push jl lret inc imul mov add ss mov (bad) adc clc and shl xor mov jns lret pop test js enter addr16 mov (bad) es je inc outsl xchg mov jle leave in getsec pop (bad) cmpsl lret (bad) and in adc bound subl fwait ret ljmp lock mov subl mov jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jmp cmp lret inc insb xchg int3 mulb dec outsb xchg mov test jne lret aas addr16 mov stc inc push mov subl mov mov mov xchg test mov mov (bad) mov mov add fiadd xor mov add pop test jle jmp aas addr16 mov xchg mov mov (bad) mov je aad and xchg mov jae shl sub pushf ret xor test jge int3 repnz sbb out adc pop (bad) shr cmp test mov push inc insb xchg mov jle lret inc xchg xchg mov add dec jbe ret jmp cmp stos aad and xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov push xchg sar and mov add push js lret cmp mov insb xchg mov cld pop inc push mov jmp in adc pop (bad) test popa mov pusha xchg push flds sub mov xchg mov je shr xor sar push inc imul mov jnp enter imul cmc sbb insl xchg mov (bad) stos popf (bad) lock arpl xor mov outsl xchg mov dec jno mov pop outsl test add sub xchg lods rcl add jle test shr std adc cmp cmpsb mov cmp adcl push push xchg stos mov sub cmpsl mov and (bad) movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jecxz (bad) cmp jns mov cld adc adcb adc cmp cmpsb mov and mov or cmp ja mov or xor sahf mov loop or ss pusha jbe mov or xor jae popf mov fdiv push sbb inc pop jno fwait mov (bad) pop sbb inc pop jo fwait scas (bad) (bad) add cs pop insl (bad) fwait mov fnop add outsb sbbl push sub imul ds push shl cld adc ds imul std adc cmp insl xchg mov add jae popf mov fdiv or xor jb pushf mov fcomi add outsb adcl adc adcb adc inc pop outsb sbbl sbb inc pop insl (bad) xchg stos roll out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sbb cltd scas ret xlat in add sub push push xchg test adc cmp cmpsb mov sub push xchg test adc cmp jnp movsl mov and dec bound mov or xor pop jae popf mov fdiv push sbb inc pop jno lahf mov fdivp or xchg sbb add jae pushf mov fcomi push sbb inc pop outsl test add sub push push xchg lods rcl add ds insb mov sub cmpsl mov and (bad) movsl mov and dec popa jbe mov push and dec bound mov or lcall dec bound arpl cmpsb lret icebp sbb xchg fcompl inc insb nop mov negl cmp jmp sahf ret out popf push inc imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fiaddl int3 std and cltd mov jle lret cmp stc push inc insb nop mov je mov jb mov ja ret jmp cmp lods sar push inc push mov andb xchg mov mov jb ret xor lret repnz cltd shr cmp scas xlat add push ja vunpckhps popa mov xchg (bad) in adc pusha xchg inc outsl xchg sar and xchg mov add dec jb mov ja (bad) in adc pop andl lret repz cmp movsl (bad) jmp mov pop andl int adc sbb mov imul fild sub cltd mov (bad) test bound xchg subb jg (bad) sub xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl subb pusha (bad) movsb (bad) call mov pop (bad) test outsl cltd mov mov mov data16 insl nop mov add dec jno mov jle lret icebp push cmp sti and xchg mov add dec ja shl xor mov arpl inc outsb xchg mov jno mov jnp (bad) xor jg aad push inc mov mov and nop mov add mov dec je mov cmc adc mov out ucomiss nop scas into out adc push jno mov notb cmp shl sub mov push insl mov push ja mov pusha andl lret cmc sbb pop andl pop or std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall inc xchg mov imul push scas (bad) negb bound cmp mov data16 push push inc push es jne mov jl (bad) in adc pop jle enter pop andb subl (bad) cmpsb leave hlt pop cmp mov mov and outsl xchg mov jb mov jns int sbb loope cs jnp enter push sub clc pop aaa pop (bad) cmpsl (bad) ljmp out sub mov sti sbb leave in adc pop (bad) movsb (bad) inc imul repz cmp cmpsl lret xor jmp fwait mov jb mov jae mov mov adc jp ret sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xchg mov jno mov imul imul cmc sbb (bad) mov sti pop inc imul jmp xor lcall xchg mov std and xchg mov outsb xchg mov insl mov pop jge mov mov and mov pop jg rcr and cmpsb enter push jl mov xchg (bad) fildl daa jb jmp cltd mov pop (bad) mov lock sub popa je lcall and xchg cmpsb mov sbb cmp pushf scas ret cli or xchg movsl mov pop sub bound popf mov aad cld push and pop insb adcb add sub popa je lcall and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl insb jg movsb mov fsubr sbb (bad) mov add cmp jae cltd lods mov sbb jl mov call and dec pop jo xchg test pop sbb inc push push fisttpl xor xchg test into loope pop sbb mov std adc xor xchg cmpsl mov sbb inc push addr16 lahf mov fsubr (bad) adc dec pop outsl xchg lods rcl stc or xor imul mov (bad) add sub fwait scas rcl sti push and pop insl jg movsl mov pop sbb mov std mov pop jl mov push xor jge mov add sub fwait scas rcl cli or insb jg movsb mov fnop add sub popa je movsb ret jecxz sub mov fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add fs pushf scas ret cli or imul mov in or jnp mov call and xchg (bad) or inc push push (bad) fldlg2 call and dec pop jo xchg test pop sbb mov add sub bound pushf scas ret sti push and inc pop insb jg movsb mov fnop add jae cltd lods mov sbb jp mov add cmp mov or imul mov fucomp add sub popa je lcall push xor jg movsb mov fnop add sub dec popa je cltd lods mov and pop insl jg movsl mov push sub bound fwait lods rcl stc or insb jg movsl mov fnop add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp je cltd lods rcl clc or xor jl mov adc push je test or jl mov add cmp test (bad) or cs push addr16 lahf mov fsubr (bad) adc dec pop outsl (bad) xchg lods ret sti push and pop insl adcb add sub mov (bad) adc ss pop outsl (bad) xchg test into loope push sbb lea std adc ss pop jno mov lock inc pop insb jg movsl mov push sub popa je lcall push xor jle movsb mov fnop add je cltd lods mov push xor (bad) xlat ljmp outsl (bad) xchg test into loopne push sbb push data16 lahf mov fldlg2 (bad) adc adcl or inc push addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add mov push daa dec imul jp mov jno mov negl cmp lahf enter push jbe shl aaa pop jg (bad) cs jbe mov jns rorb xchg mov std and mov xchg pop jnp (bad) out aaa pop subl jl mov add arpl pushf scas ret sti push and pop insl adcb cmc or cs push addr16 mov pop and outsl xchg mov js shl dec mov bound in sub cwtl mov insb mov (bad) notb cmp stc jne aam and into lock mov repnz push outsl (bad) mov negb cmp out es imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp (bad) mov inc arpl sub outsl nop scas (bad) repz pop jnp (bad) and test mov jns mov and (bad) hlt adc ret and pusha andb imul add inc push or push jne mov negb cmp jge mov mov adc push je mov pop jge mov insb mov pop jns mov push adc fdivr and xchg pop js mov data16 push jae mov negb cmp cltd mov arpl sub insl mov push jp mov xchg dec data16 push test jecxz and shl and pop jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov pop jl mov pop andb outsb nop mov repnz push jae mov lock cs jno lods int3 out adc dec insl mov dec xchg push das dec outsl mov push jno mov cmc adc mov push je mov out or and pop jg (bad) jecxz and jp mov clc adc outsb jg mov stc or sub dec pusha jb stos lret dec insl mov pusha jno xchg cmpsb mov (bad) std push pop xor gs cltd stos mov adc xor push push mov adc dec xchg fincstp or sub dec pusha jno xchg movsl mov fldl2e sti or arpl cwtl test call and inc push addr16 fwait lods mov adc insb jge lahf mov shl cmc pop sbb cmp adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call nop lods leave in and jnp mov xlat call aas push popa jb xchg test call and inc push addr16 fwait lods mov adc aaa dec pop imul sbb cmp outsl adcb cli or inc push arpl mov (bad) or das inc push arpl xchg test add and mov add icebp adc push jne mov test roll jmp inc pop imul loope add daa cmp imul mov shl cmc pop sbb cmp (bad) xchg movsb mov fsubr cli or jb xchg cmpsb mov repnz test add and pushf lods mov adc imul ret testb sub dec pop outsb jg mov testb sub dec pop outsb jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc aam (bad) or sub dec pop jno cmpsb mov fldpi cld or jl mov xlat jmp aas push popa jb xchg cmpsb mov fldpi cld or arpl test lret std adc xor js fwait lods mov adc aaa pop jnp cmpsl mov push and pop ja mov lock int3 in or imul inc data16 push jb mov notb dec outsb mov dec push lcall cmp jp mov hlt pop test dec imul arpl and mov push jno scas int or mov notb mov lea push jne pop andl push jno lods lret call mov inc sbbb push add inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl daa inc mov or mov imul in or mov cld and lea bound adc push jnp mov ja mov popa (bad) cmpsb lret xor cwtl mov push sbb cmc push cmp sahf mov pusha andl jp mov repz dec insl mov inc bound ds jp mov pop jnp mov pop jge mov arpl sbb sbbb pusha andl ret loope sbb mov dec push stos int sbb pop js sbb (bad) mov xor insl mov ds jbe scas lret push cmp xchg lods adc daa cmp nop mov clc or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp xchg movsl mov fldl2e cld or arpl xchg test lret cmp xchg mov out push subl inc arpl or inc pop ja stos leave push pop jnp mov in or dec test push test out daa inc test cmp ja mov jmp sub mov and mov push pop xor fs cwtl stos mov adc pop outsl adcl sub movsl (bad) or push outsb mov inc pop jg ret loop and jg shl sub enter inc popa andl (bad) cld sbb jb test ds js mov out or inc bound sbb push jno lods enter cmp cltd mov icebp adc lahf mov push outsb lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov cs push (bad) sbb push jno test cmp stos (bad) jecxz sbb mov inc popa jl mov jmp and push jo cmpsb rcr adc push outsb (bad) lods (bad) loop sbb push jb scas int3 out pop cmp mov scas leave in push cmp (bad) repz cmp in push cmp xchg mov out or inc andw pop js mov jmp es pop jnp mov repz dec andl push outsl mov ds jp mov notb scas iret in or inc popa jge mov lock dec imul jbe scas int add cmp ja mov pop js mov lock push jb lods enter ss jb lods lret and jge mov icebp adc dec jae scas lret jmp sub jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) lods lret and ja mov repz dec insl mov inc popa jl mov out or dec test aaa push outsb mov inc pop jnp mov cmc adc dec push stos (bad) in or inc pop jl mov dec imul ds js mov in or pop jp mov icebp push sub subl lret and pop jnp scas enter xor sbbl sahf mov inc je scas lret jmp and mov jmp jne scas lret push cmp jne mov ljmp mov lock cmp (bad) stos enter cmp mov xor xchg in add and inc push arpl xchg mov icebp add xor xchg push mov hlt add and inc push arpl xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xlat repz dec sbbl adc dec outsb mov inc arpl enter pop jns mov push je scas int inc mov ficomp cmp sahf mov add fwait mov pop jns mov push jbe mov icebp push xor mov inc sar sbb pop jle ret mov inc pop imul loop add pop insb test cmp mov push jbe mov out or inc pusha jl mov cld sbb pop js mov pusha andl iret icebp adc imull xchg add addr16 je mov arpl daa add xchg mov negb ds jle mov pusha jle shl sbb pop jnp mov pop jl mov outsb mov dec imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) jmp sub test adc ss pop imul ret testb ss pop jo xchg mov stc or test in std pop xor data16 fwait lods mov pop sub dec pop insl jle mov clc or sub dec pusha jno cltd mov adc insb jge mov testb sub dec pusha jb xchg cmpsb mov push js lahf mov shl testb sub mov cli or aas push bound xchg cmpsl mov adc xor ja lcall adc insb jge stos mov adc aaa dec pop insl jle mov sti or cs push arpl cltd stos mov adc imul mov aam (bad) or sub dec popa jb xchg cmpsl mov push and inc pop jb scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec in or dec imul movsb (bad) out and (bad) mov cmp xchg mov out push xchg add pop jbe mov hlt adc push outsl mov push cmpsb (bad) out sub xchg pop jle mov pop jnp mov shl roll mov andl test inc arpl mov push jo lods lret in or dec push std sbb push jbe mov std xchg mov test inc pop jg mov pop jp ret in es mov cmp jne scas into jmp and mov push jae mov in or inc popa test sbbl cltd mov in or pop ja mov out push cmp mov xor mov out or dec arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cmp mov cs sbbw inc pop jge mov in cvttps2pi jge mov out or inc pop jnp mov in or pop js scas leave in pop cmp jae stos (bad) loop sbb insb mov xor insb mov dec push clc adc mov sub arpl mov inc pop jnp mov inc pusha jl ret loope sbb push jb lods lret add or dec imul lcall jne mov jmp daa inc arpl sbb push jne mov lock cs insb mov xor insl mov push jb stos leave in sbb push insb xchg cs push out or pop je stos (bad) pop xor imul ds ja scas lret call jbe cmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push adc sbbw pusha jl mov inc bound mov inc pop jp mov jmp jne scas lret out pop cmp mov sbb and mov dec push sbb push jp mov negl cmp xchg mov repnz fdivr sbb pop jl mov pop jp mov and inc pop imul in or sub movsl mov repz sbb cmp adcl xor gs cltd stos mov adc inc pop imul mov shl (bad) or sub dec pop jno xchg cmpsb mov (bad) decb and inc push gs mov and inc push gs cltd stos mov adc cmp insb jle mov clc or test in (bad) adc xor inc pop push lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sbb (bad) add insl jle mov (bad) or sub movsb mov fldl2e sti or xor gs cwtl stos mov adc lea cmc pop cmp mov cli or aas push popa jae xchg cmpsl mov imul push sub xchg ds pop jl mov bound and jge mov pop js iret out or xchg mov negl cmp (bad) and mov dec insl lea dec lahf shl and jl mov stc sbb or inc arpl and rcr sub imul inc data16 inc bound mov push je mov not xor fwait mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl shr adc pop jge mov cmp xchg mov jmp (bad) mov mov lock dec jno mov clc sbb push jne mov icebp push sub sbbb outsl mov mov comiss xchg aas pop jg mov gs sub (bad) in es arpl and (bad) in and arpl and cltd mov pop andl lock xchg mov notb xor xlat daa dec imul inc bound push ds sbb fdivr sbb push je mov comiss xchg mov clc sbb pop jg (bad) in and (bad) lock mov pop jp enter push jo mov std sbb pop andb data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov push jnp mov dec imul mov arpl add jo mov clc and cmp jnp mov push jno lods int3 jmp sub lea dec push cmpsl (bad) out or stos enter cmp jnp mov cmc adc push outsl lea inc data16 ds jp rcr sbb mov hlt adc add mov jmp inc popa andl test dec jne or pop jl (bad) out adc arpl push jns (bad) in (bad) pop jl mov test push je mov mov pop inc imul jecxz sub and sahf rcr sbb mov dec imul xchg mov in or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lea inc push imul add fs popf scas ret std adc dec pop outsl (bad) xchg test into loope pop sbb mov hlt sbb pop jl shl ret and andl jmp dec pop outsb adcl push jns movsl mov sbb inc push addr16 movsb mov (bad) add sub push fs popf mov fsubr call cmp mov push arpl sahf mov fsubr call and test sti mov dec pop outsl test stc or xor xchg test or ds data16 mov add ja mov add cmp jne fwait scas ret xlat jmp adc cmp je fwait scas rcl cld adc dec popa je pushf scas (bad) fmuls das dec outsl xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec loopne pop sbb inc push push lret add data16 mov add cmp je pushf mov (bad) jmp dec bound mov pop sub xchg cmpsb mov sbb lea add jbe pushf mov xlat jmp adc cmp jbe lahf mov fdivp add jno mov push js mov dec pop jno xchg stos mov push xor xchg push jbe mov negl jp int add aaa dec pusha je lcall and inc pop insl adcb push sbb push gs sahf mov fiaddl mov arpl xor pop insl adcb sbb inc push push (bad) (bad) call and adcl sbb inc push imul add daa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp jae cltd lods rcl cli or insl adcb pop sbb inc push addr16 mov add aam pop ss pop outsl mov or outsb adcl inc push addr16 mov add js lahf mov xlat ljmp add out push and xchg stos mov push xor imul mov sbb inc pop insl adcb cmp cmpsb (bad) out clc sbb jle rcr and jle mov sub mov sbb pop sub mov dec outsl xchg mov cli sbb (bad) call test aad cld mov dec pop outsl adcl or inc push push (bad) icebp adc pop jle (bad) jmp xor xchg mov jp shr xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb jo xchg stos mov sbb inc push push lret add sub arpl pushf scas ret out add gs lahf mov (bad) add cmp je lcall and test std adc ss pop jno xchg test or xor imul into loop or jge movsl mov sbb inc pop jnp shl and shr cld mov dec pop jo xchg test pop sbb (bad) out and dec pop jo xchg test or cs push imul pop sbb inc push push lret add arpl popf mov xlat ljmp mov (bad) adc xchg cli sub pop outsb sbbl sbb inc pop jno pushf mov fdiv push sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or js movsl mov daa cmp test adc cltd mov fcomi pop sbb dec pop js movsb mov push sub outsb test jnp test adc inc push imul add cs pop jo lcall cmp push shl std adc ds test or aaa dec fs movsb mov sub insb adcl pop jae lahf mov in adc cmp test sbb xchg mov add dec jne ret ss (bad) cmpsl int3 icebp push cmp mov jno mov scas ret fsubr add cs pop insl sbbl sbb mov or xor mov or jp xor lahf mov add clc or jns mov (bad) cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp nop movsl mov cmp jnp cmpsl mov sub (bad) fdiv or xor je sahf mov fcomip or ss pusha jne mov or cmp jns movsb mov sub lods ret (bad) add mov std and mov imul xchg lods ret add cs pop outsl test and dec bound mov adc (bad) movsl mov sub push imul add inc pop jae sahf mov fcomip or ss bound mov inc pop jae sahf mov fcomip or xor mov or js movsl mov sub stos mov cs pop subl mov insb xchg mov push xchg stos rcl add sub push imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add xor pop subl test push xor jb popf mov loopne or ss arpl mov sub imul call aas push imul call ds imul (bad) adc inc push imul call adcl jb popf mov (bad) or aaa dec popa ja mov or xor mov cld adc cmp test adc xchg mov xor pusha jbe mov push and dec gs movsl mov sub push imul call aas push push xchg stos mov xor test hlt sbb mov leave in wrmsr push jb mov hlt adc pop jns mov xchg push jbe mov pusha andl jbe mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cli push inc insl rcll sub outsl test push sbb inc pop jno sahf mov fcomip or xor mov adc inc push insb adcl pushf mov loope or cmp ja mov or jnp movsl mov daa cmp push xlat in add cs pop jo pushf mov hlt or jle test shr call inc push insl test push sbb inc pop jo fwait mov fcomi push sbb mov or xor mov repnz pop andl pop inc mov sub (bad) (bad) add outsl test add cs pop jb popf mov (bad) or mov or xor mov cli xor stos ret add cs pop outsb sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or aaa dec popa ja mov inc push mov add mov mov pop cmp (bad) test pop jge (bad) jmp xor dec les mov jnp lret daa cmp cmpsb enter push jne mov bound mov or aaa dec popa jbe mov sysenter push insl (bad) xchg lods ret sbb inc push push leave fsubr add inc xchg xor mov cli or imul mov inc push addr16 mov add cmp xchg sti push and pop insl adcb add data16 ret fldlg2 call and test cwtl (bad) out das push jbe mov (bad) and push gs sahf mov xlat ljmp outsb adcl inc push imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xor jae pushf mov fcomi add outsl sbbl pop sub push insl (bad) xchg lods rcl add enter xor pop je sahf mov fdiv pop sbb inc pop jo lcall xor cwtl lods ret add sub xchg stos rcl pop cs pop outsb sbbl add outsb sbbl push sub push push xchg test adc cmp test adc cmp data16 cmpsb (bad) (bad) (bad) cmp js vpslld sbb inc pop jo lcall sub mov fistp inc xchg shl mov jp enter insb xchg mov jg into repnz mov js leave repnz or aam sub lahf vmovshdup arpl dec jbe (bad) cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp andb mov add dec outsl xchg mov jge mov inc jl leave in sbb (bad) mov push xor sub mov cld and jae shl cmp test outsb xchg shr xor test nop (bad) lahf inc xchg cmpsl and pushf ret cmp mov add push jnp vunpckhps xchg mov xchg (bad) lock (bad) mov pop xor cmpsl into add call mov add dec jae (bad) in push cmp mov add dec ja ret out pop aas arpl dec jne (bad) aaa pop xchg js enter addr16 mov (bad) sub popf ret in pop inc mov std sub mov pop test pop test fmuls das push jg int sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push jge int sbb mov jo or pop test je (bad) cmp fwait ret cmp pop sub jge iret cmc sbb mov lods fadds sub mov outsl xchg mov test lea xor pop fisttpll xor lods sar scas outsb or pop test test js leave repz inc insl xchg mov or pop (bad) stos sar and ret out adc fiaddl (bad) mov or push jg (bad) jmp dec sar and out cmp test insl xchg mov mov js ret aas arpl dec leave repz xchg mov subl xchg mov jnp leave in push inc mov sub lahf (bad) aas ret inc imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sub out and repz xchg mov pop andb xchg mov add push call mov add push js (bad) jmp aas mov daa dec jno mov lea test into mull dec je ret jmp push jg sar add dec ja enter push sub jge lret repz xchg push pop xchg mov sbb outsl fwait vunpcklps imul adc mov roll daa push jp int3 repz mov repz jne (bad) out adc add pop (bad) test loop das push subb mov insb xchg mov mov add cmp (bad) in adc push cmp mov or pop xchg add pop xchg jbe sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push sub push dec outsl xchg shr cmp mov or bound mov or stc sub cli and jns (bad) inc imul lea mov mov jl int cmp xchg mov (bad) cmpsl into negl in xor test insb xchg mov cmpsb sar and in adc ret jmp lods sarb sahf ret sub mov jno mov cmc adc mov pop jle shl aaa dec bound mov pop jle leave in movaps mov and dec bound mov or xor pop jae sahf enter and dec popa jbe mov or xor pop je sahf mov (bad) pop sbb inc pop outsl test add sub push insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ljmp xchg lods rcl sbb dec fs mov or ss pusha jne lahf mov fdivp or xchg add cs pop insl (bad) cltd scas ret fsubr add xor test add sub push imul std adc cmp data16 movsl mov and dec pusha jne mov xor outsl test popa lea sbb xchg loop or xor sahf mov fdiv push sbb inc pop outsl sbbl sbb subl test pop jne mov xor jno fwait mov (bad) add cs pop insl xchg mov inc pop insl movsl push add dec outsl xchg mov xchg mov subl cwtl mov test fwait shr (bad) in adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov jmp dec ja (bad) in push cmp mov jg ljmp add pop subl mov data16 jnp jecxz cmp mov add pop subl or pop subb mov add dec jno shr cmp fldl lret inc imul fwait ret in adc lea (bad) test jae (bad) call lods call mov jle sar and cltd ret aaa pop xchg jp icebp sbb xchg mov mov je (bad) out adc in xor pop (bad) stos sar and pushf iret sti and popf ret jmp aas data16 mov add lock data16 mov or mov pushf mov in add sub xchg lods rcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc jle test adc cmp data16 movsl mov and dec gs movsb mov and dec popa jbe (bad) sub mov or ss popa jbe mov xor pop je sahf mov (bad) pop sbb mov or loop sub ja (bad) fcomi push sbb inc pop jo lcall das inc pop outsb sbbl pop sub pop insl (bad) xchg lods rcl add inc outsl cwtl rcr add sub xchg lods rcl add jle test adc cmp data16 movsl mov cmp jns mov cmp jnp movsl mov and dec arpl mov or ss pusha jne lahf mov fdivp or dec outsl xchg or xor jae sahf lret cmp cmpsl into cmc sbb nop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pop sbb inc pop jo lcall sub cltd scas ret fsubr add sub push jg leave out adc pop (bad) test inc jo mov js ret xor jnp (bad) out sbb je sahf mov loopne or xor lahf mov fdivp or xchg sbb inc pop jo mov add cmpsl leave in push das push jb mov push mov mov dec test jae ret out cmp scas aam and out xor subb ret cmp lea js (bad) cmp mov sti pop inc jo mov mov or negl loop sub repz xchg enter data16 jp enter mov push jnp lret repz add pop jg lret repz inc insl xchg mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl push jge (bad) negl inc imul mov add js enter arpl push js vmovlps data16 subl lahf enter mov jbe (bad) icebp sbb mov lea jnp (bad) out sbb mov jnp into negb inc jnp cmp stos sar and xchg mov jge xlat std and ja ret cmp ljmp add dec scas xlat push sub cmp popf mov mov sub pop sbbl inc pop sbbb and mov or cmp js mov or cmp ja mov or nop cmpsb mov cmp jg stos rcl add cs pop jo fwait mov fisttp xor jne sahf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivp or xor pop je lahf mov icebp or aaa dec popa jbe mov or cmp js mov push and push gs cmpsl mov sub cmpsl mov daa cmp data16 rcr and outsl test add jae mov (bad) cmp jns mov or js mov or nop movsl mov xor test hlt sbb xchg mov pop jae sahf mov (bad) or xchg push sbb mov call aas push imul call das inc pop outsl test add cs pop add mov loopne or xor mov inc push insl (bad) xchg scas (bad) fldz add sub lcall das inc pop outsl test add jb popf mov fdiv pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg dec pop je sahf mov fdivp or ja mov ss popa jbe mov or ss popa ja mov or aaa dec popa mov pusha jne lahf mov loop or jp movsl mov and dec arpl movsb mov and dec fs mov (bad) or dec data16 cmpsb mov sub imul add sub xchg test and push push loope adc inc pop jae mov and cltd (bad) out sbb push popf mov in adc inc pop jae mov xor jns test and dec addr16 scas (bad) fdivp or test pop das inc pop jbe cmpsb mov aaa dec mov jmp mov inc pop jb mov sbb dec pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) js cmpsl mov cmp jg scas (bad) fdivp or xchg test and push push fcomip push es mov in adc inc pop jno mov sbb push jle mov test adc inc pop je mov inc jno (bad) in adc inc pop jbe cmpsb int sbb fisttpll xor mov loop adc inc pop jb mov sbb dec pusha mov aaa dec data16 lods (bad) or cmp mov xor add fwait mov jecxz adc inc pop mov ret add xchg ret cmp js (bad) ljmp pusha (bad) mov test sub pop inc push xchg scas call mov sbb dec gs scas (bad) fcomip adc inc mov inc pop jge xlat repnz cmp sbbl sub jbe cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall aaa dec addr16 scas enter xor data16 scas (bad) loopne adc inc pop jo mov sbb dec bound lods (bad) fdiv (bad) dec jb (bad) repnz and test xchg mov xchg (bad) repnz out inc push (bad) hlt pop dec jbe sar and or adc movsb int3 mull push jle roll sub test mov (bad) clc and test xchg shr inc subl dec ja int sub stos flds add arpl jno iret stc and add dec jl (bad) or popa nop shr dec jge aam aas imul mov mov sbb xchg stos ret or and pushf mov pop movsb xlat add push jle sar and mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fcomip (bad) ds outsb xchg fldl das push jnp sar daa dec ja lret das inc pop jbe movsb mov xor xchg scas (bad) fcomip push es outsb xchg adc inc pop jno mov pop cs pop jne movsl mov xor test and lcall inc pop outsl xchg adc mov sbb xchg mov xchg mov pushf (bad) dec jp shr add xor jp test sub stos xlat add pop add aaa gs mov popf lret dec jnp iret (bad) xor (bad) repnz mov (bad) scas fimul cmp mov lcall fiaddl cs mov xchg js cmp (bad) icebp sbb popf leave mull pop test jns iret cli and jp roll xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or repnz sbb jnp fadds aaa xchg (bad) push xorl sub movsb sar sub mov out pop push ss gs stos ret (bad) or cmp (bad) cltd mov loopne adc aas push outsb xchg push je movsb mov xor jp test inc jo ret in pop inc imul (bad) mov (bad) insb xchg xor mov sahf lret addr16 and sar sub mov push cmova (bad) out sbb cmpsb aam test sbb test stos fimul inc outsl sahf iret add dec jp outsb fwait lret push jp enter pop jne movsb mov dec imul pushf enter ja (bad) icebp imul pop dec jne int3 add fisttp cmp cli sub mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl gs mov (bad) repnz lcall int3 cmc sbb icebp sbb repz jae enter ja (bad) icebp push pop xorl mov or pop test mov (bad) lods aad mov icebp and cmpsb iret ljmp sbb mov jg lock jno into cld es jnp fiaddl or xchg mov scas jo aam xchg int daa bound push push subb mov xchg shr push subb mov sbb dec pusha js shr dec jae ret ljmp xchg mov mov (bad) stos add stos fiaddl xor inc jp sar sub cmpsl sar and or popa lea jp inc insb xchg mov jge int3 repz xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push jg loope xor or pop (bad) lods aam and pusha mov insl lcall aam xchg (bad) aam ds shr inc jae enter js sar sub in imul es fwait (bad) out push dec jns (bad) push xor mov xchg mov lahf lret cld sub lods fildl das addr16 ret in pop cmpsb xlat add pop mov mov xchg (bad) hlt sub lods fadds out sbb jae int and cmpsl aad xchg mov subl ds shr inc outsl pushf roll sub mov push das pop test icebp sbb clc es mov xchg mov mov subb mov sar and ja (bad) in adc pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sti and xchg mov lcall (bad) sub jbe ret xor mov mov bound test daa inc pop jo mov sbb dec popa jns test and push insb test inc arpl stos ret fcomi or cmp imul jnp lret hlt sbb out sbb cwtl mov jecxz push cs pop ja movsl mov xor sbbl sub jno mov aaa arpl lods (bad) fdivp push es insl test push cs pop jne movsl mov (bad) repz movsb into cld sub test add xorl push jge (bad) icebp or cmp (bad) lcall aas push jo lahf mov out adc mov xor cltd (bad) out sbb lahf into clc and test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov popf enter jge roll sub sbb cwtl (bad) inc outsl lahf lret add push xorl ret inc js iret cld sub scas (bad) xor and cmpsb flds ss mov mov jg fldl xor (bad) lock cmpsl aad sub mov add pop mov (bad) mov mov subl pop inc jno lret hlt sbb add out dec js int3 cld sub lods fadds ss mov (bad) dec js aad sub mov pop cmp icebp sbb (bad) cs xchg mov mov subb mov cltd (bad) dec jle fiaddl sub mov cltd (bad) in sbb jbe lret pop test lahf iret add jmp insb test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jecxz adc inc pop jo lahf mov repnz stos int3 in pop xor ja cmpsl mov cmp (bad) lcall inc push outsl xchg push cs pop jbe movsl mov xor jg scas enter es push outsb xchg sbb dec pusha js scas faddl sbb dec gs lods (bad) fdiv or cmp insb test sub popa jns test xlat out pop pop aaa dec addr16 scas (bad) adc inc push jo lahf mov out pop cs pop jbe movsl mov xor arpl stos ret fnop sbb subl push jnp iret cli and mov jl sar and mov jl xor mov jns mov loope adc inc pop jo mov sbb dec pusha js test and push push fwait mov jecxz adc inc pop jae mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ljmp xchg scas (bad) (bad) verw inc pop jae mov push and push push loopne adc inc pop jno mov pop xor js cmpsl mov xchg test subl xor test mull inc jb (bad) inc jo shr inc push shr cmp fisttp xor lods sar and cltd shl cmp mov add pop subl stos sar and js lret inc jo (bad) ljmp add pop (bad) stos aad ss mov jbe (bad) jmp cmp scas aad and xchg mov jne (bad) cmc sbb (bad) mov add dec jae shl xor mov arpl dec je (bad) negl fldl sub lcall cmpsl int3 repnz lea mov push sub jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec add push jge sar and lret repz dec jne int3 imulb push subb test (bad) sub stos aam es jp iret stc and js int3 add push subb lods xlat add pop test subl cmp mov or pop test js (bad) lock jo (bad) inc js sar and jbe leave icebp sbb xchg mov jg iret clc pop inc insl xchg ret sbb (bad) mulb pop test lea mov jns roll sub scas fimull xor mov or sar sub scas xlat add pusha mov sahf rolb bound jne iret add pop xorl inc insb mov subl dec jns sar and or jg ljmp adc arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub imull push jnp lret repz xchg mov jle int3 repz jb ret jmp aas xchg mov xchg mov (bad) mov pop cs jl sar daa dec jns lret hlt push dec jo sar and jbe leave hlt sbb mulb dec jbe lret dec js lret hlt pop dec js lret push jns (bad) lock xchg mov nop mov mov sub mov or adc cltd (bad) dec js jmp inc outsl fwait lret dec js sar sub mov push xor shr dec ja loope cmp sbb fwait enter jge xlat push xor sbb mov adc lcall xlat add pop mov pushf (bad) icebp dec jp rolb das pop xchg (bad) mov cltd (bad) repnz dec ja push movsl sar daa push xorl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc call movsl iret cli sub icebp and mov jg fisttp arpl dec jbe aad sub fimul xor mov xchg shr inc jae leave clc and add scas fmull aaa popa mov (bad) mov mov dec je sar sub mov or pop mov xchg (bad) cmc push dec ja sar and (bad) imul mov or insb cltd ret add stos fadds xor mov push inc outsl sahf int es jl (bad) add inc outsl mov jge fildl popa (bad) mov mov test mov shr dec jbe fisttpl mov pushf lret dec jns xlat add pop mov mov jge xlat add sbb ret lock dec jne into cld sub xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc out sbb xchg mov test subl pop cs jge into clc and (bad) out sbb nop mov or push jnp flds pop xchg subb mov je (bad) out pop inc imul xchg mov mov scas sar sbb aad sbb (bad) mov repnz aaa pop jp mov jae mov cli sbb pushf ret pushf shl inc xchg push jns mov imul inc mov in sub in sub negb inc mov mov push mov std and (bad) mov cli push inc jo mov std and xchg mov jbe shl xor pushf mov outsb xchg mov (bad) sub mov std and (bad) mov cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc push mov (bad) and lea mov push sub lock xlat cld and adc xor lods (bad) cmc pop inc outsb xchg mov mov jns lret ds mov add mov subl xchg ret cmp mov add dec addl jle test das inc pop outsl test sub push insl (bad) cwtl lods ret add das inc pop jo lcall das inc pop outsl test pop sbb mov or mov gs test adc aas push imul std adc ds imul call inc push insl (bad) xchg lods rcl add sub push imul adc cmp jnp cmpsl mov sub push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc push imul add adcb adc jge test adc aas push imul andb pop outsb test add cs pop jo lcall xor jno fwait mov fcomi add jo fwait mov (bad) adc ds imul add sbbl sub lods ret add sub fwait mov fcomi pop push xor je sahf rcl add sub imul add sub insl sbbl sbb inc pop jno fwait mov lret or aaa dec bound movsl mov cmp sbb fwait mov fcomi push sbb dec pop jae sahf mov loope or cmp js mov (bad) cmp jp movsb mov xor pop jne lahf mov loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or jns movsb mov aaa pop jnp movsl add sub push insb (bad) fwait mov (bad) or xor pop je sahf mov loopne adc jg stos rcl add sbbl pop jb popf mov fcomip or xor pop jne mov or push je mov pop sub push imul add jb popf mov fcomi add jno pushf mov fdivp or xor sahf mov loop or sbbl sbb inc pop jo cltd scas (bad) fldz add inc push xchg lods rcl add sub push imul (bad) adc ds push shl sti adc inc pop outsl test add outsl test add sub push imul (bad) adc cmp cmpsb mov and dec arpl enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) adc adcb adc aas push imul (bad) adc ds push aam (bad) adc aas push push shr (bad) adc add stos rcl add sub push xchg stos mov push push shl cld adc cmp data16 cmpsb mov pop cli jl int3 in adc pop (bad) movsl lret icebp pop addr16 mov andl sbb mov jbe ret call sar and jno mov (bad) stos (bad) negl loope xor movsb in push inc arpl test outsl xchg mov mov xorl mov jo lret pusha lcall mov out ss test push mov jge lret icebp pop aas data16 mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fimul xor movsb and repnz push ds jne movb lret inc insb xchg mov pushl fwait mov inc push aam cmp test inc push test jbe shl sub je mov xor negl cmp mov xchg pusha mov arpl inc loopnew cs jns iret icebp push cmp negb aad sbb lea imul jb mov add dec ja (bad) xor popf ret out ss js mov jp shl sub xchg mov std and scas rorl (bad) or push jge ret call mov pop mov test push sub mov pop jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push jns ret cmp scas aad and xchg mov jno mov in push aas lea cld and add push subl xchg mov (bad) lods (bad) (bad) sub lods fiaddl das push jp lret cmc sbb jno (bad) in push inc imul fistl lock xchg mov lcall mov mov xchg mov addr16 mov inc test push mov inc jle leave out adc pop (bad) cmpsb lret aas mov (bad) cmc sbb imul out xor mov pop subl xchg dec jge sub lods (bad) hlt pop inc mov push inc mov pop addl push sbb (bad) es jno mov js sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp je sbb flds mov jp enter pop (bad) test fs add pop jl (bad) out xor mov pop (bad) movsl int sbb mov andl stc and xchg (bad) pop andl (bad) add inc mov insb xchg mov add dec outsl xchg mov or pop andl hlt sbb dec jg int3 in adc pop test xlat add shl das pop jnp (bad) in adc push jnp (bad) in cmp insl mov push pop aas bound inc arpl xor jge ret in (bad) sar and xchg mov add dec je mov jne shl jge popf movsl (bad) cld and xchg mov add dec je je shl mov je ret xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc out adc jno mov jp (bad) out adc jl lret inc mov mov pop (bad) movsl lret in adc jl shl xor xchg mov imul pop andb mov add je cltd lods mov and inc pop insb jg movsl mov push sub bound popf (bad) fucomi add cmp test (bad) or inc push push mov pop sub arpl fwait scas leave in and dec fs movsb mov and dec outsl nop movsl mov and dec arpl mov push and dec bound mov or xor pop je sahf mov (bad) pop sbb inc pop jno lcall inc xlat add lods shl std adc aas push imul cld adc cmp jns mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor rorl xor jae sahf mov (bad) push sbb inc pop outsl test add outsb sbbl pop sub push imul (bad) push inc fs movsb out and dec pusha jns std and xchg mov adc pop (bad) cltd scas (bad) fldz add cs pop insl (bad) xchg lods (bad) cld and mov arpl cmp push xchg test adc aas push imul cld adc cmp data16 inc push push xchg test adc cmp push imul cld adc cmp jp cmpsb mov inc push push (bad) jecxz sub xchg mov cli sbb push (bad) (bad) add cmp test add inc push push nop mov add cmp jae cltd lods mov xor insb jg movsl mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp fwait scas rcl cli (bad) dec insl (bad) mov in call and adcl push sbb push lods roll (bad) lods mov push xor jl mov add sub fwait scas rcl cli or imul mov fucomi add cmp xchg scas ret sti push and pop insl adcb clc or xor push nop lods iret jmp adc adcl pop sbb mov cld mov push jbe mov fcomip add arpl pushf scas rcl cli or imul mov fsubr add je lcall std daa popa xchg adc xchg mov sti pop inc mov pop test pop andb jg shl sub xchg mov push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti pop inc insl (bad) mov cld sbb iret (bad) and mov andb andb (bad) cmpsl lret xor popf shl sub mov push scas aad sbb popa xchg arpl push jl (bad) call lcall popf shl sub xchg mov imul mov pop andl out sub sub xchg mov jne mov jb mov je mov xchg mov jo mov add dec outsl xchg mov std and mov cld and mov jmp mov ret jmp mov push jp (bad) ljmp fdivrp and mov mov pop andb jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc ljmp faddl daa dec insb nop mov cld sbb push sbb nop mov cld pop inc xchg pop subl jbe mov js mov js mov outsl xchg mov cli pop inc push mov sti pop inc mov jge int3 jg aad and mov jp shl sub cltd mov gs mov cld sbb (bad) in rdtsc push js mov pop jns mov pusha mov pop add sub int3 ljmp (bad) and jg mov push jbe mov icebp sbb pop jns mov cmc adc push jno lods int3 jmp sub test ss jo scas (bad) lock cs insb mov inc pusha jle mov dec push test out and bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fincstp pop aaa push jne mov lock cs imul push jo stos lret and bound mov push jne mov in or cmpsb (bad) cmp andl pop jns mov cmc adc push outsb mov inc arpl sbb pop ja mov hlt sbb pop ja mov add dec push or dec insb mov jp mov mov pop cmp sahf shl and push adc push ja mov mov push xor mov dec jae mov notb cmp mov dec imul pop jnp mov arpl push jbe mov xchg dec jb mov repnz push jno mov lock pop jns mov inc arpl dec insl mov push jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc jecxz and stos int sbb pop jl ret sub mov push jbe mov stc sbb pusha andl xor jmp mov dec push scas shr adc push je mov negb cmp imul scas into out or mov cmc push aaa push jbe mov clc sub (bad) dec jno mov stos int3 ljmp test push je add cmp jae cltd lods mov and pop outsb adcl mov mov jae mov notb cmpsl (bad) hlt adc mov fs mov sbb adc je mov cli add inc push daa pop jb cwtl lods mov pop xor imul mov loopne pop sbb lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl and insb loope aas fwait push cmp test mov pop jnp mov jno mov sti sub jg mov cmc or cmp lret loopne or xor pop jae popf mov fdiv push sbb inc pop jo lcall cmp jns mov (bad) cmp js mov or ss pusha je lahf mov (bad) or mov xor jb mov (bad) or xor pop jae sahf mov fdiv pop sub lcall adc pop mov loop xor (bad) in adc bound dec outsb xchg shr dec addr16 cmpsl mov cmp xchg mov cmp jp movsl mov and dec arpl mov or xor mov or xchg sbb inc pop outsl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop sub push imul jmp dec jo mov xchg mov jno mov jne shr cmp mov push das pop jge (bad) jmp xor shl aaa pop subl fwait (bad) ljmp iret negb inc outsb cwtl mov mov popa xchg mov jp vunpcklps inc imul mov lea xchg (bad) cmpsb int3 lock cmp and nop mov add movsl mov and mov adc mov out adc cmp outsl pushf shl sub xchg mov jne shr dec jae mov jne ret aaa pop test pop test jns mov xchg mov xchg push (bad) cmpsb leave push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg (bad) hlt sbb jnp mov fdiv add sub outsl xchg mov fsubr call and mov jp shl sub xchg test into loope pop sbb lahf mov popa andl jae mov jg shl daa pusha test test mov jae (bad) jmp cmp scas sar pop inc outsb xchg mov xchg mov jg lret cmp scas (bad) cmc sbb xchg mov test in adc popa mov jle int push inc imul js ret ljmp test negl insl xchg shl aaa popa mov test jl enter mov sub leave lock mov je (bad) jmp inc outsl xchg mov (bad) stos (bad) cmc sbb call mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) daa dec js into cmc sbb (bad) mov addl aam es jne (bad) out adc fiaddl sub sar daa dec jno (bad) out adc lea jb ret jmp cmp scas (bad) add push jnp lret clc sbb insb xchg mov jge iret negb inc insl lcall scas fdivr xor movsl int sbb (bad) mov pop xor cmpsb int push inc push sub into negl insl xchg mov subl cltd (bad) call mov add dec jne iret negb inc push mov pop xor movsb lret repnz cmp mov ja (bad) lock arpl adc pop andl ljmp leave repnz xchg jbe mov or jmp cwtl orl sbb mov cld sbb pop jl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test clc or lea sbb inc push push leave fsubr add jbe mov (bad) or dec outsb xchg scas ret (bad) jmp dec pop outsb adcl push data16 lahf mov (bad) add iret out push sub stos int wrmsr push je mov cld push aas pusha andl pop aaa push js mov pop clc and adc push je mov stc sbb pop jl mov bound and gs mov out ucomiss (bad) scas iret out adc xor fyl2xp1 sbb pop jl mov pop jge mov xchg dec imul test out daa inc push or add xchg mov cli pop test dec push lods int comiss xchg mov hlt adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pop ja (bad) es mov or mov icebp adc push jne mov clc sbb pop jnp mov pop mov dec outsl (bad) scas iret out push sub int adc push je mov notb ss ja mov clc sbb cmpsl (bad) call mov outsb (bad) mov hlt adc push jp mov add sub push fs popf mov xlat ljmp xchg stc or xor imul mov fdiv add je lcall and pop insl adcb add fs popf mov sbb push gs sahf mov insl xchg mov lock inc push push xchg cmpsb mov sbb cmp popf mov aad sti push and pop insl xchg add or xchg stos rcl add jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp adc jg test adc cmp data16 cmpsb mov and cwtl lods ret add sub push imul add sub imul call ds imul cld adc cmp data16 cmpsb mov cmp js mov push and dec bound mov or xor pop jae popf mov fdiv push sbb inc pop outsl test add sub push xchg test pop jno fwait mov fcomi add outsb sbbl pop sub push imul std adc cmp data16 cmpsb mov and dec bound scas ret fsubr add sub xchg stos rcl add ds push shl cld adc mov jp mov inc jno shr cmp mov jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec cmc sbb jecxz inc push mov add push jl into repnz mov test ja (bad) repz inc imul movsb int3 mull inc insl xchg shl xor stos aad and je lret lock jb mov test je shr ss xchg call lods (bad) negb pusha andl jp (bad) xor mov jo mov mov mov arpl cmp test in adc pop jg lret cmp repnz cmp leave jmp xor pushf shl sub xchg mov (bad) and mov data16 popa test stos (bad) repz cmp test pop jnp (bad) out xor cmpsb lret out adc jp mov jo mov cmc sbb push jne mov sti sbb pop jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov loope xor lods (bad) notb xor cltd mov jo mov jo mov add dec outsl jl iret lock mov push push fldln2 add cmp je popf mov xlat ljmp jb cltd lods mov and pop outsb sbbl imul mov inc push adcb or pop jno cwtl mov cmp jg movsl mov pop sub bound fwait lods rcl stc or xor jge mov add xor imul mov pop sub pushf scas ret sti push and mov out add jae cltd lods rcl sti push and pop insl adcb pop xor insb jg movsl mov pop sub pushf shl push and pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg cmpsb mov sbb mov std adc ss pop outsl (bad) xchg mov xlat ljmp outsb adcl push arpl sahf mov xlat ljmp outsb adcl push fs popf mov (bad) jmp dec pop test cli push and pop outsl (bad) xchg test into loope pop sbb mov std adc ss pop outsl (bad) xchg test into loope pop sbb mov (bad) adc push data16 lahf mov fsubr (bad) adc aaa dec pop outsl (bad) xchg test into loope pop sbb mov cld mov dec pop outsb adcl push addr16 mov sub jno xchg stos mov sbb inc push push enter adc cmp jb cwtl lods rcl stc or xor add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl loopne push sbb push gs sahf mov jmp adc xchg cli or insb adcl ds fs popf mov aad and pop outsb adcl popf dec imul insb nop mov (bad) es jb mov mov jnp enter pop (bad) test in adc pop jl mov arpl aas pop jle mov push sbb test cmp enter pop jg (bad) hlt sbb pop andb jae mov jno mov jae mov push mov push and mov lea push inc push and cwtl mov jo mov jo mov jno mov outsb xchg mov (bad) cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call movsb leave icebp adc (bad) repz test pop jg int3 icebp push cmp lods sar and push lods (bad) cmc adc ret jecxz and shl daa dec imul arpl inc mov pop jle (bad) jmp lahf ret in sub xchg mov jmp inc jne mov je mov outsl xchg mov outsb movsb lret lock lea insl xchg mov add dec jo mov jae mov jb mov insb mov fwait add out cs jb mov std and (bad) scas into in or dec insl mov pop (bad) scas (bad) cmc sbb andl out xor fwait shl sub faddl es js ret xor mov push jns shl xor mov pop jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc in adc hlt sbb arpl arpl inc mov pop jp ret sub fild and test inc push pop inc mov sbb pop (bad) cmpsb lret out adc pop andl in adc jl leave in adc pop mov mov sub xchg mov outsl xchg mov (bad) and mov ds lods int add xlat cmc adc push jbe mov clc sbb jl mov outsb xchg mov repnz push jno mov icebp adc push je mov negb cmp lcall mov out or outsb mov push and pop insl adcb cmc pop sbb mov cld mov dec pop insl adcb add sub push gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jmp dec pop inc jno mov add jnp mov pusha subl mov notl aaa pop jnp mov pop jge mov pop jl mov mov or dec imul dec insl mov dec jo mov notb aaa push ja mov clc push ds jg shl and andl lret sub mov dec imul mov pop jns mov pop jp mov pop andb pop jg lret sub mov dec insb mov dec imul push or dec jno mov icebp adc push jb mov repz push jae mov hlt adc mov notb ss jne mov negb cmp fwait mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pushf mov pop jl mov pop jl mov pop andb push test dec push or dec imul lods int3 in or dec outsb lea js mov pusha andb data16 dec imul cwtl mov notb mov imul outsb mov push or dec insl lea dec push stos int or std pop inc pusha andb outsl mov out sub mov push jb mov cmc push aaa pop jns mov pop jle mov push mov dec imul lods int or push jb mov hlt push aaa push ja mov pop test jmp inc popa andl lret in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov repnz push jae mov clc sbb bound sub scas iret lock push jb mov negb cmp pushf mov enter pop mov mov and mov pop subl cmc sbb xchg mov push scas aam sbb mov outsl xchg mov outsb xchg mov or push js add jmp cmpsb lret xor icebp adc bound aas arpl pop andb subb xchg pusha test pop lea imul push mov stc sbb mov sbb mov push bound pop subb xchg mov je shl xor jns mov outsl xchg mov jmp jb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov jle into clc and xchg mov xchg mov mov lahf (bad) out pop inc outsl cwtl mov xchg ret in adc push mov mov jle sar pop dec jno ret in adc jo ret in adc bound push jg (bad) negl dec outsl lcall mov jne lahf mov fdivp pop sbb inc pop jo cltd scas ret xlat in add sub imul (bad) adc cmp cmpsb mov cmp jp movsl mov pop jle (bad) out sub in xor mov fcomi add jo cltd scas ret fsubr add sub pop outsl andl pop xor pop jae pushf mov fcomi add outsl test add sub push imul std adc cmp push shl sti adc xchg cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov and jle test shl cld adc cmp jp movsb mov and dec pusha jne mov aaa dec fs mov or jge test shl std adc cmp addr16 cmpsb mov daa cmp addr16 test shr (bad) adc aas push imul call ds push sub (bad) fdiv or xor jb pushf mov fdiv push sbb inc pop jno mov sti pop cmp js mov or aaa dec bound mov or ss pusha jne mov or xor pop je sahf mov fdivp or xor mov sub push push shl cld adc cmp jnp ret out sub dec (bad) mov nop mov negb cmp call js (bad) in adc pop mov jae (bad) lock xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov xchg je ret jmp cmp adc bound mov (bad) lods fadds sub mov push mov xchg mov test jae mov mov imul outsb (bad) mov repz shl xor test clc pop inc outsl cltd shl xor andb scas aad daa dec jbe (bad) lock xchg mov lea stos fldl lret hlt sbb call mov push xor mov push das pop mov jl iret repz ds push js mov mov adc jae mov negb cmp andb js ret sub xchg mov insl nop mov add into in or xor insb jg movsl mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov add sub push fs popf mov (bad) jmp dec pop jo xchg stos (bad) hlt sbb andb pop jl mov push fwait scas ret (bad) jmp dec pop outsb adcl push fs mov sbb inc push data16 lahf mov fsubr std adc ss pop outsl adcl inc push data16 lahf mov xlat ljmp outsb adcl fs lahf mov fsubr (bad) adc dec pop jno xchg stos mov sbb inc push push (bad) (bad) add and adcl pop sbb mov (bad) and xchg clc or xor imul add cmp test cmc or sub mov (bad) adc dec pop outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or jl mov add cmp test (bad) or inc push addr16 mov add cmp jb cltd stos mov sbb jl mov fnop add sub bound sahf mov (bad) jmp inc pop outsl (bad) xchg test into loope pop sbb mov (bad) adc ss pop outsl adcl fs mov call and dec pop jb cwtl stos mov sbb jl mov add cmp test (bad) or xor imul add inc push push nop mov add jae cltd lods mov push xor jge mov add cmp test clc or xor jge mov pop sub pushf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push and pop insl adcb add sub bound popf scas ret sti push and pop insl adcb add sub lods adc mov jmp inc push and dec jle mov insb (bad) scas iret in or adc push jne mov icebp adc add xchg mov icebp adc dec imul cmp cmpsl int push inc mov popa (bad) movsb (bad) sub xchg mov push adc pop jle ret out cmp cmpsb leave out adc pop jle leave out adc pop andl out sub outsl xchg mov push mov cld and (bad) mov cli and mov pop test pop out sbb xchg pop test pop andl in cs test fimul xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push jle sar sub or pop mov xchg mov xchg mov xchg andb movsb sar and sti daa push (bad) stos aam cmp mov mov mov subb mov xchg jb shr ss (bad) mov (bad) mov or pop xchg mov mov (bad) stos aad daa dec js lret cmc pop dec jne leave repz jle sar sub movsb sar and repz dec jb leave repz jno (bad) out and mull dec jae ret in pop inc imul add push subl aad sub mov add sar and icebp and sar popa mov add pop subl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fildl sub sahf enter imul into clc and mov jns (bad) icebp sbb adc sbb insl xchg vunpcklpd lea lahf leave hlt sbb imul aas lea cmp lods aam and jo ret cmp mov and dec bound shr cmp mov inc jb shr cmp (bad) in adc pop mov ja (bad) in adc hlt sbb lock pop jle (bad) jmp aaa pop lea fwait ret xor add daa push popa ret jno mov insb xchg mov xchg mov (bad) test jo shr cmp mov add dec insl xchg mov jmp or xchg mov xchg imul stc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lahf enter lea jle int3 repnz xchg jg sar and sahf (bad) lock xchg mov or mov jne lret mulb dec jne (bad) in adc arpl pop mov (bad) scas fildl cmp mov test insb xchg mov jg add ljmp push jg out aam push ja mov inc push insb adcl push imul call ds push shl cld adc cmp push insb (bad) cwtl lods ret fsubr add jo fwait mov fdiv pop sbb mov or xor nop mov lret sub sar push inc mov (bad) in adc pusha mov data16 fdivrs pop jbe mov add mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and jno dec outsl xchg mov jg lret repz inc imul mov subl sbb push mov pop cs xchg js (bad) in pop inc imul (bad) xor stos sar sub lret hlt sbb loope xor mov insb xchg mov xchg mov mov subl adc arpl pop test jp lret cmp jmp xor xchg mov outsl xchg mov notb aaa pop jp shl xor jle lret and cltd shr ss xchg test jae vunpcklpd mov movsl iret clc pop dec jno ret sti and in adc in xor mov gs mov pop xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldl xor scas (bad) (bad) and loop xor sar and jne (bad) icebp sbb popf (bad) lock (bad) mov test js enter jo shr inc outsl cwtl mov mov test add mov jle int and push lods into out adc push jbe mov xchg dec jo mov add dec jne sar and lcall xchg mov lea jnp (bad) jmp cmp in xor mov xchg mov xchg jae mov mov jns int sbb inc insl xchg mov (bad) test hlt mov xchg mov imul mov pop sub push insb adcl push xchg stos rcl add cs pop outsl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) add das inc pop jo lcall das inc pop outsl test add cltd mov dec fs cmpsl mov daa cmp test shr (bad) adc ds imul (bad) adc ds imul add (bad) or cmp jns movsb mov and dec gs movsl mov es addr16 cmpsl mov daa cmp test shr inc insb nop mov add dec adc pop andb in xor popf shl sub jae mov insb lcall fwait shl sub xchg mov arpl dec imul jp mov pusha andl (bad) movsb mov and dec bound mov or ss pusha jne lahf mov fcomip sbb in xor test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall inc outsl cwtl mov mov mov jne lret ds mov subl adc pusha xchg mov mov mov push and (bad) and xchg mov clc sbb pop jge shl and int push xor lcall test jp lret inc insb xchg shr add xchg mov jg iret hlt sbb insb xchg mov mov subb sahf (bad) jmp cmp mov jl fildl (bad) (bad) and ljmp add push jl lret hlt push inc jnp lret repnz xchg mov subl lcall mov andb nop mov cmc pop cmp shl and stos lret in push das push je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec outsl xchg mov (bad) stos (bad) cmc and xchg mov mov jle fiaddl sub push jl (bad) ss (bad) stos sar pop inc outsb xchg mov mov lea je shl cmp mov add push jl int3 hlt push inc insb xchg mov nop mov add push jns int and sahf (bad) icebp sbb xchg mov mov xchg jnp iret mull dec jno vunpckhps push cmp ret in pop aas mov sub xchg mov xchg push jp mov xchg mov stc sbb in sub lea mov lea test je leave out push cmp add push js (bad) out adc ficom cmp shr cmp mov jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp insl xchg mov test (bad) add das inc pop outsb sbbl pop sub xchg stos rcr add sub push imul (bad) adc cmp mov loopne or xor lahf mov fdivp or and dec bound mov push and dec bound mov or xor sahf mov (bad) or popf mov (bad) pop sbb inc pop jo fwait mov fnop add jno fwait mov fcomi add outsl test add sub xchg lods rcl or xor jae popf mov (bad) pop sbb inc pop je sahf mov fdivp or xchg add outsl test add sub push imul push sbb inc pop jo pushf mov fdiv push sbb inc pop jo lcall sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp stos rcl call ds push shl sti adc xchg lods ret fsubr add sub xchg stos rcl add jle test shl std adc cmp data16 movsl mov and dec arpl mov push and push imul mov hlt adc lret out adc push ja mov mov jb mov (bad) and mov in pop sub push insb adcl push imul call ds push xchg test adc cmp data16 movsl mov daa cmp mov sub push imul std adc cmp cmpsb mov and nop movsl mov cmp jp movsb mov and pop (bad) lcall das inc pop outsb sbbl pop sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl imul call inc push imul call ds push shl cld and push push xchg test adc cmp addr16 cmpsb mov and nop movsl mov and dec arpl mov or ss pusha jne lahf mov notl daa cmp addr16 cmpsl mov and cmp cmpsb mov daa cmp data16 movsb mov and dec popa jbe mov or xor pop jae scas (bad) cmc pop cmp mov mov or xor pop je sahf mov (bad) pop sbb inc pop jo lcall sub mov (bad) add ss pusha jne lahf mov fcomip or ss pusha jne lahf mov fcomip or xor pop jae sahf mov (bad) pop sbb inc pop outsl test add inc push loopne or xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or xor pop jae popf mov fdiv pop sbb inc pop jo cltd scas ret fsubr add sub push imul pop sub push insb adcl push imul call ds push shl sti adc mov or jne movsb (bad) (bad) or mov or ja mov or xor sahf mov (bad) pop sbb inc pop jo cltd scas (bad) fldz add das inc pop test and sahf mov (bad) pop sbb xchg sbb inc pop insl (bad) xchg lods rcl add adcb xor stos mov daa cmp data16 movsl mov and dec popa jbe mov or xor jge ret in adc pop subl jg fiadd dec je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl lahf (bad) jmp pushf mov insb (bad) mov add dec outsl xchg mov sti sbb arpl dec jo mov add pushf scas add (bad) add cmp test (bad) or inc push addr16 mov (bad) adc ss pop jno xchg stos mov sub bound fwait scas rcl cli or imul mov fsubr add je lcall and inc pop insb jg movsl mov sbb aas push fs popf mov fdivp add sub pushf scas ret sti push and pop insl adcb pop sbb mov (bad) adc dec pop jo xchg test into loope pop sbb xchg cmpsl mov sbb push gs mov call and adcl pop sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp insl adcb add sub insb jg movsl mov pop sub fwait scas rcl stc or xor imul mov fsubr add cmp jae cltd lods mov and inc pop insb jle movsb mov fsubr add insb jg movsl mov push sub bound fwait scas rcl stc or xor push nop mov add sub bound lcall pop xor imul mov push xor jl mov add cmp jae cltd lods mov push xor jge mov add jae cltd lods mov sbb jnp test into loope pop sbb inc push push (bad) fldlg2 call and adcl or sub mov std adc ss pop outsb adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop sbb xchg movsl mov push sub bound lods rcl clc or xor jge mov add cmp jae fwait scas rcl stc or xor imul mov fnop add test or insb add loopne push sbb push gs sahf mov fldlg2 call and test (bad) or inc push addr16 mov push sub dec popa jne fwait scas rcl cli or insb adcl push gs sahf mov fsubr (bad) adc ss pop jo xchg test or cs push addr16 cmpsl mov sbb push data16 lahf mov fsubr (bad) adc dec pop jo xchg test pop sbb mov (bad) adc dec pop outsl (bad) xchg test into loope or inc fs lahf mov fdivr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in call and test out or imul mov fnop add sub bound fwait scas ret (bad) jmp dec pop insl adcb add mov clc sbb push jne mov cmc sbb push ja mov pop andl leave jmp inc bound sub fdivr pop inc (bad) aad pop inc mov imul adc xchg clc or xor imul out add jae cltd lods mov pop xor jg cmpsl mov sbb lea (bad) adc dec pop jno xchg stos mov push jne mov xchg mov repz push jne jne (bad) hlt push cmp mov push ja ret sub xchg mov (bad) sti pop inc data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp lock cmp movsb enter push test mov mov test popa xchg shr xor push sub push gs sahf mov fldlg2 call sub bound pushf scas ret (bad) ljmp jno cwtl lods mov cmp arpl popf mov xlat ljmp jb cltd lods mov and dec pop jo xchg test or xor imul mov and lea imul inc push imul lock sub dec popa je lcall pop xor imul mov fnop add sub mov fucomi add jbe pushf scas ret sti mov inc pop outsb adcl push data16 lahf add push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop ja (bad) and test sbb push gs sahf mov (bad) jmp inc pop insl adcl push gs lahf mov fsubr adc jnp mov add cmp jno xchg stos mov sbb jge mov xchg cld mov dec pop jo xchg test imul dec pop jb cltd lods mov push add xchg cmpsl mov sbb inc push push lret add sub bound mov fsubr call cmp test (bad) or jge mov add ja sahf mov xlat ljmp outsb adcl xchg mov (bad) and mov pop jge (bad) out adc pop jg ret out sub outsb xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call stc and cmpsb leave out adc pop andl pop sub xchg mov push sub lea arpl pop cmp aam adc dec imul mov dec imul test push jnp (bad) in adc jle lret xor stos into out adc push jne mov jo mov add dec jb mov outsb xchg mov mulb inc data16 bound cmp negl arpl xor mov (bad) (bad) add cmp jae cltd lods rcl stc or xor add (bad) or jge mov add cmp jb movsl mov sbb das inc push push (bad) fldz add cmp je lcall pop xor xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cli sbb andl int3 in or scas into in or mov cmc adc (bad) es xchg dec imul mov (bad) icebp pop mov dec insl xchg mov je mov jno les (bad) jmp add and xchg push jg sub nop mov stc push inc data16 push jae mov insb nop scas int3 in or arpl and xchg or mov hlt sbb pop andl negl inc test push jp (bad) out sub xchg mov notb cmp lahf (bad) out sub out xor aam xor xchg mov clc pop aaa push jne mov out cvtps2pi mov dec ja mov dec outsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc call (bad) mov jecxz or dec push or push jne mov repz push ja mov arpl push ds jns mov cld sbb pop jp mov test dec jo mov or lret lock cmp movsl (bad) ljmp loopne daa dec insl (bad) mov sti sbb aam sbb imul ret in daa dec jo mov pusha andl lret sub insb add sbb pop jns mov data16 sub xchg mov test dec push adc inc imul push jbe mov std push ds andl insb lea push jbe into out rdmsr push jne mov pusha andb imul ja mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg mov cli sbb out sub mov push je mov cli sbb pop andb push js rolb or push jae shl sub xchg mov insb xchg mov add mov cld and scas (bad) hlt sbb popa xchg rclb aaa push data16 scas rcl std adc ss pop outsl (bad) xchg test or cs push data16 lahf mov fsubr (bad) adc dec pop jno xchg stos mov sbb inc push push leave fdiv add mov dec push cmpsb mov sbb push gs lahf mov fsubr call daa cmp jae cltd lods mov movsb lret out sbb mov fnop add push jbe (bad) ljmp mov sbb jge mov adc xchg stc or xor insb jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call repnz fs sahf mov xlat ljmp outsl (bad) xchg test into loope pop sbb inc push addr16 lret sub mov dec jo mov clc sbb inc push addr16 mov add cmp jae cltd lods rcl stc mov dec jb lcall and inc pop insb jg cmpsb mov sbb ds gs sahf mov fsubr (bad) adc dec pop jno xchg stos mov and inc pop insb jg movsl mov pop xor pop insl adcb push sbb push gs sahf mov xlat ljmp outsb adcl push addr16 mov call and xchg or xor insb jg cmpsb mov sbb push gs mov call cmp je lcall and pop insl adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fdivp add sub push fs popf mov sbb inc push push (bad) mov add cmp jb cltd lods mov pop xor imul mov fnop add sub push fs sahf mov fsubr add cmp jg cmpsb mov sbb xchg movsb mov fnop add sub pushf scas ret cld mov add test sti push and pop outsb adcl pop jae lcall and pop outsl (bad) xchg cmpsl mov sbb lea add sub popf mov xlat ljmp outsl adcl adc ss pop outsb adcl push imul lock sub push gs sahf mov fsubr call and mov sti push and pop insl adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or (bad) xchg test or xor insl adcl push imul push sbb mov add sub cmpsb mov sbb mov add daa cmp jae lcall pop xor insb adcb or cs push addr16 mov add es pop jb cwtl stos mov and pop insl adcb sbb inc push addr16 mov add sub popf mov (bad) (bad) add ja popf mov xlat ljmp jp mov add sub push gs mov add daa cmp jae lcall and pop outsb adcl push imul or xor outsb adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc push imul add cmp test (bad) or jge mov add sub bound mov add je lcall push xor jge mov add cmp jae cwtl stos mov push xor imul mov fnop add sub ja popf mov (bad) jmp dec pop jo xchg test or cs push push leave fdiv add sub arpl pushf scas ret sti push and pop insb adcb sbb lea add daa cmp jbe popf mov xlat ljmp outsl (bad) xchg test or cs push addr16 mov call cmp xchg add cmp jne fwait scas rcl sti push and pop insl adcb add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc push addr16 mov (bad) adc dec pop jo xchg test or jnp test into loope or cs push push std pop inc arpl lods cmp cli sbb arpl xor jae mov cmc adc mov pusha andl int or pop andl addr16 lahf mov fsubr (bad) adc cmp test (bad) or jl mov xor jp mov add sbb ds fs popf mov (bad) jmp dec pop jo xchg test pop sbb mov (bad) adc dec pop jo movsb rcl sti push and xchg cmpsb mov sbb push gs sahf mov xlat ljmp outsb adcl push arpl pushf scas ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti push and enter dec insl nop lods int or scas int push sub jb mov add adc push jo scas into icebp adc pop jnp mov push je mov cmc push cmp inc push jmp dec pop jno cwtl stos mov pop xor insb adcb pop sbb inc push addr16 mov add sub push data16 lahf mov fldlg2 add cmp je mov add sub push fs sahf mov fsubr call and xchg sti mov dec pop outsl (bad) xchg test or inc push imul repz sbb push outsb adcl inc push imul repnz addr16 mov add cmp jne pushf scas ret cld mov dec pop jo xchg test or cmp jb fwait scas rcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec pop outsb (bad) xchg test iret loop or inc push imul icebp add sub push gs sahf mov fsubr call and mov add sub sahf mov fsubr call and xchg stc or xor insl adcb or jge mov add sub push fs sahf mov sbb push data16 mov add cmp jae lcall and dec pop outsl (bad) xchg test or jle movsb mov fdivp add gs cmpsb mov sbb inc push push lret add sub push gs sahf mov fsubr call and xchg cli or outsb adcl add aaa push js mov mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub mov std adc ss pop outsl (bad) xchg test cmp xchg cli or insb jle movsb mov fsubr add jae cltd lods mov sbb jnp mov call and dec pop jb cwtl stos (bad) (bad) add cmp sbb pop js mov push jns mov lret add jne fwait scas rcl stc or xor insl clc es push adc add jbe pushf mov (bad) ljmp jno xchg stos mov pop xor xchg adc dec pop jo xchg stos mov push xor insb jg cmpsb mov sbb push data16 mov add cmp jmp out adc cmp jae lcall pop xor insb jg cmpsb mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ds fs popf mov (bad) jmp dec pop jno cwtl stos (bad) adc cmp je lcall insb mov mov pusha andb arpl xor jl mov pop jle mov popa (bad) mov inc data16 push jb mov notb xor xlat notb cmp lcall andl mov pusha andb inc popa andb arpl and jg mov pusha sbbb test pusha jg mov pop jge mov pop jge mov pop jl shl and test inc arpl and jg ret sub xchg mov sti push inc insb mov pop (bad) movsl enter dec je mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fiadd and (bad) icebp pop cmp movsl leave out adc pop andb popf shl das push ja mov insb nop mov cld and mov imul jmp xor ret out das push js mov jb shl or das inc push addr16 mov add je lcall pop xor jge mov add sub bound fwait scas rcl cli or jno xchg lods rcl clc or xor imul mov fucomp add jne fwait scas rcl cli or insb adcb add sub sahf mov xlat ljmp mov add add mov (bad) adc dec pop jno xchg stos mov pop xor insl adcb sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns lahf mov fyl2x add fs popf mov aad cld mov dec pop outsb adcl push addr16 mov call and test (bad) or inc push addr16 mov and xchg stc or xor insb jg movsb mov fnop add je cltd lods mov sbb jl mov add cmp mov inc pop imul mov fdivp add sub push fs popf mov xlat ljmp jo xchg test cli push and pop insl adcb sbb dec push or push lods int adc push ja mov fsubr (bad) adc dec pop jo xchg test or inc push addr16 movsb mov (bad) or jl mov add cmp jae cltd lods (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov pop xor imul mov fnop add sub push fs popf mov (bad) jmp dec pop outsb adcl test into loop or cs push addr16 mov call and mov cli or insl adcb push sbb push gs movsb mov fldl hlt pop sbb inc push data16 lahf mov fsubr (bad) adc cmp jno xchg stos mov push xor imul add xor lods rcl cli or mov add sub sahf mov xlat ljmp jb cwtl stos mov pop xor insb jg cmpsl mov sbb push stos xchg into cli push inc mov push jae mov repz push jo mov icebp adc jae mov hlt push xor fdivr sbb pop jl std pop inc pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl daa inc xchg pop js mov pop jns mov popa (bad) movsl clc xor jnp ret ljmp fdiv push sbb push data16 mov add sub bound lods rcl stc and movsb (bad) fdiv add sub bound lcall pop xor jge movsl mov push sub bound lcall adc ss pop outsb adcl push nop mov add cmp je fwait lods rcl stc or xor imul mov fsubr add sub dec popa je lcall sbb jl (bad) and pop insb (bad) xchg cmpsl mov sbb push fs popf mov aad sti push and pop insl adcb add sub bound lcall push xor adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb inc push addr16 lahf mov fsubr (bad) adc dec pop jo xchg test into loope pop sbb mov call and test (bad) or inc pop imul mov pop sub fwait scas rcl cli or imul mov sbb ds fs pushf scas ret (bad) jmp inc pop insl adcb sbb mov std adc daa cmp jb lcall pop xor jge mov add cmp jae cltd lods mov pop xor jge mov sbb push addr16 mov add cmp test push das inc push arpl test int3 fucomp add and inc push addr16 lcall adc adcb sti or xor fs cwtl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fucomp add and push push mov pop sub dec pop outsb (bad) xchg movsl mov fldpi cld or fs cwtl test add mov (bad) or sub dec pop outsl adcl xor fs cwtl test add and push imul loop add pop outsb jg mov push pop xor fs cltd stos mov adc xor mov cmc push sbb cmp insl jle mov (bad) or sub mov cld or fs popf (bad) out sbb ds popa jb xchg cmpsb mov push pop xor gs cltd stos mov adc xor jnp popf scas mov push daa cmp insb jge xchg mov sti or das inc push jb popf scas rcl repz daa cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl insb jge mov stc or adcl or arpl stos mov adc inc pop imul rcl cmc pop sbb pop jp mov push jb scas int3 in or das inc pop jnp mov (bad) or sub xchg movsb mov fsubr sti or cs push bound xchg cmpsl mov sub test in std push pop xor fs xchg test lret fsubr (bad) adc xor js fwait lods mov adc cmp insb jge mov testb sub dec pop jo xchg cmpsl (bad) (bad) std push and inc push data16 lcall adc aaa dec pop imul ret aam (bad) or sub mov cli or je xchg cmpsl mov adc xor xchg cmpsl mov mov aaa dec pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl in or sub xchg movsb mov fldpi cld or fs cwtl stos mov adc xor js pushf scas mov adc adcb cmp fldcw stos enter ds jns mov in or inc pop jle mov insb mov cmp xchg mov out or inc gs lahf mov dec push test loope sbb scas (bad) icebp movntps xchg cmp iret in or inc arpl adc mov dec data16 ss je mov repz dec push movsb rcr sbb push jae scas lret pop cmp jbe scas int3 jmp xchg push jb stos leave call (bad) lahf mov push jno stos lret and shr adc push outsl (bad) scas into icebp adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg mov push insl mov inc popa jg mov dec insb mov dec insb mov cmp scas (bad) (bad) dec push stos lret es arpl sbb push jbe mov push jne mov hlt pop xor jno lods int or dec add test inc pop jnp mov out or dec insl mov inc pop jge mov push insl mov cmp mov inc bound mov andl mov out push cs insb mov inc popa sbbb pop jl mov pop jl mov dec push movsb rcr sbb push je mov repz leave out and test inc data16 mov and pop jl mov push jb scas int or test out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub je mov out or inc gs lahf (bad) out and pop jns mov out push sub mov add ds jns xchg lret jmp jns mov lock xor js fwait lods mov push daa cmp insb jge mov push daa cmp insb jge mov testb sub dec pop outsb jg mov clc or sub dec pop jo xchg cmpsb mov fldl2e sti or das inc push bound xchg cmpsb mov push pop xor arpl mov adc ss pop imul loope add pop insb jge mov cmc push pop sub dec pop insl jle mov testb sub dec pop insl jg mov testb sub dec insl (bad) in or mov xor mov cmp shr or inc popa jge mov lock lods leave in push cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and pop js mov jmp and pop js mov jmp ja mov icebp cvttps2pi andl push outsb mov cmp nop lods enter cmp mov cmp nop mov in or inc pop jnp mov out or inc bound mov dec data16 ss outsl lea cmp fdivr sbb push jno adc mov out or inc popa jle mov icebp or add or inc pusha jl mov out or inc popa jle mov inc sbbb dec data16 sahf mov push jb test (bad) adc dec fs mov in pop and jb test fnop adc push push rcl hlt add pop insl jg mov add and inc pop imul in push pop sub dec pop insl jle mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc aam (bad) or sub movsb mov fsubr cli or jae xchg cmpsl mov adc xor cltd mov pop jp mov push jae stos mov adc ss pop push lea cmc push sbb cmp (bad) xchg movsl mov fsubr sti or cmp outsl adcl cs push bound xchg cmpsl mov mov inc push gs cltd stos mov adc inc pop push lea hlt add dec pop outsl adcl inc push fs cwtl test add and inc push push mov push daa cmp insb jle mov testb sub dec pop outsl adcb cli or test cmc push sbb cmp adcb cli or adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push addr16 fwait lods mov adc cmp insb jge mov testb sub dec pop outsb lea (bad) or sub mov stc or sub dec pusha jno xchg cmpsb mov (bad) cld or fs xchg test decb and inc push gs cltd stos mov adc xor adcl das inc push arpl test lret fsubr call and inc push addr16 fwait lods mov adc ss pop push mov hlt add pop outsb jg mov notl sub dec pop outsb adcb stc or adcl or arpl xchg test lret fsubrp add and pushf lods mov adc imul (bad) fldpi cld or fs cwtl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc xor pop imul jecxz push pop sub dec pop outsb jg mov stc or test jmp push pop xor fs shl push pop xor gs cltd add add aaa dec pop push lea hlt add pop insl jle mov clc or sub push popa jb xchg cmpsb mov (bad) std push pop xor outsl adcb cli or jae xchg cmpsl mov mov inc push gs cltd stos mov adc aaa dec pop push lea testb sub dec pop outsl adcb stc mov cmp (bad) lcall push jae stos (bad) jecxz sbb push jno mov in or mov movntsd jg mov inc bound mov inc popa jl mov out or inc pusha jl mov lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub lahf mov dec sbbl mov in or pop jns mov ljmp mov jmp and pusha jge mov out or inc pop jl mov in or pop jns mov ljmp mov in or inc pop jp mov in or inc sbbb arpl mov inc popa jle mov in or pop jns mov jmp js mov lock pushf mov dec gs sahf mov dec imul xor test das dec andl adc mov xor sbbl dec data16 sahf mov inc sbbb gs sahf mov dec fs mov sub mov dec push movntss jg mov inc pop outsl adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cli or adcl or das inc push add fwait lods mov adc aaa dec pop imul rcl hlt push pop sub dec pop insl jle mov or das inc push bound cmpsl mov adc xor gs cwtl test call and inc push addr16 lcall adc xor mov icebp add imul (bad) std push pop xor arpl js lcall adc xor push addr16 fwait lods mov adc lea hlt add pop insb jge lahf mov shl cmc pop sbb cmp jg movsb mov fsubr sti or das inc push bound test lret call and inc push jb lods int3 ljmp mov repnz sub jle mov icebp push sub mov xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg aaa lock mov (bad) or sub dec pop imul (bad) cli or sub dec pop push mov jmp or cmp pop outsb jle xchg mov repnz and inc push bound xchg mov repnz and inc push bound xchg mov aaa push insb mov xor xchg cld or sub dec pop push mov call cmp addr16 xchg cmpsb mov aad cmc add push fs lahf scas mov or pop insb jl fwait stos mov or sub dec pop imul xlat out push push es mov sti or das inc push arpl lcall adc dec pop jo xchg movsl mov fldl2e sti or das inc push bound xchg cmpsl mov mov inc push addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) js fwait lods mov adc jnp popf scas rcl hlt add pop insb jge lahf mov shl add sub dec pop je movsl mov mov inc push gs cltd stos mov adc xor push push mov adc ss pop push lea hlt add pop outsb adcb add and inc pop imul loop add pop insl jle mov clc or sub dec pop jno xchg cmpsl mov mov inc push gs cltd stos mov adc xchg movsl mov fldl2e sti or fs cwtl test add and inc pop push mov hlt add pop insl jle mov (bad) or sub pop jo xchg movsb mov fsubr cli or cs bound test lret fsubr call and inc push addr16 lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov adc mov add cmp imul mov aam (bad) or sub mov stc adc xor push push mov push daa cmp insb jle mov (bad) or sub adcl cld push pop xor fs cwtl test add and inc push addr16 fwait lods mov and sahf scas roll out or sub dec pusha jb xchg cmpsb mov (bad) std push pop xor fs cwtl test call and inc push addr16 lcall adc imul shl cmc push sbb cmp adcb cli or je xchg test mov adc lea hlt push pop sub dec pop insl jle mov (bad) or sub insl jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call out or sub dec pusha jb xchg cmpsb mov fldlg2 decb and inc push gs cltd stos mov adc xor push add mov testb sub dec pop outsl adcb cli adc lea cmc push pop sub dec pop insl jg mov (bad) or sub mov stc or sub dec pusha jno xchg movsl mov (bad) cld push pop xor fs xchg test sub xchg movsl mov (bad) std push pop xor fs cwtl test add and inc pop imul loop add pop insl jle mov (bad) or sub rcl (bad) or sub movsl mov (bad) std push pop xor gs cltd stos mov adc xor mov sub (bad) in subl sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp xchg scas lret call jg mov push jbe mov out or lods lret and jp mov ljmp mov sti or das inc push bound xchg cmpsl mov push pop xor arpl add sub jge lahf mov shl cmc push pop sub dec pop insl jg mov stc or sub dec pop jo xchg movsb mov xlat call cmp xchg movsb mov xlat call ds pusha jno xchg mov adc aaa dec pop push lea hlt push pop sub dec pop insl jg mov (bad) or sub mov clc or sub dec popa jb xchg cmpsb mov fldpi cld or outsb xchg lock and mov add es dec pop imul rcl testb sub dec pop outsl adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xlat call ds popa jb xchg cmpsb mov (bad) cld push and data16 lcall adc aaa dec pop insb jge mov testb sub dec pop outsb jg mov clc or sub pop jo xchg mov stc or adcl and mov add jl sahf mov shl hlt push pop sub dec pop insl jle mov (bad) or sub dec pusha jno xchg movsl mov fldl2e sti or arpl mov fucomp add and fwait lods mov adc mov repz daa cmp insb jge lahf mov shl cmc pop sbb cmp outsb jg mov (bad) or sub mov (bad) decb and inc push gs cltd stos mov adc xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc imul rcl cmc push sbb cmp adcl xor jnp sahf scas rcl hlt add pop insl jle mov (bad) or sub test out add and inc push addr16 fwait lods mov adc aaa dec pop push lea add xor fs xchg test call and inc push push mov push daa cmp insb jge mov (bad) or sub dec pop outsl adcb clc or sub dec pusha jno xchg movsb (bad) fucomi (bad) adc xor ja lcall adc xor push push mov adc ss pop imul loop add sub dec pop outsb jg mov (bad) or sub sub push xor lret jmp hlt or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl arpl xchg stos mov adc xor adcl das inc push bound xchg cmpsb mov push pop xor arpl test lret decb and inc push data16 lcall adc xor push push mov xor xchg cmpsb mov fldpi cld or arpl lods enter cs push popa jb xchg cmpsl mov push pop xor fs xchg test call and inc push addr16 fwait lods shl or das inc push arpl stos mov adc xor ja lcall adc mov add jnp popf scas rcl cmc push pop sub dec pop insl andb or adcl or arpl test lret std push and inc push data16 lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc xor imul xchg mov out or dec data16 sahf mov dec imul mov cli or jne cwtl stos mov adc jge mov (bad) or sub xchg movsl mov lret fdiv add and inc pop push lea add aaa dec pop insb jge mov clc or sub dec popa jb xchg cmpsb mov mov inc push push mov pop js mov and (bad) sbb rcr adc dec imul sbbl mov inc push mov sub mov icebp or fwait mov out or mov ljmp mov jmp jnp mov ljmp mov out pop cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lods leave out pop cmp (bad) stos enter cmp (bad) lods (bad) pop xor data16 fwait lods mov adc ss pop push lea hlt add pop insb jle mov testb sub dec pop outsl adcb cli or aas push bound xchg stc or sub adcl or arpl xchg test lret fsubr (bad) adc xor push addr16 fwait lods mov adc ss pop push mov repz popa jae xchg cmpsl mov push and inc push fs lcall adc mov repnz es dec pop imul rcl cmc pop sbb cmp outsb jg mov daa cmp je cltd lods rcl clc or xor jl mov add cmp jae cltd lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb jl mov add cmp jae cltd lods mov and test (bad) or inc push push (bad) (bad) call and xchg (bad) or insl jg movsl mov push sub bound fwait mov fsubr add cmp je lcall pop xor insl adcb add sub pushf scas ret sti push and pop insb jg movsl mov pop sub push leave fsubr add sub bound fwait scas rcl stc or xor imul mov fsubr add je cltd lods rcl clc or xor jge mov add xor push nop mov add cmp jae cltd lods mov sbb jl mov add cmp jne lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call out or xor imul mov int add data16 lahf mov xlat ljmp outsl adcl push data16 lahf mov fsubr (bad) adc dec pop outsl (bad) xchg cmpsl mov sbb mov push and pop insb jg movsl mov sbb push fs sahf mov xlat jmp dec pop outsb adcl push arpl pushf scas ret cli or imul cli or insb jg movsl mov pop sbb push gs popf mov (bad) jmp inc pop insb jg movsl mov fnop add jne fwait scas rcl stc or cmp jb xchg stos mov sbb inc push push (bad) (bad) add cmp jae cltd stos mov sbb jle mov add jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop nop mov lock lea test aas pop jge mov push jbe mov stc sbb push jae mov lock sub imul mov cmp xchg mov hlt adc dec outsb xchg mov repnz push outsl mov inc imul sahf mov pop ja mov hlt adc pop ja mov push jb mov lock dec imul inc fs mov aas pop jge mov pop jp mov push jae mov out ucomiss mov inc gs mov mov push jo mov out comiss lea dec push stos lret sub cs scas (bad) lock mov adc jnp mov call and test (bad) or inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov add cmp jno lcall cmp test (bad) or jnp xchg movsb mov fnop add jae lcall pop xor insl adcb add sub pushf scas rcr and dec pop jb cwtl stos mov sbb jl mov add sub dec pusha je lcall sbb insb jg movsl mov pop sub mov call and adcl or inc push push (bad) (bad) add and test (bad) or cs push addr16 lahf mov xlat ljmp jb mov loope or cs push addr16 mov add cmp test (bad) or jl mov add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov cli or jo xchg test add push xor imul add cmp test (bad) or xor imul add cmp jno xchg stos mov aam sbb sti sbb mov dec imul test out and les out and enter inc test inc test inc pop jle mov pop ja mov pusha jle icebp jl aaa push jbe mov pop jp mov cmp lods mov push xor jge mov add gs sahf mov xlat ljmp outsl adcl push gs sahf mov sbb inc push addr16 mov add cmp je lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or xor imul xchg cmpsl mov sbb mov (bad) adc xchg stos mov xor pop insl adcl push fs sahf mov (bad) jmp dec pop outsb adcl push data16 lahf mov fldlg2 call and js mov aaa dec pop jo xchg test or cs push addr16 lahf mov fldpi (bad) adc test (bad) or jnp mov or jl mov add cmp test (bad) or inc push imul mov fsubr add jae cltd lods mov push xor jge mov or inc push push (bad) (bad) add je lcall add xor pop insl adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add fs popf mov (bad) jmp inc pop insl xchg std adc ss pop outsl (bad) xchg test into loope push sbb push gs sahf mov xlat ljmp outsl (bad) xchg cmpsl mov sbb push addr16 nop mov add sub mov add cmp je lcall push xor push xchg movsb mov push sub mov lret jmp xor jae mov out cvtps2pi stos lret jmp sub xchg inc popa andb pop jp mov pop jnp mov pop js mov push jbe mov icebp cvtps2pi stos enter inc mov inc test cmp (bad) sbb pop js mov pop jnp mov pop jp mov push ja mov hlt adc push outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec test inc andl popa andb pop ja mov repz dec outsb lea push outsl mov push or dec imul mov cmp cltd mov push jne mov icebp adc dec insb mov dec insb mov inc test pusha jg mov pop jp mov pop jns mov cmc push xor (bad) lock dec insl mov dec xchg add inc pusha jg mov pop jle mov pop ja mov repz push jno scas into in or cmpsl (bad) and sbbb mov or dec push stos lret daa inc andl pop jp mov push jb xor (bad) sbb pop ja mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call notb push jb mov out or mov repnz push jo scas iret out or dec push test out and rcr pop ds jl mov pop jl mov pop jns mov notb xor (bad) lock das dec insb mov dec xchg or imul inc xchg aas pop jg mov push ja mov hlt adc push outsl lea dec outsb mov dec imul inc test dec push mov das dec imul push cmp (bad) add stos (bad) in sbb stos (bad) loop sbb push outsl mov aaa push jno stos (bad) loop sbb push jo stos (bad) in sbb push jo test loopne sbb push outsb mov cmp mov cmp int3 jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas pop js mov jmp jbe scas lret call ja scas leave out pop cmp ja mov in or mov jmp js mov call jne lods leave out push cmp nop lods leave in sbb mov out or inc sbbb inc bound mov inc popa jl mov cmc adc dec sbbw push outsb mov aaa push jno stos (bad) jecxz sbb push outsl mov ss outsl mov ss outsb mov cmp xchg lods leave in push cmp nop lods enter mov mov in or inc arpl daa dec push stc push xor mov xor mov xor mov aaa push jo or mov xor xchg das dec push cmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor jb xchg movsl mov adc xor addr16 fwait lods mov adc aaa dec pop imul andb pop ja mov call jbe scas into jmp ja mov inc popa jge mov out or mov push insb mov dec push mov xor mov dec push cmc adc dec data16 movsb mov dec imul sahf mov dec sbbb bound mov out or inc sbbw inc arpl or inc pusha jl mov jmp and jns mov out pop cmp xchg lods lret and pop ja scas lret out and push je lods leave in sbb push jno stos (bad) jecxz sbb push jno test aaa push jo test cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl scas lret out and jne lods leave in push cmp lea xor rcr push xor xchg xor outsb mov xor ret push xor xchg xor mov dec insl mov xor rcr adc mov das dec push hlt adc mov dec push mov xor mov sub arpl mov inc bound mov out or inc pop jp mov bnd shl sbb mov in sbb push je lcall push daa cmp insb jge mov (bad) or sub dec pop outsb jg scas mov push daa cmp insb jge mov testb sub dec pop jo xchg movsb mov fsubr cli or cs push popa jb xchg movsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or adcl or xchg test lret call and inc push addr16 fwait lods mov adc aaa dec pop imul rcl hlt push pop sub dec pop insl jle mov (bad) or sub push popa jb xchg cmpsb mov fldpi cld or insb jge mov testb sub dec pop outsb adcb stc or sub (bad) xchg cmpsb mov push pop xor arpl xchg test lret decb and inc push gs cwtl test push and inc push gs cltd add add sub dec pop insb jle mov (bad) or sub xchg movsb mov fsubr sti or arpl test lret decb and inc push data16 fwait mov pop sub dec pop insl jle mov (bad) or sub dec pop outsl adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call out or sub mov cli or cs push bound xchg cmpsl mov mov inc push jae xchg test int3 fucomp add and inc push addr16 fwait lods int3 call jb mov repnz jnp popf scas rcl hlt add pop insl jle mov (bad) or xor pop imul loope add scas lret es mov cvttsd2si sbbb dec push add aas pop ja scas lret out and (bad) in sbb push jb lods leave in push cmp add and pop js mov repnz sub addr16 lahf mov push jno stos (bad) jecxz sbb push jo test cmp mov aaa push jo mov jmp jbe scas lret out pop cmp nop lods enter cmp mov aas pop jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc arpl adc dec arpl mov inc pusha jg mov out or inc pop jl mov in or inc pop jnp mov in cvttps2pi sbbl inc arpl mov lock inc popa jle mov lock inc bound mov out or inc pop jnp mov icebp push sub sbbl mov dec sbbw dec push notl cs xchg sti pop xor xchg xor mov cs sbbl add sub rcr push xor xchg xor mov xor mov xor mov xor insb mov xor mov dec push add xor lcall push insb xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) (bad) movaps js stos (bad) adc pusha jns lods (bad) loopne adc dec arpl lret sbb dec data16 cmp outsb mov and push jo mov and movsl mov ds jb cmpsb mov inc bound mov in sbb dec data16 ss push popf mov cmp xchg and push jno cmpsb mov dec gs mov in sbb dec addr16 fwait mov call push popf mov ljmp lahf mov inc pop jns lods (bad) out sbb push insl xchg and push insl xchg and xlat lock (bad) loope adc dec arpl iret ljmp mov and push outsb mov and movsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc pop je test fcomi push daa inc pusha jl mov in pop xor fwait mov call imul or inc pop rorl xor popf mov inc fs mov pop das aas dec pop outsl jg lahf mov shl repnz and inc push bound xchg mov repz and inc push arpl xchg movsb mov (bad) repz xor popa je movsl mov aad cmc add es push gs xchg movsb mov aam hlt add and inc push bound xchg mov icebp add adc xor bound xchg mov lock pop xor pusha jo nop stos (bad) fsubr clc pop pop daa aaa inc push addr16 xchg cmpsb mov (bad) out add push fs xchg movsb mov shl repz and inc push arpl xchg mov icebp add and inc push pusha outsl jg lahf scas mov or pop jg movsb mov shl repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor sbbl popf push lea das dec sbbw mov xor test sub js stos (bad) sbb mov inc pop jne lods leave call and mov out sbb push insb xchg and xchg movsb mov aam testb and je xchg mov add pop xor pusha outsl jg lahf scas mov or pop insb jl fwait stos mov or sub dec pop push mov add cli or sub dec pop push mov (bad) out push push and jnp fwait stos mov or sub dec pop imul fsubr clc or daa aaa inc push addr16 xchg cmpsb mov aad hlt add and inc push bound xchg mov out decl pop cs dec pop outsb jle sahf lods (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov or sub popa jno xchg mov lock pop das aas dec pop outsb jle sahf scas mov or pop outsb jle popf lods mov or sub dec pop imul stos mov or sub dec pop push mov (bad) out or sub dec pop imul mov or sub dec pop imul fsub (bad) or daa aaa inc push data16 xchg movsl mov aad hlt add and inc push arpl xchg movsb mov aam repz and inc push bound nop mov cmc add push fs xchg movsb mov shl repz and inc push popa jno xchg mov icebp add and inc push pop add xchg mov icebp add and inc dec pop outsl jle sahf lods mov or sub dec pop push (bad) lahf scas mov adc das aas dec pop outsl jle sahf scas mov or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp push mov jmp aaa inc push addr16 xchg movsl mov aad testb arpl xchg mov icebp add and inc push addr16 xchg cmpsb mov (bad) out add push fs xchg mov repnz and inc push bound xchg mov lock and aas dec pop outsl jle sahf scas mov or pop imul stos mov mov inc push pop outsl jg sahf scas mov or pop insl jl pushf lods mov or sub dec pop imul fsub testl push addr16 xchg cmpsb mov aad cmc add and add data16 xchg movsl mov cmc adc cmp imul xlat out pop pop daa aaa inc push data16 cwtl cmpsl mov xlat out push push es test repz and inc push bound xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lock and aas dec pop outsl mov lock pop das aas dec pop outsb jle popf lods mov or sub dec pop imul stos mov or sub dec pop imul fldl2t stc or sub dec pop push mov xlat out push push and stos (bad) jecxz sbb lods ret or sub add imul lods mov or sub dec pop imul stos mov or sub inc push addr16 xchg cmpsb mov aad hlt or cmp pop imul stos mov or sub dec pop imul xlat out pop pop es push data16 xchg cmpsb mov aad cmc add push fs xchg mov hlt add and inc push bound xchg mov testl push data16 xchg cmpsb mov aad cmc add push fs xchg mov hlt add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor arpl xchg mov repnz and inc push pusha jo nop mov out decb push cs xchg mov repz xor push arpl xchg mov icebp add and inc dec pop outsl jg sahf scas mov or sub dec pop insb jnp fwait stos mov or sub dec pop push mov call aaa inc pop insb jl pushf lods mov or sub dec pop imul xlat out push push es push addr16 xchg cmpsb mov aad cmc add push arpl xchg mov icebp add and inc push pop outsl jg sahf scas mov or insl jge popf lods mov decl pop das ds pop outsb jle popf lods mov or sub dec pop push mov jmp cmp addr16 cltd test clc or sub dec pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop pop daa aaa inc push addr16 xchg cmpsl mov (bad) out push push es test cmc add and inc push arpl xchg mov icebp add and inc push pusha jo (bad) lahf scas mov push sbb insb jl mov repz and mov jnp mov in sbb dec sbbw dec push ljmp or mov in std or pop insb jl pushf lods mov or sub dec pop imul xlat out pop pop es push gs xchg cmpsb mov aad hlt add xor outsb jle popf lods mov or sub dec pop push mov out pop add sub dec pop push mov xlat out push push es test xchg cmpsl mov (bad) in add push arpl xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jmp adc xor bound xchg mov lock and inc push pusha jo nop lahf scas mov push push cs mov cli or sub dec pop imul xlat out pop sbb cmp addr16 xchg mov fsubr std or sub dec pop imul stos mov or sub add imul stos mov or daa aaa dec pop push mov aad cmc add and inc push arpl xchg mov icebp add and aas dec pop adcl and inc push popa jb xchg mov icebp add and aas dec pop outsb jle popf lods mov or sub dec pop push mov call aaa inc push data16 xchg cmpsl mov (bad) out add push mov call aaa inc push data16 xchg movsl mov aam repz and inc push popa jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl shl lock pop das aas dec pop outsb jle popf lods mov or sub dec pop push mov call dec pop outsb jge popf lods mov push sbb insb jl pushf lods mov or sub dec pop push mov push push es test hlt add and inc push bound xchg mov and adcb out decb push cs pop insl jge pushf lods mov or sub dec pop insb jl pushf stos mov or sub dec pop push mov call aaa inc push test enter pop pop daa aaa inc push data16 xchg cmpsl mov (bad) in pop and popa jp mov in sbb mov aas pop jne stos (bad) adc mov mov stc or sub dec pop insb jl pushf lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec add lock and inc push pusha jo nop mov lock push cs pop outsb jle sahf scas mov push push xor pusha jo nop mov lock and inc push pusha jo nop mov icebp add and inc push popa jno xchg mov icebp add and inc push bound xchg mov xor je xchg movsb mov aad cmc add push data16 xchg cmpsb mov (bad) out pop pop daa aaa inc push addr16 xchg test leave fldl2t stc or sub dec pop push mov ljmp pop push pushf lods mov or pop outsb jle sahf scas mov adc xor popa jno xchg mov icebp add and inc push popa jno xchg mov lock and inc push pusha jo nop mov lock and dec pop push mov or sub dec pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldl2t stc or sub dec pop imul mov or sub dec pop outsb jle sahf scas mov push nop mov push insl xchg add inc push pusha jo (bad) lahf scas mov push push cs pop insl jge lahf scas mov push push sub jge popf lods mov or sub dec pop imul stos mov adc xor jae xchg mov hlt add and inc push arpl xchg mov repnz and inc push popa jno xchg mov out add pop das aas dec pop outsb jle sahf lods mov nopl ds pop outsb jge mov repz and inc push arpl xchg mov repnz and inc push popa jo nop mov lock and aas dec pop outsl jle sahf scas mov or sub dec pop imul stos mov or sub push data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in add es test hlt add and inc push arpl xchg mov icebp add add inc push fs xchg movsb mov shl repz and push arpl xchg mov repnz dec pop outsl jg lahf scas mov push push cs pop insl jge popf lods mov or sub dec pop insb jge popf lods mov or sub dec pop imul stos mov or sub dec pop push mov push inc je stos (bad) fdivrp adc lahf mov xor rcr adc dec push mov and pop je stos (bad) loop sbb insb mov or cmp mov cmp sbbl ds jo mov sbb lahf mov cmp test push cmp sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor gs mov cmp mov pop aaa push imul arpl (bad) loope adc inc popa jnp scas enter das dec sbbl add ss push pushf mov call imul jns mov cmp jb cmpsb ret (bad) push aaa push outsb mov xor mov sub mov in pop and pop jns mov jmp jne mov jmp (bad) lahf mov dec andw inc popa jge mov in or mov ljmp mov out add nop mov out or inc pop jnp mov in pop and (bad) (bad) push xor sbbl inc pop (bad) sahf mov cmp mov cmp mov xor (bad) popf mov inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov cmp xchg lods leave in sbb push mov xor test xor test das dec push out shr pop cmp mov daa inc pop je cmpsl rcr adc inc pop js scas lret sbb push insl mov dec pop outsl jg lahf mov shl lock pop das aas dec pop outsl jle add lock and inc push pusha jo xchg mov repnz and inc push popa jno pushf lods mov or sub dec pop insb jl pushf lods mov or sub pop imul mov push push cs pop outsl jg lahf scas mov adc xor arpl xchg mov hlt add and bound lods mov adc xchg jmp cmp push mov or sub dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jp lcall or sub dec pop imul stos mov adc xor push fs xchg mov repnz and inc push pusha jo (bad) lahf scas mov push push cs pop outsl jg lahf scas mov or pop outsb jge popf lods mov adc xor popa jno xchg mov pop das inc push popa jno mov shr cli or cs push bound test lret fsubr add es dec pop insb jge mov cli or data16 popf scas rcl cmc pop sbb cmp popa jae mov push sub dec pop outsb jg mov cli or das inc push fs xchg test add aaa dec pop insb jg mov sti or arpl cltd stos mov adc ss jp mov out or add pop jl std sbb pop jbe mov notb ds jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc jecxz scas int or inc bound push xor push jle ret jecxz and lret ljmp fdivr sbb inc gs sahf mov dec push clc adc dec imul xor mov aaa push outsl mov xor outsb mov xor ret loopne sbb push outsb mov xor nop lods lret push cmp jne scas lret push cmp mov cmp test loopne sbb push jo test loopne pop cmp jbe scas int3 call je scas lret and lret jmp jne lods int3 call ja mov ja mov in or inc pop jl mov out or inc andl pop js lock pop jb xchg cmpsb mov add out call and inc push addr16 popf scas mov push daa cmp test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp call and inc push data16 lcall adc mov repz sub dec pop insl jle mov testb sub dec pop outsb jg mov (bad) or test in decb and inc push gs lcall adc mov add aaa dec pop push lea hlt add pop insb jge mov or jae xchg cmpsl mov mov inc push gs cltd stos mov adc xor push push mov adc insl jle mov (bad) or sub mov fldpi cld or arpl xchg test call and inc push addr16 fwait lods mov adc imul rcl hlt add pop insb jge mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in pop sbb cmp (bad) xchg movsl mov fldpi cld or gs cltd stos mov adc xor push push mov pop sbb cmp jg mov clc or sub pop jo mov fldlg2 call cmp jne fwait scas rcl cli or insb jg movsl mov push sub bound fwait scas rcl stc or xor imul mov pop sub bound fwait scas rcl adc dec pop jo xchg test or cs push addr16 mov call and xchg clc or xor jge mov add cmp jae lcall cmc adc mov notb ss jne mov repz push jno scas int or dec jo scas int or dec push test call test inc test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jg mov test test add mov dec push pop es test push (bad) loopne and xchg stc or xor insb jg movsl mov pop sub pushf scas ret (bad) jmp inc pop outsb adcb push xor insl jg movsl mov pop sub fwait lods rcl stc or xor jle movsb mov fnop add jne fwait scas rcl cli push and pop jl test dec into repnz push js mov clc push jns mov push jbe mov hlt adc ret cmc sbb jle adc insl (bad) xchg test into loope push xor xchg cmpsb mov mov inc test inc pop jg (bad) out and shl push aas popa jg mov pop jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor jb mov out push sub xchg mov imul mov push sbb (bad) sub xchg mov xchg push jbe mov jb mov push lods int or dec push pop jns lahf mov fsubr std adc ss pop outsl (bad) xchg test into loope pop sbb mov and dec popa je cltd lods mov push xor imul mov fnop add sub dec popa jne fwait lods rcl stc or xor mov add push sub bound mov dec popa jbe pushf scas ret cli sbb dec bound fwait mov bound das push jne mov insl lea inc pop imul mov loopne push sbb push gs sahf mov xlat ljmp outsb adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sbb ds fs popf mov (bad) jmp xchg test into in or jnp mov add cmp jae cwtl stos mov sbb inc push addr16 lahf mov fsubr (bad) adc dec pop jo xchg stos mov sub bound fwait scas rcl cli or insl adcb add sub pushf scas ret sti push and pop outsl (bad) xchg test into loope pop sbb xchg cmpsl mov sbb push gs sahf mov xlat ljmp outsl adcl or jl mov add sbb ds fs popf mov (bad) jmp dec arpl pushf scas rcl cli or insl adcb push sbb push gs sahf mov xlat ljmp outsb adcl push gs sahf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ljmp ja lahf mov fsubr (bad) adc dec pop jo xchg test or cs push data16 lahf mov fsubr (bad) adc dec pop jo xchg test into loope pop sbb jle movsb mov in or xor jge mov add sub pushf scas ret sti push and pop insb adcb add data16 lahf mov fldlg2 call and test or jge mov add sub bound fwait scas rcl std mov dec pop outsb adcl push gs popf mov (bad) jmp inc popa jne pushf scas ret sti push and pop outsb adcl push addr16 mov (bad) adc dec pop jo xchg test or cs push data16 lahf mov fsubr (bad) adc test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) mov repz cmp sahf mov (bad) add cmp jae cltd lods mov pop xor jle movsb mov call dec pop jno xchg stos mov sbb inc push addr16 mov call and adcl or sub mov call and adcl adc ss pop outsl (bad) xchg cmpsl mov sbb push fs popf mov (bad) jmp inc pop insl adcb (bad) or inc push push (bad) fldlg2 call and xchg stos mov push xor imul mov fnop add sub popa je pushf scas ret sti push and pop insl adcb add gs sahf mov repnz push gs cltd stos mov adc lea cmc push pop sub dec pop outsb jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or sub dec pop jno xchg movsb mov fsubr sti or cs push bound cmpsl mov sbb cmp pusha jno xchg movsl mov fldpi cld or fs cwtl test add and push push mov adc cmp insb jge lahf mov shl cmc pop sbb cmp outsb jg mov call and pushf scas mov push daa cmp insl jle add sti or arpl test lret (bad) adc xor js fwait lods mov adc ss pop push mov mov inc push addr16 fwait lods mov adc imul rcl cmc push pop sub dec pop insl test jecxz and (bad) mull movsb ret sbb push jno stos enter inc pop jge mov push jb scas int aas gs mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov cmp xchg movsb mov (bad) std push pop xor arpl test lret decb and inc push gs cwtl test pop sub dec pop insl jle mov (bad) or sub dec popa jb xchg cmpsb mov fldl2e cld or fs xchg test lret fsubr decb and inc push gs cltd stos mov adc xor push addr16 mov aam testb sub dec pop outsb adcb (bad) or sub dec pop outsb adcb push aaa push gs cwtl test add and inc push imul loope add daa cmp test in std push and inc push gs cwtl test add and inc push push lock and jnp popf add pop sbb cmp outsl adcb clc push xor data16 lcall adc ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jl lahf mov shl cmc push pop sub dec pop insl jle mov testb sub dec pop outsb jg mov (bad) or sub mov or arpl xchg test lret fsubr (bad) adc xor gs cltd stos mov adc xor push push mov adc dec pop imul rcl cmc push pop sub dec pop insb jge mov (bad) or xor jge mov add cmp jae fwait mov xchg add test jmp xchg mov out push sub enter inc arpl fnstenv pop outsl adcl or xor insb jg movsb mov fnop add sub popa je lcall sbb jl mov add cmp test cmp jg ret out sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec lock jne mov popa (bad) mov dec push mov popa adcl arpl pushf scas ret (bad) call dec pop outsb adcl push fs pushf scas ret sti push and inc fs popf mov xlat jmp adc dec pop jno xchg stos mov sbb inc push addr16 mov (bad) adc dec pop jo xchg test or cs push addr16 mov lock xor insb jg movsl mov sbb ds arpl popf mov (bad) jmp dec pop insl adcb add sub popf mov xlat ljmp outsl (bad) xchg test iret repz sbb push ja mov add cmp jae cltd stos mov sbb jg movsl mov pop sub pushf scas ret cli or insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg mov sbb ds fs popf mov (bad) jmp dec pop jo xchg test or cs push addr16 lahf mov fsubr (bad) adc ss pop outsl (bad) xchg test into loope pop sbb xchg cmpsl mov sbb inc push addr16 mov call and test cmc or cs push data16 lahf mov fadds out add cmp jae fwait scas rcl cli or je lcall pop xor insb jg movsl mov pop sub push fs popf mov aad sti push and pop outsl (bad) xchg test into loope pop sbb mov mov dec pop outsl (bad) xchg test iret loop pop sbb inc push addr16 lahf mov fsubr (bad) adc cmp test (bad) or cs push addr16 lahf mov fldlg2 call and test or xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge mov add sub pushf scas ret cld mov cmp sahf mov mov inc pusha mov inc andl pop jle shl pop cmp fprem pop ss jae mov lock das push je mov icebp adc dec outsb lea dec push add inc pop jle mov pop jl mov pop jl mov push jno mov in or cmpsb (bad) and jg mov pop jle (bad) and shl push ds jl mov push jae mov out push sub imul inc data16 inc test inc pop jge mov push je mov lock sub leave out and (bad) out and arpl sbb pop js mov cmc adc push jno mov in or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov dec push test inc data16 inc popa jg mov pop js mov cmc adc push jb mov notl xor iret out or dec push or dec push add inc pusha sbbb push jbe mov push ja mov repz dec outsb lea inc test cmp cwtl mov hlt adc push jbe mov repnz dec insl mov sub insb mov inc popa andb pop jns mov cmc sbb pop js mov repnz dec imul inc pop jle mov push jbe mov lock stos leave in or push cmpsl (bad) in and bound sbb pop ja mov repz push outsb mov inc arpl inc test popa sbbb pop ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor xchg mov lock xchg mov out push sub lret es arpl push cmp fnop sbb push jne mov repnz push jae mov lock mov inc andl pusha sbbb push jne mov cli sbb push jne mov lock test out and sbbb pop jp mov push je mov push jae mov out push sub imul sahf mov push jae mov lock dec je mov icebp push sub leave jmp andl pop jnp mov push jb scas into in or push outsb mov imul mov cmp fdiv push xor jno scas into repnz pop js mov cmc adc push jo xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push adc dec insl mov inc bound push cmp fdivr sbb push jne mov lock dec outsl lea test aas pop jl ret loop and test out and shl pop cmp fdivr aaa pop jl mov push jne mov hlt adc push outsl (bad) scas into out push sub int adc push jno mov out comiss lea push std sbb push jae scas lret jmp jge mov push outsl mov das inc push push (bad) (bad) add cmp jae cwtl stos mov sbb jnp mov call and mov cld mov dec pop outsb adcl ds arpl fwait scas rcl cli or imul mov fucomp add jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cli or (bad) scas into out wrmsr dec jo mov repnz pop ja sahf mov fsubr add adc cmp test cli or insb jle movsb mov fucomp or jnp mov call and test cmc or cs push addr16 mov add cmp test (bad) or inc push push lret fdivp add sub fwait scas rcl cli or outsb adcl push gs popf mov (bad) jmp dec pop outsb adcl push fs mov add jae cltd lods mov push xor jge mov add cmp jb cwtl stos mov sbb jl mov add xchg mov sub dec popa je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl out or xor jge mov add cmp jae cltd scas rcl stc or xor imul mov fsubr add sub lea call and test (bad) or inc push push nop mov add cmp jae mov or insb jg movsl mov pop mov push jno stos (bad) jecxz sbb push jno lods leave in sbb stos enter cmp mov jmp jne lods lret sbb test cmp add sbb test loope sbb pop jbe scas lret out and pop jne scas leave in sbb push outsb mov xor mov xor test xor insb mov xor xchg xor mov xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc dec imul cmpsl ret fdivrp sbb insl mov xor rcr adc mov xor test loope sbb rcr push xor mov cs sbbl fwait mov out or inc arpl mov out or inc pop jnp mov jmp and pop jnp mov jmp and pop js scas add in or pop jnp mov jmp sub sbbb sbbl mov xor lahf mov dec sbbw dec push movsb rcr adc mov xor mov xor mov xor cmpsl ret (bad) pop xor test cs sbbl jo xchg movsb mov fsubr sti or arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lcall adc xor movsb mov fsubr sti or das inc push bound xchg cmpsl mov or arpl xchg test lret fsubr add and fwait lods mov adc inc pop push mov repz outsl adcb clc or sub dec bound xchg cmpsb mov or fs xchg test lret fsubr decb and inc push data16 cltd stos mov adc xor push addr16 lcall sub dec pop jo xchg mov cli or (bad) xchg movsb mov fsubr cli or adcl or xor arpl cmpsl mov mov inc push data16 cltd mov adc aaa dec pop imul rcl hlt add pop jnp pushf mov jge mov (bad) or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp xchg movsl mov fldl2e sti or jns lahf mov shl cmc push pop sub dec pop insl jg mov cli or jae xchg cmpsl mov push pop xor gs cltd stos mov adc xor addr16 fwait lods mov adc jae xchg cmpsl mov push pop xor fs cwtl test add and fwait lods mov adc aaa dec pop push (bad) mov cmc pop sbb cmp adcb or sub movsb mov fsubr cli or aas push popa jae xchg cmpsl mov adc xor js fwait lods mov adc aaa dec pop push lea hlt add pop insl jle mov pop sbb cmp adcl sub dec pusha jno xchg movsb mov fsubr cli or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg movsl mov fldl2e sti or cs push bound xchg cmpsl mov adc xor xchg scas (bad) repnz sub test fucomp call and inc push addr16 fwait lods mov adc ss pop insb jle mov (bad) or sub movsb mov xlat call dec pop imul rcl hlt push pop sub dec pop insb jge mov (bad) or sub xchg movsb mov fsubr cli or jae xchg cmpsl mov mov inc push data16 lcall ds sbbb add and inc push addr16 fwait lods mov adc mov add aaa dec pop push mov cmc pop sbb cmp outsb jg mov add and inc pop imul loop add daa cmp imul rcl hlt (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop outsb jg mov (bad) or sub mov stc or sub dec pusha jno fwait lods mov adc ss pop ljmp ret sbb push jno test cmp lea aaa xchg mov in or inc outsl mov dec imul add call xchg dec imul lods int adc js mov xchg mov notb mov pop jg (bad) sub mov stc sbb pop xorl (bad) sbb arpl push jne mov arpl int pusha andl (bad) repz push jbe mov pop andl loopne and test dec jo mov stc sbb pop jns mov clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp xchg mov add sbb mov push ja mov mov das dec sbbb inc pop jbe lods enter inc pop jge mov adc xor pop imul in or sub push popa jb xchg cmpsl mov sbb cwtl test pop sbb push arpl lcall xor jno mov in or scas iret lock dec push mov cld push pop xor addr16 fwait lods mov push sub dec pop outsl adcb add pop jo xchg cmpsb mov adc cmp jno xchg cmpsl mov pop sub bound lods rcl (bad) or jnp lahf mov (bad) call inc pop outsl adcl pop sbb push popa je cltd stos mov sbb aas push arpl cwtl stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sbb cltd stos mov sbb cmp fwait lods mov sbb inc push data16 pushf lods mov or ja fwait lods mov sbb push fs fwait scas rcl stc or data16 mov std mov inc pop push mov sti pop xor mov cmc adc dec jo mov out or stos lret ljmp (bad) add inc bound daa inc andl pop jg mov test inc bound and bound jecxz push pop sub add jb xchg cmpsb mov fldl2e sti or arpl test add and mov testb sub gs lcall sbb mov cmc or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jmp dec pop jno xchg test int3 fnop add and mov xlat call xlat in decb and inc push push mov push sub dec pop outsb adcb call and inc push addr16 popf scas rcl (bad) or sub xchg sbb dec pop jno xchg cmpsl mov adc xor pop insl jle mov stc or imul mov fsubr cld adc xor pop push xchg movsb mov (bad) (bad) adc xor pop push xchg movsb mov pop sub lcall push das inc push fs popf mov (bad) jmp dec pop outsl test hlt push sbb push bound lods rcl testb sub mov (bad) or inc push addr16 fwait lods mov pop xor imul jmp adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg movsb mov fucomi add and dec pop outsb adcl cmp outsb add out add and jle mov std mov inc push imul mov aad stc or jns sahf mov aad clc or xor data16 popf mov fsubr decb and pop insl adcl cmp adcl xor push (bad) mov stc or jp lahf mov fsubr cld or data16 mov xor data16 fwait lods mov sbb cmp pop jno xchg cmpsl mov adc adcl cmp outsb adcb add jne mov fdivp add insl jg mov cld mov inc pop imul mov (bad) call inc push data16 lahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov inc pop push mov add pop xor xchg mov in or (bad) jmp or dec imul cmpsl jmp xor (bad) scas int or dec imul mov cmc adc pop ja mov imul lock fsqrt sbb jg mov imul pop jle ret daa dec xchg mov cld sbb (bad) icebp push cmp pushf mov test push jb mov sti sub xchg mov negb cmp sahf ret jmp (bad) scas int adc push jge shl daa dec imul xchg push jne mov data16 dec outsl xchg mov std and mov lcall inc xchg push jns shl and mov dec jge mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc pop xor (bad) repz ss jge shl cs jb mov std and mov imul loopne daa dec imul mov insl (bad) mov push das push jb mov stc sbb pop andl cli and andb insb xchg jnp (bad) out daa inc test bound sub mov pop xchg mov cmc push cmp (bad) out sub jno mov sti sbb pusha subl ja mov lods int3 in or dec outsb nop mov repz mov je mov pop andl (bad) out sub push jae scas iret icebp push sub xchg or scas (bad) repnz push jno mov negl cmp mov popa andb jo es jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor lea inc xchg or push js ret in inc insb (bad) scas (bad) hlt adc push jb mov clc sbb pop jnp ret sub (bad) scas into in or dec outsl xchg mov and mov pop jp mov data16 leave ljmp repnz push jb aam xor xchg mov out (bad) xor nop scas into out or scas aam sbb pop jp mov jae addb pop jg ret and aam adc dec imul cmp (bad) sbb mov notb ss je mov out adc dec outsb lea inc andl pusha jg shl and (bad) mov cmp xchg mov icebp adc dec outsl (bad) scas iret out adc push jb mov stc sbb mov pusha andb bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc loopne and (bad) jmp test jno mov out ucomiss (bad) scas into out push sub iret out (bad) aaa pop js mov pop (bad) addr16 mov lcall mov icebp add insb jle mov stc or mov icebp add and jge mov std push and inc push push (bad) cli or aas push fs cltd stos mov sbb test icebp push sbb cmp cwtl stos mov sbb jns popf mov aam sti or outsb xchg pop jns mov pop js mov push outsb mov dec insl lea push jae mov notb mov icebp adc (bad) sbb shl and pusha andl lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov dec imul pop andb jo mov add inc push pop aaa pop jge leave jmp sub in sub nop mov (bad) and lcall xchg mov jno mov push lods into lock pop jl mov imul pop js mov jb mov jo mov xchg push sbb lea mov bound inc lea and scas (bad) hlt adc push ja mov pop (bad) mov das push jb mov outsl sahf shl cmpsb lret aaa pop jl ret cs je mov ljmp push jae mov nop mov (bad) and lea xchg ret in adc add mov ljmp dec scas (bad) or push jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jmp dec pusha jae cltd lods mov pop xor insl jg movsl mov sbb mov pop jge test or xor jo cwtl stos mov and dec popa jne pushf mov fsubr add sub push imul repnz sbb inc push push lcall xchg call cmp je lcall and dec pop jb cwtl stos mov and pop outsl adcl or test adc test cld adc xchg adc jnp cmpsl mov and lahf mov fnop add sahf (bad) out sub xchg mov push std adc ss pop jo xchg stos mov and cltd lods rcr add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp jne popf mov (bad) jmp dec pop jb lcall cmp js mov add jnp mov cli push and dec pop jo sahf mov fldln2 add jp movsb mov fcomip push sbb inc pop imul mov and pushf scas (bad) add das inc pop outsb adcl dec gs mov or xor popa jbe sahf mov fdecstp sbb popa test pop sbb lea add sub push addr16 mov add insl adcb sbb adcb or xor insl (bad) xchg test iret jecxz or inc pop insb adcb adc cmp fs mov and lods mov sub push addr16 mov push sbb inc push insb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) or xor outsb (bad) xchg test into jecxz or xor jo cwtl mov sti and test push jbe mov dec pop jno cwtl stos mov pop xor insl adcb push sbb inc push jo test in or dec outsl mov add mov dec pop jno cwtl stos mov push xor insb adcb or xchg adc xchg std adc daa cmp js mov or inc pop outsl adcl push sub push gs movsb mov fdivr and mov pop jg enter push js ret xor fildl and jecxz das push jg int3 repz icebp pop cmp test test mov push sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp scas sar sbb mov jle (bad) ljmp in adc mov outsl xchg mov jg lret pop test pop test bound inc mov insb xchg fldl daa dec insb xchg mov cld and nop mov clc pop inc mov push and (bad) jmp add xchg pop subl call mov mov sbb pop andl outsl nop mov add inc mov push xor popa xchg mov stc push inc mov mov pop jg (bad) jmp ss (bad) movsl enter pop jle (bad) ljmp in cs ja mov je mov jbe mov outsb xchg mov jmp inc imul sar push inc mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti push inc mov jnp shl sub xchg mov addr16 mov cld push inc popa andl cltd mov jno mov imul data16 adc push ja mov jno mov insl (bad) mov incl mov add scas sar and xchg mov mov and xchg mov cltd mov js mov jo mov cld and (bad) mov jmp inc insb mov jmp imul xor cltd mov imul faddl and aam push inc mov and xchg mov jle lret hlt (bad) into out rdtsc push jae mov clc sbb in adc pop jle leave stc sbb lret xor jg (bad) jmp cmp movsb enter pop test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall movsb dec andl in sub xchg mov cld and std and imul insl xchg mov sti push inc mov popa xchg jbe mov jnp (bad) out push ds pusha andl mov enter pop jle (bad) ljmp jecxz sub cwtl mov jbe (bad) negb inc gs mov add loope cs js ret outsb xchg mov jge enter adc cmp xchg stc or xor imul mov push xor imul mov and mov add imul mov and dec fs mov or jae pushf mov (bad) add sub mov or jo (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall call cmp ja sahf mov (bad) add sub adcb and dec pop jb cwtl lods ret std adc cmp jnp mov push inc bound cs push xchg cmpsl mov push xor imul mov loopne push sbb lcall and dec popa je lcall and cwtl stos mov and pop outsl (bad) xchg cmpsl mov sbb jg cmpsb mov and dec pop jb fwait scas ret add jge cmpsb mov mov dec pop je pushf mov (bad) ljmp je popf mov fucomi add sub push imul mov daa cmp jns mov add sub push gs lahf mov fdiv add sub mov add sub push data16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp repz sbb inc push imul mov daa cmp ja sahf mov fucomi add sub push addr16 mov add addr16 mov pop push xor fwait scas (bad) fsubr add jnp lods (bad) negl mov add sub addr16 mov add imul mov pop xor insl adcl dec bound popf mov fucomi add inc push push int hlt or xor pop jo cwtl lods ret std adc cmp ja mov or adcb and in sub scas rcl std adc dec pop jae cltd lods ret (bad) adc cmp jbe popf mov xlat ljmp js sahf mov fcomip push sbb nop movsb mov sbb adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push and dec pusha jae fwait scas ret xlat in add sub mov or aaa dec popa je movsb mov sbb inc push imul cli push and xchg test push and dec pop jo cwtl lods mov cmp jns mov push andl fild pop inc pusha (bad) mov inc push push lret fdivp push sbb dec pusha jae cltd lods rcl std pop cmp mov pop (bad) cmpsb leave jmp sub outsl nop mov sti push inc bound arpl xor jecxz sub xchg mov insl xchg mov jmp dec jb into lock loope sub lcall mov outsl xchg mov js ret out xor shl das push jns add repnz enter pop jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub popf mov push sbb out adc pop (bad) movsl leave in adc pop jle ret xor xchg mov stc sbb (bad) movsl enter push jae mov cld and nop mov stc pop inc fisttp cs jbe (bad) in and test dec push push and and test pusha jg mov pop jge mov push outsb mov inc pusha jge mov dec jno stos mov sbb jl mov and dec pop jae cltd lods mov and pop outsl (bad) xchg test or xor imul add sub push gs mov add ja lahf (bad) push sbb mov add cmp je lcall and dec pop jno xchg stos rcl cli adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl in and (bad) and test dec outsl nop mov out push sub lret sub imul ss inc imul pushf mov fcomi add outsb test ss jle (bad) ljmp cld adc cmp addr16 cmpsl mov daa cmp imul (bad) adc aas push imul bound mov or xor mov or jns movsb mov sub push push xchg stos rcl add sub ret add xor outsl test add outsl test pop push xor pusha jbe mov push and dec arpl mov and xchg stos rcl add sub lcall xor jbe mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp addr16 cmpsl mov sub push imul xor mov pop outsb sbbl pop sub pop jo fwait mov fdiv pop sbb inc pop jb popf mov fdiv pop sbb dec pop je (bad) (bad) or xor pusha jbe mov adc (bad) movsb mov and nop cmpsb mov sub push imul add das dec jae lahf mov loop or jns mov adc aas push push xchg test adc aas push push xchg stos mov sub push push xchg stos rcl add lret or bound arpl mov jge int es ja enter mov sub lret repnz mov xchg add negl inc jno ret repnz cltd shr cmp mov pop xor scas fiaddl cs lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or pusha xchg xchg mov xchg jl fadds pop mov movsb (bad) mull dec jae shr cmp xchg mov jp stos rcl call ds push shr std adc cmp imul call ds push shr std adc cmp ret add outsl test add sub cwtl lods ret add sub push insb adcl push insb adcl inc pop test sbb inc pop outsb sbbl sbb mov ja ret jmp scas aad and lods xlat jmp dec jae mov ja (bad) in adc negb inc mov subb (bad) mov add dec jne vunpcklpd mov jp sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std and lret cmp cld and lcall lods aam and mov push mov andb mov jb shl xor stos iret cli sbb flds daa dec je shl sub ljmp cmc es jno mov test push xor movsl xlat std and xchg (bad) in adc jle (bad) out adc pop xchg jl enter arpl dec jo leave repnz push xor lods fildl es jno shl sbb inc pop jo lcall cs jg (bad) out xor xchg mov sti and mov imul loopne xor jg lret cmp mov jb lahf mov fcomip or xor pop jb pushf mov fcomi add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov imul and dec bound mov or xor sahf mov (bad) pop sbb inc pop jo fwait mov (bad) pop sbb inc pop jno mov loopne or xor sahf mov (bad) pop sbb inc pop jno fwait mov fnop add outsl test pop sbb xchg sbb pop jne mov or js mov push and dec arpl movsb mov and push imul inc add mov sbb dec bound mov or ss pusha jne mov or ss pusha jne mov or xor mov or xor pusha jne lahf mov clc push and dec arpl mov push and dec arpl mov (bad) cmp js mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov or aaa dec bound shl sub add int3 out adc out jb out xor pushf ret sub imul (bad) adc cmp test shr cld adc cmp gs movsl mov inc pop outsl test add outsl test inc imul ss jp mov pusha andl xlat (bad) push and dec bound mov sbb xchg push sbb inc pop outsl test add sub xchg stos rcl call sub push imul call ds imul lea and xchg mov ja ret jmp movsb lret icebp sbb or push jge (bad) jmp aaa pop andl cli pop inc push mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec cmc sbb mov or ss arpl mov or xor lahf mov fdivp or xor jb pushf mov fildl and dec bound mov or xor pop jae mov or xor jae popf mov fdiv push sbb inc pop jo lcall cs pop insl (bad) xchg mov dec insb lea jb mov and dec popa ja mov or xor pop xchg pop sbb inc pop jo fwait mov fcomi add outsb sbbl sbb xchg lods ret add sub push xchg test adc inc pop jo lcall das inc pop outsb (bad) cwtl lods ret add das inc pop outsl sbbl pop sub push imul (bad) adc aas push imul push inc mov and dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp nop movsl mov and dec arpl mov or jbe mov or xor jb pushf mov daa cmp data16 test shr std adc cmp data16 cmpsb mov sub xchg mov add dec jae mov xchg shr cmp test repz std and xchg mov jl (bad) in adc out push data16 jno mov jns (bad) fdivp or xor jb pushf mov fdivp sbb inc pop outsb andl pop jae popf mov (bad) pop sbb inc pop jno fwait mov (bad) add das inc pop outsb sbbl sbb inc pop outsl test (bad) cmp ja mov or xor sahf mov (bad) pop sbb inc pop jo lcall sub cwtl scas ret fsubr add sub scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fyl2x pop sbb inc pop jo lcall cs push insb adcl push push shr std adc cmp data16 cmpsb mov and cwtl lods ret add sub push imul add jle test shr call aas push imul std adc cmp gs movsb mov sub imul call ds push sub jae ret mov (bad) stos rolb cs jnp (bad) negl dec jae shr aaa pusha mov jge iret stc and cmc and xchg shr ds mov or pop test push jns enter jae (bad) in adc bound pop subb stos (bad) add iret cli sub movsl int3 hlt sbb outsb xchg mov nop mov add (bad) sti and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl dec insl xchg mov jmp es jno mov js (bad) jmp xor movsl leave out adc pop subl xchg mov jg into repz mov jg (bad) negl dec outsb xchg mov jge lret lea jne roll adc push mov jg sar and nop mov add push jne ret cmp mov add dec jae shl xor jg int3 repnz aam pop inc insb xchg mov andb xchg mov (bad) stos (bad) icebp adc push je shl xor stc push inc addr16 mov jnp lret inc cmp adc mov (bad) and mov mov and mov sbb inc pop jno pushf mov faddl sbb inc pop outsl test add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pushf mov fdiv or xor mov or ss popa ja mov or aaa dec popa jbe mov sub test adc (bad) cwtl scas ret fsubr add sub cwtl scas ret (bad) add jno pushf mov fdiv pop push xor (bad) adc cmp jns movsl mov and nop movsl mov and dec fs mov push and dec bound mov or inc pop outsb sbbl sbb inc pop outsl test add sub xchg lods rcl add sub push xchg test adc cmp gs movsl mov cs pop insl (bad) cwtl lods ret add sub push xchg test adc cmp data16 movsb mov and dec popa jbe mov or xor je sahf mov icebp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor jo lcall sub xchg stos mov sub cmpsb mov and dec arpl movsl mov and dec bound stos rcl call ds imul cld adc cmp jp movsl mov and dec fs movsl mov and dec bound mov stc push and push push xchg stos mov sub push addr16 out xor mov int and xchg mov fiadd and push mov stc pop inc mov and xchg mov add dec jno mov int sbb dec fs movsb mov and dec arpl mov or ss pusha jne mov and dec arpl mov or xor pop jae popf mov fdiv push sbb inc pop jb pushf mov fcomi add outsl test add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cltd scas (bad) fsubr add sub xchg stos mov sub test adc cmp data16 movsl mov and dec bound mov push cmp stos (bad) negb mov and (bad) mov (bad) es jno mov js ret out adc pop test arpl inc lea push inc imul shr or dec bound mov or xor pop jae sahf mov (bad) or xchg sbb inc pop outsb sbbl push sub test sbb inc pop jno fwait mov (bad) add cs pop outsb sbbl add outsb sbbl push sub push imul add dec bound mov or xor pop jae popf mov fcomi add outsb sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in add cmp xchg stos rcl call sub push xchg test sub push insb adcl push imul cld adc cmp jp mov or ss arpl mov or ss pusha jne stos int3 loop or ja mov or xor pop je sahf mov (bad) pop sbb inc pop jno popf mov (bad) pop sbb inc pop jno fwait mov (bad) add (bad) mov loope or ss pusha jbe mov or xor dec popa ja mov or jbe mov or xor pop jae popf mov (bad) pop sbb pusha jne lahf mov fdivp or xchg sbb inc pop jo fwait scas (bad) (bad) add sub xchg stos rcl call ds push (bad) icebp adc ds imul cld adc cmp jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sti adc mov or ss pusha jne lahf mov fdivp or xchg and dec pusha jne mov or xor sahf mov loope sub cltd scas (bad) fldz add cs pop insl (bad) xchg lods rcl add sub outsl cwtl add push xor jb pushf mov fcomi push sbb inc pop outsl test add sub xchg stos rcl add jle test shl cld adc push imul std adc cmp addr16 cmpsl mov and (bad) movsb mov and dec bound mov or xor mov and push data16 movsl mov and dec bound mov or xor pop jae popf mov fdiv push sbb inc pop outsl xchg add insl (bad) cwtl lods fiaddl sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc pop insl sbbl pop sub push insb adcl push imul add jg test adc cmp (bad) fcomi push sbb inc mov rolb daa dec jne mov and dec data16 cmpsl mov sub jns movsb mov and dec gs movsl mov cmp jnp cmpsb mov adc adcl pop outsl test sub xchg mov es addr16 cmpsl mov daa cmp addr16 cmpsl mov sub imul add sub push insb (bad) xchg mov or jns movsb mov and dec gs movsl mov cmp jnp test adc aas push push xchg stos push cltd (bad) call mov push je mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov pop jge shl sbb adc inc pop outsl test add sub xchg lods ret add cmp cmpsl mov cmp jnp movsl mov es data16 movsl mov and dec bound mov stc push and dec bound mov and dec arpl add (bad) cmp jnp movsl mov and dec fs movsb mov and dec bound mov or ss popa jbe test adc ds imul call ds push shr std adc cmp data16 cmpsb mov and dec fs mov or ss jae lahf mov loopne or xor lahf mov fdivp or xor jae popf mov fdiv push sbb inc pop outsl test add sub xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ss popa jbe mov or xor sahf mov (bad) pop sbb inc pop jo lcall cs pop insl (bad) xchg lods rcl sbb pop outsl test or aaa dec popa jbe mov or xor jb pushf mov fcomi add outsb sbbl add jb pushf mov (bad) pop sbb inc pop jo mov gs movsl mov and nop movsl mov and dec fs mov adc cmp jnp cmpsb mov and lcall xor outsl test add cs pop insl (bad) xchg lods ret add cs pop insl (bad) xchg lods ret add sub push insb adcl xchg mov jmp inc data16 mov cld and xchg lods rcl add sub pop outsb sbbl pop sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl imul or aaa dec popa jbe mov or xor lahf mov fcomip or xor jne lahf mov fcomip or xor pop jae lahf mov fdivp or xor jae scas (bad) fdiv pop sbb inc pop jno fwait mov fcomi add outsl test add outsl test add sub push insb adcl push jb sahf mov fcomip or xor pop je sahf mov loopne or xor pop jae sahf mov (bad) or xchg push sbb inc pop outsl test add adcb sbb inc pop insl (bad) xchg lods ret add sub push imul call aas push imul cld adc cmp data16 cmpsb mov xchg scas (bad) (bad) add cs pop insl sbbl push sub imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call aas push imul cld adc cmp jns movsb loopne sbb in cs ja xor xchg mov jecxz sub push xor jle (bad) jmp xor insb xchg mov out pop aaa dec gs movsl mov and dec arpl mov or ss pusha jne lahf mov fdivp or xor jb popf mov fdiv push sbb inc pop outsl xchg and dec popa jbe mov add and mov or ss pusha jne lahf mov fdivp or xchg push sbb inc pop outsl xchg mov jae mov ja ret xor mov pop jg enter mov imul jno mov ja ret xor mov dec je test adc cmp cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in (bad) cmp jnp movsl mov and dec fs mov or jbe mov and dec arpl mov or xor mov or xor pop jb test pop jl ret xor stos (bad) cmc sbb insb xchg mov jg (bad) negl dec je (bad) in adc push xor xchg je ret call mov ljmp push jns (bad) out cmp enter bound cmp cmc sbb out adc pop (bad) cmpsb lret inc mov xchg mov andl stc pop dec jae sar push inc insl xchg shr cmp stos rolb (bad) sub mov mov jg into repz mov jg int sbb loopne sub jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec in adc jo shr ss test scas xlat add push jnp (bad) xor mov mov js shr cmp mov add dec insl xchg mov xorl xchg ret jmp ss jg lret aas data16 jno shr cmp jecxz xor cmpsl into repnz inc imul push jle sar and jo shr cmp mov add push ja leave (bad) daa dec ja enter popa test pusha test mov jne lret repnz ds mov mov lea xchg shr cmp std daa push jg fild sub repnz xchg mov (bad) cmpsl into negl inc imul jns lret icebp push cmp mov push mov sysexit pop subl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov jnp lret cmp scas aad and fwait (bad) jmp xor negl cmp mov push jne mov pop andb cltd mov (bad) lods sar and xchg mov jle into negb inc push mov std and enter pop xchg push sub mov pop xchg popf ret cmp scas (bad) (bad) and jno mov jle iret negb inc push xor cmpsl int sbb lea cltd mov arpl cmp mov add dec outsl xchg shl xor negl inc push daa dec jb shr xor cld and xchg mov jle leave out adc sar pop inc push mov add (bad) mov add push jbe ret xor subl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cltd mov test jns (bad) out push cmp xchg mov jg lret repz (bad) pop aas popa xchg push ja mov arpl push jbe mov push jae mov jb mov (bad) and stos iret icebp adc in adc push js shl daa dec push stos int sbb test pop jle mov popa andl mov mov imul xchg dec jae mov arpl aaa pop jg int adc pop jp mov mov adc jnp (bad) ljmp out adc mov sbb bound cs jae mov push mov clc sbb arpl aas xchg pusha xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov jb mov jns shr cmp negb aas arpl ds imul ja (bad) in je scas (bad) negl cmp fwait mov pop jbe mov hlt adc push cmp mov pop js mov hlt adc push jo mov repnz dec outsb lea pop js mov icebp push sub test xor enter ds js mov cld adc dec pop jae cltd lods mov jnp mov jo mov imul push sub popf shr xor mov push lods int3 in push xor jno xchg stos mov dec imul pusha andl loop sub cwtl mov push clc sbb (bad) mov negb cmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push jp (bad) das push jns ret cs ja mov jns mov ja mov jno mov imul lret cmp repz cmp enter pop jl ret xor cmpsl lret out adc repnz lret ss andb jle dec jbe pop mov dec jb cmpsb mov sbb inc push data16 lahf mov fsubr std adc ss pop outsb adcl ja pushf scas ret sti push and pop insl adcb pop sbb inc push addr16 lahf mov fsubr (bad) adc dec add test (bad) or inc push addr16 mov adc je lcall and pop insl adcb add sub fwait scas ret sti push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jg movsl mov push sub popa je jno popf mov cmp jae cltd lods mov push xor jl mov add cmp jae cltd stos mov cmp test (bad) or jge mov add cmp jae cltd lods mov push xor jge mov add sub push data16 lahf mov fldlg2 lcall inc push imul add sub popf mov (bad) jmp dec pop outsl (bad) xchg test into loope or xor outsl (bad) xchg test into loope pop sbb lea or jl mov add cmp je fwait scas rcl cld adc xor xchg ret (bad) call ds pusha jb xchg cmpsl mov adc xor data16 mov clc or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl je xchg test lret fucomp call and pushf lods mov adc ss pop imul loope add dec pop insl adcb sti or jg mov cli or das inc push data16 lcall sbb cwtl stos mov add sub dec pop jno xchg stos mov adc jno xchg test lret fucomp add xor push mov stc or xor push ret aad stc or xor jl mov add and pop imul mov pop sub roll sub stc pop xor outsb mov xor (bad) in and add repz dec imul popf mov dec insb mov inc fs lahf mov push jno scas int3 jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc pop jnp mov dec imul cmp int add mov cmp aad adc dec push cmpsb (bad) pop inc pop jl mov dec data16 cmp xchg mov notb xor jb scas into in or inc test cmp xchg mov in or dec xchg (bad) sbb pop jbe mov xor jno scas into in or movsb ret and pop jl mov push jb mov in or inc bound and pop jl mov lock inc xchg add inc pop jge mov pop jg shr sub fdivr sbb jecxz and leave ljmp lret jmp sub mov outsb lea dec pop outsl adcb stc or sub adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldpi cld push pop xor fs cwtl test call and inc push imul fucomi std push and inc push gs cltd stos mov adc xor push push mov adc aaa dec pop push mov (bad) or sub mov stc or sub dec pusha jno popf mov sub dec pop outsb adcb clc or sub dec popa jb xchg cmpsb mov (bad) cld or arpl xchg test lret decb and inc push gs cwtl test call and dec popa jge mov cmc or fs cltd stos add cmp js mov inc pop push mov repz daa cmp insb jge lahf mov shl (bad) mov inc push gs cltd stos mov adc xor addr16 fwait lods mov adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loope add insb jle mov testb sub dec pop outsl adcb adc dec pop insb jge lahf mov shl testb sub dec pop outsl adcb cli or jae xchg cmpsl mov push pop xor fs cltd stos mov adc xor push push ret aam testb sub dec pop jo xchg movsb mov xlat jmp ds popa jb xchg movsl mov fldl2e sti or cs push popa jb xchg movsl mov fsubr cli or adcl or jno test repnz aaa dec pop push lea hlt add pop imul rcl hlt add pop outsb adcb (bad) or sub dec pop outsl adcb (bad) or lahf mov shl cmc push pop sub dec pop insl jle mov stc or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec pusha jno xchg movsl mov fldl2e sti or cs push bound xchg cmpsb mov (bad) cld or arpl cmpsl mov cmp xchg lods leave in push cmp xchg mov repnz inc push addr16 lcall adc mov icebp add and jl scas stc sbb inc push gs cltd stos mov adc xor ja lcall adc xor push addr16 fwait lods mov adc dec pop imul rcl hlt add pop jns lods mov adc push lea repz cmp imul ret aam (bad) or sub dec pop outsb jg mov (bad) or sub pop jo xchg movsb mov fsubr sti sbb inc imul jmp mov push xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl nop mov cld and mov pop arpl push cmp xchg cmpsl mov adc inc pop push lea (bad) or sub pop jno xchg movsl mov fucomi (bad) adc xor mov inc pop jle mov pop jg mov push jo lods int3 ljmp rcr sbb push jbe mov lock sub out sub push repnz sbb adc fstpt add fdiv adc dec imul cmp xchg mov icebp cvttps2pi test cmp xchg mov sbb mov cltd mov popa (bad) cmpsl lret cs pop imul ret aam (bad) or sub dec pop outsl adcl mov aaa push outsl mov cmp (bad) lods leave call js mov jmp xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov xor xchg xor leave out and pop jns mov out or inc arpl stos enter inc popa jg mov push jo stos leave out and mov pop jnp mov icebp or pushf mov dec imul (bad) lods lret and jl mov add push jb lods leave in pop cmp (bad) icebp adc dec imul inc bound and bound sbb push jne mov icebp ucomiss xchg cmp js mov lock sub push push and pop jge mov push jb lods lret call jl mov cvttsd2si test ss ja mov in or dec imul lcall imul cmp jl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call repz je mov push mov cmc sbb bound bound aas mov pop andb jns shr xor lahf ret in cs jge (bad) jmp lcall xchg mov std pop inc mov adc push ja or xor insb jge lahf mov shl cmc push pop sub dec pop insl jle mov (bad) or sub mov clc or sub cmpsb mov fldpi cld or arpl test lret (bad) adc add lea add and mov icebp add daa cmp insb jge lahf mov shl cmc push pop sub dec pop insl jle mov testb sub dec pop outsb jg mov std push pop xor data16 cltd stos mov adc xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add jnp popf scas mov adc imul ret aam (bad) or sub cmpsl mov push pop xor fs xchg test lret fsubr decb and inc push data16 cltd stos mov add cmp insb jle mov (bad) or sub mov stc or xchg out call and inc push addr16 pushf lods mov adc jnp popf scas rcl repz cmp imul rcl cmc push pop sub dec pop insl jle mov clc or cmp xchg scas rcl cmc push pop sub dec pop insl jle mov testb sub dec pop outsb jg mov clc or sub movsl mov fldl2e sti or das inc push bound xchg cmpsb mov fsubrp add and fwait lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec loopne add and inc pop imul jecxz push pop sub dec pop insl jle mov testb sub dec pop outsb jg mov clc or sub dec pop jo xchg cmpsl mov mov inc push addr16 lcall adc jp pushf scas mov adc push mov repz cmp imul mov xlat call ds arpl xchg test lret decb and inc push fs cwtl test decb and inc push gs cltd stos mov adc mov repz es dec pop imul rcl hlt add pop outsl adcb clc or sub dec popa jae xchg cmpsb mov (bad) cld or arpl cmpsl mov mov inc push fs xchg test lret fsubr (bad) adc xor gs cwtl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add daa cmp insb jle mov testb sub dec pop outsb jg mov clc or sub dec pop jo xchg movsb mov fsubr cli or das inc push arpl cmpsl mov push pop xor fs xchg lods enter cmp ja mov repnz inc push data16 lcall xor loope and test push jnp mov dec pop imul cmp cli sbb push je mov (bad) icebp cvtps2pi andl adc cmp jg mov (bad) or sub mov cli sbb enter push jb mov test inc push data16 lcall adc xor push addr16 mov dec insl mov pop jge mov cmp adcl xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) js lcall aas popa add scas (bad) icebp adc loopne sbb push xchg xorl jge mov push or dec imul mov stc sbb andl push comiss xchg mov cli sbb pop andl enter dec xchg add xor xlat hlt adc dec push adc jb fist ss jg int3 out rdtsc push jbe mov insl (bad) (bad) pusha mov push jns mov jno mov imul mov and (bad) and insl xchg mov cld and mov data16 data16 push mov jmp inc imul int adc pop jle (bad) jmp xor movsb int3 out adc jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push jnp ret jmp lcall xchg mov ja mov jb mov jo mov cld and xchg jmp mov cld sub sahf (bad) lock fiadd sar and xchg mov subl mov push sub jns (bad) out adc fiadd das pop subb popf (bad) ljmp negl inc insb xchg mov test movsb lret inc imul icebp sbb imul cs mov nop mov xchg mov xchg mov (bad) cmpsb int3 cli pop inc insl xchg mov test mov xchg mov xchg enter jno lret stc es jge (bad) add pop subl scas (bad) add xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fimul adc pop inc imul and mov jl add add pop mov xchg mov (bad) es jne ret ljmp add dec ja (bad) icebp sbb push mov nop shr inc insb xchg shr inc insl cwtl ret in sbb stos aad daa push jle aad sub test subl cmp mov jge lret repnz cmp add cli and ret jmp adc imul cltd (bad) in pop inc outsb cwtl ret dec jnp sar sub (bad) add pop mov mov popf enter js into negl push and ret add xchg ret inc jge xlat push das pop xchg mov nop mov xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov mov ja sar sub scas fmull cmp mov xchg ret mull dec ja int daa push subb in push inc imul mov or jecxz cmp loope arpl xchg mov mov xchg ret inc jo (bad) repz dec jbe lret dec add sar xor mov or xchg mov (bad) mov xchg (bad) hlt pop dec jbe (bad) hlt test in sbb xchg mov out imul sub lods fmull xor mov xchg mov lods loopne bound pusha mov xchg mov xchg mov mov jne int and lahf lret clc and cld das pop mov cltd (bad) inc jb enter jno (bad) in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall inc jae ret in sbb sahf sar xor adc fs mov xchg shr aas push aas imul cs (bad) lods fisttpl aaa pusha mov popf (bad) icebp sbb mov jge flds sub xchg mov xchg (bad) lock add push subl cmp mov adc push jecxz cmp mov xchg and repnz arpl dec jno mov jl lret hlt sbb cltd shr cmp mov add push jl aad sub movsb lret hlt sbb xchg shl outsl sti xor mov pop xor mov push das pop test xchg shr inc imul xchg (bad) repnz pushf enter js int3 stc and mov add loopne aaa pop mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov movsb sar sub mov push xor mov or or out sbb cld sub cmpsb sar sub scas fadds xor mov or mov movsb iret cli sub stos sar sub aad cmp mov fwait (bad) inc outsl fwait lret dec jbe iret cli and add xchg cltd (bad) in sbb xchg shr dec je (bad) dec jbe int and jl iret add pop xchg mov mov mov xchg int3 mulb push jp iret sti es jge (bad) add pop xchg mov or (bad) dec js int es jnp aam cs test nop mov xchg (bad) inc jo (bad) icebp sbb jae int3 mull dec jp rorl aaa popa lea xchg shr inc jo (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cltd ret inc insb cwtl int and jnp aad xor flds xor mov or jmp jno,pt (bad) repnz sahf (bad) icebp and cmpsb sar sub scas fildl xor or rorb das push jle lret repz lea fwait shr xor subl aam and cltd shl ss mov insb lea and dec pusha jbe mov adc ds addr16 cmpsl mov push addr16 cmpsb mov adc ds push shr std adc ds push shl cld adc push jl rcl add sub cltd mov (bad) or xor pop jne mov push and dec gs cmpsl mov sub push insl test or xor xor mov lods fldl daa dec jl in inc test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc repnz divl pop xorl mov pop dec jbe fistpl dec jae cmc and call or mov sbb mov adc test push dec mov mov lahf lret cmp mov adc insb cltd (bad) in push inc outsb xchg enter add xor mov or pop test xchg xchg mov pushf lret push jge (bad) add pop test test test jg (bad) add pop mov mov push cmp mov mov ja aad xor mov add fimul aas push shr inc insl cwtl ret out sbb fwait (bad) inc outsl fwait (bad) repnz inc jno lret std sub scas (bad) add pop mov xchg mov xchg shr inc jno int3 or pop jg int3 cmc sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lock popf (bad) out pop aas xchg mov xchg pushf (bad) in adc in imul xchg jbe (bad) out adc xchg mov mov inc outsb fwait (bad) dec js int and test jge loope cmp mov insl xchg (bad) out sbb popf leave cmc and lret cmc pop dec jg sub popf (bad) jmp cmp mov add push ja (bad) icebp sbb insl xchg mov xchg mov or stc and and adc fwait (bad) repz dec jno lret mull dec jns iret add lea fwait leave hlt push dec jp sar sub lods fadds xor mov push ds fwait lret cli es jle fadds pop xchg mov fwait leave add fs xlat (bad) and jb (bad) ljmp add push jns enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lock xchg mov subl test jp int3 hlt cmp mov add dec je (bad) pop aas data16 jp int sbb out sbb xchg mov (bad) stos sar and jmp cmp mov add sar and xchg mov xchg jne (bad) aas addr16 mov pop cs mov jp lret repnz (bad) mov add sar and xchg shr inc jb (bad) lock xchg mov mov test js (bad) mulb dec jno ret out adc fldl cs js int3 repnz xchg mov jl sar pop inc outsl xchg mov test jb (bad) inc jb (bad) inc jbe lret hlt sbb mov mov jge iret cmc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall movsb int sbb in pop aas addr16 mov add pop jle aad sub cmpsb lret cli and mov mov ja (bad) out adc fimul xor mov pop xor test negl inc jo vmovshdup nop mov mov or pop andb mov jnp int sbb outsl xchg shr inc jno ret cmp mov (bad) es jbe int3 cmc push inc jo ret inc push xor subl sub push push xchg stos mov sub push imul std adc inc push insb (bad) xchg mov negb dec pop jae popf mov fdivp or xor pusha jbe mov adc ds push aam add cs pop outsb test sub jne mov adc ds push xchg lods rcl add das inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov adc ds imul push push xor pop jne mov adc inc push lock push xor popa js movsb mov sub outsb test pop sbb lea push sub pop jo popf mov loop test faddl shr adc adcb and xchg scas fdivr pop inc xchg pop jle leave out adc pop jg (bad) fdivp or xor jae popf mov fdiv pop sbb inc pop jno movsl mov cmp jp cmpsb mov sub push imul call aas push insl sbbl sbb inc pop outsl test push sbb dec pop je sahf mov fcomip or ss pusha jne movsb mov daa cmp addr16 stos rcl add das inc pop jno pushf mov fdivp or aaa dec arpl cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in add mov xchg mov mov jnp fisttpll xor nop mov popf int and cld es jg faddl xor shr dec add xlat add pop mov xchg (bad) cmc and test mov xchg shr inc insb pushf leave mull dec jnp sar es jl aad cmp ret inc jne int and movsl roll xor mov or addr16 mov mov (bad) scas fmull aaa gs mov xchg shr inc insl mov jle aam sub add adc jae enter subl pusha lea xchg mov cltd (bad) imull push add xchg mov lcall int3 clc es (bad) mov mov hlt and into cli and push xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl popa mov clc pop dec outsl xchg mov jg iret mulb inc insb xchg mov nop mov push xor mov cmp cmpsb mov and dec fs (bad) adc nop cmpsb mov and mov or sbbl pop sub push insb adcl push imul std adc cmp cmpsl mov cmp jle test shr std adc push insb (bad) xchg lods rcl add sub push xchg test adc cmp cmpsl mov cmp jge test shr std adc cmp cmpsl mov push jge repnz inc pop jno lcall das inc pop outsb adcl adc adcb adc ds push add sub push imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jmp push data16 movsl mov and dec bound movsb mov and dec bound mov or xor mov jo imul lods ret add and pop jae mov or ss pusha jne lahf mov fdivp or jne lahf mov fdivp or xchg daa ds imul call ds push shl sti adc mov or xor sahf mov fdivp pop sbb inc pop jo lcall dec pop jb popf mov fcomi add outsb sbbl pop sub push imul (bad) adc cmp cmpsb mov and mull inc pop jb pushf mov fcomi add outsb and xchg scas (bad) fldz add sub xchg lods rcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc nop movsb mov and mov or ss pusha je sahf mov (bad) pop sbb add je sahf mov (bad) pop sbb inc pop jo lcall aas push imul std adc cmp data16 movsl mov and dec bound mov or xor sahf mov fdivp or xor pop jae popf mov and mov or jne lahf mov fdivp or test add cs pop jo lcall sub push imul scas aam sbb mov imul add fldz add xor jo fwait mov (bad) add cs pop outsb sbbl pop sub push imul (bad) adc cmp cmpsb mov sub insl sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xlat in add sub push imul call jle test shl cld adc cmp data16 cmpsb mov and dec fs cmpsb mov in sbb fwait (bad) repnz popf (bad) repnz dec jne lret mull dec jp fadds sub lods fadds sub add push jg xlat add pop xchg dec jle aam sub scas flds pop test test xchg ret inc jo enter jae leave repnz mov jbe lret push jle aad sub subl mov or pop mov mov xchg mov xchg mov cwtl (bad) icebp sbb sahf lret mull dec subl das pop test mov pushf enter jns iret cli and subb mov push xor arpl push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc add push jnp sar es jnp iret cli and jl sar daa push jle aam sub mov or pop mov mov mov xchg mov popf ret cmp stos (bad) negl in xor andb mov ljmp push jl lret aas arpl inc imul jne shl xor test jb shl cmp scas aam push inc imul in adc popa mov ja (bad) in adc mov js (bad) in adc (bad) cmc push inc jb shl xor cmpsl int sbb lea jns leave out adc pop xchg xchg mov andl add leave out adc (bad) add (bad) in adc mov insb xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub jp enter bound jg fadds sub stos (bad) add subl push mov mov xchg mov xchg mov mov test mov scas faddl faddl xor lods aad xor lea mov mov mov xchg mov fwait (bad) repnz je leave repnz dec je lret dec jbe int and cmp add dec outsl xchg mov (bad) and jne rcl add sub push insb adcl push imul sbb inc pop jno fwait mov fcomi add jo lcall xor jb pushf mov fdiv pop sbb xchg xor popa je scas (bad) xlat ljmp jno xchg stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc or xor insb jg movsl mov pop sub popf mov (bad) jmp dec pop outsb (bad) xchg test iret loop or cs imul hlt pop sbb mov add cmp jae cltd lods rcl cli or insb jg cmpsb mov sbb push gs mov add inc arpl es push adc pop jp lods rcl cli or insb jg movsl mov pop sub sahf mov jmp dec popa je lcall push xor jle movsb mov fnop add sub dec popa je lcall pop xor pop insl adcb add arpl mov cmp (bad) xchg test into loope nop leave repnz xchg mov jp enter addr16 mov jns (bad) lock nop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl leave icebp adc aam sub sahf (bad) in adc pop test xchg mov or ss test jb mov (bad) test mov je (bad) jmp lods aad and je leave icebp pop mov je ret ss xchg push mov push sub aam add push js vmovddup popa mov jno shl xor cmpsl int sbb cwtl mov (bad) test negl imul movsl int3 repnz arpl push jp (bad) cmp scas (bad) (bad) daa dec jb mov jge lret hlt sbb mov cmpsl iret cmc sbb fild sub jmp cmp lods iret negb imul negb imul jp enter push es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lahf (bad) in adc pop test insl mov popa mov jae mov mov jne ret xor negl aas lea sub int3 add sub push fs pushf mov fsubr (bad) adc ss pop outsl (bad) xchg cmpsl mov sbb ds fs popf mov (bad) jmp dec pop outsb adcl push mov fnop add sub bound lods rcl stc or xor imul mov fnop add sub dec popa jle shl and andl js mov insl xchg mov add dec imul jns mov dec pusha jae cltd lods mov cmp jb fwait scas rcl cli or imul mov fnop add sub bound lods rcl stc or xor imul mov fsubr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc jbe pushf scas shr add adc cmp je lcall pop xor imul mov fsubr add je lcall and pop insl adcb add gs mov (bad) add cmp test (bad) or jl mov add sub fwait scas rcl cli or insb jg movsl mov sbb arpl lahf mov fsubr (bad) adc dec pop outsl (bad) xchg test iret loop or pop xor imul mov fnop add sub bound fwait scas rcl cli or insb jg movsl mov sub push gs mov call and test (bad) or cs push addr16 mov call and test cmc or cs push imul (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp xchg mov notb ss ja mov push arpl pushf scas ret sti push and pop insl adcb pop sbb inc push data16 mov fcomip push sbb push gs sahf mov xlat jmp dec pop outsl (bad) xchg cmpsl mov sbb push data16 sahf mov fldlg2 call and test clc or xchg movsl mov push sub bound popf mov (bad) jmp inc pop insl adcb pop sbb mov (bad) adc dec pop jo xchg add xor xchg mov repz push js and cwtl stos (bad) call jnp mov mov adc dec pop jo xchg test or inc push push (bad) fldlg2 call and dec pusha jae cltd lods mov fdivrp sbb xlat stc pop ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov repz push outsl lea inc andl repz (bad) mov fdivp add sub popf mov (bad) jmp inc pop insl adcb add sub fwait scas ret sti push inc bound add sub bound fwait scas rcl cli or imul mov fnop add sub dec popa je lcall pop xor jg movsl mov out push and pop insl adcb hlt pop sbb mov das push jb mov hlt adc ret sub je repnz cmp sahf ret jecxz sub (bad) mov repz pop jge enter dec outsl (bad) mov hlt push cmp ret in es insl nop mov jmp inc push pop inc outsb xchg mov (bad) and xchg mov fwait shl cs jbe mov jae mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec jae mov jae ret dec jno mov push sub out das push ja ret xor mov dec jae in sub loopne and scas or jecxz in out adc jp mov outsb xchg mov negb cmp cltd mov mov insl nop mov sti sbb int adc jp shl sub mov push sub xchg mov sti sbb bound aaa pop jnp mov je mov xchg arpl ss outsl (bad) mov add sub arpl lods int or dec insl mov mov leave (bad) pop aas pop jg ret sub mov std and lret inc push sub lahf (bad) out adc pop cmpl (bad) in pop inc addr16 mov (bad) cmpsl lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out adc pop andb mov cld and mov jo (bad) out push sbb inc pop outsl test add cs pop insl test add das inc pop outsb sbbl push sub push imul (bad) adc cmp fwait mov fnop add outsl sbbl sbb inc pop insl (bad) xchg lods ret add sub push xchg test shr (bad) adc cmp cmpsb mov sub push imul (bad) adc cmp cmpsl mov and (bad) movsb mov and dec arpl mov or xor sahf mov loope push ds subl push shl cld adc cmp data16 movsl mov and dec bound mov or xor pop jae cmpsb int sbb adcl push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call adc cmp data16 cmpsb mov and dec arpl mov or cmp mov add xor jno fwait mov (bad) add add jb pushf mov fdiv push sbb inc pop outsb sbbl push sub push xchg stos rcl add inc pop outsl test add sub push insb adcl push push shl cld adc cmp jp movsb mov and nop movsl mov dec arpl movsb mov and dec bound mov or xor pop jae sahf mov (bad) push push xor jae popf mov fdiv pop sbb inc pop jno fwait mov loopne or xor pop jae popf mov fdiv push sbb inc pop outsb sbbl push sub insl (bad) xchg lods rcl add sub push xchg test adc cmp push lods iret cmc sbb push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg test adc cmp data16 cmpsb mov cmp jp movsb mov and dec popa ja mov or cmp shr (bad) adc cmp addr16 cmpsb mov es data16 movsb mov and dec popa jbe mov or xor sahf mov fnop sbb xchg pop jg int3 repz mov sub mov adc mov adc (bad) mov or sahf mov fcomip or xor jne lahf mov (bad) pop sbb inc pop jno fwait mov (bad) add cs pop insl lea xor scas xor inc lcall dec test or xor pop jae sahf mov fdivp or xchg add outsl test or xor jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fimull xor sahf ret out imul cmp (bad) out adc mov sub cmp jo mov je ret sub push xchg test sbb xlat out add cs pop insb adcl push data16 movsl mov and dec popa jbe mov or ss pusha jne sahf mov in push and dec bound mov or xor pop jae pushf mov fcomi add outsb sbbl pop sub push imul (bad) adc cmp data16 mov hlt or xor jno pushf mov (bad) add cs pop insl (bad) xchg stos rcl add sub push imul std adc cmp data16 movsl mov and push addr16 cmpsl mov and mov or js mov add and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl js mov or xor pop jae popf mov fdiv add jae sahf mov (bad) pop sbb dec pop jb pushf mov fcomi add outsb (bad) cwtl lods ret add sub push xchg test adc cmp jp movsb mov es push shl sti adc mov or ss popa ja mov or xor pop jb popf mov fcomi add outsb test pop sbb inc pop jo fwait mov fldz add sub xchg lods rcl add jle test adc cmp gs cmpsb mov cmp jle test adc cmp cmpsl mov and (bad) mov or jbe mov push and dec add xchg cmpsb mov sub mov cs pop outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add sub push xchg test adc inc pop insl test add sub push imul add outsl test add cs pop insl sbbl push sub insl (bad) xchg lods rcl add jle test adc cmp data16 test mov or xor pop jae sahf mov (bad) or xor jae sahf mov fdiv push sbb inc pop jo lcall cs pop jae mov cld and nop mov (bad) and xchg mov add dec jne mov jbe ret cmp test repnz arpl and mov pop jp shl sub xchg mov insb mov imul arpl cs jae mov stc sbb inc push outsb nop mov out sub popa je mov in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xor jg (bad) in or dec stos inc xchg mov aas jno ret sub xchg cmp xchg mov icebp add mov inc pop jl mov fiaddl sub mov insl xchg mov sti xchg mov imul cmp jae cltd lods mov and pop insb jg movsl mov xor insb jg movsl mov sbb ds fs sahf mov (bad) ljmp outsb adcl push push (bad) (bad) add cmp jno scas rcl jmp adc aaa dec pop outsl (bad) xchg test into loope pop sbb mov add cmp test (bad) or inc push addr16 mov (bad) adc pop jle mov fldlg2 call and test stc or xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jg movsl mov push sub bound fwait scas rcl cli or imul mov fucomp adc ds addr16 mov add cmp test (bad) or jge mov arpl xor mov add inc imul cmp cmpsl lret out adc mov insl xchg mov pop jg (bad) in adc jp shl sub (bad) pop inc mov insb mov bound xor xchg movsl mov fnop add sub bound fwait scas rcl cli or outsb adcl xchg movsl mov pop sub pushf scas ret cli or insb jg movsl mov pop sub push gs sahf mov xlat ljmp outsb adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc pop imul mov fsubr add je cltd mov negl pop mov dec outsb nop mov cmc pop cmp add pop sub bound lcall pop jle mov push xor pop insl adcb add sub fwait scas rcl stc or xor push nop mov add jae sahf ret call and test (bad) or cs push data16 lahf mov xlat ljmp outsl adcl push fs popf mov fsubr (bad) adc ss pop xchg inc test push jno mov negl cmp andl frndint pop pop (bad) movsb (bad) jmp jbe pushf scas ret sti push and pop insl adcb add sub pushf scas ret sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor xchg cmpsl mov dec pop jno xchg stos mov sbb inc push push (bad) fucomi add cmp jae cltd lods mov sbb jl mov add sub pushf (bad) add cmp jae cltd lods mov push xor jl mov add je pushf scas ret cld mov dec pop outsb adcl push imul push jp lret aaa pop (bad) cmpsl into repz sbbb sbb insb adcl push imul (bad) adc ds push shl cld adc cmp jnp movsl mov daa cmp addr16 cmpsl mov push mov jecxz push and dec bound mov or xor sahf mov (bad) or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pop sbb inc pop jno fwait lret cmp jl cmpsb mov cmp jnp movsl mov and dec fs mov (bad) cmp addr16 cmpsl mov es data16 inc pop je mov sbb dec popa jns test xlat out pop pop ss imul push outsl xchg adc out cmp mov pop xor mov or pop jne movsb mov xor jge lods vunpckhps mov and dec addr16 leave hlt push dec jno (bad) out sbb jle scas vpmaddwd cmp imul daa aas push outsb xchg push cs pop jbe movsl mov add push imul push outsl xchg push cs pop jne inc xchg mov mov xchg ret lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov (bad) addr16 mov mov test xchg ret push xchg xchg (bad) repz test add pop mov nop mov mov mov xchg (bad) addb xlat std and nop mov (bad) and xchg mov add fild dec jbe aam and push push cltd mov loopne (bad) aas push outsb test adc mov xor js cmpsl mov xor fs cltd mov loopne (bad) aas push outsb test adc inc pop jae mov sbb dec pop ja cmpsb mov xor jns test and mov jbe shr cmp mov add push jge sar and jnp int3 add sub popf ret ljmp jmp inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call adcl push adcb adc pop jle (bad) ljmp call jb pushf mov fdiv add outsl test add sub push imul or xor jae popf mov fdiv push sbb inc pop jo lcall sub xchg lods rcl add jle test aam call inc xchg cmp jp movsl mov and dec bound add (bad) cmp js mov or xor popa jbe mov adc jle test shl cld adc cmp data16 movsl mov and dec bound mov or xor mov or cmp insb xchg mov cmpsb (bad) push jp lret inc outsb xchg mov (bad) mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov adc bound push (bad) stos aam sub jge sar and je (bad) in pop inc insb xchg (bad) icebp sbb je lret cmc and pushf (bad) in adc arpl pop test xchg mov mov add fiaddl pop test subl xor mov push cs jg sar sub movsb int push inc outsb cwtl mov mov jl int sbb insl cltd (bad) aaa push mov test jbe shl xor test insl sahf leave repz (bad) mov add push jp lret inc push mov xchg mov imul (bad) fdiv push sbb inc pop outsl test add sub xchg lods rcl add inc arpl aaa push js mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and insl xchg mov inc pop outsl test add sub push imul pop sbb mov push sbb inc pop jo lcall sub push imul std adc cmp data16 cmpsb mov and dec gs test shl cld adc cmp jp mov or ss pusha jne sahf mov fdivp or xchg repz mov or mov daa inc pop jb mov pop cs pop jne movsb mov xor jns test xlat out push and push push fdivp or mov push cs pop je movsb mov xor jns test pop aaa dec data16 scas (bad) loopne adc aas push outsl xchg das pop subl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call das inc pop jbe cmpsb mov xor lods (bad) fdivp or test sbb dec bound test and push addr16 scas enter daa aas push outsb xchg add xor js stos rcr or cmp mov outsl xchg pop das inc pop jbe cmpsb mov xor stos ret fcomi or cmp sbbb sub ja cmpsl mov xor lods vpmaddwd xchg push das inc pop add test and push insb test xor js test xlat out push push ss gs lods (bad) fcomi or cmp imul adc inc pop jno mov sbb dec arpl stos (bad) fcomip push es mov in push cs pop jne movsl mov xor fs lods (bad) fdiv or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp fwait mov out adc xchg test and push push fcomip push es mov in adc inc pop jae mov sbb inc popa jns test and lret jecxz adc inc pop jno mov sbb inc pop jbe movsl mov xor jp test and push push cltd mov loopne adc inc pop jae mov sbb add jge lods vpmaddwd sbbl sub push outsb xchg push cs pop jne movsb rcr xor xchg stos mov sub cmpsl mov and (bad) movsb mov and push gs movsl mov and push gs and stos aad and cltd ret call mov or pop test test scas flds sub movsb lret cmc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov outsb cwtl ret gs pop xchg push sub icebp sbb arpl je (bad) out push ds lcall mov adc popa mov subl and (bad) inc insl lcall xchg mov lea (bad) lods aad sub fiaddl cs (bad) lods aam sub jl sar and cmc pop dec jae lret stc sub cmpsl sar and pushf (bad) out sbb cwtl ret inc imul stc and jne (bad) repnz (bad) out sbb (bad) inc insl xchg shr inc insl xchg (bad) out sbb cltd shr ds mov xchg subl (bad) (bad) es je ret lock xchg mov xchg shr cmp mov fwait (bad) lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fwait (bad) out sbb xchg mov mov js mov mov jns leave repnz xchg mov xchg jl xlat add push js leave repnz imul xchg jl int add std and outsl xchg mov xchg xchg mov jl int3 repz in adc arpl jnp int sbb insb xchg mov or pop subl push xor subl mov pop cs jns enter pusha mov mov imul add sub imul cld adc cmp data16 movsl mov and dec bound lods ret add das inc pop outsb sbbl add insl (bad) cwtl lods ret add sub imul cld adc cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp nop movsl mov and push adc dec pop jne mov or ss popa ja mov or jns movsb mov and push gs movsl mov xor jb popf mov (bad) or xor jae sahf mov fcomip or xor mov or xor mov or xor mov adc aas push push xchg stos rcl add adcb push sub imul add sub lcall xor jo lahf mov loopne or aaa dec popa ja mov or js mov (bad) adc ds imul add sub cwtl lods ret add sub add out adc dec bound mov push and dec fs movsb mov and dec addr16 test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sub push imul (bad) sbb inc pop outsl test add jo fwait mov fcomi push sbb inc pop jno sahf mov fcomip or xor mov or ss pusha jbe mov ret call mov sti push inc mov cmp adcb fwait ret ljmp add stc and cmpsb sar and mov jno shr cmp or add pop xchg jns int push inc insl xchg ret mov jae (bad) imull test mov or xchg scas fmull ss mov nop mov mov mov js shl xor mov jmp dec mov mov mov fwait (bad) cmc and mov push cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jle fadds xor sbb movsb roll aaa bound imul mov sbb jnp sbb pop lea into call pop jbe movsl mov xor jnp stos ret (bad) or cmp test jno lods ret fcomi or cmp sbbl outsb test adc inc pop jb mov push sub loope xor test cltd ret jmp cmp aam add xor jp test xor popf mov in adc inc pop jb cmpsb mov xor stos ret fdiv or cmp sbbl insl test bound xor fs lods (bad) or cmp sbbl sub outsl xchg push cs pop jne lods sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld es subb cmp imul adc inc pop jb mov pop cs pop jne mov sbb dec data16 lods (bad) fdiv or cmp sbbb es mov out adc mov sbb dec popa jp stos rcr or dec outsl xchg mov cmp sbbb es push jo lahf mov out adc mov sbb dec popa js cmpsl mov cmp insb sbbl sub jo lahf mov call pop jbe movsl mov xor jp stos ret or add imul push cs pop je mov sbb dec pusha js stos ret or aaa dec data16 lods (bad) fdiv or cmp sbbb es jno mov push add jns test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp sbbl insb sbbl daa aas push insl test cs pop je mov sbb dec bound test (bad) or cmp jle scas (bad) or cmp imul adc aas pop jo mov sub jg mov out adc mov sbb dec bound test pop ss gs lods ret fcomi or cmp jg mov in adc inc pop jb mov pop cs pop ja cmpsl mov xor stos ret fcomi or cmp jg fwait mov loop adc inc push je pop pusha lea lcall sar daa push jg aad ss dec lea pop ss data16 lods (bad) fdiv or cmp sbbl insl test ss gs lods (bad) fdiv or cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cwtl mov fcomip push es insl test sub jno mov push sub mov and push push fdivp or (bad) cltd mov loopne adc aas push outsb xchg adc inc pop jb mov push cs pusha jl add xor stos ret (bad) or cmp sbbb es insl test sub jno mov pop das dec data16 scas vpmaddwd test sub jb mov add jnp stos ret (bad) or cmp sbbl ja test xlat out pop push ss gs lods vpmaddwd cmp insb test adc inc pop jno mov sbb dec pusha ja cmpsl (bad) fisttp xor mov lock cmp sbbl jb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg stos ret fcomi or cmp xchg sbb dec arpl stos rcr or cmp jg scas (bad) fdivp or test sub pop jae mov sbb dec data16 mov loopne adc aas push jo lahf mov out pop das dec pusha ja cmpsl mov aaa push push fcomip push es insl test cmp jmp arpl stos ret or cmp sbbb sub jno mov sbb dec pusha jns test test mov mov imul cli pop dec outsb xchg mov fisttp addr16 (bad) dec js (bad) add pop (bad) mov scas fisttpl arpl mov push cmp and lods out inc jne rolb xor mov ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pop dec jnp (bad) cmp aam ss ret lock cmpsb sar sub mov adc and mov cmpsb (bad) or fs (bad) mull xorb mov cmovbe xlat pop xor xchg (bad) icebp and mov push inc jbe aad xor imul xor in push dec jge loope jg add clc es xchg lcall jmp inc xchg mov xchg mov lcall fadds xor mov mov adc xchg ret dec jnp mov sub cmpsl aad sub lods fiaddl sub stos add push xor flds xor (bad) xchg mov cmpsl roll sub or pop xchg mov xchg int3 stc sub lea xchg ret dec jae iret stc es mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc add sar sub mov push cmp shr inc jno enter jle (bad) add pop xchg mov popf (bad) repnz imulb pop test mov lea add lcall into sti es jl rolb sub lods (bad) add push jg (bad) add mov xchg mov fwait (bad) repnz jae leave hlt pop dec jne int3 mulb push subl mov movsb sar daa push jnp sar es jp sar xor mov or mov in and sbb mov sbb test and xchg mov adc jl fldl imul mov mov mov stos add add xor lods aad and call mov push cmp xchg test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fdiv or aaa dec data16 lods (bad) fcomi adc jno mov pop cs pop jne cmpsl shr pop pop dec addr16 (bad) fimul and lret sub mov sub (bad) lcall outsl popf mov std pop cs jbe rcr and push jg add dec bound ret and push imul push outsb xchg adc inc pop je add pop cmp popf mov in adc inc pop jno mov pop das inc imul xchg mov ret in sbb cwtl (bad) dec jne lret hlt push dec jno (bad) icebp and mov cltd (bad) popa xchg mov add mov sahf int3 clc cs test jl fisttp inc outsl lahf iret ljmp sbb jne aam cs mov lahf iret add out push dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge flds ss (bad) repnz (bad) mov adc mov xchg shr dec jle fimull aaa imul aas insl movsb sar daa push (bad) scas fisttp outsl sahf fimull xor sbb into cld sub add cmc es xorl pop mov movsl aad jno,pt rolb xor mov test add cmp iret add fs shr inc jb enter jns flds xor ret mull push (bad) shr dec jl fimull insb pushf lret sti sub mov sbb mov cltd (bad) repz dec jle xlat (bad) daa push add push subb mov pop mov lcall fisttp cmp (bad) int3 add pusha mov popf int sub xchg test ret out sbb mov jl (bad) add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov popf lret push jl aad das popa (bad) mov pushf (bad) repz test (bad) cmp mov cwtl (bad) out sbb mov jl sar sub mov fstps inc je (bad) repnz iret cld daa push jle aad sub push cmp int3 clc and (bad) mov or gs les mov add jmp aas imul xchg shr inc jno (bad) lock mulb push sahf lret hlt pop dec jbe lret inc jo iret sti and jecxz dec jp aad xor mov mov mov pushf enter sbb lods fisttpl (bad) xor mov mov mov xchg mov xchg ss mov mov jb lret inc jo (bad) out sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp dec jb shr inc insb xchg (bad) inc jb enter js lret push (bad) in sbb lahf into cli sub mov push cmp jmp inc jno std sub mov xchg (bad) lock (bad) sub test (bad) mull jg fimull cmp lret push xorl mov scas fimul aaa popa mov add jge (bad) add pop mov fadds das pop xchg xchg mov hlt and stos xlat add pop test mov mov pop xor xchg in mov and mov adc sti xor nop mov mov xchg sahf int3 stc daa push xorl add pop xchg xchg mov xor (bad) hlt and lods faddl xor mov movsb sar sub sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cwtl (bad) imulb pop mov mov mov mov adc xor mov xchg ret in sbb pushf lods mulb dec js lret repz jb lret pop test xchg stc daa push xchg xchg shr inc imul sbb sbb mov jle aad das pop xchg xchg (bad) lock jns aam cs (bad) lods fildl loopne xor adc cmp ret lock dec je lret dec js sar sub lods loopne cmp loop cmp xchg shr inc outsl mov jp iret cli daa push jl sar sub out sbb sahf lret dec jp iret std sub scas flds xor or lods fimul ss lea xchg ret pop mov xchg shr inc insl xchg ret repnz dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl into sti daa push (bad) (bad) hlt and mov jle xlat add pop test mov mov (bad) lods fimull xor mov pop (bad) movsl (bad) jmp aaa pop jl (bad) out inc imul jnp enter arpl dec outsb xchg mov add push jp lret add cs jge enter bound dec jne (bad) out sbb xchg mov mov cltd mov xchg jns int3 repz fimull mov or pop jg aam and lock (bad) stc push inc mov (bad) mov jmp dec outsb xchg mov jno mov jp ret call mov mov mov pop cmpl loopne xor adc popa mov and cltd ret inc outsb xchg mov subl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc out adc pusha xchg jo (bad) repnz xchg mov movsl aam and out xor dec jne enter ljmp lcall jns jp ret cmp cltd pop pop inc xchg mov inc pop outsl test add sub fwait mov fnop add outsl test add sub xchg lods rcl add rcl add jle stos mov sub inc pop insl (bad) cwtl lods ret add sub push xchg stos rcl call ds push shl pop sbb inc pop jo fwait mov fdiv pop sbb inc pop jo cltd scas (bad) fldz add das inc pop outsb sbbl pop sub push push xchg test adc cmp cmpsl dec test jg iret stc and test (bad) daa push jns lret dec outsl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov mov jo mov mov jbe (bad) in adc pop mov jnp leave lock mov xor test outsb xchg mov jg iret hlt sbb (bad) mov add dec jbe int shr cmp mov add push ja (bad) in adc arpl push jge out cmp mov add dec jb mov (bad) daa dec ja (bad) out adc ljmp std and xchg shl cmp fldl sub mov ja enter mov test jp int3 hlt sbb lock shr cmp mov mov ja shl das push jl xlat jmp jae shl xor xchg js lret inc add enter jbe xor mov arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call negl inc push sub cld cmp add dec je ret jmp lods (bad) cmc sbb lea pop jl (bad) sbb mov jb shr dec outsl xchg mov negb cmp out adc push jne mov stc pop inc lea sbb data16 pop jp mov outsb (bad) mov negl aas xchg andl stos (bad) stc cmp mov insl nop mov add inc arpl inc data16 popa (bad) mov dec outsb xchg into repnz mov data16 pop jp shl sub xchg mov fmull das push jns mov jno mov imul pusha andl test push jae mov imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jmp lcall fdivr and dec loope push je mov jp (bad) cmp lods (bad) negb inc insb xchg mov cld and movsb lret repz cmp stc sbb leave in sub clc and mov jnp into negl dec jae (bad) out sbb xchg shr imul cmp push cmp mov or pop xchg jb shl cmp out cmp mov xchg mov lea mov xchg mov xchg js ret xor andb xchg mov cltd ret ljmp pop xor lods in adc pop jle (bad) xor mov jns shl das push js lret aaa pop jnp mov imul popa test loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec insb nop mov cli and stos int adc pop jl ret call mov push jne mov jb mov jmp inc push and fscale daa dec imul mov xchg popa test push js shr sub (bad) and stos (bad) cmc sbb pop andl fiadd pop inc mov sbb out sub mov jmp inc insl xchg mov cld and mov negl push mov std and lea imul mov je mov pushf ret call and dec pop jno xchg stos mov sbb inc push addr16 mov call and dec pusha jae cltd lods mov cmp test cmc or cs push data16 sahf mov xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp insl adcb add data16 sahf mov fsubr (bad) adc ss pop outsl (bad) xchg mov in or xor jge mov add cmp jae cltd lods mov pop xor imul mov fsubr add cmp jb cwtl stos mov sbb nop movsb mov fnop add je lcall and inc pop insb jle movsb mov fdivp add sub bound fwait scas rcl stc or xor imul mov fsubr add mov or insb jg movsb mov fnop add jae cltd lods mov sbb jnp mov add sub dec pusha jae cltd add jns cmpsb mov sbb push fs popf scas ret sti or imul mov fnop add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp jbe pushf scas ret sti push and pop insl adcb push xor jl mov add cmp test (bad) or jl mov add cmp lcall and pop insl xchg mov fcomip add sub fwait scas rcl cli or insl adcb add sub fwait add adc test (bad) or push jbe mov add jae cltd lods mov pop xor imul mov fsubr add jae lcall push xor jge movsb mov fcomip sbb frstor mov jge (bad) jmp jne pushf scas (bad) hlt adc pop jns mov add pop sub in sub outsl (bad) xchg test (bad) clc sbb pop jg stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov and scas ret (bad) adc xchg std adc dec pop jae lcall daa cmp jne popf mov fsubr call cmp add lahf mov (bad) add mov add push int cmc or inc push imul mov sbb adcb push xor insl adcl lcall and xchg test into loope pop sbb pop jl mov xor jle movsb mov jmp sub cli push ds jle rcr and sbbb pop jl mov push jne mov repz xchg mov push scas (bad) hlt sbb pusha andl jge or push js mov insb nop mov stc sbb lret in rdpmc push jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli sub fwait mov hlt sub xchg mov insb xchg mov std and ret sub jne mov push scas (bad) repz cmp mov dec jp shl xor ljmp loopne and fdivr es je ret sub cmp xchg stc or xor push nop mov add sub push fs pushf scas ret sti push and inc pop insb jg movsb mov fnop add sub bound loop or cs push addr16 mov add cmp jae cltd lods mov push xor jge mov add jae cltd lods mov sbb ret std adc ss pop outsl (bad) xchg cmpsl mov sbb push data16 lahf mov fsubr (bad) adc dec pop jo xchg test or cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl addr16 mov or xor jge mov add jae cltd lods mov sbb jnp mov call and xchg stc or xor jge mov or inc push push (bad) (bad) call and test (bad) or xor imul mov fnop add sub dec popa je fwait scas rcl cli or insb push add jle movsb mov fnop add sub popa je popf mov (bad) ljmp jo xchg test pop sbb mov std adc ss mov jo mov hlt sbb jne fwait scas rcl cli or insb jg movsl mov pop sub fwait scas rcl cli sbb mov (bad) adc cmp test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jecxz or inc push addr16 mov call and adcl or sub mov pop sbb lea (bad) adc dec pop jo xchg test or cs push data16 lahf mov xlat ljmp outsl test (bad) or inc push addr16 cmpsl mov sbb push gs sahf mov xlat ljmp outsb adcl aas push gs sahf mov xlat ljmp outsl (bad) xchg cmpsl mov sbb pop imul mov fsubr add cmp jb cwtl stos mov pop xor imul mov fsubr add jae cltd lods mov sbb jl mov add sub lea mov add sub fwait scas rcl stc or xor jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl out add cmp test cmc pop sbb lea xor jge mov add jne lcall pop xor jge mov add cmp je call mov mov cld pop inc data16 andb ja mov jno mov xchg push ja mov push adc mov pop sub mov cmc sbb pop jnp mov xchg adc pop andl out xor lahf ret das push jno mov test dec insl nop mov push pop inc arpl xor jmp pushf mov arpl cmp test sahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc jecxz sub lea mov sysenter push ja mov dec jno mov test dec imul imul outsl xchg mov or push ja leave out adc push outsb mov std and insb nop mov or in xor mov pop test mov and (bad) mov fdivr sbb pop jg lret out adc pop jg ret in sub xchg mov cld and adc pop jnp mov (bad) clc sbb pop jg (bad) sub outsl nop mov cmc sbb xchg mov jb mov xchg pop andl pop cs jns shl daa dec insl (bad) out adc pop mov add repz cmp mov cmp cwtl mov popa test insl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmc pop cmp mov push adc push ja mov insb nop mov cli push ds andl mov dec jno mov cmc sbb andl ja mov imul iret icebp adc pop jp ret in sub outsb xchg mov sti push inc push mov negl ds andl sub xchg mov clc sbb pop jl mov jo mov outsb movsl lret ss (bad) cmpsl lret out adc pop (bad) test ja mov pop jbe mov in or inc xchg ds fs popf mov (bad) add sub push push or insb jg movsl mov pop sub pushf scas ret sti push and pop insl adcb add sub sahf mov xlat ljmp jnp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out add jae cltd lods mov push xor push xchg movsb mov fnop add sub push gs sahf mov xlat jmp adc ss pop outsl (bad) xchg test into loope pop and xchg cmpsl mov sbb mov add cmp test (bad) or inc push push (bad) (bad) add and test (bad) adc dec pop jo xchg stos mov push data16 lahf mov fprem sbb mov call and dec pop jno xchg stos mov sbb inc push addr16 stos mov push xor jge mov add adcb sbb push gs sahf mov xlat ljmp outsl test dec push leave fsubr add sub bound lcall pop xor test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and pop insl adcb add gs sahf mov xlat ljmp movsl (bad) loopne pop sbb inc push addr16 lahf add push sub pushf scas ret sti push sub scas shl std adc cmp cmpsl mov data16 cmpsb mov and (bad) movsb mov and dec arpl mov pop outsb sbbl push sub imul or ss popa jbe mov push push shl cld adc cmp addr16 cmpsb mov daa cmp addr16 cmpsl mov test imul fstps push mov sub push push xchg add pop xor mov or xor lea adc ds push xchg stos mov sub push push shl cld adc cmp jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pushf mov fdiv push sbb inc pop jo lcall cs pop insb (bad) xchg stos rcl add pushf ret and dec arpl mov sbb mov push sbb inc pop outsl test add sub fcomip or ss popa jbe mov or xor fdivr adc jg test adc cmp mov pop jb pushf mov fdiv push sbb inc pop jo fwait mov fcomi or xor lods rcl add sub push mov add jl cmpsl mov daa cmp addr16 cmpsb mov and mov inc insl pushf ret jmp push imul out add das inc pop outsb subl clc sbb bound dec ja int3 repz cltd (bad) in adc sar sub sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld daa push jle lret repnz lea test mov lea mov mov stos rolb sar and outsl xchg mov add out xor mov add push jnp xlat add push jnp int and xchg shr cmp mov add int3 hlt sbb mov imul repnz mov mov push js vmovsd adc popa mov js lret aas data16 mov jge int3 std and outsl xchg mov xchg jae rcll pop xor jo pushf lcall cmpsl int sbb arpl inc imul out xor movsl lret icebp sbb add sbbl insb (bad) mov (bad) and (bad) out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push jne mov push addr16 cmpsb mov and xchg cmpsb mov and nop movsl mov inc push push xchg test dec jb (bad) xor jge (bad) jmp mov and dec arpl mov sub push imul std adc cmp jnp movsb mov and dec arpl mov or mov ss pusha test and dec fs mov or jbe mov or xor pop jae sahf mov loopne or xor mov or aaa pop jne lahf mov fcomip or xor jae pushf mov fdiv push sbb inc pop outsl test add outsl test add cs pop outsb sbbl das inc pop outsb sbbl push sub push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call aas mov gs mov subb stos (bad) add bound push subl sub add dec mov loop xor ret xor subl jae sahf mov (bad) or inc pop jno lods rcl add sub imul add sub push insb adcl push push shl cld adc cmp jp movsb mov and push imul inc pop jae popf mov (bad) pop sbb xchg add das inc pop outsb sbbl pop sub push imul jmp or mov jne mov dec pop jae popf mov fdiv push sbb inc pop jo test sbb pop je sahf mov (bad) pop sbb inc pop jo lcall xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall test add sub xchg stos mov sub (bad) negl cmp popf mov (bad) pop sbb dec pop je popf mov (bad) pop sbb inc pop jno fwait mov (bad) add cs pop insl (bad) xchg lods ret add sub jbe mov or xor pop jbe mov or xor pop jae popf mov fdiv push sbb inc pop outsb sbbl push sub imul cld adc jg (bad) in adc pop subl pop insl (bad) xchg lods rcl add jle ret cmc sbb insl lcall nop mov stc sbb jmp cs jno outsb sbb pop sub push imul (bad) adc cmp cmpsl mov inc pop outsb sbbl sbb inc pop outsl test add sub push xchg test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std adc cmp jp movsb mov and dec pusha jne lahf leave sub fcomip or xor lahf mov fdivp or xor jae sahf mov fdivp or xchg sbb inc pop cwtl (bad) (bad) pop sbb dec pop jae popf mov (bad) pop sbb inc pop jo lcall sbb xchg add sub cwtl lods ret add ss bound mov or ss pusha jne lahf mov sbb arpl mov or lret dec jbe leave out pop ds aaa pop xchg jbe mov ja int and xchg mov jg lret xor js mov jns (bad) xor adc jo mov jne shl das pop subb cmpsl into negl jo ret in pop cmp push xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec jbe shr ds and xchg mov jge lret cmp xchg outsb xchg mov subl shl xor cld and jb mov test jnp int3 cmc push dec jno shr ds mov xchg jg into clc pop inc outsb xchg shr cmp or pop test insl xchg mov add mov insl cwtl ret jmp stos iret repnz pop (bad) cmpsl int3 std and xchg mov outsl xchg mov jo mov jle lret icebp pop aas data16 push jg leave in adc pop andl sub call mov add push ja enter pop jge (bad) xor out adc pop subl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp scas sar and xchg mov test bound push ja vunpckhpd pop test imul mov mov xchg jle iret mull dec outsl xchg shl cmp mov push cs subl and jae ret ds mov xchg mov xchg (bad) mulb push test pushf leave mull push cmp cltd int xor mov popf (bad) out sbb lahf sar sub scas fiaddl pop cwtl lret push test popf leave imull push xchg cmpsb xlat pop xor mov cmpsb aam (bad) loope rorb jle int3 negb inc jo ret aas push inc imul faddl and mov imul adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl cmpsl mov and (bad) movsb int scas aad sbb (bad) sti and nop mov out adc cmp jp movsb mov and dec arpl cmc or xor pop jae sahf mov fdivp or xchg sbb inc pop jno popf mov fdiv pop sbb inc pop jno fwait mov fcomi add js mov or jbe mov or xor mov or xor lahf mov fdivp or xor pop je sahf mov fdivrp adc cmp cmpsl mov sub push adc mov mov pop jg fildl and mov pop jg (bad) call mov std adc ds push aam (bad) adc cmp movsl mov and dec bound mov or xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl repnz sbb push ja mov or aaa dec popa jbe mov or xor jae popf mov fcomi add outsb sbbl push sub push xchg test shl cld daa inc push imul call sub push addr16 cmpsl mov and (bad) movsb mov and dec arpl mov or js mov cmp jnp movsl mov and dec arpl mov or ss pusha jne lahf mov fdivp or xchg pop sbb mov push xor jae popf mov (bad) pop sbb bound movsl mov and dec bound mov or xor lahf mov fdivp or test adc aas push imul std adc cmp addr16 cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg cmpsb mov and mov adc push data16 movsl mov and dec gs movsl mov and xchg cmpsb mov and dec fs mov or ss popa jbe mov sub push push scas aam adc cmp jnp cmpsb mov sub push push shl cld adc cmp jnp cmpsb mov cmp jge (bad) fdivp or mov push sbb inc pop jno fwait mov (bad) add outsb sbbl push sub push xchg test adc xchg lods rcl add sub push insb test repnz jne lahf mov fdivp or xchg push sbb inc pop jo lcall push je shl xor cltd scas (bad) fldz add das inc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cwtl lods ret add sub push xchg test adc cmp data16 cmpsb mov inc push push xchg stos rcl add jle test shl cld adc cmp jns movsb mov and dec popa jbe mov or xchg sub cmpsb mov and dec arpl xchg cmpsl mov and lea or xor sahf mov (bad) or xor popa mov or xchg add cs push insb adcl push push shl cli (bad) cmp jp movsb mov daa dec xchg mov adc popa mov js (bad) in pop inc outsb xchg mov (bad) stos sar and xchg mov mov test jnp enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out pop ds jae shl xor subl fwait ret jmp cmpsl int3 icebp push add mov jo mov jne ret cmp stos (bad) negb inc mov imul loope xor test jle into negb ljmp (bad) es je shr xor subb lods aam and cwtl mov (bad) stos iret cmc sbb (bad) mov pop das push test jo shr ds mov or add mov add dec jbe ret aaa data16 mov js (bad) in adc pusha xchg xchg mov add dec jb shl cmp stos iret cmc sbb add dec jae mov jp (bad) ljmp clc sbb fsin sub movsb lret repz addr16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldl cs subb mov push adc push jp vmovsd adc pop andl andl pop xor cmpsb into negb inc outsb cwtl shr aaa pop test outsb xchg mov xchg mov jl int3 cmc sbb call mov add dec je ret repz mov jp lret repnz xchg mov test ja aam and cwtl shl xor negb inc push sub lahf (bad) in adc data16 cltd mov jl lret lock pop test mov jo mov jl sar and xchg mov test jp (bad) xor mov jp cmpsl mov and (bad) movsb mov and dec gs movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp stc sbb nop pop lods int3 loop or ss pusha jne sahf mov fdivp or xchg sbb pop mov insb stc and addr16 mov sti pop inc mov push jp (bad) xor jle leave in adc pop jg (bad) das push jb mov xchg test sbb inc pop outsl test push sbb inc pop jb popf mov (bad) or xor pop je lahf mov loopne or ss popa ja cmpsl shr (bad) adc aas push insb (bad) xchg lods ret add sub cwtl lods ret add cs pop outsb test add das inc pop outsl test add xchg adc aas push push xchg stos rcl add adcb push add inc pop jo fwait mov fcomi push sbb inc pop jno pushf mov fdivp or dec fs movsl mov cmp jl cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sub test adc adcl pop jno fwait mov faddl and dec bound shl sti adc cmp jl cmpsl mov sub test adc ds imul add sub cwtl mov xor jb sahf mov fdivp or xor mov or js mov adc ds imul sbb mov or jns movsb mov and xchg test shr std adc ds imul add sub insb (bad) xchg lods ret add sub mov fdiv pop sbb inc pop xchg mov adc nop cmpsb rorb push sub call mov mov add cmp xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xor mov push and dec arpl mov or ja mov or test outsl test add das inc pop jno pushf in pop dec insl xchg mov adc mov mov add push ja vunpckhps (bad) insb xchg mov mov jp (bad) in adc lea mov push mov push sub js vmovddup pop xchg insl xchg mov push xor stos pop dec outsl xchg mov jle enter pop andb mov pop ss popa jbe mov or push sub movsb outsb add push aam lret adc push mov xchg shr cmp xchg push aas push inc push mov add dec cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp popa mov outsb xchg mov das inc pop outsl sbbl outsl xchg mov das sub mov (bad) test push pop xor aam and push jp lret inc jne loopne sub cwtl shl xor push sub std es jno mov xchg xchg mov jo ret xor cmpsl int3 lock pop subl mov jno mov lea jne (bad) ljmp (bad) test xchg mov xchg mov mov push ja (bad) out pop aas insb pushf (bad) out sbb push cmp mov add fildl das pop jle (bad) negl mov and je fadds sub mov jne enter imul out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall rolb iret clc and cwtl shr cmp mov add push jp lret cmc stos (bad) jmp dec jge leave lock int adc pop jle (bad) cld and xchg mov jge lret cmp cmpsb lret lock cmp lahf shl sub lcall nop mov negb aas arpl dec jno mov std and jno mov test pop andl push outsb out bound pop jle leave out adc pop jle (bad) das push jbe lret mov arpl cmp (bad) push jbe pop mov mov imul add int3 out adc jge add in push xor mov pop jle int adc pop andl sti sbb pop jge mov push gs lahf mov fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in call and test (bad) or adcb pop jns mov repz push ja mov jg arpl dec insb lea inc push jge movsb mov loope pop sbb mov (bad) adc dec pop jno xchg stos mov sbb inc push push enter adc cmp jae fild pop xchg fimull das push jbe movsl mov pop jp mov push jo add sbb inc push push (bad) or lea xor xchg cmpsb mov pop sub fwait scas rcl cli or imul int cmc or sub mov add cmp test (bad) or inc push push (bad) (bad) add cmp jae cltd lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor jl stos mov sbb jl mov add daa cmp jb cltd stos mov sbb jl mov add data16 mov add sub sbbl or xor insb adcb add data16 lahf mov fldlg2 call cmp je lcall push xor outsb adcl adcl or cs push addr16 mov add cmp jae cltd lods mov push xor jge mov add sub push fs popf mov daa cmp jae cltd lods mov and pop insb jg movsl mov pop sub pushf scas rcl sti push and pop insl adcb add sub bound ds fs popf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp dec pop outsb adcl push fs pushf scas ret sti push and pop insl adcb pop sbb movsb mov fnop add jae cltd lods mov sbb jl mov add cmp jne fwait scas rcl cli or insb jg movsl mov sub lea incb adc cmp jae cltd lods mov push xor insb jle movsb mov pop jle ret mov dec imul mov insl (bad) mov repz pop mov jns mov pop jg mov arpl std adc ss pop outsl (bad) xchg test into loope pop sbb fwait scas rcl std adc ss pop outsl andl lods mov and pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg test iret loop sbb dec pusha jae lcall and cwtl stos mov pop xor imul mov sbb ds gs sahf mov fsubr (bad) adc test (bad) aaa dec pop jb cwtl stos mov push xor imul mov sbb push gs lahf mov fldlg2 call cmp jae cltd lods rcl cld mov dec pop outsl (bad) test shl clc or xor insb jg cmpsb mov sbb lea add cmp je lcall and dec pop jo xchg stos mov sbb scas (bad) lock loop sub nop mov negl cmp (bad) jmp movsb (bad) jmp lahf shl and aam sbb andl jbe mov jo mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push adc in pop sub pushf scas ret sti push and pop insl jg movsl mov pop sub mov add sub bound scas ret sti or imul mov fnop add sub dec popa je cltd lods mov sbb jnp mov call and mov or pop jo xchg test into loope pop sbb push gs popf mov (bad) jmp dec pop insl adcb add sub push gs popf mov aad sti push and pop sbbb or xor imul mov fsubr add jae cltd lods mov and inc pop imul mov fsubr add jae cltd lods mov and dec pop outsl (bad) xchg test into loope push sbb mov call and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jno xchg stos mov sbb inc push addr16 mov (bad) adc dec pop outsl (bad) xchg stos mov push xor imul mov fnop add jae cltd lods mov sbb jl mov add cmp test (bad) or adcb add arpl pushf scas ret cld push and pop insl jg movsl and outsb mov dec push test out xor jle mov pop jle mov push ja mov insb mov push jno push xchg jg adc (bad) adc stos into icebp push jae mov negl (bad) jmp mull inc data16 inc push rdtsc push jbe mov negb cmp out adc push jns movb dec je mov jne mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov subb xchg ret ljmp lock pusha xchg push mov mov insl mov pop sbb inc pop jb pushf mov fcomi add outsb sbbl sbb inc pop outsl test adc dec popa jbe mov or xor jae popf mov fcomi add outsb (bad) xchg lods ret add cs pop insl (bad) xchg lods rcl add add (bad) xchg lods into out add sub xchg lods rcl add jge cmpsl mov and nop movsl mov and dec popa jbe mov or xor pop jae mov fcomip or xor jb pushf mov fcomi add outsl test dec popa jbe mov sub push push shl sti adc cmpsb mov es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jns movsb mov and dec fs movsb mov and dec popa jbe mov or xor mov pop pushf (bad) loopne or aaa dec arpl movsb mov sub push push xchg lods ret add sub cltd scas (bad) (bad) add jo fwait mov add push insl sbbl sbb pop subl xorl pushf shl sub je enter push jg sar sbb mov sub sbb int adc jl ret in adc pop andb adc mov jnp leave icebp sbb nop mov push xor cmpsb into repz fwait ret hlt sbb jmp mov subb lahf (bad) out sbb pop ljmp push xor (bad) mull dec jbe shr cmp mov or push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldl push jl sar and xchg mov xchg jge iret cmc pop push jle int sbb (bad) mov pop xor test jns leave repz nop mov or pop mov jp int3 hlt sbb data16 bound inc imul xchg lea ja ret cmp lods (bad) negb fs mov imul jmp add outsb mov mov imul (bad) jmp cwtl mov and (bad) stc sbb bound xor jnp ret out sub outsl nop shl and mov scas (bad) lock push je mov negl cmp fwait mov push push shl std adc cmp sub lcall adc pop andl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call insl pushf (bad) inc push xor scas xlat add push jg enter push imul cmovl mov loope or ss popa jbe mov pop jne mov or xor pop mov adc xchg cmpsb f2xm1 add mov or ja mov or xor mov fdivp or mov cmp test push sbb inc pop jno pushf mov fcomi add jo pushf mov fcomi push sbb inc pop outsl test add inc pop je lahf mov fcomip or xor lea arpl push mov in add sub push insb adcl add sbbl daa cmp cmpsl mov push sub xchg mov sbb insb xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle lret aaa pop test arpl inc mov push inc insb xchg (bad) ljmp (bad) negl inc insl xchg mov add dec jae shl xor test stc pop inc jo into lock pop jg (bad) jmp xor cltd mov pop andb jo mov cmc sbb mov push jnp ret sub cltd mov bound sub xchg mov add mov shl es imul pop andl loopne sub test out adc in das push je mov jo mov mov subl jge (bad) call mov push jns mov jno mov lahf ret in cs jb mov outsl xchg mov insl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sar push inc popa andl enter push ja pop sub sahf mov xlat jmp adc mov add and xchg clc or xor imul in add cmp jno xchg test or cs push addr16 lahf mov fsubr call and mov sub mov std adc xor xchg cmpsl mov sbb ds fs pushf scas ret std adc ss add xchg std adc dec pop outsl (bad) xchg test into loopne push sbb push fs pushf scas ret (bad) jmp inc pop insb jg cmpsl mov sbb ds fs pushf scas ret aad sti push and pop insl adcb daa cmp jae cltd lods mov push xor jg movsb mov pop sub bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sti push and inc pop insb jg cmpsb mov sbb cmp mov add cmp bound fwait add adc ss pop jo xchg test or inc push push enter adc cmp xchg cli or xchg pop jp ret and stos int adc inc push imul add cmp test clc adc je lcall pop xor imul mov fsubr add je lcall sbb jl mov add je lcall mov dec jno mov std and push gs sahf mov xlat ljmp outsl test (bad) or inc push add cwtl stos mov sbb jnp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl and adcl or cs push imul in call cmp jno xchg stos mov sbb inc pop jge mov xchg dec outsl nop mov clc sbb bound sub cltd mov data16 dec jae sahf mov in sbb inc push imul add cmp xchg clc or xor imul or dec outsb mov call and xchg (bad) or jge movsl mov push sub sahf mov fsubr (bad) adc ss pop outsl sbbl xor xchg cmpsb mov pop sub fs popf mov (bad) jmp dec pop insl adcb pop sbb push gs sahf mov xlat repnz pop jge ret in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push ja mov outsl xchg mov std and mov negb cmp andb xchg jp shl cs addr16 mov add and xchg stc or xor imul mov jecxz or jl mov call and test (bad) or insb jle movsb mov fnop add jae cltd lods mov sbb jnp movsb mov fnop add jae cltd scas rcl cli or xor imul mov fsubr add jae cwtl stos mov sbb jnp mov add cmp mov cld mov dec pop outsb adcb add sub ret (bad) jmp dec pop outsl (bad) xchg test into loope or sub (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out add xchg cmpsl mov sbb push fs popf mov aad sti mov dec pop outsb adcl inc push addr16 mov (bad) adc ss pop outsl (bad) xchg test int (bad) or xor imul add cmp jae scas (bad) icebp pop aaa pop andb rdmsr push jbe mov test dec jbe push jae mov push stos mov sbb jg movsl mov push sub bound fwait scas rcl cli or jne fwait scas rcl stc or xor push xchg add push sbb inc push addr16 lahf mov fsubr std adc ss pop outsl lea sbb inc push addr16 lahf mov fyl2x or pushl push ja mov data16 push js mov outsb xchg mov outsl (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call negb cmp in sub mov cld push inc xchg jg shl sub mov pop jle ret das push je mov imul bound popf mov xlat ljmp jae cwtl stos mov sbb jl mov add cmp jae lcall and inc pop outsb adcl pop insl adcb add fs popf mov (bad) jmp dec pop outsb adcl push data16 sahf mov fldz add cmp test sti push and xchg cmpsl mov sbb inc push addr16 mov call cmp je pushf scas rcl cli or insb jg movsl mov pop sub bound lahf mov fsubr (bad) adc dec pop outsl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call hlt push sbb push push loopne and push sbb mov sub outsl xchg mov cli sbb jge (bad) in es arpl cmp stos into repz pop jle shl sub mov jne shl xor mov jp mov insb nop mov sti pop inc arpl sub jo mov icebp adc pop jnp lret cs jb mov stc sbb mov pop xchg push jbe mov negb ds xchg mov add dec jo mov stc sbb in or insb mov outsb (bad) scas iret out sbb pop jns mov arpl dec jno mov bound cmp mov arpl inc arpl sub xchg mov stc sbb (bad) sub fwait mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc imul clc sbb pusha test push jp (bad) out xor mov cmp mov pop andl mov mov sbb xor ja mov pop jge shl and xchg push je mov push lods into lock push jae mov negl cmp popf mov data16 dec outsl xchg dec jl leave out adc (bad) add dec push inc mov sbb subl mov push adc pop andl repnz shl and stos int3 in push das push jb mov cli sbb out adc push jb mov notb cmp popf mov xchg pop jp mov addr16 sbb add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cs jo mov cmc push add add push jb mov cmc adc ret and stos int3 in push cs jno mov cmc sbb pop jl mov dec outsb nop mov negl cmp andl call mov push jbe mov pop jge mov arpl mov dec insl lea push jb mov repz mov jmp inc bound and andl push test dec outsb mov push jbe mov notb aaa pop jns mov popa (bad) mov inc bound and test dec jo scas iret lock push jb mov repz push ja mov notl cmp lahf shl and mov jo scas into out push das dec outsl nop mov notb cmp lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall shl and out sub mov cmc push ss jns mov pop andb popa (bad) mov push jp lahf vmovupd pop andb sbb lods iret repz shl and test push jne lret xor xchg mov stc sbb out sub xchg mov sub or inc xlat or dec jb mov clc sbb pop jnp mov imul mov iret cmc sbb fisttp add adc imul ret ljmp fdivrp push cmp ljmp jecxz es push scas (bad) cmc push cmp mov dec push adc push je (bad) das push jae mov std and test nop mov stc sbb into out adc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jne mov je mov jbe shl xor mov push mov add dec jbe shl ss mov or push jl enter popa xchg jno (bad) jmp cmp mov cli pop inc outsb xchg mov cli sbb aad sbb pop jg int3 in or mov repz clc sbb pop jp mov outsb xchg mov loopne and xchg mov cmc adc (bad) out xor xchg mov sti sbb int rdpmc push jp ret sub xchg mov (bad) and test pop andl hlt sbb mov sub mov imul push jb mov repnz push je mov pusha sbbb pusha jg mov pop jle mov arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl int or dec imul lods int3 in comiss lea push jo scas (bad) repnz pop jle shl and test dec outsl xchg fwait lret ds xchg mov pop cmp test pop jl shl sub mov add push shl add adc dec pop jb lcall and dec pop jb fwait scas ret std adc dec pop jb cltd lods rcl cli or outsl (bad) xchg test iret loop or jle mov clc adc cmp jne sahf mov fldln2 add daa cmp je lcall and dec pop jo xchg test or jge mov add jnp leave in rclb cmp jle mov insb lea pop jle ret out mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call hlt pop sbb cld mov dec pop jo xchg stos rcl stc or xchg daa cmp jae cltd lods mov sbb jnp mov daa inc pop insl jg movsl mov sbb inc push addr16 mov fcomip push and push data16 dec jle ljmp (bad) sbb pop jns mov sbb mov fsincos sbb jae mov add bound ljmp jo xchg test pop jp int3 jmp sub imul xlat (bad) pop cmp add lret push jp mov xchg imul ficomp test jbe mov test js mov jle hlt sbb call shl pop xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lods (bad) (bad) add cmp xchg cmp je fwait scas rcl cli or imul mov push imul add sub push fs popf jbe mov pop jl outsl mov jl (bad) out xchg mov pushf lret lock xchg mov stc sbb pop jle jmp cs ja mov arpl cmp fild sub xchg mov hlt adc push jno scas shr push sub insl lea push jae mov clc dec mov jp (bad) out sub jb mov cld sbb sar sbb lret aas popa andl jne mov sti sbb repz cmp mov clc push inc pusha andb imul dec je mov js mov mov sbb clc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop subl rdtsc push jno mov lock dec outsl (bad) scas lret call (bad) mov inc test dec insb mov inc pop jnp mov push jno stos lret sub xchg inc mov cmp xchg mov hlt adc jae mov hlt adc rcr and pop jle mov jo mov icebp pop test aaa push je scas int3 jmp mov cmp mov cmp xchg mov jmp and mov dec test insb add xor test es pop js mov out add and inc pop imul in or sub mov push jb lods int3 jmp daa inc data16 and inc pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in push sbb cmp adcb cli or pop jg mov adc jnp sahf scas rcl cmc push pop sub dec pop insl jg mov (bad) or sub mov stc or das inc push arpl test lret fsubr (bad) sbb cmp pusha jno xchg movsl mov fldpi cld or imul xchg mov out movaps dec pop jo xchg mov in std push pop xor fs cltd stos mov push das inc push arpl cwtl stos mov adc xor push push rcl hlt push pop sub dec pop outsb jg mov cli or jae xchg cmpsl mov mov inc push gs mov (bad) or sub dec pusha jno xchg cmpsb mov fucomi add adc mov repz pop insl jle mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) or sub cmpsb mov (bad) std push and inc insl jle mov push cmp xchg scas lret jmp andl pusha jb xchg movsl mov fldlg2 decb and inc push gs cltd stos mov sbb je xchg test add and fwait lods mov adc ss pop insb jle mov clc or sub dec pop jno xchg movsb mov fsubr cli or cs push bound xchg cmpsb mov push daa cmp insl jle mov stc or sub adcl popa cwtl mov dec pop jo xchg test pop sbb inc push addr16 (bad) out cmp jbe fwait scas ret sti push and pop insb jg movsl mov fnop add sub dec popa je lcall pop xor lea jp shl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pushf mov (bad) jmp dec pop outsl (bad) xchg test into loope sbb pop js mov and iret out cmovo movsb (bad) out sub pop jbe mov fsubr add mov repnz sub mov inc xchg xchg pop jp mov jns shl sub xchg mov sub bound mov fdivp add sub pushf scas ret or dec outsb nop scas rcl std adc xor xchg add or jnp mov add es nop mov clc sbb pusha andl jecxz sub xlat stc sbb test mov bound cmp test repnz pop andl int aaa pop jp mov pusha (bad) movsb (bad) out sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop jge (bad) out cs jbe jo ret call xchg mov mov pop jl mov loop sub jne mov jb mov test or mov adc pop andb (bad) test arpl mov adc mov push jne mov jae shl sub xchg mov mov pop jnp mov arpl sub nop mov negl cmp (bad) out sub mov push mov stc push inc mov push jbe mov cmp bound fwait scas ret and ffree mov (bad) add jns xchg stos mov xor cltd mov addr16 mov add cwtl mov cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl addr16 mov (bad) adc cmp jbe pushf scas ret cli or insl adcb sbb inc pop imul mov fdiv add sub bound fwait scas rcl sti mov dec pop outsb adcl push gs lahf mov xlat ljmp outsb adcl pop outsb adcl push push mov fnop add fs popf mov (bad) call inc pop insl adcb add sub ret loope and jae lcall pop xor insb jg movsl mov pop sub push fs pushf scas ret cld mov dec pop outsb adcl aas pop jo xchg test pop sbb mov std adc xor xchg cmpsl mov sbb push addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp mov add cmp xchg clc or out sub mov ja mov xlat ljmp jb cwtl stos mov push xor jge mov mov dec pop outsb adcl inc push addr16 mov add cmp jae cltd lods mov push xor jge movsb mov faddl repz gs cmpsb mov sbb inc push addr16 mov add cmp jae cltd lods rcl stc or xor jge mov add cmp jae lcall pop xor jae pushf scas ret sti push and pop insl adcb push sbb push gs sahf mov xlat ljmp outsl (bad) xchg test or inc push imul mov pop xor insl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmp cwtl mov sti sbb arpl cs jno mov insl xchg mov xor outsl (bad) xchg test into loope pop sbb mov std adc ss pop outsl (bad) xchg test int repz sbb ds fs popf mov fsubr (bad) adc dec pop jo xchg mov fldlg2 add cmp jb xchg stos mov sbb jl mov add cmp test stc or inc arpl cmp mov (bad) add cmp xchg cli or insb jg movsl mov sbb in push das add mov cwtl ret rorb cmp sahf mov mov and insl mov pop andb jne mov notb cmp popf mov bound sub fdivr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc arpl and test clc or xor imul add cmp test (bad) or jnp mov add cmp xchg std adc ss pop outsl (bad) xchg test into loopne push sbb push gs sahf mov (bad) jmp dec pop outsb adcl push addr16 lahf mov fsubr (bad) adc dec pop outsl (bad) cltd mov cmc adc mov in or dec jae mov cli push inc mov repnz data16 sahf mov fsubr (bad) adc mov (bad) adc test (bad) or scas (bad) repz xor insb adcl push fs pushf scas ret sti adc dec outsb mov add cmp jae cltd stos mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl imul mov fsubr add sub popa je lcall pop xor push nop mov or sub mov call daa cmp jae cwtl lods mov sbb inc push push mov sbb cmp pushf scas ret sti push and pop insb jg stos lret jmp sub lea (bad) adc dec pop jo xchg test sub popa je lcall push xor imul mov fdiv add imul dec popa je lcall pop xor pop outsl (bad) xchg test pop sbb inc test push ja mov mov sbb lahf push jns mov ja imul fild and add pop jp shl cs jno mov fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push jnp (bad) out sub xchg mov cld push inc lock pop xchg inc mov or inc pop insl adcb add arpl popf mov xlat ljmp outsl adcl push push nop mov add sub fwait scas rcl sti push and pop insl adcb add sub bound lods rcl clc or xor jl mov or mov fcomip add fs popf mov (bad) jmp inc pop insl adcb add fs popf scas vpaddsb adc test in sub (bad) movsb mov pop sub mov push gs sahf mov xlat ljmp jae cltd stos mov sbb jl mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmp test (bad) or dec pop jo xchg test or inc push push (bad) (bad) add cmp test clc or xor jl mov add cmp xchg cld sbb loop and int adc push jae mov clc sbb add lods aam pop cmp popf mov aaa dec pop jo xchg test or das inc push push (bad) (bad) add cmp jae cltd lods mov pop xor imul mov sbb jge mov adc rcl cld mov dec pop outsb adcl push gs sahf mov fldlg2 add and mov std adc dec pop jo xchg test pop sbb lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in call and xchg stc or xor insb jg movsl mov fdivp add cs push addr16 mov call and test (bad) or inc pop imul mov fnop add sub pushf scas rcl cli or pop outsb adcl inc pop outsb adcl inc push push (bad) fucomi add cmp jae cltd lods mov push xor jle movsb mov fnop add sub dec popa je lahf add cmp jae cltd lods mov pop xor imul mov fnop add sub push fs popf mov (bad) jmp dec pop jb cwtl stos rcl sti or jae cltd lods mov sbb jnp mov add cmp test (bad) or jg cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl arpl popf mov (bad) jmp arpl sbb push gs sahf mov (bad) jmp dec pop outsb adcl or cs push addr16 mov (bad) adc dec pop jo xchg test into out or insb jg movsl mov fnop add sub push fs popf mov (bad) call inc pop insl jg movsl mov push sub bound fwait lods rcl stc or xor jge cmpsb mov sbb lea (bad) adc dec pop add cltd lods mov sbb jl mov add cmp jae cltd scas rcl cli or jo scas lret fcomip add arpl pushf scas ret cli or insb jg movsl mov push sub bound popf mov (bad) jmp inc pop insl adcb push sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl push jo lods mov push xor jge mov add sub lahf mov fsubr (bad) adc ss pop outsl (bad) xchg cmpsl mov sbb push fs popf mov (bad) out add cmp jae cltd stos mov sbb jg movsb mov fnop add sub popa je fwait scas ret cld mov dec imul pop jl pop push jno mov icebp adc push outsl xchg mov lock push ja mov xchg dec ja mov pop jl mov pop jp mov xor pop insl jg test int repz sbb push fs pushf scas ret sti or jae lcall push xor jge mov add cmp jne lcall pop xor jge mov add cmp test cli push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor insb jle movsb mov fnop add sub push arpl pushf scas ret cli or insb jg movsb mov fsubr add jae cltd lods mov sbb jl mov push sbb ds fs pushf scas ret sti push and pop insb jg movsl mov push sub dec popa je lcall push xor jg movsb mov fdiv add ja popf mov (bad) jmp dec pop outsb adcl ds fs popf scas ret sti push and dec pop outsb adcl push fs pushf scas ret cli or jo xchg test into loope pop sbb push gs sahf mov fsubr (bad) adc dec pop outsl (bad) xchg test int hlt push sub lret sub lea pop jl rcr push ds jle mov push ja mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call repz jae mov repnz push jns (bad) jmp (bad) scas iret out or mov notb cmp sahf shl and push sbb gs mov insb nop mov cli sbb pop js mov notl xor je mov cmc adc pop jnp shl and xchg mov arpl ss andb test pop andb imul stos int adc jecxz daa add xchg mov pop jg int push stos int3 lock sub outsl nop mov std pop sub leave in push xor jecxz adc cmp jns mov hlt or jge mov add cmp jae cltd lods mov sbb mov stc or xor pop outsb adcl push data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) adc ss pop outsl (bad) xchg test into loopne push sbb push gs sahf mov (bad) jmp add dec imul mov sbb jnp mov call and test adc xchg stc or xor push nop mov add jae cltd lods mov sbb jl mov add sub dec popa je mov (bad) jmp dec pop outsb adcl push fs popf mov (bad) jmp inc pop insl adcb pop sbb mov std adc ss jnp movsb mov fnop add sub bound fwait scas rcl cli or insb jle movsl mov loopne add fs popf mov aad add adc dec pop jo xchg test or dec pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg cmpsb mov pop sub popf mov (bad) jmp popa andb bound pop jae cltd lods mov sub dec popa je cltd lods mov pop xor outsb (bad) xchg cmpsl mov sbb push gs popf mov (bad) jmp inc pop insb jg movsl mov push sub dec popa je lcall and dec pop jo xchg test or cs push data16 mov adc mov add and inc push push rcl repz es dec pop jno add cmp scas iret out or movsb ret loope and pop jp mov fdecstp adc pop jl mov pop ja mov lock dec push add cmp xlat cmc push xor jb mov jmp jns mov stc pop xor lret jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) add aas pop jge mov and push push mov adc imul mov (bad) cld push pop xor arpl lcall adc xor push push mov adc ss pop push lea repz pop imul mov shl (bad) or sub dec pop jb xchg movsl mov fldl2e cld or bound add add and fwait lods mov adc lea hlt add pop insl jle mov testb sub dec popa jb xchg cmpsb mov fldpi cld or arpl stos mov adc xor push addr16 fwait lods mov adc mov in pop sbb cmp adcb sti push pop xor jg mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc push bound xchg cmpsl mov push pop xor fs cwtl test call and inc push data16 lcall push pop sub dec pop insl jle mov cld push pop xor fs xchg test call and inc push data16 cltd stos mov adc jnp popf scas mov push daa cmp insb jge lahf mov shl cmc push pop sub dec pop jo xchg movsl mov fldl2e sti or bound cwtl test decb and inc push gs cltd stos mov adc xor mov add aaa dec pop imul rcl testb sub push popa jb xchg cmpsb mov fldl2e sti or arpl cmpsl mov push pop xor fs cwtl test call and fwait lods mov adc mov (bad) or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub dec pop outsl adcb stc or sub dec pusha jno xchg cmpsb mov push pop xor arpl xchg test lret fsubr decb and inc push add pushf lods mov adc push lea stc or adcl or cs push bound xchg cmpsb mov push pop xor fs xchg test lret decb and inc push addr16 lcall adc mov testb sub dec pop outsb jg mov (bad) or sub mov sti or cs push bound xchg cmpsb mov (bad) cld or arpl cmpsl mov push pop xor push mov pop sub dec pop insl jle mov testb sub dec pop add xchg movsb mov fsubr sti or cs push bound xchg cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in std push pop xor fs cltd stos mov adc imul mov shl cmc push pop sub dec pop insb jle mov testb sub dec pop outsl adcb cli or adcl cld or arpl test int lock and inc push push mov adc cmp insb jge lahf mov shl cmc push pop sub dec pop outsb jg mov (bad) or sub mov stc or xchg lock and inc push push mov adc aaa dec pop imul rcl out or sub mov sti or cs push bound xchg cmpsl mov push pop xor addr16 fwait lods mov adc aaa dec pop push lea hlt push pop sub dec pop outsl adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jge mov inc test mov lock inc pop jnp mov jmp ja mov pusha jle mov push je mov in or inc andl push jno mov repz ss js mov push insl mov cmp xchg mov jmp sub (bad) scas into jmp and mov out or inc jno lods lret jmp sub sbbl push je mov jmp and scas (bad) sbb sbb sub (bad) xchg cmpsl mov adc xor lea (bad) or sub dec popa jae xchg test lret add jne pushf scas mov sbb cmp jo xchg movsl mov (bad) (bad) adc xor push imul in or sub test lock outsb andb adc jle mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or xor data16 popf scas rcl (bad) or sub dec popa je cltd stos mov sbb cmp jb xchg cmpsl mov adc scas rcl (bad) or sub xchg cmpsl mov adc dec pop insl jg mov std push and inc push push rcl (bad) or mov repnz xor addr16 popf scas rcl (bad) or sub xchg cmpsb mov (bad) std push and xor mov (bad) or sub pusha jno xchg cmpsb mov (bad) std push and inc push push mov sub dec pop outsl adcb cli or das inc push arpl test lret fucomp call and pushf lods rcl testb sub pop jo xchg movsl mov fldpi std push and inc push gs lcall sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp test in (bad) adc xor push imul jecxz push sbb cmp adcb stc or test in (bad) adc xor mov hlt push pop sub dec pop jo xchg movsl mov fucomi (bad) adc xor js fwait lods mov adc insl jle mov clc or jne cwtl test add imul ljmp add popf scas rcl hlt push sbb cmp adcl xor data16 fwait lods mov adc insl jg mov or test or sub dec popa jne cwtl stos mov sub jg lahf scas mov adc imul fsubr decb and inc push arpl cmpsb (bad) (bad) call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub dec pop insb jle mov repz pop imul scas ret repnz and lcall or das inc push bound cmpsl mov fsubr add or popfw scas mov adc xor mov jmp or cs pop outsb jle mov lock and inc push pusha jo nop mov lock and inc push popa jno nop mov lock and dec pop push mov out decl push cs pop outsb jg lahf scas mov adc xor pusha jo (bad) mov lock pop das aad pop xor imul mov and aas dec pop outsl jg lahf scas mov push push cs pop insl jge popf lods mov add and inc push pusha outsl jg lahf rcl repnz gs xchg movsl mov aad cmc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ja xchg cmpsb rcl icebp add and inc push gs xchg cmpsl mov or sub dec pop jo nop mov hlt push push daa aaa inc pop imul fsubr std push push cs pop jo nop mov (bad) or sub dec pop imul sub jle mov testl pop push mov or sub dec pop insb jge lahf scas mov adc cmp insl jle lahf scas mov adc xor je xchg movsl mov xlat call cmp imul (bad) cld or pusha jo xchg mov push daa cmp insl jle mov sti or push mov add sub pusha jb (bad) repz outsb (bad) scas int (bad) lods lret and pusha jge mov dec push movsl ret jmp daa inc fs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push xor outsl mov cmp xchg mov notb mov cmp lcall push add inc pop jnp mov repnz dec imul aas pop jnp mov hlt adc push jbe mov (bad) dec push sti sbb push jb scas int3 jmp sub dec insb mov inc arpl pop cmp aad adc push jb mov out adc push jno mov lock mov clc adc mov (bad) in and inc fs mov cmp xchg mov lock movsl ret loopne push cmp mov cmp fs stos (bad) cli or jne xchg test lret fsubr decb and inc push addr16 fwait lods mov adc mov add daa cmp test out call and inc push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns fwait lods rcl hlt push pop sub dec pop outsb jg mov clc or sub dec pusha jno xchg movsl mov fldl2e sti or fs cwtl test call sub xchg movsl mov (bad) cld or fs xchg test call and inc push addr16 fwait lods mov adc ss add xchg mov clc or sub dec pop jo xchg mov adc xor push push mov adc imul mov shl cmc or sub xchg movsb mov xlat jmp aas push popa jae xchg cmpsb mov (bad) cld push pop xor arpl mov inc addr16 popf scas rcl cmc pop sbb cmp adcb clc or sub dec pusha jno xchg movsb mov fsubr cli or cs push bound xchg cmpsl mov push and inc push jbe cltd stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out add and mov add cmp imul ret cmc push sbb cmp jg movsb mov xlat call ds pusha jno xchg movsl mov fsubr cli or xor push push mov adc xor fwait mov jmp and stos (bad) fdivrp adc inc pop jns lods movl test pop cmp test and lods (bad) jecxz sbb outsl mov sub (bad) (bad) pop xor mov dec xchg sti sbb insl mov cmp xchg and in pop and lret sbb insl mov aaa push jo stos (bad) in and add pop jnp mov inc arpl mov jmp insb xchg xor xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push insl mov aas pop jbe lods enter xor test dec mov cld sbb dec push add ss je mov in push push es inc push outsl mov dec pop outsb adcl and inc dec pop outsl jg lahf scas mov or pop imul icebp add and inc dec pop outsl jg sahf mov iret fucomip decb push sub jl fwait stos mov or sub dec pop push mov (bad) add stc or sub dec push addr16 xchg cmpsb mov xlat out pop pop es pusha jnp mov std sbb dec push push outsl mov sub xchg mov out sbb mov jmp sub add xchg mov jmp jno cmpsl rcr movntps sbbl or sub dec pop insb jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl hlt add and inc push addr16 xchg cmpsl mov xlat call aaa dec pop push mov xlat out pop pop daa aaa inc push push mov or sub dec pop imul (bad) sti or sub dec pop imul (bad) aam hlt add and inc push gs xchg movsl mov aad cmc add push gs xchg test enter or sub dec pop push mov and dec pop insl jle mov stc or sub xchg test lret fucomp call and jl lahf mov shl (bad) or sub pop jno xchg movsl mov fldl2e cld or fs cltd stos mov adc jle mov clc sbb movsl mov (bad) std push and inc push data16 lcall push daa cmp insl jle mov clc or jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call out add and mov or sub add jne cwtl test add and mov hlt add pop outsb jg mov clc or sub xchg movsb mov fsubr sti or das inc push arpl rcl hlt add pop outsl adcl cs push popa jae xchg cmpsl mov push pop xor gs cltd stos mov adc xor push addr16 popf scas rcl hlt add outsb adcb stc or test jmp push pop xor fs xchg test lret fsubr add and inc pop imul loop add daa cmp insb jge lahf mov shl testb inc push gs cltd stos mov adc lea hlt add pop insb jle mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) or sub dec pop outsl adcl sub adcl and pushf scas mov adc imul rcl hlt push pop sub dec pop insl jg mov (bad) or sub xchg movsb mov fldl2e sti or das inc push arpl mov sbb cmp adcb cli or aas push bound xchg cmpsl mov adc xor push imul loope add imul rcl cmc pop sbb cmp xchg movsl mov fldl2e sti or xor fs cwtl test add and inc push addr16 fwait lods mov adc ss pop push lea hlt add pop insl jle mov stc or aas push bound xchg test lret decb and inc push data16 lcall adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc pop push mov hlt pop sbb cmp adcb stc or adcl mov inc push gs cltd stos mov adc xor push addr16 pushf scas mov adc insb jge lahf mov shl testb sbb adcl call and inc push push xlat call inc push fs cwtl test add and inc push addr16 fwait lods mov adc jnp popf scas mov push daa cmp outsb jg mov (bad) or sub mov (bad) std push pop xor gs cwtl test call and fwait lods mov or sub mov stc or test in std mov pop insb jle mov testb sub dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) xchg movsl mov fldl2e sti or cs push popa jb xchg cmpsb mov fldl2e sti or das inc push bound xchg cmpsb mov (bad) cld or arpl test sbb cmp jo xchg movsb mov xlat jmp aas push bound xchg cmpsl mov push pop xor fs cwtl stos mov adc inc pop push mov cmc push pop sub dec pop outsb jg mov adc inc pop push lea cmc push pop sub dec pop insl jg mov cli or test jmp push pop xor fs cwtl stos mov adc xor mov out or das inc push imul push das inc push arpl test lret decb and inc push gs cltd stos mov adc xor push push mov pop sub js lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and push push mov adc jp popf scas mov adc insl jg mov (bad) or sub mov or jae xchg cmpsl mov push pop xor fs cwtl test add and inc push push mov adc push lea hlt add pop insb jle mov or inc push arpl xchg test lret decb and inc push gs cltd stos mov adc xor add popf scas rcl repz es dec pop imul ret aam testb sub dec pop outsb mov std push and inc push gs cwtl test add and inc push addr16 lcall adc imul rcl hlt add pop insb jge lahf mov shl cmc push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ds je xchg test lret decb and inc push fs cltd stos mov adc xor push addr16 lcall adc rcr adc dec push movsb ret and pop jle mov dec test cmc adc dec data16 popf mov dec add test jecxz sbb lods shr or out and rcr and dec pop imul rcl hlt push pop sub dec pop insl jg mov (bad) or sub dec pusha jno fwait lods mov adc imul mov (bad) out or sub dec pusha jb xchg cmpsb mov (bad) std push pop xor fs xchg test add and inc push imul in adc fistp (bad) icebp or xor xor fs cwtl stos mov sbb je xchg test lret decb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor imul loope add push mov repz cmp imul rcl hlt add pop insb jge lahf mov cmp pop outsl adcb stc or sub dec pusha jno xchg movsl mov fldl2e cld or arpl test lret fsubr (bad) adc xor jns pushf lods mov adc imul leave (bad) std push pop xor gs cltd stos mov adc xor push push mov push daa cmp insb jle mov (bad) or sub dec pop outsl adcb stc or sub xchg cmpsl mov mov inc push addr16 fwait lods mov adc jnp popf scas rcl hlt add pop insl jle mov testb sub movsl mov fldl2e cld or imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl lahf mov shl cmc pop sbb cmp outsb jg mov clc or sub dec pusha jno xchg movsl add adc xor push push mov adc ss pop push lea pop sbb cmp pop jo xchg movsb mov fsubr cli or das inc push bound cwtl test call and inc push addr16 fwait lods mov adc inc pop imul loope add es dec pop imul (bad) fldlg2 std mov inc push gs cltd stos mov adc xor push addr16 fwait lods mov adc ss pop push mov hlt add pop outsb jg mov clc or sub mov pop cmp xchg pop sbb cmp insl jg mov clc or test in std push and inc push fs cwtl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fucomp call sub dec pop outsb adcb stc or test in decb and inc push gs cltd stos mov adc mov add jl sahf scas rcl and pop jl mov icebp ucomiss gs cltd stos mov adc xor push push mov adc aaa dec pop push lea (bad) or sub dec pop xchg mov aam (bad) or sub pop jno mov xor (bad) sbb push je scas lret out and shr or das dec insb mov inc pop jge lahf mov dec andl sbb jl lahf mov shl cmc pop sbb (bad) mov clc or sub dec pusha jno xchg movsl mov fldl2e sti or das inc push bound xchg cmpsl mov push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc push fs cwtl stos mov adc jnp popf scas rcl push sbb cmp adcl das inc push bound cmpsl mov mov inc push push mov adc insb jle mov (bad) or sub movsb mov adc xor push push rcl cmc push sbb cmp adcb stc or test in std push and inc push gs cwtl test add and inc pop imul cmp adcb stc or adcl or fs lcall adc xor mov add cmp xchg movsl mov add in call and inc push data16 lcall push daa cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jge lahf mov shl cmc push pop sub dec pop insl jle mov clc or sub pop jo xchg mov (bad) adc xor jp pushf scas mov adc insb jge lahf mov shl cmc pop sbb cmp jg mov clc or sub dec pop jno xchg movsb mov (bad) std mov inc push data16 cltd stos rcl cmc push sbb cmp adcb stc or adcl cld or gs cltd stos mov adc xor addr16 fwait lods mov adc inc pop push xchg mov cli or je cltd stos mov adc mov hlt push pop sub dec pop outsb jg mov clc or add inc push arpl test lret fnop add and xchg mov clc or sub dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adcl std push pop xor fs cwtl test add and dec pop insl jle mov (bad) or sub xchg movsb mov fsubr sti adc xor push push mov adc imul mov aad (bad) or sub pop jo xchg movsb mov fsubr cli or cs push bound xchg cmpsl mov mov inc push gs cltd stos mov sbb xchg movsl mov fldl2e cld or fs xchg test call and inc push data16 lcall adc xor lea cmc push sbb cmp adcb decb and inc push data16 cltd stos mov adc mov cmc push sbb cmp outsb jg mov stc or adcl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov repz daa cmp insl jg mov clc or sub dec pop jno xchg movsb mov fsubr cli or jb xchg cmpsb mov (bad) std push pop xor fs cwtl stos mov sub dec pop outsl adcl das inc push arpl test lret decb and inc push gs cltd stos mov adc ss pop add (bad) mov (bad) or sub movsb mov fucomp add and push imul loope jge mov testb sub dec pop jo xchg movsb mov xlat call ds pusha jno xchg movsl mov fsubr cli or aas push popa jb mov clc or sub dec pop jo xchg cmpsb mov push pop xor fs xchg test add and inc push addr16 fwait lods mov adc jnp popf scas rcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push push sbb cmp je xchg cmpsl mov add and mov push addr16 fwait lods mov adc jns fdiv add sub dec pop outsl adcb adc pop jns dec jl mov repz dec push movsb push aas loop xor cwtl mov pop xorb inc popa sbbb pop js mov cmc adc push jae mov notb (bad) repz stc sbb shl and andl loopne and scas into data16 jae fisttpll push jae mov stc sbb lret sub imul add js sahf mov xlat jmp adc dec pop outsl (bad) xchg test into add clc or xor imul mov pop xor push xchg cmpsb mov push xor outsl xchg sti adc cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call adcb adc ds imul mov and dec gs mov adc push js mov insb mov pop outsl adcl adc dec jb mov sti sbb out ja inc insb mov dec insl lea push jne mov clc sbb (bad) in adc push jne mov cli sbb pop jle mov popa andl rcl cli push and pop andb sub mov (bad) add cmp test (bad) or xor imul notl cmp fs push cmp f2xm1 rdtsc push js rcl push cmp mov aaa pop sbbb sub bound cmp lods int or scas iret out ucomiss (bad) scas iret lock xchg mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc sbb mov arpl inc mov xchg mov jb mov jne mov jns (bad) ljmp add dec jb mov jns ret out xor lock cmp xchg push add dec jne ret xor icebp pop cmp negl fdivr and stos sar and xchg mov insl xchg mov sti cmp enter push ja mov push and xchg mov std pop inc push xor out push cmp cmpsl (bad) hlt sbb pusha subl mov (bad) mov sti push inc xchg bound cmp add push js ret sub jle (bad) jmp xor lock inc imul insb (bad) mov (bad) and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fcomip or ss arpl mov inc add mov push and dec arpl mov (bad) cmp jp movsb mov and dec arpl cmpsb mov and dec gs stos into repnz cmp jl cmpsb mov and (bad) movsb mov and dec bound mov push and dec bound movsb mov and dec imul (bad) adc ds imul cld adc cmp data16 cmpsb mov daa ds push shl cld adc cmp addr16 test shl sti adc push jnp ret fsubr add cs pop insl (bad) xchg lods ret add sub push xchg stos rcl add sub insb adcl add dec outsb xchg mov cld and mov popa test pop jl ret out xor stos (bad) repz cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp js mov jae mov imul jo mov push mov stc pop inc mov andl out pop andl jp shl sub (bad) mov notb cmp (bad) out adc ljmp jmp dec jb mov andl add push jns in adc bound dec jo mov subl xchg mov insb xchg mov (bad) stos sar and cwtl mov subl xchg mov xchg mov subl cwtl shl aaa pop xchg jae ret dec jno shr aaa pop xchg jp (bad) negb xchg add dec stos lock cmpsl roll gs shr inc out arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov fs jmp add push (bad) fwait mov loop adc js cmpsl mov xor stos ret fcomi or cmp test cli and jp lods (bad) fdiv or cmp sbbl jno mov push cs pop jne mov pop jne movsl mov inc pop jae movsb mov xor jnp stos ret fcomi or cmp insb test adc lea and push push pushf mov in push das dec popa jns test and push imul cs pop jbe cmpsb mov aaa dec addr16 mov mov sbb arpl (bad) fdiv or cmp sbbl jo lahf mov out adc xchg scas vpmaddwd (bad) fwait mov jecxz adc inc pop jo lahf mov das (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jbe cmpsl mov cmp adcb sub shr and push push lcall aas push outsl xchg adc inc pop jae mov sbb dec popa jns test fsubr or test sub jno mov sbb inc pop jbe movsl mov xor jns test (bad) or cmp (bad) lcall scas sti sub sar and call pop jbe movsl mov inc pop jae mov sbb xchg lods (bad) fcomi or cmp sbbl insl test adc inc pop jae mov push es push outsb xchg pop cs pop jne movsb mov xor jns test pop aaa dec data16 lods (bad) fdiv or cmp sbbl (bad) cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out push sbb xchg lods (bad) fcomi or cmp (bad) lcall aas push outsb xchg adc inc pop jnp stos ret (bad) or sbbl sub jo lahf mov in adc mov sbb dec pusha js cmpsl mov dec popa js test (bad) or cmp jg scas (bad) fdivp or sbbl sub jo mov push cs pop je movsb mov dec pusha jnp stos ret or cmp adcb and fwait mov loop adc inc push outsl xchg add das inc pop jbe movsl (bad) or cmp mov in adc mov xor jp test and dec data16 scas (bad) (bad) or fwait mov jecxz push sub mov sbb dec popa jns test add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall dec fs lods vpmaddwd loopne pop das push push lcall inc pop jno mov pop das inc pop jbe cmpsb mov xor arpl stos rcr or aaa dec gs lods ret fcomi adc inc pop jo mov sbb inc pop ja cmpsb mov xor fs stos ret or aaa dec addr16 lods (bad) or cmp sbbl or arpl pop xchg test mov pop xor flds sub jg aam sub movsl into mull dec jae (bad) lock xchg shr cmp ret or cmp sbbl outsb test adc inc pop jae mov sbb dec popa js cmpsl mov dec push fcomip (bad) inc pop jo mov pop das inc pop jbe movsl mov xor jp stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fyl2x or cmp jg scas (bad) out sbb dec bound test and dec addr16 scas vpmuludq cmp sbbl sub jno mov pop das inc pop ja scas enter sub outsl xchg adc inc pop jae mov sbb dec pusha js test xlat out pop pop ss data16 lods vpmuludq cmp mov xor jnp stos ret or cmp sbbl outsl xchg add xor jp test push jno mov sbb dec pusha js cmpsl mov xor arpl test pop ss gs lods (bad) fcomi or cmp adcb xor jns test and push addr16 scas (bad) fdivp or sbbl sub jo lahf mov out adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fcomip (bad) aas push jo lahf mov out push cs pop jne movsl mov xor jnp stos ret or cmp sbbb es test adc lea sbb xchg stos ret fcomi or cmp sbbl outsl xchg adc mov sbb dec pusha js cmpsl mov aaa dec addr16 scas (bad) fdivp push es mov in adc mov daa ds outsb xchg adc mov sbb dec popa jns test fsubr pop pop ss data16 lods (bad) fcomi or cmp sbbl jns test fdiv or cmp jle scas vpmaddwd sbbl sub jno mov pop cs pusha jg scas (bad) fcomip push es insl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec in adc inc pop jb mov sbb inc pop ja cmpsb mov xor fs stos ret or inc pop jno mov in ss xchg jnp leave icebp sbb imul stos rclb arpl js int sbb sbb cltd ret aas push outsl cwtl ret push cmpsb pop push jge stos sar es je vunpckhps mov xchg mov popf ret jmp cmp loopne ss mov or pusha mov xchg mov mov dec jae leave hlt pop dec ja fiaddl sub sbbl sub pop je movsb mov xor jp test aaa dec popa jbe mov or xor cmpsb mov sub cmpsl mov daa cmp addr16 cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) movsb mov and dec bound mov adc cmp addr16 cmpsb mov cmp jnp movsl mov and dec arpl mov or aaa dec popa jbe mov or ja mov adc cmp jnp movsl mov cmp jnp movsl mov and dec arpl mov or cmp js mov or ss pusha jne mov push and dec arpl movsb mov and nop movsl mov and dec gs movsl mov and dec arpl mov or add dec push shl cld adc cmp data16 cmpsb mov adc aas push imul add jg test adc ds push shr std adc (bad) ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jmp sbb xchg lods rcl add sub push imul call aas push imul fdiv or xchg add jb pushf mov fcomi add outsb sbbl pop sub push imul add jg lods ret fsubr add sub cltd scas ret fldz add sub xchg lods rcl add sub imul call ds imul std adc cmp imul add sub push insl (bad) xchg lods rcl add sub push imul call aas push imul std adc cmp cmpsl mov sub cwtl lods ret fsubr add sub xchg lods ret add sub imul add jg stos mov sub push insb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add outsl test add cs pop outsb sbbl pop sub push imul add sub push insb adcl push imul add outsl test add sub xchg lods ret add sub pop outsb sbbl sbb xchg lods rcl add sbbl sbb cwtl lods ret add sbb inc pop jb popf mov fdiv pop sbb inc pop jno pushf mov fdiv push sbb inc pop jno fwait mov fcomi add je sahf mov (bad) or xchg or xor jae sahf mov (bad) pop sbb inc pop jo fwait mov fnop add outsl test or xor jb pushf mov fdivp or xor jae sahf mov (bad) or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sbb inc pop jno fwait mov fcomi add outsl test or xor pop je lahf mov fdivp or xor jb popf add and lahf mov fdivp or xor jb pushf mov fdiv push sbb lea or aaa dec popa jbe mov or ss jno mov add xor je sahf mov fdivp or xchg or xor gs cmpsb mov and mov and dec bound mov or ss pusha jne mov or ss popa ja mov adc andb enter fdivrp adc jg test adc cmp stos mov sub cmpsl mov and dec fs mov or ss pop jge test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call call push push shr std adc cmp data16 xchg test adc cmp cmpsb mov and dec arpl mov or xor movsl mov cmp jp movsb mov and dec popa jbe mov or xor jb pushf mov fcomi add outsb sbbl xor dec popa jbe mov in push and dec arpl mov or xor sahf mov (bad) pop sbb inc pop jo lcall sub push outsb sbbl pop xor pop je sahf mov fdivp or test add cs pop insl (bad) xchg lods rcl add jg stos rcl add jle scas (bad) fldz add sub xchg lods rcl add jle test shl cld adc cmp jp movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sti adc mov and pop jne mov imul insl xchg nop mov jae int xor mov pop andl repnz bound inc insb nop mov adc pop jge (bad) jmp mov push jnp enter data16 jb sar and xchg push sbb inc pop jno fwait mov (bad) add cs pop insl (bad) xchg lods ret add sub outsb sbbl push sub popa ja mov or xor mov dec insb nop mov (bad) push cmp (bad) in jne xchg in cs jne rcr pop sbb inc pop jno lods (bad) negb aas bound lea and dec popa ja mov daa cmp gs movsl mov and push gs movsb mov and dec pusha jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall or xor jno fwait mov (bad) add cs pop insl (bad) lcall inc push outsb test add sub push imul call ds addr16 cmpsb mov and dec bound mov or xor xchg scas vpmaxsw cmp jnp movsl mov and dec bound jnp movsl mov and dec bound mov or xor pop jae popf mov fdiv or dec addr16 cmpsb mov and dec bound mov or xor pop jae popf mov fcomi add outsb sbbl push sub xchg stos rcl sbb inc pop jno fwait mov (bad) add cs pop insl (bad) xchg lods rcl add aas push push shl cld adc cmp jge ret fldlg2 call and test or pusha je lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor xchg mov cmc push ss jno mov dec imul mov stc sbb andb imul lods int3 in or push jae movsl mov push sub movsb mov fdivp add sub pushf scas ret sti push and pop insl adcl push fs popf mov (bad) fldlg2 call cmp jae cltd lods mov inc push data16 lahf mov xlat ljmp outsb adcl push gs popf mov (bad) jmp adc dec pop jo xchg test into loope pop sbb mov adc jae cltd lods mov push xor imul add sub bound lcall pop xor xchg mov loop or cs push push loopne push sbb push gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jmp adc dec pop jo xchg test clc or xor jle movsb mov fsubr add je cltd lods mov push xor jg cmpsl mov sbb mov call and adcl pop sbb mov cld mov dec pop outsl (bad) xchg test int cmc and xchg cmpsl mov sbb push fs popf mov (bad) jmp inc pop insl adcb add data16 sahf mov xlat jmp dec pop outsb adcl jno xchg stos mov sbb jnp mov add jae cltd lods mov sbb jl mov add cmp xchg mov push gs sahf mov xlat ljmp jno xchg stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or inc push push (bad) (bad) call and test cmc or cs push xchg movsb mov fcomip add arpl pushf scas ret cli or imul mov fsubr add cmp jb cwtl stos mov sbb inc push push (bad) (bad) add cmp je cltd lods mov push xor imul add cmp test (bad) or inc push push nop mov add jae cltd stos mov cmp gs popf mov (bad) jmp dec pop insl adcb add data16 sahf mov xlat jmp dec pop outsb adcl push fs mov fdivp add sub push gs popf mov (bad) jmp dec pop outsl (bad) xchg cmpsl mov sbb push gs sahf mov (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld mov dec pop insl adcb add ja popf mov fsubr (bad) adc ss pop outsl (bad) xchg test into loope pop sbb push gs popf mov (bad) jmp inc pop insl adcb add sub bound popf mov (bad) jmp push enter adc cmp jae cltd stos mov inc push enter adc cmp jae fwait scas rcl cli or insb jg movsb mov repnz xor imul mov fsubr add je lcall push xor jg movsb mov fnop add jae cltd lods mov sbb jnp mov sbb mov (bad) adc cmp jae cltd lods mov sbb jnp mov sub mov (bad) adc dec outsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall std adc cmp dec arpl fwait scas rcl cli or insb jg movsl mov pop sub bound fwait lods rcl stc or xor push nop mov add inc pop imul mov fsubr add cmp jb cwtl stos mov sbb jnp mov add cmp test stc or xor imul mov jmp jo xchg test and add (bad) or inc push push (bad) fucomi add cmp jae cwtl stos mov sbb inc push push out or insb jg movsl mov push sub bound lcall and inc pop imul xchg test int hlt pop sbb mov std adc aaa dec pop (bad) xchg stos mov sbb inc pop jle mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jl mov add cmp test (bad) or jnp mov std and in xor xchg mov notl cmp xchg mov notb ss jb mov lock mov arpl xchg mov repnz je mov clc pop inc fs mov adc jae cltd lods leave fnop add sub bound fwait lods rcl stc or xor push nop mov add cmp je lcall push xor jl mov add cmp jbe popf scas ret (bad) jmp inc pop insl jg movsl mov sbb ds fs popf mov (bad) jmp inc pop insl jg movsl mov push sub bound lcall pop xor xchg test pop sbb mov cld mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl outsb adcl push arpl pushf scas rcl cli or insl adcb or cs push addr16 mov call and dec pop jo xchg test or cs push data16 lahf mov xlat ljmp jno xchg test pop sbb mov and dec pop jno xchg stos mov sbb inc push push (bad) fldz add daa cmp test (bad) or jnp mov add and mov push and pop insb jg cmpsb add sbb xor imul mov fsubr add je cltd lods mov sbb jnp mov call and mov push add adcl or cs push addr16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) adc dec pop jo xchg test pop sbb inc push addr16 mov add sub popa je lcall and inc pop imul mov fnop add sub dec popa je cltd lods mov and inc pop insb jle movsl mov push sub bound lcall and dec pop outsl (bad) xchg test int repz sbb push fs lahf mov fsubr std adc ss pop outsl (bad) xchg cmpsl mov sbb ds fs popf mov (bad) call inc pop insb jg test clc or xor imul mov fsubr add jae cltd lods mov sbb jl mov add cmp test clc or xor adcl push fs popf scas ret sti push and inc pop insb jg movsl mov push sub popa je lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or insb jg movsl mov sbb mov (bad) adc dec pop outsl (bad) xchg test int repz sbb push addr16 lahf mov fsubr std adc dec pop outsl (bad) xchg cmpsl mov sbb push fs popf mov (bad) add daa cmp jae cltd lods mov pop xor imul mov fnop add sub popa je lcall and inc pop insb jle movsb mov fnop add je popf mov fsubr (bad) adc dec pop outsl (bad) xchg test int repz sbb push gs popf scas ret sti push and pop insl addb test or sub mov add cmp jbe fwait scas rcl cli or imul mov fsubr add jae cltd lods mov sbb jle movsb mov fsubr add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov clc or movsl ret and mov out sbb pop jne mov adc imul mov stc or sub adcl add aaa dec pop imul rcl cmc push pop sub dec pop jo xchg movsb mov fsubr cli or jae xchg cmpsl mov mov inc push data16 cltd stos mov adc xor mov clc or sub dec pusha jb xchg movsl mov fldl2e sti or das inc push arpl test lret fsubr call and inc push addr16 fwait lods mov push daa cmp insl jle mov testb sub dec pop jae xchg cmpsl mov mov inc push gs cltd stos mov adc xor push push rcl hlt add pop insl jle mov (bad) or sub pop jo (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fsubr sti or xor data16 lcall push daa cmp insb jle mov (bad) or sub mov stc or test jmp push pop xor data16 lcall push daa cmp insb jge lahf mov roll call cmp xchg movsl mov fsubr sti or cs push bound xchg test lret fucomp call and inc push data16 lcall adc mov pop sbb cmp adcb stc or cs push bound xchg cmpsl mov push pop xor gs cwtl test add and fwait lods mov adc adcb stc or sub dec pusha jno xchg movsb mov fsubr sti or cs push bound xchg cmpsb mov (bad) cld or arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl test int3 fucomp add and fwait lods mov adc cmp adcb stc or sub adcl push pop xor data16 lcall adc mov add cmp imul mov shl clc or aas push bound cwtl test add and pushf scas mov push daa cmp insl jle mov push sbb cmp adcb sti push and inc push data16 fwait lods shl sbb push push lea cmc pop add sub dec pusha jno xchg cmpsb mov (bad) cld or arpl test int lock and inc pop imul in push pop sub dec pop outsb test in decb and inc push data16 lcall adc jl sahf scas sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jecxz push pop sub dec pop insl jle mov testb sub dec pop outsb adcb stc or sub mov lock and inc pop imul loop add pop insb jle mov testb sub dec pop outsb jg mov stc or test jmp adc xor push push mov adc imul rcl cmc push sbb cmp jo xchg movsb mov xlat jmp aas push bound xchg cmpsl mov mov inc push data16 cltd stos mov adc pop outsb adcb sti or das inc push arpl cmpsl mov push and inc push gs cltd stos mov adc xor push push mov push sub dec pop insb adcb cli or jae xchg cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fucomi decb and inc push gs cltd stos mov adc xor push push rcl repz pop insb jge mov testb sub push popa jae xchg cmpsb mov push pop xor fs cltd stos mov adc insb jle mov stc or dec push cmpsb (bad) and inc push addr16 lcall sbb cmp pop jno xchg movsb mov (bad) std mov inc push data16 test and inc push addr16 fwait lods mov adc jl sahf scas rcl cmc push pop sub dec pusha jno xchg movsl mov notb iret out or scas int3 in or dec test cli or jae xchg cmpsl mov adc xor addr16 add sub mov stc or sub dec pusha jb xchg movsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fldl2e sti or fs cltd stos mov adc inc popa jge mov in or push popf mov fsubr sti or bound cmpsl mov push and inc push addr16 fwait lods mov adc dec test ljmp arpl cmpsl mov push pop xor arpl test lret call and inc push data16 cltd stos mov adc xor add pushf lods mov sbb cmp pop jo xchg movsb mov xlat call ds bound xchg cmpsb mov (bad) cld or arpl cmpsl mov mov inc push fs cwtl test call and inc push data16 popf scas ret cmc push sbb cmp jno xchg movsb mov fsubr cli or aas push bound xchg cmpsl mov or arpl test lret decb and inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov out add and mov testb sub dec pop insl jg mov (bad) or sub dec pop outsl (bad) xchg movsb mov fsubr cli or adcl or das inc push bound xchg cmpsl mov or data16 lcall adc aaa dec pop imul rcl hlt add pop insb jge mov cmc push sbb cmp outsb jg mov (bad) or sub xchg movsb mov xlat jmp push pop xor fs cwtl test add and inc push addr16 lcall adc xor mov hlt add pop insb jge add clc or sub cmpsb mov push pop xor arpl cmpsl mov adc xor js lcall adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl imul loope add imul rcl hlt add pop jno in pop sbb cmp adcl sub dec pusha jno xchg movsl mov fldl2e sti or arpl test lret (bad) adc xor js lcall adc cmp outsb jg mov sbb (bad) xchg movsl add mov inc push fs lcall adc xor push addr16 fwait lods mov adc xor push push mov pop sub dec pop insl jle mov clc or sub dec pusha jb xchg movsl mov fldl2e sti or das inc push bound xchg cmpsl mov push pop xor arpl test lret decb and inc push addr16 fwait scas rcl cmc push pop sub dec pop insl jle mov (bad) or sub dec pop outsl adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp clc or sub dec pusha jno xchg movsb mov (bad) cld or arpl cwtl test call cmp outsl jg lahf scas mov or pop imul stos mov or sub dec pop imul xlat out push push es test out push push and je xchg mov repnz and inc push gs xchg movsb mov aam hlt add and inc push bound xchg mov lock pop das aas dec pop outsb jle popf lods mov or sub mov ljmp pop push mov (bad) out or sub dec pop push mov (bad) out push adc data16 xchg cmpsb mov aad cmc add and inc push arpl xchg mov icebp add and inc push pusha outsl jg lahf scas mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov decb push sub jge popf lods mov or sub dec pop imul xlat out push push es xchg in add and inc push arpl xchg mov jecxz add and inc push bound xchg movsl mov aam repz and inc push bound xchg mov repnz and inc push popa jno nop mov out decl push cs pop outsb jge popf lods mov or sub dec pop push mov ljmp pop insb jl fwait stos mov or sub dec pop imul xlat out push push es push gs xchg movsb mov aad hlt add and inc push arpl xchg mov icebp add and inc push pusha jo (bad) lahf scas mov adc xor dec pop outsl jg sahf scas mov push push cs pop insl jge pushf lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fsubr sti or sub dec pop push mov call aaa inc push data16 xchg movsl mov aam repz push fs xchg movsb mov (bad) out add push fs xchg movsb mov aam repz and inc push bound xchg mov lock and inc push pusha jo nop lahf scas mov push push sub jge pushf lods mov or sub dec pop push lea sti or sub mov ljmp pop push mov xlat out push push and je xchg mov repnz and inc push bound xchg mov lock and aas push bound xchg mov lock pop das aas dec pop outsb jle popf lods mov or sub dec pop imul stos mov or sub dec push addr16 xchg cmpsl mov (bad) out add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jle mov call push data16 xchg movsl mov aad testl push data16 xchg movsl mov aam repz and inc push popa jo nop lahf scas mov sbb cmp pop insb jnp fwait stos mov or cmp pop imul stos mov or sub dec pop push mov (bad) out add push fs xchg mov repnz and inc push bound mov repnz and inc push pusha jo (bad) lahf scas mov push sbb insb jl fwait stos mov or sub dec pop push mov jmp cmp addr16 xchg add clc pop pop daa ss pop insb jnp fwait stos mov or sub dec pop imul fldl2t stc or sub dec pop addr16 xchg cmpsl mov (bad) out push adc fs xchg movsb mov shl repz and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc push popa jno xchg mov icebp add insl jge pushf lods mov or sub dec pop imul stos mov or sub dec pop push mov or sub inc push addr16 xchg cmpsb mov aad hlt add and inc push arpl xchg mov std or pop insl jge popf lods mov or pop insl jl pushf lods mov or sub dec pop imul fsub testl push data16 xchg movsl mov aad testb and je cwtl test enter add sbb cmp push mov call aaa inc push addr16 xchg cmpsb mov aad cmc add push gs xchg movsb mov aam repz and inc push bound xchg mov lock pop das aas dec insl jge popf lods mov or sub dec pop insl jge popf lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fsubr cld or sub pop imul stos mov or sub dec iret repz sub xchg scas leave jecxz and pop jbe stos (bad) adc scas enter das dec popa jnp mov out sbb push outsb mov dec imul mov cmp mov sub jnp scas enter xor mov inc pusha jp (bad) push cmp xchg mov out or movsb rcr movaps jns mov jmp jbe scas int push and pop mov push jo cmpsb rcr adc dec arpl outsl (bad) mov sub sbbl inc gs scas lret out push aaa push jo lods leave out pop cmp xchg mov lock and inc push popa jno xchg mov out decl pop das aas dec pop outsb jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall in add and inc push bound xchg mov lock pop xor pusha jo (bad) lahf scas mov add pop das aas dec pop outsl jg sahf scas mov or pop insb jnp fwait stos mov or sub dec pop push mov out decl push cs pop insl jge popf lods mov or sub dec pop imul stos mov or sub dec pop imul stos mov or sub dec pop push mov (bad) in add push arpl xchg movsl mov aad cmc add push fs xchg movsl mov aam repz and inc push bound xchg mov out decl push cs pop insl jl pushf stos mov or sub dec pop push mov or daa cmp push mov call aaa inc push data16 xchg movsl mov aam hlt add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and inc push bound xchg mov repnz and inc push popa jno nop mov out decl push cs pop insl jge pushf lods mov nopl aas dec pop outsb jle sahf scas mov add and inc push pusha jo (bad) lahf scas mov or pop insb jl fwait stos mov or sub dec pop push mov (bad) out pop pop es push data16 xchg movsl mov fsub clc pop pop daa aaa inc push data16 xchg movsl mov aam hlt add and inc push bound xchg mov lock and inc push pusha outsl jg lahf scas mov or pop imul stos mov or sub inc push data16 cwtl test (bad) xlat out pop sbb cmp addr16 xchg cmpsb mov aad cmc add push arpl xchg mov icebp add and inc push pop outsl jg sahf scas mov push sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add inc arpl or cltd mov in or aas pop jbe scas leave in sbb push jo cmpsb rcr adc dec sbbl inc dec pop outsl jg lahf scas mov add and inc push pusha outsl jg sahf scas mov or pop insl jge pushf lods mov or pop imul stos mov or sub inc push addr16 xchg cmpsb fucomi sti or sub inc push bound mov hlt add and aas dec pop push mov loopne std or sub inc push arpl (bad) popf lods mov add and ds pop push xchg fucomip std or sub inc push arpl xchg mov in sti or es jle fwait test repz pop sub jbe xchg mov in sti or es jle fwait test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add push sub jne xchg mov jmp xor push xchg loope decb push gs xchg mov jmp xor pop insb jnp cwtl cmpsb mov shl out decb push gs xchg mov jmp xor pop insb jnp cwtl cmpsl mov shl lock and ds pop push xchg fucomip cld or sub inc push bound nop sahf lods mov add dec pop imul movsl mov rcr out cld or daa ss push bound lea hlt add and cmp mov in add push sub jbe xchg mov jmp or and outsb jge lcall add pop das cmp xchg fsubrp sti or es jle fwait stos mov add pop sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pop addr16 lahf scas mov pop pop es push popa jo lea hlt add pop cs xchg fsubrp cld or sub inc push arpl (bad) popf lods mov sbb cmp fs xchg lahf scas mov pop push and inc push data16 xchg mov ljmp push pusha outsb jge lcall add push sub jbe xchg mov jmp or es jge lcall add push sub imul movsl mov shl lock cs xchg fsubrp sti or daa ss push bound mov out add and cmp xchg out std or sub inc push arpl (bad) popf lods mov add and cmp xchg lock push data16 xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jmp or es push pusha outsl jge fwait test repz pop sub jbe xchg mov ljmp push pop outsb jge lcall add push sub jbe xchg lods mov push adc xor pop insb jnp cwtl cmpsl mov shl lock pop data16 xchg mov ljmp push pop outsb jge lcall add push sub dec pop data16 xchg mov jmp xor push fs nop lahf scas mov add dec pop imul movsl mov rcr out cld or sub inc push bound lea repz and cmp xchg fsubrp sti or es jge fwait test repnz sub dec push gs xchg mov jmp xor add addb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fucomi clc pop push and inc push pop insl jl cltd test (bad) icebp decl sbb cmp gs xchg mov ljmp push pop insl jl cltd cmpsl mov (bad) lock sbb cmp data16 xchg mov cld or sub inc push bound mov call xor dec pop imul movsl mov rcr in cld or sub inc push bound mov in add and cmp xchg in add and cmp xchg fsubrp cld or daa ss push arpl mov out add and cmp xchg fucomip cld or sub inc push bound mov repz pop cs pop insb jnp cltd cmpsl mov shl lock sbb cmp data16 xchg mov jmp or and outsb jge lcall add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp gs xchg mov call xor pop add lea hlt add and dec pop addr16 xchg mov jmp or and insl jl cltd cmpsl mov shl lock push data16 xchg mov jmp xor pop insl jl cltd test (bad) lock sbb cmp gs xchg lahf scas mov adc xor dec pop imul movsl mov shl out std or sub inc push arpl (bad) sahf lods mov add dec pop imul movsl mov rcr out decb push fs nop sahf lods mov add and ds pop push xchg in add push sub dec pop addr16 xchg mov jmp or es push pusha outsl jge lcall add push sub dec jae xchg mov call xor pusha outsb sbbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl push data16 stos (bad) fdivp adc inc pop jno mov add sbbl (bad) pushf mov jmp sbbl jg mov cmp ret shl out decb push gs nop lahf lods mov add bound cmpsl rcr adc repnz popa outsl jle fwait stos mov add push sub jne xchg mov jmp xor pop insb jnp cwtl cmpsb mov shl icebp add sbb gs xchg lahf lods mov xor data16 xchg mov jmp xor pop insl jnp cwtl cmpsl mov shl out decl push fs nop sahf lods mov add and cmp test xchg movsl mov rcr out std or sub inc push bound xchg mov in cli or es push pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov jecxz add sbb gs xchg lahf lods mov add dec pop push xchg cltd cmpsl mov aam repnz sbb data16 xchg mov ljmp push bound lea repz pop sub jbe xchg mov in cli or es push pusha outsl jge lcall add sbb gs xchg lahf scas mov add dec pop insl jnp cltd cmpsl mov shl lock adc mov ss push call pop js test fptan or sahf mov in adc inc pop jns cmpsl shl pop xor jl lods (bad) fcomip adc inc pop jno mov sbb popf mov ljmp pushf mov out or push outsl mov xor sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor dec pop imul movsl mov rcr out cld or sub inc push arpl nop lahf scas mov add dec pop imul movsl mov roll loop add sbb cmp imul movsl mov shl out cld or sub inc push bound nop sahf lods mov add and ds pop push xchg fsubrp sti or daa xor jle fwait test icebp add sbb push mov int ljmp push bound lea hlt add pop sub jbe xchg mov ljmp push pusha outsb jge lcall add sbb data16 xchg lahf scas mov add dec pop imul movsl mov shl icebp add push sub jne xchg mov jmp xor pop insb jp cwtl cmpsb mov shl out std or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl arpl (bad) popf lods mov add and aas dec pop push xchg fucomip cld or daa ss push popa jo lea out add add inc dec pop insb jnp cwtl cmpsl mov shl lock push fs nop sahf lods mov add and ds pop push xchg fucomp cli or es add jg sahf lods mov add and ds pop insl jnp cwtl cmpsl mov shl lock push fs (bad) sahf lods mov add and ds pop push xchg fucomip cld or sub inc push bound mov repz pop sub jbe xchg mov ljmp push gs nop lahf lods mov add dec pop imul movsb mov rcr in cld or sub inc push bound lea repz and cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall ja xchg mov jmp or and outsb jl cltd test (bad) repz pop cs pop push mov int jmp or es jle fwait test out add and cmp xchg fsubrp sti or es jle fwait test repz pop cs pop push mov out sbb aaa inc push arpl (bad) popf lods mov add and ds pop imul iret fucomip cld or sub inc push arpl mov out add and ds pop imul iret fucomp sti or es adcl adc pop insb jnp cltd cmpsl mov shl out decb push fs (bad) sahf lods mov add and ds pop imul rcr out cld or sub inc push bound mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp hlt add and inc dec pop imul cmpsb mov shl out decb sub inc push arpl xchg lahf scas mov add dec pop imul lcall add sbb gs xchg lahf scas mov add dec pop insb jnp cwtl cmpsl mov shl repnz push sub jbe xchg mov ljmp push pop outsb jl cltd test (bad) lock push data16 xchg mov ljmp xchg mov sbb ss push popa jo lea pop adc pop insl jnp lcall add sbb data16 xchg lahf scas mov add dec pop imul movsl mov rcr in cld or sub inc push bound (bad) sahf lods mov add and ds pop imul loop decl sbb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) nop lahf scas mov add and ds pop imul movsl mov rcr in sti or daa xor jge lcall decl sbb cmp fs nop sahf lods mov add and inc push pop insl xchg mov out add push sub inc push popa outsl jl xchg movsb mov int3 (bad) cmc add sbb pusha insl jnp xchg mov out add push sub inc push popa outsl jl xchg movsb mov int out add sbb pusha insl jnp xchg mov out or nop cmpsl mov sub addr16 stos rcr add xor jo fwait mov (bad) or xor popa ja mov adc ds push xchg stos (bad) or cmp jp movsb mov and mov or xor pop jae sahf mov fdivp or mov pop sbb inc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl movsb mov daa cmp imul add cs pop outsl test push sbb inc pop jo pushf mov (bad) or jns mov pop sub sahf mov fdivp or xor pusha jbe mov push and push gs movsl mov and add sbb inc pop jo pushf mov in sbb push push in adc inc pop jbe cmpsb mov cmp popf mov call bound lods enter cmp mov cmp xchg sbb gs scas (bad) loopne adc xchg (bad) cmp mov loop adc inc pop jb cmpsl mov aaa dec gs lods (bad) (bad) push daa inc pop je add sub jb cmpsb (bad) fdivp adc dec test sbb dec outsl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lcall xor jnp stos ret or test sbb dec popa js cmpsb rcr or cmp sbbl xor mov jecxz adc inc pop jbe test aad pop push aaa push imul adc inc pop ja scas (bad) loopne adc xchg scas enter das dec popa js test xlat out or cmp jle scas leave jecxz push xor je mov or xchg stos ret fcomi or mov push ss gs scas leave jecxz adc xchg test fdiv or cmp mov sbb inc fs stos vpsubq xor xchg and push push loope adc inc pop jae cmpsb mov push jno movsb mov inc bound mov adc sub dec push arpl lea hlt add pop sub je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) aam lock sub inc push pusha outsb jnp xchg movsl mov into fsubr testl push gs mov in sti or push jo pushf mov out pop das inc pop jns cmpsl mov das inc pop jne cmpsb mov push sbb aaa inc push pop insl jp xchg mov out add sbb ss push pop insb jp xchg mov out add sbb cmp popa outsl jl xchg movsl mov int call ds pop push lods mov cld or and aas dec pop addr16 nop popf stos mov std or and test (bad) in decl daa xor jp popf mov loopne push daa ds jo (bad) popf scas vpaddd cs pop je (bad) movsl mov sub mov sbb dec pusha js cmpsl mov xor stos ret or ss fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp test fdivp or cmp test loope cld or and push lods mov std or and imul (bad) aam icebp decl daa xor dec pop push test aad lock or xor pop jae xchg mov out add push sub inc push popa outsb jl xchg cmpsb mov into fsubr testl push bound mov fucomp testl jg cltd cmpsl mov rcr ljmp dec pop data16 mov in cli or outsb jnp xchg movsb mov into fucomi testb sub jo mov fsubr testl dec pop gs mov fucomip stc pop adc pop data16 mov fucomip cli or pop data16 mov stc or es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop imul enter decb sbb xor dec pop add mov (bad) hlt add sbb bound mov fucomi testl push arpl mov fucomp clc add dec push arpl mov out cld or es dec pop push test xlat in decl push pop insb jns xchg mov in add sbb ss push pop insb jp xchg mov call sub inc push popa outsl jge cwtl movsl mov int call sub inc push popa jo sahf stos mov std or es push pop insb jnp xchg movsb mov int call sub inc push bound mov fsubr testl jle cltd cmpsl mov iret fucomp clc add dec push gs mov fucomip cli or insl jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl int3 (bad) hlt add sbb popa outsb jl xchg movsb mov int jmp sub jb lea fucomip cli or pop data16 nop popf stos mov cld or and push xchg in nopl inc push arpl mov fsubr testl jg lcall clc push adc das ds pop addr16 xchg lahf lods mov decb daa xor jns xchg mov in add sbb ss push pop insl jp xchg mov sti or and aas dec pop push lods mov decb sbb xor jp xchg mov add testb sub jo mov fsubrp stc pop adc das cmp orl or pop data16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in decl push pusha outsb jl xchg movsb mov int call sub inc push bound mov fsubr testl jg lcall stc or pop push lods mov decb daa xor mov (bad) hlt add sbb popa outsb jl xchg movsb mov iret fsubr testl jle cltd cmpsl mov iret fucomp clc add dec push fs mov fucomp clc push adc cs push data16 mov in sti pop es dec pop push test xlat in add sbb aaa inc push pop insl jp xchg movsb mov int call sub jb lea fucomip cli or pop addr16 popl lahf lods mov std or xor pop imul aad testb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub jo mov fucomp clc add dec push fs lea fucomip cli or pop data16 nop sahf stos mov std or and imul enter decb daa xor dec pop imul mov lret (bad) hlt add sbb bound mov fsubr testl push arpl mov fucomp clc add dec push fs mov fucomip cli or pop addr16 (bad) popf stos mov cld or and aas pop imul enter decb daa xor dec pop push test in add sbb ss push pop insl jp xchg mov out add sbb popa outsb jl xchg movsb mov int call sub dec push arpl add rcr in stc pop and aas dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jne nop popf stos mov cld or and push lods mov decl daa xor js xchg mov in add push pop imul mov in add push pop insb jns xchg movsb mov into jmp or and push test (bad) jecxz decb daa xor dec pop push test (bad) in decl daa xor jnp xchg mov out add sbb pusha outsb jnp xchg movsb mov int out add sbb popa outsb jl mov in cli or and aas dec pop push lods mov std or and imul enter std or xor pop imul leave (bad) in decl daa xor js xchg mov (bad) hlt add sbb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall loopne sti or and ds pop push lods mov std or xor pop push test (bad) jecxz decb daa xor js xchg mov in add sbb cmp pusha outsb jnp xchg movsb mov int call js ror jmp push adc das cmp pop gs mov out sti or and inc dec pop push xchg xlat in add push pop insb jp xchg mov out add sbb popa outsb jl xchg movsl mov int sti or and aas dec pop push lods mov adc xor orl and push fs lea loopne sti or and aas dec pop add test (bad) in decl daa xor jns xchg scas mov add push sub inc push bound mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall fucomp clc push adc cs push fs lea fsubrp stc push adc das cmp orb fucomip cli or pop push stos mov cld or and js xchg movsb mov int call sub inc push popa outsl jl mov fucomp stc pop adc pop data16 mov in cli pop adc pop gs mov fucomip cli pop adc pop gs mov loopne sti or sub jnp xchg mov out add sbb pusha outsb jnp xchg mov out add sbb cmp popa outsl jl xchg movsl mov int call and cmp push fs mov fucomp clc add dec push fs lea (bad) or and push stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc aam out cld or and push stos mov sbb xor jle lcall add push add ds pop push xchg fsubrp sti or es jge lcall push gs xchg lahf scas mov or and outsb jge lcall add push sub dec pop data16 xchg mov jmp xor pop insb jp xchg cmpsb mov shl lock push test loope decb push gs xchg mov call xor pop insb jnp cwtl cmpsl mov aam repnz push sub dec pop addr16 xchg mov jmp or aaa dec push test stc or and adcl pop es bound lods (bad) (bad) or sub dec push gs xchg mov jmp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call es push popa outsl jle stos (bad) fdivrp sbb pop andl std or sub inc push arpl (bad) sahf lods mov add dec pop insl jl cltd test (bad) aam repnz push sub jbe xchg movsb mov rcr out cld or sub inc push fs nop lahf lods rcl out std or sub inc push fs nop lahf lods mov add dec pop insl jl cltd test (bad) aam repnz push sub dec pop push mov iret fucomp sti or daa xor jg pushf stos mov add and cmp mov in push das aas dec pop outsb jle sahf scas mov or pop insb jl pushf lods mov or sub dec pop imul mov or sub dec pop insb jl fwait stos mov or sub dec pop outsb jle sahf scas mov push push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl insl jge lahf scas add shl repnz and inc push popa jno nop mov lock and aas dec pop outsl jg lahf scas mov push push cs mov out add dec gs mov call je stos shl repnz and inc push popa jno nop mov out decl pop das ds pop outsb jle lahf scas mov push sbb insb jl pushf stos mov nopl ds pop insl jge pushf lods mov or sub dec pop imul fucompp stc or sub dec pop addr16 xchg cmpsb mov (bad) in add push arpl xchg mov icebp add and inc push pop outsl jg mov repz and inc push popa jno nop mov out decl push cs mov sti or sub dec pop push mov xlat call aaa inc push data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl aam hlt add and inc push gs xchg movsb mov aam repz and inc push popa jno xchg mov out add and add arpl xchg mov icebp add and aas dec pop outsb jle sahf lods mov or sub dec pop push mov call cmp pop insb jl fwait stos mov xor popa jno nop mov out decl push cs pop insl jge pushf lods mov or sub dec pop imul stos mov or sub inc push data16 xchg cmpsb mov fsubr clc or daa aaa inc push data16 xchg movsl mov aam hlt add and inc push bound xchg mov icebp add and inc dec pop outsl jle sahf scas mov or sub dec pop push mov out pop push add cmp imul fsubr cld or sub dec pop push mov call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop daa ss push data16 xchg movsl mov aam repz and inc push bound xchg mov icebp add and inc dec pop outsl jg sahf scas mov or sub dec pop outsb jle popf lods mov or inc push arpl (bad) popf lods mov add and ds pop push xchg fsubrp sti or daa ss push popa jo lea in add push sub jbe xchg mov jmp or sub inc push bound mov repz pop cs xchg stos (bad) (bad) adc inc pop jns sahf mov out sbb dec arpl (bad) fdiv or xchg and jo movsl mov aas pop jb cmpsb mov cmp fwait mov call push fs nop lahf lods mov add dec pop imul scas (bad) fdivp adc das cmp xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jmp or es push popa jo lea jecxz add sbb data16 xchg mov fucomp cli or and outsb jl cltd test (bad) icebp decl sbb push xchg fucomip cld or daa xor jle fwait stos mov add sbb data16 xchg lahf scas mov push adc pop insb jp xchg cmpsb mov shl out std or sub inc push arpl mov in add and aas dec pop imul movsb mov shl out std or sub inc push arpl mov in add pop sub jbe xchg mov jmp xor pop imul cmpsl mov shl out std or sub inc push arpl mov testb xor dec pop push xchg fsubrp sti or daa xor jg pushf stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov add pop sub jbe xchg mov ljmp dec pop insb jnp xchg cmpsb mov shl out std add sbb cmp addr16 xchg mov in sti or daa ss push popa jo lea add and inc push arpl xchg mov icebp add and aas dec pusha jo (bad) lahf scas mov or pop imul stos mov or sub inc push data16 cltd test testl push data16 xchg cmpsb mov (bad) in add push arpl xchg mov icebp add and inc dec pop outsl jg sahf scas mov or sub dec pop imul stos mov or sub dec pop insb jl fwait stos mov or sub dec pop push mov (bad) in add push arpl xchg movsb mov shl repz and inc push popa jno xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fucomip decl push cs pop insl jge pushf lods mov or pop imul stos mov std or pop insb jnp fwait stos mov or daa aaa inc push data16 xchg movsl mov aam hlt add and inc push bound xchg mov icebp add and aas dec pop outsb jle popf lods rcl out decl push cs pop insl jge popf lods mov or sub dec pop imul xlat jmp cmp addr16 xchg cmpsb mov aad cmc add push arpl xchg mov icebp add and aas dec pop outsb adcb out add cmp gs nop lahf lods mov add dec pop push xchg fucomip cld or daa ss push popa jo lea in add pop cs pop push mov into fsubr stc or and jo mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add pop sub jbe xchg mov in cli or es jge lcall decl sbb cmp data16 xchg lahf scas mov add dec pop imul cmpsb mov shl out add xor outsb jge lcall add push sub jbe xchg mov ljmp push pop insl jnp cwtl test (bad) aam icebp add sbb pop push mov into fucomp cli or es push pusha outsb jge lcall add and aas dec pop push mov loopne std or sub inc push arpl (bad) popf lods mov add and cmp test jmp or and outsl jle fwait test repnz push sub dec push data16 xchg mov in sti or es jle lcall add push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pop push mov int ljmp push pop insl jnp cwtl cmpsl mov shl out decb sub inc push fs (bad) sahf lods mov add and aas push pop outsb jl cltd test (bad) lock sbb cmp gs nop lahf lods mov add and ds pop push xchg fsubrp std or sub inc push arpl mov out add and xor dec pop imul movsl mov rcr in sti or push fs nop lahf lods mov push adc xor pop imul movsl mov rcr in cld or sub inc push popa jo lea in add sbb data16 xchg mov ljmp dec pop insb jnp cwtl cmpsb mov aad repnz push sub jbe xchg mov ljmp dec pop insb jl lcall decl sbb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jae nop lahf lods mov add and ds pop push xchg fsubrp sti or es jg mov jmp xor pop imul cmpsb mov shl out cld or sub inc push bound mov repz pop das ds pop imul into fucomp stc or and inc push pop insl jl cwtl cmpsl add add push sub dec pop jne movsl mov push pop cmp xchg movsl mov rcr out cld or sub inc push arpl mov in add and cmp xchg fucomp sti or ds pop imul cmpsb mov shl out std or sub inc push fs nop sahf lods mov add and aas dec pop imul movsl mov shl out decb pop addr16 xchg mov in sti or daa ss push popa jo lea add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call es push popa outsl jle pushf stos mov add and ds pop imul cmpsl mov shl icebp add and push imul imul cmp xchg or es jg popf stos mov add and cmp xchg fucomp sti or daa ss push popa jo lea in add push sub ja xchg mov in sti or daa ss push ja xchg movsl mov rcr in cld or sub inc push bound lea repz pop das cmp xchg fsubrp sti or es jle fwait stos mov add push sub jne xchg mov jmp dec push gs xchg lahf scas mov push adc pop insl jl cltd test (bad) lock push gs xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp stc pop push and outsb jge lcall add sbb data16 xchg mov (bad) adc jp add decl sbb cmp addr16 xchg mov jmp or and outsb jge lcall add sub dec pop data16 xchg mov ljmp push popa outsl jle lahf mov sbb cmp dec pop imul rcr in cld or sub inc push bound mov out add and aas dec pop imul movsl mov shl out std or sub inc push fs nop sahf lods mov add dec pop jl pushf stos mov add and aas dec pop imul cmpsb mov shl out decb sub inc push fs nop lahf scas mov push adc xor pop insb jnp cwtl cmpsl mov shl repnz sbb data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg mov jmp dec pop insb jnp cwtl cmpsl mov shl icebp decl sbb cmp data16 xchg mov jmp or es push pusha outsb jge fwait test repnz push sub jbe xchg mov jmp or es push pusha outsl jge fwait test pop pop es push pusha outsl jge lcall add sbb data16 xchg mov jmp xor pop insb jp xchg cmpsb mov shl lock sbb cmp gs xchg lahf scas mov push adc xor push pusha outsl jge lcall adc xor pop insb jp xchg cmpsl mov shl icebp add sbb data16 xchg mov jmp or es push pusha outsl jge fwait test repnz push sub ja xchg movsb mov rcr in cld or daa ss push bound cmpsb mov shl lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decb push fs nop lahf lods mov add dec pop insb jl cltd cmpsl mov shl lock sbb cmp gs xchg lahf scas mov add dec pop imul movsl mov shl out std or sub insl jl cltd test (bad) icebp decl sbb cmp gs xchg mov jmp xor pop insl jl cltd cmpsl mov shl icebp decl sbb cmp addr16 xchg mov ljmp push pop outsb jl lea (bad) adc pop outsb jl cltd test (bad) icebp decl sbb addr16 xchg mov ljmp push pop insl jl lcall decl sbb data16 xchg mov jmp xor push pop outsb jge lcall sbb ss push arpl (bad) popf lods mov add and cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg fucomp sti or sub inc push arpl (bad) popf lods mov add and ds pop imul rcr in cld or daa ss push bound mov jmp or daa ss push popa jo lea hlt add and cmp xchg fsubrp cld or sub inc push bound mov out add dec pop imul cmpsb mov shl out std or sub imul iret fsubrp sti or es jle fwait test hlt add and cmp test jmp or es push pusha outsb jge lcall add sbb gs xchg mov ljmp fs nop lahf scas mov add dec pop imul cmpsb mov shl out std or sub inc push arpl nop lahf scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fld1 testb pop push xchg fsubrp sti or daa xor jle fwait test or sub inc push arpl xchg lahf scas mov add dec pop imul movsl mov rcr in cld or sub inc push bound lea repz push sub js xchg mov in sti or daa xor jg mov jecxz add push sub ja lea cmp mov ljmp cwtl mov loope adc inc pop jae movsl mov ds js stos (bad) (bad) adc ret fdiv or test and inc push pop insl jl cltd test (bad) lock sbb cmp gs xchg mov call dec pop insl jl cltd cmpsl mov shl icebp add push sub jbe xchg mov jmp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor jle fwait test repnz push sub ja xchg mov out cld or sub inc push bound mov cld or sub inc push arpl (bad) sahf lods mov add and ds pop push xchg loopne decb sub inc push fs nop sahf lods mov add and ds pop push xchg fsubrp sti or sbb cmp arpl lcall adc xor dec pop imul movsl mov rcr out cld or sub inc push bound lea repz pop sub jbe xchg mov in sti or es jle fwait stos mov cmc add and ds test lret fucompp testl dec pop insb jnp cwtl cmpsl mov aad repnz push sub dec pop addr16 xchg mov jmp or and outsb jge lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc aad repnz sbb data16 xchg mov jmp or jnp cwtl cmpsl mov shl lock push fs nop lahf lods mov add dec pop push xchg loopne std or sub inc push arpl mov in add pop sub jbe xchg mov add and aas dec pop imul cmpsl mov shl icebp decl sbb cmp gs xchg mov jmp xor pop insb jnp cwtl cmpsl mov shl lock push gs xchg mov ljmp push pop outsb jge movsb mov push adc xor pop insb jnp cwtl cmpsb mov shl out std or sub inc push gs xchg mov jmp xor pop insl jnp cwtl cmpsl mov shl lock push fs nop lahf lods mov add and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push mov add pop cs pop push mov into fucomp cli or es push pusha outsl jge fwait test repnz push cs pop push mov into fsubr stc or and outsb jl cltd test (bad) lock and dec pop insb jp cwtl cmpsl mov shl lock pop data16 xchg mov jmp xor pop insb jp xchg cmpsb mov shl out std or sub inc push bound mov cmc add and ds pop push xchg loop nopl dec push data16 xchg mov call xor dec pop imul movsl mov shl out std or sub inc push fs (bad) sahf lods mov add dec pop imul movsl mov shl out std or sub inc push arpl (bad) lahf ret fsub cmc add and ds pop push xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc rcr out cld or sub inc push bound (bad) popf lods mov add and cmp xchg fucomip cld or sub inc push bound mov in add and cmp lcall add sbb data16 xchg mov jmp or es push pusha outsl jge fwait test add push jno mov pop aaa dec imul arpl (bad) fdivp (bad) ds outsb test xor fwait mov das push imul ds pop push xchg fdivp adc xor pop outsb jl cltd test (bad) icebp decl sbb cmp gs xchg lahf scas mov add dec pop imul movsl mov rcr in cld or sub inc push arpl (bad) popf lods mov add and cmp test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add sbb addr16 xchg mov ljmp push pusha outsl jge fwait test repnz push sub dec pop data16 xchg mov jmp or and outsb jl cltd test (bad) repnz pop sub lea call xor dec pop imul movsl mov rcr out cld or sub inc push bound mov testb pop imul cmpsb mov shl out std or sub inc push fs (bad) sahf lods mov add and push push mov rcr in sti or daa ss push popa jo lea repz pop cs pop push mov into fsubr cli or and outsb jge lcall add pop sub jbe xchg mov jmp and inc dec pop insb jp cwtl cmpsb mov shl out decb sub inc push arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) lahf scas mov add dec pop insb jp xchg cmpsb mov shl out std or sub inc push bound mov repz and cmp mov and jno movsl ret shl lock dec pop push mov into fucomp cli or es jle fwait test hlt add and cmp xchg jmp or es push pusha outsl mov decb push fs nop sahf lods mov push adc xor pop insb jnp cwtl cmpsl mov shl lock push gs nop lahf lods mov add dec pop push xchg loope decb insl jl lcall decl sbb cmp gs xchg lahf scas mov add dec pop imul cmpsb mov shl out decb sub inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jb (bad) sahf lods mov add and xor pop insb jnp cwtl cmpsl mov shl out add cmp mov in add pop cs xchg fsubrp sti or daa xor jle fwait test repnz push sub dec pop data16 xchg mov jmp or es push pusha outsl jle fwait test or and outsb jge lcall add sbb data16 xchg mov jmp or es push pusha outsl jle fwait test repz push sub jbe xchg mov ljmp push pop outsl jle mov int jmp or and outsb jge lcall add push sub jbe xchg mov jmp or and jo lea repz pop cs pop push mov into (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in cli or add dec jno nop lahf scas mov push adc xor pop outsb jl cltd test (bad) icebp add sbb data16 xchg mov jmp xor pop insb jp cwtl cmpsb mov shl out decb push gs xchg mov jmp inc push fs add fsubr stc or and outsl jge lcall add push cs xchg fucomip cld or sub inc push arpl (bad) sahf lods mov add and aas dec pop imul cmpsb mov in pop adc pusha outsl jge lcall add push sub jbe xchg mov jmp or es jle fwait stos mov add and ds pop push xchg fsubrp sti or daa xor jle lods mov push adc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov loop add push sub dec pop addr16 xchg mov jmp or es jge fwait test repnz push sub jbe xchg mov in sti or daa ss pop ja fwait test repnz pop sub jbe xchg mov jmp or and outsb jge lcall add mov sti or sub dec pop push mov jmp dec pop outsb jg sahf scas mov nopl aas dec pop outsl jle sahf scas mov or pop imul stos mov or sub dec pop push mov (bad) out push adc data16 xchg movsl mov (bad) (bad) or sub dec pop push stos mov or sub dec pop push mov pop push es push addr16 xchg cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl add push fs xchg mov repnz and inc push pusha jo nop stos (bad) jecxz sbb push jb test xor mov dec imul sbbb fs sahf mov cmp push lcall or sub dec pop imul stos mov or sub dec push addr16 xchg cmpsb mov aad hlt add and inc push bound xchg mov out decl and pop outsl jle sahf lods mov or sub dec pop push mov jmp cmp addr16 xchg cmpsb mov aad cmc add and inc push fs xchg mov repnz and inc push pop outsl jg sahf scas mov and inc push popa jno nop mov out decl pop cs pop insl jg lahf scas mov or pop insb jl fwait stos add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fucomp cld or sub dec pop push mov call aaa inc push data16 xchg mov fsubr cld or sub dec pop push mov jmp aaa inc push addr16 xchg movsl mov aam hlt add and inc push bound xchg mov repnz and inc push pusha jo (bad) lahf scas mov or pop jbe cmpsb mov aad hlt add and inc push arpl xchg mov repnz and inc push popa jno nop mov out decb push cs lea cli or sub dec pop imul xlat out or sub je xchg movsb mov shl repz and inc push bound xchg mov lock pop das aas dec pop outsb jle sahf lods mov or sub mov in std or pop insb jl fwait stos mov and inc push bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loopne decl pop cs pop outsl jg lahf scas mov or pop imul test clc or daa aaa inc push data16 xchg movsb mov shl repz and inc push popa jo xchg mov or sub inc push addr16 xchg cmpsb mov aad cmc add and inc push fs xchg mov icebp add and inc push pusha jo (bad) lahf mov shl out add cmp insb jl fwait stos mov dec test xor test and (bad) loope add push jno lods enter aaa push outsl mov sub aad or inc bound fsubr cld or sub dec pop imul stos mov or sub dec pop push mov jmp cmp push mov xlat out sbb inc push pusha jo (bad) lahf scas mov push sbb outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg lahf scas mov push push sub jge pushf lods mov or sub dec pop push mov call aaa inc push addr16 cwtl test loope add and inc push pusha jo nop lahf scas mov nopl ds pop insl jge popf lods mov or sub dec pop push mov ljmp pop imul xlat out push push es nop scas ror out decl pop das aas dec pop outsb jle sahf lods mov push push sub jl pushf stos mov or sub arpl xchg mov repnz and inc push popa jo nop lahf scas mov push insb test sub jns scas leave in pop xor fwait mov call imul and pop je test cmp scas lret sbb test xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmpsb (bad) xor fwait mov ljmp (bad) add sti sbb push jae jecxz and pop js mov jmp jno cmpsl ret push push jne mov in sbb push insb mov adc inc pusha jl lods add adc das aas dec pop outsb jle popf lods mov or sub dec pop push mov call aaa inc outsb adcl icebp add and inc push bound xchg mov lock pop das aas dec pop outsb jle popf lods mov or sub dec pop push mov call cmp push mov (bad) out add push mov call aaa inc push data16 xchg movsl mov aad hlt add and inc push arpl xchg mov icebp add and inc push pop outsl jg sahf lods mov or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp imul loop adc xor push arpl xchg movsb mov shl repz and inc push popa jno nop mov out decl push cs pop insl jl pushf stos mov or sub dec pop push mov stc or sub dec pop push aad cmc add push arpl xchg mov lock pop das aas dec pop outsb jle popf lods mov push sbb pop outsl jg sahf scas mov or sub dec pop push mov call aaa inc pop jnp popf lods mov or pop insb jnp fwait stos mov or sub dec pop addr16 xchg cmpsb mov aad hlt add and inc push arpl xchg mov lock and inc push pusha outsl jg sahf scas mov or aas push pusha outsl jg lahf scas mov or sub dec pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmp addr16 xchg cmpsb mov (bad) in add push arpl xchg mov lock pop das aas dec pop outsb jle popf lods mov and inc push popa jno xchg mov lock and aas dec pop outsb jle sahf lods mov or sub dec pop push mov call aaa inc push data16 xchg cmpsl mov (bad) out push push and push shl icebp add and inc dec pop outsl jle popf lods mov or sub dec pop push mov ljmp pop addr16 xchg cmpsb mov aad cmc add and inc push arpl xchg mov icebp add and aas dec popa mov out decb push cs pop outsb jge popf lods mov or sub dec pop imul stos mov or sub dec pop push mov (bad) in pop push add dec pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xlat out push push sub jge pushf lods mov or sub dec pop push mov call cmp push mov (bad) out push adc fs xchg mov repnz and inc push popa jo nop mov add es xchg in add and inc push bound xchg mov icebp add and aas dec pop outsb jle popf lods mov push cmp push mov out or cmp mov jecxz add and inc push bound xchg mov lock pop cs insb jge mov testb sub dec pusha jno xchg movsb add mov inc push fs xchg test lret fsubr decb and inc push test cli or aas push popa jb xchg test call and inc push gs cltd stos mov adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ja cltd stos mov adc xor ja cltd stos mov adc inc sahf mov aam (bad) or sub xchg movsl mov fldl2e sti or bound xchg cmpsl mov push pop xor arpl test int3 fucomp add and inc push addr16 lcall xor gs cltd stos mov adc xor push push mov adc cmp insb jle mov (bad) or sub pop jo xchg movsb mov fsubr sti or cs push bound xchg cmpsl ret in or aas push bound xchg cmpsb mov mov inc push data16 lcall adc mov add sbb cmp insl jg mov (bad) or xchg lods mov adc imul rcl testb sub dec pop outsl adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jmp aas push popa jb xchg test lret (bad) adc xor js lcall adc popa jne xchg test lret fsubr call and inc push addr16 fwait lods mov pop sub dec pop outsb jg mov (bad) or sub mov stc or sub dec pusha jno xchg movsb mov fsubr cld and dec pop outsb adcb cli or aas push bound xchg cmpsb mov (bad) cld or arpl cmpsl mov push pop xor fs xchg test add and mov and fwait lods mov adc imul rcl cmc pop sbb cmp adcl cs push popa jb xchg cmpsb mov push pop xor gs scas ret (bad) or sub movsb mov fsubr cld or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fs cwtl test add and fwait lods mov push sbb cmp adcb stc or mov stc or sub dec pusha jb xchg cmpsl mov push pop xor fs cwtl test call and inc push data16 lcall adc insb jge mov (bad) or dec pop outsb jg mov stc or adcl push pop xor data16 lcall adc mov add imul shl or fs xchg test int3 fsubrp add and fwait lods mov adc inc pop imul loop add cmp imul rcl cmc push pop sub dec pop outsl sbbb adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add daa cmp insb jge lahf mov shl cmc push sbb cmp outsb jg mov cli or test jmp push pop xor jle mov cli or jae xchg cmpsb mov or gs cltd stos mov adc xor push addr16 fwait lods mov adc mov icebp add inc push add pushf scas mov push daa cmp insb jge lahf mov shl cmc push pop sub dec pop insl jle mov (bad) or sub pop jno xchg movsb mov fsubr std push and inc push gs cwtl stos mov sub dec pop insl jle mov (bad) or sub dec pop outsl adcb clc or sub xchg cmpsb mov fldl2e cld or arpl test lret fsubr decb and inc push gs popf ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) or sub mov sti add and inc push data16 cltd stos mov adc mov add imul rcl hlt add bound sbb mov pop jp mov sub test inc pop push lea (bad) or inc pop insb sbbb push insl mov dec data16 mov cmp push jp out and mov icebp push das dec push test inc popa sbbb push je mov cmc adc dec push cmc adc push outsb mov aaa push jno stos lret sub mov inc pusha test cmp xchg mov in or mov sbb cmp xchg movsb mov xlat jmp ds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call je xchg cmpsl mov push and jbe cwtl stos mov adc xor push addr16 fwait lods mov adc jp popf scas mov push sub dec pop insb jge mov testb sub dec pop outsb jg mov or xor push addr16 lcall adc outsl adcb clc or sub dec pop jo xchg movsb mov fsubr cli or adcl or bound xchg test sbb jae xchg cmpsl mov push pop xor fs xchg test lret fsubr decb and inc push gs cltd stos mov adc jl sahf mov shl cmc push pop sub dec pop insl xchg cmpsl mov push and inc push gs cltd stos mov adc xor addr16 popf scas rcl hlt add pop insb jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp testb sub dec pop outsl adcb stc or sub lahf mov shl testb sub dec pusha jb xchg cmpsb mov (bad) cld or fs xchg test call and inc push data16 lcall adc lea out and inc push addr16 fwait lods mov adc inc pop imul loope add es dec pop imul rcl (bad) or sub movsb mov fsubr cli or pop xor fs cwtl test sbb cmp outsl adcb stc or test jmp push pop xor fs cwtl test call and inc push data16 cltd stos mov adc xor addr16 mov (bad) call and inc push addr16 lcall adc inc pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp repz add cmp adcb stc or sub test in std push pop xor xchg mov stc or sub adcl or arpl test int3 fucomp add and fwait lods mov adc ss pop push mov repz inc push addr16 fwait lods mov adc aaa dec pop insb jle mov push sub bound pushf scas ret xlat ljmp outsl (bad) xchg test into loope pop sbb inc push addr16 mov xor push (bad) (bad) add cmp jae cltd lods mov sbb jl mov add cmp test (bad) or xor imul (bad) add cmp test (bad) or inc add jg movsl mov push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg cld mov dec pop outsl (bad) xchg test iret loop or mov add cmp je lcall and xchg test shl (bad) or xor imul mov fdivp add sub push gs sahf mov xlat ljmp lea add cmp jae lcall and xchg cmpsl mov sbb inc push data16 mov add cmp xchg cmp mov add jne fwait scas rcl cli or insb jg movsl mov sbb lods int3 lock dec pop jno mov and xchg cmpsl mov cmp rcl cld mov dec pop outsl (bad) xchg test into loope pop sbb mov add cmp xchg cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov or jl mov add sub bound pushf scas ret adc push jb mov negl popf (bad) loope or push data16 lahf mov fldlg2 call and test (bad) or xor imul add jne mov add cmp je lcall inc push push (bad) mov add cmp jae cltd lods mov push xor jle movsl mov sbb ds gs sahf mov xlat ljmp outsl adcl push imul add gs mov add sub arpl pushf scas ret sti push and inc pop insl (bad) xchg test into loop or inc push jb cwtl stos mov sbb jle movsl mov sbb push gs lahf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ljmp jo xchg stos mov sbb inc push push (bad) (bad) add jle movsb mov fnop add jp lahf mov fldlg2 call and test (bad) or inc push push int repz sbb push gs sahf mov xlat std adc aas bound adc push ja mov arpl sub (bad) mov negl cmp or dec outsb mov pop js mov xchg mov daa dec jg (bad) jmp sahf ret call mov pusha xchg push mov add pop sbbb pop sub push imul call aas push push shl cld adc cmp cmpsl mov cmp jnp movsl mov push sbb fiaddl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec je mov sub push imul inc push push xchg stos into in push and dec fs movsb mov and dec arpl mov or aaa dec bound mov push and dec fs mov push and dec bound sbb inc pop outsl test add cs pop outsb sbbl sbb inc pop outsl test icebp adc loopne fildl es jo shr xor repnz imulb dec jbe int3 repz ds jno shr xor (bad) lods sar and xchg mov (bad) mov jnp ret call mov pop andl inc insb xchg mov outsl xchg mov mov imul andb subl mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jle lret inc data16 mov add dec jae shl xor (bad) test add mov jle (bad) xor popf mov fdivp adc pop jnp icebp add xlat (bad) and xchg mov subl sub mov pop xor movsl int and xchg mov add push jo fwait mov fcomi push sbb inc pop outsl test add xchg lods ret add sub xchg lods rcl add outsb test push sbb inc pop jo lcall cs pop insl (bad) xchg lods ret add inc push sbb mov or xor fwait (bad) repnz pop andl in sbb lahf mov fdivp or xor jae pushf mov fcomi add outsb sbbl push imul std adc cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp nop stos fdivp or xor pop jae popf mov fdiv add outsb sbbl push sub insb adcl push push shl sti adc lods rcl add jle test shl cld adc cmp jl cmpsb mov and mov or ss pusha jne lahf mov fcomip or dec addr16 cmpsl mov cmp jp mov (bad) cmp js mov or ss pusha jbe mov or xor jae popf mov fdivr sub insb adcl push push xchg test adc cmp gs movsb mov and dec pusha jne sahf mov (bad) pop sbb inc pop outsl test and dec arpl mov or xor popf mov (bad) pop sbb inc pop jo lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out add cs pop insl (bad) xchg lods rcl add jmp xchg stos rcl call ds push shl cld adc cmp jp mov or ss pusha jbe mov or cmp mov daa cmp addr16 cmpsb mov and dec arpl mov or xor sahf mov (bad) or mov es push insb adcl push imul sti adc mov or ss pop je mov or xor jae add xor jo fwait mov (bad) add cs pop insl sbbl push sub push xchg stos mov sub push xchg test adc cmp data16 enter sbb xchg push sbb inc pop jo lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sbb inc pop outsb test add sub push push xchg test adc imul push sbb inc pop jo lcall cs pop outsl test add sub xchg lods rcl add jg test das dec pusha jbe mov or xor pop je sahf mov loope or xor lahf mov fdivp or xchg add cs pop insl (bad) xchg lods (bad) notl sub cmpsl mov sub cmpsb mov cmp jp movsb mov add cmp data16 movsl mov and dec arpl (bad) push sbb dec pop jb popf mov (bad) pop sbb inc pop jo lcall cs pop insl (bad) xchg lods rcl add jg test shr std adc cmp mov adc cmp jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc loopne or xor mov or ss outsl xchg mov dec arpl mov push aas pop jb pushf mov fdiv push sbb inc pop outsl test add sub push sbbl adc jle test shl sti adc nop movsl mov inc pop insl (bad) xchg lods rcl add jle test shl cld adc cmp jp movsb mov and dec popa jbe mov or xor mov call push addr16 cmpsl mov cmp jp movsb mov and dec popa jbe mov cs pop ja cmpsb mov xor or pusha mov jbe rorb xor stos sar push inc insb xchg mov lea fwait (bad) cmp mov add aad es jle rorl ss mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) faddl sub (bad) es subb int3 repnz push cmp mov add push subb leave out adc mov xchg mov lea cltd mov pop sub push jnp shr inc mov push imul (bad) adc cmp data16 movsl mov and dec pusha jne mov or ss popa jne lahf mov fdivp (bad) cmp js mov or xor popf mov fdiv add outsb adcl adc adcl push addr16 cmpsb mov sub push push shl cli (bad) cmp js mov or xor pusha jne lahf mov fdivp or xchg add sub lcall sub xchg stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push addr16 test adc cmp gs movsl mov and dec popa jbe mov or and pop jnp ret in cs js (bad) call push imul (bad) adc cmp cmpsb mov and dec arpl mov adc cmp data16 cmpsb mov and dec bound movsb mov and dec popa jbe mov or xor pop jb pushf mov fdiv add outsl test pop sbb inc pop jo pushf mov fdiv push sbb inc pop outsl test add sub push imul (bad) adc ds push shl cli (bad) cmp jns cmpsl mov daa cmp addr16 movsl mov and dec bound mov or xor sahf mov (bad) pop sbb inc pop jo lcall push xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov or xor jb pushf mov fdiv push sbb inc pop outsb test add sub push xchg test adc jge cmpsl mov sub push imul cld adc cmp jp movsb mov and dec pusha jne lahf mov fdivp or xor pop jae popf mov fdiv push sbb inc pop outsl test or xchg add outsb sbbl push sub insb adcl push addr16 cmpsl mov and xchg cmpsl mov and (bad) movsb mov and dec imul imul imul cld adc mov dec arpl mov or xor mov or xor sahf mov add (bad) or xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jne lahf mov fdivp or cmp jns mov or ss popa jbe mov or ss pusha jne lahf mov fdivp or xor jb pushf mov fcomi add outsb (bad) xchg lods rcr add outsl test add outsl test add sub xchg stos rcl call ds addr16 cmpsb mov and dec arpl test out push cmp xchg lods rcl add sub imul call ds push shl cld adc cmp jp movsb mov and dec push scas (bad) hlt sbb push imul call ds push shr std adc cmp data16 movsl mov add cmp data16 movsl mov sub push insb adcl push push xchg test adc cmp cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti adc (bad) movsb mov and dec fs mov adc cmp jnp movsl mov and dec bound mov or xor sahf mov (bad) pop sbb dec pop je sahf mov (bad) pop sbb inc pop jo lcall xor jb pushf mov fcomi add outsl test add sub pop outsb sbbl pop sub push imul call ds insl sbbl pop sub push insb adcl push imul add sub push xchg stos mov sub cmpsl mov es push push xchg stos mov sub push push aam (bad) adc cmp cmpsl mov and (bad) movsb mov and dec bound mov push and dec arpl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and dec bound (bad) movsl mov and dec popa jbe mov or xor jno fwait mov (bad) add cs pop insl (bad) xchg mov (bad) pop sbb inc pop jo lcall sub xchg lods rcl add jg test adc cmp data16 movsl mov cmp jg test adc ds push shl sti adc (bad) movsb mov and dec arpl mov or cmp push data16 movsl mov and push addr16 cmpsl mov and (bad) movsb mov and dec popa jbe mov or xor popa jbe mov or xor pop jae sahf mov (bad) or ss pusha jne lahf mov fdivp or xor jb pushf mov fcomi add outsl xchg add das inc pop outsb sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in add sub push imul add sub xchg lods rcl add jle stos mov sub cmpsb mov and (bad) movsb mov and dec popa jbe movsb mov and dec arpl mov or ja mov or xor pop jae popf mov (bad) pop push xor pop jne lahf mov fcomip or xor int3 loop adc ds imul adc push jl leave lock cmp stos sar adc cmp data16 cmpsb mov xor jo lcall ss gs test aam add sub lahf mov shl cld adc aas push outsl xchg (bad) cmp imul push sub pushf mov loopne push es imul out adc fdivr and cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti and xchg mov jge int3 repnz mov cltd shl ss xchg jge int3 mulb dec je lret inc outsb xchg shr lea xchg subb lahf vunpcklpd imul daa push jns sar daa push jg xlat add pop mov mov add ja lret imul (bad) sub mov add roll sub test xorl mov pop push jle sar es jns (bad) inc push xor test jno mov popf vunpcklps popa mov mov ja int3 mulb dec jp fiaddl pop subl or push jnp into repz cwtl (bad) out adc stc and cwtl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push jle iret negb dec outsl cwtl shr jb (bad) in sbb xchg mov mov jbe enter outsl lcall jecxz xor stos sar and ret ljmp or ljmp add dec jbe lret repnz popf (bad) in sbb nop mov cmpsb aam and lahf enter outsb cltd (bad) out sbb xchg mov xchg mov jnp int sbb push mov subl ret ja ret in sbb xchg mov fwait shl sub jb mov jo lret out adc pop jge ret cs jnp (bad) in xor cwtl mov imul into icebp adc pop js mov jo mov jno mov jno mov sahf shl sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xchg mov sti push inc xchg pop andl jbe mov mov insb (bad) mov xchg lds ds jg rolb xor jne mov hlt adc push jne shl and andl mov dec xchg or negl inc imul mov fdivp push sbb nop movsb mov and dec pop jb cltd scas ret fsubr add adcl sbb loopne and mov mov std sbb test push je mov bound popf mov xlat jmp adc cmp arpl sahf mov fdiv add sub push push into jecxz or xor movsb mov jne mov pop jnp mov test pop andb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl arpl sub mov negl cmp mov pop jp mov and cwtl stos mov sub push data16 mov or xor outsb (bad) xchg stos mov daa ds gs movsb mov pop xor pushf mov (bad) add sub push xchg stos rcl add cs pop jno lcall xor jno lahf mov loop or xor jno cltd lods les (bad) or xor jne mov or xor (bad) xchg mov fcomip or xor jno fwait mov fcomi or xor jno lcall sub push imul sti adc cmp jns mov add dec jbe mov test pop jae lcall and cwtl stos mov cmp jbe (bad) movsb mov loope (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmp ja scas (bad) hlt sbb inc pop imul mov and dec pop jb fwait scas ret add inc push insb adcb sub push xchg test pop sub push push xchg stos mov and dec bound mov add sub push imul sti adc cmp jge test aam call jg scas ret add cmp mov push sbb inc push insl adcl adc mov add das inc pop outsb test pop sub push imul push push xchg cmpsb mov and dec pop je mov add jno pushf mov (bad) add sub xchg stos mov and xchg cmpsb mov and pop outsl adcl adc dec popa je fwait scas ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jmp adc cmp jnp shr sub push lret fdivp adc mov add cs push imul mov and popf mov (bad) pop sbb inc pop insb adcl push insb adcl pop insl add repz sbb inc pop outsl (bad) lcall xor adcl push imul std adc inc push imul pop xchg dec outsl xchg mov imul (bad) or xor imul mov es push push xchg cmpsl mov push xor popa jns cmpsb push andb xchg mov push sub xchg mov (bad) and mov pop jl ret sub cltd mov jae out xor mov dec outsl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov pop andb scas (bad) cmc sbb pop andb mov push jae mov insl xchg mov stc sbb stos iret cmc sbb bound cmp mov push jnp shl sub jb fwait mov jp shl sub fild and (bad) clc sbb xchg pusha test push mov cld pop inc mov pop jg (bad) call pushf shl das push subl andl jle (bad) jmp mov push jle leave out adc xchg mov jae mov ja sar inc popa (bad) mov dec outsb (bad) scas sar sub lea test dec jno mov sti pop inc mov push je mov wrmsr push jno mov sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) call (bad) mov sti sbb lret in or rcr push and (bad) jmp xor xchg mov add inc test dec jno mov stc sbb xchg mov cld and xchg push jno mov cld sbb pop jl mov pop andb jl (bad) call mov pop jg (bad) call xchg mov sti sbb pop jg mov xchg mov icebp adc dec outsl nop mov lock push jae mov sti pop aas pop xchg push jbe leave in wrmsr push jo mov pusha andl lret hlt adc push ja mov notl cmp and andl (bad) clc sbb popa (bad) mov inc xchg pop andb xchg dec insb mov pop cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc xchg pop andl (bad) repz push ja mov xchg dec push aad pop cmp andl push scas (bad) lock cs jo mov repnz push jb mov testb cmp shl sub lea push jp mov mov or dec insl (bad) mov icebp adc mov add cmp outsb adcb std push and inc push push enter adc dec pop insl adcb insb mov imul aaa push jo stos enter cmp jae mov dec outsb mov cmp (bad) lock dec push stos (bad) call test cmp sahf jmp test stos leave jmp (bad) mov hlt adc aad pop cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jmp xchg mov cmc push cmp movsb enter push jno mov cmc sbb pop jns shl das pop jge ret sub outsb lea push js mov data16 dec outsl (bad) mov cli sbb jp mov pusha andb jno mov push adc push js ret sub mov push jae mov notb mov outsb nop mov cld sbb (bad) negl cmp in daa inc push stos int3 out adc mov mov adc mov outsb (bad) scas iret out adc negb cmp mov dec jno mov cld and xchg dec insl (bad) scas iret add adc push ja mov bound and (bad) repnz push je mov repz push jne mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call clc sbb pop jl mov popa (bad) movsl (bad) sub mov test push jbe mov bound dec push adc pusha andl imul push ja mov pop add xor mov push mov hlt push ss ja mov arpl xor xchg mov notl cmp cmpsb (bad) call lea pop jl mov xchg push jne mov pop xchg adc push outsl mov dec jo mov icebp adc push jb mov arpl and arpl push jbe mov jb mov add (bad) or dec jno mov cmc sbb pop jge mov arpl das push jno mov add inc fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop jns mov popa andl imul push ja mov fs mov clc sbb add scas sar sbb jmp cltd mov mov adc xor push push mov sbb cmp xchg add or jl mov call and (bad) xchg cmpsb mov push jne rcr cld push pop xor addr16 popf scas rcl clc or sub test lock jo xchg movsl mov fsubr add daa cmp outsl (bad) xchg mov and xchg stos mov push xor addr16 lahf mov xlat jmp dec pop jo xchg test push sbb ds popa jae cwtl lods rolb call dec push push xor jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall or sub xchg test add sub dec pop jno xchg cmpsl mov pop sub lods mov push dec addr16 mov add cmp je lcall pop xor jge mov add and xchg clc or das inc push data16 mov daa ds bound sahf mov (bad) jmp dec pop imul mov fdivp add sub popf mov aam stc or xor push (bad) movsl mov sbb inc pop imul int3 lock sub push gs fwait lods rcl (bad) or jbe fwait lods mov and inc pop insl adcb sbb cmp lcall and inc push outsb pushf mov fdiv add jne lcall and (bad) xchg test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) or jge mov add sub dec arpl pushf mov (bad) call and scas ret sti push and inc push push mov add sub dec pop jb xchg test or outsb adcb add addr16 mov sbb insl jg movsl mov fsubr add cmp insl adcb add cmp jb cwtl stos mov sbb push addr16 popf add or jp movsb shr adc sbbl inc push push enter adc test (bad) or jns sahf mov aad cli push and inc pop insb mov pop insb jle mov add and xchg movsb mov fsubr add and adcl aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ja lcall sbb inc jbe lahf mov fsubr cld push pop xor addr16 sahf mov shl (bad) or inc push gs pushf mov (bad) jmp inc pop imul mov (bad) call and dec pusha jae cwtl lods mov dec pop jno xchg test or sub mov cld push and fwait lods mov sbb inc push data16 mov add sub popa jae cwtl lods (bad) repz cmp jb xchg test or inc push data16 mov (bad) adc dec pop insl adcb push sbb popf mov aad cli or insl subl cmp jne lcall sbb cmp pushf scas rcl cli or scas (bad) (bad) or cs push arpl cwtl stos mov adc aaa push js sahf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add push pop xor push ret clc or aas push arpl mov dec pop insl jg mov (bad) and outsb jg movsb mov fldl2e cld adc ss pop imul mov fsubr cld push and xchg movsl mov adc cmp jb lcall sbb jl mov sub push bound lcall sbb ds arpl lcall push das inc push addr16 mov add sub push gs mov (bad) adc ss pop jae mov (bad) or sub mov std adc ss pop jo xchg test int icebp push sbb inc pop imul inc mov shl and iret in or inc arpl sbb pop add mov outsl mov inc popa jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor nop scas (bad) (bad) cld push pop xor gs cltd stos mov adc cmp imul shrl je mov lock stos enter sbb cmp pop outsl adcl xor push shl clc or inc push arpl cltd stos mov sbb ds arpl fwait lods mov sbb inc push push (bad) (bad) add sub lcall pop xor nop mov (bad) adc xor push push nop mov add and adcl inc push imul add sub lahf mov fucomi add cmp arpl fwait lods ret stc or imul mov fsubr add and dec pop outsb adcl aas push bound lods mov and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl insb jle mov inc bound fwait mov aam (bad) or sub mov cli or push (bad) aad cli or das inc push addr16 sahf mov aam sti or imul lret fdivp push sbb push gs pushf mov (bad) jmp adc cmp jne pushf scas ret std mov dec pop jo xchg test iret add clc or xor xchg movsl mov fsubr add cmp test and inc pop outsb adcb add sub dec pop jo xchg stos mov sbb jns popf scas rcl stc or xor push xchg movsb mov fucomi add (bad) mov add cmp mov add cmp jne lcall and inc pop jo cltd lods mov sbb jg movsb mov fsubl inc addr16 xchg test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jae xchg test add pusha jae xchg test add and dec pop outsb adcb (bad) adc dec pop jo cwtl mov sbb xchg movsb mov adc je popf scas rcl cli push and inc pop insb jg mov add sub arpl cwtl test add mov in or dec gs lahf mov push ja mov out or aas push popa jb xchg cmpsb mov adc xor push addr16 pushf lods mov adc adcl cs push bound xchg cmpsl mov push pop xor data16 lcall adc mov repz cmp insb jge mov std adc xor js fwait lods mov push daa cmp insb jle mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) or sub movsb mov fsubr cli or aas push bound xchg cmpsb mov (bad) cld or gs cltd stos enter push and inc push fs cwtl test add and inc push addr16 lcall adc xor push addr16 pushf lods mov adc imul rcl cmc push pop sub dec pop insl lea (bad) or sub xchg cmpsb mov (bad) cld add and inc push push mov adc aaa dec pop push lea cmc push pop sub dec pop insl jle mov clc or sub push addr16 pushf scas mov adc imul mov shl testb sub dec pop outsl adcl sub dec pusha jno xchg movsl mov (bad) std push pop xor gs cwtl stos mov and jl lahf mov aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or sub movsb mov xlat jmp aas push fs xchg test (bad) adc xor js lcall adc inc pop imul sub dec pusha jno xchg movsl mov fsubr std push pop xor fs xchg test (bad) adc xor gs stos mov adc inc pop push mov cli push xor mov sti or das inc push arpl xchg test add and push imul loop add pop insl jle mov testb sub xchg movsb mov fsubr sti or das inc push imul jecxz add pop add xchg movsb mov fsubr cli or cs push bound xchg test call and inc push data16 lcall adc mov repz xor push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov pop sub dec pop outsb jg mov clc or sub dec pusha jb xchg cmpsb mov fldpi cld or fs cwtl test call and inc push addr16 popf scas mov sbb dec popa jb xchg cmpsb mov fldl2e cld or arpl test lret decb and inc push data16 cltd stos mov adc aaa dec pop push lea hlt push pop sub dec pop outsb jg mov shl testb sub dec pop jo xchg mov stc or xchg in call and inc push data16 lcall push pop sub dec pop outsl subb sbb cmp imul stc or test in std push and inc push gs cltd stos mov adc jnp lahf mov shl cmc push sbb cmp jo xchg movsb mov fldl2e (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld or imul mov aam (bad) or sub movsb mov xlat jmp aas push popa jb xchg cmpsb mov adc xor ja lcall adc xor mov or sub xchg movsb mov fsubr cli or xor arpl cwtl test call and fwait lods mov adc insb jge lahf mov shl testb sub dec pop outsl (bad) xchg stos mov adc xor mov repz pop insl jle mov (bad) or sub mov sti or das inc push arpl test jmp inc pop jl mov dec imul cmp nop lods leave in sbb cltd mov out or push jno lods (bad) in and pop jnp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push adc dec imul aas pop jp mov (bad) xor ret loopne sbb push jb stos enter cmp jbe mov repnz sub (bad) mov xor mov lock xchg cmp and xchg mov repnz sub mov in or into jmp jne mov ljmp lret and lea hlt add pop insb jge lahf mov shl cmc push pop sub fs xchg test lret fsubr decb and inc push gs cltd stos mov adc mov add pop sub dec pop insl jle mov clc or sub xchg movsb mov xlat call inc push addr16 lcall adc inc pop imul loop add es dec pop imul sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jecxz add pop insb jge mov clc or sub xchg movsb mov fsubr decb and inc push data16 lcall adc mov add pop insl jle mov testb sub dec pop outsb jg mov clc or sub dec pop jno xchg cmpsl mov mov inc push data16 lcall adc mov add cmp imul mov shl cmc push pop sub dec pop insl jg mov clc or sub xchg test lret add adc xor push addr16 fwait lods mov adc mov repz sub dec pop insl jle mov testb sub dec pop outsl adcb clc or das inc push bound test lret std mov inc push gs fwait lods (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov adc mov repnz cmp jae stos enter inc pop jl rolb cmpsl ret loopne sbb push je lods (bad) in sbb lods enter cmp stos (bad) in sbb mov dec sbbl adc mov inc pop jp mov in sbb mov pop sbb jl lahf mov shl cmc push pop sub dec pop outsb jg mov stc or sub (bad) xchg movsl mov fldl2e cld or bound cmpsl mov and inc push push mov push daa cmp outsl adcb cli or jae xchg cmpsl mov push pop xor gs cwtl test call and inc push gs cwtl stos mov sbb cmp adcb clc or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp xchg movsb mov xlat jmp aas push bound xchg cmpsb mov (bad) cld or data16 cltd stos mov adc and jnp scas mov push daa cmp ja mov sti or xor arpl xchg test int lock and inc pop imul loope add es dec pop imul rcl cmc push pop sub push arpl test call and inc pop imul jecxz push pop sub dec pop insl jle mov (bad) or sub dec pop outsl adcb clc or sub dec pop jno xchg cmpsl mov adc jl lahf mov shl testb sub dec pop outsl adcb stc or test out add and pushf lods mov push sub dec pop insl jle mov std push pop xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jbe cltd stos mov adc xor pop push lea cmc push sbb cmp outsb jg mov clc or sub dec pop jno xchg movsb mov fsubr sti or cs push bound fwait lods rcl hlt add pop insl jle mov clc or sub test out add and inc push addr16 fwait lods mov adc cmp insl jle mov clc or sub cltd stos mov adc mov hlt push pop sub dec pop outsb jg movsb mov fsubr sti or das inc push arpl test lret fsubr decb and inc push gs cltd stos mov adc dec pop imul ret (bad) or sub dec pusha jno xchg movsl mov fsubr sti or cs push bound cmpsl mov adc xor js lcall adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lahf mov sar pop aaa dec pop outsb jg mov clc or sub dec pop jno xchg movsb mov fsubr sti or cs push popa jae xchg cmpsb mov fldl2e std mov inc push data16 cltd stos mov adc add dec pop imul iret loope add daa cmp insb jle mov clc or sub dec pop jae xchg cmpsl mov mov inc push data16 lcall adc inc pop push lea cmc push sbb cmp lea (bad) or sub mov cli or adcl cld or arpl xchg test lret fsubr call and inc pop imul aam (bad) or xor fs cwtl stos mov adc xor push push mov adc imul ret aam (bad) or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or das inc push arpl xchg test add daa cmp insb jge lahf mov shl testb sub pop jo xchg movsb mov fsubr cli or cs push bound xchg cmpsl mov adc xor data16 lcall adc mov sti or das inc push bound cmpsl mov mov inc push gs cwtl test call and inc push data16 lcall adc insb jge lahf mov shl cmc push pop sub dec pop jns popf scas rcl cmc push pop sub dec pop outsb jg mov clc or sub push bound xchg test lret fsubr call and inc push data16 lcall adc jnp popf scas rcl hlt push pop sub xchg mov out add jnp popf scas rcl hlt push pop sub dec pop insl jle mov (bad) or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub mov stc or aas push popa jne cwtl test pop sbb cmp pop jo xchg movsb mov fsubr cli or jae xchg out add and inc push addr16 lcall push daa cmp insb jge mov testb sub dec pop outsb jg mov add daa cmp insl jle mov clc or test inc pop push mov hlt add pop insl jle mov testb sub dec pop outsl xchg test lret fsubr call and inc push imul loop mov xor outsb mov cmp xchg lods lret call test sub gs lahf mov push jno lods int3 jmp sub xchg pop jnp mov repz ret (bad) sbb (bad) loopne sbb pop je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec push notb dec imul pop jns mov out or dec imul in and jl mov push outsb cltd mov icebp push sub xchg add and inc pop push lea cmc pop sbb cmp pop jo xchg movsb mov fsubr sti or das inc push arpl lcall adc aaa dec pop jno xchg cmpsb mov (bad) std push and inc push data16 lcall pop sbb cmp adcl xor data16 fwait lods mov adc insl jle mov stc or xor gs cltd stos mov adc jle mov clc or sub test in (bad) adc xor jns pushf lods mov push sub dec pop insl jle mov std mov inc push data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fwait lods mov adc insb jge mov (bad) or sub dec popa jb xchg cmpsl mov mov inc push push rcl hlt push pop sub dec pop outsb adcb (bad) adc xor js fwait lods mov push daa cmp insl jle mov cli or aas push bound xchg cmpsl mov add and popa jb xchg mov repnz and inc push arpl mov add and je xchg mov repnz and inc push pusha jo (bad) lahf scas mov or pop imul stos mov or sub dec pop imul xlat out push push cmp imul xlat out pop pop es push gs xchg movsb mov aam hlt add and inc push fs xchg mov repnz and inc push pusha jo (bad) lahf scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsubrp decb push cs mov std push sbb outsb jle sahf scas mov or pop insb jl pushf stos mov or sub dec pop push mov aad cmc add and inc push bound xchg mov repnz and inc push pusha outsl jg lahf scas ret icebp add and inc push popa jno nop mov out decl pop cs pop insl jge sahf scas mov or sub dec pop push mov call aaa inc push data16 xchg movsl mov aam hlt add and inc push bound xchg movsb mov aad cmc add and inc push fs xchg mov in add push arpl xchg mov icebp add and aas dec pop outsl jle sahf lods mov push push cs lea sti or sub lea in sti or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl imul xlat jmp cmp push mov (bad) out add push fs xchg mov icebp add and inc push pusha outsl jg lahf scas mov adc xor bound xchg mov icebp add and inc push pop outsl jg sahf scas mov or sub dec pop push mov call cmp push mov xlat out push push es test testb es test repz and push arpl xchg mov icebp add and aas dec pop outsb jle popf lods mov or sub dec pop imul xlat out push adc data16 cwtl scas and pop jb test (bad) sbb push pusha jo nop mov out decl pop cs pop outsb jle sahf scas mov or pop insl jge popf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cld or sub push pusha jo (bad) lahf scas mov push sbb insl jge popf lods mov or sub dec pop imul stos mov or sub dec pop push mov (bad) out add push fs xchg mov repnz fs xchg movsl mov aam hlt add and inc push bound xchg mov icebp add and inc push arpl mov out push cmp mov sbb push outsl mov int3 jmp outsb mov daa inc pop jne stos (bad) adc insb mov inc pop (bad) sahf mov cmp xchg sbb dec fs scas (bad) fcomip movaps jb movsl rcr pop push daa ss push addr16 xchg cmpsb mov aad cmc add imul lods mov or sub dec pop imul stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldl2t stc or sub dec pop push mov xlat out push push es test in add and inc push bound xchg mov icebp push push cs pop outsb jge popf lods mov or sub dec pop push mov ljmp pop push mov xlat out push push es push gs xchg movsb mov aam repz and inc push bound xchg mov clc or daa aaa inc push addr16 xchg cmpsb mov aad cmc add and inc push arpl xchg mov in add and inc push bound xchg mov icebp add and inc push pop outsl jg sahf scas mov or pop insb xchg call cmp push mov (bad) out push pop sub dec pop imul xlat out push push es push gs xchg movsl mov aam hlt add and inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) xchg mov lock and inc push gs xchg movsb mov shl repz and inc push pusha jo (bad) lahf scas mov or pop imul test clc pop pop daa ss add jnp lcall or daa aaa inc push data16 xchg movsl mov aam repz sbb cmp addr16 xchg cmpsl mov (bad) out add push gs xchg movsb mov aam repz and inc push popa jno xchg mov out decl pop cs pop outsb jle popf lods mov or sub dec pop push mov testl push gs xchg movsb mov aam repz and inc push bound xchg mov lock pop das ds pop outsb jge sahf scas mov or pop insb jnp fwait stos mov or sub dec pop push mov or sub dec pop push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc or sub dec pop push mov xlat out push push es push gs xchg movsb mov shl repz and inc push bound xchg mov repnz and xor pop outsl jg mov out decl pop cs pop outsb jge popf lods mov or sub dec pop push mov jmp cmp push mov call aaa inc push data16 xchg cmpsb mov aad cmc add pop imul fsubr clc or sub dec pop imul xlat out push push es push gs xchg movsb mov aam repz and inc push bound xchg mov lock adc xor push arpl xchg mov add and inc push pusha jo (bad) lahf scas mov push sbb insb jl pushf lods mov or sub dec pop push mov call cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call js mov aam hlt add and inc push bound sahf scas mov nopl ds pop insl jge sahf scas mov or pop insl jl pushf lods mov or sub dec pop push mov mov and data16 sahf mov ds jae cmpsb rcr movaps je test (bad) push sub jbe stos les test ljmp mov in cld or sub pop insb jnp fwait stos mov or sub dec pop push mov xlat out push push es test or pop insl jge popf lods mov or sub dec pop push mov (bad) out add push arpl xchg mov lock and inc push pusha jo nop lahf scas mov add pop das aas dec pop outsb jge lahf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb cmp imul xlat out pop pop daa cmp push mov xlat out push push es push gs xchg movsl mov aad hlt add and inc push fs xchg mov repz and inc push imul in cld or sub dec pop push mov jmp cmp push mov xlat out push push and je xchg cmpsb mov aad hlt add and inc push arpl xchg mov lock pop inc pop push mov call push gs xchg cmpsb mov xlat out pop pop sub dec push addr16 mov jmp push popa jno xchg mov lock and aas dec add adcl inc dec popa jno xchg mov repnz and inc push popa jno nop mov out decl push cs pop insl jge pushf lods mov or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp push mov ljmp pop push leave fsubr cld or sub dec pop imul stos mov or sub inc push addr16 xchg cmpsl mov fsub testl push data16 xchg cmpsb mov aad cmc add push fs xchg mov repnz and inc push pusha jnp lods mov or pop insb jl fwait stos mov or sub dec pop push mov (bad) out add push fs xchg mov repz and inc push bound xchg mov icebp add and push gs xchg movsb mov aam repz and inc push popa jno xchg mov out decl and inc push pop jo (bad) lahf scas mov or pop insb jl fwait stos mov or sub dec pop addr16 xchg cmpsb mov aad pop ss imul add push outsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc loope sbb ds pop insl jge popf lods mov or sub dec pop imul xlat out and cmp xchg cmc add and ds pop push xchg fucomip cld or sub inc push bound mov repz pop cs pop push xchg fucomip cld or sub inc push bound mov out add and ds pop imul hlt add and cmp mov loopne std or sub inc push arpl (bad) popf lods mov add and cmp xchg fucomp sti or sub inc push bound mov out add and dec pop jo lea repz pop sub jbe xchg mov jmp or daa ss push popa jo lea repz push sub jbe xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ljmp push pop outsb jge lcall or aaa inc push arpl mov in add pop cs pop push mov int ljmp dec pop insb jnp cwtl cmpsb mov shl lock dec pop push mov into fsubr stc or and outsl jle fwait test or sub inc push arpl (bad) sahf lods mov push adc pop insl jnp cltd cmpsl mov shl lock push gs xchg lahf scas mov add dec pop push xchg loopne std or sub inc push arpl mov in cli or es push pusha outsl jge lcall add sbb data16 xchg mov jmp or and outsl jge fwait test repnz sbb data16 xchg lahf scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fs xchg mov jmp or es push pusha outsl jge fwait test repnz push sub jbe xchg mov jmp or and jo mov hlt add and cmp xchg fsubrp cld adc dec fs xchg movsb mov shl out std or sub inc push arpl xchg mov add cli or daa xor jg pushf stos mov add pop sub jbe xchg mov jmp or and jo lea decl push sub dec pop data16 xchg mov ljmp push pop insl jl cltd test (bad) icebp decl sbb cmp addr16 xchg mov jmp xor pop insb jnp cwtl cmpsb mov shl out std or sub inc push arpl xchg mov shl out std or sub inc push gs xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov push adc xor pop insb jnp cwtl cmpsl mov shl lock push gs xchg lahf scas mov push add es push bound mov out add and ds jno nop sahf lods mov add and aas dec pop push xchg fucomip cld or sub inc push fs nop lahf lods mov add dec pop insb jnp cwtl cmpsl mov shl lock sbb cmp gs xchg mov jmp inc push gs xchg mov jmp xor pop insl jl cltd cmpsl mov shl lock push gs nop lahf lods mov push adc pop insl jl cltd cmpsl mov aam icebp decl sbb data16 xchg mov std or push gs xchg lahf scas mov pop adc pop insl jl cltd test (bad) icebp decl sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp gs xchg mov jmp xor pop insl jl cltd cmpsl mov aam add add pop cs test or es jle fwait stos mov add pop cs pop push mov rcr out cld or sub inc push bound mov out add and cmp xchg fsubrp sti or es cltd test aad or aas pop je cmpsl rcr or inc popa jno mov and insb test sbb shr add cmp pop jne stos (bad) adc inc pop jae movsl mov cmp xchg sbb dec popa jns stos (bad) adc lcall push outsb xchg cmp sbbl sbb xor jge lcall decl sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp data16 xchg mov call xor pop insl jnp cwtl lods into loope decb push gs xchg lahf scas mov add dec pop push mov fucomip decb push gs xchg mov out add sbb imul shl repz pop das ds pop jo mov ljmp push pusha outsb jge lcall add and cmp mov jmp xor orb call xor pop insb jnp add in add pop cmp mov add and cmp xchg fucomp cli or sub inc push bound mov repz pop sub jne xchg mov ljmp push pop insl jnp cwtl cmpsl mov shl cmc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor jle fwait stos mov add and inc dec pop outsl jle fwait stos mov push adc pusha jno mov hlt add and aas dec pop imul cmpsl mov aam repz and inc push pop jo mov or daa ss pop addr16 xchg movsb mov rcr in sti or sub inc push fs (bad) popf lods mov or sub inc push gs xchg movsb mov shl icebp add pop xor dec pop outsl jg popf lods mov add push pop insl mov or inc pop jae mov sbb dec addr16 mov loop adc inc pop jno movsb mov ss fs lods vpsadbw es pop ja test and outsl mov and pop jb movsb mov cmp outsb xchg adc dec arpl lods (bad) fdiv adc movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp xchg and push imul xor jle mov in adc inc pusha jnp scas int3 out je mov sbb scas (bad) adc inc pop je scas rcl out cld or sub inc push arpl (bad) sahf lods mov or daa ss push arpl xchg cmpsb mov aad hlt add and inc push pusha outsb jle pushf stos mov or es push gs xchg mov hlt add and inc push popa jb xchg mov lock and inc push popa jae xchg movsl mov (bad) sti or sub dec pop js scas lret xor xchg mov in or inc arpl adc cmp test out pop pop sub dec pop insb jge sahf scas mov sbb cmp push mov icebp add and jge add sti or das inc push fs xchg cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivp add sub pusha jb xchg test lret add and lea adc push fs xchg cmpsl mov push push cs push bound xchg cmpsl mov or data16 xchg test int out add and sahf scas rcl repz pop insb jge movsl mov (bad) cld or arpl xchg test int3 fdivp add cmp jae xchg cmpsl mov adc adcb stc or ja lcall mov inc push imul insb xchg sub jle mov dec fs adc dec xchg xchg push jb lods lret es popa andl pop jge mov push ja (bad) (bad) adc jne mov notb aaa push js mov pop test push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov std push ds jg shl and lea arpl aas popa test jne mov bound das push jbe ret call lods (bad) negl pusha andb imul scas into in push cs jo mov negl cmp test push subl jle mov push push xor sahf shl xor fwait mov bound and (bad) repz (bad) sub outsl xchg mov imul mov mov push js ret xor xchg mov imul mov notl aaa pop andb jno mov cld push aas arpl xor pushf mov imul jb mov cmc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp xchg push cwtl mov lock sub andl bound sbb pop js shr sub mov clc pop aaa push jae mov out add and mov stc or data16 lahf mov aad stc or xor js mov add add dec mov dec insl mov and mov cli push and pop imul int repnz pusha jae cltd stos mov sbb jg movsl mov sbb aas push data16 mov add cmp pushf scas (bad) fnop push sbb inc push gs lods shr sysexit pop adcl cmp jo xchg cmpsb mov push sub dec pop jo xchg cmpsb mov sbb cmp popa jne popf mov xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp dec popa je pushf scas ret sti or insb adcb or xor imul mov fnop push sbb inc push insb jle cmpsb mov adc jae cwtl lods mov and pop outsl (bad) xchg test int3 fcomip add jo xchg stos mov sbb inc push push lret fdivp push sbb cmp bound fwait lods mov and dec pop outsl adcl inc pop push nop mov add pop sub push data16 sahf mov (bad) call dec pop outsb adcl cmp lcall sbb jl cmpsb dec jno xchg test int3 fdivp add pop jo xchg test add sub dec pop jno xchg test pop sbb mov clc or inc pop outsl (bad) xchg cmpsl mov push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas push gs mov add cmp jne pushf scas ret xlat jmp adc cmp js lahf mov (bad) jmp adc dec pop jo xchg test add xor popf scas rcl cld or imul lock jb cltd stos mov sbb jp mov add je mov add jbe sahf mov (bad) add sbb inc pop insb jge mov pop sbb inc push addr16 sahf mov fsubr add sub push gs pushf mov fsubr call and dec pop jo xchg lods mov sbb inc push addr16 mov add daa cmp popa je cltd stos mov and enter inc data16 dec ja mov push jno lods leave dec outsb mov jmp lea inc arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl lahf mov push outsl mov inc pusha jle mov dec outsl mov inc pop jnp mov inc push addr16 lahf mov aad sti or push into loop pop sbb mov stc or adcb pop sub push arpl mov add cs push push mov add sub push arpl (bad) icebp adc dec pusha jb xchg test int3 loopne pop sbb cmp xchg test add daa cmp adcl cmp jb cwtl stos mov pop sub imul out add jb xchg cmpsl mov adc add push gs popf scas rcl (bad) or sub mov mov dec pop insl adcl insl adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out add daa cmp jb xchg test add daa cmp outsb adcb add cmp jno xchg cmpsb mov adc cmp test (bad) or jp sahf mov (bad) ljmp fs fwait lods mov sbb cmp cltd scas ret cli or imul mov fucomi add popa je pushf scas rcl clc or inc push imul jmp adc xor imul xchg movsl mov fucomi (bad) adc xor xchg movsl mov sbb aas push fs pushf scas rcl std adc mov sub dec pusha je lcall pop xor jle cmpsl mov adc jbe pushf scas ret aad call and mov or sub (bad) mov std adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cli push and xchg movsb mov sbb inc push addr16 lahf mov xlat jmp adc ss pusha jb xchg test xor fprem sbb fdivrp and outsl xchg and inc pop imul mov adc cmp jae movsl ret adc dec pusha jb xchg test push sbb push fs lahf mov fucomi call cmp outsb adcb add sub push gs mov (bad) adc xor pushf scas rcl std mov dec pusha je lcall and pop insb jle movsl mov sbb inc push fs xchg mov push sbb push insb jle movsb mov fucomi add sub pop imul mov fsubr (bad) adc cmp arpl lcall push xor jl movsb mov adc jne lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std adc xor insb adcb pop cmp mov and dec pop jo xchg test add cmp jo xchg cmpsb mov push xor jns mov add cs push imul repz sub mov clc or xor push nop mov add sub pop jae xchg stos mov sbb cmp popf mov fsubr (bad) adc jge movsb mov adc jno cltd lods rcl sti or imul mov sbb ds gs mov call and dec pop jno xchg test iret loope pop sbb inc pusha andb pop sub push arpl cltd stos mov sbb cltd stos mov and pop insl jg movsb mov (bad) add push (bad) mov or and dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg cmpsb mov push sub dec popa jae lcall and inc pop outsl adcl mov inc pop insl adcb adc jno xchg scas rcl cmpsb mov adc (bad) xchg movsl mov (bad) add and test stc or xor imul mov (bad) add andb imul ret (bad) or cs push imul mov fsubr decb and pop push (bad) mov add cmp jb xchg stos mov sbb inc pop imul mov sbb inc push imul add push addr16 mov add sub dec pusha jae cltd stos mov push xor pop insl adcl inc pop imul mov sbb jge mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmp bound lcall pop xor jge cmpsl mov pop sub push gs mov (bad) adc adcb add cmp jae lcall sbb aas push arpl lcall push xor imul mov fucomi add jp lahf mov xlat call inc push data16 sahf mov aad add cmp outsl adcb add cmp test lock sub push fs lcall sbb inc push push (bad) xlat ljmp jb xchg stos mov and pop outsb adcl cmp jb xchg stos mov sbb (bad) xchg test into loopne or sub xchg cld push and xchg movsl mov (bad) add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall call and adcl add sub bound lcall push je mov push sub dec pop jo xchg test hlt or sub mov push and dec pop outsb (bad) xchg cmpsb mov sbb jg cmpsl mov and dec pop jae pushf mov (bad) or mov push and dec fs movsb mov push xor je popf mov loope or xor mov or cmp jne popf mov fnop add sub xchg test shl cli or jne mov or inc pop outsb (bad) xchg scas (bad) fucomi or pop js rolb xor add dec push lret arpl mov push test push cmp lahf in lods (bad) es (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov fild and imul xor inc mov push jp shl xor fwait (bad) negb inc imul or loopne and fdivr and nop mov sti and ljmp out xor lahf (bad) ljmp jmp test negl test repz cmp test mov pop andl es outsl xchg mov add outsl xchg mov jne shr ss mov jne lock xchg mov push or mov cmc adc ret in sbb pop outsl (bad) xchg test shl (bad) or jle movsl mov sbb inc push imul (bad) or xor lcall and mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdiv add xchg mov add sub mov add jo fwait scas (bad) fsubr add cmp jp mov or xor pop jae lahf mov fdivr sbb scas ret cld adc cmp jns mov or ss pusha jbe mov or inc pop jo lcall sub push imul add sub push push aad call inc push imul adc xchg add sub push imul add xor je mov add dec jae mov testb inc mov push jb mov insb xchg std adc push push int (bad) or xor jbe popf mov fsubr add sub push push int3 loope or inc pop insl (bad) xchg lods mov cmp js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add cs pop outsl test std adc cmp cmpsl mov and dec popa jne sahf mov fdiv pop sbb inc pop jb popf mov fdivp or ss pop jbe sahf mov adc mov push sub push nop movsl mov and dec popa jbe mov push sbb inc pop outsl xchg add sub push imul (bad) adc cmp jns mov or inc pop outsl adcl sbb inc pop outsb sbbl adc cmp push into jecxz (bad) aas popa mov dec pusha je popf mov (bad) add daa cmp jne mov or das inc pop insl adcl mov dec pop jb cwtl lods ret pop and (bad) scas (bad) hlt pop cmp adcb or xor insb (bad) xchg stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc or xor jno lcall xor je popf mov jecxz mov dec pusha je pushf mov fdivp or aaa dec pop jne mov clc or aaa dec pop jae lahf mov fdiv push sbb inc pop insb (bad) xchg lods rcl add sub adcl and mov or xor pop jo lcall xor outsl xchg sbb inc pop jo cltd scas (bad) (bad) add (bad) mov pop sub jbe sahf mov (bad) add sub push push int3 fcomip pop sbb inc pop insl adcl imul add inc push stos rcl (bad) adc add imul mov and pop jno cltd lods ret fsubr add sub push imul or jae fwait mov (bad) or inc push insb adcb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jp mov or inc pop insl (bad) cwtl lods rcl std adc ds addr16 cmpsl mov cmp ja scas aam mov dec pusha jae pushf mov xlat in add cmp arpl mov or sbbl push sub nop movsl mov cmp lcall mov pop jns mov push scas (bad) hlt adc cmp jp daa mov jnp ret sub xchg mov (bad) and mov push dec jb mov jmp inc push mov stc and nop mov sti pop inc mov arpl push jbe shr xor lahf ret jmp movsl lret ss jge enter jne mov js shl sub out push cmp mov insb xchg mov push inc imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call stc sbb cmc sbb arpl inc push mov sti push inc arpl jp les out adc pop jle (bad) jmp aaa pop jg leave in adc pop andb stos (bad) hlt sbb cmp test lock jp mov jo mov std and movsl int3 lock aad mov cld push inc xchg pop andb mov negb aas popa subl xchg xchg xchg xchg mov push sub xchg mov outsl xchg mov jae mov jp push cs jp (bad) jmp cmp leave in adc pop andl mov cwtl mov pop jge mov pop jg mov test popa jg mov jle mov pop andl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov push js mov pop jle mov jns mov insl xchg mov add ds jg mov pop jl mov popa test add cmpsl enter dec gs lahf mov dec arpl sbb push jbe mov out or inc jbe mov out push sub pop xor (bad) out and pop js mov jmp push and inc push gs cltd stos mov adc inc bound mov inc add jg mov stc or sub dec pusha jb xchg movsl mov fldpi cld or fs cwtl test call and inc push addr16 fwait lods mov sbb dec pusha jno xchg movsb mov fsubr sti or cs push bound xchg cmpsl mov mov inc push fs cltd stos mov adc xor pop push mov hlt add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp insb jge mov cli or jae xchg cmpsl mov push pop xor fs cwtl stos mov adc xor mov icebp add jnp popf scas mov adc insl jg mov clc or jae xchg cmpsl add adc xor push push mov adc mov clc adc cmpsb (bad) sbb mov lock inc arpl adc mov dec push stc adc test loopne pop cmp xchg mov jmp ja mov jmp jbe mov out push cmp movsl rcr adc inc pusha jnp mov jmp and jb test out push daa cmp insb jge lahf mov shl cmc push pop sub dec pop outsb jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp clc or sub dec pop jo xchg movsb mov xlat call ds bound lcall adc jnp sahf scas rcl repz daa cmp insb jge mov cmc pop sbb cmp insl jg mov stc or adcl or addr16 lcall adc mov icebp add aaa dec pop imul rcl hlt add dec pop jo xchg mov stc or sub dec pop jo xchg mov stc or fs cltd stos mov adc xor push push mov adc mov add jl sahf scas rcl cmc push pop sub dec pop outsb jg mov cld or arpl test lret decb and inc push fs cwtl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fucomp call and pop imul loop add es dec pop imul rcl repz daa cmp imul (bad) clc or sub dec pusha jno xchg cmpsb mov fldl2e cld or arpl test lret std push pop xor fs cwtl test call add inc pop imul loope add pop jo xchg movsb mov xlat jmp ds popa jb xchg cmpsb mov (bad) cld or arpl cmpsl mov push and inc push addr16 lcall adc mov add xor int3 in or inc popa andb pop insb jge mov clc or sub dec pop jo xchg movsb mov xlat jmp ds popa jb xchg cmpsb mov loope sbb pop js mov lock sub xchg daa inc andl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sbb pop ja mov out or stos leave out and bound sbb push jb lods shr stc or adcl das inc push bound cmpsl mov push pop xor outsb mov push outsl mov aas pop jns mov icebp adc je xchg cmpsl mov mov inc push gs cltd stos mov adc cmp adcb stc or sub dec pusha jb xchg cmpsl mov mov inc push gs cwtl stos mov adc xor js lcall adc mov add or arpl test lret decb and inc push data16 cltd stos mov adc xor js lcall adc jl sahf mov shl hlt push pop sub dec pop insb jge movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub dec pusha jno xchg movsl mov fsubr cli or cs push bound xchg cmpsl mov adc xor data16 cltd stos mov adc xor js lcall adc xor push imul leave (bad) or fs lcall adc mov icebp add and jnp popf scas rcl add sub dec pop outsl adcb stc or das inc push arpl test lret decb and inc push gs cwtl test add and inc push addr16 lcall adc xor push imul loop pop sbb cmp adcb clc or sub xchg mov stc or aas push popa jb xchg cmpsb mov fucomi (bad) adc push lods rcl repz pop insb jge lahf mov out and pop insl jle mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or sub dec pop outsl adcb sti or arpl test lret (bad) push xor insl mov xor in adc push jno mov lock push jno mov repz (bad) repz aaa pop jp mov test in decb and inc push data16 lcall das inc push arpl lcall adc mov mov (bad) or sub dec pop outsl adcb stc or sub dec pusha jno xchg movsl mov (bad) call and inc push addr16 fwait mov xlat jmp aas push bound xchg cmpsl mov mov inc push gs cltd stos mov adc jge mov (bad) or sub movsl mov fldl2e cld or fs mov clc or sub dec pusha jno xchg movsl mov fsubr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and inc push data16 lcall adc jnp sahf scas rcl hlt add pop insl jg mov clc or xor addr16 fwait lods mov adc aaa dec pop imul ret cmc pop sbb cmp adcb cli or jae xchg test lret fucomp call and inc push addr16 fwait lods mov das inc push arpl xchg (bad) sub xchg cmpsb mov fldl2e cld or gs cltd stos mov adc mov repz es dec pop imul leave fucomi std mov inc push gs cltd stos mov adc aaa dec pop push lea cmc push sbb cmp dec pusha jb xchg cmpsb mov (bad) cld push pop xor fs cwtl test call and mov icebp or xor gs cltd stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fcomip add and inc pop push mov hlt push pop sub dec pop outsb jg mov sti or arpl xchg test (bad) adc xor insl jg mov (bad) or sub mov stc or sub push bound xchg cmpsl mov mov inc push data16 cltd stos mov adc xor push addr16 fwait lods mov and pushf scas rcl testb sub dec pop outsl adcb stc or test in decb and xor mov hlt add pop outsl adcb (bad) adc xor ja lcall adc mov add es add jg movsb mov fsubr cli or aas push bound xchg cmpsl mov push pop xor arpl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldl2e sti or fs cwtl test add and inc push imul loope add es dec pop push lea repz cmp imul rcl hlt add bound cmpsl mov mov inc push gs cltd stos mov adc xor push addr16 fwait lods mov adc mov push pop sub dec pop insl jle mov (bad) or das inc push fs cwtl test add and fwait lods mov adc cmp insl jle mov clc or sub dec pop jo xchg movsb mov fsubr cli or aas push popa jb xchg cmpsb mov fdivp add and push push rcl hlt add pop insl jg mov clc or sub dec pusha jno xchg movsl mov fldpi cld or arpl test lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fucomi add and test add and push push mov adc imul ret cmc push sbb cmp jo xchg mov cli or adcl or das inc push push mov adc aaa dec pop imul ret aad clc or sub dec pop jno xchg movsl mov fsubr sti or das inc push arpl cmpsl mov mov inc push gs cltd stos mov pop sub mov cli or test jmp or fs cwtl test add and popf scas rcl hlt add dec pop jo xchg mov or sub dec pop outsl adcb stc or sub dec pusha jno xchg movsl mov fsubr std push pop xor fs cwtl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out call add jl sahf scas rcl hlt add pop insl jle cmpsb mov (bad) cld push pop xor data16 lcall adc mov repz cmp imul ret cmc pop sbb cmp jg mov cli or cs push jne cwtl stos mov adc xor push push fucomi std mov inc push data16 lcall xor mov es pop jnp mov icebp or mov add mov inc popa jg mov push jno scas int3 ljmp mov test jmp or fs mov icebp add and jp popf scas mov adc imul mov aad (bad) or sub pop jo xchg lods mov adc ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jnp popf scas rcl repz daa cmp insb jge lahf mov shl (bad) or sub mov cli or adcl or cs push bound fwait lods mov adc ss add adcb stc or sub dec pusha jno xchg movsl mov fsubr sti or das inc push bound cmpsl mov mov inc push fs cwtl stos mov adc inc pop imul jecxz add pop insl jg mov clc or sub dec pusha jno xchg movsl mov fsubr cli or xor fs cwtl test call and inc push data16 lcall sbb cmp jg mov clc or sub dec pop jno xchg cmpsl mov push pop xor fs cwtl test call and inc push data16 cltd stos mov adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jns fwait mov aam stc or sub dec pusha jb xchg movsl mov fldl2e sti or arpl test lret fsubr call and inc push addr16 fwait lods mov adc ss pop imul add sbb xchg mov stc or adcl cld or arpl cmpsl mov adc xor ja lcall adc xor push push mov adc (bad) xchg movsb mov fsubr sti or xor fs xchg test lret fsubr add adc mov repz daa cmp insb jge mov testb sub dec pop outsb adcl cmp insl jle mov (bad) or sub mov cli or test out call and inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call js fwait lods mov adc jnp popf scas (bad) xlat jmp inc push bound xchg cmpsl mov push pop xor data16 lcall adc xor push addr16 fwait lods mov adc mov add mov inc test xor fs cwtl test add and fwait lods mov adc ss jae xchg cmpsl mov adc xor data16 cltd stos mov adc xor push addr16 pushf lods mov adc ss pop imul rcl cmc pop sbb cmp pusha jb xchg cmpsb mov (bad) std and popa jg mov pop andl push mov adc ss pop push mov cmc adc dec outsl mov add cmp xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl and jge mov (bad) or sub xchg cmpsl mov adc xor push push (bad) fldl2e sti or das inc push bound xchg cmpsl mov mov inc push data16 lcall adc aaa dec pop imul rcl cmc push pop sub dec pop insl jle mov testb sub dec pusha jb xchg cmpsb mov fldl2e cld or bound xchg test lret fsubr decb and inc push fs xchg test lret std push and inc push fs xchg test lret out add and fwait lods mov sbb push imul mov shl testb sub dec pop insl jle mov testb sub dec pop outsb jg mov (bad) or sub movsb mov xlat call ds popa jb xchg movsl mov fucomp call and inc push data16 cltd stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fsubrp add and push push mov push daa cmp insb jge lahf mov shl cmc pop sbb cmp adcb clc or sub dec pop jo xchg cmpsl mov push and inc push data16 lcall adc xchg mov ljmp test in std push pop add inc push addr16 lcall adc aaa dec pop outsl adcb cli or cs push arpl cmpsl mov mov inc push fs xchg test lret decb and inc push addr16 lcall adc xor push push mov adc cmp insl jg mov (bad) or sub pop jo xchg cmpsb mov (bad) cld or arpl cmpsl mov push pop xor fs xchg test decb and inc push gs cwtl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl daa cmp imul rcl cmc push pop sub dec pop insl jle mov (bad) or sub dec pop outsl adcb clc or sub push popa jb xchg movsl mov fldl2e sti or das inc push bound stos mov adc (bad) mov adc pop imul rcl (bad) or sub jnp mov stc or cs push data16 lcall adc ss pop push xchg mov add and pop jl mov push outsl mov xor xchg das dec push hlt adc dec data16 lahf mov dec push (bad) sbb push je mov jmp and mov icebp push sub test xor outsl mov inc pop jge rcr sbb push jne mov lock scas fdivr sbb push outsb adcl cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl arpl test lret decb and inc push data16 lcall adc mov cmc push sbb cmp (bad) xchg cmpsb mov fdivp add and inc pop push mov clc or sub dec pusha jb xchg test cmp push jno scas lret call jnp mov dec imul xor (bad) cmp xchg mov in or dec insb mov dec outsl xchg mov negl cmp mov dec push (bad) sbb push outsb mov xor test inc pop jl mov pop es mov lods int3 ljmp mov push jne mov jmp sub imul mov repz jns mov push mov stc sbb pop jge shl and mov lods (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec out adc push jo mov repnz push jg shl and mov push jb mov arpl push cmp loopne push xor jle movsb mov fnop add sub mov add cmp test lcall cmp sbbb or jl mov add cmp test clc or xor imul mov fsubr add sub pushf mov fucomi add daa cmp jne fwait scas rcl cli or xor outsb adcl pop insb adcl pop insl addl in or xor jo scas (bad) repz pop jnp ret in sub (bad) mov cmp xchg stc or insl adcl insb fwait mov fdivr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc xchg cli or insl adcb sbb jl mov add jne fwait scas rcl add sub popf mov xlat ljmp jno xchg stos mov push xor adcb sbb jge movsb mov loopne pop sbb inc push imul dec outsb sarl push adc pop jp mov dec jno mov cld sbb xlat sti push push jbe mov mov sbb pop jg (bad) in sub (bad) mov negl cmp mov push jne mov stc push inc xchg pusha andl je mov jno mov cld pop inc test push jb mov sti sbb (bad) call xchg mov (bad) and jg mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp mov hlt adc push jno scas into out or cmpsl enter dec outsl pushf mov andl test inc test inc data16 dec je mov clc sbb pop jns mov pop jns mov pop jl mov pop jle mov test or dec imul jecxz or jnp mov add cmp mov and xchg add jae cltd lods mov sbb jl mov add cmp jae fwait scas rcl cli or pop outsl (bad) lcall pop xor jge mov add cmp test clc or xor jle movsb mov fnop add jae cltd lods mov push xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl insl adcb add arpl jns sahf mov xlat ljmp jno xchg stos mov sbb inc push addr16 lahf mov xlat ljmp insl adcb add cs push push enter adc cmp jae lcall pop xor insb jg movsl mov sbb ds arpl sahf mov xlat ljmp jo cwtl stos mov and dec pop jno cwtl lods rcl stc or insl adcb sbb mov dec popa je pushf scas ret cld push and pop insl adcb fdivr sbb pop jge mov inc sub add inc gs jbe (bad) sub arpl push jae mov sub pushf mov (bad) jmp dec pop outsl (bad) xchg test into loope pop sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl in push sbb push push enter adc cmp jae lcall pop xor insb jg movsl mov sbb ds fs sahf mov xlat ljmp jb cwtl stos rcl sti push and pop insl adcb push sbb push gs lahf mov fldlg2 call and test clc or xor insb jg movsl mov sbb ds fs mov jmp adc popa andl xchg stc or xor pop insl adcb push xor mov push jno mov repz cmp fnop push xor aad sbb mov add cmp test notb and dec pop jo xchg test or cs push data16 lahf mov fsubr (bad) adc ss pop outsl (bad) xchg stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb inc push data16 lahf mov xlat ljmp outsl adcl sbb pop jp mov pop jns mov pop jle mov pop jl int or stos lret ljmp (bad) out and ret jecxz and (bad) mov push jp mov dec insb mov cmp jbe mov jmp es pusha jle mov pop js stos mov xor xchg stos mov push xor jge mov add sub arpl pushf scas ret sti push and pop insl adcb add addr16 mov push sbb push data16 lahf mov fldpi (bad) adc test (bad) or inc push push enter pop sub pushf scas ret sti push and pop insl andb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fnop add sub arpl pushf scas ret cld mov dec pop outsb adcl inc push imul add cmp jae cltd lods rcl stc or xor jno xchg stos mov sbb inc push imul add sub fwait scas rcl add adc dec pop jo xchg test or das inc push push (bad) (bad) add xor pop jo xchg test or inc push imul add je lcall pop xor imul mov fnop add sub push fs popf mov fdivp add fs popf mov (bad) call inc pop insb jg movsl mov push sub bound lcall and pop outsb adcl push data16 movsl mov or das inc push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add daa cmp jae cltd scas rcl cli or insb jg movsl mov pop sub pushf scas ret sti push and addr16 mov add pop outsb adcl push push nop mov and dec pop jo xchg stos mov sbb inc push push (bad) (bad) add cmp jbe sahf mov xlat ljmp outsl (bad) xchg test into loope pop sbb mov call and dec pop jno cwtl stos mov sbb inc pop imul mov in or insl adcb sbb push outsb adcl jne fwait scas ret cld mov dec pop jo xchg stos mov sbb inc push push call dec pop jo xchg stos mov pop xor insb adcb pop sbb inc pop insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg cmpsb mov and dec pop jno xchg stos mov sbb ja popf mov xlat ljmp jo xchg test into loope or xor jge mov add jne popf mov (bad) jmp dec pop jno cwtl stos mov push cmp je lcall cmp xchg stc push and pop outsb adcb sbb inc push imul add sub push gs lahf mov (bad) or xor insb jg cmpsb mov sbb jle movsb mov sbb nop mov add sub mov add sub push fs pushf mov fdivp add sub pushf scas ret cli or insb jg movsl mov pop sub fs pushf scas ret sti or imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc xchg sti push and pop insl adcb add sbb inc push imul add jae cltd lods mov sbb jl mov add es pop jo xchg stos mov push xor jge mov add cmp test (bad) or jl mov sub dec popa je fwait scas rcl add data16 mov dec pusha jb cwtl stos mov sbb inc push push (bad) fsubr (bad) adc dec pop outsl (bad) xchg test int cmc or cs push addr16 mov push sub dec bound fwait scas rcl cli or insl adcb push sbb push gs sahf mov fldlg2 call and test cmc or cs push data16 cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub push fs popf mov (bad) jmp dec pop jo xchg test or cs push addr16 lahf mov leave fsubr add je cltd lods mov push xor jo xchg test or xor imul out add cmp test (bad) or inc push push (bad) fldlg2 call and adcl sbb ds fs popf mov xlat ljmp outsl (bad) xchg test pop sbb inc push addr16 lahf mov fsubr (bad) adc ss pop jo xchg stos mov sbb inc push imul sbb inc push push enter adc je cltd lods rcl cli or insb (bad) xchg test into loope pop sbb mov std adc xor fwait scas rcl stc or xor imul mov fnop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push sub pushf scas rcl cli or imul mov fsubr add jae cwtl stos mov sbb inc push enter push sub push fs sahf mov xlat ljmp shr or inc data16 stc or xor popa mov add cmp jbe fwait scas rcl sti push and pop insl adcb add sub bound pushf scas ret sti push and pop outsb adcb or xor imul mov push sub bound lods rcl stc or xor push nop mov add cmp jb cwtl stos mov push xor jge cmpsl mov sbb push gs sahf mov xlat ljmp outsl (bad) xchg test into loope push sbb push gs mov add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg stc or xor jo cwtl stos mov push xor jle movsb mov fnop add sub push data16 lahf mov fsubr add and test (bad) or xor jge movsl mov sbb pop mov dec outsb xchg mov cld sbb mov jne mov outsb nop mov clc sbb pop jl ret and pop movsb enter push push nop mov add sub push gs popf mov xlat ljmp outsl (bad) xchg test into loope push sbb cwtl stos mov push xor jge movsb mov fcomip add fs pushf scas ret sti push and pop insl adcb add sub push arpl pushf scas ret sti push daa cmp je pushf scas ret sti push and pop insl adcb add fs popf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc ss pop outsl (bad) xchg test into loope push sbb mov adc test (bad) or jge mov add je lcall and pop insl adcb add sub push arpl pushf rcl sti push and pop insl adcb add fs popf mov (bad) jmp adc test cmc or cs push addr16 lahf mov fsubr std adc ss pop jne pushf scas ret cli or insb jg cmpsl add sbb jl mov add cmp xchg sbb jge movsb mov fdivp add xor pop outsl lea push je mov out and (bad) in and arpl and (bad) mov jno mov negb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pushf mov xchg inc bound adc cmp je lcall sub push gs sahf mov xlat ljmp popa je lcall and xchg test into loope pop sbb mov (bad) adc dec pop adcl inc push push leave fsubr add sub bound fwait scas rcl sti push and pop insl adcb add gs sahf mov xlat ljmp adcb sbb push gs sahf mov xlat ljmp outsl (bad) xchg test into loope or cs push addr16 mov add je lcall cs push addr16 mov add cmp jae cltd lods rcl stc or xor imul mov loopne push sbb push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov std adc ss pop outsl (bad) xchg test fnop add sub bound fwait scas rcl cli or insl adcb pop sbb mov (bad) adc ss pop outsl (bad) xchg test into loope pop sbb xchg movsb mov pop sub lahf mov fsubr std adc dec pop jo xchg test or sub mov std adc ss pop outsl (bad) xchg cmpsl mov sbb dec bound fwait scas rcl sti push and pop insl adcb push sbb push gs sahf mov xlat ljmp jo xchg stos mov push xor jle movsb mov fsubr or inc push imul add cmp jae lcall pop xor jge movsl mov or sub mov (bad) adc ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl outsl (bad) xchg test aam sti push and pop insl adcb push sbb mov add cmp test clc or xor jge mov add jae lahf mov fsubr (bad) adc cmp jae cltd stos mov sbb jnp mov call and test cmc or inc push push enter adc cmp mov mov dec pop outsl (bad) xchg test into loope pop sbb mov lock sub bound popf mov (bad) jmp dec pop outsl (bad) xchg cmpsl mov daa cmp je lcall and inc pop insb jg cmpsb mov sbb ds data16 lahf mov fsubr (bad) adc dec pop jo xchg test or cs push addr16 mov push sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas push data16 lahf mov fsubr std adc test (bad) or xor jge mov add sub bound fwait scas rcl cli or insb jg mov fdivp push sbb push data16 mov repnz gs sahf mov fsubr (bad) adc dec pop outsl (bad) xchg test into loope pop sbb mov add daa cmp js sahf mov xlat ljmp outsl (bad) xchg test into loope push sbb push data16 lahf mov fldpi (bad) adc dec pop jae cltd lods mov sbb jge mov add inc pop insl adcb add fs popf mov (bad) jmp dec pop jno xchg test or sub mov std adc ss pop outsb adcl arpl pushf scas ret (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec pop outsl (bad) xchg cmpsl mov sbb push fs popf mov aad sti push and inc pop insb jg movsb mov fucomp add jae cltd mov (bad) add daa cmp test (bad) or inc push test in call and inc push data16 lcall xor push ret (bad) or inc ja scas add aad (bad) or sub xchg movsl mov fldl2e sti or arpl test lret decb and pushf lods mov adc aaa dec pop push lea cmc push pop das inc push fs xchg test lret std mov inc push gs fwait lods mov adc ss pop push mov repz daa cmp insl jle mov testb sub dec pop outsl adcb add and pushf lods mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec pop push mov hlt add pop insb jge mov cmc push pop sub dec pop outsl adcb clc or sub xchg mov pop sbb cmp jg mov (bad) or sub mov xchg mov out or inc pusha jg mov dec fs scas int3 call jne scas lret sbb mov jmp clc push xor mov hlt add gs cwtl test add and fwait lods mov adc ss pop push mov repz sub dec pop outsb jg mov clc or sub dec pop jo xchg movsb mov xlat jmp inc push gs cltd stos mov adc xor addr16 pushf lods mov adc push lea repz daa cmp insb jge lahf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc shl cmc push pop sub dec pop outsb jg mov std push pop xor fs xchg test decb and inc push gs cltd stos mov adc xor push addr16 fwait lods mov adc dec pop push lea hlt add pop insb adcl sub adcl or adcl decb and inc push fs cwtl test icebp add and inc pop imul loope add es dec pop outsb jg mov stc or sub (bad) xchg movsb mov xlat call aas push popa jb xchg cmpsb mov fldl2e sti or bound xchg cmpsl mov push pop xor data16 cltd stos mov sbb lahf mov (bad) out or sub dec pop jno xchg movsb mov fsubr cli or adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out call and push push mov adc mov pop sbb cmp outsl adcb stc or sub dec pusha jae xchg cmpsb mov (bad) cld or fs xchg test lret fsubr decb and inc push fs cwtl test call and inc push data16 movsl ret sub pop jo xchg movsb mov fsubr cli or aas push popa jb xchg cmpsb mov (bad) cld or arpl test add fdivp add and inc push push rcl hlt add pusha (bad) cli or das inc push arpl cmpsl mov mov inc push gs cltd stos mov adc ss pop imul loope add es dec pop imul rcl hlt add popa jb xchg cmpsb mov fldpi cld or bound test call and inc push gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cltd stos mov adc xor ja cltd stos mov adc xor push addr16 fwait lods mov sbb cmp dec pusha jno xchg movsl mov fsubr cli or adcl or adcl cld or fs cwtl test call and inc push data16 popf scas rcl hlt add pop insb jge lahf mov shl cmc push pop sub dec pop insl jle mov clc or sub pop jo xchg mov clc or sub dec pusha jno xchg movsb mov fsubr cli add and inc push imul jecxz add pop outsb jg mov clc or sub pop jo xchg movsb mov xlat call cmp xchg movsb mov xlat call ds pusha jae xchg cmpsl mov push and inc push addr16 lcall adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push mov adc imul mov aam (bad) or sub mov clc or sub dec pop jno xchg movsb mov xlat in std push and inc push fs cwtl stos mov adc ss pop imul loope add imul rcl cmc pop sbb cmp adcb cmp jns mov push outsl mov cmp xchg mov ljmp rcr sbb pop jbe mov out or inc insb mov xor shr or dec sbbb dec insb lea test inc pusha jg mov dec insb xchg cmp cwtl stos mov adc mov repz pop insb jle mov sti or arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp decb and inc push addr16 fwait lods mov adc ss pop imul loop add cmp imul rcl cmc push pop sub dec pop insl add out add and inc push data16 lcall adc mov add push mov testb sub dec pop outsb jg mov (bad) or sub cmpsb mov (bad) cld or arpl test lret std mov inc push data16 cltd stos mov adc xor addr16 lcall adc mov add cmp mov inc popa jg mov push jns lahf mov shl testb sub mov stc or adcl adc insb jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl in pop sbb cmp jg mov clc or sub dec pop jo xchg movsb mov fsubr cli or cs push arpl cwtl test call and inc push addr16 fwait lods (bad) out push pop xor gs cltd stos mov adc xor push addr16 fwait lods mov push sub outsl adcb cli or aas push popa jb xchg cmpsb mov (bad) std push pop xor fs pushf scas mov adc insl jle add or das inc push bound cmpsl mov push and inc push fs cwtl test call and inc push data16 cltd stos mov adc jg mov clc or sub dec pop jno xchg movsl mov fldl2e sti or cs push bound xchg cmpsb mov (bad) cld or gs cltd stos mov adc xor push addr16 fwait (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sbb cmp adcl das inc push arpl (bad) and inc fs movsl mov mov inc push gs cltd stos mov adc xor push push mov dec pop jno lods rcl hlt push pop sub dec pop outsb adcb clc or sub dec pusha jno xchg movsl mov out or sub dec pop jno xchg movsb mov fucomi add and dec pop push xchg test cmp insl jle mov (bad) or sub movsb mov fsubr cli or aas push bound xchg cmpsl mov adc xor push push mov adc ss pop outsl adcl sub test jmp push pop xor data16 lcall adc inc pop imul loop add daa cmp insb jge lahf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in or test in call and inc push data16 lcall sub dec pop imul xlat out pop pop es push data16 xchg movsl mov aam cmc add push fs xchg mov push push es push data16 xchg movsl mov aam cmc add push gs xchg movsl mov aad cmc add push addr16 cwtl cmpsl mov xlat out pop push daa aaa inc push addr16 xchg cmpsl mov xlat out pop pop daa aaa inc pop jbe mov out sbb push insb mov mov in or inc pop jl mov call js mov in or shr or mov ljmp mov repz dec imul jge mov ljmp mov cmp mov and pop jbe lods enter xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov inc pusha jle mov out or inc pop jl mov in or mov in pop and pop jne mov cmp rcr push xor test xchg scas rcl lock and inc push pusha jo (bad) lahf scas mov push push sub mov out or sub dec pop imul fsubr clc or sub dec pop push mov (bad) out push adc fs xchg mov repnz and inc push arpl xchg mov repz sub dec pop imul fld1 clc or sub dec pop push mov xlat out pop pop daa aaa dec pop push mov xlat out pop push es push gs xchg movsl mov aam cmc add push fs xchg movsb mov aam or sub dec pop imul lods mov or sub dec pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or sub dec pop imul stos mov decb pop outsb jg mov repnz and inc push popa jno xchg test clc or sub dec pop addr16 cwtl test enter or sub dec pop push mov fldl2t stc or sub dec pop addr16 xchg cmpsl mov fsubr clc or daa aaa inc push addr16 xchg cmpsb mov (bad) out pop pop daa aaa dec pop ja cltd test cld or sub dec pop imul lods mov or sub dec pop push mov call aaa inc push data16 xchg cmpsb mov aad cmc add push data16 xchg cmpsb mov aad cmc add gs xchg cmpsb mov (bad) out push push es xchg out add push data16 xchg cmpsl mov xlat call cmp imul fucomi sti or sub dec pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov repnz and inc push bound xchg cmpsb mov (bad) out or sub dec pop push mov pop pop daa aaa inc push addr16 cwtl test (bad) xlat out pop pop daa aaa inc push addr16 cltd test clc or daa aaa inc push data16 xchg cmpsb mov or sub dec pop insb jl pushf stos mov or sub jge popf lods mov push sbb insl jge popf lods mov push push cs dec pop outsb jg lahf scas mov nopl inc push popa js cwtl test cli or sub dec pop imul stos mov or sub dec pop insb jnp fwait stos mov or sub dec pop imul fldl2e cli or sub dec pop imul stos mov or sub je xchg mov repz and inc push fs xchg mov hlt add and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg out push pop es push data16 xchg cmpsl mov xlat call aaa inc push addr16 cwtl test enter sbb xchg mov hlt add and inc push data16 lcall std or pop outsb jle popf scas mov push sbb insl jge sahf scas mov push push xor test inc pop jnp mov lock lahf mov push outsb mov cmp lods leave out pop cmp icebp cvttps2pi xchg das dec push cmpsb rcr adc cmpsl (bad) (bad) sbb pop jns mov jmp and (bad) out push cmp jne stos (bad) (bad) push xor mov sub jge mov inc arpl mov lock mov out or inc arpl adc dec push movsb rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call movsb rcr sbb push jae scas or dec test cmp int3 ljmp mov dec arpl mov jmp jnp xor mov dec insb mov cmp xchg scas int3 call js mov add push sub cmpsl cli sbb dec push mov sub mov jnp mov in or inc test dec sbbb adc xor push fs xchg mov repnz and inc push pusha jo (bad) lahf scas mov push add xor pusha outsl jg lahf scas mov nopl ds pop outsb jge popf lods mov pop insb jl pushf lods mov or test xor sbb push stos (bad) loope adc inc bound scas lret sbb dec sbbl push outsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl or test fdiv adc inc sbbw insl xchg sbb dec fs lods (bad) fcomip adc inc pop jae movsb mov inc pop jno xchg mov lock xor insb jl (bad) lahf scas mov or pop insb jge pushf lods mov or sub dec pop push mov jmp cmp addr16 cwtl test enter pop pop daa aaa inc push data16 xchg movsl mov xlat cmc push push es push gs xchg movsb mov shl repnz and inc push pusha jo nop mov lock pop das ds pop outsb jge popf lods mov or sub dec pop push mov call aaa inc push addr16 cltd mov nopl ds pop outsb jle popf lods mov or sub dec add jle sahf lods mov or pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp fwait stos mov or pop insb jnp fwait stos mov or sub dec pop jns fwait stos mov or sub dec pop imul stos mov or sub dec pop imul lret fucomi sti or sub dec pop push mov call aaa inc push addr16 xchg cmpsb mov (bad) out add insb mov testb es nop stos (bad) loopne push es push data16 xchg add testl push gs xchg movsb mov aad cmc add push fs xchg mov push pop daa aaa inc push data16 xchg cmpsb mov aad cmc add push arpl xchg mov repz and inc push arpl xchg mov icebp add and inc push pusha jo nop mov out decl pop cs pop outsb jle sahf mov push sub inc push addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl out or stos ret (bad) adc mov es pop jb cmpsl (bad) (bad) adc dec bound and jae test das dec sbbl mov ljmp cmpsl (bad) add inc popa jl mov in sbb dec insl xchg sub js mov jmp and pop jbe stos ret (bad) adc dec imul call pop js scas lret mov sub jnp mov out sbb outsb jle popf lods (bad) fnop adc pushf lods rcr adc xor arpl movsb mov aad cmc add push fs xchg mov repnz and inc push popa jno nop mov out decb pop insb adcb icebp add and inc push pusha outsl jg lahf scas mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec pop imul stos mov or sub dec pop push mov (bad) out pop pop daa aaa inc push data16 xchg movsl mov aam hlt add and dec pusha test fsubr std or pop insb jl fwait stos mov or sub dec pop push mov jmp cmp addr16 xchg cmpsb mov (bad) in add push fs xchg mov repnz push fs xchg movsb mov shl repz and inc push pusha jo nop mov out decl push cs pop insl jge popf lods mov or sub dec pop push mov ljmp pop imul (bad) cli or sub dec pop imul fsub testl push data16 xchg movsl mov (bad) out add push fs xchg mov in add push arpl xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add and inc dec pop outsl adcl and inc push popa jno nop mov out decl pop das ds pop outsb jle popf lods mov or sub dec pop imul stos mov or sub dec pop imul xlat out pop pop daa aaa dec pop push mov jmp cmp addr16 xchg cmpsb mov (bad) in pop pop es push gs xchg movsb mov shl repz and inc push bound xchg mov out decl pop cs pop insl jge pushf lods mov push and inc push pusha outsl jg sahf scas mov push push sub jge pushf lods add adc inc pop jp mov xlat out pop pop daa aaa inc push data16 xchg cmpsl mov xlat out push push and je xchg movsb mov fldl2t stc or sub inc push addr16 xchg cmpsb mov aad cmc add push arpl xchg movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc xor bound xchg mov lock pop das aas dec pop outsb jle sahf lods mov or sub dec pop imul lods mov push push sub jge pushf lods mov or sub dec pop push mov call aaa inc push data16 xchg movsl mov (bad) out add push fs xchg mov repnz and inc push imul pop daa aaa inc push data16 xchg cmpsb mov aad cmc add push data16 xchg movsl mov aam hlt add and inc push bound xchg mov lock pop das aas dec pop outsb jge popf lods mov or das aas push popa jo nop mov lock pop das aas dec pop outsb jge popf lods mov decl pop das ds pop outsb jle popf lods mov or sub dec pop insb jl fwait stos mov or sub dec pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov ljmp pop push mov xlat out push push es push data16 xchg cmpsb mov (bad) in add push fs xchg mov repnz and inc push popa jo nop mov out decb sbb insb jl mov lock and aas dec pop outsb jle popf lods mov or sub dec pop imul xlat out push push es push gs xchg movsb mov aad hlt add and inc push bound xchg mov lock and aas dec bound xchg mov icebp add and inc push popa jo nop lahf scas mov adc xor pop outsl jg sahf scas mov or sub dec pop imul stos mov or daa aaa inc push data16 xchg movsl mov aad testb addr16 xchg cmpsb mov (bad) out add push fs xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp repnz and inc push popa jo nop mov out add and inc push pusha jo add loope add and inc push pusha jo (bad) lahf scas mov adc xor pusha jo nop lahf scas mov push pop das aas dec pop outsb jle sahf lods mov or pop insb jnp fwait stos mov or sub dec push addr16 xchg cmpsb mov aad hlt add and inc push gs xchg cmpsl mov xlat out push adc fs xchg mov icebp add and inc dec pop outsl jle sahf lods mov or sub dec pop insb jl fwait stos mov or sub dec pop imul fsubr testl push imul jno xchg mov repnz and inc push popa jno xchg mov icebp add and inc pop insl jl popf lods mov or sub dec pop imul stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) sti or xor pusha jo nop mov lock pop das aas push pusha jo nop mov out decb push sub jl pushf lods mov or cmp pop insb jge popf lods mov or sub dec pop imul stos mov push xor adcl icebp add and inc push pusha jno xchg mov icebp add and inc push pusha jo (bad) lahf scas mov or pop imul stos mov sti or sub dec pop imul fucomp std or pop insb jnp fwait stos mov or sub dec pop imul fsubr clc or cmp mov jecxz add sbb data16 xchg mov ljmp push pop jo mov hlt add and cmp xchg fucomip cld or daa ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jo lea in add push sub dec pop data16 xchg mov jmp xor pop insl jl cltd cmpsl mov shl lock pop push mov into fsubr stc or and insl jl cltd test (bad) icebp decl sbb cmp data16 xchg mov ljmp push pop insl jnp cwtl cmpsl mov shl lock push fs nop sahf lods mov pop push es jle fwait stos mov cmc add and ds pop push xchg fsubrp sti or es jge lcall add pop sub jbe xchg mov ljmp dec pop insb jp xchg cmpsb mov aad repnz sbb data16 xchg mov jmp or and outsb jge lcall add push sub dec pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp test fsubr stc pop push and insl jl cltd test (bad) aad repnz push sub dec pop addr16 xchg movsb mov rcr in cld or daa ss push bound lea hlt add and cmp xchg fucomip cld or sub inc push bound mov repz pop cs pop push mov into fucomp cli or es (bad) xchg lahf scas mov push adc xor pop insb jnp cltd test fdiv or inc pop je mov sbb pushf mov in adc jge scas leave jecxz sbb push imul pop cmp test sbb pushf mov out adc xchg scas leave loopne decl pop data16 xchg mov lock push gs nop lahf lods mov add dec pop push xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sti or sub inc push arpl (bad) popf lods mov add and ds pop push xchg fucomip cld or sub inc push jo and dec pop push mov iret fsubrp cld or daa ss push bound xchg scas (bad) fcomip adc inc pop jb push and mov shl out std or sub inc pop imul rcr out cld or sub inc push bound mov hlt add and cmp xchg in cli or es push popa jno mov out add and cmp test jmp or sub inc push arpl (bad) popf lods mov add and ds pop imul movsl mov rcr out cld or sub inc push bound mov hlt add and cmp xchg shl out std or sub dec push gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fucomi cli or es jge lcall add sbb gs xchg lahf scas mov pop adc pop insl jnp cwtl cmpsl mov shl icebp decl sbb cmp data16 mov add push sub jns xchg test repz and ds pop push xchg fsubrp cld or sub inc push arpl mov out add and ds pusha jns stos (bad) fcomip adc add jl mov aam icebp add sbb imul ret loop add push mov shl out std or sub inc push arpl (bad) popf lods mov add dec pop push xchg fucomip cld or sub inc push bound mov repz pop xor pop insb jnp lcall add sbb data16 xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fucomi clc pop adc pop insl jnp cltd cmpsl mov shl lock sbb cmp gs xchg mov jmp xor pop insb jnp cwtl cmpsb mov shl repnz push sub jbe xchg mov jmp or and jo mov hlt add pop cs pop push mov into fucomp cli or es push pusha outsb jge lcall add sbb add xchg loop add sbb data16 xchg mov jmp xor pop insb jnp cwtl cmpsb mov shl out decb sbb cmp gs xchg mov jmp xor pop insb jnp cwtl cmpsl mov shl lock push fs xchg mov out cld or sub inc push bound mov in add pop sub jbe xchg mov ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push and inc push pop insl jnp cwtl cmpsl mov aam repnz push sub dec pop addr16 xchg mov ljmp push popa jo lea hlt add and cmp xchg fucomip cld or sub inc push arpl mov out add and cmp xchg in cli or es jg popf stos mov stc or and outsb jge lcall decl push fs (bad) sahf lods mov add and cmp xchg fsubrp sti or daa xor jle pushf stos mov add pop sub jbe xchg mov loope decb push data16 xchg mov jmp xor pop insb jp xchg cmpsb mov shl out decb sub inc push fs (bad) sahf lods mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor pop imul cmpsb mov shl out decb sub inc push fs xchg mov jmp xor pop insl jnp cwtl cmpsl mov shl icebp add sbb data16 xchg mov jmp xor pop insl jnp cwtl cmpsl mov shl lock push gs xchg lahf scas mov pop push and inc push bound mov hlt add and cmp xchg fsubrp sti or es jle fwait stos mov add and ds pop imul rcr in sti or daa ss push popa jo lea repz and aas dec pop imul mov out add and aas dec pop push xchg fucomip cld or daa ss push popa jo lea repz pop sub ja xchg mov jmp or and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call outsb jl cltd test enter add pop cs pop push mov into fsubr stc or and jo lea repz push sub jbe xchg mov jmp or and insl jl cltd test (bad) lock pop data16 xchg movsb mov iret fsubrp sti or daa ss push popa jo lea in add and ds bound stos (bad) add adc xor pop imul movsl mov rcr out std or sub inc push arpl (bad) popf lods mov add and cmp mov loope decb push gs xchg lahf lods mov add and ds pop push xchg fucomp cli or es push pop outsb jl cltd test (bad) repnz sbb data16 xchg lahf scas mov pop push and outsb jl cltd test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl decb push fs nop sahf lods mov push adc xor dec pop imul movsl mov rcr out cld or sub inc push bound lea hlt add pop cs pop push mov shl lock sbb cmp gs nop lahf lods mov add and ds pop imul into fucomp cli or and insl jge lcall decl sbb cmp gs xchg lahf lods mov add dec pop imul cmpsl add add push sub ja xchg mov jmp or and outsb jge lcall decl sbb cmp gs xchg mov call xor pop insl jl cltd cmpsl mov shl lock pop addr16 xchg mov ljmp dec pop insb jnp cwtl cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loopne std or push gs nop lahf lods mov add and ds pop imul iret fsubrp cli or es push pusha outsl jge lcall add and aas dec pop push xchg fucomip sti or daa ss push popa jo lea in add push sub dec pop data16 xchg mov add pop sub jo mov fucomp clc push adc cs push gs lea loope cld or and inc dec pop push lods mov decl daa xor js xchg mov in decl daa xor js xchg mov jecxz std or daa xor js xchg mov jecxz decb daa xor dec pop push test (bad) hlt add sbb pusha outsb jnp xchg movsb mov int call sub inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov fsubr testl jle cltd cmpsl mov iret fsubr clc add dec push fs lea fsubrp stc push adc das cmp pop push stos mov add or daa xor js xchg mov in decl sub inc push pop insb jp xchg mov in add sbb aaa inc push pop insl jp xchg mov out add sbb aaa inc push pusha insl jnp xchg mov jmp das cmp orb fucomip cli or pop data16 (bad) pushf test in sti or and ds pop push stos mov cld or and push lods mov std or and push lods mov adc dec pop push stos mov std or and push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall loop std or and push lods mov decb daa xor push pop imul mov in add push pop insb jp xchg cmpsb clc push adc das cmp orb loopne sti or and aas dec pop push stos mov std or and imul (bad) aad lock or xor pop imul mov in add push popa ja test (bad) cmc add push sub inc push bound mov fsubr clc add dec pop addr16 (bad) popf stos mov sti or and aas dec pop push lods mov std or es dec pop push test (bad) jecxz add push arpl mov fucomp clc add dec push gs lea fucomip cli pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp orl or and imul enter decb daa xor push pop imul mov call sub dec push arpl mov fucomp clc push adc das cmp push fs lea fsubrp stc pop adc das cmp pop gs mov fucomip cld or and inc dec pop push lods mov std or es dec pop push test (bad) hlt add sbb popa outsl jl cwtl cmpsb mov iret fucomp clc add dec push gs lea fucomip cli or pop imul leave xlat in decl push pusha outsl jl cwtl cmpsb mov into fsubr clc add dec pop gs mov sbb xor jp xchg mov out add daa inc push fs lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fucomip cli or pop addr16 nop sahf stos mov decb sbb xor dec pop imul mov out add push sub adcl in add sbb cmp popa outsb jl popf mov loope adc mov or sub inc push bound mov fucomp clc add dec push gs lea fsubrp add push pop insl jp xchg mov out add pop sub inc push arpl mov fucomp clc push adc cs push fs lea fucomip cli pop adc pop addr16 (bad) popf stos mov decb sbb xor dec pop imul mov call sub inc push bound mov fsubr testl orb loopne sti or and aas dec pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp out std or xor pop imul enter decb push pop imul movsb mov int call sub jo mov fucomp stc pop adc das cmp orl or and push lods mov std or xor pop push test xlat in add imul ret or cmp jbe mov adc inc pop outsb test and push lcall inc pop jno mov and push push fdiv or xor popa ja xchg scas (bad) fucomi testl jle cltd cmpsl mov iret fucomp clc add dec push fs mov in cli pop adc pop data16 mov icebp decb daa xor dec pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl enter decb sub inc push pop insb jns xchg mov in add sbb ss push pop insb jns xchg mov in add sbb ss push pop insb jns xchg mov out add sbb aaa inc push pop insl jp cwtl cmpsb mov into fsubr testl jge cwtl cmpsb mov into fsubr testl push fs lea fucomp clc push adc cs push fs lea fsubrp stc push adc das cmp pop gs lea fsubrp stc or pop imul (bad) aad lock or es dec pop push test (bad) jecxz decb daa xor dec pop push test xlat in add push pop imul mov (bad) hlt add sbb popa outsb jnp xchg movsb mov int3 (bad) hlt add and jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl rcr in stc pop adc das cmp push gs lea fsubrp stc push adc das cmp orb fucomip sti or and ds pop addr16 (bad) pushf stos mov shl out sti or and aas dec pop addr16 nop popf stos mov decb daa xor dec pop push test xlat in add push pop insb jns xchg mov out add sbb aaa inc push pop insb jp xchg mov out add sbb aaa inc push pusha outsb jnp xchg movsb mov int3 (bad) cmc add sbb popa outsb jnp cltd cmpsl mov rcr jmp push adc das cmp push fs lea fsubrp sti or and ds pop addr16 (bad) popf stos mov sti or and aas dec pop addr16 nop popf stos mov cld or and aas dec pop push lods mov decb sbb xor push pop insb jp xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out add sbb aaa inc push pop insl jp xchg mov out add sbb cmp popa outsb jnp xchg movsb mov int3 (bad) hlt add sbb pusha insl jnp xchg mov out add sbb sub inc push popa outsl jl xchg movsl mov int ljmp dec pop data16 (bad) popf stos mov sti or and inc dec pop push lods mov decb sbb xor dec pop push xchg out std or and push test (bad) jecxz decl daa xor push pop imul mov out add sbb arpl mov fucomp clc add dec push fs mov in sti or and aas dec pop push stos mov std or xor pop imul enter decb sbb xor dec pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov add sbb aaa inc push pop insl jp xchg movsb mov int3 (bad) cmc add push sub inc push popa outsb jl xchg movsl mov int call sub inc push popa outsb jl xchg movsb mov int call sub jo mov fsubr testl push gs mov fsubrp cli pop adc das cmp orb loopne sti or and aas dec pop addr16 nop popf stos mov sti or and aas dec pop addr16 nop popf stos mov cld or and aas dec pop push lods mov std or sub inc push pop insl jp xchg mov out add sbb pusha outsb jnp xchg mov out add push sub inc push bound mov fsubr testl push arpl orb fucomip cli pop adc das cmp orb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc shl lock daa xor dec pop push test (bad) in decb daa xor dec pop push test aad lock or and push test (bad) in decl daa xor js xchg mov in decl push pop insb jns xchg movsb mov int3 (bad) hlt add push sub inc push bound mov fsubr testl push bound mov fsubr testl push arpl mov fsubrp stc push adc das cmp push fs lea aam out cld or and imul mov in add sbb ss push pusha add mov fsubr testl jle cltd cmpsb mov into fsubr testl push bound mov fucomi testb push arpl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc rcr ljmp dec pop addr16 (bad) popf stos mov shl in sti or pop data16 (bad) pushf stos mov cld or and push lods mov std or xor pop imul (bad) aad lock or xor pop imul mov in add sbb pusha insl jnp xchg mov out add sbb pusha outsb jnp xchg mov out add push sub inc push bound mov fucomi testb sub add fs mov fucomp clc add dec push arpl mov loopne sti or and aas dec pop addr16 nop popf stos mov cld or and aas dec add js xchg mov in decl daa xor push pop insb jns xchg mov in add push pop imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov add sbb sbbb testl test aad lock sbb xor dec pop imul enter decl daa xor nop popf stos mov iret fucomp testb sbb ss dec pop push cmpsl mov int out decl and addr16 lea fxam repnz sbb cmp jge xchg mov loop sti or push popa insl jp xchg lahf lods mov clc add sbb pop imul ror call daa xor dec pop addr16 lea fsub hlt add dec pop data16 mov int out decl and gs mov (bad) jecxz cld or push popa outsb jp xchg mov fucomip stc add inc push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp adcl fucomp testb sbb xor je lea fucomi hlt add sbb xor pop data16 mov xlat in std or and cmp jge xchg mov loop sti pop adc sub insb jns xchg lahf stos mov testl inc dec pop push cmpsl mov into (bad) hlt add dec pop gs mov loope cli push adc sub inc push pop imul sahf stos mov rcr ljmp inc push pop imul ror out add xor dec pop fs mov aad out cld or push pusha insl jp xchg lahf lods mov stc push adc sub dec push popa outsb jnp xchg mov loopne out sti or push pusha insl jp xchg mov fucomip clc add inc push pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall fucomp testl inc dec pop push cmpsl mov int out decl and gs mov fsub icebp add dec pop data16 mov xlat in std or and cmp push bound mov loopne stc add inc push pop imul sahf stos mov rcr jmp sub je lea fxam repnz sbb cmp jl xchg mov in decb pop and cmp jnp xchg mov fucomip clc add inc push pop imul ror repnz daa xor dec pop addr16 lea fucomi (bad) or jge cmpsb mov int call sub je xchg test rcr lock cs pop jno popf mov loope (bad) cmp jl xchg mov jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out cld or push popa outsb jp xchg mov fucomip stc add inc push pop insb jns xchg lahf lods mov clc add push sub inc push bound mov aam out sti pop adc and cmp push popa outsb jnp xchg mov loope cli pop adc sub insb js xchg sahf stos mov rcr ljmp inc dec pop push test ror out add dec pop addr16 lea (bad) repnz and dec gs sahf stos mov rcr ljmp inc dec js push bound push bound push jl xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc xor inc negl cmp adc pop sub adc adc xchg inc incl xchg ljmp fs mov push mov fwait jmp sti xchg jg jns dec es fbld push mov imul lahf data16 pushf outsl mov xchg (bad) push or sub xchg mov nop or adc movsl movhps pop in cmp movsb rcl lret ja xor mov js add rolb loopne pop in dec (bad) jnp mov adc jbe pop xor pop lods mulb push (bad) lods cmp lea and xor enter mov jle movsb push std or adc out xor daa mov cltd icebp jo sub adc stos incb je pop std mov stos inc cs add xor test mov cmp add test mov cmp pushl test pop cmp jmp test test push test test xor test test pop cmp cmp ret cmp cmp cmp cmp inc test rdtsc cmp cmp jne test pop test add test push cmp ret aad mov lret cmp mov mov or jnp push bound inc mov xor jle aaa sbb aam xchg jg or mov pushf movsl inc test cmp test cmp test cmp test call cmp jmp test pop test clc adc test mov test mov test inc test inc cmp inc cmp add test test mov cmp test call test test push test cmp test jne mov cmp add test mov test add test call test jmp cmp pop cmp push cmp push test push cmp mov cmp call test pop cmp cmp jl cmp mov cmp sub cmp mov cmp sub test call test mov cmp inc test inc test inc test inc test inc cmp inc cmp inc test inc test inc test inc test push cmp mov cmp add cmp push test push cmp sub cmp sub test push cmp call cmp jmp cmp pop cmp cmp inc test mov test xor cmp mov test cmp jne test mov test test sub cmp pushl cmp pop test call cmp or test test jne cmp jmp cmp mov jg jp add sbb jge popa fsubrl add mov dec nop or xchg orb mov jno xchg (bad) loop or lret rolb jbe in notb movsb mov fwait in jo mov adc lods je test popf pop pop in dec xlat cmp dec mov ret pop xor pop scas mov and (bad) imul lea fucom fdiv cmpsl test call adc lds cli int inc out in scas insb icebp pusha popf in cltd lods sub adc stos mov sarl lcall not clc mov lret cmp mov or bound inc mov xor jle aaa sbb aam mov mov pushf movsl inc test jmp push jg jp add imul fsubrl add mov xchg mov (bad) dec into test push cmp pop test pushl test pop test mov cmp mov cmp push test mov cmp mov test push test pop test add cmp cmp jne cmp push test pop test add test cmp jne cmp pop test mov test mov test mov cmp add cmp mov test mov cmp add test mov test add test lods cmp test je cmp add test mov test cmp jne test mov cmp cmp jne test mov test push test pop cmp push cmp push test push cmp push test push test push test push cmp push cmp call test add test ret mov jno xchg (bad) loop or lret rolb jbe in xchg mov cmp movsb mov fwait in jo mov js push lods je test popf pop pop in dec cmp dec mov rol xor pop xor pop scas mov and (bad) imul lea fucom fsubs jns (bad) mov std lds cli int inc out in scas insb icebp pusha popf in ficomp (bad) and stos mov mov mov data16 xor inc not clc mov lret cmp mov mov push jnp push bound add (bad) jmp in ficomp (bad) and sub test mov sarl mov data16 xor inc jp fwait jmp xchg lds jmp adc fstpt fucomi sub test test movsl mov jp fucomi btcl aas cmpsl scas test mov mov adcb jmp sub mov lcall repnz addl test stos xor jle aaa sbb aam mov push mov pushf movsl inc test mov jg jp add sbb jge popa fsubrl add mov dec nop or out (bad) dec into push mov jno xchg (bad) loop or lret rolb jbe notb movsb mov fwait in jo mov js push lods je test popf pop pop in xlat cmp dec mov ret pop xor pop scas mov and (bad) imul lea loopne lock test (bad) mov std lds cli int inc out in scas insb icebp pusha popf in ficomp and sub test mov sarl mov data16 xor inc not clc mov lret cmp push jnp push (bad) cld aas add xor (bad) jle aaa sbb aam mov push xorl mov jg jp add sbb jge popa fsubrl add mov xchg mov (bad) dec into push mov jno xchg (bad) loop or lret rolb jbe in notb mov fwait in insb mov js push lods je test popf pop pop in xlat cmp dec mov rol xor pop xor pop mov and (bad) imul lea fucom fdiv cmpsl test (bad) mov lds cli int inc out in scas insb icebp pusha popf in ficomp (bad) and sub test add jne sarl mov data16 xor inc not clc mov lret cmp mov mov push jnp push bound inc mov xor jle sbb aam mov mov pushf movsl inc test jmp push jg jp add imul fsubrl add mov dec nop or xchg xor into push mov jno call test mov cmp mov test inc test mov test mov cmp ret (bad) loop or lret rolb jbe in notb movsb mov fwait jo mov js push lods je test popf pop pop in dec xlat cmp dec mov rol xor xor pop scas mov and (bad) imul cmc fucom fdiv cmpsl test (bad) mov std lds cli int inc out in scas insb icebp pusha popf mov cltd lods sub adc stos mov sarl mov data16 xor inc idiv mov lret cmp mov mov or jnp push bound inc mov xor jle aaa jae aam mov push mov movsl inc test jmp push jg jp add sbb jge fsubrl add mov dec nop or xchg (bad) dec into push mov jno xchg (bad) loop or lret rolb jbe in notb mov fwait in jo mov js push lods je test pop pop in dec xlat cmp dec mov rol xor pop xor pop scas mov and imul lea fucom fdiv cmpsl test (bad) mov std lds cli int out in scas insb icebp pusha popf in cltd lods sub adc stos mov sarl mov data16 xor inc not mov lret cmp mov mov or jnp push bound inc mov xor jle aaa sbb aam mov mov pushf movsl inc test jmp push jg jp add imul fsubrl add mov xchg mov (bad) dec into push mov loope (bad) loop or lret rolb jbe in notb movsb mov fwait in jo mov push lods je test popf pop pop in dec xlat cmp dec mov (bad) xor pop xor pop scas mov and (bad) imul lea fucom fdiv cmpsl test call adc lds cli int inc out in scas insb icebp pusha popf in ficomp (bad) and sub test mov hlt pop mov data16 xor inc not mov lret cmp mov mov or jnp push bound inc mov xor jle aaa sbb aam mov mov pushf movsl inc test jmp push jg jp add imul fsubrl add mov xchg mov (bad) dec into push mov loope (bad) loop or lret rolb jbe in notb movsb mov fwait in jo mov push lods je test popf pop pop in dec xlat cmp dec mov (bad) xor pop xor pop scas mov and (bad) imul lea fucom fdiv cmpsl test call adc lds cli int inc out in scas insb icebp pusha popf in ficomp (bad) and sub test mov hlt pop mov data16 xor inc not mov lret cmp mov mov or jnp push bound inc mov xor jle aaa sbb aam mov mov pushf movsl inc test jmp push jg jp add imul fsubrl add mov xchg mov (bad) dec into push mov loope (bad) loop or lret rolb jbe in notb movsb mov fwait in jo call push leave mov fsubs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs cli push gs and mov jg and lahf jp sub jle mov jg daa mov lahf jp sub out or xchg jp lock stos push mov xchg jp pop add mov stos cmpsb or xchg jne iret xchg jp les bound mov push add mov xchg jp in xchg xchg xor adc mov xchg jp mov add mov add mov xchg jp and or mov xchg jp movsl imul or adc mov xchg jp cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz cmp jecxz sub jle cmp jp cli jle add xchg jp lock cmp cmpsb jp enter movsb cld jp pop imul leave sub loopne,pn mov or pop testl cli jle add xchg jp and or adc fwait cmp mov or out or sahf jnp mov adc data16 mov jg cltd add and jl pop mov loopne xchg jp pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor pushf stos inc xor nop xchg jp sub adc rcrb jp mov xor fldenv insl mov stc icebp mov xchg jp imul jp in xchg xchg jno xchg jp dec cmp aas pop dec pop push or jg and xor jp sub ds in xchg xchg dec mov jl mov inc jp mov and leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov adc leave mov jecxz jp cli jle or xchg repz call inc push or xchg jp in icebp inc movsb jg and xchg jp sub (bad) or jg mov xchg jp sub jp mov jg and xchg jp sub outsb or jg and xchg jp sub bound mov jg and xchg jp sub data16 jg and xchg jp sub pop or xchg jp sub mov mov lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa loope cmpl adc icebp mov xchg jp sarb mov lcall loope orl xchg jp push jnp,pn mov jg and dec jmp or xchg mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl mov sarl icebp dec clc adc sbbl xchg icebp dec hlt (bad) repz hlt jle pop mov xchg jp push push xchg dec mov repz loopne (bad) or xchg xchg (bad) mov adc adc iret or (bad) repz hlt jle pop mov pop mov pop enter mov xchg jp pop xchg jp and or xchg jnp mov xchg jp dec jae or xchg jp out stc mov (bad) icebp pop lods pop mov (bad) in ret imul (bad) outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov outsb pop mov and stc lock mov adc aam xor xchg jp mov push jns mov (bad) jp sub jbe mov mov xchg jp lret or xchg adc mov ret xor nop pop jl xchg adc negb daa sub cmpsl push jns data16 push xrelease pop mov xchg or lds pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz pop repz jnp mov xchg adc pop ret ds in stc icebp mov imul lret dec or sbb icebp push mov inc inc mov pop add aad icebp jns (bad) icebp push pushf sbb icebp push fcomps repz and movsb and xchg pop mov jecxz mov xchg xchg add sti cmpsl mov popa mov (bad) divb mov cmp xchg dec pushf push icebp je sbb inc or dec (bad) out mov xor sub push or pop orl adc jb popa xchg inc mov mov sub xchg ret mov fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out fdivs out sbb pop or imul negb aas and mov push or imul arpl jp aad test out or xchg jne add (bad) dec pop or jg pop mov push dec (bad) in sahf xchg pop mov xchg test pop pop cmp adc jg pop mov sahf xchg mov xchg jp sub jb test jp cli jle hlt pop imul or jp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jg adc xchg and inc push div jle adc xchg jp sub jp and jge sbb or imul divb cmp cmpsb jp sub adc sub lret icebp pop test dec div mov jmp negl orl pop and or sbb test (bad) adc nop xchg jp pop cli jnp mov imul andb jp scas imul notb imul adc rcrl mov int3 xchg fbld negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push (bad) negl push scas imul not xchg icebp pop test dec div mov icebp mov xchg jp in mov arpl loope (bad) negl bound setp sub sbb mov or cmp or sub aad (bad) xchg mov push mov daa sub mov (bad) jb xchg imul or lock lock xchg or sub or cld jnp mov mov mov imul or mov xchg jp out xchg (bad) mov mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov dec ds mov adc lret repnz pop sub push sub jp mov sbb test and push and sbb lret xchg icebp inc movsb sbb repz (bad) push mov cli jle lock imul divb (bad) or xchg xchg or loopne jp mov xchg jp mov movsb test adc or xchg jp sub jb mov mov mov or into insb or imul mov xchg jp pop and or imul mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov xchg adc adc jp repz jp arpl or imul lret inc movsb sbb repz xchg jp sub lret jp repz jp arpl icebp pop test dec div mov or sahf repz push ret xchg sub mov xchg jp sub jb xchg imul xchg adc jnp mov and or imul mov jp lret das lock (bad) negl (bad) loopne xchg jp sub jle (bad) lea cli jle (bad) pop imul or jp mov enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter xchg xchg push mov mov decl in xchg sub jo aas gs jle into mov cli jle lcall xchg int3 mov jp repnz stos mov push adc mov sbb jp mov movsl test sub jge sbb bound mov imul add test sub jle adc jle cld pop imul repnz or (bad) jp mov sbb test adc mov xchg icebp inc test cmpsl pop mov arpl or gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push gs push (bad) sub and jp negl stos mov jne cmpsl nop jp sub jle xchg cmpb jle std pop imul or outsl sti enter or sbb test and xchg mov xchg jne or mulb sub push and jns mov sbb mov imul add test sub jle (bad) mov cli jle cli pop imul or fstpt fisttp nop cli pop imul or sarl mov adc or xchg jp lea std lea xchg jp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop imul mov add or xchg jp mov xchg jp daa or mov push jne popa xchg jp popf dec and cltd (bad) mov das xchg jp scas adc or xchg jp and jnp mov xchg jne xor mov pusha cltd incb dec xchg jp shl or in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in jp in xor xchg js scas adc or xchg mov or push push je xchg jp and or mov jp aam inc inc out aad jge stos sbb jbe push and jp loop jp aam inc or xchg mov or push jne sahf xchg jp dec mov jp movsl loop arpl xchg jp mov and or xchg jp pop add or imul lret jnp mov xchg jp pop and or xchg jp dec dec xchg ret jp inc jne ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp cltd ljmp adc pop push jnp mov xchg jp aaa ljmp pop imul notb push jnp mov xchg jp aaa ljmp pop imul or outsb push and test pop adc mov repnz or (bad) jp mov sbb test insl sti lret jp repz cmp pop adc mov xchg jp lcall (bad) or xchg jp pop push jnp mov xchg jp aaa ljmp mov xchg psllq pushf test pop jp mov aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec jecxz cmp aad dec sub lret jp repz jnp pop adc mov xchg jp lcall (bad) or imul pop cwtl jg out imul or xchg push test xchg jp sub dec (bad) loopne icebp dec call jle loopne (bad) jp (bad) das jb mov lock adc scas lock fcmovbe jge jmp xchg pop stc enter xor pop pop mov into mov xor je pop mov popa pop xchg jp and or xchg jnp mov xchg jp sub jbe addr16 jg mov (bad) xchg dec mov jp dec mov mov and or xchg ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov das ret mov push jl pop mov (bad) fstpl jp push xor push sub mov aas movsl xchg jp push jg or aaa sbb pop lock adc test inc fcmovbe sahf xor push jnp,pn mov stos stc icebp mov mov push dec jmp daa add mov cld jp jo test or xchg adc lret or xchg jp and test mov icebp and pop imulb adc out xchg loope xchg jp ret cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb cmc sbb lret not fidivrl loope jp imulb sub ret sub sbb cmp mov dec icebp jno sbb ss xlat jp sub jl pop aad adc lcall test mov cld jnp mov xchg jp imulb inc sub icebp and arpl xchg enter sub ret ss pop ret sub push jp test pop sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov icebp movsl xchg js mov xchg jp imul adc (bad) adc sbb movsb cltd sbb pop mov jle mov jge mov sbb movsb cltd or and outsl addr16 jne mov push jle rcll mov (bad) fstpl jp mov xchg adc lret or xchg jp mov test std icebp movsl xchg jp mov jp clc pop dec mov xchg clc pop mov loope xchg jp sub mov shrb jb mov sahf jp push xchg mov out jp clc jle or lcall mov sbb pop and jge push mov cmp in roll imul jg cmpsb imul into xchg ja xchg jp sub jbe pop pop mov push xchg pop lock aam repnz out mov push (bad) jg or inc scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fdivl scas fsubrl jmp sbbb cmc test rclb movsb xchg jp xchg sub pop outsb jg mov and pop lock sbb xchg movlps fstpt outsl fwait jp cli jle out pop imul or imul arpl rclb lret pop in ja inc cltd jp clc adc xchg push lret negb inc lret bound cwtl xchg paddb mov jb sbb mov in jnp loop mov jl push stc mov xchg jp mov xchg jp mov popa cmpb cwtl or or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp pop ja mov or mov xchg dec or xchg jp mov or mov xchg jp and jg pop mov sbb dec or cmpsl mov fwait mov pop adc push mov pushf icebp cmp loope xchg clc and mov cmpsl mov cld mov (bad) mov xlat inc adc and push scas add jp sub and sbb jle dec aaa je mov or mov xchg jp sub pop or sahf sbb adc lock mull mov stc lret mov xchg stc lret mov xchg jp mov xchg repz cwtl xchg jp sbb out mov sahf jne xchg xchg jp sub cmp jg or push loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp loop cmp sti jecxz idivb sub or mov mov sub pop or sbb repz dec or mov jnp dec sub rclb repz mov jnp,pn mov push jle scas loope pop test (bad) shrb lret data16 sbb push (bad) shrb dec xchg fisubl icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp sbb outsb (bad) icebp icebp or into push jne stos cltd xchg enter enter and mov repnz psrlq mov andl mov mov push add outsb add sbb repz or (bad) jp mov imul push sub pop or sub fchs pop imul jnp cmc pop jp fistpl fs in or xchg negb jp mov mov arpl mov xchg jp test mov call fidiv out xchg icebp dec movsb imul and imul out xchg jp std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std lret daa push std jle ljmp push or lods negb pop jge in data16 adc dec ja test in insb int3 movsl dec or cltd negb push pop (bad) pop leave in jl cli aaa insb int or jle ficomp sub sbb rorl jnp in loope dec test out push dec aad or (bad) adc jmp imul aam sbb repz data16 jp dec inc test out push pop leave cmc adc jecxz jge jg or movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp movsb dec cmp imul pusha (bad) outsl repz stc adc dec gs negb push pop (bad) pusha into (bad) push insb hlt decb insb (bad) bnd push test out loop jnp (bad) push insb hlt decb insb (bad) repnz jno jle jmp imul aam xchg jb imul jge rclb aam sbb repz data16 jp jg jp fucomp pop je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp je jmp loope jg imul loop insb shl pop insb hlt decb insb (bad) bnd jge test out loop insb aam adc jge decb insb (bad) bnd test test out loop insb aam adc jge decb insb (bad) bnd jge test out push dec iret sti pop push into repz negb pop jge in push in dec in sub lcall jo jle loopne imul insl (bad) retw repz jle rcrl cmp (bad) push insb lock push in pop mov imul pop vcvtsi2ssl cmc pop jp fstl gs fsts fdivr push or jp mov or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp or xchg cmp mov pop imul cmp decl lock push in or lods negb adc jecxz gs jge cmc push dec fcoms test negl inc leave hlt or out cmp dec leave scas negb adc jecxz gs push retw roll or jp mov jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns out jns loope jno div notl jge stc or hlt movd loopne addr16 xchg mov dec (bad) repz les fs loop pop enter les test loop jnp cmc cmp in jp xchg xchg addr16 imul pusha aam cmp in or stos negb push insb (bad) loope jno mul stc adc leave clc (bad) in sbb or into loop loope inc test jecxz pop push int3 repz negb or repz int3 repz and mul cli adc addr16 cli pop or xchg negb xor repz rclb jnp cmc push data16 aas jno xchg xchg loope xchg jp mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb pop mov insb loope jge div xchg aas or xchg sub popf xchg xchg arpl test repz gs movsb jp mov repz dec leave cli pop dec aam or jecxz insb rol jp jb test repnz call insb mov imul dec fdiv sbb sub negb pop jge stc adc lock push popa out notl insb notl test in pusha into (bad) push insb lock push in or scas negb pop jge call insb repz insb mov imul jge sarl xchg jp into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc into clc adc dec cmpsb mov pop (bad) jo mov imul pop (bad) lds ja repz sub in pop enter subb jge fstps arpl cmc push and decl jge lds insb int3 cli pop and repz popf mov inc jmp das push repz sbb xlat (bad) or adc stc or loop pop leave clc push data16 in dec aad or sub shl adc lret into fsts (bad) loope js testb sub cli push daa repnz insb cmp inc vorps mov imul inc and lods pushf sub insb int3 cli push pop aad pop sub imul push imul mulb xor negb jp mov imul jne test dec push nop negb sbb int3 repz int push insb fdiv jp sbb idiv in imul push insl (bad) loope jnp div repz jo fstpl jo fcomps lds test lds or mov pop (bad) pop pop fcoml test hlt repz or mov or imul push imul xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc lret inc or test clc cli cmp test cwtl jno sub xor (bad) or pop sbb push popa mov test jne xchg push or push xor inc cltd inc lret sbb test cmpsb mulb cmp pop sub daa xchg dec out rclb jbe hlt cld cli sub push ss xchg lds js adc (bad) loop mov mov and push mov clc pop fs (bad) or mov aas pushf fdivrl stc (bad) xadd icebp push rcrl sub pusha pop mov xorb cmpl int cmp push rcrl sbb mov mov jo pop ret sahf xchg sub ljmp adc mov adc xor movsl aaa mov sub cmp mov adc mov mov adc sub sub fldenv mov test in xchg mov test mov loopne pop out pop pop loope mov mov lret inc (bad) jne imul cmpsb ja lds loope in push movsb or fisttp cli sub in jbe sbb test adc push ss int and jge sbb fiaddl xchg repz je into cmpsb dec pop ss incb insl pusha dec dec mov mov jle lret cmpsl test stos and xchg fnclex out sub mov aad push or cmp sub mov cli negl sarl xlat cwtl push inc jo jecxz and outsl sub frstor push lret push stc fs xlat jge fsubrs pop sub movsb push mov js add lahf pop pop xor push fwait dec dec xchg mov fcmovne sub int3 inc rcll (bad) addl lahf adc clc mov insb iret mov pop or ror cmpsb mov gs cs dec push xor jge cld test int3 mov jg push and cs mov repnz mov sub sub pop sbb (bad) jecxz (bad) daa in add jg xchg pop out sub dec inc out aad outsb mov adc in sahf pop jecxz imul push mov cmp ss loop sahf adc bound hlt stos fwait xlat test mov int3 lcall stos xchg mulb (bad) xor jns xchg sbb repz int3 xchg test jmp pop out faddl fincstp rclb int3 jns inc jg adc mov test test xchg jle (bad) pop ds pop sbb mov pusha adc aad jecxz xor mov mov int3 fs pushf gs fdivrs movsl cmc push sbb out movsl mov movsb pop std fidiv xchg enter add sub jns sub mov cmp cmc pop mov popl inc lock push mov repnz nop and je or add int sbb cltd clc or pop aad ljmp mov add daa cmp and pop mov fstps pusha or das sbb je xchg mov sub jg imul or div into icebp (bad) (bad) mov es leave dec dec mov shlb out cmp (bad) cmp jl enter dec out mov test sub stc test movsl adc (bad) hlt orl xchg lret sub cs mov outsl outsl sub arpl hlt imul test loop lods movsl or (bad) mov es xor clc pop or loopne sti lds lahf sub xor mov stos dec dec xchg clc into mov xor mov (bad) bound fisttpl xchg hlt subb cmp cmpsl dec pop aaa fwait xor and (bad) call pusha dec dec rolb out scas dec lret imul push cwtl lahf lods out fildl jo imul shll or jnp subb fs shrl jnp inc (bad) sub rorl (bad) pop or mov mov daa inc dec loope mov (bad) mov leave data16 fmuls push fild iret addb add dec or gs dec cmpsl cmpsb sub fwait jno ret arpl mov ret add (bad) lea mov out sbb sti add in inc xor xchg sbb mov lods imul and rclb js jecxz lahf data16 div or imul popa outsb rolb push pop push inc fs jle gs mov and fidivrl (bad) packuswb push inc inc cltd inc rolb mov push stos push outsl js pushf cli push lock sbb xor adcl jecxz and outsl fidivl sbb xor mov add pushf mov mov pop inc jb pop jno adc push (bad) icebp cld push mov mov jno test imul cmp adc inc lret insb (bad) xor mov mov movsb cs adc push mov stos bound xlat sti repnz dec out iret fldl ror mov fldcw movsl addr16 orl dec jnp jo mov xor bound mov mov jge cld mull mov xchg jne out repnz imul adc arpl jge scas and adc sub xchg or incb mov inc push loope and dec sbb shlb and dec cld dec push cmp sub lret in rol fs inc add xor outsb lods imul aas pop mov les sub fidivr lcall pop stos jl fimull out xchg cmc sub and cld lods outsl repz cmp data16 sahf sbb nop push enter pop fstps mov push xor stos pop arpl sbb pop imul inc cs inc push bound pop adc ret dec xchg push test cmp sub cli mov push loopne cmpsb mov xchg xchg (bad) and std mov sbb (bad) fild lret xchg fs sub lds inc (bad) jae sti fstpl mov int3 fcmovnb or or (bad) mov std push in pop roll fnstsw in and enter out test repz insb xchg ss popa sbb inc mov call push lds xchg daa mov in cmpsl pop or push xor dec sbbl inc test jmp icebp cmpsl jne ret jge ficompl sbb sahf or mov jno mov add icebp cmp or (bad) pop push mov mov adc pop or (bad) dec mov in xchg cmp jl pop nop imul (bad) rorl repz xchg test (bad) cltd mov pop imul (bad) mov out test in xchg mov jmp mov fistp rorl hlt das scas and out test mov xchg add popf cmp lods loopne ja dec xchg jae xchg inc dec mov nop test cwtl xor mov in xchg repnz adc sub out test xchg shlb aaa ret icebp inc sbb aad or jl jno xor data16 aas mov push lock clc xchg sbb dec push xchg mov leave sbb pushf aas xchg cmp lds mov into notb lods mov popf jl xchg adc scas loope adc int sbb add clc dec aas mov mov outsl adc mov clc lock cmp push ror out loop das lcall adc dec add pusha es mov sub dec xchg sbb xor in jge out rcrl push fcmovnu xlat outsb push clc dec fs fdivl cmpsl andl fistpl je cmp ret mov ret mov lock pop bnd repnz pop ljmp ret (bad) ss adc mov dec cmp xchg stc sahf cmp leave test fs adc push xchg cld lcall sub sbb (bad) popa pop jnp add and xor inc clc inc sub adc jno pop rcrb in arpl jp mov push icebp idivb xchg and xchg jbe or data16 add sbb into xlat sahf jnp jo xor sarl mov push out outsl cmp into popa (bad) push or popa fwait xchg movsl dec ljmp xchg push negl cmpl out clc cmc (bad) repnz adc pop lods sarl inc jle aam sti aas enter ret adc stos cmp nop sub popl xor into lea cs jne push mov lret push jbe mov add mov jno repnz and jecxz jmp das (bad) mov imul jp dec aaa push fdivl enter push push push xor ficoml das sbb out rcll adc mov pop xchg jns cs push inc or or xor push push icebp shlb mov aad lock (bad) or test add movsb or adc xor xchg out data16 xor aas into sub pop xor push jne adc xor add inc sub int cmp add mov pop into push call std add (bad) jno adc xchg imul pop test xlat orl and out jnp jo cli (bad) mov (bad) (bad) mov adc das out cltd mov incb mov (bad) xchg xor dec in bound xlat sub sub jge inc notl fwait insl xchg xchg scas push xor imul dec lret lcall stos or fdivp scas fmul shll pop aad dec ret test pop inc in or test lret faddp pop pop add pop mov aad dec jl loop imul aaa pop test lret adc or das and lea movsb push mov sub fisubrl mov clc add jp int test les sub dec out mov (bad) lock mov andl pop sbb mov movsl pop fnop xor xor loop fist (bad) loope adc loop mov fbld jg faddl mulb add icebp push mov and lds outsl pop push iret push jge cmc sbb pop test lret mov push mov repnz dec fstpt dec xor (bad) je cmpl movsl mov ret push dec addr16 cmpsb mov mov test and sub jb fstp sbb loope movsb or addr16 fsub dec cs les cmp leave mov popf xor sub cmp sub iret icebp or ja pop pop leave dec mov out mov dec fistp rorl loopne xor movsl int cmpsb (bad) es les mov (bad) xchg xchg (bad) mov mov in test repz or push cmp std xor xor jb xchg mov ljmp adc sub fmull mov movsl test cmc stos xor lcall std mov rclb imul (bad) xchg mov jmp mov (bad) pop sti shr dec in aad adc push or orl lahf test sahf pop cmp jl ret mov jle scas cmpsb mov shl mov repz insb xor les or mov loop ss cld inc pop xchg std xor iret nop adc xchg das addr16 fs pop scas lahf sbb dec push inc mov mov xchg popf xor push addr16 in lea mov (bad) jp jl adc jecxz push inc lock push xlat cld mov xor adc aaa jp and repnz test hlt mov stos xor stos jno mov cld pop mov mov mov in enter pop cmp adc daa stos movsl decb push mov inc mov and test dec adc push mov push sti repnz mov lea lret jecxz movb lods pop ja dec pop sbb cmp jne lods out aad lods jb dec addr16 xchg repnz call cmc out adc sbb jnp repz fimul mov fs daa cmp and sbb xchg fcomps (bad) mov dec cmc push lcall orb adc shld inc xchg cmp cmp clc iret mov xor add add add add add add add add add adc add add add add decb add sub add add sbb sub add add and add add sbb test add mov add adc add add sbb push das add sub add and add inc add add add add add add add add (bad) incl movsl jnp add test mov mov pushf pop arpl movsl imul cmp (bad) jae add cmp lods cmp movb mov dec push add push pop add pop arpl pushf cmp add inc inc add cmp add push add push add pop pop add cmp mov add arpl (bad) imul arpl fidiv add imul jnp add test test add mov call add jnp notl add test jmp jae ljmp jnp pushf imul xchg xchg add jae add mov add movsl add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov pushf test jnp imul movsl movsl add cmp jmp mov ljmp lods add lods movsl add mov inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into movb xchg add xor fidiv movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor pushf push cmp lods inc sbb movsl cmp add or movsl inc adc jae sub movsl cmp add inc or lods dec adc mov sbb (bad) imul neg into add dec or mov adc arpl add dec add (bad) pop or mov or mov sbb (bad) imul (bad) test (bad) pop int into imul (bad) jae add xchg push add arpl add imul mov jnp add test add mov add xchg dec add pushf push add mov add (bad) xchg add imul (bad) arpl add jae add mov add xchg inc xchg movsl pop add lods arpl out lods imul mov add imul out or (bad) jnp add test add pushf inc add pushf dec add lods arpl out pushf cmp idivl test add add ja ja dec dec dec add xchg add mov mov mov mov mov add add push pop pop push pop push add add cs cmp adc outsb mov add add add add add inc cmp sub and pop outsb mov add mov pop fs inc push cmp sub sub and add pop pop inc imul jb inc push sub and pop bound add add inc pusha pusha pusha fs imul pop xor cmpxchg add add inc pop pop pop pop inc pusha pusha pusha fs imul sbb mov add add mov jb cmp cmp inc pop pop pop pop inc pusha pusha int imul pop push outsb mov add add push xor cmp cmp inc inc pop pop pop inc pusha pusha pusha fs add add xor xor xor cmp push push inc inc pop pop pop inc pusha pusha cmp mov add dec push xor push xor xor push push xor cmp cmp inc inc pop pop push sbb add add xor xor xor push xor xor push push xor cmp cmp cmp sub sub sub sub xor xor xor xor xor xor cmp push and sub das sub sub sub xor xor xor xor xor xor adcb and and and and and sub xor xor push xor xor push or xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg pushf mov xor sub sub xor xor xor or fwait fwait fwait fwait fwait fwait fwait fwait fwait fwait mov sub das sub sub xor xor mov add scas scas scas scas scas scas scas scas scas push movsb js add daa sub sub sub sub sub mov add andl movsb movsb (bad) mov dec dec es sub sub mov add add stos stos stos stos stos stos stos stos stos stos xchg push sub es sub add add add mov cltd cltd cltd cltd cltd cltd lahf jae add and sub add add mov mov mov dec and and daa mov pop mov lahf xchg lahf xchg xchg jle add dec and and pop mov test test xchg mov add mov add add sahf sahf sahf sahf sahf sahf xchg mov add je push orb add inc inc inc inc add add (bad) (bad) (bad) (bad) (bad) clc add inc add incl add incb add cld add psubb add lock add add add add add add add add add add add add add add add add add add add add add add jo add loopne pusha jg add push add incl jg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add (bad) (bad) incl movsl jnp add test mov mov pushf pop arpl movsl imul cmp (bad) jae add jnp add cmp add dec push add push pop add pop arpl pushf cmp add inc inc add cmp add push add push add pop pop add cmp mov add arpl (bad) imul arpl fidiv add imul jnp add test test add mov call add jnp notl add test jmp jae ljmp jnp pushf imul xchg xchg add jae add mov add movsl add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov pushf test jnp imul movsl movsl add cmp jmp mov ljmp lods add lods movsl add mov inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into movb inc xor arpl xor fidiv movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor pushf push cmp lods inc sbb movsl cmp add or movsl inc adc jae sub movsl cmp add inc or lods dec adc push sbb (bad) imul neg into add dec or mov adc arpl add dec add (bad) pop or mov or mov sbb (bad) imul (bad) test (bad) pop add into imul (bad) jae add xchg push add arpl add imul mov jnp add test add mov add xchg dec add pushf push add mov add (bad) xchg add imul (bad) arpl add jae add mov add xchg inc add movsl pop add lods arpl out lods imul mov add imul and add jnp add test add pushf inc add pushf dec add lods arpl out pushf cmp idivl test add add ja ja dec dec dec add push add add add add add add add add add bound mov add add add cmp or bound mov dec pop pop fs cmp add lea xor imul and add imul pop pop xor adc lea xor pop pop pop bound and es push xor push xor and and and sub xor xor xor addr16 sub sub xor bound lods lcall sub mov add daa sub cmp lahf lahf lahf lahf and and xor mov add add cmpsl xchg xchg xchg and and mov add add add add add add pop add lock add loopne add rolb add add add add add add add add add addl add popl add incl add incl add add add add add add add sbb add add add add add add add add add add add add add push add mov lahf lods pushf xchg stos cwtl xchg test xchg cmpsl xchg xchg test xchg stos lcall mov add or enter mov addr16 push push mov push mov push mov push movsl push push pushf dec dec nop dec dec mov xchg jae cltd cmpl push add pop mov data16 je fadds repnz mov jbe into gs push pop mov push lcall fs mov or mov arpl push in cmpsl mov mov cli mov sti lods test movsl mov popf pushf std cwtl cwtl cli xchg xchg repz push lahf inc inc test (bad) bound mov add imul mov mov clc sarb mov mov cld mov cld scas stos std stos cmpsl std cmpsb movsb (bad) mov (bad) lcall nop lock js lret mov inc jl dec movsl cwtl xchg add add add mov mov mov test cli sarl mov mov stc lds ret mov sarb cmpsb hlt xchg xchg lock jg fidivr shrb (bad) push pop test inc movsb xchg lea add add jne fstps clc int3 (bad) clc enter mov enter ret clc int3 (bad) leave not lret not int3 not int3 not int fmul not into not lret (bad) mov mov jae shrb les test inc cmpsl xchg xchg add ret fcomps or enter clc mov mov lret (bad) clc int clc into (bad) not enter not lret lret not int (bad) into neg iret neg iret neg into cmc aam repnz ret ljmp outsl outsl int3 gs inc jl dec mov cmpsl (bad) mov iret (bad) not lret clc lret ret sarl mov mov mov lret lret (bad) clc int (bad) into (bad) not enter not lret lret not int3 not into not into cmc aad out les insl les mov push nop dec inc xchg jnp rorb not int3 stc mov mov cli mov stc mov stc ret ret mov mov mov lret lret (bad) (bad) int (bad) into (bad) (bad) iret (bad) not leave not lret lret not int3 repnz cwtl lret mov dec orl rorb (bad) into clc mov mov sti mov sti mov sti mov sti mov sti mov cli mov cli mov cli sarl mov push sar sar ret ret clc int3 (bad) xabort xabort (bad) not enter loopne cltd les mov push xchg dec dec xchg jge add add ret (bad) (bad) xchg cltd out lret (bad) clc leave ret lods cld lods stos cld scas stos cld scas lods cld mov cld mov sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl mov mov enter ret ret clc lret (bad) clc int repz pop pop lahf inc inc (bad) pop push add add movsb cmpsb fldt sti mov std cmpsb movsb std cmpsl movsl std test std test cld lods stos cld scas stos cld scas lods cld mov sti mov sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl stc lds enter ret mov jb scas dec dec mov add add pushf mov mov (bad) mov std mov std movsl mov test cld stos test lods test scas lods sti mov sti mov sti mov sti mov or cli mov cli mov cli mov stc sarb mov sahf lcall mov movsl fistp cld movsb mov fwait fwait (bad) fwait fwait (bad) popf pushf (bad) sahf popf (bad) lahf sahf (bad) mov std mov std cmpsb movsb std test cld test cld lods test scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov cli mov stc mov icebp mov leave jb xchg inc inc xchg je fcompl sti cltd cwtl cld xchg xchg (bad) xchg xchg (bad) cwtl cwtl (bad) cwtl cwtl (bad) cltd cltd lcall lcall (bad) lahf sahf (bad) mov (bad) mov std cmpsb movsb std test std test std lods stos cld lods stos cld scas lods cld mov cld mov sti mov sti mov sti mov sti sbb sti mov stc mov fwait inc inc xchg outsb imul add jge insl outsl in mov xchg xchg cli xchg xchg sti xchg xchg sti xchg xchg cld xchg xchg std xchg xchg (bad) xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov (bad) mov std movsl mov test std test cld lods test scas lods cld mov cld mov sti mov sti mov sti mov loop xchg mov imul add and (bad) repz (bad) (bad) notl clc xchg xchg stc xchg xchg sti xchg xchg cld xchg xchg std xchg xchg std xchg xchg std xchg xchg lcall lcall (bad) popf pushf aam sahf (bad) mov (bad) mov std movsl mov test std test cld lods test scas lods cld mov in (bad) sbb dec cwtl je add add add pop add imul jae jp loopne jne jnp loop jbe jge in ja jle out jns cmpb jle xchg xchg cwtl xchg lcall (bad) pushf fwait (bad) popf pushf (bad) sahf popf (bad) mov std mov std movsl mov test std test in mov popl add mov add addr16 pop adc pop and pop and pusha and pusha and pusha and popa es xor int mov jp stc xchg xchg std xchg xchg std xchg xchg (bad) cwtl xchg (bad) cwtl cwtl (bad) cltd aam fwait fwait (bad) pushf fwait (bad) popf pushf (bad) sahf popf (bad) lahf sahf (bad) mov std mov in mov add add mov sbb mov mov mov mov mov mov mov andl add jle repz xchg xchg sti xchg xchg cld xchg xchg cld xchg xchg (bad) xchg xchg (bad) cwtl cwtl (bad) cltd cltd (bad) cltd cltd lcall lcall (bad) lahf sahf in andl add add jne repnz idivl mov idivl mov idivl mov idivl cmpsb push cmpsb pop push subl add (bad) mov lea nop nop notl cli xchg xchg sti xchg xchg cld xchg xchg std xchg xchg std aam (bad) xchg xchg (bad) cwtl cwtl lcall iret outsl jo xchg xchg add add add enter scas jbe mov stc mov stc sbb stc mov stc mov stc mov stc mov stc mov mov dec add add add (bad) js out mov mov (bad) (bad) (bad) (bad) notl stc xchg xchg stc xchg xchg sti xchg xchg cld xchg xchg cld xchg xchg in xchg mov push hlt mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov repz (bad) test xchg add add add (bad) jbe call xchg xchg mov mov mov (bad) (bad) notl cmc mov xchg xchg add mov mov pop lock imul insb lock insb lock insb lock insb lock insb lock insb lock insb sbb insb lock insb lock insb lock insb lock insb lock imul cmp dec and add xchg addl test xchg mov mov mov jae add mov cmp mov in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop jecxz inc mov pop add add mov (bad) jno jecxz jge jle in jg addb (bad) ljmp test jnp sarb add add add cmp popf push call push call push call push call push call sbb popf push in dec mov cmp add jb (bad) loopne jp jp loope jnp jge in jle jg out and sbb ja jbe add add cmp xchg inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc jecxz inc les orb mov xchg jne fdivl fnsave fistpll loopne jp jnp loope jnp jne into js add das fimul fisttp mov fisttp mov fisttp mov fisttp xchg dec and fildll xlat jno fdivs fnstenv fidivl je (bad) jo (bad) jnp fistpl add add and subb subl sub test test test test test test test subl xchg jne add add add leave insl jno imul aam outsb shrb into jo fcompl add and jb aad pop aam pop xlat jnp xlat jnp xlat jnp xlat jnp xlat jnp xlat jnp xlat jnp aad push lods push adc add add aad xchg lret insb outsb sbb jne jl (bad) add int xchg sbb outsb adc jno (bad) jb (bad) jae (bad) jae (bad) jae (bad) jae (bad) jb mov add movsb jmp add add cltd test xor push (bad) bound (bad) bound lds lds lds mov mov add add xchg (bad) movb pop ret ret ret lret add movsb jmp add add add add add add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) incl add clc add incl add push add incl add jmp add jg add incl add incl add pop add add add add add add add add add add add add add add add add add add add add add add add loopne add add add loopne add add add loopne add add add loopne add add add addb add add add add add add add add add add add jmp add add add add add add add add add add add add add add add add add add add add add add add add aas add gs add jg add lock incl add clc add add add add add (bad) add add add (bad) incl add incl add push (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add sub add and add inc add add add add add add add add add add popf lea jl (bad) jl (bad) jg xchg xchg add add pop mov mov mov mov cmp ds aas cmp dec inc insl pop dec jl pusha xchg cmpl add movsb add add mov push jne fstps lock xchg jmp mov xchg push pusha mov inc mov cmp cmp push xchg cmpb jmp add cmpsb push push lret bound sahf pushf idivb sti mov gs lods std stos cmpsl (bad) movsl mov lcall nop ljmp push push mov cmp cmp bound lods mov popf cwtl (bad) int3 xabort mov mov cld scas stos cld mov cld lods stos std cmpsl movsl lcall (bad) (bad) (bad) out mov jp movsb arpl pop pop data16 ja pop add add mov mov clc int stc enter mov mov into (bad) not int xlat into neg (bad) neg (bad) cmc (bad) not leave hlt mov out (bad) fistpll fdivs (bad) pusha pusha mov xor imul add add add add add int jbe ret ror clc int3 vshufpd enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret not int xlat into neg (bad) neg (bad) cmc (bad) lock mov imul dec pop inc cmp mov mov aad stc lds sarb mov mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret not int xlat into neg shl lods cmpsl (bad) popa popa mov cmp push add add jmp leave addl mov mov cli mov cli mov cli mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret in movsl mov dec fs cmp cld add je out mov stos test lods stos cld scas lods sti mov sti mov sti mov sti mov cli mov cli mov cli mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) loop lahf mov dec mov cmp arpl add add jge not int3 std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl clc mov enter ret aam xchg mov inc jno push enter mov (bad) pushf pushf (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl mov push jbe dec rclb (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov sti mov mov push jp inc roll stc xchg xchg sti xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov aam jl dec inc add add sbb push and imul mov mov nop clc xchg xchg stc xchg xchg cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl lcall lcall (bad) jbe (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods (bad) jge jg dec add add add popa or data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 mov cltd cltd lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test (bad) jp (bad) pop push add add add data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 outsl add add add arpl jno cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl (bad) cltd cltd lcall (bad) pushf pushf (bad) sahf popf mov lahf (bad) mov mov add add jl dec xchg dec xchg dec xchg dec xchg dec xchg dec jbe leave xchg dec xchg dec xchg dec xchg dec xchg dec xchg out movsl push imul add add xchg mov xchg xchg clc xchg xchg cli xchg xchg sti xchg xchg std xchg xchg (bad) cwtl cwtl (bad) cwtl cwtl lcall stos push pop add add add mov test mov clc mov clc mov clc mov clc mov clc mov mov add add add mov js mov mov (bad) notl stc xchg xchg sti xchg xchg notb add add add mov cmp mov repz repz repz repz repz repz repz repz repz repz repz shrl mov add add pop pop lds ljmp xchg mov mov pop insl mov (bad) out test out test out test out test out test out test outsl push inc add add cmpl jnp addb (bad) ljmp xchg jle movsl cmpl add add add add and sahf push call push call push call push call push call inc js daa add add add mov insb loopne jp jnp jecxz jge jle out and sbb js add mov xchg inc jecxz inc jecxz inc jecxz inc cld xchg inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc loop inc mov add add rcrb pop pop fidivl jbe fnsave fistpll fistpll int3 jns mov mov add add fisttpll fisttpll fisttpll fisttpll fisttpll stos inc or add outsl outsb mov imul jo jb (bad) jo shrb ret (bad) jb pop daa ret sbb jle fdivrs fdivrs fdivrs fdivrs fdivrs fdivrs fdivrs mov push add add mov int3 push movl add mov cmp psrlq (bad) jae (bad) jae (bad) jae (bad) jae (bad) jae lret mov dec add add xchg add add add add daa scas push push scas push push mov add add pop add pop add (bad) xchg (bad) mov pusha mov test dec add add xchg add add add (bad) decl cld setb loopne (bad) incl add cld add psubb add clc add add add add add add add add add add add add add add add add add add add add add add add pop addb pop addb xadd rcrb add lock cld add incl jg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add mov mov add cmp aaa xor cmp outsb pop dec add nop fsts xchg nop aad jp jb cmpsl dec dec bound fwait mov rcrb stc lds ror add mov jle lret gs das push cmp add mov std movsl mov enter (bad) clc iret enter not into stc les data16 sub add add mov in shr (bad) std cmpsb movsb cld stos test stos test mov stc les int3 (bad) enter cltd cmp add add fwait fwait jmp xchg fwait fwait (bad) cltd cltd cld stos test lods stos sti mov sti mov cli mov stc sarl pusha push aas xor add fidivl jp lock lea mov std cmpsl movsl cld stos test lods stos sti mov sti mov fisubl les fidivl je aam imul imul imul jo test pushf (bad) mov std cmpsl movsl (bad) (bad) outsb es outsb es outsb es outsb es outsb es outsb es outsb es inc (bad) jo lock cwtl cwtl lcall iret xchg (bad) pusha idivl idivl idivl cwtl outsl dec (bad) jbe loopne jns mov (bad) (bad) notl add add popf lea (bad) inc jmp pop jmp pop jmp pop jmp pop jmp pop mov imul gs pop out sub add (bad) add je fisttpll lea loopne cmp lea int3 ja js push int3 gs xlat jno into test add add xchg jge jae fildl fldl subl lods add enter mov mov add (bad) aas add clc pop add lock add add add push add addb add add add add addb add pop add clc incl add incl add add insb popa addr16 bound outsl aaa add cmp add and add sbb inc add add or inc jb arpl jne add pop in add add into pop add incl and add add dec outsb gs add add add outsb or push add insb outsl add add incl sub add add add insb imul add outsl jb jae popa jb push enter jnp adc add add add push or push jo outsb fs data16 add add adc ud2 or dec insl insl popa jb insb add add incl daa add add add gs pop add stos add inc popa insb popa popa bound add add add add or inc outsl insb imul add add lea xchg adc pop add fs adc add add add add add insl outsl jb imul add adc pop add add add add or push popa addr16 bound add add xchg or or add jae insb jae adc add add add add push add je outsb add outsl jo insb popa je xor add xchg add add add add or jo popa imul or push add add mov add incl dec add add or inc imul jae cmp and or mov inc add add imul add add add add sbb add outsl outsb imul and add add pop add fs arpl add add or or or add add add adc add jae gs add or adc or add add add add jne imul in adc loope push push adc incl daa add add push add arpl add add add gs add mov jns jg add adc add add push add jb popa xor or aas or pop add pop or add add add add or push outsl jae outsb jae outsb add add or adc (bad) incl das add add or inc popa jb imul loope movl or gs imul add adc incl push add add add outsl jb and or adc add insl add outsb add je imul jae adc add add add add sbb add popa outsb popa je outsl outsb jae sbb add add add add add add bound je popa outsb popa add or dec outsb fs je outsl jne xor (bad) or addl sub add push or inc outsl jne push add jb jb addr16 insb add cmp or adc add add add add or push push arpl xor add popa jo outsl arpl add mov adc incl pop add add or inc imul jp xor or fistl add mov add add add or push insb bound imul add addr16 add add push cltd push inc or adc incl and add and add imul arpl or or or push ret adc add add outsb je popa jb add pop orl or adc add add or dec popa fs jb je add pop add add or add add sub push jae jne outsl jae arpl popa add or or push add jo jb add imul add adc add add add add sbb add jo gs imul add add add add add or push outsl outsl fs outsb add add outsb popa add mov push add add add add add jns outsl jne add add add popa jae imul adc push roll sbb incl sbb pop add insl bound add add add or or add add add add or push jb arpl insl popa outsb add add cmpsb or adc add add add add or dec popa jae outsl outsb popa gs outsb xor add push add imul add adc or adc movups add add or inc gs popa jns outsb insb jns add add add je or gs insl outsb je jns add push add add or inc jne outsl addr16 insl add add or sahf ud2 or dec outsl jb outsl insb imul xor adc add add or push jne jae gs add add adc or or add arpl je popa arpl adc add add add add pop add jb je insb add push add imul cmc adc adc or and incl sbb add cmp inc jne popa add add or dec add or and incl sub add cmp add data16 imul dec outsl imul add hlt adc incl sbb add cmp add jne outsb add pop add add or adc add add add add or inc bound fs outsb je add add adc adc and add add add data16 popa je outsl outsb add or adc add or pop add outsb add je push add add adc add add add add sbb add outsb imul add add and add add add add add insb outsl jo popa addr16 add add adc or or imul gs es add add add add arpl jb popa insb xor or add or or daa add add pop add arpl gs adc push push fiaddl adc add add add add add outsl jo jb insb jns imul push arpl outsl insb insl popa popa insl add add add add add add add popa jb push or push je outsl bound imul or sub incl add add add imul jae add add or or or push gs jo xor adc add add add add add imul add pop add jb jne add or or sub incl sub add dec or dec outsl insb imul add fisttp add outsl insb popa je xor adc add add add jne jns add popa jb outsl arpl add pop push pop add cs add add add add popa insb je data16 insb jns or std push ret or incl and add push or gs je jb gs add add or add or add add add add add outsb imul add add or or dec outsl jb popa insb imul xor incl push add add add jb outsl insb gs insl imul xchg adc add outsl add add popa add outsb add add add push add add add sbb add insb insb insl popa outsb outsb xor sbb add add add add add dec jbe jb jns xor add or push imul je xor mov pop adc add add add add or push outsl insl jbe insb insb add add add outsb jae aaa add out push incl add add insl gs gs xor add or dec jo outsb jae jae gs jae add repnz adc add add add or push popa arpl popa insl xor push mov add add add add or push jne je popa push cmp sbb mov adc add add add add or push outsb jae insb jne imul and add add or add push out pop add incl sbb or push outsl jae outsl arpl imul in lret add add add add or push jne outsl jb jne add add add add or add push bound add incl add add or inc bound popa outsb arpl pop add aam add add push xor add incl sbb add sbb jb gs sbb stos or add push lret pop incl and add pop add popa imul add push add add adc add push xchg or add add add add add insl jne sbb mov or adc add add add or push jne jbe outsb jne xor pop add lret add add push orl add add pop add gs outsb xor pop add add add adc add push sub add add add add or inc popa outsb jae popa jb add add add jae imul rclb add pop add add add add outsl outsb outsl jo outsl jb jne xor add pop add popa fs je add ud2 adc adc add add add add or dec outsb jae insb imul add add inc outsl outsb jbe jb imul push push cltd or or incl sbb add xor add bound bound push add or or cli or add add add add insb jns outsl jo jae pop add add add push stc add add add add add add je add add add jb imul add mov and incl and add aaa or je jne insb imul add add psubusw adc incl sbb or push push outsb imul inc add add add add or inc imul add add pop dec add or add add add add push add add adc add sldt add push cmp add incl sbb add dec or dec outsl jb gs outsl aaa add add pcmpeqw cli add or add or push popa jae imul push add add add incl and pop add addr16 insb add add sub add add push fiadd add add add arpl outsb imul or add add add push notl add incl pop add add add popa jo sbb xchg push push or or or add add push or inc jo je insl imul add xor push add add add and (bad) (bad) (bad) incl add add inc add add add inc add inc add inc add add add add add add cwtl inc inc add (bad) (bad) incl add add inc add add add inc add inc add inc add add add add or add inc add (bad) jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) incl add add add add (bad) (bad) incl add add add sub inc add add inc add add inc add add inc add add add add inc add add mov inc add inc add add das inc add add add das inc add inc add add xor insb mov inc add inc add inc add add add add add inc add add xor jl inc add int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl mov lea xor push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov push push call lea mov push call mov push push call add mov jo mov call fldl call mov mov push push push fstp call lea lea lea push push mov movl call lea push call mov mov lea call mov lea call mov push push call mov lea call lea push push call lea lea call lea lea push push movl movl call lea lea call lea call mov push call lea movl push movl call mov lea call lea call lea lea push push mov movl call test je mov lea mov mov lea lea push push push call mov lea call lea push push call lea push call mov lea call lea call fwait push jmp lea lea push push push call add ret mov lea call mov lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor lea xor rep lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push lea mov mov push lea lea push push mov call mov mov lea call mov push push call mov lea call push push lea push lea push push call mov lea call push call mov mov call lea lea push lea push push push call lea lea push push push call add push jmp lea lea push lea push push push call lea lea push push push call add ret mov lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl movl movl cmpl jne push push call movl jmp movl mov mov mov movl movl movl movl movl movl mov call mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl mov lea call movl cmpl jne push push call movl jmp movl push mov push call mov lea call push mov mov push push call add lea call movl cmpl jne push push call movl jmp movl push mov push call mov lea call push mov mov push push call add lea call movl cmpl jne push push call movl jmp movl push mov push call mov lea call push mov mov push push call add lea call movl cmpl jne push push call movl jmp movl mov mov push lea push call movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov mov movl lea lea call movl push call movl mov mov call movl mov mov call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl push call movl push lea push call lea push call mov mov call lea call movl mov add jo mov movl mov cltd idivl mov xor mov mov mov movl mov and jns dec or inc xor mov movl cmpl je jmp movl mov push mov push call mov mov call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl call movl cmpl jne push push call movl jmp movl push mov push call mov lea call push mov mov push push call add lea call movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push mov push lea push call add push call mov lea call lea call movl lea push call lea push lea push call lea push call mov lea push lea push push call add movl push lea push call lea push call mov lea call lea call movl mov lea call movl lea mov movl push lea push call mov lea call movl push mov push call mov lea call movl lea push call lea push call mov lea call lea call movl movl movl lea push push lea push lea push call lea lea call lea call movl push call mov movl mov push call mov lea call movl push push mov push mov push call mov mov movl movl movl fldl call mov movl mov push call mov lea call movl movl movl or test je movl fildl fstpl fldl faddl fnstsw test jne call mov movl mov cltd and add sar mov movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl lea lea call movl mov neg mov adc neg push push call push push push call push mov neg mov adc neg push push call push push push call push mov push call mov call mov mov movl lea lea call movl cmpl jne push push call movl jmp movl mov mov mov call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call lea call movl movl movl mov lea call lea push lea push lea push push call lea call movl cmpl jne push push call movl jmp movl mov mov push lea push call movl push push mov push call add fwait push jmp lea call lea call lea push lea push push call add ret lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret jmp call int3 int3 int3 int3 sahf sahf sahf sahf or pop add (bad) (bad) (bad) (bad) (bad) (bad) lcall pop add adc add pop add pop add pop add pushf pop add add rcrb and pop add pushf pop add pushf pop add popf pop add popf pop add popf pop add pop add pop add pop add add popf pop add add xorb add add adc pop add add push add sub pop add add addb pop add sahf pop add sahf pop add sahf pop add sahf pop add pop add pop add pop add sahf pop add sahf pop add sahf pop add sahf pop add sahf pop add lahf pop add lahf pop add lahf pop add lahf pop add add pop add pop add add add addb add add andb mov lahf pop add lahf pop add lahf pop add cmp pop add mov pop add add xor add and add and add pop mov pop add add add push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa inc jns jne add dec add jbe popa push je push popa jb outsl jbe add bound jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor xor pop pop jbe popa push je inc popa je out add jbe popa dec jae je imul add jbe popa push gs jns je insl inc jb outsl jb ljmp dec outsb inc jae jb add add jbe popa dec jb jae insb je push bound add push imul xor add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul jbe popa inc push inc imul pop jbe popa push gs popa jb jb add push add dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push jb outsb je bound or inc insb insb inc jne arpl outsb inc popa insb insb add add jbe popa dec bound outsb add push data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add dec add jbe popa push dec xor add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl jns pop pop jbe popa push popa jb jne add bound js gs dec popa outsb fs gs add pop pop jbe popa push je push outsl push outsb imul add fs data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push bound outsb fs add jbe popa dec xor jb add pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec xor popa jb add add jbe popa dec popa je dec gs inc popa insb insb add inc add jbe popa push je push outsl inc outsb jae add test bound jo xor push add dec popa je outsb add add jbe popa push je dec outsl jbe add sbb pop pop jbe popa push cmp je xor add add jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound 