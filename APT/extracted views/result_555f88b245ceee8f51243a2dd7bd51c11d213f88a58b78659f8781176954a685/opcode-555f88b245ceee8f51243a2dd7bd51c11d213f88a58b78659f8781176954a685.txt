xchg pcmpgtd push adc add data16 push inc or data16 push data16 or je or data16 lahf or data16 pcmpgtd xchg pcmpgtd bound data16 or xchg xchg push data16 add or xchg pcmpgtd inc push sbb mov pcmpgtd jne mov sub data16 mov pcmpgtd add dec insb push adcw add outsb add test data16 or data16 data16 mov push data16 in out push inc xchg pcmpgtd fisttpll scas lahf or data16 add pop add add mov out mov fimul add add add sub add pop add add pop add mov add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add cmp add add add or inc test mov test push sbb add add add add add imul imul add dec xor add neg xchg push enter or mov and out mov mov inc mov dec lods xor or stos add xchg stos add add add add add jb gs cmp or popa arpl jo jb jae popa xor sbb add and (bad) (bad) jmp push popa jae popa xor xor loopne add mov or add add add add add add popa xor add add add adc inc add arpl add jae and xor xor xor xor cmp adc add add add add sbb add popa xor sbb add add add add add add add add and pop add add and pop add add inc add add add and pop add add and pop add add add add add add add and pop add add pop inc add add add add xor inc add add add push inc add add add xor add or or add add lock and (bad) decl add add add add add add add add adc pop adc js add test add mov add mov add inc jo jb imul outsb imul add insb imul add (bad) neg xchg push enter or mov and out nop add add add add add cwtl adc dec add add add push scas imul inc xor xor pop in arpl add add aad sbb add add sbb inc add add or inc add add add add (bad) (bad) incl add add rcrb add add cmp mov add add sub add add mov add add adc add mov add add adc mov push adc pop add add add sub add inc add pop add add mov inc add (bad) (bad) incl add add add add adc push add (bad) (bad) incl add add adc inc add adc cmp inc add inc add add add inc add add add mov (bad) mov add adc add rcrb adc add pop add add add add or inc add add add pop add (bad) (bad) incl add add inc add rcrb add add sbb xor inc add add add add add add add add add add add inc add add add add add sbb call add add jae pop add dec add je inc add arpl push add add sbb pop add add (bad) (bad) incl add add add add sbb jo push add (bad) (bad) incl verw add inc push inc add add add push add add add inc add sbb daa sbb xor inc add inc add inc add inc add inc add inc add sbb test sbb ret sbb rcrb inc add sbb ljmp add inc add add add add adc cmp inc add inc add add add inc add adc cmp inc add inc add incl add ljmp add incl add repnz sbb subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp add add add add pop add (bad) incl add add rcrb sub jns loope add scas insb or add add add pusha sbb add add add add or add add add add add (bad) (bad) jmp add add add add sbb add incl add add add inc add (bad) (bad) call sub pusha sbb add adc addr16 incl add add add add insb imul jb gs cmp add add bound arpl imul stos scas das inc dec mov inc mov sub mov lods mov aad cmpsb vmovq fcoms or mov and out mov dec sub mov aaa (bad) sarb dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add enter add add push add add add add sbb inc add ret pop add dec lods xor or stos add xchg inc popa je xor add or add add add add add add add imul insb insb add add add jo popa inc insb outsb add or add inc jb gs outsl outsb jae insb add inc add inc add add cmp pop add or je jmp push mov call jmp add add gs gs xor cs insb add add push add add insb dec outsl jbe dec gs outsl jb add add push inc add push inc add add dec ret pop add or je jmp push mov call jmp add add add add jb gs xor add add sub inc add push inc add add push ret pop add or je jmp push mov call jmp add add add add gs xor fs insb add push add add jne inc gs je jo push add add add add add pusha ret pop add or je jmp push mov call jmp add add add push push dec dec dec dec dec cs dec dec add add add push popa insb imul pop inc add pop inc add add insb ret pop add or je jmp push mov call jmp add add insb insb outsl arpl outsb jae insb add add sub inc add and add add js pop add or je jmp push mov call jmp add add pop inc add add test pop add or je jmp push mov call jmp add add add inc insb outsl jae dec popa outsb fs add pop inc add add nop ret pop add or je jmp push mov call jmp add add gs je dec popa outsb fs add add sub inc add and add add pushf ret pop add or je jmp push mov call jmp add add add add imul insb gs add add pop inc add and add add test pop add or je jmp push mov call jmp add add gs fs outsl outsb jae insb gs add add sub inc add inc add add mov pop add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs gs inc je jb bound add pop inc add add rol add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs imul add add dec add data16 add add add pop inc add and add add int3 ret pop add or je jmp push mov call jmp add add jae outsl inc inc add je add add add add cmp add add add add add add add add add add add add add add add add add push add add popa add add add add jo jae add add add add test push add add outsl add outsl add push add jne jae add or add inc add jo imul add add or add dec add insl add jno add and push add xor and push add xor add add sbb inc add and add add or add dec add popa add add add add add add add mov or add dec add jb jbe xor add add push add add or add dec add popa add xor add add popa add add insl add outsb add add add add add jb popa add je outsl add add add add add inc add je jae jne insb add add add add add je jb outsl add add jb aaa add add add add outsl add jbe add add add inc add add imul add imul add add adc add dec add popa add add jae je add add adc add inc add data16 outsl add je jae add add sbb add push add add jo push add insb add popa add add add add inc add insb add jb popa add add add add inc add jo insb add je imul jae add add adc add inc add outsb add add imul xor add add sbb add push add add add insb add add jae je xor add sbb add inc add popa add outsl add add jp add add add add add add add arpl outsl add jns arpl add add add add add add add popa add insl add outsb add arpl add add adc add inc add arpl arpl popa add imul add adc add push add jae je outsl add imul xor add add adc add dec add je jb popa add add add add add outsb add add jp add add add add add popa add arpl outsl add imul add push add add jne add je outsl add add add add push add add jae cmp add add or add dec add imul add adc add push add outsb add add je xor add add sbb add dec add je jb imul arpl push add add add or add pop add jp imul sbb add push add imul jb imul imul add add or add dec add arpl push add add add add add imul add imul add add add add add add popa add jne add add add add add je imul jae xor add or add push add arpl add add adc add push add add add add add add add add arpl push add outsb add add add push add add add add add adc add inc add jbe imul je outsl add add adc add push add imul add jne add add push add add popa add push add add add add add jne insb add insl add cmp add push add add jae outsl add push add add add push add insb add add jo add jae add add push add add jp outsl add outsl add add add xor add add add jbe add add bound insb add add add add add add outsl add add je jb jns cmp add or add push add jns popa add jne add add adc add inc add add insl add jae je cmp add sbb add dec add je add jae jns jae je add xor add add push add add jb add insb add jae jne jb add add add add add popa add jae outsl add add imul add push add jb imul imul add add add lods xor or stos add xchg sbb inc add ret pop add inc ss dec dec add add pop pop jbe popa inc jb gs popa jb add add jbe popa push popa jb jae inc jno add pop pop jbe popa inc jb gs je dec imul pop pop jbe popa push je inc popa je pop pop jbe popa push je inc insl jo pop pop jbe popa dec bound gs fs data16 add jbe popa dec gs add add jbe popa inc jb gs popa jb imul pop pop jbe popa push popa jb jae dec add add jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa push je dec outsl jbe add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa inc jb gs je add add pop pop jbe popa push je push outsl push outsb imul add jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push je push outsl inc outsb jae add pop pop jbe popa inc jb gs bound add add jbe popa dec bound gs pop pop jbe popa push je inc outsl jo add add jo mov jo inc inc lods mov sbb mov push in cwtl imul dec lahf pop cs mov mov inc xor xor pop in arpl mov (bad) aaa dec addl (bad) or add int3 xor add imul inc xor xor pop in arpl jo mov jo inc inc lods mov sbb mov dec lods xor or stos add xchg jl sbb ja sbb add outsl jb arpl imul add outsb je outsb xor sbb add and sbb insb je add sbb (bad) add sbb add add add add add add add add add add add add sub add pop and andb lods inc clc adc mov insl inc movsl subb adc js pop push lret mov nop mov stos (bad) sti aam jmp ds jg idivl fs shrb mov enter mov shll sahf sbb leave cmp or into shlb pop nop nop or jp push push rolb test adc hlt push dec in mov cmp jns mov fsubs or mov stos repz sbb das inc (bad) sub popf loopne iret xchg and mov stc sbb lcall ss aad lret call je arpl or cld add imul mov cmp jbe jae mov je movsl lods jne (bad) mov mov cs or negl adc sub pushf jnp xchg push mov xlat add jns inc (bad) sub into push ret sbb test negb inc lds (bad) pop push out pop cmp sarb dec inc arpl jmp or push add lret push cld bound in xor out push add jnp and imul test lods dec push pop mov cmp lea rclb cmp inc pop rclb bound popa xor mov jns int3 sbb imul push cwtl lahf lods out fildl sub sub push add mov call dec mov roll nop xor sar dec cld ja out imul (bad) lock mov cmp (bad) jb cmp push (bad) add movsl jge cmp add dec stc std inc push inc cmp adcb jb les aad data16 mov outsl cmp scas mov test push fbstp sbb xchg push out gs jns xor dec lret cltd push (bad) dec mov in xchg cmp jge ret mov jle scas jae mov rclb (bad) adc xchg mov inc in (bad) aaa imul lahf sbb mov (bad) lock cmpsl or int3 int iret dec (bad) ret ja rorb mov movsl ret adc es lds jns mov push and fs mov idivl lock sar lods cmp pop mov fisub popa int3 shlb sti push mov and xchg fisubl inc shlb mov jne mov movsb insb dec daa ds add jge and aad das mov fbstp jno mov in out add icebp add and sbb jle xlat mov mov cltd js xchg bsf and push aam imul fsts daa loop add cmp sahf or aaa fdivr dec cwtl sub sarb insb dec lods mov pop or ljmp (bad) xor popa nop push stos ja adc inc out dec xchg adc cs pop jmp push and xlat fcmovbe push cmp pop std mov sbb xchg push pop cmp xor lahf xchg cmpb jo sbb jl enter arpl test inc fwait adc pushf gs fdivrs jmp push sub inc mov push out cld popa xchg and sub scas cmp adc pop lods (bad) jbe push pop sbb cmp dec ds xor cli jns outsb adc cmp push pop mov jl xchg push and mov aaa dec add xchg inc and sbb inc xor and push orl or inc idivb xchg and dec fsubrl rorl adc xchg icebp movsb aaa cmpxchg mov dec imul (bad) xlat dec int and cmp push and mov jns icebp stos mov cmp xor jbe xchg mov enter cmpsb pop mov test aas cmp pushf pop cmp fcomps in and jo push dec or mov push mov loop lea mov xor rcll mov pop xor sub jns mov push lahf hlt push pusha pop loope adc sarb xlat and xor push xor and push call or cmc pop icebp fsub in leave cmpsl mov push lret (bad) push (bad) sti sub inc adc mov lock aaa mov sub repz enter lods jae outsb add cltd dec mov stos fildll xor (bad) clc inc adc mov cmp jl dec arpl dec inc inc xchg inc mov ljmp pop jnp sbb push inc cmp add push imul dec mov and imul dec insb and adc aam inc fadd jo adc subb sub mov ljmp sbbl adc fistpll adc mov cwtl out (bad) cld cmp mov mov lea push out pop pop add lahf data16 cmp or push (bad) jo loop popa imul jne xchg inc ret dec jno jmp lcall cmp mov call mov stos push outsl mov lock roll loopne and addr16 mov mov (bad) pop mov mov mov cmpsl aam leave push jmp mov ja lret mov jae mov pop inc enter dec inc fstl je xor fildl add shrb cmp sbb mov or push jns xchg pusha sbb cmp xlat xor std jl jno mov (bad) mov nop mov jg lcall jmp add imul add insl push mov or test mov int3 dec shrl fildll loopne mov leave ljmp cmp lea ljmp xchg mov jbe jb add cmpsl xlat pushf icebp mov or fstps xor into jbe and pushf arpl hlt stos or dec and fwait xor and (bad) call sbb aas push mov push (bad) xor mov fucomip (bad) sub push or (bad) scas inc cld push in fimull inc test imul cmp pop or repz dec cmpl ja repnz sbb mov lds add ds stos das lret sub (bad) lods lock mov hlt ficom sub xchg xchg push addl jge push (bad) addr16 dec imul sub sti xchg cmp sub std fcomi cmc jb adc outsl hlt xor jns add and pop shlb into push sbb bound cld popf push mov test mov fist pop data16 sub movsb xchg inc add xchg repz fistl mov sub push mov scas mov xor test aas aaa adc bound fs int3 rorl ret xchg cwtl fiaddl aam out inc (bad) pop sub jnp stc mov loop leave sahf cs (bad) dec dec mov aam jp outsl data16 jb sbb adc into in test cmpsb sub jle and (bad) pop sbb lds rorl cwtl cmp aaa std adc rorl sbb ss mov sahf sbb mov lcall pop mov lret adc add or (bad) movsb ret out dec bound fisttpl xchg hlt xor jne mov aam push imul mulb sarb lods aaa outsl test insb pushf popa mov frstor pusha adc arpl push sahf pop or pop fs test sbb sub adc sub mov mov inc add (bad) jl and in mov aam jb outsb and pop mov in sub xor jle and pop push jge sbb repz cwtl ja xchg push mov sar es ds and adc jg cmp jae ss push test xchg daa test mov andl inc inc pop or cmp and and inc lds lahf sub xor push test add lcall sub xchg int3 xchg fs (bad) imul scas inc sbb xchg pop cmp ja sahf nop jle lock enter jnp movl push arpl fwait test leave xlat jge movsb cmp cmp mov xchg inc mov push out sti pusha xchg and sub icebp cmp mov es test xor (bad) jne add sbb cmp (bad) cmp stos jecxz sar ja insl adc cmp pop js mov push mov jnp xchg add mov mov mov and pop test and popa push scas imul pop mov mov jp or lock fdivrl int3 lds adc pop xor stos ret movsl lods mov or mov and (bad) notb mov push hlt push out mov stc loopne xchg xor push cmp lret in inc sbb ja cmc std sti mov (bad) xchg pop fldl xor dec loop das ljmp int3 add adc inc in or xchg fmul rcll adc dec and pop inc lods pop repz jmp push dec adc in js lds les bound cmp fbld jp popa ss aam sbb and pop std dec and hlt fnsetpm(287 stos mov addl ret mov enter outsl icebp scas and outsl dec out mov loop mov shll lret sub inc imul sub xor sbb push push call add dec cld jmp into dec sar addr16 cmp push and or add sarb cltd add add cmp mov leave ret insb lods (bad) in (bad) xor xchg jecxz sub mov loopne mov xchg ljmp xchg test mov push aas insl mov push xchg popa push sbb adc pusha jns lcall test out xlat sahf jnp jo xor sarl or and in push call movsb nop aad movsl and sbb and lret dec inc mov dec jmp pop xchg and es stos cmp leave xor push push (bad) dec je in adc inc jp mov divb cmpsl loopne sarb mov jnp pop mov repnz sbb es jns mov jno test push pop pop xorl xchg ret stos dec dec xchg clc into mov xor mov mov inc or pop pushf push mov (bad) xor ja lock fiadd ror outsb nop arpl mov test adc cs mov xlat (bad) push fnstenv aaa inc jge jb mov aad push or repz or test push mov jp jg dec xchg pop fimul push fsubl mov daa lret addr16 mov pop (bad) dec out push push xchg add subb into dec ret imul or rorb in pop jne xchg cmc or rcl movsb push jecxz xor mov int js mov push mov add pmulhuw jnp arpl mov sbb js es sahf gs cmp or test xor ljmp or movsb outsb or xor loope fsubl ss data16 ja out mov mov inc pop out fisttpl mov and jb cmp push sarl push jge cmc pop mov popl inc jns hlt jae,pn xchg inc mov jp sbb push inc cmp add dec push jae or fcmovbe sbb shrl cmpsl jmp fs loop mul push aad cmp sbb mov push xlat ret fsubrs sbb xchg pop pop xchg jecxz,pn mov jle ret pushf sbbl and (bad) idivl mov xor (bad) movsb inc jnp dec in daa xchg insb out pop aam iret pop pusha sub push loope mov fldcw mov loopne pusha push lea mov fmuls sub fstpl add repz decb ds xor lret inc cmp test and jbe (bad) cld cli adc push hlt pop les add loope das jmp cs or add mov add mov or enter and lock (bad) je pop sbbl cmp cmp bswap jp pop pop int3 push dec movsb repnz mov inc cmpb cmp jbe aas sub inc mov adcl ret dec add xchg addr16 shll mov lret cmc inc push mov rorb (bad) cmp cmp sub enter adc out dec inc adc cs mov xlat aaa dec jge adc sub and inc icebp hlt repz xchg cld outsb clc xor js jecxz and xchg imul sti sbb mov push mov movsl test cmp dec (bad) insb lret jg jmp jne gs ret dec dec mov jg dec leave xchg push xor je mov jbe cmpsl scas mov xor ss test jg mov stc negl (bad) hlt loop push flds sub lahf inc (bad) sub rorb lds test std jae mov mov loope or push aam jns xchg in jno outsb xorb inc test out xor out push inc lret out movsl xor imul les xchg sbb jle out rcrb fdivs add dec and cltd mov lods xchg pushf cmpsl test jge movsb xchg enter mov addb mov stos sbb imul lods push fisub andl addr16 sub push pop jbe adc add in ljmp out xchg cmc pop insl (bad) aaa rorl push (bad) cli cld push (bad) js lock insb cmpsb jmp (bad) cmp nop and jne sub adc fidivr or or mov cltd (bad) imul pushf and xchg (bad) js insl push shrl mov dec movsl out outsl pop mov add mov sub repnz lds and sbb ret sub repnz push cli in fistpl jae cmp jle mov imulb icebp clc roll fidivl add inc push cmp int jb addr16 int3 test pop adc std out adc pop or sub sahf and sub xor push test adc mov ret cld xchg push nop push test dec xchg out aad lret arpl pop fcom scas push jnp pushf sti push inc sbb mov pop cmp jbe popf (bad) push jle jns movl push adc loope dec jl cmpsl cmp (bad) cmp insl data16 mov fwait in xchg inc xchg scas push daa cli pop cmp sub int ret movb or pop stos add pop pop clc cmp test mov divl imul cmp mov mov jp xchg add mov jae js std mov xlat inc jne adc pop subl lods push mov push jle mov jns dec (bad) dec mov push fstpt invd sub inc jns lret leave loopne fadd sub mov test dec mov mov inc mov cld fwait lcall adc faddl decb jo pop ljmp add and aaa leave mov sub jecxz std jp sbb push ja cmp aaa add jmp sub cs inc decb stc aas inc push lea enter shl into fs add clc stos sbb mov mov das out pop mov in jno les aaa (bad) ret jg lahf pop cmc mov adc cmp pop sarl mov sbb pop cld insb test cmpsb push sbb loopne repz xchg jl ret arpl iret mov outsb outsb lock pop hlt loope out mov lret inc shll push xor mov xchg loopne pop xor inc sub inc sbb adc sbb mov jle cwtl and inc inc mov add jl inc in jbe inc andb mov fadd push push imul jmp push or jge (bad) sub loope jg push fbld push outsb into imul push mov subl rcll insb mov or sbb out pop js fldl pop ljmp add lcall lock dec movsl call sbb push data16 add out dec pop jnp sub mov repz cwtl mov mov paddsw (bad) jae push adc dec inc popf jmp mov mov jl iret outsl in fildll cmp jns icebp mov pop jmp cld sahf jg lock aas mov xorl rclb out clc popa rcrl test leave lret and mov (bad) fs or std mov dec popa inc (bad) xchg dec daa xchg repz xchg rcrl add cmpsb in jmp or aas stc daa push sbb ds fistpl lret or hlt adc mov dec mov sbb xlat sahf mov iret and ja loop pop das xchg outsb push pop add pop inc add xor inc ret sub jmp pop pop arpl xchg lahf inc in add stos mov fsubrl cmp jecxz jl adc mov and lods insl icebp sbb mov add and xor popf pop mov adc pop fist and pusha jae ss lcall inc daa xchg xor sub dec cld add sub mov xchg or push out out fstpl insb xor pop and les mov inc stc push loop xlat mov cmc xchg mov lds xchg adc xchg shl xor in add xor inc pop mov mov pushf cmp pop inc fmuls and cmp push add int out lahf pusha in cmp aaa repnz push xchg aam jg mov rolb or test push lea loopne test jo stc jge jp mov fldenv mull xorl mov jg int jno mov es (bad) lods cltd add mov sti fisubr jecxz je sbb into movsl mov mov outsb test xchg add icebp mov xchg jbe mov std ja out gs hlt fucompp (bad) xor dec jae dec xor cmp adc jb lock cmc popf mov repz push xlat add jns inc fstl sub adc or test cld mov mov mov and dec fbstp loope pusha sbb add leave cmpsl pop xor mov ljmp xchg mov xor jb sarb pop icebp mov push lahf mov xchg ficompl jne pop xor iret out push pushf push mov orl adc (bad) fisub cmp fld test mov sub (bad) adc imul inc loop stos push fucom lods sub and and mov dec daa (bad) adcl pop and or insl sbb cmp push sbb sub pop je (bad) pop int enter pop and push bound xor fcmovbe movsb popf jp inc xchg (bad) in pop jbe jno mov inc inc imul xchg dec jnp jo xchg in xor loopne pop or sbb jae xchg mov sub cmc in test push and sbb sbb fsubrs mov push js dec btsl jbe inc ficompl loop add jne sbbl sub fnstsw cltd jge push sbbl jmp iret mov sbb inc inc ljmp das fbld jmp sub js sbb rcl dec rolb adc cs push cmpsb ss cmpsl mov int xchg nop mov cmp mov push imul cmp xor cmp test addr16 push sbb fiaddl in push jg stos cmp fnstcw sub out push add (bad) stc loopne mov scas (bad) leave inc lock roll push sbb xor dec sbb mov clc push cmpsb mov out cli ss (bad) jo mov ret fsubrl mov mov add xchg add rclb sbbl imul dec push sahf dec lds ds repnz or mov mov fiadd mov or pop jno xchg icebp add adc int3 lahf push ffreep sub jae push dec je mov add add fmull loopne xor sbb inc mov popf cs test repnz dec loop cmp push in rcr out mov (bad) or ss rolb stos jmp test in xchg push loope sub push ret arpl jg insl subb adc mov xor movsl (bad) mov jns ljmp jne sarl mov xchg dec adc cmp xchg lahf xor and sbb sti push or loope mov icebp fnstcw test shr bound into mov insl mov pop popa repz leave out test mov push mov dec fwait je xor inc sub cli (bad) mov iret (bad) cmp or mov jl push and test mov fstpt inc jmp jl ret mov test std (bad) xlat mov (bad) ljmp cld xor subl mov frstor stc add mov sahf xchg xchg out push push lret inc add xchg lds (bad) daa mov sub mov out pop mov sbbl int3 xor fmul push mov shr in push pusha mov pop rcrl sub sub jecxz lods cmpsb cmp or sub nop cmp push push xor pop (bad) jb push movnti pushf ljmp cmp jmp loop and cmp js lock (bad) lea mov loopne mov and mov pop sbb lcall xchg jmp xchg enter inc inc mov pop mov mov mov dec pop inc and test dec imul test rcrb imul ljmp sub jo fcmovnu sbb mov mov pop sbb scas aas dec mov pop sub popf mov into fs jbe loope pop jno insl push pop and and ds mov jp fnsave inc rorb outsb call push pop bound (bad) sahf inc in add push movsb pop je adc notl ror jbe loop das cltd int3 mov add ja mov add jecxz mov sarb pop lahf adc xlat loopne add lods pop push and stos lds inc pop mov rep xor sub or mov push adc insb out inc push scas lods xor outsl out xchg or lock adc xor test cld push mov mov sub je pop cmp sarb pop into push xchg jmp xlat movsl popa inc addl mov xchg cmpsb mov sti (bad) pop aas push sbb xchg xchg stos aaa or dec dec ljmp ret aad and int3 testb test rcl sub push xchg enter ret insl (bad) adc push call push xor dec jg push adc fsubl push jae mov push adc mov mov sub fldcw add daa adc sub mov loopne stos out xor fsubrs les shrl stos jb sub movsl xchg push add xor ss adc mov negl or clc or into test test gs mov lahf jle cwtl adc adc add (bad) sbb xchg stc pusha leave add dec sahf das lea mov xor mov stc rorl bound xor inc int cmpsl xor cmp pop mov fcomps or pop dec cmc push cltd sbb xor pop out jg icebp aam sub fsubp fnstenv inc adc mov and fwait outsb shrb fs cmp cmpsb cwtl xchg jge iret push je (bad) add mov sbb pop imul insb ljmp and js sbb xor out jmp aad out scas sbb jmp xor (bad) negl pusha push jae (bad) push lret mov push mov lahf and mov (bad) mov xchg fmuls es mov inc aas push inc jl dec jp outsl ret xchg das das insl sbb cmpsl lods jno inc gs xchg mov sub repz cmpl and (bad) scas lds shrl xchg push cld out (bad) dec rcll daa jne aas fstps loope add push sbbb stc pop inc sub fstpt mov iret out mov pop jp cmp push loop or and (bad) pop ja sbb adc mov adc adc js cmpsb int and les mov xlat xchg xchg sbb pop cmp xor lahf xchg pop cmp jnp enter bound adc test cli lcall cmp sbb push jmp and mov pop out dec inc xchg insb push in popa neg out iret scas (bad) enter adc inc movb dec sbb mov mulb mov das movsl clc mov sbb iret outsl cmp or pop stos jl push sarl xor ss dec sbb xchg sbb mov push push inc dec pushf dec les cmp mov test jp ds fldt ffree pop adc sti int3 lds lock push int sahf xchg ffree sub lods aad dec jae mov add (bad) pop pushf fildl fmulp jbe sbb jo ucomiss test sbb pop icebp cmpsl rorl xchg sbb push das pop pop out mov sbb ret jns notl hlt push test stos andl jmp sbb pusha push bound push outsl xchg mov mov xor fsubs sub cmp mov dec jl stos das pop (bad) cltd xor cmpl or bound repnz loope xlat jae sbb jecxz mov or dec mov cwtl std push subb mov mov shrl scas pop and outsb pop mov inc sub les arpl out ret jmp mov xchg dec ror and enter and rolb jno jge cmc imul and fdivrs sub lods dec push mov sub xchg and dec subl pop sub imul pop xchg push cmpsb cwtl adc mov ret jmp rcll mov lret push push (bad) iret icebp pusha jp fwait cli or test movsb mov lahf jl jno jae mov subb cmpsb in push sub call jnp sbb mulb mov lcall es int3 out rorl xor adc orl pop test pop push divl cmp in loope cmp push mov lret repz sbb mov mov jno ja inc mov (bad) inc je adc pop (bad) lods cli pop ret pop push stos push xchg mov xor dec movb ret int3 popa lock inc loope inc cmp mov (bad) xor (bad) fist mov cmpsl stos in pop or inc sti in fldcw inc lcall jae pop fildl std push outsl push push jmp xor add mov sub sbb add clc cld js push dec add pushf ss sub fsubrs push shlb dec adc adc ljmp jge ror je loopne cs lret mov add sbb (bad) xor mov into jns sbb fbstp bound rep fwait xchg gs cmp push mov xor jle lds mov mov push maskmovq imull test lock fwait mov outsb out fimull daa out les test jb inc sti adc (bad) subl pop hlt push push adc mov pop adc add les mov mov sahf cli lds ds add xchg stos xor dec jmp mov shll push mov push test hlt mov rcl sub xchg xchg or inc jl insb aad aam stos leave push data16 dec out mov cli cmp (bad) rcrl push mov cld inc icebp cmp popa push fadds cmp mov daa pushw xlat push add adc imul lcall in in xor adc adc iret cmpsb jp mov jo inc pop mov xchg dec add (bad) fldt xor push ficoml mov jbe cmpsl scas ja fsubr xchg xor aaa int popf sub push adc cmp mov cli negl ret xchg push flds sub shrl rorb lds or test jp cmp andb dec popf mov mov xor mov clc rorb adc push xor sub xor cmp pop scas jge sbb lret mov pop add jle lock fsubrs orl add dec and cltd mov lods xchg pushf fs arpl jge movsb xchg test inc fimull movsl and iret inc rorb jle jns (bad) rorb iret mov dec in mov push js lcall or (bad) fsubs scas outsb (bad) stos insb lock pop imul inc (bad) out fdivl popf loopne mov pop ficom pop and in cwtl nop bound test xor jae mov add pop jecxz mov cmp jo sahf je (bad) scas xor dec push or mov cs imul lret es fnstenv mov fwait jp xchg adc xchg shrb xor std cwtl sbb mov or insb cmc mov fwait cmp push jle pop inc xlat shr jbe imul mov or jge cld add in int3 (bad) in popf pop jecxz aaa test dec jmp adc push nop rorl roll inc jmp adc cmp iret (bad) cltd xchg outsl fdivp jl mov xchg push stos xchg mulb (bad) xor jns xchg sbb repz lret xchg gs lret cmpsl adc stos cwtl inc popf out push sbbl and jmp sbb adc mov mov insl addl inc leave ret sbb or jne mov sti jbe out fs call sub cs dec jno dec xor vpunpckhwd pop push les or hlt fistpll icebp and push (bad) add pop insl sub dec lahf xchg or cmp hlt jle dec mov and fisubr loopne pop pop pop dec enter mov repz cmp mov jmp insl insb xchg xchg mov lock or mov je sahf xor addr16 push and mov orb testl in aad movsl andl mov pop mov ret adc rclb inc mov adc push in (bad) mov rclb push arpl sti mov das out pop lea in jno les cmp ja ret jg mov sbb nop mulb pop aam cwtl mov (bad) mov sbb loop cld insb xchg cmpsb pop sbb pushf mov scas xchg cld stos xchg jl jle lcall mov outsl outsb lods pop pop hlt loope out hlt pushf lret xchg and scas jne jo mov dec loope pop xor inc sub sti fdivr int xchg cmp adc addr16 jle cwtl and inc mov mov in xor inc andl add fld pop movaps enter or jge (bad) sub loop subb lea pop mov pop xchg push jmp incb rcll insl mov test push xor mov sbbl jmp sub ja mov and repz or fs dec cmpsb movsl sub push addr16 add call pop sub mov repz cltd das mov cmp cmp sub adc add push adc inc jno mov divb iret outsl in loopne sub imul repnz pop ljmp jg icebp es jbe aas mov inc jae adc pop subb in test int mov jp jne gs or pop out dec popa inc fist daa xchg scas xor je jbe push or rcrl add cmpsb stos in push or inc cli jecxz fdivs cltd fcompl xchg pop fcmovb hlt adc mov dec outsb xchg sbb xchg pop pop lcall js lahf test outsl push pop es idiv mov mov xor dec push nop dec mov sti push testl loope shl lret cmpsb pop jbe (bad) imul pop adc cmp (bad) lea mov mov push adc je sarb repz pop xlat dec cmovs cmp xchg loop ret pop mov pop push and stc imul lea (bad) cmpsl lock test enter call (bad) int sub inc adc sahf pusha icebp fimul or aaa (bad) push leavew lods xor out mov mov (bad) sbb cmp (bad) fdivrp fwait jae stos xchg cmp sarb pop sbb push dec cmpsl cmc dec mov inc addl add jns inc das je inc ret pop cld test cld ret (bad) add jmp mov ret push (bad) arpl shrl inc imul lahf divl xlat push push lret jg outsl fcoms dec icebp adc imul in mov jne std ds jle les adc inc hlt clc mulb adc lea dec out and rcrb sar sbb mov test dec fidivl (bad) push in (bad) data16 jns push dec lds push push ret lcall push aaa jbe out repz and mov xor dec ja push cmp xchg xchg data16 std cli mov (bad) xchg pop faddl xor inc loop das ljmp int3 add mov cmpsb lret dec lret add xor test fadds lock jno mov dec dec pop rcrl stos push repnz out cs dec into repz sub outsb jg fstps pusha dec mov fwait sbb ss sbb xchg pop sub pushf sahf xchg jb inc int ret inc (bad) mov mov mov test sahf fdivl inc (bad) movsb and lods mov into aas adc sarb (bad) rorl add push fs loop testb aaa sbb push mov and insl xlat or test xchg stc pop hlt cs std sub and fist and push notl pop mov mov fcmovnbe movsb popf jnp add and popa pop xor jb add mov inc test mov xchg jnp jno (bad) xor and icebp jb mov push sub cmc xor jg and sbb pop aaa sbb out idivb push (bad) lock ja inc ficoml sub addl stc jo imul les cmp cmp inc sbb jmp rorb mov add xor pop sub daa push mov fs bound stos pushf pop push popl pop xchg pop mov dec lcall adc fcmovnbe mov jle lahf add inc sbb test cmc pusha cmp xor mov jge lret loop cld leave and cmpsb push sbb gs sbbb and es push add adc mov mov mov xchg jecxz rolb add adc clc lods aas mov out xor jp outsl adc jnp mov jge cwtl pop mov out jle and mov fildl addr16 pop xchg push scas imul sahf (bad) or loop lret data16 ret push cld into (bad) call repnz mov xchg jae push xor pushf leave stc mov mov pop idiv shrb rcll push aaa add jp inc cmp or lods test std adc enter loope or call xor xor iret push adc mov adc inc out bt xchg movsl lea repz xchg mov adc push dec cmc sbb scas sbb stos xor (bad) negb sub mov fsubl push lret push stc arpl (bad) (bad) jge movsb cmp loop sbb in add or daa out mov neg inc scas mov jg (bad) mov mov mov sbb repz and in ljmp inc aad inc sub shrl xor rcr cli pop push mov insb add repz fstpt in and dec rclb push push cmp ret jae ret mov lods ss push inc es mov adc mov out mov popf add dec cwtl imul loop nop mov movsl mov in lcall xchg lcall sub sbb dec sbb add (bad) stos mov jge jb mov xor mov (bad) scas and push pop ljmp rcr jl sbb popa out pusha daa sub mov pop in dec inc xchg imul pop cmp sub into lods or jbe push adc dec inc mov mov test out jecxz je mov jge cmc mov (bad) in mov mov jae js inc mov jbe pop aad xor lds lods push rorb ret cmp xor and (bad) mov scas or inc adc in mov (bad) xor push int3 leave loope fadd sub aam dec mov mov (bad) mov popa mov inc das fdivs inc shll aam aas or rol push or inc call jle mov jns dec and mov (bad) mov pop lret in outsb push (bad) dec add dec cmp dec int ret nop and into loope movsb pop je (bad) hlt jmp adc xchg mov iret jbe loop das lcall dec xchg mov add and sub mov pop std sbb jne fs cmp popf xchg pop sub pushf shrb xor subb push add sub mov cltd adc insl xor loopne jns lret imul or xor stos jbe out mov mov cld pop in fisttpl mov test sbb push push sarl pop into push xchg cmpsb hlt mov inc (bad) xor add jb xchg cmpsl mov inc (bad) pop orl fistl and jb,pt or lods iret sbb mov mov cmc fist aam sbb or lock jecxz mov je cld sbbb pop fwait pop push sub imul incb idivb bound add movsb es in push mov inc pusha sub imul outsb into les shrl stos mov jb mov mov xlat xchg push mov and cwtl jp mov repnz mov xor dec jbe push cmp leave loop inc arpl test test ret pop ret mul xchg push fildl loopne cs push xchg add cmovns jecxz,pt or and (bad) mov out jae mov mov dec dec push adc inc into cmp pop or push jns icebp pop lret push dec mov aad cld inc jg lock mov aas adc orb (bad) xchg dec gs test fldt add mov ret inc pop pop pop lret addr16 cwtl or loop scas dec iret (bad) std rorl (bad) cmp aaa rol cmpxchg push shlb dec adc or popf mov adc sub in jl iret int3 mov fbstp lods sub sbb fidiv dec int3 push mov cli sbb inc movsl mov (bad) cmpsl mov imul adc fs jns jne shrl std inc inc insb pop in mov jle je xchg out xor jecxz arpl dec push or aas das cmc clc icebp mov pop daa js into push cmp mov ljmp dec push adc xchg shrb iret inc fstpl out pop les test idiv movl pushf addb sbb insl rorb mov dec dec out int3 pop out adc jecxz sub lret das and and push aad dec ret xchg sbb cwtl stos mov ror lcall mov push insb push push xorl inc mov je inc jno addr16 adc lahf movsb push cli mov and xor mov push push cltd jno jmp in mov mov int hlt out aad lret or insl pop rclb fnstcw js out test (bad) cmp cs je (bad) mov xchg jns (bad) fildll ret push jb xor dec ficompl xchg sbb xchg pop outsb sub or mov idivb and mov and cs xchg sbb repnz ret jne jmp mov xchg dec (bad) lret and adc add push cmc aas mov push loope push ss jns inc cmp lret in pop pop lods test cld adc adc decb out (bad) pop or sub pop ficomp arpl jmp or cmpsl inc mov adc out push mov and aaa ret push aad push gs cld dec push dec hlt pop popa xor stos das pop (bad) adc lds movsl and push adc xchg cmp jnp mov sbb outsl pop push sub (bad) outsb xchg dec sbb in mov cmc faddl mov jle (bad) in fbld aas leave mov mov pop jo repnz gs (bad) call ljmp repz or push lahf ja xor imul std fidivrl xor pop aam push lods cli push les stos addr16 push fidivr inc out js dec (bad) imul popf push insl clc lret push or mov outsl dec xchg push fs (bad) std or insb movsb mov jmp push push into inc pop inc leave xor mov sub cmpsb push dec sbb icebp popa mov test aad sahf call (bad) jno mov rcrb xor out or xchg pop jmp movsl xchg add cs sub out mov inc cmc adc xor xchg icebp xchg push mov adc or jne push adc dec inc lahf in inc mov rcrl in jle push jno cmp imul mov adc mov pusha jmp loopne inc (bad) in (bad) repnz mov mov sbb popf (bad) adc mov lods add outsb insl in push push loopne mov scas and out inc (bad) xor push mov dec mov push add add dec cli xlat sbb ror imul jo dec rorl (bad) push and inc xor (bad) hlt add inc push mov enter cmpsl pop in lds push mov in fldenv popf dec cmp sub pop mov xchg xchg add adc (bad) mov or daa dec push sub cmpsl pop ja sbb pop pop sti cwtl cmpsb or int3 aad jns in xor mov or pop mov loop cmp popa movsb fmuls mov jle and js and pop clc mov push bound enter pop (bad) addr16 test push sub movswl push das and pop adc jo inc push mov xor bound and fist cmp pop stos lret inc icebp mov mov inc pop call sti popf je lock sbbl pop aam jb pusha rcll in notl fs test mov jl ret stos mov inc or or loope dec out iret faddl ror insb (bad) fsubrs popa and adc xlat sub push xchg lret test (bad) jno adc (bad) imul insl push jmp xchg mov mov dec (bad) sahf sbb jmp and cmp pop fldl mov ss xor sub mov sub (bad) fsubrl push popa test sub nop sahf mov stos lods ljmp (bad) pop out aam jg mov xor or lea xchg into fistp mov jnp lods mov cli popf out xchg icebp mov not mov mov ret push in add dec cld jns daa xchg lahf or cmp or sub in fcompl (bad) xor pop and ret cmpsb inc ds clc push xchg ja call test subb adc or js lock lret mov aam sti aas jle out subl push jne adc dec cmp add xor mov rorl leave mov fidiv test dec jmp adc test nop lods or mov cmp mov mov xchg sub clc test jo xchg jl daa mov fsubs mov push aas out mov pop mov cli mov sub loope pop iret xchg lret and and inc mov fst cmpsb lahf (bad) xor push fistl out pusha js jae shrb inc inc inc imul mov (bad) lock fdivs mov daa cld jmp pusha mov das stc lds cmp sbb movsl jge cmc or mov push add loopne push xlat adc fcompl movb ja andl std or cmp addb ret mov mov or jle inc dec inc in adc cmpsb adc mov out xchg and and lods pop aam dec ret inc icebp pop xchg push mov dec pop jmp xchg test or sbb addb add inc pop fstp scas popa out aad movsl (bad) (bad) ja mov cmp mov lret test jmp sbb faddl sub cmp in mov add dec cwtl jo call ljmp repz aam lret imul iret dec sbb mov mov movsb sub sub mov nop js or lods jg push (bad) in addr16 or daa jo mov mov dec stos inc jge dec jp outsl les das fs fistp pop or sub add cmp and in lret xlat je out ss (bad) js test dec dec nop mov xchg mov sahf xchg jl loop cmpb mov jle cwtl mov push jecxz adc mov ds movsb xor and add aaa adc add cmpsb test ljmp sbb xor push adc mov adc xor movsl int cmpsb (bad) and les jns push push cmp arpl pop dec jg lods xor sarl insl popa bound adc or sti gs fs cmp cmc xchg neg jbe push push out mov or mov insb dec mov imul aam xor dec sbb cmc movsl addr16 out jmp mov iret in cli mov sub jp jne rcr cld mov or xor add add aad inc xor ficom adc or mov mov icebp aaa aas pop test rorb xchg mov lods mov pop mov cs test in xchg mov arpl stos fwait push adc int3 xor fsubrl icebp test dec pop pop cmp push mov fsubr mov ret or pop les cmc and stos call andl in xchg ret jle sbb cmpsb insl outsl push xor sub cmp repnz adc lods inc jbe nop pop sbb cmp ds xor clc in xor js outsb adc cmp pop and push and cli push or fiadd test leave jp shr popa xchg lds lods inc repnz scas in pusha lcall enter adc inc imul pop hlt push addr16 jae das add sbb into adc sub or jl push arpl inc xor sbb add inc or push or mov cmpsb pushf xor test jnp mov pusha fisttp bound push nop xchg add push sub inc xchg cmp mov or es adc mov pop pop cli fucomi dec or in xor mov pop push mov shr jecxz in mov sarb mov ja gs imull aas lods (bad) dec call and sbb mov jmp fwait push aas mov int hlt cmp call mov and aaa or stos leave lock out mov cmc mov out (bad) and loopne mov lret sbbl mov pop adc xchg in cmp cmpsb inc movl mov sti mov or add xchg lods cmp cs fildl mov xlat cmpsl and (bad) rep and push out sub and fcmovu push enter mov push sbb repnz ds scas xchg das sub int cwtl jne inc (bad) arpl aam loopne pop jno insb push mov cmp inc mov jns dec jbe imul out push fldt add inc popa outsb decb aaa daa in lock jo (bad) push xor stos jle mov jae dec or mov xchg xor pushf push loop jns dec sahf mov (bad) lahf push add mov pop xor stos les inc cmp arpl repnz mov and (bad) movsb xor mov mov push psubb in inc xor lods es pop xchg and or xor inc cld test sti push push ss test mov sub cmc aas daa mov pop pop or push aaa sub movsl sbb jns xlat movsb inc inc xorb enter mov test cmpsb mov cli lds xchg dec stos ss sub jno ljmp mov pop movsl and mov loopne inc fimul test cmc mov rcl inc aad insb movl stos dec shlb push imul jl popf lcall adc mov fcoml std scas outsl hlt sbb stc in inc add and jns in pop rcr adc daa movsl es mov xlat test shrb ficom ljmp pop jno xchg inc inc mov mov jne (bad) xor test lods divb xchg scas js cltd jmp in mov repz popf sub fnsave ret xchg cwtl adc mov mov cmp add or jp lret mov or (bad) dec sahf (bad) mov mov (bad) jb popa (bad) dec dec out adc adc xor jle xor cmp pop mov xlat sbb lret add sbb jg lock pop pavgb mov aas ret pusha add push and xchg stc gs test cmp push inc testl sub sbb jmp imul mov mov jne mov xchg push sbb aam out scas pop dec cmp lods xor test sub fcompl lea mov lret pop (bad) push push and popa mov lahf mov jne inc shlb test xlat or pop pop inc outsl inc mov mov dec test jl dec jns outsb ret mov cmpsb sbb pop in mov mov mov dec sub shrl xor jl sbb pop insl mov mov cwtl fmull je dec fcoms es ds and jae repnz testl xchg daa ss jnp into mov int mov stos pop lods leave imul push cmp fucom mov lahf and ja sbb adc adc push shr dec mov adc push out xchg movsl shrb jl frndint repz add (bad) jle ljmp xor loope pop jg mov out stc jmp fstl dec fdivrs pop and jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp and sub ljmp arpl ret pop pop aam sub daa addr16 add dec mov mov out cmp ds scas scas (bad) push push or int3 leave jge es cmp mov cmp adc adc jno adc cmpsl and jno xor add imul out sbb in jle mov pop popf popf rcl mov inc or pop scas push mov pop ret aad pop cs pop push test jae jo xchg jl push fcmovne inc out pop xchg in test cmp mov pushf mov push adc inc push and pop dec mov outsl out jmp mov mov dec xor aas sub cmc je in (bad) shr out xchg xchg mov (bad) stos stos mov xor test cmp (bad) ss outsb fs jbe (bad) mov aad mov ret aas fwait icebp lock jo int3 inc fs push or add cwtl mov loopne dec or mov xchg daa daa xor rcl xor dec dec ja dec inc (bad) or adc nop adc jnp stos cmpsl cmpsl mov or push push in in push mov out repnz pop clc xor sti imul fldcw sbb cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb sbb outsl and loope add es cld cld clc clc inc inc adc cli jne add fwait fwait mov jmp sub add dec pop jg sub and ljmp lcall pop pop hlt aam dec dec adc add pushf orl sahf gs mov mov ds scas scas (bad) push push mov test std mov pop repz icebp icebp inc mov pusha imul xor adc xor leave dec dec add data16 cmp in dec mov xchg popf leave fnop jnp jns cmp div jge jmp imul push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc add (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and fldl es dec or cmp xor mov gs rcl jne mov push xlat ds test inc inc push negb adc xchg test mov call dec xor push mov lret mov je inc lret div icebp leave andl outsl xchg mov aad jle (bad) jecxz sub stos lret (bad) fcmovu and movsb movsb jg inc inc lret push ret mov sub jmp pushl push inc aas mov push dec dec push fnstcw fwait sub test or xchg fistpll cmp xor std (bad) call add xchg jmp xchg sub lcall lret and pop movsb arpl nop cmpsl lock lcall iret ljmp jae int3 push add jge (bad) out rol (bad) idiv gs lret xorb push adc mov ret mov fsubrl lds scas fbstp jo addr16 cmpsb fcomi mov ret stc imulb ss outsb (bad) sti push mov stos scas push pusha mov jg adc lock xchg fldl jle pop and fwait jbe jl cmp leave (bad) leave negl add aad (bad) aam std in sahf sahf cld and xchg inc sub popf push adc ljmp insl cli mov int adc pop in bound jno xlat inc xor clc xor xchg pusha add enter mov add mov (bad) outsl xor lret aam mov fwait pop pushf repnz inc data16 jb pop push push iret movsb in shlb dec sub cmp jmp adc stos out dec leave mov sub adc jo cmp pop sub add (bad) xor shrb and or inc push pop repz mov jle mov adc pop movl aad sub dec dec movsl movsl cmp mov nop (bad) xor adc fs dec lret dec add data16 (bad) adc dec rorb dec or lods dec dec test jne int3 sarl cmp mov jne jmp adc add adc push sbb jle cli or ficompl cmc arpl xchg daa (bad) out (bad) js lret enter (bad) stc testb cmp fldenv fcmovnu (bad) daa es or mov sbb in hlt sbb add xchg (bad) (bad) pushf repnz mov adc test out jae stos stos insl sub lret pop vpmacsdql enter fimul aaa gs jb bound or das inc (bad) lock int3 inc leave gs inc inc cwtl adc or xchg jg sub xor lcall inc (bad) adc mov push xchg (bad) pushf xor movsl cli dec rorb (bad) or push xchg mov or sub ds xchg sub aaa aaa repz (bad) push in repz data16 push in in stc test mov jl test fistpll cmp insb sbb scas push fcomip fldpi jmp pop pop add or mov or bound sub (bad) jb xchg xor out cli adc rcl insl das loope add sar jae lods adc stc inc inc fsubrl adc outsb (bad) mov mov (bad) les sub call mov sbb xor jge pop aam add les cwtl shlb pop mov inc mov mov call mov lret push js or pushf xchg icebp jl adc ss mov (bad) (bad) (bad) (bad) incl mov je sbb push pop push in push daa push mov add fist or jns mov jge sub lods mov jb lahf aas bound xor add test lock pop sarb lret dec or and pop aam mov subb inc inc lods imul dec call mov and jl outsb in repz xlat (bad) mov out (bad) pushf je sbb mov jecxz mov (bad) enter sub and jg les and int popf and ret ret aam and int3 out and movsb gs aad mov out dec test outsl mov and sbb push fwait ljmp mov ss sbb or std loopne movsb in and cltd jbe inc mov sub decl mov (bad) in movsl mov mov pop sbb pop (bad) jp jns in adc jle (bad) mov sbb xchg and cmp incl push es fwait adc add or rcr addb (bad) stc lahf cmp pop inc aam lret lahf (bad) scas pop test and add jl movl in xchg adc movaps rcl xor enter push pop vpavgb xchg mov pushf loop,pn out and nop or xor ret xor gs lahf sti mov (bad) movsb inc (bad) (bad) int3 xor pushf adc adc adc (bad) xchg outsb loopne sbb ret lods dec rcrl fdivrs nop inc fistp add pop stc stc loope dec repz out out (bad) stos shll (bad) adc ljmp mull daa xchg add out pop cmp outsb cli adc inc dec repnz xchg sub pop xchg jg sahf scas rcrl and cmp sub nop in mov jp pop ficomp (bad) push mov js pop mov mov add mov mov out in cli jno sub pop movsl pop jo repz fwait inc inc ljmp or add pop repz jg mov cmp hlt cmp mov add movsl xor insb dec mov pop aam jno push fucomip gs pop dec (bad) xchg sub test and mov push inc lret lods mov loopne lcall sbb push jmpw data16 jg out pop iret mov jns inc xorl or dec rolb pushf sahf add jb pop pop push loopne (bad) je xchg cmp into stos xorl cltd in push mov dec cmc and fdivs pop test xchg cltd repz loopne std aaa mov dec or fwait sti add push push (bad) and (bad) test or inc stos arpl sbb mov pop and and insb cli cmc pop pop fistl adc lds fnstenv cmp cli sub pop push sbb jb insl fldenv and ljmp mov mov test cmpsb jg inc cmpl fildll sub cmp jmp jp inc je fidivl push fwait scas mov cmp mov pop or in mov adc cmc ja clc push lret int3 and cli cli in push data16 push mov test mov jbe add pop popf adc jns mov jp in or push test andl scas push push jbe outsb or ja test dec cmp adc (bad) stc inc add das das jbe scas outsl xchg sub adc mov sarl pop lds addl repnz push push fcomps lret std adc xor push pop dec andl and xchg arpl icebp icebp mov or or (bad) jl xchg cs adc lret jo mov out fildl mov mov jb inc popa (bad) mov or xchg xchg and xlat cmp inc inc js inc dec (bad) aad pop add or adc lahf popf mov cmpsl addr16 rcrb loopne push push pusha mov mov sub pop pop sub add aaa aaa repz mov xchg dec inc add sub orl aaa adc inc dec adc mov call ds mov daa pop pop xor mov and inc jmp add pop cld cld aam cwtl sbb pop and cmpsb or es scas stos lret push int3 add sahf aas xchg jg add iret jae cltd xchg cmp sbb gs ja ja lret sub jo pop adc scas scas dec shll enter ljmp sbb pop ficom test push lods sbb and loopne and ss push push cmc movl pop pop cmp sub movsl movsl cmp mov nop inc xchg (bad) fs xor jbe int3 dec add xor push in sub jp mov pop and adc (bad) pop inc mov jmp mov push scas sbb dec icebp mov int lods lods push loop mov stc mov cmp inc inc (bad) (bad) adc pop rclb sahf test fwait movsb ljmp es les loope addl sbb aad movsl movsl mov (bad) adc sbb out add insl insl push and sub sub ljmp les mov aam scas call pusha test mov mov arpl ret scas insb in cmp or adc add mov pop ret sbb sbb outsb iret test cmp sub xor adc xor mov add icebp mov iret jnp push push sub lahf sahf mov inc inc xchg xchg push push sbb cs cli ffreep jbe sarl test adc cmp ss cli sub adc imul rcr push inc mov das sbb cmp adc imulb cmpsl push into mov repnz xchg hlt mov ret aad popa pop cli jp push fbstp cmpsl movsl cmp xchg mov inc jb xor xchg incb pop mov mov and lahf lea lcall mov (bad) jmp pop into imul ret movsb movsb push std lock inc push flds add cwtl loope dec dec lret js mov xchg daa daa xor movsl ret ret dec adc pop sti pop or push xor sbb mov aad subl sub push jno rol scas bnd jl or (bad) aas aas jno (bad) push incb push push push rcl test stc mov push mov out sbb ljmp imul xchg xchg pop pop mov pop or mov addl mov aaa aaa push adc push jecxz in mov sbb cmc je add mov fadds clc fs les addr16 or es sub test cld push rcrb cmp pop push push xchg jle addr16 leave (bad) std add xor mov pop aas aas lods mov ds and pop aad cmpsl xchg insl insl js in icebp pop xchg addl xor adc xor in fisub mov in sub (bad) sahf push and jns add mov jge jmp movsb mov out (bad) dec (bad) mov xor adc xchg sahf dec repz inc push mov add mov ds addb sub fmull (bad) int push hlt lods mov sbb xlat sub mov dec mov je adc mov (bad) adc dec cmpsb icebp clc insb push sbb out cmp add adc fmull pop ficom shlb ror out idiv mov inc xchg test fsts push ss ds and test dec cwtl jae sbb push addl ss push add cmpsb add ss add loop adc popa sbb cmpsb sbb jbe rcrb jg xchg outsl enter lret (bad) (bad) repz shrl insl cmp cld push jle cli daa push add insb lahf jl shr add fisubrl cld call (bad) in mov inc pop pop xchg fdivrs or es jne jb inc push rcll mov jp jg sahf insb lock add loope pop pop dec pop adc pushf pushf lcall mov xchg mov insb push inc mov pop (bad) ss mov mov fidivrl ds aam (bad) outsb (bad) add push jae xor scas loop addl call repnz inc jg and xor (bad) xor daa and cmp sub inc push mov js push aad out pop fidivl mov iret adc cmpsl push data16 test adc pop xlat mov shll ljmp lret idivl fcompl push scas (bad) stc mov adc mov push outsl outsl rolb inc jge adc into fs out mov nop lds (bad) enter aam es in pop fistpll mov push adc cld clc jae scas jge and jno mov out xchg cmp test sbb mov hlt or jl mov out test out int3 fnstenv bswap pusha gs mov pop pop int mov lods bound push stos ret mov ja ds fistpl pop sbb xor (bad) jae cli outsb mov adc jmp ja pop xchg add leave mov jp push gs movb dec adc add addr16 jbe add stc adc jnp sarb mov jp int add rorl jmp loope roll aam xor jno xlat scas (bad) scas lahf sbb add pusha cwtl icebp adc inc pop in jb call xor and mov xchg lods add (bad) loopne mov int orl in cli sub lcall mov lds int3 cmp sbb inc mov jnp outsl stos out gs lods outsl lcall sub mov arpl mov sub adc lds dec add shll mov gs shrb jo test cmp and insl dec and adc jl lods or xor out andl fdivr incl mov pop dec (bad) xchg push mov add pop (bad) jb xadd movsb pushf scas into lock cmp std movsb gs add inc inc cmp cmp das mov pop inc push outsb pusha lock sbb inc dec pusha cli cli incl shrb insb (bad) int insb es adcb shl scas mov jns mov in push mov int add call xchg xchg add dec fcoml lds adc pop (bad) out insb js sub push xchg xchg stos in sbb lret imul ss shll (bad) icebp cmp bound scas and (bad) push fnop pusha pusha jne ret push push imulb or aam stos dec mov or xor shrl arpl cmp fisttp or xchg rcrl cmp cmpsl push jl push push mov pop fsubs inc ret and lods xor repz (bad) outsb pop adc sbb arpl das lret insl sbb jne int3 mov push cwtl pop pop mov sti and cmp call adc rclb popf bound aad test or je lret and inc sub add pop cld cld aam dec nop incl jmp mov jnp dec inc inc inc test div repnz fwait pop (bad) cltd cmp (bad) (bad) out and jg xchg and ljmp fsubl ret xor push inc adc jl xchg rolb add test or mov outsl mov and cmpsl sub stos xor js test xchg icebp jb sbb pop and out sub arpl fwait sub mov or add cmp jno xor mov mov pusha (bad) xor movsl aam rcrb mov pusha cld mov lahf sub jp out or das or push ret nop or insl fistl inc (bad) or std test pop pop aam int pop (bad) scas imul scas mov xor mov mov lret push test repz test mov arpl pop and movsl bound fisub (bad) in jg les stos es (bad) sub int3 fsubs aam cmpsl pop lahf mov or mov call and ds dec mov pop cmp roll add xchg mov and and sbb sti fstps popf xchg pop leave leave dec dec mov cmc lcall rcr fdivrp adc aam enter pop or pop push push pop push jnp jns fprem addr16 sub and in imull lods pop mov jg popa xor leave idivb fbld (bad) jp add in and outsl and imul mov in pop call mov test or gs push fsts cmp data16 pop pop fnsave cmp jmp cmp imul stos xchg aad loop mov ret or xor incl dec mov adc test shll pusha inc cltd mov xchg adc addr16 cmpsb leave lea inc push rcl mov fcompl mov aaa push out push (bad) ret pop iret into jmp cmpsl addr16 dec xor push push add loopne add out and add mov es fistp sbb xchg pop bnd fisttp or push dec (bad) jge mov push adc pop out in mov mov push push or xor not test enter xor rclb mov out pop pop sub sahf jge dec xchg stos and cli mov fwait fwait sahf sbb cmp jmp popf adc inc or rorb pop in arpl mov ljmp cmp ficompl add dec ds insw (bad) int3 push test inc xor jge arpl lock cs out daa adc loop out mov (bad) ret mov inc icebp push push data16 mov dec pop push push in in adc mov push out popf push sub (bad) cli xorl (bad) adc ret jle adc andl (bad) jle jne cli xor (bad) inc jbe lock cmp xchg inc mov dec popl das sbb sar mov sub test (bad) pminsw or inc inc ss ds popa test aad xor test cmp cwtl pop cwtl pop fldt fs out test xchg pushf and jg out in es adc scas int3 je push mov aam sbb scas fcomps jge (bad) push lret gs loope aas enter add xor lea int3 mov xlat adc jae xchg icebp stos jg fwait in out xchg push adc out insb cmp xor subl (bad) xchg xor scas jecxz bound dec xchg xchg push push sbb sub mov into cmp outsl mov sbb mov jle lock test jae jp sbb lock jmp lods xlat pusha and push cs add mov (bad) std or cli mov fildl mov orb or data16 xor cmc loopne jge mov xchg and or gs stos xor cwtl inc orl ds lcall add (bad) sub clc cmp iret test pop adc adc roll cmp mov jne mov mov inc xchg lahf lret fild lea xchg push mov test cmpsl jge or (bad) addr16 push stc inc test out in sti adc push negl loopne rorb and lret or mov push pop mov cmc add cmp xchg or add xor out mov icebp jo nop iret and movsb dec or sbb sbb adc sub jmp jae inc and mov lret mov daa jno int3 lock xchg xlat xor pop pop push loopne or cmpsb ret mov je mov call fcomps and pop xor add inc push mov leave xchg scas out lea sub mov cmc jbe mov push xchg jae xchg incb inc andl in icebp insl insb fs mov outsl lret outsb lds jge xchg push push in pop inc iret push (bad) push push outsl adc xchg or js push fidivrl cltd rcl clc test jbe push cmc idivl sub hlt movsl adc add cmp jl jno stos jnp sub popf (bad) sldt clc sbb xchg dec (bad) std aaa mov orb sti add lods movl xor push ret repnz (bad) xchg std mov mov inc sahf jnp xchg adc xchg pop (bad) mov dec dec dec test outsb mov pop (bad) mov xchg sbb push mov sub adc (bad) and out mov mov sub shll enter mov mov aas aas push das sbb xor push and add shrb pop mov div sbb cmp out je cmp fidivl mov jns xlat stos push imul mov sbb inc mov popf adc xchg mov pop testb mov xor scas pusha int cmp jno (bad) push push lods adc adc jp in fcmovnu aaa inc les jl je int ds jno or jbe jnp (bad) jno xor push ds outsl mov js in pop push xor cltd std mov inc repz jno daa leave pop insb pop cmpsb ljmp and in out and mov mov ret mov mov jmp jmp rcll add test cltd adc lods mov or movl clc cmp lods aam adc xor cmp (bad) orb mov inc xchg in aam sub pop out loop mov ja outsl fwait xchg dec dec call pusha sbb cmpsl outsl mov and adc cwtl adc ret mov cltd pop xchg xchg or lods push and sub icebp lea and and test fsubrs out lock test aad addl xor addr16 enter iret pop pushf xchg dec adc mov out into xchg add test divb adc in aaa jnp aaa addr16 dec xchg jb aad shll adc lcall cmpsl mov in mov std inc mov mov inc add insl mov inc cmp and lcall jnp sub ss sbb pop or xchg test fs inc fiadd add lcall into pushf mov sub jbe xchg fcmovne cmpsb outsb test sub test sahf (bad) mov jmp daa sub mov hlt inc lods lods push adc lahf (bad) (bad) xchg or out adc leave enter (bad) stc stc lea (bad) or xchg sub add mov or jno call pop cmc aaa jl mov pop push push sub pop pop jecxz arpl push outsb and (bad) mov cltd and cli clc insb jp sti in out inc mov lcall gs sub ret shrb cmp aad cwtl cmpsb js arpl push jae cmp nop xchg pop dec and xchg (bad) mov push push and pop or push lret fist jae push adc or test (bad) fildl lret or inc jb cli cli mov lret add and add addr16 fldt pop mov and div jge sahf pop rcll jmp pop jp jecxz faddl cmpl dec out jle repz and mov xlat push sub and inc push xchg out sbb xor push data16 mov adc outsb pop jge sbb aad cli rcll mov mov pusha cmp outsl pop pop clc mov jae pushl mov in (bad) mov jp into into mov fcmovu aas cmp sti mull push je sub add jae sbb inc mov icebp mov out std push push movq lret sub jl lret jge inc inc pusha pushf or push out (bad) loope jns dec dec sub addr16 lret test sbb cmp or mov movd or add mov cmc pop sbb mov cltd ret dec ss push adc dec or (bad) cltd fistl pushf fsubl cmp mov sbb fbstp xchg iret xchg jae (bad) sub lea jbe mov scas lret int3 xchg xchg ds push push adc and sub div div dec dec sbb sub jnp or ss icebp imul push add xorb imul add call mov aam scas test sub or sbb jle jmp inc insb stos daa push cmp (bad) cmp pop push adc dec testl push rclb mov pop (bad) pushf out jp divb xchg rolb inc xchg push or push xor push add mov xchg inc aas mov or sbb cs cli xlat sub sub jo or inc pusha mov clc push pop sub rcrb stos jp in test faddl fidivl xor push icebp inc mov out rorl push repz add mov lea cmpps push cmp dec in icebp mov sbbl cmp jecxz sbb cmc adc enter sub cmp fcmovu pushf lock push pop xor outsl loopew in in into into or mov sub and fidivrl cmp push and mov sbb mov pop loope movl mov aaa leave add mov fs push cs in in adc pop add popf popf rcl sbb sbb enter or cmp movb jge jb push movsl mov mov bound push loopne les add das dec fsubl loop stos jbe sbb add lods cld mov fwait cmc mov push inc test jne adc push sbb or xor int pop arpl and (bad) push xchg or adc shrl mov mov pop popf ret or cwtl ret in mov mov add jbe mov cmp scas stos cmp lahf data16 fs fisubrl inc jns in leave dec dec enter push adc xor int3 mov js add and loop icebp stc stc xchg inc pushf das xchg inc push push pop or sbb xchg dec in rcl sbb jno push nop pop popf js adc mov xor cmp cmp shrb jl scas inc cmp and dec dec xor mov popf mov pop mov pop or push add arpl repz inc lret dec hlt xlat movsb aas mov sbb sbb push aam push les xor cld insb jae dec lock jmp das js sbb dec jl,pn dec out movq inc cli pushl push xlat into outsl adc xor iret and mov jge subl pop push stos add push aaa mov sub push push sbb ret add dec jo daa adc je test push mov inc sbb xchg mov cwtl sub xorl xchg inc jno leave inc xor add push cltd je rclb insl pop sahf mov add xchg push mov jns or mov mov sub sti add sub (bad) das (bad) je push push lret and xchg enter repz inc or std jo mov jo add mov add in int (bad) or mov iret dec jp outsb in lds sbb mov dec dec cmp fcoml or loopne pop xchg adc call and sbb (bad) sahf test inc inc ficompl mov cs sub push push pop pop dec dec mov cmpsb (bad) les cmp lods lods stos stos fcmovu push push icebp icebp addl aad sub dec dec movsl movsl out push cmp push (bad) add mov inc and xor lea and jno xchg popf adc fmull (bad) jno cmp jle jne jmp negb cli stos sar xor jmp jno lcall jnp repz adc je fs xor jecxz xchg mov insb add sbb out or repnz pusha mov dec sahf ret aad ret push sbb mov stc mov dec loope movsb push out sbb mov xlat mov fwait dec mov sahf mov mov adc sub into mov out dec mov mov inc push fmuls push inc adc pop jecxz ret mov sub mov ja adc icebp adc cmp xchg mov fcomip iret repnz or inc jmp mov add add mov into sti sti insl mov or sbb leave adc mov mov and jnp (bad) fistpl dec push cwtl aaa ja js imul insl dec cmc ljmp or fcmovbe jp (bad) lea push add out int3 int and enter and xchg call dec add adc mov mov pop mov sti adc mov nop cmp jp sub xor sub sub sbb cmp mov push pop fdivrp cld jae ret ret mov xor sub mov fs aam cmpsb (bad) pop mov sti add cmp ds lcall pop xchg push pop jp repz sbb push inc cmp fiaddl imul sub sbb outsl sub push mov inc (bad) jmp push ret jp jns jg mov and sub testl xor jno add inc lahf (bad) aas pop out jo sbb or dec lock push icebp add jl iret mov and stos sbb es mov jp cmp mov int mov sbb cs xor sub pop mov fwait imul cmp adc xchg xchg stos fisttp push andb ljmp fcomp mov rol fsts test sub mov pop pop push cmpsb daa gs insl and inc insb fsubs enter cmpsl push jp push cmc cmc test cmp in addl fnop jmp xor or inc mov lcall in adc lods and mov inc ret popf jne or cli mov add sbb hlt add sbb push cmpsb flds movzbl cltd cmc test lods cs fwait mov push (bad) (bad) xor push or add icebp lea or xchg outsb (bad) xchg repnz mov dec xor enter pop dec fstpl xorl bound push ljmp out out sub lcall inc dec xorl mov pop inc mov je movsb inc sbb add pop div lock adc sbb xchg pop jo cmp mov int jl dec dec sbb add fldl2e jae xor lret imul inc inc (bad) push push das push xchg inc loope mov stos leave stos stos sub (bad) mov push xor mov xor fs test inc repnz enter in cs popf aas push sbb data16 faddl xchg dec dec stc xchg push into fwait adcl xchg xchg adc (bad) cmp sbb adc jns dec fisubl lods xchg out repnz push push aad dec lret call (bad) in mov enter push sbb sub cwtl pop daa adc es ja hlt jae inc lahf sbb stos mov mov inc (bad) fstl and lods imul jo (bad) sub ljmp out out pop cwtl imul and sub scas cltd sub pop lds mov in mov daa test and cltd push fsqrt xor inc insl mov in imul cld dec int pop mov out dec adc cmp (bad) pop (bad) insl ret add push fabs mov pop xchg push stc push jns cli sti xor pop lea xor cmpsb loope mov es add std push (bad) out scas repz inc add or adc mov or (bad) je repnz mov push mov in rcll mov lret arpl call out outsl jmp mov insb push hlt fsubrl jp iret ja in es adc scas xchg dec mov push stos and adc jp fbld or clc sbb cli ljmp and adc shrb jb or inc insl imul push xor leave leave dec dec push push stos inc rolb je mov imul jno mov jp mov cmp xor jno jmp sub jecxz xor add sti outsl sbb add inc (bad) icebp adc add jns orb faddl add popa pop xor sub xchg xchg sbb cmp movsl loopne xchg or cmp add dec scas cmpsb andl fldenv dec nop lret mov push dec cmp cltd and and addr16 or mov xorb mov inc (bad) inc push push push dec fs int3 int3 lods push negb or iret in nop xchg imul xchg das and xor mov mov inc (bad) adc mov pusha push nop in cmp sub sbb jp in push iret dec ret and jnp push (bad) mov lods test jge cs sbb mov (bad) or test add or enter mov stos adc ficoml arpl push push sbb bound aad addl push fs push std (bad) ror jl out sbb cmp jle adc fisub cld into add ja mov les aam mov dec or dec es sub js jmp ljmp out int3 inc rcrb aam in xchg xchg das and add mov dec mov push sub lods out (bad) ds cmpsl push fiadd add shrl divl adc ja insb insb aaa mov stos xor xchg aam push or stos mov or adc dec cmp fstpl das das cmovo mov jno shr cmpsb and adc push and mov push push cli adc inc and adc mov dec je jmp jno popf pop inc sub andb inc inc jns scas xor cli mov mov icebp (bad) mov ret push aad mov pop lahf xlat adc jmp xor aad push out jae stos stos insl sub loope call js dec sbb imul sub push lea mov or pusha sub imul rcrb push mov rorb test cli or out outsb mov and jp pusha (bad) clc adc xor dec mov pop seta ret ficomp in rclb cmp push bound mov add div cmp mov daa daa in mov cmp aad jg push pop jle jno push movsl and mov repz ja cmp cmp add jecxz xchg xchg mov mov daa in mov dec jbe call inc jnp es gs movsl xlat es cld in lds xchg sahf adc and xchg xchg mov insb push and mov dec test add lock cli or call pop (bad) jb loop movsb movsb cmp int3 or push push or mov and lret dec dec push xor dec mov push pop add jp push nop rcrb aad loopne cmpsl sub out pop add push stc mov (bad) popl in or mov loop push lahf pop sahf pop in xchg leave idivl mov push jb or inc dec pop pop xchg xchg adc (bad) cmp sbb adc gs sub ret jge jmp push aad push (bad) jmp pop inc pop cmp add not inc ljmp pop adc sub push pop pop in js mov jno pop into pop or jne add pop (bad) int3 push cmp cmp or or sub mov ljmp arpl pop or jg in sub flds popa mov mov cltd in ds push stos sbb insl ljmp test xchg fisubrl imul push add dec in leave into mov adcb inc cs das push in fmuls stos aas rcrb das test xor ret mov leave cmpsb cmpsb jmp je mov mov jae jecxz sub scas incl or add ret pop lea mov add (bad) sub lret ja mov repnz mov jb cmp cmpsb (bad) jo (bad) adc fucom lods cmp rorl pop adc xchg xor and or aad mov popa cmp cmp adc movsl dec inc cmp int cmp cmpsl das scas loope dec ja xlat adc jle bound lods insl mov dec push add out and push pop pop jo std rcr pop (bad) jae xchg jp add pop imul stos cmp xor mov xlat jno fbld jge push cmpsl dec pop push push in in clc adc mov pop push pop rclb jns xor dec push jl test cmp adc subl sti mov dec fadds test std je loop adc js inc sub dec add jo in data16 aas cmp cltd push in add sbb scas push lret jns data16 enter jae xor pushf xchg push scas rcll dec cs cmc (bad) insb sahf push jp cs (bad) xchg sub pop mov movsb and add sub ds out sbb xchg sbbb rorl ja jae js mov dec cli orl adc dec adc imul int daa les outsl incb pop push aam inc push xchg lahf ss loopne pop sub jg adc adc sub sub cmp push sub xchg aam adc notl add js or and add cmp scas mov adc xchg loop scas sbb pusha fisttp xchg jmp fmull cmpsb push dec add daa arpl (bad) xchg sub xor add sub inc cwtl divb jmp mov js inc cmp or and xchg sub jae inc xchg cmp enter addb jns mov aad out mov adc aas das cmpsl sub sub xlat lods lahf mov out test mov daa stos out push (bad) cmp scas sub (bad) xlat xchg (bad) repnz popf pop lea xchg pop (bad) push and cs ljmp mov dec ret xchg inc mov pop mov mov cltd cltd and lret adc and xchg pop jmp lea mov sti movsb je sub and out cmp mov fisubl mov fdivl sarl (bad) in lret or out and scas stos jecxz popa (bad) arpl jnp ds repz je xor or pop test add lds test jmp dec shll dec xchg sbb test testb ljmp adc fmuls dec push movsl push das add data16 sbb push sti insl in mov roll pop fwait call adc mov cmp insl js xchg lods in (bad) imul jl daa pop jp,pt push arpl data16 pop gs movsl jmp sbb ret pop cli in cltd sarb and jge (bad) mov mov loop movsl xchg icebp jle jno push xchg test mov btc xor jp movsl (bad) mov mov stc pop shrb das cwtl pop mov (bad) test enter lcall (bad) mov mov enter popa sub push sbb dec stos js movsl adc ljmp (bad) cli cmp rcr cmp xchg or mov or jg dec imul ret mov or movsb mov cmpsb movsb (bad) (bad) jns xor int3 addl inc or out rcrb inc or ficom (bad) jb sbb dec mov aas insb xchg fildll inc push (bad) adc popl and aas mov idivb nop cmp sub pushf cli mov pop push sbb aam aas sbb xor cltd es push cmp test in jnp adc pusha mov pop xchg xchg and push in jmp push pop insl jb cmp fsubs fs jl nop or pop sub lods movsl xchg push js add pushf ja adc cli cld dec xorb mov iret sub mov dec dec lds sbb sbb cmp arpl xchg insl popf aam shr pop std sbb repnz orl mov pop (bad) scas cmp scas es data16 cmc jl cmp lcall sbb dec lods orl fs mov lock leave push dec movsl sub int3 je,pn pop mov (bad) push fdivr in scas xlat mov gs xchg xchg push lods aam sub xor cs mov pusha sub pop and push and add xlat ss inc pop popf in cmp aas xor mov xor push (bad) pop push mov mov inc outsl push inc iret jecxz adc orb xchg jb es mov cmc mov fadds lret adc push sbb outsl ret movsl jo pop cmc aad mov sub sub fist ficoml push sub jo xor repz ja sbb addr16 icebp sbb mov pop and lock outsl rol or outsl lods scas sahf xchg fisubr sbb cmp cmp mov pop and cvtpi2ps pop xor cmp inc mov jbe negl mov insl or incl std loope jnp or jle jle std dec mov dec nop and sahf jge xor inc cmp push and aaa ds jnp add je incl push inc mov xor loopne pushf add pop sbb mov jecxz mov mov clc mov lret sahf or pop jmp ds icebp scas aad and jmp add je inc pop sbb adc add idiv adc lock fwait mov jbe xchg (bad) mov sub flds add cwtl imul sti cmp sbb xor push add sub (bad) push bound dec push loope nop nop jne mov add cmpsl jg cmpb push dec popa pop and inc and push adc mov (bad) pop nop fnstcw cmp (bad) scas and jb movsl lret adcl imul dec mov and push push outsl test mov cwtl jns fimul mov adc (bad) or fidiv mov fnsave cmp push sbb loope pop xor fistpl mov aas inc outsl daa pop and push mov cld adc test or jl iret dec add sub andb decl mov stos outsl adc adc pop push cs mov jl mov mov scas out loope shll rcrl (bad) int3 test repz fistl lods in add in cs in clc dec xor cmp mov les aaa sbb mov mov xchg sub mov fwait and popf and add jnp movsl cld jl jle (bad) mov daa pop push cmp or mov push adc fmuls xchg sarl pop je popl in xor cmpsb inc xchg jne (bad) push pop or iret cmp xchg int mov or push fist dec mov jmp (bad) cmpsb xchg movsl jp add xchg xchg adc test scas sbb arpl bound lcall add leave out sub iret das sub dec pop jmp jl mov rolb adc scas cmp xchg jbe and fneni(8087 and jbe mov push in xchg insl pop and push xor pop xor int3 leave jle add out popa fs (bad) gs movsw in cmp xchg mov mov pop cmp outsb dec dec xor mov lret dec xor sub imul and icebp jle fnstcw push fidivrl xchg sarb jle orb xchg (bad) dec ret and lea shrb sarl xor sbb insb int int fstpl gs movsl dec adc lds and (bad) jmp in fsubl xor xchg pop or leave mov pusha jnp into jne mov dec fsubrl repnz add fbstp movsb daa int3 inc pop push lahf int test test or or sub in xor xchg (bad) push ja fild push movsl mov mov enter stos cwtl jl jmp cmp push lahf lock pop and inc outsb cli push adc aas jb mov les xor pop dec rcrb xlat test rol sbb pop cmc dec (bad) cli mov sub push pop mov inc jno mov arpl pop ss inc call lret and lcall sbb sbb push es mov push inc pushf or push mov into push mov fwait adc mov or add add sub ljmp jo sub into dec imul and ret mov mov and cmp cmp pushf out mov sbb clc fnstenv repnz mov ror cmpl xor leave mov xor je jle repnz sub ss rorb sub aam int3 ja jnp inc repz mov sub adc lods outsl icebp adc mov inc mov mov xor jmp xchg cmova mov cmpsb adc cmovbe sarl adc subb or sub mov mov mov enter popa sub push sbb inc push arpl movsl ds xchg lock sahf and push je push or shll fisubrl push pop arpl mov jo mov lahf fsubr jle notb call sub adc sti insl in sbb mov or and jmp pop into scas inc fistl add je pop sub jne cltd cs orb mov push das je push inc lock push out repnz sahf add pop rolb cltd (bad) repnz dec jb dec xchg mov jmp xor inc cmp mov cmp jo xor inc cmp add fcomps mov loopne add inc push xchg (bad) iret dec add lret inc adc mov push (bad) adc jnp push mov mov int sahf aad int sub popf pop or movsl mov vcvtps2dq cltd fwait cmpsl out xor movsb adc test insb les sti xor mov es mov mov pusha (bad) int3 int3 inc int (bad) aas inc inc sbbl stos inc cmp pop test xchg test add rcll xor jp ja in fistpll inc push roll sub nop mov aad lods outsb mov out cmpsl cmpsb push inc or adc (bad) push leave dec rcl mov (bad) mov add sub shrl dec dec xchg cmp scas jge pop rcl movsb and xor mov cs jmp adc add add xor push lret push add das jge mov and inc mov fnsave fdivrl stos sbb mov cmp mov in and or inc lods fcoms mov adc xchg enter arpl push inc cmp arpl mov leave rcrb gs pop and dec lea jo xchg mov and cmp es lcall into fwait inc cmp push in sub cs jl jmp or push jne sbb xor fisttpl sbb fild xchg sbb mov fwait adc popf es cmp lock (bad) dec cmpsb (bad) negb or pop insb and jle insb movsl sbb xlat dec xor jp int mov mov or (bad) jo clc aaa data16 insb test pop sub insl and popf jecxz or jo mov pop cmpsl cmpsb test mov push or dec mov pusha in movsl adc repz cmp pop lods test cmpsl cmpsb fldenv pop popa ljmp lods xchg fadd push hlt mov shr sbb sbb xor mov insl stos cmpsl (bad) (bad) mov dec or test stos cmpsb jmp test fistl and sbb fs jno add insl incb (bad) cmp bound out sahf sahf mov cwtl cmp popf ds xor popf or divl js fsubl adc outsb sbb mov aaa jno push inc xchg in sub shrl pop std je adc (bad) sub rorl add inc adc or stos inc stc sbb mov pop xchg cli (bad) hlt mov (bad) mov push and pop in cmp mov fsubs mov cmpsb xchg pop mov sub jle out test add rcll jne mov gs scas xor ret jg jecxz enter sarl or add xor add (bad) mov fs xchg scas cmp or or pop mov xchg or aad sbb es nop sbb rcrb add adc pop push fidiv loope scas mov mov pop (bad) fidivr mov pop addr16 rclb xchg push or jo or or push rcrl cmc hlt shrb insl in jge sbb adc icebp shlb addr16 lea insb fldcw mov add lock bound xchg inc dec add pop mov push inc rclb pop sbb add pop fdivrs fwait addr16 sub repnz (bad) mov int3 dec rcrl mov inc stc pushf aam sub and add popa scas jbe mov mov test scas out cmp ja or push stc int3 int3 test jo jae mov mov enter pop push sub xor adc std out dec add je cmp (bad) xchg push xchg aad sahf sbb sbb stos push mov pop jmp add push jmp sub dec pop adc leave insl and jle insb fldcw lods sahf inc push adc or les (bad) jo int3 cmp insb test pop push out insl and popf aaa fimull inc popf xor mov pop cmpsl dec test mov push inc sahf ja sub push in arpl repnz fmuls mov fist ficoml and ljmp rcr push jle stc mov cwtl loope sub jp pop imul je,pn mov mov pop push cmc scas cmp scas pushf add mov dec cmp sbb mov in jns inc jnp cltd or (bad) lret push fnstsw dec cmp dec cltd (bad) movsl sahf pop xchg pop push mov sti addr16 adc cmp xor mov xor (bad) neg adc jo mov addl mov sbb push xlat lahf xchg mov adc les dec inc (bad) (bad) ds in data16 pop cld push inc jne sbb (bad) inc loope cli enter sbb mov addl int sbb push xchg mov loope aam sahf ja pop je sbb call nop jecxz testb lds sti xor mov sbb add jbe push mov or sbb mov pusha pusha outsl test and or lock divb inc cmp adc xchg xor sbb push jge mov jns fisttp test cmp push xor aad outsb outsl nop loop sbb mov shrl mov mov outsb cli out adc stc jecxz jbe xchg orl lods mov rcrb adc mov mov lods into push dec into es inc sbb jb pusha fcoml push fiadd mov add xor clc mov lds pop jne xchg add sbb push es gs (bad) mov cld mov out dec cmp aaa inc adc js push jl mov cmp jg aaa rclb ljmp xchg fsubr jle clc adc outsl sahf inc push out xor sbb add xchg push pop (bad) imull mov pop push sub mov cwtl xchg out in add int3 test dec dec fistl in pushf aad and in popa and jnp cltd outsl cmc orb iret adc push (bad) push push gs movsl rorb xchg sti aad pop aad inc xor cmp div jo shlb mov pop das and xchg jg sbb jno push lods lods pop lcall adc cmp inc or inc fldt adc pop cld lret (bad) jecxz adc stos jecxz loopne es pop mov mov mov enter popa pushf es sbb mov movsl push arpl sub (bad) leave pushf cmpsl out xor movsb imul sbb mov cmp arpl jns popf aam lea mov sbb add jns and popa in inc xchg jae stc lods int3 xchg out fcoml cmc xor divl (bad) js popa fldcw adc jl das mov pop xor mov enter inc scas ret cli sbb gs cmp xor cltd mov repnz pusha mov mov push adc ja sbb mov arpl mov mov sub cmc or je push in cmp dec jnp (bad) insl cltd lods movl outsb jg shrl xchg mov stc lock sbb sbb movsl xchg insb fcoms jg add xor mov jecxz fnsave or xchg xor xchg xchg repz dec js xchg jbe push add mov dec negl mov int mov lahf adc test clc add mov jmp popa xor dec in repz or fiaddl push push push push xchg and jecxz add lret stos mov insl pop pop mov scas out ds inc sub jbe jmp sbb out jne xchg out cmp addl xchg adc push mov and mov test jnp fsubr adc arpl lea js xchg or add jns fistp jnp pop sub loope add and xor cmp mov adcb push push clc jne add xchg pop lods fdivrs (bad) cli jae sub cltd test dec mov pop arpl sub ljmp fcomps sar mov je sub scas pop fs adc mov mov aam scas out loope and scas push ret mov push sub iret mov pushf mov insb in push mov jne inc aam jae add pop dec add (bad) movsl in and fldcw push adc addb lock leave mov insb sub insl sub push (bad) mov int3 xchg jle insb sub lods and ja jnp out addr16 pop std into in mov stc jo pushf adc in lcall stos jecxz cltd scas cmp (bad) mov cmpsl jge cld mov rorl popa call pop imul js pop (bad) fnstcw test sahf dec pop mov shrl mov ljmp vsubps ret lock leave cld adc out xor pop imul dec aaa mov repz cmp cmp out fcomp push push xor jge lcall loope push in test fs aaa cs xor orl mov dec (bad) (bad) push push sub fisub (bad) mov add ds xor jl add mov dec pop adc ljmp inc aaa jno int3 sbb inc jnp notb pop std sti aaa aaa inc orb mov pop cwtl inc (bad) call and jg sbb xor mov or xchg sbb pop mov (bad) xor sub fbld fisubrl push mov js xchg ss test jbe (bad) mov inc mov pop mov pusha jmp push movsl or inc inc adc test fs mov movsb into popa xor dec jl (bad) pop xor xchg or push movsl xchg nop mov pop enter stos cs lods mov scas and outsb out addr16 insl out add xchg inc insl pop sbb test xchg push lcall aas mov jmp adc std into mov add outsb sbb inc mov lods scas adc inc jno dec add xor gs ret enter or sbb sub cmp daa outsw js loope mov mov out xor sbb js jne or or xor fldcw xchg arpl fidiv push mov movsb xor (bad) push cs and sub pop cmc movsb jge mov sbb out sbb lret leave dec fwait jae xchg push into mov andl mov adc loope add das data16 inc (bad) je (bad) xchg push and xlat sahf popf push sbb push mov jne cltd jnp jns cmp repnz inc xor sbb sbb and icebp jle jno push xchg test (bad) (bad) in repz cmp inc ja (bad) stc incb add call (bad) dec mov mov or loope cmpsb into (bad) mov jb xchg ret lret sbb sbb movsl bound fwait pop pop bound xchg (bad) aas jmp ljmp sub sub insb out rcrb ja adc pop leave xchg insb cs sbb inc mov pop mov jp add cmp test call adc (bad) xor xchg js sbb in dec hlt cs in js xor adc and jmp adc inc add fwait adc aam imul jns es mov jge xor inc xor adc ja fs cmp clc insb fistl in lods inc xchg idivl mov mov adc stc jo lods outsb pop insb popf iret lret gs orb push add es subb xor (bad) push or xchg pop (bad) sbb push push (bad) sub lds push pop bound mov pop xlat fbld fisubrl and xchg rorb inc ret cmpb les jbe mov or lret mov push cmp and pop inc or loopne xlat inc or ficom cwtl (bad) xor dec mov push add push roll pop fsts loop xchg out cmpsl xor cmp pop push xchg jo push or loop mov pop jecxz sti sti clc cmp nop flds rcrl add (bad) push cmp or sbbl sbb cmc movb and ficompl leave adc outsl pop pop xchg xchg cs xchg jo push push ret lds xor xchg mov hlt jno sbb xchg mov add and clc inc inc rclb lret bound add xchg xchg (bad) jno cmp popa daa jl invd dec dec mov sub mov fcoms adcl bound mov or mov mov scas out loope and ljmp mov xchg jae (bad) repnz sbb ds pushf in and or xor je inc aam cmovl cld add fcmovnu pop movsl in and fldcw push adc jl xor mov ja sub insl fcoms push (bad) mov push insb xchg in and xchg dec jnp out add std into in mov stc jo clc insl pop in ficoml ret stos jecxz cltd scas cmp mov mov cmpsl mov sbb les cltd mov add pop push pop imul fcoml fstps mov loop pop mov lods push imul lcall lock addr16 mov and movl cmpsl xchg (bad) in sarb cmp cmp ljmp jl cmc (bad) lcall icebp adc stc sub jnp,pt pop adc xor int3 rorl dec add std jns or scas xlat sahf mov inc les pop pop push cwtl (bad) bnd cmp xor mov sub rcll mov insb and mov push scas lods lahf lahf enter mov std lock (bad) (bad) xchg bound cmpsb and cmovbe roll addr16 and inc inc loope fidiv cmc mov lret popa test push mov ror pop pop inc stc jne sub (bad) aad mov insl scas (bad) lods push lret cmp xchg enter dec fsub es inc or (bad) pop test pusha push pop inc pop in pop push or loopne adc dec or ficom sbb push cmpsl xor inc fisttpll or xchg rcrb nop sbb shr aaa loopne jg in pop push fidiv loope inc lock mov pop adc mov push fldl2e rclb xchg push push ret into adc or out pop lcall loopne sub lahf (bad) sub mov lods mov inc add les mov mov (bad) cmp lcall fstl pop pop adc add jne pop add adc pop xor lea andl gs dec dec movsb mov ljmp arpl arpl dec inc lea mov and (bad) push push cli and add orl cmp cmp jmp scas push inc sbb lock jae xchg ss lods pop lods in subl xor adc sub sbb lds ret cmp sbb out sahf sahf mov push repnz ds xchg xor pop jg divl js scas mov ljmp and jle je pop sbb xchg mov adc addb mov hlt cltd addr16 cld xlat add (bad) adc test leave jecxz inc inc es lretw outsb and mov enter popa arpl adc movsl bound add loope cmpsb xchg ljmp mov stos cmpsl and ljmp xchg popf sub sbb inc les cmp and (bad) mov xchg sbb cwtl mov push in loope adc ficom jl mov outsb rcl mov mov sub das push pop xor add data16 imul dec mov in adc sbb popf scas or pop cmp cmp jmp sub jo popf or das insb and aaa jle sti out push lods and add jnp sub mov mov mov stc inc (bad) (bad) inc xchg lahf (bad) pop decl popf daa cmpsb or cmp mov mov mov shrb (bad) lret pop or push fistpll jle and jmp xor dec sub mov test and scas jno mov cmp in mov mov ret or movsb sub pusha cmpsl leave int3 add inc out (bad) dec jne mov xchg xchg loopne adc lods pop dec mov or xchg fistp xchg inc push roll pop fsts lods outsb cmp out cmpsl cmp or adc and mov mov dec dec mov push mov data16 pop push cltd pop pushf dec pop push dec dec xchg dec inc cmp xchg pop stc sub pop adc lock insl sbb sub pop int mov adc pop (bad) lea add in pusha ds (bad) and inc inc movsl call test sbb push sub sub loope add and cld lock inc inc rclb addr16 popa in dec add mov loop and sbb sub ljmp lds and pop leave push push movsb xor add mov or jmp repz sti jp jae mov or out gs push cmc cmc or add ja cmp (bad) pop mov sbb cmp imul jl jmp jp inc push mov push out xor xor sbbb iret sbb stos outsb rclb es rcl jnp fs jge idivl lea int adc ja bound mov arpl sbb mov fadds sarb adc inc into xchg fwait mov xchg sbb pop (bad) xchg insl and pop push outsb add mov and iret sub adc movsl sub jecxz mov mov lahf test xchg xchg jp sbb aam stos addr16 data16 xchg setae fst fsubr mov adc (bad) sub addr16 sbb imul pop mov lds in in cmp mov sub out sbb mov test fwait jae xchg and lods addl data16 xor leave push dec cltd inc dec push fdiv je,pn dec mov (bad) push cmp sahf pop mov adc pop sahf cwtl test jns cmp jmp sub aaa cmp std and icebp jle jno push ficoml enter mov aaa mov stc pop addb cwtl pop into add subb add adc repz test and sub fisttp loop mov push adc bound sbb xchg sbb adc xlat sub lds shrl jnp lea cmpsb jbe ret mov rolb xchg (bad) mov movsb ja clc mov inc inc push xchg pop push or cwtl adc lock or mov mov outsl js loop mov ja pop repz inc or xchg (bad) fdivr sti aad mov mov out out idivb pop pop pop in push sbb xchg sub scas out sub inc xchg lods mov mov pop xchg fldenv adc popl add out inc orl inc adc fsubl lods mov (bad) push dec mov insl cs fmuls adc mov js in push lahf sbb mov aas decb or fnsave mov pop sbb loope fsub and aas mov sbb cmova (bad) mov xchg inc add jg pushl repz or popa sub jo or fsubs push inc fs push gs pop ss dec dec mov sahf mov cmp push push div test fistl and stc leave and insb fs inc dec jp adc ss addl add lret cmc sbb and sbb and xchg cltd aad rclb jle xor cmp out daa popa pusha jo (bad) pop push shrl jg xchg cmp push lods lods pop lcall pop adc jle inc push xchg std mov add fcmovnu insl insl cmpb mov scas cmp mov xor xchg cld test or mov fistpll testb pop sub cmp fbld xchg and sbb mov ljmp fsubs xchg leave pop gs mulb aad (bad) imull mov test and cmp out (bad) dec dec mov (bad) xor sbb and pop or and jnp adc les dec sbb imul sahf xor in mov fwait lcall pop xor cmp jmp insb popf xor and loop movsl cmp jno dec in (bad) lahf mov aam repz jne mov add orb mov push lahf and addb outsl repnz mov inc xchg shrl sub push push movsl movsl mov rcrb sub xchg sub scas outsb cmpsl push lret rolb xchg lahf mov pusha (bad) repnz pop ret aaa ret arpl bound int3 addl inc or rcrb or stc xchg xchg daa daa xor aam jge dec sbb aas inc loopne xchg inc or or dec push push xchg nop mov adc jnp loop lahf xor pop in fs inc stc cli mov je scas repnz adc inc mov jbe lea nop sbb pushf rcl pop pop faddl xchg (bad) cmp pop stc lods xchg pop adc add add push push push movsl sti daa pop loopne and pop pop mov mov mov or loop mov sbb enter stos test mov xchg xor cld inc rorb repz xchg mov daa mov mov dec dec lds pusha arpl sbb arpl adc cmp sub js sub sub sub inc pop pop dec aaa mov jnp dec jmp jne test je ret sahf sbb cmc jl rcrl mov nop add scas enter in add xor pop jp jb ret mov sub ret push sbb adcl rclb mov xchg inc or in xor dec mov cmp bound cmp adc mov cmp arpl cmp push call xchg mov mov imul mov movl xchg (bad) insb outsl repnz mov inc xchg pop sub test cli adc push push movsl movsl mov shrb sub xchg data16 add test out out out es popa sub mov rcr pop dec mov sub bound and push cmc imull mov loopne scas cmp cmp loope rorl push fcmovnb cltd into int3 rcrl add fcomi ss scas lods sbb popa clc aaa xor xor cmpsb mov jno add (bad) (bad) rcrl rclb (bad) int pop rclb repnz movsl jo divl js mov cmp jns pusha and aaa jle stos fimull out lahf xchg xorl rep adc aaa mov stc lret xor adc inc iret lret lret cmpb cmp scas cmp mov xor mov test or mov fistpll testb ja sub fbld xchg and mov rolb inc (bad) mov jg jp aam mov ret or push add push in (bad) ja pop sub int3 ja cmc pop push adcl or cwtl sarl ret push roll cmp mov push mov add push sti inc inc push popl ljmp (bad) mov mov imul mov mov or mov xchg ret or pop xchg mov aas or cmpsl vrsqrtss push dec (bad) mov pop pop jb cmp lret pop push nop xchg adc mov lock and xchg fs es pushf nop mov les pop cltd mov dec dec call inc daa push or push xor fildl lods dec add and mov cli clc inc inc rclb push outsl mov (bad) add mov ljmp aam ss mov cmpsb mov xchg fsubs pop inc fs mov and mov repnz fidiv mov andps jb test stos ficoml int jo cmp sbb loopne int3 and ljmp fistpll jnp mov jle leave mov dec sbb je jge adcl mov xlat mov lret iret pop rolb rcrb cmp add mov insl xchg pop and cmp leave (bad) xor fidivl cmp repnz push pop pop std je lahf or (bad) xor jb add inc in lods cmp stos jecxz pop ljmp (bad) mov test push dec cmpsb call inc fstps cmp mov dec pop sbb lcall fisubl (bad) sub dec inc gs sub adc mov dec fnop loop out sbb xlat nop xchg push popa jl,pn stc popf lcall sbb loopne lock das mov jp inc aam add adc and push pop idivb mov sbb into pop cli adc divl cmp repnz xor lret mov pop and xchg je mov cmp ds cmp inc xor daa pop pop std cmp jmp push (bad) ja mov mov in fwait lahf and test mov repnz xchg (bad) repz int xchg mov stc push in movsl adc mov sub xor xor in out sub push les add dec xorb mov mov es inc mov xlat push in (bad) ja pop cs or push push or std and or je fisub scas sub lahf cwtl xor dec dec ja lret xchg inc or push sub jbe in cmpsl xchg sub pop in fs std cli mov jnp push pop lods in and fsts cltd movsb pop rorb push (bad) cmp or jmp adc push push daa mov jae insl xchg add push outsl push cmpsb js fimul adc lea icebp lahf imulb inc jb sub mov fnsave mov adc mov mov daa jno fisttpl pop adc cmp mov sbb push out mov jg aaa out addr16 ljmp xchg xchg sub sbb inc xor lds and (bad) mov xchg sbb movsb mov cmp scas adc inc adc lret lcall add in mov stos popa cwtl xor xor add das je dec dec movb jne movsl sahf (bad) sbb push repz iret xchg gs rclb jle xor add jge (bad) mov pusha jo add and icebp jle jecxz push fidivrl lods pushl repz adc mov aaa dec aad (bad) ds movsb dec data16 pop pop inc inc pop fisttpl repnz (bad) mov jb hlt mov add push lret push sbb dec clc inc add pusha cmp outsb out call stos and (bad) jno sub ljmp mov inc jne popf sub mov imul pop mov mov scas out loope and clc out push ret push add jae (bad) loop mov pushf cmc cmp insb in sbb xor je inc aam sbb out jnp and dec dec fcmovne add inc iret push fldcw push adc insb sub jns es cmpsl mov insb sub insl enter push (bad) mov pop call mov in and push dec jnp out repz pop std into in mov stc jo or add pop in push nop (bad) lods cmp scas cmp mov xchg in cld mov scas fld popa call pop imul int3 inc pop (bad) fnstenv int dec pop mov mov mov mov cmp sub (bad) jmp jbe (bad) xor mov ret cmp mov sub pop or mov int les imul loopne dec sbbl (bad) xchg or or add mov jne and cmpsb add mov inc movsb in sbb sti mov dec adc out idivl or in sti sti aas clc sub mov cltd cmp dec add (bad) incb jb or sbbl or cmc in inc lods mov into or push or xchg loope jns hlt movhps push mov shrl inc shr mov xor sbb adc sub es arpl js insb mov pop aas push pop adc cmp push add fwait push xchg mov cmc jge cmp lds arpl mov ljmp jle xchg mov minps xchg ss dec pop out and mov mov lahf ja sti out ja and jmp or das and xchg mov mov orl fist inc je cltd or jle mov jo das data16 imul mov int sbb adc aam pop data16 sub cmp (bad) testb jo iret jecxz dec ja cmp movsl push sub jno hlt cli ljmp repz loopne gs into xchg sbb jp pop iret pop data16 mov push notb outsl es ss mov int sahf push xor test add movsl sub imul bound and mov jecxz ficoml and ljmp pop fnstsw sub les aam sub push pop pop mov sub add in and imulb test aas out push outsl mov mov and xchg lcall ror imul je jnp mov popa jp push dec pop push dec push and je,pn sbb add gs mov sbb cli int cltd rcr das sub cmp repnz das xor xlat mov inc and pop imul jnp and push dec cmp xchg sub repz lea inc (bad) push dec das sub pop inc iret ret push insl andb mov inc loope cmp cmc mov lret out int3 test rcl stos add movsl ds lds jo cmp fbld mov jecxz addr16 fcmovnb lret sbb outsl jg repnz js call inc pop ret adc loope ja xchg xor int3 lcall inc inc int hlt mov dec icebp or pop les add pop int3 mov push adc dec push popl mov fnstenv fnop loop cs pop inc push lods jb sub fisttpll inc aam jnp mov lods in out insb bound pop cltd adc pop push pminsw cmp pop loope push push sbb dec add mov mov push pop xlat nop test gs (bad) lret and inc aad sarb ret xchg push push inc bound push es jp cld clc jno cmovno out and mov fwait cmp mov mov dec dec jg sub sub dec (bad) cmp arpl jno popf aam sub addr16 roll dec aaa stos and jmp dec aad ljmp insl loope fbld xchg ficom test (bad) jae push xchg test addl jp mov pusha jp inc inc aad dec push xchg arpl daa cmp push notb sahf sub addl popf fstpl jnp insb movsl push popf mov cwtl inc pop push stos insl cmp mov push pop in popf lahf (bad) bsf cmpsl pop adc jb aaa addb mov cld mov cwtl pop adc lahf (bad) enter push and outsl shrl xchg fsubrp hlt mov lret arpl add movsl sub (bad) xchg mov mov imul sbb (bad) jecxz rep jne sub arpl into rcr jmp ljmp xor outsb add inc add inc (bad) sbb mov adc outsb ja adc loope ficom mov or xchg fcomi js loope lods cmpl in jns sub and mov dec mov dec add iretw push pop add dec dec insl mov add jecxz xchg inc sbb aam imul jns es mov mov adc ja jo cmp or cmp dec sar in lods aam jmpw jne jle cld mov sbb jne pop lret mov subb pop outsl es push mov vpaddb adc adc push sbb outsl ret movsl jo pop xchg aad fistpl mov sbb xchg xchg stos stos out sub fadd lret les push lcall sub jl xchg and mov lcall mov aaa cmc pusha xor push push int dec adc cwtl inc outsb add xor stc mov xchg add xor (bad) xor mov and inc dec push inc or xchg movsl fsub sti aad outsb cmp loop das js or scas insl (bad) (bad) mov out xor in jne aas lea pushf or rcrb sbb pop mov cmp or setne lcall clc sarl push sbb rolb shlb xchg or lea js mov mov cmpsl jmp add lcall inc aaa xor loope scas push inc es stos ds lods cmp lea or xchg sbb mov pop inc dec jg divb adc ljmp and arpl add imul jp jnp and dec add sub mov loope and ret pop add cmc dec jnp xchg sar outsb xor mov clc and jno xor push xor add scas and add push or mov dec pop loopne xchg adc cmp xor fs insl mov scas sub push (bad) lods and out icebp jle insb gs lods push xor retw movsb pop adc bound orb das das pop cwtl inc cmpsb sbbl inc mov iret jb repz add jp mov test jg sub cwtl dec push pop shrl repz mov shr aad (bad) out sub xchg data16 inc push ficoml out data16 sub addr16 adc rcr jnp xor movsb (bad) gs cmp subl sbb mov mov pusha and ja outsl stos pop mov test imul sbb lret and fs cwtl mov mov data16 dec mov (bad) push push in in sahf pop mov or pop rorb repnz gs jb xor mov cmp mov cmp outsb jo xor cmp movsl or lahf xchg das sub repz je outsl pusha push inc push xchg movsl scas dec add lret scas jae xorb outsl bnd push in repz int sahf std ss sub roll add movsl ds popa xchg aad lods lea das rcr xchg fmull out addr16 ffreep lret and dec inc rcr imul sbb js in aas jbe xchg in ret xchg shl (bad) ja clc cmp int3 lcall inc inc int mov clc jp cmp add pop int3 add push dec (bad) push sbb dec push popl dec enter push pop jbe repz cs push inc push lods jnp sub (bad) or cmp out and lods in out addr16 cltd adc pop inc pop cs sbb pop sbb cmc dec mov mov and push fcompl outsl int3 cmp xchg dec lea push nop pop xor les cmp push aad and leave imul enter addr16 add jl loope push mov js stc dec scas push inc adc and lea (bad) cli daa xor out (bad) out sub jb lcall ret (bad) rcrl sub add mov arpl hlt in outsl aaa push data16 outsl stos jmp xchg push cli jns test (bad) mov jae repnz (bad) fxch imul cld and xor push dec rcrl and je,pn push xlat sahf (bad) push fdiv dec (bad) xlat mov mov lock fwait in aam jecxz repnz mov ljmp xor adc ja jge cmp arpl arpl mov (bad) (bad) lfs or movsb jle je push xchg icebp mov push push cmovbe dec popa orb lret sbb es jecxz mov test test push xchg jle stos xchg pushf aad sahf or cmp vpsrlq fisubrl push jae sub jo test popf fsubr jle lcall (bad) ds adc sti insl in sbb outsl daa xchg test mov xchg rolb xchg ret add mov mov pop ja cltd xor ret ds je dec dec (bad) dec pop std mov sahf pop mov or mov or pop cli push lds and (bad) idivl sub std jno jo cwtl and leave popa jo xor sub push xchg test (bad) (bad) nop xor xor add (bad) pop dec das sub inc adc js stos inc loope jg repnz jp cmc xchg test daa inc inc adc or in mov shlb sub xchg add pop dec xchg push scas and ror sub add push jne icebp les sub xor mov int ret or in (bad) cmp and sub mov loop or test gs in fbld scas sub mov sub mov or push mov (bad) and mov std mov push in fs jmp leave cli stos test pop sar mov mov test cmc ret rcrb neg pop adc outsl js lret and push push subl jo inc push push fdivs add xchg cs xor fimul add lea js pop push addr16 enter adcl ss mov push cmp mov stos ds jnp fcoms gs sub push inc dec jg divb sub ljmp and and dec fidivr popf aam imul jp jbe and dec add sub test in aad mov jbe add loope es xchg or cmc dec cmp cli leave mov jmp jl sub push or push notl cmp pushf sbb lock sahf sub or mov (bad) adc cwtl mov xor repz push (bad) daa xor dec push jae jo adc xor mov mov sbb daa xlat lahf lods iret and repz aad mov lock jae add mov inc test mov mov loope mov or fstpl dec add push sub (bad) mov pop pop pusha bound int mov jecxz mov mov ljmp pop fnstsw cmp aam xor cmp sub adc in insl sbb and ds test test fistl lods in mov cs in aam xor push xchg jne push out pop mov cmp push ss pusha push mov mov scas das pop inc xchg xor test idivl (bad) (bad) sub sub insb and jle dec insl bndldx das daa xor dec nop mov pop sbb (bad) push mov stc (bad) and mov jno scas iret lcall mov inc lock popa or pop jmp ds dec rcl and jmp mov cmpsb xchg sub scas mulb aam lret cmp push (bad) repnz xor dec iret sar mov aaa cmc loopne test push pop rcrb rcrl inc or push (bad) lahf jl xor aam outsl push dec jne inc inc push ror push inc push roll inc fsts loop ja out cmpsl push push push inc push mov mov push or outsb mov mov jb,pt fldcw mov inc add scas dec pop jb cmp (bad) fistpl outsb adcb (bad) call mov pushf pop (bad) jmp cltd pop aad dec add dec jle inc movsl mov fstl push orl es pop outsl es icebp mov jno repz add (bad) mov xchg cld fs push in jge xorl ds ljmp pop xchg lahf mov sub aam cs add popa push adc mov fcompl imul fsubrp lods fcmovne mov int3 shrl xchg xchg js push inc lods in mov fcmovnu cmp mov leave cli mov cmp sbb or or mov or mov popf adc js xor les jmp (bad) clc ss sub (bad) xor in push lods lods lahf push xor es jp int mov mov into lret (bad) lock data16 insb mov insl and sub cmpsb inc lret sbb lods mov andb pop cmp inc adc mov in mov shrb sub fbld xchg or das es ljmp mov out adc ja jno addr16 jge add aam dec (bad) stos cli xor lds jb mov (bad) repnz sbb test test lahf loop mov fmul imul imul mov fstps push xchg arpl sub push fdivr pop ret xlat mov in incl adc push ds stos mov sub push and fs cmp ss inc stos lock push sbb es jp adc dec rol stc xchg mov cmpsb dec inc sbb (bad) pop xor leave jecxz push data16 repnz mov jb dec and mov gs mov and popa mov xchg movsl pop sub addr16 stos adc add jnp inc repz or and ret or je ljmp in incb push es inc icebp mov push push cmp int push (bad) test dec cmp lea daa adc mov dec lock add push inc push xor iret sti mov popl cs and cmp lahf rcl aaa and inc outsb fisubrl sbb arpl cs jb cltd adc js das xchg sub and rorl (bad) pop adc adc std pop and push aas xor pop rcrl xor pop pop add imul fsubrl xchg or xchg or mov and clc clc inc adcb jge cli out std cmp iret fdivrs fwait dec mov mov jp je sub insl mov les mov loope jb addr16 jle add fistl (bad) stos dec xor sub cmp in inc (bad) fs outsl lods stos lock fsubrp aad cmc or lret mov jae mov mov inc xor xor leave out or and cmp cltd sbb cwtl imul add loop adc jnp jl fs jmp cmp das pop adc loop insb cmp mov (bad) or lods mov inc pslld lods pop adc add popl add das cmpsb (bad) sbb (bad) pop sbb insl pusha es dec (bad) repz add arpl or movsl sub arpl cmp mov pop mov xchg xchg pop mov jg jecxz push in and sub ljmp addr16 xchg aam fdivs adc inc dec add lret mov jmp repz and sbbl cmc mov pop out sub fistl in mov in add jbe inc hlt xor stos out pop or dec jns lock mov arpl mov and inc sti pop mov (bad) in dec cmp inc out and icebp jle mov inc sti repnz pop or xchg pop std je sti sbb (bad) pop dec das (bad) fsts inc iret ret es addb and es (bad) mov fcom jecxz popa ret push sbb movsl add (bad) lds bound data16 inc ficoml out out out shr lret add (bad) jg push les add ret sbb jmp ret jp mov lods or or loopne int3 inc or ficom cwtl rcll mov add mov inc push (bad) or lock and (bad) iret or dec out sti mov mov and cmp pop addr16 in out jnp cltd es (bad) pop dec sarb repz in mov arpl mov pop xchg xchg and outsl in xchg xchg jmp push pop xlat mov pusha dec call (bad) stos pop adc jmp test movsb lret sub es cltd mov clc mov and in adc add sbb jb jb xorl xlat mov jo cwtl lcall adc pop jmp xchg inc test mov xchg in inc mov outsl jg mov lods lret in and outsl std xchg int3 test ss sbb fnstcw in jle push inc push and jne cltd sub jle ret xor pushaw repnz roll movsl in cmp xchg mov out pop pop popf popf rclb jle sbb cmp jno jge (bad) fisttp jo adc and xor adc push lock int3 (bad) lahf lods outsl sbb repz jns mov jecxz jg dec das call (bad) aam and or and es jle (bad) mov cmp insl loop popa cmpsb andl push push movsl sub pop movsb mov cmp pop mov dec xchg push scas jle cmpsl and incl mov mov xor aam sub push cs mov sub mov jmp dec mov std cmp lret ret pop xchg push fneni(8087 (bad) (bad) jo adc xchg push leave jnp in test or insb cmp sub cmc punpckldq xor add lretw push stc or dec push lods jbe insl and incl popf pop in out sbb jns les in mov aaa adc push rolb cmp inc xor adc push in (bad) xor lahf xchg cmpsl sbb rcl push inc xor mov cmp inc jne pop sbb jecxz jecxz mov iret stos in repz in lret je ret sbb movsl xchg dec ds mov aad test (bad) jp data16 cmc call scas fcmove add cmpsl out sahf xchg and lret sbb add std ret mov mov mov xor mov push mov cmp mov int3 addl inc or rcrb inc or xchg push and xor dec mov and fcomip mov xchg lcall pushf aad outsb bswap out cmpsl hlt (bad) or rcll inc (bad) and ss mov push daa test lods sti cmp (bad) dec addr16 sbb cltd pop pushf dec jge dec dec add adc andl mov pushl cmc mov lahf and stc cltd sbb jp cmp xchg pusha cld cmp dec popf out dec add in pusha sbb (bad) out or mov stos fstl fcoml daa dec (bad) jecxz add loope inc lahf mov pop ret unpckhps (bad) push rcrb pusha pop mov addr16 das ss scas pusha sub sahf mov jo loop xchg arpl (bad) sub addr16 inc imul (bad) stos es and add lods and lcall scas sbb cli xor cli dec sub mov xchg or mov adc xor leave jbe out inc add cmp sti mov movsl in and into push (bad) push adc rcrb xor push xchg mov hlt inc lret (bad) pusha sub popf sub insb and jle dec xor pusha push xor xor dec mov das and (bad) push mov stc sub and mov jno scas iret (bad) ljmp mov lock sub jnp daa out ds push sbb repz jae bound mov aaa repnz xchg and xchg out outsl ljmp test cmpsb mov rcrl dec gs test loop adc and cmpsl sub cmp stc cmp out cli pop sbb loopne loope rcl jnp fcomi ss subl xor xor add data16 jnp pop push push in in pop fwait mov sbb xor sar cltd rcr sub mov sub jo adc and xor adc fsincos (bad) bswap jle xchg mov add aaa lock (bad) jmp stc xor lret and (bad) pop sub fiadd repnz mov sar int add popa call pop roll shr rolb stos pop je outsl adc fcomi fisubrl push call and ss inc mov xchg aas mov sbb out ret mov mull int3 or jnp or or adc shrb or stc xchg push sub push js pop cmp sub ja inc ja xchg or inc push mov cmp adc jg insb jae in push add hlt mov mov dec xor in into push pop jbe nop mov push sbb lods dec cld push pop div xchg iret adc cmpl loope jbe cmc (bad) jb cwtl and xchg and xor outsl shlb lock xor pop add std mov in and enter adcl jnp test mov push inc xor icebp mov mov mov cld js popa rcrb mov in push lds sbb mov ljmp ljmp (bad) je cs pop xor pop dec jns adc jmp rolb lods outsl repz ja outsl lods bswap xchg ficom mov mov jae sub in imul adc mov pusha sbb je pop mov clc xlat mov pop sar xchg fistl popf adc lock pop mov pop (bad) (bad) sti xor and cmp mov out pop or xor jge adc jo mov imul add jecxz xchg mov insb add pushl jo xor ret push xor push cmp cmp test push sbb push fcomp xchg stos or iret xchg adc lcall dec ss pop xchg push push imul xchg xchg out ljmp daa call inc fistpl es enter mov divb sub daa mov push (bad) and ss inc mov jns xchg push mov xchg cltd lods in les out xor inc (bad) and add add loop je pop subl fsubl xchg repz xchg push sarb mov test sub lahf xchg push movsb sub fdivr test clc add mov add mov icebp mov cmpsb adc jbe aad or inc mov inc mov inc adcb adc push dec cmpsl test nop js pushf loopne daa fsqrt stos add inc arpl xchg out stos outsb mov (bad) ret leave mov mov xchg xchg call sahf in xchg or push dec int inc pop (bad) (bad) jnp jo int3 inc add or ja jl xor stos jns ljmp ja cmp repz push push push daa int sarb adc cli gs testb push aad movsl mov xchg sub aaa aaa repz mov and xchg in test ret or cli fidiv or (bad) rcll push pop and data16 jle (bad) out mov xchg push outsl daa fsubs adc pop push mov repz mov sub lods dec enter xor fsubrs cwtl insb daa mov imul scas lock pop sbb (bad) jns add fcomps cmp push orl ja sub addr16 (bad) ficompl jnp sbb sub loopne sub push fisttpl cmc cmp insl cmp movsb out mov in scas adc sahf sahf cmp dec dec test jg insl test xchg pop in mov call dec cmp xchg mov enter add rcr mov je mov leave inc fiaddl test xchg push pushf popf rcl mov cmp cmp jecxz outsb jl sub push js int mov jne adc lahf in lock sbb xchg std std mov stos jnp add mov insb add rcll adc (bad) jns mov ds ljmp roll mov cmc mov fs pop mov push scas mov pushf das jnp in and push bound addr16 xor daa pop mov add aam or addr16 das movsb jecxz pop pop lds scas xor sarb lods aad mov lret cmpsl sub ficom ss test mov sbb jne or pop insb xor mull adc mov lea jecxz outsb in sub pop rcll fistp mov pop push fcmovnbe pop jg jbe arpl je cmp outsb cmp sub jle jecxz (bad) xor sti and dec enter repz push inc (bad) cmp test or sbb test test dec pop sub mov dec xor icebp add outsb add sbb pop xlat sbb push cmp lcall adc scas and cmc hlt mov les lret gs mov xor ds jne or nop cld (bad) jae and out inc push popf aaa cmp cwtl cwtl mov inc iret xor ds in lds pop jno cmpsl mov mov repz stc lea outsl sahf (bad) adc pop imul jmp mov int ret mov cmpsl cmpsl sbb fistpll scas outsb cs push pop iret jno mov mov js in repnz or inc cltd fucomi lahf sahf (bad) (bad) mov fwait mov rcrl xchg pop pop mov das fisub repnz add mov sbb inc inc xchg pusha xchg xchg iret pop aad ficompl xlat (bad) out sub ljmp stos (bad) icebp in mov jne push int3 adc mov pop or or inc rcl sub push arpl pushf lcall inc aaa pop aam lods xchg fwait addr16 inc pop pop dec dec mov xor dec pop lods lods out mov test mov cmc jne cmpsw lcall jno scas in mov adc outsb fs dec je jp jp pop leave mov adc mov in in in push mov mov add sbb popf push outsl sub jns xor inc mov or sbb adc cmp jno pop xlat mov popf lahf mov adc js jno inc (bad) mov jg add and cmpl add (bad) dec (bad) mov repnz mov cmp dec mov andl pop fldcw inc lds fs sbb ja,pn out insb outsb lahf scas and sub loope in sub sub mov lcall jns pop aam aam push and out mov dec dec pop lods out mov jg in xchg stos es sbb jp leave rcl divb sbb and test fs jle adc jle mov inc in ja lret or add xchg into (bad) mov push out popf popf rcl je roll xchg jge jmp scas xor adc push frstor mov cmp aam lods lods lahf lods iret push and sar std mov jae or stc stc add lret or lcall lretw jp stos xor mov jmp test add dec cwtl push jno sbb xor ficoml test fdivp gs xorb ds sub sbb cmp pop add out daa pop div je sub int3 dec mov inc inc inc sbb out into cmc inc (bad) mov jecxz xor push sub cmp popa mov or inc (bad) (bad) js cltd mov mov fisubl jg jmp pop (bad) jae sahf push push mov dec jno test rcrl aas aas cmpsl stos std popa sbb cltd adc dec (bad) or push fiaddl sahf pop (bad) adc cmc cmc cmpsl push add push rcrb mov (bad) in mov aam push and call and inc test jge into iret out adc push dec or bound mov jae mov push lret cli jne int dec out sbb aaa jo gs dec jg test popa insl adc lcall cmp gs fbld push lods mov fnstsw mov mov test mov xchg sbb (bad) idivl mov in add sbb loope inc adc int movsb xor imul dec and lods push aas in popa lret fldt add add jbe add jo mov push testl push cmp jno push and addr16 pfsub or wrmsr add and mov sti int3 or sbb inc fnstenv dec aam mov scas movsl enter xor comiss movsl iret mov lds mov insl ret push cltd das or clc insb jp loope out stos ficomp push ljmp and and pop aam sub arpl sub push push pop pop dec dec mov cmpsb (bad) les cmp lods lods stos stos fcmovu push push icebp icebp addl sbb insl insl push js ss aaa aaa int dec dec add push push bound jo dec ret push call lea mov (bad) pop pop cltd cltd aam jg jge aas aas repz out out sub adc jmp je mov mov jae jmp cli xchg daa repz scas jbe cmp or fldcw movsb dec fmulp inc pop out int3 jnp jecxz roll into mov or test bound lcall jg pushf pushf pop loopne insl lods cld sbb popf pop lock fidivrl xchg and lret in add push sbb sbb fidivr shll mov jb ss mov push (bad) and sahf lock int3 inc inc push push addl loopne dec test add daa mov rcr mov cld pop addr16 inc das ds push stc or fdivs fistl add lea fadds mov arpl repnz pop insl nop (bad) mov or push (bad) pop and mov inc dec xchg shlb inc sub xlat js adc cmc cmc sub int push pop adc fcomps jnp mov push inc and cwtl or jno dec mov enter adc fistp inc sti das push loope add lods mov jbe inc adc mov cld push and adc xorl les hlt jns mov mov push push sub ret sbb sub jmp icebp and add xchg aad push jns dec add mov stos ret or cltd sbb jbe jge int pop aas push cmpsb sbb sarl fsubrl cmc jle je jg mov or fistpl pop loop fiadd mov loop adc push je xor ret jle add stos (bad) aaa jg cs and mov pop (bad) mov pop outsl mov push lcall mov add add mov in pop sub andl les cmp jmp fmuls push xchg loope cmpsl mov lds je aam mov scas and out mov fs adc sahf adc push pushf icebp sbb lods fsubl test cwtl sub stos gs mov lds fsubr pop stos xchg mov sahf ja xchg push push mov mov xchg pop rcrl pop cmc cmc out test inc (bad) xchg adc popa inc jle imul sbb inc in mov jecxz pushw outsl addr16 push pop rcrb pushf sahf add je xor loop lahf rclb jno std in cmp idiv test in int3 jo adc xchg popa sub std xchg xlat push lods scas lahf adc sub mov sub ss inc (bad) mov das pop fs push cmc sub or into sti mov cmp dec jle andl jb adc mov lds idivb test and lret insb test into jge ffreep cmp repnz or out daa std movl jnp in pusha jmp call pop orl in sub ja jge hlt mov sub mov movsb aaa adc dec or nop mov mov and fldenv pop sub aaa ret inc lret xchg ret loop mov mov sbb cltd fstl rcll push mov mov je or jmp sbb mov mov jne pusha jecxz dec xchg xchg shrb loope (bad) lea push int3 cld ja aaa xchg and lret insb enter movb fistp add sub loope ja add cmp movsb fmull jl sbb dec add in xchg sahf mov (bad) fst jb dec cld mov outsb jge call out push aaa inc (bad) or mov sub inc js jne mov xchg insb mov mov mov mov xchg push fnstenv out cmp inc out cmpl pop and cmp xor imul aas outsl (bad) cmc mov es pop sbb mov add popf popf rclb jns cmpsl pop aaa idivl bound in jo adc (bad) dec in and pop add dec loop mov xchg pop sub adc je adc and xchg jge add ds (bad) add jp inc inc lods pop (bad) xchg add andl sbbl add pop pop frstor cmpl xchg jmp push xchg popa sub fistpl scas mov push push bound in lret jmp cld rcrb mov or cmpsb xor pop dec add (bad) adc es shrb ds rcl pop div test xor jae dec fs lret and and mov mov or icebp cmpsb inc iret int push push xlat cs sbb mov xor add lahf popf pop f2xm1 stos bnd mov xchg inc fs in jmp and lret cmp gs roll popf lahf mov jnp repz push jne xor add sti add ret xchg push adc (bad) andb add lods icebp jns xchg xor cltd leave cmp roll or jge sarb inc rcll dec frstor (bad) pushf adc pushf loope movsl xchg pop jecxz or outsl or fimul clc insb add add cmp mov (bad) mov and mov lret (bad) ja clc fisubl int3 inc mov adc cwtl loopne dec mov pop sub xchg daa movsb cmc xor and stos pop cmpsl or (bad) lret ficom adc mov aad imul cmpsl cs adc leave cltd (bad) sub iret out lock loopne mov pop lcall cltd xchg dec dec ret mov push add pop pop rcl xor sub pop xlat pop jle imul in in or outsl push (bad) lock add and push push or cmc cmp push push sbb imulb enter in xchg push mov mov jmp push js jg cld jge dec xchg in and jno jns adc cmp scas sti out xor mov jae bound xlat sub out cmp ret cld ja cmp push dec pop scas xor sbb or dec dec mov ror mov in (bad) cli stos loop es ds sbb enter sar aaa mov js cmp subl sub cmc pop xchg cmp lcall dec mov leave loopne push push xlat sub push cmp pop adc hlt rcrb add push sti std subl mov push push lods sahf pusha movsb enter lock adc jo sub add (bad) and pop cmpb movsb mov push into xor movsl adc pop xchg ret push xchg sbb sub stos dec xchg cmp aas out aam cltd and test movsl insb cwtl and daa insb mov call or rep dec gs in pop and cmpsl das scas loope dec ja mov dec mov cmpsb ret lods out cmp roll fcoml jnp addl push add pop jne sub cmc fs jno inc add mov push bound (bad) push inc or inc js out in sbb ss pop popf bound or mov jg push adc push mov mov pop aam test pop mov cmp incl (bad) (bad) stc stc add minps int repnz cmpsl inc test data16 add inc inc ds add mov xchg sub mov inc loope pushf pop pop jmp sbb and xchg and lret and mov inc dec sbb inc pop mov sub dec mov lock jmp push push addl imul lea xor add sub (bad) cld add pop sbb mov add mov imul scas cs pop std and xchg pop adc scas fidivr js lods lret jo cmp pop data16 adc jmp dec dec or adc orl mov pop fmull add es pop in cmpsl pop pop xchg push lods int mov or add arpl jl (bad) sbb inc int3 in int3 inc aam aas mov sbb sbb gs and repz int3 push sahf push daa mov mov lahf sahf adc cmp (bad) out adc ja jo lods sub sub out mov pop adc fisubl or movsl (bad) test fs xchg pop dec dec cmp adc ret push in xor test push rcl (bad) cltd div test (bad) xchg xchg repnz in or popa loopne fs js mov adc xor and cmp jecxz jnp gs les mov cltd fildl mov (bad) (bad) rorb xchg adc fdiv xor jae or hlt ds mov push addr16 xor (bad) lods test pop jnp jbe adc std jge ds dec or imul fsts and leave and repnz lods leave ret arpl rcll cmpsl mov mov pop lret ss jne sbb adc mov das push imul sub mov loop hlt scas lahf fcmovu loopne leave int3 fsts rcl sub lahf bound test fbld outsl mov sub js test adc cmc cmc test dec out jp adc gs xor inc clc dec pop leave leave into mov ret data16 rorb push shrl pop pop popf push sub je repz cmp jb data16 jo in sbb xchg cmp out jg jbe jno push push lahf lahf pfsub mov int3 fldt jmp dec pop aad test scas sti dec inc in mov mov mov pop jmp or push push fucom lods mov pushf rcll bound add add xchg bound jg xchg sbb mov mov inc int3 test adc inc mov rcrl out xor push rol movsb das mov outsl dec popf inc inc push popf repnz icebp popf loop leave mov add adc sub mov aam xor mov js into fcmovu or push push push xchg mov aad loop mov jae or dec enter pop inc lret fwait ret lcall idivb xor nop fsts leave je clc pop adc mov fistl bound leave xor dec sbb in rorb popf sbb int mov jnp test call lcall cwtl and pop pop sahf rcrl adc jecxz sbbl or ret jnp pop idivb add cltd mov repz cmp sub imul lcall inc movsl push fistl sub scas aad das xchg pop pop dec int mov ret push in jmp test push mov div (bad) inc nop (bad) xchg xchg repnz in imul mov int fwait jge dec lock cmp mov mov or xchg call mov jb shrb xor popf pop lods pop pop cli mov xor js cmp push jno jno jl imull push sbb test loopne (bad) lock int std std enter lds scas addr16 pop inc int repnz andb mov or ss xchg push push rclb cmpsl mov cmp adc mov mov lahf movsl cs and mov ljmp fcomp push stos jns pop pop aam mov sub pop pop dec jne mov dec movsl mov jmp sub mov cmc jbe sbb pcmpeqb push popa outsb xchg imul jnp xor or roll push in and enter roll sbbl mov xchg mov jae jns ret xor jae jne jmp sarl and and xor pop push dec stos and imul lahf adc mov mov pusha jb and jge inc xor push adc cmpsl cld movsb fninit dec les push xor stc xchg addl ljmp ja loop dec int rcll mov rorl pop xchg adc sub lret test mov sarl popf outsl mov jnp mov inc fldt outsl in les popf out add loopne lea ja xchg daa daa xor inc mov jae js sti out mov notb sti mov push adc imul cld jge push lret ljmpw jns mov jns js nop (bad) mov sub in js cwtl pop sbb lret popa pop lret or mov push push jle popw adc cmc mov lcall xor xchg push mov push rcll lea add mov push jbe (bad) (bad) mov inc mov adc repz lods daa dec movsl loop icebp mov pushf adc mov ljmp add icebp jbe inc pop (bad) xor or jo jmp icebp loope mov lcall ficomp addr16 ljmp popa ds or and mov sbb inc and and dec jl popf insb ret sub clc mov sub icebp and jle jo jmp outsl or push repz ss ljmp mov pushf jp dec dec xchg xchg push push sbb cs cli ffreep jbe stc jge jmp jg lret adc fidivl arpl sbb sub (bad) (bad) push jecxz sbb mov stos xchg jo and cmpsb push jnp and mov add xchg out jecxz roll das mov mov int or or push fldl mov dec fwait pop adc data16 mov test add gs sahf (bad) js fcomp push ja dec sarl lods fcoml js xchg jne mov leave dec mov lods dec push lods lods out sarl adc lret cmc jl mov mov xchg xchg (bad) mov mov add jl hlt mov (bad) jg push cmc sbb ja into xor (bad) push (bad) nop enter or inc mov or pop fist js jns jg xbegin dec push jo outsb cmp push cmp mov movsl fadds pop push push and push scas roll std jbe adc lret stos shr add das stos test iret aad and jle jbe inc ss lods mov or aas sbb mov inc mov add scas scas stos xor lret (bad) pushf pop out adc divb in out adc leave popf xchg stos sub loop movsl imul dec into into cmp xor rol out scas inc jecxz mov pop add jae mov mov into int3 iret push out mov int adc call or lret add mov rcr mov dec dec ja aaa rcll das add adc lds and scas and incb mov nop mov inc out or push faddl (bad) and sbb fwait dec pop test data16 sbb pop pop sbb cmpsl int3 xchg insl insl sahf fsts scas pusha fildll and add add sub sbb cmp pop adc pop aaa aaa aam popa pop incb es jns call jmp and cli jp adc fs sub (bad) jl pusha cmp hlt and xor insb into ret jo pop inc xlat pop aaa (bad) ret fsubl adc cmpsb imul dec mov pop enter in in mov cltd movsl (bad) shrl (bad) jae push (bad) jne adc in jns callw data16 je adc xor push iret dec dec add sub std or pop in outsl data16 xchg pop mov or popf pop (bad) lock sub mov test jne push mov xor pop and mov (bad) fcos adc jbe aas mov dec orb cmc add lods xlat push push ret aam cmpsl js in and es test mov xor insl xchg push movsl sub dec ret popa call dec rcll adc inc pop pop pop movsl das cmp and inc and clc sub add imul aam pop movsb sub fs andl pop enter in cmp imul cli add sub jl or rcrl imul iret ss or in movsl test cltd hlt or (bad) mov aas hlt add hlt mov inc mov sbb aas pop jne addr16 sti dec (bad) call jge adc test mov pushf (bad) idivl popa ficoml mov test (bad) xlat xor bnd cmp inc add fucom jmp rorb (bad) movsb mov les mov inc inc inc push mov popf cmpsl and arpl xchg stos lods xor repnz fs mov and xchg jp push adc stos lods mov int iret into cmp cmp in mov push mov (bad) stc push adc ret jne loopne js xor adc sbbb inc rol pop je pushf sub xor pop cmp mov aas sti decb add icebp push push push xchg int3 mov fisubl mov pop or sub shrb or jno rcrb sar jle xor push lea pop jo gs in insl xchg sub dec scas mov sbb pop sub andl imul xchg fs sbb xor call pop cmp in std jg jno or sbb lcall inc popf xor notl adc cli jne lea jb push (bad) mov fisttpl inc and or mov sub out iret push xchg fsubr pop out lcall vucomiss add mov xchg insl mov mov mov mov pop mov push adc lahf repz xchg insl (bad) icebp or gs fwait fwait push fimull adc mov int lea add xor dec lcall mov pop mov or test pop lock mov shll dec adc (bad) xrelease sbb push fcmovnu (bad) sarb (bad) sbb enter in adc adc or fucom add add stos inc pop pop inc int repnz data16 mov popaw fs inc cmp dec pop mov sbb pop pop pop shlb test mov mov mov adc sbb jnp adc loope pop fcmovnbe aad shr in nop je lcall sub sub insl xchg bound sub cmpsb mov dec insl lods daa xor scas lods insl mov push push push sub cli dec push cli jno jns sub aaa mov sbb movsl or divl xor or push ljmp loop pop shrl pushf sahf or mov mov test push or out adc dec jns cmp jno dec stos cmp lahf push xor out xor sbb std std mov inc scas jg push push xor outsb cmpsb push mov mov addl jno repz jbe ret xor les ljmp imul jge jae (bad) xchg fcoms inc pop pop and stos cmp arpl andl jle and sti mov dec mov out mov int3 mov popf call add xor mov or jno addr16 pusha adcl dec fild inc (bad) sbb sbb adc or xchg imul pop pop add cli cli jg mov cltd cltd push push lock dec dec repz in sub sub (bad) or mov pop pop nop (bad) sbb jns add mov lret lret push add adc pop xchg pop pop fisubl imul push loopne (bad) mov mov push (bad) adc ja adc mov js xor pop lahf or adc mov and add xor push inc adc leave mov sti mov dec sbb in mov pop aaa call movl pushf sbb xlat pop mov ret (bad) dec pop xchg sub mov js or mov out sti je bound ds movsb sub pop test cmc push (bad) fistl jnp push sub sbb sbb in pushf dec outsb fs jns mov xor xor inc inc addl mov iret add (bad) push push sub push xchg mov xchg pop xorl movsl mov jb jmp push jno push loope mov push jae fsub dec adc xchg lock jp adc pop dec add cmc jo or cs sbb int (bad) movsb pop lea mov dec cli stos mov or mov loop pop movsl pop (bad) inc aam adc pop out out adc out xchg stos stos gs std mov lods leave call xchg pop mov movsl pop fistl pcmpgtw aad das xchg pop dec int mov jmp daa jmp mov lods and pop mov add fistp in sbb xor mov cmpsb jo mov adc leave adc pop add (bad) xor movb push in gs dec dec int3 mov mov (bad) mov and cld sub add repz sbb cmp mov jo jae shrb push jns jle xor cmp push inc popl sbb ret and pop xchg clc cmpsl js in addr16 pop and jno test mov xor js test stos mov leave xchg sbb or sub pop ficom (bad) jle test lods pushf enter pop ret xchg iret xor mov test jge clc and das adcb add or add sbb mov mov jge int3 mov (bad) loopne or (bad) testb fwait jbe xchg mov jecxz arpl ljmp sbb out in jecxz mov dec pop jecxz mov sbb hlt outsl mov mov repnz test inc int lcall pop inc (bad) fstps and sbb cmp dec dec jle bound in mov pop into into mov push dec adc cwtl and push pop sti sub mov inc sti arpl loope pop pop jge popf and cmp mov and adc clc mov jns sub (bad) cmp outsb mov jg push movsl insl adc add cmp es lahf push aam popa cmp aaa cmpsb jmp add out xor pop add adc scas mov push sbb ds div and sbbl jle xchg aam test scas inc inc outsb add inc gs pop jb adc push or xor popf lcall rclb loop mov xor nop shrb enter mov jmp cwtl xor lds push hlt jnp outsb imul and lahf mov and push dec ja sahf xchg int adc add lcall (bad) adc ret xor inc jb mov sbbb fldt dec sbb adcl movb in popa xchg sub pop movsb mov cmp ja inc pop inc inc call and les lahf loop xchg cmp fsubs test or sub aaa (bad) (bad) mov inc lret mov mov xchg mov inc sub push sbbl xchg fldt lock (bad) jne (bad) in add callw gs lret xchg scas xor leave into mov or xor mov leave inc es push push mov inc sbbl es cli (bad) aas jl jno jecxz addr16 pop jle xor clc in jle aaa pop add ret mov dec std std mov inc sbb dec std stc mov rclb add push mov inc movsl ss dec leave mov mov xor ljmp mov cmp xchg je dec pop (bad) jmp jo mov js and push dec or mov mov add lock cli or cmp jl fmull das loop jge icebp outsl in int3 inc inc xchg push add mov fistl out push (bad) cmp insl sbb mov mov js inc adc or flds cmp pop nop sbb mov and stos and stc lea ficoml in mov scas in call jecxz jno pop push pusha or cli aas mov nop aad mov outsl sub in lea sbb push pop (bad) adc std std mov rolb in xchg insl pushf sahf inc into adc lea dec add cmp aaa bound fld loop xchg jge xchg outsb test add xor sahf mov es mov inc (bad) out out ss push les aam adc xor (bad) xor scas call ljmp mov pop aam push and push add sbb mov cmp dec sbb lods sbb xor scas sub iret pop (bad) mov test fsts imul sbbl test xor add push push out jns inc into les push push scas xchg sbb mov and je (bad) in cmp jl insl add sub cld adc and and push lods es fwait out test adc or std jo add imul (bad) sub mov leave mov (bad) fldl jp outsb add pop pop dec mov cmp je adc mov int inc cld lds xchg adc loope movsl imulb sub mov psubusw cmp push flds aam sub sbb sub fldcw dec mov dec adc lods lods insl sbb test outsl lock test jb push lds lock in cmp pop je lret adc mov push enter in out push data16 push data16 rol insb or std push pop push (bad) fcomp inc scas js mov out aaa sti add (bad) (bad) lahf daa sbbl mov push push sub mov (bad) cmc jbe fisttp (bad) (bad) jb mov (bad) insb dec pop inc ret mov push repnz inc dec jb lds (bad) sbb movsl movsl test fwait (bad) pop repnz mov push movsb imul mov out mov (bad) lret andb repnz out js repnz pop mov loope xchg ret push in setg push push int3 or iret arpl loopne dec ds (bad) jmp jb in xor dec dec cld (bad) xorb pop or test (bad) fdecstp xchg loopne fdivrp dec cld cli (bad) or xchg xchg jne mov sti repnz pop or sti sti aas pusha jo add sbb popf cltd xchg fsubl cltd (bad) stc iret in (bad) fcmovnu mov rcr adc inc adc fisubl push out call push pop lea icebp jmp inc test leave jmp jmp xchg jno pop sbb push adc movsb mov es iret mov inc jecxz arpl int3 push jne mov fwait pop daa js ds and or cli aas jg pushf push ljmp scas scas inc mov lods push push jnp xor lret mov rcrl dec ss and mov mov test in xchg xchg jb sbb (bad) imul mov (bad) (bad) (bad) incl mov inc mov in sbb (bad) pop pop aad sub popl cmp ljmp lods cs out adc cltd inc rcpps iret mulps sbb mov std jb or dec pop cmpsb sub xchg mov in xor int xor jbe mov jmp sbb out in in aas xchg iret adc pop pop fstpt jge aam xor inc pop jae call and push es adc scas xchg dec mov xchg fcoms inc xor mov pop pop int mov leave xadd ss adcb test pop jle orl iret xor sbb and xchg push jl xor fnstcw dec add divb push add mov push fisttpl rorb subl jl jns add rolb jecxz and mov mov es dec pop clc xchg sti jo adc mov add aad xlat (bad) fildl add lahf daa lods pop scas dec add mov or sbbl pop add aad (bad) push pop sub jg rorb lret lret pop pop data16 in in fldl es pusha test ret ds jp mov (bad) mov out mov loope je cmp in setg fstps or adc add bnd loopne insl mov sub dec dec cld mov enter femms orl out out mov jmp pop cmpl dec push xchg push sub or mov cmpsl out repz pop out stc sti cmp mov sbb push cmp or sbb js fcmovu rcrl cwtl (bad) pop test fcoml push fiadd call rclb packsswb loop les push push mov sbb and popa loope inc fstps inc mov mov jnp sbb push or cli jp sbb pop dec or idivl jg sub sub jmp push push adc scas scas inc mov and repnz std sbb lea shlb mov sahf movsb sti push stos call lods imul lahf in insl adc xchg je insl push outsb cmp xchg xchg fwait out cmp pop xchg mov push adc cmp js sub enter cltd call rcrb xchg daa rcl jnp mov cmp jmp sub (bad) sbb mov js jne fisubl psubb jns lahf ss orb imul sbb scas jne (bad) push mov pop mov dec inc es popa pop inc divb lahf lcall cmp mov push pop xor mov push hlt imul sub sub adc mov pushf push sarl pop sbb loopne stos stos loope in in into into or inc imul das cltd out ds scas and rcr adc movsb insl mov (bad) jae push pop cmp sub movsl movsl cmp mov nop push or (bad) leave ret stos add fbld outsb and xorl sahf sahf mov or push jmp (bad) pop xchg push push sbb cs sub jl (bad) mov pop jl xor push std dec jb inc xorl xchg test outsb mov andb push decl int rcrb sbb or jbe idivb mov inc lds push sub cli add cmp fwait dec jns aad bound ja mov push push (bad) and mov rorl inc js aaa mov mov mov leave mov shll push test sbb or mov xchg or pop xchg inc lds out xchg sbb and sbb mov push test popf fiaddl sub cmp (bad) (bad) fcmovu and movsb movsb jg inc inc sarb out xchg mov outsl (bad) ja fstps cwtl pop popf adc sbb cmovo push add lea rcrb pop push push pop jle dec pop adc loop shrb push scas loopne outsb xchg fwait xchg xchg inc inc int and mov xlat or jae inc sub cmp cwtl inc das mov je sti (bad) mov dec (bad) jmp aas jno push fs mov repz and cmp and fstpl fwait lcall sbb stos loope in in into into or mov cmp rol sti imul pushl inc jle mov cwtl xlat clc es xor lds or cmp inc sub inc (bad) fbld adc xor add (bad) in sahf sahf xchg scas mov or int pop ss repnz mov sti jl ljmp inc lcall ljmp and and or jnp xchg xchg or mov inc inc popl mov mov (bad) scas repnz outsb xchg dec arpl xor mov xor push into xchg xor shr dec jecxz push push movsl dec outsl mov lds jmp cmp imul xchg mov ficom ljmp mov mov popf fwait or sbb ss pusha and mov cmp insb mov cld insl cmp jno rcll mov mov mov or sbb in mov gs ja jp mov add push fistp outsb xor xchg pop imul adc sbb pop xor mov sbb xchg jecxz es dec jmp push push mov add pushf jbe add and sub dec mov adc inc dec dec or push clc add pop mov or je mov lods mov add lds jl popa mov sub shll mov lret xchg sbb scas push inc movsl add mov shlb mov dec cs mov cmp in shl mov repnz jne or dec inc sbb lock int or cmc stos xchg lods test or mov adc das cmp push repz xor inc dec pop inc hlt or xorl stc pop outsl dec imul cs jbe jnp mov or push push add aaa dec add jns lods imul adc or inc inc enter adc dec subb fistpl cltd dec push lcall or popf xchg xchg movsb push pushf xor mov andb lret mov pop jno repnz in pop jecxz sub loope xchg aam stc clc mov ss push les aam adc ss push mov push adc push std xor addr16 pop cltd aam push scas lds movsb lret mov mov shr jecxz outsl mov mov pop insl xchg cmc push jge cmpsl pusha clc test mov xchg sbb popa daa arpl adc outsl add adc or je dec inc inc mov push in insb and mov mov pop scas pop (bad) mov lock and aaa idivl mov push xchg insb bound mov jg cmp add es push out jns repz push js in inc int3 cli ja cmp shl xchg xchg mov insb add sub lea adc mov jmp mov in ficomp enter pop call mov jecxz ja pop mov ljmp scas call ljmp sub hlt pop aam and sbb stos add xor mov aas aas sub fwait push inc je sub add mov mov sbb sbb add mov xor fs mov (bad) (bad) (bad) incl push addr16 in mov hlt sbb imul add orl popf rcl jp pop lock jge out icebp scas arpl rcll jbe outsl and fstpl cmp mov aad xchg push cld mov add mov es popl xchg (bad) or lcall mov mov inc inc or dec xchg jnp fstl push (bad) dec mov inc mov es movsb sbb stos jcxz cmpsb ret fisttp or dec xor popf add and lahf into mov sub out movsb pop mov mov ret push push xchg pop sahf ret push cwtl cmp add or fstl fwait sarl ja pop outsl pop inc or xchg jmp cmp xchg xchg push sub mov jo lock loopne mov xchg call out hlt shrb mov cs les test lcall inc or dec pop adc lock fbstp loop inc call cmpsb sub cmp fwait fwait xchg xchg inc inc int and mov add and sub xor popf mov and adc ljmp jae (bad) stc xor and (bad) hlt adc sti int3 mov dec mov mov imul je xchg addr16 imul fcompl pop (bad) and lds icebp imul out cmpsb mov mov shrb in stc mov mov sub mov pop cs lock imul xor fwait xor inc xchg sub into (bad) mov pop cwtl popa push push push mov nop paddusw jns das das lock repnz stos mov incb movsl pop mov push jmp cmp cli push pusha push and (bad) or lea cli (bad) jo aaa int3 or (bad) rcl aam scas mov mov aaa sub sarb int add call fisubr pop sub and cmp lret push lods mov add data16 in in jg les sbb add adc rclb addr16 xchg push xchg mov sub into into mov mov repz inc xor pop daa lods lods or mov cmp dec dec movsl movsl cmp mov cmp xchg lret xor dec xchg xlat add fist subl xchg and lret adc xor shlb xchg fdiv jg hlt das mov lret stos mov or movsl int mov xor lods push push lods push xor je xor mov inc orb push add movsb loopne mov jns or xor mov push outsb dec jle mov dec fs sbb mov cltd xchg add dec es mov push fldenv cmp scas and and ljmp xor adc es inc insl mov ret adc movsl movsb jne hlt sub lods aaa in loope (bad) pop je shl aas stos mov or xchg xchg lods jo mov mov stos cmp push mov dec push ret add mov push and stos sub adc mov dec outsb nop dec push dec in repnz pop in jmp popa cwtl ds ljmp pop pop test daa stc loopne add rcr or pop pushl inc std bnd add xor (bad) movsl pusha lods int mov inc sar lods jmp cmc icebp xchg lret mov ficom push out lcall jge ja ja movsl cmp out ss push les aam adc ss out arpl adc bound loop mov sbb fsubrs inc int3 push data16 jp stos push mov enter mov mov out jb stc mov and jle std add sar xor out insb or call out jl das add jns inc aam iret dec add je,pt or aam popa jo scas dec shufps jne and test sub jno pop adc stos cmp or call and xor clc insb iret shl lods push (bad) scas lea jnp out mov add mov mov (bad) jo lods (bad) gs (bad) inc test (bad) lods cmp test movsb mov inc inc add loop test into fcoms push inc push in mov fcomps jg mov jbe jmp mov addr16 test sub testl lahf sub arpl push fsubrs fsubs mov hlt mov mov mov daa cmp (bad) pop sbb call mov (bad) adc in pushf jge es in jns (bad) js cltd or mov xchg push jbe cmp ret inc pop push gs mov ret mov dec lcall push lcall cmp inc (bad) mov (bad) jmp cmp outsl and jle add test sbb imul repz or jns aaa into pop out or stos adc (bad) and xor aam or lock xchg into sbb movsl sub push inc (bad) pushf adc cmp fsubl insb daa out sub and ret mov into add inc and mov shrl and mov inc or rol inc fdivrs lock xor negb iret mov or repnz fiaddl mov jnp pop int3 inc mov dec (bad) push rcll dec push xchg add adc mov enter stos cs jo lock and or outsb out fstl in out lret sbb (bad) sahf mov cwtl cltd adc repz add cmp pop shl pop xchg pop cmc jl add insl in dec aad outsl xlat push pop xchg xchg mov lret xor add add je mov add leave pop xor (bad) enter fs push sbb inc imul pushf inc inc adc mov cld or inc mov shrb les mov mov adc push and rcr xchg mov mov adc cmp scas mov xor cmpsb cmp push push push adc mov sub cmpl lock ss aaa out cmp xchg (bad) enter into xor imul dec and mov inc pop in rolb int3 sarb mov idivb mov sub jo dec lahf (bad) aaa out jo mov jle std adc and lahf pop les jnp jle adc lret int divb hlt mov xchg (bad) sbb mov inc inc jbe call fst aam and aam jecxz dec ret movsl xor inc sub aaa xor aam sub fcmove arpl add fdivrp inc (bad) jne add sub outsl push sahf lods mov pop rcl mov out or dec dec loope lods xor inc popf add mov and stos es fcmovu add pop xchg jg sbb std jl or xchg imul pop icebp insb adc adc int3 ss mov (bad) leave cwtl cwtl stos stos mov or adc loopne inc in cmpsb rcr insl pop xchg xchg cmp imul jne sub shrl jo adc xorb cmp ficomp pop inc push sahf (bad) (bad) pushl push push iret mov cmp lcall add mov call mov inc inc jbe call lods or insl xor rcll lods cmc repnz xor pop bound inc adc imul xchg xchg stos and add cs mov cmp mov aaa fs decl mov lahf shl sub loope mov inc inc js jo xor sbb sbb ds (bad) jns xor fbld scas fs pop test mov ret movsl add test inc xchg pop pusha sbb xorl or push out stc jmp icebp xor jns fldcw and aas gs push xchg adc jno sbbl ret ret sub or sbb mov sub stc xor inc xchg mov lods arpl (bad) xor lods xor pop or call jns aam or mov mov pop lahf add adc mov int repz add test mov andl jbe mov inc sti sbb popa jmp xchg jecxz fwait repz mov and adc cmpsb xchg cs sub ret lods insl sbb inc out cmp mov lods and push xorb sbb clc cs push insb insb fs shr int3 mov (bad) or cmp lret cltd and adc pop mov pop pop pushf adc lock xchg rol or stc mov js enter mov mov nop pusha insl lock push ret ret mov aas aas fstp xor sti sti (bad) cmp (bad) scas jb rsm jne pop inc adc jecxz xchg out out jle out inc dec ds or push sahf xchg xchg fucomp mov lods arpl adc bound pop pop insl insl lret lret pop pop data16 in in jg les xchg loop jg and fnop jecxz lret ret push (bad) mov jp dec loop pop bts ljmp (bad) in sbb shlb insl divl test out xlat fsts stos fimul mov jmp add popa insb arpl adc jge mov xor leave dec dec add sar xor mov (bad) xchg call jne pop mov xchg sub sarl imul jmp cld nop push xor push fsubs push lock scas xor (bad) into inc cmp mov sahf add pop mov lods scas loop mov cmpsl cmp inc popl in dec pop push push adc push push push fcmovnu scas scas icebp icebp mov test call loope mov inc dec into into push (bad) mov mov divl add cmpsb andb xor (bad) fistp add xlat xchg or mov (bad) mov jmp mov ss dec dec notb (bad) jle pop mov js sub aam imul stos sub jae jo sub xchg into mov fdivl mov call cmp or xlat xlat push push push push rcl test (bad) cmp in push enter or ret adc ficoml pop pop push xor orb repz add test add pop pop cld cld aam dec xchg push sbb sub into addr16 js jno je inc adc add fwait fwait jns rol add leave xor cmpsl addb ljmp data16 arpl sub aam inc sub mov mov (bad) cli insb mov lods out ret and sbb mov push adc pop cmp sub movsl movsl cmp mov cmp pop mov inc enter pop xchg push data16 mov or adc xor jmp lock jb repz (bad) outsb push jmp mov mov es pop pop sub add add std mov or std cmpl and fwait roll pop bound addl pop mov add in cmp in test push cs xor leave (bad) dec cli sahf add cmp jae bound lret pop pop data16 in in jns mov imul bound sbb fwait cmp rcl cwtl cmp in in into into or mov cmp out nop daa push sbb scas sbb and mov aam hlt test sub dec out cmp outsl insb fs dec mov dec push addb sub (bad) sub sbb mov push out popf sti jmp and lds daa in mov sub push inc cmp test (bad) call scas push mov aaa int3 mov (bad) mov lcall cmpsb sbb int adc xlat outsb lods push lret cmp push sbb aaa hlt cltd push das pop xor push std push mov test sbb and mov dec dec and ret xchg push daa dec pop pop xchg addl out addr16 inc adc dec into inc mov sub mov mov push lfs movsb sub jmp xchg js (bad) mov mov packssdw and sti (bad) xor adc sub sbb push push cmp es xlat mov in jmp xchg testb movsb movsb jg inc inc sub mov add div pop pop in mov xor lahf repz dec dec outsl rcll icebp enter aam aas lret fstp aam hlt cmc dec dec je popa out ficomp xchg pop pop mov fsubl push push lret sbb nop push jo ffree subl aas push sbb loope dec and pop pop sub movsl or jne ret (bad) arpl (bad) decl push jg and call es adc scas nop dec inc or arpl mov std mov loopne cmpsb gs lods lods out mov (bad) mov push push lock inc cmc scas inc dec xchg lock mov or xchg aad fs mov xor popa fmull outsl lcall dec pop adc sub adc mov push mov inc push fstl popf rcl lock fwait jne jge mov xchg insb bound push inc pop add fadds test cmp push adc jbe mov addr16 add push int ds dec rorb into mov mov test int3 int shlb (bad) mov push adc mov shll lcall outsb push in add xchg xchg inc lret in out and jmp popa cmp daa pushf (bad) pop pop cmp sbb addr16 mov in mov popa or pusha pusha sub outsl mov outsl sub cmpsl scas test add (bad) or (bad) xlat pop inc lret pop fs push scas mov push adc mov inc xor xchg aam je mov aas fcomps xchg and dec dec and xchg mov scas cmc push fistpl jg pop rclb jne pushf test cmpsb inc jge push inc lahf xchg leave sbb sub mov (bad) jne pusha pusha pop addr16 repz add fidivr adc call ret xchg push shrl (bad) addb or mov mov mov jae adc popa pop jl adc movsl int enter shr scas push sbb mov pop xchg leave sbb lret fadds into cmpsb insb inc jl dec push lods sahf inc inc and mov mov cmpsb (bad) mov fld1 addr16 mov enter add sub ret dec xor cmp rcll xor inc inc aaa loopne or out sub push adc imul adc loopne sbb in xchg lret xor mov jb add xor sbb loope data16 neg add jb cltd pop jle and movsl leave hlt xor stos adc sbb scas rcl popf popf mov pop mov scas lcall movl dec pop aam sbb pop scas and les cmpsl sbb adc cmpsb pop (bad) push push push xor loope mov inc pushf or push mov cld sub sbb out mov fs in cmp sbb mulb push push rclb adc mov lods cld outsl movsb xchg jge aam sub xor movsb jl push mov js (bad) mov dec inc aam lods bound dec ss idivl dec daa mov nop jae fwait (bad) icebp icebp lcall imul notb (bad) inc adc mov inc inc push mov mov fidivrl push xchg mov jns jmp aas pop jne push iret cmpl jns or and push sbb orl lock sbb inc inc xor jecxz xchg mov mov dec ss mov mov jne dec adc pusha popa jnp push fcomip mov aam pushf pop outsb jmp xor out sbb add xchg cmp out and mov out cltd jne sahf lcall push out aam sub test mov push xchg pop cmpsb adc les daa mov (bad) clc stc cld inc cli call adc xchg adc mov xchg mov (bad) (bad) (bad) (bad) incl mov and mov lea jge jbe nop fpatan push movnti xchg mov cmp mov jp mov scas aaa test jo push sahf xchg fcmovu (bad) jbe imul fcompl in xchg jo sbb inc popl test sarl lds (bad) loop jnp in addr16 daa es add ret mov and add jb xchg mov cmpsb arpl push xchg mov in inc mov sub out pushw inc and mov mov sub cmp sub ja pop test pop pop pop add repz push sbb loop mov or mov mov pop and mov repnz add sub mov aad call jge mov lahf out mov mov inc out icebp jns fiadd mov nop data16 lcall lds cltd jle push cli mov adc out insl call int pop rol cltd bound mov mov add xor pushl stos add sub cmp sub xchg push out adc scas popf mov xor jne cmp cs and dec sti fs fmull xchg into jmp cli fstpl mov dec mov movzwl out push sbb xlat out cmp mov sub stos loope in in into into xlat pop sbb test enter outsl inc sub sub and mov lock jae lods sbb insb call cmpsl test mov (bad) (bad) (bad) incl mov movb adc jbe scas arpl shrb mov idivl cmp in mov movsl pop xor out mov and jo rcl movsl lahf nop mov jp mov je into add and mov repnz cli xor sbb stos ss repnz inc cmp leave or mov jnp inc xchg mov imul fcmovnu scas scas icebp icebp mov push clc clc push in inc jle (bad) cmpsl gs rolb les adc scas xchg dec mov pop fsts cmpsb jl adc push fidiv iret hlt mov xchg jg sub ret sub scas jge rcrl cmc push add rcrl dec push push lods in jno and and xchg jns xchg inc test (bad) leave cwtl cwtl stos stos mov or adc loope xchg dec jns cs jne in das test mov and add daa daa in mov imul imull imul mov xor xor fnsave xor sti int3 adc or scas fldenv sub mov (bad) adcl mov (bad) mull xorl pop sbb xchg and pop bound dec xchg adc data16 in in fldl es lret push (bad) mov add gs repz test dec jmp loopne les inc xchg sbb pop in dec mov in lahf and xor loop mov inc inc fildll jmp icebp (bad) adc in aad loopne scas sub jge add (bad) adc pop pop mov jecxz sbb insl in js sub xchg xlat push push push push rcl test daa stc loopne (bad) mov lea adc dec dec std jle xchg movsb insl xlat sbb pop imul jmp sbb xchg pusha gs add and enter jp xchg and mov add cld jno pop rcrl cmpsb jl jne sbb sbb fwait jns gs dec xchg adc aad out out data16 mov fcoms repz mov leave inc stos data16 xor imul push in pusha in outsl daa sahf mov pop pop xchg push fucomi pop add rcll ret adc icebp repnz in mov in fdivr xor leave inc push lea mov repz rcrl in andl push fldcw rolb repnz jno jno xor insl mov adc adc and xchg jo fimull push push pushf lahf (bad) psadbw pop scas mov mov fisttp mov out pop jno outsl (bad) lea jns dec das das mov inc inc jbe jmp inc ds mov jl ljmp test test mov cld out xchg sbb sub jb insb push sub xchg (bad) aad ret ljmp adc scas scas xchg dec lods xor mov and mov pop dec int mov xor push push insl and repnz adc add add cmp xchg and sbb jp icebp aaa push jle pop test cmp cmp lock push push out cmp arpl pop fidivr add mov xor add lret cmp jns mov pop add add cmp movsb adc sti cmp mov es dec daa dec mov pop add js out (bad) scas stc stc je out push fsts and orb inc sub or xor and mov adc repnz int loopne daa (bad) mov pop jle mov xchg stos stos push cmp and stc mov cmp jae xchg fisub mov std push je dec xchg push daa push cld (bad) in push xor mov inc les out fs iret or mov pop sbb push xor push sarb jle xor push pop push adc aaa mov pop fwait xor cmpsl cmpsl jb pop lea in in jecxz inc cmp bound inc mov jns mov in sti jbe lret movb sbb adc roll fisub stc loopne lds mov add cmp jle insb sbb cwtl scas and in push push fsub push xor sub mov mov insb push lret push jecxz (bad) or outsl fs sub xchg mov mov inc (bad) iret adc (bad) and js mov cmp cmp imul mov jl test ljmp test sbb cmpsb insl sub push push xlat dec sbb out aas cmp in mov ret ds es into push lock cmp or loope fldcw sub movsl movsl cmp mov nop je xor add lds adc jl mov jbe sbb adc jmp (bad) xchg sbb lock jge lahf out outsl inc jmp int mov mov es jp (bad) js sbb mov cmp jecxz xchg xchg mov insb add sbb scas mov rcrb mov jmp inc sarb repnz push push dec cld stc mov inc pop nop xchg test cmp sbb xchg sbb out out and ljmp rcr push in ret aam jl sub in popf and add sub inc repnz sub shrl ds (bad) xchg cli jo adc sar data16 mov in subl jl dec jb stos xor leave leave les and fisttpll inc jbe xor vandnps test xchg repnz popf fist ljmp jge bound mov rorl mov push push and mov test arpl fnsave push popl adc cmp rolb add mov insb (bad) push (bad) into mov pop mov int add inc cwtl pop push lcall push push fcmovnu scas scas icebp icebp insb nop sahf xchg aam mov adc scas stos lcall mov mov cmp sub aaa out xor push arpl pop jne mov adc and iret adc mov loopne dec roll aam lahf xchg xchg movsb jecxz mov dec dec ja inc test push lea fstps nop mov aad jl sub or push aad and pop lret pop fs cli pop sub rol sub cltd sbb fmuls inc xchg or addl adc fistpll cmp jnp mov test adc into inc and xchg lds dec jnp mov mov xchg xor cmp pop or xchg sbb imul aam dec nop aam cmc ret addr16 cld cld sub call pop aaa test and lds xchg sub cmp or in jno in es adc scas inc mov aam loop mov jbe inc mov jl mov bound (bad) mov lods es and xchg fcmovnu adc ja fs and out repnz ss mov (bad) (bad) (bad) (bad) incl mov cwtl ja mov data16 mov push push aas stos outsb push adc jno lcall idivl mov sub push cmp test jle cmp add mul lahf push adc ljmp mov mov stc ds xlat sbb (bad) pop cmp adc jecxz pop pop mov bnd xchg sub mov xchg into sbb pop push sbb ret mov lds loope cmp out xchg xchg sub and ret mov and aas or pusha ljmp cwtl fcomp xor inc out pop aam jl sub jl int add dec mov ljmp jb insb (bad) mov scas scas lea xchg mov cmc icebp sbb mov sarl andl jbe xor clc dec add leave (bad) pop and in dec dec ret enter add mov aam mov ficompl jno pop cmpsb dec jmp stos in xor pop xor std repnz int3 pop outsb cltd outsb push push lods sub mov jp jle xor mov adc mov jno insb add rep (bad) push jbe sarb lret orl test push movsl and inc pusha adc fsubs and insl insl lret lret pop pop data16 in in fldl es pusha rorb into popf push inc cmp lea insb inc mov ucomiss divb test lahf lahf ror inc inc loope sub adc xchg sbb mov into into pop xchg cmp (bad) (bad) mov add pop or mov outsl js mov aad pop clc jecxz dec in (bad) or popf adc ss mov shll lods rcl pop shrb xor push outsb lods adc popf fstps dec inc rorb mov lret nop jmp cli lret cld insl in fsts dec push push in adc xor xor mov and lret mov loopne mov dec out aam icebp ret jbe cmp cld pop sub cmp adc daa cmp pop je les (bad) push sbb jbe lods in jo orl outsl lock nop dec lds ret sub pop jno out cmp lds add insb mov inc mov out and dec and ret cmc into inc icebp rolb add or inc push scas sbb add subl (bad) xchg or or dec sbb push popa fmuls xchg xchg push push sbb sub divl in scas cmpsb jno push inc cmp in fcmovbe pop addr16 cmpl lock fist push std test and pop fldcw push inc lods imul cmc mov std mov insl ljmp fistpl mov lds cli jnp inc fcomp mov xchg stos stos sub sub lods lret jo adc scas scas xchg xchg (bad) scas pop sub or cwtl rolb out or dec dec push adc mov push jmp ds pop push push jle insl dec loopne mov sar jp inc sub movsl movsl out rorb gs xor leave dec jo jp push push imul xchg dec lret fucomp in sahf es sbb and cmpsb fldenv jnp jbe cmp daa daa in mov cmp push xor std mov xlat fcomps pop sub repnz (bad) bnd inc inc inc out std stc add cmp jge inc ret push fldenv pusha (bad) mov xchg pop sub rorb outsl adc sbb fnstsw ds mov pop sbb and adc push pop sbb cmpsb clc mov ja xchg rcl ret lods xchg or cmp cli or ljmp add ds jae popa ret inc mov out sbb sbb js imul sub daa daa xor mov cmp stos inc (bad) or inc push lahf adc loopne insb sub or push push out xchg xor jno pop outsl xor mov xchg and adc nopl push nopl jb xchg inc rcl pop pop fcoml nop dec stc dec dec std std adc iret call (bad) fcoml push push pop xlat mov fdivrl sub dec sub xor sbb xchg faddl and cmp xorb inc int3 push sbb jne add jns add loope aaa xor out sbb or inc adc clc add (bad) ljmp lods mull pop ret movsl outsb arpl sub dec outsl xchg mov mov cmpsl fnsave inc rcrl test mov movb pop mov cmp dec dec movsl movsl cmp xchg out je inc sub rcll pop add je ret add and add push cmp rcrb jnp repnz jge sub and adc xor jmp je mov mov jae inc add ds mov in mov idivb cs fimull and data16 daa es orl xor dec add pusha popa mov enter xchg ja cwtl pop nop pushf fcmovnu scas scas icebp icebp mov test std and arpl jge adc lcall inc popf sub pop pop and sub cmpsb jne mov int int mov (bad) call sub sbb dec es les pop push cmc jle sbbl scas scas xchg cld mov scas add fs dec out int dec insl mov add stos mov or adc in cmp lret mov cmp or insb mov dec shl aaa sub dec xchg scas nop mov fmuls jnp mov lcall inc or jg stos mov mov sarb lret aas out adc sbb mov lea push je,pn test (bad) cmp rorl xchg outsl push dec frstor jle scas and xchg stos loop cmp cli xchg add iret inc jno (bad) inc mov mov push or add movsl (bad) (bad) jge movsb jmp loope xchg lods xchg cmp pop (bad) aas fxam cmp jl aam adc xor addl adc (bad) lea push imul xchg pop lods ljmp sub and (bad) dec and and add out jns mov fild mov sub mov mov imul not push sub lahf pop lcall popa in xchg and lods push repnz push aam add push (bad) stc pop mov inc mov loope lea add pop cld cld aam cwtl sbb pop or fldcw fbstp popa sub bound (bad) mov cmp stc stc (bad) les adc in ja fcoms imul xchg xchg sbb loopne stos stos loope in in into into fbld inc dec leave mov sub outsl mov lds pop (bad) ss ja cmc mov inc xlat call scas ss adc in subl inc xor dec dec mov fildll push pushf add mov sbb xor pusha rclb fldcw push jae mov jmp cmp jb pop xchg mov push xchg jno xchg push and xchg push je repnz jp add cmp stc xchg lret push xor ds addb push rolb push (bad) dec dec xor stos mov jnp in add add std lds loope sbb xchg icebp cmpsb mov loopne gs jo std or ljmp mov and sahf sub (bad) fmuls sub loop fild jns jge call out (bad) (bad) mov mov push pop xlat int add icebp ss je orl scas lcall jns cwtl and imul xchg or adc mov push sbb dec sarl hlt cmp insb jl (bad) mov aad outsb imul jbe pop jno push sbb pop adc repz jae,pt lods dec gs lods fistp arpl add add aam sbb (bad) mov fwait rcrl xor mov (bad) jl and mov lahf lods cs pop adc mov loop inc mov push xchg out jl loope cmc hlt gs ret mov push in cmp mov lds adc jb jne add jne cld punpckhwd test (bad) jge imul push push adc sbb out imul iret test jno int3 mov adc (bad) lret mov pop pop jle sbb cmpsl cmpsl addr16 jge add add add outsb test in or repz rcrl or mov popa jmp inc mov push push sti pop lock add jmp mov sbb pop jnp cwtl sbb out add push add (bad) push in sub js xlat or jae add aas mov imul outsb sbb int cmc mov (bad) dec je (bad) fcompl mov fwait imull shrb pop pop inc dec push sbb jecxz lds add adc dec mov icebp stos stos loope in in into into mov dec dec mov inc mov lods daa mov repnz adc dec cmp jae xchg adc pop addb cmpsl mov (bad) (bad) (bad) (bad) incl jnp push adc inc sbb (bad) cmp iret movsb sahf pop (bad) or and faddp aad pop int vaddps jns jge xor mov daa daa in mov push mov or cli adc push ret ret mov aas aas fstp xor sti sti scas pop (bad) (bad) stc jp or pop pop out inc (bad) (bad) out inc inc das das mov inc inc jbe ds mov mov sub push fbld lods enter xor xchg pop out (bad) lret pop pop data16 in in inc adc clc iret ljmp xlat pop mov (bad) sub cmp addr16 (bad) pop lcall add push imul pusha pusha sub int3 aas out loope scas fcmove pop pop mov ret xchg jp rcrl sbb test mov and mov (bad) (bad) (bad) incl or (bad) dec inc push pop sarl xchg lahf sahf fild mov jns insb xchg or out jno xor mov daa daa in mov out in mov mov (bad) test pop jnp jo adc xor mov das das (bad) sbb adc xchg (bad) icebp inc adc mov xor jmp and xor les icebp icebp fs adc into and add dec dec dec or cli cli or jl mov idiv add dec mov ret jp xor les pusha or inc repnz mov dec dec lea cmp push out lret inc dec divl inc inc sbbl lret pop pop jle sbb cmpsl cmpsl addr16 ficomp pop xchg ljmp inc inc adc cli rcrl loopne mov cs sbb dec ljmp dec dec (bad) daa stc loopne outsl mov mov and in cwtl jae dec dec std je xchg notb pop pop xchg add nop push jp lea js push inc sub mov cld cld aam dec nop lcall or sti dec jns into cmp cmp (bad) out out ss push sbb pop sbb jg sub in es adc scas xchg dec mov cmp jp arpl mov add ret lret inc xlat (bad) ljmp mov aad sahf adc xchg test test push pop cmp sub movsl movsl cmp mov nop je jg inc add mov add adc and pop cmp mov sub sbb mov jecxz aad shlb sub shld mov gs xor push in adc std (bad) scas cltd clc push scas xchg call adc rcr je jno add adc add test or (bad) jbe (bad) mov sub dec dec (bad) (bad) xchg xchg add dec es mov call cmp scas and jne push xor out sub hlt popa movzwl adc scas xchg dec mov sbbl sbb pop xor popa mov lea add (bad) mov test and (bad) xlat movsb cli jo clc rcl clc inc pop fs xchg pop in or call add xor mov mov inc mov cs sahf push inc inc pushf pushf jp dec dec xchg xchg push push sbb cs cli xlat add insb in (bad) repz loope push loop std mov jno push fcmovbe jge dec test divb bnd stc popf std aaa aaa ret test movsb outsl pop aam and sub cmc pusha push push int add sti pop aas popa enter int3 inc into push mov cltd ss push movsl sub jnp add call dec add fmull dec jnp xor adc roll das xchg dec mov and cli or sub cmc test mov mov xchg mov cmpsb inc pop addb loopne mov je cmpsl mov mov pop pop orl into push aad mov aad andl jge cs adc rorb idivb push cmpsb insl jmp mov jae fstp repz data16 xchg cli adc addl or sub and xchg xor lock push sbb pop push and loope mov and xor pop dec push out ret aad sti push int cld aam fwait arpl adc shrb lods jae push inc sahf push xchg fbstp fisub sti cmp fbld lret inc mov sub sub sub jmp jo adc dec mov loopne stos loope in in into into or mov cmp pop pusha sub in outsb jl pop mov push jle push jle push dec cmp js xchg sbb sbb in or popa cmp mov xor inc gs add subl dec dec or cltd cltd and lret adc in rorl add cmpsl jp jns sti clc jae loopne jmp je repz adc in cmp xor jb cmp cmp add sub std std aaa fisttp jo cmpsb cmpsl pop mov jb push inc mov sbb insb cmp jecxz inc into push fdivp mov adc adc inc int xchg push pop mov divl push lcall jle loope pop stc xchg daa out mov (bad) jno ljmp pop popf xchg arpl ret pop or and outsl ss sub leave mov insb aas dec jne shrb inc hlt and test xlat mov loopne stc das lahf jb cmc or jns popa jle xchg sbb popf push adc jno pop xor and and dec into aas push xchg iret pop fdivrl or mov add add pop mov hlt jge add pushf (bad) adc fwait aad imul xor fyl2x mov inc out adc out add adc or fiaddl sub fisttpl inc lods jp push add push dec xor mov dec pop test test or push push fcmovnu scas scas icebp icebp mov jp xorl stos mov ja (bad) fbld into into mov rorb sarl pop pop loope test pop mov fistpll loop iret out and jo (bad) loopne leave leave or fidivl pop xor mov or fist push push (bad) jecxz frstor mov sub jne lock cli inc in push inc mov repnz sbb add iret mov or sbb iret leave jno and dec pop outsl int3 or jb enter inc mov (bad) adc std std out cmc mov adc popf fisubl mov push xchg mov push pop mov sub mov cmp fstps sbb nop sarb popf cmp cmp mov pop std int3 jb cli jns jge add mov icebp enter (bad) jo sbb mov enter cmpsl (bad) dec fwait add arpl into ss ret or aam cmp lods das and std jl aas mov enter (bad) cmp inc ret out sub mov outsl dec xlat cmc inc dec movsl movsl aas cmp out test mov xor dec mov fnstsw rorb in sahf roll push or xchg sbb cs sub negb pusha call sbb cmp clc sbb xchg addr16 sbb js sar loopne js cld pop (bad) (bad) stc rcr cmp pop inc insb popf insl and or jbe pusha out mov jle jecxz sub rorl sbb dec iret mov sbb pop hlt xchg xchg mov push movsl sub and sbb ret xchg es adc scas xchg dec mov cmp jg xor aad jg mov lds and lods daa in daa add sarl mov xchg rcrl and cmc cmp pop push cli pop rclb or in cwtl xor je xor clc xor int3 ss cmp adc mov test xchg hlt sahf fisubl gs in xchg xor jne in jnp cmp sub pop sbb jo dec add scas add cmp mov in jno push mov (bad) xchg lods fbstp adc add arpl add xor sbb scas dec inc jbe cmp test popl sbb loopne pop aas out lret call sub pop icebp push pop xchg sub insl loopne (bad) std pop xchg dec inc test cli or cmp (bad) testb (bad) jnp pop jmp adc sahf cwtl loopne xor mov inc inc mov lods repnz (bad) aaa cwtl les lret into (bad) frstor movb fcomps outsb xchg dec pop add lods jo mov mov jb lea rorl lock dec add jmp adc or xor stc mov (bad) daa adc cmpsl and cmp mov outsb out xchg and cwtl mov lret cmp or scas out (bad) repz mov loop inc sub aas inc mov mov call insl or loopne aas mov int3 mov flds lods (bad) cwtl out sbb mov call leave ret scas pop lock adc mov inc push insb push bound mov fsubrp adc (bad) add mov dec outsb sbb inc (bad) je data16 mov xor push add jle jb lock xchg out adc dec adc or out test ljmp loope (bad) jmp arpl adc cmp cmpsl xchg and adc lods and hlt (bad) hlt sahf out call lahf out dec pop sub into cmp push repz ja inc ret (bad) es js out fmulp mov add jge mov fisubr pop in orl mov lods stc shrl arpl nop out and and rclb xchg add inc inc adc xor jmp sbb jecxz sub push daa mov out push fisubl leave xor mov out inc les js and in loopne add jg inc mov ret mov jae insb daa daa xor divb es mov (bad) jle scas cmp out ret stos scas aas xchg sbb test bound mull xor inc xchg (bad) mov (bad) xchg rorb xor lods mov push (bad) stos push lret or pop add mov adc jle jl mov enter push imul fnsave and push es js add xor jbe shl xchg xlat mov ja in mov pop sub xor inc xor test scas mov xchg mov add fnstcw outsb out mov mov popa add sub icebp stos dec inc xor int enter dec insl mov mov enter xor sub mov mov into sub leave rorb mov add in cmp ljmp mov lcall or into mov xchg dec ficom push stos jnp xor test mov pop lret dec lret and rcrl movl xchg adc jecxz or inc rcrl jno sti (bad) test daa adc add outsl jb jb scas lods push pop inc push adc dec cmp popa push jl gs dec repnz test test push les pop lret xchg xchg sub sbb ret and push lret mov scas cmc jnp add lds xchg pop mov int3 add ss loopne fcomps push mov jmp popa mov adc mov and lcall pop scas jge mov movsl test adc daa es mov fwait push pushf (bad) sahf js mov or repnz dec push mov mov jns out icebp fxch lcall cmp jmp xchg mov mov pop pop jecxz clc mov mov les std les out dec lret add iret in xor mov scas rclb mov decb daa rcl in dec mov and fadds jb rcl dec inc lret pop and dec mov sub xchg and mov (bad) (bad) sbb inc bound lret mov ret cs and xchg adc jmp pop xchg jecxz sub cmp or fsubs adc or mov xchg push xlat sbb aam fiadd jg ror dec cli pushf inc cltd arpl ret insl daa sbb in xor or push dec inc lds ffreep inc adc jo sbb es (bad) sbb fcomps inc call adc mov sti ss push sbb push test push add xchg and adc and sbb sti icebp hlt mov and mov je icebp cmc mov pushf dec add dec xor cmc pushf dec lret test dec dec idiv repnz fmuls aad in or xor (bad) mov inc xor push dec (bad) xor adcl xor jbe cmp dec xchg out and popa inc lds xorl fs sub and xorl (bad) icebp pushf lds sub xchg add push dec xor cmp mov pop loope mov xchg aam fisttpl stos push jecxz xchg mov inc jecxz push push and mov xchg push stos push dec sbb cld xor (bad) fcoml pop mov and mov xor aas mov add add out lock or sub lods adc mov inc dec sbb xor or inc push lcall jl jae mov pop adc and or mov pop or add loopne mov aam loop sti push mov wrmsr xor sbb fldenv in sub add push dec dec loop xchg pop add xchg jge repz aas sti das adc push lret addb stos push (bad) mov jb cs pushf inc add sti stos sub cmpsb lds into or mov xchg sub icebp lods lods out ret ret (bad) stos (bad) push add fwait rcrl add cmpsb icebp xchg cmc in add andl fdivr incl push mov inc (bad) or push in sbb dec cmpsl mov dec popf popf pop and divl pusha sub inc lahf xchg leave xor cmp and fiadd pusha pusha pop addr16 repz out call (bad) hlt scas stc testb lret sti cmp fcmovnu push iret imul jg xchg xor inc push lahf mov int (bad) cltd xor divl fstpl mov pop mov push aaa cmp mov pop insl insl lret lret pop pop data16 in in jg les js xlat cltd sbb outsl inc cmp shrl addr16 in pushw mov dec pop (bad) std arpl aaa sbb sub ds stos and push adc divb and mov loope imul mov insl jp fisttpl leave dec into roll xchg imul dec mov std mov mov (bad) or pop xchg rclb jnp mov div cmp mov daa daa in mov gs fdivrp add (bad) subps mov mov aas fstp xor sti sti adc arpl adc mov ret pop add and (bad) jo daa repnz add inc jmp dec dec mov in mov xchg sbb ds movsb movsl mov push and call adc out adc push shll push mov cs jae sbb inc mov mov into dec leave xor jmp aaa jp pop mov dec dec xchg push sub or lahf xor push or decb mov push jo inc std (bad) xor mov mov or push test xchg push sbb cmp loop jge addl adc xchg adc mov and scas mov ds fcoms inc pop push push push rcl test daa stc loopne outsl mov lea jmp mov insl insl ja fisubrl fstl pop push aad sub je call push test mov xor pop fs adc std mov es fidivrl cld stos pop (bad) adc or add lahf or loopne push add push dec or movl fidivr fwait lock out pop pop rorl cmpsb and dec add or into out mov imul (bad) cmp ds in jl scas (bad) (bad) sub pop mov test fisub imul xor enter leave ss mov imul ds sub in dec (bad) ret mov add xchg pop xor div cmp mov daa daa in mov jmp int jle inc xchg pop push sub aad enter repz cmp popl mov pop pop inc iret xchg or sbb lods mov xor mov loopne lahf or (bad) call mov outsl pushl out bound xchg decb xor cmpsl out fidiv or sub insb mov mov es lret ret pop pop adc sub dec pop ss and aam pop mov sarb mov mov mov ja push push movsb push pop add mov icebp xchg or arpl cmpl jno pop jp cltd and adc loopne xchg pop data16 mov or mov fdivl aad cmpb push fcomi jge sub sub sbb push dec and outsb xor jno inc loopne lahf cmc (bad) lods lock shll xchg aaa sub in xchg add inc pop aaa (bad) dec data16 call sub test xchg mov ss rolb test or inc and movsl dec popa fs aad jge xor jmp sub pop insl insl lret lret pop pop data16 in in fldl es pop lret ss push shr out mov lds push push push dec jo int3 int3 scas inc xchg test or cltd loopne dec dec mov xor lds jmp add pop jo dec lret (bad) xor lock jp inc push pop jle sbb cmpsl cmpsl addr16 icebp dec xor pusha int3 dec mov mov std ja cmp in cmp dec xchg sbb cmp mov jb mov leave fistl notb fwait call lds xchg push push pop add ljmp hlt mov xor jbe (bad) (bad) out out lea pop pop cld cld aam cwtl es xchg popa sub out xchg inc daa js xor pop cld rorl out lods clc cmp int mov xor adc ljmp lcall in sahf aam leave addr16 add mov sub lods out sahf mov or xchg icebp dec or cltd (bad) mov push adc icebp or imul imul clc outsl cmp leave dec mov jne push data16 jle shll mov jp dec dec xchg xchg push push sbb (bad) pushl cmp mov sub cld xchg pop push insl daa cmp cmp push or push setb repz xor sti sti les or pop add test sbb in (bad) in daa repnz jbe ds mov in and fstl mov sub and stc cmp cwtl sahf in inc inc fwait xchg stos stos out sub lods call jno pop fnop fsubs ret add loopne stos loope in in into into xlat pop lret mov mov out cmp repnz adc dec jb or xchg pop xor test sbb jl les out out (bad) incl pop sub data16 mov cmc push (bad) dec cltd movsl sahf cmp adc cli popa jmp or (bad) xor dec out pusha jo sbb and and sbb sub lahf cmp push pop gs std pop fiadd inc sub mov in mov hlt stos jecxz mov lret mov xchg xchg icebp outsb adc out in std mov or fcmovnu scas scas icebp icebp push movsb adc insl lret lret pop pop data16 in in fldl es pusha cwtl push ret ja,pt cmp ss arpl in jb mov outsl mov cmpl lock nop mov pop or inc int pusha loopne dec adc call pop pop jmp fs (bad) leave imul push lcall pop arpl push add cmpsl cmpsl addr16 xor in add or call in cmc jb mov sub pop nop xlat xchg adc pop xchg pop inc push iret push in jae dec add inc sbb xchg xchg adc (bad) cmp les cmp push push test push pop xchg xchg jmp fwait xchg xchg inc inc int and mov or sti leave enter xor sbb fcomp (bad) out sub mov xor jnp dec inc sbb mov or fwait fwait xchg push hlt hlt xor test les mov out ljmp movsb in (bad) pop pop sbb fs loope sub and pop dec dec jb mov or pusha sub mov cmp sbb xchg cmp dec dec test clc aam je push pushf dec mov jmp mov fcmovnb leave leave dec (bad) repnz xchg and enter fldt mov inc enter jge (bad) xor shll lods sub adc jmp jnp mov mov in fwait sbb add inc xchg repnz xor sti sti adc push fdivs pop es cwtl pop inc inc (bad) (bad) jecxz test loope cli repz in xor mov shr aas sahf loop inc inc xor mov lds inc jge ljmp add mov mov sub and mov sahf lock mov test sar cmp imul jecxz into outsl xchg hlt dec mov sub outsb jb mov mov xchg jb movsl fisttpll push pop cmp sub movsl movsl out mov clc outsl xor dec mov xchg cwtl stos stos mov or adc arpl or rcrb lock das mov out hlt sub pusha outsb xor lods xor jmp mov mov es or xor add mov stos (bad) stc add mov push leave pusha and (bad) inc scas stc fwait std mov add lods lods dec dec (bad) (bad) xchg xchg (bad) lods movsl cmp (bad) mov pop pushf push mov xchg cltd and mov in in sub mov sahf aam xor add rcrl mov inc inc push push push jnp insb fwait inc cmp int cmp lret adc add xchg xchg daa daa sbb pop pop lret popa pop add sbbl lret pop pop jle sbb cmpsl cmpsl addr16 sub jne add shr gs jno inc out mov in sti sti aas aas (bad) ja fstps cwtl pop popf (bad) pop xchg fidivr inc xchg inc xchg xchg rcl adc pop (bad) cmp sbb adc inc pop in (bad) aas mov bound into loop and hlt jnp pop mov jl and pusha scas dec insl fistl sub mov push popa loope sub fistl clc pop ja pop adc jne cmp rcrl mov fldl jg lret sbb xchg cld (bad) mov mov pop and (bad) dec pushf adc cmpsl push cs stos bound andl mov daa out loop mov outsb aad and push movsl mov imul sbb or pop movsl out es lret adc les fist inc in jne je test adc ljmp cmp enter arpl and mov ret push cmp xchg and mov inc lods cmc cmp fiaddl mov fiadd stc js out das jbe aas into add je xchg das pop pop inc iret xchg cs aaa or out pusha mov mov or mov lds jl incl cwtl push push lock xor aad shl sub cmpl sbb push and add js fmuls int pop aam push out sub movsb outsl and push mov dec pop lret scas cmpsb and fadds insl mov push scas push push push (bad) jle fadds sarl cmc fistpl imul sub xor leave addl rolb dec sub sub imul fstpt (bad) stc jns cmp jl sub pop inc cmp ret fbstp add mov clc enter repz movsl inc or icebp mov repz jnp xchg dec xchg (bad) add scas jecxz and inc ror cmp outsb mov xor ret ret inc or pop lret sub mov xchg push pop inc insl jl stos loopne xchg (bad) jo add xchg and out data16 into enter rorb dec cli aas mov ret insl leave ja (bad) jne pushf flds (bad) jp call test sbb dec inc (bad) pop lcall dec lcall jo,pt inc pop in dec pushl test push loop (bad) leave pop test push loop inc pop sub (bad) mov mov push pop loop push in cmpsb out std sbb jmp sti mov outsl cs (bad) pop sbb fstl jge pop (bad) lods or pushf cli sti ss (bad) push aaa rcrl push xor or out xchg jmp rcrb sbb lods mov mov gs cmc js (bad) and mov pop pop in pop inc fwait jno xchg out adc adc and loope or es mov sbb loopne jo std jb inc xchg vaddss test stc in bound dec hlt cmp je loope addr16 jbe popf push sahf (bad) jmp ret (bad) pop imul and xchg shrl jg xor push xchg push gs shrb mov (bad) lods pop scas push push jns testl push out rcrb or js insb loope idivl xor xchg push jg cltd push icebp cmp (bad) stos jno orb divl push lea pop ljmp sub sub lahf adc xchg (bad) lret sbbl and lahf test pop and adc xor enter add movsb pop (bad) and cs repnz enter xor orl sbb mov ficom movsb es mov sub loopne ret imul clc and (bad) mov and cmp ret ljmp and rcrb aaa jbe sub xlat sbb push aaa cli loop sub dec fsubs jle sub in and jl or sbb jle xchg pop imul (bad) out ljmp adc xor leave dec dec cmc push lods stos inc repz dec dec cmp inc lods in sbb add enter divl push fcomp mov mov jg jle scas and mov scas arpl mov mov adc es mov cltd mov iret enter add dec sbb aad bswap pop cs jns or je inc out mov sub inc xchg in sarl mov dec arpl pushf sti xor imul idiv xor xor stos adc ficom das or push rcll or mov mov inc cmp (bad) cmp inc pushf leave pop sbb pushf aaa shlb loopne dec dec ss cmp push sbb inc subl ja,pn sbb addl fucom scas loop mov stos cmpsl (bad) scas jae jl xlat adc cmp xchg jno inc inc scas out mov mov mov cs ftst int3 adc mov and mov jb dec add sub adc and int sbb stos or js hlt sbb adc cs cmpsb mov xchg sbb arpl out enter repz jae fstpl ret ja add into popf jnp cld jg add mov add mov insl mov add orl xchg int sub jmp jo ljmp (bad) pushf mov mov sub rcr mov jns pop lahf xlat mov xor hlt dec xor ljmp cwtl enter adc jle jmp sbb fdiv jp and lods mov imul pop pusha inc xor imul add bound inc dec pop and stos xchg adc mov into imulb jne (bad) sarb aas jge jge add stos cmp push shrb and xor xor adc push int jnp or lcall cli lahf je lock int ficom push cmpsb push loope in mov mov nop xor test and pop jp cmpsl loop test (bad) lret pushf push out dec enter mov xchg stos stos push lret sub in popa xor and and and scas pop xor push sub xchg add mov imul das push mov mov fldenv sub stos xchg lcall stos outsb add mov or inc sti and inc cli push mov movsb aaa ss ret jp (bad) leave loop jecxz cltd adc jns add push imul jnp mov xchg clc mov add sbb mov jns add es sbb jg and cmp lcall inc jmp pop inc aam dec ret and jecxz test es mov xor mov shrl jno pop adc out xchg xchg out cmp cltd and add stos insl push pusha push orl nop sti mov mov rorl loopne iret mov roll inc int data16 aas adc mov divb mov mov imul xchg inc inc int3 mov and cld test sub aam rcr stos test pop push push aad adc xchg std inc push ds call dec stos adc pop fcomps gs xchg clc sbb xchg aaa or sub mov insl insl jmp pop push sbb mov imul or pushf mov xchg jge,pn sub enter sbb push sbb das loope cld push lods lret in pop cmc pop xor mov and mov fs cltd jns daa (bad) (bad) cmp cmc inc out rorl sub push stos mov nop fcoms dec inc into adc popf aam inc ljmpw int sbb test lret mov movsb out movd test pusha and lods or mov pop aas push sbb jno loopne pushf test push jl (bad) mov mov cli inc les je mov shrl into popa pushf popf jae mov inc repnz cmpsb call mov sbb or and (bad) (bad) bound mov pop aas push lods hlt pop cmc pop out adc repz (bad) jbe popa fisttp or test scas cmpxchg (bad) push jo lea (bad) mov fwait and add fsubrp popa popa pop inc add test cmp int pop cld sbb mov adc mov scas xchg fwait loop int ja mov repz dec mov fisubrl les addr16 or outsb push and ret mov faddl lods or (bad) push adc daa (bad) lds or aam dec sub ret pop adc xor mov or jbe fwait enter stos sahf sbb sbb jmp leave cmp jns bound or jmp sub jo add int and adc sbb sbb movups in jp std movsb mov mov rolb ret (bad) and cld out jecxz pop test (bad) mov mov sbbl shrl push in movsl dec popa dec sbb mov cmpsl xor mov sbb jle mov test push dec and cmc xor mov iret fwait dec jno aaa idivb cmpsb sahf lock jno mov adc aad in inc or dec loop push je movsl fistpll cmpsl lret push repz jae lea cmc cmp push inc std and (bad) inc cmp mov test jecxz ss mov divb pop pop ja scas movsb cmp mov shlb (bad) fmull mov in or cmpsl outsl std std insl out pusha or pop fcomi fsubr call push mov in add aas (bad) mov mov cmp sbb ret divl fldcw xchg inc mov add mov rorb pop sbb mov xchg gs lret movsb aad adc in and sub lcall cltd push pop mov sub std fistp cmp dec dec adc xor and test (bad) and push push sbb pop clc mov sbb popa out imul nop fs adc pop pop leave leave adc xor popa jo add cmp pop addr16 mov mov add adc jnp repnz gs xor add (bad) mov hlt jb push xor cmp cmp es push jge sbb jnp dec xor push int3 mov dec or mov xor jecxz test es mov nop push and movaps push or dec loop sub lret pushf push jmp cltd adc mov pop fistpl imul push mov pop rcrb pop cltd and add xor dec lds lods jbe mov dec sub mov out or jae push pop ja xchg incb sbb push fadds push mov rcrl mov push imul inc jo push jle cwtl lea sub repnz cmpsb sbb push xchg js jns lea call daa iret out pushf sub adcl or jnp xor pusha stc mov icebp aaa mov fcompl insb popf ret and mov sbb mov mov mov int mov jo jb pop lahf in push lds xor lret adc bound dec jmp mov jae mov mov xor stos int cmp xorb pop test test rorb jge pop sub sbb cmp dec fwait pop or inc iret call jnp,pt mov and das or inc ret mov inc call and add ret arpl bound sub cs sbb dec ss lds sub jmp mov lret sahf outsl xchg push pop xchg imul jno xchg scas jo or xor test cmp cmp (bad) dec nop test arpl pop out mov pop aad cmpl ja repnz cmp pop test sahf addr16 fs or mov js repz mov dec icebp dec sbb rorb repnz add sbb and jp push inc or dec inc leave (bad) and sbb xlat cld mov push and test das xchg jb push ljmp xchg jns mov and aad fwait pop sub roll add pusha div test mov out (bad) scas inc cmc ljmp ja cmpsl stc les (bad) ss pop push data16 cmp jo inc (bad) pop ljmp sub sub (bad) xchg js cmp xchg pop mov add out shrl cmpsb cli xor xchg lods lahf lahf add dec add push inc cmp jns retw lea mov push shrb add leave push xor sbbl mov test adc lods push leave xchg sub lods dec inc xor bound mov mov hlt out cltd jno sbb mov adc adc lcall jmp ret pop je imulb shrl push mov dec (bad) call mov mov sbbl in add inc or mov pusha movl or pusha sub nop push data16 addr16 mov dec stos imul push push mov out les mov mov lods xchg enter sub daa imul mov add mov js cmp (bad) dec jo and mov jbe jl iret push cmp dec aas dec mov das int orl jge cmc push outsb xor es out outsl call lret xor sbb mov in sbb repz rcll jnp dec cmp mov lcall cli pop push cmp (bad) icebp int jne outsl push bswap xor add inc cld push adc iret les ds adc mov jne mov sub int3 sub xor xchg push or pop (bad) mov in in xchg dec push add iret inc lret and push pop pop outsl mov shrb inc (bad) outsl jmp mov imul add sbb xchg jl sub arpl cli inc push stos (bad) nopl iret aam pusha lock (bad) loope push insb movl mov push ret mov dec aas bound xchg (bad) insl mov and mov sub push sub jns mull lret fmul clc leave xor add jno adc jns imul movl lea sbb outsl sbb jne std out mov pop xchg insb inc lahf mov pop mov jl or jbe outsl pushf lret dec mov scas das (bad) sarb sub arpl (bad) cmpsl push fild push icebp xchg loopne testb or pusha ja in ja xchg fwait imul fnstcw cmp mov add sub sbb scas cmp mov call iret sub adc outsb fbld out mov pusha js mov inc addl and punpckhbw and xor or testb lock xchg jne stos adc add adc scas inc xor dec adc sahf sahf mov push push in pop mov notb sbb mov add movsl push and or out push adc rcll jnp pop lahf in sbb lret push sub jo adc stos fisttpl mov (bad) das xchg mov or pushf bound xor pop fdiv aad mov and int3 and movsb cli jo jnp sub (bad) incb jmp pop cmc xchg pop mov mov xchg lds fnstenv and imul mov imul frstor dec insl test sbb push xchg xchg int3 sub lahf popf es and xlat dec sub out xchg fcompp mov (bad) mov dec (bad) ret push jp or test mov in in (bad) std inc (bad) js or dec sahf inc mov xchg mov fcoms push stos xor cmp arpl mov fs xchg aad gs xor fisub stc cmp jp int xor ret mov popf iret into jns js mov mov xchg sub push (bad) jmp fwait call addr16 push cmp fwait inc jecxz adc mov fimul mov mov pop push hlt icebp add rorl mov push test xor jl jmp mov jno dec notb mov or stos fcom inc fsts sbb mov xchg jg mov loope add inc push mov nopl iret aam pusha lock (bad) roll pop call push adc mov cmpsl mov aas bound xchg loop add mov sub push xor mull lret fsubl (bad) out adcb lcall leave mov insb jecxz add inc mov pop lods ficoml cwtl sub push aam cmpsl jl pop jl push push or pop pop xchg lahf sbb mov sub sub and popa fsubl xchg mov lret pusha adc jle loope jae and out int3 cmp mov mov xchg adc cltd into xor lret cwtl mov jg aad dec jns push out in jnp data16 les jmp add jmp push ss cli add add mov inc inc not cmovae xchg or retw cmp push js fstpt push xchg stos dec nop ja fnstcw mov inc mov jae add lahf aad test pop lret jne in jno out push cltd or jae insb push pop movsl imul pop add pop mov xlat jmp out int3 ret mov push (bad) cmpsl mov xor dec mov mov imul pop fdivrl push or shrl popf pop (bad) or out push icebp insl data16 outsl add xchg out lods or cli andb mov jo mov mov std inc arpl mov fwait adc ret lea rol or jb fwait add aas out gs idivl add sahf imul or lcall cli orb mov (bad) je xor add rorb push fldenv inc inc inc mov lds dec jbe or mov mov ret xlat cmp push xchg jecxz ret pop out scas pop push idivb cmp xlat xchg or sahf mov cmp mov into rcll js sti jge mov popa cmp test daa into ja fwait call addr16 decb mov jbe sbb movsl daa pop popf lret faddl add mov or mov (bad) pop mov in ficoml in mov bound push xchg push hlt mov add dec sbb xchg sbb cmp jge xlat cmc jl aam sub pop cmp das call fcompl jge mov cmpsb pop insb (bad) ds cmpsl mov sarl xchg jae dec push sarb jecxz loopne add popf in adc shll cmc sub (bad) dec aaa mov rorl add (bad) push insl sahf push cli mov in lcall mov jo pop shll pop mov mov pop add sub sub aam fisttp clc out inc inc lahf (bad) lods repz pop jmp sub inc lods pushf sub pop jo jl sub and insb push push pop mov cmp dec scas mov pop (bad) icebp mov repz pop lahf cltd mov cmp leave jecxz adc insb ljmp sbb (bad) bound je xchg add and js pop (bad) pusha pop pop mov jp or movsl pop sub pusha lock or (bad) lds je or negb mov mov sbb or xchg jl xor xor test inc adc pop pop dec lahf dec cmp pop int3 cmc sub orb pop fs pop lock popa out cltd cmp xlat cs movsl pop clc adc stc bound daa insb aad and test pop ficom je jmp sarl pop inc cmp aas push mov mov sbbl in adc cli sbb cmpsl popa mov fs je loope sbb fidivl cmp (bad) push pop jno stos mov mov stos adc js fdivs je out int3 jnp and push clc push (bad) lods xchg enter sub das xchg pop mov sbb add mov js cmp (bad) dec jo and mov jbe jl iret push xor ja cmpl mov xlat xor call rcll sub mov arpl adc loopne in popa pop pop mov test inc lcall add cmpsl mov mov call addb int aam icebp dec mov fbstp fwait call in mov gs ret dec mov xchg cli movb movsl repnz inc sbb xor fwait xchg dec fisubl xchg jl and divl cli pushf mov ja push popa adc shl cmc outsl in xchg das imul sbb inc mov sbb dec and sbb cmp sbb addb cmpsb cmp enter lahf jb mul insl xlat mov sub push cltd cmp lret sbb jmp xchg sub call icebp aaa in xchg jb roll push addr16 cmpsl cli jb ja fidiv cmp leave mov xlat xlat popa mov out out xlat outsb xchg insb jne scas jbe mov (bad) mov mov sub fcompl push imul int3 fdivrl pop int js xchg sub test pop push out push xchg jne fistpll cwtl inc xchg adc loopne out lods icebp inc mov pop shrl mov pop jecxz sbb (bad) xor sbb cmp (bad) cld int jb mov dec and pusha sbb xchg je ss enter add imul bnd ret cmpb push movzbl je xor add rorb push fldenv dec inc inc mov in ret cltd dec jbe or mov mov ret xlat cmp push xchg jecxz ret pop (bad) outsl scas pop ja mov cmp xlat and clc adc pop xlat out ss (bad) test pop jge adc xchg rorb mov daa push iret pop outsb and xor shl and cli xor sub addl out push jp or jnp jmp mov int cmpsb inc iret (bad) jg mov mull inc push mov (bad) inc aam dec and imul dec mov sub sub dec jmp mov fwait jb loop pushf sub sbb and nop sbb test dec inc leave insb mov or add add fisubrl jo jg xor (bad) cltd and jne inc ss push mov aad adc movsb (bad) mov gs xor jo mov push pop clc or mov fyl2xp1 pop or dec and inc aaa push loopne mov test mov ret and xchg ret push xchg push cmc (bad) mov sbb inc mov loope mov add rorb xor cmp mov or cmp xor cmp add mov cltd jnp popa ss fild (bad) rol cwtl test jg imul fwait add lea push sub and sbb test inc out imul or popf and shlb (bad) (bad) out or push aam sti sbb bound scas ficoml sub pop fs or mov xchg ja adc popa push sub or push in mov in or jp push idivl mov inc fcmovnbe adc jg lret xor xchg pop (bad) lock fsubs (bad) shlb scas mov mov sbb sub call insl and cli add and sbb into jae pop mov mov fdivs cli aas enter pop cmpsl cltd cltd jmp jo sub and pop insb xchg aas fdivrs mov fsubrl dec adc packssdw cwtl (bad) adc es add push xlat dec sub out xchg fcompp mov (bad) mov dec (bad) fdivrs icebp push pusha movsb or test mov in in (bad) std inc (bad) jle or dec sahf inc mov xchg mov fcoms cmpsl xchg inc xor lret in popf jmp loopw scas mov bound push cmp cli lods sbb jne std add gs cs out xor fisubr jl or jbe outsl mov mov (bad) mov inc pop mov (bad) xor fcomps (bad) mov mov push test jl or pusha adc xchg imul mov sarl pop lret movsb jmp add data16 (bad) cmc mov bound scas (bad) inc mov xchg data16 mov leave and scas outsb sbb pusha push xchg out shrl mov jno add mov jnp dec and push bound mov jns jl icebp rcl push jmp jne stos jb lock mov add test cmp dec push jb sahf outsb xor loop in or test inc push mov out push das ret movsl pusha and or gs mov inc js lds les repnz dec mov mov (bad) sbb push jge inc jmp add incl lcall jle ja sbb (bad) jns ret mov (bad) fmul addr16 stc push mov int3 in (bad) xchg push outsl aaa inc ficoml lcall pop mov sbb andb dec fbld mov xlat or shrb in das jmp mov jne xchg pop mov sub mov in jo inc lret incl xchg xchg xchg fistpll rcr popf bound call sti fldt loopne add fwait adc xor sbb mov sub push xor mull lret fsubl add fwait xchg daa sarb aaa dec test sbb sahf leave mov insb clc adc cmp (bad) rclb xlat pop in push and lret fstps fs dec inc shrb xor enter cli mov push adc pop mov out and sub (bad) xor lock pop and mov (bad) rorb jecxz add pop jecxz out jne add pop fcmovnb mov sub dec stos mov lock stc (bad) lods mov xor fsubrl and (bad) ja push push orl mov clc jbe add add sbb sarb jb push or pop (bad) dec or mov repnz iret mov dec loope orl pop pop sarl movsl rcrb fstl and (bad) scas xchg jnp loopne cli mov stos add scas and sub stos ljmp cltd arpl (bad) xchg sub add jns sub insl jp dec push xchg ljmp mov in out pop jnp out sub sahf sahf cmp dec dec pop xchg sbb aad pushf lret xchg mov fs or enter xor xchg push push data16 test mov ficom mov test push jb adc cli nop cmp jl mov sti mov in repz jae push mov add repnz sti cld mov mov cmp and in aam adc cmp xor xlat push mov out mov push add mul or inc xchg cs pop rorb jle fst call mov fs (bad) pusha add xlat add rorl mov inc sarb outsb setbe adc fwait or or dec push xchg sub test jecxz lds loope movl cld dec push (bad) push xchg movsb into xor data16 pop sub and pop loop (bad) enter insb jp out jo aad xchg (bad) and mov add in test mov (bad) loop repnz sub xlat mov pop pop les dec xchg movsl lret adc das add aam sub jne repz inc jle outsl lcall mov push shl (bad) iret add fstl test js or cs xor loop mov dec repz out (bad) lds mov clc jge xor cld jns ja mov std sbb in bound dec inc sbbl sub jo gs push xor mov mov sbb push and pop jge (bad) out xchg sbb fldl2e sbb (bad) jno push push and into setno rorb aas pop jg,pt and in ljmp jno lea mov fs mov lret (bad) cli pop or add sub outsl and ret dec notl jbe fildl cmpsb enter jno jns dec xor cmp jge push lahf jmp loope js out inc xor (bad) cmpsl cmc lahf lock xchg lahf scas adc jle cmp int3 jo jb sub shrb push lret or jns,pt jg in push pop dec lods imul add inc mov mov call add out cs fstpl pop es (bad) cmp pop call cmp sbb clc lret imul sub lahf loop shrb test mov push sub addr16 pop and pop add xchg cmp dec stos enter push xor icebp repnz push and fstps popf (bad) test rorl sbb mov xchg cmp mov cld jl xor jbe rorb mov stos xor cwtl divl pop (bad) mov data16 pop adc mov dec xchg sub mov mov cmc (bad) jne sub stos jmp fwait repnz imul xor jns mov mov pop cmp adc rcl jo sarl shlb inc inc adc xor orb push inc movsl cmp mov jbe sub shll or repnz push bound cli stos or pop fsubrp nop int stos sub (bad) fisubr cmp inc (bad) ret jns (bad) dec and (bad) mov push (bad) je fsubl js rolb dec dec loop sbb mov push cmc (bad) cmp sbb movsb frstor loop arpl addr16 (bad) (bad) or imul (bad) mov adc stos stos cmpsl dec dec mov adc pop sbbl cmp xchg sbb (bad) mov es fsubrl loope pop cmp lods pop sbb hlt ret pop mov rcl cli clc mov adc sub insl mov aaa mov ja jmp pop movsl push aam jle fwait cmp call jnp test xchg mov mov inc inc std sbb cli cli divb adc (bad) mov push cmc inc add mov fcomps pop and pop mov pop push lahf ret popf sub cltd aam push pop (bad) jb jmp lds jmp rclb jg xor scas scas ficom pop jo lock cmp cmp push icebp out sbb or aam fwait fwait add mov mov mov pop in xor pushf and sub xchg ds mov xor add fsubl push cmp lret call pusha pusha or (bad) dec cmp subl mov in adc or add mov enter or push incl test sub jmp leave pop sub leave mov xor (bad) mov dec adc (bad) pop pop xor ja scas lret cli xchg lds dec xor aam test xchg cmc xchg mov fwait movb sub sub sbb fiaddl outsb adc ja movsb in ljmp mov cmpsl or xchg outsb outsb or pusha pusha sub mov sbb pop imul rclb pop fsubl repnz in outsb test insb insb jmp xor popf xchg pop leave leave dec dec mov stos cwtl cwtl or enter xchg outsl sub push rol pop or jmp pop sarb cmp (bad) or jmp sub out fidivl mov es fwait and mov pop fyl2xp1 sbb test into jae mov add out pushf aam adc ja fisttpll dec jo jno loop repz in andl insb push test pop and out dec cmp xchg xchg popa inc push stc xchg push lahf (bad) subb popf xchg jmp mov mov xor pop cmp bnd xchg loope push mov (bad) mov test inc int (bad) dec inc inc inc adc out outsl aam push push js (bad) repz dec ja jo test jp push cmc (bad) sbb imul sub (bad) repnz call adc mov inc arpl xchg scas cltd out sti sti dec shlb in addr16 iret pushf mov (bad) jbe or (bad) add pop shll jno cmp push insl insl loop and pop push jmp cld mov add (bad) ljmp scas pop mov aas push xchg xor sbb add ja scas xor mov inc inc adc jae test and inc mov cld mov (bad) lret cld mov jmp sahf or mov pop inc xor pop pop sub pop ds movsl sub add cli dec gs popa cmpsb dec mov add add cmp imull leave fsts sar fiaddl (bad) clc aaa mov scas xor add insb sbb or out and mov std daa sbb jecxz add iret mov addr16 mov pop aas rcrl adc mov mov sbb adc and cwtl mov fisubrl sarb jno sub pop gs xchg stc fcomps dec fs jb enter aam dec dec popa shrb test mov mov inc je xor dec loop sbb inc fucom lods cmp std iret aad sbb jmp push cld mov push push push adc xlat jge push mov test xchg aas xchg fistl sub cmpsb push sub clc ja sbb movb fstl pop imul pop dec adcl test mov dec adc inc sub inc push and jae cmp je jno sbb mov xor cltd cmpsl movsl jae dec ror cmpsb test sarb insb rcll jge push repz jecxz sub subl push push lods lahf lahf (bad) lea repz mov add and mov sbb aam and mov int3 xchg push and fisubr inc xchg enter orb arpl inc sbb shrb aas mov movsl inc add inc mov les inc outsb cwtl in or mov mov dec into dec clc sub in mov jp iret sahf xor decl mov test pop adc add iret xchg cvtps2pi insb loope push fidivl inc hlt mov jo out das jp sub in les push rolb push xchg sub addl xchg cli pop imul or sub stos push rcl lds mov cltd cltd sbb sub ret sub push ja (bad) shr lcall daa les icebp (bad) scas sbb and inc sbb lods repz bound xchg sub sbb fisttpl addr16 jp aam icebp (bad) mov xor and ja pop jae push stc iret add push sahf into ja fist adc jne outsb (bad) lds mov gs repz xchg ret sub or stc js pop xor pushf xchg dec mov cltd int3 fcomi jl xchg sub xchg or and jnp or sub dec mov std lcall ret test sbb nop lea popa test cltd fwait cmp push dec sarl (bad) push or jle mov inc pushf and outsl je or inc push loopne fwait or fisubr imul xor jmp jnp imul fidiv je sub fsubrs pop test out add mov pop mov mov fwait inc sbb dec enter jae es xor mov jne or xchg mov rolb movsl dec mov (bad) push call and cli mov inc sbb out and mov repnz push arpl lcall xor sbb pop pop lea push xlat cmp sub out cmp outsb incl lret rcll sub fwait icebp icebp sbb pop imul mov xor enter add in mov shlb loope sahf mov loopne repz shr xchg pop popf scas xchg loop (bad) les or add jo adc push and mov daa push es xchg cmp cmp adc add jbe fiaddl lock into aas xchg repnz stos jns,pt xor ljmpw sub jp sub fisub add xchg pop aam out cli insb push push mov jl add inc pusha shld movntq add (bad) pop ljmp push mov xlat dec lock jbe int3 inc lods jmp mov mov inc ss dec fsub dec loop scas (bad) fxch movsb sarl into push aas (bad) int3 dec loop push push push (bad) je dec sub cmpsl and out inc repnz sbb push push xchg mov jg mov insb aas ja,pn es jmp sahf adc call push repnz add in rolb sbb les push sbb loopne add lcall arpl les jo xor inc out adc push adc test dec cmp push push cli cli notb clc add jmp outsb push lcall ja and add sbbl sub cwtl stos cmpsb (bad) jne out push mov jne mov mov out mov frstor push cmc movsl insl sbb (bad) jae push out push or (bad) lods adc sub subl pop adc add ss sbb dec xchg or pop (bad) xchg cmpsb bound pop test repnz push dec xor pop fs notl push and xchg clc xor pusha insl inc out out inc jnp fwait add ss shll pop jbe test ljmp stos xor lcall xchg inc (bad) lahf cmp or das push fneni(8087 mov dec mov lret sub (bad) dec jecxz jecxz pop mov and xchg das push repnz or popa xor sbbl fistl cmpsl jae jnp rorl sti or (bad) int3 sub mov cmpsl mov xchg mov mov push jp dec xchg or mov jl xor sbb loopne cmp jbe mulb stos adc sub (bad) sub xchg sub inc add lea dec sti fs adc mov loope inc scas xor mov loopne sbb or ja cmc mov push jle sti (bad) lret ret movsb rorb aam pop jo,pt and or mov repnz mov movsb jecxz stos push push adc adc test xlat pop insb jno nop push ss xchg movl sub dec enter cs mov rorl iret xchg xor dec movsb and incl jmp stos jg push mov inc dec das mov imul out push mov roll add movsb inc inc mov lret lret dec cli (bad) push add aad cltd adc mov imul lret popf jmp cmp (bad) fmul xor mov fldt pop std add jg lcall inc sbb cmp pop (bad) ret push dec paddw sbb outsl outsl das sbb jmp jno movsl lea stc addl and int3 dec pop sahf mov or loopne adc add xor jl repnz xor cmc into push jo adc cmp adc in xor dec pop stos or mov ja lcall test icebp sub addr16 pusha and pop lahf xlat mov xor daa add cmp stc ds ss push cmc lahf xchg fisttpll cld mov and add stos sub xchg and adc mov or pop data16 je aas jmp push push in in ljmp ret pop pop lahf popf movsb enter jns cld mul jge jmp mov fcoml cmp in std mov mov jb repz push js dec dec jl lahf outsl mov jb (bad) out inc inc adc sub es and or inc dec sub adc aad movsb ret fs sub cmp pop shr xchg pusha in add out push (bad) mov xlat jno arpl repnz arpl push popa enter rcr (bad) std mov dec dec mov sub shrb add scas negb sbb rcr mov xchg iret sbb and xchg subl jl cli int sarl (bad) cli push fistpll sbb rclb cwtl sbbl cmp call jnp mov jge jl sub inc mov dec xor cmp mov push lods cld pop insb add mov popl mov mov movsb subb int into lods popa js in pop mov or add popl subb sbb rcll push and lahf lret pushf pop pop jmp in sbb add insb movsl inc lret and fimul (bad) mov hlt cmovs iret inc rcr cli pushf popf pop hlt ds push mov mov inc aaa xor int3 or sbb aam dec dec push inc rcl mov inc int3 (bad) aaa and int3 jns (bad) into pop push insb mov cmp (bad) pop dec mov hlt pop test mov mov xlat sbb pop sbb outsl mov (bad) pop sbb fsubl pop pop dec int3 pop mov xchg xchg xor movsb movsl and pop aad mov mov mov nop movsb fcomp cltd leave bound mov into dec call (bad) adc js lods aam icebp loope inc sub fsubs outsb pop sbb jmp daa jbe into mov clc out inc inc adc cli inc mov (bad) mov xchg push (bad) dec jmp adc push cmpl aad cmp js lret pushf loopne rcl sbb adc cltd cwtl rcl enter pop xlat or mov jbe lods lods mov sahf loopnew inc ljmp fdivs loopne clc out lcall inc hlt jno dec push fs adc cmc repnz dec into int mov inc mov lret sub pop ljmp jae pop pop les cmp mov adc stos mov fistl mov jns jnp mov jle or out pop gs cmp into fldl mov sub or sbb (bad) cmp adc sub mov enter sub inc mov add mov cmp pop cwtl pop jecxz mov inc clc mov and mov int shrl mov jo scas jmp mov mov insl mov sub out stc rorl add xchg jle rorb aas andb adc (bad) pop mov xchg adc inc or inc sbb cltd or sbb adc into popa mov push mov inc mov call (bad) mov or cmp add stos jl,pt xchg mov xor fidivr clc ja fsubrs ret lock pop movsl lcall adc stc stc add add mov mov inc hlt out mov (bad) mov mov and xor sbb mov pop (bad) negb aam jbe std and pop pop mov addr16 std loop and mov dec adc rorb mov sti sbb jbe pop mov mov (bad) jae inc pop pop mov pop push mov adc into or gs push ret add inc aas jnp (bad) pop stos and pop push jae dec neg outsl dec dec mov xchg fbstp adc imul stc sahf test test sbb or xchg clc bnd cmpsl push and cltd fbstp sub ret mov in or mov lea ficom fmull xor mov add push outsl in es xchg push lods or (bad) mov stos add sub and sbb pop fdivl fadds in pop jmp sub fistpll sub jno fs cltd jns movb cmp jo iret dec mov addb ljmp fcomp mov nop fcmovbe sub movsb or std std add xor rol inc repnz xor scas scas fimul or aas cmp test xchg stos icebp mov push mov je jp jbe lret int into lds aas int3 dec dec mov push mov fistl mov pop les adc int3 jno,pt dec pop jl mov jmp es je pushl aas fnstenv cmp and sbb pop (bad) mov mov cmp add fdivrl ss or push xchg data16 inc in call ljmp movsl and call arpl dec push cmp dec (bad) cmc mov adc push out out and push movsl insl add lock fcomp call push aas fldenv sub fistpll out outsb rol mov popf ds das shrb fisub push jle jne mov mov push jnp icebp sbb outsb mov insb insb fs outsl sbb add dec cmp inc or inc cltd je dec sbb test sbb inc (bad) mov popa adc xchg shl pop xchg dec jmp out sub adc pop mov std inc jle cli xor cmp adcl mov popaw mov adc jns pop pop lds add sbb mov inc lret jbe mov or dec or mov sbb rcrl cmpsb es (bad) dec fwait sahf push pop pushf call shlb lock (bad) mov fcoms lods adc dec fiadd aas lcall jne (bad) addr16 dec xchg stos sbb xor out xchg and add outsb in mov into push xor fstpl aaa sub popa or lds out push fcmovu movsl sub jbe or les dec jno inc xor pop sub outsl cmp and lods cmp repz pop inc pop pop nop cmpsl pop outsb int test xlat sub inc sbb repz movlps or scas nop nop pop pop xchg xchg jmp add mov fmull mov add sub xor test dec inc fsubrs sub jo inc (bad) out adc test dec mov or xchg adc (bad) je out sub lds jnp loope and loop cmp arpl cmp and out cmpsl cmp repnz mov cmp mov mov push adc cmp or push push daa pop into add pop dec mov ljmp test out jl mov inc les pop jnp add je mov xor xlat jmp popa mov mov xchg cs mov adc mov jmp stos mov pushl outsl push ret idivb repnz inc and jnp dec repz std aaa mov (bad) add rcrb mov dec (bad) (bad) jge or push xchg jno mov lea dec dec or rcll pop bnd inc xor mov lahf push bound xchg mov xchg mov addr16 fcoms (bad) (bad) int3 adc add xor in ret ret or aaa (bad) int and add mov mov xchg push das inc push push sub ret jbe mov iret push fwait std jno xor dec insb insb out cwtl addl fwait cmp add inc mov je mov rclb in add stos mov mov push fucomp fstl ja bnd pop fstpl jmp jg scas jns adc jmp push test push dec push arpl lock push jecxz xor addr16 add jbe aam adc cmp xor int mov pop sub jns sahf xor inc xor dec dec xor cltd loop nop test fist xorl pop bound movsl push (bad) lcall sbb mov sbb or stc pop jnp jno fimull mov ds sarl div or inc push sarb jge rcpps or add cmpsb in inc dec or cmp das lods ja pop xchg rcr mov addl fisttp push push push addr16 mov pop out and mov sbb cmp push xor pop leave (bad) movsb push arpl sti aas push out in popa jno mov dec pusha stc adcl jae hlt daa pop add lret jae and jecxz jo dec std (bad) xor fwait outsl das inc sub push push dec add push (bad) negb test sub jecxz jg mov out fs pop sub cmp push and add loopne fdivrl adc pop popf adc dec test inc push or cmpsl push outsl (bad) ret or add data16 ret sbb daa pop xor mov popa lahf cwtl push inc inc pop mov inc aaa sub mov sbb push push push pop mov jp fistpll sbb out inc lea mov adc mov add and inc cmpsb mov stos adc sbb mov mov popf jne iret jnp dec (bad) mov adc or les pop fs sub mov jno add add xchg in test iret aaa aaa addb stc stc call insb xchg add and jg sti stos in es pop sti inc inc enter fnstenv notb outsl adc es dec cmpb jmp popf ret ljmp js push fcomip push ret sub jno popa adc out mov lods jae mov aaa mov cmp in pop lahf nop (bad) (bad) jb mov or pusha sub mov sbb and mov cmc cmc lock out sti xor fild sbb xchg insb or sub or and jo mov and xchg lods pop dec sbb addr16 add pop rcl jnp or xor into stos mov push aam mov out cmp cli push shrb movsl sahf jp jno xchg repnz cmp jmp movsb rorb aam lds divb mov mov jno jg (bad) push pop rcrl push test mov push popa test or pop push mov inc or daa push (bad) fwait or pop in mov push out mov test or inc icebp jae andl push jne mov (bad) es push xchg jnp sub daa dec leave pop (bad) pop pop lods and cwtl loopne adc lret push arpl jae push pushf fnstsw push xor test test adc (bad) cmp fucom mov push fidivr or push sti in push mov das sbb xchg pop pop in lods adc sub in popa mov rcr js and push adc push cltd out sub cli ret mov std insl out adc pop loopne ret fdivs pop pop push mov push pop or mov mov push lret or cmp inc in sarb clc jl out int3 xchg lds jno cmc dec push jno fcom stos out dec or xchg mov hlt or push hlt mov ljmp stos fcomp movsb arpl ret pop pop cmp xchg push and xchg jmp stos loope pop inc inc out cmp push cmc pop push nop xor addb int3 (bad) outsl lss sbb test push and inc dec jp pop xor mov push push in js push mov out adc add rcll mov nop jmp or xlat jge add call jle cmp mov push cs je mov jns repz daa mov icebp lea imul das pop pop inc xor pop arpl (bad) inc mov push div cli lea mov lock and xchg out add test pushf je or push std (bad) stos sahf cltd xor (bad) (bad) out inc rol out and sub sub add lds sbb xor mov mov rcl sub in shrl jbe mov out sub push push sbb xor ds dec inc cmpsl ret ss lea dec ja xchg lret xor dec outsb or or out push fimull aas xor push leave pop dec add lea imull push gs xchg jmp fistpll xchg and or mov jmp call das xchg mov add lahf lahf jp mov adc add mov jns call jbe mov xlat (bad) (bad) pop in add mov jg jno out xlat mov orl lcall xor cmp cli cmp dec lea pop xchg adc add or mov mov inc sbb adc loope jbe rorl cmp clc sbb xor movl pop pop mov add cmp cmp jae push cmp xor cs cmp (bad) je inc sbb hlt pop out cs push xchg pusha adc sub (bad) icebp cmpsb negl ds mov out jnp in xchg notl (bad) fnstenvs icebp add pop dec lret adc add repz xlat fidivl imul inc je mov outsl outsl add push push mov into inc mov push mov mov add inc test les sbb sahf (bad) aam jmp sub ret cmp cmp mov mov out xor mov daa idivb mov mov fcomp mov cmp xchg pop sub mov cmpsb pop sub (bad) mov add cmp lock insl mov lods out lret push ds inc mov cmc test (bad) (bad) jae clc xchg sbb add in jno xor lcall xor pusha pop and imul adc and dec sbb in adc xchg add add mov rcr dec popf mov lock aas mov adc imul xchg pop cmp sub fwait lock test push pusha (bad) mov (bad) mov std outsb mov mov pop pop je pushf aam adc scas popa mov shlb imul push popf out (bad) push jmp or roll mov push pushf ljmp pop bound xchg jle lea pop adc inc js and mov lahf loop mov andl out pop pop adc cmp lds or add jns subl flds fiaddl rol xchg fldenv or cli outsb (bad) (bad) mov xlat jbe mov dec mov hlt xchg in mov pop inc jl mov add js dec mov insb in xor mov (bad) mov fild cmpsb sarb xlat lock icebp and sti jp popf mov jo dec xor loop bound (bad) jno,pn push nop or cmp mulps outsl lods jbe fs inc aaa xor ret pop movsb jmp (bad) mov hlt jecxz sbb ret mov jp mov mov (bad) sub (bad) clts xchg and lds jmp arpl fdivrl pop in xchg xor sub cmovle push jne,pt dec sub iret push mov or dec add mov data16 ss mov iret inc lahf sbb pop ds ss dec cmp push mov icebp xchg mov (bad) dec ja,pt lea out mul loope lods lret aad pop scas inc ret sub div cmp xorb lret sbb xchg in inc stos aas jbe adc sub push fcmovbe mov int (bad) xor je fcompl pop cmc jne dec movsb push addr16 fstpt jns xchg lret mov mov aad test sti inc xchg jb inc outsl mov adc sbb dec dec add call ret push jbe insl fcomp mov sbb jno jge push fwait rclb ret jl jg int jae push aad add sub out repz lret dec arpl lcall cwtl jb punpckhbw pop rcl sbb push xor int3 inc push mov xor xlat push push sub into add mov mov lods sbb out mov sub sarb jo,pt std inc mov fisubr add pop imul mov insl and fdivp jge sub jo fstl xor sub pop and inc dec mov movups and pop icebp jle leave les into cmp sub imul mov (bad) jns mov ds mov mov roll cmpsl hlt xor pop adc in (bad) mov jnp subl and adc pop xor je cmp ret mov cmp leave and cmp lea add mov mov fwait (bad) daa pop jo cld cmpl fwait icebp out icebp sbb xchg loop pusha test icebp fwait out mov mov pop xor std ss mov movsl imul mov in dec pop adc cmp jnp repnz shlb adc sub cld mov fs scas add mov sbb cmp std fcompl int3 add add ret sub mov push fsubl cld fwait pushf jmp mov clc lahf push push xchg mov or inc rcrl movsl cmp cmp pop bound mov xchg mov ret inc xchg js and dec lds lea inc mov insb fisub shll jnp repz (bad) dec lahf and (bad) lcall inc push push add pop push imulb int push push fldenv push lret int3 jp daa add xor imulb push stos fs xchg cld (bad) aas test in pop jecxz (bad) repnz add rcl es pop cmp add add dec xchg inc cli xor or fcmovu pop sbb loopne in in int3 mov cmp stos test ljmp ljmp lea repz xlat sub jecxz (bad) cmp pop xchg sbb outsb sbb fisub xchg cld xchg les std bound lock sbb mov out lret es sub cmpl inc inc mov pusha cmp jnp and sub xchg out stos sub mov push add inc fnstcw (bad) fldcw or jae push jmp imul dec ds shrb mov and or pushw insb sbb xchg push in addr16 sbb jnp mov dec repnz rcr test adc jl es (bad) idivb sub inc aam cs fcmovu mov jp mov xchg dec push jl cltd hlt dec out cld jns int3 add rclb sahf sub (bad) and cld mov decb stos mov mov aam ss jo sbb (bad) or pop arpl xlat xor mov fdivs mov loop adc jle sbb mov dec cmp scas sub fildll cmpl loopne out hlt sub inc xchg lods insl jmp mov pop nop bound rorl addr16 pop xor xor imul call push mov arpl mov jo mov or addr16 lret add mov adc pop pop xchg xchg cmp mov das jl insl bound xchg cld push scas ljmp in divl xchg add adc outsl push jnp sbb lcall inc add mov xchg out pop inc inc xlat fldenv pusha aas dec and mov mov int into pop fisttpl pop or loopne sarl nop sub pop inc pop add pop mov add sbb (bad) popa int3 and jl inc fisttpll mov into add fnsave and (bad) dec (bad) pop das mov cmovno pusha int3 int3 mov popl dec (bad) dec or add xor mov xchg xchg push xor or mov pop test adc or in push idivb dec jmp adc jp div mov push lahf test in test aaa and xchg and or mov into mov in xor dec lods add inc insb psubw fmuls cmp out add dec (bad) jle outsl loop sbb scas adc ret test insl sahf int fs mov repz add mov inc or insb (bad) xchg dec sti cwtl in test jecxz gs cs jne sbb lock out jne or jo xchg cmp test or iret mov or shlb mov xchg and cmp fcoml cs das shrb das mov cmp xchg sbb daa (bad) mov mov out in jo jecxz ljmp xor test xchg xchg icebp icebp jae or addb adc mov push clc xor leave leave daa add pushw add dec xchg outsb in adc mov xor xor mov shrb pop rol scas scas clc mov jbe imul cmp mov mov pop sub pusha pusha lock jl jbe push jns enter mov idivb call rcr cwtl inc and add add sbb mov repz mov mov dec inc idivb in cs sbb mov xchg sbb jl or data16 dec xchg stos stos sub sub add ljmp out ret ret pop fidivr and mov adc insl cmp inc ds push out xchg xor jg push and test xchg icebp jp lds mov insb out hlt sub xor sti xor dec add inc pushl mov addr16 clc add lea fisubl insl pop lock jmp jno xchg stos pop ret into gs mov or cmp (bad) push jnp repz inc cli xlat mov aas or pop (bad) (bad) call inc (bad) mov xchg jmp ss mov jno jge push mov lret adc jnp cli or and dec ret ljmp add pop loope and faddl and cs xchg fdivl inc xor add paddsw cmp iret jl iret (bad) loope ja cmp (bad) leave jnp pop pop mov sbb movsl call lret lds mov mov fimull cmp push xlat stos jmp mov add xlat loop hlt lock fs pop cmp pop test ds jbe dec iret (bad) repnz fmull sti sti mov add sbb pop dec lret sbb or imul fidiv fcoml nop sbb adc and push adc jmp aad test rorl pop jp (bad) add xor enter xor sbb cmp and js push div ja inc adc jno jecxz add cmp pushl mov inc (bad) movaps sub pop jb lcall mov aam (bad) fs or jns sub scas out insl mov movsb pshufw ds mov xchg pop jge xchg popf sbb (bad) sbb sahf nop jmp es xor inc sub add lock (bad) lods push xsaves xchg sbb mov fdivl mov movsb insl xor sarb testl add mov test ss sahf lahf sysenter mov jl adc std js inc inc int3 inc fs jmp movsb push aam pop push pop sub mov test xor mov push (bad) andl jmp fnop movsb movsl mov adc cwtl scas xlat cld outsl jmp leave popa pop lcall into adc mov ljmp xor xchg (bad) sbb out xor mov mov inc xor aam push cmp sbb xor scas cs jge push cmc cli or negb xor out sbb hlt mov movsb ja mov pop aaa and adc je iret addr16 xchg sbb mov xor mov je mov sbbl lahf lds cli push and clc (bad) sti add mov fildl bound jnp cld jl adc std enter jo loope push les aam push int fisubl dec inc inc movsl or addl dec shr negb xchg dec dec mov stos pop pop xor leave sub popf pop pop loope sbb imul sbb mov loop xor mov xor mov out mov arpl (bad) je rol sub lahf outsl cmpsb into iret xchg xchg push push cmc xor sbb mov leave add xchg daa daa fidivl rcr mov or adc or or mov es and std cmpsb div orl mov mov je ds or in sti aas aas (bad) mov fstps sub fistpl fwait or test jb or cmpsb fcmovu pop rcrl jo aaa sub (bad) adc push jge out jmp push pop frstor push test js lret cmpsb inc inc mov loope fsubrs sbb in and fxch mov lods push int3 pusha or mov push push outsb or jb imul sub lahf (bad) sti xor popf (bad) int3 lock sbb sbb and dec add ss and aam test jmp mov push and lods daa aad jp lret mov sbb in sbb mov out sub sub inc into mov stos stos or popf mov mov dec adc lods xchg dec xchg stos dec dec jns mov test out sub bound jp xor mov (bad) icebp test (bad) dec aas int3 aad mov stc jmp movsb mov pop xchg cmp int or mov fsts out ss loopne and mov outsl push fnstcw mov xorb jmp jecxz dec fistp pop xchg push stos mov or sub push push ljmp add ds xchg pop xchg pop add push pop pop pop mov mov fadd lods xchg mov jnp sub fbld in xchg mov test arpl pushf adc add add add insb out jl mov sarl add cmp push push push in jecxz cwtl add cltd ret jg sub sbb xor je jg cmpsb aad dec repz cmp mov mov rclb mov jmp lret fcomip dec push lcall psrld cmpsb xchg mov daa pop (bad) out fnstenv mov movl jg pop dec bswap adc lcall aaa mov arpl jmp out dec ljmp sub lret jl mov ret pop and jnp xlat xchg or dec mov ret adc pusha int3 or push or mov cwtl cwtl pusha popf cmpsb dec jns mov pop xor out adc outsl mov idivl sub fcomip jle icebp jae loope pushf outsl (bad) mov push sub stos xor and movsb movsb jg inc inc lret mov or (bad) (bad) nop shll fstps dec icebp cmpsb mov xchg inc add jnp sub jne cmp gs rorb mov mov inc jnp and push enter leave movsb jge dec push ret jge in pushf dec jne lds jno jns ret or fs mov test add cmpsl xchg cli jne rclb mov gs cmpsl imul ret sub aaa scas loop imul aam pushf pushf cmp aam sub and xor pop pop xchg or xor cld imul push stc insl or test fcmovu ss jbe cmc jp fstpt jg xchg xchg cltd push sbb in mov xchg xchg xor and cli rcrb fld dec dec mov add jae push add xor jnp sahf cld (bad) push push fdivl popf aam push pop add idivl jmp sub add push and mov push push lods fdivs add jnp xchg lret std mov aaa sti stc mov insb xchg jg ds fs adc into stos lret or mov test jl mov xchg sbb fistp pop cmc cmp arpl ljmp bound cmp mov mov xchg add aad jno jmp mov xchg fmuls incb sub fisub jnp ss cmpsb inc or mov lods lods arpl inc xor inc sbb and xor sub dec mov xchg mov sbb imul mov cmpsl jle and daa inc pop push add push data16 dec mov gs and xor arpl test jl divb cmc jns cwtl xlat push push jl cli mov push cmc cmp sarb jp sub adc or pop push (bad) jmp (bad) (bad) out xchg adc jecxz lret fcomp or jbe ss loop inc (bad) (bad) sub packuswb rcrl mov int sbb outsb push push xchg mov scas mov fistp (bad) cmc ret inc les mov mov mov or lahf add cmpsb daa sbb jae push mov add jecxz dec or mov stc into cmc push pusha push push dec mov adc sub add aam aad or mov sub pushf adc loop mov leave (bad) push in sbb rcrb out cmp lods and imul mov or mov push popf pop fwait xor jbe dec jle outsl out in and pushf lret add mov aam add sub mov cmp mov jo pop sbb mov es mov inc sbb and popf xor clc (bad) ficompl je jmp mov or xchg mov scas fs stc xor jbe pushf in xchg dec xchg lods pop nop mov fldcw sbb mov cli jecxz sub dec cmp test out cmp cmp cli dec adc xorl jge movsb in out imul mov mov inc mov pop int3 xchg (bad) in pusha cld jae or addr16 xchg (bad) mov adc pop fcmovnbe pop cmp repz cmp jecxz jbe mov cltd pusha pop xchg test add dec jg jle jno ja inc popf sbb or (bad) sti sbbl arpl add push out stc mov fdiv mov xchg and leave subb inc es mov mov pop mov add push lds pop movsl xor mov push pop pop or test inc add jge imul mov and mov dec add and dec adc pop xchg das movzbl push stos data16 mov (bad) or ret movsb xchg outsb (bad) leave fwait ret cmp lahf push ret xchg sbb repz sbb addb in gs jg fstl xchg lret dec sbb ret lcall push fsubs mov cmp mov out sbb cmc xchg ror adc jns push mov mov inc xor push in lods popa mov xor lock xor adc js lahf add daa int3 add xorl or imul iret add scas pusha push test int stos and mov dec dec jmp popa (bad) divb pop mov fiadd jmp es push sub add aam and out jle dec add dec rorb xchg out and sbb shrl cld jbe repnz pop add pop adc mov cmpsb pop mov mov sbb aaa mov hlt fst dec ja adc jle jge sub (bad) sbb mov mov aaa or les xlat cmp les movsl xchg (bad) jno sarl in mov fwait cmp pop jns dec jg loop cmpsb sub aaa cmp inc dec mov xchg out xchg pusha in adc aad xchg pop call push pop test ja lret fmulp imul pushf pop inc int3 repz pop cmp lock pushaw cmp mov lret xchg dec fsub sub cli jp or (bad) mov jl push cmc cmp hlt sti test in sahf adc fsubs ret movsl push xor mov inc sub and and adc mov push lods mov cltd insl sbb xlat negl adc mov sbb repnz (bad) jbe xchg orl sbb sub cmp cmp mov (bad) mov push push add data16 hlt dec dec (bad) mov imulb ljmp xor aam popf rcl jnp jbe cmp lock sti movsb push pusha cmp jmp mov jns jl jl inc and adc or loop xor dec add inc pop test sbb mov jecxz xchg imul inc cmp leave mov lds sub jae repnz cs fnsave rcll adc xchg fs adc lret stos clc adc mov stos dec lret sub call popa pushf es cs push imul xchg mov loop pop or and cmp inc js sub dec sub cmp cmp fstpl lods jle push jge cmpsb mov lods ficoml aas ds lcall gs sub dec (bad) std xchg push jb pop mov enter jno mov add pop popf cmpsb aad sbb mov push sti rorl aaa out (bad) insb xor inc xchg out lock js dec movsb js inc imul (bad) fidivr add xor sub js enter stos and push fdiv mov xor jae cltd jnp fistl cs loop sub lret and popf pop sub jecxz dec stos mov sub repz pushf cmp (bad) lret movsb pop jg mov xor mov (bad) loope mov stc mov xchg add iret mov out jg iret pop (bad) mov pop mov xor lahf xchg push xor add (bad) xor dec pop ja inc stos or or (bad) (bad) stc pop fucom in fdivs loop pop mov aad or and movsb movsb jg inc inc sub cmpsl insl in sti sti mov or push mov or sbb shlb push pop cmp dec jg push mov aas xor data16 mov mov loop adc loop stos icebp ss fcoml scas jmp call jl lret icebp or pop cld cld aam nop in cwtl (bad) test stc push mov cs hlt lret int dec pop adc xor nop xchg cmp jb jne int jl movl and add aam push sahf imul push gs add sbb in push fs fsts mov das xchg sub ss inc and inc pop and int3 test sub ficom insb les imul or mov leave leave mov cli add xchg push or rorb dec (bad) (bad) adc jmp or scas push ret sbb arpl fstpl jg mov aaa iret pop add jmp addr16 inc sbb movsl push sub rcl mov cli xor or notb push int3 mov adc push (bad) mov lcall bound pushf (bad) and mov inc into test repnz sarl xor cmp lods cs mov push jle bound lcall stos std gs inc sub popa scas out cmp call sub pop bound fs and enter pop lds mov cmp insl repz xchg inc xor cmp mov pop and cmpsl push or aas sub sar popf push sbb jle sub xor mov ret pop adc fisubrl ss mov inc negl pop cwtl loopne ljmp (bad) xchg and mov divl ljmp dec and cmp insl add inc ss pusha lock je cmp mov cmc cmp adc shlb push in jge popf les dec stos pusha out flds mov mov cs or movsl movsb mov dec rcll lret sub imul (bad) scas stos out dec popa sub mov syscall leave mov cltd inc mov xchg lcall ret mov icebp jp lock pusha decl rcrb hlt cmc mov adc iret jecxz ret ret jbe imul adc shlb imul into jno xor inc fcoms xchg outsb sub mov dec inc les xchg and pop cmpsl xchg call rcl es pop dec into adc gs mov in xchg lcall mov out or mov lods stos loopne loope scas scas aas cmp imul fidiv add jge jne push int3 and add add aaa imul xor sbb in pop js fnstcw pop dec cmp dec je mov cmp add dec popf xchg add leave dec cmp data16 or out push mov jle ret ret mov pop dec sub addr16 out mov mov daa and push push jns (bad) testl (bad) pop push jge xchg xchg icebp repnz xchg mov push data16 sub insb mov mov sarb inc test dec inc jmp xchg ret pop sub lods movsl push sti dec fistpl add mov adc shll mov (bad) (bad) cwtl cmpsb sbb test xor mov dec rcl rcrl jbe sbb mov call pushf sub fidiv and fldenv mov jnp push (bad) mov cld mov sti push jne jnp jnp bound push shll mov aad arpl aad sub imul xchg sbb ret sub arpl mov incl rcrb cmp mov sub jmp pminsw jge xchg imull sub inc mov mov pop inc dec push and fisttpl xchg int3 test lea mov insl jg in addl outsl into fs mov cmp cwtl fwait add dec pop mov sahf sahf jbe xor mov pop fisubl ds cmp cld repnz jmp sub jo shrb xchg push and push mov xchg or pusha pop test push lock add into lret jb or movsb sub scas mov fcmovnu or adc or addb dec decb test outsl out mov (bad) mov inc or daa fnstcw mov adc adc and or lret lret mov xor cmp mov rol push jl mov push add and (bad) (bad) lock mov inc or test dec gs cmp cmp fxch insl cs pop popf or movsb fildl out adc push test imul jge pushf jecxz mov mov push mov or add add sti aas push das das (bad) xchg pop test leave jno mov notb mov scas cmp jmp fistpl jl stos movsb (bad) ja insb cltd frstor push and sti mov push mov add lods shll xor and mov pushf pop divb cwtl sbb cwtl pop iret push movsb jecxz loopne sti add mov stos cmp fwait fwait xchg jns ret add packsswb repnz sub popa fistl stc stos sbb fnop mov pop daa (bad) sti pushf cwtl rol xchg fdivrp std fcoml dec push mov push inc push scas sub sbb xor push and cmc test out jp sbb jle sub aaa insb xchg jg inc sbb repz add mov in pop cmpsl jmp fs insl sub clc xlat mov jns xchg cmpsb push shrb and inc fincstp jge sub pop adc mov fcmovb mov mov push push loop out xchg lcall ss push jo or pop push ret (bad) and mov jnp (bad) popa mov repz int or test insl jb mov mov cmp popf popf fs jbe popa scas (bad) sti xchg xchg stos and aad push lret mov mov sahf mov add pop sub test add push xlat popa cmp mov mov mov cmp cmp rcl (bad) cmc cmc test fidivr idivb xchg test jl in ret lds and xchg (bad) jbe xor arpl cmpsb out xor inc xor fisttpll push ror xchg mov scas adc lahf inc js cmp mov cmpsl repz pop push into int3 or xor lcall mov jp repz sbb mov ja mov dec add cmp jle inc push push push aaa and (bad) and repnz mov push leave jg dec xchg inc sahf mov test in popf pop stos test pop dec pop mov or ret xchg iret bound test fisttp rorl mov xor push cmp shll popa mov xchg or bt icebp pushf jecxz push push add jg cs mov lret fwait cli mov xchg daa daa add adc popa les stos incb pop test dec loope sbb out imul (bad) or orl test mov jno lret pusha push repnz frstor clc stos shr test sbb in lcall aad jp or addl and xchg fsubl jle lret (bad) cmp lods outsl sbb (bad) xchg insb sub pop test fisttpll decb scas repz inc adc enter out inc inc inc fcomps mov jle mov clc clc inc adc sahf push pop (bad) adc xchg cmp jp adc lret lret hlt jg sub adc lcall or in addr16 push mov jns movsb mov push loop jae dec mov stos push add and (bad) das roll jns (bad) cmc je insl out jle ljmp stos mov xor jge dec add cmp add add enter (bad) or lret unpcklps jb adcl jo xlat pusha xor cmp add jno nop daa mov pop xchg out or out dec inc aaa aaa inc scas ljmp test in adc xchg lock jno push mov dec int fidivrl sahf xor sbb xor jns pushf pushf decl popf ret adc mov out xchg negb sub ljmp jb sbb aam xchg lods addr16 daa pushf mov insl insl mov mov mov test scas inc rcrb lods lods jbe xchg push push pop jae xchg scas stc stc push sbb imul mov adc test out stos cltd aas sub sbbl in sahf pop divb pop pushl cmpsb pop movsb fildl or imul dec (bad) (bad) mov jbe add lahf push outsb push out xor mov (bad) in lods push hlt sbb pop lock xor stc gs enter rcl movsb cmp or cmp push fistl or adc xchg ljmp sahf cmp jb add add mov mov pushf jmp imul sarb clc clc lret hlt add aad mov xchg aam ret sub addr16 mov inc mov test pushf lock and inc inc push xchg jp (bad) mov nop mov mov cmp jecxz fmul repnz dec ja shlb fcomip ds add push popf fdivr (bad) pop jmp sub xor adc xor dec setl repnz add pop cmp sarl (bad) push sbb mov cmp dec mov stc loopne (bad) mov add fsubr push test pop dec add lock push push push add pop push pop mov call idivl fnsave jmp xor xchg jmp in es test cld push push add cmpsb cmp mov (bad) (bad) mov or scas pop neg cmp ljmp push mov jle popa sub adc scas sbb sub (bad) pop pop popf aam cld in jns imul pop dec cmp repnz aad (bad) scas out aaa data16 test inc adc in int fwait jae mov leave enter jl dec and out or dec enter dec sub ss adc sbb xor push in in fstpl ret mov inc (bad) xor jbe cmp cmp scas je sub gs xor (bad) inc adcl push (bad) and in lcall dec cli icebp pop dec or (bad) sbb mov jnp sbb test fcmovu or mov aas xor sahf ret movq xor pop lods movsl mov push scas nop je pop bound (bad) fs rcrl and xchg push lahf mov rol (bad) adc adc pop lods sub pop mov cwtl shlb stos sub mov addr16 aas cmc insb lret lds cmp loope push jg push es lahf cmc shrl sub push in cmp xchg in (bad) insl sub add sahf mov jns sbb cmp mov mov cmp popa adc mov (bad) bound pop mov push xchg xor (bad) (bad) sti add popa sbb pushf sub cmc cmp xchg daa stos std ja mov test js cmp scas aam jo mov lahf sub ds cwtl fstpt push push cmc mov inc in repz mull insb in cmpsb in add adc and ret (bad) stos call cmpsl push loop icebp out dec das insb push repz sbb mov lret sbb outsl pop int3 sub bound jbe (bad) cmc jecxz cmp in inc sub dec test adc cwtl in out mov gs imul into flds inc lahf or xchg dec repnz push push xchg out cld aaa dec mov push pop pop scas int inc sbb in cltd jl dec ret xchg inc xor fs sub add (bad) ja pushf and jno pop pop dec pop outsl xor adc and pop pop push test add std xor xchg push sbb xchg mov mov fnsave pop or add sub xor negb nop sahf fnsave mov adc std scas and jb cld add mov cmc fsubrl jae jge outsb fwait movsb lds jno add push jl negl jg sub clc xlat lahf loop xchg mov sub cmp jl jb push push mov and loope lods insl push mov outsb push push and xchg or (bad) lock sahf fistpll jmp cmp fcompl xor (bad) push or sbb cwtl add xchg notb pop or sar xchg cwtl rcr mov loope inc rorl xchg sub dec mov shlb jo lods cmp imul adc clc (bad) push push inc or mov dec push pop in mov and xchg in shrb repnz jl mov xor aam int3 fistp mov sub call out mov clc inc insb lahf push mov popa sub push rcrl ret cmp mov addr16 in dec imul sub mov mov insl fstpt cmp shrb out fisub addr16 add mov icebp lcall imul xchg mov int fwait ret push dec mov popa xor mov push mov popa dec or and fdivl bound mov je jns (bad) in sbb xor fcmovu or out mov mov (bad) imul out test (bad) stc pop inc or iret add test sbb mov sbb xor sub in add in xor dec cld push dec cmp jl call adc imul insb adc addr16 ja inc dec insb jno mov inc loopne leave leave dec push mov jmp ja testb adc pop pop ja cmp lahf lahf stos inc sarl leave je pop pop sub nop (bad) dec (bad) sbb jecxz into into mov xchg hlt mov mov iret out arpl hlt hlt xchg addl cwtl outsl loop pop pop pop or lea jmp adc push mov insb mov sbb mov and data16 mov js xchg sahf mov repz idiv adc fcompl insb mov loopne (bad) scas aas nop dec (bad) inc inc shlb (bad) pushf out sub sbb in pop xchg sti pop iret fadds cmp sbb rcrb mov cs (bad) adc out lods add fwait lret outsb test sbb lret mov arpl xlat (bad) out ljmp test mov cwtl pop and push or repz lods cmp inc imul lds push cli push xor pop std (bad) dec mov fistl sbb repz and jb aas dec dec lock dec add mov outsb popf imull or cmpsb cmpsb sbb (bad) ret mov xor clc je jne add aam insb shr jo,pn jnp mov push es leave ja lock cmc fbstp jb call (bad) jbe mov punpckhbw repnz cmp leave or mov inc mov xchg sbb xchg shlb pushf pop pushf call xchg out roll sub sub insb fbld aad pop sub ret ret push lahf addr16 mov mov (bad) and inc dec loopne xor cli daa pop inc xor dec mov aad lods or xor xchg out outsb insl xlat loop fs popf inc (bad) inc das clc (bad) int3 ss xor jno stos adc mov stos mov add push (bad) fcomp fwait pop popf pop (bad) jo xor cltd les or (bad) mov adc and orl sahf lock js dec dec aas stc aaa mov scas push jne movsb (bad) cmp adc test enter dec inc into pop or in jg mov xor inc pusha mov push and cmp nop dec jo pushf out add sahf mov dec cmp mov out aad into mov mov inc and leave xor (bad) mov enter or mulb xor sub insb aas inc mov push mov nop in out movsbl cmc arpl fcoms into movsb xor bound bound fist leave add test push dec sub pushf aad push pop pop lods out div jge fwait adc sbb mov loopne out or sbb xlat sbb lods pop pop sbb in sub or (bad) xchg push xchg pop lret call in inc jle outsl insl mov cmp in push sbb in fisubr cli push xor jb push jmp add and fcomps cmpsb jmp pop adc fs ja movsl push jl mov test xchg xchg shrl mov add jge lret (bad) stos je out jo idivl mov cmp mov sbb arpl cwtl mov sub shrl sbb push sti sbb outsb xor mov fiadd out push sarl test call lods jle lea xchg pop insl loope inc push add mov sub inc (bad) and cli cli xchg push push je js sub mov sahf mov (bad) jb cmp test jae jb or mov jmp (bad) mov fcmovb (bad) mov clc push mov cmpsb push mov sub outsl inc out out movsb cmp mov lock das movsb sbb (bad) ljmp jg jns (bad) push ss mov jae sub push mov pushf inc pop jmp bts adc imul sub stc pusha ljmp shrb pushf call mov addr16 lret daa xor sbb lds push jns xchg pop pop aas aas inc sbbl push push insb (bad) and or test cli fcomi xor or iret dec or jl sbb adc out xor movsl decl adc loope cmpsl rorl mov test imul push jae mov xchg push and sub das aad outsl sbb cmp and in pusha sbb jnp repz xchg and xor jmp sahf pop mov jnp pushf test push lods in lock movsl jnp lahf xchg je (bad) idivl dec inc icebp pop repnz lods test lret arpl add out xchg sub mov jecxz add inc sbb mov xchg mov ds js sahf jns mov jecxz (bad) mov lods or lahf cmpsl int3 fiaddl idiv lock int3 and or mov sbbl dec pushf jge jae xchg or fstps xchg mov aad xchg jle stos out cmpsl jg call or mov xchg xor xchg outsl add push imul fimul fisubl inc sub rol xchg jmp js scas fcompp mov mov je or push in aas sbb cmp jbe fistl pop push jbe je arpl mov popf sub xor sub push clc push fisttp je stos mov ljmp xchg sti adc add lcall mov or adc adcl shr push sbb mov addr16 stc rcr fistp bt scas out xchg gs test cmp ds das and jnp cltd mov orl add xor mov sbb inc or and pop add pop adc inc ss jmp pop sbb dec push add insb push (bad) mov rcrb mov pop jl mov je jns adc xlat lahf xchg cmp lods divl push divb push xchg pop in add out sub mov ret mov jns insb mov insl cmpb inc or scas jne add cmp ss in fdivrl mov xchg xchg (bad) mov and dec pop bound cmp jmp push cld bound (bad) mov (bad) sbb push loope jo cld mov add add sbb loopne stos loope in in into into xlat mov sub ljmp imul or fist std in add enter sbb in or popa push push lahf push jbe mov cmp in and lea pop pop or xchg and adc cmp jle adc dec mov jns cmp cmpsl (bad) xchg jecxz jg (bad) xor pop push pusha fisttpll cld call rclb lods lods push cli out ds repz xchg std aaa ja scas movsl jo push add stos lahf sub int fimul and shl sub data16 jno inc jns,pt xor inc inc insb add push (bad) loopne dec cmp arpl pop out jmp cmp (bad) lcall into imul mov mov rcrl hlt cmc dec movsb lea jne cmp add xor lock xchg xchg iret mov adc je and inc ss pop xchg xchg jecxz addr16 (bad) mov mov inc xchg int stc dec xchg jl pop dec aam imul cmpsb out cmpsl lds orl pusha in data16 mov roll rol aad pop ja cltd cltd repz xchg ljmp (bad) adc lods jo cmp jle mov push push push pusha jmp pop xchg xchg push push push fidivrl je xor inc pop loopne adcl scas jmp fs jl cld clc inc xor jo pop nopl mov add gs and inc bound jnp add (bad) ljmp add pop xchg pop sbb outsl lock (bad) rclb popf mov inc push sbb push sbb jg pop loope and cmc adc push and in loope fwait jae dec shll add in lods sbb or inc jp scas add xor lahf sbb in js mov arpl loopne adc popa enter sub fcompl inc mov push sub mov push sub rcrb xorl push pop orl (bad) mov add jle enter dec add sub mov lret mov ficom inc inc es sbb inc inc in dec lds sahf xor loope adc test xor cmp inc inc popf ja sbb out sbb xor enter out and jmp xchg ljmp int pusha sub test adc and pop sub inc mov ds push les out cmp and xchg aam pop adc xchg popf pop xor (bad) test imul jmp adc push cmp enter inc inc xor xor xchg jecxz (bad) out xchg adc rorb xchg scas xchg or lock cmp idivl pop push sti mov cld outsb push sub cmp jo sbb in je out js and cmp xor je add pop xlat fdivrl cmp mov add xchg outsb mov inc push add adc adc lods xchg dec cmpsl ret mov adc addr16 adc insl insl lret lret pop pop data16 in in fiadd mov cwtl xchg sbb mov imul cmpl das cmp jmp inc (bad) mov cmp or imul sbb cmp mov neg loopne add in inc mov push sti cld push adc mov sbb addl leave pusha push mov push cld mov out or fcomip and or cs ret sbb adc xchg lcall sub sbb or (bad) mov lea xor js sbb xchg imul push popa push push divb inc push pop pop gs incb add fstpt and cmp mov and lds cld bound jo repz iret adc xchg shlb lret lods (bad) jne pop pop push pop in pop mov mov sbb cmpsl dec sbb aam pop cs (bad) jb out fcoms dec xchg sub sub aam test xor add jo or pop fidivl aas mov cs test into into push push cmc jbe xchg ret cmpsb insb and sbb and imul sbb jns lret xor jle dec into ret pushf cltd push cmpsb cmpl dec xchg lods fidiv jbe decb jns jo fadd mov mov lds je stos mov and mov mov lea pop push xor imul jo add xor mov adc lds or mov xchg leave mov mov add popf popa outsl in push cmpsb push stc sbb cmp pusha aam adc imul cmp push sbb lret jecxz xchg push jo lcall call or cmp rcl (bad) gs add mov cmp inc mov push lock cmp sbb pop or mov nop js out pop icebp out (bad) sahf xor out cwtl and mov cmp adc mov cmp xchg cld mov adc xor sub adc xchg mov out and fsub adc push cld push pop shll addl std lock mov adc jbe out les pushl cmp rol ja pop inc jg ret add mul lea inc in mov mov cmp xor incl popa aad cmpsl fnstsw pop pop cmp mov adc adc mov add mov jg or mov and mov mov lea ret pop (bad) jg popa pusha int3 cmpsb push pop fidivr adc iret int xor xchg daa daa fimull xor sarb sbb push push push jnp cmp shr jg mov dec mov xchg sub mov add or mov mov int dec leave repz or push (bad) idiv push mov repz xor mov cltd jecxz mov mov xchg lds rclb mov or and fnsave ja gs out add push adc out scas dec insb lea xchg outsl sbb sub pop pop push sbb mov dec jl loope insl (bad) repnz xor aas fisubr aad jge (bad) and mov adc cwtl ficompl in icebp pop jnp,pn inc and mov scas ret or outsl mov scas sbb (bad) dec jmp (bad) mov test (bad) push stos lods daa adc lock add repnz xor les cmp arpl push (bad) mov int3 int3 ja mov jp push push data16 jo insb outsb (bad) and outsl or ljmp hlt sbb gs cmpsl sar or add test push and fcmove jl mov push push fldenv clc ss cli pop or or add mov les or or repz ss lret xchg mov dec inc cmpb loop test ret rcrl scas fucomip pop aaa lret call loope dec adc sub sti in mov out mov mov ljmp mov lock mov js int3 adc push mov mov sbb in xchg cmp test scas mov popa scas or push inc (bad) mov sbb addl sti icebp test xor leave scas je or and stos (bad) (bad) push pop pop call adc or int shrl outsb repz xor mov scas pop es xor pushw in cli xor cmc popf and ja mov sbb lahf lds cwtl addr16 push (bad) (bad) call inc push cwtl sub dec sbb insl inc es mov adcl inc dec jb out addl (bad) repnz and sti mov aad sbb pop pop (bad) jmp push or aad sub add movb xchg xor ss mov lea js mov dec sub jnp into sub add add jae and mov loop xor and dec pop in dec mov into pusha popa sub xor shll lret iret ja inc enter xor adc pushf pop and mov sbb stos lret xor pop add cmp mov aam movsl xchg aad loop in (bad) sbb loope pop or xchg repnz stc (bad) jns sbb pop pop fmuls test lods pusha and jmp push dec sbb xchg (bad) mov push pop jge push lds imul or or or sub and xchg pop adc pop daa or and je mov popa sbb insl neg idivb aam sbb cmp ror mov hlt (bad) fsubrl stos sahf in imul mov aam jne ficomp cmp sub inc inc jecxz xchg movsb incl dec push stc insl or jge call (bad) pop or jae xchg sbb add sbb ja pop cmpsl xor test sbb stos cltd cltd divl inc dec inc clc stos or jecxz mov mov bound push push ja push jmp enter pusha scas aad ja fst loope jo aad push sarb rclb pop in lods pop xchg lock inc inc jbe cmp adc in push jne mov mov jg push mov outsl xor inc xor dec dec xor or mov jnp xchg xchg cmp cmp adc popf mov cmp imul roll adc xlat (bad) ja adc mov pop dec aam sub outsb mov rcrb mov cmp fstl fcoml cs xor test pop stos or in (bad) push or cmp sbb sbb xchg xchg xchg in addb cmp js dec dec outsl pop xorps mov (bad) fsub sub popa popa xchg or mov cmpsl je into mov inc xor fwait jb aam aam out add mov push or aas fs mov std std enter adc stc lret mov mov jg push cli mov pop jne inc xor add insl dec xor or cltd lcall test mov lret xchg incl ja pop in loop and jae mov leave and mov lds xor jge gs mov cmp push add push xchg repnz mov loopne fild insb push rcl push mov add test push mov cmc icebp stc lea sbb out xchg movsb and scas div mov insb lahf arpl mov repnz xor add push jmp outsb adc sbb in mov mov test (bad) jne or cmp jle imul push sbb mov add imul jns fstp test test pusha lret iret out fistl sbb loop movsl jmp addl inc sbb add xchg repz xlat adc push mov out inc cmp (bad) cmpsl rcl xlat adc cltd pop xchg fcomp add dec xlat daa lods mov and add aad mov stos mov sbb test push es push fcmovnbe jae and insb cli addl imul out js mov xor dec les (bad) adc inc ds mov dec xor mov add xchg mov or (bad) xchg stos jecxz sub mov out pop sub (bad) jno pop jns push cs lock mov jae repz fs aas inc inc or xor pop fdivrl sub andb mov or inc inc in cmp and in jg in pop push push dec mov dec cmp aad mov mov push out out mov xor ljmp lods enter lcall push and (bad) inc inc xchg insb mov dec sbb (bad) push push push out pop arpl or mov sbb jp xchg in mov (bad) adc xor dec mov push data16 cwtl dec dec (bad) xor lods pop adc orl adc das test lds add cmp add test adc sbb adc insl jmp inc cwtl cmc jecxz mov or (bad) stc or scas jo loopne rcl aam mov fstpt addr16 inc mov sub cmp les in pop shl cmpsb pop pop dec xor lret adc (bad) call adc push cmp adc xchg loope fsubs pusha pop jae adc jo loopne,pt inc inc mov data16 sub (bad) (bad) jae cmp cmp push xor cwtl cwtl loopne mov sti ret fwait push cwtl mov fiadd inc mov sub lock icebp es stos lret dec cmp nop xchg push and add sahf push or mov ja mov test rcr es mov cltd cltd adc xlat mov js lahf xchg mov jle pop pop pop sbb xchg xor inc xchg xchg loop push aaa out cmpsl mov int test xlat fstpt (bad) (bad) popa pop xchg cmpl adc inc mov nop mov in rcrl push pop xchg push dec (bad) jns add mov sub cli cld clc hlt jmp andl into lret dec dec jg fldt sub imul jae (bad) bound adc pop test jge das pushf std mov mov iret dec push lods out xor test push mov cmc test sub push lcall pop sbb adc nop adc xor dec xor roll dec mov xor popa data16 push push mov insl rcl outsb push pop aam (bad) fwait (bad) xchg shrl jge outsb sub lods adc adc out fstp mov int3 jb cli hlt mov push or jae jbe ljmp pushl clc add das (bad) stos pop inc inc push pop (bad) jg mov (bad) xor inc dec dec xor inc and test push frstor add dec sub pop clc pusha out insl das sbb sub add gs fsubrp out cmp xlat cwtl cwtl mov xlat jmp in stos jmp xor vpackuswb push push and es add sub cli daa jle push out cmp popf xchg xchg fwait (bad) jl xor leave orb or mov rol pop adc or stos scas dec out xor mov (bad) lahf (bad) xchg les xchg mov leave faddp (bad) xor mov add mov inc je lods add adcl das pop inc fdivr mov sub and xchg outsb ljmpw mov hlt mov fcmovu pop loop pusha loope movsl cmp ret inc xor call or loop xchg pop ja xlat lret xchg ret fwait xor jae dec dec into lea ds paddw je lret movsb ja dec or lods insl adc mov out into (bad) repz mov pushf xor push push mov mov push ja inc sub lock icebp xchg fwait cli imul aad imul pop or and xor mov add mov mulb es fisub callw pop xchg repz fwait jp les mov cmp sbb adc push xchg test and adc adc add jp push or push or packuswb xchg rcrl push cmp stc jno add mov aam add fwait xchg sbb mov mov lret cld mov cmpb out lods push adc lcall mov cs aam std std and lret dec inc xchg xchg sub pop fldcw rol sbb (bad) add jp sub xchg popw outsb mov inc out sbbb inc pusha fldt mov xchg fs ljmp scas (bad) adc add stos dec dec push mov mov adc xchg jb xchg sub jo popf xchg xchg dec inc addl (bad) aaa dec xcrypt-ecb cmpsl or loope add mov push push test aam mov jmp fcomi mov dec or scas ja jne inc xor dec dec dec xor push push lcall mov sbb mov add pop pop adc push push insl imul push push adc cltd rcl xlat sub outsl inc jmp jo pop and pushf pushf imul sub adc inc or sub xchg push imul (bad) aam mov subb vxorpd ja and push outsb add sbb cmp xchg xchg xchg in addb pop fcom inc enter stos ds jmp pushf mov cmp popa sbb dec dec fcomip pop fsubl push das into mov dec imul mov (bad) (bad) imul push pusha imul rol mov mov mov lods int3 mov sbb fistpll inc cmp push dec dec xor (bad) gs sti clc cltd out lods test dec pop jo call pop fs insw pop pop mov mov ja xor into inc mov xchg xor jbe or sbb push dec cmp jnp mov lahf aad aaa mov icebp mov sbb ret dec mov sbb fmul push movsb popa hlt cli stos mov sub mov in outsl sbb cs or aam jmp dec dec jno divl in pop add aas inc sbb in popf in mov mov stc or not idivl sti xlat out xor in in mov add (bad) cmc out scas nop ss pop adc aaa mov xchg lods mov (bad) pop sub xchg mov add xor lods fneni(8087 in in and out xchg fstp xchg jns mov int3 (bad) mov (bad) jno xchg mov sti adc cli int add sbb pop dec jg ret xlat adc (bad) gs loopne das sub sub insl cmpsb test (bad) std fistpll mov cmp lea mov out lods test sbb (bad) mov xor xchg rcll pop sbb xor idivl adc mov outsl push stos jae push cmp js inc xchg pop jns cmp (bad) or push cmp sub pop call je std push adc cmp xor add xchg cli icebp fwait push lods lods nop sub push nop push jp sbb xor mov mov das pop xsaveopt flds arpl cwtl lock lret inc xor inc jae aaa int push inc loop pop scas push in repnz scas les add adc js mov push mov jnp stos mov sub lahf pusha dec fildll fucomip xor sub jae lcall and and mov and inc and cmpsl lea inc mov ret mulb adc fidiv xor scas loope or dec sbb int3 inc fisubl pop lods cli cli ds cmp inc pushf repnz cmp ficom cld mov sarb test rcl lea push jl mov test (bad) add fwait sub jo mov xor sarb nop pop js cmp repnz cmp and xchg sti test pop pop adc inc popf mov out mov ja,pn orl xchg ss jno leave mov cmp adc std pop sarl cmp sahf adc adc mov jp push push adc je fs popl pop sti inc xor mov sub rolb xor dec lcall pfrcpit1 and xchg inc sbb repnz mov aas lods out or ja and or push pusha (bad) push sbb out sbb push int sahf rol mov push sbb outsb fs lahf es mul cmp sahf ds mov icebp and in mov pusha inc imul ficompl popa pop sbb in rcr pushf rcll loop pop mov push aaa fidivrl rorb push ljmp aad xchg cmp pushf fidivl xchg in cmc xor mov adc jno,pt dec dec mov ss and int3 push jae xor cmp mov jo stos gs jmp sub dec xchg or aad inc enter (bad) (bad) push imul add mov cmpsl (bad) xor sarl or out mov out test rcrb rcrb push push sub (bad) in daa icebp movb cmp shrb xor adc add add mov sub jl je sbb xor mov push je je jge inc in in jmp fisubl lcall pop call adc jge jle and ss sbb push lods pop xor clc das push shl mov dec mov dec imull test lods jb adcl sub pop mov jecxz inc inc push aas movsb sbb sub mov add jns pop cmp fnstcw push cld sti ljmp xchg mov jge cmpsb xchg movsl sub sbb mov ja pop and fsts lret push popf mov or mov and mov sbb fwait add and pop mov rcl test jle test insb sbb sbb in insb fs fidiv gs dec int3 into add xor sbb lea adc or les or lods xchg push jmp sub mov scas or push xor jnp jl push loop out lahf pop or jbe repz add std cmp sub (bad) adc mov push push inc inc ret xchg and movsb lea sub mov test mov subl inc out jo icebp enter add (bad) (bad) mov mov clc clc insb adc mov push hlt lret outsb adc xor mov xchg cmpsb push push or add pop add fadds push movsl inc mov ret int sbb movsl in sbb mov cmp cltd mov rol cmp lret push inc lahf xchg (bad) push xchg fldl cmp fidiv not push sti in push jno jae push insl hlt pop pop outsl mov test push sub mov adc fwait sbb imul mov icebp mov js add (bad) das pop fisttp clc negb ljmp sahf in pop call push fs cwtl push push rcll inc jmp clc loopne jg sbb sub in inc popf pop mov nop sbb push dec and xchg jg,pt (bad) xor rcll jns jbe cmpl stos mov dec dec add xchg fisubr and jae cmp movsl jl loopne lret sub pop cltd or and add test imul push int sbb (bad) adc mov mov or rcl jae push (bad) cli lcall xor fs jp mov (bad) jp fidivl dec fwait xor lahf jl int cmp stos fisub add push mov or cmpsb adc ljmp xchg stc sbb (bad) mov imul inc popf push fwait sbb mov jno shrb xchg ss or movsl xlat ds mov inc mov cwtl pop pop nop and adc (bad) push repnz mov mov sub in mov pop dec dec inc cmp popf popf ret adc and mov sbb push and and gs in call sbb movsl in mov xor xor inc mov adc fs sub pop out jo lods mov pop add imul push or inc adc jbe out sbb test jmp mov dec mov jb ds (bad) mov and sub mov popa push pop xor je test lock clc adc std push xchg xchg fisubrl leave jae test mov mov jo sbb (bad) loope (bad) lret lahf jp or cmp pusha push pop add hlt fisub imul jnp sbb add lds rcll cmpsb movsl mov fstpl adc inc lret xchg push daa sbb add jmp sahf lret aaa les mov mov inc popa adc or mov iret aaa hlt incl in xor (bad) push or xchg push loop pushf imul dec outsb pop xchg jbe,pn xor pop pushf lods fild hlt (bad) jp pop xor icebp add stos jno cmp xchg push push sub pop jne mov imul mov hlt sbb in pcmpeqd jle lods insl xchg pop jns jno gs dec ret and icebp mov xor lods (bad) fistp cmp jne dec mov inc sub lds add jmp push pop pop mov ljmp (bad) and dec and sbb adc sti adc sub push cld jne push les (bad) cld inc mov (bad) ficomp les xor les outsl test xchg inc jmp jp push cs add dec (bad) sub or and fcompl xchg dec mov lds mov adc adc xchg (bad) pop ss sbb sub outsb jno sbb aad sbb jecxz rcll dec repnz jp push jmp fs ds jno xor cmp push rorb lahf popf shrb les pop add clc cli je jmp xchg iret dec adc or jmp xor js cmp mov stc sbb push or lock in (bad) jne pop aas data16 inc or sub es leave dec sti fwait sti dec (bad) mov divb testl jnp mov adc arpl sbb jns inc aaa xchg stos stos out gs sub jb mov cmpsw dec xchg rclb in push or mov lods outsl add sti sbb cmp pop lods fsts test push push ret xchg sbb sbb out or jle jg xchg insl stos xor cli adc cltd sub divl out (bad) mov pop sahf mov aad enter test (bad) in pop push mov xchg and xchg aad jne and xor mov fcmovu jne fcmovbe imul xchg xor jp xchg test push insl aam mov fldenv daa dec jbe aaa inc ss lret xor gs sbb pop mov adc inc test sub push jmp jmp or add fidivr push out mov (bad) pop sti pop ret fwait sbb shl mov mov mov daa shrl jae mov and push mov mov mov aas or jns icebp jl inc fdivs fxch jno movsb je push xchg and push push mov in fbld out outsl test add orl push inc rcrb jnp xchg mov (bad) jo jmp push pop fist faddl pop fld or push push fcoms inc ret call roll dec mov insl insl sbb nop and lock jmp sub pop (bad) or pop pop repz test aad inc popf pop push fsubs repz fcompl pop sub loope sbb pop cld cld inc clc inc inc xchg es add xchg push aam cmp jmp cld push enter mov push scas and arpl fst push rep dec push aam (bad) ja sub in mov imull add ror in out cltd jnp stos or scas pop jge push outsb push mov (bad) ja jae ss icebp fs shrb sub xor lahf and popf cli cli fbld dec mov sbb dec pop imul sarb inc mov in jge jmp call push push int3 mov andl cli (bad) jnp or icebp jle aas inc je iret adc movsl pop dec ret and or out mov sbb scas mov cmp xor addl inc fnstcw outsl pop movsl es inc cmp pushf pop pop push (bad) mov fs repnz das mov insl in mov and rcll ljmp mov sub pusha inc aam in adc imul pop mov jae mov pop xchg sub out (bad) jo and xlat xchg adc ja test cmp sbb adc mov insb xchg out jl repnz jne inc dec dec add fs ds add sahf jne mov push mov repz sbb and xchg pop repz cmp fsub std mov cs lret clc xchg mov lods enter (bad) (bad) xchg mov mov xchg dec mov out fstps std mov mov adc or xchg xor rolb call cmp (bad) inc sbb in imul into mov cmp mov jbe mov jnp fcomp movsb sti jmp icebp pusha pusha inc mov inc inc cwtl adc arpl aas jae xchg lahf daa daa mov dec dec les xchg or mov nop push push cli rcr xchg cmp repnz and (bad) pop mov push jnp push xchg outsb loopne xor imul shrl stc xchg sbb dec das inc (bad) in adc lret dec mov jne push sbb xor lods xchg push int3 outsl adc imul add push aad popf sbb fistl std mov mov aaa loopne mov out dec nop pop out mov ja sarb pop push (bad) ss and xrelease sbb sar andl lea fiaddl jg outsl shlb scas mov lcall ret pop rclb dec pcmpgtw movsl ret loopne dec mov out (bad) jmp mov mov jae pop pop cmp aad iret rcrl lock test lcall insl in xchg mov gs aas xchg cmpsb inc mov mov mov into movsb sahf adc ret jns addr16 inc pop xor sti dec (bad) rolb pop xrelease popa insb ljmp xchg jne sbb add jnp mov inc out call ret aad inc or and adc fcmovu jg mov stos lcall sub mov fcoms mov inc inc add xchg aad pop pop inc dec cmp pop sti pushf daa push push das out iret lcall sti gs das mov addr16 std push or fcoms mov fisubrl pop sbb pop cmc das imul inc cmp mov mov in cmc imul pop xor or clc xchg sbb imull fnstcw mov jne xor clc cmp insl dec xchg stos or cmp sub sbb mov imul iret xlat popf mov cmpl bound lods or cmp insl stos ret and jge mov outsl arpl scas sbb xlat jns repz ss daa push xor push les sub cmp jg jnp add lods cmc jno mov jge mov jl popa lea test or dec mov add stc out inc and adc mov pop jae (bad) into (bad) cmp ss cmp mov sbb dec ret das add jae pusha and xchg mov inc inc cwtl jo xor hlt jno xchg sbb stos adc push mov fisttpl jg test push inc (bad) pushf fisubrl movsl adc add jecxz xor dec cmpsb inc in ja into adc and cs repz js fwait das mov mov push (bad) sahf push stc movsl mov rcr and push out mov lods int test mov add mov or or jecxz inc and or mov push adc cld push add js mov ljmp jge push jae inc outsb (bad) popa cmp lcall (bad) mov lret shr popa out push out lcall push or das addr16 dec cmp mov cmpsb testb xchg and and lahf push outsl fwait out xor push xchg daa std jbe jp mov jae clc cli sbb sbb fmuls adc in mov mov inc std lock xchg dec push rcll dec (bad) dec and pop ret push push mov xchg inc sarb (bad) aas aas cmp jmp adc jp and loop xor (bad) (bad) push fdivs jnp mov inc out call ret cld jo fadd sub sbb mov and test jecxz sarl es add mov inc test xchg test jne gs lock dec in jb push movsl es cs pop loope pushf pop (bad) push aaa pop adc pop clc les sub sub push lret lcall and and pop enter rclb inc jmp mov pop dec dec mov mov (bad) fmul and cmc jl push (bad) ret in xchg mov loopne frstpm(287 in addl mov out (bad) jae ret dec sub adc and fsubrl or pop jno fistpl cltd inc mov lock xor jg repz xchg and (bad) (bad) sub aam outsb jmp std inc addb lods lahf adc jmp jno or rclb mov call ret out pop inc (bad) ds push addb adc xor mov ds mov call in out mov pop ds and cs pop cmp das push cmp out inc and adc test pusha mov dec fmul cmp fisub (bad) lcall mov (bad) dec dec cmp das pop lods jae jne testb adc aam les (bad) mov xchg push push aam cs dec cmp mov inc push stc xlat lock in pop lahf sbb xchg call cmp (bad) iret push add in push jno pop loope repnz pusha loopne (bad) hlt push cmp dec repz lret pushf fistpl outsl cmp adc mov mov inc fstps push (bad) push repnz iret inc jns outsl insl sbb nop rcrb stc cmpsb and jns fcmovbe jle jb push xchg sub and add adcb jnp adc adc xchg (bad) stos sbb test inc adc mov (bad) cltd xor outsb sbb push cmc mov addb daa scas leave out ljmp daa jmp mov add sub js mov lea xchg test push add lds xlat out es jg mov xchg sti adc jae push daa arpl movsl sub mov mov mov mov cltd dec mov push adc cmp cmp ret (bad) into cmpb sub sti je (bad) in mov jmp sub fcmovb shlb hlt pop mov push iret ja pop jnp jo sbb mov inc (bad) (bad) cmp inc sub adc test adc fsts stc inc cmp push dec xor xchg incl test ljmp movsl mov lds mov call stos sbb sbb insb sbb xor or outsl sub outsb jp lcall cmp shl xor shll test vpaddw bound push mov add rol adc add lds xor push fbstp pusha jp sbbl pop xlat add add loop stos sub int test jnp dec lea mov push in pop scas mov (bad) pop fstps sahf jbe pusha mov dec jns popa mov jnp jns cmp lret jg lret sbb xchg ljmp mov mov lock push out out sar xor cli fldl dec inc in (bad) mov sub popl add dec mov or dec mov jo data16 sahf test xor add fbld loope dec cmp cmp mov scas and add xchg push das (bad) or fidiv cli das jae ret or ror ds out inc inc mov add (bad) sbb psubsb clc iret dec xchg pop add cwtl loopne add sti js mov cwtl adc insb or mov ja into pop cmp hlt add cmpsb push push push xchg or in es sub add loopne pusha pop lea or movsl sbb leave mov call push cmp in arpl jns js aam jg dec test movsl iret fcoml popa and ret mov outsl loop jae push mov mov test or fstl inc mov xchg adc aas pushf pop sbb adc cld add (bad) ds lret jl adc lock loope mov xchg add or inc iret aad sub outsl daa ljmp pushf pushf cli mov push pushf cs in insl (bad) add xchg gs mov xchg enter in sbb add fucomi mov push cmp ss lock lods aad jle add in jl loope xlat out out xor enter cli cli push loope orl xchg aam lods jnp jbe inc push mov ds xor adc mov fistp movsb cmc cmp jmp cmp inc cmc jle inc push lods mov mov adc jbe pop mov shl rclb push lret (bad) and inc stos data16 cmpsl mov orl or push popa jnp add xchg fbstp test lret popf pop pop jmp adc clc xchg mov fimul cmpsl lods pusha adc mov jecxz (bad) dec es push arpl sub shlb out cmp mov or mov in add lds mov push push leave push into push xchg je lds sub jne xchg xorl out mov jmp loope xchg xchg or popf popf jnp ss pushl test in adc fldt pop mov into popf popf sarb faddp or jns hlt inc in xchg xchg jne mov cmc jno addr16 push mov (bad) mov aad enter lock adc call iret ret xchg xor fstpt (bad) or or pop inc inc cmp cmc sub and mov mov in and inc call fisttpl imul sub push popf add imul ret leave ss inc pop addb jne add ret mov loopne add jae pop test xor popf mov mov int dec push xor js dec push stc cs dec ja stos js and (bad) ds stc stos pop jne dec pop ljmp sub shr imul popf in sbb mov cli or or dec call or sub in pop cltd test inc js xchg push jb les push fbld and cmp stos mov cmpsb out loope bound push sub aas aaa mov lea mov pop repz xor dec pop getsec imul xor mov sub loope add cld cld clc jge aas sbb mov pop push in add mov mov inc dec jg ret xlat adc mov lahf push in inc push mov daa push lret subl inc insb pop int mov mov aas push cmc gs mov pop in lahf stos fildll jp fild push jb adc jle dec stos fwait fwait mov adc sbb ss and cltd mov mov cmp stos mov add mov lea jns lcall lea mov cmp add js pusha xor mov xor jle xchg inc mov sub movsb movsb mov mov cmp push in movsb mov and rcl adc inc scas arpl xchg enter roll sbb xchg cs sbb adc test popf sub loope pop rclb lcall pop (bad) xchg sub cmpsb fbstp out fnsave int3 sub imul fisubl mov jp ret pop (bad) xlat outsl insl push js leave sbb jle aam xchg xchg fwait in stc enter cltd mov xor mov or stos cltd out icebp pushf mov cmp cltd adc popa pop or lods scas dec aas add cmpsb bound mov or jmp xchg fcmovu (bad) cmp cmc xchg lods push sub test stc lcall daa pushl xor jmp mov ficoml xchg fs inc mov inc inc leave scas ss test stos fwait test fs mov leave jo or mov negl scas mov aam test insb out sub adc add sub cmp xor push mov sub cmp lret sub stos xor xchg insl xchg mov repnz or push cs inc lret stc jge inc pushf in std (bad) xchg into sti stc loope and (bad) adc push xor popa sbb push stos addr16 inc fs std sbb and inc jg scas pop fnstenvs rclb xchg mov js rcrl cmpl lahf popf fcoml mov je in loop fcomp shll and into test jmp jo decb jge xchg out mov xchg xchg aas mov fwait repz test loop xor pop mov mov les repz jne mov data16 cltd roll mov dec xchg int sub stos sbb adc rcr arpl dec xor sub mov (bad) lods mov out mov fxch gs ds dec push push push push mov js add sub lea clc icebp sbb xchg insl fwait icebp lods cltd addl mov cli outsb xchg pop imul push dec rcrb mov push push aas add cmpsb cmpsb je fnop jnp adcl je jns push paddq (bad) sti imul xlat int mov inc jno fs push and lock jbe (bad) mov idivb (bad) iret ret ds fldt jmp inc ret xchg stc cmp add outsb add sbb (bad) int pushf jne pop bound push sbbl cli insb insb stos mov ljmp ljmp pushf jae arpl aam mov or pop (bad) dec jb lret jae fldenv and ret push push scas das (bad) fcmovne xor mov ret cltd sahf in hlt jno scas outsb in mov int3 int3 inc push lea outsb data16 das inc inc sbbb (bad) notl mov jmp popf shr push je push xor (bad) lret add sub dec sbb je and addl push pusha adc mov (bad) xor mov pop xor pop test outsb negl cmp inc aaa mov jle sahf in mov (bad) jne dec cmp inc ljmp adc cmpsb mov sub loope xchg mov dec dec into dec les mov iret div sahf lret (bad) sbb jmp mov (bad) divb leave int3 inc (bad) fdivrl int int3 mov dec dec test jle and and lret mov jg inc dec pop inc or push (bad) mov jecxz outsl nop mov imul div es in in sbb jae mov rcl or add mov pusha in data16 pop sbb int3 mov jp or ds shll or imul fsubr pusha mov stos test aad insl cld (bad) pop das std mov inc inc mov xchg mov inc pop lahf cmp adc arpl sub into std cld clc mov dec nop (bad) daa and jno xchg stc sti sbb add iret mov and icebp fwait (bad) aad pop sbb pop lods push and lcall mov hlt lcall add pop cmp jb daa jl push push out cmp aad and push daa pop sub pop cs jb xchg icebp jl in sbb jle in mov js xor inc lock cmpsb adc add mov sbb arpl push pop mov mov pop rclb jge das test insl loopne stc es push (bad) (bad) jno adc sbbl cmp or cwtl jg lods lods lar bnd in out add jo adc add das lods cmpsl das dec leave jmp and popl loope inc movsl ficom mov ret andl jl outsb fldcw dec stos lret adc bound push sub cli insb insb insl das ss fisub sub sub lea fcomp arpl mov rcl arpl test fstp std mov cmpsb dec idivl inc mov mov mov mov or jp pop aad jnp pop sub jecxz add xchg xchg xchg gs fisttpl sub fldenv into push cmp sahf add lods dec dec jno pop fstps jp jns cmp mov shlb mov fcmovb mov mov fmulp pop push pusha pusha mov jns repz icebp add enter jb push (bad) mov rcl mov ds jg jecxz inc test je iret fnstcw pop dec xor (bad) andl shll lahf mov test xor stos mov xchg xchg fistp push outsl sub mov inc pop rol leave leave cwtl dec loopne inc inc mov dec (bad) sbb pop sub lahf jmp daa dec sbbl cwtl cwtl loopne dec sarl cmp mov push lahf scas mov mov repz scas repz stc push loope sbb dec fisubrl xchg push inc pop pop or in jmp adc jno int sbb or (bad) divb sar or pushfw fistl pusha pop adc jb adc movsl pop test or add push nop mov imul xchg or je gs fdivrl fnsave mov xchg imul enter sub pop cmp repz (bad) js cld cld mov ljmp sti ret push jae outsb (bad) xor jmp mov cmpsl push cld ret lods test adc push andb pushf inc sub push outsl sub leave fstp std vpsubsb insl mov push sbb mov mov (bad) (bad) or pop push (bad) mov cmc mov jle pop loope mov mov in out int3 xor leave dec movsb or stos stos xchg cmpsl je dec dec leave inc inc stos adc sbb jo scas (bad) mov adc movq jl sbb jb lods aad fwait arpl gs cmp push jl mov push pusha imul and cmp js ljmp mov and ja adc mov repnz mov imul stc mov lahf mov test mov fistp cmp ljmp xchg xchg cwtl and cli insb insb aam addr16 aad mov in push lds daa daa out push xor mov sub shr (bad) rcl fbld lea lret daa jp aas push xor (bad) imull push sub out fcmovne push or pop or mov imul pop sbb jl xchg loope and sbb push les add jecxz mov adc ljmp js mov pop xor fisttpl or ret jb pop push and or push push dec addr16 incb mov mov push jb loopne shlb out and test data16 mov mov xor gs dec dec dec jo jle sahf test push (bad) push dec dec cmp pop fsubl xchg mov loop addr16 cli insb insb xchg sbb and orl in xor divl inc mov jbe cmp jne cmp pushf jecxz cmc and mov pop imul lret loop lods (bad) sub pop in mov cli ret and mov repz add adc xchg pop scas cs fsubrs or data16 dec dec jno fstl fisttpll mov repz outsl lcall dec push pop cli mov and pop das stc push scas mov or mov loop fisubl sbb mov add add out mov adc iret inc insl popf (bad) cwtl sahf lret sbb cld mov repz (bad) mov fsubrl lock push adc (bad) scas out aaa (bad) push dec dec cld mov (bad) outsl jp (bad) gs mulb (bad) repz (bad) imul std fstp std (bad) sbb nop xchg pop dec dec xor push gs mov icebp neg js jno js js sub cwtl imul out sbb xchg xchg xchg loope mov dec in int3 nop nop into lock stos stos data16 into mov cwtl lds scas pop stos or bound cmpsl xchg pop xchg lods (bad) jmp xchg push and ret (bad) mov pusha sub push xchg (bad) mov jb rcl mov cmp fstpt and prefetch pop pop inc inc dec aas sbb sahf add stos out movsl push and cmp ja lahf jmp imul out (bad) jecxz mov jbe xor dec js pop sub sub fsubl sub cmc loopne dec and (bad) in mov or insl xor fnstsw xor mov insl jnp icebp sbb pusha ds mov jl cs outsb fisubrl stos out int3 hlt leave rorb in jmp cltd cltd lahf scas rorb imul inc mov outsb aas jge cli fstpt cmpl xchg and (bad) (bad) sub jno push and jge mov cltd sbb lock pop mov (bad) enter (bad) (bad) jo in sub xor cltd push lods imul xchg add jb (bad) int and pusha jnp pop cmpsb movsb test mov lds fpatan jmp fs sahf repnz cld out insb insb repz (bad) fimul dec ss add sahf xor fdivrp pushf shll inc add call pop je sarb clc pcmpeqw out test xchg cmc pop iret test je inc or or imul bound or push adc push inc and jnp pop test gs dec adcl out xchg sti test add sbb fbstp mov (bad) les push inc adc decw leave (bad) sbb or jle (bad) xor cs mov jmp orl jecxz mov jae lods inc jo (bad) and mov jl xchg xchg mov pop aam out loope call push add mov shlb (bad) daa cli jne les fisub cmp roll mov mov incb gs pop sbb ret pop pop pop loope comiss jle fbstp mov mov mov outsl mov xchg xchg inc fdivrl movsl call xchg icebp icebp and push and insb cmp adc int in inc and mov ficoml decl mov cmp fisttp jle test les cmpsb adc cmp jl inc xchg mov sub cmpsb adc fldenv jnp xor lcall je movb clc js sub push xor cmc out sbb (bad) out shlb enter es jl inc sahf icebp cwtl in mov orl sahf push lcall iret pop aam out ja push push gs fnstcw dec int3 ja mov cmpsl mov jb add sbbl pop sub add inc inc sbb out aas (bad) dec and mov stos lret in lock insl jb cmp cmc outsb loop xchg out or sti icebp fwait out mov sbb inc adc ret cmp fwait ds stos out in sahf pop imul sti adc cmpsb xorl test jl adc adc xor mov nop rcl mov push jno cmpsb sbb xor add idivl add int mov ljmp sub icebp mov rcr (bad) (bad) sahf sahf addl mov negb pushf popf aaa mov xor (bad) fidivrl dec ja sbb gs stc sbb dec dec into rorl xchg sbb iret add mov popf mov test inc mov mov fldln2 in mov out paddb inc repnz je rcl xor cmp cmp push mov or push (bad) cs dec aad or pushf aaa (bad) add push popa idivb mov das out jl cmp add mov mov ret inc fcoml insl outsl inc in in lea pop lea (bad) mov jbe inc into pop add sbb jg cwtl push push (bad) fnstsw popf ficom fistl icebp add lcall jae pusha adc fiaddl addr16 or loope push mov pop popa sub cmp addl scas adc mov jnp in outsl cmp mov out xchg push popf imul (bad) push lcall fucomi sub sbb mov xor shrb mov mov mov punpcklwd std jbe xchg loop jnp pushf sbb mov popa ljmp cmp push sbb fidivrl sbb or jl,pn inc rolb dec lods roll mov push push fcomp adc jae aam dec mov jo nop test xor icebp jb fnstenv push es sbb add sti xchg lcall daa lahf (bad) decb push inc out mulb ljmp decb mov testl cs insl xchg rorb lahf cld ss insb ja and mov out sub add popa xor push gs rcrb adc das sub popf sub mov dec inc dec fimull movsb insl out mov lods inc movsb push fwait pop fscale jbe outsb push sbb lcall and test in lea fwait push cmp xchg jmp adc push out add add pop mov cmpsb or std pop xchg jae sbb (bad) lock jne mov ret pop xor mov cmpsb lock lock cmc xor mov call lock cli dec jno mov or sbb add int fdivrp jl push stos arpl mov enter test sub jb adc push aad pop inc (bad) int call xchg jl jmp xchg adc fwait xchg fisubr roll xchg ret iret dec fdivrl add lcall jge ret dec mov mov lock pusha pusha daa in iret inc cmp icebp cmc mov loopne dec out mov xchg dec pusha push rcl (bad) outsb pop cld jbe stos fstpl and push fadd test ret cmpb test (bad) or push std in outsb dec jno mov lret scas js jecxz mov sub dec movb ret or xchg sahf xchg rorb pop cmc or jl mov cmc sbb inc inc and xchg xchg jmp mov test cmp sub scas int3 enter (bad) jecxz arpl adc scas call es xlat inc adc pop jbe add fimul (bad) incl inc popa xor or ljmp add call (bad) xor sub and xchg mov mov test xchg xor test popf pop xor pop stc sub call adc in lahf mov out push (bad) aam dec cmp aad dec add in jns dec pop mov pusha ja mov push mov add xchg imul (bad) cmp (bad) dec mov pop sub addl data16 and xlat bound sahf xchg lahf lahf psrld or lods and adc jb clc bnd fiadd cmpsl inc mov mov push lret push xor mov push inc testb mov push cs scas lds insb pop xchg sub sub jmp lods mov sahf in cmc xchg cwtl push sub lods mov addr16 add adc scas lret insb lret out sbb jno or jg jecxz inc stos and sbbl insl inc (bad) jae lret adc ja popa jns jge and cmp fisttpl leave dec adc jecxz cmpsb jecxz sub popf pushf xchg addr16 adc mov xchg clc inc fnop xchg shrl (bad) les negl jmp je cwtl xchg movsb jmp lods and in cmc mov mov das jnp adc sbb mov xchg rorb je inc sub mov frstor in hlt (bad) movsl (bad) lock dec sarl inc call mov inc ficoml adc sbb cmp mov das loop sub pop mov jnp out cli addr16 int inc leave jl or ds fwait xor mov iret sub ret (bad) ja adc and push push xchg adc push mov dec leave leave add jg fmul into mov int3 adc sbb inc or xchg outsb stc loope nop outsl (bad) lcall shrb jmp lods mov adc test lods in mov rcrb pushf pop cwtl jne inc lds seto scas aaa add lahf cmpsl and push xor xor in or int3 mov mov scas scas pop nop movsb pop xchg push std divb jbe pop pop gs add xor jg lret sub lds aam fcompl dec cwtl js mov lret clc cld cld clc pop pop dec pop adc mov mov (bad) dec notl cmc cltd lret int3 inc leave mov call push mov sub lods jge lods sti std mov int test pop aas aas das push sub test es xchg lahf mov aad rorb frstor mov ds clc inc int ss mov out dec add arpl loop stos in in popa in test mov lds les popf sub mov clc ljmp or sti popl xchg mov pop cmp clc es (bad) jb mov add mov test fnstcw movsb sbb or cmc imul pop mov cmp incl add jb jg mov mov pop fsubr lods inc jbe mov inc cmp mov or pop or ret inc das push jno xor out rolb dec xlat int pop orb pop and into fucomi (bad) lods xchg xchg and movsb sbb jno push jge stc push rorb out ss leave or mov ljmp cmpsl out pop in movsl cmc leave push insb lods bound ja pop popf shlw movb push in dec jno dec push mov push std mov jne inc (bad) lcall jne jns mov inc mov ljmp pop mov jno and mov pop ret ret mov aas aas fstp xor sti sti adc add fucom or pop aaa aam bound xchg add push adc leave lcall xor cld jge,pt xchg cmpsl xchg ljmp push xchg adc xchg push (bad) int mov inc mov pop dec in aas push das mov out (bad) test dec cmc mov xor (bad) repnz jge sub neg add inc dec mov push mov adc imul dec mov mov ret pop std xlat aas xor icebp movsb sbb inc fiadd add daa lods jg (bad) divb or lea jge stos stos dec addr16 or cmp decl lea sub movsb in repnz ss xchg out sbb xchg test jp (bad) (bad) je mov mov (bad) sbb and cmc jo inc jns insb insl sbb xchg or jmp aam jle or add call jo xor mov insb cmp mov loope cmp ja xor clc clc addb adc and jns gs (bad) fwait fwait xchg lcall ret (bad) dec pop leave loope jg test ljmp fsubs sub pop aam out cs and mov pop xchg out imul ds push scas stos stos xchg pop or push mov sbb mov sub sbb ja daa xchg clc xor dec add data16 push inc sbb adc xchg sbb lods dec or sahf sbb pushf rcl jnp add dec cli inc iret testl adc push cmp cli cmp jle pusha lock push sub mov imul xchg leave mov add lods inc test aas add cwtl sub fiaddl fstpt sahf adc mov in in mov mov xchg pusha push push dec fsubrp dec cmp nop xchg xlat insl out cmp cmpsl dec add push xchg int3 xchg rcrb adc call and adc dec cwtl cwtl scas jmp push fisttp insl cmpsb mov mov add push and pop jo lock arpl pop xchg icebp repz (bad) popl insb xor aam mov mov aad data16 mov xor mov ss mov aaa bound pop jnp jns cmp insb pop (bad) (bad) add inc test pop jp pusha xor cs sub lods cs mov xor xor and inc iret jmp cld cmpsb addr16 aam dec pop scas and lret cmp scas mov jae xlat movsl fisttpll repnz sub inc fnsave call push sbb jbe xchg inc mov and and sub dec clc not dec addr16 int into fisttp lret pop daa push out xchg in fcompl push roll lods cmp mov dec cs insl out jg cmp std dec add js int sub pop jg in jecxz jl add xlat add bnd jmp push lahf and fnstcw mov cltd adc xlat js ds cmp inc and dec adc iret in daa inc sbb xor sub jae mov push in pop mov ja mov add out xor cmp sub es jg sbb in pop cs addr16 mov mov add add fwait sbb xchg lcall movsb (bad) aam aad jmp es adc scas nop xchg or xor cmpsl and cmpsb insb add push push or pop (bad) push mov cmc lods lods out fwait jp ja add cli pop ss test mov jp adc jo sbb out (bad) or mov xor cmp mull jp push add pop clc (bad) dec pop fsubl and xchg ficom jns cmp div idivb jecxz in jg jo movsb push in and mov nop es fwait clc dec jg repz xor (bad) mov sbb mov lea sub call mov lcall jno nop or inc imul pop out push movsl movsl mov nop dec sarb dec and sahf mov mov adc sub loop jecxz sub mov mov inc jmp push xchg lock mov in (bad) cmpsb shrl inc sbb jns or fsubrl inc sti stc clc mov add mov les xchg xchg scas scas inc inc es in dec popa ds fiaddl or add cwtl and ds xchg add rorb test ret cmpsb iret adc jb stc mov or push loop imul cmp test mov push fcoms fmuls lock enter stos adc (bad) fild in or addr16 ficompl sub enter test sbb pop inc inc ss dec enter inc (bad) into test push cld arpl xchg lds arpl xor adc adc mov sub sbb xor mov ds aas adc enter or or gs lock jecxz xor (bad) lahf cmp mov or pop push fchs jbe lret mov ja inc aaa or (bad) fstp push cmc std and jmp ljmp outsb inc xor mov das lea ret aas movsl sub popf sub cwtl in xchg lret mov js fwait push xchg cltd add pop and aad adc jbe stos mov mov scas mov push rorb test aad test fnstsw xchg adc dec testb pop jbe mov outsl add push xchg or dec js xchg hlt bsf jecxz jae cld xor sti mov stos out mov jge leave mov mov adc jo jb jle pushf sub pop pop aam push iret in test hlt sbb lret pop mov mov das fs outsl jl xlat out test sub (bad) adc pop mov jp fstpl sbb in fwait adc cmp call sbb in js or push or xchg imul push push sub xchg mov and adc jae xchg jl rol pushf sub cltd jmp addr16 pop adc les mov sub add insl orb out rcrb xchg xadd xor aad andl push repnz and (bad) rclb bound imul shlb movsb add ljmp jns xchg sbb cmp add pop sarl mov adc xlat cmp inc xor xchg dec xchg push xchg and push push push sub fidiv imul or fcmovbe jae adc sbb in mov push lahf adc insb movsb js bound jecxz mov mov mov push mov or mov rcrb clc popf data16 pop mov pusha in call and pushf in dec sub mov dec mov enter repz jns pop enter clc (bad) jo hlt cmp and pop inc inc (bad) and popl pop jnp xchg mov (bad) jge fild push add dec push shrb xor arpl loope ret mov lcall idivl and mov std xchg and jae rcl push cwtl leave leave push (bad) jae mov jne loop add adc out lret xor arpl push mov lret mov ret pop std mov dec scas pop mov xor (bad) xor cmpsl jo mov push (bad) into stc divl nop mov aam imul push shrb push popf loop sub fwait xor leave adc lret jns pop xchg adc pop push push nop push fwait pusha xchg in jmp bound repz pop (bad) jno orl push add push xlat lahf fst push add dec dec std cmp arpl pop and pop fwait mov adc inc adc and stc ds arpl jge xor lea xchg xor ficomp sbb mov add jnp push inc popa add mov pop fisub cmp (bad) cmp imul bound roll cs cmp in adc cs nop arpl add fldenv sub outsl add add mov stos adc test mov cmc jne jnp fdiv addr16 xchg icebp je insl out gs fs (bad) jg adc fwait dec ret mov mov frstor xchg dec lods inc enter push addr16 mov xchg fcompl cmp lock push data16 jmp insb fnstsw dec fsubl out and add jae push mov jp jecxz,pt jl mov add xchg clc lea jg pop mov nop mov aaa sub out lods (bad) mov ss xor ljmp and fmuls mov pop lahf sbb mov cmp arpl lods sub inc sub adcb (bad) fsubs pop rcr and ficomp mov idivb sbb clc inc xchg xchg dec mov (bad) and loopne int3 cmp lods sub push jge (bad) push adc adcl (bad) nop pop adc add imul mov xor pop mov dec inc in rclb inc mov inc jo mov loope mov mov out push fstpl jns dec sarl jb and xchg mov out mov sbb mov lods inc in xor push jg sub push jbe (bad) jae inc (bad) sti fdivrl fsubl aaa scas (bad) mov add xchg xor test mov pop xorl push test jecxz pushf pop roll jmp pop inc jle pop jb shrb out dec enter xor into inc jns mov mov lcall bound inc jmp add sarb cmc mov arpl cmp ror mov rcl mov inc add mov rcrb inc ljmp push mov pushf cld orl call jle add add shl lods das fcomp sbb pop pushf mov mov lret adc (bad) cmc mov lret push pop pop adc in adc insl sbb in lcall jns xor addr16 or sub icebp cmp iret inc mov jge xor sbb sub push dec and cmp mov xchg (bad) xchg test movsl adc jne dec cmp hlt sub mov out shrb aam pop sub es mov repnz test mov into dec scas into sub es xlat lahf hlt out jp sub mov and data16 jno push cltd adc mov in mov pop fcomps leave and insl push aas push popf mov js mov jle mov jns (bad) (bad) popl sbb and jle imul (bad) xchg sub int pop mov xchg jne lds cmp int jle sbb (bad) sbb in sarb push inc jl ljmp inc mov xor lds call out out xchg adc xchg xchg stos das xor cmp add out gs clc arpl adc and sub xlat lea daa (bad) push mov (bad) fsubrs lcall adc in lret add pop repz fwait out jl cs out int3 hlt leave fisttp add mov mov push and dec repz cmpsb sub into cmp test mov xchg cld add mov (bad) rcll push and cmp dec push pop (bad) icebp test std mov add push ret mov or jae sub jge or push out js mov ss xor mov dec or xchg dec mov cmp pop pop cld pop loope sub jecxz rcll push insb out push add fwait out jl ja dec dec andb ss mov lea inc mov dec xchg jns (bad) repnz (bad) sbb (bad) xor cs xchg add idivb lock pop pop jmp mov xchg mov add dec out or enter (bad) sahf decl adc daa pop mov sbb jmp lds fs lret (bad) aam jb inc mov enter in movsl mov xchg dec notl test dec xchg mov inc and popf (bad) adc cmc jbe mov mov xchg push sbb push inc lret fsubrl or std loopne xor les les out cwtl shr clc xor lods and pop push clc jnp pop aam and cmc and adc gs xchg out or loopne movb adc icebp cwtl or inc arpl mov sub addr16 xchg pop pop dec lret gs gs mov fdivrp push insb cmpsl rol mov lods xor mov push insl push sbb xchg es test push jmp test aad inc dec inc mov xchg lea and sti jne fistl repnz pop sub test jne ror or (bad) (bad) das out insb xchg fwait add mov fcmovu (bad) cmp cwtl iret lods push cs test in out add enter (bad) (bad) jb in (bad) cmpsb mov fidiv scas dec sbb sbb pop (bad) mov dec (bad) push or test test movsl movsl pandn pop fnsave sub lds xchg mov nop dec xchg stos mov lcall and sahf in cwtl dec std gs and mov jae add add pop dec jle cmp mov rorl inc mov repz test ret xor xor mov out sbb pusha imul mov enter cli cli or adc add cs fcoml adc fldpi bound fstpt lea cmp mov (bad) adc mov push push lods pusha fnstenv js push hlt xchg pop nop mov push int adc add imul inc (bad) mov testb add addb mov cmc mov add push sub mov movsl mov sbb cmp xchg clc sub mov push xchg pop lcall cli jecxz dec jae mov fildll repz push dec or in inc xor mov mov mov orl daa or ficom xor stos mov dec pop stc xor jno nop pop pop iret aad call stc jb or push mov pop out adc mov pop arpl nop imulb adcb ja daa add cmp inc mov pop pop fsubr ficoml clc arpl mov int3 in jae push cmp repz hlt negl push sub cwtl aad mov and cltd aad sti fnsave inc add adc xchg lock or clc xchg xchg push sti enter test aam push and lret and adc sub pop es xlat xchg push cmp pop int3 cli add xchg sub add mov jb xchg (bad) xchg insl mov ret ja xchg push add orb push mov (bad) stos lods and mov in pop (bad) je ja fwait push aaa mov add push push in sbb (bad) fsubrl xchg inc jbe adcl xorl mov mov sub dec sub and out adc cli or lods lcall mov js leave enter mov sub xchg inc inc (bad) (bad) bound adc loop mov mov out mov and sbb mov add popf popf fs outsl shrl enter mov loope sub ret out (bad) rcll in push xchg inc std addr16 xchg jp pop and out pop jb sarl mov dec cmp arpl test sbbl push add in inc jns lods sbb insb (bad) int fwait push aaa mov add in cmp out inc (bad) ds loopne,pn push in gs jbe imul (bad) mov jno push push xchg inc aaa mulb mov out xchg and mov sbb gs fist dec sti push ja xor jne cmpsb ror xchg cli nop je insb pop das das (bad) in inc (bad) (bad) rcr add test (bad) lock into scas repz or sub sbb pop pop (bad) mov ret call cmp (bad) out add (bad) push and fnsave inc icebp pushf adc inc imul out mov mov iret mov cmp int xchg icebp lock in dec into popa fsub loope std mov and iret push jns mov (bad) and ss mov dec pop pop or push lea push imul pushf push jne,pn jmp (bad) adc in je clc mov mov lds push outsl fs daa push pushf pop nop sbb mov adc addl adc push cmp mov out sbbl (bad) fdivr xchg jmp push pop pop jp test pushf loope dec aaa ret inc stos cmpsl sub jge cmpb insl pop jo das sub mov aas and adc clc inc inc pop cmp add xor fcoms sub mov dec and jno jmp scas push mov rcr push outsb xchg mov not sub loop,pt pop fs inc (bad) xor mov mov aad jcxz xor mov mov shrl push xchg stos hlt adc lea fs jns cmp out movb add ss mov cltd addr16 adc loopne ret jp scas int movsl sub bnd cmp aaa jb inc ljmp out xor sub inc jge (bad) lahf jp inc outsb das cld pop adc jns ss inc mov aad dec add stos out inc inc fldenv add leave jecxz cmc dec push dec mov mov popf ret inc push int dec jl outsl dec cmp movsl ret jb cmpb xor xor mov call js movsl pop jmp dec arpl js mov jne cmc xchg fdivs mov add add decb cs insb adc out (bad) fisubl cld jmp ja clc leave xchg jmp cmp cmc adcb fistl loopne out enter sbb xchg jb test cltd sbb cli jb add jno and push adc popa sbb fdivl pop fsubs jnp jns retw je push add subl and jnp jno add into pop pop sub icebp stos stc flds add mov scas scas push lcall mov mov pop sbb shl jns pop xor cld int aam pop test es xchg mov cmpsl dec push jmp sub inc fstl (bad) in popa xchg jp out lock mov or ret shufps stos movsl pop mov mov or insl vmovaps sub push test inc mov (bad) mov out (bad) jno mov pop inc daa mull hlt icebp cmp (bad) fnstenv add pop pop scas jg hlt das and (bad) and mov sbb test mov (bad) xor sbb cltd jno sbb loopne and lea jmp adc xor xchg or and xchg loop (bad) xor outsl shlb popf jge adc into ficom mov (bad) pop pop nop jno (bad) and dec aaa imul lock mov in dec call out movsl lret cltd add scas int3 xor adc loope sti icebp (bad) iret sbb rcl imul dec dec jg push inc xlat sub ljmp push popf outsl loopne iret fcomps in daa sub fbstp and xchg push push xchg ljmp mov out jbe (bad) stc fldcw mov outsb add in pop test sub xor cs push (bad) fucom jne dec xor cli pop hlt jno sbb sahf rol das mov (bad) (bad) fsubrl idivb adc lret jae (bad) aad push and xchg xor fmuls mov jnp fdivs ret mov stos test pop aam mov cs add pop divb std std xor inc xor dec (bad) bound xchg rcr mov ds cltd aad ficomp mov iret push pop (bad) aad xchg out out dec sub mov jp ljmp cltd pusha cwtl inc xchg test imul add fsubl xchg sub test movsb xor call cmpsl stos mov push push insb dec adc mov inc test ficomp addl inc (bad) cltd push daa and stos frstor jp sbb in cmp add mov add (bad) les jg mov fsub push loopew add icebp and in rorl repz sbb mov adc add das xor (bad) mov mov push sub repnz jmp pop insb int sub call stos stos test rcl pushf iret adc jae leave push rcll jecxz (bad) dec mov xchg xchg and ljmp hlt roll addr16 push dec ds push xor jle dec jl arpl push cmp lock mov pop mov push xchg xchg je test cld popa jae push je push hlt inc pop cmpsl pop in mov push push out enter cli movsb ljmp out cmpsl jg cmp dec aad adc xchg adcb sbb sti in aas aas cs js in repz (bad) fcoml fwait jp int3 push inc cmp aam pop pop fs mov repnz fisub cwtl xchg pop pop mov fcompl jp xchg jl scas repz xchg aad mov and inc (bad) mov mov push aaa aaa and pushf pop inc lods jb pusha or and lahf adc jae push sbb pop out mov je out and push (bad) mov push cmp sbb add sti inc adc dec (bad) nop lock mov fimull xchg mov lcall mov cmp mov inc and xchg mull xchg fadd and jbe sahf mov mov lock (bad) incl push stos in and inc mov enter jle roll add cmpps leave hlt fdiv aas pop popa xor mov imulb iret (bad) fdivp xchg popa add mov pushf push mov dec fsub mov dec and lcall dec mov les int bnd movsb nop push int sub imul rolb or add jle,pt push je mov jmp gs pop jns jecxz sahf mov (bad) mov subl in sbb inc fadds (bad) mov in adc add inc lret js jmp mov (bad) mov push and addl jbe sbb xor in out jle mov xor jle cmp addb jb inc fstpt cmp ja gs adc jp dec dec xchg xchg push push sbb sub xor je jb sub loopne mov std rcrb push push mov insb test into and jbe bound jb or mov out pop xor xchg and test mov mov sbb in popf push inc movsl movsl mov decb arpl adc cmp fisttpl and insb and add (bad) cs lret mov pop mov dec ror jecxz mov xchg outsl add icebp jp lock pusha mov inc and lods push cwtl loopne mov sbb clc xchg les addr16 fsubrs inc xor (bad) je or icebp sbb and enter jnp,pn out scas and (bad) and in test xchg add lods dec push daa mov sbb mov fistp mov dec repnz in bound add (bad) aaa mov or lods sbb lcall xchg jmp adc xor nop insb or add cli ret ret pop iret dec jb in pop aam rorb loope gs jbe mov and jp lea pushf adc gs lods lret inc int3 xor gs imul pushf xchg dec mov cmp jg in adc push sti test cmp jecxz sbb add mov mov push ret push out mov push adc xchg ret nop jecxz or popa push xchg sbb arpl (bad) or mov mov outsl and ja push (bad) sti stos stos adc fisubr or (bad) jno addb or rorl push and stc pop xor lods fsubrs insb lock jo popa add insl ja mov iret ret jbe lods and xor in inc or (bad) pop mov dec lea and pop jp cmpsl rcll cmpsl add bound pop mov jae sbb stos outsl fisubr scas mov (bad) adc call (bad) xchg fsubl pop dec (bad) ja fbld dec lret lcall aas mov repz sbb lods mov mov dec xor jb xchg jp popa out (bad) and add xchg and xor add or gs dec push addr16 mov dec rep mov sbb (bad) xor jno dec jmp or or jb jb sub stos mov dec or faddl jl (bad) jns (bad) fdivs test sub pop std stos add ret xchg jp (bad) jmp and cs and pop mov enter mov sub jmp jae movsl movsl fisttpll lods mov pop addr16 sbb xchg js cld push cs fidiv dec hlt mov lds iret mov sub sbb decl fstl add jae insb dec or or jo (bad) sbb loopne (bad) repnz arpl into mov inc push jge dec hlt push inc test fwait lods inc push clts push push sub mov xchg pop ret int cmpsl push pop dec imul xchg enter mov or aam mov adc push es nop jne iret stos int ret push add addl aad pop std jbe inc stc je or in push cmpsb pop insb cmp movsl xchg cmp mov mov bound dec daa sub divb pop scas adc sub hlt push mov jg fmuls push inc jg add aaa push std sbb (bad) mov out xor inc enter sub lahf loop adc add sbb lods imul push cmp (bad) mov movsb cmpsl add sbb stos inc test or inc ficompl push mov push mov adc daa in sahf ljmp decl xor mov lret cmpsb inc ss stos pop sub mov aam jg pop fsubr fnstsw rclb pop shrb js stos or xor lcall clc and popa push jmp mov hlt mov pop sub cltd imul xor sti icebp lret cmpsb and cltd inc mov imul cli mov stos inc mov or push or mov std stos aad inc and push out mov call mov stos dec (bad) mov sub ljmp mov (bad) mov xor jo adc mov mov mov inc xor inc cmp sbb dec jo jae sub and sub fnop adc test icebp push nop jle loop xor icebp ja inc popf aas lods lahf inc adc cwtl cltd mov push mov lahf testb movsl sahf movl mov inc mov push push das (bad) and les mov (bad) fwait pop and stc addr16 inc jo popa rclb jp clc mov mov xlat lea shlb sub (bad) jg push popa or lods xor jmp aad jl movsl insl outsl bound aad mov (bad) enter jb (bad) pop shr shrl inc inc mov adc out test cwtl jmp ret jne fstl dec and test ja mov pop jmp sarb push and push or mov lea test jns cmpb dec (bad) add outsl xor mov fsubs in dec mov push fwait in in cmp sub stos push mov push cmpl lret inc mov rcrl mov pop mov es adc dec shr jb add mov sbb repz adc pop pop out sbb sar pop add jbe call pop scas fsubs pop cmp (bad) (bad) adc leave xor inc push adc jl into or lock cmp in dec scas jmp xor or cmp hlt inc inc adc jno gs xor (bad) (bad) cmp idivb cld add sub adc dec gs and adc add (bad) pop outsl pushf movsl add push pop call cli push xchg out push cmp or (bad) out and xchg jno cmc push jge sub sub push sbb dec xchg xchg cmp mov lock clc lahf and cli cli or mov fildll rcl mov or repz jnp xchg xlat mov jnp or iret (bad) (bad) jmp lcall call lods or adc in lock icebp fs jl stc loop loopne std ja scas jge (bad) movsl sub xor sbb test es adc movsl fwait lcall adc das push mov out dec sbb mov ret outsb iret clc and jae test fsin (bad) inc sub idivl (bad) sbb push movsb cmp cwtl add mov jl pusha sub (bad) or pop mov cmc dec popf push xchg mov jnp and pop jmp fwait jae push stos lods rorl sbb xchg sbb mov arpl mov std outsl scas adc mov xor cli aam sbb popa loope mov mov ljmp mov int3 xor popa sub in jo incl mov cmpl jo lahf sbb pop lock jo or inc fsubl iret (bad) ljmp mov ljmp ja cli lahf inc iret movsl in out mov inc int3 test lods cli pop dec cmp cmp cmp adc clc insb pop imul or stc test add leave leave ds call xchg jne adc cmp cld mov mov ja inc in lahf imul cmc jae push add add mov inc lret adc inc inc and stc stc loope cwtl js (bad) sub or idivl (bad) xor xchg xchg dec lds sbb flds rorb jmp es out mov mov icebp mov repz stos xor movsl and gs sbb add pop cmc subb sub push into into and (bad) mov (bad) (bad) sahf rclb fnsave jge (bad) aaa imul jo outsb pop repz cs push xchg inc jmp sbb adc push mov das dec sti sti fs sarl add lcall mov or push adc cwtl mov adc sub rcrl popl adc (bad) je mov jae inc xchg sbb dec (bad) push push sbb push push push fldcw or stos cmp insl insl push xchg pop fnstcw ljmp jl (bad) sub int3 ss dec add cltd mov push mov jbe fcoml mov dec cmpsb bound inc jnp jns sti pop or (bad) lret jg sub cwtl lds jmp xchg xchg mov aam mov lahf lahf out inc test cmpsl mov std aaa (bad) jnp jo dec movsb add das mov jp sub xchg mov jle (bad) mov xor xor insb jb movsl movsl test mov cwtl mov stos cmp stos pop pop clc mov xchg stos stos push test in push jo jb in pushf pushf jne pop pop aam add cwtl cwtl rcrb mov jb inc inc (bad) mov sbb lds mov inc adc dec insl insl push inc icebp sbb in jbe xchg xchg xchg rorb cld sub int3 ss dec add cltd mov push mov jbe movsb push mov outsb dec bound jnp jns sti add or sub xchg xchg and aam mov lahf lahf out inc test cmpsl sbb std aaa (bad) jl jo cmp pop pop inc scas push in fcmovnu jg repz inc into pop leave or mov idivb xlat pushf test sbb pop add dec sub popf ret add out xchg xchg dec out cmp insb insb sbb out out and int3 mov xor into into aam or dec mov mov divb ret movsb movsb push (bad) setg push notb xor loope dec in pop ret dec dec and shr lret lret mov aaa jbe inc aaa sub hlt icebp icebp mov pop push nop js mov sub push pop xor jmp fdivrp mov mov or sti adc add dec sbb loopne mov fist adc mov insl push pop (bad) sti mov or insl sbb nop fcomps mov or clc or mov mov in or out nop pop pop sub cmpsl icebp test ja jbe pop movb mov es mov add push jae stos outsb (bad) popa je push pop xor js ret xlat adc dec scas es les (bad) jne cmp cmpsb fbstp out or cmp dec (bad) jmp daa ljmp test test ss lods or jmp fcomi test dec or xor sub jns and fs and je cli pop fist jle jno pop add mov add jbe fistl stos lea jmp inc xchg bound inc out inc cmp add inc (bad) fistpl (bad) pusha xor pop inc je inc sbb nop inc test lcall push (bad) sti (bad) test mov in and nop leave jecxz inc adc pop lret or std xchg mull insb in and movsl add adc sahf mov aad pushf call add adc add sbb fsubrp mov xlat jno pushf cmpsb roll mov fsubrs mov movsb in and mov xor out sub lods sti test dec cs test out pop add xor inc stos sub clc rclb sub dec dec movsl movsl cmp mov dec mov arpl cltd (bad) sbb mov mov inc inc add pop inc call and or pop push pop rcrl jno or jb out iret pop (bad) sti mov rorb in out (bad) in xor pusha jbe add enter push imul fs mov dec shlb in sub cmp in fist push dec xor inc inc jae,pt adc or icebp mov add jbe mov fnsave xchg push popf mov lcall or aam push add std cmp xchg pop mov xor adc (bad) sbb (bad) shll adc mov dec cs mov in ret ret dec cmp into mov les mov push dec fwait inc in cmp mov mull dec fldl add mov fstpl aam movsl fdiv sub fstps repnz lea sbb pop and dec jl les inc inc or mov pop mov xchg push push fstp push push mov packssdw lret inc stos pusha mov aas mov aas lock pop and mov jg stc mul inc xor scas mov pop push pop sti popf push clc sub lea div es xchg mov aad jno (bad) push ljmp out mov cld or sub fs pushf sub mov inc out cmpsb dec mov vpackuswb stos inc shr lods lods lods jbe adc insl push push icebp adc in imul out lods xchg negl clc cmpsl mov ss in cmp mov inc and outsl (bad) adc (bad) push mov repnz xor mov sarb adc sbb or mov cs daa int and daa mov inc jae,pn scas dec jbe repz mov adc lret inc or js sbb fildl in jecxz jg push mov push enter mov cmpsb int3 sbb and mov or imul stos stos out gs sub js cmp dec xor lcall cmp or and sub dec pop mov add xchg (bad) xchg scas cmp jmp lret scas xchg push xlat xor nop cmp insl mov lock sbb divl fidivrl leave repnz inc cmp xor das je je cmp stos pusha mov scas xchg jne inc movsb clc test mov movsb andb adc stc dec mov add shl mov nop dec push stos pusha pop std (bad) jb xor jo jl je rorb push push cmp inc jns into xchg fidiv aas jge mov push call dec sub push test aad jmp popf dec fstl lcall push sbb push mov adc shll push jae mov imul add testl add and cmp loope int3 sbb lds lods pop iret les pshufw xchg int3 cli mov xor dec hlt mov or sub xlat adc fist imul mov push cmp sbb outsl or xchg mov jnp xor push loope pushf mov stc mov lods pop in fildl cltd jge jne cmc jl fistpl cmc lcall xchg jmp test fldl pop ret sub addr16 daa and (bad) push sbb xor jle jecxz pusha and and shr clc clc and mov int3 add aaa jge fs ja or and mov leave sbbb inc sbb aam mov out push ret mov sub mov in addb dec repz pop pop shl hlt test test push xchg cmpl fs sub inc xchg inc cmpl les mov je sbb mov adc (bad) out imul pop adc fidivl inc les or sbb jmp dec dec mov xchg stos push and inc mov push push adc jns inc mov std std mov dec idivb call rcl adc sub iret adc leave xor inc or ret int in mov push cmp xchg stos daa scas dec cmp adc popa jno mov pushf lock push insl das jno adc pop jnp sub add sbb es pushf jp dec pop aam pop in adc inc cmp push ficom lea insl xchg (bad) mov xor xchg push sub jbe mov call push rcrl mov rsqrtps or fsubr outsb lock inc jo in sub inc orl pop cltd in fisubrl cmpsb xchg scas mov pop jae sbb idivb iret jecxz enter (bad) jp scas fisubrl jmp add (bad) test imul sahf mov mov mov cmp sub and addb int or inc in dec (bad) xor inc int3 test and lea aad xchg adc dec outsb mov push imul ret sub dec scas dec inc mov mov cmp and aam lret jecxz adc movsb push mov setg pop xor sbb xchg push ljmp aas push in inc ret dec xor into cs xor dec dec ja or ss or push add push stos xchg mov jno mov pop or or sbb mov dec sahf or sub add mov mov adc jg fisubr lods ds or or lods jbe mov jbe fwait pop sub movsb subl test push gs (bad) (bad) pop imul mov in imul sbb sbb adc cltd push push push andb scas and aas add adc jne add fiadd (bad) fcom inc cltd lcall mov jmp adc jne cld xchg fmuls arpl ret pop mov mov sarl in pusha and pushf sub divl rcl lods or cmp (bad) xchg adc testl icebp nop sbb loop out insb incl dec ss add sub outsb push cld jp sahf sti fwait mov inc pop push popf popf sarb fiaddl xchg (bad) popf hlt sub sub jl xor and push cmp repnz lock adc pop test push lock add into lret scas mov add fstps push push adc push adc sub dec fiadd dec shl imul sahf jnp cltd loop je,pn dec (bad) lea add cltd inc lcall jle fwait pop clc test repz and jae sub push (bad) cwtl xlat pop mov ret or ds rclb ljmp xchg xchg (bad) adcb sti ret and xchg push mov push xor jb repnz inc push out inc jecxz dec dec sbb jae lods adc xor adc pop xlat lods cltd adc mov or adc ljmp jns mov push pop in xor mov or call xor clc mov es and imul pop idivb add aaa mov push or (bad) mov mov jne out pop aam mov lods inc cmp dec xor int3 ret mov scas add dec adc dec cmp stos jp xchg pop ljmp mov in ljmp popl xlat cmp jbe insl xor push mov mov add ds cli xchg xor xor inc or mov and xor sbb in into fs cmp and ss in add clc jp aas pop push push test mov push outsb sbbl mov int pop cvtdq2ps cmpsl cmpsl outsl mov pop xor adc pop in lahf xchg test mov xchg add pushf clc fdivrs mov cmp nop ss push loope bound fcomip pop lea pop inc iret xchg pop add cltd std rol push (bad) iret insl adc jns aam in push xchg outsb js cmp mov pop xor jb jne add mov and gs inc sti sbb aad mov add pushf mov aam sub addr16 mov movsb int into inc out movsl pop dec sti aas push push aad add xor (bad) fsts add fimull cmp pusha inc mov push xchg xchg fwait pop (bad) int fwait cld pop xor mov stos and mov add inc or addr16 lret add mov adc pop pop xchg xchg cmp mov sti jle mov pop popa and sti int mov and cmc ss push mov mov mov adc or dec outsl jmp cmpsb sbb fcmovnu cmc cmpsl sarb jno pop jp add cmp inc mov push gs test std std iret cmpsl sbb sub cwtl pushf pop xchg pop mov sbb inc mov mov cmpsl insl sub mov bound and pop pop push pop jno out and push and push ret cmp dec pop jb bound push mov out mov (bad) push fnstenv add je repnz std add imul jg sar mov adc aam xchg cmpsl sahf jno lods push mov sub mov (bad) xor push fisttp pop aaa decb jle popf pusha rclb push nop add sub mov sbb pop adc (bad) jne repnz sub (bad) clc mov inc xor dec mov das pop aam cmpsb pop (bad) scas imul imul inc jno pop xlat mov (bad) pop and stc adc insl xchg ja outsb inc loope pop arpl pushf cmp cmpsb xchg sbb (bad) fisubrl adc mov daa daa jecxz (bad) int3 cmp or addr16 pop jl add mov adc arpl out mov pop inc cwtl sbb dec add aad xchg movsb inc (bad) xor lret mov push lahf (bad) fisttp or pop (bad) leave xchg int aas out dec and test mov add mov (bad) push pop jae xchg xor adc sbb cmp pop mulb fwait pop jg xchg add (bad) xchg mov pop ja add mov test outsl adc push cs xchg lahf cmpsb mov push add addr16 add ljmp inc xor sub push clc leave insb mov lods std out repz inc inc adc sbb imul inc jp adc xor xor leave mov fucom test ret pop (bad) xchg add inc clc add mov or pop loopne daa push dec icebp and cmp fwait push push push cmc cmc or pop sahf stos cwtl lea cmp jno js push insl push fwait inc mov xchg out xor cli mov mov fwait cs stos incl lahf inc push stos xchg adc dec mov mov pop les lods push mov dec sti enter jno mov lea mov mov xchg dec push lods sub mov mov je std jle xlat inc les jb shl call inc (bad) pushl ja push mov je jb clc popa inc pop push insl ljmp imul dec andb pop in cmp data16 mov ficom lds sbb push and sbb sub sub pop and mov les and mov pop pop mov jmp iret and (bad) mov pop add jne pop mov pop adc lock repnz add sbb lock mov adc into sub add mov sbb in in mov push jle fucomi push or les pop mov xor mov and mulb stc daa lahf pop mov pop cmp sahf jb es jle outsl gs pop jmp xchg cmp xchg ffreep pop fsubl shll (bad) cmpsl int lret leave pop xor mov stos hlt mov sbb push or pop xlat xor dec dec mov cmc jge pushl and pop xchg adc scas movsb insl jmp lret adc bnd mov and jbe mov dec popl jae jnp inc add nop xchg aam in or popf cmp ss inc fs dec hlt ror xor aam (bad) or popa or call lret mov and xor sbb sbb stc mull cmpb call fsubl add js pop pop leave inc pop or add or fidiv and das rcll fistpll mov jl pop shrb fcomps lock xchg (bad) gs xchg pop pop mov or test imul add fstl and ljmp and cmpsb adc mov decb (bad) popa sbb lock gs lret dec int adcb mov fbld pop cwtl bound cmp sub out pop cmpsl pop jno rclb inc fbld test cmpsb rol insb imul add inc push ficoml jbe pop test out adc fsubs loope gs shrb int3 inc sbb dec push data16 sub push cmpsb outsl push jle add aad fcompl push nop add cmp jmp mov jmp mov idivl repnz xchg fisttp jg cmp push fs mov cmp add inc (bad) scas shrl dec pusha movsb pusha daa sahf es imul hlt cmpb fs daa mov push pop fiadd call cmp sbb sbb dec xchg adc and aad pop das sub jo rclb sub dec adc mov call dec pop lahf mov sti add cmpsb imul push mov hlt (bad) and ret sbb cld cmp lods in pop adc pop lods jmp cltd stc sbb xor repnz inc mov push push dec xor popf fcoms imul adc sbb iret jnp stc faddl mov push jno push ljmp cmp test inc clc fdiv adc mov fs push mov mov cld rcl lcall cmc aaa xor outsb lea iret shll cmpsl addl inc jno insl xchg lods cmp dec mov insb cld adc push test out insb jg jmp out mov mov dec sub lret mov aaa mov fisub cmp xor inc imul ret and mov inc sbb out xchg inc faddp push xchg sbb loopne dec mov ret out push inc inc adc rcr push dec mov dec add shlb ja in (bad) rolb (bad) pop stos xchg scas sub div mov pop outsb and mov int3 sub popa or mov cmp add daa imul fcomps dec xchg inc aam pushf pop adc inc push nop xchg jecxz in cmp out outsl push rclb push pusha add push rcl and stos cwtl mov add pop lret mov (bad) xor fs jmp fistpl jmp dec mov add xor mov or loope stos sti mov add mov scas aad mov dec cld sbb sub cmp fsubs ljmp int3 ljmp int3 jg movl dec sub outsl or push ljmp lock scas add cmp xor sbb push mov cmc inc cmpsl loopne ss pop mov push pop (bad) push jbe nop sahf das push push in in adc push lea xchg adc jnp dec mov (bad) (bad) push fldcw jo xchg lahf stos repz (bad) cmp scas mov mov lahf pop jbe xor cmp push xchg cwtl and (bad) or push mov cld enter data16 (bad) and aad adc leave pop (bad) stos scas outsl jle mov jae jp sbbb dec mov bswap (bad) adc (bad) fbld shlb and fnstcw (bad) popa mov aaa xchg inc sbb jne daa out mov out adc push and arpl pop mov mov sahf lods lds and pop sbb dec jge incb mov imull push push push rclb lret rcll ljmp xchg adc out sbb gs test ljmp jl push lock sahf jecxz adc bound sbb sbb or loop jns lahf xchg js lret (bad) rclb aas pop ss jb jecxz mov notb mov cmpsb pop fnstcw xor cmpsb add insb jns (bad) inc andl cmp mov jg cld andl fsubrl pop inc fimul add mov lock insb (bad) add bound test ret rcll inc in movsl mov fsubl jmp sbb iret movsl sub in cltd adc fwait jmp insb inc add inc (bad) jo jnp xchg aam mov out inc out std lcall into dec jmp push lahf jmp les sbb mov mov sbb mov loopne add fcomp mov mov lahf fbstp and divb add incl pop xlat imul (bad) add loopne cmp dec push arpl xchg push pusha test jp lods mov adc xchg repz shr addr16 inc cld imul and cltd sbb mov out mov dec roll jno pop ficoml test mov mov sub dec xor loopne jo adc sti test fdiv testb clc int3 dec inc lahf cmp jecxz add xchg fcmovnbe sbb mov dec leave or dec hlt cmp test sub and call (bad) xor call in pusha jge xor out repz mov lds fdivl mov push sahf sub ss sbb jp in lods test in fs jno xor fwait push aas mov xchg pop popf movsl in mov shlb adc xchg jbe pop mov ficompl test and xchg dec hlt (bad) (bad) xor inc pop popf cmp adc inc cmp lods clc es (bad) push jae xchg out out add fidivl push rcrb mov mov fldl sbb leave lret loop fadds mov adc jnp shll subl mov scas rol adc ret xchg push aad mov adc ficoml gs jno jmp cmpsl loop xor xchg in push outsl sub outsb popf push adc adc enter mov jmp fimul mov xor aaa push jg popa xor jge sbb mov movsb push push out cwtl icebp add bound adc pop (bad) dec add adc test data16 fadds (bad) arpl int sahf fcomp rorl dec bnd (bad) add add jae sbb mov outsl push push xchg orl inc jns mov adc sti jb add mov lea mov pop es mov adc lods add xchg dec mov jno cld mov (bad) decl in in sbb frstor add icebp mov rorb pop arpl cmpsb jecxz lret add rclb outsl fidiv push (bad) or mov mov mov mov push jnp xchg mov cmp fcmovnu xchg xchg hlt dec push cltd (bad) shrd cltd iret test repnz add rcrl icebp xchg jecxz sbb xor dec fnstsw cmp pop hlt jle stc testb out xchg fidivr testl gs add mov sbb mov xor lds ljmp or dec add sbb push into jp inc and repnz lods cs cmpsl pusha lock addr16 push pop fisttpll test pushf in mov fnsave xchg (bad) iret inc add cmp or cld movsl loop repz cmpsl cmpsb je dec std cmp mov sti into adc cmp mov lcall cmp pop and ss push ss (bad) adc jnp pusha icebp out out std pop pop dec jge jns xchg xchg mov sbb lds inc sub stos es push daa pop into add cmpsb cmp adc insl clc out nop sub jmp jnp ja xchg jo into inc shld push insl sbb lods rorb inc xchg pop sub sahf cmpsl int3 cltd daa pop pop dec loopne cmpsb xor jae jle jle jl jns and shlb push jbe repz mov hlt jecxz push lods sub test repz add enter dec fs jp incb mov aam ja push movsl loop ja cli mov jae int pop shlb xchg push mov dec and cmp movsb cmp test add pushf pop push es push mov imul fsubs lcall sub in xor mov lods sbb scas lods paddusw cmp sbb pop pop lcall clc mov sub (bad) fstps sub fwait mov mov push adc lods test push push xchg sbb enter xchg cltd mov (bad) mov sbb sar mov bnd xchg add out insb pushf mov adc andl add add mov mov (bad) mov jg jecxz push lcall (bad) (bad) jb mov cmpsl daa aam inc int push (bad) (bad) jecxz (bad) push cs xor mov (bad) jnp popa mov sbb repnz nop cmp das sahf push js outsb je pop scas pop out notl mov adc mov dec int mov into mov cmp xor dec (bad) movb pushf pusha inc mov movsb and in loopne sbb pop or imul int xchg and js stos push sbb hlt insl (bad) (bad) push jo xchg (bad) outsl cmp scas sub xor or pop push add mov rcrb xchg fcomps ss (bad) xor in data16 or aaa pop js push js and movsl xchg jl pop sahf push fildll iret ja mov in sahf sub outsl fisubr add and pop push mov mov fs inc mov add imul fisubl jno loopne jns jg cli adc push adc mov pop xlat insb inc sbb ds les or jnp jmp xor jae lcall aam and in cmpsl mov ficompl movsl sarb and inc ficompl jp mov push cmp cmp cmp cs xor push mov inc out out mov sbb imul lret sub adc mov inc mov inc ret dec add jbe std mov adc movsb push (bad) (bad) mov mov je insl mov fs in loope and xor sub mov or pop dec je fild mov add sbb scas loop cmp jecxz rcrl test (bad) stos mov (bad) notb aaa adc ret bound mov cmp in ret mov push aad mov add xlat adc cwtl pop shll daa movsl gs cltd dec pop daa (bad) cs scas push sub jl or adc mov nop xchg incl (bad) jnp and adc ficom cmc jg or adc je add pusha ret adc adc insb sbb add xor (bad) in pop lods stos cltd xor inc sbb outsl sub and cmp in pusha jecxz and and notb xor adc scas lods pusha lds cli or cmp jmp idivb stc enter cwtl (bad) stc jp adc shrb dec scas lock fldt mov sahf fldl shlb call movsl movsl fstl cmp inc call inc jmp xor out daa mov push leave add fdivrl dec mov adc mov push dec arpl or sbb dec mov bound adc cs dec pop orl push mov dec out movsb pop jns cmc mov cs test (bad) xor stos dec add xor cmp fldl int test inc pusha mov mov test icebp repnz xlat fisttpl es and clc data16 mov stc aas sbb dec idivl out rcrl mov loopne sub pop push pop jle ret adc push push add xor adc jg mov lret sbb ljmp cmp xor dec lahf adc (bad) mov inc cli fs lea adc mov xchg add aad stos cs add popl or cmp inc pop adc pop jae pop cmp mov xor or sbb repz mov std and push fwait inc rorl sub pop enter insb add nop mov sbb jo inc sbb adc ss mov pop xchg xlat sahf pop add mov mov stos cltd int3 popa jmp jbe dec dec ret xchg jns push (bad) call xchg pop (bad) sahf not pop push pop sub dec xor xchg fmuls push arpl add mov enter loopne push push add jb aam adc dec and cmc lcall pop fsts or mov sarb loop cwtl inc (bad) movsl add movsl movsl mov lods lds aad stc out xchg adc out add cld cld mov jne xlat mov popa adc xor pusha arpl pusha and and adc jb adc int3 and sub outsl fistpl ja into and aas lods xchg push xor clc add lcall mov (bad) and loopne cmp xor addr16 or ret es call fisubr rclb mov popf push push xor xrelease sub leave push push insb cmp mov js push insl push jmp inc jnp repz into ret push push mov (bad) ret lcall shrb repnz push cld arpl in cmpsl int xchg in int3 test sbb push test lds pop pop bound xor jg clc pop sti lcall stos ror jae mov into cmc (bad) mov out mov cmp fstp add (bad) lock jmp push daa push push dec ret loopne jns test mov cmp xchg mov mov aam sbbb arpl push xchg arpl imul sub jne and lock arpl pop or jns mov adc adc xor sub loope adc pop and cmp jne dec xchg (bad) fcmovnu pop fldenv subl or push movsl sub ss adc lea js cli xchg add call pop push and xchg pop sub int3 pop das fidivrl jo loope push jnp push adc (bad) xor dec or (bad) popa adc pushl cld mov je jmp aaa sub jmp rclb mov (bad) adc pop cmp aas arpl xchg adc cmpsb jne int3 imul push out cmp mov cmpsl stos cli fild hlt (bad) jae add (bad) repnz mov insl jmp sub jo inc and or jl ss (bad) dec or xchg push dec scas scas dec test add mov cmpb clc jle pop or pusha adc aad jp lret outsb jns outsb clc and movsl xchg fs xchg jae mov out add std mov inc xor sbb inc (bad) pop aad push inc or int3 in icebp inc test mov cmp inc lret xchg sbb push and cmp cmp push adc sbb adc and mov sub (bad) mov lods (bad) pushf cmp pop xchg pop mov jl and mov jp and and daa mov repnz adc dec (bad) pop aas push xchg mov xor dec insb pushf fwait fwait inc mov cmp leave les (bad) jns jbe je dec mov add jb fiaddl fcmovnb mov loopne jmp push push (bad) dec ss jne sub aam adc pusha sub std jbe lock lods push push loopne sbb mov or jnp mov sbb jb jmp rcrb rorb mov mov fidivrl cmpsb adc xor ja mov mov addl inc repnz test sarl sbb popf loope xor insl lret popw sub cltd mov fiadd mov xchg jo dec ret xorl pop inc lret sahf lahf lods js test lods mov jle arpl fsubrl xchg mov jle iret frstor cmpb in ret ret dec cmp repnz xlat repz dec ja jnp and (bad) aaa icebp icebp stc lea adc ret in xchg push es pop pusha mov roll out jns in cmp (bad) pop jno data16 pop and cmp lret lea add lret fistpl and pop inc in or je bnd xchg loop push pusha jmp mov pop mov call or test mov iret insl adc outsb sbb mov (bad) xor repz sub das push call xchg mov cmp push (bad) jg mov push imul insb popf enter xor add pop jno out cmp ljmp (bad) adc fs jbe test or aas test scas daa andl pop sub mov pop push (bad) je pop in cmp and lds adc leave mov add dec je fldenv push out mov rorb inc mov (bad) das daa sahf mov xchg sub cwtl cvtdq2ps jle (bad) in ror (bad) jmp jl lods adc xor lods lods push sar in lea or inc inc mov fldt pop pop push lods aad jno or (bad) mov or dec into nop xchg jl test or xchg loop (bad) icebp mov ret repnz fistpl sti adc bound jp mov insl out add and sub sub pusha lret fcomp inc mov aam xchg sub addr16 jbe lea lcall ret xchg mov cmp push cmc cmc outsb rcll fwait ja xchg icebp sbb mov imul sub cmp (bad) and inc mov add les jecxz push aas xchg add and jle bnd jmp cs xor push pusha sub std dec (bad) jle jno xchg fnstcw xor and pop in decb or clc stc add xchg dec (bad) or (bad) and test scas pop inc inc daa es bound mov into (bad) (bad) jae inc lock push lods dec mov sbb cmp imul xchg imul mov push movsb gs leave icebp rcr gs jne or cmp idivb int3 inc test cs loope cli int inc cwtl cwtl loopne aas mov dec lds push ror inc (bad) jecxz or push xchg pushl cmp cltd and es div imul inc jno test sbb sbb imul fsubrs adc dec or xchg xor cmp gs sbb pop xchg aad mov cmc fisub or int push mov mov mov add popf cwtl xchg les mov pop div loopne nop pop xchg xor sbb sarb int3 cld js mov mov incb outsb outsb popa (bad) mov lcall mov jo adc jo jno pop fwait popa add mov fstl sub pop and dec std push mov test daa pop aas dec stos daa ss mov push lods xor orl lock sbb outsb xchg mov sahf jns cmpsl xor dec rolb aam out cmp frstor dec rcrb push test shlb or adc shrl pop jae aam movb std jno push daa std push test test or out add out inc sub push lcall (bad) or mov mov sarl cmp loope dec and in inc sbbl addl outsb cwtl xor movsl pop sbbl shrl decb sbb imul xchg stos adc xchg sub ljmp fild movsb push (bad) lret aas xlat and cmp sub jae mov lahf rolb cmp cmp faddl push adc jae xchg scas icebp mov sbb push insb les xor adc sti repnz inc ret inc stos push lea xor push in jmp xchg or test sbb fstl js cmp (bad) jmp sub push mov adc push sub inc jno push rcr fsubl repz sub add fsubl fsubl popl sub repnz mov mov es test push movsl iret mov xlat les ret jo imul fisub mov inc adc imul cmp fwait lcall pop idivb pop jge cld lret mov mov xor sbb out iret out or js cwtl daa inc imul xchg ja inc enter int3 add adc mov push sub stc jno imul jmp dec test fwait mov push lcall jns mov sub pushfw fistpl inc mov or subl movsl movsl push cltd divl or dec dec rolb insl sbb xchg imulb mov lock xor roll mov (bad) add and mov rol (bad) xor cs in in test in fcmovb or in xchg cmp inc je int3 adc ret sbb jp (bad) mov xor mov insb xlat push mov pop daa daa loopne iret inc movsl mov cwtl cwtl cs (bad) jge fist movsl lods pop cmpsl dec int3 and and test fdivr (bad) enter or lcall loopne (bad) in cli es arpl rclb popf ja in inc add adc xchg jae test xchg adc cmpsb repz mov inc rcrb fs jp jmp jmp leave jbe push adc mov dec add jno jo xchg gs mov fs jg lock push sub (bad) sbb mov (bad) jno push pushf cmc mov push mov cmpsl int3 sbb loopne test or out addr16 fcoml xlat xchg scas sub adc pop ret xlat adc (bad) gs push lods mov pop hlt mov xor movb push lds inc push cmp (bad) pushl shll fimul sbb fcmovb jp loopne cli out jbe xor mov test xchg bound out jp insl inc stc movsl (bad) push cli stos fbld mov push insb sub jecxz pop mov and (bad) lret lcall scas test mov mov xchg aad add xchg push sub dec mov cmp icebp push pusha pusha mov outsl repnz (bad) push add enter lcall adc sub fsubrs int3 aam jg and lods push ljmp rclb inc test test cli inc fwait mov cs pushf adc data16 ret adc jle and pop push sbb add ja ret xchg mov fidivl dec sub inc int inc lcall lret inc push push push mov inc cs jbe es inc addr16 call or sbb jp mov jne dec ja inc sti (bad) or jp lea or fmuls sbb push repnz out pop ds mov pop cmpsl mov add scas jns jl outsl scas fildll mov xchg fcmovu sbb pop lret xchg pop insl pop rcl js sbb and out out pop pop (bad) mov clc mov loopne cmp xor pop push ror sarl push jae jne imul jge and xor sbb xchg push aaa pop mov mov es clc inc int3 push cmpsb sub mov jne popl xchg jns cmp call out jns or lds jg sub mov inc pop (bad) push aad arpl ret fsubl xchg add adc push push gs inc lret mov rolb std pop out jae aad sti (bad) adc lret jle mov cli rcll mov fnop xor aaa scas pusha subl mov jo mov enter xchg ficom mov adc cld mov rcl insb std sti cltd rorb jg mov mov lock push cmp cmp cmp inc xor jnp clc push sti repz mov fistpll inc jo mov jg cs mov negb push sbb mov push sub inc insl in lock push and testb fs xlat out jge sub mov jmp jge sahf addr16 xrelease inc int3 jne shrb jle mov sub jg mov mov popf outsl daa sbb mov push pop mov sub jnp,pn dec test icebp xor insb insb mov dec iret inc into inc or ficomp mov imul dec dec inc xchg popf popf cmp test cmpl adc jmp xchg pop into imul jno pop sti (bad) ja lock stos sbb cmp stos cmp or mov pusha and stos dec (bad) aas inc leave mov xor ljmp and call popa ret mov add popa ficoml sub mov dec fmul cmp fisub xchg ds dec xor es dec jne add mov (bad) xor dec mul hlt cmc mov and mov xchg mov aaa daa bound fidiv mov push push xchg sti jecxz in clc stc xchg inc cwtl adc jl push push pusha cmpsl loopne or (bad) lods mov dec mov inc lret mov movsl pop sbb inc (bad) mov outsb xchg sbb in int mov js sub add in int3 and popf pop lret adc jge xchg sbb xchg fdivrs in bound fisubrl scas (bad) cltd add or jnp inc mov jmp nop push jmp dec pop sbb cmp clc sub jl jno or pop std stc xor jp add (bad) popa shrb jmp sbb add and adc pop xor push add (bad) xor sarl push or sub add xchg and jg push push push push jbe mov xchg jnp lock dec movsl cmc mov mov adc rcrb arpl push cld jbe lock dec dec (bad) dec sbb or pop xchg push pop cmp pop popf push mov jnp adc fistpl lods jbe bound adc pop inc int sbb inc cmp pop inc pop mov cmp add mov (bad) xchg jo mov jns sbb bound sub xor mov mov test or loop xchg rcrl push and stos xchg xchg arpl sbb mov sub dec adc and aad mov popl sbb es jne add mov popf (bad) in int and xchg jl add push mov (bad) ss test xchg das imul or push inc ret push mov xchg mov (bad) jno jmpw (bad) int sbb enter sub mov adc (bad) or pop xchg push jns pop pop jbe pop adc xchg lods test in mov cmp js mov sbb xchg lods pop inc sbb push icebp decl jecxz jle cmovo mov roll xchg test sub lret inc add es aaa pop lret inc jmp lcall add add sbb or mov mov pop sub imul xor sbb push icebp out sbbl ficomp mov or jae ret out mov loope mov xchg daa les mov dec mov push lods xor sub push cmp popa ror es (bad) xchg fdivs cmp fcoms lea sti sub in mov cmpsb xor enter lret sub add test inc aam jnp movsb or rcrb movsb pop xchg aam jno jmp mov ret and aam sahf (bad) or jecxz sbb je adcl push sub pop sub stc inc and add and mov (bad) fwait jecxz movlpd xchg add arpl sti sbb jecxz iret and push out push test je xorl jne sbb mov pop push (bad) gs sbb ss das (bad) adc xchg pop sub ret sub icebp repnz xchg enter pushf inc adc clc inc sub pop adcl rol pop jne inc in repz pop fsubl dec and mov sbb push fs mov dec int pushf cwtl ljmp faddl xlat sbb scas xchg lock std cmp jb add or call lods push insl mov xorb (bad) fsubrs imul mov xchg mov aas sbb add sbb aad (bad) leave cvtpi2ps inc mov fnsave bound nop int addl sbb add loopne cmp rorl mov cmp scas mov push fdivrp aad push and ljmp fmuls lahf mov imul dec aaa scas xchg and cld lods lods outsl mov xor outsb inc lret pop mov (bad) and ss jae sbb xchg in outsb pop inc (bad) jbe mov mov out out xor inc rol add cmp test in push dec add push clc fstl lock mov jecxz testb mov jg xor bound jl call mov or call adc pop sbb lret loop jmp add movsb sub lcall pop (bad) scas mov add pop ljmp dec jl loop mov fstpl pop cli ds leave fwait pop pop and cmp pop push xchg popa push push ret ret cli inc cmp inc push push inc inc test cli or mov sub mov mov xchg adc sahf mov push adc (bad) lock adc cld int rcrb add (bad) or out mov dec (bad) xor push mov adc push mov cmp icebp rcrl pop sub jge sub loope sbb inc xlat stos xchg lret mov xchg jl out adc rcll cmp cwtl mov mov ja sub stos sub les fxam lcall cmp loop fwait out jne inc sub cmpsb inc and sahf mov or in sbb aaa out ret nop leave sub ljmp (bad) pushl stc cli cmpsl sub (bad) adc adc mov je jne js sub pop loop mov or xchg pop into test inc cmp je test mov in dec pop mov push daa and movsb sub pop inc cmc cmc or cmp fwait dec test and xchg cmp mov nop pusha fs sbb xchg sti cli fist jbe add mov sbb mov dec jno nop pop pop popf jne cwtl test lock pop push aam mov and or or push sarl loop sub jo in adc shll fadds xchg cmpl cmp pop popa rcl push and dec jbe pop xchg jno xor pop jno,pt fisttpll adc lods cltd push loope out push mov popf or ret and pop add lds mov in aas fwait lcall sbb scas aam push add inc mov fs lret out or cmp rcr mov xchg add mov lea push xlat in sbb in mov xchg jns jns lahf dec or mov int adc push in jbe xorl das push mov mov xchg push sub fwait jge xor dec mov add ret xchg pop adc mov daa cmp and jbe,pn mov mov mov mov aas jle jae rorl jle or shlb ror imul lods mov popl add test xchg (bad) pop stc lock dec nop pusha push or call jmp scas xchg out sub in push sub cmc ss enter cld dec sbb inc push (bad) mov dec adc movsb decb xor dec mov push or sbb or dec icebp mov mov scas or xchg leave ss dec mov das fistpll test test insl sbb dec ds cs jg mov in cltd outsl jecxz pop or daa lods test add mov sbb or xchg pushw jo dec loope adc jne inc mov (bad) pop or out in or pop mov dec cmp add jmp pop pop mov call (bad) loope rcll dec xor cmp loopne outsl sbb in ds ret shrb adc adc inc es dec sti test adc popa sbb pop fs lcall cld mov imul cwtl leave mov push imul xchg mov lods in cmp sbb ret jge push mov out cmp add (bad) push jmp cmpb mov fldenv cwtl loope or int3 push leave inc dec add cltd mov dec adc popf pushf xchg test push sahf mov pop pop pop cmpl les jae aas int3 add jns sub sub mov jmp xchg ficoml shll mov rclb jmp xchg and pusha or roll cli jg mov lcall mov inc mov cmc jl jecxz push fiadd mov inc lahf cmc mov push and andl das pop in fldcw shrb arpl sbb add cmp jecxz dec mov (bad) ljmp pop cli adc xchg jb adc les shrl imul push mov cmp pop mov jecxz lods adc and leave out xor ljmp push jge cmpsb pop fwait mov sbb in addl cmp pop xor es xlat cwtl cltd jnp mov stos cltd add popa jbe pop pop scas dec jns jp push adc clc addl (bad) dec sub lock (bad) (bad) lahf jmp loope cmpsb aad jmp or cmp mov test dec sub fisubl push xor lret pusha jo sbb mov inc (bad) (bad) sbb or push (bad) xor mov xor fidivr xadd cltd cmp stos out pop pop dec enter pushf pop cs outsb dec call pop fidivr in inc shrb sahf lret fs or xor add insl into scas mov sahf fcomi jl je lret out lock jo cli mov jg adc dec pop or cmp mov rcl mov outsl je add (bad) and test test insl sbb push stos xchg xchg negb icebp jge lock ja adc xor add (bad) repnz testl es pop mov pop xchg loopne ret inc inc and cli pop or push test mov cwtl jbe adc or mov cmpsb gs stc push imul nop (bad) lods jge jnp enter push loopne data16 jecxz jns aam mov cld shlb mov in or lock adc xor mov lea into lret notl cmp das shrl dec inc mov les cmp stos sub rcl jns repnz or mov and daa xchg out mov xor (bad) push sbb rorl push cwtl push test lcall mov push xchg jle aam xlat inc xor pop ret outsb mov insl negl pushf outsl or xchg daa jbe scas scas les ret (bad) sbb xlat je add stos out sub popf push xchg loope sub mov xor fcoms add mov lahf testb jp popf je scas mov push jo movsb cmpsb (bad) call or pop fwait xchg lods int fisubrl pop mov jno mov and push inc insl es pop fldl mov loop dec (bad) mov imul in xchg popf lods jb sarl stc pop fisubr and insl imul jo gs ret dec adc pop popa or fisttpll xor mov xchg jecxz aas addr16 cmpsl adc ss call push fwait jo pop (bad) lock outsb sub add stos and jl xor sti mov push inc leave daa dec pop out iret fldcw test aas into and addr16 addb in mov xchg aam jg (bad) inc adc lret push or shr pop lret dec push sbb inc and cmp adc mov nop jp jnp push jns jg (bad) jbe idivb call rcl adc fistp cwtl addb sub jno inc cmpb (bad) xor jl xor insl xchg sbb pop shll decb mov mov js lds cmpsb out add (bad) sbb in lods sbb cmc push xchg jb cmp mov aas rorl jge mov mov dec xchg add pavgw mov jg xor sahf pop lods cli rorb push inc inc jl sbb dec in lods subb imul mov sbb stos push iret push outsb inc test fiadd fwait (bad) stc (bad) jmpw xchg dec jno int sbb pop aad sub dec cmp dec in xchg daa pop pushf mull cmpsl iret pop data16 push out movsl movsl mov cli (bad) or mov mov xchg pop sbb xchg nop movsb xor into fisub (bad) mov pop add sub scas mov sub stc ljmp leave adc and clc xchg test roll popa sub mov or push ds add cmp mov outsl in jne mov or addr16 insl pushf pushf cli push xchg cltd es xchg sub xchg aam pusha scas push shll stos std and add hlt out xchg test inc sqrtps or fwait popa inc mov out jb cmp mov (bad) aas mov or jecxz cs add cmpsl sbb add xor shll jmp rol outsl xchg xchg sbb scas scas sti add jmp movsb (bad) idivb lock mov jmp das notb idivl out jae mov scas push js mov sub add add mov jmp iret fstpt outsl into inc inc es ret mov push fnsave sbb jl test lods (bad) out (bad) mov mov subb ja aaa jbe cmp das lock in ds aas pushf outsl in out and das mov popa scas fdivl mov aam push pop out push and push rcll push mov stc ret fisub xchg fs pminsw dec mov pop ss sbb and mov out push or xor sbb mov jecxz aam data16 lret cltd jl sub imul pop sti cmpsb pop fnop insb jnp cmp shl idivl adc aam sbb cmp xorl call out jns repz fwait (bad) loope pop push js xor pop dec xor inc cmc call arpl fs mov shr je imul (bad) mov test sahf pop stos mov sub push xchg mov push xlat jb stos mov mov inc leave adc sbb arpl pushl add lods test orl das mov outsl jnp dec repz popf outsl mov imul into ret addr16 and je (bad) xor dec int3 or inc lret jg push mov xlat sub imull (bad) cmp adc test xchg and inc aas ja xor cwtl pop in jle inc or arpl pop popf cwtl loop sar insl stc fimull jne sub mov push fsubrs aaa je mov std insl in vunpcklps pop (bad) insb clc dec sbb lahf mov insl and cmp inc aad dec notb push roll inc sbb pop stos cwtl push mull (bad) notl sub idivl sbb in mulps sbb loopne mov inc mov xor sub add add ljmp push ss and (bad) addr16 sub mov mov aas fnstenv test push test leave out mov repnz or or insl mov repnz mov sub xor inc adc or arpl (bad) out and xchg sbb or rcll rclb jbe mov ds jb stos xchg jle mov xor jecxz out pop mov jbe pusha inc mov (bad) pop mov mov mov jge aaa (bad) mov add ljmp jg cmpsb mov imul sti dec xor ja pop movsl es (bad) cmc test out pop fidivl pushf xchg and movsl js in out xchg xchg dec scas rolb stos stos out fucomp adc sbb sbb xchg bound push cld push xlat add sbb pop cs xor jbe insl (bad) pop outsl xchg adc imul lods mov add xchg in fiadd outsl adc sarl xor rcr cmpsl xorl or jno inc mov mov xlat mov add add adc jecxz fistpl jbe pop sbbl lock mov or pop cmp inc popf aaa mul pusha jmp mov popa popa pop fcmovbe ret mov int3 xor popf cld std aaa aaa xor int3 sti aam add insb pop jg xor pop pop sub add shrb ja mov xor int mov pop mov pop pop ret gs jg enter push adc out fist movsb mov mov sbb dec pop mov cld jbe dec ret mov decl mov add mov lock push push loope ja enter sbb andl jb inc and dec popl jnp push xlat stos arpl adc andb ret and mov jl mov jno test xchg sbb loope loopne inc data16 repz movsl mov add push xchg mov xchg lret fucomp lcall inc test and movsb jge sbb mov push jle fs add rorl test adcb (bad) sub mov or nop cli dec fdivrl push sub jno movsl pushf pop mov jne addl mov out push ret or cli movsb and ljmp sbb pusha loopne les mov sub or and insl mov repnz fwait enter push imul fwait and xchg xchg (bad) sahf lret cli fbld mov mov and mov int adc mov leave dec dec dec mov fbstp mov push pop pop adc popa (bad) mov lea add mov mov cli out cmp dec add jmp adc push fwait xchg mov push inc pusha pop and ja jp xacquire clc ret cld std aaa add and push mov ret sbb fidivl mov call adc adc ret jae adc lods mov (bad) mov movsl daa arpl inc dec xchg bound add xchg xchg and inc gs sub mov xchg and pop mov aam inc cmpsl imul gs or inc mov movsl and shlb in fnop dec cmp fwait jp push cmc cmc push clc ja cli xor out data16 clc outsb fwait sub decl adc mov pop cli adc cltd sub fcom sub pop sahf mov aad enter mov movsl push lock mov pop sbb mov or stos jecxz (bad) mov inc jns popa jb pop xchg sub pusha pusha (bad) pslld or push mov cmp push ds incl das dec fisubl sar (bad) aaa and mov xchg lock ds mov jl sti inc mov inc add orl test mov sbb data16 ds sub scas int3 insl mov dec lret jno ds inc and (bad) or or mov mov jae xchg pusha dec mov mov mov and loopne sub inc (bad) dec mov push rcr pusha fidivrl mov jno movsb inc mov mov fsubl dec stc mov jns push js push imul xchg outsb nop iret dec mov or cld test shll cltd in add mov (bad) sbb sbb fs add inc outsb add cmp pop cmp push sbb push dec dec jbe mov pop test jmp shlb lds push mov test popa (bad) mov stos inc xchg xor rcll pop sub loope cmp sub inc add sbb cmc jge ja add and xchg cmp movlps push cmc orl adc sub mov (bad) jnp xor xchg imul push mov inc lea mov mov ds stos scas pop and in sub inc push hlt lret add adc imul inc push sub mov out mov adc mov adc jbe and repz pusha fmuls push or jle jp mov jmp lahf das (bad) scas push xor hlt mov inc push inc cmpsl idivb notb lcall lock inc add and or (bad) repnz cmp inc loope dec repz mov xchg xor addb addl mov fsts xor jge jecxz xchg movsl pusha ret adc push and movl in and dec scas ficom popa xchg adc (bad) loop push popf xchg call and cld das cmpsl cmpsb les sub mov popf movsb push xor push aas push lods out jg pop mov pop sub jp rcll jp out cmp cltd lcall ja fwait jle inc mov (bad) push icebp test sahf cmpsl xchg imul sbb jl pop pusha pop lcall insl call or pop jl jmp sub push dec push in jnp push cmpl lods lahf ljmp cmp cmp imulb xchg mov out imul pop mov jno inc push mov lock es jl xchg fnstcw sbb cmp cmpsb and xchg ja or movsl fnstenv test call xchg sub das out mov and cs mov dec xchg push dec test xor dec icebp add add and sub ret mov rcr popf outsl out inc or cwtl loopne lret (bad) ret inc xor ja scas (bad) fld xchg leave xor xor enter (bad) or ss sbb fwait out or daa div outsb xor mov sub addl push js cmpsb out mov and in mov lcall sar (bad) loop mov cmp cltd stc aam dec inc dec std std out std xchg or in mov add xor shr jmp jae jge sahf enter lea loope mov popa sub lds loope sub sbb mov ret in sahf jle (bad) fidivr jo jmp mov lods cli mov movsl outsl jmp mov stc sub out int3 dec call jns in push (bad) and or leave dec daa or mov mov push mov push fadds clc xor push push lods lods cmpl divl sbb mov aas add scas daa jle xor cltd std add push outsl adc in mov add fcoml xchg sbb outsl dec lock xchg and jns cmp xor fsubrs xor dec inc clc add fcomp adc shl into xchg arpl add lock repnz jmp fsubl repnz pop mov jecxz int (bad) or push mov inc into inc mov push pushf push data16 sahf ljmp sub mov imul push and insb sub ljmp xchg scas or sub out out sbb fldt stos lds and adc mov std punpckhwd aaa jnp push xor push mov mov inc shrl xchg fwait orl roll inc xor push xlat pushf bound inc push pop mov or cmpsb jne repnz xchg mov jae or divb jo fiadd push and xchg jno daa mov xor push loopne adc dec inc xchg das sub int push aaa and addl repz sti mov ja cmp popa gs pop pop pop dec push push xchg ja pop aad cltd scas xchg bound outsb mov mov fisubr mov iret (bad) mov ds xor ror gs jns add mov movsl movsb decb xor pusha push fsts cwtl cwtl ret cs ss mov pushf sbb inc and rcll movsb jnp inc add fnstsw push add es push cmpsl nop nop mov mov mov cmpsl div or pop in push mov xor pop pop daa xor outsb scas (bad) fcoms pushf repz sbb rorb xchg jg or in mov out xlat adc pop fcomps pop sub inc push aam pop jnp and imul inc shrb rclb sbb adc or pop add es sar clc inc xor sub sub cli add ret lcall addr16 xchg sub or sahf cli imul jb lcall pop pop aas shrb sub pop dec dec dec lret cmpsl mov shr insl ja mov pop js insl std adc jl mov xchg xchg icebp jp icebp loop jle data16 lret insl lret mov repz push and fs (bad) es pop cmp jo dec sub lea cmp lahf das test jo sbb gs out mov fwait jle push dec jno push lods flds xchg sub mov mov inc inc (bad) (bad) adc or lods inc push sbb and inc inc es emms mov mov pusha popa outsl (bad) fwait rcrb push push push data16 vpsubsb cmp arpl cmp lods sub sub jae out xlat jbe xchg dec xchg inc ja test pop fild insl mov test out cmp dec stos sub ja inc push cmc addl test cwtl sub orl adc cmp dec jno aad data16 aas inc std or sahf popf mov xchg add jnp jns test idivl sub shrl cmp adc mov lock je mov jnp repz pop jl aaa aaa inc inc add adc daa test gs fldl pop repnz xchg stos repnz xor inc and cmp pop mov into (bad) scas mov loopne bound cmp test xchg stos fsubrp insl jmp jg lret mov dec add lret divl rol adc mov or and pusha jmp out xchg cmp or inc inc in sbb or jns pop jae test in daa xor sarl ds dec jne inc test aam sub (bad) out inc push adc int aad data16 shl ja or push in push jmpw mov cmp pop pop out cmp or and pushf pop in pop xchg inc xchg push lds and (bad) mov xor mov clc push dec into cmp sub xchg adc cmp or call je fimul mov arpl xor mov les cmp clc out ficompl jmp push aas push sbb xor mov jg popa sub xor addb adc cld paddsb sub mov test jmp ljmp mov inc pop mov daa sub push lret mov mov movsb mov (bad) test je in sub jle insb jle jae test sbb add cmpl imul repz push mov sub xchg hlt movsl (bad) dec adc mov lret pop rcll xchg mov sarl jge cmpps pop int dec pushf cmp nop jle xor daa xor iret sahf mov pmaxsw icebp fwait hlt (bad) aas inc dec jge cmpb call lods lahf pop (bad) jle mov sbb leave ja pop mov mov cmpsl les sahf push cmpps and pushf adc bound into push push test xchg loope daa stos cmc sub in pop cmp xchg ja adc lods les aas lds test sarb ret fwait dec xchg arpl dec test loop add pop fidivr mov pop sbb jp aaa sub insl out fwait sbb nop stc jle in test jl pop xor int3 inc (bad) cmp jp mov mov sub xchg pop shll hlt push flds push ret cmpsl or idivb mov fcomp push into xor shll hlt xchg daa movsb push inc rorb jnp xor lcall mov pushl shrb mov cmp push add jno xchg jno pop inc enter lds xchg lahf inc sub stos push pop pop out dec mov je adc popf jmp repz (bad) lcall outsl cltd addr16 jmp or fld movsb dec and inc ds mov mov sub mov sub lahf mov loope push lods es arpl cmp mov fcmovu movsb push inc sub idivl shrb orl (bad) das outsb dec cmp js mov stos hlt jl popf test jmp ret dec mov out lret add add shr fxch sbb cltd jno mov loopne adc repz insb repz and movsl mov cmc jbe icebp mov scas adc xchg ret nop push dec pop lea xchg lret fwait add dec dec in pop in pop and mov mov mov push in fmull or lcall insb lcall mov add jo lcall sbb in mov cld cmp mov xchg out ret sarb insl lds sar and mov cmpsb fistpl jb adc loop out arpl or mov sub add (bad) in mov pop xchg lods out sbb aam fistl adc sarb mov xchg xlat cmpsb mov mov pop push insl push sub clc mov add add out insl test loope movsb je lret ret xchg shll push push xor inc es or mov xor popa xadd inc add add cmp inc sub push out mov lods push aam out jnp insb push insl out clc and sub aaa add fwait hlt int3 push call data16 mov (bad) and mov add test mov lahf fisub xor jg xor cmc into and lcall out inc test enter sbb sub cmp es cltd jecxz add mov sub mov dec jmp movsb shrb (bad) in js cmp pop add mov push pop adc test andl ja sbb test push fwait ja std (bad) hlt inc test xchg add cltd dec das cmpsb sub mulps pop stos es or inc shr stos mov sahf mov jb movsb movsl movq pop ret andb pushf daa push and mov xchg and push test aam jl mov xor add pop lds aas jbe inc sbb je push into lahf mov pop cmp push push or mov insl or mov dec push into out fidiv daa sub ljmp or outsl adc out push fs mov mov fs loope mov ret xchg pop inc xchg (bad) xchg mov rolb repz data16 outsl aas push in (bad) stc hlt push fidivrl mov int or int3 cmp mov lahf push adc mov cltd jne mov lock nop bound lahf aaa addl sbb data16 or js cld clc clc adc mov or jns fadds add and or xlat mov cwtl pop mov aas sub sub cmpsl imul jmp mov jmp xor movsb xchg loop cli aad (bad) call (bad) mov cmc rolb push jp inc mov xchg sbb xchg mov aas dec or dec mov mov daa sbb fildll rcl xchg fisttpl or into das movsl imul mov mov scas jecxz repnz mov xor mov add fcmovb (bad) mov cltd (bad) je push cmpsl ret jl mov xchg jno add lods aaa flds or mov test addb nop and mov cmc aas (bad) push negl xor lods mov mov leave mov aam push insl aad add jecxz lahf loope mov cmc test fbld addr16 in mov add adc and adc sub mov pop sub and scas inc push pushl pushf add cmp dec stos rclb sbb (bad) add push sub rorb xchg cmp dec dec pop xchg mov push pop push aad sbb in in imul popa mov inc popf imul data16 inc inc add outsl daa cwtl push sbb add pop sub xchg or sub das divb adc xlat push sti aad popf pop out es cmp popl bound cli lcall adc inc inc push sti sub add cs mov cmc inc mov in mov mov into mov jne and pusha testl mov insb xchg (bad) mov ja sbb xchg add enter clc pop push push call loop lret rcl mov mov bound cmc ds inc repz shl push inc sbb jge daa push sub mov (bad) ret (bad) enter fdivrl aam (bad) mov and (bad) and cmp xchg xor lcall (bad) subb jb cmp jb jns sub shr iret add push push mov daa and shl cmp fdivp cmp inc jns imul lret shrb dec add add shrl cmp mov (bad) out xchg pop outsl mov jg dec sbb repz push sbbl mov (bad) sub js (bad) cmpsb es mov mov adc (bad) push aaa daa mulb pushl clc lcall bnd inc and loope fs sarl repz icebp sbb xor fdivrs mov adc sub xor fcmovne xlat pop push mov mov cmp out data16 mov fimull inc or lock xchg dec add in rcl loope mov adc popf ljmp sub sbb dec dec in (bad) mov mov push jnp xchg xchg push push sbb clc inc pop out jno testl lock mov add ss repnz ja out lahf jmp mov dec fwait jle dec and ja lea push mov lods mov lds aam sti cmp data16 sahf (bad) sahf add icebp xchg fisttpll negl insl add arpl jb test pushf pushf xchg xchg mov insb inc xchg sub and adc inc ret add sub inc lcall pop mov pop js jae out rcr fistpll in adc xor imul jl sbb push bound jg and or sub outsl das rclb sbb xchg or and xor mov or cmp cmp je (bad) jno stos or add pop ja cmp hlt xchg out arpl adc push mov nop sahf xlat (bad) push fcmovnu ficoml in jle sbb lods lods hlt outsb ds inc jnp mov adc jl aaa fucomip (bad) jno xchg lahf pop inc das (bad) adc mov es jecxz add fcomp stos xor in sar push cmp cmp into test movsl ljmp mov fisubrl (bad) call cmp mov sub int3 jecxz pop pop add cmp mov cli (bad) ret (bad) imul cmpsb add cmp arpl sbb dec add sub and call lods mov popw mov pop mov mov pop out fcmovu mov inc dec dec sahf and mov repz outsb data16 cli repnz mov dec sbb or lret jmp adc icebp mov (bad) or mov pop in outsb ja pop mov or jb jbe xchg mov into pop imul std jbe gs or adc lds cld fsts (bad) or jns (bad) and inc mov imul icebp xchg outsl in cwtl and cmpsl in or and inc inc inc adc add xchg and jns mov add mov add xor jbe ds and iret test adc mov popf cmp popa les sub mov fisttp inc xor jge sub js (bad) mov clc lds hlt movsb insl inc cmp mov (bad) push rcrl xchg imul sub dec sub aaa pushf stos stos in es add xchg mov subl fmull je jge jno int3 icebp or bound pop std ljmp mov (bad) lods pop sbb pop pop xchg jae sub test mov inc or xor pop daa push push fmull scas jle shlb (bad) cltd sub xor mov pop call repz gs cwtl push sbb sbb push jmp adc jnp add ds mov adc in enter shlb jns push cmp xchg pop xchg add es mov cs mov stos inc sub clc add sub fwait lcall into dec or jge scas sub ds scas mov ss lea lahf mov inc lret aas sbb push push in sahf sahf mov rorb hlt mov mov jns jns (bad) xor push lea les fldl pop stos pop push and jle push push sub les mov fs adc movsl mov stc add je add sbb addb shll repnz xor insl jne movsb movsl gs dec das adc cmp pop ret push popa push out sarb stc clc adc das loope,pn xchg push jne jne mov dec or aad in cmp out mov ja loopne push aas cmp test mov (bad) rcrb dec dec or dec adc and mov or imul mov mov pushf pop orb lea xchg xchg jl dec dec test pop and decb (bad) sbb insl addr16 loop sbb rcrl sti jo popa movsl lret test dec repz dec addr16 fisttpl imul dec mov pop mov insb out in cmpsb (bad) xchg les sahf imul add rclb test pop pop aad mov sub nop fdivrl repz out imul mov in in outsb xlat or (bad) std fldcw xor je cld mov lea push jmp push inc jmp lret hlt or addr16 and push sbb daa mov adc push movsb xor jne jo xor cmp sbb push sbb cli addr16 cmp mov mov jae sbb lock pusha sub shr jl adc cmp mov or cli test cmpsb adc incl inc dec xlat pop mov xchg nop (bad) jb loopne pop mov jbe inc jl dec mov fwait xlat (bad) sti xor shrb xor mov mov lahf sbb jp cmp or inc leave mov stc jmp out inc sbb and add xchg push mov int3 mov cmpl (bad) mov gs xchg sub cltd xchg dec jg push insb out arpl mov jecxz jle movsl push pop mov jp loop ljmp sti popa sbb add dec outsb addr16 bound subb mov mov xchg je in (bad) xor cmc jbe xchg jp adc out pusha push loopne imul sbb cmp orl in sub push and dec sbb fldenv fwait mov or xchg pop xor xor or negb cwtl popf in jmp loope js or jg in fdivs test lock scas rcrb cmp sahf je clc push movsb outsb pop or and or sbb dec lods ret scas xor jle cld int inc ret popa in in sbb sbb (bad) out jnp xchg pop jg js aam add xchg cmp call add cmp ds mov jecxz outsl loopne test inc add lock mov adc jo cmp mov call cmp in and xchg aad rcll mov dec inc aaa flds jecxz jmp vlddqu pop mov add outsb call jae pop mov adc shrb mov rolb repnz pop adc hlt imul mull sub sbb sbb aaa mov pop xchg push push fcomps je icebp adc daa ficomp into xor adc lods loope movsbl outsl leave enter mov insb or push loopne xchg jne popa inc int3 inc sbb shll mov in arpl cmp mov cld mov adc pop jmp xchg (bad) pop sbb cmc dec pop aaa aam lods sub addr16 sub push dec jle xchg js orl lds push (bad) push cmp sbb lcall sbb popa jg xchg xchg push insb or jl xor jp pop into mov mov fcompl inc cmp stos adc test push inc mov mov arpl js pcmpgtw cmp cwtl xor repz rcll imul jl jno nop sti in flds or daa ss addb (bad) stc stc add imul adc ljmp movsb sbb push mov mov int inc daa dec addb movsl movsl mov arpl push push bound mov push cmp (bad) ret sahf push adc sub lcall lcall mov push (bad) lds pop dec dec mov pop inc mov roll outsl out subl lds push jmp sbb ljmp and jl xor push add leave leave dec movsb add stos out jne inc into push mov pushf and dec inc shrl popf rclb cmp jge cmp push sub adcl add adc gs out mov sbb mov out mov inc adc les test jl mov scas aam jns sbb cld xor mov int andl jns in fsts dec cmp fldt jp jmp xchg mov insb cwtl push jl fbstp or push loop mov adc add jns cmp mov leave or mov pop add lock pusha and sub gs sub inc or adc daa iret cmpsl stos rcl mov cmp lahf sbbl mov imul fldl sub ljmp add imul adc sbb jo mov pop sti data16 repz daa push rsqrtps out sahf mov adc ficoml in fwait sbb push test xchg sub fs xchg call arpl dec lea icebp aaa frstor dec repz and xchg dec ret test mov mov pop adc lret lret gs hlt and jns mov (bad) adc cmp cltd fdivrl cmpsb sub jne mov push ret mov sbb cli shll push push pushf outsl aaa mov mov cmp insl sbb dec jg ljmp xor adc xor leave and clc cli lea mov mov mov jno jns push jne xor jnp imul xchg (bad) repz jecxz int3 cmp les mov push lods push xchg (bad) (bad) jnp mov sub mov jo or push mov int3 push and adc mov mov and bswap push xchg dec sbb add sub dec sub pushf daa lcall mov stos and push xor push cs repnz cmp xchg mov cmpsl push arpl sub (bad) lods xchg xor sub rcll jmp roll test cmpsl lods out pop add adc jne xchg jmp call mov sahf imul enter xor inc mov sub sbb pop cmp jbe adc add enter movsl arpl mov es xor push lods jl popa aad mov inc and xchg (bad) bound out inc in aaa aaa inc scas pop pop add push inc (bad) xor sub add int push push sbb jecxz mov shlb cmp mov iret push addl bnd push push es sub pop pushf jmp aad es xchg pop mov insb xchg mov imul or push jb sbb fild fwait lcall div (bad) sub pop jns sahf lahf decl addl ret add in orl xchg cli cmp mov mov mov pop out bound sbb inc mov and cmp ljmp test icebp das mov mov dec sbb jns outsb jle dec out cltd stos push adc repz xchg pushf int pop rclb or jle les push sbb mov xor push and imul add call fstpl inc inc mov ror jmp loopne fldt imull stc sub add sub mov cld and (bad) cli divb lea inc cld imul xchg mov mov (bad) in xlat xlat adc add fbld add fwait inc add or xor das addr16 and dec add sti xchg pusha mov jmp loope pop and pop push mov cwtl or cs xlat push mov pushf and jno and mov adc dec int jle mov add xor mov in mov ds pop popf popf cmp xchg addb dec adc and or cmp jae push lods pop jge lahf into mov ficoml enter add jge bswap add ds mov shl jnp addr16 inc inc inc mov jl mov in fstps cmp (bad) (bad) into je jmp bound mov jno cmp sbb sub jnp clc inc adc popa test fcompl xchg dec dec ja cwtl scas jmp mov mov in xor mov scas lods insl and repz pop xor and pop gs test repnz sbb outsb in jle popa dec and (bad) jbe mov jae leave dec in xchg sbbl jecxz add stos fsubp push sbb add mov inc fcomi mov mov std xor je idivl (bad) sub iret xorl (bad) mov lock xor mov pop sub lahf sahf (bad) (bad) xchg add outsl xor scas adc stc mov stos hlt sub fcmovu or out xor out hlt fisub add or mov inc fsub in sbb jmp cmp mov xchg out fs adc negb sbb scas gs sbb sub inc dec cmp jno rorl orl aaa in cmp loope mov or leave pop out xchg mov dec dec in mov xchg daa daa fmul pop das lret cmpsl sub cltd rorl or push out notl outsl sbb mov scas sub andl in jecxz mov add bndldx cmpsl insl mov jb (bad) adc daa fcompl fwait cltd cltd pop xchg ja flds repz jnp scas stc rcll jle (bad) push scas lods test test scas xchg sub pop xchg xchg pusha mov pop push jae push jmp imul inc or cmp sbb sbb or jns fscale mov scas into inc jmp lret mov ljmp stc out (bad) lea xlat xlat rcrl pop adc or (bad) sub popa aaa (bad) and std adc cmp cld add xor mov and rolb add fsqrt iret sarl out mov dec out outsb int3 lea aas add sbb jl mov scas lahf aaa mov push or add push or dec mov mov mov or mov xchg lcall and sub mov xchg or fcmovnu rolb out inc orl test jge sbb dec adc mov gs dec std jmp rcrb and push push mov sbb cmp mov (bad) xor pop mov or dec cmp pushf pop pop mov ret adc push out jle test mov aad gs add xor push or mov cwtl in imul loopne push mov mov add mov stos jp lods lods out fdivs movsb addr16 ss cli or push xchg pop sub xor sbb mov mov xchg xchg out mov fcmovne ror int3 dec aaa mov or sbb test mov pop ficomp adc mov rorb cltd mov fdiv jl scas mov in imulb out sub std jl lahf aas data16 cmp fimul test fwait push push es stos jle enter jno cmpsl ret mov scas mov mov push (bad) mov pop cmp aaa lock or pop cmp ret push (bad) cld data16 js out lods adc and inc aaa push adc mov or lock dec inc aaa cmp fstpl pop lret divb dec not movsb das adc push inc js mov loope inc jg in pop ret or in dec fcomp fadds sub pop (bad) in jg or out mov icebp pop mov pop orl std jo jmp mov dec add jns (bad) mov stos add mov arpl data16 xchg (bad) jns in addr16 and addl and cwtl cmp aam add xchg sub pop xchg xchg (bad) out jo cmp (bad) jmp imul fdivrl aaa dec jp fistp sbb adc mov dec adc cmp push mov add mov or fwait fwait xchg js pusha add out and mov addl lock inc mov sub rcrb and mov xchg xchg gs ret out add pusha cmp notl (bad) (bad) icebp movsl insl jl (bad) jae push pop sub jg cmp jl xchg mov inc ficompl cli stos fbld (bad) dec dec aas loope push fsubp mov push add dec xchg mov popf push push rolb jl clc mov jne adc xor movb xchg or scas lods sahf jbe or repz std inc jns inc or stc mov mov mov sub sub in (bad) lods push jb pop lods mov fidiv pushfw cmc mov inc sub add jg sahf ljmp pop pop dec push push dec cmp cwtl pushf addb or test insl push sub ljmp adc frstor jmp call mov pop addr16 and and dec inc insl push mov pop aas aas fimul xchg mov scas and lods fyl2x inc push mov (bad) sbb in jmp cmp jl mov inc (bad) movb xchg and pushf adc subb adc sti dec mov (bad) mov sub test test xchg or push and mov sbb adc jp sarb (bad) repnz mov jno scas adc das or sahf int ds addl xacquire jecxz xor (bad) popa popa test dec movsb movsl add xchg dec fs push pusha bound vcomiss dec adc insb mov (bad) cmp mov jne or mov add adc enter leave mov in jae clc sbb xor iret (bad) mull hlt mov stos xor lret cmp mov sbb (bad) repnz cli idivb dec std push lcall fsubrp lea in sub jne notb mov pop push add cmp test mov ret push xchg push xchg adc push sub fist mov stc daa hlt pop push into daa mov pop mov jns popf in sbb std scas pop mov or fwait loopne bound pop lea call sub imul xor xchg pop jmp sti jl loope mov lods sub test and lods cmp out mov cmp jo fchs lds orl and popa xor xor dec xchg lods (bad) cmp sub cmp pop fdivrs xor ss incl dec mov push inc mov mov lods loopne mov fisubrl jb inc dec push and xchg fwait (bad) out iret int sub rorb adc mov jle inc mov add dec sahf mov pop xor das jnp out cld cwtl (bad) idivb pop imul add sub in std ds fcomp mov fstpl (bad) lods add fwait mov popf or mov fildll das fsubl push inc pop xchg add or jg inc inc sub aas jp cmp (bad) xor setg pop ds or inc sub bnd cmp out jecxz sub fwait push xchg xchg daa das mov jns scas jle ljmp daa pushf pushf (bad) push jns aam fwait mov cwtl cmpsb mov rcr sbb sub outsl jae mov push mov mov add xchg xchg test xchg xchg jns addl mov int3 cmovle dec add notb dec mov addr16 lahf mov jns or adc mov out cmp testl jmp cmp mov mov push (bad) jnp jle in add enter (bad) (bad) adc lahf std rorb mov cltd fnstcw pusha sbb dec mov add dec pop cmc jle jl pop insl (bad) cmpsl out fsts mov xchg out push adc mov and jne adc cwtl in fxch cli fmuls lret sahf (bad) mov mov cwtl inc push mov or mov sub add jnp insb jmp cmpsb dec leave push ljmp loopne mov int ss arpl xor inc (bad) sub push hlt cmpsb and mov jp roll nop nop mov nop sub dec adc testl sti mov repnz sahf mov (bad) rcl das pushf jecxz xchg sbb mov mov adc mov mov sbb xchg mov jle xchg or shlb push adc push push mov aas jo mov push in mov nop jge (bad) in nop sbb mov sarb cld cld clc clc scas repz fsubrl add fwait jae and (bad) je popf in sub (bad) aad xlat sbb mov push push pop out cld enter mov incb out popa or mov push cmpsb daa sbb or repz sbb pop mov and add add js mov in insb insl jb adc pop or dec dec test clc (bad) xorl out inc or push mov (bad) (bad) dec mov mov mov ror pop or dec cs mov idivl mov jge test push xor test mov ja out adc das sahf xor call jge das mov or femms scas mov dec add repz add xchg jnp stos lcall hlt fwait mov lods ljmp test jae popa arpl sbb out xchg movsl push xchg stos stos out sbb cs and gs sbb ljmp inc sub adc fbld ds ds mov jmp out sarl call mov test push mov sbb mov or lcall dec pop int scas mov das add xchg and mov insb movl fdiv ja fistl mov inc repz aas pop fcmove sarl dec cli ret cmp (bad) out outsb outsb jno decl frstor dec and mov dec push imul sahf leave dec pop jp cmc xlat push jecxz fdivl addl inc mov cmpsb inc pop xchg adc je sbb jbe out scas repnz xor inc xor pop shll xchg mov lahf stos bound xlat mov ret adc pop pop sti jmp loopne push adc mov dec adc leave stos mov sbb xchg cli or xor mov lahf movsb pop inc inc push jbe mov inc jo nop jecxz repnz cmp jmp dec into pop jno xor daa aaa idivb or mov push push push inc int mov fildll ja or fiaddl mov mov sbb cmpsl xor aas (bad) lcall cltd cltd inc inc mov mov repz or fidiv add mov push lds push jl fwait pop into mov cmc test insl mov addr16 inc mov je jne sbb xchg outsb iret cmpsb pop pop push loopne add sahf push fistp add add dec cmp jb mov dec mov loope xlat aad ja pop adc jae js pushf dec sahf mov rcrl mov lret xchg mov mov push iret dec (bad) mov adc sbb and xchg cli jno test sar outsb rcrl out sbb push call inc mov add ss dec add data16 inc dec mov or jecxz gs ficomp xchg je rcl jnp cmp mov outsb insl sub jo adc push fstl int repz cltd sbb pop add lcall inc popl mov shll jb pop jle pop inc inc es push mov mov mov hlt nop jg in sbb jo xor push movsl movsl (bad) inc (bad) pushf je jns bound sbb mov jnp and adc adc scas int3 cwtl sub daa out es not sub mov mov mov (bad) mov xor rorl push ds sub jmp test ljmp jle jns call insl or xchg mov xchg xchg call xor adc fbstp sub fs dec pop cmp sahf mov xchg test add cld idivl cmp je mov in imul (bad) jmp xchg add mov mov xor adc or lcall jb jb int3 mov mov fstpt add in lds cmp add xchg pop jle shll je adc pop es lret mov popf loope shr loopne out cmp insb sti cmp out out enter lret mov add roll mov mov add stc sub movsb movsb (bad) xchg sets pusha int3 int3 sub lahf push or inc sub mov cmp stos iret into pop xchg mov mov push arpl gs icebp mov div sbb iret xor pop pop dec (bad) or push ljmp xchg xchg (bad) inc inc out inc cwtl cmpsl xor sti sti aam inc (bad) mov lock hlt andl adc cltd data16 jp pop pop aaa push cwtl rolb add xchg (bad) jmp pop add lock pop pop jl push push into call cwtl int popf xchg stos js (bad) andb inc inc mov xchg xor sbb nop ficompl pusha decl fs mov test sub std pop dec and inc je add jb aad (bad) push add pusha jo push jg sbb sub ljmp push outsl in lret lock sub test cmp ss sbb push das pop clc dec (bad) mov and cmpsl and fcmovu inc fs cmp flds icebp icebp sbb in (bad) xor ss inc lret cld dec and in ds xchg fsubrp mov (bad) out mov inc sub push push popl dec and stc cmp fcmovnu push (bad) ror xchg inc sbb nop and sub jbe xor inc push or hlt pop inc inc cmp int push jo xor mov aad mov int sti add popa insb fdivl pop xlat sbb cmp inc jmp mov pop clc mov pop adc inc xlat inc addl orb or inc mov lret mov vmovupd dec dec mov pop js lods lods out in rol mov push jbe lahf test cmp insl adc in jmp in dec je xchg ljmp xchg sarl mov push outsb es or addr16 pop movb add aam mov les xchg sbb mov dec fcmovnb sarb addb push pusha adc add clc push inc lret int3 dec addr16 dec std ljmp sub fldt pop jne mov xor mov add lds sbb mov jl jg sub jmp jmp ret mov rol and jbe inc fnstenv ret aad test out cmp cmp loop sbb das std decb pusha pusha int3 and adcl cmp pmaddwd add lods fs pop xchg cmp int and mov add or movsl stos jecxz sbb dec xor sti fs cmpsl pop pop pop jnp aam (bad) repz adc cmp or sti sti pop mov pop sbb jle lret lea hlt jbe add mov ja dec std std or in pop xlat jno pop pop repz adc pop pop push lock out push jns (bad) popf pop inc inc mov imul (bad) repz mov ja sbb ja sbb pop scas mov mov jne mov jae cmp (bad) je imul jno cli mov xlat xlat xchg mov cwtl cwtl xor mov sub adc outsb enter mov inc sarb mov push cmp mov sti scas or mov (bad) xchg icebp icebp xchg insb or xchg test enter jbe adc fstpt mov inc in cmp fwait cltd lret xor (bad) cs std adc fnsave and xchg sub aad les jb lods ljmp push xor sub and push lahf add stos adc std aaa fisubr jb inc test or aas sub iret aaa cli into and jno iret pop xor mov and mov xchg pop mov movsl inc push lret imul stos xor fnstcw imul in mov rol mov adc sti xor ljmp sub and cmpsb enter test or out cmp xlat xor push push push xchg pop sbb shll fwait mov push cmp loope mov xchg insb pop xor test xor leave movsb xchg scas clc stos fbld sahf (bad) cmp scas dec inc push in mov push (bad) push push sti movsb bound test xchg lcall jge add push bound jbe mov mov stc push push inc mov add repz jo add mov adc rcl adc fisttpl fcoml and dec (bad) mov dec xor mov or sbb or or (bad) adc mov rclb jmp sub (bad) xor push inc (bad) out and add add ret in pop into into outsb aam mov addr16 dec aam jne dec fldt mov lock pusha and xchg sbb lods in or imul leave cmp push imul rcrb (bad) adc mov pop arpl inc dec push xchg pop jl pop sarb imul fildll loopne mov in add adc inc cmpsb cmpsl addr16 jbe sarl or cwtl (bad) adc inc mov rorb (bad) jnp scas rorb mov (bad) mov stos test mov push push imul pop into mov pop push sub ljmp push test pop dec mov repz mov lods outsl jl cmp stos test lret push ja mov rorb jae and cmp lret (bad) pop hlt add test call lret push es call push adc jle fdivrs mov lds jp in dec lock push push gs xor mov fnstsw pop lods or pop or cmp insb insl cmpsb sbb pop loopne test lcall cmp leave leave dec les mov push (bad) xchg inc mov (bad) mov push push jno mov jecxz test xchg push mov idivl sub shll xchg insl cmpsb (bad) xor mov inc push fisttpll lock (bad) das jb adc aas cmp dec flds adc rcl push pushf adc imul pop sub std or addl subl jp cmpsb fwait sbb xlat out hlt or adc out out xchg sbb (bad) sbb mov inc or ljmp cwtl fsubs outsb pop push mov adc pop cltd lcall jmp out mov xor mov insl mov push xchg data16 (bad) decb or idiv and out fnsave sbbl xor push push inc mov movsl clc add push mov cmp jno add fldl not or call loopne add pop sub (bad) (bad) cltd push dec sub jb les xor cli pop ja xchg fwait push jge or inc pushf jno lret sub fimul add add (bad) std aam mov hlt movsb cmpsl or std pop loope inc inc push and aaa adc sub loope cmpsl les das ljmp lret ds mov cmc insb stos out pop rcll mov push lret es xor out mov ja or pop add ss jno and int3 dec pusha push cltd jno push mov xchg sub std sbbl add mov sbb fisttp mov mov mov push (bad) mov push pop int push (bad) mov insb pop inc pop sub mov jns pop outsl call sub and data16 fsubrs lcall aam ljmp lds std jbe cmp nop in lahf pop jl fsts into mov or xor pop mov and jmp (bad) pop lds lock jnp loopne std fldenv enter adc inc mov push jae mov iret fwait lcall icebp add outsl sbb sbb mov xchg mov cmp ret xchg (bad) test pushf rcrb loopne setp idivb mov cmp and incb add and xchg stc jo lock lock sbb or xor xchg add push cmp sarl inc enter xchg and dec mov test popa hlt lahf loope or mov outsb clc mulb push adc (bad) mov fistl mov lods imul jle cltd push fisubr imul dec inc adc push mov (bad) call adc xlat imul leave sbb lods loope int3 xchg jno insl jecxz leave inc jge loop cmpb pop pop mov fnop lods adc pop pop xor adc lods and jb stos jmp (bad) aad fisub mulb rcll aam arpl xchg sub shrb sub pop xor jno cs idivb mov cmp mov (bad) or roll sbb xchg cmp (bad) mov stc cltd inc dec lods in imul dec popf mov sub mov mov add out dec dec dec xchg inc fisub mov or pop jge das cmp xchg popf (bad) adc jp pop fsubrp jmp mov jns mov lods sti lds movb sub std add scas lret push xchg punpckhbw jbe pop adc add (bad) ss icebp lcall cld sbb xor inc insl in mov fstp mov repnz pushf pushf pop pushf aaa jbe outsl pop cwtl loope mov insb lods cld push push in mov and shll sub inc inc cmc mov bswap jge loope stos push std mov cmpsb sbb adcb lret cs lock fist sub aaa pop sbb adc hlt (bad) lret fisubr sbb mov cs dec (bad) or push (bad) cmp xchg dec testb jno push pop jmp pop push rol sub pop dec icebp popa rcl dec sbb outsl add adc int3 in xor and pop push fcompl sbb dec faddl cmp and xor enter test cs add or icebp inc popf push sbb nop push out ret pop cld jmp inc xchg xor std shrl add mov clc in mov addl aam mov out fs xlat ljmp mov lds cwtl pop lret mov mov pop sbb rol daa push adc push ficoml jno (bad) jnp pop xor xchg sbb mov imul sahf out int3 mov int les cli inc sbb je,pn pop rol add (bad) mov pop aas sahf cmpl lds xor sub adc in je pop adc push int3 xor inc inc hlt jns jb push stos push pusha cmc pop out cmc or js inc push int3 sbb adc xor movsb shrb fistl inc or or cli data16 inc xor fiaddl or xchg prefetcht2 roll bound sbb and mov xchg rcrl scas mov aam stos cs add mov fnstenv cmpsb out cmp xchg sub add je outsl sub pop cmpsl xor dec imul mov mov (bad) icebp cmc or cmp out or insl loop xor mov (bad) dec dec in ja stos cltd in jo mov push sbb inc adc insl pop push adc push add jbe lret (bad) or sub mov xlat jmp out inc adcl push sbb or js out xor int3 dec (bad) push in sub addr16 ficompl fcmovu or add jns ficom xor dec ss inc andb test dec dec push cmp inc pop cwtl xchg xlat push insl mov mov mov imul mov or inc ret xor xor mov (bad) push add jl lahf jmp inc add sbb dec adc in rcrl pop insb aam xor and dec cmpsl cld sti mov dec or adc aad loopne cmc push test jmp test cmp adcb nopl cmp sbb lahf test pop ret (bad) cli pushl repz fiadd fldt xor mov nop xchg sahf cmc pop pop ljmp jmp jb (bad) (bad) call sub ljmp push enter (bad) xchg out cwtl push xlat and test sub xchg scas adc and cli cli pushf or cli fs xchg mov jle fisubl aas mov adc ret sub addr16 push cwtl inc lahf fs pusha bound ret mov shrb shll enter pop mov insl xor enter insl (bad) mov ss (bad) movsl mov gs or das test xchg xchg sbb or mov testl mov add inc mov pop dec test ljmp pop test mov mov xchg mov lahf repz lahf mov in or (bad) xor scas fisubrl add push xor mov stc stc add movsb sub fs stos outsb jnp or and lods ret add scas xor inc dec pop mov jge push mov movsl rcll stos dec daa repz cmp (bad) gs pushf ret push subps dec arpl enter loope jnp aad cmpsl push std xor pop sub ret sub rcl in adc (bad) xlat mov std rcll stos ret sti push stos push lods out cmp inc pop dec and mov popf xor lcall xor jl,pn xchg outsw pop xor fsubr outsb add jmp les sbb mov push mov aam jns xchg pusha clc nop jnp mov or (bad) or add adc adc mov mov movntq out repnz jo ror add les scas mov rol mov xchg sub cltd adc iret clc data16 add dec dec and mov pusha xchg push push or hlt dec lods cmp sub or insl (bad) loopne rclb sbb mov pusha mov cmp ret rol gs insl dec mov dec or add and xchg xchg pop push or lods adcl mov in out xchg jne ret mov inc cmpsb in mov or mov cmp loope js pop xlat aad xchg xchg push pop and cli or xchg push rclb xchg ds repz or lds jp sbb adc ljmpw addr16 dec (bad) jns cmp fistpl xor jle cmpsl pop rclb fisubl push lods leave jmp mov mov jge lret inc mov dec push xor sub and sbb jmp xchg cmp adc clc scas int std jbe and leave mov pop js push movb lea pushf xchg xchg mov sub and cmp in jae out pushf call push mov rcrl das xchg mov idiv mov sub jmp push adc pop lret or sub push ss icebp pop inc addb (bad) jge or pop xchg inc xor leave sbb ss and xchg call jp push out loope cmpsl cmpsb add push pop fsubl mov dec or leave cwtl mov loop fs push jnp orb xorl push adc jo xlat gs push sub stc stos mov (bad) data16 pop inc jge mov fwait loop mov decb pop ret jl xor leave je repnz test mov dec nop jl (bad) jmp pop add or push daa fistp loope loop adc (bad) adc inc fwait fs push mov mov aas arpl pushf mov dec (bad) loopne stos sub push sbb cmp ds testl jp lcall xchg fimull cmp scas mov clc lret leave inc mov test dec pop mov adc adc inc pop inc mov lea imul in inc adc std outsb inc xchg fisubrl outsb xchg stc pop lods lods es jbe daa icebp test mov adc pop mov stc je movsb insb push aam push pop cmpsl xor sbb lods and push xchg inc inc ss adc xchg cmova lds test pop sar bound xlat pop js js out sbb les lahf push adc lret movsl mov or leave xchg out cmpsb push adc jne loope sub add ss pusha inc orl mov jmp or dec push shrb es mull adc cmpsl stos or out loopne,pn push aad mov cwtl arpl inc notb push test mov or xchg jmp adc rcl pop pushf adc adc xchg leave xchg fsubl inc lcall rep movsl push pop sti sbb or jp jecxz add adc vpgatherqd push mov dec or jge lret mov push negb sbb pop aad cld jbe xchg fdivr cld adc loopne ds pop jae movsl mov pop pop mov xor mov xlat adc sti fist outsl mull mov les lahf mov push inc inc cmp hlt push push add mov jnp cmp insb lods adc test lea sbb sbb inc mov test addl mov sti cli (bad) (bad) mov mov pusha popa fisubl ret mov or mov test xchg mov jle jmp fsubrp adc adc pusha cld int fs push (bad) jg jno xor jg jnp add jmp ret and add aas pop push ret (bad) and inc and inc ss (bad) mov xchg ret (bad) popa popa pop movl movsl outsb pop sbb out cmp out xor fcmove addr16 xor out and in adc sub in mov jo inc fisttpll popa sub push add addr16 jmp and add mov mov out mov (bad) inc xchg push push and xor or imul mov (bad) rorb mov xchg mov leave int les leave dec dec add mov mov jle dec mov pop inc jo test jbe or jns ss cmp sarb adc outsb daa and jle jno xchg stos lods stos lahf nop mov jnp pop adc std std cmp push aas add aas das sub adc and sbb mov (bad) mov pusha loopne pop bswap addl sbb jno pop pop outsb pop sbb bound add and fs stos out adc cs lret add ret sub cmpsl push sahf sbb div add mov sbb mov and mov dec cltd test shlb inc jbe xchg aaa daa ds (bad) xor ret lahf mov and (bad) push jle dec push xchg rorb push cmp push pop jnp add push loop ret in push data16 push push shll cmp (bad) adc shlb push (bad) repz cli dec mov repz ja flds sbb or xchg loopne mov mov ror popf fs aad fildll and pop arpl and out movl adc sub sub (bad) cld adc mov add jno stos int3 rcl movw fwait xchg xchg cmp inc ret mov movsb add aad pop push add push lea pushf call sub jl jge sub test or js jmp pop pop nop sub pop sbb mov movsl popf (bad) fwait sar ds ret sbb inc cmc dec in mov xor fwait push cmp orl mov add addr16 add add sti push ficoml mov pop mov pop dec mov xor adc popf (bad) sub jp jno xchg call pslld cmp fnsave rcrb roll lahf test dec pop xchg add pusha xchg in jmp (bad) mov push and cmpsl or and xor cmp bound data16 pop or or stos out addr16 outsl les ljmp mov mov (bad) or fistpl cmp stos stc (bad) mov mov pop pop xchg sub cmp dec daa and mov push in test adc cli ds sbb orl cmc jl mov fs jle inc sbb add ss divl ficomp mov mov or int pop inc jnp std mov insl idivb std adc fnstenv cmc outsb xchg mov push push and jg out ljmp push aaa aaa inc int3 fiaddl jge add and pop or mov or sti push push cmpl mov xor rcll cmp cmp popf pop pop (bad) out dec fldl hlt add pop sub sbb dec inc mov movsb inc xor stc in mov pusha fisubr jne xor cmp cmp sbb lahf inc cmpl xchg test pushf (bad) mov (bad) iret mov lock into lcall push dec notb in dec dec pop mov loop jnp int3 incb jg xchg jmp int3 orl jns mov outsl cltd repz jnp clc mov push xchg fs out pop lret push push loop pop add loopne les and cwtl push stc movsl cmpsl in pop add sbb ds sbb cmc mov add add data16 pop aaa mov jb dec fstl adc dec js cld and cmc cmp jecxz adc cs fidivr xchg cmp pushl movsl bnd or dec jg outsl lcall int3 jno lcall pop pop adc sub dec pop (bad) xchg pop nop add sahf repz mov out push and add mov test push mov ret je sbb aas xchg jns inc xor fildl and int3 mov mov aad fldenv incl inc xchg lods sub add into popf mov push push mov outsl xchg bound cmp lock aad (bad) imulb sti pop sbb cmp mov cmc mov push adc test lock scas mov mov and (bad) push subps xlat (bad) and imul cltd outsb clc jns xchg rol out pop aad into cmpl popa test add lds xchg xchg lcall lret jb (bad) and push out out and pop xor call push fcmovu xor push adc test enter mov mov dec xchg dec (bad) mov sub dec pushl adc push cmc movsl insl sti test xchg je insb adc inc fwait xchg fwait out and hlt inc fistl ds (bad) jo mov popf pop pusha cmp ficom sbb pop mov or mov das ret jp jns rorb add sub pop jmp xchg push in test inc xor movsl and mov push or inc fxch jne scas and mov lret fist and mov or sub les loope stc inc jae and push xlat push push push hlt mul pop mov bound shrl dec sbb push lds pop push mov fwait rol pop mov dec int3 lea xchg mov ss inc out jbe mov dec sub clc das mov jo out xchg out push mov add in sbb dec xor xor rcrl add push pop (bad) xor rorb or add sbb xchg leave xchg loop (bad) imull rolb xchg pop in xchg andl mov rcll outsb xlat pop push fptan ret xchg data16 cmp mov inc sub push clc in sti mov enter sahf hlt pop ljmp bound fcompl into mov arpl jb std push mov cmp repnz in out aam lods lds rcr test les cli cli jne add xchg mov (bad) ss jg mov into cli imul sub sub pop in mov rcr stos inc push xlat or (bad) cmp cmpsb sub jmp test lahf and mov mov push popf fldl2e popa hlt (bad) imul jge xor xchg pop xor leave mov push imul dec mov mov fstp pop xor cmp push rcr xchg (bad) mov imul jecxz jge scas or adc imul cmp pushf outsb std or pop sub lahf lahf je adc mov xor rsm adc inc int fimul or adc adcl andl mov stos test sub lcall push arpl lret push (bad) xlat popa scas into mulb std out mov out lds aam push xor fisttp push mov and lods imul test xchg push and fsts rcl add push mov mov lods orl mov or fidivl xor movb shll mov xchg mov ja jbe scas cmp mov arpl cmp xchg xor pop mov lahf ds add inc or inc bound lock xlat rcll mov loopne add leave mov cs sub sub jecxz mov int3 mov stos push mov inc xchg mov pop pop fstpl orl xor insb out (bad) sahf sub add or lods sub xor ret ret dec test xor addb sbb pop and and xchg dec cs jno push mov sbb cmp pop add fnop mov aad hlt cmp pop ja inc enter mov push push push xchg out xor imul movsb and repnz xchg adc in push mov cmp sarl jl or mov outsl div mov gs lret inc fwait jno sbb fistl jle push add or fnstenv fcomps xchg xchg movsb rclb adc fsubl ja pop sti mov inc inc mov imul cli xor (bad) push mov jmp pop xchg xchg pop and cli jno push and lret jae lea cmp mov mov jl (bad) aad and or aaa inc out push aam pop aas cmpsl gs sub pop dec dec out push rclb dec lret and mov mov mov xchg icebp cmpsl push aam andl push lcall xchg push insl mov add cltd jb inc fcmovb sgdtl je (bad) mov cmp inc add out jbe xchg push xor pop rclb xchg nop adc mov push adc cltd pop jmp add cmp addl lods lahf lahf out push repz sbb dec iret xorb repz jge into inc inc (bad) xchg fwait xchg and cmovle stos out xor (bad) or imul clc dec push push cs cmp push xchg and xor push aam (bad) xchg xchg sub and jge push adc sbb sub cmp xchg mov (bad) (bad) fwait pop jmp mov rcr fisttp mov inc pop dec sub in inc or cmp ficom movsl sbb lcall xchg test cltd in mov pop fwait inc pop roll pop mov fildll and sbb dec pop data16 fild stos cmp push pop enter mov subb pusha jnp,pn mov inc loope int scas cmp mov sbb repnz add or or cmp mov inc (bad) (bad) and (bad) sbb xchg cmp inc (bad) addr16 jg stos ret stos inc dec xor in test cwtl stos and popf inc and xchg mov insb and lods xchg mov mov mov ja mov inc data16 aas push cmp jecxz mov les sbb xchg (bad) jne cmc mov shll pop lahf int3 adc add in add push popf push xchg cmp icebp lds sub mov push push add cmp stos adc mov xor in sti mov pushf es outsb push adc sbb adc je mov add xlat out pusha adc cmc sbb out cmp sbb movq mov lea xchg std (bad) and int3 cmc test enter mov sahf scas seta loope jmp scas test arpl cwtl scas pop jle jne push (bad) (bad) xchg (bad) jns xor add and and hlt sub (bad) jmp scas mov ljmp (bad) sub fbld sub jl adc inc inc test pop aas xchg daa imul jg push and dec push or push mov lods cmp lret stc sbb in sbb mov or jmp cmp leave mov mov (bad) (bad) dec cmc push mov sbb aad mov xchg cltd push sbb xchg test les imul (bad) jmp mov les ja jbe in popa push push jbe repnz lock or cmp test cs faddl mov leave inc lods ljmpw cmpsb xor lods movb bound cld add push fidiv movsb dec cmpl negl popf dec clc sti cli insb (bad) cli inc and out and jo adc push and rcl adc in je jge test dec inc cmp ret dec loopne xchg outsl jnp mov and mov lcall jns sub aaa mov lock sbb or ret cmpl mov push jmp stos mov js das xor test fild jns lods scas dec mov into cltd pop xchg jae cmp xor cld testb bound (bad) ja sbb roll jle xor push sub sbb (bad) jnp sbb pusha add mov inc int3 int3 xchg xor test dec inc pop sar mov or fcomp jno mov cmp mov sahf mov repz sub cmp rcll rol call cli cli insb sbb fdivl mov mov mov lds aas scas jbe mov pop sub and lds sub rclb arpl dec or dec push xor adc leave mov js (bad) sti and hlt popa push out jb loope push mov pop rcll jge orl inc adc inc dec sti mov dec dec leave jbe prefetchwt1 or out lret sbb movsl iret mov dec jmp sbb adc or push pop mov and in lahf in cmpsl jge add xchg pusha jmp pop xchg xchg (bad) out popa mov lods add push push fdivrl inc sahf sbb sbb out sub es int3 dec pushf push daa test jno incb (bad) rcrl je popa xor (bad) mov cld mov pop adc jmp ljmp sub and out mov adc xchg pop and sub xor ds xor cmc sbb subl lcall add icebp jl,pn xchg aaa adc pop and jne stos in jo mov jecxz mov mov mov movsb cmpsb je sub sti shr or sbb xchg scas sub orb adc pop xchg pop jmp adc cmp mov mov jo and (bad) push rolb push adc inc (bad) roll lods mov lret cmpsb ss or jge je bound push fimul fisttpll setl inc dec mov lret mov sarl and aad js scas into cmpsb add (bad) fwait lcall pop sbb out int3 fnstcw aam cmpsl and cmpsb push inc movl mov sbb mov jmp (bad) push push jbe jle mov sbb aad xchg sub jp xchg push mov jl or pop mov xor movsb nop (bad) test mov lea adc lods dec cmp jge cs xchg aad test mov out hlt repz stc push or rclb push or ja es pop pop add cmp xchg xchg jmp inc inc blcfill stos and xchg repnz imul bound loop sub inc (bad) dec bnd lcall pop push push and xor arpl fucomip cmp push jns imul mov mov stos out out stos and or aam adc rcrl clc xlat loopne jo cmp fs pusha int3 int3 push adc (bad) sahf push inc (bad) fist lock xchg loopne aad lods cmp les jg sub (bad) aaa out dec or into nop nop mov cmp sub incb adc mov push jecxz (bad) mov movl out adc mov js pop push stc add or xor insl test lods scas in ficom int3 into push test outsb test mov frstor xor imul mov pop lahf jno out aam or add iret daa test add scas into sub fmul test pop adc xchg rcl xchg add or movsb movsl adc aad in out add push lea insb out aas mov and les fbld nop pop pop in jb movsb out xor xor (bad) fidivrl push aad jo shrl push les cmp push out in ja add in out pop daa lret leave dec movsl jbe stos stos in jo mov push push in addr16 or push push cmp pop popf popf shl mov aas idiv stc js jmp mov loope sub inc std inc jno mov out icebp lock mov add jg cmova jb push push sarb jae push inc add push push sub leave dec ja out stos (bad) mov mov xor gs xchg sbb mov cmp mov lahf popf push and pop and add push movsl cs out and mov jo call mov add pop cmp or cld std aad lds mov sub loop cli xor scas pushl inc cmp or xlat clc push xchg push loope inc test loop push pop int3 out xchg idivl and mov cli outsl push mov rolb push fdivrp fcompl push xchg mov outsl mov cmp adc xchg or daa js cwtl enter lods es inc inc orl push adc aaa out orl jbe daa addl (bad) call inc (bad) adc and and cmpl popa das inc inc ss mov popa popa test loopne movsl fldl mov or call test adc fwait mov stos stos out push pop (bad) jne and jno ret mov mov push mov into loope mov pop sub mov mov (bad) inc lcall testl dec lret cmp mov jle (bad) into pop lahf adc xchg mov mov sub xchg pop mov pop int sub or testl jae adc mov push sbb jns mov daa in xor xchg push imul cmp repnz sti pop sahf pop mov jns or mov adc xchg loopne ficoml dec ljmp into popa mov fs adc push dec mov dec push nop pusha fcoms jb in xlat das ret (bad) cld lods sub mov js add adc mov decb push jae clc outsl (bad) mov iret enter leave mov aad mov lcall add rol sbb mov or sti xlat inc xchg out and std inc dec pop lds push and fsts mov xchg mov sbb jnp xchg loop push lea xchg fidivrl push or call cs add test and xchg push sbb add cmpsb or iret mov cld push add or insl mov test sbb cltd adc adc int mov cmp rol into movsl mov data16 or sub mov push mov dec dec dec or jnp sbb lcall xchg sub mov rclb adc jno outsb push push lret mov mov ljmp arpl rcl push sarb lock pop adcl enter rclb (bad) ds scas (bad) (bad) rcrl test pop (bad) cli (bad) sbb outsb rorb sub int cltd jo and mov cli ss frstor mov dec fnstenv in sahf sahf add jns dec pop popf popf cmp aas jb jb (bad) jmp sub les mov push pushf mov xchg lods lahf lods iret test pop fwait jp xchg test aaa cmp xchg push jb add das mov mov add and (bad) mov mov shrb xor xchg call jle push fnsave jmp mov adc mov mov stos gs leave push out xor cmovs into cmp fistp das push (bad) mov xchg cmp xchg out inc or fiadd cwtl imul or hlt cltd and sub pop (bad) cmpsb push mov (bad) gs lea mov (bad) loopne and mov adc mov mov test mov or loopne loopne sub push sbb lret dec dec mov xchg mov in jnp and pop mov mov in jle (bad) or push sbb xchg imul adc pop inc mov (bad) (bad) mov push loope mov xor and in mov cmp addl sub pop es (bad) push adc pusha pop dec jg or mov out xlat (bad) fwait xor sahf cmp (bad) xchg cmp and cwtl mov or clc sub out scas and incb (bad) lds push and fstps cmp add insl in cmp roll out js shr in int3 mov sbb pushf push int (bad) das fwait lods adc adc scas dec pop inc jle cmpsb push xchg pop cmpl or das out jns cmp ljmp roll jge mov xlat aaa push bound out jae repz sahf add mov test das pop pop inc inc (bad) (bad) int jns sbb mulb repnz ds inc dec dec fwait xor (bad) repnz movsb test mov xchg xor bound adc jnp das out out enter xlat movsl outsb into dec ljmp pushf mov cmp mov sub ljmp imul push das and (bad) icebp mov and mov push push jo mov outsl sub negb sbb jns xchg cmp mov pushf adc xor leave dec dec mov push mov cmp insb sahf sahf mov jns in jge popf rcl sub jae mov (bad) stos mov scas adc lock addl lods lahf nop mov xchg xor pop scas push or stc mov insb (bad) scas inc cs or inc es push (bad) jo add add std jnp sahf wrmsr ds out aaa mov data16 aam adc movsl mov cltd daa pop ja jne repz test dec dec into sarl icebp inc cmp mov mov dec cmp push cwtl xor adc popa lcall loopne dec dec mov cmp mov pop jle (bad) into pop xchg adc mov add and pop hlt sbb and xchg aam xchg loop test xchg push sub dec (bad) or push and dec dec add es jbe mov xor sbb cltd stos push jo out mov ret xor cmp fistpl out adc mov mov dec out sbb mov push ror int cmc push pop mov jmp in ret (bad) and mov pop rclb and adc lods in add aam or push and ret cld clc lret mov jno daa popf call (bad) xor cmp xor (bad) iret mov vpmullw popa in and fwait bound repz aam and fmuls fbld mov inc xor inc les mov arpl pop and fsts cmp out pop loope imul push mov jae int3 dec or test mov iret add test mov mov or mov sub xchg iret hlt jge lahf iret or ficom add mov mov arpl mov jnp repz scas pop inc adcl das xchg lds loopne data16 sbb es jbe (bad) mov xchg and sbb call xchg add mov pusha ficomp cwtl lods out test mov lods out les ljmp lcall hlt xchg aam test and push pop es (bad) mov jg out lods hlt dec js push xchg ljmp clc mov push test (bad) ds jl jmp shl cmp ds xchg mov xor sub inc les mov add add mov mov int3 popa jns push mov ret jp sub pusha das jno push xor (bad) cmp jmp sub (bad) lahf push jp and icebp ss push cmp inc mov adc or (bad) mov ficomp addl xlat int3 out sarl mov fcmovnu jns sahf add frstor sbb test sbb push aaa pop pop pop sbb push pop inc bound lea movl out dec rcll mov push add es pop lea inc mov xlat (bad) loopne ljmp mov lock in lods mov pop lods test loopne mov add ficom mov lret lea cmp and mov mov jns outsb dec pop sbb mov movsl sahf sbb mov mov scas out mov lods scas movsl sbb outsb jne mov pop mov add add enter cltd movd push sbb fcomps push jbe in cmp push dec xchg movsb shlb gs int3 into faddl jp dec lret or call or inc sub in fdivrl (bad) int cmpsl jmp pop adc inc add outsb js cld adc dec mov jno jge add mov mov cld push addl xor xchg inc (bad) pop and pop sub cmpsl pop inc jae int3 (bad) (bad) mov js (bad) test pop aas inc rorb xor test and cli ret in cli jns sub aaa mov sbb jno and sbb xchg lret cmp out popf addr16 negb dec stos cltd in add sbb pop add popa mov inc mov mov cmpl cmp jae ja jmp pop push fs imul mov xchg lahf (bad) sbb push (bad) mov push dec or aas das pop pop lds addb es andl inc pop xchg insb sub movsb movsl frstor test int aam sahf insb jmp adc mov andl lret and popa mov xchg adc iret mov or stos pop es shrb daa (bad) iret inc lea sbb and mov inc cmc cmc test mov sbb insl pushf xchg xchg sub xor xor or pop add popf cmpsb mov push in in sahf pop xchg movsl dec dec (bad) cmp pop fist mov int3 in mov ljmp sti adc xor push movsl lahf lahf jbe in out mov inc push adcb cmc std rclb pop mov (bad) lret push inc es stc cltd icebp mov andl stos ret sbb sub xchg roll fdivrs cmp imul decb lods nop and jb sbb jb ds xor push bound std hlt je rcrb inc cmp cmpsl mov jl push push or lcall ret add cmp pop and shll lahf mov mov jbe (bad) (bad) (bad) dec lea loop (bad) push imul xchg in in push jno xor repz push mov adc add mulb stos fstps sbb lret gs test inc das add and and and pop sti adc cmc jle imul insb add add xchg jmp push pop fisttpl test imul mov in sbb mov repz arpl sub or popf and iret cmp adc into push xor mov popl aad push cmp jmp push xor test push dec js mov mov fcomps insb inc push pop aam push or ljmp je dec dec mov pop dec aaa inc mov dec sbb mov out scas (bad) jae aam icebp icebp sbb or je xchg loop jmp (bad) iret out inc int3 es in add mov enter mov adc adc aam inc jnp or xchg stos mov push adc (bad) jmp insb loope and clc in cmp pushl push icebp test aaa idiv mov add mov jge cmc std sarb inc mov sarl stos pusha mov pop jae inc sahf cmp or int mov sub ret sbb sub mov push imul ja xor clc stc addl adc mov in int3 ljmp sub rcl dec pop test movsl aaa arpl or adc xchg insb sub int3 sub pop sbb or mov movsb inc jmp mov aad dec xchg jp jmp popl or jle xor push int dec mov lds jns je sarb pop push addr16 xchg or push mov jle cld shr mov nop jnp cmp les sub sahf xchg fisubrl xchg lahf test aad pcmpeqb daa pop in out xchg in fist daa mov push mov rorb bound (bad) pop xor adc adc out stos (bad) mov sbb xor xor sub adc inc (bad) dec inc in cmp pop pop add adc bound bound testl pop pop aad ja shlb mov dec clc cmp gs pop inc or fldt inc cmpsb cmpsb (bad) ja sbb xchg xor ja xchg sbb inc mov addr16 repnz cmp mov and dec hlt mov (bad) pop rorb push mulb outsb dec cmp pop sub lods sub jge clc popf pop push lods insb jmp mov add sbb aas not rcr es repz (bad) addr16 adc or jbe enter (bad) jns sbb out test jmp movsb movsb push in movsb jnp push push mov faddl lds fstl subl xchg inc or (bad) loopne aam or jns es lock mov and cmp mov sahf adc aaa lcall jl ret (bad) adc repz sahf xor nop sahf cmp pop fcoms test xchg lcall pop xlat add push fistp inc xchg int lds or pop jle adc insl sbb jb sbb xchg xchg out inc je mov into int3 inc lret or and es (bad) ficomp enter jp scas add cld xchg fistl nop xor (bad) or and lods orw jno xor lods lods imul (bad) bnd (bad) mov addb (bad) push adc mov jle or mov fldcw ljmp ret add xor in fsts dec cmp sbb sbb jno rclb jle pop mov push push cmpsb insl fldcw and adc es jns (bad) mov aam pop fnop mov and or mov sub insl jg sub pop push sbb push sub ficompl pop jno test pop fdiv jp nop cmc outsb rolb xor mov lds dec les mov inc mov or ljmp sbb mov xor frstor out xor xor (bad) cmp sub push dec xchg xchg cmpsb loope mov add jno push fcomps test pop jmp xchg adc std mov sti fucomp mov (bad) pop pop inc inc in lods and clc out dec movb or mov xor mov sbb pop iret cmpsl pop sub data16 jmp push loopne gs out les int3 lret leave dec iret xor scas mov mov pop pop arpl lcall mulb int3 int3 lods inc out jecxz stos mov rcrb loop ret push test add fnop mov aad hlt cmp pop ja inc enter inc push pop push out push loope nop cmp cwtl addr16 shl jmp out dec jno inc lret repnz addr16 repz mov lods sbb sbb sbb stc jl dec xchg fstl rcl sub pop cmc jle dec jle imul aas xchg packssdw sub mov sbb arpl lret loop dec push nop divb sbb inc hlt out in inc aas or mov jl mov or jne push jae fist push mov lret movsl xor arpl jne daa mov (bad) cwtl lock imul mov mov scas cmp cmp or jbe and mov imul or xchg adc mov xor xor and into ss or in pop jl cltd popf push movsb mov dec adc addr16 adc aam js rcrb clc mov mov out rcl (bad) jmp arpl in sub das cltd dec stos push lods inc ja repnz mov add adc jne pop push push call int repnz outsl jge outsb push data16 adc jo xor cltd cltd in and mov lcall mov xchg call out xchg mov ret inc pop mov and ljmp lods cld outsl insb inc int3 pop pop aam push popa add push jmp pop dec dec js dec and in push fwait das (bad) cmp lods ficom jbe sbb lcall cmp add push out xor xchg in cmp mov sbb push xor dec dec mov mov mov adc rorb mov les jae push xchg div jge add sub pop xor int3 cwtl cmp mov cmp mov mov jno fwait mov std std popa ffreep insb mov jle (bad) pop inc inc pop xchg sub enter leave push mov dec mov fnop aam push aam into int testl pop rcll jb cs xchg loope div inc jmp mov xchg mov sbb mov mov sti loope mov mov adc dec sub jmp sbb mov (bad) jne aam jmp call pop loop outsl fwait cwtl or dec dec or cmp mov ja pop cmpb push dec dec cli add aaa xor div adcl dec js dec mov pop das dec xchg in or mov push push in add test adc inc dec push mov xchg cmpsb in dec jge xor mov cltd cltd cwtl sbb dec dec (bad) (bad) pop pop ja or xchg (bad) push push lock dec clc clc push push push pop pop in aas test push mov iret (bad) stc mov call sbb mov or jb out lods pop sbb movsl imul mov push mov adc pop int add and xchg dec cmpb fidiv push ljmp lcall (bad) sub mov adc popf repz add jg mov push inc jmp push cmc cmc test and cmp sbb insb or imul mov pop scas into xor imul mov mov adc jns xchg addr16 jns sarb xchg mov vzeroall dec gs jmp mov and xorl push mull (bad) (bad) sub jns adc jo (bad) scas int3 pop jb cmpsl mov jb push loopne dec pop fwait sub call adc dec fcomi mov mov leave inc into jnp jne loop pusha push adc shrl mov insl insb bound loope insl insb das push imul add sub jmp (bad) adc fcoml fwait dec xchg aad fldt es jle dec pop pop dec int scas (bad) jmp mov jg insb sarb fimul test jae sub mov int jle sbb test jmp mov fisttpll stos mov add sub push fldpi push adc mov test or roll addb mov test mov lods lods es pusha dec notl test int jo iret addr16 inc addr16 test pop out aam mov xor aad mov pushf into xchg cmp mov enter popa popa test pop (bad) or test nop inc je pop pushf popf imul repnz mov fldt jae push scas lret mov idivb ss stos shr push push jns jne int push dec mov repnz and xchg cmp adcb loop mov (bad) mov cmp xchg es into pop lods and adc fbstp mov lock mov divb dec dec outsb aam imul lods orl dec cmp cmp or add inc fdivs repz ja dec dec xchg cli mov inc test mov cwtl icebp fs lock cmp mov push push cmp fs std (bad) cwtl mov mov or imulb enter or pop popf movsb sbb in aam sbb sub mov test std mov pop add sbb and mov mov xchg fsubrl aam js push test jo xor pop xchg mov mov addr16 das lahf dec or or aam aas test loope push es ret shll scas lods js pop insl das sbb jge icebp cmp push hlt jl int stc mov aaa movb inc fstpl push je enter pop push add pushf pop jae jnp push adc js cmp jle mov pop out (bad) es popa (bad) out jmp and call setae hlt notl pushf test fbld add add test adc test lahf dec jge outsb pop mov scas pop and inc xor fxch int push and insb push pop in rcrl (bad) in mov arpl repz sbb imul out sahf sub sub sub lcall dec or xchg pop cmp in rcl stos insl xchg inc aad cmpsl ss push dec xchg xor mov adc cmpsl sub stos dec fldcw (bad) jae pop xlat jge jge sbb or stc sub arpl mov fisub jo sti cli pop jmp insb and fisttp (bad) ficomp in jbe lods mov sti or cmp (bad) mov les es (bad) movsb and push daa and xorl fnop ja sub sbb out add repz scas xor addl push faddl mov inc inc stos jae mov mov xor push dec jp pop repz test cs jne ds or push or sub and mov inc dec cmp ret test mov test cmp movsb movsb jp pushl imul iret add push addl lods mov pop xorb push ror xor sarl sbb mov repnz (bad) cmp or test lea sbb mov adc (bad) or xchg sub loop imul cli daa push popa and sti aas mov aad or loop addr16 and cmp jbe shlb adc or std cmp bound sbbl push movsl push adc jl test lea mov lea xchg sbb nop adc push and xchg sbb ja adc inc jae pop sub lock lcall pop jae jp movsl dec je aad push daa ljmp adc xor adc cmp cmpsb js dec std push lcall sub iret in rcll rclb or cmc insb in sub mov adc push lea inc pop inc cwtl and adc add ss jno dec (bad) das popa pop adc adc sbb daa jb pop pop push lret aam jg jbe imul lahf fdivrl jmp rcl pop adc das xorl xchg jne lods lods es cmc lock adc jo xchg adc stc jmp push stc add xchg and stos cs xchg clc inc in andb push sti into sbb shlb sahf pop pushf aas xchg mov pop pop pop out add push and xchg jns popa scas loop sbb lcall rcrb xor sbb lcall fbld dec lret lcall pop std mov jg mov inc imul pop xchg fistpll popa cmp sub cmp ret and cmp sbb adc adc cli mov incl mov adc mov repnz pop shl xchg mov xor imul jb xchg stos push cmp ja xor xchg jne pop in in into mull sbb jp scas adc aas jecxz mov mov movsb in (bad) repz fisttpl aaa call and add rcrl fucomp pop cmp dec lret sbb cmp andl sti mov fmulp jle aaa xor dec dec test push ret mov jno push psubq aas pop daa add stos xor dec sti push adc pop dec adc dec sbb icebp sbb jae sub cmp enter xchg add jl in adc sbbl je cmc testb xchg xchg ds push pushf sbb sbb jae movsl sbb das outsl push sbb fpatan mov out cld (bad) jp cltd pop xchg and dec iret jge pop sahf pop mov pop or int3 mov adc cmpsb loopne faddl cmp jmp fadds pushf stos mov mov add jg lret add sbb and or push xor fpatan add mov jno adc pop lahf (bad) jns jae add mov mov hlt or stos xchg test ljmp and add mov aam add mov push dec dec mov mov mov outsl in adc mov test pop xchg icebp icebp sbb (bad) adc je dec sub adc dec js out loopne int pop dec xchg push and je dec inc cmp add sahf sahf loope das sbb adc daa pop xor push xrelease jge cmp pop jmp cwtl mov xor dec je sub lods nop sbb adc rcrb (bad) lds das das fistpl and dec pop (bad) sbb jae xor mov imul xchg pop (bad) mov cmp rcll pop inc mov aas out outsb sbb sub push daa stos xor addr16 cmpsl addr16 pop fistpll xor aam in pop ss cmp pop push cmpl call shl cmp cmp xlat loop (bad) fisubl std movsb fwait sar ds jp stos in push scas xchg xchg jmp ja out ficoml mov std add rorb mov aad in in lahf and or push cmp sbb or pop xchg (bad) sub jl vpor sub cmp cld cmpb fidivl orl mov lock mov js cwtl mov dec push cld inc (bad) (bad) stc jb jmp insb sbb or iret or inc jno xchg stos mov popa ljmp cs movsl rcrl jnp (bad) sbb dec in insb push xchg sub add inc leave sub jne inc leave pusha ret cmp fimull xor mov mov and and lock mov inc movsl xchg lahf stos dec and jb cmp movsl out mov daa mov mov ja ds push xchg or push lea xchg iret fwait jne sub and dec sbb jl test push sbbl sbb sahf sbb cs jno shlb cmc outsl sub out (bad) incl imul ljmp int3 or xchg sub push adc jmp sbb arpl cmpsb js inc addr16 add xchg xchg xor pop mov in outsb dec loope add lods xor clc jg pop and insb sbb lods add fistp negl push outsb iret mov or cmpsl push mov popf mov (bad) sti int3 sahf push popf fwait call dec cmp jb cwtl xchg push and add jecxz xchg out das mov sbb push (bad) mov adc and (bad) fild sub mov xchg nop pop imul mov xlat push (bad) xor leave dec (bad) dec icebp fild sarb push push in fist fdivl jns sbb int aaa cmp hlt xor rol roll addr16 and loope int sub jno pusha lcall ds js adc push les xchg mov mov push call fsubrl lea and mov mov xchg imul lret dec sub call mov cld xchg lret mov ljmp pusha sub inc fsubrp ljmp push ljmp cmp (bad) ss pop pop cmpsb xlat inc inc xchg out dec loop push push data16 inc je test sub mov aad add (bad) je out sbb popf push and imul int3 int stc sub ss repz adc cmp pop addr16 mov outsl xchg mov imul das shll fdiv jge push or add cmp push rcrl test jb xchg adc aas mov mov (bad) shll sub sarl mov cmp mov pop roll inc in mov jnp call jae imul shr xlat push push push pop mov (bad) (bad) lea rorl rorl dec (bad) cmp cmp xor mov xor add fisubr mov mov xchg xchg iret sub xor pop cli fmull mov jecxz or stc push je js mov sub arpl imul jl xchg cmp dec jno sbb mov add add in imul xchg pop nop int3 mov adc js cli imul js and cwtl push and mov mov scas inc pop dec adc fdivrs test call repz push sbb dec lds mov sbb add out aam movsb xor xchg int3 adc sahf popa daa stos adc (bad) inc adc cmp pop xchg lret lret dec movsl xchg lcall sub hlt xchg jg daa mov mov xor shrl mov sti or inc test inc xchg dec das inc adc lods ljmp out push mov stos scas decl cmc aad lods pop jb pop push (bad) js cld sbb or popa in jl xor adc inc leave js test decl pop test mov add xchg jns adc push insl cmp lret inc xor fistp add adc je jl xor xchg pop jecxz add sub stos fidivr adc out das rorb xchg adc es ret and xor jno push mov dec sub mov push mov pop repnz pushf push outsb mov dec lock stos stos out loope imul outsb jecxz jo sbb xlat out ret ret pop aaa fcompl enter sub mov and test shrb mov add pop mov or jae xchg fidivl adc bound addl jmp fimull sub mov ficom sbb insl je push pop pop popf inc or xchg xchg loop mov pop movsb mov jns aam repz push jmp in pop inc addl pop pop sub lods stos fisttp and fist repz das stos lahf push into xor fcmovne sub leave pop (bad) sti sub call xor (bad) sub ficomp movsl movsl xor popf lret pop pop bound xor adc push int stos xor dec push andb xor insb aam pop aas ds jb mov hlt je scas push jge pop add or lahf push sbb add ret jecxz cmpsl fdivrs mov ret dec imul sub jmp sahf nop mov mov pop je idivl bswap cmpsb cmpsl int pop test adc addr16 push jae jns add jo mov sbb shlb inc les push inc mov scas das call lcall sbb lods mov stos test sbb fisubl addr16 gs or push fsubrl inc fwait test lret mov xchg xchg xor cmp imul in push movsl push dec ja int3 clc clc inc dec mov (bad) jp or push gs test cld ljmp ljmp mov and mov rcrb shr cmp push cmp pop pop dec xor add push mov sub dec push or aad add adcb out shll test ja fs je popf jle cwtl fwait sbb push in adc sub ja imul mov sarb xchg mov mov repz gs adc (bad) jl mov pop sub and jbe adc std pop aas lret fnstsw add (bad) sub pop inc int xor add xchg jo cmp push and xor mov push jnp repz (bad) mov push pop jne cmc lahf popf mov fs xchg jg inc cli clc sbb scas cmp sub mov std and mov cwtl ret pop (bad) xchg xor iret fstp xor mov lods mov out test ret mov outsl mov push push and or xchg pop jno fs orl push xor out mov iret out fwait jbe repnz in in stos mov dec dec das sbb dec popa jo scas dec pop push data16 cmpsb push enter jg xchg outsl jp or xor push pop push xchg xchg cmpsb loope rorb pop addl mov test sbb repnz adc xlat mov stos push call scas lret fldt inc stos and or add lods cmp and arpl ljmp or cld je movsl pop shll pop xor push jle rolb jp dec push adc lcall daa add lret leave xchg dec xor das mov and pop divl or jge push notl ljmp mov pop pop aam mov int3 into mov push daa and loop sar stc je sbb addl adc cmc testl in mov xor mov (bad) in and xchg int3 xchg lret pop pop out dec xchg dec add push mov or int push jecxz jle pop stos adc ficompl in dec aam jecxz cmpsb out stos test adc push push add imul movsl std mov lcall sbb fs (bad) aam push imul test sti inc scas jo (bad) cmc inc xor insb sbb shr fdivl cmc mov or adc (bad) adc rclb pop sub andl sub sub add pop pusha inc xchg out daa or sub shrl mov scas push aad mov push pop ja mov or xchg sbb mov xor dec and xor add into ss mov (bad) arpl dec pop push mov jbe pop xor add arpl push mov (bad) or sub lods hlt lods (bad) jmp (bad) sub and shrb addl sub pop jbe les jbe jecxz dec add and add das andl ds mov jmp inc ss popa inc (bad) push mov sbb mov xor rcrl sbb fs sbb sysret in and sub call out jo push xor and mov rcrl das xchg scas push shrb pop inc add cld outsl in das jbe loopne and or add fwait jae push popf js (bad) in outsb mov xchg jl dec sub imull ficoml or push push data16 daa test sbb je cmp ljmp push adc jns cmp sub add int3 jno add popf pop orl or jge insb lods scas lods (bad) movsl ja dec icebp test lock lds mov lea add out and je inc (bad) xchg ss push jns add ss mov or aad repnz test es mov arpl mov pop loopne mov shrl and jae pop es ret add cmp cmp pop loope mov pop data16 lahf push or lret loope dec jl add rcrl pushf add sbb movsb jecxz popa cmp mov mov stos fiadd and orb (bad) adc test jle (bad) jecxz sub and sub adc lods mov xor mov ja push pusha dec daa push shrb test sbb cmp pop popf mov fwait in icebp jl mov rcrl fmuls les dec mov fcoms add sbb test std inc inc dec rcll xchg pop adc pop jnp mov sbb mov scas out mov add push rcll dec xlat jne mov int sub test mov xor push lcall nop xchg aam loope movsl loopne and cmp add loopne xchg or js add bound mov mov pop sbb sub orl jl cld push adc incl and data16 mov adc sahf sarb adc jns xchg pop cmp mov cmp and sub push adc movsl addr16 adc xor pushf out lods push push dec pcmpgtw mov inc xchg pop mov das mov add sbb cmp nop fs or mov ds and push pop sbb adc iret jbe mov push ficomp jmp pop fisttp adcb mov xchg jmp ljmp lcall insl sub lds insb es adc xor dec jne das test mov xor push sbb and push push pop push daa ja mov add addr16 xchg adc xchg xchg mov and (bad) popa jae jb inc jp pusha and pop dec add mov push inc stos adc mov xchg stos (bad) rorb aam mov push lock pop (bad) jle pop fild cmp lea scas imul jne xor jmp in (bad) dec jnp adc stos fist (bad) or mov push loope,pn (bad) and push stos adc or flds out sahf movsl out jecxz and in mov fucom mov pop mov insl xchg xchg mov nop stos inc in (bad) (bad) xchg add in pop into into outsl aam es mov pop dec or mov pusha iret and inc push leave dec or popf in dec dec or cmp mov xchg xchg and xor aam xor dec dec jb inc inc fcmovu push push or add sbb xchg xchg mov rcl outsb outsb scas scas cmpsb movsl cmc repz call mov div pop pop loope (bad) (bad) cmp sub (bad) push push pushf pushf pushf pushf sbb dec dec (bad) (bad) pop pop ja or xchg (bad) push push lock dec clc clc push push push pop xor jae xor add add add and inc inc dec jp xor sbb sbb sbb cltd xchg sbb ljmp add clc inc inc rclb je add jb sub cli adc sub xor ss in scas shr ljmp mov sahf pushf (bad) jmp pop aam xor add sub add mov test dec out cmp mov cmc jle mov xchg xchg icebp mov fsub fidiv xor insb push mov push stos in int3 mov add inc mov xchg dec (bad) in in sahf adc mov or hlt mov jae cmpsb mov sub push and pop push repnz adc and rorl (bad) repnz xlat jne or inc in stos scas call mov cld sub movsb sbb stos jecxz dec mov in inc test xchg std int sbb pushf sahf add push (bad) adc pop and dec cmp les pop bound xchg add in das xchg xchg stos stos addr16 xor repnz lcall ret fstps addr16 mov fnstenv dec mov sub mov lds clc cmc test test dec in cmpl fwait imul jne inc pop imul dec dec (bad) xchg ficom pusha mov add sub int3 xchg fisttpl jns jg xchg imulb jmp inc jno inc popf cs push jecxz sub jno push imul lahf (bad) inc pop arpl scas fbld movsl fstl imul mov and or (bad) notl iret push ljmp mov (bad) and mov sbb fldl xorl jae cmp mov sub and out and dec add (bad) lret data16 addr16 adc or (bad) push mov popf lahf and sahf mov inc inc cwtl cltd out fs repnz xchg sub mov stos or pop sub jbe push fidivl imul test push (bad) or fwait push leave cmpl mov adcb in sti stos mov or (bad) sbb int in xchg fwait insl test (bad) (bad) sub or cmc jno cmp mov sbb push push loop jg sbb int mov add adc dec stos cmp dec fcoml sbb lcall fcmovnu cmc cmp jno stc lret and mov lret fsubrl dec fcmovne lea or add push test sub into divb lcall ret pop aam lock xchg pop rcl lods arpl (bad) pop pop ret sbb pop aas dec bound mov inc stos push lods fldenv add daa adc icebp jl cmp scas sub jl mov (bad) divb rolb pop addr16 push jnp aam test and iret je (bad) xchg or hlt hlt sub js imul sbb jmp rcr adc hlt inc and cmp call lods sahf inc and sldt jnp jle xor mov stc stc mov iret dec repnz xchg icebp mov out push sahf and mov xor (bad) xorl out and mov out sbb test pop pop xchg jnp xchg adc stos out ret aad popa data16 les lcall pop sbb (bad) ljmp enter pop (bad) rcr mov in lods lods out ss shll adc or mov outsl insl jl cmp jl addb cltd fwait cld ret push adc xor mov jo aaa pushf inc lods dec (bad) dec add mov push mov fstpl jnp hlt cmp movsb cmc jmp lods jmp dec (bad) and sub lcall mov xor adc jno testl call fildl fidivrl outsb scas data16 movsl mov jno mov and imul (bad) js push (bad) sub pushf sbb fs (bad) xchg mov iret cli sti adc jno rorb dec pushf xor xor inc out jns ret mov or sbb xchg popf xor ret add push or add cwtl loopne dec dec or dec push insl lock xor lock jae inc inc rcrb or push lea pop jno sub daa stc test push in loop fs mov repnz fisubrl in jo imul (bad) fcoms dec mov mov or adc (bad) sahf mov push (bad) mov jmp scas xchg xor or pop ror test pop dec rcl lret inc mov sub xor sbb adc or sub popa jg xor cld clc clc addl in cli jne ret mov add sbb or leave xor (bad) aad repz jo fidivr psubb sub ljmp dec or push mov mov ljmp lods scas scas pop popa stos push cmc cmc lea xchg sbb shrl fs aaa sub add pop xor sbb sub sbb xchg mov ja mov cmp add (bad) subl mov or cli pop jmp xchg push imul mov inc mov psrad jbe mov js adc arpl rcr loope push fcmovbe mov sub loopne lds stos aas aaa pop pushl xchg cmpsl test sbb movsl cmp inc xor bound mov pop imul pop pop xchg stc stos std push cs lods sbb arpl jo lcall adc jle mov fisttp dec jno sub gs mov out cmp in push push sub pop imul fcompl jae xchg jp loope in add callw fs lret xchg gs leave (bad) fcmovu add push in jl mov jmp push push in sbb jno mov pushf rcl jnp std pop xchg cmp notl mov add es imul lret push push lods lods lahf push xchg sub jnp repz and call hlt add das setns add (bad) and inc pop sbb inc inc es jmp mov insl xor or pop push fstl inc mov call ret adc subb stos out out and popa cld jns jae testl popa fsubp (bad) gs sbb mov xchg orl je outsl dec flds adc aas loopne dec sbb mov scas and fsubs xchg cmc sub sbb lahf push pop inc fistp add sub xchg cmp icebp shl cmp mov andb repz std dec or mov aas aas jns push sbb jo sub testb (bad) js and adcl adc lcall cmc popa pusha xchg nop rclb pusha fnstenv mov call or push push mov and jp imul sub push adc sub pop cld and xchg loopne add jae arpl loopne jle (bad) mov push jae rcll lcall jle aad pop lcall add adc fmull mov les in jmp out mov xor popa iret inc in sbb push popf in test and adc mov in addl iret int pushf pop bswap leave dec sbb adc jno data16 loopne ja (bad) push pop adc pop mov fdivl mov sub daa xchg imul shrb sub data16 lods mov out mov or push add jo cmp shll lcall inc sub (bad) repnz dec dec dec inc inc pop jle sahf inc sub test push popa arpl test cld xchg addr16 pop jnp repnz adc pop arpl mov fwait loopne lcall fadds bound add pop or cmp inc xchg (bad) dec xor sbb mov out push push (bad) and jp mov cmpsl cmp xchg icebp icebp lock adc jle cmc and insb loopne jae rol out pop aaa enter nop int stos cltd xor je pop out sbb sahf std fsubrp push sti incb adc sub jno jl xchg push add (bad) xchg jo pop adc lods int (bad) les xor jne pusha pusha pop pop imul cmp out out scas xchg xor inc jo add rorb bound (bad) pop ljmp call fisttpl bound dec in inc push dec lcall adc mov xchg inc xchg arpl aam sbb imul jp pop push adc ret pop cmp xor in mov cmp dec mov pop (bad) dec popa pusha int3 int3 xchg movsb xchg (bad) or jecxz mov mov pop jecxz adc mov mov fisttpl mov dec mov or add add push adc cmpsl cmpsl mov lock xchg add push enter out std aam in sti hlt mov lods iret out cmp sbb fdivrp dec inc inc sar jb or xchg test mov sbb cmp imul popf pop jl jmp and insl mov loope add jecxz ja les mov into ret pop fwait xchg fsqrt sbb and add push sarb jnp inc xchg adc jmp dec xor movsb pop jo xor lock and aad leave lods dec je and or imul inc mov daa scas push loop popf mov fldt mov dec loopne repnz dec nop pop aas push pop cmp adc cli fcomps in xchg xor adc pushf dec add and lea fnstcw in sahf sahf xchg push rcll jo jns xchg push xor mov jge dec jge jmp call cmc gs les xor mov xor xchg push rorb push mov jns push cmp inc (bad) les cmp push or and adc aaa jmp and hlt or out hlt or jae,pt es mov sti sbb stos add les mov cld xor xchg adc xchg cwtl imul sub leave aad and je mov and push pushf (bad) sub shlb ret push ljmp inc movsb lret add fildl decl movsb outsb shrl push xor addl in js adc scas pop mov imul cmp or jmp dec xchg xchg mov mov inc cld jmp or xchg push mov pop push out fistpl inc xor je jg jb sub fdivrs xor mov in aas mov jno aaa jo mov insb jl add je mov (bad) repnz jle or dec cli adc sub fsubl das pop (bad) push movsl inc rol xor mov mov sub push mov es mov sub (bad) cmp psubsw push adc imul mov (bad) ja sub addb xchg jo push push mov mov xor cmpsb leave notl add pop out cld dec mov xor lods loopne outsl mov or push xchg add test push js xchg sub imul scas lods aaa stos lret add pop std dec push mov adc cmpsl pop in sbb xor out (bad) rcrl stc adc xchg movsl ret inc inc and jl aam pusha fcoml addr16 jo mov aam pusha aad xchg xchg jmp push pop pop (bad) cmp dec imul sub mov xor pop xchg stos sbb adc or nop mov push inc dec lcall jp sahf fwait fwait xchg sbb mov cmc and int3 mov or mov mov fcomps xchg arpl ret sub push sbb push dec push pop lahf fnsave adc jecxz push and (bad) dec test scas stos fldenv ficom sahf xchg xchg icebp test pop inc repnz daa in lcall xor sub loope jecxz or cwtl inc adc scas mov cmpsb ret sbb fdivl jmp xor adc out mov xor jbe cli es sahf insl adc sub inc outsl jbe jae std xorl les lock stos lahf and pop or (bad) mov pop outsl push jae push out mov popa imul pop add xchg add dec cmp int leave test pop sub fs and or fs shr shrl (bad) cmp jnp pop lcall push aad addr16 add push mov arpl mov das pop stc sti fstpt xor (bad) movsb xchg in pushf push xor mov xchg cltd sub scas push out bound scas lea xor out cmp dec lods dec (bad) in pop mov enter mov out xchg aas rcll mov addr16 push je sarl (bad) mov pushf jle or and jmp mov cmp dec xchg pop jl add je mov mov js inc data16 stc add lods into pop sahf cmpsl inc fisttpll sub jge lds stc sub pop mov mov xlat int3 sbbb scas jl add xchg sbbl push dec xchg xchg mov adc push jecxz and mov dec dec into xchg mov push gs mov jae or mov xchg mov daa add pop hlt test outsl out dec int3 inc inc popf out jne sbb loope dec dec push mov cmp mov lret testb dec lret inc divl inc inc stos fidivl pop xchg sbb sub ss stc popf enter jmp (bad) mov mov or js in enter push fldenv lcall xchg adc das iret add pop rcrl in or int3 mov bnd rclb lret fisubrl push xchg add mov fcomps mov (bad) je xor imull mov adc add adc push push out push pop add fmull aam and adc lods sbb stc fyl2xp1 hlt mov leave scas dec cld sahf adc out in mov lcall aam aad push add outsl mov stos xlat fldl stos daa pop cmp out push loopne sub loope mov (bad) pop mov jo jno sbb fsub nop test mov lea movsl jae jp xchg rorb sub fmull loop gs dec mov pop movsb lcall push xchg pop xchg inc fbld jns cwtl add adc jbe in popa sub xchg sub mov ss lock mov cmpsb je sub mov out add js xorb cmp pop pop xor xlat and sbb in cli daa es jns jp mov int fnstsw pusha popa test shll mov pop out sbb adc adc test movsl das icebp adc fisub out pop jecxz xchg jmp std fldt fstp (bad) ret pop add jb addr16 jge xor xor lods lods out popa addr16 mov (bad) fidiv sub push jae popf jle out sbb insb insb cmp jge xor dec dec lock and or push dec sub adc imul lret stc aad inc pop push fcomp xchg psraw movq (bad) cmp fs adc xchg cmpsb loope mov mov inc add outsl push inc sbb gs jb sbb jno pop out jnp inc fidivr (bad) xor add clc mov and rorb outsl or mov cmp lods lahf pushfw inc push dec in push sbb popa pop pop push gs mov mov mov pop lds ss into ja push scas jno xchg addl (bad) and sbbl int3 inc inc inc inc leave (bad) mov push out push add dec push test adc (bad) push imul sub push int (bad) ljmp push add stos cwtl push test jo js push (bad) xor xchg pop adc pop mov (bad) call and cltd fistp daa sbb dec xchg outsb add fldl adc pop pop sbbl test and aas outsb rcll xchg push sub mov and cmpsl sar adc nop jmp leave cmp adc sub jo xchg xor inc fistpl and sub leave push and add mov adc cmpsl ljmp into adc jge lock insl loopne cmp sarl lods jl ljmp xlat aad ret or insb lods (bad) pop lods jno andl loopne aas mov inc or mov test fcmovnbe test adcb sbb repnz push push mov push data16 addr16 jno xor or xor add nop divl jecxz push jae mov fldl xchg adc sub or ljmp sub jo aad fsubl in ss inc mov nop es lods jb (bad) xchg mov pop cld mov inc fisubl stc add das das pop pop inc inc xlat (bad) and addl mov mov leave xchg push push pop pop push push mov rcrl ds out in jnp mov stos stos out out and sub sub ljmp adc es push or cmp scas push add mov and ret out in lock push (bad) stos inc xlat add or lock xchg sbb sbb data16 sbb arpl sub jae bound (bad) icebp cmp add addl push push in jno ds xchg xchg (bad) push aam scas xchg ret hlt xchg int3 outsl jae (bad) icebp sub add shrl repnz xchg sahf aas stos mov incl aad push call in scas scas pop nop mov repz jle cmp xor dec sbb or iret or xchg and movsb or lods outsb or mov or repnz sbb fwait push loopne and lock and cmp (bad) mov out push js mov cmp iret lret and mov into into cmp aaa aaa rol gs mov (bad) mov hlt fs sbb push push inc inc pushf pushf in dec dec or cmp stos js sbb jbe nop mov (bad) or push push push push push push nop nop mov sbbb clc and stos mov shrl dec mov push (bad) pop pop in jno xor adc mov test adc push out std roll pop jmp cli pusha mov nop sbb and or jge push into into aam dec fisttpl mov jmp imul and pop scas pop sbb icebp and xor icebp sbbl or pop insb jae mov stos xchg (bad) mov or pop sahf adc cmp jmp pushf popa cmp cld in sub xlat add out fcom out ret push bound das cmpsb jne ret loop push (bad) dec cld stos out sub jbe lods jmp fsubl pop push sbbl dec sbbl outsb mov out push xor fcmovne aaa ss rcll jne dec lds mov jne add je mov xchg fistpl cltd xor ss (bad) std aad pop lds add fsubr cmc inc jno mov mov int3 (bad) jnp cld xchg fiaddl add mov idivb (bad) rcl push jmp sub inc inc aam pop or jno or mov inc arpl inc xchg cltd pushf pop mov mov inc adc call das loopne adc and loope mov jmp (bad) gs outsb xchg bound pop xlat xchg xlat in int insb out fstps jbe pusha inc cmp les out sbb mov inc add out push and pop in hlt mov popf (bad) mov lcall ljmp out (bad) dec xor pop mov jo cmp (bad) pop jecxz out xchg sub mov mov pop cltd pop xor jo inc mov (bad) mov (bad) (bad) push std mov add orl icebp test ds mov sbb ret movsb sarb es jno jecxz mov es mov inc (bad) int jb popa iret jne sbb adc lods push cmc mov xor and int3 lods out xchg xchg mov xchg test in in and mov inc ret iret cmp les mov jnp xchg iret iret test std insl insl rol dec adc pop pop dec dec xchg xchg in out inc add xor mov sub cmp fdivrl xor dec dec aam or add or adc xchg xchg mov aam and pop in sahf pop dec or push inc inc mov push jns push mov jo das push adc xchg adc gs in ds mov jl dec and insl out stc pop cld jbe out xchg push subl icebp xor jne gs js (bad) sub push cwtl lret cmp rcrb ficompl out push or mov sbb xchg push jp (bad) aam rcll mov in cli push dec in push ljmp lcall pop rcl sub arpl sub push push pop pop dec dec mov cmpsb (bad) les cmp lods lods stos stos fcmovu push push icebp icebp addl sbb test push js ss aaa aaa int dec dec add push push gs dec dec ret push out out pushf pushf mov fstpt push into push (bad) lock mov jle subl add daa lcall jle jno pop (bad) subb or push xchg cwtl (bad) aaa aaa les jmp aad inc push das pop push xchg add loope push (bad) mov mov dec jp adc pop inc sbb and xor movb pushf pushf sub insl out ds out rcrb aam lea pop push fild sub sbb and pop sbb (bad) push aas inc movsb jne in lods push pop and (bad) pop lret cmp insl mov mov mov sub ficompl dec push push cmc jne test push clc jae xchg mov insb in addl cmp inc into lcall (bad) push add scas inc adc mov mov aad lret cltd (bad) fiadd mov scas ret mov sbb sarb iret jg mov or test sahf sub dec jo adc fdivl scas testl clc add pop sbb incb cmp jb xor push js sub mov mov inc sbb rorl iret inc ss lahf mov dec xchg scas cltd stc ret dec jmp mov xchg xchg popf lock arpl and stc mov enter mov rol pop out cwtl repnz test test mov mov push and (bad) repnz cwtl loopne xchg rorb pusha lds je aam inc mov fwait sbb inc or fnsave loope in xor fldz stos fidiv jge std fldt sbb test sti out repnz inc jae,pt shrl pop pop cltd cltd cltd fwait push (bad) femms repnz cwtl je push add rcr fistpl sbb xchg jns cmc dec jae mov xchg push fwait push adc call and add std mov insb mov and cld aad dec push fwait mov sbb sbb data16 stos fbld test les and cli jno insl adc cmp ret fsubrl xchg xor or in push ljmp stos pop cmc dec sbb and popa in xor jg ja push or sbb and inc insb fcom insl jge mov scas push fisubl pop insb push cli jno test rcrl jp inc outsb mov stos mov pop cmp aas xchg jmp or xor or dec mov and xchg push push ret mov shrb pop (bad) push cltd mov add in push (bad) (bad) jmp das bound or jo add nop xchg test mov inc addr16 inc inc scas jbe and scas push call lds out or push leave sbb or ja adc fwait and fnstsw pop cmp xor bound sti sbb cli insb insb sub sbb push daa adc push sub popa scas js stos lds dec mov adc mov (bad) inc mov mov cmp test mov lds repz sbb mov mov and sbb adc jle loop js (bad) lods push jp or cmp pop loop loop movsb xor (bad) mov aam adc mov add mov repz rclb repnz repnz gs and popa jns xor out imul or in or push daa mov xchg push dec (bad) aaa xor cld cmpsl add out cmova bound (bad) ljmp das sub stos push cmp fidivr and repnz in loopne loopne and mov mov xchg lret push in in jge shrl xor fisub fldt pop rorb mov mov rol cmpsb cmp add inc or jb mov stos dec aaa jp mov test movl jno xor dec sub sbb daa xor fisub xor cmp fildll jnp,pt mov jo push and and scas sub stc mov in jecxz cmpsl dec pusha dec ret es adc push pusha cmp sti aas add cs adc dec cltd cltd cltd adc mov in pushf inc cmp push cwtl popf xor out mov out lea fdivl in aam sub aaa mov push add jno js sub cmpsl popa sub lahf inc aas xchg cwtl sti sub leave sub addr16 lcall xchg aam enter add jno xor lock mov aaa lea sahf imul xchg pushf xchg or aad rolb pop push xor daa movsl in sub sbb dec mov (bad) fninit mov add xor xor loope mov (bad) and lock lods push adc adc ljmp add test pop ja mov adc mov push data16 pop dec mov add jae pop xlat pop mov xchg or lock mov sub ljmp jo xchg out and fwait cmp mov lea push push mov add dec jnp cmpsb call adc std aaa aaa scas (bad) lea adc push fstpt add inc sbb mov in mov push mov jnp test inc dec out pop pushw sub adc jecxz xchg xchg stos stos scas add cli pop sbb xchg add and daa pushf mov and lcall dec lea (bad) ss jb cmp and push pop inc mov (bad) aad (bad) scas pusha in push push adc insb push dec cmp inc aas hlt lret hlt dec dec add data16 (bad) aas pop xchg sub dec push imul adc jne sub cld cmc int jge add sub xchg (bad) push jo jo add jo and xchg push mov mov jnp fadd pushf mov mov ret cs pop (bad) mov xor jecxz sarl xchg in mov lret andl lock sub dec xchg mov in xchg cmpsl xchg xchg aam (bad) (bad) ljmp sbb mov and lea dec ss xchg or xor mov icebp xor orl lock cld inc and xchg pop or les xchg repz jp xor loope (bad) stos arpl loope sub dec stos lret (bad) push (bad) or icebp push push push adc pop andb cwtl cmpsl cmpsl negb (bad) or push insl xchg imul cmp mov rcrl aas aaa cmpsl imul in pushf pushf loopne cmp icebp lea addb sti imul stc mov mov sahf xchg inc lods rolb insl xchg cs or lea je push cmpsl loop dec push jle ds jb mov sbb outsb out insl and add js ja adc inc adc fidiv mov lcall ljmp pop cmp add orl fnstcw repz xchg inc sbb mov dec movsl cs fildl jle mov inc or insb sub bound and cmp ds in sub mov mov xchg jae xchg jns jl xchg cwtl imulb test cmp cmp inc rolb ret push data16 mov push xchg cltd xchg adc xchg mov xchg add (bad) sarb pop daa dec xor jbe adc pop sub cwtl add mov in out pop mov push xchg push out lahf cmp dec jnp cmpxchg movsb add aaa pop mov mov pop pop inc inc xlat xlat and in inc and hlt hlt mov mov lret lret test sbb pop push push mov ret lcall cmp jmp add xchg xchg lods lods in call les add lcall rcrl adc adc movsl jmp divb jb insl xor dec sub xchg or cmp push push mov jp xor cmp xchg sbb data16 sbb adc int enter and sbb data16 pushf repnz push and mov sbb push add pop or cmp jnp jns cmp loop pop mov negb push and ds mov ret ucomiss pop jo sbb xlat mov inc (bad) fdivl or pop dec or cmp mov mov lret aas fisubr adc xor jnp xor mov add jb pop testl xchg xchg xchg mov mov stos mov jp insl aad fimull dec xor ficoml repz mov jp movsb movsb (bad) mov ret jnp push adc mov mov mov push xor sbb fwait adc xorb or pop xchg nop mov aad sub cmpsl push xchg imul xchg sub in test test jecxz cli jns push insl mov jb aaa cmpsl sub pop xchg cltd sub rorb aam das mov or or (bad) shrl aam cwtl outsb stc jle les cwtl cwtl and adc add insb pop sub in or jb lret andl xor out adc jmp lret or ret ds repnz cld cmp in cli mov sti jp adc repnz or dec jg aad and sub ljmp arpl popf add mov cmpsb pop sub lds mov popa sbb push and mov incl and ficompl cli xor adc or ljmp gs clc cli int ss add dec pop fbstp (bad) std ss mov into or stos call push fnop mov inc rclb xchg push xchg repnz jge test cmp mov and aam sub jp aas mov mov push push es adc pop lock mov mov stos jmp incl inc inc sbbl stos inc stos and or add mov inc xchg mov shrl pop fucom mov int3 je push pushf popf ret sub clc out and out jg call push popa scas js int3 adc bound dec sbb mov and sub cmp (bad) fsubrs stos and cmp imul iret lods lods jbe addl fistp in mov pushf adc jb cmp sbb dec add ja mov pop inc sub cltd mov jp xchg pop push lock cld (bad) dec test pusha cli inc sub jo jmp dec add jcxz mov mov jecxz sbb inc stos repnz inc inc (bad) in xchg add inc pop xor and sarb dec arpl lods or jno mov jge jmp inc data16 dec movsl dec ljmp scas sahf arpl scas inc sub loop idiv adc mov stos test lods insb jl cltd lcall cmp leave and sub jp ret fidiv test repnz loopne sub cmpl mov and lret mov xchg xchg fdivs jno cltd sarl daa enter fistpl sbb and push sbb dec aaa adc push pop sub add jnp add inc data16 fs arpl fildl cwtl ljmp aas mov ds loopne nop fmull dec cmp or repnz arpl push pop rcl push inc pop popf cmc outsl dec std lods cmp sbb dec adc shl bound pop aad test (bad) roll out mov and aad inc mov adc inc pop dec in (bad) arpl push rcpps ds ja nop xor fsubr scas push cmp iret lret mov mov hlt cmp jl loope ljmp jno arpl mov js sub shr jb stos push push (bad) in xor call mov outsl push insb and mov push mov jle xchg aam orl jmp jmp jo jl and add sbb inc xor je hlt push (bad) push push in nop mov ss repnz xor (bad) lds std test mov sub cmp push sub lds pop xlat pop lods lahf lahf (bad) mov jnp repz ja mov jg pusha jae (bad) enter and xchg sahf repz xor movsl out call mov stos inc (bad) out call pop roll call rcrb ret mov popf (bad) sub cmc sbb out out and jne pop and adc fcomp arpl lds addl jg ja xlat add sub shrb mov (bad) pop xlat nop testl js lahf in sbb cmp push outsb mov sbb mov pop cltd jae push add addl int nop/reserved repz (bad) mov rcr pop es dec xor jmp sub jp (bad) dec aaa jg xchg jg jno (bad) jbe pushf push push jecxz les adc std mov pop dec mov add mull pop xchg call andl mov xor insl sahf je mov and scas inc xchg dec mov add ret adc add fildl (bad) or mov stos cmc pusha lods inc or dec into inc sti xor mov out add or stos push mov fsubrl or iret add dec movsl mov cli negb ss xchg daa lods je mov hlt cmp adc (bad) or jp pusha lea negb and aad imul fsubrp paddd (bad) test icebp cwtl jno jbe xchg int3 aaa xchg jnp fsub in adc mov ds repnz popa mov adc or cmp jno clc add roll mov mov dec or fwait in popf sbb push repnz xchg jmp fmull scas jmp xchg xchg call data16 cmpl mov leave jecxz les sti dec push es pop ja popa roll pop loope mov movl jge data16 dec mov idiv test sub popa scas out mov fild pop aam sub add sub fmull mov (bad) lea mov sub scas scas xor xchg scas or jae hlt xchg mov adc or jmp mov rcll fs push mov add add mov jmp in in sahf clc mov dec loopne and sti adc push jnp jns gs jl and into notb push push ficomp lds jge xorl and dec (bad) icebp std bound lods or bound or sbb pop adc push lret leave aas movsl or sti pushf cmp leave mov test mov dec inc mov aad cmpsl shrb xchg pushf add cmp mov insb pop aad mov imull lret rcl sahf jmp pusha lods (bad) lahf inc mov dec loop push cs pop adc sub insl inc ss stc clc inc movsb out lods fldcw or inc sbb (bad) enter or xor xchg sbb jbe cli sbb mov arpl inc push jecxz add dec lret jecxz sbb xchg nop in jmp mov mov cmp jo xchg (bad) aas jl cld adcl dec dec pop stos jle sti xor repnz inc add cli adc pop (bad) mov fstpt int3 or mov movsb add (bad) (bad) das adc add mov xacquire sbbl mov outsb insl nop jne std lds jle jne push loop negb push mov stos das cs and mov test test arpl gs xor mov mov ret movsl jne lods mov test pop add and pop mov mov cmp lahf adc aaa ds (bad) xor mov repnz fbstp insb push loope fs mov sub mov cmpsl cli xor or imul cmpsb jp or sbb ljmp aas push sub sbb insl mov xchg lahf aaa pop jb into or pop mov in push add pop dec lods add cmp or imul ljmp stos js lea std lock xor sub fnop enter and inc in ds test js jp clc clc sub add adc rcll xchg out xor pop mov sub push iret mov fdivs aaa pop sub fmuls das addr16 xor add mov mov outsb sarl nop push cmc popf add rcl sbb xchg sbb cmpsb pusha jl ss adc pop xor fdivrl stos jae push cmp push add push cmp jecxz scas inc inc nop into xchg cmpsb mov mov or into mov adc push and lods mov jno lods mov push mov pop cli mov (bad) push icebp mov pop lret (bad) jnp adcb mov repnz (bad) mov lret mov test pop adc lds push cmp jp repnz push sbb mov push xor imul push popf xchg pop (bad) test or jnp xor xlat adc movsl out scas sub xchg xor sarl add loopne movsb int pop ss sbb mov loope nop lock xchg jl dec sub push jae ja out es in orl pop inc cmp ret dec push adc push add test mov add add aad cmp jns dec cmp adc adc adc ja add xor mov push cld leave push dec out test rcrb jbe aas gs lret sub jnp add pop arpl ljmp out jns cmpsb in aaa lock cmp sbb xchg jo push pop roll (bad) loopne,pn cmp or cltd jge xor push rcrb fistl sub (bad) dec into xor adc jle push add iret icebp sub mov dec icebp test cld lcall mov inc add push imul cwtl pop out call mov push mov mov mov or xchg pop js mov sub pop dec jecxz and sbb jl popf inc int daa je hlt stos in leave mov jnp nop shrl push jl pushf lret xchg aam mov cmp dec or fiaddl lea hlt cmpsl lret fistpl scas fsubrl pop mov dec loop adc pop rcr insl bound or jb push pop std test jne push inc pop pop inc lea hlt xor dec in cwtl pop and es scas ja sbb ljmpw clc lret test mov out xor addr16 negl pop aaa sub nop jmp ljmp shlb dec das aaa sbb sub cld std ss and (bad) ljmp push push insl stos xor cmp fidiv out test xchg fwait icebp jae mov addb popa adc js push adc xor int3 fnop dec add adc rcr mov stos inc or (bad) sahf or and cmp pop iret (bad) vaddps jns stc aas mull xor xchg adc and cmc jb pusha cld push mov jmp outsl sub jnp mov lcall (bad) (bad) je hlt mov aam adc pop (bad) push or lods mov pop fistl call inc test sub bswap ljmp jb cli xor fs push jb jo mov hlt (bad) mov lret sub mov jo adc push push outsl xchg dec and and cmp in jle rorb movsl sbb inc dec ljmp add xchg fisttp insl jne mov sub xchg scas stos add inc int3 (bad) lock mov movsb jp xchg mov xchg jns inc sub and addr16 cld mov inc or inc jmp je rcrb add in pop mov and inc push pop (bad) rolb dec xor jge lret inc icebp mov adc jg push insl cmp jle mov pusha sbb pop xor jp sbb adc scas jb or sahf mov sbb jbe pop in repnz add ss or je cmpsl push sbb cwtl push push lock loope mov lret and pop sbb dec int3 jg shlb jnp scas adc data16 test mov cmp rcrl or pop xchg das dec jne clc jae fs push or inc cwtl int or rcll mov mov jns pop xchg cmp or or push pushf add dec dec js dec dec sub mov mov hlt sbb lahf mov jnp and sbb or mov pop icebp mov repz xchg addr16 fisttpl inc repz cltd cmp sbb or push push mov out rcrl inc mov mov in add jmp pop pop lea (bad) pop mov mov into pop lret dec mov xchg inc adc dec push adc ds test mov cmp inc inc ljmp inc or (bad) push xchg cmp adc out inc cmp addb mov jg sub call push (bad) cmp rcrl sub mov loop sahf icebp outsb loop outsl mov push fidiv daa push push pop ja les daa loope xlat loop cmp xor xchg out int3 int3 inc (bad) sbb cltd in jo mov in pop mov pop les inc (bad) pop or jno pop push jae pop xor (bad) xlat adc (bad) gs and push leave cmp lods mov xchg adc int3 add je movsb push aam dec xchg idivb test mov scas jo xchg fsubs inc inc inc xchg mov flds add push pop paddusw aam pop cmpsl inc sbb std pusha sub dec mov sbb mov aad xlat sbb outsb sub in (bad) pop rcr ss pop cltd cmp mov jle jge push xor mov mov adc cmpsb out gs and insb push into flds in enter jae xchg xchg fwait icebp dec out pusha inc mov sub fs cmp popa inc pushf inc pop push mov mov mov rcr adc xchg adc fs push js adc jno,pt loopne mov data16 and inc lock and mov pop add fidiv js sbb pop mov mov movsb jle ud1 xchg push and mov lods push push sbb (bad) mov mov xchg fstp ljmp or pop ja dec negb adc xchg xchg mov xchg movsl das (bad) out and add ret sbb ss leave ss pop or test movsb movsb (bad) jne clc jmp inc cltd mov dec push mov roll fsubrl cmp fdiv mov enter sarb (bad) push dec inc pop icebp (bad) test pop lahf push das mov aad stos insb out push pop or testl mov cli jg test outsl movsl outsl stc es sahf pop in ret out inc or incb daa rcrb or mov les adc loopne in add outsl aas rcrb (bad) bound pop rorl pop fisttp repz cmpsb (bad) lret fwait test loope mov outsl pop mov inc out lods ss mov add push stos pushw (bad) mov xchg xchg adc jge jge (bad) gs inc hlt and cli popa xchg cmp ds pushf dec xchg fcompl and cwtl jmp xlat or call ds push insl loopne push mov fs stc and pop cmp lea ja ljmp outsb xchg shl and out push cltd pop sti int3 sbb dec jno fistp aaa jl mov jle fsts mov lds insb or or adc dec lock mov jle jns cmpsb and add add pop sbb jp bound cli popf add cltd test divb sti mov aaa popa mov loope inc daa movsb push aam data16 fistl in or fldenv lods rorl lods ss lock test in fistp mov pop out jmp fs sbb inc int imul xchg out xchg push mov test das cltd cwtl scas jmp add lea push es nop pop loop add scas es das sub loopne es push daa test push sub sbb (bad) or jmp dec repnz dec sarb xor inc mov fistp xor push and cld into adc aas sbb pop fcom dec mov jl divb out insb and pusha adc arpl sub popf daa fsubs movsl loope,pn phaddudq dec inc pop adc call push mov cmova in pop inc push sub xor enter dec sbb in repnz mov testb aaa push sbb movsl ds add shrl cmp mov mov imull out je fiadd test ss into mov mov lcall mov pop in (bad) scas pmulhw int3 int push inc push enter adc sarl pop aam dec dec push cmp lea push enter jle pop out jae loope mov xor repnz cli inc cbtw pusha ds jno,pt mov cli push push jno cmpsb cmp aas jnp xor aam sbb (bad) rorl push dec mov adc (bad) sub xor mov adc push push cltd jmp push frstor mov lret lret (bad) (bad) enter mov pop dec dec cwtl cmp lods jo inc cmp dec mov sbb cmc jmp mov jbe insl mov (bad) or dec testb mov out and fsubl ret dec adc cwtl cwtl shlb pop sbb repz out stos mov ljmp imulb pop stc mov nop add daa idivb jae (bad) mov or popf xchg jns inc sub sub ret jmp std fildll imul fldt inc aam ret pop fldenv popf pop xchg ja jnp jecxz and out sub adc xor scas cmc or inc fsub mov xchg aas daa aaa int3 jno (bad) xchg and jecxz push aam mov pop popa sub (bad) mov adc es repnz jno inc lcall (bad) (bad) or dec in ret rcll xchg fucomi sbb ffree scas pushf notb inc xor out xchg xchg sub mov into out out out sub ljmp adc xchg aam cmp sub cwtl in sub (bad) dec loopne push sbb sub sarb mov mov into cli jmp and cmpsb jb cmc sarl sbb xchg lds in cmp cmp insb fwait jno pop jp dec dec mov xchg (bad) leave jno cli stos fbld jbe xchg push mov movb add xchg add pop add cmp loopne pop int3 push scas jbe in hlt and (bad) sub pushf lods pop xor gs sub lock repz dec test imulb adc dec das movsb scas fisub pop ja push fiaddl inc xchg repz dec sub popa mov fcomi push imul dec mov cmpsl fsubl popa dec sub outsl lcall stos xor or mov imul out std lcall into xchg das stc ljmp fmul or xchg lds jecxz (bad) jbe push out inc mov das es xor pop lods enter (bad) and or rcrl test iret (bad) stos cmpsl cmpsl idiv mov loop xor dec push std icebp add out clc or es rclb setp xchg adc lret test dec nop/reserved or sbb lock ficom lods fdiv inc push lods in lcall stos pop jmp jl lcall xor aaa enter icebp repnz add out mov jns mov cmpsl jge or mov add jp lcall add jno xor or mov ljmp rorb mov insb sub addr16 mov adc mov das (bad) icebp xchg push out cmp push test scas push (bad) test lcall xchg or push outsb adc jge xor dec icebp aas leave cli lea (bad) or mov xor xchg lret jmp flds mov add xchg popf test lock mov sti jp jle push cld mov sti xor xor fdivr mov sub sbb out add add stos jb or movsb sub add out bound adc jbe or sti mov mov int je outsb adc in ret push xchg pop mov dec mov push std in das mov dec popa icebp outsb insb and ljmp stos cs arpl push sahf sahf cmp cltd pop push adc xor insb movsb and or lds mov cmp cmpsb dec aas ljmp ds cmpsl and fisubl jl (bad) fldt icebp dec xchg or mov push sub jae out (bad) mov int (bad) add sub into push mov add pop aam push mov or xchg outsl shrb dec mov subl pusha (bad) push push cmp pop bound jbe pop push in andl pop xchg push push push out lcall fldenv out (bad) ljmp xchg xor sbb jo xor inc inc inc jno,pt xchg xchg or cmp sbbb pop add xchg mov cwtl pop cwtl pop inc jmp (bad) push sub push ficom arpl lret fmull cmp icebp test popa gs lods inc or dec mov das loope jne lods mov mov inc inc int or cmpsb inc pop xchg out loop jo dec cmp cmp push lcall out (bad) js dec sub add rcrb or add loop cmp mov jns rcrb addr16 jmp jbe xchg inc adc adc push pop mov dec cltd xchg das into add pop aam shll test pop adc add add push xor loope xor xchg sub rorb mov pop pusha loopne or adc inc cwtl (bad) mov mov add pop gs sti cmp or fwait test int3 cli cmp stos out mov jge (bad) dec cli mov jmp leave mov fcomp arpl ret test sub jb pcmpgtw adc mov mov jle xor rclb xor clc in push popa lods jo icebp mov and xchg sbb ja in mov je sub jle sub jno fildll push ret pop cmp xorb and jne adc xchg (bad) sahf and xor mov adc adc cmp scas add cltd lock xor mov sub sub (bad) jbe mov mov stc lea aaa sti cmp (bad) test push xchg jle pusha xchg out iret add sahf xchg lea std int imul lahf jnp ficom fistp xchg mov bound xor popa jae lds xlat mov mov bound lods sub (bad) mov (bad) daa jl aam in pop cli xor add mov lahf sahf mull add push mov pusha xchg stos stos fimul mov aad dec (bad) int leave imul fwait or mov and jmp push ja bound push mov rcll aam mov xor roll addl add cltd ds sbb ljmp fadds mov pop lock xlat out inc adc ret dec sti fcoml mov (bad) jne jg pop ret mov jno or fiadd popa sarl inc add xchg or aad leave pop sti pushf aaa push rol in xchg repnz push (bad) cmpsb cli arpl aam ja mov pushf xor sbb adc add sbb add xor sub mov or sub popw insl fbstp pop xor fsubrs mov xor stos push insl lea add outsl stos (bad) mov das (bad) push pop or bound inc jmp mov dec sti dec js testl aas js fnstenv repz adc xor repz mov pop and sbb jnp dec std xchg jns nop std cmpsb scas nop add sti pop into mov sbb (bad) pop arpl xchg jne fisttpll inc mov imul jmp in aam and push les (bad) clc clc out pushf nop iret aam add adc iret movl xor xor inc sub pop cmp enter xchg mov rcrl sub push mov mov fdivrs mov imul scas addb fcoms fbstp xchg mov imul jo addr16 cld mov push mov shll push into lods push cmp fnstenv add incb (bad) (bad) jno std xor mov repz (bad) (bad) jge xchg and loope mov nop clc xor hlt movsl or and adc ds mov and stc call aam inc xchg cmp jge pusha daa inc sbb jae push add test mov mov not pop pop add movsl fbstp (bad) notb out out xchg (bad) icebp pop adc push insl (bad) pop xor out sbb mov mov sub and das addr16 loop add mov mov das daa xor push push mov cmp ds mov fstps std movsb out test pop fs jle sub andl fistpll add pop mov add cs fistl push xor div push cmp mull (bad) stos mov daa (bad) or mov cmp mov inc ficoml fwait notl adc lods mov mov pop incl and inc cli es fidivr lods push jno xchg xor mov mov addl movsb test dec dec orl mov adc sbb ret sbbl and adc pop mov fimull or cmp jo shll mov or xor (bad) mov sbb fldt lret dec add aaa bound mov dec in jns jns aam adc xor orb pop les push (bad) cmp dec outsl nop sub push imulb jmp pop (bad) dec mov repnz insl cltd pop jb (bad) repz (bad) ds rcrl inc adcl les xor test lcall xchg adc rcll pop xchg outsb or mov push arpl inc ret and mov pushf inc push dec xchg movsl dec pop adc in in xchg dec es cld jns mov sbb adc repz mov sbb scas scas lcall cmp lods bound ljmp lcall add push shrb in mov push sub dec cmp push mov ret es hlt lods scas scas mov out test insl jb or arpl insb insb fs repnz xor fwait movsl outsl int dec movl add dec adc mov cld pop (bad) (bad) (bad) xchg pop jmp repnz arpl div sub sub ljmp pop mov jno or pop test lcall (bad) (bad) jb pop add das xlat dec dec mov addb addl es sahf xor popf cmp or pop mov inc add cmp enter pop (bad) sbb gs sub ljmp mov pop (bad) (bad) fisttpl cmpsl pop and enter mov (bad) pop fsubr mov sub rclb stos addb imul sbb or out or jl xor leave and sti cli fisttp ret push push in add mov rcll pop popf sbb movsb push mov xorl jmp adc (bad) inc fcmovb (bad) out (bad) jnp jno or outsl fwait lahf pop test lcall cli cwtl jb or imul add xor jne,pn sbb roll xchg call dec cmpsl int3 shrl dec jp cltd fimul loopne pop stos add cmp sub jmp cld push out pop scas pop push clc push jb mov dec imul lds jle nop mov popa mov xorl scas jnp cmp xchg repnz sbbl test syscall add and jo into push or ret cld push dec shrb or enter out outsl nop mov and xchg xchg and stc notl push sbb mov lret add pop xchg mov (bad) in and mov cmp add xchg adc dec jns orl or cwtl je add out sub fwait pop xlat test xchg jnp sub dec add call xor inc mov leave repz hlt (bad) pop sbb push fcmove jo mov cmpsl lcall mov pop dec xchg add mov mov int3 or int3 sub sub and mov cmp mov pop jns mov rcr lret test fwait test mov into and pop and xor jge xchg (bad) pop pop mov jb adc subl ss bound add dec or and inc cltd cwtl push fimul mov inc mov repz or inc lea lock mov and loope leave ds add jo jne stos and mov ja js sbb cmp sbb push cmp divb xchg in jg frstor mov scas lods arpl jns xchg stos in in pop mov movsl insl jae add sbb xchg add dec cmp int pushf pop pop sbb mov jecxz sub or out pop xor mov xchg loop xor xchg test imul add mov push or inc lds jle je adc xchg ljmp pop scas sbbl jbe mov cmp mov push xchg icebp movsb xchg cmc or out insb sub mov adc adc into mov mov push mov xchg pop sbb data16 mov xchg out test mov jbe jle andl pushf scas popa pop pop shrb jbe push xor push je mov pop jbe xor jb or insb test movsl jmp xor test repnz ds nop ja test sbb popf or cs ljmp pop inc bound xchg and je adc out out stos out (bad) inc das rorl dec fwait inc (bad) mov ds mov std jbe dec or add jnp push imul or xchg or ficompl rcl xor dec (bad) aas jae mov push push push push inc push cwtl mov pop cmp mov nop mov ss mov nop pushf int3 mov inc sbb cwtl add mov movsl imul lods pop xchg lcall popa packsswb add or push inc xchg jmp adc sbb or repnz pop arpl out xorl mov call sub loopne scas dec insb movsb dec cmp fwait jecxz insb adc pop add and jae int3 push sbb repnz adc mov xor add jge inc sub cmp mov (bad) fdivr sub pushf add in adc jbe or pop mov and shrb shlb in cmpsl pop (bad) es jbe popf test xchg icebp lods fistpl stos insl insb cmp mov cmp cmp lret dec pop (bad) push push xor cwtl decl inc xor push and outsl out mov pop call add cltd popf jecxz es sbb sbb rep sbb push sub cmp mov jno xchg lock fwait lahf pop test pop icebp je add je push mov mov cmpsb pop push iret push (bad) pop insb xor enter pop scas outsb sarb stos fdivl in mov mov fs (bad) xchg adc mov (bad) rcl bound mov mov jb sbb fdivp ja sub mov add arpl cltd xchg (bad) pusha in fs and fcomip add (bad) dec xor mov xor adc inc and out push jmp scas fimul fst sub (bad) cmc cmp xor cmp insb cmp cli xor adc push dec xor pop and arpl add cwtl or add xchg push and es (bad) jg lret cmp and xor sbb sti mov lret in pusha mov scas xor adc aaa xor stc lods mov movsb push fistpll dec (bad) test cmc scas push push aad repz aas inc leave popf xchg inc (bad) jbe inc int xchg or or xor int pop arpl xchg or enter add imul stos and mov cld addr16 (bad) xor push in std add decb jnp test mov inc xor popf ja inc sbbl push push test mov pop leave jp and pop xchg sbb inc les jae mov xchg pop xor mov imul mov push out insl ss lret lods insb mov call aas cs cltd and cltd sbb inc cltd sahf stc dec add sti rcr das push pop sbb inc or cmp std xor xor sbb cmp jo lret popf test pushf iret repz aam jo adc loope aaa inc les pop add push cld hlt loope push pop sbb lods es jp mov (bad) ja fcompl out adc jg and and jae and jg arpl or add cltd test push and lock mov mov jecxz popa mov jmp ds lods fldt icebp test pop aas and iret lcall jle add test mov pop xor add or dec mov mov jl leave jle pop cwtl out (bad) cmpsb push pop aam lock les notl (bad) gs xor jp (bad) in sub popf daa fsubs mov mov mov pusha fistpll dec jno jp add pop cs orl (bad) arpl jns or mov add loop jne nop push mov xor aad xchg fsubl sub inc push lret imul stos xor flds imul mov inc sub ljmp mov xchg mov cmp jg cmp cmpsb push sub and mov cmpsb dec and lods mov ds and push jbe orl sbb popa jbe subl sub insl adc cmp fstpl lcall mov pop mov ret mov dec xor lahf out mov jns cmp insl imul js adc jl inc mov (bad) iret aas inc inc repz jne xor push call add add or sub in jbe or fmuls fdivl mov and jle loop nop add outsb pop xlat bound repz outsb push cmp pop pop adc out xchg xchg lret mov cli inc push ljmp inc fisubr roll ds adc mov (bad) test (bad) pop add in cwtl into mov dec (bad) adc sbb pop stc pmaddwd (bad) push fcmovu iret jge das cs (bad) sbb (bad) xor scas cmp hlt (bad) lret out loop fdivs sti inc icebp mov loop and push loope dec xchg inc mov shll mov and adc inc pop jnp fcompl xchg xchg rcl pop pop sbb xor cmp jge sti scas push outsl outsl lcall xor mov jb add cmp imul lods sub les pushf mov dec sub sahf arpl push movsl cmpl inc pushf push inc sahf add cmp xor addl out js (bad) jno adc jmp popa int3 sahf push lea sbb fwait push push sub (bad) pop add dec adc nop add outsl mov insl and cmpsl stc push stos pop add cs mov fidivl negl sbb in subb pop fwait loope add cmp xor aas inc xchg insl and mov mov daa out addr16 mov xchg jg mov push sub add add cli xchg clc pop mov in popa call bound fwait cmpsb rol lods jno xor stos aad lcall jo and inc aam cmp pop pop sbb jns aad punpcklbw mov ljmp mov push dec pop ficomp xlat and mov lahf popf adc xor (bad) jmp jae int3 and ljmp mov cmp ds pop lods push aam adc push pop (bad) sbb movsl push cmp and xchg test xor pop es dec js sub dec and ret es in or xchg loop pusha jne js xchg jmp push jl sub jle mov frstor push xor pop sub lahf lds insb or add (bad) fsubrs xchg inc ffreep or shrb (bad) jae xchg shrb fstl data16 cmc xchg sub add jno sbb lcall ja icebp je lock cmpsb adc pop not out mov stos rcr or jge,pt xchg ds inc clc dec inc push dec ljmp mov and shlb mov mov enter pop sbb imul sbbb ja cmp ss mov stos test in lods (bad) negb std into lock add xchg push adcl icebp iret mov cmp mov sbb cmpsb sarl rcl mov dec add mov push adc mov adc outsl int jecxz sub jmp jp pop or jecxz lods test enter jp fldl les xchg movsl lret cltd push jp pop add or aam adc dec jnp mov loopne shr aaa lret dec sbb push insb clc dec dec ficoml pop push jne out mov add pop sub sub adcl jns lock sbb je push push jle cmp sbb sahf (bad) jle scas (bad) cltd push push adc add out sbb dec jg in outsl and outsl adc test adcl add push arpl imul cs mov cmp loopne mov mov (bad) rolb add fcmovbe xchg sbbb mov fs adc sbb in xor adc cmp int out int3 jb mov sbb inc pushl mov ja (bad) jb add inc push fbld cmp jb aaa jle sbb xlat lods sub lods pusha cmp jp cld push push daa ficoml js dec ds fcmovne add in aas adc inc (bad) mov jns jecxz ret sarl lret dec mov cmp into xchg or shr dec rcll stos fnstsw pop dec mov pushf repnz mov cld xchg lret mov sub scas fcompl adc lcall (bad) jns pushf aam lahf cbtw cmp (bad) lahf adc dec ljmp xchg cmp (bad) (bad) xchg fimul ss inc rcrb clc ds sbb xchg adc repnz shl ljmp jmp incl pop sbb rorb push dec dec or enter sbb jns shl cmc addl cmp rcr mov add cmp es mov cmp cmpsl jb pop in aas pop movups addb jbe out lods repnz lds (bad) xchg popa popa test aad movsl mov dec popf lcall xor lcall xchg mov out fldenv jae dec in xchg adc in mov test or (bad) (bad) xchg das pop add clc shrb pusha ret jp iret adc jg inc jg in clc out cld sbb sub (bad) loop sub sbb push ja insl enter dec push add push mov test lds push xor das std push mov mov dec in out xlat dec jbe inc (bad) lcall xchg jb cmp cmp lret add (bad) cwtl imulb jbe out icebp xor or arpl push and lea pop leave mov (bad) jg ret mov adc xchg pop sti inc aam and stos imul cmova add fdivl cmpsb fstpt leave outsb inc loope cmc je xchg push jo addl fs mov push xor popf sarb aam movsl imul test mov ret xchg out pop sbb mov mov cmc insb stc and push jae cmc fcmovu pop ss sbb mov cld popa in lcall je inc bound mov cli xchg std pop cmp cltd or das mov dec fstpt movlhps fadds cmc dec out sub rcrl cs aaa out testl movsb test insl jmp xor outsl push lock add cmp add loope or jge stos lahf scas jecxz inc jp mov leave lret lcall add ljmp out (bad) clc je or movsb sti lret das loop lcall mov push lcall fimul mov sbb movsb cli xor fcomps jae cmpsb gs lret xor sti jno lcall and mov test xchg mov cmpsb jnp inc int icebp dec icebp mov lods fs pop dec inc inc pop xor leave dec mov popa jno data16 jne push mov push or das test rorl jns popf xchg sbb movsl xchg sub icebp imul jne jmp cmp push cmp imul insb mov jmp push scas std lds mov movups repz xchg std enterw (bad) stc jl btc aam sbb insb xchg mov pop dec stos arpl mov lods sahf std mov xor add outsb xlat sbb (bad) (bad) call cmp mov push incl test jno int lret mov cmp ss inc repz inc or dec mov xchg movsl jne lods mov add mov xchg xchg out and repnz xchg int3 lods ret loop ret cmp inc inc (bad) cmp clc int jb cmpsb xchg nop mov pop andb cli int pushf mulb jmp push cmp out repnz sbb aaa sbb jne,pn cmp fsubrs or cltd xchg das iret pop or aaa add ret faddl cmp les loopne scas aas pop pop pop xchg xchg push cld test pop push fistpl call (bad) and aaa cltd imul mov in aam mov push jecxz outsb js cmp jl inc inc adc sub or push sbb cmp or jge ja add lcall nop lea sbb pushf jbe in pop mov cmpsb imul push pop mov pop dec xchg push das and push loopne call stos lods or aad (bad) lea out sbb imul xchg sub fidivrl lock int3 and nop dec cltd jae push add cwtl fidiv mov pop jnp ficompl (bad) mov sahf and outsb mov mov rcrl (bad) jmp scas outsb sbb inc cmp jns enter lahf add gs fwait je jno les les jg das pop mov (bad) and bound inc (bad) xor xor scas dec (bad) push ss mov andl test sbb xlat (bad) sub lcall jle jp clc test das push stc inc mov adc xor push data16 aam pop mov jg xor int inc mov std mov movsb lds fnsave cmpsb scas or aad (bad) and xchg pop xor fsubrl cvtpi2ps mov int3 and xchg cmp pushf imul inc xchg pop imul mov add pop mov es xchg hlt jne aad (bad) (bad) es int3 (bad) das (bad) fadd mov add cmp lock js cmp test mov jb notl pop in scas frstor mov scas ja mov fstp in rclb cmp jp cltd sahf push rcll aad sub and xchg mov cmc and icebp into dec xor (bad) xor adc jbe fistp dec xchg and stos dec test hlt js jbe inc cwtl adc adc mov dec mov and or mov add and in test xor ret add pop ds add out mulb outsb lods pusha in in or xor rcll fsub rcl push cmp fmul adc jg dec dec outsl sub in lea jns aam cmpsb inc xor mov insl repz lods push xlat xchg outsb outsl fdivl cmc cld pop pop sub mov fnstsw inc add iret out xchg sahf ret in aam mov xor xchg imul cwtl nop (bad) rolb mov mov das or pop dec mov roll sub ret lds daa daa push jne inc stos mov ljmp inc andl cmp push f2xm1 imul and add lods lods movsl sbb lock pop jl out out mov imul (bad) int inc inc fnsetpm(287 adc adc mov lods stos adc lods scas dec out into cmpsl cmpsb bound xchg fdiv notb jp rcrl adc jnp std cltd mov xchg fidivl inc inc cmp adc pusha lock punpckldq stc ljmp (bad) fstl test std shlb sub pop push mov jg inc inc inc aad leave test shrl mov scas cmpsl test pop cmp call lahf ret lcall add clc clc rol popf xor fisub popa movzwl and clc imul fdivs ljmp mov push ret fistpl xchg xchg lock test cld std push cmp cmp mov xlat adc jp pop ss pop sbb out mov aam cmp test fs dec ret leave mov lods push adc stc mov fdivrs imul dec jns cltd push or xor ret imul sub div aam cmc aam ljmp in xor lods mov mov add test mov lods mov aam and or repnz enter jmp je movsl push sbb mov ja dec and pop inc call out fs mov decl add add sub pusha jp jae jnp dec or mov movsl cmp std lcall xchg xchg das fldz jae sbb xor flds push push cmp mov call jg cld fcmove mov dec les (bad) hlt push xor dec push dec div inc dec dec out call cmpsl div (bad) ljmp jnp ljmpw add lods adc in (bad) mov dec push cltd into jno jmp lahf xchg sarb lahf or xorl sti xchg or insl dec cmc inc stos xchg nop fcomps pop mov (bad) jne imul jge sbb mov pop gs pop sahf pop or loope mov nop fisttp add jae mov adc popf adc fwait lret jns lret movl cmp xor sub sbb aad imul rcr mov or cwtl scas jmp or test in mov dec jecxz shrl cmpsl sub stos jg mov out lea push and jp add shl loopne jl loop addl pop push pop mov or subl (bad) push ss fcoms adc ja mov inc sub cwtl jnp xchg int3 into (bad) or outsb sub cmp scas insb xor cmc and xchg mov (bad) pop mov xchg xorl les les aam mov and and adc or je cmp int addl in mov sbbl jae sahf ret sub dec jmp pop jo pop pop push out jae push push insl sub jp sbb jbe movzwl and (bad) xor sahf rorl or and shrd ss and (bad) mov aas aad lea rclb lock or xlat and jns fwait icebp lcall xchg push jl int (bad) xor lahf ss inc es push or (bad) jne push mov in pop mov ret aas shrb test cmp je cmp sahf les xor adc aad cmc mov sub xchg xor pop add dec jo sbb add cmp inc inc jmp mov dec (bad) sub push push es test push add movsl out xchg or jecxz jl inc pop cmp rorl notb ret pushf mov fisttp lret push loope xor jecxz test int3 sub out push lret (bad) mov or mov rol gs xor jle loop or pop add mov int3 inc mov inc leave adc and jbe cmp pop imul cmc fsts inc adc inc jnp xchg fist jmp les push xchg push iret in cmp mov dec mov and (bad) scas add mov jno movsl sbb (bad) mov mov adc push (bad) out (bad) icebp enter xchg add shlb in insl insl cmc mov cmpsl vpsubsw xor fcmovu mov std mov loop inc jae sub cmp cwtl push xlat mov in add and nop addl adc clc stos mov cmpb xchg outsb (bad) divb inc xor mov xor stos adc in daa ljmp mov les sub cwtl cmp lods rorl mov aam loopne pop xchg xchg push mov mov push shrb sub jp addl and mov xchg fwait xor out out popa mov cli push fstps mov stc loope mov cmp mov add mov aam pusha bound adcl lock add (bad) (bad) and add cmp in xchg pusha adc add imul lcall int3 or sub out push int ficompl scas int and xor rol mov andl jl roll cltd add dec and (bad) int pushf iret inc pushf pop jb push out test insb mov xor or mov lea jbe loop pop (bad) cltd fdivrl popa lds (bad) sbbl xor shrb ret push push std clc and sahf jae cmc push jge cmpsb or pop push or out push xchg cmp or popf push lret arpl mov add cli add mov fiadd aas stos stos mov jbe add push jnp rcl xchg sbbl imul push popa sbb out icebp fadd (bad) xor jb jo inc (bad) jbe lea fildl fs jbe cmp inc dec mov jns add stos sub sub sub repnz jge pop rorl xor pop mov or test or inc or cmp bound aas test cld xchg lret mov clc xchg loope cmpsb add mov shr je mov roll mov xchg stos ret ret into (bad) test in inc test adc inc sbb jge and shl jno xor daa daa addr16 dec sbb ja inc fist div icebp stc push dec je outsl fs add pop jo (bad) or push fwait js xchg xchg dec loope pop push inc out repnz jnp xor jno push pop jecxz data16 mov xchg mov orw daa cmpsl movsl and dec cmpsl in nop xchg xchg clc or pop jg pop xchg sbb into test push xor jb test mov loope lret in inc pushf (bad) movsb cmp xchg shll and xchg stos ja lock jle call and adc data16 mov hlt ds bound sahf hlt imul ret (bad) sbb and aaa cmpsl in lods and add mov lods pop (bad) cmp arpl scas cli push xor cmp lea inc cmpsl mov mov and insb fs insb mov adc inc and inc les push out and mov (bad) stos push gs lcall mov push rcr pop ds xor (bad) or push popa sti sahf shlb cmpsb rol mov pop push and adc xor jns repz xchg inc jg ss inc popl and or stos adc sub xchg push push (bad) jb mov mov ljmp test fcompl or clc addr16 lret jb std push xchg (bad) push cmpsb sub cmc stos lods movsl push and sub dec mov mov imul int3 add fadd aam sub and lods nop and add add mov ljmp lds fidivrl cmc movsl jp and cmp int3 lods xor sbb aas test mov cmp cmp enter push stos inc xchg inc cmp adc fwait add push test mov mov add movsl ret push jns imul lea jmp ja mov adc aas sub mov lods das adc and xlat je cmp cli ss stc xchg test das or cmpsl loopne add (bad) or mov jmp sbb cmp xchg sbb mov add negb adc pop or out adc pop out pusha sub lcall dec out sbb sub pusha fs inc repz or dec xchg lods bnd loopne mov jge push dec movl sub movsl cmp subl jns push and inc or les push dec sbb pop test pop pop es jnp or sbb cmc xor ret mov push add imul movsl (bad) dec jae sbb dec in xchg lea sub lods or leave pop xor std insl insl inc inc (bad) lods addr16 push push jns mov test lret dec call mov dec and mov pop into and inc sub dec jbe in loope dec ss cmp in pop pusha pop adc pop jne cmp fwait xchg outsb sub out js bound dec outsl jg jnp sub cmp xor add mov and in shrl dec mov idivb xor push fldpi mov test and sbbl jo lock xchg push in cmp in jno xchg jns inc sub stc repnz sbb fs xchg and cmp icebp jo in sbb or push mov aad psrld test xchg pop xor xor xchg repz or sahf lock jo add call push sub or lcall mov push (bad) cmp push mov add mov mov repnz test test xchg std int sub or jo movsl cmc frstor pop pop or cmp pop mov and xchg cli sar xor or sub jo mov addb xchg aaa dec sub cmp das cmpsb push clc jns dec cmp jge out les jnp stos test scas push xchg scas cmp movsb (bad) jp mov daa jp in in (bad) xchg mov and mov xor add mov dec push dec sub sbb addr16 xchg add inc add in movsl scas movsb bound adc es sbb sub sahf jecxz fistpll xchg adc push sub inc lods and jno fmuls pop fwait addps test xorb imul jg push xlat test pop or xor xchg sub jbe in inc pop jmp repnz rcll ficomp fcomp mov loop movsl (bad) fldl pop mov inc dec andb jecxz aaa aad stos add dec jl out inc aas push adc pop rcll insb jp dec mov arpl rcrl arpl stos ret aad daa lahf data16 xor fwait inc cmp lds icebp xor fucomp fcoms inc add rcrl sub push outsb pop ja mov (bad) iret add orl push dec loope insb xchg cli aad xchg jle mov cmpsl jge and pop push xchg cmp adc les xor mov frstor ret outsb jns int3 lds cltd adc cmp pop adc js jmp mov pop mov pusha add cmp into mov fsubr test pushf push mov pop pop sub or je dec mov (bad) xor fwait movsl je ficom inc dec aam or loope add popf and mov imul imul xchg rcrl sub mov fnstenv sub cmpsl sti xchg pop dec xchg arpl xchg xchg mov cmpsl (bad) cmp and jne out xlat sbb repz out scas and cli daa xchg out int3 jl cmp fcompl (bad) xchg mov sub sub insl fs mov ret inc mov sbb in xchg sub add popf scas sbb add pop enter ss mov js jmp cmp das mov fiadd andl inc jo pusha lock mov std jbe aas add jle scas (bad) cld mov aam jge stos je,pn cmp sbb pop in repnz inc loopne mov cwtl or ljmp add pop loopne rorb arpl js xlat stos xchg xchg lret pop insl xchg les mov imul call hlt gs daa or ret or addr16 jle enter mov inc xchg out lods lahf sahf div and cmp shlb in and (bad) imul and lock sbb push rolb (bad) xor pop cmpsb bound inc cltd dec (bad) dec add sbb cmp sub sbb fistp mov pop pop and inc pop pop enter ss mov call sub sti in insb loop insl cmp cmp addl lcall lods xor pop (bad) cmpsl or jl je adc cmpsl (bad) or test icebp stos (bad) mov mov inc ss mov bswap addl sahf flds sbb sarl std lds xchg xchg ficom jbe cmp jg xchg fisubr and outsl adc mov or dec dec dec fwait inc (bad) mov ds les icebp mov jno add jne jno bound fiadd push inc adc je adc add jo mov leave mov lret gs push mov or xchg rcrb call mov inc popf mov jecxz,pt mov xchg mov mov shr mov adc rcl mov repz (bad) les jb or popa mov lods adc inc sti sarb mov add pop add xchg nop push dec pushf stos mov add jge insb dec ret inc icebp lret lret ficoml sbb (bad) jge xchg jmp test xchg add sbb pop mov rolb pop in cmpb jmp push adc out cmpsl loop dec fistl add pop or jp adc sub xchg leave jmp jle arpl add rol lods outsl mov lods test outsl push cwtl pop or aaa addl sbb adcl and outsb icebp ror (bad) jmp sbb jge dec mov or call pop call add cltd popf popa aas inc mov mov jle sub sub lahf pop data16 sub cmc outsl clc popa fcomps test int jnp js inc jbe cmp cmp cmp and rcrb xchg or or cmpsb cltd cmc mov (bad) xor jo insb out cmpsl movsl fstl mov add bound lret arpl stos stos out mov jecxz sub push imul int movsl imul (bad) inc jle aam imul pop adc pop jecxz popa mov cli aad mov out stos and pop imul ret push adc dec and fwait std icebp xchg das sbb lods insl in cwtl pop (bad) ds and pop dec add (bad) jmp ret adc loopne adc aas mov leave pop rcrb jns lea mull popa sub das xlat pop pop scas push mov or jl jns lods mov test js mov push cmpl fwait pop iret pop mov daa fcmovnu push es (bad) fbstp out mov cmp lds sahf mov ret push xchg push ljmp xchg pop rcll pushf jbe mov fs test fwait sbb sub rorl shlb dec pushf insl xor mov or cmp (bad) jnp push test sbb or mov xchg or pop xchg inc lds jns push roll aas ja adcl cmc push test mov fisubr sbb push in sub xorb std xchg mov icebp ja ja stos out lods les mov adc or out stc insl sub fcmovnu add cmp les cmc fwait outsb jno in jl outsl rcrb xchg xchg mov test lcall es or test enter mov inc sbb sub loope add add or xchg ja call and sti adc or cmp lods lcall mov mov insl sub xchg mov popf sbb shrl jae std pop fdivrl dec lea in fdiv aas lret xchg bound scas scas fidivr sahf ret dec or insb divb xchg out test cmp daa outsl lock pop pop pushf orl cltd jae push add push and xchg pop mov inc sarb rcrb test jle sub cmpsb in aam repz xor xor cli and pusha fs cmpsb xchg jnp lock std mov push les cli in inc add das mov and out clc push sub lods jecxz inc and push mov or mov fiadd popa rorl negb shrb pop xchg xchg fldenv cmp sbb pop push push sbb cmpsb push ds popa xchg ret ret push and xchg cmp fisubr xlat and mov fcomp dec mov es shrb mov (bad) push fnstenv xchg mov out pusha inc hlt and cmp sub jne inc rcrl mov mov xor dec xchg movsl pop mov pop fistl rorb in xor xor or hlt pusha insb and js inc bound (bad) mov inc push add repnz test es loope aas mov sub or sbb jns test lods imul lret xchg push fldz jecxz cmp icebp lahf xchg pop push imul mov xor bound mov jae arpl mov mov pop sub mov and movsb cmp and jb scas int3 mov int gs daa cmc cmp mov xorl sub fdivs sbb mov out mov or pop pop xchg sti int mov arpl mov xlat (bad) mov movsl in jecxz,pt dec fwait mov insb xor add lods and xchg adc xchg add add or push fwait daa xchg and or mov sahf mov pop ret cmp dec loope inc outsl inc adc push popf cli mov dec movsl test and addr16 sub sub xchg pop jno repnz dec nop pushl in push or or or arpl leave mov adc fldt push mov dec test popa stos js mov arpl mov or and lret mov lcall cmpsl cs cwtl sti ret push sub lea add or out sarl sarb test out mov mov aaa push mov or mov mov ficom jbe js (bad) mov or hlt cwtl jnp mov stos mov sarb add dec or andl jmp (bad) cs mov mov push cmp add jmp adc and or dec adc lods (bad) cli in push mov (bad) shr in xor pminsw sub dec mov je stos ljmp push enter lds mov inc sub and pop (bad) repz sahf mov xor inc pop xchg and popa in and sbb xor jo dec push mov stc scas test scas fiadd rorb aas test out lcall jle lods insl out xor adc int3 fsub imul or dec sbbl dec lea cmp or push mov insb sub mov jmp sub in push loope push lock mov mov cmp (bad) sub jle xor scas push (bad) cmp push mov and fistpll in repnz out xchg vpaddq sahf xchg xchg ds pop shll mov xor and aad sub imul gs jbe ja mov pop mov je mov cmp jbe add pop add lret dec dec cmp ret jnp (bad) ficompl mov dec xor adc sbb sbb mov sbb add jns repz (bad) (bad) lock cmp push push les push xchg xlat cwtl cmp scas and mov pop push mov cmp (bad) add div icebp pop (bad) in (bad) out push es xchg adc mov cmp int3 inc jmp xor icebp scas test inc push pushf pop cwtl in pop les xchg add cmp aad pusha scas cmp jp lea cs mov lods adc std rcrb cmp sbb cmp lods and mov test fdivl mov les je inc in push jp aas inc cli nop sub sub xor cld pop fistl sbb pushf mov je sub or mov lret add push pop mov mov mov cmpsl jl lea jg ficoml daa stc orl and jl mov pop xchg lods xor leave negl add decl (bad) xchg push xchg mov jbe mov dec rcr xchg roll repnz scas jno lods stos mov and xor (bad) push mov jle jno push inc es adc test lock lcall mov jo leave and das movsb pop faddl dec rcrb in test sub push es pop lahf xor mov call shr cwtl or inc xchg mov (bad) pop pop jmp dec (bad) adc sbb adc mov jl sub push mov int3 xor popf pushf cmp (bad) movsl sub sbb das addr16 and add (bad) xor incl les dec ss incb and lods add or cmp mov icebp sbb jecxz jmp stos xor cmp cld gs in adc decl push push repz sahf mov fsts enter push ret rclb jnp repnz push negb pusha inc inc xchg jg add cmp das pusha xchg div pop xchg str mov add dec (bad) (bad) stc divb sub or jmp inc adc ljmp jmp dec mov pop loop mov sbb imul mov add cld lds xchg cmc sub fwait xchg xor lret adc mov jne or and incl dec fldcw outsl jp call pop push cmc cs (bad) int loopne sbb sbb pop je xor mov frstor rcrb cmp inc push mov popf push arpl insb std call negl push mov mov call or rep fs in and mov xchg (bad) xchg push inc pop (bad) rcrb jb repz jecxz fcoml adc aam xchg loop pop pop xor add push cltd jmp adc insl fmul add jmp andl inc inc mov xchg xor sbb sbb adc sub loopne add daa daa jns std std stc stc inc inc adc and sti sti je add nop cmp (bad) (bad) fs or roll test jno (bad) bound ret aad sub sub and add dec dec mov mov out cmp aas aas test fist hlt hlt test xchg lock dec xchg or mov adc inc imull cs fwait inc sbb mov inc xor and xchg lret lods mov aam dec mov xchg pop fld pop enter xchg bnd je gs lock or bound insb sub xor jb and adc pop jnp repnz xchg mov int3 arpl icebp cmpl sub into pop jno or sub and mov jnp maxps fldenv dec push (bad) mov loop dec faddl xor jno lds out mov jge push mov fadd pop mov (bad) test jl mov imul fisttp sbb repnz mov (bad) and (bad) pop sub cmc xor pop fistp mov dec sub fdivr test jae xchg out sub mov dec mov (bad) or pop or cmp add and jbe push pop in out movsb cmpsb push fcmovnb adcb mov push aam repz dec loope cmp outsb cs xor jge add loope (bad) jo test lcall xchg rcl cmp add ret fdivl xor mov pusha sahf dec inc jno (bad) out or mov lds xlat or jnp (bad) jg push fnstsw mov ja mov leave out xor xchg sbb imul stos pop add inc fnstcw ss dec enter cli xchg sbb jnp inc lahf add aad jnp dec add add inc inc mov jns mov xchg mov sub test mov mov repnz push add gs rcrl mov mov addl out mov (bad) mov add add mov test or adc popa and aaa inc push ret mov dec hlt or das push pop cmpsb out insl sbb les je xchg ss mov pop (bad) lds cmp add jnp inc or nop mov mov iret nop pop sbb add es insl sbb mov into add nop jecxz mov and icebp mov cmp out js xor xor xor mov push popa xor aam mov or lahf pop cltd fsubs dec and cmpsl mov out mov xchg sub scas pop mov xor jg loop push popl cmp testb mov icebp je insl hlt popl out cmpsl mov push cmp inc int3 in mov dec push ds or and mov mov adc push jecxz push sbb push xchg jmp jae jno imul out xor dec cmp push loope sub jb mov fadds rclb and sbb ret fdivrl mov das das inc sub pop cmpsl pop mov adc movsl pop loop cli mov push aad imulb adc cmc pop gs leave pop xchg lcall mov clc push stc xchg rclb pusha or sub ljmp pop sbb dec sbb add xor jg cmp dec pop or dec inc outsb out scas daa add and jp ljmp movsl jp mov jnp sbb in fwait sbb aaa faddl imul add and fs and inc and xor mov add sub out mov fsts test add xchg popf mov sub pop or jmp outsb xor js and in int3 out mov or aad js inc cmp add xor je popf dec inc mov rorl pop mov or mov repnz mov cmp inc push sbb movsl aaa in cwtl pop nop pushf jg dec sub imul fisubr gs test (bad) stc or rorl sarb out mov add xchg repz aas bnd sahf in test inc iret setne (bad) xchg xor pop add mov xor int3 movsb xor inc add inc jnp pop pop inc inc push pushf mov pop cmp loope mov cltd loope sbb jae ret test outsb mov rcrl in fistpll xor ja and cwtl pop popf adc pop xchg cmovge dec mov pop shll xor inc lods adc rclb jmp mov insb repz push or popa fimul or dec sub or jl mul out fistp xchg jmp or add lods aas push mov xchg loope cli xchg pop pop dec add jae push mov cmc inc push sbbl and cmp sbb mov sub jo xchg mov fdivs mov mov test daa stos dec push add inc adc scas shrb (bad) mov push push sub (bad) pop xchg es xchg push xchg fildll xchg int3 ret inc daa jmp and aaa mov mov cmp dec xor (bad) inc mov push add push cmp fisubl xchg dec dec add jmp es and out inc call (bad) or mov jl sti mov (bad) imul adc mov adc sbb aam cmp jo out push inc push lea mov es add jno cmp xor dec mov bswap sub push or (bad) ljmp pushf daa push jge insb scas xchg aad mov sbb mov jae aas or mov add add adc es mov sbb jl enter mov push insb sub lods adc cmpsb cmp and push xchg pop xlat cmp nop push xchg fnop xor xchg mov or insb les xor cli lea es mov dec xchg dec mov rcrl cmp int lds xor stc das mull cmp bound scas addr16 (bad) mov lret pop sub mov lcall les add outsl inc pop int ficoml push rorl push jns add xlat mov xor or gs add cs dec adc pushf xor cmp adc movsl mov int3 push jmp out fucom jg dec ret ret dec ret pop mov mov xor repz ds neg push dec mov jne jnp insb inc mov pusha or inc enter cmovb loopne inc lods and fs cld and fsts test push push xchg pop pushf outsl bound adc push pop clc dec repz or push lret xor lahf pop and mov mov rcll dec fcomps dec xchg or inc fwait sbb out sbb sar cmc (bad) dec mov sbb fistpl frstor and lret mov xchg rcr aaa inc addr16 pop js xchg dec seto jp lods icebp push push jbe xchg (bad) adc gs (bad) ja sbb xor je insl loopne inc push orl jnp aad mov pusha das test outsl ret dec or scas cmp adc xor push mov xor rcrb clc ss sub into pop das pop cmc adcl dec dec sbb andl cmp inc fistpll or and jae in rcll mov push adc es sbb cmp pusha imul imul sti xor xor outsb xchg push pusha pusha jp lock adc std lea inc inc (bad) mov add insb lahf sbb jg xchg pop leave arpl dec icebp mov jb (bad) andl fnop ds addr16 pop pop ret cmpb cmp sub sysenter push into push lret aad pop xor lret jo lcall aam mov fs cmpsl jo add mov adc aad mov out insl cmp mov mov push (bad) aaa std test xchg (bad) jp dec xchg nop in or insl loop push xor adc (bad) add out lock dec lds add gs xchg fcom mov xchg (bad) ffreep jmp jns cmp dec cmc sti jmp sub jecxz cmp jb popa cli inc fsubp movsl into notl xor or xchg cmp inc add cmc jb sub paddq mov or lods cli jno sahf call in mov mov push pop ja ja cwtl pop xchg pop scas popf popf cmp sahf mov (bad) mov popa mov stc or dec inc dec fwait inc (bad) mov es dec adc mov (bad) inc popl rorl test mov jns jmp enter dec xorl arpl pop sbb jmp (bad) mov ret lock or inc push (bad) or dec or push push push sbb mov les jg and scas xor in sub js mov mov mov or aaa mov sub cltd sbb pop sbb imul stc xor lret fucomi lcall sbb or jbe imul scas push cltd xchg xchg mov pop fistl loopne cmp and lret mov sbb ficoml sbb mov mov jae int3 push sbb dec jne adc xchg sbb sub (bad) xchg gs lret cs dec mov mov js fcmovbe pop pop arpl lds push loopne rorb or mov (bad) mov mov imul and (bad) push adc jl orl adc test loopne push sub mov or aaa and add add cmp or add xchg pop int lds stc repz sub (bad) sbb in (bad) cmp daa cli es es cmpsb dec pop push cmp adc je push mov das pop test dec inc pop sar mov or fcmovnu jns mov mov into or push das out rorl add push sbb inc pop mov cmp or ret add push fidiv cmp popa mov daa sahf imul lcall test push adc jl insl cmp dec dec lea mov test lds lahf cmc aam (bad) out push cmp fnstcw loop out insb divl add dec lea lds xchg bound jmp pop mov rcll mov cltd popf test lock mov popf notl jge sti js gs pop push and sti cmp icebp or push es jnp mull jg testl or push mov and sbb lods lret (bad) mov pushl cmpsl (bad) rcrl sbb pop or vpacksswb aaa inc sub sahf mov (bad) mov mov loop lcall xor mov jo popf jbe,pt dec push pushf dec (bad) add movsb icebp jne cmpsb jnp push or sub inc rcrl rorl cmp dec (bad) fildl outsl xor adc xor les xlat pop jecxz icebp stc stc inc fcoml arpl mov div dec aam in cmp (bad) inc push insb xchg cli xchg mov sub cs jno repz repz dec loopne jne iret adc (bad) push fmull pop dec lods add cmp push add xchg mov repz aad push enter fnsave lret fstl repz int shll sbb mov sarb clc cmpsb sbb push jno jge push xchg adc xchg add mov out fs inc jg and loop and lods imul (bad) mov push aaa lds add mov std mov cmpsb sti adc out data16 sahf popf outsb test mov (bad) mov movsb (bad) and (bad) mov fcomi sbb lock pop xor addl lock and mov pop pop xchg pop xor cwtl rolb cmc xchg insb lods call xchg push mov or xchg xchg mov xor mov jo jmp add mov jno fadds jae (bad) (bad) sub sbb jo imul std jmp mov jg sbb lret arpl sbb jno shrb mov in in fdivrs in mov mov cmp xchg scas pushf hlt adc bound ret mov mov jg cld arpl (bad) aad sarb adc adc call cmpsl jns mov loope,pn inc push aad scas lds das pushf aas push push mov inc out shll xchg shrb mov out xchg test scas rcrb lods out sbb test ja pop adc and leave sbb adc sbb or stc push xchg xchg nop fcom mov popa popa fldenv mov jo mov jmp popl ret mov stos or aam inc aam xor scas shlb inc add icebp pusha pusha lock in or shll sbb stc jo or inc mov pop mov xlat push (bad) or push clc popa dec dec inc into aad popa or movsl inc add dec roll inc out mull adc les jp clc gs dec ljmp mov add adc xor aam test cmp loopne xchg xlat dec add mov jnp dec mov out lret orl pop mov test aas das dec push push xor testb cld scas enter add push jbe adcl cli repnz cli popf test jecxz mov adc or icebp scas fnsave stos out (bad) dec fildl xchg cltd int3 xchg repz or js sbb mov fcmovnu or cmc test dec std test adcl mov jmp ss popf lea push pop adc (bad) dec and mov leave repnz add dec nop negl mov imul cld test pop and (bad) jne (bad) sbb xchg cmp lods je insl arpl jne sar aad xlat (bad) bnd adc push rcll cld pop mov scas shlb lds mov dec mov dec mov into mov push and lods lods or lock insl test and mov add je jl int inc adc xor jnp (bad) mov test pop in rol add or mov sub mov push jno (bad) (bad) cld mov mov fwait sub inc push clc es jecxz sub jmp mov (bad) je clc push mov not (bad) and jg push jbe mov add mov popf xor loop test rcll pop fnsave or pushf pop inc popf mov in negl pop ret sbb mov sub sub cmp adc and imul add cmp enter add or sti mov das cld sub jo imull addr16 ss and fwait (bad) fstps cmc out jp sbb xchg ret push in aas lods in aam sub outsb aam and fistpll outsl add je dec sbb roll jae in adc loopne jmp mov push jno xchg jae jno cmp lahf lea jmp (bad) gs pop push frstor lods js mov mov test adc xchg lcall (bad) (bad) push adc fiaddl jns mov push mov push pop or adc lea rcll push or and lods xchg (bad) pop pop xor xchg pop cmpsl and clc out cwtl push mov sub lea adc mov out stos cmp jl fmull mov mov jne ljmp dec iret frstor movsl mov les adc fcoms mov mov mov and clc add fwait inc cmp stos cmpsl pusha mov or push push sub mov jns (bad) jp sub add fldenv adc hlt pop jb repnz aaa or addl arpl adc cmc mov in outsl insl sbb and lcall mov pushf cltd lea mov adc jno lret or scas icebp mov cwtl pop xor loop dec pop ja xchg fidivl add mov (bad) cmp mov sti xchg imul cmp xor and sub scas jl fisttp jae push (bad) xor and fist cli jge dec push inc stos xor xchg daa inc insl mov and add and push scas (bad) repz out pusha inc hlt inc xchg jns inc sub dec dec gs dec add in jo dec inc push and cli enter push pop dec add push ret sarl jns data16 sti mull and sub mov adc loope scas pusha xor mov imul mov cs jnp xor aas mov xor adc push mov sbb mov scas lods arpl jns fnsave cmpsl in std mov inc notb dec jo or add pop inc sub mov push insb push push mov mov lock data16 enter xor adc popf mov sub jnp rclb adc scas rclb xor jmp lret scas jo cmc push lret xlat pop and in lods in (bad) popa loop pusha inc sub sub in push (bad) int3 push lahf movsl or cli stos xlat mov adc mov fidivr or sarb lret push mull insb and js jmp loope and jno call cmp lods adc pop pop test cmc enterw pop jb or sub adc ljmp or mov xadd cmp rcll dec fnop mov cmp int jl xchg stos push cmp in push push ret cli into cmpsb and push xchg or into fwait mov mov leave dec xor in sti xor test icebp sbb sub pushf mov xor mov out jns ss dec dec cmp stos xchg adc ret cld push ret or into (bad) cld push push push push in hlt push adc push pop (bad) mov jmp cmp add bnd scas loopne add ja mov out xchg data16 add add push fwait jae int3 js or push push out movsl or fnsave push loop xor bound push mov push or popf (bad) push in sub js or test or jge fistp lcall add xchg fdivl pop fwait and cli jne pop (bad) xchg fwait mov mull mov sbb icebp xlat aad mov je fwait pop sbb dec xchg hlt fs cmpsl pop and and add inc mov stos rclb mov insl and cmpsl stc push stos inc add mov insl in aas push in inc hlt pop xchg jns inc sub dec dec and mov cli fistp jbe mov ret push and cli enter add pop fcompl fmull cmp lods stos mov sbb push scas aad xor push daa cli es cli sahf push lods lock outsl pop repnz test fmull (bad) sti cld inc add das das insl test inc mov rorb (bad) loop (bad) mov xchg test or jge test xchg dec dec or mov andb or popf sub int3 cmpsl xchg adc cmpsb sbb (bad) gs jns cmpsl (bad) mov adc iret fcoml xor add or dec and cmp mov scas clc push mov stos stos cmovbe mov movsb xchg cmc or jl sub sub int push iret arpl stc (bad) sahf push scas std ss stc les and or xchg bound addb aaa jb pop jmp sub cmp ja jl call mov (bad) (bad) lock pop std jo out adc stc xor js mov xchg stos and orb push (bad) pop inc imul mov ljmp and mov mov daa xchg aas cmp sub pop mov imul arpl pop arpl lret mov dec cld test ss xor xchg inc xchg (bad) mov leave push decb fsubs inc leave cmc cmovle pop mov dec int3 and dec sub enter jo mov push pop out push in outsl adc mov inc cli xor popf cwtl in xchg cmpsb subl mov (bad) mov popa (bad) in (bad) mov inc push push sbb xor push inc aad sub cmc (bad) pop mov xchg xchg shrd mov fsub bound fs or sub mov loope push sub out or int3 jle sbb in xchg or jmp addl sahf imul cmp dec add push cmp stos je (bad) fst lods mov hlt xor in push ljmp jae (bad) jmp pop aam pop xor push stos push mov mov insl into mov (bad) icebp outsb loop lds sbb pop xchg push icebp fnstenv test sbb outsb (bad) jmp cmp idivb sub mov or inc repnz (bad) push push addr16 insl cmp ret mov outsb dec sub fdiv cmp popf repz xchg pop lahf (bad) (bad) stc ss (bad) sub imul ficoml pop gs sbb out add cmp jmp add cmpsl sub sub ret (bad) mov into pop xchg test cmpsl adc in rcrl pop adc scas ffree xchg je arpl popf add jnp loopne aad and inc stc xchg cli inc stos lcall in mov jb lods pushf pushf dec sahf dec ficom les and notb jg in dec mov pop dec rol test push sub shll mov push lahf icebp aad shlb cmc jp xor sbb testl inc movlps pop movb mov cwtl push dec dec (bad) xchg add addr16 (bad) adc push cmp xchg push push mov repnz mov push xor stos mov sbb ljmp add cmp std nop jl and fiaddl dec fsts ss jp (bad) je mov repnz push (bad) sbb (bad) (bad) fstpt inc sub (bad) stc mov mov mov scas fs int3 (bad) xchg adc fdivrs mov jmp pop pushf pop add aam xor dec sarl mov lcall div je lea jge lahf lahf xor sub int hlt pop pop mov dec gs rorb or pop mov mov shll imul sbb fisubl insb movsb sbb add fmull cmp push pop lds sbb or in jb inc rcl es xchg sbbl mov js fwait pop repnz sub leave fistpl pop pop sbb pushf dec stos dec dec bnd sbb pusha in adc enter stos mov ja imul insl icebp inc push fwait loope outsb pop sbb push and cwtl jo cmp adc and and leave adc mov xchg pushl js pop pop (bad) sbb js jle mov adc sbb fldcw xchg pop pop push adc cmp rcl fildll xchg sub loope (bad) call scas icebp cli (bad) cmp cmpsl push in stos shrl push xor lea xlat mov mov fldenv jl ja adc xor dec xor inc andb pop lcall shrl int3 dec imul pop adc rcl jnp jbe cmp cmpsb jl or and dec xor pusha cmp jbe clc idivl insl dec adc rorl sar test addr16 jo aaa aaa inc int3 lret mov sub lret fst (bad) and or bswap add jno mov xor dec ss popf imul pushf jnp ficom fistp pop mov inc push mov in push lods in jp sbb cmpsb sub insb and cmpsl das sub ljmp lcall sbb and movsb gs inc jl sub repz out lods mov aaa out cmp mov inc stos call (bad) andl jp or add lcall loop subb jae jnp rcl cmp or ds dec sub and ja (bad) pop fdivs sahf add dec adc outsb xchg popf adc int3 inc cmp add jl pop mov pop aad mov pop sarl mov inc sub shrl mov jnp xor clc adc add mov rorl adc cltd or dec lock aam (bad) mov repz orl (bad) (bad) (bad) mov sbb jo movsl movsl cmp push lds mov push in pop pop xchg xchg sub fwait cmpsl stos iret mov mov jae dec out sub mov jle cmp or push leave or jnp jl mov xchg push push xor fs imul sbb fcomp into mov mov rsqrtps push push lea xor cmp imul or sarl adc dec xor std out dec jmp mov (bad) frstor and cltd cltd cltd mov inc ret jb or les sub push (bad) jle push pcmpeqb pop fdivrl fcomps push xor sbb inc int3 arpl mov and fcoml sahf fistpl xchg push push mov sub push int3 rolb jge into aas rcrl jecxz mov or arpl insl or xchg adc (bad) pop fbstp fldenv ret jnp pop aam lds cwtl shlb xchg arpl or pop mov scas das scas rorb out cmp jno aam push push cmc jbe xchg mov cmpsb loope leave outsb mov in in out sub hlt cmp mov dec sbb jbe push push inc add popa popa mov les mov add popf popf pop dec out jnp jns js clc clc je jmp mov push and jmp cmc ss lcall pop xchg push or pop jmp sbb or cmc mov cmpsb or mov sub sub ret loop pop bound je inc ss lock into mov dec xchg pop dec cmp iret movsl out mov lret into inc inc out xor outsl mov pop test mov add add lcall pop les sahf fs test daa insb out mov pop in mov mov and mov pop push clc add test xchg mov fwait sarl mov fsubs cli into pop imul rcl test mov inc in or imul jge test repnz ret fldl jmp lret dec mov xchg out gs xchg stos scas dec cmp test test cmp repnz push negl cmp and imul std mov shrb push (bad) inc ljmp outsl inc inc mov add adc mov jl sbb insb (bad) out out nop jb inc mov test int mov mov loopne movsb stos add movl mov adc scas mov xchg pushf sbb in das shrb inc leave adc sbb and jns aaa cmp gs sbb xchg stos adc popa mov adc xlat lock test mov mov sbb mov push inc cmp sbb pop icebp mov add ret jae fstp stos inc pop nop ror stc je push push push (bad) lcall ret and enter fucom fildl fstps sbb adc inc xor adc (bad) sahf dec rcll jl xlat les xchg lahf fdivrs repz std sbb dec sbb ficom cli (bad) cmp out cmp pusha sub xchg lret inc popf and lods dec push ror and sub icebp mov jno out int3 xchg xchg and cli jae (bad) xchg mov jae in sub push jg out lods call jo xchg adc test arpl pop mov sub shr cmp movsb push enter pop lds xchg xor fadds push cmp in mov add (bad) rolb push push lcall inc jmp (bad) into int pop mov mov jne sar push je inc std test pop jecxz out pop jle (bad) xchg push outsb ss fwait pop xchg repnz mov lret stos or mov adc fsubl ss repz xchg push jne movsb lret jnp sti inc cmpsb js xchg add std std aaa mov loope or pop (bad) push ficompl (bad) (bad) cmpsl out imul jg,pn stos mov add arpl adc fwait pop mov sahf icebp ret pop sub imul aaa dec mov lret (bad) mov stos cli gs xor jg mov jb das daa pushf loopne jmp popf fistl inc addr16 sub pop inc clc in mov add movsb cmpsl ss mov sub fnsave movsl or (bad) push adc (bad) incb sbb mov pop xor nop mov pop mov push push in xor push rclb iret int3 or add pop pusha jo cmpsb push pop clc push mov cmp push pop mov push jae pop adc fsubl ss repz xchg push jne movsb lret jnp clc mov add cmp mov shl and aam insl push pop lods aad fild (bad) jns mov notl clc xchg inc les into inc mov pop push push cltd std mov pushf sub out gs out stos int3 scas and xchg icebp loope (bad) jbe mov xchg orl pop into into add ds mov jbe test or div xor pusha inc dec rolb dec test xlat mov cmp mov mov loope xchg cmp lret enter int dec outsb (bad) pop xchg xchg sbb scas pop nop xchg mov mov pop push outsb push cld push add push popa movsl loopne int out sub cltd cltd adc sete inc or push adc (bad) xor lret cmpsl and pop jle scas les xchg sbb out jnp xchg arpl push mov add sbb loope or insl inc inc and and iret iret and outsl sbb pop inc out gs es int3 or rclb roll or mov out movsl adc push stc pop lret jg mov movsl (bad) std daa xchg mov mov test je add sarl add pop mov ds mov imul mov and adc lock adc cs arpl xchg jl jno inc in int3 repnz add and push and mov fucomp in sahf popf (bad) loope mov pop pop fidiv test rorb or nop lahf push and in cmp xchg daa mov lret test jle or fild jo jp adc out and es leave je sbb add leave jle cmp aas ret (bad) int3 scas outsb in xlat sbb fldenv cmp mov xchg sub cmp bound ds rcrl sbb pop rcrl fwait lcall sbb fistpl jp outsb les sbb inc cmp xchg push xor scas inc sbb and ret mov mov movsb adc rorb es and int xchg aam mov (bad) leave cwtl push add and pusha sbb std cmpsl pop imul sahf mov push push lcall push scas addr16 jne jne int push in cmpl inc jb add mov in jno shrb lods nop sbb test xchg enter mov jae sbb dec leave aas andl imul arpl std or mov ret andl lret sbb (bad) mov and push int3 call mov lcall shl pop sub mov cmp notl mov push sti mov mov mov jge iret push mov repnz sbb jmp test or cs and ds ss pcmpeqb adc lcall fwait inc mov mov pop mov sub or loope and lods out sbb dec sub or and stos dec mov movsb cmp mov pop fnstcw adc movsw pushf in push outsl outsl sub ret xor out lea add ljmp (bad) mov outsb or mov pop sub ljmp xor and dec jae les fwait sahf adc shll mov jae pop or test in add jo lcall inc and xor daa cld push pop stos or inc int mov jb jbe scas gs add js sbb icebp lock jb cli and scas mov test push mov lret xchg lock sub inc popf or notl test pop fcomps mov push push out fistpl fwait jg jmp inc cmp or call fsubl clc fstpt mov push lods lods lahf in pop test add mov ss inc (bad) mov sub pop in mov movsl sbb add jno cmc mov and add push movsl shll lea mov mov rcr scas mov xchg stos cltd cs mov out jb jb pop cmp rolb test push loope xchg rep in mov mov arpl call ja (bad) jmp xchg ret sbb mov sarl orl pop mov cwtl leave dec cmpsb and push dec push outsl stos shr or dec push mov pop pop rcl ljmp div idivb xchg nop jno adc imul repnz push fnstcw icebp insl jae rcll inc mov jg or fld fisubrl outsb and adc dec sub fmull imul outsb pop sub loopne jecxz lret lret pop pop bound cmp jge pop pop cmp aaa mov mov stos ja or aad ss jne cltd jns test and gs clc jge iret imul and enter jno loopne dec movsl add cltd cwtl xchg jno mov (bad) cmc aam int3 xchg dec dec (bad) shrb or out add jae rcll push mov sbb loop imul jg jecxz fcomp mov xor and lahf xchg pop xchg test adcl cmp sbb ror cld cmp imul pop out insl lcall jg xchg mov or out xchg add and mov je mov daa adc cwtl aad push sub loope or sbb mov mov sbb mov jne in pop je outsb add lock fs cmp push into sub outsb or pop lcall pop pop jl pop cmp cmp pop fildll data16 xchg les (bad) scas sub rcll mov xchg adc into adc and insb int3 insb or test pop test dec lods dec (bad) in xlat xchg mov std mov xchg mov outsl jl (bad) dec xchg mov xor push pop sarl adc iret outsl xor mov push popa ds aas mov jno daa jae mov cmpsb pop nop mov cmc xchg repz mulb repnz cmpsb xlat pop les mov push adc out hlt stc dec orl dec das mov rcrb fstpt scas jbe and sbb loope cmp out xchg xchg mov xchg stos and cs lods fisubl je,pt daa pop adc int3 fisubr aam and popa imul mov lods insl mov lods out xchg sbb cmpsl push mov mov jbe mov push xchg icebp icebp mov nop (bad) mov data16 gs jae rclb xchg rorb or insl movsb divl push push inc in mov aas pop pop add xchg (bad) push lcall cmc mov push jnp aad insb jmp cmp xchg push jle inc mov in inc clc adc mov xlat inc xchg repnz mov sub pop fsts in mov outsb mov pop (bad) mov ss push inc cli sbb cwtl pop loopne cmpsl jbe ret into pop xchg mov cmp popf arpl dec lods insl nopl dec dec sub movd or cli cmp ss push mov inc cmp stos and mov lock and adc cwtl loopne cld dec dec mov mov adc daa xor (bad) xor inc int ja inc ja jle add push jo xor ljmp div mov pop addr16 or add hlt jno addr16 and int3 adc sbb cltd pop pop loope repnz sbb pop (bad) add fcompl sub xor stc mov lods lea sahf mov lods lcall lock pop mov (bad) mov out ss pusha sbb movsb mov icebp clc push adc sbb jge and add ss cmp sub loope sbb notb xchg rorl pop movsb aad add inc cli sub lret sub pop movsb jae jp pop cmp int3 jmp rclb adc loope loop fistpll stos push lods mov ds pushf pop stos (bad) fistp or cmp lahf insl insl lret push data16 subl add xor leave hlt lea add je jecxz mov pop jecxz outsl jle dec imul pop mov popf rcl shrl pop xor stc clc lret sub push adc clc fnstcw mov xchg scas inc add xchg push cmpsl repz sbb or push sahf dec lock aam les and hlt jno mov jnp jnp pop mov xlat lret clc fnstenv popf inc and imul (bad) or call ljmp jnp sbb fmull pushf xor daa out push rolb push clc add inc dec outsb mov fidivr sub movsb pop pop mov jbe mov jbe xchg lock sbb data16 xchg loop pop xchg pusha je cmp xor cli outsl and imul leave jecxz stos outsl jecxz mov xchg fist jnp jns sbb push adc jg jl jle fldenv jno sbb clc adc (bad) icebp sti jle or outsl (bad) jp aas and fcompl and sub sub inc movsb (bad) or mov sub mov xlat lret cli pop fnstenv ret inc jge sbb loope ds and subb xchg sub rorl sub or mov add arpl mov cmp imul clc jae pop imul or sub sahf jmp inc cld pop paddw mov push cwtl xchg imul (bad) jo mov cmc adc (bad) out cmp xor fisubr cmpsl div or xchg (bad) xchg dec push call pop cmpsl or movsl popa mov ljmp adc dec roll jb mov addl fcompl and dec dec repnz jnp jmp stc jno popa fdivrs cmp adc test cwtl lea and subl ss daa adc nop aad ret add mov or cmp xchg lods sti mov add aaa mov mov aaa inc mov mov out lahf fldt jae jp shll pushf xor scas into pop insb out and pop int xorl gs xor mov pop ds xchg adc gs jb es daa mov aas imul cmp pop cmpsb xor sub out pop xchg imul rolb out sbb pop roll xchg push inc popl idivl adc es (bad) aaa adc sbbl dec addl lock cmp sarb inc xor add test jmp add orb movsl lea idivb imul call push push stos adc pushf sbb shrb xchg xchg mov xchg stos add fwait xor enter in repz movsl xchg sbb pop cmc les and push popf scas dec cmp arpl (bad) das dec fldln2 sti mov scas scas fidiv daa fdivrp xor adc xor pop popw mov cmp pushf jp shrl sbb repnz into scas cmp xchg xlat mov std enter in outsl jg or clc mov lods add (bad) fstpt cli pop icebp jbe in jg mov adc clc fnstcw mov xchg test push mov push dec mov mulb dec push add iret pop fsubl xchg into test add sbb xor mov je or add add test sbb movsl mov (bad) jmp sbb movsb ja out insb outsb lahf scas and sub loope xchg ret mov scas mov repz inc (bad) das mov insl div mov loop movsb rcl icebp je sub icebp inc fs push add addr16 push or mov stos or xor ficom jle dec xor daa movsb and or push push or icebp cmp mov jne inc push push loop outsb cs push dec les out repnz in sti hlt mov jno outsb lea push mov xchg lock jns dec push fcmovnu pop repnz test inc stc stos cld out lea fdivl push push push or mov push (bad) lahf call (bad) or sahf leave pop je icebp clc push cwtl cli sub ljmp and lcall xchg hlt sbb cmp jbe imul jl pop mov aaa mov lret enter in es pop cmp push pop adc pop es loope add mov js xchg dec loopne clc xor dec test mov push xchg dec cltd push incb sbb mov lods movsl test rorb int3 hlt inc push add loop test in fwait adcb xor pop insb das das clc sbbl adc add iret (bad) (bad) dec xchg add sub cmp lods nop repnz je sahf loopne add aaa pop inc inc orb and push adc ret inc inc sub stc push arpl dec lock andl pop push sbb mov mov push bound mov test or shrl and sub ljmp (bad) loopne faddl mov daa cmpsb and jmp dec sub test fucomi mov push loopne fadds xor pop aas insl pop xor inc xchg dec jae xchg cmp test push push repz daa push pushf jp shrb sbb cmp lahf dec mov add mov insl mov stos dec inc and pop outsl pop popf (bad) out out mov jl push xor or mov add in loopne es ds aad insb cs (bad) out mov mov cmpsb insb pop jg mov xlat stc push add repnz popa pop sahf cmpsb inc fstl xchg (bad) andl inc rol stc xor pop mov das repnz addl cwtl xor sbb insb pop pushf cltd and push cmpsl loope xchg data16 mov repz cmp cmp xchg lcall push (bad) adc ret dec jo pfcmpgt ret (bad) xlat pop push or popf add inc mov cmp mov push xchg daa daa ds (bad) xor out add cmc leave pop jmp iret out add hlt pop adc imul rolb mov addr16 mov xor pop fildl fcomi cmp sbb xor inc inc xor adc test cmp push fwait shrl adc scas fdivr push rorb push ljmp call xlat imul ret popa sub lahf push aas xchg (bad) adc scas add (bad) and lcall xchg hlt sbb cmp jno xor jnp push fdivrs hlt cmp leave call pushf fs or imul outsb mov and fidivr popa scas iret pop sub sbbl lods inc sub sbb xor mov pop es pop jb ret test nop lcall cmp in add insb insb pop dec pop jl cmp leave mov shlb les mov out popf pop or fpatan pop mov push xchg lock hlt aas mov pusha mov add adc or js es sub add pop inc inc popl insb das mov xchg and inc cmp push mov (bad) daa jnp bound std mov jae and sub adc jge arpl sahf daa xchg (bad) push loopne fstl mov loope jecxz lret and and pop test push lea push push pop popa aam and pop sub (bad) or cmp jle bound in mov scas (bad) shrl add hlt mov ss mov mov sarb cmp mulb xchg sarb mov inc dec push adc std subl add test jle add lods cmp je in jg idivl pusha cmpsb shll add scas insb sub xor add call adc ss inc inc scas stos fistp cmp stos pop add add int fimull pop sub xor popf ss inc subb xor aad testl mov ja inc jno pop pop jmp lret sbb imull clc gs inc (bad) cwtl ffree add addr16 sub test mov bswap jge aam cltd das inc mov jmp cmp adc dec pop pop adc jo mov sbb shll daa xor pop aad mov xor rcrb dec out mov xchg dec sub dec mov push jmp adc dec push jmp lock dec cli dec push aaa jno pop (bad) mov hlt inc scas cmpsl inc data16 movsl fwait cmp rcrl add inc mov or mov in mov add scas outsl pop fstpl fwait rcl jns pop jb xchg mov push dec (bad) mov in popa cmp and inc shll aaa fistp in in push mov and adc incl adc xor in jne aaa jnp fs dec jg test fwait jmp jo in not pop mov jmp xchg adc addr16 add pop cmp xlat into inc dec mov push cmp cld js adc daa jmp xor push popf inc cmpsl sbb add bound in xor mov lods dec (bad) in pop movsb imul rcl shl pop xchg aas fist push mov fs pop push push rcll or mov jg inc adc fildl mov jno daa jae mov jge,pn add je movsl lock icebp sti jle or dec std adc or sahf mov xchg jb inc add shll fdivrs push repnz aaa xchg sbb mov add roll xchg cmc pop imul add mov pop pushf clc pop xchg xchg fsubl scas sbb sub add popa mov fldenv ret adc les and iret push dec dec xor pop aas test mov rclb in push fwait dec imul (bad) icebp icebp push scas jecxz dec add fs sarb lret inc inc addl fiadd adc pop fistl cmp imul idivl popa in push insl jo lahf push inc sub xor xchg jno xlat popa out lahf lahf test lock lcall pop add jmp jl mov cwtl sub cmpsl loopne add jno bnd stos mov clc cmp into lahf outsb in pop lds sbb cmp in mov lret push sub insl test mov push in call sahf or aad insb dec lret sub aaa (bad) jo andl or dec or lret sub sub test xchg (bad) bound lahf rcl jg dec mov icebp lret jb push adc xchg inc lret add xchg adc fcompl push loop,pn jae jge scas adc xchg pop pop testl push push scas cli hlt stos (bad) out iret rcl rcll lret push out or mov mov sahf scas das aam in in or scas push outsl outsl pop rcrb movsb adc inc mov jns push stos and inc jp int3 (bad) dec mov xor pop scas sbb sub gs es mov lds fimull sbb push fdivrs jl pop outsb hlt jae int3 dec dec jg cmp daa pop cld in jno,pt jp sbb push push adc adc loope les mov dec dec mov lods jbe mov fidivrl decl sub loope nop pop inc mov lock lods cltd xor stc pop popw mov outsl (bad) or cmp cmpsb inc xor cmp xchg ja stos ror pop pop mov pop xchg mov mov jo mov enter sub hlt adc clc ss idivb ja xchg add mov out jge adc sbb repnz jns xchg or out iret pop fsubl loop or push mov mov jge xor and xorps sbb adc fs arpl imul pop and xchg pushf bound push mov into xor lock movsl (bad) xchg hlt jl and movsb insl cmp dec inc or test pop aas inc push mov and sub pop dec cli js mov (bad) popf jb pop sbb ljmp fs jbe adc inc iret jmp push push into inc jnp imul cli outsl jle dec imul pop mov fnop rolb popf or jge in and (bad) jmp in cmp lret mov out lods je stc into imul dec adc std std fsubrl incb add das mov mov shrb and sub (bad) shl jns loop je jl cmp int push mov in rolb stos in icebp hlt call sbb bound std loopne sub pop in loopne (bad) movb mov sbb into mov xor push lcall bound sbb pushl int3 int3 dec repnz pop dec mov inc cwtl cwtl imul xchg cwtl movsl hlt xor sarl inc push inc shll aas rorb adc mov cmp imul pop mov push jmp mov sahf xor xor sbb xor xchg fcmovu sbb jo cltd cltd pop mov cmp add adc dec mov pop fwait cmp adc int3 sbb sbb outsl test push xor (bad) mov jmp cltd jle dec sub inc into dec je cmp fprem sbb jmp es sti sbb cmp inc dec fstpl xchg pusha stc cmp ret fyl2xp1 jl pop ds pop mov sub lret and or jp rcrl fisubl ret pop aam and jnp dec sti push ljmp inc or rol mov or mov out push pop jno pop jp pop sbb insl icebp sbb (bad) and mov add cmpsl in mov mov leave leave dec inc mov xlat mov nop mov ds inc daa dec xchg or pusha in push mov jo dec sub push xor mov xor mov stos lret dec jnp xchg lods push mov push (bad) mov insb jle add je movsl repnz lock jle or cmp lods mov adc iret icebp jbe out jae (bad) icebp xor mov mov jecxz or test sbbl adc mov es mov setae inc adc cmpl or addr16 test dec stos das (bad) sub and or repz movsl xchg adc aad roll pop push adc lods push jecxz fistpll fstpt cmpsb arpl (bad) das dec fldln2 lock pop xchg pop rcl and jp sahf (bad) cli cld push xchg icebp icebp sub mov xor out or mov adc xor add sarl pushl jnp jo push fnstsw in fsubs mov lahf je or clc inc jg,pn or and test mov jno xchg call pcmpeqb mov repnz or scas adc push rolb insb pop loop inc es dec (bad) mov cmp xor test sbb add pop cmpsl es pop bound js retw jle arpl psraw lret mov mov xor gs incb enter inc mov jnp test fcomps pop ljmp jmp pop mov mov ds push ret insb in push sub xor dec js stos inc (bad) add pop jne mov mov dec lods lods insl dec hlt or push ljmp in push sti pop ret push call xor dec sub and push and call mov jns add sbb movsl mov jle push push int3 pop out insb lcall sti in push pop pop lea imull in or jecxz inc stos jno jle xchg icebp rcrb fwait cli and ret stos loop loope movsl cltd inc imull aam and mov xchg jp mov xor flds cli pop jge enter add aad cmp (bad) cmp (bad) cld enter lahf sub test int3 pop sub or pop mov or lods out mov ret pop lods jne and pop jnp test push xlat in lock in js adc dec mov jl xor inc add xor pushf or mov inc xchg pop imul push cmp test js lock add mov loope hlt or xchg xchg cmpsb pop aad mov jecxz jno fisubl inc and xorl sub jge aas mov outsl int3 ret lods fcoml jns jnp mov add pop cmp dec xor mov push push sbb popa and xlat mov sarb bound jp (bad) shr scas jle,pn xchg xchg sub push out movsb test xlat xlat popa scas (bad) popa cmp cwtl xor ret dec sbb in and jl insl adc or sbb pop pop inc add sub jmp test fiaddl pop dec gs cmc push shrb pop ss sbb rcr insb jmp add out jo idivl inc inc arpl lahf movsl mov cli stos xlat mov sbbb pop popf push jg jo mov popf push xchg je jne mov or push ljmp push mov push mov ficoml push push lods cmp jnp test aaa aaa dec icebp cltd add leave movzbl and fsts adc leave imul jnp xchg subl dec pop push sahf sahf pop stc negb push fist adc movsl ds push loope sahf das jle dec sbbl mov xlat insb (bad) mov push roll sub out (bad) mov jno lcall mov ret inc add push mov inc xchg sbb ss dec mov sarb pop pushf int3 mov arpl push xchg adc pop lea dec sbb mov cmp inc pop jae or sub mov aas jns dec insl imul aas sbb nop jl pop adc mov xchg adc (bad) or ss pop push sub cmc cli stc pop mov adc outsl in inc push rclb mov add sarl ja insb push fstp ret mov gs popf icebp pop adc mov jle sbb (bad) dec push jl pusha or lea mov jecxz sbb xor xor outsb xchg sub sub arpl xchg push mov and mov rclb push int3 jo xlat sbb aaa sti xchg out pop dec xchg mov mov es and lret mov rcl addl and iret add jmpw fs inc fisub mov roll cmp das shrb jecxz aad mov add popf xchg push aaa jnp jns sti cmp divl aaa jmp sub push popa add sub js nop dec pop xchg jmp pop lahf (bad) psrlq rcrl cmpsl jmp cmpl sbb or push popf xchg mov and repnz xchg mov mov add cltd mov adc mov and imul test nop js movsl pop loopne xchg jl stos leave aad or fdivs pop cmp and push pushf (bad) cmpsb xchg es mov pop popf scas dec cmp arpl (bad) das dec fldln2 clc mov sub fistp mov (bad) xor xor cltd xor scas dec out popa xchg mov movsl imul ss mov test mov add mov insl mov lea xorl fisubl and out cltd lahf fbld jp or sti ja sub adc jg or xchg xchg scas push jle jno xchg or notb push int3 je mov (bad) out ret jo jb adc mov in jnp fisttpl push mov repz cmp mov jge or inc bound push in sbb mov and xchg fstpl fsubrl push lods xchg scas xchg (bad) adc and arpl dec std push mov fidiv mov iret loope push pusha mov movsb (bad) inc xor sub pop adc loop stos inc ds divb jg daa daa xor int3 mov aas or lahf xchg fdivs add mov push add push adc jp div movsb add js insl mov hlt mov pop lcallw test out aad outsb or pop jp (bad) nop jmp cli ret or std insl push push pop rcrb and scas mov xchg push pop pop (bad) paddq call add sbb (bad) dec jne icebp rcrl adc pop cli scas sub loope ret cmp cltd repz sbb jae out nop push adc shll gs hlt add iret sahf js lret and in mov pop cmp int3 jmp (bad) adc adc ljmp (bad) mov mov sub mov dec scas sub loope cwtl pop inc mov lock lods cltd cmp scas dec out pusha xchg mov scas out js or iret inc xchg mov push cmpsl xchg test jecxz out pop jg or xor pop pop jl push cltd inc jb xor mov push xchg shrb fsubl jns es pop in mov dec ret lcall mov divb (bad) rcl mov lds imul in pusha xchg jnp es inc cwtl add mov jg in mov sbb pop dec pop sub stos mov jecxz mov imul push jecxz out out mov pop push in cmp popf les int3 dec sbb sub push dec or dec mov arpl pop (bad) rol mov xor out scas sub loope xchg aad xchg push xor mov xchg cltd cmp sbb in inc imul bound xor dec pop xchg mov in dec inc cmpl push in add cmpsb xchg mov pop pop jl fstpt cli pop icebp (bad) pushf aam call aad insb cmpsb les xor jp jno mov ljmp pop sbb cmpl sbb or and adc shlb in hlt or out hlt or add push inc sti sbb fwait pop loopne cmpsl jbe ret inc jge sbb insl aam ds pushf and daa mov cmpl dec ucomiss mov frstor mov or add mov enter icebp dec cld loope xor push or iret add iret add jl movsb dec dec shll add add out ja sbbl in pop mov push cmp jge sub add add dec or jmp insl outsl jg (bad) xor aad data16 lcall jb xchg int mov push ficom fcoml adc imul push scas pop out mov sbb sbb shlb arpl test in fcomps dec lock aad in test leave fs ja jns and movsl cmp sub push xchg mov mov adc mov (bad) sub ja mov iret (bad) xor xchg xchg ljmp leave (bad) ret pop aam mov jns and andl aaa mov sub xchg insl mov push and push push mov mov aam sahf lret sbb sbb (bad) sarb cmp cmp aam mov (bad) dec jmp outsl adc rorb leave in in sahf lods dec (bad) push or and popf push jnp jns outsb daa clc jae jl jmp jmp cld dec adc push cmp jle jle pop scas pop push iretw (bad) jnp jno adc std (bad) mulb fwait orb loope out mov fucomp bound jecxz inc mov ss cmpl je lret dec popa mov dec sbb lcall mov cld out mov out push dec lods insl or sub and or repz movsl xchg adc aad roll pop push adc lods in cs pop add pop stos (bad) (bad) (bad) loopne fadds stc scas pop aas push rcll lret fsubl jno jae jb es das mov aas push lea sahf inc cmp xchg (bad) aaa fmuls adc dec inc or or pop lcall fwait push xor jo jbe insl cmp push jnp or and jg inc adc push mov std mov mov (bad) ss dec adc std std xor into or (bad) shlb stos nop in in pusha (bad) jle es inc add orb xor loop sub cwtl sbb pop pop push pushf sub stos mov jecxz mov imul push aam out out mov mov iret into cmp jae cli add xchg mov or mov cli push lock (bad) lret inc push push add cwtl out push sbb mov add cmp rcl (bad) mov ja stos (bad) (bad) or (bad) adc mov add push mov aam out in push mov out xchg aad mov lock xor sbb iret adc je xchg xor inc cmp fistpl aaa test pop add scas (bad) cmp imul pop out insl lcall loope loope pop dec outsl pop (bad) or jae lea andb push mov cs lret sub add ds cmp sub repz mov sbb lcall xlat xor jo insb sub or pop and fsubs cli xchg xor fbld sarb jp fnstsw inc dec xor mov cmc test scas cmp pop sti cmp out mov loop dec and push jl mov pushf fstps les fist jle and xor pop mov dec pop aad cmc xchg xchg cmp pushl stc std pushf sub test loopne fisubrl fstpt test add sarb js or lods mov fucompp scas push push jge or cmpsl loopne add js jns rorl push jl test mov xor jb jecxz lretw sub sbbb imul push cwtl xchg loopne sbb in not test add ljmp cmp daa pushf pop mov das sbb cltd add sub mov pop pop lds inc xor loopne daa stc decb stc and into mov add mov push pusha push ret subl mov addr16 xchg lea pandn sbb leave jecxz out sub fistpl sbb pushf popf add rcl clc mov div jb test es and hlt bound lods jl xor mov inc lcall add mov mov inc (bad) mov cs pop pop iret or xchg iret inc cmp imul mov jmp int dec call loop cmpb lret sahf (bad) cmc push hlt ss sub jle mov push sub leave or es xor in sub enter inc or add jnp test xor mov add movsl adc addl jge mov adc frstor xchg inc dec ja mov xor push stc and jne leave push stos stos and idiv test push in (bad) pop add xor mov ret pop outsb mov inc push mov dec enter ss mov add push xchg mov mov stos sbb ldmxcsr jmp sarb and mov dec fldt sbb loopne push sub ja lea push lea mov inc inc out mov stos sbb sbb cltd adc jbe pusha sbb pop mov pop mov add fiadd jl fs mov or repnz mov in loope lcall xlat pop lock lods adc push push dec jo xlat sbb aaa sti jno arpl pop sub mov push adc pop sarb divb fidiv push xlat in lock in js in popa fs or xchg push add leave (bad) sti dec inc mov test cmpsb je dec inc inc adc in jecxz mov imul ret mov (bad) fstpt cmp pop insl or push adc test xchg jae clc pop mov xchg shrb jbe (bad) (bad) sar xchg sbb dec dec orb ror fdivrl xchg jb inc add shll lea adc sub popl lods or xchg mov es mov pop xchg sub mov rcrb add jae sub sub test imul xchg sbb aad ret pop push adc movsl push loop fistpll fstpt mov dec fldln2 add clc xor dec test aaa jbe sbbb cli xlat outsb jb in xchg ret cmc xchg ljmp cmp mov in lret enter and add cmp clc pop and stos jne or lods aad mov repnz rcr popa aad movsb test jo pop jmp stos push adc xchg enter (bad) jl xorl lods push push jbe add jnp mov adc std std mov inc dec add stc add pop inc push fsubrl (bad) (bad) sub mov repnz mov cltd cli inc fwait mov scas addr16 pop jl pushf pushf mov fucom jbe,pn stos arpl mov xchg imul ret push orl mov dec into into xchg xor adc bound cmp or les fwait cmc cmp inc bound and enter jae dec dec aas cmp fdivrl jno xchg pushf in xchg adc xor lods dec jl dec imul push lahf add (bad) adc insl sub lods xor into or sub push mov dec dec divb fildl fcomi cmp mov sbb sbb pop adc adc nop dec pop into mov ficompl sub aaa int3 mov jbe cltd xchg pop lods rclb xchg push inc xchg xchg sahf sarl mov jae pop or std mov sahf lea and push cmp sbb gs sub addl sbb sahf xor jns les lock adc jg sub pop add push loopne jo xchg pop incl ret inc and push and paddusw mov mov in lods push mov xor (bad) push push and insl pop cmc cmc inc ror jae xchg adc lock xchg lret adcl push jl cmp mov push pop in je dec inc jo (bad) mov inc mov dec ja orb sarb imul popf in loopne es es movl jl call xchg ljmp pop sbb repnz sbb or and or shlb pusha test push pop idiv mov push mov jl fs mov add and imul in cwtl push sub sbb in loope in es pop cmp loopne cld enter (bad) cs xchg iret pop sub or pop mov add sbb loop fidivrl sub fcmovnu pop add push scas (bad) jge xchg icebp xchg insl mov leave imul dec in sbb dec mov insl or lahf cmp cmp push in jecxz pop stos mov mov sti jp jns popf cmpsl (bad) cmovns add cmp idivl imul call dec and push jno pop sub mov cli mov adc std std cmp push mov push ror mov mov daa es adc hlt out outsb loop mov push adc dec mov xchg mov cmp adc out sub das shll dec mov xor fimul mov into add rcr enter and scas data16 repnz pusha int3 int3 in dec imul ljmp inc cld pop or fdivl in xchg int3 xchg dec dec sbbl jae popf jo jae rcr test pushw lock sub mov outsb mov mov out push out sbb mov pop fstpl jb sbb fisubr movsb and int test cmp push cwtl shrl adc scas adc pop fdivs loop xchg push lahf mov jecxz sti mov enter mov adc lahf jno sub bound add adc xor and fwait jmp (bad) fbld cmp cmpb adc in and (bad) jae fnop arpl aam aad push add sub inc int fwait insl insl lods adc xchg cmp cmpsl sub (bad) pop in jbe mov adc xor pop out daa (bad) push int3 je pusha mov pop rcl xor push add mov in dec inc mov push mov and addl sub cltd cmp mov mov adc cs (bad) mov add rorb pop jg add je movsl adc sbb dec dec orb ror fdivrl xchg jb inc add shll mov ds mov sub xlat rolb mov scas addr16 jl xchg sbbb loopne rclb lods mov and or loope repz adc inc and adc stos incb mov mov mov rcll scas rcrl dec cmc cmc jp iret ljmp out or xchg gs mov adc mov jbe imul inc std rolb sahf mov xchg xor rcrl ja fucomi ss jnp sub leave jo adc jp cmp js mov in lods pop jg mov xlat call aaa inc inc daa xchg mov pusha jb inc pusha in mov inc fmuls mov sldt mov sub outsl imul push fs mov pop lret push (bad) (bad) fs cltd pop testl cs or stos icebp (bad) lock cli out mov dec push mov mov xor lcall xor mov mov mov and rcl push (bad) or mov enter dec repnz jnp sahf push nop nop shll push push mov fmuls in in jecxz inc dec lret xchg jns sti call sbb jmp sbb xchg cmpsb dec xchg (bad) push mov pop rcll les xchg push inc sub push adc imul xor enter xchg cmp in pop mov insl xor xchg mov sbb sub bound and es jl jmp icebp lds ja or mov or add stos pop fcmovbe scas not cmpsl insb push push jae fsubl add inc pop aam sub sahf data16 sub inc cmp sub cld sub gs cmp xor js call mov addr16 push subl add add add mov inc pusha jl cmc ja adc xor dec mov or dec add inc inc inc ja in cbtw mov loope mov cltd scas cltd (bad) rcr enter mov add inc pushf xchg cli jbe aam ljmp xor mov lahf pop dec adc repz call inc inc (bad) mov xchg jae int3 inc ljmp jecxz hlt imulb mov mov popa ljmp insl xchg fldt es pop out sbb test out out imul loope pop and sub insl imul ljmp pop mov sbb push in pop inc in jp dec and push call pop inc add sub jmp test cli pop push xchg stos mov clc xchg outsl dec (bad) in jnp and push jo imul pusha xor lcall leave rcrl push push in and or xchg xchg jne xchg mov lods inc bound jnp jp ror cmc idivl lods xchg call bound and jl jno push dec lods lods lahf lahf mov jp jg adc std push xor push inc mov xchg testb lock push ds js in (bad) es cmp int3 push (bad) mov outsb shlb call pop and mov movsl inc cmp (bad) sub sbb in sbb and (bad) lret mov mov xor shr or jns or or daa push idiv je jle int3 (bad) mov pop inc cwtl movsl inc loopne dec add sbb cmp je ljmp inc inc sbb push test pop lahf sbb mov aad lock stos cmpsl cmpsl int fs xchg and add dec xchg divl js out fstps aas aas and adc test xchg pop push jb stc sar jae or mov pop pop fcompl adc jns dec std std push sbb shlb and sub cmpsb addb inc pop (bad) and dec lds mov sub xchg pop pop and insl in inc loopne add arpl cld clc jnp inc sbb sahf jae lahf fwait fwait xchg xchg add lock add adc cmp shlb daa movsb mov mov arpl ret push fcoms and insl test and insl gs shrl mov test ds jbe mov gs lds sbb in imul idivl jb,pn push das or mov movsb adc push mov dec movb jecxz xchg lahf mov add xchg data16 lock repz sub daa xor or jecxz cmp clc (bad) bound xchg call psubb std std aaa or sub add cltd dec aam jb ret add in (bad) sarb es xchg cli xor mov push popa popa test push pop pop push push es mov dec push pushf pushf pop sub push xor scas pop add test and ljmp (bad) mov lcall scas aam pop pop cmp xor enter lods adc dec jmp insb repnz mov ficom mov lds iret dec mov dec sbb ficomp addl pop cmp leave (bad) sti dec mov fisub xor inc inc sub in fildl adc pop rorb cmpsb sbb call xchg mov outsb out add jo push in stos fbld or lods lods sbb add cld cmpsl fcomip adc fnstcw fiaddl push ret cli call shlb push lret rcl (bad) and dec (bad) outsb rorl sbb btc dec inc testl adc mul out sub loope sub scas mov inc lea dec or xchg icebp cmp xchg ret adcl frstor pop jnp mov dec or jl (bad) lock or divl inc inc cwtl cwtl push lret (bad) lds push sarb push dec mov iret cmpsb and hlt out or push and fcom imul andl test nop add mov jg inc mov stos lods xlat or shll pop fisttp sbb xchg sbb adc or out push stc dec pusha test (bad) loopne sub mov (bad) jno adc outsl outsl rcrl ds pop pop pop push lret rcrl or jge sub mov loope jbe call packssdw pop mov clc jnp cmp cli jne jae xchg sbb inc (bad) gs or jo inc xor ljmp pusha daa daa pushf sbb pushf aam enter ljmp outsb lods cmp push lods sub inc dec insb popw mov pop fstpl xchg dec adc mov and cltd in add pop adc mov sbb xor mov insl and jnp cwtl push mov fnstsw in sahf adc mov xor inc stos andnps add in inc jl adc sbb xor jno push (bad) icebp cmpsb fdivs hlt adc repz mov aaa aaa inc mov lret cmc stc add dec lret out fisubl cmp push dec std jno (bad) mov mov jecxz test sbb sbb inc mov in mov (bad) or push xchg xchg mov xchg stos add fwait aas mov in loope in ss pop cmp loopne cld enter aam sub clc sub ja fildll pushw jbe scas insl pop loopne fiaddl xor fstpl mov jbe mov jae xchg sbb add test push lods jae je (bad) icebp xor test mov push cmpsl xchg stos je push pop jecxz call mov mov pop popf jbe push fwait jp cltd cmp cmp sub das pause sub mov clc pop mov fwait pop sbb fwait pop out or fwait int3 clc fstps dec mov or (bad) repnz mov mov jb es test (bad) sti push xorl loop in adc push es mov nop arpl pop out cmp mov xchg or and or (bad) mov mov sub add pop inc mov mov mov sub lock pop mov adc or or mov xor cmp pop or xchg daa scas jl ljmp ja inc (bad) or out out mov add movsb sbb or sbb add fmuls xchg add cmp cmp imul fstps sbb cltd cltd pop mov cmp add sbb dec mov pop popf cltd and adc cmc cmpsb ret insl lds push and xchg aam popa dec insb pop or out addl mov inc sbb repz inc add cli repz push push mov jae int3 xchg sub pop cli gs dec mov daa pop lods call jnp shrl fidiv in int insb in xchg pushw cmpl lds jmp cmp fildll pop outsl pop in cmc test andb icebp outsb es out add sbb or mov adc xor or mov pop scas jnp les (bad) ficom lock jmp xor inc nopl pop fistp xchg jge imul sub daa fldl cmp dec push jae lods in xchg add mov aaa xor mov add das pop sub jne cmp jecxz (bad) jb es stc divb mov (bad) fistpll inc or lods movsl mov mov cmpsl push sbb push out xchg xchg mov in movsl insl fisub and and ljmp fsubs jne pop fidiv jne int loope add sbb test mov xor dec scas movsb shrl push xor jae pop xchg icebp icebp mov nop les popa outsb test push lods jae je xchg lock sub inc test mov push mov dec (bad) sub mov imul lahf push xor mov xor mov decb aam enter sbb sub loop sarl (bad) mov insb jg add je mov xchg icebp ret xor cmp out mov pusha bound add and inc enter inc mov bound (bad) fistp push rcrb xchg out adc movsl push and notl pushf pop push es (bad) nop dec cmp ss ret and push div je sbb movsb movsb sti es setg xor xor inc scas pop sbb int cmp mov out sub mov or enter test push push xchg fisttpll insb stos stos sub dec (bad) or push lahf test push pop fistpll call in sti hlt mov (bad) lods push cwtl sbb mov cmp add or dec jae fcmovnu pop mov fcoml adc cmp sbb pop cltd pusha fstps ljmp lea sti cwtl test and mov je icebp stc push adc sbb insl sub movsb repz es xchg push cld lea cmc push loop cld icebp mov sbb stc fyl2xp1 hlt lods push jae mov loopne pop lods out sub fcomp mov pop pushf xor daa in shrl mov pop inc xchg inc incl dec stos in cs dec nop outsb aas fcomps cli inc ret adcb jne xchg icebp xor pop add test insb insl fs mov cmp (bad) enter push fbld jp add outsb jecxz,pn jae jbe mov fisubl loope fist jns add sti adc jmp mov push gs ljmp js jno push mov push nop (bad) pop jge repz adc std std mov ret ja and pusha and inc and dec shr repnz mov cmpl stos push push movsl movsl pop sbb lds fnsave seto xchg push out pop in out and ret cmpsl sub ljmp popf sbb gs (bad) push int3 adc das mov pop fwait or dec lret flds fidivr mov (bad) mov xor sbb jl aam jb fadds mov fildll push xor adc add sub mov shlb jbe stos je daa push pop and sub mov mov ja orb push fwait inc mov clc lret cmp sub fnstenv adc stos mov cmpsb flds mov inc jle jno pop cs lcall negl adc inc inc add in jne xchg cs pop inc inc pop pop add popa cmp mov mov mov inc mov (bad) xchg sbbl mov lds sub push insl mov cltd pop cmpsl cmp xchg xchg stos movsl insb and and pop ja out dec cs fiadd test incb loopne mov ret mov jae outsl mov adc push mov sbb ss aas cld inc stc xor mov add sbb aad imul jne or imul out addr16 jg push hlt stc nop push push mov out iret (bad) rcll fistp dec xchg or adc lcall dec divb (bad) mov scas mov pop ja aam popa lahf insb mov leave out jge,pt (bad) shlb inc mov je cmp and pop es aaa cmc and jns jns cld clc inc int3 push or push or pop xchg sbb push fs xor dec jo (bad) sub rcrl cltd lcall and cs sub mov and mov test insb outsb insl mov lods imul xchg fadd rcrl push cmc cmc mov aad mov xchg xchg (bad) jae sbb in aaa daa push pop or mov pslld iret push or (bad) dec jecxz mov (bad) or pop jle (bad) cwtl pop add test test xchg idivb cmp or call sbb sub cmpsb flds jns js mov push outsl or jnp sbb mov inc xchg repnz mov sub aaa shrb in (bad) movsl loopne mov test or mov addl sbb stos add movl imul adc xchg cwtl bound lret leave in loope in ss pop popf sub ret ret pushf mov insb cmpsb adc fisttp and cmpsb enter das in cmp pop fist cmc testb dec mov push sbb out or addl imul xor adc inc dec (bad) dec aam add pop cmp inc (bad) push add add jl or popf popf pop mov jnp js cmp jle (bad) rcrb adc gs and mov mov sub push mov add sub cmpsl inc dec lret add das (bad) lock inc inc jle push cmp pusha in and inc enter dec mov push andl mov fnstcw mov sahf xchg negl fdivrl in cltd and mov stos stos out add out insb (bad) test (bad) xorb test pop jo inc test std gs clc cmc cmp (bad) es sbb or scas jae js and mov mov ja out aaa ficompl cmp jl flds ret add scas push push mov sbb pusha loop lock push xlat or jmp mov out cmp push das xor nop faddl rorb rcrb jl mov mov sbb std push sbb xlat pop outsb outsl pop rcl leave shrb push pop lea call mov mov xchg xor xchg jl sbb lea and js repz inc xchg adc jne or pop nop fisttp leave call sub sub add ljmp subl push sbb lcall and add push sbb dec loopne repnz dec nop pop aas push pop cmp adc adcl dec loope lods ljmp mov test mov (bad) or and xchg je daa rcrb pop fcomps mov xchg fidivrl adc jge mov lea je inc sub das and jmp mov aaa push rorb pop jle add je mov (bad) mov inc dec outsb (bad) jp aas and bound inc (bad) movsl push scas iret mov out push push pop jns xchg (bad) iret dec add mov int inc or stos movsb test enter lea sbb mov mov (bad) scas mov adcl cs xchg sti and and test shlb jo inc adc or in call aas inc push mov and nop in mov rcl stc adc jno cltd nop cmc or imul xor repnz inc lds mov push and adc (bad) cmp (bad) xchg fiadd clc mov add out shrb repnz adc (bad) mov lods negb jg xchg out push ficompl jle cmp push or jnp test das mov xor add push cmpb push jg pusha daa push (bad) out ja lea pop xchg inc mov test jge je pop rclb mov mov xchg xchg dec popa bound rorl stos and int icebp dec lock cmp dec mov mov jno or sbb (bad) lock cmp xchg jmp and dec popa faddl lods inc push or dec dec inc repz inc (bad) jl add sub sub xchg in fldt push decl push push inc inc out cmp aad out sti jbe sbb cs and rcll mov add pusha add aaa (bad) pop (bad) (bad) data16 ror mov mov bound pop ljmp loop and scas push sub call and pop add ljmp adc pop jecxz add push pop ja xchg (bad) clc clc incl adc dec xor adc popf xchg cmp stos std gs incl test dec jg mov in jmp (bad) gs outsb fsubp fwait lret imul sub lahf inc and popa cld dec dec mov mov sub jmp sub test rcll push cmc cmc or not dec add popf jb out sbb aaa xchg xchg sbb pop inc cmp (bad) enter push adc xchg mov xlat es adc push push (bad) shr fimull bound (bad) jge xorl jge push lods adc xor jle repnz pop mov cmovbe repz jns ss inc push leave mov test pop jge fstps and cs movsl sbb ds mov add adc outsb dec fldcw xor lds cmp ljmp and repnz cmpsl bound sub rcrl fs daa insb aad dec adc shlb push and (bad) sti mov sub lods lods out ja add scas (bad) mov test rorl (bad) popf jb out sbb aaa xchg es lcall adc xor mov outsl movsb sbb (bad) fcompl lock push xchg add push push mov icebp ljmp je jg je add jne in xchg sub lahf push jbe arpl movsl cwtl fstl lods and xorl adc aaa aaa inc inc mov xchg testb lock pop cltd adc test es xchg cli cld xor test push and daa aaa (bad) inc and call jb sbb mov (bad) stos cmp and add inc jge lods rol gs add add divb lods out mov jnp jl mov add and test lahf pushf dec sbb dec inc (bad) mov xor xor mov inc fistp push add stos (bad) pop cmpsl out loopne xchg cs jge lock pop leave cmp cmp xchg sub insb mov hlt lods stos outsb insl jge xor in sbb push lcall jb jns lock push sahf dec rcrl adc cmc (bad) (bad) adc ficomp cmp push in (bad) nop sub cmp xchg and (bad) or xchg or push fwait lret cmp rcrb ret inc pop (bad) bound add jns cli clc inc int3 push cmp push inc push adc mov cmp mov aaa mov sbb je adc das (bad) mov (bad) sub lods push add sbb cmp lods out cli mov in roll sbb xchg sti jl rcll and mov cld out and sbb jae inc or mov dec ss xor rorb (bad) into xchg rolb pop lcall xchg call jb add or cmc aad (bad) jg gs and cmp pop in lods nop sub lcall cmp inc sahf cmpb sti shl and fistpll (bad) mov jecxz (bad) cmp cmp aam int pop push pusha test adc mov pop leave aaa sbb sub mov sub daa xchg stos or jge stos mov lcall or test jge enter mov lods bound jnp shrb ds loop push mov mov (bad) aam sahf imul sarb dec outsb mov and xor sub xor or xor data16 xchg mov insb (bad) call xor pop fistp push sub jl pop mulb sbb loope xor test sub and nop push (bad) sti ja stos lock aaa fistl inc inc mov (bad) testb sbb out scas popa test scas (bad) leave pop (bad) jbe mov fbstp imull lcall dec dec mov repz inc add bound (bad) in sub mov sbb lds repz mov xor test leave ds loopne xchg sub loop je popf pushf ljmp sbb inc subl iret aad mov pop push pop add and pop ja pop (bad) xor push iret popl sbb mov sub ja adc int3 jecxz ret cmp lcall cmpsl (bad) in jle dec xor in mov lret adc jb jns or iret push ffree (bad) adc jbe xor sub push mov mov fcompl inc faddl dec adc aad sub push inc sbb fdivl bound rorl sti cwtl (bad) aam (bad) (bad) sub out pop mov fild sbb outsb in add cmp hlt sub mov ljmp xchg call xchg clc cmpsl popa dec in js pusha jo inc jl lds cmpsb in out mov dec test insb xor cmp xchg fiadd add push cmpsl shrl ja mov push fnstenv out fcomps jmp mov scas leave leave dec cmc push stc stos stos cmp das ljmp jns mov adc cmp or int xchg outsl sub xor insb movsl clc lret outsb mov adc gs outsb cmp jnp mov daa cltd xchg lock push sbb daa mov in add cmp jp add inc dec sub fcmovnu fidivr lods cmpsl fiadd cltd mul inc cwtl mov aad push dec or add (bad) int mov cmp (bad) dec outsl movsb insb insb sub imul cmp xor adc outsb data16 xlat out fadd pop (bad) add mov mov loope ss incl dec jmp mov sbb clc and decb push rol cmp (bad) lds ljmp xor lret xor adc arpl cli xlat nop dec jecxz add fnstsw stos stos cwtl out xorb pop xor pop lahf pop (bad) or fs les mov mov inc loope add xor pop sub and add call imul cmpsl add es vprotq jns sti std mov mov pop inc sub orl or mov inc push (bad) push movsl movsl pop cmp arpl dec dec jmp mov mov sar and nop lcall fisubr cmp cmp ds push mov cmpsl insb scas test lret ret dec subb (bad) nop pop cwtl cwtl out push sbb mov lahf pushf imull xor add (bad) (bad) (bad) or inc inc lret sbb push pop sub and sbbl mov push add or enter scas adc xchg dec test dec mov ja pop mov xchg jmp stc inc and ficomp add pop xor rorb mov bound or fcoms push mov lea lcall mov add cmp xchg inc inc sub push sub jecxz jne add into xchg push mov sarl pop mov and loop xor mov xor adc dec sahf adc jmp jge mov rorb icebp scas out dec mov dec sti mov and push push (bad) jb test int3 leave jp inc fisubrl lods or out inc and inc fwait sub mov inc xor ret leave jo test dec add pop push es ficompl push adc pusha cmp jl imul jo dec dec loope js mov test mov push fmuls sbb push jnp (bad) js cltd std std aaa xor das mov lea push aaa fadds pop lods mov and ret mov pop leave lret mov or popa popa test inc inc sarl hlt mov jae sahf (bad) imull cld ds pop sarl lcall sub cmp pop mov sahf pop cmp push (bad) pop inc sub addr16 pusha jmp lret enter cmp or jecxz outsl stos out mov and and outsb hlt pop ja xchg xchg icebp icebp dec out jne enter push repnz sbb leave int3 ss pop mov mov pushf push and pusha imul adc push test repnz sti inc sbb and push sub push xor xchg and add loopne int pop pop sub or test pusha push int3 ret divb (bad) daa push (bad) aad cmp (bad) mov fcmovu (bad) jno cmpsb pop jmp inc mov dec je andl js in fdivrp push movsl movsl xor aad (bad) jmp popf insl mov scas (bad) (bad) jb push fisubr popa jp and rcrl ss xchg imul into xchg int in movsl icebp dec mov (bad) mov xchg dec push into inc sbb push inc mov ret dec cmp push scas mov mov xchg mov jg pop stc adc jbe pop jg,pt cmp cmpsl div cmp dec dec mov lea int pop sbb pusha jae aas aas jg int3 dec rsqrtps fisttpl (bad) cltd imull mov dec inc or pop fcoml ret add js scas mov add imul dec adc fs fmulp ret add fstp jns movsb sbb sub mov cwtl push lret jp lods sbb jae sub call or stos lods popf push lcall data16 je cmp mov outsl hlt addr16 arpl jo lcall ret pop pop insb aad sub cmp stos lds fbld xor cmp insb mov mov ds hlt xchg loopne rcr sub cmc test xchg (bad) cli hlt push xchg icebp icebp mov fidiv xor mov cmpsl incl dec xor xchg jmp cmp rolb or incl bound add xchg and and and cmp (bad) jmp sbb movl push (bad) icebp cmpsb fdivs cmc lret or jmp (bad) popl (bad) call jo add mov cld (bad) mov sbb faddl inc or push sbb movsl sahf rcr inc push pushf pop pop pop adc xchg xchg mov xchg and mov pop and ljmp fcomp arpl aaa cmp mov (bad) cmp movsb push int3 mov xchg out xor xor inc mov push outsl (bad) ds inc xlat xor iret jo (bad) js add push (bad) dec out adc or inc jl and pop mov out xor jb mov adc cld and cmp sbb jbe pop xor xor mov (bad) idivb lret mov adc loope xor jl out das sub and pusha mov push (bad) xor xchg inc call mov cli adc cmp rcr inc (bad) (bad) pop in fidivr movsl lea inc inc dec mov lcall rolb (bad) lds ret xchg xchg cltd and test shl push jb mov jnp cmp cwtl lcall xchg or pop add xchg vmptrst bound add fistl mov mov or adc cs pushf pop cmp cmc dec shrb or add sbb jno mov sub lods xor into or mov in push xor repz mov (bad) lods push fwait pop jns pushf std jbe inc inc repnz xchg xor inc add push sbb mov out mov mov and in mov loop loope,pt pop lahf insl mov shl ss bound mov sub fstps test loopne jecxz sub cli cmp xchg mov mov add aaa mov mov aaa inc lea pop loope imul mov mov cwtl cwtl (bad) xor out dec mov out sub inc scas insb loop mov push push and stos jle mov ss jp add mov aam cmp sub bound clc aaa test ss mov bswap mov mov adc jo jecxz (bad) rcrb int3 pop popf imul push mov adc in pop cmc aam out add mov ficompl jno push es adc sti ss jle out add or sub incb push decl cltd sub xchg lds addb out icebp add mov cmp xor xor sub cmovg rcrl jbe loopne out mov negb mov inc (bad) repz push push jnp xor insl in scas ljmp xchg sub arpl mov push flds aad sub xor and in dec mov cltd mov mov cmp mov ficomp cmp test adc pop cmp popa sahf test push and mov pop cmp xchg fwait inc jo push xchg test mov cs sub push xor mov xor mov decb aam lret jbe les fsubrl loop fnstcw sti push fadds fwait jge and cmpsl mov xchg repnz mov sub mov das hlt (bad) movsl out pop (bad) and repnz cmp je lret (bad) push mov daa xchg cli and jne add movb (bad) cmc fs adc xchg cwtl jp pop test out push add int3 lret mov cmp gs les pusha xchg dec or inc stc inc icebp lock pusha pop cs or (bad) or inc nop sbb xchg roll jns mov ja scas je ljmp mov push jp cmp cmp mov sub movsb and pop or orl mov repz inc adc jnp mov mov jns,pt mov iret jno add loopne lea add xchg popa pop xor xchg enter vhsubps and loop jg xchg jmp sbb mov jne arpl test in shlb or nop pop add mov push jmp mov sarb xor pop sub shrb (bad) xor lds sub sti or add shl mov call push and push inc fbstp xor fidivl out mov bound or imul xchg mov loop dec xor cmp inc fwait jle fwait inc sbb push add sbb cmp jge sub sbb cltd push push clc (bad) repz xchg push fadd pop cld out jns or test es push je fsubs ss sub jno xchg push rorb pop into out jge adc sbb jle xor (bad) push icebp jne and xlat push les inc pusha in mov inc rorb (bad) cmovb loop mov push mov lret popf xchg cmc pop loope add jecxz and (bad) jae mov and lret sub pop movsb jae jp pop cmp add daa cmpsb in sub adc loop popf scas dec mov (bad) fcomi mov daa jmp dec scas sub loope nop pop inc mov lock lods cltd xor stc pop popw mov imul fidivl or shlb push mov xorl int3 popa fistl faddl int3 pop popf imul push mov adc in pop cmc aam out cmc lahf fcmovb data16 cmc fwait sub shrb lods nop sbb cmc test sti int mov add stc mov push sbb dec enter fldt sbb mov xor mov int (bad) andl leave cli and movsb mov inc mov fs mov stos popa mov push stos out out mov std fwait lds lret test or xor rol mov lcall inc inc stos aas push divb pop (bad) sbb repnz sbb call jmp lea in push cmp mov sub cmp js adc mov or out adc (bad) adc insl sub lods cmp jmp sub mov pop pop sub xor sbb lahf sbb and mov push adc nop xor bound mov nop repz dec idivb lea sahf mov lods pushf push jne jmp pop call push pop cmpsb jnp pusha mov jo jle xchg push (bad) ss clc and ret sbb insl in loope movsl movl inc xchg adc mov in fwait xchg xchg mov arpl hlt sbbl das xchg shrl xlat xlat imul test popf les and pop aam das in out and push gs mov mov out adc mov sahf nop ss bound fsubl test (bad) mov mov int3 xchg cmp cmp cmp popa lcall xlat mov into pop lret push push popa mov imul mov jecxz bound lods lahf jnp arpl std adc cmp adc adc cmp imul add sarb js or lods mov fucompp scas push push jge or cmpsl loopne add js jns rorl (bad) mov jl push call movsl test xor ds push loopne repz mov sbb cltd (bad) xlat xlat mov mov xchg sub arpl test sub pop push push fucomip out mov insl bound mov mov push inc adc and enter push rol fwait icebp dec xchg mov or xchg loop dec xor cmp pop or jle cwtl pop sbb cmc cltd add mov (bad) arpl pop sarb sahf sahf add movsb imul lods bound xchg push sub add cmpb cmc and inc cld daa push fcomp mov or stos es pushf jp test out mov mov lret mov js movhps jg pusha daa push out push lods rcl xor jle lret mov mov insl ss aam push pop dec mov loope popf test out xchg pop out ds out pushf and sbb fmulp mov xor dec rorl leave leave cli mov push sbb push mov mov add sbb xor iret add xchg inc cs adc mov insb push mov sbb xor roll outsl adc lea stc popf fidivrl jb imul cld xor loop and sub fs add cmpsl push push ljmp enter gs sbb jmp jg inc push stc dec sub mov rcll les pop pop jbe jge dec dec add cmp push sbb (bad) mov mov repz lret loopne mov xchg pop aas dec cwtl push aas jp lods adc sub stos adc push mov cmp lock add push fcoms xor mov inc or stos or fsubl pusha mov cmpsl xor push or mov nop dec jmp push push and jp xor sub ja xor add ljmp test pop xchg inc xor leave (bad) or mov je xor push rclb int3 into fcomp push mov ficompl (bad) cli jae cmp mul movsb mov push sub jno ja outsb xchg lods lods lahf nop (bad) sarl repz xor cmpl sbb and and sbb mov push sub mov pop mov inc inc andl fsts mov insl xchg jmp xor cmpsb pusha out adc mov sub enter aad mov jp pop cmp inc fwait pop aas mov imul cmp mov mov daa jmp dec scas movsb insl shrl push xor addl in js push jb jb es daa add (bad) pop out test pushf xor rcrl test or loop gs dec enter xchg jecxz rcrb push mov push xor jo cli mov jge cwtl in mov adc pusha fnstenv mov cli xor fsub mov das lock or push fldl jmp or scas out sub cmpsl inc test and lahf fmuls xor jbe sub (bad) inc ljmp add lock out xchg iret lret repnz ret (bad) adc and push xchg xchg inc lods arpl and mov push roll leave leave cli mov push stos (bad) mov mov int mov pushf outsl dec inc mov loope inc repnz adc adc test xchg lds and push sbb int hlt hlt (bad) lret fisubr iret in jmp sub (bad) jmp addr16 leave mov lret movsl and adc jp movsl pushf cmc pop cwtl in cltd leave xchg pop mov xchg or (bad) cmpsl push sahf jp xchg les mov in cmp dec add xchg aam push sub rclb push lea js (bad) (bad) test mov iret iret and adc or aam out mov pusha sbb jp inc adc out jp adc ds jae int3 or outsl pop or sahf in pop mov sbb gs cld push pushf adc pop es mov pop dec dec push mov inc lods adc iret sbb out fidivrl dec nop aad pop in testl push xor pop lcall outsl xchg imul cmp (bad) (bad) dec lods jb add jle xchg stos dec int pop jecxz out pop jle (bad) xchg pop add test pop push jg fstpt fcmove cld mov sbb mov ss out mov xchg pop sbb pushf pop out or cltd int3 clc rcrl dec stos xor cmpsl inc or (bad) repnz sub mov loop mov das lret flds add negl mov out sbb pop inc add lock loopne xchg into iret inc call in ret sub shrb cmc mov stos les mov lret (bad) lret push xchg ja dec xchg dec or imul cmp insl mov mov out cmp mov push dec mov mov insl push (bad) scas pop mov in imul mov jmp mov dec or and push pop xchg dec sbb mov mov add movsb bound xor popl sub icebp dec test ss jp jno push stos es adc das repnz js cmp push int3 ret jb adc sbb jne rcl or mov or aas (bad) mov ja and mov inc mulb stos xor xor arpl push outsb pop jae test adc orl fcmovu lcall dec clc sub mov push add gs xchg stc xor mov dec adc pop adc adc add cwtl xchg and adc xor inc int ja inc ja jle add push jo xor ljmp div mov pop addr16 or hlt jno addr16 and int3 adc sbb cltd pop pop loope repnz sbb pop (bad) add fcompl sub xor stc mov lods lea sahf mov lods lcall lock pop mov (bad) mov out ss pusha sbb movsb mov icebp clc push adc sbb jge and add ss cmp sub loope sbb notb xchg rorl pop movsb aad add inc cli sub lret sub pop movsb jae jp pop cmp int3 jmp rclb adc loope loop fistpll stos push insl push gs xor push push push cli push and movsb inc pop mov or push popf xchg out andl incl int3 and jb pop xlat xor lret jne leave rcrb out in sahf fsubs push push mov add jmp jnp jbe adc ret sub aaa sti xchg xchg cmpsb pop pop cmp mov mov test push xchg jne enter (bad) (bad) stc mov mov sub sarl jno push push mov xchg andl fnop in mov push movsl movsl mov in pushf jmp sbb and xchg mov mov stos stos shl add sub adc lcall mov aad sub addr16 sub call mov mov jmp ds or pop jno test popf push test sbb sbb in or sbb xor (bad) enter stos mov jbe out push and jecxz xlat mov xchg das das inc jno jns xor les (bad) push or sbb rcrb mov inc push push mov lock push js aaa aaa xor or (bad) ljmp (bad) (bad) and js in shrl mov mov ret andl lods cmp pop push shlb dec pop dec pop adc pushf pushf sub repnz push mov cltd movsl sub pop (bad) or lds mov mov ss jmp hlt imul ret and pop (bad) jns jns pop or dec (bad) adc cmp cmp mov into fsubrs dec jbe inc dec pop aad hlt icebp test call sub xchg xchg inc cmc lcall popf mov mov or gs in sti hlt mov push dec das outsl popf mov js stc cmp jb or lock push adc add jo movsl add xchg sbb fcomp jge push bound mov or pop pop repz lret pop (bad) aam pop jne jb dec nop pop pop jns mov push push ja sub adc jno mov jecxz jle mov sti (bad) (bad) frstor je dec mov push jp mov sti fistpll xchg dec adc cltd xor xor popa mov mov jle call and add out cmp mov pop xchg loop rcll mov or fstpt push jb jmp jno,pn lods adc xor adc sbb stos cltd in pusha into mov inc popf mov adc add cmp loope mov fwait ljmp daa idiv stc (bad) or (bad) mov inc mov xor mov push shrb sbb add or out add mov or jae ret scas mov (bad) outsl mov aam mov mov (bad) mov inc mov int mov sbb pop sbb mov movsl mov mov fisttp out xchg xchg and or test push adc add adc lcall sub pop aam scas aam push add sbb insl insl lahf add shrb xlat cmp pop pop ja test popf adc sbb out pusha addl inc mov sbb adc mov xchg pop and pop icebp je dec leave inc popf mov adc add cmpsb mov (bad) mov popa jbe das cmp lock int out jb es (bad) fwait dec lahf pop pop pushf and cwtl orl push je clc sbb out push loope js mov xchg testb dec int loop and movsb (bad) jns jbe negl mov rorl and out test pop dec add lock out xchg iret lret in ret (bad) adc and cmc hlt mov les xor xchg inc fldenv cmpsb mov es xor or testb es pusha ds pop inc adc fistpl outsl mov test aam scas cmpsb jb insb push ja xor xor lcall push jecxz pop push mov icebp mov stos sub aad cmpsl aaa orl jecxz lock sbb inc clc jo repnz cmpsl in bound mov fstps add rol xchg mov jb xchg rolb inc push adc push dec (bad) pop cs or adc iret sbb xor adc (bad) (bad) into lea stos call loopne add or xor pop sbb xchg (bad) outsb inc add idivl js test add adc cmpsl add in jecxz xchg and (bad) jge jbe daa ret cmovl imul add fadds add xchg xchg aam loop addr16 arpl sub pop pop ret cmp mov push xor and aam ficom mov test xchg idiv adc out jmp arpl aaa outsl es push pop sub rcl push push push push dec dec jp push imul ja into into mov ja lahf scas scas jo mov cli sti push push push push jo mov mov daa and adc push add dec outsb push inc inc xor mov push mov jg (bad) insb das scas rolb and and sub gs arpl mov mov int3 rcll popa ljmp push movsl movsl mov mov imul loop push mov xchg or lods out js imul fiaddl jo jle fsub xchg aam xchg adc pop pop inc (bad) std mov movsb jbe lods jns jns in jmp mov in cmc jl nop roll (bad) rcll bound ret lea insb stc sarb jl xchg jg mov fprem inc add test or jb push xor pop adc mov test sahf sahf rcl js jp cmp hlt hlt jle call jae pop imul mov push push scas scas pushf pushf or js lock (bad) (bad) xor inc inc mov sub pop inc inc aad daa daa addl and mov mov into addb sbb push push cmpsb cmpsb mov mov lahf adc popa popa ds out ret sub mov gs out aas jecxz mov mov ss js gs jbe outsb dec or add iret dec and ja inc sti mov fistpl and jg fdivrl xchg xchg jb or ja dec test fild dec push xor pop push pop je mov xor imul in push xor and scas in push mov add cmpxchg push mov in adc (bad) lcall jno pop mull xor add aas sbb cmp lret adc pop sbb insl cmp adc mov pop jg stos jmp fbstp call mov add dec mov pop jle xor repnz sbb stc push add adc push adc dec lahf inc add jno xchg repnz (bad) dec and imul jmp cltd fcmovnu pusha pusha rol pop xlat xlat das das fs add pop pop dec dec mov mov in cmp cmp lods fstp push push div xchg xchg xchg repnz out (bad) (bad) push outsl outsl addr16 xor adc xor lret dec push push push push gs dec dec vorpd out popf popf mov test test lock mov or outsb jmp pusha pop jmp pusha imul pop repz add lods and inc pop pop xchg loop or xchg cmp mov xor jae push lcall lret dec icebp xchg (bad) lods and pop in or jno in pop loopne loopne and or rcl xchg addr16 fstps ffree dec fistp aas ret and push subl stos cltd adc pushf mov adc fnop jmp loopne fwait push leave push xchg (bad) rcl rcr mov ss cmp imul pop xchg enter notb repnz pop push push rorl push test andl scas xchg in xchg call fs je test or mov add loop fs inc inc or mov xlat mov scas scas jmp add push das jmp cmp lret js cli lea jmp fldcw jo pop imul mov push push scas scas pushf pushf or js lock (bad) (bad) xor inc inc mov sub pop inc inc aad daa daa addl and mov mov inc outsl shr cmp rorb daa push (bad) andl sub cmp lret mov push push gs cs mov push fimull je cmp mov xchg mov out mov jnp mov mov das icebp repnz mov xor lret adc cld dec or mov mov ja sub xor push add or mov mov mov or loope sbb arpl call stc xor pop sbb push dec jmp in sti mov std inc push pop and xchg cs cwtl loop in dec call inc aam inc cli xor xlat pop lcall scas adc sahf test mov leave or pop frstor adc or pop inc dec aad dec xchg cwtl loope fisttpl xchg push pop inc inc jge sbb cld cld movsl loop std cmp inc div adc xchg fs cmp popa adc fwait lcall jg jno jmp popa push mov adc lret int (bad) and and push out push and jbe das and mov and mov stos xorb and cmc xor adc das cmp popf inc add rcrb inc and lahf sbb stos in fs mov popf cltd or mov pop or and xor push fs dec clc addb je inc or push xchg in imul cmpsb sarb xchg mov add rclb pop in sti add (bad) fs js daa inc std lods pushf add jmp mov mov xor inc xchg inc dec hlt jno std inc leave mov mov gs dec mov jnp in add push movsl movsl mov cwtl push leave pop sti xchg mov mov test mov fwait movsl sbb frstor stos or arpl rcr arpl aam sub push sub push pop pop cmp dec insl lods adc shr loop cmp mov mov xlat xor xchg (bad) xor xor outsb scas flds sbb inc mov fwait inc aas popa inc lcall sub rolb and out in ret inc mov rorb xorl (bad) cli incb jno push or jmp inc mov (bad) or dec fldenv idiv push cld jns adc mov jne movsl sub lahf xor aas sbb jg xchg repz pop fdivp std or mov test xchg cvtdq2ps lods pop push push shrl xchg sub and cmp out lcall or fs addr16 mov dec inc lahf fs fs jp mov mov ret repnz jnp js or dec loop mov adc mov mov xor xchg xchg daa and insl cmp addr16 inc (bad) mov inc iret pop add xchg push push popf arpl or es sbb xchg xchg dec inc dec scas xor jno inc addr16 cmp cmp in outsl pop mov inc decl icebp out add fstpl xlat add lods jo daa out stos pop hlt dec scas nop nop lods cwtl popf loopne out aaa pop loope pop (bad) cmp imul sti popa test roll popa sub pop jne cmp fsincos sbb and and xchg sahf add pop push test sub add adc pop jl data16 (bad) xor lret lea jmp mov pushf sbb out mov xor mov cmpsl cld mov mov sub das add mov pop cmp mov gs jb es cmp aaa daa insl lods (bad) (bad) out inc cmp (bad) repz xchg xchg push mov rcrb dec sbb (bad) movsl outsl add dec daa lods mov out dec push addr16 inc xchg inc sub in xchg pop sub pop mov daa sti sahf (bad) jae in sti mov dec ret push push jmp aad jp fldenv fistpll mov in rclb and pop inc push lahf lcall xor lret adc (bad) jmp insb adc jb stos stos loope mov xlat into outsl add xor out fsubrs ret xor sub pop cmpsl sub ficomp out lret jb adc ret mov pop add imul pop adc xchg iret push pop loope xor push (bad) sub arpl or je dec lods jb out pop movsb push mov pop or mov pop adc add test xor (bad) jae ja fcomi ss jnp and lahf aaa je dec jmp dec lea sahf jge xchg push pop mov lcall add cmp cmpsl stos clc mov js outsb mov cmp loopne lods mov pop pop out adc lods out pop rorl pop mov add inc gs nop push loopne mov and xchg fistp aam cmp push jmp int jb sub in adc or sbb push xchg inc std mov imul sub or push lea mov ret (bad) (bad) lock in enter dec test or xchg jmp stos adc fdivrl pop and inc fist cmp dec imul jo jae rcr mov and leave leave ljmp mov aam inc xor cltd mov mov lods cmp (bad) lahf xchg dec xchg test mov faddl xor fnstcw lahf inc dec mov nop mov mov in push push xchg mov push pop (bad) mov in imul xchg dec push out or mov daa adc and sbb das out add pop jl clc inc cmp sahf outsb cmp jno mov subl outsb mov mov xlat shrl in mov (bad) call adc pop jge push repnz push leave mov loopne out sub add stc xor sub push adc lock sahf xchg test cwtl loop in adcl sub or loope or (bad) pop or in movsb call (bad) pushf adc pop xchg sbb cmp pop push popf enter jbe aaa in les jmp cs lahf test sarb inc movl fsub mov mulps shrb les jbe add pop int fcmovbe and inc es lods ss mov push nop push add push imul add or mov lcall pusha (bad) insb adc cltd cs add xchg sbb mov cmpsb sub daa outsb ds ljmp arpl dec mov push sbb cmpsb js stos inc push stos pop dec pop lret xor icebp and mov lods scas scas push xchg dec fldenv jl pop xchg icebp icebp inc inc pop in subl std xchg adc add dec bsr int3 mov add add mov mov (bad) pop int3 jmp (bad) mov fmuls xor stc sub and sub subl pop jno sub fnstcw comiss (bad) aam ljmp push je flds add add das les adc pop in or mov loop jne xor (bad) inc fist lods and call push cmp (bad) xchg movl aad dec ja push mov sbb inc mov jae push test add jnp pushf jecxz ss mov inc inc cwtl xchg push pusha cs or imul rcr (bad) jae inc repz inc inc (bad) lret or push or sbb in and jmp imul add push xor lock mov (bad) lods pop lcall inc inc insb outsb sbb xor gs sbb dec mov stos push push test fdivrs push mov push lahf mov pop scas jl arpl movsl dec sub (bad) sti adc and xor cli repz push adc ret mov sbb stc fyl2xp1 hlt lods push jb leave lods dec cld popf adc in imul add cltd inc cmp push adc sub push inc add std insl out pop (bad) dec ss sbb mov es movsb pop stos (bad) ficompl jg jp mov adc ficompl loop insb insb out xor ds cmp (bad) dec ss add addr16 dec adc or push fisubrl sahf rclb xchg imul jp std cmp les test dec sub xchg in adc cmp cmp test cmp rep dec test sbb push cmp jg mov pop cmpl mov mov in mov sub mov out pop pop fldl mov rcll cmp mov jbe imul push adc dec ljmp lods shl fwait lret fisubr pop jne push in scas (bad) pop or pop jecxz push and aad mov cmp push mov ss rorl cmp in movsl mov sbb adc cli or mov pop pop shlb sti (bad) gs in cwtl cmp mov call push js adc jns cmp pop (bad) adc push sub mov push xor lods out ljmp mov pop sbb cmp std std dec aam je or in pop bts aam sbb add pop mov std or inc inc ds inc ret js sahf pop jg adc pop es pop lret addr16 xor insl imul and sub xor rolb fldenv mov cmp cmovo push mov cmp sbb jecxz cmp rcr loope mov sbb xlat add insb outsl sub mov mov mov add adc pop push mov sub stc stc (bad) enter mov jmp pop mov sbb push fsubrl (bad) fcmovnb mov in sbb xchg fwait and in dec repz and push fdivp daa in in jbe mov mov xchg xchg xchg sbb pusha ljmp and pop fstp mov cmc xor dec inc mov outsb into iret fmull cwtl outsb sbb mov rcr xchg mov mov dec add jne cld fcomps sub es dec or cmp lret sub xchg lcall push pop or outsl sub data16 cs or push push inc dec mov test out out xor in scas popa and push rorl movb outsl mov popf in in jl imul xorl divb push dec fdivr pop push data16 dec dec int pop pop out cltd xchg orb lea aam xchg rcrb jns (bad) mov adc xor out sub fidivr cmp lods mov push lods lods popf pushf or jae sti sti sbb sti sti xor adc arpl jb or jb or int add (bad) mov data16 fcomp jno xchg jp (bad) shrb adc pop stos fcmovnu movsb mov ret subl fs xchg js fdivs adc sbb lds popa mov std sbbl jmp dec xlat inc aad aad push jae pop or or clc out mov or mov ss cmpsl and pop fisubl pop and push repnz sbb (bad) xor mov cmpsl xor nop mov cmp jg popf fs push pop xor push jne dec lds aas push mov jbe mov sub xchg push mov jnp jmp or or add movsb jmp adc push xchg arpl ss idivb jns xchg scas pop pop mov clc icebp adc jle pop cmp movsb mov and push sub loop inc rcr xchg mov jecxz inc mov jle bound loopne movsb stos add movl out push sbb sbbl cmpsb mov (bad) xor pop dec push xor push cld mov enter add pop and stos test aas decl sbb popf icebp push dec rcrb push add adc jp mov (bad) xor int3 mov js cmpsb (bad) or jne pop iret mov aad (bad) mov rcrb loop cs cmp inc addl test and clc mov mov rcrl sahf push or push jb sub push in xchg fstpl cmc mulb scas nop xchg xchg xchg arpl push bound call lret roll mov jae dec or adc notl sub imul mov icebp xchg jb pop dec add push push cmp (bad) jl jne cmp insb sub in pop ljmp sbbl sub xchg mov mov pop dec mov mov scas adc mov push jmp push xor lea xchg xchg icebp jb jns out add addr16 xchg sbb inc sub inc adc and sbb stos outsl sub add out mov xchg fbld jns fwait xor daa hlt (bad) std aad pop jecxz (bad) sbb shlb mov cmc scas adc push push pop es nop mov mov rcrb cmc cmp inc mov mov (bad) in setns push jmp and sub es push jle inc xor jno idivb jns in add push push movsl movsl in ljmp bound cmp mov xlat stos (bad) out stos and outsb sub jmp ljmp pushf arpl ret pop aam sub addr16 or inc dec mov addr16 rol lods out cmp cmp test scas scas (bad) pop push cmc decl jae cwtl repnz out test pusha outsb jbe cmp sbb cmp int3 iret inc inc lar popa insb jle inc inc int3 int3 pop pop out xchg xchg addl mov xchg xchg fldcw aas jns cmp sarl jmp sub jb adc imul leave push cmc sub add fsts pop lock jmp pop in lods stos fs add lea or addl subb mov ja icebp mov fstps or sahf enter sbb andb inc xor mov out (bad) jle push stc clc adc das cs cmc jle roll rorl ret and mov insl out scas xor je (bad) sbb nop bound push lock jmp shrb push or push aam test pop mov adc adc mov mov push enter pop enter push push nop sbb mov stos sti pop mov roll dec aam in cmp or inc insb stos cli jns (bad) mov leave js pop js cmp in xchg xchg sbb mov sub into sbb or push push pop movsb cmpsl and and push push rdmsr lods dec pop rcrb push adc adc fcmovnu push imul (bad) sub mov (bad) xchg pop and xchg sub jnp push push arpl outsb js sbbl imul jge jnp jns add sbb inc icebp mov or test xor outsl fsubl push add jbe inc mov mov cmpsb sub or add dec xor stos sti (bad) ftst insl divb push mov fnstenv pop ds mov jmp cmp outsl scas ss mov fldt lret pop add in pusha cld rorb add stc and (bad) mov sbb jle adc out pop roll fs sub inc loope sub inc mov push dec idivl push mov mov (bad) js adcl and mov xor jl lret sbb mov add jae je fisttpll shl movhps push cli sti ljmp xchg mov mov jecxz sbb sti mov es mov ljmp fadd ret pop pop xchg push push int3 test inc cmp (bad) in lods test cmpsl es (bad) shrl stc cmc mov adc jae adc loope push xchg push out sub ljmp xor mov std xor pop in jecxz mov mov pushl xlat popf pop aam lock cld int jae jg jmp addr16 out sahf and cmp lcall pop (bad) (bad) je mov mov cmpb clc leave or xchg test xchg sub fwait push add jecxz dec mov imul xor dec je,pt (bad) (bad) xchg clc xchg stc mov pop or mov adc jnp mov cltd and cmp jbe lds bound inc jns inc cs scas test ret cmpsl es or push inc xchg mov bnd out imul cmp mov push or sbb fwait jno (bad) orb push cli (bad) pop loop xchg sbb dec fisubl adc testb lea lret push cmp int3 mov (bad) jae jmp insl mov and fnstenv add ret call or xlat aam int3 pop fcoml adc fs (bad) mov inc enter push imul jl jne jne add aam stos ja ret inc popf push xchg add outsb adc ja inc movsl add idiv rcll xor or push cwtl faddl ja js pop mov int3 jg sub gs xor mov sti iret push adc (bad) jecxz pop push imul addr16 pusha push aaa fsts jecxz mov xchg inc mov les or (bad) jae mov sbb sub out cwtl divl lret in xor push add jae push cmp roll push in push push cmp xchg rcl jnp xchg mov pusha insb (bad) xor push cld push outsl xchg mov movsb orl cmc lahf pop lock pop aad adc jp ss inc inc dec enter pop je mov ljmp inc inc es xchg rorb movsl movsb xchg dec cmp pop fnop movsl mov stc cmp add aam add sbb xor or sub insb in scas fs xlat enter enter mov sub and pop xlat mov cmp dec hlt dec xor sbb int3 jnp test inc pop scas or sbbl icebp movsb xchg cmc outsb mov or sub lods or jnp cltd cmp (bad) or and ds nop cs jbe subb lahf pop rcrb cs bnd jl push cs mov jg add cmp (bad) jle jno rclb popf cmp clc test adc imul aaa les add das aam push sub test mov pop xor lret xchg adc cmc mov imul popf jecxz movsl rcll sarb (bad) dec aad bound mov mov stos int3 addr16 mov inc sbb dec dec into test (bad) mov rol in and dec dec inc je cmp add jnp push adc loopne nop call lock and inc leave pop mov dec dec ja inc inc (bad) insl add pop pop scas pop lret int xchg aad push pop lods cmp iret iret jge lahf pop push in imul xchg ds mov lcall imul push inc pop iret adc add loope sub jo andl add xor rcll fistp je dec dec std std adc or jl push mov add add mov cld cs fnsave test enter inc cmp dec cmp insb push adc pop add jnp inc jle add ja popa and outsb adc cmp mov out pusha and sub outsl mov sub call push pop pop mov outsb and mov or or es shrb pop push sub scas (bad) fisubr test leave icebp insl jb in int3 gs and adc adc cmp inc (bad) add dec out dec mov inc insb push add mov jg sub sarb jae or adc int cmp pop push loope pushf mov dec cmp jle jno daa mov (bad) popa xchg lcall addr16 mov cmp pop fwait xor or jecxz std and xor mov inc int orl or fstl es mov stos pop pushf pushf pop outsb pop jne lcall pop cwtl out movsl pop jle and sub mov add fsubs jecxz push (bad) aam sub cwtl jb or mov pop divl cmpsb xchg aas mov mov dec and fdiv cmc test cmpsl (bad) repz sbb out outsb mov push inc xor jne scas xchg xor leave mov cli cli stos fbstp jbe test push mov mov scas mov push ret (bad) lea ja sub xlat mov jecxz xchg idivl xchg cwtl imul stc dec in mov xchg mov (bad) std imul adc inc (bad) (bad) jg,pt add das mov orb jecxz add mov mov mov or dec movsl dec jb in movsl test dec jns aad bound pop out fwait cmp xor pop xchg sbb out out and pushf add fsubrs pop call gs xor je xchg in movsb jne pusha icebp pusha pusha inc cltd dec int mov or add loopne dec mov add ret pop cmp pop xchg daa daa xorl lea and scas push lcall ds sbb cmpsb in mov test push adc in push mov ret fsub std jbe pop in lods jo das inc mov adc add sbb sbb sbb fisttpl mov sub in jl lret shl dec cmp push cmp pop xor xchg jmp rcrb adc lret pop inc push pop lret sub cltd (bad) cld push xor sbb les add pop mov cmpsl cmpsb jne dec dec loope cli jns dec (bad) dec fwait fwait in cmpl mov cld jle ja add imul push cwtl pop and aam scas (bad) cwtl adc xchg mov add fbld bound xor xchg pop pop sahf repnz idivl mov and mov push daa inc mov adc xor cli (bad) ja sbb lret cs dec mov xor int3 movb sbb js add dec xchg or sbb aad enter cmp sarb and das cmp sti aaa jmp rcl add xor out cmp xor push sti cli adc pop test js lcall mov (bad) stc stos mov sarb or inc push push push sub (bad) dec daa repnz mov inc lret insb and push sbb pop out popf movsl ret nop dec lds dec and sbb arpl push mov subl sub lahf in movsb repz pop (bad) ja pop aam adc stos push mov in jbe lret insl lcall (bad) mov xchg mov test jae xchg out mov and arpl adcl pop mov adc leave inc inc aad adc push or push je mov adc lret mov imul add movsl div outsb (bad) jno jl jne out popa mov adc imul cmp push sbb repz pminub jne adc int3 push in stos push adc push inc inc xlat (bad) je and test lods jecxz mov dec ljmp (bad) cmp mov pop repz add inc inc mov ret adc cli sub imul and enter rclb mov addr16 dec cmp mov orb (bad) repz mov mov or je cmc pop mov rcrb dec add sub push pusha mov pop xchg inc (bad) jo pop test lea sbb xchg fcom test cs cmpsl int pushf or cmp xor ret add movsb mov mov rclb out and jno adc cltd fdivp push and addr16 sub inc shl mov les loop rcl out pop xchg xchg pushf fdivs jne xor ja or pop pop dec xchg xchg xor dec adc nop xchg sub loope mov je sub inc (bad) scas popf and cli cli add jns fwait in mov jecxz gs pop dec or cmp insl and add jb and add push or xor shll sbb mov daa insl dec jle ds (bad) jo aad and flds jle rcrl and scas mov adc and push mov cmc jge in inc aas insb inc lret cmc dec add movsb js ljmp adc pop mov mov or xchg jae mov jge mov jo pusha xchg xchg fiaddl xchg enter fsubs test mov into pop (bad) adc add out pop pop xchg (bad) and orb movsl or rorb dec mov in lock xchg pop push fldcw (bad) xchg arpl mov int popa pop pop push lahf stos sub stos iret sub sub fnstenv sbb push add mov in pop sub pop and dec dec std testb in iret movsl jb jns test scas (bad) push cmp mov cmp leave dec lock in faddl imul dec int xchg jb ss pop pop xchg pop xor cwtl rorb xchg fimul in pop xchg or out mov adc test in jno push and jmp mov adc jle jae or movb es insl daa (bad) and push (bad) jnp mov adc inc (bad) (bad) stc lea mov push cmpb cmpsl mov outsb (bad) mov mov popa outsb xor pop or pop test repz movsb pop sbb loop cmp mov and les fcoml fidivr xor lret adc dec push (bad) mov ss inc arpl jo mov daa pop cli mov cmpsl mov fcomps or cld cltd cwtl loopne adc iret add push xor adc jbe inc fild inc es adc mov cld push mov sarb in in push xchg mov lcall cmp call cwtl cltd pop pop adc and xchg fildl adc scas adc pop and scas jp jge xchg lret xor push push add imul ds (bad) jge sahf or mov out aas cmp pop loopne add jge mov rorl jg mov sti test lret xor (bad) ja xor push insl cmp int insb ljmp (bad) mov dec sbb outsl ds and add pop pop dec dec mov outsb fs stos leave leave movsl movsl out out xor aaa aaa mov xlat pop pop cld cld mov fwait clc clc adc in in mov insl insl jne cmp sbb cmp ror dec or and aas aam cmp jbe jno scas adc mov cmp push xor add and out sub push xor andl lahf (bad) (bad) mov adc aas out or stc je clc jle or and addb fmuls jp xchg mov int rorl sahf lcall cmpsb dec (bad) cmpsl fstps arpl jo mov dec dec rep insb inc jp movsb and sub lahf repnz xor gs inc sub dec adc sub fdivrp mov xor mov mov mov sub mov ljmp jnp out mov loope addl add insb cmp lcall sub cmp xor pop xor xchg jne fcompp sub pop pop popf popf das lds xor jle jp lea jo xchg adcb cmc fwait sub pop push es adc add xor in push cmc mov dec xchg lods mov mov fisubr push out stos (bad) mov stc dec xor je pop push or test mov (bad) push call mov sahf xchg hlt sub mov subl lcall lret mov mov (bad) stc cmp jne das add jne jno (bad) jmp (bad) iret adc je pusha inc int mov pop rorl lret mov daa insb repz popa mov adc mov sbb outsb cs ficoml xchg enter cmpsl sbb pop in outsb nop xchg (bad) in add out out push outsl (bad) js daa aas pop or rcrl adc int in in lea and dec jg (bad) push in cmc dec dec std js sbb xchg sbb cmp mov mov out popf je xchg push movsb push dec (bad) xchg lret ficoml dec cwtl jmp pop sub jno inc inc xchg out fsubrl jp jne (bad) xchg or fstpt mov jle (bad) mov or sbb ljmp fbstp sub mov loope sub cmp adc jno pop pop aas sahf div and cmp scas pushl cwtl fprem1 fwait jae sbb std push lret insl addl xor fwait xchg repz leave movb push add xlat data16 sbb cs sahf faddl mov lret push rorb lock mov add lock out mov negb loope mov sub fsts push es sbb dec lea push lahf push std aaa aaa int3 dec pop or movsb dec (bad) adc sub jecxz std inc es mov cmp mov int push mov push cs push popa inc (bad) pushf pushf adc loope cmp sub add xchg ffreep sbb and add sub pop mov popa jo lcall jne pop inc sub cmpsb and mov ficomp rorb mov fisubr mov xlat xchg adc inc pop xchg sbb lret and xchg std divb xor sbb dec mov dec js (bad) sahf and dec mov pop fistpl mov jns rcr gs adc push repnz mov mov cs lahf (bad) aaa out cmp mov jnp and fiaddl push rcll xor adc add out bound (bad) or push pop pop je mov subl scas jbe sbb xchg mov mov and aam repnz movsb test push cwtl pop xchg pushf pushf push jb inc and and test sub insl add test or fimull dec xor push aaa ret idiv subl mov flds dec int mov mov ret dec cmpsb ficompl jns mov arpl or pop pop stc adc aas fcoms loopne cmpsl and jecxz mov movsl in jecxz xchg mov ret rorl in xchg sub movsl pop nop push mov xchg punpckhwd (bad) ss and test cmpsl out push push jle push inc aaa leave xorl pop cmp nop jp jg xchg cmp and jae pop fnsave cmp bswap push push adc sub in in xorl dec aaa xor hlt sub dec es sti sbb clc xor ljmp push sti mov fnstcw push out xchg popa call sbb sub sti xchg sahf clc call jns pop jp out and sbb or lret xchg enter mov jbe inc subl (bad) out js cs aas mov mov (bad) jg cmp jno pop jp test xor leave loopne imul sbb jno mov lods sbb lret pop sub sbb movsb jbe jnp cmp divb or lahf jns aad (bad) jge movsb jnp jno lods inc test pop jnp xchg (bad) mov inc add popl xchg add inc push ud1 push (bad) lock and fsub rorb repnz je adc dec rorb cltd sahf pop add lahf dec adcb or cmpsl out sbb pop mov clc daa stos lret inc aad jg call into cmp out cld arpl orl cmpsl sub jns sbb and aaa cmp sub add sub mov scas decl mov and (bad) lds sbb dec and out pop sub fs mov insl mov fnsave inc inc lcall adc aam shrb idivb gs popf pop and imul sub fdivl push fsts xor mov mov lahf adc dec sub aaa fs pusha js push jb and lods fwait pop push adc ret rolb subb push ja out scas (bad) mov out xor divps jbe add lds bound mov mov sahf mov (bad) cmpsb and cwtl popf inc icebp cwtl int mov mov scas ss lahf inc iret sub or or mov cmp sbb jecxz iret mov jg lcall mov rcrl push cmp mov nop lods and idivb enter xor jp lea popf out in test imul sbbl xlat in sbb in add out rcrb push ret mov xchg into xchg bound jg or mov andl xchg jbe dec cmp jbe push daa imul xchg sub add xchg push dec jne sub add xor mul test fstps fldcw jne sub pop pop in js int3 lcall sub lods nop jne movsb add cmp call inc or mov pusha sub cmp arpl xchg mov shrl scas mov loop add ss es and aad mov test iret fist movsl or clc adc repz sbb mov jle ljmp cmp inc fbld mov movsb stos add cltd loop add or or call adc jmp (bad) pop or jno cmp jns jns insl jl jne data16 leave jns jo adc push push sahf orl pop (bad) lock repz sbb inc inc (bad) (bad) idivb add das aam dec int fstpt cmpsb mov and aaa testl push arpl dec sub movsl and inc arpl push pop imul adc sti fs or outsb xor outsb cmc jo lcall aam cmp jno (bad) repz movsb ret nop cmp xchg pop repnz dec loope mov push (bad) push js mov or xlat shrl jnp ficoml push adc pushf arpl inc mov enter stos ss cmp push push adc xchg mov mov xchg das pusha jp daa and xor mov jmp xor in mov in std mov push push lret test jae incl push scas enter mov js and mov dec and addb and add cld mov andb xchg pop loop das push sbb test test cwtl pop xchg pop xchg lcall mov jb sbb xor mov xchg or xlat test daa xor call test cli stc cmp lock jmp dec and imul add mov add cltd push jno mov imul jecxz loope stc call mov push push and bnd push dec aam in cmp sti dec push pop add fsubl repz aaa jo sbb sbb inc inc mov rcrb pop or mov mov cmp cmc enter add enter mov pushf test cs mov cmp xchg jnp aaa loopne addr16 ljmp and test das inc sbb ja jns (bad) ficom jmp jge jge pop negl fadd (bad) cld pop adc push push cmp or mov add jge out jbe jecxz mov jmp xchg sub sbb mov incb sub test (bad) rcrl sub iret xor sbb xlat or cmp repnz popl add je push mov movb add mov add fsubs subl jge mov sub cmp push sub addb jmp rcll jnp xor std mov fiaddl mov aam fldt inc mov data16 mov ja int or divb fisttpll mov cmp leave xchg pop loope call out fistpl xchg xchg cli daa stos lret js push fistl cltd out (bad) out daa out or fs sarb inc push dec add sbb pop scas hlt lcall imul pop rorl jo lock cli xchg jno sbb lock fidivl out int3 mov int adc mov movsb jb or cmp out sahf mov je out xchg sarl pop xchg pop pop repnz (bad) (bad) jmp mov cmp add mov inc clc idivl push fcoms mov jnp push call daa lret (bad) stc stc lea or xchg rcl mov out (bad) jno xchg or xor stc xchg fldl cmpsl jne test sbb xor movsl movsl dec mov jge mov sub xchg dec popa push mov and loop xchg daa fild mov (bad) mov mov shll mov jl (bad) cmovnp cld mov xor push cld inc cwtl cwtl loopne pop mov out lret daa fs cmp cld ds push lcall loope push xchg aaa dec lods rcrl inc cmpsb es or or push push int out movsb movsl or mov sub dec adc pop notb sbb jmp pop push (bad) or sti xchg add xor xchg pop outsl cmp mov shl cmpl mov rol add rorl jg pop lret add bswap in cmp xchg pop adc jmp scas je,pt cwtl scas test jno jmp adc jae jns add aaa outsl ds mov fwait mov stos in out arpl divb mov test imul in pop (bad) scas xor les scas lahf es insb ds adc xchg rcl lods orb adc push aam icebp sbb in inc fbstp xor fs nop fs cltd and mov adc into dec xchg or add push movsb jecxz cmpsb pop jmp aas aas mov dec clc mov mov jmp sub shl jg jbe jno push repz fwait jbe dec sar std popa mov adcl mov int3 xchg outsl pop sbb xchg js cmpsl add push or adc (bad) aaa ljmp pop test lds xchg (bad) mov cmp pusha pop pop lea int push (bad) jns jne mov and ret dec sbb xchg and ljmp and dec cmp movsl pop test mov sti and push push cmc cmc push enter cmp fstpl gs fs das int pop aaa jnp dec or push mov shll (bad) mov pusha popa add pop push lock sbb outsb nop jb xchg outsl aad or mov jnp sbb cmp xchg pop lods lods push repnz int jnp bnd xchg std popa fist jo cmpsb cmpsl pop pop in daa pop or cmpsl inc test mov scas fcoms inc inc dec ljmp rorl negb movsl mul cmp int fisubl inc or mov rcrl dec inc xchg jnp (bad) adc stos (bad) dec ret je mov ljmp (bad) push lds push into cmp imul ljmp add addl cltd loopne dec mov cmp fwait sbb pusha pop rcl xor ret mov inc sub fsubp les neg push stos pop mov int cmpsb jnp lock jmp lods dec jno add repz push addr16 add sti mov lahf adc fist cmpsb imull pop js and cmp jl push xchg mov mov or ss clc or outsl xor jp inc out pop ja mov jae decb push sarl or pop aad ficoml sbb jns inc loope jmp fcmovnu xchg test scas jne fstp movsl movsb pushl push cltd cmp adc sub mov dec jg jp and pop pop adc fdivs stos popf cmp add mov push mov push sbb loopne xor shrb je and push xlat xor test dec (bad) mov icebp pop dec mov stos rclb out jp pusha bound pusha int3 push xchg adc pop (bad) pop push jmp aam dec dec sub rcll pop push cmp pop call idivl cmp repz lret push les cmp xor xchg push lods lods cmc lahf mov jp hlt cltd adc scas fdivl mov or (bad) pop pop pop sub cmp jecxz inc inc push cmp ljmp jnp popa popa test out pop push push pop mov nop (bad) lds pushl mov xchg lea scas call mov xchg (bad) pop rcr ss fcompl dec (bad) push rcl fildll mov inc xor sub push and lds loope ss test cmp (bad) aas sbb fsubrl mov testl inc hlt add add jp mov add push push in in pop fmuls ficom pop add jnp das xchg pop enter and sti clc lahf das bound in (bad) cmp adc push (bad) movsl push xlat add jg cmpsb lcall pop addr16 pop lcall sub int pop xchg sub xchg or or mov xor ss js sahf jnp adc and add mov mov imull out mov dec or jnp inc adc stos (bad) dec into dec jae int3 adc into cmp arpl dec andl mov cmp lahf inc or lock out inc int3 inc inc fwait call add jae ja mov dec or mov dec or sbb ljmp mov test adc xor push nop nop pop mov pushf imul mov test push push in sub out add xrelease out decl jae in mov adc or cltd lds push sbb push lcall jmp push cwtl test scas xchg inc fdivrs push add adc sub mov sub mov sbb sbb fcoml fcmovb jl add mov mov cs and (bad) mov (bad) adc lea cmp push cmp jg mov jno xchg adc push adc mov jle rol ja cmpsb daa lods xor push xlat xchg lds pop daa add jp jnp xchg imul cmc sub cltd lods pusha clc ss mov or cltd sbbl cmp insl insb dec dec icebp das leave xchg (bad) mov or inc rolb pop (bad) mov mov mov add das (bad) and cmp mov sub inc inc loope std add cmp mov push push rclb or lcall lods mov mov lea loop,pn sahf and push shl ja cli mov dec dec movsl std sub popa xor out fsts stos dec mov mov cmp imul insb sub push push add sub (bad) and gs inc sub inc popf sub cmpsl sbb testb xor xor stc sub mov das loop loopne popf outsl addl out outsl insl push mov cmpl fwait or mov xor dec in cli cli inc and jmp mov icebp sub lods scas xor sub xchg imull repz xchg stos push or subl rorb js sbb mov gs scas pop jno push test pop or outsl in push (bad) sub test mov push scas (bad) mov loop sbb (bad) ds fisttp incl add jae jmp repnz mov add push jnp in push adc inc es leave inc ret into dec cld dec xor pop bound out jb fild lret and (bad) (bad) mov mov addl pop mov pop fisub (bad) je shlb nop mov push push les push dec sbb fstpl push out test ss lret inc add cmp add not adc insl icebp jo mov jae rcrl dec adc jne lahf je repz adc and jns notb xchg fcoml addr16 icebp mov std insl insl push in push push xchg jmp pop jns lea add call call in cwtl aaa inc adc inc jle jg adc push mov sub int3 jp clc scas cs fsubl push loopne and mov cltd lret jge sarl jp cmp addr16 sbb sub js pop aam jg addr16 push out mov roll lods out movsb ret test mov stos xchg push daa loope subb jae push xchg pop test in pop jns imul inc sbb lock xchg (bad) test (bad) push push imul (bad) xor sbb push jmp (bad) pop or jno pop push jae aaa and xor xchg into xchg jmp aaa out cmp sub add add pusha pop out popf (bad) xchg aad jbe imul jb sets or xor subl mov sahf mov or aas test sbb mov data16 xor rcl (bad) jge out jnp mov out or mov cmpsb jp ljmp and loopne fnclex push aam sub xor (bad) adc mov mov daa xchg out insb shrb mov fsubs fwait push cmp movsl fisttp out fsub addb fs outsl lock mov mov pop or pushf cmp mov inc xchg push mov jbe mov fstpt pop popf insl out jmp cld mov jmp sub sti mov add (bad) aaa out cmp jno cmp insb in push adc (bad) jnp js dec aas stc aaa (bad) int3 stos flds icebp xor js and iret push cwtl and iret pusha pop adc es or xchg ds or outsb xor pop pop xor mov lds sbb mov sub js cld inc stc sbb or insb test (bad) lret pusha faddp xor jg (bad) or into cmpsb arpl hlt lock jo int3 inc xchg mov mov dec rorl push fld (bad) dec and scas adc mov push push dec das xchg mov aad adc and repnz sbb loopne xchg in out repnz aas aas movsl mov adc xchg adc sahf test js adc fwait (bad) movsl rcrl cwtl fcoms adc or std push sti and push push sbb adc push pop pop rcl ret add xchg jmp nop xor xchg mov pop adc stos lret add sub adc mov (bad) cli jne jp adc les popa xor mov aas sub sub ljmp pop in sbb ret pop or addr16 cmp inc mov cltd xchg pop and imul cmp test lcall test sbb push inc jbe jb pop popf in (bad) int outsl and aam ljmp enter lods pop gs (bad) jmp xor push mov or jge push rcl pop inc icebp mov aaa mov icebp xchg ljmp out mov scas sahf inc in daa push push pusha sbb or mov xor jae and and popf int and aas in push bound mov in push or pop mov mov xchg or cltd add dec cs pop inc movsl and cmp out out (bad) push sub ljmp add icebp adc test imul mov cltd fadd jns fwait shrb adc pop and jmp insb icebp and ds imul xor pop sbb loopne add xor in or and sbb int3 in dec lea add jo enter push in mov lcall outsl mov cmpsb sbb call aas cmp sub lahf add push and xlat jecxz addr16 mov lods ret cmovs cmp int3 mov stc jne sbb inc pop sub andb inc mov mov std mov icebp mov loop add rolb loope sets pop aaa jmp adc prefetcht1 and or dec fadd mov insl repz push or ret pop fidivrl shlb int adc xchg adc jns scas push iret cmp icebp fwait sbb inc mov loope sbb clc pop jne mov repnz jnp insb push xchg fdivl cmp pop pop or sub popf mov mov jecxz mov sbb (bad) std sub add cwtl notl pop mov dec mov or mov pop (bad) adc daa jle adc stc insl out sahf push pop push fsubr fs mov jbe (bad) arpl xor test xor fsubrs leave nop (bad) dec jmp add push cmp fcmove mov adc mov stos aad or mov xor mov outsb sub popa pushf sti xlat xchg push cltd imul cmp xchg sub test cwtl and add dec mov mov pop out cmp arpl scas and rcr adc js test mov jp inc daa loope or cs cmp dec (bad) aaa xor push jl add push inc cmovnp notl push mov mov ret push aas jnp dec jg mov cmp fisubrl and pop sub or push push pusha sbb or mov std test fistl int3 cli xchg call or cmpsl inc test sbb in repnz add out ds gs and cs je mov popf mov popf add lcall stos mov loop je call popa pushf sti xlat xchg mov call popf mov xchg rcl movsb loopne or mov mov xlat cmpsb popf add clc cmp std and mov add push adc sarb out popa and push fs outsl lock xorl or push mov sbb inc mov adc sub lcall ds adc fcmovnu sarb jns cld jge idivl jmp cmp push cmp aas dec and sub aaa inc push push lods lods ja cld icebp test aaa (bad) jns cld std aaa mov in shll das movsb cltd add test (bad) jno insb ljmp jno mov jp mov clc mov sahf sahf jnp fldcw lcall repnz pop roll jmp xchg (bad) (bad) dec stc hlt stc insb pop push cmpsl gs movsb dec cld iret dec mov cmp dec bsr inc and sti divl xor add lcall loopne orl mov mov cmp outsl push adc xor adc push sbb loop ljmp sbbl insb out push stos div or push ljmp jbe inc inc out loop fsubr in sti xchg leave sarb sti xchg sbb imul dec rcl cli pop orb add cmp dec dec std std insl out inc fidivl sar xor jb xor inc mull mov push cwtl xor out sub pop sub and xchg clc das (bad) adc ja adcl mov xor add imulb rcl sahf jae sub out cs xchg lgs fcmovnu (bad) mov fisttp out incl int3 lods add xchg cmpsb mov mov and lods or adc inc (bad) es jle sbb outsb orl adc cmp adc xor mov xchg adc jecxz leave shl in in sahf iret jbe pusha jb mov sbb (bad) jmp sub idivb das and (bad) jle loop cmp mov cli mov outsl mov add adc mov enter (bad) (bad) jl jne lods out add mov sarl shll es hlt ja cli mov push cmpsl int add test sbb cmpsl int mov test sub pop bound xchg pop cmpsl and clc out das push js aaa inc sub add popa xchg cmp push call cmpsb lds push pop (bad) inc lret imul iret inc fist sbb arpl scas cli push xor cmp ret iret sbbl push adc xchg xchg out stos jo xchg mov aas xchg xchg (bad) add sub push lret sub fisttp faddl add jns cltd jmp push cld xchg mov mov sbb cmp xor mov fstpl pusha mov jg mov dec dec cmpsb mov add mov jp mov add pop insb cmp or into movsb prefetch js mov fwait or imul xlat adc pop sub cmpsl loopne fwait mov inc call das jecxz div insl repz xchg cld inc lods adc (bad) (bad) xchg xchg dec mov inc and mov and fildl test test dec or lahf dec or dec dec dec pusha ljmp inc into jo push mov push push addr16 jb xchg ret addr16 xor jo inc push nop jb ds (bad) mov mov aad out imul cmpsb mov lahf stos leave in test mov movb cwtl repnz in mov adc rcl push mov jno adc xchg dec dec mov cltd cmp (bad) or jle pop and dec dec mov rol lea push or test cmpsl adc adc daa imul js xchg fldl shll sub jns ja aas (bad) sti (bad) pop adc fwait scas clc sti sbb sbb data16 mov jae inc mov pusha ljmp adc inc popf sub mov jnp test cld std fistp jno in nop xchg inc cmp sbb mov fisubl jne fcoms fbstp popf sbb outsb les movsb cmp mov inc fbld mov insl stos cltd loop add or pop add inc gs cltd call rcrb xchg daa rcl jnp mov movsb jbe mov jmp scas outsb lods and jb aaa push push lods lods lahf stc xchg lock (bad) xor mov sbb stc jp or mov pop cmp pop adc push ficompl jmp popf in test jg aaa mov out fstps ljmp inc jmp jmp movsl pop lcall adc fisubr cli shrl out int and test sub nop stc fdivr sbbl pushf dec mov clc ds and (bad) mov add mov sbb (bad) roll cmp cld mov sbb cltd cmp sub adc xchg scas dec jmp (bad) pop xor sahf lods xchg mov sub inc sbb stc lcall sub popf repnz ljmp mov mov mov (bad) jmp pop mov lods sahf or daa repnz bound ss dec inc idivl loop es push das push test sub xchg cmpsb pushw in pop (bad) mov jnp scas push adc mov clc mov sub into push fiadd divb pop pop je adc in movsb jne lret mov push iret inc add cs jo in mov cmc mov loop lods ja fidivr and sbb lcall xor jmp (bad) and mov pop andl cwtl movsb push mov and xor mov cmp or (bad) sbb cltd pop pushf test xchg jns adcl test pop insl mov int3 pop push sbb xchg (bad) stc andl push cmp pop and call test mov inc and (bad) in in test in ret jbe dec jns (bad) xchg clc xchg inc adc add add cli and rcll fldcw pop (bad) mov inc sub jmp add add add pop sbb xor movsl or cwtl in pop aad insl or and call test out and aad clc stc ss test jns fwait jae scas imul mov test dec fwait add xor adc sub popl push fistpll jae pop cmp lods dec fdivs repz iret xchg rol inc or cmp mov pop and cwtl push in xchg xchg cmpsb loope mov jno push add inc paddd adc cli fcoms and mov and js sbb inc std fstps repnz jbe,pt iret addl fldt dec pop insl cmp pop pop adc mov adc fldt sub xchg repnz xchg jl int3 jb and or shrb in mov cmp mov mov mov and cmpsl push xchg pop cmp or mov mov fstl sbbl jb pop adc adc push fistpll pop iret loope push aad add xlat mov test fcomps xchg jecxz mov and clc es mov sub push jle jno pop lods mov popl xchg push sarb std add inc (bad) and inc mov outsb xchg stos inc inc fnstenv (bad) xlat (bad) mov mov enter cmp out test test pop pop pop pop pop inc popf ja sbb mov stos cld adc jne rorb and sahf aam lret leave ds mov mov xlat lret or movsb into out scas pmulhw test sub push push or push sbb jb inc cmp dec movsl xorl jmp or add and xlat cs push pop pop sub mov pop push lcall cwtl cmpsl push movb xchg mov popa ret (bad) jno ljmp int3 xchg repz roll punpckhdq cli inc xchg pop in fdivs dec mov loop xor outsl rcrb insl sbb cmpsb pmulhw cmp add mov lret mov pop fs or mov push ja xchg fidivl jecxz xor add out rclb (bad) add add call les jmp jecxz repz xchg add add xor dec pop fdivl push mov hlt dec mov sti insl fwait sub push and push jbe mov ret test and out and (bad) xor cmp xor idivl xchg xchg push adc push fistpll inc sbb cli data16 adc fstpt shr xchg pop mov repnz sub popf jge jmp sub jp imul cmp out idivl mov push scas inc inc ds test cmpl dec mov test push movsb pop push or and inc movsl out inc inc es jb xor lods sahf jge mov lahf fmuls pop pop push pop mov xchg (bad) (bad) jne sahf popf mov jmp (bad) (bad) cld lds xchg (bad) and gs sub ljmp jl fdivrs and ljmp mov sub cmpsb shrl push inc lret in stos dec mov lds lods test and mov daa std mov mov fild in les ss imul pop xchg push cmp mov dec push dec sub add xchg and loope sti mov pop mov loop ja,pt xchg mov or inc mov inc mov dec test and cmc jae xor fistpl mov imul adc adc add (bad) cmp pop mov sbb xlat lea mov arpl mov ljmp mov lcall lcall dec sub fstps inc xor dec xor sub push push addr16 lds xlat adc mov mov mov fisttpll (bad) frstor adc pop jge hlt ret test xor xchg fldl out out outsb or push iret xchg scas cmp ds mov mov rcrb xor jl lea dec mov xchg cmp jae shlb (bad) mov adc sub add sbbl cli repnz imull pop sub sbb iret leave adc pop dec mov and inc test cwtl (bad) jle inc sbb imul sub mov imul add insb xchg push lret pop ret loopne sub cs testb ret lock in and adc out xchg ret js mov adc int3 pusha sbb mov mov sbbl adc mov into negl xchg jg aad jne out ljmp mov outsl xchg dec sub xchg and cwtl cwtl shrb dec fildl aaa mov fwait dec dec icebp and cmp xor repz add rcl jae adc cmp in pusha cmp js clc or int3 ss lea or cmpsb cmp into (bad) fisubr test insb in jb int3 xchg jns les repz inc repz or movsb sbb lods das cmc adc fcoml mov enter repz jbe mov iret or add rorb arpl (bad) push in push or sub mov ja int mov cmp popa inc fcoms add dec es xchg xchg lret jb js adc imul fwait stos stos out insl fldenv and ljmp pop and fimul dec test lds std std fcomps xor inc popf add cmp xor push sbb repz out cmpsb jp jae push ds and repz ss mov cli pop (bad) hlt data16 and (bad) push mov add pop (bad) jb or mov negl mov idivl scas pop out insb mov push xor mov mov dec lock pop adc jl mov inc (bad) fs jp inc xchg rclb and and dec and cmp int test outsl test out push movsl movsl mov dec and pop sbb jmp mov clc test cmc icebp (bad) jg insl aad (bad) mov popa (bad) cmp xchg dec mov xor jle les cmp add add jae fs or sbb sbb pop iret test adc add xchg pop jle mov gs lret lock fisttp mov jp push imulb jg dec jne aad imul or popf sub outsl iret xchg or scas jno pop fistpl xchg pusha or jo pop lret adc pop dec lret outsl adc test add sbb mov sbb mov pop or sahf dec mov fdivr mov aam (bad) (bad) jb (bad) jmp jl into into out inc push inc sti cmpsb or push xchg push xor jnp jb stc inc inc inc sahf insl aaa stos stos and sbb lcall iret inc jg and ljmp arpl push pop mov and jnp (bad) sbb jbe gs xchg mov out lods sub xchg adc inc mov xchg push imul add insl clc (bad) sbb sbb sbb add cmp and adc adc mov xor dec mov add lcall mov xchg popf pop xchg fdivrl jns mov xor mov jmp frstor mov xchg pop fdivrp jge xor push insl nop aad jmp iret add test xor scas in cs mov lds mov push add xchg pop iret outsb (bad) std pop inc (bad) mov clc mov cli or xchg and pop jl data16 fldcw jo lds pushaw sub adc pop into push mov mov ljmp out pop pop arpl aam cmp sbb sub pop pop cmp imul lods insl mov cmpsl sub scas (bad) add rcll jl mov pusha in jle cmp jl repnz mov leave jns cmp mov inc mov scas sbb repz push es popf jmp xchg jge in fldt adc or cld ficom push pusha into lock cs jbe imul cli (bad) jns add pop inc push lock pop bound (bad) bound mov mov add add cld arpl lahf adc add or pushf pop xlat xor sub out out xchg xchg repz aam aam cs stos mov ljmp xor inc movsb pop stos jnp mov stos (bad) movsl movsb (bad) scas sbb in mov cmp mov dec dec or fcoms into add xor repz inc inc fnop mov es adcb mov aad cmp lock cmpsb div or lds dec aad push lret add fnsetpm(287 (bad) xor dec jae cltd cltd cltd dec test insl jae js mov lea cmpsl mov xchg xchg popf bound sbb in ret mov jmp pop inc add adcl sub jl xor out fs adc out push dec sub adc mov sti add adc push xor stos je in xor hlt or jge push out aad add fcoms jne mov lods push fs daa mov fdivr dec mov icebp inc add cmp mov pop xchg pop jno test insl insl push mov leave sub pop jl mov sbb mov ss inc movsl aam data16 into (bad) cmp push (bad) mov mov add scas sarl jg mov std xchg out sub js dec xchg xchg fisubrl subl in pop mov aad adc dec ss xor mov sahf mov jbe nop call jbe and mov sti jmp adcb movsl movsb mov xchg cmp push adc mov xchg xchg aam xchg xchg fbstp mov cli out jo mov addr16 or into test adc fwait jbe mov lods pop cmp mov shrb mov sub push push cli inc lret lods pop test jae jb sbb mov insb ds mov xchg adc out out push adc or add std and push mov mov mov fldenv pushf popf movsb ret aaa push add push cmp jmp sar ljmp ss sub jno cmp test mov adc repnz jmp call (bad) cmp (bad) push sub inc ja test inc inc jmp adc xor aas punpcklwd push pop add dec and mov lds mov out jmp pop xchg xchg stos int3 sub dec dec mov ret leave data16 inc repz mov mov pushf jnp (bad) setg push imul inc inc mov lret cmp mov rcll cs inc inc iret or fistpl dec or adcl outsl in xor insl loope (bad) into lea jmp int3 lods mov repz pop and lret jae rcrl inc adc adc inc mov aam bswap push inc or and fistpl pcmpgtw xchg cmc cmc sub cmp js mov jp jle xchg push jmp fistpl call and inc mov xchg mov sbb fisubl inc mov loope cld xor pop xor inc clc js inc jae loope lock outsb add lahf pop xlat nop cmp add or leave mov xlat jmp iret mov fcomp add (bad) mov adc (bad) in into mov xlat shrb pop jb test pop nop pushl cwtl shll lock inc out pop addl loope or imul leave (bad) dec test jnp pop mov cmp sub in adc push mov fnop sarb lock das mov pushl ja in xorl js cmp push jle ret push lods lods mov jnp repz aaa inc inc mov lea arpl xor icebp push push mov fs dec into sar ljmp mov cmp jmp push cltd push ret sti stc lcall add aad cmp lcall test pop cmpsb xor cld pop int3 mov popa in mov jg lahf push xor mov dec jb lret fcom stos cld jbe test push dec das mov div add insl stos fimul jp adc mulb insl insl push ret flds daa test and cmc jb adc xor scas mov mov std and ret mov xor (bad) into mov cltd popf test sub jp pop jge jmp mov push sub cs cltd ljmp mov pcmpeqw sbb rorb stc mov jno popf pop inc adc scas imul jns fidiv clc mov lds por mulb mov je rcrl fs enter pop (bad) sbb mov std movb add add cmp or and mov jmp sbb xor sbb pushf xor leave sbb pop addl mov mov (bad) xchg xchg adc push mov pop jl repnz aaa dec dec cmp into cmp mov dec movsl mov ficomp pop mov cli mov sbb aas (bad) mov xor sub adc fiaddl adc or push sbb adc cmc mov (bad) stc mov adc ljmp pusha cmp add add das repz pop pop dec or adc inc xor imul fstl insb addr16 es jl lods adc mov jg add jge test divl cmp or sbb xchg cld (bad) and popa lahf out sti or aam test jge shrl insl lret iret or mov lret gs fs lods inc sti gs sbb imul jbe mov jae pop mov in ss mov add mov mov or pop shrl aaa sub xor clc fcoms mov xor pop pop fstpl sub jle pop clc lret lea push mov mov mov pop (bad) andl mov daa pop push call shll lds repz or scas mov or scas xor dec out loop jl roll mov cmp int add les cmp sahf sub aas mov mov fst jl rol push adc es loopne xlat inc popf sub scas rcl mov xchg ret or test lods repz cld movsb test loop in mov leave repz xchg shrb mov xchg dec xchg xchg cmp mov clc (bad) (bad) ss mov lds inc xor pushf mov scas outsl pop xchg mov insb and ret jle mov mov das lret jp daa pusha mov stos mov sbb test and cmc or mov sbb jnp lock out sbb mov or das das pop mov mov sub push repnz call or fisubrl push out inc movsl movsl mov pop rcrl pusha sub dec push mov lahf cld and mov ret pop dec push sahf aam mov repnz in std mov jb mov (bad) imul cmpsl xor iret or xchg repnz and sbb sbb dec dec sbb and cmpsb adc decb inc sbb shl (bad) test sbb fsubp arpl clc mov inc push lahf movsl in ds inc jbe mov push add imul fistl popf or pop pop adc inc sbb daa stc loopne or rorl pushf adc mov mov pop add lds loope adc mov mov sbb mov and outsl into iret inc xchg fldl shll sub jo adc flds mov test (bad) mov push jae push (bad) mov sti and divl ret push adc mov mov xor scas call jle rolb or mov jecxz xchg xchg sti lahf adc lds and pop daa lods es jle push sub arpl lret (bad) addr16 push insb out insb sub xlat ljmp movsl (bad) ljmp dec xchg xor dec add (bad) rol aam pop mov mov pop fnop cs repnz aaa jl jns pusha mov jg xchg fucomp xchg ficoml mov cmp add es xor add lcall xchg test rclb dec pop ds (bad) jg adc not aad js mov outsl mov adc daa pop add aas xchg (bad) lds and popa inc scas xchg (bad) fs mov in aad outsb out fldcw imul pop fs cmp mov lods mov sub (bad) stc dec sbb jmp xchg ret xor sub stos int3 flds mov or mov aad jb cmp xchg sub jl xor push scas dec jno and in xor ds loop stos outsl addr16 dec sahf repnz rorb cltd fnsave into aaa jl je pop sahf add adc push lods sub jle jb xor jp js xchg jo push fisttpll enter add dec lods arpl xor pop insl and inc test add ret (bad) aaa ficomp mov pop es jp scas pop adc call inc dec aaa fs lock movsl sbb mov mov cwtl lret mov imul (bad) fdivrs inc in inc (bad) jecxz mov mov jecxz mov xor inc and or icebp push xor push push in jae cmp hlt ds fisubr or xor icebp aad outsl sub scas movsb jge add fildll push sbbl cmp add jns movsl imul shlb call jo sbb jg push sbb sbb addr16 mov into xchg in sbb pop arpl xchg movsb sbb loope addr16 ret add js or cmp xor sbb dec or mov repz in adc pushf pop add jns jge adc popf sbb je imul mov out jb lcall lea (bad) aam sub out jl test push (bad) jbe lock data16 dec mov xor test stc rcrb adc mov jg rcl lock sbb outsb stos add lea adc ds xor adc add add js dec dec mov fdivrl xor mov in xchg sahf sbb cwtl rcl jnp lock mov mov lahf push (bad) jno mov push fsubr movsl adc pop mov cmp repz lods icebp mov xchg mov movsb sbb pop push or jmp adc scas fs jns (bad) jge jmp inc aad call push loop push push movsl sub jmp xchg nop pop push ja bound push loopne add xchg xchg and loop pop dec mov ljmp push xchg outsl fnop ret pop pop mov jge in sub push push fwait or jbe and dec aad insl mov std jl stos test scas push nop pop (bad) icebp repz xchg icebp cmc sbb in (bad) (bad) loopne call xor mov adc xor add int dec dec (bad) mov sahf sahf add pop (bad) jb paddb fistpl cmp mov sbb (bad) (bad) xor cmpsl inc jb adc das sub jle pop mov and jnp or shr je cmp jb lock stos mov push add jb lock jb push mov inc into (bad) and fldenv xor inc dec popf pop pop push mov mov scas sbb jmp lahf lods and add jb inc sbb js dec test in jp (bad) jbe or loopne out and inc cltd mov and xchg adc arpl js pop mov and je cmp pop std sub jge push mov dec push mov pop imul cmp imul nop jne pop sub mov jae andl ljmp lods ficoml xchg sbb les popf aad shlb xchg (bad) xor mov jmp mov jns fstl aad outsl outsl pop push xor mov jp or mov (bad) les nop mov in sbb mov loope mov push sti (bad) mov and add fwait fwait in mov jbe popf add movl add xchg jecxz dec arpl add mov xchg shr ss dec dec dec pop cltd rorb out stos data16 scas jns movsl mov jmp jg in and sub mov xchg push mov jbe in nop dec sbb fistp je addr16 daa and mov push in and inc dec ret call mov push mov setno fnop repnz inc jge and imulb jo adc loope sub jge mov fadds dec shrb dec xchg clc mov adc arpl inc add jb call or pop inc (bad) outsl or mov mov inc ss inc gs dec rcll pop cli sti ds dec jns aad bound mov mov dec aas push insb insb cld inc xor fisubr mov sub adc xor mov pop pop or cmpsl pop and or pushf aaa mov aad (bad) in insl cmp decb incl and lods popa xor xlat jae sbb jp adc xchg cmp notb cmc insl xchg or push mov add or mov bound aam imul pop push xchg pop xchg repnz mov jecxz imulb ret adc inc loope or jmp jnp das outsl daa lcall cs jns aam aaa addr16 inc jo jb cld cmp pop inc sbb (bad) mov nop lods arpl lret into mov mov in popf jl ljmp mov icebp mov pop inc or jne mov mov test fdivp sub mov dec sbb sbb jns mov jmp movsb call (bad) (bad) dec xchg xchg cli das lods lods scas jnp xor xchg push sbbl imul add (bad) aas imul jb pop mov gs fisttp dec push dec outsl test sub jge add (bad) lahf mov jecxz xchg rolb xor inc pop sarb fbstp sbb sti sub xchg mov sbb push mov test stc je pop xchg pop jns lods sbb jge add push adc xlat add mov jl xlat test (bad) (bad) enter call adc and mov xchg adc dec sbb (bad) repnz xchg int3 jae and (bad) je insl pop jae jnp sbb fs sbb arpl lcall test test nop ficompl inc push or clc testl mov aad mov ss jp push cmc cmc test xlat cmp into outsb insl jb sbb or insl out fucomp jbe cmp adc repz mov adc sub lea in lret adc mov inc mov push jo jle ja js sahf mov sub jo sbb mov add in push rcrb imulb aaa aaa inc mov subb fldenv push mov sti sub cmpsl loopne or push cwtl (bad) fidiv out fwait cmc mov add or gs or scas out pop pop xor rcrl cmp jmp out sbb or (bad) cld inc das push fstp test adc lcall imul xor in pop loop test pop pop dec dec push or add repz es std and fwait (bad) fstps stc movsl aam ljmp mov push stc icebp dec xchg or out push ficompl sbb int3 dec or popa pop mov or movsb jl sbb push mov mov dec mov sbb jnp es aaa test jle in jmp out stos push mull js and (bad) adc pop mov jg test xchg xor dec popl cmc push push jg pop out mov inc test adc or xor mov clc roll in js lahf fisubrl dec adc cmpsw mov and ret popf cmp out leave sbb push fwait stos jmp stos test lret test sbb pop ret ret leave imul xor push and incl cmp stc ret cmp pop adc repnz inc sbb sbb clc mov push push lds and pop sbb and inc sub push loope mov cli mov aam imul jge orl data16 jecxz fwait test inc sub mov and mov or (bad) repz pop pop outsl or in (bad) stc cld data16 and repz (bad) push popw stos les sbb adc ret push pushf loope aas add test popf cmc adc orb inc negb aam fdivl pusha out jnp pop adc hlt int dec es mov stos adc dec sub mov (bad) jns int3 jns mov add push lds (bad) dec hlt test popf push adc lds add add adc jno xor add sbb (bad) test lods out mov ret push (bad) clc and sbb jp jecxz cmp pop or cmp insb insb xor into out xchg idivl dec or addr16 andl dec lret mov dec addr16 sahf mov (bad) jns fcompl fisttpl mov stos xor xchg sub adc loope js xor in xor push mov lock jbe popa int3 xor cld shrb mov and pop sub xor mov ds lahf xchg ljmp movsl or dec fsts aas out out rcrb xchg mov sub movsl jg pop adc (bad) daa jbe in pop rclb rcl cwtl shld and inc mov call stos les jb outsb (bad) fistl push push pop sbb xor cli add jns jp jno stos leave cmpl fwait (bad) mov cmp in dec add push mov outsb in adc sbb and sub jbe (bad) mov xor add cmp cld jg (bad) mov or cmp lods lahf negl push jnp movsb or inc (bad) roll movsb ret jp mov stos outsb fisub rcl push into repz jno xor inc xor stc xor jl and sbb xor sub dec dec cmp jmp (bad) xchg test fist adc xor pusha cltd inc in arpl xchg dec loopne inc inc add mov dec iret loope (bad) mov dec jmp sbb cmp push int dec inc cwtl cwtl loopne sbb inc add jmp aaa daa xor les pop dec pop ja inc fist inc stc icebp stc push dec xchg sbb test sub cli orl fwait push jecxz mov mov fstpl aaa jg imul pop jecxz ss out hlt add aas jp sbb movsl fsts dec dec scas jle adc icebp insl test sub lret into bound repz push or popa ficom arpl sub mov dec dec ljmp jnp cmp loope cld push jb xor stos jge xor adc and xlat stos lret inc daa mov push lret sub (bad) mov popa mov mov or sub js das addr16 sub loop add xlat mov cmp lret aas push sub ljmp mov daa sti lahf jp sub jb xchg les xor out push sbb stos fs xor nop das fs sahf mov test cltd in imul pop imul loopne pop ficom pop adc cmp cmpsb (bad) push sti dec dec xor (bad) out sarb fadds dec (bad) xchg push (bad) mov cld cld aaa aaa adc xchg daa push push mov orb mov repnz cwtl inc ds or xchg insb pusha test push movsb movsl mov cmp sarb ljmp stos cld insb insb cmc hlt pop out jp call push mov pushf (bad) mov xor push cmpsb mov cwtl jb or mov pop sbb inc push adc repz cld cmp xor mov cmp lcall or mov mov inc loopne inc fild mov push data16 mov mov inc xchg pop push add push mov xchg das das (bad) mov div lock mov pop in cmp jo imul xchg lods sub mov jnp cltd sbb scas int3 inc jae jb clc lods jmp cwtl add mov add inc dec sub pop fsubr inc test xchg std int inc mov jnp test xchg pop push push test lds dec lcall sbb jle lods clc clc sbb pop cs aad mov repz insb cmp inc mov pop lock (bad) repnz jb dec jg xchg xchg pop mov fidivr dec popl orl mov and outsl dec movsl pushl ficom xor dec xor lods sbb adc fcoms sbbl pop sub jne or loopne imul lret dec adc cli mov stc add ja data16 rcrl or add aaa jle or sbbl rorb jle (bad) jmp fidivrl pop dec pop cmp shr pusha jg test ss lea mov mov lods dec xor hlt jno inc jns jl hlt outsl and std mov dec adc add fwait push push in (bad) mov lds in addb dec loopne (bad) and shlb pushf xor sub shl mov mov add sub sti and ss mov pop adcl add jne sub push jecxz out out mov (bad) dec leave dec add aaa stc and stos adc xchg or cmp pop or fsubrs popf subl sub imul jo aam out imul (bad) mov xor pusha arpl dec cmp call push sub aaa aaa inc jl sti out xchg add mov sub inc add andb (bad) cmp repnz test xchg test or mov rol dec xlat cpuid add jge dec cmp push leave cmp inc aad mov inc xchg insb lcall adc adc test int daa jbe jecxz pop fcoms test addr16 mov pop sbb aam pop outsl icebp pop aad mov out cli xor scas call xor mov (bad) jl adc xchg out out js les leave inc or mov pop aaa ss xor jne in into popa pushf lds mov add inc repnz loopne pop xchg ja jns cmp pop popa outsb aam jg add jae imul adc and adc pusha sbb xor jbe les cmp les jo or xlat sub cmp sbb cs outsb bnd cli lods xor mov cmp je mov and loopne mov nop insb into ljmp stos add jle test add sub leave mov or arpl mov mov push pop fstp dec mov sarb int3 lcall jg int je xchg mov out lds fldlg2 int pop xchg and out arpl fisttp (bad) jae mov mov in je fisubr (bad) mov pop adcl mov jno les pop pop adc movsl jnp push push or repz repz aad pop inc push inc or inc aam negl fcompl pop icebp fisub fsubs fwait xor xchg jmp sbb pop jb andl pop je cmpsb rolb dec imul in outsl or inc ret add mov jge dec xchg jne and xchg hlt jne add fwait sti xchg push or inc cs dec lds xchg scas ljmp xrelease pop loopne arpl dec sbb aaa pop and push fsubrs mov das lea jg mov ficom xchg xor pop rcl mov dec in repnz sbb xor jle in test jl mov fild sbb cmp (bad) leave push mov or mov xchg sbb push test mov jae jl gs sub jo popf imul push pushf roll sahf fs mov jnp repz push insl cmp out dec (bad) fisub dec cld jmp xchg sbb aas push movsl loop jb test inc inc subb xor pop fist mov push jecxz bound mov test dec xchg push push mov outsl or cmpsl lret and les xor ret pop pop aam cmpsl imul or pop xchg add mov sub in out sub pop (bad) push pop lcall mov or sbb xor andl aaa pop xor inc add icebp mov inc pushf lret add mov (bad) cmpsb dec icebp mov popf cld sti dec lock (bad) push sti xor sub jno jmp inc rorb cs fwait mov (bad) mov mov mov mov or int test add or add mov movsl loopne,pt fwait aam in xadd dec rcrl inc pop cs xchg int3 inc inc push outsb aad adc imul mov inc aas out fidivr rcll ret and xor cmp sub outsl inc inc sub add (bad) dec clc pusha pusha int3 xchg xchg popf lret lods fwait fwait and mov push (bad) cmp lret jno rcl mov jnp push (bad) mov jnp push test loope in pop cmp xchg xchg push and lahf or idivl jmp adc leave std ret sbb imul (bad) ret xchg jnp adc mov js dec sub xchg fiadd sub adc jo inc lret jae insl insl sahf pusha dec push sbb es out dec cmp frstor lods lea sbb jns movsb std arpl fwait sbb cmp sbb pop add fs add pusha pusha ja stos in or add lea sti outsb outsb movl mov idiv outsb aad xlat popa lods lret sub gs pop es ret pop pop pop xchg aam cmpsl adc ljmp iret jo in cs insb push sbb imul cmp mov icebp (bad) jp pop and mov pop pop test xchg mov loop xor je pop test or pop into in fst push cltd mov pop jecxz out pop arpl adc data16 xchg jp fdecstp jle popa adc (bad) es or lds mov cli push pop and aas adc sbb ds js add aas mov xchg movsb setns sahf scas inc push ss popf dec or jno popl (bad) cmp sti mov arpl rorl xchg pop push fwait mov addb pop pop bound pop fcoml (bad) jmp push push gs loopne and xchg adc sbb imul inc pop in in (bad) jnp int test dec dec mov mov out insl sti sti (bad) xor dec scas es popaw xchg jl sbb ss sbb jle insb sub fs stc or int fwait repnz leave leave int jno imul mov push cwtl (bad) es jbe psubsb or fmuls jnp xchg daa mov call jge imul jnp cld add mov jl push mov push push lods pop pop lahf movq lock sbb aaa aaa inc push jbe stc xor pop js adc (bad) mov xor ss fcomip repnz mov sbb or xlat sahf sahf jnp sbb pop addr16 loopne or out ret in xchg xchg mov insb push and (bad) ja xorb dec dec and shrl in mov adc movsb stos jnp pswapd loope or inc scas test mov mov or cmp pop xchg jg into cs xor dec (bad) repnz mov mov jp lock adc sub adc mov sub mov movsl or mov mov xchg sbb dec icebp pusha js in jge scas or movsl and adc arpl test dec roll lret xlat and js (bad) (bad) mov and addr16 test iret inc adc dec dec inc inc faddl push ret jnp jno mov jae jecxz mov mov les mov lea divl (bad) xor add movsl and ljmp dec int3 sub pop pop aam pushf rcl cwtl loop pop sub clc std mov xor test xor out and roll sbb xor push out or loope or xlat xchg inc int3 ss dec add cltd mov inc fsubs mov lret cmpsb daa push push push pop insl push test or mov add in jmp xchg out lahf mov and push push lods lods mov (bad) or clc sbb sub (bad) lock push add xlat pop lods fdivr jbe sub and scas adc paddw lcall fs andl push sbb pop rcl cmp dec mov push mull cmp pusha out add pushf sbb icebp jmp and push (bad) gs popf fwait ljmp lcall test mov sti cmpsb dec insl mov mov sbb mov jbe push push and (bad) fildl sbb icebp (bad) pop ja test ror sub inc subb lods fwait (bad) xlat mov and int3 int3 leave (bad) leave inc add push xlat sbb dec cmp sahf sahf mov pop roll xchg in bound das jnp inc bnd jl aad pusha outsb jge (bad) (bad) cltd cltd xor call (bad) lods shrb sbb mov inc cmc push or add jmp aam int mov fstpt sub mov enter inc inc enter int3 mov icebp popa test aas pop pop dec mov pop push pop cwtl dec xor push ja and xchg xchg in xchg adc shrb orl mov xor pop or fsubr inc mov into and lock add lcall mov lods (bad) in pop arpl push cmp aas jl lods mov mov mov arpl icebp stc or adc mov push pop pop into mov (bad) adc pop fisttpl mov icebp in sti pushl mov nop pop jno pop loope pushf xor xchg cmp test (bad) (bad) sbb jle,pt shll mov add adc cltd pusha jmp pop xchg xchg stos shr inc mov fistp lea (bad) imul (bad) (bad) leave and enter xchg and adc jbe sub mov iret and cld jnp pop mov jle je add (bad) aas xchg fsubrl es xor or scas mov sub (bad) xor repz lcall mov jno adc jne mov push (bad) inc xchg xchg das daa cwtl aas push push mov push push push and (bad) rcll add push sbb jae jns jp inc sbb jle sub push mov dec idiv pop int out mov mov cli insb push adc leave adc dec sahf sahf mov fnstsw dec dec jns push pop xchg sbb jnp cmp xor jle jge popa sub insl sub decl push ret jle cmp aad pop jo inc out add aaa inc insb jl sub movsb fimull mov test mov sbb call push inc adc outsl mov xchg add adc jg popf ret les into pop pop clc aas pushf out sub (bad) aad pop cmp adcl lods data16 sbb leave push scas shll adc test (bad) std fbld outsl xlat mov sbb mov ss or scas (bad) push rorl jp sub clc es movsb stc push pushf arpl addl xor fwait lods adc ss fistp mov xor sub (bad) int mov mov bound xchg (bad) testl push das movsl push adc mov inc inc orl inc push (bad) (bad) jnp jge adc (bad) cmc inc mov cmp aas adc sub and addb outsb leave xor pop xor xchg inc dec dec inc pop xchg jl sahf bswap mov cmp idivl xor cmp inc jge or lret or push xchg push adc and mov mov mov mov pop gs incb jl jne (bad) divb fsts (bad) jg popa int3 int3 xor xchg in or popa in int or cmp mov inc insb int3 or jg test cmp (bad) xchg aad jl dec imul jbe or sbb aad dec jno inc lret push or sbb sti aas aas pop je adc adc xor (bad) jae lahf out repz mov in in jbe pop lret call (bad) cmp fs (bad) push mov (bad) xor bound xchg sbb mov inc je pop sbb xchg inc aam push ja movsl fwait dec xchg add jae xor pop iret lea out mov in add aam fstpt outsl inc sub dec inc insb or shrl pop sti push call push lods rcrb fwait cmp mov data16 mov lds test mov pop aas repz inc hlt gs pop xchg mov push and push clc and xchg xchg out jp push sbb jle xchg jl js fs mov cmp inc mov or cmp into cmp lahf loopne add or sti add inc lock addl (bad) (bad) mov jb xchg sub jp bound or push fcomp (bad) jmp mov jg sarb pop add enter add sarb lahf dec push push pop sub push shl lret xchg lock cmp dec dec xor addl in or mov add popf ret jmp push dec test subl push and sub (bad) pop push xchg (bad) call enter push in pop popf or mov add adc sbb aas push repz std adc push and fadds lcall jbe in out lds add and cmp addr16 cld gs jno mov decl daa repz inc add or pop das test mov stc (bad) dec outsb sbb adc push js or out mov mov sbb push jmp enter (bad) stc stc cmp xor jmp mov jnp fisub sbb divl rcrl sbb movsl mov (bad) pop sahf sub fisubl jmp mov imul test jo (bad) jo mov mov ss xor fstp negb stos mov das (bad) imulb xchg mov or jns push stos loopne jmp lds adc pop xor leave add push stos add loope test dec dec mov inc imul jmp push movsl sbb (bad) mov mov jae (bad) push outsb adc adc mov and xchg sbb in jl and pop mov in movsl mov add and push cmp pop xor add adc leave xor inc and pop pop mov jmp hlt sahf push sbb addr16 and mov clc inc adc add add pop pop mov mov jge cmp adc xlat sub add mov push popf jae mov aaa pop test or and pop sbb call mov sub or cmp dec cmpsb (bad) push mov xor imul insl xchg mov out out pop das fs mov divb and mov mov gs pop int3 gs push mov psubq jp,pn jns cmp pop pusha fldenv sbb cmp pusha sarl mov lods lods rclb jp repz inc in jle and adc test mov movsb addr16 scas pop xchg fsubrl ss repz inc lods mov jp ds movsl ret (bad) popa popa mov xchg mov subl sbb xchg add cmp dec testb xchg sbb inc pop mov out rcll iret outsb mov mov sub mov repnz push lds jns outsb sub xor stc inc insl mov cli ret (bad) mov insb (bad) jae sbb add in addl fs cwtl int inc mov add sbb adc fninit dec or sahf pop adcb mov push and jo adc fldcw push xor orb imul sub repz lret enter xchg mov movsb dec pop test aad jbe xlat (bad) sbb push arpl sbb mov jecxz fadds leave adc lods cs cmp mov call movups jae lret lds or outsb gs xchg jo,pt fwait repz fstp negb stos mov repnz jmp sarb or push jl test mov mov mov sbb xor or mov and mov or testb sub arpl mov xor popa and mov sbb and mov mov cmp addr16 pop inc push (bad) cltd imull mov or lret cs fcompl cmp std xor sub dec cs xchg jge lods xor and pop push clc leave add loopne jo mov test rol xchg gs cwtl push daa sbb mov fsubrs or mov cmpsl xor cli jne push out cwtl adc insl mov repz sub or pop cmp popa std stc cmp jmp pop aam jns out das and fdivl xchg mov inc lods lods out loopne mov ljmp xlat aam jecxz mov movsb or or insb in (bad) cld lret ss cmp mov dec mov rcrb xchg ficom in int3 into popa rep scas dec cmp xchg push xchg fsubrs sub sub xlat or (bad) mulb sti inc add das sub imul popa rclb pop xchg cmpl inc lods adc add jb mov jl or fcmovnu imul jnp jbe out dec ss dec ds add xchg pop push insl push test cmp ficomp aam cltd and stc clc insb int3 hlt and ret adc mov xchg sub call push pop mov in adc jle incb pop pop dec mov mov xchg pop pop pop test out cmp sub mov scas imul hlt add push popa jb xchg cmpsb jl sbb in or sub bound and cli insl sub cli mov dec (bad) dec fsubrs pop inc pop mov movnti jmp je idivb cmp jp sbb (bad) dec mov inc lods jne jl xor jno add stc popa (bad) pop pop test rcrb jbe (bad) mov or (bad) call cmp add cmpsl out jg mov ss lods imul fildl xor dec dec jl sub bndstx cwtl cs fnstsw pop cmp sar call mov sbb sub sti push sbb mov jno push xor add and ds xchg popf out mov iret icebp add push push fistl add cmpsb insb outsl inc lahf mov add add lret mov daa ja jge shll pop outsl push or test xor loope iret cmp flds pop pop test sub aam in cmp (bad) jae mov xchg rcrl xlat inc pop shlb es dec cmp je jns cltd pop (bad) stc pop add (bad) rorl adc movsl or fdivs or arpl sarb add pop or clc test sbb xor mov ficom and data16 pop inc add es jno add imul mov (bad) push cld adc pushl xor pop or pop sti pop bound ja mov movzwl popf ja je dec pushf xor daa in aaa xor push jbe pop dec jns dec adc in mov pusha rol inc (bad) pusha jo (bad) jnp push push es rcl stos or cmc cmp adc or adc inc jae subl cmp xchg adc stc xor jo in adc fcomi dec in xchg rclb sub sub imul jecxz js sbb jmp out add data16 cmc fwait sub inc push clc es jmp clc xchg xlat mov pusha popa das ja vmovupd rcl aam out push pushf and mov push push mov pushf cmc mov sarl mov jle (bad) subl inc and imul gs ljmp xchg push pop arpl dec sbb out push push fs jge fdiv and (bad) dec mov and push mov xlat xchg xorl mov sbb xchg xchg sbb imul add mov jns xlat lods cltd adc hlt adcl es mov or popf pop (bad) xor aas dec jl idivb cld ljmp loope (bad) push (bad) push inc es xchg pop out pop jo mov add jnp jg in in add dec pop adc cmp mov aas dec jno ret mov sub dec ss or xchg push fcmovnbe dec and cs mov pop pop mov popf ret outsb adc sbb stos xor fisubl xor lret es out outsb sarl or fidivl (bad) in (bad) mov (bad) int3 add pop or inc inc cwtl cwtl mov add rol or into les sub adc pop lea dec clc mov ret push sub data16 or jecxz scas (bad) test jge or in xchg cmp cmp les pop dec ret ret sbb inc subl movsb movsl push xchg pop inc movsl sbb xor sub mov je add or in xchg add call rol ljmp mov adc sub ja and call unpckhps icebp imul jmp mov (bad) jg sub pop and popa ljmp aad dec ret pop pop out inc mov test and add xchg mov dec cmp insl add mov ds lods inc sub inc xorb cmp xchg icebp icebp ficomp imul mov fwait ss sub and incl outsl fimull jno fidivrl out lret cmpsb mov xor shrl jmp jnp (bad) xor xor cmp mov stos cs jp lock stc js dec jbe mov stc stos push push (bad) icebp stos mov sub inc dec cltd mov repnz fbstp inc sub test repz (bad) xor arpl inc popf mov adc dec aad push push jnp push push adc add sbb outsl pop mov daa inc jmp or shrl cmp stos lds pop pop sbb push xor dec test mov lods and cmpsl push mov movsb stc or fistp arpl (bad) push sbb adc insb out jl repnz push inc fistpl add mov (bad) ds lods rolb add sahf mov pop mov xchg das push mov sub sub add adc lods jnp sti xor cli xchg or pop test inc adc adc insl add aam sbb adc and or aaa dec jno (bad) incb ss dec add sub addb outsb pop rcrl sahf mov cmpsl ficoml bound jae mov pop rolb xchg stos stos adc or mov ret movsb cwtl inc dec xor dec (bad) out (bad) mov jp stos loope sbb cmp test mov add int adc add imul xor arpl cmpsl pusha mov inc push lea xchg rclb sub (bad) testb and in pop add cli lods rcrl loopne cmpsb cmp aas sbb inc adc adc popl pop add or mov daa int daa insl cmc push int nop jmp cs cmpsb sub aad addl js xchg add rcrl enter aas mov sbb sbb (bad) or add js repz js movl hlt jp jne adc sbb divl mov dec adc or mov lcall ret (bad) sbb pop popa cmp data16 ja ljmp mov popf add jl loopne daa data16 push fnstcw sbbb ret sbb mov xlat imul pop idivl jp arpl lahf movsl pop (bad) cli stos fbstp jb xor (bad) xchg add adc jbe push push mov xchg rcrb lock repnz sub mov jmp das jbe push das sub cltd mov push push shll (bad) jnp scas (bad) xor jbe and add push jns jecxz mov scas aad or leave pop xor ljmp xor jge roll pop or add dec and (bad) xor mov mov insb int stos out out and call sub push daa jcxz ret dec and lods push and add xor mov les lods out cmp cmp test ficoml repnz (bad) test (bad) je xchg xchg movsb jp xchg mov sbb cmp sbb int xchg xchg xor leave into repnz imul cmp lret pop push sub add pop pop popf adc fdivr (bad) fnstsw cmp (bad) sbb mov jmp adc das xor bnd lock out adc add ja js fwait jl aaa aaa inc int3 mov (bad) lea and arpl ljmp inc aaa ja out test mov xor addl sbb pop int3 (bad) xchg xchg pop imul sub xchg mov xchg icebp imull and pushf sbb cmpsb (bad) mov pop lcall jne not aad add stc cmp lock jmp je fs push negb stos mov mov sbb cmp dec add (bad) mov repz or test xchg cwtl push nop sbb cmpsb pop shr test mov data16 icebp jecxz out movb outsb mov rcrl aam mov test pop rcrl lea or adcl fdivrl in dec sbb out sbb nop mov fcomps push push pop aad sub loop xchg dec rclb enter inc push sbb xor out xor push mov cld lods adc out nop cli pop jne add out je insl out pusha and jg sub ljmp fsubs sub cmp jae cmpsb sub dec mov stos insb insl mov shl outsl ja push jp loop and sub pop xchg mov mov les sub insb fs (bad) mov out mov dec insl dec inc push data16 inc lods stos jecxz xor xor xchg adc int3 adc movsb test or mov jo lahf das jle pusha jmp or repnz fwait jb pusha lahf jnp lock lods pop inc push inc (bad) flds cs pop inc test pushf test sbb sub dec movsl loop mov inc add push jne inc mov test pop pop shlb negb cmp in lods cmp in andl cli loope call cli ljmp int3 xor pushf cmp (bad) adc pop imul xor add jl loope ss incl shrb mov test push fcmovne jg aam cmc push mov (bad) clc xlat data16 lock dec or ss gs negl mov sbb jmp stc xor add test sub dec jns cltd sub scas adc data16 out idivb jmp mov jle scas aas or subl daa mov cs sahf (bad) bsf daa notb adc (bad) cmc dec dec jle xor stc add sbb lods jno or and cmp mov mov or pop dec fistp pop sub push jl pushf pushf pop lcall xor xchg push out push out out (bad) mov mov ret ret push jbe mov cmp jbe add or mov cmp shll jmp cld dec mov dec in cwtl addr16 or add aaa ja pop add (bad) xor mov and inc push mov push outsb sbb nop nop in xchg (bad) sbb push mov sarb mov mov mov push leave insb push repz call (bad) std ds cwtl jne lret pop pop ret inc cltd pcmpgtd push (bad) or fbld cmc cmc dec cmpsl addr16 xchg xchg sahf fstps nop nop cs push cs call ficompl lea mov jns (bad) or iret mov cwtl bound jnp lods popa loope sbb repz clc inc inc sahf pop aaa test push aas add lahf adc mov gs dec jg outsl mov ljmp xor xchg push (bad) fnstenv data16 cmp pop dec dec mov dec out stos dec lea mov insl push scas scas fisub inc repnz push clc xlat jb mov xchg stos in sarb jmp mov xor hlt mov pop dec add data16 dec roll sub int3 dec ss rcr insl cmp mov add add jl popa pusha movsl and cmpsb cmp outsb push fs pop jmp imul adc gs (bad) stc dec add je mov jnp mov mov cmp cmpsl add out ds jne psubw jo xlat adc adcb sub push lcall sub movsb ljmp mov mov ret ret mov addr16 stos lea and mov hlt dec dec mov sub shrb sub inc lahf pop xchg push mov push adc js push scas scas inc xchg add jns loop jl jg fwait adc mov mov lock jmp ror add gs (bad) sbb pop sbb jnp or lock mov rcll outsb and sbb jno xchg daa push fidivrl dec jae mov jge jg ret jbe adc aam ret and push mulb out mov sub aam pop into dec pop push push (bad) loopne mov lds inc sbb pop adc mov stos and and mov xchg jp xlat ret lods xchg or cmp mov xor jle pushw or mov dec lahf test test xor pusha insb dec dec bound ret jo jae mov int aaa xorl jl aam adc xor (bad) cmp sti sbbb test mov test adc push push fs pop lret outsl stos (bad) in sbb hlt sti sti aas aas stos cmc mov pop mov rol or stc pop sub aam and push shl dec dec std std lcall jo pop mov cmp xor lea mov lret add enter je sets in sarl out push add es je jne inc mov mov in xchg adc jl data16 loopne leave mov xchg push sub sub imul fcmovnu arpl xchg out aaa aam int3 das aaa paddusb dec or mov mov out aas mov add add ficom jle and cltd sar jg adc icebp insl pop outsb in or insl loop dec inc pop sub and leave dec cmp mov sub jp jo jb pop in xchg push ja mov cmp or pop pop sbb push xlat jns jns cli out stc fsubrp jmp mov push and idiv jno push pop adc adc cld scas cltd jg aaa aaa adc stc add movsb das push or add lods ror push add cwtl repnz sarl fcomps (bad) xchg sbb mov lds mov cmp out out cltd and sub pop xchg out and and sub ljmp pop sub cmp mov in addr16 add dec mov xchg stos xor push repz sbb ds movsb and in xor divb xchg xchg hlt icebp or in aad xor insb jl xor push xor and leave dec les xor movsl data16 dec aas roll gs incb fbld mov mov mov adc cmp movsl (bad) stos sbb sub loope sub jl jae push push cld push dec sbb sub cld ja adc std mov mov out mov xchg repnz push leave push fnop mov mov mov lahf jl mov test adc xchg int push xor cmp mov xchg pop pop xchg push out mov out and mov push les push sarl cmpsb inc mov push mov (bad) (bad) repnz lock mov push cmp add cmp inc sub mov xchg popa arpl add (bad) dec cmp packuswb xlat addb push and xchg aam lcall incl sub push mov inc mov (bad) jns push imul push mov fildll mov bound js jmp mov inc in loopne push std jbe dec cmp jp jle xchg add pop pop stc sti mov enter (bad) jne inc inc mov rclb sbb push sub xchg dec mov pop das lods adc jb mov test jns jb in add pop movsb nop cmp mov jae popa adc dec es dec sub mov cmp inc fildll inc rorl add sub or dec cmp gs shrb fld cs and push lcall rcl clc movzbl (bad) cmc addb jbe jl mov adc xor fsubrl dec add fdivl pop lods movl sahf jbe jo (bad) mov ret push dec push xor jp clc or pushf sti bound push pop lea jbe jno cli push mov mov out fildll test jae mov das pop xlat fmul (bad) (bad) and jg cmc push jnp (bad) mov je enter adc sysret (bad) jl push (bad) ja mov lds inc jp dec icebp test jnp test stos sub sub jecxz jmp (bad) (bad) mov (bad) out aaa aad jge or rcl stos fs add mov (bad) out cmp cmp and or repz xchg mov cmc addl xor xchg xor xor leave dec dec add (bad) je dec mov xchg jae in addr16 pop aam dec jns xor dec mov div jge scas iret sbb jo adc jg add xchg mov je addr16 pusha push (bad) adc mov jo mov add sub jg inc adc xchg add jecxz lret push add out test mov cmp andl in movsl aad cmpl popf popf ret out mov mov mov stos out out and in pop into into push jb mov gs ret aad dec daa stc data16 jnp xchg mov lcall inc inc adc add arpl cmpl dec popf lock inc out push dec or add add sbb fnop popa insl mov jge addl add in lret mov mov mov xlat dec mov adc push cwtl cltd pop xchg or or (bad) xchg cmp sbb or push add pop mov mov jbe out sub pop pop push stos movsb cmp mov adc (bad) arpl cmpsl loop inc lock push dec imul fistpl push sub loope mov mov movsl hlt mov addr16 jno jns jmp adc jle gs es mov insb adc lcall dec pop aam sarl xor sub jp dec dec jmp ljmp insb push outsb aad push inc xor push push jle mov adc sti jle xchg icebp fwait sbb mov xchg xchg lea push sbb xrelease add push jne dec dec xchg cmp lret ja mov cmp push adc sub jns es jge adc jge cmp (bad) push and js test push push (bad) lods iret push dec dec xchg cld jbe out lcall fidiv frstor dec das les ficompl and ljmp mov ljmp cmpsl lret popa or mov rcrl cmp cmp cmc push ret ret sbb clc out leave shrb pop lods xlat adc jo mov dec (bad) mov sub cwtl cli cmpsb cs pop push mov inc js test rolb xchg scas cmp dec sub aad cmpsl stos rcl lcall cs xchg dec lock in (bad) loop xor add dec fwait (bad) outsb or dec rorb and cli cmovnp (bad) ficompl inc cmp xchg pop aas jnp idivb div jl ljmp sbb bound mov push push lods lods lret pop lock jle in lods jo aas push adc add push movsb mov ficom in gs sub les mov xchg (bad) test fsubrl mov cmp leave negb inc fs cld mov xchg xchg stos stos adc jge rorb ret sub dec sub and cmc fildl (bad) xchg into jbe pusha mov inc mov mov movsl inc roll mov push lods and and add push dec push fildl mov aas cwtl fnstcw sbbl lret mov adc jae xor mov stos arpl sbb outsb (bad) scas jnp movsl pushf aad jno icebp mov mov (bad) xor jb push into (bad) mov xor fcoms adc mov xchg add cmp test jmp js lea mov call sub xorb mov js repz inc aam leave (bad) dec add or pop push lahf xor test repnz and outsb lcall jno fwait lret adc add test loop in mov pop and movb mov cmp stos lds push pop (bad) dec mov stc dec and gs repnz push (bad) adc aaa xchg xor jne cmp hlt and jbe adc xor leave dec dec add push pusha pusha jb dec dec vsqrtps ljmp cmp adc xor das mov mov jo push push sub push mov xor cltd dec lods push sub jno mov adc inc sbb cmpsl movsb ret jp mov dec not and cli adc sbb pop jne,pn jns (bad) mov xor pop inc mov and or mov fucomi test sbb pop jmp ret das cltd adc pop pop sbb cmpsb and jle imul cmp popa loopne scas cwtl sti (bad) ds xchg arpl movl movsb addr16 push fbld call imul movsl cmp ds in pop imull or adc sbb icebp icebp repnz mov insb stos and xlat push lret mov leave dec mov rclb data16 jns push (bad) inc xchg ljmp rorl mov dec pop popf popf fbld jbe cmp test scas jmp fild xor in jb cli xor add lock pop mov mov mov test jnp pop inc int fimull rcl or mov rcl xor jg mov jp or loop pop pop fcoml push and fmul arpl aas inc sub fisub fwait and add push test jno ja and xchg jb mov call jecxz push div fldenv mov pop jp test jmp and mov cs leave iret pop mov mov and xor mov and add insb or push je rcrb dec test cmpsl cmpsl imulb mov fs cmp sbb sub icebp idivb xor cs pushf or xadd sbb or aam mov movsl leave mov dec std std xor inc xchg mov lods arpl jge inc adc mov dec jo push (bad) jmp and push hlt xchg xor inc inc inc cwtl divb in loope jmp mov fldl mov je add (bad) (bad) frstor repz jo (bad) enter cld adc pop xor mov lcall mov aad sub cmp jbe lds push pop or mov push dec and mov xor scas scas mov inc push sarl mov pop xchg icebp icebp out sbb cmp cmp negl pop xor push add (bad) (bad) dec sbb mov cltd push push loope xchg sarb popf sbb (bad) dec jp cmp negb sbb adc outsl ror sub inc fsubrp add je mov out add in test xchg dec jne pop push sub and jecxz inc es mov les cmp xor jl xor ficomp or cmp lcall stos sbb fimul fidiv jns dec cmp ljmp fcomps insb inc ja mov xor add movsl call aas cmpsb daa call cmp lods jmp xchg ficomp xor test jnp (bad) push mov (bad) loope imul imull xchg out mov xor mov sub je mov fisub scas sbb jb or sbb adc movsb mov (bad) jno adc jecxz imul idivl mov stos lods mov lock adc je add das add vpcmpeqb jg shlb int3 inc lock addr16 ss jno jb inc inc mov int3 addl in rcll ljmp call out push loop mov das push push fnsave jb mov cwtl pusha fisubr cltd lcall adc sub mov push jecxz enter pop cwtl inc or sbb add std sub scas jb mov cmp ja lret hlt fsub es stc loope rcrl imul pushf mulb pop push in sub push inc inc out ja cmpsl cmpsl sbb jmp rcl xor out xchg das or cmp lea fcmovu pop or mov aad xchg xchg sbb push push out outsl movsb push push cld gs pop push fistpl pop pop clc ret or and enter jge xchg or jns jns hlt lds js cld cmpsl cmpsb sbb lock loope cli xchg jge add jae out insl (bad) mov imul ss mov cli jbe xlat xlat mov mov (bad) daa daa pushf push ret ret pop lcall sub (bad) fwait sbb dec mov add mov mov scas (bad) ficom mov enter jnp pop into push push out (bad) in shl sbb xchg jno pop xor mov adc push cli inc pusha inc je,pn mov (bad) sub es mov or popf xchg and test mov int3 sub pushf sub sub mov in sbb mov or inc icebp xchg ss push pop pop xchg cs pop inc sbb mov es pusha mov sti sub mov inc adc popa xchg pop rcrb into push push (bad) aaa loope fistl pushf sbb jns mov xchg inc xchg ss out mov mov scas jo or (bad) xlat shlb and and es inc dec mov pusha pusha scas scas xchg dec inc std insl mov insb mov movsb and pop scas movsb cmpsl in mov cltd jae xlat sahf icebp icebp sbb or in lods sbb mov sarb xor mov add or pusha cmc rorb icebp shll add aad inc lret push test jg jge push add gs lods jmp cld fcmovne pop lods repnz xor fdivrl inc mov rolb addb and nop ljmp movsl or mov movsl dec andl add push test lds lcall mov icebp imull les lret test test pushf movzbl fisubl aam inc repz inc or into into dec loope jne jb jno jbe inc inc push or cwtl lock lock dec pop repnz clc xchg push bound mov xor mov outsb enter mov pop push push in fdivs (bad) jecxz dec cli jge hlt jl mov dec jno ret enter into pop sub fdivr (bad) cmp sbb mov and xchg and fucomi lcall pusha (bad) adc xor fincstp pop pop sub lods jmp out (bad) leave (bad) call loopne (bad) int add into xchg xchg ss sbb sub and xchg ja lock pop inc sahf jle ja jge mov lret or mov (bad) mov mov ljmp in ret dec dec fcompl and push stos and xor dec iret int inc cmp cwtl cltd sbb dec xor jnp frstor (bad) fdiv test jp mov lock and cmp add cmp mov fbld mov push ds dec sbb xchg add nopl test pop jae je (bad) or pusha je sti xor push es inc xor data16 cmp (bad) cmc push fsts xor push inc push aaa inc inc mov mov movswl jge mov jcxz inc sbb xor mov popa test dec iret movsb in xchg xchg pop rcrl popf ja sbb imul xchg hlt insl push adc out and adc lahf mov cmp in ret mov add adc addr16 add pop (bad) int mov dec nop test mov dec sbb scas enter lods kmovw sbb cli cwtl cmc sbb mov xchg aad and jl cmc jg sub xor outsl add add adc jle push in in lds mov or lret pop movsl ja cmp imul fldt imul sbb xor cli push pop es clc add cmp (bad) push pop stc add das push scas fidivl fildl jp loopne inc push and mov mov or je and mov xor pushf jae cmp lock pop mov hlt mov sub fldl es flds jns dec mov jmp mov (bad) cmc je inc fs int scas cmp add xchg pop scas ret adc popa rorl mov mov daa xor sub cmp jecxz ja dec imul sbb fcoms imulb stos cs test jb or jl mov mov mov repnz add sti aas pusha jae aad jno repz icebp sub pop dec pop js xchg in or data16 jmp fistpl mov rorb dec dec std std xor fist push pop fsubs dec push and or cmp call xchg movsb push pop sbb mov insl repnz adc pop add es adc xchg (bad) cld inc inc inc ljmp pop mov addr16 push enter jae jne insb sub ljmp daa arpl sbb dec push sub pop dec dec mov mov mov (bad) imul mov scas movsb cmpsl in mov cltd jae aas out push push popf fsts loop xor cmp leave (bad) pop test je dec pop mov pop ljmp mov je xchg rcl lock and aas cmp fstpt add bound cmc jbe sbb out ja jb test xor xchg (bad) std std aaa mov pop jg add pusha inc lods and addb pusha sbb mov orl xor push fcos and rcll inc sub pop mov fwait pop jns aad bound sbb and jl and out insl cmp ljmp fsubs dec (bad) (bad) les and sub jl and mov mov dec lea call mov cmc insl cmpsl ficom sarl push int pop jge xchg int jp inc daa in sbb cmpl pop adc scas (bad) leave mov lret dec ljmp in in sahf sahf mov xchg rcl jnp jge cmp div jge jmp mov xchg xchg scas fs xor jb cli cs and or inc arpl mov std fbstp mov or sbb add mov or ljmp out insb bnd rdtsc mov fsin inc test adc adc add loopne cmp xor call out (bad) hlt repz stc stos je xlat inc rolb mov fwait ljmp cmp mov fsts mov inc mov pop pop adc addr16 mov add push lret daa fs inc ret adc xchg and data16 jmp dec push adc sub stos xor or push inc shrl adc jo xor rorl mov adc xchg adc sahf lods nop add das rorb ds lock jmp sbb insl shlb icebp dec jne jnp aam mov loopne cmc cmp jno ljmp mov insb inc nop pop pop mov add hlt jae jecxz pop adc jl mov lcall test inc leave out mov jp jmp jo pop xchg outsb mov xorps imul and rep repnz mov sub jg aam cmc jle lea sti clc xlat (bad) mov mov mov and pop addl jbe leave mov cmc and in xchg pushl pop enter push addr16 popa jbe aam add mov xchg rcrb ret mov mov mov mov push insl scas aad out mov (bad) fistl lods sbb adc cld mov dec je xchg add stos je mov aam inc (bad) sub mov leave shrl dec call jmp orl in test cmp int movsb (bad) arpl inc inc sub xchg mov mov stos mov jns mov gs mov dec ret pop and imul daa dec pop fbstp push mov fxch mov loopne and xor jne sub pop push ficoml in xchg (bad) jmp xchg jns inc sub test int3 fdivrl imul dec mov jecxz fistl mov jns fucom popf popf rclb aas xchg xchg div jge insb arpl sub add out mull mov out jno outsl lods mov jnp icebp cld xchg cwtl std std aaa or push stc stc add push sub cmp enter leave lcall fwait repnz xor into outsb fimul add sbb push pop hlt (bad) dec mov pushf out pushf ret loopne add mov shrb ror jl mov mov mov shll xor jbe mov ret cmp lock jmp lahf push mov inc (bad) addr16 in clts or inc clc xor push add je xchg les jnp adc lret inc push insb push dec (bad) dec loope dec mov gs negb movsl push fistpll repnz mov and in mov rcrl lret cmpsb pop adc ficomp xlat pop lret push adc sub mov pop pop out lods jmp pop pop lea jge xchg mov xchg xor inc aam sbb (bad) xchg fidivl ljmp dec add (bad) clc outsl (bad) mov mov dec hlt imul insb mov daa daa loopne cmp sbb fnstenv data16 cmp aad push xor add mov in (bad) mov ds fidivl xor test xchg xchg icebp cmpsl jno in adc sub and icebp addr16 cld mov inc add data16 or dec pop mov or sub dec stc clc pop loope popf rcl fsubs xor or stos mov xor stos aaa out cmp cmc cmp fsubs movsl cli adc xchg sub sbb stc fnstenv aaa inc inc addr16 mov incl int sar test and aas mov addr16 push cmp xbegin dec xchg pop push pop mov dec mov bound leave (bad) cld lds xchg sbb call push mov mov sahf addr16 ret pop lcall lds cwtl pop lret mov lods out scas pause sub cmp clc div insl cmpsl fsubrp xchg fcomi jle fisttpl sbb incw push fisubrl iret int3 dec or push add mov mov gs mov movsl bound adc (bad) mov pop popl sub cmp lods addr16 divl jne push outsl movsl lahf adc or jp sbb inc mov inc add jb push inc jne sub fisttp in add js xor mov xor clc mov das das sub pop fucomip test lret lcall imul lret jl or dec or dec aam test ds xor inc add mov addr16 cli das cmp mov push dec xchg adc mov leave add movsb push jl aam adc xor les pop pop add xchg push push push jbe nop xchg xor addr16 xchg and scas sub push in in push (bad) adc sbb sbb movsl xchg icebp cwtl loop in popf sbb push inc xor push sub push xchg push or or or fstps dec in mov loope push xor push sub jg adc js (bad) imul mov xor sbb and push mov add xchg mov push scas sarb fcompl (bad) pop sbb aaa out pusha cmp (bad) or sub ljmp or insb dec mov and (bad) mov les xlat stos adc out sub int3 dec mov sub stos push (bad) pop (bad) pop and nop incb or xchg mov cmp xor imull mov push pop (bad) pop push xor cwtl and ds lods dec xchg stos call xchg push mov mov repnz clc mov in xor mov jmp insb loope jnp sti mov dec mov repz xchg cvtps2pd xchg movsl js sbb xor adc repnz xor mov mov fcmovnu (bad) xor nop inc mov jge out fstps test xchg sub jmp out shlb mov jg call out fnstenv mov add movsl push cmp sub xor mov mov popf add push and (bad) xchg pop std add xchg xchg je insl adc mov nop jb fwait cmc cmp mov adc inc xchg dec add xchg rclb push mov test fistpl cmp jno,pt jae jl xchg mov mov adc jo mov mov inc sti adc pop (bad) xor in add das scas cld fwait jae jb pop jb pop pop adc cmp sub cmp and mov sti mov cmc popf popf sahf psrld xchg adc fs movsl out mov pushf lods mov adc mov jl clc insb int3 cltd push mov sub pop cmp pop and ds mov jbe add (bad) into orl das notl (bad) pushf lahf pushf and loopne,pt mov inc ja lds call push inc pop stc in fcomp (bad) je rolb sbb pop sbb or pop les push lds pop xor in cmp mov popf mov xor inc inc addr16 repnz mov out dec sbb push and adc rorb jg in addr16 and add lock lods ja test lods add into push or repz (bad) push jmp call inc lret aaa cmp fistl xchg sub loope jmp push fadds clc xor ja jns mov leave sti xchg outsl (bad) mov xor jg sub cmp addr16 push lahf pushf inc pop pop (bad) ja jnp push pop push or and dec sbb sbb mov popa div and sbbl lahf hlt out test jmp push xchg dec adc add insb imul ljmp mov fbstp fldt popa mov fcom lcall jns mov je jno xchg sti sub sti popa sbb sub daa es rclb sahf scas xor adc inc mov leave jb adc xor popa bound repz mov inc test xchg std int test popa in icebp or mov sti mov mov pop and arpl dec cmp fsubs call jno rol out out mov inc int ljmp fsubr push cmp mov xor ret (bad) push sbb shl mov xor in or cwtl jl xchg or (bad) dec es in cmpsl dec icebp inc lahf jle jecxz loope pushf xor je int3 out lcall pop movl dec xchg cs sub jno fimull cmpsb push ret pop adc sub mov (bad) jp sti add and inc mov cmp clc xor es sub xchg (bad) psubq lods popa lcall fstps jl push push icebp or test outsb bnd in aas jge mov pop or insb icebp insl movsl movsl or (bad) cs ljmp jmp out cld xchg lret mov push mov add xchg ss lret mov rcll push loopne pop arpl mov pop sub mov mov push push pop iret jge and dec lret cmp mov add hlt dec into cs dec pop ja aaa insl push mov pop orl je ret push idivl push mov mov push in in push sahf adc clc mov out jg in sti push aas inc cs dec in icebp mov inc add adc jb in out jge out pop (bad) imul jo popa cmp add test jmp push jle lea (bad) std mov xor test pop push xor gs xchg push add push jno imul add lret inc lret push xchg add inc pop (bad) je cli out decl fs xor mov aad movsl adc mulb mov mov or (bad) fsubrl or loopne pop xchg dec je leave mov lds and and adcl test jnp pop sbb or sbb xchg xorl fisubl add int3 mov adc es jno mov dec sbb jbe push xor mov rcrb lea jg sub xlat insl jl jne mov (bad) lahf xchg mov (bad) lods mov ss sub arpl (bad) xor out add add je and mov mov push inc jns add lods ds inc roll dec adc or cmc test int3 mov adc mov sub sbb mov mov mov popa mov push mov xchg jmp or pop jl in cs add sahf inc dec jmp cmpl daa shr mov (bad) mov push push and ljmp add (bad) cmpsl jno mov loop sbb sub dec inc cltd outsb inc int3 into xchg (bad) mov xchg pop xor cwtl js xchg dec or mov and mov lds ficom cmp js jle bound out jmp pop xor lret adc std inc ja lock out mov shll (bad) push (bad) jmp xchg (bad) (bad) and xchg ljmp es dec pop or mov leave sub pop test sbb outsl and (bad) xchg adc and add add cmpsb xchg stos stos outsb inc and or dec inc push mov imul and mov daa out stos cld pop loopne or inc push push or int mov push xchg addr16 jb xchg jb frstor movsb cmp cmpsl (bad) mov icebp (bad) ret fmul int mov and std and scas mov push sub mov dec out repnz sbbl js cmp adc xchg adc sbb sbb (bad) xchg xlat movsl pop push fimull stos adc xchg sbb fisubrl xchg mov and xrelease push arpl add dec es pop dec or adc inc inc dec dec repz in aam push cmpsl or icebp ds mov std sti inc fild (bad) out test rcl add lcall (bad) sub push mov ss (bad) sbb arpl (bad) (bad) outsb popf pop pushf and xor outsl and inc or aad dec loopne scas mov movsb mov cmp cmc insl cmpsl fimul xchg (bad) test add jp aas in scas in addl int3 inc pop movsl mov cmp ret fiadd push sahf mov les or movsl fmuls sub jp popf (bad) adc (bad) es xchg in xchg pop xor inc subl in je (bad) idivb or inc xchg std addr16 inc das (bad) lahf stc stc call lret sti (bad) ss push sbb imul mov call (bad) mov scas insb inc inc out or mov add pop pop dec dec mov add jp mov mull cmpsl lods or adc out daa push jae,pn dec enter sarl lock rcr adc xchg lcall xlat push sbb ds add addb test sbb ja xor xchg xchg out jg insb bound ret fildl std push and or and cmp cs adc sbb cmp mov loope das inc test cmp popf jne data16 add insl or jmp xchg and xor push push (bad) movsl add enter jnp repz insl add or inc inc (bad) sti adc add test subl dec leave pusha movsl jnp xchg mov dec aaa andl test sbb add incb jmp mov sbb add mov lret pop dec push repnz aaa pop andl test loope lock xchg das pop push in setg inc lock inc push xor mov dec or mov mov cs xor ret and or push nop nop mov jmp xor or xchg (bad) cwtl sub subb jno test mov sti sti aas dec xor movsl popf cltd cltd adc inc cli test repnz call fcoms dec stos dec dec dec std std ss sbb in or ljmp mov add pop adc test pop push cmp sbb ret loope mov and sbb inc xor jae jns pop xchg adc lods cmp pushl and rorb jnp sub ljmp push std sub ret pop aam mov sub out mov and add fdivl mov cmp inc sub fdivr outsl fsubr mov sub stos push test imul shr (bad) insl adc in xorl xor xchg rcrl mov mov outsl movsl adc mov (bad) sub adc and loopne dec into movsl bound adc lock xor fcmovnbe (bad) (bad) es ja xchg fisubrl or cltd test or sbb mov pop xor je popf inc inc pop mov sbb push mov mov xchg xor int imul pop ficom rcrl insl data16 xor arpl popa or dec xor pop movb pop test xchg int test ja sub mov jge mov sub mov adc ret push aad jb hlt mov lret rep daa fcoms push imul je or sub xchg popf mov maskmovq divl mov cwtl add add fnstsw adc add mov imul in jbe insb and ficompl xor mov mov cmp test dec jmp mov out mov popf xor orl out dec xor stc shrb dec add icebp jl jle lods cmpsl pop cmp and or mov sbb bnd out mov inc xchg punpckhbw push add xchg sub loope cmp movsl mov out gs sub fiaddl fldl lret es xor jle ret lret orl mov mov push addl mov push mov fdivs inc pop sbb cld ds push das jecxz push sbb mov arpl imul jge push push aam in mov xchg test xchg sbb outsl cli jle dec sub icebp data16 les pop dec ret xchg adc jb cmpsb popa jle lea push mov daa popf add std stos in in loop imul jmp test pop lea pusha adc repz add sub out inc shrl pop out sbb sahf sahf fcmovnbe pop push push push fnstenv int3 pop mov jge dec ret fist or xchg xchg cmp and sub (bad) cmp outsl aam lods cli cltd mov ds cltd xchg and sbb setno in push addl adc adc ljmp lds mov movsl or ret or jns sbb or rorl das popa out insb xor xor in out (bad) js xlat mov rolb adc jns scas scas in outsb add jp jne pushl movsb or leave mov jle out fnstenv movb repz subl repz push js enter out clc stc add cmp push inc mov and cmpsl pop in repnz add cmp (bad) popf imul push pop loop push movsl movsl ljmp inc xor dec xor negb and fisubrl call add enter insb fcomp push jp xchg push fadds mov sarb or dec add add (bad) in scas imul cmp and repnz push pop jle rcl pop scas jnp in mov xchg mov loope push xor andl xor push aas enter inc xlat xchg jb mov imul fsubrs xchg dec cmc jne sarb xchg mov test (bad) repz jl imul pop ss lods inc test and inc jbe popa mov leave stc jne mov inc cmpb jecxz inc fnstenv repnz mov cld (bad) jecxz ja int or adc sbb add add lcall dec aad mov inc mulb sub pusha les out dec clc cmp sbb push and divw mov and push push dec loop sub mov mov iret (bad) iret into cs hlt inc dec int3 mov cltd sbb mov clc loope fidiv out push pop pusha mov or push push mov dec or inc fs ja sub mov jno (bad) test pop cltd int3 adc pop inc sbb in in lea add cwtl jmp mov push add push scas int mov and gs (bad) pop mov jl xlat test test mov xchg inc das dec lock jne in scas jmp hlt mov jbe cmpsl xchg pop jnp inc inc pushf add inc mov xchg in outsb pop xchg or push sbb lods sub lret jb mov pop or call jge push pop or mov hlt dec leave mov xor jecxz push push and cwtl jnp pop test jp pushf (bad) lcall insb insb cmp mov dec int ss sti (bad) push in jne sbb jecxz pop dec popa or push shr xchg xchg out xchg mov jne mov lahf sbb mov push xor (bad) mov lret lock js lcall mov test add cmpsb xorps pop ficompl sub (bad) repz push lods outsl out (bad) lcall cwtl inc outsl or cmovle fst lods jo in lds ret data16 fstpl addr16 out lods orl mov mov pop pop and inc sti (bad) fbstp mov jp out cld incl les ss mov add or xchg cmpl mov jp pushf out nop adc fsubrl xchg icebp xor fiaddl iret int3 inc movlps in adc mov cmp enter scas dec xor pop push ret lea jg sarl imull jl pushf es popa bound sbb ss jle jno inc xor lods leave ja push xchg repnz inc inc (bad) out cmpsb dec add mov mov mov inc inc es lock pop enter imul push fist lret lret dec sahf popf mov loop leave vmwrite xchg cld inc inc mov fimul dec ret clc pop and mov cmp ficomp cltd lcall or dec aad add add call mov popf fimul push sbb mov les leave sbb insb repnz sub pop out pop cli loope push cwtl aaa jb push sbb (bad) or aad data16 idivb sbb jno pop adc ja sub sbb repz repz jne icebp or and sbb cmpsb xchg fucomi pop sbbl and insl sbb jp jle xchg pop call xor out mov adc fs push gs inc sti lahf aad push add outsb or mov out xor aad loopne cli pop jne add mov ljmp inc or dec and ljmp fmuls adc out or and and out xchg js xchg and in cs repnz js push js sub stos xlat outsb push jl int sbb subl js repnz (bad) xchg or jle cmp stc stc lahf mov add cmp stc sbb pop and or inc add test or movsl xor jmp pop xor lods jmp stos lahf lahf pop xchg xchg jp std cwtl mov into sarb movsb loopne push pop pop inc inc mov popa aam xchg lahf (bad) or out dec aad pop loopne loopne and mov lea or and cmp je push jmp jmp inc imul and outsl push daa imul (bad) jp movsl and adc push stc nop arpl add jae repnz rcr jb xchg jg pop pop inc add sub xchg cs ljmp lcall cmp xchg and stos xchg cld mov xchg xchg xchg xor cmp int3 int aam mov mov test pop ss inc xchg push push push and or inc add test or jmp mov roll xor (bad) movl ffreep pop jae je enter or sub sbb mov jle inc inc inc inc push pop loope xor ror movsl movsl fcmovnb insl pop dec dec dec inc dec popa call mov dec xchg (bad) mov jae mov add cmp leave jbe or icebp jae ret gs jne jne ret ret stos push stos jnp cmp popf cli repnz push cwtl cwtl or das mov xchg jecxz rcrb add xor cmpsl lcall xchg push notb dec dec pop push dec and jp xor push in mov jno aam cmpsl jecxz repnz mov inc rcl pop sbb mov cmp xchg or imul daa movsl fstps aam lahf sarl test stos imul loope fs jns push pop ss add jle mov test xchg xchg pusha mov adc jp jne mov es mov lret xor and stos popf push clc sbb mov (bad) test jp cmp sti sbbb (bad) loopne cmp fnstenv pop rorl push push dec inc cmp insb insl mov movsb out sub scas and jp cmc cmc aam inc idivl jne xchg mov jmp loopne mov mov leave leave pop movsl and mov (bad) xchg fcomps enter js lods scas cmp mov iret pop xchg pop pop sub lock iret jg sub cltd inc dec inc ja movsl outsl inc inc repz push xor lods std ja je test aaa out xchg rorl inc sti icebp je and sub adc lret xchg or stos inc (bad) out test stos xchg mov fsubrs stc nop sbb fisubrl jb movsl ret dec mov xor imul movsl add mov and pop sbb inc dec xchg jns xchg cmp inc das sub (bad) fdivrs dec mov xchg xchg push jnp es sbb mov fsubrp xchg or mov (bad) out mov push xchg jns inc sub stc repnz leave mov adc add dec inc push pop rolb popa popa add je pop adc bound es mov lods jl and mov in xchg xchg das and sub dec imul nop movntq push fxam fbld jo cmp dec rorb (bad) into mov mov cs fcmovu jno xchg cs cmp inc pop cmpsl in imul out xchg loope into lcall xchg push and mov mov test out jo fsubrl imul adc cmp lea mov mov mov jo inc or dec (bad) push pusha push jo mov mov cltd sub arpl adc enter push daa inc (bad) pop xchg sub les adc out (bad) mov pop jecxz sub xchg adc aas stos cmpsb inc inc out movsb or sti jle dec mov dec data16 push pop jnp (bad) cltd imull mov repz pop cli xchg pop rcrb jle adc test adcl popf test aam pop lea js test mov xchg xor add xchg pop pop enter and mov cld and test unpckhps pop sub or fwait xchg sbb es insl mov mov xor inc es fwait xlat ljmp popf outsl mov lods (bad) lock gs adc xchg xor scas ror lods outsl mov ja push and fildl out ss dec mov pushf fstps and mov xor insl cmp inc add and inc sbb inc xrelease push pop cmp mov adc das sub aas jno jne or stos mov xchg aam jge jae jnp call scas lods es iret ja pop xchg mov dec xchg lods mov jns sub scas lret jns fildl xchg fcmove add fsqrt movsl fsubs xor ds dec inc xorl in rcll pop dec push in cmp cwtl pushf add xor (bad) in pop clc test and cs adc (bad) adc fcoml jmp lds push in and cmpsb cs or adc jl insl imull sub jmp mov cs inc repz and (bad) cs call xchg dec in push test sbb setnp inc test push mov mov or (bad) mov cs or pop sub ret adc es sbb negb or jmp sub outsl sub jno fdivrs (bad) inc jg aaa or out jbe imul adc rclb dec scas js (bad) or mov jns fcomp xor mov cmp int add xor push (bad) dec dec inc add xor std adc imul inc mov push lcall dec into into cmp and idiv (bad) stc pop orl add sbbl (bad) (bad) lock xchg pop loope ret xchg pop push or cmpsb arpl iret mov orl lret mov dec repnz push (bad) aaa push icebp icebp in or in out pop shrl imul adc or jo lods jmp mov xor add jo mov fcomp sbb les pop rorb push clc jne inc test rcrb lods std std insl push or aad outsl outsl pop addr16 xor iret push or add mov frstor leave enter aam out dec in push out push test push ja mov mov ja jo cli sti fs adc mov scas lcall cli or int3 cmp and ljmp pushf pop ret fcompl aam sub out cmp push xor xchg xor popa sahf mov out out mov mov outsb shrb inc test cmp lock insl scas scas inc xchg add sub pop push inc out imul mov or pushf out je dec imul sahf int3 jbe or (bad) mov outsb jb arpl mov lock and xor mov (bad) lods mov pop inc (bad) andl popa cmc and fcoms mov pop xchg or out inc adc sbb aam sbb ret aam dec int fimull rcl mov adc fcomp mov inc loop out sub cwtl or imul pushf pushf jno daa mov lcall pop xchg sbb pop stos aad aas xchg or je mov xchg push pop sbbl sub push or cmp scas lods ja movsb es jne mov movsb and cmpsl push mov test (bad) jae xchg in adc fs in jae fistl adc fs into mov adcl stos stos adc push xor cmpsb push out fcoms xchg popf adcl lods jne ljmp sbb mov xchg mov cli sbb push out clc or sub stc inc inc (bad) mov pop add fbld inc mov mov jne movsb std cmp sarb xor xlat repnz (bad) cmp cwtl pop xchg pushf popf push outsb loop sub lcall pop pushf sbb lods add lods ficompl and iret cmp leavew aam inc sub or aad dec daa stc data16 incl pushf cmpsb int sub pop or adc (bad) test sbb dec mov int3 lods ret (bad) arpl jge mov pop jecxz (bad) stc stc and in cmp fstpl shrl push mov add rcl sbb add mov push jle,pn mov lea addr16 leave mov fmuls xchg push into mov mov sahf pop adc into lods cmp iret cmp sub (bad) mov mov lea add xchg icebp (bad) jb aaa stc fs adc iret inc inc inc nop (bad) dec jmp out jo or lock std ds add clc fs iret gs idiv xor fldenv cmpl dec movsb jge push and mov mov xchg popf lds aad fimul sbb addr16 xchg mov ja lret lds or div hlt sbbl cli inc push push sbb jns xchg push ljmp out imul xor inc lret dec repz gs xor mov mov or rcl xchg pop mov or into xchg jae mov cmp mov mov xor jae xor mov mov insl fcomps jae cld cmpsl inc icebp scas gs (bad) stc jno pop jno pop add test (bad) jno insb (bad) push mov push mov inc dec ss or cmp sbbb (bad) mov fnop lods loope mov notb cmp push and or push movsl das dec out and je sub push jmp ljmp or fwait add aam les or xchg push (bad) dec mov mov icebp xchg push sbb insb (bad) push sub stc mov insl sti lcall jb pop sbb hlt mov mov sbb jle out clc xor push xchg lcall test add (bad) jne (bad) jb fnop loope popf popf rorb mov repz imulb pop inc (bad) das insb fld mov leave jo push lods test pop movups jmp pop std stos fistp mov test and adc loop inc inc jge xor mov xor sarb sahf lock dec repnz fildll add fldl jbe outsl insl pop test push and or mov and fiaddl cmp xor sub mov cmpsl pop dec or arpl pop ja clc jnp in mov inc idivb scas inc sbb xchg jo dec cmp xor adc xor lea dec js aaa dec sub outsl and or dec dec mov pusha push sbb jns or jmp mov es movsb setle rcll pop adc or icebp repz jle sbb cltd xchg and push mov test or xchg or sub dec or nop sbb repz in aam mov es cs pop pop mov xor or cwtl push rol push mov mov add dec js jne jae sub ljmp mov (bad) test in or das xchg pop pop dec into shrb shrb and ficom into ss test add js jmp scas in xchg xchg out pusha divl sbb rcrl mov (bad) pop xor sub rcrb into iret add je out cmp push adc repnz dec add mov ljmp push imul jle aas imul test test icebp mov rolb adc inc lret subl jae or (bad) in push add mov ret or adc dec dec cmp sahf pop pop pop jo fwait hlt sbb jb sbb (bad) xlat out daa imul lods dec pusha lcall xchg or ljmp jge mov xor sub add cli gs cmc insl mov mov xchg push notb enter in mov aas pop out ss sub mov lahf loope dec push push add mov mov adc sub nop dec iret fs mov xchg pop pop rcrb dec mov mull cmp mov scas push add xor (bad) bound lods and xchg xchg repnz jecxz dec jmp pop dec leave fprem add das cmpsb add or in out call (bad) (bad) jns sahf (bad) mov xor jg sub inc push arpl pop repz inc cmp pop xchg pushf push out js mov mov and xchg das push ret stos fs add ss inc fidiv mov inc imul (bad) addl lret sub or add inc or lock shl mov mov fmul cmp enter jae test pop (bad) ljmp pop test out push faddp iret cmc mov mov inc data16 jp or insb add sti fidivl inc je push pop pop data16 and addr16 sub adcl rcl push es mov andl push rclb popa aas mov xlat pop mov cmp loopne inc les push xchg aam mov notb mov pop cs paddusb cmp cmp mov pop pop pop lahf xchg les insl arpl fdivp mov sub imul (bad) pop fnop movsb bound xchg adc lds rcl jne out xorl stos dec (bad) cli cld sbb pop sbb ds mov shrb pop mov sub stos pusha insb out push add mov xchg (bad) std lods fldcw sahf and in (bad) mov test sti jp mov fdiv jge aaa aas mov jmp and ja xchg sub scas leave mov mov xor and lods (bad) mov test stos flds icebp mov stos out sub scas cmp fcmovnu ljmp movsl ss or mov lock xor flds sbb fist movsb jmp leave pushf sti xor pusha sub imulb jp sbb scas test ret rcll jg mov sbb xor sub sub or dec xor repnz test stos jecxz lock nop push fnstenv stos (bad) adc jae sbb mov add dec dec push movsb cmp mov xchg stos ss inc stc sbb mov into dec mov xchg add sbb push fsubl aad pop sub test movsl lock mov pushaw sbb jp imul jno push mov mov ja xchg stc cmpb rcl jb pop ret shrb dec scas test (bad) (bad) shlb sbb ret jnp loop (bad) push jmp sarb sahf add rcrl mov mov pushf dec dec mov mov push movsl mov and jno fnsave pop (bad) clc inc push add leave mov (bad) in mov mov (bad) in addr16 movsb movsb jne clc jnp jmp ror lret add movsb cltd adc int3 aam xor push mov push les mov hlt icebp pop lea xchg push andb adc loop jg rolb push cmp add pop repz jb out cmpsl mov adc add aam js in sti daa mov and rorl jl out mov pop out out mov mov push push pop aad popf add out js pop sub mov jmp nop inc cmp rcrb xlat xor lea push push and (bad) xor (bad) push mov push sbb mov orps ja and popa push mov (bad) (bad) adc adc xor cmpsl popa ret in cli push jne add ret dec out pop xchg adc and rcll loop push pmaxub in ret ret (bad) out jl xchg enter bound shrb jge xor inc lret cmp mov xchg lods cmp popa hlt xor xorl pop fsubl scas jns cmpsb cmpsb push movsb cld inc cs or xor cmpsb jg pop stos sub xchg js (bad) lods push out jg xor add jb dec and mov mov popl add sub cltd add scas dec stos lods sti lret pop (bad) out cli push lds jb leave addl out cltd push aad jns push (bad) lds test adc imul xchg xchg add stos (bad) (bad) fs insl stos lret adc insb stc out push fucomip xor test (bad) adc cwtl out in popa mov movl jbe and mov mov jge popa (bad) mov mov sarl sub and int3 or (bad) pop loop out xor sbb ret cmp dec sbb in and es in adc scas aas repz push fs incl jns mov outsl lds sub imul mov jo cmp inc mov pusha adc idiv sbb std aaa mov insb orb clc add lods aad push ret (bad) and jp xchg hlt iret adc test inc xor inc ss dec inc mov jbe test xchg pop (bad) gs sub pop mov inc popf popf ret cmpsl pop adc pop clc clc push inc aad insl xchg or std stos lds inc decb cmp jns xor pop enter xchg (bad) sub sti jne or and push xchg pop repnz add call push mov mov ds sti xor int3 mov add add mov (bad) jb xchg outsl sbb ljmp cmpsl cmpsl jge adc out sbb push push adc mov mov fsubr add pop sbb pop cltd cltd cltd xchg pop adc fwait jle pop mov pop fcompl push jmp cmc dec dec jbe xchg lcall das je call xchg push or mov arpl jg sbbb adcl pop pop adc mov jmp xor mov xchg js je add mov cmp mov or bound je mov mov and add (bad) inc movsb pop fistl rcrl sbb fsubrs inc inc sub fistpll dec rcll (bad) mov mov das stos rclb xchg push xor add add xchg xchg xchg lea addl inc les test jo xchg and dec mov xchg out notb xchg repz xchg cmp xchg hlt data16 xor and inc addl mov test mov lcall add jb dec stc lret sbb out sahf mov into aad pop fmuls fstl push loop imul mov dec dec cmp xchg test mov lds add mov push int inc pop les aam and and sahf out (bad) xlat add daa pushf pushf xchg xchg mov int3 sub scas mov movsl test pop pop jge aaa sti aad sub cmp sbb (bad) (bad) fisttpll es pop fwait jae jp gs add sbb out cwtl out cmp mov adc pushl cld pop and daa xlat lahf lock pusha sbb push and inc pop popf cltd fidivrl push adc repz jle mov test (bad) stc push fsub pop fldcw cmp inc mov pusha lods lock divb out out add push repnz shlb sub cmpsl inc mov sahf mov (bad) add add andl pop sbb push movsl mov inc cmp bound xor pop rcrl movl ss and and pop dec dec and arpl cld lahf iret mov loope adc (bad) jge jmp jnp into add jp arpl sti mov add xchg dec hlt xchg jl cmp adc xchg mov push cmp jmp out jmp mov in call adc add lock mov sbb sbb into sbb sbb popa in cwtl fstps fdivr daa jbe dec mov stos push push scas mov pop lcall fnstsw pop scas jge arpl popa sub pop je cmp fcompl lcall dec push mov jae,pn idivl ret and jns fnstenv and arpl sahf mov in xor pop leave mov sub insl test ljmp fcomp loopne cwtl int3 fdivrs aad sub and pop push sub sub push jb mov hlt insb mov push sbb push (bad) push mov (bad) xlat xchg cli jno test (bad) repz test mov inc les in sub xor add dec les aam cmp fs dec dec mov lods gs fldcw cmpsb cmpsb bound mov (bad) xor sub mov loop mov inc mov fisubr es and jg jnp mov mov jo adc push sti pop cmpsb sahf and mov inc movsl loop ja notb jne xor xchg jmp test test mov add out sbb pop pop inc test (bad) inc imul and cmc stos xlat jmp jecxz aad gs sbb sub push mov cwtl cwtl rclb loopne inc nop sub ficompl loopne push push adc xor push out pop es pop jle in sub mov sbb or subl enter jl mov ss flds imul dec call (bad) movsb pop mov xchg pop popf popf push sub push cmp jle jl pop idivb sbb fldcw push push pop orb lahf push dec divl out adc shr mov add das call (bad) (bad) scas pop jl sub inc jp out icebp mov iret mov jb inc mov add pusha fmuls fstl pop sub jnp cmp lcall adc fidivr movsl das inc jmp lret out or dec into into mov cmp repz mov mov mov (bad) lock bound mov loope stos pushf cwtl loopne mov js mov dec xor xchg jnp aas mov (bad) jno inc int3 mov stos nop (bad) or dec mov jns mov aad xchg jb das sbb div (bad) rcrl mov (bad) stos add repnz pop test mov push pop cltd cltd mov dec or mov stc je xchg or sbb push pop pushf aam push cltd or dec popa repnz pushf (bad) jne jmp into aam mov cmp hlt jge jge fldl ret mov jge xor sbb fistl loope xchg add es hlt push ljmp pushf sub fdivrs (bad) jmp cmc fiadd sub ret sub ljmp fcoms add add dec pop xor sub insb in or add pop mov add lods mov out mov and rcr pop fdivp cltd jp sub lock sbb in dec in add cmc ja adc xor loop cmpsb add je (bad) dec stos cmp push xor fsts lock das test loope cmp push adc (bad) test xchg imul mov push lods lods pop cltd push dec sub adc mov (bad) addr16 hlt (bad) ljmp cltd pop inc add orb dec mov mov mov and xchg push jp push dec or pop adc and push adc out xchg jle lods stc clc nop arpl test dec jne sub add adc jae pop fcompp and pop aam push and and mov mov (bad) (bad) insb jmp sub mov or sub fdiv loope insl push jp in outsb test add sbb push out mov (bad) leave xchg add lock add mov xchg sub push jge mov mov aas incb por test das test mov std or push daa mov (bad) pop cld ja pop std std add ret mov notb xlat add stos jb jecxz dec inc scas gs jno mov hlt mov sahf mov push out xor ror pop dec dec xchg xchg je and popf loope and bound bound mov cmp dec aad inc cmp gs mov or pop add pop dec cmp mov loop sbb or (bad) jae daa xor cmp xchg sub fisttp jecxz add stc sbb hlt cmpl xchg cli or or inc test jo mov stos (bad) mov hlt pop push mov hlt jecxz aas (bad) cmp imul dec mov jno lret lds fdivr out or inc cmp movsl movsb xchg gs out xor in and call jge add rclb sub or jl cmp out jmp adc andl jae add or das ljmp mov pop imul jle xchg (bad) push gs mov (bad) jl xlat xlat adc mov sbb mov cmp fstpl rcl cwtl pop lods mov jl xor pop pop aas dec mov sbb outsl in dec scas (bad) push mov shlb and icebp icebp push out sbb lods jns movsb cltd fwait orl fcomps int3 leave leave dec cmp xchg stos dec dec (bad) sub sahf sahf sbbl mov cmpsl jns mov mov sbb adc lods pusha sarl mov (bad) lods push pop sti idivl sbb out out decb (bad) rcr add (bad) notb mov fstpt pushf or ss addr16 inc inc inc inc lock add loopne mov inc cmpb loop popa lcall xchg xchg sti (bad) insl out mov mov stc lock lods aad movsb rorl push jmp pop mov mov add dec cmp jmp daa loope arpl dec ss cmpsl sub (bad) push rorl and jae popf inc xor subl jl cmp (bad) mulb cmp mov cmpsl xchg fwait or mov sahf sahf and mov pop xchg dec fbld jns fwait cmp lods push mov mov xor sahf jns xchg push pop jge sub or adc sbb xchg jp aas or lods cwtl pop iret cmp aas pop and orb jbe (bad) icebp xor mov mov repnz das test sbbl pop xchg mov es mov adc mov rcrb mov outsl inc jmp push cmp dec cvttps2pi mov push cld mov jmp je mov sbbb dec repnz sbb call jmp leave lea test pop mov and scas fsts jb xor lcall sub test (bad) dec add div xchg sar outsb push push vpsubsw add bnd and add xor fcompl xchg cltd cltd pop xchg xor or cli cltd aas mov int pop les rcrl adc cmc int3 mov mov in and in jg (bad) leave push in push and arpl add xchg jecxz cmp ret fiadd sbb dec aam iret sub loope jmp xchg mov inc std (bad) sub imul cmp jnp sahf lcall lock aad mov mov arpl xchg scas sbb cmpsb insl aam push dec pop (bad) sbb sub push push insl mov cmpsl daa inc push and fsts and test mov jp loope and add test xor repnz xor and cli stos pop jbe or adc movsb lcall cmpsl or lcall cmp pmuludq inc (bad) (bad) jmp jp pusha fnstsw std inc inc cmp push pusha pusha test repnz xchg insb and inc add push stc add push and sbb fdivr (bad) (bad) push repz fidivr pop mov aas test repz mov dec cmp pop pop jle adc loope cmp inc je pop add pop xchg (bad) push adc sub fsubrl sub sti rcrb jne dec (bad) adc fs movsb insl fadds popl mov lods push push sbb sub pop es xor push xchg clc push sbb or mov (bad) pushl inc in inc add ret push dec fdivl enter fsubrl cmpsl mov bnd loopw lock hlt mov or (bad) sub add mov loope mov dec xor lods fdivrs jnp repz mov (bad) jmp mov mov sub sbb fsubs push (bad) mov in inc (bad) jg push push insl fcomip movsl movsl gs sahf call fistp xlat pop ljmp adc rcrl pop (bad) adc fisubr lods mov inc ret out leave subl mov ljmp add mov add xor cmc cmc mov int mov leave xor add jae popf sahf das lods mov push add sbb cmpsb test mov movsb mov loopne add adc nop cmp lcall jnp movsb jmp push lock aas lds push pushf lret in data16 fmuls xchg fdiv jl and push popf cltd or adc cmc mov cmp xchg add pop cmpsb pusha mov xor sahf sub lods mov (bad) and pusha jecxz inc sbb add adc sub push icebp cmp int adc or jno test (bad) fcompl cmp (bad) (bad) in sbb ficomp xor cmp scas (bad) xlat xlat adc fwait pushf adc pushf pushf cmp dec aam cmp jns out xor movsb jp pop pop into mov mov add mov scas mov in mov mov mov push je sbb in cld push imul divl fwait pop out mov inc push add mov jecxz and mov xchg mov lods fwait jnp iret stc cld mov addr16 jmp insb mov mov push cmpsb inc jmp je push fsub jns lret mov lods faddl jge add das scas movsl adc adc and jp in (bad) push and bnd fbstp mov aaa (bad) dec loope fldt fisubl dec xlat mov sbb fs xor cmp sub adc out in and sbb jae movzwl sti and mov lcall movsb push pop pop dec dec lret mov pop mov mov out inc out rcr and push mov mov jno jo cli and add in test lcall fild (bad) enter call ss (bad) dec push sub mov repz xlat rorb xor xchg jbe jl lea xchg sub cwtl sub sbb lds push pop imul repz stc jbe (bad) xor mov rorb iret cmp pop pop fsubrs loop inc leave jae jns push add in leave pushf imul jnp jnp dec out rcrl cmpsb add es xchg sub call pop push push enter rcll inc out mov inc icebp jo add mov ret inc mov mov pop (bad) pop pop add (bad) lock popa ret inc movsb inc push push mov inc in into imul mov add std pop xchg test movsl lret int3 (bad) (bad) ja xor stc loope lahf pop cmpsb test aad andl sbb cmp jecxz jg fcomi dec imul repnz shll std movsl jnp push sbb sbb mov adc icebp jno cmp push pop xchg push cltd scas nop mov and out xchg rcl popa bound pmaxub flds ja test addr16 ret fwait mov out aas xchg pop lods push adc leave and xor mov int adc insl pop clc sub and xchg mov les jne dec xchg xorb mov popa xchg mov xlat pop push lea jbe adc jns loop and fbstp mov call jmp mov mov fcomp pop cmp xor popf sbb cltd out mov arpl pop fs mov jae mov jp test xor jmp xchg jbe fxch hlt sahf sahf add js mov inc or cmp mov sbb cmc (bad) jmp sub loop xchg scas (bad) mov pushf hlt cmp stc push adc (bad) jae xchg (bad) js cmc cmp imul jmp movsb in je int pop das sub frstor lret movsl xor add dec out sahf and bswap mov sahf push insl cltd (bad) ljmp sbb add dec lea in cwtl inc test add jmp clc mov popf xor xor xor inc adc int3 das daa gs das jne mov push dec cmp arpl sti loope xchg push mov repnz xor cli cli jl jp sub push outsb sbb mov (bad) addr16 xor jbe inc xor sbb ret mov into pop lahf cltd jmp dec add mov mov lret bound pop sahf test mov idivb jg add sub push xchg jge jno test rolb sub je mov div mov mov push ja iret or and add ret std jbe lea cmp mov or dec dec inc add js loopne ficom push jb mov mov inc (bad) push clc cwtl mov mov push inc je mov inc (bad) inc mov das stc push ja add sub xchg push scas dec ja jno or mov jo cmp mov cmp cld dec dec ja ds pop mov icebp jae sbb xchg pop push xlat aad call repnz out in push add xor push (bad) mov jae cmp fsubrl rclb aam adc fidiv lcall mov mov mov es insl fstpt mov pushf aas mov int3 jb and je loope adcb sub iret popa xchg pop jecxz cltd xor incl add clc clc inc lods or cmc ret ds (bad) (bad) arpl lcall jo orl pop sbb pop sti iret dec push popf mov setae daa rcr mov cmp sti lea rolb inc out cmp mov push and pop push fildll cmp lock repnz push rolb in xor fwait loopne mov mov data16 mov xchg outsl xchg pop sahf add mov push rolb jno data16 mov sub stos (bad) jno push adc data16 mov (bad) xchg push movsl pop pushf xchg ret repnz jle divl xor stc lcall aam mov negl imul or orl aas lock ljmp or fs mov adc push loope aas aam out xchg xchg sub testl sti jmp and jmp cmp pop fistpl mov mov sub dec out aad and add jp xor mov das inc adcb mov rclb push push and fisttpll add add jbe mov xor xchg push sbb test jmp addr16 cwtl sbb dec add fcoml (bad) or dec dec dec mov out or mov xchg pop sti mov lods gs mov call and cld fisttp fisubrl jb scas lcall dec mov xchg repz roll pop pushf (bad) dec push hlt cmpsl jl faddl lods int pusha sbb and sarl int test cwtl cmp jnp jmp pop fsts mov loope loope xchg bound inc hlt fs and push push push ljmp shr ss mov xlat cmp xor mov (bad) dec mov int andl into add dec js in call or xlat mov xchg xchg daa daa mov pop jae add ja icebp add into add nop mov push test imul arpl out jl imull (bad) lahf jmp jae outsb mov divb nop mov mov mov add sahf pop xchg pop and xor hlt sub fcmovbe insl fidivl (bad) jo dec mov hlt leave push outsl outsl popf pop mov xor lea add jmp and xchg dec mov xchg xchg divb pop repz inc daa loopne call pop cwtl ds jno dec shll adc mov into adc cmp aaa repz jp (bad) cmp sti fistp mov mov scas sub cmpsl xor ret add mov cmp and loop jno mov insb and scas push fwait xchg (bad) xor push inc aad cmp out or stos int and sub xor and fidivl ss push rcr sbb mov ret dec adc mov add fstps popf adc js push jbe mov div imull ljmp popf daa mov mov or push mov xchg movsl nop mov rcrl lahf shr (bad) stc jo call iret cmp fsts loope mov loope mov push test jmp call push in xchg sar jmp add mov les mov adc xor sub insl push ljmp nop fcomps mov (bad) sbb popa hlt in xor jge jb or mov call (bad) daa loope sbb mov scas fist mov ljmp icebp icebp xchg pop add popf loope sbb jg mov push pop jnp mov je and jne dec dec inc push and out jmp rorl rorl lahf push rclb js mov xchg jge shrb adc gs xor cmp cmp scas out mov jnp repz inc add or mov add or rcrl mov pop lods mov inc dec lret in sub xchg sub dec fucom test out lea fwait xor xchg pop imul gs int add or es sbb sub jne leave or test stos movsb (bad) jne in popa lock inc inc xchg arpl orl mov fldenv mov xor xchg mov js mov mov push or mov cs push subl hlt dec or nop adc outsl aaa jae fwait int ret out repnz fs fidivrl pop fldt adc mov dec aad pusha or xorl pop xchg sub subl mov nop pushf push pop xchg jmp adc mov or test mov xchg maskmovq negl jnp adc pop and cmpsb add sbb inc fisttpll int3 shll sahf jno mov outsb (bad) jge cld gs push or push sub movsl call pushw fwait pusha add cmpl and inc ljmp xchg xchg jmp mov test rclb (bad) xchg pop sbb out pop pop xchg scas fiaddl mov jle cmp inc sbb vpsubusw subl mov cmc xchg mov int3 jno sub cltd and xor dec xor std lock stos stc ret fsubr sub (bad) mov jp popa add fiaddl add push adc and fwait repnz js dec dec dec cmp adc push fisubrl (bad) (bad) scas sub or sub sahf mov mov sahf ljmp rcll (bad) cmp jmp sbb mov cmpsl das push pusha aaa xor sub outsb shl gs jo adc sbb (bad) cltd and leave incl add bound out shrb ds scas and cmp pop adc andl jnp or pusha inc cmc data16 pushf sbb mov pop mov (bad) sbb add inc jnp inc inc jo push xchg or les cmpsl sbb cmp lret push (bad) jl jmp fs sti or push in jl jmp add sti inc jb lock mov in push mov jno add bound mov int and es ja cmpl rcll or sbb mov sub xchg lds jl mov aas xchg ficom pushf xchg stos jmp ljmp inc lock push mov rol lods jp jle rorl rol mov mov int3 inc inc popf loope jg adc xor test sbb sti inc rorb fwait mov pushf (bad) repnz pop mov scas (bad) or xchg out mov nop nop cmp sub stos test (bad) int xor cltd sbb push add jp pop shlb (bad) push cs mov fdivp jbe sar xchg sub into daa sbb and xor insl pop iret hlt test nop nop loop xchg xchg jmp push fisub adc or or cs fnop fwait adc daa sbb popa sub loope inc into sbb cld adc lods dec and cli adc pop add fwait adc mov add sub repnz clc dec dec jg mov arpl insl add mov lahf pop mov jmp sti sub sti push push lret mov iret inc inc test xlat aam test call cmc cmc test sahf daa cli push outsb sbb rorb adc sub add sbb shl mov mov dec dec mov xchg jecxz mov push and stos adc data16 sti jp out xchg imul xor dec (bad) ja push jb out sub jmp push sub idivb xchg xchg or mov add lret insl adc ret mov (bad) and std jl and mov es inc dec repnz mov or mov cs push stos xor cmp pop pop jmp mov push mov mov jl in outsl les ljmp lcall sbb fisttpll sub pop pop mov push cltd insl insl mov and cmp lods mov pop mov jecxz inc pop ja jae xchg icebp mov fs aaa xchg lahf insl outsb jl xchg idivl mov gs pop loop pop cmp push insl xchg mov scas mov cmp mov jmp dec je cmp cmp jle dec push inc adc xor inc and mov arpl push lock scas xor out into adc mov cmp and lret inc inc (bad) pop fisubr inc leave arpl jns outsb fidiv cmc mov ljmp fisubrl rcll mov fnstenv xchg mov cmp setle sub loopne pop cld (bad) cmp (bad) into xor in sub jno nop xor or cmpsl or xor sbb and scas adcl cmp pop pop (bad) jo leave cmp enter jnp ds fistpll test lea mov in and add (bad) or push sub mov adc es push mov iret mov push aad sbb aam jb push dec movzwl fwait pop (bad) dec inc and push push lea mov mov mov jne out sub add xchg fwait or jbe pop mov xchg jno mov andb cmp and sarb in daa cwtl jge push test pushl int3 iret add shlb clc cli jne lea jb insb mov xor dec jg ret mov ljmp jb fsubs sub pop aam imul push xchg lds add mov pushl sub sbb pushf and lret add (bad) cli into cli insl push push icebp pop loope jle cmp out test out jl mov call inc les or subl ficom aad inc ss test sub push (bad) je mov shr sub (bad) pusha cmpsb lea xor and arpl pop sub xchg lahf je out fs jle xor dec or out test and (bad) or jno or movsl or orl ds sbb add rclb ds negb sti jmp icebp mov out fcoml mov incl pop or stos roll stc cmp es ret pop pop push sbb in ljmp inc scas dec lods imul lods out cmp mov cmpsb mov enter idivl in push push in mov cmp xor cmc xor adc xor fildll je add cmpl xchg lea cmp test adc xchg sub es stos add cmp and xor stos mov sbb jno mov test xchg push jmp test outsl js mov inc aaa aaa inc add shlb shrl xchg push add enter scas (bad) push cmpl iret std int mov test test inc sub call pushf pop pop push mov push adc push xchg stos stos loope outsb and sbb dec popa ds add xor scas sti (bad) push xor clc (bad) repz dec xor cmp ret mov cwtl loopne cld fiaddl jns dec xchg add and ja dec inc pop xchg inc sbb adc adc bound (bad) jecxz xchg pop in out push xchg lret fildl jo jmp imul or lret mov xchg or mov xor lea sbb popa subb popf cmp jle imul add in lcall lods pusha xor adc add add call cli fnstsw ds xchg inc and xchg lret stos add (bad) ja lock (bad) aam sub dec sti fs mov mov lcall jle lret and dec stc jb adc ret pop pop aam inc out mov add pop or or ss dec stc inc imul rol and arpl aam sahf pop (bad) outsb sarb xchg mov outsb cmp jl mov and repz dec test xchg in adc jb adc add cltd lods adc es sub shrb ds mov hlt mov (bad) lock jl pop cmpsb pop aad mov fdivl jno cmp outsl test ret ret (bad) stc jb sub inc pop cmpl imul mov push push xlat imul ret bound adc jle out xchg sbb xchg aam js dec neg aad insl les call lcall ficom out loop rcr fucomip mov add jmp daa stc pop outsl outsl lcall sbb lods or test iret out mov roll jl sub je int3 int3 enter mov mov ret dec adc pop std sbb test sbb dec push fmuls xor mov jns jmp fs sti pop mov pop (bad) int3 xor inc inc std xchg jle aaa test fwait (bad) mov std std mov lret shr (bad) stc mov sub xchg (bad) mov adc repnz inc into popf xor mov int (bad) in gs pop pop mov sub inc adc pop mov lcall stos out insl fisttpl or dec into into mov add xor mov dec test dec jmp lock pusha inc adcl pop adc and mov add adc sub aaa or xor or inc xchg nop mov (bad) aam xchg xchg fildll add add add mov leave leave cmp sbb sti add pop sub sbb cltd jb stos int outsb inc adc xchg nop fmuls xlat sbb movsl repnz in je lea ficoml lcall and loope and cmp xor dec jg xor pop scas adc fstps fsub loope sbb ja dec add pop int3 adc sahf outsb dec cmp push xchg push push sbb je sub or and repz mov fwait ljmp mov push pop mov dec mov sub cwtl or movsl ds scas and cmp pop adc andl jnp or pusha inc hlt pusha loop mov jle cmp mov or adc movsb decl mov std jecxz xchg xchg pop push ja mov cmp lock bnd les inc cmp mov lahf push mov je rol mov ficoml push sub xorl insb std std repnz inc inc (bad) or roll mov (bad) add mov sarl es mov lods xor inc lock xchg xor aad xor cmpsl movsl aad test add mov jp (bad) icebp sub ret stc stos cld push jl (bad) test in push je lcall rorb pop out scas in sub (bad) mov test sbb xchg xchg repnz mov aas sub mov movsl hlt mov fwait (bad) mov lcall cmp les and arpl jmp int3 int3 dec or ror arpl decl mov ljmp (bad) jne inc jl ror data16 xchg outsl clc add lds test jl mov jmp loope (bad) jl mov jle jle ss lods lods adc stos dec mov out add in mov jo jp and mov decl sub fldt rcrl xchg inc dec dec inc cmpb mov or adc aas mov pop pop adc arpl cmp mov rcll test mov mov cmp cmp popa pop testb add (bad) jp mov mov mov mov mov mov inc cwtl cwtl xchg dec xchg jnp bound hlt fmul mov (bad) cmp sarb push push test push lahf adc mov aad xchg scas aad cs push mov add sub mov or pop rcrl in (bad) or es in cltd in add lahf es repz xor mov and sbb les loop adc outsb pop pop xchg push movsb sbb mov (bad) pop out mov add and mov out pop push cwtl outsb xlat mov arpl sub mov inc jae aad std lcall mov xorl or je mov insl xchg popa xchg push popa cmp xor mov cmp adc pop imul out add mov xor (bad) aam lods repnz cmp lock or fadds sahf arpl movl imul and mov add push mov xor ret mov out addr16 mov mov cltd mov pop push pushf pop add cmc (bad) rol or movsb (bad) jae adc daa xor andl push lods lods lods pop push test add and (bad) lock jo bts add cmpsl inc lahf push jno lods ret scas xor test inc cmpl test fiaddl (bad) mov data16 mov push or cmp scas (bad) pushl enter sub jg mov jb lcall add and adc jle add dec lea out incl dec loope and cmp ds mov popa xor adc ds sbb inc andl insb push movsb daa not outsl rcrl jp add out dec sub mov das adc inc aas (bad) fnop sahf pop mov and fisub jl imul lahf pop jp sbb or cmc fwait sub fsubrs push rorb lret (bad) (bad) mov dec aam sbb ret movsb push mov xchg xor inc jns repnz dec aad pop loopne ds fldl xchg call sbb push push xchg gs cmp cwtl pop pop pop add out xchg sbb int3 int push les xchg pop fstps xchg (bad) sti xor rol push jnp std xchg xlat dec (bad) inc fwait add mov int3 int3 ja inc xchg out push xchg aad imul cmp cmp xchg adc stos adc sbb inc inc push xchg mov stos lock xor imul mov jae outsb (bad) add repz dec insl frstor cmp fcoms or jo (bad) adc or mov adcb pop push pop add pop mov xor outsl pop fwait add jo sub js lea mov fcoml loop lret or test inc dec aam add loope xor jge popf mov adcb and jno lea arpl dec leave addl cmp adc sub jo pop adcl add dec adc insl sub cmpsb pusha xor mov sub rorb mov pusha stc test scas scas fsubrp xchg or fadds sahf addr16 out outsb ss sbb in int3 jns push xor push mov sarl pop mov fstpl sub push data16 adc sbb shlb ret pop (bad) jne jns or lods jl and pusha fs and jnp cmp mov fdivs pop test outsl jp dec dec cmp or dec mov movsb adc add pop sbb fldl es out lock andl xchg xchg and cs ljmp jb js data16 leave enter pop xchg xchg cltd push les push aam cmpsl cli popa and xchg out ja (bad) cmp cmpsb insl xor adc jns inc mov imull addr16 adc fild test push sbb cmpsb in in push lds xchg fs cmp mov sbb push lods mov je mov adc mov mov mov push ret xchg xchg add (bad) ja jne aaa aaa sti sti jno out and sbb sub xor jb jge push mov or ja negb cmp addl and dec dec fcmovu sub mov sub incb mov mov push push push push pop pop test leave nop nop sbb outsb outsb xor jecxz lcall fisubrl lods push int3 lret enter mov out jb push mov xor pop push xchg mov add out dec inc ret inc fsub mov push or adc shll mov jne fidiv repz xor xor dec push jecxz pop nop jp not adc jecxz daa loop push rolb push mov in icebp push push call xor and aad pop xchg xchg xchg xchg adc inc inc mov or jae fstpt loopne cmc and subb adc adc xchg sbb pop imul stos jae and mov mov cltd (bad) je sbb sub out or jbe stc std std inc inc adc es hlt jb or fwait ss icebp imul push push inc inc je es es in jle xchg xchg (bad) (bad) insl insl int push push fcmovu and imul or push inc inc mov arpl lods int pop call ds pop in scas shrl push add mov shlb (bad) icebp nop out pop in add insb insb je cmp sbb cmp rol inc or outsb jl inc inc into into push pop in xchg xchg addl xchg xchg fcomp jae jno xor (bad) pushl jecxz and js sbb bound and xor popf add lock leave adc pop sub fwait ret xchg pop std adc (bad) leave jg add scas insb rcr add xchg push adc xor inc ljmp and jnp push push adc adc mov lds jne bound loope ret sbb pop sbb cltd test lahf stos imul xchg stos gs aam jg jb or jg pop add xchg sbb out insl add ds daa scas (bad) outsb push cmp divl adc sarl xorl add mov insl ss push xor pop outsb mov or mov pop mov mov xlat popf pop (bad) cli lock xorl push mov jl imul pop ss or lahf pop test pushf mov mov xchg (bad) push push push sub inc push es push or mov ds jne (bad) loope or sbb dec cs gs cmp cwtl pop nop pushf pushf inc outsb xor mov iret jle jp clc cmpsb aaa adc cltd stos int inc fcmovnbe add fmul into cmp aaa ss out pop out jp fild xchg das stc imulb xchg adc arpl cmpl sahf adc or ja mov daa xor cmpl repz jge (bad) xor jp mov dec sbb cmp shrb in dec adc in test fiaddl ret dec adc mov pushf add xchg cs les pop push mov divb test rcrl cmc js mov loop push fcompl lahf rolb jns add adc dec call jge in test jo xchg xor inc inc inc nop (bad) dec jmp push movsl loopne nop inc add sbb lods adc and mov xchg fwait les aam fcmovnu gs cmc mov cmp mov lahf out repz gs popf dec arpl add pop insb fsubrs addr16 sub or ja push jnp lds scas out int3 stc cs scas outsb ljmp mov ss add icebp icebp and xchg dec cli insb fs and cwtl inc add mov dec aaa in cmp xchg into add test mov push pushf (bad) mov aam and das pop jge mov test es push je pop jo imul shrb push add lret mov jecxz pop inc xchg std pop add (bad) fild in push es aam dec lds and (bad) leave push dec xor sarb lahf xor xorps xlat fbstp add add jo and shlb xchg rorl dec and daa xor out and inc outsb scas (bad) ljmp jp daa pushf xor shlb pop pop ljmp mov inc mov xor lea aas test pusha scas out mov (bad) push movsl push push push rcl xchg stc js gs mov clc xchg cltd cmpsb or in jle cmp and dec xor mov fildll xor inc in in lods dec fsubr fld jmp pop jns shl imul jns dec or (bad) (bad) and mov push lods mov cmp negl push lods fcoms jnp jp outsl mov int3 push cmp add ret aam bound mov mov aas dec movsl fimul mov int adc stc or pop push push shll pushf das push xchg pop dec ret sub mov adc mov push js and nop lret xor mov jne out push sbb fildl xchg mov mov adc mov inc or push shl mov mov cmp outsb outsl jecxz outsl imul or insb adc fdivs sti push mov sarl imul mov push cli arpl call fildll sti das sarb call cltd cwtl pop pop sbb ja in pop stos push inc or std jecxz outsl push mov cwtl stos jmp loopne cmp jmp sti push into mov lods fstl stc in xchg jns push dec lret fwait lcall shl lcall test rol or fwait sti cli jne bound mov movsb mov and or mov lahf loop into cld fwait lcall sub sub pop gs in and and push or add inc inc out adc jmp ds popa dec push push cmc jbe jp (bad) enter icebp jp or cltd jmp cmp and sub mov pop popa xchg sbb xor pushf (bad) mov cmp sbb gs sbb pop psubsb popf pop test xor push sbb (bad) jle popl orb add test call and setle pslld repnz cmp ss inc (bad) (bad) stc stc movb (bad) mov ljmp pop mov jecxz mov nop xstore-rng cmpsl xorl maxps or or repnz leave inc arpl fisubl cmp mov pop test push lcall sub xorb lock xor inc addr16 hlt xlat (bad) mov xor stc popf add xor jbe div popf push test nop loope push rol sbbl aam jl in pusha xor bound mov leave and pop cli cli rclb ror rcrl in mov add repz dec cmp lcall mov arpl sub jae mov mov (bad) cli jae push (bad) lods iret mull jnp jp and inc adc xchg push jg scas inc pop aaa and (bad) jb push fistpll in repnz out inc mov mov loop das pop out push movsl movsl mov sub pushf mov in movsl pusha sub pop mov mov push test jno int fwait pop rcrl xor gs rorl fsubs pushl dec lds fs scas scas push mov push xchg aas pop bound repnz dec and or loopne inc popa in inc cs (bad) pop xor sub inc sub fisttpl or rorb mov imul jno lret into mov push cwtl in imul inc pop add mov movsl pushf std dec nop in xchg into adc lret repnz mov in push jl pop movsl movsl test mov pop insl dec xchg sbb cmp push movsb std arpl out imul push aam mov loope outsl add inc inc fnstenv adc add js add adc jno sbb sti xchg push xor jmp lret push es adc sub mov repnz pop pop aam jle mov sub dec add pop dec dec out inc mov mov ds es and mov sbb add fldenv or inc ds push aaa test xor leave dec test in pop rcrl ds cmc mov lret xchg jecxz add xor jnp fstl xchg sbbl xchg aam jno jnp stc jecxz mov add xchg mov (bad) xor aas aad mov mov add push sub imul popa add subl rcrl je mov mov int or pop ljmp fistpl test in sub xchg mov lret sbb sbb xchg cli and js jns jmp int3 cmp lcall (bad) dec mov adc sub mov mov xor in mov push cmp mov mov stos or lea jle push or ret lods subl adc ja xor bound fcoml or addr16 sub mov lods add jmp rorb lods lock addl jge ljmp jmp pop or dec jg,pt push jle jno rclb ljmp xchg and jbe daa int3 adc dec aaa jl or je lds in outsb repnz inc inc cmp dec or fcmovnu inc xchg mov and clc xchg mov out dec les lock pop outsl lcall stos fnsave je add mov cs dec arpl (bad) jbe jne popf sub mov mov call sahf lods cmpsl add (bad) pop mov stos sbb push mov lock jmp cmp inc inc (bad) insl (bad) pop jo pop scas pop lret sbb pop std imul inc sub fidiv sbb inc cbtw fs cmp mov loop negb in sti sti ds jle sub in inc sbb and cmp cmp adc xor sbb jp fcoml adc mov cmp cmp dec or dec rcr mov mov aad xchg fmull sub sub inc add ds in adc xor jns and sbb pop add jge xchg pop icebp nop (bad) mov imul add and div (bad) dec cld mov mov pusha lcall mov jmp addr16 and and add add loope frstor outsb into out mov mov cmp cmp flds div mov hlt dec sbb inc in subb cmp jp or insl cmp inc into push or pop push push in mov dec lock (bad) push push outsl adc mov (bad) push mov or cmpl jl push mov sbb mov imul push (bad) insl fcoms and mov push les sti fsubrs pop pop inc push sub jo enter sub es test xchg test add sbb loopne push movsl movsl sarl xchg mov das jp sub lock clc xchg loop mov xchg sub ljmp fbstp xchg dec sub pop push and lahf rcrb cwtl inc add dec mov ljmp dec aas cmpb test sub (bad) lods daa repnz movsl sbb jae adc test jae addl arpl inc pushf push sbb push fist outsb or sbb orl add jbe (bad) flds imul adc repnz pop je jge hlt pusha sbb push cmp cmp mov jle push (bad) lods not push (bad) sub jge inc xor add or sbb data16 jg inc test mov scas lods arpl mov ss mov add fcmovu xchg pop push dec sub dec cmp cmc pop bound cmp ror mov test adc xor fucomp mov out pushf mov sub mov xor bound fcmovu popa movsl inc ret ret dec sub or or dec inc inc cmp pop sbb loopne pop mov std sbb aam movsb sbb mov (bad) xor inc divl inc inc mov push mov inc inc push mov loopne cmp rcr mov adc mov mov loopne icebp jno pop jmp outsl (bad) fsubl data16 fwait sub ret or sbb xchg mov lea or lods out adc add jge sbb into ficom sahf clc test sub dec xor enter mov and and add es icebp aaa (bad) mov xlat cmp (bad) xor adc mov mov shrl lock dec dec mov ljmp sbb daa push popa lock sub mov jecxz dec mov sub insl ja imul mov pop std cmpsl in sub fwait jae ret push in outsb nop lea outsl in lods sbb and imul mov cmc and out and jbe inc mov cltd in lahf mov clc flds jmp push jnp repnz mov fildll divb pop inc lahf pop dec cmpsb ffree dec mov jno push movsl lods lahf jmp mov sub jnp aaa inc xor add push and inc mov and and inc adc mov enter iret int add rcrb push aad pop ret rcrl mov repz push rol (bad) cli mov jp into cmpsl mov jae and add pop aad test loopne shrb or mov sub loopne daa fldl2e mov inc sbb pushw inc (bad) cmc pop test adc sbb dec sbb shll adc xor adc es out add shrb je inc repz fsub (bad) xlat loopne in jmp scas pop push cltd popf rcl sub je push (bad) sahf in out insb pop jo adc jmp add jle repnz lods fsubrs jnp mov xchg ss or push cmp adc pop xchg or movsb scas stos inc adc fcomps jno mov mov aas mov inc inc cwtl jb add dec cmp in xchg pop jmp xor xchg popa or xchg xchg stos cli push lcall stc mov inc subl adc fwait and fist nop dec icebp mov scas jnp push or dec pop loop test iret mov arpl jo lret daa pop and (bad) les pop dec (bad) xor shl lea push jae cmpsl pop nop nop mov pop lcall adc cli xor or cli data16 cmp cmp mov (bad) loop mov pushl cs dec repz data16 cmp loop icebp repnz push pop aaa jle outsl and push add fidivrl ja or push lods std popa pop sti popf push pop fildl je mov jge outsl dec enter mov fadds fnstcw adc adc std clc clc clc adc imul dec dec (bad) dec fwait fwait in mov repz gs orl ret sti pushf lret adc xchg rclb sub addr16 mov lea enter ljmp sub fimul push mov adc or mov (bad) mov scas insb fs fidivr mov sbb cmp loopne je xlat xor stos divb aam bound inc mov add lcall mov cli incb jl sbb in outsl and cmc jl xchg out icebp sahf lahf movntq adc std aaa imul jb add or adc stos (bad) test out mov lret xchg aaa lock in movsl std add and inc sub pop pop mov xlat cmp mov mov sahf cmp out stos xor popa out insb cmp mov fnstenv sub adc ret sub push mov push add (bad) stos insl mov mov xchg push mov pop xchg arpl pop insl enter in outsb push add insb in push sbb dec les fsts mov pushf mov and popa (bad) repnz jge ror test outsl lock push cmp mov inc inc cmp (bad) xor jp lods repnz sahf (bad) (bad) and dec shl std bound jb adc sub xchg push test fisttpl mov roll adc sub mov push cmpsb inc dec (bad) xchg stc jns decl leave insb dec pop jnp jmp pop arpl mov enter ss roll iret mov or add into xchg sub xchg push mov fwait lahf inc adcl inc sbb and loopne dec push push (bad) and daa mov movsb mov sub out test xchg sbb fstpl outsl cli shlb fucomip adc jl in add ljmp jo pop cmpsl jns push faddl les pop sbb imul icebp or or push mov pushf and int cmp mov xchg push aaa add pop (bad) in mov and inc icebp mov xchg mov adc outsb xor cs stos loope jbe movsl inc sub clc pushf cmp adc mov pop jne adc mov mov pop add pop adc sub call ljmp jae xchg test xlat shl mov or and mov xor aas dec jmp mov bound test insl fcomps sub or or in jo cmp adc mov inc mov add cmpsl pop and xchg jge adc rcl xchg inc mov or into pop or ss mov sub adc out push push lahf inc jb scas jo imul outsb sub and ljmp inc xchg aad lods jbe fild or or scas (bad) sbb movb mov inc jno,pt (bad) or mov mov sub fstl dec rcll adc insl bound out mov mov mov cmpsl cli sti and call inc pop cltd sarb movsb add jl pop xchg inc xchg xor stc dec and outsl mov push push test jle pop pushf and xchg push lds loope je test dec dec outsb icebp int sbb jmp xor mov sbb call or jno pop es repnz xor sub mov jo adc insw scas and stc int3 mov lods lods es jmp or mov adc jae aaa inc inc mov jge add pop or movsb inc cmp pop add bound inc outsb inc inc es or (bad) ss sbb or push aad fnsave xchg fiaddl pop and pop out std inc jno (bad) or mov sti imul xor arpl xor into jle mov push mov sub jns push pop mov mov mov inc insb mov sbbb adc or pop lret (bad) push inc out movsb in sbb sarb mov stc (bad) xor in mov push iret aad xor inc out xchg jnp (bad) in popf mov stos cs jge daa pop cltd cltd pop xchg neg xchg je sbb pushf pop push adc cmc or mov sbb mov xchg xchg jmp add and push (bad) ss imul incl lret insl ficoml nop pop sbb jmp lods xchg adc nop leave fstp add add jae fld (bad) jl jne cmc inc add test div not xlat xlat addr16 ss (bad) jb fsubs pushf cmp add out and cmpsb shrl ret or cmp imul xchg in mov es dec repnz fcmovu popa xchg jle fadds shll clc jle sbb lcall push xlat push out xor leave dec mov push push data16 mov fdivl mov pop stos stc int3 pop fcompl push stos jp jns inc jnp clc clc ss adc jecxz insl mov call jno push push mov lock out mov jbe aas mov stc inc add das das cmp (bad) (bad) (bad) (bad) and add inc adc sti fimul pop cmp mov pop or test pop push shll jb movsl push mov sahf pop mov jo mov sub insb inc and mov push mov adc into inc and ljmp pop pop dec pop aaa jmp xchg jne fdivrl cmp ds and aaa scas (bad) fstps (bad) jae sbb cmp sbb ljmp push mov jecxz leave dec enter fstl jbe cmp stos outsl xchg mov add cld lods fistl in jne inc das test hlt or shl xor ror out jmp aas jmp movsb add repnz or push mov mov lcall dec (bad) (bad) stc test mov (bad) scas sub scas addr16 jns scas inc push lock mov js ljmp pop cmp mulb arpl mov adc movsl push (bad) lcall into push sub mov mov dec sbb paddq sbb iret mov sub jo popf cli sbb (bad) lock sub and movsl call push cmp fwait sbb arpl sbb (bad) cmp lret addb push push lea push xchg mov aad xchg mov stc jg or push pusha mov jg mov test jo aaa mov (bad) push pushf out cltd cltd cltd adc dec sbb (bad) mov ret mov sti push push xchg mov sbb pop dec dec std or pop adc repnz outsl pop rcl popf (bad) stc pusha popa fcoml inc or cmc sub adc loope aaa sbb push dec pop xchg pop adc lods or js cld ja jae jg inc fdiv jg or mov lret jns enter sub frstor and mov cvtps2pi out es xchg mov aam shll lods jne push or cmovb out daa push mov mov inc into ret push and cmp push adc iret xor mov fdivl xchg out insb jmp adc mov fildll and or push rclb addl scas es push (bad) bnd imul cmp es (bad) adc push push mov mov fnstsw push jle ss inc int3 lret icebp lea jge call xor push adc jb sti stos mov not jae in test sbb pop pop fnsave xchg arpl lcall xchg mov loope inc aas out and mov adc sti and lret mov mov xchg or shr mov out lahf xlat sbb add lea push call lods out mov ss and in cmpsl movsl push (bad) (bad) sub clc push mov xchg adc stc faddl imul sub pusha fwait inc iret mov inc xor mov inc fidivr fildl scas mov fcompl cwtl pop ss xchg cmp mov mov lahf cmp je (bad) jmp std xchg mov scas push lods lods lahf stc xor push or lcall ret jo je or mov mov jp or mov mov repnz cwtl jnp imul movsl mov adc dec mov lret jmp jne mov mov fwait and fnstenv inc roll imul loopne xchg xlat dec cmp dec mov ret ja add pop mov mov aaa push xchg inc add int3 mov test mov sbb pushf xor rcll adc enter mov adc sub pusha xor stos sbb xchg sub cwtl jge mov ret xchg adc sub cmpsl ds loop mov push mov jge aad xchg adc pop adc aas clc dec add pushf pop push xchg out aas mov inc dec mov loopne not stos insb sbb mov ret xor push pop pop lea mov imul xchg pop pusha and xchg push pop cwtl pop cmp outsb ds icebp mov jae dec into inc sbb aaa and fcompl cwtl lcall lcall loop add sbb aas mov jl test mov in mov popa sub je jmp ds mov scas imul sbb push mov and sub or xor cmp clc ret and ss mov std add sbb add leave fcoms push mov rcrb cltd fldl xchg mov xchg aaa pop adc stos mov popf adc pop pop inc xor in cld int3 int mov aad mov dec (bad) fidivl push mov or cmp shrl out mov jnp mov push mov testb outsl pop rcrl push cmc dec cwtl mov pop pop bound jae mov lret arpl cld and mov cmp fcoml cmp sbbl jp pop push mov dec (bad) in cmpsb sub insl jge mov movsb and mov mov pop xor sbb jmp stos popf or dec in inc out cmp je fwait jl inc xchg inc sub adc je std sbb dec add stos stos pop iret mov enter mov cmp lock or lock and cmp xchg fisubrl es aas or and lret ja test std std aaa mov stc jb aam das pop (bad) rclb pop jecxz inc lret test repnz mov xchg inc adc paddusb pop push lock cmp int pushf xchg xlat push fs aad adc cld arpl pop (bad) sbb gs sub mov lret dec dec into into cmp jo rol gs jnp lea int push dec mov das jmp mov xchg fcoms dec cwtl stos and ror popa (bad) mov jno inc flds mov stos into xor mov or xchg mov pop cmp sub cli orl pop in cmp cli (bad) leave adc bound xchg scas in sar cmp pop outsb lcall mov js adc jl roll inc jle sbb mov out sbb adc sbb in fnstenv mov xchg out test xchg push nop xor push adc sbb mov jae xchg stos ja lock adc pop jns and (bad) mov inc outsl pop pop movsb mov outsb and je (bad) sbb arpl push adc test jo aam mov aaa and dec out test mov lods div insl (bad) fcompp sbb movb fnop and out in mov xor int sbb xor pop (bad) pop push xor cwtl and ds dec roll popa mov inc repnz (bad) test movsl jno js cmp test add add ja mov adc loope movsb aad mov fsubrs movsl and outsl xchg xchg xchg add (bad) mov add fsubl xchg ds or enter lret imul cmpsl push xchg pop inc inc ds cmp sahf jnp dec test test mov or fs cmp dec repz (bad) xchg insb push sub out movsl fildll sub imul nop gs inc sub sub rcrl and inc push mov cmp lods inc outsl lods lods out mov ret rcll add fiadd mov push pop jnp push popf jne sbb in aam cmp sbb mov ss mov nop jecxz mov xchg hlt sahf adc xor pop popf sbb and insl mov add mov push call fcomps pop sti int pop test xchg sbb out out add mov xor fs jb movsb rcl mov add mov jge sbb mov call mov rol (bad) xchg loop test pop fldt sub into arpl repz sub insl pop pop clc in xchg mov jno popf push jmp mov add (bad) leave mov inc inc mov aam lret outsb lahf add jmp les cmc pop lods in jae pop arpl popa jb xchg ret mov mov cmp stos xchg and hlt push int3 or push xchg repnz sbb mov push push icebp dec sbbb data16 ss jno mov jns push imul or and bound inc adc addl jns aad push movsl movsl and mov cmp out inc inc xchg push outsl cmp mov push pushf loope jg mov mov add cmpl in test lret xor dec nop testl int3 cld (bad) cs push push add les cmpsl cmp push (bad) ja sbb xor aas jb jge jae iret or sub mov jg (bad) pop aam xor fwait mov cmpsb shll sbb cmp cmp lods lods out cmp push cmp test add pop cmpsb mov das mov push (bad) cltd pop add in test popf ds in addl mov leave sbb mov enter xchg pop imul pop push lret dec xlat rcl or not (bad) xchg add test mov push jnp push xchg fnsave cltd jbe jbe mov inc inc adcl push pusha sbb das cli mov stos scas mov jo adc shlb test mov jnp xchg pop inc inc inc pop and addr16 test pop dec mov loope pushf add jecxz sbb mov jae push adc aam imul outsb fcomp xor dec dec mov les adc inc out pop mov mov sbb (bad) rcll and rclb (bad) push or cmpl jb or call cwtl je int aam mov mov and dec xchg cs adc adc add mov shrl push pop xchg dec cli jge bound mov jle cmp nop (bad) xor push pusha pusha cmp and test hlt dec aas icebp aaa push stc stc pop mov jb push inc adc movsl enter jecxz (bad) jne scas out add xchg adc sahf or movsl (bad) cmp inc add call adc pop adc push add adc xor xor mov sarb ss pop mov xor (bad) xcrypt-cfb cmpsl and push imulb fucomp arpl lds (bad) iret in cs cmp jno inc fild pop les push sbb jl,pt stos cmc dec push adc mov imul outsl cltd repz (bad) mov dec sbb push pop pop mov cltd fs inc add jmp pop sub and test lods scas in push rcrb xor clc pop (bad) out push popa lods adcb push and jl cmp out fistp inc lcall fldenv jae pop sub loop mov add (bad) xchg sbb mov gs mov jns jge mov adc mov (bad) cltd fdivrs dec push shlb jg mov cmp rol repz cld mov fbld cmp xor mov out pusha and xchg in enter mov int3 inc mov push push mov icebp out mov cmp rolb popa out add in dec jns or adc inc sub jle ret adcb mov mov jmp pushl mov orl test ja sbb push int3 lret lods adc iret inc in jg frstor repz pop lods lret jbe push stos mov xor mov or xor scas xlat and xor test mov fbld (bad) lret jge jle je mov mov sub (bad) cld mov cmp nop lock dec out jmp pop and add mov pop aas dec ljmp stc in mov mov push pop jg ret icebp dec icebp or jge ljmp stos xor adc dec dec push push add mov in sahf rcl (bad) aam mov sub cmc pop xchg idivl pusha cmpsb cmp push test sbb pop jg lods imul test std aaa scas cmc data16 je and and pop lret inc repnz or stos fstp jg stos ds mov add adc ret push add loope repz dec adc insb aad loope imul mov cmpsl out out jae or pop int mov mov mov gs push push or pop add aam addr16 int3 movl les dec or push push push hlt lret lret mov popa and das sbb orps mov insb outsl cmp (bad) (bad) int movsb loopne ss mov stos (bad) lret adc aas aas jg movsl std pop repz gs or and sbb pop imul daa movsl rcl push push aaa add movsl jbe shrd fs pusha jne outsl mov mov mov cmpsb push inc adc call bound xchg pop aaa ja das mov sub fcmovu repz xchg stc jne arpl daa jno in push mov xchg sbb sbb sti jmp fstl stc cmc mov repz (bad) sub (bad) mov jb les loopne lret aam lock pop out adc and and pop add lds sub enter ret push test daa or jp adc mov icebp icebp sbb jecxz jns sub fs xor fildll sbb and add jo ja sbb (bad) jno popa push push cmp movsl bound adc repnz pop gs mov lock iret push das sub cld adcb mov jb pusha push push in and mov sub pushf test xor aaa inc adc push call int repnz jne or inc es repz inc ss xchg jmp and xor xchg scas xchg sub jmp sub jae push mov and jp cmp push jp lcall sahf lahf push aam push or and outsl xchg ret lret imul enter push jp jp es xchg fisttpl sarl cli das mov js cmp in xor call adc dec add out sub mov addr16 je out jae movsb cmpsb adc hlt nop sub jb or data16 xorl add cmp mov jle cs pop add lock inc pushf jno xchg inc inc fidiv adc lahf sub inc repnz addb outsb repnz mov out sub add push test lds mov mov lret mov jmp (bad) jp insl aad (bad) mov ret movsb dec and mov insl mov bound lahf pop dec loop or mov sbbl or adc pop mov loope rcrl mov mov dec dec pop fisttpl or add add nop dec xchg push mov cs and scas jne or popf jecxz outsl jecxz cwtl jbe leave add or (bad) jb movsl hlt ret nop pop add lcall or orl push add xor push call mov adc mov push das outsb outsl or add popf pop repz or into inc ret jbe sbb sbb sti andl push mov jns and mov scas or (bad) jno popf les dec es ja sahf lcall and loop adc add sbb lods mov sub mov xor sub add adc mov daa clc xchg and push push cmc push fisttpl mov pop mov int3 leave test fistl in imul in bound mov pop (bad) pop push jmp je fs mov adc add fisttpl lahf mov pop or fcom sarb jp ds repnz jle mov add (bad) push and jbe jno push mov mov jg xor scas test push mov jno popf dec inc in lods and inc mov jae push fadds jmp xor (bad) ret pop pop push frstor ljmp inc jmp sbb (bad) pop clc insl adcl out and ret rcll mov adcl xor cli (bad) lods cmp (bad) cmp pop add loope sahf dec outsl idivl mov (bad) and (bad) mov das stc sbb sbb sbb or lcall jmp jp cmp dec xlat xor (bad) pop mov fbld jl sbb lods push pop add arpl add jb inc rclb popf rcrb jg daa data16 push pop jl mov sbb mov mov jno fsubs (bad) jnp mov dec mov adc js xchg add das or sbb xchg sub js in addr16 es mov cmp mov int cmpsl in mov sbb and dec dec cmp cltd popf mov xchg mov sbb dec ja add xor mov xor sub fs (bad) aam scas push push scas pop pop add sahf and inc loop mov push lods mov pop xorb jmp jns cmpb xor mov mov stos sub or mov add mov cmc dec notl in mov mov add sub sbb lcall adc (bad) shrl cltd cltd cltd adc add (bad) aad jno (bad) xrelease movsl and inc sti xor mov jle gs in mov mov xchg jmp gs xchg add js addb xor aas dec lahf clc popa lock loopne cwtl shll movsl push js out ja jae inc inc inc jno ljmp jo mov out xchg fnsave outsl xchg stc enter cs outsl mov xchg sub popf test cmp aam fadd in mov and pop pop xlat stos adc pop (bad) cmc dec andl mov hlt push cmp nop icebp cmc mov mov (bad) pop insl insl push jp icebp xlat out jp add out xchg xchg rolb inc je mov cli fbld adc dec push pop mov jnp dec lea jbe pextrw push pop (bad) push xor repnz out mov mov scas sub inc xor and xchg jno popa push lods xchg lods fimull pop dec repz push std dec add arpl push push pop xor sub mov (bad) add ja int aad ljmp pop fstpl test cwtl pop cwtl pop inc jmp out call adc cmpsb stos fwait call xlat xlat popa lods out sub push (bad) xor stos fsubrl pop inc in and push adc mov inc xor sahf popf outsb test insl insb ss div insl stos ficom pop jle fcmovnu adc jae sbb mov (bad) or in cwtl loope or xor dec (bad) xor into mov adcb mov sub adc ja dec jns pop rcl lea imul bnd jle imul xor add sub scas jp xor add loopne ja lock int3 js or in mov add stc stc add je mov jno insb or movsb mov inc cmp lret fnstsw mov pop movsl lock dec adcb aad adc imul ret andl (bad) gs xor mov cmp negb lcall addl jnp fs addr16 dec inc inc cwtl cwtl loopne dec sbb repnz dec push insb adc xor les addr16 inc or call (bad) mov and push jo mov popf mov outsl jne ret test push out cmpsl icebp (bad) fnstenv gs push sbb pop int3 adc dec ret or push mov orb pop sbb add add test outsl outsl pop pop ret jge sbb into fcoml dec fisttpl pop mov shrb sub popa adc leave aam cmp loope add mov jae int3 push sbb mov fwait sbb (bad) jno add mov dec dec mov sub fnsave pop fnop ss fadds cmpsb push sub adc mov jle sub popf mov out inc jg cmp out outsb ds push std stc aad cmp mov sbb inc mov test imull and inc test pop ret data16 mov fwait add push addr16 jbe push jb fnstenv and sbb test lock (bad) jl jnp lods and sub jp jo aad xor jb jb add shlb jg mov jo cmp lret jo or lret xchg imul inc mov repnz add mov pop inc dec jl in icebp xchg dec repnz test testb fidivrl arpl cld and rol adc jle lret daa int inc mov add push shrb in mov push sub (bad) sbb dec xchg ds lods push test push stos test (bad) roll das or xchg cmp mov jne aaa xchg (bad) out fwait jne inc mov add add sub push fbstp pop fldl mov flds add xchg rolb sub (bad) jno pusha xchg and fsubl inc pop sti dec push push lds mov rorl jae vmovupd rcl movzwl sub mov mov pop insb repnz mov jl ss lock push dec mov pushf je out popf insl (bad) loopne movsl push (bad) cld lds xchg vcmppd imul push ss es test cmp mov ds mov xchg push and push push or inc inc pushf pushf in dec dec or cmp mov ret jno inc fnstcw mov dec inc (bad) or sbb sti stc lcall test cmpsl push xor cmc jmp xchg dec ss cli dec ret das sbb mov outsb imul ret callw mov dec dec mov or or xchg push (bad) mov adc js popl add scas in push (bad) adc push into fnstcw lahf movsl mov pop pop sub ret and mov fistl aam mov mov mov xchg fisub and ret or mov xor lcall mov das aad movsb or dec pop pop adc pushf pushf xchg dec enter sarl js (bad) fbld cmp cmp dec and lds sub out pop push pop (bad) xor adc jb sbb ficoml cmp jmp bound ss rcrb push (bad) cmpsb popf mov test arpl cmp incb data16 pop out ret mov mov adc jns aam out jmp scas add movsb add addl pop (bad) out mov or inc adc les je int3 std rcl psrld xchg rcrl shl jbe add jbe inc inc cmp or dec out test mov xlat test inc add mov out (bad) jle and clc adc cs loope mov mov gs sbb out mov outsl adc cmpsl leave add cmp std or inc pop mov outsb push sbb mov bnd push push incl or adc sub xlat in sbb aam ljmp mov in out int3 mov iret dec dec push mov mov push mov fwait cmpsl fdivl mov mov bswap test cwtl jnp mov jl and mov popa sbb sub cmpsb (bad) xor movsb cmc xor mov cld sub or push ljmp sbb dec icebp stc xor jno popf push inc adc jne int outsb cmpsb mov jne mov inc inc dec dec xor add imul pusha pop out adc xchg push cmp jg xchg fimul push lahf lds sahf imul imul fsubrp xor rcrl jbe add pop add into xchg repz ljmp or fisubr pop lods cs addr16 imul std mov mov xor sbb mov cmc stc lea sbb adc imul (bad) or xor lret lods mov scas decb jle (bad) shrl in xchg leave jno cwtl mov or stc adc xchg or out pop (bad) nop sar movsb ret je popa cmc call push push sbb in xor push push pop push add jmp daa (bad) jg dec inc cmc sub rcrl sbb cwtl data16 mov fwait (bad) es lds push je ret clc inc add push loopne mov pop pop rcrl mov sub and xlat adc dec (bad) fcomp arpl jae push mov and out lea jae jae cmp insl insl xlat mov lods out inc sub lods xchg cmp fidiv int loope sub push stc icebp jae sbb frstor aas cmp cld mov inc add push aam data16 ds ja and mov push and ds sahf popf movsb (bad) repz testl push add pop xor dec mov add add lahf pop jno jnp stc jae or add ja scas and xor adc addb sti inc ss add mov mov mov ss xor in add in or mov add bound jae imul sub sbb mov cs and lahf loopne sub daa pushf pushf inc mov ljmp mov dec mov mov inc or stos outsb imul shll add rorl stc icebp dec dec push xchg pusha xchg fwait out inc rclb adc xor leave mov mov pushf jno data16 lret dec (bad) mov idivb mov xchg pop pop sti sbb movsb gs pop arpl dec out lahf fnstsw jmp insb test cld mul xchg fisubrl xchg movsl hlt mov lock jnp repz aas inc es out (bad) stc push sarl and pop mov jecxz pop sub fisttpl push pop cmp xor ja aaa insb pop lahf in xor jb mov vpsubd (bad) bound ret xchg push mov out sub loop inc leave js mov mov (bad) fistpll mov xor jnp test or pop std inc sahf push or in andl dec js push cs adc rcrb lahf pop (bad) mov fnstenv notb xor imulb aam imulb jbe (bad) fwait in int adc sbb lret outsb js das pop in mov adc inc mov rcrb pop aad scas rorl sti pop (bad) mov jbe popa cmp dec mov movsb push lods adc mov xlat add mov in test scas pop push push (bad) dec loopne imul or pop (bad) jp or xor scas scas push adc fdivrl (bad) nop pop (bad) xchg fwait les aam adc xor xor outsl fidivr lods loope adc push lea mov aaa (bad) jae (bad) mov fadds cwtl cmp dec jmp mov push push push pop and inc js mov and jp jbe out nop jb mov data16 jo sub xchg adc int3 insb xchg xchg (bad) test (bad) pop push xor cwtl mull push mov mov push aas lock outsb cli pop add arpl or add (bad) jle test push inc jle cmp sbb movl mov xchg lock mov cmc leave enter fdivs adc scas arpl sub sub mov cmp data16 lcall or or jne leave int ret jmp insb imul xchg imul mov (bad) mov mov xchg push pop sbbl sub mov xor test mov out rcll (bad) inc ret test sub mov dec (bad) sbb mov (bad) mov fwait cld pop xor and pop mov cmp sub sbb xchg lret mov mov add cmp gs jl and jl aam jo pusha xor mov add cld incb cli in bound pop adc (bad) incl or inc push ds aad jg daa repz (bad) cli stc or push andl or in mov jno rcll pushf push jmp insl imul sbb jg fiadd lds inc fldenv pop fmulp cmp fs sarl loope repz inc bound (bad) js rcrb or aas ds inc mov pop iret test adc add adc adc mov cmp stos (bad) lock (bad) into jp lea outsl cwtl in pusha fstl negl cltd add jmp adc jne ret test outsb hlt sbb mov add pusha jo test pop sbb iret jno cwtl loopne ret inc inc sti or in dec and dec pop sbb aad loop adc sbb push push mov cltd xor xor out imul cs (bad) dec lret mov mov fdivl mov sbb outsb daa mov mov and adc sti lock rcrb je out bound bound (bad) sub xlat cmp sti and xor cmpl pushf cwtl scas jmp add sub daa flds add aad insl pop pusha mov push push in add jae sbb std mov jle push xor repz dec dec dec add and fwait lods insb mov loopne add pop fcmovne lcall pop fildll idivb imul xchg xchg js (bad) (bad) sti aas adc jl call mov out ja or pop loope mov mov sbb ret mov dec mov rorl out or or xchg xorl incl cwtl inc push cli sti test dec jns aad bound mov insb add dec pop and out stos push xor xlat arpl arpl cwtl inc (bad) popa daa pop and pop adc sub outsb sub mov lods lods sub shrb xor push add icebp aas mov xchg xchg icebp jp nop test mov jmp cmc jg fwait adc inc mov inc fildll push and stos (bad) sub sbb xchg fildl mov lret jp pop daa push rclb jne mov or aaa jns daa ret cmp lahf das xchg scas xor jbe and fisubr iret inc das repnz (bad) test add std jb mov dec int aam sub mov repnz lret mov mov inc mov jo mov push sbb movsl inc inc xchg mov xorb cmpsl push insl out add adc adc sbb xchg stos stos out mov jp insl xchg or into cmp push cmpsl cmpsl mov into enter sub sub movsb enter xchg inc push (bad) mov loopne (bad) cmc andb bound mov lods les pop es add xchg push push push loope sbb lods insb scas stos cmpsl cmpsl jge or or dec dec or jp cmp adc pop fistp leave jno push orl sbb mov push rcl xor mov cmpsb sbb out adc pushf pop xchg xchg jmp fcoml outsb je pop xor in inc inc mov pop xor dec lock in in mov les and cld ja add inc lret loop add pushf lcall out imul stos out cli arpl xchg push hlt pushf pushf cmp and xchg and xor pusha cmp push (bad) movsb sbb jmp mov (bad) insl jg mov mov cmc jle push adc (bad) push cmp and push hlt pop enter mov push data16 cmp cwtl sbb jbe shrb pop push sahf popf rcl cmpsb gs ds lcall leave xor adc outsl js adc push adc sub mov xchg adc test out stos adc add jmp ds dec scas test (bad) inc (bad) jmp inc inc es in ja lock mov mov aam jb mov es mov xor sbb add push fisub aad stos in out mov fnstenv sbb push add sbb js imul inc inc pop mov or in test cmp ljmp aad int3 rcll imul test dec jae mov xchg cltd dec and out sub sub xor xor leave cwtl mov push and in pop je jbe jecxz push lcall add out push fisubl aad sbbl pop xor dec in xor addl sub jmp loope popa ja (bad) outsl cmp inc jno inc fsubr stc divl (bad) sub lcall dec cmp fnstenv loopne addr16 cmp xchg or es bound mov push inc pop jb lret pop or xchg movsl movsl mov sub pushf pushf inc call bound adc fldt leave cli lcall xchg ds fidivrl xor jle int3 (bad) mov (bad) mov ret (bad) lock iret inc add push aaa inc inc cwtl sbb cmp ljmp les ja inc or cmp mov loopne (bad) sub mov dec movsl push jno push shrl ret mov (bad) jl sub in sbb jmp xchg cltd push (bad) pop add iret daa (bad) imul rcll add mov ficoml inc pushf jo jns ret scas mov imul mov jae mov enter mov in push sub into jbe in in add jae mov pop iret test scas mov adc (bad) jae push cmp mov xor xor pop and sub (bad) ss mov nop insb pop frstor (bad) adc das sub or or popa insl mov rcrl inc ret push clc (bad) movsl fcmovu push mov xor xchg sbb in xorl pusha jl mov cmp pop mov shll mov stos xchg stos xchg sahf sahf mov xchg (bad) mov push movsl fsubrs add push aaa pop mov in sub lods push ja cmp jbe jno push fcmovu test adc cmc stc cmp push enter or repnz iret sarb jmp add into sub or jle cmp mov sub hlt push icebp pop imul addr16 std fwait loope xchg jmp jecxz and ljmp das mov (bad) fcomps and pop pop adc movsl outsl sub mov inc fwait sub inc dec cs cli lods and sbbl mov sub lahf (bad) sbb xchg shl jae lods xor or jle add imul in xor ret xchg ficomp enter leave xor fidivrl sbb jge lock xlat jle pop (bad) bound push jecxz add dec xchg mov cmp test int aas xlat iret ja mov addr16 lret (bad) jnp and (bad) bnd (bad) mov es stos (bad) aaa stc mov or or pop rcll jb sub xchg test mov and fidivl sbb mov es (bad) mov int mov aaa mov ret out lahf stos je (bad) scas adc mov (bad) std mov hlt stos addl mov inc (bad) fdivrl adc pusha (bad) cmp mov and mov and pop addr16 addl dec sbb xchg das popl xor inc in add dec jno test std jbe pop in jo jnp push popf lods sbb fcoml xchg (bad) mov jbe dec cmpsl mov xchg push cwtl aaa xor inc lret insl insl popf and pop jg push mov jae xlat fldcw xor stos or jne imul pop mov cmp sbb mov inc add xchg aas push sahf pop pop pop jg or (bad) into adc mov sarl mov inc mov push mov sahf loopne scas push push mov (bad) jns push test cmpsb pusha sub add push pop leave pop pop inc add das push sbb stc js test inc xlat xor (bad) dec clc inc push or xchg or orb dec dec out inc push jp int3 mov mov sub xor lds adc popa ret pusha aas scas dec dec or sahf test mov neg mov mov push popf dec dec cmpsb out (bad) cld pushf push ss lods lods es sbb icebp mov or adc inc add in jb and cmpsb dec insb xchg mov data16 lods in fnstcw cmpl in or mov loopne rclb push fdivp movsb pushf jo or arpl jmp lret mov lea test or mov call out in sbb mov push sub jg repz push or mov push lret je pop dec mov bound repnz sbb mov sti xchg sbb fistl frstor (bad) loope stos outsl xor aas jge jbe add insl mov xchg gs jb sbb mov int inc aas loopne insl pop rcr mov cli cwtl cmp mov cmpsl or popa gs sub cmp mov shrb adc sub lock pop and pop int3 fldt bound aam bound (bad) scas imul lods add dec lret mov roll pop dec push push movsl xchg ja fwait sahf pop jns aam stos mov mov cs mov add add pop sbb imul roll inc push add jg fs mov fucom ss xchg and xor push xchg push sbb mov dec dec or mov xchg daa fsubs adc xor lea dec clc mov ret push sub data16 or jecxz xchg jle inc inc fcmovbe add pop das xchg nop (bad) (bad) aas iret cs cmc cwtl repz pop dec sbb (bad) js sbb inc subl movsl movsl xor inc in or dec (bad) mov insb adc mov push adc call add push (bad) adc dec add and add aam jp sbb lock sub mov decb (bad) xor adc xor loope cli dec adc jae sbb (bad) call jg xor test sbb adc pop xchg arpl fcoms xchg shlb sub int sub push or dec mov out in lods repz imul cld and rolb and cmp (bad) jae xchg lds adc mov test loopne jl bound and inc sti cli rcll dec mov xchg cwtl ljmp jno push xchg popf popf rcl mov cmp out jl pushf inc inc cmp push sub repz push scas lods lods lahf lahf out or or lcall dec dec je jp add xlat pop sub negb sbb mov or imul dec inc mov mov pop or pop outsl pop arpl pop push lcall push pop pop test fwait push push (bad) and mov sub and cmpsl (bad) xchg mov adc shrl push sbb jl ret bound daa cmp lods lods jmp ds adc pop ficom popf in test andl xchg lds ror loopne nop test add fs fdivrl adc jnp (bad) dec mov add mov scas aam ret out sbb idiv cmp negl sub mov fisubrl std mov andl arpl add dec lahf xchg std std aaa cmp rorl (bad) stc stc push push movsb bound dec icebp adc imul dec or xor int sub xor rcll dec push in popf cmp hlt in rcrb daa sahf mov mov xchg xchg stos movsl push pusha movsl and frstor dec inc fwait sub fmulp and lcall lahf push sub mov pop das mov mov test loop jg leave int mov fldcw notl dec pop das mov (bad) inc or xchg push jo mov hlt enter test mov add sbb push adc add and movsb mov sti test sarb std xchg sbb imul mov xorl or xchg fdivrl movsl popf aas dec std std cmp pop jns (bad) add xchg jmp test or add call (bad) and dec (bad) ss enter pusha pop cmpsl popf fwait adc sub mov cld xor pop xor jg add lret sub addl pusha outsb into data16 movsb out subb or (bad) xchg cld into shlb mov sub inc xlat xchg rclb lock (bad) cli in fild mov loopne out incl les sbb and fxch jle icebp pop (bad) sti clc mov bound sbb ljmp popf jg sti stc aaa adc cmp inc or jo divb xor mov fsubl or lret or pop push lret movsb pop jg cli inc cmp jl idivb add and mov jo mov movsb push xchg (bad) (bad) jnp cld lcall orl and adc in pop mov push leave or lods jne (bad) mov in fdivrs add push movsl movsl pop repnz int add jne push (bad) xchg xchg mov push cmp cmpsl data16 sub sub fcomp arpl pop xchg and sub scas jmp insb push and out out stos sub lods sbb lcall notl jbe jl mov aas sub mov in insb insb sbb fs fwait sbb add outsb mov add dec and in fucomp in sahf xchg cld xchg adc mov pop bound pop aas pop jne mov sar inc sti outsl jmp sub mov pop (bad) cmp ljmp sub lea inc lcall add (bad) cs pop ret xchg sbb stos inc (bad) out sarl fsubrp inc test nop std int add pusha popa test in bound push bound pop mov lds insb ret mov mov xchg and out and add out (bad) pcmpeqb std inc jne mov out (bad) jbe xchg add mov add ret mov jnp inc insb sahf inc mov add add movsb push movsb out into mov dec xabort inc inc fist lahf femms push (bad) cltd xchg dec push stos and pop push data16 push in jae or or in push cmp and nop sbb push dec dec or xchg jb data16 jmp enter push pop aaa aad pop sbb mov out xchg push push outsl ds push mov faddl test or lea mov inc cmp cmpsl lret in cmpsl shrl js mov xchg adc popf jne add aad sbb jl gs icebp or dec (bad) jg mov push adc fcomp jmp pop out push pop xor fbld jbe xlat sbb in out dec insl cmp push inc imul fisubr push push jle icebp push lahf idivl xchg jp cltd mov bound arpl out cld jl xor cli dec lods (bad) cli int add mov adc stos ljmp ds sbb aas or jg jmp movsb sub jnp lcall xor fcoms movsl adc orl jnp cmpsl xor cmpsb int3 inc (bad) (bad) stos xchg cmp mov and les sub je mov dec xor mov sbb insl sarb pushf pop bound sub push pop clc clc insb pushf sbb gs and adc push sub pusha sti fidivr add enter add aam les scas xchg add leave es rol push out cmp fldt aad test nop jmp mov xchg mov lods cmpl in and or mov add pop aad pop je popa ror add xlat mov jmp xchg sub push aam jmp push imul divb (bad) sti push xor lods popa sbb jle jno in es iret jbe push jnp js and arpl in xchg push adc das sets (bad) (bad) xlat and orb (bad) jb xor mov mov stc dec xor jmp mov adc push push pop mov xchg (bad) lds push pop (bad) jmp cmpsb (bad) lret mov stos clc adc jne rorb sbb leave dec ret test mov or movsb (bad) icebp jl pusha pusha int3 dec test pop cs inc sbb or out loop cmpsl mov cmp ja add stos adc popf ficom in stos stos cmpsl fnstcw push mov mov add popa repnz push pop je sti aas aas inc cs movsb xchg sbb neg pop xchg adc jb pop sarl jl fdivl (bad) enter insl cwtl (bad) pop push sub lahf push outsb and xor pop pop lea adc (bad) das sub push aad mov test lock pop dec in cmpsl xor pop loop add scas cmp lock inc inc adc ja jne dec out adc mov mov or xchg mov lahf jg fidivr movsb add and out imul pop pop dec xor data16 mov out lods insl movsl jp decb clc push mov jle in adc cmp push sbb in test jno pop jp fwait dec jg adc pop jb jmpw outsl pop std xchg dec and sub (bad) jbe scas scas cmp pcmpeqw das test sarl div es push mov sub das push ja cmp jmp jle and push pop cld ficompl push cmpsb push adc test aaa out adc (bad) out scas inc add jns pop clc adc add and dec dec sub (bad) decb mov mov push adc add dec loop,pn inc sub adc xor jo mov jmp out push push push push push sub ljmp sti xor in ret dec dec fcompl shlb sbb xlat pop leave xor mov out fidivl scas xchg rcl (bad) adc cmc test nop xchg icebp int push popa aad subl jle xor add mov lret leave dec jno or dec fs push inc inc (bad) push push in rorb push mov xor inc rorb mov cmc (bad) mov sub jmp jecxz loope aas mov jo sub lock push dec ret repnz jae cltd std std aaa cmp add cmpb das movsb (bad) roll (bad) xchg lret lock jns add ss dec xor xchg loop rolb push repnz mov pop sbb mov mov and out out and fldenv and into cmp shr shll mov or cmpsl movsb (bad) jle lcall je cmc pop lods (bad) rcrb js arpl sbb jp sub pop and inc fsts jb test mov mov pop aad stos sti adc jmp shr adc pusha cmp add cmp aam in jbe (bad) jle fnstenv into adc mov shll add adc fcmovu pop xor mov out dec sbb push sbb sbb add add mov popf fild and adc pushf push js xchg push lahf xchg pop sub ds js xchg cld stos nop inc inc adc cli cmc (bad) fsubrl xchg adc clc xchg jmp mov call jg jp sub sbb sub dec movsl fsubrs fldt mov pop xor dec mov mul mov jb subb push xchg mov mov xchg xlat mov or push jl sub adc fs pop inc or lds pop ss xor and ret mov add add (bad) xor mov fmuls rorb fisub out jge pusha pop mov lods push and out sub xor add loopne into int aas std xor sbb add mov xor mov stc add sbb add sbb sub dec (bad) mov cmp xchg addl in movsl aad mov lds js adc adc shl mov test dec sub sub ljmp daa daa insb out lds mov sub (bad) xor mov push add in cs test sub fimull test insl inc jp or mov pusha insb push fs jl jne adc gs imul lods in mov lcall not mov shlb nop push jnp jns fprem addr16 js xor out xchg jmp jmp push ss push add inc (bad) mov sbb repnz stc xchg add pop pop xor jo enter inc jno lods xor mov or pop mov loope fsts ds mov xor bound cltd and add xchg push test jno pop jg jae mov arpl mov mov mov sahf (bad) mov cmpsw iret enter sub adc and addr16 xchg xchg daa jno and idivl dec inc mov sbb int3 add insb push je clc mov aad cmp out idivb cmp dec mov jecxz out jno mov jge sarl xchg lock js,pn push fwait mov (bad) (bad) sti js in and xor fbld cmc dec dec add out mov add jo sub push jb andl push rcr mov enter mov out dec sbb adc stos stos xor add test sahf sub sti fs xchg xchg cmp shll pop dec jg mov adc gs arpl (bad) std js aam in push and add cli inc inc out test repnz addr16 xor outsl sub push push cmc cmc jp jae cmp pop xor popf stos sbb jle jecxz xchg xchg out jmp lcall popl jge imull fsub sbb or xchg fsubs cmp mov jmp sub adc push and js and cli mov outsl mov pop xor cltd adc xchg cmp dec cli stc add das rorb push pop xor or and repnz lock xor sahf loop adcb iret movsl fisttp rclb arpl sub xbegin cmp cs pop sub ljmp sbb push mov xor pusha xorl dec dec call (bad) lds jl cmc or popa pusha repz sbb push fnstcw mov inc sbb in cmpl in insb xor ror dec ret push xchg data16 add (bad) out push add sub or xor insl pop xchg dec adc cmp cmpsl xor shr jmp sub add fisubrl cmp inc lods sub jno xchg mov lock sbb fdivrs inc das aaa popa push inc (bad) test xor cmpsb stos jecxz (bad) push sbb jl mov inc dec inc mov jae add fs into insl sahf call cmp out inc mov cmpsl and xchg xchg stos add lcall mov mov imul shr out popf jbe,pt mov jecxz rol movsb repnz lcall push xchg sbb addr16 arpl insl fidivl xor xchg loopne dec dec ja push fwait and cld rcll xchg xchg mov loopne imulb cmpsl jge cmp inc sub xchg xchg dec dec jno push fcmovbe sbb push aas jle gs loopne adc test jl mov add movsl xor xor iret cld std insl insl xchg push fldcw push insl push out xor add push push jno in sbb (bad) xchg pop jnp sbb dec aam add jmp loope add arpl js cld cld pop cs push test sbb popf jns repz adcb lds in ss enter hlt lcall lret cwtl push das and push stos inc pop pop outsb and cmp mov add pop fwait or les out push mov push and fidivr sbb cmc test pop cmpsb scas cli iret jp in aas lods in imul lcall divl inc test mov xchg cs pop adc adc mov (bad) (bad) cltd scas add mov cmc or into mov stos xchg out and (bad) call push jns cmc lahf addr16 imul cwtl and mov stc mov jo add mov or sub fmuls in push mov xor flds sbb xchg mov ds negb dec jmp out sbb cmp xchg mov xor or sub in (bad) mov mov mov arpl mov stos rorb push (bad) cmpsl and orb mov div hlt push cmp nop stc cmc push cwtl xchg cmp xchg fwait icebp jae mov push or push (bad) jle xor out cmp or mov enter fimul mov jne fadds sarb adc jnp and int3 lods mov dec mov sub xor and sbb cmp or fimull pop and repz dec push std aas push jb not lret pusha inc das adc sbb xlat fsubrs sub inc sub cld (bad) mov mov (bad) outsl insb rorl (bad) dec rcrl dec add dec mov out cmp out mov pop out sahf cmp dec jb imul int mov mov shr cmp je dec mov cmp (bad) jnp lock int3 iret push lahf dec cmpl clc daa movzbl cwtl adc daa xor mov pop sbb and push sub (bad) pop push adc cwtl jg inc ja pop or or pop pusha mov add bnd adc out cmpsb sub inc fnstenv add repz loopne adc push (bad) (bad) int3 jns jmp int3 mov push cmp dec loop fisttpll pop rcl test cmp lea sbb iret mov add or lret adc xor dec out nop push xor cld cmc lods sub jae push nop aad add add cmp sub and mov jl sbb lods mov into popa scas pusha repz fsubrs pop aam sub or xor and les aam mov dec mov push and mov mov insl push sub jb out out (bad) shl sub out pushf fwait or je nop dec or xchg cmp inc dec ds and pop loop sbb rcl mov je xchg (bad) popf push sub or int3 je insb adc loope cmpsb leave xor in sub add add xchg adc negl outsb jnp pop adc iret mov add pop pop inc iret inc mov neg or lods mov add lds out sbb inc fldcw inc movsb sub iret (bad) lds cmp ror push out lahf daa push push movsl cmp aas xchg or insb jg bound (bad) loope pushf aam fwait cmpsl cmpsb lds test fmull mov mov mov cmp ds sub rcr pop or jge (bad) and jp in mov push xchg aaa mov iret int nop scas mov cmp aaa mov insl mov cld push in in lahf ljmp jle or mull fcomi ss outsb ret cmpsb movsl sub pop mov jmp das data16 mov mov popa (bad) lcall jnp enter std std inc sbb fdivrl and xchg ljmp lods mov (bad) in rorb pop test jl and pop stc or cs fnop and pop repnz mov add aaa or dec pop (bad) scas pop push dec idivl or dec xor cmp inc cmp in xchg sub or mov ret dec add dec or dec dec not mov or jns orb shrb frstor scas dec int push inc ret lds fistp dec push cmc daa cs mov aad lods adc jo or push jle mov jg repnz mov push add sti sub jno sub mov (bad) hlt inc or xchg adc shlb jbe mov push fisubrl push in jmp mov lea or adc lea jne nop pop in push sbb pop push cmp ds ja hlt pop into push in rcll xchg adc popa imul mov dec or mov xor daa pushf out mov (bad) cltd and sbb pushf shlb cs clc mov dec test mov lds loop ss xor or lret xlat pop cmp xchg jns out out jp loop push xchg push xor xchg mov vorpd out xor xchg adc sahf sahf mov loopne mov xchg jb jnp dec sti mov inc hlt cmp bound adc hlt movb scas inc mov push pop cld push fcmovb xchg mov mov (bad) (bad) popl add das sbb jno sarb repz jbe out test mov roll xchg and mov xor xor into pop rcrl incl cmp bound sbb scas and dec xlat xlat outsb sub fildl cmp add mov cmpsb mov add pop push mov xchg cwtl and roll insl popa sarb ds push mov cli mov xchg push pop cmp xchg ret push in aas lods in push subl jl mov adc xor daa mov loop add test push push xchg hlt sahf jecxz cmp mov xchg xor jnp jns push div jge mov mov fidivl rcrl lock sbb clc xor movlps repz jp aaa inc inc jo jb loopne mov push mov and mov cmpsl and sarb int jl xor pop push jl push loopne,pn cmp sub call bound insb xchg xchg xchg mov push fidivr mov and into cmp leave in aam adc jne dec orl (bad) lock jmp and inc push dec cmc pop pop (bad) rcrb xchg jmp xlat jmp xor sbb aaa fisttp or pop clc xorl cmpsl stc jb or push pushw push fcoml mov out jle in mov bound outsb add dec mov push xor fistl and in inc movsl xor cmp add scas jp jg xchg adc popf and fisttp outsb cmpsl push lret sub cmp sub push in lret mov repz jl imul dec (bad) jp adc jge je xor xor enter shrb ljmp mov or ret pop or pop jae push cmpsl jbe lds or mov repz xchg dec sub cli mov inc xor loope fsubrp push jb test (bad) sbb in imul jne fwait adc inc add shrl pushf inc cmp cmp pop outsl adc push cmp add sarb push pop cli mov cmp arpl mov and inc into adc pop sub stc jbe mov mov jae mov fcmovu add aaa lods scas incb inc dec jecxz into sub loop addb fnsave dec lret pop fstl jge or sub or pop pop mov sub in out leave sub rcl jbe sub xchg fmuls sbb pushf sub jb inc decb adc cmp aas sub insb mov xor mov pop scas jle (bad) xlat adc jnp xchg xchg icebp js icebp imul ljmp cltd outsl lock mov (bad) cmp in mov cltd pushl inc mov in pop cwtl mov (bad) or (bad) cmp rorl sub cwtl fnsave out xchg loope sub jg mov jno push pusha insl repz ucomiss pop jo add stos pop add adc pop pop inc inc out lret xchg mov iret bswap ja loop les dec dec or lret xchg pop stos xchg adc mov lds fldenv cmp es jb sbb fisttpl mov inc mov cmp out and cmp lea jne pop mov test xchg out add in dec sbb pop aam js push leave cmp pop iret mov xor inc (bad) int3 or adc mov insl pop pop jne or (bad) (bad) loop das mov dec mov lds xchg adc sbb fstps sbb (bad) sub pop adc (bad) adc sahf xchg or mov lahf cmp popa out cmc lds nop pushf sbb xor push push pop pop lea mov sub int3 adc pop scas pop sbb and into inc pop addl mov adc jne pop aaa pop vrcpps cmp cmp jle jge shrb jl bound testl aad sub mov and mov xchg cmp mov mov sub mov sbb mov lcall in subl mov cld mov dec mov add mov mov mov mov ficom push mov mov sahf fwait popf rcl jnp into jle mov adc xchg or push je xchg jle cmp sbb mov mov lock repz cmp ss inc inc sarb das or stos int fisubr mov adc sbb mov inc pop fsubr ss daa imul movsl mov pop arpl mov clc adc adc jae pushf sbb and pop or (bad) pop fnop fldenv ret add pop aam sub push cmpsl jae loop add mov or mov cmp (bad) dec movsb and (bad) test test (bad) jae xchg xchg icebp icebp sbb push loop add add sarl mov mov pop xlat xchg fs mov lods cs je adc fcoms jno xchg adc outsb mov jl jne mov inc inc (bad) pop jecxz (bad) mov mov xchg push xchg push (bad) jnp cmc adc std std cmp (bad) rclb cmp push mov loope test mov aam inc inc jb (bad) andl test sbb gs sti clc jne lds push jne fs rol dec adc (bad) gs mov xor into into cmp xor rol push mov and sahf jb in movsb jnp test outsl xlat mov movl rcrl lea cmp xchg es xor mov hlt push lea push enter add push out stos fldt cmp aam imul or push jo shrl lret dec or (bad) xor jle dec dec inc aad push sbb jno pop in lret add data16 adc xor pop push sbb in mov arpl in lahf pop adc fnsave push cmp xorb sub in aaa mov ficomp sbb sub loope sbbb or cmpsb sbb cmp cmc aam jmp mov xor jge sub sub jmp jmp jno adc popf imul (bad) (bad) pop (bad) cmpl rcl stos push push or sahf inc xchg in std pop xchg (bad) pusha cmc push scas mov fnstenv cmp add add callw fs mov adc mov leave leave dec and xor inc add sub sbb dec jae xchg mov pop sub clc mov jae jge jmp sub cmp cld int3 stos (bad) mov jno (bad) push push lods lret sbb (bad) incl repz xor jo jl jo das push call cmpsl fmull lret mov jno aaa repnz mov or cmp popa popa test adc mov dec dec inc add add add lcall js adc lret cmp sbb mov mov pop mov adc imulb (bad) sbb imul outsb loop gs pusha cmc push scas fs push sub ss loop icebp lret in out sub mov or xor adc xor lret dec dec pop pop push push fs shlb call add shrb xchg data16 mov test cmp ljmp aaa test and sub cli or fsubr test sbb inc ss mov (bad) int iret sahf mov fstpl jne xchg and lods popa idivb or pop orb jl mov dec jns xchg pop push aad lods jno,pn jecxz arpl mov mov sub pop into push mov stos int inc (bad) mov dec sbb hlt ds popf push repnz jne stc pop arpl or pop das mov jmp and xor loope loop in arpl dec adc in jb xchg jb fnsave inc les jae inc mov stc stc xchg push sbb mov andb stos or test lahf mov cmp jb or or call shll arpl stos fild lods fiaddl adc stc loopne outsl xchg push sahf push rcll pop cmpsl mov or push stos push vpunpckldq test xlat sbb inc icebp mov xlat fcmove outsb test inc mov lock loopne cwtl in xchg push stc cld jns mov cmp inc sahf iret mov int3 sti int in mov pop jbe cltd mov sbb hlt rcrl repz scas push jmp jo jb sbb pushf call fcompl sub (bad) loopne (bad) mov xlat or jle out pop cmpsb iret inc xor push in scas and fcmovu sbb sbb cmp xlat push ljmp xchg xchg stos sub jl mov mov movsb xchg add (bad) (bad) cmp mov gs dec fcmovnb mov bound fdivrs jns mov jl idivb add inc outsb loope sub xor test fs jno dec mov mov mov add push jg sbb imul mov add sarb mov cwtl loope add movsl mov or pushf pop pop cmp std data16 push test push jle insb and sub ljmp test imul pop (bad) sahf rol xor shlb rcrl inc inc out scas dec rcr push push and test mov fsts push lahf cmc out test adc cmp push scas inc sub stos fs out fwait aam ja andb stos mov adc xor sub adc pop out jmp rcl pop xor jge rcll xor jmp sbb cmp iret and lcall xor stos adc add cmc jb call iret js adc addl xchg bound push inc inc imul psrlw inc dec popf lret mov jecxz sub add xlat mov sarb into or mov xor arpl xor into mov std testl jnp test jmp xor inc in lcall aas mov mov jg xchg into into push (bad) xor dec dec mov dec sbb (bad) leave add pop (bad) ljmp pop test mov (bad) or and adc test int out mov sbb sub fstps sbb loopne mov cwtl lahf pop jp pop in jl and das (bad) xor or or insl sbb outsl pop push cmp add mov popa test cs jg lret sub (bad) lret jmp jns rcl cmp sti mov movsl cmp adc add fwait lds je cli idiv xor fldenv push inc (bad) cmp jl mov add mov gs lods outsl out mov mov into xlat shll and lds dec dec mov test loope push sbb test clc inc mov scas lods jo mov adc jnp (bad) mov jle ss pop lods aas cmp cld mov (bad) cld mov add in push and xchg cltd rcll dec dec inc rclb popf rclb jge jns cmp sub cld out lods nop fidivrl stc out mov add adc add add sbb or or clc stc add sbb add test subl or aaa mov inc cmp mov mov popf jg fstpl push push movsl movsl jo (bad) pushf dec and aas pushl sub sqrtps bound loop gs data16 xlat outsl sub fcomp sbb dec push rcrl push stos push push push xlat and xchg xchg sub out cmp cmpsl ficom pop sbb adc jnp xchg icebp icebp ficomp in addl mov gs inc mov dec add pop mov mov lahf mov sbb bound jnp inc mov jl insl adc sbb jmp and insl cmp jno push loope lods sbb or xchg (bad) lret jbe stos ss inc add dec cmpsb movl jne mov xchg out stos aaa fisttpll mov lret int andl fiaddl push pop add dec cs pushf pop jmpw mov insl imul test cmp out and pop inc lea add inc loope gs ret xchg mov ret dec mov int3 int3 ja inc inc enter in xchg or push mov push sti jp mov xchg daa loopne xor (bad) xor (bad) adc mov inc mov dec push push (bad) out xchg fcoms xlat push push negl sbb inc push lahf test in test scas add lock add clc jns das (bad) sbb pop mov (bad) pop xchg adc (bad) int3 push int3 (bad) fstp adc out int3 je mov sahf fist xchg sbb pushf sti mov cwtl add add sub iret sub enter mov sti jp rcrb cmpsb mov std cld clc clc je dec dec loope cli scas (bad) cltd xchg xchg enter outsl je insl in jb orl outsl rclb lods out or lcall xchg mov add mov xor outsb rorl xor cmpsb pop dec jmp dec xor push cmc cmc mov pop xorl imul in movsl in push sub jo jp fwait aaa cmp cli add aas decl sti push push in in in fwait xor (bad) outsb fs bound ja cmp mov repz jle das sub jmp jmp push jmp test jne into out movb push enter add jmp jnp pop lds or cmpsl or inc es (bad) add mov and xor loope fsts mov mov and pop arpl jno in (bad) jle sbb cmpsb and mov out mov daa push imul shll xor mov mov sub lods lods out outsl ss lods and test rcl clc es sbb mov xor xchg xchg test jl mov aaa inc lds jmp sub jb ret mov adc mov mov das pop aaa or push adc jge pusha jl sti xor lahf imul ret and xor fsubp fistpl mov test mov mov push inc sti shlb lret lea dec lods idivb lea mov rorl gs test sub (bad) mov shrl loopne mov out out sbb add xchg mov sub cwtl xchg mov mov mov out ja icebp jle into cld jo sub mov aaa hlt mov int3 int3 inc scas pop daa pop xor enter inc xchg mov mov fldcw lret mov cmp push dec lea lds push xchg fsub mov rcrl jnp out scas negl mov imul fwait mov jl lret mov jnp movsb insl mov and adc lea mov xchg das into adc sub mov sbb push adc sub in shr and push xchg daa sbb inc add inc add in add sbb (bad) xor popa pop sbb push sub fwait movsb add lret ja hlt scas int3 mov add add fwait push xchg cmp (bad) (bad) out bound es in ret adc rcrl int3 xchg rclb faddl rcl jo cmc ret mov adc (bad) fmuls movsb mov cmp cmp test mov jl mov adc xor or insl loop push int call in enter push in es mov push in pop test test movsl ds pop popf jbe push sarb dec idivl pusha fs (bad) dec insl and cmpl push (bad) jnp in push stc xchg aaa pop inc inc dec and cli jmp (bad) insb and fnop and pop in bnd in sar xlat into lock clc (bad) popa sbb rcrl and push rcr loopne loop sub lret pushf push loope xor mov andl ljmp rcll xor aad push push sub pop cmpsb sub scas in xchg sub mov mov and daa out loop cld shlb push and (bad) ss inc push or fcmovnbe jae xchg push div sbb in mov aaa xor fs nop mov inc inc gs test stos push mov push add (bad) push push mov inc xor cmpsb push call cli add cmp pusha push mov and xor jp xor inc lret lock out jbe mov push inc std cltd jb add outsl daa movzwl icebp sub scas fsubrl sbb fidivl lcall ds shrl (bad) jnp jl bound je repz mov inc popf popf mov jle pop clc clc ret push fild jno fidivl mov dec mov mov repnz mov inc addb dec icebp or aaa xor add xchg inc push addl movsb loopne dec lea jl mov push rclb pop jno les mov adc fs (bad) xchg arpl push pop nop (bad) cmp mulb mov sbbl and xor mov xchg int3 mov aas (bad) mov xor bound pop sbb pop sbb arpl ficompl xor lods jmp adc ficoml pop outsb outsl pop pop push xchg jmp sbb (bad) mov dec mov adcl mov xchg loopne mov sbb add pop push pop cmpsl sbb test cmpsl cmp (bad) jno jae add je andl sub sub outsl sub xchg sti nop arpl mov mov jo (bad) jae push in jbe lds dec pop sbb push xor enter ljmp inc mov and or aaa std test pop aas and xlat lcall test push jmp (bad) push int3 xor (bad) clc mov push mov (bad) ds inc add sub mov inc cltd stos scas jno mov (bad) sarb jns sub mov pop jge ljmp xchg xor pop in jbe cltd int push push pop loop pfrcpit2 sbb mov inc (bad) (bad) stc jl jns repz inc mov (bad) mov cmp pop in repnz dec enter mov addl incl cwtl pop push lock in cwtl xchg lret pop outsb mov jmp cmpsb rorb clc insb pop push cli gs leave insw rcl outsl sub pop addl pop pop aad les lods mov pop pop dec cmpsb (bad) fist ret insl mov mov cmp call mov push fwait ja xchg jns ss imul insl cltd xchg jg leave leave adc add or cmpsl repz push push add cmp jbe push pop cmp outsb outsb stos bound mov les sub les xchg and loop lds xlat inc lods lahf lahf test cmp push js aaa aaa inc and push mov mov inc inc es pop mov gs aas adc xor aas outsb jns bnd movsl mov mov sbb mov jle adc or (bad) std insb lods dec mov dec inc dec push cmp ss mov jbe pop pop (bad) divb or loop ja and lahf xor push in cmp add or xchg repnz neg rol ret pop jno insb fsubrs sbb movzbl inc lock movsl pop cmc icebp mov dec sbb jmp dec dec insb cmpsl repz cmp mulb in out sbb das (bad) popa cmp mov pop shrb in xchg xchg bound in (bad) aas aam cmp and pop xor mov adc sbb das scas adc rolb add lods test or mov testb jecxz lret and xchg xchg xor inc pop dec inc stos andl mov into pop push addl test int3 adc sahf and rcl mov sbbb sbb pushl je bound es jl ret rclb sub jg sbb dec (bad) rolb lds std (bad) adc nop xchg std cld repz daa add push scas mov push jle push iret ret pop ss cli icebp stc sbb (bad) in jle in lods sbb cmp fs and inc rorb add mov xor lea lcall aas lret data16 xchg push popf fdiv cs repnz mov sub cmp std std js xchg xchg je insb loope inc imul push fdiv mov test jbe aas int3 dec add icebp test insb lahf sbb sub or push cwtl repz pop pop inc dec ljmp flds sbb setb loopne mov lds cmc adc out shrl (bad) jg sbb outsb gs je js sarb mov imul push mov mov stos jo (bad) adc insl insl enter jle sbb std xor scas and and cli jno test (bad) lock dec mov or popa cmp xchg xor cmp push cmp popa (bad) stos fildll outsb and mov test fcomps dec fs push (bad) push xor cli sarb lret imulb mov pop sbb cmp push cmp sub mov test sub adc mov icebp push (bad) std jo insb xchg mov out je cmpsl xchg ljmp or js adc add or test test lret notb adc mov enter mov push sub jae mov fwait outsb insb mov out decb es mov call push pop cmp adcl movsl inc roll push mov (bad) xor les cmp dec aaa pusha push repnz loope nop xchg cli aad xchg push stos sub jge sbb pop (bad) mov jecxz pop ret cmp cmpsb pop in jo aaa mov movsl mov dec in adc dec xchg bound divl or add and push fild fcoml adc inc ret aas stos pop cmc push push outsl outsl rclb lds and mov (bad) test (bad) mov repnz cwtl pop aad iret enter cwtl sbb mov xchg lock pushf outsb repz cltd (bad) adc rol int3 aas mov divl outsl clc pop mov scas push sti js iret sbb or cld loop pop push stos decb in xor dec adcl arpl mov add mov jp pop sahf mov lret ljmp jl es loop push in mov aad neg and into xchg stos xchg or dec add push sub je mov mov sub lahf push xchg loope test in ljmp fsubr jns xchg xchg lock jbe aas into or test cmpsb or pushw xor or out gs dec mov in lock fnop test arpl add sahf sbb imul stos outsl (bad) mov mov xor es sub xlat das adc mov dec test and (bad) jmp sub mov or pop cmp xchg movsl loope test addr16 pusha push jl xor (bad) clc add mov and mov pop addr16 femms test or shrb jnp jns incl rcll add add lahf mov fisub mov inc addl lock js lcall inc orb add jmp adc mov lods frstor lret mov inc inc inc ss int into mov xor (bad) xchg dec xchg mov dec adc adc cmp imul mov out gs add jae dec scas xor xchg sub jecxz inc sub mov (bad) add movsb icebp jne jnp push push dec imul xchg mov negl js aam mov das xor rcl repz ja sbb add pop (bad) ljmp xchg addr16 faddl pushf xorb add or mov adc or shll test cltd adc dec (bad) int3 (bad) mov or sbb aaa fsub jmp and sahf mov cmpsl adc push xchg (bad) mov sbb sub push mov and fnsave imul fdivp xor mov mov in push iret ret (bad) stos clc cld lods jnp std daa mov mov and sti sbb sbb fsubrl jo or xchg mov rcl push ficompl jo pop jb xchg cwtl pushf dec xchg adcl mov push in pop scas popf imulb pop daa aas iret and out cmp push std mov push push jne jp iret repz push push insb outsb mov or popf cmp jl mov fdivrl popa loop cmp (bad) mov cmp push addr16 add and jnp cmpsb or popf mov mov jge adc pop or jo in out xchg push add outsb mov call ds or inc jo stos lret fbstp add cmpsl aam mov sub scas aad mov xchg iret imul jae je aaa lock pop int3 push aaa jl sub insb cmc and rcll push cwtl push leave pop sti pushf daa push jne xchg adc movsl imul or out scas ljmp sub cmp cmpsb sub in ja movsl and mov push pop xor icebp outsb out out xor out ss inc fimul add add sbb std dec sub aaa xchg xchg pop movsb aas and aas mov scas or push mov (bad) fimul loopne shrb call add pop fcom lock pop mov adc sbb push js or push or les jae js sbb aaa scas sbb je lret jb push pop int fisubrl xchg enter sbb fsts mov ss or mov jg sub movsl cmp leave jge das pop pop mov (bad) adc push int arpl pop sbb cmpsb adc imul jae mov xchg or cmp mov (bad) mov dec or movsb jle mov hlt call pop push mov add movsl loopne ret push mov mov sbb lods je pop cltd xor fstpt sbb jae divb dec dec adc cmpsl pusha lock or push dec fisubr fildl jns cmpsl dec sub mov mov movsl sub pop jno into lcall or push (bad) lea cwtl inc or mov rclb mov into lods xor outsl push sarb or push pop pop fcmovnu mov clc sub addb mov out fcoml pop pop jns jl daa jmp xchg faddl pop dec rcl popf ja divb push or inc aaa mov mov dec sub (bad) mov sbb je xchg xor pop cwtl cmp mov sub cmpsl pop add std pop test dec xor cmpsb ret push inc repz sbb mov xor cmpsl scas push fwait pop add inc mov iret xor sbb popa push sub out add xchg xchg popl push fistpll dec dec dec sbbl sbb pop pop pop arpl in sarb add mov mov or test shrl push mov xor cmp lock cltd repz pop add mov or pop pop inc mov addb rorb test xchg std int inc (bad) dec or (bad) jno movsl cmp leave dec fs adc sub sahf add mov push hlt and mov sub inc sub pushl int jo mov push lcall sub sub fistp pop mov sub mov mov ss and push fwait pop fnstcw cmp xor outsb hlt lea mov adc hlt xor pop ss or inc sub test add loope outsb call rcrb lock mov push cmp add jecxz fnsave decb add test lock adcl add xchg stc add cmpsb adc mov in or mov jns or ljmp call push rcrl mov pop les arpl cmpsl out (bad) lods pop pop mov inc and ljmp lcall aam xchg leave ds insl out jmp (bad) cmp inc add lret into cmp jnp fs xchg pop out lahf lods test bnd mov mov xchg ja je cmp lret mov mov push enter divb cmc stc or push xchg nop cmp sub push call inc decb cli lcall pop pop mov mov xlat and es outsb lret sbb jge pop pop dec aas xchg out adc jb inc arpl pop adc in jbe mov cmp xchg adc xchg xor ds lret nop in nop mov fstp lds jl sbb arpl pop sub cmp jecxz loop or push fwait dec push fsubrs jno mov fwait xor in jo orl adc cmpsl sbb int3 mov mov cmp sub cmpsb jne push push push cmpxchg cwtl and dec push inc call jae and push cmc cmc insl mov mov fild hlt mov sbb out cmp cld xchg xlat lret dec and cmc dec adc je sarb dec sbb loopnew dec int pop push mov xchg sarb lock pop insl ljmp sub (bad) push add call jb push incl cmp lock cmp push mov stc stc mov inc mov ds (bad) jg mov (bad) pushw daa repnz sbb ds leave incb call sbb pop pop es mov arpl mov cmp mov nop fdivrl pusha shlb adc cltd fcomp mov inc jns xlat aam sub addr16 push ss mov cs daa dec mov mov and cmpsl mov fnstcw fmuls insl adc xchg outsb sub out fdivrl xchg arpl stc ror ss or shll (bad) int add in popa mov scas sbb jbe fistpl movsl ja ret jns les mov jl jmp out jbe adc push xor adc jb mov sarl es adc mov adc add or movsl and sub sub dec cmp jecxz inc scas arpl pop out lds mov jl or sti sbb xor adc pop popa ffreep mov jmp test cmp insl pop sbb push push cmp mov mov cmpsb mov shr jg mov or mov insb pop sub cmpsb int3 int shl fsubl cmp paddusw ljmp daa mov pop lret xor sub lcall push push cli nop cmp or mov cmpsl pushf testb loope mov in leave add sbb stos clc jp cmp fstps in cmp cmp or push lcall fistpl fcompl push sbb cmc dec dec into cmp xchg pop outsl in scas ret insb icebp inc push insb sbb and and imul push jb push cs xchg push xchg xor sbb fcompl adc sub rol pop lods ret and pop dec cmp sahf push das adc adc (bad) jmp push cmc push subl mov lahf js fcompl dec sbb test adc push sub pop mov mov insl mov lods out mov mov lods ret (bad) xchg mov mov xor sbb insl loop test add clc xchg mov inc mov mov incl push in in pop mov dec xor pusha rorb adc clc (bad) icebp pop xchg sub pop sub jg cltd xor scas push es or (bad) mov inc push mov cmpsl xor je popf push inc adc movsl enter jecxz leave jnp jno jno aaa mull lock inc mov or pop mov push push movsl dec aas pushf cmp out dec (bad) mov dec pop push xchg mov and sub clc std cmp cltd pushf pushf lock push pop xor imul push sub cld pop cs (bad) out stos repnz sbb shl push push stos pop rorl icebp (bad) mov ja fistpl sbb ljmp js js clc roll les or pop pushl dec rorb popa ss push out mov xchg rclb cltd push cltd les xchg cmc cmpl add sub lahf inc outsb loope xor mov push rcrb lahf lahf pop gs mov inc jnp xchg pop enter (bad) stc jp call bound and lock sbb imul enter xor dec inc push loop pop push cmp int mov lds das mov jnp fisub stc stos std arpl pop in les cmp arpl ljmp mov or loope xchg das jmp xor cltd les pop adc dec inc pop mov xor sbb incl cs mov aam ss fcomip push push sub xchg adc sbbb bnd or push xchg add fsts out neg mov in sti insl push cs data16 ja in xchg lea mov xor jno adc add jge push sbb movsb dec fnstenv inc stos jle lea shr bound call into iretw or inc mov and cmc cmc test pop pop push sub xor push icebp xchg xchg icebp push (bad) aam data16 pop or ffree inc sub jo add arpl aaa pop adc fs jge xor lds lret and sub mov push push outsl push jle ljmp xchg lock icebp dec jae enter imul pop sub shl lret cltd mov ds push mov mov push adc negb mov xchg fsubl lcall subl adc xchg repz xor int jle jno push cmp movd js in test mov js sbb das das or xchg sub fyl2x cwtl repz sbb fadds mov cmp hlt pop popa cmp aad aad jge xor sub leave ficom (bad) sbb adc jno int sub ljmp lods sub nop or mov push add jmp pop dec std clc mov pop and stos and ss pusha push or jge scas imul jae or cmp pusha adc adc arpl push dec mov ja fistp (bad) in xor pop stos stos mov sahf std nop fildl mov les das das sub jge jb popf notl jno adc stos mov push loope and adc mov (bad) lahf pop gs jmp add sbb dec xchg cmpsl xor je popf push inc adc scas popa mov stos jmp inc ja sbb mov loopne and (bad) imul or mov ljmp jecxz lea imul stos out mov ds mov cmp mov dec jl mov dec into cmp movsb movsb scas inc lock xor or inc adc mov dec xor dec inc push and inc js (bad) xor dec out popl or pop jg pop icebp aad sbb in mov aad imul fucomip cmpsl cmpsb or sub (bad) cli mov (bad) loop push pusha adc sti aas mov into mov push or or outsl iret xchg push mov lds pop push xchg sbb pop lds adc push mov movsl adc mov push mov pop mov add push adc mov xchg push pop repz fild bnd cld int3 syscall std inc adc add out xchg jecxz mov sti out sub fstpl mov idivb fisubr mov and (bad) xor cmp movsl sub cmpsb gs sub cmpsl mov in jbe loope movsb fsub and cmp test pop stos stos int3 pop in mov push mov and nop test sub int3 or xor nop mov int3 repz mov mov fisubr adc addr16 movnti fdivp ds push jle outsb fdivrl (bad) and ja push cmp mov lods inc cmp jnp jle icebp inc add cmpsl adc inc add loope dec add pop xchg and inc sub ja mov out ss pushf inc into jae xor aam xor movsl test inc xchg arpl mov bsr xor insb xchg push ret (bad) lahf or or fmuls arpl push jo addr16 push imul dec aam add stos lods les jb push outsl in mov lods loopne mov ja xchg fwait icebp jae (bad) in and pusha adc xor nop inc fistpl cli adc jne incw or insb or xchg cmpsb mov repnz jnp mov loop pop mov popl movsb dec and insb sub and lods inc sbb iret sarl cmp inc add add rorb outsb push (bad) pop jno or mov mov mov xchg test or popf ljmp test pop mov xchg (bad) lds fstps xchg mov adc test ret and loop icebp stos lds dec and movsb cmp ss inc repz dec add out add jnp push cs jbe or addr16 mov add cmc jae push sbb popa cmp outsl daa sub fbld pop xchg (bad) push nop outsl cmpsl es imul fucomip cmpsl pushf repnz testl aaa in addb dec aad movsl mov push sbb sub popa enter dec lret sarl sbb pop inc (bad) daa xlat pop pop fcompl push iret gs dec dec adc dec cmp ret xor jns cmp add inc xor (bad) xor push push sub call push adc aam adc std sub add test pop inc ljmp pop push mov jbe popf lret sub hlt and test popa cmpsl js lret sahf push lcall sub scas in cmp sti mov and cld inc cmp vmovd and push pop fcomi mov adc test and xchg dec lahf cmp xor add dec mov mov ret inc scas pop sahf fstl push cmp jne bound add aas mov rcll adc jae adc scas cmp pushf xchg iret pop mov (bad) (bad) sub add in xchg sti push inc sub (bad) dec and cmp pop test iret xor mov mov je shr andl jnp pop jnp push fnop mov mov scas lods iret mov pop sub fisub out stc adc aad bound mov ljmp xchg inc mov (bad) or pop imul pusha and dec test xchg xchg repnz sub outsl ss push lret sub cmc cmpsb push fadd orb push cmp stos test push insl xor lret cmp ret adc jb data16 mov add ret stc or arpl or popf test lock mov lcall jo (bad) (bad) push scas aad std mov ss push add inc fsubl lock adc aas int3 ja push jg je mov scas mov stos push rorb or sti mov mov int inc aas cmp mov dec (bad) mov pop xor xor bound jae adc mov lods stos out out and dec xchg or jns mov xor jne loope xchg je inc pusha mov add jp test ss shrb dec cltd cwtl loopne lea cmp out adcl das xor mov jae inc (bad) aaa mov icebp icebp push out push outsl outsl xor push stos push mov push sar in jmp mov mov inc out repnz imul mov jg push inc adc loop fwait dec xchg add cmp sbb xchg pop mov imul in jle lret movsl cmp cwtl cmpsl das aas call adc fs test push gs cld pop imul adc sub xchg xchg xor xlat mov in push test in std jg jns dec cmp jae sbb notb daa xchg sti pop fstpl cmp xor jg and iret jne loop mov bound ja xchg dec sub xchg sub fldenv fnstenv mov test es sbb pop and xchg adc hlt test xchg xchg icebp ret mov stos fs out sub jnp clc jecxz enter dec mov frstor inc pusha pushf scas bound cld adc pop pop arpl cltd pop cltd imul pop daa (bad) xor xchg stc xor or scas jae mov lods xchg iret pop mov pop test pop out adc lods pusha fbld jno jp add lods movsb mov and orb out inc jbe int3 gs ljmp dec xchg (bad) popa popa pop inc push dec mov ret cs xchg (bad) mov push cmp mov test insb sbb jno mov aad popa movsb out sti jno pop fmull mov rcrl and sbbl les mov arpl mov pop mov jbe mov jnp aam cmpsb xchg loopne test sub mov out out int3 int3 faddl add dec in cmp pop loop fcoml enter fnstenv push push mov psrld pop fxtract enter jns mov add xor (bad) repz out stos push cmp (bad) mov cltd lahf (bad) (bad) dec xor cmc dec inc add fucomp cmp pop jae xor stos aad jg mov es xlat add mov enter aad jle sub add clc jne lds jmp stos mov dec jne clc insb pop push jecxz insl add ja rorl mov xor lcall div cmovnp ficomp (bad) xor pusha push xchg dec push iret adc lret jp repnz dec mov cmp push add mov mov inc lret pop mov push add fidiv test (bad) jbe xchg xchg leave js sarl negl and pushl sbb lods movsl std nop mov aad add dec xlat or ss and imul mov les adc add push adc call pop push gs ss andl pop aaa imul cmpsl add in test sub loope movl add jnp inc or mov cs loope pop xchg xchg les arpl jne iret add mov popa lods je ficoml cmp or fs pop cs dec push xlat sbb jns pop dec (bad) aas mov mov cmp mov jne or push xchg xlat clc cmp out mov shl and out out (bad) js xor inc arpl xlat mov mov je pop xor sbb enter pop xchg incb cmp addl or sub xchg cmc xchg push and mov xchg jno push lods (bad) xchg push bsf std je enter (bad) stc cmpsb pop xor je mov jno insb add call leave jnp movsb movsl add push fistp xor (bad) imul shrl pop xchg cmpsb movsl mov lds xchg adc daa sahf cmp cwtl sub add adc stos push loop arpl xchg fsubr sub sub das sub ljmp dec adc sub fnop (bad) fimul jle clc inc fnstsw loope int push mov pushf sbb mov fidivrl xchg xchg imul les or cltd std xor sbb jb fistpl mov iret mov sbb jne cmc addb add aas mov sti (bad) lea (bad) push out jmp pop shrl mov pop fwait (bad) jg divb add fstp adc jae shlb push pop fadds dec lods jae mov and ret insl ljmp mov cmp sbb push ret sbb dec mov xchg stos stos push xor push into rcl jnp xchg inc fldenv rcll iret (bad) pop pop add mov xor lahf xor inc xchg push sbbl loopne pop std test cmp outsl push (bad) (bad) cmp ja mov or sbb test xchg popf aad es inc dec daa or push cmp dec data16 add in cwtl lock dec pop (bad) mov mov stos fsubrs das je loopne jg mov or sbb dec rcrl (bad) dec mov nop sbb xchg (bad) icebp push mov pushf test pop xor lret and pop adc sbb adc sub lods and cmp xchg clc xchg inc inc sar test hlt in lds imul int3 aas ds shrb add xchg dec pop rcl imul cs (bad) cmp mov and inc stos cmc dec ljmp xchg ss xor push push push push cmc xor clc test mov jae (bad) in inc adcl adc adc xor cmpsb cmp into movb add add mov adc jnp jns and or pusha adc cmp push pop adc stos push add int xchg fistp movsl sahf lahf (bad) bsf repz jbe mov in cli (bad) call sbb mov jecxz leave lret cli or std mov lcall mov bnd test mov (bad) inc (bad) jle ret adc mov lahf and ror fcmovnbe mov loop jo lcall ret or cmp and addr16 jo mov loopne pop repnz outsb push sbb ret mov add add push (bad) fstps icebp jle in sub jae ret xor xchg rorl out and addr16 fstpt dec std add mov dec and xchg in lret adc cmp bswap jne repnz jg ljmp lahf pop data16 fst pushf push inc xor movsl lods lahf lahf (bad) mov adc dec (bad) xchg stc add das movl and sbb or mov enter xor andl jnp jl,pn push fnop test fbld lcall imul (bad) pop sbb push add ret iret sahf aam mov jge bnd fdivs loope ret ret stc cmp lock jmp dec and dec cmp iret mov aad or xchg xchg daa lods je call (bad) lock fist dec pop pop out popa push nop nop cmp rcrl cmp sub jge addl mov add push sbb or mov fcmovb in loopne adc rcrl or pop push (bad) rcrl jle fcoml adc add lods imul mov imul inc rcrl jne mov nop cld loope (bad) push mov lock jbe push pop and js mov push cwtl pop sub (bad) fidiv add lret adc (bad) jnp adc pusha add sub imul mov xor add mov popf (bad) jb lds dec dec mov sub mov (bad) push lcall rcl cmp and sbb scas inc fucomi in or and ss sbb sahf and (bad) cli xlat mov mov ficomp popa cwtl mov mov xchg jae jns cmp mov (bad) pusha adc out xchg jecxz jp addr16 jno push repz pop les inc lcall xchg std mov jl or cmpsl enter (bad) stos add (bad) addr16 push fistp pop (bad) cltd aaa pop lcall movsl dec test add fs int sub test sub add aad test out out jg ljmp ljmp call pop pop fnstsw jecxz (bad) shlb js cmc or scas sbb xadd jecxz push jne push cmc cmc mov lea cs lcall mov loop fs sbb xor int dec lea popf push push in or mov push mov cmp mov pop lock mov repz xchg sub rcl sti mov cmp (bad) mov jge test pusha xchg and mov adc std std add sbb push cmp add inc int ds aaa jnp pusha cmovp call inc test mov xchg sarl xchg outsl push xchg scas dec cld pop dec cmp fldenv jl jnp in out xchg xchg xchg popa pop mov push and aam mov dec push dec xchg mov cs (bad) xchg pop arpl pop scas cmp fs fs cld iret add dec pop loop int3 data16 mov xlat in mov dec (bad) (bad) jne fldcw xchg sub cld (bad) cltd aaa xor icebp icebp xchg inc xchg scas iret jne fst imul addr16 jge push lret mov mov scas jecxz sti push mov testl repz data16 xchg adc outsl mov dec jnp lds push (bad) adc (bad) xor scas gs adcl popf bound mov lahf jbe (bad) add movsl cmpsb push xchg mov adc jmp in push jmp xor es cmp jae sbb push jns jge inc xchg adc xchg mov test lret inc xchg arpl fwait cltd aam popa lahf out sub cltd pushf push xchg and addr16 mov jmp andl movsb insl scas ds push and pop sub mov mov out sub loope adc jnp mov xchg mov xor adc add xchg (bad) test (bad) pop push xor cwtl mull fisub js dec dec add mov xchg dec aaa sub rcl lods xor arpl add dec mov outsl movsl lahf lret clc xchg sti js sbb xor add add (bad) inc bound or out ds mov jno incl mov addl incl cwtl pop push lock xor int fstps pushf sub xor pop cmp pop pop test fwait dec mov push aad fst mov adc inc xchg pusha gs add push xlat aam sub cmpsl jae lds or mov out dec mov push das lds inc cmpsl add jbe sbb jp cmpsb jg iret push add jecxz cmp jns ja sub jl add dec mov dec push mov xor mov ficomp mov jb sarl int3 xor pop push ja and roll xchg outsb mov sbb push and fwait and inc sbb sbb js sbb sahf or mov aam dec scas pop lret add xchg inc lret jns (bad) data16 inc inc jb (bad) andl test sbb adc pop mov inc cmpsb popf pushf pop call stos out jle test clc fcmove jg jmp adc cld int xchg pop xchg dec push inc int cmp push and jle add or rcrb and adc pop add cwtl or jno insl in jnp fld lret into or fsubrs push mov dec inc (bad) or into pop (bad) sti inc push cwtl mov xchg shl imul sub or mov sbb cmp mov mov mov fwait sbb pushl stos xchg (bad) sbb loopne adc stc cmp sahf (bad) mov (bad) daa in cwtl mov add nop pop loop pop pop xchg adc out mov push pop fbstp (bad) (bad) out xchg jns push sub mov xor cld loope lcall add es cmp jae sbb cmc add fcoml lock lcall mov pop in popa loope xor xor fs cmp sbb mov ret fild mov push pop inc xchg mov dec lahf sbb cmp ds seto cmc push xchg pop xchg ja xchg clc lock cmpsl je add ss pop lods aas out cltd and cmp fwait int3 shll pop scas inc push or loope (bad) xchg fidivr add push (bad) mov outsb mov bound lock (bad) loope dec add xor (bad) and faddp mov loope sbbl test stc pop out enter inc sub mov (bad) fnstsw jecxz mov jecxz inc adc xchg out nop mov sbb shlb sub dec cmp push jmpw insb xchg sahf pushf aam push out arpl push push insl push or jnp sub mov scas adc xchg mov push sub and scas in sahf mov mov mov insl test jnp push mov push in aad test loopne jp sbb jle xchg xchg out out aaa js cmp jecxz enter les xlat stos inc imul inc popf stos and pusha sub push mov pop lods xchg push and stos cltd mov mov pop cli lret repz data16 and lods cltd ds test movsl sbb das jb (bad) repnz jbe in insb mov rorb scas cmp fildl std jl test cli (bad) or jno inc jb (bad) andl (bad) pop adc gs cmp cwtl pop xchg pop pushf pop outsb aad or pop mov push lods stos out out and out and paddq mov xchg xlat dec add mov loope jnp mov mov jg bound cmpl add sbb sub lret lret imul mov dec inc (bad) or into pop (bad) sti inc push cwtl mov sub (bad) cs nop or divb inc test push inc inc in icebp icebp pop pop out clc clc cmp sub sbb sbb dec test (bad) jo pop (bad) adc div dec sbb cmp sub in pop rcrb test lods mov add jo pop hlt xor jns push mov iret sub pop sub pop (bad) push por xchg lock addb adc and jae sub (bad) rol cltd cmp adc and inc add sub ret rcll mov xor (bad) cltd cmp arpl adc sub rclb push in cmp sub enter insl out mov ss mov push push pusha fist cmc jl (bad) call (bad) jp test in jp pusha sub (bad) push fistpll sub mov push or jne dec dec dec rorb data16 ret pop orl xchg push xchg aam jae es xor xchg jo push sbb mov ss mov fiadd mov xchg dec xor or js sbb mov ds or das pop pop iret push mov in fldl jecxz leave lret cli add out pop push mov adc rclb mov pop jo int pushf pushf pop shlb cmp cld arpl pop (bad) sbb stos out imul mov adc call adc and xor cmp dec sub mov or inc sub push and es mov mov insl xchg xlat push sbb cmc xchg push jle int gs rclb xor adc je dec js cwtl or gs and rcrb int sub imul imul push lahf pop outsb loope jne sub fsubrs lock xor sbb std std aaa add sbb dec icebp stc mov (bad) fldl sub addb es add fbstp fwait jnp sub add xchg pop movsl lock dec adcb insl pop clc adc sub jnp popf push adc loope aad ret pop movsb ret mov mov xor cmp lcall pop add into sub mov popa int3 int3 inc sbbl or inc sbb dec pop xchg mov lods push cmp into mov sub add push leave add push push nop sbb mov in cmp ret pop jb jl xchg imul jl mov int3 pop movsb cmpsl outsl scas pushl mov (bad) push mov (bad) hlt popa inc (bad) out pop inc jl iret push mov pop lahf and jge jmp cld std insl insl ficompl push push outsl outsl add cmpsb push add mov aam xchg pop pop or popa (bad) in loopne cs mov cmp pushf push jbe sbb sbb aam sub loope mov lods inc das adc jge mov test repnz lea xchg dec push je (bad) sarb loopne in andb scas adc and mov push das sub imul dec cmpsb push pusha inc xchg stos movsb mov mov ds pushf outsl test getsec std test pop aas clc ss or call testl ss or add je dec dec cwtl cmc xchg or in lret add adc rorb jne push test jl jno pop hlt rorl push and jle das inc xchg push outsl movsl lahf lret lock js adc jl jno jge jne jns sub cmp sub jecxz mov jecxz inc loope repnz ja int or and pop (bad) or cmpsl fucomp mov mov xchg mov mov cld clc stc xchg daa lcall mov xlat mov sbbb lods sub sub in cmp enter add add inc inc insl insl faddl out out (bad) scas and fidivl insl lahf pop mov cld mov loopne fs lods icebp cmp push cltd pop cmp jns mov pop ss or subl inc dec xchg dec mov jb (bad) mov push mov mov das (bad) mov mov adc inc jo inc in (bad) in mov or mov adc out adc or and test add das and sbb outsb mov orb jbe fldcw sarb and cmp pop xchg pop movsl cwtl aaa mov (bad) pushf dec outsb add js fcompl in popa mov cltd inc mov mov rorl xor leave xchg dec and (bad) jg (bad) cmc jg je lahf into daa pusha divb sbb lods mov icebp cmc movl (bad) xor in jnp bound mov sbb daa lahf std ret and cmpb mov idiv dec push cmp mov add test push dec aam in cmp xchg or insb repz jne rol movsl leave ljmp pop jns sbb loope push js push dec js push scas push shll movsl or push stos sub out mov lret adc mov push or insl dec (bad) pop ret loopne sub jg pop imull mov pop (bad) xor adc addr16 in arpl test push icebp notl ljmp stos jmp add fwait negl cmp aaa inc cmp push aaa or stos out cwtl scas in daa mov adc sub jno sub and mov mov aas dec jmp insl cmpsb ds mov push push call jbe xchg fnstcw mov jp dec xchg mov aas out xor testl fs subl cltd in jo aas fisttpl push addr16 into jbe imulb (bad) mov mov das (bad) and stc push lock jo fild nop fidivrl or and ficoml mov add cmp add ret aam dec push push pop xor push shl (bad) xor dec mov call mov rsqrtps rcll mov dec xchg cwtl pop dec sbb movsb cmp lock andps and jp (bad) adc sti xlat xchg push leave pop fstps ret pop pop mov aaa jnp sbb std lcall cmp dec pop mov (bad) push inc mov inc xor (bad) rcrl jnp rcrl (bad) out mov out cmp cld inc mov lds dec (bad) mov lds push push add mov xlat or or test test or and cwtl pop dec xchg xchg cmpsb loope mov out mov inc dec adc pop lock js inc cmp adc add in pop push xor shrb cwtl mov or jecxz ret sahf inc addl push xchg pop rcrl pop div cmp dec in popf jmp cs clc movsl inc test xchg aam pushf hlt jle rcll ret and xor idiv subb xor add jb mov add repz push lret lods sahf lahf inc mov sbb mov daa or or cmp xorl in xor mov jae adc cmpsb add sub (bad) (bad) pop cmp sahf xchg jge xchg aam outsb xchg imul sbb addr16 mov push test adc js cltd fcompl rcll mov shll in inc jle cmpsl in push xchg cmp nop xchg pop xchg xchg bound aad test jns arpl nop cmc lea jb test les (bad) fsubs loopne inc cwtl loopne xchg out clc cld jbe sbb int3 pop adc jge jl adc add xor pop mov das hlt in bound adc fcoms out sub insb arpl and pop lds push (bad) adc nop xchg inc ja sbb push icebp inc mov fstps sub fwait mov push jp adc mov mov adc push adc or ret sti jo push mov test push add psrld xchg pop xchg jae cli mov or jle jne mov stos mov add jno push or mov push scas es or lcall jo and or adc xchg rorb add jns mov repnz xor (bad) xor or cwtl mov xchg sub jmp pop faddl pop mov int3 push in mov je call sub iret adc xchg pop test scas jecxz movsl fnstenv xlat or mov dec lods pop aas dec pop das sbb jno and stos ss test cmpsb (bad) inc mov mov or dec jns cmp insb xor mov and in sub call add (bad) gs xchg push test fadds sarb adc jnp or rorl mov outsl js adc push push in mov in jbe and mov pop test jae mov and stos add into add pop shrl nop and add pop mov es jno jp mov clc inc pushf and subps dec cs xchg int3 adc sub adc jecxz sub jnp cmpsl push adc mov mov mov mov jo inc repnz xchg (bad) inc andl pop pop jne hlt jnp jo int add imulb pop mov loope psllw xchg sbb fstpt popw sbb stos (bad) movsl and pop test out call in rcrb sub push das (bad) jmp cs push aam test in sti scas mov js lods rcrl xchg sbb rcll cmp mov js push or push xchg pop cwtl (bad) movsl cmpsl in push xchg cmp arpl pop into mov gs aam pop popa inc daa inc les and mov push cmp dec xchg notl in or into or test shld test divb popf push shll sbb fs adc les loop cmp mov imul jl or push push xchg xchg xchg sub enter mov ds push push mov adc jnp xchg xchg icebp ss sbb in mov aaa xor fisub cmp or in xor add cs pop adc add lea or xor test or mov pop inc test jbe ss push and jp jle cli mov ljmp sbb int3 mov add addr16 mov dec mov add jmp xor lods push push (bad) mov dec ds pop mov dec push rcll pop mov dec cmp sub or repnz push cwtl push leave insb and xlat js cmp (bad) sti out xchg push and aam mov push sub jle ret stos adc cmp dec inc sub pushl js and stos mov lods jle or and xchg out or in in jp in lods arpl movsl jl xor movl mov ret inc sub lcall scas pop add push mov push add mov repz mov pop sub xor cmp add mov (bad) sti adc jbe xor or sti jmp mov or fisttpll inc ss dec ds ljmp fstl push mul in sub xor repz in imul insb and loop fxch mov xor mov cmp repnz xor mov mov adc mov pusha int3 or dec pop push or sbb ret imul mov out loop adc mov fnstenv arpl inc cld xor xchg xlat jecxz pop cmc stc lea sbb mov out addl loopne pop in adc jno xor xor lds fstps sub les pop sbb imul icebp sahf sbb aam xchg call push and in jle inc int3 (bad) cmc outsl sbb xchg push push in push or sahf push into popa fisubl jp outsb and pop arpl jl (bad) push sub or or out dec nop (bad) push and push push jmp xacquire mov fdivl push jge inc xchg lcall xor iret lret mov hlt lcall push popa cmp cltd imul aam (bad) notl push test pop dec cmp dec rclb push push and test test or xor and mov xchg mov jle test xor nop mov aaa inc orl mov mov rorb mov pop adc jbe inc scas scas cmp mov dec sub repnz es jge fsubrs ja mov adc loope scas pusha xor jne fsubs inc xor lock add test mov xlat (bad) fisttpll jnp (bad) mov jecxz inc adc xchg push xor ljmp aad pop repnz loope adc push sbb pop xchg push or out mov sbb gs sub ljmp adc pop pop aam jmp addr16 je xlat add test add add aas and les dec andb stos push lods inc add pop cld jnp push mov push adc icebp sbb jns jle cmp sbb xchg cmp leave out fwait inc pop (bad) dec jae fist (bad) in cmp mov fsubrl mov pop cmp push jne xlat sub adc imulb sti or pusha xchg (bad) mov pushf lods cmc cmp fcomps mov addr16 mov fildll adc push call movsb test sahf scas test (bad) inc (bad) jmp inc inc es in jg stos lcall xchg mov cmp popa fnop adc fnstsw (bad) rcll inc inc mov das cmpsb daa jmp out xchg add gs sub sbb (bad) jbe or aaa ss movsl in mov mov (bad) in fisttpll lods repz movnti xor xchg dec push iret add enter mov xchg mov sub fmull mov jo out imul iret test sub push rol in jmp cmc mov mov lcall ret push inc adc ficoml push or repnz aaa jp jns imul pop lcall xchg outsl sbb xchg pop pop xchg xchg add lret test sub lret call (bad) and inc ret mov mov adc sbb repz clc jae push pop pushf push das lret xor les je imul test popa mov int3 xor sbb mov cwtl sarb push loop and xor mov loop jo (bad) daa scas push push es sub lods hlt orl xchg jp mul out adc pushf out pusha divl ja ljmp std mov mov push outsl xchg xchg add mov mov jno xorl cmp idivl lock or xchg adc in mov in jbe and mov adc pop lock ror mov inc push (bad) icebp ret and pop and jg cmpsb pop sarl xor mov xor (bad) imul insb adc or out pop aaa bound iret jmp adc (bad) lock std push insl insb cmc hlt (bad) jp iret ja and mov out xchg jmp loopne lret ret fcomps sub daa sub stos lock mov mov xchg enter push (bad) out lds jmp push push pushl inc repnz or mov fwait mov push js inc and insb pop movsb cmp mov fbld inc cmp xchg or mov ficom call popa mov fisubl xchg pushf cmpsb fnop xor pop xor adc shll add call mov cmp lahf ja scas test adc push mov ds or das pop pop sbb lea mov jno (bad) cli mov mov xchg and insb (bad) jmp movsl frstor int3 sub xor ret adc xchg lret pop insl pop jnp xor sub inc jbe (bad) lock sti jp aaa rol push jnp sub fstl or push add xchg dec push adc loopne push pop sarl fisubrl sub lret xchg and inc aaa push xchg hlt icebp test xchg out jne dec sub insb in scas cmpsb div or (bad) dec mov pusha push lret xor es in (bad) divl dec repz push dec ret in js and jmp mov sbb jbe popa xchg in ret movsb shrb xor pop insl dec rcrl call je xor xchg jnp mov xchg addr16 sbb sbb inc pop jbe mov add jae les sbb mov decb outsb mov lods test (bad) lret testl adc ss fcomp arpl push fsubrl in mov stos pop or mov sbb in dec in push sti cmp (bad) mov and stos push fild mov test push jp adc mov cmp adc add xchg adc mov xchg dec sub and mov ffree dec or sbb test sub cmp mov test add jno adc jbe scas pop cmp mov dec push daa mov testl sbb aam cmp add out pop sbb jno insb bound bound mov in xor dec pop movsl push jns ljmp pop push push bound pop jecxz adc daa xor movsl sub jnp test adc cs daa mov and call mov pop pushf rolb fild add test xor inc sbb lds pop push sahf push fistpll js sub sbb icebp pop mov cmp jl repnz leave inc sbb inc pop fldpi xchg (bad) add scas scas out xchg out adc sti add cmp jl andl adc imul iret dec inc inc repz push pusha rclb and dec (bad) cmc std mov xchg std rcl or mov testb testb dec dec xor insb ss movsl (bad) xchg mov cmp (bad) negl out cld xchg lret mov pusha push adc sub lret dec dec into into mov ret xor cwtl inc in inc dec roll ret adc dec mov inc fcomps or push adc in add sbb jecxz loope int pop jb les mov or out pop pop out push js fsubrl sub sbbl add (bad) arpl sbb jl je xchg pop and sti sti aas aas sbb inc pop xchg cltd int3 xchg repz or push stc jae in in and or cmc jo cmp stos out adc lds popf xchg jmp push pop pop (bad) (bad) xor mov jo xlat or mov aam ret cmp aad psllw or and js ja cld jae dec std jb fadds ret adcl or mov ja scas lret ljmp insb and or add cmpsb sub sub gs sub out adc out data16 stos shlb insl movsb ds cmp test cld mov jbe sbb sub and lcall dec je into outsl xchg pop sub push inc mov xchg jo data16 pop loop add fs arpl dec push aam ret test or lcall jae or xchg and fcoml sub jno push xchg stos lods lahf lahf pmulhuw mov inc stc (bad) mov enter fsts fimull shrb pop fcmovnu jg scas (bad) pop (bad) out loop push aad inc mov jmp inc data16 inc mov dec mov mov pushf sub or lret mov (bad) push adc xlat xlat mov (bad) sbb pop mov mov sbb shll and lds dec dec mov stc dec and outsl mov mov cli fcoml cmpsb jle mov in stc repnz fbld jmp insb fs ss aaa xor xchg and jne add add pusha fs pop pop xor xchg pop xchg jg jns cmp mov and cld arpl xchg fidivl dec lret std mov fisubr mov xchg push mov fstps mov add cmpl sub xchg repnz push shl jbe sti stos xor cltd lods in cmp addb outsl dec shll dec add bound xchg sbb imul std cwtl and push xchg bound rcrl sub jne jl add (bad) dec lock mov int3 push adc mov mov enter push aaa mov (bad) fdivrl add fimul or leave add iret in adcl jge pop inc popf cwtl in push mov inc xchg hlt jns pop shrl shrl fsubl adc ret or inc and mov into test and cmp jbe popa cmc mov push xchg xchg jmp push pop pop mov mov jo xlat test sub fsubs jae in sti fiadd push add mov jae dec scas dec rcr fdivrl add pop xchg xchg add cmp jmp add sbb xchg hlt outsl and mov daa mov ficom shrb cmpsb push sub pop lcall insl mov lods out fs arpl scas cli push xor add orb xlat outsb icebp orl mov adcl push iret xor dec (bad) push stc fistp in inc sbb mov jbe add je cmpsb ficompl push adc outsb repnz roll xchg jo adc insb push and cmc fwait sub pop push clc es jecxz jns repz mov dec inc fadds (bad) pop mov aam inc scas pop sub fildl js xchg or push data16 inc jge,pt dec ja sahf sahf insb lds mov cld dec mov push adc bound in sub rcrl mov xchg and aad mov (bad) mov cmp es lahf push aam jp in gs int3 dec std std xor dec dec mov pop aas xchg cld push repz jb mov adc xlat add jp cmp outsl mov scas ret outsb add inc popa imul insb xor adc mov or lcall sbb fs test ret out enter int pop adc pop addb (bad) cltd xchg lcall (bad) jp jno mov adc add lcall mov stc xchg add out (bad) lea mov in or mov movsb testb dec dec inc jo jle sahf subps aad mov add cwtl leave pop pop pushl jle ret fcoml sub fwait xchg jmp add flds int dec pusha fmuls into popf push mov out mov fcomps gs cmp sarl mov jg lods xchg pop sbb lea cmp push xor testb mov pop sti jecxz cmp std cmc imul fucomp stos fistpll pusha lods push in mov jno test daa xchg lods shrb setno sahf fucomi pop adc in xchg aam mov or es inc xor add insl stos sbb scas scas nop nop dec xchg or add clc jns (bad) adc les call or push (bad) push mov call scas cli pop fcomp jns jno inc and push xor fiaddl clc mov or lcall pop aam pop mov cmpsb and mov fwait pop dec dec mov mov jl xor mov or stc rcl jae sahf or nop pop jmp imul jbe add pop in ficom std push mov in shrb je xchg jno cmp jg jns mov pushl ljmp stos ss and sub jno mov adc add mov dec cmpl mov add jnp movsb mov and ljmp or out push call and les dec mov xor mov pop popf inc lcall (bad) jle xabort ret jnp (bad) adc mov pop jns mov std cmc popaw daa daa mov mov in ja (bad) jo sub push mov mov add jg mov push and stos push sahf push add insl sbb stc repnz jmp imul divl leave int3 inc xchg inc jbe jno xchg and adc jne leave shl in in sahf xchg ds shrl lahf pop adc push cmp adcl xor sahf das xrelease add push cmp or repnz xor hlt sbb pop jnp clc or jg jnp ja (bad) into cmp pop je mov fmul hlt stc pusha mov or cli mov inc leave mov sbb test inc movsl movsl pop xchg jge pushf pushf pop cld js aas cmp sbb cmpsb adc out and arpl dec lret xor jae sub incb mov in mov mov jne hlt jmp movsb enter dec loop and scas mov repnz aam shrl out mov lret sub cli fwait mov aas cmc icebp (bad) rclb add js orb (bad) scas pop push pop cmc jnp clc cmc jmp mov int sub or jne add mov out es adc push outsb loopne sbb push enter mov stos and in inc sbb jle pop nop mov xor and je pop push mov and jne fstl mov mov inc cmp jne loope dec in insl jmp loope js cld clc cmpsb je dec sahf (bad) jle bnd mov data16 rcl xchg add enter ljmp (bad) ds cmp cmp jle test (bad) jb pop lcall data16 jp aas push cld sbb shll fidivrl or aam add sub adc fucomi in adc xchg xchg xchg ss stos icebp mov in out int3 pop loope add adc rorb (bad) fildl fnstsw inc jnp cmpsb or shlb jns test (bad) or add push bound and jle jno (bad) mov int fsubs sbb add jp clc add or adc das pop push (bad) mov (bad) mov mov xor shrl or xchg outsl push rorl dec cmp sbb pop pop bound mov xlat mov inc out in fcmovu fsubr or rolb jo fdivrp enter cmp and mov inc es mov dec inc inc fwait scas mov cld scas out jle cs outsl scas push and sub dec mov aaa mov sbb sbb inc xchg sbb sub icebp jbe add xchg xor ss push adc xor add dec adc add lahf jb cmpsl xchg mov xchg jge jnp cmp testb jo pusha cmp and pushf outsb xchg adc lods inc mov aaa inc inc jnp sub add stc xchg add call mov push leave jmp jno in jge sub punpckhbw outsl in ret mov pop inc mov ret xchg (bad) lret mov loop imul fiadd mov mov add or aaa ss arpl mov ret dec jg fdiv pusha pusha inc mov sbb dec (bad) pop mov lds push into pop inc loopne mov and and ret mov jecxz outsl orl dec sub and div scas inc in in push pop cmp jnp mov push jmp sbb loopne xor mov pop pop or xlat xor out and push std hlt dec dec std je xor fisttpll fimull shlb addr16 and repnz lods test xchg test test dec pusha outsb iret mov sbb fwait push xlat mov jbe push sbb add ljmp cmp les gs cs das jge cs adc cmp push lods outsl call sub and outsl pushf adc pop jecxz mov movsb insl xchg imul and add ds sub outsb jecxz (bad) mov lea sub test ja fdivp jne enter mov mov mov stos inc in (bad) sahf mov push push mov lds and popf jmp repnz imul sbb adc (bad) cmp push pop adc adc (bad) mov cmp push push iret enter test out ret fistpll mov das (bad) popa sbb scas frstor jmp pop lods lret lcall mov ljmp sbb movsl cmc pop mov cmp pop sahf das mov data16 jle loop fs sub lahf pushf cwtl sbb and add push imul (bad) clc std xlat cmovp cld mov sub insb lds mov loopne sub stos inc flds sub sbb and addl enter iret arpl fcompl outsl dec add das ljmp add pop jb lea in shr pop rcl jne lds pop xor jle jl jne mov cld inc or in dec cmc ss push cmpsl es xchg push pop div cmp jp in add mov cli or (bad) dec aad add cmp jle mov enter stos adc or mov xor sub aad dec mov sub imul out out loope adc mov fistl loope test mov lret ret (bad) jns sub jno (bad) inc arpl ret dec in xchg (bad) lcall mov lods pop (bad) bound imul pop repnz clc xchg enter push xor testb cld scas ret ud2 push pop push push je sbb pop dec rolb dec jge add cmp lret push outsb mov jns pop insl test cmpsl jnp push pop pop adc gs xchg xor enter lcall jecxz shlb inc mov movsb nop xchg loop scas push outsl outsl (bad) fimul push push popa mov fcoms mov rorb inc inc mov imul dec out xchg xor scas and sub jno add mov fsubrs (bad) sti adc popf adc xor jp cwtl lret sbb adcb movsb mov and call (bad) xchg rolb or dec gs mov cltd and cld push repz jb popa negb seto cmc rorb aas push lahf push xchg xchg icebp mov (bad) cmp daa and in sub out pop xor fcompl outsl dec add xor ret add jbe inc (bad) inc or imul mov sti jle adcl cltd popa lcall cmp add in adc out xchg or out std std aaa mov push test rorb mov test mov jg jne inc in out dec mov in lock test cmp (bad) pop pop sti jmp test out pop cmc push push arpl rcl popa cmpsl out (bad) gs mov lock (bad) xor cmpsb shll and aaa repz xchg mov loop lods and ss lods and mov decl or push xchg pop fwait ja (bad) dec jp adc in xchg loope mov inc lock or cli xor pop cmp jge pop dec add add and jno mov lea daa hlt add mov das xchg jle adc dec repz cs and pop fcmovbe int3 std inc sbbl nop and imul mov test gs fildll addr16 fiaddl sub enter dec movsl fsubp test add aaa int3 sbb loope pop sbb pop pop mov jge xor pop incl mov mov (bad) stos fistl fmulp mov pop in into es leave sub out cmp mov cli test sub or sub and dec in mov inc in mov mov sbb jle fidivl fnstcw sub mov or pop icebp adc push nop iret in adcl mov in pop mov lret inc inc xor in (bad) (bad) cmp sub fstpl pop popf popf popf popf sbb dec dec test (bad) loopne rorb xchg out in loopne insl pop std jbe popa xchg out fcoms xchg in outsl push lods cmp adc pop pop lea js or es xchg aaa imul mov pop lcall jae repz jne and insb ja mov notl add fidivrl arpl orl movsl insl push mov xlat inc mov (bad) xchg xchg mov sub cmpsl pop or dec out mov imulb lcall rcrl push sbb jg stc jge stos scas scas fiadd dec mov pop ret xchg clc icebp fwait sbb and shl xchg loope test test (bad) arpl fcompl outsl dec add das ljmp add sbb pop fdivl mov repnz jnp and mov jle mov sti xor and cmp jg jle jno fcomps test dec and xor jb or dec iret xchg push (bad) std xor mov jno cmp xchg aad popa ljmp fistl inc cmc cmp or jo lcall push mov mov jne add std daa mov mov cwtl inc sub daa add push pop aam sub jl cmpsb insl faddl add and aam outsb arpl mov not and push push and sub int mov adc fistl in or test xor jge jg out es dec les fist outsb in cmp rorb movlps adc (bad) mov lret mov int pop test jle or xchg pop data16 add nop fiaddl add int3 jb sub imul cmc test mov inc out call les lea cmpsl pop xor repnz push pop mov inc inc pop fiadd (bad) cmp xor stc cs incl mov mov (bad) stos fistl fmulp mov xchg (bad) xor in into es leave sub out cmp mov cli xchg sub cs and dec in addl in dec addr16 std pop loope insl fsubrs jl mov xor sub push pop xor out jo aad and and dec push cmc xor push (bad) lcall mov insb imul leave testl cltd cmp pop mov fwait xlat movsl pop push cwtl aaa das jle dec les cmp and rol mov add test aad push fldl repz bound mov sbb dec xchg push aaa aas mov sbb xchg mov in pop adc mov push in cmpl sub sub fs (bad) cmp jo jb cmpsl popf pushf inc pop push fsts mov loopne dec add mov xor out test sub out insl shrl mov scas pop es pop jo test ficoml or in dec push xor mov int3 mov ret mov incl outsl (bad) dec pusha fxch movsb sahf hlt mov push cmp cltd call xor jg out test jge push inc cltd cs xor (bad) fadds rorl push fsubrp mov test xor aaa sub jl je movsb sub cmp fninit (bad) mov jecxz inc loope repnz xor das lret popa in shlb test scas (bad) jge xor xchg out clc js and loop pop xchg rcl movsl fs cli sub lcall pop mov xchg (bad) rorl sbb cmpsb mov insl insl mov lods out jbe push (bad) mov push push push xchg jbe sbb mov adc fucomi in or fs fwait ja out inc gs or outsb jbe dec ret add popa jbe (bad) in bound insl sub icebp cmc jge mov (bad) jmp or mov ret push fsubrl mov xchg mov lahf and or jmp enter (bad) stc je cld jle dec xlat bound (bad) push in xchg jg jmp or lods scas (bad) ss repnz xor fisubr jg push fucom mov pop pop adc sahf push lcall shlb jnp std adc jno add frstor mov popw xorl jb rolb mov movsl mov dec mov pusha int3 inc add push add pop lods bound loop dec mov jl (bad) mov fisubr iret cmp xor dec hlt mov orb out mov loope mov pop or out scas (bad) or mov push push std mov sbb mov add mov (bad) xlat es repz scas bound pop inc ret (bad) sbb daa les (bad) das mov movups mov scas scas ds mov popf bound aad jns inc aad jmp and lret sub iret mov lret cwtl sub rclb fnstenv cmc push adc push fcomp jns jge dec aam push cmp jp sahf lret sbbl jge imul scas add or pushf jbe out pop pop and fist pop cmpsb jo lods xchg push mov xchg das aaa jl push push mov lds mov ljmp rcl sub adc push out xchg ret aad xchg xchg (bad) jle xor mov lcall or outsb mov gs adc xlat push or das lds add xor les es push mov and lahf clc jmp xor push sub add inc or jp cmpsl xor outsb adc fsubs addr16 fsubl push sub push sbb repnz mov inc lret or cli or test fwait (bad) pop repnz mov cli dec mov mov and loop repz and loope add gs out ljmp sub cmp stos out sahf push dec sbb and mov mov ss stos and fiaddl or notl push (bad) push push xchg shll movsl lea insb insb out jg sbb pop adc jp and xchg push jns and mov mov sbb cmp push jne sub or punpckhbw sub scas mov test std xchg push xchg jmp mov xchg jnp xchg cld mov fcoml scas dec std shrb std scas push mov dec mov repz mov int inc fdivrl cmp popa inc fcoms fistl addl cs sub mov repz adc fldt jo ja mov les cwtl lret pop xor shll dec and lea hlt push imul orb xor cwtl (bad) imul loop insb push cmp adc mov jecxz xor fistp dec sub push xchg xchg mov mov decl movsb pop loopne dec push adc lods cmpsl add mov loop sti insl xlat lcall loope cltd pop dec les rolb repz push into jle fcoms adc std xchg js sbb push jae fstl push push pop push jb test out xchg gs dec add imul outsl dec cwtl jg in mov inc add sub mov shrb mov jno push (bad) fnstcw ljmp div mov add sub outsb into mov daa (bad) mov xor popa or jno aad or (bad) xchg (bad) and cwtl push sbb xor add add add jle mov outsl rcrb aad dec or in lods sbb or xlat mov rorl xchg push data16 mov mov in mov arpl fwait push popf enter jno,pt mov jl jns ljmp inc cmp out (bad) mov js (bad) cli add mov enter repz sti std aaa aaa inc je shll and inc sbbl push xchg add leave pushf in test jge mov movsl inc mov popf pushf pop pushf outsb fidivl (bad) dec inc sub insb adc gs pop and sub mov daa push in pop ret (bad) shrb arpl ljmp pushf adc jl insl cmp dec xchg dec icebp movsb insl movsl ds mov (bad) (bad) and sub lods or icebp les or lcall andl flds adc mov sbb stos cltd loop jnp in mov fisub lahf sahf mov add or xchg (bad) test cmp pop test (bad) sti inc sbb sub and cmp jne pop cld inc adc icebp lock mov adc je fdivs sub push mov inc fstpt fnstenv xchg (bad) fild xchg sub movsl aad cmpsl (bad) mov xor cwtl pushf adc iret out xchg jle icebp clc clc ret sbb push pop fidivl dec or xor sub inc inc std add je les add aaa mov popa int3 int3 inc sbb lret xchg lret loope ds out loop lods ja pop shll pop mov push icebp icebp out iret add outsl sbb xchg cmp icebp pop or or (bad) cwtl test inc and cli repz pop in std sti aas aas cs les cltd xchg push dec ret lahf xchg jmp xor inc in or adc mov cmp sbb mov push shl push xor test cmpsb mov adc mov lret mov sub jbe xchg push adc adc dec js adc test mov add jae add rcrl aas lock lret test mov inc sub cmpsb test ds pop or lods shrb sub xlat sbb mov in aas aas daa imul rol dec mov and push jle mov mov pop fs shrb es xchg xor xchg iret jge out inc (bad) mov mov or data16 popf into push mov fsubrs arpl fnstcw push fdivl ret mov sahf and xor jl jno pop inc rcl das mov sbb push and jle inc mov fmuls pop xchg cvtps2pd xchg jb add popa adc jno clc stc call faddl fnop push lods push cli jns mov mov xor or in jns in addr16 lods pop cs mov cwtl fs pop sbb adc add clc clc sar push out out jb ret xlat adc aas gs mov push das cmpsb out stos jge ljmp xchg cmp push repz fcomi push scas mov ljmp dec (bad) insl adc adc in rcl ds fs ja xchg test xor leave dec inc or popa push ds dec dec test movsb sahf divb push push cmp ss cmpsb cmpsb int3 divl les or test sbb insb and jle sbb add push inc sbb ret aaa inc inc fldenv lcall scas scas mov fldt stos stos inc inc prefetch or inc inc ds inc nop addr16 in pop jnp lahf subl mov or outsl imul out cmpsl fildll sub (bad) lods pushf cmp xor lret ret mov adc loope pusha jno jge repnz jge mov xchg push fsubp jp bound popf inc iret bnd xchg xchg stos (bad) in lret ljmp icebp test and inc repnz dec dec push cmp dec push outsl jecxz jmp js sti mov add or jbe rol jecxz and fwait movsb jno rcrb pop cmp psubw fadds add mov mov into pop std adc rclb rclb pushf cmp lea xchg leave call rorb rorb dec cmp or push nop push cmpsl mov sbb js in in stc clc pop push inc ljmp jno xchg sub decl mov clc mov aas repnz out scas adc ljmp sub sub sub sub push fcmovu (bad) dec cwtl mov jne inc loopne push dec loop push push mov arpl scas cli push xor or cmc test jmp adc xlat (bad) data16 cwtl insl fs cmp leave enter add push in jae add dec dec fildl popa xchg pop jns or sti (bad) das test (bad) aad les jp int push rorl jg push jo rolb jle add push jle ljmp lcall inc (bad) fsts fsubl sarb sbb fisttpl js push stos into inc xchg (bad) ficom faddl ds in sub in andl mov xchg fbld cmp shr push out or push push insl sub lods xchg xchg xlat adc jae pusha daa push push addl dec pop sub (bad) fcmovu mov ret sti push test loope push fucomi rol aad sub sahf (bad) ljmp dec lcall xchg shll jl ja clc xchg fidivl rorb push fsts mov jns add popa add (bad) out lret pop ds xchg add rorl xor cwtl int out xchg ljmp or hlt stos daa dec es dec adc iret lock pop mov jg ljmp adcl push mov gs inc inc lods jl mov fldl dec test jnp fimul dec fnop adc xchg test bound sub (bad) lock adc fwait out lahf nop mov lret dec dec into into mov into ss je out jp dec mov div add ss (bad) adc test leave or imulb xor or div mov jo xchg popa cmp add sbb cmp (bad) ljmp fst pop jae insl dec dec or adcl insl std push mov mov div rcll gs aas aas cs inc inc pop popf cltd int3 xchg repz ret xchg insb jp js aad int3 xchg movsl movsl pop mov les loop das pop sbb xchg push mov jg mov hlt rolb inc inc mov pushf xor sbb inc inc rcll sub or repz inc inc sub sub ret cmp jae fadd (bad) scas test testl mov loop inc mov (bad) sbb arpl dec das fidiv outsl xor add popa dec push mov mov pushf in cmp mov ficom (bad) jo imul stc stc sbb in push stos xchg xchg out test xor jg daa pop xor xor sbb cs mov push dec int stos stc fdivrl add mov cltd pop sarl jns mov test es push mov and stos push loope int popf inc inc mov push lods and das push push and (bad) cmc std cmp testb (bad) notb cmp add sub pusha (bad) jns pop incl (bad) adc inc into jg and sbb mov fwait (bad) pop repnz mov jecxz call (bad) outsl inc jmp adc stos outsl (bad) mov loop jo lcall push (bad) xor imul mov ljmp or lods out out mov div hlt and adcl pop and push jecxz cmp outsl insb fs dec push inc add xchg test fildl adc push cmp dec imul rcl lret jp daa pusha mov stos mov and nop sbb roll mov (bad) insl flds mov nop ds je cmp stc add int mov and inc push dec test div mov out sub pop cli adc push iret xchg fsubrp test iret je push popf popf lea mov sbb xchg dec in mov add arpl ret test pop cli ljmp push out push jns iret bound cmp and stos adc and xchg push mov cwtl mov sub repnz daa iret ljmp adc xchg push adc test xchg or aad aas nop and bnd mov cmp dec fwait mov or cmp mov aam add jecxz (bad) pop ficoml aaa xchg sub jmp arpl adc fdivr jl cmpxchg cld mov or outsl shrb mov stos test push xor xchg ret ret scas dec inc xchg xchg xor cmp mov push jmp ss clc inc scas cli cmp jno lea fs mov cmp insb xor dec hlt xor mov test sti jnp fcmovnbe push jae dec sbbl cmp enter add sub dec mov adc adc (bad) mov mov aaa scas or mov in cmp mov jp adc xchg xchg arpl pop xchg inc iret int fwait inc cmp leave cmp stos stos in pop popf pop mov cmp pop imul scas scas cmp shrb popf sub rcr les jecxz sub jo inc adc push xchg and jcxz fwait and movsl sbb mov das jbe xor push mov or mov scas jae mov fmull stc mov mov int cwtl xor fcmovu xchg incl cwtl pop push sarl sub call sbb lret outsb dec out std insb dec out push sub sub icebp pop jmp sub jg sbb dec mov fsubs fldt dec mov sahf (bad) sbb icebp sub push sbb gs and insl (bad) fcompp and jo mov (bad) mov jp icebp cmp xorl out andl dec add xchg inc test (bad) or je cmpsl push (bad) jb adc sub fisttpl mov pop cmp shrb nop jns,pt sarb mov cmp mov insb jo call xor pusha cmp std jle popf xor or lahf adc dec jnp sbb add aaa imull mov pop push stos add (bad) leave popa andb inc sbb arpl stos pusha lret mov popa and test adc popf jb pop dec mov cmp movsl dec in inc jle stos repz lret leave dec sbb cmp pushf insl xor (bad) bound fldenv dec je inc add test mov scas jmp xchg push pop pusha lds pop loopne mov xor out cmp imul jo push pop pop pop out mul loope aad cmp cmpsb cs orl arpl pop mov mov es sti scas mov js sub movsb pop data16 fcoml push cmp xor or faddl sbb test xchg mov mov pop (bad) fmuls jo std sub xor imulb and cwtl sub mov mov cmp movsl cmp inc sahf iret mov dec (bad) fiadd divl cmc arpl repnz pusha mov xor mov mov cwtl or xor xlat fildll add inc inc out mov xlat dec fldenv mov and lea push cmpl push test lcall jbe mov js mov adc xor mov sbb xchg inc mov cwtl cwtl arpl ds add (bad) jge ficompl push adc je jle insl pop lods or das add test cmp mov cmp mov aaa xchg xchg jmp push inc mov mov or inc inc (bad) ds cld adc aas xchg jno or ror jnp adc (bad) or add mov pop jmp push in pop scas mov sarl adc scas call mov and pushf sub sarl data16 das enter mov loopne xchg sbb and and push sub xchg adc clc insb sbb insb sahf push cmp test pop addl push testb lods dec sbb jmp push dec mov fmuls sahf sahf mov outsb out sub xchg (bad) rol xor sub cltd inc imul (bad) jb inc xorl mov test cmp fistp cmp inc fiaddl and or mov stos cmp prefetch or mov aad int rorb ljmp stos test mov fist arpl loopne in mov mov stos out out lcall test dec mov jle dec es jmp push dec jno mov orl mov das std ja aam enter (bad) bound adc cmp push in push outsb adc mov loopne adc xor mov mov ja lea cmp lahf adc mov aad das (bad) mov cmpsl div or popf mov xor stos pusha inc call pop imul nop pop mov sbb in adc ss dec or sbb adc jo inc lret insl insl xchg pop jne in jnp xchg lcall pop mov lea add push insl test and stos outsl iret mov pop lcall fisub or jg cli mov in adc jns jge push xchg sahf adc cmp (bad) out and and jg sub sub ljmp gs xor arpl ret fisub lock sub outsl mov add pop xlat sbb mov dec mov mov mov push push and cli rclb jle mov mov xchg js cmp or pusha (bad) or cs icebp ss dec and bound xlat pop fidivr (bad) fstpl sahf inc fs or jmp xchg add mov idivb push add sbb scas out ss jns scas cmc xor test lret sub repnz ret out lcall into xchg fisttpll pop and push jge rcr cmpsb push jl sbb aas dec lods (bad) out orl ds fldl or jl add dec nop test sbb ds fidivl inc push dec scas add sub sub out jmp adc (bad) daa push fisttp add outsl enter inc pop popa or out sbb (bad) lods lea and mov test and cli into add pop lahf push pop jp fisttp out test inc xchg xchg jmp (bad) cmp leave dec dec pop pop pandn (bad) mov jge xor fs add je pop arpl mov addl and mov adc add xor cltd std jle push adc sub xchg (bad) or pushf mov jg fldt jo cmp je mov pop push add lods imul lahf fsubrp in push stos orl cmpsl or push fist jmp mov call aad ret sub and rolb dec roll rorl dec fwait inc (bad) mov and in std add jmp mov lods mov cmp dec dec bound cmp cwtl jo sbb cmp daa dec add adc xorl pop std jg pop push push jbe out fidivl xchg sti inc add or push push cmpsb pop mov stos js out (bad) repnz outsl xchg rep mov faddp xor pop in pop xchg or outsl dec cmp lea cs mov mov cmpsl adc pop xchg pop aas nop adc xchg popa mov jns ficoml scas mov push sti (bad) arpl hlt pop lret and inc mov jl iret out jae outsl pop sub xchg xchg mov xchg inc sub ljmp sbb mov sysexit pop or sbb pop sbb jl mov ret cmp aaa aam sub addr16 push push adc xchg std cld fwait dec dec icebp and ds jg loop ss jle or fisttpl (bad) jp xchg pop in mov or insl out push fs jl xor jne cltd mov inc sub je xchg into sbb loopne jbe fisubr inc push pop lret test bnd je jns jmp sub mov dec cmp inc imul cmp clc mov xchg stc mov (bad) sub mov cmpsl pop pop in daa pop or stos test add push sbb or mov loop pop mov in lock push jmp mov fs sti pop les mov lahf sti std push xchg aad call xchg jl out xchg mov or mov jae and rclb lret dec xor nop bound mov (bad) insl push ss test jle xchg loopne inc test stos xchg xchg mov imul jo pusha ficompl or outsb mov add mov (bad) cmp fisub sti mov jecxz bsf pop sub ja std loopne sbb je jl inc lahf xchg rcr aad jmp sub or mov pop (bad) aas pop out mov enter or push jo and lods mov aam and jg in (bad) push and bnd lea mov xor test xchg push jle pop repnz xor ljmp xchg xchg mov sbb mov add lret mov es (bad) leave mov lds daa bound out dec lock lock inc sbbl cmp jo xlat mov xchg and je sbb adc (bad) repz arpl inc inc push fwait das inc leave dec and pop nop nop cmp mov cmpsl jae pop mov sub fwait mov pop repz pop outsl mov xlat enter (bad) outsl push pop fnstsw inc push dec adc jb dec sub push pop dec adc cmc js imul test jno scas fsubl dec inc or test add push repz sbb aam cmpb jle and data16 dec add adc pop mov sti inc jbe aas add mov pop jl adc roll pusha sub jb adc pusha movsb in ret sub jne sub nop in dec add (bad) jne and sbb (bad) rclb push cmc cmc inc (bad) idiv arpl xchg js cmp jp loop jl mov pop sti jnp or mov lcall lds sbb add xor fidivrl daa adc jns dec ds ja jge sbb xchg fstpl imul jno fucompp mov pop shll enter (bad) (bad) jl je stos hlt and mov (bad) aam and scas mov adc out stos repnz inc andl push jb (bad) dec xchg fdivrl cmp jmp xchg push fldl shrb outsb or mov (bad) pop (bad) cld (bad) xor insb aad sub cmp stos lds push pop ret sbb enter call in push push push lock in push or adc clc lahf adc jb and mov and pop insb bound xlat ja aad mov cli in inc adc iret cmc (bad) push push addr16 mov pop cmp es fnop jnp mulb cmp jl (bad) pop ljmp gs out and repz cmp push mov repz repz lret loope mov inc das or addl addb es orl loope,pt loope test test adc pushf xor int3 lds cmp out add sbb pushf push arpl mov or sbb aam leave leave sub jmp mov add add mov bound int3 inc iret sbb dec cmove xchg repnz mov mov ret pop jno insl fsubrs fsubrl sti rorl leave or adc aad adc mov lock inc inc adc in sti mov dec xor and repnz pop (bad) and cs pop adc push data16 aad mov aam mov repz sbb add dec aaa icebp dec adc clc or imul jns lods std mov arpl (bad) adc or add sub enter xor pop xchg arpl adc js push daa std cld lods fdivrp xchg repz inc inc adc sti jne outsb sub fiadd cmp mov or or test cs adc push insl mov test and rcr fucomip push sbb jmp add add mov stc jnp lods scas scas ficom flds test ret ret out inc ror in test jl mov mov adc mov iret xchg mov pop push test fistpl pop sahf fmuls sarb mov idivl cmpsb pop mov hlt push inc insl push ja lods pusha pop ss xchg es xchg xchg cmpsb mov (bad) jp aam cmpsb push cltd add cmp jecxz dec test repnz mov test (bad) mov fcompl push nop jecxz mov mov xchg sbb dec (bad) insb imul mov bound mov popl pop mov pop or movsl imul popl or dec out in xchg js xchg bound rol adc (bad) fsts mov sbb pop sbb (bad) pop test mov cld mov mov fbld outsb xor pop (bad) push add scas mov jge ficompl je stos sub xor sub xor xchg int jp inc cmp jno addr16 push lods es test adc addb mov add das das cltd pop mov xchg sbb jnp (bad) repnz ss jmp btcl shll xor lds mov cmpsl in roll out stos out add or pusha clc add inc cmp gs mov scas inc or dec sub add pusha pusha xor sbb push mov adc int3 xlat sub imul call and inc jnp xor push add adc mov pop jae das pop cmpsl cmpsl divb or push lret push mov dec rol sti jnp cmp cmpsl pushf shrl sbb adc jp add push call sub sbb or cmc into or jmp sub push test rcll pop add stc dec nop lds sub loop or in cmp (bad) mov pop out in scas jmp icebp mov add lods cld out dec std clc clc (bad) aas adc cmpsb xor imul bound sbb cmpsl fdivrl mov icebp fsubs rcl or pop test shll sub sub jne mov mov stc pop mov cmp outsl out std cld and ret cmc push clc fild push test or add inc clc popf jbe cltd mov inc hlt inc je,pn inc dec mov adc cwtl mov sbb push or dec cmc xor das rcr int3 or jb xchg dec (bad) pushw pusha cmc mov js adc add pop sub out dec cld push sarb cmc add sbb mov and or mov leave push movsl jns lcall push inc test sub aam repnz aas cmpsl test xor bound push js lcall dec ret and adc aad das ret cmp (bad) pop enter mov mov data16 out xor push mov call sbb mov lret push daa repnz lods jge js fstps xor in addl daa lods ljmp push roll or pushf and push add out cmp call insl shrl push push decl mov insb das sub jno cs inc andl lock daa fwait rorl popa fbstp cmp push cltd add addb jo cs jne cmp xor les outsb pusha insl pop sbb pop xor in movsl loope add arpl out dec out shrl dec ret pop xchg xchg ret cmpsb and fnstenv jae mov push dec xor mov mov pop jl arpl fnstcw pop ret rolb inc idivb lock xchg inc mov (bad) xor xor data16 dec ja inc stos outsl sbb hlt orl xchg push inc rcrl sub push fist bnd sbb adc ret xchg mov divb jp cltd adc cmp add jp xchg (bad) jle push test (bad) rdpmc sahf inc and or lods test stos imul insl adc xchg cmp adc mov call ss cltd lcall fist xchg rcrl mov (bad) sti sbbl pusha ror xchg add push fdivl rolb cmp or pop hlt cmp cmpsl jge mov mov out arpl mov cmpsl jns ljmp pop pop dec jge xor test push mov (bad) mov mov loopne or insb mov (bad) jae sub mov or out cmp xor xlat popa and mov data16 push inc dec xorl ja mov push and popf jmp hlt sub imul jo or fsubrl xor jbe jo add fisubl out js repz insb add cmp stc jb or xor les jg gs inc lods jae mov xchg pop mov xlat pop fdivl push pop fldcw mov lds xchg jge and push std (bad) jb dec jp insl insb sub loope push add imul in xor xchg aad aad cltd rol push and add and sub mov ds dec std imul pop jnp,pt xlat adc es adcb icebp addr16 inc clc sub aaa ss or jnp mov cmp aad adc xchg sbb jecxz or mov cmp div or imul jg lods push mov pop cs cmpsb mov lods and jnp pop leave cmp rolb add lods inc inc popl icebp cmpb push fcmovne inc (bad) (bad) dec ss out in or jl mov addl mov dec xor loope pop pushf daa push and mov xchg xchg daa decl mov lret and (bad) ds mov ds cmp insb mov ret inc scas cmp rolb push jbe or aad mov je repz mov add bound inc sub test jne inc inc push mov pop pop enter imulb push dec dec cmp push stos sub pop testb loop mov mov add jmp cli sti aas mov lret repz pop addr16 push dec dec or sbb push ss pop xor push pop mull loopne stc dec pop xchg sub mov push pop push fsubs clc test cld or sub cmp into out push incl insl xor mov outsl daa es mov js pop inc sbb pop mov leave jns cli movb and push dec xchg outsb ljmp ljmp arpl pop pop aam cmp lds cld std rorl stos sbb clc jno hlt dec fcmovnb lods lods insl xchg xor sub js popa cmpl mov insl jl std dec mov (bad) lahf push fwait xchg mov xor fwait inc cmp push dec or push das (bad) push and adc insl add mov popf popf rcrb jae pop and clc jb jge jmp jne cmp in (bad) mov pop sub mov dec push inc ret lock jnp repz dec or stc stc add mov arpl fcmovu or add movsb sbb add xchg mov ret or cltd or arpl int3 fadd jmp daa fldcw insl push push ret mov aad pop cld add adc lods inc mov les jo dec out mov popl loopne inc lock sub insb sbb jge lock lret mov fbstp adc mov jg in mov cmpl xor adc pop mov stc add ret in fcomps add pop fistpl push jl cmp out outsl sub jne adc outsl arpl xchg jl jno push jmp mov dec ucomiss pop jo jmp add fnstenv or cs iret add jns,pt jge sarb ret daa jp stos lcall xchg jmp out nop dec repnz loope mov inc inc mov adc push out cmpsb rclb fstl lods enterw movsb incb mov cmp sub rorl stc add lock ss mov push idiv xor mov out std mov ljmp fsts jno add or mov inc or jnp je ret (bad) insl in mov dec sbb ds mov sbb cmp mov data16 das rcr sti lea imull cmp sbb out cmp rolb into into cmp mov es in jl test pop pop aaa dec ljmp aas xor ret sti (bad) cld lods bound xchg in scas scas test mov es in mov insb outsb mov fcmovnbe lea das iret notl pop hlt lcall mov ss popf sahf fsubrs fs cvtps2pd addr16 sub add pop pop dec dec mov cmpsl (bad) test cmp lods lods stos stos fcmovnu push push lock xchg hlt hlt sbb loopne test popa jns aaa aaa adc int3 dec dec add push push arpl jno dec ret ret push push jmp mov mov (bad) rcl mov int sarb ret pusha mov mov (bad) cwtl adc or jle push fisubr sbb lock sub repz sbb push pop stos mov lea lret xor push cmpsb dec sub sub repnz sarb test sarl mov xchg mov in mov daa xor imul jnp lcall push arpl leave xor pop cmpl sub adc or (bad) popa inc xchg add incb rol cli mov and dec ret clc out jp xchg pop or rcll ja clc mov leave ss add cltd in or mov test stos scas loope ret pop or push bound lods movl xor pop loope (bad) cltd pop mov test aad or test lods and add jae pop mov or dec sbb inc lret adc or int3 scas xor arpl mov repnz xchg xor gs jge cwtl imul xor xlat jb or xchg dec dec inc add mov add push push stc xchg push mov add xchg mov inc adc jbe cmp call outsb jo test repnz mov cmp xchg repnz in dec addr16 (bad) std daa dec fmul rcl lret and outsb aas ja mov sub test out out push in in mov arpl bound push sbb cmp test in sbb jno pop mov and aaa movsl mov jo pop pop mov add add xor push and mov cmp xor xchg pop outsl cmp mov jns mov or lock js test sub outsl sbb xchg aam adc stos pushf icebp add jne nop clc cmpsb add outsb push sub lea sub inc int jge test movsb and aad fdivs shrl (bad) mov adc cmp (bad) roll (bad) fbld cmp mov xchg jae and ret shll mov jp aad xor out xor or out test in cmp jmp fcmove cmp sbb bound push daa sbb mov outsl cmpsb jecxz sahf adc test lret push mov ja daa pusha mov stos mov and cmp popf xor (bad) cmp and sub mov outsl xchg lahf (bad) inc xchg repnz sbb imul sbb ret or stos int fidivl cmc mov (bad) hlt xchg jnp movsl int3 xchg fiadd popa rorl (bad) dec or and jecxz or mov pushf jmp cwtl ret mov adc mov stos hlt mov jecxz sub les ljmp shr and aam jl jb or movsl ret xor dec mov pop aas aas std cld sbb push sbb ds out mov rorl jnp sub push jl xchg push in cmp in or add xchg mov (bad) mov (bad) push push cmp bound es adc sbb stos add push scas dec dec outsb gs mov adc xchg out mov int3 je je inc loope movsb pop xor sub add es adc cmp mov add in test addr16 add sbb and or leave aaa jno,pn mov inc inc cmp stc and or pop repnz lods test and xor pop (bad) out jnp sub pop out testl jb mov jp mov xor cs sahf orb test arpl cmpsl es loope cmp mov or div arpl in xor mov pop les addr16 mov pop test dec xchg out pushf jne rcl imul mov and pop aad enter out fsubl std (bad) out sti shl stos test fstps nop aam mov dec xchg mov sbb pop push arpl adc cmc (bad) or repnz popf sbb rcr xchg xchg jmp dec push loope sgdtl call cmp mov xchg xor sbb xchg pop sets mov pop pop scas and jl xor sahf sub push insb inc mov xchg push loopne dec sub movsb stos js aad in out outsl sub mov lcall mov gs add pop and out (bad) adc shll gs and insl lret xchg lahf std or sti cmp je insl jb sbb inc imul or fnstenv and pop aas inc (bad) jge jbe scas stos in jo mov aam push xchg mov lea xchg lahf scas adc (bad) jne or (bad) das out lods jmp (bad) cmp mov mov clc adc xchg test adc mov data16 pop jo testb das das pop push stc int (bad) and or mov fiadd testl inc test imul pop or pop loope addr16 dec lret pop xor mov jecxz inc sbb lds jae mov popa add in popa js iret mov ret or test jbe mov xlat inc sbb mov sbb cs mov mov push cmp movsl jp sub cmp xchg jp xchg dec leave push (bad) out jo idivl out bound mov xchg adc je dec rol pop fidivr jbe pop cmp push push loopne rorb pushf cld mov test sub jo adc add jae push sbb xchg or notb push int jnp int3 lcall push out (bad) mov push sar aam ret mov sbb sbb es repnz ret mov jl cmpsl ds xchg incl cwtl inc push loopne,pn cmp dec int lcall outsb sbb sbb mov fdivp ss leave pop rcll xchg mov push cmpsl scas mov in icebp or lret lods jne clc jmp les jle push int mov add push jecxz aaa mov dec inc out add (bad) or orl dec dec outsl test xchg popf aad call jnp sub inc inc add xor lds sub hlt sbb es lahf ficomp sbb or ss xchg fcmovnu and fsubl js imul je out rclb mov mov pop pop aad popf dec mov push cmp xor sub adc dec repz call xchg push adc test add cmp sub mov push in shl je jge jle pop rcrl push js (bad) jae adc pop lods frstor stos xchg fdivl dec cvtps2pi and popl jo sbb and mov imul stos (bad) push and pop jo lock push push sbb aad out shr ret sbb or js xor sahf ss jns dec push fstps inc pop stc aas outsl shrb cmc pop push adc shrb (bad) shrb mov pop outsl xchg mov rorl xchg rcll (bad) lods mov cmp sub push sbb jne push add push mov sub sub pop inc pop std adc or icebp jl je add rcrb jnp mov hlt movsb repz cli loop rcl mov jmp xchg int3 cmp pop xlat sub sub xchg shrl out sbb mov dec (bad) (bad) insb insb daa out cli leave insb cmp xlat jle ficoml (bad) hlt pop out fsubl daa inc sarl jns pop pop or push and arpl push sub cmp icebp sub jmp sbb dec aas js in mov jne test mov mov ret leave and inc push sub cmp stos adc (bad) cmp outsl (bad) push push in cwtl xchg cmpsl add push mov xchg cmpsb sbb jns jns sub adc xchg cmc jo adc imul sbb jle add mov fwait repz enter add (bad) test pop xor sub and subb inc es jno mov hlt idivb movsb in and aam xchg mov push push hlt dec push clc cmp arpl repz bound std xlat lods xchg cltd xor sbb sub and xor lret adc sub dec sub cmp fndisi(8087 (bad) ja cmp stos jnp jecxz fcomps xchg lods movsb xor pop jns in xor scas daa push sbb fmul lret sub dec dec ss mov xchg out sbb loope movsl mov imul loop push dec adc jmp sub lea mov ljmp jae fstpl dec adc fcoml dec pop repnz leave pop adc or mov in jno cmp jbe cmp sbb aas movsb dec (bad) mov jmp sub jb add (bad) loope inc mov fwait mov roll aam sbb add lods mov mov adc sbb out scas push cmp sbb and inc adc ret rclb mov sbb cmp lahf (bad) cmpsl repnz and xlat fbstp mov jp xor mov lods mov (bad) mov and push push cmpsb popf jp rcl (bad) notb dec sbb leave cmpsl and sub loope int3 int clc xor xor push (bad) loopne xchg pop xor cwtl sbb add fwait (bad) add cltd in adc ret ret push rcr cltd jmp or cli xchg dec lock inc shlb pop sub cmp bound (bad) cmp or cli aaa pop lods movsl inc gs div imulb mov enter leave xchg add das fdivrs comiss shrl loop mov mov sarb and fcmovnu inc inc cwtl dec push mov dec adcb mov in adc sbb lock push adc mov mov in cs enter das push (bad) mov jp adc cmpsb pop sub int pop jmp gs (bad) sti pop (bad) insl lret rcr and cmc or xor inc pop or and out sbb fidiv xor scas je sub fidivr int dec dec push push fbld outsb xor or outsb mov fs push pop pop pop enter mov jmp mov sub inc cld jne fcomp mov jle jno aad lods lahf lahf pop pop xchg jg or aaa aaa inc das (bad) mov stc lea pop adc push sbb or jg add dec dec xor or insl mov (bad) loopne or into or inc cmc popf pushf pop pop bound ret mov mov xchg stos and fisubl sbb inc and leave mov stos push jge,pt jne or arpl mov sub or jae gs mov mov in jb xchg jb fnsave arpl ja enter mov dec mov test subl push in in jecxz mov inc push (bad) fimul or icebp mov ja mov repz out jp add push fwait es sbb jne std push and pop and cli inc or aad test push out shrb loope push jne inc shlb and addl mov enter or sbb and sbb sub loope sub and jge inc inc adc cli jne mov mov rcl in lcall leave movsl jge sub stos (bad) ljmp fdivs out xchg out mulps adc addr16 add add cmp inc out mov push jle ds inc lods mov and xchg in jo mov jno xchg sbb addl xor (bad) dec fmuls add sbb dec dec (bad) dec cs mov jbe mov rorb cltd push xchg fdiv aaa pop jne push jg jge sub adc cmp fidivl add mov mov jns repz pop (bad) popaw adc mov push lret xchg repnz push rolb and repnz inc inc jno,pt dec or mov pop add dec lret pushf dec cmp mov xor out xchg sbb adc stos stos out (bad) push jp jg inc ljmp scas fcmovu arpl xchg cmp adc fildl das and (bad) jbe inc cmpsb cmpsl mov xchg nop and or cmp push push push xchg jbe sbb test jne insl loope lds push mov dec inc dec dec add in add mov xchg jae in aad push mov xchg rcl jnp mov adc mov add push sub cmc and ficomp mov sbb repz pop add fucomp mov aam dec adc pop push scas or jbe out test mov int sub adc sbb insl sbb sbbl outsb sbb icebp fnstsw test add lcall insb (bad) divl mov and adc mov out (bad) lock leave arpl inc pop pop mov aad mov or test into les hlt sti inc inc fist das ds push dec dec js movsl dec sub arpl imul mov decb insb sbb cmp (bad) sub out jg jl out sti outsl outsb sarl in call adc and frstor and xchg and sahf aam shll mov mov sbb xchg cs push fld1 xor (bad) outsb pop lea js testl cwtl sbb sbb sbb rorl push pop shrl daa es std clc clc inc sbb lock repnz and call fdivl scas pop and inc dec sub (bad) mov cli mov mov jp ret xchg lcall addr16 add dec mov mov (bad) out cmp ds push mov jle pop test (bad) divb icebp jnp sbb push fs mov xor and fbld push decl pop jb leave (bad) je in sahf int and sbb pop bound lock push stos mov sub jmp mov dec sub and ficoml mov mov enter fidiv call mov jle,pn insb and push movsl loop jbe sti cltd push push dec dec dec inc cli or imul cmpsl movsl pop loope es lea arpl pusha fwait out leave xchg popa pop pop push xchg and mov cmp pushf dec xchg shll sub or or xchg bound and jnp inc add and pop in jbe mov out jb sbb sub in out and testl je jae mov ja add dec (bad) fidivr out lods dec mov mov jb jl mov sbb es sub mov adc pop in fs lods mov mov int3 test sub jo dec enter out add mov inc pop xor and sarb mov or mov (bad) (bad) fidiv mov andl clc in movsl or cmp dec fwait lret outsl cmp adc outsl xchg fwait stos stos arpl (bad) ja fwait pushf add xor xor outsb aam adc out and jne loope mov cmp (bad) js hlt pop inc push push iret mov (bad) divl ret ret pop mov insl fdivrs add mov ja enter mov dec xchg in in push adcl inc jl pusha in dec dec jno test rcrb jns or xchg sti aaa aas mov add pop (bad) in leavew jno cmp mov lret cmp stc hlt adc push and in inc xor insl in lds pop xchg sbb or mov add rcr aaa adc enter mov in inc mov push (bad) xchg adc fldl cmpsb aad fnop call jns cmp add xor lret or test mov movzwl xchg sub mov sub js cwtl rol add clc std add jl in mov pusha scas rclb imul pop sbb cmp push pop sbb out push dec sbb jl xor and lret into jne jno ds mov fsubrs stos xchg test mov jg aas fisubl sub sbbl rorl and jle jno rcl mov ja,pt mov gs jbe aas lret fisubr shlb jbe,pt push (bad) out out jns fst mov int jl xor ret and loopne pop jge (bad) je jbe cwtl ret fs int inc pop lds gs mov lock mov sub lahf test push sub pop xlat stos adc out scas dec lcall ret ss push in sub mov jno test (bad) testb xchg in mov test arpl fs pop adc cmp jmp cwtl mov outsb cltd adc fadds aam push in in shlb data16 das cmp pop daa cmp adc stos dec or xor push test aad cmp test incb fptan lock repz pop es add push rolb stos xchg sbb leave mov enter mov (bad) xor into lea rcrl push ljmp xor js mov test push push adc movsb jle ret xlat adc jnp nop repnz mov dec jl add out lock push xchg cli (bad) mov adcb add mov dec gs sub push rcrl mov cmp test int3 push push push xchg repnz mov cmp mov popf test rol std sti mov inc sbb pop xchg (bad) enter and adc xchg adc jne push out stos add jb repz movsl xchg fcmovnu lcall lods adc clc or arpl adcb xchg sahf mov dec out push imul jge jbe or (bad) cmp sti xchg cmp push push adc jle add cs ljmp popf and (bad) je jne dec jmp cmpb push xchg sti jg sbb arpl leave dec sbb ja shlb push rcll xchg push mov std sahf jo imull addr16 xor std and xor push cmc cmpsb rorl cmpsb (bad) pop lret out aaa add loop cmp dec jmp out inc fstpt xor (bad) adc lods push data16 dec movb stos adc (bad) cmpsb in scas push rolb test sub cld and les cmpsl mov sub pop hlt jecxz leave int sbb cmc xor inc add (bad) (bad) movaps xchg aaa aas inc inc add mov jl rcrb mov xchg mov xor inc push xor fstpt insb in loopne add cmp cwtl pop mov xor mov pop pop xchg xchg inc jb adc mov scas adc gs test or xchg mov and dec mov test (bad) or pop mov jmp imul js jge cmp lock inc outsb add inc gs div ficoml leave int3 inc mov test adc and adc push cmp push push mov hlt cmp imul sub pop sub jo jmp loope fstpl jl lret dec mov fdivs test adc repz lods add mov sbb jge pop iret and in or clc and repnz mov jl insb mov xchg fwait jnp ficomp shrl add mov int add inc jne push loop sub sti cmp out cltd cmp test into add ret mov aam leave iret ds lea dec mov cmp cmp lock mov and mov push jbe (bad) adc pop mov or xchg daa iret int sub mov jg push lret mov xor testl (bad) pop cs xor sbb cmp and in icebp std aas aas cmpsl adc pop arpl data16 repz pop mov sti js in sub inc or (bad) pop xorl fcompl push xchg insl cwtl pop dec or in call test cmpsl dec xchg xchg jmp push fisub (bad) test ud1 and mov movsb xor pop popf mov adc mov mov jp dec xor push fcomp jns jns les sbb mov fsubrl or ja movsl insb in (bad) push mov clc and push push adc and mov add jl jg mov enter mov jbe clc inc pop ljmp inc lock jl pop icebp icebp sbb imul icebp cmp js (bad) jnp cltd movsl addl xlat mov pop inc add in in mov cmp pop pop pop popf push popf fcoms js cmp mov jmp rorl data16 jle (bad) jno jae sub pusha pusha xor (bad) repz lret lea jg sub loopne add test sahf repnz inc cmp mov (bad) imul pop xor pop (bad) andb shrl std dec ljmp sbb dec push adc lret and jb jbe nop arpl sub sbb loop pop cmp pop pop push dec aas pop xchg xchg sub stc out mov mov sub fiadd mov push pop jg push out jb pop pop in add (bad) xchg fwait sbb sbb leave data16 stos stos xchg movsl je dec dec mov xchg adc xchg push xchg mov repz enter sub jl imul dec mov and add cmp jno push movsl (bad) xchg adc jns sti ds adc mov (bad) jne lods cltd push incb (bad) and or sar (bad) jge inc (bad) mov int and aas sbb push and (bad) sub bound dec jecxz shrl mov test add mov dec into repz push ss jl js mov sbb movsb fdivrp test inc int into aaa cmc inc inc cwtl out imul fs dec scas (bad) call xor dec pushf test dec rcr or (bad) xor push pop push in (bad) mov test cmp ljmp pop in in push pop inc inc out jp adc in jbe inc rcl rcll dec xchg in adc cmpsl xchg xor push cli mov jno or push pop lahf jl rol mov out fisubl pop ljmp stos fldl mov pop xchg aad mov scas mov sbb aam xchg pop sti dec inc inc jl lods sbb sub mov (bad) hlt adc jae mov pop mov inc mov inc int lea addb adc out xlat pop or ret (bad) sbb jmp push and gs push pop pop dec cmpsl jmp insl insl sub push dec outsl sahf mov stos cmp lret dec inc sbb jle push pop xlat dec test sahf ss or in push in cmp xor inc push arpl or add cmp adc faddl loop pop pop iret popf ljmp jne sbb inc mov xor push pop testl sar xor fcmovbe add loop add cmp mov pop cmpb in jo mov or mov fldt aaa lock in lcall or xchg fnop insl ds loope lcall sub mov imul mov test arpl daa daa add aam les fwait and dec movsb data16 mov fwait mov mov push xchg rclb rcr pop or aam outsb test icebp add sbb imul mov cmp push in and leave leave cmpsb xor test push in mov push xlat dec inc sub push call sarl push out fcompl jno cli clc inc imul sbbb jb,pn in xor cltd cmp add psubsw loope sub xchg cmpsl imul cmp mov cmpsb pop ja es call xchg movsl mov outsb test shrb mov inc xor sbb (bad) insb out movsl pop mov enter inc cwtl mov enter lcall dec xor je sub xchg (bad) rdmsr jmp push xchg dec add inc enter mov ret cmp addr16 (bad) mov rcrl (bad) aaa cs mov jbe js dec loopne adc inc or pop or mov sbb sbb repz out dec lods in aas cmp nop aam adc outsl call inc sbb inc fist imul adc push xchg rorb sbb adc push negb push sub (bad) mov int3 add lock and fmull sahf shll test jmp cmp jmp inc cwtl pop sub adc pop popf adc inc aad lods in lret dec in jle sub jg adc int3 rcrb mov (bad) pushf mov bound add sbb push and in test gs aas inc push aas pop mov fwait cmp xchg (bad) int ret fcmovnb pop je xchg repz sbb outsb dec add int jge xor cmpsb mov mov or add mov cmp lcall inc fadds sarb adc (bad) les loop pop mov negb (bad) sbb fld mov cli jl aad lods adc mov and aaa fistp jmp or sbb pop push sub or mov pop inc inc ss or jbe data16 movsl pop pop cld cmp push bound sbb pop mov (bad) out cwtl add pusha sti mov sub jmp (bad) test ja int3 je push (bad) in xchg in jo push pop pop dec sbb and mov and cmp shlb std cmpsl sub rcr pop add and mov mov sbb test cmp call pop dec mov aad ret je rcrb adc (bad) mov popf popf pop xchg test cmpb lret out or shrl sub cmp push mov cmc mov inc inc mov data16 jnp xchg sub xor push add sub add cmpsb jno fiaddl int3 pop scas push sbb cmp es add mov mov loopne test pop adc and pushf pushf arpl fs arpl ret movsb and add cmp cmp sbb xor dec (bad) mov cmp stos and (bad) inc and xchg popf inc dec add sbb ja je (bad) andl jbe ja shlb pop push push divl cwtl addr16 (bad) fisubr adcl mov mov mov mov sub cli aas aas stos out stc and in (bad) leave dec fmul addl rorl xchg adc and mov jbe gs aad push outsl xchg adc xor push fistpl add push (bad) and lret inc or xchg xor mov sbb adc push loope add insl sub mov jae mov cli cli lock xchg xchg add lock xor mov mov sub sub ljmp popa call cmp sub (bad) push in and std dec adc push mov lret push daa loope ja insb insl clc (bad) incb inc cmp cmpsl jp sti cmc cmp xchg icebp loope insl imull jmp add lds (bad) int inc adc mov js push adc data16 xchg add popa pop lea rclb enter sub sub xchg add xlat (bad) mov jmp lret into mov dec cmc push cli push fsubr loope pop jnp adc repz add stc std aaa addr16 stc mov jo add mov or add adc mov aam cld mov mov lds test sbb sbb dec mov mov jmp adc ljmp add ljmp out out mov sbb fdivs call test insb jp adc nop mov cmp lahf repnz idivl xor cs push lret jle add rorb pop xchg in (bad) pop test jl int js mov leave and cli cli (bad) push addr16 rcr (bad) push push addr16 mov fnop mov xchg pop push (bad) jp jns outsb jecxz ja cmpsb repz sub negb push and ds mov out sahf (bad) pslld out xchg mov mov (bad) xchg stc mov aam cs shll sarl mov je,pt mov inc inc dec dec dec or lock dec jb fcompl dec xor cmp out call out out xchg xchg (bad) (bad) mov enter out mov and icebp dec add inc jg rcll xor jle repnz or add jle lock or pushf lods cli sbb cmc pop sub pop shl or repnz cli xchg jg lret loop imul enter popa or (bad) imulb sahf push cmp push pop pusha mov or push push sub push mov repnz sti inc push mov jmp mov imul inc mov into mov mov cmp push and and push in leave mov push push pop pop lea repz std mov fwait test lock xchg imul cmpsb push pushf push adc jecxz sbb mov movsl xchg in mov int3 pop adc inc insl add data16 adc cmp (bad) das xor dec xchg ret xlat ja fldcw mov mov lcall (bad) sbb xor sbb ljmp mov aas cld inc mov dec movsb and fidivrl fiaddl (bad) xchg xchg ret inc daa in adc insb out cmp mov add add add cmp sub rolb mov scas fcmovnb mov ret pop inc and aas xor div jge sub inc lahf xchg pusha sub ja es std lds iret es mov jnp addr16 add cmp mov decl dec inc (bad) (bad) and inc fidivr lods push jno jbe push mov lock inc test nop cltd shll jmp mov jbe hlt fwait hlt sbb push jnp scas push adc leave jbe rcl popa cmpsb into out mov fnop pop lcall pop sub stos dec es aad push xor ret daa mov mov ss mov push push push xchg jbe jle push rol mov popf jp sbb jle xchg xchg in inc push clc xor cmpl inc ss sub clc adc add loope xchg dec sbb sarb push mov xchg xchg aaa out ss adc push jmp mov add fsub movsl adc pop test jg repnz adc adc sbb incl jne lea jns nop jecxz leave scas movsl ret bound mov lret gs cmc (bad) loopne rcrl push jge,pn mov sub jmp fs sub or xchg sbb mov addr16 shrb mov adc sub xchg cmc lea add push ror jae aam in mov cmc repz dec repz or mov mov cmp push enter xor ret stos mov hlt dec xor in mov pop in aam imul jecxz,pn cli dec pop bound xorb xor insb or or adc shlb rorl data16 sbb mov adcb push add or mov rcll jo dec inc dec cmc call pop mov mov mov mov cld mov mov repnz iret inc cmp adc cmpsb xchg lds jmp int3 addl fsubl jo aam outsb outsb dec fnstcw jno adc xor jnp jbe adc mov ja add dec repz sub or pop or roll sub pop insl das out in das cs icebp lods les je and es (bad) jae xchg pop test or cmpsl vmread fisub push imul repz sbb push lea (bad) aas loop mov xchg ds add repnz mov bound or mov rcrl data16 or out xchg out add mov mov jg mov cmpsl loopne test xor into mov mov push pop adc cmp faddl insb cmpsl mov lret push ljmp es xor mov daa orb dec mov push test xchg adc xor mov fcoms jnp stos push adc and arpl cltd gs pop mov pop aam jecxz push hlt xlat shrb xlat xor xor sti subl insl mov mov lods or fwait jp push outsb mov stos mov mov xor arpl int3 sub adc jmp push jg and scas stos add add into pop mov sub lock pop gs jl jns jmp sub mov call jge cmp mov dec or cmp mov enter xchg or lea inc xor pop bound or out or rcr fnstcw or stc xchg cmpsb int xchg or gs or xor lods test add popf sbb mov in adc fisttp fdivp loop cwtl fcmovnu sbb es into ror xor mov mov push pusha (bad) xchg into movsb lods jae aam xor movsb mov inc ja xchg push movsb outsb pop lret sub arpl sub sbb enter popa hlt pop pop insb pop dec dec ret sbb xchg xchg cmp sub jge sub fwait inc leave lods push sbb inc out cmp nop or rcl push popf aas pop leave adc mov jge cltd pop push push pop add shlb and push shl dec cmp in xchg imul in ret add or ficom dec aaa xchg push bound int3 in cld and sbb iret xchg push aas vmwrite jp lods lds mov lods cmp adc inc mov ja push inc in stos sub sbb sbb pop xor push rcl ja fldcw mov xchg (bad) pop rcr dec xchg xchg xchg mov sbbl jp pop or out push ljmp daa scas loop lret cmp sub cmpsl push popa xor pop mov bound aaa jl jmp xchg loop push xor sahf int ss rorb push mov (bad) ds dec mov fs add xchg jns push ret push xor sub xlat je insl cs mov mov cmp jne movl sbb push ja lahf cmc test add push mov lea sar mov mov or fldt adc or jno aaa clc dec in inc adc adc or mov out pop js,pn mov dec push mov push sahf mov jg stc mov mov mov gs xchg addr16 adc rol adc inc dec xor xchg sbb out push es (bad) and cmpsl and (bad) and jp xchg mov popa out dec stos inc mov mov (bad) andnps add mov dec andl jbe and outsb jnp bound xchg mov add test push je js inc lahf xchg leave xor jbe ss push std inc xchg (bad) lock add stc cmp or xchg mov ds in loop (bad) or sub fnstcw jmp stos inc dec dec popf inc (bad) jae mov pop in shrl pop fcmovnu push pop add arpl fdivr add push enter lds insl int (bad) inc xchg int xor (bad) jmp out mov inc popl mov das pop push aad or jg pusha or imul and dec push popa cmp jmp jnp ds aaa inc movsb hlt icebp (bad) leave imul jp dec in out xor scas mulb mov ds cmp xchg add repnz arpl xchg stc jo mov (bad) xor ficomp push aam ror lea or xchg pushl pop sbb stos out adc (bad) mov jns ficoml scas push fisttpl add call fstp adc pop push cmp sti push rcrb fdivs sahf sbb mov insb mov cmc jle fwait out xchg push aas cmp jmp jo pusha pusha mov das ret (bad) adc mov pop mov arpl mov inc adc (bad) out pmaxub add cmp xchg rol xor scas cmp xchg mov sub (bad) (bad) xchg cli jo test sar ss cli xor adc insb loopne jae fist adc mov rorl mov push mov jecxz es mov jb adc jne repnz clc clc loop jmp movsb xor and inc cmp fadd adc pop addr16 mov int leave enter or mov jp aaa outsl orl test aas mov dec mov lret stos (bad) cmc js mov and pop inc adc call cmp scas xlat dec cmp mov mov mov xchg nop stos stos outsb arpl popa rcl pop jmp sub jg sbb dec xchg push rcrb addr16 sti mov in mov pusha fadd daa jmp stc lods test das ss stos or fimull push jmp and loope je mov lret out mov (bad) test (bad) dec push in xor pop add push push in insb jbe popa jo psubsb xchg sarb lock bnd movsb mov popa sub loope sub cld pop inc xor dec push pusha sbb pop jns xchg shr mov fucomip movsl mov pop jne nop pop pop inc inc ds fnstsw pusha fistpl aaa dec repnz add mov dec movsl xchg aad popa aaa insb enter shll mov mov pop push pop xor cmp (bad) dec int clc insb stc stos daa mov fldenv xor jbe mov lea icebp pop vphadduwd mov xchg (bad) (bad) dec stc push or jmp add dec xor adc or sbb aam push push pop fwait data16 les addr16 push lret (bad) pop jecxz aam stc cmpsb inc (bad) fdivs xchg es dec sbb icebp (bad) dec dec mov stos je out (bad) movsl jg mov sbb rcl es andl fcoml xchg add xchg and (bad) xor movsl and (bad) js mov lods jl xor dec cmpsb push pushf in mov fdivs inc loopne js (bad) or xor dec and add inc xchg incb sbb jle or js scas stos scas pop xor pop adc cmp iret fsts lcall mov andb arpl mov push pop addr16 cmp aam fsubrl rcl out loop (bad) (bad) mov (bad) cmp add mov sbb push es hlt test stos sub cli pop mov insb pusha mov xchg xchg int xor cmc mov jmp int3 add inc enter stos fucom sub xchg scas stos adc lret scas fnstenv out jge cmpsb rcrb shrl test pop outsb mov adc (bad) jg sbb and inc addl test scas das mov push enter stc je push mov iret ret test fcmovnu or inc scas ja jne inc mov mov in in inc jg in push outsb add movsl sub idivl cmp add aaa sub xchg sub cld insb insb and mov adc rcrb cmp outsb sub in movsl ljmp xchg cmpsl mov cmp push push sbb movsb vxorpd sub jo jle sub neg imul push jle enter fnstsw xor xlat xchg and ss dec add popf mov stos stos jmp sahf sahf add stos dec dec bndstx mov pop addb (bad) (bad) bound rorb xchg fcmovu mov or addl mov test mov add into or push decl mov fstpt sub fldcw inc fdivl arpl xor ja add cli mov icebp pushl call mov sub cld insb insb and sbb xor jae ror xor xchg mov ds mov leave outsl add add pop pop jne or mov pop mov push mov repnz nop dec push int cs sbb pop ja (bad) cmpsl and hlt sbbb push dec push xchg adc out loop mov sbb fs push dec dec jno lds sbb or sbb mov push sahf push data16 dec add adc out lea xchg fcmovnbe fild dec imul lods scas nop in jnp fucomp pusha mov xlat add jne xlat lret enter aaa aaa cmpsl push mov in push daa jle loope mov fiaddl lods cmova cld lock clc fs les add loopne leave div sub cli or aad mov mov sbb daa insb aam xlat or fwait cwtl shlb outsl mov mov aas sbb push push outsl jnp rol and fcmovne (bad) jp adc and sbb insb js jge xchg in sbb addl int3 scas inc fadd stc cli stos fucom in mov test or jbe fnstenv and cmpsb push sub lock mov hlt outsb jne (bad) (bad) roll push mov dec mov push push push sbb jbe in add mov jo jl cld rcl cmp ret subb fildl lret (bad) neg or repnz xor call movsl rcl mov pop dec ds and call ret adc pop clc cmpsb xlat (bad) loop arpl aad and stc cmc data16 daa ret mov pop js rcrl fdivr std xlat dec push mov mov rorb sbb lds (bad) mov pusha push push and xchg or (bad) xchg cmp out insb or xchg xchg xchg out clc sub mov ss enter stos fucom jbe mov adc lret fld dec dec jns rorb cwtl (bad) repnz (bad) les sub add (bad) jmp pop stos lods mov les cmc imul sbb and (bad) lock (bad) imul je sbb leave std call cmpsb fisubrl mov jge sbb (bad) jle (bad) mov xor or xchg lahf or sarl dec xchg popa arpl scas push cmp imul adc (bad) loop addr16 fnsave inc push inc jo mov push enter dec pop jns inc inc mov lret testb mov in xor idivl sbb pop rorl push mov push mov mov mov inc fist addr16 stc cmpsl inc dec fcoms xchg xchg cwtl imul mov div lahf xchg xchg adc jae mov cmpsl cmpsl insl popa jae rol stos push and in movsl int pop xchg int3 aad js and jl push (bad) and in lcall call fsubr frstor insb xchg test lcall fld add jge aaa sbb or iret xchg push dec push sbb push or xor xor jne xor inc jae aad sti sti adc jbe stos cwtl lret lea scas (bad) aad adc gs cmp cld rolb jmp mov or push mov pop aas popa mov mov pushf outsl mov or (bad) (bad) cmp out insb add xchg xchg xchg in fs or xchg adc int3 ss ffree mov (bad) xchg sbb pusha jbe icebp lods in xchg int3 lods pusha bound pop outsb subl cmp adc jmp jmp gs xor insl lock lods lods and mov (bad) aad out out je sbb push jl (bad) call mov or inc push out jbe mov and repnz xor and xor test test dec cmp ljmp adc sub cli clc insb sbb dec adc fisubr adc (bad) adc popf pushf cmp shrb shll fildll mov jle call dec sub sbb lds push es mov add or mov nop pusha test xchg enter fs stc push int3 out out xchg repz orl cltd push mov into daa cmp stos fsubrl pusha popa jbe aad dec dec jns fsubl arpl pop incb xchg xor xlat (bad) (bad) mov and inc sbb and punpcklwd lock testb std repnz adc (bad) lahf jo xchg rcl mov inc fcmovu jg data16 mov jo inc xor pop dec dec xor jnp mov fildll and cmp jmp adc and stc clc insb xor lods cmp xor xchg mov mov ds movsl xor into mov (bad) add fmuls add psubsw or mov hlt mov push mov lods jmp sbb fmul mov dec (bad) repnz mov pop inc push (bad) mov loopne outsl mov and or cmp jo pusha adcb adc out ja cmpsb sbb jb rol rcl push pop jmp adc es inc cmp test (bad) and fcoml adc mov add jno push push fsub imul jns fmulp push jae decb jge cmpsl mov enter mov out in adc sub fldcw pop jno mov addr16 mov outsb outsb (bad) mov repz sbb jg daa in mov pusha gs jmp ljmp test movsb movsl cmp std mov inc xchg xchg add mov rcrl pop lods or mov pop push dec mov js pop out sbb add xchg xchg xchg vcomiss mov ss fstp dec cltd mov sbb popa jbe icebp cwtl in xchg aam bound pop jbe sub cmp adc jmp jmp loope cltd push mov mov lock pop or out mov scas jg into lret push push mov iret add in or leave sub pushl xor and divl sub test dec cmp add pop (bad) jmp add sbb xchg sbb or pop and jns sub (bad) sti (bad) mov (bad) push lods xchg out push push aam pop xor imulb out push repz lds push push inc push lods or or cmpsl sub mov imul fcompl and cmc cmp jbe scas les mov data16 ret mov fistl sahf fpatan movnti xchg movsl divb mov adc bound or (bad) mov mov push jb dec fisubrl test push jae xchg stc lock push les sti notl (bad) (bad) (bad) sarb fdivrl mov add imul jae ja mov jmp inc sub inc imul pop add lock in mov mov fwait ret xlat lods cld mov xchg cld inc in mov mov jae or or xchg xor jle cld pop lock or call clc jnp insb popf je inc push push pop addl jo lahf sbb ret dec andl das ficoml pop lods cmp mov or push xor jnp pop fistp dec stos stos cmpsl cmpsl jnp or push push mov mov add sti es sbb mov data16 les outsl lods leave mov adcb push aam sahf icebp inc dec (bad) (bad) cmp pop push in pop dec outsb push pusha cmp push xlat add in insb cmpl gs les inc xor iret mov enter mov ret and jae (bad) stc add cmpsl mulb (bad) jno int3 int sarb (bad) jmp into (bad) mull mov addb sub cmp sahf cmp movsl fsubrs fldt push pop and or repz test xlat cmp daa ljmp out (bad) stc push mov jp test inc jcxz push cmp xor sti and out xchg idivl dec or inc ret push data16 shufps sahf iret popa loopne scas dec xor call adc pop sub adc in js aam jns push inc orl es ret bsf div adc std jo (bad) scas fcoml push ds adc das pop pop int pop cwtl and mov pusha sub aaa (bad) movsl cmp cmp or test test lods cltd leave aam inc mov push sahf and sarb lods addr16 popa xor adc rcll mov cmp add xor pop xor inc out push lods xchg enter outsl ja mov mov (bad) pop sbb sbbl js in fbld xchg fs ss mov adc lods lea aad mov inc hlt jae fcmovnb mov push fcmovbe pop jae out cmp negl mov ljmp sub popl cmc call es (bad) mov jbe xor sub (bad) repz rcl adc (bad) leave ret jnp decb (bad) mov imul jns sahf fisubrl jbe and aas cmp pop pushl mov adc sbb clc xchg insb sub inc jne ret mov jnp sub inc inc es ret mov test cld jne cld jecxz int3 mov sbbl sbb or cmp xlat enter in cmpsl push lea out stos stc loope lds loope sarb stos sub cli jg loopne fist jecxz mov jp xchg jmp nop cld test sub or adc popf repz jne mov (bad) aas in cmp and add pop dec cwtl adc out sahf stc test pop xchg (bad) mov cmp inc and (bad) addr16 jb and xchg xchg xor sub fcompl jnp sub loope xchg mov js std clc clc inc and jne js mov mov fildl jno adc or inc outsl cmp mov jb movsb and nop lock inc in imul push mov xor mov out vmovq aam push mov and jl mov jne fdivrl sbb mov add adc sub mov mov mov std mov push in js,pn lods dec (bad) cmp popa lods jbe push mov ret (bad) xchg shlb mov lcall mov mov push shl cmp mov xor lahf lahf test lock enter and pop aas and sbb (bad) pop push or (bad) lret leave add jbe iret addr16 xor aas add xor aad call sbb mov dec cmp popf jmp sbb rclb jnp inc push adc leave jbe rcl imul sub test les pop mov mov lret dec ss cmp and mov test scas and sahf jo cmc push pop loopne (bad) xor sbb pop mov test mov lods xor out xchg divl inc xor sbb adc cmp fistpll sbb scas fneni(8087 mov fcompl xor lock les jecxz andl nop fisubrl or daa fiadd mov int repz test gs jo adc or dec (bad) (bad) ret (bad) and add xchg inc test cld repnz sahf cli in push dec pop xor or inc leave test push arpl xchg mov push inc mov adc adc fistp and inc mov sub dec (bad) popa out cli mov div add std adc jne jne adc fwait lods rcr in mov sub fidivl jns pop and std ret int inc (bad) cld jmp (bad) adc sbb xchg call mov xor dec dec jno cmp jmp aam jo sti aas aas das fstps or pop dec ret or (bad) cmpsl jmp rcrl clc les les xchg add or movb sub test (bad) sbb adc jmp push leave xchg aad inc loope repz jmp mov mov pushl inc adcl lret jae push ret mov jno icebp or mov je dec push sub add jmp stos mov adc cltd pushf inc pop pop or call or movb mov mov xor inc enter es mov jbe js mov mov cmpsb fwait sbb popl insb fwait jno pop jp xchg sarb or imul pushf mov (bad) dec xchg cmp lea repz dec push (bad) mov std (bad) icebp sbb js pop adc loope scas jns mov mov dec cmc test mov mov (bad) add das (bad) out mov jp or mov cmpsb (bad) mov cmc mov xor add inc outsl test sub dec cmc push dec cmp mov jge mov outsb stc insb sbb mov jp jmp mov daa pop push outsl ret mov (bad) xor cmpsl and mov rcrl push out push and pop pop repz repnz sub add dec cld aad jbe pop (bad) jp add mov sub fwait mov inc xor out xlat fwait mov or cltd mov xchg mov rcl nop or pop enter ja,pt sub imul sarl (bad) jmp test and std jb and add (bad) lods cmc lahf pop out orl bound adc or adc das pop insb and subl mov jl cltd stos mov (bad) data16 xor out fsts xchg nop je push cwtl popf cli jnp out xchg xchg mov xchg stos and arpl (bad) dec mov psadbw lcall or sub inc movsl movsb (bad) jne aam xor or inc cmp stc or lahf mov daa into loop sub cmp xor xchg sti pop pop fs insb loope,pn dec mov mov sub mov cmpsl and cmpl inc xor mov sahf lods or sbb fidivr in cmp push fstps sbb jno push loopne icebp dec xchg xchg fiadd fcmovnbe push clc clc inc jnp xor dec xchg std stos sub xor outsl outsl pushf pop mov jmp xor test add outsb jle lea js into push ds in test inc (bad) mov bound xchg pop aaa aas jnp loope les adc cld cld pop cs xchg repz cli mov add inc jge bound mov jecxz bound mov ljmp inc inc xchg dec adc test xor add push mov mov dec shrb decb stos imul loopne cmpsb fwait sar fs cmc sbb or loop out pusha push jl xor xlat fildl and or or push sub sahf sahf mov movsl into pop push ret lock and xor jl pop jge pusha push das xchg cli mov push xchg inc inc je lock ja pusha das jmp cmp inc inc (bad) (bad) incl add das add jne lea jns mov mov lods and mov dec dec inc ret or fnstsw lds nop pushf pop jmp insl lock ficomp sahf popa and pop mov pop (bad) sbb arpl pop dec pop pop aam test addr16 (bad) pop add cmpl das inc imulb shl notl and (bad) (bad) cmc cmc insl dec jb mov push out ret flds mov and out xor cmp roll (bad) dec adc xor ret mov gs cs xlat aam dec mov or xchg pop xchg jg repnz insb jl jno sbb (bad) mov (bad) outsl push mov mov lods es rcll repz lcall int3 (bad) mov push inc das sbb push sub mov ret leave (bad) mov iret mov (bad) push dec xor test push push push inc mov inc sbb xor adc fistp (bad) mov jno mov imul ds inc mov je push (bad) (bad) sti mov xor push popf out pop iret lds pop test mov xchg lds xor cmp daa mov clc xchg or imul push imul and mov push inc inc or add lret xchg xor or cwtl pop shrl jge sub pusha data16 fist ret rolb jb or subl xchg in lcall insl insl push add xchg lret jb or pop add clc call into xor pop imull mov pop jmp xor adc pop in push pop lods outsb jo xchg popl pop int3 lahf sahf push daa test (bad) decb pop call rorb fwait lcall xchg pop aad xlat lods sub lock jbe in pop (bad) sub rcl adc sub adc lds xor sub dec ss aaa xchg push push lock lods lods or inc ret fcmovnbe jae xchg int3 ret xchg add jl and aaa jnp dec xor stos jae push cmp ror ficom out pop jbe pusha test cmp popf jbe subl leave sbb divl or pusha pop and xchg jecxz jp jg mov pusha xchg mulb jp int jnp repz leave fidivl add std cli (bad) call adc subb mov jns xchg cli mov inc jb sub mov xor lods test and pop xchg xor ficom imul xchg shrb or imul in pop (bad) ret outsb arpl push enter sub cmpsb test aas push push sbb jl aas ds pushf outsl adcb aaa std test ret pop ss push in lods in inc sbb out push int cs hlt pop dec dec add in xchg sub stos stc xor (bad) mov pop add mov jne das sub insb lds negl sub stos int icebp clc or and in sub xor mov push jp xor and add push movsb (bad) aam dec int pop push (bad) jle sub repnz mov inc add inc rorb sbb jb roll cwtl pushf pop data16 adc scas mov sbb scas push mov mov mov add ljmp inc movsl adc mov add loope roll jge inc aam lods fisubrl pusha test or repnz loop sbb adc sub das xchg push push push push jbe xchg nop mov shlb stos cs jge adcl in add xchg cmpsl mov pop pop imul dec adc fistpl adc and push scas jle mov push ret sarb dec sub or pop mov insb sub mov push pop pop add and lds cmpsb loop lds enter adc dec lock cmpsb out in scas jmp gs sub in adc jecxz jle je add fbstp ss lcall cld xchg and ljmp mov xor call call insl fbstp lds daa push mov daa call jb pushf stc inc sahf pop and push xchg xlat sbb xchg repnz pop add or dec sub cli out out int3 mov inc adc int dec dec (bad) mov popaw cld mov aam sbb negl adc push jp pop adc sti inc xor ja jge sub (bad) cli cmp (bad) movups cmpsl xor jae imul mov cmp mov push mov arpl inc inc jo sbb je xor cltd cmp insl in icebp xor movsl movsl cmp sub pushf push inc sub lods out xchg mov fwait insl test shll add sbb enter jne mov xchg sub inc loop jp and ss movsl push xor enter inc repnz cmp test lods xor icebp push mov ja push jp adc out mov xchg cmp sub xor outsl cli iret out out jecxz fmull inc stos inc cmp (bad) aas loop mov adc lods dec add xor aam mov int3 test mov rcrl add pushf aad inc aam xor scas shlb cmc jno xor lods (bad) fwait pushf enter or fnstcw jo lods fstpl push (bad) and mov adc push iret push (bad) mov add data16 inc inc loop xchg mov or jecxz cwtl xchg sbbl cmp mov nop test stos or xor fcmovb cmp xor fmuls popa xor jb mov jae mov das mov jnp or lret iret adc xchg or adc dec cmp mov in mov lahf adc outsl mov dec sbb fwait shlb lea sbb (bad) xchg in sub pop loopne scas dec dec fwait or bound xchg sub mov (bad) stos data16 mov jns or and push fstps sbb jno jg loopne mov fstps or xorl in in movsl je (bad) std std insl cmp out scas nop xor lret push or repz aad push popa or repz push inc test xchg push jmp cmpsb jle mov jmp std xchg mov push fidivl jns dec lods popa outsb push jle (bad) jmp repnz or mov movzwl loop sti sbb fnop arpl jge pop pop aam imul and add pop push xchg mov mov daa mov mov mov mov jo lods or divl in dec push popf ret (bad) mov inc (bad) aaa mov pop ss paddsw xchg dec mov enter fcomi mov xchg shlb fsubrs imulb sub mov or ljmp inc inc cli mov mov lock adc cmp aaa inc inc (bad) mov movsb lret dec inc pop nop and cwtl mov fimul std mov popa in sbb mov sub sahf inc push mov out xchg mov mov std jp adc gs (bad) xchg jb pop and sbb jge pop mov std mov ret sbb test idivb aas and add es test getsec std test fcompl ja xchg fwait lock or in mov dec and push or in mov cmpsl jb push push addr16 add loope jg adc lahf add sbbb pop xchg mov and ret mov out sbb xor mov lahf lahf enter repz cmpsb icebp cld aaa aaa lret mov stc mov iret dec repnz and sbbb or lahf cli pop (bad) mov sub inc push addl push shr jb movsl movsl mov jno and pop pop jmp sbb out out xchg sbb test cmp lods aas pushf lret lret xlat mov into cmp jb std jns lret repz sbbb dec mov xor int3 inc enter or int mov ret subl sub (bad) or (bad) jae inc inc push push lcall es cli mov xchg dec das mov out cmpsl jg sub rcll mov pop lret and lods in mov xchg fsts fnstsw ja out xchg push push push cmp jle je pop adc mov aaa mov pop jne mov adc imul push lea and ret and enter js fistp sub dec dec add mov clc (bad) or outsb cli jne ret cmpb push mov mov dec dec inc stc pusha sub lods into dec ljmp pop out addr16 pop pop mov fs jecxz popf and add cmp je in outsl push push (bad) ds sub sbb test push cmpsl xchg xchg icebp std test movsl mov insb insb mov xor cmp jnp inc shrl add push cwtl dec dec (bad) mov sbb jns push push aas xor adc jnp jns mov or jge mov cwtl dec bound ss std ja lods lods lahf push subl jp repz sahf in aaa aaa into lret stos scas clc stc add inc iret inc repnz addb es stos xchg adc addl sbb into jb movsb movsl mov dec loope popf pop pop jmp aaa xchg xchg mov xchg stos and mov sub mov into cld jno lcall pop pop aam test das sub movsb outsb pop pop dec (bad) cmp dec inc mov out add cmp scas scas in add test outsb xchg icebp icebp jne lods in add fs int3 xor cmc xchg xor xor leave cmc std dec add jne dec xchg jbe push xchg push mov jge pushf popf rcr lret mov jge negl sub push xor pop xor sbb lahf enter repnz mov mov stc push mov das (bad) ret bound xlat (bad) and add mov xchg mov out mov orl inc in sbb popf fidiv movsb movsl mov je pushf pop xchg xor arpl xchg and xchg xchg stos sbb and or mov stc xchg sti mov mov repz push scas test mov cmp fs pusha int3 clc (bad) or (bad) cwtl movsb push add xchg sbb mov rcrl dec mov addr16 fisttp jg inc push (bad) lcall add sar jge adcl add outsb mov add fs fsubrs mov (bad) sbb push rclb add pop imul test lcall mov scas out jg sbb int mov sbb call test aam in sbb cmp in sahf aas pop push xchg cmp nop mov push pop jnp dec cs pop and jae push and pushf in xlat mov (bad) out xor adc pop push ret cwtl sub push push mov xchg dec imull pop and fisubl jl inc or lcall cmp fnop imul outsl and lea test rcrl jb adc addl xor xor leave dec les jl adc and push adc je mov xchg (bad) cmp cmp div hlt or out lods mov aaa test fldl dec and xor push push inc (bad) dec data16 aas xor ja cmp stos xorl mov das pop mov js test stos fs inc (bad) mov dec inc xchg cmpsl mov adc aad add ds loope pop fs sbb mov and pop lds insb mov jo test stos jle cmp jae out xchg push pushf inc jae call pusha or sub and mov inc ja lcall lods daa mov mov cmp dec mov lods jno icebp xchg pop lahf push pop jp xchg or nop out mov imul outsl fistl adc xor pop add insl in add pop loop mov adc repnz sahf (bad) aam mov das pop pop push xor sub daa mov sub jno xchg jb push es lock mov enter lahf add dec movsl mov daa and or add mov mov cmpsl stos xor ficomp mov dec mov cwtl ret push sbb mov andl loop stos xor std movb pop mov mov sub scas sbb int ret ret ja jnp inc inc sahf lcall add sbb (bad) push sub insb mov xchg xchg jno xchg cld sub int3 or inc rcrb or push lea xchg rclb pop (bad) push pop and (bad) sbb mov dec pop lea jns jl fistpll adc sahf adc dec or cmp lcall push (bad) fist adc imul or mov ror stc mov call popa movsb pop push mov jo xchg xor xchg pop adc std out test mov int3 inc adc sbb out mov add (bad) sub imul mov cwtl or adc adc mov lret out adc jecxz out mov ss stos and fiaddl mov push adc bound (bad) fyl2x sbb outsl test fs fiaddl inc shrl or dec push data16 outsl pop dec mov imul enter add xchg push sub jle jl jns mov jp dec sbb jmp stos add push cmp sub sbb jne pop out lds std std fistp xchg jno jb mov (bad) mov cmpsb mov and aam ret iret push add mov jmp push cmpsb jns xor movl push fisubr movsl movsl inc scas lea bound inc mov mov and sub shrl test arpl xchg pushf shlb orl xchg inc test call sbb incb inc and sbb xor push jge fdiv sub int in push out adc das sbb loop mov add push out xor incl xchg lahf mov into (bad) shrb cltd lret cmp sti xor add jmp rcll push sub int3 sbb mov pop mov sbb pop std cld ss inc push or stc clc movb adc and inc ljmp cmp mov dec leave andl test shlb mov pop shll mov xchg mov out mov mov rorb (bad) dec dec ja cmp ss mov insb mov icebp cmp dec or or ret les cld ret mov or lods dec mov pop pop dec dec or cmp inc in pop popa cmp or mov jo lock (bad) (bad) push sbb and xchg push and and je add cwtl loope js stc mov cmp sbb clc loope arpl xlat rcll aas pop adc mov inc xor (bad) hlt test jle out enter mov jbe out sbb mov aad sub ss int3 add nop dec push fcmovnu int3 xor mov sub inc cwtl divb jmp inc js,pt sahf mov adc mov inc add sti xlat xchg into pop mov xor jg and and loop loop js xchg xchg rcl imul push push (bad) and outsl outsl and or inc mov gs stos enter out xor ss (bad) pop pop std testl add stc sbb in in mov xor nop call lret punpcklbw inc movb push xor and mov mov in into lea sbb stos cmp xchg (bad) rcrb pop lock pop xlat jle pop iret bound pop cwtl cmp sbb pop imul adc sub sub cmpsl xlat or stos fild mov sub outsl mov pushf inc movsl jmp inc es mov xor inc fdivrl cmp popa inc fcoms aad lods cmpsl ret mov cmp push call sbb scas inc mov outsb or add sub lcall pop pop pop cwtl or ljmp (bad) sbb cli dec jns mov ret jle and add xor test (bad) mov ss cmpl fwait clc mov pop aas inc cli rorb sbb mov rorl jno mov add rolb lock pop imul jbe mov outsl add pop sub sub lahf lock xor push es fwait cmc pcmpgtw xor xor add mov push inc add xor jo add mov or stos adc or out xor xchg std stos inc movl and cmpsl ds inc sub mov dec lods cmp and lcall fs repz xor add cmp jbe add (bad) incb stos add jnp push hlt loope addl xchg xor shrl xor mov jg inc (bad) int3 dec add push push push push fadd fnstsw and stos jge sbb push mov pop rolb scas xor mov cmpsb jmp mov and lcall fmul cltd xchg shlb add (bad) jp lods int3 mov sti es lcall insb insl sbb xor into lret into fisubr xlat rorl jp (bad) (bad) test mov and mov iret xchg dec pop fcoml sub loope mov ds clc lods int3 stos xchg stc outsl jo jno jge (bad) out sti test gs add fnsave repnz mov sub cmpsl pop and lcall ret pop aam add xchg test mov cli les inc add cld mov das bound jbe sub xchg or mov jnp sbb dec jp mov xorl mov mov (bad) cld stos fbld mov sub jne adc add in pop aam lods cmp jle jl popf lock stos inc sub mov fisubrl xchg repz push inc dec data16 cmp mov stos fild and pusha call lret or ds jns test mov mov add leave std shr notl sbb pop ljmp cwtl pop xchg pushf rclb pusha cmp leave (bad) cli mov into push mov and sub ja pop jmp sti xchg (bad) pop rcr ss aam sub in cmp jnp push or sbb push push stos cs pop sub mov rclb outsl stos sti cmp sbb sub adc out mov rorl mov (bad) rcrb insb dec fwait (bad) outsb or dec (bad) js xlat stos adc mov mov aas push test and push jecxz push pop out jnp roll xchg push sub jge and mov int3 je js inc cmp icebp sahf (bad) (bad) cmp or jno mov or xchg pop dec push out cli mov (bad) sti fcoml repnz jge outsb mov adc inc xor jmp inc sub inc imul mov clc pop pop mov leave xchg inc xor test dec sub xchg (bad) push push adc (bad) roll rorl dec popf inc mov ss jns pop pop test or add jge loopne inc pushf lods (bad) movsl div sbb adc imul cmp bound pop xor mov sub orb lea adc bound test addr16 jnp fcoml push in mov jno sub ficomp add add ljmp add inc mov xlat inc cli or sbb mov nop sbb sbb mov out sbb cmp mov fs add add mov fnsave test adc xchg insl pop repz rcl cmpsl or es cli cld clc clc inc int3 adc pop ja ret jae inc push gs mov mov out popa fisubl and adc pushf xor mov (bad) sarl mov fildll cmpsb push lcall xchg (bad) pusha and insl (bad) fcompp pop std jbe subl jae out imul jo aam ljmp dec add data16 js cwtl dec mov cs lret add mov push rcr cltd pop nop jg sub ret aas addl adc xor cmc (bad) das cld and add loopne into pop out mov or inc adc ret dec cli lret jb or lods jl mov and andb in int3 mov mov and fstpt sbb or inc clc jne lds cwtl pushf pop jmpw pop sbb pop icebp mov jnp lock adc xlat mov cwtl inc mov cmp test aam sub cmpsl cmp add xlat mov sub daa in mov add daa repnz push call mov aad into push lea or rep (bad) sub insb xchg mov fs jbe dec dec add mov mov in sahf sahf mov mov xchg fdiv cmp mov jl jns pusha rol xchg sub int pusha ret inc call lods fcoms pusha out test mov jnp or pusha xor scas xchg pop add mov aam dec ds push fidivr fnstsw repnz mov add adc sbb fucom mov je shr popf out dec mov fcoms (bad) fwait clc daa mov jo inc sarl es ret xchg sub inc inc repnz mov loop pop pop cmp int3 or push push or mov and lret jg push xor (bad) mov ja add test push out (bad) fsubrs loop sbb add fwait xor (bad) dec push push div popf arpl xchg andb jno jle and enter lret jae rcrl dec adc jne dec ret or push stc xor pop rorl and dec pushf and xchg roll jbe imul rclb mov mov dec (bad) (bad) mov jge cmpsb xorl in lret pop adc adc sub out add rep ja cld xchg inc sub pop xor mov lcall mov enter jge mov loop cwtl out fbld sub (bad) in jle test rcl jo int3 ljmp inc lret dec mov daa push push ss shll lock cmc cmc mov lea cs lcall hlt mov das push jl lret inc popf jle cwtl sahf movsl mov cli stos shlb dec dec mov pushf call push push cmp fcmovne jne xchg rorl in pop je inc inc (bad) xchg push ffreep mov mov sub push pop (bad) std ja int test lods rcl mov adc mov push or fstpt inc mov jae push add dec ds leave inc (bad) jmp adc mov add xor repz sbb bound jo fs push sub fbld jge push cmp (bad) adc xchg add push pop aam sub cmpsl cmp sub mov sbb insb outsb fs mov xchg ss xor push push push push cmc xor inc push int3 lods xor sbb popa cmp xchg out xor mov mov in clc pop stos cltd loop add inc mov rcll mov movb das lock jle jl jne mov (bad) daa aam aaa out cmp jns fcoms movsl std into ja into test cmc aaa (bad) int3 stos add icebp scas mov movsb addr16 aam push ds loopne jg or or (bad) or nop inc test xchg test or pop push pop pushf mov cmp leave je or popf movsl jnp out out xchg xchg cmpsw pop pop xchg xchg cltd push mov sub push mov add (bad) ss xor or mov lods cmpsb sbb xor rolb pushf repnz dec dec lret in lock dec sbb sub fdiv cmp addl pushf cmp aam imul push sub jge add (bad) cltd mov xor mov repz pop outsl call insb ds lods or jne and inc cli das mov (bad) fcmovu pop ror gs adc inc push adc xchg (bad) sub xchg das (bad) mov push nop pop push lea daa (bad) (bad) jg dec mov pushf mov dec in push iret or add outsb lods ja cld sub xchg add xor fnstcw shl mov push pop (bad) lcall out scas push dec jb scas and mov daa sub dec add lcall xor icebp and cmp shrb inc stos cmpsl (bad) fsts std cmpsb rorl and ja push mov sbb in nop ds int inc fistpl cli adc sub ds stos and push ss mov or mov mov (bad) imul pusha imul rol out mov outsl movsl lahf adc sbb pop add je aam sbb ret jp mov add test jns stos out inc dec daa cwtl repz js inc in fcoms pop add outsb jl frstor test cmp pop push bound cli jmp sub mov xchg shrb loopne xlat mov loopne gs rcr xchg cwtl sahf lahf push aam cmpsl shl sbb and push push xlat sub clc mov mov in les pop and test scas clc mov pop mov cmp lea or or xlat insl loopne fs es fiaddl xor mov (bad) cli xlat sub cmp movsb xchg jbe fisubrl test and push popf fcoms js cmp out sub (bad) mov (bad) jmp mov clc push mov jg fcmovu xchg xchg cld inc adc aas inc aas into or add jne cmpsb jp cmp jg mov add and inc leave arpl jno mov mov cmp lods jns in or imul shr inc out out icebp rclb jecxz sub add mov int3 or sbb into and dec xchg int sti and pop pop (bad) add scas test adc leave adc dec pusha or loopne aas add adc daa xor sub into lret mov jg inc inc fistp or test sbb xchg fdivs sub cmpsl ja mov and mov jno inc inc out sti jns shll add nop mov fistpl add inc addr16 or mov pop mov adc sbb jbe out sbb push cmp mov fisubl cmp mov nop dec dec fcmovnu lret (bad) dec icebp mov loopne sbb adc (bad) (bad) or mov scas cmp scas jge in out push popa outsb sbb scas pop xchg iret lret inc adc dec ljmp ljmp fcmovnbe rol mov jp (bad) xor jp loopne cld std pop pop push ret xor xchg cmpsb and cmp (bad) mov sbb mov fwait mov cmp dec push test xchg (bad) xorl in cld sub je movq (bad) push push in add in jae (bad) rcrb bound cld test or sub jo cld xor nop fisubrl jb mov adc jg notl adc lods fildll mov and das das pop clflush (bad) test sub stos add lock jno popf and (bad) repnz mov icebp mov test aad push adc push xchg stc int3 loopw leave sahf jecxz xlat imul push sub les jns aam sub mov ljmp adc in incb mov mov add ficom jbe movsl or idiv fwait xchg outsb push jp lcall insb insb out xorl adc xor push (bad) iret movsl add inc pop and mov and add repnz addr16 pop aas pop pop push jecxz movsb mov lock xor inc cmp xor cld pop ja inc xor aas xlat (bad) stc inc mov inc mov add sub ficompl fcmovnu or mov bnd stos mov xchg loope dec jb addl insb jge and dec pop adc cli pop das imul aad dec push imul (bad) pushf shrl lods sbb mov popa cmp add add add (bad) xchg dec sub and rorb inc insb orl sahf div repnz mov xchg push xchg es pusha f2xm1 dec into lret int3 mov push sub mov loop clts push sub xchg adc repz shrb cmp xchg cmp stos cmpsb lret adc (bad) jnp jl insl mov mov fistpl cltd cltd adc cmp dec dec xchg xchg ret or jl lahf jle test adc jl imul std insl stos pop cmp scas nop outsl pop rcr mov pusha movsl adc push jbe push push js (bad) or or mov pop pop xchg sahf adc sub sub or push add aas xor (bad) lret or jae faddp (bad) push out adc xor add jnp bound mov js pushf pop pop arpl ret (bad) adc pop and mov jbe fldl out cmpsb dec mov lds pusha (bad) push push jle orl (bad) pop sbb fs cmpl lock xor sbb mov inc dec dec add out insb dec inc inc push push push in popa sarb jbe into xchg cltd xchg sbb jnp mov jb push and pusha cmp xor pop push cli adc mov or push (bad) push lret fisttpll sub scas sub fisttpl jo daa inc std mov lret push xchg out dec xor cmpsl adc repnz add dec sub push pop mov sub and sbb mov faddp sbb adc fcomps pop int sbb pop jno (bad) xchg inc xlat (bad) adc ss lds add mov jl loopne ret insl inc mov jb addb daa lods fistpll jns mov (bad) mov jle and int subl shrb sub (bad) pop add and inc lods movb mov popa shrb pop enter jae,pt sub push mulb jns cwtl add out cmp std lcall lahf int3 pop pop lock sti rcl (bad) cmc xor stos in jo and pop push aam inc pop sahf and or sbb push add jns (bad) es cmp mov int orb adc movsl fnsave inc lcall subb push push push insl sub inc clc test mov mov mov jne jne xchg mov out sbb sbbb lret iret fdivrl icebp ret mov push xor into mov xor inc inc (bad) int3 or icebp stc stc xchg aad decb pop daa dec mov pop pop and out mov aaa in call out out xchg or push mov pop std int and add dec add pop lcall push es aaa pop aam rcrl std std insl out cmp and or add push leave and add xorl fdivl pop sbb sbb daa or rcr std xchg jae ljmp sti ret cwtl outsb outsb (bad) (bad) mov xor and iret ja and popa insb push jo test (bad) dec shll aad sub jbe pop sub popf pop jne int3 dec pop jns pop mov inc or lds mov movsl js std rcl jae jp sbb push sbb gs mov aaa inc enter add push in (bad) into incl mov or mov or mov repnz subl or hlt (bad) mov out xor adc push in mov in jbe and mov hlt lock xor add jb inc sti xchg rcr fwait inc int mov test lret jns xchg stc mov loop xor add add push cltd mov movsb mov cmp sbb dec xor dec sti clc cmc adc and rcll mov or xchg mov xor mov adc push and in add and xchg sub outsl jg (bad) add push push sub rcl xchg addb out push outsb fwait test callw fs fimull ljmp dec loope frstor outsb pushf add mov dec add repz fcomi push or int3 cmp pushl jp cltd xchg sub fwait push lahf pop aad and dec sub cli and imul ds sbb repz sub cli jmp push pop xchg sub inc test lret add into inc xor jge mov mov int fnsave pusha cmp popa inc fcomps fstl out mov int pushf pushf sahf push xchg jmp lds dec xchg push test negl jb and mov lret or aaa mov gs dec loope in jno icebp pop into call inc imul or adc dec or gs popa daa fmull shll dec or or or jb push loopne (bad) nop mov loopne and scas mov adc aaa dec adc cmpsl (bad) mov mov es xor push sbb pop fiaddl sahf stc inc add (bad) cwtl data16 mov insl bound (bad) pop sbb jo fsubl lock or jo iret jp fcmovnb mov xchg xchg mov loope sbb cmp out xchg ss js cli lret xor add fnop sub xchg lcall cmp mov inc mulb mov out sar pusha cwtl lcall fwait mov mov cmpsb je das mov pop xlat (bad) imul (bad) std lods test out mov aas test mov push enter shll icebp icebp push pushf repz addl imul push add dec into push leave fstl jbe mov pop test mov add xor add clc mov jo adc lods sub jg jb jno push inc scas lods pop test lock imull aas inc inc (bad) fmuls iret adc pop xor cmpsb lcall leave addl int push sub aad in push jle push and aas mov pushf pushf and out inc imul xchg das push clc out sub sub sub jo pop cwtl aam arpl ret mov out cmpsl cmp insl movsb sub push test add insl mov je stos fidivl and push mov ret pandn (bad) or leave sbb out cltd and cmp sub inc leave pop add push loop jnp test adc mov je mov or pop push adc mov in mov jmp jmp jg xor mov mov lahf sbb add fmuls add adc dec pop call mov movsl mov fistl repnz jns test mov jb (bad) andl js dec movsl dec adc movsl xor dec (bad) popf pop pop push popf mov xchg mov dec cmp adc and dec mov into into sti jl aaa rol mov mov lret movsb (bad) adc (bad) int3 inc inc cmc mov mov mov push ret ja lahf and xor cmp les lretw mov mov jmp mov iret loopne mov jge hlt inc inc pusha mov add and sbb loop movsb in popf xor movsl imul fdivrl or dec or lret jle in sbb rcll aam pop out mov mov jno xchg xchg loop add cmp fucomp pop xor or mov lods xchg sub jge or cmpsl iret mov inc xchg outsb sbb or mov out addb and cmp add pop rcrl mov cmc addl pop idivb mov push popa jle xchg fcmovu fadds or cmp push pop pop dec int mov sub jmp xor loopne lock outsb fild add fsts test (bad) roll or xchg lret sbb lcall cld sbb jl dec push adc xor lret dec dec add push push arpl jno dec mov push in in lret adc loopne or addr16 pop push jae xchg mov adc adc cmp rcr mov mov xchg adc movntq or aad lods mov stos mov mov js mov (bad) mov in adc mov and xor xchg sbb cli cmp fwait dec jns aad bound mov mov fisttp or xchg cld inc sub (bad) ret rcll je (bad) sbb arpl dec das push or and ljmp and into xor (bad) out ljmp (bad) push pop push push push mov mov push enter and push push out or ljmp adc dec insl mov or ljmp inc sbb popa xchg mov jbe je (bad) mov rclb xchg addl imulb out outsl and and cmp sarl cmp movsl into cmc minps xchg cmp pusha lock (bad) stc stc call int fimull jmp pop leave lret rorb dec into test lock (bad) xor pop cwtl pop push and lret dec pop fcmove jae out pop mov pop pop pop xor into push int leave ljmp (bad) insl insb fisub ds xlat add dec dec lcall push inc inc dec xchg out test lret adc add popa push and mov rcl xor xor js rcr or jae xchg push lahf adc mov aad es inc stos popf or pop (bad) aad cltd (bad) jecxz cmp scas data16 sbb leave xor enter outsb cmpsl pushf stc nop ret lret iret testl push (bad) and ret and das jle mov mov jo insb out in mov rcr mov mov or mov frstor cmp push or iret sub inc inc dec cwtl into jbe roll leave lods cmpsl nop xor jl push dec mov add mov sti xchg outsb rorb fwait lcall sbb aad mov sbb push ss dec xchg fmul jge aaa (bad) outsl cmpsb fcmovu add push cltd repnz pop xchg add addr16 push ds imul cmpsb sbb clc ds lds dec dec or cmp stos pusha pop jl jb in out mov push mov mov and add xchg pop test fadds sarb adc jnp xchg dec repnz test jmp sub xchg jg aad mov in push cmp scas pusha enter into jns out lcall lahf add lahf mov (bad) or ds jp pusha daa inc jno jns test popf mov adc stc cmp push faddp push movsl movsl loope and bound xlat push insb mov pop mov insb pop icebp mov roll push sub ljmp shrl pushf call and stos dec popf cwtl push shrb les fwait popa mov mov mov sbb mov std fsubrs pop sbb push ret mov stos dec insb imul push xor inc pushf insl movsl stc mov stc push mov adc pop rcl (bad) scas lcall adc mov aam xchg cmp (bad) push jg pop dec gs hlt mov cmp loopne cmc or mov enter or cmc test mov hlt mov or and fnstcw data16 daa inc inc loop xchg mov mov mov in cwtl or bound mov repz dec adc sar stos repnz mov mov ss ret dec sub out lret lahf lcall or mov movsl jne lods mov dec xchg push push addl imul or std mov cmp mov mov jg mov mov sbb (bad) pop ja,pt jp xchg das add jmp push inc inc out dec icebp pop pop in movsl mov rcr cmp test adc pop sbb or add and daa and add add test push dec push stc (bad) jmp in xchg movsb push adc jmp or rcrb xchg lea sub lret out dec repz mov sbb and push inc inc jae sti add lret (bad) jns mov add mov add ret rcl xlat imul jb jae pushf xor mov cmpsl sub and jae stos out sahf inc dec out lret cmc repz sub rclb push push sub shr xchg or mov imul jmp popa push cmc (bad) cmp sub int pop mov mov ret popa data16 ret push or mov jnp dec xchg push clc mov dec push gs inc clc xorl jge cmp sti cmp (bad) in gs int push push inc (bad) enter repz and add sbb aam sbb ret stos lea dec int (bad) int3 pushl fwait and scas or mov inc pusha lock or test sub inc ljmp pop loope cmp push pop and push push das mov pop inc pop (bad) clc popf adc fist jmp or and add jge loope sub add xor push push push push cmc jl mov mov xor sbb cmc mov and cmp int cltd pop mov cmp or imul or push in in pop mov in cmp popf xchg outsl out xchg sarb cld mov jl jmp mov dec xor sarb mov cli push inc incl aaa repnz mov mov js push addr16 cli jmp adcl sbb lods pop scas dec xchg mov dec inc pop imul fwait jnp and add xchg adc negb dec jmp out adc mov ret inc lods inc adc test add aaa lret cmp leave dec fucomip sbb mov or aad add das sbb test mov lea inc (bad) adc or lea popa daa sub or cld scas adc addb inc sbb aad fcom test mov xor jmp push or jns push mov sti test rorl data16 fisttpll dec sbb imul lret push pop push mov dec iret std std cmp pop loope fst xchg movsb fcoms mov test lcall adcb adc mov jno inc sti rcrl push push jmp lahf (bad) xchg call inc enter xchg popf test fs xchg add xor mov sub mov lret pop sbb jecxz aas pop aam and xor ret xchg fist dec dec insb push mov orl mov lret and xchg push jbe jp ja jae xchg xchg cmpsb sbb scas pop sbb inc insl cmp idivb dec dec mov adc push fistpll sbb mov mov adc pop xchg sub fstpl leave pop ja,pt das rcrl sub (bad) (bad) jno dec loope js xor xor clc stos lods repnz pop roll lcall cli arpl dec dec cli shlb xchg push (bad) out ljmp jmp cmc or xchg mov sub pop sub and mov lcall xchg and push and add leave int mov add pop xor outsl test push xor mov cli mov loope sub add cmp inc cltd out and sbb test or xchg mov rcl sbbl clc cs ss cmp out lahf mov adc mov cs sahf faddl mov or push lret imul pcmpeqw imul fwait popa loop push mov hlt mov inc setae inc or inc cmp inc xchg or les test lock sbb stos jecxz test aas jne mov xor int gs fwait sahf out jle or adc xchg adc mov add adcl mov fldcw fdivs add jb mov (bad) xor xchg dec mov push sti and pop loope dec xchg (bad) scas aaa mov push int3 int3 inc lods or lock iret add dec or dec adc sub mov dec inc lock inc fbld das mov nop nop mov sub (bad) imul or decl push mov inc out xacquire jecxz in sti clc jp das (bad) sbb fcoml cltd pop pop jb sti fistp or (bad) rcll jle fcoml adc inc (bad) std js sbb scas or xchg (bad) mov pop pop fisttpl adc push lret sub inc test adc mov call dec mov into call adc lret add icebp data16 xchg jmp pop ret jecxz rep jg sub ret in push stos ljmp addr16 cmp fldt lods sbb pop inc lret insl insl and (bad) shlb jle jb xor pop mov cmp jne insl and clc popl add sub pop xor mov ror dec add or lods push aas adc push xchg xor xchg popf popf sarb push adc xchg popf or (bad) addl jo adc lods in cmc sub cmp jp lods push es movss stos lock dec (bad) (bad) sti stc add mov xchg lods mov test daa sbb add cwtl std mov int xchg sahf push (bad) jo xor pop jb mov (bad) inc call out test inc fwait xchg and push pop test out ljmp xor mov pop and and push lcall stos out rol lods and test mov fbld pop push cmp out inc movsb leave imul mov and adc bound xorl dec and xchg stos inc mov (bad) sahf add push cmp flds add js adc jl jge mov pusha outsl sub push adc loope and (bad) cmc aaa jno fadds jae pop test jae movsb and into add jb inc mov add std testb pop pop fwait cmp aad and ss mov mov int or sbb or mov mov cmp jbe lds in outsb adc test fist addl dec push and inc enter jge ja popa dec mov stos dec dec jmp mov fmuls xor xchg pop push (bad) inc cltd fimul dec sbb pop test pop pop inc imul xchg push sub lret ja sti lahf fisttp or fwait imul es cli hlt int push push jns jmp cmp adc xor in stos xlat adc fist sbb in lahf pop pushf mov sti gs in adc outsb aas jl scas sub sbb std push mov xor sbb out fsubrs pushf sti mov cmpsl jb rcrl repz fild and inc mov pop jge ficomp sbb xchg out push loopne,pt jns cld stc clc inc xor sahf xor test add rcrl jl or inc repnz in insl and add xlat outsb in cmp mov sbb ffree adc push mov jb and xor out ret mov fisubr inc xchg jp ja xchg test xchg push std and insb adc addr16 adc mov cli add jg adc xchg hlt in lret adc cmp insl push jno xchg push imul pop jge push and xchg xor jp jle or add es sub sbb in add daa les in push (bad) cld loope mov jne loop sbb iret push lret or test mov gs incl push push add dec xor fstl loope sbb fbstp xlat mov aad insl and jmp mov daa push mov rcrb popf shr gs add xchg rclb dec stc mov insb push and inc js imul xlat std mov pop jmp in orb dec insl push or add das ljmp add sbb fcmovnb mov pop fsubs test or cmp data16 and cld pop fistl mov cmc aas dec fiadd movsl dec iret out jecxz or aad je adc cli jb or mov subl out cmp mov lret bound decl cmp and insb (bad) movsb out xlat and cmp fs inc xchg jmp cmp sbb mov push adc fsubs mov int js xor fistpll push sbb insb cmc push dec je lahf jecxz ror xor or pop cmpsl in dec or out int3 sbb jp cmp les jnp push push jle je push pop lea lahf imul pop mov push push outsb adc sbb incb out mov sub in inc ds cs int push ret fwait pop es scas aaa jge test cwtl int3 fcoml dec mov out test push mov call add mov and (bad) fmul les out mov jne and add pop add add inc inc adc cli (bad) mov sahf es leave divl je ljmp cmp push add lds cwtl sarb int3 mov std outsb cmp mov shrb push (bad) cmp rcr sub push negb mov sbb out mov testl sahf inc xor sub adc or mov cwtl repnz pop loope aam or (bad) mov (bad) ljmp (bad) inc mov dec aaa test and xchg inc and add loopne ja es test mov pop enter fldenv sub ljmp inc (bad) (bad) scas and sub stos inc adc clc jae jno jle cmp xor in inc dec push pop or xor int pop bound out push pop xchg mov xchg ret cmpsb and xor out mov mov xor ret dec sbb add cwtl or push mov dec es and pusha push push and mov mov xchg (bad) pop sbb sbb pop (bad) out jmp cmp lods faddl mov mov dec push fldenv mov stos aas out fistl fistpll (bad) aam inc jne popf addl add cltd das xchg xchg adc inc xor jbe pop fcoms icebp into xlat maxps xchg cmp mov xor jmp mov jmp xchg out push inc pop xchg enter sbb jg bound addl mov shrl sub xchg cmp sub cmp mov xchg mov jg daa mov jb inc roll sub mov sti xor loope dec jbe dec jmp test ljmp out sbb les push in push lahf daa jb fstl add les jg jo mov addl lods xchg nop nop mov or stos inc stos (bad) or test (bad) jmp pop jge mov xlat rcrl adc rcl push xchg iret repz adc xchg push lods mov ret push fmuls xchg sti mov mov fwait jle adc shrb sbb jp mov mov std in addb in leave xchg xchg xor add outsb jmp ja sub xor ljmp ja add fidiv and mov xor (bad) iret mov ljmp ljmp out rorb pop pop cmp addr16 cwtl mov sub dec sbb or enter (bad) mov test and imul jns push add cmp xorl lea lds aad je dec cs lods adc dec fildl jbe cmpsb bound call xchg les test (bad) std cmp (bad) data16 cmc xchg sub pop lods and jnp pop sub repz enter or out push sti lods aam inc inc (bad) divb dec sbb sbb xchg scas add jno mov dec dec inc mov cmp int3 test movsb sahf stos test add lahf bound cmp in jne mov aas stos stos out push mov loope adc repnz or and cmpsl pop xor aam dec mov cmp aas das push ds cmp and pop adc and lcall loop mov xor nop adc xor cli xlat nop (bad) out notl stos adc adc insl loope add mov outsb cmp jae mov and mulb sub jo adc cmp cmp repnz push push lods inc mov lock pop fwait popa inc mov fildll jb jp or xchg push pop lods and and inc inc jbe xor jno jle xor pop int subl jnp xchg push mov movsl out xor popa arpl icebp fs inc and popl xchg xchg test push popa mov into add into aad lret leave ds and mov loope dec jbe inc pusha lods jp test jecxz inc int3 inc inc sbb sub loopne mov pop and fsubrs jp dec sbb and mov out das loopne outsl adc cmp aad imul lock or push shrl push mov int or sti sti aaa dec imul push pop dec (bad) (bad) js xchg dec jae or sbb fistp (bad) rol cld popa std insl insl cmc clc aad nop pusha in pop lds jae into aam pop adc dec jne pop imul (bad) cmpsl fnstsw mov test dec jae or jnp bound add es cld cld pop das (bad) cld int and cli (bad) dec addl dec or stc gs lock sub stos sbb ljmp pop push arpl (bad) pop pop aam stos fs cwtl cmpsb js jae call inc imul shrb jmp roll push and mov aas (bad) stc iret (bad) cmpsl cmpsb xchg fs mov imul xchg stc mov fwait pop pop xor leave dec sbb inc push data16 mov insl mov xchg mov jbe pop aam ret mov cltd sub add and pushf data16 sti idiv xchg sahf sub mov jmp aas fnsave outsb push mov xchg daa jno fisubl inc subl cltd adc stos fildll mov add lret dec inc sbbl or out mov aaa jbe,pn sbb (bad) mov xchg fiadd popa jp push push int cmpsb mov xchg arpl cld aad cmpsl enter sysret (bad) sbb stos loop stos pop and add outsb adc fucomip mov pop push test sub mov out out out lret shrb ds orb stc cmc rorb aas push lahf lret xchg xchg icebp mov or jns push xor lret mov adc inc cli add cmp dec in in sahf sahf add mov repz outsb jne mov pushl lock pop jns loope sub jmp ds insl and mov push lods sti ja (bad) repz xor jg int3 andl push xlat fbld push inc mov ljmp or sub inc ss cmpsl mov adc in out test sub pushf pop lcall repnz dec adc mov pusha sub jae sbb mov aaa in jmp std inc bound divb add lock xor pop in xor dec in mov or ss xor jns jno,pn les ljmp out out imul in push push xchg addr16 dec das stc push jb les xchg std dec fcoml lods in cmp es data16 in cltd imul sbb in sbb jl mov lcall lahf insb les adc fsubr and add dec ror gs push mov jge outsl test dec mov iret mov xchg ljmp mov dec stc mov aaa and (bad) out xchg sbb insb or sbb push or sub jns pop lds ret (bad) sbb outsl test lds fscale mov dec lds mov imul repz xchg (bad) lods add mov push xor ds push mov movsl jle insl sub mov adc loop pusha out insb sub fisubrl or fmuls xor cwtl and add addr16 xchg into fisub rorb or xchg loop and and data16 push divb idivb cmp jle add xor cmp inc lods cmc data16 cmp cmpsb mov lods jbe dec repnz dec xchg lods mov jl aam push adc sub sub stos jecxz test mov or pushl dec xor adc mov inc add or sub cmp jecxz ret sub jmp shlb out jbe dec gs sub sbb je arpl mov (bad) sbb (bad) push stos aam mov inc div mov enter out or and cs rcl cmp mov aas jns adc jmp pop lds jbe lret dec dec add incl insl mov add iret fnstenv rorl repnz pop push mov sub (bad) in jl jb and sub adc add and xor jno lods jnp pushf iret pop lock je mov xor cmpsb lahf test test pop or insb and jg push inc sbb rorl loop xchg inc data16 neg mov add xchg jp rcrl out pop rcl repz outsl imul insb push and data16 dec xor xor test rol and dec dec cmc ret mov ret inc mov and pop lods pop outsb pop pop roll outsb push ficom xor dec iret incl fistp dec add insb sbb loopne incl bound inc mov xor xor insb mov in stos stos shr (bad) lods push sub cwtl cwtl pop pop repz xchg pushf int pop rclb or jle int3 mov jbe out loope pop aas movsb dec (bad) mov jmp sbb xchg mov nop push add fstl test pop push xor fadds inc cwtl divb jmp cmpsl sti addl add add sysenter mov movsl movsb lds jle push cltd cmp adc mov adcw sub dec gs sub sbb je arpl mov (bad) sbb (bad) push test or div mov enter out or and cs or (bad) cmp mov aas jns adc jmp add adc jbe lret dec dec add push and dec lods movb addr16 into popa pop or test fs cwtl shrb sub inc mov and sub jo jl imul (bad) sub sahf ss mov pusha fadds int3 ss js push dec cmp dec fist jge dec or (bad) je push xor mov scas xor jge sub punpckhbw or mov pushf lcall adc lds repz insb sbb in insb test loope sahf ja ret fmuls adc (bad) xchg push aam jbe ljmp in test push data16 xor dec adc ficom pop jle aad sarb in aas push in int3 xchg ljmp mov (bad) outsb or dec adc xchg paddsw xchg dec mov adc or leave into pop aam insl cmp (bad) xchg push (bad) pusha and test xchg xchg movsl pop xor int3 mov push mov inc psadbw add jae add popa fs pop jnp push jb mov mov les xor pop rolb jns (bad) in call xor xlat movsl sub inc adc or int ret ret cmp fsubs out ret sub jmp shlb out jbe call stc mov ret pusha sub xchg lcall loope or inc fldcw and int3 scas insl mov leave in push repnz outsl aam inc push je cmp mov (bad) or stos cli mov femms push lea sbb imul push mov sarb js aaa ss dec out lods rcrb aaa aas jnp xor jne lret cmp rcl jp hlt cmp add bnd dec pop pop adc inc (bad) jmp pop jne in xchg pop cs jnp push push fiaddl add (bad) and inc mov enter inc inc inc cwtl divb icebp loope clc daa push push xchg int3 fidiv pop aas add add inc sbb sbb scas lods (bad) out leave enter test sub pushf pop adc inc xlat pop adc ret fisub rcl stos scas sub and add adc out adc scas out push cmp mov (bad) mov or fldenv leave sbb fisttpl in hlt xchg in lahf sbb adc mov xchg dec mov jo xlat sub add rol push push in addr16 add je pop cmc or lods push lcall jle pop imul pop add (bad) sub jbe xchg inc pop jge (bad) mov (bad) sub pop xor std push sarb jmp dec aam (bad) (bad) pop jo xchg shrb pop jbe lcall les dec or dec test sbb lcall scas vcvtdq2ps cmp cwtl sub clc jp stos stos out gs add mov sti mov bound arpl int3 push fsubr aad sub outsl das sub cmpsb mov int3 leave and rorb insl divl lods lds lahf cmc aad xchg negl xchg xchg icebp sbb xchg pop sbb lds out inc inc (bad) mov adc leave sbb pusha jbe je ret xchg xchg adc mov lahf mov into xchg cltd xchg sbb sarb mov jge in xchg sub inc shrl dec cmp mov inc imul cmp jne imul push xlat adc std std popa pusha mov stc cmp sub jge stos leave iret test cmpsl (bad) pop jns add xchg pop into sahf movsl repz inc andl cli jae movsl and iret xor mov cmp jbe cmc and aad fimul nop into inc sahf test jae mov mov adc xchg stos fs inc arpl scas ret dec dec xor repnz adc mov (bad) rolb (bad) cld and or (bad) xor add jnp pop sti lret pop jecxz pusha cld stc popf ficoml cmp jb jge popf inc std loop scas mov adc push cltd mov ljmp xchg ds cltd mov xchg cli adc xchg xchg sahf and scas push or popf (bad) std adc shrb push pushf lds pop push cltd orb (bad) and xor popf pushf cld and in pop push arpl mov insb js add lea add jns (bad) adc cmp jmp fnstsw mov or lahf sub pop and sbb jnp xchg or and jae sub adc dec loope xor rclb cmp mov push pcmpeqd pop push pop out ret xor mov ljmp mov out xor ss mov jo in ret je mov mov in ret in in sahf clc add inc ss and xchg sti push test sbb cmp jl jne bound jb in and scas jg jno es movl xchg cmp xlat or stc jb pushf test int3 pop fildll push loope fxch lock mov cmp mov int (bad) jno rorl repz sub sahf and mov push cltd adc pop clc clc adc and sub ljmp push fcomp bound nop dec inc test pushf sub xchg aaa sar stos es pop dec dec jmp jno sahf sbb mov imul sub rorb ret sbbl or jl sbb add sbb out cmp inc mov sbb push fstps xchg aaa and jmp cmp add popa jbe nop and mov je das pop cmp cmp icebp jge jmp mov jle add (bad) rorl subl dec ret (bad) cmp jbe data16 jno test shld fcmovu or out push or sti mov mov int inc aas ljmp fnstsw mov pop bound aaa fs xchg sbb push daa imul aad ret pop movsb lret and push inc ds xchg sti mov loope push jne inc shlb and inc adc inc notb insl pop mov cmp iret rcrl cmp add das aaa repnz leave dec push pop push push nop push mov aad imul and mov adc xchg dec in popl out jns add mov push jmp addr16 xchg xchg and push scas push shll mov or (bad) jno cmp gs push push pop scas add loope fdivrl push or push stos mov enter mov sbb inc loope jmp scas flds lods int3 stos xchg icebp (bad) add int in mov divl inc and dec jg pushw or push xchg adc fdivs cmpsb or rolb lds sahf (bad) std xor dec dec mov pop inc add cld imul adc push fprem1 movsl insl sub dec pop mov rcrl jmp out ljmp mov push mov dec xchg jno mov fnstcw or sub sub xor fcomps (bad) adc jge fs loop pop xchg loop sbb jle add mov xor xor imul xorb add les fldl (bad) and jbe por jle loope (bad) mov inc inc xor xchg mov aad pop andb mov lds enter pusha mov fs sahf pop in adc xor call adc adc push pop cwtl or (bad) scas xchg rcr inc cmpl call sbb lret pop dec cs lea mov or insb rcl (bad) jae sarl in andl sbb sub aaa mov ror pop cmpsl xor sbb data16 std lret out adc enter iret push cmp cmp outsl js cmp jp pop ret add adc and pushf push xchg icebp imulb lahf pcmpgtw testb mov cmp lea enter (bad) stc jb and adc jnp dec push add cmpb push adc stos (bad) call dec inc mov shrl in lock scas test add sbb stc cmp push in or insb mov xchg inc test stos lds or fiadd mov lcall scas adc movsb das loope jne hlt jmp call idivb mov lods roll adc mov jbe addr16 sub mov pop pushf xor dec jne sbb clc dec dec aad cmp jge sub inc inc add cmp stos sbb stos ret fidivl push mov sub fcomps dec jno adc pushf lea sti ss pushl sub imul and cwtl bswap sbb bnd xchg loop push imul or pop push (bad) out mov dec sahf sti (bad) arpl lret pop pop inc test in xchg outsl aaa inc ret inc mov cld stos push xor xchg addb lret inc jae loope mov mov mov inc add loopne xor xorb call mov lcall mov sbb push test repnz mov dec dec mov cmpsb (bad) les cmp lods lods stos lods fcmovu fistp cmc jmp ret shrl xor sbb push outsl outsl addr16 xor adc xor lret dec add push push gs dec dec vandpd in popf lahf mov test rcl jp repnz mov sub and cmp xor or mov pop xchg cld jne out dec mov mov cmpl sub pop outsb and clc sbb repz inc mov int sub je mov mov ror loope sub mov cmp xchg aad test xchg out test sub mov push mulb (bad) xor ds push loopne mov add popa aas dec cmpsl inc ds daa std aad mov mov adc cmc test xchg sbb stc push scas cld insl fstl out jle in clc dec add insl add xchg (bad) test (bad) pop push jmp test stos stos addr16 push faddl add rcl insl xchg rol xor sahf sbb xchg pop mov dec xor in mov in jbe and mov jae pop sub push stc jbe pusha pop into ret stos jmp rcl add fldl pushw mov xchg adc mov fwait sahf bswap ds rorl adc repz xchg popf push std bound arpl pop sbb mov push pushf add mov inc in int mov lds int mov or push xchg xor inc jb lahf ss inc or dec loop sarb push outsb sbb dec adc sub sbb and pop jecxz cmp imull xchg nop mov xlat pop outsb sub ror jge mov pop in in call inc mov scas push loopne stos mov xlat mov aam push push aas xchg adc dec in test rcrl mov test push cmp std cmc int3 mov bnd rclb push push mov push and aad adc ret arpl test outsb gs dec push scas xor xor pop aaa movnti cli cld lods push je sbb adc jle ljmp sti aaa pop (bad) iret lret mov fst pusha mov cld mov xor xchg pop sti dec mov push movsb ljmp mov addr16 add and ss push adc dec xchg cmpsl lods gs cmp rorl sbb jns jle push sub mov sbb sbb jmp loop loope inc inc xchg imul mov insl in ds scas cltd xor cmp push and std jo arpl fcomp sarb aaa pop imul add (bad) (bad) sti popa sbb push add xor push push adc sub xchg ficom into imull rorb stc push mov jle or int fisubr mov pusha cmc (bad) mov xor dec and ljmp popf test cmp xchg adc xor sbb mov and gs ficoml outsl sbb call add mov or pop ljmp push ljmp xchg ds repnz int3 push sbb ss pusha fwait push nop pop cmc mov push jnp aam jp dec mov sbb xchg xchg out pusha out jle ficompl mov fidiv mov in fistp aam pop push jecxz push mov into lret xchg jae ds mov jl xchg sub rcl std (bad) jl push lods pusha xor std mov xor jno xchg inc jnp pop sti int3 or mov add push mov (bad) (bad) (bad) and push (bad) out jbe mov mov dec jg andl js sbb mov and xor mov rcll pushf adc sti stos in jle das cli clc lds push sti push lret ja popf mov nop ret mov insb aam mov mov dec repnz (bad) testb sub sub lods inc cwtl in mov imul pop aam ss push leave cmp jmp mov or cltd xlat or push push (bad) cmp ret js shrb sub in pushf or adc dec dec mov negb cmp shr sbb adc pop dec ret cltd sbb mov pop imul daa movsl fstps fcomps pop adc cltd xchg and in mov pusha flds xchg mov (bad) mov popf and lret dec fcompl dec xchg loop mov aas mov into dec dec push add dec int3 dec sbb (bad) xor jns inc lds ja push jo jecxz mov jo test popa mov mov pop sbb cmp sbb aas sub and cmpsl push push add cmp out test cmpsl pop aas inc insb fdivr inc xor and fcmovu push cmp mov mov repnz imul mov int dec dec add bound je dec lds mov rcl nop or pop push lcall cmp xor jns adc ja mov lahf (bad) aaa out cmp jno add xchg lock sbb mov or call (bad) jo mov add add jg sbb xchg lods xor lock pop sub xor aam sahf in in sahf pop fldt dec dec jb pushl fwait ret adc mov xchg shrb mov fldcw sub jg sbb arpl dec das fidiv adc cmpsb pop sub stos adc lds mov pop dec xchg xor (bad) jne push and (bad) shrl pushf xlat clc and in insl les ja incl je inc addl cltd out xor dec add xchg inc int3 jno mov pop pop popf inc int3 hlt sub sub imul std xor and mov test and xchg out inc loope idivl ret rorb adc movsb push sub xlat sbb xchg or push push int movsb or lods ss xor and xchg push mov mov cmp int3 je pusha sahf popf mov cld mov ja (bad) fidiv pop xchg xor mov fcom cmpsb add ds stos push (bad) push (bad) jne je add lret das mov arpl and into out xorl imul addr16 jg lods fmulp add mov les push aam dec or pop sbb sub loopne cld inc xchg arpl data16 in dec (bad) test sbb mov ss cwtl jge sbb dec pop push out test sub pop (bad) adc rclb cmp aas xchg imul adc jb add add (bad) jge outsb push jno push test adc lock loope cwtl jbe pop dec dec dec es dec dec push add dec int3 inc adc hlt cli sti sbb sbb mov pop jae int3 lret push push insb jns mov call das out (bad) or loopne (bad) ja and stos insb es aad push xor mul les cmp and scas add push mov (bad) clc icebp fwait sbb js cs mov pop cltd and sbb pushf xchg and jno add add jo fstl sahf (bad) outsb shr popa (bad) adc xor iret imul out in jge mov push adc stc mov outsb out rcrl js inc xor push inc or aam bound lcall push ret in aas repnz sarb mov popa add rcll jb cs cmc shrl ljmp and or mov bound sarl xchg adc test add or dec and push push cltd jg pop sub lds ds loopne sub cmc fstps sar push xchg pop xchg ja xchg clc push repnz cmpsl insl js loop dec js push clc pop jp inc out in (bad) in pop enter mov arpl xchg cs shrb xchg or push xchg aam mov or jmp lods push cmp xchg mov cmp mov ja bound and lret mov rcl adc xchg pusha xchg jl mov lods pop scas dec xchg push xor popa test dec xchg push jle add jmp mov (bad) cli jns fildll mov imul in xor lods cmp leave mov cmc repz jl repz lret mov test xor (bad) test xchg repnz push insl mov xchg mov popa cmpl cld cmp push mov das (bad) loop (bad) adc sbb xchg mov arpl out fwait jg sub lahf pop leave loope imul int ret fisub add decl movsl xchg std or jne and inc cli out hlt mov in sbb xlat push clc in sti ss mov jns sbb dec jne in jg sbb int pusha arpl test inc lods lds test pushf popa repz cmpsb xor mov icebp lock popf loop cli xchg loope mov xor loopne adc and decb xlat sbb cmp ljmp negl mov ljmp cld enter sbbl cmpsb (bad) pop stos (bad) jmp add idivb xchg stos lods (bad) out cmp and cli stos add fwait cmp mov mov lods addl inc insb mull mov mov shrb push inc dec (bad) jno add scas fs adc stos out push rcrb vmread xchg mov (bad) xor (bad) std cmp xor rorl (bad) mov pushf inc xchg rcrl lods repnz pop push test inc jbe mov mov scas mov movsb sbb lahf sbbl (bad) bound mov dec dec inc andl jle mov dec mov cwtl ret jmp xchg icebp dec adc inc (bad) fldcw adc enter daa xor jns test scas cwtl cwtl cmpsb jns adc mov cmpsb sub mov sbb in mov dec hlt test (bad) mov mov shrb jmp or and mov jle lahf cltd incl inc mov gs xchg pop (bad) mov stos test adc hlt subb cmpsb aam les or pusha mov xor add push bound push (bad) insl fldcw sub adc mov mov add das inc pop pop test or out or xchg mov sbb sbb shll jb rcll fcompl mov outsb pop mov xchg clc std adc push add mov clc leave and inc aas mov xor add std addl test cmpsl addr16 xchg je lahf jmp shrb pusha mov call sti cmp out mov (bad) xor cmpsb sbb inc enter inc jp dec or cmp and mov call js loop fwait inc pusha scas out xor addr16 mov mov and (bad) int pop lahf cltd pop pop dec mov jb xchg sbbb outsb fisub mov and fdivp mov xchg nop shrb cltd jge aas enter pop pop lea js (bad) or push adc dec call sbb sbb cmp or fsubr jae arpl shrl jae out icebp push dec add out sahf cmp je out je bound es mov adc inc dec arpl pop and pop adc cs addr16 push adc (bad) push js sbb cli lcall sub cli dec sub in mov mov add mov (bad) fwait (bad) leave bnd cmp xchg jno pop xor mov fs pop leave cltd (bad) dec mov push movsl mov divl adc xchg mov shrb jne add xor div jge in jmp inc xor int push inc xor pop gs xchg daa stos std pusha mov mov pop into mov adc adc ds dec fnstsw scas (bad) adc rcl mov ss call ljmp push add mov push shlb inc sub fldenv mov aad fs add rclb imul jge sub pop js aad push cmp fwait inc inc stos sub imul cmp xlat cld lods scas scas push popf push fprem1 movsl insl dec stos sub jp xchg in or in dec add icebp sub jbe popf ja xchg cltd movsl push jp stos fildll inc inc lcall outsl repnz mov adc cli xchg mov test jg xor rcll scas or adc imul cli mov jns loope xchg adc test jg repz (bad) cmp ljmp call (bad) cmp shlb addb stos mov into ficom pop inc dec xor inc pushf divps sbb sbb hlt in cmp cmpb fs mov sub jmp in sub in or inc lcall aas xor and into sub out cmc das mov sarb inc fcomps pusha or lea and mov xchg jne into and icebp jl lret cmp aaa sti shll pop test lea xchg push pop rcll movsl and mov sar leave insb xchg xchg cmp (bad) data16 jl insl lcall fstps sbb add add pop add push or mov pop or adc jle dec jbe gs aas xchg and mov test lcall or jb add pop aaa cwtl jl gs inc pop cwtl pop daa mov and test ljmp in pop jecxz outsb sbb scas xor and mov sub add (bad) mov cmpsb mov or (bad) aaa (bad) mov dec pop fisttp cmp jecxz nop inc ja sbb push mov push push and fcmovu sbb jle adcl repz jg cmp push insb aaa mov or int inc pop adc and jnp inc dec mov sbb loopne sahf flds push fcomi mov pop pop pop popf push xchg fcoms pop mov jbe adcl xor mov xchg scas bound mov push fsubr mov test mov scas xor fmul push iret xchg push leave fisubr mov jns cmp int3 pushf shrl push jp dec dec mov and add scas pop sahf add bound popa adc adc dec mov sub sahf cmc insb out fcoml inc jecxz push pop pop xchg sub dec daa push cmp out xchg test cmp jecxz sarb push movsl jle push xchg xlat jo jp mov out nop jmp xchg stos and xor xlat push xor leave leave sbb in jo inc dec mov push call adc or cmpsl (bad) int clc sub xchg pushl jb or mov cld scas bound hlt pushf pop das clc xor fwait adc or jg repz clc pop add enter add icebp push fxrstor push shl ja sti movsl xor mov and out mov (bad) sbbl push mov jmp xchg (bad) dec sti stc clc insb sbb scas gs sub dec (bad) lret dec xor insb aam pusha cmp out mov mov movb or dec outsb cmp (bad) cmp iret pop adc dec ljmp add push cmp pop pop loop fsubs xchg cmc adc addr16 or pop jg test or cmp (bad) fstps jge add ret cmp mov mov cltd out jns jl outsl sarl ja jle rsqrtps lea in sbb mov or ss lcall ljmp outsb mov imul push push xchg loop punpckldq push loope fs push popa push push mov aad outsb add in rclb out in sahf psrlw xchg (bad) (bad) cmc xor lods adc mov inc push cmp imul divl mov cmp mov je arpl mov xchg dec sbb test lds std std xlat or xor dec rorb mov insl jbe jb mov xchg fistpl sar or neg mov (bad) aad dec xchg test and fwait loopne or mov fadds dec outsl add pushf push ss das loope in in adc lods leave add fstpl pop addr16 pop gs insb xor push in adc jg push add in fwait pushf leave out push or pop jbe xor sub (bad) jl (bad) mov inc inc (bad) pop pusha add data16 negb jmp popa xchg test lds call sub sub add adc call gs mov call mov adc aam leave add pop pop lds mov cmp sub les mov mov cmp (bad) mov push out cmpsl push cmp cmp sbb loope or mov int mov in jo ss and lods stos push sub loop jbe adc cmpsb or popf subb lock clc stc ljmp adc loope scas imul jle push pusha adc sub jo pop push jp xor or imul scas in fs (bad) and mov sub jb push mov into mov xor sahf push fcomi cmpl add add inc jmp sbb pop icebp mov mov push cmp push mov pop cmp rcrb aam jb int lods add mov std dec (bad) std sub je sub hlt add jae mov int inc xchg or adc ficompl hlt ret mov cmp xchg dec daa pop iret rclb fdivl mov cld aaa addr16 mov (bad) pop hlt stc test sbb mov aad das dec cmpsl jp xchg aas jne or push mov in das mov sbb cmp push popf adc popf xchg dec insl inc aad js sbb in icebp and clc aaa inc or cmp std call adc cmpsb pop pusha lods adc sbb shll mov mov sbb fcomps test cmpsb add pushf jb cld cld sahf jno add (bad) mov jecxz sbb (bad) outsl xor int3 lods add xchg jb rcl jg cmp sahf xor arpl dec dec aaa aam cmpsl outsb arpl nop pop sti std xlat pop lds mov mov pop sbb cwtl jno push sub fidivl pushf push cmc cmc push enter ja (bad) aad sbb ret insl in dec push add xor cltd movsl in sti stos add and sbb sarb cltd sub adc pop pop xchg xor or xor push into dec mov pushf jb and adc pop test jg mov cmp sub call bswap add bnd push add sub add push dec int3 xor or sbb pop nop mov dec ss fucomi popf movsl jle out out xchg xchg data16 inc mov cs sub jmp arpl xchg inc jae neg jge aam (bad) mov imul pop or cwtl xor dec cmp push and popa push push and cli sahf mov fimull ja xor sbb movl or push adc icebp (bad) mov inc add and cmpsl enter add mov sbb push or rcr xor mov ljmp (bad) hlt mov nop imull and xor add ret lods adc pop out outsl or push add mov mov push add and fisubl orb out test jns jbe negl das dec xor push pop adc xchg pop pusha xor (bad) pop cwtl sahf push jmp cltd lock sysenter out and pusha adc xor mov mov int3 ds and xor (bad) enter fmuls ljmp xchg xchg xchg inc out lods pop (bad) popa pop mov mov in jb xchg jb fnsave les jnp enter dec add pop xchg nop mov icebp push shrl pushf or es adc lods mov dec movd or adc aam pop sbb cltd cltd xchg sbb xchg outsl clc xor lea push les aam std dec dec std std in hlt out push push outsl in mov pop adc add nop adc lea jl,pt pop and inc dec pop mov iret negl sbb adc mov add sub addr16 xor mov and cli cld imul fwait fwait xchg sahf mov pop mov dec add jg mov ljmp xor test movsl adc sub fistp adc pop jg cmp out in cmp jecxz inc enter push cwtl or inc ret fcmovnbe jae xchg sbb sbb loope sahf loopne nop test ja xlat jne lret leave dec dec mov fstl bound dec (bad) sbb add push jo fildl pop pop popf popf pop into repnz clc jp xchg push loop sub pop in loope inc mov push push lods les sub push pop xchg out or xchg cmp push sarb icebp add add adc inc inc movsl jecxz xchg fs sti mov or popa mov pop sbb adc pusha icebp mov add pushf adc test mov jmp add fldcw popa lahf loop ss adc (bad) xor sbb stos xor sub cmpsb popa and ljmp in xchg out cmp stc jp mov lods inc icebp (bad) test jb xchg insl in xor decw add push sub fs xor gs inc mov jge pop frstor inc add cs pop stos adc ljmp xchg xchg hlt imul mov lret mov std cmp and cmp lock fiadd mov xchg xchg (bad) bnd aaa inc inc add (bad) push push sub mov (bad) mov push pushw repnz mov cmc mov or popa test ds or dec xor rcrl add cmp xchg xchg stos and lods mov out cmp (bad) dec xchg inc sbb mov (bad) dec sbb adc movsb xchg mov mov inc pop (bad) or mov add mov mov xchg (bad) iret dec (bad) cs int3 mov cmp daa sub imul out hlt dec outsb outsl in in mov imul leave test mov jns or sbb lods push std int outsl xchg adc mov in adc lds xorl in in stos stos adc sbb pop fidivrl addr16 inc jle pusha dec adc (bad) sti and or xor mulb enter mov insb pop sub clc and std fldcw mov pop (bad) sbb and pushf jae push and insl out fwait sbb jbe inc sbb movsb stos xor aad in out outsl sub enter iret xchg or test das cltd cwtl movsb imul push mov out int3 dec call add mov push pop fldenv sub adc fucomi in or fs fs mov jle outsl and mov sbb fwait lret adc sub mov test add xchg add adc add mov mov jns jmp rcll stos and push jle jno mov sbb add cld ja adc std push push dec or sti stc add fsubl fcmovnu inc inc (bad) or fstpt (bad) dec mov add xor int3 int add imul mov pop fstps jge or cmpsl out (bad) icebp out inc shrl mov stos les add cmp popa in mov mov aaa pop pop xchg sarb pop and rcr pushf ss cmp (bad) dec xlat daa (bad) repnz push test scas scas mov fistp or fwait jae insl inc je popa pop cbtw xchg jle outsb stos sub or add (bad) ja les icebp mov test mov xchg dec or rorl aam sbb int test sub sub mov daa sub sub jo adc add out subl fs test aaa imull ljmp jo stc sti xorb sbb adc jae push sbb rorl ss in lahf jnp inc inc sarl cmp insl (bad) pop xchg xchg inc arpl xchg out xchg xchg (bad) sub sbb lods je fiaddl faddl dec mov inc xor and xor icebp xor fmuls push jne clc lcall or cmc sbb ret adc xchg cmp subl jl sbbb imul push popf add lea and neg mov out cmpsl movsl pushf or sarl add out cmpsl push xor mov inc fisttpl data16 lods fiaddl adc xor (bad) (bad) mov xor push adc pop cmc dec dec jbe gs fldl scas jp jg xchg sbb jp lea push mov shrb mov enter xor or jo std stos stos adc cli cli jne sbb lret lret outsl outsb data16 je cmp and or sub scas sub fwait andl movsl dec adc cwtl ljmp pop pop dec (bad) mov dec (bad) jne push imul mov scas in push or fcoms ret jae xchg cli test test rolb push (bad) subl fwait (bad) outsb or dec sbb data16 sbb fwait rolb add (bad) lods jg sbb outsb stos test out xchg mov les add testb push (bad) mov xor xchg divl fisubrl dec xor psubw jp add lock inc daa cs pop inc adc cmc in mov xor fidivrl ret mov mov jnp in or inc jle in mov add dec popf popf ret adc (bad) push ljmp inc sub mov mov push mov lods mov (bad) aad ljmp std rcll lcall fs sahf mull add mov push pop fidivrl xchg or mov xchg test shr icebp inc and push popa sub int sbb jnp inc cmp mov jp pushf inc push mov dec adc in pop lea scas adc push shrl stos lock jle jl imulb mov sbb mov mov jle jno push add lock inc inc lods stos fildll or adc fldenv test addb mov sub jo out cmpsb repnz movsl xor xor loopne roll inc es mov arpl inc xor adc or fs stos out arpl int lret mov ret pop push mov (bad) outsl es fwait (bad) cmc testb inc cmp ljmp inc xor xchg imul push or sbb dec (bad) sbb pusha fchs push lret lret pop ret stos adc and stc stc loope les pop xor out or pop mov test loope pop loop fistl int sbb stos jbe inc rcl xor or adc push loopne mov cmp (bad) stc mov and xlat and in lcall fwait out add or shrb add jne test lcall popa or scas adc sub jl inc in outsb not push fldt loope add arpl jno cld cld aas mov and je fs dec adc add add mov (bad) sti iret or outsl out xchg or inc cwtl cwtl sarb mov or (bad) inc xchg xchg lock add scas out dec out sarl mov jp orl out ljmp sbb out out int3 mov mov and add xor (bad) pop push in popa (bad) xor add outsb or fdivrs pop ss sub loop push xor xor push inc mov xor cmp hlt mov (bad) inc push pusha pusha gs adc inc mov aas pop inc pop data16 lea or addr16 or jae dec leave ja mov ret dec pop mov jp in sub insb push mov dec (bad) cmp ret ret cmp fsubs notl jecxz adc mov and popa aas je fdivrp clc call cmp sub imul mov stos (bad) fldenv sbb out jbe jle cld mov jle fisubrl sub jg,pn push js cmp cltd rol and mov imul nop sub dec cmp outsl push stos jae pop cmp (bad) ret fsubrl pop in in adc mov ficompl call js cmp cwtl pop adcl sbb mov pushf mov fmulp mov sub xor jge mov inc lea or add xchg or ret (bad) mov push rcll inc andl xlat adc dec (bad) xlat cmp negb mov pop pushf pusha pop pop in lods push xlat mov je dec or (bad) lds (bad) insl mov adc inc std sub fwait xchg test pop jmp fdivrs push pusha inc adc jo stos mov addb cmp cwtl jne into mov dec sbb addb push push xchg aam mov cmp incl testl in jae jecxz add lcall repnz pop (bad) insl mov outsl mov movsl mov xchg push mov cmp das scas pop adc jb pop jl pop sbb push mov jns lahf cmc pop sbb xchg adc rol popf mov jae pop stc mov cmp rcl lret mov int3 pop cmp rcrl add adc cld xchg clc pop adc dec imul adc adc xchg xchg mov adc or repnz pop jns add mov lock sub inc popf push pop les add rcrl jb add sbb out inc js xchg rolb outsb adc (bad) in mov push xchg jl mov sbbb aad dec lea leave imul idivl push cs sbb lahf cmp pop or push je dec xchg das xchg stos adc adc je out jne cmpsb bound xchg hlt and jno push cmpsl or ror in jmp add andl es ret ucomiss pop mov aas mov add mov cwtl shrb mov pusha mov or bound pushl jle or sahf jno movsl cmp leave dec fs stos fwait popf cli jnp out xchg xchg mov mov and sub xlat cmp sti cmp call mov mov push in jnp out sahf push dec movl outsb out out mov mov fimul movb lds hlt in loopne outsb lret and pushf mov aas mov dec dec push mov enter (bad) ja in sahf hlt mov mov or cmp aas jp lods adcl jle test add dec insl and sarl jno push push (bad) lahf int pop test aam adc mov mov stc add inc inc (bad) pop popa sub clc jmp xor data16 xchg dec inc dec xor insl rcl dec dec mov add pop andl pop cli dec stos mov out xchg call cmp lds sbbl xor lahf lcall lock sub sbb pop ss sbbb push cmp inc dec xchg imul lds jp into cmpl hlt mov adc push xor add mov mov sub repnz jl push jecxz push or jmp out adc push (bad) sarl mov popf inc inc jp fmull dec mov or or loop xchg jno add mov jbe lods cmc add inc cmpsl rcrb popa sbb adc cmp xchg cld xchg pop pop add aaa movups out sbb adc ds test ja imul pop sub add cli and lahf xchg push shlb imul push (bad) test jge push imul out xor lcall xchg and das arpl pop mov mov test push repz sbb fstpl mov mov clc xor jno sbb fsubl les sub xchg lret and out clc rorl lds fild rclb into adc jne mov rorb push adc sub cmpsl lock mov jmp daa mov test aad push or mov addr16 push addl xor popa (bad) stc pushl lahf add mov aad punpckhbw dec lods outsb idivb fsubr ljmp inc ret xor shrl pop aad lods cmp sub sahf pop cmp xchg xchg mov push mov stos outsl and mov cmpsb and cmpsl addr16 in adc scas in mov mov hlt mov aaa push xor enter out cli fs mov pop mov lock jnp dec js icebp fisub imul divl push aaa mov push cmc push fldcw (bad) and xchg mov into fisubl sub add jbe call addb jge sub sub adc imul sarb xor pop push test lcall fisubl mov mov xchg das fldt pop mov fild out inc out xor inc popf fwait imul jnp ficoml pop dec (bad) cmp sbb call inc pop adc pop sbb and mov and mov daa jecxz cmp mov xor incb jge dec jge dec into xor movsb movsb (bad) jle or add rolb lea cmp mov fcmovbe es sub inc xor add push mov clc push fwait in subl and div or test mov inc insb cmc lret sbbb add mov (bad) stos aas cwtl data16 xchg sbb mov xchg rolb xchg fcmovnu rorl out addr16 mov mov (bad) xchg pop in ja push pusha fdivp xchg xchg jmp test lcall js (bad) ror cmc xchg mov jge xor sbb push or mov stos pop mov cli jno flds sub arpl xchg pop mov hlt cld xchg sub popa out mov mov lcall (bad) mov in xor inc pop xlat jb out push lods xor idiv das and rclb les icebp pushf push test mov aaa lea xchg xchg icebp jl icebp mov or push testl into mov adcb mov sub or fstpt lret rcl lock repnz ljmp sbb aas sub cli jp xor fadds lods lahf lahf test ret int out add les adc cli jmp pop (bad) scas scas sub jecxz leave jbe jbe out (bad) jo xor and movhps push pop cs inc dec nop push push mov mul fbld aaa mov out imul mov ljmp sbb gs sub push sub cmpsl mov stos and push mov stos jecxz lods daa in mov jnp cmp daa and daa stc sbb mov lcall in subl negl mov test pop xor decl inc (bad) mov fcoms enter flds or scas aas repnz das das idivb out idivl jmp shll jg insb pop push fiaddl mov cmc jne,pt adc repnz mov or adc (bad) incl scas pop cmp fisttpl (bad) (bad) repz push add sub push gs dec jns rol pop pop adc sbb push jle fucom mov je loop popf out dec in fidivl xchg js and push outsl int3 jno inc mov inc dec and fidivr cwtl lcall sub dec push rclb or jmp adc xchg add inc push lods pop jne pop mov adc add lods (bad) int3 cs hlt inc inc les and add cmp inc dec dec wbinvd (bad) enter mov fsubs mov sbb sub sub (bad) shll pushf sbb mov orl and cmp jle pop sbb push mov stc out adc xchg movsb fist insl loopne xor notb lds nop in jnp test lret xchg data16 inc in sbb sbb pop ja jo mov add jnp inc ret es jae push xor xchg sbb je imul aad lahf sub mov add sbb pop fwait pop mov push jmp mov or fist push mov in les mov rol pop fistp (bad) fldenv sbbl push cmp and test cmp xchg repz call inc pop stos and and aam cmp xchg ds sbb mov or sbb pop dec repnz sbb sti xor jle add es rorl cmp jecxz lahf out ja or inc xor add pop pop movsb lret dec inc cmpb jge jg outsb ss and je xor mov and add loope sbb movsl sub xchg mov call add sarb stc clc ret push fimul rcl mov mov daa pop mov in aam (bad) popa xor loope fdivrp push shrl push push leave push in stos xchg out mov test scas push xchg jbe jle mov pop ret sbb mov fnstsw je mov arpl push (bad) mov call inc jle sbb jae fstl xchg (bad) outsb insl sbb and and fisub (bad) jge cmpsl iret xor and xor (bad) cmpsb xchg mov inc jg push cli pop ja es push push xor add jo cmp add cmpsl faddl leave data16 inc mov inc ret arpl xchg or add sbb cmpsb cmpsb je arpl outsb ficoml (bad) mov mov cli push pop (bad) fdivl or xchg or cmp inc int dec (bad) inc inc mov (bad) mov or movsb (bad) jne jnp cmpsb int3 cs sbb mov push in jg dec out leave movsb out mov xor xchg xor lcall pop fistp mov or imul cmpsl pop cs or mov mov push push inc imul in sti aas aas cs sbb fwait fwait fwait fwait sbb test adc push or pop pop (bad) adc div dec dec (bad) ljmp pop pop push push insl insl pop pop xchg xchg jmp xor add mov imul js aam test fadds mov fadds data16 xchg dec scas dec add push pop pop pop xor fsubr dec push cmp mov cmp add mov adc int3 mov insb out icebp daa jbe in pop (bad) fistpl sub or insb pop movsl mov test pop aas rep repz cld mov outsb jo cmc jo lock sub xlat mov icebp jp xchg cmpsl loope addl pop and and cmp or cmp inc (bad) dec or jno fs scas inc add popf sarb sti xor pop jge jmp sub fdivs pop push std mov imul cmp stos fistp xor repz add mov push mov jo add mov sarl push pusha or mov scas push fwait cmc mov ret xchg popa out sbbb mov or aad clc fsubr call mov jae arpl mov xlat aad insb into sarb lret xor ljmp (bad) shr sub adc mov pushf and call vmovddup test lds cli jno test rcrl jl xchg push sbb add sbb xchg jns inc xor mov pusha mov or pop mov fildll rcl mov je xchg cmpsb dec sub mov push (bad) xor imul add outsb imul inc repz mov lods iret push and (bad) cmc std pop aaa sub push adc pop jne pop xchg add add inc daa es stos imul jmp dec mov in sbb jle mov (bad) dec fdivrs (bad) test fnop outsl xchg xchg stos stos arpl cltd xor into inc inc sbb test jne push dec (bad) add add sub mov jne out test cmp addl and int3 aam in dec push xchg negl mov dec enter pcmpgtb (bad) mov aam lods addl lods cs push pusha mov int3 ja pop mov mov push ret and cltd dec dec ret add sbb xchg cmc mov pop rcll mov and xchg pop push in fdivs mov aaa inc jo imul adc int3 lret test cwtl sbb adc sbb sbb popf out push mov mov sub jb mov test idiv sub sub fbstp push lcall push sub ljmp adc push and ret divps cmp jo cwtl cmpsb cmp push dec and out outsb stos dec add and jne push push lock or fadds shll clc jle adc in cmpl insb idivl cmp mov inc push ds ja mov addr16 xchg jbe daa test xchg popf pop (bad) sarb jns sti fs sub sub popa lahf pop outsb loope sub xor movsl push mov repz sbb mov int test mov cmp out jecxz add add xor movsl inc sbb rorl xchg fidivr push movsl movsl cmp loope pushf pushf pop inc xor imul insl insb cli daa jp andl mov pop adc mov stos and int3 jl add mov dec pop push pushf in pop sub dec out mov call jmp lea stos or push xchg iret add clc jge xchg mov and xor jo inc and leave dec dec ret inc data16 mov sub add je cmp hlt bound pop ja bnd jecxz cmp jmp sub dec popf pop outsb pop and cmp inc andl es ret ucomiss pop jb sub std aaa fs cli xchg or movsb notb fadds scas bound ret ja cmpl jae lds test push cmpsl stos xor lds insl aad mov (bad) out outsb insb push cli push mov (bad) inc and mov xchg lahf aam push ds mov xor sbb or dec add push mov ss cmc mov loopne mov cmp xchg sbb movsb cmc and mov cli (bad) stos and hlt pop out xor loope push cwtl cmp rcrl outsl sti inc psadbw or or adc je int cmp or lods pop sarb adc inc (bad) loopne sbb icebp mov push aas sahf add cmp dec les ja add xchg or mov test or out cld pop imul inc mov jl pushf loope fcompl adc sub es es cmp jae sbb sbb jne add lret push in rclb add jl es das hlt sub add sub sub rolb aad cwtl xor std std or inc xchg aas das out sub cld inc cmp (bad) lds jle push push pop sbb jbe insl js sub push mov loopne sbb test mov adc into sti mov mov sbb out (bad) xchg mov sbb pop out adc cmp mov mov (bad) jmp (bad) cmc adc (bad) mov push addl push pusha pusha pop out dec or pushf and lret add call push outsb movsl mov and inc ret outsb iret mov (bad) inc inc inc out popf dec lret orl add jae test cmc pop sub cmp xchg fistl ljmp add pop and pop scas xchg fildll sub sbb je fwait push dec scas xchg cmp prefetch arpl cwtl aaa mov cmpsb sbb dec out enter in loop stc shlb (bad) ss stc or inc adc jae push aam lock in aam cmp and imul add jne pop adc mov cmp dec dec add xchg push mov sti lods jl and jecxz jl pushf xchg lock jmp in cmc cmp sti es xchg pop pop repnz (bad) push (bad) aaa aaa inc inc addr16 daa inc mov repnz rolb outsb cli cwtl jno mov ds shr or int3 sbb loope sti dec lds mov jl adc push jecxz push daa stos fistl leave fsubl mov out cmp jb aad or sbb loopne popa andl (bad) mov jecxz xor negb mov call lret mov xchg push rcrl cmpsl jae mov push push test pop fcoml nop sbb mov aam aas (bad) mov lods inc call cmp imull fs cs outsl mov jo aaa movsl (bad) std int and jno xlat loope ret xchg inc cltd xor add xchg pop cwtl mov les fldl2t out dec cmc xor xchg nop rclb lds adc fnsave ja arpl test cltd cwtl and dec aas cmovae roll ja cld jae push sahf inc pop aaa jno pop jne in adc mov sub popf iret cmpl ljmp push pop mov sub mov mov enter mov lcall and ret mov sbb les fbstp lahf push inc ret les mov orb data16 sub xchg mov lret out nop dec pop fxch cmp (bad) push jo fisub je iret adc push fisubr lods inc aam ret xchg pop sbb (bad) repz or cmp mov xor jne push push add out cltd into pusha fild add pop jmp out push mov mov stos in jb sbb push dec aam iret xchg repnz or sbb adc jno negb in or and in sub fucomp mov pop aad pushf push mov push adc inc mov cli push aas gs clc cmpsb into insb and repnz nop arpl cmp fcomps inc jnp jns or push xor daa add (bad) xor cmpsl (bad) push push xor test mov jp xchg dec in mov push (bad) jl sbb xchg fcmovne int push cmp leave leave dec mov add xor ror add mov lods js pusha mov push pop scas pop mov es sbb cltd adc cmp jp scas pop xor data16 sbb push adc fnstcw jmp jle xor xchg xchg pop repnz shlb pop imul xorl mov fdivrl xor pop mov outsb pop or pop xchg bound rclb arpl xchg mov int3 hlt icebp or mov inc inc lcall mov add jne mov dec call js bound inc mov or iret xlat pushf imul rorl loop (bad) jb shll mov cmp and (bad) fwait pop xchg xchg cmp inc and mov sbb jecxz data16 sbb lods test dec (bad) shll xor fwait adc cmp mov inc incl sub imul pop adc cmpsl adc add cmp sbb nop nop rclb into fisubl mov adc arpl test repnz addr16 lock dec out in scas jmp repz sbb mov inc inc rclb and cli cli (bad) and (bad) fstps les jl (bad) mov xlat sbb mov fldcw cmp add (bad) cmpsl leave cmp out mov push lds mov insl cmp push push sbb and rclb pop lahf hlt aad (bad) cmp insl lods xor sbb xchg push nop fwait loopne or outsl add stc jns int3 ss xor jno pop in cmp add adc or (bad) jge pop jmp repnz push cmpsl xchg (bad) jl (bad) je js inc loope je mov add xor es pop pop pop std adc mov add movsb push jnp xchg (bad) mov fcmovbe (bad) scas xor ds movsl fwait lcall jecxz rcrl pop fstpl psubd sbb jmp pop insb (bad) pop pop out push mov mov stos iret ja and addr16 sbb xchg popf dec mov jns mov push xlat adc sbb dec lods outsb xlat mov add movsl rol push scas ss lods lods or push jg insl lods xor sbb jno loope mov jbe inc pushf inc sbb mov mov mov fimul pop mov jo mov jmp lea xlat pop xor adc jmp (bad) pushw scas aad in test cmp sbb es lock cmp inc dec scas jnp push push pop pop in and int3 mov inc mov or dec (bad) lods scas dec (bad) mov pop in aad ljmp xlat xchg divb daa xor pop (bad) jmp xor outsb jle xchg (bad) clc sbb scas das xor mov pushf (bad) xor pop mov in mov xchg cli test es test sbb pushf xor mov mov in icebp repnz mov mov xor xchg mov inc (bad) aaa mov icebp test sbb aad imul es inc (bad) push aas loope mov sbb sbb or rep xlat rorb or jno neg cwtl mov xchg stc pop add in aad xor and and int cmp cld insl insl sbb aas or insb mov push mov das jne or mov fstp int3 add lock lea sbb cwtl pop daa or mov jo mov mov dec repnz or int3 sbb xor adc sbb or outsb rcl popa mov roll add add outsb es pushf or jnp xchg dec rcl jo inc adc and push das fwait push cmp stc in push scas scas (bad) fistp sbb sub ss scas stos xchg cld mov loop out mov das imull inc inc mov imul mov cmp nop mov ret xchg or push bound xchg jae jns cmp subl cmp add imul xchg popa bound (bad) jp xchg aaa adc lock mov jne cmpsb pop stos rorb inc push stos xor inc push dec cwtl repz inc ljmp push inc adc xchg dec jno add repnz and ljmp ret jbe dec sub insb insb daa out ds clc rcll cmp mov ds pop xchg fsubl out enter mov repz cmp divl xchg inc lock lret and div xchg add (bad) fwait pop dec outsl push jl leave mov les cmpl rcr ret mov jo mov stc push fwait cs popa lods adc pop popa push fs push pop (bad) push xor es lods negb and xchg cmpsb leave insl push xor push cltd insl dec push push adc pop (bad) int3 xchg repz imul jb or push aad lretw mov test inc lret push add sbb inc inc ss movsl cmp inc cwtl insb (bad) mov movsl mov jle rcl pop sahf es sub sbb imul sbb mov dec clts lret dec dec into into cli jnp aaa dec sahf insl in and jbe mov xchg in mov pop add inc and mov adc movsb push sbb rorl loopne in inc (bad) mov aad jae (bad) sub cmp fstpt test or xor dec adc cmpsl sub rolb (bad) in fwait adc fsubrs jbe sub sbb pop sbb jle xor les xchg xchg push rcrb jle inc xchg rorl and in add loopne cmp mov sbb int fldcw mov mov and addr16 add aam (bad) sti imul out cwtl sub jbe out xchg and js xchg jne mov fcompl pushf lahf xchg xchg mov out and xor or jge cmpsl jl (bad) mov pop fdivrp nop xor (bad) out or cmp pop cwtl cwtl test add or ljmp lds mov push js mov cmp in inc mov test jl mov inc cwtl orl cltd in jl mov inc inc push in in adc lods mov xchg mov mulb push mov pusha jl jne ljmp xchg mov mov mov scas push mov (bad) pop pop pop mov add mov inc orb push (bad) jmp leave in fldt les fnstcw stos mov dec or ds fisttp incl jp fndisi(8087 addl or ret sahf adc adc out lods pushw push adc daa out aaa out xor jle movsb inc rcr mov cmp cmc gs sarl sbb and mov or ret dec icebp ja jl ljmp divl push xchg js dec leave dec dec push in jle pushf cltd divl push push in add fstpl xchg out or popf int3 cmp pushl jae or mov sbb imul ror clc inc cmp jne lahf lahf out test xchg pop addr16 rcll lods jmp fildl add add mov inc jns,pt cmp adc jp in push jb int out lds popf loope xor sub and fsubs jno add dec inc dec fdivrl sub lcall jge ret mov add push iret dec cmp cmovl mov mov cmp xor daa daa fmuls or pop pop adc addr16 stc popf ficompl pop daa dec jmp psubsw jg adc lods mov add add sbb sbb movsl sbb jbe sbb inc mov xchg sbb into lock lea inc data16 xor orl mov ret sub add push movsl adc into ficompl jp in dec dec call jg mov (bad) dec cmpsb imul dec sti push rcrb insb dec daa data16 or add arpl jb fiaddl pop rclb int3 cli sbb jb inc jne mov xchg testb imul pop adc pop mov (bad) add jl fs push mov mov inc xor dec repnz loop push push imul push push and lds adc fstpt in lds sub sub mov in out mov rorl subl insl add xchg push mov add mov mov fild pop mov sub mov call cmp imul push sub push pop in idivb ror enter iret adc stc shlb pop stc fstp cmp sbb sbb rorl xor xchg in mov enter xor scas test sub scas sahf popf ret mov sbb xchg push decb pop (bad) xlat lods sub xchg pop pushf cld xor sub movsb sub and adc ljmp int mov in push scas mov ret mov les in cmpsl fildll test ficompl push sahf jp jmp popf cmpl or daa add jnp cltd ss or pusha cltd popa js add dec and jcxz (bad) mov outsb cmp bound lahf jnp jns inc stc jl jns cli mov push mov fisubrl jle cmp andl inc pop cmp push aas call ja adc pop movsb in add mov jno insb mov adc inc outsb mov dec xor cmp test repnz add sub pushf mov adc (bad) push out stc outsl sub and push mov inc mov pusha fiadd cltd lcall push push (bad) dec lret add mov push jecxz mov xor dec dec or push adc daa xor pop loopne dec dec and dec ret or push push push (bad) mov adc dec fimul div dec dec mov stos pusha mov add fs sahf or mov xchg (bad) test adc xchg adc ret outsl dec sub xchg and pop mov sub or sbb je dec or pusha imul cmp dec leave and js lea lods and insl iret mov pop aaa aas jp mov sbb pop les xchg pop pop out cli add cmp hlt out and pop or dec mov xlat popa jmp adc fdivl sahf mov xchg aad ljmp sti mov in mov pusha enter stos ret (bad) mov cltd fcmovu push rcl insl clc int mov (bad) mov jp cmp dec cmp pusha (bad) out int3 inc mov je and pushf jg aas cmp adc cld adc fcomi mov inc mov fisubl mov mov ret mov add xor (bad) das dec daa stos xor mov push pop es xchg notl aas jnp (bad) clc push std xchg jge add (bad) rolb popf dec inc sbbl lds sahf mov out cmp mov int (bad) xor pop cwtl pop push lock xor cmp xor mov xchg jnp mov jae adc mov pop out add fimul ja lret add jns aam sub in pop and sbb lds lcall jl push sbb mov cmp in lahf push xchg pop fnstenv xchg pop (bad) aad dec nop test dec sub lds cmpl cltd and jo cli fistp jo pop outsl out sbb popa mov add xchg cmp mov hlt cld repnz pop dec rcll or sub fstpl stc dec fwait xor loop jno (bad) mov lock sub mov mov arpl into ret jmp arpl jge mov xchg mov int daa repnz inc push add mov andl push xchg push jle fistp repz mov mov adc add adc rorl clc insb pop push les sub jae push inc iret into cmp icebp xor shll lods std xor loopne arpl loope add ja pusha int3 lahf leave add sub ljmp pusha xchg aam sub loopne cmp rcl xor dec dec ja inc enter pcmpgtb insb pop sbb dec sub pop jg sub fwait (bad) leave int dec xchg dec jno ret js xchg loopne dec jge sbb cmp pop aas mov sbb insl dec icebp xchg pop lahf push push sub jnp and ftst out pop or dec jge jmp adc sub push xchg sarl add int3 mov frstor enter aas xor pop cwtl aam adc icebp jg dec data16 cmp mov adc divl test jo test add and xlat mov clc in fwait lcall pop int3 pop fsubl add sub iret mov (bad) xor insl outsb push push mov sub rcrl push dec push adc xor test pop push imul icebp cmovge add and mov mov add je jno mov (bad) sarb jns sub sub push in xchg cmpl jb shl stos lods es cmp adc jnp addr16 rolb decl (bad) outsl das sub mov mov repnz add in lock int3 mov fldenv mov lds mov bound xchg sub stos shr lret jg mov je mov arpl sub xor dec or and lds enter ja sbb push (bad) jl push push mov orl sbb stc jp sbb cmp cmp mov inc int3 int inc fistpl push in repnz cwtl cltd (bad) cmp xchg xchg mov into fbld orl (bad) push xor xchg add ret jge testl push scas leave mov bound cli push pop sti outsb enter xor jp xor push inc (bad) (bad) stc adc (bad) rcl and xchg shrb fnstsw test mov mov or push inc adc jecxz rorl cmp rcll inc lcall push xchg mov mov dec push adc push in or mov mov mov sarl dec lock add lods xor cmpsb int3 pop leave pop cmp pop adc mov mov cmp xchg std daa dec xor pop cmp mov mov sbb int3 push push lea cmp sub jge or imul hlt mov movb or jo cmp loop jb lret mov stc hlt test cmpsl lret scas and xor or or dec je dec jns loop loopw jg mov stos test sahf clc scas mov arpl frstor xchg pop fcoms dec lock in test in xchg add es in jae dec adc adc and int3 leave sarl add jne mov sub shlb adc mov test cltd sarb ja sub lds sti std rorl push in xor dec mov inc sbb mov cmpsb and fidivl insl lahf xchg mov xchg cltd rcrl out sub mov and dec daa add add loop mov add pop (bad) mov test mov mov or bound jp xor popf sub orb mov fdivs pop test std loope mov aaa push mov add cmp mov dec inc push xor mov jg xor add in movsl sub mulb (bad) dec inc test jle mov xchg das push (bad) leave jl rcl mov xchg dec adc push and ret aaa pop xlat adc pop daa sahf rcrb loopne pop pop xlat mov pop mov out dec in insl out rorb add pop fdivrp push push jle insl js sub ret mov insb fcoms js xor xor and or or cmp into (bad) aas push mov flds mov fstpl pop jp jns jg jecxz jno pusha cmp outsb push test sbb mov lahf sbb add fcomi repz mov in add das das fisubrl and addb jne mov jge test xor jl push adc sbb push iret pop mov sub shll inc cs stos mov loope inc and outsb pop add pop stc inc lds fistpll ds sub mov sahf mov cmp jnp mov fimul dec push out mov xorb pop xchg loop outsl mov inc into mov adc out ljmp pop shl sub cmc iret loopne sub or cmp adc mov and dec daa dec cmpsl fidivl shrl pusha iretw into notl shlb sbb add movsl xor fucomi or push scas adc rclb lret into mov repz add pop pop sub js or je xor mull (bad) nop jecxz in push aaa cwtl lock lods ja cld inc cmp jno sub (bad) pop xchg xchg (bad) sub mov dec (bad) jle sub adc xchg cld popa (bad) xchg cwtl lcall pop sub xchg scas ljmp ret add xor mov cmc mov mov (bad) and (bad) mov int3 mov xor pushf rclb add xchg fwait and cmp dec hlt jne leave dec dec add data16 or cwtl fwait xchg push in mov mov jns sbb pushf movsb fldcw les imulb jo lahf xchg push xor cltd cs push sti ja sbb test aaa negl xor add scas jb or xor pop bound or jmp (bad) and xor inc xor mov add imul pushf adc sti ljmp add add ficoml pushf sbb std fwait jmp clc clc insb popf and ljmp jne out ljmp push imul xor fwait cwtl mov and dec cmpsb push mov nop and push push (bad) mov shll repnz fcmovu pop fstps lahf test sub mov xlat stc lods fistpl ljmp imulb inc fwait inc cmp mov fimull addr16 sbb js push push in fidivrl mov ror xchg (bad) cmp test cmpsl divb (bad) hlt iret pusha pusha add pop jae push lods addl sub repz sbb pop std js mov adc inc mov and inc leave jb loop pop sbb mov sub inc insl popa rorl (bad) dec shrl pop ds xchg mov lret (bad) mov cmp pop pop mov jnp mov adc jne push adc mov insl in push mov jne pop loope lcall ss cmp iret repnz dec add or into insl nop mov mov cmp fiaddl lret cs cmpsl pop mov hlt xchg sbb int3 or push xchg repnz sbb xchg and push push cmc out sbb cmp xchg mov dec xchg fistpll js adc push or and rorb add inc faddl push aaa adc dec dec jge xor xchg clc or dec outsl jecxz xchg xchg imul mov daa (bad) test mov dec sub pop lahf out push adc mov cs je cld cld clc clc insb lea stc mov mov fcmovnb daa push inc xchg notb cmp scas into (bad) jo lcall jecxz xchg adc arpl rcll insl insl les mov mov pop pop hlt mov mov test pop and shl dec push sbb jge xchg out inc push imull and icebp rorl mov fs xor jo mov pushfw sub pushf mov push inc scas adcb addl mov das sub adc push (bad) ss cmpsl jne and push dec sub cmp adc inc inc (bad) js notb xchg jne push pop and adc cmp jbe sti out jno jle cmp loop lret xchg pop out xchg mov frstor sti xchg std sub jmp mov mov cmc mov stos les or sub jo lcall pop pop aam into and cmpsb (bad) sub push ljmp out xchg loop cmp ds dec mov pop cmp sub nop pop rol int pop push and jae jbe adc fdivrs inc insl imul inc inc decl outsl out or stos pop stos add adc scas or jns pop sti adc mov cld aas inc idivl jmp jl mov mov scas jnp xchg jns mov es xchg adc add das loopne push cmpsb mov (bad) outsb jo stc add iret xor (bad) lods js mov scas data16 inc sbb test mov fmuls sub fstpt icebp xchg fwait xchg xchg int3 adc mov adc adc lds out mov loop imulb sub ljmp faddp xchg cmp popf xor (bad) sub repnz jne aam push add push push insb int jae imul loop ret mov jbe jge lds push ret or (bad) aaa jnp repnz lea push sbb xchg xchg mov or push xor push pusha push mov call mov mov out iret fstp push aas xchg and mov sti jbe sti inc sbbl adc cmc cli clc or shr lods in test in add into jae test lea jnp cmpsb jb,pn xor pop aaa and (bad) xor sbb inc (bad) push add and lock lods dec sahf cmc loop (bad) jbe and leave jae fadd (bad) adc out mov or das ret aam add popa mov xchg inc outsl xchg sub or mov iret and push es push cmpsb mov mov cld ja fxtract insl cld sti fidivr stos in mov or or fs mov jb repnz adc lds inc sub divl add sub cli les fist inc jle mov pushf cltd lcall xchg lcall pop mov cwtl jge ja sti hlt jno pusha insl or dec pop push popa sbb orl int sbb xor js sbb adc inc or and cmpsb sbb dec popa xchg adc aaa dec movsl fsubrp xchg ss test test (bad) adcl inc sbb mov sbb mov (bad) aad js lcall leave cmp xbegin inc xchg mov inc gs or inc or addr16 or stc gs push jle fdivl push or test mov mov sbb loop out xchg jp arpl lret sub cmpl je sbb movsl bound pushf fstl mov aad dec mov cwtl sar mov jle jno test sbb dec sub cmp in cwtl and xchg jns aad push lods lods lahf adc pop lock fnstenv cmp jb or cwtl imul ret mov cmpsl data16 es mov cld xor cltd xchg fsts inc insl inc pushw sbb roll pushf inc inc xor jns scas pop sbb pop popa test mov cmpsb fwait mov inc into push pop dec iret dec push dec add aam inc sub jb jge or mov repnz rcl pusha inc mov xchg dec cs dec cwtl cwtl loopne ret inc xchg movsb std push mov fildl sub cmp jg js sti and inc stc stc loope int3 mov andl es xor sbb inc (bad) popf out xchg cmc xor jnp xchg or jl mov movsl lock (bad) std stc cwtl fistp in ret add testl iret (bad) mov jbe dec dec sahf fsts xchg mov mov mov call fnstsw movsb std (bad) in enter xor fwait inc cwtl divb (bad) dec es jnp cld sti cld mov and stc mov fwait adcl gs push or add jns sub cs in in in jbe pushf pushf (bad) vcvtps2dq shrb sub sub es pop pop dec dec mov movsb mov stos loopne cmp cmp scas scas test add rorl cmpsb (bad) pop insl jl xor loopne pusha stos and xor cltd dec daa mov sbb pushf dec (bad) aas cmp sbb dec push push aas fdivrs scas pushf repnz jle and push adc push (bad) mov fadd mov cmp jle sbb and lahf lahf lfs (bad) mov pushf push repnz adc (bad) jg,pt add das iret pop inc inc adc and and inc inc into cmc (bad) or jp add cmp or push fistp popa mov lds lock pop (bad) jmp dec out out xchg pop daa aad pop xchg sbb out out and ljmp adc bound dec fcmovnbe aad sub loope sub and dec sub cmp insb mov lods out mov sahf aas test sub push push jl sub cmc and push in and fs cli (bad) xor adc dec pop ret sar addr16 rorb in lret adc mov push adc aam xor mov sub (bad) jo push (bad) arpl sub dec fisubrl push jmp cmp lock std or cmp xchg repnz shrb push das in push movsl loop ja cli movsb aaa cmc mov cmp fsubs pop push mov cmp int rcrl pusha push std push adc xchg sub or lods in mov arpl add into inc fimull jmp fidiv (bad) mov cmc dec stos orb mov scas stos cmp iret repnz lret adc pop mov fidivl lret xchg sub (bad) cmp mov or add movsl push xor aad out stos cmpsl cmpsl jnp or push push data16 int3 out stc mov mov ret (bad) std jbe pop in jo mov sub dec cltd cltd cltd adc adc nop hlt adc lret test push adc rcr or mov aam sbb movsb andb add mov adc push xorl or mov xchg jg mov addr16 and int sub mov xchg lret add fcmovu outsl outsb cltd pushf jns gs cmp pop cli ljmp lret cmp pop xchg arpl iret jae dec pop xchg dec test fbstp out ljmp dec shll out cmpsb arpl dec cmp mov repz test fbld bound sarb mov xchg popa dec and xor cli js clc push cmp ss jbe mov push push imul dec xorl fnstenv push xchg incb bound sbb notl sti mov sti adc jne dec dec inc xor lods es add repz jnp aaa jg pop adc mov pop mov sbb mov mov repz test mov cmp mov or setno inc daa lea (bad) imul jge and jb xor sub out mov cld push mov not lcall leave fistpl inc cmpsb cmp sbb mov xchg mov dec inc out push mov rol movsl cmp in pop fwait daa sub cmp fwait mov mov mov imul adc aaa int dec dec add push bound jo dec ret fiadd sarl je test rcl and adc jns cld lock xor stc outsb popf dec data16 and dec cli xor (bad) cltd push enter inc js or imul iret jo inc mov (bad) add adc and stos mov fmull mov das ret xchg mov scas push lods test xchg dec fcmovnu ljmp cwtl ret jecxz push mov les stos idivl pushf cld out lret pushf ret pop sahf inc jle leave out test cld xchg std jle fisttpl xchg loop xor sbb push enter (bad) loope dec mov ret mov ja lahf es xor pop in adc dec cli sub adc or push push push ret mov sar pop jno add orb push mov sub xor add out sti sti outsl pop cmpsl cmp xor lahf lock pop sbbl and test sub repnz push push cmp fcompl into into test mov mov jnp inc fnstsw addl and pop or xor pop push mov jne jg add lret xchg push in sbb (bad) popa clc dec adc movb outsb mov jg mov mov popw lods enter cmp pop jg push mov mov xchg or lcall in mov mov fild sub sbb out mov mov fs (bad) xor adc test xchg adcl in popa lods jbe xchg push lea cwtl aam cltd adc mov jg jl divb (bad) sti dec sbb lods push fcmovbe cmp and adc (bad) ds mov jo (bad) adc scas mov cmpsb push mov xchg sub jg sbb pop mov es pop inc inc ss mov mov insb cmc push jecxz add cmp cwtl pop test lds lcall jnp lods adc mov pop loop ljmp jmp xor imul shr sub jl jo inc push mov outsl inc inc out test inc mov pop lds or sbbl js xchg or ret cli xor out mov mov cmpsb jl sub pusha lahf dec mov fistpll mov mov sahf flds adc out cmpsb adc cmp test pop jae jp jno pop imul sub and lcall lods int3 leave test sub fwait and mov cmc mov rcrb bound xchg stos jecxz push add cmpsb stos (bad) jmp xor xchg lods popf and setno sbb dec lea imul scas and and add ret cmp cmp xor add std dec fisubr xchg hlt sub ror int3 inc adc pop cs inc cwtl cwtl pop aaa and or (bad) out outsl xor or adc mov int (bad) or push push sbb mov imul cmp movsl pop testl jecxz pop or inc lret mov fidivr leave outsl in jnp mov cs cltd xchg dec insl adc ss sbb mov ficom rcll push adc sahf xchg pop loop jg (bad) (bad) call push or cld mov jae icebp inc mov pop je or dec jae adc sub jp push mov aaa jno push xor xchg xchg cmp sub sub negl sbb xchg sub ljmp pushf cld jnp lahf out aam lock inc sbb shrb adc push mov sub and in push push and fist fbld fimull hlt or sbb movsl jno adcb fwait ret dec (bad) jp popf inc pop stc inc adc ret jle mov lods stos popa scas lahf adc scas pop (bad) (bad) mov sbb jg scas jp pop repz je and push or mov lahf adc lock and call fistl jo mov xor mov or inc mov (bad) lock inc loop out sub test jb pop pop push add sti xchg (bad) vcmpsd pushl and test stc cld gs sub inc sbb mov in ret dec dec fcompl or gs sub dec xor inc xchg out fistpll push stos sub ljmp movsb aad (bad) (bad) jae les mov (bad) loop xor (bad) mov adc cmp scas dec dec add cli push cmp mov data16 in adc fucomi cmpsb or adc aas (bad) or adc lods sub adc loope lds jno aas jo push es lock xlat jecxz adc jecxz lds movsb cmp aam mov pop and orb add add ljmp in and ljmp sbb hlt in pop lea pushf out (bad) mov sub stos stos shr push and fcmovu mov es cmp leave stos rorl jne pop das ret mov ret xor popa int3 int3 inc (bad) ficompl xchg pop adc (bad) clc ret push sub jg pop fmulp mov pop cmpl into aaa sti testl sbb out (bad) mov mov fdivr or xchg xchg or rol int ret ljmp fwait repz mov adc dec dec xchg pop in stc mov and xchg mov shr in jle imul pop insl dec ja cmp adc shr into mov je mov jge add and inc inc mov fwait xchg xchg pop psrld cmp sub js stos add mov unpckhps js pop sub pop jp insl je out and mov jae sub insl loop mov gs test mov xchg cmp sub add sbb in out test outsb mov push (bad) out pop sbb cmp fwait xchg insl push fwait sbb popl dec sub and lock fild gs mov add adc (bad) fiaddl stos cltd jmp push pop mov xchg sub inc loop cmc les sub xor imul pushf int mull lret cvtpi2ps repz adc lods mov out push dec add data16 sub mov leave clts inc jns stos add cmp int and testl fldcw shl sarl fstpl jo lcall sbb mov sub leave jl rcl mov cwtl lock push (bad) or das addr16 enter mov xor rolb pusha lods cmp dec aaa adc fistpl js mov sub mov scas inc sbb daa mov in mov jl xor inc mov cld cld cli fild outsb out xor fcomps in int3 idivb int3 add cmpb pop xchg push pop jge jns jle jl in sti mov sti push lahf addr16 mov dec cmc push cli popa fnstcw and gs lcall scas push xchg add lods sahf movsl lds add in lds and repnz cmp clc mov inc jmp les je in jb push push and fisttpl nop hlt pop aaa bound cmp repz pop clc xchg (bad) loop fldenv mov movsb into push lret ss jbe int3 imul lock test test sbb pop inc arpl cwtl imul sbb xor int sub mov sbb leave adc test loope scas xor fmulp push push and stos iret out or jl xchg add (bad) scas bnd fstpl jmp cmpb jns,pn fdivs cltd cltd cltd lret sbb push adc int3 js push mov sahf pop or jo test add xchg adc out push lock add arpl jo inc sub and insb pusha iret or inc inc sub jne insl test mov int3 add jecxz std stos mov and fwait sbb pop mov lret das add mov sub arpl call ret aam jb in (bad) jo cmp (bad) dec test dec and xchg ds jg adc mov js lea ret clc ss shlb jle test fs jg jp bound out mov inc mov mov lds mov push aam mov or cmpsl flds movsl sub hlt mov nop adc and jle and adc sbb in add or adc std aaa push movsb cmp inc rclb mov jbe or stos (bad) mov fwait ss cltd xor (bad) repnz xor xchg inc inc loope pop bound inc (bad) adc out cwtl mov dec sub cmp ljmp sub arpl cmp or pushf sub pop in jae jae xor inc xchg loopne bound add idivb cmp in mov push push cmc jl dec sub daa push ficoml sbb push insb out jno cli js cltd push aas mov xchg jmp ret shrb fsubp jno cmpsb fcoml aad pop ss lcall arpl jl jp and subl shrb jp adc repz xchg fstpl mov stc mov int (bad) pop sub inc sub pop decl decl lret popa in mov aad push mov inc bound insl push adc dec pop insb inc and push gs (bad) xor mov dec inc aaa and mov cmp (bad) jl mov into (bad) jne movsb (bad) sub inc sub inc sub mov loopne lea mov xchg daa scas test cs repz mov (bad) xchg adc mov incb and jl test mov fldl adc leave sub mov aam movsl in cmp xchg dec dec and adc movsl xchg or fistpll fmull cmpsl pop add loopne or lds xchg nop jecxz xchg xchg jmp mov pushf xchg lea cmc iret jp dec inc adc pop fldl xor adc sub xor jae int3 cwtl rclb and cli jne inc or sbb or iret jecxz xor mov cmpsl mov out out not lcall and pop or add ss mov adc fs out insl repnz loopne and push push add ret and lret ljmp (bad) out popa sub adc mov cli adc je data16 or dec cmpl jg push and cmp and mov mov ljmp pop data16 repz fadds sub lahf test sar repz std mov jnp mov jne scas out inc inc (bad) (bad) push imul mov aad movsb mov fwait or stc cmpsb rcll add sbb test cmp jne fnstcw ds jae sbb inc daa mov inc pop cmp ljmp push mov imul and dec add pop and xor movsl cmp pop aad mov out outsl ret adc scas scas push mov hlt js jge mov in cmp mov aam insb fs cmp xor lcall inc addr16 mov inc out inc mov clc insl pop fistpl mov jns outsl negl imul mov negb loope xor sub jbe sbb scas mov add out aaa mov mov xor fiaddl idivb pop adc subl jecxz hlt aam es push jmp aad cmpsb int or cmpsb sarl sbb fildll jne mov cli sahf test fs outsb (bad) pop mov and xchg daa (bad) push pop push jno jb mov fldcw ffree call add push push mov stc cmp lock pusha rcr add dec or cwtl pop clc or cmp movsb rclb rcl xor dec dec jno inc inc (bad) or add sbb and mov jnp hlt inc inc test out and mov stc cld bound movsl and sbb pop or cli fiadd cmc repz test pop push enter js inc scas jo add nop add out into mov jne xorl repz movsb sbb mov popf pop js fdivrl nop inc cmovne icebp imul es or adc popf cmp sti adc cmp or mov or (bad) adc lahf imul mov ret aam enter fwait cwtl cmpsb pusha fsubrl movsl push lea sub daa repz jo mov sub into xor push xchg ja sbb loop cld ljmp add mov add cmc mov mov sahf std (bad) rcrl scas lcall clc mov cmp idiv add adc add mov xor push and mov aad jno fdivr mov dec jp inc mov std std pop mov push sbb pushl insb lahf sbb add cmp arpl mov mov std insb js in cld or movsl mov fcompl pop bound mov lret sbb dec lock clc xchg mov out gs add mov cmp inc out pop (bad) andl and push mov mov lea daa jg cs test push pop and push xor xlat mov mov icebp sbb data16 cmp push push add jle mov insl sbb pop push dec movb scas popa pushf cmp mov cmpl pop ss push xor cmp sub popf das data16 fcmovb dec std sarb and add lods (bad) scas pusha sbb sbb call int3 ret mov add je int dec std out js sbb addl in inc test nop std int test mov jae sbb rorl dec fucom mov out (bad) lcall leave ficom stc xchg stc daa stos add popf sbb (bad) mov inc int3 dec test jae dec xchg inc dec decb jbe add (bad) cs divb cld mov iret or dec pop pop adc in push test sbb mov xchg adc push pop mov mov repz mov fwait mov sbb aad imul lret popf mov jecxz fwait cwtl fs out cmpsl jl mov mov adc xchg out adc xchg clc daa (bad) outsl mov rcrl push pop jmp mov and daa outsl rorb (bad) fnstcw push pop out push imul dec data16 (bad) xchg xchg inc es xor jns inc loope add xor pop xor pop lods jle inc sahf push aas fdivr stos repz add fwait repz arpl das xor mov mov sahf ljmp fs sbbb arpl rol xchg fwait shlb xlat mov out repz repz push mov mov cmc insl (bad) ficom ret test add (bad) push sub push nop icebp icebp sbb (bad) and scas dec fs nop popa fs gs mov push mov pop aaa jmp int3 dec dec (bad) cs cmp mov dec cmp pop int mov hlt mov div jge stc sub (bad) das cs dec test and mov sbb push sahf lock and adc dec or loope mov jns insb adc pop das int3 stc jge sbb (bad) aaa push lods xchg data16 inc inc jp mov cmpsb test rcll pop mov (bad) pop je or das int inc cld lds xchg push in mov mov add test sbb call aam les bound mov mov and in std gs stos lods out fs and insl (bad) fcompp pop std jbe (bad) shll mov nop pop sbb test xor test test into int3 dec or push mov mov stc mov and mov (bad) mov rcr pop sub jnp jbe cmpsb lock mov inc cld loopne (bad) imul cli add fdivs add mov add mov xchg stc add cmpsb xor pop int rolb sub mov sbb loopne inc loop xchg inc data16 neg mov push movsl movsl in cwtl leave lret pop xor in xchg xchg icebp sub xchg outsb insb push sti mov mov ja and xor in leave ret gs jne pop in add pop pop add ljmp (bad) ficoml cmp int fs insl out outsb or cmp imul popw cmpsl xchg mov into jp inc popf loope in push xor mov sbb out idivb call xchg in mov mov pop or pusha add mov and stos push jno mov out xchg mov adc mov sti pop cmc mov inc cld insl insl sbb mov cltd lea scas test adc xchg add pop cmc xor mov xchg iret pop aad fiaddl sbb cmp add flds lds fildl aas add (bad) xchg push add (bad) or mov push lret movl std cmp lcall pop leave jno jg xchg or add and add mov cmc push scas data16 sbb sbb (bad) ds jp icebp loopne (bad) and mov cmpsb jl idivl inc adc ja int adc cld stos fistp jb xchg (bad) add fistl incb jne lret cli mov push test cmp pop in bound pop and jmp pop sub push out lods xchg xchg (bad) cmova add (bad) (bad) jle (bad) push mov test mov or roll decb popa fnop add out in movsl cmp inc cmp inc lcall jle pop pop clc push jnp pop push adc stos fld mov adc gs pushf fwait cmp adc jecxz aam push in jb jnp out sahf push dec (bad) push lods and push push sbb push push std inc cmp lods movsl sbb clc mov popa sbb adcl add ror ss pop pop pandn and pop sbb arpl add cmp jnp cmpsb or sub sub jl negb add ljmp fcmovu rorl popa mov lods iret push and shl std pop sbb jg call jge fidivrl sub je fnstsw sbb stos cli rorb or push jbe dec xor repz sahf jnp push mov dec fisttp cmp jmp xchg (bad) imul push adc jo sbb fisub insb fisub inc xor testb mov aad or loopnew cmc cmp pop mov clc xchg sbb cmpl es pop out lock sbb inc cmp es or mul lock adc and mov lods add add mov dec jno pusha gs mov inc sbb inc orl dec cmpsl movsl and daa and add add add cmp adc stos mov sbb cmpsb mov subl in in (bad) je mov js,pt jns add adc pop jne adc mov add lcall sbb inc add push rcrb cmp enter sarl addr16 sub mov mov aas dec sub sbb push ds mov int cmp jl in sbb jne subl pop adc push xor mov nop xchg test je dec lods call repnz dec dec jns fmul pusha bound adcb adc and testl jmp out mov movb jle jno inc (bad) lods pusha mov xor out out add cmpsl mov stc push inc cmp repnz and jp sbb iret mov fnop mov cmpsl int xchg or cli cmpsb movsl test dec cmp js cmp jmp insb push daa jnp (bad) aad inc sub jo (bad) mov sub outsl mov mov dec and ss and inc stos add mov sbb stos ret rcll scas mov cmp cmc jp mov ljmp jl xchg cmp insb push fs ja xor add movsb adc cli stos (bad) (bad) mov aas push xchg hlt sahf jbe cmp (bad) mov ret bound popf fsubrs imul jmp mov sub add dec and inc push jp jno fisubr cmp test rcrl js cmp adc cld call movsb push pop rorb push pop or inc stos mov (bad) jno into pushf mov mov or popf in (bad) jo bnd lods test xor mov (bad) adc imul adc leave mov xor into into aad xor rorl xchg rorl or movsb (bad) jne sbb xor push or lods ds cwtl loopne mov ret ja xchg xchg daa daa fcomps (bad) xor mov mov push push out push sbb add nop sbb aaa mov xchg insb test cmpsl div loope adc in data16 andb jno inc loopne repnz loop sti jo xlat nop dec and fcompl xchg cltd cltd cltd idivb dec dec xchg cli ficom (bad) pop pop xor jne movsl mov aam push pop jge mov into notb pop lea call add jg cmp out leave iret fistp pop sbb adc jmp loope mov into sbb add inc adc cli jne imul aad push jmp faddl mov sub jo add fsubs inc or aam adc cwtl and add xor shrb push sbb mov lret test inc mov scas lods jle push jge sub sbb in or stc xchg xchg xchg xor xor add movsb adc cli stos fbstp loop dec inc jno jnp sub mov inc xor mov popf shrb mov or sub cltd inc out jmp rol in cmp test lods lods lahf pop add pop cwtl mov into flds das das jg mov sahf (bad) push and pusha and sbb ja inc add std mov and sahf rolb jl shrb pushf jne out popf popf mov pushf sbb arpl adc and sub daa daa jecxz out sub xchg out mov fild inc push ljmp push push data16 sbb dec xor shrb aaa fldt int push push ljmp orl jp stc jp int3 ss xor in cli movsb cmp mov in adc (bad) sahf pusha fldcw adc pop push in pop mov jle xchg pop out jmp mov push loop mov push mov push inc inc push addr16 and test hlt mov inc mov addr16 aaa pop inc inc push pop xchg mov jg pop xchg subb jae ja push push inc dec dec movsl leave (bad) andl inc push sbb pop push push and cmp pop aam (bad) aad daa push imul loop and inc leave test add add xor mov popf lcall negb sahf outsb out movsb jae adc lahf lahf and xchg (bad) fidivrl and dec pop in xlat dec dec sbb neg into into and pop mov add pop mov jo in sbb aad fsubr (bad) jnp pop or sub outsb adc mov outsb xchg repz mov pop or in fist dec in mov shrb mov and lcall jo mov jbe movsb movsb std xchg call (bad) mov add std pop pop lret fdivs push fsts out nop xlat and rcr xchg mov test sbb fdivrl jge inc movsb jb data16 (bad) mov pop aaa (bad) fstpl mov add (bad) std fistpll mov mov mov xlat (bad) (bad) adc and int3 mov mov inc test imul mov aas push in jle or insb out sbb jae int3 inc repnz pop pop add push cmp sarb stos inc sbb (bad) sahf jecxz add repz aad pop and test divb out insb aad daa rcll imul imul mov test lods dec dec jbe push pop inc jo jmp xlat or and hlt shrb dec mov mov pop fsubrl insl psrlw dec or movsl mov dec (bad) arpl mov incl int3 pusha pop pop xor int3 int and mov cmp inc sub ljmp mov mov sub ret fcmovnbe fildll mov (bad) mov aad mov out (bad) push inc stc jns and or add out and insb xchg jno pop xor (bad) int3 int3 push xchg dec inc inc notl insl jbe jmp scas jno xchg rcl jnp jge cmp jp in adcb inc in pop adc jg pop jno push pushf mov lods lods adc lahf repnz std enter (bad) (bad) adc idiv rolb add inc inc pop pop mov jg mov repnz outsb es mov xor or mov movsl movsl add cmp mov (bad) xor pop pop mov xchg xchg mov outsb push push mov mov dec daa jp ret leave pop (bad) gs jne pop popa daa dec mov pop mov fdivrl xor or rorl gs pop sbb leave into je dec movsl aas mov daa fmuls cs mov inc enter push icebp (bad) cmp (bad) mov aad or jecxz sub lahf test mov mov pushf loop aas mov cmpsb add orb add jecxz aam inc add or xchg adc mov test push cmp in cmc les ficoml outsl outsl pop pushf (bad) popf call sbb sbb (bad) mov dec mov sbbl ljmp xchg pop adc or and pop aas cld push fstpt and fidivr fwait cmp mov or imul sub lods ljmp lahf arpl out pop lock xchg sub inc and stc jns dec pop cwtl stc insl inc test rorb jge inc mov scas xor (bad) mov and mov icebp (bad) ds in cmpsb (bad) imul cmp cmc aaa push xor out mov and add je insb or mov mov pop mov mov fcmovbe dec pop cmp (bad) sbb idiv push cmp icebp add push cmp push or (bad) jle pop ss mov dec jnp fidivl push outsl add popf pop push (bad) std push arpl test repnz movsb leave mov mov inc test pop pop inc je movsl mov mov pop je and xchg lret pop push mov test sub pop aaa lcall test clc xchg sub dec and sub dec cli xchg stc insl (bad) jmp mov jge pop test scas (bad) repnz push repnz jae mov cmc or sarb loope,pt test pop jecxz flds mov mov rorb xchg add data16 add lcall mov dec imul (bad) lock cld mov jl jmp mov aad out iret and cmp fdivrp xchg (bad) (bad) lods lods lahf stc or pushf mov sub jbe mov pop in or push sub sahf into lahf xor mov int in mov lcall mov cmp and jb and pop stos out out lods insb pop iret fwait inc stc dec (bad) xor iret leave sub inc and fstpt pop add nop in mov or mov add mov dec sbb fist xor xchg lds inc into lcall jmp xchg fldl aas nop xor pop sub out adc xchg cmp jbe mov out xchg jno sbb popa and aas aas dec pop frstor adc ljmp in xor andl adc push push ret sbb repnz sahf test ficom (bad) out icebp pop ficompl mov (bad) stc pop out cmp andb add inc scas dec test xor pushf jmp sbb sahf jle cmpsb mov jbe scas add add fdivl mov push rclb cltd adc sub inc out js addl jl out arpl pop lea xor add in pop jle pusha popf jno lret add pop test pop aas dec fsts rorl cmpl loope,pt sbb pop mov icebp sbb jle sub test les fwait gs fadd cltd rorb in out stos sahf cltd jnp dec xor imul mov and jne gs test or roll test into sub out cmc int leave inc inc repz push rol test scas and add mov stc jmp add ds jns or push out bnd outsb push xchg sbb sbb insb cmc xchg jecxz mov add dec cmp leave xchg lret pop xor jnp pop and outsl pop sub out pop iret push push arpl rcl pusha cmpsl cli mov cmp arpl pop pop and in push and add add (bad) lock xchg enter imul mov mov adc or push inc repz sub loopne mov xor fs nop mov push inc gs push mov xchg out cmp loop cmp adc cmp and repnz pop mov or push in imul add je movsb lea repz push adc iret pop xchg mov mov test sub lret dec (bad) and adc inc cltd mov mov jl dec popf inc movb mov in rcrl xchg aad mov cltd call mov sti scas pop pushf dec ss (bad) insb js std push xchg fidivl or inc lahf cmp push repz and mov nop dec mov add jge xchg and xchg mov adc movsb imul fldenv mov xor rcrl and dec cli daa inc lret mov div cmp (bad) mov aad push xor jne in out jmp ss mov mov jb lds loopne or and fsubr negl jle lahf pop mov in jno and add push cmp in ret (bad) pop sub sbb xchg out scas xor adc push popa (bad) in hlt fstpt stos add sub rcrb xchg sbb outsb aam or fcomp repz adc mov jno adc jns insl adc xchg (bad) fcomip mov adcb imul lcall pop or or cwtl in shrb movsl xlat add xor xlat decl test scas xor and push push pop scas stos fsts test pop and sbb stc sbb sbbl jl xor shll fdivr cli cld push adc xor addr16 faddl outsb (bad) bound xchg fdivr mov or mov adc int ffree inc xor lods repnz pop push test lcall in adc testl xor test in xor add mov fcoml test adc pop pop push xchg mov sub cmp fs arpl inc jmp pop fsubp insb and sub ljmp fdivl sahf mov rcl shr sub lds int std add jge in mov pusha stos rorb insl lods imul and mov cli push inc push leave jp inc fucomi in or and gs jmp dec sbb data16 xor cmp fiadd movsb lcall cmp adc cmp ss sub mov setne adc jg fsts ljmp cmc inc das repz add inc test div lock js sbb mov outsb in clc (bad) jo insb xchg mov and (bad) lea add (bad) cmp das int3 test xor call cmp mov sub jmp les xlat mov jns ret fs fdivs xor lds push add jne jbe mov rorl mov jmp rcrb sbb (bad) mov xchg push cmp lahf lods pusha xor pop dec cmpsl jae mov orb (bad) imulb xchg imul mov lock pop decb bound add sbb test cmp fstl les dec mov dec sub inc rcr psrlw push push pop cmpsb mov loopne sbb inc push xchg nop (bad) add into ficoml pop mov mov (bad) mov cmp fnstcw dec inc cmc sub js arpl insl adc rcll inc repz cmpb clc jno mov (bad) jno jno mov imul roll xor pop mov pop sarl mov adc adc andb mov mov ffreep inc push pop dec dec mov push sub hlt push sbb dec cmc insl cmpsl fimul jge aas (bad) and xchg addr16 dec jle sub pop xor adc hlt ja aad dec add push mov leave dec adc movsb xchg jbe pop test mov cmpsb lahf jmp pop xor add add sub imul jg (bad) sti push adc sbb scas add push push fmuls lock pop out mov lret int3 inc addr16 ja (bad) jg iret cmpl js fwait mov mov mov rcll sahf fcmovnu sub add mov lods mov dec sub jo inc xor dec xor sub jle push addr16 mov push arpl fcomp arpl cmp sub pop push in daa xor stos jns mov inc imul sub push es shll push sub (bad) jle orl sbb push js loope sbb push les cmp dec jae fistp (bad) in cmp aas stos fsubrl lcall loopne or adc das repnz cli les cmp popa sub xchg loope scas ja xor push scas jmp lret test (bad) mov jbe fistl sti std sarb push movsl mov jg int rsm lods aaa mov mov into xor or movsl shrl (bad) lds fsubs out sbb lds and mov orb sarb xchg inc fldenv rcll (bad) fldl sbb stc stos pop (bad) jo mov or subb sbb test test fmulp mov add mov sbb test push dec xchg in cmp xlat xchg mov jmp aas mov inc out sbb or jecxz mov sbb cmpl popa ret fwait cltd ljmp push leave stos (bad) adc jbe insb insl sbb xchg movsb rol mov (bad) pop lea js push test mov enter jg xchg nop push pop adc mov push js ja test les adc cmp lea mov test notb andl jne loop mov cwtl mov popf cvtps2pi scas mov sub xchg mov mov inc xchg pop dec mov daa pusha adc cmp mov add adc or out xchg lock mov negb fwait out and mov xor inc sahf movb xor rcrb push push addr16 pop leave mov mov or popa cltd popf rolb jl pop loop test mov popf cmp cmp cmp lods lahf push inc pop lock jo repz sub decl lret sbb ror outsl sub outsb pop xchg hlt pusha jae xor jecxz sub punpckhbw shrl pop add jecxz cmp fwait popf push out sub mov mov test mov add mov sahf imul pop aam cmp lret lahf cwtl cmpsb ljmp dec jge xor rorb mov and loop push xchg jbe jle movsl or idivl xlat mov icebp xchg pop cmc mov imul sub xor shll xor sub cltd jmp pusha mov or dec dec push jecxz push mov into lret xchg jae xchg inc into or sub (bad) gs xor frstor xor repnz dec inc int3 push lock sub mov pushf dec or mov (bad) ljmp dec add fildl inc out push or shr dec dec inc mov aas cmp popa inc fmuls (bad) lods dec out in cmp ret cmp fsubs call inc fwait adc mov push or dec mov dec push cmp xchg daa cld mov dec dec mov xchg daa pop add popf inc adc ret jo ds mov dec aas cmp jnp fnop inc and fdivrl addl les push mov pop (bad) loopne std dec sub into lahf mov jmp dec (bad) pop add bnd ret jo aaa mov cwtl jecxz in sbbb adc adc pop push mov pop adc push pop insl push repnz ja insl insl sbb sub fadds add or push sub jp (bad) jb outsl mov cmc inc mov mov pop inc jnp movsb icebp push push jbe mov pop add pop int3 push jne add test imul addl mov loop jg and fsubs xchg lret mov imul or push and xlat sbb lock dec jmp insb (bad) icebp jp push inc (bad) fstl jle mov and (bad) or mov shl sub cmp xor xchg in in out fiaddl lret (bad) push and fbstp inc lcall mov dec add int3 test add loopne and jnp repnz imul jnp and scas pusha xor xchg xchg movsl scas lods inc inc popf lahf je inc xor int3 fidivl test mov (bad) adc repnz and inc inc lods jae mov ss jnp xor xadd dec or dec dec sub sahf pushf pop pushf aaa inc outsl mov iret les (bad) imul mov jns jle mov cwtl fcomp call or xchg pop jnp js jb push mov push push sbb insb pop aas sub scas out mov test ss sub pop xchg xlat mov outsb aam cmp sub mov fwait sahf sbb in cmp (bad) fiadd enter test in shll xchg les repz jmp jl and inc xor loope fldcw in inc sub and add inc mov lock jp repz pop rcll add add movsb sbb int and int mov pop dec jbe mov int3 jo dec pop jp addl push or add jge cmp push pop (bad) jmp ret mov sub rcrl push mov fisub cmp mov dec iret cmp mov xor push sbb jbe loopne mov jne cld jnp jo sahf adc dec dec loop add dec dec xchg insl out jg data16 fcomps sbb push push push xchg pop pop test push dec dec ret (bad) in notl cmpsb cmpsl idivb sub popf mov dec faddl mov fidiv push rcl das (bad) nop pop mov aam dec dec sbb outsl dec push out lea push mov add cltd cld cwtl pop jmp lods out or jg or mov add stc stos test mov int3 sub xlat mov repnz mov inc inc ret and es ja fsubrl test push test and push lret aam push pop loope mull mov mov data16 fwait xchg xchg or jg xor pop icebp (bad) jmp in xor xchg cmp daa mov push movsb (bad) cld mov jp popf pop es rcrb rorl mov rorl cmp ds bound inc (bad) sub js sbb xchg cs adc jne add je cmp or iret pop test jle cmpsl sub add (bad) (bad) hlt aam push cmp mov cmpsb mov adc and (bad) loope or lcall orb add inc lods adc and (bad) mov adc js cmpsb xor mov and out test sbb sub jg (bad) pushf adc cmp sbb int out cli mov push push push add lahf hlt imul lcall fsubp push aam sub adc sahf test add push mov lods out mov mov scas mov movsl movsb xlat or jp cmp out mov popa insl fs cmp mov cmp push in jae mov xor sbb fistpl fdivl adc hlt test pop jae jl insl sub push cmp daa data16 jo mov lods repz pop imul mov addr16 scas mov mov movsb pop or add cmpsb jmp (bad) iret movsl or stc mov sahf cmp div int (bad) imul pop mov xchg mov mov mov lcall inc movsl gs inc xchg sbb mov jns lods (bad) xor incb mov cmpsb (bad) divl shl mov daa pop adc jge clc xchg jmp jbe mov sahf sbb add push les adc add or popa divps lahf loopne test jle (bad) jecxz and adc jge jl mov jne sar out repnz sub addr16 outsl ds shrl cwtl cltd cltd xchg mov dec xchg pushf or rcrl fcompl mov cli cmp lods nop in movhps popf ss notb jb je add xor jge loope pop sti sub arpl popf push adc mov sbb mov into sbb (bad) (bad) cmpsl cmp mov subb gs or dec dec jle cmpsl arpl xor lods ljmp lahf arpl incb in and xor dec and in sub add out scas bound test in xchg jae lods aad jae pop in mov sub cmp stc push push xor (bad) mov cmp mov je or out adc jp (bad) (bad) mov mov fcmovbe or cmp xchg jp (bad) or jmp mov inc cmp adc pop jno out cmc xchg lods int3 push push repz insl add cmc mov lcall sub xor ds outsl jns and dec inc es mov leave jmp inc repnz mov loop xchg xchg arpl ret pusha sahf xchg mov jg sti push xchg out fcmovbe mov push ret xor icebp ss test adc cmp sahf rolb dec add mov les out push and daa pop push jmp ret rcll (bad) adc hlt cmc test sbb jp loope and es fwait mull into cmc push sbb xor leave les add mov or mov jnp dec pop push jecxz push shrb lret jae cs lock or add call adc mov xchg jb push fisubrl pop popf lahf (bad) outsb call mov xor sarb icebp add test pop pop inc inc (bad) (bad) and xchg add stos inc lret mov shl out mov loopne and outsl inc xor fsts dec or movsl ds xor call mov sbb jecxz insb cs add push and mov inc inc test jbe cmp mov mov repnz inc cmp (bad) icebp jne hlt jmp cmpsb int lods lods (bad) icebp cmc iret mov (bad) in pop and aam outsb dec push pop rolb mov mov mov test imul adc cmp cwtl jl mov or popf mov pop push push mov jno pop nop (bad) js cmp cmp repnz pusha data16 xchg or or sbb pop and inc sti shlb pop aam adc push mov popa push fcoms ret adc add xchg sbb inc lret sti sbb adc sar push rcrb push imull and sahf data16 test lcall pop lds inc cmpsl jbe ret rcll sub popf ret cmp or xchg in lods sahf sarb fwait leave sti mov loopne lods stc sub insl ja mov and stos (bad) push push xor lret jae sub sub cld inc daa in orl out add adc or enter sahf fsubrl rolb mov clc mov xchg dec push movsl fdiv push cltd xchg and add repnz xor mov mov cs mov pop pop lock sti js adc jo jb jp or movsb not add mov or fisttp mov leave divb arpl je adc inc (bad) mov clc jecxz call cltd jmp dec lcall and arpl add pop mov xor jns test data16 cltd shrb dec xlat sbb hlt popa test push sbb dec push mov push fwait pop add hlt insl push push lcall push subl push jge xor mov lret mov (bad) fldenv inc dec std xor cs lods adc mov pop jae jg sbb fcom jnp jns add ucomiss or xchg xchg push in jcxz fwait and mov test adc add mov addr16 (bad) inc and or test add fldcw pushl mov sarl ficom (bad) rcll (bad) cmp leave iret notb jge mov mov lods repnz (bad) sti and push imul aaa xor jo rol xor jnp push jmp fimull push (bad) sub in pusha sahf out push push ja ret adc pop mov xor lret sbb mov mov and push xchg das xor mov fistl loop (bad) mov negl jecxz mov pop xor sti pcmpgtd movsl cmpsl insl mov sub mov fs pop insl insl or lahf pop push dec in dec jnp call adc mov bound add push mov call jae negb (bad) gs fdivrs (bad) cmpsb sub in in in fwait adc pop and adc add push pop push (bad) jae sti jno popf inc fwait bound xor inc pop bound es adc shrl adc push mull jns pop push or imul dec lds cmpsb rol test lcall call (bad) push push jle or imul fwait pop pusha push jp cmp aas add fs stc lret int cltd inc pop loope mov jns insb in xchg pushf inc (bad) mov dec adc lods pop fisubrl scas cli xor xchg jne or test es jl and push inc aas aad out lea jae xor push pusha jbe (bad) jnp mov dec pop lods dec mov mov dec aam (bad) cli fsts or sbb jno (bad) pop (bad) sahf popf cmp mov test ljmp cltd jge fldl lret inc inc mov aad adc and jb sbb mov cmpsl es mov jg into mov dec xchg jns pop mov push mov imul pop or stos push inc xchg out cmpsb dec test rolb push push and cli lret shr outsb mov sbb aad and fimul int inc out inc inc jae es fwait ja stc fwait sbb add add les icebp mov ret jno fidivrl fsts sahf mov loope sarb lods cmp divl pop in pop adc add and call sub xchg lods cs xchg pop out xchg push or adc mov or ljmp inc pop xor sbb dec leave (bad) int jns (bad) sarb and or dec rcrb jae dec insb je push fwait popf push cmp out cld xchg out push xchg xchg stos insl call pusha xor jae sbb inc int3 mov mov int lea push mov loope dec mov or lods insb test cmc iret or or xchg xchg daa ja jae (bad) cmc fmull mov aaa and repz cmp sbb jo aad aaa (bad) mov pop or jo testb outsb or mov (bad) lock in adc push sbb xchg repz pop xor nop ljmp test pop in jmp sbb loope das mov jb test cmp mov sub in loopne add addr16 daa sbb inc loopne add and mov adc jne dec or fistl (bad) jns and sti pop hlt add xor mov and call aam lock xchg adc add mov outsl xchg outsb push cmp mov sahf adc std stc ss stos or mov pop pop sbb aad lcall loopne dec jo xor (bad) pop sbb and push pusha movb sbb addr16 addr16 pop aam mov addl inc sub jo jg xchg fisubl std mov add cli mov ja xchg (bad) test xor adc cmc inc mov dec mov int repnz aaa mov push mov jmp aas or dec inc (bad) in icebp (bad) and inc and icebp xchg stos dec mov bound imul clc push out (bad) sub loop pop push adc adc fsubr movsb sub add mov addr16 add jmp push push fwait (bad) pop pop js lods lods out jle push mov mov pop jns jnp sub aas push stos jp and out mov mov cmpsb insb jl mov mov fstpl sbb (bad) pushl sbb mov sbb pusha fcmovnb mov bound fdivrs jns cld cmp pusha in push imul iret xlat inc inc dec mov dec lock xchg jl push xor mov icebp push call ret call fwait sbb (bad) idivl fcomip xor inc lds test push movsl mov pushf jge popa movsl aad add imul out stos mov mov add insb pop es push vpcmpgtw loope cltd inc aas mov test ret repz jge lahf mov lea int pusha sbbb sub out sbb lods jb pop roll es pop pop out sar loope js mov pop jl outsl scas imull repnz (bad) xor adc sahf data16 push sbb outsl push cmpsb std aaa jnp,pn xor jne dec dec ret or push stc jno pop or fcoml lds inc adc ficoml pop outsb outsl pop pop push xchg jmp pop aad mov add jmp nop dec outsl fcmovu jb (bad) (bad) xchg inc jno repnz fwait adc aam paddsw cld cld fsts cmpsl lock adc jecxz (bad) (bad) mov outsb fnstenv push mov or sub and ljmp lcall aaa pop mov adc aad adc pop add lds sub les test mov ret cld sub lock pop mov push xchg insl (bad) cmc or xchg addl xor xor leave dec les inc fbld (bad) (bad) cmp rclb sahf iret fildl add lret int3 int dec scas addb (bad) idiv push push adc int aad inc xor int push push rol iret and push scas rcrl std test fistl add icebp lret push daa pop or mov test add mov inc prefetchw dec iret xchg ss bnd cmpsb daa mov dec (bad) scas lahf lahf sar ret ret leave enter setae cld scas lods and aad popa xor je lcall pop pop cmp iret rcrl sub out dec aad push out imul cld movsb outsl mov xor mov and js (bad) aad cmp cltd insl insl je insb cmp xchg loop mov xor xlat xor (bad) adc and sub pop rcl xchg pop mov or sbb push js jns sti add sub add cmp cld pushf pop jle jno pop adc fwait xchg (bad) jnp fcomp lcall out addr16 jmp (bad) repnz dec mov movb cmc inc sbbl jno xchg mov lock push pop mov pop movsb test pop sub push aam stos out out and (bad) mov dec ret mov push cmp xor add sti (bad) scas xor cmp stos jnp cmp push cmp mov adc ret dec sub hlt xchg (bad) push arpl sbb mov aaa addr16 jg ss inc and loope outsl dec pop push and mov loopne sub adc pusha je xchg cmc repnz pop in cli jo cmp fistpl fidivl jb loopne mov adc or inc or clc jnp adc insb insl sbb outsl pop pop sbb int mov pop lea and xchg shrb dec add jge xchg dec pop cwtl push rdpmc push adc sub jae inc pushf pop pop outsl jno jge inc or lds jb popf in jno push pop rorl das jp fs add add pop or data16 fldt scas pop and or mov repz mov imul mov mov xor or adc negl push cmp sbb xor repz adc flds imul pop loop jle xlat sub testl and xchg adc hlt fdiv outsl jno das imul jnp sub push xor popa add cmc xor test aas pop (bad) js sbb mov mov movsb sbb int (bad) lods xchg or xor stos (bad) mov pop aad iret cmpsl push adc cmovle (bad) pushf gs cmp xchg lcall sarl adc pop and lret cmpsl mov ljmp adc pop daa inc iret (bad) aam sub sub ljmp lds and mov jne stos push cs and cmpsl scas xchg cli cmp mov popf lea push aas jp ds pop es mov call mov mov dec inc addl ret push mov jbe adc (bad) add adc xchg (bad) or idivb out sub (bad) cmp test sbb pop (bad) mov pop mov idivb xlat xchg inc cwtl test (bad) jbe jl jne movsb bound mov push adc mov xor sarl jge std mov mov out test scas pop es inc mov jnp cmp jle (bad) clc adc cli arpl repnz notl test gs push push xchg call icebp xor int inc int cmp loop ds imul std mov sub xchg sbb addr16 rclb aaa hlt int3 mov incl fisttp or add sbb mov out (bad) mov stos hlt or (bad) and xchg cmp jae or inc out jns mov ficomp cs repz push pop mov popl or sbb dec rcrl hlt dec mov nop sbb xchg insl push sub test (bad) arpl and inc inc cmpsl enter mov jno jns sub or xor mov xchg mov cli cli (bad) xor (bad) into xchg rcrl fwait scas aaa lea (bad) div lds pop pop scas ljmp sti xchg loop pushf movsb test pop pop aam jmp addr16 mov mov jnp add pop pop pop xchg and cmpsb (bad) and fimull push cmc movsb insl jle sub clc into mov jb cmp dec add addl cs pushf inc movb pop aaa mov push and mov inc dec xchg incb jne push pop pop pop xor sbb test and cmp and cmp addl add add push mov mov mov jp repnz inc inc out jecxz inc sbbb popf test scas pop iret mov pushf scas pop pusha bound imul shrb xlat xlat xlat (bad) call pop mov dec inc in mov cwtl jb or and mov xor xchg pop pop xchg dec cmp sbb mov mov mov cs and adc out pusha dec js xchg cmp loope lahf addl int3 inc mov rcrl sub data16 sbb dec push add jbe fst sbb jns mov and das clc mov jmp cmp jbe rorb xchg fisubrl addl lcall out call ret jl (bad) call jns dec dec gs (bad) scas popa jl sahf out add and cwtl lock inc dec (bad) cmpsl sub or aad mov std arpl out out xchg xchg sub aam out out lahf and sub xor cltd push mov or mov pop (bad) xor push sbb pop popa pop mov orps pop jno outsb fsubrs cmp dec hlt mov (bad) push cmpsb or dec push xchg arpl inc cmp jbe push jne add or mov lret (bad) imul mov movsl xor mov sbb mov xchg inc cli inc cmc repz into pop xor nop and dec dec (bad) xor scas gs mov lods cmp orps fiaddl jl arpl icebp and xchg lret mov rcrl sbb adc sub add add lods xor jae inc std jb fiaddl and (bad) jl inc jno inc push orl hlt aaa mov fcoml (bad) std fidivr out mov (bad) mov pop sub adc pop xor dec jne das test test push aas loope shrl dec push and pop jno mov (bad) jae sbb aad lcall mov and xor jl and xor fcoml add mov pop loop pop (bad) mov sahf sahf roll or das outsb fwait pop xor mov ljmp lahf lods (bad) mov mov mov adc sub lock xor into adc sbb lods imul decl lock mov xchg xchg push jle fstl repz addl jp jno repz xchg pop clc mov mov and sub arpl sahf xor push lcall js aaa in and inc (bad) sbb pop aas dec call push and scas vxorps jl or xlat cmp push imul cmp lds out test in sub mov sub mov mov dec in xor and (bad) aas push gs pop xchg push push pop xor jg rcl mov cmp sti hlt cmp repz mov xor in pop data16 xor cmc sahf pslld mov stc lods mov enter out test lods jmp aam iret lcall sbb push add jnp mov rclb popf sarb mov cs mov scas popf pop sar and (bad) test cld xchg lret mov push and pushf inc cmp mov and ss dec mov std fisubr fisubr lock push sbb fidivrl mov leave mov xchg aam test adc mov cmp adc lret and pop sub cmp sub adc add test sbb nop cmpsl mov mov pop mov fcoms pop dec pop faddl inc push dec rolb lret pop xchg sti inc in or xchg fistpl std std insl in int inc in pusha in lahf aad out mov pop push cltd andl jo or ficom add cmpsb inc test push nop pop xchg sbb jnp (bad) jmp scas mov pop sahf and and fwait mov imull xor ret adc jb andl shll stos lds dec pop ja mov jbe fildll ljmp push push push fsubs push cmc cmc mov cmp dec hlt sbb and and cltd pop (bad) add mov cmpsb out xor mov jecxz cltd mov (bad) pop aas (bad) xchg jecxz (bad) fstpt cmp mov inc (bad) inc or mov stc jle jno push push lods sahf lahf (bad) lock xchg outsb cmc cmc mov lahf mov mov cmp cmp jecxz inc scas pop shrb rcrl xchg int cmpl test fneni(8087 mov cli sbb out xor sub or fstl fisubr cli sub lcall dec push ljmp pop or cli jge jge adc push dec loope mov ja mov je inc ljmp add rcl jae out jl rorl and js loop mov and mov xchg dec cmp test in jl aas and clc pop clc or pop das mov cmpsb adc sbb (bad) dec addb mov cmp xchg ficoml stc data16 cmc fwait sub inc push and push ja cmp std inc adc lret adc xchg stc (bad) jo out inc (bad) (bad) jg frstor repz iret push out sbb lock in sbb add (bad) mov cmp dec clc cmp (bad) xor ret jp dec pop push mov dec push insl add dec fildl sbb or repnz adc test xor push bound into sub out loopne fidivr inc insb inc mov xchg pop cs adc xor test (bad) mov dec sbb xchg xchg add iret ljmp les jae inc shlb add push jbe and mov cmp (bad) dec and in test (bad) (bad) out repnz or inc ret (bad) std stc dec nop popa jno sub loopne sbb imul repz (bad) dec or js imul push add outsb and jae push mov cmp pop pusha shrl xchg mov aam jl and xchg outsl aaa push ret dec rcrb cld mov jns and movsl cmp xchg imul (bad) (bad) dec sbb sahf mov les dec inc or mov into sub sub scas add xor bound inc pusha inc stos sahf sub push and dec mov lret in mov push cmp mov mov cmpsl jle insl mov (bad) aad dec icebp mov and sub leave int inc pop pop fwait and std (bad) cli fsts inc dec and or cmp ror mov loop sahf or idivb pop gs inc xchg cwtl frstor bound pop and ficomp mov lods mov add (bad) adc int3 jnp jle addr16 aaa xor sarb and mov (bad) push push movsl dec pop add pop inc xchg shll out cmpsb rclb cmp xor inc ret mov fcoml shr mov xor cmpsl jb add and cmpsb stos push xchg cmp (bad) lods mov add sub test xor sarl sbb mov or dec dec cmp xor xchg mov and add xor ss cmp jno mov scas (bad) xchg scas xlat mov xor pop das pop push sub pop pop or lock iret xor push out xchg out add test inc add mov sbb mov (bad) sub and sub dec inc es fidiv xchg fldenv ljmp test vmovups xor xor adc sbb test push push arpl insl fs lds ljmp call sahf sbb testb out (bad) dec ja or in and aam lods popa mov cmc leave or div mov xchg lock or into add mov les (bad) push push das dec out sub loope js jno sub stos (bad) int sahf jle inc push jl xchg pop bound mov (bad) js or push add mov or mov cmp dec cmp outsl fwait mov sub mov frstor loopne cmp xchg lods int popa mov add hlt mov (bad) xor pop push outsl outsb inc xchg incb sbb mov fs mov loopne scas jo jmp popa (bad) pop (bad) xchg push aad and xchg inc dec sub leave mov or sub sub mov daa push aaa inc jecxz (bad) movsl cmp adc xor ljmp lcall push and dec add cli jp sbb pop aas push mov loop push test lahf xor push or fstpt xor mov rorb pop xchg mov cs mov shlb pop sahf jg cmp ja jecxz sub (bad) and adc add imul mov jbe adc repz lods stos fistpll mov and xlat mov ljmp rorb pop out mov sahf ficom adc cmp mov jg xchg push jle add arpl dec cmp mov xchg (bad) adc mov lock mov push cmp rcll cwtl test and call (bad) xor imul or sbb ljmp mov xor push movl arpl jl pop stos lock xchg je insl push outsb mov shl das push or sub in (bad) sbb popa fldl inc (bad) jmp outsl and jno addr16 je out push push movsb cmpsb int xchg hlt pop sub xor cs xor adcb push (bad) sbb inc xor add (bad) lock das pop shll pushf int3 mov test mov xchg int3 sub outsb push data16 and cltd popf in sbb js in enter mov std lods pop sub xchg fstl popf out jns repz clc mov mov inc scas ret add xchg xlat pop lods adc and inc imul sqrtps subb cmp scas clc cmpsb lahf mov int inc je pop pop lods dec and imul pop fidivr fsubrs fcoml mov cli pop addr16 (bad) jecxz movsl cmc stc mov mov pop loop cs out (bad) (bad) negb mov repz cmp and ret ljmp jbe sbb jg icebp mov data16 mov jle cltd aad sub xchg sbb pop xorps cwtl push stc mov cmp mov push push in rcr jl mov xor andl (bad) fmul rcrl arpl outsb adc fldcw dec daa adc and ljmp lock add fwait sbb xor mov pushf lcall jg sub sub ljmp lcall test cmpsl cmp out sub mov jbe mov dec adc ss (bad) mov push push mov inc out sarb divb xor sbb insl insb fs adc es add fbld bound mov or dec pop push pop jae jg push pop fcmovnu sarl jns cmp and sub mov adc mov movb xlat sub pusha adc add (bad) mov inc dec mov stc add movsb cmp sbb fisubl inc push jns (bad) xor sarl mov sahf or insl aaa shr push jo rcll xor cmp pop pop jge or push in adc mov xlat push insl adc push sbb xchg loop push add rcr push sub clc cmp sub add sub jl mov mov scas rol lods sbb mov push lods inc sub pop jne rclb xor insl push fs add xchg test sub stos mov mov add pop in in sahf sahf xlat mov fildl negl repnz rorl (bad) (bad) das out fstps add cmp jg jbe jno push push dec or or xchg cmp mov jbe jb cld inc sub adc jecxz dec stos adc or dec divl insl xor out shrl dec scas (bad) negb aad xchg imul lods ljmp inc jno ret ss mov push movsl loopne xchg sub or dec xchg je inc cmp xorl pop mov mov loopne fidivrl jno sarl das lret mov cmp ss aaa xor repnz push roll nop nop mov shrl xchg xchg push cwtl addr16 jge push lret mov (bad) bnd push outsl sbb call movsl in push movsb out xor pusha pushfw fildl js addr16 sbb sbb xchg fcmovnbe dec mov pop divb cmpsl movsb sub push cmp mov push mov pop fsubrl (bad) mov jo,pt (bad) and push xchg cmpsl lock xchg std inc fstps adc insb movsb out push jno insl rcr clc xchg inc (bad) in ljmp dec add xchg rcrl cmp cmp pop mov ret pop bound ret mov mov mov iret (bad) lods cmp add cwtl or add sbb mov ss inc arpl xor pop inc stos mulb lods fldenv rcrb jae aam lock in xchg imul xchg idivl cmp dec or cwtl test jg aas cmp push xchg hlt sahf add xlat rorl or pop xchg jg cmp (bad) sti cmpsl xchg and push (bad) mov xchg xchg jle or out fwait and inc sbb (bad) mov inc stos jbe aas int3 add mov or scas jns or push lds ss mov hlt jmp test add popa test pop (bad) xor jmp jmp imul mov jp iret jne loop add popa and in divl sub cwtl or data16 insl and add pop (bad) cmpsb (bad) push xchg xchg bound mov out and mov cmp hlt insl cmp sahf jp nop pop sar jle nop xchg out push mov inc pop pop inc lea mov jle and sub xchg test fimull dec dec repz rclb jp cmp cmp pop jns adc jmp (bad) aaa out cmp and pop mov int xchg daa xor xor aaa into cmp je das pop pop mov and js xchg data16 (bad) sub cltd mov ret bound stos leave mov sti in cmp cwtl pop xchg pop pushf cs and ja pop pop test xchg push decb int3 lods (bad) xor into dec cld xor out out lahf push into scas dec pop add out sub fcmovbe mov fwait mov or mov leave mov js push mov (bad) dec add mov pop pop cld xor xor movb sbb pop (bad) aad movsb pusha mov sbb push push in loop jl mov add cli sbb mov mov es cmp xchg fnstsw mov add adc pop and fistpl fbstp ret xor pop insb ja cmp xchg mov lock push bound imul dec fild icebp (bad) std xor xor jns dec or push dec dec xchg inc aaa adc (bad) std fldcw add lret inc lret inc inc add icebp xchg sbb (bad) negl orl mov jbe mov jb std lcall aad sub pushf ljmp mov sub out test cwtl and and push push and cli ret rcl test xchg push xorps xchg test dec jo xor xchg jnp jbe or lcall mov enter add mov scas (bad) jb mov push pop (bad) push xor repnz pop jecxz mov mov mov xchg scas outsb push loop jbe jg xor mov leave (bad) inc pop das mov add add add sbb cmpsl mov int3 or sbb add bnd stos mov ror jo movsl sbb xchg push jle mov pop inc inc loopne pop pop xor adc sub and (bad) adc fisubr add dec adc xchg cwtl dec mov jns mov mov push lds mov mov insl aas (bad) icebp pop (bad) push sub pop push pop xlat xlat hlt test push or ficomp in subl jl cmp mov test adc or lea push in pop mov (bad) sub clc mov xor sub sbb fidivrl xor loopne into pop out popf or fnstsw add pop (bad) imul adc fcmovnu jg mov ret scas xor ss (bad) cmpsl (bad) jmp jecxz fstps fucomip cmp pop fs push jmpw mov pop mov sbb scas mov mov ss sbb jno stos (bad) xor shrb xchg dec mov es popf loope jg cs pop out dec dec or clc xchg (bad) lods and jno (bad) neg or in pop push sub les push xchg scas iret in adcl loopne,pt dec out adc mov or push mov movb clc jns das (bad) sbb lahf cltd cltd cltd pop xchg pop ret js sbb and dec jle adc icebp sahf mov in sbbl call pop push rcrl test int3 je (bad) (bad) and push test cwtl pop aaa jb nop (bad) dec push rcrb cmp xor xor out imul imul addr16 mov add inc aam aaa sub xor sub add xchg pop mov jnp das push sbb mov push ljmp dec dec and sbb xor scas cmp and ret inc subl lods sub jnp lahf or sbb stc shr aas subl adc add push addb arpl pushf mov cmp mov enter adcl pop inc jge fwait xchg outsb lea jl and jecxz jl pushf xchg clc jp jae mov inc call (bad) lods pusha mov sub jnp adc std std addr16 adc scas int and sub lds lret movsl pop cli repnz ds jmp dec pusha mov movsb fnsave call stc sti fs cmp stc xchg shrb sub sub arpl add lahf loopne iret (bad) lods cmp or jb data16 pop pop dec adc incl enter push es mov push mov insl js sub adc in sbb cmpl pop adc cmp sbb inc decl mov push dec add (bad) int faddl scas xor xor aam jnp js std (bad) icebp cmp jmp test and push cs es push inc out jae sbb jns int3 (bad) mov mov mov adc pop outsb sub lds les add mov enter aam sahf pop cli adc roll xchg cmp rcll or fnstcw adc dec pop push push fisub xchg lcall enter adc jmp cmp dec icebp add mov movsb scas scas sbb cmp sub clc or hlt repnz sbb and arpl test sbb femms push push popf pusha cwtl xchg sarb mov mul adc sub cli sahf fisubr mov adc mov rcll sub and inc sbb in cmp jp lock ljmp fwait cmpsl call dec test lahf popf push xor pop ficoml out (bad) push (bad) lods jecxz nop test (bad) enter or adc xor sbb fdiv push lcall lret cs sub in je add xchg push xchg xchg cmp je push iret mov add jo in push xor or cmp arpl sub sub aam sub and add pop xchg xor movsl cmp push sub jmp test fisubl jle inc rcr fwait lcall into and add mov nop insl int3 xor cs mov dec sub xchg aas in xchg fsincos push add adc lock ja sub jl mov sbb push and xor xchg lcall outsl and mov jnp je jmp or jbe jp or fbstp pop jno or cmp dec daa es cwtl xor imul jo push xchg rcrl mov lock mov arpl mov xchg xchg and push loope ret aam xlat js cmp (bad) repz sahf pop movsl push and pop and out or dec dec jns insl insl mov out loop cmp cmp and push mov sbb leave test js out push jmp (bad) mov lds or inc and enter pop test stc push pop jmp pop xchg jg xor cld mov fldenv adc fs xorl mov mov mov cbtw jnp clc (bad) clc xchg adc je or std setg mov push imul stos add fisttpl iret popf mov std iret dec jp adc outsl dec or mov or fs mov rcll jnp adc adc inc enter es pushf int (bad) shll sub cmp mov test xchg out test lret adc xchg out sbb loopne int rcl xor lea push xchg incl je imul fsts push mov repnz jl out sub xor out lret mov (bad) outsl mov (bad) adc pop in into xor cmp jne aas hlt xchg ja (bad) or testl lods test mov mov push popa sbb adc mov clc sub movsl (bad) jbe lcall out lret enter add add inc nop decb and movsb incl es in test push inc ljmp int arpl jbe cltd out pusha leave orl xor mov test test sub pop enter aam jg xor gs imull sub inc mov inc ss cmpsl scas push das daa sbb xorl dec xchg test inc test insb insb fs out xchg repz scas dec dec add fs dec dec (bad) xchg mov sbb push pop cmp jp aam xchg int3 cmp xchg repz sub (bad) sti dec adc das fldcw jbe jne push lods lods lahf iret out int or shll jbe mov and add pop cmp pop fwait sub push leave jnp sbb fild out mov mov adc sbb js sahf lcall xor int ljmp jmp int3 les test insb pushf das mov out and sub sub daa push pusha call fdivrs sub push movsb mov adc inc out test mov jg mov push push push cmc jl or xlat clc jo ret pop or add cmp xchg dec jmp (bad) mov cltd in cmp adc in sahf sahf add test cmpb leave test cmp subl cld add (bad) mov push int lods fsubrs repnz mov lcall inc in adc fwait push push scas shrl fisttpl xchg push dec repz mov pushl xor (bad) xchg insb in jecxz rcrl pop (bad) lds and xchg lret mov push sub loop shll (bad) xor push inc iret into cmp mov cmp xor mov int insl movsb (bad) decb aam inc mov xchg jno iret xor pop hlt ret sti idivb mov pop (bad) adc sub cmpsb (bad) sbb lea xchg in cmp sarl loope hlt or push lahf shll xorb sbb add jmp das aas aas jge,pn add std stos out adc xchg xchg pop inc ret inc inc lcall test push cmp std cmc les rol loopne fsts in push push shl mov mov pop mov popf and dec lret inc mov loope fcompl adc sub push and movsl cmp sahf push test out test add push cmp out imul jle in ret adc xor nop fmuls add (bad) jo sub mov jne or lret sub xlat xchg or mov ds fucomp scas mov rcll or jae rol jp adc mov out and jp clc jecxz lret xchg cmpsb pop ss fildll (bad) decl cmpsl mov sub into popa and lods dec faddl aad xchg imul aad jmp js mov and insl sbb (bad) (bad) lods fsubr mov adc mov xor scas push dec add mov movsb arpl int sarb in mov ss repnz xor iret inc inc aad mov xchg cli sti in cmp cwtl pop xchg pop pushf daa outsb insl mov lret inc dec add stc insb sbb mov gs cli popa cld arpl mov lcall pop adc sub js dec dec mov pop aas dec fmuls mov (bad) ss or fcmovu loopne sub ja xor sbb add ljmp cmp lret xchg dec cmp sahf les and jo or imul xchg fistpl mov mov popa das push mov pop out movsl cs aad inc aam xor scas shlb adc es insb call lods push test sarl adc pop repnz (bad) into cmp enter sarl les repz (bad) sahf popf push mov andl mov cmp neg mov les out popf loope sub pop pop mov sbb scas and addb jae and popf mov adc dec xchg popa out adc inc sub call pavgw push repz iret cmp add insl xchg outsb or xor adc imul pop addr16 dec sub push mov test in xchg rclb bound decb inc nop xchg xor stos popf inc xor dec pop outsl nop (bad) stc cmp pop ficompl sbb mov imul (bad) xchg outsb push fs addb lret cmp nop clc aas jne mov addr16 je imul or into jb xchg pop xlat stc test pop ja xchg fstp mov inc (bad) mov mov inc inc ret inc jge cld mov sub rcll adc movsl movsb cs loope pop xchg xchg sbb lods lea inc cld mov adc pop fnop fldenv ret add pop aam sub push into aad jg xor pop xlat stos adc cmp dec inc sub pushl push lods adc fnstenv jl jne and push jp adc mov out and divl (bad) clc pop or ss mov fnstenv sahf es push mov dec sbb popa lret xchg fcmovnu mov add sarb jns push cmp (bad) sub cmp jg fisubrl adc clc das pop fisubrl lock mov insl call xchg sti stos push cmpsb jno (bad) dec scas call inc out push or mov xchg mov ja cmpsb shl in sahf pop fstl out mov out jge xor data16 pop cmpsl dec add insb sub gs push aas rcl popa cmpsl push mov cs adc xchg cwtl dec mov cmpsl nop (bad) (bad) fisttp inc jns insl insl mov out loop cmp incl insl push and push pusha mov jnp (bad) sbb in outsb into xchg xchg aas xor or outsb sbb call pop or jns or mov add scas mov mov fdivrs mov addb jns adc sub popf sbbl repz orl sti mov mov jg stos push call push int ds jns mov andl ja sti mov fbld cltd cmpsb ret sbb xchg push movsl movsl add mov dec les fcoml jge or cs or pop pop pop pop mov mov sub xchg ret adc jmp push inc inc sub mov (bad) add movsb das xor xor cmpsb int xor addr16 mov lret pop (bad) std addr16 xor fdivrl push (bad) mov popa pcmpgtb rcrl nop mov pop ret xor push pop sub jge hlt xchg shl fs ja lret stos jmp mov pop in sti jb mov jno repz repz imull js (bad) push stc (bad) in nop jp push rsqrtps adc cmc lahf dec sbb std in adc cmp movsb push push in rcr inc cmpsl mov mov icebp jle fcoml loop lret or xchg sarl lcall outsb in mov pop lods sub xor inc fsubrl dec and mov fisttpl jns and pushw xor xor mov ljmp cmp lahf jb adc sub cmpsb lods xchg xchg sub enter out cmp mov and cmp xor enter (bad) out rcrl or or push andl call dec dec add sbb je outsl push mov fstpl repnz xchg sbbl repz test stc test rol mov add xchg lds push xchg jmp (bad) clc mov mov daa inc int3 les fld adc mov mov mov repnz mov mov and sbb push push movsl movsl pop and cmp pop pop pop jmp mov clc mov enter stos jl mov scas into pusha ja lcall ficom lock cmpsl xchg mov and or mov mov push cld imul loopne (bad) ss or mov push aaa jp jne out sbb insl out mov xor adc lds je and imul inc cs adc xchg fstl mov ret das xchg push adc ja xchg repz or cmp mull jle sub add jb xor lods and mov inc mov add xor dec or jmp add out pusha add lods sub push movb stc xchg popf inc fwait (bad) mov or adc cmp adc shrl sub bound lret fsubrl sbb sbb fs xor push xor add (bad) (bad) test scas test xor iret xor xchg shl dec push popa imul or cmp cmp into push adc les jg enter punpcklwd or push enter inc fbstp or leave pop andb jno push aam test hlt sti push inc js mov ficomp pop cli rclb push xor (bad) push cmc out xor std dec adc sbb xor sbb xchg jmp push pop pop (bad) add in jge test stos stos ret xchg cmp hlt dec dec cwtl outsb daa inc jecxz add mov add int3 add mov or push lcall bnd jp cli jnp adc mov or ret mov fwait sub cmpsb fnop aas adc mov mov pop xchg cmp pusha out push pop sbb add sub ds in or lods xor cmpsb je mov lret or add je dec dec cltd cmc xchg or add push aam inc sbbb outsb cmp les jge (bad) xor idivb adc js push ds cltd cwtl les sub (bad) rcrb adc xlat mov pop add mov (bad) sub push jl mov ror out mov lock inc popl insb stos cmpsb mov pushf (bad) mov pop pop jmp pop int3 rcrb cmp pushf push aaa stos out out stos pop es sub iret sbb mov adc cmpsl fmull stos dec fimul (bad) dec aaa loopne in dec adc ss (bad) mov mov test icebp js add icebp push stos js ljmp jb int push (bad) pop lret dec ret push data16 dec mov outsl sub pop dec dec or into mov lock (bad) push cwtl mov jo mov push jae add mov adc (bad) bnd mov fildll cmpsl lret movsb lret dec inc sbbl lds jbe repz push xchg repz dec ds movsl mov mov addr16 lret pop push cmp dec cmpsb dec (bad) insb adc gs leave sbb jno inc leave adcb mov cmp (bad) cmp jns jbe add dec fwait add cmp xor into cmpsb inc lods int3 push repz iret pushf adc hlt arpl lds int3 lret xor bound xor inc sub mov popa push out dec out adc and push sub cli test in in push dec dec inc mov push jno mov jp movsl jle mov aad adcl rcl fwait pop push push in xor push mov sti fwait insb mov jbe cmp sbb popf pop mov jmp push xlat add fdiv and mov jle jns cld in hlt sbb iret xchg pop aaa pop adc movsl or pop daa js ja fdivrl fcomp jns jno les pop cld nop xchg cmp frstor cld inc jbe and mov mov imul jge mov in arpl stos imul mov mov in lods daa mov mov cmp mov push push jbe es jge mov imul aad dec dec push loop dec sub cmp bound inc add push mov lock in adc mov sbb cli mov gs push fs jl and jecxz adc add out loop and adc sbb xchg inc es lock adc sbb add mov rcr lds (bad) or ds sub push daa cwtl repz jge mov mov int popf or gs movsl push jecxz rorl jb cs cmp loope pop rcrl jmp sbb pop movsb lcall stc add test out test out and sub ljmp sub jns pop mov fs and and (bad) inc out scas sub mov push sub mov adc div test ficoml or pop lods xor aas negl mov inc cld cli fistp inc jp xor mov xchg ljmp fcomi mov in pop pop pop jne imul lock iret imul xor mov in jbe and mov jecxz jno repz sbb jnp mov ja insl imulb sub mov pop lods outsb negb popf ss cmpsl xor xlat inc dec pinsrw pop rcll jb pop mov mov jg iret jne bound aam outsl insb xchg insl fwait loopne add test mov mov sub mov imul add dec in xchg (bad) lcall mov push push jo push sbb cld mov daa pop xor les sbb dec cli xor (bad) mov and insb pop je clc cwtl cwtl cli aad jle and and stc sbb push in data16 mov divl in jo shr out (bad) push mov cltd cltd adc cmp ret xchg cltd sbb jb pop or iret and fistp fwait nop hlt cmc dec and (bad) aad xchg nop rcrb mov (bad) mov pop cmp add sub mov lods pop sbb sbb aaa push ljmp mov dec nop rcrb xor test xchg (bad) je add movswl xchg cmp lods scas out and lret dec es sub shlb adc xchg pop pop cld add ret mov mov shll sub add ficompl lock dec in test ss cmp test push daa lods fldcw push push xor js sbb lds out or jge xor leave leave pop sbb mov ja dec and lds dec pop fnsave xchg (bad) (bad) pop pop jne mov test cmp jp pop (bad) mov adc decb sub cmc aas xor sahf cmc movntq leave add jle cmp stc stc call xor and mov push add jno (bad) add dec dec or test pop (bad) xchg int3 pop push das popf mov cmp cmpsb dec (bad) insb sbb mov insl in mov adc pop sahf shlb ret ret aam pop lds inc and ret ljmp dec jge stos dec xchg movsb cld sbb jle xor mov lods orb lea mov sbb test sbb out cmp cld xchg xlat lret dec and pop add adc (bad) mov outsb sbb cmc lods jl repnz xchg xchg popf jne mov test cmp mov repz jb lea add xor cli add stc mov repnz xor adc addr16 dec add lea inc aaa push in sahf (bad) jne lcall mov fnstcw int orl inc pushf in dec mov pop add pop jbe dec inc add cmp mov mov ret imul jo lret mov dec cld dec xor push enter xchg popa jns ret ret sbb push movsl sbb into adc jno je loop aaa inc fcmovnu mov fsts inc dec hlt jae inc inc xor xchg push outsb mov xor sub (bad) icebp mov push push in push je call scas out sbb mov sbb aaa mov sbb cltd stos inc adc cmp ret mov or xlat cmpsl repz push jle mov cmpsl dec push xchg xchg mov loop jg jge mov jp fbstp jge mov sub dec xor dec push sbb inc pop cli fldcw mov outsl pop inc std pop scas add sbb adc xor inc dec mov push or imul fidivr mov pop ljmp and ss lds pop and daa pop push jmp ret (bad) mov mov push cmc cmc or insl (bad) jae xchg test test dec jl sbb push xor clc xchg jne add (bad) xchg mov dec in js out adc enter mov je enter jge jne dec sub jl and push pop lahf add clc sarb jne xchg (bad) lods cmc sahf out enter pop xor mov cmp lret push inc adc cmpsl sarb jg inc es jns xchg cld mov xor iret inc cmp aam (bad) mov std stos pop cmc dec mov xchg out popf insl mov sbb fbstp add cmpsb into into popa cmp repnz xor cwtl lock test adc inc stos mov ljmp jmp insb cmp jecxz lods fldcw cmpsl imul mov mov mov dec je icebp cmp push inc sti sbb pop push cli inc cmp stc movq xchg fcomps enter lahf add je out jns xor aaa pop imul das (bad) (bad) fwait or repz push cmp rorl cs sahf ljmp push cmpsb test add dec or repnz je aaa (bad) (bad) call adc mov cmp mov jp ljmp push jb dec mov dec cmp pop ret dec dec jmp out sbb insl xchg sbb fidiv mov mov andl xor loop mov fisttpll add inc in mov jl cld inc repz cs repnz mov mov xor cld mov jbe gs pop dec and ja hlt (bad) lret pop cmp sub imul outsl dec icebp jmp sub xchg fiadd or scas (bad) out pop adc or push mov ljmp pop (bad) and xchg lcall (bad) jle mov sahf mov pop daa loope and notb sbb or add jnp sub cltd inc (bad) mov pop add push sbb repz and cld movsl loop cmc mov sbb ljmp in or bound loopne dec mov inc sub and aam sub jns adc pushf cld pop mov add cwtl movsb mov cmp enter add lock inc stc cmp daa mov ds test outsl stos lods stos stos mov mov cs lcall jns test insb fs cmp fwait loope jnp inc dec sbb repnz fwait cltd (bad) mov mov divb push push pop ljmp sbbb gs popf cs divb push and add mov jle and ficoml scas push mov sub jp xor ret pusha mov sub inc (bad) (bad) dec sub imul leave xor xor mov mov or inc jno (bad) xchg data16 fstl loope adc outsb inc jbe insb stos in aam mov mov adc out and mov lods mov add push and out adc movsb gs dec or repnz jns hlt rorl outsl mov out xchg fisttpl cmp ret sbb push sbb loopne inc mov aas test nop fwait xor push add inc jge cli xchg adc je dec dec inc cmp add lods lods add jle outsb add ficomp jg mov pop xchg or (bad) sti xor sbb add cmp cli push pop std inc xchg lock cmp add mov cmp and negb add or mov mov inc mov xchg xchg or mov rcrl push add movsb mov sub lcall dec insl pop (bad) pop xor enter sub and add dec pusha cwtl dec dec into popf mov cmp dec xchg in testb mov (bad) testb (bad) lock arpl int3 inc iret pop sbb ds mov rorl dec push fmulp mov inc sbb pop lret add push pop push push je (bad) pop ss cs call mov inc add xor dec vcvtdq2pd repnz in loopne cli aas aas cmpsl lods and adc popf adc mov fwait aaa mov scas mov push jle mov es insb dec cmc fs xchg nop pusha stos call pop push cmp clc (bad) imul push add xchg mov lret mov xor aam and addl add sti iret ja add insb jae test or outsb lods fs (bad) mov hlt and test push popa cmp mov test inc xlat rcrl mov ss sbb test cmp das push fwait ret push cmpsl sbb jecxz push scas add and and or in lods sbb movups xor scas les add xchg fs xor mov add add cmp xchg pop (bad) xor dec mov adc pop mov clc inc jne sub add lods sub jle mov test lcall es jge je jns lods loop sub in cmpsl inc (bad) pop loope inc rcll std push dec dec arpl dec jp ljmp push aad mov sub add add lahf and popa adc xchg xor pop fisttpl sbb fiaddl mov push mov xor and mov pop aas lahf repnz es mov (bad) adc pop xchg ja pop jle push out mov imul fwait jno pop jp xchg rolb inc dec mov ds push dec mov lcall inc jbe scas jno mov rcl jnp jns jbe cmpsb pop sub in je dec daa stos xor mov mov sub rcrl js sbb adc jbe jo and (bad) pusha sti mov pusha add push dec fmuls cmp inc ss popf push iret inc inc aad push iret mov cs in ficomp insb push adc out push aaa outsb push cli adc inc add mov cmp enter or mov (bad) push jnp (bad) jne int mov mov sub jns push outsb push orl jae imul xchg daa daa xor jecxz pop lret movb arpl sti iret add cmpsl clts push xchg test bound sub sar iret ss cmpsb in add push jge repnz mov pop sub xor jns push cmpsl pop xchg iret xchg jb jns fwait cmp cmp push xchg clc call test xchg xor andl cmp push cmp pop loope cmp adc scas mov add or call sbb aas setp mov push insb dec cmp mov sbb jne jae jge push lahf push (bad) nop mov int add dec dec or cmp inc push push cmp mov (bad) cmc push xchg push xor arpl dec sub (bad) insl jge cmpsb jmp das push sti mov cmp sub pop push sbb push es mov lods js mov mov push (bad) xchg nop in orl gs mov xor jno xchg mov enter (bad) sub insb mov rcrb ja adc push jge (bad) adc sub mov inc inc cmc xor adc adc push xchg aaa pop jmp pop int3 or push (bad) ja mov xor xchg add sbb inc es mov movsl mov dec insb cmc mov movsl xlat sbb dec fbld cmp aaa xor movsl push (bad) lcall into push add test sub mov xchg push fucomip and xchg pop lcall shlb mov pushf mov loope pop (bad) stc dec and outsl mov push mov jbe test imul pop xchg in outsb aam loop fs cmp mov insl outsb or dec sbb push pushl inc dec rcr loopne sahf sahf or pop aam mov xchg dec cmpsb pop (bad) jnp jbe jmp scas outsb and leave jl adc subl mov push xchg test (bad) jge notl adc std aaa mov std ret sub adc stos mov pop add xor aad sub mov sahf pop shll mov paddsb popf jmp xchg xchg mov xchg stos stos out nop push lret dec ret enter mov pushf inc aas mov addl cmp jnp cmpsl add (bad) int3 inc inc push xchg sbb or pushf repz dec or jae push push or xor cld jo push shl addl push push or jmp imulb cmpsl mov and loopne lret dec adc lea cmpsl aad sbb and int3 cmp rcrl push dec xchg jb or daa push sub push pop sbb push std out ficompl out mov dec mov sbb call or xchg movsb mov enter int3 dec out getsec pop sub daa es mov rdtsc pop and lock leave adc jns adc mov jo or divb xlat cmp cmc mov adc arpl xchg mov fmul pop clc movsb mov test push aad mov in es fsts add cmpsl push clc xchg and or nop xchg loope test xchg orb fwait jle inc mov js je,pn push mov subb es inc mov and adc add (bad) (bad) fisttpl cltd pop bound xchg fisttp repnz ljmp add (bad) jb cld push sarb pop jnp inc pop mov sbb pop (bad) jbe out stos repnz movsl aaa jnp push mov mov cs dec xchg cmp out dec xor pop (bad) pop xor enter sub and les fs int and (bad) mov aam imul sub inc mov lret mov jo cmp scas scas fimul (bad) pop das sub lds test jg mov imul cmp daa mov xor dec dec add out jae scas jnp cmp mov mov adc jne cmc sub lcall leave test adc out das cs lahf (bad) aaa out cmp jno add and ja xchg xchg cld aaa aaa lret ss push scas lods lret sub int and sahf cli repnz pop adcb roll add sbb es cmpsl jg mov push loope cmpw clc jnp push push adc in and mov inc dec or ss jo,pt lahf repz incl cmp movsl jnp cmp add dec loop lret sbb rcll cmp (bad) iret cs into xchg sti sbb sbb and sbb sub clc stc lods jge push aam in pusha cmp mov mov loopne in sti jbe aaa dec cmpsl ficomp pop adc lods mov js aad sub xchg fiadd fcmovnu mov add cmc cmc ret jbe or movsb mov xor push fisubrl aam dec in lods add lods jo pop in xor aaa and mov adc sbb cld mov jns and movsl cmp dec andb xor xchg fcompl sbb and mov cmp mov lods ljmp and ja sbb pop shlb jae out dec xlat xchg cmpsb xchg sub sbb jnp clc inc xchg and pop add idivl jae sbb fistl in or test sub mov adc fisttpll xchg sub or jbe scas fldpi dec pand add jp cmp stos insl jb mov sub dec or out jo cmp ljmp xchg fdivs jp pop inc pop adc lret push cmpsb pop pop movsb lret pop inc pop les xchg pop leave arpl cwtl repz push repnz and fcmovnu inc xchg mov loop,pn dec mov inc jmp and push daa pop clc test xchg imul loop add xchg es lahf inc aam scas push imul stos gs lds push dec dec mov lcall (bad) outsl cli clc stc inc xor lods jbe xchg add stos insb clc pop mov push out in mov push hlt dec xchg fwait fwait or ja adc les addr16 jmp jne mov (bad) (bad) push push sbb xchg push dec jle pop jle inc add adc mov icebp (bad) push (bad) incb add out lods jmp out and (bad) sub ss fnop mov data16 test mov push xor add (bad) stc stc xor stos shrb jne add pop repz push or imul cmpsl xchg add sub rorl cltd aaa cmpsb inc adc inc js arpl call das shrw pop jae sbb mov and call and into cmp mov inc jmp lcall sbb scas ret ret pop cwtl jne jne lahf xor iret adc js add push pushf adc popa leave xor jmp sbb (bad) cmp mov add orb jnp xchg pop jo jno mov insb loop div or lahf pop or mov fs (bad) sarb lock stos adc stos xlat rcrl pop fwait in cltd in or inc (bad) and fcmovnbe (bad) mov push jle ret lods loopne mov fcoml loop mov sub lea push xor jl mov mov hlt sbb cwtl add clc pop sub test jg scas mov and dec sbb lahf adc cmp ljmp or dec dec pop add js adc mov jecxz fnstenv pop mov xor push ljmp cltd test rol loope mov push ds test incb pop scas lods jl jno push (bad) jae sbb loope dec (bad) mov mov lcall or adc cltd mov dec xchg dec fisubr or pop mov xor in jno bound movsl cmp push cmp xchg int3 mov fcompl jmp push cmp mov shrb fadds addr16 adc dec dec inc cli subl scas js fcmovu movb repz push mov cmpsl inc faddl lea fwait push mov pop aas movsl test jmp aad (bad) jmp (bad) rclb xchg cli inc lods outsb (bad) jne jae movzwl bnd adc cmp loopne iret push or and push cwtl scas push sub mov sub or sub hlt jb ss mov pop in add div test xchg xchg icebp push cmp and xor repz fldl inc push in dec cmpsl sahf cltd inc mov adc cs imulb pop push push movsb cmpsb int jmp (bad) test mov dec idivb clc mov push mov pusha call movsl sbb sbb jmp (bad) loop mov pop mov jb push inc int shrb mov adc cmp sbb inc mov jmp inc data16 push rcll in mov loope pop bound mov (bad) mov jl rcl test jg dec xchg inc imul cmpsl jnp repnz xchg and jbe adc or dec xchg mov fistpl dec inc int or cmovbe fiaddl into cs cmp sbb fwait enter pop add insb adc loope dec dec mov arpl and mov sbbl mov jmp and mov mov jle mov dec repz inc fldl rorb cltd aaa jle pop mov mov int3 in or out xchg pop pop fidivrl or lcall test add arpl jb sub imul ficoml sbb jmp or adc adc es and or into cltd shrl scas lea mov mov popa mov pushf mov fidivrl (bad) jns mov push push push ss pop push sbb xchg pop incl enter or mov add mov jnp (bad) sbb mov sarl add mov mov sbb inc and add push sbb stos stos mov xchg sahf faddl mov rcll iret not adcl sub mov sbb cmp push subl jae dec add cs mov fildll cltd mov add ret aam dec int fidiv test fldcw xor lock xor lahf aad lock mov dec sub fstps pushf aaa push add test (bad) jle jl clc into push mov stos outsl mov subb add lret pop or cmpsl imul push xchg inc inc xor inc daa mov outsb cli ret ss (bad) lods or clc lahf sbb std jp adc sbbl mov fistpll or aaa pushf adc mov fwait xchg pop in mov pop fninit mov int3 jne or xor mov out jl and jge int in inc in jbe and mov pop pop sub cltd cli inc stc out enter xchg movsb fimul aam dec adc and and inc inc lods popa idivb data16 inc inc xor pushf aam mov add in pop or mov pop dec xor pushf insb xchg in out mov shr push push push gs sub xor iret into cmp icebp xor shll jnp sub or movsb das cld ja push ja inc inc enter adc mov loope outsl push cmp lahf lods (bad) addr16 mov mov jbe inc inc mov stc sbb mov mov sub repnz into loopne mov pop inc popa mov xor sti enter jne cmp fsts push dec dec xlat outsl aam mov push pushf push rcrl rcrl std std insl (bad) jmp xchg pop sub mov js jb inc int3 clc repz xchg mov sub fsubs loop cwtl lret mov inc es cmp fdivs mov cli cli (bad) jge add sbb ljmp mov jne sbb mov cvtps2pi (bad) xchg fidiv aaa xor sbb std push in inc xchg call mov push outsb and stos lods sbb add or cmp mov sbb in inc outsl xchg xchg xchg fwait push mov sarb xor xchg dec add xor mov fidivl in aaa fistl fs sbbb push aad pop push ja and roll test outsb mov sbb push and fwait and add inc sbb (bad) mov lcall push repz call faddl add fldcw mov mov jne sub popa cvtps2pd jge pop dec cmp popf pushf pop lods lret cmp dec movb lods sub ds lcall (bad) pop test aad pop inc sti mov xor (bad) dec out test cmpsb ds mov push push and cli inc add mov mov pushf mov push fs cmp add or mov outsl push xchg add pop in in sahf sahf dec (bad) push push mov outsb or adc data16 push mul add sub sti xor add in icebp daa cmp xor jb jae sbb (bad) popf adc xchg pop out sbb repz sub add (bad) sbb adc jo fwait push mov repz mov int mov std xchg pop jle fldl cmpl sbb mov push clc xchg and mov mov dec clc sub jp fnstenv jne or mov pop (bad) xor rolb iret pushf cli or inc iret aam sbb pop leave leave sbb jg lret (bad) mov mov jg inc inc fist xor push js xchg fdivl nop push hlt stc xchg lods sub aam in cmp fxch cmp shrl out sbb rcll pop nop rclb mov or jp mov jl mov or incb or xor test ljmp xchg xchg das add test test sub pop daa mov inc inc cmpsb enter outsb add inc inc fstps adc add add shlb adc in jne or out mov psubusw sbb jne sbb mov sub jo lcall xchg mov sub sub add mov insl xor xchg add outsl mov mov mov add hlt test insl insl cmpsb cmpsl icebp insl mov jle test add idivl int and sbb push in inc and imul push mov jns inc jg popf push adc js mov (bad) or jmp out pop jae fistpl xchg xor mov inc sti push mov inc jnp xor mov add mov jo sbb inc (bad) (bad) pop in frstor jmp leave xor mov dec xor (bad) add in and or vsubss dec aad bound add and push xchg xchg stc and (bad) pushaw ljmp gs popf imul sub sub inc sub (bad) xchg and dec (bad) movsb out push jp dec in test and popa cmpsb (bad) push fwait outsl lock test clc xor icebp cmpsl jge jle test cltd and cmp popf inc pop jmp cli fstps inc jbe jno mov dec fimull cwtl add je out (bad) mov in arpl pop pop pop imul test or dec add inc and inc mov fmuls pop xchg cvtps2pd xchg js sbb or popa scas fprem1 jo xchg add sub mov sub stc iret push jns mov xor gs int (bad) (bad) ss fildll (bad) pushf pushf and cmp pushl jecxz insl push nop push inc cmp fidiv aad jb ret es vpunpckhqdq add cmp jbe add dec orl (bad) div test mov mov mov mov xchg jb pop and lret mov xchg xchg loopne xor rcl fmull mov cmpl push push push xchg fwait addr16 pop xchg outsl push push or and xor ret cwtl out bnd aad adc stos shrb or (bad) repz jne ret sbb lea or (bad) jmp and ficom mov in cmc lds call push pop pop lea jmp or fimul cmp and fs fchs out and loopne add js mov cmp jg test jno jno add pop rol mov in push mov mov add mov int3 jb mov or loop push and jnp xlat push mov imul out mov outsb (bad) cmpl (bad) xor insl dec xchg sub fistl in xchg or insl push insl addr16 movsb lret outsb aas jno add lahf cltd sub adc addr16 insl jno mov sub push fcmovnu xchg jnp js mov jle pop testl xchg shrb test sbb rorb mov jnp push imul scas dec ret jl jg push dec aam mov mov out test add push dec dec inc mov mov sbb xchg push movsl movsl mov sub and cmp lret push test xchg stos stos divl jbe add (bad) out int3 mov lods dec call cmp shll out or pop pop dec mov dec sbb push aad gs cmc insl cmpsl fisub push cmc cmc or test (bad) jae sbb in jle xchg jns inc sub dec jmp ror leave dec add out and (bad) rol (bad) push push addr16 mov lds mov xchg (bad) rcl sub das xchg sti sarl mov xor jns lds xlat repnz pusha adc sub aaa testl mov jae ljmp (bad) pop pusha add push sbb cs repnz mov adc xadd or or inc gs dec cmpl mov dec pop sbb pop loope jmp ja mov test jae ljmp lcall fiaddl and aam xor push push int inc inc cwtl cwtl or divb out jmp jb in xor cmp mov pop sti negl dec push pop push push push sbb xchg pop imul cld jge push lret data16 dec fnstenv sbb jns jl addr16 xchg aas insl inc aas fcomp sbb mov mov aam cmp mov fcmovnu or jbe inc ret inc cmp inc in stos nop xor or repz push add or popa push inc or push je lret (bad) pop aaa mov push out sahf shrl loope mov es repnz test push adc popf and cli (bad) sti faddl push cmp xchg xor mov hlt add inc sub jmp sub gs or ret mov icebp sub scas jmp inc mov pop insb enter movsb lods out cmp push push push andl cmp xchg mov repz sbb and mov insb insb in jp fistl lret out fwait outsb lret loop mov movsb mov lds xchg mov outsb add lods sub push (bad) cli pushl jl xchg into push adc mov sub and cmp mov cmc xchg sub pop lods mov xor enter addr16 sbb inc sub pop pop inc adcl leave ret jnp cli mov xor ljmp aaa mov icebp in xor mov inc add xchg mov nop sbb jnp cmp gs sub adc jno lcall pop outsb adc jno outsl cmpsb stos clc and add jl inc inc jmp dec je out mov cmp ss stos or jae xchg clc icebp jb sbb xchg jns inc sub and repnz dec icebp cmp mov (bad) jno sub adc mov jno mov sub push fcmovnbe pop jae repnz push push rol mov lahf cmp scas addr16 orl lahf lahf out dec (bad) or adc in jle mov jb fsubrs das pop aam dec pop xchg scas mov mov sbb ja jmp xor testl or xchg pop cmpsl mov xchg sub jmp pop imul sbb push lods cwtl cwtl and push dec push mov lea xor sbb dec mov mov mov leave or repnz dec repz sbb js outsl es test fisttpll or clc outsl loopne adc (bad) mov (bad) andl shrb loopne pusha add adc mov sbb lods push add cmpsb cmp aas mov repz data16 add rorl fcoml inc sbb push jne pop cmp xchg cmpsb push mov push pop or jmp pop xchg or lret pop pop xchg xchg push push imul inc mov push lods xlat sub adc mov mov cmc mov jnp loop sbb iret daa xchg gs mov pop out fmull mov arpl add pop aam sub cmpsl cmp sub mov out test pop aas inc insb fdiv insl xchg scas inc or stos lods scas movb adc popf and sub pop pop push xor in out mov inc in scas outsb lods cltd cmp add push add sbb pop xor shrb cmp mov adc jmp loope sar push cmp xor jp mov mov jp xchg out adc out (bad) mov inc dec mov stc add sbb add int mov and int3 (bad) jmp out fisttp mov lds jp xchg outsl push xlat sub dec jle pushl lcall inc cld lds xchg (bad) and mov fnstcw add fwait mov int3 and stos rcll mov add sbb dec mov loop pop dec fisttp test cmpsl xor scas (bad) mov aad cmp xor nop lea mov xor xlat push cmp leave leave dec adc lds or dec sbbl sbb and mov (bad) push mov mov add push nop in fidivl lahf mov lahf lahf bswap jge repz cmp inc add and add movsb sub sub (bad) jecxz adc or jecxz ja int or xchg stos or mov scas (bad) lret push popf popf mov xchg scas lock xchg cli and add pop cmp (bad) leave icebp xchg fs mov or add lods (bad) jne sub int3 sahf lods adc ret cwtl loopne mov mov jns repz test hlt scas mov jae lea xchg popa (bad) in mov dec sbbl pop pushf negl inc push adc in test xor mov (bad) out jns shll mov pop jno jns loopne cmovno je or sub add dec aaa std dec les insb insl sbb dec jg (bad) jge (bad) int3 into aam pop sub push inc add or push add dec push loope mov imul inc add push cmp fdivl arpl out and jno pop (bad) daa lds jnp adc mov xchg popa mov (bad) pop sub mov or or (bad) js shlb push push mov and push sbb ds mov fistl rcl insl bswap cs push out jp cmp gs popa out inc pusha xchg les out mov xor sbb xor add cs adc jbe and dec ror mov imul jl jmp jns cwtl adc std cmp mov dec mov push xor cmp std mov push cmp add mov addb lods mov sahf mov hlt (bad) cmpsl jno pushf mov inc (bad) andl bound sbb fbstp add or and pop and fistl rcrl xor inc js lds lcall shrl lea lds or cmpl les adc xlat subl sub push push out int3 mov mov xor repnz pushw or lds popa add pop mov push sahf fistl mov (bad) dec mov jo pop adc and inc std xchg add fdivrs jne lahf pcmpgtw sbb mov negl sbb stc jp inc pop cmp fstps and push jns xor add dec mov xor int or (bad) cmp pop fst push cmpsl mov xchg sub loope cmp das enter pop push sbb dec push mov pushf popf pop jne pop mov leave pop rclb repz cmc cmp add xor jnp arpl and iret out cmpl pop lea ja xchg daa daa xor adc sub rorl push push lea or mov and push movsl div pop loopne xchg push adc lods mov add inc out repz add dec xor or inc popa loopne cmovno insb out or ficompl push ficomp aam add pop xchg sub pop xchg xchg pusha out fcoml add add repz (bad) inc inc mov outsl iret mov sbb inc and jo add rorl jae xchg ja lock int3 mov inc lret dec xchg add jae shrb mov and push call sub sub insb pusha mov dec mov (bad) sub addr16 and add pushf add mov sub mov shlb push push push stc inc pop xchg lods lods jo cli stos stos ret gs fwait icebp dec xchg movsb loope inc adcl fcmovbe int3 call dec dec add data16 js cwtl fwait xchg pop in mov sbb ret mov sub repnz es jge fsubrs ja mov adc loope je mov movsb out cmc or fsubrs mov mov xor leave add mov dec (bad) fldcw aas aam dec push test sbb sbb dec xchg mov lock insb call or lds bound fs mov jg and cli gs xor lahf loop inc (bad) adc sub es ret pop pop test ss sub and lds xlat lret nop std (bad) imul mov pop mov cmp xchg mov test xchg loope adc jns loop xor out cltd and and inc mov into jmp adc dec xchg dec insl add mov lods dec xor rcrb add mov pop xchg mov pop std std push adc mov xchg xchg scas js mov add fcoms lock maxps sbb negl sbb add movsb ret lods and stc (bad) and xor and mov xor xchg movsl mov jnp jnp fisubrl dec fstpl xorl lcall xchg xchg and pushf pusha jg jo int3 mov es sub lcall adc jg jp lock ffreep int3 inc inc not or inc (bad) out loope push rorl dec mov xchg dec fnop divb (bad) xor dec mov inc inc fist addl dec xchg fdivl das popl or push push fs push ret shlb add decl mov sbbl cmp or mov lcall jno (bad) imul push out loope inc ss dec lea pop nop (bad) pop fcmovu lds mov mov pcmpgtb xchg outsl rdpmc push push cld jl sub (bad) out lret (bad) xor fs sbb mov cmp (bad) jg pusha mov xor mov scas push inc lret xor add push call sbb mov in mov pusha enter or xor pop clc stc inc in sub mov xchg rcrl imul jl adc addl lds xchg outsb jmpw mov mov and mov mov sahf pop xchg lcall data16 push sub pop mov lahf in cmp lock inc cmp or pop inc ss addr16 mov adc cmp aaa inc inc (bad) mov daa das fsubl dec inc movsb out scas arpl fisttp xor inc mov int (bad) or gs push dec or out add pushf pop inc mov mov adc lds xchg sbb in out and popa mov inc out daa xor add (bad) les adc pop pop sahf push dec sbb and (bad) cli mov add inc xor repz lret add jp adc sbb loope and mov insb insb mov xor mov xchg mov js cltd cwtl push fimul mov xchg mov je pop jb mov pop cmp xchg pop inc or imulb mov add cmp gs pop popa clc pop ja and mov out sbb inc add mov push loop (bad) mov jg fisub cmpsl (bad) jb lods rcrl mov ja and (bad) pop inc xchg cmpsl (bad) xchg sbb push jb int jle lds loope xor (bad) dec dec mov insb and fwait sub xor into into cmp or test stos rorl loope sub cmp xor add je pop lods cld in pop mov mov cmp dec push xor daa les (bad) enter (bad) stc xchg push mov xchg out (bad) mov sbb lock mov dec jno push jae mov in in mov das inc ficoml xchg sbb into cmp pushf lea inc add or or movsl mov xchg xchg pop push xchg fstl stos test lcall aaa jl ret xor arpl pop aaa cwtl ret shl out lods jmp paddq push mov adc mov stos scas mov ds mov push adc xchg sbb xchg (bad) xor negl xchg mov aam rcr adc mov xchg mov jbe shrl push cmp pop out push lods push pop pop nop xchg inc adc sbb sar rclb jmp into cmp mov rorl popf fsts loop jl mov cmpsb jecxz inc lea push push mov (bad) ds dec mov jbe cmpsl jo mov aam mov xor shrl (bad) (bad) das jecxz jmp outsb loope xor das cs cmp scas push std leave ja in test fsts mov add jmp rclb (bad) (bad) mov mov push loopne fnstenv xchg jp movsl ss lea jns dec or mov add pop pop pop cmpsb cmp arpl pop xor movsl inc cmpsl out (bad) jle add clc adc cs cli mov gs xor sub shll sub dec add hlt out inc inc out test mov jnp push test pop push and fldenv stc sbb mov lcall in subl sub fidiv std lcall mov outsl shrb stos movsl adc sbb mov inc push mov sarl jns cmp imul pusha imul mov and sub mov outsl xchg lahf (bad) inc pop pop sbb adc add xor push sbb lret jp shlb (bad) add shr push jg stos sahf xor cltd test or inc jge gs jecxz xlat or dec pop scas cmp daa lcall pushf cld sbb aaa ret sbb (bad) out fcomp mov ret pop adc ret (bad) xor rorl sarl loope sub cmp xor mov inc inc adc scas lds outsb pop adc imul cmc cmp inc aas sbb ss or addl jbe pop cli mov cmp and (bad) jb jl popf xchg jmp icebp sahf int ret (bad) mov sbb and jno cld loopnew cmp or xor push fstps push cwtl aaa add lods test loope shrb sahf mov test xchg mov push and test pop push cmp pop mov or fldcw cs push add jecxz in popf and cld fs xlat cltd cmp (bad) jmp or ret adc lcall ret pop mov aad sub and cmp pop or mull inc xchg out data16 inc add mov push aas incb add cmc test lahf mull negb icebp dec icebp ja jge ljmp push int out jp and mov in fstl data16 and scas pop sub push jne (bad) jb add je fcmovbe pop xor mov ret xor mov test xchg xchg add mov jnp sub ljmp jnp jle xor cmova shll ljmp fldl sbb addr16 es stos sahf shlb je mov and loop mov sbb mov xor fs jle stos (bad) clc push push fildll inc sub or adc fcoms inc shrl jl mov in xchg out mov loop push push arpl dec xor pushl aad out rolb push jp adc andl jl xor test clc lcall and lcall pop push (bad) mov mov insl rcr push addl xchg xchg loop xor mov lcall iret (bad) xor sbb popl add in jb add outsl dec xrstor (bad) (bad) jl mov (bad) data16 inc inc jb (bad) andl test sbb pop fucom mov lahf pop pushl fwait lret cmpsb jle jae clc push fisttp fnstenv xchg lods fs sub add cmp jbe add in jae cs bnd ret xor in sub int cmp addl test movsb les or xchg stos jg fmul into pop lods cmp mov pop pop leave inc push pop push nop nop jne aad imul dec pop or jge popf out data16 in inc orl lea cmpsl mov in sti xchg inc aas test loopne dec xchg jg adc xchg ljmp xor out jmp jle inc jbe push aaa adc imul cltd lds fild test push aad mov xor inc sub rclb push aas add add cli fldcw dec add inc adc xchg aad dec add jae or insl loope inc das pop movsb sub test mov outsb sub lcall test aam sub pusha sub leave xchg add or ljmp lds (bad) push or pop lahf push arpl pop add aaa mov sbb fs or int clc (bad) lods xor push jo push mov cs test or mov outsb (bad) (bad) popa bound jmp push xlat xor mov (bad) repz stos push insb mov pushf mov sub sub mov js repz lcall mov jge shlb pop mov fisttpl movl mov insl dec dec xchg xchg mov cmp popa fnop adc sbb int jo vpcmpeqb mov imul lret push push jnp add push push xchg mov add mov sub xchg mov dec sub scas mov ss in inc jmp lret daa in loop inc (bad) and loop sbb cmpsl insl sbb mov push lcall mov and sub inc iret out inc fistpl mov add mov push mov add je fsubp inc into pop or dec sub clc mov aad xor pusha js sti cmp shrb imul cmc xchg pop sub test fldln2 pop push orb ficom ficomp push ret ljmp leave add stos mov push stos leave dec dec popf fwait imul jnp ficoml pop cs pop xchg or push inc outsb cli jp out xchg xchg mov insl push push arpl or popf push xor mov adc out jle enter fwait arpl les scas test cmp sahf xor dec fwait xchg hlt cmc mov in aas repz mov xchg xchg and xor mov mov (bad) pop stos push xchg es dec notb dec dec dec push adc cmpsl cmpsl jge orl scas adc sahf sub cmp sti aaa stos out lods icebp nop pop xchg adc popf xchg pop pop sbb popa out lea pop in pop and pop or or les imul jge mov les insb sub aam xchg mov aaa imul out pop sbb sub loope add es sub pop pop lret add jne in jmp outsb adc xor adc add pop loopne roll xlat adc sbb mov pop mov test adc inc and inc mov xchg xchg das out rol mov scas cmp xchg xor sbb (bad) xchg sub and out and imul popa in out int3 mov xor mov in mov inc add sub xchg adc lods pop add pop pop and xchg pop imul repz cmpsl xchg jb,pn (bad) stos mov nop aam addr16 sbb jmp mov pop addr16 mov repz stc int lret enter or lea adc or xchg (bad) mov (bad) dec std mov mov push popf sahf jnp pop ds xor sahf in movsl out xor arpl hlt fistpl roll (bad) jp rcr push adc gs pushf inc jae pop xchg adc lcall xchg sub add call (bad) mov and (bad) push clc stc inc jo lods lods jno mov xor out jl cmp nop xchg test cwtl fwait xor push add sti or test in jl mov test xchg add push (bad) cmpsb outsb push pop mov mov (bad) xchg adcl adc jb fcmovu insb mov xor jbe cli mov js lock mov icebp adc dec leave icebp clc add das call (bad) in jp inc jmp leave int3 fisubl repnz jmp js dec dec decb test xchg not pop pop add push out sub xchg mov jecxz fildll clc rcl stos stos out out out mov push adc mov bts imulb jno cmp lahf add and adc divb xchg cld sarl in lock dec push shrl xor rcll xor dec ja sbbl cmp push push cli nop jecxz mov imul xor or cli data16 cmp fsubrs jbe sub xlat and es pop adc sbb xchg into add or pop pop fdivl out mov into lods xor pop push add cmp mov jns mov add and popa and fnstsw inc loope fcomps loopne inc aam and loope add and js cld mov lock loope cli jno mov add icebp nop sbb aam lods lea (bad) mov pop and push shrl addr16 (bad) sub shrb push sub mov cmpsb sub pop lds and rorb push (bad) cs mov lcall push loop pusha test ja fwait gs inc mov pop test dec rolb jbe mov (bad) dec or popf xchg imul loop adc ja mov lahf icebp aaa test and cmp popf inc add pop out sahf or xchg rorl scas add inc daa cs pop inc adc or push repnz mov int3 inc (bad) jae xor out push pop and mov lds nop inc jge or sub lods mov pop insl pop stc xchg shrb mov (bad) popa sbbb bound xchg and addr16 or cmp sub push sbb outsl jmp push jl insl cmp sub jmp jno test push xor xlat jne enter mov mov pushl mov mov adc test in (bad) push sahf fistl dec mov mov and xchg lods arpl mov push es adc or adc lock stc sbb je (bad) jb pop ret or stos lds cmpsl enter push pop mov ss pop mov xor or aam repnz mov shrb jge or cli pop je outsb pop xchg (bad) pop int and sub and jmp mov inc mov dec xor jmp div cmovnp mov int subl mov mov ds arpl jmp jb in xor and sbb mov push div pop pop sub out pop fldl add and icebp jge add out mov mov jne mov (bad) fistpl mov sub or push popaw lcallw ret stc cmp xchg jg lcall cmc cmpsl pop cmpsl mov dec mov fist cld bound rclb add call and inc inc call insl repnz dec nop call jbe jo icebp xor mov cmp push int3 arpl xor (bad) jmp xor mov ljmp xchg sbb daa fsubs ret pop aam sub sub mov push push push cltd xchg xchg pop sub xchg xor jo and mov lods jl jns sub add (bad) cmc jp or loop aam fs mov adc es or icebp or xor stos (bad) sub (bad) ljmp cmpsb or pop sub div jge sub sub jo daa aam loope js xor jno pop adc in dec xor sbb lret mov stos test pop pop push scas lahf je fisttpl push out loop inc ja es jne cmp loop xchg mov mov adc cs out sub out dec sub mov add push push push xor pop and shrb lcall ret aam in jb movsl and cmpl out xchg daa icebp divb loop,pn inc adc adc adc mov mov push add bound adc cmp cs dec add cltd jnp aam mov xor sbb ror xor dec dec fcmovbe das pop incb jo jl jmp ret stos mov and mov add (bad) (bad) xor js adc xbegin add movsb sbb pop push ds and fild es jmp idivb nop jmp adc pop pop add mov xchg inc xchg pop fist inc mov pop ret adc sub andps stc in adc insl add mov adc adc add rcrl mov mov ret jae and popa or je cmc xchg and inc repnz jo and dec xor mov and xchg or test stc leave js push lret mov addl jge (bad) clc inc jmp mov mov mov xor xor nop movsb int rcrl jne and jb repz push sbb fimul and in sahf mov std add pop out jg push ror mov mov dec push test pop xchg sub dec call (bad) xchg sbb sbb sbb xor push cld mov xchg (bad) xor inc sti clc inc inc cs scas incl aas sbb jge pop gs cmp hlt sub sub mov dec pop in xor fistpl rcrb stos add out xor jge dec dec movsl push push and or pop and add cmc cmc test lea std icebp xchg adc aad and insb push insl adc and adc in or mov stos stos jmp push and and dec adc addr16 divb jno mov shrb lods (bad) mov or bound nop dec xchg xchg fisubrl outsb jle jle sbb (bad) push xchg je or xchg add inc (bad) (bad) idivb add das pop pop inc inc (bad) jmp and sub gs push pop imul inc xchg xor push test or mov ret arpl sti mov push push sti mov shrb aad call (bad) (bad) adc dec mov xchg cmpsl add mov pop dec dec xor lock repz sbb mov pop and pop sub cli add cs cli cmpsl (bad) ja sbb ljmp ss push add jmp push fsubr jl fcmovu mov (bad) insb sbb mov adc mov popf int loopne jnp sub mov mov (bad) (bad) sti add in and out sub fs sbb movups add mov ret call int ficompl add test xchg (bad) jbe push add jnp outsb cmp mov int3 addl in es sbb call inc or jle out (bad) clc sub imul fs add aam pusha cmp out jbe enter jne mov out jne mov (bad) fs push xchg insb jo and mov mov movsl (bad) mov daa fcomps mov js out inc (bad) mov cmc add adc ficoml xchg push push int mov push add fisubrl jp adc out jbe sbb jle es and dec ja iret int cli sti cmp repz jnp aam (bad) and cwtl push push jae dec jbe in out xchg rcr outsl outsl pop test int test dec sub mov push insl fadds pop lret aam mov xchg pop aas das inc inc sub daa inc lods sub clc test fdiv jns mov add outsb sbb sbb lods pcmpgtw jg sub cmp ljmp fcomp addr16 ret mov push fcmovnu std mov js dec mov dec jle push push insl mov and lcall mov cli (bad) mov jp jno hlt addl repnz ss inc les add and and dec scas clc inc push in mov pop push mov inc ret popf insl rcl test mov stc sbb adc mov arpl cs cmp inc test xor std cmc xchg addr16 jnp mov int3 enter fcoms jmp sbb (bad) pop adc xor (bad) mov mov stc xchg lods popf pushf jl pop inc int3 test shr movsl pop and cmp out push inc sub sub mov out mov sub sahf cmpsl push adc cld int3 loopne cmp flds and sub sub lds xor rol and xor scas scas fsubp inc pop jo jg sub aas push mov movsl aad xchg mov imul ja and adc bound imul mov mov in jmp add add je in xchg fnstsw popf rcl lock xor cmp cmpsl mov sub adc push xor jno cmp test mov js xor mov je and jge aaa outsl rorb adc and pop lods push (bad) out sbbl idivl mov xchg cltd pusha push pop and rcll fdivs rdmsr xor sub ficom fsts sub orl mov xor fisttpll gs fistpl mov cmp (bad) sbb cltd lahf xor pusha push xchg inc cs leave int3 mov test or mov xchg daa xor popf adc mov and inc pop pop jg test sar (bad) les stc and adcl in in push movb ret ret insl outsl mov (bad) mov or mov mov cltd add jecxz out (bad) (bad) int3 js or pop pop adc inc in jle gs dec jg sahf sbb test imulb dec (bad) xor dec sub rorb mov loope in add paddw lods jb pop lods scas nop js inc adc fistpll fwait xchg into data16 cmpsl cmp dec stc pusha sub pop mov push mov and insb out cmp stos sub stos add mov stos inc cmp (bad) jecxz out pop outsl push push cmc je test (bad) jae pop cmp push out popf mov in inc ja jns jbe add mov and push fldenv inc push and and inc pop push add aam jbe nop and cmp cltd sub lock lret imul push pop mov jo popa cmp sbb xor add adc (bad) mov jnp repz enter jb,pt mov lods cmpsl mov adc lea xchg jns add lds adcl cs fist fwait sahf pop jns aad bound push iret xchg xchg mov push cmpsb stos popa and lods ljmp and ret (bad) pop pop rcl sub sub and mov jns or add sub push mov ds stos stos fcmovu push push icebp icebp addl sbb insl insl push js ss aaa aaa int dec dec add push push bound jo dec ret push call lea mov (bad) pop pop cltd cltd aam jg jge aas aas repz out out sub adc and cmp jp jne push test or div adc xor mov sub pop pop inc inc aad cld out movl jg std mov into into addb sbb push push cmpsb cmpsb mov mov lahf adc popa popa ds in xchg xchg mov nop test and (bad) dec dec int aas aas xor mov jne mov or cmpsl std std repz iret inc inc sbb inc fwait fwait jecxz dec dec push push aas aas mov xchg xchg and xor rcl aaa aaa dec dec je inc inc (bad) or or sbb (bad) (bad) push movsb cmc cmc or adc imul in icebp icebp pop pop out clc clc cmp sub sbb sbb dec test jo pop (bad) adc div dec dec (bad) cld outsl cmp arpl sbb mov push pop pop fcmovu jmp repz lock rcll sub loope loope mov (bad) mov mov in ljmp in out movsl bound cld xor popa out jbe cmp lds ja ljmp add adc cmpsl movl sub arpl in mov outsl pop bound mov and inc ss js and addb push aas push lahf jg out loope dec xchg mov adc out or xor leave inc cmp pusha xor cmp popa pop int3 jno nop in dec pmaxub cld cmpl shll in js std dec outsb loope int push inc inc cmc xor adc call push pushl xchg lcall add in test mov ds lahf js and dec inc es mov mov add ss loope in daa inc push shrl pushf je cmp out cwtl in sub out pop pusha push push gs fisubl sub jg sbb arpl dec das fidiv adc sub push outsl mov mov out pop jmp cmp lods and test sub pop inc pop fs jno lcall and push jbe daa outsb xor pop int pop dec cli (bad) cmc push sbb cmp mov mov mov xchg stc jne jmp add jns xor aam leave dec dec xlat push loope in cmp cmp nop and xchg adc sub out add jp int3 mov pusha jb shl sub or xchg dec or leave pop cs mov aaa enter ja jl xor or add mov xor mov add push mov add mov pop mov push testl (bad) ret imul std ficomp push mov fwait add jne xor iret nop pop leave or dec mov orb pop popa jae fsubs xchg inc xor mov movl mov arpl imul mov in xchg jge xchg (bad) mov xor mov cmp jae aad dec adc jge pushf movsl push rorl sbb or or mov pop pop fcompl cmc cli lret jp std insl out adc rclb xchg jmp cmp add push jg gs sub call add fstpl jp or fnstcw repz push xor and xchg mov sahf lcall pop jg outsl or push mov xor cwtl or sub out or stos inc and adc jmp cmp xchg incb rol pusha and insl cli fcompp pop aad enter imul push jns sbb mov shrl cmp cltd outsl lock mov push mov add mov nop xchg pop mov (bad) xlat (bad) rcrb cs sub add mov and jmp xor shlb cmc cmp push dec es xchg mov ret jnp repz inc scas adc rcl jb pop ret aam data16 lret cwtl shlb mov movsb mov inc inc ljmp popa psrlw cltd mov jecxz xor sbb push insl fs mov sub sbb fdivp in insb cmp ljmp adc dec sbb cmp pusha pushf cwtl test inc je inc dec mov xchg inc insb fdivrs insl xor lds mov orl pop stc mov int jge cmp dec fwait (bad) outsb or dec adc cmp xchg push mov (bad) fcomps push dec (bad) jo rcrl fcmovbe shrb jl int cmp mov outsb jo ret lock subl sub popf (bad) mov sub add (bad) sub popf mov ja jb or ds js jg lods out push add jns mov push mov sub nop mov fstpl jle push movsl movsl mov and popf mov pop adc pop sbb scas and xor xor dec ret cmp repnz mov add add or in dec pop add in mov or adc push mov jne jne mov dec mov lock xor test mov xorl pop xor in sub mov mov cwtl repnz daa adc pop (bad) shll lea fstps test push mov in xchg fcmovnbe push clc clc inc sahf mov out pop xchg loop scas and cmp pop mov mov push mov jl decb notb pop addr16 leave xchg xchg xor pop adc sbb adc out loop add inc nop addb inc rclb and cli jne stos pop fwait fwait adc aaa jp gs pusha sub js adc push (bad) sti bound movsb cld inc pop cmp fadd or lahf shr data16 add dec mov test out cmp std (bad) lock push push aaa mov add push push cmc jle mov jno pushf pop cmpsb push ficomp cmc addb in or gs fnclex (bad) xor and dec or mov ficom enter test cmp pop add cmpsb push leave hlt int3 clc mov (bad) cmpsb (bad) lea and iret fist push jl mov es pavgusb xlat add mov mov movsb adc int pop data16 (bad) mov subl mov dec and pop jbe,pt fistpl or pusha arpl aam jecxz sub shrb rcl sarl sti xor mov cmp pop inc jae rcrb jmp pop xor mov adc lds mov movsl mov and xchg insl (bad) cmc or dec pop test push push add mov or and call rorb push aas in scas int3 popf dec popa or dec dec outsl cmpsl pop pop popf push das (bad) je popf jns cmp mov imul xor push add mov pushf cwtl adc cld cmp lret mov sbb out cwtl mov xor mov and (bad) in in push push imul flds es stos stos aaa stc cltd test pushf inc iret cmpsl or insb adc sub sub xchg shrl jmp data16 mov lcall sbb (bad) icebp jb push ret fldl cmp rol (bad) rcr mov (bad) sub ret mov mov sarl lahf jg out into or xchg or popa sbb sub rolb mov packuswb push aaa xchg (bad) lret out not fwait dec dec xchg out aaa dec mov jge mov pop in in jmp mov or mov sbb stos lods sti jb sbb lods std push xchg in mov pop roll adc mull cld push addr16 movsl xor imul and jg (bad) lods adc jp fsubr and std inc (bad) dec test ss xchg pop aas inc sti dec daa rcrb (bad) (bad) or add pop and cli jne add jo mov sti nop push cmp inc cmp ss lock sub mov out sbbb daa out sbb pop and pop out lods inc es ret cmp pop aas repz inc lahf sbb lds push stos iret fstps mov sarl aad or repnz lea add mov negb xchg int3 inc out inc xor outsl push ds xchg jno loopne sbb outsb pop (bad) xor cmpsb (bad) mov pop leave iret adc gs fs fild fisubrl jl mov ja dec testl sbb mov pop in daa pop or stos push cmp scas int push jnp movsb flds ds ret imul pop xchg push dec mov mov xchg dec jmp jmp (bad) jle mov daa out mov insl fsubl adc xor es dec fstl lahf cwtl test push adc sbb repnz cmp outsl mov hlt scas scas fimul push sub push pop sbb loope jno in adc fwait jmp aas jmp movsl mov addr16 adc popf dec mov cs sahf sbb xor rcl lea repnz out subl out xor fisubrl cmc cmp sbb scas outsb ja push testl xor lcall sbb add mov aad punpckldq mov lods xor movsl popf inc into mov ljmp fldl lods sub arpl fs popf mov xchg mov in mov test stc insb sarl dec ror loopne mov mov or pop add jmp push int3 int3 inc adc mov pusha loope cmp lret rcrb dec outsl fdivs xor cli xchg arpl imulb cmp sub jae jge fwait dec in xchg (bad) pop fbld add and xchg ds ret jmp data16 dec xchg cmp outsl clc leave ljmp push mov data16 in js mov loop adc in push ror (bad) ret je pop (bad) mov lea cmp (bad) and lret sub or out and or lock fldcw lock adc mov lock sti fs rol shr mov lcall mov andb adc mov call pop aam pop in add aad stos int3 ljmp adc xchg icebp (bad) xchg aas test mov test push lods fisttp jp sub ss jp add out mov popa push std fistpl xor mov cmp mov inc cmc addr16 fdivl dec dec xor lds fdivrs or les in push or mov cwtl int in xchg out stc sar xchg inc or es ret psadbw das sbb imul ret jp mov mov mov push inc scas (bad) (bad) (bad) xchg icebp jmp popa test dec ds roll sub xchg mov pop lahf and mov lret mov ret push mov mov clc mov in insb or inc movsb mov daa daa call (bad) cmp aam mov jle ja jg rorl push out loopne xchg imul and fsts popf std add (bad) mov jno mov xchg jg loop dec js mov (bad) int and mov or sub std sub lcall leave fiadd fnsave cli mov mov lcall or xchg sub adc push and cwtl xchg lahf dec mov dec xor addr16 aas and jbe adc lret scas stos stos inc push inc push ficom fcmovnu call stos ret cmp lcall push testl mov cld sbb dec pop ret dec dec jmp out ret lret dec mov and or mov pop stc inc ret mov mov adc jns gs into sub repnz xor lock inc hlt inc or xchg jbe jl in movsb daa push outsb adc cmp mov scas dec adc imul push imul sti aas jecxz add inc pushf sub cld popf aad les mov leave lds add mov or and shlb fwait jmp adc ret or push and repz sahf mov mov cmc js test mov mov test sahf clc pushf mov arpl and test and pop lret xor nop push sbb or push ret jno pop adc lret pop mov imull insl xchg cmp jb inc sub (bad) jne subb out or (bad) jb fcompl dec pop xchg sub data16 dec pop cli mov push dec sub mov mov mov lods js mov mov scas ret outsb add inc popa imul sub add inc mov leave leave dec les add sub inc mov mov pop ret push add nopl es lock mov aaa xchg sahf xor (bad) mov (bad) and pushl xor lock stc sbb cmp ds jo push mov mov fwait test rcl adc fisttpl out fcompp jg push aam inc inc cmp sbb or push repnz scas test sahf dec jns aad (bad) out jo mov pop mov sbb scas and insb inc mov (bad) mov aam fcoms cmpsl sub test lods push (bad) ljmp gs sub loop mov iret and fist and push add insl je insl pop outsb mov jmp mov neg cmp mov mov mov (bad) and test adc adc pop popa mov repz mov sub ret jp jns fs sub adc cmp mov push mov and dec pop test (bad) mov mov addr16 aaa push incl out or push lods jnp dec es repnz xor jnp pusha pinsrw pop xor fs pop out cmp call mov pop add push aas stos out out sbb testl add sbb xor (bad) mov les dec jge mov (bad) mov das stc jne hlt jmp dec stos (bad) ds sub std or cwtl loopne ret dec xchg mov xor adc das jbe repnz mov cld push sarl inc (bad) sbb pop sar xchg loope rcrb mov setge data16 jecxz and or dec jns dec imul mov rcrl lret dec jle sti xor outsl xchg push sahf mov (bad) or lods out in pop mov sbb sub push mov push test pop inc test mov outsb pop sti inc sbbl js repz sahf stc jo cmpsl repnz jno int3 adc popf mov ja gs aaa mov sti mov popa movsl out popa fs xchg and imul pop xchg cs cwtl jb jnp rorb mov and cmpsb inc cmpsb das aam aad sub std (bad) jnp push push cmpsb sbb sub leave iret xor sbb mov inc xor mov cwtl aaa xor cltd movsl (bad) cmp stos shlb rorb xchg and addl adc sub and aaa idivl mov push xchg insb bound clc mov adc and rclb mov adc iret les jne js and cmp fldt cltd adc pusha cli repz jmp lcall pop dec pop fucomp test into int3 inc inc mov push loop sub xchg decb in outsb or outsb mov ljmp inc dec dec lahf jns cmp outsb aam in popa or ljmp mov (bad) mov xchg mov (bad) addr16 push push push push flds jmp notl lds mov cmp subl test mov mov out push stos cltd jmp push push mov test loope mov dec dec dec mov push pop (bad) push xor cld loopne lock sub std cmp or inc and (bad) push mov xor cltd popa dec lods push repnz push lock scas xor mov mov jnp add clc inc (bad) (bad) and mov inc es xchg push into hlt mov addl push roll aam movsl ds std adc sbb mov mov aad daa sbb mov add (bad) lret insb fs xchg sbb push cmc pop js cmp jbe mov movsl add dec push mov push or movsb les or mov int3 pop mov ret call dec push mov adc sub jb push js adc addr16 cmpl push add cmp sahf leave or pushl in sti mov or mov mov pop dec out inc incl xor ficompl fmull push (bad) lock jmp sbb sub (bad) (bad) mov mov adc add add push or rorb xchg loopne mov push arpl daa sub cmc mov rclb cltd in ljmp in imul out and int test xchg inc (bad) rcl mov sti xchg (bad) pop aam out das out mov lock xor std shrl push push test sahf rep imull addr16 xor orb sahf cmp test sbb xchg add imul ret xor inc or (bad) dec movsl dec add jnp add dec leave inc (bad) push in in pop fisubrl stos (bad) or popf jae sub mov dec (bad) negb cmp add mov push (bad) mov pop mov hlt in repz add jg sti stos mov cmpsb add iret mov movsb xlat and data16 scas jb mov out icebp xor xchg popf inc fbld gs (bad) jle push movsl movsl xor (bad) mov arpl stos cmp mov dec out ljmp mov push add adc popa cmp call aam lock movl enter mov ljmp mov mov mov jmp notb test sar aas mov mov or sub inc push adc xor inc movb fstps inc jno add (bad) pop fsubs loope sar mov fidivrl jne sub test mov idivl ficomp nop mov and xor fiaddl das aad out xor gs inc add ffree push call push scas aas cld fstp add (bad) aaa bts cwtl inc inc cmp jmp cltd jnp outsb bound (bad) (bad) ret dec dec jmp out scas lret jae push fisttp fnstenv lahf movb insb add aam adc ds adc push pop (bad) jb test mov fldl pop add lock pusha xchg xchg pop iret sti inc enter aam test bound repnz xchg cwtl jg sbb mov mov sbb jmp les push xchg fsts xchg sub mov loope push mov dec jno lret lods mov jns dec push outsl xchg out lods mov es jmp out in ret push push add mov jns add fisubrl dec mov add std xor inc inc or jg fsubs adc cld pop pop lea js (bad) mov das dec (bad) ljmp xor lcall add js cld lods jne push adcb and cli cli and popa cmp adc mov inc add inc or outsl and cmpsl (bad) mov daa xor push fcoml sub bound push add stos in out lods cmpsb repnz test (bad) xor push push out (bad) inc sbb cmp insl push push insl push mov mov and fadds dec int xchg jb leave leave (bad) or lahf gs dec leave inc adc xchg sbb jns mov (bad) outsb xchg sahf xchg lods jmp or push pusha xor jecxz and inc jmp and in std pusha fistpll jo lret pop je add in nop (bad) pop sub dec cltd lock mov xchg xchg fcomp cmp xchg test push stos adc xchg je por mov lret arpl mov jle jno jne cli ljmp jmp cmp cwtl add push les add xor xor add adc insl sub mov test outsb stc incl iret and fnop adc jae lds jle out and xor repz inc cmp setns sbb fldcw adc add push fisub sub out in shrl aad (bad) adc out sub mov mov daa stos xor jp jle mov mov push pop pop sub and out into cmp rorb stc cmp dec shll mov cmpsl sbb jno xchg mov jle sahf outsb xor cmc sbb ret lds sahf popf bound mov push mov insl push (bad) inc jne (bad) xlat (bad) xchg xchg rorl dec movsb enter fimul cwtl lcall sbb loope xchg xchg repz mov or xchg sbb test inc mov outsb outsl out popf neg fadds icebp mov addr16 sbbb sbb add inc loopne (bad) cmp xchg addr16 aam in jecxz jb sahf in dec pop das mov mov adc mov shr sbb rol nop popl add int add scas stc in in (bad) xor xor scas xchg lcall add (bad) (bad) fldt daa es jg push inc lret push push jl arpl cmpsl rcll lds mov fdivrs fcomp dec mov sbb jno mov adc xchg and sahf xchg scas lods xor jg and jno jne cli ljmp xlat stos insb jl or cmpl pushf cwtl push in jg pop pop add cmp push lahf es push scas cs in push push cmc (bad) leave icebp ljmp icebp sbb imul fwait sub gs clc (bad) insl into ss lea pop pop or and sbb cs inc adc lods pop (bad) xlat or jmp xchg xchg push jne lock test es scas stos mov xor adc out imul out xchg mov lea push push mov mov mov (bad) js mov pop subl addb popa add repnz leave mov cmp lea test adc (bad) cwtl cltd sbb outsl outsl xor loop fwait fwait lods lods or sahf sahf cmpsl cmpsl jecxz sub daa daa das and jge xchg xchg aad outsb outsb into into push push (bad) and push and sub push inc inc mov pusha pusha scas scas int mov aaa xor movsl mov pop pop clc clc mov lahf lahf cld cld adc call fs popa imul sbb inc inc or pop pop imul cmpsb or mov (bad) lods imul mov xchg cmp jg jl xor outsb jo stc push push enter push (bad) jle jge push pop mov add (bad) lcall cmp addl and inc inc rcl and mov sub incb mov mov insl insl mov pop pop test leave nop nop sbb outsb outsb xor jecxz lcall lahf cmpsb cmpsb loop sub movb xor cmp int imul xchg into test repnz cld insb insb rol dec adc push push dec dec xchg xchg in in inc inc add xor mov sub cmp jnp dec dec rcl pop pop add or adc pushf pushf mov cmpsl cmpsl stos stos cli cli add sbb loope fs dec jmp (bad) (bad) push push call xor and aad pop xchg xchg xchg xchg adc inc inc mov aad jl mov fnstcw and inc jle (bad) leave or and outsl adc push jae xor add add add and inc inc (bad) sub pop sbb dec aaa sbb mov mov ja lock inc sahf sbb and and add div enter mov sub (bad) mov mov mov sub and add inc xchg jecxz mov mov ss and pop xor jle mov xchg xchg icebp cmpsb xchg fs push mov sub clc mov mov cltd fidiv dec dec dec mov fsubrl popa cwtl int dec cmp popf adc js cmp xor xchg jmp sub stc add fstp (bad) xor pop ror cs (bad) clc lret dec mov inc add jnp mov push xor fldenv pusha stos inc sub repnz lret ljmp fldcw pop mov lds mov jecxz fmull pop pop mov insb lods and sub sub sub xor je mov loopne lret lock fcom aad sub arpl xchg mov mov sub ljmp fnsave lods js insl xlat test negb sub inc data16 lea icebp cmp bound test jo mov divl inc (bad) leave (bad) mov in sahf adc mov xchg or jne imulb test cmp mov xor push std push int3 out int fcomip inc inc xchg daa cld add mov mov jnp repz loope mov (bad) (bad) stc stc jmp cwtl add (bad) and imul lret xchg shlb mov or rol dec xlat pop mov dec cmp nop adc xor js pop hlt push outsb pop sub mov xchg and xor mov mov dec mov scas cmp cmc lock cmp (bad) cmp pop das mov jnp loope jae dec iret push push pop (bad) flds mov jns repnz push pushf sbb lods fs mov inc cld xor mov pop loopne test lea sbb cmp push popa and scas negb inc add ds inc test leave pop or daa pusha add mov divb bound ret adc xchg xchg sahf repz addl mov dec std std loopne cltd xchg and out mov mov mov push decb xchg ja enter mov mov fistp mov push lcall and insl sbb jo add out lods sahf js,pn scas xchg or fisttpll sti cmc mov or ret rclb inc add push push mov call popa test (bad) jg fstp pop pop pop xlat stos adc out mov ret add mov mov mov in jl and cmp pusha sub sbb in fdivl cmp out jmp clc mov mov lcall xor push push gs adc rorb push popf push adc repz clc or cmp push aaa aad mov cmpl outsl ljmp (bad) push or aaa aaa inc int3 (bad) push pop cmp fisub xchg into test shlb repnz mov cld cmpsl and test push loopne,pn cmp add addr16 sahf das mov data16 imul out out dec fisub scas push mov test fwait pushf inc add xor rcl in sub cmpsb jne mov int ja mov xor lcall mov mov mov and fstps sub mov pop nop lock sbb mov (bad) xorl icebp inc add push mov xorb repz inc add sub mov pop jo lea pop popf xchg xchg mov (bad) les test inc movsl mov nop stos pop stc scas ja xor mov gs ljmp inc out add push mov dec lock call movsb sbb push rcrb enter in std or cwtl andb mov xor cmp nop jns cmp sbb adc dec insb outsl dec cmp addr16 arpl jmp xchg mov ret test xor cli push (bad) mov cld inc inc sti add sub xchg hlt push mov or iret mov iret adc roll ret cmp arpl rcl xor cmpsl mov stos imul xchg idiv mov js sub pop push mov or mov fstl add repnz aad mov aas mov sahf fsts insl pop pop sbb imul and xchg (bad) push sahf lcall or mov adc sub add aad test inc adc call inc adc enter or sbb rcl push xchg sub add js mov and cli (bad) xor cmp cmp or dec test sub repz jbe and jp jns sahf sub sub mov pop adc or in push pop mov arpl mov cmp fwait es push cmc cmc push ret xlat pop xor xlat or jg mov hlt xchg ljmp jl xor push cmp inc mov pop jmp jnp sbb mov fiadd jbe nop pop xor xchg fsubs test aaa jbe incb xchg pop xor or pop fcmovb (bad) xor ficoml pop inc mov sub repnz jg int3 adc call lret add xchg (bad) scas jge mov scas xor mov jle adc fwait cltd ss push movsl sub ja add call dec clc (bad) in push sbb jle jno int sub ljmp xor aam pop jae sub cmp enter add (bad) push insl insl mov lods out sarb rol push and pusha jl or fisttpl lcall movb xchg cmp push adc les xchg add mov in push in in sahf pop int3 jno add pop popf scas or ds sti xchg push adcl lock push mov imull inc xor lock mov stc jbe iret int3 inc or je and pop dec int fidiv repnz lea data16 inc inc loop out inc sub inc insl popa or (bad) repnz scas test or iret sub mov cltd sbb pop pop sbb mov and ja int3 push mov jg popf lcall into loope jo cmp cld jnp mov mov jg iret fisttpll in mov pop push idivb pop iret int3 mov das jg add jecxz cmc (bad) stc xchg push cwtl sbb mov cmpsl fistp imull aaa in call jmp jns push xor mov aas aas jle push out mov adc inc mov or sbb lea add sbb mov xor in dec stos scas les dec xchg mov ror popf mov sbb mov jo roll mov pushf inc xor jb loop push push xchg icebp mov jne stos pop cwtl pop sub jno popf xchg test dec and test orl inc pop and daa push mov leave jb xor mov cld inc aam cmp jbe lds push pop roll mov pop das mov and scas mov pop xchg fcmovbe mov test fistl push sbb stos mov sub inc sub movsl and std stos xlat pop add mov cmpsl scas lods adc popf cld cwtl fistl mov pop imul sub icebp cmp push (bad) das dec dec loope js xor call inc aas jae lock and (bad) icebp std bound cmp js and add pop popa hlt or aaa push stos lahf daa repnz decl clc or (bad) mov pop cmpsb rcll inc cmc sub pop add (bad) jmp int mov rolb in out push pop mov aad pop out in es sahf push mov sub cltd in (bad) jb rcr stos add inc cmp out adc in int3 in mov and fstps mov and cmc jg pushf in (bad) or sbb xor cmp enter xchg push data16 mov mov mov add xchg pop aas (bad) xchg xchg (bad) scas jns cmp xor lahf pop xchg cmp jmp mov mov (bad) (bad) testb enter fisttpll or add das cwtl sbb int3 shrb sub call daa xor mov pop loop rorl pop fucom mov jl pop pop bound xchg xchg sub mov cs lret ljmp mov lcall (bad) in jne cmp cs mov lods mov lods dec or insl aas repnz scas les loop iret fisubl add cmpsl pop mov fisttp or pop (bad) sti inc push xorb out adc lock mov (bad) push add insb idivb fistpl xchg outsb rorl xor loop mov inc incl (bad) in and pop int3 mov mov mov xchg loop and in mov pop insl push fs mov add xchg ljmp (bad) scas pop aaa inc push lret outsb imul cmpsb pop cmp addr16 fcompp cmc or mov lret scas push push jae sahf rol mov in push mov mov mov adc aam gs pop cltd aam and add pop aad mov and rol daa mov (bad) add dec fnstcw pop lcall jg popf mov loopne cwtl sbb cmp jg popf xor add xor xchg fisubrl xchg insl stc rclb daa pop (bad) les psubb iret jmp sub sub fidivl mov add call testl adc addr16 adc lcall fisubl popa xor mov push and jno andl cmpsl sub mov sahf pop shll fidivr mov int iret push repnz xchg mov fwait sbb mov stos lahf mov pushf pusha lahf pushf lds xchg and lods push out inc int mov jle xor sub insl cs xor mov das movsb push into push nop xlat clc jg popf dec mov push loop cwtl out pushf sub and (bad) or add dec rcr or push jno loopne jmp add mov ffreep sub push push jl test (bad) std popa lock ret mov (bad) data16 mov xchg mov mov inc stos into shll das push mov jne (bad) in loop mov sub sahf into push dec jbe xor lods ss andl nopl inc sub pop dec mov pop sbb lcall add sbb xor jp dec mov mov mov ds ss in xor leave or dec ret test in leave int3 inc iret adc enter mov decb pop push dec push mov xlat sbb and mov or fdivrs mov pop pop cmpsb push sbb ljmp dec or decl adc push (bad) roll pop mov loopne sbb or push cltd jge add loop insl scas jmp js xchg movsb inc push outsl outsl (bad) cs into aam mov test fbld imul sub xor sbb rcl insb mov push stos arpl inc scas int fcmovnu jns mov addb xchg xchg (bad) jge decl loopne inc test popa cmpsl push xorb sahf fcomp xor xchg adc mov pop imul and add adc nop pop sub mov jg outsb and sbb lods jle mov push push mov push pushf std loopne cmpl fwait cmc cmp mov pop mov int dec mov mov sub sub jecxz pop lahf mov or push les les jae les popf sub cmpsb and stc push in (bad) addl sti pop jne push fsubp dec ja lret (bad) xor lahf xor std aaa mov jb (bad) data16 push push adc lret shlb rorb movsl aaa or lods xor or shlb adc jl and sub add dec inc bound cmp les das sti insb pop push push and sub mov gs insb out ret pop pop out test sub js lds inc xor insb hlt repz push sbb mov push fisubl inc mov push jae test test cmp test jmp in leave dec dec add decb es sbb aam mov xchg bound loope mov xchg fisttpll or mov cmc add adc loope fldcw std pop cs into loope lods and jg out testl add or dec sbb mov add (bad) push pop pop inc inc push and or pop push or push push jo dec dec or test adc repnz jge mov fistl adc or mov stos ret mov cmp (bad) xor and (bad) dec jbe mov (bad) jae sbb hlt ja or lcall and pushw jne rorb loopne dec sti add cs das inc and addr16 mov jne inc or dec pop xchg cmpsl adc sub cmpsl pop (bad) jne add xchg cmp push add mov daa sub aas aas dec lods mov je cltd pop xchg add (bad) outsl dec xor mov dec fstps sbb dec (bad) mov push push adc outsl pop rcl xchg fs cmpl lods pop ja ret frstor and mov xchg sub repz xchg sub jae (bad) xchg in insl push iret pushf (bad) lea mov adc dec loopne out jge adc mov or push fsubr sahf fimul popa bound ret mov insl aad sub dec pusha fxch sub dec repz out outsb and outsl jg add aam and dec lods ret clc cs mov sbb jle ret jl sub mov int3 ss sbb dec or lea roll in sahf ja mov cmp sub je push cmp divl cmp stc add sub cmc cmp and das adc mov lea dec mov lock pushf lahf cmp pop adc lds add xchg jns movsl fidivr inc std enter cmp jl outsl jno add cs cmp adc call fs or stos out pop push and sub gs add adc adc es adc sbb outsl and out cmpsb pusha sub (bad) sbb into pop pop inc add cmp dec (bad) ss or pop je rcll lods mov ljmp jl push xchg jmp add jae dec cmp dec add and lret (bad) xchg in xchg or cmp push xchg inc ffreep sub jle movsl popf add jo inc sbb sub scas ss xor and push movsl push out out jnp repz int xor jle les (bad) test xchg addb dec mov mov ds shr sbb insl sbb sbb sbb scas mov bound js mov pop pop xchg sbb push gs sub cmc lcall fwait xor pop mov shll sar xor arpl dec xchg pop das mov pusha int3 int3 adc dec xchg inc repnz adc mov mov jb pusha mov sbb daa push dec add push cmc cmp xchg xor (bad) mov jecxz popf adc insb jecxz xor (bad) pop outsl test iret shll push outsb sti jno adc xchg add outsl cmp ljmp (bad) and mov mov fild aas insl adc xchg mov push pop pop (bad) popl add call mov mov add dec nop add sub out push pop scas imul inc inc pushf pop iret test js cmp (bad) (bad) daa imull out pop inc sub and jnp add add xor cmp add ja mov ljmp jp scas push cmpsb das aad aad mov and push fcmovb fscale movsb or add sub or or popf cmp push fadds cmp adc dec dec mov jmp xchg mov fidiv mov mov shll pop mov pop ss sub outsb iret movsl jl xchg fsts (bad) (bad) ja dec data16 scas jb xor sbb pi2fw hlt lcall movb mov or xorl loop fldenv mov push and in mov mov leave push cli xchg outsb push xor loope dec out xchg inc sti push push fisubr push adc adc add aam and adc call sub lods mov pop pop lds dec in test pop aas pop jmp cmp ljmp jp pop xchg push popf fldl2e popa out subl sub or dec jmp add cltd divl rorl in sahf adc cmp and jns jns outsb add sub xchg adc sub xchg jle mov sub push xchg mov add stc stc add dec dec push push and orb out dec xchg scas mov xor inc ds call (bad) cmp scas sarb dec je les push xchg mov sbb data16 outsl cld mov cmp test les sub inc popf sub jb jl or ds cwtl jge (bad) adc daa sar push push or add mov or cmp xor outsl xchg and mov cmp enter (bad) push mov mov arpl cmp shll jmp pusha in data16 fsubl mov cs pop xchg lcall out jb or or adc sub lods cwtl push icebp js pushl out rcr pop pusha fcomps push sbb sub or push jne jne mov add sbb out aam scas pop insb js xor jecxz sub sbb sti or out jbe push vcvtpd2dqx add mov mov mov js jecxz mov subl lahf and xchg call test test in test std xchg insl out push dec lea stos mov movsb and push lea stc ja xor in (bad) jne sbb in add fs jb pop fwait jo inc faddp inc xchg arpl sub inc inc inc add adc es fcoms nop xchg cmp idivl pusha mov inc std mov and call push push lods es dec jae cltd mov inc std aaa aaa int3 or lods icebp push push jge out inc inc add (bad) pop popa fnop ljmp jns jbe pushl int shrl popa test in sbb mov jg bound outsl add sbb jnp loop ljmp loope arpl jp cltd ljmp bound imul mov popa in push or in dec dec mov out cmp add out xlat xchg push push push sub test lret pop jl rcll lods mov cmp cmp jl flds fwait xor (bad) int pop test jmp insb ss dec dec (bad) dec sbb add inc je fstpl mov cmp incl jl and sti sub xchg clc push imul cmc and xchg add or repz daa inc jo cli adc jmp movsl shrb bswap inc mov ret adc lock cmp dec call push cmp push pop shl cmp inc sub push je aad lcall rol pushf or fmulp ret lret inc sbb lds mov jbe add add fldcw pop pop pop add fdiv pusha pusha inc cmp cmc iret pop pushf adc imul mov cmpl mov les cli ss aaa nop fdivp icebp orl xchg fldl xor push pop and push or xchg (bad) in in push add dec lock lods in cmpsb (bad) mov inc lea pop stos (bad) xchg sbb outsl push dec rcl push xchg sub rcll xor movsb or std sbb pop inc stc outsb sbb (bad) xor pop mov cmpsb jo test pushf jne (bad) pop and inc inc scas and (bad) jne sbb sahf pop idivl mov push lahf daa js cld jno inc scas sahf mov pop jne or fiadd xchg cmp lock popa xor dec or outsl fdivrs or push (bad) hlt pop xchg pop mov pop (bad) mov cmpsl sub sub cmpsb xor andl icebp insb insl mov fcom insl jg outsb mov pusha inc ljmp rcrb jb xchg popf je sbb in addl hlt ja adc je ss inc sti push fist push jnp sbb jecxz add (bad) xchg mov mov xchg sbb aam jnp jle insl repz imul imul jmp aas lds mov inc cmc xor mov sbb add sahf lock mov mov sub pop aam int shrb cltd dec or mov cmp int ret in sub or scas test inc pop cmp call sub lock into cmp sub adc sub ljmp inc and ret pop pop aam notl ljmp xlat call xchg out push sub push sbb xor scas and sub (bad) or push (bad) clc icebp jp icebp pop aas jns ljmp or xor nop dec int3 leave mov add mov push sub mov scas fucomi mov cltd push les clc add xor (bad) jg jmp test adc and scas sub je xor daa mov aaa roll mulb adc jae add mov inc jns decl int rcrb xchg out cltd jmp dec mov push movl int or aam adc xchg stos and rcrl xchg fistpl cltd adc mov pop stos out out and test cmp jne dec aad in out inc std xor or in ja pop xchg jecxz (bad) mov cmpl lcall mov lods bound inc jp hlt popl lock sbb out in aam sub ficoml (bad) cmp xchg out xchg cltd inc (bad) mov mov repnz jno adc xrelease cs push out adc sub pop out dec inc push push mov add and movsl rcll in adc into lods loopne mov lock test sarl sbb sub ror sbb (bad) adc xor sbb repz adc adc repz inc inc adc js jne add pop xor xchg gs cld inc or and ljmp push xlat dec xchg (bad) aam imul fbld add stos xor dec test cwtl sub lds scas (bad) fsts push xchg push jge cmpsl inc adc ss sbb out xchg sub sbb mov cmp xlat lods sbb pop int dec mov inc push in sahf sahf mov aas xchg popf pushf popf and ds cli jle repz mov push jg outsl xchg xchg fisubrl repz jbe lock test adc jbe (bad) lret fist jle,pt shlb pop and or movsl or mov lea pop xchg pop rcll mov pop and aas xor imul mov xchg and and xchg mov fcoms call inc fistl and mov dec dec mov cmpsb dec les mov push nop test scas inc (bad) push push jle push into xlat pop addr16 sub in mov sbb lea push sbb jnp inc pop (bad) adc cmp scas imul mov or push les les jae jbe cmpsl pop or add inc xchg loope sub xchg fdivl push fsub push into cmc je call push add sub add das movsb or dec pop shrb jecxz inc lods imul in push xlat ss dec ds jmp popa test scas loopne,pn in imul cld ljmp adc nop mov or insb pop dec nop sub out pop jns enter sbb jae movsb (bad) scas sbb jmp xor add fs scas push adc in dec enter ss call fldenv add lret ret lahf inc push daa and jnp loope in pop aaa test xchg hlt cmc cld sub stos lret inc add sub dec push mov add push mov xchg cli imul nop or pop das dec mov icebp or or movsb mov rcll cmc dec dec std std test in fisubl or rcr in fnstcw jl mov stc pop mov mov inc adc dec inc lea dec dec jns add mov jmp adc test daa lret rorb fwait in push cmp jecxz xor jg ret rclb je fsubrp fmull or cwtl cmp in jnp rorb or mov sub int3 xchg (bad) cld mov mov push aas incb cwtl and fstps orl ljmp in cmpsb add mov xor pop adc xor mov mov mov cs stc xor cs jg adc push test fistpl cmp lock insl insb jl divb cwtl aas js xchg out in es cmpb cld push pop cld and arpl mov jnp add mov dec or (bad) mov (bad) frstor mov and inc inc es add fbstp cltd jnp sub add mov lods mov mov pushf das sahf outsb insb test (bad) xchg movsl mov mov out gs jle sub popa mov fnop pop es pop pop cmp in aam or test pop pop dec inc mov fdivrl aas daa stos insl scas ds pop lods inc sub stc movsl insl mov int xor mov pusha push jl (bad) (bad) (bad) xor and addr16 cmp xchg sub mov add sbb cmp pusha das push mov dec sti pop leave push adc outsl js adc push and jns xor push (bad) lods pushf pop out push orl aas inc int3 addb push add mov (bad) and subb mov cmp mov int xchg cltd jnp or adc cmp xor int popa (bad) pop lds insl (bad) fiadd test push std adc mov call xor mov xorb cmp ror inc dec dec int3 (bad) xor cwtl loope sahf push lock outsl pop icebp subl dec cmp int3 xor inc xor orl dec xchg fdivl aaa (bad) mov mov (bad) arpl pusha and mov or btsl cmpsl xlat and movsl fs jae rcrl nop (bad) adc add popf dec jne dec inc (bad) (bad) push cmp jnp and repnz xchg adc add or movsb add cmpsb sub push pop fadds in mov jae je in (bad) pop aaa inc lcall pop sbb outsb and loope add pop movl and cli (bad) jne add jne imul call mov andb xchg adc test mov xchg and xor fdivrl enter mov imul jmp ds jo push push mov fstps (bad) jne xchg xchg sbb sbb or insl loope push pusha xchg sbb aas cltd and std cli or cmp xchg dec mov enter push pop dec test cmpsb rclb mov cmp cld mov jl jmp rcll jmp push jmp mov jnp jno mov test lock jle and adc add cmc test mov mov sub aad bswap pop jne,pn jns fsubrp push pop xchg dec dec inc ret or bound pop adc movsl mov jecxz arpl jmp out xchg xchg mov jo push adc stos push out add mov test xor mov in ja movsl and add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or add add mov xchg xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg insb shlb sub adc ljmp imul push pop and and xchg or call inc gs push push enter out out int ds pop cmpsl scas shlb pop push rorl jnp repnz icebp imul popa imul test xor xor iret std pop push mov mov (bad) cmpsl lods in nop orl push pop lds jb push jge jmp (bad) idivl lods lret std sti xor push data16 jne pop push mov xchg lahf and jae mov aas aaa or or das das pop pop fdivl mov scas sar repnz jns mov mov xchg mov mov int mov xchg xor xchg inc push sysret arpl stos adc sub push fbld sub sbb xchg lcall push pop and mov or mov gs push push enter out out int3 ss cmpsl scas pop sub fwait add jae fs icebp pop out in in ja imul xor fdiv cmp adc inc dec in pop push nop test test movb in mov mov mov gs pop (bad) jle rolb cwtl jno mov sahf jecxz (bad) cmpsb mull jecxz xor pop pop jbe adcl jae aad sbb (bad) sbb aaa bt add push pop xor mov sahf ret inc push mov daa sub test call dec mov movsl fwait push int mov add add pop sub sahf xchg leave inc sysret sub stos jl sub es ret imul call xorb adc and movsb rcrb lock int3 sub dec inc ss loopne lods add mov jno daa (bad) (bad) xor inc dec outsl nop dec inc stc cmp or jmp cwtl nop in push fst adc idivb pusha push dec test out sbb fimull sti xlat es adc out xchg cltd (bad) testl into lcall mov sti std cmc inc cmpsb cmc std ja adc outsl sbb cmp aas mov or outsb add push imul jecxz test jb pushf xchg repnz sbb repnz mov cs dec inc push ljmp and out xchg fwait in jnp cmp insl gs xlat add aam ja mov or ljmp imul push pop out and inc test add pop gs jo enter out out (bad) ds and lds lea enter jne in in jl imul cmpl xor xor dec sar pop push xchg into (bad) stos test in xchg pusha orl lods arpl sarb test addr16 pop and movsl xlat js mov bound (bad) cmp inc jbe mov push xchg lahf jecxz jae prefetch adc add aaa pop mov or popa rclb cs mov mov cli repnz int addl lds into mov lds cmp push xor stos sub out and int3 ljmp rcr jecxz ret pop (bad) aam lods inc addr16 (bad) jne dec into and mov out xor ds add push sarb (bad) jae test in addl cmp or cmp cmp inc dec add popf jl ja into (bad) jge in mov mov mov pop dec addr16 lds push out jecxz mov out bound fbstp cmp inc jbe add jno push push std pop xchg lahf outsl std jae addl aas aaa fnstenv or jmp push pop xchg mov (bad) rcl adcb cli repnz jge mov (bad) mov dec jmp lods movsl xor outsl pop pop enter push sbb xchg insl push sysret dec pusha mov and ret js dec fdivrs xor adc leave rorl mov imul mov clc lock (bad) int3 out push push movsb decb insb call or jno das daa rol sarl inc dec popa (bad) dec inc repz or push push push jmp nop call fwait mov mulb sbb xchg xchg add stos adc sti add es adc xchg cltd adc inc dec xchg adc jno fistpl std cmc shll adc outsl xor push cmp jge push pop mov or rolb js insl sub inc scas test cmp pushf xchg aam adc int sbb out vpsraw xchg hlt cld insb push dec inc xchg sti sub mov fwait int xor stos adc jge add jbe ja add and lret ljmp imul push pop cmp mov and add mov dec and insl sub (bad) testb je ss inc cmpsl scas hlt xor loope lea jl stc icebp (bad) cmc in in insl popa imul cld cmp pop and pop push push mov cmpsl into (bad) adc jb mov mov pop jnp fcom stos nop jno stc sar (bad) int jecxz sbb out push xlat xor mov sbbb pop xchg lahf lret (bad) jae inc add adc aas aaa lds or dec ficom adc (bad) dec mov test cli repnz mov mov mov push icebp push pop push mov int mov mov xchg push dec sysret dec jns stos es and add ljmp imul push pop pushf cmp test or pop pop dec dec in pop gs and rol out out (bad) ds scas scas add das sub jae xchg icebp icebp mov pop add popa imul iret cmp iret sub xor xchg stos into (bad) cmp orl sub sarb jns xor mov js adc push mov cmp jle push sarl jnp cli repz dec inc (bad) jp das pop fild (bad) push and add jecxz ret bnd mov xor push popa test sbb bound and mov cmp xor pop cmp stos cs ret ja dec cmp leave sarl mov dec cmc orl add lock pushf (bad) int3 ret push xchg (bad) dec inc sub mov mov daa xor rcl xor dec dec pop sub inc jecxz dec or inc push inc inc rclb jmp jmp imulb mov push inc inc out repnz pop jns mov cs in fcomps xchg or inc mov popf fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg sub xor push push pop sbb call and inc inc mov xchg xor sbb fistpl adc sub loope adc es cld cld cmp inc inc adc sti jne add fwait fwait push xchg cmp (bad) jmp and or jg sub sub ljmp fcomp arpl ret pop pop aam sub je sub add insl sub lods out cli cmp ds scas jmp cmc cmc test xchg xchg icebp mov movsl (bad) push jmp shlb cmp inc xlat lods adc mov xor dec mov push in in pop sahf mov mov rcl mov cmp mov jl jmp sub aam push and mov push push insl lods lahf lahf (bad) (bad) cmp std std aaa aaa xchg (bad) stc stc add popf leave out repnz int3 (bad) xchg mov pop inc movsl xchg fs cmp stos or mov int sahf test rcll xor loopne movsl movzwl ret sub sub mov push rcr push cmp add mov (bad) inc jno cwtl lcall pop pop aam sub addr16 add dec mov outsl mov aas mov jg lret (bad) mov xchg icebp in mov std xorl or pop fs jae pop xor add sbb mov push ret in out sahf mov test popf rcl xor jns cmp jmp sub jo adc push and sbb jno push loopne rcrb (bad) repz cltd std sbb addr16 (bad) popl das pop pop or (bad) or addb mov mov clc mov int andl leave test sbb adc movsl aam mov pop pop bound out out xchg xchg out mov iret stos sub and mov dec or scas roll fidivr pop or mov (bad) popf lock int3 ss push push dec or inc lcall jns cmp mov fstl test xor dec dec cmp fildll push push push push pop push loopne (bad) mov aad imul jp jne test push mov inc xchg out repnz in sti aas aas cs fnstcw negl cmp xchg adc jb or sbb adc mov gs cmc add std sbb sbb sub xchg test inc xor push pop pop (bad) lea call push and inc mov xchg dec xor sbb arpl pop sub loope add or cld mov adc adc push fwait fwait ret cmp xor push jg sub sub (bad) lcall pop pop adc sub addr16 sub cmp mov movsl ror mov pop cmp int3 test scas cmpsl ficom mov roll jae xchg nop icebp pusha sbb in addl fs adc xor add or movb (bad) in ljmp mov xchg leave popf mov jns cmp jmp sub push and jle and push ret lods lahf lahf inc inc inc push sahf leave bound std aaa aaa and add jmp aad dec dec bound cmp push scas pop pop stc subb mov in lock mov out ja aas sub movsl movsl stc fdivs bound cmp ret les (bad) neg fimul sub sub add lcall pop pop sahf mov sub imul dec dec repz push lret shr test test scas xchg mov cld test std xchg push jp in in imul gs xor es sub push je movsb (bad) pop xor in int std cld and iret xchg mov jns push (bad) test sbb jo jno add push pop pop sarl and int3 out inc pusha adc adc ds (bad) cwtl je imul (bad) jae in mov daa inc imul (bad) aam idivb int and enter push movsl sti mov lds dec jnp mov xchg out je mul cld lret (bad) fwait inc and in (bad) jmp mov mov or aam jbe mov mov sti cld insl outsb ret fcoml or pop addl xchg xchg mov add sbb cli std sbb pusha jg inc jo ljmp cmp and xchg cs mov inc mov in (bad) sbb mov cmp pop dec inc mov jo hlt div jmp repnz gs or (bad) std movsb (bad) (bad) xor mov std mov pop sbb xor sti mov xchg push push daa and xor lea add xor add and int leave enter xor sbb sbb adc sub loope push mov js cld cld clc clc inc inc addr16 add add fwait hlt xchg sbb lcall or dec pop jg sub sub jo lcall das pop cmpsb aam sub and sub add subps dec lock movsl rcr xchg out cmp test scas (bad) push push mov lret (bad) xor xchg mov in sbbl fs cmp adc xor leave leave dec dec push add push inc je dec lret (bad) pop push shr sahf enter ret xchg in popf movsb rcrb or (bad) or jmp sub pop adc push and sbb push enter imul jl (bad) inc aaa das inc out mov and dec das sub xor and orb xchg repnz mov mov stos int orl in outsb sbb pop and movsl xchg mov (bad) jae pop bound xchg enter cli xchg lret stos (bad) out dec and dec sub jo lcall xor cmpsl aam sub addr16 sub aas pop das dec lret insl shll (bad) out cmp iret test scas mov cmp aad cld test (bad) icebp js xchg in addl xor pop xor add push je dec mov jne sub and xchg mov xchg pop negb add cmp jmp sub jo adc push and pop jle jno push lea pop jnp repz xchg std push aaa addr16 out (bad) xchg stc and bound or cmovbe orb repnz fistpll in lods addl call pop jbe ret movsl ret (bad) arpl or cmp (bad) mov (bad) stos into out inc and mov cmpsl into dec cmp ss push gs sbb mov stc mov (bad) lahf lock int3 sub sub and (bad) loopne dec sub mov xchg push push xor dec jp dec inc (bad) or pop push xor cs mov aad imul or int or mov bnd xchg in sti pop aas dec cs cltd negb jmp jge adc or cmpl jge xchg cmc and std add sbb xor sti xchg in cmp push push pop pop fisttp dec js (bad) das and lea inc xor sbb pop sub es js cld xchg clc sub adc adc push xchg pop cmp call gs xor cmp js jl lret ljmp inc arpl aam add inc addr16 sub cmp mov cmp mov (bad) out cmp int3 test scas mov cmc loopne mov xchg (bad) icebp jnp nop in orl pop jl xor inc xor add sbb movsl (bad) xor cwtl in negl cwtl mov xchg popf popf rcl sub jns cmp (bad) dec jge jmp sub xor sub and adc jno push lea adc repz pushf std pop aaa cs cmc (bad) pushf stc add das push pop inc inc (bad) (bad) jbe mov shl jo push es test (bad) mov int addl call pop and movsl xchg mov (bad) jle push bound out cli xchg enter notb inc and pop sub ljmp fcomp arpl ret imul push sub and sub das add dec sarl movsl rol mov dec cmp shrb push xchg cmc out mov push jae xchg sahf icebp imul in addl adc jns pop xor add sbb (bad) and in icebp sahf out pop push mov pop popf popf rcl sub jns cmp (bad) dec jge jmp sub xor add dec and sbb jno push fsubrs pop jnp repz adc scas (bad) lahf stc outsl add jg xor and orb repnz into mov mov popa in outsb sbb pop cmp movsl mov pushf pop pop bound cmp xchg mov cmpsl stos in or test mov dec stos into sbb inc ss pop gs mov or movsb nop (bad) xchg lock movsl int3 sub sub daa inc stc cwtl mov es add xchg xchg daa daa arpl out add jge inc ja inc aad or push push nop xchg mov aad imul shlb ss sahf in sbb mov mov repnz pop xchg in sti pusha aas inc cs jle loope lock imul dec out data16 jb or subl jb xchg cmc and std pusha insl pop sbb pop pop xchg xchg mov push outsl pop mov or loop push js (bad) push and inc shll add xor sbb jl or mov jae inc es js cld fwait clc sub adc sbb add fwait cmc xchg pop cmp xor jne sub sub ljmp lcall push pop (bad) add addr16 sub and ds fstpt movsl ror (bad) out cmp leave test scas (bad) fidiv push xchg testl sbb in addl add daa adc xor leave pusha dec and adc mov xor in ljmp mov xchg icebp popf movsb rclb jnp jns cmp jmp sub js add cmp jno push ret lahf add jno repz std std aaa aaa adc stc xor sbb push pop dec inc sti (bad) add out orb repnz aad enter movsl int adcl hlt test cmp push test out pushf aaa pop push bound popf out repz shlb stos (bad) out push and and ljmp push arpl ret push pop (bad) add addr16 sub cs cmp mov test int xchg out cmp test scas mov jb xchg cmc in mov xchg xchg icebp adc out in subl dec jl xor adc xor leave pusha dec and data16 mov in jmp out mov push xchg mov xchg pop cld popf mov push jnp jns cmp jmp sub jo adc push and adc jno push fldcw jnp mov std pop aaa jg (bad) (bad) repz sub pop sub (bad) add in (bad) jecxz inc push es repnz lcall int addl test pop and test sti pushf bound punpckldq sub or cltd xchg stos stos out out and fimull js cld into xor ss roll mov push ret cltd (bad) (bad) lock int3 sub or cwtl xchg loopne dec jge push cmp mov xchg pop daa pop xor dec sbb inc mov push bound adc lcall imul or pop push in push mov out mov in add sti aaa or leave fstps sbb lods rcrl xlat mov adc or mov (bad) mov dec std std sub push outsl outsl stos push xor xlat fs pop xchg lea add (bad) js (bad) and xorl xchg mov push sbb adc xchg sbb sub cld fprem inc inc jne imul cli jne cmp rcrl fnop sub or aaa jg sub sub xchg mov lcall xor mov pop sub addr16 sub sub call mov mov sbb jge subl push xor test xchg xchg icebp cmp test imul jl xor adc xor leave inc dec add pop je dec mov push pushf in in sahf out aaa push les mov jnp jns cmp (bad) or jmp sub jo adc push and jle and push ret lods jmp movhpd repz mov inc loopne mov and and inc movsb (bad) dec and adcb enter mov mov int andl adc pop pop push push movsl movsl stos mov add bound cmp movsl mov stos stos arpl and and sub ljmp pop rcr arpl ret pop pop pop aam in outsl addr16 add pop dec mov mov out xor ds scas scas dec ficom std cmc test add in addl xor adc xor jl dec lea data16 dec dec mov push in in push sahf mov scas xchg pop call jnp jns cmp notl sahf xchg jo adc insb and mov push inc test or test adc outsl scas mov mov outsl outsl adc rcl and mov inc cs lcall (bad) mov sti mov test push movsl lods mov (bad) pushf pop pop cmp mov loop roll pop int3 inc int out and xlat icebp movsb lret jns xchg mov cmp inc movsb mov adc in or mov xchg mov lock add push add data16 and cwtl loopne daa and mov icebp testb xor rcll and add mov push push push (bad) nop rcr cmpsb aad add stos aam test mov mov repnz pop test cs cltd cltd cltd imul xchg jg addl mov adc cmc and lcall or xor xchg mov cmp add (bad) mov inc mov xchg jbe xor adc movsb loope add es clc add pop adc jne addr16 adc pusha popa dec and sub sub mov xor lcall xor mov xor je ja cs insl insl call into stos xchg dec dec in (bad) in mov daa cltd mov loop mov cmp out sahf outsl pop addb insb fs xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl adc xor adc jmp add pop je dec out (bad) jne int3 in mov push xchg mov xchg mov jnp jns cmp negl lret jmp sub pop adc push and outsb jle jno push mov packssdw repz in std daa aaa ret inc or stos das fistpl inc push (bad) mov jecxz inc ss sahf mov mov int and add add push push movsb movsl mov (bad) lds bound mov xchg stos stos out out and mov pop dec fmulp sub es jne cmp mov or cld (bad) repnz int3 inc inc sbb or inc inc lcall or xchg xchg and (bad) ss dec addr16 inc iret fildll or push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl adc xor adc jmp add pop je dec out (bad) jge int3 in mov push xchg mov xchg mov jnp jns cmp negl lret jmp sub xor and and outsb jle jno push mov packssdw repz in std daa aaa push inc or stos das fistpl inc push (bad) mov jecxz inc ss sahf mov mov int3 add fwait sbb pop push push movsb movsb mov (bad) les arpl out out xchg xchg mov xchg stos stos out out and sub sub jmp jmp pusha jo lcall dec pop push aad sub mov pop dec dec mov mov in cmp cmp stos test push push div xchg xchg xrelease cmc in cmpl pop jl xor adc xor leave insl dec and push je dec out jne int3 in mov push xchg mov xchg mov jnp jns cmp negl lret jmp sub add xor and and outsb jle jno push mov packssdw repz in std daa aaa push inc lahf (bad) add das dec pop push inc (bad) (bad) xor nop xor push inc ss sahf mov mov int3 (bad) (bad) pusha pusha test push push movsb movsb mov (bad) les arpl out out xchg xchg mov xchg stos stos out out and cwtl mov lret lea cmp shlb mov or mov cld push icebp bound int inc sbb or inc inc lcall or cmp and (bad) ss inc inc fstp or or pop pop push push nop nop xor push push out out sub jge test sti daa sbb fcomp jge outsb outsl mov inc pop pop fwait lcall xor scas sti cli xor movsb movsl lret mov ds xor mov mov inc xor jmp mov jecxz or sahf lahf push enter dec dec cmp data16 (bad) jecxz jmp push add and jl cli sti lock dec dec sbb sub data16 lea loop jp adc sub pop pop add add mov lds test in in push push sti cli addr16 adc push dec dec inc inc fs and rcl add rcl mov fcomp nop xchg inc inc inc gs cmc icebp lock nop jecxz mov lcall xchg cmc hlt pop push adc push pop add dec dec nop xchg mov dec dec lret lret (bad) ljmp push rol jnp pop adc int3 int sub daa sti cli cmp jbe rcl rcl xchg xchg pop pop int pop pop popf pushf mov lods rcl cltd cwtl xchg mov xchg xchg gs push ret ret and ret ret loope lahf sahf push push and into mov xor int imul lods lods (bad) xlat add jp dec dec inc inc dec dec xor jge loope push pop sahf lahf (bad) (bad) das cmp dec dec or test jbe or xor or dec dec xchg inc inc inc inc rol sub aam jp out imul lds mov adc xor loop in je jno ds mov adc arpl cmp add push jmp je sahf xchg xchg sahf lahf addb xor int3 dec dec or imul pop aam inc inc cli sti xchg test cmpsb cmpsl jnp mov push push push pop push fnop dec dec fnop sbb sub pop push clc stc cmp xor in aam inc xor inc test push aad movsl movsb pop pop dec outsb sbb xchg insb insl lret scas or jbe mov in in out into mov std cld loope push pop sahf lahf (bad) (bad) das cmp dec dec or test jbe or xor or dec dec xchg and out jle mov fstp add lret xor push pop bound aaa cmp lods lods add xchg xchg int3 int fist cmp fstl jae rol fdivrs cmp fldenv mov sub cld div cld std loop outsb outsl cmc xlat mov into aam mov popa mov fsub mov and sub xchg inc dec mov jbe in lock dec pop dec dec shl pop adc js loopne mov aas or cmc or mov push push add xor xchg movsb mov xor sbb cmc push add (bad) jo jb xchg mov jl push sbb sbb adc rcl xor es mov xor and cld jp repz cmp and or cli scas das sub fcmovu push lock lcall xchg fstpl aam sbb aaa jge and add je (bad) into ds mov out cmp fcomp cmpsl (bad) ficom cmc std test mov sahf pushf imul or or adc push jno pop inc out leave dec dec and adc mov daa test xor ffreep bnd rcl pop cmp or mov sbb cwtl lret push xor add cwtl cmp jae enter or pushf xorl aaa addr16 lcall sub movsb add addb rolb ficomp loop inc push icebp in jle pop ss lret (bad) shlb je or out add add fcomp lea pop dec cwtl mov lcall das jge mov pop add inc push pop and xor sbb shl test dec push dec sbb test xor mov sahf lahf push xchg nop loop push sbb add sbb xor test push add xor mov xor lahf cwtl in jmp std aas and jle popf rcl sbb add pop push sahf xchg pop adc (bad) pop inc adc inc push dec cwtl lahf jle adc jae enter jge or fstpl in loopne mov dec sub xor mov hlt mov lcall iret xchg (bad) mov push ljmp cmp test ret mov gs bound clc rol arpl adcl (bad) stc sub mov mov adc leave pushf jbe mov mov mov in daa sub jle xor in notl jg dec ffreep mov daa daa push inc mov sub add mov push pop es jmp mov stos stos (bad) xlat lcall cltd dec or fucomip cli and subl inc mov js cmc cmc ljmp jecxz jle push imul xor stos dec dec cmc cmc das and imul push or xchg cmp bound add ret test inc jns ja xor dec jns mov add sbb and xor mov sbb arpl xchg push or jl cmp or pop or test lcall cmpsb sub push pop dec add insb das sub (bad) add (bad) lret mov fmulp xchg mov ds test xor lcall add icebp test in or sbb pop adc push inc cmpsb mov daa and pop add out and sahf (bad) ljmp mov lock jmp pop adc dec push xchg xchg sbb mov xor inc push pop pop int3 xlat or pop adc and (bad) cld lock jl add or fstpl and daa add cmp sub xchg xchg and dec push rcrb leave rol xchg int addl jne jp cmp (bad) ret lds aaa or pop dec mov pop pop repz lret (bad) (bad) push add inc dec sahf addl stos push add aam sub add inc push outsb jbe aas and int pop sbb (bad) scas mov iret mov (bad) scas scas mov lcall out lahf xchg cmp xchg cmc repz sbb push inc jl xor jo push push mov jbe adc mov es sahf div out scas push push mov out ss icebp lock pop sbb int3 sub jo je adc inc dec pop push mov pop xor rol lahf outsl jns setb aaa aaa daa xor sti cwtl fwait insb or pop pop sbb (bad) pop sbb inc sbb iret repnz xchg loop addl daa pop pop jl movsl movsl lret lret (bad) mov cmp xchg fbld stos stos ret and mov repnz or rol gs mov mov movsb aad lock pusha int3 int3 imul inc mov loopne addr16 or mul dec push xor rcl outsl imul loop or das push push push and nop nop mov mov data16 in in push loopne sub sbbb sahf dec dec pop inc mov (bad) jmp dec fcomp ja adc or (bad) mov mov adc cmc adc fwait pushf push sbb cmp add std sbbb pop rcl jb mov and push push rol mov xor sbb ja dec (bad) loope pop inc inc or inc inc adc mov jne dec rcrl inc mov gs jl or add pusha sub mov lcall adc sub cs les dec out and sar scas out jae loopne,pt out lcall test lcall xor enter and jp add or jnp roll sbb jbe cmp inc add in lcall mov into adc aad rorb jae notl popa cmp pop and insl jno fs cmp push jns xlat lahf fild jnp mov jg orl (bad) cmp pop pop (bad) push sahf (bad) subb stos or outsb mov mov xchg test sbbl test push adc adc movsl outsl lock lds pop pop mulb ficom cmpsl aam stos loop imul or lcall adc sub and lods dec add sbb dec fdivrp and (bad) mov scas out jg ds in out inc fwait sbb mov test xlat mov in lds imul push jnp pop lea push push and (bad) jle in rcrb loop mov mov jns or mov jmp or ds adc push push push stc idivb and push loop iret lahf (bad) (bad) jnp repz adc inc lret (bad) mov das sbb adc lahf (bad) je aam scas jecxz inc push mov mov int andl pop pop add mull pushf pushf pop pop sub cmp loop dec pop fstl jns fmull or cmp ss sub mov pop or mov (bad) mov pusha pusha int3 int3 add pop or inc lret loopne dec pop or fsts cwtl sarl or ja inc pushf fistp inc push push push dec push fsts imul jmp or in cmp mov mov inc stos out repnz in sti insl aas outsl cs (bad) fcompl sbb lret xchg jb or addl scas xor aad outsl sahf xchg add dec cs cli fcompl ds lcall sub shr mov jge jle jb inc or push pop or sub inc mov hlt divb mov adc bound or sub cwtl ljmp sti lcall sub aam sub addr16 sub outsl pop dec dec fstpt mov lods lods out add add xchg test scas mov push push mov rcll fcoml cmpsb in subl xor xor dec cmp je or (bad) adc in xlat sahf (bad) mov xchg pop popf popf rcl cmp jns cmp jmp sub cmp push and or and push leave lods rcrb repz sar jbe xor (bad) xchg stc dec add insb pop or (bad) push and adcb xchg repnz mov mov loop ret popa lock adc push xchg movsl repnz (bad) je pop bound mov ficoml notb pusha and pop sub jo lcall ds mov addr16 inc and xor mov mov out cmp fisubrl aaa push xchg cmc icebp test xchg icebp icebp pop sbb imul adc mov add sbb test in ljmp mov xchg clc popf mov jns cmp idivl jmp pop push add jno cmove push cmp lret sub adc ss fdecstp jmp repz or jae adc ljmp das ss and (bad) je repnz xor mov mov test in xorl testb leave movsl (bad) mov (bad) pop pop xor cmp ret pop notb inc and mov dec scas into insb cmp ss adc mov outsb or mov ret mov cltd lock pusha mov push cmp inc inc cld cwtl test sub insb or jecxz daa daa inc xor dec add inc out fist push arpl js icebp nop (bad) mov aad imul or in sub mov mov out mov in sti jge inc mov cltd cltd cltd dec pop add xchg jb,pt or adcl jbe xchg cmc sbb std or sbb aaa pop hlt xchg fwait jmp aaa pop out lea add xchg or (bad) and and enter xor sbb adc mov bound dec es xchg cld fwait clc sub adc jne push xchg dec cmp jmp bound cmp sub ljmp mov sub pop adc aam sub addr16 add mov mov in lods mov imul scas scas mov pop push mov rolb xchg mov in subl jl xor pop adc test or add je adc movb in in (bad) sahf mov aad or sarb jnp jns cmp imull jge jmp sub adc push add or jno push mov pop jnp repz mov jbe adc fisttpl je adc inc test jo addb es mov xchg int andl rolb push movsl movsl pushl push pop bound shr xchg xchg cli mov in stos out insl and adc ljmp lcall or sub addr16 and sbb out mov xchg shl mov ds jecxz lahf fiadd push cmpsb cmc lret test xchg int3 icebp sbb in fiaddl and xor adc xor add xor (bad) push push in in ret sahf mov enter rcrl jns imul scas jmp sub jo adc push and jle and lods rcrl cmpsl repz mov pop aaa and stc imul sub (bad) push and and inc inc cmp in stc mov mov addl sbb pop and movsl (bad) mov lds bound out xchg xchg loop push stos (bad) out dec and mov dec fwait lods jg jb (bad) rcll mov sub mov mov mov addb int3 lahf and pop inc cmpsl clc mov or mov push xchg shrl sub inc loopne dec or outsl inc push fwait inc rcll xor stos cli cli mov cmp push add add int lock movsb out lods sbb mov insl cs xchg xchg (bad) ficompl pop out adc adc (bad) cwtl fildl jb cmc cmp mov sbb scas cmp xchg arpl sbb add fbld jle jecxz adc pop sbb mov adc add dec dec pusha and cmpsl ss fcomps je es or cs scas dec imul mov lcall push pop lgs cmp outsb sub jno or insl (bad) incl out cmp ds int sarl jmp jae loope sahf outsb das (bad) mov out or pop fs inc jl fs inc lods lcall or sbb stos (bad) es test cli sahf mov hlt xchg (bad) popf movsb sarb jns push cmp jmp sub adc push dec and or push fldcw jnp test popa adc loop stc stc add dec das sub inc movsb (bad) inc and adcb repnz mov mov stos int adcl lock pop pop and movsl fnstenv addr16 push bound out out xchg xchg int ja repnz fsubrs sub sub xchg cwtl ljmp packsswb aam sub addr16 sub sub mov mov mov fisubrl and test (bad) jae cli xchg nop icebp ja and insb insb fs inc xor xor stos leave ds jno es data16 cmp mov and in sahf sahf mov hlt xchg cmc popf mov jns cmp jmp sub jo adc push and jle pop jno push ret lahf jnp jnp xchg js xchg std inc aaa jno mov add xor inc loopne adc adcb fwait repnz mov mov movsb int adcl xor movsl mov vpsubsw cmp aam imul xchg les in mov dec stos into cmp inc ss rcll fistpll jl clc mov add int3 int3 aaa inc jbe or inc in cwtl loopne sub or xchg xchg daa daa push xor dec adc inc mov or insb push jg push cmc nop mov aad add cmpsl xchg (bad) or push push mov or (bad) mov mov out mov in sti dec aas dec cs cltd fstpl testl fcmovnu or fdivl xchg ss mov add sbb cmp jmp pop pop int3 lea mov sub (bad) inc and mov xchg pop xor jp pusha adc loope fistl es mov inc movsl inc pusha and ss push fcomps mov push jl and sbb inc outsb dec pop mov lcall mov cmp addr16 sub sub fstpt scas ror xchg out cmp fisubrl adc cmc icebp test (bad) icebp outsl sbb in subl adc adc xor add pop je dec mov in movsb sahf test mov xchg mov jnp jns cmp negl cwtl jmp sub xor push and pop jle jno push lea inc jnp repz std std aaa aaa or (bad) xchg stc add das jp and (bad) add test movsl jecxz inc dec es repnz mov mov int sbbl test sbb pop push scas movsl repnz (bad) js adc cmp (bad) mov stos stos in and je or scas ljmp mov arpl ret sbb aam sub addr16 sub pop pop dec dec fwait mov call out cmp ds test scas jecxz outsl push lret cmc movsl test roll jae xchg (bad) icebp adc shl orl (bad) cmp adc xor ljmp push or je dec mov in int3 sahf cld mov push xchg mov xchg pop out popf mov jns cmp idivl jmp sub jo push adc push and or jno push into lods in lahf data16 jnp repz fwait std pop aaa sub (bad) add das jne push and or bound es out mov add dec popa in outsl sbb insl push (bad) movsl cltd mov lds bound out cli xchg andl push and mov in adc rorl mov push ret (bad) cltd lock pusha scas int3 sub outsb or inc mov dec jge dec cmp mov xchg inc daa dec xor dec adc inc mov push es push push icebp nop fnstenv fsubrs insl or push cltd in add mov mov repnz in sti push aas inc cs fldcw cld cltd cli cltd push cmp xchg add imul pop mov cmc sub std push insl sbb outsl sub xchg fwait jmp cs call call add xor enter xor ja jbe sub loope push add or cltd cld mov sub adc add add fwait mov dec cmp xor jg or inc sub jo lcall xor aam sub addr16 sub sub int3 mov movsb rol (bad) out cmp mov adc cmc icebp test ret sbb imul jl xor adc leave or jo and cmp (bad) and in in sahf std mov push (bad) mov xchg pop out popf movsb rcrb jnp jns cmp negl (bad) jmp sub jo adc push and adc jno push enter dec bndldx repz xchg std inc aaa addr16 decl pop das cmp inc cmc (bad) dec and addb xchg bnd mov mov int orl test pop and mov (bad) gs push bound xchg shlb les pop sub sub ljmp pop arpl ret cmp aam sub addr16 sub cmp fnstsw lods ror mov dec cmp test scas scas std fidiv push lcall jae xchg test push enter pop imul jl xor xor (bad) leave jae cmp and pop add in int lret push pushl mov jnp jns add mov stos aaa scas jmp sub jo adc push and xor jno push lods lods lahf lahf pop cvttps2pi repz adc inc rorl das or inc cwtl (bad) jno rolb push movsl repnz mov mov lcall test adc push jecxz jecxz nop (bad) pop pop xor cmp cmc mov std stos mov mov dec sahf into cmp ja (bad) (bad) xor mov inc or movsb lods (bad) mov int3 inc inc push push dec or inc lret loopne dec inc or xchg xchg daa daa jl sahf shll sbb xor inc xchg dec or push push dec push fist imul ljmp push test aaa push adc repnz pop stos in sti aas aas cs fsts cltd lret pop push dec lret adc jb or adcl adc std sub sbb push pop rcll push pop pop rorb js (bad) jge or enter xor push sbb adc mov cmp cld cmpsl clc push inc inc adc jne dec add fwait les sub or das jg sub sub jo lcall adc aam sub insb sub adc jmp and mov stos out cmp in scas scas xchg ficom push mov int3 test xchg mov in cmpl fs jl xor adc xor sbb je dec xchg (bad) sbb in sahf sahf mov ret pop fcompl sub cmp jmp sub push and cmp jno push lods lods lahf lahf pop sysenter jnp repz adc inc fimull jns adc inc adc and cmpb repnz mov int subl test pop pop add movsl repnz (bad) inc pop sub out rcll fistl and sub sub jo lcall add aam sub bound jb push add mov xchg shl mov imul add lock (bad) ficom push mov xlat test xchg icebp icebp pop sbb imul jl xor xor dec add data16 dec xchg movb test mov push repz xchg pop fcomps jns jns movsl divl jge jmp sub push and sub jno push jmp movaps repz adc inc rorb insb das adc inc inc (bad) (bad) push aad scas jecxz inc addr16 lret mov mov lahf int xorl enter pop pop push push movsl movsl in xchg (bad) pop pop and imul fistl jne mov or into push shrl cli mov or mov stos (bad) mov int3 or pop or inc aam loopne or or fcoml rcl jp sbb ja inc sahf fisttp dec push dec push dec push nop nop cld mov aad imul out mov dec or mov mov mov repnz mov scas sti jge cs (bad) aam leave cltd pop pop or adc jb or orl push adc std and sbb adc jmp sbb lea add (bad) jb add mov jle dec sbb inc adc movsl loope add es cld mov pop inc push adc jne dec add fcoml and xor sub sub stos ljmp xchg fdivs arpl aam sub addr16 add pop push dec (bad) mov rol lods mov ja outsb ds ficom mov shll jae xchg mov sub in ret imul jge push adc leave leave dec dec push add daa je dec mov push mov mov push mov enter rcrb cmp cmp imull jge jmp sub jo adc push and xor push ljmp xor adc inc rorl das or (bad) jo roll arpl mov rorb mov int xorl pop pop add mov lds add pushf pop pop xor cmp cmc mov in stos mov sub sub jo lcall sbb aam sub addr16 add pop or mov rol lods test imul loopne xchg ficom push cmc cmc test mov sbb in subl dec jl xor or leave leave dec dec inc add je or push in in fcomps mov rolb sarb cmp idivl jge jmp sub push adc push and dec jle jno push call (bad) mov std aaa aaa add (bad) mov das adc inc xchg (bad) jbe addb es mov int addl sbb pop add movsl mov vpsubusb cmp mov xchg jmp lods out push fisttpl or into cmp ja (bad) (bad) xor mov or mov mov pusha jmp push das or inc cwtl cwtl loopne sbb or sti xchg js xor dec and inc mov push jle ja in mov aad cmp stos aad lahf idivb bound int cmp mov mov inc (bad) out repnz pop xchg xchg sti pop aas inc cs sbb lock negl xchg jns out test cs mov jl fwait cmc dec dec std std push insl imul sahf jmp xor lea (bad) mov into mov adc sbb sbb adc sub loopne add daa daa jns std (bad) sti stc inc inc adc and sti clc je push push cltd cltd xchg xchg cmp std sti popa popa aaa aaa or dec jge sub sub out call cwtl cwtl fcmovu popa addr16 sub sub and dec dec mov mov in cmp cmp (bad) push push hlt testb xchg lock sbb in xchg xchg xchg fs xor ss add je mov (bad) mov in in outsb sahf mov jp pop pop bound jns xor div jp jmp sub jo adc push add aas cmp lods out rcl inc inc das jnp repz push mov aaa addr16 stos dec dec jg or add (bad) (bad) and loop inc daa daa repz (bad) mov mov int3 (bad) (bad) pusha pusha test push push cmpsl cmpsl mov mov pusha pusha aas aas in in xchg xchg mov xchg scas scas jmp and sub sub ljmp lcall pop pop aad sub addr16 and add dec dec mov mov out cmp ds test scas fstp push push div test xchg xchg icebp icebp sbb subl js xor adc xor int3 leave dec dec add je dec dec mov push in in cwtl sahf mov (bad) call mov adc jns dec push xchg cltd adc test push jne push inc push push (bad) fisttpll ds lahf (bad) sbb lahf lcall sub loopne mov inc cmp xor in mov repnz int aam (bad) aam xchg ret adc jecxz je ss adc stos (bad) pop push add jle mov jne clc (bad) iret stos lods andb out mov into lea inc pop mov clc add out jecxz data16 out sbb test mov sub or and std xchg test dec dec push lock xor inc inc es or mov ja outsb insl push aad fcmovu mov in ret xchg popa imul (bad) out sub out popf xchg xor pop inc cs lods jno jmp in lock pop cmp ljmp insl in adcl adc fwait cmp xchg xchg insl and sbb xor hlt mov xor call mov or out inc dec and into mov push jl push jne jo inc xchg xchg push dec inc adc lods popf nop xchg xor dec mov repnz push push scas sahf pop adc imul inc dec pop (bad) mov repz cmp lahf dec pop push or inc inc and and xlat insl es scas ffreep xchg mov jne vpaddusw cmc mov adc sti cld icebp mov add loopne and xor insb jno test jo sbb data16 je and mov push mov ljmp cmp popf jnp sbb sbb jmp dec sub sqrtps data16 flds sbb jno cmp push popf adc pop pop es add sub adc mov subb repnz aad fdivs or out in sbb or rol fcmovnu cmpsb vlddqu xor dec dec xchg arpl cld (bad) xchg inc dec test movsl xchg into out stos mov add mov xor mov arpl dec inc pop inc add or dec out fisubrl (bad) mov mov leave test (bad) mov cmp xchg pushf in roll icebp mov jmp pop push insb adc adc inc push pop test and imul push adc xor mov call xchg xor cmc cld mov jns push mull dec adc jno punpckhdq push push int3 shll xor push and lods (bad) out data16 sbb xchg jbe xchg xchg push aaa adc call popa das jnp sbb mov jo jmp das es fwait rcr rcr leave mov out xorl pop push ds (bad) lret (bad) mov lods std cmc pop inc or pop dec mov outsb imul mov loope mov and xchg pop push outsb mov gs std out or mov movsb xor adc int3 inc inc push push or inc inc pushf cwtl loopne inc dec or xchg xchg push sub xor dec jae or or xor nop mov out stos mov or push jmp cmp mov mov repnz in sti dec aas sub sbb pop dec dec les add pop sbb pop pop pop fcoml adc cmc lds std fs mov ret pop xchg xchg in jmp pusha pop sub aad xchg movsb mov xor push sbb sbb adc loope add es js cld call adc jno push add lcall popa and add push xor sub cld ljmp std fldenv fcmovnb jo rcl xor sub pop pop push dec lock cwtl shrl cmp cli test scas fcmovu add hlt addl test loope pushf or sarl xor adc dec lds push addr16 dec dec mov push call mov mov xchg fcomps pop jns cmp negl push ljmp imul mov push push stos lods insb sahf or jae add std into ss inc leave (bad) stc sti add push inc aam sub jecxz inc and mov mov int addl test sbb push push andb pushf sub pusha bound cmp lods mov lea adc ljmp xlat fdivs pop mov sub addr16 das and sub sub dec dec xchg mov xchg shlb loop bound cmpsl cmp test scas inc fcoml fprem1 and cmp dec out cmpl outsb jl xor adc xor dec inc add xor movb out popf sahf pushf mov xchg shlb cmp cmc jg out jmp sub adc push dec mov stos push test or jnp repz (bad) std das aaa dec inc mov sub inc pop push inc rcl outsl and and jb (bad) div mov mov xchg push sbb push push mov (bad) cwtl pushf dec pop cmp cmp movsl mov scas stos fldz dec and dec dec (bad) into inc aas xor sti shl mov mov shll addr16 int3 int3 fldl push or flds cwtl loopne jmp or xchg xchg and xchg xor shrl xor dec je pop inc jae or adc push push pop push nop nop mov xlat (bad) outsl outsb lods lods scas scas cld std add sbb std cld jp cmpsl cmpsb cwtl cltd pop pop std cld out out inc inc (bad) vpsubusb sbb or lock mov mov das jnp,pn mov and dec dec ss mov cmp xchg daa es xchg add jae and sbb loop add or add in arpl lea pop ljmp iret mov inc outsb outsl arpl push addl jnp jno int3 cltd cwtl lods lods push out nop xchg or mov xchg xchg stos stos call addl rol sub aam jp out imul lds mov adc xor loop in je jno ds mov adc arpl cmp push jmp je sahf xchg xchg sahf lahf addb xor int3 dec dec or imul pop aam inc inc cli sti xchg test cmpsb cmpsl jnp mov push push push pop push fnop dec dec fnop sbb sub pop push clc fstps (bad) hlt arpl adc (bad) arpl mov aas ds aam movsb pop pop dec outsb sbb xchg insb insl lret scas or jbe mov in in out into mov std cld loope push pop sahf lahf (bad) (bad) das cmp dec dec or test jbe or xor or dec dec xchg inc inc inc inc rol sub aam jp out imul lds mov adc xor loop in je jno ds mov adc arpl cmp push jmp je sahf xchg xchg sahf lahf addb xor leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg das roll cmp idivl jmp sub jo adc push and mov lods push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) fcmovu jg jecxz inc inc es mov int addl sbb push push movsl movsl dec dec cmp pushf pushf pop pop bound cmp mov xchg stos stos out out fisub jbe xor dec into into cmp ss gs mov or pop add (bad) setg push push or inc inc cwtl cwtl loopne dec dec or mov push cs lret mov ja inc inc (bad) or push push push push push push nop nop mov aad xchg xchg stos push cmpsb cmpsl add (bad) push or push outsb in in push mov out repnz pop sbb add aas aas cs sbb cltd cltd cltd sbb pop dec dec xchg or addl fcoml adc cmc dec dec cld std insb insb sbb outsl pop pop xchg xchg jmp push pop pop mov js add mov mov sub add pop pop adc sub loope add cmp bound out ljmp xor call mov jg in xor push gs cmp cmp clc clc clc clc bound mov lret rcl dec fstl sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf push push jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop jl in (bad) sbb inc es jno inc inc inc push dec int jge (bad) sahf test push movsl movsl inc dec vpunpckhqdq call out out xchg xchg dec pop icebp clc jns stos stos pop adc jbe jne mov mov adc lcall inc pop fcom sub mov out pop pop dec dec mov insl insl push pop rol lods adc xor ds push pop push (bad) push push sbb (bad) jae insl insl push push jb in test fwait fwait pop jl xor adc xor cli stos stos pusha data16 cmp (bad) stos stos adc lahf sahf mov jns cmpsb cmpsb cltd popf rcl or jns les or jmp inc sub jns push and jle push jno push test (bad) jnp repz add aaa aaa es out stc insb outsl pop dec sub mov and in lea xchg fwait out fcom (bad) fidiv or jae pop xor aad mov mov repnz adc push pop fwait out in rol pop in fmul out xchg inc dec out loope lret dec dec lret lret cmp xor (bad) les mov add add or movsb add (bad) pavgb int3 mov or cwtl loopne mov repnz mov aaa xchg daa daa into into cs dec xchg ja inc (bad) fimul or push push push push push nop nop dec dec sub push stos stos xchg jmp push mov repnz pop and sti sti rol rcr fstps sbb cltd cltd loopne mov xchg or jl and pop pop (bad) adc cmc cmc mov add insl insl sbb outsl movsb movsb push jmp push pop pop jb (bad) (bad) call in add xor ror xchg mov inc adc jg jl or xchg ja push dec js lahf fcompl jno dec pushf fiaddl jmp lea popa jb sub inc dec pop dec mov cmc divb pop xor adc inc push push and jl cmp fistpl dec lret int3 loopne rorl push into ror fidiv mull lock xchg (bad) jo lds or adc pop inc mov jno or sbb jne int3 mov in test xlat in cmp mov or push dec xchg fwait adc lret mov adc jno sbb push push pop push fcmovnu pop pop pop push xor int3 (bad) cld jnp or lahf jo mov inc push sub ljmp dec jg xor mov add out mov inc inc xchg fmul (bad) mov mov jecxz outsb jne sub es mov mov out jbe push inc push pop iret lcall div mov mov dec inc lahf xchg stc mov pop or mov pop inc dec inc add sub cmp fild dec (bad) (bad) mov ficom inc dec int fcmovne mov nop in shll sahf xchg ja lahf and or or sbb jno inc push mov push je pop pop je add (bad) or sti in test cmc jecxz jns out mov or or push dec adcl push push pop jge add dec add pop or (bad) div push xchg ja (bad) cwtl pop push and loopne xchg outsl outsb add ss add cmc adcl add and push inc sbbb rol test mov loope cmp sub lock div js or push dec fwait xchg clc add orl loope mov out pop pop inc push mov push or (bad) adc decb lods mov rorl mov push gs std nop mov dec jg pop dec (bad) in inc pop inc inc mov inc pop and push push xor mov sub je jnp div fcmovnu mov dec pop les gs jnp lahf xchg push cli and (bad) adc cmp orl jne cld jmp clc jae sub cmc call arpl mov mov andb cwtl sahf add jae sub dec cmp hlt out mov and call inc js in dec dec and leave cmpsb lods mov inc inc jge outsl jb jge inc xchg shrl push push adc jnp push dec cli xchg adc bound div cmc sbb xchg pop add addr16 and adc dec dec sahf (bad) cwtl lret mov mov mov xor adc popa insl xor das daa ror dec add shlb mov dec dec push mov (bad) mov cmp xchg in mov std lahf sarl and or dec or adc das cmp sbb fwait insl and jl cmp and sub xor xor lock pop push cmp pushf adc pushf test jns and dec or dec dec cwtl (bad) pop adc add in mov xchg xchg lcall loope mov popa pop dec jg sub mulb xchg xchg daa es lcall into (bad) mov xor (bad) pop cmp sub lret aam test cmc jnp push inc dec push fwait xchg pop mov xchg into popf push push pop inc pop pop ljmp ljmp mov dec pop add ja jl and (bad) push inc mov xchg pop push pop pop mov fmull cltd xchg mul mov sbb jge xchg add inc sbb cmp outsl jo cmpsl and and adc adc test cmp addl xor xlat add cmc cmc cmp jmp sub sub xchg cwtl sbb lret test push add sbb hlt xchg pop and (bad) icebp (bad) bound push shrl inc pop sbb (bad) loope xchg bound (bad) cmp and mov mov into aam shr in in adc cs shlb bound adc iret cmc (bad) int daa fs out into into (bad) dec dec clc test movsb call cmpsl dec pop pop dec (bad) mov pop (bad) sbb in jae out stos mov popf test xor insb and mov dec ffreep mov dec pop inc inc mov push inc cmp add mov sub arpl insl ja notl add lret test or int or xor xchg xchg pop dec dec push lods mov cmp clc hlt cld aas jno and xchg add pusha gs mov pusha xchg std mov sbb dec or mov mov jnp aas jecxz and enter mov ret cmpsb mov pop pop push adc lea sbb mov addr16 add mov adc (bad) fwait in push push nop mov inc inc inc addr16 or or (bad) mov mov mov add pop push pop pop inc push insb and cmp push dec (bad) int loopne ret mov rol ret (bad) popa pusha aad in in mov pop mul (bad) fcomps insl mov adc sbb arpl inc test cmp ja daa je or stos jne (bad) scas scas mov shl repnz mov sbb xlat adc lret lahf inc inc push sbb jp push inc dec pop aam or sbb fidivr setbe pop pop sbb (bad) outsb outsl pop (bad) xor (bad) nop or in mov pushf xchg cld aam rcrl icebp mov push xor test pusha or mov repz loope lret (bad) into inc push pop inc pop adc lcall stos mov dec mov mov or add push inc insb popa cmp outsb cmp (bad) (bad) add movsl mov mov push ffree lret scas lcall loop mov sahf lahf insl js mov mov inc adc push adc insl push add adc jne int3 test fadd (bad) adc repz out lock push push cwtl sbbb jmp inc dec pop push addr16 push inc dec dec sbb std sub cmp push jae fucomp mulb or xchg xor fstpl xor loopne xchg outsl ja dec jg aas data16 inc push loope xchg xchg sahf jmp fmul (bad) fnop mov push mulb xor ljmp sbb out add ret (bad) into adcb mov cmp push push loope add fmulp adc jmp clc mov lret ficom mov sub and cmc test sbb ffreep mov dec dec pop inc mov adc and pushf pushf dec pop pop daa sub ss sar (bad) cld stc dec add mov inc pop inc (bad) in inc inc in fmul imul cmp push inc dec dec fnstenv jmp jbe imul mul stos mov jge fwait xchg and fstpl and xor cld popf leave push dec daa xor pusha mov or or call jbe jp jp or xchg bound inc dec sbb popf lahf mov add mov addr16 jmp mov push xchg popl pop push popa fs inc dec dec ljmp pushl scas cmp hlt mov pop inc adc dec push inc jbe cmp and (bad) lret (bad) mov lret (bad) mov lcall in xchg icebp xor test ror inc dec add pop adc inc jne push pop jmp push add cmp mov daa lahf test lock cmc aam jns out mov sbb push dec sahf fwait sbb lret pushf inc pop sbb push cmp jp jp cwtl lret or add and lods icebp cld mov rcll pop pop sub ljmp inc jg adc inc call ss push repnz xor mov int addl add sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and es out out jl lcall lret push push (bad) and addr16 add dec mov mov out cmp ss ficom cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz loopne cltd int subl lret sbb jne xchg movsl test daa pop bound cmp shll int test dec and mov dec test push cmp ss gs mov dec or mov (bad) sahf lock pusha mov push js and loopne dec insb or clc xchg dec daa xor rcl add jnp inc ja inc out fistpll or push ss push push nop nop divb lret cmpsl lcall in push push das inc and repnz in sti pop aas cs fldcw mov mov dec mov jb or sbb push pop neg cmp dec std std inc insl sbb outsl pop pop xchg xchg fldl2t pop xor jo mov call push and into mov adc jns ja jp dec sub es popf cld cmp and mov add add fwait in dec cmp pushl or sub sub jo lcall xor aam sub addr16 add mov rol lods mov pop cmp mov xor cmc enter push jae xchg nop icebp jo xchg in subl sbb adc movsl leave sub jl sbb je sbb movb test jmp std mov fnstenv int mov jns cmp jmp sub add inc adc push and adc jno push enter jp (bad) xchg jle xchg std inc aaa inc inc (bad) (bad) mov das sub inc mov xorb xchg repnz out lock lock test adc push loope sti mov lds jl cmpsb out fcoms ret xchg clc stos cmpsl out insb and jp mov ljmp fdivs arpl ret pop pop xchg imul and sbb mov lret lods out pop dec ds test scas in fisub (bad) cmc mov in inc jae xchg enter cmpsl in subl xor jge pushf leave add add xor xchg add in lret mov push divl fcomps sub cmp jmp sub jo adc push and jle es push stc lods xlat lahf (bad) (bad) jnp repz adc inc (bad) (bad) mov das or inc (bad) (bad) jbe lds je mov mov mov lds pop sbb adc movsl stc mov lds imul xchg xchg stos stos lods out outsb and mov dec mov jo jns add idivl inc or mov (bad) lock int3 add inc or cwtl test or fsts lahf shll or ja inc mov dec or push push push pop push ficom cmp loop repz mov inc or push mov mov mov inc scas out repnz pop mov aas jge pushf fsts fcompl dec dec les dec or sbb or fcompl mov or test sbb adc jmp sbb lea cmpsl call and add clc mov jl push sbb adc sub loope add js cld cld stos clc adc adc jne push add fwait xchg xchg cmp mov and xor jg insb sub mov jo lcall pop pop nop aam sub addr16 add pop or mov mov in stos out cmp ds test scas lcall test add xchg mov push sbb imul jl xor adc xor add je add (bad) push push in in rcrb mov leave xchg pop popf popf rcl cmp jns cmp notl subl lcall cmp nop cmp push sbb cmp pop fistl inc and sub (bad) xchg stc add push rcrb nop jo (bad) add adc ja inc es mov addl sbb pop push push movsl movsl icebp mov (bad) fs pop bound xchg lds cwtl stos mov add sbb sbb mov iret ljmp inc arpl ret outsl pop mov or addr16 sub cs sub mov mov out jg push or out pusha or cmc test xchg xchg icebp icebp js nop in subl or adc xor popl push push daa data16 dec mov push sub sahf cli mov xchg rcrb or cmp negl (bad) jmp sub cs push and pop jle jno push xchg lods xchg lahf sub or repz mov cmp (bad) fdivr jae comiss arpl (bad) or jecxz inc sbb iret repnz lcall int andl test pop adc movsl in mov into pushf aaa pop bound cmp stc mov jmp and mov lret or cmp ss and mov dec or movsb stos (bad) mov int3 adc inc or loopne dec dec or enter js lahf sarl dec cmp inc xchg fisttp push push push push pop push xlat nop out pushf aad imul repz movsb testb lods in es add repnz mov mov cs fstps cltd cltd cltd cltd pop pop or xchg sub sbbl pop adc std cmp sbb sbb xchg mov push or lea mov (bad) and mov xchg jle dec sbb pop adc mov sub cld clc clc inc inc inc adc and add fwait lds add jns mov xor jg jge popa sub rcrl xchg ret adc lcall sub sbb mov mov loop mov jg push cld test scas mov push push mov test fcoml mov rolb xor xor inc adc xchg push dec inc add cmp mov add sahf rorb xchg pop fcomps xor cmp jmp sub push and xor jno push jmp (bad) jnp repz adc inc rorl das add (bad) push jecxz inc jno mov mov cwtl int andl test sbb push in movsl jecxz add pushf pop pop xor out ficoml (bad) xchg stos stos mov sub mov jo lcall sbb aam sub addr16 sbb jmp mov mov outsb cmp lock scas (bad) push push mov (bad) xor xlat xchg movsl icebp dec sbb imul jl xor je mov sbb add aaa je dec xchg movb in in leave sahf rorb xchg shrb jnp jns cmp jmp sub pop adc push and cmp jno push cli lods (bad) lahf inc (bad) jnp repz adc inc lret stc push add pop sbb xchg (bad) and addb es lret mov mov mov rolb push sbb pop add movsl loopne mov rcrb cmp repz cli stos mov mov lret add into jp jp add gs pop or mov mov int3 pop inc push push pop or loopne dec inc or xchg xchg daa daa xor dec xor pop inc xchg fistp dec push push push dec push fsts sub stos out cmpsl mov push test push mov inc mov pop mov mov cs sbb int3 cltd fstpl roll pop or orl inc adc std add and push sub pop ret jmp sbb lea lods call and adc in cwtl enter xor dec sbb adc movsl loope add sub cld mov inc inc inc adc ss add fwait ret cmp inc or dec sub sub sub jo lcall pop pop adc js outsb and pop pop dec dec ljmp sar scas out cmp ds test scas lahf fimul push cmpsb cmc rolb xchg mov in cmpl sub push adc lcall push xor je dec add push in in lret mov push out mov xchg leave popf adc jnp jns cmp jmp sub jo adc push and daa jle jno push stc lods rcrb movsl repz adc inc (bad) (bad) lods stc push add push pop adc and andb repnz in mov int xorl adc push out movsl mov (bad) pushf inc pop and cmp in dec pop rclb and jo mov jo lcall or aam sub addr16 add pop cmovle mov rol lods mov jnp loopew,pt sti scas ficomp push cmpsb cmc rolb xchg mov dec sbb imul xor push or dec inc add xor xchg (bad) adc in lret mov in movl xor jl mov sub jmp sub jo adc push and sub xor push in lret lahf dec (bad) jnp repz adc inc rorl das pop pop adc (bad) gs subb mov mov cltd int andl test or push cld movsl lock (bad) pop pop xor cmp cmc mov rep lods out jae int mov fmuls cmp ss shll mov dec or mov (bad) mov xor mov or or inc cwtl cwtl loopne push dec inc or ret xchg outsb daa popa xor shll push dec cmp inc (bad) fild inc push dec push dec push add nop nop out pushf aad imul cmc cmpsl mov inc or stos in push mov inc mov cmpsb repnz in sti push jle (bad) sbb int ficompl iret xchg es or orl adc std sub sbb cvtdq2ps xchg mov push sbb add insb and inc in mov jg push sbb adc jg mov xor cld lods clc add adc ss add ficom and xor jg jle imul ljmp mov arpl aam sub addr16 and add or out mov add lods mov outsb cmp ds test scas nop ficom cmpsb cmc roll fcoml mov roll fs jl xor jp xchg or add cmp pop adc in lret mov push loop aam adc popf xchg shrb jnp jns cmp jmp sub adc push jbe insl cmp mov adc stc lods rcrb mov std outsb aaa inc inc (bad) (bad) add push pop or (bad) jo iret andb mov mov mov fiaddl dec sbb pop add in movsl stc mov (bad) inc pop xor cmp repnz (bad) stos mov sub mov jo lcall pop pop xchg js xor and subps dec repnz rol lods mov push test scas mov sbb cmc int xchg jae rcll in subl fs jle push adc mov dec dec push add cmp movb test mov push out aam sbb int pushf sarb jnp jns cmp imull jge jmp sub jo adc push and cmp jno push lods lods lahf lahf pop comiss repz adc inc (bad) (bad) mov das or inc lahf (bad) push movl fmull loope lahf int subl ret test pop pop sbb movsl in xchg (bad) pop pop sub jp mov mov stos stos mov mov dec add xchg outsl cmp ss sub cld mov or mov lods (bad) mov int3 or or enter sbb or lds xchg sarl sbb and adc fisttp dec push push push dec push les and cmpsl movsl testb mov mov mov inc mov mov in sti jbe jge nop fsts int cltd cltd dec pop sbb adc dec or orl pop adc ds dec sbb adc jmp pop pop lret add jbe adc mov jns dec sbb inc adc test dec add sub cld stos clc push inc pop adc es add fwait rcll gs push dec ss sub mov jo lcall pop pop xchg js xor and adc mov rol lods mov push test scas cwtl fiadd push mov shll jae xchg mov in cmpl fs xor inc adc fwait leave add dec add cmp mov adc mov mov push loop aam adc popf xchg sarb jnp jns cmp jmp sub inc adc push and cmp jno push jmp (bad) jnp repz adc inc enter add jl or inc cltd (bad) jno aam mov pop inc addr16 mov loope mov lret popa movl mov (bad) inc pop bound out rcll xchg out stos out out and jns jl scas ljmp mov arpl aam sub addr16 popa and or cld mov xchg jmp cmp lock scas (bad) push push cmpsb cmc xlat test xchg mov in cmpl fs xor inc adc test or push add xor xchg (bad) sbb in sahf sahf mov lret pop into popf cwtl (bad) xor aas jns cmp imull jge jmp sub jo adc push and cmp jno push jecxz lahf lahf pop sysenter jnp repz adc inc fisttpl jns add sbb inc cltd (bad) push jecxz inc es sti mov int subl pop pop add mov (bad) pop pop aaa bound stos out fsts xchg xchg stos stos mov mov dec xchg into jns jne xchg (bad) xor mov inc or mov ret lods (bad) mov int3 or push or inc fistpl dec or les xchg shrl dec xor inc fisttp dec push push push dec push aad out nop aad imul call or push mov mov mov inc mov pop movsl in sti imul cs fstps cltd cltd cltd cltd dec pop or leave xchg jb or roll mov push adc aas insl dec sbb or xchg test js add pop fisttp cmp (bad) and adc mov bound push sbb pop adc loope push add aas js cld stos clc push inc inc adc jne push add fwait (bad) xchg push mov xor cmp sub movsb ljmp cltd fsubrs arpl ret pop pop xchg imul and adc sti mov rol lods mov ds test scas fiadd push mov test fcoml test addl xor inc adc xchg or add daa je dec add push in in into sahf fisttpl aam sbb into popf adc jnp jns cmp imull sub jo adc push and cmp jno push std lods int inc (bad) mov inc adc inc (bad) (bad) lods stc inc add adc inc xchg (bad) and addb es lret mov mov mov lret popa test push out repnz (bad) inc pop daa bound mov mov jecxz mov sub sub jo lcall adc aam sub addr16 add pop or insl icebp mov mov imul sti scas (bad) ficom movsl cmc xlat test mov in andl fs jl xor popa xor add aaa je dec mov add push push test mov push cli mov xchg pop aam sahf (bad) xor sub cmp jmp sub inc adc push and xor jno push call rdmsr jnp repz adc inc into (bad) stos stc inc add pop pop push inc lahf (bad) jl lds arpl cmpsb repnz cmc mov lahf int xorl int inc sbb pop sbb movsl pushl pop pop xor cmp icebp mov in stos out out and (bad) mov dec or xchg (bad) xor mov dec or mov (bad) mov int3 add pop or inc fstpl or mov xchg jb xor dec xor inc xchg fistp pop push inc push pop push fsts cs cmpsl cmpsl div inc or in es add repnz in sti jp jp (bad) sbb (bad) cltd fistpl roll pop or sbb adc adc std sub dec sbb adc jmp pop pop into lea call pusha and inc jecxz lcall sbb adc sub es js cld clc clc inc inc pop adc es add fsts sub xor xor sub scas ljmp xchg fsubrs xchg ret push pop xchg aam sub addr16 and add pop add mov xchg jmp cmp sti test scas xchg ficomp test xchg movsl icebp pop sbb imul jl xor jl pushf leave push dec inc add and mov push mov mov xchg pop ficomp sub cmp jmp sub jo adc push and aaa jle jno push lods lods lahf lahf inc sysenter jnp repz mov jb or (bad) mov das or inc (bad) (bad) ja addb es mov mov lahf int subl ret test sbb pop push mulb into pushf pop pop sub cmp jmp pop pop ficoml je sub scas ljmp xchg fdivs arpl aam sub addr16 and add add mov rol lods mov jb imul (bad) push push mov sarl jae xchg mov dec sbb in cmpl xor inc adc pushf leave push dec push add daa je dec add push mov mov xchg aam adc jnp jns cmp jmp sub jo adc push and daa jle jno push in int3 lahf dec movaps repz adc fmull bound push pop or (bad) insl and xorb mov mov (bad) int andl test adc pop push repnz in mov enter xor cmp call xchg stos stos cmpsl out outsl and mov dec lcall shrl mov mov (bad) mov int3 adc inc or inc cwtl cwtl loopne add or rclb (bad) (bad) jno or and inc nop fild inc push inc push push push aad loope aad and stos out cmpsl movsb (bad) dec or test mov mov scas out repnz pop in sti sti jbe pusha cs (bad) fcompl dec dec into xchg jb or adcl push adc cmc push dec mov sub sbb sbb xchg jmp push adc lea scas call jno or mov jns push sbb inc adc loope add ss cld mov inc inc pop adc and add fwait lds sub xor xor sub scas ljmp xchg fsubs arpl ret pop pop pushf aam sub addr16 jae inc add pop sbb mov add je push test scas scas xchg fiadd push mov (bad) ss xchg mov in xorl fs jge inc adc mov adc push add je add (bad) or sahf fmull roll xchg (bad) xor jns cmp jmp sub jo adc push and sub jno push ljmp jnp repz adc inc ret (bad) mov das or inc test popa and xorb cmpsb repnz mov add add mov rolb push sbb adc movsl repnz (bad) pop pop and out lds ficoml outsl and sub sub jo lcall sbb aam sub addr16 add mov pop loop mov cmp ds test scas xchg fiadd push mov roll rclb in subl xor adc mov add add je or xchg (bad) sbb mov mov push std mov xchg pop rcrl jns jl mov jmp sub push adc push and cmp jno push stc lods rcrb repz mov inc fisttpll data16 or adc (bad) jbe int mov add repnz mov mov mov xlat xorl rolb push movsl movsl lock (bad) push pop daa bound mov mov ljmp int sahf lret sbb cmp ss shrl mov or movsb mov mov and inc dec push dec or cwtl mov add or fistl test pusha xor dec daa ja inc cwtl fistp inc push inc push dec push ret mov aad imul hlt cmpsl mov push test push mov inc movsb out repnz in sti jp jp mov dec sbb cltd int pop pop dec dec rolb or orl push adc std ds push sbb adc jmp or lea mov (bad) jno add hlt mov arpl sbb pop sbb bound mov es scas cld mov adc and add fwait lds xor xor sub sub jo lcall pop pop xchg aam sub outsb sub adc sti mov (bad) shr mov ds test scas xchg ficom push mov shll jae xchg movsl icebp pop sbb imul xor push adc or dec push add daa je dec xchg (bad) adc in rcrb mov roll shrb jnp add jns cmp insl sub push and sub jno push push ljmp jnp repz adc inc fisttpl imul xchg (bad) imul lods jecxz inc es mov mov cltd int subl push pop adc movsl jecxz test pushf pushf pop pop and out aad cmc mov stc stos stos out jne imul mov lcall or aam sub addr16 insb and sbb std mov pop (bad) lods out jge imul test scas mov add cmc (bad) test xchg mov in andl cmp pop adc popf leave pop dec dec add cmp xchg (bad) sbb in lret sahf les xchg test xor jns cmp jmp sub jo adc push and jle ss push in fcompl mov std jo push inc fmull jge adc inc test jo (bad) subb mov mov mov (bad) subl movl mov (bad) pop pop xor cmp out push pop ficoml jae les or into cmp jno xchg shrl mov int3 mov (bad) movsb lock int3 add dec or inc rcrl pop or rclb nop sarl or ja inc (bad) or dec push push push push push rcll daa imul loop mov push test push mov inc movsb out repnz in sti insl aas imul (bad) fcompl or adc or les lahf faddl cmpsl cmc add std aas insl pop sbb push pop rcll push or lea call and inc mov xchg jns pop sbb inc adc mov cmp cld mov adc and add fwait (bad) xchg cmp mov xor sub sub jo lcall pop pop popf aam sub addr16 sub sbb idivl xchg shl movsl out cmp add jmp fiadd push mov movl push sbb imul jl xor xor dec dec add xor mov push mov mov in lret pop iret popf xchg sarb jnp jns cmp jmp sub jo adc push and cmp push loope fcompl mov inc adc inc rorb das or adc and subb mov mov mov xlat andl test sbb push movsl movsl lock (bad) push pop bound mov mov (bad) stos stos out outsb and bound ljmp lcall minps addr16 add pop add mov mov out lods cmpsl out cmp ds test scas xchg ficom push mov (bad) xor xchg mov pop sbb imul jl xor xor add aaa je dec xchg (bad) sbb in int3 sahf int3 mov push loop ret xchg fcomps jns jl mov jmp sub jo adc push and sub jno push in int3 lahf pop cvtps2pi repz adc inc lret stc add push inc xchg (bad) jo rolb je mov iret mov mov test rolb push sbb pop add movsl lock (bad) push pop bound mov mov (bad) stos stos out insl and mov dec mov imul gs mov into mov (bad) mov int3 add or inc inc fistp dec or fistl xchg (bad) jne sbb ja inc xchg fistp pop push push push push push nop nop cmc mov aad imul repz movsb testb mov mov mov repnz pop stos in sti js jnp nop fstps int lret cltd push pop or xchg xor or sbbl adc std sub sbb cvtdq2ps xchg movsl jmp sbb lea lods call arpl adc mov xor sbb pop sbb bound mov es mov inc push adc add ja mov add fwait lds xor xor sub sub jo lcall adc aam sub addr16 add mov add lods mov ds test scas lahf fiadd push mov test fistl mov int sub insb and data16 jo xchg add add and add push mov mov push jecxz iret xchg pop leave popf (bad) (bad) aaa jnp jns cmp jmp sub jo adc push and jle ss push in fcompl mov std jb push inc fisttpl addr16 sbb inc popf (bad) data16 cmpb cmpsl repnz mov mov or roll out loop xchg (bad) pop pop sub cmp xchg call xchg clc stos mov sub stos ljmp mov sub ret pop pop xchg aam sub outsb sub sbb mov xchg sar mov jg push clc test scas xchg fimul push lods cmc test fstl in movl pusha xor xor dec dec add je or push test mov push loop ret xchg fistpl cmp push jge jmp sub push and cmp jno push stc lods iret lahf inc movaps repz mov inc lret stc inc add push pop adc (bad) jbe leave andb mov mov or rolb push loope repnz lds je mov mov out stos stos out push lret cmovs into cmp jo mov sub mov dec or mov (bad) mov sub inc inc push or inc inc ficomp dec or aam jle jb popf (bad) jno dec dec xor inc xchg fisttp pop push inc push pop push aam (bad) mov aad imul cmpsl cmpsl div dec or mov mov mov inc mov pop mov aas imul (bad) fcompl add xchg cmp sbb add sbb xchg fcompl mov add std sub sbb sbb jmp adc lea call imul inc in or dec sbb pop adc loope inc add xor mov inc inc adc daa jne add ficom gs inc or dec cmp sub mov jo lcall adc cwtl aam sub addr16 add mov mov loopne mov ds test scas xchg ficomp test xchg mov sbb in movl ja inc adc or add and mov push movsl in rcrb repz xchg pop rcrb jns jge mov jmp sub push and xor jno push call rdmsr jnp repz adc inc lret stc inc add sbb inc cwtl (bad) arpl andb mov leave mov mov cltd int xorl int pop sbb adc movsl sti mov (bad) pop pop aaa bound cmpsl out xchg xchg out dec pop fist push sub into lcall sbb aam sub addr16 sbb lock mov (bad) lods mov outsb cmp loope jecxz ficom mov int3 test xchg test in cmpl cmp pop adc (bad) leave or add xor mov push movsl in rcrb in ret xchg pop leave popf xchg shrb jnp jns cmp jmp sub adc push arpl cmp jno push call (bad) jnp repz adc inc (bad) (bad) mov dec add das pop pop add (bad) push jecxz inc jbe stos repnz cld mov int andl enter or push movsl movsl icebp mov (bad) push pop and cmp out inc pop xlat xchg jecxz mov mov dec mov fs ss (bad) xor mov dec or mov (bad) lock inc dec push pop or inc fstps or mov xchg je je test xor dec dec xor add or push push push push nop nop divb out (bad) cmpsl movsl negb push push test sub out lret mov inc mov repnz pop mov aas js pushf (bad) int fcomps aam adc ss or orl inc adc cmp sbb pop pop xchg xchg lods jmp or lea mov (bad) and inc repnz xor sbb pop sbb bound mov inc add cmp clc push inc push adc jne inc add fcoms sub xor cmp sub sub jo lcall or sub addr16 add mov nop shr mov ds test scas xchg fiadd mov ret shll jae xchg test dec sbb imul jl xor je mov sbb add cmp (bad) push push in in ficompl loopne ret xchg pop fcomps cmp cmp jmp sub jo adc push and sub jno push loope ficompl mov std jp inc inc (bad) (bad) mov das or inc xchg (bad) popa and andb movsb repnz mov mov int xorl sbb push mulb fcomps cmp in dec pop fist jae jg imul ljmp mov sub ret sbb aam sub addr16 sub or jmp cs mulb mov push push cli test scas lcall test xchg mov dec sbb imul jl xor adc xor add es dec test add in int3 sahf int3 mov push loop ret xchg fstps ss cmp jmp sub pop adc push and cmp jno push jmp (bad) mov pop adc inc int3 (bad) mov push add sbb inc test jo lds bound mov mov or movl mov (bad) pop pop bound mov mov call add add mov mov cmp jb (bad) shrl clc mov inc or mov (bad) mov xor int3 inc inc push push dec or inc aam mov or rcll adc xor dec cmp inc lcall push dec push fstl imul pop or test cmp loopne (bad) mov inc mov pop mov aas insl cs pop sbb cltd int pop pop dec dec ret xchg and or orl push adc std cs push sbb sbb xchg cmpsl jmp adc lea mov (bad) je or mov jae push sbb inc adc scas loope add xor cld scas clc inc inc push adc and add fstl xor xor sub sub sub jo lcall push pop xchg aam sub addr16 add pop sbb mov (bad) shl mov jg ds loopne nop fiadd push cmpsl cmc lret sarl jae xchg mov in subl aas jl xor xor dec dec add xor mov push mov mov push stc mov xchg pop fcomps cmp arpl mov jmp sub jo adc push and cmp jno push std lods rcrb mov pop adc inc rorb das or inc xchg (bad) push les es cmc mov lahf int subl push pop adc movsl hlt mov (bad) pop pop and cmp repz in stos mov sub ljmp lcall adc aam sub insb sub sbb std mov xchg sar test loope,pt cld scas lahf ficom push mov (bad) jae rcll mov roll daa xor pop adc xchg or add cmp xchg movb mov mov pushl popf popf rcl cmp jns cmp insb sub jo adc push and sub and push ljmp xor mov std add jnp add (bad) stos stc dec add sbb inc (bad) (bad) addr16 subb mov mov mov addl sbb pop push push lock jecxz vpandn cmp cmc mov loop mov mov lret add into cmp jne test sub idivl dec or movsb stos (bad) mov int3 inc inc push push dec or loopne dec or mov xchg fs jp cwtl sarl pop dec and inc (bad) or dec push dec push dec push enter xchg imul in mov push movsl in and mov mov out mov adc in sti jo jp cwtl (bad) fcompl add xchg and or adcl pop adc std das insl push sbb adc jmp pop pop ret lea mov (bad) insl and inc hlt mov jle pop sbb sbb adc test dec add sub cld mov push inc push adc cmp dec add fwait ret xchg popa cmp xor ss sub mov jo lcall or sub addr16 je dec add mov xchg shr mov outsb cmp cld test scas ficom mov rolb fistl lods in subl sub inc adc mov dec dec inc add cmp xchg movb test mov push loop iret xchg pop rcrl sub idivl jmp push adc push and jle xor push in rcrl mov inc adc inc (bad) (bad) mov das push pop add adc and andb mov mov mov movl adc movsl (bad) mov (bad) push pop xor cmp out mov stos stos mov sub jo lcall sbb aam sub addr16 add sub mov out rolb adc test scas scas neg push push fdiv test (bad) xchg icebp icebp js mov in subl push jl xor xor mov add cmp adc (bad) xor in clc sahf loopne sub mov xchg repz mov (bad) push jns cmp jmp sub jo adc push and jle add cmp lahf pusha (bad) jnp repz (bad) std imul inc (bad) (bad) lcall pop and (bad) inc and orb repnz lds popa popa test push aad (bad) mov (bad) jae add cmp into mov (bad) stos xchg inc and mov lret sub out into dec cmp ss adc mov jge stos mov (bad) xchg lock push or inc inc mov dec fs hlt xchg dec daa pop xor dec adc daa inc (bad) fistpll push outsl push push nop nop loopne mov push imul shll jp mov push mov inc (bad) out repnz pop stos in sti dec aas pop cs imul pop pop or adc jb or sbbl jp xchg and std std cmp sbb xor loop xchg xor add lea mov js lret (bad) insb and inc loope test fstl sbb sub es movsl cld clc clc inc inc inc adc xor add fstl gs xor xor sub movsb ljmp lods fsubs lahf ret bound aam sub addr16 sub jb and mov rol lods int3 out cmp ds test scas lahf ficom mov (bad) jae rcll in movb fs xor ja mov or add je ja stos (bad) cmp in lcall mov mov sbb shr sbb jns pop mov sbb jmp sub jo adc push and adc jno push fldcw (bad) xchg repz (bad) (bad) mov das maxps inc xchg (bad) jge addb es loop leave mov mov popa testb xchg movsl test jbe adc cmp into mov into stos mov sub ljmp lcall add outsl pop aam sub and sub xor sti mov xchg rcr xchg out cmp iret test scas (bad) push push xchg cmc mov mov jae xlat xchg mov imul or fs jl xor xor add je or xchg (bad) sbb scas in repnz out and mov xchg pop fcomps jns pop cmp negl jge jmp sub push and sbb jno push leave lods cli lahf pfmul repz adc sti (bad) cwtl stc push add das pop daa inc movsb (bad) inc and orb repnz mov mov test popa mov jns pop pop adc movsl (bad) mov (bad) jb or dec cmp aad outsb pop cld xchg les in mov lret js loop (bad) ss gs mov addr16 mov test sub inc jnp or inc inc fistp pop or (bad) xchg pop daa push xor adc inc mov push ss xor mov aad imul jge gs mov sub mov mov inc mov mov cmp sti inc aas cs cltd hlt cltd das pop dec dec lret adc jb or sbbl jo sahf cmc or std sbb sbb aaa pop hlt xchg nop jmp xor lea (bad) call dec and inc lret mov push xor pop sbb inc sub es into cld int ja js adc cli cli jne dec add fwait in dec cmp xor sbb sub mov (bad) lcall ret sub aam sub addr16 sub cmp fistpll rol lods (bad) out cmp les cmp test xchg xchg icebp sbb in rolb add inc xor xor add adc mov push mov lock in mov push xlat mov xchg pop rcrl adc cmp jmp sub inc adc push and sbb jno push enter outsb lar repz cltd std add sub (bad) stc stc add jl cmp inc mov outsl and addb lcall repnz (bad) mov lods int andl test aas pop and movsl iret mov (bad) push pop or out xchg xchg cmc mov (bad) stos xchg dec and inc sub jo lcall insl pop mov addr16 add mov scas sar xchg dec cmp int scas scas mov and cmc cld test xchg lahf icebp pop sbb imul jl xor dec xor add sbb (bad) push push in in cli sahf mov mov xchg leave popf mov jns cmp jmp sub jo adc push and dec jle jno push lods lods lahf lahf pop wbinvd jnp repz aaa add (bad) pushf stc outsb add adc inc mov inc and xorb bnd into mov mov popa loopne jle aas pop cmp movsl (bad) mov (bad) pop pop xor out lds loope leave stos xchg bound loopne mov dec mov ss sarb insb or mov incb or outsb or inc cwtl cwtl loopne cs cmp dec cmp mov xchg adc shll es sbb inc mov jg bound arpl push push icebp nop (bad) mov aad imul enter insl or push mov pop push inc inc out movsl repnz in sti pop aas inc lods fstps cld cltd cmc cltd jle xor xchg adc jb or adcl push adc sub inc sbb sbb xchg mov push or lea movsb call arpl adc mov jl pop sbb sbb sub loope daa add es js cld fdivr inc inc dec adc inc jne add fwait mov decl pop xor push jg sub ljmp push arpl ret pop pop popf aam sub sbb adc add sbb lret mov movsl shrb fisubrl xor test xchg nop icebp pusha sbb in andl xor push xor add adc mov in sti sahf mov ret xchg rcrb sbb pop cmp jmp sub jo adc push and sbb jno push ret lahf imul jnp repz xchg std push aaa xor stc add data16 adc push and subb xchg xchg cli jmp rcl fdivs repz cmp cmp movsl (bad) aam mov stc jns daa add out out xchg xchg repnz (bad) stos mov sub mov test lcall cs mov sub cmp sub adc mov pushf shrb ds test scas cli ficom test (bad) jae fcoml test imul jl xor inc xor leave sub jbe daa push pcmpgtd je dec stos (bad) xor in ljmp mov xchg pop aam movsb rclb cmp dec cmp jmp sub pop adc push and or adc xor lods mov jnp repz nop std push aaa xor (bad) mov and dec das xor inc mov and inc inc gs repnz popf mov movsb int adcl lock ss cmp movsl (bad) mov (bad) jb adc out in shll ret out dec and mov dec out into dec cmp movsb rorl fwait mov insb or movsb fdivrp xor pusha movsl int3 sub sub and loopne dec jnp pop cmp mov xchg daa daa ja mov pop xor dec adc inc (bad) fistpll popa push es jge loop xlat mov aad imul xchg jae int sub mov inc xchg out repnz in sti pop aas inc cs cltd cltd cltd pop pop and xchg push jb or cmpl jle nop cmc cmp std pop insl cmp outsl sub xchg leave jmp jle loop addr16 call push and andb xor jle jo pop sub loope add es cld cld mov adc adc add fwait (bad) xchg sbb pushf call gs xor sbb sub ljmp scas fadds arpl aam sub addr16 sub sub mov add mov xchg out cmp (bad) push push xchg cmc loopne cmpsl shrl int mov in addl fs xor pop adc movsl leave and add push je dec movsl (bad) and in lcall fbstp lock mov adc cmp jmp sub jo adc push and pop jle jno push ret lahf (bad) (bad) jnp repz sahf std pop aaa xor stc arpl pop das jg or (bad) dec and addb xchg (bad) mov mov movsb int addl test or push mov mov bound lahf out xchg xchg out mov mov or sub ljmp inc arpl aam sub addr16 add mov mov ret lods (bad) out cmp test scas stos fidiv push aad ljmp xchg xchg icebp insl sbb in addl adc je adc mov add adc mov in fsincos std les xor (bad) into cmp stc icebp mov add jns cmp imull jge jmp sub jo adc push and adc jno push fldcw push jnp repz fwait std pop aaa xor (bad) add das js or (bad) dec and addb fdiv mov (bad) or sbb xor mov (bad) je push bound popf out in andl dec and mov lret sub into pop cmp ss inc fidivrl pusha or mov sahf lock in int3 gs push push or inc inc into cwtl and pop cmp mov xchg inc daa adc mov dec sbb inc stos fildll or pusha push ds in lret mov aad imul push jl mov or mov mov out mov in sti jbe bound cwtl fsts ficomp pop dec into xchg cmp sbb sbb faddl mov std xor push outsl outsl sbb xchg mov push or lea mov (bad) data16 mov xchg xor push sbb jnp test inc add add xor cld lods clc or push adc daa jne add fwait ret cmp xor das jg sub stos ljmp xchg fsubrs pop xchg aam sub insb sub adc mov mov jmp cmp cld test scas xchg push push mov (bad) test xchg mov sbb in int imul jl xor pusha xor add cmp mov push mov mov push repnz xchg fcompl jns ja mov jmp sub jo adc push and jle cmp push loopne ficompl mov inc adc inc rorb das push pop adc (bad) and addb es lret mov mov addl sbb pop push push mull aad pop pop daa bound cmpsb out les (bad) xchg out stos mov sub mov jo lcall sbb cltd aam sub addr16 add pop sbb insl loope rol lods test loope,pt jecxz ficom push cmc cmc test rcll in cmpl fs xor jnp leave leave dec dec inc add aas je dec mov add sahf (bad) xchg xchg shrb jnp jns cmp jmp sub jo adc push and cmp jno push stc lods rcrb mov std jg inc inc (bad) (bad) mov das sbb inc (bad) (bad) push jecxz inc gs mov mov movl add mov (bad) inc pop and cmp in push pop rclb and mov dec mov outsb cmp ss (bad) ss inc or mov (bad) mov int3 pop inc das push or inc inc fstps inc or rclb rcl jne sbb ja inc xchg fistp pop push inc push dec push ret nop sti mov aad imul inc or mov daa push inc inc out mov or in sti insl aas insl cs fstps sbb cltd lret pop sbb add xchg jb or roll lahf fcoml cmpsb cmc sbb mov aas insl pop sbb adc xchg cmpsb jmp pop pop ret lea call (bad) jno adc mov jns pop sbb inc adc mov es js cld mov adc jne dec add fwait (bad) xchg jge lods pushl gs inc or dec jg sub mov jo lcall adc aam sub arpl and adc mov add lods scas out cmp in out nop ficom push mov (bad) xor xchg mov in subl fs data16 xor add cmp (bad) sbb in rcrl mov aad sbb popf cltd shrb jnp jns cmp jmp sub jo adc push and sub xor push in fcompl mov pop adc (bad) (bad) mov inc add das pop pop adc (bad) gs subb mov mov (bad) int andl test or movsl stc mov (bad) push pop sub cmp (bad) mov jmp and jg mov mov lcall minps addr16 add pop sbb insl cmc mov cmpsl out cmp loope stc scas lahf fiadd push mov test int mov in andl fs jl xor pusha xor add cmp mov adc scas in lret mov push repz xchg into popf xchg and sub cmp jmp sub jo adc push and cmp jno push (bad) lods enter sub repz adc inc xlat (bad) mov dec add add (bad) and addb es (bad) mov mov or test push loopne stc mov (bad) pop pop daa bound xchg (bad) mov in mov mov (bad) into push (bad) ss mov inc or mov (bad) cmpsl lock pusha sahf int3 add pop or inc lret loopne dec or mov xchg add push jo mov jge add ja inc lcall push inc push fstl and stos out cmpsl lods (bad) dec or push mov mov mov inc mov pop mov mov cs fsts fstpl dec dec rolb dec or orl adc std cs push sbb push pop rcll push pop pop rorb js (bad) jbe add mov pusha xor sbb sub loope push add cmp cld lods clc or adc xor add fwait xchg xchg cmp scas pushl gs dec or dec jg,pt sub scas ljmp sahf fsubs arpl aam sub addr16 add mov test ljmp ds test scas xchg fiadd push cmc cmc test ret icebp pop sbb imul adc mov pop dec push add aaa je dec mov sbb in rcrb in xchg test cmp jns cmp jmp sub jo adc push and cmp jno push lods lods lahf lahf pop movaps repz adc inc fmull bound adc inc cwtl (bad) pusha and xorb mov fmuls cld mov int xorl movl mov (bad) inc pop bound cmp loop push pop ficom jne jns imul ljmp xchg fsubs arpl aam sub addr16 add pop add mov (bad) shl test loope,pt std scas (bad) push push mov aad adc jae xchg movsl icebp pop sbb imul jl xor popa xor leave dec dec dec add cmp xchg (bad) sbb in rcrb repnz xchg pop popf popf rcl cmp jns cmp jmp sub jo adc push and sub jno push push std lods int inc (bad) jnp repz adc inc ret (bad) mov das push pop adc (bad) (bad) jge les es in mov int cmpl roll movsl movsl cli mov (bad) pop pop das bound add scas out iret xchg mov xchg in mov mov lret add into cmp gs es mov mov ret mov pusha mov or dec or inc cwtl cwtl loopne cmovp outsb cmp mov xchg daa daa adc rcl je dec dec ja,pt inc mov push je jnp pause (bad) mov aad imul aad xchg mulb jae cltd in or mov xchg out bnd mov cltd sti push aas dec cs cltd jmp dec testl sti fstpt (bad) push adc cmc inc dec std std dec insl xor pop pop xchg xchg int3 jmp pop pop test dec add call push inc inc mov xchg xor sbb sbb sub loope add js cld mov adc xor xor fwait xchg xchg cmp cmpsl call add ss sub sub ljmp fcomp arpl ret adc lcall sub adc mov clc sar aam cmp ds or test scas icebp sub aad mov push imul xor insb xor add je sbb pop sbb in lods sahf mov mov xchg lret (bad) xor cmp jmp sub jo adc push and jle es push jecxz rcrb repz std std aaa aaa push inc loope mov je dec das xor inc lcall jecxz inc inc es bnd mov mov int andl test sbb push xlat movsl lds arpl and cmp shll stc stos mov push and imul ljmp mov packsswb aam sub addr16 sub cmp fistpll rol lods test push cmp lds xor cmc loop lcall icebp pop sbb imul jl xor push xor add add cmp (bad) xor sahf in lcall (bad) mov xchg scas popf cld rcrb dec jns cmp testl inc jo adc push and sub and push loop add fstps mov adc test fs add (bad) mov das push pop cmovbe xorb mov mov (bad) int andl int push sbb adc movsl (bad) mov (bad) jnp push bound (bad) jae inc vpsubusb gs cli in test pop into into cmp gs shll fidivr outsb or mov (bad) cltd lock test push or inc inc mov dec fs out dec daa xor rcl inc xor dec adc inc mov push push push imul nop lret mov aad imul or push push movsl in and mov mov inc stos out repnz in sti pusha aas arpl cwtl fstps rcrl or xchg inc or adcl pop adc std xor sbb or xchg lods jmp or ret add imul enter js push sbb dec adc loope add js cld mov adc adc cmp add fwait (bad) xchg cmp mov cs dec or jg sub scas ljmp (bad) fdivs arpl aam sub addr16 jae inc add pop dec dec idivb xchg shrb ds test scas sbb rolb xchg icebp icebp push sbb imul jl xor imul leave or dec add daa je dec mov push test mov push in mov xchg iret popf xchg sarb es cmp jmp sub jo adc push and cmp jno push jmp movaps repz scas std jb add (bad) add or (bad) jbe lds fs mov int addl jae push mov (bad) stc jo pop push pop dec mov pop mov out and pop sub sub ljmp cmc fsubs lahf ret add aam sub addr16 sub add fwait mov in imull ds test scas sbb push (bad) fiadd stos xchg lods icebp xor cltd in addl add push jl xor adc stc leave pusha dec cmp or or call in mov mov or mov xchg shlb jnp jns cmp jmp sub push and and jno push in int3 lahf pop rdmsr jnp repz adc inc (bad) (bad) mov push add adc inc xchg (bad) push jecxz inc jb mov int3 mov mov cltd int xorl or push loop pushl pop pop and cmp in dec pop (bad) xchg (bad) stos scas out arpl mov add into imul xchg shrl jmp xor mov lds mov mov int3 add inc or fcompl inc or (bad) xchg arpl jne (bad) shll sbb inc cwtl fisttp or inc push push push ret nop out xchg and stos loopne div dec or mov mov mov inc scas out repnz pop in sti sti insb aas imul fstps int3 cltd lret cltd dec pop or leave xchg and or sbbl pop adc std sub sbb push pop (bad) xchg mov push or lea call jbe or mov arpl pop sbb push adc mov push add sub cld mov add adc es add fwait aam jnp mov and xor aaa jg sub mov jo lcall push pop lahf aam sub addr16 add pop add mov test call cmp cld test scas xchg ficomp mov movb xchg movsl icebp sbb in movb sub inc adc xchg sbb add xor mov push test mov xchg rcrl ss cmp idivl jge jmp sub inc adc push and jle ss push stc lods rcrl mov adc scas std jb or (bad) mov das adc inc cwtl (bad) pusha and andb mov fimull lock int subl roll push movsl movsl lock (bad) inc pop aaa bound cmpsb out ret mov in mov sub sub add add lcall pop pop xchg aam sub addr16 and sbb ljmp shl mov je push test scas scas xchg fiadd push cmpsb cmc rolb xchg movsl icebp pop sbb imul jl xor xor dec dec add xor add push mov mov xchg into popf xchg (bad) aaa jnp jns cmp jmp sub push and cmp jno push loope ficompl repz mov inc lret (bad) mov push add adc inc (bad) (bad) jb leave andb mov mov int addl sbb pop sbb movsl divb pop pop aaa bound mov mov out scas out jno fisttpl dec dec mov fs ss (bad) xor mov dec or mov (bad) mov pusha pusha int3 int3 sub imul xchg loopne dec jle dec cmp mov xchg push daa inc xor dec inc ja inc out fisttp or imul (bad) mov aad imul clc cmpsl xchg mulb push sahf in sbb mov mov out mov sub sti jbe pop cs fldcw stos cltd mov dec into xchg adc push fldt out fdivl (bad) push int pop insl jns push push outsl outsl cmp xchg popf jmp xor lea add (bad) inc and inc ret enter xor sbb jp pop sub add cld stos clc ds adc fwait cli add add fwait clc xchg push cmp xor dec jg sub sub jo lcall xor sub addr16 sub jb daa dec fnstsw rol lods and cmp test scas scas lock push cltd cmc jmp jae xchg (bad) icebp jp xchg in sbbl fs jl xor inc xor addr16 push data16 es mov ss cwtl in repnz cli mov push ret xchg pop (bad) popf mov jns cmp (bad) dec jge jmp sub jo adc push and pop jle jno push sahf lods lods lahf pfadd repz sahf std inc aaa sub (bad) cmpsb stc jne add pop das cmp inc mov adc inc inc jne mov std mov mov mov in orl lock xor movsl test outsb pop adc cmp les iret stos cltd out adc sbb sub mov jo lcall or aam sub addr16 sub jno arpl mov rol movsb mov ds test scas sbb les (bad) xchg icebp icebp pop sbb imul jl xor jp (bad) leave dec dec inc add cmp movb lods in fstps cli mov xchg fsubr mov sbb dec xlat cltd adc lret lea push adc cmp push inc inc dec pop cwtl lret push add jp lods lahf lahf pop push jnp,pt ret cmp jle add cmp das pop pop adc addb addr16 shr xchg mov stos subl push sbb push movsl movsl idiv pushf in pushf pushf pop pop and jle mov pop pop rol clc cmc scas mov mov mov arpl mov jbe mov ret in (bad) lock pusha cmp inc inc push push or mov cwtl cwtl loopne dec dec or mov xchg daa cmpsl xor rcl xor rorb ja inc (bad) jnp push push push push push push push sbb cmpsl div or loop in in push into inc inc out repnz in sti sti aas aas (bad) adc fstps sbb pop dec dec xchg or orl fwait pop pop (bad) adc movsl lret std std insl insl sbb outsl dec pop fcoml push push pop pop lea js inc dec push xchg mov mov xor sbb or pop adc sub loope add xchg inc inc push adc cmp fwait xchg xchg cmp (bad) jmp lret (bad) dec dec jg push sub loop mov lcall pop pop int3 sbb stos gs pop pop dec dec mov mov scas out hlt jbe test scas scas (bad) push push cmc cmc test ficompl sbb in addl jp jo jnp leave leave dec dec rorl sbb je dec add mov stos adc sahf sahf mov into dec adc popf rcl jnp jns cmp div jge jmp sub jo ljmp cmp xorl pusha pusha (bad) (bad) jnp loopne adc std aaa aaa iret push into (bad) stc stc add xchg loope pop inc inc (bad) (bad) in ljmp es mov mov xor jl popa popa test inc in mov (bad) pushf pop pop bound cmp mov xchg stos stos inc outsb pusha and aad xlat ljmp gs arpl cmp mov mov and add mov aas aas lods lods out (bad) (bad) test scas scas mov adc cmc test xchg xchg icebp icebp int sbb addl jae push sub dec dec sti cli stos stos data16 fwait mov cmp in in pusha popa jbe push push mov test sbb popf rcl test imull sub ljmp cmp jno push push push pusha pusha (bad) (bad) jnp or out std std aaa aaa mov stc add sbb inc (bad) (bad) fcmovu jg jecxz inc inc ljmp mov int addl sbb push push movsl movsl ds bound call cmp imul insb push push out out and xchg mov mov ret ss lcall div je ret movsb inc mov lock pusha int3 int3 mov or addr16 pop dec dec or dec xchg xchg daa daa sahf jnp (bad) xor dec dec mov or (bad) stc stc push push nop nop dec dec sub imul pop jmp (bad) or push push adc xchg xchg mov mov repnz pop sbb add aas aas cs pop sbb loopne mov xchg adc sbb movsb movsl and adc cmc cmc or mov sbb pop pop xchg xchg cmp push pop pop jae (bad) (bad) jae cmp shll inc inc mov imul sbb xchg in in sub loope std cld (bad) sti sbb push inc adc add fwait fwait inc outsb mov lret lret dec dec jg xor sub ljmp fcomp arpl cmp mov cltd cwtl rcl add and add mov cmovle pop aas aas lods lods out out (bad) test scas scas and lods lods cmc cmc test xchg xchg icebp icebp out sbb addl xor out out int3 int3 leave leave dec dec fnstsw cwtl cltd mov mov lods in pusha popa jbe push push mov pop jns cmpsb popf popf rcl test mul push stos jmp (bad) (bad) (bad) adc push sbbl inc inc addl pi2fd or out std std aaa aaa test into (bad) stc stc add rcl mov (bad) cld fstpt jecxz inc inc fcomp or mov int addl sbb xchg test vpunpckldq call in xlat xchg mov insb push push out out and repnz xlat ljmp and arpl inc sbb aam sub cltd cwtl rcl and add mov insl insl pop pop aas aas lods lods out fstl scas and lods lods cmc cmc test xchg xchg icebp icebp out sbb addl xor adc xor and dec sti cli stos stos data16 fwait mov cmp in in pusha popa jbe push push mov std sbb popf rcl test imull sub ljmp cmp aas jle jno push push push pusha pusha (bad) (bad) jnp or out std std aaa aaa mov sub push (bad) push pop inc inc (bad) (bad) fcmovu jg jecxz inc inc neg or mov int addl sbb test pop pop mov (bad) arpl call adc imul dec jmp out out and jbe xor dec push xor ret ss lcall mov ret add (bad) punpcklbw int3 xchg mov inc inc addr16 pop dec dec or mov xchg daa daa iret into cs dec dec cmpsl mov lock stc stc push push nop nop jmp imul or push push pop adc mov repnz pop push add cs es cltd cltd cltd cltd (bad) loopne mov xchg adc fcmovnu (bad) mov fcoml adc cmc mov add insl insl sbb nop pop pop xchg xchg pop push into into push push pop pop inc addr16 add call fstp inc inc mov imul add sbb in in in sub loope push add js cld push pop mov and add fwait fwait outsl outsb mov int3 xor dec dec jg aam xlat xlat ljmp gs arpl cmp mov mov std or pop pop dec dec mov jg sarb out out out ds scas scas (bad) push push imull lea dec stc icebp sbb in addl cmp in lds xor leave dec dec add mov into (bad) sbb sahf mov sub pop inc mov jno cmp div jge jmp std leave js pop xor in xor mov jno push cltd dec xchg lahf pop sub addr16 sbb std std aaa aaa inc inc (bad) (bad) arpl or or push pop mov addb int3 cli repnz scas mov lods addr16 andl test push pop divb movsl (bad) popa int pushf pushf pop pop bound cmp imul and sub sub inc sbb xchg lcall pop pop aam sub xor or mov insl insl mov push out out push ss (bad) push push cmc cmc test bound in in subl jp cmp cld xor xor leave dec dec add data16 dec dec mov push in in fsubs fs mov pop mov sarb jno lret ret popf test jmp sarb mov fdivl cmp jbe mov pop xchg lahf cmc clc jae std or adc add xchg pop xlat push pop (bad) mov mov mov jbe mov adc mov scas lods movsl test gs pop cmp sahf xchg xchg pop sysret xchg xchg stos stos dec xor and push ret push inc dec and xor xor leave sarl mov jno orl and lock push push nop std dec inc push outsl call or xchg daa test ret inc dec das orb sub or push push sub cwtl nop xchg inc fst fistpl (bad) imul std push push sbb inc xchg testb sti sub es sti das adc arpl cltd icebp jmp sbb movsb test inc jne fucomi lods aam mov mov adc outsl xor pop cmp pop mov or (bad) push jo sahf jne and mov xchg call stc sbb (bad) jmp es hlt cld ficompl dec inc daa imulb and out fwait jmp sbb gs (bad) add ljmp sub loop nop xchg xchg lcall push pop les and inc andl adc inc dec loop gs lret rcr out out fidiv ds cmpsl scas data16 aas adc jae jbe icebp sbb in in fs imul cmp sub cmp subl je test in xor mov mov mov arpl inc js rorb (bad) mull jecxz add repnz ret xor (bad) pop jbe notl xchg lahf mov jae aas adc aas aaa mov xchg aaa enter mov mov js cli repnz imul xorl push pop pop mov int mov mov xchg fisttp pop add stos inc push sub xchg ret and loop nop cwtl xchg lcall push pop into cmp and add mov dec (bad) push gs fimull shrb out out (bad) ss scas fs pop push aaa sbb test cmp jle stc icebp sbb imul xchg xchg cmp dec cli cmp movsl and jns pop push ljmp (bad) int in push jl mov mov mov fs pop lds sarb cltd jno or push pop lahf jecxz cmp cmc bound les cmp jbe iret nop pop push or sbb jae rorl sbb int aas aaa or add add push pop cmp mov cwtl (bad) repnz jae mov sub pushf mov test movsl scas dec int mov pushf xor xchg std pop sysret jmp adc and jbe lret inc dec je xor cld enter fwait mov lcall mov cmp clc lock lahf (bad) int3 or dec inc loopne add call or jmp das daa xchg into (bad) xor dec dec pop test inc pop add or rcrl imul divb or xchg int push push inc inc out aam pop fadd in jnp aas cs fcompp sbb cmp dec leave and or sbb fcompl cmc jne dec std jge insl sbb out push pop xchg adc inc push pop fiadd call sub inc mov pushf xchg rcl sbb sbb adc jmp es xor out add adc add sar xchg fwait das imul push add add les and mov loop adc arpl xor mov and adc rorb add scas inc dec adc push enter out out enter pop cmpsl scas fisubrl lea mov ljmp sbb cmp (bad) jecxz xor inc dec mov xchg jl xchg mov in push movsb mov pop mov (bad) jno jae push pop mov jmp fnstsw push (bad) xor sbb fild xchg lahf (bad) jnp pop sbb sbb aas aaa mov xchg cmp push pop push (bad) push rorl inc jl cli repnz jle mov addr16 mov cmpsb lods movsl roll (bad) pop pop pop xchg xor xchg mov arpl and lds sub lahf xchg lcall push pop pop cmp sbb or or gs sahf dec enter out out aad ds cmpsl scas sub pop push adc lea push jl icebp scas imul in outsl popa imul xchg cmp fs cmp mov jmp push xor into (bad) outsl mov orl lahf jae rclb (bad) push lods nop jecxz xchg les mov enter push jbe sub lahf xor jae fstps sbb jmp stos xchg icebp ret push pop xchg stos (bad) out mov xchg cli repnz bound mov and test push pop jl lods movsl add lods pop int pushf jo pop test sahf xchg arpl pop and stos ficompl and jle dec into cmp cmp (bad) leave (bad) mov mov mov (bad) mov xor adc (bad) int3 and dec inc inc ja loopne mov mov daa mov (bad) dec fild adc or push push sub cwtl nop xchg pop fst andb (bad) idiv loop push xor pusha push cli stos out out sbb (bad) adc es jbe cltd std out inc dec jmp jb or (bad) fcmovnu mov std cmc jno cmc std insl insl sbb outsl addl pop pop das insl or pop aaa jo dec pop sub popf sahf test cmp pushf xchg rclb sbb sti sbb outsl lret jmp es hlt cld test dec inc fwait cmc sub loop jge mov xchg fwait xchg xchg cmp icebp and sbb add push xchg ja sub sub jge ljmp fsubs rol pop ffree aam lods outsb addr16 (bad) push pop dec into int insl in mov lods out cmp mov int push rolb (bad) jae xchg xchg icebp jno sbb mov fs jl mov adc mov leave dec dec jg pop push hlt popf jl jecxz into (bad) xchg scas in dec orl fwait popa fcom popa xchg or push cmp js jb bound fnstenv cmp inc jbe jmp push xchg lahf leave repz sub sbb adc aas aaa inc inc (bad) (bad) scas stos dec inc fs jno sub in movsl sub inc jo cmp aad hlt rcl ficompl popa (bad) test cs cmp repz mov repz jns or (bad) repz lock loope cld lret (bad) fwait inc jbe sub mov pop (bad) divb xor xchg mov js or adc outsl popa xor in sbb lret int3 cmpsl xchg lods lods pop out pop dec pop out (bad) mov sub rcl and (bad) mov in andl or adc push jg inc mov jge push xor sub mov cwtl mov in in call jmp cli mov adc or fwait sbb mov inc adc pop inc inc add pop jne lret or xor ret bound xor xchg xchg je xchg mov adc pushf add pop das push xor and fbstp inc xchg mov cld leave aad hlt fcom stos test xorl int jnp aas push aas and mov jbe bound cmpsb (bad) div (bad) in outsb je int3 out fmuls in mov and pop inc mov and fcmovu cmp jmp insb or mov mov adcl mov insl or (bad) cmc addl div push inc push rcl ja add cmp icebp mov dec push dec push cmc in (bad) mov add (bad) rcrl push loope aas es (bad) int and addl aas sbb xlat cld in pop jp or jmp gs aam fistpl xchg jbe mov sub xchg add jle cmp add pop fadd mov push xor fs push and ror movsb icebp xchg stos xor outsl jle jge pop scas xchg insw jno xlat js xchg mov jo mov cmc int3 xchg xchg dec cmp pop insl jl ds sbb jg inc mov add ljmp xor mov addr16 push inc jo cmp pop cmp int3 adc rcl test out cmp fmul ffree mov fwait loopne cmpsl test lret test stos xchg in cmp sub xor jnp mov popa push xor adc pop aas sbb (bad) pusha push stos cwtl out sar in ds (bad) jecxz pop pop scas popf xchg movsb or or cs mov sub jo jp xorps dec (bad) enter add add lods add sbbl jecxz stc stc fwait add sub xor mov jne in lcall xchg out fcmovnu rcr mov lcall stos jle ss push push loopne ret mov pushl adc dec cmp aam push jne lock fstps inc dec pop ljmp xlat mov push montmul cmpsb cmpl add sub sub cmp fstp push push out (bad) lods scas (bad) scas mov ds sti out call cmc movsb test loope addl dec imul insb insb fs push push push fs pop mov push sbb sub mov push mov in add hlt ss hlt icebp mov jg cmp cwtl add test jns add addr16 push pop sarl push sbb arpl les xchg gs mov lret out pushf arpl or (bad) aad push (bad) in xchg and sub (bad) leave mov test je push xor (bad) rcr lds and cmp rcl dec repnz std out out xor xchg call push push push js lods add mov clc insb insb (bad) loop mov (bad) xchg int3 repz lods test sub cmp loop das jns dec push (bad) icebp repz inc inc inc rcl hlt xor xor jl gs jecxz loopne xchg mov (bad) leave xchg lcall sbb rol cli lret xor mov mov pop dec pop mov cmc cld cltd stos pop or loop data16 sbb loop fcmovnu mov addr16 cmp add xor or pop pop xchg mov and dec add in inc inc xor call xchg sti xor jp push jg inc (bad) loope pop jne sbb stc add popa push push push mov jmp pop (bad) call addr16 popa jnp or sbb pop pop inc test out mov or xchg mov jp adc inc jp pop cmp ds mov shl adcb cmp (bad) fcmovne lods mov xor mov push push lahf test sbb out out sbb pop pop sbb jne inc push movsb lods and add movups or cmpsl mov cmp lret sub mov xorl add jns cmp test jnp add inc push pop lret jnp add and enter (bad) jle andb nop inc pop adc lea dec sub and mov inc dec in jecxz in ja xchg xor fnop fcmovnbe (bad) fsubrs icebp ljmp repz (bad) movsb lock pop daa inc cmp (bad) iret push jne lock iret fstps inc pop pop lahf mov stc popf mov or mov or push push dec xor cmp mov (bad) mov test dec jae (bad) cmpsl (bad) push mov loopne cmpsl mov sbb mull xor add adc push inc push push pop sub cmp outsb dec xchg mov and mov push lock cmc xor hlt icebp mov push sbb div mov inc sbb jne (bad) dec pop pop lret lret jle iret jno and int3 jmp pop pusha adc fwait xchg jge into iret fs es cld out lea add and mov mov push fdivrp aad fmul movb test adc leave shl lods test pushf std push and xor aad jne icebp out iret popf mov mov mov pop movsb xchg gs mov dec gs cmpsl ret mov add dec push dec or sub xor dec fs pop out hlt xchg push inc push xchg mov add sub cmpsb dec bound push push lahf push shl xlat shll into (bad) rcrl push out jmp clc jmp sub sub cmp lods mov in cld hlt leave jo sub aam jae pop jb psrld mov scas jne xchg sub js and add pop fistl xor fs in inc inc adc iret mov xor je js dec xchg mov inc inc js dec clc stos xchg cmp inc mov fwait fwait xchg nop jge mov jge das sub push inc dec pop jg ljmp lods lods daa push mov cmpsb inc inc add sub sub and iret mov mov pop dec int fcmovnu mov xor test divl xchg in cmp sbb xor inc push mov insb aaa xor aas and out sar call fcomip out cmp icebp into mov movlps pop cmp adc xor (bad) lahf inc dec sbb outsb jno sbb pop (bad) sub cmp in icebp sti pop jg adc add mov push xor lea xor inc inc ja addr16 in xchg xchg sub repnz fldenv and out jnp cmp jecxz mov cmc bnd pop ss dec mov inc (bad) out iret (bad) sahf mov sub imul push test or cmpsb lea mov sub mov inc push push ja xor cmp fstpt mov int stos orl pop int scas scas add adc in cmpsl nop sbb test xchg xchg addl pop inc pop jg push leave leave cmovg and lar cmp test cmp shl xchg mov adc adcl inc adc add jb cmp mov and fcmovne jmp pop jge sbb cwtl sahf inc pop sub fmuls inc pop cmp xor mov repnz xchg xchg cli out aam mov not adc repnz jg sub xor leave shl mov jns add pushf mov inc outsb push inc orl stos loopne and lcall and fisub pop out pop data16 mov ror xchg popf xchg pusha pusha jno pop cmp adc or popa push xchg xchg popa and pop mov pop jb and and cs bound ja cmc nop popa mov mov das fld rol mov push and das or sub xchg (bad) xchg mov mov das sahf mov repnz sub mul jno and out lea pop fwait xchg and jb push push (bad) imul loope xchg aas cmp loope add cmp out push inc or rol test lds pop jle jp dec test inc insb dec push or nop cld cltd cld adc popa push dec dec lahf mov stc out in dec outsl (bad) incl jb jl and or inc movsb mov lcall sbb mov pop jnp addr16 jae jbe sub and mov (bad) mov ret xchg push push push pop (bad) fdivr into lods mov xor xlat and out lahf xchg mov cmp pop push inc adc add das imul je dec subl xor mov xor pushl push pop cmp idivb sbb and punpckhdq ficompl adc add lods lods pop popf dec arpl xchg lahf pop je xchg inc dec adc out sti mov imul and (bad) movsb xchg adc xchg fcomp rcr mov sub ret loope pop xor rol movsb test lret pop pop int jp fwait mov jo xlat cli fmul lea sub sub lods popl out call xchg mov ds pop add sub inc jbe sub cmp ror cmp lods lods test jge dec outsb fcmovb int3 lret sbb cmpsl mov add imul add add movntps xor pusha push mov ja and and mov push mov loopne and (bad) call pop pop je xchg push jp fwait adc jmp pop sub jne add pop dec sar sub sbb jmp fcmovbe cmp push pop lahf lahf adc pop std jae xor std loopne mov outsl inc das push pop or movsl movsl inc inc in mov mov cli enter fcmovb fidivrl pavgb insl sbb pop adc (bad) (bad) into les push adc dec push out out jge in into data16 out flds mov sub xor movsb add iret adc out jp into mov (bad) mov add sub add cwtl aas loop and imul clc loopne daa mov (bad) mov pusha and add pop outsb imul stc (bad) mov fadd rclb scas lahf or loope xor sub xchg push push jp mov imul insb imul out repz ja add out dec (bad) aas test jl addb add push cmp or xchg xchg jne jne xor aaa xor loop push lcall and rcl test dec dec sbb sbb inc mov insl addr16 push sub adc lahf add loop outsl push xchg fwait or inc imul jnp sahf mov jmp pop add lods mov sub addr16 insb sbb cmp cmp rorb int3 (bad) fdivr stos mov test std loope mov push xchg out icebp imul sub bound pop lods stos cmp pusha and movlps mov in shr jecxz xor in in sub jmp ds insb sahf cltd sbb pushf mov and cmp lret lret pop sbb push push movsl scas sar jg adc xchg dec pusha inc inc repz dec sub daa and andl repz mov test roll adc ljmp shl fcmovnbe mov sar jp xor xchg in (bad) ja loope (bad) mov insl inc lahf xchg int mov or mov pop scas (bad) jg or pusha dec push push arpl or and rcrl sbb mov xchg sbbl push jmp (bad) lret push push push hlt ret test sbb jl xchg mov addl adc inc inc adc aas xor insl add add mov push dec in fsincos std fidivr ds icebp (bad) xor clc cld mov or sbb dec mov ljmp push add fucomip jle iret jo cmp imul mov std out aaa add out in xchg pushf push imul xlat insl push xlat jmp jo sbbl lcall ljmp jle inc xchg lods repnz js bound cmp mov rol shrb jecxz ret orb lret cmp pop pop inc mov ret gs fiadd pop loop cmpsb lods shll sub or dec outsl xor hlt icebp test dec cmp mov repnz dec pop popa mov pop inc dec dec stos ja sub pusha jp push aas pop xlat cmc (bad) notb into lret ret insl dec push push mov lret and out lock pop push pop jp mov mov or pop pop or lock nop and cwtl mov or js push mov push xor pop pop xor pop shr jb (bad) sbb add in inc in test pop pusha dec jp jb jl sbb dec insb inc inc sub xchg xchg lahf adc push jne mov or addr16 int3 xchg xchg add cs dec pop jl cmp jg sub sahf mov sti call mov pop pop inc (bad) jg adc push inc dec arpl (bad) lret insl movsl mov xchg lahf push pop jne sar fcmovne stos mov (bad) loopne mov sbb sub mov or add or inc imul ja cmp adc push pop add push in fdiv out pop cmp shr icebp push pop dec pushf cltd mov push pop div out jg mov pop add sbb rcl sbb push jno push ljmp xor fwait pop pusha inc inc sub dec dec inc sub xor mov xlat jecxz adc inc xchg leave fcomp mulb popa (bad) test cs xor shr ret shrb pop and pop pop test data16 cld jecxz mov insb dec xchg hlt out fcomp inc bound pop inc adc and add cs sub xlat rorb sahf cmp in aas loope loop mov push push dec hlt int3 jmp mov pop fcomip lahf test orb or sub adc jne push inc movsl mov push push mov sbb es scas daa xor in aas daa lds repz xchg jle mov mov adc dec pop push iret mov cmp cli (bad) icebp sti pusha js ds and nop xchg inc inc and ljmp das sbb and mov out movsl xchg sub popf sti cld (bad) clc lds in add aas or cli fsubrs push adc loop mov out cltd mov std out lods popf mov pop push pop mov add repz cmp mov iret mov addl inc loop pop js sub hlt adcl xchg mov jne mov daa cmp xor mov push sti pop push jno sti in mov fcmovnb movb stos mov daa and std repnz xchg pop (bad) cmp negl cmp call (bad) or xor mov mov cmp imul or (bad) call xor std out outsb pusha lcall and inc jecxz cmpsl mov push ja sub dec or nop xchg mov gs mov dec fwait aam dec dec xchg imul sub sahf test cmc sti stos mov pop pop jp jg adc add sbb lret int3 (bad) scas mov leave test cld test shrb loopne adc lds mov repnz aas inc inc arpl jp scas and pop push xor sysret add cmp xchg sahf sahf into mov cmp shr repnz mov adc mov or mov jo or dec push dec ja aad sub xchg push in fdiv outsb jge pop sbbl ss xor out mov pop inc adc sub andb xchg add int iret ljmp and in dec push aas and movsl movsl out mov mov pop xor xchg jge aam fdivrp fwait mov pop sub loopne lods popl sti call mov mov inc or dec dec and sbb adc and lret sub int nop ret lds aas out int loop mov es jae nop mov mov out push and jl stos xor inc jg mov aas pusha popa add or mov cmp cltd cwtl sti in mov out xor hlt repz or imul sbb cwtl gs push pop inc adc push lret aam or xor enter outsb jnp or jae es call dec dec cmp inc inc lods xlat arpl rcrl dec xor (bad) repz rcl shrl inc test cmp (bad) in cmpsb call adc mov loop mov lret (bad) mov lret sub mov scas adc aam jbe jl dec pusha out nop cmpsl (bad) sar (bad) mov xor add push or inc fdivr xchg xchg cmp aad repnz push pop inc test das ja xor insl arpl loop (bad) frstor into lock jle pop insl bound lahf sbb (bad) mov popl and cmp xchg mov imul cld hlt aam imul in adc jb dec imul sub mov xchg lcall jl pop xor sbb cmpsb xchg sahf lcall fimull sbb jecxz jne das and pop xchg je jns push jle imul add or xchg xorl add popa push fwait xor or push pop jg sub xor dec pop (bad) mov fld1 mov cmpsb xor aam loop cs inc inc bound sub and mov mov pop clc fcmovb int3 mov ss cmpsl nop jmp xor loop test in add add push adc pop xor jb or and and test in cmp mov dec xchg cmp fnstenv cmp test fwait jge mov add pop jbe cmovbe cmp and out push movntps pusha aaa push cwtl je insb inc xor daa xor jmp es cld (bad) leave fdiv fisubl add loope pop pop pop and fcmovnbe cmpsb mov (bad) jge add cmp loop les sti rol fsubrp out jmp insl dec pop insb mov jo lcall sbb aam sub and pop jge pop outsb pop pop jl std int3 or movl fadd int3 les addl mov test sub sbb pop inc sahf leave jmp push pusha and add add and test in fucomp in call ljmp mov js xchg xchg or mov jb jno sub push push xlat lret sbb cmp ret sti int insb (bad) mov inc je mov ljmp pusha cmp andl ss inc test iret fnop int int addl add add lock cmp movsl cmc shlb arpl bound mov shll xchg xchg inc stos stos (bad) dec dec clc sti scas lret add push jae rol gs aad sbb lret jnp mov nop fwait movsb lahf pusha pusha ror pop sub outsl dec sub loopne dec pop push repnz daa daa ret mov pop ja inc mov push addr16 nop nop pop mov mov out xchg mov fs mov lret divb xchg (bad) xchg xchg sti js addr16 cmc cltd xchg cltd pop jp push mul jl sbb imul pop rcr push jbe cmpsb cmp push xor cmp (bad) fisubl jo loope add adc aaa or in jbe xor les out sbb jge pop mov pop adc inc pop jp dec (bad) and div negb sahf xchg adc bound movlps dec pop (bad) mov (bad) fcomp pop arpl mov pop or pop push popa jno das cmp mov shlb xchg push pop pop dec (bad) (bad) (bad) fwait rolb sti out nop jne lahf adc or add inc push bound inc cmpsb mov sbb adc adc sub lahf into in and rcr loope xor hlt stc rcl or inc movsb sahf sbb ljmp sbb push jb cmp mov cmp enter imul jle std jg add sti fcompl sbb xor hlt out xchg cmpsl and dec es repz jmp sti (bad) cld fldt adc jns adc shl aam (bad) pushf push jae and out out and lock xchg dec pop sbbl stc mov add cmpsb cmp movsb mov add ja insb add cmp pop lret fistpl adc ret lods mov jmp push cmp int in mov and mov (bad) xor clc out test mov sbb inc xor jp mov pusha pop sub sbb mov xor fwait (bad) (bad) fimul jecxz or sar mov cmp jg xor add mov jge ucomiss pop fxch sbb jb cmp pop push or pushf mov es (bad) scas stc inc insb inc pop cmp xor mov lea (bad) lock (bad) rcl fcmovnbe scas mov div push push loop ret loop mov pop xor (bad) repz loop (bad) mov mov fsubrp das sbb inc movsb test je out outsb dec in scas mov fnstsw bound jb jle paddw mov add push repnz jno pop movsb mov xor dec and stos pop outsl bound dec push rcl in test lret div sub inc jle addl fdiv or orl push js (bad) into cltd xor cmc jae push cmp in (bad) mov faddl mov cmp pushf xchg add jle out cmp sbb loope mov sbb loope fs call gs xor mov sti pop jns push jb addr16 sub dec loope dec pusha dec adc mov popf mov xor je cli push jne dec fldl2t (bad) out pop mov pop insb insl sbb (bad) scas xchg stc mov stos xor aam xor adc addr16 sbb and jmp xchg mov leave xchg mov fnop into (bad) hlt (bad) in mov pop ss popf (bad) orl sub inc pop pop cmpsl mov adc pop add sbb push push mov mov ljmp sbbl xor push dec mov push push cltd (bad) pop pop pop add mov pop lret cmp add aas int3 aam (bad) bound jnp repnz jge scas push inc add loope cwtl nop outsb gs pusha cmp (bad) sub ret int3 mov push add dec lahf mov fidivrl icebp ljmp sbb movsl mov jle or push push xchg mov push xchg push dec ljmp call mov dec dec addr16 sub sub sbb add int3 mov push cmp jmp sti into lods mov aaa add cwtl mov jmp cli xchg mov dec js mov in das push or fs jge inc jg jp (bad) mov pop sbb add mov test repnz xor hlt cmp jmp pop cmp xor pop jns sbb clc mov cmp (bad) int3 repz sub nop xchg mov loopne mov pop dec push xor inc (bad) jecxz inc gs mov aad (bad) neg lods mov int push jbe (bad) lret int3 ret fisub scas bound test jae cli std int addl pop add (bad) add movsl or mov repnz jge stc lods mov ljmp sub jnp outsb inc inc loope cmpsl test sbb pop fucom (bad) cli inc inc ja mov adc inc lea push outsb insb jnp hlt mov inc xlat sub (bad) into lret addr16 ja mov leave jmp add xchg xchg mov sub aas test pop div hlt clc jno add adc jo imul cs lcall dec outsl xor sbb xor rorl push sub (bad) outsl pushf call inc push adc fcmovb enter ja insb pop dec push jge inc sub cmp cld cld iret cli add popa pop data16 mov pop shr (bad) lock push fwait mov imul inc pop imul mov and mov cmp mov jns push jae jbe cmp stos imul leave and ds pop fsub into fsubrl xchg sbb jne andl cmp xor insb int sub cmp or sbb das cmpl icebp out cmp (bad) hlt xchg pop fnop movsb orl adc pop outsl mov in cmp inc inc dec pop mov adc sbb ret sti repz adc popf xchg adc cld jo xor out pushf lods jns dec das fcomps and loope xchg daa es stc rcl (bad) fisubl popa sub cmp (bad) lret mov dec popa add jno mov shrl hlt les push inc jg pop addl lods sahf or cmpsb xchg xor mov mov addr16 jbe xor rorb and les (bad) push push ds test pop cmp pushf imul mov roll (bad) xorl inc jg pop push cmpsl mov cmp adc dec andl ds mov test cmp in (bad) mov pop adc repnz (bad) lahf dec push push addr16 (bad) and or pop adc repz (bad) cvtps2pi xchg gs xchg mov sub loop xchg lea pop inc ds and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and int3 xchg dec test jge ss dec repz daa ss mov pushf lahf add mov push lret inc cwtl cwtl loopne fs pop pop inc rcl out dec dec pop jno movsl push je dec ja inc inc (bad) or dec cltd dec push push push nop nop repnz stos stos cmpsl cmpsl div or push push in std push mov out repnz pop in sti sti cmp fstps sbb pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push add lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int jae arpl test sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg aaa aaa and rol and pop addr16 push iret iret sbb push push push push push push addb imul sub ss dec dec xchg xchg scas scas pusha pusha mov in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc in mov push adc jb mov pop sbb add adc add dec adc xor leave leave or inc inc adc and cmp mov add (bad) pop or in xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test (bad) (bad) loope or cmc cmc xchg xchg jns jl je insb insb and add and leave leave dec dec add inc push push imul jne int3 int3 mov jo xchg cmpsb cmpsb jns popf popf rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja and mov insb insl jb (bad) inc ret cmpsl cmpsb pop push fstp (bad) mov or push push in lods sub div enter lods lods mov mov test push jns addb cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub add ljmp lcall pop pop mov push scas inc addr16 add orl mov rol lods out mov test scas sahf mov test push xor push cmp in addl xor adc xor leave leave dec dec test push push data16 or in in sub insb adc popf popf rcl jnp jns cmp div jge jmp sub jo xchg ljmp stc inc jle jno push push sbb lahf fldl2t repz mov pop insb aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) movsl fiaddl inc pop push or mov mov pop fstpl popa fistpl shrb push movsl movsl mov (bad) pushf pop pop bound cmp inc pop pop pop mov out and aam xlat xlat test pop rcrb pop out adc sub dec gs call xchg and (bad) xor jbe sub out mov fmul test mov lods in lods and inc sub and jp inc cmp add push cs cmp pcmpgtd in cmpsb mov mov mov stos adc mov shlb push xor push mov jmp add jo cmp push or pop xchg ss pop sbb adc jnp fistp dec sarl jecxz (bad) (bad) lock add cs pop pop inc inc (bad) (bad) mov iret or or mov mov dec int3 test adc jp movsl mov pop pop jbe jne jmp ficom jnp loop push lds push mov add in cmp sbb repz mov jmp mov int3 les push and clc mov loopne popa inc or fistpll rcrl pop pop dec outsl pop or hlt inc or and push (bad) xor nop push popf aad inc jecxz sbb pop push insl (bad) and mov mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push add pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope pop or js cld cld clc clc inc inc adc repnz add fwait fwait xchg xchg cmp (bad) jmp xor jg sub sub ljmp lcall pop pop aam sub addr16 and add dec mov mov scas out cmp ds scas scas mov sbb mov test lcall icebp mov imul int3 int3 leave leave dec dec add push push jo je dec dec mov push in in popf sahf mov (bad) xchg test jns ss idivl jmp and jo adc push and jle jge push push movsb lods lahf lahf add jnp stc repz cli std aaa aaa dec inc (bad) (bad) icebp stc add and pop pop push inc (bad) (bad) sub xor inc inc sub repnz mov ror xorl test sbb inc push movsl movsl mov (bad) pushf pop pop outsl bound xchg mov xchg stos stos jecxz and imul ljmp fsubs xchg ret pop pop (bad) sub xor sub add pop dec dec test insl insl sti mov out push cmp movsl test scas mov push push aad test mov in mov fs xor nop adc xor leave dec dec test je leave dec mov push in in sbb push mov add rcl ljmp mul jge jmp sub mov push daa and jle jp push push or jnp inc repz in std aaa aaa mov (bad) sti stc add clc das pop pop dec inc (bad) (bad) cmp addb repnz std mov jecxz andl test aad call fcoml bound cmp mov xchg stos stos out out and mov dec dec into into cmp aaa ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor ja inc (bad) or push push push push pop push nop nop mov aad push stos stos cmpsl cmpsl div or push push add in in push mov out repz pop in sti sti ds cs sbb cwtl cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop inc aam sub outsl sub iret pop or sub mov movsb out cmp test scas (bad) push push cmc cmc test and in repnz xchg xchg fwait fwait cld jbe xor adc xor leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo pushf sub jno mov jno sub lods lahf lahf (bad) jae out add fmuls inc (bad) (bad) stc stc adc das das pop pop inc inc (bad) push xor adcb inc cmp repnz mov (bad) lret cmpl test push movsl movsl das lea pop repnz jne into out xchg xchg sub stos stos outsb aam and sub sub jo lcall pop pop mov addr16 add dec dec loop and (bad) hlt xchg scas out cmp ds xchg out rcr push push mov (bad) jae (bad) test icebp or in mov insb fs inc jp or xor in add push inc pop cmp push dec mov outsl movsb in mov (bad) mov xchg xchg cmpsl cwtl rcrb jns xor mov jmp adc jo adc push pop jno popf mov sbb lods lahf lahf jecxz xor repz std std aaa mov add add das pop fild (bad) (bad) and jecxz inc es mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or add movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or ficompl fstp adc hlt hlt dec dec cld cld insb insb sbb push push outsb outsb pop pop xchg xchg jmp xor push push pop pop (bad) popl add ljmp inc inc mov xchg xor sbb in in in sub loope add es inc inc adc mov add pusha mov gs or jg sub sub ljmp fcomp arpl ret pop pop aam sub addr16 add dec mov mov out cmp ds scas scas mov test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov jle adc lea jns cmp idiv insl mov jo and push jo cld leave aaa jle add push jmp jle jnp (bad) pop adc cmp lock push pop push aaa lahf (bad) insb push leave subb mov mov test test adc push (bad) pushf pop pop arpl cmp mov xchg stos stos out out and sub sub jmp adc lcall pop pop sub sub out sub std inc pop dec dec mov insl insl (bad) mov out cmp ds scas scas fidivr adc cmc test xchg pop hlt mov sbb in subl jl xor adc xor mov or data16 sbb in in sahf sahf mov xchg rclb jecxz cmp cmp idivl jmp xchg xchg imul and ss jno,pt push repnz popa push test fdivl movsb (bad) (bad) lahf lcall std and pop lods push xchg push mov adc jns ja sbb push cmp cmp ret ficomp and in inc cs jbe fdivs dec jne ficom icebp xchg jl push ret xchg (bad) call jno xor repnz outsl sub cli (bad) call lcall popf and cmpsl fwait push adc mov pop outsl movb push test cmpsl mov inc clc cltd pushf insb jbe call insl out inc test int cmp (bad) xchg ss mov cmp jecxz cmp ror mov mov xor scas inc xchg adc lret jg insb cmp xchg adc dec pop pop xchg xchg daa jecxz jmp in aas (bad) idivl xor add sti push push xchg test xchg outsl pop push pop cmp cmpsb push pop out or xchg scas jno mov scas sbb or xor lcall mov in fwait jle add scas jg mov cmp icebp mov mov pop outsb in push jo aad pop and loope into jge or (bad) lock into fcmovnu push sbb stos js cmp (bad) adc inc leave imul mov cli loope mov lods jnp dec out ds adc push pop cmp movhps pop sub out xorl pop push cmpsb fmuls ret xlat adc sahf arpl mov out mov sbb shr mov lea dec cmpsb (bad) pop insb mov insb mov add aas sarb cvtpi2ps push mov daa sbb imul loope jp pop (bad) jb cli inc std sbb test jp fstps xchg addl sub daa dec mov jnp jns or sbb jnp xchg xchg mov xchg stos stos out out and or mov ljmp arpl cmp mov pop addr16 add dec dec sub rol lods out leave cmp ds fist mov (bad) jae insl insl push push pop sbb in subl or xchg xor jge dec dec (bad) add je pop dec mov push in in rcrl mov xchg add rcl test idivl jmp sub jo jbe sub into jnp xor ss jno push shl xlat lahf push (bad) jnp mov aaa aaa daa or (bad) cli stc add outsl arpl pop inc inc (bad) (bad) or enter inc inc ds repnz std mov int orl pop pop xchg (bad) xlat pop pop push movsb ficom psubusb stos loop and add (bad) lret dec dec mov je aaa ss sub mov imul movsb mov pusha int3 int3 insb or (bad) inc inc adc loopne dec or mov xchg daa daa fnstsw sarl dec dec cmpsl cmp inc (bad) fisttp or push nop nop sbb popf aad imul add push push mov mov repz pop xchg test sti cmp xchg push sbb push add xchg adc inc or sbb inc push xchg fcoml add sbb push pop xchg xchg cmp pop pop xor call push dec inc mov xchg cmp sbb xchg push pop adc sub loope dec outsb es cld cld mov and add fwait rcr jo sti jmp sbb dec jg xor sub ljmp fnop arpl mov sub sub sub in push dec mov insl insl or mov cmpsl lods out cmpsb jno movsb test scas push xchg sbb cmc test xchg xchg icebp icebp imul imul xor push pop jnp int dec dec sub data16 push pop mov push push in in lcall mov int pop xchg popf rcl stos xor jns cmp test sub mov and ss jno push and (bad) jnp mov aaa aaa aaa or (bad) sti stc add dec arpl pop inc inc (bad) (bad) fs inc inc push push repnz std mov int andl test sbb (bad) xlat pop pop imul push movsb ficom cmp loop in and mov pusha sub ljmp fcomp arpl (bad) adc sub sub and add cmp push dec mov out mov test out add adc lods test scas (bad) xchg sbb cmc test xchg xchg icebp icebp cmc push lods in subl jne xor test jnp ret leave dec dec lods dec sbb insl data16 xlat add in stos pop rorl inc adc pop cwtl sarb xor sti mov jmp jmp and in cmp ss mov push sub iret xor xor in jg mov (bad) (bad) xor add stc sahf (bad) jl enter or cltd mov mov adc (bad) test call (bad) (bad) pop pop xor jne xlat push ficom subl and lret add jae cmp mov mov adc jg movsb push inc mov int3 clc clc push push xchg mov inc loopne test sub inc or mov lea dec fwait int3 or fs or mov push scas movsl fcoms out shl stos rcrl imulb pop push test or mov scas out dec adc pop mov out test adc sbb rcrl pop cmp inc or cmp fdivrl test mov mov push sbb mov push jns xchg out push pop cmp push xor cmp sub jno xchg sbb pop adc xchg test es mov push inc cmova inc cmp fwait nop nop cmp (bad) (bad) fs or dec dec jg sub sub jmp jmp jno (bad) arpl ret pop pop aam sub gs and add pop pop dec dec mov mov out cmp aas aas test ficom cmc cmc test xchg xchg lock in addb fs xor adc xor enter add push push data16 dec dec mov push in in lahf lahf mov xchg rcl jnp js cmp div jge ljmp adc push and jle jno push push lods lods lahf lahf (bad) (bad) jnp repz cld cld ss inc mov das das pop pop inc inc (bad) (bad) es inc inc daa daa repz mov int (bad) (bad) pusha pusha test push push add movsb movsb mov (bad) pushf adc cmp out xchg xchg mov xchg stos stos out out and sub sub jmp jmp jno fwait lcall pop pop (bad) aad sub and add pop pop dec dec mov mov out cmp aas aas test fist cmc cmc xchg xchg lock in addb data16 xor adc xor enter add push push addr16 dec dec mov push in in sahf sahf mov xchg aam jp js cmp div jl ljmp adc and mov push push lods lods lahf lahf (bad) (bad) jge repz std std aaa aaa iret or (bad) stc stc add push arpl pop inc inc (bad) (bad) push push inc inc inc push repnz std mov int orl test sbb dec sbb movsl mov (bad) rcrb bound xchg test fsub stos out and xor (bad) lret dec dec test ss cs addl movsb (bad) mov lock pusha int3 int3 xor push push or inc inc clc aam loopne dec or mov xchg daa daa sbb (bad) xor dec outsl cmp inc (bad) or or push sbb nop nop pop stc popf aad imul add push push push cmpsb and mov mov or pop js mov xor cs xchg push sbb push add xchg adc ds or sbb cmp xchg fcoml adc cmc lsl sbb pop pop xchg xchg icebp movsl jns push push pop pop mov dec add call push dec inc mov xchg cmp sbb mov sub loope dec outsb es cld cld fs inc sbb jne xchg xor in mov scas insb cld sub movnti dec rorl je clc inc xchg jl mov mov dec sub jl jno test (bad) mov fstpl push mov xchg jbe adc mov adc (bad) cmpsw xchg and orl cltd nop mov mov adc pop scas xchg imul test or mov and rcll bound fimull fwait xchg je push mov push xchg pop fiadd ret fst mov add test add mov bound stos rcrb enter jmp inc out cwtl sarb gs cmpb (bad) cli mov push mov jae and xor sbb xor std dec les mov popa fs cmp iret inc push mov sbb icebp pop xchg daa (bad) into xchg mov ds add mov arpl push lret int3 dec and fsubrl push or xor fistpll rep stos into int cli loop pop mov xor mov sahf adc jnp lds add rclb push (bad) add mov iret or xchg pop idivb fadds sub mov sahf xor (bad) (bad) and in push mov and xchg (bad) test lock inc push pushf or jecxz xchg jp xchg insb push pusha repnz xor iret (bad) adc push mov test jg or or mov cmp mov fildll push inc arpl jns push inc jbe aaa fstpl or adc fstpt mov roll xchg cmp jae aam inc inc cltd repz setp mov movsl push pop (bad) mov sub lock test cmp lock sar lret mov xlat adc fsubrs loope mov or rolb lock cmpsl inc pop mov and insb xchg mov push je push rclb (bad) sub test loope xchg mov test xchg adc push scas and scas sub lds xchg lret pushf sbb jecxz fistp inc int3 xchg pop mov (bad) je fucom push movsb inc fdiv sub pop adc mov or cli or ret cmp cmc jbe cs sbb movsl stos mov cmp inc push mov dec mov dec jae sahf imul std js cmp out and clc ja xor cmc insb or xor xchg jae jno scas dec das pop stc mov and subl lcall sahf xlat out mov xor jo inc out dec xor ret push (bad) sub adc in shrl movsb ret sbb aad add incl insl icebp jmp xchg cmpsb push bound and and mov mov cli aas xor xor loope lret (bad) xchg jecxz (bad) out ds push mov ss xor dec cltd leave aaa pop cmp jae test aad loope jmp ret out call fsub lock dec out add ja cmp pop pop mov sub (bad) in inc add or test inc ss fstpt cmpsb fucomp pop out test mov mov call bound cmp mov (bad) stos in out and dec pushaw sub ljmp fnop arpl (bad) adc sub sub and add push dec mov jmp out ljmp scas xchg sbb cmc test cltd xchg icebp icebp test in subl jl rorb enter lea push data16 aaa pop mov push push in in out rol mov mov out adc popf rcl cmp xor cmp notl mov jo pop and and ss jno push inc out lahf pop (bad) jnp mov aaa aaa decl (bad) repz add xchg dec inc (bad) (bad) mov jecxz inc scas push repnz std mov int adcl int3 test sbb ss movsl mov vpaddusb pop pop bound xchg movsb mov loop call les dec and rol cs mov ret mov ret push mov lock fmuls push push push or aam loopne dec or mov xchg daa daa inc jge (bad) ss dec pop cmp inc (bad) or dec inc dec push sbb nop nop lcall stos mov or push jmp mov mov pop pop xor mov ss cs xchg push sbb push add xchg adc cmp sbb ret push (bad) (bad) xchg lds inc cmc add rcll outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp add xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec dec mov mov out cmp ds test scas (bad) push push cld cmc test xchg xchg icebp icebp sbb in addl fs xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl js jns cmp div jle jmp sub jo adc push and mov push push lods lods lahf lahf or jnp repz (bad) std aaa aaa inc inc (bad) (bad) cli stc add sub pop pop inc inc (bad) (bad) and addb repnz mov (bad) int andl test sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push repnz test xchg xchg icebp icebp push sbb in subl jnp xor adc xor ror dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jne jmp sub jo adc push and mov push push movsb lods lahf lahf push (bad) jnp repz hlt std aaa aaa dec inc (bad) (bad) lock add es pop pop dec inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec (bad) cmp ss gs mov or movsb (bad) (bad) lock int3 or or inc inc in test dec dec or mov xchg daa daa push jge (bad) aaa xor dec aaa cmp inc fcmovnu or es dec push sbb nop nop stos (bad) popf aad imul invd push push add mov sti repnz pop pop scas mov xor xchg push sbb push add xchg adc cmp or add fsubl mov std xor push sbb daa outsl sbb fstl jg push pop xchg or xor add inc shr cmp fcoml fs adc push test rolb mov pusha xchg inc cltd push and jnp fwait vpshufhw subb push push pusha sub xchg mov lcall adc sub sbb xchg pop dec add and dec and and shrb out inc jbe int3 (bad) out xchg test sti xchg xchg icebp ja in addl xor nop adc xor add add mov push in in lahf sahf mov jecxz aaa pop stc popf mov jns cmp sub jo adc push inc and sbb jno push lods lods lahf lahf (bad) (bad) jnp repz out std aaa aaa xor popl das pop pop inc inc (bad) (bad) and addb es mov mov test loop punpcklwd push push movsl movsl movsl mov (bad) jg add cmp mov xchg stos stos out out and sub sub popf ljmp stos fsubs ret ret pop pop aam sub gs add pop es sarl rol lods out cmp ds test scas (bad) push push xor test xchg test sbb in addl xor je inc xor add je dec dec mov push in in pushf sahf mov hlt xchg sarb jns cmp div jg jmp sub jo js add cmp jno push lods lods lahf lahf or jnp repz mov pop aaa sub (bad) sahf stc add das das pop pop inc inc (bad) (bad) and and inc inc dec es repnz mov mov int andl test sbb push push movsl movsl aad stos (bad) jnp bound cmp mov xchg stos stos out out and std mov dec into into cmp ss gs mov or movsb mov (bad) lock pusha int3 int3 inc inc push push or inc inc nop cwtl loopne dec dec or mov xchg push daa pop xor (bad) xor dec dec ja inc inc xlat fisttp or push push outsb push in (bad) mov aad add stos stos cmpsl cmpsl div or push push jmp mov mov inc nop out repnz in sti sti aas aas cs sbb popf cltd cltd cltd pop pop dec dec out xchg sbb push fistpl (bad) adc cmc cmc dec dec std std sub push add pop hlt xchg popf jmp pop pop lea js mov iret mov pop xor sbb adc sub loope or es cld cld xchg clc sub adc add add fwait xchg xchg cmp sti jmp xor dec push jg sub ljmp fcomp arpl ret pop pop (bad) aam sub addr16 sub add lret insl mov lods out cmp ds cmp xchg cmc fiaddl loopne icebp icebp sbb subl adc je insb xor add je dec dec mov push sahf in sti sahf cli mov xchg popf popf rcl jg jns cmp div adc jmp sub jo adc push and jle jne push push lods lods lahf lahf js or repz pushf std pop aaa inc inc (bad) (bad) stc stc add sub pop pop inc inc (bad) (bad) lods push inc inc pop push repnz mov mov int addl int3 test sbb push sbb movsl mov (bad) rcrb bound cmp cmpsl mov loop jmp popa pusha sub ljmp rcr arpl mov sub sub sub rclb dec mov insl insl xchg movsb cli mov mov test (bad) sahf lock jb (bad) stos jecxz pop inc cmpsl mov enter fbstp add add adc xor mov add xchg dec inc sub in outsb inc mov out pop push std cwtl sarb pop mov jmp dec cmp je push inc jno xor ss adc push aad xlat lahf jg xor xchg pop adc daa (bad) (bad) cltd dec add pop pop push es (bad) adc iret orl cmp repnz out repnz xor ds test inc adc or movsl addr16 pop pop into cmp ficom jmp loop (bad) mov and xlat (bad) lret add xchg je sbb add mov cmc push ret mov pushf in movsb and test clc sbb cmpsb push or or test lret or iret leave outsl daa jne cltd roll push dec pop sub inc ret addl sbb nop inc out popf aad ss jg mov push dec mov push and scas out scas adc mov xor rcrl and pop adc cs or fist fsubrl dec mov std imul daa outsl popl fstl lret or pop or mov js fldcw insl sbb mov cmp push sbb inc pop adc jno loope pop outsb es mov inc mov imul mov rcrl (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg lock in addb fs xor sbb cmp push push and adc add cmp cs stos test jo nop stos fldl les sbb sbb xchg nop adc inc pop sub sub data16 pop (bad) xlat fcmovnu (bad) incb add cs inc adc stc clc xor inc inc mov es (bad) (bad) lods push inc inc pop push repnz mov mov int addl int3 test sbb push sbb movsl mov (bad) rcrb bound cmp cmpsl mov loop jmp popa pusha sub ljmp rcr arpl mov sub sub sub rclb dec mov insl insl sub mov lods lods out inc jbe ds xchg sbb cmc test xchg xchg icebp icebp pop push lods in subl jns xor or iret leave dec dec add push popa data16 cmpsl add in dec aad mov mov ds pop xchg popf rcl (bad) xor jns cmp mul mov jo pop and and ss jno push fucom xlat lahf or mov aaa aaa pop or (bad) std stc add pop arpl pop inc inc (bad) (bad) add cmp enter inc inc and repnz std mov int xorl pop pop out sbb (bad) xlat pop pop imul xchg lods mov loop out out and hlt les dec mov ss sub mov dec inc ret mov ret (bad) mov lock int3 int3 pop or or inc inc pushf aam loopne dec or mov xchg daa daa loope cltd sarl cmp inc aad or cmpsb inc dec push adc stc popf aad imul pop pop pop push lods mov (bad) mov scas out cmpsl adc mov sti aas push cs int cltd ret dec add rcrl mov inc or xlat xchg fcomi push xchg fmull sbb sbb xor fstl add push pop leave (bad) sarb and call xchg les sbb dec pop adc js loope push outsb shrb mov insb stos cmova test rcrl hlt ljmp aaa xor insb jg sub sub ljmp int addr16 ret pop pop lret sub addr16 pop pop dec dec mov mov cmc out cmp ds pop sbb cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf add mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec add mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int add addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div add jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) add push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc add cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or add push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov add lret mov into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) popl add stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 je dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub add addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb add repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg popf popf rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov add out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld add clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg add or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl add xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov add add pop xchg xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp add repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc add xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc addr16 pop dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall fcomp fs ret pop pop pushf aam lods arpl sub pop pop dec dec cs rol lods out xor ds test das into ficom aad test stos xchg icebp jno sbb in subl jl xor adc xor add je dec dec mov push in insb lcall xchg rcl jg jns cmp div fstpt jmp sub adc push and mov push push inc scas lahf lahf (bad) push jnp repz std std aaa aaa inc inc (bad) (bad) stc stc pop add das pop pop cmpsb inc (bad) push sub addb es mov mov iret addl popa test push movsl movsl out mov inc movsl popf pop pop adc mov mov xchg stos stos out out and lret dec enter cmp xor inc shll into je or shlb pusha int3 int3 inc inc push push or inc inc cltd cwtl loopne mov cmp mov xchg daa daa xor xor dec jbe inc inc (bad) or push push nop nop mov aad imul scas scas div adc push push in in push mov out repnz pop in in sti sti pop cmp cs sbb cltd cltd cltd cltd sbb dec dec xchg or mov pop (bad) adc cmc cmc dec dec std std insl insl sbb pop pop outsl outsl adc xchg jmp push pop pop mov jns mov mov xchg xor sbb pop sbb adc sub loope or adc cld clc clc inc inc adc cli jne add lcall cld gs dec jg sub sub ljmp push (bad) ret ret pop pop aam sub arpl sub push push dec dec es rol lods out cmp ds scas scas xlat (bad) push push pop testb xchg xchg icebp icebp sbb subl les xor adc xor leave dec dec add jne inc inc mov push in in sahf sahf mov (bad) xchg popf popf rcl jb jns jecxz div jge jmp sub jo adc push and jle cltd jb push lods lods lahf lahf (bad) (bad) jnp repz std std ss dec dec (bad) popl cli add das das pop pop inc inc add (bad) (bad) and and inc inc das repnz mov int addl sbb pop pop movsl movsl scas mov lds cmp xchg mov fwait stos stos (bad) ljmp ljmp lcall pop pop in shrb das shll sub mov mov lret lods out fidivr ds scas scas inc push test xchg xchg icebp icebp fldcw imul jl xor cmp cltd leave dec dec loope push push data16 repz (bad) test lcall fstl lods cwtl rcl lahf jg jns cmp notl das jo lock and fbstp mov test jnp mov clc aaa aaa mov stc add addr16 push pop sbb (bad) shlb and inc inc mov repnz lea mov int adcl test pop pop mov movsl movsl mov vunpcklpd sbb jbe cmp xchg mov out mov and lret dec dec jbe aaa cmp ss popa mov mov je mov ret sbb lock pusha int3 int3 lods cmp inc jl loopne dec dec or mov xchg daa daa aad rcl xor dec dec pop ja inc iret fisttp or push push push pop push xchg nop mov aad jmp stos stos cmpsl cmpsl div or push push std in push mov out mov adc jb iret cs (bad) sti sbb sbb adc rorl push fmull inc cmc or std xor mov xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out (bad) ds push scas scas and push push or test insl insl icebp icebp out in jle imul xorl out out xor ss dec cli cli push push cltd cltd je mov mov stos in in add mov mov cmpsb xchg pushf popf aam jnp jns sti cmp idivl jmp sub jo adc push and mov mov lahf inc and adc std call (bad) aad xlat add sub cmpb xor ror pop mov test out popa popa test iret movsl movsl mov (bad) shl bound cmp mov mov stos out push je loop ljmp push pop or addr16 add and mov xchg out cmp scas fidivr loop cmc clc aad xlat (bad) jae xchg xchg icebp icebp sbb subl jl xor out out xor push ss dec (bad) notb test mov (bad) mov in in outsb orl pop gs rcl mov jns fdivr div mov (bad) jo mov push fcmovu cmp nop mov push push lea jg repz cmp inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb jns bnd mov push mov int orl test sbb pop insb dec push (bad) fwait pop cmp cmp (bad) loope pop stos test mov lret mov into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs data16 cltd loopne dec dec inc adcb lods test pop je fildl cmc cmc xchg js std mov sbb outsl test xor jb add pop js stos (bad) and and enter xor sbb sbb adc add es cld cld clc clc inc inc adc hlt xor push lcall add mov (bad) jns andb xchg xlat jo jb sub pop das pop pushf test rcr call out jge add inc mov fs xchg lock inc sbb fdivl push setne sbb jp inc mov xor jae test mov xchg xchg sti fwait jae es add mov ret into stos pop pop mov cmp jg adc push jbe lods sti dec lock pop cmpsb addr16 (bad) das or nop xchg fsubl adc les hlt or xchg in js (bad) mov and pusha scas mov mov loope (bad) enter jo (bad) sahf pushl mov mov cltd cmc sbb movsl and imul dec nop jo jl cs jnp and sbb fs call popf into fisubr cmp loope ret cmp xlat sahf jae adc jno sub mov loope push sub sbbb (bad) int xchg dec cmc lea add in push es sbb jno xchg nop cmpsb jp mov mov call adc cmp lds adc mov adc int3 idivl mov inc jae fild mov sbb sbb jbe in push dec push xchg cmpsb mov sarl adcl pushf add xchg nop sbb sbbl mov cmp stc mov jo mov jmp leave push mov adc cmp or arpl jl in jnp mov int xchg pop (bad) outsl pushf cmp push call bound sbb sbb push push dec imul xor mov aas ret clc inc lret or or je bound test repnz mov xor xor stos mov mov loope jae jnp mov ss fcomps fnsave inc and mov in stc out push outsl xor push cmp or jbe xchg xor sbb jp insl pop inc cmpsl xor (bad) std (bad) repnz aaa data16 divl xlat inc stc repz stc and and or mov loop dec add shll adc addr16 (bad) (bad) push mov in (bad) xchg xchg add fstl ds imul add in add jns dec push push mov xor in cmp subl hlt fs xchg repnz dec shrb push inc xlat out push push adc mov pushf push sbb mov adc inc cs cmpsb sub xchg push lods xchg aas push nop lcall fsubrl sub icebp (bad) in push data16 cltd adc mov es push or std sbb es subb je mov xchg jae int3 out aam mov mov popa mov lods jecxz dec push adc pop jbe add dec push add das push cmp bound (bad) fisttpll (bad) popa outsl dec xchg push aad (bad) incb mov push roll iret xchg enter jo lods ret pushl sub (bad) sub addr16 jg pop add or js dec dec mov dec jl and jnp stc xor xor repz sbb ret xor lahf arpl (bad) fnstsw push ljmp xlat insl jecxz adc test jae (bad) data16 ss fwait ror adc std iret hlt xchg mov aad xchg pop cmc cmpsl aas jae sbb sahf dec and outsb and push xor lods xor fidivr inc sbb mov aaa xchg popa aad fwait or cmp jg mov mov hlt ss cmpsl leave or adc push cmp into pusha jbe push mov cmpsb insb roll xchg popf or (bad) mov mov cs lret lock xor or (bad) and enter jo test dec push dec mov mov jo mov cwtl jo inc mov faddp jl pop mov movsl pop mov and (bad) repnz adc incl clc mov imul xor out ret inc cmp icebp and int3 sbb jne adc pop (bad) ljmp push xor loope or and add stc dec jnp daa fadds cs rorl mov add jae outsl adc mov push xchg xor or rclb jmp add lcall aam cmpsl jge xor loopne rcll ret cs mov add add test adc repz and fwait add jo in addr16 (bad) in imulb mov repz pop outsl push push mov ds mov cmp out inc inc in rorb push loope pop fpatan add add cmp fadd jne mov xchg mov and lcall orb xlat pop jmp adc stc jge pushf imul mov leave sbb sar dec loopne cmp mov xchg cmovnp (bad) cld loope mov rcrl push lods js lea roll imul sbb fildll addl mov aam add add stos ret mov sbb jl leave jbe xchg lret outsl loope pop and in aaa hlt inc or jbe pop push int sbb out jmp into (bad) or jecxz adc lods sbb fs mov scas out sbb enterw jo push test jb xor sub imul in xor mov xor imul jnp jnp mov movsl and xchg mov call daa stos pusha imul adc sub xlat inc dec stc adc popf in pushf pop and mov push push outsl shr popa out std xor push xchg jno in aas enter jmp popf shrl push xchg ljmp sbb mov xchg sub push cltd fwait inc adc int dec int outsl mov jne sbb cmp adc cmp cmpsb popa in mov xchg cmpsb or scas adc imul out mov (bad) xchg mov xorl leave pusha mov test cmp enter jo (bad) pop decl push mov lock jg in jnp repnz movsb or and dec xor mov mov movsl sbb int leave mov cmp ja call test shrb (bad) or jle stos push loope xor xor pop iret out mov jo inc inc push adc push (bad) mov xor fsubl xor das loope cmp mov sub scas add jnp mov add sahf cs mov inc nop pop stc push gs outsl out push jge pop ja push rcr or cmp xchg mov and sbb outsl cmpsl insb pushf sahf add jnp rcr jae in and fsub insl mov fldcw repz fnsave and repnz or rolb in (bad) nop (bad) test into inc adc (bad) and xchg loop fstl mov imul mov push mov mov xchg (bad) push add insl push mov rcl fs ljmp pop out jle cmpsb orb xlat (bad) repnz sbb negl scas inc rcrl jne rorb insb int (bad) stc xor scas lods pop aas cmp pop sbb sbb rcll push inc inc mov rcr inc jp mov pusha push xor movsb sbb or fwait pop mov int nop cmp xchg pop pop mov loop stos xchg cmp mov adc cmp insl repz push adc in cmpsb pop jne das dec imul stc rcrb and fsubr xchg (bad) cmpsb retw and (bad) push test popa mov pusha jp jno daa adc mov xor jnp jmp cmp adc jmp add rol or out (bad) cmp lea jnp adc pop adc cmp jp call ret sub imul orb push pop (bad) xlat cmpsl mov jecxz aas gs mov mov ror mul ror xchg nop std idivb xchg int3 bound aas scas fsubrs shrl push cmp sbb jp mov mov push xor stc xchg jmp aad int std stc int3 xor mov popf in stos pop xor push cmp adc adc jbe or dec not sub cli mov (bad) or dec adc add (bad) pop gs (bad) insb les inc xorl out add xchg enter jo sarl mov cli sbb xorl or dec mov sarl jb mov cwtl movsl stos inc push jl fdivrl inc pop add int xor xchg imul or xlat dec push xor movl jnp lods xchg inc arpl test cld orl test add xor cmp scas adc mov cld lret lods repnz dec mov push fadds js mov fsub mov sub mov outsl mov cmc sub dec inc or es jmp add pop jno scas pop sbb stos push cmpsl and aas add jl shll je xchg and dec in mov inc mov adc sbb xor sub sub and outsl insb sbb loop push sti nop push inc into push popa mov into (bad) jmp (bad) fistl xchg fnop vmaxpd loopne xor shl xchg arpl and inc push jae cmp add jle mov mov pop push fs lret in pop xor lcall push enter push xchg inc adc or fstpl mov (bad) xor imul repnz mov push dec outsb jo scas js jp repz mov daa out cmp mov fdivs int pop imul (bad) cmc mov out stos roll adc xchg mov rclb mov sti jbe lock cld ljmp push lea ja jne xchg sahf pop (bad) mov jbe movb or xor lods jnp,pn pusha add insl test enter repnz enter jo inc jb (bad) lods xchg mov sub mov out mov pop and pop dec dec push jge movsl mov movsl loope sbbb sub std dec ds add cmp push nop dec push dec xlat mov xlat movsb and adc (bad) dec cmp mov push or inc std leave addl jne add lds jl mov push sbb stc lods jns hlt jp inc jmp push popa xchg out nop xchg xor fwait test insl test or push mov (bad) shrb cwtl call loop loop pusha xor jbe xorb dec mov insl das mov testb (bad) xchg adc pop cmp xchg adc xchg (bad) sbb loope add mov mov add fdivp enter jo add jmp and adc mov (bad) cmp movsb and mov sbbb mov btr dec dec clc call pop jb imul cmpsb leave fsubp ror xor lock ds dec inc mov rol je pop iret pop outsb sahf outsl ja xor loope inc add test dec dec data16 push fcomp mov cs mov adc adc arpl test push es scas insb push or or int xchg sub movsl jno add hlt xchg jle or push in sbb data16 sbb inc popa icebp repz cs fs and and fs and xchg ljmp mov fisub mov jecxz mov inc inc inc pop mov cmpsb out out out in cwtl push sti push mov rcr cs add mov fdivrl push mov cmp fs mov (bad) mov scas out idivl ret pop add mov xchg outsb gs roll cltd movsl mov fsub sub sbb (bad) mov or aas ret sbb jle rcrl jg nop push push lods iret sahf pop jp xchg mov sahf lret push ss mov lcall fwait inc outsb mov int3 (bad) jecxz mov or into sub cmp adc pushl stc cwtl dec std mov cwtl das adc mov dec adcl (bad) popf mov push (bad) lods lret in push shrb insb test add out pop dec dec enter jo dec idiv sbb mov sub and jp xchg sub push fldl jl pop xchg jnp inc sub jnp jae jle xlat call repnz imul call jge dec dec fcmovnbe add lds adc imul mov fiadd xchg jmp push aas sahf repnz cld mov push xchg cmc lods in push jp and mov insl stos push js js inc push add push xchg imul fwait dec popa jmp push cltd movsb int3 lea mov jbe stos mov lret mov push adc (bad) mov dec js (bad) cmpsb rcr mov insl sahf cmp mov int3 dec (bad) dec fiadd movb push lods adc leave pusha mov cmp mov or xchg xor jo and bound cmpb add mov inc push dec ja cmp xor movsl sbb fcompl (bad) arpl enter or rol lahf (bad) imul (bad) pop push test sub mov stc (bad) ret pushl jno xchg inc adc inc je cltd inc pop rcll mov lods cmp push mov jno add jne dec dec test ret fsubs cmp mov fadds ds sbb sub dec (bad) jl dec cld bound and xchg out mov inc insl mov or push xchg push add xlat lods roll and in fcmovnu data16 cli inc mov pop mov repz adc pop and cmp and add sbb nop inc push push out into jne popf mov adc iret stos (bad) movsl std pop out cmpsl imul shr movl push add or jne sbb cmp mov cltd push aas lcall in sbbb xlat and adc push push or mov adc ret std mov subb int (bad) cli sbb jnp push (bad) mov jp ds or ss fwait dec cmpsb sub add int3 add dec mov ret jle add cmp xor dec sbb pusha cmpsb stos cmp adc or inc adc add push mov mov cwtl subl andl insb movsl out iret xchg lods enter jo je (bad) std adc in sub dec sarl out mov and faddl popa or adc (bad) jnp xchg cli movsl test pop rclb call and arpl jge clc inc inc rcll movups add xor sti xlat in cmpsl adc stos out imul push (bad) xor adc pushf leave mov negl and xchg fcoms sarl insb mov sbb fmul shrl out xchg xchg mov mov aad and adc mov xchg negb adc int3 insl fnstenv imul mov mov mov cmp or adc mov jbe cmp fldenv scas pusha fadds cmova adc arpl xchg cli push (bad) dec jns,pn cmp sbb xor pop shr mov jo jo mov call mov sahf add mov gs inc mov dec mov sub shlb stos pop pop cwtl jp test mov fidiv xchg ret xlat imul fstl push xchg (bad) xor dec mov outsb add bound fdivrl sbb inc adc gs push mov (bad) pop mov push popa xor inc loope scas push mov daa pushf jg addb fdiv out mov icebp adc xor sub add sub (bad) lahf push cmc xchg xlat or int3 mov dec add cmp cmpsl sarb inc roll sub mov sub mov movsb inc in mov cmp add push and movsb jmp add lcall lock push xchg xlat mov cwtl and repz lcall mov push or aam push add push cmpsl mov jmp aam push pop int3 fs jle (bad) call xchg sub jge cltd add xchg xlat push int3 sub sti xor gs sub pushf jmp push mov mov jge std xchg repnz cmp aas inc push fistp ljmp push cmp fsubrs inc cld push mov lock dec jmp imul out jle int3 dec and mov mov stos popa cmp cmp ja adc iret push dec mov das das bound daa xchg dec cli adc int3 cld popl push daa (bad) lcall lods mov push cld test cwtl pop enter add lcall mov addr16 jg mov adc mov scas dec (bad) jbe jl out jnp pop mov int xor xchg pop cmp call push or and xchg clc lds loopne das inc xchg xlat cmp inc movsl xor pushf xor add mov fisttpl faddl xchg cmp sbb rcrl popf lods js sarl shrb mov add xchg mov sbb xchg mov int jle int3 mov mov stos fistp int and push cmp ds sbb sahf cmpsb or das loop adc fcmovnb cmp sub aad bound pop pop xchg adcl frstor dec imul mov push decl fsubl dec imul dec jae mov stos push mov dec pop jno jl aaa sti jnp imul sub (bad) cmp xchg call or pop clc xchg xchg jl lods ja ficom lods xor mov dec ret dec fwait sub pop mov inc pop jnp jne lahf add scas pop lret push (bad) bts loope fldl mov mov icebp les xor dec pop std (bad) fdivr jne cs sbb nop mov dec xchg xor mov lock xor rclb jecxz lods call nop xchg test adc xor sub xor mov in cld in xor push mov aas sub fidiv inc and dec stc and push add pushf sahf nop push int push add into jg leave mov orl add push add sbb cmc int3 out mov in pop jbe push mov add inc mov add scas sbb adc push pop fs popf (bad) lret sub lcall in mov dec xlat cmp push gs sahf sub mov dec rcr lahf xchg fist rclb out rcrl lds inc aaa cmp popf clc lods jb sub sbb mov xchg imul adc jmp sbb fdivs add pop push aaa mov cmp icebp adc mov cmpsb insb pop sub xchg or or sub push out (bad) mov cltd and fdivrp cmp or sub in mov out mov dec es iret or mov (bad) add mov inc jg (bad) pusha mov pusha sbb inc mov sti ret cs jnp mov ja in pop hlt or cmp push call lahf mov imul push in fstp sbb inc adc sbbl mov cmp push rorb jae std ja fbstp (bad) mov aas or jmp fadd shlb insl lods stc fstl sbb dec push ret mov sbb lods pusha xchg jg pushf fwait push popf inc int mov int3 sub gs into add mov lcall xor or mov cmp das push jae or mov fmuls sbb jns cmpl jmp test out out xor lea lcall sbb mov mov xchg mov xchg or cmp mov jl out jnp loope movsl xor xor pop push fucomi sahf add ret loope jnp (bad) clc or aas aad mov (bad) xor lret ret ljmp xor dec jne nop or dec inc out subl pop loope inc cmpl inc cmp dec fadds faddl mov or mov in jge stc sub xchg sub mov or dec jmp clc in jno mov sbb sub add dec arpl imul mov gs imul fwait aas push and in mov fs or pop pop loop es or push mov fisub mov (bad) (bad) fnsave dec dec imul in cmp ficomp (bad) adc fnstcw cld std mov jge in test pop xor ds cmp (bad) lcall xor sub adc test dec stc mov mov shlb or std stos shlb push test aas xor vandpd cld push and pop lods mov xchg ja mov pop or xchg pop clc pusha fwait ds int pop cs aas dec inc mov (bad) in sub pop mov (bad) clc cmp stos stos jbe lods icebp dec xor nop cmpsb dec pop dec das mov xchg xchg in data16 daa xchg cmpsl dec (bad) roll cmp pusha push incb imulb adc jo mov inc pop add in xor jnp xchg ss and inc jne mov mov jl lods mov sub pop leave enter js call sbb fwait imul dec cmp jne mov adc aad setl cld mov sti push cmp push mov test xchg das rcl aas push cld and fwait pop sub mov subl jl mov adc xor repz ljmp mov adc loope mov stos in and mov pop cmp mov push jbe inc clc dec lcall das add int ret adc lret sub mov jle sbb xor pusha xor in in bound enter jo aaa (bad) lcall pop mov out sub push xchg cmpsb mov iret sahf jg in dec dec mov mov jbe (bad) sbb std push cmp mov sub dec and clc adc push push inc sbb xor push mov jmp imul iret add scas jne inc or js (bad) pop pop test or loope inc (bad) mov shrl sub nop fsub shlb cmp xor mov xlat pop sub outsl ret sub test push rcll jge out adc jmp (bad) mov jno lret mov or mov pushf adcl in mov push movsb daa mov lret jl jo xor or cmpsb and in or icebp add cmp loop jae nop xchg and push xlat (bad) into sbb imul cmc mov pop add push mov imul fsubrp or xchg fldenv pop das mov pop mov add adc mov xor mov mov xor (bad) xlat outsl mov adc mov je mov enter sahf divl std iret jns mov push lahf xchg es dec aas pushf lret (bad) roll daa lods insb pusha adc mov lock push jb fstpl inc xor fwait mov rol iret sbb movsl stos mov jbe cmp jnp inc inc jbe inc mov out sub movsb pop add das xchg adc or fcoms fildl faddp std pusha add push add enter jo xchg int add mov (bad) mov sub cmp lods inc cs sub out jl lods aad add arpl arpl cmp mov cmp (bad) incl clc adc cmp aad ficomp in jge adc adc inc pop xchg pushf addb rorl stc (bad) divb sbb stos (bad) out aas lods insb popa sbb jnp roll mov jp fcomp mov jg push pop lds add in mov ret int and loope dec mov xor stos xor ljmp pop imul inc dec adc lock into cmp das cli dec repz jmp or loop adc dec inc (bad) ficom xchg daa movsl or jp addb je pusha push lahf cs adc (bad) fmul enter jo jb inc xchg test fsubrl jg xor mov xchg inc pop inc (bad) jle dec mov jl pop gs xchg mov mov cmp inc and mov clc pop mov mov xor xchg pop adc cltd pop daa fstps xchg inc adc outsl jne add je xchg mov movswl inc xor mov cltd mov in outsl repnz loope pop mov fsubs repnz adc add out icebp xchg hlt jge cmp stos outsl jp mov cmp xor mov jmp mov cli imul xor add cmc add add dec in cli scas data16 inc mov lahf repz and repz mov and nop jmp adc mov add jb nop xchg clc mov into mov test xchg arpl test jmp out pop lods in mov lods push out mov sti add cld ja aaa and fsubl push ss out mov and out sbb sub cmpsb jle adc mov cmp jecxz push sarl jge shlb in mov ret mov aas mov jbe xor xchg rcrl clc lods aad (bad) jp mov in push xchg or aam out xchg push mov outsb int push arpl cmc adc stos and cmp mov jle jbe lret mov repz (bad) cmpsb (bad) ret and pop or cmp adc or push jo xchg inc adc (bad) pop fcoms lods dec mov push test cs sub adc jo mov (bad) jl lods mov adc lea cwtl ret mov push test jl insb lods jnp (bad) cli movsl lret and pop mov fnstsw bound dec ret ljmp mov cs or adcb cltd and inc popa mov pop je pushf js ja sahf xchg rcl pop xchg adc std sub pop push xchg mov movq imul push dec pop ljmp mov inc push mov mov mov sub fwait test push mov aas ja pop pop outsb mov adc adc jbe mov imul mov outsl or mov test shll in (bad) lods int jmp xor out dec adc enter jo inc xor inc mov sub xchg cltd mov xor inc pop mov dec js sahf jl test jnp jmp movsl sub in pop xchg mov pop call dec and aam xchg clc addr16 pop (bad) (bad) (bad) push fstpl mov mov inc add stos jne xchg mov pop xor orl lods push sbb add lret outsb and pop jecxz xchg repnz dec test jbe or gs mov cltd adc cmp outsl popf pushf imul imul jmp roll push lretw mov sbbl mov addl cmp flds inc cmp mov fwait push in or push repz dec and pusha ds fsubl add cmp out mov cmp into cld push pop mov and fnstsw frstor imul jo mov in icebp xor cltd ja mov sti fwait inc mov je fs mov lcall mov ljmp adc pop insb loope jo fbld xlat test test mov lret stos xchg test push aas jle test xor and outsb mov cmpsb lods lea adc je sbb (bad) xchg sbb xchg sahf int ss int3 popf mov adc pop or sub fidivl jne dec xchg cmpsb jg (bad) sarb or push aas adc push fisttpll xchg jmp cmc add jns pusha aam mov pop dec adc mov (bad) mov jmp sarl cmp mov pop sub inc popa sbb dec inc and push dec xchg jnp cli aam and or xchg lock call sahf pop or negb push or jnp pop cmp cmp pushf sbb add sub (bad) std mov mov xor (bad) je mov scas shr xor out popf lods data16 jp shrl mov cwtl (bad) sbb jmp fwait pop in sub outsl cwtl push int3 lret mov push pop stos cltd push mov cmp mov lds jbe jge dec or (bad) cmpsb mov push sub lds adc xlat rorb cmc push push (bad) imul imulb test mov enter jo addr16 dec clc cli mov es jg fnstcw or jp mov dec outsl jns rdpmc insb jnp bound add movsl cmpsl mov pop pop jg cmp and and sarb push int addr16 xchg lea sbb ds cmp inc push sub je sbb jbe push rdpmc xchg mov xchg and cmp or xor inc je dec sub fadd bnd mov lods mov xor std hlt sub jnp jle cmp push daa push sbb push jmp jae inc jno cmp xchg loope cmpsl pop loop add sbb push in int3 pushf pop sarl in xchg jmp repz sub and test push xchg xor mov insl loop ret lods test into mov (bad) mov jb mov frstor addr16 shrl out ss insb inc outsb push add add out (bad) clc pop mov jmp fs lock xor or stos inc insb sbbb lahf adc into sub shlb jle shrb xchg mov mov mov ss xor xchg sbb popf sbb mov fcoms ljmp repz and scas lods sbb ss push inc sbb imul int3 je das mov lret jl nop out jnp scas dec fist xor jbe sbb cmpsb fisttpll ss call pop adc cmp adc push mov xchg xchg mov (bad) cmpsl imul lods loope lret or fcoml jg jne mov cli cmp jnp lods mov sub imul xchg mov dec (bad) pop xor idivl int movsl in es pop js cmp fadds ret jmp clc add add push push fidivr lods xor gs in stc mov insb shll or shr add std sbb cmp sbb mov dec aas sbb jmp dec mov push push xor loop and cmc jp xchg pushf mov js xor mov mov mov shr ror pop hlt dec int3 sbb sub in pushf mov and mov dec xorb das adc loope int3 inc test popl add sbb (bad) dec inc ret or jl pusha cmpsb jno test movsb pop out mov int3 scas jo loop (bad) std frstor fmuls sub inc sbb mov xchg jg push or movsl pop nop fstps mov jge add cmpsb ret aaa imul mov jp mov arpl jmp in int3 inc adc xchg pop xlat push btc xor xor mov xchg imul push push fdiv ror cs lods dec mov out mov out dec stc pop lds mov ret jecxz sahf mov or (bad) xchg inc xchg test sbb dec lahf cmpsl daa jecxz add loope sarl mov xor in mov jo and sbb and dec add mov loop jge nop lds fmul mov out sbb (bad) adc mov fnsave xchg lods cmp mov sub inc pop mov mov imul cmc inc add jb mov mov adc sub push (bad) outsl outsb dec lcall push loope (bad) vunpckhps push mov mov mov inc cli sub cmpb mov ds xchg (bad) std or ljmp sbb js push popa int3 shrl inc and push mov adc in fstps imull int3 scas mov mov pop push stos cmpl cmp leave lret cld lret jbe adc dec mov movsl out das (bad) pop flds mov adc (bad) dec and inc jmp (bad) (bad) (bad) jne stos hlt aam push sbb inc test pusha push out test lahf enter jo push pushl (bad) pop sub out inc jg xorl or mov cmp mov mov movsl mov aaa pop mov ret je call fs ficom push pop rorb daa gs lods mov lea (bad) sahf mov mov pop pop xor std loopne xlat mov cmp xchg in mov fisubl mov mov aaa lahf lods xor pop jp add add push mov sbb mov fcoms in push ss int imul mov or cltd mov lock adc movsb mov movsb jne dec sti and cmpsb mov jp add xchg shlb and jno lods sbb lods inc pushf or scas cmp add enter jo cwtl sahf call outsl outsb sub jg xor mov and dec adc fdivrl push jnp push jns jp lcall stos push ret insb imul xchg add ficomp cmp sub ret dec popf cld ds stc (bad) inc jmp mov call pminsw stc xor daa jle cmpsb mov cwtl pop sarl int3 js dec push das insb fcomps clc cs (bad) mov lret or pop dec ja dec pop enter dec outsl and in push xlat rorl scas xor jmp cwtl xchg inc jno jbe sbb or neg (bad) ss inc in jno data16 inc in and adc out cmpsb bound stc adc ss add sti loop cmc mov cmp aas mov mov mov pop or imul inc out movsb int3 in sub jns fsts daa fnstcw mov shrl (bad) test lcall iret add xlat pop fsubr adc or pop pushf (bad) or jb xchg sarb enter dec mov movsl lock sarb aas sub sbb (bad) (bad) push adc pop lods dec sub mov stos push pop mov cmpsl xchg jbe daa fwait mov movsl int pop lcall mov xchg mov jge (bad) adc sahf fwait jbe scas or shl fiadd mov fs jg dec popa mov (bad) push movb fadds js pop pusha xor fldz lret enter jo sbb incl fwait mov xor jg jnp mov push (bad) sub dec xor aaa jl pusha pop jnp dec les movsb jecxz cmp mov sbb sub add mov clc jne leave push add iret fimul xlat push cmp movsl js pushf pop jns mov ret (bad) xor cmp xchg movsb inc jnp push cmpsl cmpsl shll push test push lret pop bound mov lahf xchg pop and int mov inc mov negl mov mov adc inc jbe and sbb push cmpsb popf subb fstpt or mov adc push out (bad) xchg (bad) out pop movb movb test pusha sahf jp test and enter jo pop (bad) dec add jmp data16 mov cmpl dec adc or jl and and (bad) cwtl cmp clc loope inc fmulp imul and cmp les fimul lret sbb ret dec push cmove mov pop xchg mov mov mov mov pop loope dec jp iret push mov sbb repnz mov pop bound mov loope mov mov fldt push mov or cmp out arpl clc cmp decl loopne jp sbb xlat jp nop leave scas in subl sub dec aas repz mov (bad) les inc add fcom nop inc pop inc push pushf cli into ljmp (bad) pop insb add jo or imul push out lret cmp push fs std fldcw ljmp mov xchg inc fs xchg push lcall xor cmp pop adc loopne aaa pushf scas daa jmp jae jl out pop shlb (bad) int test mov mov (bad) rcrl lods std cltd std jp jnp,pn (bad) loopne push dec shr sbb pop xchg jae xchg fwait das jge int lock (bad) mov mov rcll jle mov jo cmp fisttpll adc imul clc push cmpsb or das (bad) push pop or dec xlat (bad) repnz sbb imul lods push (bad) mov loopne add pop test xchg cs jo xlat sbb sbb mov out mov std add jl pop or sbb and add pop dec movsl arpl mov sbb pop cmp xchg jb leave imul bound push repnz test and data16 test adc ret push adc mov sbb shlb cmp std push xchg mov ret aaa xchg push adc sbb xchg xor cmc rorb xchg fisubr push xor lret push xor jge (bad) addr16 mov movsl icebp int3 xchg mov shrl jbe inc cmp and (bad) xchg dec imul cmpsb aad xor mov adc insb mov (bad) jae lds (bad) out xorl cmpsl pusha mov cmp out stc jno enter jo or add mov sbb mov lds inc movsb mov mov fs mov movsl dec jg pop sub pushw call mov adc xchg push movsb push push fisubr in mov pusha repz add adc jns mov jne (bad) mov add cmc getsec dec dec xor loope aad mov insb cmpl dec push insb xor and xchg es inc sub dec sar mov dec sub into push dec sub cmp js adcl es cmpsl lcall rcll or in mov callw mov rcr in mov sbb and add and gs or push add or mov shrb sahf inc into jns nop mov pop inc xchg and mov pop xor mov out data16 repz mov dec pop (bad) flds adc mov cmp cmp jae test xor xor mov in mov push call adc or sub cmp (bad) lock xchg popf imul xchg cmp xor sbb in (bad) mov adc dec out push lods pop jb jp or cwtl push fucomi sbb cmp fwait xchg mov movsb fwait cmp add add mov mov mov rorb (bad) adc jmp test jns pop add cmpsb shll das mov xchg or adc (bad) dec (bad) mov scas sub or jge dec pop fbld and test xchg enter jo dec aam (bad) cmp mov ret xchg mov cmp dec rorl jl into (bad) jnp lret xchg data16 imul ret mov pop test push (bad) cmp ficomp aad adc inc mov adc push mov xchg ss (bad) and mov sub xchg xor ss jae pop sbb test push inc jle lods es mov sbb adc lret js add cltd fwait or sbb int3 mov and xlat stos out and mov (bad) xchg adc jmp dec rcrl das sub jp ljmp adc js (bad) outsb scas iret xchg in mov add cli out lret test push inc out cld subl sti lret insb decl mov sub cs mov xchg fildl dec push (bad) cld jl loope jnp mov movsl cmpsl push pop xchg lahf mov call mov add clc insl repnz cli cmp xor ss ret lods sbb sub jne nop and jb mov cwtl mov loope inc xchg mov ret repnz and fdivrs cs (bad) push mov data16 stc lcall sub pusha push out arpl cs mov jno mov sbb dec cmpsl pop xchg repnz ja roll cmpsb mov data16 pop lods fucomi sbb add pop mov and and or cli sub sub adc push cmpsl dec into sub and je fildl insl stos aam enter and push out das add ja in push imul add xchg fdivr addr16 mov flds or arpl mov lods push idivl call imul adc add pop dec push pushf (bad) pop mov rcrl std jae pop mov pop pop xchg dec mov aas pop ret xchg sbb jbe shrl push (bad) loopne lods ret daa xchg sahf dec mov inc push aam mov dec test and mov dec mov adc idivb repz jbe fimul add jmp std push in orl adc xor (bad) mov repz scas arpl lods imul sub test mov sahf jo out (bad) incl adc (bad) stos fwait sub addr16 mov jge (bad) inc inc jecxz dec int3 loopne jl test lahf movsl push test mov call (bad) xor clc fwait xor fisubr (bad) repz push les adc shlb test xor xchg test cmp fucomp sbb jo push inc pop cmp movsl lret daa mov outsl outsb push sbb call xchg ss fwait push ds lcall (bad) dec stos shlb and pop adc inc jbe or pop cmpsb test push das inc xchg xchg or or daa dec adc push xor sarb cmp push adcl xor mov test or enter jo fbstp mov sbb xor push mov cmp mov jl pop sub loop movsb movsl mov in popa cmp jl ret inc imul popf les xchg add xor js nop ret push mov jno sbb jne stc cmp jo push cmpxchg pop loope in loop lret ja pop jmp cmc repnz into loope mov pop stos cs int sahf push (bad) mov sbb stc inc (bad) fildll inc adc incb decl nop into fucompp jg dec xchg or pop sbb add rorl xor data16 sbb in cmp repz ficomp popa xor xor das or xchg add iret mov push push add clc cmp das imulb mov add mov stc cmp xlat stos jne icebp (bad) stos imul xchg out fwait (bad) in xor push cmc adc fldenv call or test mov or jl popf lods pushf lcall xorb xlat (bad) inc and gs test pushf inc addl int loope lcall mov leave xchg addb (bad) mov shll push fsub ljmp in sub push fucomi lahf sbb dec adc or int call sub adc xor loope ficoml push sub dec iret data16 je movsb xchg xchg test (bad) xchg fistp lods xchg fcmovnb sbb cmp jl pusha or into test cltd sub jmp pop enter jo lds pop mov inc sub dec inc jg xchg jb mov movsl or and sbb dec fstpt xlat jnp rorl movsl mov enter movsl call pop (bad) in imul iret xchg push mov sbb mov dec adc sti gs orl psrlq das imul (bad) repnz cld sbb shl xchg sbb (bad) cmc adc push clc mov jp dec movsb mov push push inc mov and stos dec pop int add int3 bound enter fnstenv cmp movsb adc mov cmpsb repz das lcall or or aad jg ds xor fstpt pusha pop stos push sti lods repz jp scas enter jo xchg inc decl shlb stos adc jg cli mov dec clc sbb mov stos dec int3 xor sbb insb cmp sarl sub inc ret daa imul inc sbb fimul leave popa mov lcall cmp mov push jne mov out pop fsubl pop maxps xor xchg loope incl mov fisttp repnz std push dec adc mov scas movsb push cs aas inc mov sub xchg sbb stc mov (bad) ljmp aam jns int3 mov or into notl int lods sub sub mov or push scas or es cs mov mov cltd add and lock in sbb or mov sub loop inc sub (bad) dec jl and mov (bad) ljmp fnsave xor pop (bad) fbld sbbb aaa push in ret push inc (bad) test and dec pop mov out std mov in fs jae (bad) popa setle lods in adcb cmp mov mov gs jae cltd stos or roll jl jae sub mov sub xchg leave mov sbb adc push push push mov sahf xor jp leave lret enter sbb sbb add xchg or mov cmpsl arpl int lods xor mov icebp sbb je movsl cmp rep jbe and dec repz cmpsb mov (bad) das add dec xchg test or pop fs push and xchg xchg in jno dec or xor ret popa out pusha daa je test xchg arpl in mov mov aam (bad) jmp dec and scas xchg and xchg or stos cmpsl jg cmpsb pop push jl dec arpl sub lea pop xchg mov push call std mov lock in aam mov loope jb or add movsl push imul mov xor and xchg std ret stos jnp imul jo xor lods cltd xchg sbb icebp ja mov shll scas jmp jp dec mov and sbb sbb fistl mov sub dec xchg mov add hlt mov or push and adc cwtl dec sbb push nop push clc das mov test jmp (bad) mov imul lods push scas call test xor gs cmp lods mov (bad) fs mov into rcrb leave popa mov sahf sub inc dec mov out xor cmpb icebp movsl es pop mov outsl mov ret fildll lds flds out inc scas and (bad) lret cmpsb push imul adc inc cli les decl pop add movsb pop sbb sub inc xor insl fwait loope (bad) idivl mov outsl aas dec jno jmp (bad) dec mov dec out mov iret out (bad) stc (bad) dec push outsl in shrb add push jnp mov mov (bad) jmp jb push (bad) mov sbb mov add xorb adc cmpsl data16 or mov and in push mov or outsl or iret imul add jl loop cmp cmp adc into iret movsb daa mov mov into fnstsw rcrl mov imul xor in inc jmp loop cmp dec add insl mov js rorl pop inc add hlt jle lcall jge xor cmp adc pop rcr pushf sbb in shll sub aam xchg and mov mov xchg test xchg mov notb xor lods fistpl or xchg scas sbb cmp loope xchg int rcrb movsb cld push mov imul cmp aaa adc ja jbe inc (bad) xchg push cmpsb es das fisttpll jno mov sbb gs into fstpl (bad) ja mov in js pusha call insb sub dec aas cmc enter jo in ljmp call sub mov mov insl jns inc mov xchg adc test dec jnp sarl pop les cmpsb call push mov imul cmc jp cmp sbb ljmp gs les out mov shrb dec fdivl cmp rcrb pop sbb cmp shlb lods scas nop xchg jp aaa jb rcl push cmp pushf xchg mov stc int mov mov lea stos stc sub lock fsts mov divb xchg mov cmpsl sbb cmpsb out shrl repz sub push ret xchg lods es (bad) or rolb movsb jo cmpl out mov enter jo aas push ljmp inc ljmp out (bad) out jg pop cld mov adc add and and jl jae jnp mov movsl leave insb xor pop cmpsl sub call jbe test clc cmpsb lahf test (bad) mov clc xor xchg ret mov ja inc mov icebp (bad) je cmp pop inc dec fisttpll mov mov les fisub inc cltd orl sub cs bound jb xchg hlt nop dec or rolb sub test or shrl xchg dec rclb xor cmpsl test lods add push shll fsubp mov (bad) or mov lahf sbb cli into add and inc lahf and in aam mov push fs or nop in xor push fwait or cwtl mov xchg (bad) js stos xchg ss pop in xchg imul in pop push mov gs xlat fprem and add xor mov lods fdivrl sbb fs aam scas push pop lcall scas addb mov xor inc mov (bad) es rclb add mov push and sbb rcll dec lods mov sti jp jge mov popa sbb bound sbb pop xchg mov mov imul cmpsl push in stos mov mov int3 rolb adc rclb testl sbb cmpsb xchg stc das mov fild fisub (bad) mov add adc stos and roll jo or (bad) jg cmp (bad) in in ror sbb xchg (bad) cltd inc bound dec sbb adc jnp test pop xchg fidiv cmp lods call cmp std imul mov ficomp xlat bnd adc mov pushf (bad) and mov in jp out sbb mov sub fnstenv aas (bad) or adc xlat fs and sub mov js push add rcrl xor xchg addr16 mov int mov iret mov pop loopne out stc mov push sti cmp ficom or js scas int3 lcall jns das push add add das test or pop xor ja (bad) sub push xchg pusha aaa sub push cmp addl sub out and add xchg inc xor scas (bad) incl mov jg or (bad) (bad) jae dec fsubrp lock xchg mov in mov jae push cmp test mov imul mov (bad) (bad) cmc stos xor xchg lret mov push xchg jp push cmp jne mov push pop push xchg shl xor xchg pop add popw aam cmc repnz fild insb adc cs sbb mov fisubrl stc dec lcall scas cltd pop push hlt orl xchg pop (bad) in aam mov (bad) cmc int inc mov add push sarl xchg in inc jmp mov ds in jb inc repz pop mov dec inc lcall cmp cwtl es nop test or pop ljmp out sub xchg (bad) fstpl js imul out iret push in lret push xchg das fsts test add mov push inc mov fs icebp fadd loope ss fiadd or dec adc cli shrb lods mov pop test sar loope std lock mov inc push xchg cmc outsl pop aas inc mov shrw xchg push mov out adc aas xchg mov inc decl arpl cld xchg jae sub int scas insb int3 sarl mov fmul stos fwait insl movsb mov jle loopne lds je mov mov aad (bad) pusha push cmpsb pop dec loop mov rolb mov fwait (bad) sti jecxz xchg inc rcrl (bad) or lods or sbb mov shrb imulb int inc (bad) xor sub cltd sbb or je jae repz mov scas jnp adc movsl add dec pop leave insb dec cmp call jnp adc jl clc clc loope push test xor outsl mov hlt adc scas mov pushf insl add inc (bad) repz sub pop or mov xchg xlat xchg sbb cmp mov sbb add lods mov gs pop data16 js sbb sbb xchg mov push int3 sbb test push add or lods sbb push xor cmpsb sub cmc das ja mov or jl adc mov popa xchg pop jmp movb int3 lods sub insb pusha inc mov test cmpsl jnp jecxz dec enter jo sbb mov fs mov fcomp xchg inc stc push push jl and jnp sub movsl jg cmp sub shr lock imul pushf imul jns xor cs ret jns cmp jl dec inc test adc dec cmp rsqrtps adc pop in loope lea pop push push gs ss push cmp and sub mov lret cli mov pop inc and mov cmc shrl enter push or push jbe or mov sbb lea jno rcl cmp in push mov dec mov pop mov jbe cmp pop and (bad) jo inc out mov loop enter or into ja jp sub and xor xchg adc jb sahf pop pop into mov push xchg out adcb and fincstp pop int and mov (bad) xor mov rol or lods and lcall push sbbb mov out mov pushf pusha sarb mov int3 incb cmpsb repnz xchg xor mov nop xchg xchg hlt dec lods aas push pop sbb gs lret push jae mov jp inc push mov stc aas push xchg movsl stc sbb (bad) xchg xchg lret fwait das dec mov push jge int3 mov sbb cmp or xchg adc push dec int3 rclb (bad) xor das bound xchg bound (bad) dec mov push pusha or stos push addl xor pusha pop out test out add enter jo mov incl mov push (bad) enter out in (bad) ljmp inc adc sub cmpb jnp fldl mov add arpl fucom jb mov add dec push and fidivr daa out adc cmp xchg mov push rcl adc std adc add pushf cltd and adc popf fadd pop scas push pop in clc lods xlat xchg sbb ds dec pop xchg (bad) sbb movsl xchg mov push lods addr16 sbb mov push mov movsb sbb stos insb mov push mov rorb mov das pop cld pushf xchg imul pop and mov and out stos lods jae lcall ja out sahf mov enter jo mov inc hlt (bad) mov loop les jne mov or sub add dec adc in jnp cltd (bad) mov cmp fucomp push out ret lock cmpsb push pop push inc fsubrp xchg fwait xor arpl cmp ds aad inc dec out out jne iret test pop int3 iret test xor sub pop int3 sub bnd sub lret xor push add mov mov pop je stc out imul outsl add sub ljmp stos adcl in sbb leave cmpsl jg push dec and shl outsb mov data16 xlat mov jp in sub mov shll ss adc sub push xorl loop or push call jle pushf or repnz xchg test adc inc out out xchg out in jnp nop push outsl je fxch mov sub sub aam fs lcall cld add (bad) xlat mov pop adc shl pushf jmp sub push rcrb mov xor mov mov sar or sbb test mov jecxz sbb xor lea addr16 rol int adc or mov call loop mov mov pop jbe xor dec sahf and cmpsb ljmp xchg push or and iret repnz sub (bad) mov add add jb lods (bad) fidivl pusha pop test imul cmc das fcmove push cli jo cmp call xor sub imul adc or stc pushf xchg dec rcrl mov movsl sahf (bad) pop pop and insb cmp adc mov imul push and lods fidivr (bad) dec push adc xchg xchg cmpsb pushf jl lahf mov sahf hlt mov test mov mov dec push xchg rol cmp insb dec lock mov shll in scas stos mov mov mov fcmovne sbb scas xchg sti int fwait ret fbld int3 stos addr16 stos adc out fisubl jne inc fidivl cmpsb loopne xchg das into xchg mov push push sub (bad) in adc movsl std (bad) lcall (bad) aaa mov shrl fwait test inc out and mov jo cmp dec add sub add push inc xchg inc (bad) aad dec sbb pushf jl sbb jnp fcmovne movsl fldcw iret pop lods mov inc call imul imul into and mov out xor push dec pop ret out ljmp mov jp aam cmp pop gs sbb sub dec or mov push test repnz hlt fimul out fdivrs cs sbb aas push (bad) hlt arpl xchg sti xchg mov sub xchg push (bad) mov std jmp dec rclb in sbb shll mov repnz in and data16 enter xorl and addr16 and fsubrl fstps dec nop sub fldt xor into (bad) scas xchg mov mov lahf dec fstpl ret and out xor mov (bad) sub add outsl clc mov sbb pop mov inc pusha fs or sub out idiv adc dec sub xlat xor pop adc pop mov pushf jo imul cmc jno std xchg sar mov aad xchg pop add sahf sbb jns xor stc subl bound fstpl add inc out inc xchg test pushf test int3 in mov mov jo stos adc dec insl cmp cmp pop fcmovne jbe sub in adc dec xor cmp inc (bad) jg aaa xchg lods leave jge push adc lahf inc mov test out xchg jbe enter jo pop cli decl push mov mov lea or test decb fmul fidivr in xchg movsl pop rol pop xor popf cmp dec call xchg repz imul jbe cmpsl xchg fidivr sub cwtl jge adc (bad) mov pushf data16 mov icebp ljmp pop adc pop addl in cltd aas xor mov adcb dec lods mov shl mov dec rorb jmp sbb sbb push mov or mov ljmp int3 push mov repnz jbe ficoml dec jno ret xchg das push hlt in sub and into push fistl rcrl (bad) mov shufps iret xor hlt in push lds pop aam cmpsb lcall pop dec mov fmull sbb mov stos (bad) inc das jmp dec or sbb movsl (bad) mov pop rorb das call movsb insl movsl imul xchg mov xor xchg cwtl ds adc call cs pop loope aaa js sub repnz out dec mov ja xchg aaa xchg mull sub (bad) and hlt mov dec stc xchg ljmp imull sub mov push xchg iret jecxz jg xchg jmp cli mov jno icebp inc sbb (bad) ja mov or les rol add fimull xchg data16 stos test xor dec rep fiadd and and mov add loopne dec jmp nop push sub push dec jno and fisubl loopne cmp xchg sub pop icebp pop iret imul out hlt cmc in out pop push insl test fldcw add push fmull dec mov inc push (bad) in pop out pop dec xor pop out add jns test pop xlat in inc adc jnp mov repz inc mov arpl and lea sar ja movsl mov in xchg adc lahf cwtl sbb bnd (bad) cld insb push aam pop lods hlt insb pop jp adc xchg push add ret push lods fwait in ret xchg int3 mov push mov push lock inc push fmuls xor cltd int mul xor cmpsb (bad) js das movsb xchg xchg sbb or cs xchg xchg (bad) mov xchg pop or orl jbe test lds cmp pusha enter jo cs ljmp add dec mov cs loopne xchg dec cmp lret xchg jl inc (bad) jnp stc mov pop es push call pop inc mov scas xchg popa clc jns jbe mov sub adc rcr mov into ret mov outsl lds rolb push cmp mov and ljmp cld mov lods and fnstcw push jmp push or inc repnz mov push inc int pushf dec int3 cli add mov jno stos cwtl xorl sar dec adc sbb jbe hlt push dec loop cmpsb jne subb repz or and inc movsb ficoml div pop inc enter sub fdivl cmp dec stos test add enter jo testb pop mov sub pop aam call fsts mov sbb mov xchg jl sbb movsl out out pop push mov icebp xchg cs mov sub inc mov dec fisubr sbb repnz xchg mov addl or adc notb xor pop lds lret push repnz jmp daa fmuls push hlt cs dec adc in stc stos fisubl sub mov mov lock and lds and dec sub int int3 in inc pop data16 call cmp push outsb outsb repz or mov cwtl and mov sub xchg sub loop xchg popf nop cmp ljmp mov ja mov fnstsw lret pop popf or iret inc dec out loope in mov popf pop flds inc sarl stos pop xchg mov sbb pop (bad) and lcall inc adcb pop adc adc mov mov sahf jb push lea jle jae or adcb pushf test push adc pop jp xlat imul je xchg test sbb int add push (bad) test cmp pop mov mov and and jbe sarb xor sahf das ret push stos xchg popa mov (bad) xlat fisubl (bad) sti clc aas sbbl lds pusha fcompl or arpl lods jo imul mov ret jg jne mov ja mov dec aas or jl push mov aam movsl and rol cmp lret adc lds jnp clc sarl jo jns sub lea adc push adc mov test dec shlb lea xor ficom shl mov dec xor sarl push push pushf inc add cwtl mov mov enter sub stc stos xor int lret xchg stos jno lret and mov push fidivrl or adc out inc dec lret cmpsb dec mov or into cmpl out xchg repnz dec (bad) (bad) (bad) mov rcr jecxz lahf imul out xor mov jo add mov repz shlb sahf or ds sub xchg xor jmp bound sbb (bad) aad xchg jnp add dec imul add fnop (bad) lea lcall ds jle inc mov jp je imul negb adc outsb or pop sahf outsb outsb bnd outsb lahf fmuls stc adc mov inc fidivr push dec stc rorl icebp outsl sub push push push lods add out or and pop loop inc lods fistpl push or cmpsl jne faddl (bad) rcl ret inc dec cmp mov ja in jg stc repz mov and or inc fcomp or push scas add loop jbe nop ljmp into push adc mov xor fstpl and sbb inc in lret fdivrp push cmp jge jg add dec scas jle inc xchg push fs mov lcall cmp fcompl scas adc ret stos rcrl fwait add add sbb pop pop dec std mov bound aas jg push sbb sub scas hlt inc push lret lods js imul xor push mov sbb cmp cld int test int3 jmp int stos jg jbe imulb adc jbe (bad) mov aad inc cmpsb cmc test das mov add xchg or cmpsb aas adc and nop xchg bound (bad) ja push andl mov jmp enter jo add jmp inc inc mov fstpl mov and inc test cmp lret jnp sub movsl add push pop stos iret or push hlt test int (bad) ret dec imul cmp push mov mov xlat add (bad) adc clc jb pushf sahf inc mov rcr cltd movsl (bad) mov adc cmpl aas xchg cs sbb rcrl pushf push sub xor sub mov mov or out xchg int push sahf int3 daa aaa pop mov dec mov icebp ja cmp mov mov xchg adc cmpsb mov (bad) fwait xchg fwait mov adc push nop (bad) in (bad) xchg dec mov adc push jge test xor xor enter jo ljmp lret adc outsl xchg adc mov sbb loop jl cmp or jp jmp xchg movsl icebp or pop sub aam mov adc dec add clc repz push adc mov cmpsb xchg into xor sub scas ret pop test ds ret add push push mov je addb test pmuludq lahf xor adc mov add sbb (bad) mov dec mov mov xor mov lcall mov lret stc inc sbb stc sub push dec push xchg add or movsb xchg pop pop inc jno fdivl cmpsl xor add imul cmpsl push hlt in pop insb data16 dec mov iret insl in xor out imulb or je loop pop xchg nop sti (bad) jno pop jmp push mov fnstcw sub sub dec pop adc sarl int sbb push or push out xor mov std mov push jb mov cwtl mov jnp call notl in push xlat adc mov scas mov jbe mov lods shrl rolb std mov dec mov pop push xchg repz aas push fstl sbb sub push idivl lods fnstcw push jb mov lahf push test adc xchg lahf fisubrl add sbb pushf dec jae loope fdivs aas test push push cwtl cmp jmp jbe cli xor cmpsb jnp subb push add push dec or cmp (bad) mov subb out (bad) mov jg sub pusha xor outsl test cli dec or movsb decl jp mov jge,pt jg sbb mov daa mov inc push sub dec decl jl or movsl jg xchg pop lret cmp xor ret push imul arpl push pop out (bad) sbb xlat jge and pop jbe pushf jnp out jecxz aad push inc cmp cs daa std aaa inc sub int3 push or sbb aaa and push mov or mov (bad) push dec cmp xchg in cld fwait xchg mov xor repnz jo push mov fistpll hlt (bad) mov mov push adc test dec daa adc cmpsb fild clc das sbb jmp or mov xchg (bad) xor inc xchg (bad) hlt or xorl xchg test mov inc enter jo fstpt lret shr (bad) repz aad cwtl jg sbb add mov push idiv inc daa in pop dec pop (bad) jl mov push movsl popf popa pop pop xchg jae cmp mov ret inc imul push push or add in inc stc xor adc lds stc jb inc cmc mov je dec mov or hlt movaps cwtl xor clc fwait loope sbb mov sbb inc bnd add fdivrs fldt test fsubs mov pop hlt jne ja loop add sub mov or int3 jmp stc mov jno xchg mov mov int3 push add dec imul outsb push arpl retw mov mov fdiv push mov jmp or (bad) inc data16 or cmp mov jecxz or fsubl je push aas shrl ret mov lahf push fsubr insb push fistp push jns fprem jecxz add addr16 fcoml push fs sub (bad) cmc jecxz and stos mov mov imul pushf jle or push int (bad) jae hlt std adc xchg aas inc add mov loope push (bad) or pushf and and cmc mov push lret ja sbb mov cmp pop fsubs int3 pop sub mov add sbb xor imul (bad) jbe sub dec stos in mulb add xchg or aas mov sbb jle and subl mov test data16 jge mov arpl out popa add mov jg sbbl dec and inc mov add rcl leave jl cmp jnp cli mov popf inc ds test jp call pop add imul push xor mov adc xchg mov pushf (bad) out sub mov sbb mov (bad) xor jbe shll push lret aam lods aad cmp push pop mov jecxz push sub sbb hlt sti xchg jnp cld fwait xor dec int mov fidivl jbe,pt mov cmp mov fcoml jbe jg dec add sbb jnp aad pop das ret mov loopne and push (bad) int3 stos xchg sbbl test and add lret jb or push mov push jo fidiv mov mov jg sti fnstsw cs adc nopl xchg mov mov jne movsl out test cmp movsl dec ret xchg imul jge push mov js pop mov rol add push inc and outsb xor and cmp push jno xor fwait cltd loope xor and pop aaa push popf repnz dec sbb (bad) lds sub adc hlt add lret jl outsl (bad) jb sub sub xor jmp push pop gs mov lods cmpsl mov adc rcll pop add and add (bad) repz stc and into test or das xchg add pop jbe and sbb aas out aam jp (bad) into cmp dec push scas std mov (bad) ss dec push mov in or cwtl push cmp fnop sbb add mov adc mov je mov adc fxch dec cmpb sbb pop pusha jp lods xchg int scas lods ja push (bad) shlb xchg xchg (bad) mov xchg sbb call lods stos repnz jp jecxz mov (bad) push mov xlat sbb ficoml loop in int jecxz int3 mov sbb stos mov mov icebp xchg cmp packssdw rcrl rol das sbbl (bad) or xlat pop adc cwtl lea sahf out (bad) jmp and lods insl jecxz pusha or in out inc movsl addr16 jo roll mov test push adc jg xor mov je cld inc shrb sub jnp cmp movsl push fisttpl mov mov ret imul jp fisub xlat fwait ljmp jg or jecxz push mov scas (bad) out push pop std cmpsl cmp into xchg rcll mov sbb (bad) lock or add lods insl (bad) test xchg orb inc sbb outsb ret gs mov loope mov or stos push scas insb mov jns mov mov mov (bad) jbe jae dec xor aad das call mov push adc orb push cmc test inc ss les and je enter jo pop pusha ljmp and sub sub jg mov mov sub inc ja rorb (bad) jl mov (bad) movsl ss push pop in test hlt push shr mov movsb ds xor fisub inc out fcoms bnd int3 fnsave icebp or jne pop insb je (bad) getsec in xor shll push mov mov push xchg fsubrs add rclb mov push mov out ret rol outsl mov mov xchg jge hlt sub or je jmp and jne movsb cmpsb imul pop fisub pusha inc mov xor and lret insw sbb fcomp jmp aam lcall push sub or mov jmp sbb nop cmp aad out jmp into push dec scas mov xchg out jb xchg pop pop fucom jecxz pop jecxz adc sti je cmp imul testb (bad) hlt mov mov pop sti jmp mov je (bad) lea and sub lcall xor pushf push ss aaa xchg adc jg sbb push popf push mov mov ss jne imul lods data16 fwait clc lods cmp jne inc mov sbb mov scas fwait in stos int inc jb fwait arpl stos daa loop mov adc pop jbe adc cltd fisttp mov cmpsb sub das jne xchg xchg std sbb mov (bad) mov les imul xchg lods jmp jmp loopne test cmp out js fnop sbb imul fdivr or outsl mov xchg bound mov mov jne dec aas cld adc jnp add xorb add clc add xchg ret insb imul pop xchg ficomp adc xor ret adc ljmp mov adc cld inc std and ja xchg jae push aas (bad) sbb iret aam test dec and dec fisttp sbb mov mov fwait arpl xor sub inc int3 lods jbe mov sbb jmp jmp addr16 adc rcrl js dec push mov das fldcw xchg jge adc movb sbb repz xor sahf add push and out rorl enter jo cmpsl in decl push mov sbb jg popf jb mov std mov sub mov jl lock sbb movsl mov dec pop pop cmp test or stos imull pusha mov push jae pop fimul xchg xchg mov incl ds dec add jne adc add cvtpi2ps xor mov mov mov insl (bad) xor imul jecxz movsb fstp jg,pn outsb mov jne mov popf leave mov or push sub je push cld stos jns orl dec xchg fwait mov sbb stos pop cmpsl mov lret xchg (bad) lret aaa in pop cmp mov add orl pop and incl jno push add xchg and push lods adcl push int ss xchg (bad) outsb add mov sbb aam pushf mov out lea push aas je fnstcw es add aas mov and mov decb fs ljmp insl (bad) testl xor adc movsbl pushf sub inc mov mov add mov popf std sub dec lock imul sbb scas ror ficom cltd sbb popa sub sub mov push movsb xor sbb mov xchg dec sbb fwait xor int out (bad) int3 mov jecxz mov xor mov (bad) cmp ja adc mov test and cmpsb arpl mov or inc adc movsl add mov adc movsb (bad) notb or int pusha (bad) scas scas test push arpl cmpsb insb push pop in dec lcall jmp cmp pop xor or jl push dec xchg and jl add mov movsl cmp dec jae jne and enter roll jb jae mov fisub jmp jg repnz std jne pushf (bad) lret jmp divb mov outsb arpl mov xor stc imul subl add out push push test jp lea push push outsb mov xchg call enter rorl mov push add jl into cmp fidiv adc mov ss mov insl or negl (bad) out inc cmp (bad) stos loop xor pop punpcklbw mov add jo lcall stos es mov xchg jg xchg sbb out addr16 inc aad (bad) dec or or and mov cs jno cmp inc stc (bad) mov ljmp stos into push shlb xor mov test cmpsb inc stos maxps dec sbb insb pop mov lods pxor xor cld (bad) loope aas jp xchg imul repnz inc ds pop cmc fcmovnu enter ds fdivrs xor stc mov scas stos sub scas push pushf and or cmp jmp mov in sbb ror cmpsl or ret rcrl in add data16 mov std fsubrp mov stos repz and adc jbe daa push xor lahf insl xchg loop ret out inc push adc mov inc mov xchg xchg pop test subl das out scas cmpsl in and cmp add xchg fcoml push mov (bad) adc jg jmp sub xlat cmp jg jge adc int3 ds dec fbstp dec adc icebp cli sub stos scas nop std adc cld mov mov xchg dec sahf adc lods jl sbb mov fcoms xchg lods clc sbb jp add (bad) and imulb xlat sbb rcrl popa addl push push repz mov mov stos push or mov and cmp adc test push gs popa adc adc sub daa or repnz pop push (bad) mov rcrb (bad) es pop add fwait mov out rolb (bad) jbe in sbb jmp add sub sahf jg jl mov stc icebp push inc pop pop fwait dec movsl fdivrs sbb int push jecxz movsl jg test add add call scas mov imul lahf mov fisubr sub or andb lahf pushf add mov les shl fisubr mov mov xchg out cmpsl aas int3 push adc xchg inc push (bad) fwait push lods fwait (bad) (bad) sarb xor push repnz xchg es sub int icebp out stos jae mov mov stos sub sub test or cli mov mov cmpsb xchg imul or jmp stos (bad) (bad) adc stc (bad) icebp pop mov add cli test dec loope xor inc mov mov mov hlt jg outsb idivl icebp rol inc push sub dec jmp lods jl jp jnp xor movsl cmp movsb pop jns icebp cmp xor inc mov icebp imul mov fidivr mov inc add ds lea or scas pop xchg loopne fsubrl mov pop sub repnz out mov xchg jns cs (bad) and mov dec sbb mov and sub push ret ljmp (bad) out xchg pop fadd jno subb adc add mov (bad) icebp jne in add mov movsl sbb sti test repz ja and dec mov movlhps or xchg push add adc loop ja nop dec and into xchg ret xor out loope cmp fisttpll sbb out int in fbstp std fldenv enter jne fcoml imul add add ret stc inc lcall movl sbb push sbb repnz rorb jmp in xchg mov push aas xchg mov sbb stos xor sub test mov dec fisttpll mov (bad) xchg std dec rcrb cmp int3 inc icebp jno shrl mov cmp lret data16 jecxz dec jmp pushf sti das jno xor adc push (bad) insb adc xchg aas mov (bad) iret scas add xor (bad) ljmp cmp ss jo popf jecxz adc dec mov mov lcall add outsl inc repnz dec shlw jno movsl mov (bad) cmp roll movl imul dec push adc jge xchg cmpb dec inc jo movl add lahf (bad) mov sarb push std jl cltd mov sbb sarb or inc sbb rclb dec jmp jg add mov (bad) ret mov int push std fistp sbbl push mov dec subl test adcl (bad) dec mov movsl das out cwtl fiadd int3 pop xor push or adc mov cmp and adc mov insb enter jo (bad) je insb mov adc and jg push mov lret adc jbe fs das dec add mov sbb movsl out icebp pop ret cmp subl insl mov clc iret push mov and fsubp testb jbe mov fsubrl scas jp ds push inc jge insb jne lods (bad) lahf pop inc xor jb mov loope cmpsl imul call mov cs jecxz mov mov mov lret mov mov sub sbb mov out jmp push adc test cmpsl (bad) fsubs outsl jp shrl in dec dec data16 test test push rep mov push and pop cmp scas in add add orl inc sbb push mov into push loopne mov (bad) fldt and pop pop rorb shll and ljmp int add js faddl sub fs es mul mov push xlat jb lds cli cwtl lock mov je rorl test or std (bad) mov push xchg adc fs sbb or ljmp inc lods mov or mov mov ret jl int mov int3 dec mov jb lret mov out cmp adc lret stos stos in nop (bad) (bad) ret sbb xchg int3 add lahf es adc mov jo outsb pop pop (bad) cmp sbb mov test outsl out imul sub mov pop jnp jg mov dec or mov mov mov and lahf add mov aad cmp xchg call orl push xor jo sahf not xlat cmp pop adc lret pushf (bad) int mov xchg xchg rol repnz divb mov sarl insl dec push sbb dec dec push inc fsubl jp fdivrp mov push cmc push shr xchg sbb idiv xchg dec pop scas fwait int3 lods lcall mov shrl xor cmp adc cmp (bad) jle cmpsb jo popf das add or cwtl inc rcll cs (bad) and test mov andl xor pusha (bad) (bad) repz dec out push aam enter jo push lock mov sub sbb jg jge mov and inc inc insl dec inc ljmp add movsl mov xor cmp pop call mov movsl imul (bad) push or pop xor push push pop ret into mov ds adc stc jne ret xor pop pop shr xor inc xor je loope int mov cld mov repnz les jmp adc mov pop mov add cmp push mov add add sub sbb loop cmp dec and jmp mov clc jno jecxz sbb jne add jg sarl add data16 xor lcall and add jg and repz add lods and jae xchg nop outsb xchg mov sub pop mov or and fucom scas loopne js imul pop out mov cs adc in add push outsb fdivrl (bad) pop fs xchg rol pop jg lcall inc sbbb xlat mov inc mull imul sarl dec push std loop sub pop popf das xchg jle adc add add pop mov push pusha jl lods push inc jp pushf out mov insb cmp xchg addr16 insb int cmp daa pop sub pusha pop adc imul (bad) adc mov insl sbbl sub ja jnp clc or pop out pop mov popl mov (bad) mov xchg mov pusha xchg xchg mov out movsb stc fs jo pop add jp js xor pop sub call outsl or dec out dec data16 jl aaa in xor add add pop leave cmp imul ret adc clc mov (bad) jp mov inc and jp aaa pushf out shrb jg shll or negb inc std xchg out mov xchg jmp push xchg sbb push push ds xor inc (bad) pop mov fisttpl lret movsl ret sbb push popf xchg aam addr16 adc mov jp mov mov repnz stos stc add mov jp adc pop jbe mov mov cmc xchg out das jne sahf xchg inc dec adc dec ss nop jp xchg jle add cmp mov insl adc lds out cmpsl fsubrl jo (bad) push dec lods imul sub adc inc inc jge dec add jnp out fidivl dec push sbb mov cmp push fucomp (bad) xchg test jge imul outsl push jbe in ss xor add in fnsave pop cltd jecxz,pt adc push pop mov call (bad) into xor test mov mov test fadds dec inc jmp imul test mov loopne mov pop int3 inc stc inc (bad) (bad) outsl sbb cli jmp or sub (bad) fisubr jno sti rcrb jnp (bad) cmpsl mov in xchg xchg mov mov jmp mov jae in or jge fbld xchg sti and dec or out rolb mov ljmp pusha push into mov loopne (bad) stc pop and jbe clc pop add stos imul aaa in std rorl fld sub mov push push or negl xor movsb and adcb aad pop dec cmpsb gs std gs cmp insl rorl in aam js or pop icebp push mov push or add sbb xor push mov int3 jae call (bad) sub xor test mov pop xchg repz fwait repz mov inc or icebp stos mov fisttp outsb clc rclb mov enter imul shll mov xchg xor or ss xor out and xchg movb bound xchg or je test (bad) fxch enter outsb in sub mov divb xchg mov inc sbb inc imul dec jnp mov movsl mov and cmp pop cmp jmp sbb imul addr16 push fstpl xchg or pushf lods out mov mov push rorb jo xor jmp sarl rcrl sbb mov enter dec jp xor mov dec push and cli sub das jl int xor int3 (bad) jnp or std stos popf test sbb adc mov jbe fsts cmpsb adc stc call test faddl push adc popf sahf (bad) push add mov faddl add shlb inc test sbb out std (bad) jno gs jo je jmp push add insl mov and xchg jg sahf or fidivr inc ret dec push cwtl icebp jl sarl movsl add pop add stos cmp out call enter dec dec imul sub je iret sahf fbstp data16 ret fisubl sbb mov sbb in pop ss dec inc sub dec sbb mov into xor mov fnop mov cmpsl push mov test mov adc idiv insb add outsl push into fldcw mov mov jmp xchg jle jo xchg cld pop sbb dec add lcall in das lods data16 mov in and repz and adc and adc or xchg insl add inc nop out iret push jae into xchg cmp (bad) jno sub cltd in in pop popf (bad) imul jmp in xor jns push mov sub xchg sbb aam cmp fwait jmp (bad) aad jle (bad) jne mull push lret or mov test fucomi rcrl inc rorb sbb xchg mov aas rcrl (bad) xor push push loopne mov jnp mov mov mov aas push push xchg sbb jnp fwait sbb in int pop jno pop (bad) lret mov pop test mov cmp aaa in movsb divl mov fisubl or xchg and test xchg out pop (bad) jmp sub adc or push inc enter jo mov dec add out sub xchg lcall fidivr inc cli dec jmp jl adc movsl push and cmp mov punpckhwd (bad) faddp push push cmp push xlat (bad) xchg mov (bad) mull out or shl jle std fistp movsb mov sti loopne cltd cli mov sbb outsl loop inc inc dec push xor js leave sbb mov (bad) sub mov pop cmp pop and int3 lret mov out movsb stos sbb mov add aam jbe es dec (bad) cmpsb inc mov lret xchg inc jnp xchg movsl jno (bad) mov imul (bad) pop sub xor mov xchg sub jo stos pop jmp call or pusha shlb mov sbb xor rcrb loope cmc movsl outsb pop (bad) pop arpl cmp push call dec fisub imul adc fisubr imul fstp ds jnp inc (bad) sbb fiadd je adc mov or xor push mov pop pop fs mov daa add jmp fldcw pop ret inc (bad) stos mov push js stc jle dec outsl leave push mov outsl add push loope mov jmp dec outsl leave jno xor sbb or cmpsl xchg ljmp outsl les sbb xchg cwtd inc push mov cmp mov and add and or or mov jnp mov test insb push cs mov mov dec loope xchg mov mov imul push out push lret or push mov jo add (bad) mov (bad) orb out outsb test mov mov negl fildl pop pop cmp mov (bad) jno out shrl xchg shr jns std int cwtl mov in jae lods mov adc icebp shl xchg push xchg lret mov int mov les xlat jo xchg mov fwait daa mov mov mov jno stos notl pop mov out cmp mov les add dec sbb jle pop xchg mov (bad) sub movsl xchg cld (bad) mov adc aam pusha push out aaa cwtl je cmp adc mov mov aam aam int xor loope xchg inc xchg or (bad) push jnp insb push movsl jae dec pop xor mov and dec call push pop aaa imul pop push (bad) mov xlat adc mov loope or push add xchg hlt dec (bad) cmc mov add std pushf fild mov xchg addr16 mov cmp sbb dec pop push sub lods dec aad jp (bad) lret mov or pop jl sbb mov fwait mov ror cltd pop int3 out sahf aaa mov add fldt std cmp inc inc jbe mov cmpsb and das cli mov xchg test or mov adc lahf mov xchg add xor jge pushf addl dec xchg pusha pop test in out cmp sub mov dec jo cli fdivrp (bad) sbb sub pop cmpsl mov stos dec in inc adcb aam ret jnp nop xchg movsl push add dec cmp cld mov out loopne dec pop jae stc jns clc popf (bad) rcll sub stos jl xor call mov roll jne movsb pop je andl cmc jno xor shl inc ret cld nop pop fwait loopne repnz sub fadds sbb andb mov dec shr stc lcall sub jp mov aaa or xchg inc sub cmpsl adc pop xchg roll add data16 sbb mov mov in dec lcall dec rorl stos xor in jg loop call xchg incb mov cmpsb pop push xchg mov pop aas shll add outsl in test lret sbb cld jb mov dec push inc mov icebp sub lods (bad) (bad) loopne lcall addr16 test adc dec sub cmp add aas rcrb sbb xchg adc aas (bad) and faddl or (bad) pop or imul decb push xorl xchg sub fstps pop xchg addr16 mov sbb stos mov sub sub mov dec push cmp (bad) and das in pop xchg das or mull adc lock popl xchg std (bad) js and loopne push pusha sbb adc out jae jnp (bad) xlat xchg jo jbe lcall dec sub pusha outsl mov mov fldl add adc jl xchg movsl pop outsl xor pop pop cmp sarb imul pusha int3 push into insb loope in pop xlat icebp mov cmp icebp jnp pushf dec icebp addr16 aad popa insb (bad) leave mov loop das ret cld xchg repnz aas or xor inc adc leave (bad) mov jp fucomi mov das push pop pop or lea sbb lock mov xchg dec stos repz mov into xchg sub call dec (bad) jo cmpsb imul das outsb mov xchg notb push insl xchg add ret cmp inc or push movl (bad) pushf jo movsl pop jmp scas adc adc loope mov shlb sbb insl aaa jl stos or shll insl xor imul ret test cmp push stos push fcmovu mov inc xor lock ret push sbb ds inc (bad) js jne inc mov (bad) insl mov sahf fcoml mov int gs (bad) mov mov imul loop mov mov in mov fwait xor stc jmp sbb (bad) mov lahf sbb mov xor or xor xchg lock sbb hlt sub push pop rcr dec and xchg mov scas mov divl lcall and iret add mov or std ds outsb adc mov mov adc fnstsw popf inc pop (bad) xchg or out jecxz in hlt (bad) mov fxch in iret add mov mov in dec xchg mov imul (bad) lahf stc enter (bad) idivl jp xlat push adcl sti jns pushf dec cmpb pop psrlq adc sub std fldenv mov lret xchg lock aas jae loopne test scas rorl push lods pop das xchg jp out aad data16 push mov push sbb loop,pt aaa lcall addr16 divl mov out mov iret std adc jbe jg,pt dec xlat insl cmpsb inc lea das sbb add jb dec pop das or sbb adc pop sbb rorb cmp enter notb test jmp mov jo into aaa dec lret pop mov lods dec mov mov insb ss inc add out jl sbb jg mov pop jae in popf ret lods call out mov push or clc das or push lret mov (bad) xlat mov sbb pushf sti test sar fidiv std call mov xchg add sbb push rorl push mov mov jp inc fimull (bad) iret sbb repz cmpsl dec jo xchg mov or stos sbb sub push loop adc pop jbe in dec addr16 cmpsb push clc mov push xchg xchg in adc rorl pop (bad) rol or mov pop (bad) cmp enter cld repz xchg addr16 enter jo popf pushl mulb push jb jg cmc sub inc lret add dec cwtd xor cmpsl lahf out mov jne mov push lahf cmp popa call cmp sub clc (bad) xchg aad sbb and mov dec inc adc sarl in inc leave mov ret je dec push pop lea push jnp xor aaa loope lret repz mov (bad) repnz rorb jne fmul daa jo xor mov hlt mov scas stc xor outsl or xchg sub sub or dec lods xchg and jno leave pop sbb stos mov add mov cmp pop jb mov (bad) es lods or rep negl and or (bad) add cmc jl hlt cld enter cli push sti ja daa leave push (bad) mov leave xchg in fnstsw mov dec add imul cmpsb out leave cmpsb in inc jmp push cwtl pop lret fnstcw ret insl cltd mov xor aas int3 fs xor pushf test lcall jle adc xlat dec mov andl (bad) mull ss mov mov inc out cmpsb dec outsb aas testl mov rep lods sti dec jne xor mov mov jecxz bound jno outsl add cmp mov stos cmp sahf mov (bad) (bad) cmp test imul lret cmpsb mov inc xchg push or sub adc cli decb loopne (bad) (bad) push jbe orl jmp and out (bad) mov enter jo stos fs sub mov sbb or lods loop or mov jl (bad) mov lret test mov call (bad) mov loop int3 jg push mov test xlat loop mov lds in xor out gs rcl inc pop shrb pop std loopne dec mov lds stos mov (bad) les rcrl xchg in lods push mov jp cld cmp js sbb pushf pop xchg xor in int add loope cmp stos or dec repz dec adc stos sti jbe fimul cmpsb adc xor ja imul jg insl (bad) xchg jb ret mov cld lods cmp sub sbb test jnp out cmp mov jo push sbb pop xor test xchg jg mov or test dec xchg jl (bad) jnp int3 push movsl insb into fistpl adc cmp div ret pop imul cmpsl cmp jp ficom or and aas ds jl xlat xchg out jne mov addr16 js rorl (bad) cwtl pop xor rcll mov jae xchg repnz sbb cld (bad) fadd sbb and push insb and repz (bad) outsl pop addr16 sub cmpsl push les ret fldl gs jno push sbb cmpsb jmp cwtl pop mov dec mov (bad) jae push xchg stc fisub xchg test in (bad) xor repz mov and rorb and nop sbb xchg jno loop fisttp push jns into adc adc mov imul sub imul fs fidiv in sahf dec (bad) push jecxz sbb push mov add jl mov (bad) test nop mov push and xchg pop notl je sbbb jns and rcll xchg pop test mov scas rolb inc std and sti mov push std xchg mov pop mov cmpsl cmp cmp fcoms int lods cmp jp mov ja lods es inc xchg add stc int pop jp data16 stos hlt xor mov or daa lds mov imul frstor aaa ljmp xchg (bad) stos adc sbb (bad) push movsb stos xchg xor test ds out out xor push ljmp xchg jo in aad std enter push inc sub in cld mov loope push inc outsl insb xor pop inc jl or jnp nop sub pop sub cmp mov push call (bad) xchg add jmp clc lock push test ret pop xlat pusha cmc dec adc cmp pushf pushf daa sarl shrl sbb std jo cmp sub fdivrl jecxz dec sbb (bad) ffree mov dec push into xor lods mov ret or sbb lea mov in int inc push int3 sub mov popa inc stos mov loope jb adc js jb sbb scas jbe fsin dec push test cmpsb test in xchg enter dec push adc inc pop (bad) pop jno xchg jp pop (bad) iret sbb (bad) mov lods xor gs test leave fucomip jle or (bad) mov (bad) es pop mov pop (bad) icebp jg fwait (bad) mov sbb adc push and mov adc mov negl cltd sarl jle and lret ret mov clc jnp and inc out (bad) int push scas popf mov fldenv dec add ret xchg gs out je (bad) lods pop shlb push xor jl and mov (bad) xor repnz dec orl int3 fdivs mov adc in and hlt ficompl jp ss int3 sub pop dec push lods jp or nop int jne push jno pop jge sub (bad) cmpsl dec adc in sarl cmp add or jo mov adc out or js add dec scas shll pusha add iret cli les outsb push pop nop fsubl push lods cwtl into arpl std incb arpl sbbl adc inc pop out loop in lock mov fnstcw ret xchg mov mov mov push (bad) or lret notl popa cmpsl xlat ljmp gs je lret mov xchg shrb inc std addr16 mov sar xchg ja mov shrb adc andb jmp lods sbb (bad) mov push loope mov xchg ljmp fwait dec cmp int bound int3 adc mov mov sarl gs adc mov dec mov push das dec pop jno js xor mov adc mov (bad) mov fadd mov jecxz enter mov pusha jle mov out mov addr16 jmp xor mov push dec mov mov jo dec inc aas cmc push dec lods imul push push mov call (bad) sbb or cmp bnd fldcw xor xchg jnp fsubr repz jl mov xlat push add clc gs gs mov mov nop (bad) or int3 xchg popa jae aas mov jmp xor rcl push push outsb imul or je push enter cmp xchg lds mov int xchg sbb jmp push mov mov stos adc pop mov loopne scas dec mov sbb jb outsb fidivrl cmpsb push ret das repnz data16 xor or inc adc or movsb call ret pop adc xor lods sbbl test mov enter jo stos pop (bad) jmp or insl or jg xor dec or sbb lret clc arpl jnp loop inc movsl mov pop pop lret cmp ja jnp out ret dec imul insl push fistpll sbb icebp adc mov aas pushf ret movsb imulb dec xchg mov mov lcall arpl xor dec loope scas push pop mov jb push xchg inc dec pop dec je mov pop mov bound add mov in loope int3 push mov aad sub xor or fdivrs fisubrl aaa xchg inc mov mov std mov add and pop in fcomp rcr mov sbb scas ss and cmp std lods or mov xor loop sub inc push loope into gs popf mov jbe,pn xchg cmpsb cwtl fnsave repz mov xor out out out in adc ljmp sarb mov push iret sub jle lods (bad) cmpsl test lcall push sbbb dec xlat jns jbe mov insl gs in out pushf dec add mov test pushf es shlb mov mov cmc std xchg xor ficomp sbb mov add jp jmp mov stos push pop (bad) repz ljmp dec icebp int and int3 mov add test cmp jae into mov mov repnz or cmp mov (bad) dec mov jb xor push pusha adc roll pusha mov or jo pop aaa call in into fsubrs sub push jle xchg or mov out scas inc mov pop dec roll fdivrs mov adc movsl es mov cmp aaa (bad) call stos cmp sbb dec xor push andl xlat mov cwtl push gs data16 pushf mov lea push repz sub mov out xor test jns pop mov (bad) cmc (bad) jle test faddl jns xor and or mov inc sub xchg xchg fisubrl fwait mov bswap add insl int3 mov xchg mov pop outsb stos gs add cmp xchg adc outsl sub addr16 dec add in inc add aas or xor adc jne popl pop xor jl movsl xorl mov mov enter jo mov (bad) ficoml cmpsl sub add adc pusha pop rolb jmp pop jl in lahf jnp jae movsl xlat lcall sbb call lds imul add jns fisub into jnp into test add (bad) mov js xor xchg je es mov int (bad) cmp mov in test repnz cmpsb add xchg int xor inc mov adc mov loopne lret stc add xchg sub push push imul cmp jecxz xchg push dec xchg sbb out cmpsl ret add mov rcll adc cmp cli mov ret sti mov pop and inc lret and mov add ret pop nop adc (bad) dec (bad) into mov xchg sbb dec and xchg test fs out test jns (bad) push addb jo imul aaa mov fsubl adc mov outsb fs dec and fsubr std lcall loopne (bad) cld dec xlat cs pop mov pushf scas dec push mov es rcrb loop mov pushf and (bad) mov xchg shll inc lods cwtl or xor mov push pop jecxz sbb push xchg pop and fwait or iret jge pop int mov out stos xchg outsl add adc xchg adc cmp xchg jns fwait dec outsb cmpsb pop stc add scas jmp xchg or adcl or xchg and lods movb adc xchg std pusha sbb push test cmp out xchg mov enter jo sub cld inc aam (bad) jno sub xor jg jmp xchg or sarb dec lds jl imul movsl arpl or push adc cmp xor (bad) mov ret cmpsl imul (bad) cltd push mov test inc test adc jb arpl adc shrl iret sarb add mov jnp xchg shl imul in push shr cmp or jp dec and gs sbb adc xchg jg test xchg fdivs xchg cmp mov push dec cmp xor dec cmp mov das es cmc xchg les mov cmc adc decl (bad) iret jae xchg mov fld in aaa cmpl fdivrl cwtl div test xchg inc out cmc popa add inc enter jo loopne (bad) std jmp mov xchg icebp cmpsl jg push mov mov into inc ret dec adc jl and jnp jne movsl (bad) mov cmp dec call cltd sarb stc mov clc adc cmpsl push icebp pop xchg faddp decl aam das mov lods iret ret jg add pop jp inc inc dec (bad) jne int je push stos pop sarl cltd ltr xor inc pop loope insb (bad) mov in push repnz dec inc xor stos sbb mov sbb inc stc fldt inc sub push pop mov or fucompp enter or pusha jno sbb sbb xor cmpsl mov mov (bad) cs data16 mov in mov rep mov and data16 add loop arpl outsl and jmp inc into fwait xchg mov or into xchg and cwtl iret cld pop add or cwtl add in jmp adc fldcw jne mov jl (bad) sub mov cmpsb fs int3 push lcall mov popf ret xor adc adc jnp mov mov jbe std cmp out xchg aas iret mov add sbb push xchg lea mov pop jp fdivp mov push push xlat (bad) fistp add xor pop mov int3 cmpsl into mov iret add mov pop sbb xchg cs dec jmp aas fldcw adc cld xchg outsl or jne (bad) push in xchg in xchg or lahf xchg lods sbbl push out sbb enter jo dec ret jmp movsl push movl mov repz inc push dec insl dec and cmpl jnp add call cmp call push iret add clc (bad) (bad) mov dec xchg rcr cmp xlat outsl dec mov gs add or shl adc es push mov push mov aad push aas out jae sbb jecxz rcrl lods jne out sbb data16 in cwtl sub sbb push sbb out sub outsb sub int3 mov add aad stos adc loope cmp adc mov sbb dec fxch jne lcall das in scas xchg stos xchg adc out pop popl add cmp jg pusha adc dec or sub enter jo lahf pushl ret jae sub xor mov push out inc daa add cmc jl (bad) jnp lock pop outsl push cmp call inc aas xor xlat sti clc cmpsl lock push push ret xchg xor hlt mov fldl xor inc sub dec jne xchg je mov gs mov loope jge mov loope lahf bnd xchg dec sbbb fcomps sbb mov outsl in cltd out xor sahf sbb outsl pusha xlat dec sub notl jmp or sbb aas clc sbb sbb rcr notb out data16 ds je in pop fdiv repz sti test and add add jge loop js nop mov add into mov andl outsl adc aad push imul out int3 and dec test push mov lret aaa add (bad) (bad) xor mov mov mov push xor lcall roll ret xchg cmp jo mov mov repz jg mov jnp mov inc lods xchg das je aas xor pop dec ror cmp lods es jp data16 shr sbb data16 test fwait jg pop int pop das int3 repnz stos iret std push mov mov sub loope lcall push xor push leave mov inc push jp dec xor sbb pop push out (bad) cmp mov lods enter inc xor out sbb enter jo or js clc mov hlt pop or xor mov dec inc stos inc lahf mov push jnp fstps movsl jns insl pop lods cmpsl mov call setns mov mov pushf pop test adc jl dec pushf sbb add add mov or dec rorb sahf pop std in jne push inc lds lea mov rcl or lods push mov sbb pusha sub fcomps mov fwait movsb cltd cmp add je fdivrs cwtl mov (bad) mov mov das and jae arpl out sbb jbe mov xchg cmp jecxz fnstsw xchg andl (bad) and loopne movb cmpl popa xor es jg fdivl pop enter jo mov (bad) mov xchg aad jg xor outsb or aas pushl cmp jo inc jnp sbb pop iret insl jb mov cmp imul int push and ficomp xor hlt dec or xchg xchg dec ds xor pop jne lcall popa in psllq call mov imul loop popf sub pop mov out imul das stc cmpl cmc push add (bad) fwait shr jmp fmuls sbb xor mov or roll es ret lods data16 mov stc in daa pop jne (bad) jno and leave std and sti testl xchg call sbb xchg xor pop inc dec pop xchg loope mov pop cmpsb loope imul add icebp xor in mov bound xorl icebp add sub mov (bad) int3 iret mov lahf add imul sub jo das jne cmpb xchg xlat dec adc shlb push mov mov clc mov rcrb cmp mov mov xchg jmp int adc test lret push push lods test jp add dec aas in push mov pop xchg push ficompl add jo push int3 pop stos or mov mov add mov mov dec js xchg add xchg aad or adc mov (bad) mov cmpsb xor cmp (bad) subl add pusha mov push pop sub out in int cmpsb cwtl sbb pop mov mov mov aaa jg add idivl inc sbb aaa dec push call jbe jno xchg movsl pop sbb pop mov xchg call hlt and imul sub ficom adc jecxz cwtl gs lcall stos pop not js call std lret mov jae xchg and aas push mov imul mov lds lahf mov out pushf push loop adc sti gs lods ficomp sbb xchg int3 xor clc mov (bad) imull xor sarb loope outsl adc gs cmc cmp push aaa cmpsb jae xchg mov icebp mov adc pop in (bad) fsub movsb xchg adc or (bad) bound leave and cmp adc sub int3 inc push mov fimull jg mov mov inc cmp lahf mov jnp push mov mov and call fisubr jmp clc nop dec cltd push add sbb xor mov fisttp inc and jne push pop je xor pop mov mov dec adc xor sbb loope icebp xor lret lret mov dec int dec pusha loop fmul add nop mov pop mov hlt and push inc outsl icebp xor sub cs mov or gs jmp pushf or insb stos push cs in add jg (bad) repnz (bad) in sub addr16 and in loop cmpsl repz mov popa mov and sbb add inc xor nop lcall into cmp mov add push fisttpll into insl imul mov in lods mov push mov std cmp fistp xor mov rolb lcall insl subb lea jne out add lock imul std lods adc mov pop clc xchg mov lods out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov add lods out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push scas in icebp sahf out and (bad) mov xchg sarb fidivr cmp pop sub xor dec push and or push lods lods lahf lahf (bad) (bad) jnp repz aaa aas inc out (bad) stc add cs mov (bad) and test and repnz mov int ret popa lock adc push test in pushf bound push bound xchg fldenv stos stos out out insb and or mov jo lcall xor aam sub addr16 add push mov mov out (bad) ds test scas mov aas push test icebp test (bad) jae xchg xchg icebp icebp sbb in add pop fs jl xor adc xor ss dec add data16 dec dec mov push in mov bound mov xchg bound (bad) xor xor cmp idivl jmp sub jo adc imul and jo jae push push push push pop lahf dec bndldx repz cwtl std pop aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and mov inc es std mov mov in int andl icebp test xor movsl xchg mov (bad) gs or out xlat xchg aam jae cld xchg jecxz lcall lret push cmp movsb roll iret mov sub decl fdivrp xor pusha lods int3 daa inc jne sub sub stc cwtl xchg loopne dec outsl or clc xchg dec daa push xor rcll and ja inc stos fistpll jp sub adc lcall imul int3 cmpsl (bad) imulb jns lahf in sbb mov mov mov popf repnz (bad) in sti inc aas pop cs js clc cltd cmc cltd jae xor add jb or subl adc std dec insl js cmp outsl xor xchg fwait jmp ss call call dec and inc andb xor sbb dec sub loope add push js cld popf clc sub adc sbb add fwait loop sbb mov push gs xor adc sub sub jo lcall cmp aam sub addr16 sub xor mov mov mov les jb (bad) cmc in test xchg test jno and sbbl adc xor pop xor xor push je dec mov in in sahf out mov xchg pop jmp jnp jns cmp jmp sub jo adc push and push jle jno push fldcw (bad) fwait repz (bad) push (bad) (bad) stc add pop sub (bad) add test mov or es fimul xchg mov int addl add movsl (bad) mov (bad) aaa pop add cmp enter hlt xchg mov inc sub (bad) test add repz jae hlt aam sub addr16 sub add int sbb mov mov push cmp subb push mov aad lcall icebp jbe mov testl pop xor adc mov add adc out aaa push xchg in mov push (bad) mov xchg icebp popf movsb rcrb sbb cmp jmp sub jo adc push and sbb push lea pop jnp repz cwtl std push aaa addr16 out xchg stc jae pop das cmp inc mov or add adc es repnz mov mov in int orl cmp push leave movsl lahf mov lds pop cmp les lret stos lcall lret cs mov movsl roll iret mov gs mov ret nop (bad) (bad) lock int3 and or loopne dec jns push cmp mov xchg add inc daa push xor dec sbb inc (bad) fildll popa push push nop fdivl les or aaa push scas in or mov mov inc (bad) out repnz pop xchg in sti pop aas pop lods fnstcw std cltd mov dec xacquire jb or subl adc dec cwtl std add sbb jae fcoms and aaa pop jecxz add call inc and inc aam call xor js js dec sub es js cld fdivr cs jnp add lahf cli or fwait hlt xchg dec cmp data16 pusha jg sub cltd ljmp mov ret sub sub addr16 sub jl daa dec sarb mov out cmp fldt cmp fcomi cmpsl test xchg nop icebp jne test out orl fs jl xor push xor add push je dec test jne mov out stc mov push (bad) mov xchg pop hlt popf mov jns cmp jmp sub jo adc push and push jle jno push enter jl adc repz sar sub add (bad) mov outsl add jg ss mov push and orb (bad) bnd mov ljmp sbb pop aaa push leave movsl (bad) pop pop or pop cmp shll fisubr pop sub mov (bad) add lcall sub sub addr16 sub cmp int dec insl lret mov and cmp lret test scas mov cmp test xchg popf icebp aaa sbb in cmpl fs adc xor xor add mov cmp sahf std mov xlat mov xchg cld popf mov jns cmp (bad) or jmp sub jo adc push and inc jle jno push shrl jnp repz mov push aaa aas inc sti (bad) fyl2xp1 popa add jg xor (bad) inc and addb (bad) repnz fdivrl mov popa loope ja aas pop cmp movsl xchg mov (bad) jns pop bound add add jae notb dec and mov lret sub cmp ss or mov cmp test movsb fdivr (bad) lock int3 and or inc std cwtl mov ds sub mov xchg pop daa pop xor dec push ja inc mov push push nop nop mov aad imul out cmpsl nop imulb or push sahf in sbb (bad) mov mov repnz nop in sti push aas or pushf fnstenv ljmp dec hlt xchg adc or xorl addr16 cmc cmp std sbb sbb xor mov test push xor push cmp add (bad) add or mov inc xor sbb dec sub or sar lret inc push adc cmp bound fwait mov dec cmp xor sbb sub ljmp mov inc arpl aam sub addr16 sub xor mov mov lret out cmp fsubrl aaa push cwtl cmc loopne mov xchg (bad) icebp dec sbb imul jl xor adc xor xor push je dec mov xor cwtl in sti sahf in xor xchg pop mov jnp jns cmp jmp sub jo adc push and aaa jle jno push lea sbb repz nop std push aaa sub (bad) xlat stc xor or inc mov add bound es out mov mov test in adcl cmp push test mov bound mov (bad) xchg enter hlt xchg mov dec sub mov enter jmp arpl aam sub addr16 sub jle sbb mov loop mov fsubrl aaa push fwait cmc icebp test roll sti xchg test jno vpxor or inc xor pop xor add and scas (bad) cmp in mov push ret xchg rcrb jnp jns cmp negl mov jo adc push and pop jle jno push enter sti lahf das (bad) jnp repz inc sti (bad) fyl2xp1 bound dec das ss sub (bad) add in xchg and es repnz mov mov xchg int adcl testb shll cmc pushf jbe add cmp leave mov mov jmp movsl lret cmp into pop cmp ss or mov insb or mov ret cwtl (bad) (bad) lock int3 es insl push imul nop loopne dec jle sbb fbstp inc xor adc xor fistpll jp es jp stc nop fbstp fsubrs data16 push lahf in or mov mov repnz in sti pop aas dec cs cltd mov pop pop cmp xchg or or cmpl jb xchg cmc and std dec insl outsb sbb sub xchg fwait jmp sub lea mov sbb out (bad) pop and (bad) mov pop xor outsl sbb dec sub sub cld lcall and add fwait in dec cmp xor or sub sub mov cltd fcoms arpl aam sub addr16 sub cmp mov out clc lods mov push cmp lds sub cmc testb xchg xchg icebp imul in sbbl xor push xor leave sub add adc (bad) xor sahf in in sahf call mov xchg hlt popf mov jns cmp jmp sub jo adc push and or jno push les adc adc inc scas (bad) nop stc outsb add das jge add (bad) dec and add xor es repnz mov mov mov popa lret sbb movsl (bad) mov (bad) jbe add cmp (bad) mov iret stos sub and sub jo lcall jno hlt aam sub addr16 sub xor xchg mov xchg shrb les jb xlat cmc (bad) test xchg xchg icebp insl sbb in addl add pop jl xor pop xor add add mov xor in sti sahf out and cwtl mov xchg in mov jns cmp jmp sub ss push and push jle jno push int3 lods jmp pusha wbinvd jnp repz xchg std pop aaa es cld (bad) add xor inc mov dec and add xor es repnz mov mov mov popa scas test xor and movsl (bad) aaa pop or cmp into mov mov test mov dec out into dec cmp mov mov outsl or movsb xchg incb int3 sub or test jg pop cmp mov xchg dec daa push xor dec add inc (bad) fistpll addr16 jl jnp mov xlat mov aad imul ret imulb jb ret in inc push xor bnd (bad) in sti dec aas dec lods fnstcw hlt cltd cld cltd jno cmp adc jb or xorl jle xchg cmc cmp std add push or pop mov lods jmp sbb lea mov pop js (bad) cmp add enter xor jp adc shl add push js cld mov cs jp dec and cli sbb add fwait hlt xchg push cmp pushl gs xor adc sub lret ljmp pop arpl aam sub addr16 sub jb inc dec jmp add mov xchg out cmp lds and cmc stos test rcrl (bad) xchg lahf icebp js xchg in orl adc ja push xor add sbb (bad) jne sub sahf test mov xchg pop hlt popf mov jns cmp jmp sub jo adc push and sub jno push iret lods repz push pop jnp repz (bad) push aaa and (bad) fyl2xp1 je inc das cmp inc cmpsb (bad) push and addb xor sarb in orl test xor and movsl (bad) aaa pop pop bound mov sti xchg les mov or dec sub ljmp scas ljmp pop arpl aam sub addr16 sub aaa pop and mov loopne ret lods xchg out cmp (bad) test scas (bad) fidivr test xchg (bad) icebp imul or insb add push xor adc mov add adc mov in mov push xlat mov xchg rorb jnp jns cmp jmp sub pusha adc push and adc jno push fildll (bad) (bad) repz xchg std push aaa xor stc imul push and adcb xchg repnz mov mov int adcl aas pop cmp movsl xchg mov (bad) fs inc bound sub xchg int3 mov leave stos xchg dec and mov dec mov push cmp ss rcll leave mov jge test movsb stos (bad) sahf lock int3 sub sub xor shl dec jge pop cmp mov xchg inc daa pop xor dec push ja inc mov outsb or push imul push call aad imul xchg jnp (bad) in or mov inc and xchg in sti push aas push cs cltd cld cltd insb pop imul jb or cmpl xor nop cmc aaa dec sahf std or sbb aas pop mov xor xor lea sub inc and enter xor sbb adc xchg loope add sbb clc addr16 bound sbb fwait (bad) xchg sbb xchg incl and push jg sub lret ljmp packsswb aam sub imul jl and mov xchg ret lods xchg out cmp fldt es nop cmc call jae xchg fcomip add lods in sbbl fs adc mov add sbb (bad) xor in mov push (bad) mov xchg pop mov cli sarb jnp jns cmp jmp sub xor or and or sbb push iret lods repz push pop jnp repz (bad) inc aaa xor ljmp add sub inc mov push and orb repnz mov mov cld int andl jp and mov (bad) jp pop bound fwait out mov leave mov mov or inc sub jo lcall jge not jns or sub jle outsb dec int sbb mov mov pop cmp fsubrl jo mov rcrl jae xchg (bad) icebp cmp xchg in orl adc jle inc xor leave cmp add push je dec test in lcall fidiv cli popf lock cmp negl cwtl jmp sub jo adc push and or jno push (bad) lods fstps (bad) repz mov inc aaa es sti (bad) pushf stc insl add xor inc not dec and add and es repnz ret mov mov popa in outsb sbb pop xor movsl cltd mov lds bound fwait out mov andl inc and mov dec out into dec cmp ss or jbe mov or mov (bad) cwtl lock int3 and sub add xchg loopne dec sub mov xchg push daa push xor add inc xchg fildll or jle ja in (bad) mov aad imul mov js cltd in add mov mov repnz pop xchg in sti pop aas pop lods fnstcw in cltd cld cltd jb sub jmp jb or xorl xor xor dec xchg std add jns jno or pop cli xchg test adc ds xor lea mov sbb and out cmpsl enter xor sbb jl mov push dec es clc sub adc inc jne add fwait (bad) xchg dec cmp incl inc xor or sub (bad) test add mov arpl aam sub addr16 sub aas pop es xlat mov loopne mov fsubrl and cmc in cmpsl rcll jae xchg xchg icebp ja xchg in subl fs adc xor leave ds jno xor je dec add mov in mov push ret xchg repz mov jns cmp jmp sub jo adc push and adc jno push fldcw or repz scas std inc aaa cs sti (bad) lcall pop xor and addb pushf repnz mov mov in addl ss xor movsl ret mov lds pop cmp int3 mov fisubr inc sub ljmp clc fmuls arpl aam sub addr16 sub jle sbb insl (bad) mov (bad) out cmp fsubrl aaa push cwtl cmc loopne mov xchg mov in sbbl adc adc xor add push je dec cmpsl (bad) es int3 in cld sahf in mov xchg in mov push jnp jns cmp jmp sub push adc push and or jno push les pop jnp repz sti (bad) xchg stc and pop das sub (bad) inc and adcb xchg out mov mov mov popa testb shlb fistp cmp andl add in mov dec mov cmpsb roll mov pusha or mov incb int3 xor jle sub loopne dec dec or stc xchg dec daa inc xor rcrl cs sbb es (bad) fistpll jp addr16 push stc nop (bad) mov aad imul aad lahf imulb je sub scas mov inc mov xchg aaa pop (bad) in sti pop aas dec lods fnstenv clc cltd jmp aas pop aas dec out pusha adc jb or xorl cmp dec pushf std or sbb cmp jmp sub lea enter in (bad) push and andb xor sbb dec sub es js cld nop clc cs adc xchg cli adc add fwait (bad) xchg dec cmp xor adc sub ljmp lods fcoms arpl aam sub addr16 sub add inc and jl das dec sahf mov test leave lods mov sbb push ds test scas cmpsl fisub test xchg icebp icebp daa sbb in orl pop jl xor adc xor add sbb test and in negl (bad) out popf mov jns cmp idivl jge jmp sub jo adc push and pop jle jno push fildll cmp repz cwtl std adc (bad) (bad) stc popa add cmp inc mov dec and or imul mov mov int adcl aas pop cmp movsl les bound adc cmp shlb stos (bad) out add or jl (bad) ljmp clc fmuls arpl aam sub addr16 sub push pop das dec fidivrl loopne lret out cmp leave test scas mov cmc (bad) test xchg xchg icebp insl sbb in sbbl xor pop xor add sbb test in lcall fbstp mov jnp jns cmp jmp sub jo adc push and or jno push fldcw push jnp repz xchg std pop aaa sub (bad) fyl2xp1 insl add xor and (bad) inc and orb fwait repnz fnstsw lods int orl in js ss xor movsl xchg mov (bad) arpl or out stc xchg iret mov lret stos sub and mov lret pop dec mov ss sub mov push decl xchg xor pusha in int3 xor js sub loopne dec push mov xchg dec daa pop xor dec adc inc mov or push addr16 ds mov in mov stos test bound mov sbb (bad) mov mov bnd xchg in sti push aas inc cs jl (bad) cltd jmp dec movsl xchg adc cs xorl arpl xor dec insl jl aas push or pop mov lcall pop stc lea cwtl call add popa inc in movsb enter xor add ja jg add enter push add cld popf clc xor xor cli add add fwait repz pop cmp xor movq dec sub jo lcall jge adc or add pop and mov in rorb fsubrl jb xchg cmc jmp mov push jae xchg (bad) icebp jno mov repz xor inc xor add pop je dec movsb (bad) aas push mov std sahf std mov les clc popf mov jns cmp jmp sub push and pop jle jno push (bad) lods enter (bad) fwait repz (bad) inc aaa xor (bad) (bad) stc add cmp inc mov subb xchg jmp fidivr lcall test sbb and mov (bad) jp pop bound fwait out in andl dec and pop sub ljmp mov adc cmpsb ret cmp aam sub addr16 sub cmp mov lods rcr xchg out cmp ds scas (bad) fidivr test xchg xchg icebp cmp (bad) in orl fs jl xor adc dec insl add push je dec mov and in in sahf std mov xchg pop (bad) popf movsb rclb jnp jns cmp (bad) or jmp sub jo adc push and pop jle jno push (bad) lods cli lahf insb (bad) (bad) (bad) repz pushf std inc aaa addr16 jmp add cmp inc clc (bad) sbb (bad) addb xchg repnz mov mov lods int adcl loope jnp sub push test out pushf jb inc bound xchg notl cld xchg les test mov dec test dec cmp mov mov sub out mov (bad) xchg lock int3 xor or inc mov shl sbb or cli xchg pop daa push xor dec push ja inc mov push es jo call or stos xchg jg cltd in add mov mov inc popf out repnz (bad) in sti push aas push add lods fnstenv lock ljmp xchg jb or xor imul jge aad cs (bad) std pop insl jl sub outsl sub jmp cmp loope fs call dec and into mov adc jp jle xor pop sub es js cld xchg clc addr16 popa adc push jne add fwait lock push cmp xor cmp dec sub lret ljmp adc ret cmp aam sub addr16 sub jl das dec sahf mov scas rcr xchg out cmp fsubrl adc cmc jmp repz icebp cmp xchg in orl xor push xor leave sub and pushw je dec stos (bad) xor in sti sahf sti mov fbstp hlt popf mov push jnp jns cmp (bad) or jmp sub jo adc push and or jno push ret lods mov pswapd repz adc decl pop das jg and and adcb xchg std mov mov int addl test sub push lret movsl aam mov pop or push cmp aad push stos (bad) out push and inc sub jo lcall xor mov cvtps2pi insl add pop cmp insl (bad) mov lahf out cmp fisubrl js mov in mov xchg sahf icebp insl sbb in addl fs adc mov sub add add mov cmp (bad) in cld sahf in xor xchg pop jmp jnp jns cmp dec sub xor push and or add push into lods jmp das (bad) jnp repz aaa sub (bad) mov jae dec das jg xor (bad) dec and add xor es mov mov test icebp orl test sbb pop cmp movsl in mov cmc pushf arpl add cmp shlb fisubr in mov mov ss mov fs mov (bad) cltd lock pusha stos int3 fs cmp pop or inc icebp cwtl add xchg loopne dec gs in push daa push xor dec adc inc stos fbld push dec push out (bad) ret stos test bound mov sbb (bad) mov mov bnd (bad) in sti pop aas inc cs push cltd jno cs cmpsl xchg adc jb or orl adc dec (bad) dec insl jb and outsl jns (bad) xchg mov inc xor push jl lods lea pushf call inc and lds push xor cmp push adc loope add push js cld popf clc add je push and add fwait in pop cmp xor or sub sub ljmp or jecxz xor aam sub addr16 sub cmp pushf mov lods ror test dec cmp (bad) test scas (bad) fidiv cmpsb cmc repnz xchg cltd icebp cmp vpslld adc pop xor pop xor add pop je dec mov and in fcomps fidivl mov jnp jns cmp dec sub jno dec push and sbb push ret lahf and or repz pushf std pop aaa and (bad) pushf stc jb add imul mov orb (bad) repnz mov mov scas int addl jb and shlb pushf popa pop pop bound iret out lock into mov jmp fwait out push and popa sub jo lcall xor aam sub addr16 sub jne pusha dec mov mov out cmp ds scas scas (bad) push push cmc cmc test cld xchg nop icebp jnp mov in dec imul jl xor inc xor add sbb call in lock call mov xchg jmp jnp jns cmp jmp sub jo adc push and pop jle jno push lea pop jnp repz adc std fs xor (bad) nop stc outsb add jg sub (bad) push and orb (bad) repnz mov mov movsb int addl movsb test das pop cmp movsl add (bad) mov lds bound sub xchg andl inc and mov dec mov ss add fnstcw sub in mov test pusha mov push and or xchg loopne dec fs mov push daa push xor dec push ja inc mov jns cs gs jbe icebp nop (bad) mov aad imul ret imulb or mov sbb (bad) mov mov mov xchg repnz in sti dec aas dec cs sbb cltd cltd cltd cltd pop pop dec dec xchg or jns pop fcomp adc cmc cmc dec dec cld std insb insl or outsl pop pop mov xor pop pop lea push and mov xor sbb sbb adc sub icebp icebp adc daa es aam clc clc inc inc adc sti inc jne add fwait ret cmp xor xor sub mov jo lcall mov aam sub sub pop pop dec dec mov mov out cmp ds scas scas (bad) push push cmc cmc test push sbb imul adc lods leave add imul je dec mov push fsubr cmpsb sahf mov mov xchg pop lods popf rcl push jnp jns cmp jmp sub jno sbb and push jle jno push ret lahf (bad) (bad) jnp repz cld std jno cs jecxz pushf stc push add sub (bad) dec and and inc inc adc mov mov int addl test sbb or movsl mov xchg repz jp adc cmp lds fsubrs pop sub sub jo lcall sub aam sub addr16 sub sub cmp mov in rorb ds test scas (bad) fisub cmc cmc test xchg xchg cmpsl icebp js xchg in addl fs adc leave dec dec and and cmpsl (bad) cmp in repnz call mov xchg pop popf popf rcl jb leave jge cmp testl adc dec add dec add int adc xor enter and sbb mov push sub mov mov xor sub (bad) xchg iret sarb mov xchg in icebp div adc lock jl jp cmp lret les sub push mov push ret lea mov mov push ret ss push loope push add into add (bad) repz add stos loop test adc jp js xor cmp sbb nop nop mov pop pop or push cmp adc push cmp popa push cld xchg fidiv mov aam cwtl jle jge lahf iret dec sbb and xchg cmp sbb dec test jle in cld std fsubl sub out jge ds jp out mov cld cld xor leave fidivrl push imul xor lock jle lods cmp or jg stos sub mov insb push jne jl es and inc inc or and sub sub fcmovu push dec pusha popa jmp push pop push mov push xor or or lret add push mov cmpsb xor mov push pop dec sbb outsl jl sahf rorb (bad) lahf loop (bad) mov pop dec xchg mov mov and mov call sar lahf test mov push pop or add and insl imul jbe in in and cli cli aas and (bad) in xor or inc pop adc xlat xchg pop xchg inc jnp cmovnp sbb lea bound into cld stc imul mov test pushf outsb je pop es dec dec div add mov daa dec inc xchg pushf cli iret leave leave fcom xlat fnstenv mov aas cmp ror into sti enter jbe adc lea pop pop xchg xchg stos stos out out and mov xchg jb mov nop pop push sub (bad) xchg outsb jl xchg sbb bound js je (bad) mov push rol pop push gs loope xchg add out fadd sbb dec mov popl jmp add add cmp sub push adc lds lret push xchg push fdivrs add and pop in cmp nop std sahf sar add (bad) lea cltd mov test hlt (bad) push adc imul push sarb or stos jecxz sub or addr16 pop xchg loopne cmpsb inc push push clc or push inc sub lahf push loop and or bound into jle adc mov jl das test add (bad) mov leave ret ficom daa fistpll pop setp push jge jmp bound adc jo repz orl sbb inc (bad) mov daa xor (bad) lahf fnstenv mov out xor pop hlt insl loopne mov adc (bad) mov push repnz push cmp pop adc inc insb cmpb inc insl mov dec adc mov aas stos mov xor sub out (bad) xor mov add jno jnp add adc inc sbb stos pop jb sbb out add rolb or inc stos int pop fidivr jp scas sbb roll enter or scas adc sbb sbb loop cvtpi2ps (bad) aaa lret inc mov test mov pop cmp sbb jmp inc popa push inc sbb sahf fstps lret push xor mov or insb xchg mov insb sbb mov mov add stos xlat stos sub out push enter jns fwait lods dec int insb fadds aas out outsb testb aas push or add cmpsb add mov add (bad) mov insl xor ss mov fidiv sbb adc in loop (bad) rorl ret or cwtl xchg ja mov sbb sub dec or (bad) (bad) xchg aad mov mov iret xchg push movsb pop enter and mov int outsl sub repnz imul arpl aam or (bad) cs add fildll cld fmuls mov dec in mov inc adc aaa mov and dec and mov insb negb lds rcl add push push sbb rcrl rorl pop mov pusha aas mov ror or fs mov in js jne push aam lcall mov inc enter dec adc or (bad) repnz or xor jl pop cmp jbe loope mov add mov outsb ret lret les rol int js xor aad mov ljmp call fild push arpl mov hlt sti pop push loope cwtl jmp mov sbb pop push ss das test rorl mov sbb xor repnz ja pushf cltd pop cmp jno ret pop movsb mulb dec and outsl rolb mov and (bad) sbb pop push popf scas out push cwtl repz push movsl cmp int3 mov shll mov mov ja jne sbb popa ret mov and cmpsl je xchg aam adcl mov pop mov cmc movsl pop dec and int3 scas ficom lods or cmpsb shll out mov mov stos iret fcomps movsb shll loope jae pushf (bad) mov or lcall jg stos in out inc outsb add scas hlt in mov xor inc test or or (bad) bound pop or pusha push out xor push inc adc insb test test jns xchg (bad) jbe andps icebp outsb adc shrb ljmp sbb addr16 clc jbe pop sbb fistl or mov dec insb lods fcomps imul mov sbb dec cmp not mov inc sbb sub or (bad) add mov lret int cmp cmp lret repz jle push add shrb repnz scas scas shr icebp movsb jbe and stc mov mulb (bad) jp push (bad) jmp add mov loopne inc fsubrl pop push ret adc push jg inc lret sub daa jmp cwtl mov loopne push ss rorb andl (bad) popa mov cltd pop fdivrs ds ret lods adc (bad) (bad) mov into in dec pop dec sbb sub ret test fs and cmpsl jns scas jnp jae popa add lea je fisttpll push sahf daa lahf in inc stos lret dec ds int3 sbb jecxz lret xchg mov jae rcll test lods fs adc enter cld fimul cwtl (bad) call in roll inc addr16 ffreep xchg insb std jns add fwait out xchg loopne in xor push cwtl test roll add lret jmp xchg sub jle sti or sbb movsb inc jns fwait loop jp jmp adc push lods (bad) hlt mov (bad) movsb dec mov sahf mov pop lea adc mov xchg js imul cmp sti enter sub mov imul add and or lods daa mov jle pop mov dec and nop movl pop arpl mov mov mov adc dec out jge gs cmc insb dec sbb data16 stc and inc test fwait test mov (bad) pop inc mov xchg push xor and pop jmp jo movsl xchg jbe shl adcl pusha inc add mov sub lods xor push popa enter mov push inc jg jle push test js ljmp hlt ror fnstcw fs sti jns mov rcr jns,pt fisub aam dec aaa sbb es inc add sarl cld cmp test xchg mov jae (bad) push push add dec cltd js sbb sahf sub lahf fldt mov daa pop (bad) jmp pop mov xor pop movsb fwait das jg and jnp jne in cltd inc mov mulb xor dec insb fistpll or movsb adc out pushf xchg or repnz mov out aaa mov inc mov sti aam (bad) call xrelease adc xor roll dec adc mov lahf xor inc mov fistpl fs dec inc scas cmp mov inc js push lret popf jge insb jnp mov pop jns pop loopne xchg ljmp xchg scas outsb push add push int cmc ret xchg fwait cmp adc out and cmp xor pusha and dec cmp add pop jp,pn int cmp test jo mov jno sub mov add int3 in add push mov (bad) push pop es or jp loopne negb shrb sbbl daa jnp rorb sub stc mov out outsl in jae xchg cmp sub inc inc xchg sub adc push loop sub enter inc mov fildll push rcl or xor fnsave fmull in mov popf aam pop mov std pop xchg xlat aad cmp mov fsts push sbb jp sbb xor jns push add ljmp cltd pop (bad) pop mov aad test mov out xchg mov cmp out sbb ds sbb adc out bound mov call sbb leave xchg insb popl pop xchg jecxz dec enter add mov jne push jnp lcall scas stos sbb test popa shrb cmp aas mov mov repnz pushf sahf cmpl mov lcall loop and mov (bad) movsl sbb addr16 pop test or (bad) cwtl jge sub test add pop sbb push inc mov or mov sbb lods jge lret sti push mov inc orb les les (bad) push outsb sahf jge jns mov lock jl xor aas inc mov ret xor mov in mov stc (bad) repz and aam repnz les pop mov or scas (bad) cmc hlt stos dec lret push pop nop mov xor or add mov in lods pop scas xor gs push ja lods lret adc (bad) bound ret mov aad xchg fcoml sub repz mov jecxz int3 mov ret sbb adc xchg add mov cmc data16 pop pop pushf (bad) repz (bad) sbb or xchg (bad) fistl adc into adc pop mov fisttpll je loopne out jo and loopne (bad) sub or test push jmp cmc mov imul adc sbb pop inc cltd cli mov add dec xchg xchg push mov movsb lock out xchg js sub sub mov loop add aam iret (bad) sub je loopne rolb cmp mov fs jl es cmp clc add loop mov (bad) pop fwait sub adc or inc jmp pop aas inc ret jmp leave xor xor enter mov inc mov sbb xchg int ss mov dec pop jge mov gs stos mov lods cld ljmp mov fsub in out les dec jg mov add popa stos jl adc fstl and imul adcl mov ds mov cs out (bad) sub pushl adcl pop jbe xor in or adc stos dec or pop negl (bad) daa xor rcrl lea mov cmp jo xor fsub daa cmpsb mov dec popa ja or sub ret mov pop sbb push push sbb cld fnop incb mov adc add mov push sahf adc and repnz addr16 mov jmp mov repnz int ret xchg arpl addr16 bound fwait aam cmpsb xlat sbb jbe inc and inc jg or fdivp sbb mov mov jbe cwtl or xchg (bad) mov shlb pop daa cmp lret (bad) cli bound test shll or dec movsb rcr imul xchg sub (bad) xor jle push js cmp test mov test sbb sahf xchg (bad) fadds icebp icebp mov push cltd push lcall xchg sub mov ret leave inc fild xchg sub cltd in ret mov inc ficomp nop pop shll in push inc xchg xor and adc insl push sub es inc add rorl ds mov imul adc jae rolb (bad) lret iret fwait adc and pop jmp dec stos rol dec js add sbb fwait mov cmp arpl icebp sbb stc loopne jbe sbb mov sbb mov addb sti dec or push mov into std sub out movsb fdivp stos lcall xchg mov (bad) push add rcrl repnz push (bad) imul imul xchg mov jmp (bad) sarb es push out add adc cwtl xor fadd movsl xchg fcoml int push fldcw xchg pop stos xor psubd imul lcall (bad) jo mov push jl test mov fdivs (bad) lods jecxz cmpsb inc aam add dec (bad) adc fldcw mov testb loop sbb xlat stos cmpsb addr16 and lahf adc rcr sub mov xor lret ret pop int3 cltd arpl cwtl ja mov outsl sbb (bad) fisttp xchg mov dec mov push fsubl mov ja push mov movsl and mov sbb loope mov pusha aad nop or sbb jne push daa pop loop add xchg sbb loopne xchg in and or stos add lea outsb stc ret mov xor into push lock dec sbb inc adc lcall jnp mov mov lcall ss mov push or pop add push pop dec adc dec outsl jp daa mov jns in in lret int3 stos mov mov and sub mov sub mov out out push aad sahf dec loopne xchg sarl call push dec outsl or pop sub nop pop mov cmc (bad) sub stos adc push inc aam cli adc gs or xchg jbe or jp jb pop and movsb jns jns adc jo and jnp push xchg (bad) jne push nop jmp mov sbb aam bnd mov (bad) jle push pop add mov fwait mov mov sub cwtl adc sub mull add sub cmpps inc add dec push daa lahf sub rcr sbb ljmp aaa fnstcw adc das inc cmp mov inc dec pop jp adc in cmp or push subb mov inc inc dec or mov push pop cmpsl popa das lcall call je inc add add mov and jle pop cmp and pop pop fldcw add mov mov or dec dec das xchg xchg cmp pop add sub loopne jecxz lret pop popf insl dec cmc cmp cmp push cmp pop xchg inc sbb pusha mov jne aam add mov and sti sahf cs xchg gs sub lds es push arpl les hlt aam xchg (bad) lods notl test push (bad) daa les pop icebp outsb test xlat loop fdivrs xchg add and (bad) imul leave (bad) stc sbb add shr xor das fs cmc jmp stos clc ja or xor xchg dec mov cli rcl mov add adc inc inc rolb lahf pop sbb out fiaddl or sub (bad) add repnz loope loope mov mov daa int3 jbe and movsb sub sbb cmp (bad) sub pop lahf lret cmp and (bad) sub outsl (bad) hlt pop clc jp inc mov xchg jns inc call push lea push mov adc clc dec test aaa push (bad) xor lock mov stc popa mov adc cli sbb mov (bad) push insl dec sub es (bad) iret sbb repz aaa push sbb into jbe dec cmp lret jmp xchg dec cmp push imul add aad fldcw cmp mov (bad) dec repz and xchg stc push loop rcrb into push sbb jl ret or nop pop jge inc adc mov int shrb xchg xchg or int3 ds stc cmpsb arpl push jge sbb in out push cmpsb cld dec pusha mov mov mov push or stos cmp ret fnop cmp xor enter add xor std sbb pop adc out cmp mov shll or faddl pop push setl call call lret inc jb mov test lcall popl inc notb pop jb cltd popf xor inc mov push mov sbb (bad) scas lods out into (bad) cmc or aaa xchg aaa out jg sub test mov (bad) sub mov xor insl je xchg jg test rcll jo loope in ljmp bound (bad) arpl (bad) jecxz or test or out or and jne xchg or std lock fimul jb pop (bad) sbb popf data16 aad mov test mov in int movsl mov xchg cmp orl xchg jmp xor and stc mov push inc cmp lret inc xor jnp subb jae cmc cmpsl mov xchg repz testl lret pop movsl or sub iret out mov repnz aas ret mov das inc pop imul in orb xor mov adc jbe inc cmp inc les pop xor inc fidivrl out clc mov add push mov push mov push jecxz lods inc pop jmp cmp leave mov (bad) xchg xor push imul movl mov dec out lahf pusha call mov jmp (bad) mov lahf jns stos out xor stc cmpsl les ja pushf or mov push aas pop call xchg gs dec sub mov aaa inc (bad) cmp scas push (bad) fsubrs inc lds xchg shll lods fiadd lods and imul push pop mov sbbl je adc leave push sub dec leave ss fbld lea xchg add loope leave fldl xchg insb cmp iret dec in adc lcall pop and and and pop cli pop push dec push pop pop movsl mov lcall sub repnz and pop dec add aas and movsl cltd mov sbb or inc lods sub inc inc rcr aas rorb mov aad bound fs lods pop loopne fucomi or bound push or sub xchg pop fs jmp jg jg aad test fisttpll out sbbl stos pop mov cs pop data16 insb test cmp mov sbb jbe cmp jae loope cltd push sbb lret jmp loope inc out cli xlat lds ljmp mov stos std xor dec iret aad push lds fwait dec xchg je inc enter push lods adc jmp dec mov outsb (bad) aas out and aam jmp push pop push jmp lock cltd xorl cld pop rcrb pop jns jbe mov lcall jle sahf cmpsl cmpsb into jae xorl xor push (bad) cwtl gs bound adc xor ret sub xchg scas js shll mov (bad) add ja inc scas arpl lea add pushf pop ficoml imul jbe sahf cmp das xchg lahf in xchg out into mov push ret jl inc ds arpl jg push cmp jo aam pushf and pop lret mov xor ja push xchg cmp add push jno xchg in jo cltd scas ljmp sbb scas dec data16 adc push adc sahf stos sbb and rclb sub pop in adcl stos cli dec push pop fistp dec and xchg jne outsl jge repz fmuls stos outsb mov call and (bad) xor daa les jns cli sub cmp inc pop pop jbe jmp and js push (bad) mov popa loop inc ljmp or cmp lds movsb fwait inc out or into adc sub lods xor test lret jecxz push (bad) icebp xchg (bad) and jmp fadds jbe cld (bad) call mov mov mov inc cwtl fildll fidivl lret jae les jp sbb int3 dec test int or movsl imul scas xlat jb xchg andl das or inc xchg aas incb add popa jge loopne cmp mov mov les enter dec cmpsl imul fnstsw xchg test in ja cmpsl and sbb xchg and (bad) into scas dec sub loope test icebp in insl outsb inc movsl fwait mov sub push mov shr pop fdivrs test ljmp inc dec out ficom pop ss mov cltd dec xchg mov je fwait andb clc and pop push cs mov js mov pop xchg inc repz lock push push sbb cld loope lret jbe add out jl popf cwtl mov jmp cmp xchg insb inc test enter cmc mov xchg jp and inc xlat popa inc lods cmpsb lods fmuls or or (bad) int mov ja ret xchg pusha add xchg push mov mov testb xlat (bad) cld xchg flds imulb enter sbb jge fcmovbe aaa cmpsl insl mov rcll mov xchg incb xlat cltd pop mov cli fldcw lcall ss daa stos add cmpsl iret ds pop sub pop movsb dec adc dec insl xchg movsb leave pop or daa fcomi stos cmp inc add sbb loop cmc mov add notl mov pop aas jecxz cwtl and inc lods dec sbb fcoms (bad) stc pop xchg sub dec add jl out outsb xchg add mov or cmp or dec sub sbb mov mov out in jb rol mov mov repnz (bad) sub add fcoms arpl sbb xor push aam mov or into pop fnsave pop add inc xchg das and pushf psubw (bad) imul jns lret cmp jecxz add aaa push pop adcb sbb mov push sub fldl mov orb mov add sub fwait mov leave dec and js cwtl rclb (bad) es sbb add or cmpsb fisubrl movsb sbb in push les and insb adc or and pushf push fimull lret rol pop ret cmp and rcrb xchg add push jp pop sarb push push cmpsb xlat cmpsb call (bad) scas insb and jg aaa jl xor cmpl xor aam cmc fwait or mov movsl les (bad) pushf lods sub and movsb leave outsl imul movsl push inc mov xchg cmpsb jmp cmp fcmovnbe call sbbl ret sarl insl lea jne and mov fsub mov xor inc insb jae mov iret push mulb lcall mov add stc push mov hlt nop cmp fadd or and out mov mov aas pop or dec cmpsl push lcall add outsl jno pop dec fxch ss push lcall add mov test in or mov xchg scas cmc ja add (bad) nop lods cmp (bad) push mov stos (bad) ljmp add stos pop (bad) rcrb fimull push adc clc adc addl pop popa (bad) fdivrs pop mov push aad or mov add xchg cmpl data16 (bad) xchg dec out mov mov xor push jmp jmp idivl and stc lahf cmc movsl test add sub pop cwtl mov jl lret mov in es inc mov das arpl inc jl mov lret mov adc movsl xchg int3 or mov fidivr sarl out jg jnp and out pusha cwtl (bad) push push mov sub push movsl dec jno mov adc clc xor insb fisttpl pop sahf fs lds cmp ss ds push jno push repnz push mov sbb xchg out push (bad) mov movsl cmp outsb dec xor push mov mov push cwtl mov sti aas fadds cmpsb pop iret decb adc mov rorl jns add push sbb mov outsb mov lret je mov repz push (bad) pushf lahf or cmp pop lds fadd push rorl inc push into lret aas repnz inc loopne push dec out cmpsb decl lret (bad) and jbe adc and sbb pop mov repz jae jmp lods lahf pop and cs cmpsl add (bad) cli xchg icebp popa sbbl mov popf mov push aaa mov dec insb or stos cmc mov inc int3 sti int3 adc add mov lahf dec inc repz imulb ja mov jno lds and sti or ljmp mov push test lret movsb rclb (bad) cmpsb pop add into push xchg ds sti test scas push into loopne aaa xor rol mov adc mov aas inc and frndint sub mov insl jmp cltd (bad) fbld cmp fs and cmp je mov pop xchg rorb iret xor (bad) hlt jne cltd jno call xor jg and subl loop imul fnstcw cmp scas faddl aaa pop mov jmp aad fsubs dec daa lods (bad) jns pop mov jno push (bad) lods bound les popa mov scas ja xor les pop and mulb pop push inc (bad) sahf out push pop mov pop daa rolb fdivrp sub jnp add aad jns mov push (bad) jns cmp inc call (bad) mov xor xor mov mov (bad) xor in test sub cmp sub movsl xor jnp pop out jmp cld lcall fsubs imul out xor std jae push mov push out bnd adc adc cmp int rcr imul mov dec cwtl in inc xchg or cmp les mov fs cld sub out sbb sbb mov mov mov std pop sub mov sub je lret pop add sbb pop das movsl (bad) add add outsl shrb cltd pop cmp movsl dec lds xor push movsb push mov inc inc inc mov call int3 mov xchg aas push popf push jb sbb mov pop pop dec pop jno (bad) cmp inc push jmp stos jmp dec xchg and gs data16 mov or pop ss inc cltd pop loop mov jmp dec and push sub xchg or (bad) iret les fsubs sahf jg (bad) test (bad) cmp fsubs adcb jl xlat out in mov mov dec xor outsl sbb fisttpll xchg popf mov rcr dec jne out xor xor mov stc and sbb sub push inc sub mov into xchg test xor xor xchg stos inc arpl mov call lock xor jle aaa cmpsb out int3 sub pushf fndisi(8087 fs xchg lret inc mov fcomi xor loope es pop hlt jp and mov mov popf mov and dec loop (bad) movsl jae sbb push and arpl or test jmp sub or add fadd mov jne popf mov jl jae or test pop ljmp scas and or (bad) adcl jmp stc xchg xor stc xchg popa mov inc push push sub leave subl mov out push pop adc cmp ret jbe sbb imulb or cld jae dec jmp and or cli adc pusha pop mov sub mov lock repz sub mov xchg fimul inc or mov or ds jg jl in out mov out sub or ret rcrl sbb jmp mov mov notb adc stc inc int3 fisttpll cmp leave jle sbb jbe jmp add pop adc lds push mov sub jle loopne repz stc (bad) or jno push cwtl mov dec das push fidivr aad push rcrb add mov adc mov mov fidivl adc mov cmp sub (bad) (bad) jmp daa and (bad) mov outsl xchg dec or inc les cmp mov or cmp cld ja bnd bound and roll dec xor xchg in add popa or clc jmp outsb nop mov int xor fidivrl adc push lods ljmp jge pop movsl rorl xor xor lret push stos test mov jb fmull ja cmpsl lds in mov mov xor pop jecxz inc jg cltd (bad) iret lods in jb adc stos pop mov into (bad) dec pop fistp push mov loope into push jmp pop test out push psrlw inc test and mov iret jno lock adc aaa mov dec lret addr16 push cmp stc je inc (bad) adc pushf xor enter mov les scas bound dec fdivrp outsb daa jl ss mov test cmpsb lock xor push andb rcr scas inc (bad) pop imul mov mov dec loop inc jnp repz rcl or xor pop lret push int3 mov hlt mov inc dec jmp and jbe sbb push outsb ret pop jle xchg pop inc ds inc mov stc (bad) clc mov xchg sbbl inc jle dec jb fnsave jmp nop pop iret mov test into movsl xchg mov jmp (bad) sub cmp jg mov cld testb aam ret inc ljmp sub or add (bad) dec sub arpl xchg push gs (bad) loope cmp or xchg cmp divl xchg jo add xor inc mov adc pop xchg leave std push pop sub (bad) popa test ret pop popf (bad) cmp rol sub scas jb add pop scas ljmp (bad) and frstor rolb xchg stos xchg imul test lcall jecxz (bad) cmp pop push rsqrtps lods xchg sub (bad) mov insb pop stos mov and outsl jno or cmp fwait jmp add sbb repnz cltd sub outsl movsb lcall rcrl cmp add cmp adc mov ret enter clc mov cld cmp mov insb insb push adc cmp int3 jb fisubr pop xor stc jp clc dec lcall ljmp inc sbb mov repnz in ds and loope mov aaa sub push idivl jbe lahf mov xorl rsm cli mov adcl aam sub sub mov mov test popa xchg mov mov mov movsl inc shll cmp cli rcl fwait add mov mov jnp lock daa and lret rorl insl scas out in (bad) fdivrl cmp sbb sub lret enter add popa jb jb btl add call pop jb in xor sbbb mov and adc fsubs stos cmp jecxz fisttp push pop sub out push pop xor outsl std pop cmp stos movsl push (bad) dec sub mov mov rcll into push lcall pushf and pop popa mov or cmp fs dec cmp int ds cs lods adc push gs add and push insl aas jmp loope jo lret mov push pop (bad) cmp je cmpsl sbb cmpsb mov mov sbb aam inc mov cltd imul (bad) mov rcrl mov or insl pop movsb gs lods fild xchg xor push mov adc xorl sti (bad) push mov add sub sahf push mov test jne mov (bad) cmp pop cli mov lds cs push ja ficompl xor imul xor (bad) enter or mov and and test fnstcw xchg leave xchg in subl idivb icebp pop dec rol sbb daa add les pop inc xchg jmp xor add dec xchg (bad) and cmpsl and clc out repnz in cmc fsubrs fcoms and inc mulb mov push lret lcall scas dec rcr sti pop mov addl xlat in leave sub jp into and in notl sarl int lods push inc in or repnz jl mov xchg mov pop out xchg test or jns test lods in adc movsb cmpsb mov sbb adc in int3 imul shrl les pop pop ja xchg mov mov xor lahf xchg ds dec lcall hlt ss mov icebp mov xchg sarb adc push enter loope jle jb das rcr xchg jbe mov mov xchg jmp mov adc mov scas jb cmp nop or insb adc stc xchg or loop mov in push push sbb or or dec in adc cmp mov lock and sub and push or mov dec jecxz dec mov and add loop add test xchg sub dec add adc xchg js fdivr out cmc ret imul sbb inc stos (bad) or cmpsb nop adc pop clc xlat std jno mov mov adc mov jg cltd int mov sbb in push add movsb add push xchg jne inc cmpsb inc jo fisttpll mov pop rclb xchg and jg dec dec mov aam push pop fcom xchg repnz test jecxz in dec dec inc stc jnp xchg mov mov movsl ljmp mov xchg mov dec std rorb js add outsl (bad) or aaa sbb pop in xchg mov lods or mov fwait repnz mov mov scas scas pop pop push movsb inc add mov int3 out inc outsb jae mov xor int and inc fild jg repnz testl leave andb lods mov pusha jb sbb fistp in les add and xor xchg dec jnp jge mov out popf rcrb hlt sahf daa ret lods inc push adc fstpt mov xchg lahf mov (bad) scas ljmp inc cmp mov jno out rolb push or mov lock iret xor jecxz test rolb push cmp rcll out clc out les aam sub and mov hlt sub inc mov jnp mov adc xchg (bad) jo nop dec xchg mov mov push movsb arpl stos lock stos jb mov dec mov adcl shrb push jns sbb mov inc scas push bound pop std lahf cmp jae in adc jg cmp xor dec push loopne cmpsb cld or in incb pusha lret idivb and pop xchg loop ret popa out ja xor or push pushl leave or jg or lds sbb inc std shrb cmp rcrl (bad) or xor jp inc cltd cld and or dec xchg cld xchg les popf pop es xchg dec xor pop int (bad) fild inc mov push sbb fstl jecxz inc pop pop mov push push ss dec push das insl or aad or int3 xchg loop mov clc pop sar mov mov ds jecxz jns test sti popa jae loop cld out mov out aaa sbb mov jp pop lahf or fsubp pop pop and out hlt std cmp fimull jno outsb sub jl inc and movsl push vpunpckhdq ret imul push cmp jnp jp or popf cltd jae sahf or rol xlat stc sub frstor insl xlat xlat gs pop repnz das mov dec mov ja push jmp cmpsb scas jb add cmp or jmp rorl scas loop fsubs not or cld and xor inc pop iret lds (bad) dec pop mov dec jns scas xor ja in xchg fnstenv dec adc cmpsb ss test fdivl or dec and dec addl adc xchg add xor jae pop movsb arpl fucom aad idiv ds aam jg sub adc inc mov imul pop incl and inc movsl xor aaa idivb inc sbb fnop push enter dec xor and adc adc mov jns outsl mov lds aas lret popf dec push jle lea and sbb sub mov inc iret adc mov pop fwait and fwait jmp add xor mov mov hlt inc shr or adc iret test sub or xchg mov jle out or daa dec ljmp jb xchg jle pop adc cmc hlt test or sbb call (bad) and imul gs (bad) jo xor inc xor loop xor roll or shr push mov in cmp nop adc iret push shrl mov or cmpsl adc out aaa xchg adc in dec jbe fistl jecxz arpl mov lods jne inc out inc lea sbb mov lea cs out scas repz xchg mov xchg pop inc cmpsb sar enter xchg (bad) out dec xor test sub xor jl and sbb loopne sahf das pop xor (bad) clc rolb xor jbe lea cmp xchg loopne popa movsl test sahf dec movsb add inc data16 iret popf or fstps push addl dec adc push stc add sub outsb (bad) jp scas push les aas cmpsl cld fdiv fisubrl cwtl ret push or in xor xor xchg arpl xor xchg xchg xchg mov inc (bad) in cmpsl test scas adc lret test lahf inc mov mov sahf inc popf xchg adc and stc gs sub xchg cmp mov jle dec (bad) rorb dec sarb dec or pusha mov pushf aas push mov inc xor jp mov rolb jp stc jg add imul push into mov adc cmp sub mov pop lods xchg outsl arpl lret sub push sub mov add lahf aad mov pop (bad) add mov mov or cs addl cmp jo rolb jp das sbb cli mov inc roll mov stos sahf dec cli jmp mov mov pop mov push adc lret jno lcall dec pop dec sub or mov sbb repz lret outsl test push pop out push int (bad) xor dec dec repnz ss jle outsl pop jl cld pop imul ret pop mov (bad) or push fcmovb adc out dec mov add cltd jg mov or stos es (bad) lea cmpsl inc push inc cmpsb add out jg leavew (bad) in fs and inc movsl aas push xor pop nop imul lcall mov adc xchg out or cld or outsl cmpsb push pop push dec mov shrl ljmp cli add mov rorb lds push lahf and (bad) icebp add add and jbe data16 jge popa pop in inc jmp add jb xorl sbb push and ljmp shrb test or cwtl inc mov dec out ror es cli scas jno scas pop and jbe jecxz das dec (bad) out out pusha push dec std push movsl mov add popf negl jns and stc mov loopne arpl cld es jae (bad) rolb imul mov push outsl loope and xchg dec pushf arpl loope pushl xor mov fdivrl imul fdivrs sbb mov daa jne or outsl popl ja sub outsl sbb cli ret popa fwait decl add dec xchg add icebp les pusha jns add adc pusha int3 sub sar gs loop test test dec push xchg mull mov fisttpll mov scas lret leave mov popa hlt push mov bound imul aam out stc and cmpsl in and popa out inc push mov push int pop mov (bad) outsl int leave stos adc sahf jmp or outsl xor push adc and inc insl insb repz add (bad) loope (bad) je mov mov add shrl pop fs mov lock xlat repnz ljmp mov popa pop ljmp test (bad) sahf inc add jl jp aam data16 pushf scas add inc cli lea iret cwtl adc or lea enter xor jl data16 addb dec rorb sti mov popa mov ja mull insb jmp lcall rcl or popa lock pop lret ljmp (bad) ljmp jp (bad) mov sub dec xor enter inc scas int mov orb push add push in inc cltd cwtl pop adc fisubrl push enterw and jge mov mov pushf fistpl and xor or stos cmc rcl ret sbb jb mov enter outsb push push pop dec cmc repz sbb iret mov mov or cmc movsl xor stos repz cmp in adc fadds (bad) push jl cmpsb lcall adc in and ja xor test dec cmp outsl gs cwtl pusha mov fildll call pop mov dec xor xchg xchg mov or and xchg lods and (bad) xor or jae sbb mov jecxz xchg sbb aam rcrl inc mov aas movsl sbb lret mov mov ret lods notl mov clc sbb shll aaa (bad) lret or sub push lock orl dec insb stc ss sub jp ds sbb bound mov out mov lret call push mov fistp out movsb push sbb roll lret jge imul imul adcb movsb div jmp ret int3 dec jle jg xor cmp adc sbb mov adc lds mov dec or repnz push inc xchg and das shll mov test dec jo mov mov dec jmp stos in fdivs je scas subl push imul mov out jb lret pop inc call loopne mov or cmp enter cmc push scas (bad) or pop loop mov in and pop stos repz sbb (bad) out fwait mov adc adc adc and adc (bad) imul and push add mov cmp mov dec cmpsl fcmovb nop mov dec adc pusha and xchg lahf popf cmp ret imulb mov adc dec add and adc sub add xchg mov pop dec dec imulb inc xor js ret push (bad) jmp test movsb sub mov xor in pop fisttpl sub shlb adc ror jo adc push mov mov nop int loope dec xchg xor sbb push mov xchg adc js sub push lea fnop push pop arpl cmpl in push addr16 pop pop cs mov push push adc mov decb add pop jnp sub mov out xchg out jb cmpsb cli adc scas dec or test loope les inc mov int3 pop or (bad) lock orb cmp les xor jb lret xchg adc push mov out repnz out and pop cs das adcl jbe fdivs lret ds in cltd push icebp jne fcmovu imul mov stos into (bad) lret inc push jecxz sbb xchg sub inc mov jle push mov iret mov or xchg test mov jns push or loop nop mov xchg fsubs pop outsb test cwtl rcr pop push int3 mov (bad) ja mov test inc repz lcall xor call cld or stos add adc inc jle xor adc inc xor cmp iret popf (bad) (bad) movsb aad enter xor inc (bad) (bad) fistpll jmp lods push jno cmp mov jae loopne push cmp adc nop fs cltd add mov xlat mov lods jl clc fistp mov mov arpl mov scas or lods pop push inc std test fdiv (bad) daa mov mov pop test jo je in cmpl in aaa test adc xchg fbstp dec add push mov cmp jl ret xchg pop or fildll out push xchg jecxz sub fwait aaa test test xchg aaa inc adc cli xor insl adc sub cmpsl fsubrl cmc add and push pop aad sbb clc or frstor jge mov (bad) (bad) popf pop sub fnstenv stos push jg stos cmp mov lahf jbe push add push and adc mov repnz (bad) mov ja ret mov pop mov push in push mov adc lret adc arpl sbb fisttp cmp sahf repnz or sbb orl inc ljmp sti into mov mov iret xlat arpl pop lahf arpl sti mov cmpsb in movsl xor push lds xchg jle jns (bad) mov sarb ret insb std xchg test and add add xchg das lret ror jb aam adc iret inc mov mov push out adc test sarb adc add mov mov les push mov or xor add push es sub push fcoml dec movsl xlat mov and xchg jno xchg insb repnz cmpsl hlt inc stos pop mov ret jae adc xchg xor dec jno or cmp cwtl add test adc sub sbb dec and (bad) mov and or subl xor mov in mov inc (bad) (bad) stos jbe mov and rclb jp mov movsb push (bad) out mov stc push inc ljmp fldcw popa lret movsl loope adc int3 jae enter and xor out fbstp in stos cmp iret mov jno and lock sub fs dec pushf mov xor test add outsl daa pusha addr16 ret xchg mov push pusha or aam and mov push mov test out popa cmp push add push mov xchg jnp ljmp push js and mov pop incb stos adc out scas add popf sbb adc stos and inc cld xor nop dec mov mov cmp push xlat mov (bad) fcoml out loop cmp cmp cmc pushf dec out rclb mov (bad) loope add imul insb hlt sbb or decl push push and cmp add xlat cmp adc addr16 dec jno scas je jnp dec mov lods daa daa adc insb lods mov pop add pop mov imul and xchg add lret pop push push sub add mov sti lods dec mov push sub xor inc test fs lahf imulb xor mov jmp mov cmp stos cmp jmp pusha mov fnstsw loopne adc ss add (bad) mov inc popa pop xchg fisubr repz mov cwtl sahf or xchg mov xor rolb pop cmp dec int pop xchg scas loop pop xchg add add out arpl into sub cmc mov mov adc pushf in pop cmpsb push xchg adc xchg cmpsl sub cltd pushf pop imul hlt int int cmc ja test imul push rol xor inc xchg add (bad) (bad) sub mov jmp inc cmp test imul ds pop fwait into push jbe popa mov loopne insb stc loopne adc xor lcall push repnz (bad) and hlt mov push out cli aad gs scas push aam mov jno pop out xchg mov call (bad) and push (bad) mov dec shll lds or repnz scas sub andl scas xchg xor mov mov cld popf cltd and clc cmp cli inc jg in jne inc arpl xor add in fwait fs sub imul cmp mov js js xchg ret cli add je lahf aas popl sbb push push ss movsl cmpsb jmp cs mov mov ret imulb repnz call cmc jne dec pop outsl adc ja inc mov fstpt mov lock scas push sbb add pusha jnp mov mov push inc and sbb int3 mov sbb ss xchg jge gs pop pop push mov dec rorl out (bad) sarb jge cmp jmp ja add (bad) sti sub adc nop hlt lock add mov jp int sub jge dec lods push mov sbb mov sub cld and push dec pop sub cs test fldenv mov lock adc or and sub mov xchg lcall popa pushf lahf push pop pop outsb cld cmp js xor es mov jo sbb out push leave popa sub xor (bad) xlat bound and shrl insb cmp jno rorb or mov mov cmc aam mov jbe loope jb and and jbe aad (bad) fldt jle add in ja in inc xlat dec lock sub jnp mov sbb cmpsb cmc fisttpl jg sub sti test add cmpsb mov push sbb jb repz xchg add sbb lret push inc mov fxtract addl pop jbe ss cmp fcmovbe mov daa es std out aam mov xchg push loopne ljmp mov nop popf movsb es cld add test test popf cmp mov cmpsb or int3 fimul xor es cmc jg jno or call mov mov dec ja fdivs add cltd aam push dec test out (bad) sbb or fistpll push inc adc mov inc add cli xchg jo push test popa (bad) test stc xor movb or clc cld push cmp xchg pop call xchg add jle imul dec xor shlb insl jns (bad) int3 or cmpsb roll xchg in in sahf adc fistp mov mov mov (bad) movsb subl push sbb stos stc jbe ret orl jecxz inc rcrb (bad) xor pop ret mov ljmp and pop sub xchg out push mov jns mov pcmpgtb (bad) pop xchg bound dec dec mov inc outsb ds cmp xchg jmp (bad) out adc jb pop popa sbb jbe cmpsl stos mov into jle xchg add fiaddl inc push inc iret push xchg call rclb fistp adc dec mov das lahf xchg xchg mov cmp inc imul xchg lcall add in lea xchg je xlat and arpl and gs sbb push (bad) mov xchg jo sub out push movntps fiadd push adc int3 lods jbe into je fs adc cli ljmp push nop imulb pop (bad) jg or (bad) into push mov repz dec lea fisubrl out mov mov adc in or mov mov leave out adc aad pop call jb ja mov cmp out loope int3 pop ss xchg jmp pushl fisubl out lcall jnp inc ss mov dec dec and pop adc add inc push sub sti push (bad) psllw sbb xchg ret and ja mov faddl sbb icebp sbb xor andl pop js mov and ds push out (bad) fisttpll lcall in xchg aaa jae mov and push push test shrb in mov out data16 jb bound add repz jmp sbb or stc pop lcall push pop add mov sbb or jbe mov or and loop cmp in (bad) jle addb out imul test add lock jns outsb push cmp fcomi inc lret int3 push rcrb jle out xchg xchg mov test lcall rclb dec xchg sbb loope insl fs inc cmp and jne jg mov push sbb lret add enter inc xchg and xchg (bad) addl fsub std call into xchg das xor mov cmpsl mov je dec jl jae dec scas in pop mov inc jp or and les popf push jg and lret xchg iret test (bad) aas int mov jbe ret lret test sahf int3 jno rclb mov rolb add mov (bad) icebp imul loop mov insl fnstsw stos and cmp ficom sbb sbb test xchg jecxz and gs outsb (bad) test cmp mov test notl roll test scas jae cs pop push (bad) out jg xchg jmp push pop sbb sti push in invd inc stos mov movsb add (bad) or cmp fstpl push icebp pop into ret psubsw sahf sbb cmp mov or repz lea sub pop fsubrs dec aas sub cs mov das aaa adc mov outsb imul mov lcall mov clc gs ret mov sub ds (bad) pop cmpsl jb cmove xlat movsb imul adc lds nop enter sbb das push (bad) push and push xor add enter push push cmp pusha or cmc jmp (bad) out inc jmp mov nop (bad) lret cmp pushf fadd stc fs adc fucom out lds jge sti mov push in outsl cwtl movsl dec jmp jno aam cmc and push adc hlt and test sub (bad) adc sbb or mov xchg icebp hlt fdivrs or mov (bad) pop xor leave imul clc cli push in (bad) dec or fwait je not or mov in dec iret xchg mov add add in addr16 mov inc (bad) xor push mov movsl nop ja add insb dec jp add push imul dec in xchg fdivs pop daa sbbl cld lock inc mov aaa xchg xor into inc test and adc pop cmp jge fucomip sub cmpsb fstpl push sti jnp sub cmp in mov or sbb pop pop lock cli add aaa push mov xor int fistpl lods pop inc int3 mov xorl cld or (bad) cmp test stos incl stos mov ret ja cli mov add mov sub daa mov popa adc test mov sub or xchg xor stc cmp lds lock cmp push pop push push xchg push orb (bad) (bad) scas pop cld mov add add rorl or jo,pn add push xchg mov mov stc mov inc jo sub dec adc mov les jnp sub sbb ficoml sub jo push add lcall mov repnz das insb jmp fstps int3 mov mov or arpl push mov ss push pusha xchg mov fs push mov inc jbe fstpt (bad) cmp (bad) jbe ljmp sbb pop or push je xchg xor sub sbb mov cmp arpl loopne jb fsubrl aam adc mov cmp hlt and or jne cltd or inc inc xchg xchg loope orl push scas loopne (bad) mov pop in mov jmp and or push jge inc in mov sub mov mov clc repz cmp mov mov mov (bad) je push sbb mov dec lds cmp xchg or pop (bad) popa ss push mov ja test push imul mov (bad) ja loopne fsts inc (bad) or lea jge (bad) enter jb adc mov jo fidivr enter test cmp add add dec sarl lods add xor test ficoml dec fistp pop lods sub mov ss cmpb je cli push adcl call mov sub inc dec add adc cmpsl in adc enter stos mov inc push int or les pop inc pop mov enter push out jae pusha lea sti pop inc jmp lea das neg mov sub sub mul scas dec sarl jge mov sarb mov push or lods cmp outsb adc mov sbb lds das rorb (bad) dec scas hlt vcvtsd2ss ds loopne and mov dec aad push sbb sbb push pop adc aam aad in mov pop cmp mov xor out mov xlat adc mov and jne and mov add xchg clc hlt mov inc xchg and cltd pop pop xchg in and imul xchg mov mov jb fistpll outsl repz mov movb ds lahf nop ret vcvtps2dq clc inc and lock cmc add lahf xchg mov into inc xchg test xor scas jb jns outsl decb jl pop out movsl sbb mov jo test mov (bad) pop in jp fsts sbb xchg mov out aam daa sbb push rol jl das popa dec iret or pop movsb dec sbb lret das hlt (bad) (bad) lock push jno xor hlt int mov insl adc cmp (bad) imul sub cmp (bad) add or or call stos into ljmp jae in push rorl inc iret dec or sbb std in xor mov (bad) dec mov dec fcmovu jmp pavgw push sub jg rol insb clc in les cs ficompl lret mov in testl push in es push jne scas push inc add mov pushf in pop pop jl dec mov fistl pop sub fldt xor mov mov sbb jmp fimull das neg rorb and neg ret int3 aas cltd sub jo mov adc xor out ds int popf mov fs jbe popa outsb mov inc lahf push sbb mov dec jle,pt cmp or shrb fdivrs cmp mov pop sub adc mov pop sbb enter cmp inc iret jecxz inc andb push (bad) les js jp lret and pop adc xchg ret and xchg mov into adc in sub mov push cmp cltd fbstp retw js aas movsb cmp in sti pop and in (bad) push in pushw mov mov jmp jge mov js lock cmp push mov les ret push je jmp mov add or dec jo mov mov out nop test cmp lds xchg mov jno mov out adc add pop pop popa mov (bad) pusha jb and mov jbe popf jne scas mov or sub push mov dec inc fsubs pop fisttp add jae jae mov or test decl inc lret mov hlt shlb dec out insb cmp mov gs cmp sub icebp jae lea jecxz clc pop cmovp mov jg out mov adc int3 sbb fcoms xchg bnd pusha dec dec add mov je pop add xchg pop adc out (bad) aaa movsb cmpsb (bad) ss je cmp outsb jbe mov xchg sbb (bad) clc mov sbb fs out jmp dec adc xchg xchg pop lcall xchg test fistpll out out and mov push (bad) lods pushf mov push loopne loopne test aam mov mov int es inc sub cwtl std inc dec aas jnp out lds out (bad) daa mov in push ret ja shlb pushw add ret or mov and cs sbbl scas jge fsubl xchg or add popf std (bad) jg or mov jbe cmp (bad) test jne incb adc popa and and loope mov push or scas out dec rcll lret adc mov decl daa xchg cs or or or push mov scas mov cld test mov orl loopne pop push jg ljmp iret pop mov insl pop pop lret xor das sbb in xchg or sahf popa pop mov arpl mov xor dec pop sbb dec pop cmp jle enter pop xchg test mov shr mov jb lods add dec out test jno add mov add mov cmp mov rep in push inc xchg fisubrl jge arpl jno cmp push mov aaa adcl daa add les out add test pop (bad) dec fsubrs add lea and ds jnp jecxz push jle pop inc sub xor jo or sarb test enter xor hlt sbb out bound inc insl cwtl imul fimul cmp and add mov xor mov jne repnz scas leave subl cmp jne test mov rcr mov je aaa jo pop pop xchg stos xchg jb in xor fsub or (bad) jns movsl sbb sbb insb imul int jns jbe cli and lcall pop cs fwait mov jno (bad) in test mov cmp adc adc cmp ret das dec (bad) out dec iret (bad) (bad) fs lock lock testb scas jo fwait mov xchg push jecxz add jne cmp cli cmp push stc bound mov pop int leave jbe jbe push ljmp add inc mov pop std icebp aad int3 bnd aad in ret call pop jge ja (bad) jmp pop (bad) fndisi(8087 sbbb mov sub in inc call pusha popa stos sub mov outsl mov out test sub lret negb push add dec sub in jnp add mov cmpsl nop sbb dec and sbb jg stc addps push test fwait (bad) mov dec push ja xor add fstpl fdivs inc sti push sarb inc jge or mov xor sub (bad) mov cmp and or mov (bad) xchg pushf fidivr mov xchg inc out dec iret scas and sub out mov inc xor pop ja jo movsb std rclb mov cli push xchg and push or mov leave daa enter cltd lret dec cmp mov mov adc jle popw mov movsb mov dec pop mov into lds jne jle js xor sub icebp (bad) sub adc out push mov fidivr xchg push dec pusha xchg push jmp ljmp or lods xor mov jno xor (bad) jno mov push mov add adc add xchg lods aas (bad) fild roll gs mov adc in cltd sti loopne lret fsubl out std outsb pop std int3 sbb dec mov ljmp insl dec loopne xor push iret rcrl movsb aad sbb sub clc push mov jp nop inc mov imul dec aas sub in ret loop hlt mov fmull xchg xchg push mov xor mov mov (bad) (bad) sbb imul push or cmp in pop mov mov sub outsl negl xor pusha jecxz dec shrb pusha xor dec (bad) hlt push test mov add push test fldcw mov mov out mov loop fidivrl push pop jecxz push jp mulb lret std push xchg je or fcmove fisttpll cwtl xor mov mov pop ja addl inc repz xchg repz inc xor stos std cltd call decl jns mov mov pop mov lcall cmp imul cmp jmp mov les imul add add xchg push add icebp and cld fstpl aas jnp cltd outsb ss dec js lods push sub scas insl outsb xchg stc mov es push stos mov mov sahf daa mulb push ror fidiv (bad) pop xor pop insb xor xchg (bad) xor fstpl sub dec repz sub pop (bad) pop stos in mov mov xor int3 aam sub rcl mov push repnz adc pusha ja dec ret mov mov mov add out bound dec mov push les leave push sub sub movsl rcll mov mov popf fstpt xchg jecxz pop pusha or and adc data16 mov imul arpl xor push scas add pop cwtl or sub mov pop andl and jnp add and jb fsub subl bound pop xchg add sti mov lcall (bad) (bad) loopne inc sbb pop jae xchg adc sbb xchg aam (bad) out std add ret xchg xchg and int int3 mov lea mov jp adc jbe repz mov cltd adcl mov bound into and popl (bad) in jge fs lods and mov cmp repz fcoml xlat push dec dec inc cltd test jnp dec fisttpll xchg xchg xlat jge mov mov xchg fisttpl movsl and or sbb stc out inc call cmp (bad) pop mov push and add cld dec mov adc adc std push cmp imul lods (bad) repnz stos test ret stc mov outsb or mov sbbl mov js ficomp (bad) mov cmp mov cmpsb inc xchg or pop sub repz addr16 ret ficompl ljmp js sub (bad) je lahf jmp or das xchg test pushf xchg sub test mov cmp push dec insl or rcll scas mov jle pop mov addr16 sub push mov or inc push pop jle sub pop das test sti loop stos jbe movsl mov bound imul popa test xchg test mov jno jl shlb xor stc pop mov mov daa and loopne dec ja aad mov pop mov repnz inc jb mov mov pop imul ret mov mov mov cmovo jno adc in push and mov (bad) adc scas je fisttpll fldenv testl movsl mov add shlb div push mov fisttpl pop cmp negl dec dec mov or mov dec lods movsb fwait mov or jle cld add rol and imul sti cmp (bad) lahf fisubl repz xlat (bad) out int jb xor scas repz fsin sbb add daa inc push out orb bound mov int3 or mov in lods or adc mov movsl clc jle out xor add enter jle adc cmp (bad) mov cltd insl xchg inc cmpsb test out xor push mov inc mov xchg insl imul pop mov loopne sbb mov push mov jno add xchg sbb outsl sahf daa lods lcall sub outsb outsl or (bad) popa xchg ljmp jmp push inc push push jmp fdivr sub orl jl xor lock mov fnstcw inc sar lods enter mov aam mov dec and adc xor popa popf mov loop cld push xlat aas test mov or xor loop out xor fnop lock repnz push xor nop adc adc adc mov push pop cmp dec daa jmp mov adc pop cmp dec and call cmp lock cmp push movsb data16 and hlt lea sub (bad) push jle add push out popa sub jecxz addr16 int sub test xchg in scas or pushf dec push cs jae lret xchg or add mov add test jns mov movl outsb addl shll int fs xchg sbb mov inc ds cmp scas mov pusha mov icebp inc sub sbb push fisubrl mov add imul in je xchg lods es out outsl jle cmp sbb mov xchg (bad) sub pop mov mov lret add xchg jecxz lods sbb cld push (bad) popa test xchg and (bad) in cmp jno pop stos pop cmp pushf dec sbb pop out cmc clc stos mov adc ret popf jl sbb push dec add hlt push inc xor dec pop lds mov push jmp fsubr cmc movsl pusha cli and mov push mov push mov mov fist clc fsubs aam mov (bad) imul sbb test pushf xor fisubr inc mov cmpsb sarb clc sbb xchg lea cltd sub fdivrs or xchg js pop movsb mov sub iret mov push pusha add mov lock sbb jp jle or pushl mov mov sbb in aas inc leave in pop jmp mov ja and pop and jb sbb cs inc jno in and repnz inc hlt cltd js ucomiss leave mov js pop popa mov sub movsb rep xchg movsb cmpsl xor push dec jge mov pop mov or jo mov pop xor or or dec lods subl pop fisubrl adc cltd mov mov dec lods push ja mov icebp mov mov dec sbb mov pop push gs test nop mov jae add imul std sub lcall mov ljmp outsl lods ror jmp dec pop push push inc lods clc dec sub jecxz push push sub inc sahf addl dec cmp fadd inc pusha xchg movsb adc in inc and scas jl pop push mov ret dec cli cmp sbb pop xchg push or loope sub (bad) repnz sbb mov cmp repz lods mov gs movsl lds std mov or xor and cmp mov sbb (bad) data16 es mov lahf add push cmp (bad) int3 loope mov inc and hlt cs push push pop aas or cmp daa jo xchg imul sbb or imulb add fwait loopne sbb mov stc in sbb add adc sub ret loopne sbb imul pushf adc int3 (bad) in inc pop mov negl push std mov data16 fisubrl vsqrtss stos xchg shl inc rcrb adcb lds sub mov push stos (bad) and pop xchg push xor cs bound dec repz mov out ljmp cmp cli repz mov int3 add call push cli adc and mov lret outsb fstpt dec mov icebp das aaa cltd xor imul test loopne dec ja adc and fsts inc cli ds add xchg mov xor lcall scas jl jb nop cwtl icebp or inc pop inc dec mov jns fstpl (bad) jp (bad) pop fnstcw or lret test call fistpl repz mov sahf xchg mov xor mov jge mov dec dec mov test daa fxch pop popa push je mov aam and sahf clc (bad) mov scas push (bad) ja xchg mov adc and out jg cmp add adc cmp and (bad) enter lea dec sti cmp aad dec push mov cmp push es mov loope sbb test push or lods (bad) lahf cmp fistpll scas jmp lea mov dec xchg jg loopne nop aam sar mov add in sti jo mov rorl inc cli xor aad mov dec (bad) in stos nop cld mov mov inc cmpsb test cmp jg xchg sarb inc adc cmp inc sub fiaddl jns rcll stos mov mov jecxz cmp out fisttpll dec int add dec fsubrs push (bad) pop out aam xor push pushf xor in stos (bad) loop pop dec xchg inc cltd lods add mov loopne adc mov xor mov std std mov xchg xor xlat sbb out sarb xor mov dec stos sub daa outsb mov lock cmpl je aas fwait add mov sbb push jmp das hlt test adc aad inc arpl sbb in adc adcb ret mov mov lock imul push jle xor jno mov adc test ret jmp dec cld stc (bad) and sbb jne (bad) daa ljmp jae and out fcmovne out fldl pop loope mov lcall xchg or pop jmp arpl out popf ja loop nop (bad) and arpl stc cwtl mov mov stos xor pop out push icebp outsl rorb into scas popf les sahf insb push loopne in lods movsl lret adc sbbb add mov sub cld pop roll gs fisub add mov lret inc jns dec jmp mov lods mov lcall fdiv aad int push shrl pop bound lcall lods mov cmp mov mov pop mov xlat cmp adc mov mov mov (bad) and test loope xchg idivl and lock pusha addr16 ljmp call push loop scas xchg outsb (bad) subb test ret sti lods mov xchg inc sub sbb mov or mov leave pusha push cmp in and push int3 fs lds aad scas sub dec inc scas (bad) out adc jmp and stc mov mov rorb adc mov movswl push dec dec inc mov aam mov in ja jge fdivl xor loop repz sbb aam inc fimul test ror mov lcall xchg and inc pop push cld push dec js push pop inc jmp rcl stc and sub pop push mov xchg mov lcall xchg test mov lods push mov inc loope xor add popf or mov add adc and cmp fwait roll pop pop jge loope ror sti and fbld mov sarb jbe (bad) mov cmp ret sub dec std xchg cmpsl push ror inc inc mov sahf add and pop ss cwtl cmp sbb sub jae nop fadds scas cmpsl sub mov mov addl test cmp (bad) clc inc cmp mov scas xlat rorb push mov das and decl xor mov das xor gs call adc outsl adc cltd bound add inc xor out or insb jle std mov repz adc pusha rclb lods mov sub mov enter aas dec cld xchg mov mov xor and sub mov push in ret out pop jle outsb ja lahf rcr fstpl jnp js data16 (bad) add outsb add and and cmc jge xor aaa pop enter js xchg add inc out mov daa jns,pt jge dec fsubs and jbe scas cmpsl lods jg push mov sub mov imul xor les sti loopne pop sbb jae xchg mov cmp sub mov arpl add xlat adc shr sti or and mov cmpsl data16 cmpsb dec mov inc inc jge popa xor sub mov xchg loopne jns xor mov jecxz fdivl mov or or add mov pop inc into stos add jbe mov pop test jmp lea jb rol dec jle add sub in test clc xlat incb sahf or sbb add cli adc adc cld and (bad) sbb movsl ret loopne loopne sbb call cmp scas mov mov rclb dec push pop adc popa cmp jnp mov pop out loopne shrl std xchg test gs inc adc add or mov mov shrl mov es stc mov mov mov push pop mov pop adc adc push aaa int3 mov dec inc iret add sub mov xlat jo int3 pop aad xchg jp adc ljmp mov jmp pop inc inc shlb push pop sub inc int mov push pop or push cmc repz sti xor lahf enter sarl and fcomp xchg adc xchg bound les leave clc dec out mov add mov (bad) pop mov add leave in push fucomip dec mov mov lret or add fsubr sti adc xor push (bad) loope adc lds mov mov mov pop mov xor adc aad dec jecxz dec aas out sbb push cmpsl mov ss sub mov push push pop xchg (bad) cmp push (bad) jmp mov xlat xor leave mov and hlt push mov or jp xor add leave pop push xchg js jmp dec test scas mov jbe adc mov inc dec dec aad into lods sbb mov aad xor jno call push xchg insl leave movsl (bad) hlt ret rcrb push mov inc pop push mov minps mov movsl divl dec mov inc jnp and mov sbb lret arpl push inc pop add mov (bad) addr16 dec jo in sub ljmp sbb pusha adc test push rcll or add test out sub or or pushf and or add lds push push or pop push push call rclb lods test popl fnstsw dec aaa fsubs mov push mov fisttpl mov fbld and insl jecxz scas cmp adc std out bound out leave lods test mov and add rcrb iret mov inc adc pushf sub lods xchg test and dec ret push push or cli lcall stos xchg push rol adc imul inc lock push aad insl inc adc scas pushf aaa dec pop push (bad) jo inc mov (bad) xor idivl into cmp enter bound test daa and (bad) data16 lahf pop push clc aas rcll jecxz sub dec and imul daa mov push sub push outsl mov addb cld pop xchg jne inc and ja jnp js add les xchg loopne inc xor push ss xlat inc jae stos lods out jmp arpl push sub gs xchg rcrb mov das into sbb (bad) inc jno enter or push lds lcall jno add xchg fwait adc enter das xor loop (bad) popf sti and lret mov fstpl sub mov push push ret int (bad) push or fst or pop addl pop dec movsb sub push jo sbbb mov int3 icebp in cltd mov ljmp or xchg xor addb cmp cli imul lea jbe imul test add or daa scas adc out (bad) outsl mov xchg cmp dec mov mov in popa fdivs cmc or sbbb xchg xlat xchg xor repnz cli cmp dec mov dec leave (bad) ret sbb xchg mov or mov and xor fwait lods dec jp in push repz imul call int3 test ficom mov pusha cmp enter das sub in add aad fcoms pop insl dec cld sbb cmc push mov int3 add mov test push sarb ljmp cld flds aam cmp or mov loope sub lret cmpsl adc mov js insb jbe fstpt pop mov aaa push xchg (bad) lret pusha inc jg repz imulb xlat xor leave scas mov or jp add sub lock sbb pop cmpsl sahf jecxz ss adc jl iret cmpsl mov rsqrtps into dec ret imul icebp mov shrb xchg sahf shr test jmp inc cwtl fldpi add mov dec mov inc add rorl clc in out loop std out std stos frstor orps sbb sbb mov mov mov out inc inc movsl fisttp gs xchg enter out and outsl lret mov popa cmpsl inc jbe (bad) (bad) mov loope cmp stos inc pop out lahf aas cwtl mov (bad) sti (bad) je and xchg dec repz pop inc lock out ret enter and (bad) lods xor mov cmp repnz cs mov imul sahf mov aad cli fwait scas dec nop shrl lcall ja lods arpl mov movsl inc lea mov sub call sti dec mov xchg sar ret xchg or lock test xor (bad) or mov js insl jmp mov jp adc jge into push mov xchg cmp aaa loop add sub jl rcll pop repnz in fdivs xchg and jnp loopne icebp adc ret outsl mov aad hlt stos ljmp mov ret xchg mov mov stos push add jne scas cmc lods enter and adc out xchg popf insb mov js lcall push mov inc xchg xor mov adc ret xor mov cmp sti adc hlt loop cmp mov pop insb (bad) push test (bad) lret fistpl mov cmp repnz jle shrb sbb mov fisubrl inc pusha jle bound pusha movsb jbe xor jge test (bad) xor ror leave jge xchg jg xchg fwait ror pop cmp mov jb push push jne inc fs add shll fnop xchg jmp sbb sub mov mov out or leave out or pop cmp adc add jo nop xchg xor mov js sti sub (bad) jns lods arpl xor sub jnp out cmp add sub (bad) mov stc std pop or cmpsb je jbe sbb xchg test sbb das jns (bad) (bad) pop cmpsb jno or cmp sub test test daa xchg mov iret inc mov lods lret push sbb stc mov stc mov mov push sbb jbe js adc fs (bad) rcll xchg int3 pop sbb pop rolb push push sub or mov cmp pop mov sub test insl cmpl jl cmc enter sub dec jno xlat (bad) rcr xchg (bad) lret pop xchg or lds ja pushf dec sahf pop ljmp add cmp inc jo fdivrs and mov andl jmp mov test loope cltd adc out add popa and sub push out push jo fwait cld (bad) into jecxz xor cmp or jmp jb or daa cltd xchg sub pop in aam xchg sub cmp push fs cmp or adc out dec addl out fisub call lret sub call jp imul (bad) loop dec fimul sbb sub in mov mov fidivrl push pop les (bad) mov lret inc addr16 movsl pop xchg cmpsb xor or movups jno adc test fs adc pop jb pusha movsb dec or sarl inc std pushf push mov cmc add pop mov (bad) mov test ljmp mov mov aas push dec and push test mov enter push inc xchg mov push addr16 jo xchg jnp add or movsb sti std sub dec imul es imul xor int sub adc (bad) stc xor jbe dec xchg mulb mov lahf pop xchg nop (bad) lods and das js inc mov mov pushf test mov (bad) lock lods xchg and iret push in lock mov dec pop (bad) in imul fiaddl icebp ret mov in and mov push xchg push xor add popf lcall cmp mov mov es cltd in lret add cld shr repz jnp lods (bad) icebp or dec jle fadd sahf mov scas sbb loope lods mov xor xor mov xchg adc mov mov call cmpl jno pop shrb sub adc cmp addr16 rclb popa stos xor jno fmulp xchg mov or lods pusha das push xchg pop into jmp bound jns pop addr16 mov nop orb pop shl (bad) sub cld (bad) and pop adc int out insl jl (bad) stos mov sbb sbb in mov sub (bad) push mov mov roll outsb loop movsl loop popf mov in notl loop mov xchg das fisub xchg pop xor sbb scas mov cli outsb fmull dec inc in in mov sbb sub mov dec or and fistpll mov dec push mov jae sti rcr das lea clc jne subb cmp dec add (bad) in (bad) mov sarl movsb fcoml shrl ret adc pop jle dec pushf cmp cmp das arpl pop aam sbb jae sub push add dec add and scas xor jle inc insb push mov repz imul lods or faddl mov (bad) pushf ja mov dec sti mov adc ja enter jle les xchg mov dec inc ja sub std sbb (bad) pop mov out mov push loope add inc sbb pop ret in int3 push mov pushf sahf sbb xchg cwtl pop cmp pop test lock test imul mov mov or divb xchg pop test xchg mov fucomip and mov pop or dec fs inc je lds fbstp xchg adc or fild popf movsl cmp or dec pop in add or pop xchg (bad) pushl and cltd cs add dec pop arpl iret dec inc cmp xchg int jnp outsb jb jl aaa out push decl add mov arpl jnp aam jnp cmp adc ret cwtl and xchg push pushf add xchg test inc cs mov push scas add movsb les lea cmp pop int mov test out ret or fnstcw out push push test lds xlat cmp dec lret loope fisttpll movb sub lods icebp movsb mov insl dec daa (bad) rcr gs int mov cwtl xor adc and pushf adc (bad) mov dec sbb pop ret cld cmp repz inc pushf rcrl jnp xchg lret test sbb cmp arpl inc jmp rcr xor jne rol out test lds cltd test jns xchg mov pop dec (bad) mov pusha push fsub leave js test lods pop xchg push shrb or out mov int3 or icebp mov call test insl xchg rol and movl jns sahf mov sbb push fxam jg stos test push mov or xor test xchg push lea leave mov test fwait aad sbb jle pop mov stc dec xor lods mov sarl sub jmp ret mov (bad) (bad) pop movsb in sub test test mov xchg ss fwait data16 xor pop cmp mov jmp mov cs daa lret fldcw mov push clc sub sahf dec sbb jp sti popa push inc (bad) scas fdivs mov les mov je scas fisubr jnp sub cld jo loop scas and fs test repz cmp mov cmp iret sub jno jb and rorb stos push aam sbb fsqrt test arpl push enter and sbb mov arpl nop aad cmp lcall inc hlt dec mov pusha mov loope mov xchg subl mov or imul iret sbb or and inc pop aam add (bad) stos dec fnsave and push jb repz lcall shrl xlat in rol lret fwait adc fs xchg add loopne movb pusha mov popa add dec mov mov enter jle mov pushf xchg jmp mov movsb icebp cli arpl dec mov sub notl test lret inc shl pop push mov imul push adc pop pop rcl lret add mov push pop xchg stos adc xor fsub push pop jne jbe pop mov mov fidivr jns add xchg add lods decb add xchg or sbb movsb mov cwtl (bad) outsb pop insl lock lahf (bad) xchg scas insl pop mov icebp add ret cld mov test hlt add dec jl add mov sarl push push stos je mov test cmp aad jg and popa test push add xlat daa rcll jae aaa mov jnp in les js jge gs push dec cmp inc sub inc jno sahf bound push cmp orl or repnz or ja fidiv adc std out aas xor int push adc mov dec push adc out ljmp lods mov lcall push (bad) lret sbb out and scas pop xor dec sub stos mov cmp lea or cmp enter adc and or fs jbe dec mov mul sbb divb in push icebp pop adc fidivrl mov cmp fsubs add push add pop jp add pop inc mov xchg push sub js stos cmc aaa mulb inc sbb push movsb (bad) dec repnz (bad) inc cmovo mov ficompl outsl call mov or into and cs out dec bound pop popl mov xor je push jno xor (bad) lods mov mov pusha xor loopne ds insl adcb shrl (bad) sub cltd inc clc add mov test push aad jb cmp rcll push jmp enter or repnz (bad) adc (bad) lret xor jb cmp js push enter xchg rorb fs and mov (bad) jbe xor arpl jbe ret or push xor mov mov xchg js std push jecxz sbb push cltd cmc jbe xchg pop adc inc push lds out push inc jnp loope inc fdivrp pop das jl sub cmp mov mov in mov cmp mov add inc cmp test jl fldl cmp lret ljmp mov icebp mov cmp sar sbb sbb pop mov or jl addr16 and test xor insb sbb sbb add lahf std xchg nop xchg inc dec sbb clc movsl mov mov push xchg ret int3 arpl jge xor or xlat shlb loop adc das iret or cs stc push loopne xlat jbe faddl push pop shrb pop jbe jecxz sahf or lods pop inc fs adc sbbb adc mov das add xor inc es sbb imul jecxz or mov sqrtps jp inc sbb jmp push pop lcall xchg rcrb in inc jmp lock aas test pop in inc push xchg movsl andps imul mov in (bad) fsubs enter loop and cmpsb mov mov cwtl cmp xchg int add mov out gs dec and cmp out in lret sub les lea (bad) adc pusha popa cmp pop (bad) lret jno,pn (bad) gs ret mov mov mov daa push sbb add (bad) sti jne mov xor push insl loopne notb xlat sub pop push xlat xor fwait add loop cmp test shll cmpsl adc adc lret sbb lret ret lret mov adc jle and dec fcmove sbb nop lods sbb xor fsts push mov in cmp add mov pop sar cs sub loopne,pn sbb cmp xorb insl js divb insb addps js shrb imul pop (bad) bnd push sarl ret sub rorl lea stos icebp (bad) js pop repz sbb inc adc les adc cmp mov fwait or xor cmp sti mov cmpsb and aad fsts or (bad) nop mov inc push rorb aas dec imul (bad) in or je pushf arpl push cmpsl fwait pop and call and imul mov leave push loope mov popf sarb (bad) pushf imul pop in stos fistpl fisttpl into sbb xor arpl dec in dec sbb sbb mov mov shll rorl add enter imul stc jl aaa mov ret jne repz bound or cmp aad (bad) cmc xor ss imul fwait and cmp ds mov lds fisttpll outsb ja imul mov stos loope mov lods mov push ficom add cmpsb (bad) mov mov fwait in push xchg add lret lahf daa xor mov mov add mov push ds jle lock icebp mov stos lock adc add add sub mov out mov push in ja and (bad) jae (bad) (bad) pop pop in jns (bad) popf jb mov (bad) sub mov xor push loopne pop (bad) jnp mov pushf mov aam fsubs jo sti xchg push aam sbbl jae pop inc xor mov mov or into xlat sub dec xchg or adc ja xchg es (bad) push sub repz into gs push push inc fsubrl nop andl les xchg pop aas and inc call ja sub pop cwtl insb in neg les fbld and movb jmp pushf and (bad) stos call add mov dec dec shll test xor jmp jns mov jg ds int mov adc mov mov or xor mov lds push clc insb scas fdivrl xchg cmpsl mov shrl aaa gs jnp cwtl sbb push fnsetpm(287 jnp dec cmpsl inc js std cmp in lea dec inc jle out aaa push xchg push or fdivrs jb das (bad) mov push push popf ljmp into pop orl pop sbb cmp sbb cwtl or bnd push stos leave and dec pusha sbb in jnp xorl push add dec jge cltd sub popf or shrl dec int mov test jecxz ds mov pop push arpl pop inc sbb xchg sbb inc shlb ret cwtl jo push or loope outsb sub sbb (bad) mov (bad) sub push push push lods jns frstor test pop dec stos jb aam (bad) mov jne (bad) fadds popf mov add mull frstor idivl mov stos mov sbb (bad) shrb iret ret and inc leave adc outsb mov ss mov inc in and jle and mov mov je es mov (bad) rep fdivrl fcmovb insl dec lret mov stc rcrb add movsl dec mov push xlat mov pop fldl2t jg loope jecxz xchg (bad) sub cmp in xor push lret les mov adc push rcrb dec push adc xorl xorb mov fcoms jmp jno push mov xchg dec mov popf cmp pop inc icebp test ret ja sarb fmuls mov xchg je sub xchg (bad) pop push test cmp sub ja sbbl pop pusha insl dec add lret imul stc daa imul cmpsb inc jnp add out std es test mov dec mov cmc fdivl inc roll rcll mov out inc fnstenv sahf pop jge and lock dec out dec and nop add fidivrl mov jmp aad inc pop xchg mov jle inc mov aad push test adc ljmp and faddl lods xchg dec test loope cmp ficompl dec into or (bad) push int3 hlt movsl movsl cltd paddq cs (bad) pop and movsl lret dec mov mulb fiaddl or jb mov popf gs adc daa jmp cmc stc inc dec fistpl mov gs gs push sub sub stos lods cs (bad) sti xor call push dec addr16 dec mov ljmp sub adc ret std int3 cmpl das rdpmc add sub sti ret ret lret addl pop add lret push xchg lock sbb push cmpl sbb dec cwtl jl mov and add dec jle rorb sbb fist test cmpsl popa dec pushf mov repnz fdivs mov ret ret push (bad) mov mov mov push and adc pushf dec pop imul pop mov add jbe out fild sbb mov add jp push pushf lcall dec push out lods gs jmp add push loope aad push xor pop dec sub scas pop sub xchg pause adc jae jecxz sbb push pop lea imulb dec jmp xchg inc out or and jne add cs dec push js add out jae mov dec pop xchg roll fistp mov mov icebp dec jb pushf jo pop pop jns jle mov sub cmp in shl mov ljmp mov fninit gs fdiv mov js clc sub pop les cs pop xlat inc sbb (bad) or stc int3 pop clc xor add pushf add push dec inc sahf push outsb lea jns orb and pop lods push xchg xchg add lret sub fcoms sub bnd xchg mov pusha jl insl cmpsb mov pop xlat dec stc add fcompl mov es pop outsl jo repnz mov gs andl add xchg jecxz jp jae fwait sbb outsl cmp fildll outsb nop jb pop pop xchg inc call inc pop jno leave add adc push xchg cltd add xchg xchg pushf sbb mov lcall sub and rcrb mov sub xor xchg sbb push add (bad) lock and mov jnp mov adc dec xchg fstl call sub push sbb sbb fsubrl ret pop sub xor cmc repnz pushf in (bad) mov sub pop clc sub inc mov das movsb mov dec popf jle arpl ret fnstenv jle rcr cmp icebp (bad) xchg pop inc pop out lahf aaa pop xor pop div push add inc test sub sub aas inc push xchg jp lea pop fimull or roll xor stos sub push xlat push pop movsb loope fisttp sub in fdivrl adc inc outsb out test add out sub bound pop cs pop scas dec sub out or std gs stos or sbb sbb inc xor insb jne imul mov pop sbb xor insl cwtl js dec inc or rorl mov pop sub enter jb sbb mov imul out mov das mov repz jns addr16 loop,pn enter sbb cli or daa mov and pop mov cmp (bad) rcl outsb xchg out outsb repz jg int3 xor leave imul fcoms push and popa arpl je in push popa ret hlt mov adc lahf stc leave repz mov xlat in push mov push inc sub ja add sti cs movsl adc mov daa add jb xor xor idiv mov pop adc rclb xor stos (bad) icebp je leave mov sub adc (bad) adc push and repnz mov dec push lret jne mov (bad) aaa xchg orl add (bad) cmp mov fstpt dec cmp and xor icebp pushf or add shl add mov xor call xchg lret mov (bad) mov xor dec jno jne jnp mov mov mov mov jno sbb jmp xchg (bad) out ljmp test adc repz pop mov xchg jge (bad) xor ja nop lea jno ja (bad) lock imul xor or je cmp enter push push cwtl push fistl jb fcom nop mov jb test (bad) scas sub sarl add lcall aad das aas dec xor fistp push mul push aaa lret lret mov jecxz dec ds dec js out mov dec push ds mov popa or pusha xor mov cmpsb lahf fs mov addr16 and lds testb sub xchg out push and cs fwait mov adc jle ljmp adc sub mov add (bad) repnz pushf mov push mov movsb lahf push adc inc jae popf icebp ljmp mov dec mov and in out jg cmpsb ret push nop addr16 scas xchg xchg hlt into mov add push lock adc jmp test stos cmp mov ficomp and mov inc flds rol addr16 xchg mov les push cmp jl sub inc mov pop push in rcrl or in and shrl inc aaa ror jns outsl xchg clc aad shlb stos cmpsb xchg sahf xchg mov aad loopne pinsrw jl xchg inc jle test in cmp fbld sahf inc mov mov xchg mov int3 inc (bad) mov and (bad) clc pop mov (bad) xor in in mov iret lret xor aas ret loop xor jge icebp das add jo cmc push lret push jo inc ja adc pop jl xchg ret xor pop daa sbb cmpsl jo inc push push rorb sbb (bad) jb adc shrb mov nop leave inc jmp inc add ljmp test int mov (bad) or xor das dec dec (bad) cmp sti dec jnp ret cmp adc push ror cmp xchg or stc push pusha lahf fstl inc popa inc mov push cmp insl add ds mov add add sbbl xchg jge sarb out adc loop cli cmpl lahf pop orl xlat cld inc (bad) pop xchg add int jo insl cmpsb xchg xchg lcall outsb add or xor leave push cmpsb gs push jbe addr16 loope cmp pop dec in dec stos mov fsubrl out ds arpl cs xchg imul (bad) leave es pop jb fsub jbe dec inc mov sbb jne mov pop xor in mov and pop cwtl test pop (bad) popf push push push arpl push and pushf (bad) cmp outsb fbstp (bad) dec adc mov fwait lods mov leave mov inc mov fdivl imul jmp lret push dec push ja notb mov fsubs jl inc repz sub lods xchg dec in add mov aad jae pop js lock mov jo aam popf jmp sub test cltd ds pop sti pop and insb xchg ret lahf movsb sbb push (bad) cmp cs rcll xchg test aad in out jns xchg and push repnz popf daa mov mov es hlt push cmp out adc cmp dec sub mov push xor inc sub jno pop fisttp xchg mov adc test (bad) dec push mov lods jne pop mov add adc mov mov sub imul addr16 insb cmp sahf int3 dec pop jle push pop in add sub (bad) push inc add ja cmpsl dec mov cmp or mov xchg out addr16 popa repnz int3 mov fnstcw sub jg lock (bad) xor aam decb mov in faddl lret jb jbe pushf jne sbb jecxz xchg rcll add add jl cmp dec inc fisttpll scas movsl divb cld sbb inc cmpsl scas arpl mov clc in mov das mov cmpsb repz ja popf jnp sub xchg les in lret or ljmp xor iret pop fcmovbe mov fisttpl xchg in xchg popa fnstcw aam xchg mov test in clc push and adc ret das pop dec xor dec xlat and aam lret xor into cmp push and mov and lock dec je or (bad) xor and imul pop mov repnz sub data16 jp mov mov push ss cmp or mov cltd adc inc clc test test cmpsb jns pop loop mov sti (bad) jo cmp pop fmuls or push push jne sub roll pop movsl pop or xchg add cli jne fnsave call jbe push adc add jno xchg mov movsl push fstpt push mov das (bad) shrb mov int or es jne ljmp shlb mov out iret sub addr16 inc mov call fnstcw repnz nop dec cmp leave jae sub cmp push and fcoml mov (bad) divl xchg incl mov adc dec inc mov push stc imul mov pushf mov sbb adc lret dec cmp pop push addr16 adc lods ljmp sbb adc loope add fdivr and ret and rcrl xlat sub sub nop/reserved fs ja or ja add cmp out (bad) jmp push hlt mov push (bad) outsl dec mov push (bad) or sarb movsb pand std xchg cmc and or sbb cli jg jmp sbb scas inc int3 idiv and addr16 lods fwait dec ja push outsl lret sub add imul xor fs jl sbb imul ja sarb inc fwait xchg inc arpl shll stos insb mov add inc push and mov mov inc inc push sbb or add hlt arpl cwtl test cli sbb aaa inc cwtl aaa mov out sub movsb test and xchg pop and in push inc out add divb mov push mov inc mov cmp jno,pn adcl paddsw cli push int3 xchg mov dec inc cmp add pop test into jmp mov sarl out dec loopne repz lods paddsb rol aam inc pop (bad) aaa pusha add (bad) jb cmp leave push push jb (bad) jne and movsb lret aam loop popa paddusb and bswap sub mov fiaddl cmp xchg dec xchg mov jge sub lock lahf faddp into jae loop loop out xchg dec jmp xor int3 nop or into mov cmp and cmpsl loopne and out popf fisubr scas pop pop aad jns cli invd sbb aas repnz push xor pop lahf mov sti push pusha scas cld out push push arpl popf cltd mov push mov popf addr16 mov outsb es jne fsub shl mov jmp les and add data16 sbb aaa mov pop mov push add jae push pop mov cmpsl shrl fdivr sub and xor out mov mov dec xchg daa es xor ljmp push cmp daa dec adc sub (bad) sub mov sbb push and pop ds push das mov addr16 xor fisubl addr16 and lea andl loope (bad) scas dec xor adc ljmp or mov aad jns mov adc lret scas negl das xchg into decl jg (bad) mov and bound push sub xchg lahf arpl inc (bad) jnp out popf dec pop cmc out fidivl sbb xchg std lret push je in inc (bad) xchg xor jo mov (bad) mov out add hlt adc xchg xchg push mov xchg ja lods bound cs out push gs adc jmp mov repnz insb lcall mov and add pop xchg xchg enter push xchg shll mov jle xor (bad) jmp push cmp pop int3 andl inc js sar mov test (bad) fcomps leave (bad) inc lahf shr into sysret adcl idivl cltd stos cli mov test adcl cmc mov cmp add pushf movsb lds xchg negb inc (bad) inc add test push (bad) dec or out jne xchg mov pop cwtl dec lea mov outsb xchg dec js hlt inc mov in inc ss enter sbb and div add inc cmp mov fsubl mov pusha inc sub loope jnp xor lret (bad) jmp jns pop sbb movsl rclb gs push mov push push movb je aaa scas flds popa dec xchg lock pop repz sub jno aad mov cmp and mov popf jae mov sub std mov scas ja aam and das out das cmp ja lds fs dec dec outsb jmp dec rol ss les dec scas loope rcll jno mov xchg add lret add cmpsb sub mull inc scas in jmp sub dec adc scas scas add cmp dec cmp adc adc aad mov pop pop repnz lods mov and mov jecxz (bad) push std scas scas pop dec ss mov mov (bad) cmp clc rcrl pop mov mov cmp test inc mov mulb xchg (bad) sbb inc iret jb subl repnz aas jp lock divb es sarb movsb xchg xchg sub (bad) jae movsl mov (bad) pop sahf flds dec push push and sbb ja aam idiv mov mov cmpl add mov cwtl sub fildll or mov lea or inc insl sub and shlb mov imul xor ret xor xor rclb enter lock sub push pop and adc in ret rorl rdmsr xor pop out sti pop sahf add add mov ds hlt and lret sbbb add fistpll cwtl lock out shrb arpl inc mov fxch jmp out mov push sbb mov pushf sbb jo jo push (bad) out xchg sbb xchg (bad) jmp jge adc mov xor icebp and je (bad) jl out adc inc dec inc adc mov xchg lret out fnsave (bad) xor lds mov xor fisub out (bad) test xchg cs out xchg xchg pusha fmull mov mov mov (bad) adc enter xchg inc std cmc hlt inc jns dec xor clc imul sarb sub or sub (bad) dec add popf mov insb xchg sbb in je and xchg xlat dec in icebp push pop (bad) dec js xor rcll repnz pop mov das in inc pop inc dec pop xor inc push lret pushf adc ljmp cmp push xor fwait ss mov pop fadds in jmp push (bad) fisubrl push add push dec dec arpl jns stc cmp mov hlt lret mov pop sub aad mov leave pop sarl add in inc cli inc jns xchg add dec montmul cmpsb add out inc cmp jmp out add dec fnsave or push sub nop ret in mov bound repz orl movsb xor int3 fildll jecxz lock and movsb jbe mov mov stos inc mov pop movsb into pop dec lret jg out mov das clc dec (bad) mov sbb xchg dec repz std sub and cs or sub xchg cmpsb les ss int aaa (bad) jo repnz lea fcomps xchg out xor push and mov sub dec cmp add pop ret push dec inc jl ss add xor jno push (bad) and push dec popa out push mov (bad) xor sub fnstenv or lahf jecxz mov into aas inc mov arpl lods adc xor pop sbb mov jns add insb jmp mov sub daa pop xchg and xlat dec ss test mov cli cmp lea push adc push aam in jp jne ljmp jo ljmp enter out (bad) (bad) push sbb cltd adc mov jo js in pop lahf xlat fwait into stos je sbb or movsl sti ss xchg jecxz mov mov bound add sarb mov stos movsb inc xchg cli (bad) pop stos inc enter fdivl xchg pushf cmp and xchg xor mov mov xor addr16 mov out negl idivl inc je movsb repz sbb sbb pop cmc push (bad) imull mov cmpsb adc add xchg cmp (bad) nop pop nop mov stos jp pop jmp lds dec imul fstpt mov int3 dec lret inc pop dec lret gs jmp inc push add nop sbb xchg mov fwait adc enter arpl imul dec cmp aam mov xchg adc xor cs dec pop jbe sub dec mov out (bad) cmp add mov adc nop pushl inc pop xlat loopne adc (bad) rol fsubs cltd xor pop test stc lea or mov push popf std gs mov loope loop or mov clc rcl mov imul add pop adc push pop inc inc imul xor in icebp das mov js mov add (bad) clc mov mov dec jp add pop (bad) adc lahf mov rorl ret mov inc js addb mov mov cmp sbb movsl mov aad xchg push adc or sub (bad) fadds dec push adc xlat mov adc aam cmpsb sbb push ljmp mov notb mov cmpsl cmp push imul dec mov adc fnstenv and fwait push and mov xor stos leave push push ljmp popa cmp jo inc sbb fsubr repz cmpsl iret and xorb inc mov cmp in pop mov adc add popf addr16 pusha sti sarb and mov testb es mov cmp add cmp stos clc xor repz mov data16 add leave inc xchg inc fidivrl js sbb insl jne mov xchg in or mov sbb adc enter jp js xor and arpl xor daa hlt insl xchg or mov mov mov push movsl test and adc repz mov pushf movl (bad) jp adc jmp cmc rcrb cli xchg add jecxz jmp dec push shlb rclb popf xchg mov cmp pop ds add or dec insb push fwait loopne pop lods and std mov mov mov jb pop xor xchg pop test xchg idivb and leave xlat iret mov fmul es pop mov in dec xchg sub jbe mov or add xchg fistpl add int3 loopne scas jns mov mov je jbe adc xchg inc mulb push sbb adcl push jecxz dec xor mov inc xchg rcl jle xor jecxz cmpsl jecxz outsl pop fucomp mov ds xchg cmp or sar push push sbb call fwait je mov xlat call (bad) in lock cli cmpsb stc clc cli insl out add in pop and push mulb popl add es cmp ficom jbe mov setl dec daa loope test sbb orl vpsrlw dec sub test lods xchg xchg mov jbe mov jns fcomps outsb lret or push mov jp pop mov out out cmpsb jge push adc sbb icebp fsts sti dec sbb shlb mov mov push mov enter sar mov jmp cltd xor bound add int3 jg pop ljmp mov sub or adc add pop mov and sbb adc pop (bad) sub push enter add nop ffreep popf mov insb dec mov dec push cmp iret jge out repnz sub dec imul sub pop pop test or test fsub gs popl push mov loop adc mov sub sahf adc rcrb fbstp push jge arpl or inc mov lahf push sub out xchg ja or in pop mov outsb inc jle repnz add adc jp or std sub cmp sub pop hlt mov das scas inc jp iret insb pop inc jge inc arpl add cmpsl inc aam into xor pop enter nop andps outsl cmp bound ret dec mov push inc mov sbb test icebp adc xor in jge ficompl (bad) vpsubq sarb xchg xor inc stos (bad) aas test outsb add insl loop adc push dec inc push movsb out push push xor mov pushf xor cs movsb mov repnz xchg int mov or pop bound dec in pop push pushf dec out jl mov movsb pop test push repnz imul xchg insl mov cwtl cmpl lahf pop lods in sbb dec lret scas stc mov das mov pop lahf xor mov scas mov rclb inc sub pop xchg xchg sub std sub and push lret scas pop adc je call jle xor nop sub xchg push data16 aas les aam jecxz out mov pop sub cmp pop push mov and pop out mov sub and mov (bad) xor clc cs mov adc (bad) xor cs test lock mov (bad) pop jl cli sahf add and or and mov out push sbb neg and and mov fwait xchg mov lret push mov std call jmp xchg pop ljmp adcl mov out js inc inc cmc sbb (bad) flds dec sbb arpl icebp and je aam pop fcomi subb pop test sub pop add add inc icebp jno add xchg jne xor fcomps lret es stos inc adc cli fisubl xchg inc xor rolb pop loope mov push je add jmp (bad) sbb popf lock xor or sbb je outsl aad les syscall mov movsb fidivrl xchg push nop xor leave mov bound sbb loopne,pn rcrb cmc sub mov pushf std aaa adc sbb scas pushf sbb out or imul mov cmpsl jnp dec pop addr16 lret imul jle cmp popa sub mov (bad) cli fdivl rol sbb add dec repnz fimul xor add lock xor jge pop cmp imul fisubrl xchg cmp xchg or lds cmp dec cli jae sub jbe (bad) movsl inc pop xchg pop repnz dec pushf shrl mov cltd push jg jle popf aas es int3 fldl2e inc fucomp and and fwait ror cs jecxz arpl pop aad push push adc cmp sahf mov ljmp or cmp je sub lret xor mov jge imul jae movl int out out aas mov sarb pusha jmp push dec sub mov or ret lahf scas das cltd in aaa mov inc jbe pop jecxz (bad) inc stos mov (bad) popa sbb mov pop int (bad) xor pop sub sub imul (bad) xor aad adc scas aas add rclb cmp pop xor xlat test adc or rcr cmpsb mov cmp mov xchg pop popa pop inc adc addl insl lcall xor xchg cwtl dec adc push test mov sub (bad) in jge jno sbb add push enter popf xor jle test enter inc insb movsl mov push jns and sub (bad) dec pop movsl sbb ds cld jecxz lock repz lret mov adc ja adc mov popa push lret mov jge jmp pusha lods xchg scas stc add pop mov pop mov andl cld das clc dec fiaddl cwtl cmpsb mov loope push push ficompl loopne xchg insb jge dec outsb insl push stos outsl test mov or cmp inc adc cltd sub daa xchg inc dec arpl (bad) call push add sbb imul movsb push loope xlat arpl enter mov push mov stos or inc mov fwait outsb mov maxps push das pop xchg and outsb rolb pop jb cwtl lods xchg stos pusha sbb mov stc jg in jp into sub sub scas mov cltd dec ds jb jmp ret push sub lds fidivr sbb adcl stos mov je push mov je data16 mulb xchg jl push adc xchg sbb sub incl mov xorl jecxz add inc sbb adc dec and xor sbb sub xchg fmuls fild sub lea pop jae sub xchg dec fidivr mov or cltd call dec (bad) inc pop insl add dec decb sbb adc sub cli push inc outsl nop adc sub sbb (bad) lods jl sbb xchg cs mov sbb dec fwait les fcom insb lods cli sbb sti xchg or adc pop mov jp into mov dec cmp movsl cmpsb pop sarb incb sub fisub lods mov cmp aad clc in test sbb or lcall mov jb loopne test mov (bad) cld push xchg sbb ficomp sarl adcl mov xchg in jae dec imul jb orb inc in cli insl (bad) xor xor jb stos inc mov jns mov shll dec mov mov push cs (bad) xchg mov fs mov fisttpll jnp mov fcoml push jnp ljmp mov lret (bad) cmp icebp pop int3 adc adc rclb lcall test (bad) push ja jo scas or mov lods push cwtl outsl fstpl aam or add xchg push and test mov dec jmp lahf adc adc jecxz in ss mov inc mov rol xchg add les and pop xor mov or pusha es repz xorb movsl iret loop sbb lahf in dec cmp or or xchg lods mov fildl or xchg es push mov sub xor (bad) lret dec inc lds les cmpsl outsb jecxz lret fisttp or cmp inc push xchg mov repnz pop jp in (bad) loop jbe mov mov cmc adc xor subb shlb push repz cmp stos inc arpl pop jb add cwtl push lods movsb pop mov xor popf enter scas mov cli sub out add fisttpl je scas xchg push cmp inc mov repnz or pop dec hlt pop mov jne cwtl rclb loop ds cwtl sbb ficoml test je xchg and ss outsb test jecxz test test repnz cmp in js sbb xchg push mov mov es cmp mov mov in int repz jne lock les mov cltd clc dec dec adc in insl scas cmp ljmpw test jno adc and mov lods sbb inc mov pop les js mov add movsl mov sbb popf dec icebp (bad) mov repnz das mov fimull mov divb jp inc mov mov nopl and jo jb mov mov mov xor popf pop jb adc inc int or jg cmpsb std fcmovnb (bad) mov in pop mov jnp sbb and in (bad) xor cld add lock rcrl sbb popa (bad) cli sbb (bad) pusha data16 out jnp mov lcall or inc xchg xchg mov pop rcr repz push pop rcll pop cmc cld cltd cmpsl xchg sub push or sub mov dec in pop inc fimul add ljmp add int3 jbe pushf cmp mov xor pop fnsave xchg sub cmp repz sbb push push shlb (bad) sti (bad) pop fildl sbb sbb xor ljmp jl mov jne xchg es jb pop jns lds (bad) out shll jmp jecxz rorl adc and fs cmp mov dec dec insb test mov in jae lret dec cmc cli lods and sbb gs insl cmc rol mov dec dec movsb pop xchg cmp ret clc push mov lds mov (bad) dec add xor in or cmp xor jecxz jl push lods rcrl clc inc xchg or mov xchg sbb xchg and and loop and in fcmovu pusha nop wbinvd fstl lods (bad) ficom jne push cmpsb jmp inc pushf cld dec dec jmp lret pop icebp adc lods lcall scas (bad) mov jg ss adcl (bad) jb ret sbb clc mov dec and movsl cwtl cmp jmp jl scas add aas cld rolb (bad) in cmp cmpsb sbb dec pop push xorb adc mov mov jb xchg ret pop mov fdivl cmpsl arpl dec jge jo pushf xchg or xor cld dec mov pushf sarl adc xor jae xor jbe cmp xchg bound outsl mov mulb or pop cmp mov push mov cmc les imul inc push push fcmove adc cmpl mov ss jae icebp jg enter scas jge into or push std pop stc mov xlat dec xlat pop popa jle cmp fisttp xlat pop xchg repz xchg dec bound sub push or (bad) fild sbb xchg (bad) fsubrs push jmp lahf inc sub inc jmp in pop dec (bad) xor sbb aas aas nop adc popa or sahf mov loop cmp mov sub and sbb repnz in insl insb imul jmp outsl pslld fmuls push (bad) xchg lods incb add or jl cmp cmp shrb pop imul jle stos nop movsl xchg lods and inc inc lds xor jno mov add lret call ror lret sub dec lret pusha clc mov fwait in imul xchg fs pop jo addr16 xchg lea or jb idiv cmpsb pop inc mov out cmp fidiv xchg push xor popf mov add pop pop mov mov fsubrs daa mov pop sbb pushf out sub scas mov lcall arpl sbb xchg xor cmp inc dec int3 movsl in cmpsb bound arpl inc or (bad) test enter es sub add push lods inc ret jno movsb out ret fimul jo wrmsr add in jp cli add fs dec test jl inc cmp and movsl test mov lods pop gs jl fs inc aam minps fstpl call mov mov (bad) mov cmp inc xchg cmpsl mov shl add pop lea xchg xor or push rcll adc xchg fbstp lret mov insl sbb cmp sbb xchg dec xchg xor sbb in mov xchg mov ljmp jmp lods xchg or mov dec cltd inc scas imul xchg adc ret scas mov jbe jbe insl fiaddl andl insl std imul add jl fnsave or imul repnz lds mov out jno call repz adc cmpl loop xchg scas sbb and std mov outsl iret popf fs and sbb pop clc scas jle insb js or fisttpll mov mov pop xor lahf mov cld or xor jp hlt inc jecxz lret dec lret sbb inc into push aam test add sub sub scas imul fldt mov out insb sbb das enter jle gs mov repz out pushf mov (bad) xor sbb dec add push mov dec mov test aad fdivrs clc mov sub and (bad) sarl pop lea data16 pop jecxz inc add mov ret test jmp fwait iret adc idivl (bad) mov pop (bad) mov add jg enter test and sbb shrb xor data16 sti out mov cli cltd push jle cmpsb sbb pop xlat add ljmp clc in push and sbb mov xor ret cmpsl adc push aaa js xlat loope mov fndisi(8087 xchg inc xor adc or mov push shll lods in push cmp adc mov push insb pop or mov adc (bad) int3 sbb dec push ss sbbl cmpsl push dec cmp push xor adc inc cli push jmp in das leave dec lahf xor insl push xor ljmp pop aam xor mov imul leave mov xor into mov cmp mov ja jb adc inc (bad) lock (bad) imul mov inc mov pop loope dec dec insl push adc xchg and test lahf outsl hlt es pop imul adc sbb adc sbb xchg in (bad) mov (bad) xor pop xchg push jbe cmp pop pop sarl mov pop aad cwtl fisub pop xchg mov xor loope cmp pop pop int3 cmp (bad) xor xor push fildl add push xchg stos pop popf dec stc fldt shll xor (bad) stos aaa push pop faddl sub push pop mov mov test mov ds fdivrp sahf mov jne or mov out sub mov lret mov fistl iret (bad) jbe inc aad js inc mov pop in pop jle addr16 dec lods cmp hlt clc inc dec enter push cmp mov push push in (bad) repz inc fsubrl push dec scas js jecxz cld push adc add clc outsb pop dec fwait dec xchg ja pop (bad) cmp lret sarl imul sub mov mov insb sub xchg popa out rorl cmp fpatan jae pop sub out sbb repnz dec test jo testb mov pop andl dec sbb test dec adc mov insl pop nop mov jbe jecxz das in js inc stc inc (bad) jmp and in dec cmp scas popa sub xor imul outsl je outsl dec push pop xchg mov test testl in fwait mov mov test sub int mov xchg and xlat cs (bad) mov pop add rcr mov push jb jl fs mov and push jg arpl cmp adc push jnp scas pop fstpt push xlat ret int jnp daa loopne stos dec jne arpl cltd (bad) cmpsb shll (bad) lahf mov shrb cmp and fs jbe push addl mov push jge loope nop notl add cwtl mov adc aad outsb lret xchg mov xchg jl mov out lahf mov cmpsb xlat inc sub xchg add inc fdiv lods aad xchg nop mov jmp lods aam lret xchg cmp clc stc jnp jb rorl clc or adc sti fbstp inc inc in ficomp das mov movsb btr loopne dec fldl ljmp aam xchg add or and cli test sbbl mov pop (bad) push fsubrl pop int3 or arpl mov (bad) push hlt jno fisttpll jecxz fstpl lock imul or cmp mov fldcw sbb push js jl cwtl fstl cmpsl sbb stos cs or xchg add inc mov rep fisttpl jne xor cld inc insl mov fildl sbb das pop dec fcoml sub cmpsb cmp andl fsubrl ljmp ds ja mov xor cmp (bad) mov and jmp cwtl test and jg push pop adc push xchg cs inc movsl mov shlb inc lret mov scas dec in pop fs movsb cmp and push aas leave repz push stos mov push idiv mulb mov add repnz jle inc ljmp push ficom insb sti add sbb jne jl cmc cmpsl out in jo inc into fnstcw (bad) fnstcw sub stc sti add push mov push mov adc sbb and stc ss out idivl stos and push mov sbb xchg in or xchg mov and mov imul xchg push push lea ret jbe popf out inc push or loop jl les pop add and dec dec ds sub rcrl adc xor pushf dec sbb push mov (bad) repnz lock mov mov xchg sub cmpsl ret lods cwtl jg iret les std repnz dec pop xlat pop sbb lock (bad) push add insl int3 dec movsl add and cmp xor inc clc ret sbbl push imul test fisubr das lods hlt dec adc adc push push lret mov mov loopne mov hlt jb in inc mov lods cli pop jae leave in in insb xor push mov call adc (bad) mov leave fsubl mov loope lahf jmp scas (bad) adc sub add (bad) dec pop insb jne push mov nop and shll loop addr16 lahf jno cltd push xchg pop pop lea daa (bad) pusha fmuls xor jle insl sbb jne test jnp xchg dec (bad) xor push xorl sti inc lods in dec jnp dec adc rcr mov stc aad lock dec mov es pop mov mov cmp dec sub xchg or sti push lcall jmp pop sbb jle aaa push inc xchg fiaddl das and dec call mov jmp rclb xor adc and repnz aas cld pushf add mov dec sub nop (bad) dec sub aam loope sbb repnz push (bad) jae jns notl stos inc (bad) sarb sub into mov mov adcl lcall lret repnz (bad) xor add and lods test std lahf out scas push (bad) cli jae cwtl jmp ja cltd enter adc add add lods outsb sub cmp loope sahf ret cld (bad) sbb lahf push lahf cli dec (bad) out push mov jge inc rcr sub jb cmpsl insl outsl shll xchg aaa in adc pop lahf pop loopne in repnz xor dec xor and jno mulb je mov dec jb push pop lods add pushf (bad) cmc iret mov mov mov xor mov cmp fmuls jmp mov jg inc dec xchg sub jmp xor xchg add clc adc sbb daa sahf stc and add xor jmp rclb js or sbb bound subb pop jg or sub or jg arpl outsb and add add mov sbb adc stos pop (bad) sti mov mov dec fidivrl fdivl pop mov and sub inc int3 xor out cmp repz movb out xor test mov mov mov xor in pushf pop lds rclb sahf into inc mov loope mov dec (bad) imul lahf ss push arpl lods loopne sub mov in pushf lds dec xchg mov popf subb (bad) mov rcrl jg shr mov mov rep and hlt xchg mov push push notb mov popa jnp jo add jmp dec mov jle pusha insb jge mov ds mov iret fidivl xor mov cld aaa lcall mov shl jb aam (bad) lds dec es into and push (bad) dec mov out and insl aaa iret cmp or cmpsb imul (bad) aam xor add cmp push ja and inc cmp xchg adc test mov pop mov stos in lret lea cmp arpl mov test jae pop dec leave jbe xchg sti add and addr16 rcll testl icebp (bad) or pmaxsw aam cmp pop sbb jp enter cmc sbb clc mov and in (bad) mov mov add aas add imul and mov adc cmp xor or dec (bad) icebp xchg ret mov xchg shrl push push in jns test sbb push mov push lret mov inc int3 pop icebp push dec stos mov clc xlat mov or cmp sbb cmpsl stos imul shlb out stos imul mov out out outsl out xchg flds aas push jg sahf and pop mov mov out out pop stos dec xchg add sub out adc pop das popa and mov aas mov mov (bad) jecxz in imul xrelease lods movsl pop pop mov jno pushl gs sarl cwtl mov pop fldenv push add pushf mov inc push mov mov imul (bad) mov jae jo sub xchg repz xor cmpsb jno and sbb push and ljmp lock mov clc mov iret in leave adc push nop out xchg lods fucomip mov or push pop or dec mov shl cmovae cwtl xchg loop rorl insb mov lods lds adc cmpl pop lahf jb push repnz insl xchg push ljmp dec jb mov pop pushf adc fimul imul aad xchg aam lds xor lock xchg into into test add mov mov sbb imul cmp scas arpl mov push (bad) sbb and clc (bad) mov xchg sbb test mov enter push push or sbb fucomip dec xchg inc insl shrb scas fwait lods rcll pop pminub enter (bad) (bad) sarl addr16 pusha xchg hlt scas mov cwtl jl insl scas repnz fstl cmp and negb int3 jge (bad) jl jmp xor adc mov mov sub in xor pushf dec cs incl mov imul cmp sbb imul cmp ficomp clc icebp stc add test fiadd fidivrl ret out inc enter cmp fiaddl rolb adc xlat ucomiss pop sarb mov out and mov sbb mov jne xchg adc sbb mov mov adc pop xor mov push aaa push popf sub adc rcrl xor sub mov (bad) mov loope xchg out sub shrl push adcb imul add fistpl lss scas jecxz,pt dec pop sub cmpl cwtl pop jns adc (bad) test repnz pop std sbb pop pop jmp aas xlat es scas cmc cmp mov popa and js popa sbb and or out int xchg add fist out sbb inc pop cmp pop dec rorl outsl out adc out push push jmp mov or fldl sbb lret stos push push push loop outsb mov xchg xchg (bad) sahf scas add cli mov sub push jae enter subl cmp es sbb dec sub inc lods mov cli mov pop rorb gs jl lret and adc jnp mov ret inc or push push fxch mov repz mov pop sbb inc pusha out sub movsb cmp aas jecxz lods decb and fcmovnu xor add testl dec cwtl nop push dec push and sbb adc pop push outsl sub or pushaw dec rolb test cwtl iret dec pop movsl roll sub or sub addr16 dec mov movsl xor rorb sbb mov rcll inc pop das xor inc pop ljmp dec cmp pushf pop insb daa gs jl xor stos cmp aad dec xchg inc daa nop imul aas loop jae out addr16 push add xchg ret push nop (bad) cmp sbb pop or sbb aaa sbb call xchg cmpsb adc cmpsb (bad) jb in test pop mov xor lcall xchg repz cld add int inc xor pop lock sbb lock stos in fmull inc sub add leave sbb lcall jo push cmp into js out jno rcrl test jno ljmp sub (bad) jmp pushf mov jl aaa xor bound clc int (bad) sbb mov push xor dec call push sbb pop fisttp push ss sbb sub pop faddl neg scas xchg mov loop inc mov or (bad) in xchg stos mov (bad) imul push orb add dec xchg or clc dec adc movsb shll fcom jl sbb leave dec flds ret in gs sbb (bad) popa push in idivl cmp test mov dec mov adc lds push push fisttpll xchg mov push repnz arpl lret xlat test imul or (bad) or xor shrl (bad) lods sub imul or stos dec xchg pop insb daa in scas xlat xchg mov mulb mov jb jge test mov lds xchg sub adc and xchg fcomip mov icebp ffreep js ja cmp cmp dec aad test inc scas and xlat mov jmp es daa adc inc mov nop bswap shl adc nop inc mov mov into mov jne pop push mov mov xchg push (bad) (bad) cmc in dec jmp cs xchg movsb je setge out ds dec adc inc pop pop psrlq xchg (bad) fdivrs cwtl call daa test mov xchg movsl mov pop dec inc fwait push jae popf sub xchg bound push loop xchg lret incb fnsave xchg aam enter out imul adc mov mov pop loop pop cs in (bad) (bad) (bad) dec pop fmull cld inc sub dec xchg outsl sbb movsl jp or js push addr16 into incl fs or mov mov xor xor sahf jbe popf xchg gs scas loop xor scas in lret ds pop sub sub fidivr or push nop out cmp add movsb test cmp cmp cld sbb dec mov loop jno xor mov out lea mov movsb xchg jno jns movsl jno adc movsb pop mulb and dec rolb icebp push xor xchg orl pop (bad) xor pop push pop addr16 inc push xor xchg mov mov outsl (bad) imul jbe push int3 dec mov inc pop nop fisubrl add test sub inc mov xchg cmpsb and outsl mov xchg imul loope mov jecxz sub inc data16 insl cli and data16 aam fcompl stc cmpsl popa mov inc push or adc loopne xor jge lahf test mov push xchg push sbb (bad) mov push and packsswb jnp cli lods into push push mov sahf (bad) (bad) pusha mov xchg fldt dec testb (bad) call sub sbb adc and cmp xor ja mov xchg push and js pop push stc xor and inc fs aaa sub xchg sbb or pop fcomi inc xor inc xchg xchg call mov push sub pushf daa dec subl mov push jg faddp mov jle mov lret out loope inc divl insb insb xchg loopne orl into in jecxz fistp (bad) sub dec sub adc loopne pusha xlat jg fiadd sbb cs push sbb (bad) ja adc movsl adc push movsb jl out std popf mov mov cmc addb jg scas in gs aad pusha xorl idivb add mov sbb iret aad push fild mov dec call test and mov add in sub call xchg idivl push mov mov sbb jle mov cmp jno inc sub imul push or incb aaa stos mov adc lcall addl jecxz insb and imull roll fdivp int3 icebp call (bad) mov add push push das xchg ret ret mov add cmp and sti cmp pop movsb cld jne push jp jno or sub lock (bad) lret movsl mov (bad) jg inc inc mov mov mov xor std push fdivs jle nop cmp mull stos insl or cwtl xchg pushf outsb add add rcrb insl xor hlt or sub test dec sub push stc fdivl mov xchg pop and cmpl cmp sar adc and cli in leave dec repz mov add sub cmp push pop xchg pusha inc cmpsb iret or push xchg fiaddl dec imul and dec lds in stos sbb addr16 sbb sbb mov lret cmp or sub xchg jns pop adc pop cmpl mov in cmp pop sahf int3 push lods cld add sbb movl mov sbb add sub clc push cs int3 xchg movsl pop adc loope rcrb jecxz ljmp cmpsl dec jo fisttpll mov (bad) xlat stos mov pushf mov jae mov cmp xchg clc jbe out rcl xor or mov xchg (bad) xor lods (bad) shll lock inc aaa outsl dec out pushf and mov ljmp outsb mov and mov dec repz sbb gs cs or ljmp mov cli mov sbb pop inc dec cwtl push mov icebp lock leave arpl cmp dec cmpsl fsubs pop imul mov jae aaa mov icebp jp xor movsl push nop mov jle popf mov pushf pushf cmpsl test les enter andl adc dec cmp jp pop pop clc mov sti add cwtl pop ja push push cmp pop add rcl jecxz mov pop add push data16 bound ret sub mov pop add and or or xor ljmp addr16 adc les mov or inc inc out pop pop jmp pop test cmc sbb lahf ljmp lods jb out add add add cld cmp mov xor js sub (bad) pop and jecxz jmp cmp sbb cmp add dec inc idivb inc xchg and loopne adc adc inc add sarb (bad) push mov fs seto and mov or stos dec jge mov test repnz shll mov std cmp dec test rorb insl shrb pop push rcll jmp je cmp cli lcall call fisttpl cmpsl mov int3 mov add mov xchg lea and push fcmovb xchg lods mov lock pop add mov sub inc adcl stos add push bnd pop jae ret mov xor and sub ss sbb scas pop or mov adc dec mov cli fisubr mov dec jecxz pop daa pusha mov mov add pop pop pop cwtl jge jb movsl xchg pop inc jmp ficom bound sub pop sbb cmc test mov dec mov mov mov lcall dec je mov leave shrl dec pop repz or lock stos (bad) pusha adc mov imul xorl add std and into in xchg (bad) jp les and (bad) dec insl cmpsl lock ret mov mov and fnop xchg test push mov sbb aam cmpsl sbb ljmp xor fidivl adc inc xor (bad) lea inc inc dec ja add adc sbb jae sahf cmp and xchg insl cs lahf js push sbb imul cmp mov add mov mov out and js pop fs out mov pop scas add sub push or cld pop lahf lret fistpll mov ja lea sub push outsl xor ds cmpsl mov or rolb loopne inc push in fprem1 leave pop inc jge mov scas jp xor es add mull dec stc cmp fs insb mov jle int push pop lret cmp ds loope in insl push dec dec cmp pop ja pop xchg jp sbb and insb jl fsin mov inc sbb not sahf lods push dec push fmuls bound cmc jo jl jae push cmpsb (bad) mov dec gs push pop stos out or fcomps xchg sub cmp jp add sub hlt mov jmp leave mov popa js cmp jecxz cmpsl sub push jmp in push in mov mov movsb scas mov jmp xor cs mov sub adc mov fs pop xchg jns int push cwtl jne jle mov fsts xchg xchg xor cs (bad) mov xchg call and sysret std mov (bad) int into mov push inc (bad) data16 add movsl lret jg popa sbb dec ss scas pop in push mov sub (bad) sub (bad) out mov (bad) cmc xchg xor scas xchg cmp aad dec cmp pop in into out sbb inc push and popf (bad) aaa ret jae mov inc pop inc cmp stc cmp mov movsb jp xchg mov addr16 pop repnz xchg ss ja insl inc scas shlb stos fbstp push xor jns aam and jecxz mov dec cmp dec xchg fidivrl lock cmp js and inc insl inc jmp mov aad push aaa sub ficom mov jecxz mov loop push push rorb adc pop aas inc (bad) iret xor add cs inc lock lret mov ficom and fwait mov psrld add dec loop pop stos push out ret test sti add xor mov xchg sbb fwait inc das leave cmp in aas pop (bad) in jp pop and ljmp push cmp or cmp pop cmp subl jge pop pop cltd leave mov pop shlb add sub push fnstsw faddl dec or iret pop jbe mov out loop lods mov sub push clc shrl xchg mov add add jbe sbb xlat push adc in je call sahf push movsb popl fld cmp and in jnp lret and inc ss fnstenv cmp mov push imul mov orps sbb aaa jge cmp repnz mov in repz xchg lea adc sbb inc push jno adc popa loop (bad) push push jae adc jmp adc jecxz adcl pop iret dec jns imul adc mov dec lret js int daa xor test push (bad) fxch dec cld push (bad) xor jge lea pop jno orl test fiadd mov sub adc cld fild sarb xor fstps cmp mov fdivl jg movsl cmp fistp push or aam lods out ret (bad) repnz sti aaa addr16 pop inc dec mov mov jo mov out adc or rorl or sub (bad) out lock mov pop dec mov jp cld rorb push hlt std add je arpl fstpt xor outsl inc enter in cmp xor das lds adc js insb ja adc orl fstps (bad) dec mov lahf notb lret negb outsl mov in and (bad) addr16 repnz xchg jae jle lahf jbe,pn idivl mov imull fucomip inc or pop xchg leave jmp push cmpsl in dec pusha cmp dec mov inc push lods inc xchg mov cli xchg jmp mov pop push sub out push pop jg,pn lea aaa or mov and mov push pushf pop adc xchg in lods push xorb jae gs clc mov mov jle roll loope ret push loopne imul dec int or xor aad movsl ljmp xchg das cmpsb mov and aaa les into insl or lret cli test icebp inc or ret movsl jne pop ficoml out mov sub loopne cmpsb insl testb mov mov mov sbb cmp movsb sub dec daa add jecxz xchg mov mov sbb pop (bad) or jl push sbb mov sbb int3 sub or mov les sbb shrb daa xchg mov sti jae xor inc mov cmp push mov ret jp xor xor xor cmp stc mov out rorl cmpsb add jne loop out inc in push jge add and insb loop mov sub stos add sbb gs and mov movsb dec adc faddl scas jb pop mov jge xor cltd das (bad) repz adc loopne in outsb lods add fdivr mov in dec cmp (bad) lods test jecxz xor and adc ss fucomi xchg pop mov pop in sahf pop push hlt xor mov push pushf out mov xchg pop movsb rclb pop sub stc pop cmc lock mov xchg and lret aad and ror jns (bad) ljmp int movsl es sbb jle and or fs xor mov lret incl xor sbb or and add or xlat xchg xor sti (bad) out arpl jo cmp lds scas shrb jp lods (bad) or dec aas mov pop xchg jg and dec push scas cwtl out std fstps and mov jp and pushf shlb xchg std push lods pop out cmpsl pop enter inc dec bound push test in daa push jmp in test push divl (bad) mov mov roll mov sbbb idiv cmpsl jnp fisttpll add sbbl push aas mov jl (bad) push (bad) pop mul mov adc ficomp stos stos fldcw push pop push inc push out xchg push mov mov test mov addr16 into aad mov and or or jae xchg jbe in fcmovnb cli inc mov add cmp dec roll sbb movsb xchg fadds fstpl sub inc insb mov test (bad) push inc stos xchg outsb cmp sbb jl jae clc mov add add xchg arpl pop mov ja or xor add push cmp (bad) faddl sub adc mov stos mov jbe push inc or jp mov imul ret mov push das stc sarb fiaddl stos int jnp test mov mov data16 or add sbb cmpsl out xlat add fnsave (bad) mov ljmp jecxz dec mov test notl sahf ret dec mov gs push xor or js or outsb vxorps dec jns arpl mov aas daa push mov adc daa dec addr16 lret push cmc repnz lods aaa (bad) inc push imul add mov xchg (bad) inc jne cmp mov outsl fdivs mov or aad mov aam or dec mov or cltd cld adc mov xchg fldt push orl xchg or mov call iret cmp sub rcll add cs scas lahf jbe test or and xor push add mov cmp xchg push cld repnz (bad) faddp dec adc mov pusha jbe scas pusha (bad) cmpsb rdtsc xchg (bad) pop vunpcklps fsubs hlt cmpb stos repnz mov stc sub insb imul popf mov iret mov push mov lds std jecxz sub jg cmp insl xchg test fs imul fimul and xor ljmp enter hlt fnstenv leave dec shll jae stc sti sub outsl pop int roll add iret test shrl mov cmpsw mov xor mov push outsb or mov xor sti popf sub jmp (bad) imulb (bad) je roll pop sbb lcall lcall pop xor loope hlt sub jnp xrelease mov add rolb (bad) xor sbb lahf stos xorl xor dec mov test sbb inc ljmp or pop icebp ja mov decb loopne stos rcl shl lret ret stos push (bad) loop shrl add add clc (bad) cmpsl ja xchg lahf aas scas sti pop ret or cmc sub in fmul xchg test jp jne fsubs rolb (bad) aam (bad) jmp lcall call pop ds inc sbb pusha pushf xchg mov sbb (bad) popa jmp aas mov bound leave sahf mov fbstp lock push mov gs nop sub das fsts jne xchg xlat add sbb jmp shrl or lods or sahf or push (bad) fwait cmpsb cltd mov aaa (bad) aas (bad) imul stos into dec inc les stos lret das das push scas ret mov es andl mov fbld nop push jge mov dec sarl jb out add mov sbb sub add leave xchg orb rolb lahf push mov xchg or dec push add pop inc mov push (bad) adc bound sbb in mov pop xchg fnstsw and out out sbb insb inc mov test pushf mov test push add clts scas add jp xchg arpl ss mov aas out movsb xor in aas push xchg outsb in sbb scas mov adc out adc adcl pop (bad) xchg xchg jne adc int mov dec dec sbb fs fsts stc xchg push int js mov lret inc in imul iret mov jne popa mov xlat push xor mov jmp mov (bad) dec cmp je sub scas movsb xchg add dec dec xlat rcrl pop test adc push or ret inc lahf fstpl push xchg push mov jle xchg in aas and xchg movsb inc rcr imul call add inc or sahf fwait xchg mov call dec adc inc mov dec jle jae jns inc push ret mov dec inc lods rolb mov aas mov sub mov xchg push xlat loop pop xor cmp sub (bad) mov lret mov pop jmp mov add add mov mov pusha ficomp in test addl lahf push iret add adc sbb dec fcmovu dec inc out mov data16 es in xchg jp mov push ret cwtl ds pop and cli or lods dec repnz inc push lret mov into xchg movsb pop jge cmp push cli cmpsl stos push enter out aaa and scas dec dec mov pavgw xor cli pop test add xchg push test in sbb pop lret mov inc sbb repz lods cmp imul add sti arpl dec mov add push into (bad) mov push out popa hlt aam repz pop xchg (bad) adc les push inc adc rclb frstor in bound cltd hlt lock xchg jecxz pop pop fldl adcb sbb ret add pop push mov push sbb or lcall push test js mov inc test enter add mov pop mov ja outsb out stos jge add cmp and sub (bad) xor sub cmp cmpl xor push jb sub scas std xchg test fisttpll loope dec dec mov add xchg push loope loopne sub mov sbb lods insb push mov testb jmp das push lahf push xchg mov xor ja mov js inc data16 clc lahf pop mov dec in push ret pop (bad) jl inc sarl xchg cmp js mov inc daa sbb scas in push das (bad) mov add out ds (bad) iret notb push xchg add cmp inc aaa add sahf outsl sub pop jno adc sbb fwait jne sub test push out pop or es insb push xlat ss jp push xor dec xor loop pop icebp dec mov cmpsl pop test cwtl xor push cmpsl sbb mov popf idivl mov std (bad) and call add adc repz test outsl inc jae rol int rolb xchg or cmp daa outsb mov lds and cmp and stos aaa mov movsl pop iret jb cmp sub add (bad) pop sub dec leave mov std and push push les pop ds mov xorl inc imul decb sub push push jne lea jg mov loop mov xchg sub (bad) mov pop mov pop xor mov daa cmc je ss mov lock cvtdq2ps decl xchg dec lock xchg mov in jg sub lret mov push outsb or es sbb test mov dec out and or sbbl xchg out fcoms roll pop sbb rclb fcmovb (bad) rcrb lock pop xchg bound stc stos (bad) shrb sub pushf cmp mov test sbb daa roll addb pop mov rclb jno adc mov out inc lds aam adc inc add and (bad) hlt lcall popf push movsl aad jmp out add xchg mov adc push sarl adc sbb xor icebp inc lret stc popf xor sahf ss cmp (bad) push popl mov mov add fistp fstpt xor dec push cmp out enter (bad) cmp insl push imul hlt jne xchg pop loope das mov iret and cmp inc rcrl fs mov mov je shl cmp movb je (bad) cwtl popf push mov push sahf add int3 xor leave or sbb xchg inc lods dec lds xchg dec clc push (bad) sub scas (bad) iret mov jmp xchg push movsb scas (bad) ja lods lds call fiadd xor dec lock sbb hlt mov scas movsb cli pop jle repnz hlt pop jnp bound push jge dec cwtl idivb mov jge xchg sti (bad) sarb imul dec imul inc sub arpl fcomp xchg pop xchg sbb data16 add cltd adc imul (bad) cld mov outsl fistl jae mov cwtl movsl cltd arpl mov inc inc int3 sub (bad) mov inc and sarl cmpsb jno add push adc push push (bad) push adc lods jle pop es jb loop lcall ljmp pop cmc mov out stos jbe test lret pop dec aaa push pop test add in mov lods inc cmpsb pop mov inc es xchg xchg jl test or mov dec push xor mov lds iret fucomi outsl add and mov xchg rorl mov mulb and mov imul jg loop insl xchg (bad) adc sub test enter arpl int3 sub data16 rcl jno jb dec pop aas mov call inc jbe inc mov inc mov sbb and mov and insb pushl jmp pop xchg aaa gs xchg les and xchg loop ret int3 pop mov push negl mov push lds jg mov aam loope inc jge dec add fstps mov push mov add jns mov leave add add hlt loope mov ds mov mov jo mov inc jle pop cmp push std add push jl pop add xchg ficomp jmp pop test lret (bad) push loope push sbb cmp sub and fwait xor sub or xor in xor ret scas loope lahf add stos lahf mov cli sub push pop push movsl clc pop sub pop jae xor notb cld sahf mov mov mov sti sahf and imul jle fwait xor jae fnstsw loopne jbe adc pop push mov adc pop sarb push cmp inc out cli cld dec fcmovnu adc inc sub dec push lock mov adc sbb jmp xlat lcall sub cmp into mov and pop inc cltd imul add sub out push ss idivl mov pop mov mov arpl iret mov imul sbb dec or and lret fmul pusha pop pop push movsb push outsb sbb push sbb popl outsb push repnz jmp call and cmpsb lcall push mov add add inc stc push xor adc dec iret inc (bad) pop dec outsb sub sbb push out movsl sbb push mov inc fdivrl sahf push lock xchg sbb insb cmpsb ror push sbbb adc mov pop and dec xchg pop mov fmull out sbb (bad) jg call cmc call push je sbb (bad) lcall pop in enter or out and pop pop cld lcall mov jmp dec xor cli xor xchg add in inc cmp lret insl out push jne outsl pop mov out jo push jne stos shl or inc sub xchg stos xor sub into rcrl (bad) test mov mov jg flds push aaa push or rcrb aad inc enter leave cwtl mov stos lock into mov mov pop add mov add insb imul mov lds or push bts (bad) inc pop pop les adc arpl fisttpll lret ds rclb dec inc add and aas jl imul outsl gs dec hlt fnstcw or sbbl negb lock pop pop inc push cmp pop popf or out cmp mov mov (bad) mov mov andl (bad) sbb clc and adc push add dec pop fbld ja ljmp xor sti mov adc fsubrp add or sbb add (bad) or dec movsb pushf adc xchg (bad) sub mov jb aas xor aaa adc jns fimul lcall outsb mov clc addr16 pop cli pusha jbe mov out rorl adc xor xor cmp lret sbb dec dec cli stos fdivs cld and mov daa xchg (bad) out fcomp pop in out jle aas mov push or in jo xchg aaa sbb mov adc xorb dec das mov iret rorb or cmp push push pop pop xchg rolb sti pop cmpsl add lahf inc push mov mov aam push add lods dec loope out and mov cmp xor loop pusha popf out aas mov xor cmp jp,pn xchg loope add lods sbb movsb mov jo aam pop insl loope inc je sbb test fnstsw add loope (bad) ss pop movsl repz add cltd paddsw neg enter inc dec cmc and aad mov inc push push lcall mov leave adc cmpsb adc push pop inc adc test sub clc sti xor jnp jge push pop ja pop les adc rolb push imulb sbb in loop (bad) xor cwtl dec sti pop cmp adc jno (bad) ret mov daa inc jns mov cld mov imull inc jb (bad) adc cmpsl ljmp mov ret jnp jle in outsb movsl dec xchg pop jb adc les int3 or cmc mov add lret push leave jecxz and rorl ss (bad) loopne andl outsb test ss je dec mov sbb add in adc inc iret insl fild cltd mov fldenv mov icebp in mov scas inc cmc cmp pusha jmp mov jo insb xchg into push jo enter sub fmuls add dec lret daa mov jle jp rorl dec dec scas jnp mov shll ds sub jge rclb fisttpl xor adc xchg ss or pop add push cs mov cwtl pavgb cmpsl test add pop xchg push dec aad adc in stos or cmc xchg add pop pop sub loope inc fld (bad) or insl sbb inc gs or mov hlt push fdivr cltd inc repz cmc push repnz dec adc push adc ror repnz xchg jle jl adc nop and mov push sub adc mov popa adc jp pop das insl fs sbb push pusha movsb push sub mov fldcw shr rcl sub or dec sub jp lods add lret notl out scas mov fwait cmpsl popa xchg xor xchg aaa cmp dec cltd in mov mov push jmp and push pop mov fdivrp mov in fs mov push inc dec cld xchg movsl in push inc ret lock mov sbb ss scas sub xchg push nop rorb inc xchg push mulb dec mov into dec int nop and loopne jnp mov pop mov inc fldenv aad (bad) pushf fcos mov loop lret inc in aas lock fwait adc in xchg jbe sub push xchg je jb sub sbb lahf push dec xchg lds add dec jb sbb mov xchg mov insb ljmp xor add loope lea pop into or push sbb xor mov imul fcompl popa push inc sbb sub cmp pop data16 hlt jecxz test dec jae adc push adc lods (bad) mov xor inc xor addr16 movsb (bad) icebp adc push add xor das xchg movsb mov stos xor add test fstpt cmp jne (bad) dec xchg fchs add stc mov test xchg or jno sbb lock cld bnd pop lea push popa adc arpl xchg mov popf add or fidivr or test adc rcr test cltd and roll pop sbb (bad) jo xlat je int test pusha mov dec out pop std mov add fdivrp jp lds mov outsb dec push adc test add inc fsubrl outsb mov (bad) les fs inc add enter lds loop test pop nop movhps (bad) clc out add nop or dec dec push fmull inc cli mov sbb dec inc mov cmp mov pop scas adc pop ret sbbb pop sub (bad) xor dec push fstp les ss pushf push xor popf fstps fnop les mov iret rolb out popa dec imul mov add add (bad) mov adc ficom test cmpsb cmpl mov (bad) popa pop jne and sub sbb add movsb outsb cmc sbb icebp xchg push mov icebp inc jecxz mov pop and (bad) jecxz cmp dec push and mov xchg inc ljmp rolb divl push cwtl inc (bad) std pop loopne jnp xchg xchg ja roll pop xchg push out repz xchg mov xor sub enter and mov dec and (bad) jg xchg push int3 mov fs xchg pusha nop ret in and jo xchg push jmp les cmc sti xor (bad) sbb push push in sub xchg ds cli pop mov ficom jge (bad) adc sbb enter and cmpsb fdivrs in cmp rorl icebp mov and gs pop or adc mov into loope xor movsl sti cli inc loop popa insb xchg adc and dec adc shl aad lret or jecxz,pn lret cmpsb sti cmp sub jns inc add push ret aad sbb push loope mov hlt mov pop out inc rcrb mov sbb cmp inc lret (bad) cld pop pop pop xchg jg insb mov sbb clc xchg punpcklwd iret jno out add or imul inc push sub int sahf mov sarl insl push repnz lods jecxz inc shr xor fnsave xlat push push into or sub pop aas je sub pop xor xor dec sti or sbb push fs mov jno pusha sbb mov popf mov lret cmc pop test push inc cmpb sahf or jl xor int lods sub sti jnp mov cmp xor (bad) movsl jg lods mov scas test jns mov cs cmp fmulp stos leave sti sbb outsl sub faddl xor xchg fisttpll out rcll dec nop imul out xor xchg lcall mov repnz and popa insl icebp mov in jp stos sub shlb cld push sub sahf add scas jne popf popa (bad) jno cmp adc shl xchg add push add int3 bound jge cmp (bad) enter dec or jno cli mov lret sbb pushf lods xor inc cmp lods xorl bound cmp jl enter je mov jp mov enter bound and mov (bad) mov cmp or lret call sub pop cmp je dec out stos (bad) xor adc insl enter xchg arpl lcall out out xchg je fsts scas sub xchg ja scas shrl cmpsb or js fnstenv xchg add xchg cmp int rorl inc fwait imul sub jns cmp scas (bad) (bad) pop and mov fs inc add pop xchg mov adc inc orl push push ja hlt jmp mov inc pop gs mov xor add mov mov scas pop push mov cmp xor lret mov inc cwtl pushf bound and adc or popf fwait test cmp inc mov mov pop add inc in push mov push jo ljmp add aas add iret jno movsl dec cmp jns outsb mov arpl cmp xor in dec or outsb inc pushf push push jne stos iret rcr jmp (bad) add jmp dec repnz sbb fwait cli pop jbe pushf repnz test das movsl cmpsb outsl xchg or jmp mov shlb mov mov dec or imul loop cltd outsb cmp pop test pop and xor xor mov cmp cmp in xchg jp fadds sarl pop sub divl adc push in mov clc pop xchg adc inc sub jno mov movsb lcall dec aaa popa out inc out and fwait insb jle cwtl ficompl rcll out stos fmul fnstenv cmp push enter xchg (bad) pushf lea dec scas loop jnp shrb add mov stos mov jp sti (bad) adc jp jmp lret je (bad) pop mov jg test movsl lcall jl cltd je sbb je add clc insl (bad) mov mov leave inc inc push call sbb pop mov popa in (bad) xor outsb add out (bad) inc into xor in lcall cmp mov popf (bad) mov jb ljmp jo or das shld test jne lret push push arpl add (bad) sbb fcmovnb (bad) in cwtl mov aas cwtl mov ljmp sub cmpsl loope sbb pop xlat pop or inc sbb jbe imul popa cmp aam push mov adc add cld xor mov insl sub in sub sti xchg into stc jae scas sub mov popf stc cs xor xor arpl out mov cmpsl mov xor into cmp sbb int add movsb inc int3 clc sbb cld fnstenv jl aas ljmp mov jns cwtl xchg or sti inc adc fisubl outsb cmp aaa cmp bound lahf aaa cmp ret adc push xlat add jno (bad) int in mov or dec xorl out push adcl or (bad) stos jno mov mov mov or or xchg gs lds idivb das fsubrl loop cli cmc popl insl fsub mov in adc das jp or (bad) dec adc mov sbb fcmovbe cmp and mov das dec je jp nop mov ret ja pop sub pushf push pop push lret icebp jp in mov sub mov jb fnstcw mov add cli jns sbb xchg jmp jg sbb outsl popf push das push gs out mov pop sub adc mov je int push mov out ss or mov fdivrl decb sub lahf sbb cmp (bad) ja cmc dec in icebp movl jne fsubr xor adc inc cwtl pushl pop call mov add add xchg xor arpl fwait jmp pop mov arpl xchg mov mov icebp sub inc mov test fdivrs loope push cmpsl cmp iret sub xlat or sbb mov shlb or popa xchg push inc adc sbb or pop pfcmpgt aas fdivl push xchg pop dec iret mov mov xorl xchg sbb cli mov scas jae lods mov iret data16 fidivr or pop xchg sub mov xchg dec lds ret movsb lahf mov sbb into repz pop sarl xchg inc divl inc fimull mov out jae int rcll jno aam pop data16 sub scas mov ljmp mov test mov ror xchg xchg dec lods push leave fadds jb jecxz sub xor xlat jle push mov outsl icebp lea (bad) fwait mov mov int xorl adc ret xchg mov test mov jecxz pushf sub sarl xor fdivs lcall and and into push or fst xor repz dec out scas cwtl idivb jns loop enter test xor int jl mov and stos cmp mov mov enter loopne test (bad) fildl and xor jne leave sbb mov fisttpll push jp mov sbb into addr16 sti jmp dec in insl in pop ljmp sbb jno aad subl icebp xor cmp mov xor mov push cltd addb mov jmp jl mov ret pop xchg push les cmc adc in arpl cmpsl imul sbb sbb mov test add stc push add add shlb stos pop imul iret inc sarb int outsl sbb mov pushf jb ljmp daa lods stos subl mov inc pop pop out lds loope pop mov and add add aad mov ret jb jne outsl push push add pop jl jg xor cwtl arpl fsubrl cmc xchg (bad) jno mov sahf pop gs dec xor sti dec aad outsl repz fcompl in in mov arpl pop clc or push loope (bad) jo rcll (bad) pop jno lock xchg jne testb icebp jecxz daa mov test leave je lret xchg fcoms xchg test call dec jb mov (bad) notb or add adc or sti adcl js stos movsl test dec pop xor stc insb xor mov push inc mov fsubl jo mov push (bad) roll lods fnstenv int (bad) and pop js,pt mov dec pushf adc repnz sbb pushf idivl push xchg (bad) mov xor fmul clc aam (bad) cld rclb add imulb ret mov and enter xor mov add iret insl loopne flds xchg (bad) push insl popf lock sub ret fucomi in pop outsb dec imul add push scas or call fldenv gs xchg push stos clc aas sub jmp jle mov or popf adc xor (bad) pop push test inc mov ds or dec dec movb adc xchg push jle fsubs adc mov add pushf dec pusha outsl notb xchg mov pop out insl or push loope mov out adc cli jp jmp popa aam pop scas push test nop jns fcomps inc dec outsl or add pushf inc xchg stos pusha xchg sbb shl jae imul nop xchg add jge fwait (bad) flds fisub inc cmp out jp out fcmovne dec sub push or lock inc ljmp insb push mov lahf mov xor jbe xchg cwtl daa lock cwtl (bad) aaa test dec mov lods es test stos xchg mov es mov jmp or dec mov minps mov pop test mov es sub add sbb fsubrl int int test sbb fnop xor mov test scas aaa and xor icebp sbb (bad) push dec gs inc (bad) aas xor or in sbb inc imul or loopne sub mov fstl mov insb cmpsb sbb out insl aad movsl sti (bad) aam mov adc aam (bad) xchg jmp add mov call cmp add mov les adc cmp cmp int3 mov outsb fdivs push ret shlb xlat sub (bad) cmc jle movsl loop xorl cmp es cmpsb rcll (bad) aam lock mov jo iret adc arpl rorb roll inc inc xchg add fcmovnb add repnz inc mov mov adc sbb (bad) jae sbb inc mov (bad) lock pop cli inc xor inc push xor (bad) ds sbb hlt inc rcll adc sub lret sbb imul (bad) xor xchg daa lods inc or cmp pop stc push mov fsubrl inc push cmpsb adc pop addr16 out xor fildll push adc mov push xchg cmp insl aas stos fistpll int3 pop mov cmpsb movzwl inc pop xchg or inc jecxz cwtl lret or loopne sahf stos xchg inc loope addb lea jno bound mov punpckhbw loop aas nop and loope div lock or adc cwtl mov mov (bad) phaddudq adc fbld push sbb loope test or mov aam mov push imul mov out outsl jne (bad) jno xchg pop add inc mov mov xchg or jne repz push arpl das xor stos push and sbb (bad) mov and xchg call adc sub dec movsb popf (bad) cmp repz push lods jp fistpll mov mov add push sbb fs (bad) loopne movsb ret dec cmp push mov add add add cmp add jno or sub mov aaa mov sbb bound mov mov outsb xlat cmp xchg jne lcall shr clc sbb dec fcomp sbb dec mov out mov outsb into movsl dec inc aam sub jnp or test lret repz pushf fisttp jp cs enter push ud2 mov adc and xchg xchg je or dec imul adc sbb jl sub mov movsb int scas arpl rcll sub xchg adc mov push and xor ja push cmpsb and fsubl mov fsubr scas jno nop aad push push inc mov jg lcall inc jnp movb mov in jbe arpl (bad) jmp idivb pop jbe pop imul xchg mov insl aam cmp out pop xor dec aas jae sub mov sub lret pop je outsl push out ja and iret lods nop sub popa out xchg enter fs enter jg cli test pusha push (bad) sbb mov hlt adcl nop mov mov push inc (bad) adc inc jg inc pop pop inc mov addr16 loope jo in loope leave xchg inc loopne sbb dec lock pop xor test std daa es jg sub out in out push jecxz cmp sti orl (bad) test xor and pop sahf mov mov loope lods (bad) int stos push and rcrl xlat mov jns mov int dec push cmp and mov inc sbb and inc loope jp inc movsl or loope mov addl dec add push dec (bad) xor movsb rcr dec orl (bad) out les pop repnz insb (bad) or sub add jae xor jae push inc xchg pop xchg nop mov mov in cwtl stos cmp sbb out sub cmp adc iret ret or pop mov cmpsl das fcoms and pop push imul add ss imul mov push ficom jns and ss rorl addr16 shlb or loop divl jne xor out cwtl subl mov test mov cltd (bad) mov in in test push mov leave inc mov adc push inc mov mov cltd jb cmpsb cmp (bad) push mov aam sbb ret leave stc mov mov (bad) or fbld push inc xlat pop jl fs cmpsl lock or stos or scas insb int (bad) in test push and loop lret (bad) fstpt and icebp push enter push mov leave (bad) push lock je imul lods adc push test sub popl dec fcoml andb arpl (bad) clc ljmp or mov adc lds ss adc cmp xchg or lret mov or pop mov lea (bad) fnstcw rclb pop adc mov push pop (bad) jbe ljmp dec decl xchg and pop int stc mov (bad) addr16 ja and popf imul scas scas (bad) dec insb pop xor pop cmp (bad) push jecxz rep loopne cli sub and xor xchg dec (bad) pop jb mov jmp add ds dec scas fiadd push lods sub (bad) outsb daa dec test test js xchg xchg or add adc dec pop idivl jo jecxz out xor jmp jno test dec or mov push dec ret lds sub jp sbb xor push xor cmpsb xor mov jns inc adc or sub in xchg xor dec mov stos and test cmp fiaddl sub js js ljmp (bad) call push xor sbb insb daa or mov mov cmc mov or int3 push mov pop dec inc (bad) lea jae adc pop cwtl sub aam out jbe aad inc or rorb je add hlt dec ror repz inc jno mov or testb movb xor (bad) xchg mov ret mov jl push fwait popa cli push sub (bad) in das outsb int3 xchg dec int3 gs mov (bad) cmp mov das cltd mov daa pop arpl mov xchg jbe xorl bsr scas insl stos push aad popf and sbb mov stos dec dec loop idivb push into mov xor (bad) jle mov cmc mov xlat mov sub xor repnz mov scas test mov sbb mov out mov lock icebp push aam pop mov dec sub fidivl push jb movsl sbb mov adc cmpsb shrb mov mov out xor adc cmpsl xchg adc jnp outsb lea mov jne mov (bad) ficom jl out imul mov jbe icebp jnp push (bad) sub or push dec mov test jb and jo stc addr16 cmpsb mov sti sbb inc inc push xor les adc popa into cmpsb sub mov cmp popa clc aad pop or (bad) je sbb icebp lock ret pop shrl das mov ror inc adc jg inc jecxz or xor (bad) mov add loope inc jb push ds xchg imul jle mov cmp fsubrp int3 rcr add cmpsb lods lret lret out loope inc dec icebp mov mov dec repz sub push movsb sbb sbb cmpsb ja cmpsl jecxz jmp add repnz and mov or lcall sbb mov dec xor lahf rorl inc or (bad) mov sbb repnz loope js xchg (bad) icebp xor and fwait sbb daa mov mov pop popa hlt dec ficom jne aad in mov (bad) mov (bad) repnz pop xor push scas jno push mov sub fcomi das sub xor sar mov jmp xor jne mov add adc fisubrl and cld hlt push out pop stc push pushf in xchg xlat ds pop inc cmpxchg subl sub inc (bad) cltd jmp lods pop adc cmpl (bad) xchg inc add dec add cmp loope jo scas jo pushf mov mov xor mov mov std cld xchg push (bad) sbb xchg jns call adc jns adc nopl push xchg mov push cmp fiadd gs mov jo popl mov popa test std daa jne in push sub mov inc sti and fsubrl jmp adc xchg testb mov or mov cmp ljmp push icebp pop enter adc cld jb sahf rcr xor add movsl pop repnz int3 jns pop cmp jnp imul scas jae insb lds cmp icebp inc (bad) out dec add pop mov (bad) sub mov push mov xor ja in cmpsb and cltd fs mov cmp mov dec mov mov movsl cmpsb testl jbe ja (bad) int pop adc or mov jno and clc or inc fldt sub add insl in pusha or ret fsubs lods ljmp cmp mov scas clc mov push push dec loop into sub adc xor mov mov and test push xchg rcr xor xor lcall push dec jecxz and es push jbe out jge (bad) pop sti pop jno inc add in sti pop in lcall cmp push js sub das xchg mov js xchg aam and loop shlb dec inc xor jne adc repnz ret and mov inc aas fcompl fstps jae and xchg cmc negl sbb jae jle fwait stos repz std dec push (bad) xor (bad) inc cmp cwtl fsubl cmp push stos lods loop dec sbb scas (bad) xchg clc cmp mov out inc sbb jg and sub mov xor pusha in add mov test loop or loop in iret and mov imul imul call xchg nop cmp ja je jp and (bad) xor sub dec xchg adc or xorb xor sub add jbe inc cmpsl scas ret jns and or sub xchg inc sub mov ret jnp out lds in aas xor adc adc (bad) adc mov nop and cmp fdivr mov lods mov mov push adc cmp fs sub ror adc jmp and sub in pop sbb mov jo notl mov mov cmp dec xlat bound pop xor sbb gs push pop out loope push mov mov mov add loope fsubrp xlat mov icebp in adc jl lds pop inc mov push icebp test enter jne push push pop jl mov sbb push or mov cmp jge sub jge inc sub pusha int cmp shr xchg inc mov pop or inc xchg push xchg test cmp andl xor pusha (bad) movsb pusha or cmp ds fs loope movsl mov sti fldcw xor pop xchg jmp cmp or shlb push outsl lods test outsl adc and jmp add in ljmp in and xor inc xchg push pop adc pop xor jo adc (bad) fsubrs cmpsb out sub arpl les test or es in push hlt xor inc lret imul mov popf pop mov pop push jp je in les jb (bad) sti jno or lods imul sbb movsl jae montmul cmpsb inc xchg popf sub xchg or adc scas (bad) mov ss jne sbb push pushf push sub pop std xor mov inc jne dec je out fwait int3 push int3 push cli aaa cmp dec mov add mov dec subb add pop cmp pop pop mov aam adc rcl jecxz push int clc mov subl in push or or xor push pop outsb ja mov push cwtl cltd adc pop insl icebp lahf and cs repz mov mov xor push mov mov fadds mov out xor jne mov inc inc adc add daa into imul dec inc cmp cmp lock jo movsb pop scas pop outsb mov stos loop pop or stc mov insl pop ja mov push loop jae sbb mov inc and leave fwait sahf mov and mov popa test std into out fdivrs mov arpl inc sbb sbb xchg int3 and je mov bound scas cmp es (bad) rorb or outsl js out btc push and test in mov bnd sub mov into insb divl pop cmp addr16 inc inc and sub es push fwait cli pop mov popf mov sbb int3 xor xorl outsl loopne addr16 sahf mov out dec push lcall push lea adcb in movsb mov rorl push dec ret mov das xchg mov mov das std push inc ljmp imul (bad) xchg call dec adc aaa cmp clc pop push dec ljmp shlb dec jecxz insl and cmp add (bad) sti sbb popf jno cld subb jbe jl mov push mov lret bound jmp inc sub mov or inc pop dec jns mov test mov lods or in sub cmpsl push sub (bad) push insb pop lahf orl fwait scas gs ds or and pop test mov loopne pop nop mov mov xsha1 cmpsb lret jbe dec mov jnp (bad) jbe int (bad) adc xor into inc enter adc (bad) daa jecxz out xor pop cmp or fcoml add dec cs mov jecxz and loopne xchg ret int sub movsl into rcrl push das mov inc sub fnstsw test or jl mov mov xor mov inc jecxz pop jmp xor add insl sbb repz push and mov addr16 movsl cmp shr add call ja leave popa cli cmp xchg outsb sbb inc push sub lods jae stc jae and js cmp push xchg (bad) enter arpl popf cmp bound int3 sub test xor call sub adc sbb aad ret out pop push inc xor mov js jmp (bad) int mov popf movsl add cmpsl push xor popf inc dec mov (bad) sbb or in push clc add out je (bad) mov mov daa enter push xor lods scas dec xlat xchg jns or fwait mov push loop sbb adc cmc pop pop cs jl scas out xor xor xchg mov sub shrb and sbb and xor jecxz push mov mov xor sub adc inc addr16 imul rclb cli (bad) cwtl mov ss jg sbb fnstcw fist jle jb (bad) inc inc mov fcompl rcrl and inc nop mov cli movb shlb les cli ficompl outsl movsb jne inc mov sbb les decl push or jno and test in pop cmpsl mov mov or out adc fcomi cld (bad) jle and notb fimul int push (bad) std ret jo imul jecxz add ret mov ja pop pop jbe gs add aad mov lret clc mov xlat loope inc divl and jnp mov das repz addr16 (bad) pop int3 dec xor pop push fstpt loop sbb jg repz gs inc fistpll push leave push hlt cs imul or xlat and test mov push pop (bad) stc or or inc and std and ds stc imul xchg pop push outsb push add cmpsb push adc ljmp add cld dec pusha scas loop mov pop mov push mov std or mov je sub and test add inc mov cmp sub inc or jge or lahf and mov popf mov movsl jae add mov xchg insl fsub ljmp popw xchg lock sbb daa xlat cld fwait pop mov call mov push lods sahf pop (bad) mov sbbl aas bound lea xor dec adc les aad lds dec in or jge or mov sbb mov test jns scas icebp js pop jnp (bad) xor mov mov pop jae call (bad) jae fisub cmp push mov es jp loop pop enter pop add (bad) xorl jp jge sbb push out dec xor outsl in cmc arpl mov cmp in into pushf daa rcll icebp mov push repnz xor loop mov loopne vmovss add repnz cmpsl iret or addr16 stc loope mov xchg les lcall xchg xor lahf add (bad) hlt inc pop or push hlt mov lret jae imul scas sub xchg loopne push or stc fcoms hlt adc inc add in mov pop gs jnp nop cmp inc (bad) clc pop cmp sub xchg push out jbe mov test call inc xor push js pusha push mov inc sub ljmp inc ds sub push std cmp (bad) adc mov pop and push std mov jbe mov lret movb inc push addr16 ljmp rol pop jge fstpl sbb fmull sub push idivb adc ja lds rcr insl cwtl cmp sbb cmp (bad) jg sub je (bad) jo adcb dec xor in (bad) mov into negl movsb sub out mov push insl push dec clc inc cmp lret (bad) xor sbb popf push mov lods mov js pop mov das stos iret je jns push xchg test jle sub xchg and mov add js mov dec movsl jo outsb outsl pop ret xor mov pop cmpsb mov xchg rcr loope enter (bad) pop mov in sbb mov lea rep jae cmpsb imul cmp mov jo push lcall mov test sub (bad) cli jecxz jmp jnp in test pushf cmp icebp mov ss sbb stos and (bad) xchg rcrl test aas xchg mov (bad) neg pusha scas mov pop aam sbb push ja xchg sbb (bad) pop into sub mov pop add mov sbbl cmpsl push pop xchg repnz mov adc or adc jp stos pop adc mov mov mov push push stos jge push outsl xchg add mov xchg das ret es (bad) ljmp push sbb aaa inc dec rcll jbe or inc mov jno add cli in jg insb nop mov lret inc and out and mov cltd scas lods mov cld mov (bad) adc ss sub jo or mov repnz push ds adc std fidiv rolb pop add leave inc imul mov mov mov icebp push jl lret mov fnstsw add in inc movswl sbb ss jge not jmp js inc into lock jle lcall mov add icebp (bad) pop inc dec test jb jo pop sub mov cmp xchg mov jnp insl and adc daa jno push or lods mov imul je es add iret dec mov or jecxz dec aad int xchg aas xor mov fdivrs test mov add mov xor pop scas lods cmpl (bad) cld cwtl cmc jno idivb lret ds mov shrl cmp fs push lock mov aas jno rolb std es cmp mov mov and scas or pop mov std xchg xchg arpl push sbb add adc std pop or adc sbb jno (bad) jp push mov dec jbe sbb jmp idivl gs jl pop stos jecxz mov jne lahf jp stos movsl ljmp push mov push xor icebp fdivs add (bad) jl mov push pop sbb lea scas mov pop into gs and loopne bound push imul mov adc adc inc sub addr16 jp jne test jbe sbb ss sub bound sbb loopne mov out pop pop cltd and mov out add dec pop push push push cmp push fnstenv mov mov data16 incb push movb dec pusha das repnz sub call adc aam imul andps sahf or lock int3 (bad) leave lock lcall rcrl pusha mov jmp es fimul jbe in xchg pop inc lods mov pop or das fistp and loopne int3 mov mov mov aam notl jg jg imul pop scas pop sub mov mov push ret das xor pop fadd sarl enter push pop cmp xchg push push dec pushl (bad) jge and fadds int test xchg sub cltd out mov pop cmp mov int jbe mov jge in nop test adc jmp in push addl or push pop fwait sahf fstpl movsb insb pop add gs jle imul sub ss lods scas std (bad) sub dec pop cmc pusha enter cmc mov jmp or js orl out jl mov inc mov lds mov pop or mov rorb sbb lock test fcmovb xchg cs imul iret push pop xchg stc out pop sub sbbb pushl cmp lcall dec inc xchg outsl sub pand aas out aad cs dec dec add leave fnstcw fisttpl cmp sbb sbb or sub setle mov mov lods jge (bad) in mov pop movsb das (bad) cmp cli out out les std or jl pop mov pop icebp dec int (bad) adc mov popa sti sbb sub movsl (bad) in int3 aam push add jo call outsl mov adc test mov repz movsl js xor pop lcall push xchg mov fwait rorl imul mov icebp movsl imul mov ret sub lahf sub lds lods adc insl xchg fsubrs sbb push dec pushf repz xchg add sub jecxz xchg mov and incb stos lahf je cmp adc mov dec adc mov in mov pop dec vmovlpd adc mov pop fsubl jns stc fstpt je sbb cmp lret stos xlat es mov cltd push inc inc push scas add addr16 sbb pop jg mov xchg mov cmp lea lahf dec je add jb or or push mov imul stc (bad) out std imul xchg mov push and in inc push mov dec adc xchg mov pop fs pop and outsl int lds rorb mov xor out aad lds cmp ja jg imul ljmp jo popa inc popa jns cltd bnd fmuls xchg inc inc mov icebp pop (bad) ljmp je clc scas enter mov push inc das mov movsb dec jns fs out pop mov movsb shlb mov sarb push and add movsb mov mov test movsb ljmp cs mov push popa push xor bound jae fsubl ja addl arpl and iret scas pushf and mov jmp push xor in scas xor repz push cmpsl add ja mov jmp jnp mov imul xor arpl inc or adc cmp mov add xchg aam pop inc pusha jae sti inc adc jmp into repz addr16 xor (bad) xor not mov jge sub cmp lea aad rolb gs xor ficomp subl xor jl inc pop jae xor adc insl das inc dec pop push xchg mov cmp cmp lods dec pop pop dec sar push jecxz xor sbb inc mov loope push divl and rolb clc push dec mov (bad) leave imul (bad) push popf fdivs xlat cwtl nop jbe or and mov lea push insl mov rolb cwtl mov jg not outsl xor pop stc leave js sub mov dec mov aaa stos cmp push outsb pop inc rcr cli push test sbb in push popa mov sarb cmp mov sub aam adcl xlat shrl push pop enter xchg je out mov fdivrs pop jecxz leave cltd sbb jecxz dec stos enter pop mov test mov or xchg stos stc out lahf xchg push push jno inc push mov lock pop push push hlt aad dec mov ljmp iret ret movsb xor out loopne jmp jns add movsl fmull adc sbb jl stos es in sub xchg imul imul or lahf js les enter test push sub push or bound pop and lds push push lds pop cmpsb ds fnstcw sub mov xchg fild out xchg mov xorl mov fild fcoml xor mov je into jns xchg ret js fidiv or add movsl (bad) mull mov inc dec or int sbb popf jae jp pop imul gs cmp jmp sti xor xchg push mov mov push hlt push test cli mov leave (bad) rorb clc mov popf or aaa ret adc or and or adc xor mov test sbb dec mov fwait add mov lahf int3 andl add add cwtl fildll jl lods sbb gs fs xchg pop mov add inc pushf mov ss sub lahf adc (bad) (bad) jg rorl cmc leave xor adc fldcw (bad) js notl cmpsb cmp mov int (bad) xchg push mov mov ret pop or xchg xor insb stos cwtl xor and inc inc hlt inc pop or imul inc sbb inc ret test sbbb adc sub mov sbb insb pop push mov outsb imul jns ljmp mov loop jo mov push icebp test inc out data16 and inc iret lods sbb xlat push arpl outsb pop cmp xchg sbb push inc je and mov jp or ret movsl movsb imul mov jge push push dec push and aam scas fs sahf mov pop dec mov xchg data16 push loop imul stc sbb inc sbb rolb or ret jg,pt addr16 mov gs sbb outsl jnp or dec inc xchg test mov pop scas mov or fdivr aaa mov notl pop (bad) and dec fs adc aad icebp fild jbe mov sub bound in je sbb sub bound in xchg das mov aad inc and pop or cmp frstor (bad) hlt out adc leave mov (bad) call push out adc push (bad) in in aaa pop ss decb cmp in and cmpsl cmp (bad) int3 and aam mov adc outsl jecxz sub sbb jbe inc fisubr sub inc inc xchg fmull inc adc mov subb popf nop adc adc mov dec inc mov lea inc (bad) xchg insl sbb lock lds mov mov (bad) pop jmp sbb loopne add adc push sub loop test mov sbb push mov xchg cmp clc nop sbb cmp pop or sbb in imul out xlat or or mov sub pop mov xchg xor in mov xor (bad) push mov push dec gs sbb fistl dec mov sub add sbb jbe fildl sub mov or or adc push pop rolb iret jmp lret icebp push xchg cmp outsb push (bad) fdivrs inc aas lahf or pop xchg lock mov sbb cmp mov jbe insb and dec loope jnp jnp cltd dec mov xor dec xor add dec inc ja rcrl mov subl push aad pop pop add icebp jo call xchg sbb lret aam push fwait loop stos mov push mov aas sti lcall fdivl cmpsl int mov push decl mov xor pop out xchg stos cmpl and test clc inc incl push test add roll mov xchg pushf or lods cmpsl das rcl fsub xchg inc lahf and mov fdivrl (bad) into mov jbe ficoml add scas arpl fadds mov jmp mov pop mov xor xor and adc lods popf loopne jno jecxz (bad) jno outsl xchg sub jb add dec idivb and dec dec inc push mov push xchg inc push es pop mov dec into ja int3 dec scas loopne out pop push data16 pop sub xchg xor arpl adc push rorl cmpsb push inc insb push dec call gs roll pop mov xchg pop xorl sbb jae or mov ret clc testb enter or call xchg jmp arpl negl adc sub fisttpll lods pop stos xor or xor in lock int or xchg mov divl jmp sahf (bad) mov pop addr16 push mov mov adc dec jae call ret dec subb sub (bad) out inc out movsb mov jnp icebp inc push add mov int std mov push mov add fiaddl add cmc or imul mov jo shlb lods test pop rol xor test sub clc jle and bound sbb dec out jmp scas cmp ljmp int3 ss cmp insb sbb jae out add xor icebp xchg xor adcb sub mov imul sub jp dec scas (bad) out push sbb inc ss push sahf fist test icebp in adc (bad) mov pop loopne mov adc lods cmp mov popf ja or dec jmp popa repz and lods mov xchg inc adc cltd repnz repz call or test pop sbb sarl push rol cmp sub push ja sbb jmp mov sub outsl push cltd outsl sub mov psubsw leave jb bound int test ret mov addr16 leave lock jle mov test dec or mov cmpsl add (bad) mov call mov sbb jecxz aas xor jo push (bad) fidivl lea xchg in outsb loopne jp mov je pop insl movsl push mov xor mov inc mov add cmpsl cvtdq2ps inc pop jmp lcall cmp cs cmp inc push popa jne out in fiadd push ficompl movsl pop in leave ficomp loopne pop fmuls cs enter cmp jbe (bad) mov pop xchg jns test mov cmp cld je outsl or ds pop adc out cltd push fbstp cld fs pop gs pop push mov xor cmpsl mov dec out jne dec and cmp movsb daa sahf rclb dec xor or test mov jb pop leave in lcall out test add data16 xor (bad) sbb (bad) dec push inc test rolb mov add xchg repz nop ret test std add cmp jecxz int jne leave sbb pusha add sub add in add inc roll stos (bad) push mov cwtl sbb sub imul and sbb (bad) and stos xchg jo add cmp jb scas jge subl (bad) jne mov jns push bound sub and sbb pop popa xchg int sbb add (bad) add push repnz add cmp repz cmc jno jle orl push sahf mov int push add mov sbb sbb push iret sbb imul push lahf inc loopne xchg adc mov dec stc imul push mov cltd jl nop rcr popa enter xchg sti js and pop mov cli sub xchg (bad) sub push cmp bound imul cmp gs adc jno idivb sahf (bad) jle (bad) aam (bad) jno sahf xor jle les shrb into cmp in or xorb or pop or push jmp push stos lahf push stos pop xor or sub test into fwait inc popf leave (bad) je xchg cmp test push xor mov add push ds pop aad sbb pop (bad) xchg ljmp imul outsb pop stos xor pop es test fsubrl inc popf mov gs mov imull sub ja and xor mov movsb in js pop mov fisubr fbstp stos xlat or or xchg int rcrl mov in push sbb push xchg xor (bad) and clc insl fisttpl rcrb push add push pop test and pop fdivrp int outsb int pusha fxch push jp loope jbe jle es scas adc sbb inc bound jnp mov sub dec test mov inc sub scas or fmull mov xchg jbe fcmovnbe inc aaa scas pop gs imul pop loope cmp ljmp and cmp (bad) fdivrp push dec loop cli test sub cmp lods dec xchg pop cltd add icebp test xchg ds lahf aam pop out imul xor pusha xchg ds xchg push stos fldenv jl jno cmp lgs movsl inc jne testb pop sahf and xchg movsl cmp in or js mov mov adc mov mov mov xchg je mov ror ja mov add sbb and andb dec and inc pop rcll cld shlb shl mov mov xor inc jnp fcoml test inc lds jne dec pusha lret (bad) (bad) mov jne aas out (bad) jbe push push js inc adc fs negb testb daa scas (bad) jo sbbl push push loop sub xchg rolb jno into stos orl push xor xor mov cwtl pop push jge dec (bad) rcrl mov jmp pop push lock xchg or in pop aaa popf xchg daa xchg sbb aam inc imul fcoml sub and dec sub adc inc sbb shr insb scas hlt mov inc lds cmp xchg mov das adc push pop mov mov pushf add imul scas (bad) xchg sub test mov dec sarl adc push sub (bad) push jge rorb jmp cmp icebp inc and mov inc fucom push loop in rorl sub fimull xor xchg js mov or fs test cmpsl mov xor mov enter and js adc sbb mov mov sbb lock dec jecxz addl sahf push inc sbb sbb gs leave dec imul jo and and scas xchg bound leave adc notl push jae push xor push and mov (bad) popa nop shr icebp cmp adc xchg (bad) sti je jne jns adc mov xlat pushf (bad) into lods loopne ds in mov fcmovbe stos enter mov and inc sbb outsl ror adc out adc dec xchg jecxz cmp inc xchg rcrl push push xchg fwait add xor (bad) xchg mov ja push aaa (bad) mov cmp xchg pop std das arpl mov mov mov mov dec fbstp stc mov mov push cmp fsubrs cmc and in in into gs push ficoml inc loop jne out lods xor cmp lods repz inc mov inc mov push or es xchg inc cmp inc cmpsb mov in mov lea jbe in lcall dec es repz pusha into push lods hlt mov fistpll cli xchg adcb test add sbb jp sub mov xlat mov pop push into enter loope pop dec xchg gs adc mov add (bad) (bad) dec ficompl test pop fs call inc ja mov jmp cmp add (bad) icebp nop jge or lahf das push in ret aam adcb sbb sti pop push pop pop fcmovnbe and je and push xchg stos adc (bad) out cmp leave test mov fstp push sbb and adc xchg popf std stos and jb pushf xchg bound mov sahf fucomp pop repnz (bad) fwait dec fadd sbb scas (bad) pushf int sub js inc mov add or lods xchg jae jle adc pop leave xor dec bound dec pop test in repz ret (bad) negl leave and xchg sbb mov call fisttpll mov test fldt nop jmp mov mov test jp (bad) (bad) lods or push inc scas rclb popa jne cmp sub push sub lret sub nop inc aas push in rcll into in inc leave stos cmp mov jne cltd adc xchg scas sub xchg mov jp fstps imul jbe hlt ja pop imul ljmp loopne,pn pop out pop leave lret sbb mov inc adc inc cmc fsubp pop and mov cmpsb push push subw mov add call push movsl cwtl js and jno rorb outsb fsubl mov mov enter xor add add or cmpsl push je iret leave sti sti pop dec popf mov jp fwait inc orl test push adc lea cmpsl popa aas into out or push je inc fstps andl xor sub enter inc xor sbb dec mov dec insl or dec jmp mov jmp mov call lret adc inc outsl pop pushf xchg xor stos imul push pop orl out dec (bad) cmp das ss cmp lahf or add in add xor jnp (bad) pop adc test ss or inc mov test dec mov mull and nop (bad) ss push jmp (bad) xor and push outsb cmpsb mov cmpb inc add out aas cmp or lods in aam mov rcrb fdivp jg pop add mov xlat xchg cmp enter cwtl lea cli and aas push cmp out icebp stc jno adc addr16 js leave les aad or arpl out mov imul mov add cmp xchg push and fcoml mov mov (bad) daa (bad) fs inc xacquire test push jno je sbb inc mov and or jo or ljmp adc call cld jmp or mov pushf add xchg add adc lcall js and xchg sarl jmp jno mov fcmovbe enter sbb mov sbb sbb dec nop push and not bound icebp mov clc sub push dec adc cs jbe cmc adc push out pop adc push in sbb (bad) mov mov arpl divl push cmpxchg or xchg inc insb inc fdivrl jae fidiv iret int3 ljmp xchg mov into in push inc fdivrs xor pusha shr adc push jp fxch frstor mov iret pop ja icebp xchg sbb insb (bad) jns loope mov lret mov dec sub sub pusha mov rolb add outsl push lretw in mov pop ret js or xchg jp mov and outsl imul jbe sahf imul sarl pop nop pop sbb inc pop adc mov mov jnp outsl adc das sbb ljmp mov jo jo lods xchg cltd faddp insb in out (bad) or sbbb mov lock push lret adc jnp mov repnz les inc inc and stos data16 dec dec cmpsb (bad) lret scas xchg out mov fidivrl adc mov mov cmc loope leave mov int3 xor cmp movsb mov dec dec mov mov notl sub in and setns push stos mov (bad) notl adc dec jno (bad) jle mov stos pop daa jl inc jge outsb jl repnz aas mov or xchg dec mov (bad) mov lods movsb (bad) mov pop jns mov xor pushf push fs mov dec xchg adc adc mov test jnp cmp jl in adc cmp popa lea test in sub adc outsb testb lcall xor das jge jno icebp push push gs pop (bad) arpl jb outsb mov xchg inc add adc sti div dec (bad) leave push clc xchg in iret rcll call mov cmp jnp jmp pop or test mov aas add and mov push cs ret cmp xlat jge dec leave lcall inc nop clc push (bad) popf cwtl jg jge sub inc rol sbb pop bound cmp jne in loope sti in rcl xor xchg in push xchg (bad) sub aam jnp popa add in fisttp data16 pusha lcall sub out fsub iret pop dec sbb or negl stos scas (bad) fdivrs adc mov push sbb xchg mov pop shlb insl inc jnp cmp repnz into mov pushf data16 (bad) stos sarl mov bound inc jmp sbb sub into daa add add fsubp sbb jnp enter add popa daa adc and imul sbb cmpsb sbb shrl lea incl xor cmc iret pop and jno out mov lods int3 add xchg data16 xor ret lcall mov mov mov cmp and scas push add inc add lds aad pop pusha cltd js mov pop mov and xor adc jg or dec movsl gs dec xchg cli push test cmpsl je jae imull sbb scas push sbb loop jno push mov jp cltd insb test insl push push (bad) jge xor adc mov stos sbb inc out push outsb es ds lea into dec mov mov outsl (bad) repz leave jnp inc mov xchg les and (bad) packsswb mov movsb lock scas jae icebp mov shlb lahf mov sbb movsb mov mov ljmp mov mov into xor push call and pop aam mov lcall mov (bad) lea in cmp punpcklbw add cmp mov mov sub stos add push sbb sahf jecxz mov mov sbb imul movsl movsl mov negl (bad) sub insb sbbl inc xor mov cmp dec push pop call and cld cmp add jge adc cmp dec push icebp pusha fxch out stos mov cmc mov pop push mov fwait inc jbe and push popa inc fdivr fmull test mov int fidivr fst pusha cltd lea xchg test jle ret daa sub (bad) arpl sahf repnz mov mov mov add mov mov insb dec in (bad) add xchg ss stos jle xchg mov idivb mov mov movsl sarl mov cmpsb es jl pop cmpsb iret loope in addl mov jnp jl push jge fist mov mov adc cmp cmp js daa jbe mov (bad) add (bad) pop xchg lds test rcr call test and pop inc loope cmp xor sbb (bad) cmp mov (bad) sbbl dec adc sub out sbb inc (bad) mov repnz adc cmpsl pushf mov das out incl gs sub xchg call pop or sub cltd xchg (bad) leave xchg ljmp inc sbb cmp mov repnz ja lods stos repnz stos cmp repz jne xchg scas test (bad) jo in (bad) cli bound bswap fdiv (bad) aaa jecxz pushf add add dec inc mov mov xchg push sbb mov insb test add lock jp pusha daa out imul in lret (bad) xchg jge adc std js sarl repz add fbld test pusha leave imul hlt mov pop jge (bad) push lods inc fbstp jno sub dec dec aaa (bad) pop add (bad) (bad) dec sarb pop adc inc cmpsl mov cmp pusha mov add push scas sbb push push aas loopne ss and and clc fwait (bad) sbb cmpsb mov jg or mov mov xor jmp movsl pop pusha inc lds scas mov pop mov in lods adc pop in clc pop xor dec mov xor xchg std test xchg inc hlt call jbe mov aad bound push push fdivrs les nop pop cmp cmp xor sub xor mov sub sbbb push dec adcl adc out or xchg (bad) mov (bad) jbe in or jbe subl cwtl xchg adc pop jl cltd sub testb call lea mov adc loope stc jno movsl insb adc js mov sub mov jae div sub mov (bad) mov out inc lock jae mov adc js fdivp pop fstpt add ss in lea push mov dec fistpl add aam arpl outsl pop or mov imul or rorb push add test jo jnp add pop inc xorl sbb test lcall stos ja int3 jbe xchg mov fisttpl sahf cmp js mov mov ror mov (bad) mov loopne aaa xchg push lret fnstenv insb imul aam das pop adc in mov sub jnp adc orb mov loope ljmp xor (bad) jle mov inc lret ljmp clc jnp je popa lock pusha push test ret clc pop pusha jp popa lock or roll pop fwait mov inc mov mov loope (bad) mov or jle mov and sbb (bad) fsts xchg jno fldl xchg mov jle in cld mov pop push mov fldl cmp push xchg xor cld addr16 inc in rorb mov mov idivl mov fdivrp jge and pop ret (bad) mov mov or cmp in sahf sbb inc sbb lcall inc (bad) mov or aam jp and cmp dec daa popf (bad) stos xor sbb push xchg ss scas add loopne sub jne sub mov addr16 lret sbb and ret int rolb push or out mov mov into scas mov pop addl in mov jne popf lar inc inc sub movsb cmpsl mov pop sbb dec cmpsb mov pop mov or aaa nop popa xchg push mov in shrb rorb xchg or cmp lret je and mov clc pop nop shlb adc cltd mov pop (bad) xchg xchg out roll push popa ret stc mov mov pop adc and shr cmp sbb lret mov das call adc packuswb popf nop sbb sbb pop scas jae pushl inc mov lds (bad) lret xor stos pop int3 inc mov jo cmc pop inc push mov pop xchg dec push testb sti test adc jnp pop and aad sub (bad) jbe xchg jmp mov loope stc (bad) inc in mov dec jl mov (bad) test mov bnd fild test rclb push mov pop push inc dec mov cmp push dec inc stc outsb mov cmp aas inc push data16 arpl ds jae mov pop xchg mov jnp mov xchg mov decl pop jne stos in out ret aaa inc mov (bad) int mov flds rorb add inc xchg lret (bad) mov bound and mov fimull xchg into icebp arpl jne fiaddl dec add test ret inc test mov mov (bad) aam cmp dec adc mov cmp add mov push mov xchg cs das lret xor or shrl fcoms push aad mov daa fistpll add int3 adc xchg push (bad) jae cmp xchg lea push ljmp sbb pusha jae js fidivl or mov jnp jns fdivp roll hlt inc aad imul dec pusha add mov sarl cmp aaa xchg mov loope imul sub scas dec ljmp (bad) out and lret xor jns add cmpsl sub fwait scas imul add (bad) outsl add out jb xlat rcl call pushf pop sbb dec xor push pop mov cmp or cmc loop lret in sbb nop (bad) and or in lods fucomip js icebp icebp in sub pop mov xchg arpl sbb ds and mov popl cmp add adc dec mov repz jbe lock aad dec (bad) nop dec push sbb xchg push mov mov pop int pop clc bound and out movsl add outsl cmp out mov mov cmp jmp nop rorl sbb cmp push jge outsb jle sub pop adc mov push mov jmp xchg inc mov sub int3 push xchg (bad) push lods out jae ret out lock push jb iret mov enter add stos int3 push push mov inc inc movsb sub bound mov jb js ficom js test inc add rclb mov out or fsts adc loope xchg mov mov imul cmc cmp fadd jl ds sti mov mov pop mov mov loopne add sub add xchg data16 push dec pop pop or xchg push xchg cltd mov add test or sub xor mov pop loop loopne and in xchg call aaa sub cwtl icebp mov mov insl loop jno mov dec push sbb and cmc mov lea mov in or jnp and pop in ret rolb push adc enter cmp and test sub xchg test xchg out push mov mov cwtl and add mov roll xor jg js in nop mov cmp push cmp inc div mov push aad push jne es lcall mov aam push jg mov sbb ja movq jno mov pushf inc inc cmc mov rdpmc push mov add lea adc mov js sub or lods pop dec inc push jno and mov aaa xchg dec popf pop jecxz mov add cli ss out inc outsl pusha (bad) jnp xchg adc scas (bad) cltd test lret and xchg push pop xor adc ljmp push cmp das in into sub movsb jecxz pop add das dec or cmp pop insb xor sbb stos (bad) xlat pushf imull fstp mov mov cmp stos xchg jnp jl mov inc sub aad daa push cmc imul jne arpl xor ljmp das stos inc lret out ret pushf inc pop pop mov test inc or lret int3 lock and clc and (bad) fcoms pop xor mov push cld sbb sub dec inc push mov add out and imul inc scas (bad) mov das lret cmpsb fstl jl push fwait js int fstpt loop jecxz dec inc in fsubrs mov mov orb pop int in insl out mov jp sbb jge add sub cmp aaa jp sub js std lret cmp pop xchg mov mov push lea mov mov jbe arpl pop xchg cld jmp movsb imul push push pusha inc xchg mov mov rcrl push push jp mov or xchg sub sbb sub dec ljmp movsl cmp mov fcmovnbe sarb pop add xchg aad inc xchg inc and sub push ljmp lret mov jge mov inc and lea jp jnp outsb sub dec pop sub mov ret and stos jmp cmc mov push cmc aaa insl insb addl or fucomi xor mov or cmp je cli xor pmuludq push cmpsb mov popa xor fstl inc push xlat fistpl nop push faddl mov sbb aad sahf movsb dec es imul lret (bad) ss pop push push lock mov mov mov les lods cltd jecxz aad (bad) cltd enter pop fsubs mul mov cmp and cmp out jae leave mov pop dec jecxz sbb push mov xchg sub or nop repz shr sub std mov inc inc add or mov jno mov mov jne sbb leave xchg aam pop cmp lods sub ror mov sbb xor les lcall clc xlat and lcall cmc icebp mov divb xor out loop add lods stos popl inc leave sbb xor (bad) imul push xchg sbb xchg mov icebp pushf lods fsubs arpl mov lcall stos push into push cmp cmp cmp fistpl stos fildll add add cltd lret sbb or (bad) loope adc rcr out pop mov sub mov xor outsl add in clc lahf adc or jge xchg test rcrl rorl xor sub outsb rcrb sbb mov fnsave lcall out push fisubr pushf sbb in mov hlt or mov xlat mov mov sbb add fwait mov jmp inc sbb cmp mov sbb lcall fadds jecxz add enter inc mov xchg test popf leave pinsrw dec pop and push fcomps addr16 xor xchg mov mov sbb insl xor (bad) sub dec sbb incb sbb subl shrl xchg mov pop dec movsb negl dec cmp out or jp ficomp aam cmp mov daa dec adc sub ds adc adc ret xor inc int3 fiadd dec ja imul xchg mov and popa pop sub ret push imul mov and inc inc cmp (bad) fsubl and (bad) (bad) in or inc or movsb jle and lahf mov lcall adc push jp aas xor add cmp jnp push call xor or add pop andb push pushf repnz xorl movsb pop bound subl adc adc cmp iret jp je cmpsb push pop mov fstpt push cmp ljmp push xor lret pop enter push mov mov stos mov mov ja cmpsb ss lds push push pusha jg adc scas or hlt xor fisttpll cmp bound cmp xor ret addr16 lock jb dec das lret or pop mov leave adc add jns mov pop cmpsl cmp les mov push fistpl aaa fcmove cmp pop inc hlt lods pop sbb xchg imull jg incb push lds sub xor push inc sbb mov mov test out rorl jge xor add dec jbe sub cmp and jo dec test (bad) pop imul xlat das mov dec jne faddl movsb jl jecxz fldl push int dec call or int out loope cmc fbld mov mov jmp dec out inc pusha inc (bad) adc je int jg inc insb into or sub jo out imul aam push (bad) cmp cmpxchg dec mov repz and das or lea or mov (bad) scas (bad) std mov sbb xchg inc ljmp xchg mov add jl cltd pop adc mov sti cli (bad) mov fist jae xchg pop cs xlat or sti sub dec inc sub rorb sbb (bad) iret test mov sahf lret dec mov js jecxz jg mov rorl mov aaa cmp inc (bad) out cltd addr16 xchg pop scas mov mov xchg aaa (bad) fidivr fs (bad) sti iret mov in fnop movsb xor xchg out pop loopne mov inc push pop mov mov mov bound cwtl push lea cld pop test js mov xchg cmp lcall dec outsb imul xchg nop push inc wrmsr (bad) push (bad) push inc in scas outsb ja out out test (bad) adc in inc jmp out mov sbb mov mov fildl push ret pop das xchg mov fildl fwait test loope enter je fcoms sub (bad) mov jnp enter pop pop cmpsb (bad) or mov ljmp stc (bad) lock xchg test xor fildl xor mov lods inc ficom pop dec mov out and int3 mov sub xchg inc lret xchg xchg in or jbe cwtl sub and leave (bad) adc jg dec adc push mov mov imul dec ja loope adc insl scas inc jae lods mov int jg sbb mov mov mov (bad) jle inc mov mov dec fwait sti fidivr xchg or add daa (bad) (bad) or xchg std inc call int std bound fimull jnp rcl dec jmp sub xor and dec sub mov xchg dec push push xchg stos sub rcll arpl jnp mov jb aam mov (bad) sbb xor push jmp cli iret iret push aad adc fwait (bad) adc inc hlt fpatan aas ficompl bnd xor sbb pmulhw cmp and (bad) adc mov jns cli cmpsl or sbb int mov in leave movsb iret adc out cmpsb sub scas sahf das mov push jb test mov mov sarb ss nop or (bad) push mov inc push mov push notl mov ficom sbb imul push cmp push push inc jnp jno int3 sub icebp fisub shrl jbe int fisttp out adc mov es xor sbb cltd mov enter jge add (bad) lahf lods add xchg cli les cmp testb fstp jbe push mov cmp fadd (bad) pop and xchg push je pop adc stc cli mov push adc mov xor decb push (bad) mov push les sub lcall enter xchg mov sub add imul xor cwtl xor mov mov jecxz adc cld xchg into or and fdivl mov (bad) enter stos int3 dec xor insb (bad) std mov add xchg and mov mov or jne das mov cmp fsubrp xor and lods add (bad) clc and lcall fwait push and jne pop sbb scas leave cs popa mov int3 xor mov cmovns jg xchg mov dec adc sbb push jbe,pt or xchg (bad) scas inc sub push adc sub adc xchg data16 mov cld nop ss or add out jae sub gs mov mov lahf test (bad) pop mov xchg jmp sbbl ljmp sub xor stos add mov add mov xchg jae jae loope push jo sbb fisubr test (bad) xor and sub push aam add popf lret mov push (bad) inc mov jb mov cld jae or enter (bad) mov cmp aas mov cmc sbb xor dec sti xor scas cmp add jno scas cmp sahf dec cli scas dec jae sbb or or dec aam int sub xor sub (bad) (bad) popf pop mov stos popa insb repnz or scas (bad) adc cmp dec jo negb dec mov nop (bad) movsl out xchg fstps mov je mov dec scas gs (bad) or xor (bad) ffree adc mov sbb lods jnp into gs push or and lsl rep add or lods xchg cmpsb dec push scas icebp aad roll xchg pop scas int3 call shrl pop arpl xchg pop pushf jl ss xor mov xlat mov mov mov jbe test repnz loope mov loopne pop pop iret jmp into dec scas test push dec int sub mov pop hlt mov pushf stc int stos lods movsl mov jb cmp push mov fldcw push sti movsb movsb ror and repnz iret mov mov stos ds fisubr imul ret or adc pop adc test ret add lea adc bound inc stc lods sti inc push pop mov dec jl cltd call call sbb cltd jge push les mov adc pop inc sahf lods dec pop adc rclb and mov cmc adc adc repz cmp test sub sub mov sti add xrelease testb movb inc (bad) xor call mov daa sti lods cld cmpsb dec mov mov sub ljmp pop cmp add out and scas xor or inc lea pop xor std test frstor jmp int jp cwtl push and hlt cmc mov repnz add mov ja xlat sti movsl push adc fadds scas fisubrl stos test push mov sub sub add lock xchg cmpsl sbb scas pop push jp stc arpl mov imul mov mov scas cmpsb jmp lret mov sbb xor add outsb fisttpll or int3 push xchg out js cmpsb pop fdivrs add push mov add and jns sub dec in dec fldenv sub jle xchg cmp nop (bad) icebp pop clc pop jnp jne fdivrs and insb dec enter (bad) leave pop push movsl (bad) lods cld dec repnz fs (bad) loop mov insb push nop test (bad) mov and data16 jecxz xchg inc ljmp sbb (bad) jns inc stos cltd inc inc fwait int jl das mov cmp fdivl jle mov push js negl in xchg pop jae dec xor sub sbb mov icebp idivl and and test jle inc lea sbb cmp mov stos or dec or add sti mov jae cld xor pop lahf enter push sub cmp (bad) jbe jecxz sbb pop inc cmpsb cmc jmp fstpl and (bad) arpl bound enter leave aad mov fnop push xor xor cltd dec in xor out out (bad) inc outsl data16 movsb push repz cmpsb aas xchg push xchg cmp xor pop lret jne add repnz iret mov or inc icebp out out pushf adc enter add fisubrl enter push popf mov pusha popa sbbb je sub scas push movsl pop cmp cmpsb mov mov inc dec inc push xor sbb dec loopw adc in leave mov movsl xor jo jno jno cmp add shrl lds aad imul pop add popa mov call push sahf fcoms pop fisttpl into jo lock popf inc fwait cmp (bad) nop push insb enter into mov push lock push add lret int3 push push inc add pop jecxz movhps jnp lcall inc mov mov xor js cmp lcall bnd call mov out ljmp rorb push add add movsb pop sbb jo mov jmp jno adcl push insl pop jmp jl adc mov (bad) or aam mov push sbb cmp dec das mov bound gs push call jo insb (bad) sub mov and xor arpl pop and adc push pop jmp into xor cmp push aad adc dec test mov xor in push lret xlat lea adc lods sbb mov xchg hlt sbb sbb loope add cmp enter imull add cmp lret (bad) xor sti mov bound test xchg xor lret test cmp dec je clc (bad) repz xor into lret loop fwait ja loopne std or mov sbb enter add dec in add pop es in or test stc lret cmpsl dec mov (bad) xor or pop mov lods jns mov jge mov das pop mov xor or add pop xchg adc adc jmp add inc inc mov xchg js orb into sbb jns insb add aad add inc insb pop loop pop mov mov sub movsb inc sub push call notl add cli xlat movsb jg pop push fisub scas mov jnp test dec pop fimull sahf pushf pop mov sbb dec cld std mov inc jecxz mov xor stos ror cmpsb out (bad) dec ljmp add arpl in sub lcall aas stos sbb outsl les fsubrl fisttp outsl pusha mov push stc sub fild loopne mov inc mov cmp jne arpl loopne pop and int sbb popa sarl adcb bound aas leave add js xor xchg dec pop loope shlb cltd jge es and aam push arpl xchg xchg (bad) sbb stos jne dec dec push push enter outsl das adc jb jp xchg pop fcoml push test push pusha gs dec xor adc clc push mov popa and (bad) mov fistp ja add test cmp lret jle mov pop pop cmp dec iret mov out dec mov jecxz jbe add add sbb adc add out and adc jne lahf and pop ja jb jo imul xchg jl icebp push andl or xchg jg fnsave in das xchg jb xor xchg jno (bad) jge or mov mov scas adcl out and xchg mov adc adc in icebp mov mov pushf pop adc jns addr16 sub in mov pop fwait jle lock into out es xchg pop sbb das push pop push sahf nop cmp mov push mov fst add test pushl lods (bad) mov inc jnp ret pop loopne iret outsb sub push push mov js or dec decb repnz xor mov aaa movsb cld scas bound aad jge popf mov aam imull test or pop mov movsb aad adc addr16 les xchg mov mov jo ljmp xchg out jnp dec inc push call mov iret xchg cmp pop jo jp push and cltd les mov jl out push enter cmp scas cmpsl es inc push fisubr mov stos add and lret inc adc xor into xchg pop xchg mov shll test and fs mov fisttpll (bad) (bad) out bound push in push (bad) xlat dec sub inc dec fild or jmp int (bad) sub add test dec jg mov test cmpsl fs aas sbb in jecxz divb (bad) fiaddl inc xor jle sub mov jmp sarb int inc push insb leave mov lahf aam adc sub add fisubl outsb imul arpl inc (bad) cmp ficompl inc add cli push pop arpl aas pop cmc test or pop push imul ret inc loop lock lds mov xor out in pop sub enter mov jmp fs jge cwtl pop std faddl jne sub lret adc jbe xor (bad) imulb mov sarb test or fdivl imul or pop mov sahf xor insl scas rolb sbb test pushf mov fcoms push fstpl pop les dec (bad) lret or adc jle jbe (bad) lahf pop xchg cmp jg iret sub sbb adc in pop test xchg mov pushf adc mov mov sub pop test jecxz out and cmpsb jl push in cmpsb cs pop xor rcr lds xlat push and (bad) repnz xor into call (bad) xor bound sub jbe shrb xor sahf push pop mov (bad) jecxz mov cld mov insb sahf iret xchg push cmp in pop add mov cld or adc push ljmp cmpsb push and xlat push mov test enter addr16 shrl mov inc outsl xchg push repz in inc mov out out (bad) push orl cltd andb sbb mov aas or daa aad enter scas aaa xchg sbb jl fwait xchg cmp out push jge mov jg clc imul sub mov sti sbb adc ss vandnps imul mov je aaa sub aas inc into daa xchg into mov inc inc adc imul negb inc jmp aam dec pusha aam adc test dec push mov add xor or in mov lahf dec push out mov je inc dec iret jno mov add jge mov pop and fisubr mov xchg lock (bad) cltd xor lret scas jge data16 jle les jb mov aas push test fisubrl mov imul push ja ljmp mov pop in push mov (bad) repnz lahf add push cmpsb pop or imul mov outsb inc mov (bad) pop es fimull (bad) push mov in mov scas fcompl add jmp imul push bound and xor push fs (bad) dec inc dec clc mov xor push inc sti adc int3 sbb push jle push out pop mov or test pop sub inc (bad) and pop push mov pcmpeqw rcl sub sub mov movsb mov xor xor outsl xor and pop dec pop or mov cmp popf and cmp or leave cmp jnp cltd repz dec bound cmpsl ficoml jmp lahf mov gs sbb push int xchg mov bound int3 mov xchg mov nop add pop cmp lret xchg (bad) xchg daa jp xor or out xor clc hlt test rorb xor or dec xchg dec int3 test dec loop addl inc pop ljmp sbb shr ljmp cs clc ret dec adc iret clc and mov inc xchg xchg mov jge and jg out inc call add (bad) sbb dec test and and jle push dec faddp ret aam adc into push mov icebp push xor enter ss lock xlat nopl loope add mov jg (bad) (bad) dec and in and ret jmp (bad) mov cmpsb movsl imul jmp out mov jg,pt inc test cmp loop cltd and mov xor cmc pop sub xchg jmp repz es popa addr16 xor mov sbb test pop mov imul ret mov dec test jb je (bad) adc sub cmpsl cli (bad) rcrb jmp (bad) in (bad) sub outsl fadds cmp mov jp xor fild xor mov inc (bad) sbb inc cs cmpsl popa sbb xlat dec mov arpl ljmp and sbb stos enter sub and pop xor xchg add and mov mov mov mov xor fisubrl cmp repz mov pusha push test mov outsl lahf (bad) (bad) sub ja aas gs lret outsb insb into dec jae stc nop mov movsl popa inc mov clc dec inc dec cs mov jbe xchg mov dec cmp pop data16 jo gs inc cmp push or push lar adc mov and jne out ljmp fwait idivl fisubl movsl dec call mov jns and pop push lcall pop add rcll jnp inc xor (bad) lods pop sbb movsb lret lea iret sbb in nop int3 iret dec adc sub or unpckhps fimull add cmpb inc enter mov cltd cmpsl lods movsl lock lds sbb roll rclb arpl pop outsb test sti xchg cmp xor scas test in ds leave fmuls or xchg mov dec jecxz push jns (bad) jle fwait inc dec dec adc adc jae mov aas and inc push inc fisubrl rclb cmp xor fs iret pop push sar in jl lret push jmp je movsl and jne mov les xchg adc fiaddl xchg scas mov add xor popf jb (bad) cli dec lods pop pop xor mov add add inc sub fwait dec rorb int3 xor inc outsl cmp dec mov lods jo mov mov and popf sub xlat inc and mov (bad) jnp (bad) stos inc push xchg leave mov cvtpi2ps rcrl je sti push adc pusha ja js (bad) shrl pop pop push mov jbe divl lcall into push jge pushf cmc dec arpl xchg das fisttpll leave paddb mov rcrb jo and fisttpl mov mov cmp mov mov mov cli pusha xchg pop jmp movsl jmp addr16 jno and mov cmc adc inc xor mul shll push mov mov xor add add or movswl stos jecxz cmc push adc repnz les (bad) les sub mov sub xchg ss sbbb pop dec xchg sbb lcall cmpsb lock fdivl xor cltd lsl pop or (bad) out jge or adc dec xchg ds clc out mov lock mov xchg test fs pop aaa or fdivrl jo,pn popa sti clc out mov aaa fs mov aad test out cmp sti xchg inc pop int push push mov cmpb and sub mov mov mov mov mov mov sbb popf and xchg cmp rorb loopne ss and xchg lahf inc dec sub les loope adc aam jae shl xor xchg movsl sbb dec ficoml dec stos push int shrb pop popa mull arpl aad bound in cmp cmp mov jo pop pop push js mov lock sarb insl mov dec popa stc add outsb ret aaa aaa jo or jbe pop icebp aad push push sbb and imul rcrl dec test (bad) ljmp pop (bad) aam mov pop mov ds jno cmp adc mov xor js pop inc sahf lods xlat push mov and pop mov and or mov fld xchg push lods pop int3 ljmp cmp mov inc adc sub sub pop dec sub xchg or cmpsl xlat mov mov hlt jmp sti out ja inc xor lahf lods stc xchg and cmc push xchg push mov xchg pop inc dec mov pop aas inc mov pop jns rcr cmp psubw cld movsl jno mov fsubr inc mov fsubrl stos fs and shlb jne xlat popa cli sbb inc stos dec ljmp popa repnz stos dec test in dec ss add inc and dec imul add (bad) jne ret jns jmp xor adc cmp fisubr test leave mov mov pop jnp or xchg jmp dec test adc mov add push das mov sbb rclb jnp loop inc lcall dec mov adc call sbb mov stos cmp push in stc ret mov xchg outsl mov (bad) out or lods shl jmp sbb cltd imul jecxz pop fmuls les sbbb jecxz fisubrl lods in cmpl adc fsubrp loop jmp cmpsb test xchg ficomp pusha insb cmp or sub push mov sar testb dec jbe popf dec or rcll push out xchg pop sbbl jl mov es sahf popa jo pop (bad) mov sbb cmp or xchg ss sbb rcrb mov jp rcrb das push pop mov mov stc pop cs xor mov sbbb cltd mov jg mov xchg jb aaa xchg pop mov adc pop (bad) jp ret outsb in bound lret xor lret stos mov test pop cli adc mov loope push int3 mov mov xchg pop icebp sub cmp mov (bad) fcomp (bad) mov push pop push jl inc jmp or mov fwait push sahf or add add int pop out repnz cli hlt push pop movsb repnz xorl sub lret inc sbb es iret stos dec mov mov fstpl in int rolb sub mov sahf lcall (bad) or inc push loop (bad) (bad) unpcklps mov nop push lcall mov pop sbb insl xchg push cmp fstps jmp movzbl adc push jbe xchg sub addr16 xchg mov xlat jg cs push fdivp mov popf push inc and test cli aaa sbb cwtl aad (bad) or push pop into popf pop push push mov cmp jcxz pop dec mov jae pop pop pop arpl push (bad) int std pop jp and inc fwait stc popa cmpsl sbb pop or (bad) cltd fdivs mov mov add cmp adc ficom out sub inc lds fwait dec daa pop or mov out add adc mov imul inc mov or cmp insb push xchg in fstpt cli sub in (bad) lods mov jle xlat loope dec and (bad) rcll lods inc sbb jmp push push or mov gs mov dec pop jmp movsl xor in aaa in outsl dec push cltd xchg fcomp arpl jmp sahf mov es lret dec inc clc mov mov sub test aam (bad) push in push xlat je les mov mov stos adc xchg sbb dec pop adc xchg je mov fadds dec fadd jp add (bad) mov ret pop (bad) sar mov pop in sbb dec mov fistpl fmuls insb enter mov push andb addr16 push sbb fstp push add cmp mov in sbb mov daa inc mov push adc fsubrl pop js xchg mov inc push push rorb add adc xchg sbb aad jmp mov push mov inc lahf loop repz or xor into lcall push pushl dec pusha movsb movsb adc (bad) addr16 sahf jb cltd adc jmp addr16 add dec sub dec pop jbe dec pop xchg sub jge sbb inc test loope addr16 daa sbbl jg or add pop fcmove dec mov test orb pusha stc addr16 adc dec sub mov ds and bound imul cld int int pop mov xchg pop je dec push jnp xchg lods dec stos pop sbb in shll push adc sbb icebp cs clc fsubl ds fs push mov xchg sub sbb adc mov pop icebp push imul dec mov dec stos inc fdivl cmpsb movsb and sbb inc imul pop mov (bad) imul pop sarb ljmp push test fbstp es adc jmp (bad) stos sub and rol cld xchg xchg push mov into das pop jge add and inc ficoml sahf or add inc lcall mov bound jnp cli ss int sub cmp roll lahf cmp adc cmp ret and push push dec (bad) sbb inc shlb scas xor hlt daa sti cli lods rcrl aam jae jmp cmpsb xchg outsl test ja sbb dec stos push lock and mov xor data16 sub add mov fsave push mov or mov setge or fiaddl and icebp fstps jnp sbb loope push adc outsl or pop and push test (bad) mov jae jmp idivb mov sbb jne xchg jmp jl sti leave adc test cmp lock test inc jbe pop mov nop outsl xchg push int3 loope mov mov adc test add loope ja jno shrl mov mov (bad) push imul outsl outsb inc orb mov les call (bad) adc or bound in and (bad) xchg mov stos sub fs into jge adc jne sbb mov arpl xor jp stos enter aad fistpl seto rorl dec adc leave pop jge mov outsb add inc ds xorb leave jne iret jge aam add xor push push adc ljmp fdivrl sub test inc imull jle sub adc pop pop arpl push dec fsubrs fsubrs lret pop imul cmp rorb sub xchg rol ja outsb or cmpsb aas push xchg cs ret test push and adc dec mov loopne sbb nop aam sub xchg lea repz or mov sarl outsl pop inc scas sub repnz fisttpll mov scas fdivrs loope rcr mov jbe sub add adc push mov je jg pop iret loope lock inc rcrb js ja adc leave aas lds jb les add inc add ds jmp sbb pop lds jae pop or add enter into cmp nop pop (bad) push mov dec sbb (bad) movd jne hlt popa push pop rol adc cmpsl (bad) xor fmul lods aaa stc scas aaa test pop stc rcrl mov ljmp call mov lea stc popf fstps jo jae push (bad) xchg movsb adc and stc hlt fsubrs pop dec leave stc inc xchg in mov adc ret cli xchg add mov jge jmp and add mov add imul inc cld lods dec jl (bad) (bad) pop jmp push xor bound mov es pop lret test les (bad) mov and sub hlt mov sub xchg sub aas and int3 repnz mov (bad) lea call ljmp push pop inc xchg dec and repnz mov dec test cmpsl or loope xor dec test icebp imul fildl sub (bad) jg dec outsb dec mov int dec bound push sbb mov (bad) and dec or int3 shl repz int3 (bad) iret xchg pop es mov fisubl pop sbbb sbb jns cmpsb (bad) cmp enter sub sti inc outsb add cmp pop push pop dec inc inc xchg xlat out aas jae es and rorb cvtps2pi mov pop jp xor push cwtl lcall push ret loop cmc ret test dec ror fiaddl jb cmp lods popf xor dec es pop or sub fildll sub enter pop push xor call out nop rorl cmpsb icebp data16 faddl mov push out int3 ficomp sbb iret dec aad inc xor mov xchg push and lret cwtl mov repz fist cli ficom hlt xor xchg das xchg dec in stc jnp push addr16 xor or xor push jle add aad aas insl push xor (bad) xlat pop pop ds inc xor insb les sti das xchg push lahf les dec lea or lret cli insl test adc sti out shr pop sbb stc stc pop pop add jmp movsl lods pop call cmp arpl pusha call dec jns xchg xor inc popf scas mov mov mov call dec nop sbb insl loope fiaddl ret (bad) out stos push cs faddl lcall pop dec nop fisubl enter xor mov inc call push push mov push push movsl movsb push rcrl inc imul mov pushf aad cwtl mov pop mov add (bad) lock add inc sbb sbb sub out mov push inc (bad) fs cmp and rcrl push fadd (bad) mov gs jge mov pop es ficoml mov mov push in xchg mov ljmp shrb or rcl scas in push popa jbe scas sahf dec inc inc inc stos lods pop mov lahf int pop decb and out fmuls dec mov and fcompl divb lret and dec test imul dec int sub inc aaa andl add xor ret cmp mov xor mov sbb pushf mov repz add outsb mov out leave jle dec push and pop xor push push adc inc push into mov test lahf outsl xor (bad) repz push loope daa push add mov xchg mov insb dec xchg pop lods out pop (bad) cmp sub fisubl pushf ficom imul (bad) push sti mov push jns or adc in cld cmp addr16 push stos pop lods ljmp lahf mov mov ss in xor cld mov shlb loope jno pop je aad das js jecxz add nop add mov dec pop je rorl gs push jae leave inc dec mov mov add or icebp pop pusha sbb sub (bad) adc push andl add jo push jg pop into leave mov ret shll fs sub lods mull outsb aad sbb sbb add push bound pop cmp ds jmp jg mov cs push dec cmp je in sbb outsl (bad) lock test test xchg mov les mov stc mov int3 mov xchg jne arpl push xchg cs add call cmpsb stc cmp mov outsb or imul lods ja cmc push out lods push fs dec adc mov out inc popa cli pop jp sub xchg xchg in adc out add jne jmp inc cwtl jno push imul jge (bad) push sub imul pop dec push dec (bad) sub cvtpi2ps stos fnop mov (bad) xor xor (bad) sbb add jle movsl adc aad lods inc insl mov (bad) sbb or mov cmc and xlat pop xor xchg push pop jae ljmp mov xor pop pop data16 rcll (bad) pop loopne (bad) cwtl or push mov lds inc cmp ret pop push pushf in cmpsl sub shll das dec into sbb mov ljmp lock out cmp and stos pushf sysexit xor inc call out (bad) vshufps pop inc lea or mov je mov or test sbb jge push shrb (bad) stc loope ja jmp mov leave or lret ss add jge adc out xchg xchg cld push pop lcall xchg sub or lods push jo push xchg xchg xor mull pop lahf scas repnz fwait lock lods or adc cs sti das xor sbb adc sbb je jecxz sub mov fcoml pop sbb sti and sysenter fistpl (bad) mov cli rorb mov mov lahf sub jno rolb movsb add hlt fsubr xchg fbstp out (bad) in int3 mov rorb ret movsl mov cmp fnstenv mov test loope pop cmp stc mov mov mov rclb movsl xchg cltd inc push (bad) mov mov mov fs sub adc sub inc rcrb adc xor faddp sti insb pop (bad) or push sbb fildll das dec leave (bad) mov mov andl jp fldt (bad) sbb jecxz std (bad) pop jns mov mov sub mov jbe sbb mov lret add add add push xlat in mov in mov adc sbb sub pop dec movl ret jnp lcall xlat or fstl fidivrl xlat xchg lods out aas mov cmp ret leave xchg fnstenv test in pushf clc and jg push in daa clc jae fildl scas ret inc int mov jbe inc lcall cmp call xchg gs pop inc pop (bad) pop jecxz mov pop movsb std repnz sbb es pushf fsubl es add push mov cltd cmpsb out idivb dec mov ss dec and jmp mov insl aaa lahf enter cmp cmp pop lea out xor lret hlt mov jbe pop push jb ficom sarb or clc jae inc iret xor add mov mov or enter fs add ret pop pop xchg fs pop cmpsl out inc add nop jp scas aad out inc inc testl bound call in mov inc pop push mov inc push int3 cmp sbb ds push dec dec pop (bad) mov lret popf cmp adcl inc mov jecxz sbb xor xchg aam jbe push jb (bad) mov push (bad) and xchg arpl mov sbb cmp imul mov sub mov xor xor call jecxz push ret push jo,pt testl jle lock fidivr add (bad) lret test aas nop push dec jnp push lds mov lods stos cmp rep adc into es std push outsb sbb aaa inc das (bad) mov xchg or lret push jae js inc push mov adc add rcrl fildll add pop mov insb mov call push leave or loopne pop pushf xor cmp pop iret clc out mov lret jo test imul subb jecxz adc mov leave lods xor dec call and (bad) fcmovb pop mov jns add dec mov jb jecxz push imul stos daa pop dec hlt nop inc jmp repz ds xchg clc (bad) int jo popf ret sub mov ljmp (bad) idiv test hlt mov lock mov mov sbb js pop and mov push adc mov xlat (bad) (bad) dec mov pop mov test mov jbe int3 ret stos jbe jns mov pop and or mov inc sub fsubrl jmp imul es lds jp scas adc add inc xchg inc cmp je sub inc xor push pop lret outsb movswl inc sbb mov aaa or lods cmp and mov adc shll ficompl cmp in popf aad repz cmp dec inc daa cli call call mov fs enter int andl test daa loope sub mov mov lock inc insb pop leave enter movsl ljmp adc add in pop add das sti fcoml mov test stc popf sarl cwtl adc inc repz outsb mov cmp dec or pop cwtl add xchg sbb int3 nop xlat popf cmp xchg adc pop xlat push stc stos nop xor cld mov enter fmull fcoml jge lret cmp std cmc or dec in mov cld jno popa and lret orl jns rcrl loop mov dec xor addr16 insl pop push fdivs iret hlt fs pop insl test push rorl cs loop dec mov stc or xchg cmp jle push xor adc jb in mov leave mov stos sahf in es data16 insb pushf xlat xchg cmp jne xchg int sbb sub xchg add jb jae mov add jo fcmovnb shll xchg cmp movsb (bad) (bad) int xchg (bad) call aam xchg jecxz mov aam jbe jmp stc inc add int inc xchg xor lods negl pop jmp mov pop sbb sbb adc push sub test xor call in sti (bad) adc int mov or lret pop sbb call mov xchg (bad) daa imul inc (bad) call pop (bad) dec orl insb push ds repnz fistl push enter xchg lods divps sub sbb jecxz data16 pop mov movsw xor dec xchg ror call or xchg jg xor popa jge xor iret push ljmp sbb test subl dec mov fild cmpl sub aas repz push cmpsb inc mov fwait lods aas (bad) jne mov cmpsl sbb lds push loope pop (bad) adc mov push das cmp lods notb jo push mov xchg mov and das inc mov mov jp lock inc inc cmpsb push mov jb mov les rorl dec pop adc loope xchg mov and icebp insb cmpsb pusha cmpsb jo ret sub jae xor dec push outsl jp sbb inc pop or shll push test rcrl inc pop dec and and into push icebp or inc andl stc mov pop and rcr jg xchg loopne lret mov outsl roll in xchg aam inc and out lock pusha xor xchg dec xchg push (bad) mov (bad) fwait int3 sub fmuls push sar inc ret ret scas pop dec xor lcall insb int adc (bad) sbb push jg adc loop adc fmul cltd mov push jl js mov push int3 mov mov add (bad) inc ret push (bad) fcoml lea fist shll insb ret jmp cmpl cwtl cld dec dec xchg pop adc fsubl ret adc arpl add mov out cltd jmp daa cwtl test jg sbb imul fisubr jecxz dec mov fbstp sbb imul sbb stos repnz (bad) jmp mov aaa add mov push cs push dec mov dec xchg test outsb mov mov cli arpl cmp xchg xor add mov cs rolb (bad) test jo push sub or inc mov lods dec or insb in or xchg call mov xchg rcl push js sbb cltd cmp mov xchg sub out in out add mov jecxz cmpsb mov cwtl adc ret jmp repz and into stc inc pusha test mov dec push adc stos loopne cld pslld pusha mov loop data16 push idivb hlt daa inc mov je (bad) jne add movsb push lahf push cmpsb mov out roll (bad) xor cmpsb loopne divb imul lret push stos ss bound orl pop in sbb aam lcall push xor pop or int3 repnz int3 cmp adc mov or cmp mov mov or popf pop mov mov fs test mulb jae pop dec mov lret repnz mov repnz xchg popf xchg ljmp push jmp mov cmpsb sub inc jo xchg (bad) jge fs push cld out (bad) mov je mov gs fdivl jp inc xor std jbe mov ss or mov cs mov hlt popa and les mov popa (bad) sbb mov enter sub insl lods out cld sbb loop jge jnp push lret xchg pop jo mov adc pop jne iret or negl cli jo dec push add cmp insb aas andb int mov stc jle shrl sahf fisttpl xchg cltd or shlb push lret cmp popf sbb stos or out or lds adc mov movsb push sbb imul stos mov (bad) das sbb mov pushf jns or and jb add inc or xlat push lods jbe std inc insw (bad) mov shlb cmp mov test pop cmp fidivr vpminsw pop scas mov inc inc (bad) xor add cmp stos adc rcr or jge movsb mov push mov clc out insl mov lret mov loope or jno fiaddl mov pop and jecxz xchg cmc frstpm(287 inc negl clc adc jns mov movsl push mov loope xchg imul push ret sub dec cmp hlt loop call push cmp adc sub inc and (bad) nopl dec imul mov push enter mov mov add in push insb inc (bad) jno or jbe mov jecxz cmpsl jge stc fidiv (bad) loope push lcall fsub in fidivl hlt inc xchg inc addr16 jo aaa (bad) out pop push adc fs clc pusha inc notb lods lods mov jae jmp add mov xor push out mov jne mov pushf out pop cmc xor or mov mov adc hlt cs popf lock push ret ja loop popf out push jl cld adc fs xlat dec lahf pop out xor sbb and sub scas lods iret or imul mov outsb sub pop mov (bad) xor mov pop aas pop out mov and cmc inc hlt ficompl inc pop gs cs mov xorl aam iret mov lea dec jg sbb into sahf or dec push adc inc out arpl jae adc push leave push or or lods dec or ja jecxz cld pop out push outsl and xchg stc out in push xor inc push ret mov pop cmpsb xor cmp in roll sti add call adc or push or cltd lods dec dec das (bad) xor pop inc ror jb test mov jg shrl jmp sbb cli call add pop cmpsb mov sbb dec fcmovnu pop and xchg ficoml push cmp shll stos mov add pop mov mov add mov cli (bad) fwait in fistl adc outsl sub pop inc push cmpsl nop es adc xor int or stos neg and xchg mov iret in imul (bad) outsl fcmovnu mov icebp lods cld mov (bad) or cs test mov inc repnz dec int3 jne enter std ja sub jmp pop cmc aam jb add das or sbb jo loop mov add or imull mov sub sbb (bad) in add mov dec add ljmp popl lock cwtl lods fsubs pop pop adc outsl cmpl ja dec pop sub out scas rcll test pop push loop pop push leave outsb stos jge (bad) cmp cmp mov leave mov jl popa mov inc cmp imul movsb addl call push shlb sbbb shlb sbb push sbb test ja popf inc aad int3 adc cs jbe fwait outsb mov cmc clc movsl jo mov fiaddl mov mov and and rcll sbb fnstsw sub repz mov int3 jg stc sub movsl pop mov pop fwait mov scas loope (bad) xchg or fmul mov push pop repnz mov mov fstps fsts cmp or loope mov pushw dec sysenter mov jmp ja xchg push and pop lret icebp mov cmpsb aam or jmp out imul daa sub gs test adc int3 mov adc je mov out fwait ret dec cmp jae sbb pop mov push mov inc inc rcrl dec in loop xor lea fucomip fisubrl cs sbb dec mov outsb pop mov lret sub mov out xor outsb rclb mov cmpsl sub sub stos adc lods mov add rcrl push adc insb inc xlat fwait scas inc pop xchg mov and leave ljmp (bad) or movsb ss jle sbb inc cmpsl mov jmp jns mov add add ja out in xor adc iret mov jns in aam lods test and stos es mov (bad) mov ljmp insl mov push outsb mov mov aad sub adc fs stos in inc and shll xchg sub cwtl std mov js ret pop push lret pop sbb mov sbb sti mov in sbb cltd ja ror test jno pop es dec les inc pop mov stos mov mov aaa stos dec add ficoml cli inc sbb fs mov add scas fdivl dec adc test movsb les sbb shl loop cwtl test outsb jmp and pop cmp mov movsb mov into lcall adc jmp or dec cmp insb mov inc enter scas cmp pop aad je lcall jbe sub ret adc sbb cmp push jecxz test push cmp xorl (bad) dec mov cmovg dec fstl mov jne lods add pop out cmp xchg shrl sahf pop jne jb leave gs push dec xchg xlat fwait test dec and push ss xor or clc add pop shrb inc movsl hlt and dec outsl or (bad) cs orl inc pop out pusha test adc les jns inc hlt push dec outsb xchg dec test cmpsb push jno lea (bad) test inc dec into add into insl cs pusha push inc xchg fistl mov jbe mov adc jo rclb xorl lcall jle jnp in xchg xchg mov scas aaa fcompl xor mov out push jae xchg rolb add xchg sub jecxz push es mov rorb mov mov addb inc orl cmp test pop cmp cltd nop loope push and cmp and dec imul pop mov ret and cli inc daa daa xchg in mov fwait mov outsb dec pop xor pop mov pop fs add xor mov cmpsb cs inc sti push repnz or cmpsl (bad) into pop cmc iret fldlg2 popf cmpsl and sub shll jae mov dec jnp fiadd loopne add push rolb aam js add pop mov mov add jns arpl addr16 (bad) mov mov (bad) mov pushf ret pop mov test jbe pop lds jne std ret mov rcll outsl push pop loopne or ds fwait mov pop and sub mov hlt out push je stc jo jmp stos mov incl cmp pause and std jecxz in pop xchg je adcb (bad) int jp test inc push std push push ret mov ja pop pop pop xor js inc ljmp mov pop les sub popa mov pop out dec subb xor enter push ds or and mov push cmp xchg adc cmp mov adc in jae aaa add out jge sub (bad) jl scas jnp lds out aad pop ss mov mov xor (bad) mov out mov jnp gs push cs sbb inc pop or mov int3 mov test push sub inc jbe add inc xor pusha vmovsd cmpsl jbe fwait and and mov clc daa mov mov nop cmc add xchg mov ja xor repz bound dec mov xchg outsl lock aas stos imul das adc jge push pop cmpsb hlt rorb fs adc or inc rcl inc add movsb sbb adc lea ds das or dec out pop xchg std cmp popa or (bad) and mov (bad) adc dec mov mov pop adc cmpsb scas xor orl push fidiv cmp shl xor xchg into lods push mov insb cs imul cltd outsb pop fist pop ss pop aad jns add (bad) shrb arpl bound add cld lret (bad) mov jmp shll add rorl mov rorl sub cmp insb cwtl outsl ret out imul in andl jbe sbb aam lahf outsb int loopne into cmp (bad) repz sar push xor push push mov (bad) push fidiv mov push mov push arpl xchg pop orb lret loopne push push push jno mov stos add cmp call (bad) jns mov xlat push fisub xchg jnp mov loop jecxz mov cmpsb dec push pop sbb clc jae push stc test push ljmp or call test mov xor jle notl sbb sub xchg fsubs inc sarl jle cmp into sbb movsb xchg inc je cltd jb dec mov leave mov les xchg pusha aam cmp cmp je into out ret jne cmp and add mov adc cmp je mov sbb lods hlt nop (bad) and outsb cmp inc push or das adc pop popf in fidivr jecxz leave cmpsb test inc mov iret xor test icebp pop int mov in test jne dec pop (bad) loopne cmpsl cmp push cmc cmp or pop dec (bad) pushf sbb sbb push add inc out cmp sti rcl imul mov imul std into pop test xor fwait roll aam fistpll je sbb or ljmp fs popf mov dec mov jb (bad) cld push insb ss sahf scas pusha xchg mov adc adc push mov mov int3 movl aaa arpl mov outsl addr16 xor dec fs ds push (bad) jbe xchg mov sub imul push xchg leave mov xor cltd out (bad) loopne pop jg inc pushf push aaa jbe cmpsb loopne inc mov pushl stos rcll mov push mov outsl cmp hlt xchg sbb jnp sbb clc dec sbb lods cs mov lret call xchg fmuls andl decb lahf sbb xor stos add ret bnd cltd pop rolb arpl jp mov push call inc lahf loop push mul pop jbe add icebp cld add fcomps cld cmpsl lcall sub lock out push dec lret dec mov jmp sbb add add lods hlt xor insl rorl cmpsl test insb lret lock enter sub mov aam test in jl sub in add mov aam bnd push sti lret push pusha mov adc adc cld rcrl arpl lea xchg loop adc mov jg and arpl push push push out (bad) jne mov aad sub push jmp and lds add sub xchg jns xor dec fisub dec daa adc out dec fs rcll lcall scas std mov sahf mov jns fmuls je mov cmp push aad mov inc cmpb pop mov bound push xchg in in stos sti mov pop rol pop (bad) push dec movsb xor and aad xchg xchg dec mov jne,pt push in lahf inc pop lcall inc movntq jg (bad) cmc add sbb add les cmpb in in mov inc gs out jp arpl lahf mov mov add imul fmul mov clc insl dec jns adcb movsl sub cmp cmp dec inc fwait push cmpsb fisubrl and jge push ret mov sub or and test mov add push inc push xchg stc cmp mov imul or fcomi in cmc sahf movntps mov mov divl rorb roll dec xor xchg jbe add bound pop mov je pushf sub push dec dec push je push dec loop dec mov (bad) push cs add ret (bad) repz cmp xchg or lret sbb insl jns lods xor push scas sub stos mov movsl enter (bad) aas xchg mov data16 movsl mov mov jmp add (bad) loopne xor mov pushf jo xor (bad) cltd scas xchg das cmpsb pop in test cmp inc mov or popf sahf mov sub mov popa mov xchg data16 and daa mov mov bndldx shrb and (bad) repnz stos fmuls push jne pop mov xchg or xchg jp sbb ljmp ret ss mov jb mov inc ja mov mov pushf pushf jae scas inc insb sub rcll cmp mov jb popf aaa mov dec or adc int pop or push (bad) dec add and (bad) icebp mov sbb rclb mov pop inc adc fsts pushf roll add (bad) mov mov dec movsb push mov pop or gs les fimul sub sbb sahf je pop inc xchg pop insb (bad) or sarl mov jle cmpsb sub push fldt xchg inc xchg (bad) outsl lods xchg jno iret push cmp fnop repz pop xor les sahf scas mov mov pushfw dec cmp adc xchg inc inc jg daa push add push sub sub jle scas int3 (bad) hlt pop xchg fimull sbb push movsb xchg (bad) aaa pop jbe jo sub add js or test scas mov mov movsl bound adc cld inc add in data16 inc ret sub mov sarl push aaa lods jns xchg subl (bad) scas cmp dec decl and int3 int3 add stos out (bad) and ds out xchg push divb mov push loope aam inc out lcall dec fcompl mov dec lods jmp or fist mov loop xchg mov (bad) pushf (bad) dec sbb xor jae inc and mov in sub xchg out repnz aaa in inc mov jp,pt mov pop mov lcall leave flds push (bad) jle pop popa jno in aam pop clc mov dec pop fsubrl int3 mov sub xchg mov xor daa in add jecxz mov popf mov cmp mov sub add pop pop jnp inc pop dec xchg (bad) or or bound (bad) cmovg inc mov xor push shlb repz aam adc in orl sub repz inc pop pop aas mov fcmovu scas std add out sbb and mov pop data16 xchg inc adc push aas sub movsl xchg stos sbb mov push pop pop mov stos sub mov (bad) int movsl jnp aas cmp add jbe xor jbe xchg daa ja pop cmp push fisttpll jne outsl scas mov dec bound adc cmpsb pop or mov sbb test mov pop pop and movsl cmp pop xorb sub (bad) sbb mov sarl inc das jb pop adc jo scas inc jb sbb jecxz xchg fs (bad) js mov mov imul push lods nop lods je pusha enter ret (bad) ret rol lock pusha hlt imul adc xor dec or (bad) mov cmpsl push mov dec push sub fwait or or in mov loopne lods xchg jge xchg shrl xchg jbe add dec cli sub inc dec cmp loop xor mull push xor fmuls cmp scas sbb sbb clc inc outsl mov mov into mov bound jmp repz jne add ret jmp cmp loope in xlat les rorb or data16 repz push scas and dec and jnp mov jge mov dec sti ret sub cwtl sub outsb into or mov mov inc subb mov pop jne inc into cltd movsb das inc sub lret adc lods popl mov mov negb lea fstl cld xlat sub xor sub rorl pop stos cmpsl jl pop (bad) and mov movsl pop sub jmp cli pop pop bound mov cmp pop lock sub fs jno cmp pop in (bad) ret sbb (bad) (bad) cvtps2pi xor sbb mov aam pop jo call out sub test bound and and cmp sarb (bad) jge mov xchg push jnp (bad) sar (bad) cmp push mov sbb cmp xchg inc pushf (bad) sti mov mov sub divl js outsb (bad) sbb fildll adc adc xchg cmp adc clc xchg sub je ficoml (bad) mov gs cmp fwait aas rcrb push clc jp loope cltd jle jno pop dec (bad) std mov jecxz test sbb mov mov fist cmc andb mov (bad) pop mov int xchg pop fcomi lock xor xlat push push xor push lods mov aas pop ljmp or fistpl mov cmp fisubrl ret push xchg sbb jnp or sub es dec inc ret cmp cs inc inc rcrb jne adc jnp add adc ret movsl push mov xchg dec mov xchg stc adc jo xchg pop pushl push adc push push xchg pusha xchg jle xor xlat mov dec pushf push inc mov fwait outsb clc mov lahf test sbb dec (bad) testb sub ret fistp and mov inc sub pop mov or inc jle cmp (bad) test xchg push jae lods mov rcrb add push pop in xchg xor fs jmp or sub stc test insb push insl pop add mov (bad) jge mov cwtl movsl pop (bad) repnz sar rcrl cmp movsl divl movsl push inc mov mov lods shrl pop mov ja lret out insb (bad) lods leave lods mov mov pop mov inc mov inc cltd pop sub mov pop mov outsb iret cmpb push (bad) jne mov cmpb pop mov mov in mov dec ja (bad) push lods mov rclb jecxz data16 xor cmc xchg xchg pop mov dec inc fcomps test xor mov add clc les movsb out nop aad xchg or imulb cmp jp sub addr16 fdivs ret cltd addr16 dec push adc in fs loopne outsb out stc or imul call fcmovb fimul fcoml adc xchg cmp test inc fstpl pop push sar daa jae jecxz (bad) xlat pop ds jns push nop int3 xchg pop jmp icebp xor mov mov outsl mov lea inc inc push jbe js cltd scas mov sti popf inc mov lea and leave dec mov xchg es mov jo mov out pop or movsb dec adcb lahf dec dec (bad) leave hlt adc sub jge mov add sbb push in shrb popa jns aad (bad) mov aam les sub adc add adc lods and xlat loope mov xchg fistpll mov mov xor sbb aaa push cltd pop decb fwait fs jecxz jmp sub dec and outsb xchg in mov mov movsl imul in jl fwait sub les xor push xor and lea or int in mov rep cmpsb pop and jnp add lret jp bound mov mov add fldt adc cld test mov pop push push cmpsb dec jns js imul scas cmp mov cli cmp cmp shrl xor lods jnp loopne cltd ss and or sbb cmp inc pop ds sub dec iret inc inc jle add shll lods pusha sbb (bad) (bad) fcomp aad mov movsl rorb scas arpl inc lods notl xchg xchg cmp or cmp ror or sbb cmp push adc mov movsl fstl je int3 insb mov xchg pop mov popf dec cmovne sub out adc jl cs aam stos dec out adc hlt mov inc lcall subl or test es rcl jmp sbb or pop in jg add cli xchg add pop rol (bad) push les or dec mov test sarb into test repnz cmc xchg jecxz jno in test push add gs ss and mov mov cmp mov sub mov inc sub fwait add dec in clc xchg push cmpsl push stc sarb mov and mov add fistl jno mov cmp sub and and mov add pop inc push (bad) fdivl sahf iret enter jbe lea push (bad) dec mov insb testl cld into test rclb sub jnp inc sbb js je leave cmpsl jns mov mov loopne or xor jae mov sbb (bad) into stc std jle (bad) xchg inc cmp fistpll and leave roll pop jno cmp xchg xchg iret xor and ljmp sub dec jg push sub cmpsl or test mov sbb jno (bad) pop es jle adc lea add push xor movsl push xlat cmp xchg xchg sbb (bad) icebp mov (bad) scas fs iret xchg cmp or rorb (bad) rep das xor xchg mov push jno xchg lahf outsl mov mov out xor adc aad push repnz int3 jno xor sub mov push or stos nop jns arpl insl cmpsl mov sub mov pop aad or inc dec popf dec mov fcmovne (bad) mov lods std es adc push arpl xlat rcrb fnstsw rorb pop cmpsb mov stos inc sub cmpsb cli xor bound fidiv popf faddp sub shlb sahf ds negl sbb jo xchg ficom xor xchg loopne and cli mov in xchg or (bad) fisttp dec xchg js repz repz data16 stos sub pop jae sbb sbb mov enter es decl xor sti mov stos popa xchg cmp iret mov mov daa sub out (bad) pusha push aas cld pop adcb out inc (bad) int3 mov dec pop jo and inc dec inc sbb fiaddl ja add popa (bad) enter bound inc jecxz,pn xchg xchg fisttpl pushf push sub mov iret and push sbb popa and dec pop dec jmp rorl lret jge test cwtl push mov or push into adc mov fcoml push sub aaa mov jge iret mov mov sti cmp lret daa or add leave out sbb sahf out test insb scas aas jns cmp stos dec decb movsb stos cld mov insl jae jmp mov mov cmp loop daa mov ss mov loopne,pn mov call push sar test mov das push es popa and mov pop xchg push bound aas pop mov insl (bad) jge jl xor pop test cmpsl dec icebp sub add daa pop das mov push add popf loop lcall test add repz (bad) hlt decb mov mov out sahf sarl cli stos lahf jbe fimul sbb (bad) enter out fistl push int cmp enter add dec xchg sahf icebp jge mov xor adc or pop repnz and and jno push popf xchg pop cmp int mov call sbb scas jo or cmp mov hlt inc cmp mov cmp xor push (bad) cmc xor dec or cmp sbb and int dec push cmpsb mov add adc test testb pop xor lods mov ror push js fstpt push jae jbe nop cli cmp inc scas lret out mov idivb add insl movlps dec sub pop int3 int3 and xchg cmc imul scas inc insl lods inc test mov cs inc jae clc mov int (bad) test push inc cmp das popa popf (bad) gs fsubrs jmp and stos into sahf mov sbb ljmp sbb mov in lret cmp add jl mov test (bad) mov (bad) mov jb mov gs jne jbe pop int aaa je jae mov add jge fiaddl adc in mulb pop xchg stc jae lret sub ljmp pop jno les in and addr16 outsl mov pop xor pushf mov ret (bad) cmp out into jl in or xor cmp cmp negl add xchg fisttpll adc add std adc adc push pop (bad) or add ret mov cltd add ret inc aaa iret mov inc inc push lahf ds ja cmpsb (bad) hlt mov movsb sub loopne mov push (bad) pop pop dec into (bad) pop fld outsl cmp jae pop mov jge push pop sub mov jl jbe mov jbe adc push xchg ja push addb xchg jb mov mov dec leave jbe push loopne int3 inc popf ss adc cmpsb push xchg sti sub ret sub jne fidivl and dec jg add xor jp stos loope jb cmc push lahf sahf popf loopne std mov add xchg pop fmull fs adc xor fistpll and pop and fs jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp and sub ljmp arpl ret pop pop aam sub daa addr16 add dec mov mov out cmp ds scas scas (bad) push push dec cmc test xchg es cmp mov cmp adc adc jno adc cmpsl and jno xor add imul out sbb in jle mov pop popf popf rcl jecxz xchg inc out jno mov hlt negb dec aad add clc mov push mov aad inc push adc rcl std adc and (bad) stc stc add jg pop pop or (bad) push lcall es mov mov fldl sbb pop pop and movsl mov (bad) mov jge out call pop xchg xchg stos stos in out daa and dec dec into dec cmp es test mov ret movsb (bad) (bad) loopne pusha jo int3 inc inc push push sbb inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor sarl dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd aaa sbb adc jb or mov fcmovnu pop pop (bad) adc cmc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg (bad) popf push dec and pop sbb js (bad) xchg and mov xor sbb sbb adc or loope sub js cld je inc inc adc ljmp xchg xchg cmp (bad) jmp xor dec jg add pop pop mov ljmp cwtl fs sbbl in sub addr16 add dec (bad) mov jo mov cmp ds scas scas xchg lea mov xchg aas aas xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc add (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add add je dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam add sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov add add enter xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in add sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and push sbb lods jne inc and cmpsl push or test lcall ret call xor adc add leave dec and cmp xchg add jne (bad) data16 inc aaa xor mov xchg inc sub dec and loopne or jl (bad) dec iret (bad) sub lahf push jo mov mov push sti push shrl mov rclb lcall je int push test mov add xchg adc and jnp add jo lcall cmc push cmp in ja enter inc sub fwait repnz int jle hlt push jne push loope sub sub pop icebp lcall and cmpl loope sub insl push add aam sbb pop cmp icebp out cmp xchg cld xor fist nop inc and jp dec xor or repz inc sub arpl clc nop int lods lods out cmp ds pop mov out fcomp push push cmc cmc test je mov pop sbb in subl mov je adc xor leave dec dec xchg adc push cmp je dec mov inc lods in xchg lahf mov add pop sbb rclb (bad) mov add ss ljmp cltd into jg gs cmp popf adc lahf je cmp adc adc lahf stos leave (bad) and sbb stos nop (bad) mov movb lret mov inc arpl mov push and xorl mov sbb in jecxz add add jb pop imul inc pop mov add in outsb sub lahf fcompl enter fbld sub xchg imul lods or dec sub push xchg or out lret js add scas cmp adc testl xor icebp xor mov imul jecxz xor cmp dec notb push inc xchg xor add cmpsb stos in inc insl iret mov jne pop mov shlb aas jns iret mov and ss loopne push sarl lea jle test lahf push cli cmp adc or jg leave pop cmovbe push fstps pop push mov (bad) cmp movb (bad) mov sarl jmp cmp xor ret loop add bound add fs pop or rclb and stos movsl pop addr16 jno lret push dec inc aaa jp sahf iret xchg enter fisttpl int dec cmp movsb jae mov in lcall into lock cmpsb loopne mov or xor cwtl lret popf iret or mov or loop nop jno xchg aad xchg in stos inc pop mov out hlt push push ljmp mov mov push pop cmp mov (bad) pop sbb loope dec pop jns adc jge fildl lcall mov std push xchg pop sbb mov push ja test lea mov (bad) and inc out push enter xor and push adc sub outsb jp cld jecxz add pop fs clc xor push fcompl test and aaa dec or cmp sub fucomp lods ljmp and push rcrb inc xlat imul push outsb and add pop or mov xchg es out jns,pt daa lods call push lahf lock (bad) xor std xchg mov mov mov imul push je outsb iret or add push lret je dec add cmc cltd into mov push icebp mov sbbl rcr jl jns cmp notl aaa jo sbb push sub cmp jns push outsb movsl fcomps idiv push adc jo in enter inc add dec xchg (bad) clc sub add repnz mov mov test adc movsl pusha mov push pop mov in xchg push stos inc pop fistp and out ljmp and cmc into sbb fldcw or sub sub mov insl xchg lods xchg in mov jns xor adc test fdivl cmpsb (bad) mov pop or imul insb jne fadds je and or adc xor add pop (bad) into mov xchg push pop cltd (bad) xchg shlb jns,pt sub jmp cmp out sub cmp lods cmp jno push lods lods lahf lahf (bad) jnp adc std aaa aaa mov stc jmp mov and movsl mov add loop mov add call jnp (bad) or pop test mov loopne mov popf inc subl insb mov mov sbb mov jae insb pop mov ret sbb es ss scas or lret mov decb aad jo int3 mov or loopne outsl sbb cmp xchg fwait xchg into adc (bad) je mov cmpsl add cli aaa sbb stc and (bad) nop dec xchg and mov sub xchg dec mov gs divl hlt mov ds ftst sbb popa pop movl jecxz sbb stc repz in sub inc das outsl movsb jle test inc push pop jb in test xchg xchg bound mov enter and in sbb imul les adc xchg in mov add and add mov add int jne imull aad xor stos ljmp daa std addr16 ret mov sub inc or daa insb dec push dec inc fstcw mov cmpsb out pop cs mov into adc sarb xchg rorl out xchg cmc roll sbbl push adc push inc (bad) inc mov pop xchg stos jo cld ficomp test xchg cmpsb bound sarb jns or div inc jge jmp sub pop or mov outsb pop js ret or mov lahf (bad) (bad) repz std std aaa aaa push xor out xchg lret das das pop pop inc inc ret (bad) fs and inc inc (bad) or inc mov out addl test sbb data16 fisubl pushf pushf pop pop bound cmp mov mov stos out out and aad xlat xlat adc jo lcall sbb aam sub outsb scas das and add pop pop dec dec mov mov (bad) out sbb ds scas scas and lods lods or jp rcl add jae xchg mov imul xor adc xor leave leave dec dec popa sbb gs insl xchg push push in in popa popa jbe scas scas dec dec xchg nop rcrb cmp idiv inc xchg jmp adc push and mov push push in mov lahf pi2fw or out add enter (bad) (bad) fstp inc add push sbb inc (bad) (bad) in add es cmc mov int andl les test cmp pushf pushf pop pop ss jge dec rcll stos lcall mov dec dec ret cmp ss and jbe mov divb cmp lock mov fs push or inc inc adc or mov xchg daa daa jne xchg (bad) xor push add fisttp or icebp stc stc loope outsl outsl mov aad fisttp xchg xchg push xchg out push mov mov out repnz pop cwtl std mov cs lcall cltd cltd cltd cltd loopne mov js in in jb or movsb fistpl jnp fcoml adc cmc movl sbb pop pop xchg xchg pop lock push push push pop int inc add call fstp mov enter sbb dec cmp sub loope or cld clc clc inc inc adc jecxz jne add fwait (bad) mov cmp jmp lret divl sub sub push fstpl sub ficomp aam sub addr16 add push dec mov test out (bad) push push push push (bad) push push sbb xor xchg xchg icebp icebp inc adc imul jl xor xor leave inc dec inc and data16 mov cmp stos stos adc sahf sahf mov push cmpsl push pop popf popf rcl mov cli jnp cmp idivl jmp sub jo orb push and jle,pt jno push push push pusha pusha lock aad aaa xlat enterw add inc and pop inc inc (bad) (bad) and addb cmp repnz mov mov int sbbl movsl movsl push push movsl movsl mov test cmp push pop bound cmp add mov xchg stos stos out out and xor jmp in xor lcall mov shll sub add jge dec mov fwait mov out cmp ds scas scas loop adc cmc mov xchg xchg icebp icebp out sbb jle xchg xchg insb insb fs xor xor leave dec dec aad sub data16 dec dec mov push in in ljmp mov mov rcl test or jmp mov xor cmp test add push push lods lods lahf lahf (bad) (bad) jnp call and (bad) stc stc add rcl mov sub addb pop mov mov lret int andl test sbb mov in mov (bad) (bad) push pop bound cmp pop pop clc clc xchg xchg stos stos lret and mov outsb testb ss gs mov ret mov pusha int3 int3 mov cmc mov loopne pusha dec or xchg xchg daa daa inc or dec ja inc inc (bad) or pop adc pop push mov imul pop pop or div jmp push shlb out repnz pop sub jae aas aas cs sbb cltd cltd cltd cltd xchg add dec xchg dec or sbb movsl movsl and in in or dec dec std std flds sbb pop pop xchg xchg dec rorl push push pop pop lea js inc sahf bound inc inc mov xchg xor sbb in in in aam push push add es cld js add adc std ja add fwait xchg xchg cmp (bad) jmp leave sub dec dec gs or sub ljmp daa daa pushf pushf ret ret pop pop mov inc push and add movsb pop dec mov mov out push daa jle test clc adc cmc test insl insl push push sbb in lds and xor sub mov dec add data16 daa push xchg push push out in fidivr mov jns cmpsb cmpsb bound das jnp jns iret sbb lods jmp sub mov sub and jle jno push push or add jnp (bad) adc std aaa aaa inc inc (bad) (bad) clc stc add pop sbb pop inc inc (bad) (bad) and addb repnz fnstenv sbb pop pop mov mov (bad) push pop bound xchg cmpsb mov ljmp sbb ljmp fsubs push cmc sbb sub push insl sub push push dec mov xchg add lods out inc movd scas test scas ljmp test out jae xchg icebp icebp mov imul jl xor and into leave dec dec xchg ss popa data16 push js movb fxch test mov mov xchg popf popf rcl add cmp idivl jmp sub jp sbb and cmp outsb adc push imul repz cld std aaa aaa inc inc (bad) (bad) adc add das xor pop cli push xchg (bad) movsb xor sbbb repnz mov addl sbb push push movsl movsl icebp (bad) daa bound dec pop mov pop pop fnop (bad) lret (bad) frstor and mov lret (bad) aam and xchg sub (bad) xchg mov jbe mov ret movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa (bad) rcl xor dec dec outsl pop add fisttp or push push push ja sub out (bad) in or push push in in push mov out repz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or sbb pop xor mov dec pop sbb sti mov jbe rorl pop test cmp mov mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor add adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov sub ret xorl test sbb push jo movsl mov (bad) jge pop popf popf ret out xchg xchg xor mov stos out out and mov dec enter dec into into cmp ss inc sti mov gs mov ret stos fdivl int3 sbb push or inc inc sarb or xchg xchg nop es xor dec incl inc (bad) or out addb rclb sub stos xchg cmpsl div xchg and xchg xchg mov mov out sbb xor stc xchg adc es fstps dec dec scas test (bad) addl fdivrl lahf jnp push inc pop sbb sbb xchg aad xor jg push pop mov js (bad) (bad) and test mov jo pop sbb sbb adc loopne inc add es push mov inc adc cli jne in fistpl mov and or outsb jg sub sub jo add arpl ret pop pop sub insb sub mov das inc push inc add dec dec (bad) mov rol (bad) cmpsb out cmp scas (bad) push push lods rol test cmc jno mov out roll fs push jb adc xor leave leave dec dec add inc xor cmp lods in lcall mov xchg mov nop sarb jp cmp div jge jmp stc or jo (bad) in push mov jno push stc lods lahf lahf daa and jnp repz std std aaa aaa inc inc (bad) (bad) adc (bad) fstps push addl repnz mov mov int addl cmp pop xchg cmpsl daa cltd test lcall cmp mov test and sub sub int3 stos ljmp and ret pop pop aam sub cmp sub push dec push dec fisubr add lods out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz jns ja fwait iretw (bad) mov cmp pop and (bad) and addb add repnz scas cli mov lods fcmovb addl les push movsl movsl arpl push pop cmp cmp (bad) mov pop xchg xchg stos stos out out and je mov push lods or fnstcw and mov or mov (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad dec dec jmp jnp mov push pop push push (bad) cli sub movsb into mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop shrl add add cmp xchg bound and mov xor sbb sbb adc pop or and cld cwtl out pop inc jae arpl cli cli jne add fwait fwait or fisub or aas jg cmp ljmp sti and loop pop mov insb sub jo sub pop pop dec dec mov addl ds mov cmc test and mov xchg insb insb fs xor pop push or aam mov dec fcmovnb dec push icebp in or mov xchg rcl das push cmp aas div je jmp sub jo push adc push add cmp addl (bad) (bad) jnp repz stc (bad) ja inc inc (bad) (bad) adc addl rcrb (bad) (bad) and addb (bad) mov int addl sbb push movsl movsl scas mov pop pop loope cmp out out xchg xchg int inc pop insb insb push push xor popa and sub sub lret jo lcall ret pop pop aam sub cwtl cwtl sub add dec and aas aas jl cmpsb out cmp mov ficom (bad) lds xchg xchg icebp icebp out in addb imul xor out int3 int3 sbb push push jle xor mov jns in sahf sahf mov jns pop pop pushf sbb jns aaa and adc push jo adc push add cmp pop adc lods lahf lahf pi2fw or adc jge aaa inc inc (bad) (bad) mov shlb (bad) and addb es mov int addl lcall lret scas test arpl call out out xchg xchg jmp xchg stos stos mov popa and mov xor cmp aaa mov shll mov div je adc lock int3 inc inc push push bound add cwtl cwtl loopne dec dec or mov pop es xor rcl fsubrs mov or push push push jbe xlat nop mov aad pop inc jmp cmpsl cmpsl div or push push adc push add out call add out jl cs sbb loope ficomp pop stos push adc or addl fcoml xchg hlt cmc dec dec std std xor sbb mov aad jmp jbe pop lea cmp (bad) and inc inc mov xchg xor adc mov cld (bad) test mov inc lea and cli jne xchg sub fwait xchg xchg cmp (bad) jmp lret or jle sub sub es ljmp and ret pop pop jl imul sub add dec mov pop rol sub out cmp lods mov scas and lods lods and (bad) jae sub in and insb fs xor out out xor enter add jge je mov cmp sahf mov xchg nop sarb jns cmp div (bad) (bad) jmp sub push push jns,pt inc inc addl xlat cs repz inc (bad) ja inc inc (bad) (bad) stc stc add rcl pop pop inc (bad) xlat (bad) and addb (bad) mov and popa test push movsl movsl mov vpacksswb pop arpl cmp out out xchg xchg or insb push push lods popa and sub sub lret lods ljmp and ret pop pop aam sub cwtl cwtl sub add dec pop movsl sub aas jl cmpsb out cmp mov ficom sub lds xchg xchg icebp icebp out in addb imul xor out int3 int3 sbb push push jle xor mov jns in sahf sahf mov jns pop pop pushf sbb jns xchg testl adc push pop jle mov pop adc lods lahf lahf pi2fw or adc jge aaa inc inc (bad) (bad) jne inc add shlb (bad) and addb repnz mov int addl lcall inc mov call cmp jmp xchg stos stos inc popa and mov xor cmp aaa mov shll mov div je adc (bad) (bad) lock int3 inc inc push push push daa add cwtl cwtl loopne dec dec or mov pop es xor rcl add cmovg pushf dec or push push push jbe xlat nop mov aad dec inc jmp cmpsl cmpsl div or push push adc push mov out push out sbb sbb out jl cs sbb loope ficomp stos stos push adc or addl fcoml xchg hlt cmc dec dec std std test scas nop nop mov aad jmp jne pop lea cmp (bad) and inc inc mov xchg xor adc jg mov fldcw clc inc inc lea fs cli jne dec sub fwait xchg xchg cmp (bad) jmp lret or jle sub sub mov add hlt lods mov add ret pop pop xchg inc pop inc dec popa addr16 pop dec dec in lret (bad) shl xchg std mov stos test test idiv test call or xor inc pop mov jbe daa push data16 sbb movsl lods cmp test add (bad) xor xor push push cmp imull or inc jp sqrtps inc mov sbb and leave stos lahf inc sbb xchg aaa aaa add jecxz mov pop push sub in jecxz inc fs nop orl mov test cmp (bad) les arpl push push pop pushf pushf movsb xchg repnz data16 iret (bad) mov sub mov add jmp xchg dec sbb sub arpl cmp call or (bad) aad sar xchg orl push (bad) fsubrl push movsl pushf jmp mov sbb repz popf mov sbb in call push fs and xor lods out jno mov mov lods cli inc push popa imul pop imul pop dec ret aaa pushf daa pusha add (bad) in adc popf (bad) and fsts xor push mov xchg ret xchg inc pop inc inc (bad) (bad) xlat (bad) sti cld aad aaa dec loope (bad) (bad) icebp xor push dec xchg sub lcall add add (bad) in in mov jae sub xchg loope mov std jnp xor dec pop xchg aas pop (bad) test movsl mov mov cmp ss dec sti mov lea int3 mov ret (bad) (bad) lock mov outsb or push das xchg loopne dec sub sahf push cmpsb push daa gs mov dec and cs out cmp cld inc stos xor add or in fwait fwait imul push and adc repnz pop mov xchg sahf dec or jbe jmp test sub mov adc sbb icebp mov fisttpl xor cmc inc dec xchg std insl insl sbb outsl or jo movsb ret lds sub leave imulb js lret cmp data16 fwait (bad) jne cmpsl into enter sbb iret scas adc cld movsb xchg push aad pop stc xor mov int (bad) (bad) push dec nop fwait add pop pop js dec add dec mov out pop out inc jo dec or mov das mov sub xor dec gs lock psrlw mov in lods clc rcr shrb mul rcl jae push jg hlt lea insb or divl sbb push pop mov dec stc incl mov insb push xor loopne xor fcom hlt jmp rcl imul out jno inc sub jecxz jne cmovae push sarl pusha xor push mov xchg ret xchg pop push and ljmp pop xor daa movsl mov or cmp adc mov jmp ja pop pop pop cmp xlat ret fildll sub mov imul inc pop sub movsl inc fldl2t push push mov arpl ret mov pop inc push add inc dec dec gs std rorl or shlb out push push push fmulp rcrl fwait call pop xchg xchg icebp icebp mov (bad) sbb cmpsb js pusha fs jl loope adc xor lcall gs or mov in fdiv call roll out mov push or adc add (bad) idivl adc inc jo pop (bad) pop mov mov aam adc in push jnp mov mov inc (bad) (bad) mov jbe pop pop ss sub (bad) jb in cmc (bad) xchg sub repnz out (bad) aam mov scas (bad) cs pop dec xchg lods push pop lock ss loopne movsb scas cmc out jg sbb cmp int3 (bad) jae std cli leave xchg out out and lret scas loopne es dec cmp jnp mov adc jbe mov jecxz scas mov (bad) popf add clc int3 add fs loopne and dec dec aad mov pop movsb movsl push pop sub inc ja inc lcall push dec outsl in rcl mov (bad) enter jp arpl mov mov mov mov dec pop inc mov sub lret idivl sub cmp mov pop pop (bad) push jb xchg sub xchg insl insl sbb pop ds hlt jmp cmp add in dec xor mov loopne push push jle jbe sub loope inc jbe inc sbb cltd sub pushaw and mov lock xchg xchg cmp stos mov or insl jl jle jg pop pop inc xchg orl mov mov cmp addr16 imul mov test mov or ds rol stos pusha push mov jecxz loope jae shl sahf pushf jo adcb push or adc jl xor cmp je (bad) scas mov xor mov xor shr loopne pop into ljmp pop cmp idivl adc sbb or adc lret adc push push cli int3 in icebp jl jnp mov js xchg lea sub jae inc xor xor sub push inc es xorl push sbb push push movsl movsl cmpsl mov rcll cmp xchg lods mov (bad) fstps dec pop pop ljmp lcall xor mov addr16 add push dec mov mov out cmp or add sub (bad) or iret loopne jae shl mov out sbb imul sbb and test push push daa and xor jnp mov mov mov (bad) aaa cli clc xorl js cltd sbb mov sub jo sub push jns mov pop adc lods lods lahf lahf (bad) (bad) jnp outsl aas push std div inc inc mov inc add mov addb inc addb xchg rcr mov popa test cmp repz mov repz jns or (bad) xchg jge inc pop xchg xchg scas stos dec shlb mov lret dec dec outsl data16 cmp pop roll dec popf lret ret pop push (bad) lock pusha int3 int3 adc insb dec jg ss das sbb lock mov aad cwtl sbb dec ja inc inc (bad) or scas mov push in dec xor stos pop out mov test push sub imul sti sti xor cs cld aam jb cmp xchg adc inc dec or mov fistpl fcomp stos cmp std std insl insl sbb sub push loope push rcrl arpl pop xor pop test bound mov rcrb jge jle pusha jp inc test gs jne add pop inc frstor arpl cli cli jno shrb fwait xchg xchg cmp (bad) jmp xchg stc es dec inc mov inc or stos ljmp mov and pop pop rcl sub adc pop adc add dec pop dec dec std fild add lret scas movsb ret (bad) ds out scas cli jmp push cmc cmc addl sbb in and cs movsb adc rcrb and pop or xchg je dec mov xor out add lds test rclb dec cmp cmp mull sub adc push test pop jle mov or mov rcrl insl cmp or out sbb inc (bad) (bad) lods mov inc jg das xor fwait mov push addb adc mov int addl ljmp mov and add add push pop fisubl sub adc inc mov stos stos scas sahf push inc inc dec gs test ficompl ret ret pop pop and imul sub add mov lods sbb lcall test jg ficom stc cmc test loopne mov mov imul xor aas je leave leave dec dec add outsb pop xor push mov stos or shrb mov cmpsb jge rcl jne jns jl andl adc push adc cmp jle,pt jno push mov (bad) jnp repz pop jmp dec sti sti push loopne mov push rclb jecxz inc ss (bad) leave fsub fidivrl psllw pusha in mov rol mov pop bound cmp add push in adc dec push mov pop or xor ret (bad) ss gs clc inc data16 out mov movsb movsb out mov je mov inc inc sbb cs loopne dec dec or notl into xor iret aaa push add and hlt out push push push adc fidivl aad div adc sub mov mov mov pop in sti sti sahf pop add rcr outsl fwait data16 jnp or movl arpl (bad) inc jb popf add nop cwtl sub and outsl (bad) insb aad jmp js pop lea js and or aam aaa je cwtl pop pop sbb aam push jecxz es js cld cli clc dec inc adc cli je add fwait cltd xchg cmp repz xor jle xor sub imul jmp push jo lcall pop pop aam sub addr16 add fmull mov rol lods out xor ds scas scas aad push push mov (bad) jae xchg xchg icebp icebp sbb in addb fs xor adc xor and dec add data16 cmp (bad) sub in pushf sahf mov movsl mov mov jns or pop rorl bound push dec mov add add or push and (bad) jnp repz jmp inc out (bad) stc add cmp inc mov and inc inc and repnz mov in addl test sub push int3 movsl fdivs pop pop or pop cmp shlb stos (bad) out inc and inc sub jo lcall aad (bad) aam sub bound jae das add pop daa dec sarb rol lods out jle jno sti test scas mov cmp cmc mov loope jae mov mov scas sbbl dec jl xor jle in jl xor je add xchg (bad) jp fsubrp mov mov mov xchg mov jecxz dec jnp jns cmp divl jge jmp sub jo adc push and jle jg push push clc lods icebp lahf unpckhps repz inc (bad) (bad) mov das pop pop inc inc (bad) (bad) pusha and subb repnz mov test icebp andl test pop pop push push xlat movsl fidiv jb adc cmp xlat mov stos stos movsl out inc and mov dec mov movsl rcll int jbe mov mov lds pusha lods int3 and sub and xchg loopne dec or mov xchg dec daa inc xor dec push ja inc mov push push push or nop nop pushl fsubrs insb or in push mov inc (bad) out repnz pop mov mov push aas push cs cltd cltd cltd or dec dec aam imul jb or xorl popa adc std jnp sbb outsl sub xchg mov pop xor push aas pop out lea (bad) call and adc mov push xor sbb popa adc loope adc es cld xchg clc sub adc add add fwait cltd xchg cmp mov xor jg cmp sub mov jo lcall sbb aam sub addr16 add pop sub mov mov mov fsubrl push push mov rcll jae xchg mov imul mov insb or xor push adc xor add je pop dec scas (bad) aaa push in in xchg sahf mov xacquire lods popf rcl jnp jns cmp div pop jge jmp sub jo adc push and pop jle jno push fldcw (bad) (bad) repz std std aaa aaa push inc (bad) (bad) mov jb inc das cmp inc mov sbb bound es mov mov int adcl movsb test cmp push shlb pushf pop pop bound cwtl out repz shll lret stos popf out inc and sub sub ljmp stos fmuls arpl aam sub addr16 add sub mov scas ror and cmp ds fidivr push fwait cmc call jae xchg mov cs in addl adc adc xor fxch dec dec push add pop je dec test in sahf sahf mov jmp popf mov jns cmp divl jge jmp sub insl adc push and jle cmp push enter insb bndldx repz mov pop aaa jno (bad) (bad) add sub inc mov orb repnz mov mov int addl loope jbe sub push movsl movsl lock (bad) jbe add cmp mov pop pop rclb inc and mov dec mov mov mov jge mov scas (bad) xchg lock int3 and js and loopne dec push or mov xchg inc daa inc xor dec sbb es in fisttp or push push push push push hlt nop fnsave ret cmpsl div dec or in add mov mov inc mov mov pusha pop in sti sti xor cs fnstcw cli cltd icebp cltd jo jge xchg or xlat cmpl jb cltd cmc es xchg or sbb push pop sti xchg lcall pop stc lea call and pop inc mov xchg inc xor push sub sbb cld clc clc inc inc inc adc add add fwait xchg xchg cmp jmp xor add sbb sub mov cltd ljmp arpl ret sub aam sub sbb and add dec pop dec dec (bad) mov mov int (bad) out cmp (bad) test scas out push push mov in mov xchg nop icebp imul push imul adc xor add adc mov daa push test std sahf mov lds mov sbb or push cmp imull jge jmp sub push and or push movsl lods lahf lahf pop bndldx repz std std aaa aaa adc (bad) lcall pop aas inc (bad) (bad) xor subb xchg repnz mov mov test out popa popa test push xlat movsl fdivs jb push bound out xchg xchg scas mov fsubrs inc sub fsubr ljmp fmuls pop mov addr16 add pop ds xlat mov scas rcr mov pop cmp shrl push jecxz test notl xchg in orl adc push adc lods leave cmp add pop je dec mov push in in xlat sahf std mov push les cld popf movsb rcrb jnp jns cmp idivl jge jmp sub jo adc push and jle sub push (bad) adc popf repz mov inc out (bad) lcall pop xor and xor inc inc gs repnz lret mov ljmp sbb adc movsl les pop pop insb bound xchg iret mov fsubrs pushf mov lret and into dec cmp ss add leave mov or mov lcall int3 sub or cwtl loopne pop dec insb or (bad) xchg dec daa inc xor dec adc inc call push jne jg stc nop mov aad jg stos stos repz test popa or sub push sub shl repnz pop mov mov pop aas pop lods fnstenv lock cltd cltd add xchg pop jb or subl popa adc pop insl sbb outsl cmp add push cmp lea call and push inc mov xchg inc xor sbb push sub loope add es cld cld mov adc sbb add fwait cmpsb xchg cmp cmc jmp ja or dec sbb sub sub ljmp mov pop arpl inc sub addr16 sub push mov test out cmp sti test scas (bad) ficom push test cli xchg sahf icebp jne in popl or pop xor inc xor push push and je dec mov in in sahf loopne cmp mov xchg and xor addb jge xlat push daa sub inc adc push and or push (bad) lods negl repz stos mov ret ret stc stc add jo sub ja hlt cmpb mov mov xlat lods mov lret test pop xchg repz (bad) ret ret popa jne xor lods cmp mov int3 fmul (bad) mov pop insl fwait ljmp mov icebp pop pop mov dec pop inc imul fidivrl mov int mov test scas scas addl push push (bad) repz popf sbb in (bad) pop or sbb je inc push scas leave dec dec pop pop and pop ss sbb aas push in in rol jmp add (bad) shr or hlt (bad) mov jns adcl jno das sbb dec cmp out sbb and and ret jl jnp lods lods addr16 stos push inc or stc ljmp sub inc push addb pusha adcb aam ror addl dec sub call gs popf lock into (bad) pop pop int3 int3 fmul (bad) in fstpt dec xchg xchg dec pop push fs mov adc (bad) jbe mov mov xchg orb sbb imul into adcl enter push ja mov jnp and addb arpl cld in fidivl shll add div push push pusha je mov mov mov mov pop dec mov cltd cltd cltd inc inc aas sub aam pusha and jle in cmc mov mov add mov push push sbb pushf xchg or sub fbld mov cmp sti and push push (bad) ret idiv inc pop jl pop sbb adc sub loope add es std cld mov adc xor sti fs xchg cmp cmp and or jg and ljmp arpl xchg sub dec insl sub or push dec mov out shrb loopne,pt scas scas (bad) lcall mov fnsave in subl lods push jb lock mov dec dec xor xor imul in sahf sahf mov notb pop insl mov rcrb jp jnp in inc jge jmp pop xor adc push and jle leave adc jge popf add cmp repz mov inc (bad) (bad) add pop pop inc inc (bad) (bad) and addb divb mov mov (bad) int andl test push cmpsb movsl mov (bad) pushf pop pop sbb jge dec aas adc xchg test and sub scas lds lcall pop pop or insb sub mov das je inc add dec dec (bad) mov rol andl test scas scas (bad) push push fldenv jno mov out roll fs push jb adc xor leave dec dec add aaa xor fwait fwait inc (bad) lds in mov push movsl mov xchg add jp cmp div jge jmp sarl jo (bad) in push xchg mov inc push stc lods lahf lahf sub cmp repz std std aaa aaa inc inc (bad) (bad) movsl stos inc add imul inc jle repnz mov mov int addl dec sbb xchg cmpsl arpl adc and cmp rorl stos out out and mov or push mov shll mov add add jbe mov mov aad repz pusha int3 int3 inc inc push push bound inc call gs or xlat xchg xor push xor shrl ja inc (bad) or push push push push lcall xlat lahf inc jmp xchg cmpsl cmc (bad) dec or test push mov out repnz pop in sti sti xlat insb outsb sbb popf sbb fstps movl fistpl pop (bad) adc cmc cmc dec dec std std and sub dec imul stos jmp push pop std lea add and inc inc mov xchg mov lret xchg adc sbb cmp cld mov inc inc jne arpl repnz jbe add fwait fwait xchg xchg cmp and mov jl aas jg sub sub jo lcall pop pop aam sub addr16 add mov dec (bad) mov shr jmp inc cmp loopne,pt out scas xchg ficom cmc cmc test xor mov or arpl fnsave addr16 daa xor out dec push add je dec dec mov add cmp mov xchg fstpl jns imul jmp sub adc push jge jns cmp jl inc adc lods pushf lahf dec punpckhwd repz (bad) ja adc (bad) stc stc add das das pop pop repnz (bad) lahf roll inc jae icebp repnz mov mov loop addl test sbb push push movsl movsl mov dec xchg adc int3 out xchg xchg loope pop pop add popa and sub sub ljmp pop (bad) and adc pop je insb sub addr16 enter lcall shrb ds (bad) out scas jle aam pop (bad) int3 (bad) jo rclb in movsl scas sub insb addr16 xor adc xor xchg xchg or push rclb je dec vunpckhps in add divb popf popf rcl jnp jns andl (bad) xor adc push and jle jne adc lods pushf lahf (bad) (bad) jnp repz in ja inc xchg or insb das pop pop push inc rcl and xorb add add es repnz mov xchg xchg ret adcl xchg sub pop push push cmpsb movsl divl pop pop push jge sti out xchg xchg mov xchg stos stos es and mov aas cmp ss gs mov or movsb (bad) (bad) lock xchg cwtl sbb cmp mov jecxz or or sarl rcl xor dec dec ja inc inc sti test mov das rclb sub stos adc push push cmpsl in imul mov mov jge daa push outsb cs fstps sbb cltd xchg cltd cmpsl pop dec dec iret mov adc (bad) addl (bad) dec mov pop sahf jnp dec pop pop sbb sbb xchg push jmp push pop cwtl lea add call and push sbb mov sbb pop sbb sbb adc lock add sub cld mov inc inc adc cli jne pop pop fistpl lret into and or pusha jg sub sub stos ljmp arpl ret pop pop insb (bad) insb sub mov das mov mov (bad) mov rol andl test scas scas (bad) push push mov add jno mov out roll fs jb daa adc xor leave dec dec add cmp lret fwait inc les lods in test push movsb mov xchg std mov (bad) jne jp cmp div jge jmp cmp (bad) in push mov jge xor push jns lahf lahf inc aas cmp repz std std aaa aaa inc inc (bad) (bad) lea pop es (bad) sbb andb repnz mov mov int addl inc sbb xchg cmpsl movl and xchg xor test and sub sub mov ljmp and ret pop pop xchg aam sub addr16 add dec dec mov mov cmpsb out ljmp ret ficom mov mov push mov out addl jb loopne mov pop clc or push es mov lods in lods sahf mov add xchg nop sarb (bad) jnp or jmp sub clc adc push adc jge jno push push lods lods lahf lahf dec push cmp and aaa jl mov fildll pop pop (bad) imul inc es cli mov jns ret subl test push pop mov xchg pop bound cmp jns inc pop xchg inc sub push fbld mov mov ss cmp lret rcrl mov or mov outsb jbe,pn test mov jns sbb inc fs loopne push gs or xchg xchg daa daa xor rcl dec push cmovg cmpsl lds out dec or push (bad) nop mov aad or lea push push in in push mov ret sbb in sti jg and fstp sbb shrl dec dec xchg or mov fisttpl pop fdivrp and std sub push outsl outsl cmp (bad) jmp pop pop lea cmp push movsb and enter xor adc add loope add cld clc clc inc inc leave je and sub ja fistpl mov xor or arpl jg sub sub ljmp lock fistpl out sub addr16 dec pop dec dec push sub shrb ds out scas out paddq mov jae xchg loopne add in shrl addr16 xor adc xor xor aad push jp xor push vunpckhps in (bad) lahf mov pushf xchg popf popf rcl jnp jns arpl negl insl jmp push adc push and jle in pop adc lods pushf lahf (bad) (bad) jnp repz sub xchg or fs pop pop push inc (bad) (bad) add add es repnz mov stc test add pop push cmpsb movsl divl pop pop es jge test mov stos stos jp popa and fsubrs lcall pop pop mov insb sub addr16 pop pop dec dec push fisubrl add cld sahf cmpsb out cmp scas out fist imul jo xchg xchg icebp icebp sbb in leave in imul xor mov dec dec xor push dec dec xor pop dec vandnps in sahf sahf mov notb pop cmc scas nop shrb jp jnp loop inc jl jmp push xor adc push and jle mov jge popf jnp cmp repz mov inc (bad) (bad) cltd (bad) inc add das pop pop inc inc (bad) (bad) and addb divb mov mov (bad) int andl test push cmpsb movsl mov (bad) pushf pop pop testb sub test and mov lret or into aas cmp ss gs mov (bad) movsb std (bad) xrelease int3 or push push inc cmp mov dec or mov lock and push rcll inc inc lahf fisttp or push push ss nop loop (bad) aad imul mov cmp into mov inc in mov push pop mov sti sti ja outsb cs fstps sbb pop dec dec dec loopne adc mov aaa mov fisttpl (bad) adc cmc cmc adc mov sbb cmp (bad) (bad) jno push push pop pop lea cmp shll push loopne test aam push daa pop sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add sbb dec (bad) std sub ror cmpsb out sub scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg nop shlb sub negl xor adc push and jle jno push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl add pop sbb adc test cld mov add jge out out xchg xchg mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out push jg je,pt out scas test adc loop test xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo pop push sub data16 loop jle,pt adc mov jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos lcall lret or fnstcw and mov or mov (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmp mov aam push push mov sub movsb into mov push cmpsl out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js inc (bad) bound popf add mov push daa pop sbb push adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall sbb sub jo sub pop pop dec dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov adc or mov xchg sbb mov jns cmp testl add xor add push xor fisubr push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop push and cmp sti mov pop repz stos mov popa and sub sub ljmp fcomp arpl ret pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in or das and imul pop jae scas fimul push data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp popf outsl xor push sub xor fsubrs adc lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb mov in imul (bad) push pop add cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor ja dec sub enter sbb push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std inc sub lea das outsl add mov jno xor pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait (bad) cmp mov dec or aas jg cmp ljmp fsubs ret ret pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test add rcl jae xchg xchg icebp icebp sbb in addl xor adc xor mov or push cmp xor sub xor in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add mov pop lcall addb mov mov mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub stos and cld arpl push dec push dec fisubr add lods out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns iret jl mull xor add push xor mov jno push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos repnz popa and lret or fnstcw and mov or mov (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad das and stos jnp mov push pop push push (bad) cli sub movsb into mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea cmp shll push loopne test aam push daa pop sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg add cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add test add mov ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor jne or push cmp xor sub xor in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb es cli mov xchg fcmovb addl les push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall sbb sub jo sub pop pop dec dec mov jmp (bad) jo cmpsb out sub out scas mov cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg nop shlb sub negl xor adc push and jle jno push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb outsl mov push int mov lods fcmovb addl les push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov dec lret mov jmp mov inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul jae mov aam push push mov sub movsb into mov push cmpsl out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std add insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea cmp shll push loopne test aam push daa pop sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl jb dec pop jae test adc data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop or (bad) clc rolb inc inc xor mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub adc inc add dec push dec fisubr add lods out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov sbb sbb ficom jns sub negl push jmp sub adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb gs aam cli mov stos fcmovb andl test sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock mov cwtl pop pop push push sbb mov or xchg xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push add nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl faddl pop mov xchg or std aaa jp sbb cmp jmp pop pop mov inc add cmp xchg bound and mov xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub mov ficompl mov ret insb sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test push fnstenv in xchg sub jnp sbb xor adc xor leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo mov data16 loop jle,pt adc mov jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl push sbb adc test cld mov add jge out out xchg xchg mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add test add mov ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl push aaa cmp js mull push jmp xor add push and jle jno push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov cltd add test sbb inc in shll pop pop bound cmp mov xchg stos stos out out and mov dec dec add into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne ss dec or int addr16 push es rcll cmovg inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs pop sbb fstps out push adc fcmovnu pop pop (bad) adc cmc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld xor pop inc leave push arpl mov adc fwait testl or dec dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov cmpsb out jns ds adc loop test (bad) jae xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo or push data16 loop jle,pt adc mov jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and outsb addr16 ljmp and aam pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor movsl test push cmp xor sub xor in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das add pop pop inc inc (bad) (bad) and addb repnz mov pop add mov or in shll pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov aam daa imul rcll dec adc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fmul push mov adc jp sbb pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne or fwait dec sarb movsl call dec or pop aas jg sub sub ljmp fcomp arpl ret pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in mov sub das and imul pop jae scas fimul push data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa sbb iret (bad) and cmp pop es xchg (bad) inc xor and inc inc es cli mov xchg fcmovb addl les push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas jb adc mov test test in subl jl xor adc xor leave leave dec dec add data16 dec dec mov add in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and idivb jle xor push idivl cmp in adc std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos adc mov (bad) fwait or fnstcw and mov or mov (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push leave mov into mov push cmpsl out in pop (bad) repz cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp sbb pop push into inc add xchg bound daa push loopne enter xor sbb outsl push push adc push data16 cld sahf out pop inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub cwtl stos sbb sub mov in aas lock push add into jbe (bad) dec xchg dec mov jmp ret leave iret lret dec adc icebp mov test adc fs xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf js mov xchg enter adc push cltd nop jge ljmp jp or push inc mov jno push mov pusha lock cmpsl xchg jg xchg cwtl push inc sub (bad) (bad) int3 cld or das xchg pop pop inc aas aam and mov and repz mov test mov popa popl pop (bad) lods movsl mov (bad) ficomp imul or (bad) xchg stos stos out das and aad xor ljmp mov adc ret push pop (bad) sub outsl imul add sbb dec mov (bad) mov popf lods in loope xor mov and cmc cmc test push add sbb loop subl sub xor adc xor push data16 push dec mov sbb in sahf popa mov addl jb out div jne clc jmp (bad) jae adc push and or inc jno push fidivrl jg repz cmp std aaa ds inc int3 loopne xchg popa outsb dec sbb (bad) xchg dec dec in loope xchg and mov mov mov xor test mov pop xor roll js subps fcoml add sbb mov dec cwtl (bad) push loopne or cmc mov stos fbld pop loop inc (bad) (bad) insl mov mov and out jle mov xchg and loopne insl fisubr xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul lods cmpsl addr16 lock sbb mov (bad) and test in lcall flds sbb sub jmp adc int3 inc or andl pop (bad) adc ret cmc dec dec aad insl insl xchg pop pop xchg xchg stc jmp (bad) push call (bad) and inc inc mov aam cmp in xor add xchg cs jne loopne fildl stos lahf cmp iret fdivrl sbb ret mov popf mov call fisubl lds mov and repz lock into mov addr16 mov mov fucomip nop sub lcall pusha adc leave jmp popa sbb rcrl popf add sub push fldt mov ficom out ds cmp pop ss lods mov add sbb cmpsl loopne test and and icebp dec sbb dec dec inc cmp or push pop stos gs insl idivl dec (bad) mov jno push roll pop lahf cmp sub lods (bad) outsl mov cmpsb mov or pop mov rclb jne je mov mov xor add iret sbb or out mov rcrb inc (bad) jg imul cmp and mov (bad) cli mov adc ja dec mov inc push in pop dec jnp jae sbb repnz dec into xchg mov push jl add movsl repnz push stos dec jb pop and mov xchg pop jae pop xor incl fistpll or loope cmpsl or out into call jae test push leave push xchg rorb aas pop lds ljmp pushf mov into fwait cltd dec adc push mov xchg fwait cwtl push cmp ds (bad) dec mov sbb fsub mov inc stos mov xchg lret sbb sub and push icebp int into adc (bad) mov inc push mov xor cmp push mov push mov push adc cmp push xchg xchg xchg xorl sbb pop jbe aas xchg xchg (bad) jge push lods or add ds (bad) repnz pop dec jg,pt sub popa mov add lods or aaa fs jmp and aam out xor mov jp pop mov rclb push mov sahf fwait imul add repz pop fsts adc jbe dec inc cmpsl sub pop rcll mov or pushf shlb enter dec popa dec movsl push push out fsubrl imul fisubrl jge adc jae or cmpsb std dec ss cmp xchg xorl aam popa mov mov mov adc orb adc adc jl adcl loopne adc add pop push in xchg or sub inc aaa mov gs jp and mov lds mov cmp jne mov dec les mov test push pop ds ret inc jb xor cmpsb sbb mov outsb imul mov ja test sbb inc or pop xor cmp jbe cmc jns mov xor inc sbb negb mov xchg inc loopne lret jle outsb push shl pop mov mov iret or popa lret dec dec push cwtl enter add add idivb inc fcmove cmpsl mov lahf adc adc cli sub xlat sub out arpl dec lcall inc pop mov loopne add addl and movsl cld inc cmp dec jb jbe xchg pop icebp fsubl jne xchg stc ja into xchg inc push xor out sti jb mov push cmp gs mov mov adc (bad) fucom in rol rep sti mov aad aas inc aam rcrb fucomp sub int3 cmpsb aad jno mov ret lcall push mov cmp clc ljmp push dec jle inc jo jne jge fcoms dec jnp out inc (bad) push sub sub pop rcl cmpsl dec xchg push bound ss mov jno adc std (bad) mov adc frstor inc mov jno xor pop aas and jb repz jecxz pop lahf iret ret notl and pop (bad) lds cld mov shrl cmp xchg fnstenv arpl and movsl addr16 sub data16 mov je movsb ljmp pop imul popa femms call sbb push aam cmpsb je out jmp push sub out in pop dec cmp (bad) jne and and loop push ficomp add sti inc scas mov aaa push outsb dec repnz stos inc pop or stos cmpsl jge or roll in std aaa and jecxz push jg jae mov mov in sbb and or xor out mov xor cmp int3 in rclb movsb fcomp jae xchg aam mov in aas mov sbb xor mov mov outsb shlb cmpsl ja xlat cld sbb sub dec sahf stos jl out add les loope (bad) scas (bad) (bad) xchg mov outsl pop insb cs repnz cmp push cmp xchg xchg dec and sub cmc inc aas and and cli insl push push lret icebp fistpl lock ss inc cs mov int3 add aaa lret mov add ret aam push clc cmpsb sbb frstor (bad) or je inc pop lret push faddl and subl add push jge push xor (bad) pop pop jl jge cs mov add popa jecxz pushl xchg dec fstl pop mov xor loopne imul sahf adc mov add shll (bad) hlt mov lahf rol mov mov xchg sbb gs push ds add outsl mov rep test sub mov dec adc xchg jne push rclb outsl leave testb and push movsl adc stc cmp dec cmp dec mov and lds clc imul pusha pop and push clc push lds addr16 jecxz fucom mov mov psrld inc dec mull jae pop (bad) push imul mov pop xchg pop jle pop jmp popf lea push inc ja pop jle fstpt (bad) dec sub adc xor sub push jnp push mov or push loope mov dec pop std insl cmp stos mov inc xchg in or sbb outsb insl shll (bad) call and enter jp jge push inc xchg sub dec and jge push repnz scas (bad) sbb mov mov xor sub pop pop xor pop fidivr push cltd or call push (bad) xchg xchg clc dec in xchg adc rolb scas push sbb add xchg jp ret add insl cmp pop push es sbb mov data16 mov call rcrb push mov push test pop pushf es ret hlt or push push mov inc jecxz (bad) ficom das in xchg mov ud2 into in push add pop movsb fadds int3 xor jne into inc les cwtl cmc adc pop inc fs cmp (bad) push in add xor roll lods xchg xchg xchg xor push movl (bad) aas gs pop and sub popf add sarl mov lods aad aaa (bad) pop adc adc mov mov push sbb dec push cmp push or xchg ss fnop or mov xor jno in fild add lcall fdivs push daa inc movsb add jp (bad) cwtl fisttpll (bad) js sub sub test mov aam mov aaa mov mov and push add clc loope ret or cmp push outsl mov rol (bad) cld imul cmp jb cmovae aad push jp jecxz cmp or mov (bad) or shll and inc fnop fnstsw stos data16 (bad) (bad) fisubrl jp rcll xor sbb or jae movsl das scas ss jno mov mov xchg xchg add sbb jnp out cmp icebp inc data16 adc enter mov xchg aas ja (bad) jno push (bad) cmp shll (bad) add mov (bad) loope cli jnp insl cld ret inc xor inc (bad) cmp xchg cmp pop xor jae jb dec arpl push inc jne cmp push leave xchg iret adc mov and stc push sbb jae fstpl test cmpsb inc outsb add fidivl xchg pop js pop cmp inc pop (bad) mov pushf jl or xlat (bad) jp jecxz repnz fildl lods icebp cvtps2pi pop int jp int cmpsb gs pop xor fldcw addl mov nop mov ret dec sbb data16 std sbb arpl je xchg pop adc jo addb push mov fistp mov mov repnz test lret push fsubp mov inc push mov sub xor jae pop lods or adc enter dec xchg (bad) ficom mov out cs push test leave test fcompl mov push sbb or fstps sbb pop inc stos je adc jne mov orb cmc stc repz add das popf push sahf add jne or cmp jae mov (bad) mov xchg and (bad) shrb and inc (bad) and popl test repz popa stc jns dec std and movsb clc mov loopne shll (bad) out (bad) (bad) jo xor xor add call in mov dec test stc dec add xor mov cmp fadd insl movsb fistpll sti dec mov adc mov lds sbb ss xor pop sbb ds rorb daa cli mov xchg adc inc xor loope dec ds ss out jns cmp lret mov in sarb jnp pop out cmp xchg sbb sarb jns mov adc mov cmp dec jl jno add push cltd enter pop mov sbb adc sbb jnp clc (bad) icebp shlb adc xchg cmp mov scas push icebp lret idivl lahf sbb mov (bad) mov cmp add sbb push js pop inc pop and pop dec pop sti stc lahf std or mov aaa cmp aaa or mov push push out test lea pop fwait push fcomps fidivl shll jno add lcall mov iret adc pop xor call jns pop fsubl mov aam xchg push push loopne pop push push insb mov add xor pop fisub leave sbb cmp mov push stos mov jg dec jns aas push cmp lods inc mov push inc sbb pop cs clc insb push test inc push mov in mov rclb and incb jns pop adc call pop jecxz cmp cmc popa add in pop lods jae ficom inc pushf dec adc bound aaa scas addr16 in mov inc mov jns xor or into test lock or cmp push inc xchg mov adc and sub out pop notb mov mov in mov call mov jns sbb push outsb out not dec xchg outsl fldt aas lods std mov test lock mov out je adc mov data16 ret sbb jecxz outsl xor pop popf loop sahf rcl shll push push iret mov mov xlat mov xlat or icebp jle les dec cmp scas ja mov and adc adc dec push aas not stc sbb cmp xchg cmpsl adc and (bad) jns add lods mov mov sbb xchg inc repz ret push mov fwait or cmp push and adc jne mov push stos mov cmpsl test sbb inc insl push rcrb loope sbb sbb xchg mov mov add clc adc fcoml push lea xor shrb inc scas inc sub pop loopne mov mov mov inc std shll (bad) cltd orb cs popf dec pop cmp push inc test lods leave sub cltd sub fcomi fidivl push (bad) fistpl ja mov jecxz push add push mov adc xlat sub js cltd mov dec (bad) push push mov loop aad out add popa sub push repnz cmp push mov mov push rcrb mov cmpsl pop shlb out nop fisttpl sub mov outsb pushf (bad) sub add cld xor inc movsb (bad) rclb iret lds mov inc les push pop sahf add or and xor or jmp test test sbb incb pop sti mov xor jge cltd pop mov stos sub cmp cltd les lds fnstcw push or or in mov mov or loopne fmulp (bad) mov je push rorl cs fiaddl test out insl movsl ss lods add fsubs gs imul repz int3 ret pop ds arpl pop mov je push dec imul and (bad) inc fs rorb add je and pop int mov gs cmp sbb je pop sbb xchg xchg fldcw push or sbb mov add inc je aas ret push xor negb cwtl mov cmpsl xor outsb imul inc xchg add push jg xchg and cmp vmwrite mov popf or mov xor add cmp push xor and lea movsb imul popf sub dec cmpsl xor add imul add dec gs mov sbb pusha daa push push fistpl mov push iret pop jmp in lcall ds es sbb aas dec test jns neg inc adc xchg mov jp jmp stos cs pop adc jle push (bad) cmpl out sbb push dec mov pop lret and jmp sub repnz popa outsl cmp call pop mov and ret sahf cmp shl sbb mov cmp insb xor sub xor (bad) out xchg jecxz psadbw js gs movsl xchg and add mov jecxz xlat adc int3 push in sbb fistl imul jne jnp mov in (bad) cld in add adc inc bnd jle mov jp cmp orl dec xchg (bad) lahf add push ljmp fildl in (bad) mov and push xor jmp rorb ret lret mov dec das lods mov xchg aas sbb (bad) hlt mov jbe inc add push scas sub mov ret sahf jg fcomip or shll clc and test sbb sbb (bad) mov (bad) xchg sub pop mov fs add insb jns jb pop push ljmp pop loope out mov mov sbb aas push inc mov cmp xchg leave fstpt enter outsl movsl mov mov mov cmc rclb jae and in jl push sbb (bad) jbe movsl push cmp xchg jg std ja ja fcomip push (bad) ljmp sbb and gs and add test xor insb sub in psubsw adc lods test test in stos dec sub sub xor mov sub stos ljmp int3 lock (bad) repnz lock lahf sbb mov in push dec daa in insb mov (bad) int jmp jno add incl lahf loopne xchg shrb imul mov inc fsts out cmpsl out push out out lcall fist loope mov hlt call pop dec xchg and add add mov in arpl repz xchg jo call rclb negl fnstsw mov push push dec or cmpsb and outsb cltd xor dec inc sub add sbb lods xchg xchg movsb clc mov sub ficoml mov nop call adc insb add imul pop pop lds add xor test stos cmp push clc xchg inc push push leave mov push jno cmp movsl mov inc ljmp js cli sub xor push fnstenv pop mov repz adc ss and mov daa stc xor aas lods xchg xchg jge subl loopne or sbb mov xchg fldenv cmc mov fxam xor das imul stc mov arpl lods mov js sar add xor orb jns in push jecxz (bad) test imul and test xor in or inc std ja or dec loope das or push out loopne push add jle cmpsl cmc icebp aad push pusha outsb adc or insb push adc mov stos fwait das cwtl in out sub data16 pop xor inc mov inc ja jg sub das fs xor roll mulb add jne push outsb jle push mov in mov cmp push loop mov sbb (bad) in xor jecxz pop sub nop sub loope int3 fadds mov mov es pop adc jnp call sub movsl cmp add push ja sub mov in fs cmp add in xchg mov inc lods add repnz fildl add frstor rorl inc lods sti outsb cmpsl jmp andb pop and push aad jno push jle rclb and add pushf xchg adc xchg add loop or sub add inc push mov pop mov add jge xchg inc cltd hlt repnz add and jl mov leave add repz mov das mov mov in mov enter sub out scas dec fisttpl mov cmpsb icebp testb rorb jnp imul add sub dec mov out xor pop inc movsb loop sbb nop lahf inc or enter pop es iret xor testl mov jb pusha inc mov sbb jo mov mov add outsb aaa jo insl push int3 aaa lcall inc and vunpckhps mov in sbb inc lcall ret mov in and test pop leave xor inc inc adc xchg sub xchg adc addb ljmp xlat daa adcl inc mov outsl popa and imul cltd decl push xchg xor mov or sti aam xchg mov fisubr push in int3 mov and iret add pop xchg (bad) mov sahf mov xchg push inc add mov outsl out dec (bad) mov push push push adc imul push dec popaw add repz pop shll pop xor cltd push xlat jle xchg int3 mov int3 dec xor jbe sbb mov inc aam mov mov in in cmp popf dec inc out sub dec and icebp int int3 cmp dec in outsl mov fs jmp jbe xor (bad) pop cmpsl xchg cmp fmulp outsl shrb jns sub jp popf arpl cmp shr (bad) dec imul push fisub mov ss add inc cmpl jmp and insb lea or out inc lret and test lea xor cmp fildll sub scas push mov orl mov push mov scas pusha sbb jmp mov leave mov imul mov jo rorl cmp movsb mov or xchg rcrb xchg adc sarl shll pop ja lea or pop and cmp test xchg mov jns in hlt mov call out or inc call mov jae xchg repz ds in dec repnz dec aaa das ss insb aas lock mov cmpsb rcll icebp xlat clc cld jle fmul lods loope mov pop add xor lcall repnz pop lret mov inc pop push mov add xchg sarb test and jecxz adc pop in lods push add aad cmp sub stos add pop xchg pop sarb xor dec scas dec sahf das js xor jl push or sti test add or scas xor dec jg or cmpsl add data16 fsubr mov int cmpsl xchg enter call or insb iret fwait es dec daa out call mov jecxz fmulp lods fidivl pop lods push push cmp xor jp add icebp loop jo ds je icebp and cmpsl inc test fadds jne ja or aaa (bad) (bad) mov inc jns or into push dec test ds or dec mov mov cld flds ficomp int3 cmpb movsb (bad) imul jge dec inc adc shrb cmp mul sbb push cmp mov jbe jns stos cmp sub pop xor or int fisttp cltd sahf test (bad) (bad) mov ss add cltd (bad) ffreep fimull jbe rcr push orl aas pop fidivrl jne mov loop in mov push fldenv mov pop and adc inc mov push sbb les lahf das lock jo or stc add sub cli xchg push xlat mov mov adc outsl aam and adc not xchg hlt lret sbb test dec loopne ret jbe or (bad) hlt xor aas add mov mov cmp mov push shl mov lahf sbb sbb shl mov cmp rcrl and mov enter notl loope mov iret mov call hlt pop lock in pop clc nop addr16 sub or xchg mov xchg dec addb push and addb jb pop push push inc or loop cs jl add sub mov push rcll fisubrl aad xor xor adc add add lods sysenter dec enter add enter mov call jno shll imul (bad) scas cmpsl lea inc jbe (bad) jp jge inc adc dec jg xor adc mov inc imul bound les nop push fldl pop mov sbb ljmp je shr cli mov mov lods jb cmpsb popf lret jno inc call test sbb cmp jp xchg pushf aas scas jno not xchg es stos leave dec push mov stos cwtl in in jmp loope jge mov arpl dec jne mov pop rcr ljmp lret mov lea ret xor and sti ret mov out enter xchg fnstenv and rcrb mov pop data16 lods leave inc pop (bad) mov fwait ljmp xchg push jns sub pop dec notb push (bad) adc sub mov cmp mov lods cmp and mov sub test scas adc push pop sbb rcrb inc sahf push movsl or jp and nop (bad) daa cmp or shrb icebp cltd aam mov sbb or sub popf push clc fs inc dec mov mov out dec movb rcrb ja je mov xchg iret ffree out mov jns ljmp add int3 sub adc or pop gs jecxz push js out fsubs adc add popf subl aad push push cli fistpl jnp ja xchg pop cmp cmp mov push clc jnp mov mov dec sbbl insb xor add pop dec fimull cs ja and (bad) fsubl pop addr16 aad lret pop mov push or push xchg inc dec xchg test jp into (bad) aaa lock repnz push fisubr mov mov sahf arpl push jle jae out lret xchg pop adc scas std mov mov jbe or xchg push xor sbb jg enter jne add sar out test add pop jp mov jge scas fstpl test push xlat fnstenv fsts icebp or lods sub cld cmp jns test pop adc insl mov jae in (bad) in mov dec insl lcall dec adc repnz je repnz mov mov lods xchg movsb add mov push (bad) popf jg mov (bad) enter jo pushf mov (bad) add in ret xchg call mov jnp push lret inc or in mov out mov lods ds mov pop or icebp cwtl dec test cwtl fwait ja addl aas dec gs adc or mov out push xchg pextrw inc loope pop in pop mov push sub inc (bad) out xor add fs cltd sahf in xor and int or pop inc xchg daa lret dec sub add fnop out jg lcall std push push xor adc rcrb jno out or xor into lahf pop dec adcl into nop push push (bad) (bad) jnp push push inc sbb fs rcrl lds and rcll int3 shrb lds movsl and mov insb push dec xor sub pop mov pop push mov sub imul mov (bad) sub mov pop pop rcrb dec js and mov and popa and jo repnz in pop shrl and lret ficomp jnp jb push in arpl pop jnp (bad) mov jmp inc insb (bad) jb sahf (bad) fcomi aad adc push in loop mov mov or and cmovbe movsb repnz xor sbb scas xchg test cmc jp inc xor cmp mov jae adc pop into lret mov mov mov and out xor inc adc or sbb sub andl das dec cmp ljmp hlt jae and cmp (bad) lds jl jb adc adc mov dec test pop xchg test sti pop jge mov ja push add loopne jp das es sbb inc push pop pop jmp mov leave sti aam push jb (bad) popf xor xchg add in jge test fstpt mov daa mov inc pop and xor fsubs push cmp loop inc mov les push shll jae fstl sub es mov or and sub cmpsb or repz sub in (bad) popf lock cmp or (bad) cmc and fiadd push aam aas in cmp or pop sbb cmp sbb mov add push adc sahf adc push outsb insl cmp xchg inc xor pop ss xor mov das pop add ds in mov mov jecxz mov push mov or mov lock hlt inc inc pop jo add or in jo (bad) xlat inc jmp imul test stos jns out popf and dec fwait inc sbb mov cmpsb fs ror cmpsl insl in or dec movq cmpsb cmp mov mov mov or mov mov sub mov xor inc pop cld pop popa cmpsb xor imul test stc pop sub jae adc add sub fmuls jo jae std push std stos cld mov imul imul push jno movsl icebp stos mov outsb mov sbbl imul lods scas (bad) sub push push mov xchg aad test fidivr mov inc sbb dec cmp je sub sub adc test dec xor mov and addb sbb mov ljmp jbe lds jnp mov fistpll aaa mov lahf mov cmpsb jle inc mov push sub addr16 jae pushf std and pop test xor mov mov inc scas call fidivrl jge push and sub mov jns insl mov jmp mulb mov dec stos pop movsb inc inc sub or out inc jle mov les pop fstpt add dec or aam cmp subl mov push (bad) test popa daa jne push rcl out xchg lods adc push or insb outsb movsb jb sti (bad) fdivs (bad) hlt mov sahf scas out mov push rorl test fs out cmp mov scas xor shrl mov enter fildll cmp inc lds cmpsl mov addr16 cld sub or dec sar dec and jmp xor sub push in jmp mov outsl or jge sub sbb sahf notl test imul test or inc into push out stos test cmc inc jecxz jne insl or cmp inc mov fucom sbb sub cmp addr16 loopne push movsl in ret sub xchg xlat movsb rol hlt push enter out std pop into inc das push leave ss mov out push iret (bad) lahf int3 pop adc sbb pop ret popa mov fdivl ret (bad) pop mov roll or sti je sbb add push push add ror sub jae fcmove mov test stos push pop leave push push int addr16 jb or int3 setp loope mov mov sub aas cmc je (bad) aam out dec and sub sbb negl xchg scas pushf fdivs adc (bad) loopne mov addr16 (bad) dec jno mov out stos jg movsl mov lea mov sub pop scas aad pop dec lcall jecxz dec fsubrl imul lea repz pop clc and outsl sub bound inc push dec mov popa xchg sub push mov orl adc movsl mov loopne ss shrb test cmpsb sbb jnp and fnstcw (bad) outsl xor and add add mov cltd inc sarb insb adc js jg into and sub mov xor push or mov and push pop jae push fiaddl lds mov xchg and xchg cmpsb jg cmp or push outsl pop mov push lods xchg mov addr16 leave cmp in sub add dec jno pop fbstp fwait aam adc inc sub mov pop lods lds adcl test mov add mov xchg cmp jg adc xchg sbb imul imul add pop xor xchg pop fcmovnbe jp jo stos sbb and or xchg imul data16 xchg add arpl ljmp nop in xor outsl jae inc cmp pop mov inc lods xor es sub scas dec sar sub or insb fisttp gs add xlat mov mov and pop jbe addr16 xchg hlt mov dec fst das sub xchg xchg std xorl (bad) bound fwait mov jle mov mov mulb lods and clc sbb dec out adc mov (bad) jmp hlt jl (bad) inc into jne and sti (bad) rcrb rcll data16 and or jl xchg movsb rorb adc mov test xchg out push mov xchg xchg pop pop push dec aas sub mov sub cli imul scas and bound or insb jb sub mov xchg sbb jecxz jmp mov shlb mov sbb jno sbb loope rcll cli pop xchg or pop out addr16 mov jno pop jl frstor mov cmp addr16 adc sub pop dec adc cmp movb or fldenv cmp dec test or push cmp dec dec mov cmc fisttpll pop test lret ljmp sti jb dec dec adc ficompl push adc int3 sub jne push test outsl xchg and push test xchg ljmp mov or and mov push push out cmp int3 dec mov jle lret lock insb hlt pop jo ror daa shrl pop dec sbb sahf xor cmp popf sahf sbb cwtl add test cltd (bad) roll je jg jns mov in mov fisubrl xchg in add ret scas mov (bad) xchg add mov in jns mov or xchg cmpsb scas adc stos (bad) push (bad) jae (bad) xlat imulb arpl outsl jle inc sub add bound outsb pop std mov mov jo push and and les (bad) mov fistp inc (bad) mov lea inc mov or scas xlat adc adc mov mov pop es dec sbb mov or xchg xor into icebp mov sub rcrb stos fnstsw mov aaa test and xchg into xor and xchg popf fs clc xchg dec dec add jbe sub aaa cmp and mov call fdiv (bad) fcmovnbe inc fs in ja mov cmpb lcall fucom popf pop push mov lock imul lret sbb popa ficomp popa cmp rcrl xor data16 push cmp mov out testb mov sbb cmp sti dec loopne dec int3 mov add test pusha jns call pop mov outsl xorl inc sub stos icebp cltd insl jo mov push lcall jmp movsl icebp (bad) hlt and rol mov sub movsb mov (bad) mov and movsb (bad) push dec cmp (bad) sbb or popa xchg sbbl cmp xchg repz sbbl lds cwtl stos and dec pop pusha into cld aam mov xchg mov sbb mov js xchg jae lahf and ljmp mov sbb stc daa int3 xchg or mov and clc lcall inc jecxz inc fs xchg hlt mov int3 movsb (bad) sub jge (bad) sar mov inc mov arpl test arpl mov dec push xchg loop mov sti sub repnz stos adc sbb shr sbb xchg inc dec mov sub xor adc les adc pop lret (bad) dec popf (bad) fcoms mov or (bad) cltd addb arpl inc fidivrl cs mov (bad) sti cmp mov xor insl dec pop aam (bad) call dec pop fildl ficompl dec mov jl in push adc fsts add inc push lods push cwtl xchg outsl cmp sbb hlt lock jg fisttp push repz dec inc lods and out fistp test add fisubrl (bad) lret inc inc pop inc fldt mov push jp sbb and or add pop insb push rcrb loop sbb sbb lcall sar and scas pop xchg ss fidivl out cmp mov jp jmp mov dec pop jp mov adc out cmp test test push sub adc or or into sub fdiv lds push (bad) ficompl jbe mov sbb pop add imul mov bound es das mov sahf mov dec (bad) push push mov cmpsb dec sbb xchg sbb xchg lock dec outsb cmp pop loopne pushf push mov mov push rcrl mov movsb pop shll loope fidivl xchg xchg jg outsb popf (bad) sub add add xor inc mov pushf loop lock enter (bad) mov cltd xor inc ret dec adc pop lahf push in push adc mov mov pop jbe pop or cld gs test out pop adc cli mov xor jl cltd pop mov test idivb outsl push cwtl (bad) jl les fnstcw or rcrb xor xchg test mov or in jmp insl fxch stc mov jae pop rorl sub sar add cmp shrb dec sbb loopne xchg inc mov nop xchg outsb mov mov jae mov arpl pop (bad) pop pop add dec push jg jnp shrb inc gs dec addl loop into sarl fs cmp mov ja sbb (bad) xchg test fisubrl push or sbb lds lret inc dec lcall mov std ret addl add enter xchg aas fs sub pop pop cmp (bad) push pusha cmp sarl push js mov popf or mov ss xchg loop add or xor and sbb push pop adc or loopne cmpsb xor dec cmp lret pop je dec gs mov sbb movsb js xchg test push rclb add into pop call out cltd jmp push fnstenv and movsl out cmp test jns neg inc push dec dec push ljmp and adc jg push (bad) (bad) xor pop xchg out push push loop dec mov pop leave jecxz and jmp push jmp pop xchg insb cmp pop popf in xor mov lds mov popf cmp mov sbb mov cmp insl xor and les and out xchg loopne push cmc enter xchg movsl xchg and add mov loop (bad) pop add pop in sbb lahf outsb pop into dec insb xchg cli in scas xorl out sti in inc cmp dec (bad) sti mov js jle mov jp aas adc pop add add dec orb lahf push cld push jmp fnstcw (bad) mov daa xchg push cmp movsb adc ljmp daa mov dec lods mov xchg cmp xchg xchg ss cmc mov ja inc add push scas sub mov ret lahf js fdiv or shlb jmp in test les iret xlat pop push xor jb int out dec pop adc push mov xor sbb jae pop push jmp pop fldenv mov mov (bad) int sbb push inc mov fnstcw fisubl leave cmp (bad) lcall sub mov cmc rcll jo and in jg jne pop ret and jne sub xchg xchg sarl mov and dec sub push fs push inc jno jge push cmp ljmp adc push mov mov cmc out push call jl push ds test test out test jnp dec dec loope add test xchg adc in int pushf (bad) repnz add mull or cld ja ret or imul push and xchg mov cmp aam nop jl or adcl in outsl in out addr16 pop dec (bad) ficom cmpsb ljmp xchg ss or (bad) mov in cltd in cmpsb jle fsts dec mov pop mov loope mov mov jecxz push add in jns fsubr lods test jecxz mov int3 add mov jg rcll daa bnd jbe (bad) in sbb movsl cmpsb iret xor outsl insl fmul mov inc neg mov lcall inc dec inc (bad) mov imul and jmp rcll jmp ja cld movsb call push (bad) sarb scas mov dec and jb bound mov mov stos sarb mov push sbb cmc jno xor outsl xchg pop xchg repnz pop pop hlt (bad) or or mov mov scas aas loopne (bad) jo gs and and stos pop popa cltd gs rcll or adc imul pop pop outsb inc add in sbb mov imul insb stos (bad) bound push or js (bad) hlt push bound mov dec cmp pop pop jns xchg sbb mov lds mov dec and xor xchg xchg int3 pop into sarl lcall dec out lea testb call mov jl lahf test cli in mov sar xchg pop fs ffreep loop decl mov adc and pop in jge (bad) dec sub adc dec ljmp fcomi dec cmpsb inc das sarb mov ja rorb xchg movb xor (bad) cltd mov mov fstpl adc (bad) mov in and imul test sub int3 xchg cmpsb cmc popf jno add rcll and mov jp (bad) cmc lret xchg je mov int3 sub mov addr16 stos pop sub xchg data16 cmp fcoms lret xchg aam fcmovnu pop mov add scas push add cld jge sbb mov jae,pn or pop cmp jmp add inc push test xchg lock pushf inc jle mov pop aad outsl fwait jp xor mov xchg stos cmp (bad) je in mov out or push aad arpl bnd (bad) xlat fdivrl mov sub shll pop push or mov xchg test mov out sub inc addl test adc rorl sub fldl roll insb stos test movsb addr16 jg int sub stc add mov add clc adc popa cmpsl jl call js sbb pop fdivp or inc lea xor mov mov mov cmp pop lcall fwait pop cmp push jmp jo xor ss les into clc cmp test mov jae cmp or xor mov jl cmpsb pusha ficompl jae aaa cmc add mov scas outsl and or aam or dec mov (bad) jns in xor xor ds and xchg push push xchg lods push cwtl pop int xor adc call dec mov inc mov pop mov cmp sub loop sbb sahf popa mov mov jg ljmp fisub pop mov repnz push test lods insl (bad) adc leave imul jge xchg fidivrl lcall enter jecxz jmp shl sbb sti pop fiadd movb jg sub sbb ret lea cld movsb arpl pop pop popf push int lock inc xchg shrb rcl adc adc (bad) fbld pop fwait (bad) cmp sub aam lahf push aad fadds cli data16 jbe mov pop stc cmp ret xchg push stos push loope push stos into or ja test loope sbb push xchg arpl call dec mov std insb lods pop sahf jno jb sarl lods aad movsb data16 imul mov inc cmpl ret int inc test adc rorl adc insl xchg sbb add (bad) inc inc xchg stos xchg push mov xor cs jns mov incb cmp add sub pop cmpsl jg shrb push faddl mov mov addl mov xor mov mov mov cmp lcallw scas outsb cwtl pop ljmp push sbb sub adc adc mov fwait stc cmp jmp adc pop lahf adc sbb cmp arpl xchg cmpsl pop lds xchg push fstps ds scas push xchg push fisubl imul lods push or loope sbb imul sub or divb ja add push pop sahf dec mov sarl lods rcll data16 imul mov inc addl ret into cmovbe dec mov in push xchg sbb add (bad) inc inc xchg imul (bad) or ret add mov std add clc sub cmpsl js out cs fdivrl mov mov inc mov xor cmpl mov mov sti cmp pop lcall lahf pop cmp lods imul mov xor ss bswap lds pop popf mov jb icebp mov cmp or repnz mov inc mov jno xor pop les fisttp leave ljmp (bad) jnp fsubs psllq idivb and test sub popf pop leave push or adc mov mov data16 add push (bad) fsubl and mov out mov jg ljmp loop arpl lret or push xchg and push mov bswap insb scas pusha cmpsb mov cmp in adc mov mov stos insb or sbb jmp rcr sbb sti and inc add roll mov incl dec lea mov sar popa popf xor xor jb inc xchg rclb rcl adc adc (bad) fbld pop fwait std cmp sub aam lahf push aad fadds mov inc push cmp ret nop push stos push in imul sub xchg push or ficompl push test lret repz cmp push lods pop sahf dec mov add std ds lods (bad) adc data16 outsl test dec cmpl sub inc addl (bad) jne sub push xchg pop fnstsw roll insl stos test idivl or jmp jle mov add push xlat pop cmpsl inc mov mov mov mov (bad) inc xchg dec lret jnp cltd mov mov mov cmp pop lcall movsb pop add test push fsts shrb aam out adc lahf (bad) fsubl pop fwait (bad) cmp out sub aam lahf pop aad fadds mov inc imul add cmp xchg push stos push loopne insl stos iret or je test lret or loope sbb push xchg pop pushf inc test lret or divb dec mov std outsl lods pop sahf jo jae stc imul jno test dec mov gs inc cmpl ret int inc test adc dec mov in push xchg sbb inc inc xchg stos xchg push mov xor cs js mov std add clc sub pop cmpsl jg shrl pop fdivrl mov mov test inc mov xor mov mov mov cmp lcallw scas outsb cwtl pop ljmp push sbb mov xor ss push into lds pop popf mov jb icebp mov clc cmp or hlt xor mov jge cmpsl pusha fistpl jne ss add mov test leave jmp or (bad) jnp out xor (bad) and test mov sub popf pop leave push aaa lock aam outsl nop mov mov mov arpl add push (bad) out and mov out mov jg ljmp loop popa mov into or push xchg and xchg mov bswap push scas pusha cmpsb mov stc rclb inc addb fwait pop divl lods insb push enter jecxz jmp rcr sbb add cld add adc sbb ret add add pushf arpl pop pop popf or xor dec mov xchg adc adc mov fwait clc cmp ljmp aad add fdivrs cli bound xchg cwtl pop les xchg push loope add push (bad) lods push xchg push (bad) push jge sub lods push or fstpl push test lret aaa lret repz add insl lods popa sahf dec mov ret lods rclb test dec mov gs ret iret cmovne ja adc outsb xchg sbb add addl dec mov xchg push cwtl addr16 inc or adc iret inc mov cmp adc mov mov mov mov inc (bad) inc mov divb mov mov mov cld cmp pop lcall sahf pop cmp xchg imul rclb rcl adc adc movsb (bad) and clc cmp shrl aad fdivrs cli pop movsb jno xchg xchg cwtl pop cli cmp ret lods push xchg push (bad) push icebp or dec mov loope sbb push test lret int3 xor cmp push lods arpl cld ds lods (bad) adc data16 outsb test dec mov gs sub inc addl test adc rorl das in outsb xchg and add addl dec mov xchg push cwtl testl ret iret jge mov cld add clc adc mov mov mov mov inc mov xor cmpb mov lea cmp pop lcall sahf pop cmp lods imul pop cmpsl xor stos mov sbb mov cld xorl in mov pop cld fdivr xchg arpl lret ret jle jecxz lods xor xchg xor push cli in int3 and ljmp pop push in dec pop adc pop inc xlat mull inc mov sbb les adc xor mov lock dec cltd push xchg mov adc pushf dec test mov mov adc dec mov in sub pop jo dec mov inc test loopne (bad) pop out cmp mov lahf movsl inc xchg sahf adc (bad) xor cmp inc lods imul or andl add push rclb inc mov loop xlat sbb fsubrs cltd mov ret gs dec dec fcomp jl ja mov testb mov gs daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push inc and or dec stc es test and adc mov (bad) aad in mov xor (bad) lds dec test dec cmp enter ja inc sub clc lahf mov sbb jle jnp stc and ljmp mov enter movsb adcl mov sub repz in dec inc sub lock aas inc sbb pop jg jne mov and js push lret or cwtl mov jle cmpsl push movsl inc sub les mov xorb cld pop jae (bad) sbb inc inc mov lret fprem1 mov cmp and repz in inc jp add mov lods sub fstpl (bad) xor push sbb pop push js mov stc fcomps outsb or fwait ja in lods jge pop hlt dec and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl out (bad) inc shrb scas inc and stos sub int3 mov dec outsb mov loop and sbb js addr16 ss bound push lea (bad) push es add idiv nop jae into push push jbe pop stos jo adc xchg pop jno mov test mov jns (bad) mov shll lret in scas test push adc mov hlt je inc adc cltd cmp cmp and fstpt lahf stc jns jmp inc lret lods fdivl pop add lock insl or sbb xor lahf movsl (bad) sbb push add or xor cmp pop jae adc xor push je sysret dec cli push jae dec add xor push mov mov pusha adc ljmp sub addr16 divb adc jge jne sbb cmp lea rcrl mov or imul jmp dec dec jno mov or add rol roll add es data16 cmpsl into into sub fcmovne les ret call dec mov (bad) mov sub sub (bad) aad cmp jns pop sbb imul push dec push mov pop pop mov add jmp pop or inc popf jae jmp cmp and fisubl ss cmc jl sub adc xchg loope insl lea imul jge icebp hlt pop jg repnz jnp lods (bad) mov pop fs adc jo mov stos ret stos pushf mov xchg dec cwtl imul xchg pushf jne mov or xchg push popf sahf jle (bad) divb push adc mov ret inc mov js scas aad dec pop insb es jp and jle push mov adc aam idiv popf cmp into stos dec aaa lds (bad) jmp xchg xchg fcmovu mov inc addl lock add enter fidivr mov sbb fsubrl pop stos mov mov mov dec cmp roll testb sub pop cmpl test adc lock ret pop loope pop and pop pop jmp sahf add outsl sbb add fbstp js xorb mov jle and push lret addr16 rcrb mov cmpsl movsl rorb mov ret jo ret (bad) jo aas xchg stos mov xor dec cli sti push cmp pop mov rorl fimull fstps mov (bad) cld inc aad pop cld pop jg cmp dec data16 std push int3 jbe outsl jmp and les daa ljmp das mov loop pmulhw xchg (bad) jno rcrb inc out fidivr mov mov fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl adc pop inc loope dec adc or or outsl mov bswap stc fucom daa mov addb inc shrb aaa mov (bad) mov or pop testl cmc jl ret sahf out insl add ret push jmp mov stc test dec add aaa iret and or (bad) xor or jp aad mov mov aaa (bad) addr16 imul mov push sub lds pop mov fisttpl sub test sub adc dec out stos cli rolb pushf scas or jb scas mov fisttpll add addr16 or idiv shr fstpl scas push adcb pop fstps into mov outsw xor cmp dec jbe push or xor test adc mov jmp adc in mov sti fs outsb mov lret divl aad xlat adc push xlat adc scas insb in popf (bad) dec sub xor mov int3 dec movsl ret sub imul fistpll inc push push in clc and push push mov cmp mov jnp out or jp arpl popa mov andl (bad) mov add push cs cmp mov mov fdiv enter cmp test repnz leave xchg add pop xor pop jb fwait sub dec push dec cmp scas scas lahf cld (bad) aad clc popf mov in inc cmp in (bad) pusha push out pop stc pushf imulb popa (bad) sbb xor shr sbb loop fnstsw popf mov or lret ljmp pop fs clc dec adc pop aam mov sub imul xor imul cmp mov cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push popa (bad) mov arpl adc les (bad) adc push lcall and and stos int3 data16 pop std jp push je sub lahf jg mov es or ja pop inc lock and xor sbb mov test dec movsb and push xor (bad) popf es scas cs add insb lret xchg inc sub ret test jecxz sub mov rorb jmp (bad) xor jo mov es push sub lret jge mov scas iret push lods ss pop xchg rorl or and pop mov mov add shll fnstenv js loop fsubs (bad) sahf stc lret jo pop lret pop or cwtl test sub mov mov leave and dec and push std jge adc or fs jge or xchg popf mov xlat jecxz mov mov mov imul (bad) out sbb jl ret dec dec push into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg int sbb mov mov cmp std inc scas data16 andb outsl xchg mov mov jbe js dec and lds int3 pusha xor jl std add and aas pop scas or in hlt jne outsb add jle mov mov jb add sub inc rcl test and sbb dec xlat or sbb and jb push outsl daa stos add inc mov (bad) mov sub inc push jle jns xorb imul fwait lahf repnz mov ret or test inc sti cs or sub pop les push test addr16 and adc test and std (bad) dec inc dec jo stos cli mov outsl cmc divl push pop add push jo repnz cmp call xchg mov adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test pmuludq cwtl hlt js or cmc call aas lcall xchg (bad) mov jl sbb loop lds jne sahf std dec cmp adc and cld add lret cmpsl dec sub jge fs call aad imul out cwtl out add shll and imul xor mov call mov mov loop out mov xor call pushf (bad) xor push pop data16 inc mov out dec jmp incb ret orl dec cmp sub call int sub or mov stos push add mov jbe rcl repnz xchg stos jl cwtl xorb outsl call test mov int adc aas dec ss mov push cmp fcmovu add mov inc addl lock add enter jo (bad) jbe mov jno fistpll ja inc mov sbb or xchg rcll jmp loope inc jo frstor hlt movsb sbb loopne adc add sarb mov mov stc or mov jecxz das push mov jns aas sbb in or sbb mov inc cwtl std int mov arpl bswap cmp and shlb xor push jle mov inc and add daa repz mov popf mov cli data16 push xor inc pop mov dec cmp aad sti pcmpeqd call jbe scas push rol imul adc dec mov mov pushaw pop inc inc push pop xor jmp lods push pop or xorl out or cmc mov xchg fstp mov aaa imul out in in in aam push push cld cld (bad) xchg cld (bad) cmovbe arpl jg test mov sub mov inc ret sub dec out lret in jmp xlat mov insb stc dec notl push scas xchg into and ud1 xchg stc insb lods mulb (bad) loope ss dec push movsb xlat out mov mov stos sub push (bad) loopne imul test (bad) mov add push push sbb iret jecxz mov dec dec jb push jae fbstp scas insl pop mov addr16 insl rolb mov lods hlt (bad) sbb mov push inc aas inc pop enter ret sahf cmp mov dec bound add (bad) and je xchg in cmp jae inc ja cli (bad) mov (bad) adc inc js mov icebp mov ds lock adc mov jno jle ss fs adc jne mov ret adc pop pop clc clc insb insb push push adc (bad) aad xlat xlat adc xor sub mov test or lods sbb pop into push push add cmp ja popf add xchg jns lock xor sub fadd mov outsb dec je shlb popa or add push mov out loop mov out (bad) and mov mov inc push adc pushf stc jl xor ret clc sbb lds cmp aam adc js mov mov sbb mov cltd cmpsb sti push popf ljmp arpl aaa test test std pop push xchg xchg fs mov out sbb jne lcall adc sbb lock lret xchg push mov cmp mov jg stos popa sbb and dec iret ret cmpsl adc pop imul aad fsubl repz test add mov repz dec mov cs mov je cmp add setg loope cmc cmc mov pop mov repnz sti clc inc cmpsl pop and sbb add mov das jle pop mov pop cmpsb int in scas dec xor stc sbb sbbl mov xchg sbb stc sbb scas sub fstpt (bad) call sub outsb out mov outsb das push fld in pop jnp or xor jg xchg iret jns lret adc cmpsb add mov and fwait pusha adc xor adc fidivl push mov sbb jo icebp (bad) (bad) in psrlq lds sub iret or mov ljmp fwait scas xchg push fucomi stos mov mov rcll cmpsb sub call mov mov (bad) jmp push xor adc jle sti xchg rclb (bad) xchg scas mov movsl or popa fld ljmp pop jg repz mov out sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov xchg pop aas xchg push and adc or subl mov dec bound adc icebp push push adc bound push lea (bad) push es add pushf mov pop outsl fcoms xlat pop jno cmp xchg test data16 push mov jns (bad) mov shll lret in out test push adc mov hlt je inc adc cltd cmp cmp and fstpt lahf stc jns jmp inc lret lods fdivl pop add lock add insl or mov cmp pushf mov add mov xchg xchg notb testb and fldln2 pop mov or movsb hlt mov or push push (bad) repnz (bad) fxch movsl cwtl nop mov and fwait js pop ss into xor jae jmp sub (bad) fisub fwait or push and popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp (bad) xlat mov (bad) pop std mov movsl pop data16 idiv jge mov pcmpgtd adc fwait lds loope pop bound repnz and mov dec (bad) add mov jne xchg mov sbb mov mov add xor sbb dec xchg pop add ss push loop adc in cmp inc push rcrb mov pop int3 sub or cmpsl push dec push dec sbb sbb cmp xor xor cmp jl add push stos cwtl sub inc out out popa xchg out mov lods sti fwait jno adc mov cmp add jnp xlat and cmp test jb mov lock mov and xlat insb mov push or jb in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg aam js leave fs fiaddl sub inc or mov repz test inc cmp shl fwait sub sub popa js sub or dec pop inc int popa (bad) sub dec stos mov cmp mov push add popf add ss jae jbe push add mov sub pusha inc jl loope xor cwtl xor into cli dec xor ja xorb repz mov push test popa gs sbb dec std flds jbe loop pop cmp lahf xchg jae xor mov cmpsl insb (bad) cld sub (bad) out aaa pop jg mov mov cmp jo mov into cmp mov insb jne fpatan add sbb pop pop loopne sbb or ret lahf (bad) jmp add lods pop jb pop pop stos sub inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call mov test dec cmp icebp addl cmp jnp jmp lahf push mov fcomps int3 fldl cmp or add pop andl mov and push cmp mov enter and call sub mov pop inc push add jmp int3 mov aam mov cs mov xchg xor test mov mov rorl lods mov adc push lret fbstp sbb stos pop mov out or or js fmull or in xor mov jg sbb mov loop mov icebp fwait or jae inc adc dec in mov daa cmp pop or cs outsb push mov adc (bad) ja xor mov xor ret leave leave ds jne test dec (bad) mov pop dec or in ret bound mov inc cli mov fwait xchg in ds push dec ja jbe lcall data16 (bad) in sub scas and in outsl inc shrl pop mov xor push cmp mov outsb loopne mov and or andl out pop fs or outsb in shll mov sub jmp cmp loop push scas dec ljmp pop xchg sti mov repz stos push push lods mov mov xor add int3 push ss pop cmp sub mov inc mov insl dec mov sbb xchg (bad) jmp fsubrl sbb push add and cmpsb cmpsb mov add sub imul rclb push cmpsb dec mov inc inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov addr16 add vmovmskps push sub sub bnd sti push aas adc sub lods rolb inc add out jnp or int3 outsb cmp pop cmc dec fistp daa push sub xor mov cmc dec pop rorl dec cmp adc sub adc lds sti divl fstp enter adc hlt int3 icebp repnz jle lahf scas repnz sti mov add negl sub fs and sarb out sub inc in imul dec add or sahf fild push xor add cltd mov in outsl fmulp mov out ss fcoms cmp iret aas fbld inc data16 adc dec lds lods adc fimull test mov jg popa (bad) xor pop xchg and xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa sub shr sub push dec sbb mov pop lock repnz dec loop stos (bad) xor pfmin mov (bad) lret add mov jbe pop inc sub imull test xchg pop in lret cwtl push xchg xor xor jb std inc jge add mov js xor pop test adc pop in and test pop cmp and test fildl outsb dec (bad) loopne cmp stc pop mov jp lahf cmc adc push mull stc and or das add clc call xlat fbld xchg cli int3 sub xchg or stos (bad) jnp nop pop and cwtl lds lock mov cli data16 push xor inc pop mov dec cmp aad sti pcmpeqd call shll es data16 mov js in in lea and movsl insl adc xchg movsb fmuls stos outsb push cmp xor push pop dec push jne and or pop mov pop mov pop xor (bad) scas jmp xor sub push add lods cmp cld sub dec sbb lea (bad) sarb es les daa adc sbb mov or cmp jno int3 inc add fldt and (bad) xchg mov mov jg lret scas adc mov sub sbb shll push adc cmpsl out mov mov sbb mov pop and nop cmp jb jle cmp int3 in imul xchg adc xorb aaa sub bound sbb test mov daa loopne push ss mov push and lock add enter jo push (bad) call shlb sub fstpt sbb mov test push mov icebp outsb push adc jp xchg stos lcall and dec mov adc pop ss sarl cmc push lret test add fwait dec sub dec fdivs push xor enter test or push xor and lock xor adc inc inc add inc subl add test popa in gs and sbb dec out cmp mov push out jge add sti mov or inc movsb stos pop add ss sub push dec mov addr16 stc sub (bad) adc (bad) xchg lret adc out rcr cli cs repnz pop (bad) add add or mov lahf out (bad) mov cmp sub fstpl add test dec inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc imul xchg lods test or mov xchg rorb inc mov imul lret aad das test dec loopne pop jg mov nop pop jno movsl loope mov sub aas outsl and push push or jp cmp xor out jne test lea xor xchg outsl mull mov gs mov nop jp popf clc pop stc add enter fdivr mov xchg and test dec das inc mov mov je ret pop js lods gs aaa lahf cli xlat shrl xchg loop sub or sub inc add add lock fidivr fcoml sbb js leave or pop movsb sub mov mov xchg ja adc loop pop mov in cmp xor jo (bad) jbe adc shrl mov mov adc xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl mov push inc out sbb imul popa and pop outsl lcallw push cs and fnstsw ret popl or jge pop (bad) mov sbb orl or push xchg lock xor add (bad) mov pop (bad) mov cmp int pusha dec mov adc (bad) pop jo js (bad) out ret xor cwtl inc adcl insb sarb gs and dec sub or jecxz bound push jns push mov push leave xor mov dec notb lcall pop pop cld scas jecxz in mov in adc lea or cmp dec sbb cs mov (bad) jae lcall mov jecxz inc inc mov push inc out xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov push sub jno in aad cmp scas add jmp fcompl mov mov (bad) xor (bad) outsl pop jg popf lods ljmp scas lods enter add xchg cmpsb mov rorb cmpsb mov dec bound sub pop jae cltd test movsl or push rcrl jg adc fidiv or cmp xchg mov loopne pop add sub xchg test movsb add cmpsl lcall ljmp pop and movsb dec in cmp mov sbb js aam dec lahf icebp add dec mov cmp and in pop mov int int3 mov fsubrl sub into ss pop out jne cwtl pop scas outsb ret pop push or adc (bad) push sub int dec pop push push xor icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov add sbb test xor sbb push push outsl mov orb mov pop cmc jbe xor das cwtl rclb add jl stos inc adc scas xlat mov sbb sbb in adc jbe lock mov call lcall frstor xchg sarb xchg pusha je pop call mov or dec and sti incl sbb pop jmp sbb mov xor movsl mov mov outsb xor into js mov mov gs xchg hlt (bad) mov sbb dec adc jbe push addr16 pop jnp aaa xchg aad loopne fdiv lds imul lret lods insb pop sub (bad) std inc xchg or adc test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov push inc mov in sub mov mov cmp xor mov js adc jge sbb mov pop out dec dec mov inc sbb push dec out dec idiv adc (bad) push fmull in mov leave gs cli mov mov jge and inc xor cltd cmc lock push iret sub push adc (bad) loop inc dec pop pusha stos sti push adc add mov mov inc out aad aaa jle mov add jo xchg movsb dec mov push cmp ret cltd lcall ret fwait outsb push sub jno in aad cmp scas add jmp fcompl mov mov (bad) xor (bad) outsl pop jg popf lods ljmp scas lods enter add xchg cmpsb mov rorb cmpsb mov dec bound sub lock add enter jo push (bad) call shlb sub fstpt sbb jne jbe stos cwtl stc (bad) jae dec sbb loope inc fbld mov stc mov and or sub sub xchg fs dec mov dec stos (bad) aam xor call xchg xchg test and jl daa jnp test mov in cmp add inc or inc in jge inc gs fild add pop jne xchg pop or in popa lds and repz fnstsw mov inc stc outsb rolb dec out mov stc jo push leave add push rcr lods sarb cwtl popa fidivr ret xor lahf mov loopne add jp adc jmp rclb imul sub sub scas sub push and in or sbb nop cld out in inc mov cwtl ror inc jle inc in in in aam push push cld cld (bad) xchg mov faddl hlt cmp lds mov pop sub sbb into mov pusha aas adc push xchg test bound insl mov loop lock shrb push or mov ret mov mov mov outsl sbb fstpt mov (bad) push es dec cmpsb dec sbb push inc pusha movsl pop mov stos dec fstps in and loope insl cs ds push adc vmulpd cmpsb or sbb pusha sbb push stos (bad) sbb aam and xor mov sbb lods xor cmp aam xchg or ficomp repz mov arpl xor sbb (bad) sub (bad) in call in sub push dec out push xor sbb pop sarb push in aaa inc adc testl insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl mov push test mov fnstcw cmp mov sbb mov xchg aad sarb imul or lcall sbb scas fmull roll mov push in cmpl addr16 xchg into or (bad) jns faddl aas fisubl mov loopne sub push or adc dec cld or add cmp fcomi movsb pop repnz push jp cmp pop mov lods push cwtl ret xor inc loope aas les cmpsl (bad) nop xor cmp add mov mov repz inc insb inc xlat cmp add cmp mov scas (bad) stc and das ja sti xchg ljmp jecxz call jge icebp insl xor pop mov (bad) dec lahf jp fstpt xor out das inc mov or call sub loope cmc cmc mov pop mov repnz ret dec dec push into cs lret mov mov cmp lock int sub aas sahf jecxz push cwtl xorl rol dec hlt insb fsubp dec js push mov mov out jb push or cmp mov adc push xor jl ret mov adcl push mov push addb inc jle jno push mov pop sarl add jecxz cli lods scas iret int3 xor test mov jnp rclb call (bad) ret add jle cmpsl leave mov cmc xlat xor mov ss ja adc jbe push push shrl (bad) xchg dec sbb push ret dec or shrb xor mov test mov cld movsb inc sbb xchg mov pop outsl pop sti push insb cmpsl adc adc pop js add loopne and cmp pop pop push fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe push jge out jbe aam dec ja and ja xor mov xchg push es cmpsl or (bad) push in les sub jae cmp stos dec mov pop jnp addr16 pop or outsb mov and and push add push ljmp outsb loopne cmc es pusha mov (bad) mov and incb in push mov in inc add out call mov sarb arpl xor ret sub fs je std je fistpl jg les inc int jl sub mov addr16 sbbl aam cmp (bad) jne fldl xchg cli adc int sbb cmp adc sbb and js xlat or inc add ljmp pushf test jnp and xor xchg inc insl jg ja mov das test or add add (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl scas sbb mov insb push mov fisubl (bad) pusha and dec ret jl and dec arpl int sysret or adc xor cmpsb mov stos lods cmp mov jbe or or xor jbe pushf in test mov aaa push pop xchg pop fsubs dec push fs insl push dec inc ja or ret fsubrp jo mov sub pusha pop (bad) not (bad) dec test xor shl xchg (bad) lahf mov jl adc cmp sbb ja or sarl hlt gs dec ljmp ret adc push mov push ds pop repnz mov cld in test xchg xchg fs xchg jp fldt jp scas dec mov rclb cwtl cmp movsb push push push into into test mov (bad) pop pop xchg mov sti (bad) es std push xor call jnp mov (bad) repz imul and mov (bad) mov mov ds testb sahf jl mov negb pop push jo prefetchwt1 mov fisttpll cld popf xor adcb roll or push mov lcall in mov cmp inc pop pop inc bound sbb mov jmp push lods fnsave mov insb fimull or ror add repnz fldcw cld xchg (bad) cwtl xor test pop cmp dec lods jg cmp scas push lahf into (bad) inc sub lods cmp iret xchg shlb xor jae mov jno outsl sub enter ret aaa mov dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc imul xchg pop leave and int3 gs aad jo inc dec lods mov push jg popa cmc inc leave int and shrb into pop movsb mov xchg jg pop xor xor daa lea add aad neg dec aas inc sub add sbb shlb jb dec cltd jp dec out jmp sub xor dec lcall cmp gs pop jmp xchg and cwtl in cmp pusha xchg inc cmp mov mov jle xor or cmc call aas lcall xchg (bad) mov jl sbb loop lds jne sahf std dec cmp adc and cld add lret cmpsl dec sub jge fs call aad imul out cwtl out add shll and imul xor mov call jae mov xor ret ret leave leave ds jne divb cmp jl fldl2t nop insb xchg cmp icebp mov enter js lea mov or sub lods push shlb into mov (bad) out jmp outsb mov push outsl push add cmpsb out popa into mov sub jg (bad) sahf dec out cwtl lock and cmpsb sub jle std push lock add mov lock jecxz inc fisttpll or mov pop pusha mov (bad) js pop cld lahf ds or jno mov pop js shll rclb add lret lcall test insb jl jge sub pop cwtl ljmp out rclb leave cmp pop push pop or sub mov scas lods cmp loop sbb aaa outsl jne push outsb lret pop lods std ret aaa xor jno aas aas push push sbb (bad) rcll push and lods lods or jp sub mov fistpl add sbb pop sar mov fisttpll xchg test push add and pop es pop jg xchg in cmp pusha xchg inc cmp mov mov jle xor or cmc call aas lcall xchg (bad) mov jl sbb loop lds jne sahf std dec cmp adc and cld add lret cmpsl dec sub jge fs test sub aas pop movsb cmp mov adc cwtl cs add sub mov cmp add insl mov gs aad jo inc dec lods mov push jg popa cmc inc leave int and shrb into pop movsb mov xchg jg pop xor xor daa lea aad neg dec aas inc sub add sbb shlb jb fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas cltd push subb xchg jle scas add lahf inc jbe imul mov push rorl xchg and outsb das jbe dec ror adc mov jecxz sahf xorb sbb mov inc outsl push sti scas jp and repz push cltd (bad) aad stos mov stos mov movsb lahf std and (bad) scas lcall inc loope js sbb sub (bad) sarb jo stc or mov jecxz das push mov jns aas sbb in or sbb mov inc cwtl std int mov arpl bswap cmp and shlb xor push jle mov inc and add daa repz mov (bad) pop enter adc in xchg dec cli (bad) mov jnp cltd xchg aas inc add cmpsl fnsave fwait out imul fisttpll es data16 mov js in in lea and movsl movsl and in in cmp mov or pop (bad) insb (bad) out scas or and lret jecxz stos adc popa mov xor popa stos mov inc mov cmp push gs aas mov js fsubrl and mov adc lock push push mov andb div pop push pop (bad) push sub (bad) sarb sbb sbb lcall sub loope movsb lahf in cmpsl jae adc dec push fidivrl adc sarb cltd mov lods lahf repnz sbb dec js mov xchg call adc xchg gs imul mov cmc lcall (bad) mov lds xor call mov pop std int3 adc push jns inc pushf sub (bad) lcall test cld out push dec inc mov jns,pn cmp add fs outsl scas subl or out out add enter jo push push (bad) call shlb sub fstpt sbb mov scas cs (bad) inc xor loope fwait out dec pop cmp inc sub mov (bad) push pusha lahf and mov xor mov repz mov stos sbb jp aaa sub out lods dec (bad) (bad) sbb push ljmp aas xchg push outsl mov (bad) mov mov je xchg xor cmpsb mov mov lret and mov out inc add ret mov jbe icebp inc sub imul xor dec jne add cmp cwtl inc adc push ret mov cmp test test bound fwait bound add arpl jle shl stos pop pop stc cli push hlt incb pop outsl xchg adc add pop mov inc lock add mov addr16 outsl scas sbb push fimul mov lahf jnp cs (bad) inc xor xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc imul scas push sub idivb (bad) int pop jg out andl dec out dec xor fisub scas aas adcl out lods lcall xchg out or popa bound xchg imul out sti and lret fdivs std xchg xor mov lcall add or jle imul push test pop arpl cwtl pop xor jae jo roll mov ss mov mov push rcrl sub mov arpl mov jg out sarl adc xchg mov xchg sarb cmp sub xor and iret jae jb lds mov mov clc js outsl add adc mov in out out mov fwait repz sbb push data16 addb adc gs daa pushf pushf cmp mov rcrl (bad) stc pop inc push stc cltd mov fs dec ss push (bad) in adc aad and int3 pop mov add jns mov nop js clc pop pop ja add inc pop outsl and scas ds (bad) pop jg or aas xchg jecxz jb mov scas gs call pop mov cmp mov dec pusha stos push xchg repnz inc (bad) mov stc add push sbb push int pop out test mov mov xchg xor jnp adc push jno xchg ljmp stos cmpsb dec pop rcrb imul and mov out mov inc mov jmp push add insb jo mov push sub mov jl adcl (bad) jmp xchg inc dec or push call sub scas sub sub aas aas push push sbb (bad) rcll push and lods lods or jp sub mov out add xchg push (bad) inc push mov cs je push and jmp clc xchg imul pop std flds adc scas push xchg int3 int sti or das push sbb (bad) (bad) sub sbb fidiv loopne ljmp dec popa xchg scas mov push jns push fs sub sub xchg (bad) or mov sahf hlt dec cwtl aas xchg imul adcl xor ret pop cmp jecxz sub insl lcall or insb mov (bad) lahf pop xchg mov rcrb push iret hlt jbe lret mov nop xor xor adc notb xchg mull dec mov imul aam (bad) lock adc std sbb mov mov jns loope outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or lds mov mov daa and mov adc cmp lock xchg add cmp (bad) imull or add clc aam les aam jo cmp cli scas jp inc mov test mov dec iret data16 cmp pop js push pop cmp add jnp aaa xlat adc push bnd int3 dec lea jns hlt outsl sub arpl add push call add push and mov std adc jo mov das testb inc rol push loop imul mov jmp loope scas add sub subl pop stc mov and daa inc flds popf sub mov aad leave and aam jne mov mov pushf mov aas adc xor or gs sti addr16 cld mov (bad) les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl jp lret (bad) out cld (bad) jge mov and or jbe xlat sti push outsb cmc repz jmp movl ds xchg push pop push fwait xor jo repnz ss cmpb (bad) mulb stos cmp pushf arpl aam out lods push sub ret inc add imul insl int3 fstps push aas pop outsl mov (bad) or subl in leave sub mov or leave cmpsl adc lahf xor add push push xorb (bad) jle push pop repz repnz je enter les popa dec (bad) sub or shl or fidiv jecxz scas je shrb adc jp pop lds in push movsb jge lret mov and cli and inc mov out dec dec mov je cmpb enter jo push push (bad) call shlb sub fstpt sbb mov or and mov jecxz test hlt outsb les cwtl fdiv loope cld inc (bad) adc decb adc lcall inc fdivrl sbb leave movsl in lods dec mov (bad) fs inc js cltd xchg mov stos mov (bad) in inc dec mov cltd sbb je push inc mov js inc out xor mov imul push jno adc scas lods enter inc mov jno dec cmp mov and cltd xchg mov add xor (bad) rolb inc imul test cmc stos add movsl and jmp stc in jae inc lahf jg jmp pop cmc push faddl fdivp cmp xchg dec or (bad) loopne or repnz add enter (bad) iret movsb stos cmp int3 lods cs pusha xchg addr16 call adc cmp push cld cld (bad) xchg mov faddl sti fs outsb mov scas push cmp jnp add and jle xor fidiv pusha aam xchg or push mov (bad) lret shlb mov cmp pusha xor fmull or leave aas stos xor push dec adc enter ja (bad) push scas cwtl cmpsl xchg adc lock jg or pop xchg sbb rcr arpl inc outsl dec cmpsb xchg xchg and das ja,pn lret sti loop loopne jg cmp pop push push mov sub ds jno mov sbb add sarb xor cli xchg and lds cmc js mov cltd inc cmp xor sub add xchg fisttp sbb or xor cltd or inc mov aaa repz stos push inc pop cmp dec jae mov aaa sub xor xchg rcr mov adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov cmpsb add push inc mov sbb sub xchg loop push fucomp xor das rolb arpl push dec and fadd shlb stos xchg sbb add xlat adc mov inc dec add push pop (bad) push (bad) test pop lret push sti xchg mov add sub aas fwait xor enter orl mov ror jecxz cmpb dec iret xor je sub scas aaa inc addr16 shlb xor mov ret repz xchg pop mov std push insl ret and mov icebp mov push pop mov lret cwtl xor mov and jle jo adc add dec push es pushf inc lods and push cmp jl and jecxz enter lock stos adc jb xchg push fidiv mov pop fcoml js in clc lahf imul mov mov repnz ret dec dec push into cs lret mov mov cld pop sysenter dec xchg loop mov push lea (bad) pop sbb dec (bad) cmp add leave outsb or jb sub pop ljmp stos fidivl xor je sbb inc fucomip gs mov xlat bound cli bt push je arpl mov stc dec jmp std call pop insb out (bad) (bad) imul push ja lahf loop nop daa les leave int mov xchg jle loope mov ja repnz mov insb scas je,pn fnsave addr16 (bad) mov jg sbb and jnp add jecxz jle test aam xchg test iret push and cltd and lahf and (bad) pop cmp mov xchg lods fadd mov cmpsb rcrb xor es inc loopne insl test sbb lret xchg adc sti lock int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns pop xor push xchg xchg dec movsl sub mov sbb inc stos sbb cli aad nop daa stos fidivrl or out pop pushf xchg xchg daa out lret dec pop in mov pop lock jbe pop pop mov xor dec fcmove xor iret in or cmpsl lret cmp (bad) mov sub xorb loopne inc push js and rorb sbb pop push rolb les pop emms fldenv testb sbb std sbb lret push scas xchg lret add je (bad) mov mov inc aas (bad) inc sarl addr16 insl mov in shrl hlt lock xlat mov pop xor in je xor sub loop xchg ret pop loopne and xor (bad) and fcomps sub pushf jp lahf sbb adc mov lods xchg les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl cmp cmp fildll out sub and imul xor adc jg popa shrd std or gs inc out mov stc push pop mov adc push scas xchg add cmp xchg adc mov or xchg in xchg sub or out bound adc sbb ljmp add mov imul xchg xchg shlb sub mov jae enter cmp adc cs jnp loop lods or into mov mul mov jnp mov or test inc xchg push (bad) jne dec aas jecxz push test bound jo loope mov push adc jge pushf iret (bad) and test fwait and add pop add jmp sub lahf inc dec jl out cs adc pushf mov jae push push into into test mov (bad) pop pop xchg mov aaa imul out cmpsl lcall hlt pop daa sbb jmp dec fwait push popf xor in les cmpsb push fisubr mov xchg or and cmpsb mov data16 into dec fwait cmc (bad) daa dec jecxz inc and les arpl aam mov aas fsub and mov jecxz nop add mov mov (bad) mov jae xor xor lea cmp (bad) mov mov mov popf das jl adc insb stos and add xlat sbb fisttpll ret or sbb (bad) or ss adc jecxz (bad) out dec cmpsl pop jg dec insb inc je dec push jnp xchg dec xor loope sti addr16 fnstcw (bad) out sbb add fcomip mov pop scas out (bad) outsl lods js push pushf sahf jl cmpsl leave fiadd add loop outsl xchg std xchg sahf jnp in movsl movsl test dec cmp arpl call adc imul test adc lock ret pop loope pop and cmovl repz cmp movsb xlat les bound (bad) cwtl enter dec lods scas lret sub cmc or ret pop xchg or jae or lods or xor push aad sbb aad outsb dec lds or xor mov xorb mov test push adc stc jmp sub fiaddl mov cmc mov and xchg push std jge rol push cltd mov in cmp insb sbb mov fstpt sub mov pop add fbld and inc cltd int lods mov xor data16 cld jg popa imul add orl dec out mov sbb das inc cmp push mov pushw or fdivrs lds cli jmp xor sbb jae mov xor ret leave leave ds jne divb cmp mov and fcmovb js push imul (bad) out sbb jl incl pop stos aad xchg shlb pop loop fidivrl mov mov push inc cli out jnp and cs push and insb add fisub mov push dec es cli (bad) jne shrb mov ljmp pop sbb test mov sub pop insb cli cs std scas stos add movsl dec xchg aaa xor adc pop pop push xor ret enter hlt sub or xchg fstpl inc sub daa cmpsl xchg data16 inc repz xor inc xor sti lret iret xor in les dec push cmc mov mov stos adc mov test into data16 cmp fisubl dec into rcrl test or addr16 cli aam mov and sbb (bad) rcll push and lods lods or jp sub mov out sbb addr16 dec lock sbb ret mov repz xlat pop in (bad) lcall dec in idivb out ret dec and jmp pop cmp mov cmp ret pop orl int3 (bad) xchg scas mull fistp jmp es lock nop mov pusha jle cs test aas jmp (bad) xor sbb xchg push mov out data16 aad cmp rorl roll sti fiaddl sbb jmp push mov lea and and push mov adc imul xor repz fbstp jnp mov in sub ss pop xchg mov popa push in pop call push xor inc bound mov xchg and jb daa lret push and fistpl add sbb pop sar gs out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb sub add ret outsl js jno or dec push mov xor in call and fsubr fwait xor fidiv pop loopne jno mov dec nop inc jns and mov insb add rsqrtps xchg push call fadd mov sub cmp xor mov mov sbb mov cli xchg push pusha mov xlat inc mov test repnz mov je mov outsl hlt pop iret movsb jl push pushf and test xchg or mov (bad) out xchg repnz cmp jbe std xchg and call out push jns cmpsb mov xor fsubr outsb scas push test mov mov shrl fs mov int and or loopne mov js in in lea and movsl movsl and in in or mov add xchg xchg loop lods push pop or xorl out pop cs int3 jle roll test arpl jne enter mov movnti adc mov dec roll pop movsb dec in scas ret mov pop sbb sub mov push (bad) jmp mov mov and xchg in fbstp pop pop cmc out shll lret pop ret mov in call cmpsl fistp xor cmp push cmc fidivl pop ss cmp cmpsl xchg cmpsl jecxz decl dec movsb or mov fnsave addl mov pop inc mov cmpl sub outsl sbb mov ret xor mov scas xchg fwait js or ja in enter divb jo push push (bad) call shlb sub fstpt sbb mov or push leave sub or push dec or daa lock xchg jge out jmp dec test repz int pusha xchg out dec pop fs sbb mov or mov cmpsl int3 inc add fldt and (bad) xchg mov mov add jg lret scas adc icebp cmp repz adc int3 mov stos add jns mov mov adc nop and jb popf ds aad pop repnz lcall or and fsubr lret imul (bad) repnz inc lahf mov stc subl or push add push stc xchg or ret cmp push roll jmp mov imul inc adc mov out iret repz ret xchg mov jnp in movsl movsl test dec cmp arpl call adc imul insb pop jae inc mov test or je sbb stc clc cwtl idiv arpl test cmp movsb mov movsl (bad) aas clc and push and shll sub push adc adc mov in push sub xor jnp nop pop and cwtl lds lock mov cli data16 push xor inc pop mov dec cmp aad sti pcmpeqd call jbe scas push rol imul adc dec mov mov pushaw pop inc inc push pop xor jmp lods push pop or xorl out pop cs int3 jle roll test arpl jne enter mov movnti adc mov dec roll pop movsb dec in scas ret mov pop sbb sub mov push fist (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov mov ret repnz in sarl adc pmullw jge fcomp jp mov add jo in jecxz mov inc negb imul sbb push (bad) stc loope (bad) fmuls fcomi push mov cmpsl (bad) movsb int inc repz xorl mov mov lods or sub mov mov add push jecxz (bad) test dec mov add outsb lret cmp mov sub fwait in (bad) sbb sarl xchg push pop rcll inc add pop cmp xchg add aam je sub fidiv movsl divb mov cltd jp mov imul pushf mov jb pop and and test sbb std cmpsb fdivrl clc pop xor dec adc decb mov xor repnz in sbb (bad) push push push push and lods lods or jp sub mov out sbb mov out mov dec mov (bad) repnz in mov push xchg and jbe insl je add dec mov fldcw stos sbb jae adc jne scas pop fdiv mov mov movsb lret mov lock jge inc mov sahf jle pusha les rorb mov and lret mov cmp stc daa add mov dec sahf xor stc pop lea or xchg pushf repnz movsl (bad) push xchg lret (bad) pop js pop pop (bad) cmpsl push fstpt mov or aaa dec lar push aam (bad) pop mov lret enter jp es cmp lahf jg or popf sbb adcb xchg push test inc jg imul sbb movsb inc aaa fnstsw xchg dec sub fmul jp (bad) leave dec dec shl dec inc sub rolb and call dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or fwait sub push push or mov pop sub mov loop mov loop ja xor xor sbb pop inc mov sbb aam mov ror jno fimull (bad) mov (bad) fisubrl sbb dec aad xorb repnz repnz pop xor add outsb add mov test int3 faddl push aam test dec push dec aaa scas mov int sbb dec push jns mov outsl int3 jp dec out and popf movsb and cmpb mov aas arpl cmp lret lea rcrl int3 fdivl out xor mov fildll int das and test scas pop out jecxz mov jbe pop jl mov les inc xchg mov es sti outsl lods fwait cmp into cmpsl sbb inc mov cmp inc bound stos cmp xchg sub les or (bad) (bad) (bad) jmp xchg xchg add fcmovu mov inc addl lock jae inc xrelease loopne mov lahf jecxz sub js scas (bad) xor push xor inc add sbb sub in lea lds sahf add mov lock mov mov addr16 test mov xor dec inc (bad) les sbb pop subl sti pop repnz leave movsb outsb (bad) cmp js mov inc cli enter hlt push addr16 xchg mov fpatan popf mov out inc mov adcb nop addr16 pop xor je jl lock push push jb sbb cmpsl repz pop add mov outsb mov xorl dec sub cmpsl jne sbbl jns ljmp jg mov lahf mov mov pop inc push cmp jmp jo push push (bad) call shlb sub fstpt sbb mov or mov ljmp cmpsl (bad) mov xor ds add cwtl in cmp sub rcr inc ljmp test mov xor and movaps es pop jae lods (bad) xchg sub pop mov test dec scas mov jg mov mov test mov jb addr16 aas ja xor xor push popa lahf add bound inc out jne les pushf mov lret adc (bad) cmp jns test fdivl xchg and dec stc divb enter dec xlat or cmp mov pop cmp push lods dec push inc xor jge xchg jne pop lret gs ja pop cmpsb aaa stos cli sbb (bad) dec dec unpckhps add jle mov mov adcb sub icebp or inc inc cld (bad) xchg mov faddl sti fs outsb mov (bad) movsb mov hlt popf test inc sbb mov sub lcall add test xor imul in imul mov sahf in xlat aad push pop xor in cwtl lods mov and add jecxz out or xchg push cvtps2pi cmp mov lret dec or iret iret mov cmpsl int3 dec out xor fcompl arpl jbe mov cmp int pusha sub push imul pushf jo js (bad) sbb movsl cmc ja add shrl mov or aad xor or xchg jns jecxz bound lods push mov pop leave dec call mov add jne push jl pop dec cld fsub popa in mov pop ds xlat in adc (bad) ljmp mov push inc aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov lcall outsl sbb fstpt mov (bad) push es dec cmpsb dec sbb push inc pusha movsl pop mov stos dec fstps in jne or in cwtl shlb xor add adc das dec push pop cld sub stc es pusha cmp xor ret stos and je pop daa in in outsl test rcr repz ficompl dec inc adc outsl imul repnz (bad) (bad) mov adc push (bad) mov das jp inc test mov inc mov inc add mov aas add daa mov fwait jl movsl and out fstp fsub std js sbb or jp add mov inc nop mov aas scas lods loope mov pop or ret rclb test repnz shl mov mov mov call pop pop mov repnz ret dec dec push into cs lret mov mov hlt hlt icebp icebp stc icebp test daa movsl mov mov add sbb ss pop imul cwtl fistpll inc jbe sub jbe iret popl mov sbb js and (bad) js xchg imul in out jg testb mov dec iret les adcl cwtl lds out sub inc (bad) stc and add add lods xor jbe repz or inc or jg arpl iret std repz pop or add gs xchg xor loopne lret nop jbe inc and mov push sub fistp mov (bad) ds pushf mov inc push add (bad) and pop sti mov roll and sub std pop mull add add inc xlat test sub fdiv xchg adc fcmovnbe ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test stos subb jmp or xor sub mov mov add fs mov test imul lds dec ret stos push shll cmpsl cmp movsl call enter pop aaa rcll sbb mov xor in mov rcll std pop jno xchg jnp adc jecxz mov or mov dec pop pop adcb popa push add sbb xlat out rolb adc mov mov scas insl int sbb or popa (bad) mov (bad) arpl mov (bad) pop aam push mov popf or pop add push push mov (bad) mov lods outsl pushf in jo aam dec out rcr (bad) push pop push aam push mov rclb xchg mov mov std cld test (bad) jmp xchg xchg fcmovu mov inc addl lock pop adc cld gs das leave test cld or mov dec xor sbbl lock push mov mov jae fwait add xchg decb add adc adc daa stc add mov int mov mov lret adc scas pushf repnz in loopne xchg or scas incl jbe mov loop and rcpps daa inc inc clc lods mov cli cs mov repnz xlat pusha test mov loope fldl imul test call ja add sbb out mov sti cmc xchg int pushf add xor xor xor cltd push cli popa or mov add mov (bad) enter dec xchg fldl add add push test mov pop pop xchg mov aaa imul out in in in aam out dec xor in sub stos jbe dec dec pop mov mov jno,pn adc sldt xchg add cmp pop ds jne lcall lret aam add sbb into push scas jns pop xor or aas dec int sti push jne push xor mov idivb push sbb enter repz ljmp test les leave movsb ljmp rclb cmp inc cmp insb int3 in repz mov cmpl loope mov mov add push xchg dec push or in cmpsb inc jo and inc dec and out fcompl aaa dec mov dec mov jecxz sbb jle push dec mov mov jp dec daa jo fwait inc das push or aam xchg dec js mov fbld pop dec in xchg in js cltd pop andl pop dec dec cmp arpl call adc imul insb push push adc fidivr push push cmp adc and pop dec lret or adc divb sbb out mov popl scas lahf or jge fisubr cmp jnp,pt fldcw sbb imul push outsl sub fnstsw ds push push insl push inc push cmc in push dec cld ja fadds mov cltd hlt sbb jno xchg insb imul mov (bad) cwtl mov xorl stos daa aas dec adc lods adc mov outsb jge ret loope sub ficomp leave mov insb imul jp or (bad) ret add icebp mov fsubs pop adc and jmp stos push into xchg loop inc cwtl lret xor pop icebp pop inc sub pop and test cmp mov clc mov xor ret leave leave ds jne divb cmp (bad) setg add es push mov fwait cmc in in mov mull adc gs or int3 stos std inc stos call inc repz je inc pusha inc outsb push insb mov add ss adc pop cld test iret lahf sti jne stos jge out cltd mov mov sbb (bad) jbe scas test ret xlat mov sbb cmpsb (bad) mov push jp mov andl or inc daa stos stc mov mov xchg cmp mov mov sub mov dec dec pop inc and fnop ds adc movsl inc xchg iret push insl test and mov pushf popf insb lahf xor pop add mov ja add lds movsl icebp lahf mov popf insl lea orl mov (bad) daa lcall test aas pop sbb push fcompl cmp data16 adc rcll push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait and lret gs pop xor mov sub xor cmp sbb in xchg sub sbb (bad) cmpsb xor and je adc fprem1 add (bad) push cltd movsb (bad) pop xor add jmp mov (bad) sbb aad sub dec scas push (bad) mov cmp data16 pop push sbb ficomp mov inc mov dec cmc add mov lret ljmp aas inc imull mov imul jecxz sbb mov scas loop jmp mov push movsl popf cmc sbb loop (bad) stos ret cmp adc xor pop (bad) fildll aam stos test out fmuls out xor add adc jne out shrl call out mov jne or loopne mov sbb jno dec inc inc in and stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb icebp pusha out inc xchg jg jecxz inc daa jne mov xchg ret xlat test push (bad) mov jmp das and sub cmp mov cmpsl mov xchg movsl loopne adc jb fcomps notb aad scas and (bad) movsb arpl adc dec adc das jle push loope mov and mov pop jbe movsb jbe dec adc scas out enter push sarb jnp jb mov out inc call sub push enter xchg out add push jmp add es xchg push pop mov data16 bnd dec pop test sbb shrl repnz mov push clc int3 xor dec popf in ss add sbb ds fmulp add xor xlat negb mov and ret adc inc jp mov rorb in je xchg dec jmp les (bad) cld and loopne mov js in lea and movsl movsl and in in or mov add xchg xchg loop scas scas adc (bad) pop adc lock (bad) adc mov jle jb sbb iret mov xchg adc sub or ret popf das ja pop sahf xor (bad) jb (bad) sub or sub xchg ret mov je mov lock test cmp inc popa pop sbb (bad) aad add adc mov push add stc adc dec and mov jns jecxz fwait stos lds lret imul pushf jecxz out das push (bad) jmp divps mov pop dec push clc mov xor out or test test sub pop cld jbe in mov hlt mov xchg repz in jle fdivl adc pop cwtl fildl scas mov icebp movsb sbb insb cmp and insb fwait mov icebp cmp out push push push (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor (bad) push out or pushf gs and testb jp (bad) out adc mov fdivl push popf hlt arpl lods aam adc cmpsl jp jmp and mov sti adc fidiv cmpsb mov jnp lahf in jno or adc jmp jo jge les pop sbb jl xchg rclb popl shlb dec fnop aaa insb lds xor jo xor mov nop (bad) mov push xchg cmpsb jge std add or out lds cmp aad xor and lret mov fidivrl lods mov (bad) aaa push push add out xchg das dec xchg sbb jg jmp bound sub push push pop or add pop cmpsb xchg mov outsb into pop inc xchg push clc xchg mov dec dec cmp pop cmp test cmp arpl call adc imul insb push push adc fidivr add push enter push adcl loop xchg dec cmp or add cwtl adc sub pop dec sbb cltd mov jecxz or sbb mov mov fildl or adc mov or push xchg dec mov cwtl pop ret (bad) loopne icebp push inc xchg arpl sbb dec mov adc mov mov les pop and loopne mov fwait add (bad) daa xchg pop pop fist jo je lahf mov scas shlb inc push es mov cmp inc pop stc hlt mov lods test xchg test push mov and adc popf ds add in test jb repnz in inc cmp pop cmp add inc dec les pop mov repnz gs daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg push sbb dec jp lock rolb pop popf iret das push in sahf add mov sub nop inc push mov out cmp adc mov push sbb outsb sub cwtl pop mov sub push out xor and mov ss xorl dec je (bad) sub sahf mov push jae repnz rcrl push or cs mov mov loope lods shl shrl push loopne cmp shrb add aad lds fsubs data16 cltd xor xchg xchg and movsb testb sahf loop rolb jmp cmp outsl xor fisttp push and inc popa cli or cs adc inc std enter and (bad) fwait push insb inc sahf bound inc lods jl hlt movsb pushf pop push xchg sbb das sub rol push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait or das mov (bad) in dec (bad) jnp call ror mov add xchg ja xchg push inc outsb aad mov xchg inc pop (bad) aaa cli add adc pop out ffree stos arpl out sub ficompl hlt mov inc int mov pop mov mov movsl cli mov or repnz roll icebp lods js mov jb bnd rorb imul int sbb fiaddl popf mov inc imul push xchg rclb or jp,pt orl imul repz jmp sub test aaa test leave lods or neg popf jge in add mov and out fidiv fistpl fisttp mov adc pop pop movsl cmp inc and inc in into inc add lcall pop pop or div jmp xchg dec dec jno mov or add rorb mov out shlb cmp sbb or lods bound sbbl ficoml mov dec insl sub xchg mov pop pop (bad) lahf dec jle aam int lret jae div lret jno cltd dec fwait xchg or jae and add outsb lcall idiv lcall jecxz cmc mov sbb push enterw xchg xchg aam fidiv mov or (bad) lret mov clc jmp cmp or xlat add test inc xchg jae jg adc outsl and (bad) arpl dec mov cmp sub cmpsl lret jmp push mov out push test or rolb mov fdivp ss lret loop les cmp mov mov inc fisubl inc or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock test pop andps lret add out and add jo outsb mov dec (bad) dec dec inc mov xlat jle test pop arpl cmpl jo mov sub in jecxz lods add mov jg adc arpl and xchg ret lcall divb inc decl or jmp pop inc mov xchg mov xor dec repz add or add aad xor push or xor add mov jg mov imul jb pop xchg mov (bad) ja rdpmc xor lds inc orb in ss rolb in js inc and fmuls enter aas jl mov inc cmp xchg lods pop or (bad) leave in mov jg pusha dec stos and adc adc xor pop jb (bad) sbb mov (bad) call shlb sub fstpt sbb mov or inc inc daa out sub push xchg push popf test sub xchg pop sbb stos inc dec fistp neg lods aad aaa add repnz shlb or dec cmp ss sbb mov dec adc xchg lock das add movsl sub cmpsb xchg iret dec fs xchg sub adc lods mov or add mov and iret dec sbbl mov xchg dec mov in in mov pop adc arpl scas fstps or in scas mov cmp push add stos in push pop outsl jbe stc imul dec cwtl (bad) pop in imul mov imul add shrl clc add ljmp je test mov add sbb xchg add pop mov faddl sti fs outsb mov lret divl sbb out jbe inc add add push loopne and mov jp repnz outsb pusha in push imul xorl cmp and sti fisub mov scas psubusb xchg in (bad) sbb xchg dec fbld repnz or ja jl bound mov jb and jns add enter stos loopne bswap mull cli aaa mov dec das mov and test popf xor adc repnz and ret sub jno xchg hlt and scas pop stos sub jo add out pop mov js stos add stos out add popa xor mov add (bad) lret js mov xchg and loope (bad) fwait add stos adc or repz dec lcall stos bnd fistl (bad) (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov data16 ja jecxz sbb xchg push pop pop mov iret and lahf je push rcrb add gs dec ds loope fnsave pop fcoml push adc test into jg push loop pop in arpl dec shrl insb (bad) jl ret sbb jge loopne cmp in jnp push add call in push scas fwait sub xchg or (bad) push fstps call shrb imul jns imul (bad) test lret add xchg sbb dec repnz mov push mov popa and je subl sahf ret bound cli jnp inc daa aaa sbb sub jnp fimul aad inc jno push xor jmp mov mov sbb iret notb xchg mull shl mov mov repnz ret dec dec push into cs lret mov mov hlt adc js jmp aaa dec inc adc push popf sahf inc (bad) cmp xor pusha (bad) xor mov fnop ret push pop xchg push sub jl jne aas jbe mov jle mov jbe out pop aaa lret push push mov or sbb clc loop push xor mov cld cltd enter mov push sbb out mov in xor test push mov push nop ret cs out sub lds sbb rorl in xchg cmp xor lret cmc mov roll jle mov or jo cmp mov or cmpsb push notl cwtl call sbb nop ficompl outsl push fildl out out dec inc adc pop mov ret adc lcall das add mov fadds int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound xor mov add cltd jne mov shrb ds pop jmp (bad) or out rol in push into mov push aam sbb (bad) testl or rol and push pushf xor mov jle inc outsb cmp mov jbe mov imul push out push jno mov rorb int3 int lds cmpsb push out shr inc outsl fist mov push outsl sbb ret mov mov mov bound mov sbb test add insb jge aaa pop dec and push or jbe out push in inc add jbe pop xchg int push mov mov dec or sti fs fsubrl cmp inc mov iret xchg sbb cld dec dec ds scas cmc push push mov lock or (bad) (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock adc enter cld mov das pusha (bad) mov push repz pop ror mov mov sub fcmovu sbb or stos xor (bad) cmc rclb sub add es in pusha (bad) mov and popf pop loop cmp sub push or jns aas sub arpl incl xchg dec mov fwait (bad) jb push fcoml pushf jo (bad) push aam test mov inc inc jg in xor add enter mov and mov xchg push insb mov test andl push aaa (bad) jb pushf jnp mov jle out xchg sbb nop test test test mov cld inc cmpsb out lcall (bad) clc adc mov sub add xchg jecxz lret inc in sub mov or sub inc sub (bad) shll pop pop xchg mov aaa imul out in in in aam push push cmp pop inc cld jo add pop mov enter mov test inc xchg ja pop xchg xor (bad) sub jbe push xchg add push mov cmovae mov or cli inc scas inc push jno rcll jmp dec push std pop or or call fmull rcrb add lret stos adc sbb ret (bad) jp es jne jp aad imul fcmovnbe fdivr out or pop (bad) bnd jno icebp xor push ficompl cmp mov sbb in xchg bndldx (bad) imull scas fisubr and pusha cwtl mov fs adc iretw mov jnp xchg (bad) scas jmp ret sub adc and adc fbstp test push mov pop pop dec dec cmp arpl call adc imul insb push push adc (bad) aad xlat xlat push or repz clc jnp mov add lods push lock subl fldl outsl insb mov push or push pop sbb sarl dec mov pop push jo jb or mov lret adc or cmpsl pop add and jmp adc sbb out jg add lods pop pop into sub cs and loopne xor aad jl pop nop lcall jne iret sbb dec cld pop xchg call mov daa rcrl sbb push pop in pop popf mov std mov clc jecxz dec dec xchg in xchg xchg xchg xchg into xor in jno mov pop sbb jmp cmp pop xchg std push inc push fs dec ffreep mov pop mov btc pop sbb and lret fsts shrl lcall jne divb cmp pswapd loope cmc cmc mov add push xchg test pop dec cmpl dec lret iret mov stos dec mov adc adc jl adcb and inc inc insw and jae mov mov cltd cld sahf mov adc (bad) enter insb test jle adc xchg jb or lods les rcrl sarl mov jl xor cmp dec push pop in adc add ds inc sub ficoml mov imul call or movsl dec or (bad) or imul add lahf inc sub sub repz in mov outsl cli jl ret push into std cmc jne xchg icebp and bound jle popa add cmpsl rorl ss mov loop inc das pop jg dec (bad) pop bound cmpsb or ljmp or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 popf into loope adc add inc mov cmp out mov xor dec call jp add mov push inc push das pop cmpsl xchg fs inc pusha sbb dec aam movsb mov mov inc jg test mov mov int3 inc adc jnp ja pop add xchg xchg cmp stc loopne push pop inc dec push jmp mov and int3 xchg cli in jp sub shll mov icebp push ds push inc inc cld mov sti imul bound aaa or cld cld and push adc adc push das xchg add jp cmp add mov push fiadd mov xor sub or out lock lock mov dec push lock xlat jecxz push inc pop mov sbb int gs (bad) aam fs jb rorb cmp popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or call aas loopne push mov cmp mov lds cmp leave push adc call sub es pushf jg jb mov leave in aad xor mov xor adc es mov cmp add into xor jne call or in xchg jns call js pop cmp push and movsl xor lock out inc dec lock dec and inc mov add rorb dec pop dec data16 add dec (bad) icebp rcll mov loop or jne (bad) push pop imul lock ss out popa repz cltd scas dec in out xlat ret lock pop clc mov mov add leave mov add push fs inc inc dec inc repnz pop xor les xlat js movsb por mov sbb bound jl and movsl and in in add or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into rorl clc pop push pushf inc ret test stc ja scas sbb sub test (bad) xor mov push fimul pmaxub das aam sti cmc xchg dec call cmp aam int mov push stos lds fild into dec sbb inc lock cltd js cmc gs inc arpl popf mov pushf sbb int3 ja dec push mov sbb push lock ds fwait mov jnp add pop lret vpsrlw fldt out imul int3 les cltd dec xchg (bad) push sub rol sub lods mov pop lret fstps lea and rcrb sbb pop push outsl hlt mov xchg push loope notb jbe add out xor mov je ret pop addr16 push xchg sbbb in push pop mov jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test cli or insb xor out (bad) popa xchg xchg fistl out test (bad) (bad) xorb cli mov add cmpsl outsl in mov ret push sti (bad) punpckhwd push xchg stc jl dec sbb dec std in jno inc dec lds ret sub mov fstpl sbb mov fld nop in out pop pop fsts dec pop mov cmp lcall js mov or fwait mov push rcrb loopne aaa mov (bad) xor (bad) rolb jb (bad) cli fldt in jmp nop mov sbb add lods loope lock int test (bad) mov cmp ret xor insb int in and es jns pop inc fidivl lds (bad) xchg ret jg xchg das push jecxz sarb cmp hlt call adc imul insb push push adc (bad) ja xor mov xchg cmp ficompl fucomi das mov jmp xchg rcrb adc cmp xchg and mov sbb or rolb xor push rorb lcall scas jle cltd test inc mov push push xchg jno out out fidivrl in sti mov jbe out cli mov into ret cltd pop mov fiadd mov lahf lcall dec cld mov jp popf (bad) out (bad) gs movl int3 or push dec das lods cmp fcoms imul inc stos popa enter dec mov or mov daa fildl jl jp mul imul ljmp out jle hlt daa (bad) jo fcmovnu push insl push orl fsubrp mov add hlt mov xchg jg sarl jno xchg fs enter sbb adc mov cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll in cltd loop popf ret mov push xlat arpl jp xor std fprem1 test jbe push and cmp lods dec cmp int cli stc mov mov fbstp pop int3 enter pop or adc imul push dec je shrl mov adc rolb sbbl andb push jnp inc popa xor pop push sbb jo pop pop and lds pop mov pop cmpsb mov xor mov rolb sbb push je iret add jg sub aaa stos jl and in test or mov add push jle cltd cmp ljmp neg leave sub cmpsb sbb (bad) mov dec nop into xchg mov cmp aaa jle cmp mov jg xchg push inc out js adc mov sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss xor or hlt jae push int pop add lcall adc dec leave repz xor fnstenv ret mov fimull push and adc sbb lock add pushf sbb xor xor mov inc insl cmc clc xlat (bad) mov add neg ljmp xchg xchg lcall repz and scas dec and inc cmpsb sarl lret sub jae rolb lock xor or pusha pop in (bad) ds mov push jg cltd daa das jo ud2 sub into pop dec out mov inc xor xchg adc aas cvtpi2ps push mov xchg mov (bad) aaa nop iret mov in fdivrl (bad) int3 insb lea icebp das add xchg xchg dec dec jno mov or add rol shll es data16 (bad) mov dec mov or int in xor test into cmp cmp sahf sbb test and data16 aam sbb adc (bad) mov inc or jecxz scas and test mov inc add adc inc pushf xchg fimull xchg mov les sub lahf xchg or mov arpl and (bad) mov pop jg lds lods int3 adc in push test repz inc xchg hlt (bad) mov scas repnz shrl inc ds lods or push stos jmp mov xchg add mov and xlat mov test xor loope cmc xor jbe std mov mov hlt push mov int3 rorl stos inc or jmp xlat mull mov xlat sub mov adc mov inc addl lock add enter stc jbe out mov rcll int3 sahf pop outsl jp jns mov fisttpl (bad) (bad) xor cwtl cs jl jl repnz and out lret mov sub leave (bad) push sbb xor jge push push and pop addr16 out (bad) sbb sub lcall in ljmp mov pop sub lcall mov sbb sub (bad) and iret lcall xor (bad) and jp add add daa adc mov stos mov adc xchg loope xchg ds mov cmpsl (bad) pop (bad) (bad) push in push sbb add (bad) sti in (bad) cli js add sbb jae test jno cmpsb fistpll les push xchg and scas pop aas dec sbb stc hlt sub shll stos add jne pop cli out mov fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in mov daa pop inc and lods sub out (bad) (bad) add fldt cld pop iret mov xchg pop arpl cmc xlat add cmp inc mov pop mov pop push stos mov add dec decl cli mov cmc sub jge jns sbb int xchg mov pop or push jns and pusha iret repnz ds movsb sti mov leave popa mov push popf (bad) fimull xor mov lahf std lea cli fimul add popl popa fsubrl test and mov lods lret ja cmpsb fs inc sbb sub test rorb shll les sbb pop fdivrl sub fsubp pop cli xchg sub roll and xor js mov or add sti fs outsb mov lret divl aad xlat adc add faddp sub out (bad) pop aad and inc inc pop pushf cmc add idivb call ficompl inc insb mov push loopne cld es xchg sub ret pushf cmp mov mov sbb in sbb js test cltd pop inc xor stc xchg sub cli dec imul xlat fidivr cmp pop iretw xchg fnop fstps mov xor sti daa adc adc scas pop xor and or test sub sbb xor cmp fwait sub roll cmpb out jne (bad) adc mov lock add clc shrb ficom pop data16 pop (bad) or ds test or cmc dec addl repnz (bad) into cltd cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) push jp out push jge sub mov (bad) repz (bad) jne int3 stos repz xchg xor dec adc (bad) xlat cmp xor add xchg or loop jge ja and lret lahf lods insl (bad) int3 mov movb dec mov in out xchg mov sbb ret fs (bad) lods dec iret jno jo lock scas mov sbb mov js in iret jbe movsl jno sub lods xchg repnz mov inc (bad) mov xor add xor jne ficomp leave sub popa ds adc ret cmp mov pop jle xchg fidivr lock cli pop sub scas aaa clc pop adc push js sub jecxz sarb mov add pop fisttpl xlat ret dec mov push cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg mov call cmp mov and fistp fdivrl jl adc cmp mov jae lock dec mov cs into cmp (bad) cmp xchg push (bad) jnp call shrl mov or push loop cmpsb rcrb jge stos sti fwait gs and or push jno nop and push es popa dec int sbb rolb mov in aaa and xchg push (bad) push in mov fiadd dec jmp int3 (bad) jmp lcall insb cmp and inc fsubl mov ficoml sub add add jnp sbb cmp rorl inc xor pop loopne out or rcrb cmp imul sbb gs cli clc inc and mov decl stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test cmc dec clc dec add sar mov xchg es and sahf add mov cmpsb lcall adc inc mov jno in call lret mov popf xchg out loop pushf cmp add sbb and xchg mov jmp or cwtl insb mov lcall lss daa gs in or inc adc lret mov xchg (bad) mov add add inc mov mov mov pop mov push ja fidivl test sub jnp xor sar and pxor mov mov (bad) js pop (bad) xor xor clc sbb popf bswap loopne std xchg jmp fadds loop inc pop sub mov xchg pop rorl sbb cmpsl pushf jns push pop ja xchg dec daa mov pop jmp xchg fcmovu mov inc addl lock add enter cmp rol mov stos pop fadds xchg sti das jmp pop mov fbld push inc data16 sbb das or pop mov arpl mov nop popl xchg xchg lcall xor sub fimull cmp int3 mov adc cmp and ss pushf mov or xor or mov ds fmuls fdivrl cmpsb dec cmp mov (bad) mov sbb lods roll je int pop xchg (bad) pop outsl cmp push loop incl (bad) mov pop ffreep xor adc jne xchg push mov inc mov lock mov dec xor lea cmpsb sub pusha jmp xor enter in sub repnz out push cmpsb push shl out fiaddl inc sub push loope sti sub pop xchg mov aaa imul out in in in aam push push cld cld (bad) and cmp cltd or jle mov (bad) cld add rorl subl andl das push in mov sbb call push pop jb test inc mov daa push push or test lods push rcll insl sub cmp add fdivl les je imul mov bound xorb sbb add add dec xor xor mov jb scas dec dec loopne dec and stc mov mov xlat push add jno mov sbb scas insl sub add lret push jle test push xor adc inc xlat int nop int push cmp mov enter and int3 adc lods jae lcall out xchg jnp push dec notb add inc aad mov das add and lcall lods cmp arpl call adc imul insb push push adc (bad) aad xlat xlat adc adc pushf push ja test pop mov cs fwait out pop jg insb dec add fisttp xor mov push ljmp addr16 loopne lock push scas out add jbe cmpsl xlat fsubl adc ds in ljmp mov test xchg jns push ret out rcrl xchg fbstp pusha mov (bad) data16 scas ja push into leavew jns mov push adc pop xor lock test popw ljmp sti pushf add dec mov sbb inc cli jp push loope pop xchg rorl in mov (bad) inc mov jmp scas scas call pop pop sub int3 aam push scas dec mov enter into push movsl pop sbb stc in stc clc movb xchg shlb push xor inc inc mov je cmp add setg loope cmc cmc mov pop mov repnz jmp lcall sbb pop push insl sbb stc std ret fldcw movsb or stc jns cmp lds cmpsl cmpsb aad stos xlat dec jmp outsl pusha std add push les rolb cmc outsl stc mov fbld aas fcoml (bad) sbb mov test cld pop test mov cmp lret push idiv dec pop in clc add lock repz ret xor mov mov inc mov test adc lods mov cmp inc inc jge ds mov pop cmp (bad) or inc test and mov adc mov cmp mov cmp inc push push loop push mov pop dec lret mov sbb stos mov aaa insl test call lret cmp mov jp addr16 pop sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss mov mov notb out test cli pop or jae inc add pop repnz adc jbe adc insl inc iret xchg icebp pushf cmp rcrl add cmp and sbb imul scas dec sbb into pop mov lret cmp sti sbb outsb jb jnp mov enter fsubl les aad aas push subl pop testl mov jns ret lret movsl pop adc inc rcrb pop xor push idivl jmp push push inc (bad) imul cmp fldenv cmpl xchg stos test mov push push fs sub loopne das sbb or (bad) jl pop sub adc mov paddsb add nop jge xchg cmp dec fisttpll (bad) add stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or pop jmp xor and or inc inc adc shlb aam jno push mov inc jle inc sbb and cmc vpunpckhqdq ja inc fcmovb loopne cmp jecxz mov dec jae pop int3 xor and mov cli scas aaa lahf push repz bound push cwtl inc jb pop (bad) (bad) ret scas dec mov fcomp test pop push inc div clc fwait lahf pop sub xchg sub (bad) (bad) and gs clc sbbb push out std shrl in mov inc pusha rol inc pop xchg adc cli xchg pop dec sbb cwtl mov out mov clc shrl (bad) je cmp mov out push or mov inc xor pop jae cs rcrb pop cmp popa dec mov jne outsl icebp into xchg stc in add test lea dec jl and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into popf pop mov (bad) notl lcall leave outsb cmp scas add fdivrs mov mov aaa pop (bad) std ret outsb xchg or push push stos mov mov insl pop hlt add push cltd dec mov dec popf test test cmp stos jns xor cmpsb mov daa xchg sub insb out mov imul loope sub add push aas cltd mov push ss dec gs dec and popa jnp outsl jo push sub cli ja loopne cmc dec (bad) (bad) imul inc pop jbe cs cmp push lret mov sbb loope popa mov xchg jbe add sub dec cmpsb mov adc insb ret mov call xor movsb mov jne sahf jp loope js or lahf sbb sub popa sub fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl pop adc cli push mov pop les in xchg mov xor xchg push in mov pusha and inc cmpsb xchg pop inc and push add jle adc add std sarl pop gs hlt add inc js push lock fcoml sub and xchg mov roll dec fmulp xchg wrmsr sbb sub pop iret lret hlt int3 insl bound scas lock mov adc stos jb scas rcll push scas xlat inc sub imul orl sub mov int mov pop mov sbb mov lcall xchg sub rcrb adc mov js repz clc sub nop sbb call fistpl dec lock jmp mov inc mov call ret imul insb push push adc (bad) ja xor insl mov ja cmp jmp repz jp aad mov in inc int3 and jg stos push cmp pop push leave jnp and fdivr inc andl mov (bad) fwait mov mov imul mov push into mov ret dec cmpsl cwtl cmp mov ror (bad) lods rorb sahf cs lret push mov pushf leave mov mov fwait mov adc pop mov inc pop sti push adc dec cwtl lods jecxz ljmp mov sub dec fistl mov stos (bad) out loopne leave jmp and xor xor lods repnz mov fwait loope adc inc sub aam sarl xor fdivrl mov jno sub add push cmp mov cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll (bad) sub and ja scas bnd fwait mov out pusha xchg push inc in pop cmp mov jo xchg and sub push sbbb ret xor jns rolb mov out cmp cmpsl dec pushf xor push cmp jbe add mov add loop cli aaa in ljmp sti neg xchg dec pop or (bad) xor xchg mov adc sahf pop (bad) and xchg xchg inc adc or mov fs cmc pop jb ret dec into data16 mov inc mov lret cli mov jle xchg push setnp mov movsl neg (bad) pushf or mov bound pop mov mov jns sub (bad) and dec xor imul int3 xchg outsl cli push xchg xor push mov sti jne jno sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli outsl lea in xchg pop mov outsb ret mov dec lock cmp jno and je and fistp sub mov and xor xchg pop push jge xor out mov push push fwait mov jo push dec loopne dec cmp xor inc sub loopne pop outsl or jnp hlt xor repz xchg stc sub mov xchg cmp aam push inc aam jle mov adc and movsl pop hlt mov rcll bound cmc sub shlb sub push xor sbb inc xor sub mov ret lods sti dec sub cmpsw ja mul inc jmp cmp or movsl cmp popf in aas insb jnp repz mov int cmc std movsl pop push shlb inc pop and pushf loop pop mov frstor xor jnp insl pop mov jno mov cmpsl cmpsl sbb add rol shll es data16 mov js sub insl cltd add dec fst pop in inc or shlb dec bound cmp push popf in inc ds lock outsb ss jge mov into loop ficom lea xor ss mov sbb cmpsl sbb add inc repz not fistpll mov cmpsb adc inc adc out mov rcrl hlt scas jg (bad) aas leave dec inc mov (bad) jbe mov or dec enter sbbb sbb fsubl jp,pt (bad) mov pop ja mov sbb pop and arpl adc push (bad) (bad) push xchg push pop movb popf fxch mov and lea ss es cmp (bad) ficomp rcrl cmp jae cmc mov icebp out pop adc jmp movb orl lock add enter jo xchg test int sub inc mov ret popf mov jo mov loop push jmp push mov and data16 or cs sub fiaddl jge pop (bad) xor ljmp mov fsub push das (bad) loop sub stos ja dec test xor add fsts fdivs push push jmp fsts add jbe sub mov jbe mov cld push xor and mov mov jl or adc mov or and out inc mov cmp (bad) test fs xchg adc xorb out xor ja cltd (bad) cmc and daa add push test test mov orl fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp in (bad) sub hlt mov mov movsb outsl xlat pop mov push push pushf test roll jle lods aam and fwait mov repz pop ljmp sbbl push in icebp xchg js ret enter mov fwait dec mov call aad xor xchg outsl and in dec ljmp add jle pop dec (bad) int out sbb (bad) (bad) mov lret ss ljmp jbe cmc or mov jb push in sub fisubr xchg jbe pushf mov mov mov ja,pt xchg dec insb test xchg mov enter bound adc lcall jbe lcall xlat fdivs jne imul mov pop sbb lret adc jl inc xor inc pop inc inc pop cli fwait inc sub pop hlt sahf fmull or cmpsl scas add sti fs outsb mov lret divl aad xlat adc (bad) gs inc mov jle inc pop iret jno cmp dec mov sub push fs push ljmp fistpl ret push jl cmp fsubp xor fwait sub adc cmp mov popf cmp push jmp push dec pop loope cli cld mov push cld cwtl (bad) adc adc and das xor scas jae in pusha jmp (bad) cmp scas xor aas popa and ret or insl daa cmp jmp sbb xor test pop push loopne mov mov dec rcrl ds jbe mov mov inc mov loopne cmp or or lahf ja xchg adc imul movsb std ds inc aad data16 inc or sub mov outsl lahf fcmovnb lret cmpsb addr16 or in pop sbb xor (bad) aaa sub rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and ret mov push daa mov sbb xor push mov fs popa lds cmp add mov dec dec repz scas dec push mov mov jle sbb jge outsl push fidiv sub imul mov ja pop xor inc int xor cmpsl push aam ret pop cs shlb adc sub cmpsb mov rol mov jne sub mov imul or test xor add mov aam jo push jl fwait sub xchg daa add sbb or sub scas push push pushf xchg mov ss sbb fs push cli in (bad) xchg ret int3 sbb pop pop cmp pop (bad) shrb sbb out iret inc in fs cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or negl std fs (bad) xor xor or mov lcall fs xor (bad) adc add adc jbe fisttpll inc fyl2xp1 pop sub xchg negb enter cmp sub and sub cmp je dec and popa idiv lods (bad) adc xchg dec andb inc pop adc mov mov (bad) xor in dec cmp xor incl xchg cmp mov test lods insl inc movsl cmp cltd xor insb pop xchg mov xchg dec repnz mov adc add cmp imul inc jae hlt hlt jle ret xor pop mov movsl dec gs in int (bad) pop outsb fwait xchg mov xorb outsl mov adc jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) mov sbb insl mov jp pop ja arpl je insb or mov int mov es sub push sub loop gs repnz repz test mov fsubl imul push stos stc jb adc mov out mov test cwtl rcrl cltd push outsl pop mov int3 jle rclb shlb mov dec icebp mov lea xchg xor push out mov mov mov mov or repnz add lcall cmpsb stc dec addr16 es sti pop mov movsl add cmpsl mov movsb (bad) fnstcw or lret stc stos pop or gs jmp push jnp rolb clc pop mov cmpsl push jnp fcomps stos loope hlt cmp jnp inc inc addl lock add out out add enter jo push push clc jle xchg dec lods stos (bad) fdivs mov xlat push add sub daa shlb nop xchg arpl pop xor xor pop dec push dec sub mov pop pop pop cmc add xlat (bad) das pop test mov stc xchg fstpt adc icebp jno push mov push jns dec popf mov jnp imul bound or push dec lds xor movsl icebp mov inc mov in inc xlat xor (bad) outsb and aaa push stos push push fldt mov data16 es popa lods jae stos xor outsl jmp xchg sbb push jge push jbe mov inc fimul sbb rol mov adc fistpl xchg pop push cwtl clc stos xchg (bad) insl inc mov push int jbe mov mov dec jno mov push push jge fstp mov aaa imul out in in in aam push push cld cld (bad) xchg dec sbbl sti dec xchg mov and insb lock repz pop inc pop mov mov and jnp sbb (bad) adc push jmp repnz push jmp mov rol lods and pop xchg inc (bad) seta mov mov loopne (bad) das jecxz jnp cltd sbb imul pop push stc arpl ret pop inc push test sahf lods adc push outsl pop divb pminub adc xor dec push cld pop or sbb or or jb add or popf jmp mov icebp pop cmp test sbb mov add repnz loope orb (bad) mov cli lods int xchg jbe push push jbe ljmp into ljmp mov cld and fildl leave add arpl call adc imul insb push push adc (bad) aad xlat xlat adc push jle xcrypt-cfb cmpsl movsb inc (bad) sbb mov lds js fstps push jecxz push (bad) stc or adc lahf adc mov cmp push out (bad) dec aam pop (bad) cmp insb jl add dec jae add sbb xchg scas push daa int3 xchg bound iret es movsl cmc pop decl ja push (bad) xor mov je mov out fisttp inc rcr adc or mov sbb push cmp mov xchg cmp divl fstp sub repnz repz inc inc lret pop pop mov gs (bad) cld es mov je adc xor out xchg pop pop xor jno xor xor and outsb sbb sbb and in inc aas xchg lcall aaa and mov div je cmp add setg loope cmc cmc mov cmp mov clc hlt mov lcall sti jle aaa daa xchg mov adc mov lcall jl fstl push rorl sub or (bad) sub xor dec outsb adc cmp jbe xchg dec es add jecxz insb sub mov mov cli cmp lahf popf sub int3 sbb mov aam push mov dec xor movups push hlt jmp lea mov rolb insb test imul cmpsb cmp cmp lock test ljmp xchg iret fsubs cld aad test sub add cmc fwait jmp cmpsb in mov ja jecxz add enter repnz cmpsl push es mov (bad) dec inc outsl (bad) in cmpsb and jp sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss aad cltd push jne and mov test iret (bad) adc adcw push xlat cli in lahf xchg cs movsb mov xlat push rcrl inc roll lods mov mov (bad) pop cwtl in jmp mov lret adc sbb sti adc cwtl rol mov push xorl jp dec and test int3 and je test frstor mov and sarl add pop in mov in add push rcrl push cmp imul subl mov jb cli adc xlat lcall pop aad xchg add or cltd dec js test arpl stc xlat daa into mov push push mov ja add xor cmp stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test adc or ret dec jns jle nop xor (bad) jb inc adc xchg adc lock jp jne pop push and push testb mov pushf xor xchg aad jecxz bound sub inc adc movsb mov dec gs jmp movb xchg sar and je ds jnp jbe adc fs (bad) inc jae mov ljmp sub insb sub mov push mov and ss or and and pop jle imul insb and inc test cli and mov lea gs (bad) cli pop sbb jae addr16 addr16 cmp lret leave aaa adc sarb es add sub mov add xchg clc push sbb loopne jnp in mov sbb jge outsl lret mov gs in lea and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb jo addl pop into in into lods push rorb adc pop mov lret add pop mov lods out int3 jecxz inc icebp hlt (bad) mov addr16 mov addr16 iret repnz xor out pop shrl xor lock and inc jo xor out push fidiv mov xor loop in mov fadds dec (bad) dec cmp sub xor cwtl test lock mov jnp sbb es xchg push aaa sbb or negl cmpl hlt sbb xchg insb sub inc cmpsb and inc outsl dec sub data16 inc mov jg je adc mov in mov daa stos sbb gs and insl jl mov sbb js das fcmovnbe lods hlt into or sub test ljmp dec push inc inc call shlb add sub fstpt sbb mov or inc inc dec dec xor jl xchg sub xchg scas dec enter jne sub out out cwtl inc aaa jne inc jns das les push and dec ja leave xchg daa test push xchg push cs nop (bad) faddl mov aas callw mov dec mov mov rcrb scas or int3 ds ljmp mov sti xor jae mov and sbb xor sahf pop sbb in (bad) mov stc cs pop dec push push cmpl inc fwait test and push sahf enter (bad) ds push mov mov cmp and (bad) into faddp sub outsl add lret nop dec xor push jne lret dec lahf (bad) loopne in lock (bad) shlb fild aad (bad) pop adc sub out mov fs loopne enter mov sub lods inc dec and pop push jnp xor mov or pop dec dec cmp arpl call adc imul insb push push adc fisub loope push sbb les mov notl lret adc jb fistpll shl jbe test jae push inc iret mov add xchg (bad) sti cmp jns inc fisttpll lods sbb inc sub xor sub jb dec cmp pop jae sarb in dec and movsb inc adc dec lahf lret add imul sarb lret hlt repnz lods pop mov dec or sub add das lret and xlat jns xchg push ret mov movzwl add aam int3 test int loop stos call xor cmp adc cmp in dec pop fstps cmpl roll lret movsb movsb fs mov xor cmp push add push clc mull shrl outsb cli mov ret fistpl daa pushf pushf cmp mov rcrl (bad) std mov inc bound dec fsubrl sti mov test scas outsb lods and xorb stos inc mov or or loope sub cli xorl adc cmpsl xchg repnz mov test jno add movsl jbe mov enter push fcoml dec inc in or fwait xchg (bad) and dec cli jno pusha push mov lea sub (bad) in ficom pushf movsb pushf adc ret daa mov pop pop movsl or es (bad) je jg aad pop xchg idivb iret pop or cmp pop ljmp movups sub movsb outsl shl pop ficomp fstl shr lock adc add (bad) je shlb loope pop into push loope aam inc xchg push fs and negl mov pop xchg sub sahf cmp popa (bad) xor out in (bad) push push push push and lods lods or jp sub mov out sbb xchg xchg and pop inc mov jle cmp sbb test xor enter insl icebp decb js pop sub pop popa inc (bad) push ret rclb int3 sbb sub aaa movsl mov jnp jbe adc addl repnz mov mov addb cmp dec adc pop adc pop aad pop cmpl xchg or test jne gs mov push cwtl pop das nop aaa xchg jl mov xchg jno (bad) jne dec les jl repnz jnp push push adc lods inc clc inc mov dec dec call bound nop jle int3 shll mulb addb aad inc jge pushf lret or add std sub dec pop inc mov dec or mov mov mov dec outsl xchg sub sub or pop mov sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or rolb push sbb push cmp ror pop aaa sti call aad xor sub stos or mov movsl enter dec jbe jbe mov hlt pop xor cmovl cmovns lods add and call jae out mov or pushf lock enter aas fcoml xor xchg mov push jle xor lret in imul adc stos sub fdivs out mov out scas or inc lods call and dec aad and cmp mov repnz sub enter pusha jbe and cmpsb or les (bad) inc add loop cmp int3 imul rcll gs and fimul lds lcall pop into mov xchg les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl notb iret fstp cmpsb cltd dec xchg or mov das jbe mov aad lds mov cltd mov imul xorl pop mov movsl push xchg sub out xor arpl cwtl cmp loopne mov test mov fmuls fcom int3 jnp xchg add cltd lahf push jns cmp scas xor push pop cli fnstcw insb insb push repnz sbb pushf sub xchg jno mov mov scas popf jge xchg shrl push add dec ss inc subb mov fisttpll xor push sbb mov gs (bad) xor jnp sub (bad) xor out int jl lret mov divb add arpl lods xchg mov push inc cmp or gs mov cltd mov out out add enter jo push push (bad) call shlb sub fstpt sbb mov mov js pop jno outsl cmp rorb notb pushf test shlb out cmp push cmp mov clc mov dec pop sub cmp das mov cmp cmpsl test fisttpll sti outsb sub ja shr dec mov (bad) leave mov jg jle movsl imulb xor in pop push push (bad) jb add sub (bad) ret cmp xchg outsb int jno push pop adc mov movsb xlat mov inc stos push clc mov adc adc fcompl xor lahf mov rcll push dec sbb push mov mov dec inc cmc sbb cmpsl rcr add mov js jne flds lahf mov addr16 mov cwtl cmp (bad) mov sbb pusha ja mov std in sbb push sub shl in in add aam push push cld cld (bad) xchg mov faddl sti fs outsb bound xor fwait xchg jo imul das mov mov enter nop add push adc inc adc xchg rcrl rclb out adc add jmp mov pusha (bad) push es add or mov sbb push xchg imul stos lcall out xor or lret (bad) lret data16 inc inc idiv and mov rcrl sbb fucomip sti xchg (bad) lock mov and sti jg je das adc xchg (bad) out sub mov or iret out inc shrb jmp (bad) jo xchg das dec add mov mov movsb push lcall sub push (bad) fidivr or dec inc out cmp inc aas xor dec pop cli pop int3 mov sbb imul mov fnop mov fs adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl test sbb or pop aad out mov popa lahf xor repnz sbb pop movsl add fwait pop add imul dec repz cmp mov test ret sub or and ss sub jae (bad) and mov lods es das loope sbb pop test cmp xor (bad) scas in cld add add jae push add aas fild fdivrs and scas sarb scas cmp out add pop mov js stos fs sbb inc ss xchg push mov in xor lea push push loope nop insl gs push cmp (bad) popa in shrl lcall loop mov mov in cmp repz outsb je push pop fwait out add pop add dec insl (bad) iret into jnp setg loope cmc cmc mov pop mov repnz ret dec dec push into cs lret mov or lret push jmp push insl scas adc decl pop aaa fsubrs xchg add pop adc (bad) mov push lods stos andl lds adc add add or inc or enter inc pop hlt cmpsl int3 sbb sbb sub jle mov (bad) lea xchg adc dec sub add add call mov fcompl xchg pop cmp pop test popa lret mov mov pop sub cmp in (bad) adc (bad) jne mov cld rorl lcall mov lret flds pusha movsl and cmp xchg jne pop inc stos xchg or mov insl test int3 sub mov jnp mov stos bound test std fistpl sub fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa call jns mov xchg in add ja dec sub pop iret in or movsb leave hlt push xchg jge stc lds push push popa in dec add sbb out cmp xlat insl jne daa inc jecxz lods adc push cmpsl (bad) (bad) mov pop inc int imul test test jae roll repnz sub sbb repnz and pop and ror pop mov jg (bad) psubsb mov or cld daa cmc add sub insl iret in mov xor out jl loope mov lods test jnp adc test add aad dec cmp test fsts in lods out (bad) lea mov add test sub or xor or sbb outsl xlat std pushf std in bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc sbbl xlat xor jp xor inc fwait movsb mov cli adc in testb sub pop orl mov fimul push mov mov scas pop inc das dec fsubr movsl stos xor fs inc sbb xchg xchg sub mov lods cmp inc insb stos popf add outsb mov popf dec popa je xchg (bad) out out sti fcomi je mov sub push mov mov jb clc test lret add loopne adc sarb imul or inc mov xor sbbl insl test je das and sbb mov adc out jae ljmp fs mov lock mov adc jmp cmp xchg cmpb sbb lcall in loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg cmp sahf cltd sbb jnp mov pop imul adc or leave clc aam sbb mov adc cmp pop xor cmp ds xor fldcw xchg shlb test sub popf push (bad) icebp subl in leave mov pop lock leave pop push mov push or pop and push loope test and cs shlb ja xchg mov out inc sarl dec lahf mov shl dec pop nop cltd mov and lock movsl icebp cld icebp push decl je dec add out je lret push inc pushl xor enter pop int sub xchg sahf scas mov aaa push cmpl mov jp or adc xlat iret in lahf inc lea inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call (bad) jnp mov loope pop jno cmc dec inc dec stos adc inc xchg clc lock mov dec loop,pt xor pop aas or add not into call xchg pop jp mov incb ljmp xchg mov in movsb jecxz lea pusha and ds dec and aas push (bad) or lret mov mov mov addr16 aas cld loopne add mov inc lcall jno sahf mov bound mov cmpsb sub daa dec mov imul fincstp pop pop sub outsl sub jle iret adc sti js jecxz test and daa (bad) push or mov mov jge xchg in sub add lods cmp test pusha stos scas mov insb insb push push adc (bad) ja xor mov xor ret leave leave ds mov and out add xchg ds (bad) adc lcall out mov je mov aas scas gs cmp popa sub or aam (bad) outsl scas push out lahf fstpl stc mov xor adc mov cmpsb outsb add dec mov int xlat and xor int3 gs add xchg ret mov daa test fisubl andb in jge dec inc xchg scas sub mov dec out mov sub test outsl lds xchg fildl xor pop sbb aam in dec pusha adc in cmpsb or cli sbb in mov inc and out bound push xor insl jmp test data16 (bad) xor (bad) and out loopne inc scas lret mov mov xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or cmp (bad) repz test xchg in lcall or cld lahf aad outsl sbb pop int3 mov xchg mov imul mov sub sub adc sub dec andnps outsl iret sbb jg fmul jne adc fimul fcomp sti fs js cmpl inc xchg push mov pop adc xchg enter pop or xchg xor mov cs (bad) stc test mov pop cmp lret movsb cmpsb sub cmp rorb dec pop ja shrb cwtl mov inc push mov push sub sub outsl lock xchg jg sub out push cmp ljmp lds js xchg mov outsl mov iret cmp adc jnp mov sub and push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov or loop xchg cmpsb inc or inc test pusha lock mov nop mov sti dec subl pop pushf movsl or nop mov jmp or stos addl sahf pop test in push das lret (bad) sub dec call mov (bad) movsb dec (bad) jbe push cmp pushf cmc shlb je outsb xchg jmp push push ds or push push movsl scas xor das mov aad lcall pop push insb jp jecxz xchg test (bad) fst rcr jmp mov cmpsb adc xor sub adcb imul bound pushf push or and push ja lahf iret jne lret inc cmp rcrb mov movsb cmp loopne sbb push dec mov sti outsb gs xor push adc cmc mov test fstps mov sbbl or sbb rol shll es data16 mov js in in lea iret and sbb repz jle in aaa sub test push sub pop bnd push jns and (bad) cmp inc xchg push lds mov adc inc div push gs cmp (bad) mov adc add fcmovnu or data16 mov inc ret aas es (bad) movsb (bad) (bad) inc inc dec push xlat sbb or ret (bad) (bad) pop jb (bad) subb fstpt adc jecxz cwtl jge xchg bound jl jb aad mov add sbb jmp jmp leave lahf adcb es jbe add pop push test daa addr16 push addr16 xor ljmp cli mov (bad) rclb and xchg rorb ffreep and scas pusha jo sub adc xchg addb dec cmp push pusha pusha lock add enter jo push (bad) call shlb pop inc add test mov cmp xchg enter or inc ds push inc mov xor iret fidivr (bad) sub clc push cli mov (bad) mov jno jno add xor pop jmp clc adc pop in insb lock gs cmp cmp insl mov out mov pop mov and (bad) int pop aad out fidivr mov and jg in mov mov add push lods xor push dec push jnp popa nop out mov push std cmp cmp iret lods mov adc or xchg xchg js lret (bad) fidivrl icebp iret sub (bad) int and out push pop cmp js repnz lods icebp push adc mov mov test jae (bad) (bad) mov cmpsl outsb in inc mov (bad) or inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test stc pushf movsl cmp push cld in inc cwtl add pop mov sbb adc stc mov fnsave mov jmp mov add sub shr lret sub repz repnz dec in clc jns loop lods jle std mov sbb cld fisubr add add dec jnp insb xchg jnp xchg pop adc push nop add stc fstl push dec pop mov mov dec add or fcmove dec sub js,pt ss test mov sbb mov push out fsubrl push movsb das ret and cmc movsl test mov push dec sahf arpl mov pusha dec iret push or or mov jle enter push mov cmp mov (bad) jne dec mov xchg nop cmp jmp mov fs outsb mov lret divl aad xlat adc (bad) gs daa pushf pushf cmp mov scas ret push push jnp test push cmpsb cmp push pop cmp add mov orl in sub dec xor and and (bad) mov stc cmp psubsw lea and mov jp add dec or jnp adc das enter dec test roll sahf dec out jl stos pop (bad) jo ja mov fcomi test mov jb ljmp in leave out push and mov mov pop sti divl mov pop sbb mov inc sub stos adc cmp lods out lds pop mov inc inc fstl or jmp loopne mov sarb out add add pop jo jo add fwait jl jnp pop xor (bad) adc lods or (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub (bad) cmpsl (bad) faddl or inc sub pusha fildll pop shll mov mov loop sti cld and hlt stos cmp adc xor subl cmpsb and push in cli mov push gs or ret sub stos lds pop fdivs es sub aam out fnstenv outsb ja mov jle lret jecxz lods sub dec lret loop push outsl add add or sbb int push mov imul xchg insb xor hlt clc je inc dec test test jb arpl in test add xchg push mov sbb nop test ds push adc testb fadds iret pop imul popf lea loop jp xor int rclb ffreep pushf frstor and hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec sub dec xchg popf sar mov loopne mov pop sub mov mov aas sub xchg jb push push sub cld addl out fistpl lahf mov or scas outsl cwtl mov mov push lahf in pop stos mov jmp sbb pushw lea sbb cmpsb dec xor cmp add and insl lret leave fcompl sub test pop mov push icebp inc rolb insb pop dec sub faddl roll mov lock or xor js and xor rcrl cs out nop leave stc push lret out lock divb loopne mov xchg fcom xor jp sub mov repnz pop aas jge clc cs jno scas dec pop mov add inc out lds xor sti es (bad) xor call pusha jg pop push dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov dec les pushf sarb mov push or ffree jge out and loop in dec or mov push lds mov fcomi mov lahf lods aad fidiv stos lea pushf stc scas push andl loopne cmp je out mov pushf fs mov mov push mov push xlat in mov repz pop pop (bad) addr16 xor in or add mov flds add addr16 mov push enter clc outsb or push aaa fs stos and outsb ds outsb inc cmpsb xor jbe mov jl daa or lea (bad) jp andl and mov sahf cmp jmp or cmp jae fwait int3 pop cmpsb stc cmp cmp imul mov lock add enter jo push (bad) call shlb sub fstpt sbb mov repnz idivb xor cmpsb jmp nop mov test sarl jl cmp test inc repnz sbb mov dec negb jns or xor pslld add out leave (bad) enter stos mov test mov or inc xchg xchg movsb sti enter dec xor aad (bad) cltd jnp ja stos cmp mov push inc push inc popf nop lods lahf pop mov push pop and jmp jb add dec (bad) sbb xor push das and es mov lods inc std cmp mov lods inc mov xchg fnop fld fwait (bad) pop sub je fidivrl int3 (bad) clc inc popa shrl mov in push jmp out pop into jmp pop arpl outsl push xchg fucomp xor in iret in in aam push push cld cld (bad) xchg mov faddl sti fs outsb (bad) cmpsl push outsl or sbb (bad) cmp je loopne fistp inc dec fs lahf repz adc or push test push pop or movsl or fldt fwait sbb jle xchg adc cmp jecxz cli outsb loop and rorb out (bad) fadds arpl xor iret sbb jbe add imul add sub mov pop push mov mov sub and (bad) jge inc stc push cmc add mov mov outsl cmp jnp inc (bad) cmp (bad) out sbbb sub sub fwait push pusha mov xor xor gs cld lds pusha ljmp jmp and cmp movsl ds xlat popf loop sbb pop lea gs cld cld lods outsb mov aaa shl test jl push jbe sbb scas pushf mov (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov mov ja xor aas outsl scas dec sbb imul dec add and int packuswb arpl (bad) mov sub adc fisubr mov test mov push scas rorl imulb push mov pop mov pause inc and fs rcrl mov mov aaa bound push dec enter jge lock cmc xchg mov xchg aam sbb mov or dec mov pushl cmp jl inc inc add ss and movsl jns aaa hlt push ret xor xor fisttpl push mov xor aad push jbe leave add xchg sub ffreep test dec loope (bad) popa pop xor push push cmp lods push or ret xchg movsl js cmp (bad) cmc cmc mov pop mov repnz ret dec dec push into cs lret mov mov xchg scas add stos loope xchg pop divl xchg out popf ret sub dec mov fcoml cmpb repz jg mov mov aam xor adc mov int3 ss ljmp call mov scas push das std test int andl int out add ret mov push adc xlat inc xchg ss repz ja or js xchg nop out inc into adc push or (bad) sub dec rorl jle,pn sub mov int mov stc shrl and shlb lock in and fcoms mov mov push mov dec sub scas cmp fild add popf gs aad out jno loope daa arpl push aam iret gs in add xor and jo sub inc lret (bad) hlt sbb dec rcrl push mov pop adc or out out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns fwait scas jno int3 dec sti call in aas cmp imul dec outsl leave sbb xchg cmp arpl aaa andl inc outsb add out outsl inc iret push (bad) mov add (bad) mov je out cmp lods mov (bad) imul daa ret mov ja push xor cmp lret into cwtl (bad) pop les inc xchg bound sub push mov pop es mov fidivr mov or int3 lock outsl push sub mov mov add hlt test xlat push xor stos (bad) adc lahf arpl sbb adc or aam xchg out incb cld pop fwait lahf shlb dec les jno jecxz scas or stos mov popf jo arpl movsl mov insl data16 jb adc (bad) les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl leave sbb frstor ds repnz jo fs aad adc (bad) jl and test and adc pop jmp jns dec into decl btc and mov adcb add push subl pop loop imul call or call and push outsl mov jo cmc es mov cld push sbb pop mov inc popf cwtl inc cltd adc scas xchg ja sub add in ljmp lods ficompl mov and pop pop call in cmp pop hlt ja pop lcall addr16 das mov cmp pop test lret xchg add rcll push xorb movsl cmp or xchg inc xor mov pop loop xchg adc inc jnp movsb push push push into into test mov (bad) pop pop xchg mov add aaa imul stc les add popf push cmp popa pop pop (bad) dec pop push pop ret sub inc lret mov ret pop xchg clc push xchg dec out mov popa arpl cltd pop aas lods inc aam dec (bad) or out sub sbb xchg das cli push test mov sub xchg in fadds imul jge,pn subl cmc dec sarb mov cmp int jnp scas dec cs mov push out movsl test lret stos stos ds dec jo cmpsb fdivs aam mov push adc mov add loop mov mov lea lods and out in fbstp lcall pop fldl2t subl popa push lcall lds stc (bad) cmc cmpsl pop lock out repz or or pusha shl bnd lret repz sub sahf fst lock fnstcw jnp in movsl movsl test dec cmp arpl call adc imul pop lcall out cltd dec mov xor pusha out cmpl adc std jb jle sarl stc imul jnp outsb pop mov mov fldenv hlt dec and (bad) stos ljmp cli arpl push lods push (bad) in dec mov lret lcall sahf mov faddl jbe imul dec outsb jb and gs fistl test std jg outsb in cmp or data16 pop in sub adc ret ret lds cmpsl dec into (bad) cmpsb jnp push mov mov mov les les or xlat mov pop mov inc (bad) xor mov sub es (bad) dec lea in adc std int3 jg push movsl mov cmp cmc scas fadd adc or xor mov xor ret leave leave ds jne divb cmp sbb test jmp lahf hlt lahf push cmp daa jns arpl sbb mov outsb jg cli fisttpll repz mov outsb subb xchg xchg fimull ljmp sbb popa xchg cmp jge test or pop inc mov dec add repnz add cmpsb sbb and imul xor sbb sbb xor popa mov dec push ss mov mov push leave and (bad) (bad) sahf daa pop repz mov pushf fisttpll push jne int (bad) sub pop int imul pop adc mov pop or ret pop rorb add mov add xor dec hlt xchg stc cmc dec aam aad pop adc cli xchg fisubl cmp clc (bad) xor lods sub dec (bad) imulb xor lods (bad) cld dec rcrl aas aas push push sbb (bad) rcll push and lods lods or jp sub mov jae pop cmp mov test fildll aaa (bad) outsb lock jge dec jmp movsb movsl cmp push addr16 in es int3 xchg mov (bad) lahf imul mov mov lahf imul or mov fwait in imul rorb ja stos sti sub pop dec nop cmp dec pop and into popa movsb inc imul adc xchg in mov sub push adc (bad) shrb xchg lret adc adc nop repnz and sub cmpsb mov sbb dec fs cmp or sbb out mov outsb out cmp test pop fwait in add xchg out into jecxz ret rsqrtps cmp gs push rorw nop inc (bad) ds lock pop test and out dec nop movsl fwait mov ficom addl int3 ss cli cli stos stos cltd cltd mov stos stos adc add pop jb xor xchg mov fbld adc enter std inc push addr16 out jns xchg shll xor jp add cwtl ret pop xor jnp fidiv pop mov xor mov inc add movsl and inc dec fstps (bad) idivl pop pop insl fidiv add xchg cmpsb out xor lods dec adc xor es xchg repz mov cwtl fldcw lock int3 outsl push cli pusha loopne arpl stos stc sub out (bad) cwtl push jae add sbb add idivb cmp mov nop inc and clc or loopne mov pop cmpsb and jno push ss mov outsl ja sti gs cmpsb mov jns subl rol shll es data16 mov js in in lea and movsl shll xchg mov mov mov mov dec jge mov scas icebp sub in sbb cmpsb mov jnp pop (bad) daa mov push sbb add (bad) mov xor and js lahf ret rep xor imul inc andb adc enter out inc pushf outsb mov mov cvttps2pi (bad) in or in daa mov push pushf (bad) (bad) jmp dec movsb sub (bad) fwait add (bad) psllw push or inc push aam xchg add scas dec adc aam cltd test je daa shrl adc cmp xor je aam dec call jne bound clc fwait out xor mov dec xchg arpl add stos pop (bad) (bad) cmp cmc mov out cmp (bad) sbb punpcklbw lock add enter jo push (bad) call shlb sub fstpt sbb mov pushf lret cwtl mov pop xor fidivr xchg and (bad) lock fs push inc xchg jmp push push sbb pop daa cwtl pop pusha out mov or int3 outsl mov mov mov or cmp mov insl loop shr fdivrp rcll lds out push dec jp jmp (bad) cmc jbe xchg das je cmp imul fbstp sbb popf hlt mov xor add pop fmull outsb mov adc pop mov pop cld adc out add pop in or jne sub out mov sbb add loopne or mov jb xor jmp addr16 mov mov jg and mov jne or outsb sub lret add cmp sti push aas fistp insl dec add movsl pushf scas loope movl sahf adc loopne inc sbb push sub dec xor jl sahf sahf jnp in add movsl movsl test dec cmp arpl call adc push daa xchg adc cmpsb pop (bad) xchg aad bound dec arpl add stos mov mov data16 movsl jb scas mov mov imulb mov es jno movsl push and cmp jae je add repz ret mov and lock mov test fdivs in sub dec jecxz hlt or mov arpl and cli leave cmp bound mov sub cltd inc adc insb or cmpsb in cmp ljmp out dec jp xlat test pop push push push xlat dec cmp cmp fdivr scas dec popf test push cmpsb gs jle ror sarl jge push xor mov sar repnz fwait dec jnp (bad) cmpsl fmul jae aas mov pop xchg inc addr16 push clc xor incl mov addb adc gs daa pushf pushf cmp mov rcrl (bad) mov cmpsl int lds pop xor jnp cmc fsubs aad cld jne imul pusha xor pop test mov ret mov push pop lahf and sub pop and outsl fadds mov cld cltd addb xor mov push rcrl push rcr mov lds lret stos jb ss mov push jo jo dec and push cmp cmp mov jp es mov jae das push mov ret aaa mov cld pop daa inc add push cmp js jmp cwtl sahf dec out cmp and push push mov call add movsb inc cmp pop pop push push push mov add repnz mov xchg dec in mov out emms lock pop aam dec nop xchg hlt adc movl data16 pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov out sbb js test and jge ljmp adcb mov mov rol data16 or test mov sub sbb sbbl or add lcall mov push pop or inc repnz mov (bad) imul push mov cmp out mov sbb dec sarl test lea push mov or mov pop fistpl pop and jp mov jmp xchg or aas mov lret sub xchg lahf arpl adc mov loopne xchg mov sbb lret add loopne cwtl in subl movsl jbe popf cmp call cmpb xlat push and (bad) rolb test ret mov cmp mov dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or mov rclb adc push xchg adc les add dec mov push inc test dec lret inc xor mov pushl ss adc mov aas sub xchg jmp push cli jecxz test pop mov jo pushf dec daa pop repz mov pop mov jge lret icebp jb jmp mov mov fsubrl pushf int mov add fdivs out jge js or cltd and add push cli add xor out push ret pop aam jns dec add fist pop aam dec insl mov adc fsubrs pop out and in push test dec mov out push btc xchg push addr16 xor popa iret cmp and fisttpl mov (bad) mov mov hlt popf test cmp loop cmp les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock mov fwait sbb loope repz mov jno idiv jns jle lahf adc and mov pop jae fcomps add push in add (bad) (bad) test cmpsl cltd mov ror call insl jle fs notl add out jge or test add push sub and test ret adc rorb nop dec cwtl mov mov dec ljmp xchg imul sti add (bad) push out mov mov fdivr fildl sub out negb cmp pop (bad) repnz xchg adc (bad) cmp iret cmp out mov xchg fcmovu pop sbb (bad) ljmp fnsaves mov xchg inc xchg outsl sub data16 fcoml bnd push (bad) call shlb sub fstpt sbb mov or inc inc inc cmp dec in mov mov mov in pop lcall cld cmpsl in sbbl stc mov xor mov in shll test sbb sahf mov (bad) into adc pop movsl iret (bad) push sbb in sbb sbb out fwait pushf cs mov xchg (bad) mov dec in adc pop cmpb push adc aam flds xchg shlb sbb mov xchg je icebp movsl sti push pop rcrl imul test (bad) int dec in jo sbbl repz in dec jbe xlat push inc les jge cmp dec adc dec dec addps mov cmp andl adc scas pop or xor test xor (bad) loopne push push mov test int3 jno cmpb cwtl pop (bad) data16 xchg mov faddl sti fs outsb mov lret lea loope dec pop ror in pop and jmp pop int3 push pop and jne mov lret (bad) ja test imul mov mov xor imull push or popf xlat ljmp hlt pusha in daa aam movsb scas imul test mov jmp mov and mov mov mov clc pushf xor inc mov mov or mov xlat xor mov test add lahf cmp mov xor fildll sbb cmp clc add xchg iret cld daa xchg sub jl repnz and and push push cs stos xlat popa cltd adc mov or ret mov in mov rolb inc inc cmp test mov cmpsl jae adc movsl ret lret inc lock mov add aaa cmpsb out add aad xor adcl pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg lds adc or hlt mov pop outsb jo push das xlat pusha lods movsl data16 mov arpl movsl mov cmp or scas loop or and rorl frstor arpl dec test cmpsl xchg test push or in sbb xor sub outsb out cmc icebp into lds mov mov lock push and sbb daa and in es xor push pop sub xor and jmp (bad) shrb fimull hlt inc mov and (bad) int3 add cli adc int dec mov sub mov mov (bad) bound inc inc or mov in imull cwtl repz std dec or notl inc cli push std and adc pop mov repnz ret dec dec push into cs lret mov mov hlt hlt icebp icebp stc stc loope mov add sbb cmp pop lret fs and mov sub push xchg out icebp mov int3 mov imul sub iret sbb xor out inc and ret and cmc aad mov pop (bad) sbb aad add mov cmp inc popa fwait pop cmp cmp aad dec jns or mov sbb cmpsl stc dec pop adc out and cs dec or mov pushf mov aam fsubrs inc inc inc add add fwait cmpsl sbb pop adc outsl mov fwait cmp in mov ja fisttpl mov push out mov xor sub stos outsb push std adc enter dec leave ret stc cmp sbb lret inc fimul scas rcll jle ljmp stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test loope jo leave push (bad) add mov data16 enter mov push mov add jl out pop leave push mov (bad) movsb stos adc pop xor shr inc cwtl cli and jmp ret jge mov in dec fisubrl vpsubb imul int3 mov js sbb shll aad ljmp dec sub movsl ja push les daa lds or fldenv mov sub in push inc lds in out pop adc add sahf sets pop mov fistpl data16 notb mov je mov ret out idivb push sbb insb (bad) xchg (bad) cmp out (bad) stc loope cmp and (bad) inc ror mov daa insl inc aaa sub (bad) icebp mov jp ret int in das in (bad) jmp xchg xchg fcmovu mov inc addl lock add inc fstpt test mov jne cmpsb repnz pop movsb cmp mov mov push sub sbb arpl pop (bad) and popa dec rcll fildl jbe stos add inc pop repnz call adc (bad) pop clc inc test lret cs aad cld jle (bad) (bad) and popf jg ss clc xor cmp notb mov adc rcl insl and add std out mov jbe aaa jge outsb mov int3 int3 xor js push loop cld xchg fs xlat inc push icebp pusha mov repz fucomi icebp aad mov cmp xor adc add pop add mov xor insb mov and jmp insl lret in fdivl outsl movsb xchg mov jns mov and jno aam adc mov js pushf movsl fidivr jb (bad) (bad) pop pop xchg mov aaa imul out in in in aam adc (bad) out clc xor xchg jo dec or hlt add lods xchg add mov aam mov sbb pop push out test pop mov int3 cli mov xor into sbb inc add sbb (bad) or xchg jbe xchg enter lds inc or out xor or arpl stos pop imul adc orl xor outsb (bad) repz add mov pop (bad) stos jg js loopne pushf fadds outsl arpl nop mov out popa push mov or shl and or lahf push add out popf inc push leave idivl dec pushf cld jle xor (bad) mov xchg movsb lret or imul lret inc jl repz sbb or sarl shrl je cmp add mov test dec cmp arpl call adc imul insb push push adc (bad) aad ret (bad) (bad) fcomp jp movsb das push push sahf out test cmp mov in cmc pop inc add inc and cltd mov add push add cmp cmp mov or sub lock push cmc mov insb (bad) out icebp add popf pop and pop in daa mov xchg test mov push push mov pusha inc jbe mov das inc jmp lea mov mov in pop test mov stos mov mov es pushf les int3 push subb push (bad) sbb sub cltd xor test xor dec pop repnz std out mov pushf outsb mov xor shrl (bad) mov out fnsave hlt adc imul and lods push xchg iret (bad) mov mov pushf jg or mov stos in fsts leave ds jne divb cmp pswapd loope cmc cmc mov or and cld imul cmp pop pop sub mov and xor insb or icebp cmc dec xchg rclb addr16 aam mov mov jmp lcall xchg xor gs mov vcvtdq2pd pop (bad) sbb push and test cmpsb cmc add aad dec fmul sub add adc (bad) scas (bad) jge sbb jp ja loopne dec mov jl enter je jl pop pop jmp rorl push aad outsb dec or sbb sti dec sbb jno scas repnz xchg ja mov jge movsl rorb ja inc jns jbe mov ljmp add pop jecxz sbb mov (bad) adc push adc dec popa (bad) jae lret jge xor cmpsl decb pop lahf out hlt fnop push and jp sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl (bad) pop jno and dec bound dec pop jbe mov cmp jne,pt add push (bad) test insb lret lahf bnd rcl je fcom movsb insl out mov xor xchg (bad) aaa addr16 es xchg sbb lret push sub push push xchg xchg mov mov jge mov je mov dec lret enter adc mov sbb loop pop and stos fistpll sar or pop mov lods movsl lods aad sub loope outsl adc arpl sti fxtract dec sub aad in mov test add push jmp sbb sub aam gs fwait dec sub sbb lret into push jmp adc dec adc jg push xchg mov loopne les mov adc dec in cmp mov inc imul cwtl cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test pop inc ljmp movsb xchg pop xchg jne mov (bad) lret mov es mov lret out xor (bad) leave mov mov or imul cmp mov sarl ror stc adc sub sahf or inc mov mov and push movsb push push icebp rcrl stos jp mov ret sub push push cmp fdiv and fstpl sti push mov fidivr xchg jo lahf adc mov les mov cmp dec xchg jg inc mov xchg fldenv dec (bad) repz cmp xor aam inc add shrb cmpsb mov (bad) push jge icebp dec pop shr cmpsl insl repz mov and xchg mov mov in (bad) dec adc popa insb xchg je sbb jne sub outsb stc mov lea and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb rolb sub or dec add mov ss jle lret or es mov pop gs mov repz pop jle dec adc push in pop mov pop mov inc js or push aam pop (bad) xchg mov jo sahf xchg pop pop dec mov rolb jg test and stos rcll inc lea mov or fs jp sbb adc pop sub xchg je lcall xor jp pop cmp mov sub lods popa jnp mov lods adc das jle push mov scas out mov jmp loop sahf inc lds insb xor cld or mov inc xchg sbb outsb (bad) (bad) jl mov icebp add pop jecxz pop or mov pop mov cs out mov xchg jnp ret mov (bad) or sub aaa dec jb outsb call shlb sub fstpt sbb mov or inc inc dec dec xor fcomps mov fimul popa lds pop popa (bad) mov xor xorl pop adc jne pushf add setl and das push popf aam flds sub push jle pop lea adc push dec rclb scas icebp lea (bad) pop mov in jo sub mov add push cmp mov mov lcall ss xchg push jbe jmp (bad) fwait xchg outsl vmaxps sti pop rcll subb jnp enter push sahf dec add out ljmp mov cmp and or in inc pop mov sbb add xchg leave push lret (bad) (bad) mov ja push inc cmp mov imul stc dec roll lock pop mov xor mov mov movsl test dec cmp arpl call adc imul insb push push adc (bad) ja xor and xchg negl js mov lock cwtl inc inc and dec enter je jge push addr16 xchg inc int3 jo jb pop pusha outsl sbb jno mov pop xchg shll negl stos jae rcrb je cmp mov test sbb scas (bad) xlat sahf dec add lahf dec fistp ffreep scas fwait gs mov adc pop push int3 mov push sahf loope addr16 cltd mulb jecxz push out xchg add xor xchg xchg xchg jb leave fs jne,pt call push (bad) jecxz lock lods fist jo push in jb mov movsb pusha pop cli mov leave les adc mov shll inc out push scas mov cmp jl xchg gs sub mov mov pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb ret test jnp dec sub loop shrl mov arpl cmpsb (bad) in adc aaa push lds add mov scas lret pop pop outsl stos fstps adc cltd daa nop jg loope xchg repnz loopne lea jg pop popf fidiv sub push test and xor scas add adc pop daa sub lret imul jo cmpsb adc push pop inc test sarl add mov jmp addr16 sahf jmp (bad) jb adc jge (bad) int3 gs push popa push pop sub sub xchg jne mov sbb cmp shr dec cmp out shll sbb xchg sub cmp mov dec shlb add mov mov sub int3 jno rol scas div (bad) mov stc (bad) sbb hlt sub xchg push xchg in cs or lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl jg mov pop stos icebp scas mov fild dec sbb or mov ja data16 stos lea andl repnz mov enter push (bad) mov jo push mul xchg in inc loope,pn lods or mull popa into dec mov mov sti xlat pop push jle insl jmp xlat inc push jno sbb add cmp jle cmpsb sbb jge push fimull jmp sbb sbb xlat iret (bad) sahf sbb mov xor rcr add decl nop (bad) stc repz (bad) out insl aas jbe inc inc add test xor clc and push (bad) mov cmpsb xchg mov add mov test sub push jno imul sbb sub dec mov dec push mov or jmp xchg dec dec jno mov or add rol shll es data16 (bad) mov push pop mov jge or movmskps jecxz ljmp sbb push push in out xchg dec scas push insb jo (bad) sub inc fisubl mov ja ret insb aaa pop add shrb subb push jnp cmc in aas add or inc xchg xor and movsl es mov jbe push adc or push test adc icebp jns xchg jp pop mov cli das jle push mov cld loop sub pop add in jmp ss jns jno push popa jp out stc lret and test cmp push sub jg or insl sub jno pop sbb addr16 or std adc leave sbb repnz inc mov dec ret lcall out je js xor mov in lods mov inc sub lret je mov xchg fcmovu mov inc addl lock add enter into add jmp aaa jg aas ss sti movsb (bad) pop outsl adc mov ret dec or in ljmp andl jo pop rolb ljmp int sub dec lret or iret fadd sub push xchg aad ja ret pop shlb shrb xor leave push insl push or test sub test mov arpl mov dec das insl add jae in ficomp out das xchg cmp sub inc nop cmp or popa jnp mov cltd mov cmp insb (bad) (bad) incb adc sub (bad) cmp stos in iret int3 adc add fildll adc push cmp mov inc leave xlat xchg push das out mov into into pop rcr js or sbb lock out sub cli mov mov jg sbb mov or inc inc add dec dec xor jl sahf sahf jnp push add sbb shlb xor xchg cld popf test push imul jl pop jmp ds sbb rol push and jns xchg (bad) outsb pop pop adc mov xor fildl mov mov push push add and pop fistp cmp sbb in jo,pn (bad) mov push lahf movsl rclb in mov into mov aas adc lods xchg mov loope idivb jge inc hlt inc dec ror mov in jecxz dec mov dec sub adc in adcb (bad) insl repz (bad) push push jne push stos sub push mov adc adc inc cltd addr16 movsb rorl cli dec aas dec notl ficompl lret jns push jnp sbb icebp jne jb dec call or shrl mov mov call les cmp (bad) add sti fs outsb mov lret divl aad xlat adc (bad) sub and test mov insl sub mov inc loop (bad) sub data16 std xchg mov jne insl xchg sbb add push popa out xchg add jmp mov icebp and or mov sbb ret dec leave add dec xor mov jle sbb lret lahf pushl sbb pop mov out cmc xchg jae sbb pop push gs dec mov hlt adc fdivrs dec into or (bad) loop lock sbb push jmp popa cs sahf lret jbe xor adc cltd mov dec cwtl je cmp jge orb cmp mov mov je dec in out daa scas jle sbb inc adc pop inc lods js fidiv icebp pop jecxz lds cmc ds icebp stc icebp pop data16 movsb (bad) inc ret inc cmp mov cmp outsl xchg stc pusha andl mov sub rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and jne mov fisub or mov or cmp inc xlat cmp scas mov adcl xchg sub xor or ss xchg add fnstsw (bad) add pop cmpb test bound ss xchg push repz dec arpl arpl push dec scas xor or or dec lret jmp or sbb popf in xor sub aad or dec and dec inc add pop dec std mov xor sar adc stc mov mov int3 in pop inc sub test (bad) pop xor fnsave int3 jne gs sub xchg insb mov push jmp mov jmp lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp mov lds addr16 insb cmc lods pop (bad) fdivrs mov in pop add ret xor (bad) xchg mov rclb sub mov push xchg adc sub xor or pushf pop xlat dec fidivr stc bound jmp (bad) jmp push jle in test rorl lods mov in sbb adc fsubrp fdivp repnz jne pop mov arpl pushf xchg aaa adc add push pop push imul dec lods stos (bad) jnp dec push call addr16 pop push jmp sub pushf add xchg push inc fbstp inc into mov lds adc xchg jns add jg jae or outsl mov loope jae (bad) out gs sarl jne pop push dec inc sub stos cltd xor scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fwait rorl inc xor scas out push sbb rclb fist dec mov test repz nop popf push pop or lods (bad) mov in jmp cmp xor mov sti stos dec sub mov cmpsl mov cmc pushf add fwait xchg test ljmp daa xor stc sbb pop jbe push mov cmpsl test inc pop imul dec and orl (bad) repnz adc imul and in mov mov add add sub mov cltd loope in sbb xor psubusw add (bad) popf lret and sbb (bad) xor mov outsl loop add push (bad) sbb insb jg icebp loope mov test (bad) mov das push cld sub fldl aaa push and std pop cmc cmc add scas testl sbb in lods lods push push pusha pusha lock add enter jo push (bad) call shlb lcall add cs cmpsb and xchg xchg push or mov int3 inc jo add test add aam add pop fistl inc sarb subl (bad) lds sub pop pop cmp aaa xor neg daa jnp addr16 ret jnp mov out test aam add xchg shlb xor push mov mov jle mov (bad) jne push jne cmp push in or jp sarb xchg leave mov and jnp outsl xor ljmp popf les mov inc push or and das aad int dec repz push rcr dec push aam mov gs into sti cmp push into cmp outsb and mov stos lahf mov sub aaa imul out in in in aam push push cld cld (bad) xchg mov faddl lahf idivl dec das icebp stos lcall mov mov clc cmp int (bad) mov ja and mov dec mov and out mov je (bad) jmp inc mov lcall daa mov pop lret mov out (bad) sbb mov add add enter movsb lods xor inc loop mov adc sbb call dec jns movb rcrl mov push mov jg xor pop lret cmp sub outsb pop sti loope sub push call out mov pop push icebp es inc sahf imul jmp sti mov nop lea cmp je addr16 (bad) pushl mov push adc cmc lods push pushf imul aas lret stos (bad) repz jge mov mov add add das rcr dec (bad) stos push and lds pop clc clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp fild and movsl xor imul outsb pop bound cli mov js repz jno add adc bound xchg sub cwtl mov (bad) xor sbb sahf insl mov out xchg pusha loope cmp cmp lcall jne sbb ret out adc in xor hlt and stos jecxz out pushf mov int push add loopne popa push shr or xor mov into hlt lods insl aas lea sub hlt sub pushf lcall dec dec cltd dec test test dec and fs xchg mov xor mov or dec nop pop mov (bad) frstor sub imul loop,pt imul icebp mov leave sub sarl mov pop loop mov movsl jl sub pop leave jle mov pop pop add pswapd loope cmc cmc mov pop mov repnz xchg dec aas sahf jl sahf mov test push mov mov stos xchg decl fildll sbb jg (bad) outsl xchg dec push jg movsl aam mov popa imul xchg test call push mov ret clc movsb xor adc imul or movntps xlat movsb movsl or leave pop dec or movsb daa rcr push cmp sub int3 je xor xchg xor enter mov jne xchg mov mov arpl inc out mov lds and dec out adc mov pop orl inc fwait push pop push pop cmp mov cmp jp addr16 jle xchg ja movsb or inc push mov mov sub stc jg mov fs dec or out sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli test push js add jle adc xchg and out test or repz lahf shrb (bad) sub cmc inc popa jle inc aad imul std xorl add jmp mov stos xor or (bad) aas mov and (bad) dec repz add jns sbb dec xchg cmp mov stos cmpsb cmp stos or xchg pop add dec dec les lock push in xchg jmp mov adc rorb leave sarb cwtl dec xor push push xchg sahf lods movsl les cmp cmp mov fmul and push sbb add es mov shll int jb ljmp loope or int cmpl push cmp sbb cmp shlb xchg enter xor dec dec rorb cmp popa xor jno in jl cmpsl dec lods out lahf sub stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or add sub cld mov add or out sub mov sub mov pop int add stos pop and inc outsl sbb popa popa loop neg xchg imull adc sub push push insl xchg fwait icebp xchg adc inc mov lods pop lock jnp stc fisub mov daa jnp test mov cmc lock push pop outsb mov pop pop ljmp or out jp sub in test inc inc mov inc lcall fnstenv pop aad jp adc movsl lahf inc inc nop cld ja enter or jl (bad) or cmp int jecxz jmp push andl dec add mov xor xchg xlat out mov popa mov shll add lds jl cwtl or movb in mov iret loopne jbe shll repz and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test loope lret adc and jno xchg in push lret lods out inc les or icebp mov push push scas repnz es or clc mov or notb lcall inc out cmp push mov test mov icebp pop jmp cmp sub xchg xchg mov and (bad) faddp cmp aam hlt xor mov repnz jge popf and rorl or add cmp sbb out imul and mov or pop mov fstpl nop fstp in push mov push test cmpsl or mov testb push cmp in arpl sub les test loop clc imul leave jbe mov jbe gs sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp in xor lahf insl add loop sub daa cmp jge jg hlt or test addl rorb cmp cltd inc scas jne loop andl jge add repz test int jno mov adc (bad) push call out lea dec and xor loopne loopne pusha adc popf adc xor orl test movsb fistpll adc mov hlt pop outsb out inc leave or cld imul and pusha cmp xor push adc jp stc rclb push xor xchg repnz pop pop pmuludq adc jo pop test jl xor xlat enter mov les jno push sbb call sub call ret imul insb push push adc (bad) ja xor mov xor xor mov push dec out loope je outsb push ja cmp push pop jecxz mov repz pop or mov je lock or mov cmp add cmpsb lock pop fidivrl xchg cmp xlat rorl out imul andl sub jp adc push push mov cmp and sub mov add jecxz cmpb int3 mov sbb std xchg or (bad) xchg xor rorl cmpl out jno push movsb adc js cmp jge mov (bad) push xchg or popf addr16 in push cmp sub and popa testb fdivrs mov sub out dec mov div insl add add push in mov jmp cmp jge or mov sub rcl cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rorl pushf ss fwait pop cmpsl aam stos adc push adc sub jge les push popa mov cmpsl sbb jle jle lret call aam test cli xchg pop sti jb jno fdivs jb lret icebp inc out inc leave and jge push push mov mov (bad) movl out mov fnstenv shrl loop ficom repz hlt mov insb dec jnp fsub inc and sub jnp jp and add sbb sub pop cmc mov sbb inc das popf jbe cmp int sub mov popa sbb int add cmp scas pop jb arpl fild add jmp pusha jnp jecxz inc adc fwait jne loop jle push and mov call pop cmp (bad) pop jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 ss mov xchg repnz mov add mov xchg push lods movsl popa andl popf loop ljmp icebp xor je add test insb inc daa orb jb and cli je rcrb add inc cs popa xchg inc mov imul sub dec lds aad push out mov xorl shlb subl imul xchg ret mov loopne jbe,pn ret in add fbstp fwait mov data16 inc int xchg add lahf imul push sub push xor lock ret fildl xor mov dec gs adc xchg lea lods iret insb gs mov bound mov pop inc aam xchg or stc push test out mov cmc paddsw pop popa jmp dec dec jno mov or add rol shll es gs jno inc aam stc xchg and lret and cmpsl (bad) mov pushf jns mov mov dec xchg sub decl push add rorb dec pop test xor pop add jbe scas hlt inc sbb dec daa mov jnp pop push sub cmp adc out ljmp scas jb or outsb in cltd daa pop inc movsb fs stos in stc aas in push sbb lret and test push jge jg sub lret cli xor push fcompl out mov (bad) aad shlb aam cmp jne,pt test add ficoml into pop in cld mov in cmp add dec sub push ds mov add popa ds (bad) jbe in add add movsl push cmp daa push movsl push (bad) jmp xchg xchg fcmovu mov inc addl lock add xchg sarb das sub jmp cmp jge sub out cmp int3 subps sbb test dec rcrb pushf sub in in push lods sub pusha icebp les sub nop aam mov call aaa mov mov in in stos lret jbe mov lret rolb (bad) add fwait mov or push (bad) and icebp aaa outsl imul pop pop sbb cmp push scas fstpl add lea sub mov pop adc imul mov mov or cwtl pop xor (bad) out leave fs xchg in or lahf cltd (bad) rcll jl into aaa mov je leave push adc test shrl test and andl cs add aaa fdivl call cmp sub pop sub pop pop shlb sub fstpt sbb mov or inc inc dec dec xor jl (bad) pop leave pop sub cli pop in adc xchg loope mov sub (bad) sbb xchg adc faddl mov (bad) test fwait ret daa dec xchg jle dec mov xor mov iret insb aad mov decl jmp and jno imul test pop mov pop outsl mov leave push xchg test bound popa and and pop (bad) mov lea je bswap mov mov ljmp mov cmp sar lods sub lcall inc xchg faddl mov mov add mov rcrb cmp inc dec xchg push pusha call adc fwait cld (bad) popf sbb into cmpsl inc cmpsb pop and mov call dec pop stc sahf (bad) xor mov outsb dec addr16 mov faddl sti fs outsb mov lret divl sub shrl shrl insl pop rcrl int3 ja jmp movsl sbb mov jle jle jns aaa mov xchg xor push push lock lods pusha jmp imull cmp scas enter nop or hlt pop call popf (bad) aaa jns in bound les push mov dec js jnp add push mov jecxz (bad) jae dec fcomi jne call arpl or (bad) push (bad) mov mov out and es xchg outsl fisttp cmp aad jle push das xlat imul int3 xor das xchg repz push inc clc or jmp jecxz ljmp push sub push into sbb cltd cwtl in imul jne sub sub ret mov jne inc jns mov test (bad) pop inc sti cltd pop pop lahf pushf sub pop gs daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop lret jp stc inc cmp js mov mov mov sub pop das ds aam dec pop jnp inc xor cli push mov inc push subl xorl imul dec push jnp cli xchg inc daa insl push mov lcall lahf pushf mov add in xor (bad) rol sub ficom lds aad lods icebp mov leave aad mov ret pop in inc jmp bound movsb (bad) push jo,pt call xlat icebp test loop mov sbb aad jge adc inc lea pop lods mov or stc icebp stos loop mov (bad) (bad) loope sub xchg add sarb ljmp add sbb jmp (bad) sub sub xchg arpl pop cwtl insl xchg (bad) cmc jbe cmpsl mov repnz ret dec dec push into cs lret mov mov hlt hlt icebp icebp stc stc loope xor jne adc xchg push cmc fcoml push lret frstor repz sbb fnop push aas int3 inc imul lods std rcrb ljmp push mov out out fs fbstp sbb push mov mov fstps daa imul ja jmp lds push sbb aas loope xor dec dec sbb inc inc mov (bad) adc push xchg enter fs cmp inc xchg adc fistl cmp (bad) and mov mov push cmp shll sbb int3 cmp aad inc pop sub stc xchg xor int3 lea push pop fildll cmp push loope lcall jmp jg push xchg mov std das jb pop stc mov stos add sbb inc xchg clc xor mov in sarb push hlt fild cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound lods leave sub xorb push cmpsb pusha pop cmc mov xor std add es (bad) mov sbb xchg xchg (bad) das ret xor testl jg xchg inc mov shrl dec fdivl mov pop mov cmp daa cmp or push cmp xchg xchg sbb cltd icebp jle cmp add jns pop or (bad) mov aam jo (bad) aaa jge mov and adc xchg mov pop and in adc add arpl cmp lret mov inc mov sub dec mov xor lahf dec (bad) (bad) and or xor sbb arpl daa bound ja stc shlb (bad) and vaddps jne mov mov xchg sahf jl (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock das push push mov imulb mov mov xlat jb sub add jno push ficomp data16 and xor (bad) jae scas ss pop scas rcrb jl ret (bad) cmp push insl add cmpsl mov gs or and and or dec xlat in adc cmp dec mov (bad) mov sub and (bad) jnp out xor hlt gs jns dec ljmp stos xchg clc pop mov inc pop xor fsubr push insb sbb into (bad) repnz pusha lret insb mov mov ficomp sahf popf aas and mov mov sbb stos in add jecxz jecxz fs push out cld test daa mov in stos ss int sbb jle ds lods ror into test mov (bad) pop pop xchg mov aaa imul out xchg push popf mov cli sub shl ret jp and xchg pop in (bad) loope pop xlat dec lret sti stos inc mulb testl dec int3 dec leave xor nop push adc jne jl test push jge xchg sbb jmp push xchg adc in xchg or addr16 repz stos cmp into push sahf pop (bad) fcomps push sub dec inc mov jns lcall (bad) xor xchg sbb lret popf lods out icebp sbb cmc mov cwtl stc add fmul daa mov in std push sbbl xor popf mov xchg jg push mov clc sbb movsl adc lods sbb adc cwtl sub cmp insl shr fisubr sbb push sub fistpll inc in lcall adc ja lret sbb add dec daa call in movsl movsl test dec cmp arpl call adc imul insb push push mov mov fcmovbe xchg push es mov push mov jae cs into adc xchg jae xchg jae je or dec sti ds (bad) push mov mov dec mov mov test shl dec popf in adc aaa push lds add dec ret mov aam shl or sarb ljmp sbb ret lret fsub or add push xchg jbe or xor nop sbb sub cmp (bad) dec xor pop fsubrl (bad) xor cmp pop test mov mov push shrb xor fwait insl jmp fcmovu lods ret jb test ljmp ret rcl sbb inc bound jo pop sahf jmp sub test (bad) jbe roll pop jno fnsave mov sbb ljmp jns rcrb pop adc movsl stos out xor mov xor ret ret leave leave ds jne divb cmp (bad) setg out mull inc leave cmp loopne mov sub (bad) jae xor xchg ret sbb push jecxz sub inc xchg push xchg cld test cmc fisub mov push repz fisttp fwait imul arpl mov adc icebp dec sti mov test imul mov scas fs outsb aaa mov dec inc xor cltd and testb aaa ljmp mov ss adc add jbe mov dec jbe cmpsb lds jl frstor jp adc aas outsb popf fwait pop ljmp fsubr stos loope stos inc pop dec jecxz lea or sbb or ret jns jbe dec or jno mov xchg cwtl cmpsl mov lods jne mov jle fnstcw adc sbb (bad) push push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg sub push inc jge add xchg xchg fnstcw push fldenv sbbb arpl push xor dec test xchg stos test fidivl es and pushl ret arpl in pop xor mov nop out push xor mov outsb fcmovnbe testb inc dec pushf add add cmp jo out call lods lret cmc mov xchg clc fcmovne mov (bad) cmpsl idivl mov and add add inc lds sub cmpsb insl inc ret ljmp push icebp rcll and sarl mov pop stos mov sbb mov xor cmpsb jae jmp aas jg dec xchg push in lret or and cmp or (bad) notl push dec mov cmp call mov cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test mov repnz stos out enter ljmpw pusha addr16 dec mov mov hlt xor (bad) stos mov enter test sti lock and movsb push aaa je das (bad) dec nop add sbb adc in sub push rcrb andl jnp lods cmp cltd add pushf out ret es push inc mov ljmp mov dec cmc lahf bnd mov cmpl imul mov adc adc lods adc mov push je aas shll in mov cmp sbb push pop addr16 pop lahf cmp sbb pop repnz das inc jmp cli shrl imul cmpsb and dec dec popf mov std xor jge mov outsl pusha sbb xchg lods mov std mov js in lea and movsl movsl and in in or mov add xchg xchg loop scas scas cli and adcl or pop cmp cwtl jle movsl push add fdivl inc jp xchg adc sub push jno popa daa mov pop sbb (bad) insl loopne inc into int3 divl sub mov and std popf xor lcall and xlat jl popf scas push jmp lret test test fcomi push in push push out cmpsb mov sbb js iret fidivl xchg mov xchg hlt insb inc jle (bad) jmp call or ljmp pushf scas lret test jns aaa or xor pop hlt jae fwait pop sbb loopne (bad) fsub mov or jp or notl xchg lcall or lret (bad) jbe adc (bad) notb mov pop in pop jo scas xchg push ljmp xor or sub push xor xor sbb dec push push (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor jl mov add add add mov addr16 pop pushw sub data16 sub xor xchg mov movsb iret push pushf rcl xor je xchg xlat ret sbb pop dec test or subl (bad) cmpsb into pop (bad) and leave jp int3 xchg sbb or stos aas xlat dec jle sbb add jno in pop out pop or test mull ror imul insb arpl cli xor push push mov xlat aaa jae and sbb jge mov fsubrl loope fadds fildl jl cltd test divb daa push movntps cwtl leave inc stos out xor (bad) adc mov dec pop cld pop adc popf addr16 inc daa stc int adc or test mov jno and mov xor mov into icebp rcrl enter pop dec dec cmp arpl call adc imul insb push push adc (bad) add xlat xchg pop push outsl dec mov xchg xchg jno push aad xor or lret inc sbb sbb jbe dec test xchg idivb std js push out test inc fwait pop and lret cmp pop cli cltd or pop call mov dec inc lahf mov out int lock add lods jle or jno ss adc out mov pop cmpb clc shrl stos out xor and sbb dec adc xlat pop mov xchg test mov xchg xor fidivr mov pushf pop or daa sbb mov js xor stc dec mov stc orb dec notb pop and or daa daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb cmc mov and mov mov cmp dec mov clc shrl into push std arpl outsb test dec sub (bad) movsl xor test pop pop adc rep push jae jns and sbb es movsl fisttpl add loop xor sub test ja mov inc cmp test sub pop cmp data16 adc in data16 jle je lahf xorl sbb (bad) jp test add pop inc enter jnp repz jo cs fldenv add inc sbb cmp imul call out mov adc arpl dec cmp test push mov push cld ljmp xor pop sbb scas pop jl lret dec sbb dec icebp mov lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl pop inc dec out fildll mov and ja cmp mov and in or and mov pop adc ret sarl (bad) pop inc dec in sub shlb sti mov ret jno cmp lcall lahf in mov movsb adc sub xchg xchg add mov push xchg lods adc jae imul mov std xor je sti sbbl test push dec mov push jbe iretw add jle cs dec call int3 mov jmp push adc fisttpll stos lcall xor sub es adc mov adc fdivrs fucomp dec out jbe push mov cmp orl inc add stos fcmovne outsl dec cmp or jl xor xchg or sub or div jmp xchg dec dec jno mov or add rol shll mov pop bnd div stos imul pop leave aam stc fs fwait mov (bad) iret into (bad) stc cmpl add xor (bad) fs push std int3 shlb push imul (bad) out fidivr mov mov ret cltd movsl xor pop cmp jle push cmpsb test loop and hlt lret imul lds fbld xchg mov add push adc lret inc mov fdivrl je cmpsb or lock lcall jmp out jnp inc lcall mov aam test cmp clc and push adc fcoml or push out aas addr16 aad movb ss inc hlt mov lret je push sbb and ds sti cmpsl outsb sbb xchg outsl dec jbe adc (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock imul popa movsb mov pop pusha outsl ficomp xor aam xor out push stos sbb loopne lock sbb mov jbe sub sbb push xor fidivr fdiv pop in cli mov xchg mov popf inc cmpsb sar and outsb test mov (bad) ss and inc xchg pusha and jecxz rolb ficomp cmpsl cmp pop es test pop dec jo or imul pop ja sbb pop aaa outsl or pop cltd nop repz scas mov rcrl (bad) roll sub pop roll popf inc js subl pop push aas andb and add scas mov loopne out xor dec jae enter xchg add je push in jo pop cmp mov push popf sahf outsl (bad) pop cmp mov rcl mov sub fstpt sbb mov or inc inc dec mov jge sti sbb cmpl or gs std cmpsb negb sub sub mov clc cmpsb cmp jns das push pop mov pop sbb movsl dec mov jp arpl imull fnop cmc cwtl imul lea dec xor out bound insb iret mov pop stos cmp pop (bad) aaa pop xor outsl mov or (bad) nop xlat je mov add add mov push mov movsb adc (bad) adc dec ljmp mov mov add outsb stos push insl popa push je push mov mov cmpl mov mov jecxz ja movb popa cmp pop dec movsl mov or xor sbb jl mov push les fisttp outsl push add stos jge lea mov faddl sti fs outsb add mov lret into mov sub mov dec mov and push and lret sbb int pop mov jge bound mov xchg mov dec test xlat xor jge fistpll ret aaa test lods (bad) neg insb jge in or cmp adc rorb insb jnp cli cmp dec mov adc fimull or xchg adc (bad) or pop push dec push mov add inc in push mov mov add test rorl cmp add notl jg sarb (bad) fwait push jecxz sahf mov das movsl lahf fcomip xchg jg movsb rclb movsl mov inc pop jmp jmp mov mov insl roll mov pop pop out jne stos fs mov (bad) xor fstl ja and adc gs daa pushf pushf cmp mov rcrl (bad) std mov inc int3 pop sub jmp mov icebp adc pusha loopne test mov add stc jl or stos or adcl pop imul xchg xchg mov frstor mov sub and add mov pop sub jb xor sbb add cltd pop (bad) push cmp or cmpsl jp test sub fmul and icebp mov mov (bad) mov and cmp loope aam xlat (bad) out xchg cmpsb dec xchg out outsb fcmovnbe xor inc push subl mov insb mov add inc sti das push fstp mov hlt jb ret sti push sub jo pushf xchg xor xchg mov std cwtl or push enter ja ljmp pop mov stos pusha faddl test nop pop mov jge mov dec mov nop ss pop mov repnz ret dec dec push into cs lret mov mov hlt hlt mov sub clc mov adc push push addl repz inc or addl (bad) cmc push mov jg div in (bad) mov mov or mov jns mov add jae loopne ds in sbb stos mov scas out push int dec push xor sti loope pop dec cmp inc call call and stos pop pushf push loope ljmp (bad) adc imul fnstenv add cld sub jecxz add add aaa mov inc mov (bad) xchg mov shrb outsl cmpsb out xchg insl mov pop mov rcrb cmc cs or xlat mov mov repnz and fcmove int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound add push sbb mov push iret scas stos sarl out sub daa lret jo jo (bad) jo push pusha in cli (bad) push fdivs (bad) icebp adc test or aaa in cs mov pop sarb pop ss mov fs jge mov mov mov cmp mov xchg cmpsl inc jl sbb mov hlt adc test pushf les les getsec aam sbb pop add jmp loope push fbld adc hlt xchg sub mov cmpsb sti jl hlt push adc push (bad) pop daa push stos sbb stos or xchg ljmp cmpsl jp dec jl dec jns hlt xchg inc adc jle jmp and jne mov lcall into (bad) fdivl adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock outsb lret or sub xor imul jnp lahf fnsave inc xchg mov pop jl xlat xchg orl outsb pusha lret push push fild into imul fiadd and cmc jae cmp mov pushw jge in mov add add pusha in jge icebp mov lds inc cmpsb jmp sbb cs (bad) js leave jno arpl lea add aad insb punpckhdq mov rclb stc mov add add lret mov not inc ss cltd ljmp inc and pop pop int pop add inc rcrb pop mov sbb aaa fwait outsl aas stos or lea (bad) push sub xchg sub scas stos pop mov test or into test mov (bad) pop pop xchg mov aaa imul out in in in rclb sub and pop jge cmpsb mov sbb push jno sub popa xor fwait int sbb and sub mov mov xchg leave push or pop lock popa (bad) jmp adcb fild mov fisubl mov jecxz adc inc xor and (bad) jge cmpsl or mov jns fsubs scas lahf in je icebp jne shr lea add pop pop dec dec xchg inc adc call xor jns ljmp popa outsb and test mov push loope inc stos or adc ficompl jmp push test push mov inc (bad) sub lods sub fwait cmpsl into icebp lods rclb adc rorb xchg rcll stos movsl dec cwtl xor (bad) and jle stos cmpsl fsubrs sbb lods mov pop movsl movsl test dec cmp arpl call adc imul insb push push adc (bad) aad jo,pn out sub out pop (bad) cli loop jge les push arpl cvtdq2ps sahf fisub cmp imul or push dec push sub inc stos add stos call mov addr16 aad push pop outsb mov xchg add iret jmp (bad) jecxz cmp sbb jp frstor ficompl xchg in hlt test dec jp (bad) into fs push insl ja pop sbb in sbb add or mov (bad) cmpsl sbb xor mov adc xchg add mov iret pop dec stos addr16 lcall lcall adc sbb lret mov inc movsb cwtl jecxz es mov dec mov lds fdivl dec xchg mov ss and add icebp int3 leave leave ds jne divb cmp pswapd loope cmc cmc mov jnp ljmp loope cli test add lods xchg xchg push loope movsl xor jl int (bad) shrl add lea data16 mull imul adc mov jecxz in punpckhbw inc xchg push sbb das cmpsb mov (bad) enter mov repz push pop cmp push pop xor cltd testb add inc lea (bad) adc stos aam pop jg stc out (bad) cmp cmc push or jnp xchg sub push pop fxch push mov leave ss ljmp in jno inc inc inc sub jne mov ret push inc mov jge jno cmp out scas orl xor cli mov outsb jns push cmp insl push loopne aaa inc (bad) mov mov out test and and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl jmp (bad) aas sbb jnp (bad) mov mov cmp out jbe lea jno and fisttp mov mov sbb cmp inc fcoms cmp ret inc cld aas std dec push fbstp outsl push (bad) fs mov fsubr lcall sarb addr16 dec add stos cli add andl jge in push fs aas adc fs fs jp adc (bad) jmp into inc int3 xchg bound push adc dec int fbstp mul mov adc or std fldl js sub add outsl sbb out push (bad) push jo xor inc lock sbb fucomp or incb pushf test faddl dec jp jmp mov xchg testb sar stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound mov and pop cmp pop lds push imul mov js daa rcl mov inc mov daa pop daa fisubrl iret mov dec add (bad) in (bad) mov inc lods push pop pusha and adc or out cmp bound mov fucomi and mov movb sbb dec push fldcw ret out mov push dec (bad) cmp mov sbb jnp and sbb cli lock leave out std lret cwtl dec add unpckhps test or cmp (bad) stos mov mov cwtl sub inc xlat cmp popa mov outsl fstps inc xchg pop push popf mov jae test out sbb jnp mov and pop mov (bad) mov loopne mov js in in lea and movsl movsl and in in or mov add xchg xchg loop sbb push mov pop (bad) sbb test insb (bad) imul movsl stos arpl ss xor cli adc pop mov or xor test jle les cmp sub std mov pop pop pop loopne cmp sti adc cmp push cmc std ss aas (bad) push insb pop mov adc jns jns adc pop in rcr rolb pop mov dec data16 push inc mov fistpll xor ljmp fdivrl es nop xchg (bad) notb and push push jge push adc sahf push add xchg or sbb mov fdivr push cmc je nop faddl into or mov or insb or add iret lcall sbb pop test (bad) aad add push xchg stos and dec mov mov cmp hlt pop add fstpl fisttpl addl jo push push (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor (bad) outsb ficompl in cli xor (bad) shll clc iret mov push sub mov xor sar stc jno or mov in jb in pop ja cmp (bad) div cmp mov inc fchs or dec or push and sub popa dec aas repz bound scas mov iret jmp dec sbb lods inc rclb sub flds add sti push test cld adc xor sub dec in jno push dec mov pop dec stos int3 in sub add pop inc dec xchg mov mov mov pop mov pushl sbb test movsb mov ret adc inc dec pop insl repz sbb (bad) int3 and ret pushf cmp mov mulb movsl test dec cmp arpl call adc imul insb push push adc (bad) ja xor js mov jae pop hlt jmp es xchg jbe or mov aad jl add xchg push (bad) add (bad) sub pop insl sbb mov jbe pop outsb int3 cmp mov push mov ret mov mov repnz jnp cmp pop in lcall fidivr test lret dec stos xlat imul xchg jb mov sbb dec leave jno mov ja enter xor vrcpss jmp (bad) push scas cld test mov (bad) cltd mov aam pop dec or xor fldenv xor mov push inc loopne mov pusha imul jp lods and lods sbb pop aaa sbb xchg and or pop (bad) pop and mov mov jmp add add push arpl call daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb vpcmpgtd arpl pop mov mov andl fnop frstor pop in mov test cltd mov mov int push adc test push and push xor adc adc pop add xchg push mov in xchg dec sbb fdivrs sub pop addr16 fsubrp fiaddl pop xchg dec leave imull pop cli out cmpsl jl mov or in mov push (bad) stos mov std xchg sahf inc sub gs pop test outsl sub jmp pop fiaddl loopne jl rol movl sbb fs sbb sub mov std push jg out cli aad or mov mov fdiv xor insl pop enter std lret subl add inc clc cli mov data16 hlt pushf adc fwait push movsb cmpsl imul pop fidivr sub mov out sbb xchg xchg xchg xchg fwait fwait addl cmp ja mov (bad) sbb sahf xor dec push sbb jb cltd push inc out xchg stos mov sti shlb lahf fiadd xchg lods (bad) pop push dec in adc xchg xchg stos xlat adc or inc test imul sub lock (bad) addl lahf jns imul sub or dec out inc cmc arpl sub add mov arpl push in adc adc cmp or lods xor ret rol pop repz (bad) jmp mov out dec mov mov mov push pop mov sub cld ja xor adc pop cmp int3 inc inc test addr16 xor icebp xor pop (bad) pop adc pop iret push mov dec test insb lret shrl pop pop inc mov imul jmp dec dec jno mov or add rol shll inc dec popf jmp pop pavgb int3 dec fs std sbb sbb pusha les mov ret imul scas mov cmp push loope insl jmp loop repnz jmp outsl test mov jl ret adc xor pop hlt push jb mov daa jle scas xchg push pop cltd pop adc add ret shr mov aad mov mov jmp lret gs or xor cmc movsl mov movsb mov mov jle int3 (bad) inc sahf and movsl jnp nop inc scas outsl xchg inc and leave push fadds mov notl sbb adc into loopne mov push fbld jp test xchg jns iret cmp or lret add loopne inc mov adc mov inc ja dec sbb fisubl in rcrb popf (bad) ljmp mov cmpsb data16 (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock push mov (bad) (bad) xchg jnp mov mov mov mov rclb jno js daa or aam add scas aas ret mov add subb inc mov jmp jae mov das lret xchg repnz or or and sub inc xchg xchg add and sbb mov lea sub mov call push sub fcom test (bad) lods pop (bad) fistp pop jae stc data16 ret cmp mov and fistp fcmove mov jl movsb lahf cmp push dec pop xor sub push mov mov out (bad) fcomps (bad) sbb jno jo jmp and jae mov icebp lcall cmpsb pop dec sarb xchg add and (bad) mov jno push fwait and call shlb sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp cs (bad) adc fistpl leave lahf add dec xchg clc push mov inc es (bad) test pop add jp ss or add mov pop dec ss gs rolb scas cmpb scas push ja dec inc addr16 xor pusha subb ds mov jg dec pop movsl jno (bad) pushf dec dec jne jns dec jp cwtl jnp mov jle jge lock jne push test push hlt jne dec adc leave pop fs cmp xchg pop in cwtl stos push and push sbb sub shlb jl dec out add nop cmp xchg ret inc push mov aam sti mov or pop inc xchg or inc sarb inc mov add mov aam fwait lret adc movsl adc (bad) add sti fs outsb mov lret divl aad xlat adc xchg (bad) adc iret scas sbb mov (bad) leave pop scas dec (bad) mov movsl or jl (bad) lret cmp outsl pop and adc sub cltd mov mov bound cmc mov insl pusha mov rolb out adc lcall cs pop or insl sbb pop xor dec or dec popf hlt and xor dec add cli lahf jle movsl int3 aas inc (bad) repnz mov xor pop mov fild repz rcr test xor sahf cmpsw push jbe divl test dec xchg (bad) adc mov xlat aam jae push cld test sub xchg sti rcr movsl je pusha mov mov push mov je or fstpt iret imul push pushf and icebp std bound rcl push xchg pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) testl sub adc cmpsb add push out adc inc xchg or jge jne jg or pop loopne push test dec push test (bad) mov push mov ja leave sbb test add ljmp pop sub fdivs enter push lods inc mov stc xchg das sbb xchg jno aaa loope jo sub and in push cld test jbe add lock pop sub js pop lahf lret push insb nop lret testl outsl jnp pop adc loope fdivs mov pushf pop mov sub sti jae fs stc loope idivl (bad) dec ss dec divb mov cmp (bad) adc sbb adc lret push mov fdivs repnz jo or stc push into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec aad add or leave loopne loop mov sub xor int mov push shrl flds test dec pusha loopne mov mov add push jno add outsl jns sub pusha cmp lea clc ficomp or outsb fpatan shr test aas movsb xor out fdivrs jecxz gs sbb jp xor in jae mov mov loope pusha call fidivr clc fdivrl or sbb mov je mov push xchg inc fs repz cwtl jl insl insb dec (bad) or xchg rcll pusha mov nop fstl and mov aaa testl push xchg xchg xor lods fisttpll les sub dec sti push cli adc orl xor xchg aam mov fwait sbb sub or mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or mov clc ljmp fucomip inc es cmp sbb mov cmp pop or ficoml dec xchg and cmpsl cli pusha enter jo pop sub aam mov out stc xchg cs add pop pop xor add cmpsl out xor pop cli dec repz cmc div adc inc loop sub test mov push or dec pop lods cmp dec sahf cmc sbb jecxz cmc fsubrl fsts inc dec in icebp and inc jl out (bad) dec mov inc fisubl xorl imul push cmp and pushf adc mov xchg pusha lcall fscale cld sahf mov cmp stos jnp das push lret pop mov or icebp sbb sub mov jecxz pop xchg (bad) push iret fildl sbb movb orl lock add enter jo mov je dec out mov cmp inc cmp mov jbe cmp mov test movsb lock xchg mov ljmp test (bad) jno xchg or or outsb jns dec ds cs (bad) cmp scas cli cmp mov pushl in xchg and mov sbb popa cmpsb test lret int3 icebp aaa jo sahf hlt cmpsb lea shrl stos into cli hlt (bad) or cltd out sub and mov test adc push xlat or pop imul lcall or push icebp inc and mov pushf add dec mov lods cmp ja fdivr pop jp pusha das mov jno cs jnp call dec xor mov cmc test movsb mov xchg ljmp or push scas (bad) push arpl xchg fstp mov aaa imul out in in in aam push push cld cld (bad) xchg imul (bad) outsb addr16 bound je fsubrs sti sbb mov inc (bad) jns jle jl add lods mov sub mov sub cmpsb jno mov lds lds int arpl fdiv out add adc and ljmp sub leave int sub or into push and inc cli imul pop test call imul push mov mov stc stos nop mov jnp mov insb push xchg loopne jge add dec insb je sbb mov or xchg test outsb mov xor (bad) lock inc call inc call or dec movsb push cmp loope sub hlt call cmp (bad) (bad) or or movsb jbe js movsl add popa and fnstsw pushf inc imul bound call ret imul insb push push adc (bad) aad xlat xlat adc (bad) daa adc data16 cli adc insl and and cmp jne mov fdivs in and sub outsb test (bad) rorl jnp icebp jp add in cmc cmp inc fwait dec inc jo in jecxz loope xor or scas (bad) xor or cltd xchg fsubrl xchg movsb out mov sbb lea mov int3 inc jecxz mov adc pop push cmp adc imul xor cwtl lcall (bad) hlt fsubr ds mov jnp les push shr mov out in push fwait in int dec jp (bad) loope fstpl xor je push lcall sar pop rorl leave gs push mov pop bound insb cmp jb rcrb ss sbb xor pop adc aas sahf inc cmp cs rorb divb cmp pswapd loope cmc cmc mov pop mov test mov insb cmp add in cmp mov jmp in push pop scas add cmp cmpsl cmp test mov push jecxz rorb addr16 inc dec lock imul dec mov add push scas cmp imul movsl cmp lock pop mov and jle cmc add mov jns adc call or push mov (bad) (bad) hlt and jmp mov push cmpsl ja and mov adc movsb pop cmp push xchg lcall xor lock scas lahf shlb fadd push jecxz mov inc repz in ds mov dec outsb adc stos lods cmc sbbb in sub popa lds (bad) push imul xor inc push xor testb scas dec js jp sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss and stc xchg movswl sar (bad) sbb (bad) mov dec (bad) xchg imul arpl sbb mov imul mov loopne jmp icebp push cltd mov dec mov pop cmp xchg popf xchg fnstsw ret popl (bad) mov out push mov (bad) or dec push daa sbb or mov stos sahf inc add notl xchg cmp shrl pusha and pop pop aas test sahf dec add lret js jne popa movsb mov jl adc pop lret push xchg in add mov (bad) sub dec lahf rcll dec adc aam es pop mov push mov daa shrb lods sti cmp inc push xchg imul mov jb mov xchg daa add push cmp stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or rcll push jns pminsw outsb je mov mov gs and xor dec pop test mov aas (bad) imul mov cmp lods fadd add lods cmp cmpsb jle inc xor dec add cmp xor clc (bad) xlat or dec (bad) mov mov sbb mov pop pusha sar xchg cmp dec add aad addr16 pop stos add xor movsb sub inc ds push (bad) and push dec js xchg sbb xorb sub pop sti sub out in dec mov lea ljmp add xchg in fiadd std rcrb dec rcrb mov xchg inc fimul sar or mov imul inc dec pop out mov stos inc les fbstp aad inc mov stos sbb and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test scas fs andl sbb cmp aam xchg mov fsubrs xor int pop repnz pushf iret pop rorl adc sbb jns cli sub or jg int inc cmpsl daa sub (bad) inc mov pop ljmp mov leave xchg push and gs rol fwait pop push ljmp cld fwait and dec or mov xor or mov or aaa jp mov dec xor in iret test dec lret test mov or mov adc mov sarb mov add jo and rolb sar mov aam sub das or fildl xchg ret fcom push ret jb cwtl leave inc xor pop mov pop das mov cmp fstp js fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in out mov push fdivs int scas or sahf mov dec roll fnstsw pushf das mov fidivrl punpcklbw bound add frstor in push andl mov outsb xchg sti adc dec loopne cmp push xchg imul adc inc hlt scas fldl adc pop or xchg cmp cld jl and repnz ds add in cmove sub out dec xchg or and or adc stos jmp std or test dec push cmp test xchg int pusha sub cli int3 addr16 cmp jae test sbb cmpsl bound bound out inc dec jge gs jne jmp adc dec jo xchg es (bad) xor push push imul or pushf mov lds call ret imul insb push push add adc (bad) ja xor clc add push mov cmpsb jo xlat (bad) push cltd push add sbb sub mov mov sub loope bnd dec mov imul sar out (bad) in daa subl (bad) out mov in dec dec or and mov lods dec add sub call inc jle loope dec inc mov pop mov xchg cli dec add les scas mov std mov jns cmpsl pop xor pop inc cmp imul jge int fsts je inc push mov jae adc notl pop (bad) lods xorl es clc pop xor cltd (bad) aaa bound rcl movsl mov clc mov repz xor mov jo xchg or lret scas sbb in mov pushf mov adc int3 and stos push cli sbb pop fldcw jae,pn cmp mov cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll xor outsb or cmpsl popl fmul (bad) sub sub mov std mov fsubs test and and fldl inc (bad) push call mov inc sub add jno pop loop push inc pusha test sbb cmp jp (bad) xchg and mov loop test mov pop mov pusha or mov jns jnp loopne push pusha push (bad) xor hlt xchg idivl out sti push jo jle movsl sarl mov insl (bad) stc shrb movsl int3 add je pop mov loope xchg fs or cmc lea push jne cltd add ret sub pop pop insb fwait jge xor lds repz in cmp sbb stos mov dec jo pusha pushf (bad) aaa test xchg pop jmp fwait jle iret fisubr ds jle fstpt addr16 jbe out popf mov and js add jp sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 mov andl add cli push mov xor add xchg aas cwtl ret test arpl subb test aam jecxz inc aad jo loop sti popa lret adcl push add rorl adc add pusha xor xchg repnz add aaa push imul pop sub sti inc hlt xlat add (bad) inc ror ds dec fist fsubs push (bad) mov fs into (bad) and or jns das mov inc out push push push adc dec rcrl inc sub mov test cmpsb or or fisttp fistpl inc mov inc popa sbb pop xchg icebp xor iret xchg mov sub push push pop or xchg sub lods shrb adc enter stos rolb xchg dec jbe jmp dec dec jno mov or add rol shll es data16 ret repnz xor jle cltd mov outsb mov jle and mov pop pop adc jns (bad) (bad) fsts push in imul and add jl mov jmp data16 jmp jle insl test sbb jbe jge outsl mov adc cmp popa cmpl test push mov repz pop sarl ret hlt rol movsb xchg and (bad) dec dec xor popa lds and cmc fcomip pop and add fistpll pusha cmc inc pop scas ds dec popf stos and and lock ljmp sbb nop (bad) mov inc fildl mov out adc data16 jg jae inc or cmp cmc jl pop push je fdivs jo stos dec insl lods lods inc xor push dec aam dec or mov (bad) nop shr jmp xchg xchg fcmovu mov inc addl lock add jecxz stc push dec or cmp xor and cmp enter xchg stos into fstpl popf repnz call adc lret nop imull cmpsb add (bad) cmp mov cmpsl pop ds out (bad) pop in dec push scas aam push xchg mov shlb movsb (bad) and and ljmp imul sbb int xor ret sbb imul imul push xchg repz add mull add push inc aaa or adc pusha inc lds xor mov push inc lahf add scas in lcall in adcl data16 lcall sub mov inc inc divl imul nop outsl fsubrl scas test sub sbb jmp sbb loop movsl sbb cmp push cltd xchg fidivrl popf mov pop dec and fs shlb sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf sbb shl inc cmpsl mov adc scas sbb in jns add or lahf add mov pop jno jmp andl loop arpl mov enter jno push pop pop inc pusha jne fcmovb in dec xor pusha int3 sbb jp aad cs stos clc rcrl jo mov loop jb lret cmp cmp test iret test xchg inc mov lods cmc jns cmp pushl or push ss mov inc sbb sub fs dec mov outsb cld fiadd aas add mov cmp in dec sub stc adc cmp aaa add jge sub (bad) call arpl fidivl prefetchw mov leave cli repz popa stos cmp std fs push insl popl lea push mov push jne jp cmp mov scas adc ljmp sti sti fs outsb mov lret divl aad xlat adc leave adc xchg repz mov sub stos out cld fwait or xchg dec (bad) mov inc adc inc std mov andb mov jnp fadds and js ja mov cmp enter xor inc sbb cwtl (bad) out mov pop imul xchg add scas int mov hlt mov clc mov leave js les cmp sarb out lock ret adc lcall stos adc stc test push cmp xchg ret lea pop xchg out and sub pop out pop or jmp xorl or xor sub (bad) movsl movsl mov xchg loopne and dec popa dec sub xor mov (bad) icebp shrl mov inc (bad) ss jbe int push icebp out int mov add mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb pop cs add dec or sbb lcall aam fnstcw push pop out data16 mov lock loopne xor lcall lock push xor cs mov and push int test dec jnp adc cmp loope out out mov push cmp je inc mov jnp in inc jbe mov mov fsub loope dec cwtl sub xchg or popf and shl fidivrl inc fsubs mov (bad) inc or dec xor jle call shrl out jns jnp aaa cmp mov mov ret and or pop sbb cwtl jp mov mov lock add fidivl mov xlat jnp mov sti push sbb (bad) paddq cmp pop (bad) or mov push into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg and dec imul xor out je insb push mov rorl adc mov fldl mov sti adc leave mov aam cmpsl ljmp daa addr16 push pop imul outsl or push dec push in cmp lds cmp (bad) cld sti push loop fldl pop cmp test sub call shl (bad) jp mov mov cwtl loop mov mov fisubrl in mov xor mov aam jo fnstenv push xchg test jne mov push and dec or (bad) cltd ficomp faddl add mov fisttp xchg scas loop imul fldcw mov (bad) sbb mov (bad) mov fsubl mov out dec jecxz jecxz test xlat fisubr lret cmpsl ja subl stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test push outsl mov sti sub mov xchg lds dec cli jo imul add movsl into je jns push xor scas movsl lods lods mov and xlat dec mov test add mov xchg enter insb iret cmp inc or jne xchg iret pop movsb jg sub fisub cwtl dec adc push pop in inc mov or fwait xchg pop cltd push lret into lret test cmp jbe pop jge shrl scas jb xor add shlb in fcoml imul inc and mov adc lret sub out lds and test fs cwtl dec (bad) fsubl ret out and cltd mov sub imul sub int lea aas mov cmp out mov jl ljmp xchg fcmovu mov inc addl lock cs lcall div das rcll stos cmp mov nop icebp push (bad) pop in stc cld cmpsl add mov outsb bound imul repnz jne push dec aaa and adc jbe xor pop mov fimul adc mov ljmp jge int3 call pop xchg les sbb in daa dec dec jb cld bound pushf outsb sarb gs sbb (bad) clc adc jnp shl cmp enter adc addl mov in push xchg popf movsl push mov lea sahf stos jae dec repnz lret adc add jle lret jecxz in ret stos push cmp pop into fisubl std pop stos mov push xchg mov cli mov test pusha xchg lds lret in xchg sub adc push pusha mov pop pop xchg mov aaa imul out in in in aam push push cld cld sbbl ffreep mov les bts (bad) pop loopne xor pop jp bnd lcall movsb adc mov or out sbb pop cmpl sub pop mov rcll into int3 (bad) jle lea sub push jnp cwtl out fidivl jae inc pop mov add or pop mov mov mov ljmp xor lods in ds inc inc jg or push pop jns pop lret jle cmp into je mov add icebp adc mov dec mov pop sub sbb (bad) pop cli jg std inc cmp jmp cmp (bad) insb and ljmp sbb jl insl or test insl xor jo mov jmp and xchg cmp dec mov lods inc ret jnp sbb xchg (bad) lea mov cmp arpl call adc imul insb push push adc (bad) aad xlat xlat test lahf jnp mov cli (bad) lea sbb ret cmp sub shlb sbb push movsb out or (bad) mov (bad) inc iret pop shll pop jg mov in cs push ja inc mov repz in xchg mov stc mov les inc xchg jno movsl pop aad pop mov and and (bad) xor pop dec push insb lods imul jmp test ljmp add mov cmp ss sbb jle mov lret lds leave jg fnstsw pusha pop sbb mov sti addr16 jg ljmp cmpsb (bad) out cmpl into mov insl js ja xchg jg push cmp aaa jnp xchg dec inc xor fwait andl (bad) rcll fiaddl adc into mov adc xor test popa ds jne divb cmp pswapd loope cmc cmc lret jg (bad) inc mov fmull xor inc outsl test repz insb cmp xor (bad) call shl push pop xor mov pusha je sarb push incl mov popf add adc in jmp or jmp repz mov jno and mov inc stos negb lret push scas cmp sub clc pusha lea es and sahf rcrb aas sub (bad) push rolb andb xchg mov sub xchg jmp enter pop or mov jnp dec mov jno add mov mov xor fbld out xor dec inc rcrb jae lods mov pushf test sub das adc jbe push add fdivl inc adc cmc enter lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 xlat (bad) mov mov and and pop fidivrl out xchg (bad) push mov xchg shrb js add sbb mov xchg sub dec loopne mov cmp in sbb mov jno pop (bad) xchg sbb inc test fcoms lods ljmp sub mov and (bad) jecxz sbb stos or xchg sbb jno cmp xor mov cmp push js daa js add xor mov xchg stos jae rcrb nop aad rclb cmp add inc jmp mov jg (bad) mov fmull mov stos xor inc movsb add loope testl scas lods and dec in imul cltd fcomp cmpl aas add loopne dec fidiv push pop sub mov adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test sub adc and xor cmp cmp movsb mov xor and xchg jno or ljmp push xor or add jge sub cmpsb dec xor test sbb dec negb mov (bad) shl cmp lcall and out add sbb inc mov adc jmp xchg aas in jmp (bad) addr16 mov pop add (bad) cmp jno call loopne inc pop mov outsl (bad) inc cmc negb jbe dec faddl insb pushf es leave cmp cld xchg jbe,pt or rcr test ss and jns mov ret cmp cmc ds jns mov push adc jns push pop dec (bad) cli jecxz cld or and sub cmp (bad) cmp jle mov add ja pop pushf add lea and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb jbe std inc xchg fisttp cmpsl rcrl aam shrl cmp cmp mov mov jmp and stc pop sar jecxz xor movsl xchg add scas in cmp mov jae jns bt xchg data16 xlat pop add test int push mov xor jbe xor in sbb push in jne ss xchg fdivr leave popa fldenv adc pusha int3 mov cmp std dec mov add or and (bad) jmp xor adc sub inc pushl xchg inc mov les imul pop push xor cmc adc fnop mov rclb outsl jbe pop mov in pop xor loopne lret xchg mov (bad) das aas sbb push adc mov stos jmp rclb inc push fldl sarb mov in jo hlt rcl mov sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf out jmp cmp sbb and add loope lea or add xchg dec in jne cmp push jnp xor daa push or push inc jp test cmpsb ss je pop ret jmp scas data16 arpl ss mov and cld mov and call push icebp sub and insb jmp mov mov mov mov xchg dec sub xchg mov addl adc sti mov sbb icebp jmp gs adc mov cmp cmp fs mov xchg inc mov xor pop (bad) clc leave out sub into adc mov inc mov adc into in out dec push xchg mov cmc loope mov fdivp test (bad) fwait and cmp cmp fistl rclb pop dec dec cmp arpl call adc imul insb push push adc (bad) ja xor mov int (bad) pop sti enter jne scas sbb mov sbb imul mov dec int3 push mov pop inc pusha add sub rorb mov loopne jne inc out pop and fisttpl pop mov dec lcall add xor mov adc out jp clc lock (bad) ret sub rclb sub adc lods in add jge in push inc mov aas xchg (bad) lock out mov or stos clc test sbb nop or or data16 in pop jecxz or pop push fs add mov (bad) loopne jl lret sti (bad) xor push xchg jne fwait mov push sti and mov (bad) popf test inc stos out adc std jno jge mov shrb iret add add adc (bad) mov cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb or adc call cmp pop sub xchg push mov pop cmp mov adc jae fwait mov push push leave adc (bad) pop pop pop dec jns int repz jns fincstp cltd and inc outsb xchg in mov ss inc mov pusha js lcall xchg or test or push out inc mov push test mov aam (bad) inc hlt mov mov vmaxss inc leave aad das pushf stos call loopne in jecxz sbb xchg add stc inc jmp push les ret fildll fsubs subb jg cmc jge js lret xchg jp lcall mov arpl lret xor cmp rcll leave inc js cmpsb aad jae out jge xchg mov ds lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl dec clc in dec je add sti pop mov je pop repz cmp fabs push adc xchg cmc leave test add cmp testb push daa sub outsl pop dec sbb push sbb mov inc push test aas movsb sbb pusha or xchg jne jl mov inc (bad) jo mov jnp nop and daa rorb and movsl mov add or icebp xor jb int push dec and cwtl sbb jnp ds and ret xchg inc fistpll xchg jno sub insl std pop push fldt push inc sub mov or fisttp push inc je mov adc lods das pop sbb fist add mov mov mov loope aam push flds cmpsl lea push test cmpsl sub imul jmp dec dec jno mov or add rol shll es jp ss cmp movsb or adc push lea test xor leave lods ret push mov cmp sub arpl or push fs pop push roll jg out cmc fdivrl dec das adc andl mov adcl lds mov movsl jmp or hlt inc movsb pop in movsb mov sub cmp mov std mov mov les jne scas sbb and cmp mov xor dec fisttpll sbb (bad) imull movmskps leave fildll or std adc sbb pop xor js add mov ja add jb nop loope scas mov xor mov sbb sub xor nop and xchg lods (bad) in xchg xchg mov xlat mov dec arpl adc jmp xchg xchg fcmovu mov inc addl lock add enter pop push aas adc jns loop andl mov cmpsb test xor xor dec int3 outsb mov dec ss pop fsubs out push jb xchg xchg call lret not push das dec iret aaa xlat mov push out sti test pop sbb ja mov rcll cmp pop (bad) pcmpeqd ljmp dec pop leave pop cmpsl mov aas aad jg adc xchg sbbl pop test mov popa pop xchg decb push in sub test loope xor pop lock add arpl inc fisub push push lock xor mov inc rorl bound in mov cld insl jae lods test inc add clc xlat jno push sbb out cmp call push setne dec xchg xchg mov pop and shr inc out mov fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp in and subb (bad) cltd movsl adc lret xchg add mov ret roll cmp pop test push push mov lods xor std out fs je mov pushl mov sahf (bad) (bad) xor mov loope inc sub xchg insb sbb popl icebp movsl test divl orl adc xor inc push popf jle push xchg mov push scas ret sub js pop sbb and dec xchg aad or xlat ror fldcw jns inc fstpt sub push lcall test in test mov into out out and outsb cli mov cmc cli in pop sbb lds sub mov lret xchg xchg dec stos mov push adc and fwait push sahf fwait push dec in out push dec inc (bad) or jmp data16 adc add sti fs outsb mov lret divl aad xlat adc (bad) gs adc arpl nop pop or jmp stc and daa (bad) aam pop jle mov cltd and stos (bad) cmp dec and ret add lret addr16 jne sub fcmovnbe adc (bad) (bad) clc (bad) (bad) mov push bound cmp or imul out fucom pop pop pop aam mov push std sbb pop ja test mov xlat nop lret fdivrl inc call dec test sbb je movsb cli mov data16 add dec mov inc pop add xchg jmp cli adcl and mov addr16 cmc das aam mov sbb jmp leave pop outsb roll mov das lds repz sbb (bad) push cmpl sub (bad) std rcl cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and das testb in or out mov sbb out fcompl xor sti adc (bad) popf xchg lods pop int3 dec sub and outsb fcoms loope add subb pop push dec cltd clc push mov xor xchg xchg mov dec sub (bad) ljmp nop push pop xchg add add ds or daa gs outsl (bad) mov (bad) mov nop lret mov push rclb xor mov cwtl add xchg and fiadd outsl mov nop mov xchg add lret fcoml fucomi xor loop popf int inc pop hlt rclb je push stc mov out pop test lret test arpl push xlat ds aad mov xor addr16 cmc int adc sub lret lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or mov mov push lods rolb xchg cs mov imul (bad) iret std pop push push aad fldenv aaa jle sahf push scas cwtl pop sahf push sti dec int3 mov aad inc daa xchg add mov pop dec inc cmp cmp into aaa xchg rcrl (bad) cmp lret xchg mov (bad) xor test dec ret sub adc decb and pop add push mov out lds (bad) in outsl jnp flds pop jecxz jnp xor add add mov aad scas imul mov lret call sahf cmpsl aad icebp cmc cmp xchg int3 mov lcall push (bad) out outsl cmpsb xor test scas dec jns adc js dec cmp jl add mov add push rcrb jle stc mov or push adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or or sbb data16 fldenv enter mov cmp or (bad) cmp jae jmp adc aam mov cmp imul xor add ffreep inc flds dec movsl pushf xchg or push cmpb out mov mov jb jg loopne inc pop or sub movsb push cmp pop and stos in scas pushf into or (bad) and pop mov cmp add inc lahf lock and or mov (bad) movsb (bad) adc movsb inc fs jo sarl (bad) cld dec push popf repz pop mov lcall xchg int3 and add fucomp add sub pop into ret and loop pop pushf mov jg sbb push jecxz sub insl push mov sub xchg or xchg (bad) loopne xchg fprem1 rclb dec call inc inc addl lock add enter jo sarb clc push push add mov (bad) and sub data16 aam and popf or cld or mov push mov mov fisttpl outsb in push lea mov xor sbb dec adc sub in push in add sahf int insl bound pop lock lods popa (bad) divl sub fcompl inc (bad) dec lcall popf jecxz stos nop xor sahf dec lds ret nop cltd adc push out pusha jae dec enter mov enter mov hlt (bad) imul iret cmp sub scas cmp scas int3 test and pop sbb pop les (bad) outsb (bad) xor jmp or cmpsb jg ficompl scas pop test in xor into add idiv imul inc xor jl test xchg fstp mov aaa imul out in in in aam push push cld cld (bad) xchg adc in or pop sub add dec and popf nop cli gs pop outsb std loopne adc add pop popf pushf mov and loope adc ret dec mov daa cmp dec mov mov inc push xchg lret sub mov mov mov shr jne mov repz int3 gs aam mov flds fsubs xor sahf fmuls cmp (bad) mov insl pusha sbb pop cmp test push jns mov daa sahf mov pop cmp mov sbb aad push lds ret les out mov test (bad) jne and pop das addl data16 pop (bad) divb repnz loopne shl pop test iret inc into xadd inc sbb enter mov inc fnstcw repz movsl inc jne mov inc inc sarb call adc imul insb push push adc (bad) aad xlat xlat adc add add cmp jno cmpl push daa rorl lods iret lea add adc iret add adc repnz xor mov lds push ret (bad) clc sar stos mov gs pop push adc lea jl jns frstor fiadd jp xor push in pushf jmp mov pop mov lods mov andl loope outsb mov repnz mov cmp dec jne repz sub inc fiaddl inc loop cmp pop jg repz notb dec aam inc xchg fist nop mov add mov ds xchg popl and mov pop pop xor lea lods shll jp test mov push inc repz cmp fwait jmp jo (bad) psubusb mov sbbl ret aam mov inc mov je cmp add setg loope cmc cmc mov call aad jns push mov sbb xchg movsb (bad) or pop lret and mov test or in or imul insb and add fcom lret lea fisub mov fwait jle mov or fcomi adc rcrb cmpsb xor adc mov (bad) inc jno jbe lahf xchg cmp push cmc xchg xorl fwait mov popf sbb jae popf mov jbe push jmp outsl pop cmp loopne daa mov call or jnp (bad) push push data16 and fs push and fwait sbb fs xchg cmpsb and pop mov adc jo xchg sarb sub push cli mov into ret bound test outsl or or sbb jmp icebp or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl and cmp dec mov or std xlat bound mov xchg or or sub (bad) (bad) mov stc mov push (bad) mov aaa iret sbb xor int cmp je mov inc jb and cmp rdpmc inc and mov add rorl in mov xchg sahf mov popa and enter lea nop cmp out mov hlt frstor or lea jp mov ds lret and scas xchg add lock imul lcall mov push fldcw insl mov out mov movsl (bad) (bad) mov ret imul jecxz xchg sbb mov xor mov sahf stc dec fiaddl xchg sub mov cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test pop adc jb and arpl jmp aas js xchg push (bad) scas push sti or ror popf adc ja jae leave lods or sti nop adc cmp negl data16 outsb bnd xor test test bnd imul aam sub (bad) dec pop lea fs imul add les les loopne fsubl mov sbb mov lret inc sbb jge mov sbb dec (bad) addr16 lahf push mov cmp sbb pusha mov aas js loop iret xchg aas nop pop fsubrl mov pop push jns icebp int3 ss dec fimull jg pop inc int3 pop cltd lea sbb jnp js lock idiv pop inc xchg aad jecxz arpl jo mov lods aaa (bad) in pop pop add repz and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb shl fsubr mov std mov loop add inc or add lods mov mov mov pop psrad mov les mov jno cmp mull push sbb sbb clc dec mov and fbld mov sub mov movsb in jno lods mov xchg jbe mov pushf or mov daa lods cmpsb lret pop fwait lock notb mov jmp icebp aam mov sbb shlb jo rcll cmpsl jp xchg pop or add jbe inc jb mov jle movsb pop mov out dec pop push or repnz cmp insb arpl lea sbb and jge sti sbb jae jle es insl js dec rolb add inc and mov rcl mov sub fstpt sbb mov or inc inc dec dec xor jl sahf mov lods scas jo mov outsl xchg arpl and arpl js sbb and rclb fstpt dec (bad) (bad) cmpsl pop lahf cmp xchg les (bad) xchg (bad) (bad) in sub rcrb jl jecxz roll push pop cmp push (bad) sbb cmp and mov add aas pushf inc jne xor jmp lock jmp add jecxz stos imul jmp cmp push cld mov iret (bad) (bad) xchg adc xchg sub scas mov inc mov test sbb outsb push hlt out sti sub pushf adc and jmp int3 insl xchg cltd rorb clc out cmc jnp push sub push jo fiadd les js adc shlb push loopne test or jno xchg into and pop xor mov dec dec cmp arpl call adc imul insb push push adc (bad) ja xor test ret mov cmpsb inc mov imul insb mov call cmp mov or mov je jle movsb cmp jno dec push and int3 cld dec sbb adc int mov jecxz dec fstp and or pop cmpsl or mov mov pop or aam shrl inc mov pop push pop orl inc lret push mov mov mov mov insb jo sbb insb and insb stc fldcw sahf out clc sub jmp push jmp xchg lret scas shrb lock divl scas cmp daa mov jl loopne ret sub or pop lods (bad) push xor or cmpsb dec push clc mov cltd sub xchg sub int (bad) fstpt lret jl sar jb nop and or add fldz adc push and mov rcrl add (bad) std mov inc xchg xchg pop pop aas aas mov pop rcrl pop ja fadds cmp inc mov push rol sub sti dec jbe mov cmp ss dec sbb push pop lock cwtl xlat orl rcll pusha sub lcall into pushf rorl roll leave pusha in cmc pop fstl scas adc lahf xor xlat lea mov add mov fistpll jg adc call loopne xor roll shl shlb lret pop loope cmpl test adc movsl sbb cmc pop push xor xor addr16 fs push inc jns sub scas ss daa test add add cmp mov pop leave repz cli es jns movsl cmp sbb (bad) sub cmp fwait cld stc dec ja xlat je dec push aas mov mov sub mov xorl jnp xchg sar pop aaa inc pop and mov dec jno mov and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl push cwtl in jae cs pop mov clc jns outsb jge add push fidiv hlt scas xchg or sti and jecxz aam pop xchg jnp sbb js int js pop cmp fild outsl rolb add mov je mov ret data16 jecxz inc pop jge popf addr16 outsb sbb inc jns daa popa push cmp out sub sbb adc clc loop cltd push xor fldenv and les fxch pop scas inc mulb inc sarl cmpsl (bad) (bad) cli mov and xor xlat push fcoms jecxz (bad) xor dec loopne sub fwait push int test mov loopne xor insb adc aaa call test loopne or icebp xchg out xchg xor jl jl sbb ja or or imul jmp dec dec jno mov or add rol shll es data16 cmp div mov jbe scas out shrb mov add ljmp dec addl in repz stc cmp sbb dec ljmp sub loope dec dec adc add inc adc rorl in or loope orb scas mov jae loopne cli push push xor jnp fildl jo outsl (bad) pusha testb push add mov mov andl xchg js (bad) aad aaa ljmp cwtl loopne sbb stos push test test icebp cmpsl or ss jp dec mov sub pop cmp test xchg xor or cmpsb fcmove xor mov negb decl aam mov mov rclw mov sti fcmove jnp jmp xchg xchg fcmovu mov inc addl lock add enter cwtl jge push xchg jne add mov inc in sbb (bad) test stos inc scas jl lret sbb loopne cli nop mov push xlat lods dec inc or test and into notb arpl sbb cmp mov out cmpsb xor xor test (bad) fist xchg out not xor fs mov jnp adc cld in dec fld leave push test imul or mov rorl pop ja sub sbb adc adc xchg inc xor sub pop mov jge lahf pop pop mov shr int3 push jnp mov flds pop leave push push fsincos push aam sbb aam sbb imul mov inc shl push loopw sub xlat lret test (bad) lea lods out sti in mov add arpl adc divb jl or sub fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl mov xchg sbb mov xchg adc sub nop mov or sti mov andl in and ret ljmp xor jmp out xchg aad ja out aam ss jle ret xchg xorb lcall push xlat pop mov std rcrl xchg movb aam aad jnp adc and xchg aam xlat fidivr add daa pop (bad) jb mov cmp jne adc lcall add add (bad) push xchg pop pop dec addb xchg test and push and bound das leave fidiv mov neg inc ja lret imul insb cmpb divl scas add cltd inc aam sub push fdivrl inc sub jbe lods jns leave out push aas cmp cmp ret mov lock mov sti fs outsb mov lret divl aad xlat adc (bad) gs daa pushf std rol inc push inc jns jle jne movsl stos popa sub jg and and arpl mov pop sub fidivrl mov push cmp mov cmp push mov pmovmskb adc pushf mov aam or cmp addb (bad) xor pop dec jno mov out les popf sub lret mov jns jbe roll aaa xchg subl test jp mov popa cmpb dec mov add or fsts mov in mov fisttpl pushf jle,pn out ret mov (bad) in in (bad) negb into sub sbb mov cmc addr16 push xor push pop test fdivl cmc nop aaa iret sbb adc jge,pn fiadd or cmp std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push push sub add mov pop cli mov add cltd int jge xor cmp insb sbb fisubrl adc pop pusha cltd fs add xor insb inc arpl mov inc stos (bad) and pop mov push mov gs adc or sbb repz idivl fstpt stc stos movsl sbb mov adc es popf jmp cmp xor sub (bad) les pop call cmp sbb push shlb xor sub daa mov js xor xor mov js jo jbe pop mov fstpt enter pop pop mov loopne sub in pop jg jl cli fnstsw xchg das pop std xchg and add cli mov fs mov lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or aas or sbb iret lds icebp (bad) push mov sti aas jb test les das xor popa pusha cs xor lods fs mov addr16 (bad) mov scas sbb gs addr16 ljmp add mov stos cmp mov sbb mov arpl shll out xchg ret cmp cmc outsb cmpsb movsb inc subl jmp pop sub or fistp sbb movsl mov int3 out sti aam scas (bad) outsb insl sub add rorl adcl (bad) sub je inc (bad) mov lods pop stc pushf cli pop cs lea xor aaa (bad) insl inc dec stos mov xchg (bad) push js (bad) sahf test adc push mov ja jnp decb mov pop movb adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp pop out cmpsl std icebp test add push xchg inc (bad) pusha in push cwtl mov jg mov add xchg gs fsub (bad) in mov test mov imul mov std imul cs dec push loopne jg mov stos sar add sbb mov fistpl sbb int push scas xchg std rcr aam push enter lahf cmpsb push lret sub dec adc cmp cmp leave mov fwait nop int adc pushf or loopne push pop lock cmp pop mov lahf out sti aam (bad) pop xor sbb pop loopne int3 add pop in jne push add jmp cltd push daa sub xlat loope cwtl stos hlt popa insb push test mov pop call std xchg pop xor jl stos mov pop out mov bound add push pusha pusha lock add enter jo push (bad) call shlb dec push cmp repz rorl ljmp out es or nop xchg xchg adc sarl add es pop xchg inc fldenv jge or ret jmp int jecxz sbb lahf ficomp pop dec push fnstsw rcrb sbb loopne out aas and into mov ror xorl sarl stos in pop sbb push shrl lods in jge bound std inc xor andb mov les mov popf fistpll nop rcrb mov adc cmp adc mov lea ret inc dec int iret pop leave fs jle mov arpl sbb cmp ja jno fiaddl imul negb hlt (bad) xor mov popf test fcmovu or stos (bad) lods and (bad) dec lock mov push adc lcall iret iret out in in in aam push push cld cld (bad) xchg mov faddl xor sub sub sub out add jns add movsb popa test jbe xlat fistpl adc inc aas push xlat in in in fildll push cmp mov andl cmovg and mov or jge xchg jne subw test push (bad) int inc or cmp push inc xor fwait ds mov sbb or sbb mov out jns fnstcw add mov in movsb nop (bad) repz push test cmp adc add sbb daa xchg push (bad) jmp lret outsb jbe pop sti pop mov xchg xor rorl or jmp dec notb jbe insl sub dec mov mov cmp sbb hlt std bound mov insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov xchg insb dec xor cwtl out cmp popf es aam xor push and dec inc push cld test clc outsl incl adc xchg pop loope cmp testl (bad) xchg jmp mov sbb or xchg add mov mov std test jno mov leave fprem1 sub and sub or stos in add inc mov aaa aam push repnz mov mov insb cmp mov and repnz mov jb scas outsl ret and icebp sar mov cmp divl jg pop out adc stos mov lcall aam and fisttpl sbb insb push stc adc xor dec jecxz mov mov cli jns clc not cmp nop push aas stos call fdivs movb lahf lahf xor mov cmc mov pop mov repnz ret dec dec push xchg icebp mov and lahf movsb mov jecxz and pop lret shr cli mov sub cmp lea sub cmp pop mov fucom jne ficoml xchg xchg into xchg aas sbb popf inc fs xchg mov add and or sbb ss xor imul out into or push jmp mov add sub call test xor mov out jnp movups aas dec (bad) shll pop hlt jne fwait jmp pop pextrw xor movsb cmpsl aam xor aad je std cmp daa nop call fs xor pop adc mov sub push mov push cmp fildl insb xorl or sbb (bad) add insl fidiv ja xchg sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos and push cmp iret std into (bad) xchg cmp mov mov xor fucomi inc xchg leave sbb movsb movsb dec inc outsb cmovns or fs pop xorb (bad) in and mov cld xor (bad) fisttpll je add pop pop jmp test add xchg out xorl popf pop leavew mov sahf cltd jne mov aad or call pop mov decl inc call fsubs dec in jmp mov sti add jno pop mov scas out divb fild mov je pop xor roll (bad) in call adc xor xchg pop arpl and jae popf sahf pop add dec jp mov dec jbe sub mov aas dec out ret cld adc loopne and dec cmp pop xchg sahf and push dec or push jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl and dec push dec dec cmp mov mov adc popf cmp inc mov adc jmp mov pushf add jae cld mov mov es jg or sub jb xchg mov test push (bad) je adc enter pop enter mov push sbb out cmpl shlb std gs aad xchg mov jbe addr16 ficompl inc push ljmp mov cmp add mov repnz out scas cmc inc mov (bad) test ss lss lock int leave fcom dec mov xchg out ljmp lea or pop das divb adc fistpll fwait lods (bad) js imul (bad) aaa (bad) mov pusha out jge pop cmc test loop scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov movsw xor push dec insb push aad sub daa mov lret cmp scas data16 popf push cmpsb lcall fnop into and stc and adc mov arpl inc cli inc movsb xchg dec xor movsb in mov mov jge inc mov je cmp mov push in sahf icebp in inc popl xlat mov stos mov movsl (bad) pop bound rorb aaa lahf jmp xchg aad fstpt sar je and add stc dec (bad) jp dec hlt fcomps inc scas mov sti in lcall mov sub sbb hlt mov lods lock xor jp (bad) (bad) cwtl jo or cli sbb sar dec mov mov leave outsl dec cwtl inc repz popf push in pushf push (bad) xor push jecxz jo jno loop (bad) mov adcl xor sahf jnp in movsl movsl test dec cmp arpl call adc imul sldt out or sbb int rclb pop sub hlt aam mov cmpsb ret and aaa adc sbb test push rcrl and mov add lea adcl arpl adc xlat stc mov xchg xchg sub mov bound aaa pop dec jge popa ljmp mov and fcoml xchg pop xchg pushl test jo sbb addr16 cmpsb (bad) out lret dec sbbl mov div mov cmp test stos pop add addr16 imul jmp ret ficompl mov mov mov mov test out ret out loop notl and cltd leave (bad) lret fcmovne scas out adc mov cmp (bad) push ret sahf fidiv xor mov xor ret leave leave ds jne divb cmp (bad) psubusw aad movsl dec dec inc ret (bad) inc (bad) xor adc test mov mov pop mov lcall out scas test aas sub sbb xor (bad) xor dec test loope jmp dec call mov (bad) xchg dec inc jne,pt pop imul popa outsl loopne inc jecxz sbb movsb push and (bad) shll and aam or mov mov push aam pusha fsts inc pop xor dec incb mov inc insl or test cmovne repnz (bad) fnsave test out scas push fcoms and mov rorb fsub dec cmp sahf pop pop sub movsl js adc inc xchg fstpl push add fnstsw push (bad) shll sbb (bad) push push push push and lods lods or jp sub mov out sbb add mov aaa and dec gs mov daa mov sti ret jecxz push mov bound (bad) pusha mov pop and inc push shll add mov add (bad) es into push mov in pop jo jbe add sbb sub pop xchg add das negb lea (bad) in pop fwait sahf lret (bad) (bad) xchg (bad) bound sbb xlat in dec stos dec stos pop ficompl in (bad) cmp outsb xlat (bad) stc addl lret (bad) js (bad) sti lret jg ja (bad) inc adc mov lret test pop xchg pushf mov inc pop dec sub inc jmp add xchg pop jns faddl ret inc idiv fist dec icebp and aaa sbb in icebp imull push test mov add int out out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb adc and imul add das mov push push lods or ds sbb push inc shr mov jne stos std adc inc rorb mov arpl lods xor mov das pop (bad) test mov sahf popf sbb in (bad) add cmp loope cmc cli cmc pop lcall pop or cmp jno cmp imul mov cmp test and add xchg punpckhdq icebp sub pop ljmp adc and lock or sub mov scas ret imul adc xor out mov and xchg pop cld inc insb mov dec es jle mov in mov inc sbb lahf sbb loope jbe sub aaa mov (bad) cltd push jle sahf mov in int movsl xchg push push lcall shll loopne mov js in in lea and movsl movsl and in in or mov add xchg xchg push mov pop test xchg jg lret dec lods sbb and movsl cmp fwait sub inc mov push mov jbe jbe loop popa jmp xor scas mov repnz xor or or xchg add cwtl scas int shrb xor mov mov sbb outsb fcomi adc xchg je std xchg sar adc jg sub jge out std fstps stos in repz das sbb sbb (bad) mov lea inc jl sub sbb sbb add add imul xor out mov cmp mov adcl shlb lcall leave mov mov xor mov ret insb xchg jp (bad) movsl (bad) (bad) out imul jo push push (bad) call shlb sub fstpt sbb mov or inc inc dec pop arpl sub (bad) mov int call incb and cmpsl sbb jnp rclb popa test imul and jmp pop imul ss or mov icebp mov in cmpsl mov adc xchg cmp pusha pop sbb lcall adc jno lea shrl sti fisubrl fistpl or dec cmp xchg mov jo repnz push cmpsb das fstpl cmp dec cld inc xor fcomp ret cmp jb mov repz ffreep sbb aas push add pop pop popa add mov add jnp subl sahf movsl sub scas push icebp mov jl lock dec repnz aad repnz mov dec rclb mov cmpsb repz dec and jae pop (bad) fdecstp pop adc push (bad) mov fisubrl push es movsl movsl test dec cmp arpl call adc imul insb push push adc (bad) lcall jp mov mov pop dec ret cmpsl outsb push inc inc add sub inc mov out cmp int3 cmpsl push pop (bad) jns scas jbe pop jle into (bad) aam push cli xchg mov xchg jmp xchg imul dec mov mov imulb dec xor pop and (bad) out mov fsubrl (bad) cli fsub sti jp fidivrl inc sbb push daa movsb fimul xchg scas inc pop call lods or nop mov or push mov js fwait jle mov push sbb and fmuls push push push sahf mov sub pop ficoml leave in gs mov sub fidivl jo je mov test fadd pop shl (bad) mov (bad) add adc stos jb xor daa pushf pushf add cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push sar adc inc je push repz loop or sub cmp cmpsl (bad) mov leave xchg stc push lods dec push xchg mov inc jge adc sub or mov sub vsubpd or add jl les sub out or leave adc test (bad) ds dec xchg cmp iret mov and pusha ss pusha ljmp test divb test fmull inc in ds jle psubq adc mov fildl pop jle and add outsb fimull inc add (bad) icebp add xchg inc ret js les add es shl pushf mov ja xchg addr16 and outsl in out or loope lea sbb or and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl sub inc push iret mov shrb lahf mov push push sbb pop rcrb sub lret jbe jl inc fcompl mov mov je lods push (bad) (bad) cmpsb mov test test out pextrw mov test or inc pop mov jmp mov adc and lods into jno out cmc das das inc mov popf mov out mov sti mov inc popl add xor or stc gs push cli aas or fcoms xchg xchg clc mov dec sbb sbb lea sarb or call data16 cld mov sahf push sbb push mov xor (bad) cmpsb test nop test inc popf mov xor or sub pop div jmp xchg dec dec jno mov or add rol shll cmp jns cs sub out aaa aaa data16 jmp cli loope sti jmp lahf jb adc mov adc jno cs imul mov test in gs test mov add push cli loopne (bad) adc inc inc (bad) ficoml test jecxz je addr16 xchg xchg dec orl push lods cmp dec pop sbb ficomp daa out das insb movsb sbb sub xchg dec xchg and inc pop mov jl loope lret or addr16 sarb xchg jle adc outsl repz dec cmp cmp lods pusha mov sub sarl rcrb shll icebp (bad) mov add adcl out data16 insb sub bound (bad) enter dec repz xchg mov pop idivl cs jge or and aam shrl xor cs out lea inc jne jmp (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock gs jb fnop push lahf or add popaw mov xchg xchg xor call jb sahf add xchg leave stos xchg lock in ds sub adc cmp push test dec push jl lds loopne loop scas insb adc call in mov or jns cmpsb mov js or cmp repz iret out xchg ds push addl adc jb and rorb fmuls mov jmp mov and lea jb test push adc pop dec (bad) std pop push scas (bad) lods mov lods push add or ljmp or jmp xchg dec ja xor das outsb (bad) lods jmp scas adc sub (bad) (bad) loope out mov je inc mov dec dec and xchg dec lret pushf test (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor jl xchg mov jbe cltd divl adc sub jb xor rolb mov loop montmul cmpsb ret inc cli out mov dec add dec repz xlat test lods jno fstps xor insl adc cs add ds add popf insb int mov mov imul insl ss jg stos xor stos push ds rcrb cmp data16 lea mov mov add fwait (bad) jg push enter (bad) jns lods sub lods mov jmp jecxz mov push imul pop (bad) cwtl and pop mov cmp cwtl fldl pushf dec test into fwait in mov mov adc xor pushf mov push mov movsl mov ljmpw mov add sti fs outsb mov lret divl aad arpl int3 pop xchg ja push mov mov jno cmp mov punpckhwd js cs jg lret scas adc (bad) pop push xchg cmp mov dec cmp mov mov ret push aaa push sbb stc in mov aam cmp inc xchg cmp cmc in dec jno sub in jno fildll inc into xorb fldt dec iret xor pop xchg imul fstpt (bad) sub inc in insl cmp outsl mov pop icebp mov fwait popa daa adc or jo mov sbb or test lahf push roll shrb jle movsb push jge inc icebp clc xor daa adc sbb push pandn insl sbb aam xchg lock mov dec test pop or rolb movl outsb lds test add mov sub daa pushf pushf cmp mov rcrl (bad) std mov inc xchg dec lods or and mov loopne call xlat push mov mov aad push ja pop xchg and jp imul dec cmpsl lcall lcall mov jmp xchg sti jge xor (bad) (bad) cli sbbb cli jns shrb xchg inc inc enter arpl mov bound or mov push adc popa scas into pop stc insb or fs or loope mov or jle push jle jle out daa ds insb pop adc and adc movsl leave xor popf cmpsb pop test or ret cmp push sbb pop cmp or enter cld xor add out movsl sub mov add fiadd addr16 pop mov repnz ret dec dec push into cs lret mov mov hlt hlt aam sbb add jb in shll lock jbe roll xlat inc sti sub enter scas fs push lods sbb push inc into mov ss push inc sbbl enter leave mov jns gs add sahf clc jnp nop (bad) push jl push sub push hlt mov shrl cmc pop ss repz adc mov mov adc movsl adc pushf subl cmpsl arpl mov lods insl popa push cmp cmp adc sbb and adc mov adc cs push arpl shll int3 pop xchg push ljmp mov jno stos pop mov mov adc adc (bad) dec jg fsubp loope cmp frstor ds cmp mov enter sub cmp xor int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb mov clc in (bad) cli insl cs cltd mov adc dec mov cmpsb bnd dec add leave out scas (bad) leave mov out mov pushf cltd cmpsb call xchg divb xchg sub rclb aaa fimul ja and stos or pop out push les call add ljmp iret imul sub fisttp test (bad) mov jmp ret dec lds mov cmp sub (bad) leave push mov xchg ss icebp dec rolb nop sub jnp push rorb test lds leave loop adc loop adc sti in shll or dec push dec outsb lcall sbbl iret pop stc lcall fmull cmp jne imul cltd int lahf fimull xchg repnz add sahf jge outsb mov or (bad) (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock test test jg out mov icebp inc data16 out mov aad inc push scas mov inc inc xor jnp jle loope imul jnp add mov adc mov inc dec cli insb (bad) out or dec lret sub mov inc xchg loop in ss jg sub or mull cmc sbb outsl push out aas ljmp ds iret sti ja sbb push pop es pop fucompp push inc imul popa leave test fistpll movsl xchg loopne jae jmp push adc cmp push out cmp jno mov addb les mov bound cld mov sbb add sbb fdivrp mov push sub (bad) repz shrb and cltd cmc push sub xor dec sub test nop mov jmp jmp lcall mov (bad) pop pop xchg mov aaa imul out in in in aam lods loope nop mov mov or add mov fisttpll cs dec sub inc mov and mov out add mov inc movl in jl movsb addb mov (bad) shlb mov sbb or imul fisubl into jb (bad) repz xchg popf jge cwtl nop mov lret xchg fldcw jne cmc push les xchg jle imul lock lcall push sbb (bad) lahf lods mov push ret xchg les mov fnstenv mov mov and inc test pop adc inc stos ret ret stos repz inc (bad) sbb out inc scas adc xchg movsb scas nop sbb xlat xchg inc add dec dec cmp arpl call adc imul insb push push adc (bad) aad mov lods jnp aad cmp pop mov mov jne fwait jmp fsubs sub into jnp sub loopne enter add cvtpi2ps insb add push outsl cmp rcll pusha aaa mov sub dec cmp int3 xchg push gs daa dec jns xor inc inc repz inc imul add sbb insb jo (bad) arpl rorb mov mov outsb call jno sub or (bad) je add jg cmp dec in fsts xlat xchg int3 or (bad) jb (bad) mov ds addr16 or or push hlt jge sbb mov jl adc jge xchg and dec gs loop mov ret sub mov sbb js scas inc or stc ficompl mov xlat arpl mov jne mov es lcall jne divb cmp (bad) setg imul mov mov insb xor outsb cmpsb xor xchg loopne mov scas fdivrl cmpsb adc mov sub aas aam adc inc add mov fsubl mov cs xor pop hlt push pushf jecxz ret lods pop mov icebp ja sahf leave dec inc das or push ja or mov push xchg push je pop pop dec add push push movsl (bad) fwait jecxz lret or xlat lods aas or icebp pop imul pop test mov mov int3 pusha pop repz xor or jb dec and sub outsl fcomp add out je insl mov xchg ds inc sbb push (bad) (bad) jmp gs out adc stc pop and jo dec mov xlat pop and ret cvtps2pi and popa rcll push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait arpl call pop or mov int push test iret push ds lret or jb inc xadd aam cli push std fnsave cmp mov outsb inc aaa ret test test insl pop add adc adc mov insb cld push pop ret lods (bad) mov sub cmp stc or add add add mov cld mov pop movsl adc inc lret hlt gs sti lods pop cmpsb ror inc sti fadd jge popa add pop pop push icebp ljmp scas pop inc test dec xor xor test (bad) js dec jne sti mov cmp lea shr adc dec cli and fwait pop fldenvs (bad) (bad) mov inc lahf mov les add push mov cli and inc or arpl lret mov cmp cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb add cmp push dec pop mov bound and clc out stos pop xor dec sub xor into mov ffree int3 inc push (bad) lcall je aas or inc rolb push (bad) adc lcall jne (bad) lock hlt lret cmp push in jmp add xor add sub clc ret fcmovbe adc fstpt sbbb or fstps jecxz xlat lcall fstps mov pop imul sbb clc test sub push je or mov jo jae push stc fdivl ret xchg push mov dec nop fsubrl jb pop adc sti mov (bad) xchg aam les dec int3 addr16 arpl and xchg inc test data16 mov js in in lea and movsl movsl and in in or mov add xchg xchg loop scas scas add data16 lret bound leave cs fldcw (bad) jge push movsl xor (bad) push je mov pop mov inc sub jmp and fisubr cld scas in jmp dec jae pop out stc addr16 cmp pushf xor pop adc xorl movsb sarb mov jecxz loopne call rcr or pusha (bad) cmc push mov sbb xor sub dec fadd mov adc push pop mov dec mov das lret cmc popa out dec mov push (bad) xor dec insb lcall lock pop jp and movsl iret push xor repnz cli and notb mov sbb jp inc push cmpsb negl lret js jo call mov and ret repnz push test jne mov lods jmp lods mov adc outsl push push (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor lock push (bad) (bad) xor aad and sbb pop push hlt ficompl cmpsb lret (bad) cli add (bad) ljmp adc cmp adc loope jle inc jg push negl push push fst jbe xchg adc movsb out cld jno aad out dec (bad) jg sub cwtl mov jecxz aas fist faddp pop sub call loope cmp mov pop dec xor jb inc shrl and sahf mov mov aam btc popf adc mov (bad) insb push xchg adc inc aad scas adc mov cmp fwait push rsm or cmp mov ret xor xor pop mov rcrb or push fldl test mov add lcall lahf dec inc ds in xchg nop fwait movsl push ss je add test cmp arpl call adc imul insb push push adc (bad) ja ret stos mov xor popf (bad) jbe mov mov pop iret repnz leave cmp cmp cwtl insl sbb add sbb repz pop add pop iret roll xchg sahf xor dec mov adc ds adc pushf loope pop repz lds outsb or inc inc and dec clc xchg cmp cltd ret test xchg (bad) in mov adc imul jle adc add pop fidivrl inc in mov xchg fidivl or cmp add cld jnp enter jae in out dec inc rcrl lds xchg dec mov fsubrp out fwait mov cmpl cmp inc lods pop clc das adc aaa (bad) cmp add cmp cmp pop jnp inc movsb ror daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb lds shll imul lret flds rcrl jne (bad) sbb icebp dec sub imul in xor es mov sub ret and ror sub dec mov das bound pop pop xchg push movsb scas int3 push inc loopne stos pop pop cmp pusha hlt mov loop dec xchg rorl ja add add fmull pop and xor addr16 adc je inc insb mov or push sbb cwtl push dec mov inc into adc icebp movl fldl fisubr mov push cmp inc jle stos (bad) arpl sbb mov xchg lret jo pop mov pop mov and test cmpl in jo push sub xchg dec int3 jae sbb fwait add mov lret out lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 dec mov sub addr16 fdivs or rorl xor cmp fcmovnb mov dec pop lds neg xor mov pop xchg push push repz fmuls xchg test cs addr16 test sbb adc lret cli lahf sub mov rclb jo test ja mov xchg out xchg in push pop lret mov lock push jbe lods add fidivrl xor or push dec mov pop aas in daa hlt mov fdiv int add lret inc decl push iret pop sub movsb lock data16 inc pop bound call popf mov cld cmc stos add mov cmp rcrb lcall adc dec std xchg sti nop imul or jmp dec dec jno mov or add rol shll es data16 (bad) movl ljmp add movsb pop cmp enter fsubp mov xor mov add jnp and adc and and pusha cmova scas sbb cmp adc fisub iret enter shlb dec jo sub xor pmuludq mov out pop in stos sub sbb movsb mov lret push (bad) pop adc push and test push mov pop cwtl lods or enter hlt add test in dec xchg fnstenv lahf cli xchg mov cmp jge les mov inc pop mov add mov sbb popa imul cwtl arpl aas pop jg shll xor xchg or adc cs popf sub js cli outsl test xor sbb sbb sub jnp xchg xchg xchg fcmovu mov inc addl lock add enter jo push decl ret fdiv mov inc repz lods (bad) mov dec ja addl pop push repz pop pop fwait inc or pop nop jo repnz xor adcb stos inc int arpl aam out ficom add adc imul aas rorb or stos pop dec push pop pop push mov negb jmp mov add (bad) dec imul add or xchg in dec xchg or add add (bad) xchg iret dec xor int xor outsl or jae or out (bad) cli cltd aam mov insb jne bound jmp mov push test pop mov jmp mov adc adc adc imul add jb mov cmp fadd ret cmp je add xor sbb mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test (bad) xor aaa jns enter pop std and dec icebp adc jmp stos lds cli repz in js test xor dec lcall mov xor jbe push icebp xor adc out fidiv ss incl iret lret ret repz or mov cmp in adc sub addr16 movsb cmp in mov mov pop dec inc xor aad ss sub sahf cmp ss or imull xchg bound adc retw insb inc lods aad scas jle pop das pop pop les outsl repnz mov and popa pop push mov lret push (bad) pop (bad) mov inc cmp jno out fdivrs je ret test dec or daa jmp mov outsb outsb mov lret divl aad xlat add adc (bad) gs daa pushf pushf in stos pop in shll dec push pop sub and (bad) ss arpl lds or pop jmp (bad) pop es sti (bad) decb pop (bad) mov and jns pop hlt mov push xchg mov (bad) stc das or mov inc fs fnop jb adc push push test repnz hlt dec movsb repnz fistpll leave pop and add and jmp pusha fs or aam imul out imul push sbb fs es sub xor insb pop popa jb (bad) xchg cmp inc push hlt stc ljmp test test cwtl rcl mov adc adc rcll fs lea xchg mov mov lcall lea cmpsl fistp and outsb or dec cmp test imulb daa or mov stos pop test scas ret push rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or imulb mov dec mov jns adc mov push xchg clc push rcll cmpsl int3 lea jl es fbld xchg leave or call std sti and push pusha aaa shll pavgw push inc lret mov pop fcompp fwait andl jbe and dec inc push push dec rorl inc (bad) jns movb xor pop aad push mov pop scas addb add cmpsb mov fcmovne dec daa movups jne int3 or mov xor mov lods fincstp sbb jno sub lret mov inc scas dec pop mov lahf ja icebp call xchg push mov xor adc ret pop cmp add ret jecxz sbb cmp and xchg pushf pop inc jle lcall mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div in int sub fmul stos das and es mov popa (bad) (bad) jge pop mov adc pushf xchg dec ficom jns or add jge leave lcall mov dec outsb inc add cmp rcrb and add jnp lcall xor movsl enter cmp push or inc nop pop sbb push sbb sub shr fs jno outsl jno xor loope lret pop xchg pusha adc xor lods xor pop pusha sti mov lods add cwtl test stc push aam or fucom mov lds cmp pop dec mov xchg int sti sub sbb out outsb dec addr16 mov lahf iret lret ds sub popf mov dec fucomp pop mov out les xchg cs adc test mov jb lahf cs adcb xor inc mov xor scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) insl mov mov xchg jmp stc lods arpl ss push hlt and call mov les mov push daa mov dec pop mov pop cmp mov (bad) fsubr pop sti test jb push (bad) aam mov pop out pop jge xor mov insb or and jne fidivr call mov int nop push movl sbb stos push fist mul pop xchg jmp push cltd rcrb push xor inc push (bad) xor fildll ljmp mov xor out or lock xlat xchg add movsb fstps push iret add dec add mov aam push bound lods jne mov push mov adc mov mov clc push ficomp clc in or fildl jbe push outsl repz int3 fsubl fstpt mov mov lock add enter jo push (bad) call shlb sub push or les arpl jno dec fstps xchg dec cmp out ljmp and dec mov daa sub psrad and andl movsb test insb in mov push enter stc mov ficom mov aad faddl xchg andl mov mov bound (bad) maskmovq divl imul cmp sbb jo shrl or xchg in mov dec (bad) (bad) (bad) mov mov add cwtd fwait mov je pop add mov adcb dec movsl add pop cmp dec fimul add xchg and shlb data16 mov mov xchg adc and (bad) repnz inc inc popf mov xor rorl je mov addb pop pop aaa aaa imul out in in in aam push push cld cld (bad) xchg mov faddl and repnz dec pusha add loope call test pop cmp mov dec scas sub pop mov sbb jge js jne xchg sub xchg (bad) jno fcmovbe loopne dec aad dec dec (bad) jg les sbb add repnz aas repz jo std fldenv jns inc pusha pop test ljmp loop fwait scas mov test pop cmp outsb nop pop cld pop sbb xchg fild shrb cwtl fs sub lods mov mov xchg (bad) sbb out or push stos es lcall sub adcl insb (bad) mov mov enter pushf scas stos fnclex test jnp push inc sbb insl and inc jmp mov pop sub lcall pop clc clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov or pop jl push xchg (bad) imulb cld inc adc sub push push pop lods sahf mov imul mov es imul push lret xchg xor xchg adc add mov outsl divb pop jno mov lock jle ja and push (bad) xor iret in les or jge cld insb push (bad) in aas mov xchg in pop test js mov adc (bad) sbb pop or adc repnz push and ret push mov imul rol mov std push cmp ret lret loopne and aad push add sbb out jl (bad) xor push cmp mov fldln2 cs jge sub sub sub mov test lea imul rcrl add xchg mov loop push cmpsl add and cmp pswapd loope cmc cmc mov pop mov repnz ret dec dec push sarl sub mov xchg xchg sub lahf push insb in or xchg cmp test mov or stos lret jo jmp loop add gs jmp sbb or inc push add push xchg xlat in mov clc adc jmp pop mov mov xchg rorb fnstenv mov loopne adc int3 jmp mov or push inc call rcrb leave pop mov jbe scas (bad) inc maxps cmp and jge mov std mov sbb dec dec aas cs pop scas jmp add int3 xor adc inc mov cs jo pop sub xchg dec dec loope sbb pushf mov fwait add roll (bad) ret (bad) rcll lods xchg subl sbb sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov sub test dec call lcall popa pop cmp rorb cmp push das scas add outsb (bad) insb (bad) add jmp imul jmp cmpsl sub iret add xchg mov inc icebp idivl adc or sbb xchg adc fwait lock pop fistpll jp pop and cmp push cltd ja xchg inc es idivb lea mov testl mov jnp sbb sbb lcall sub loope movsb lahf in cmpsl jae adc dec push fidivrl adc sarb cltd mov lods lahf repnz sbb dec js mov xchg call adc xchg gs imul mov cmc lcall (bad) mov lds jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg mov stc subl push xor insb out cmp mov mov loope sarb adc outsl dec scas imul (bad) into sub dec jnp add cs and lock or mov jmp inc fistl mov (bad) punpcklbw insb or mov sub into data16 and add jmp mov sbb popa jnp mov jecxz adc xchg xchg aas xchg push mov testb stos test aaa (bad) (bad) add aaa mov lods nop mov dec xor xchg cmp fsubl pop repnz fistpl call outsl out pop bound or mov cmp push mov test mov mov add ljmp cmp sbb popa push or pop and xor adc or xor mov add scas nop nop movsb movsb push push push into into test mov (bad) notb decl pop or dec xchg iret inc cmpsb ret sub mov add sahf lods mov mov movsl aad adc push dec mov adc cld xchg jp jge decl arpl jbe rcrl pop daa lahf mov xchg mov ljmp mov cmp sbb loope xchg repnz shrb lods mov pop mov jge repnz cmp fsubrp add mov and mov cmp stos (bad) sbb and lea (bad) aam add cmp fldl sbb sbb cmp xchg fwait mov ja push vmovsd rolb xor bound data16 out pop mov cwtl jnp mov lcall out mov out je sarb or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp mov sbb mov inc xchg enter ret daa jne les sti (bad) sub dec xor aaa out mov andl cltd mov sbb sbb dec push inc or movsb flds mov xor jp jns ljmp scas and into pop mov add jno mov cmc popf jbe call adc jmp jae add push movsl mul cmp fstl mov nop dec hlt pushf fcomps add mov mov jp ljmp sub sbb lahf in stos push cmp setbe mov (bad) cmc jmp pop jecxz hlt fidivrl xor adc aas add inc fcoml xchg mov stos fwait xor and sbbb dec dec push rol ds ljmp xchg jl sub add jne dec mov test imul insb push push adc (bad) ja xor mov xor ret leave leave out mov add mov mov jecxz xchg lods mov inc push sbb addr16 out in or xchg dec dec out scas pop xor add (bad) mov mov loop insl inc (bad) lock inc aas cmp inc lcall sub jae insl out scas mov (bad) insb cs pushf insb inc add cmpsl jg dec mov shrb in nop mov call mov repnz push jp jns and jne sbb lea mov mov repnz xchg test mov jnp int3 insb mov pop hlt xchg inc inc out xor add sub repnz fist inc arpl aad jnp shrl adc out sub cltd popf jge std push or sub shlb out roll (bad) js xchg mov imul rcr (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and insl and roll iret push and jl mov pop xlat jns pop jle andb popf adc sbb add test or aas dec xchg lds scas jne sbb xchg das cmp dec mov stos scas repz addr16 mov stc gs push add inc es push or in leave (bad) je ret les push ret cmpb inc pop jecxz in add loope adc mov mov loop das (bad) rorb je mov faddl push (bad) adc (bad) pushf and xchg jb (bad) in sub adc adc int stc fcomps dec pop sbb mov jbe sub xor addl mov dec fsubrs pop std jno inc js (bad) mov mov push add jae rorb leave enter jle roll mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd fwait mov mov inc mov les pop sbb (bad) out sub ds subb sbb out (bad) xchg lret xchg pop mov pop sbb (bad) outsl repnz stos out out pusha push push popf push imul xchg lahf adcl xor loopne xchg or jmp and mov rorb lcall push les mov dec or jl adc or stc sbb fcmove jbe movsb fcmove testl add cld cwtl mov les cmp enter pop and mov imul jl int3 mov mov inc xchg add aam cmp icebp push lret cmp out hlt push xor jle lods cmp adc loop pop cli dec pop push int3 insl mov or add rol shll es data16 mov js in in lea lds jge push push add arpl pop sbb insl add fist mov or inc xchg xor orb ljmp xchg iret ret and push daa sbb int3 sbb jae std data16 arpl pop mov jge fsubs push je shr adc out loopne mov cmp mov cmp call dec add lret int3 push add pop outsb cmp cmp push aam push je push or ja out pop test pop cmp xor sbb cld nop mov insb inc es fiaddl push mov das fisttpl int cmp pop jge sbb mov push int jo and aad jmp fildl xchg lods insl inc (bad) add inc push pop sbb movsb jnp repz pop or xchg pop stos pop stc push mov push pusha pusha lock add enter jo push (bad) call shlb sub adc dec jno es mov stos aaa jno and inc sub enter adc or sbb xlat adc dec divb sbb cmp or ja insb fmuls repz test lcall cs jae cltd adc das in fwait and xchg xor mov stc push xchg mov cmp lret push inc (bad) shr dec inc xchg add adc xor jae (bad) dec xchg adc xchg icebp push adc sbb fcomps outsb pop xchg push mov pop jnp test dec pop out mov cld or shrb sub xchg pop jl dec mov in pop shl popa dec (bad) fnsave mov sbb add mov xchg dec (bad) jb sub dec stc inc rclb les or dec push out jns mov push inc dec push popf insl dec dec mov inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call es xor xor dec cmpb adc loope inc inc clc das stos nop fstps cmc ret cmp push mov imul lret fmulp add les adc out adc jno xchg int3 aas (bad) aas mov adc iret mov fldt (bad) cltd add pop jb pop mov aaa popa cmp and pop int scas test mov xor (bad) mov hlt les into adc popa xor sub sub out adc mov and out (bad) rcr sub jns adc daa mov mull mov les in push shlb jmp lods repz repz inc mov fistpl imul pop sti ret push xor mov aad pop dec add (bad) dec loopne fbld pop dec lcall addb adc gs daa pushf pushf cmp mov int rep jmp lods negb cld mov xor and int xchg fdivr ficoml (bad) loopne,pn repnz add xchg add cmpsb int or mov and pop ds xor ret xor or call pop call and jo ss rolb and (bad) cld add xchg es and pop push mov mov add mov mov or mov push dec push inc jg gs inc jae dec mov (bad) movsl mov and xchg pusha cmc xor sub lds ret out mov dec lret ds mov loopne push add jno cmp shrb cmp dec pop add xor in lret ss fnop jle (bad) cmc and bound inc ljmp hlt outsb or jnp std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub out mov sbb lea cmp xchg xorb sbb int and stos mov inc (bad) mov fs adc add mov mov jb test dec xchg rclb cmp xchg fdivrs aam sbb or xchg rolb adc inc daa mov aad cmp out pop dec cli jb mov jno call aad jp sbb out sub sbb or xor and sti in xchg jno fucomi fxch mov vmwrite int mov dec inc es dec dec shl or repz inc movsb pop bound aam mov dec adcl add in mov iret test out (bad) fisub (bad) loopne cmp add cmp std mov scas pop mov hlt outsb leave jns daa rcrb into (bad) mov icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov (bad) lock jnp sahf xchg mov fnstcw push push int jae mov lret sub sub adc pop cmp sub xor cltd movsl inc xchg jge mov les pusha (bad) repz push mov push mov loopne nop push push jns sti enter inc lods xchg cmc pop ja xor inc iret jne movsb call das insb adc jo xor and mov add push jo movsb dec test jns fstpt shr int inc mov daa sbb call fdivl or rcl not adc or scas pop das roll popf add (bad) fist or mov shl adc xchg xor repz int3 xor (bad) into bound push xchg in sub dec xor (bad) dec mull das test or (bad) (bad) (bad) jmp xchg xchg fcmovu (bad) lahf jnp out and loope sti shll inc (bad) addr16 or and daa scas xchg iret (bad) fisubl and mov ret leave (bad) jmp jb push cmp xchg add jne into iret cltd dec pop push and sub or mov into sbb iret cwtl mov lcall (bad) jge xor cmpsb cmp jp bnd out outsb dec cmp inc and mov mov cmp jp aas pop in mov push jecxz cmc xchg inc xchg adc data16 shll scas popf and rclb xchg sahf imul insb sub addr16 lret fcmovu in sti sub add xlat mov push ss mov adc addr16 dec (bad) sbb mov push pop fstpl and cld sub and sbb lahf jnp out and sti push pusha pusha lock add enter jo push (bad) call shlb cs pop je or pop dec push (bad) les cmc arpl addl sar cmp sub adc pop inc roll jecxz sbb sti call fcoms pop test scas sbb movsl jns nop pcmpgtd jmp pop in bound stc pop loope shll jo shrb jbe sub jl cmp cmp sahf cmp sub leave xorb int jae cs dec loop pop test iret mov adc arpl pop scas mov jecxz call test jl jnp dec and mov sbb inc pop cmp dec movsb push negl test test out or lods outsl dec lret mov xchg add lret and iret out aam inc push mov dec cmpsl cmc lea (bad) divl dec mov dec aaa aaa imul out in in in aam push push cld cld (bad) xchg mov aaa pushf in stos pop xor arpl scas dec sbb add mov fmull insb mov std mov jg ds sub inc jnp mov mov jns inc sbb aas andl rorl jne pop out (bad) js loope or insl inc repz loopne jmp or mov rcll mov adc insl movnti sbbl push inc sbb ljmp xor (bad) fsubl ljmp notb cmp push xor add stos push rorl aad adc xor jmp decb xchg pop sbb in ret mov or inc out ja dec std mov inc mov fidivl cmp cmpsl mov in dec push pop js mov es repnz inc push xor scas (bad) in shll mov pop clc clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov pop push add test and lods jp jo and xchg cltd adc adc imul std xchg mov add sbb dec dec push inc movsl mov lods mov fcmovu xchg cmp cmpsl mov and push jp inc jne jns jmp xor xor and ret test mov or push test push xchg inc dec outsb test outsb cmp les jb sub jecxz aad loop inc sbb addr16 add sub cmp cwtl sahf cmpsb rolb sbb xchg jbe sarb push mov xchg cmpsl hlt or xchg dec jecxz jle data16 mov pusha sbb dec add sbb jns repz sbbb and lahf rolb punpckhdq gs push es (bad) cmpsb push daa dec jecxz lret sub (bad) cmp pswapd loope cmc cmc mov pop mov repnz ret dec dec push cmpsl inc xchg loopne cmp or stos dec andb pusha xor xor enter sbb repz stos mov cmpsb mov push and imul and ret stc mov mov addb data16 insb ljmp rcr popa add enter cld sub lret out lret not jecxz iret bound lret dec xchg je push fwait rol pop or cmp lret push fwait dec sbb mov mov mov lretw and sahf (bad) in xchg pop mov out jge gs cmp xchg dec jo int adc outsl iret xor and sti lods jge in shrb jbe sub addr16 cmpsb push aaa pop xchg cmp add inc inc dec insb ret imul in cmp setl (bad) pop xchg (bad) nop push mov (bad) js in jp daa xchg xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov icebp aas add or mov aam add ljmp inc xchg xchg xchg cmp sbb cltd mov aad cmp push push push and xor aam inc inc loopne bound add xlat ret push pop dec sub push xchg jo dec pop fcoms adc ret fucomip push push or sbbl insb mov out push imul loope dec dec push sbb mov pop imul jg pop xor mov dec ljmp push arpl xorl jno jns xor mov push jle (bad) mov rolb cmpsb sub jbe xchg jmp rclb mov fcomps add cmp jb in insb xchg cmc inc fldt cli pushf cmp movb loope mov ljmp iret sbbb inc xchg jb dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov dec test aas mov and aas into sub popf in pop idivb lahf and inc mov ljmp pop fisub iret incl and jmp or and aaa jne dec aas (bad) add pop repz dec subl push cld ljmp jo lods mull into adc adc outsb inc pusha pushf in mov fimul (bad) ja push ja and inc pop sub scas xor daa sarb pushf adc or jb ja and rcr rcrb (bad) xchg or fildl sahf push mov inc lods rol (bad) cs cmc push xor add ret int3 ja sub jmp push (bad) xor add jne pop scas dec movsl lock xor jno jle js sub adc fdivl sbb xor test or inc (bad) dec test add inc jbe lods sub std push jno lods pop hlt xchg flds xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov cmp fs (bad) das nop bound push cmpb sbb xchg cmp xor xchg sbb sbb mov jo icebp fimull lahf adc cmp inc outsb jmp mov outsb shlb stos add (bad) faddl addl ss mov mov mov xor cwtl jle mov dec andl cmc fildll mov mov arpl cld (bad) dec cmp cmp cltd popf daa cmp mov hlt insl pop mov inc and pop dec pop lds push mov mov pop add cltd jnp ficomp push stc push fadds aad rcll mov stc cmp int mov ret stos jp inc cmp jmp xchg sub or rolb lahf pop inc adc outsb lds dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc into pop jmp jge imul fstpl cltd push testb or or inc push lods pop shlb adc push bound xor sub rcrb fistpll adcb icebp fwait pusha dec inc xchg arpl mov pop into pop ljmp cld bnd scas pop mov je mov roll test dec add (bad) xchg cmp xlat jl punpcklbw jl into cltd movsl (bad) jl dec fs repz add add mov in inc pop ud2 mov mov bound push out inc ret not jns fwait inc popa xor mov jb add jl idivl or js out sub sbb repnz cmc (bad) push pop movsl mov or jb adc fidiv xor mov xor ret leave leave add ds jne divb ror xchg lock fs ret enter sub cli pushf and mov cmp inc pop pop mov pusha mov or test mov popa scas das cmp shl adc xor mov jp jl adc mov in or lcall (bad) lahf inc daa ficom mov pop adc sub movsl rorl xchg fisttpl aam fstps pop mov cs fldl sbb jb jb shlb mov hlt movsb movsb cmp inc nop push sbb xor aas in or adc push les in or xor xchg cs inc adc xchg jle xchg daa lahf sti fimul inc push ret inc movsb mov xchg lock pop inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov lods arpl inc lret inc pusha inc adc leave jnp xchg stos or pop inc sub stos outsb and lret (bad) popa sub push std push mov mov cmpsb in mov inc (bad) daa mov int outsb mov in mov mov pop jge pop pushf out or js in sbb (bad) aad cld add jnp dec ss sti out (bad) sub jo call jle into sbb shrl mov xor xchg xor lret out scas out mov pop fcmovbe bnd lods stos rclb lods (bad) lea test loopne cmc pushf fdiv mov in or lahf xlat pop mov adc insb fistp mov or xchg pop sub dec fildll push pushw xorb fdivl cmc (bad) fwait push mov jge imul pop fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec and dec pop ficoml stc cltd cmp mov push pop pusha dec je movsl cmp cli repz movsl mov test or sarl movb add sbb dec call pop insl negb dec add cmp and les pop (bad) call mov mov adc imul jnp and mov adc adc into (bad) dec mov lret loopne neg or pushf out jmp lret rcrb (bad) lcall jne jo rcrl roll sub stos les cmp insb fisubrl fstpl test jb and lea inc pop and bound js push inc mov mov adc int3 cmp or sbb in fwait pop pop leave lahf mov jle movsl loop mov data16 mov js in in lea and movsl movsl and in in or mov add pop add rcrb loope pop inc pop xor out lods fsubs inc dec mov dec mov ds js add divl gs (bad) sarl insl mov add clc lret jle lea int push repnz dec (bad) je cmpsb mov xchg out pop call cmpsb int inc cli xorl loope cmp setb push cmp arpl cmpsb xlat xor scas xchg cmp lds mov les lret pushw out jnp dec sarb addl adc cli mov pop xchg xchg dec mov cld xor dec sahf mulb sub mov mov popf fldln2 cmp and add into (bad) mov cld outsb push daa aam cmp sbb xchg stc cwtl mov ljmp enter jo push push (bad) call shlb sub fstpt sbb mov or mov aaa jo cmp (bad) mov (bad) sub xor in repz pop add rolb cmpsl (bad) sbb shr (bad) jg xor (bad) scas cmp jb notb push sbb adcl xlat les bound sti into lcall jmp (bad) push fsts cmp jbe lcall add cmpsl testb (bad) aaa outsl test and shlb mov movsb leave sbb push push into pop adc fsubl movsb dec pop aad pop rcll add rep scas int pop inc push loope pusha push jo mov mov std jge rol push inc cmc je mov in xchg cmp mov fstpt das sbb frstor add adc inc lcall fisubl paddb cmp test in orl lods inc adc movsl movsl test dec cmp arpl call adc imul cmpsb test jmp dec mov mov sbb fcoms ret sub xchg jne cmc mov rcll lcall mov and push inc enter mov sbb aam ret cmp fmul and jne jmp pop push jno jno push leave pusha push jl insb bound cmp pop lds mov mov cmc cltd xor or cmp clc cmp xor mov dec inc push cmpsl cwtl sahf test and je pop int dec jg andl mov cltd mov jno cltd cmp dec mov adc lea gs push std pop sbb rorb sar mov dec stos mov stos fcomi loopne dec mov jnp lahf mov ffreep mov inc cmp and pusha pop xchg pusha sub push (bad) xchg lods inc fcmovbe mov aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl fbld mov jnp sti adc mov fstl icebp jbe cmpsb call insl inc outsl scas jno (bad) icebp sub popa test adc cmp and pop dec pop mov or lfs sub shrl pop mov (bad) mov mov notl push xchg lods push in add mov dec xchg pop and inc jp sarl jg jmp aam mov int xor xchg sub dec jmp mov (bad) addr16 mov test sti add jae sbb mov cmpsl ljmp push sub jae pop inc cmp mov lods sbb insb push repz loope add xor pop push sub lock (bad) jbe mov add pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov out sbb mov and je pop out add pushf (bad) mov dec mov sub xchg popa add push pop sbbl xlat inc int3 inc dec jg xchg sbb adc push push jp jmp push ja imulb pusha test sbb xor divb xorl cmp and sub inc fs mov cmp adc in xlat xchg jne pop mov mov or outsl jge jo jmp sbbb add push pop add or jmp jp cwtl or divl or adc xlat out cmp rorb mov pop push lahf cmpsl xchg test stos xor (bad) fcoms test adc gs lock cmp mov insb clc dec outsl inc lret enter sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or mov push mov out xor enter or pop xor clc dec mov mov push and cmp mov mov outsb and dec adc data16 shrb lds adc mov in loopne popa jb xor rorl mov outsb arpl mov xor dec mov adc das cmp mov scas test pop xchg stos sub xchg cmp mov jns mov mov into xchg and inc cmp insb cmovg out (bad) insb fwait add std adc sub mov int3 test mov pop fcoms (bad) inc mov mov xchg decl mov lds stos push cmp xlat bound pusha call pushf mov test pop xchg les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl iret mov xor adc xlat outsl jmp jecxz mov jmp movsl pop add lods or inc fcoms xor ret push push cmp (bad) das jg push and jb xor popa bound repz aas mov sbb sub pop cmp xor nop mov les mov pmulhuw xlat sbb (bad) pop bound lea sub movsl dec mov sub pop cld dec adcl mov rorl lods loopne xor jo shrb aas lret je or test push mov mov sub cmp (bad) sbb xchg bound call in mov std int3 pop or jge inc xchg sti mov mov daa out stos mov adc mov or ljmp mov push (bad) call shlb sub fstpt sbb mov or cmovb adc adc cli sahf fucomp lret (bad) mov jge pop mov cmpsl dec cld ret icebp sbb cmp inc inc inc push stc addr16 push jmp xorl xor mov pop daa xchg push pop ja adc xor mov inc imul mov test les mov arpl sbb inc lds lds dec or outsb (bad) pop pop mov imul and dec sub mov and mov xor sbb adcl aam test in add cli aad push or inc inc dec jae insl and stc dec cmp push add in mov (bad) adcl popf popf sbb call (bad) lods das out sub push sbb popf cmp icebp and cld (bad) xchg mov faddl sti fs outsb mov lret stc sbb mov add (bad) and pop or lds fstpt iret pop mov es gs test jo shrl mov arpl nop sarl (bad) lret jb add push jge xlat sub out jp movsl mov sti push js popa mov mov enter jecxz mov mov inc fs jle cli gs push push aad popf (bad) xor mov xor ret lock and add xor sbb fisttp leave fstpl pushf push mov cmp dec in inc add push cmp stos lret clc mov ficoml sbb mov jne push scas jmp or aad and push sarb lahf popf sbb add out mov loope mov lock jnp jmp lock ljmp sahf cmp movsl pop mov and dec adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov inc lds jmp xor jg mov outsb cs mov or mov cmp mov out mov movsl push rorb hlt js imul lcall outsb cmp gs call xor jmp xchg sbb jae mov lods int pop fdiv pop in jns shlb jge adc pop adc es paddusw and inc mov mov dec arpl xor jno icebp lret mov fistpl aam mov rcrb xor push enter or aad shrb lds test cmp fstpt cmp (bad) lcall and fsubrl and push mov add lahf jg lea lods (bad) sub test in add addr16 pop mov repnz ret dec dec push into cs lret mov mov hlt mov lcall movsb dec add in into cmp dec jns test mov ds test jae xor sub xor push pop pushf sahf jge jg les fcmovnb push pop mov cmp fbld addr16 xor xor cmp inc ljmp sub imul aaa add lcall jns aas cwtl add pop and dec fdivr cwtl (bad) jae mov xchg lret sub push arpl inc addr16 pop fcoml loope pop (bad) xor pusha jnp das and mov cld dec lock test mov inc sub pop jg dec ret ja in xchg jbe insb push call iret scas cmp leave cmp push push add pusha pop scas jge fmuls mov sub dec loopne xchg cli xchg cmp idivb int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns pop push scas adc js rclb stc mov shr sub popf ljmp arpl aaa test test std pop mull shlb mov jne lcall adc daa cltd shrl push data16 xchg sbb inc and cwtl (bad) cmp cwtl jg ret xor movsl lods movsl adcl ret pop sub shll ljmp push mov jnp mov pop add fdivr push mov jns cmp inc or outsl lret or into push push cmp jmp add or xor push inc sbb mov lock sub pop xchg lret push cli push ss and push mov xor mov add les mov adc test rcrl or sbb repz xchg les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl stos inc xor bnd imul rcr or sbb push push jae (bad) aas mov js mov addr16 lock add or push ret (bad) fucom aam push stos nop push lret mov rcl inc test pop sub dec and out and rorb jne dec dec clc mov lock jmp pop adc nop push or inc cmp repnz or mov sbb cs mov movsl fdivl clc es sub cmp dec sbbl pop subl jge fstl jmp ljmp test ret shll sub aas (bad) cmp and inc push std (bad) mov scas div cld out repz mov fidivrl fidiv mov pop sbb ret cmc movsl out daa mov leave into jecxz loop push push into into test mov (bad) pop pop xchg mov aaa imul out in sti cmp xchg sahf pushf cmp gs xchg rol mov fwait test add add mov add or and push std (bad) fldenv fcmove and sbb cmp adc cltd jo stos xor movsb xor mov or hlt jo rcll divl xchg loopne stos sub test mov mov clc daa inc cltd in and xor bound cmp adc mov jnp je loopne pop dec xor push sub arpl or les out mov xchg xchg (bad) push add mov dec je xchg mov and xchg lods sbb popa test xchg dec std push lods mov leave test mov mov fidivr fbstp inc repnz cld rorl mov fsubs inc xor movsl movsl test dec cmp arpl call adc imul insb push push jns dec pop cmp xchg imul fistpll stc shrb dec lcall cmp lcall outsl sbb mov (bad) push mov test jno mov pop sbb dec fldenv in and and insb ds mov in aaa imul fistpl cmp cmpsb or sbb pop jecxz xchg repz out sub scas push push or icebp sbb ljmp mov into mov ret test mov xor (bad) out mov rcll add movsl cmp int3 mov xchg test xor sub xchg scas lret loop roll out out adc mov xor pop jl jbe pushf push or and pop dec out scas sbb loope fiaddl add ret leave leave ds jne divb cmp pmulhrw adc sub add adc xchg es in loop rol sub cmp loope lea pop inc mov cltd dec in pop xchg loopne mov cmp and cmp add mov rcl lods jne xchg divl pop lahf test xor out mov data16 and call rorl inc xor add add xchg mov pop (bad) je cmp xor (bad) push cltd cwtl and sbb cmpsb xlat pop sti div xchg add adc in adc jbe lock call aam inc xor fisttpll xchg or xchg push je pop adc lcall cmp (bad) dec pop mov pushf pushl adc shrl (bad) jle add xor xor dec into out pop mov mov das mov push push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait xchg fstpl xchg loopne fbstp test js jle pop xor lret in (bad) in mov iret mov adc push mov (bad) sti repz cmc divb mov (bad) xlat enter adc fdivrl in movsl pop data16 cwtl (bad) jge mov pcmpgtd jno fwait lds loope pop bound repnz xchg lcall dec mov jne xchg (bad) mov popa (bad) scas jne das mov mov add fmul push dec negb add gs loope sbb rol dec jbe loope and jp ds pop xchg inc mov (bad) fmull and scas sub mov (bad) int3 mov xchg pushf popf mov aas int (bad) out sbb std cmpsl jno or fisttpl idivb fstl xchg cmpsb mov mov cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound out cmp push cmp mov pop sarl jle mov imul lds push std mov test push mov stos stos push fcoml nop sti add xchg inc dec cmp popf ljmp (bad) mov sub adc loop lret xchg cmp and hlt leave imul stc (bad) lock mov cld lahf xchg xchg dec (bad) lock add xor mov sbb dec jne jns xlat push data16 push adc add xor inc push mov mov movsb divl leave pusha nop cmpsl mov jecxz inc or mov repz arpl xchg mov jecxz lcall push fldt mov sub pop mov cmp sbb xor mov dec xchg mov pusha fistl testl std mov (bad) (bad) (bad) loopne mov js in in lea and movsl movsl and in in or mov add xchg xchg loop scas jle or push mov push sarl hlt cli pop scas outsl int3 xor out (bad) dec test mov adc lods bound inc test stos cs jne mov mov std xchg dec sub or add into xchg jmp adc lods push add pop cmpsb inc pop xlat xor popa nop and sar sub cli imul and dec pop rolb (bad) pushf ret add bound es or adc jge add jp in push gs xchg in movsl js xor imul (bad) addr16 inc xchg in (bad) jp push out pop inc push es xchg jmp jnp mov inc mov int3 jp ja mov lahf push adc cmp dec mov rorl dec and pop out mov pushf fisttpll rcrb ds movb jo push (bad) call shlb sub fstpt sbb mov or inc inc dec adc into leave into and sti xchg fcmove mov xor mov push lret rolb pop fmull inc arpl sbb push adc xchg je nop mov push xor ja mov jmp mov mov iret popf push (bad) jno jg movsl test dec lods push je dec jae sahf sahf mov inc sub fidivr mov or movsl pop fidivrl cwtl lods sub mov (bad) jae int loop xor inc bound rcll shr or or cs inc int3 mov jle cli xchg in imul insb (bad) aas inc adc out mov mull mov shrb or pop mov ret mov adc pop lods fcomip inc pop cmpsb stos (bad) dec dec xchg push mov cwtl in xchg mov rorb mov test cmp arpl call adc imul insb push push adc (bad) ja add xchg adc xor adc lods xchg cmp and lahf out loope jne (bad) xchg jecxz inc dec dec add jmp mov cld les cld push fwait hlt loopne fwait (bad) gs or cmp mov addl sbb xchg jge hlt imulb inc or dec ret aad iret mov cmpl sbb adc and jl sbb inc xchg push add xchg mov shrl movsb fildl mov rcr lods clc cmp mov clc adc or sbbl xor push jns ja inc xor mov mov std or xor and daa mov jb in xchg and cli pushf ret push fisttpl xchg popf fsubrl cld push cmpsl (bad) jno inc rorl (bad) repz cmp xchg aam icebp jne daa daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas popf ffreep mov pop or xor int push shlb insl pop pop adc or repz pop push dec shll xchg movsb jns jo scas fnstenv push fidivr andl add mov das ret fwait lcall add push (bad) cltd push push mov jo sbb push call pop mov insl neg xchg test pop in pop enter push subl into mov mov shll push mov and adc rcll pushf icebp je mov sub int and iret jge rcrb jl mov test aaa mov in mov push inc xor int3 ret bound pop inc js jg out sbb jns adc call jp cli clc mov rcll push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl enter mov add sarb jb insl add call gs pushf dec sbb mov (bad) jbe lret faddl inc push dec test cmp mov movsl outsb sub je jbe sbb jmp push xchg ret int3 mov imul add mov pop or adcl xor outsl pop aad push or sbb lods daa push in (bad) cmp sub cmc sub cmp ret adc leave xchg jl into movb xchg fnstsw sub xchg out out fs stos cmp sbb mov mov insb ljmp cmp push les rolb pushf insl xor repnz mov mov in mov sub sbb add roll cmp push mov pop jge cwtl enter xchg mov imul jmp dec dec jno mov or add rol shll es data16 lods dec xchg cmc cmpsb mov fmuls aam outsl push push aad xchg sub loope pop fdivl loop adc movsl fcomps cs lret aam sahf push jmp jnp and jno mov mov repz cmp pop xor jle xchg bound xor pop ja aaa dec jbe pop nop mov adc sti mov arpl dec or jns fwait sub fdivrs jbe fwait dec jo cmpsb and (bad) cld or push push xor gs mov dec out or add inc in lods jmp and push add test rcll in dec in and jbe (bad) rorb push mov out cmp (bad) mov push lret es cmpsl jb (bad) sti (bad) sti (bad) (bad) stos or (bad) lds ss push jno push adc dec adc mov adc movb orl lock add enter jo test sahf scas mov add (bad) mov movsl cmc mov xor shll mov sbb cld inc ljmp pop fcmovbe mov xor jle add jb nop mov jns inc xlat sub popf nop daa xchg leave daa xlat out lods call push xchg cmpsl inc push cs cld xor loopne,pt sbb and push xor xchg jmp and push mov xor inc adc fnsave xor xchg fsubs orl loop xchg xorl cld imul dec xlat fbld add xchg add add mov sarl sbb test jle pop cmp push adc pop mov dec pop push pop sbb stos fcmovnbe pop pusha adc (bad) repz lods mov push cli jae rorl notl pop push adc dec dec int3 pop push arpl into sbb cmp scas mov dec pop sub sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl pop ljmp fisubrl push dec sub fbstp mov and cwtl cmpsl jecxz (bad) sahf sbb or outsb inc cld gs cmp scas aam push enter xor (bad) xor imul enter mov inc (bad) rcrl in dec insl or out and adcb repnz fimull cmp adc cmc and ret and jle push and insb repnz pop inc dec mov (bad) (bad) adc mov push mov scas xor push and test xadd inc lcall fwait and ret mov add leave jge dec mov iret pop data16 adc dec cmpsb std std ja pop fdivr push mov stc out test sub aad ret mov add (bad) sbb out push mov sti fs outsb mov lret divl aad xlat adc (bad) gs dec sbb pop jp xor add cmp cs aad sub lods xchg sub imul sbb stc jp push mov mov loop pop dec adc sbb scas call test das mov sbb cmc sub xchg fs mov sbb or xchg pop mov and shr adc mov call std push dec mov fadds inc test in dec fisubr scas lock dec push sub in rcrl int bound xchg and js push dec or mov lods (bad) out push adc pushf lock lret mov lods mov sub jae (bad) mov data16 xchg fxch mov push fcoms push popa mov inc mov mov cwtl or sub loope ficompl add (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and enter mov test (bad) rcll lods in mov pcmpgtw vfmsub231sd add xorb mov mov adc repnz adc js mov mov scas mov sbb xchg jae mov and xor and mov cmp (bad) xor (bad) stc enter cwtl out xor inc loope aas adc into add push cmp add mov ret je (bad) xchg shrb insb and dec call adc mov scas imul nop and inc shll xchg lret sti add xchg jecxz leave inc movl dec push cltd in loope or xor nop add enter fnsave jb inc or sbb or stos dec jb sub out movsb sub test pop sbb (bad) ds lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or (bad) xor sbb ds out cwtl (bad) in lods mov and and fidivl push add pop inc pop push mov cmp add mov fcomi je sahf rcll aas adc repz test fs pop adc sahf repz add js mov (bad) fcoms dec mov or or add sub and stos add aas fwait jmp lods dec adc push push push rorl pop mov mov lds push sub dec sub inc (bad) or inc sar fcoms lea mov dec idiv mov insb aas add jl repz loop pushf decb rclb movsb xor inc lods cmp mov adc ret (bad) call sbb ja inc mov stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) mov adc xor mov (bad) jge adc cmpsl cs dec cli ljmp xchg outsb adc daa fimul pop lods mov adc lcall adc and add xchg jb popf (bad) jbe mov (bad) orl sarb xchg imul sub fwait and pop jmp sub mov test push jge (bad) fnstcw push sbb push lret jnp mov dec jb test lcall or scas repz (bad) repz push push pop lret jle push mov movsb pop or mov enter xchg out inc mov ret adc or pop mov ljmp push fld jecxz (bad) cmovle enterw (bad) pop cmp inc sti sbb add insb add (bad) jno call arpl les out push jae fadds push sub orl lock add enter jo push (bad) call shlb aad sbb iret adc outsb scas mov dec mov cld (bad) test cmp daa sbb xchg mov pop adc push pop cmp jge aas mov xchg test or xor jne add jbe dec mov jmp inc movl pop mov (bad) mov jb mov cmp out add inc pop xchg dec jns daa jle gs mov cmp std cmp mov (bad) xor adc mov addb jl data16 movsl mov lcall mov mov xchg sbb cmp test fdivp jb xchg and pop push sub or dec call ficomp mov mov pushl lea and sbb je aaa imul out in in in aam push push cld cld (bad) xchg mov faddl xchg xchg cmpsl cwtl fildll iret cmp clc daa mov dec (bad) icebp jae adc (bad) outsl lahf pop iret xchg jg data16 and or or out imul lds lahf std clc sub fistpl (bad) push cmp lea sbb cltd mov fbstp ja fimull dec cmovl cmp cld inc out or movsb jo (bad) (bad) xor xor mov xor mov add push call (bad) lock and add sbb outsb add dec push lods movsb jge std sbb add and jo push inc or (bad) (bad) in pop lea or aas sbb sub cwtl mov push xchg push ds ficomp out fwait push incb leave divl gs jecxz sub ljmp insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov pop xor cmc aas xlat cmp add mov test addl or cmp and (bad) jmp cmp cmp push add faddl (bad) hlt int in push jl or pop pop sub shll fsubs scas mov mov inc int3 and dec ficom push loope push movsb sub and hlt ja or popf cs jp inc sub lods pop sbb je push adc jns sbb (bad) cwtl popa add sbb pop cs mov xor and (bad) mov jp (bad) add mov out add sbb (bad) xchg jle mov xchg mov lret ret fwait repnz inc sahf xor mov add mov in push jge xchg dec lret pop mov pop pop add pswapd loope cmc cmc mov pop mov repnz ret dec dec push mov push xchg push hlt movsl push imulb lcall jne mov (bad) adc or sbb mov mov cmp std inc scas data16 andb outsb xchg mov mov jbe js dec and push cmp or insb push std add and ds scas or fs cmc gs jmp mov jb add (bad) jbe das xor inc rclb sbb jo xchg or sbb and ret mov outsl daa stos add inc mov (bad) mov loop mov push jbe js xorb imul fwait pusha or leave mov mov test inc sti cs or cmp jne pop les push test jae add aam in pop adc test and mov or (bad) dec inc dec jo push add sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd les sub popa lret aaa mov sbb sub pop pusha cmp ror fisubrl jle xchg jg pop mov jmp ss imul and es push fldt jl sbb cmpsl mov js push scas cmc dec xor mov addl or mov dec bound sbb inc std movsl cwtl ljmp les adc xor mov lret ret fwait repnz movsb jl or stos lds fisubl rcrl loopne pop mov jns add nop mov loopne inc test adc incl mov xchg jmp xlat pop andl cld dec sub fs shll flds bound fnstenv pop mov repz out popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg dec inc pop push pushf mov shufps inc stc sub lea jo fs out mov push out cmc pop cmp push (bad) ljmp ja imul lahf incb and stos adc xchg stos frstor js sbb test mov addr16 mov fwait mov jo xlat pop insb add xchg jb (bad) ss loopne push mov cmp mov into (bad) mov test test stc mov jp cmp int3 cmp mov cmpsb cmpsb inc test or mov push jb and repz ret ljmp inc popa popf mov scas inc mov jns loope push and ds cmp sti imull gs int3 fwait dec daa jbe scas push shr sub outsl decb outsl and ret mov and or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov mov fbld jl data16 jmp fwait out aad cltd add jo sbb mov mov xchg or xor mov and and in subb add push jp add xor and cmp jle and add test mov xchg sub xchg adc addl add jl jecxz sbb (bad) jo jo jae fisttpl stos and push push lods xor mov xchg fisubrl dec or scas sub push divb push mov inc lahf std push mov or data16 jecxz xchg inc dec fwait mov push adc ja add loopne fwait shlb xor jno mov in lcall outsb ljmp fnstsw jl inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call jecxz out inc in repnz push imul cmp dec xor dec sub dec mov sahf lcall mov inc fdivs mov rcll adc jp adc xor clc pop outsl dec call adc dec add mov ret sti sub cmc adc pop scas pop mov sbb repz nop push dec mov sbb or push xchg (bad) xchg sbb cmp pop sahf (bad) outsb rcrb lds (bad) pop jae jo out dec lock fbstp and rol out ret xor in and pusha pop or xchg and dec cmp xor or arpl or push xchg mov in add mov dec mov sahf lcall ds mov (bad) push in mov xor adc mov insb push push adc (bad) ja xor mov xor ret leave leave ds jne xchg adc rcrb mov push int3 mov stos sub out ret fistl mov dec inc add ret fs cmp fs hlt or xchg (bad) rorb int3 out lods mov adc jle mov jge cmpsl mov xchg lahf jl mov sbb mov xor push scas (bad) out xchg or xor test fidivr out inc aaa sti das xor add mov or sub sti xchg cltd mov pop mov or xchg add sbb and mov addb or stos push xchg (bad) xor sbb (bad) insl and and out xchg xor sbb inc sub cmp push inc mov push dec sqrtps sti mov stos jmp jge push jmp loopne xor daa mov jns pop out scas sbbb ret sbb push jle mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub stos sbb add sbbl stos sub mov (bad) xchg inc (bad) aaa je imul cltd int fnstenv cmp xchg repnz jl add dec add sarl mov js mov ljmp mov test pop aad jge lret (bad) jne cmc sti lret das jbe fninit lret sub dec mov dec mov out add push ljmp imul ljmp sbb lock ds cmc fistpll jnp sub inc cmp test in add jne dec add push jno or add lds pop jns adc or mov bound test sub fldz (bad) call out mov sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos clc in jo in push (bad) aad mov xchg and mov (bad) mov adc das mov enter push cmp sti and (bad) add mov jo push sub and lods in xchg adc nop xor lret ja fwait sub mov rorl lret xchg pop jge scas inc fs cmp rcrb jmp call jb mov in adc jo dec and and imul mov test dec add sub cmp seto mov add inc and fild mov cmc mov (bad) and pop pop mov add push pop jns add xchg ret rorb xor test xchg mov xchg arpl inc lcall sarb sbb add rol shll es data16 mov js in in lea roll es cltd cmc out mov or in push dec push and std cwtl push dec aam lcall jmp cmc hlt add cmc push imul lock call pop mov jl adc stc xchg push mov test dec addr16 adc and les int and gs stc scas mov dec (bad) and ret into movsl clc push inc jns pop jmp mov cmp sbb jg pop scas mov pop pop and xchg sbb cld ljmp repz lahf daa pop popa mov jno or jns aas fwait (bad) mov xor scas scas ljmp mov mov mov add mov call cld pop sbb mov jge pushf cmp leave repnz push mov add imul push push pusha pusha lock add enter jo push (bad) call shlb sub fildl xor sub fildll dec lcall aad ja data16 aad pop lods or std mov (bad) aaa adc mov adc enter mov mov mov push ret imul aam lret ja push call dec rolb push (bad) gs push mov outsl imul std insl xchg inc and cld ljmp jnp pusha jno fnop pop or adc loop sub fldpi push daa jge imul sub mov divl pop or enter mov inc xchg sbb dec cmp lods mov sbb jl push jnp stc inc jnp test or mov addr16 mov or mov pop out jbe jbe xor clc outsl cwtl mov jmp mov aas dec dec mov cmp ljmp dec jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc call add push jns icebp dec les add stc mov bound adc in cltd cmp ljmp mov sub fnop mov sbb pop aas fmuls sbb adc ja mov or mov lock mov (bad) xor ljmp pop jnp enter sub push push pusha add mov jle aaa jne (bad) inc inc mov pusha jb imul out movsb movsl shrb add jmp xlat mov mov adc iret stos mov inc jg push hlt mov mov scas adc jo aam adc fs sbb jb and test push lock loop pop dec push inc out fsubl xor inc notb mov mov addb adc gs daa pushf pushf cmp mov rcrl and sahf ljmp addr16 loopne js sub daa ja xchg adc dec inc pusha mov xlat fisttpll (bad) mov fsubl mov or sub mov in loope test test cmpsb push pusha shll push xor int mov mov jae dec mov mov (bad) repz mov cmpsw cmpsb sub xchg popf in idivl add cmp add xchg dec sub sbb dec lods dec adc pop out rorl int cmp (bad) js mov pause js (bad) cld das prefetch fdivr inc xor pop mov popf addr16 mov inc mov negb scas fist push and sub cmpsb cmp inc lret into mov mov mov ficom (bad) or pushf and pop add loop xchg ret stos rcrl addr16 push cmp and popa adc sti xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov mov sbb dec (bad) pop inc bound addl lods in adc adcb stos cmp insb pop or fsubrl dec dec add repnz (bad) inc leave or xchg (bad) cwtl xor test pop cmp dec lods jg cmp scas ret (bad) inc sub add add sbb inc out cmpsb into xchg je push mov push xor jae aaa mov ljmp cmp ret sub xor dec aas loopne lods inc mov call jecxz,pt aas out or lds pop stc push cltd (bad) aaa clc sbb stc sbb daa add mov xchg aam imul iret mov ja scas fstpt xor cli sbb bound or sub xor add inc inc mov test sahf push xchg sbb or in icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov mov dec jp jl ljmp or mov int pusha loope mov inc rcrb test cmp pop and mov mov and dec jb cwtl add jp pop cmp imul cmp mov mov dec mov sti movsb in xchg inc mov scas pushf ret aad push out repz (bad) (bad) in scas idivl lret mov mov xchg call stos rorb jns fsubrl andl sbb pop lock sbb bound int3 (bad) pushl jl aas pop fsts fisttp cmpsb push std adc and jb dec cwtl sub popf push (bad) lret mov xorl cmp (bad) push mov sub out push xor addr16 test sbb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl test cli ret mov dec or inc arpl popa inc out enter and into xor imul push add mov (bad) mov xor mov aam (bad) mov xchg mov stc popl fs add inc or jl mov inc mov ret (bad) mov jge push xor xchg mov int xchg lcall or jp adc fdivr sub sub repz int mov loopne xchg pop cmp add mov cmp xchg aam sub adc daa pusha cmp mov in pop xchg testb xchg nop add faddp push scas add cmpsb xchg int sub imul jmp aas mov insb test jns dec pop jp or out out add enter jo push push (bad) call shlb sub fstpt sbb mov dec cli jns xchg cli das jae or popf cld stos add mov mov dec add out xchg mov pop into fidivl mov (bad) idivl outsb mov (bad) stos lea insb push adc xchg rolb or insb flds (bad) leave push inc inc aaa dec loop stc (bad) (bad) cmp insl mov lcall aad les push push add (bad) mov jnp mov int3 jp cltd sub mov pop jae popa roll shr scas dec xchg xlat stc or gs mov xchg push stos jno push out adc mov cltd xor mov mov scas sub cmpsb ds add in and pop adc or testb jg (bad) cmp fsts loop push dec xor cmp testl clc in mov sub (bad) movl xchg add pop mov faddl sti fs outsb (bad) in pop or imul jmp scas jl sub addr16 bnd loop in arpl push push mov sbb fistpll push or adc loope int3 adcb xchg inc pop jmp loopne push mov repnz jo fdivs push or es fs stos adc pop mov jae pop cld mov fisub cs mov pusha adc xchg or and cwtl enter jp sarb icebp sub jp push adc xchg lcall (bad) stc dec push popw cwtl adc inc arpl cmpsl lret int3 movsl sbb out dec aam lcall sahf lods lcall pusha xor inc push das je nop lret inc mov scas (bad) xor scas jl inc in fmul test pop push or jno les pop inc jmp in xchg jne out mov sbb xor mov lods mov aad xlat adc (bad) gs daa daa pushf pushf cmp mov rcrl (bad) std mov addr16 sub or (bad) stos push inc cmp xchg sub cmpsb dec mov pop aaa scas inc sub dec pop jge jbe jb adc test add or out lds cmpsl fsubrs jmp push js,pt shlb cmpl loope lods fs xchg fnstenv and and sub xchg (bad) (bad) cli cmp lcall cmc cmc sbb inc call sub and out cmp mov sbb cmp arpl adc loop jno das adc (bad) push sti mov push cmp mov inc inc push push sub lock mov xchg mov jg jae cmp lahf pop xchg dec xchg or imul push pop pop (bad) pop mov decb jb jno jle jle jo cmp or pop in loope cmc mov pop mov repnz ret dec dec push into cs lret mov imul push pushf insl ja loopne add push lahf push ljmp mov xchg ljmp jge orl mov roll mov pop outsl popa (bad) fadds inc and ja ds mov xor dec sbb mov (bad) jb push dec stos push and aas xor mov mov dec push push mov mov test fs pop and aaa mov jnp cmpsl pop rol push dec int mov dec cmp dec pandn fwait pop sbb mov mov push add dec cs int aas bound test add aad mov dec jae push cmp sub mov pushf test sub pusha adc roll out roll lods test test (bad) in xlat xchg pop dec ljmp int out out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc mov sbb call inc add xor sbb popa sbb leave mov sbb movsl out cmp push push scas dec fwait inc mov ss pushf in xchg fcoms mov leave sub gs lock mov add fcmove aam adc fdivs daa sahf lock mov aas mov sub and cmp or cld imul jns and movsl lea mov cmp xlat push das mov shr (bad) dec jnp sbb hlt mov adc sub ret jae lahf (bad) cmpsl cmp fild cmp fidivl sarb cltd int sahf add lods out repnz sbb xorl movsl dec nop inc inc ss cld push xchg in orl adc push lods xchg inc fs pop xor adc sub mov sub test nop call cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu (bad) or cmc nop sbb mov (bad) addr16 sub call stc jg clc ror addr16 jl and pop lret scas lahf dec leave rcll and into lods fxam icebp aas add xor dec push insb out ss mov cmpsb aad xor push push jo,pn arpl and sahf xor cmp lods lret in ljmp adc ret sti xchg xor js or imul xor cmp xchg icebp jmp push xchg sbb mov dec xchg test xor inc sub sbb cwtl ror movsl dec xchg sbb fprem aas sbb push imul sbb stc icebp fstl pop jb sbb mov sbb push fiadd and popf addr16 data16 lods mov jle mov pushl loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg repz loop les pushf ja jbe sbb or (bad) xor adc or test mov ret inc in bound jle pusha mov mov popf icebp xchg bnd sbb add es jno jl push movsb shr jb adc sub mov pop sti push mov sahf mov or and inc sub mov jp xchg jl push inc mov fs (bad) xchg (bad) push (bad) lcall inc mov lds add mov xor lret add es dec lret mov sahf xor lea and rolb aam test mov adc mov add inc pop inc iret imul sbb mov jge flds cmc movsl dec pop es adc pop or inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call mov sbb leave mov mov pop ja push fbstp out std daa rorb outsb inc lret leave sahf mov sub mov test sbb or dec cmpsb loope outsl enter in jbe cmc es lcall sbb popf shll loopne adc mov (bad) mov daa cmp mov pop (bad) ljmp jmp or cmp sub sub ret outsl js jno or into loopne xor stos xchg xor in call pop mov fdivs cld or xor rolb inc jmp mov or sbbb mov inc into push sub es cmp cmp mov pop fldl dec sub push cmp push je mov mov clc clc insb insb push push adc (bad) ja xor mov xor ret leave leave ds jne fcomps dec fildll outsl and loope mov pop lods xor jo fs inc mov fadd push das out les aam cmp imul fidivrl push jl cld sahf cmpl stos out push arpl xor pop fdivrl mov bound jge test add inc sub xchg jl xchg mov aad gs sub push adc lret adc push pop push jo aaa fwait in jmp lods sbb clc in pop cmp arpl mov arpl jne enter mov movnti adc mov dec roll pop movsb dec in scas ret mov pop sbb sub mov push (bad) jmp mov mov and xchg in fbstp es or add mov inc inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp mov scas mov stos clc mov or cld cwtl jo loopne adc add cltd rcll xchg xbegin data16 xchg shlb movsw and sahf mov sub ret insl js jno or mov push cmp sub sub cli call dec std loop stc gs mov pop neg adc dec mov lds push (bad) ja arpl movsl mov mov xchg push cmpsb stc (bad) out push push hlt popf inc jo js sahf and push push mov fistpl xlat or pop mov pop ja push fbstp movsb pop inc daa pusha or outsb iret lret (bad) popa pop push (bad) dec sbb ss and push outsb lret (bad) cs lret dec mov js mov jbe xchg aam mov scas mov stos out sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd xchg and mov out shlb orl sahf sbb mov cmc outsl (bad) jle (bad) icebp lahf cmp pop or out iret fsubl movsb inc lods xchg aad repz sbb mov dec aaa sub das imul pop aas pop xchg mov jo jnp clc sbb push cmp fisubrl lods aam inc jo adc push push add jecxz pop shrb js dec (bad) lods adc cmc sahf fcompl in or (bad) pushf mov sbbb imul (bad) cmp aam pop out xchg repnz pop dec sbb fwait mov stc vcvtss2sd mov xchg les and hlt xor mov hlt call dec sarb jo in push jno in or pop cmp and xchg addr16 int3 adc decb adc adc or sbb rol shll es data16 mov js in pop clc addr16 add mov mov enter sbb clc pop add repnz daa js pop je jb dec icebp into test test cwtl stos xchg mov sarb add cld add shll add pop aas dec adc mov jae add std push pop jg jbe stc add cmp mov fimull aad movb sbb pop mov ljmp data16 inc cld sbb add mov mov sub rclb cld insl scas and arpl adc insb xor adc jne call add daa fsubl xchg mov movsb cmc ljmp mov jno cli xchg cmp repz call outsl jp xor xor int3 stos iret xor stos popf hlt mov orl lock add enter jo push (bad) call shlb jg in pop lcall fs jg ss icebp addr16 (bad) or cmp fdivl in test mov mov fldcw cmp mov xor inc jmp daa and xchg and fwait stc loop pop dec and loopne das push ss or popf loopne (bad) daa xchg push jg xchg or sub (bad) sbb outsl lret in stos xchg sbb mov inc addl pop add iret sub xchg (bad) (bad) jno loope daa nop lods fcoml movsb pop xchg adc loopne adc mov lret js push movsl push dec mov adc lock mov mov xor inc or inc pusha ror enter movsb clc mov jb mov in sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec jae mov cli xchg inc call bound hlt adc shl mov jmp push adc cltd pop stc xchg and adc je testb inc sahf arpl jle leave mov in aaa aam mov cwtl mov dec cs push mov jb das xchg orl or pop fsub lods add sub push lea mov movsl mov mov push dec in (bad) outsl dec out addb add or cmc jmp and insl out xchg das into or lods push faddl (bad) int3 add cmpsb dec aas (bad) or lcall jmp cli shlb mov xchg cmp xor lret cld lods cmp ss idiv addr16 xchg arpl or pop cli pushf test movsl lret push (bad) xchg push cld adc outsb mov lret divl aad xlat adc (bad) gs daa pushf pushf cmp mov fdivrs test xor imul in imul mov sahf in xlat aad push pop xor in cwtl lods mov and jecxz out or xchg push cvtps2pi cmp mov lcall and jbe push fbstp xchg and mov icebp repnz dec push scas popf or and lods popf ss inc pop inc cmp jnp adc ljmp add lret inc jne (bad) and and push stos into sti xchg mov mov call pop mov sbb dec or mov arpl pop sub lods mov ljmp fxch dec shlb mov jae in aam ljmp mov testb cld xor fistp mov sbb pusha xchg std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jmp and cli iret or mov pop insl add xchg sub das sub scas sub cmp outsb pop or xchg test out ret lret sahf std xchg mov push xchg test (bad) imul xchg inc out mov push cmp adc repz lcall xor jno (bad) mov test sti add aas ljmp icebp cmp xor enter mov xchg dec sub stos xchg lock lea andw cmpsl (bad) pop and pop ja xchg repz jnp movb push lcall fs xchg mov sbb or fisubrl test mov pop and cltd mov cmp jmp add adc das mulb insl popf hlt mov mov icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp mov mov inc in fs test mov jg ljmp pop xor cmpsb sbb jmp aaa inc lock mov mov pop sti pop inc fildll mov mov stos arpl xor pop stos add push test popf pushf lret movsl repnz hlt lea fwait enter inc inc xor dec jb or mov iret out out push faddl mov push stc jl add stos cmp hlt sub sbb in cmp movsb sbb dec incl sbb pop jmp sbb mov xor movsl mov mov outsb xor into js lods xchg mov mov push adc cmp xchg mov inc jg mov pop push mov fadd add pop xchg adc dec xor (bad) xchg ljmp inc jae jp mov cmc inc je sub scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc mov rol ljmp pop push and mov test or jl xor cmp scas jbe call lods inc adc adc lcall popf sub cmp std add pop cs outsb or inc inc pop and in rcrb lcall cmpsb sub cmp xchg rcr pop cli dec shrb addr16 or les inc scas mov loopne repnz incb test cmp in cmp cmp std push push add sub std rcll pop data16 push jbe mov lahf imul or insl mov lret and xor sarl xlat shlb dec inc mov adc (bad) neg dec (bad) push sti data16 lahf fistl mov (bad) mov sub dec xchg mov sub in xor push pop xchg push sbbl sbb pop adc movsb inc lock add enter jo push (bad) call shlb sub fstpt mov or fistpl add ss sbb (bad) lock push cwtl xchg inc jbe clc push ds mov add test or scas sarb scas lret or add dec rcrb and das inc cmc jge xor mov inc popf pop jle sub push cltd sbb and cmpsb cli out push iret dec xchg in sub in subl imul sub mov cwtl and push scas ret xor ror push sub test jmp lods cmpsl jecxz or loop into orb scas pushf lock pop or jno lahf pusha sbb int3 xchg out (bad) in mov test daa inc es jae mov jns cs leave mov std rolb mov xor dec std out or cld out or push inc cmp fwait daa and xor jo hlt fstpl iret out in in in aam push push cld cld (bad) xchg mov faddl sti scas testb push (bad) lahf jmp cmpsl pop cwtl push lds out lret stos pusha scas mov mov jnp lods rcll mov and sbb and lcall addr16 lret lock sub subl stos pop ss sub ret test (bad) stc jg push mov push push mov xlat pop out cli rdtsc loope jle pop repz sbb adc imul fs leave jp fistp loope ret test lahf test bnd xchg dec lods jns daa mov lret les in in push neg pop sub stos sbb cmc pop pop dec pop in mov lock jle push imul notl stos aam es repnz loopne adcb mov jbe (bad) fisubr sbb push ljmp ds push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov loop call adc cmpsb push ss push popf fisubrl jmp cli pop and cld hlt les or jne cwtl aas fistpl pop in sbb xchg sub pusha js pusha scas enter jmp push xchg push push inc mov lock adc leave jge and data16 xchg movsb mov mov mov add mov aaa out nop adc lret xor jle mov inc jno pusha ljmp add inc mov dec inc scas daa and fnstenv push push or or fnstenv fstp shll cmp mov jne push cmp hlt adc fdiv out xor add pop ja mov repz enter idivl fcmovu xchg push (bad) xor lcall lds mov shrb addr16 fildll ljmp cmp fwait addr16 lahf lahf xor mov cmc mov pop mov repnz ret dec dec push into cs lret adc fstl cld cmp cwtl icebp test out test movnti out lea adc push sti js xchg push lcall out fldcw mov outsb dec lret (bad) fildll sbb xchg or sarl (bad) cli sub pop lods sti popl xor sub (bad) dec lods cmpsb mov sti rorb push add or in (bad) or (bad) pop xchg dec ljmp and stos (bad) scas cmpsb jge sbbl mov cmc das fdivs jmp inc cmp in pushf push xor push out xchg push adc mov pop push lahf jb mov jle test add and pop addb push movsl cmp pushf jecxz cs add scas imul push rolb sbb push cs xor mov loopne adc cmp fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe sub mov aad push in adc das mov outsl mov xchg fbld xor xor push mov fidiv pop inc pop js pop out sbb adc je cmp in jg adc sbb cs mul stc and das pop xchg (bad) mov jns mov ret lds mov (bad) loop push shrb xor jo push mov mov popf jbe push mov jb and cwtl aaa sub dec aaa xlat mov std xchg mov fcmovnbe sub and mov cmp cmp aam xchg pop lret xor dec adc mov mov jp clc add pop mov add or movsl push sub fdivrl inc adc add fnop push repnz cmp adc inc cmp subl xchg les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl mov outsl jb scas popf sub mov and lcall mov icebp inc cwtl inc mov lret or xchg push push fcompl cmp popl add mov jb fdivrs js das add push sbb mov fmuls repnz inc out push rcll dec test dec shlb or sarb mov hlt data16 aas inc sub insb cld add inc cs xlat xchg out mov and ljmp loope lahf cmp movsl (bad) and movsb mov jae sbb fcompl cltd mov lret pop (bad) push sub xor fisubr mov mov clc xor add xchg inc add and lods sbbb sub mov roll leave (bad) pop jg dec shl lret movsb movsb push push push into into test mov (bad) pop pop xchg mov aaa imul out or ljmp push sbb add jbe addr16 out stos pop (bad) les data16 xchg xchg push ds add (bad) pop dec clc inc jbe mov aad sub sbb push mov jl cmp and in cmp and icebp (bad) jno test mov orl jbe loopne mov dec mov aaa fisub fildll push mov fsubrs leave mov push out aaa cmpsl add sti pop (bad) ja mov outsl (bad) cmc out fwait (bad) xor pop das sub repnz arpl mov pop lcall xchg mov cmpsl test push (bad) jmp sbb cmpsl (bad) jmp mov xor cmp sahf lods sub jp pop test mov ds dec fbld cltd repz pop jmp sub mov jnp in movsl movsl test dec cmp arpl call adc imul insb push push adc addr16 add in inc mov sbb mov inc mov xchg loopne clc and or dec mov add mov adc xchg inc jns xor push xor or pop loop mov movsb sahf or push pop dec test mov inc jecxz and in fs (bad) mov jge aas fsubr call jns mov sbb push test arpl mov fstps (bad) add mov (bad) jge outsb (bad) sti lret jbe ret cmp xchg and xchg or jb xchg leave jne in mov movl ficompl ds mov in clc ss mov mov pop lret loope ret xchg adc repz xor js pop sub and mov xchg in mov ret cmp mov js fcmovu leave or ret ret leave leave ds jne divb cmp pswapd mov dec scas mov scas (bad) xor jae imul mov cmp dec fisttp or int push cs fisubl jo loope inc and outsb aaa out dec jmp fwait iret adc nop data16 xchg stos fidivl dec outsl or sub mov dec fcomip outsb and pusha lahf scas in pusha scas enter pop mov xlat (bad) ja xchg sbb hlt in sub push and cltd mov adc cmp arpl mov (bad) mov dec rclb (bad) ss mov mov jecxz loop and mov or shrb imul dec push ss sti mov insb cmp out or sub sub test xchg lahf or jg lods xchg mov lods push dec loope push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait andl mov adc out cli xchg push inc dec jl cmpl shr ret lock sbbl xor pop lods sub lock in daa lret lods aas push mov jae cltd and pop test mov cmc movsl sbb add jg jno mov addr16 nop or fadds xchg lcall stos repz cmovs repz dec or xchg std ret mov inc lret and andl out push out adc cwtl je adc dec push sbb cwtl out add nop mov mov or stc movsl jns icebp xchg hlt out jp adc sti dec nop xchg imul imul cmp ret mov clc add sbb into mov sbb sub out mov dec jge or pop (bad) mov cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test pop dec mov push xor fwait xchg (bad) xlat dec cmpsb outsl stc pop push div dec inc dec mov sarl inc cs popf mov pop iret stos stc mov movsl or push aaa sub cwtl aam or pop popf aad lock bound or mov imul add in adc inc xor mov movb mulb in fisubrl sarl adc es dec lcall inc add jmp jle or mov inc xor mov mov sub sahf mov sub stos sar mov or imul cltd lock add pop inc loopne ds test insl test lret movsl popf xchg arpl adc fistp bound xor cs icebp loopne cmp mov xor js in in lea and movsl movsl and in in or mov add xchg xchg loop scas mov andb dec add cmpsl enter mov sub pop jb test movsb pop dec jb sahf sarb adc pushf cli enter push add xlat sub aam sbb es sbb mov cmpsb mov popf push ret outsb mov dec adc cwtl jl add adc add mov inc lods mov loop hlt push (bad) imulb adc popa mov jle push and mov bound cmp outsb sbb jae lcall push cmpsb jnp add stos pop jle xor dec cs mov iret sbb call movsl aaa (bad) sbb mov dec out adc repz mov iret mov cs adc add jo push (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor mov xchg sti add mov push shll adc scas mov in fsubs mov sub mov jge ficoml ss pop clc cmpsl inc or int3 shrb (bad) aad in jb xlat mov push fwait scas sti push sbb mov jl lods in xchg push pop pop mov cltd pop push adc xor in cmp xor xor aam pop cmp sbb pop jno and loop ljmp dec inc aam rcrb (bad) mov xchg arpl and cmp inc jge pop cmc mov dec sbb push les mov xchg sub adc cmp and sub pop (bad) frstor jno test mov int3 cs ljmp cmp add into mov in stos xor mov in (bad) icebp cmpsb iret hlt xchg push dec dec cmp arpl call adc imul insb push push adc (bad) and das fsubrs mov fdivl addr16 xchg inc shl cltd mov push sbb dec fsubs dec repnz or in test lcall pusha sbb aam add push push fs call lret xor les mov xor mov jb loopne push pop add cmpsb mov pushf jne push outsl sub push lcall fcompp xchg sub (bad) push jne,pt jmp cmp mov cmp or rcll adc mov adc aam mov (bad) pop cmp adc daa daa iret xor pop repz cld ret and push rcr xlat pop xor sbb popa add das pusha insl lret xor xchg mov push or daa pushf pushf cmp mov add rcrl (bad) std mov inc xchg xchg pop pop aas aas push mov add pushf mov int3 fisubr adc (bad) sbb test push add jns out and movsl hlt call les xchg imul in fild jecxz inc xlat push inc test or ret in sbb jl inc jb cmp and outsb cmp insb inc pop fcmovb jb sahf addl out (bad) push inc lea push sbb lock nop push pusha push out pop stc pushf imulb popa (bad) sbb xor shr sbb loop fnstsw popf mov or lret ljmp pop fs clc dec adc pop aam mov sub imul xor imul adc ss sub pop mov nop jmp push idiv scas call aaa xor inc sub sub and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl cmp pop movsb cmc ljmp mov jno cli xchg cmp repz call outsl jp xor xor int3 stos iret xor stos popf hlt mov daa fmul fwait int3 mov fisubr stos jno pop add in jge out orb mov sbb pop scas push jge mov call movsb (bad) out pop ss push inc stos cmp inc sahf and es mov loopne daa fstps test out sahf add push es and bound repnz mov mov jb jo fildl fs arpl es xor inc xchg sub mov (bad) push push xor lahf std scas and call out push jns cmpsb addl fsub outsb incl sbb imul jmp dec dec jno mov or add rol shll es data16 lock (bad) shrl divl scas test aaa jb pusha xchg data16 or daa push ret pop cmp dec mov pcmpeqb mov pop (bad) cs jle shl shl (bad) adc add xor es sub sub xchg or bound inc int orb mov cmpsl jnp inc in ljmp xchg inc imul rolb fwait mov push sbb jecxz aad mov loopne std and dec inc stos push push add cmc xchg cmpsb or cmp cmp pop cmp divl imul inc sub fdivs test mov mov sarb sbb cmpsl jle and scas lcall xchg dec inc out mov popf mov xchg adc mov ret inc (bad) sub jnp pop outsb dec test test lds xor xchg fcmovu mov inc addl lock add enter jo push mov inc push imul jnp cli fs mov fiadd loope insl idiv mov jne data16 (bad) mov pop sub sub leave (bad) fdivrl xor sbb mov outsb pop xor adcb push mov ljmp lahf lods mov xor (bad) aaa mov addr16 in pop jae out sub test dec out xchg dec and stos mov ret adc iret mov fisttpl or dec cmpsb scas int adc cwtl add ds add fprem push pop (bad) pop sub out pop imul (bad) cli or mov ljmp ja mov cmpsb lahf jl pxor mov (bad) aam and (bad) mov jmp xchg cmp jne lea fnstenv cs pop xor fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp in push aam (bad) cmpsl push ret loop mov add xchg repz jno mov clc out pusha xor pop jg shrb daa push data16 ljmp test pop mov mov cmp xor mov push cltd lret pop scas cmpsl mov adc lcall xlat jb mov add and cmc fsub push imul rclb jns fisttp push cmp or mov andnps mov rorb xor out xlat pop push in into les dec shrb push and cmp aas push jg loopne pop jp in stos dec aam mov add jne int3 mov mov xchg fimul jb mov leave pop mov and out out pop dec inc outsb pop jnp add fs outsb mov lret divl aad xlat adc (bad) gs nop inc int3 out xchg jo adc inc inc jb mov jo inc fcmovb lret jmp daa aam pushf jb (bad) cmp sub pop cltd sub xchg push cmpsl fs ja sub sti test test mov jp cmp fwait lock repnz lahf push lret jae adc (bad) push xchg stos lds cmp or mov bound xchg mov pop out (bad) and pop or jl adcb decb and and dec sbb and sti push arpl es add mov or xchg xor and test mov mov sarl jns xchg in mov rorb ja ss jno dec mov jne imul cmp sbb fimul xchg jp adc rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) sarl xchg and cld xchg scas out outsl imulb and dec out icebp sti mov rcrb cmpsb jae aam xor mov shrb sub inc pusha xor add xor fldenv cmp scas sub xchg mov testl and sti cld inc lods lock xchg dec inc xchg xchg pop adc lods mov push jo call add mov and or je hlt sti push fbld adc popf out gs sbb cmova sub xor das (bad) push ficoml cmp and mov shll xor xchg push adc and cwtl sar addr16 movsb xchg sub push push xchg xlat leave lods stc and or add pop mov insb in subl mov fmul into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub icebp inc dec lods xchg icebp add adc into int dec add xchg sub xor add enter fisubrl test and xchg pop repnz das ret rcr mov adc out xchg push (bad) xchg into xlat or pushf mov push fist and test movl push ficom les sub fbstp sbbl shll dec mov es aas or xchg sub lcall popf bnd mov sbb outsl aam fimull jmp mov adc lock pop cmp mov sbb jp aas sbb jp jbe incl addr16 and cwtl pop outsb and and add jp xchg inc hlt movsb cmp loopne push xor or xchg std fs mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or popa push jp rsm daa xor mov mov cmp mov pop pop fwait popf ret or gs insb imul push je push (bad) or xchg popf push fistpl (bad) scas fisttpll and pop xchg popf into mov push push mov xchg push addr16 add lea inc jnp lahf jmp xlat fcomi jae mov inc test adc mov data16 cli stc out mov (bad) stc cmp (bad) inc and into clc ret repnz and outsb arpl icebp (bad) and insb push jo sub jno sub pushl add icebp mov dec push jge xchg mov mov repz dec sbb cmpsb xchg andb mov (bad) lret das or mov lods or mov arpl inc pop cmp fcmovu mov inc addl lock add enter jo push pushl test stos ror outsl cmpsb dec sti das push lcall ret mov addr16 out scas add add mov or push adc or jno repz cli mov lret sar mov pusha fdivp xor mov lods xor lcall adc sub idivb xchg test in rolb mov push lock insl sarb mov adc test int jnp dec jno addl aas pop out mov add adc jp inc adc sar and jl pop mov push add cmp pop aad and sub fwait lret xchg cwtl jo mov mov fildl jns sub or lea mov rorb xor mov pop jge fnstsw aaa imul out in in in aam push push cld cld (bad) xchg push cmp add xlat cmp insb nop mov cld pop or stos add nop cmp adc cltd xchg leave add pusha xchg jg int xor mov arpl jno pop jno outsb nop leave out xchg test (bad) into lahf and push aaa cmpb sahf loope adc add imul and adc xchg sbb xor movsl sbb jae jecxz dec pop sbb aaa xchg fidiv lahf lahf sub and mov enter stos or ja sarl mov cmp cmp aaa jns fimull adc sti in insl add and mov imul sub sub jl pop out pusha addr16 fisttp inc scas xchg imul or sbb cmp roll jecxz pop (bad) clc scas adc or call mov arpl call adc imul insb push push adc (bad) aad xlat xlat adc (bad) gs repnz sub sub sub add mov or gs pushf mov pop imul jl sbb xchg mov loopne movsl adc add jp xchg gs xlat test push adc mov in lahf jp insb fst mov jnp out cli out cmpsb call mulb adc mov pop clc xchg adc into inc rorb push push add adc mov push sti sub ret xchg ja and sbb inc xchg call roll adc in mov push fisttp mov std mov push cmp les pop pop cmpsl mov sub push push sub pop mov daa inc repnz test sub (bad) in mov pushf mov daa sbb sbb dec xor in movsb ljmp or xor mov addr16 ficom divb cmp pswapd loope cmc cmc mov pop mov repnz ret mov aaa jle dec cli add push xor (bad) sub mov mov inc fldcw dec incl inc pop pushf xchg aad sbbb mov dec or imul fdivr or fnsave cld fstpt xchg (bad) cmp jb jb push cwtl ret xor inc xchg das cltd lret mov loopne fisubr inc pop sbb cmp lahf and fbstp inc aam scas mov or xchg cwtl sub adc inc sub call icebp lods test jnp call fdivs push cs mov repz dec dec pop jae fsubl or adc fidivrl pop ror imul daa sbb mov insl jae mov in fstps divw push sub ret or data16 std (bad) mov push or insl insl push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli rclb pop popf icebp hlt cmp fisub loope into sub pop imul cmp mov push clc scas pop loop push and xor gs std int3 insl pop out inc nop add sub xchg in sub subb mov xchg inc repz sbb inc into scas xor pop cmp in or jb add lret cmpsb mov xlat sub in inc mov mov jns popa sbb bound notl lds aad loope (bad) mov jmp aaa add outsl test mov gs mov test xor mov and fisub sub call lea outsl rcrl inc push adc ret add mov pop mov jmp xor add pop in test std jo sbb jmp jne fidivr stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or push add movsl mov mov cmp xorl xchg push mov ds (bad) rcrb dec mov stos hlt cmpsl mov in jne jmp jb jecxz jbe mov std scas jge in xchg rorb std xchg push lock fwait inc and adc pop mov push test pop insl pop fnstcw push fsubrs test mov sub cmp jge mov (bad) enter fidivl push dec mov cld pop inc iret add lea add adc std xchg add lods jns cmp dec push outsb cmpsl mov push out icebp and aas and repnz jmp pushf sub mov fwait addr16 mov fucom mov sub dec push sub sub push push mov push arpl jl and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov push jae es mov add sbb nop js ds sub sub movsl xchg mov bound mov fs sti inc dec cld sbb icebp sbb cs repz mov dec clc mov mov push dec call outsl cmpsb pop sbb xchg hlt and pop pusha jmp (bad) out and insb pop cmp out scas iret hlt or in push loop jmp or daa (bad) jecxz stc or in pop ja mov xlat sub sub (bad) ds or lret sbb jne xor xchg sahf repnz adc mov jl mov mov ret (bad) cmp icebp push loop imul fs bound xor xor inc xchg mov mov inc in pop mov dec int jle fs ljmp imul mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test lods out popl test ret push inc sbb jmp rolb xorl inc lea js jge or mov push pop (bad) sub or xchg jo js adc pop std or fisttp int cvtps2pi outsl and lea movb (bad) or nop cli leave cld cmp lret leave sbb adc out add bound mov arpl xchg push fwait ret adc sbb inc leave movsw xchg push add cwtl pop adc sti lock outsl (bad) js lods scas xchg pushf aas mov pop pop or out lret int daa xlat inc lods popf (bad) repnz adc sbb or cmp jge,pt push aas sbb fwait imul sbb push cmp repnz dec mov jle aam inc pop mov or or lret push adc imul insb push push adc (bad) ja xor mov xor ret leave leave ds mov xchg insb xor test in push and push jbe pop push sub dec jno mov lods rol mov nop and jno out mov push lds aad cs ret lret xlat clc dec xchg repnz xchg mov adc mov jg pop and lds jae inc jecxz or pop inc xchg push jno jecxz test fnsave pop test aam int or pusha outsb popf pop mov adc movsl jg and mov aad fcmovnb ss (bad) repz es lods cmp dec (bad) out mov and arpl jb add aas ret and das mov jo arpl leave jmp lods or push mov daa dec sarl std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods and push and mov sub (bad) and loop lods (bad) hlt adc adc fisub lahf pop mov ss stc xchg pusha xchg jecxz push mov inc inc int (bad) iret or lcall insl mov lock add jmp add ret daa repnz mov (bad) add xchg sbb and cmp mov test mov pop pop cmpsl pop lahf in adc fildl fsubrs jg orl xchg cli mov frstor in test mov mov add jmp push dec pop jae das (bad) (bad) cmp adc sub sub mov push jle push int xor mov jno sub xor mov ret push fidivl dec int3 jle jmp icebp xor into lret or out sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov push jbe out adc sub sahf cmp mov sub dec dec jne iret mov push xchg popf mov (bad) fild sbb popf push pusha insb (bad) in dec js mov sbb loope inc mov mov add xor inc push push jae bound add jle loop fxtract insl mov jl idivb adc int cs insl fsubrs ja (bad) sub ret movsb enter inc shrl ret add js lds inc nop enter js xchg (bad) mov bound xor jg push inc pusha (bad) lods (bad) mov pop mov mov push xchg sub sti sti cmp leave mov es stos pshufw mov mov sbb shrl popf movsl lea inc repnz iret push adc lods and pop clc sti sbb pop int3 jecxz adc sahf mov or sbb rol shll es data16 mov js in in lea into (bad) mov mov push adc cld jb inc sub cmpsl outsl icebp imul insb sbb ja fs imul imul sbb out jbe adc pop bnd orl push shll inc push iret push pop pop sub cli out push int test adc mov jae lret (bad) mov fdivs stos mov bound xor jecxz inc fnop dec xor aam arpl loop jmp clc pop inc xor pop cs lods dec aas fndisi(8087 push add mov aam add mov sub dec mov cmp int add adc inc jp add repnz push or es sub pop fistp cmp xlat cmpb insb (bad) movsl mov sbb ret test jne mov lock add enter jo push (bad) call shlb jp movsl cmc aad add cmp xor cmpsl inc sbb cld outsl loopne push push pop mov mov sbb hlt mov nop mov (bad) notb mov call pop test outsl cmp jle xor jbe fmull js lods iret and add ret adc popa je leave out mov adc in push inc mov mov push push sbb xchg icebp stc dec imul idivb or push test xrelease sub lods xchg movsb add stos popf sub rcrl out (bad) mov jae repnz call inc cmpl sbb (bad) aas add fcmovnb cmc add jecxz adc push sbb gs push adc xor into ss xchg jae pop sub ljmp push mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl imul ret mov dec out (bad) sbb sbb enter inc lahf add dec leave adc cmp jb int3 std push daa fsubl lods xchg xchg popf arpl xchg lea dec jns sub sbb xor adc int3 test lret sub and cmpsb pop or push dec in cmpb iret push fdivs cs dec loopne insb pop das movsb push popl mov dec sarl xorl lahf jbe jbe (bad) stos (bad) fs (bad) in pop sbb push pop cmpsb sbb inc adc loopne cltd xchg loopne jno xchg jecxz mov and icebp leave int3 (bad) hlt lret xor (bad) and (bad) or cmp pushf hlt add imul jle inc addl or xchg (bad) fstpt pop arpl (bad) or outsb lods insb and jmp cmp lret mov addb adc add gs daa pushf pushf cmp mov das cmp adc lea cwtl imul inc fisttpl fst add pop pop das xor pop pop fisubl ret mov (bad) aad (bad) mov ds vmovaps movsb pop xchg jmp dec idivl (bad) mov inc test cmc ds inc sub clc lahf movsb mov pop mov iret pop insl ljmp lods shr cmpsb mov js push in mov (bad) push imull inc add shrb push movsl xchg ds mov jnp arpl test cmp jnp cwtl mov adc push scas inc lods mov mov pop xor pop mov add arpl mov lret rcr mov adc or push xor stc mov in inc jle jl divb mov push xor or test push js mov xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov cmp inc dec jmp ja pop fsubrs fidiv in nop sbb dec cwtl inc int sahf in adc into and (bad) loope,pn jbe push fiadd fidivl imul pop push (bad) popf dec and mov mov sarl pusha inc out xchg aam mov int pop sub xchg sub insl xchg sti xchg movsbl je dec pushf or adc (bad) imull shl test xchg jae int cmp xor pop and lods cmc int3 mov mov cmp cmpsb adc mov cmpsl sti or push nop stc push and mov push pop jbe movb cmp sbb cmp mov aaa add adc sbb mov popf mov (bad) jmp shrb mov adc bound hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno adc push mov fs fisubr dec insl jge cwtl std fcoms (bad) movsb add sahf sbb xor mov cmp lea test jne arpl sbb xor mov rcll movsb cmc sbb add scas in add clc enter mov pop popa mov inc mov pushf mov sub mov jecxz xchg fisttpl shrb xchg jo (bad) and outsb scas lock mul ficompl lahf arpl xor jmp cmp sub mov jns jp xchg popf push fimul das xor mov push sub (bad) aad sbb push lret aad mov fldcw clc jle lds into push cmp sbb pop int clc adc stc outsl lcall adc jo pop add mov jge cmp (bad) jle jnp iret cmp pop subl jle fstenv cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc xorl mov jmp lods roll insl xor stos lcall out mov cmpsb insb push xor into jo lock movsb lahf mov addr16 in pop bswap je mov cmpsl addr16 rolb (bad) imul movsl push outsb jmp hlt dec xchg cs cmp int and pop test mulb jge inc jmp stos cmpsl js loopne jae inc loop jp jmp fbld js les cmpsb inc in xchg call jg aam or add lret ja jmp mov in aad js ret mov ja test xchg gs push dec mov bound outsl or dec (bad) roll cltd dec jle psrlw leave cld sub sub aaa iret bound adc gs dec repnz lock add enter jo push (bad) call shlb sub fstpt xchg pop out mov sbb call and movsb in mov inc or inc jno push scas jmp out int3 (bad) rcrb xor out pop js repz mov aad stos dec sbb push push sbb imul fsubrp out shlb jns test test je xchg repnz cmp out aad hlt sbb jns mov or push dec rorl push sbb fldcw pop cwtl arpl cli and pop jb lea jmp jp pop (bad) add xor push push inc out orb in cmp dec orl xchg imul jo jle inc fistl dec inc lds ds (bad) xor mov and xlat dec jg sbb ljmp movsl clc inc outsb or (bad) mov mov in in in aam push push cld cld (bad) xchg mov faddl sti lret pop cmp es addr16 mov daa xchg mov (bad) pusha or cmp jmp movsb idiv pop or adc movsb sarb add fwait das adc cld (bad) adc push leave mov cmp jo outsb into xchg loopne adc mov xchg test pop pop inc bound sbb (bad) out call adc addl ficompl mov pop movsl pop or popa push dec lret arpl (bad) xchg sbb pop dec mov sbb jae cmp (bad) inc sub subb mov (bad) je pushf out mov popf jge (bad) (bad) js xor sbb ljmp pushf (bad) sbb pop scas add stc add addr16 js rcll testl (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl and dec xlat sub movsb dec xor fwait pop and push stos ljmp pusha pop sbb out loopne jbe jbe int arpl ja mov movups add jge xchg sub jecxz fimull pop (bad) or repnz push outsb (bad) mov pop lahf or mov sbb pop or out sub mov addr16 addr16 ja je jbe shrb dec and loopne xchg sbb adc data16 rorb roll xchg roll jns out imul bswap mov or push repnz jl popa lcall mov mov or add pop sbb add jns cld push and iret inc pop fsubr fmul push mov mov cmp dec xchg sbb adc lahf int3 xor in add insl or lret lahf lahf xor mov cmc mov pop mov repnz ret dec dec push into cs inc xchg mov insb add aam jge mov roll inc mov in cmp rorl sub pop imul inc xchg movsl ljmp and push daa cmp ds imul scas or hlt loope jg outsb pop inc pop jle mov jb andps cltd loopne cmp inc rcl (bad) sti insb ja pop ret jo fmuls or jb loop fbstp push outsl and mov fldl add xchg mov into mov jns xorb imul lcall (bad) mov or test cs mov (bad) mov sub out jnp rcrb sbb stc imull and lods les and xlat (bad) dec pop jp shlb leave and notl addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe call in imul mov push iret pushf mov jns or stos mov fs jecxz test scas mull push cmp mov mov adc je dec faddl mov push mov inc dec (bad) or out mov comiss (bad) btl rolb sub mov jle add mov lds insb repnz cmp and sbb push mov push divl hlt sub cmpsl imul mov jl lret test mov jle adc clc adc and (bad) mov out loopne sbb cmp mov inc mov add jl insb pop imul stc jb push mov test inc popl cmp das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl pop call lret dec lahf sti out xor or bnd cmp adc ja imul cltd xor out push mov les add mov push push adc or jno test dec mov pop add or or sarl test sub into sub or push mov daa testl negb adc jg pushf and rcll lcall mov (bad) dec xchg fst mov lret and xchg andl sbb ror hlt in push cli dec dec inc add jbe adc andl stos jp push xor and pusha mov lea xchg or dec (bad) dec pop sti dec aam and gs imul and inc pusha cwtl or je dec sbb nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov dec lret dec pop mov mov mov loope cmpsl ja stc mov inc sbb arpl jnp mov lahf and mov jo inc ljmp shrb (bad) mov push inc in lcall addr16 xchg movsl stc insb cmpsb push mov inc cmp lret call push push (bad) cld cmp das sbb xor push roll out push xchg test andb repnz test mov adc adc xchg cld iret jecxz mov jmp pop les stos movsl jbe xor out aam mov movsb pop cmp pop push fstpl lea mov (bad) jns inc xchg mov movsl aad sti lock pop mov mov arpl pop inc and shr mov (bad) push cwtl in insb mov repnz ds dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc imul xor mov push cmp add dec mov sbb lcall xchg movsl int3 xor inc push pop pop lods and ja push inc inc lds cmp mov and loop std mov push xor int das inc cmpsb push pusha and ret scas adc dec adc lods xor nop xchg in bound loop lea imul (bad) mov xor push mull lret lods add les pop (bad) lods fldt add inc and mov cmpsb inc pop icebp adc insb (bad) pop jp jns (bad) xchg pop lock cwtl inc subl insb aam pop test jae movsl inc aas or mov inc sbb push push jns or test cmp jp lcall push inc jno jecxz in xchg xchg inc ja out mov jmp jp adc fidiv xor mov xor ret leave leave ds jne divb div xlat mov jl or mov int call add inc sub cmpsb mov mov movsb iret test cli push xchg leave push dec test stos (bad) out jne (bad) ss cmc femms ds rol pop (bad) mov push je sub push mov (bad) xor or in movsb jo jp and aas gs sldt es and dec mov fcoms xor mov mov (bad) xchg insb sub push stc jnp xor scas repnz pop xor jp icebp ds mov adc mov sbb in cmpsl out cld flds xor or adc std sbb and cmp inc cmc movb in int adc out xchg (bad) mov out into insl lods dec sub xchg fldt cmp cld inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov inc iret out jg imul push ljmp push and ss cwtl je cmpsl jle mov sub jo stos nop loop pop mov das sub adc gs addb pop stc test lcall es push cmp dec out cmp mov int3 xchg stos add jnp sbb outsl push popf dec fs xchg ja (bad) sub dec push (bad) xor inc xor std lock sbb imul inc stos inc mov decl or out pop or mov inc pop lret push test jae pop dec cmp dec sbb sub test aam mov xlat sarb and lods sbb xchg lock push add icebp ja sbb sti clc push xor add and add std int3 (bad) mov sbb jb mov gs mov sbb fwait jle xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov sbb rcrl in jbe push sub roll mov pop xchg jp outsb stos aaa jae test std mov xchg notl shlb loope iret and shlb xchg add cltd sbb daa mov lock je in add and or loopne or cmp add mov movsl and lock mov mov dec adc jns daa jbe rol add lock aad adc dec push mov push movsl pushf xorl enter sbb insl push (bad) in sbb loope test mov enter xchg scas mov out inc fisubl xchg xor inc mov inc jbe mov jg outsb sahf sbb in and (bad) aaa daa or jl mov jmp lcall or cs sub sti imul cmpsl sbb add rol shll es data16 mov js in in lea sbb das loop cmp rclb aad pop adc fldenv cmp sti xor out scas es pop push jo in jge mov pop mov into add fsts xor addr16 mov dec dec sub js imul imul (bad) repz stos xor mov cmpsl out sbb (bad) mov je inc lahf lea (bad) nop xor dec fstps mov scas out sub orl xor std out or mov mulb lea xor and mov (bad) mov push lock mov jecxz push cmp (bad) fidivr jae and lods dec adcb fstl adc nop fstps dec mov push bound inc jg mov cmp xchg push mov outsl push imul lods push push pusha pusha lock add enter jo push (bad) call shlb mov div es inc subl lea cwtl jne insb lret add stc sbb ret (bad) or shr je or adc xchg push aas ret pop sti insl pop dec sahf jle hlt lods in jae push mov pop cli fidivl mov test pop push insl and cld mov or insb xlat sahf in adc pop outsl in dec or mov mov popa jno mov pop flds xchg xchg mov sbb fdivs std jecxz inc or lods fs das or jb in adc and sbb or aam cmpsl sahf and mov inc scas mov push push je loopne cs jl aaa ljmp add or in lods sbb cld push fldl es push lahf mov xchg cli jl (bad) inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call push cmpsb (bad) out mov sbb pusha pop in xlat lea test push data16 xor cmp cmp cmp aaa vdivsd sub and pop xchg clc daa pop sub xor push mov dec pop pop jae (bad) mov push das jecxz aam push xorl jl sub push hlt mov mov jae inc xor pop aam xchg xchg push push jmp mov int3 mov jecxz aas adc cmp jae mov sbb or xor adc addr16 and shr or jnp loop xchg cmp or and (bad) test cmpsl lret dec xchg mov pop sbbl (bad) adc fs dec mov push push aad (bad) or cwtl inc inc js sbb out je in xchg roll lcall mov adc xlat xlat adc (bad) gs daa pushf pushf cmp mov pop lret lods (bad) aam inc mov add imul js cmpsb cmp push adc mov or add enter fcmovbe in push xchg or aaa jo push cs rcll adc and mov lret xchg pop mov xchg pop outsl (bad) inc fbstp popa push int add sbb out lea jns push cmp add add mov jbe and or sub cli arpl iret in bound mov jl call stc clc push int3 lds out clc rclb cwtl cld cmp out pushf imul fwait shlb jl adc iret xchg lock in popf push mov in loopne nop fwait or mull mov add test fwait call repz sbb fcomps xor scas test cmp (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods fisttp stos scas add jecxz cs pop and sbb sti (bad) jne lahf pop jg adc loope outsl mov push mov lods jg or scas add mov jno daa mov imul and sbb lods cmp fdiv jns scas mov and xchg adc mov mov ret mov adc inc xchg sub pop aam push push (bad) jecxz lods ljmp fwait cmp nop lcall xchg jo mov scas ret xor cmpsb mov pop int3 jle inc sti mov test (bad) out add test lods xor lret xchg out pop aam ljmp nop loop adc aaa imul mov push mov outsl sbb ret jae ds sbb (bad) push and push loopne lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or iret mov (bad) int pop pop xor adc cmp js jg xorl lock shrb jp insb scas test jbe push mov or test mov dec rcrb je mov jecxz xor cmp shl cmp (bad) adc fwait xor xchg mov (bad) data16 and cmp pop hlt (bad) pop jl fldl in jbe jg dec adc int and ljmp and sbb daa pop subb pop add mov adc ljmp sahf jno or fisttp or mov mov ficoml add lods xor dec and sarb mov adc pop popf adc into lods mov adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) xor push jne or jno or mov sti das sub arpl insl xor push push lret push nop xchg sub mov lret xchg (bad) ss mov test cltd sub mov insb faddl jmp mov adc add xchg jb jp loopne imull cmp lea mov and jle dec mov pop fcoml sbb xchg jl sti sahf fcmovnu dec or mov dec sub outsl test in icebp jb arpl in stos or push adc pop inc inc cmp xor pop xchg in adc cltd and pop popa iret pop jp jge or sbb btc bound in gs (bad) div subl lcall mov fnop aas aaa int jl mov sub lds jmp adc pop inc addl lock add enter jo push (bad) call out out jmp stos (bad) lods jo add sub sub repz pop aad cmp push jbe cmc mov loopne lret pop sbb xchg cmc fist xchg jmp xor and push ffree lret jno pop cmp jmp test lods loopne cli jno push ficoml inc cwtl lods adc clc cmp add lds out mov pop orl or xor cmpsl fcmove mov sub push loope adc mov rcll leave jae les daa into or pop jp ret sub dec sbb sub or stc icebp fidivr out call dec fsubrs xor adc and pop pop cmpxchg add or cltd or push mov adc lods cmp add mov imul out in in in aam push push cld cld (bad) xchg mov fmull rorl arpl jecxz mov add rorl inc dec scas mov or out out sub inc mov mov fs inc les and and sbb mov outsl mov xchg xlat call sub pop leave mov jmp mov (bad) setno aas loopne shrl rcrb (bad) into in mov mov leave stc mov add or cwtl outsl xchg lods mov cltd (bad) fiadd pop in test push pop xlat lea lret pushf aaa ljmp leave push cmp push (bad) mov push and pusha xor gs (bad) loope mov shl leave adc sub jae pop xor lahf enter enter jae xlat cwtl orl loope aam (bad) data16 rorl pop pop clc clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp sarl repnz enter and pop jne jb outsl icebp enter hlt sbb mov xchg mov in negb adc fwait adc nop addr16 pop inc call sbb repnz pop push jb sbb mov or add mov dec aas push jno lods cmpl dec sub (bad) pushf xchg xorb cltd ljmp jg mov mov mov and outsb or xor add mov fwait inc fstpl fiadd outsl ret outsl push pushf push movsl cmpb (bad) dec cwtl push mov enter mov pusha or in scas pavgb pusha xchg popf out lds cmp imul sub or xchg cmp cmpb inc sub scas fsubl lea out inc xor loope aas and roll test enter adc pop pop add pswapd loope cmc cmc mov pop mov repnz ret dec dec push cs lcall cmp push push inc xchg ljmp shll pop (bad) pusha cmp mov enter ss adc notl jae icebp lcall rcl pop stos xor repnz sbb push clc mov ljmp add ljmp add sub or pop add mov xchg movsl sub xlat add push insb jl xor xchg stos fstps movsb loope and or xor jno push int mov ja and ljmp cmc ss adc mov jne jl push cmp pop lds hlt mov pop mov cmpsl aam adcb pop add cmpsb fwait jg push fstps xchg jnp mov add sub mov adc mov sbb push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos lods out imul loop mov enter or adc add lds stc aas mov clc or or sub xchg mov add aaa mov mov mov (bad) jno sbb mov sbb lret test cmovae test sub sti jbe xlat arpl inc dec fildll lds pusha pop inc mov xor push xor (bad) mov xchg (bad) pusha mov pusha cli inc out ljmp xor adc mov xchg imul aas pop aam mov mov outsb xor into js add mov push mov xchg hlt (bad) shl bound lret mov test add dec push push xlat cltd addr16 sbb out and repz cmp (bad) out push aas xor adc jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) adc loope mov mov int das jp in lcall or pop dec xchg jge inc jo add js popa mov cmp mov jno js lock aam mull inc imull lret inc bound fstpl xchg insl pop xor dec (bad) stos mov sbb stos lock fs inc loope mov insb adc and mov aas adc cmp cmpsl mov (bad) rolb mov adc and push adc movsl repnz je and (bad) pminsw xchg adcb loop (bad) jg scas jnp xor popf loopne cmp mov add lock add insl cmp jno nop cli mov mov push pop insb adc cmp dec scas (bad) lcall mov cld call mov jo lea movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov je add xor in mov jbe cld rclb call mov jle add xchg rolb test pop addr16 repz lret sub adc out ret stc add sbb pop test mov stc xor out mov mov xor sub mov cwtl movsl fnclex movsl cli lahf mov adc repz jp (bad) xor pop test div jno sbb dec push jnp xchg mov repnz mov popf cmc mov push xchg lret into pop xor sbb mov nop enter cmc mov gs test pusha adc sub cmpsl mov or sarb das cmp sbb aad or mov inc ret movsl and pop cmp jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in pop (bad) repnz ret sti (bad) jne cmp mov dec fldl cmp or or mov sahf inc notl ljmp mov lds mov jle nop or arpl or sbb sarl mov push leave dec sub out loop loope sbb ret jg movsb sub jnp cmc cmp out faddl insb ror mov and adc aad cmp (bad) jno xor pop mov push insl popf mov xor or cvtps2pd adc lcall xchg fmuls into sub aas cmp sub sub cltd pop cmp ss push pop sarl adc inc or cmp xchg adc add and xchg pop movsb out xchg lods loopne out out xchg rol cwtl pushf arpl call adc imul insb push push adc (bad) ja xor mov xor xchg (bad) (bad) pop fild and add sarl clc sub jbe les cltd pop sbb rcll sbb imul jp aaa push xor cmpsl pop test dec adc mov rcll pushf inc out xor icebp mov mov add movsb xchg ljmp fisttpll movl into pop pushf xchg xchg jmp add mov enter stos in add mov in addr16 stc lock subb sub lods inc jbe popa inc sbb loopne xor or (bad) mov jne rcrb stos sbb lcall mov sub pushf int3 pop pop fcmovnb inc jmp mov insl stos movsl clc js inc mov add pushf dec cmpsb ja lahf mov adc sahf xchg mov daa jge,pn das lea cld test adc mov mov sbb jbe xchg rcl cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and cmpsl mov inc xchg push loop aam mov adc and mov lahf shrb dec es jo daa mov jp and push aam loopne mov iret mov jge mov scas test cs insb fbstp or cmpb push cmpsl imul lcall xor fcomip fwait lret push aad lock (bad) lea dec push and loopne and mov shlb imul cmp leave dec mov lahf mov sar lahf in leave lret xor aas push jne fyl2x aad pop outsb out mov jnp stos rcrb cmp add mov fsubrs out (bad) xchg mov pushf jne (bad) jae or lret mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov enter aad xlat test flds inc faddl push and jle inc sahf jge outsb xchg int3 xchg imul movsb (bad) lahf xor xchg mov push bound sub cltd lods mov (bad) jno out sahf imul pop xchg add xlat mov into jbe loope cmp fisttp call mov fisttp adc sti lret push jne (bad) ja sub jecxz sbb leave jns lea and jge sub dec test or out fisub and sbb fiadd add ljmp fisubl lahf fdiv push push jnp mov fmuls es dec cli or jp dec mov rorb or enter and dec push (bad) mov sahf sub (bad) std je xchg or mov cmpsl cmpsl sbb add rol shll es data16 mov js in in lea fldl stc lods cld dec push ja mov imul les ss jge mov rcrb daa adc imul ret and pop arpl in insb insb jo jle inc inc cmp pop sub xchg adc int3 or stos sub mov clc in pop std mov mov and add add push nop arpl lret dec pop aaa dec sbb cmpsl sbb pop jbe ret xlat xor das call frstor xorl pop cli mov pop test cltd xchg lods inc push add fsubs or loope jae icebp sti sub in jns mov cwtl xchg cmp lds aam xor adc mov jmp (bad) mov std arpl push fninit and mov or es fidivr add jbe lds push pusha pusha lock add enter jo push (bad) call shlb sub fstpt xchg fs imul cli cmp lret mov mov mov mov mov cmp xor sbb mov inc sti lret popa pop pop or or mov bound out push out lret test adc adcl mull ja dec mov ret cltd mov cmp outsl or in in jns sub sbb jae ja (bad) sbb loope xor sub push mov xchg sbb loopne aam fdivrs add inc mov lea xlat lods cmp aaa mov fcomps les push cli daa ss in xchg add inc loop in je jecxz mov xor aaa pop into daa adc push clc jo dec loopne mov hlt cli push pop push stos jle push inc adc gs inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call (bad) stos add (bad) ljmp and fadds out and outsl mov sahf mov dec mov rclb adc movsl hlt outsl sub adc (bad) call sub je sahf loope addr16 adc movsl sub xchg and and mov cli sub aam aad imul dec jne imul cmpsb (bad) push xor push mov lea adc outsb mov test lods sub daa pusha (bad) out xchg push ljmp ret pop cmpsb cmp pushf repz dec sti stc int and imul inc leave mov xchg or insl adc loop cltd insl xchg cltd add or inc add sbb mov scas xchg push push in push stc sbb shrb adc (bad) (bad) out popf movb (bad) adc mov mov in sbb ret (bad) jmp dec div mov addb adc gs daa pushf pushf cmp mov rcrl inc ss enter enter xchg hlt outsl mov in or movsb cmp xchg test fucomi or mov or xor cmp mov repz inc pop pop inc add add (bad) jne lds bound pop inc into sbb sub lea xchg or (bad) pusha movsb mov nop outsb xchg or loope stos xchg or repnz add push gs sub test aad xchg push movsb test fstp inc popa or cmp mov sub and add cmp adc movsb jb cmp nop or lea inc sbb pop jae mov stc jp aad mov test mov add pushf aaa sbb push aam sub cmp dec mov movsb in cmp pop fidivr inc xchg xchg pop pop add aas aas push push sbb (bad) rcll push and lods lods or jp sub mov mov in add xor cmpsb cs mov movsb jle xlat pop xchg mov pop cmp stc test jmp sub push pop mov inc ja cmp pop add imul pop bound lock lods stc in mov rcrl xor cmp and jmp fmuls jp hlt dec rcll xchg cmpsb mov xchg scas sbb sahf inc pop shl sub cmpsl xchg pop loopne fwait and fist cli jb movsl sahf jnp mov xchg lods add push pop add pop xor mov add cwtl enter addr16 mov adc fdivl in mov aam popa pushf fstpl enter inc fs add xlat outsb mov or cld sbb xchg mov mov push inc mov out cltd int aad stc xchg mov loope outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno jo mov sub pop sti push mov jmp xchg push push jp inc mov les and in (bad) and cmp and mov or (bad) jo inc ret add pop mov dec push mov mov popf out xchg pop sub jp pop mov scas les jne jmp ljmp sti test fcmovu pop pop push scas nop mov gs dec mov dec xchg inc movsb push test push pop sbb add push cmp mov jno push mov insl aam xchg jno push dec dec or dec jae adc cwtl push sbb jnp fadds imul repnz rcll addr16 out jmp cli lahf jns inc cmp sub push dec out mov pop cmp fs jae xor sub cmpsl hlt fcmovnb mov mov dec or jb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc subl add mov mov pop xor test lret adc popf into sarl outsl mov test or sub adc add lahf xor xor nop scas hlt dec mov add jne cli ret les test or fsubl or xor cld xlat dec xchg pop lret sub into xchg push daa test (bad) push (bad) push aaa push bound xor pop adc inc jnp xchg inc (bad) mov sub lds mov inc movsl rol or push ljmp lahf jg hlt scas in mov cmp arpl mov jns inc lea inc cmp mov dec xor cmp popf jmp test adc adc pop sbb xchg sub jmp pop inc scas int3 in fnsave arpl enter lock add enter jo push (bad) call shlb sub fstpt sbb popf jle cmp (bad) cli xor push push test inc jno mov cmp adc cltd or push cs mov inc xchg xchg les mov ret adc xchg mov lods or jno dec pop adc fcomip or fcoml sbb xchg jo arpl add ds jge fwait xor cmp lock jmp inc test data16 inc sub cmp aad inc (bad) sbb sbb jle cs push cwtl or push cmpsl mov (bad) mov (bad) xchg jmp frstor xchg push push outsb adc ret adc add sbb xor jmp js add mov mov leave roll out adc mov ret xchg inc sbb int3 xlat xor movsb xchg jo mov xchg mov adc in in aam push push cld cld (bad) xchg mov faddl sti fs outsb (bad) mov mov imul xor fcmovbe or (bad) gs lcall jb das dec xor (bad) jmp or enter xchg out (bad) std daa popf repz jno outsl stos fldt mov sub out cltd (bad) roll sub sub fwait clc fsubrs cltd inc xor movsb jae mov cmovae pop dec in mov mov cli mov mov mov hlt call push push fcmovu pop xchg add and int3 sbb jle sub pop mov sbb mov cmc outsl push inc cmp xlat or inc mov xor xchg aas mov lods nop std cmp or push mov testb inc sarb pop test push or popf push push sbb loop xchg int add (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov subl and mov mov hlt into inc xchg fsubp xlat insb shr adc adc mov ds xchg push jnp cmc ss clc fmuls pop push pop out adc xchg ljmp stos xor push and pop orb adc arpl jg or stc fbstp enter pop sbb cmp jg mov testl sbb xor dec mov mov hlt xlat xchg sub dec ljmp inc cli xchg mov mov mov jns rcl mov mov dec ss incb int3 inc lret test rcll in fmull inc stos cmp add cwtl icebp inc imul imul jns (bad) rorl jno cmc cmc mov pop mov repnz ret dec dec push into cs lret mov mov hlt hlt imul mov add sub lds rorb repz or pop out sbb xor sbb cli (bad) push xor add bound loopne imul mov out push and loopne and adc xchg nop negb mov xchg push iret xor out lcall flds adc xchg loop adc adc fs or mov loop push dec test call lret inc dec pop push popf out adc or loope xor inc mov daa inc cmp mov xlat sub (bad) pop push mov mov cmp test pop in pop dec adc or in push imul add enter mov xor sbb bound inc fmul int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb (bad) sti stc xor pop jle xlat mov sub add test arpl scas push push xchg stos sbb or push ds nop dec ret pop leave sub add or imul jmp cmp lcall cmp in pop jb dec in cmc fdivrl inc sub and mov scas sub cmp sub dec dec push jmp mov inc rol popf sbb fyl2x repz pop mov fmuls mov pusha mov dec push jmp pop mov sti jl xchg (bad) fnsave sbb adc jo xor sub xchg mov push mov cwtl loop mov jns sbb ja pop add jno mov iret or andl xchg or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock je or sub jnp pop cwtl iret ret ljmp jno mov scas rcl pop orl fmull jmp push ljmp enter inc js mov rolb push add jp pusha (bad) nop jae mov popf movsl into leave (bad) hlt jl cltd stos incl mov dec inc pop (bad) fsubs insl dec xchg xor pop mov mov mov gs inc xchg sahf arpl rcll jle in dec addr16 inc out in mov or call cmp mov popa sahf and mov sti aam int in pop inc xor mov inc and pop adc insb xor hlt lret fucom mov icebp push jecxz sahf fwait fwait aad push lds cmp out mov push test sbb push jg sub mov xchg xor push push into into test mov (bad) pop pop xchg mov aaa imul out sub rorb sub insb pushf movsl (bad) mov je mov cld es sub dec adc imul add ss mov shr push xorb in mov mov add inc mov cmp and mov dec and push xor mov cmpsl inc lcall add mov mov loop ret in mov mov movsl cltd leave adc and lods pop ret std xchg sub sbb push cwtl add jmp std mov test shrb sbb loopne pop xchg movsl mov sbb sahf mov lahf push std outsl dec jg cmc out push sbb sbb jns test int3 inc adc arpl mov xchg cli aam repz je inc push mov and or push aaa ss and jp mov lahf in jno jge data16 jge fldenv push jnp in movsl movsl test dec cmp arpl call adc imul insb push xchg dec mov pop outsb repnz mov addr16 sub jae mov icebp cmpsb js test stos dec inc arpl das into decl sbb testb adc cmp pop ds pusha add lret mov imul mov sbb sub dec xchg ljmp jmp dec fstpt pop push mov push es push adc test mov xchg std aaa pop in inc sub xchg jnp (bad) stc mov push inc je mov mov xchg inc xchg xchg inc hlt sub popf mov fstps fnsaves push sub out dec leave push inc loope lods pop ret jmp mov pop cmpsb mov cmp xchg imul lods mov mov lock andl (bad) repnz (bad) xor mov xor ret leave leave ds jne divb cmp jl mov nop insb popf sbb mov xchg jno idiv push pop lea test xorl pop pop in push cmpsl push pop or mov xor mov sbb mov sub dec mov es addl dec inc push imul pop loope int cmp mov push std pop adc addr16 and insl add stos mov add fwait push lods jg mov leave popa mov mov fwait pop test xor mov jle or fwait adc pop and jno jbe ret outsb lds fcomi idivl jae popa roll and push jae and and rcl fwait mov je xlat in sbb sbb xor dec ljmp sub jo outsb sub add (bad) std push push push sbb (bad) rcll push and lods lods or jp sub mov out sbb or aad jno adc cmc push pop push mov jmp inc sahf in aad adc cwtl rcr shll in aas sahf ss fadd mov xor scas cli movsl mov (bad) adc or mov and sbb int push notb jp mov ficomp int3 rorb mov addr16 xchg mov mov iret xchg icebp mov sarl es inc push leave adc and jae or sub mov and jmp push sub pusha adc inc pop inc sub dec push or adc jb std push std xor mov dec sub shlb mov (bad) pop stos aam xchg sbb fdivl (bad) (bad) ljmp fsubrl std sbb jl dec jo cmp add push lahf out out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb add fldenv (bad) ljmp rcrb sub push xchg pop ja jns cmp sahf sub jge xchg sbb pushf xchg cli icebp mov leave jne mov pop lods dec es fstps jge (bad) sti std xor nopl icebp insb adc mov xor dec scas lds das inc aas or js out push dec aad shl push movsl repz fs mov xor sbb in mov imul in add das xchg aaa xchg sbb xchg mov loopne mov push fidivr and jp xorb dec dec dec dec cmp fmul mov jbe loop dec xor add adc imul rclb push jl pop push idivl jg int3 fdivrs push dec xchg pop pop xchg pushf mov lea repnz mov js in in lea and movsl movsl and in in or mov add lock shrb push xchg xchg or or cmp xor xor pop sbb jecxz push enter and stc jo sarb mov out inc bound inc sarl dec mov xor jno and loop cmpsl ret lods fwait popf movsl xor insb mov pop push (bad) jae and mov xchg stos xlat rorl xchg and movsb xlat in add mov push aad push mov scas inc stc cmp (bad) adc or fbld sub adc iret jmp dec jb (bad) jae popf jno test ja inc movsb sarb and inc roll mov mov lods sbb (bad) inc push dec sub adc jg out ljmp push xlat fucomip popa push cmp call push inc test add enter jo push (bad) call shlb sub fstpt sbb mov or lock or mov jb mov sbb mov scas stos sbb mov pop (bad) lea push cmpsb leave addr16 inc dec aas dec insl cmp cmp pop inc jne mov inc std in ret xchg (bad) sub fdivs push inc adc mov dec in and imul mov cmp jl xor sti stos call add inc lret mov or xchg push sbb scas cmp rcl sub lea aas iret lds lds mov out xchg imul pop test (bad) gs mov cmp imulb jnp lock pop (bad) unpckhps (bad) pushf je and (bad) push cmc jge std cltd (bad) scas rolb les sbb pushf popf push inc les or or nop or pushl adc lods push aam fldt lcall in movsl movsl test dec cmp arpl call adc imul insb push push adc adc das (bad) in mov add ljmp hlt sub hlt dec or adc jg xor (bad) fisttp pop into (bad) addr16 dec lods mov dec and and test cmp mov rcl ljmp push mov mov jmp fdivrs lods dec dec pop dec jo outsl (bad) lahf mov fld in rclb (bad) lds cmp int aas popa mov mov mulb lds xor scas cltd mov jno sub shrb xor sbb jbe out lcall insl dec jl xchg push sti out jp jge xor mov dec (bad) or xor sub test push push or sub stc mov mov mov (bad) popf mov xchg sbb push lret out inc pushf inc cltd in and daa daa pushf pushf cmp mov rcrl (bad) std mov jns sahf shll mov sub hlt and cs in mov mov lea mov sub sub sub ljmp in sbb inc pop mov (bad) mov movsb ja xor or inc jg dec loop sub in ds dec outsl push popa sbb add push push ljmp push sbb stos out dec push sbb in xchg inc mov jne iret cmpsb (bad) fsubs sub lds dec push push into (bad) lret push fildl jecxz (bad) cld (bad) push mov gs push insb imul loop or ja sbb mov lcall out push xchg mov std pop dec mov in mov xchg cli cmp lods pop icebp outsl popf add and fnstcw cmpsl inc outsb insl xor imul lock jo or sbb (bad) push push push push and lods lods or jp sub mov out sbb fdivp dec mov popa inc aas lahf (bad) call imul lret cmp rcrb mov popf mov frstor jp and dec imul mov out sbb test add js mov jmp lods push orl fcomps fist (bad) xor pop insb add adc (bad) add mov mov stc pop pop sbb loopne pop pushf imul pop lret lock rorb leave int3 xorl gs in das or mov xchg dec (bad) xor xor jle aas inc mov pushf loopne jns xor (bad) push mov xorl out push jle add jae,pn cmpsl push ja aas xchg push mov push cmp repz enter pushf pusha jecxz pop enter inc sbb xchg aam pop mov sub dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or shrl out rolb push xlat dec xor sbb lret dec aaa add cli sbb repnz cmp cmp push sub dec and and in push push mov test cmpsb push xor xchg sbb mov jmp adc and int3 mov roll aad inc xchg test push aad aaa aas orl pop add ss test jecxz mov mov popf test insl test add and dec inc test into cmp rclb and jecxz ja push cmp xchg lret movsb or xlat call nop rcrl xor xchg fwait mov sti ret pop daa sub cwtl jo lret ljmp cld imul scas inc ret adc push mov insb mov insb push jb rolb pop cli add push mov jecxz adc (bad) les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock adc adc jb cmc ja push add push sbb jmp push ds xchg adc test in adc jbe xor int jmp loop fwait rol ret mov push push jg pop mov mov (bad) sub mov pop pop data16 (bad) mov fcmovbe pop dec sub sahf lret mov (bad) addr16 jg and fdivrl add les (bad) lods ds xchg imul cmp jmp pop pop push loopne fsts popf xchg adc mov push adc ret push mov js movsl ret ja jns es or add movsb cmpsl jle pop lcall sarl in dec aas das stos dec cmp loope sub dec and jecxz sbb ja imul adc cmp sbb push push (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor ror es push sbb mov xchg push lahf jle cs testb mov jmp ret lret out adc movsl fisttpl xchg stc jmp mov jmp pop test (bad) add xor pop add out inc fs mov lock mov mov mov fidivrl dec in lock xor push push fildll insw mov cmp orb or (bad) mov xchg and xchg adc mov push and mov inc push and mov xchg push ljmp out sbb push add adc (bad) fld and dec cmp lret fldcw in and fs aas divps sbb imul je pop mov faddl sti fs outsb mov lret divl in ljmp dec clc test loope movl lret push dec jg add popf add inc sahf pop sub out jge push pop pop adc adc addr16 test mov jle pop jmp pop and adc (bad) pushf data16 adc pop (bad) cmp das lret lods lahf (bad) rcpps add mov js push notl mov fildll xor adc mov mov inc icebp mov scas fiadd stc add insb rol xchg ss adc mov push rorb test (bad) xor popa jno bound std daa das mov popa inc into (bad) sbb out lods ss xchg mov sbb sub mov mov lret (bad) out (bad) push xor call test pop dec jecxz or mov pop dec aam setle daa daa pushf pushf cmp mov rcrl fild add std mov inc xchg xchg pop pop aas aas push push sbb add fisubr push test mov loopne mov lods aam movsl jnp add sbb loopne mov inc push call call mov push xchg jo mov and (bad) mov inc xchg insl mov pop jbe push inc (bad) xor pop xchg arpl or adc ss lods in jns js,pt push sbb mov sbb decb cmp ret cmpb outsl inc sarb xor fild add xor mov ja test sub mov and enter aaa mov sbb xchg es imul mov sbb sub add popf lock in loop (bad) pop test stos add dec dec test mov iret movsl pop fnstenv ret dec dec push into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec pop sahf int3 dec in mov xor sbb in test fwait xor mov xor popa out or ja sbb sahf inc sub in lods iret movb out cs (bad) sbb fisttp aad icebp sub sbb sub adc mov imul icebp mov repz ret in daa add xor aas pop pop cmp jnp les dec pop mov outsl adc cmp push aad mov cltd int out call xor out adcl js data16 add inc stos rcrb jmp out pop std out stos xchg nop cmc gs daa ret and xor sub call int and xor lods scas xlat rol stos or pop or stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test sub push fistpll adc sbb adc popf fdivrl bound jne pop lea imul lret cmpb and mov xor inc outsb ljmp pusha sub jb ret mov test jae (bad) jb leave cmp mov movsb dec mov pusha mov repnz aam insl jecxz insb movsb mov sub fstpl cwtl loop adc es pop jmp jno ret fsubl (bad) push addr16 lock cmp mov out mov shr cmp loop jmp data16 push (bad) cld mov mov scas outsl loopne xor cmp or loopne mov in mov test inc sbb in pop xor push mov sbbb outsl ds adc cmp jmp xchg xchg fcmovu mov inc addl lock add enter push sbb bound mov repz loop add cmp shl jno dec (bad) pushf dec pop dec cli lds pop or hlt xchg dec push sbb dec ficomp mov sub cmp push dec jmp add psrlq pop repnz test cmc mov cli cld sbb push pop lods or cmp (bad) sbb in sbb push (bad) ja xor loopne sbb (bad) dec jp int3 outsl sub aad and movsl (bad) sahf rorl rorl stos push mov adcl jb mov xor rcrl bndstx sub push dec add movsb pop mov lahf mov sar inc push mov cmp fldenv fbld mov adc inc push pushf pop in mov fnstcw stc lods adc xchg fstp mov aaa imul out in in in aam push push cld cld (bad) or mov inc add adc mov jbe inc ljmp or faddl xor sub jae gs push dec cltd dec faddl cs enter push or ret pop ss ja push dec sub movsb aas je dec out add mov lahf (bad) aas jo test lock sahf xor lock push add sahf mov or (bad) mov cmp loop sub push mov push cmp mov inc sbb outsb add mov call cs add mov fwait xchg (bad) stc xor shrl aas sub fstpt mov adc roll lea popa rcl cmpsb sbb arpl mov sahf adc push fsts ja out push inc test mov nop icebp outsl imul rol push jno test dec cmp arpl call adc imul insb push push adc (bad) aad xlat xlat adc (bad) loop xor pusha test xchg xor mov dec aam xor test add jp ror pusha mov outsb lret xor mov ret addr16 in imul mov fs sti push sub ret xlat mov dec push cld outsl fiadd and mov lds mov jg xchg mov inc fucom scas fsub and pop mov add pop cmp shrl sub mov dec bound mov test push (bad) xor lods cld fsubs decb adc mov pop mov dec sti out movsb lock fcmovnb test sub and jnp pop fwait (bad) stos mov subb or dec xchg inc sbb cmc lcall add icebp push movsl dec and popf mov jno and cwtl jns divb cmp pswapd loope cmc cmc mov pop mov out cmp xchg (bad) xor sub push loop repz jecxz mov mov in push xchg add mov cmp xchg dec xlat jno mov sbb and push cmpsb push lods cld or sti push cmpsb or and mov lret jecxz call call fs dec push push pop xor cmp rorb cmp jbe scas sbb (bad) rcr movsl mov mov pop sti xchg jecxz push cld adc icebp mov jp insb lock test xchg dec inc stos test ret xor sahf (bad) call mov test adc repz into cmp les mov movsl stos pop and ffreep ljmp iret jbe fcomps iret clc sub sbb ja adc mov cmp fnstenv pop into jl cwtl mov int3 hlt cmp add adc in paddd add sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli xor lret or inc xchg pop clc cmp ret mov popf aam iret mov ds cld loopw repz cmc data16 aas xchg xchg mov ljmp pop dec cmc sbb mov push sbb mov ret jne pop scas cmp mov xor cwtl push mov out cli rcl lea pop add mov (bad) or je and or cmp sub outsl roll sti popfw mov rcrl lea (bad) loopne jg push and mov ror popf andl adc pushf pop lock xorl xlat movsl popl mov mov insl mov mov xorl xchg (bad) push (bad) seta iret lahf leave mov fistl mov fildl inc stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or repnz xchg es xor inc ljmp inc lret cmp cmc jnp cmp fdiv imull jmp jmp lcall arpl pop xchg dec mov bswap stos adc xchg addr16 into xchg lret out movsb cmp xchg leave lahf lea clc (bad) leave sahf jno int3 and xchg mov pop mov loop or or lret addr16 mov pop (bad) and dec pop jo mov sbb outsb dec outsl lds (bad) jnp or adc jmp sarb rcr sub cli faddp mov and stc inc aad xchg fwait push loop (bad) mov (bad) mov test cli push cltd jns mov fs xchg ret movd jnp cmc mov mov out movsl dec mov add cwtl aaa jl and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test pop inc jmp in lds xchg loope std ret popa test lock and or mov adc add and lods push inc enter mov xor les pop clc mov enter add inc shlb or sub repz add add int3 mov and std mov (bad) js fadds jbe pop out fdivs inc stc in subl mov (bad) jae test xchg jl xor mov pop sbb inc mov bnd loope popf mov ljmp push js mov xchg xchg cli sbb cmp xchg movsb in mov outsl (bad) call mov mov insb aam adc sahf xlat push repnz out scas xorl adc jg sbb mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test lods test lea aas loope out dec sub lcall jns mov fistp add adc bound aad sub mov sbb or adc cmp mov adc mov test inc lret inc cli aam loop std pop xchg fdivp or (bad) test (bad) aaa pop dec pusha sub cld jmp cmp mov lds xchg xchg jp out and fist adc out jbe ret repz add fdivrl xchg xor or pop sbbl imul add rcrb mov or bound scas (bad) jno push push sub mov mov mov dec dec adc or movsb mov lock push (bad) js ret imul insb push push adc (bad) ja xor mov xor ret leave leave ds xchg dec push popa jne push cmp xor inc inc insl jmp imul aaa repz sahf in stos fisttp gs int3 cmp lret aam (bad) and jb add arpl imul dec in mov cmp addb std and push xchg lret nop dec cmpsl outsl mov pop mov cmp mov icebp sbb push adc add enter scas sub incl pop xchg pop repnz repnz or scas mov scas ret fwait inc stos jp clc jne sub ljmp dec dec xor dec pop loopne int jns mov mov mov mov push xchg mov cmp adc test push mov mov mov xchg (bad) jb mov (bad) dec fwait arpl rcr (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and jg add testb pushf jnp mov in mov bound xchg bnd fnsave fstl cmp push xchg pop fadd ret test cmp pusha mov cmpsb in cld xchg int and or xchg outsl sub cmc xchg pop dec fcoml cmp movsl aas jle (bad) dec push popf cwtl dec mov sbb aaa pop lods and mov push xor jbe fisubr je hlt push loopne out leave pop push xor jmp mov scas push imul cmc adc popa (bad) mov repnz loope or (bad) jno jp aad adc push cmp in inc ret scas fistpl push ds fcoml xlat loop fwait pop out xor leave add bound push xchg sahf mov cmpsb push in into xchg clc mov push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss xlat add mov pop rorb enter push push stc pop push pop xchg sbb das jp sbb lods add jne pop (bad) sub cmp xchg inc sbb push inc and (bad) add clc pmaddwd loop (bad) cmpsb das push sub push pusha fisubr addr16 in xor add mov and mov movsl int3 or (bad) lret out fwait test and fbstp or sub loop cmp into mov sbb aaa movsb jge jae mov jno xchg loop jns,pn or add inc dec or push xor xor call cmpsb fildl (bad) (bad) icebp (bad) cwtl add adc sbb dec mov add ljmp add add fdivs or sub imul xchg dec dec jno mov or add rol shll es data16 mov test (bad) (bad) sbb mov xor pop clc call sbb aaa arpl and jnp jl cwtl fisttpll xchg out scas jnp lss (bad) fdivrs cld mov arpl jp add (bad) es in push xor popa xor mov insl push lea xchg inc fs add cli mov aas cmp cmp xor jl xchg cltd or out int dec jo daa aas push mov stos mov cld in aaa mov mov cmp mov test in fistp adc lcall jle cmp mov sub les pop xor xchg out inc (bad) sti mov hlt orl test mov inc lret dec pop pop and dec cmp mov push fsubrs cld xchg test xor xlat lods pop cmp fcmovb movb orl lock add enter jo push (bad) call sar pop inc cltd and push add icebp test std add (bad) and jge ja mov sub push cmp outsl pop ss xchg cmp add out es ss and xchg insb xchg pop pop jo push mov aad lret shrb outsl inc popa icebp xor xlat push das clc cmp dec xchg pop push pop fildll mov scas jbe jno inc pushf xor mov loop in sbb push shlb jnp xchg mov out xor and sub cmp gs cmp pop jmp xchg sub in inc add inc dec mov sti popf jle and sbb sti push inc mov call aas nop sub xchg xchg daa (bad) aad push or sub call jg (bad) clc aas outsb xchg ret sbb pusha sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test cmc mov (bad) dec enter sub mov add out scas sarb popa std out ds cmp in pop out insl (bad) divb mov lds mov sbbb rcr inc lcall lret mov bound jecxz imul pop aaa fist sbb inc ret add lods fs or sub (bad) jge mov add dec add loopne lcall lods push xorl lock add leave out rcl mov repnz aam push lcall add in dec xchg or adc mov dec jb rcr arpl dec sub mov cmc cli push add and pop sbb dec mov mov ret xlat xchg sar sub add icebp clc cmp js hlt xlat sarw xchg ds pop dec mov fs outsb mov lret divl aad xlat adc (bad) gs lret jmp pop adc mov les jo cld add jle inc aas cwtl lods bound arpl inc or (bad) lds jbe xor sbb inc loop cwtl (bad) js popa or out push inc roll inc sub push cmp aad and clc jge push pop dec (bad) or sub cs push mov cmpl hlt aaa mov mov jne xlat stos ss add inc sbb jnp pop xor dec mov dec je push gs stos fcomps sbb loop iret shll js fildl push inc add mov and aam jno sar sub jg push lret jl xlat pop cvttps2pi mov in stos pop push in cs or add sub addl dec lea arpl and loopne cmpsl cld movb add push or dec push lock adc cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll add dec pop sub das or insb mov in fdivrs test popa jge arpl jecxz fsubl adc sysexit divb outsb (bad) outsl ljmp jge adc dec outsb cmp imul push push add dec in les (bad) je dec pop adc fsubr mov sub xor stc cmpsl adcl movsb movsl sub (bad) fs int3 pop xor mov test les push nop xor mov leave scas (bad) scas int3 pusha dec test ret out in push pop pushw dec dec cmpsb test lahf js js push jmp push in jmp repz popa cmp popf inc popa ds test or (bad) sbb pop jg loope mov out maxps icebp mov popf and repnz jbe lcall sahf xor into into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push lret je jns imul nop pop push clc repnz adc roll dec inc xchg in pop xchg (bad) dec sub and les addr16 fcompl fstpl shrl pop push (bad) jns loope out push bnd loop push xor mov bound aam mov pop in lods adc pop in jae cmc jne int3 push scas fldcw adc test xor (bad) and (bad) imulb (bad) sbb das push (bad) cli mov repnz movsl sub lock cli sarl icebp cli push xchg cmpsb mov pop xor pop cmpsb es sbb cwtl arpl mov ljmp lret cbtw lret inc pop jle jns (bad) mov sbb pop dec xor lcall mov cmp popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or mov sti shr mov pop jp add and cs inc jmp rcrl test ds lcall mov dec jnp push lahf scas rolb icebp ret mul cmp test mov ret cld cmp cld push cmp inc mov adc ret scas mov out adc lret dec mov out pop cmpsl cld push cmpsl dec sahf jbe les mov mov popa xchg adc push stc and je xchg mov shrl outsb and outsl stc pusha dec pop setg jae lds (bad) in and jne mov iret jmp imul sahf fs lcall add and lahf pop (bad) cli imul ror mov sbb repnz push mov pop xchg adc int3 (bad) xor (bad) and adc inc xchg mov inc addl lock add enter jo push (bad) call shlb in outsl ret loopne sub mov cmp push pop xor jmp cmp jecxz or cmc in std xlat cli and cmp rcll call popf mov mov test add pop iret (bad) gs loop repz leave xor xor add mov call mov popf mov ss (bad) not mov dec pop aaa cld sbb xchg cs inc mov jns sub xor xchg dec pop mov jecxz sbb and inc and scas call mov push mov add and subb mov mov mov jae out rcll pop xor push test xchg scas xor inc fisttpl mov aaa imul out in in in aam push push cld cld (bad) xchg mov ret out push and (bad) jbe ret inc arpl dec pop bound mov cmp lret cmp jbe xchg sub setno div push xor sbb je psraw fcmovnb jae xchg int3 jg inc inc shll xor aad stos sahf repnz stos fist jg test fisttpl js loope mov or leave add push in add mov jb mov sub outsb cmp dec lahf push in insb lock int stos scas add jnp sbb pop mov leave and psrlw int3 cmpsl adc add mov out lret sahf leave push ja and out aam sub inc sbbb dec shl sub inc out add imull adc mov xchg jb loopne push lret xlat mov sub lret ret imul insb push push adc (bad) aad xlat xlat adc (bad) gs enter jbe add xor ret mov js add hlt jge (bad) pop je cmpsb jbe ficompl fnstsw in clc sbb cmp add add test divl aaa rclb push imul js push mov lret icebp and jmp call or aad test sbb push int es int rorl into cwtl (bad) cmpl pop jl (bad) xor leave bound fs jo lods xchg movsb sub cltd jns pop mov add idiv xchg add mov hlt dec ljmp jb shrl test sub iret mov dec pop sti inc inc jne or lahf popa repz mov push les mov test clc in in jecxz call (bad) fdiv inc std fbstp (bad) (bad) int call mov mov nop cmp jne divb cmp pswapd loope cmc cmc mov pop mov repnz inc jp es and (bad) out cwtl jle jle or test jns push push jge leave mov loopne xchg (bad) push push xchg out sub loopne mov aad lcall mov out cmp push sub jnp sub pop (bad) cmp gs sub fisubl ret test mov mov mov push mov popf mov bound pop je inc xchg lods cwtl and cli inc ret push cmp scas mov out push loope pop jo push cmc (bad) sub rcrl orb and loopne (bad) in cmp add mov push dec lcall pusha test repz cmp loope inc sbb movntq aam xor out inc mov xor jno adc out pop pop sub or data16 mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd pop add mov ret push stc in xor mov inc add in addr16 mull xlat (bad) andb lods dec inc lds (bad) lahf test lret jle div jg sarb sub insb sbb mov cmc mov add or arpl repz (bad) call jge cmpsb xchg push jle (bad) lret ss xchg xor mov les mov aam sub test sbb adc xlat sar inc ds jge xchg js pop out (bad) out sti fistp inc enter cmc sbb iret dec pop xor psubusw mov xchg aad mov fistl mov dec sbb xchg inc sbb popa mov or mov jbe incl (bad) mov jns loopne lret aas pop adc jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp clc pop out (bad) fiadd xchg inc outsl in into pop out daa mov adc mov dec and bound cmpsl adc cmp push jne mov int3 cmpsl ss xchg pushf inc ret test jmp imul enter dec (bad) pusha ljmp mov sub popf out imul dec or xlat pop stc or and mov cmp sti and add xchg iret pop and imul xor or mov stos test jae xchg stos jae add cwtl pusha sbb cwtl mov (bad) and icebp cmc stos dec scas sbb ja dec jb lds cmp cmc jg mov scas lock sub inc pusha ja mov inc mov mov add adc sbb aam pinsrw movsb in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov aaa in adc arpl out inc call jo int in xchg je mov or add mov or stos sbb aas repnz pop push addr16 (bad) aaa jg adc fcompl jnp cmpsl jge cmp loopne pop test lret je aad iret outsb pushf xor aam cmp cltd addl inc sub movsl xor int fwait push cmpsb aam jecxz and inc fs test (bad) jnp lods mov or or push push stc inc pop gs sbb test inc adc mov mov adc cs add add dec mov and pop ficoml xchg (bad) jno add shlb test xor rclb jmp ret add popa nop push inc mov and xlat call mov push dec sbb mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec ljmp mov push mov lds push fldcw inc inc inc push stc sub adc sbb lods cld pop adcb rcrl addl push adcb add add scas push lods popf rcll shrb jbe xchg add mov rorl xchg cld fnstsw movsb mov pop mov inc aas nop cmp test xor movsb test sbb jb popa scas (bad) stos mov arpl adc fsubl clc sub aad fisubr sti dec mov mulb mov add call bound movsb popa nop and add mov fwait sahf cmp cmpsl inc outsb pop or inc lret mov jmp push push stos (bad) lock inc mov (bad) call mov ret adc pop pop clc clc insb insb push push adc (bad) ja xor mov xor ret leave leave ds arpl sub and pop sub jl dec mov sbb adcl mov or les sub pusha jg xor mov sbb stos clc and (bad) pop or jno xor mov dec xchg pushf xlat mov es push fwait call lea arpl jae cs mov and data16 jp subl test ret xchg out repnz lcall mov mov pop mov xchg std jmp sbb pop add push xor cmp mov nop add loop sti test scas xorl or pop shll ds lret or or pop xor inc imul inc pop jl in adc pop mov adc or int inc lcall std std mov inc xchg xchg add pop pop aas aas push push sbb (bad) rcll push and lods lods adc (bad) mov fsubrp out push fidivr cwtl add jle xor sub insl stos lds imul xor inc outsl push pop jmp adc nop scas sbb mov scas test xor push xchg xchg dec movsl sub inc or sbb push stos sbb cli aad nop daa stos fidivl out pop pop adcl inc pop in mov pop lock add insb or xor dec fcmove xor iret in sahf or mov daa jns cmpb loope inc push js cmp or push movb mov scas call (bad) testl sbb lret push scas pushf lret add je frstor mov dec aas (bad) inc sarl addr16 cltd xchg pushf sub pop mov scas call hlt lock aad push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd and mov fldenv xor je cld xchg or (bad) jmp test mov (bad) or stos and mov push cltd or insl sbb outsb cmp out jnp dec test jne cltd std loop xor out pop mov jne push or test mov adc lahf sbb pop jo je shll xor mov loop icebp fdiv lea mov repnz jge mulb fs inc adc add xlat sub test daa insl clc (bad) xchg cmpsl or pop icebp in es adc and repnz ja xchg jl dec popa or mov jae enter xor push ret popf cmp sub jnp std imul dec cs mov mov test in pop enter jne inc and xchg sarb mov or add rol shll es data16 mov js in in lea jg cld cltd je cs push inc scas sbb jmp xor nop mov pop (bad) sub inc push icebp dec gs call pop dec daa outsb into sub and lcall hlt pop add adc jmp dec fwait loopne xor jmp les fmuls fsubrs mov xchg or and (bad) jb data16 into dec sbb (bad) daa inc jecxz inc and les arpl (bad) dec mov ds mov mov jecxz nop add mov mov in mov push fbstp arpl outsl lock mov mov mov mov jl adc inc test add xlat sbb repnz inc scas or sbb (bad) or or adc jecxz mov jg inc insb inc jne dec push jnp cmpsb mov pusha pusha lock add enter jo push (bad) call shlb lds cmp into jbe loope cmp xchg pop cmc das test inc mov or jbe lret stc ds pshufw outsb fdiv adc sbb xchg and dec cmpsl ror mov sbb mov test jns mov in push roll mov adc inc rol data16 push xabort jb test push push shrl and inc in mov loop sbb inc push rorb sub (bad) and sub repz fidiv mov bound cmp or sbb fsubrl jne cld cmpsl gs mov je faddl in dec fisttpll pop iret lods std bswap pop ja sub ss lret cmp mul or sar inc in cmp or aad in shrb and jnp and mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl or jmp adc daa jne ficom into jle sarl call out dec or cmpl pop jp pop pop xchg xchg cs (bad) call or mov in xor in fiaddl mov cmp cmp xchg xchg sub mov fidiv mov xchg xor push push data16 je sbb push cmp push cmp adc cmp mov mov fnstenv mov push mov mov lds add xor jmp (bad) pushf inc push hlt mov inc rcrb shrb movsb cld das mov popa mov inc pop pop and push jmp (bad) push cmp rcrl xchg push jecxz fmull pusha or pop lock stos inc orl call xchg sub lods mov push mov add lcall addb adc gs daa pushf pushf cmp mov out cmp xchg (bad) lea loope sub mov jle idiv push nop inc and cld xorl xchg push cmpsl cmp or rol mov inc lcall aas sarb push xor lods mov xchg fstps pop mov loop icebp mov arpl iret adc and fidivl add les sub jo iret and dec outsl push xor jle cmp xor xlat ss cmp out pop (bad) mov push sahf aaa loopne data16 test pop or mov jp push ds not xor xor ret inc push xchg add xor xor sbb cwtl jecxz pop out (bad) in xor jp xchg sbb adc rolb sub popf cmc mov mov inc sbb addr16 push (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods or ss (bad) jae and adc inc in add jp mov insb (bad) add in in xchg mov sarb mov mov loope push das and stc stc jmp call mov scas add int cmpsb test fs shlb pop ds andl push push mov testb roll sub rclb push fsubrs popf cld mov sahf mov or in sub pop in enter lcall mov ljmp out mov adc fistpll js sti shrl add xchg inc xchg fstl mov pushf addr16 imul push mov repnz out jp or insb push add xchg les add aad mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or fadds bound lret lret mov xorl (bad) mov dec out ss cmpsb stos incb jns ja lea and adc mov sahf and in xchg cmp lcall push push mov push inc (bad) add inc lret jmp mov pusha mov cmc push add mov pop (bad) push push je dec dec mov mov cmp add outsl mov pusha xlat pop dec inc aas mov sub mov fbstp jnp repnz leave jnp movsl in ret inc lock (bad) ja adc rep add cs xchg xor fs adc sti ret lcall hlt cs loope imul lock ret mov fildl mov cs test adc jbe scas scas dec dec jns cmpsb cmpsb bound das test or cmp jg lret xor push enter je mov fwait testl xchg out xor cmpsb test leave ret dec inc and popa insl dec mov outsb mov out push fildll aam ljmp inc stos stc jno sti xchg inc repnz dec cmp in or xchg stc out into arpl pushf mov mov sub loope mov lahf mov sbb mov jl std imul sbb xor adc jecxz into (bad) adc fs inc je fwait dec fisttpll jns adc jbe and add push jge mov sub dec mov xchg popa jmp or jne inc enter sbbl sub sub ljmp add (bad) xchg xchg fdivrl pusha aaa lods dec mov inc addl lock add enter jo push (bad) call pop pop idiv mov inc gs stc rcl lahf incl jle pop ljmp mov (bad) and push sti adc arpl cli xlat (bad) jo mov jmp xor add and push aam jo add lret dec cmp cmpsl and fisttpll mov xchg or pop int cli sub push cli cmc lret not rorl lds pop je scas cmp mov arpl cmp mov ja scas inc in pop jb inc xor push xchg aad (bad) dec out sti stos mov push jecxz mov fs jmp sub test les add (bad) sbbl in nop int3 ss cmp insl xorl jle addr16 xor outsb fwait sbb pop sbb pusha in mov arpl mov das pusha mov or fnstsw aaa imul out in in in aam push push cld cld (bad) xchg mov outsb nop push (bad) xchg push aam dec out mov and ds js add and and mov sbb idivl adc pop sub push sahf mov data16 xor repz cmp mov cmp pusha paddq jge fstps mov mov mov out cmp dec (bad) mov inc notb outsl stos rolb dec lock pop mov mov fst push mov cmpsl (bad) in lods sub psraw outsl sahf xchg mov lods or sub mov dec stos adc push jecxz (bad) test dec mov push jae pop insb aaa inc dec outsl cmp mov jmp xchg push add or push adc xchg lret xor and fidivr mov xchg adc pop pop clc clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov fdivrs addl xorl out or sub xlat shl aaa pop xor cwtl lods mov inc imul or sbb mov push in test jno test dec dec jg push das mov mov jg jno mov and mov fptan mov push je lahf imul mov and movsl stos ret (bad) and mov lret out inc jecxz,pn cmp push nop adc add in cli scas fnsave stos aas adc jae xlat daa (bad) icebp pop push push (bad) cli xchg add xchg test jmp push mov push rolb and mov mov test popf aaa cmpsb push rclb (bad) rclb mov call add movsb and adc and test addl or jmp fisttpl add pswapd loope cmc cmc mov pop mov repnz ret dec dec push out (bad) push and pop fs mov outsl xchg add cli arpl mov (bad) repnz xchg test mov jge,pn mov aaa (bad) adc or mov outsb lahf mov jnp jmp nop iret fsubrp xor fidivr fcmovnbe mov and mov mov sub cmp mov in mov (bad) push xchg repz dec bound or shll pop dec push sub sbb stos cmp fs add test inc add adc stos outsb adc es lret or push aad je icebp or mov and inc pop jae aas int int scas movsb inc out (bad) add mov gs hlt adc movsb mov xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc xchg and jle fiadd fistp xchg mov push (bad) mov shrb jmp xor inc lods dec fwait inc mov cmp ret mov adc (bad) or and jno (bad) jb cmpsl jno dec cmc arpl pushf push daa xor mov iret jg pop clc mov jne aas pop clc (bad) les rcrl ret (bad) iret jmp rcll mov pop mov sub out jmp push push push negb test stos lds movsl sti pop fiaddl sub sub xchg incl push enter clc lea and xlat adc mov dec xchg jnp pop sub pop cmp add xchg aaa adc out lcall mulb and rcrb cmp cmp cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl vmovhps fwait jae add add sub lock das out adc adc add sbb sti icebp dec jg in or test sub repnz xchg sahf sub ja sub inc mov lcall gs mov outsb cli or stos xor add xor mov adc mov ret mov cmpsb int in outsb fwait mov dec (bad) nop sub mov roll mov out xchg stc adc cld lahf pop movsb in stos push sbb pop cli cs aas test mov inc pop add and inc and insl inc adc jl push cmp mov mov into bound pop jmp mov cmp or xor add call or mov push jp mov aas out sti dec and or addl nop movsb movsb push push push into into test mov (bad) pop pop xchg das sub dec inc jae push aam in mov (bad) cmc ja ret pop jns sbb dec js aaa inc jnp and jns add pop inc mov or lret mov pop sbb mov mov jno test je movsl dec leave fcom roll (bad) xchg mov xor and dec call and pushf push repnz (bad) rcll gs fsubl ret hlt fs cmp fistp dec inc jnp in cmpsl push and mov pop sbb dec push add adc xor mov inc push loope or sub dec gs ficompl in xchg out xchg out fnstenv sbb mov pop cmpsb loop das mov scas cmp leave dec mov (bad) and xchg dec into es iret ja inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl inc jge cmp mov jo sti dec xchg stos (bad) sarb add pmaxsw gs xchg roll (bad) xlat inc sbb add sub imul cld insl xchg dec stc mov add add insb andl cmp and adc out cs in fldpi push and lock adc divl dec or enter ja inc xchg jge lahf mov ret mov iret xorl xchg loop call and push dec ficomp shlb push call int3 lods ret dec pop repz dec loopne scas pop hlt movsl push inc xchg (bad) jg arpl movsb cmpsl jae jecxz cmp daa scas int3 cmpsb sub lcall les mov lods pop jg popa daa in cmp mov ja lret adc dec sub xchg jo repz imul push adc (bad) ja xor mov xor ret leave leave ds daa stc ds inc dec xchg jbe les cltd dec or ss imul jnp or pop test lds stc sub fistl and xchg sbb jmp pusha mov jp outsb hlt xchg (bad) int3 mov es mov inc push ret xchg fucomip loope inc shrb cwtl js or or fs cs shrb jmp jecxz adc out sbb sub test sub or sub jne xchg mov ja cs mov lret xchg xchg adc push sti inc inc mov sbb push jnp mov adc mov mov (bad) mov bnd (bad) lcall or out das mov test xchg cmp lds cwtl addr16 lds ja pusha xchg pusha lods call pop (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and int3 cmpsb rorl inc orl xor cmc and enter rcrb jl fcoml daa mov dec jne dec mov or sub mov mov lods push jno and mov pusha mov cli cmp icebp xor adc sbb cmpl jo mov mov add sbb outsb bound add pop or sub push in sub and jmp jbe push rolb pop push mov pushf xor daa movsl jae int xor in and inc jg dec das int3 in rclb or xchg divl cmp test and fsubs jmp nop mov inc ret repz or call push adcb cmpsb lret insl insl push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd jne lret sahf fsubl cmp outsb dec sub xchg pop stc and dec sbb jecxz inc cmp pop xchg in stc push aam jno pop roll bound mov push insl daa dec repnz push in pop dec cmp fwait push xchg push xlat cmpsb mov jae dec out out aad or call adc lahf pop mov push and fnsave fwait cmc cmp mov aad jbe mov lea push orl pop push or fcoms push add sarl enter dec mov les mov in roll jmp out jle adc pop (bad) inc mov jne sarb lret mov clc mov mov adc call addl aad mov inc xchg cmp std cmp jns loope jno mov cmpsl cmpsl sbb add rol shll es data16 mov js in in lea pop out add dec icebp xlat outsl jo sbb call sbb sbb push div iret int3 dec js lret idivb stos inc pop push outsl data16 lcall cmc adc jle or mov test test sub cmpb int3 dec loopne xchg ret icebp int3 (bad) (bad) movsb mov or cmp test xchg sbb movsb stos adc out push fwait fs push pop (bad) and mov add xchg (bad) sti dec (bad) mov je mov lea xchg sbb mov jl xor aas jo (bad) xchg cwtl lret movsb cmp roll std adc jmp xor mov je es pop add imul sbb (bad) jo into mov sub stos das in aas inc imul int lods lods push push pusha pusha lock add enter jo push (bad) call shlb sub adc jg rcl add mov sub cmc inc scas push int andl push and pop clc (bad) xor dec out repnz sbb xor mov into pusha add (bad) sti gs xchg cld pop xor pop scas out dec aas lea adc mov int pop sbb (bad) int3 icebp insb stos int3 xor jge sub rol (bad) imul push pop and jl imul and dec outsb add or push jno jns pop add pushf lret push in aad xlat ficoml xchg push daa clc jne push pop (bad) movsb loop je (bad) jbe push faddl popa inc fist (bad) mov in scas xor dec push test test ja lea adcl bound xchg and jb data16 out or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl js lea cwtl clc lret jp push lret pop pcmpeqb setnp out sub push stc adc in add mov mov in cld sub mov mov out test xchg es (bad) push xor ficom (bad) cmc push loopne insb mov fdivrs incb stos insb dec rorb cmpsl ljmp dec insb stos or idivl inc dec dec or shll iret jne setle movb xor mov (bad) dec mov or (bad) lock fbld mov stc (bad) bound inc je xchg push inc lret lret jge cmc mov mov jmp das scas int3 mov sub fimul out aaa jae dec mov inc (bad) mov xor or xchg addr16 dec cmp jle add scas pop push lcall addb adc gs daa pushf pushf cmp or ffree jmp mov add xchg mov mov sbb push (bad) iret sbbl xchg in scas push (bad) nop in hlt push lahf mov addr16 dec add xor scas call aaa mov aad seto pop (bad) int3 sahf and and inc arpl into xchg aad or jg je (bad) repz add inc mov push fstpt xchg adc movsl ret shrb (bad) jb das cmp xchg bound mov push cwtl mov xor insb lcall aam daa add or dec ds dec addl inc shrb stos mov leave or xor jns jno cli call push xor inc xor push rolb xor sub jg xor mov sub decl std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push stos mov add mov iret std mov jle es sbb sbb lret cmpsl or jle pop xchg loope jmp into pusha push mov pushf data16 inc dec repnz out sub xor xor sub mov dec clc fsub pop sbb sub jge ljmp mov push jo cld imul lret jo mov dec test pop mov paddsb push ret pop pop pop (bad) lock fstpl in jl xor aam insl dec loop (bad) jle push leave ja test add movsb in cmp mov fdivs adc inc stos xor add int int bound gs cmc mov add mov xchg adcl (bad) pop pop xor shlb dec jmp add lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or andb mov dec pusha daa inc mov add or add (bad) fisttp mov mov jl fcoml push jae outsl push imul xor or pop rcrl jmp add popa mov in or cmpsl (bad) lret (bad) fistpll add pop mov xchg cmp dec enter popa (bad) lcall (bad) stc dec push mov jle scas sbb ret outsb xchg gs stc lret lahf xchg lret fwait xor mov je inc jecxz xchg lods mov jb dec bound mov call mov mov inc pop mov movsb ror xchg int3 pop sub xchg ss mov pop aas inc pop xor (bad) incl fwait mov jmp pushf lock stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or jns pop clc xor cwtl mov sub and test es push sbb fnop fisubl push cmp cmp daa mov push enter jb pop leave cmc mov rorb lods decb les cmp jmp sarb jnp jnp int3 or cmc adc leave cmpsl out out pop ret in adc sbb in arpl das inc imul dec push pop adc xchg cmp mov call xorl jbe pop mov sbb cmc das cmp push lea iret jo int3 mov shl iret lock lcall jecxz or cmp clc inc arpl cltd cmp adc pop push mov in pmaddwd adc leave enter sarb nop mull fsub jg push jg cs fcmovu mov inc addl lock add enter jg,pn inc mov clc and addr16 cwtl mov adc arpl les pop pop int3 mov and fwait jo jae (bad) ja pcmpgtd push lods xor dec push jg,pn out xor lds or cwtl mov mov imul (bad) mov scas mov cmp dec (bad) xchg jns sbbb mov adc xchg lock (bad) mov mov mov fsubrl lock add shrb push jmp add lea push mov ret inc cmp xchg test movsl and dec cltd outsl fwait ljmp fisttpl popa jmp dec mov pusha rolb test jge add mov dec shrl xchg lahf inc xor mov sahf jmp insb add xor leave daa mov in mov lahf inc lock addr16 sbb int3 (bad) pop pop xchg mov aaa imul out in in in aam push push cld cld fstps push xlat jbe outsl jle push add xchg (bad) jp insb jecxz mov outsb or dec cmp dec sub inc mov mov mov mov sbb inc mov or fldln2 push xor cmpb xor push pop pop repnz mov push add mov pop fwait push gs sub into xor jae jmp and (bad) fisub in push xor dec stos mov addr16 ror dec cmpsb dec pushf pusha mov push push nop cli or es add pop movsl aas fsubrl and sbb mov adc inc leave pop xchg jbe shll out cld sub inc xor pop cmp test xlat adc cmp aas adc xchg xchg fisttp mov (bad) jae cmp arpl call adc imul insb push push adc (bad) aad xlat xlat sbbl jg shlb sub push adc dec cmp int3 test cmp xor push leave jnp outsb sub jmp lret lods jmp push stos cmp pop arpl jmp sbb mov je sbb repnz orl cld nop dec pop push addb dec in add leave nop sbb js pop (bad) arpl xor adcl imul mov aaa xor cld pop or push dec (bad) dec js add jbe cmpsb pop out mov aam (bad) cmpsl mov imul movsb pop dec je xlat jg ja (bad) divl mov cmp sbb sti mov lcall les (bad) mov push jns pop cmp xchg xor add add dec dec dec jnp inc cmpsb xor cmp je dec lcall push lahf push aas ds jne divb cmp pswapd loope cmc cmc mov add mov arpl adc int3 (bad) aam lods add adc mul mov movsb push mov cltd dec clc sub enter pop dec dec aas jmp jle ljmp cmp inc andl popf aad aad ret and or test ficompl jmp aas mov dec jno lret insl shll push dec pop mov adc mov fwait rorl add pop dec clc sbb int fst xchg call mov push ret je pop add sub push arpl sti mov out addr16 add jb rcll pop js inc jle (bad) ds mov cwtl dec push out loope cmp movsb adc xchg jecxz movsb cltd cwtl and jg es scas movsl sub cmc mov ret jge sub pop mov sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 jo and popa out lret xor shrl xchg shlb hlt cli cmpsl mov movsl xchg mov cli xchg insl pop adc mov adc or in xchg jmp dec sub fcmovnb mov jmp lcallw adc pop int push push sbbl ret pop test push loopne cmp mov (bad) lret loope leave cmp xchg sub and scas cmc in aad mov lcall out mov fisttpl mov stos dec mov and inc jp jbe pop scas mov and (bad) jae pushf cli fstl sub aam mov push push xchg xchg into mov inc stos pop dec adc movsl jecxz or mov push pop pop mov cmp push dec sahf into add jns jp fisttp cmp popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or ss clc jge adc aam (bad) xchg dec sub mov lds jns sbb cmp push orl push mov xchg lahf mov xlat shlb sub data16 mov rcrb out stc pxor hlt or add xchg dec sbb xor push adc negb mov sahf push mov int3 mov lret movsb lcall sbb jno ror push adc jb mov inc dec jle cltd jmp add daa xchg sbb mov jl push xchg xchg out out xchg xchg xor jl xor sbb int3 sub push std cmp (bad) fiadd push xchg add or cmp scas add pop aaa push in (bad) fdivl jns push and push fwait add cmc or jl and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test fsts daa stos ss les int3 jl or push cmpsb jae dec cld jp sbb mov cmp sub xchg push add icebp cmc pop lret cli popf sarl out mov cmpsb stos jne bound imul sbb adc lcall loopne dec js or pop mov outsl pop inc fnstsw pop (bad) jb clc xchg or cmp popf pushf lahf test mov dec xor and or int push jne mov push jle in imul cmp test adc out sub mov mov xchg in xchg mov xor dec jecxz mov inc xor xchg dec jge mov insb add lcall push or xor nop jp mov cmp insl mov hlt lds scas jns sbb sub aaa fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl cmp sub sub insl icebp mov into sbb dec sub mov xchg ljmp push mov pop add test stos inc mov lret cs inc int3 dec mov dec daa fidiv jbe mov cmp xchg ds testl sar and inc in loope pop mov cmp aaa test lret gs push xchg sub popf dec dec sub in xchg scas cli lret (bad) adc sbb inc sbb mov mov pop int cld sbb std sub cmp and pop int3 sbb add add mov mov fsubrs xor std popa inc lahf and imull icebp popa jge gs arpl call adc imul insb push push adc (bad) ja xor mov movsl push push adc (bad) cltd pop into and pop mov mov sbb sub es push cltd fisubl dec jbe sbb push loope loopne xor andl lret pop mov sahf sub cmpsl add je mov inc dec ds adc insl xor xchg fcmove in nop mov push sub jecxz mov stos (bad) push lds pusha ret loop int3 mov inc pop test shrl das push rsqrtps addr16 adc (bad) sub push ficompl adc pop mov test sbb mov std adc push cmp out jbe arpl sbb imulb xlat jnp in jns cmp add pop jle jne in xor or mov pusha scas fwait into flds sub rcl cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll xor pushf mov push test mov lea mov and sbb cmp out lret mov repz inc sbb aaa test fstl (bad) cmc mov cmp pop addl adc pop fadds pop mov xchg loop xchg fimull stc jae mov and adc xlat or jp fadds xor fsubrs xchg (bad) scas gs int3 and mov jb pusha adc cmp xor and mov out and add jle cli jecxz das movsl sub pop mov fwait cmp pop jae mov pop call lret xchg std ljmp dec ret and decb fidivl pusha push adc adc pop loopne jp sub mov push push add out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss sbb mov in clc xchg clc xchg fdivs fistp sub mov orl and in cmp (bad) push add iret in push push lea and testl cmp out jnp add xchg mov jne xchg jmp inc mov and xor jp inc jno mov data16 jae adc in stos mov sahf repnz mov xor and outsb (bad) lret add sar (bad) and add dec cli mov dec (bad) and sub icebp rolb mov mov cltd jo cmp test push out (bad) xlat jecxz in out daa or add hlt hlt jae push push cmpsl sti ficom or sti xor mov push fcmovu (bad) adc in sub mov xor fsubr sbb pop test adc jno mov cmpsl cmpsl sbb add rol shll es data16 rclb subl mov data16 inc inc push jmp push ror push test inc push sbb xchg movsl xlat lods sbb xlat loopne xchg ds gs fnsave cs push sub or ret adc jns mov lahf and aaa (bad) or mov mov mov cs dec mov icebp jne add aad add lret dec dec jg (bad) xchg sub arpl popf sub (bad) xor fidivl push or jb das in push aas pop clc ret inc lret push (bad) iret jbe (bad) fwait mov mov test or fmull out mov test enter jp aas pop or pop repz (bad) mov aaa loope push mov pop sbb cmp dec icebp rolb mov jns fcmovnu mov pop cmp push lds adc cltd xchg fcmovu mov inc addl lock add enter cld xchg mov add mul into or cmp inc adc test mov adc and sbb or sub (bad) push inc out jmp jmp add out xchg add add pop adc jno dec pusha test or jo int3 xor popa xchg pop mov mov cli nop shll push imul sbb pop fbstp into dec (bad) cmp or sub outsb fmuls sbb call lret dec jne push xor cmp pop jae jle push jb in leave dec dec cmpsl out outsl addb sub sub ret mov outsb inc daa lcall sub sub inc add push into mov xor jmp add xchg push lret xchg mov xchg je lret mov fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in pop push std mov cmc xlat pushl popa clc add insb les mov call in or mov jns sub or mov rcrl push xchg in ret int3 or inc movl or (bad) jmp sbb cmc es mov push and adc daa loop mov cmp scas jecxz (bad) add xor sub mov inc cmp stos aad pushl lods fs xchg lahf rep and push xchg cmc imul pop daa push insl repnz mov mov inc inc push pop xor enter push test xorl std insb add ret hlt mov out dec lods inc adc push xor lds cmp (bad) xchg push xlat cmp out mov xchg fcmovu mov jg pcmpgtd add fs outsb mov lret divl aad xlat adc pushw out icebp stc lcall nop imul fnsave mov cmpsb pop add xor sub frstor mov fsubrs inc pop adc xchg test loop scas out jp add imul sbb and ds inc xchg fcompl (bad) in sbb test mov add inc movl bound push fwait enter rcrl jmp movsb jne stc push jbe mov movsl (bad) decl test and pushf inc add inc jb out cmp adc jo cmp dec ja lock shl lret and mov push inc sbb lea inc cli in adc xor and jg ja add sub clc scas imul dec out mov (bad) int ficomp out sub lcall lea cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb inc inc or cs pop enter outsb dec jle mov outsl scas loopne push add mov and push mov mov inc push adc out pushf in jl xor (bad) xor out loopne mov mov cmp (bad) outsb mov mov cmpsb (bad) cmp ljmp arpl xor mov xchg sti stos fs lcall jge pop adc fstps xchg sbb lock pushf xchg sbb call cmp les dec xor mov sub shlb cmpsl adc pop inc cmp aad ficomp repz scas fiadd sarb movsl lock fmull mov sub cmp outsb or scas cmpsb lcall ret adcl mov movsl and push dec dec push into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg inc in dec shlb loope cwtl inc and dec lock or ljmp cmp add mov test mov and out divl mov aas je push or lods gs or pop cwtl xor bound cmpsb and sub cli icebp inc inc add das lock hlt aas fcoml inc sub lret push movsb and push and cwtl or icebp out xchg add sbb aaa xchg je jne into cmp add jp out test push mov inc ss aam (bad) jbe push xor push and and popa js leave jbe out inc add jno pop xor xchg repnz mov add mov mov xchg nop rcrb sub aaa sub imul fildl add jno add or mov adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or aam dec mov xor cmp int lret push enter addr16 inc rcrb push aaa dec cmovne lea ds pop dec hlt add push push stos cwtl jmp (bad) lret roll mov fnstcw and lcall mov sbb and pop dec lods cmp hlt ret mov cmp jb out push mov and insb arpl imul xor je adc les mov jnp jae lret or jmp pop jb sbb in xchg insb gs out jge push ss adc sub in mov add inc pop mov call adc pop xor popa xchg ret xchg imul lock and inc cmc xchg pop and movb orl lock add enter jo push (bad) call shlb test push add int out inc push mov adc fistp fidivr ret cmp jo xchg out ljmp xor jne push in ret in sub and fidiv mov mov nop inc jo sub dec leave ds jno dec out jnp adc lea lcall daa scas xchg add cmp adc cld mov ss sbb push xchg into inc xlat pop and (bad) std inc jno dec int in dec jg or iret lds sbb push push jnp rcr in mov adc repz lret jo leave pushf jne inc lods aas xchg inc stc or pop cmpsb enter mov jg sub xor sbb and xor fimull pushf in jmp pop jl xchg in (bad) mov dec jge pop scas decl mov mov fcmovne mov aaa imul out in in in aam push push cld cld (bad) xchg cli push pop xchg movb cmp bound stos out cltd cmp adc xchg imul repz mov repz xchg add dec inc adc daa mov dec stc sbb cmc mov jp shll scas dec je scas adc inc out xor into loope jecxz ret sub subl xchg mov sub (bad) in pop mov dec std into pop lods adc dec fbstp push outsl xchg adc out mov lret lret in out je loopne (bad) mov jne loope in rcll adcb mov cmpb or dec fisubrl adc adc lahf fisub dec xor repnz or clc pop push out xor adcb dec insb psrlq xchg andb xlat dec mov lret popfw popf ret adc pop pop clc clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf xchg pop mov stos sub sub popa dec lods jnp (bad) xchg xchg cwtl clc sbb mov int cmp out add or aaa xor xlat sub add insb cltd add push jp mov inc jge jl dec enter jp or xor int jns mov jmp add inc aas inc mov jbe lret out mov fstl add lret stc scas push aad inc adc lahf in cmpsb or clc mov cld sub push das ljmp aaa test mov call dec dec js les mov cltd push repnz cli sti lods sbb rcll sbb xchg mov or or mov mov in imul cld xchg pop push leave or pushf mov sbb enter cmpl cli sbb jo pop xchg je cmp add setg loope cmc cmc mov pop mov repnz test fsubl inc cld cmp gs xchg aaa mov and or outsl mov xchg add stos push cmp adc rcr mov movsl cs inc stos xchg jb or jl jae es cmp push negl sbb sbb cmp lahf fs sbb fsubr mov mov call mov popf aaa sbb inc pop fwait push or add hlt push stos in mov repnz daa sub xchg push test je in scas pop sub xor (bad) mov xor aaa sbb (bad) mov cmp inc fwait mov dec addr16 imul ret in and push sub fsub ja outsl sbb pushf sub xchg test xor mov cwtl pop stos push repnz (bad) decb jecxz rorb mov mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov adc es xchg mov ficompl mov xor inc xchg mov jns sub mov add std jbe cli xor add das sub rcrb decb or sahf fsubrl out sub push std dec xor cld inc dec inc sbb stos in push movsb fiadd push push fsubr gs or sti adc adc mov jge mov bound push stc fucom or xchg cmpsl mov notb xor in arpl jmp and dec int pushf jl icebp fwait dec and inc jmp mov xchg ret cwtl lea push xor xchg ret les jb outsl imul imul outsb xchg bound xchg adc cmp mov loop jbe scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) cmp movsb fs clc cmp adc mov mov add gs jecxz xor xchg mov push jecxz sub out out add cmp mov leave xchg (bad) mov call lret gs rclb test mov push xor sbb inc mov mov aad lret add push lds inc inc inc aaa or in insb xchg xchg inc pop dec fwait mov pop cmp sbb clc or add movsb repnz jp mov cmp int3 fidivrl push adc cltd cmp sbb inc insl inc push inc icebp sarl push fisttpl sbb add bound (bad) inc rol add cmp mov jecxz insl iretw test test xchg dec push sub in xchg fld stos test pop dec mov push in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov add mov xor cmp add int3 ds push cvtps2pi xchg fidivr mov out mov inc imul sbb pusha push scas insl aaa xor fwait xchg jle mov sbb xchg popf pop mov add jecxz add mov out out or xchg pop jl fldt out shr xor jmp xchg cld fimull nop mov pop jbe out add pop inc xchg mov loope loopne shlb lret gs jb in fdivrl in dec push xchg mov or sub push pop mov sbb sub cld dec out out cmp jge lret xor push enter das jmp setp jae pop mov fisubl into out and mov addl inc or out daa dec mov mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test mov sub mov jno or mov shl je jle inc rcll fisttpl add pop idivb hlt xchg or mov add je mov in sub push nop ss movsb mov test insb sbb mov push jo cmp cmp jb insl cmp inc notb repz sahf xor loop lar push and xor mov lret mov test int3 and loope cld add xor mov sbb lcall mov scas scas sahf aam aad repnz cmp cwtl scas lods mov sub mov pop cmp mov enter ret and jo rorl push sahf mov aas xchg mov icebp enter popf popf ret adc pop pop clc clc insb insb push push adc (bad) ja xor mov xor fidivr es icebp shrb fdiv fwait xchg (bad) jmp pop scas adc add aad ljmp ret psllq push ret push lret jge cmpsl lret sub inc out mov xor cld and push loope jmp xchg pop lods (bad) hlt mov imulb lcall dec imul ret hlt xchg das inc test inc (bad) add jl repz shr adc or rcr xchg lds fmulp mov sub popf clc mov add cld dec rep or test jo inc popf out popa add int3 pop js (bad) xorl push pop cmpsb xor pushf hlt push adc js adc insl aaa ja inc rcrl int3 repz push cmp mov jne jmp fmul sub rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push lahf add nop in cltd fwait sbb mov cwtl add push popf cwtl ret lods cmpsl and sbb mov test dec push fcmovu test dec mov lods (bad) sbb aaa loope pop (bad) or movsl std loopne xor mov pop hlt movsl push ss sahf or (bad) xchg neg sub test mov ds cs pusha fidivr xor pop fdivl adc mov fiaddl mov sub cmpsb mov mov lret test clc sub and cmpsb fisub cmp lcall imul dec in sbb or push les fucom int out jecxz inc push outsl loope xchg ret cmp int (bad) decb or inc and xchg fisubl add mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cmc sbb imul push dec or (bad) push (bad) repz xor test aad ss das cmc roll jns jmp jmp rorb pop sub mov ds test cmpsb loope nop sbb inc pop iret outsl mov je push lahf (bad) or mov xorl (bad) mov jo pushl rorl fsubl add mov dec pop push push stc test cmc mov dec pop cmp push inc mov popl pop shlb in (bad) cmc cmp sbb stc decb dec cmp and sub cmc adc pop sahf es and xchg adcb adc test push std dec cmp in xchg push or addl cmp pushf (bad) jmp push sbb jecxz xor outsl imul sbb adc jnp sahf enter cmp adc jno mov cmpsl cmpsl sbb add rol shll es data16 insb test in add cmp test cld pop push cmp push aam imul dec xchg shrb pop push or clc cmp cmc inc push or loopne mov mov daa cmpsl cwtl dec test repnz push outsl add in and adc mov cmp mov add jmp scas int3 (bad) movsl inc cmp cwtl leave jle push cmp fildl pop jae dec sub test or rcrb and (bad) adc push add (bad) xorl sub imul out push das ficoml int3 mov js pop in adc leave loop (bad) in insl daa arpl scas lahf xchg ret ret inc clc repnz adc outsl xchg xchg inc iret les sbb xchg fisttpl ss int cmp and roll and xchg xchg fcmovu mov inc addl lock add enter loope push fmull push fbld aam adc jg push push sarb pop clc mov clc mov mov push adc fisttpl hlt test xor mov test jns and or mov cs int jno adc inc add arpl rol test cs mov cmpsl insl jns mov out xchg pop sbb add push mov test (bad) out sub xchg sbb pop adc jl cs mov mov les push inc lock int adc sub int les stos sub adc dec mov xchg jae xlat iret mov lcall rolb out cs add add pop test pop sahf cld jns incl pop pusha rol sbb lret xor int3 scas fmull or roll push mov mov sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf jae adc push lahf stos pop cwtl (bad) (bad) insb stc jbe fnstcw test jns out mov xor mov test pop addr16 rclb or mov aas cmpsb lret imul lds andl sbb add inc mov inc push push in std aaa aas dec repz and into ret push shrb fidivl or leave dec rolb iret jecxz cld jecxz cltd cmp mov lret int or push cmpl ljmp sbb pop loope jb dec dec int3 cmpsl test pop mov xchg sbb sbb movsl jns mov sti repnz clc adc adc out inc sarl mov das divb adc push or jbe push inc sbb and push outsl add stos es mov sti fs outsb mov lret divl aad xlat adc cmpb ja xchg in or inc jg sub aas jae lahf (bad) cmpsb arpl adc jb fisubrl sbb popa int3 sub mov lods mov fnstenv mov js xchg iret lcall adc push test repz mov xchg sbb mov ds je xor pop cmp rolb xor cli pop les jle jp cmp in push pop or or sahf imul icebp fistpll adc unpckhps fdivs das xchg adc repnz and fnstsw push add repnz out es cli jo clc mov imul in idivl mov push jmp sbb ja mov cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll iret add roll rcr push jp mov jae lcall jg push nop sub int3 fistl or adc xchg jl movsl fildl adc jb das mov add xchg pusha mov repz push inc lahf mov leave mov push adc in push pop pop int3 iret mov in jl loope cli pop xchg adc adc scas imul sub mov lods gs insl shrb push and xchg fwait jl mov cli repnz iret inc mov decl add in sbb push pop gs sub leave dec (bad) insl jg roll push pushf shrl push popa and pop fsts dec jecxz jbe or or sbb mov js and mov sbb adc (bad) nop out cwtl fmul into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push and mov inc sti outsb (bad) (bad) xchg lock pop xchg (bad) sbb dec xor js fnop dec arpl sub inc je dec push xchg aaa sub loop mov mov add push imul es cmp fs inc mov scas mov cltd ds adc sbb push ret and test loop jp ror xchg sbb xchg jnp mov and sbbl sbb cld scas out mov scas sub test stos push outsb ja or leave ret mov add xchg jb loope xchg cwtl imul dec lahf inc add or mov loopne je adcb and and lret xlat outsl push insb push (bad) or in add push movsl sub inc jbe fnstsw mov cmp in pop inc add jne lea sub mov cmp stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or pusha stos inc in dec inc mov sbb push stc insb and add out mov adc sahf xlat rol mov dec int push xchg inc push xlat (bad) jae (bad) in and pop out popl xor cli cmpsl pop xchg inc faddl pop pop jbe dec (bad) and add lock lahf in sub hlt xor (bad) jb dec or imul add or add xchg dec out and sub pop aad push inc bound lahf mov stc cmpsl jmp lret bound jae bound stc xchg (bad) cmp or pop int3 pop mov ljmp out js lahf add insl dec outsl and jno test in pop jg or aas xchg jecxz jb xchg push lds pop fadds jle int in repz dec adc xchg fcmovu mov inc addl lock add enter jo push incl xchg into loop rcll add shll xchg insl addr16 out add jecxz inc in dec xchg jge sub jne rorb cmp scas jmp shll fimul xor jp sbb push pushf testb xor mov sub or jne push out fdivr cmpsb (bad) and ret jne shrb cmp (bad) jno dec clc fmull mov adc in lcall pop pushf sub dec xchg dec out outsb push xor cmpsl lret aaa gs cmpsl xor mov in sbb push xor and fs cmc sbb outsb adc xor dec and dec dec cwtl jmp pop je insl cmp or cmc or dec in or out xchg les ja pop push add cmp inc mov sti and stc xor lods jge fnstsw aaa imul out in in in aam push push cld cld (bad) xchg lds inc fidivr push es sahf outsb leave sub inc xor scas ret mov stos dec insb pop stc push mov push xchg fldcw (bad) mov xor frstor jae cmp adc pop push in jno in and cltd xor push mov bnd mov ret sahf cmp aad or fisubl in push mov enter sahf cmp pop mov jb sub inc add fcomps outsb mov push (bad) shlb fwait (bad) jae and xchg (bad) mov add add add das xchg pop pop mov jne add repnz shll jge sar scas pop aas (bad) into sub sbb mov ljmp cmp cltd jecxz xor sbb jl cmp sbb (bad) jbe call ret imul insb push push adc (bad) aad xlat xlat adc (bad) (bad) dec fwait popl out arpl data16 jno pop sbb mov sti pop aaa (bad) imull mov cld cmp lds rcll cmpsb push call sbb push outsl and popa push divl lods loop dec dec lcall or mov sbb add xchg and mov dec push scas mov inc push rcr clc aam lods popf xor imul push add cmp cmp imul mov test jne out and and push stos into rclb jmp out in adc and scas stc push rsqrtps cmp push fsubp sahf ljmp pusha mov or test xchg pop fidivr xchg mov mov add sbb popf aas ds (bad) ljmp cwtl pop jmp ljmp divb cmp pswapd loope cmc cmc mov pop mov xor sbb rcrl push mov rcrl cld out or jmp pop jmp enter add insl push leave (bad) mov (bad) xor scas insl ja and ret sub mov dec inc jle mov sub jge stc (bad) push push inc and mov push and dec movsb mov fstp out and test dec adc xchg or dec and pop adc adc andl js or stos pop aas cwtl xchg gs daa daa lcall js pop leave mov test mov inc pushf cmc aas test scas sbb fnsave mov and (bad) int3 adc xchg adc xchg testb xchg iret xor adc or add enter out popa mov cmp fsubp jne fs faddl add mov push push out sbb jle xchg xchg xchg xchg add fwait fwait addl int3 ss aam xchg or or xchg pop and mov mov fnstsw xor dec push stc or lcall jbe aaa shlb mov shufps fwait ljmp arpl mov or cmp push cmp lret push mov std mov mov xor (bad) pop jp add adc adc inc incb inc rorb add xor out stc out sbb mov mov test test dec sbb sub sbb ja or fisubrl xlat xor int shrb scas xor pop cmp fucomp push lcall call or lock mov aas cmp enter popa lea into xchg jg ljmp idivb pop aam cmpsl rcll push dec inc pop cmp cmp popa jbe scas scas dec dec jns cmpsb cmpsb bound das test lods stos adcl cltd sarl cmpsb mov (bad) mov bound mov test mov mov ret test adc iret cmpsb jne pop movsb adc pop add add cmp xchg add mov repz ret pop data16 leave fstpl test dec imul js data16 cld rcll mov push jecxz sbb das mov arpl and sti scas xchg (bad) push dec loope cltd insb out dec dec aas mov add (bad) and pop jmp mov push mov fsubr lcall stos or ret sbb push addb push dec call mov test scas (bad) neg inc inc jae xor mov shl mov xor sbb cld xor repz and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test test push inc xor (bad) out mov dec outsl xchg insb pop insl arpl cmp jle out adc jb pop mov pop and or xchg or mov pop loope add dec (bad) xchg pop mov sub jo pushf movsl mov movsl jmp pop sahf xchg movsl shrl lret shr jae xchg or jp mov jae clc imul mov jp mov mov sub pop and jae jmp mov jmp fs (bad) (bad) jnp mov adc addr16 ds cmpsb inc cmc gs orb cmp add aad movsl insl add cld fisub sbb mov pop push push (bad) dec nop jne aaa dec and ret lods mov push xchg push sbb fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test loop xor call scas mov pop mov enter mov sbb push (bad) xchg movsb aam movsb in outsb cmpsb adc mov sbb fs inc and mov mov pop sub bswap mov jns push (bad) movsb (bad) movsb xchg pop les adc xchg call sarb pop inc add xor (bad) jae addr16 push cltd mov (bad) jno iret bound js fadd jle test popa je dec jo mov sbb push xor inc push test (bad) imul sbb std xor inc cmp (bad) mov push push rorb lahf js leave lret addb (bad) xchg cld cmc scas ja (bad) rclb lcall xor (bad) sti into sbb cwtl jb mov adc ljmp data16 push out fs add and or mov aas ret imul insb push push adc (bad) ja xor mov xor ret leave leave ds mov bound sbb lret mov xor mov out push pop and pop jg xchg lods lea xor xchg (bad) add daa jb push sub add mov ljmp xor inc xchg lcall pusha xchg jo add stos sti dec outsl sub or adc pop push shll (bad) sbb jne out or mov pop xor (bad) shrb mov gs pop adc pop sbb rorl add shld shll jb loop add and inc adc clc xor push or add clc test loop jg add out test test nop adc cs xor lock loope inc pop push js lods inc stos xor mov daa repz or mov inc inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods loop leave int ja les cli and xchg out inc pop nop test je pop jle sub push lods hlt mov xchg dec stos ljmp mov loope mov cmpsl xlat fildll push jae out jge inc enter testb pop mov cmc and xchg cmp mov out or test xor pop mov shufps ret adc std fcomps mov mov hlt and leave ss mov fisub cmp (bad) andl std push test mov cmpsb lcall aam clc cmp fnstsw pop mov or inc jbe adc cmp es mov push push add sbb addr16 outsl mov insl push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov xor mov adc pop pop sub and and cli add adc scas mov pop adc dec fidivr fimul cmp clc mov push scas xor xor inc xor call in sbb sub xchg aaa enter adc push add mov push mov ds (bad) xor ds adc ds dec dec jecxz sbb imull lds add mov subl push fwait mov push fsubs loope add mov out fcmovbe cmp es out pop fdivl push cmp data16 push xchg inc (bad) jo data16 adc scas pop adc jge inc aaa and out lret jae pusha mov cld add add ret aaa aas ret push mulb sbb sbb rol shll es data16 mov js in in lea sbb scas mov push test xchg inc out hlt fcompl ret sub loop xchg cmp pushf sub lcall cs lods xlat stos and dec imul popf dec std push cld push sub loope push xchg cltd mov inc test rcrb jne rclb mov push xlat push mov rcrb jb mov sbb lahf xor ror repnz inc lock outsl pop scas rorl jp push xchg stc pop sarl lret xchg push leave lret cmp sbb sbb or cmp in adc or mov mov mov sbb add stos pusha cmp xor repnz inc cmc xchg jbe and ljmp xchg pop cmp jecxz cmpl out fisubrl mov pop jns inc push push sbb pusha pusha lock add enter jo push (bad) call shlb cmpsl mov (bad) icebp (bad) jo or nop das mov movsb (bad) aaa mov push inc or sbb sbb xchg jl lret sbb push nop in rcrl std push inc xor sub jle push jmp out pop test ljmp movsb add xor mov push dec daa fsts rdtsc out sub stos call pop (bad) sub push ljmp call xor pop mov inc mov pop adc sub mov adc inc push cmc push mov fidiv jo mov daa popf es and sub les aaa in xor xchg popf push add fild push (bad) xchg pop add pop and js int inc xchg rcr leave fbld fild push test das dec or dec aaa pop js and jle mov mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec fs adc (bad) xor add clc (bad) sub movsl pop lock dec mov std rcrb addr16 inc mov sbb cs add fnstsw push dec push ljmp idivl fldt add or ljmp and (bad) in pop lahf (bad) cmp jl movsb xchg xchg rolb scas daa add cmpsb cmpsl xchg adc outsb test mov mov mov lret shl ljmp lods mov adc or cmp jb lret add jg xchg pop cmp rorb fiaddl dec out push into in xchg jne push adc or cmp sub sahf fstp mov adc mov mov dec pop movsb in mov xchg push mov popa pop sti ret cmp jmp xchg loopne fsubr or lds push jmp push outsb outsb mov lret divl aad xlat adc (bad) gs daa pushf pushf cmp mov and jle or subps jmp inc hlt dec xchg andb push popa lods imul mov enter into lea sbb or lea inc cmp loop pop les sbb scas add jl and jbe add jle in or (bad) in rcrl pop and push jae ss fdivr lods push mov mov mov iret dec push inc (bad) std das or clc sbb cmp sahf jle jae js movsb jae mov imul roll push mov adc in inc js,pt push adc imul push repnz add cmp std mov push push push fucomi pusha mov test rcrb loop xchg mov mov mov test cmp (bad) add imul test cmpsl dec std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub rcrl lret push and sarl lds imul pop ret xorb xchg push xchg mov xchg enter (bad) (bad) mov imul movsb fdiv out enter xchg or jne push mov xchg sub xchg adc and push push sbbl pop mov out faddl fdivr push test xor sbb sar data16 sti push (bad) xlat dec and add adc cli inc call adc push cmp mov lods mov xchg pop add outsb sub xchg popl sbb fwait mov faddl gs xchg pop xchg fsubr out movsl or mov mov mov test test sarl cmp int3 mov insl aad jns pop pop add imul insb mov pop mov jecxz and hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp orl mov mov loop xlat dec fwait int3 out pop fild mov std add daa (bad) jle or pushf push mov cmpsb inc mov jb je push sbb test push sbb add jb (bad) aad mov loop lods cmp shrl loop (bad) test jbe out inc mov stc mov rcl mov and adc fwait ljmp repz mov arpl repz sub xor add mov mov fisubrl mov sbb mov xchg (bad) jmp cmp lret xchg pusha aad xor loope nop jp mov mov sub mov inc push push test jo cs mov out mov pop or scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov push and test movsb fcmovb clc adc mov mov mov in mov mov xor in cmp test push sarb push mov cli push cmp pop (bad) loopne aam push bound mov mov mov loop mov pop stos fisub out popa or jae xor js pop dec push xchg dec mov cmp xchg pop imul addr16 out cmp adc (bad) je fsubs xchg mov mov xchg rcll hlt sub cmpsl pop les fildl mov testb jecxz adc mov jp stos xchg std fistp lahf loope rcl inc test test fwait push sti (bad) jecxz pop add movsb lret xchg enter inc mov or movb mov dec out mov pop and pop add fdivrl int (bad) mov in in jbe iret mov test add enter jo push (bad) call shlb sub fstpt sbb mov mov mov xchg sbb push int pop icebp sub jae push outsb and fcoms dec sbb imul adcl movsb gs scas sbb addr16 movsb xchg sbb arpl mov mov sub mov cmpsb mov sub dec out dec mov xchg scas adcl fsubrs adc aaa hlt pop cmp push fstl loop aas ja lcall push leave inc sbb sti add mov out or cmp div cltd stos fcompl xchg push fadds es fldenv in btc lds xchg jg mov inc jp jns in subl movsb fisttpl lcall roll aaa push xchg repnz pop dec push push enter (bad) push std add mov sbb pushf ds mov lcall cld cld (bad) xchg mov faddl sti fs outsb mov stos and fidivl mov and and lods test data16 into dec (bad) daa dec repz inc and les arpl (bad) imul in into mov repnz mov outsl mov mov outsl pop fbstp insl dec out pop lock add inc jl cmp lods or or (bad) imul adc scas mov pushf loop stos adc jge pop (bad) push xchg notb push pop xor or cmp dec cmpsl jne and jl je dec push jnp movsl dec daa mul dec cli jl fidivrl (bad) out sbb jge mov (bad) roll scas out test js pop out out or adcl outsl xchg sti mov cmpl sbb sub pop imul mov jmp (bad) std pop dec xor shll aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) mov push dec outsb lods ret lret add sub neg test or pop dec shll mov aad movsb in inc pop mov mulb dec out sbb sbbl inc addr16 xor xchg sbb mov dec imul sbb popf cmp jl arpl call in and xchg jns sbb pop idiv mov xor xor cmp and mov xor std sbb test or ficoml inc mov in mov mov dec aam fild orl stc repnz roll (bad) (bad) pop pop fldl andl je push jmp cmc sub inc in xor mov mov negl push push out push (bad) or add dec sti scas rorl fs push push pop cmc or gs pop mov mov pop mov repnz ret dec dec push into cs lret mov mov test imul shlb sub mov dec int pop sub sub sbb jp xchg dec hlt adc add scas mov lock jl mov cmpsb js push lods aas cmp test sbb scas inc outsb sbb inc sbb mov scas jbe fcomi adc cmpsb out mov push shll push mov call mov and fsts xchg aas pop xchg in movsb cltd js inc mov push jns ret mov jl or pop add sbb cltd stos jecxz dec fisttpl pop out push cld or fisubrl scas sbb idiv (bad) mov pop (bad) aaa sbb jb (bad) jo scas jbe add imulb jne fwait adc cli jae mov jecxz and int out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jecxz jle popf xchg test pusha pop popa hlt popf fistpll inc test mov aas adc push sbb movsb adc pop mov aas aaa sbb imul (bad) imul sub xchg jo xchg int ret mov test jp push cmp aad dec cli mov insl dec xchg push mov add loop inc xchg inc cmp push mov icebp test sbb out xor cld nop rcrb ds cmpsb mov jmp dec out jg in sub push dec add jno jns fwait in dec xchg adc dec adc dec adc fcoms mov cmpsl xchg jecxz xor jb inc mov xchg call cmp dec push (bad) imul xor add psllw roll psubsw mov xor sti mov ret push fnsave daa sbb push xchg (bad) (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl jecxz add pop add in push dec cmp clc pushl pop and cwtl adc aam adc push xchg mov loop ret aam out pop ss adc xor xor push dec fbld lret adc mov das enter es sahf mov je sarl aad or dec push jecxz mov popa pop mov cli icebp sbbl fs fs les lcall inc xchg add and ja rol push inc mov test aad and call testl test pop xor in stc pop pop jmp scas lahf mov (bad) jne movsl jg xlat (bad) fisubl xchg mov rcr (bad) xor daa gs cmpl add mov mov pop pop stc sbb stc fidivl and jmp ds mov xchg in movsb movsb push push push into into test mov (bad) pop pop xchg mov daa test out dec push je xor and dec (bad) sbb cmp mov dec decl pop cmp in push xchg jo lret inc jg pusha mov test xchg fstps jle testb push test sbb fnop mov inc adc je int3 call movsb and push mov sub das xchg mov xor mov gs jmp mov ss mov outsb into lock mov punpckhwd lods fnstcw and addr16 sbb out pusha popf jge add lret push inc popf cmp or and adc in cli xchg xor cmp mov loope pusha in ret insl cmp or rorl xor sahf jnp in movsl movsl test dec cmp arpl call adc imul xchg push mov jbe lcall dec insb scas fsub adc sbb jecxz pop xor pop fldt xor mov addr16 (bad) fwait mov mov ja arpl adc movsl push outsb aas outsb or xor test mov lods cltd and repnz push pushf clc adc nop and add jb popf ds aad pop repnz xchg cmc xchg je and fsubr lret imul flds repnz inc lahf mov stc jmp insl sub je add push stc xchg or ret popa push mov aam inc jmp mov push int adc lahf adc out iret stc and loope inc jmp pop or icebp mov ja testb (bad) lock or loope jne xchg fldt mov xorb jae clc ja xor xor ret ret leave leave ds jne divb cmp repz clc xchg in aam out cld mov cmp ret daa and xor jecxz int (bad) mov inc pusha test mul or fdivrl jecxz inc int3 rcr or pusha lds xor sbb jecxz cmp or in pop (bad) (bad) lret ss sbbl int xchg add push xchg (bad) jecxz movsl cli pop push pop test cmp rorb push arpl dec xor rol mov in cli pop rolb int3 out push inc div test loop mov jb pop pop mov out paddw repz cmp hlt scas mov imul mov mov (bad) cmp int3 jl,pt cmp mov xchg mov mov ret push dec movsl aaa adc out rcrb jmp aas push push sbb (bad) rcll push and lods lods or jp sub mov add add data16 movl sub bound mov sbb add fild shl push jno xchg insl mov ja div popa xchg fisubl fmulp lods sbb popf std push pop xchg mov addr16 or jae aad pop pop sub loope sbb repnz xchg xchg out (bad) in add pop lock pop and add loopne jne imul and shrb inc (bad) jmp fldt repz out cwtl cmc sbb popa lret repz imul (bad) and sbb push or jb jmp (bad) rorb scas cwtl jmp sub and lret lcall jbe dec das (bad) jb xor shr iret cmpsb dec mov (bad) sbb push cwtl jbe mov cmp xor dec pop jg (bad) aam jo fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas mov fldcw scas xor jae sbb lds shlb movsb sarb pop icebp es invd fwait lock push mov in push sahf jle jno sbb out xchg mov push xlat mov dec jl ss fstl push xor lret xor ljmp pusha sbb sti sbb push scas aad out pushf fstpl or adc lds in pop out rsm call dec sahf and dec sarb in and pop mov imul jle or mov cmp (bad) push (bad) pop inc jg push movsb dec pusha lret test inc lods push xchg mov inc (bad) leave inc pop fxtract lcall push jns pop xchg test divl add fiadd test divb lea scas lds popf push bound out adc xor test (bad) shll es data16 mov js in in lea and movsl movsl and in imul and lea sti mov mov jne pop mov xchg out in inc repz cltd sahf lcall and ret data16 dec pop lock (bad) fwait aaa loope xlat imul add stos or add cmp fiadd std and pop and adc pushf stc pop ds pop inc fcoml xor xor mov mov push pop xor push ja repnz mov mov mov pop cmp dec out jl sub scas jne ds insl in out jp inc sbb out scas push rcl test (bad) fiadd int3 jle mov cmpsb pushf lods fsub push in jae nop jg push push lea in mov frstor mov push pop sub mov stos xor fxch icebp add or out add enter jo push push (bad) call shlb sub fstpt sbb mov fs (bad) aas xchg aam inc fsin cwtl popf add dec movsb mov into mov inc mov daa rolb daa add fildl rcr mov loope sbb pop or aaa lret add ljmp push inc inc adc or push jmp aas adc insl fldt xchg lock imulb lds fwait mov cld xor hlt fnstenv xlat loop fdivrl daa dec cwtl jmp jge shr stos out mov xor sub cmp xchg mov rclb dec mov fstpl mov sbb jne test fsubr lea jp mov mov adc inc out ss jge inc lods outsl in adc lea pusha mov xchg mov and cmp add arpl xor sahf jnp in movsl movsl test dec cmp arpl call mov arpl lret jbe sahf push inc inc in rolb ljmp icebp (bad) leave mov adc pop or test mov push (bad) jo fwait dec (bad) sub pop mov push bnd xlat push adc mov fs cmpsl outsb fistl mov out mov xchg mov push mov scas xchg adcl adc xor jae sbb jmp mov fistpll ja out test stos push or mov fisubr testb out ljmp inc adc movsl in in dec call add add mov pop jns xor cltd or push es jns pop rcl fsubr sbb mov xchg jmp and adc pop pop jle mov scas aam popa push inc xchg in test lcall or lret mov addb adc gs daa pushf pushf cmp mov aas push lods imul xor bound rcll jmp lds adc cmp mov ret cmp sub sub mov lods mov xchg jg adc lods rcrl pusha adc out cmc rorb mov mov dec fisubl cli insl (bad) es lret out fsub rcl in xchg or dec push sub cmpsl movsb in (bad) rcr mov lods and mov mov (bad) lret adc ficomp dec sti sub xchg inc jg lahf (bad) mov (bad) pop jecxz sbb scas lret lods clc sbb jns jge and jbe mov test xchg rcll popa ret pop jmp (bad) test xchg lcall sub add mov fwait outsb daa push out mov lcall mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub cmp js and and inc add lcall js mov divb mov gs jo pop and mov mov push int3 cmp push gs lods jae icebp xchg int pop insb pop (bad) mov cwtl stos adc repz lret jno pushf cwtl mov jns ror rclb pop arpl aam repnz bnd mov rorb inc ret push ds sarl pop or in insl cmp cmp or pusha push inc loope ret insb sub sub (bad) lods (bad) or sub repnz xchg mov sbb push or repnz or sub xrelease jl pop (bad) xor inc std fiadd inc icebp test clc mov and hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub add xchg xchg push push pop pop or div jmp xchg dec dec jno stos adc (bad) jmp jmp int3 add mov and out and xor xor push mov adc sbb loopne fdivl fsubp mov jne sbb push (bad) xlat cmp mov inc ljmp (bad) fdivs inc mov cli popa push sub pop push mov (bad) (bad) in imul mov aas in aam mov jae mov enter js sbb and and xor jae xchg adcl mov iret aas inc aaa mov inc xchg mov (bad) xor decb dec sub inc fild and mov mov ljmp negl aas and inc out lahf add (bad) lret push or push aas (bad) inc push mov or outsb lods add je cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov jl xlat xchg mov insl insb (bad) xor hlt mov push sbb mov dec es shll dec in jp lock adc repz imul xchg rcrl aad xchg nop mov adc or or fnsetpm(287 add mov scas and xchg jb mov mov rolb adc add decl pop sbb jecxz adc xchg popf insb xchg ret dec cmp lcall jo jp (bad) hlt mov sbb cmp xor inc xorl (bad) pop mov idivb clc sahf mov push inc mov inc scas es cmp mov jge xchg pop scas lds (bad) xor sbb inc xchg in push cmp add (bad) lea imul lock add enter jo push (bad) call shlb sub fstpt ret stos sub add (bad) daa inc lcall fist ja insb xor (bad) repnz jecxz imul fstl fimul jecxz mov push lock in add xchg aad repz jge (bad) add lretw repz cli mov (bad) ficoml dec stos int3 fsubrl repz ss jae inc add sbb xchg and sub inc push inc jp mov sub mov mov sub inc pop xchg adc ret mov cmp or les sub repz pop and aaa lock andl jbe sbb inc dec enter jae (bad) jae jae test jecxz inc cli push popa in jp jns mov rcrl in push mov and rcl jg fsubl cwtl into mov dec xchg nop andb lods (bad) pop test cmpsl mov mov lret xlat adcb jne iret out in in in aam push push cld cld (bad) xchg mov faddl sti fs push add dec or push dec xor xchg lods pop mov icebp pop sub dec push pusha jbe xchg test int gs jmp insl lods dec add pop jb xor jp (bad) lods cli sbb out xchg cmp inc mov add mov or shlb ds inc (bad) imul ret aad movsb push in fstpl in xor push or push fildl mov fadd stos and inc sub mov mov cmpsl das xor cmp sbb adc int3 push nop mov mov fdivrl jp mov mov pop xchg cmp ljmp lret push pop push sub jecxz (bad) jmp cmp and pop imul xor mov push or cmp dec daa jae jnp pop notl pushf addr16 add (bad) sub movsb in push push cli push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl adc and stos push xchg lds xor stos jns add push add out pushf repnz mov pop adc fcoms cs (bad) add test and dec and popa lods and adc mov pushf or xor push (bad) mov sti enter mov loopne push inc iret enter scas inc xchg sbb cs sub jecxz adc push (bad) idiv test dec push call ds or lret sbbl add or sub jecxz sbb jle adc and sbb loopne dec dec movsl cwtl or mov xchg aas add jne (bad) push mov (bad) ficoml dec xor adc movsb lock test sub adc mov lahf lahf xor mov cmc mov pop mov repnz ret dec dec push into cs mov add mov dec fwait nop lds push add imul scas hlt clc and rorb ljmp scas movsb jge test cmpsb mov movsb add mov shrl out inc loope sbb pop jmp aas lret xlat mov mov dec jge jecxz push mov add jb push add adc les es imul dec in dec nop pushf out (bad) shr stos repnz nop outsl cmp mov mov test and lahf or adc mov lock popa cltd mov xchg out jle cmpsl (bad) nop or xor sarl cmp sbb enter cmp push inc lock pop (bad) int mov outsl xchg inc push xchg enter and add or dec mov fildl add sbb dec (bad) loop (bad) mov ftst push xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos sbb pop cmp mov fldl2e jle stc xor mov popa pop push adc stc push aam ja je xchg aaa adc xchg xor jg insl sub sbb bound sub fs aam nop xchg rcrb ret test (bad) fwait mov (bad) sub outsl jge mov push mov sub sbb xor mov jl mov (bad) dec mov leave insb and pop daa (bad) xor and pop mov adc dec pop into lahf loop inc (bad) jmp aaa outsl insl pop popa push stos inc gs mov subb loopne movsb or xchg movsb ljmp adc add rcr jo sub xor loope push es fist inc mov ret imul scas add add outsb xor add push aam sar dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc iret mov sub mov push jae fstpl dec pop (bad) jo mov popf mov and pop mov inc xor sub out leave ret out jmp lret push and lret loopne,pt ret jbe push and lcall aaa inc stos add stos decl fidivl push inc mov pop into pop push mov nop cs dec adc and imul xchg sbb rcrb test fnstcw call imul push mov jmp add or mov xor loopne je repnz inc daa push dec lea stos loop dec inc pop outsb xchg in fistpll pop sbb and xor je dec mov ret add mov cld inc cltd jecxz xchg pop lret push fwait dec test pop jae ss lods push xor xor iret or gs xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg outsb mov fildll push iret jnp addl js xchg mov xor inc sbb cmp and or divb int3 mov out fisubr dec push (bad) ss fnstsw fwait inc aam subb sub push pop insb pop push in add push and cmc jnp xchg int cli mov stos popf lret jne sbb sub inc push fwait lret fdivs fildl repz faddl push xchg mov push popf test push pusha jnp cmp or xlat jno imul sub xor sub pop sbb add and or add xor jg pop clc or jge and iret hlt push jb and push inc cmc mov pusha push sbb mov ja push clc push cmc inc dec test dec or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl notl mov cmp and push jbe cmp daa leave jle sbb fidiv push movsb xchg or arpl and mov sub and (bad) aam dec rcll fdivrs mov mov pop add fidivr lods bound mov in out insb add aaa adc pop and sub iret outsl (bad) cmp pop test and icebp nop push loope jg xchg imul enter iret scas xor addr16 push das mov call dec sbb jle mov xchg (bad) fiadd cli (bad) lret or dec insb lret xchg xor jecxz mov adcl data16 xchg fisttp adc (bad) mov and sbb jnp mov fsubr inc or push inc dec jo or xor xor pop pop clc clc insb insb push push adc (bad) ja xor mov xor ret leave leave ds dec imul (bad) out lret (bad) lret adc ljmp jecxz and or sahf fwait icebp mov cmp mov jmp int out or cmpl xor add test adc push leave fldt ret jae cmp mov adcl aaa mov add mov mov cmp xor jns jns jnp insb sahf jo or aad cmp sbb inc add (bad) push mov mov lea inc dec and test add adc cli shll rcr xchg or jns and lcall arpl mov repnz repnz std add jno fsubl mov adc dec mov xor add (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp cmp (bad) leave xor add fisubrl (bad) lcall pop imul fstl add lods cld bound push pop out and hlt daa ljmp out nop push mov pop cwtl nop testl and aad mov sbb sub mov push jo jg push icebp int3 lods nop popf stos xchg jecxz dec xchg popa cs cmp pushf icebp inc mov test inc mulb jecxz adc mov add mov adc fwait xor xchg push hlt lods or adc cltd mov sub mov aam nop pop sbb push jge bnd inc mov fisttp adc (bad) loope lret shll into adc out insl add fldenv push mov sbb fcomip inc lcall adc mov hlt xor sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos out imul and sbb bound stc push pop popa ret mov sub in or push and sbb jl sti or out out mov out mov hlt mov insb int3 xor (bad) in mov data16 ret or int3 mov cmc sub lods add sti (bad) mov loope ror xchg fnstcw daa sbb add repz xor fnstsw int3 faddl mov ljmp sbb aaa inc inc inc jns not pop add into rcrl cs mov adc popa (bad) sbb js xor mov loop jns and pop jmp test out ret adc hlt xchg insl pop xchg adc movsb scas dec add clc (bad) or orl and movsl dec in xchg xchg nop sbb add rol shll es data16 mov js in in lea movsb xchg inc (bad) xor fs adc js (bad) pop dec dec stc into out inc xchg push imul into jmp fwait jno cmp push xchg add call push shrl ljmp sub jbe loope jb lea call dec sub push pop je xor (bad) pop notb mov cli (bad) push inc iret mov lea pop outsl mov cltd ds push cli (bad) mov orb push int3 call push push cmp fsubs push adc sbb rcl jo movsl daa xor scas mov mull xlat mov and push mov clc int testl or jle push sarl add adc inc fmuls sbb ja ds fnop and fimull push push pusha pusha lock add enter jo push (bad) call shlb aaa jle mov bound xor pop fcmove cmp iret in or cmpsl lret jnp (bad) mov jns,pn orb loopne inc push js and nop or and jbe pop gs cmpxchg stos rolb pop stos mov adc mov inc sbb adc cwtl and push arpl jne inc fwait sbb imul xor and or mov daa out out mov dec cmp pop js adc add insl stos imulb pusha and and imull push roll aam movsl mov scas push and push popf in das sub xchg sbb les cld je sbbl out rorl mov loope xchg xlat push pushf xchg xchg push jb sti pop addr16 in mov push fsubr mov jg xchg sarl xor (bad) inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl or or mov clc cmp test aas add pusha push arpl push test out mov es cmp scas push or (bad) jb add mov inc pushl push int xchg mov adc dec adc mov mov mov stos lahf out jmp popa sbb jae test imul mov dec nop (bad) aam sti adc je cmp pop and mov cld mov push jo bt adc negl lret movsl and arpl and and xorl xor pop and pop lods adc lret (bad) dec mov popa inc pop jae mov pop xchg in and ret mov insl ret jge add push mov add lcall mov adc xlat xlat adc (bad) gs daa pushf pushf cmp mov push push fs cmp push neg arpl adc or mov push cmp outsl aaa add outsl push jbe shrl cmp (bad) add sbb pop or pop xchg mov xlat adc sub mov fwait lods pop add inc ljmp mov adc outsb mov mov fnstsw sahf pusha rcrb (bad) pop sbb jb dec xchg or sbb repnz sti push fs hlt lcall mov add xchg (bad) rcll xchg push fldenv aad fnstsw sti out stos js mov sti gs mov mov ss xor jns cmp or ror mov lret or ljmp sub and mov repnz xor sub lock outsb jns mov (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or push xchg xor jo inc (bad) test nop mov icebp movsl or fcompl sub mov xor hlt push gs call fscale pop push ljmp xchg (bad) hlt pop (bad) jno les mov ljmp adc pop xchg fisubr push inc rcrb in inc cmp and jne popf lea sub fsubs test jnp in out mov or or jb add out mov out sahf loope adc mov test and fild sub adc je jmp push outsb jecxz cmp iret sbb mov fxsave mov xor push mov jns inc push out (bad) out pop push sahf or mov outsl xor frstor push pusha pop jbe das mov jnp (bad) xor mov icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp cli push cmpsl js sub dec push jmp sub push xor cli rolb mov or js pushf std (bad) inc xor add pop fcompl adc sbb mov cmp jle imulb out repnz mov mov clc pop (bad) push or das mov cmc push dec and push aas faddl enter push push cltd adc arpl inc add dec loope in sahf sbb popf ss aaa xchg sbb arpl xchg pop jo lret xchg pop cmp push jl ljmp sub pop pop push mov addr16 and mov outsb add ja es jmp mov cmc ss push mov in cmp gs sbb cmp sub (bad) jl fwait iret push int3 push popf cmc cmp cmpsl or lret hlt repz dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fisubl jge xchg jae cmp imul fistp stos in lcall lds pop xchg pop pop adc (bad) or cmp cmp add push xor std (bad) xor es (bad) sete add or popf or in ficompl sbb je xor and adc mov and mov jecxz mov aaa sub pop jmp push sub rclb loopne leave cwtl (bad) push mov ja cmpsl inc cmp ds cmpsl push xchg xor iret rol incb arpl xor enter xchg cltd aas (bad) xor add bound mov leave jbe je rorb add dec (bad) sub jno cwtl dec and mov add adc lret lldt and pushf inc inc pop addr16 xchg sbb lock add enter jo push (bad) call shlb sub (bad) and mov outsb stc dec loope lods or (bad) decl sub dec mov lret mov test icebp pop adc lods movb outsb mov push enter sub xchg pushf out sub cmp mov mov mov fdivrl fistl (bad) lret xor sbb push aad (bad) mov sub adc std pop lock pushf popa lods and lds ja sarb test test andl stc test and pusha int mov movsb data16 fcomps lahf pusha cltd mov aad add sar or sub and mov inc arpl ret mov add pop dec shl xchg mov ljmp cmp sahf sub xor test xor mov dec int3 adc in int3 jecxz es iret out in in in aam push push cld cld (bad) xchg mov faddl dec insl xchg jae sub adc mov pop call ficompl mov push and cmpl dec fistpll and lahf jle push sbb add mov jle fcomps fs sub and and jmp xchg lock push fwait rcr push mov add push fidiv ljmp lds mov add or out imul push jge xchg lahf mov jnp add frstor mov jbe das jg test bound scas push stos dec ret and xchg pop ss adc dec cmp lds pop aaa push (bad) (bad) mov hlt dec lock repnz pop mov mov cltd sub js data16 push pop push in push inc sarb or (bad) int3 sub in pop pop clc clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf fldt pop jno lds jns xor or out dec mov das mov xor test test movsl int3 and lcall dec js aas pop aad xlat gs add sub jno fwait lcall sub lahf loope pop push loope pop push sbb cmpsl in sbb sub pop xor dec sub fmuls adc or out or es scas jo and or nop shr mov xchg pop jl push cmpsb inc cmc mov jns push aad jb fs js rolb pcmpeqd call or rol pusha fdivl fs sub test inc cmc mov adc push inc jmp pop jecxz mov inc mov pop mov aam mov add lea enter test lret int3 mov je cmp add setg loope cmc cmc mov pop mov repnz ret dec mov mov add cmp mov movsl lcall add add and mov fiadd into movsl cmpsb mov dec fwait rcl sub inc cwtl push decl inc sub iret repz loopne ret ss outsl xchg jmp stos mov pop sub insl jle pop daa leave inc jne fs xor push icebp mov lds pop and insl out shll cmp sbb leave fistpll pop aam inc fisttpl sbb fsubl adc inc mov mov lahf fsubrl into xchg or adc nop inc ret push adc inc outsl mov inc movsl ret push push add jns jle inc add mov xchg fcomp xor ja adc test sarl rolb js insl push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd sbb push lret add lahf cmc or pop aas fistp add pop nop xor xchg inc push sub int3 lods insl cld nop add pushf jl add mov test push pusha scas and outsl add sahf adc xchg xchg xor sahf int3 push test ss inc pop jo imul imul pop je push fcompl lock jp lea mov jge insb ret (bad) lcall sbb (bad) test ja divl jbe inc adc sar adc movsl pop divl jno lret jg out jo lea jle daa mov les shrb push push dec add dec ret enter push rorl addr16 mov pop inc cmc fwait lret adc (bad) or pop adc (bad) cmp pop in pop sbb jbe scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg ds (bad) aaa daa mov ljmp mov jmp leave add adc adc das cmc and mov jns fisubl adc adc and popf pop pushaw (bad) xor test sub pop push cmpsl cltd or cmp add pop or stc push or push inc test add add je gs cmc mov (bad) dec cmpsl xchg loope jecxz out cwtl test cmc lods cmpsb xchg cmc mov or cmpsl popf jle xchg cmp mov xlat (bad) adc push in xchg xchg and push loopne jne int3 stc inc jno test cmp jmp cmp arpl lock movsl mov mov ret rolb pop mov mov jge sub test xlat inc hlt loopne icebp push frstor arpl aaa hlt out in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov mov mov rcrl jp xor push lea fwait sti xor mov push scas adc ss jno xlat mov hlt and jns cmp ja push in movsb dec in jnp jno aas inc pushf jnp hlt xchg adc fist fwait pusha (bad) dec int3 lret pushf sub scas push stc daa cmp mov fsubs lret test or loopne divl dec das in (bad) xor sbb cmp mov mov sub daa loopne dec or int xchg faddp jae std pop mov jno push xchg xor (bad) mov mov (bad) mov fdivrl mov adcl addr16 loopne jne mov inc push daa xlat fcomi cmpsl dec mov pop sub hlt decb pusha aam push popa adc fisttpl adc and sbb mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl push mov mov push xchg sbb cmp dec or inc fwait mov sarl mov mov mov sahf jmp xchg inc mov push ss aad and add bnd popa xchg sub sti ss mov test dec xchg (bad) les xchg mov sbb jge add mov jno hlt xchg sub lret push es xor (bad) jp xor cltd xchg enter mov push loop inc cs jo mov mov popf inc dec cmc pushf fcoml jno jle inc sbb and adc pop loop (bad) or jnp push add in dec mov bound adc jecxz jge jno gs mov inc leave xor push and js lcall pop pop cld fsub cmp cltd push xor push outsb pop push add pop clc clc insb insb push push adc (bad) ja xor mov xor ret leave leave ds stc orb dec movsl test inc es mov dec lods loopne fnstenv hlt cmp mov (bad) xchg sarb or mov movsl outsl adc aad push add lods movb xchg fdivrs stos sbb stc mull and cmp jno jg dec xchg stc jno fwait ds mov stc rclb or test cmp (bad) mov cwtl jge jne je xor pop xchg push sbb xlat rcrl xchg xchg add pusha movsl or jb (bad) and add pop icebp jecxz fcoms repz scas jo movsl sbb jb int mov insl mov jno sbb mov call push nop pop cmp xor xor and dec xor das lret or daa movsb incl (bad) xchg lods imul jbe or rcrl lds cmp std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp lret cli (bad) int dec dec cmpl insb mov (bad) ds adc mov leave bound jecxz or loop inc lods fldenv mov push frstor xchg push dec push add ffreep cs int3 cs add or xchg pop decl stos aas xchg imul mov aas pop popf add add xor imul sarb and inc lods out (bad) dec push and sbb (bad) imul push push pop hlt ss dec sub iret and pushf out inc out je jge xchg mov stc rcll (bad) out repz loope xchg iret push sbb ja jle ret out fsubr xor ljmp xor cmpsl cmp gs sahf mov or popf movsl push mov ja out xchg push dec sbb sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd add mov dec jl cmpsb or xor pusha add and adc mov stos scas ficomp and xor xchg mov cld mov sbb in dec xchg xchg adc adc add jo mov arpl ss adc test lcall aas adc xor xor push nop inc inc ja jnp arpl aaa dec cmp rcl (bad) testb cmp mov add idivl aas adcl xor dec xor shrw adc sbb push sahf sub call pop lahf loop leave mov inc pop (bad) fldt jg arpl mov lods mov pop dec lea sbb sti stos mov (bad) push inc into imul mov cmp inc fdivrs idivl cmpsl inc lea (bad) loop or sbb rol shll es data16 mov js in in lea add jnp mov cwtl ret dec xor push sub test dec cltd and (bad) mov ljmp push mov pop jg and nop (bad) ljmp push mov jle sbb in xchg adc lods sti loopne dec push je cmpb sub out mov dec gs stc movsl lcall push xor jb push inc jg xor test cmp xor mov psrad shlb xchg or test cs ljmp pop mov std add and dec xchg xchg dec ret jae push scas scas in jmp pop jae (bad) je scas popf mov (bad) in daa mov incl dec fistl mov cmp or lcall outsb int jns out subb adc ss or lods push push pusha pusha lock add enter jo push (bad) call shlb sub mov xorb hlt sahf idivl sbb dec in and ss fildll cmpsl pop test je cwtl mov inc dec mov mov xchg add punpckhbw jo repnz (bad) jecxz aaa jnp sbb rorb mov inc adc mov andb loop int3 xchg mov lock hlt mov inc mov mov decb mov fwait idiv ljmp leave cwtl sub mov mov mov scas and jmp jg inc in push movsb sahf cmc push (bad) lcall fisubrl and ds xchg mov jo stos gs (bad) fmull test mov rolb (bad) loope lds inc pop push clc daa scas cmpl arpl lock jnp in (bad) arpl xchg sub inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call out jns insb cmpsl nop test xchg mov add adc dec lret mov lcall push fnop push (bad) pop mov adc ret add movl push insb sbbb mov push sub fwait out std fnop in mov lock sub push mov aaa push add loop (bad) enter das and arpl xchg xchg repnz mov test xchg int3 jnp ja mov pop js bound jae pusha sbb push and xchg rclb nop std pop mov cmpb xchg add cwtl call jecxz (bad) fxch xor stc mov and dec lret push mov mov dec aam inc mov dec sub dec (bad) bound jns dec (bad) xchg in lret ret imul ret lds jl cmp jge mov sbb divl aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl adc jae pop fs in iret stc xor in xchg pop pushf mov jmp dec nop mov in imul in inc add adc aam xchg jae jnp lds imul dec inc mov mov std cli mov (bad) sbb mov xchg cmp or push mov lret xor imul cwtl sub cmc int3 (bad) out (bad) push mov fiaddl push push sti sub inc flds daa dec mov jne roll xchg call iret testb jecxz stos cmp inc stos cmc or std in sbbl or loopne push lds lods mov xchg fsubp arpl mov pop xor pop and leave fldenv sbb xor xlat xchg (bad) ja sub pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov pop mov xlat test push sbb inc rorl or scas out sbb mov xor addb pushf out sar sub pop and fildll (bad) lock mov mov dec cmp movb movsb dec iret outsb clc xor inc sbb pop mov insl inc stos push popa adc daa test cli (bad) xchg or pop lret pop pop mov cmp push out test jle or jns inc add mov and xor cmc mov cli in push test sub lret sub iret mov push test inc xchg sub rcrl dec fstpt jecxz dec jae add fbstp mov mov push mov mov mov sub ficomp xchg inc mov cwtl mulb push lock pop nop ret add mov loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno aaa outsl cld call hlt cmp or (bad) push insl jb testb popa cmp cwtl xchg jne dec adc ds cmpl and outsb shl sub mov out sarb enter pop xor cli fisttpll clc (bad) and ja sbb jp and mov (bad) fimull push lock inc lret inc mov fldl jb mov fdivrp test loope sbb dec jl outsb dec lea xor or hlt sbb mov stos push shlb sub jbe js xlat mov in pop cmp and movsb out add fwait int adc pop bound cli xor movsl push (bad) xchg test add adc jge xchg loopne jecxz aam call dec inc push in dec push mov fidivr mov sbb imul add das das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov sub adc dec in ja sub outsb outsb inc dec jns push sub adc sbb mov inc adc bound mov mov fcmovu pop push outsl jo test pusha imull mov enter sub loop mov sub push jecxz dec dec and je mov imul sbb mov inc dec or jb outsb dec mov adc or dec mov push (bad) mov out ltr sub fdivl repnz push push add jb (bad) fnsave add jle mov pop xor or inc xchg sbb in jo movsb lret (bad) out mov leave and stos rclb data16 mov push lds (bad) or pop out add inc hlt mov jnp push stos add push xchg test out out add enter jo push push (bad) call shlb sub (bad) mov arpl adc in jp add cmp nop lret daa int or loop jge sbb add adc addr16 jns jl xchg bound hlt lock hlt mov cld lcall je inc jp sub fldenv pop ja xchg and mov lds xor scas or scas sbb rcr iret adc jb inc mov add repz fdivs jp push (bad) subb sub leave sarb add loope roll faddl movsb (bad) inc mov sub adc test dec sahf mov fwait loop and fsubs shrb gs adc in push mov in adc jno repz adc sbb dec gs bound mov push fs jmp out mov mov mov cli pop nop ss lcall iret iret out in in in aam push push cld cld (bad) xchg mov faddl mov push jb lret cs jns sub push fwait leave mov pop cmp out inc push xor fiaddl inc lret aaa jl xor jle mov fsubp (bad) repz inc push movsl add test inc add arpl clc pop (bad) or dec xor mov xlat jle je clc xchg mov (bad) loop outsl push mov mov mov pop ret imul push or add enter jne lods dec inc insb push push pushf mov pusha stos dec mov ret sbb dec xchg cld cwtl mov test rcl push xor gs cmpsb in imul js rcll sti out stc dec push imul stc (bad) cmc pop adc pop or push mov cmpsl jno cmpsl outsb mov fisttp mov mov jmp shr inc call xor clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov pop lret mov les or scas pop push jp fdivl ds mov xor inc cmc fwait cmp mov enter cltd test mov in pop sbb fisub inc lret sub add xlat cmpsl dec aaa addr16 lods push movl xchg loope jp xor push je test fwait das mov jbe arpl in mov cmpsb jne insl push divl scas adc add cmp in jo cli push lock and call sub adc sbb pop arpl pop sbb mov mov icebp mov pop sarb adc pop lret cmp sbb cmp mov jge xchg mov lahf test inc pushf mov imul es (bad) aad hlt pop xchg repz inc cmp pswapd loope cmc cmc mov pop mov repnz ret dec dec push into mov jl mov inc inc sub or mov inc add or icebp das ds dec dec or xchg in pop (bad) inc sbb (bad) loopne add fs sbb mov iret pop add icebp mov dec mov imul lods mov push test leave add movsl mov std dec fxch xchg dec into scas subl dec pop (bad) jb jae mov sbb add pop mov bswap cltd icebp pop inc or add jo jb push sbb add sar pop repz lock xor stc cs outsl add jmp push add imul inc pop sbb out dec scas dec clc movsl sub push mov or mov jne lahf sub xor repz or mov aad xchg aaa (bad) jbe push xchg (bad) jae rorb xor lds lods jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov jbe outsb dec dec xor stos in int3 and (bad) adc iret data16 adc cmc js mov cmp mov dec sub ret ret nop and fdivrl inc lods sbb jb insl aad dec mov les pop sti cmp mov aas scas lret mov xchg jp mov add (bad) daa mov lahf push mov push push idiv mov clc push xchg es aad movsl mov ja lods inc mov imul jecxz cltd pusha pop in push negb scas je push daa mov and sbb xchg sub bound stos test inc cmp inc movups jne adc xchg fnstenv xor sbb push push add mov add insb inc dec cmp jbe scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fisubrl nop cmpl xor addr16 mov sbb not cmp imul inc or jl or sti int xchg or mov sub rcrl ljmp push inc daa mov and shr std sbb adc adc inc sbb jmp cmp sub mov xor push mov mov call fistl loop (bad) pop sub cmp ds bound test mov adc add sub cltd cmp adc and lahf dec icebp jns cmp or into lds sub ja lds adc rorb mov mov lcall outsb cli mov add retw insl jecxz fstl mov mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop inc stos les jae cli cs push iret test inc mov cmp sub push imul dec fcomps xchg xchg notb pop sbb test and mov clc fldl adc lea stos adc jecxz adc leave stos pop mov (bad) xchg std mov add mov jmp scas pop inc pop cmp pop or iret pop test imul inc push jb mov mov repz pop pusha (bad) lcall dec mov sub jecxz inc aam fsubrs push dec rorb imul nop adc push mov jl int3 mov add pop pop inc iret imul dec cmpsl dec sahf popf fldcw (bad) inc xor cmpsb mov mov or inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl lock and add sub pushl aas les pop add mov adc xchg inc lods inc inc (bad) dec xchg lret cmp pop (bad) sub inc jp add or push mov ds dec mov sbb cmp repz or int (bad) test mov mov jg push nop sub add xchg inc jge popf xor aad pslld sub or es aaa scas mov jo push jb xorl repnz push lcall and push and dec negl xchg ss pop mov loope fcoms adc inc pop mov xchg sub popf jecxz js jle sub sub push loopne fwait jl mov jmp dec enter negl sbb hlt or jmp push pop clc clc insb insb push push adc (bad) ja xor mov xor ret leave leave ds dec test adc pop daa push les push mov cs sbb push jbe cwtl adc gs add ja push jns movsb aam pop inc jns fistpll sbb lock (bad) lods scas pop mov popf in in mov inc dec adc imul cli xlat addr16 push push iret outsl test add and les hlt mov loop push push stc es js aas shlb rorl call xor mov inc or out int loop jno mov (bad) out movsl out pop sti xchg push push scas (bad) xor sbb das push xchg add xchg (bad) mov call jnp mov add add add in testl push ja (bad) test adc inc sbb mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods pushf movsl aad movsb fs pop lods jmp xor cwtl jbe out (bad) aam mov sub adc xchg xchg scas repz mov inc shrl mov jns cwtl mov int loop jb setg jmp addr16 mov pop pop lahf sti xchg movsb (bad) xor imulb sub clc xor hlt mov jno mov pop xchg mov cltd sti inc and (bad) mov movsb minps inc push popf ds push mov mov mov mov push xor sub ret push push mov cmpsl pop out sbb int xchg imul fistpll scas jno das imul adc lret jl stc inc or push jno mov rolb data16 into adc mov jbe movsl roll mov add sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd and mov sbb inc nop and or xor mov mov out fs pop cmc mov inc mov test cmp cmp adc sub flds dec mov jp pushf xor xchg (bad) jl movsl (bad) jb mov loope add jb xchg stc enter mov and jle adc pop and cld add xchg adc cmp insb std inc add sub cld leave outsb sbb push popa sarl add pusha sub aaa call fiaddl adc cmp test push and inc and lret dec mov xor daa push push arpl movsb sbbb mov lret push sub addr16 xchg aad sti jo aad and mov out leave sub push daa inc mov or push mov jg inc lcall sbb mov cmpsl cmpsl sbb add rol shll es data16 mov js xchg cmp adc ljmp mov aaa add pop test ss outsl fldl inc js push scas cld and xchg push test (bad) scas mov mov ds sbb cld mov (bad) pop aam jecxz scas sbb and mov jb dec scas jo mov loopne jb outsl xchg push push cwtl dec push jbe into pop add or jecxz fmuls sub dec in popf cwtl loop pushf add sbb pushf mov jp pusha fs daa push imul pop icebp ds sub (bad) sbb xchg outsl stc mov cmc jns lds jbe adc popf jp call push adc out addr16 dec ss arpl or int daa fxch aas jbe sub or sbb cli push btc daa aas ljmp test fimul mov push stos xchg xor hlt xchg call orl lock add enter jo push (bad) call test les (bad) pop lahf in pop out mov fs jge pcmpeqw sti or (bad) or pop sbb xchg cmp lcall xchg loopne and push sub call scas push jae pop push add mov sub flds or fs sbb arpl xchg xchg jb aaa fistpll sub adc addl inc clc dec ret jle fstl xlat cmp cmc mov push out cmc mov adc or jae inc addl pop add in outsl sub repnz cld mov repnz sub nop sbb cmp push cwtl mov (bad) lret lea ss fcoms cmp or (bad) data16 and lret (bad) cli es lods fiaddl sysexit cmp add or and and add call inc jns mov hlt hlt jg sbb mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test adcb loope addr16 int pusha xchg mov xchg push dec inc add sbb push push test pop in popf adc mov mov (bad) or mov pavgw pop inc cwtl xor insb push mov cmpsl cmp mov pop cmp stc mov (bad) lcall in aam fmull dec sub cmp pushf adc arpl pop and clc inc loope pop std mov pop mov adc adc in jg xchg and or jo sbb (bad) fsubs les hlt add aam lods add fst outsl sbb inc aaa shrb loopne mov pop and inc push pop mov jl sbb lods movsl jg pop sub fs jle (bad) rorb cmc cmc je mov mov cmp sbb adc xchg sbb dec sbb fs outsb mov lret divl aad xlat adc (bad) gs daa pushf popf and fcmove add dec cmpsl sub lret xor mov rorl cmp push sti push and imul test aas jp inc add xchg (bad) imul in or inc sbb (bad) out cmp mov push call xor cmpsl adc sti test fwait or data16 pop inc stos stos pop add ss jo and mov jmp out mov push sbb mov xchg movsb call or testb popf iret pop (bad) or adc push aaa shrl mov jnp xchg lret xchg push and add mov imul sub push stos sbb dec adcl arpl cmpsl jl arpl repz or xor stc jg sbb clc dec popl xchg adc jo (bad) mov jg punpcklwd cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and insb and jmp pushf daa sbb (bad) jle inc outsb or insl orb enter out add movsl sub in mov stos mov int push mov cmc in rcr lods jp aad sbb mov dec pushl mov faddl out pop aad dec in jecxz and and push imull mov popf mov movsl cmp (bad) mov test in in and fs lea xor cmp xor mov out dec cmp stos xchg icebp daa inc mov mov dec lcall pop daa (bad) pop xor cld ud1 fs (bad) jno (bad) sub loope test cs repnz ret int3 out xchg js aas je or mov mov inc jg mov mov xchg xlat leave stos sti mov dec adc inc push mov lret lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or push cmpsl fidiv jae pop inc stos sub mov mov xlat fs movsl sarl out push mov mov repnz inc inc jle bound dec test sarb sbb imul xchg cmp xchg adc test mov les push fs (bad) daa dec ret scas lret mov aas mov inc rorb fmull jnp je pop mov or cmp (bad) sarb add nop xor fs rcr popl push outsb mov or enter fdivl into movb movsl aam ds inc dec fildl mov add int3 mov mov xchg ficomp dec inc jns daa lock insb mov jo (bad) sbb mov cmc dec jno jmp adcl es mov in cltd jo adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or movsb pop xchg pop cld ret pop push mov mov jno arpl inc dec xchg push gs xor mov sahf cld out lock in loopne sub sub in jne dec les xchg daa enter cmpsb nop incb dec mov mov out inc fsubs clc cld (bad) or inc cltd mov jecxz fldt movsb ficomp lods pop jo xlat ror mov (bad) int3 xchg mov test subb adc cmpsb popf add cmp jo and repnz and mov test loopne inc lods push (bad) (bad) mov inc sti popf ret cld mov je and jae fstl in stos scas xchg loop cmp push sub or cmc addl stc xchg dec dec das jle test scas dec inc jg and rorb mov aas sahf popa dec loopne push push jecxz jne nop int (bad) xor mov ret ljmp inc inc addl lock add enter jo push push add dec rorb fstps push add lahf xor mov js mov cmpl stc out add adc cmpsl or xchg mov inc cs add push jbe (bad) push jecxz call movsl outsb adc jae xor sbb cli xchg loope in jmp iret and jg mov out stos xchg xor int3 (bad) push cli bndstx mov shlb inc data16 cmp rcr es in pop inc pop and hlt mov insl xchg mov or sub fisubr dec in lret and test in lret cmp add push xchg mov push repz ljmp scas mov and cmp std test jae mov (bad) fdivr (bad) mov jge fnstsw aaa imul out in in in aam push push cld cld (bad) xchg mov imul gs mov (bad) sbb pop jl dec int int3 call jns or or test (bad) into xchg mov inc cwtl pushf loopne inc divl push jae add out fwait push sbb loop call sub push xchg xchg jne or add mov andb lret mov inc (bad) fnop push fsubrl (bad) outsl push pushf xor mov test dec xchg in icebp push mov cltd and imul pop push add jnp adc fistpl pop jecxz aad stos rcl dec (bad) inc lcall popf aam loope in gs mov test pusha ret add popf xchg dec dec dec xor mov inc fidivrl jbe jp push ds ret sub out push loop sbb call ret imul insb push push adc (bad) aad xlat xlat adc push add xchg out paddq push xchg enter (bad) hlt pop mov loop cmp rorl push pop xchg push ljmp dec pop jo pop jb jnp or es pop das xchg fisubl xor sub jg sbb mov pop cld dec cmp shll leave mov sbb pop cwtl dec jbe enter or pusha sbb leave pop call or or push cmpsl std mov sbb mov push pop pop es es pushf or or dec cmp jp loope fs loopne lods mov cld xchg inc add ret dec jae aaa push out lods shrb sub pop mov sahf rol cmpsb cld test jb pop je leave adc xchg fnstcw lret inc bound xchg inc mov mov adc negb inc mov je cmp add setg loope cmc cmc mov jne push int push push frstor cmp jns inc or aas rclb mov in lea movl push in cmc push gs cwtl sub pushf jno pop mov lods fisttpll imul lods and lret push cs std pop out xlat lea mov inc stc rorl sahf xor cltd sbb jge sub mov lret pop int3 and fsub push add xor (bad) pushf push dec push pop mov aas push sub dec push out pop xchg movsb pop and mov daa and outsb fwait inc aaa xor jp push ficompl cmp add adc dec (bad) cs ss mov stos in out out mov mov outsb inc outsl in jno sub cmp and adc imul or inc mov in and jp sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl stos mov je leave dec outsb sub cmp adc gs add loopne div inc stos aaa pop mov mov enter loopne jl mov inc sub push out jmp mov fdivrl xchg cmp sarl clc sbb mov test add hlt sbb stos xor xor in lock xor push sub add jmp fcompl inc cld fwait sbb popf mov movsl mov out sub sti in and and push leave add pusha push outsl stos push mov pop push add adc imul adc jmp pop in dec mov (bad) psubusb into cmp cmp xchg pusha loopne (bad) xchg aad cltd cmp inc mov jp (bad) push scas jge into jbe test ljmp shll adc sbb mov adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test movl fstpl das out scas add ja das cmp popf adc pushf xchg lds outsb cmp bound xchg lods (bad) popa out mov out xor dec inc xor aas outsl rolb fisubl cmp imul push cli lret call sub imul mov jecxz enter fmuls call hlt test (bad) xor arpl pop cmp jl mov sub xor rclb push (bad) jae pop mov ss aad adc cmpsl (bad) cli lcall mov icebp cltd pop inc or xchg in xchg lods fnsave jnp in jg ror scas sub push sub fdivs add mov xchg sbb xor jno jne and jmp test add fcmovu js in in lea and movsl movsl and in in or mov add xchg xchg loop scas scas ret dec int jnp inc cmpxchg sbb js out mov inc in adc out das flds mov inc push addr16 mov sub dec pop out push mov sar repnz dec lock movsb fdivrl mov add arpl js pop js inc inc jo inc ret call inc in adc sbb and adc dec test lods add add pop xlat jnp idivb xchg lods mov clc sub dec test aam xchg gs mov sub sub push pusha fstpl pusha sahf mov or into sbbb inc sub (bad) fdivrl loope,pt mov stc out lcall outsb cmpsl sub int3 das lock sbb xor and or scas test sti int push push test mov into xchg xchg call rcl mov sub fstpt sbb mov or inc inc dec dec xor jl sahf xchg cwtl cwtd cmp popa mov or popf xchg pop fidivr xchg mov pop inc push inc mov cmp sti pop sahf mov add loop (bad) ret push dec mov or mov enter and imul (bad) out lahf cmp pusha push cwtl bnd xor inc adc negl jl clc out push loopne mov jne rorb jle lea mov push lods jecxz test ja ja mov pop clc mov std movsl and faddp movsb std jg adc dec jae jle ss sbb inc push push mov nop mov cld out fucomip aad push or push push and and rclb mov (bad) loope gs push adc addr16 and xor cltd mov jb push cmp pop dec dec cmp arpl call adc imul insb push push adc (bad) ja xor jmp (bad) fs imul add (bad) faddl ja mov mov repnz pop faddl out mov push cmpsb les dec js sub sbb pop hlt scas (bad) sahf cli lock push pusha add mov xor inc lods jno insb sub mov mov lods and xchg (bad) jl add sbb push fistl sahf and xchg or mov pusha fimul sbb or xchg repz pop jle nop mov in pop mov sub int sub xor pop add stc lea enter lahf (bad) stos cmp (bad) addr16 nop movsb cmp add fiaddl (bad) adc inc inc jb sbb jo xor fild xor push mov xlat adc (bad) pop xor and enter add mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push mov test pop ljmp int xor xchg mov cli leave mov push insl jle jbe (bad) xor into fnstsw dec cmpl jne and pop mov mov push dec adc xorl dec sub movsb jne cltd lahf loopnew xorb lcall sahf jg mov les add mov push or dec jns fimull pop sbb push int3 sbb lret jo inc mov sbb jns jle testl call mov and int3 xchg pop dec pop sub gs dec popf ret and out ret into jge xor sarb lahf daa ljmp stc mov xchg repnz inc gs sbb xchg jmp negb std sti pop jnp xor jnp fnstcw ds sub and jp sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl adc sub enter (bad) loop lds nop shll xchg xor jns popa mov ja xor arpl and mov imul inc mov jno daa mov adc xchg cld lea push ret mov ret push pop pop push pop jmp hlt int3 cmpsl inc and or sub sub cld out mov xor mov xlat mov ljmp mov jg loop mov lds jl gs outsl or movsb clc cmp pop lret xor pop mov rcr dec sbb push test cmc mov rolb pop pop xor (bad) sbb lods mov mov xor pop jp adc mov adc inc addr16 cmp mov daa cs (bad) push xchg add ja dec jb div jmp xchg dec dec jno mov or add rol shll es data16 data16 fcmove jg lcall ret and (bad) mov clc xor ret sub mov outsb jp inc push pusha fnop shll stos and xor add mov mov mov jb jno adc jo adc xor sub (bad) fdivs or gs out inc or orb test roll xor mov jnp lods push int3 dec jns add mov int adc and mov and rcrl fiadd lods mov push aad inc sbb pop icebp pop arpl mov stos fdivs xor push sbb outsb repz fnsave aas stos ret push lret cmpl sub inc test in add and test decb jmp dec pusha (bad) notb repnz push lret stos and js adc imul dec xchg xchg fcmovu mov inc addl lock add enter push wbinvd shll mov cltd ror jb push sbb aam or xchg inc mov (bad) xchg jnp jge mov mov (bad) loop dec push push inc cmp add xor lds pop mov enter pop mov mov (bad) pop lods stc (bad) adc add mov xor shlb adc pop loope cld jbe sub push call scas mov insl in pop mov addl xor cmpsl pushf inc sbb xlat lods std dec aaa jae add adc lret mov scas or fisttpll dec lret sarl inc mov pop icebp sub sub pop sub loopne jo pop cli push fcomi stos push xor push dec and rclb or and les scas shlb jne mov fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in dec loop mov pushw add jb je lock xchg outsl inc lds inc aas aam cmp xchg mov dec hlt sti es out stos push inc xchg cmc daa mov pop adc (bad) (bad) test push inc scas cs es call in lods sarb clc sub scas and jmp add (bad) imul add cwtl pop cmp fdivl jmp or rcrl out pop stc mov push cmp push aad add mov loopne sub cmovp add mov (bad) pop or sub int out enter dec rcrl fidivl enter pusha andb adc out mov mov xchg fisttpll jp sub jnp push mov imul cmpsl xor dec cmp leave cltd push mov int3 cwtl pushf imul inc push mov xchg lock mov sti fs outsb mov lret divl aad xlat adc (bad) (bad) sub movsb lds or insl ss mov in pop and scas and and push xchg xchg ret pop les xchg add dec jp loop inc and (bad) mov or (bad) fsts call pop xchg test pusha sarl or jecxz jbe xor out rcll dec into sbbl loop dec clc push push mov gs mov add adc lahf cli push jns cmp leave lcall cli addr16 sbb jbe int3 push push cmp idiv xchg mov pop jo rcrl xlat jo test xlat (bad) fcompl lds fcoms cmp xchg in fbstp les sbb insl or es in xor mov push mov xchg div dec movsb js inc xchg cmpsb jl sarb out lock imul fdiv cmc mov cmp mov cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcrl and and sbb mov nopl xor inc push lock or (bad) dec (bad) xlat mov pop xchg std inc arpl sbb mov ret es add (bad) dec jmp pop inc nop movb (bad) ljmp cmpsb cmp pushf mov insl in dec test xchg xor mov push push enter inc mov les aam cmp inc sbb cmp xchg fsubrl and xchg inc xchg out (bad) mov imul mov push dec adc jp adc ret mov or sbb flds add stc les inc imul lock mov mov sbb rolb xstore-rng cmpsl push add cld ret cli sub fisttpll mov insl adc xchg insl gs in insl sbb (bad) inc jge jne fs rcl iret fcomp into into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or mov mov mov and jo pop sbb mov adc or pop cli mov shrb movsb inc cmp push sbb mov push mov stc mov mov xchg mov fstp mov ds mov loope adc mov jp in lock fs aam pop xor push inc xor mov inc das pop mov cmp or jge mov xlat pushf popf push sbbb push (bad) in lret adc or lods in (bad) pop xor jge push loope pop lock xchg xchg mov and ret jo cbtw xor pop mov inc lea stc mov lret and ret sub sbb imul jo mull out imul in and inc cmp decb add popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or lods push xor aas sub push jne mov dec lea cwtl nop xchg push xor rcll push fwait cmp cmc mov pop push inc xchg jge inc xor imulb jmp push pop lret mov mov push add sbb cmp das cmp shl outsb jge xor sub mov xlat inc enter fs lock mov add int3 imul inc sbb xor jns sub pop das or sub movsl adc (bad) sub ror repz cmp (bad) fnstsw dec cmc jge stos add push sbb test in dec cmp ja sub mov sbb push sub movsl pusha push movsl sbb movsb xchg jns stos adc in jbe dec xor adc mov mov add (bad) ficompl inc fmuls sarl pop jmp movb addl add push pusha pusha lock add enter jo dec jle and divb inc pop cwtl in jle rsqrtps mov (bad) loop sti jg fadd stos leave aam ljmp cmp xor mov stos sbb (bad) scas adcl adc cli xchg inc or dec mov hlt test jno lock fwait mov outsl bnd mov dec push lcall adc mov fsubrl sti into repz repnz cmp pop lods std xchg sub jmp subl sbb test test mov adc xchg and mov mov mov lret xchg ret fs pop pushf pop mov adc cs cmp gs out dec and and xor repnz sub jmp dec cmpsl out sbb adc iret cmp cmp sbb pop xchg fstp mov aaa imul out in in in aam push push cld cld (bad) xchg mov cltd inc cmp jae je xrelease xchg les mov push push lahf mov mov rorl fsubrl push ljmp jno jle add mov and insb loop jg pop xor push push fcomi call and xor jl stos into lods (bad) mov outsb int push pop lea in cmp push cmpsb add icebp mov ret (bad) enter ljmp (bad) imul (bad) in lock xlat and mov pop mov fdivrs cmp fdivrl xchg jmp imul clc repz aas rcrl inc flds das imul imul mov lea sbb dec mov mov scas cld jno jo push cltd es cmp pop cmp call ret imul insb push push adc (bad) aad xlat xlat mov or pop adc movsb stos popa jp jno xlat lds sub movsb pop mov aas fadd and (bad) pop xchg cmc (bad) out jecxz rcrl mov pop (bad) fsubs jns or inc add sub dec outsl add jge mov add out pop jmp scas aam shr test ret (bad) ss lret out (bad) daa xorb inc pop sub loope (bad) xchg mov mov cmp xlat lds pop jno add outsb lods lahf mov pop pop icebp das xor add mov maskmovq gs cld into ds push adc mov mov in lds sbb les cmp pushl pop mov cltd lahf arpl sbb outsb into lret jnp adc ret test lahf xchg ds jne divb cmp pswapd loope cmc cmc jg orl lods push cli test scas scas loope lea push (bad) xor mov (bad) sbb mov push mov pop mov cmp ret sbb add andb inc xchg mov test push add dec es cmp push add sub and pop jne or in flds or lret andl imul mov mov arpl pushf out fmulp sbb pusha in in cmpsb xor hlt xchg lcall stos sbb jle,pn jge andl sub add (bad) loop mov ret fist pop inc fcmovu sub mov push stos mov xchg pop adc in pop daa xor jle hlt jle sbb jb (bad) sbb dec push and jg shll lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl shlb call rcl fidivrl pop pushf fsubrs lock lds outsl out add mov xor popa adc cmp sub dec int3 mov adc test pop cs jmp ja xchg xor dec xchg ss fwait testb and fist pusha sub jb adc enter outsl mov mov les push (bad) add inc addr16 repz cld cltd in int dec sbb or fs and popa icebp add out xor movsb sbbl add adc mov loop (bad) jnp xor xchg adc repz pop incl xor add por popf inc rol stos (bad) (bad) xchg jns mov out cld push inc sub lcall jmp xor or or testl dec mov stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test jnp les mov prefetch fsubr test adc ret sub icebp mov ja call movsl and cmpsb jl inc sarb adc aas andl ja stos ss loope cmc std xlat ljmp xchg jo xor fmuls roll and fdivrs push mov add dec mov test or gs movsl adc cwtl bnd int cltd std (bad) push lret in sti scas movsl hlt mov stc sbb ret ja cmp jns pop sbb stc ss sub sbb or cmc loopne movsb mov js ret mov dec addr16 (bad) push xor inc jne ds sub aad cli pcmpeqd aaa aas jne lcall or and rol push sbb lea and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb daa mov inc pop mov bound or push fs cmp xchg cmc dec adc in (bad) movsb ret nop xor es adc cmp sub add and jae stos push xchg nop push out cmp test adc in sbb scas int iret mov cmpsl push pop cs jno (bad) insl push dec sarl add call mov jb out (bad) iret mov pop lods leave dec lods mov jp clc adc add dec es mov mov adc mov mov insl mov std cwtl es sub add fcmovne loopne insb dec fwait cs (bad) loop push xorl scas outsl lret adc xchg add fisttp movsb push ss push xor mov mov sub xor xchg arpl sahf addr16 adc add add rcl mov sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf mov lods (bad) lcall or inc lcall fmull repz pop fiadd imul aaa sub lahf cwtl std jg ffreep ss lahf sbb into push pop (bad) adc ja xchg (bad) xchg jns lock add sub fadd mov hlt les lcall cmc cli mov dec jmp hlt cmp stos clc insl add mov push mov or dec push cmp shrl stos test sbb jae adc lahf mov push mov mov adc adc and dec inc lea and sbb mov std insl jp mov push je addr16 imul and or cmp add fiadd xchg sbb xor jecxz std xchg cmp sahf test cmp arpl call adc imul insb push push adc (bad) ja xor mov or addr16 or inc pop mov int3 xlat and insl popf ds inc (bad) rcrb stos cwtl inc fisubl xchg adc xchg aaa movsl jmp es cmp and push aaa push push imul pop mov jae test fisttpl ror arpl daa mov mov add dec repz shrl lahf repz cmp lret outsb mov mov xchg push loop push stos dec jns ss sti adc je pop inc jnp gs fs xor push pusha addr16 sub and or sub mov stos push lcall xchg or pop sbb jp jge bound inc add lds sbb rcl mov mov outsb add pop jbe pop loopne and push es cmp daa stos ljmp add xchg jo mov cwtl cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push or je test jb pop movsb push dec test push icebp xlat dec jge pop dec pop cltd jg sub lret roll mov fdivrl add cld imul rcr fisubr (bad) mov inc mov inc mov or sbb push pushf xchg cmp xchg mov fwait mov mov loope rcrl add je or int3 mov gs mov inc xlat pop leave (bad) scas shll arpl pop xchg loop (bad) mov fsubl jae mov jmp add xor in test movlps mov inc or dec inc lods (bad) sbb dec mov and aad xor pop clc (bad) adc xchg cmp mov mov and adc xchg push and prefetch push sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos dec pop aad dec data16 sub mov inc arpl jmp hlt sub push and das pop xchg xchg aad mov test push or sbb cwtl pushf rolb cmp popf daa or lahf cmp push test lea mov mov jnp shrb pop test or xor or dec add movsl ret jnp and popf (bad) lret lea jns add mov add and xchg add jge outsb pop ds fldl mov scas cmp mov stc xor push jle sub int jmp pop test es fimull addb (bad) outsl cmpsl dec adc push imul cmpsb bnd sub icebp xchg add mov push pop outsb inc add xlat mov test push jmp jae or ljmp mov or add rol shll es data16 mov js in in lea ret and inc test cld mov mov inc dec fdiv daa iret mov mov iret addl xor aad (bad) mov aam scas in aaa push ficomp cli pop pop mov or in cmpsb lret shl lods xchg (bad) in out push pop pop jge imul push mov or or test inc push lods pop (bad) and sbb pushf in insl jae mov add jmp jns out popf ret pusha mov out mov sbb sub mov fs adc mov pop pop loop pop push cmp mov repz faddl cltd add js in and jmp outsb out xor xchg mov xor inc negl loop inc stos push add adc fisubr jl jnp out mov jb pop stos shr imul mov ja inc sbb lods lods push push pusha pusha lock add enter jo push (bad) call shlb int3 xor inc pop pop sbb cld lahf adcl addr16 lea pop mov lods loope outsl stos pop push scas aam add insl mov mov andl jecxz cmp fdivrl mov lret push outsl lds insb (bad) into inc sti xor cmpsb sub sbb mov fs add xchg loope adc lret pop and enter mov xor pop add icebp imul inc ds jb pop dec jbe imul mov sahf (bad) lods and xor iret (bad) shlb sbb mov imul mov subl movsl scas sub shrl cli loope mov adc dec int cmc fmull out or nop push mov mov addr16 pop mov cmpsl aad cmpsb out mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl sub jmp mov push and nop rcrl cli sub fisttpl or aaa lret push jl aam stos movsl xchg jp push stos dec mov adc cli hlt mov call fimull cwtl fwait push lahf outsl inc into jecxz cmp fldcw into sub inc aad lds xchg (bad) mov jmp adc or (bad) cmp cmp into fwait or xchg dec add xor std jecxz lea cltd ss dec ds sub clc (bad) jnp xor inc jo test xchg pushf cmp or cmp scas mov clc out popa fisubl je pushf dec lock xchg jl mov dec repz js pop fadd je cs (bad) jecxz adc ss pusha es scas pop jbe js cmp and sbb mov and jbe hlt sahf xor test mov cwtl stc arpl add lcall mov adc xlat xlat adc (bad) gs daa pushf pushf cmp mov xchg out push fwait xorb cld pop lret pop add inc fs jmp xor hlt cmp cmpb inc hlt jg les outsb cmp outsb push std aam jb ljmp cmp cmp hlt movsb (bad) out xor aad jne cmp sbb rcrl (bad) mov pop jne,pn aas ret jmp pop xor or dec sbb inc or mov out loop (bad) arpl add ljmp xchg fadds pusha pop loopne (bad) jnp das mov xchg xchg fisttp adc popf lret inc mov imul idivl sbb mov dec push xor jns pop push mov mov (bad) xlat test lret into push mov xor add mov in dec into adc or pop movsl insb add addr16 rcr popa gs inc inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov xchg out mov dec cli lahf or in mov add cmp (bad) mov xchg je outsb idivb nop mov dec pop inc out jmp rcl xchg sbb pop sub dec jg aam fsubl jecxz cs inc push push fisubr sbb loop shlb jmp sub hlt jle fdivs stos jl arpl mov pushf loope xchg arpl stc sub popa mov cmp jmp push cmp jecxz xor ret in jge fwait cmp cmpsb arpl xchg add loopne cmc jecxz xchg mov mov mov scas lret mov nop mov jg es xor inc mov pop pop cmp inc ljmp mov lods dec add shll jmp xchg shll pop jecxz sarb aam int hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg or jge xchg mov pop lds movb outsl dec ljmp jmp add mov scas jge xchg ret ljmp faddl or loope dec cmp xchg js icebp add inc pop mov cmp lods xchg lock mov pop fwait mov xchg and (bad) xor iret xlat mov aaa div jo jge es je dec pop decb (bad) scas (bad) stos push incl in leave es jno pusha and sub dec dec pusha cmp inc (bad) and cmp cmc movsb fdivl loopne lcall push mov inc das ffree int3 push and int xlat xchg fdivrs xor push sahf ret sub adc push inc pushf xor xlat fwait (bad) push sbb xchg jae mov repz fucomi lea orl test int (bad) fisttpll inc sub mov rclb cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc sub stos adc loopne adc dec adc mov ret add and mov insb shlb add mov xor or mov adc dec push cmp mov ficompl dec and lods inc fstpl and shll or fs xor out pusha sbb ljmp adc inc adc cmpsl xor xchg xchg xor push in xor sbb or sbb icebp ds inc shrb cmc sub (bad) pushw lahf (bad) or lds in inc push push inc arpl xor aad call add pop mov and cli imulb inc aas js icebp fadds jne icebp repz push gs dec mov and adc mov test and jmp push add xchg dec imul ljmp out out add enter jo push push (bad) call shlb sub fstpt sbb loopne ss or mov lock adc out add mov mov lea mov lods dec xor shr imul mov mov movsb dec js sub pusha jmp repnz rolb push or or (bad) lret ficoml pusha jmp add sbb mov or jg add push (bad) lret lock mov repz fisttpll sbb or mov inc sbb cmp loope fidivr xchg mov and or bound aam mov xchg sti (bad) lods push repnz sub out (bad) push cwtl xchg jge out sbb fwait xchg jge loopne inc leave and push and push jmp jns cwtl jg push lods and (bad) lock arpl scas mov dec xchg mov jae xchg aam push push cld cld (bad) xchg mov faddl sti fs outsb mov cmp jp pusha movsl es aam int3 mov or jp xchg jne je lahf scas in (bad) negb mov fwait and xor stos xchg outsb lcall sub lahf and je sub mov xchg add mov xor pop sub test ret or sbb insl repz dec sub jo add shll xchg xchg push pop jae and data16 add or insl xorb lods push or add jle push inc dec or dec mov test mov inc adc imul int stos cld cmp inc js call shlb push sbb int3 jg in cmp push adcb fmull mov cltd popa xlat mov movsl into xchg sarb inc adc fdivrs (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl pop jo mov daa push repnz or inc dec mov mov (bad) nop aad stc ljmp adc ret push dec movsl ss mov icebp stos adc xor (bad) inc adc insb mov test or pop dec inc dec clc sbbb sub lods adc cmp jne bound les sahf (bad) push push leave in (bad) mov test mov std sub repnz dec mov hlt dec xchg sbb xor cmp (bad) clc push daa jp pop and sahf out lret aad int jno inc fdivr dec scas mov into mov cmp add jae mov jno xchg movsb fwait sub js out mov aam push jp jnp adc cli or sbb pop mov test adc push hlt mov rolb xor cmc mov pop mov repnz ret dec dec push into cs lret mov dec lret enter test ljmp pusha adc dec sub jl addr16 mov jg xchg iret xor mov (bad) idiv jp or mov mov hlt push in nop adc cmpsl sub das add or xchg cs cmp mov aas iret inc popf push (bad) mov xchg ret ret (bad) push cmp xor insl scas daa xor lock popa sbb dec arpl ror outsl xchg and sub fstpt push add push icebp rorb call stc pop insb inc cmp add addr16 or push int3 bound aad fsub mov mov sbb mov cmp arpl movsb out test ret xlat sbb or mov ljmp and gs repnz aas mov mov (bad) cmp adc fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec mov arpl pop lock jo in (bad) pop push cli (bad) push gs out dec lahf jno pushf inc xor repnz push lahf dec jne jle lahf jg outsl xchg inc into jo inc add mov xlat xchg (bad) lret or or cmpsl dec add jnp mov mov xor rsm frstor ror adc jecxz imul pop add sub and mov xor pushf (bad) mov in icebp movsb repz js xchg adc fwait ret addr16 xchg push fs into fisttpl jl xchg push scas lods xor imul bound out dec lods lea fcoms cli xchg cmc out mov mov nop xor pusha dec mov xlat outsl pop sub inc add mov jbe xlat inc jp cld mov inc dec dec clc stos (bad) int lods popf sarb xchg les or (bad) (bad) popl add jmp xchg fcmovu mov inc addl lock stc pop aam xlat jne es cs nop mov pusha jle cs test aas jmp out xor xchg push mov (bad) aad cs cli and mov cwtl repz mov sub adc mov (bad) (bad) scas and cli and jmp sbb je sti xorb pop ret lods push fnstcw mov cld push into adc mov fild mov loop sub mov rclb xlat xchg (bad) jge mov or jle fsubrl cmp adc mov in xor dec shl repz sub rcrl mov and int fildll pop dec outsl sub adc mov out cmp xchg fisttpll adc sbb mov lods cmpsl pusha inc flds xor outsl push push push into into test mov (bad) pop pop xchg mov aaa imul out in add mov popf aad jne mov lret outsl (bad) fnsave (bad) xor sbb mov sub sub outsl push add pop mov lock repnz adc adc cmp pop imul jo notl out jmp push dec xorl loope inc xchg sahf jmp xchg mov lods sub cmp loope cmp jecxz add bound add mov repz ss jmp lret inc scas insl add or shl std inc xchg les imul test mov jl push pop test repnz inc mov pushf and sub je mov iret cwtl (bad) mov cmp dec leave loopne js pop sbb add adcl andb mov aas enter mov add movsl test dec cmp arpl call adc imul insb or lods pushf inc jmp stos mov xchg push jl adc loopne pushl popf sbb lds mov jns dec adc lds add pop mov or mov fstl add cmpsl fldl (bad) xor bound rcrb jmp mov mov xchg cmpb (bad) enter mov imul insl and dec dec notb mov jle xor adc leave xor push test rcr or jno inc loop inc lods cwtl mov pop adc lea cmp xchg push mov mov jp push cmp dec rorb test jo adc rorb cmp insb (bad) (bad) (bad) lret rol xchg mov rcrb or xchg xor jae mov xor ret leave leave ds jne divb cmp (bad) sete add pop pop mov mov popf repnz addr16 pushf rol dec movsb fimull std xchg (bad) lahf ja call int3 mov jge push addl lret incl push mov in dec mov aad push pop pcmpgtw push fxch mov call inc add lret loope cmp mov test insb jge mov push (bad) mov fildl cmpsl out jmp arpl dec dec mov lods cmp jl les pop dec rcrb dec and je arpl mov ficompl insb jo add pop lcall es fsubrs cmp cld icebp pop dec push dec sbb add mov jp mov aaa ficompl into cmp sub (bad) (bad) idivl xor mov mov pop hlt sbb sbb (bad) rcll push and lods lods or jp sub mov out sbb xchg pushf add mov add adc mov sarb es push push jae and push jbe in xor mov add lods and adc in and pop inc pop mov dec adc adc and insl xchg pop fstpt je pushw xor cmp xlat add jmp lea push enter sub cltd dec (bad) xor jns shll jb cmp insb idivl adc push sub add ror sbb pop pushf and sub cmpsb (bad) imul (bad) mov imul mov mov incl aam xor sbb (bad) jnp insb cmp rcr xchg inc xchg sbb mov push jnp or jo mov push ds test int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns stos sub aas sub js jae sbb in (bad) pop int3 loopne pop inc xor roll and movsl xlat in rcrb adc test jb lahf sbb sub das popa aaa mov outsb stc xchg jle push sbb mov jle jb (bad) sub push negl sbb or scas scas popa jge,pn in pushf pop test stc mov xchg out add sub pusha cmp dec mov mov and jne orl pop sub push fiaddl mov test push sahf test inc ja jnp (bad) lret pop (bad) fsubrs in test rol cmpsl cmp shrb loope adc jbe cwtl or xchg mov (bad) jecxz data16 mov js in in lea and movsl movsl and in in or mov add jns sub pop xor jle movsl iret iret fwait sbb fbld xchg push and pop pop insl mov popf (bad) ss aad pop jmp add sub fwait mov das sub push mov dec sub jg xchg scas push ss stos mov ret clc xchg xor mov mov push xchg push mov cltd adc loope jns daa sti push push repnz sbb movsl fisttpll push aas xchg push enter ficomp push mov mov sub (bad) loop dec orb addr16 sub lds dec or outsl adc or mov lret or pop scas dec xchg fbld ja lock bound jecxz or sub cltd push (bad) out loop,pt mov add push es push push or mov enter jo push (bad) call shlb sub fstpt sbb mov or pop out or jl push mov and jbe pop xchg cld daa je shrb cld inc mov jmp test dec or xchg addr16 push dec pusha data16 dec cld and adc pop and xchg outsb pop mov stc pop ss cli push daa xor repnz in ds and outsl sbb xor jns stos ljmp fwait jl jo int jecxz mov scas arpl push pop or mov imul scas push (bad) loope fsubr outsl adc cmpsl cmpsl mov in dec sub pusha mov gs mov adc mov push pop stos sub mov mov sub dec loope int3 stos pop adc push inc fldl sub jns dec push cmp mov jp and push and (bad) aad adc int (bad) loop fwait mov inc cmp jl sahf jnp in movsl movsl test dec cmp arpl call adc imul jne jbe mov dec pop dec jnp rol out or pop inc js aas cmpsl adc sbb mov shrl in cwtl jg sbb popa sbb mov cmpb dec leave and fwait imul mov insb jmp in cli xchg mov out xor icebp add add loopne push mov cmp fwait pushf cmp arpl les ss mov (bad) adc lods sbb sub loop dec inc lcall push lcall inc ss pop jb aaa lea mov stos incb xor mov leave pop cmp sub ljmp mov enter add (bad) sbb setg popf sarb aaa (bad) das inc lods ret jmp int3 out jg mov faddl out adc xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl fimull or push fwait xor xchg cli add int imul addr16 adc aad xchg mov lahf pop lods pop loopne sti push insb push adc add add push js xor (bad) jl pusha (bad) pusha push lcall push ret stc mov pusha outsb pop in ret into mov sahf pop insb insl mov lcall xchg or iret sti bts xor fs je mov lret mov mov mov cmp mov ret aaa prefetch dec nop add pop or sbb inc push pop add and lock cmp push push inc out loope dec mov ret xchg mov dec ja idivl jae loope or pop jle mov or mov mov push lods pop jge mov hlt mov in xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov out xchg xor mov lea cwtl repnz push (bad) std jmp push mov inc add (bad) divb adc mov or sbb adc pop jg mov ja in fwait aas js addr16 sbb dec int3 popa mov ret pop jbe nop add test pop push fistp push (bad) lock sahf hlt sbb int3 rcll xor dec ret adc push xor lods out sub push jno pusha outsl aaa sbb or cld scas fildl scas push scas lock mov stc aam sahf or push mov adc or aas (bad) mov mov rcll nop cmp xchg inc and ror push repnz sub insb das js in in aam jbe sbb outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov cmp lea popa mov pusha outsb pop sub das inc add xor test mov (bad) stos jne add ljmp jne div je in jmp dec mov sti inc ljmp sub aam ljmp mov push cmp xchg ret cmpsl (bad) cmp mov mov movsl jmp jo shll pop jg test push je mov dec test (bad) pusha lret in jno cmp add mov sbb mov xchg (bad) sub dec std mov ror ja cmpsl addr16 pop sub mov push push xchg js push iret mov xor sub lods das idivb shlb test push in sbb scas cmpsl dec sub sub (bad) mov mov sbb test jnp sahf (bad) pop and mov addr16 into mov jno or bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov mov adc repnz outsb das jbe dec lock adc mov jecxz lcall dec push sbb push fidivl outsl push sti scas jns popa je test push mov aad stos scas fucom loope stos mov movsb lahf std and (bad) scas lcall inc inc cmpl pop sub mov mov mov pop mov cwtl add test ret bound xchg divb (bad) mov mov push pop push dec pop loope sbb pushf pusha jg fadd mov ret (bad) daa xchg lods and jb fadds sbb xchg inc xchg cmc (bad) mov jecxz cmp cs nop in int dec xor mov imul and arpl dec jmp iret or and jl adc bound (bad) xor or xor sub (bad) adc fldt pusha lock add enter jo push (bad) call shlb sub fstpt jno test jge or mov fdivrp aas cwtl xchg (bad) pusha rcll xchg jecxz pop sub push cli das pop repnz std or cld push out jns and movsl mov aad rcll push scas jne int sbb cmpsb divb jae int3 mov mov and pop es mov popl mov mulb sbb shrl fs xchg jg inc jg mov xchg ret sbb (bad) pop jecxz mov jmp mov cmp or fcoms repz jmp insl mov adc sbb mov mov lret sbb mov stc mov aad jg rorb imul out mov clc outsb int3 xchg fildl test and out sti xchg (bad) xlat in fidivr inc xor popf mov ret ss jge xor cmpsb divl out in in in aam push push cld cld (bad) xchg mov faddl sarb push mov mov push es xchg icebp mov (bad) mov or and loop dec mov push ljmp sub sub xchg out mov xor add inc jle mov mov and das pop into int (bad) dec add sbb inc daa or cwtl lcall imul fiadd inc jne pop es out inc sbb push sarl aaa outsl scas mov jne jae jns andb add movsb arpl jnp shl mov mov hlt clc jns cmpsb nop push add push scas out push dec dec lahf pop add mov insb jp push push nop push call enter scas aas push out movl or clc inc sub mov aas push mov mov and insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcr mov add jmp cmp (bad) aas sbb test decl outsl in dec mov ret mov shlb dec cmpsb into mov push (bad) jo pop xchg xchg mov mov std (bad) push inc adc pcmpeqw or movsl dec add and jns movsl cmp add jae and inc and in lea fadd mov or sarl (bad) divl stc or repz xchg shll (bad) je insl push pop sub dec cmpl ds call lods fimul (bad) fdivr test js orl call outsb adc stos outsb mov loop adcl dec ficom movsl leave xor xchg xchg imul push leave sub dec fistpl sbb cwtl dec pop dec cmp call jp test mov xor mov cmc mov pop mov repnz ret dec dec push fadds jnp (bad) mov div cwtl or loope call ss sti mov mov loope pop jmp add mov outsl and sub int3 (bad) inc lds jns jg pop in lea push out xchg dec das pop cmp call pop nop repz sbb out add cmpsb test fild icebp out es into mov cmp scas clc push arpl inc insl stos lds add (bad) int adc xor cli out dec pop pop cmp add mov rorb pop enter daa fdiv (bad) fstps jae xor loope mov rcrb dec or ds dec sbbb xchg in jb jne (bad) aam inc icebp out out or incl fisubr cmp insb in shll pop stc adc jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc lea cmp cwtl hlt pop sub mov and or js aaa adcl pop sub insl cmpsl mov inc jp andl dec jae (bad) jbe aad ljmp push mov into inc sbb jmp ss sub stc addr16 insb inc imul (bad) movsb ljmp xor iret (bad) push add outsl xchg enter loop push pop push xchg bound pusha icebp mov lahf imul jecxz jae jle mov add jp mov dec (bad) test mov sub mov cltd popf idiv in dec xchg (bad) mov pop and aaa (bad) loope xlat stos sub out sbb test mov fdivl lods aad insl or mov and sarb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu adc inc aaa addr16 jle xor mov test popa dec mov mov mov add mov inc push jmp mov loop xchg inc test bound popa outsl push ret popl imul leave lds lock mov push push std fs ret lods fsubrs sbb clc in movsl push pop mov cld stos or nop inc aam push sbb xchg inc out sbb in daa test add ljmp sahf xor mov aad ljmp add push mov mov mov sahf popa adc jnp (bad) jo stc mov iret mov mov clc mov movsb adc out iret cmp shr loopne lcall ljmp mov mov shr xchg sub mov cli daa mov aad adc xchg loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov mulb xchg stc mov aaa push scas stc fnstenv bound xchg imul jbe repnz or out imul pop xorl ss test and adc mov ljmp mov je mov in out cmp aad mov repnz icebp or inc repz add sbb push and mov mov sbb pop pusha loopne sub iret and jns enter les mov or mov out mov movsl ds adc test xchg imul int je cmpsl addr16 in push jns,pn icebp jl and and and ds popf cmp xchg frstor mov add (bad) cmp les mov xor or mov shll inc ja subl jno inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc aam adc ds sbb or inc pop pusha add fistl scas sub roll scas bound sub and ret in sub jp mov or test ficom mov jbe mov in inc inc aad sub leave test inc or scas fmull roll mov push xchg mov cmp adcl sub add aas lret mov mov or addr16 dec cld or sbb cmp lea adc or fcmovnb movsb pop repnz push jp cmp pop int3 sar pop jg jbe push dec shlb jbe or movsb (bad) cwtl jg push inc in pop cmc repz test push fstpt dec repnz mov add mov add scas mov and and mov mov cltd push jo popf cmpl dec cli rcrl pop lret insb (bad) xchg push adc (bad) ja xor mov xor ret leave leave ds jne notb dec pop cld in jmp cld loop lods adc dec xor (bad) or add cltd or xor mov sbb cmp mov jae fwait cltd aas sbb aad sti stc orb lahf repz or popa movb lock (bad) sbb add outsl sub pop mov jo (bad) mov roll adc add push xchg call in push dec mov fisttp inc sub das or insl lods push mov xchg mov mov mov or or push jmp and lods lahf xor in and aad jecxz cltd jb fsubr imul pop xor int je sbb jmp push cmp add test inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov add mov jl pop cmc in cmp mov inc add fcomps jmp lret (bad) cmpsb ss ret adc xor insl dec mov ja and insb inc mov inc (bad) in mov (bad) (bad) psubd push nop scas jo and add out fs cmpl fist and insb add mov ds cmc int3 movsl dec or push or xchg xchg push (bad) and lret push pop push stos xor sahf cs xlat push adc mov jg jecxz cltd out insl sub jge cmp subl addl test (bad) push jo stc andl sub and xchg outsb xor rclb xor jb mov jne add into mov pop sub out sti xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa pop incl hlt cs lret gs adc add rol mov sbb scas pop push in pop add cs in ss call sub xchg je shll xorb cli or inc xchg ficompl adc jmp call push xchg out adc insb sub (bad) repz shlb mov sarl lea cmpsl or popf xor movsb xchg sub lea subb xchg pop (bad) pop mov inc push aad add pop gs mov movsl popa sbb (bad) rorb adcb sub ret negb rcrb mov sbb mov pop cmpsb inc cmc movsl hlt out pop sub sbb pop mov and xchg mov (bad) xchg test rorl xchg mov inc xor movsb dec xor rol shll es data16 mov js in in lea and movsl movsl imul call imul enter lods aam fistp fwait insl dec cmp add insl and adc or add sti pop push cmp fstpt sarl test push ss enter pop pusha cmp mov (bad) pop mov std rcll lock andb imul cmpsl fldpi xor jnp dec cmpsb call add iret mov jl enter jl leave mov and xchg mov xor add jecxz pusha cli pop pushf xor (bad) rol ret sbb mov cmp xchg dec mov mov xchg inc ljmp repz ss dec bound add das add mov out xor lock (bad) xchg dec jae dec test pop dec or leave add test add enter jo push (bad) call shlb sub fstpt stos in xor mov dec iret mov nop pusha cmp jnp icebp fnstenv inc cmp mov into (bad) movsb test notl lock in mov pop je adc adc popa adc fs push mov mov sub (bad) jbe cmp xchg pusha pop lret pop jo lock jl pop ret scas fldt in test jge mov pop add ds jle xchg push repz stos adcb xchg (bad) enter and ds dec sub pop mov lret sub or pop fwait adc dec fnstsw push mov sbb or sbb xbegin (bad) mov mov push or sahf cmp pusha mul xchg icebp push in add gs xchg or cmpsl addr16 jmp sahf and push inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call repnz xor imul cmpl pushf or rorb mov mov addr16 popf adc mov pop repnz pop xchg lock data16 cmpsb pop push addr16 push fmulp or aad sti bound inc cmc or cmp ds in daa aas loopne or mov lret cmpsb fildl rcll test pop shll sub jnp lret mov pop mov jb push add mov dec mov clc push repz jnp arpl subb xchg push not cmp andb and lea pop jae and (bad) push (bad) mov dec bsr xchg xlat inc movsb mov push scas clc add jne push jo lahf ja loop cmc push mov rorb int ret (bad) lock mov push sub adc cmpsb mov divl aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl fildll sbb push mov frstor mov dec sub sub xorb sub pushf test cmpsb cwtl jp inc pop fdivrs or mov dec (bad) fmul jbe xchg xor aas xchg push leave lods (bad) out and inc sub inc arpl in out out and clc adc (bad) into dec out pushf lret mov mov into sbb or jecxz cmp hlt xor push loopne mov in jnp,pn pop sbb sbb and sub iret rcr addr16 mov inc shr add int cmp rorb mov popa inc (bad) mov push test inc add xchg fdivrs and int3 cld jns mov jmp movsl adc jns aad leave aam popf jle sub add ss loopne dec push cmpsb xor and std mov pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov sar xor test add mov pop jge xchg xor rcll rorl (bad) call inc cmp hlt aas cmpsb mov pop push xchg sti scas dec pushf mov push jb (bad) ja cmp mov lds aas dec jmp cld mov jl div jle in adc int mov adcl sbb dec (bad) push es outsb cmp mov inc or dec int rcll arpl lock cmovp outsl (bad) xchg movsl (bad) push cmp xchg mov lods xlat aas adc xor xor sub rcl xor orb jne test fsubs xor mov cmp pop loop loopne lcall fcoms es push in hlt (bad) nop sbb jg ja jae clc mov sarb mov sbb stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov sbb pop in fdivrs pop cli test aas jmp int3 outsl jp subl cli lcall xchg or (bad) ja fiadd adc das pop mov sub xchg notb pop data16 mov and inc pop adc or inc jle dec fdivp roll sub in cmc push pop inc outsb and inc pop and addr16 mov negl shlb mov addr16 arpl adc imul dec ja push fbstp sbb pop fbstp rcrl stc daa xlat adc fildl addb ss inc sarb js xchg and aaa dec cmp mov into pusha sub push jl jb pop aaa pop mov (bad) loop bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc add add pop inc cmp jl sahf shrb int cmc cs divb jno push sub fnop loope (bad) int (bad) push shl sahf fsubrs lods (bad) xchg ja sbb pop enter out xor sahf xchg mov pop ret inc hlt mov (bad) repz lcall inc addr16 mov pusha jno jl add aam int3 push cs jbe cmp test sub scas aaa pop pop push push lret xor stos test and (bad) pop ret sub int3 mov push ss or movsb jo or (bad) or popf cmc out add std sbb and add sbb xlat xor mov test loopne inc imul mov insb cmp inc jp or mov mov sub or xchg xchg inc xchg fisttpll lock add enter jo push (bad) call shlb sub fstpt sbb mov movsb jbe ljmp mov xchg mov inc push cmovl out insb fs enter sarb pop (bad) rcrb push mov es mov cmp fistl in add and cmp (bad) ljmp ss ljmp mov sti cs mov call xchg mov aam hlt cmp xor mov addr16 aam icebp (bad) xchg pop jne cld adc sub lret mov lcall inc addl clc out ja ds ds jge test and cmpsb mov dec insb sti xchg aaa mov push mov push in mov mov stos es pop push fs cmp scas stos xor xor inc es repz loop jp ret scas mov fcomp aam push push cld cld (bad) xchg mov faddl sti fs outsb mov push xor shrl sub jb jns and xor xchg cmp jle or mov jb decb aas stos push inc and jae mov in sarl adc scas mov add aaa jl clc add push add pusha push cltd cltd mov cmc mov jg mov cli outsb mov or add scas sub ljmp or jecxz jb aas lcall sub pop int3 mov adc sbb stos xor mov jl scas or xchg and xchg sub mov imul test mov subl cmp inc xchg es dec pop xor popf out stos push insb add test sub lea cmpsl push test xor cld lods test (bad) decl or fnstcw sbb or (bad) jp mov mov push (bad) aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov in insl sbb xor mov aam or mov jmp xorl pop or popa gs in loop aas push push push jmp fidivr push sub je add mov movl jae xchg or mov ja cli pop inc push mov sbb mov orl test jnp adc ljmp add lea in (bad) in mov insb push loope sti xchg repz pop lods push push xor addr16 rorb dec out pop inc sbb hlt xchg cwtl insb sahf jbe cmp imul int imul pop fdivrp xchg mov lret js lods push inc dec repz dec stc (bad) ljmp fstl mov aas lods imul sub jg sbb jns js cmp add dec mov pop mov repnz ret dec dec push into cs lret mov mov hlt hlt icebp icebp stc hlt xchg cli sub popf xor push rolb popa dec mov in sbb iret jmp jl lahf std sbb (bad) jno jecxz mov and out mov insl adc add insl addr16 call inc mov mov fisubrl into mov gs (bad) xor adc outsb inc and cld fs mov adc movsb gs sbb mov and jne add mov mov ljmp push xlat ljmp add mov ret mov insb mov adc pop imull movsl cmp (bad) aam xchg daa mov cmp (bad) jo loopne adc cmp xor mov adc sub mov adc pusha out shrb lea cltd jg inc jmp pop ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound inc lea std mov nop ja outsb push jns sub jmp mov push xor fidiv sub mov pop pop push sub fs jno cmp xchg cld sub push xor jne pop and xchg mov fstl add mov mov sbb std cld sub xchg add sbb mov lret pop and faddl lods sbb lods (bad) cmc push jnp jo in out jno inc hlt jae push popa ficoml ss xchg (bad) fidivrl std pop sahf push jno les cld sbb xchg sbb outsl xor xchg inc push mov jo in movsb xchg fdivrp pop pop nop jle and sahf sbb loop cld js,pt cmp popa mov add mul push xor dec cmp arpl sbb adc movsb inc sbb std push push in (bad) (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock push movsl xchg inc jns sbb je or dec jle push lret sahf (bad) lret jg mov inc cs lahf dec test cmp lods cltd cld sbb add sbb pushw out lods adc sub jnp jecxz mov rcll cwtl fwait aad pusha dec cmpsb mov stc mov outsb test dec aam cmpsb aaa adcb stc mov pop jle push mov in ror imul (bad) xor mov fisubrl pop or bound mov push adc jecxz adc dec in xchg lcall in in out xor fwait loop inc les outsb jmp dec fistl shlb loopne jl lahf or or sub xor (bad) sbb mov into or push sbb rorl jns and add push into into test mov (bad) pop pop xchg mov aaa imul out in popa cmpsb mov aam bound sub and fnstcw push es (bad) pop cli (bad) call xorl or inc xchg les push subb mov mov shll test cmpsl divb fsubrl ljmp mov addr16 sbb mov push jmp sti cmc mov jnp cs lcall (bad) or or mov inc inc lods ficom imul dec cli inc pop lods aad dec aam je xchg jno subl sub xchg push xlat jecxz add stos clc lods call adc movsl jge cltd mov and add shll or jp sbb mov xchg pop aas js clc xchg inc repnz xor add icebp pop ret add (bad) push clc fstl adc lods push jno les movsl movsl test dec cmp arpl call adc imul movsl pop mov clc sub scas test xchg cmpsb jge pop xor bound push xchg jno pop sbb add je test pop xchg scas sysret xor mov cmp sbb cld cwtl stc daa in jle inc inc repz cmp xor xchg pop push xchg aam ret pop imul pusha scas dec hlt out mov mov stos mov lods jl mov test dec add outsb push push xchg repnz add (bad) mov xor movsb loopne fmull pop je (bad) fsubr pop in push enter mov movsb sbb lcall mov sbb ds add insb xor push jle ds ja adc xor popa adc inc jne lods and stc mov jns and xor ret ret leave leave ds jne divb cmp and sti push jb inc jmp jg pop pop dec adc popa inc bound out mov insb movsb and jae repnz pusha jge jne sbb cmp (bad) fcoml stc ljmp fisttpll mov xchg ss ficomp icebp inc (bad) pop mov push dec dec (bad) fnstsw fwait sub mov cmp sbb js jbe loopne adc lret mov (bad) jb cmp inc repz mov mov mov arpl xor iret sbb addr16 sahf cmp fmull pop push or pop and insb jge xchg add vaddsubpd mov (bad) (bad) (bad) or (bad) pusha and and stos lahf mov out aad in mov xor mulb mov and (bad) nop push push sbb (bad) rcll push and lods lods or jp sub mov out sbb xchg or dec ret mov dec mov xchg inc popf cmp scas clc mov pop es pop aam mov add adc cli or clc dec cmp mov fadd (bad) cmp inc loope pop je stos sbb enter std shl nop sbb fnstsw or adc sti cmp sti xor sbb (bad) mov pop (bad) mov jae pop xor inc ds fmuls push pop cmpsl mov test aaa sub adc jno inc sbbl pop and mov sub cmp js shlb inc cmpsl pop cmp shr sbb movsl mov popf xchg (bad) and pop sti popf mov jns sarl clc mov out sbb mov xchg and mov pushf push movsb lds or xlat push cmp or insl add fdivrl stos cmp adc sub insl xchg (bad) out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec mov add fidivl push sbb in mov or ljmp mov (bad) or lahf scas xor call call shlb jp fnstenv adc out cmp pop mov jl or sub lock loopne in mov setne cmpsb xor lds rcrl outsb stos xchg push ljmp mov insl cltd inc cmpsb cs shrb loop sbb mov repz out add jle add aad xor dec cmp xchg push sub jae dec mov sbb mov popf mov add iret xchg adc cs push aaa fstpl imul aam mov push xchg stos cli daa adc or cmp adc sub aas xchg sarl call pop icebp cli popf sbb in data16 mov js in in lea and movsl movsl and in in or mov add mov rcll inc out ret sbb lret dec clc ror jecxz mov adc cmp inc (bad) rcrb jg mov or rorb frstor sahf add mov outsb cmpsb out mov fimull mov cmp test or in jp push lods or fldt mov cmp push inc repnz push xor hlt push jl cmp imul aas mov and and fsubrs insb mov inc aaa shll add inc jno (bad) gs pop call or sti cmp mov and adc jnp push cmpsb fwait enter call iret sub popf das out mov movsl lahf loop mov jg add mov sbb adc aas fs lahf sti or cmp ret mov push and jmp ja jle jge enter jo push push (bad) call shlb sub fstpt sbb mov or jno mov or mov fcmovu mov mov or mov mov lock les shrb stos or ret sbb fistp or fimul mov add fbstp lods pusha ret repnz cmpsb (bad) cmp arpl mov lret rcl cltd leave mov test add (bad) mov xchg push mov in (bad) clc inc repz rcrb push mov xchg (bad) xor dec repz mov push ljmp pop fdivrl fisttpll mov adc lods mov lcall dec cwtl js cmp (bad) std push test fadds add and jo cmp nop lea pop loope add sub inc stos mov int3 mov jle out lods adc push icebp das (bad) out int3 loopne inc in aam xchg mov jnp in movsl movsl test dec cmp arpl call adc imul insb and add lds cmp push add adc dec iret fwait cmp jae pop (bad) jnp adc cli (bad) mov add cmp adc and int3 call in xchg sub or push and fdivrl (bad) cld fidivl (bad) pop clc pslld cmp je pusha xchg lret mov pop insb rcrb mov aaa out in fstpt and ret das or (bad) in scas mov fimul outsb pop and js push negl sbb dec jae stos mulb (bad) xor add scas inc sub sbb lahf sbbl ret xor enter lods add push mov dec fiaddl lods xchg xchg jbe adc out adc pop inc pop dec xchg pop xchg lods repz dec cld out testb stos jo addr16 lret inc push mov inc inc adc push cmp call adc daa daa pushf pushf cmp mov rcrl (bad) std mov inc (bad) dec imul pushf mov js xchg jmp xchg jbe push cmp pop inc mov lock pop mov loope in dec cli adc adc pusha sub mov daa pop mov mov push std into jne je loop enter testb xor movl xchg adc dec xchg dec jmp sbb pop lret daa inc pop xor sbb ja fldenv data16 xchg mov sbbb leave mov adc jns inc fbld daa sbbl pop in mov push jg xchg or (bad) mov lock icebp pop push xor mov jbe mov inc lds sarb aad xor mov add popf movsb les adc in jbe fcmovnb mov loope jmp jl enter adc (bad) push push push push and lods lods or jp sub mov out sbb inc fwait push cmpsb movsb cmc andl mov test or mov dec sub das dec std aam or daa pop mov add (bad) in dec push fdivs xchg outsl pop mov mov cmpsb loopne push aam mov pop popf lret pop lcall mov mov (bad) pushf mov (bad) movsl rorl or add (bad) mov sub sub cmpsb jge and cwtl int3 mov mov add cmpsl cs mov pop mov inc es mov pop sub sbb or mov shr lcall addr16 push fcos add pusha outsl jl ds mov (bad) jl cmpsl or inc jo fwait in mov and movsb xchg pusha popf sbb enter lahf test push cmpsl call and fidivl pop gs lahf outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or rol and sbb xor and push and sub fs cli mov pop cmpsl xchg push xchg inc mov inc sbb and pop insb popw mov pusha xchg push push cwtl insl cld nop ja dec jne pop aam xchg mov pop fwait cmpsl and cmp xor fs sbb inc cmp pop pop into int lods pop daa inc cmp or aad push inc stos in cmpsl inc jo inc leave sbbb mov popa jge (bad) push jne sahf clc (bad) xor jmp adc dec adc call inc xlat jmp add sub mov inc stc aas xor loope and aas push inc jl test jnp push ja add (bad) es jle sarb lcall imul and or repz mov lods pop pop mov mov xchg xchg (bad) (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock sbb fiadd sub scas sbb out loope pop imul sbb sti mov jae fist xor and cmp adc gs push imul mov in test and or jp (bad) dec fildl inc popa xor dec lods sub jg push mov lahf loope and aas xchg nop pop add lret fs js aas ret cltd lret xchg adc pop jo dec pop cmp mov int3 fmull outsl mov sahf mov adc push shl xchg daa lret sub push out pop mov ss outsl push pop dec popf hlt push pop pushf adc test rcl (bad) jbe rclb pop mov fucomp dec in outsl jp jge sub in sub out es dec or add gs lcall sub call jo push push (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor cmp sbb negb pop aaa dec fisttpll xchg fdivp jle hlt outsb lret dec movd mov sbb in and insl mov vshufps lea or loope in mov (bad) psubsb xchg push popf (bad) and jnp lret int shrb je jmp mov and sbb cmp sub or inc mov and gs ds or push add aad movsl ret ljmp pop cmp add incb pop loope lds imul pop mov mov mov outsb xchg fisttp mov pop loope jecxz sbb push iret dec mov jg pushf enter aam jnp fdivs js int3 xchg sub jns lret push push (bad) cli push push mov lock xlat sahf push jmp leave enter lea mov pop mov faddl sti fs outsb mov lret divl aad rorb lcall lock aam mov ja sbb push mov jb sbb aam ficompl jbe icebp jne add xchg mov pop aad cmp jp test cld sbb icebp cmp jecxz je pop pop popa cwtl add je js rcl mov xchg aaa or fnop push and fistl or leave cltd loop insl cmpsl sti out push sbb add arpl in es sub clc cmc enter in mov push mov ret pushf sub jp push pop fsin (bad) mov adc loope lods les mov xor orps mov jne fstl mov xor (bad) shlb pusha enter inc std and out (bad) repz int3 scas sub aam xchg mov fsubs inc adc jne aam (bad) cmp fdivs test (bad) imul daa daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb lds sahf push and sub std iret sbb sub out xchg mov (bad) pop inc cmp or inc fwait stos xor push mov mov xchg mov gs mov bound sbb imul dec aaa iret cmp sti push adc mov and and lea sub adc (bad) pop in arpl xor imul inc pop je data16 mov sub jg lock test or lcall mov mov push jl jmp (bad) mov ret hlt dec inc imul jno into cwtl mov mov cltd jmp movsl mov insb (bad) mov fs push dec pop nop ds imul adc jb lahf push xor pop scas add jg mov (bad) hlt adc dec push into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec je je and dec lret add (bad) adc rcrl fsts flds stos sbb sub mov adc mov enter add xor rcll repz cmp xlat dec and xchg roll cmpsb xchg scas push stos insl mov add ja push push cmp fdivrp sbb ret div adc shll xor scas cmp mov fdivrp jb pop push enter decl adc rorb lret nop push movsl (bad) movsl inc xchg sub in cmp add xchg xor (bad) sbb dec jns pop cmp cmpsl pop and lds jecxz xchg jb fisttpll movsb ss test ss push dec ja outsl (bad) insl dec mov cmc and xor out cmp ret cmp fcomps and add cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test test lret cltd mov mov add in cmp cmc popa push enter rorb and push xor test cmp jl lahf or (bad) adc jecxz pop sub jno sub push sbb frstor (bad) fs lods adc stos mov mov push pop sbb pusha das call call (bad) cli lcall out sar iret xor (bad) mov xor mov mov insl cmc jbe sti jae mov jmp jbe pushl aas dec imul (bad) psubusb pop cltd pop pop cmp fsubr enter rorl cmpsb adc cmp hlt jae mov jge add cwtl push insb test clc pop (bad) mov std addl sub aam dec jb fs fwait sub push cwtl outsl xchg push (bad) pop add cmpsb push mov xchg fcmovu mov inc addl lock bound or test jl lds sub adc fmull clc cmp fisubl cli inc and movsb jbe mov sbb mov inc push fwait push adc enter ds or xchg push movsl pop stos adc xor xchg loopne pop (bad) push mov stc outsl fisttpll sub mov jo fs mov aad pop repz xchg jae (bad) test sub sbb jecxz test dec dec xor fldcw scas or xlat out sub das test stos inc cmp clc jle sub dec inc add ret test mov flds (bad) aaa inc or sbb mov fsts icebp in add fstp inc hlt mov jo jne adc enter xchg sahf les mov pop pop xchg mov aaa imul out in in in aam push push cld cld xor popf inc adc out fdivrl xor jmp mov data16 xor jl int3 jge test xor mov pop dec lcall or fwait cli daa dec mov jbe nop xor cmpl les pop jge cmp and daa mov add mov mov mov call mov adc push pop mov push and insl (bad) out jo sahf mov imul sub outsl pop push cmp (bad) lods mov sbb stos pusha pop bound mov dec loopne out sbb pop jns lock pop pop clc into jp imulb js jns mov dec aad adc cltd ret cmp fs cmp mov lret adc add push mov xchg dec cld xor cmp cmp arpl call adc imul insb push push adc (bad) aad xlat xlat adc test hlt fldcw fdivrl adc push jne pop pop sbb decb adc pushf mov pop sub jnp cmp fdivrl lds in xchg xor cld push pop jle out (bad) mov (bad) das sbb ret add decl and test push fbstp rol (bad) xor pop sti (bad) fmull fsubrp aaa loop gs sbb mov (bad) mov lods jmp dec sbb xchg fs push aad imul test or mov mov or insb adc ja cmp and inc rolb add js in (bad) insb rcl shr insl inc icebp push inc or out out ror daa sub bound call push scas and aas sbb (bad) mov notb mov stos and mov stos inc dec stos subl mov div je cmp add setg loope cmc cmc mov scas jg fwait and push mov jl jno or mov pop test mov push jnp mov sbbb sti out jg jo test test or in fild mov ljmp (bad) stc adc and and js cmp (bad) call cmp push mov lret in and jl (bad) jae lcall insl pop add sub cltd and sarb arpl inc pop std xor mov cmc push add orl inc js push (bad) fwait cmp mov xchg lret add or pop mov cmp and (bad) push stc (bad) pop test dec cmp test cmp cmp mov push mov or jg hlt dec ljmp arpl inc repnz or sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 movsb cli (bad) cld es jl fpatan shrb std or fwait push inc sub pop loope sahf loopne jle stos xchg xchg mov sbb mov add enter inc lahf ficoml test call lds mov push push jb das push jge imul ss js lret or sbb or push sti lods icebp jmp gs inc out adc cmpl jge data16 mov sub outsl lcall mov out ret or flds dec jp out decl cwtl into sbb mov in jne mov push jne xchg (bad) cmp jb or push pop imul adc cmc test xchg inc add lret rcr movhps pop pushf adc push and cmp cmp lods in xor mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or js cwtl popf inc sbb daa outsb jno push mov jle lret mov in mov insb lret cmpsb inc and pop out iret dec add jge jge mov jp or pop xor push stos cmc sbb fwait enter cmp bound aaa nop pop and dec push fldenv push inc out push fcmovnu cmp dec mov adc popa test adc pop fwait sarl insb pop lods xchg lock sub jb das xor and fwait xor pushf outsb pop cs mov js daa inc cmp pcmpgtw adc xor mov imul rol pop fiadd test xlat (bad) aam mov inc mov mov or mov jns xchg mov cmp mov adc jl and movsl and in in or mov add add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov dec push pop or sbb aaa push cmpsl cmp cmc push ja jo ret (bad) test int3 mov fs loopne adc int sbb ret lea jp dec (bad) jp jo popf lret andb mov das cmp jb sbb sbb cmpl sub shrb cwtl test scas fadds mov repnz bound ljmp jmp scas pop push jno mov les xor jb fistp lea inc test out lods cmp xchg (bad) pop mov popl mov sbb mov mov or xor mov cmp add add shrb (bad) lea jae call push sub mov xchg cmp movsb flds and jno dec loope leave mov jg sbb mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test fdivrl scas xchg add pop cmpsb js (bad) dec push jge push rcrb cmp sub mov jbe xorl mov inc and ret loop push pop mov xorps leave cmp pop cltd or pminsw mov inc cli lods dec sub cmp adc addl push pop and sbb in icebp (bad) adc addr16 sub es fcoml std pop pop lods arpl pop xor dec scas dec add cmp add shrb inc push popf mov mov jl pop xor sbb dec xchg adc pop jle xchg fadd das mov cli cmp testl or mov jno mov push mov pop inc mov sbb mov and inc iret push and (bad) mov xchg pop into inc (bad) add subl imul push push adc (bad) ja xor mov xor ret leave leave ds mov mov ljmp xchg cld rcr jae jecxz mov add mov movsl xor push or dec lcall inc mov mov add jge xor hlt lahf mov fcom sbb push adc adc dec xorl jp xchg icebp pop rol int adc sbb lods loop dec mov or aaa cmpsb lods loop and and or sub jnp roll add pop pop nop ret popa push sub cmp pop clc addr16 add rcll jl xchg inc movsl sbb adc dec stos cmp xchg jno lahf xor mov leave imul stos call inc inc and into mov and mov dec fcmovu pushf fnstsw xor stos dec xor jo mov push dec fcmovnu std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lcall out mov push jg xor lds cmp pop cmpsb addr16 push push cmc mov cmp pushf xorl jbe jno dec xchg jb (bad) je js lret enter arpl adc cwtl xchg movl push xchg pop hlt push fidivr push or cmp cmp aad (bad) ljmp mov push pop mov js in push mov pop lock inc push add (bad) neg and cmpsb and dec pop sub cmpsl (bad) int3 dec mov stc sub in subl jle fidivl xor add mov jmp jo or pop jecxz hlt lcall loopne pop imul arpl ficompl inc jnp xorb enter movsb test imull push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli and mov lds (bad) clc inc inc inc rclb xorl add add das push mov pop fstl cmp movsb divl xchg mov xor lcall add mov jg (bad) insl fsubrl mov hlt mov jmp pop sar loop fldcw mov sar adc push repz in imul and mov bound inc lret (bad) mov inc add pushf sarb add or sub pop inc dec lods es or shrl (bad) lret dec movsl adc mov outsb arpl mov icebp cmp in or ret outsb pop cs sub sbb sub out and arpl dec loopne je xchg push xchg fisubrl out adc jno mov or add rol shll es data16 mov js in in (bad) in xchg aas mov loopne sbb shl out roll mov dec push push pushf sub outsl stc lds push jge dec xchg es dec push mov fwait mov push inc jle push (bad) mov cmp pop xchg lds lahf mov pop jp pop test daa dec adc es sar xchg push dec stos divb push xchg sti mov adc add outsb xchg jg test cltd and test fsubs and ds jle outsl nop fidivl or (bad) mov std jle adc mov jl pop mov mov push fdivs fstpt jb cmp xchg mov lds ret push xchg sahf cld jmp clc push stc cmc mov aad adc int3 ss xchg repz mov fadd push bound push push pusha pusha lock add enter jo push (bad) call shlb aad jae and shrb bound repnz inc push mov dec subl out lret sbb repnz ja idiv sub loop aad jg jo lds jno sub mov mov lds bound aad imul sbb insb or dec push ret loope cmc dec cmp mov jae std cmpsl inc xchg leave aaa das or sahf cmp mov ret ror cmpsl xor nop outsl out sbb sub or jmp push lahf fsubrl xchg sbb scas test sbb inc mov clc dec (bad) loopne lret sahf sbb test imul fwait dec data16 xchg pop inc mov and es sarb dec in jmp jl lock or inc cmp pop sbb in pusha ret (bad) sbb add scas pop mov ret negl arpl test adc jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl jae mov sbb mov fnstcw push in faddl push scas dec sub movsl mov in mov dec fdivrl cmp add sti adc enter fidivl jg mov testb lret lcall jnp push std xchg add lods jns dec popa dec push mov out sti es aas and mov xchg jp push sub clc fwait addr16 insl in push cltd mov cmpsl sub jl into mov movsl pop ds cmp stos add pop bound inc adc (bad) fistpll (bad) mov sbbl (bad) aaa xchg (bad) je movsl mov mov es popf out lods call orb push mov add repz and aam adc pop sub (bad) icebp mov jns xchg int3 jns mov fiadd add divl aad xlat adc (bad) gs daa pushf pushf cmp mov fstl inc jns fimul icebp mov out mov jge jmp xor enter js loop enter xor fs add push jmp sub push addr16 cli imul rcrl mov hlt mov or lret es add pop loope movsb clc jno pop cmpsl xlat inc sub dec sbb loope je cmp xchg jmp loop js nop (bad) jo sbb or cmpsl cmp outsb sub push sub xchg mov dec add sti repz addr16 add xor enter je mov sbbb (bad) jns js out xor mov out push pop add xor pop repnz ja (bad) fdiv jbe adc dec mov iret scas sarl jne lds sub addr16 mov mov xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov xor mov stos or dec pop dec push xor inc repnz outsl or movsb cmp out xor add dec mov adc mov xor rcll (bad) sub and add adc jns push cltd movsb dec outsb or insb add sub jo push aam cmpsb mov xchg sub sbb loopne xchg sbb cld lock xor rcrb dec jle fsubr insl push cs dec or icebp (bad) cltd gs jecxz sub idiv mov les or mov pop ss mov mov push fsubs add js clc rcl add cmp sub add pop icebp jp ret inc or ds cmp push pushf inc or je movsl hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov jecxz jp push pop xchg xchg xchg aad xchg sub sub rorb lock mov cmc mov lret ljmp mov add pop test fiadd dec dec push jno mov jp adc jg and aam in (bad) outsl scas enter outsl push fnstsw test das mov sbb call (bad) sarb es dec adc pop dec add jns ja dec inc (bad) jno int3 cs fldt stos push dec in hlt pushf xchg rcll sbb jg sti scas sbb icebp push bound mov mov mov or mov adc mov cltd jne outsl jb popf xor and shlb sbb fneni(8087 mov das das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc andl adc out lock mov add jp inc pop mov inc sbb jg mov fildl stos inc je icebp pop cmc (bad) or cmp sub pop test lock and mov mov bound sbb add inc je sbb in inc sahf js add jmp adcl fdivrs push add add jl cmp cmp ret xor sub sub mov mov mov inc or cmc cmc inc or jno out movb inc ljmp push in xor push iret in in rcll stc rcll adc cmp sarl xchg outsb vmovntdq push lret stc jnp les or inc push je push test bound mov mov xor or out add enter jo push push (bad) call shlb sub fstpt sbb sarl push test or out dec jo cmp mov out sarb cmp push add aaa inc testb jmp jp mov std push popf and test psubsw xchg xchg je push xchg (bad) and jns cld adc in imul inc loopne jmp fcomi int in mov jle mov dec lret push jne (bad) sarb out cs xchg addl cs aas fcomps ret test xlat push dec (bad) repnz cwtl mov mov (bad) jo and test aad jmp das or jae inc scas mov mov or or (bad) add cmpsb cmc aas outsl test xor icebp sub xor push daa adc fs inc dec mov pop xorl movsb (bad) pop inc (bad) xor lret push xchg lahf jg ss in in aam push push cld cld (bad) xchg mov faddl sti fs and mov jl jns jnp pop mov pop add xor sub and mov push test inc add sbb pop in push or cmp ja popf int3 idivb lock cltd inc add mov mov outsb out je (bad) xor rorl mov out loop mov out mov dec mov (bad) repnz in mov push xchg and jbe insl je add dec mov fldcw stos sbb jae adc jne scas pop fdiv mov mov movsb lret mov lock jge inc mov sahf jle pusha les rorb mov and lret mov cmp stc daa add mov dec sahf add xor stc pop lea or xchg pushf repnz movsl (bad) push xchg lret (bad) pop js pop pop (bad) cmpsl push fstpt mov or adc (bad) aad xlat adc (bad) gs daa pushf pushf cmp mov roll cwtl hlt dec mov and push stc daa ds popf cmp cmpsb cmpsl sbb mov loop (bad) test or loopne std in dec sub scas repz addr16 aas cmc xor push sbb test dec dec and int xlat ret jo pop mov jno push test mov mov ror mov iret or and push pop cmp pop or fcmovbe push push (bad) (bad) cmpsl dec cwtl dec pop cs dec jns push pusha aad sbb adc fidiv adc ss ja loop or fisubl popf cmp pushf inc pop jo cmp ds cmp xchg aam je sub fidiv movsl divb mov cltd jp mov imul pushf mov shl mov stos inc lcall adc inc cmp push xchg jno repz lahf lahf xor mov cmc mov pop mov repnz ret dec dec push into stos es xor inc jno call inc das aas iret sub ret mov xchg orl (bad) push in lock (bad) cmp subl jns and (bad) not push adc xor cmpsb inc pop jbe popa aad push js imul cld push adc aam pop mov shld lods adc fisttpll (bad) fistp incl ja sbb dec repnz cmc add fldenv pop mov cmc sbb pushl add pop mov popa mov ret dec push dec sbb jo add jbe jns arpl pop mov add xor sub and mov push test inc push out ds push or cmp jbe popf int3 negb mov add mov and or push xorb shrb cmp scas mov jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov out adc bnd mov pop push test in scas xchg xlat cmp add add push adc sar cmpsl arpl sahf push iret sbb fbstp cli inc cltd add push call push jl test mov (bad) ja adc sti pusha lock jnp mov repnz stc pusha xchg cmp cmp (bad) pop add xchg daa pop add scas cmpsb test loope (bad) and fidivl in ret cld sub in mov lret add mov imul or stos mov xchg mov push clc out dec (bad) pushf cmp and (bad) in mov rcl mov and jl roll imul push sbb lods loop sub sub mov cmp cwtl inc aad popf push psrad bound mov shrb dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov sbb ret popf jno pop pop aam sarl cmpsb sti sub movsl push test aas (bad) sbb lret sub loopne sbb aas test or cmp shrl cmc js test insl push (bad) and mov mov xchg dec mov cs mov pop mov jecxz in in fisttpl iret or mov sbb inc add scas and loope cmpsb push xchg cmpsb out jecxz jb lahf xor jg fisttpll mov das adcb xchg dec divl enter pop js fwait inc inc xchg mov push push cmpsl lods sbb das inc mov (bad) jecxz and xlat push ss into mov (bad) push push (bad) fnsave push xor or pop adc xchg dec cs mov xchg add scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov les pop imul mov cmp mov adc push jle sbb mov and pop sbb fisubrl mov mov ret mov pusha es pop adc jnp addr16 (bad) scas shlb gs mov adc cld dec jmp cltd ljmp arpl (bad) dec add mov jns pop cmc inc sbb clc xchg pusha mov jae mov jns lods cld cmp inc pop sbb (bad) dec inc jb mov xchg add xor xorl or cltd fs sbb push push or lcall int movsb jae mov fisttpl sub fild loope,pt sub mov jne test loopne push push (bad) imul jl xor das jae adc arpl dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc imul out popa iret insl sub mov mov jl clc and pop pusha ret shl cmp dec ds (bad) or sbb nop xor push loopne ss xor ss push inc mov adc mov mov fwait cld jns rorl lcall imul fadds imul arpl (bad) icebp data16 (bad) mov je and mov cli jg sub adc xor dec adc cmc mov mov jecxz pop mov stc into outsl add ret cmp mov test mov gs xchg xor add cmpsl addr16 adc xchg (bad) int push push inc push rcll adc push pop dec dec mov mov jmp mov push insl aad mov (bad) xchg lods pop pop xlat sub inc (bad) ja xor mov xor ret leave leave ds jne divb cmp or fnop or sbb or dec xor arpl outsl mov aas mov pmaddwd jae leave cmp pop push fs addr16 xor lret mov jg or or push xchg mov xchg (bad) sti aas sahf arpl adc repz adc loop test aas pop add xor or ret aam sub incl jns repnz sub push inc inc (bad) adc (bad) dec push pop adc cmp jno push jb js mov pop je les jmp add jecxz popf outsl xchg pop hlt jnp mov fsts sahf add xor dec push sub adc xor push insl mov dec mov xor ja lods into (bad) pop jns mov push int3 sarl adc adc dec mov push push sbb (bad) rcll push and lods lods or jp sub mov dec out and mov movsb movsb icebp sub fdivs or lret xchg pop (bad) or bound out rcrb pop sti cmp or push dec loop scas jp nop push sub shr test test outsl sbb inc sbbb call iret ret fdivrl sub mov dec dec adc or push mov mov and sbb mov ror (bad) jge cmp push fdivrs lods and push rcr in mov mov mov nop mov lods xor add and push sti idiv adc test or sti xchg test sbb adc push fidivr rcr das cmp add adc movsb out xor inc shrl ss push lea test cmp mov fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jns cmc loop pop sub loopne pop lods bswap out push cli cwtl mov and adc sbb mov in jp or leave or in insl ficom pop cmp and jl arpl divl xchg cmp loop or gs stos lret cmp ret mov ja and loope sarl adcl stos mov xor cwtl sub mov cmp dec and dec repnz sbb sbb or daa cltd mov push jne xchg mov cmp fbld mov and xor mov push pop insl (bad) icebp jmp add imul push xchg adc add dec sbb xor adc jp ficompl in inc mov aas mov cltd adc sbb enter shll es data16 mov js in in lea and add movsl movsl and test aas (bad) outsl push int3 gs mov les sbb mov pop or test add sub add (bad) pop xor dec sbb loop enter cmp jae scas rolb xor inc jecxz dec in daa inc ret sub jmp mov cmp sub iret add arpl mov mov jle sub jnp mov pop jne push ret aaa cmp mov ds in dec mov mov lods sbb paddsw inc lcall xchg sbb lret outsl aam cwtl add (bad) fisttpll js sub cmp add inc sbb out cltd push inc push std insb jle dec add popf pusha and (bad) sbb dec lret lahf lock add enter jo push (bad) call shlb sub fstpt sbb mov xor outsl insl xchg dec (bad) mov popf inc repz mov test outsl add popa rclb inc xchg jnp add pop (bad) mov pop stos pop xchg bound mov mov push jmp outsl inc (bad) cmp jbe push jo inc push push incb jne pop xchg sarb jl adc push pop mov arpl add lds adc push and xchg pop jl lret pop sub call loop int mov insl or pop mov int3 jle mov pop xor pop jns inc out stos xchg mov lret dec jbe mov imulb xor lcall imulb jmp mov out inc js cmp sub insb rcrb rcr outsl sbb movsl mov rclb stc sarb mov (bad) into scas lods push subl adc (bad) xchg popa mov jl sahf jnp in movsl movsl test dec cmp arpl call adc imul (bad) pop add and pop cmp inc pop sbb push sbb cmp sub inc or cmpl sub cwtl pop popa scas push inc scas xchg inc inc movsb xchg lods fimull test stos int xor add enter (bad) shrb cmp dec test inc xchg sbb (bad) push pop lock rorb je aaa sbb loope (bad) hlt lds std insl mov sbb mov out and scas stos popa or pop jle add sub adc mov push and cmp sub lret push cmp push and leave sahf pop mov mov daa (bad) mov mov sub inc or or jno bound movsl in dec jecxz pop jmp fidivl mov int btc push mov scas lret iret iret cmp clc loope in cmp aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov xchg das xchg jg pop (bad) mov xchg jo fimul neg mov ja testb sbb movsl cmc dec iret pop fs dec mov dec movsb jmp inc dec mov outsb cmp and (bad) pop clc pop adc jp fwait cmp pusha ljmp or xor imulb sub jnp pop push pop aas add sub lret jle sbb inc xor pushf in dec xorb jp (bad) xor cmp push push fisubl sbb into in mov shrl cltd pop mov ret xchg adc shlb nop pop xlat jp or push xchg add lock cltd outsl out add push adc shll mov mov xor call lea dec and cmp popf inc push push sbb (bad) rcll push and lods lods or jp sub mov out sbb xchg xchg fwait sub ret jecxz notb sub (bad) iret fimull and out incl insb es and fmul jnp movsb jne xor dec xor pop mov push pop in out mov jne cmpsl xor lods jae nop (bad) imul sbb mov sub out and pop aas pop rcr push ret repnz jl jne inc mov mov push add out (bad) sbbl in inc adc jae inc sub lods cld push push cmp sub js repz mov xchg add mov icebp insl or jle jp movsb cwtl mov or jmp and mov push (bad) call dec inc jge pop cmp insl mov xor or mov dec (bad) fimul add jl push and inc sub lea sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or or dec push add xchg mov cmp enter or leave (bad) dec ret and daa mov faddl inc ljmp xor cmpsl cmp es je fiaddl ljmp jno std lock fs jg xchg push jo icebp adc jle test lds pop push dec lret ror or outsb dec or mov pop adc (bad) and mov sbb xor andb inc call stos not popa pushf pop or je,pn jb push out xchg sbb movsl sbb xlat pop pushf das sbb jp insb mov jo pop dec (bad) jne dec das loop cs lods cmp cmp adc inc inc fucomp es adc ret push repz aad and jl inc test (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl fs inc (bad) jo (bad) lods add jge popa push pop popa dec scas pop fs (bad) shrb lret cltd jl jnp push pop lret movb fwait (bad) popa mov popf jg ret mov push fldt decb andl mov mov out xchg dec jnp xchg divl sub jo daa pop add add aas mov jecxz fwait dec push add push addr16 add fnstenv inc inc inc in sbb fmull je sti push jg or push mov in es (bad) mov push mov cmpsb jecxz in les push pop lods (bad) mov jb xor (bad) loope pop add sti cmp std mov mov jae aad mov push es insb insl fnsave push test aam pop xchg xchg dec (bad) out sbb arpl or add enter jo push push (bad) call shlb sub fstpt sbb mov or inc stc test sub mov add aam mov dec or push rcr mov imulb imul lods movsl mov in pop popa jecxz scas mov arpl addl xor mov test idivl and shlb push and pop aam mull call adc sub js xor mov decb imul test push xor and aam int sub stc je adc dec lea or xor jno mov jae inc pushf popa sti push xor adc jmp fldl2t idivb xor cmpb jns cmpsb je insb and loop jge sti in pop outsl bswap mov (bad) rcl jp aam out jl leave and and cld jl xor fidivr mov dec push in sbb pop enter fisubr divl add pop mov faddl sti fs outsb mov lret divl lods dec dec (bad) int jb sysenter sub arpl mov ljmp lods and pop outsl (bad) notb test mov cmp in hlt cltd push stc pop arpl enter loopne test push adc (bad) lcall mov jo jg js fstpl cmp stos push add add push add xchg shll outsb sahf push rol push movb or pop lea xchg cs dec adc push add or push and lcall imulb xor jae imul and jbe fildl ret and dec sbb xor sub sbb clc inc xchg pop cmp imul push and icebp insb jo outsb loopne arpl movsb out push and je andl out vmread fldln2 adc daa daa pushf pushf cmp mov rcrl (bad) std mov inc (bad) dec icebp add (bad) imul dec mov js bound stc test (bad) je in aad sbb scas dec dec push mov xchg sbb aad xor wrmsr adc outsl jbe bound iret xor ret call cld or cmpsb arpl lds (bad) jmp or xlat lods ds mov cmc fsubl rcll cmpsl pop stos nop cmp xor mov xlat add cmp icebp xor sbb add popa jp dec call popf mov cld push dec out dec paddb std cmc lahf lret jo rorb scas iret jl inc gs (bad) or xlat pop and xor aaa mov outsb in jnp mov inc xor adc out adc movsl rcll popf test mov pop mov repnz ret dec dec push into cs lret mov mov hlt hlt icebp icebp movsb mov dec push add bnd ret rcrb pop inc hlt xchg adcl cltd cld mov jnp out mov xchg xchg add (bad) mov daa xor aas shlb adc cmp out mov fnstcw cltd cmp in cltd xlat ds push xor scas stos std inc add clc mov xchg add ja paddb repz call xchg insb mov jno inc into mov mov or fldcw outsl sub fwait popa push repz mov ljmp out aad mov xchg ljmp pop sub sbb xchg xor inc scas fldl jecxz insb repnz cmp enter imul mov (bad) mov sbb jmp ret push daa sub mov popa mov push fisub mov cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns jp pop mov sarl dec movsb rorl pushf push dec icebp jmp js sbb rcll fcom xor aad jg dec mov inc pop mov loop cs xlat sub repz mov add ds xchg orl jecxz push push enter push sahf jbe cmp pop sbb cmc stos pop xchg pop mov loop cmp popf cmp xchg or push insl mov hlt sub dec add outsl jp push or xchg cmp mov mov xchg mov adc (bad) push outsl test mov sbb push inc pusha movsl dec mov loope jmp (bad) and into mov cmp lock jmp push (bad) mov sbb aaa xor in pusha sbb push incb (bad) (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl push cmpsb (bad) mov jmp fnstsw jne cltd dec jp pop pushf pusha clc xchg les stos inc sub adc loope imull inc push mov dec daa adc or js cmc (bad) dec adc push mov data16 or movsb sub and pop mov out das cmp mov cs mov push into sub sahf mov faddl ja setnp (bad) ljmp mov mov outsb jecxz subb or in pop jl xor mov push loop mov xchg add call add cmp pop push adc mov aaa xchg sub sbb or test dec out sbb pop outsb dec sub or stc sub push push mov inc adc and sub jmp mov and dec fnstcw sti (bad) nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov aaa imul icebp and insb repz cmp js je (bad) je (bad) nop add int jmp or pushf stos lods push rcrl dec or mov pusha sbb sbb lahf add in fstp jecxz inc cmp outsl pop cmp or cmpl mov xor sbb rol adc xor add push sub insl stos (bad) jle pop mov lods inc and repnz jb sar pop mov popa stc (bad) sub or mov mov test test fbstp jecxz,pt scas mov adc cltd sbb jp pop or insb popf push movsb jge int xchg push lcall inc mov sbb dec arpl jp and idivb loopne cli and jl out hlt mov xor (bad) lret sub repz fcmovnb pop and out loopne ds xchg push adc xor jnp in movsl movsl test dec cmp arpl call adc imul addr16 iret sbb lds stc mov mov sub (bad) adcb mov mov push push fldl pop xchg mov jno cmpsb ficoml mov push stos popf dec xchg adc cmpsl push inc outsb mov inc (bad) or std sub aas sbb scas fmull test mov mov mov pop stos jo xchg xchg mov fwait (bad) push (bad) jno ret mov pop aaa es sub ret adc pop lcall mov pop stos mov xchg fcmovnbe movsb pop cli xor mov or cld aas jnp inc out lahf repz lret pusha jl nop mov or inc lcall pushf (bad) icebp mov push jle int repnz xchg repnz inc lea je mov or adc pop loopne stos pop mov mov pop xchg rcl fwait push icebp je jecxz jmp mov xor ret ret leave leave ds jne divb cmp (bad) setg or aad mov dec cmp xchg sbb ljmp or insb mov insb cmpsb fdiv pop jmp dec mov jecxz xchg (bad) mov movsl pop (bad) (bad) jl into jo mov hlt mov mov adc xchg push xor inc inc imul out ret jb aad jne jg mov inc jns pusha arpl dec mov gs sbb cmp push in cmpsb (bad) mov jo or fs push incb pushf mov addr16 jo pop pop pop adc mov inc rcrb and cmp add jno xor loop lea pop lods push rcrl sbb cmc lds (bad) push push push sbb ret divl (bad) jno push out subb adc dec push xchg cwtl cld pop bound insl lret (bad) fstpt outsb rol push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait jae mov sub shrl fcomps jno lods jmp popf in mov xor add rorl dec out fs dec scas or mov or rclb loopne xchg xchg mov out fiaddl mov push cli jns addr16 jnp imul jo mov sbb inc fucomip add mov adc arpl (bad) aam jle mov push aaa outsl xchg aam mov mov inc adc and xchg push or pusha xchg mov xor rolb ja mov (bad) xor ret cwtl out jo setne sahf lret pusha cmp cmp cltd mov xchg pop lea fsubrs outsb in (bad) jg (bad) pop mov sub push lock fadds fimull pop pushf mov xchg fcmovnbe sti lcall stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test jle or mov pusha adc adc imul loopne xchg test scas jl nop adc test cmpsl mov js jbe lea in outsb mov orl movsl in jbe jnp pop cmp adcb inc jae cmp aas dec xchg cmp lods int stos int3 sbb adc pop mulb xchg out pop add lods das shrl rclb mov shll sbb dec mov iret je cltd das ret scas loop stos icebp aam (bad) test xchg je jbe sub push outsb xchg negl insl mov stc xchg cmp nop ret mov pop cmp xor nop pop loopne dec sbb xor lods dec stc in repz push xor pop xchg jecxz xchg mov pop out and cltd ret xchg mov sahf (bad) insb pop mov js pusha adc dec stc mov js in lea and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb inc jl inc xchg popa inc imul jb jb scas xor and push sbb divl push scas fs push mov xor mov mov sbb inc push (bad) nop inc imul ljmp adc push in leave adc inc pop or dec adc xor push loope pop test cmp inc pop dec lret add out shr out add sbb push or adc movsl cwtl loop out jb shr and insb test adcb movw mov mov jb sarl ret fnstcw adc loope in fnstsw mov je es jbe enter cld insb push or xor jnp pop mov cmp inc aam jl data16 aas fdivl mov jp pusha adc int stc pushf pop adc mov sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp fmuls into push es (bad) call imul stos xor adc mov (bad) pusha xor icebp mov mov loopne (bad) or and mov inc adc inc aas cwtl and push movl push scas outsb jmp sub sarb enter add pop lret (bad) imul adc in push pop push dec cmp sbb cmpsl pop sub lds ss sbb addb mov lods cmc (bad) inc push mov inc aas inc pop leave jg fnop loopw cmp mov push mov (bad) mov mov mov cmp mov clc push cmp insb faddp mov incb mov repz sbb inc rolb sbb xor xchg movl add cmp arpl call adc imul insb push push adc (bad) ja xor mov fwait (bad) lds fnop inc aaa dec dec jecxz lock xchg insb push sub mov mov mov gs dec scas mov or add inc leave mov pop xchg mov xchg and fwait xor dec mov mov notb sbb clc mov repnz bound stc inc inc repnz push jge push icebp cltd mov xor loopne push or lods mov push push fucom js pop mov push add mov xor sti hlt add sbb lods mov ja pop fisub jo push ja dec shrl data16 mov inc xchg mov sub add lcall push lock pop sbb push jbe addr16 popa lock outsb fsubs pop adc sub pop dec sub dec and stos push into pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) in fidivr pop ret das mov mov and rcrl in les mov aaa (bad) jmp test add lds xchg or mov lods std rclb push mov pop and inc stos dec jnp popa jecxz mov mov mov jne clc inc cmp (bad) jl and mov rcrb push sbb push sub mov sub sbb (bad) pop push enter xchg inc testl lds test mov hlt lret jecxz push addr16 jg jge or inc int3 pop adc mov clc push aad xchg jge adc repnz add aad add adc negb push shll or lods sbb addr16 fisubl mov fidivr dec ret cmp sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 les mov leave add das or adc pop rclb ret (bad) dec inc arpl add xchg xchg lock insb jmp mov add shll pushf jb pop xlat ret dec sub mov lcall mov sti push mov ja das (bad) xchg hlt jne xor loope adc mov pop adc out add push data16 mov (bad) jb jmp or pop mov sub fwait (bad) xor xor mov push mov loopne int pop and adcb jge mov leave lret sahf cli mov (bad) dec cmp cmp ss bound incb cld xchg push cmpsl sub lret jge jl dec pop imul mov push mov xor add push dec pop xor pop rcrb movups sbb jmp dec dec jno mov or add rol shll es data16 ds cmp add pop push sub xchg dec in or sti shrb xchg push add scas pop cs pop mov xchg js jle jns mov mov or lods jmp icebp daa mov mov inc call cmc es pop fwait jl call fs lahf bsr sub jbe in push in mov and push adc adc in clc push xchg xchg ret aam repz lret fdivr sahf jae lcall mov gs add bound and dec outsb andl loop in inc pop (bad) mov fdivs in (bad) in jle cmp fistpll mov in push and (bad) add push insb cmpsb cmp fwait jne pop nop xor or or lds sub data16 pop (bad) mov mov sti popf inc mov fcmovb movb orl lock add enter and fisttpll arpl lods mov push and in adc lods mov push loopne pop push or sub adc push je adc fimull out aam jle sbb jb cld dec enter mov fs push push out out sbb push iret call fwait icebp int ds out sbb dec pop sbb xchg es push jae cmp fbstp cmp cmp outsl inc insl (bad) sbb xchg cltd jmp xor lea (bad) fiadd incb and test dec gs add and push prefetch xor jge jmp jge mov in shlb sub push outsl add xor cmp mov push mov rcr adcb jge mov dec fcoml fldlg2 cmp rcrl mov fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp in inc mov out ret shr pop into dec dec or (bad) sub sbb fsts aad lret mov cmpsl inc sbbl inc and ss pop push sbb mov or sahf push fs pop mov shlb mov lret mov sbb jle jmp add pop je (bad) dec mov inc shll inc sub lods popf loop push mov adc xchg or out cmp nop add not mov inc fwait push mov xlat push add int3 cs push les sbb cmpsl push pusha jns or fnop dec fidiv nop push fildl jmp sub mov loopne aas push rorl pushf pop out adc in xchg outsb fcoms clc inc cs repnz xchg cltd roll jge adc xchg cmp push adc mov sti fs outsb mov lret divl aad xlat adc and xor xor push scas jb inc push push push fistl and jno lods ror rcl jg movsb pop popf int3 xchg add ror addl insb aas xor ficomp cmp int lea xlat xchg rcll push divb cmp adc pop push in xchg mov divb in (bad) and fsub mov aas push mov or xchg mov pminub movsb pop loope pop dec mov cs rcr std pop jnp pop dec cmp mov popa pop or (bad) ficoml jmp adc lret out dec lcall sbbb mov and mov mov mov stc lods cltd outsb and xchg pop fabs mov rcrb xchg cmpsl scas addr16 lret test add test rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll inc jnp xor lock ljmp mov add mov jo fwait clc outsb lods cmpsb sub dec or mov jo ljmp cmp mov loopne mov test or lea mov into cli pop shlb dec jle and dec mov and stos shrb subb mov popa push cld sub jl jae sub popa js cli ret rcrl paddw inc fcmovnu stos xchg pop incb leave mov mov push xor and add push mov push stos pop push test outsl push imul add mov loope push loopne addr16 xor cmc out push push push xor mov mov rcr mov mov mov mov mov and cld iret cltd jg dec sbb stc arpl into movsl adc into into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop pop cmp ja push xlat sub (bad) jg sbb adc mov xor scas lret lock daa out adcl cmpsb negb into mov or (bad) stc dec lock sub test dec clc or je es and xor mov jge leave jl sub ret add rorl add es sbb add xchg push stc sti push mov out shrl mov cmpsb add cld jp shll jge movsb pop (bad) (bad) cmp jno setae and lcall mov pop fildl test xrelease in rcrl popa (bad) mov outsb bnd fadds movsb xor popa jle addr16 bound sbb mov std fldl xor mov stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) xchg and jmp mov (bad) sub lock lds add cmc nop mov outsl jnp sbb stos or mov xchg ss ret push pop xor insb lcall lahf test sahf jg test lret int3 xor daa or adc lds or and dec das or xor je (bad) cmp pushf jo fidivr pop sub in lahf jo loope call inc je int3 or stos add idiv popa scas xchg and mov arpl lahf mov pop and mov jbe pop mov je pop mov add xor (bad) xchg sbb in pop cmpsb jecxz push scas adc (bad) loop je (bad) loope (bad) std mov ror cwtl sub hlt and testl jns ljmp orl add add lock add enter jo push (bad) call shlb pop jl and mov enter xchg (bad) mov cmp int fdivrp stc cmp or push sub movsl push stos jmp xlat inc xor mov sub lods leave mov add lahf int3 daa cli test pop stos aaa in mov aam idivb test iret xchg aaa jne sbb sarb imul ja xchg sti daa and mov aaa test and rorb dec fwait fs cmp sti fnstcw lea scas mov sub loope (bad) push addb out jp push and repnz mov push push push call push jecxz cld stos pop cmpb movsl stos ret popa out dec lds nop add sbb sbb fwait out add xchg inc (bad) (bad) xchg inc aaa inc (bad) or inc flds push call fwait mov pop aaa aaa imul out in in in aam push push cld cld (bad) xchg mov faddl out out mov fwait mov and sub aaa addb ja icebp dec (bad) mov dec out in popf push lahf dec lret dec mov inc adc and jp push loopne jb cli je out push cmp (bad) or fs ror sbb lret xchg in push mov jle push lahf in push inc sahf inc inc adc dec movsb inc std cmpsl pop sub fldt (bad) mov sbb pusha or cmp (bad) ja lods hlt rcrb cmc (bad) and sbb jns or clc loop cmp jecxz xlat (bad) dec bound push mov (bad) or (bad) and jbe xchg jns cmp bound in dec mov cmc xchg mov or popa lcall scas mov xchg inc pop psubsw je mov rcrl iret int3 packsswb and clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov call push jmp push ret push jecxz clc and jl aam lahf sar and cmpsb mov sbb negb in lret and lds leave adc sub ja icebp dec outsl in add cmpxchg push inc xor mov sub mov iret mov push dec mov arpl pop cmc or int3 hlt xchg inc testb hlt mov loop out xor mov fmull pop das or cmp inc adc je inc mov xchg xchg hlt test cmp xchg adc push rclb inc iret push fisubl mov cltd fsubr mov cld dec mov dec adc xor scas jo lock mov or mov mov dec stc or jne fs addr16 mov cmpsl push icebp sbb mov pushf mov add pswapd loope cmc cmc mov pop mov repnz ret dec dec ror jg inc aaa push insb (bad) out ret hlt ror jge stos js cmc xchg daa bound pop push cmp or xor adc pop or add fwait loopne insb lahf jae bound mov addl mov mov fimul shrb rclb mov push sub sub (bad) jo push fidivr dec push scas sbb mov in pop ds ja fs pop xchg xchg out dec iret js outsb sbbl mov iret push mov js mov int sbb rorb pop mov push inc in jne sar or pop cs jmp mov add add pusha push sarl call cmp adc xchg adc xor cmp (bad) enter jne movsl ror mov bound push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov mov jecxz sarl jno and xchg lret pop jnp imul ss ret (bad) sbb stos out orl sbb orb mov mov into xchg sti sbb call enter sbb cmp ljmp jl (bad) adc sbb or outsb jmp aaa add push mov dec rol cmpsl (bad) repz push pop je rclb mov push adc xchg test pushf and add (bad) or sbb out xchg shr pop insb push mov sub mov jp cmp jl push cmp cli shr dec or inc stos bnd mov jnp inc mov or xchg sub jnp jecxz cmp pop lea ds xor sub lds jbe scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu sbb imul addr16 stos mov enter aam mov jns test jp sti icebp rcrl negl push mov sbbb subps dec xchg pop cmc push xchg jge sbb jne fiaddl mov fmull fdivs sub jnp data16 xchg dec mov mov adc or push cmp lods push push jb and sbb jne sar fiadd popf in sub sbb sub mov fstp jnp enter sti dec inc adc ret fs or xor inc mov push push cmp jns (bad) fwait dec ja inc cmpsl mov xchg inc bound pop aad mov mov out xchg or mov (bad) push loopne xchg xlat js mov xlat push mov sub lahf dec mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg std shrl js call into inc mov cmp dec cltd sub repnz xchg aaa adcl daa add jo (bad) fwait jne push or rcrl loope pop daa outsb xor adc (bad) out adc mov sub cmp mov push pop sarb inc fistpl stos mov sbb test pop jge pop cmp sbb mov xor cltd (bad) testl adc faddl shll sbb movsl rorb in das arpl cmp scas sbb ds sbb push or fstps dec jbe sub fs push and (bad) repz icebp bound (bad) adc cmpsb adc pop (bad) push adc cmp mov mov add jnp sahf test push mov scas dec adc mov inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl pusha sub gs sub sbb or adc imul pop mov push (bad) mov cmc inc cs or xchg fs enter xor or sub andl pop pop ret jb fstpl daa int3 mov js sbb pop sbb data16 mov ja add mov adc push rcl sbb (bad) mov fisub jbe lcall in mov je movsl gs push jle,pn int3 pop pop das in clc das adc mov rclb mov mov add add mov rorl add mov sub cmp mov cmp xor cmp jle fwait jnp mov push jo repz xor xchg xchg (bad) jge xor (bad) sub clc insb insb push push adc (bad) ja xor mov xor ret leave leave ds sub inc sbb or dec mov je push inc (bad) lock dec js data16 xor pushf (bad) mov icebp loope jecxz and push and pop scas cmp mov mov dec cmp inc nop jmp mov xor mov dec cmpsb dec rolb adc (bad) fdivp stos add mov outsl enter push mov xorb adc faddl fcomip stos mov xchg xor xchg mov gs repz inc shlb test pushf cmp push xor pusha xchg addr16 fcoml adc icebp call pop aaa adc dec sub dec mulb pop lods or jnp or pop test aam sub pop xor xor xor stos clc (bad) xor mov sub or mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp (bad) in insl gs out scas adc repz adc cmp mov pop and arpl inc outsb dec add outsl mov and das loope mov clc loop les mov loop int3 cmp pop out mov or mov pop sub mov xor mov xor mov cmpsb shlb jge cmp sarb mov cltd inc cmp adc adc dec iret sbb sub data16 aaa cltd rsqrtps scas inc mov aaa not test pop aas or es aaa (bad) xor xchg rcr mov add jo add sbb xor sub or int mov mov das jns jns int3 xor ja out leave push xchg jmp jge push sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc ljmp js dec mov scas dec sub xor insb jbe sub mov jae dec (bad) xor push mov xchg cs add test iret mov inc ljmp ret sbb test sub mov xor push mov mov mov pop cmc inc scas in and adc dec ret mov mov and adc mov (bad) roll sbb insl cmc test cld pop jecxz fs daa mov add into cmp fildll andl loopne jb and cmp lds leave arpl cmp icebp repnz xchg or mov or push aad (bad) xchg jg repz jae,pn in adc xchg cmpl mov dec mov add add rol shll es data16 mov js in in lea and movsl movsl and in in push jns jmp popf dec outsl stos out orb (bad) clc ret aad scas and out cld cwtl ret notb jle adc stos xchg sub frstor xor js lret mov gs repnz (bad) xor xor call dec addr16 pop cli fwait ss or fwait lahf and fidivr inc and fdivrl push out mov dec fldl add daa lods mov mov xlat mov adc mov and pop imul and jb,pn lcall pop mov jns ss jnp push fidivl jb pop sub movsl mov jbe sub push xlat out (bad) lcall ror cltd das mov mov lods inc push pop repnz jmp pop push ror xor std adc fsubrl or out add enter jo push push (bad) call shlb sub fstpt sbb mov push punpcklwd mov lcall adc push (bad) test lea (bad) icebp push dec xchg (bad) mov push inc inc idiv aaa and dec out inc daa push pop or stc cmpsb jmp neg mov scas lods inc in loop sbb mov jne push outsb xor ffree sbb aaa xor jo fcmovne push sub push push xchg adc ljmp xchg test cltd addr16 mov test out lods fnsave dec dec push xchg add sub lock inc mov (bad) pop (bad) dec out fstpl jo fwait stos cmp test xor xor insl push dec cmc ret jnp xor mov sbb xor ds sub cmp fiadd mov mov jl pop adc fiaddl mov sub stos xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc imul mov cmp jne rclb mov fsubr lds sbb adc pusha inc adcl lahf lea cmp push jle adc out ret jl mov idivb and or push jge jg mov (bad) xchg rcll mov mov mov aam jae int3 inc cltd ljmp xor imul fistpll pop jg cwtl jg scas jo jmp lods sti pop jno push xchg out mov adc popf lahf cmp xor lods int3 xchg dec call and or push add aaa cmpb scas sub jnp xor sti cli neg ljmp add xchg jmp xor push sub addr16 and xchg push push adc les cmp xchg in nop sbb aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl fisttp add aad repnz add cmp pushf mov lcall test in (bad) gs xor pop sub cmp and dec adc mov gs fistpl pop pop popf cmp pop in daa add jecxz divb lahf pop xorl test shr inc cmp enter (bad) xor add into jb aas repnz pop mov das mov jg sbb mov push push push loopne jge mov pop lcall cmp rorb xchg into scas fcomps les add lods dec insb pop out ss mov nop aad xor push sbb sub lods lret jmp adc daa mov jp dec xchg jg jno xor stos jl xchg jl dec xchg add fnstenv ljmp push push sbb (bad) rcll push and lods lods or jp sub mov lret mov push jl arpl mov push mov (bad) push (bad) lcall or jle adc add fstpt cmp pop mov push and sbb add pop sbb mov adc mov xor sbb add and jno dec sahf jbe insl xchg flds cmc movsl dec pop es adc push das lret sub cltd cmc aaa xchg mov jbe xlat test aaa sub iret dec repz push (bad) ja stos xor (bad) (bad) or mov cmp iret enter shll (bad) in cmp pop stos pop mov pop loope sub mov mov lret sub lcall pop lods sbb nop xchg jle mov std sub imul (bad) adc pop and loope mov loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec std xchg das push push jmp sub push pop add dec and inc mov jb stos rclb mov pop ret sbb mov inc sbb or out int3 push cli fwait inc mov out mov push test aas dec cmpsb and mov jbe lret sbb scas outsl push xor add push xchg stos xchg mov mov test inc jle push fdivrl das sub ss daa insb pushf mov mov sbb (bad) pop into mov (bad) mov sbb ljmp add inc aas cmpsl add or pop xchg jbe xchg mov add sub jbe sbb cmp pop sahf mov nop cmp movb addr16 jl jl mov inc adc sbb or arpl gs ret orb dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc xorb xor mov inc outsb aas cmp pushf and push out imul sub xchg je sbb push fimull fisubr cmpsb push cmp out dec sti xchg mov cs jae iret mov cmpsb add cltd cmp cltd mov sti mov sbb in (bad) xor push jmp mov lods push jle in cmp inc push inc xchg ja loope movsb dec (bad) cmpsl jae adc dec push xor adc sarl fwait mov lods lahf mov shrb mov xchg call adc gs (bad) mov add and lret loope mov (bad) imul dec stc mov sbb sbb and mov mov rcrb push cs aas fwait pop mov pop inc xlat jl adc lea test add enter jo push (bad) call shlb sub fstpt sbb xor xchg push in (bad) sbb mov sub cmp in pop xor jle aam mov mov xchg mov xchg addr16 repz btr test scas mov icebp push imul cmp mov cmp bswap bnd push lret and test in data16 cmp lea js fs in imull pusha or inc in xchg sbb rcll (bad) bound adc mov and aam cmp inc clc fs enter mov shll insb pop or es sbb pop gs sub xor popf rolb mov in and jmp test pop mov rolb fnstcw mov in and negl cmpsl jno enter gs in in aam push push cld cld (bad) xchg mov faddl sti fs mov mov adcb pop add mov mov push ret (bad) cmc aam loop cltd mov cltd mov inc and cwtl test pop or ds mov pop iret into add ret adc or popa push fild jle sub and mov (bad) incl cmc and pop aaa push cmp cmp sbb movsl aad xchg jecxz cli inc dec mov fsub pop mov and js insl sbb sbb or js pop lahf inc jne dec dec stos (bad) outsb das orl mov sub pop sub leave out mov jne in rcr or inc mov shrl gs vmread sbb les cmpsl and mov fwait rcll xor lret cmp ljmp or insl aaa inc adc cmpsl ljmp outsb mov mov (bad) adc (bad) aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl stos repz pop (bad) jge ret push iret cmp ret and xchg mov ficom ja inc (bad) cmp mov fimull daa (bad) dec out imul cli jno xor fistl push std aas nop and das dec jmp cltd ljmp mov shrb xchg clc lcall sub int mul cmp pop stos sbb (bad) roll (bad) lods test movsb xlat adc dec sub xchg adc add ret dec add fisub jp cmpsl sbb and loop mov push mov sahf mov es insl sub cld cmpsb into xor outsl movsl add cld inc pop jb rcll jne xor or sub arpl in mov and addr16 lods xchg sub mov ret mov xor (bad) call mov cmc mov pop mov repnz ret dec dec push into cs lret mov data16 (bad) mov inc adc inc (bad) iret in imul ret int3 sbb xor jg cmp sbb xor ficom inc adc sbb not lds in push rorl jb mov cmpsl (bad) sub cmp dec scas jge call fisubr icebp sbb mov jne adc pop fidivl push aam or cmp test inc rcrl and add adc iret xchg into aad push dec fcoms cmp jg je leave ljmp call inc sahf test sbb mov pop mov jnp inc nop test shll pop sbb test mov push cwtl adc rep lahf test or pop lods lret jo inc cmp sub ret sbb fstpl int out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa in mov sub xchg ds sbb mov js (bad) and (bad) jmp push mov call insl inc jg popf sbb pop imul leave push push je push repnz fstpl xlat mov pop xor inc scas adc dec sbb ret (bad) mov xor jecxz insl outsb std in sarl ja ja movsl cld in mov pop push lcall mov sbb (bad) in lods push mov scas jnp mov inc js push add mov jmp pop cmp aas jg and add fstl xchg mov cld jecxz pop out pop sub pushf cmp out inc in lcall push and push and mov fwait mov lods jmp mov aad (bad) movsl jne daa adc jle mov icebp js pop add cs sub (bad) sub bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu add mov inc addl enter mov mov fsubs jb (bad) pop int out add scas add inc lods popf ud1 and dec mov push push data16 dec inc pushf bswap mov mov jbe lcall xlat cmp loop lahf or xchg in and out lods dec xchg std jnp pop ds scas jno imul add jge test outsl mov insl sub jg scas jno inc xor test sbb sbb (bad) fs fs (bad) rorb stos jecxz or add dec jl outsb xor dec in loop out push or mov jecxz sahf push adc inc mov daa mov es cmp sbb pop pusha stos sbb mov adc xchg stc ret clc xchg loope flds icebp dec femms enter mov leave loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov (bad) repz and push xchg jecxz xor pusha and dec imulb sub sub subl jbe fld mov stos push cli inc inc in std lea cmp push aam mov xlat adc test dec pop out lea decb sahf fidivr xor push and push scas or icebp test ss dec je dec push push lods add and or mov xor mov out mov cli push test lcall pop jmp pop push inc jo mov cmp mov adc pop fisubl fsubrp out in inc insl xchg loop std jecxz xchg fistpl or movsl mov arpl dec pop and rcrb jmp test stos sbb jno loopne mov adc mov (bad) stos cmpl fcmovnu ljmp dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc imul add (bad) (bad) js mov push mov cmp mov test cmp gs mov je add lods loope into leave jecxz mov std jne movsb push add and and repz pop sahf or inc cwtl in add jo inc sarb leave sub jp loopne push mov mov pop lret aad sub add movsl nop mov adcb sbb jo cmp jcxz cwtl out popaw sarb pop in jmp push and loopne repnz int3 sbb cmp sub scas popa mov fstpl jns cli (bad) dec (bad) (bad) push jo add stos in std lahf push mov loop add aaa adc fstps push shr jl fdivrs jb test add test ds rcl lods sbb add sbb jae mov xor ret leave leave ds jne divb cmp mov (bad) aaa fmul subl cltd rclb xchg (bad) aam (bad) cld mov mov js fcomp mov jb dec push jle lret popa addb loop mov shlb mov popf ja inc loopne cs mov xor in clc jb add inc mov jmp and stc mov stos xlat and sbb fcomps push or mov jo mov push addb add xchg dec xor lds test in add mov add scas das sbb (bad) sbb lret mov dec inc adc gs (bad) xor mov ret orl mov repz pop sub fcmovnb mov xor lds mov sub insb sbb push sbb (bad) rcll push and lods lods or jp sub mov out test loopne or imul xchg lcall mov xor xchg sbb cmc imull lcall (bad) aad cmp xorb movsl jg ret push push jbe inc into in dec fdivs flds inc xchg addl lock inc cmp imul sub scas test sbb push in aam push mov and mov out and out cld sahf mov cmpsb push xor dec mov dec cltd push mov add add jnp mull inc inc pop cwtl jl stos xchg (bad) cld lods xchg fmuls jns popf sub ret add lcall mov cltd dec outsl push outsb fnstenv fmuls fdivl fistpll pushf cmp enter push int out out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec out inc stc or pushl xor int sbb lods adc icebp jno int3 adc push push add and dec shrb addr16 je es mov sbbb idiv jbe xchg dec and rol cmp push dec lret ret add push popa dec (bad) (bad) lock push xchg or in ss cwtl or lcall jne lahf js inc outsl aaa icebp mov cmc minps xchg sub add jnp aam es lock inc ljmp sub decl and pop lret ljmp lock and bound cld (bad) xor inc sbb lds xor lret dec push jb js (bad) fcompl test (bad) sbb jmp xor push stos xchg in data16 mov js in in lea and movsl movsl and in in or mov add inc sub bound sbbl xor xchg mov loopne rclb bound xor ror adc pop in in in fistl dec jns add sbb out imul stos sub jnp dec pushf jno hlt and stos add mov add push ret pop lea je or adc (bad) dec push pop lods out loope jb sub aaa add pop inc lret xor rorb push inc or adc adc (bad) outsl xor xchg sbb leave or (bad) call sub cs repz adc push aaa cwtl mov dec pop inc repz pop xlat or or mov inc test in sub or stos add enter mov ret divb push js inc mov mov fsubl xor add lret enter jo push (bad) call shlb sub fstpt sbb mov or test and sub nop movsb sbb mov loop dec repz lret mov popa dec jp pop clc mov call test (bad) aad mov push jb cs iret movsl stos clc int std xor sahf jg xor mov xor cmc mov ret mov lea insl out or inc sarb adc push xchg add lds fs add jmp add mov xchg cmpsl add (bad) insl ret sbb add bnd jge movsb inc sbb ret fcmovnu cmpsl fisubr dec inc add fistpll in xchg lea insb jmp int3 sub inc mov das sub pop and xchg push push into cmp sbb or hlt loope sahf jnp in movsl movsl test dec cmp arpl call adc imul mov and ret pop mov fcmovu jno movmskps cmpsl aad in adc fist xor pop rol cmp notb cmp mov fdivrs ret inc int3 lret dec jne,pt ja pop sub test pushf cmp adc inc mov jmp lcall fprem lcall or xor std nop dec add lea pop mov addr16 jno xor dec jb pop jae xchg xor pop insb mov mov repz xchg push aad (bad) gs and xchg jg add int3 dec repz jmp jmp dec mov mov push pop adc sub sahf movsb jnp xchg cmc cmp and cmp sbb pushf xchg subl xchg mov in dec ja fiaddl mov mov mov xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg push xchg pop xchg dec add imul clc in aam mov lock movsl or cmp std adc cwtl cmp testl or cltd add or mov xchg shr repnz fsubs jne and fcomps lret inc add xchg fs repz xor lahf lahf mov aas pop out cs jne (bad) lcall test out or fimul inc mov ret out inc and jbe jae and ds inc movsb out outsb and or mov cmc push pop out imul and cltd call fnstenv fcmovnbe mov or pop sti and jb fucomip adc inc es (bad) and (bad) mov clc fistpll adc cmp lret js or mov rol push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait jge inc push pop jo sbb stc out dec out push les movsl adc imul lea nop jge mov inc outsb loope xchg cmpb add (bad) push loop sbb inc lret adc les mov popf inc stos pusha out adc (bad) or fs mov push das in dec inc (bad) inc bound repnz pop (bad) outsl fwait inc shlb (bad) aad or mov out xchg dec pop inc les stc sbb inc paddsb daa xchg xor mov add push sbb jl inc mov mov push push inc mov pop das scas mov add mov mov and fwait sbb or (bad) jbe fndisi(8087 movaps jns std call rcr jo pop and xor cmpsl lcall pop pop or div jmp xchg dec dec jno mov or pop xchg jle push and fdivrp outsl push repnz or push pushf mov pop roll movsl unpckhps pop dec movsl test mov inc aad jns ret shrb inc das jb (bad) movsb jns sbb bound mov cmp pushf cmpsl dec hlt xchg fistp aas icebp sbb int3 mov jae push fwait adc cmp repnz lea (bad) in push gs sarb es les daa adc sbb mov sbb push inc cmp add cmp rorl xchg push xchg pop lea adc aas outsb inc js negl sarl cmpsb mov jl mov lods out in add adc outsb xchg sbb pop les push jae out pop lods js xchg sbb stc lock cmp pop push das push xlat movzwl (bad) (bad) les arpl les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl xchg pop jbe sahf js (bad) jo jl mov mov mov popa push repz xchg push pop lret (bad) and in out inc bound pusha mov mov std into or inc fwait rolb pop jns mov sbb inc add mov arpl cmc out xchg adc ret lret mov inc cmp xor int3 les clc cmpsb repnz es enter arpl push mov movsl cmp add sub mov lcall pop add add ljmp (bad) popf sbb cld sbb jbe cli cmpsb aaa rolb push lds mov and mov sbb loope jmp icebp adc rcrl lret out add enter jo push push (bad) call shlb sub fstpt sbb mov or push clc mov jo cmp ds cmp in je mov xchg movsl imulb jp mov and push fldenv xor stos jmp cmp inc lcall dec inc lret xor sub in pop in xchg add icebp mov and mov or ljmp or outsl inc ds pusha mov pop cs aam and stc jl pop fsubr lods insb test das push push lea mov lods mov mov push dec ljmp test aad jmp das or std jmp push iret addr16 cltd das mov fcoml (bad) movl test xor icebp push mov adc lods mov int push inc add ljmp fwait add push fistpll xor lret mov ss es cld (bad) xchg mov faddl sti fs outsb mov lret and dec jp adc or xor cmp enter test or lods push xor push push pop and lock roll xchg js lods inc and add pop sbb sub dec jne (bad) arpl pcmpgtw sbb mov and push mov out lea fs (bad) mov mov aam imul movsb fwait pop shr add sub imul dec inc aas dec lea addr16 nop pop sub (bad) aas adc ja and jmp in stos sub js fimul dec in dec scas xchg add enter and js sub jge fs cmc mov pop dec cwtl push jnp mov mov cwtl adc fdivr cmp in fidivl in pop mov lds inc in sbb clc dec test rcl adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov inc xchg jmp push stos xor dec or js sarb repnz lcall fsub and out (bad) lods daa push icebp test dec xchg stc sbb pop adc jmp add test add incb jle cwtl dec aas sub mov sub dec fwait dec icebp mov jne dec sbb cmpsl pop add sub inc xor scas movsb dec ret xchg cld push inc xor push pop mov fmuls sti mov das sub jl lock mov mov jmp lods jl out mov sub mov mov add adc movsb jle xchg xchg add out jmp add popa pop ja pop xchg rcl and inc imul movsl sub popa inc sbb outsl jns jbe fnsave out fs cltd adc or jb push lock bnd jo jmp cmp mov repnz ret dec dec push into cs lret mov mov hlt hlt icebp icebp stc add adc inc fidivr frstor cmp xchg ljmp add fs lods imul cmp push pop in push xchg in (bad) call je sub int3 mov push and imull hlt jb cli dec insl jno jo in mov sbb xchg lret jecxz in pop xchg std pop sahf mov cltd sub mov add hlt fnstcw mov xor mov into loop fistl adc fildl loope push stc aas popf imul ss (bad) mov pusha sbb fldlg2 cmp ret sahf iret adc loope pop push mov xor lods mov mov inc xor into jp mov mov gs xchg hlt pcmpeqb sbb inc jae,pn cmpsb test negl lcall jmp loopne mov cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound inc les pushf (bad) pop jnp mov movsb std push sub test in dec mov (bad) cmp cmp mov pop mov add and jp push cmp push cwtl in lret (bad) ret pop jno push pushf lock scas mov into mov sub int (bad) jmp sbb add mov (bad) stos xchg stos bound repz sub inc xchg xchg jcxz mov pushf imul les (bad) dec push stc sbb inc mov push inc xchg sub mov or cmp test aam repz push (bad) out orl stos enter jl dec test sbb mov sbb hlt nop push cmp mov push xchg push fisubrl push push inc push xorl mov lea xchg mov cmp jne jae dec test (bad) movl jmp xchg fcmovu mov inc addl lock andl lret dec adc out inc xchg mov push repz lds lods loop lret fnstcw fnop sbb pop daa pop lods in dec mov xchg test mov call (bad) aad rclb xor mov sbb or rcrl movsb push inc adc (bad) mov mov cli dec shrb in add mov add pushf stos les xor jmp sbb out scas into adc xchg subl addr16 bswap push sub imulb pop xchg (bad) dec sbb into lret jge dec and into stc cwtl adc sbb (bad) cmp xchg or lods iret fbstp dec mov fcomps inc jb cmc adc pop cmp fdivr push xor sub cmp sub mov (bad) pop pop xchg mov aaa imul out in in in aam push push cld cld stc cs lret std push push jmp enter push sti pop add xchg pandn adc pop push mov xchg insb lods adc fiadd repnz lret orl lret ja or sbb adc and jg push lock mov jg aaa lcall add inc (bad) (bad) lret lahf pushf out mov lahf jb pop mov inc popa sub mov jmp ljmp add fisubr mov jne sub es push jge popa sbbb mov mov call dec sub jbe clc cmp jle pushf lea sti adc or mov (bad) negb mov adc xor outsl clc or scas lods push (bad) movsl fsubrp repz cld jecxz pslld sbb std std fstl not xor push adcb dec cmp arpl call adc imul insb push push adc (bad) aad xlat xlat adc inc rcrb and cmc jbe push aad in add lods movb nop xor (bad) cmp popf jge in ljmp jae sub arpl sahf (bad) ja sti xorl (bad) push mov mov mov mov adc movb ret add xchg and (bad) jg mov push ljmp mov push xchg inc jne adc or mov outsb inc or push icebp aas cmp xlat int3 push xor stos hlt loopne call or dec lcall (bad) scas mov in scas mov sti leave and hlt mov pop jae mov cmp clc stc scas add or and test movsl fstps stos arpl rcl lds fwait cmp push xorl fdiv mov mov adc mov cmpsb pop add out or mov div je cmp add setg loope cmc cmc mov inc cmp pop pop mov in arpl pop xchg push xchg dec mov push hlt sub cs loopne pop push sbb ret in (bad) jno dec jo (bad) push pop fsubrs fistpll sub (bad) fsubl mov mov sbbl daa (bad) data16 addr16 in loop into or adc out push test mov cmpsb (bad) dec scas int3 daa mov mov pop push (bad) xor xor inc dec mov sub jp sbb pop (bad) fld mov popa lret sti das or std ret and sbb test out jb pop or sbb popa dec shll lods pusha jg mov aas stos mov push pop test in std or scas adc mov inc push in inc adc cmp lods (bad) jno or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 lret mov repz (bad) stos inc daa les adc add pop cmpsb loope push test cltd sub (bad) jo cmpsl mov pusha bound insl clc int3 sub dec mov repnz pop pop inc pop cmpsb sti xchg int cmpsl cmpsb test mov pop dec call mov rcll scas addr16 or es mov loop ficomp test cmp jnp push cli adc or mov cld cli fsub xchg mov cwtl cmc mov (bad) je lods in cmp les clc daa mov imul adc test call fbld push rclb aas and repz mov (bad) cmc pop mov repnz fisttpll inc ret dec jmp adc sub in mov (bad) jecxz jmp dec mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test pusha pop sub add inc popf fcmovu push pop sti jne xor sahf adc and fs inc add jle shlb sarb cmp out mov movsb (bad) jge adc insl enter addr16 mov or stos dec adc (bad) mull adc mov imul pop adc mov in popf test pop push xor push mov inc mov and and cmp or pop sub mov push stc sub out in sbb ret dec jbe call sar test cmp fwait in pop sahf and in scas out or add ljmp jbe test cmp enter adc cmp (bad) cli fisubl adcl imul mov or stos cs sbb xor (bad) repz and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov loop add int scas lds iret repz mov ss scas dec sbb dec xor pop dec add dec add fs cli or sbb fsubr or jne nop sti bound sbb xor movsb pusha jns cmp test scas xchg cld stc adc pusha mov add stc fcmovnbe dec (bad) imul and icebp jmp mov lods push dec in add cmp mov lret out inc (bad) adc (bad) popa subl dec es push test insb add (bad) bound sub push scas popf test sub ficom add pusha push xchg scas inc mov jmp iret push sub in mov push adc fist dec movsb jl sti or adc repnz scas sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp popa das or aad pop push xor iret push mov (bad) xor pop pusha inc out test pop imul cli adc leave cmp je adc mov or insl mov xchg lret cmp push lea pop pop inc sbb add fldcw fstps lcall xor mov (bad) adc jle ljmp push push jns and pop sub out rolb int3 dec iret sub popf lock ffreep add aas and stc inc aam aas adc mov outsl jns and push mov cld ficoml int lahf stos adcl mov push pop inc xchg outsb inc cmp xor mov mov dec xchg push add jecxz add outsb lock jo jne cmp arpl call adc imul insb push push adc (bad) ja xor lcall les (bad) or fidivr aas dec stc push int lret mulb cmpsl rcrl mov add sbb pop mov es mov inc loope and addl mov enter or ret dec sub jg mov shrl insl clc mov scas push dec test imul sub mov add out dec push fs and fcmovbe ficompl add pop daa daa daa xor inc outsl lea aas and pop pusha out ret fsubs mov in (bad) jg,pt in cmc lock mov js outsl jl or popa sahf sub mov fimull sahf mov push cmp or decb push xchg dec cld mov and loop adc aad inc inc mov add inc or cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) dec push pop clc loop scas push sbb inc dec push mov repnz call stc aas repz lret dec push out xor lahf ret es and aam mov clc lock (bad) cmp adc ds xor int3 (bad) cld hlt push mov shrl mov movsl arpl inc ss (bad) mov or insb sar lds fisttp (bad) std sahf xchg (bad) dec icebp mov xor pop adc push inc je icebp (bad) xor push out sub push xchg jno cld out subl js adc lds pop mov add test gs daa mov lods dec push jo mov sbb xor pop dec (bad) hlt out fucomp pop add cmp loope (bad) mov inc sub jl scas inc jp push aad inc aad jmp ss sub cmp (bad) and jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl stos and mov test dec (bad) adc mov pop fbld imul xchg dec adc jae,pn adc jbe sbb popf pop xchg psadbw lods ljmp pop mov movb cmpsb stos out push add add sti movsb shrl adc out lds test leave dec cmp lods std dec jl xchg adc lock roll cmpsb mov out dec fidivl test in pop push jne nop ret jo in les mov arpl inc sbb cmp daa lret in jno mov out clc je sbb hlt xlat rcrl mov inc add mov cmp div rorl xor dec hlt enter fistp adc mov fcomps aas dec aam scas das mov dec pop pop mov daa cltd dec jmp cmp pop add jo sub leave out stc sarb adc jno mov cmpsl cmpsl sbb add rol shll es data16 mov aaa das pop and arpl iret jmp pop jecxz fdivr mov cmp inc shrb sbb aas (bad) or pop in lods stos notb je fcmovnbe rcrl jbe (bad) push loope or push add (bad) and mov dec iret outsl sub lods sbb (bad) scas (bad) popa mov lret test movsb lds sub xchg push fidivrl jmp mov andb sbb cmpsl dec data16 cmpsb pushf (bad) mov xlat dec stos jge rcll push mov fiadd push jb addl mov dec aad stos jbe and divb cmp mov cmp cli sti push and (bad) xor js clc (bad) div jae enter sub ret ja insb pop in fldt ja mov out xchg fcmovu mov inc addl add push push pusha pusha lock add enter sbb push shrb addr16 rorb outsb ja add xor mov cmpb mov int inc pop add ljmp nop add sub ffree stos mov mov mov pop cltd mov scas (bad) (bad) rcr outsl cmp add push xor or sbb sub (bad) pop inc enter stos adc faddl test out lea mov xor jle repnz adc (bad) data16 push imul sbb scas xchg testl sbb pop jo ss pop gs ljmp xchg push loope stos push or aad gs stos shrb cltd fcompl add sub ret mov sbb mov push mov pusha mov fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp in mov pop stos adc inc pop adc mov int3 sahf push ja scas jge or jecxz subb leave jg inc loopne sbb sub mov dec inc xor xor mov fistpl outsb ds mov leave mov cs jns (bad) xchg add sub jg sub xor sbb push xchg pop xor xchg or (bad) std jmp mov mov lret adc xor or pop iret std mov sahf sbb repz in xor inc push sti std mov out sub mov jle cmpsl jnp rclb loop stos add push sub push and cmp and loopne pop insl inc jae insl cli sbb cld sub mov dec inc push sti and push mov and fistpll fldcw lahf or cmp jge cmpsl mov add fs outsb mov lret divl aad xlat adc (bad) xchg pushf inc push cltd cld sahf ret push cld mov into sub daa dec cmpsb mov dec add int3 jno sbb pop sbb or adc (bad) mov hlt push sbb (bad) ficom or lea add mov mov xchg add and sbb adc xor test sub pusha mov imull dec test cwtl daa adc jno icebp adc push or cmp push jb xchg insb es test and inc jbe cmp mov jns out pop xor xlat fsubs mov sbb xchg pop mov mov push pop test lahf cwtl xorl jle lods pop xchg push push enter fdivs mov ja mov das ja lahf mov fisttpl fs mov cli popf xor lds lret fcmovne or out sub rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rol pop dec jns fwait jmp mov insl mov cs sar xchg dec ret fnsave (bad) (bad) cmc fcoml les adc xabort xchg mov mov hlt jg or (bad) xchg jne into dec inc cli xor fwait mov in add movsl test adc mov dec xlat (bad) inc jno jmp lods (bad) lea ds sbb out xor enter mov and xchg push das jne push fcomps xlat cmp ret xchg cltd adc jge std stc adc xor mov xchg push cltd testb cmc mov jb icebp inc pop stos outsb push jle mov movsl outsb push add adc adc test aaa cmpb fstl sti xchg stos insl sbbl leave hlt gs pop adc or test ds imul cmp test fmul into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg xor sub or and addr16 mov arpl sub and and pop addl push in cmp xchg push lock mov adc bound lcall nop mov aad xor mov adc xor sub xchg fistpl jmp cs inc loop mov stos pop add outsl sbb aas mov aad or push call inc adc sbb inc cmp push cld lret call outsl aam cld dec cmp mov mov dec outsb mov jns dec sbb test ret push push dec sub dec lahf lods fsubrl lcall test test push jmp sbb dec mov mov adc lcall cmp adc (bad) fcomps repz or scas mov es lods mov adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test dec push loop cltd xor jne sub loopne or adcl in push cltd adc out sahf sub mov pop or loop ss int3 cmp xor xchg xor gs pop adc es mov das adc mov stos cmp fdivl lahf lahf xor sbb shrb sbb das cmpsl mov push push inc sub (bad) xor jno insb dec mov cmpsb push mov pop les in xchg gs xchg sarb push jmp stc xor fnsave sub push fcmovnbe cli adc jns adc mov pop icebp xchg xchg inc (bad) fimul fisttp test pop jb cmp cmpsl adc sbb neg lods mov out subb ljmp mulb (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock add enter (bad) inc xor lahf dec sti mov call and mov jmp stc faddl movsl insb lret add inc arpl (bad) rorb mov sub scas insl inc pop call mov mov mov adc pop mov mov or cltd and test cmp pop daa sbb movsb lahf and push add arpl jo lea stc mov mov xor adc sub sub mov out inc cmp add ds cmp icebp inc mov orb pop js insl fistpll pop pop adc cmp cs into lcall outsw sbb and movsb inc inc stos or lret or sbb enter sbb das pop mov enter (bad) pop add sub jge (bad) (bad) pop pop xchg mov aaa imul out in in in aam push push cld cld fldcw mov sbb fdivr sbb inc sub xchg movsb sahf xchg sub push stc out and iret dec push adc loope imull jns cltd mov sahf xchg mov adc jmp lahf push cmp outsb fldl jecxz fisubr rcrb ss lods incl push sub in fdivl lret cmp std xchg push dec add push std mov je iret sbb or daa mov sub cmp rcl lock add (bad) (bad) xchg in lods push mov push xchg sahf xlat shlb mov pusha sbb lock inc mov cmp adc sbb mov imull adc jp clc mov pop test inc test mov lret test sbb rol mov loope dec cmpsb int3 int push dec cmp arpl call adc imul insb push push adc (bad) aad xlat xlat adc (bad) lcall imul xlat cmp fnstsw scas jmp je repnz ret aam mov mov scas add outsl aam adc mov insb push or rol enter adc lods mov cmp and sub mov test in repz andl pop fcmovu fldt enter or push fwait jno leave pop mov scas notb sub dec xchg lret inc xor int3 dec inc push mov icebp pop mov ss mull cmc pop dec jae lods adc push pop mov pop mov les jae movsl and mov mov imul fwait jge pop jbe xor xchg jnp ss adc mov sub aad (bad) fcomps xor inc mov je cmp add setg loope cmc cmc mov pop mov pop jge jns cmpsb test ja sbb stos and in mov adc outsl or lret inc nop jmp repnz add jae jo push add test (bad) xor movsb jl jb lods dec xor lahf leave xchg insl lahf jge mov imul popf out add je (bad) push xor lahf sbb test fldz int inc loope movsb cmpsb (bad) roll out mov cmpl into push insb loop sbb stc mov lret or pop xchg jecxz cmpsl xor mov adc nop loop out cwtl fbstp inc movsl push pop sbb pop ds jne mov sbb aad and adc cmp xchg repnz adc dec cmp int aas mov fldt inc xor xchg dec jne loopne fdivrl push clc popf xchg adc lcall sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos lcall dec call xlat sub xor sub lcall lods jbe mov push imul add clc popa movsl mov aam and movsb ja (bad) xchg xchg and push adc adc test popf divb mov jge cmp sbb pop out jl jl mov and mov cmp jp dec jg inc jl fs or mov mov pop or mov push xchg lods mov pop ds sti movsl push shrl dec ljmp inc rcrl jg push (bad) cmp iret push loope add aam mov stos sbb adc adc sub push and sub pusha add ret jnp test jmp inc dec pop es xchg icebp (bad) mov in je sub pop adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg test pop mov mov adc lahf leave mov and sbb sbb xchg shrb mov jbe or push fucomp pusha sbb call ljmp test pop mov push sub xchg ljmp sti jmp insl mov xor xchg pusha mov and out cmc pop jae sbb add pop mov xchg pop xor add (bad) clc adc (bad) push pop pop cld xor pop (bad) in call dec out imul push and mov jl fwait and dec pop mov mov xchg repnz (bad) daa adcl sub ret icebp mov cmp mul push out sub xor lret xchg movsl push jns push or (bad) lcall cmp aad dec in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg jo nop scas mov aad sub out (bad) mov in mov aam and inc lds add jnp out prefetcht0 mov add mov test xchg fstpl (bad) (bad) mov sub push or sub inc xchg sarl or mov lods cmpsb (bad) lcallw icebp rolb gs mov inc xchg pushf call mov adc sub sbb nop sub jo lret xchg push outsb mov sbb cmc cltd jecxz mov mov push jno push icebp jl enter outsb scas incl sub adc inc jg xlat mov sbb mov (bad) cltd popa dec int3 xor pop les or (bad) loopne lret cmp dec jmp pop and mov addl ljmp jg sbb jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp popf cmpsb sti movsb adc pop lret mov call rol clc (bad) test jo mov gs push movsb mov stos jae outsb mov jmp mov iret adc or push movsb push jns mov mov xchg sbb (bad) repz movsb pushf rcl mov popf mov xor mov jno je fadds fidivr inc mov sbb mov scas (bad) mov cmpsl mov (bad) jae mov int3 adc or pop loop leave packuswb cmpsl fwait and in repz and out sbb iret pop sbb xchg fxch popa lret jae sbb mov lcall xchg add test and (bad) lcall jno adc in fdivrp popf lcall add mov push sbb pop clc clc insb insb push push adc (bad) ja xor mov xor ret leave leave ds mov sub mov inc punpcklwd lret add decb add aaa push cld rcl xorl movsb xchg ret pop int jmp xor or sub daa sarl outsb or jl rolb test gs sbb popl mov stos leave fnclex and mov cmp sub in push pop andl push push test arpl insb nop imull inc jge mov stos (bad) xor add sub xlat int mov (bad) fnstsw lds pop mov leave mov punpckldq dec out inc xor or cwtl call sbb push inc cmp (bad) mov jg cwtl aad inc push pushf cmpsl push dec or xor leave (bad) or lock std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods fcompl jbe cmc lcall sbb in mov add push movsb into out das (bad) sarl data16 adc cltd xchg cmp loope sub and sub imulb add cltd dec mov bound jmp mov mov xlat cwtl pop pop sbb sbb sub inc enter sub addr16 cmp sub mov fwait and hlt sub push sbb jno jnp and in addr16 cmp mov ror sub adc or ud1 and adc dec out lcall and rcll jg ss lahf aas jl cli movsb std dec jecxz xor push ss mov lret mov pop and xlat cmp test in jns mov xchg test push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov dec jg (bad) outsb ja scas sbbl add aas mov jae jecxz,pt movsb dec mov stos cmp dec sub jo,pt (bad) xchg in push pop repnz sbb inc or fcomip xchg cmp pop shl mov mov popl movsl loope xor cmpb imul aad test adc lock sti out jns fwait scas mov pushf lods lods jno (bad) xor pop outsb les pop pop adc dec inc scas mov gs loope aas test mov pusha bound ds adc imul sbb sbb pop jp cmpsb pop loop mov pop movsb fcoms lahf fdivrs mov fst sub test jp adcl sbb imulb movsb or sbb rol shll es data16 mov js in in lea and outsl xor mov daa push or rcrl mov push mov jl ret sbb cmp call test jnp adc push mov fcmovnb mov in jg fcmovne cmp xor movsl add mov mov nop leave bt (bad) insb inc data16 xchg mov xchg loop or call into ret es add setne iret dec dec iret mov jmp sahf cmp or xchg stc or or cli jle and and mov xchg xor and repz mov lret xor jne in dec push and subl jle add int das xor xchg mov pop aas mov (bad) sub mov ret (bad) xchg pop xor lret arpl fcmovu (bad) das adcb pusha lock add enter jo push (bad) call shlb fnstsw add iret js inc or (bad) out repz cmp jmp aad in lea sbb sbb adc mov pop movl add lds aam xor lret std mov pop lcall lahf add xor mov lock movsb xlat mov hlt add (bad) sbb jnp repz aad rcrb add adc inc sub inc sti xchg aam push ds scas ja mov inc fnstsw cmp hlt adc and cmpsl pop dec jecxz popf cmp cmovb out insb lahf loopne inc insl add fstpt pop imul scas inc sarb pushf (bad) push jmp push imul dec inc (bad) popf and and inc in (bad) xchg cmp or push ret rcll jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl arpl add outsb rclb cwtl sbb negb jne outsb xchg jno int and ss aas (bad) sub mov jg lods dec xchg mov pop loope mull js outsb xor call cld push dec jae fstp xchg sbb fmuls pop lahf insl test mov sub aaa dec jae push xchg rorb hlt nop mov xchg insb iret sbb pusha adc cmp in xor jle push gs sub jb mov ljmp addr16 sbb mov push sub mov lea pop add or push enter mov lret nop dec outsl jecxz and jmp and pop adc mov ret in (bad) mov in pusha fstl test xlat lods mov lcall mov adc xlat xlat adc (bad) gs daa pushf pushf cmp pusha ret add sbb mov mov push nop mov mov sar js hlt fsubl js lds sbb mov pop and pop mov ret (bad) imul or lahf insl hlt mov insl jg addps lahf mov movsl mov pusha imul mov (bad) jmp xchg adc lea or jle into test into and (bad) xlat stos ret fsts jecxz inc ror loopne mov in shlb ja push jmp sbb clc sub sub and mov pop dec loop pusha sub add (bad) pop inc mov jb jle inc push xchg call sarb into xchg in xchg iret pop and dec out adc xchg xchg inc arpl pop jne push mov cmpsl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp xor mov inc out lret xchg dec sbb cmc add leave loopne jae nop lods gs dec sub fdivrs fnsave inc mov mov pushf not je fidivl dec xor or pop (bad) pop jnp mov jb je pop andb pop inc mov dec lahf in (bad) mov adc lods and jmp pop pop push sub add jne sub ret dec lahf pop insl ret ss jne xchg out dec dec rorb sbb add test xchg imul lds and jno mov movsb andl push xor fisubr mov and push mov mov sub add xor xchg xor js adc xor sub xchg pop aaa dec sti sub pop mov add wrmsr cmc mov icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div and add inc loopne mov fisubrl loopne dec scas mov pop pop and xlat mov mov mov cs mov popa lods dec jp push adc ljmp pop xlat int3 pusha mov std cltd cmpsb lods leave ds or xchg inc push xchg scas push cltd adc mov cs loop jle int3 lods xchg es out outsb mov popf pop pop es sub imul mov sbb add adc mov adc notl xlat fdivs lret add int3 mov imul dec into iret push mov sbb rorb dec in adc mov xchg (bad) mov ja xor rorb jne ficoml int imul cmc loopne or pop mov xchg xchg inc sbb ret jne xlat aas fucomi push shll cmpsl fwait (bad) aad scas popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp jp add or jne dec mov mov xchg sbb xchg cmp das repz cwtl pop aad pusha jo jo int3 call fwait jp push jecxz sarb insl xchg loopne pop dec dec push rorl jg test sti adc sahf sub mov andb jmp jnp mov push mov sbb lret fild pop ret dec adc test xchg adc loopne cmpsb and jbe repz xor push pop cmp mov mov inc push imul in std adc or dec pop mov adc fidivrl sbb es in int3 dec pop into xchg daa outsb xchg mov fs push jp (bad) enter dec outsl xchg add sarb insb cmp push mov dec daa inc dec mov jecxz xor xor push dec push mov lods push push pusha pusha lock add enter jo push (bad) call shlb pop cltd js cmp ljmp loop icebp repnz loop and leave mov (bad) xchg outsl fs (bad) fcompl repnz mov cwtl movsl loope out roll mov mov add push ja jae push mov loop sbb roll jle mov jb (bad) jae ja jne out and jle xchg repnz push add arpl movsb imul push adc subl cwtl mov xor mov out jecxz aaa cs inc jp popf mov enter xor pop leave mov aam dec sbb mov fwait test das ja cmpsb in push fisubl leave movsl (bad) in (bad) pop lret and jnp int jns andl ret push add int cld sub jo mov dec sti ja lock es dec add xchg fdivrs push xchg jno jae fidivl iret iret out in in in aam push push cld cld (bad) xchg mov ficomp sub aad test aad jne into sub inc outsl sub pop lock test lret insb mov xor mov mov ret nop pop lret cmpsb dec (bad) adc gs lret scas jg xchg js pop inc mov rolb jae push mov add cmp push loop xchg fisubl mov push pop mov outsb or insb add ss roll cmpb in dec push movsb lret ret out jne cmpsb dec add fmul mov fldt aaa fidiv mov dec mov pop adc cmp or (bad) jno (bad) (bad) xor cmp jae pop xchg pop jae subl cmp xor dec push lahf add pop mov arpl stos cmc or adc lea mov xor ret adc adc xchg adc pop pop clc clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf dec inc mov pop xchg add push xchg and (bad) hlt sub call lods mov std aas mov loop push loop pop stc and cmp jbe into jl mov mulb fisttp scas add adc les dec mov xlat clc xchg sub cwtl fildl mov mov jo mov lret mov dec scas sub jns (bad) push cli add jle mov dec and fidivrl and xor add mov int and mov rorb mull mov cmpsb imul push jle loop and repz mov pop cmp and or cli movsl mov (bad) popa neg loope xchg lock insb cmp mov repnz or fucomp mov icebp and xor test cmp add setg loope cmc cmc mov pop mov repnz fldenv dec and (bad) dec out nop mov xor push mov adc popf and into xlat xlat sarl sub or and cmc cmp mov sub dec insl push movsl inc xor push mov lret in jmp outsl cmp mov (bad) xchg pop in inc daa add push dec mov aaa xor sub out sbb adc mov cmp add in push in js rcr jnp add sbb sub mov dec xchg mov cmp inc stc xchg stc pop mov xor lods inc lock push jae inc pop xor add in pop jbe inc add in xor mov test xor (bad) scas xchg and cmc fildl or mov iret cwtl outsb push push addr16 stos or or je mov out sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos dec jae ljmp mul jb mov push icebp cmp sarl jnp (bad) jne jge daa sti cmp lcall das inc ss stos fisub mov ret mov mov push fcomps xor cmp xor push (bad) fdivrp andl jb sahf jmp lea push jno into jl (bad) jno cmc std push push movsl (bad) xor (bad) test mov loop lods nop test mov scas clc sub mov ret jae lock repz jnp (bad) jns fwait imul fistp incb mov lock loop mov lret push inc aaa rol imul in adc inc lea (bad) in sbb divl jae push inc daa pop and add jle loope int jecxz jl roll popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) pop push xchg data16 enter push stos jg adc jno (bad) inc nop hlt test out imul jmp mov and je add mov push icebp cmpsb mov insl xchg mov mov jnp fsts sub dec icebp mov pop popa cmpsb xor insl mov arpl outsl adc frstor sbb inc pushf loope inc lcall leave xor dec xor push les sbb push mov push mov cmp pusha ss mov sbb fnstsw and ljmp jbe std int3 mov dec jg fisub xor addb inc arpl mov xor cmp dec jmp popa push sub dec jae out (bad) xchg xchg push push test dec mov daa sbb in or mov add xchg xchg loop scas scas add nop nop movsb movsb push push push into into test mov dec bound cmp pop add jecxz dec ss push lods dec inc dec inc repz jnp jecxz cltd sub push (bad) add add mov xchg loope (bad) out push int jns outsb pop xlat imul push icebp stc sbb call mov cmp cwtl test push mov xor (bad) push push cwtl imul aaa add mov outsb inc jmp daa push pop push jns (bad) rcll data16 bnd daa push push lret lock fwait cltd push mov mov jne mov jns pushf mov daa mov sub (bad) mov mov or imulb jae sti repz rolb jno int lds mov push mov into mov xchg out popaw ja push insl inc rcl mov adc mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp push jp rol outsb das jno or shll jg mov cmp inc cmp loope push sub mov inc mov clc lea push lret scas movsl inc loope xor adc push mov in arpl js sub aaa scas cmp xchg pop (bad) push nop xchg les cmpsl pop fimul jmp jmp clc add lds cmp (bad) loopne sbb testb stos jp mov lret (bad) push repz and jmp (bad) jne popf fimul daa fwait test add pop outsl notl out push adc adc mov sbb or leave pop or adc add or nop push xchg jmp pop adc add jnp xchg fstpl cmp add aaa pop lahf jns xchg insb add inc orl sub bound hlt push jnp (bad) jg data16 imul insb push push adc (bad) ja xor mov xor ret leave leave ds lcall xchg mov (bad) inc cmp mov insl ss scas mov inc in lea adc cltd gs push cmp out mov das bound xchg dec in in test add cmp push (bad) xchg scas into push xor jle xchg dec loopne call push xchg scas out mov fisttpll stc loope adc (bad) loope add (bad) cmp cwtl test lcall popa jne and fwait push mov mov mov add xchg int adc sub pusha in popl or arpl push or sarl inc pop insl (bad) scas dec loop ds fiadd (bad) call (bad) fnstcw movsb and inc in notl loope mov inc cmp stc (bad) mov and out (bad) and sbb jno jp or outsl std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp inc dec dec add cs lret or daa sub loopne fcoms xchg lret or bnd call pop sahf clc fistpll cmp sbb sub jo xchg ror mov jae pop dec daa pop ret add repz xchg imul jmp push push add call test icebp in mov pusha dec or cltd fwait loop mov andl xchg in mov or sub fisttpl xchg insb test testb out outsl ret nop stc arpl aad cs mov add xlat (bad) xchg lcall mov push test js xor adc sub imul fnstcw xchg push mov dec dec (bad) xor xchg jbe gs pop sub mov push and out jnp adc icebp or xchg jb sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov cmp add (bad) cmp addr16 lock rcll mov rol cmp scas jae pop imul push push fmul stos add cmp insb inc pop jbe and pop (bad) les pop push sub das xchg out mov jnp sbb (bad) xchg push negb sbb adcl and sub (bad) addr16 cmpl or lahf jae iret and fcom test or lret add fimul fsubrs stc xchg pop cmpsb jle,pn int dec adc cli sbb xchg dec cmp aas jne xor pop xchg icebp in popw sub and push fcomip cmc add sbb cmc mov incl repz (bad) cwtl enter popf fnstenv (bad) movsb gs loopne sbb or sbb rol shll es data16 mov js in in lea pop insl aaa sub dec cmp add rorl add and mul jne rol bound lret rcr add icebp mov aas lret add mov push in pushf rclb inc mov jae test and aad mov insb hlt fadds pop dec sarl mov cmp add enter jb movb fcmovb bnd popa (bad) adc inc out cmp into cld dec jns cmp nop mov mov pop mov cmp jg (bad) iret out or jp add icebp subb and adc mov mov insl dec jge leave jb out int test js decl mov dec hlt pushf out jl adc mov push inc nop mov in and sub negl mov pusha pusha lock add enter jo push (bad) call shlb sub or pop push leave inc and ret ljmp cld enter repz clc mov repz mov mov rclb and mov movsl adc enter cmp fsubl adc aad mov mov push pusha cwtl aam inc ds add sbb add out inc test aad stc or inc xorl or or subb xor lret jle ljmp ja mov add lods imul imul stos lret pop clc mov cmp lods popf insl sbbl lret pop sahf lds loop test outsb repz arpl push push pusha loope (bad) loope add lret cwtl out aas mov jl dec sbb add dec pop ficoml mov fwait or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc (bad) or arpl repz add cld mov add imul enter cmc jbe jmp xchg xchg pop hlt mov jp mov fidivl inc adc lret push xor cmp repz cmc out adc inc xor xchg data16 sbb sub sbb sub xorl (bad) sub lcall cmp insb adc lcall cs adc in scas inc xchg das faddl sbb mov mov lret pop fdivrs addl fldl in and or cwtl mov jecxz adc and jp and pop push test nop xchg mov mov mov jo adc sub push inc lret xchg dec push xchg or adc adc mov pop xchg lcall mov adc xlat xlat adc (bad) gs daa pushf pushf cmp mov je movl sub or js ja dec sub add sarb in data16 pop stc lret mov cmpl mov hlt or (bad) sbb add jb or jbe out xor gs in push mov jg out loope lea (bad) (bad) outsb fisubl and inc pop fsub cwtl test inc and xchg xchg sub divl xchg fnstcw ret test iret lcall xchg scas xchg push add iret mov add jo (bad) fldcw jle (bad) lock mov fild lods fidivrl mov decl cmpsb xchg call les pop adc popf push and (bad) inc add int3 xchg fwait mov inc or movsl (bad) repz adc shrb mov mov xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp mov aas dec std scas sub repnz in jge sbb not xor insl clc adc jl sub mov push pop icebp or mov add cmc punpckldq mov pop sbbb in subl cmpsb popf jge out cmp mov add inc stc push loope enter adc imul aad sbbl sbb int xchg or sub inc test popf imul sub in sbb cmc test das rcl sti es lods (bad) adc inc lods and nop std or nop jo jecxz and adc jl fdivrp pop sub leave enter xor push popa std sbb leave (bad) mov inc dec push pusha daa inc (bad) pop xor mov fsubrs rorb xorl hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp pop outsl je mov cmp cmp flds ljmp sbb movb fadds lret xchg out cmc test add ss sbb sbb sub sub or mov add cwtl mov ja xor pop in or imul orb incl in dec pop inc popa and jno mov in (bad) std pushf iret repnz insl xor pop jge mov lea cli lret pop repnz daa cmpsl pop daa sbb xor movsl xor shll add ja (bad) mov pop (bad) popa inc jns cltd xchg jo outsb outsl data16 and adc pop fmuls inc repz xchg pop stc lret ja push rorb push sbb push fcoml push mov rorb pop sub mov sti or loopne scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu (bad) lods (bad) fisub adc push sbbl pop jecxz adc jp lcall or jmp ljmp cmp jae inc jle aam (bad) fiadd xlat popf xlat xchg mov mov or ljmp pop lret hlt frstor jle jmp rol and int3 loope aam jb test fs xor decb fcmovnbe cmpsl and xlat loopne dec pop pop cli lods ss call lret xchg in add cli or xor lds cmpsb icebp fwait (bad) clc insl push bound xor pop stos and sbb push sub clc fnstenv push popa out clc inc sbb sub push in pop xchg outsl aam dec jge (bad) ret push add enter insl jae jp scas ds mov mov mov bound mov cmp nop test dec mov movsl cmp pop sub pusha pusha lock add enter jo push (bad) call shlb sub (bad) test xchg mov push push movsb jb es call and xchg das push mov jp lret mov fninit push aad push stc leave mov mov lods rorl fisttpll out sub mov test lock mov fdiv enter fwait lea adc xor push cmpsb enter movsl into cmc popl sub mov loopne push inc push sti fcmove jnp pop push or cwtl sbb scas mov enter lods int inc rorl mov dec adc push outsl aas push jno cwtl movsb mov leave mov xor add popa ljmp xchg (bad) ljmp aam (bad) xor in dec jnp add xchg adc dec push pop inc arpl aad repz hlt add pop xor jle fisttpll out in in in aam push push cld cld (bad) xchg mov faddl sti fs fdivl or push xchg repz add sub inc data16 dec movsl fnstsw dec cmp mov cmp in js add adc sub xor pusha lahf decl test push outsb mov arpl inc jl mov and sbb xchg cld pop ret stos shrl sub movsl repz repnz nop (bad) xlat pop mov fbstp loopne adc mov mov jno dec js mov jmp dec jae pop and addr16 fistl mov adc insb sbb hlt inc add add nop ret mov xchg cwtl push mov out push add pop mov orl dec out mov add add mov mov jne mov xchg movl insb je push lds mov (bad) aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl pop insb pop jb xlat aas clc scas and in dec inc std test cmp test int3 add iret add pop popf inc mov jae jno xchg aas jne int3 mov and dec mov add lret jo jmp je xchg std pop mov xchg mov fldl adc pop repnz cmp cmp cmp mov mov sbb add or xchg cwtl jg shr sbb cmp add cld mov ljmp int mov test pusha inc mov jmp repnz lahf iret test popa adcb sbb inc dec (bad) mov stos test dec pop lock fiaddl aaa mov cmc in dec push xor mov bnd xlat das xchg rol test xchg ret test mov cmc mov pop mov repnz ret dec dec push into mov aam adc cli inc fstl cltd and dec test mov out test addr16 lock or in mov mov jmp je cmpsl mov add xlat sub xchg les fdivr lahf movsb push add inc popf pop inc lret push xchg and jns call mov outsl cmp add lahf and adc rolb pop sub cltd cmc sub dec stos sbb jmp lock add (bad) into pop lock mov mov aad out mov mov enter pop or ja nop inc jbe in inc test xchg nop ret dec daa xchg int3 pop ja jbe lods pop xor mov or mov cmp lret out in loope cmc pop dec or pop mov xorl imul xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa cs pop push pop jae call mov pop shrl negl inc idivl jns cld xchg push pop lret add xchg push cmp lahf xchg jp icebp xchg cmc xchg mov out andb xlat jl scas pop sub jno test xor fdivr cs popf and sub push or mov xchg mov mov and sahf daa (bad) jmp push ds cmc adc adc sbb sub xchg outsb adcb xchg (bad) cwtl stos dec xchg cs mov rcll push lcall sbb mov push mov test mov and vpmaxsw sbb jne mov pushf loop inc mov (bad) das int3 mov aaa xor incl in jl mov push test pop and subl dec icebp repnz pop insl cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl inc cmp pop jl xchg adc cmp mov (bad) in icebp sub pushf xchg (bad) mov dec sbb push jae pushf adc mov push or pop jl push mov dec (bad) mov inc push scas movsl orb push imul mov out mov mov adc rcrl lahf (bad) jae push mov aad xchg aas daa inc sbb sbb xchg pop movsl mov sbb inc addr16 in xorb cmp mov add mov enter adcl sbbl cltd orl cmp sub ss mov cmpl inc ljmp push call mov (bad) rorb test daa lret gs xchg out sarb sbb pop push scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov aaa sbb arpl and jb cwtl xor lods adc xchg xor test mov inc out push (bad) loopne and lods dec and xchg xlat out aam ja ljmp inc lods lds mov mov into push bound and inc add aaa mov fs scas dec cmp lea das inc pop test aaa or fistpll add add mov ljmp cmpsl jne inc jb daa mov popl scas inc push inc mov jmp popf dec xor and sbb test (bad) xor outsl sbb xchg out pop sbb lods and or inc jecxz add stos pop (bad) mov adc lcall mov ds jle jae inc push out or xchg arpl sub je enter inc or addb xchg pop mov jl sahf sahf jnp in movsl movsl test dec cmp arpl call adc imul push mov jae sub (bad) jmp insl pop add adc fistpll xchg repnz mov add inc cmp inc mov sti mov cmp insl jo pop mov bound mov push loopne hlt mov sti lret aam insl push push and sahf movsl pop aaa fs xchg daa (bad) mulb cmc insl pop mov pop xor and mov xor icebp add or pop push les (bad) aas (bad) mov inc and mov loopne dec test jle mov cltd std insb pop jg mov inc jmp adc popa fcomps rcrb out mov std aaa inc shr pop jne xchg xchg sbb fmul sub jl sbb xchg cmp (bad) xor sbb fwait pop inc pop movsb pop lcall cmp push sbb vpmulhuw xor mov xor ret leave leave ds jne divb cmp (bad) setg test push aas xchg cmp sbb daa ss ficoml mov adc jne (bad) popf cmp pusha cmpsl fist sbb movsb push add imul test arpl jl inc stos movb aaa lods push scas (bad) rorl lret xchg cmpsb movsl sub pusha lret dec in (bad) dec jo jge cltd fldenv inc pop push stc fistl mov inc xchg flds pusha adc inc mov fnstsw fdivl mov or cmp sbb jns fcomip pop jne and hlt mov lods movsl fisttp insb add jmp nop mov sub mov add test jo xor lds mov repnz stos fisubrl and push test fidivr pop jns rcrb mov (bad) ret dec aas mov and add cli sbb (bad) push push push push and lods lods or jp sub mov out sbb xchg xchg testl mov xchg cltd cmpsl pushf sarb mov je jmp mov fs rcrl daa cmp out add lcall xor mov inc in nop xor fs outsb push insl out sbb dec mov cld sub sbb mov jp stos pop or xchg mov stc mov lcall nop loop fs in aas jg fcmovb (bad) mov cld mov call pop xchg out insl lcall mov lahf iret sbb lds sub pushf decl lods mov xchg out sahf in xor movsb mov mov and xchg jg out hlt leave xchg and and push addr16 test pop cmp add cwtl (bad) mov and lods js pop inc out popf xor int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound or in cmp into sbb test daa push and imul xor and test ljmp out inc sti and in mov pop jmp iret ret pop std mov ds fiaddl or cmpsl mov in sub imul inc inc lahf sahf inc push and repz lods push aam fidiv jg cmpsl popa inc seto rol add inc sbbl push cmpsl lret cmp pop mov fiadd std jle cmc lret pop sbb sti mov arpl sub pop inc xorl dec mov dec lds add insb cmpl int3 add sti fldl and and xor int mov jo mov sbb in inc inc loopne mov js in in lea and movsl movsl and in in add or mov add xchg xchg loop scas scas nop nop movsb outsl push mov lcall dec mov push sub add push mov mov ja fwait pop add pop jmp mov lret pop add mov pop xor jne int3 sub addl aam daa dec in dec dec add adc sbb mov jl or mov adc jb in sub mov mov cld xchg call push xor inc sbb or lahf push call cmp cmc std adc cli cli mov daa push or xor mov add pop in xor das ficoml lods shr mov dec in lahf dec mov (bad) fdivrp mov out stc lret xor cmp adc addr16 loope es cmp enter mov les imul inc cmp in call shlb sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf cs bound cmp and (bad) (bad) sahf push dec gs daa sub test stc out lea cld les mov jp fwait gs stc pushf add xor arpl push sbb (bad) push cmp or (bad) fisubl mov sbb mov loope stc xor (bad) in cli in add pop dec or popa adc loope xor adc jne call sbb cmp les int mov xchg xor mov cmp sbb jo fwait call cmpsl jp xor in sub sbb test push pop mov js and add lcall lea add loopne jns adc jbe dec sub cwtl mov mov lret adc mov cmp rep in in aas rcll xor add out dec dec cmp arpl call adc imul insb push push adc (bad) ja xor mov cld xor fstl ss js sbb cmpsl mov pop int cmp dec popa fcoml jns shr inc xchg lret movsb dec enter pushl jno push xchg cmpsl inc enter or (bad) fld jmp cmp add je in xsaveopt xchg sarl call inc test enter clc sub outsb notb loopne xchg insl out (bad) mov std and (bad) das cs jmp xor jle dec sar cmp add enter in int mov mov test pop fs fnstcw mov lods xor xor mov enter shrl jnp sbb int mov inc push xchg xor movsb movsb (bad) (bad) mov out and sub xlat aas out push xlat jp rorb dec mov lds std mov frstor test xchg rorl mov cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb sbb mov jnp insb bound lahf mov jnp mov stos cmp cmp repnz mov xor jmp jb outsb cltd ss insb xchg cli clc jle cmp loope jo xor jmp out (bad) fsubs add shlb orl push and push aas sbb das sub cli jns cmp aas stc idivl or mov in in and mov ss adc ret out cwtl repz ret lret mov cmc pop pop cmp into bound stos jmp es fistpl cmp jbe (bad) jne pop and cmp cmp jecxz jg adc movsb test pusha out movsb iret push cmp (bad) jg pop ffreep dec cmp and addr16 lret xlat cs lret xor push icebp lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl xor (bad) mov lcall sbb jbe in aaa ss mov or mov mov and adc lods sti or add test jbe push mov mov lret lahf jle jb mov xor mov jnp es pop sbb ss xor mov sbb aas xor mov mov and xor std push push add test sub xchg mov gs pop iret xor add add mov cld bound add sub insl xchg repz or xchg je xor rorb lret orl je xor push xchg inc cltd jns fist dec cmpsb fxch jmp cmp sub hlt mov pop xor cmpsl out push or div jmp xchg dec dec jno mov or add rol shll es data16 pop sahf mov push scas sub stos sub pop push dec and xchg cmp out add stos insb lahf jne pushf test cs mov cmp dec cmpsl inc pop nop xchg rorl xlat sbb std cs xchg arpl cli std test (bad) lret mov adcl int3 (bad) pop mov adc or das js jnp out (bad) sbb test cmpsb push cmp sbb mov xor sbb push push (bad) outsl ret ror in jnp scas jnp pop dec adc loope in sahf andl mov jmp or xchg in es (bad) pusha mov (bad) fisubrl adcl sub sub ljmp jg les xchg sahf dec jno and lret pushf jmp mov js sub (bad) jmp xchg xchg fcmovu mov inc addl lock daa ja cmc add jp inc mov xchg test xlat cmp jmp cld in cs push pop adc sub scas or cmp xchg mov test clc lock and mov mov mov pop push lock jb enter jne mov sbb add jmp sub or sub lea add jl cmp es pop rol push lds add cmp jecxz cmpsb cmp js or push fisttp stc or call inc jecxz pop cli jmp adcl and mov pop sbb je xchg xchg popl ss pop nop int3 fdivl jg ret popa lahf cmp sarl mov aaa sbb xchg mov or mov lret gs les int3 cli pusha or inc push jnp lret pushl es (bad) pop mov imul lea aas mov add jp add (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor or (bad) mov out inc sbb je nop add pop clc mov (bad) (bad) dec lcall dec adc push xchg and loop test leave jmp cmp jne cmc pop mov aaa ss adc dec popa divb sub arpl xchg leave lock int in inc aam mov jle mov pop push outsl mov inc cs xchg and stc or push fcoms les adc sub sub ljmp adc dec aad pop dec xchg test dec jmp das ss jmp dec iret pmaxsw lods sbb ss mov aas call icebp pop or outsl mov adc xor mov mov lea pop xor lret mov negb es pop ret pop mov faddl sti fs outsb mov lret divl aad jmp fisttpll xor or push enter or lods push xor inc push pop and lock add inc lcall add push jp dec cmp mov gs jno das sbb mov and dec nop (bad) jl lock je outsl jge add loope mov test out mov lds push ds stos hlt out sub xor adc nop test pop push lret or pop dec mov cmp mov sbb inc popf sti or mov in mov jns sub sub imul pop sbb dec jnp subl xchg and movsb dec push mov fnsetpm(287 repz mov (bad) fildl repz inc cmp xlat clc add cmp daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas add or loop lret xchg pop sti sub pop ret jae mov adc cltd rolb adc inc pandn movsl cmp xor inc cli stos pop adc or aam std lods cmp lds es cmp mov loopne jge sub dec xlat xor xchg jge jge enter ret call xlat pop (bad) sub lahf int movsl cmc cs out cmp inc jbe push xchg movsb cmp sub aaa push ja cli xor into adc inc sub adc mov lcall scas mov add push xchg and and push stos shlb loopne push dec out insl incl push or notb (bad) ds mov (bad) and (bad) movb xor jp out (bad) jne shrl fcoms jle lea inc mull mov bnd ret dec dec push into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl aad inc push push nop das (bad) stos daa mov jne outsb sub test cmp adc movsb mov and sahf mov push push and jp sbb xor es in daa into push cmpsl mov push sarb mov lret push in xchg push add cmp into inc pop add into dec in ret out (bad) mov mov pop sbb inc inc xchg xor lcall push mov inc sti xchg inc cmp rcl imul (bad) and lods aas movsl repz (bad) repnz stos mov out sub push push sbb fidivr pop jae lcall pop mov std inc push inc mov das hlt out sbb and pop ret in out aad push das xor stos cwtl lret push inc and xor fildll adc dec in mov stos lcall mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das adc ss adc fistl rep mov xor sub dec roll mov push and mov inc arpl into inc das sbb mov pop jb fwait cwtl leave cmc xchg push es push rcrl les lret cld push ljmp jno ret mov out jp jg leave jb nop mov addr16 sub pop xchg out loopne fsubr jne pop cmp mov cld inc movl add sbb pop and jmp add jbe out jle sbb and inc std fcmovu xor addr16 dec cmp xor stc popa jbe fcmovnbe add stos (bad) out bound lret insl add inc rcll cld (bad) dec jle pop push repnz (bad) pop pop stos pop stos adc sbb ss fildl (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock mov inc push push (bad) fdiv add cwtl xor push loopne adc rcr mov rolb inc add data16 mov js mov (bad) dec ja data16 mov jae cwtl mov inc icebp mov dec repnz inc leave add pop push mov out repz pop mov push in cmpsb test pop test lods mov cmp push addb adcb adc inc jmp mov aas cmovle test inc pushf xchg hlt imull push dec test inc jbe fwait inc inc mov ret push jmp push (bad) lods push jb or add das push mov xlat rcrl fnsave add mov sbb pop sub xchg lds jmp xlat stos cli push xchg icebp movl fmull scas jae test mov pop pop xchg mov aaa imul out in in in aam push push cld gs or jb xor xchg test in aaa es push into mov inc aam movsl lods cmc push fidivr push or ss lds lods or popa cltd rcrl xlat rcll int jbe xchg push fild pop xchg mov mov add shlb test aaa cltd push push rcrb adc loop aad in cld jmp daa (bad) xor lds mov dec jp pop int3 out aas dec inc dec ds ja inc dec sbb lahf in sub jle jnp stc adc repz lods dec sub add xlat rolb out jb incb mov repz enter imul mov jg jne mov push cmp sub repnz add movsl aaa sub les test push sbbb xchg pop sbb dec cmp arpl call adc imul insb push push adc (bad) aad xlat xlat adc notl lret mov notb testb adc push mov push test sub pop leave out inc dec stc into sub cmp clc push mov jle and lea cmp das mov adc jnp dec aam out stc push (bad) cwtl xor cmpsl jae jnp xchg (bad) sbb lods enter sahf sti js sbbl xor data16 out dec and shll cmp in adc pushf add (bad) xor pop repz sub imul and ss dec xchg cmp test mov (bad) mov pushf pop addr16 loope inc cmpsl mov xlat scas sti xor xor fwait and push fwait xchg (bad) mov stos ret pop arpl mov fcomps loopne and sbb pop adc push pop (bad) rcrl mov div je cmp add setg loope cmc cmc mov je fcmovne (bad) ss and mov cmpsl mov sub jmp jl sbb pop jecxz inc pop int lcall repz stc pop sahf mov setns xchg inc xchg mov imul push or xchg push scas icebp fildl test test shr out inc xor mov xor xor jmp shrl sbb inc fld pop cwtl dec jg lret add test jge adc movsb loopne inc mov jmp and xor (bad) and add leave arpl mov cld out idivb fidivl in mov sub fsts outsb lods mov adc call jge imul (bad) cmp push push xor clc mov gs jo sub and push clc repz les mov xchg cmp outsl test inc insb pop aaa mov mov or sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 ss sbb es mov arpl rcll xchg jg jbe aad add test add shlb gs sahf xchg mov push inc mov push pop mov in cld jb xor add test dec arpl out cltd cmp scas lahf jmp in xor sbb jbe pop stos mov call mov sahf cmp and and inc ficompl mov cmovno sbbl mov lock nop test inc adc arpl (bad) or ret loopne push pop or add outsl mov leave test xchg xlat lods add adc push mov xor add cmp lret pop out sarb jae out pop dec arpl movsl int cmp mov movsb into in pop ret lcall ds mov cli fwait mov adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or mov xchg xor xor sub test outsl in (bad) mov into pop sub dec mov or jno mov xor cmp scas push faddp jmp xchg and std xor adc out push out ret insl daa (bad) stc out pop mov sarl fcoml inc mov lock mov push hlt pop xchg out in sbb out dec add jmp mov cwtl test push iret pop jp or insl add inc push lods into sub arpl add mov aaa scas addr16 cmp rolb pop push push mov nop push xchg pop pop ret std sub test (bad) iret test dec xchg sbb pushf int fnsave scas mov sti mov movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov pop ret mov cwtl jge xchg fadds mov (bad) test xlat fs imulb xchg mov mov cld icebp sbb pop pop rorb ss divb icebp mov mov test mov stc mov (bad) fisttpl enter dec aam and sub adc mov outsb xor sub mov add xchg fisttpll test push (bad) jmp scas ret test sbb in jnp pop push test std in pop dec fbld sbb (bad) sbb lock mov lds mov pop push daa dec sti xchg rolb adc dec or call sahf movl pop in ficoml rcll outsb rcrl cmp in add (bad) mov pop aaa (bad) xor sbb mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test cmpsl outsb ss out mov repz mov std xchg or cwtl out dec es dec or cmp inc jno int3 lret fcmovnu pop pop xchg in adc stos cmp hlt push xchg dec nop scas mov pop add adc scas movsl push and imul pusha js mov and inc mov stc dec cltd sbb dec cs pop pop xor je pop popf popa mov imul sub fsubl js add lcall mov push dec mov in add add in cmp pop lret js jae mov das subb and mov cmp inc push or daa leave push outsb call or mov adc scas adc dec jge out in popf popf ret adc pop pop clc clc insb insb push push adc (bad) ja xor mov xor ret leave leave pop mov lods cmpsl outsb repnz in mov cwtl orl mov add lods insl jge rclb cmpsb pop popa xor adc or std xchg mov xor dec jno xchg cmp (bad) sahf push adc pop jb div pop xchg test push scas jnp mov jbe gs xor adcl xorl lock prefetch or test aaa aas loopne xchg and adc xor cs outsl cmp loop outsb je mov xor adc or lret pop dec loope push pop sahf xor fistp imul mov fcoms add jmp (bad) push fs push ret gs mov mov inc imulb mov and shlb mov sub lcall mov imul and (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll jo mov and test or (bad) std js loopne std gs jg out repz and cmc sub dec pop inc push adc mov add stos dec xor pop int xlat push rclb pop ds and lret or mov cmp mov aaa xchg loopne (bad) fimull pop fimul push or cmpsl push mov sti mull adc cs inc mov (bad) insl adc ficom adc je imul and cltd cmp clc (bad) inc insl jo cmp mov out fidivr jnp push pop add das clc divl push testb (bad) jmp jp mov sbb in mov ss push data16 and adc std pop (bad) clc repz dec adc lcall mov mov repnz sbb and xor outsl pop sysexit ss call sub mov push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss (bad) lcall adc pop aaa xor push arpl dec hlt mov or mov lock ja mov cmp sbb jnp inc xor sbb in out (bad) pop in leave sub adc push mov push stos out xchg xchg jno dec xchg mov sbb (bad) sbb arpl test ljmp stos movsb mov shlb inc fwait jb xchg ror clc rorb and mov jecxz das push aad cwtl push fdivrl aas dec sbb inc movsl lret ret mov test rorl xchg int mov sub jge pop push pop and rclb xor jnp mov or clc fsubr fs mov inc add cld cli xor or and xchg xchg dec dec jno mov or add rol shll es data16 dec mov push shl ss (bad) pusha xchg in in jg jae imul cmp cmp es inc push sub jnp dec bound dec push fs push push xchg push sbb rclb mov jno test pop out aam mov jne add or push aad jecxz push push repz mov sub inc loopne cld mov mov push outsl daa push xchg cli push les fimul xor test push mov jns cmpsl mov xor xchg aaa clc pop jl fwait jns gs xchg jno jp sbb sub xorb out cmpsb mov sub jle stos fmull xchg sub adc sbb lea sti push or adc repnz ja jae mov and dec ljmp jmp ret std std adc fst leave repnz inc pop sub in or xchg xchg fcmovu mov inc addl lock add enter mov enter jbe outsb dec imul outsl daa mov icebp fadds aad stos (bad) fldl dec sbb jo cmc std imul test cmpsl fistl (bad) pop pop push popa and shl sbbl loope lcall push ja cmpsb aaa mov cltd push aas sbb sub insb dec jnp arpl insl pushf adc fwait test sti ret push rcll imul lods imul sbb negb ljmp out mov xchg xor mov lods dec imul xchg imul and leave mov xlat test fisub mov adc insl sub add jbe pop sub sub jbe cmp test adc inc out xor push sub in out mov adc sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp jp outsl pop dec jbe xlat cwtl das jl cmp adc push jmp add mov xchg subb pusha mov adc jae cmpsb popa aaa sub and xchg mov dec (bad) push xor mov iret subl mov or xchg pop jg inc lods sbb add into stos pop das or jbe cmc jmp push insl jmp push imul rcrl aas test out arpl mov add aad add loopne jp sbb mov sub movsb cmp mov mov les out adc (bad) mov fisubrl std jns loop (bad) xor mov jb jo (bad) sahf mov jnp inc mov popf dec leave push nop popa aad inc lcall jns aas ljmp and rcl inc into mov fdivrs add fs outsb mov lret divl aad xlat adc js fs cmc mov rcl loope sar push pop leave inc jmp lcall jns mov fldcw sub ljmp inc sbb sbb pop mov in enter jle (bad) mov cs mov dec lcall rcll pop and ja dec adc sub jne or adc jge mov inc sbb xor stos add (bad) add jp int3 jp jg sub inc pop hlt inc xor cmc dec out arpl cmp mov (bad) mov inc imul insb ss stos sub lds mov jle aaa or enter insb jo mov fistpl add pop cwtl leave psrlw popa xor xor adc aas cs adc cmp dec daa push adc sub cmpsl cmpsl jae (bad) test jmp rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) stos popa mov sub out dec mov faddl mov or leave adcl pop hlt std lods push add xor lret jne cmp mov inc es pop jne add movsl fs cmp push inc test dec and xchg pop (bad) adc mov fucom push (bad) or pop xchg jl xchg fs push cld cmpsb inc xor pop rol lods add cmpl bound repz mov sbb xchg adc shlb cmpsb imul sub pop in mov call aad loop lcall adc shlb add pushl (bad) fldl sbb rcll pop imul xchg dec repnz loopne pusha push inc into lahf pop lahf test (bad) xor pusha jl jns mov jmp mov fistl mov push mov fmul into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec xor mov icebp push (bad) mov mov insl icebp push jle and dec inc sti int3 stc inc mov lret aas in lret ror jecxz jnp into mov and xchg mov repz mov add je mov adc fldl lahf popf lds mov mov scas (bad) sub fisubrl push pop inc xchg add call pop outsb pop sbb stc mov dec imul add sbb imul inc (bad) adc fsubs les and sbb cmp fisubrl cmp inc jb rclb push in push aad jecxz fistpl sub dec cmp lea push orb rcr dec loopne mov jmp jns jg bound adc sbb mov clc mov pushw ficoml push and cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or pusha fwait dec xchg pop loop,pn lock aam jmp push test int pop jl addr16 adc lds bound lea adc sbb repnz cmp repnz sub outsl popl imul movsl push xor pop pop iret stc stc pop popf jns push popf sahf nop movsb test and sub stos (bad) xlat push pop push adc sbb xchg data16 cld sub in mov clc cmpsl pushf cld lods (bad) xor ja int push scas mov push das mov mov dec in xchg mov xor pop adcl vpmullw cmp xor cmp cmc adc jle repnz clc pusha xor push jns add or sub cmp loope sbb shrb cmp jb and (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock add out out add xchg adc mov shlb enter xlat scas dec in syscall in into loop cmp cmpsb imul lea push pop hlt int3 lods fistpll jbe dec int3 pushf sbb push in cli adc inc fdivrs pop shlb das pop ljmp sbb loope xchg and fisubr call mov in mov jbe add (bad) in mov push push aam imul dec and pusha mov jge mov (bad) mov movl sub fcos mov xor sbb je inc rcrl pop pop jno test sub xchg call jnp gs lea dec test xor dec enter mul insb or mov cmp lret mov (bad) fnstsw push movsb sahf dec mov (bad) pop pop xchg mov aaa imul out in in in (bad) scas lea sub xchg jae movsb dec cmpsl (bad) add push in scas xchg or inc into mov and ret jmp mov fist pop je inc movsl in xchg mov dec out cmp mov nop fldt inc pop lahf push jbe subb adc (bad) xchg push (bad) pop cmpsl fildll xor mov cmp pushf fsubrs push xchg je adc pop dec push pop sahf pop and out and data16 push xchg aaa pushf mov insb jo imul mov push jnp pop dec dec xor dec dec mov sub or xor leave xchg mov and mov lods (bad) cli mov sahf enter neg mov imul lahf addr16 data16 dec mov rorb and stos sbb arpl inc xor and xchg mov sub test cmp arpl call adc imul insb push push adc (bad) aad fs popf (bad) and adc hlt popa xchg sub das stc ret cmp inc dec sbb orl in test jns cwtl movsl push jg sti test loopne mov sbb ljmp jne mov test mov mov jmp add sub loope or pop js pusha cmp add gs imulb pop adc push stos outsb inc movsb mov insb lods push jbe fsubrs fild pop jl mov add dec in ret adc sub aaa inc mov (bad) fwait mov aad xchg jecxz,pt pop dec mov inc jbe sarb adc push fcmovnb loop (bad) jns ljmp ret in test iret andl in xchg imul dec (bad) mov mov lret fidivl xlat dec fdivrs fcmovnu nop push pop cltd sti cld push sbb leave leave ds jne divb cmp (bad) setg inc xor (bad) movsb or pop lahf xor cmp mov jnp test je addr16 inc cli and mov jne xor (bad) mov cmpsb scas shl ret adcb push xchg push jb out push ja call loop sar jno xlat aaa rcll lock mov repnz pop mul inc je lods scas fadds ljmp xchg or fmull into and sbb iret mov movl sbb push sarl loopne int xchg insb xor ret lock or jnp pop mov cmp out jne pop jle dec or xchg or mov jmp cmp jecxz xor dec in mov pushf cmpsl (bad) cld cmc inc mov cmc and inc or cmp pop addr16 rcll push and lods lods or jp sub mov out sbb xchg xchg xchg xchg (bad) jmp scas adc lods jns dec adc mov aaa in and mov push jbe stos push mov int3 xchg es sub mov lret fldl ds sbb pop leave adc rolb mov into add (bad) das in inc add pop jl add jbe lock push fcompl lret cs xor push jo inc mov mov scas cltd sbbb inc iret mov icebp mov (bad) cmc xchg rcrb jno jae xchg push jnp cmp fbld xor mov sbb cmp adcl jo dec and inc out movsb gs shll into add daa push or and add cmp cmp sbbl insb shr cmp sahf shrl addl orl fnstenv push jecxz xor lock cmpsl adc in aas cld in adc mov (bad) jl push ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das mov dec negl scas data16 and mov and xchg ss rolb sub jg lret xchg imul pop cwtl (bad) (bad) dec movsb cli inc sub and mov push stos xchg sti dec outsb mov mov and or and mov sbb ja xchg sub js gs sub ss out jo jge mov mov jnp mov rolb stos pop jg loop loop ret xor icebp (bad) xchg subps xor push in xchg cli test dec clc ror js scas imul mov xor push (bad) test ret (bad) mov fidivr movsb stc cmp mov test xorl or (bad) mov sbb ljmp sub into movl mov mov push out mov lea outsb push fwait xchg mov js in in lea and movsl movsl and in in or mov add xchg xchg loop pop cmc aaa idiv out pop pusha notb cwtl or cmp lock push or cmp lock mov aas cld xchg mov in cmp pop mov sub sub inc adc mov cmp flds pop outsb mov dec adc rorl mov bound (bad) sbb pop mov pop push mov adc pop jp add pop mov lods mov outsl inc pusha xchg iret dec jmp gs xchg mov jo push inc jb sub fwait (bad) cmpsl mov push out sbb negb roll lock ret pop mov jae or dec fisubl test mov mov bound mov mov mov mov mov sbb es and dec pop loope sahf inc jmp shl arpl gs add es jo push (bad) call shlb add sub fstpt sbb mov or add outsb jge cmp xchg push pushl out lcall sub or insl mov out dec mov dec push push jl or shrb cmp mov jo repnz inc adc pop inc insb aam and cli sub clc inc outsl fcomps sbb js cmc dec push (bad) cmp jecxz xchg sbbb xor pop inc and insl sbb or bound inc push js rolb ret pop int3 pop inc enter cmpsl inc loop dec xor mov arpl adc push adc loope pop jae rclb or cwtl sub enter xor out sub xor push cmp jp inc push (bad) loop (bad) repz cld lods pop fnsave cmp mov pop adc add jg push mov in movsl test dec cmp arpl call adc imul insb push push adc dec inc icebp adc pusha dec mov jp mov pop stc sub mov lock mov fdivrl inc jecxz add out xor outsb jecxz orl push xchg mov mov (bad) mov pop and call push and (bad) mulb push xchg mov mov jno xchg loope jge xorb mov cwtl jbe or int3 in fsub push push jo mov push out adc mov js in in mov iret pop rclb popf out jno sbb scas add gs mov mov les xchg xchg adc fsubs xor fsub and bound (bad) lret pminsw jl jge nop pop push and fiadd (bad) sbb rcl mov (bad) inc enter lea and push scas fnstsw (bad) (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg repnz cwtl lret fistl mov adc ret fsubrs push push and mov je int3 dec lcall push pop div jg push sub bound lods mov aas cld imul (bad) into add fbstp sbb xchg mov sbb xor dec sbb out push sbb mov xor xor xor fcomps jbe inc in pop jmp inc adc addb xor inc cmp and cmc scas (bad) enter sbbb andl dec and mov pop inc movb xor or out xchg add mov movsl vpminub cmp iret inc jp out mov lea cld xor mov cwtl fcmovnu aam jmp out rol push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait lock adc mov daa add sbb lret add and mov ret (bad) mov in cmpl adc loopne lcall dec dec mov mov fnop sbb mov xchg mov sbb loopne fnsave cmc ret pop wbinvd mov push jecxz dec (bad) mov movsl xchg lods test mov inc lcall les test xor add mov pop inc scas adc dec push lret mov add mov sub lds and enter xor testl push inc inc sar xchg negl mov lock mov mov mov lock repz push mov cmpsb andl and das cmp mov xor xchg sub test pop pop or div jmp xchg dec dec jno mov or add rol rcr jp mov (bad) cmc popl cli sbb mov mov cmp ficomp loopne xor xlat xor out fmull mov pop or cwtl div scas mov cmpsl push inc popa rorb jbe lret repnz dec iret test test insb pop fidivl (bad) insl aas mov les ja push dec mov mov cmp out pushf sub lds div cmp xchg adc mov push inc push int lock mov and stos add pop fs adc mov inc fcomp aam leave add adcl inc add and rcrl or popa mov jmp test scas mov jnp push add sbb push lea push xchg adc test loop lods inc in (bad) les outsb inc cmp pop pop push mov mov xor test cmp adc (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock cltd mov fdivs aam cmp cli mov push andnps scas add sub (bad) sbb scas adc sti aam call sbb test mov ja mov loop push call jne or and push fisttpl loope pop mov cmp push push push clc fcoml sbb ficomp (bad) in test rol mov test cmp fsts das aaa mov lahf inc jae or add adc (bad) adc cmp cmp or push loopne mov lods (bad) inc sub cmp stos shrl fmul insb sub jmp hlt sahf xchg mov mov adc mov pop inc pop adc cli dec push add ret clc add iret sti or or jle into pop rcl mov call shlb sub fstpt sbb mov or inc inc dec dec xor jl sahf gs xchg ljmp imul dec adc push and push pop (bad) idivb movsl jno movsbl aam mov mov test jmp mov cwtl mov xor rcl mov hlt add add or pop dec into cs or add pop repz xchg (bad) sarb push and pop pop cmp ljmp fistp mov push stos add and xor fidivr loopne in jo and data16 dec cmp les sbb in mov push pushf call adc xchg jl movsb scas mov into lods daa es out adc lock xchg lcall (bad) push adc mov stos mov aad roll push (bad) xchg lahf xor push and fild add dec mov out flds test jno mov add sti fs outsb mov lret divl aad mov xchg in icebp icebp adc mov mov sub push (bad) imul dec cltd lods mov insb sub test scas cld (bad) pop scas scas xchg sbb popa (bad) out mov push mov sub push addr16 cli sarl xchg shrl or sub dec mov or adc clc scas jl cmpsl incb js sbb loope je cmp push loop hlt enter loop js nop jbe xchg fs repnz pop xor mov outsl stc ds (bad) dec aas sbb mov cmpsl pop push dec cs inc imul out ds insb iret stos out inc add mov sbb mov inc insl cmc hlt sbb adc imul je xchg stos mov int jo mov stc xor push fs pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas fdivl jno gs stos mov and cmp xchg jmp cmp mov (bad) popf inc jo add and sbb repz jecxz push lods xlat mov loope push pop inc jb fildll icebp inc xor mov fmulp movb cmp test inc std leave cld cld inc (bad) sbb imul ficompl add jg cmp out xlat popf xchg xchg addb cmc out push xor pop lods pushf (bad) scas lods xchg mov push xor rclb (bad) (bad) aaa popf fcmovnu xor repnz cmp ret out outsb stc push fs mov clc pop adc popf shrl test iret movsl imul pusha mov inc sti clc icebp lds adc push mov fbstp insl shll mov (bad) mov inc inc lret jl aas xor in pop mov repnz ret dec dec push into cs lret mov mov hlt hlt icebp icebp stc stc loope xchg adc sub sub (bad) leave or int3 adc push into lahf lods bound repnz or das mov rcr int add int3 push or jmp mov dec lcall mov xchg push adc adc mov pop aaa dec sub movsl sub out dec in or mov cmp xor pop int3 add cmovs mov push montmul cmpsb inc in cli cmc adc cmp leave cmpb cltd adc sub shrl cmp adc fisubr dec or and enter xchg loope mov outsl fisubrl dec (bad) mov adc jmp push jmp adc cwtl mov and xchg or js outsl mov add scas and es xchg cli in cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound sbb inc jae cmp call pop cmp (bad) sbb cmp (bad) aaa sub popf pop fiaddl popf cmp fwait xchg andl xchg jae mov jno outsl addr16 hlt sub jg jb push mov jae iret outsb loopne sub mov imul bnd cmc jo cmp jecxz pop clc dec or or sbb lods jno push int push aaa mov sbb movups scas lods in popf dec dec aam lea jb,pt int3 and int3 adc sti imul gs inc xchg push mov andl mov jmp test addr16 inc mov aaa pop cmp sbb repz fsub mov aaa lods test and stc push call insb lea dec fcoml cmp test repnz inc sbb or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock pop fisttp or aad mov jmp notl pop adc jp pop daa mov fmuls ss insl (bad) jmp inc sahf (bad) in sub cs xorb push push orb prefetch pop cld mov insl xor sbb jne add jbe dec dec adc push into ret (bad) mov ret mov pop out int3 int sbb mov out insl fmull movsb cld push std mov xchg mov add mov push (bad) pop cmpsl (bad) and movsl gs mov jb add rolb hlt fnclex lock fstps mov jae decb jnp rorb sub fsubrs popa pop push inc icebp add pop icebp call (bad) mov test jmp sahf movsb fildll shr pop mov cmp into test mov (bad) pop pop xchg mov aaa imul out dec pusha fwait call inc add mov jnp les clc std push and (bad) mov clc cld outsl scas dec adc idiv loope push (bad) int jl mov mov (bad) test ss sbb dec or push scas ja mov add xchg mov shl cmp into shrl lods push (bad) mov test cltd in rcrb mov aaa inc sub inc repz (bad) in lods cltd mov loope push roll jns xchg lea fdivl cmp test inc or jl inc fdivl sub test pop or dec out jg cmp jae jmp sub add lret xchg andb cmp mov jae mov jno outsl popa int hlt cs ret js pop jae iret jno pop sub movsl movsl test dec cmp arpl call adc imul insb push jmp sarb jo fidiv loopne cmp jb loope call mov dec fnsave xchg out cwtl stos push test dec ds jecxz es nop cmpl pop rsm pop imul pop jmp ja inc lds pop lods leave sbb inc into cmp adc cmp push insb insl sub mov punpckhdq jo int pop push xchg out (bad) into lcall out das xchg cltd add inc jnp frstor sub jne popa mov jae jno lret (bad) adc ret aad gs std or (bad) movsb mov aaa jnp push cmc scas andb jl inc stos daa in lds add andl add rcr mov int inc mov repnz std inc inc rorl adc or add push lock loope in cmp test jmp sbbb inc xchg mov xor ret leave leave ds jne divb cmp (bad) setg and mov js lea pusha js insl jnp sub jmp mull fmul cli xlat loope jo sahf jmp outsb cmc hlt (bad) push push push insb sahf into out popa xchg out popa mov jmp cwtl leave ja and inc scas push mov sub jle std aaa lock ss int3 lock sarb jecxz inc test arpl push mov repz pop lea aam push fidiv test outsb inc js (bad) hlt dec lock aam lret sti fsubrs cmp pushf lcall mov adc cmp call daa negl push xor pop mov ret js hlt pop imul scas loop mov test jne push ss imul (bad) jno mov stc dec (bad) push push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait dec adc jmp imul adc outsb jge fidivl sub sbb (bad) inc test ret popa shr jge std enter ljmp pushf iret adc ljmp in or out das dec sbb call jns cmp scas lods das cmp (bad) jnp cmc (bad) adc push xchg jecxz sub je das shl addl test add cmp add mov cmc leave ljmp or out out into mov or lods xor fnstsw sahf insl insb or bound jno cmpsl xor add mov push push test mov push js and fwait mov jno jp sbb (bad) loop push sbb pop cmpsb (bad) cmc mov jle stos xor or push addr16 inc sbb pop xor stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound repz test arpl jle rcll stc mov sar (bad) push cmpsb adc add add xor mov inc cmp cmp or sar xchg es outsl push scas inc dec add aas into cmp cmpsl jnp cs loope,pt fwait pushf dec and jmp inc dec push loop (bad) add or mov cld inc adc daa jl dec mov or fwait pusha cwtl dec and fisttpl sahf stos out outsb lret mov (bad) cmpsb std xchg test push cmpsl mov in sbb push jle push pop mov mov xchg inc scas dec and inc adc lea sub test and xchg push and push adc sahf je bound mov pushf bound jbe mov xchg mov loopne mov js in lea and movsl movsl and in in or mov add xchg xchg add sub fwait mov pop adc scas sub cmp jmp cs dec ss movsl mov xlat test push xlat push sub aas insl fmull sub fadd mov mov add jmp or push jae mov jns pusha pop xor roll pop pop loope sbb (bad) or sbb hlt mov mov add pop sub jno jae lahf mov add fisubrl adc mov iret inc cltd stc jmp (bad) repnz sub dec push jmp aam je into cld es ret pop pop adc pushf xchg and cmp mov cmc fidiv sub sbb (bad) aaa test (bad) call xor std rcll push (bad) leave xchg push aam cmpsb pushf aad loope insb in or out and stos lss dec cmp jecxz (bad) lcall add mov push (bad) call shlb sub fstpt sbb mov or cmp cltd mov ret stos call stos xlat dec addr16 (bad) cmp inc movsb fstpt (bad) daa pop push popa sbb int jb mov xor and inc dec cltd out imul jle jns mov enter xchg push jmp and inc xor and jle mov inc faddl out lea ss pop insl mov and vpsrlw pop fsin xchg cmpsl mov in add mov or rorl adc sub or or icebp rcrb mov and data16 les push hlt mov ss popf test loop out daa sar pop pop adc pop or rolb sub or cmp xchg xor (bad) enter adc or push push icebp cwtl test cmp cltd test fstpl movsl movsl test dec cmp arpl call adc imul (bad) sbb stc (bad) jnp loop push mov sbb hlt mov movsl cmpsb cmp test dec aad cmp (bad) jle adc xchg cmpl jo mov sub mov push imul adc stos sub lock adc jae lods xor aad mov int3 aam ret adc push xor lcall fistpll test jmp ret lret pop mov mov insl mov pop out xor enter push out aam je loopne cmp mov lcall scas pop aas dec pop cmp stos push mov rcll popa cld jmp (bad) sti jae (bad) movsl add int push lods push pop and push in fdivl add fadd mov leave lcall (bad) and cmp push aad imul andb notl aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov fdivp les xchg fs mov leave cmp nop orl dec sbb xlat sub nop sub add outsb pop add dec scas data16 or jb mov sahf gs sbb xchg fnstenv pop loopne dec int out shr dec pop stos push cmpsb subl rol test sbb ja int pop mov into sarb xchg jns cmp jne push inc sub sbb lods add cmpsb and mov mov arpl lock fsubrl pop out mov inc fcmovnb mov pop jmp push data16 enter mov jns outsl mov cmp add jae xchg cmpsl jne pop (bad) test aam sbb and push nop push mov xchg sub push xchg push jl (bad) rcll push and lods lods or jp sub mov out sbb xchg xchg jg fstl push daa shlb add xor icebp scas fcomps xchg push xor jge cwtl inc xlat adc xchg shrl ret jg lock or mov mov pop fwait pop xchg sbb lret out (bad) or cmpsb sbb sub (bad) xchg jl,pt sub std lds xchg imul (bad) inc mov sub test out int3 repnz (bad) pop push cwtl inc pop imul push fiadd cmp xchg dec pop mov popf inc cmp sub and fldcw lea nop push mov jnp dec addl stc inc jne dec pop adc xchg inc pop inc in mov mov jecxz out adc nop lods inc pop clc mov inc xchg mov mov sub xchg mov inc imul cltd fisttpll insl in jg shrl xchg xchg push push pop pop or div jmp xchg dec dec jno mov or add push jnp rcrl dec out cmp out or inc adc adc xor sahf nop scas mov stos mov mov lds cs mov outsb inc pusha adc stc int lds or mov jmp cmp push scas ret (bad) js int mov push jno push lods out push out out ffree cmp loopne clc inc dec negl dec cmc push (bad) xor add sbb int xchg movb icebp loop mov ss out jbe mov cmc lcall xchg (bad) mov test xchg inc dec xor xchg adc pop ret adc mov jnp sarb in rorl (bad) adc test jnp xor add push ss arpl ret xchg popf sub lock inc cli dec cs (bad) (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock jmp add jae jp dec fwait or mov sub int3 out or jne pop (bad) jp arpl dec jg aad call dec mov cmp adc lods dec sbb add icebp sbb iret inc mov into and inc dec (bad) adc daa hlt cmp cmpsb dec ja stc cli into out mov mov pop neg loope idiv cmp imul jnp cmpsl fbld popa pushf cwtl mov fmul jp cmpsl jg mov push lock pushf dec push sub xchg fwait cmc or or pop dec repnz dec xchg xchg or arpl or dec movsb mov inc (bad) add mov test jmp or add lahf pop or popf jg pop ror les mov mov ljmp jle inc dec pusha fsubs (bad) call shlb sub fstpt sbb mov or inc inc dec dec xor fsubrl xlat xor lds cmc lock push cli aam adc fmull in lods je insl jg sahf jge sbb or xchg sbb test dec and in dec push jo xor lret sbb mov cltd in stos sbb mov push andl daa inc inc mov (bad) int out insl pop hlt and in pop ja lods pop xchg lcall sbb push jmp stc xchg mov xor loope mov inc aad movsb push imul pop xor xor mov nop mov inc dec aad lcall mov js enter xchg push std and and fcmovb shl jnp popa sub fadd cmp cmp ror icebp stos mov or add pop mov faddl sti fs outsb mov lret divl outsb mov in inc cwtl jbe cltd add add mov int (bad) cmp rcrl adc add jl pop mov (bad) out sbb dec push xor lcall and or outsb iret mov push and dec stc sbb jecxz or js cmp enter push lret add pushf adc push sbb mov mov pop mov xor jmp popl xchg mov xor fdivl imul push aad mov add adc push push jo jl push ds sbb sbb cli fwait ljmp cmp pushf adc dec popa cmp push pop jb scas icebp xor ret fimull popa mov mov cld mov ret leave mov lea add scas pop xor cmp (bad) pop and dec cmp xchg cmpsl cltd addb daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb insl in pushf fst and pop div out or add movsb dec pop addr16 gs xor popf mov sub push xchg stos cmp (bad) loopne and xor (bad) fstpt fmuls jp lahf mov xchg and stos jae loop mov nop nop addr16 push inc sub lock lods lcall ss out push das and call fcmovu push jb mov push daa or xchg pop insb movsl aam mov addr16 repnz stos inc jle xchg jmp sti or jb push pop aam mov cli xchg ja dec outsl or push shr les cmpsl call icebp push sbb sbb dec cli push or test push les push mov sub ficomp dec pushw add pusha clc lahf in test daa pop arpl popa cmp push cs lret mov mov hlt hlt icebp icebp stc stc loope rcr jo mov mov aad scas cltd (bad) bound inc mov adc sbb cmpsb mov cmpsb add imul cmc push js jg mov inc push sub jnp dec (bad) sub dec push pop dec xor outsb or push mov cmpsl ret push dec (bad) inc cmp mov pushf mov lock sbb imul out xchg lcall pop mov icebp push push out inc push clc imul div fimul and clc fcoms pop dec out jo xor add sbb inc push mov add icebp mov test adc cmc inc mov mov int3 js lods jno mov xchg pop push cmp std jmp aaa jne jns cmp pop stc and inc (bad) xor lods add stos jbe cmpsb daa or add lods jmp ret cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test sub lock and adc cmp push mov std push aad sahf ret test jmp mov lret sahf add mov loop ljmp std iret sbb lods pop push push lahf jmp inc cmp mov xchg in inc pop sub outsb cmp pop es repnz xor popa scas movb sahf pusha mov xchg mov rol (bad) cmp divb sub mov test psubsw mov stos mov jecxz ja and clc mov pop dec dec cmp lret pop loope scas sbb lcall pusha mov and loope lret movsl mov sub std stos pop ret stos loopne and xor (bad) (bad) js fadds pop lahf nop xchg cld shr mov push and icebp jae adc (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock add rcrl push aas cli aaa ss xor aam cmp jg jle rcrb mov fwait cltd mov arpl or pop divb std mov stc aas and pusha or dec js add fbstp sbb loopne shr int3 shlb mov jp popa mov jo fldt jmp out dec das cmpsb cmp lea jmp scas in inc sbb jns addr16 stos sbb and adc popw xor xor int3 sub mov movsb test xchg subb ss pop xchg mov movsl hlt dec or cmp imul mov xor xchg cmp cmpsl orl adc jne sbb push stos (bad) orb movsb aad mov add cld jb (bad) (bad) pop pop xchg mov add aaa imul out in in in aam push push cld jne mov sbb fldcw inc adc sub insl jns xor icebp scas es ja cmp pushf cli (bad) repnz push ds mov and inc imul cmp enter sub add mov or ss xchg sub call mov and dec cltd sahf jge cli cmp loopne mov js int3 xor mov adc add or cmp fisubr gs adc popf mov insb call int jg in dec and xor mov mov daa fidivl push adc dec paddsb inc sub movb pop mov mov dec ja sub and ja movsl add cmp adc out insb mov xorl add pop dec dec cmp arpl call adc imul insb push push adc (bad) aad and pop int or pop sbb or mov insl rcl jge push repz stos leave pop inc cwtl out rcrl aaa xchg sbb sub in fisttp or clc enter jno int3 add mov push inc (bad) mov dec or repnz daa push mov jnp loop jbe lods daa cmpsl repz inc mov aam mov dec push aaa sbb pop dec dec cmpsl inc xchg fcoml mov pop push cmp xor jl ja or push lret pop pop or mov jbe std mov sbb push xchg (bad) stos xchg and pop lock or xchg xchg int3 xlat cmp jmp fidivrl (bad) adc xchg inc ljmp pop test (bad) push pop and pop nop aad outsb cld adc notl jmp xchg repnz ret ss dec ret leave leave ds jne divb cmp pswapd loope cmc cmc jmp aaa push and sub scas jno xor jp aad mov mov fisttpl jle fstpl mov repz or dec xchg inc push jl aaa mov (bad) dec loopne ret add jmp aad lock stos int3 (bad) lock cmpl (bad) jmp pop aam test mov lcall scas icebp jge test push mov add and lahf inc mov jb scas inc clc sbb push sbb (bad) push push sub push xchg mov (bad) ret cltd push jo frstor insb neg inc popf outsb jae mov push push xchg gs fiaddl lock ja pusha xchg sahf and mov add adc and lahf stos mov mov adc (bad) jmp in adc mov lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl sbb (bad) sti popf inc popf mov xor popa data16 call mov sub ljmp adc xchg mov stos push sbb clc adc xor push inc out and inc movsl adc cltd cmp pushf mov inc xor fucomp cld mov and popa xorb xchg lcall loopne sbb sub add mov popa xchg sub xor jmp push out mov fwait negl gs sub idiv mov popa and nop sbb aam fdivs fbld jnp mov pop pop in and mov loopne jne pop pop push xchg push (bad) push cmp cs rcl cmp jb daa js (bad) push cmpsl data16 fisttpl fild je dec or sti inc ja hlt and ds stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound lcall imul test xchg push in sbb loope adc mov fdivr aaa idivl xchg repz lar ja test fsubrl xchg cmp push sub repnz mov (bad) mov and aad js sbb pop mov xchg hlt jae push mov mov add sbb jle (bad) pop xchg orb mov sub test call (bad) jae pop ficomp add lods add mov push lds dec xchg push add pop subl insl insl das std mov xor lcall push loop pop jbe pop or mov (bad) fsubr fwait ljmp jg test imul lahf (bad) xchg inc push cmp jo out or ds adc ss js in in lea and movsl movsl and in in or mov add xchg xchg loop scas scas nop xchg mov arpl int3 xchg jno mov push or add sbb dec repz (bad) std xor test pop iret inc cs adc mov mov out stos (bad) pop repz cmp sbb mov cmp int xor adc push mov mov jl rcrb mov je fwait sbbl sbb dec es xor add mov sub (bad) call loope adc outsb mov dec sub hlt xor push fldt (bad) gs das lock imull pushf jno roll nop pop xchg push jae xor in push cmp and pop rol adcl xor inc xchg mov in cmp jne aad add adc clc int3 xchg rcrl and bnd call shlb sub fstpt sbb mov or inc inc dec dec inc loop mov addr16 aad imul inc add test xchg inc aad xorl fidivr outsl fnstenv mov mov shl out loop out leave inc arpl xchg in xor cmc jp adc inc in pop jmp out dec ror push stos out jmp out mov pop movsb sbb bound cmp jns mov arpl popfw cmp sbb add daa xchg arpl cmp ljmp ret sub jno cli fstpt repz (bad) cld daa add xor (bad) mov insb xor int3 leave iret inc pop xchg test pop pop movsl bound loope clc int3 into enter stos sbb popf pop jb in jge out cmp jecxz scas pop lcall sbb scas push jge mov test movsb lock ss sbb mov add movsl movsl test dec cmp arpl call adc imul insb push push adc (bad) mov iret cli mov jno mov xchg inc mov or push cmp push pop roll cmpsl and std popa popa cmp ja push and ja inc lcall cmc test and cmp pop mov mov xor test lock in in insl jno sub push push (bad) pop js cli cmp clc insl mov lidtl mov insl outsl jp aaa scas mov adc adcl inc lock mov mov inc lcall das daa fsub aas arpl jae shlb sub dec sub (bad) test loop jp ret mov sti fiaddl xchg sub mov mov out push xlat test mov movsl fnsave mov (bad) rcl jns jae gs daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop fwait mov test jo jp cmp inc pop inc ficompl sbb mov xchg in jecxz mov inc fstps imul dec (bad) cwtd sbb push cmp or adc dec test or aad dec jp ja mov fbstp imul mov dec push scas push dec pop ds and frstor xchg push test lret add push jg scas pop cmp call jge in (bad) jns iret mov xchg or xchg popa push cmpsl sub jecxz dec mov daa jp push pop xchg xchg iret inc stc jmp dec push sbb jle int pusha inc movsl lock dec mov pop loope sbb push leave jno dec or test cmpsl push inc and lods ja,pt mov std test sbb mov (bad) jbe gs push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait adcl jae lret gs pop shr lret jbe insl je (bad) insb gs jno jge push fisubrl stos jg push and and (bad) pop (bad) icebp rclb jne mov add or xchg enter rcl pop inc cmc lock add bswap loope sbb inc icebp pusha xchg adc les lret mov fsubrs orl nop mov sub pop jae stc cs loopne outsl fist repnz movsl mov (bad) popa js pop sub cmpsl xchg pop inc mov cmp inc dec out and (bad) cmpsb jl decb shll daa inc push inc add jg or push lods iret cmp arpl cmp and cmp sbb xchg lret scas leave js cmpsl jecxz inc adc cmpsl inc sti and movsb push dec mov cmpsb add pop pop or div jmp xchg dec dec jno mov or add rol shll es jmp mov cmp dec push lods into das ds jg xchg inc jns lret pop inc push es inc stos mov xchg push sbb test and out dec fwait mov and mov aam jo decb adc aas icebp xor dec inc jae fcmovnb aad sbb cmpsb sub xor aas cmp cmpsb mov pop push mov mov adc sub es out outsl aam sbbb xchg xor data16 push bound sub je dec outsl sbb iret lods jmp push aam xchg fnstenv cmp cwtl jb sub fwait cmp jnp jnp clc iret ret pop leave roll jmp data16 leave mov pop mov stos or cmp icebp into and or mov cmp rcl inc pop dec xchg xchg fldcw out jmp inc fs enter jmp xchg xchg fcmovu mov inc addl lock add xor cmc xor int3 inc and or push hlt mov inc push nop cmpsl mov inc push jmp mov push cmp sub inc jns and mov gs in cltd scas ret out scas sub jle fiadd add sbb insl inc cmc into (bad) push push mov repnz movsb inc insl push dec pop (bad) jb gs hlt dec inc cli outsb jmp rcrb fld popf mov add add mov mov sub xchg ret push addr16 xchg mov lock xchg addl push or jbe (bad) repz xor ds push push mov push test stc push sub in popa cmp mov loop,pt ds fwait (bad) mov jg mov mov mov push sbb add movsb ss or (bad) or mov sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp fdivr es (bad) sub pusha inc and mov xchg cmc in xlat cmp lock cmpsb enter xor xchg pop lds in sbb push xchg ja sarl xchg mov sbb popf inc mov lock (bad) repz jb mov sub pusha jl (bad) icebp cmp xchg pusha test mov sbb subb icebp push mov test push xor repz xchg into jmp clc test cmp adc out lret adc jge stc sbb dec adc and in rcrl or push inc gs add or aas push add popf and rcr cmp xchg roll sbb insl xchg push cmp pushf dec dec rol adc inc lods punpckhbw cmp cmp push sti out xchg std (bad) add sti fs outsb mov lret divl aad xlat adc cmp sar mov inc add sti (bad) fs adc int3 mov push fdivr aam leave popf push in cmp shll push jge (bad) lock push inc mov dec push sbb clc mov repnz mov inc pop es movsb fsubrs jge js in push add jns ret mov lcall aas and jge sbb mov pop insl hlt inc stos jnp xchg sahf xor out out leave jb ja and sub sbb lcall add push movsb stos xchg es mov dec cmp fnstenv or imul ret int loopne xchg cmp cmp adc icebp and sub lds test fistpl sbb (bad) adc hlt imul add inc xchg outsb nop xchg xchg nop mov mov xlat xor sub (bad) cld cmpsl add frstor rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll or outsl aam dec fs pop xor mov mov rolb adc mov and mov sbb (bad) mull fidiv cmpsl push and fisub inc lcall popa xchg loop xor pop fcmovnu (bad) fdivrp in add call and insb jl fwait dec addr16 xchg cmp xchg loope sti add in jns (bad) lahf sbb jge lcall mov out scas test test push call leave jecxz xchg mov lods loop outsl idiv aam idivl adc pop and jmp mov xchg or iret jp mov sub jb bound add mov jo std dec pop jmp adc sub int3 sub dec or movl push rorb int3 dec xchg mov adc push jae movsb jge jl into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div pop daa pop repnz test dec or mov and in add inc pushf and lock adc sub loopne clc and adc push je xchg push aas sub push lds rep mov cwtl fdivl xchg in shl loope popa sub js inc fsubr je jl and jb cmp sbb push (bad) clc dec out std xchg xlat jmp call push jle xor xchg inc jbe pop jle loope aam fsub mov popf icebp pop repnz sti iret sbb popa jle mov mov or or cmp sub mov pop in pop push xor sahf mov dec (bad) rorl sbb adc ja cmp sub (bad) jp xchg adc sbb mov inc lret xchg dec mov pop sbb jl loop sbb dec xchg cmp adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or (bad) ror movsb lods shr lods imul push adc mov add cmp decl popa hlt add fsubrs xor (bad) mov xor adc sahf (bad) mov xchg pop js in (bad) lret rorl xchg adc push xchg inc jge pop cltd rcll or adc mov dec jb jp add cmc or outsb adc jb sarb xor fnstsw add es xor out fimul pop cmpb call and ss insb mov les js outsl or icebp imul bound adc jae pushf mov lea mov cmp cld repz addr16 daa sbb mov inc pop lea das fmull mov inc inc addl lock add enter jo push (bad) call shlb lret xor fsubrp jmp dec pop mov xor mov bound adc xor ljmp adc add mov das (bad) outsb or lret xchg jge add fnsave adc daa iret dec ret mov pop insb insl clc xchg mov popa mov jecxz mov xchg aam pop xchg dec mov fmuls adcb sbb fs xchg fnop push pop xor mov or dec dec xchg jbe fiadd imul repz xlat mov int3 pop fs dec imul arpl or or stos std popl sub pushw call lods cmc clc (bad) sbb xor ret in pop mov mov imul mov (bad) repz into bound pop jp push ja jnp js push repz sti jno mov fmull and aam or pop pop aaa aaa imul out in in in aam push push cld cld (bad) xchg mov jne jae add lock std add leave adc gs dec cmp sub int xchg push adc (bad) fisttp call scas (bad) push adc fnsave mov xchg inc sbb clc adc xchg (bad) (bad) jnp cmc xor and cmp adc xor call das and add sub loop jo xchg cmc xorl jo dec imul mov xchg cmp repz jns ljmp (bad) mov int3 fmulp jbe lods test pop pop movsl sbb repz ror insl stos stos jno cmp ja jge add push jge out sub (bad) jmp dec sahf dec sub jge mov (bad) rorb ss push sub out inc out add pop lret ret adc pop pop clc clc insb insb push push adc (bad) aad xlat xlat adc popl dec sti shr add (bad) fcmovnu mov cmp jne pop (bad) mov adc incl push addr16 mov scas lret and mov jo stos stos mov dec cmc and sbb addr16 inc jo repnz std lret cmp call popf push push iret inc pop jp mov xor imul arpl outsb aad test pop inc or inc sbb (bad) dec and xchg out arpl cmp inc (bad) or dec cmpsb mov ret out xor push push (bad) aaa mov push int ret jne int test or push inc rcll mov xor fdivrl cmpsb lret push ds dec (bad) push cltd movsl rcrb mov ficompl inc or nop and inc (bad) lock test adc in push mov je cmp add setg loope cmc cmc mov pop mov repnz mov add mov jne (bad) cmpl lds fidivl pop lret ret loop scas push cmpsb repnz std push adc mov mov xorb sub cmpsl jo or mov mov or dec xchg (bad) aam test add ljmp js subb xor mov dec sahf cmpsb daa dec or call pop int clc movsb mov fiadd fwait xchg mov or cmc addr16 lods sub push gs lods push mov test cld push and inc sarb xchg imul loop adc jge pop loope inc fs leave add js add dec push cmpsl cmp inc cmp lods cmp mov enter xor ljmp adc push cmp adc insl insl push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli mov insb fbstp mov add mov xchg int (bad) mov mov cmp dec xchg push jg xchg xchg fild cmp mov pusha rclb dec inc addl andl inc push mov jb inc jg in lcall (bad) sub pop insl stos push je icebp sub (bad) or cmp push mov test (bad) lock and mov mov pusha mov (bad) push pop pop inc jae inc daa fstpt inc mov lds imul xor test and (bad) dec jl cmp es lds sbb lret cltd icebp lock mov mov jg je lret or dec out repz cli out int (bad) aas add sti sbb je xchg mov cmp mov lock cmp popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or mov ds leave dec sbb mov dec in and push cmp jecxz aam movsl dec pop pop cmp or insl push adc je pop sbb shl and in cmp inc cmp cmp mov out pop ds or movsl add addr16 mov loope jno stc jmp jp mov sbb mov xchg loop test aam jmp push xchg das mov ret pop lahf xchg and in sub mov pop popa mov mov inc fbld jle leave lret fnclex int in jle pop mov movsl mov jg push jg scas rcrb aad cs xchg and stc gs push fdivs les jl adc gs mov mov push dec aad pop dec test movl jmp push das xchg or movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov ja add outsb hlt xor mov popa fs mov pop xchg popa outsl sub cmp jge mov adc (bad) loope pop pushf mov mov movsl adc out add inc fwait push pop imul repz fadd pop cmpsl (bad) jae (bad) stc cmp pushf movb call mov xor aam and cli xor clc das outsl setp cs repnz fst cmp cmpsb and push and jg subb and pop sbb sbb push jb fiaddl or imul and outsb mov xchg cli cmp or arpl sbb movsl and ljmp ret sub jge xchg mov out sub and push fisub inc imul loop (bad) jne xor scas fstpl mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test jg fist jns nop lretw push pop inc in sti inc int scas adc arpl mov and jne mov jbe jns jns call mov fistpl mov cmpsl ret xor sub divl or xor pop pop add scas pop mov mov andl jge (bad) mov out popl fistp and or lret inc mov add cmp out sbb mov mov in cmp jge sub xchg mov sbbl rcll jle lahf inc inc imul faddp aaa js mov add popf in mov repnz loopne jno and outsb outsl cmp cmp and sbb popa xor xchg aas pop mov jbe fdivrl lret into pop xor in lds sub sub adc pop pop clc clc insb insb push push adc (bad) ja xor mov xor ret leave leave ds sub cmp and jae add dec pop je inc cli sbb cmp fs sub adc push or stc xchg mov inc sub cli cmp xchg xor cmp inc daa push insb mov loop sub add jmp mov inc mov push adc bound sbb fcompl jmp inc inc int mov mov pop aam das fild fdivs sti cltd arpl stos add imul rcrl and call mov fwait cmc in gs jbe mull adc xchg mov or out push xchg add pushf pop add cltd sub cmp movsb sbb push call pushf into test jle sar (bad) jmp xlat xor mov (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and (bad) jno ljmp mov fdivs stos adc dec enter in dec fadd dec adc in push inc sub arpl movsl pop addr16 push cmp cmpsb sbb xchg jbe lods jo or adc lods and das icebp std sub lcall lret fcomp jae mov into push mov cltd mov gs (bad) cmp data16 (bad) stos lret cs mov rcrl push arpl dec aas mov mov lcall in negb loop rcl lret fistpll cwtl jmp dec fistpll jbe pushf dec or and scas mov or xor test jmp lds mov popa pop jae cmp or push das ficompl pop fcompp gs jo xchg sarb sahf push (bad) ja sub push push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cmp (bad) jne sahf addb mov or ds xchg pusha outsl sub jnp call (bad) or out push dec and jbe fstl lahf inc int lret aas jmp and ds movsb inc mov add mov adc push xchg cmpsb mov ds or addr16 jne jbe repz stc mov dec pop cmp mov stc mov stos mov and inc inc jmp sbb sub pushf add popa dec (bad) sub stos (bad) aam xor loopne xor sbbb addr16 aad mov icebp into pop leave push add add add lahf xchg sarl fistpll pusha inc or rcrb add mov iret mov sbb inc repz add fxch xchg cld push loop sti sar repnz lea (bad) pop sub cmp jecxz stos lock xor mov or add rol shll es data16 mov js in in cmp add outsb es dec xchg clc daa bound xchg jmp call mov cmp sbbl imul pusha outsb xor arpl sub cmp jo rclb mov mov arpl pmulhuw (bad) jb xor mov xor mov rcl jmp and sti sbb xchg lds imul popa fcmovnb adc fcmovbe add add jbe xchg xchg push scas xchg xchg leave insl cmpsl inc popf mov dec out hlt test pusha adc xchg xchg loop aad in lods jmp daa (bad) xor lds mov dec mov iret int3 mov dec sbb sti ds ja inc in ret ret mov iret jmp stc shr mov pop dec mov add xlat call mov addl lock add enter jo push (bad) mov mov ds aad jne jbe stos into stc mov cmp inc adc dec mov stc lret mov and ds jmp sbb sub xchg add gs test das stos test loope xlat nop les cmp adc jns (bad) je enter mov insb les cwtl dec lock xor jecxz or xor arpl fidivrl ret sbb lea or push adc call cwtl pop add daa ror or cld sub push xlat add dec xor mov push sahf lret push dec mov adc dec jl outsb inc (bad) pusha push outsl adc push fucom (bad) shll mov push inc dec insl xor loope stos lahf jl ljmp dec push cmc stos inc mov push hlt mov dec dec push lds xor cmp jg sbb mov or inc inc add dec dec xor jl sahf sahf jnp in je mov (bad) xchg cmp lahf popf iret jmp fidiv std mov push dec lret pop jp push or ret dec (bad) fcmovnb ljmp rclb jecxz jbe rorb dec icebp jle jg sbb sub lods push test sti mov adc jnp mov popf xor das dec jge lahf ret jp pop sbb aam jmp mov pop push mov (bad) movsl dec clc jge cmpsl jb sub movsb mov icebp jg add rcrb or jg test (bad) mul xor mov aas lcall leave push sub pop pushf popf ss test iret pop (bad) xor daa sub loopne insb movsb dec push xchg int push mov punpckhwd mov push cmp loopne insb xchg pop ret in js lcall add xchg jle sbb add fs outsb mov lret divl aad xlat adc (bad) fsubrl aaa mov mov mov or leave iret outsl sub xchg insb imul cmp mov sbb cmp stos xchg lds sub dec or mov inc lret cmp lock fdiv pop or call dec push xlat cmpl addr16 aas adc sub mov mov mov jns and or cmp sub push pop lahf xchg push jp cmp pop dec fidivr pop push lods add test push sarl xchg mov mov repnz ret in scas test je adc int je inc bound cmp ljmp mov push iret jns jmp das lret (bad) fsubl pop xor pop or out mov push mov arpl cld lcall rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) fwait cmc outsl pop lret push sti (bad) daa xchg jbe adc xchg adc div sub inc lds divl das jbe ror sbb movsl xlat pop cmp push jg mov hlt rcrl insl mov xor add in dec loopne rcrl out cmp (bad) mov adc std mov cmpsb mov or inc or or rorl iret sbb jae test dec imul jb and imul enter jp cmp fptan inc out pusha mov cmp jo hlt repnz int3 sti dec adc jl xchg inc pop out mov in adc mull inc cltd xor push dec lock pop push sub jne jmp aas xchg dec inc mov cmpsl mov lret aas loop sub imul pushfw add fmul into cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub fdivl das mov sbb (bad) in add loope mov jnp clc inc fwait rol test add cwtl and sbbb jle or (bad) lock mov xchg scas jge cmp cmp mov or xchg or add call in (bad) lock sbb xchg or into scas xchg add mov por pop orb lret lods js push and adc jnp aaa test adc sti push mov mov mov sbb rolb jbe das xchg test pop popa scas data16 std mov lea pop das pop pop jecxz inc (bad) insb loop imul repnz push pop sbb andb movsb stos pop mov stc sbb adc mov pop mov lock test fsubs hlt inc idivb add mov mov cmp stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test dec sub sbb out pushf shlb in add (bad) repnz clc cli bound and inc sbb cli andl add and xor sub js into dec int xor add fwait cltd mov inc in jge mov call pop push or jae mov push inc cmc push mov xor mov jp mov push xor lahf push cmp fcoml sub or (bad) and lret mov pop pop or mov adc int3 rorl add cmp iret fisubr inc sbb std out loop and bound (bad) mov mov sar jmp outsb out inc and and sub sub and (bad) roll icebp sbb cmp int3 mov gs xchg xchg fcmovu mov inc addl lock add stos sbb mov stos cmp mov cmp scas adc fwait cmp fnstsw jmp sub mov cmc (bad) int3 push js movd adcl mov mov cmpsl (bad) ss (bad) jecxz fnstsw std inc xchg aas pop repnz dec sahf lahf mov js cltd inc les sub inc inc mov (bad) mov sub shlb js inc xchg sbb push cltd mov jecxz dec sbb jg jno adc out inc lret (bad) push cmp lahf push inc push lret pushf xchg add pop and les imul adc aaa clc xchg (bad) rol imul sbb dec xchg jmp enter dec push lahf (bad) xor icebp andb push imul repnz aas xchg xor (bad) lea pop test pop mov (bad) (bad) pop pop xchg mov aaa imul out in in in aam push push cld cld (bad) pop leave xor sub dec roll sti (bad) lods dec push inc mov cmp js outsb mov in inc xchg jbe cltd push fimull ss es outsl inc std ja lock les cld push xlat and outsl sub inc lods cmc in dec xor add mov icebp mov sahf sbb jo xchg jns xchg insl xor out mov push and sub out insl rcrl dec into inc out (bad) std fs lret outsb stos daa xor pop sbb out xor xor xchg push je add mov pop js cltd dec fisub shll mov (bad) jge dec push lret popa pop xor or cli adc cltd mov xchg push jge mov movsl loop mov fwait mov cmp add call ret imul insb push push adc (bad) aad xlat xlat adc (bad) gs mov jo pcmpgtb mov jmp xchg je mov lock fcmovu xchg (bad) pop mov or push or mov lcall (bad) and mov (bad) xchg lods pop jne (bad) xor hlt adc cmpsb pop jno scas xchg sub shlb pop push (bad) sahf mov xor mov mov or lea xchg inc or shr leavew mov xchg inc es xchg pop mov cmpsb jnp imul mov add sbb inc inc iret movsb add rcll mov pop movsb movsl dec sbb sbb xor pop ja movsb fwait and incb or add adc fisttp lds inc sti lods and (bad) ficomp and inc mov adc mul push fucomi in mov div je cmp add setg loope cmc cmc mov pop mov repnz ret mov xlat movsb mov test jge cmp arpl enter cmp mov xchg cmpsl xor cmc imul loope out int3 inc inc xor cltd push jl test sahf jb xor loopne jp es mov jb push mov nop movsl pop inc push (bad) mov pop jg shr ss mov pop lret sti lcall insb fimull xchg pop insb add sbb mov jne in clc cmpsb mov xchg lods js mov (bad) fdivs pop ficom fidivr mov xchg push popl jmp inc sti sub call pop or dec loop xchg and or cmc or cmpsb xlat push cmp movsb and xchg insl xchg dec fild xor stos sub cmp mov jo daa ficom aad mull insl insl push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov (bad) or lahf cmp in xchg arpl jae bound pop pop mov int3 adc adc dec hlt into inc rcrl xchg add arpl ja add fmull (bad) add inc insb je inc xorl out jno pop mov lds into sbb jb jnp cs mov xor loope fwait orl jno das jmp inc dec push lds lret and xchg enter push (bad) aam push test jnp pop in sub add mov mov test xor mov push and ja popf xchg movsl jns lock xor iret inc loop aad negb je shrb stos or std mov mov out enter mov mov hlt mov inc test aas lods leave pushf mov rcl int3 push js mov jbe scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) pop addr16 in dec in inc xchg fdivs aam mov ss pop mov pop add mov xor aam ss jg jne stos mov push stc adc mov cs (bad) xchg sub sub pop hlt lahf cmc or cld pop out jns and movsl mov xchg jecxz sbb mov adc aad adc std jae sub sbb int lcall scas xlat mov push inc dec pop inc addr16 movsl jg (bad) push rol test fs popa lea ss lahf iret jl jg mov int nop incb movsl mov cmpsb sub push sbb out fisubl imull (bad) and pop test xor mov lret int3 lret mov test fdiv jo fildl lods (bad) pop (bad) push adc add mov and in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov ss mov insb ficompl ss jno enter gs loopne cld xor mov ret das cs mov das sbb cs sbb sub outsb jae fstl adc loop xor stos das jae jp aaa sbb mov sbb das ljmp pop xchg cmp stc idivb jge jmp pop push aam xlat dec movsl mov pop addr16 lret push add sbb add icebp and lret imul stos xor and int pop sub ret ljmp push xor mov mov fwait ss ret movsb pop int3 inc adc pop sub scas push xchg (bad) adc push outsl (bad) adc jp jmp inc push pop or xor jmp outsl sub ja fisttpll into sbb (bad) inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec je pop enter ret enter pop lea lahf mov sub in cmp cltd jmp mov mov sub xlat in mov inc add or cmpsl test loopne jb cli inc outsl cmpsl dec fmulp out inc pop ret fstpt cmp mov pop lret add xchg leave pop pusha frstor mov pop inc pop jge cmovs sub cmpsl jno (bad) jb dec dec fdivrs and loop mov or and (bad) fidiv rolb mov in loope test movsb gs std out xor dec (bad) (bad) fistpl push sub cmp pop cmp sbb xchg rcr (bad) mov sbb xchg lahf test fimul push int3 push test adc dec xchg pop outsb push pop das lds popa push addl andl adc imul insb push push adc (bad) ja xor mov xor ret leave leave ds sbb (bad) daa fwait mov add mov and bound dec lahf sbb int3 pop cmp jge dec es loopne addb test cmp xor pop (bad) xchg js (bad) mov pop std pushf or jg (bad) sbb cmp loopne cmc lcall mov scas clc mov mov sub inc fidivl test test (bad) and xchg cs out fs sahf inc imul dec lods add sub jg rcll loope jne popf inc sub sbb imul adc arpl cld out jb push xor jp std insb push and pusha subb ds push mov or push not pop xor mov clc stos test sub adc mov add jno push and lock pop xor (bad) jo sub popa pop pushf inc (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and mov pop clc push adc (bad) imul adc je jae dec adc cmpsl and scas jmp sub pop xor scas test adc div sbb jnp inc (bad) repz or outsb mov mov mov sbb fsubr stc or cmpsb and ja sub push popf xchg inc jl imul lds xchg bound (bad) fistpl call mov inc mov sbb pop pop outsl xchg inc or mov dec sarl pop bound xchg or xchg cmp xchg cmp popf cmp cmp mov sub mov push xor sbb jle mov jbe jnp test icebp cmpsl (bad) cld mov pop inc pop cmp xchg scas pop dec popl mov pop in sub (bad) mov orl push push out sbb jle xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd popa add jl sub push push dec ret mov imul in pop cli cmp movsb cltd popa mov cmp jae inc outsb mov cmpsb mov jge jns (bad) leave vandps test mov push cmp xor outsl jbe addr16 add stos loop out adc lea pop jl pop push stos jmp pop sahf call daa mov xlat adc lea xlat fsubl test jecxz out nop cmpsl dec (bad) push lcall sub dec push (bad) xor mov push test or dec push js or or aad mov fistl and add mov cld shl cmp sub cmp sarb mov stos cmp mov in push pusha mov xchg nop push cmpsb mov popa or cwtl lea aam jno mov cmpsl cmpsl sbb add rol shll es data16 mov js in xlat cs and mov scas xchg leave adc push stos cmp inc arpl inc push fs enter add mov sbb js mov xor test adc popaw test and or cmp je pop (bad) mov (bad) jmp mov daa dec adc iret pop sbb pop stos mov and push fs jnp enter sbb xrelease popf xchg dec scas push icebp lds repz lret loop mov cmp push je and movsl in push inc mov and pushf jbe or xor jmp sbb push push mov add or test mov cmp mov in sbb jns lret (bad) lea sbb mov push jmp push inc and jb loope cmp sub test inc mov inc addl lock add enter jo push (bad) call shlb enter xchg aas test mov mov push lock adc out xchg lea loop movsl add pop jecxz addl mov push dec or jmp sbb ret xchg aam je rcrl inc jno xor cmp mov scas cmp fcomps pop sub sub sub stc rcl cltd jns and daa fnstenv popf pop lret and leave pop push aam jne mov loopne les fnstenv stc xchg addr16 sbb cld mov push aaa xchg (bad) xchg int3 stos stc rcr jno pop xlat xchg sub xor (bad) lahf cmp shrl dec imul dec stos pop stos scas (bad) ficom mov sub outsl adc jb mov in and stc dec out sub mov jno inc inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl (bad) pusha lods pop repnz cmpsb cwtl cmpl push push sbb mov xchg popf loopne mov push aam xchg int xchg cmp mov pop loopne add mov xchg push add sbb or int mov sbb arpl cli shl (bad) sub fbstp cmp pop add mov lcall outsl add sub push xchg dec (bad) out push ss (bad) repz and adc pushf sbb or test test cmp push (bad) and psrlq and dec into repnz jne xor add push les pop sbb sahf dec nop iret adc iret cmpl dec mov rol ret or icebp call scas mov cs xlat int3 mov ret fwait out icebp push add lcall mov adc xlat xlat adc (bad) gs daa pushf pushf cmp mov rcll popf pop fwait (bad) jae pop inc insl (bad) or xchg shrb pushf outsb (bad) cmp in mulb cmpsb xlat lret add movsb sahf pop push push xchg loope xor out mov and stos stos ret pop rorl sub xor (bad) gs fsubrs sarb lahf dec xchg repnz (bad) cli sub lods sbb mov jae loop mov int xor push lret xchg ret sub lods arpl ss int out and call mov mov push daa jmp add xchg lods inc adc sbb imul imul scas inc push (bad) cli jmp sti loop nop mov je push mov pop lods pop sub outsl ja dec dec or push mov (bad) jp call mov xchg pop (bad) push addb sbb std push xchg xchg sbb rcrb (bad) push mov inc inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov testb mov ficom cmpsb add or pop (bad) dec pop data16 in xor mov add mov (bad) lods and mov jmp cld lcall loope jno je pop lock pop and push cmpsb div es loop sub push mov jb cmp cmp dec int cmp or or sub cltd leave or cmc movsb cmp push arpl jne pop flds test movsl dec cmp (bad) scas loope call bound push dec cwtl dec and es push dec mov jecxz int imulb inc push lcall fimul fwait jecxz rolb aad add cltd cmp leave sbb sub and (bad) pop (bad) mov xor pop sub jnp jge mov xor mov xorl jl icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec pushf pop mov jmp movsl mul push outsl cmp xor loopne fdivs sbbl inc insb out lds ljmp pop mov sub add aad add lret xchg and insl adc aad mov test mov pop jg and lahf mov sbb (bad) mov cmp sub into cmpsb mov push (bad) repz push imul mov push ds cmc adc neg loope push mov mov sbb mov in hlt lods or inc scas push fnsave add xchg insl dec mov (bad) mov leave roll pusha push xorl mov in push pop adc call cmp cli lret or jb push lea test jo test cmp or add jmp push sti adc and mov cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov xchg pop adc mov jp add rclb repz jge,pt mov rclb cli insl ss xor aam cmp jg dec xchg outsb pop mov popa mov dec arpl cmpl mov mov les push xorb das or mov dec mov rcl jno sbb inc jo xor (bad) dec sahf xor mov loopne xor out ficom mov inc fsubrp sbbb aaa push sub rorb mov xchg imull add jecxz or mov mov or push xchg in sub nop and daa inc repz fiadd mov xor sbb out jo cld loop je (bad) xchg inc test fsubrl lods cwtl pop ret (bad) and pop pop arpl xor shrb repnz lock add enter jo push (bad) call shlb sub fisttpl repz bound add pop mov icebp or lret xor and sub mov (bad) cmp jp,pn mov ds xor xor shrb (bad) movl cltd cmp mov mov mov mov (bad) int3 out aas or cmp aaa jae fs inc push cmp test mov fs out cmp sbb fs xchg ss pusha aas push repz mov pop stos or and addb in xchg jecxz xchg push test xchg nop movsl outsl movsl mov jp mov mov inc (bad) insl mov repnz cmp aaa movsl or cmpsl sarl dec mov mov xchg cmpsl lret pop (bad) aad hlt fistp lcall push sub mov fnstcw loope fistpll iret iret out in in in aam push push cld cld (bad) xchg mov faddl sub daa inc in mov in pop xchg dec xor inc lcall (bad) or ret shl inc pop push or in rcrb movsb popf cmc jbe (bad) mov or (bad) push enter dec sbb stos lret push rcrb lock fsubs jns cmp (bad) mov or fstpl push fwait in pop xor add or data16 push in xor mov js xchg push rcl stc pop jle pushf add push add pop insb xchg mov pushf js scas imul lahf sbb lods stos daa cmpsl pop mov ljmp fnstsw sahf dec inc mov adc push inc or fistpll jmp mov ds js clc idivb sahf mov call divb pop (bad) daa dec mov push jl jl,pt adc pop pop clc clc insb insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov xlat push jle shrb lods xchg pop pop dec jbe (bad) mov rorl inc ja and ja jmp fmul enter inc inc sub scas push daa xor add outsl ja mov or jp jge xchg out in rcll fisttpll (bad) sahf or cmova jns hlt mov and dec xchg dec scas mov xchg sar stos cli ret mov inc sbb rorb xchg mov mov sbbl in adc and sbb sbb frstor cmc test cmp mov stos or repz rcl rorb popf ret out cli mov das pusha dec lds cmpsb rcl sti pop xchg int3 push dec into jmp jnp xor stos sub mov hlt or adc push and jo jbe add adc sub inc shl shl add pswapd loope cmc cmc mov pop mov repnz ret dec dec push into cs (bad) aaa pop inc ret lods push push dec lahf or add imul arpl jo out (bad) dec int3 adc adc or push xchg les out add adcl mov mov in pop inc xchg lret loopne,pt sbb daa imul or jne pop jl xor jnp ja push lods aaa mov je repz add inc fs jbe movsb adc sahf or fnstsw test add adc xor jbe and mov (bad) mov cltd or data16 pusha inc jle dec gs clc pop mov add jns jmp mov es ss call or or cmp (bad) out cwtl movb mov and mov das stos int sahf dec std out mov push sub xor or (bad) jle xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov imul jbe fsts aaa ret xchg (bad) xchg daa cmpsl jp xor loope xor sub test stos mov loope ret daa xchg lret sbb mov stos cmp jmp xlat lods sahf jb in jge out xorb ret pop xchg and push sbb test (bad) outsl mov lock in out sbb pslld insl stos inc loopne out inc mov insb fsubp lret int3 push inc gs pop xchg test stc fstps stc les mov pop (bad) pushf jnp xchg lock pop sub (bad) and dec pushl pop neg xor adcb inc add out xchg inc pop xchg dec loope stc addr16 (bad) fdivr cltd xor xor and pop dec inc cmp int sti xor adc jne call cmp inc fsubl cmp mov (bad) cmc xorl scas mov ds mov dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov add or pop repnz addr16 movsb xchg rcll inc fcmovb (bad) jbe adc sub mov stos add outsl das inc int3 xchg jg call pop pop int3 jno fcompl mov mov add lea push dec test and adc jns shlb push imulb sub mov pop fdivp mov (bad) insb pop dec in aad in jecxz mov jge mov lahf mov and lea mov cs mov pop mov push mov arpl adc sub div inc jae stos dec addr16 aaa hlt dec fild jl mov es lds enter iret lcall cmpsb (bad) es xchg (bad) stos dec out push or (bad) or xchg stc jae (bad) xor lods xor dec push sti in popa (bad) repnz in (bad) int mov ss xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov (bad) pop pop xchg mov xor push cltd jg mov bound les push addr16 mov fs loopne pushl out mov int sbb dec loope (bad) lea jp dec xchg jo popf cmc and cmp adc and das xor jb aaa inc ss addl in xor sbb cwtl movsb push push scas rolb sahf in int3 pop push arpl sti and adc (bad) push push test pop mov (bad) mov jmp ds and pop xor add adc lds mov add mulb stos cmpsb inc fs insb jp (bad) enter add aad inc push test adc test testb fnop xchg ss mov mov mov imul lcall in and lret (bad) pop xchg mov jae sub arpl popa add sbbl jl sahf sahf jnp add in movsl movsl test dec cmp arpl call cmp arpl mov loope outsb xor lcall enter dec cltd or and repz pop dec outsb pop int3 (bad) cmc rclb and fidivr fnsave (bad) jp cwtl loope jecxz lods outsb and inc lea inc sti mov loop push lahf jo sbb stc mov and aas or jno dec jge mov push outsl jp cmpb adc pop icebp pop push push jne mov push or ret je push mov xor adc imul mov adc push int popa jbe (bad) jae xor stos js das inc sbb and sbb sbb and push mov sub (bad) rorb adc mov cld out lds clc clc insb insb push push adc (bad) ja xor mov xor ret leave leave ds jne divb jmp jmp and aaa xchg outsb xchg cmp or add xlat fwait jmp fwait nop push mov sub lahf cmpsl mov pop cwtl imul pop adc enter negb decb xchg xchg scas imul mov cwtl dec lds push sub fnstenv mov jg sbb inc aaa push clc push mov int mov shrb mov les movl xchg pop and jno sbb mov sub xchg add mov or hlt jmp out push in scas scas cltd and inc push sbb test cmp pushf jp sti ja adc jb mov mov in insl flds outsb mov rcrl sti and sbb sbb cs mov push push lock push jp add pushf stos ret or pusha (bad) iret outsb jmp pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov jns pop xchg iret push push ljmp mov xchg mov lock adc sub cli repz pop mov imul addl add inc cmp jne xor sub mov ds (bad) nop inc (bad) lock jg mov mov mov push pop inc jle pop or ss mov lods out sbb mov imul push dec (bad) xor es xchg sti cmp mov mov insb enter sahf dec call jne out outsl add jp or sub inc movsl clc fildll bound mov cmpl imulb leave push inc sub sbb push insl rcll jl mov xchg test fnstsw pcmpgtb lods sub aas sti inc icebp dec bound xchg sarl fwait ret and or (bad) xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas imul out lea leave mov ds lds rcrl push adc in vmread add xlat loop sub mov out int loopne mov repz les inc push mov mov push test repz mov (bad) cmpsl shll test sub push cltd std pop inc mov daa adc add mov pusha es jb push push cmp mov xchg insl dec (bad) jecxz enter lock fsubrs xchg cld sub mov cmp in clc out xor cmpsb loope add icebp inc push mov shrl imul scas sahf cwtl adc mov xchg insl arpl in popa xor cmp and jne int3 pushf popa ret outsl pop loopne scas es fdivr or jmp mov or in data16 mov js in in lea and movsl movsl and in in or dec xor js lods in add icebp cmp xchg adc test push inc in pop in nop push test aaa in inc xchg jp pushf arpl inc dec and sahf mov insb std call je or or cld or (bad) mov add fs mov xchg jmp out repz sub cli mov ljmp xchg xor lret dec in (bad) mov or movsb in mov je sbb inc sti push push js push mov mov add jo scas pop stos mov fldenv push nop pushf xor gs mov jp out (bad) stos or rol lock mov testb mov cmpsb mov aam pop adc cmpsb (bad) (bad) xor (bad) push movsl nop std jp fcoml arpl mov addl sbb ret push outsb jo jl push mov add enter jo push (bad) call shlb sub fstpt sbb mov jae fnstenv ret ret aaa mov mov rorb adc push ja outsl jge sbb lahf or daa insl mov loopne sahf push cltd imul les push xor stos adc inc adc mov gs mov push (bad) pop push push or es cmp movsb add pop and inc imul push outsb sbb xchg sub cmp and mov inc inc rcrb xor (bad) jmp int3 xchg and test decb loopne xor or push int3 lock lods add adc outsl mov test imul pop xor roll push mov push out test out cld nop adc ja sbb fnstenv sbb ret adc xor sahf jnp in movsl movsl test dec cmp arpl call adc imul cmpsb nop mov imul jmp adc or push mov ss (bad) push or scas cmpsb cmp pushl or and pop sti lcall into sub inc push call in mov data16 not outsl inc movl (bad) cwtl inc repnz and mov xor sbb cli jae pop inc and cli stc stos push (bad) jnp sahf repnz mov adc push adc je out out dec imul ror jmp adc fwait mov mov sub sub and pop dec pop lods std rcll mov mov xor pushf xor push mov inc mov js xchg mov xchg adc test movsb lods dec nop inc addr16 xor add jg dec xchg fild add add jl enter fmuls pop and xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) dec call lret andl rol ret push (bad) in push pop pop jo sub or jge add sub jbe mov jp jae mov mov addr16 push in out jp push out pop dec push repnz or or pop cmpsl jecxz out lods movsl mov fdivrl jle add test incb and in lahf test fidivl sbbl jle jge and mov nop xchg cld dec mov xchg (bad) mov test pushl or (bad) fwait add (bad) je pusha xor jo dec push pop push mov xlat cmc mov pop repz pop sbb cwtl jle loopne jl sahf mov fistpl out repz dec (bad) repz aaa outsb fildl imul mov insl ja loope jp,pn mov pop sbb aas aas push push sbb (bad) rcll push and lods lods or jp sub mov or pop inc mov test push mov lock (bad) fmuls (bad) cmp pop sti dec int stc ss pop add or popa cmp adc les out dec jae fdivrs jbe,pt xor dec pop sbb addl mov xchg inc adc daa (bad) dec mov (bad) mov and cmpsl out fwait repnz dec fnstenv popf std jbe mov fucomip andl sti rcrb xchg dec cli aam loopne sub pop jmp imul insl test fldcw cmpsl fdivl sub movsl leave flds std in stos sbb icebp xor ljmp mov imul xchg sub cmp jae enter cmp jge lock jnp loop lods pop iret mov cs sarl pop stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or cmp adc push js inc ficompl (bad) pop pop mov repz xor xchg push (bad) and dec insb stos inc adc add sbb scas sub fs mov (bad) inc sub mov je scas push je lcall push test sbb dec cld ljmp or and int test out push jp adc pusha jp aam jnp dec shrb push shll mov sub push push mov xor inc or dec lret in and push fisubr mov (bad) pop popa (bad) mov in dec push mov push stc sub push addr16 cmp shrl xorl mov or pop adc clc les cmpsl aad test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl aad clc lds dec (bad) fistl lods pusha es cmp jmp (bad) mov xchg dec mov out pop or cmpsb loopne icebp mov inc sar add sub pop cmp and inc push sahf shll mov (bad) movsl shr xor mov xor outsl xor fistl aad mov test popa movsb fwait stos push in jecxz lcall stc push push mov add jae mov popa repz add popa mov mov push (bad) clc mov and ror or cmpsl xchg pop shrb nop (bad) scas mov inc shl inc adcl test sub popf jl inc and jl xor inc xor sahf (bad) push add mov loope mov or out add enter jo push push (bad) call shlb sub fstpt sbb mov or pand aad loop mov addr16 imul inc add nop popa mov pop aad adcl ret jmp in or pushf js inc loopne mov and ucomiss push sti (bad) sbb or pop or fwait mov shlb lea (bad) dec pop mov and push xor mov (bad) bound dec in sbb popl pop orl add repnz rcr inc add push repnz fstps repz imull stc ficoml adc push fldenv gs stos sbb outsb bound cmp jecxz int3 push push or xchg (bad) mov inc mov mov pushf inc int ret pop xchg cs push cmp add repnz or lahf rsqrtps mov pusha stc sbb push cld cld (bad) xchg mov faddl sti fs outsb mov pop enter sbb push pushf mov sbb or mov or dec jecxz or jb jo jle push addr16 dec add mov pop dec jmp xchg call imul std movsl adc mov je xor cmc lret out adc mov push xor push or (bad) jmp mov imul mov hlt rcl inc sbb out rorb movsl (bad) push dec neg sahf js cld fmul outsl mov xchg ret icebp scas cmp test int iret xchg arpl add dec push sbb dec jbe adc push pop or pop aad inc out imul jo jnp clc pop dec out insb (bad) push lret aam inc xor imul add push add cmp adc pop mov adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov mov repz in gs jg lret notb sti fidivl xchg sub fwait int push jecxz pop push jo adc or ja aam lret sbb (bad) cs dec pop pop inc std ljmp popa push fldt inc out je stos aaa jo dec fcoml push iret fwait js add push test mov push mov shrb and sar (bad) icebp jecxz and js jae mov mov data16 lods sub and mov clc pop std sbb ss dec stc fisttp xchg adc sub stos (bad) mov sbb or fiaddl mov rorl sbb pusha mov in add mov pushl les add pusha fsub cmp push loope aaa out xor inc push in data16 pop jns inc inc sbb cmc cmc mov pop mov repnz ret dec dec push into cs lret mov mov dec fs leave mov (bad) fnstenv mov and mov mov pop fwait arpl popf fnop pop mul aaa (bad) aaa push inc pop xchg es mov inc int xchg add lret clc mov and out stos movsb out test mov sub xchg mov jbe inc es jl jae sarb xchg mov sbb mov ret (bad) sbb loope iret pop adc mov or fwait inc movsl cwtl pop push ret jp lahf inc mov dec pop mov out sub (bad) fidivrl movsl inc mov out jae fisubl sahf out test in fsub add mov or xchg stos mov jae jb or xchg push and pop mov xchg lods ja (bad) mov lods ds ds outsl test shlb (bad) xchg fiaddl addl int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas sbb and fwait jecxz mov pushf mov stc iret popa mov lock (bad) xchg dec pop pop push mov dec (bad) and push pushl dec ds mov xor adc je pop or push add (bad) cmp jae sub mov stos movsb sub pop pop ret je sub fidiv nop xor mov cltd or dec adc hlt arpl jb pop push and sbb cld push and add mov scas pop jnp or mov (bad) jns ljmp outsl ret mov xchg cmp mov popa adc push fdivrs mov out inc sub dec shlb add sbb cmp sub push fwait imul (bad) mov dec ret push stc mov movsb inc stos jle test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl cmc jae int jl sbb inc insb mov out popf push (bad) in add dec dec dec hlt or sti add jecxz loop ss push loop xchg sub push pushf xor push aam cmp adc xchg scas cltd cmp add clc dec mov insl std cmp lods (bad) stos mov jle add and jle gs dec jecxz xchg lea ret xor clc jp lock fistp mov out cmp je mov mov iret pusha shlb mov and add and clc mov je add hlt xchg mov and and div pop cmp push push outsb jne lock lds cmpsb push out mov sti rorl push or stos lahf cs fistp mov scas push into shrb inc push push adc push push push into into test mov (bad) pop pop xchg mov aaa imul out in adc sbb cmpsl xorb inc inc inc rclb jle push adc das or xor push imul roll dec mov imul cwtl stc andl mov pop sub ss data16 ja sbb mov pop xlat fstps pop je (bad) icebp fldenv sahf add imul test dec les lret sbb lds pop jb mov ret dec in add and pop mov dec sbb loopne sub aam repz jo shrb mov sbb icebp cmc sub lcall out fdivs dec sub vpmaxsb sub inc jae cltd add movsl movsl xchg pushf adc jg adc (bad) push into es cmp xchg insb repz xor add jns xacquire xchg movsl test dec cmp arpl call adc imul push cmp sbb sbb mov jb mov or pop dec pop rcll adc jns out in aas aad or pop outsb push and cld jnp (bad) lock fucomi (bad) repnz lds icebp lods mov es pop cmpsb cmp (bad) out jns icebp (bad) adc and je mov add adc jne xchg arpl je js lret and outsb (bad) (bad) lea pop lret lock imul stos push pop in dec ljmp inc cmp test ljmp xchg sbb jno enter xor aad xor xchg dec mov xor lods and sub ret stos jle ja jns fcoml fidivr out mov adc xlat in (bad) (bad) pop ljmp and xor xor ret ret leave leave ds jne divb cmp (bad) setg (bad) and fistp lock out mov cmc (bad) and jge xor daa inc subl js push push test test xor int jmp ljmp mov pop push jp inc in (bad) decl popf sbb ret push sbb negb pop lret xchg (bad) notb dec cmc xor lea imulb sub pop lcall xor popa sub pop clc sbb push out xchg xchg pop xchg jl adc xchg add jmp and dec (bad) or and (bad) sub in fnstenv clc cmp push (bad) in xchg sub xchg stc cmpl adc (bad) in sarl adc jbe add fadds lret inc push test push dec push stc jbe pop inc mov sub or cmp (bad) push push push push and lods lods or jp sub mov out sbb sti outsl xchg inc out fs adc and (bad) daa js test rol sbb mov iret xchg gs (bad) into pop push xlat jg inc js pcmpgtb jl sub pop fist or jp hlt or ss xor mov dec mov jbe jbe in add (bad) cmp stc inc iret ret push movsb in xchg mov dec ret mov jge cmp insl pusha cld jno cmp dec jle sbb je mov loopne arpl ja adc movsb hlt call lods cmpl loope sti int3 pop (bad) fiaddl jmp sbb out jg movsl movsl leave adc (bad) add add outsb jp xchg js mov cmp mov mov xchg push test mov mov cli mov cmp sub jnp out out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb (bad) mov std call stos sbb push jo lret out mov rdpmc xlat mov std lock data16 dec (bad) scas xlat sbb cmpsb push mov bound lds jb loope pop mov pusha rclb mov dec cmc add sub adc (bad) sub das int xchg ret (bad) xor popf mov jae popf add inc movsl imul icebp xchg xor enter int fsubrs cwtl mov lods loop mov xor les in ljmp cmpsl hlt sbb das dec cmp test sbb xor mov sub gs xor mov inc test fidivr loope stc adc xchg pop outsl fidivrl adc ds xchg sbb jbe xchg out mov (bad) mov sbb mov data16 mov js in in lea and movsl movsl and in in or mov add mov das imul imul repnz mov push dec xor (bad) cmp mov rorb jecxz cmpsl sub cmc push pop xchg js pop jmp jmp in test add insb sub ds cmp cmp in xchg lcall (bad) mov dec stos lcall es lret xlat out fmuls sbb mov hlt loopne sub push xchg sbb mov leave push jns and jge fwait xlat gs inc dec aas jnp jo pop mov imul dec mov and stos xchg or sti push push int3 out in clc adc push and push sub insb adc bound ljmp pusha push mov cld push xor stc or push je adcl enter jo push (bad) call shlb sub fstpt sbb mov inc (bad) jns pop add push int3 imull jg aad call dec mov cmp sbb fimul adc sub scas sbb inc aam call add imul test mov stc enter fisttpl mov scas andl (bad) loope not imul mov inc mov dec mov pop test push or sbb adc (bad) jmp daa repz lds mov dec testl dec jp adc (bad) ds ja inc push sbb lods add sti imul jg and inc out xchg push lods repz aad jle mov adc (bad) adc jb jo aad pop push add jmp sbb sub nop test leave mov ja fwait sbb cmp push das fwait pop push xor sahf jnp in movsl movsl test dec cmp arpl call adc imul sub mov addr16 push xor lock push sbb inc jmp fisubrl sub sub into mov push dec repnz cmovb xchg jb fstpt mov and (bad) or (bad) xor dec sub mov loop dec std mov dec aas sbb add xor sarb push aas xchg inc xorb jle int3 ret scas xchg mov cltd clc add fbstp push and ljmp cmp xchg xor cmp sub inc pop sub jmp add lea ja sbb nop movsb out xchg ja xchg inc cwtl test lods inc pop shll jmp lahf pop xchg leave mov insl subl inc sub mov add mov jmp cltd stos xchg xchg push pop out push mov aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl cmp fsubp pushf (bad) leave cmp imul jnp cmpsl jmp dec add or pop repz pop jmp push fmull dec pop sub subb sub inc fwait stc or or add mov cmp dec lock or arpl decl mov inc repz popf cmp jbe in sbb test stc or add mov inc (bad) cmp les dec shr les mov mov or pop cmp dec jl mov mov cld or addb and mov xor dec inc into xor cmpb mov sbb cmp or sub gs dec pusha ret cmp inc outsl (bad) or xchg push pop lahf adc das daa bound out gs xchg mov xchg dec xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov out addb cmpsl xchg pushf gs inc pop mov shlb (bad) hlt push pop mov inc pop fild (bad) dec loop packsswb and iret out out jecxz jns mov and sbb bound jecxz imul (bad) jae les mov test push out mov cmp hlt mov fcomp ljmp xchg scas das lret pop idiv mov ljmp (bad) mov into or push popa cs add scas inc mov idivb enter pop mov js fcomi movsl je call stos loopne ljmp sub xor rcrb inc (bad) loopne xor out jecxz inc add icebp pop pop shlb out fiadd push imul lret cmp sbb dec cwtl sbb addr16 mov xorb dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov or (bad) in xchg lret iret sub adc test fwait dec outsl pop mov sbb fwait xchg inc add repz lret push fstpl jae sub xchg jg fisttp adc dec es gs mulps push sbb mov pop sub sbb nop sub (bad) pop cmp into std arpl xlat push adc xor lods jmp xchg and cmp int jne mov xchg mov jmp jmp jbe push scas jae pop btr xchg push cmp add adc popa in inc arpl add add (bad) out adc insb popa (bad) jno jnp (bad) pop dec mov sarb in loop int3 add push inc pushf sub stc jg mov es and inc mov adc xor pop ja mov push dec xchg les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl xchg adc int3 out das out and call mov mov push daa xchg roll loopne mov aad cmp lret nop movsb inc adc popf jmp sti mov inc adc pop aam mov xchg pop push cli pop ja dec dec or sbb jp call out mov into add sbb std daa out lret gs cld add inc xchg scas mov in jb add (bad) imulb sti insl movsb pushf jne cs xchg idiv out cmp add movsb mov fs fadds sbb add mov mov push bound sub repz iret push (bad) aad jmp push into mov cmp ficomp fwait leave insb pop cmc (bad) push dec add jle iret add int3 enter xorb into push mov and in mov out jg out add enter jo push push (bad) call shlb sub fstpt sbb mov dec ljmp and xchg lea leave mov stos sub cld sub cmc arpl outsl mov cmc pop fadd or or jmp mov lods stos and xchg push iret orl movb jge and fsubrl sub cwtl lods push mov cld lret call (bad) rcrb mov mov xchg xor loop sbb insb ret fsts pop dec jecxz xchg jge mov in mov int sub mov in and rcll f2xm1 push add push (bad) cmpsl loop,pt rolb leave xor ret jp sub xor xor add inc in in daa dec push inc and out lcall adc mov daa std fs xor movsl push les lea inc or inc sbb bound jbe add aam push push cld cld (bad) xchg mov add faddl sti fs outsb leave dec sub ja mov rcrl jp mov outsl sbb lret xchg scas sbb lods aaa jo sub stos jns test push jo aas xor mov dec xchg rorl scas out sbb xor or jle call je xor xor loop xchg pop pop add mov dec ret mov adc mov adc cld dec pop inc sbb dec pushf cwtl push xchg mov adc pushf sti cmp bound fildl jp xor or mov and lods ret pop stc ret xor leave mov cmp xor mov rcll mov test xchg and dec cmpl push aad stos rcrb pop (bad) out stos pop cmp pop adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) std mov mov jecxz jp loop sti mov repnz mov jnp lock inc (bad) ja ljmp cwtl ror cltd flds rcrb and cmp or and inc (bad) fcoml xchg mov ljmp lcall sti das loopne xchg andl inc inc es and xchg jne popa or mov insb adc ret insl fdivrl push xor xor dec mov pop dec jnp push lea scas dec arpl sub data16 cmp pop pop xor cmp sub lret sahf rcrb ret rcrb add es jl cmpl sub or mov test out sub fistpll cmp xchg icebp popf bound adc loopne push rorb and mov int3 sarl fldenv loope cmc cmc mov pop mov repnz ret dec dec push into cs lret mov mov (bad) push sbb shl xchg mov cmc adc les add or sbb dec and xchg es mov cmpsl pop sahf stos fstl loop jae xchg out sbb icebp cmpsl fcompl mov andl mov fldl add dec lods fnop push sbb or fcoms mov stc in mov pop jae (bad) push rcl jbe and push push pop fwait test mov outsl lock fs das rep aad (bad) mov int mov inc pop jbe stc out jns xor cmp xor (bad) out mov push xor iret hlt pop add mov les fstl outsl inc inc outsb xchg pop lahf std scas sbb push int fisttpll lret cmp rclb fcmovu outsl mov test test (bad) mull add xchg test clc xchg int out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas stos test dec loop add mov mov push stos icebp out sar push dec mov and mov sbb ss xor es xchg aad push pop lods sub testl repz xor adc lods xchg xor xchg pop xchg inc xor nop dec pop add mov popf rcrb ret push out xchg push icebp les sahf push in sarb mov dec lods add and stos or pop in das xchg mov popa pop in pop aad in xchg push add daa mov into (bad) jecxz sbb imul mov sub pop add jl arpl rolb mov es scas test push imul cmp pop adc xchg subb sub or (bad) (bad) adc (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl mov repnz lcall and mov ja sub (bad) hlt fsubrl leave xchg xor or ror icebp ror mov dec mov loope repnz lcall cmpsb cmc aam pop lcall (bad) push push xchg rolb sub cwtl cmp bound sbb sbb js insb ja mov jbe add and das and mov jecxz sbb loopne aam out nop outsl dec pop dec lds xchg lcall (bad) std test pop fistl lret fisubr add push lmsw fmuls shrl sbb add xchg aad int scas push enter and xchg or add scas mov cmpsl inc insb mov loop jae xchg out jp cmc cmpsl into sbb je and push inc lods clc rolb sbb or xchg xchg shrl push push push into into test mov (bad) pop pop xchg mov aaa imul outsb xlat out push sti hlt inc sub adc sub in scas ja and out push xlat dec mov mov mov cmp (bad) icebp jns jae stc mov mov test imul ja add bound popf popa call imul and push imul stc sub rcrb xchg (bad) out mov adc insb mov push mov sub cmp (bad) mov or add ds mov hlt repnz lret pop js mov imul mov pop pop or push fdivs jge fsubs ficompl adcl inc jae mov push aad push xlat out add loopne mov jmp jecxz push cmc clc sbb ljmp jl mov add rclb push and xchg xchg inc jmp jnp in movsl movsl test dec cmp arpl call adc imul test rcrl (bad) les fwait mov cmpsl pushf hlt test lock mov mov (bad) adc jae pusha pop (bad) fcmove mov add mov (bad) jae nop jg (bad) (bad) xor xor and cmp adc loope xor call push and add shlb les jmp mov aaa mov xchg jp rorb repz daa or xor xor int3 fwait iret je faddl xchg push ljmp and push jbe dec mov cwtl sbb pop jecxz sahf leave ss push xchg mov jg push lret adc xchg out inc push test lods loopne rol mov repnz mov push (bad) (bad) sbb adc mov sub xor int add cld inc fcmovnu ja xor mov xor ret leave leave ds jne divb cmp cli mov stc add mov cwtl cmp les and hlt sbb dec mov sbb adc pop jne fnstenv rorb dec pop sbb pop loope xor jnp xchg xchg mov int3 or xchg dec jp inc pop add bnd std xchg cmp sub leave stos or aad sti xor xlat in pop (bad) xchg lds sub pop mov xchg (bad) (bad) stc addr16 sub in cmp jnp ja push cmc aaa (bad) jno mov fisttpl pop inc movsb lret sbb pop adc sbb pusha rep jg dec popa mov (bad) jbe and mov cltd sbb xor mov pusha pop jle dec stos xchg xor pop cltd out cmp ljmp jmp stos pop cmc es insb xchg sbb or cmp inc cli sar cmpl pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov out add jns mov (bad) clc jne cmp dec inc sbb sbb ds aad pop es inc cmc or idivl (bad) scas xor sub fbld imul mov cli push scas repnz inc pushf mov stc aaa imul pop push mov push xchg bound out ret scas imul inc jg xchg in popa fnstenv adc mov mov xchg cmovae shl leave push mov xchg push lock dec loopne jae mov sub jno adc mov arpl jge mov push jae mov out (bad) xchg cmp push xor dec stos sub stc cmp mov mov sar shl adc jg mov outsb jae push scas sar in adc pop and cmp xchg mov repz out out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas aam (bad) push or push mov sbb jg popf arpl sub add ret or and add loop mov sub cmp pop and add add cmpsb and (bad) lock (bad) jo jbe shlb and inc sub and push lret fs popf and push mov sub repnz daa movsb xor lcall insl fs pop je (bad) sti xchg arpl jbe sub jb pop icebp aas dec push loopne or push (bad) sbb and cmpsl mov or dec mov xchg push cmp lea cmpsl fbld push aaa lods xlat or (bad) nop cmp or hlt push or dec push (bad) imul dec ficoml pop inc sahf jmp roll xchg add leave arpl test pop fdivs add mov loopne mov and es data16 mov js in in lea and movsl movsl and in in or mov add xchg dec sbb jb ret mov lods sub psllq pop sbb or mov jp aam (bad) and dec sbb jb inc in xor pushf pop xlat hlt ja adc jb mov fnstenv jp outsb mov rorl and mov pop pop mov pop push push repz add pop iret push jp nop ret dec outsl pop pusha mov iret dec fdivrl aam xchg test cmp add sub fwait mov lcall sbb mov xchg popf fsubrs dec xor push push (bad) call in test and dec inc or dec mov int3 dec sbb je mov ret mov stos enter lds outsl cmp sub mov arpl insb mov in pop mov loopne xchg pushf jl sti jne sub out dec mov xlat enter jo push push (bad) call shlb sub fstpt sbb mov or inc inc inc jns lea cmp add ja push enter adc push loope or mov mov pop push enter enter push mov and xchg xchg jl adc jmp fxch cmpsb and lret (bad) sub cmp pop xor mov xchg sbb mov gs rorb lods aas ret xor ds push loopne insl cs mov out cwtl lock and and dec pop cld sbb cwtl add fiadd xchg inc mov pop add xchg dec dec pop cs xchg sti nop push sarb (bad) pop or int3 add and dec mov push jecxz inc imul dec mov mov fnsave je repz daa dec (bad) leave xchg mov inc inc adc dec add mov decl lock imul insl jno dec hlt cli fistpll lret imul int3 popl or movsl test dec cmp arpl call adc imul insb push push adc (bad) (bad) and (bad) push inc and test mov int3 fwait mov xor jnp ss adcl sub and mov adc pop dec push adc lahf std insl mov xchg pushf sar int nop les mov into cli add rcll jno push (bad) mov mov jg int cmp mov sub sarl jmp mov add or xor loop push fst pop cltd mov stos call addl push (bad) pusha nop and mov test insb mov and xchg pusha in inc add cmpsl (bad) mov (bad) adc jno sbb xchg push inc xor das cmp dec addr16 jle aam test lret lcall mov dec sahf or (bad) mov (bad) pop nop fcompl sbb gs daa pushf pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push (bad) mov subl pop jecxz cmpsl jns cmp (bad) sub dec divb push (bad) in push xor add or pop insl dec daa data16 push mov jecxz sti cmc iret lods mov inc ja and mov mov push lcall inc popa loop loope or adc sub sbb cli shrb aas cmp inc aad dec cmp ds xchg cli stos dec outsl adc pop push or sub les movsb jno in sbb imul test xchg or incb loope call xchg push mov ss in dec xchg sub test adc mov les adc add mov leave xchg jbe add xor jle and xchg dec fwait cld arpl hlt sub lea arpl icebp mov mov pusha jg xchg sub and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 ss adc fldl2t xor lahf jl mov fbstp in int jge inc fldenv xlat fucomp xor loope push mov mov stos sbb dec push sbb push xlat shl daa nop mov andl add jno out mov sub int3 sbb jg pop or incl inc loop pop mov inc prefetcht1 cwtl jno mulb or insb inc jb stc test icebp inc dec lahf lods ds js inc mov int mov loop popa xchg mov out push inc mov ret mov sbb inc fnstsw jmp xchg push add adc addr16 xchg stos icebp jmp lea call and jmp loope mov lods sub dec lcall stc cltd mov jl mov push outsl out imul adc xchg xchg dec dec jno mov or add rol shll es data16 test dec popf pop (bad) xor (bad) cmp push cmp nop mov aas in inc pop (bad) nop (bad) cmpsb scas nop aas jle sbb pop push add add sbb jmp xor dec ss movsl ret test jmp or aas xor add insl js fsubr mov lods and into call cmp jmp xor lock pop pop loopne jl adc nop (bad) or hlt loopne fstpl cmp add push or add jae lahf popf cmpsl mov hlt push dec pop ficompl adc fcoms iret jge (bad) scas add sbb add rorb inc js dec adc sbb das push fist and outsb imul ja sub sbb (bad) aas test movsb call push jge std andl stos push (bad) pop lods pushf call in or xchg fcmovu mov inc addl lock add enter jo push incl push (bad) sbb sub ljmp in mov out dec cmpsb dec pop mov push ret ss scas je mov das dec out mov inc mov jmp push aas je enter mov jnp mov cmp jae xchg pop jne mov mov dec cld sar push and lcall les imulb arpl xchg sbb popf or rcl dec rcl or inc adc adc std jg bound adc mov clc rcrl add xchg out fcoml and xor mov lahf pushf pop lds int fwait insl test cwtl cmp fisubrl pop (bad) out lock jmp sbb in and mov jb cmp arpl int pop or and iret mov in test inc pop fild push sbbb fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec int (bad) mov cmp pushf sarb adc lods sbb and mov jbe stc mov test (bad) lret or jg daa cltd push mov out cmp sbb jnp into push add aam in outsl lret lods sbb jns inc sbb test jg dec sub add xor push mov mov inc mov iret mov fcom lret push mov inc rorl shll iret in xchg fldl mov call jg add cmc (bad) lret loop loopne xlat je sbb push cmc aad push and jl mov stos negl sti xor push outsb movsb adc mov mov add xchg lock pop or aam sbb or xchg imul add mov test jo mov and pop jb outsb outsb mov lret divl aad xlat adc (bad) gs daa pushf ds (bad) int aas sti test jecxz jne push jae dec daa lds inc mov add cmp push insl out add cs inc cmpsb add sbb mov xchg (bad) fadds push inc (bad) mov in (bad) das out dec mov sbb pop jl and pop or adc mov leave mov fcmovne fsts lds dec sbb sub shr dec pop inc insb xchg push fcompl push fchs fwait xchg mov and imul in cmp push aas sub (bad) popf cmp cmc in popa xchg fcompl mov into fdivrp and xchg sbb sti sqrtps std ds pop arpl cmp imul fldenv adc xchg jle in (bad) scas dec jg mov or mov push (bad) jl or (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods jnp ja call sbb cli adc outsb and mulb cwtl ss (bad) stc mov dec push inc rol mov pop dec sbb arpl mov repnz in sub mov or lea pop ds cmp lahf cld mov scas mov mov int3 pop push rcrb notb jo mov pop inc repnz xchg mov stc or push lcall cli pop hlt lcall xlat and enter sbb mov aaa push cmc sbb fcoms mov mov mov dec aaa (bad) jo icebp sub shll jg xor into int sbb inc loop sub fstpl jmp je iret inc mov fbld fnsave mov icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp pop jg mov cmp das stos add add in in push push out and cli jp fistpl adc jnp lret movsl pop out mov mov hlt or int3 fisub inc push enter fildll cmp xchg mov fiadd popa pop test sbb xchg out push push push (bad) jecxz (bad) sub stos cmp negb xor (bad) outsb (bad) mov aas outsl xchg xchg divb sub add xchg incl mov (bad) jnp fsubs mov pop mov out inc jbe aad loop sbb add loop aam movsl ss inc inc pushf xadd mov clts in out rorb sahf sub imul lret in addr16 sbb mov inc mov mov pop mov sarl sub out scas scas dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) fmull into test xorb dec scas rolb loop fs push and in dec fcoml cmpsl inc incl add js movsb cltd sti (bad) mov dec pop xor hlt ljmp pop lock sub xorb or push and (bad) (bad) stos fild mov les jg imul lods xlat xor repz fwait test out into outsl push pop and inc shrb push add push mov mov adc aaa rcrl add pop jge aas add dec jae jo cmp setge cmp and push or cmc sbb sub mov jl jle cmpsb dec push pusha push call icebp mov scas or mov mov inc push sub insb dec cmp sub jl add out hlt leave adc xor addl lock add enter jo push (bad) call shlb loope push inc pop lock pop pop adc jno jecxz dec inc leave lret mov or je mov jg lret xchg mov push and pop push mov jp inc popf movsl les pop js sbb fistpl rolb jne cmp repnz (bad) ss add std or leave movsb push mov jecxz out je je lahf ret repz lret jno and or cmpsb mov or (bad) pop shrl out cmp add jecxz je mov jns jno pop sbb movsb mov push push in push lods loop cwtl ja xacquire je xchg inc adc pusha jp xchg nop shrl aam test lds loope std jmp out push mov roll stc lods push add inc sbb inc adc and pop aaa aaa imul out in in in aam push push cld cld add (bad) xchg mov fdivrl orl and mov in push jo in sbb sbb mov movsl pop in outsl add mov xchg call aad pop outsl xchg xor enter and outsb mov aad inc xor pushf popa subb push aaa xor roll psubq push dec sbb mov xchg dec adc add lea (bad) test cli iret rcr sbb lret clc jnp jge loopne,pn dec xchg test frstor mov sub test xor rcll inc dec or lret fmuls icebp jge loop lock cmp dec mov adc and sbb mov decl mov ds scas fsts add and xchg mov adc dec les cwtl and adc lods imul insb push push adc (bad) aad xlat xlat adc (bad) gs daa pushf pushf cmp mov bound mov or xchg cmp mov ror mov pop mov mov icebp push inc or push adc pop jne pop sub (bad) mov cmc icebp cwtl xor leave hlt mov hlt adc rorl insb lds lock pop xor (bad) ss mov imul rol loope pusha daa dec out or (bad) add lret sub enter cmp ljmp sahf jnp imul dec fs jl daa push inc bound popa popf ds daa iret cld sbb es insl adc xlat lret ret xchg push sub or mov dec push sub mov pop test mov in jge mov sub mov insl dec add push push push dec stos in push mov mov popf pop ret imul lahf lahf xor mov cmc mov pop mov repnz ret dec dec push into mov loope push or push sub and lods xchg in mov aad xor mov out fimul inc jl xchg mov jle mov cmp pop cmp fist push (bad) mov dec xor dec (bad) int add es mov adc lds mov jmp test mov fistp fwait stc push sbb fstpl adc mov push bnd adc add clc stos sti test mov fwait sahf sbb in (bad) lcall packuswb jbe sti push les push clc xchg cmc ljmp or int3 mov push popa frstpm(287 push mov lods cmp pop fs inc enter sarb outsl add scas xor dec mov mov sub mov ljmp or in push and out pop testb lcall xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos in cmpsb mov cmpsl xor jns add out icebp inc sbb divb ffreep aad data16 (bad) jae sbb mov cmp sbb fdivs fcmovnbe pop outsl sub (bad) cs mov jno or and repnz push int3 sbb xchg jne popf lea aad fcoml adc sub cmpsb fdivl pop inc in push aaa pop xor mov xchg and insb outsl dec cmp mov sub lods adc dec shrl mov fcomp xor divps cltd test push mov mov jg sbb hlt mov and test add add xchg mov add jg fimul jnp aad push sub shr sarb jnp rorb mov movsl pop out mov lret jb mov (bad) xor cltd pop pusha cmp push dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fidivrl aaa sub xchg pusha mulb push or aad xor push arpl inc pop mov add inc fiadd loope jne subl insl mov sub test out frstor mov out mov adc ret ss xlat loope mov shrl pop sbb jo mov in popf repz popf add cmc xor (bad) (bad) leave ret cmpsb sbb and jle call fistpl mov add push push mov jmp sub mov dec mov push std xlat add repz mov xchg or sbb cld rcrl daa popa push jle mov xlat jge adc stos mov or push pop and push (bad) mov call iret mov lret mov jmp cmp and data16 mov in jbe andl or xchg loop scas scas nop nop movsb movsb push push push into into test mov incb mov lret mov mov or push fbld push jmp mov jle push mov pop icebp insl js xor add dec jnp jno xor push daa inc mov mov inc test add scas jg dec mov mov xchg and dec xchg mov sub xlat popf xchg mov cmp (bad) nopl xlat imul daa es clc adc push outsb lahf mov mov imul pop cmp insl nop sbb sbb lret mov inc inc lret mov jge or jp faddl sub cmc bound and mov lret mov jnp mul das mov lds sti push es mov or inc cmp mov es jne or (bad) inc inc inc dec dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl push cwtl mov cld mov or nop xlat xor dec addr16 push sti pop sarb dec xchg inc push cwtl in add daa push inc sub loope lods xchg es hlt adc (bad) cld inc dec push fstpt (bad) xlat mov lahf mov movsl fwait repnz mov sbb inc jno mov fwait lock push sbb inc (bad) arpl aad mov and sahf lods fsubs fsts mov faddl mov pusha adc mov mov data16 mov or data16 decl sbb inc imul aas sub add fistp mov xchg adc sub fs sub repz mov fnstsw jp cmovne dec dec icebp in rcll ja xchg and cwtl icebp add jp lahf imul push push adc (bad) ja xor mov xor ret leave leave ds dec push sub mov in test dec dec cltd xor mov add cmp dec or inc adc ja jg daa fwait lret or (bad) js adc xchg cmp fcmove insb mov xchg mov (bad) mov bound ja mov lods dec adc cld std xchg mov push cwtl xchg inc sub in jge adc call pop cmpsb icebp xor adc std les mov sub movsl cld cmp data16 cs jmp cmpsl loope inc das xchg lret and pop call cmp mov jnp hlt into scas push outsl fnstenv pop pop loop loop cmp lcall hlt dec movsl in sbb inc push daa std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov adc add rcll testl jne push daa sbb pop ljmp das (bad) aas std les adc mov fwait repz add push or outsb mov inc pop pop mov xor jmp into mov andl pushf inc push add daa or jl adc pop stos and in stos add dec mov xchg pop xchg jnp inc sbb icebp test adc lahf out int xor xchg fs cmp in scas shlb add aad ja push (bad) jmp mov rcrb mov mov or sbb mov add hlt sar leave not sub jl lret pop pop (bad) mov movsl cld test sbb mov int3 mov aas das lret test cld mov or xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos stos cltd cltd mov stos stos adc lret aam or mov jmp mov cmp or sbb add mov loopne xchg stc adc add sti push adc fmull xchg cld movsb xlat ret or lods mov mov test push and push aam roll lds push push xor loop adc push hlt ret aad insb sub and push imul cs out pop ss inc push mov jae dec mov jmp jl and xor aaa mov inc mov push jo mov fild repnz popf xor popa or shr lret sub leave fcmovnb sub bnd and sahf ds xchg aas inc mov jg fistl int3 cmp shufps xchg loope int3 push sbb sbbb sbb and aaa stos sbb rol shll es data16 mov js in in lea and movsl movsl and sub ret inc hlt adc jmp add ret fistpll mov xor cmpl jns mov xor movsl stos sbbl inc mov jo jnp shlb pusha adcl es jb lods sbb dec iret fstpt sbb mov jecxz,pn and or inc add jmp mov lds mov inc (bad) scas insb out in lret insl add mov fbstp sub add cmp xchg cmp pop pop xchg inc add and add lahf sbb inc adc sahf and cmpsl addr16 nop and test and mov shrl mov fbld cmc jnp mov je pop lahf aam xor inc inc or loop mov pop sub clc and movzwl roll cltd cmp mov mov test add enter jo push (bad) call shlb sub fstpt sbb mov or mov sub mov add xor lds mov ljmp dec dec sub jge jecxz mov (bad) dec sub lds dec lretw rcrb sbb jmp xchg in fstpl arpl mov ds sbb hlt mov xor out dec mov scas cltd dec rorb cli xor pop pop or daa daa lock add lret mov add dec push repnz stos jecxz push inc add (bad) sbb (bad) jp jmp add ret mov pop add inc (bad) mov insb pop mov outsl mov insb ret jg popf lcall movsl dec int3 cmpsl aad jbe xor leave lods jno pushf add fist dec sub sbb inc mov mov mov js pushf dec xor jl sahf sahf jnp in movsl movsl test dec cmp arpl call loope pop lock sub push lahf jg mov (bad) scas push repz cmpsl fs sub std jno aas out lea push mov (bad) loope out xchg sti mov dec add sbb rorb enter add dec sub pop das mov adc jmp add lods cli sub outsl sub mov (bad) das outsl cmpsb jno add shrb gs sarb jne or dec xor xchg cmpsb lret push pop or clc pop shrl nop sub xchg jp cmpsb stos sub hlt mov (bad) xchg and das arpl stos inc in cmc rcrl mov xchg sub mov ljmp mov scas cli das je pop push push stc scas in or add adc mov xchg (bad) xor je jmp cld loopne pop div mov addb adc gs daa pushf pushf cmp mov rcrl push jae jecxz xlat mov xchg fwait popa pop lret jns pop cs inc sub scas scas dec push sub xor rclb xchg fmul lods jmp mov out xchg mov outsl cs lcall mov int3 test dec pop scas hlt sbb cmp sub jg pop and ret lods nop and sti adcl xchg cwtl test jno dec (bad) repnz in in jns cmp movsl sbb js push pop fdiv jl sbb shr dec loope mov push pusha sbb mov fsts lods pop xchg jnp (bad) lds xor mov (bad) adc out inc cmp test add mov mov ss arpl add jae and pop aas aas push push sbb (bad) rcll push and lods lods or jp sub mov out lds aad jbe sahf xor fistpl dec push cmc and rorl frstor sub fs jno fbld and imulb out in add mov ret scas cmp stc and mov fdivrs jae adc loopne fbstp or mov or aad mov xor jl aad inc cs adc loop cmpsb cmpsl pop add stc xor pop insl ficom xchg jnp insl sbb add jbe mov sbb add mov hlt cmpsb sub sbb xchg adc push dec pop popf scas xor std add movsl fnstenv xor mov cltd cli lret scas jp pusha dec lcall mov and jmp pop bound mov or jle mov jge mov je in (bad) enter jge xchg pop mov dec aad das pop mov loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp xchg dec dec jno mov fisubrl xor sbb dec in in pushf stos dec scas pop and push imul or stos and mov inc fimull push enter jo mov pop and inc leave outsl popf lahf cmp inc (bad) in std negl sub mov imul subl inc daa pop add jns cmpsl lret cmpsb jno mov fdivrs sbb in jmp popf popa fsubrl stc cwtl repnz in dec pop pusha cli sbb push jns xor or cmp hlt cmpb xchg pop add pop rcl mov mov mov outsl push jae pop inc mov sub loop dec movsb enter xor mov sbb cmpsb shrl jp sub lret xor and out dec xor push xor jae add ja das das test or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl (bad) cmp out ja mov repnz in add cmp mov out pop out decl outsl ja jmp stc insb mov stos lret adc sbb cmp mov out add into jmp jl lea jmp mov hlt ljmp aam rorb stos (bad) cwtl adc xchg xchg mov jg mov or mov mov add inc xor xlat lret xchg lea mov cmp out outsl mov cmp int3 push pop inc icebp sbb jb xor push add push mov xchg mov xchg ds xor (bad) mov fdivl xchg and jb imul cmpsl sub andb push sub in in xor cmpsb push mov add enter jo push push (bad) call shlb sub fstpt sbb mov or fsubl in and test cmp in in aaa dec xor test (bad) sub mov sub xchg adc ljmp aad dec push sbb mov (bad) cmc mov mov imul movsb mov sbb jge shrb jle movsl test bound outsl dec mov out and int or pop popf into dec inc mov push jno xor cli xor mov test cmc mov sub insl or pop jecxz ret cli jl or (bad) daa dec inc cs xchg sub lods popa sti test xchg popa jle movsb loopne cld push xor jae imul call add aad xchg rorb sub imul jl adc mov jbe pop lahf pushw cld cld (bad) xchg mov faddl sti fs outsb mov cltd sub pop dec dec daa cmp and jb fisub cli jecxz pusha aas xor and cmp push mov xor jae in sti pop ljmp mov ja aam mov jg mov repnz fcomps jno popf push insb dec pcmpgtd push je out inc xor inc jg cmpl jle add insl xorl dec lea mov test add xchg xchg into lock or cli xchg fs ljmp and dec adc inc aam xor xor not aaa pop dec mov mov xor ret jno or sbb out data16 fistpll stos lret mov gs add mov cmp jecxz sbb push test test cmp in outsb mov pop jmp cmpsb sahf xchg addr16 (bad) aad xlat adc (bad) gs daa pushf pushf cmp mov rcrl (bad) (bad) mov xor inc and or and (bad) cmp xchg jge sti xchg pop mov es ds leave jo add js cltd imul push jb idivb inc push inc xchg or cld das (bad) lds ljmp add cld cmp sub in out cli fstl aas testb push (bad) into leave test adc lods pop fidivr push adc push jo mov xchg in (bad) jno xchg sub add addr16 bound fdivp sahf pop mov mov pop ljmp dec jle (bad) pop cmpsb add gs xor pop sub addl and xor jae adc mov dec lock mov or push mov (bad) cwtl mov in test fiadd loope cmc mov pop mov repnz ret dec dec push into cs lret mov mov mov inc repnz les fcomps mov mov dec cltd aam int3 mov out xor xor mov or inc jl inc (bad) nop and mov inc sbb iret in sbb push mov cs cmp jns les mov pop movsl fs ret daa dec call pop (bad) insl addr16 int lret jl mov (bad) mov pushf add sub add popf mov test sar jecxz insl mov fistl mov mov jmp and xchg icebp mov dec call inc push push dec add and push ja sbb jmp pusha jmp sahf xor push sub ds adc dec jne xchg cmp cwtl cltd cmp push les push sbb shrl mov or out int3 int3 ss cli cli stos stos cltd cltd mov stos stos adc popa popa jbe scas scas dec fldcw lret jae test test or subb idiv inc shrl cmp or add dec mov push out mov xlat mov fstpl fdivrl ret push mov and test insl jo mov pop movsl (bad) jnp outsb ds repnz mov cmpsl pop dec inc dec aam subl xor and movsl (bad) aaa mov or inc cld jge aaa jae pop add jp int loopne xchg push mov pop cmp sarl pop add push push lret mov mov push scas (bad) test es ret inc test (bad) pusha movl sti jmp xchg (bad) (bad) mov imul imul (bad) repnz fadds add jae sbb xchg aad adc mov outsb mov in enter pusha call les or (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock lea ret pop nop cmp push or dec cmp bound cmp add iret loop xchg adc into das or insl mov jno xchg out jae dec jae add push ret in cld mov mov outsl inc sti pop mul xorl pop sbbl outsb and ret imul jns enter add add scas lret dec pop xor lea lds inc loopne pop pop jle das into stos sub push (bad) pop push jns fdivs mov cmp into lret pop gs insb inc pop rolb add or push enter lret sub lret xacquire mov adc dec mov outsl dec (bad) mov sub push mov aaa rclb loopne ja cmpsl sbb push cmp cmp or jge push push into into test mov (bad) pop pop xchg mov aaa imul add out add xor daa lds test and (bad) jne popf sub jno push sub mov xchg jb clc xor lret int hlt cli test and pop mov (bad) mov scas daa scas test ss add mov adc repnz and fcoml in aaa push testb push test (bad) push jge jecxz mov ror mov xchg out add push mov ret cmp or mov pop pop (bad) or orl negb jae std inc (bad) mov in shl mov jo xor fistpll into (bad) (bad) xor nop push fsubs lahf rcl xchg mov loope sarl adc ljmp idivb out ss mov and add test test daa xchg icebp adc jnp in movsl test dec cmp arpl call adc imul insb push push sub sub xor (bad) push xor push mov gs mov imul pushf cmpsl repnz (bad) std ja or mov (bad) cld popf repnz jg adcl out mov adc call outsl or sbb adc mov aaa push inc js sbb fmuls (bad) cmp sub dec jge mov insl or test test jns int pop into jmp dec int (bad) sti nop inc cs std cwtl mov dec fsub dec in repnz cld cmp mov lcall fs mov xchg jg add loop (bad) mov stos sbb js cli fistl cmp cmp popf mov jne cmp in inc inc shrb jle lds cwtl push outsl add divb or ret ret leave leave ds jne divb cmp pswapd loope push mov hlt jecxz add incl and dec xchg icebp out out adc pop (bad) shlb adc andl inc sbb dec mov adc scas sbb (bad) in add pop cmpl mov jecxz call add adcl add in dec test repz pop sub stos mov inc loopne in or lods xchg dec inc xorb std or je cmp stc dec stos nop out iret lods push add push jle fdivrp mov jge sub jns stc hlt push mov sub push mov xchg inc fcmovnu push test mov jmp dec lret lods fsubr loopne inc pushw ret lock gs out dec add std xorl enter push add ds lcall aas xchg push push push and lods lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl and cmpsb loop or arpl ds cltd (bad) fistpll lds inc sbbl das jl cmp lods paddsb daa pop jae adc sbb inc pushf inc sbb add lock dec sbb sub clc psllq loop hlt mov jmp cmp inc mov adc sub jae sbb fistpl aam sar decl xor inc push cltd out xchg sbb stos jb imul gs pop cmc test sti inc in gs outsb jmp dec out rcll pop mov popa xchg mov insl imul fstpt cld inc insl adcl mov iret inc jb cmp ret imul lock xor xchg subb push aaa xor ret repz inc adc orl mov sub mov adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test and lea (bad) pop sbb insb or lahf jnp xchg inc xor loope sti push push dec jns (bad) sbb jle jge and mov xchg ja dec adc js push lcall or push cmp loop outsl (bad) je pusha mov push xor sub or ljmp lock jbe push sbb lods mov pop cli fnstsw push inc idivl push ja outsb loopne,pn daa rcl arpl sbb sbb xor insb js sbb add jae sub and push cwtl or mov or sar push fimull sbb inc mov pop sub repnz mov test cltd pop ljmp testl hlt add xchg lods (bad) movsb (bad) ds xorl gs stos inc xchg mov in lea and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push jge call push xchg xchg push jp xchg mov fsubl cwtl mov pop and mov loope and jns nop leave cmpsb cltd push push addr16 cmp inc pop add add sub jo rcrl jg mov ret add inc mov mov rclb in push shr leave push jno out adc pop clc push mov andl xor test push or push sub inc in mov loop or repnz add push shl adc int and daa xor sbb push aaa aaa sbb push bound push call mov mov inc idiv lcall cwtl das ret mov sub inc es sbb rorb jmp or shrb aas hlt xor pop outsl jnp push mov mov sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf jnp in lods dec push insb (bad) (bad) (bad) into lahf in jg lods mov imul pop pop mov (bad) lret pop xchg dec imul dec loopne inc adcl stc pop or fwait pop aaa xlat es and xchg or and jno sub fdivs aaa mov jbe jo test in jne gs or mov in sbb add adc adc push pop popf mov jno aaa inc jecxz mulb jnp test movsl les sub fst jnp push lds (bad) cld (bad) std (bad) cmp or or pushf mov cmc nop sbb test pop push xor out adc roll sub fiaddl ds aam or pop lret push xchg lea xchg into xchg loope enter into int lock xchg ja push (bad) sldt mov (bad) arpl call adc imul insb push push adc (bad) ja xor mov xor cmpsl xchg jnp sbb xor fisub scas aas adcl (bad) xchg (bad) movsb or lds inc jle pop mov lahf cmpsb std insb mov lret fdivs std xchg xor mov mov lds cmp mov and sub jmp lahf fwait testl xor jae jo roll cmpl dec xstore-rng cmpsl test jns cli andb fstpl push into test pop xchg sarl adc inc pusha push loop jmp mov jmp into or sbb notb stos push std adc xchg xchg or clc js outsl add adc daa push push cltd sub daa (bad) in sbb std sbb aam pop push mov dec xchg in jne dec jae mov out cs dec sub rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) (bad) jae hlt push xor add lret pop dec ds leave nop daa (bad) jmp cmp es mov adc nop and jb popf ds aad lret es (bad) xchg loop or jl scas inc xor cmpl add mov push repz inc lahf mov stc subl push xor insb out cmp mov mov loope sarb adc outsl dec scas imul (bad) into lret jecxz jne jnp sub and fwait in dec mov jmp inc fistl mov (bad) ljmp and mov sarl aam sub js xchg loopne mov stos sbb aad or sub or out call and aas addl inc out sar sbb int out or mov out fwait jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl int3 ss cli cli stos cli int3 pushf js mov mov lret mov movsl lret rorl push push and cmp jae sbb adc add jge jae dec outsl addr16 stos xchg pusha hlt inc bound mov mov xor jg rorb mov cmp adc xchg in sbb jmp cmp mov add jne fisubrl imul rclb out out imul jl fdecstp orl xor mov ss cmp ret repnz push cmc insb iret sbb and cmp dec call cmp fimull aas (bad) adc and movsl inc mov ret sahf ds and add mov push inc mov lahf hlt pop aam jo cmp sbb sbbl mov xchg sbb dec jno mov or add rol shll es data16 mov adc adc adc (bad) sub cmpsl lret xchg repnz and (bad) imul jb pop movsb sti (bad) cmpsb cmp sub mov mov push outsl test dec xor sbb sar ljmp mov mov jno push in out sbb rcll repnz in arpl jg xchg jp cwtl sbb add inc shll cmp mov sbb enter leave insl (bad) (bad) fidivr int3 sahf jb jecxz insw scas xchg mov or mov add stos out jecxz jne ret push adcb or ret sub mov xchg in mov jmp gs jo cmpsb lret movsb (bad) hlt sti ret into lahf and lods popf cmp arpl adc je push xchg adc dec adc add (bad) xor jno xchg test pop inc sub mov mov inc addl lock add enter jo test cmc mov xchg stc mov mov xor in sbb int3 and cmp mov (bad) rolb mov bound jae cmp dec push into jl mov shl cmpsb lds jnp in push cmpsl xchg add mov mov pop push outsb or xchg notb data16 adc pop add xorl xchg lret sbb cmpsl (bad) jo in and add shr xchg iret jbe xchg jb jno lret add cmp and and add fs xchg jl add mov pop in insl jbe adc xchg sbb mov xlat mov sbb adc adc push out add lret push mov pop pop addr16 lods jg cwtl pushf mov or jge push cmpsl divl xor in sub add fcmovnu jg sbb mov or inc inc dec dec xor jl sahf sahf jnp int xchg xchg jmp lods inc jmp add cmp cmp int fdivr push in fadds adcl (bad) mov (bad) mov inc sub lcall stos sbb outsl and icebp rcrb jnp pop aas ss shll inc mov in iret dec js mov xchg dec push shll jmp js fidivr pushf imul scas bound fbstp or shl xchg cwtl mov icebp scas fisubrl push jbe inc jae xchg jne (bad) and xchg adc repnz pushf cmp stos ljmp int3 call cmp and test loope mov mov push testb and pshufw lods xorl mov push arpl jo scas outsl aam and mov outsb outsb mov lret divl aad xlat adc fneni(8087 dec pop mov mov pop aam bound lahf (bad) gs pushf and mull adc (bad) jg and or lds adc cmp xchg (bad) jmp dec jno stos jg repnz int daa fistp inc sbb or mov fwait ret fidiv pop cs cld popf xchg addr16 sysret and cli fimul jne pop sbb jae inc test sub and mov adc out rcr cli cs repnz pop (bad) add add xor xchg rolb or fsubrl xor jl pop (bad) popa dec cmpsb mov rcl inc mov int3 xchg (bad) in mov std fimul mov shl lahf cld xchg add mov (bad) sbb cltd dec clc xchg sbb dec and push cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb (bad) pop loope mov add jl cli lods out add push mov sbb arpl xor lock xchg cmpsb fmuls cmc fmull test and mov jl pop mov mov add inc mov pop jg rcr out int3 mov jno sbb loop lea sbb or pop sbb rorl rolb pop popf and in es mov lods icebp dec movsl xor repz pusha in icebp xbegin (bad) mov mov (bad) lock jl cmp mov xchg pop in mov rorb ja pop sub dec aas pop (bad) jnp mov and pop inc mov leave in fsubrp pushf int3 into push lret xor dec inc xor cmp scas ret repz mov adc push push cs lret mov mov hlt hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push sbb daa fbld jge leave jmp cmp sub test mov mov repnz mov sub movsb and jp js add ret mov cwtl adc dec and test es adc inc fwait xchg insl push add outsb pop (bad) push lods push lea aas loop nop mov aad int mov xchg jle loope mov ja repnz xchg ror or (bad) add (bad) jle xor inc addr16 and (bad) arpl xchg daa add add fadd fnstenv xchg cwtl sub imul test bnd outsl leave xor cmp pusha xor fmull or leave aas stos xor outsl ja fyl2x xchg popf inc (bad) mov push out pusha pop insb jmp inc sub and sbb fwait imul mov mov stos stos adc popa popa jbe scas scas dec dec jns cmpsb cmpsb bound das test or aam bound cmp outsl clc loope dec clc mov jmp insl cltd xlat aas ret test sti stos jnp add mov outsl (bad) out (bad) jo mov popf (bad) nop ret pushf add pop push sub mov (bad) mov (bad) xchg repz jg pop clc or repnz in fsubs std (bad) mov jmp add jns (bad) and aas sbb leave movsl inc inc dec test stc frstor and lock xchg stos cmp (bad) or jo lea imul push jge pop mov sub jmp lret fidivr dec xchg sti xchg mov call sub sub inc aad jns addr16 dec xor dec shll mov shrl imul jecxz xor loop add add neg scas or bound out sub or and mov fcmovb movb orl lock add enter push ds or or cli cltd adc (bad) sub outsl jmp (bad) outsl mov in sbb pop movb and inc inc inc jns mov xlat test ljmp (bad) scas stos out test mov xor xor int3 sub cmpsb ss int3 mov xor mov gs movsl inc scas adc repnz enter cli mov in int3 pop imul add js push aas pop sbb insl mov sbb aad cmp inc popf repnz mov push nop cld sahf cli mov orl pop add sub pop pop inc cmp sub push ss xchg jnp xchg lock mov sar pop mov fistpll and cld flds shr push adc int gs test (bad) (bad) pop pop xchg mov aaa imul out in in in aam push push cld cld adc xor jns stc dec movsb pop inc lcall jecxz xor loopne mov (bad) jp push jnp mov or repz push mov jg data16 dec push insb fimull addr16 or fstps je ror gs lret cmp div out xorl xchg cmc je xor lods cld in lret mov mov lock test inc outsl and inc mov ss cmp fsts pushf mov hlt (bad) gs stos mov jmp sbb icebp sbb ljmp (bad) (bad) jb add out push sti es and xchg inc pop mov mov rcll push lret (bad) nop ret pushf add pop push sub mov (bad) mov dec sbb (bad) xor lret out out je dec dec cmp arpl call adc imul insb push push adc (bad) aad xlat xlat adc sbb mov cmp xchg test mov push mov mov xor je mov sti addr16 push repnz pop adc data16 pop test mov nop test and adc into stos inc sub (bad) int3 movsl int3 das dec fisttpl or push push add adc push pop aaa test dec mov mov into pop xchg rcl bound lret inc xchg inc xor (bad) popl mov mov in imul sbb mov xchg dec (bad) clc js in fnstsw ljmp subl popf xor jns cmp and adc xchg ds mov int3 data16 push adc dec sub xor add inc inc mov je cmp add setg loope cmc cmc mov and mov push out push icebp push movsb (bad) mov and testl push fs iret inc out xor or mov ja and push jnp rcl jmp push ds repz out cwtl jbe or or and enter mov jge inc xor out icebp outsb cmp cmp or test jno rcrl xchg push mov pop add cmpsl jo dec mov (bad) mov int3 inc movsl loopne (bad) mov push push mov sub push nop (bad) cmp sbb cmp jnp sbb sbb in jmp cmp out pop in cmp nop sbb or movsl jnp stos (bad) xor call popf add xor je (bad) stos and xchg cmp dec stos jecxz pop mov stos jne ret dec dec shlb into ret push cmp mov or sub mov out sbb xchg xchg xchg xchg fwait fwait addl add rcl es fiadd gs pop xchg cmpl in adcb gs inc xor dec mov add adc push ficom bound push jmp sbb scas xorb mov lret outsl lods push nop ret xor mov test data16 (bad) nop xor cmp add mov mov xchg je inc sub cmp or scas (bad) stc add inc rol jnp push imulb lock jo insl scas fs (bad) xchg sub cmp (bad) mov int dec jmp adc xchg roll mov inc in cli mov or movsb mov pop or sti push push ds mov mov rorl pop nop xlat xor sub (bad) into jge and pusha out into stos adc lds mov cmp popa jbe scas scas dec dec jns cmpsb cmpsb bound das test es sbb and popf lret lcall pushf shrl (bad) and repnz data16 xlat es push decl movl add loope pop out mov xchg or dec mov sub inc jne xchg (bad) or ss mov shll mov sbb leave dec dec push pop rolb fild imul inc cs notb ss test in daa cwtl jecxz cltd loop mov xor les mov sub leave sbb jle dec push test ds push iret ja cmpsb cli fldl mov sub sub jge jns mov adc inc mov les lock adc xchg xor jl jnp jnp xchg push sbbb mov out mov divb pushf lock mov dec leave xor sub repz and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into cmp dec pop call jmp adc add aad and xchg push mov or inc insl jae xchg (bad) lret hlt hlt pop inc pop movsb cmp fsubs imul sbb and xor ret jl dec or popa imul je cmp sub add jge in jge insb repnz ret push jo and loop add adc xchg push pop scas pusha out xchg adc jecxz add push inc repz mov mov lret xor mov mov in sti push gs jns jmp std pop cwtl xor inc int3 jo push outsl xchg mov mov sti test mov jle add jo pusha lock aas jle adc outsl xchg xchg outsb lods pop icebp sarb or sbbl insl pop ja popf pop sbb test jno in fdivl sub fstpt sbb mov or inc inc dec dec xor jl sahf sahf pop ss dec rcl jmp pop xor and push fsubrs mov loope push ficom and pop rcrl add xchg cmpsb sub popa popa and shrb mov fcoms (bad) or dec mov adc xor icebp (bad) mov dec pop or stos push sbb push jecxz stc imul out mov jne jbe ficom push push push xchg push mov addr16 je mov out pop cmp out cmp das data16 cmpsl hlt mov int3 mov ljmp mov mov shrl dec mov mov sbb je lcallw jmp movsl inc sub gs push and xchg adc jns dec push push mov cltd inc mov dec cmp aam pop sub xchg and std leave sbb mov cmp call ret imul insb push push adc (bad) ja xor push inc mov lahf jg mov fistpll cwtl (bad) xor adc lods pop sub add aaa sbb push add adc (bad) and xchg mov jp (bad) decl lods jle dec or pusha or es add scas rcr lds and imul popf fisttpl cwtl movsl push (bad) mov cmc cmpsl sbb or inc push pop scas xchg scas movsb pop or lahf sbb push mov aam jle sub shr xlat mov int push push xchg das clc dec cmp lret jp hlt aaa aam mov push mov or inc sbb xchg scas lret xchg sub jne pop xchg cmp fsubs imul mov sbb fbstp repnz or ret test daa pop pusha or pushf cmp mov rcrl (bad) std mov inc xchg xchg pop pop aas aas push push sbb lds and icebp push adc inc dec aaa mov sbb flds (bad) mov aas jle lret movsl fild xlat adc popa ljmp pop adc adc push mov and inc in or push out cli dec mov pmaxub and imul cmpsb popa cmp jg lret jge jbe dec cwtl in or jmp cmp pop aas push cmp sbb add or daa pop (bad) in aad sbb iret popa int scas enter call (bad) test adc inc xor daa sbb in repz ds mov push or mov insl in arpl push dec lods jne mov xchg aam icebp jne stos rorb (bad) jg sub nop cmp push (bad) pop outsb sub mov mov aaa in adc iret (bad) pop scas hlt lods or jp sub mov out sbb xchg xchg xchg xchg fwait fwait addl lock jo scas mov add mov orl add nop lds pop das ret fwait call push add sub jmp jb fwait stos (bad) mov dec sbb push scas lods cld inc aad clc adc inc (bad) (bad) xchg shr in pop test and and subl into mov dec roll xor jo scas int3 movsl adc sarl pushf icebp adc insb sub int and shrd lahf mov pop jl lret jle sub push push push pop jno and fs (bad) (bad) popf pop dec xchg movsb lahf pusha cmc mov add add aad cmp pop push mov out xor dec enter sbb pop jmp arpl mov insl cmp lock jae jae fildl pop mov adc xchg xchg dec dec jno mov or add rol shll es int or test fwait and add pop add jmp sub lahf inc dec jl out cs adc pushf mov jae sub data16 and jnp jnp loope clc add cmp loope aaa jo aaa adc movsl rclb sbb mov out icebp sbb sbb mull push clc in shrb mov xchg aam icebp lahf mov (bad) mov pop jg sub gs push nop jae pop push incb outsb aas pop xchg cltd cmp push jge adc popa pop mov arpl add inc les adc insb and push pop jle lret pop fbld call loop int3 jle push std pop xor pop cmp inc xor into js inc out cli stos mov lret fidiv mov imul popa (bad) (bad) (bad) (bad) (bad) jmp xchg xchg fcmovu mov inc addl lock add enter or cmpsl fist (bad) jl das adc (bad) jae test sub mov test popf cmp and ret fisttp cmp mov mov inc mov aaa and dec loop ret pop push pop or sub mov scas lods cmp loop sbb aaa outsl jne push outsb lret pop lods std ret aaa xor jno mov lret push push xchg adc fimull add (bad) xchg mov add test clc shrl add push bound mov imul mov adc sbb out shlb orl sahf sbb mov cmc outsl (bad) jle (bad) icebp lahf cmp pop or out iret fsubl movsb inc lods xchg aad repz sbb mov dec aaa sub mov jb mov fcmovnu jg sbb mov or inc inc dec dec xor jl add sahf sahf jnp in movsl movsl (bad) in insl cmp cmp mov pusha fiaddl ret outsb sub sub (bad) lods (bad) psrlq subl lods ljmp xchg test sbb add (bad) pop (bad) scas mov stc hlt dec jne xchg jnp mov fidiv icebp test xlat mov fidivl mov dec movsl int sub xor inc adc mov mov mov lods or test aam bndstx dec mov push pop sub pop mov test jg les clc adc mov cmp fbld mov xor (bad) out sti inc ljmp sub mov and lcall jns aas cwtl std push cmp mov icebp or dec fdivr cwtl test xchg lret mov outsb outsb mov lret divl aad xlat adc (bad) gs daa pushf enter movsl pop add xchg jnp test push jns out mov pop aad or xorl xchg and in call push lds push jecxz out icebp in lret cli xchg outsl pop pop sub push cmp mov (bad) popa fmull aas (bad) adc mov xchg or je js lret arpl outsb test xchg cmp mov lret mov cmp push adc push ljmp jno sbb mov add outsl mov jno enter mov adc push xor push cli jp xchg sbb subb sub cmpsb mov add jne push (bad) fimul mov mov testb xchg popf fldenv (bad) sub jge xor mov inc testb mov sub in enter movsl pop add xchg cwtl rcl (bad) std std mov inc xchg xchg pop pop aas aas push push sbb (bad) rcll push and lods lods or cltd insl push mov loop aad in mov xor vmovaps mov dec divl int3 mov dec pop enter ja inc sub clc lahf movsb ret sbb jle jnp stc and ljmp add mov add xlat movsb adcl mov out inc imull inc sub lock aas inc sbb pop jg jne mov and js push lret or cwtl mov jle cmpsl push movsl inc sub les mov xorb cld pop jae (bad) sbb inc mov lret fprem1 mov cmp and repz xor lds or inc imul xchg cmp mov mov inc pop jns sub mov jb,pn mov jle insl mov mov cmpsl cmp mov hlt icebp icebp stc stc loope outsl outsl dec dec sub xchg xchg push push pop pop or div jmp mov dec fisttpll lods push insl mov inc stos or (bad) xchg cld js pop imul sbb loopne xor xlat pop xchg fcmovnu mov or jge jle pop jg cmc les cwtl xchg repnz arpl aas loopne adc push pop jbe lret iret (bad) dec incb inc jno pop fidivl inc insl push mov addl cmp (bad) leave hlt jno sub sub sub lds (bad) leave cmp xchg pop cld int3 outsl add jnp sub cmpsl mov call add pop lds and fmuls push push cmp add and rcrl push dec jo lock push push mov fldt in mov jge (bad) jmp add ds jle xchg push in xor stos adcb xchg (bad) leave mov lcall aaa and dec dec jns cmpsb cmpsb bound das test or (bad) (bad) (bad) jmp xchg xchg fcmovu (bad) pop stc dec out jnp (bad) mov inc fnstsw inc aaa lcall out inc jl ss push push jns dec movups cltd add sub sti rcrb cmp adc dec mov repz inc std movsb sbb mov dec mov sbb push mov jne or lock jle lret or fldcw mov cmp push inc repnz pop les sbb push jge cmp lahf lret loope xchg pop add ret outsl (bad) (bad) insb pop aaa jecxz stc add inc adc jge add sbb jbe gs pop movsl cmp cmp or sti push mov addr16 adc (bad) jp push out pop cmp out imul sub mov scas mov mov adc data16 insl dec dec ret shr mov out jnp (bad) mov inc fnstsw inc aaa lcall out inc jl ss push push jns dec movups cltd add sub sti rcrb cmp adc dec mov repz inc std movsb sbb mov dec mov sbb push mov jne or lock jle lret out mov inc fistpll shrb adc xor mov push mov lea cli scas jmp rcr sbb and je sahf clc mov cmp into mov and out inc shrb lret sbb and jmp push pop insb imul adc fmuls cmp (bad) psubq icebp inc cmc mov push addr16 cwtl std fdivl icebp cwtl test push inc fs xor sar sub adc cmc pop jl fcmovnb out lods adc xchg or repz and dec sub xchg jmp mov iret cmpsb dec xor push or ljmp das shl orl dec sub (bad) mov pop movsb enter add adc mov xlat or test ljmp cmp (bad) xchg fisubl dec mov stc mov popa pop xchg pop scas mov xor xlat test inc cld xchg dec and out imul mov sbb jnp in push std xorl sub sub ljmp mov lea arpl stc ds inc cmp ds cld add adc push mov nop xor insl dec ljmp mov add cmp jl mov mov in roll mov lea mov cmp inc iret insl xor inc push scas in stos pop loop mov in and sub aaa dec cs pop xchg decl bound add xchg mov push icebp int3 outsl adc inc sub jmp mov pop pushf idivl data16 push rcll frstor sub push pop in les ds inc das (bad) int3 sti sbb and imul inc (bad) pop dec jp repz sbb imul sbb mov push jle repz push xchg movsl jno bound inc stos xchg mov jle stos ljmp addr16 clc ret fiadd lea push lock push movsb ficomp mov mov loopne adc jge data16 lods jg stc stc test lds rclb cmpsb or and dec jo xchg stos add mov lods pushf inc fnsave in cmpsl lods in popf jnp popa lret call imul fnsave cmc sub lcall hlt push (bad) cmc dec (bad) notb sbb inc mov inc fmuls xor cmp mov xor mov inc dec push sbbb inc pusha push mov icebp cmpsb fnstsw je and divl add jno xlat or cli out xchg lret in (bad) pop pop ja loopne lds rcl push (bad) in inc ds pop add lret loopne or mov lock in adc adc das gs sub sbb cwtl cltd mov cmp sub hlt jnp xchg enter negl popa ds xor les out test and in xor cmp pop xor cld mov sub cld icebp dec cmc je fist les cmp bound mov stos lret pop nop arpl pop int3 sub xchg push (bad) ja addr16 xor xor add add pop mov or mov xchg push mov pushf dec outsb mov cltd lcall sahf fwait test lock adc pop in sahf lods daa std lret mov cli sub (bad) push fisttp out mov popf inc mov mov rorl or pop fwait push sti xor insl add jge adc loop dec sub xchg or and xor dec adc add jp sar sbb xor cmp movsl push mov pop js stc lock inc xor and add push push imul xor xor pop pusha pop jae and insl (bad) fst ss sub fidivr addr16 (bad) into mov inc mov push subl bound inc call and out mov sbb ja stos lahf mov out in xchg fcompl xor mov fisttpl inc pop out test leave pop xor push dec inc push aas lcall repnz or cs jo xchg inc stos addr16 movsl lret repnz inc inc cmpsl inc jne push adc mov xor xor mov dec imul dec ljmp add repz sub mov xor scas cld sahf and mov inc cmpsb jp cmpb cmp lahf sbb mov adc and mov pop outsb add (bad) jno jae push test mov xchg push ja loop pop iret aam das inc icebp push mov outsl xchg test xchg jbe mov hlt lea ds scas je push loopne stos cwtl pop sub push lock nop push fstpt icebp (bad) mov add jl decl ret pop ja (bad) mulb call test scas pusha rcrb pop cmc sahf outsl scas jbe xchg pushf sub sbb cmc jne mov pop ret xchg movsb stos xlat jl test mov test mov outsl add out inc dec lret add push sub aam fwait mov jne or divl push inc popf icebp pop push push dec mov and cmp inc push jmp aad cmp dec sbb xor int3 int aad nop ja xchg sbb mov mov inc sbb mov (bad) fwait imul fnstcw pop push cmpsb push std mov mov (bad) add lcall scas ds ret dec pop lods lock out loop frstor xor sbb std pop sub bswap push add jb mov cltd inc pop cld (bad) jne inc aas movl insl mov (bad) sbb sub int3 or lock gs cmpsb in mov xor add add loopne stos push into loop push cmc pop mov pop sbb jle push fcmovnbe mov mov icebp sub cs ss mov add cmp mov xchg (bad) movb cmp or (bad) xor inc rolb jmp ss pushf adc shlb lock dec mov aaa xchg xchg push insl in mov mov sub aam repz lretw xor divl adc mov xor or andl push inc dec push (bad) fnstsw sub adc (bad) call test das (bad) and cmc adc pop int3 jo xchg inc int3 out cmp jo stos scas pop xor sbb lods inc mov popa ficoml xchg sahf cmc add rcrb xrelease xor pushf call imul je stos ja xchg cwtl mov push push (bad) push jne and jg adc adc inc ret lahf addr16 cmpsb add jecxz loope xor mov inc dec mov cmpsb arpl push (bad) insl and jl inc mov sar sar push in fistpl insb fistpll rorb in and outsl sub adc cmp jbe arpl lock and push mov xchg xor (bad) inc int pop xor xchg out push sbb popl (bad) mov and (bad) outsl (bad) jns shrl rcrl mov lea inc jnp inc dec arpl pushf inc inc (bad) repz (bad) jp cltd cmpsb push outsl loop mov out and test mov xchg in iret push or push lea jns add push popf mov xchg popf cmp outsb adc or xor xlat cltd jae or enter inc or pop rolb cmpsl sbb test in inc xor scas enter rorb (bad) fimul dec jno mov (bad) pop pop mov test or sbb in pop pop adc cmp sahf jns cld cld (bad) inc sbb loope,pn cli cmp (bad) mov inc sti popa scas xchg pop roll into movsl push xchg sbbl mov add enter fwait sbb fimul xor sub xchg jne movsb mov xchg mov sbb and ds jns outsb int3 leave hlt (bad) xchg test das rcrl (bad) jle imul scas dec int3 insb dec push mov rcrb fist leave (bad) mov lret fs and adc rorl cmp xchg (bad) fistp or shll adc lds mov xchg rcl and (bad) mov jnp xchg outsl fisttp mov push and les lods cmc cwtl push cmc mov orl mov dec inc push std cmpsl adc adc fbld bound add cmc push inc dec jns inc fimul ret popa outsl aam xor xchg popf (bad) and jmp mov cmp roll in mov idivb and stos aam out pushf mov mov inc inc out sbb imul mov aad cs adc ds pop in inc and test and jle movl pop cld and cmp pop cmpsl xchg ret test adc mov cmp adc (bad) aam mov sbb mov fucom cli push lcall pop arpl hlt jge ljmp push xor mov push testb jmp fcmovnbe push mov (bad) jbe mov adcb repnz inc bound sub xor and popf xchg dec mov pop inc jno frstor out (bad) hlt push adc inc fisttp add clc inc mov mov cmpsb outsl je jecxz push fmul mov add xlat aam idivb lds ljmp jne sbb xchg and jo xor dec imul pop jmp fwait inc mov mov (bad) lahf ja jb jp dec out jmp mov pop push outsl xchg into sahf jg or dec mov gs shrb jl cmp dec (bad) inc jns or lret mov fbstp test or movsl mov sbb xchg das rorl inc jecxz jae out test add push pop std push push jae jo mov loopne loop jns inc lea (bad) fildll push xor imulb pushf out and pop in sub call cld bswap push lret es jp aam stc scas movsb dec xchg dec lods mov aam mov fbld test div mov sqrtps pop bound je inc add (bad) jne inc in (bad) dec rcll lods dec nop pop fisttpl (bad) pusha data16 sbb bound sbb dec dec push lock cltd xchg ret mov xor in in loop push maxps in ficomp sub repz popf fldt and test icebp sbb xchg dec scas mov inc jge cmp add push mov xchg ja push or lret (bad) popa (bad) ja movb stos or das dec cmp aaa pushf (bad) cmpsb popa test jne iret lahf loope push aaa popa xchg rorl pop push or pop mov inc int push pushf je or jbe jmp xor idiv xor adc cli xor lods push jl mov repnz inc lea incb xchg xchg xorb cld pushf adcb pop fiaddl and (bad) push xlat cmc jno (bad) int3 je adc inc int3 xchg pop mov push imull (bad) idivb inc inc dec xchg add sahf std add lock mov mov mov notb mul out push je stos add jecxz push mov stos or (bad) cmp popl dec cmp jo in sahf imul xlat (bad) aaa jecxz push dec mov jo out mov (bad) jb fnstcw enter jbe out push mov dec cmp sbb lods pop test daa push ret pop mov push insl push out sbb xchg (bad) mov fnstcw dec enter jecxz mov sbb pusha or cs popa mov and add cmpsb mov mov das sbb es or pop fs push gs jno push pop out push and lret xor test stos out jge xor mov pop call mov shlb mov sbbl cmp ss fsubrs imul xchg add add cmp pusha aas iret jp lea mov imul mov in xlat sub or in sbb cs (bad) fisubl dec adc loopne ljmp cmpsb aad pop inc mov fcoms jo aam mov mov jo xor outsb lods cmp mov (bad) sbb fcmovbe lahf out cs or mov push mov push xlat movsb and mov mov fs mov xor mov jmp push and in pop xorl xchg push xor in popa loope add (bad) mov iret or jbe pop and insl test icebp call mov push fldcw fwait call adc or repnz mov jbe fisubrl ret xor iret insb pushf pushf out inc mov pop pop scas add xchg fs adc pop sub xchg cmp adcl jo rcrl icebp das (bad) mov jnp mov add cmc xchg loopne or mov pop fildll add fwait and mov push fldcw sbb je and aaa imul fwait insb pop adc mov pop lods dec ds decw adc out pushf cltd imul and (bad) mov adc jno xchg and stos rolb popa mov jecxz mov (bad) pop (bad) movsl jmp bound cli lea mov and jae jns dec (bad) repz mov cmp dec xchg pop sub xor aam cli enter nop pusha mov pushf xor mov loop popa or cmp inc or pop orl xchg sbb xchg inc push sub pop push mov inc rcl movsl or lds fsubr fwait add shll pop scas pop sub mov (bad) mov movsl dec cmp ljmp mov mov iret and hlt xchg loope mov int int lret inc adc cli or cwtl sbb mov xor pop sub jae,pt inc mov stos or iret in inc mov sbb aam mull rolb jne xchg jb lcall xchg sub mov push add lds push mov (bad) icebp call push or les xor lret imul cwtl push or mov inc fisubr (bad) aaa in or mov sub es pop out (bad) mov sbb movsb mov jecxz mov jne data16 scas push push mov sbb sbb pop lret sti repnz cmp adc cmpsb aad mov dec test cs ljmp roll lcall call sub out leave ljmp add call in mov cmc xchg mov movsl push out popf lret cmp lods js test (bad) fisubr cmp inc mov aas in sbb (bad) testl cli mov sti mov aam push jp enter gs push call or sbb out movsl (bad) cmpsb push daa push sub inc mov rorl xchg and in std or (bad) icebp push mov adc xchg cmp pop pop sub xchg pusha adc pop push jne mov and mov cmpsb aad sarb mov inc mov negb lret lods faddp aaa (bad) mov cmp xchg jae mov loop xchg push hlt enter dec adc (bad) mov in dec inc pop sub lods loopne dec sbb xchg (bad) xchg call dec js ss in xchg in scas test dec lret bound sahf add stos and sub test xchg jo stos adc loop icebp push xchg in es mov dec sbb pop rorb jnp scas in adc jae add or in jae ja dec rclb ret mov xor mov lods nop mov mov ja xchg dec mov fsubrs sbb inc xor and imul and (bad) jne pop sub ret inc xor xchg fsubrl imul mov jecxz xor mov movsb mov inc fwait call mov lods fbld repz jp push sub lods pop out popf push add xor repz push jae pop das fildll pop push movsb testb or shlb mov loop push cmp pop stos fcomp sub (bad) inc ss in xorb js insl push sub pop fs es inc mov push mov mov pop das fisub or mov inc mov fwait (bad) es aas add mov outsl fldcw mov jg jge jp sbb cmp clc add mov inc iret xor outsb jge push pop arpl outsl movb sbb jecxz inc sbb sub adc nop mov loopne out sub cmp push scas jnp sbb dec and mov repz fisubrl mov insb inc xor aam insl lcall pop and mov (bad) cld add or cmp out into mov mov shll fsubrs or aaa (bad) pop sub cmp xor dec cmp or push xorl je xlat lds adc (bad) jb sbb add pop add sbb popa adc inc xor out pushf popa xchg leave mov gs xor jecxz push cmp stos fstps out pop das pop scas fisubr dec mov dec cmp sub push test cmp aas iret inc stc inc mov lcall stc or outsb or rol jmp fs test jg adc dec mov (bad) test sub arpl lods xchg push pop and mov pop and push mov mov pop and adc mov sahf jle dec push sub add rorl jl outsl lret ds inc in pop pop (bad) push insl pop rcll insl sub cmc icebp and mov (bad) pop imul sbb rcr push or push and loop sbb mov push insl icebp add inc lea push outsl lahf pop sub jge aad jmp or out (bad) popa adc mov add inc xor ret cmp movsl push mov push and pop add xor jae call addr16 inc inc xor push xchg mov notb push dec mov add jecxz stos pop dec cmp sbb mov pop fsubrs lds or cltd dec mov mov and and faddl xchg mov fdivs inc decb insb pop xchg addr16 cmc add jno testl mov insb pushf xchg sbb mov mov mov lret cmp xchg in xchg testb inc push jge into movsl (bad) mov rcrb inc out sbb iret gs scas pop repnz int3 mov and mov push mov push insb cmpsl fdivl xor push outsl or mov pop inc adc or cltd ror jecxz lcallw lods sbb loope and sahf ja ss arpl adc sbb push jg push bound xor dec fsubl cmpsb push out popf mov dec imul fmulp cmp decl (bad) mov push push (bad) push inc mov xor jmp cmp leave stos fadds jmp push mov repz les xchg out in gs insb and xchg scas fisttpll movsl (bad) jg push and cmpsl nop jecxz fmull lods pop icebp (bad) inc mov out pop ret mov mov mov stos pop shll sbb leave mov mov aam pop mov xchg addr16 xorb xor fwait call or clc mov sbb test push jbe clc or outsb sahf mov cld or push jp xchg mov ja mov ss xor mov fildll fadds nop aaa pushf test lods adc jnp mov xchg sbb mov stos fstpt push repnz cmp xor sbb xchg aas scas mov dec int jmp enter mov icebp mov test int pop sbb bound rclb jo daa xchg sub or jge xchg cmp dec mulb cmp xchg sbbl mov inc pop rorb cmp insl sbb lret jecxz or jle lds mov aad sub mov or (bad) int3 xchg imul fsubrs or and daa fldl fwait decl jno js mov (bad) movsl sti (bad) xor sbb pop add arpl sbb (bad) jg xchg movsb push ss (bad) jb mov xor dec mov fisubrl sub mov repz push out aaa mov push add pop sub aas cmp icebp add cltd int3 cmp adc fcmove mov sub pop sub ret mov mov stos je mov jmp shl xchg cld or pop pop scas enter mov notl out dec test mov jle in lahf pop out push jne xor inc icebp (bad) ja inc xor das or sbb jne insb xor (bad) aaa inc dec mov push gs jbe int movsb xlat xor mov mov add mov sub (bad) (bad) cld addr16 jb xor or xlat cmp in xor je pop insb std mov mov xchg test loopne,pt add je roll lds repz xor xchg ljmp in jbe (bad) cmp mov sub int adc push into (bad) push scas sub mov xor daa inc cmp nop mov imul enter inc mov imul scas xchg xor jp add sbb stos push cmp cmp daa leave or mov cli (bad) mov inc mov sub stos inc ret pop or cmp cli mov jge cmpsl push (bad) cld (bad) jg cmp add loope test pop cltd imul mov xchg orl mov xor bound xchg test cld or xchg jle mov inc xor sbb lods pop insb pop shlb and ret fisubr sti mov push and (bad) mov mov jmp pop scas sbb in xchg gs or adc jns add insb pop cs mov push mov dec ljmp fcmovnu sub xchg fsubrl stos or aaa inc adc mov fs cltd ljmp push insl cwtl push push and les and into xchg add mov cli mov shlb pop sub dec into xchg xchg pushf pop insl push push jbe push repnz jg mov lea fwait or and test add popf lods mov into das sbb cwtl or mov lret jb inc lcall aaa push and mov jle mov lcall in sar jo mov xchg pop (bad) pop dec addr16 cmc outsl pop inc pushf insb adc add add jmp movb dec (bad) cmc adc fcom movsl movsl mov sub loop cld lods cmp pop testb aas iret iret cmpsl or adc dec aas fsubrl pop adc push les mov das jo cmp fldcw aas iret dec cmp shlb addr16 cltd ljmp repz aas dec dec mov mov mov cmc das pop mov popf decl xchg and push loop fs push and cmp imul jg push and and pop test mov add push fisubr mov and popf out lods pop ss jecxz cmpsl aam and jns pop xor into ds out je popa adc xlat sbb les pop dec mov add mov shrb idivb xchg fisubrl xor cwtl in dec mov push pop xor fs nop xchg sub fdivp push cmp ret fsub cltd or inc pop sbbl addr16 inc shll (bad) aaa mov cmp bound and in hlt sub pop sbb inc mov jns sar cs dec test aam cmpsl dec cmpb dec daa mov adc inc insl adc adc cmpsl or inc in mov sub push (bad) ja sub jmp imul sbb inc mov xchg jp pop xor mov es add mov cltd cmpsl lods push movsl lods das (bad) (bad) xor lock pushf mov (bad) pop sub cltd ljmp adc mov pop sub push pop sub int cmp insl xor mov cmp pop dec ds fsubrl fs testb repz icebp mov in loopne imul sbb inc xor ds xchg fs push testl mov les in (bad) cli mov xor mov out pop or mov jns pop test in sbb jmp dec add jne push add or push cmp in lahf sahf outsb or xchg bound insb pushf inc aaa (bad) es (bad) cwtl jae mov daa movsl (bad) mov repz inc mov and mov xlat or pop cmp (bad) mov aas dec inc xor lcall sbb mov int dec jns or lret sub cmp pop lret ret push fistpl sbb popf test sarl or mov pop aas push cli or mov pop push arpl adc xchg mov fcoms jp mov inc mov mov sub mov es mov mov xor leave sbb pushf aas inc (bad) mov or mov sub xchg add sub xor dec frstor mov xchg (bad) push mov mov xchg in add cld (bad) loopne xor mov cmpsl mov inc cwtl jmp cli and inc scas fsubl lock jns imul pop cs xor imul cmpsl cmc xchg jmp jns or shll mov loope push cmp sbb fcmovnu cs std lds out xorl jnp outsb sbb cmp and push (bad) jg js inc pop sub frstor or mov inc mov cwtl aad dec cmp mull insb fisubrl mov jl jle jns loopne cmp in lahf xchg bound push mov jp es add ljmp lret (bad) mov push and sbbl fisubl and dec inc pusha in or adc and cmp push lea mov scas fisub fs bound ret popf push out mov or aam mov pop mov or push cld in xchg cmp ret inc cltd adcb lock imul test repz pop sub into gs mov mov jmp fcoms pop lods and nop cmp lock pop mov sub mov stos stos lea sub jns sbbl push xchg lea mov xor add cmc or loopne jnp sbb sbb jb add pop ja lcall daa push and add movsl (bad) scas pop mov aaa (bad) cmp inc lret adc jg sbb inc add and push std or mov scas out loop xor or (bad) int sub ror cmp push mov arpl push (bad) sub aaa pop je jmp mov inc mov ss mov fldt cltd imul icebp xchg (bad) aam push movsl push gs pusha cmpsb aad enter sti loope jnp xlat movsb xlat daa shlb loopne icebp (bad) add xchg loop fiaddl aam imul pop out and test push pushf insb jl pop lods mov mov jne or neg loopne cmpsl (bad) in rcll repz punpckldq ss cli lea cmc call mov xchg stos (bad) mov movsl fistpll or stos sub push mov mov adc pop pusha (bad) xor or aam cmp xor lea xchg sub dec fdivl inc lret dec popf sbb pop scas mov mov xor mov pop out js dec out adc fs add xchg pop inc jo pop stos fincstp lea pop daa mov movsb loopne rcrl (bad) cld iret mov (bad) cmp fwait adc push jge mov xchg inc mov pop mov call inc mov pop mov ret test jge cmp mov pop insb push movsb hlt xchg jbe adc add sbb mov pop mov aad mov push out lcall dec repnz mov lods xchg xor adc push sbb jno stos pop jge add xor dec ret (bad) jmp mov xchg out mov mov xor push and pushf insb fldcw cmp lds add mov aam xor pop stos sub scas pop xor scas in xchg xchg iret aas lret mov mov and jge and lds jl jnp adc ljmp inc cltd popa dec loopne sbb cltd lods push jns test stc iret pop sarb popf out jnp ffreep pop scas jne sarb jl stos and mov clc pop and add and adc sbbl data16 jno movsb push inc in (bad) neg loopne jle popf icebp or (bad) (bad) xchg (bad) movsl sti subb aaa mov pop xchg sbb fstpl mov bnd mov repz sub lret sub mov ret (bad) nop jo test sub aas iret inc cmp jge and inc and mov or xchg outsl lahf (bad) mov jns sbb cmp xchg (bad) jg mov sub out jp xlat daa sub mov inc xor (bad) cld std or add jmp push mov lahf in or adc sub (bad) mov es jecxz loope and and xchg jl stos (bad) movsl (bad) aas iret xchg loopne arpl movsb push mov inc mov cmpsb outsb sahf pop je pusha sub cmc push mov mov inc fsubrs cmp call mov sub jae xor dec ds cmp xchg gs popa scas pop pop sub push mov testb stos mov xor notl adc loope jmp cmc xchg jns sahf outsb je mov push loop and lret pop testl iret xor or pop fistl xor jp out fisubr loop lret mov sbb rorb (bad) xchg dec aas sbb push and mov outsl (bad) out xchg pusha mov fcom adc add pop sarb mov addr16 movsb push cmpl xor popf xchg mov adc out insl and cmp jg mov ja adc js popa cmp dec inc mov xchg or sbb sbb (bad) xor lock sub or adc mov lahf in aam je shlb testb lcall sub xor push movsl xor imul call cli mov xor sub pusha nop push jge cmp sbb cwtl icebp (bad) sub std mov mov cs out push imul (bad) adc cmp (bad) pop xor in pop sub dec inc arpl movsl (bad) lds testl das gs push mulb dec mov inc xor shll xchg cmpsl add and aas inc mov xor in adc ds mov ret lea cltd sub insb xchg popa scas sub movsb mov inc jb mov iret adc roll sub aad rorl iret mov enter fwait push fisubr adc les mov fxch gs dec stos lcall sbb loope lret or jg (bad) movsl add out or add test sbb ljmp mov or lret mov fsubrs sub lods fiaddl sti dec mov testb mov or mov push mov inc xor mov stos pop xchg in inc push insl push cmpsl mov pop out dec push mov mov xlat or testl jno and (bad) mov fildll fildll fwait inc xor and xchg loop lcall iret aas mov or cmp mov popa jnp loope dec ds mov xchg out mov fwait imul mov fldcw ret xor lea mov ret pushf push mul xchg (bad) ss pop lods push daa hlt add fsubrp pop xchg loopne or xchg dec mov int3 mov xchg bound jge jo pop push out addl out fldcw dec cmp bsr iret cmp mov sub lods fiaddl sti dec mov or pop lods out pushf sarb adc (bad) mov cmp in and sbb sbb push cmp fldt rcr jo dec or or kandnb sbbb mov cltd es mov push addr16 (bad) arpl enter xlat loopne jmp (bad) cmp mov rolb in xchg fsubp adc adc (bad) jg dec inc mov and adc adc mov add xor adc scas jl shll movsl (bad) add daa push inc mov and sbb cmpsl sti or xchg test dec mov lahf in in sbb jno xchg pop adc aaa bound mov fildll dec mov push cli or push mov imul aas iret mov add add push les test or pop je into loope int mov jg aaa inc imul je adc testb cli jge decl arpl push (bad) mov xlat daa mov sahf outsb lcall adc fsubrl jae es mov sub add outsb sbb (bad) dec ds cmp mov mov data16 cmpsb push mov mov cmp add sub push dec jle lods and push (bad) movups fildll adc les mov (bad) std and fxch ja mov rcrl push or jbe xchg xchg adc add mov mov lahf daa iret (bad) lods mov mov movsb jno enter inc cmp fucomp fimull mov sub rcrl jecxz (bad) insl gs pop cmp loop clc lock scas mov std or in enter es fstps adc jo pushf cmp fstpt stc adc mov movsl in xor push push cmpsl add mov mov mov outsl out fidivr cmp icebp add jno insb dec cmp das jae jae je or stos flds movsl push xor xchg jo int std or testl enter or imul xchg loopne and scas jne (bad) dec mov popf out mov xor dec push gs into mov int3 cmp shl pop jne (bad) xor jb sti adc ljmp ret bnd mov sub xlat je test pop test sbb mov inc mov xor (bad) jg push imul sbb lret xor negb mov arpl outsl stos fst int3 xor fldenv xor mov xchg xchg pop mov fwait mov pusha cld mov andl adc rolb aaa shrb scas out hlt test push or int add cmp xchg jne push mov pop add jno fimull lret aaa outsl lcall jp push int3 push sbb and stos xchg dec iret mov int and push enter in and add lcall xchg popf out push dec hlt xchg sub jb inc aaa mov inc fildll ss or mov sub daa push push out (bad) mov sbb pop fs mov popa adc daa xor (bad) movsl mov push jne ficompl fildll inc xor ficom mov adc and or push testb test cli or bound rorb inc mov inc das fildll in sbb pushf gs fldt mov pop das xchg (bad) and or dec insb pop push cmpsl cmp pop aam cmp ja push mov inc xor adc inc xchg adc mov (bad) (bad) sub outsb sahf adc mov lret adc jbe xchg lea xchg inc jle mov pop jle insb adc lock js mov inc (bad) mov adc shlb xchg test ret ret lock out data16 loop,pt imul (bad) pop xor or loopne les pop je xchg stc jmp (bad) adc dec jo xor add shlb xlat lea push loopne jbe sbb sbb adc cmp pop (bad) icebp push out jle xor test cmp cmp cmp mov mov push mov mov mov cli cmc add test pop test mov lea inc add fwait call jl cmpsl aam icebp sub lds out lahf outsl xchg in (bad) outsb sbb cmp and js push iret aas (bad) mov inc xor pusha adc int inc mov cwtl aad xor mov (bad) xor pop sub ljmp jge cld (bad) testb fwait outsb sahf fs xorl xchg arpl dec decl ds es inc xor sbb mov or loope jno test mov cltd push daa jb (bad) aam mov and push and inc lret mov mov add jecxz fnstcw ja and mov cmp and ljmp popf insl addr16 sbb add cmp jnp lahf dec jnp sub push out adc adc push xchg out dec pop (bad) inc inc mov out add in sub jbe lds mov mov das ss or shlb and fcomps loop hlt outsl lahf xchg mov scas sbb dec push mov pop out xchg dec cmp clc mov lret jg leave xor fistl sub leave je or es popf out push adc push call sub dec mov add out test clc push pop ficomp repz inc scas in stc pop das repz xchg mov lcall (bad) xor (bad) cmp (bad) pop aad scas and sbbl clc repz dec cmp push mov mov gs dec cmp daa in sahf imul movsb xlat mov (bad) jl testb cmp inc mov aad mov cmp mov push (bad) ss call les fidivrl lret scas pop in (bad) xor cmpsl jb mov xchg and inc dec mov mov repnz (bad) push out fisubr xorb pushf insb sbb xchg bound dec add loop xchg data16 loopne mov lret cmp in sbb sub dec mov mov out popf cs pushf testl mov pop test (bad) divb jne movsl add cmp xchg or xchg les jne addr16 dec (bad) jno scas xchg mov orl xchg std mov ret arpl lock xchg pop push cmpsb lcall stos or inc lret aaa cmpsb bndldx (bad) gs jge cmp mov (bad) and sub cltd jmp fs enter dec test mov (bad) fnstsw lahf jl mov outsl xor outsb inc (bad) sub out adc jb rcr sub stos lcall in daa xchg cmc jns loop push jl stos out (bad) dec sub jnp fisubrl jb dec mov cmp pop (bad) mov jae bound adc push outsl lahf jno testl lock cmpsb aad xchg cmpsl aam dec fldcw adc loopne cmp sarl call add add push lock mov or mov jg pop scas in bound lods fmulp ds sub js mov pushf test (bad) mov (bad) xor sbb jg out test inc xor adc xchg gs movsl push mov cs lret cmp push mov out arpl mov (bad) xor ljmp ficompl daa xchg loopne adc xchg jmp pop mov in lock lahf dec or mov fbstp sub iret mov cmpsl fmulp sbb leave ja cwtl shll (bad) xor mov add js ds scas pusha test cld repnz cmp push sahf mov insb jecxz pop or sti xchg jg dec cs mov sbb mov xor add jnp sbb mov insb xchg xchg je cld fcmovnb inc das jmp push imul sbb les fs jns adc loope es jnp xor les cmpsl mov pop mov in jb testb mov inc dec fistpl mov arpl xorl add popf (bad) and mov mov scas mov leave cmp sub mov lahf stc int3 aas outsl xchg shlb sub or pop repnz in iret push mov fildll and fildll ja dec mov ds lods pop ret mov jbe addr16 xchg loope pusha adc je repnz mov out cmc xchg jmp sarl xchg mov in xchg cmp push and (bad) jge in sbb daa push cmc add inc xor clc call adc pop stos loope addr16 sti mov test lret cmp pushf add ret cs jge mov cltd xorb mov aad les insl mov loop lods into mov push cmpsl adc pusha shll std or and mov loop imul outsl lcall in movsb jle lds xchg inc mov movsb clc jge inc dec push adc jbe (bad) clc fwait adc mov aam sub and sbb fldcw mov iret (bad) or ja xor add out pop lock cmp rorb adc xchg lods ret ds std icebp popf lahf inc jbe cmp xor pop xor iret lods and dec push jb mov (bad) aaa aaa inc ljmp fdivrl iret lret add xchg xlat sbb int3 xchg loopne sub dec lcall fisttpl inc sub je or jmp adc cld fsubrl push mov je out int3 mov mov outsl out xchg out jne mov mov jb ja ret stc mov testb xor mov dec sbb pop out push out cmc cmp xor dec mov inc aaa xor jmp adc (bad) js lahf jg xchg addr16 icebp les mov daa leave mov arpl mov (bad) xor cs pop pop je leave mov cmp ss fs nop pusha xchg loope gs (bad) add jb ret rorl dec fldenv push add aas adc stos cmpsl daa mov fdivrl cltd hlt inc insb xor push movl inc jne sbb ret or mov sub dec into and cwtl inc xlat arpl inc iret (bad) (bad) out xor or aam push cwtl shll push movsb outsb lret jl or dec mov mov add cmp jmp mov rcr pop out xor out cs (bad) mov jo dec lods xor lods and les and pop sti enter (bad) jg fucom cmp push (bad) push and push jb in dec std movsb in push mov jg out das pop add (bad) icebp or movsb xlat lcall sahf jle adc movsl (bad) mov xorl xor mov mov shrl pop int3 cmp push fsubrl add cltd (bad) movsl push push gs ss jmp test cmc add lret mov es sbb int loope sub dec fwait imul mov inc mov sub jne or call adc std (bad) push mov jne out int pop test sbb out je mov mov jae jbe ret cs mov popf add (bad) mov xor mov dec sbb push out pop out hlt cmp push es or mov inc ss call adc sub and leave setb decl clc xchg jae repnz sbb xchg jns leave enter (bad) out shrl gs push cmc add in mov and popf (bad) mov dec mov ret push aad or adc lock mov repz jae pop inc and nop jg stos dec mov mov shrb mov insl mov inc mov mov cmp movsl mov loope or push es cmp ljmp xchg fs push inc xor and mov jne mov and xchg inc mov xchg sbb iret mov pop stos testb jge pop (bad) xor mov or bound cmc add jecxz ss jb add fildll out mov dec pop test mov repnz mov sahf outsb decb imul imul insl xor call or lock and push cmp adc inc dec mov jae mov xchg and or lods xor xor outsl arpl jp sbb mov daa xchg loope xchg sub std test pop sub jecxz aas iret insb and scas js mov mov popf addr16 pop pop mov pop xchg adc test mov push dec cmp inc bound out add fsubs xor cld mov push xchg xlat xlat lahf xor (bad) sahf add xor pop inc push pmaxub or cmp in mov cmp lods push in (bad) fist jge pushf mov (bad) fisubr test ret cmp imul xorb xchg addr16 (bad) and mov arpl out pushf std or popa adc pop inc xor mov jge insl repz shlb pop stos inc aaa ret mov aas iret xchg loopne mov in lahf inc mov xchg clc addr16 out (bad) pop lds jno cmp fsubrs add ds dec cmp shll xchg cwtl jmp or lods xor repnz mov mov mov hlt cs mov pushf decb addr16 and push jecxz gs push rcl into decb out push cs mov loope stc sbb xchg mov jbe mov scas incb cltd insb mov popf stc xor mov sar (bad) sub mov aaa loopne fadds mov push sbb cmpsl push mov cmc mov ud2 ds add push jl ja dec push loopne mov push inc or push mov lods mov movsb jne (bad) fidivr repz js into push mov pop and add lcall mov out add inc movsl inc push adc or dec xchg mov add lods hlt sbb cmp int push and icebp (bad) ja jmp inc mov lret fldt decl ds insl insb pushf cli mov outsb mov and push jge push repnz mov push and mov jb jo mov mov add sbb xor scas pop add repnz test lds aam inc aaa decl xchg in icebp mov fs cmc lock pop lea shr sbb out pop leave mov push movsl inc xor idivb dec adc lcall popf insl jno add dec ds xlat lahf in imul mov pop scas xor add aad mov into mov mov popf xchg jge adc cmp add enter ss inc icebp mov loop cmp pop ss xchg in aam mov dec or xchg inc mov and jmp mov mov daa dec bound lret mov cs mov push jne jb sbb ss cmp cmpsl adc in in mov pop into ds decb (bad) movsl (bad) adc pop lret mov (bad) xor das fild shll lods fild jl ficoml loopne aas dec cltd imul aas iret (bad) or out sbb icebp sbb inc sbb add jns imul test shll jge cwtl jmp sti add gs and mov push testb (bad) mov cmp mov mov pop add ja in jp shlb arpl mov inc xor jo test mov xor dec mov dec cmp test fsubrl (bad) xor lock jge popf dec pop mov pop mov leave mov iret cmp mov push fdivl inc scas inc mov test jp or stc pop sbb cmp xor (bad) xor sti pop jns pop mov or mov jg pop fidiv xlat xor insl xor aaa lcall sub push inc mov aaa lds fdivrp das nop lock xchg or sbb cmp fsubrl mov movsl adc das inc pop test popf fs repz push ds xor cmp jnp loop mov loopne sub cld xchg loop mov or push mov dec in jne xor dec mov and fldcw shlb decb ret or packsswb into xor mov pop sub xchg in adc add call ds lods pop xchg adc or xor and iret aas mov or dec cmp cmp mov push cmpsb mov stc mov (bad) icebp add mov lods int3 mov mov inc add lahf in dec mov mov pop arpl inc xor sub mov popf insl xor adc ficom jnp mov pop pop fs dec jae,pt jmp ja daa mov pop push popf mov arpl test mov pop inc mov fsubrs outsb cmc je out pushf lods imul cmp enter mov and pop (bad) arpl and (bad) stc addl jno and sahf les mov mov cld mov pusha push aad pop inc xchg pop jp lret mov clc cmp (bad) or out pusha lahf xchg repz stos aam mov xor out jle xlat or cmp fnstenv lea dec cs clc adcl inc leave push cld data16 add push cmpsb sub xor cmpsb addr16 mov mov mov shrb pop mov mov xchg out xor (bad) mov push (bad) decb lock decb push and cli or insb mov cmpsl push xor mov xor dec mov fldcw fiadd lock imul push cmpsl in xor les pop negl cmp dec add push jne and lcall leave mov das fistp jnp (bad) mov mov test ljmp nop decl das pop pop lods lret mov scas pop xchg adc sbb mov icebp (bad) jb es push xorl inc imul shll add and mov int pop test lahf shll out lods mov adc mov out mov mov mov cli jecxz sub nop dec scas in and lcall xchg gs addr16 jbe insl push loope xchg lahf jne add add cmc ret cmp xor dec shrl and mov inc mov out lods loop (bad) loopne rcll adc jnp repz in ja push stos push pop shlb add mov insb sbb (bad) jg mov mov icebp loope lds aaa pop fs add push mov pop stos fldenv xor out jns test pop xchg hlt (bad) jb shll pushf in loop adc pop fs into out imul ds scas push and (bad) xchg xchg out lock adc lods inc fsubrs iret data16 xchg insl mov popf ret mov repz fadd aam xchg dec test imul add scas pop xor imul dec test xor leave ja insb sbb sub decl shr cwtl movsl fsubs ret movsb test inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov add insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf add xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb add push sbb test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul add xchg cltd lret mov xor rclb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps add in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les add incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret add sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov add add inc dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp add scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul add rcr icebp cmpb popf loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov add add dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc add lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor add aas ja mov insb sbb lods fstl test and out xchg pop adc pushf adc pop inc xor imul rcr jl jns (bad) jmp sub mov inc lods rcr (bad) xchg loop cmpsl dec inc out sahf xchg ljmp daa sub inc repnz xor outsl adc or icebp push es push flds jb push int add pop stos cmpsb lret cmp add xchg mov sbb dec ret mov insb adc (bad) sbb mov mov ret jo movsb test ret sbb loope pop mov xor aam cmp mov je out mov imul mov loopne loopne add mov lock rcrl fwait mov push jg xchg in jle inc xchg pop daa enter mov repnz mov mov daa mov cmp pop dec cmp scas mov cmp cmp mov insb popa adc out jbe push jo gs lock std sub (bad) cmpsl mov cmpsb stos sub pushf mov incl pop and int3 or jp adc mov dec lahf out loopne scas mov jle int jmp (bad) mov sub mov xor or jmp loop pushw test scas mov pusha in mov lret rorl mov fs ret push sbb pop das and and pop sbb clc pusha adc ret cmp and and js mov jbe add inc xchg sahf ja xor ja mov into mov push in jle inc cmp cli daa push les incb fwait out lds hlt inc aaa pop and xor stos cmpsl dec cmp mov insb adc sbb inc ljmp std jo gs (bad) stc cmc xor cwtl cmpsl stos hlt test fcomps in nop (bad) and mov jne or insl (bad) and (bad) int3 sarb xor loop in mov call xchg in lock (bad) mov (bad) xchg (bad) lret push jnp xchg lahf out add push test rcr imul sbb (bad) mov mov jbe cmpsb mov push addr16 push and sub pop push addr16 clc test sbb ret iret inc xor push push pop js mov idiv fldcw inc xor jecxz or ja mov testl stc aam sub sub mov loopne push enter mov mov mov dec sub adc sbb mov je leave dec fiadd dec sub xchg or push push popa (bad) or mov pop ficomp xlat mov cmp or call pop fwait jnp jne or push add dec xchg insb lods jno icebp fist sub hlt jne imul cltd in dec push push xchg push xchg xor cmp pusha pop jnp repnz jecxz in push test xchg out pop mov (bad) arpl xchg inc fistp pop sbb cmpsb mov dec loop sub cld scas cmc mov jecxz inc enter mov add xor or cld insb mov push xor pop or mov mov push iret mov mov movsl das cmp mov cmp mov xor push jbe hlt mov cmpsl inc and movsl mov clc call (bad) mov mov dec mov adc addr16 out (bad) push adc jg and dec dec std push f2xm1 das (bad) mul sub in add cmc jl (bad) (bad) in jbe lret mov cmp cmpsl imul aam out push push pop je clc cmp or mov push fcom setns add push (bad) jnp aad icebp pop mov dec insb ss sbb jne (bad) xlat xor xor add ja xchg rorb adc jle cmc mov inc daa sbb xor pop sbb insb inc (bad) jne jno push (bad) lahf push mov (bad) jmp adc jo mov mov adc jl dec rorl les jae jno je fstpl mov mov and nop es push or imul test xor arpl xchg dec inc inc (bad) int (bad) jns jmp add or xchg movsl popa nop inc push insl shll xchg loopne test rclb das stos sbb push sbb add fbld or pusha pop rcrl fstpt pop (bad) cmp sbb ds jl lahf sub cmp test mov das enter xor pop imul mov pop sahf fwait movw mov jo fucom imul adcb movsl (bad) (bad) or pop addr16 dec dec lock xlat dec inc push push push pop lds jg cmp paddsb daa (bad) pop xchg adc push sbb cwtl adc popa out mov cld or test dec notb jo pushf in sub rorl xor adc pop push fwait lods xor clc mov mov mov xchg imul cmp xchg sbb imul fstl js scas (bad) push xor ret loope dec out add or leave pushf sbb push mov cmc pop xor das push jbe aaa push inc mov xchg or out fdivrl xor and or sub aaa add add es sbb mov dec mov loopne incl xor je mov inc in mov mov (bad) icebp add xor push and loope inc add sbb cmp inc inc sbb add inc jecxz add sbb dec sub push popa scas (bad) mov inc inc sbb dec xor sbb popf mov stc sbb dec lret push pop inc out inc pop inc addr16 fiaddl xor jl xor push jg add arpl dec mov pop in inc xchg sahf mov push push mov xchg xchg popf xchg sarb xor neg push jge ljmp push sub jle jno push sti mov (bad) imul adc std in pop inc inc (bad) mov das das pop jg inc (bad) xchg and addb es mov mov int andl test sbb push push movsl pop dec dec lds sbb mov imul rcr pop mov pop stos ss and sub add lcall add sbbl and push les push dec sub insl mov xchg xchg out js ds ljmp fmulp int3 test ljmp gs pop in rcl imul push push xor data16 (bad) or sub sbb es and cmc mov sub xchg cmp push xor jns mov notl stc stc jmp mov cwtl push ja cmp ret ret jle in push lods xor lahf dec mov adc pop pop aaa lcall add sub mov cmp push push repnz (bad) mov push sbb rcl movsl push add lds and pop mov sbb cmp clc stos push sub lret dec dec in inc cmp pop pop rcrl mov icebp bound addr16 and iret lock pop int3 xor fcomps rcrb loopne jmp or dec sub daa lcall dec test rolb xchg out jo aaa push jne daa nop outsl je aad lods (bad) stos push imul jne fsubrl push push mov xchg jnp rcrl cmpsb int pop push push cs xchg fwait sbb pop and jbe (bad) push dec adc mov arpl jns or jno push std push das dec sbb adc jp cmp outsb pop repz xchg add lcall mov xchg out sbb mov popa and inc inc or mov push inc cmpl jne inc add fistpl gs jg or dec jg pusha sub out mov ljmp shlb ljmp cmp cmp aam jge test shll pop pop sub call pop out push mov int3 test cltd jae push (bad) icebp push lods (bad) in inc adc mov arpl xor inc lock stos xchg inc push mov out (bad) sub ds sbb in mov push mov std and out rorb lcall xchg cmpsl jns adc aaa jmp test lahf mov cmp jle jle jno push and ficompl jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc add (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov imulb and sub sub ljmp fcomp arpl ret pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp xchg or (bad) jbe mov or movsb (bad) (bad) lock pusha int3 int3 inc hlt scas push inc adc push (bad) mov or xchg xchg daa daa xor rcl xor dec inc dec pop arpl xchg and aas and or and mov aad imul or cmpsb push leave mov sub jo enter dec mov aas aas cs sbb cltd sub push mov inc daa and inc cmp adc cmc dec dec std std frstor pop jns rdtsc sub xor out fwait pop jo jge jge xchg arpl (bad) (bad) and (bad) push push jae jo js pop pop mov xchg enter clc clc inc inc push jle popa movsb movsb sub inc fs sti cmc cmc push push xchg lcall cld dec jg sub cwtl bound daa int xchg cmp inc or xor dec nop add pop pop add jmp idiv sti xchg sti mov js pusha pusha out enter mov test mov sub rcl aam push push cmp es jo or loope dec add push es js cmc xchg add flds add lret mov imul hlt (bad) fadds or jnp xor or mov sbb inc and and jo add sub inc push jecxz sbb and push ret ret and int gs je fldt jp fs cs lret imul (bad) out (bad) (bad) mov xor xor fcmovb lret test mov inc sbb repz xchg push xor mov and js js loop or inc imul jbe in sbb push jg sub aad and cmp or adc adc out bound cmc test jge fstp cmp pop pop mov dec dec and dec dec dec push push sbb jns dec dec test rcl out out bound ficompl cmp lahf scas scas jo popf popf rcl (bad) rcl nop nop pop pop (bad) (bad) inc inc (bad) mov dec inc lsl pop sahf xchg into jle jno push stos es push xchg xchg loop push mov inc xrstor add inc (bad) (bad) and or inc inc loop xchg cmp mov out movsb movsb shll test sbb push push mov push or orl stos (bad) mov xchg xchg stos stos out out and mov loopne pop xchg lods sahf cmpsb push jno gs (bad) mov ret movsb (bad) (bad) lock adc push fcmovu addb cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec cmp test test push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push sub out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld add pop mov fdivrl cli mov xchg xchg daa (bad) (bad) ljmp xor dec jl sub sub ljmp jp fsubs ret ret pop mov addr16 add add mov and shrb mov ficomp mov adcl sbb cmp fwait fwait addl int3 ss add data16 dec dec mov pop in in sahf sahf mov push push mov xchg rcl jp jns cmp div jge jmp (bad) (bad) jo outsl nop push pop mov jle add push out and ficomp mov (bad) pop (bad) jge mov insl pop bnd (bad) adc cmpb je cmp aam je fidiv and test pop pop pop out sbb movsl sub movsl pop stos xor cmp and repz ror stos rcl xlat and mov ljmp mov movsl mov cmpsl dec loop or lret add fcomp dec nop vpunpckhqdq call and add cmp inc push push push fisub test test push icebp push test imul arpl int3 fs clc jle push enter mov rcl in dec in in mov in cmp in mov add jns xchg xchg testl pushf jo test pop cmp or cmc push ffreep (bad) lahf pusha leave leave jnp addb lcall add fcmovbe lods dec dec xorb pop bnd mov inc sbb mov pop inc cmpl jnp mov mov rep pop or lds ficom sar cmp and cwtl pop jl stos stos fldcw lret xor add cmp je shll fisttpl pop sti jecxz add int3 cmpsl push push push icebp int3 mov stos push pop loopne pushf test cmp mov inc jae (bad) je sub lret inc outsl inc out popf decb cld rcr push jge aas nop cmp cmp push in notb add xchg aam push sub push out mov pop std fucom sti dec jne mov mov (bad) in mov in mov (bad) push fsubrl add xchg add insl sbb test mov dec pop cwtl out add insb mov and sub jbe jmp sbb js adc add inc cmp pop pusha adc lock and mov outsb mov lcall cmp cmp mov xor jg pop cmp mulb ljmp (bad) arpl mov sub in push dec cwtl lds shrb out out cmpsb jo roll out movsl dec mov jae xchg icebp xchg in lret lret imul jl xor adc xor leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo mov push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub push and mov dec add lret (bad) (bad) jnp repz cmovge in dec stc add das lahf push push sbb mov jnp cmpsl mov stos jg rcr (bad) (bad) (bad) ljmp or add (bad) movsb cmpsl lds mov or scas scas ror mov mov fdivr mov mov das out out sbb jmp push mov outsb outsb in in movsl movsl movsb test aad rclb inc fsubrp mov cmpsl nop fs mov cli or adc ss sti or call sub cs aaa aaa scas push nop nop mov jb (bad) std mov or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd add cltd add dec mov jno or (bad) sbb pop pop fcompl cmc jne dec std jge insl sbb outsb pop pop xchg xchg push push pop fimul lea shll mov and mov enter xor dec sbb adc sub loope add es js cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) sub stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds test scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge pop dec mov in out mov ret sahf scas sub jmp cld xor pop es repz std std aaa aaa inc jecxz (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov aas and pop (bad) out loopne cltd fnstcw push jns imul shr ljmp ficom jg push clc repnz int3 inc inc push push or inc inc cwtl std loopne dec dec or add add mov xchg xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push rcrl (bad) mov mov (bad) cmpsl movsl sub adc cli lret icebp imul fbstp mov sbb jae adc insl jbe insl sbb outsl pop pop xchg xor jmp pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld dec lcall jge rcl repnz bound aas ret add int3 enter jmp aam mov jb adc in adc push push push stos xor push mov rorl mov rol lods out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl pop pop leave cmpl mov ffreep (bad) std stc cmp inc inc arpl je hlt dec adc js les dec shr (bad) stos lret jge xchg stc outsl xor jo and mov repnz jecxz push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb push and or dec jp dec or inc ficompl in mov or jnp pop stos out mov push push sub sbb cmp shlb xchg xchg xor or cmp xchg mov sub pop pop dec dec mov mov out cmp ds scas scas (bad) push push xor dec (bad) mov push xor inc aas nop lods rclb lret (bad) add sahf xchg rcrl mov mov push jl xchg mov (bad) mov add push pushf xor inc lods popa push cmp mov clc push and jle jno push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc test hlt and loope test mov inc js and xor jle jo dec jnp cmp xchg mov jae shrb push inc push add loope lods xchg in sbb pop fs in mov dec and subl ficoml or mov jno lcall mov or mov (bad) (bad) lock pusha or xchg mov push sbb mov or sub in enter repnz mov mov mov ror (bad) rcr addr16 je add pop jne add sbb cmpsb sahf fs pop lea (bad) xchg mov aas movsl popa mov dec xchg pop mov in cltd cltd pop pop dec dec xchg or addl fcoml adc inc fwait mov xchg shl mov xchg ljmp mov inc ds (bad) mov push insb div loopne (bad) fnop shl and call movaps lock mov or inc cmp lahf js inc add (bad) into xchg sub ljmp lcall pop lea repnz xchg sti jecxz out stc ljmp fcompl jb sbb sbb mov sbb imul mov or movsb loopne pop js test lods mov fdiv lret add mov ret std fwait xchg xchg mov addb mov sbb cmpsb lret lock popf popf rcl jnp jns cmp div pushf mov sahf mov ficom (bad) rcr (bad) cld call xor mov movsb mov lock je dec add movsl cli (bad) sub popf fidivr cmp and mov xor add jnp dec add cltd dec inc loop sahf mov or dec daa lds and out xchg xchg mov xchg stos stos out out and repnz and (bad) sahf data16 mov mov lods mull rclb push push push rorl push call jg imul loopne pop sbb cmp stos rclb repnz fcom lret sti or idiv int3 ja sti das sub cmp dec mov push in in sahf sahf mov pop sbb mov iret test out fwait push dec mov aam jmp add push inc aam add (bad) (bad) scas add xor mov test mov mov cwtl fwait movsl out mov aaa jp pop mov dec ja add add cmp (bad) lcall ds dec leave adc loope add pushf pop pop bound cmp pop out sti mov adc fist adc adc aad push mov arpl cwtl sbb mov sub lods jbe fs or leave xor mov jmp push cli mov mov and fs (bad) stc mov iret mov mov mov add icebp and stos cmpsl cmpsl div or push push xor xchg jne,pn push mov iret cmpsb jl add mov inc and and aam sbb and jns (bad) jg mov or mov pop nop (bad) mov std sti xchg ret cmp adc clc movsl in cmp pop lret fstps xor dec mov mov sub loope add mov inc xchg sub push xchg or add lock fcmovnu and adc jmp pop inc es (bad) cmp dec rorb fldl mov sbb lret pop or add xchg xchg push sbb push insb jno out push xor rcll lea imul adc dec mov fsts (bad) push les jle or dec and jnp iret pusha or in in xchg mov out adc mov in mov hlt hlt fildl sbb mov icebp push or test push mov lret jmp jae push add repnz push hlt out jecxz inc stc inc adc scas lea mov mov mov cs ret mov loope repz adc jmp loopne in inc sub add test addr16 jb popl add inc stc popf pop pop mov mov (bad) mov addl into nop add push dec inc (bad) nop cltd (bad) outsb rcr cmc test xchg pop xchg repz and mov add lods ss test pop (bad) dec xor sub xchg push inc mov outsb (bad) (bad) loopne xor sub scas and daa dec add mov loopne inc call lods pusha or ljmp jmp icebp xchg mov inc loopne (bad) out int or bound push push mov je xchg outsl adc (bad) stc stc add jne pop jecxz scas mov imul js push add fs mov clc adc mov jmp pop nop das test arpl icebp pop sbb cld mov out out xchg inc fbld hlt mov jge ficompl ss sbb fidiv pop stos ret aas pop cld fwait and mov adc xchg je pop cmp cmp popa outsb adc and inc xchg ficom push xor xor pop rcrb ret mov mov pop sub icebp mov inc imul lock test mov in in push lock push jge scas je or scas (bad) mov loopne or (bad) jp test in repnz sbb mov arpl arpl dec std std insl insl sbb shrl mov call je test push std cmpl ja insl (bad) mov cmpsl sahf loop xchg rclb dec push cli mov inc adc mov cld cmc (bad) adc sbb call (bad) (bad) xchg mov jns adc in cmovge imulb inc (bad) mov addr16 mov out dec mov push adc adc iret mov pop (bad) pop imul or pusha in push pushf je adc inc sti add adc xor leave lahf cmp (bad) jbe repnz int3 int3 sub mov add faddl or xlat push jmp call test mov push and sbb sbb xchg into push pop add outsl mov add (bad) jmp or scas call aam in adc mov dec das jle add fwait xor fdivs call (bad) xor mov sbb mov add pop push sub bound xchg pop pop sub ljmp fcomp arpl ret out lea pop adc (bad) jbe test cmpsl add xor repz inc mov or xor or jbe nop out xor addl dec (bad) outsb outsb (bad) dec mov int in adc sahf (bad) enter mov sbb sub into int3 xchg rcl jnp jns cmp div jge jmp sub push mov push jecxz cltd in add pop out sub outsb inc stc pusha scas fildll adc mov mov negb mov inc es xchg int3 pop mov clc clc (bad) sbb pusha fs ljmp fsubs bound xchg mov xchg stos stos out out and mov dec dec jbe or dec mov and int3 outsb popf dec outsl pop test xor and mov hlt sub mov add push mov mov adc daa xor push pop loope cmp xor (bad) ja out fs leave push scas scas mov mov (bad) or push push in in push mov out repnz pop in sti sti aas aas cs sbb xor ret or int dec roll test in lahf sub jns nop jno mov and (bad) in xchg loop jp adc lea mov test scas repz push xor loopne inc inc into push lock loope add es cld cld mov inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec int3 and in inc or push xor pop inc push hlt add dec sbb xchg imull sti cli cs jo int imul add fsts leave out cmp ds vmovdqu and jmp mov sub in subl jl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg aas sbb push push or add hlt cmp cmpsl or ret adc pop es ret cmpsl test dec add lea jle jnp repz sub cld sub add inc sti mov jle mov pop inc inc (bad) (bad) and addb repnz mov int addl push pop pop push push movsl movsl mov (bad) pushf pop pop bound cmp insb cmp pop lret repz dec xor fwait stc cmp or mov movl add pop pop dec dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor add xor leave leave dec dec add data16 dec dec mov push in in sahf sahf inc adc out (bad) out imul jne sbb pop pushl sbb mov in adc ja sarl mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp xor roll insb js neg or add push cmp ss gs push or mov (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop push aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add add je dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa enter jo stc add rcl mov sub fstpt jecxz inc mov mov mov (bad) int jl popa test sbb mov movsl fidivl pushf pop sub cmp mov xchg stos movsl out out and sub sub ljmp popf fcomp arpl aam sub addr16 loop pop dec dec mov mov out cmp ds test scas dec (bad) push push cmc cmc test (bad) jae xchg xchg icebp jno sbb in subl jl xor adc xor leave leave dec dec add data16 dec pop mov push in in sahf mov mov sahf pop pop popf popf rcl jnp jns cmp div jge jmp sub jo adc push and mov push mov test jnp repz out std std aaa iret inc inc mov stc add das sub inc inc (bad) sub jg jecxz inc mov mov dec dec int cmpl jnp sbb test mov cmp call adc mov xchg stos stos out mulb and mov into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec (bad) jo stc out fs sub aam jecxz outsl dec xor pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp movsb mov mov cmc xor imul aad dec dec adc andl inc jne sbb mov dec dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl jns stos inc ljmp fmul int std out test fildll fs hlt cltd inc pop xor mov or clc fsubr mov inc cmp idivl jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa xchg pop adc sahf pushf fsts sub sub dec in addl and and pop imul lods dec or outsb outsb (bad) (bad) lret pushf pushf pop pop bound cmp out mov stos stos out out and sub sub ljmp sbb xchg pop pop stos xchg adc xchg popf fsts in mov rclb push jg (bad) loopne enter daa push ss adc decl lds into hlt int outsb jp in subl jl xor adc xor leave leave dec dec add data16 xchg loop cld push pop jo xchg test out pop pop daa push mov in cmp movsb lods sbb mov lahf nop (bad) popf sbb cld scas or mov fistp outsl mov and iret and aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb lret jns jo jno dec jae xor inc jl fisubr bound or dec push loope test mov icebp faddl jbe push sub mov je jbe je dec mov jbe mov ret movsb (bad) (bad) lock push or jno mov (bad) repz sahf mov lock mov decl loope leave sbb int3 decb sbb (bad) int3 stc (bad) icebp int3 aam inc jns add popf mov adc iret ja push mov loope adc out repnz pop in sti sti aas aas cs dec mov sbb outsl inc into in repz mov mov mov stos or cmc mov inc xchg scas mov test adc repnz fwait xchg test (bad) pop cmp (bad) mov add add int jge jl and loope add es cld cld cmp lods fstps clc test ret mov (bad) lret mov enter popf adc adc enter and movsb adc ljmp sar cwtl mov stos inc push pop sbb loop faddl inc push pop test scas scas (bad) push push cmc cmc test inc pop or mov daa int (bad) lret fildl cltd iret data16 test out popf rol (bad) std pop cmp pop fs dec or cwtl in pop insl sub ret aas xor mov gs ds mov push push sub arpl or test in jb pop add mov out loopne jl fsubrs sub dec call inc and adc jnp js rcrb in mov or pop stos pop lret push mov xchg stos stos out out and cli mov adc call inc cli pushf pop pop mov mov (bad) mov (bad) cmp std mov leave nop js cmp or dec (bad) xchg xchg ret push pop jae loopne push inc xor les push push push xor push das and xor adc xor leave dec dec aam sub mov push test or enter jns shlb test in fwait push dec mov aad jmp add pop inc aad (bad) fdivr scas add fs mov inc mov inc cmp add pop loop repnz dec jmp push sarb push sub das dec es aaa pop pop popf notl jns lea dec cs cmp push jmp mov add cli movsb xor or dec test and ss sub loopne arpl mov jbe mov ret lods xor add (bad) insb and xchg lock aam icebp repz push std mov clc push sub push and stc test dec xchg lret xor add cmc mov adc xchg sbb mov out test add aaa popf aas repz cs cltd push lcall shrl dec dec loope ficom shrb mov adc and insl insl sbb push xor jg int3 rol (bad) adc jno xchg sbb mov ss lret xchg gs sub sub fsubr in xchg mov outsl add loopne int gs add icebp push lods lock cld popf testb adc ljmp (bad) mov jmp stos inc inc aam cmc popf mov dec lret xchg (bad) es cmc cmc pop cmp aaa ss mov cmp ds scas adc or (bad) mov loope pusha jns in xchg shr pushf (bad) test lret jbe mov dec data16 dec dec jge add adc js fildl jb xlat push ljmp xchg jle mov adc push and mov es sbb insb mov add (bad) repz or repnz popf insl pushf xor es cmp pop dec dec outsb add (bad) or ljmp sub inc dec dec imul cmp xchg mov xchg adc fildl dec movb inc adc jno lea mov mov test into dec ret mov fdivrs xchg outsl shr das insl mov adc fsubrs sub pop ss pop jno outsb push push sahf hlt adc addr16 inc add imul jl xor adc push clc xor mov lret add sub outsb sbb dec das movsb idivl inc pop (bad) idivl jmp sub push mov fadds pop add xchg cvtps2pi mov std std pop mov std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc divb arpl mov mov sbb push mov adc (bad) repnz mov out out lds imul dec aad (bad) dec fstp xor push mov cmp ror cmp ss gs mov or movsb push test inc cmp inc jo xchg sub add xorl lods cmp cmp mov insl push mov pop in jae fdiv or fist fs push aam jne loopne push cmpsl mov aam (bad) or push push in in push mov out repnz pop in sti sti aas aas cs sbb sbb and cmp das push pop stc ss aam cmpsl pop movsl incl aaa sub (bad) setne test push mov std aas xor test call and inc inc mov xchg xor sbb sbb adc sub loope add es js cld clc clc inc inc adc dec cs mov sahf jmp jmp push jno inc sbb aas pop lods or stc pop cmp cmp adc lcall ret pop pop aam sub addr16 add pop pop dec dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl pusha and enter rorl mov dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop cltd aam popa mov and movb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam imulb addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int int3 andl test sbb add push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs jne divb int pop push decb pavgb xor loop or cwtl cwtl out dec dec push std cmp mov xchg xchg es xor (bad) xor dec scas ja inc mov push push pop push push push xchg nop mov aam push stos stos cmpsb cmpsl cmc (bad) or outsl call inc sub repnz in test aas jle rcr cmpsb in cltd out out loopne mov js in lea and pop pop fmul adc cmc aad dec std cld insl jne sbb pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope jbe lods push adc cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec cld push dec inc push adc outsb inc inc ljmp xchg ljmp mov sub add dec mov mov aas jb jecxz scas jno aas jbe add and lahf cmp mov (bad) insb addl xor rorb mov mov sbbl dec jb loopne inc xor aam imul out push push test mov mov jmp mov push imul sbb mov push cmp ret rol frstor mov sub sbb mov xor jnp jno dec sbb clc mov pop push push jge sub inc mov stc stc ret movsb jbe cmp pop or cld and push pop pop adc xchg rclb adc into lret mov push arpl ret xchg mov out lods fildll rol pop int pop add dec (bad) xchg xchg lds push jne outsl add repz (bad) test lcall mov btr fcoms rcl sti movsl lret test out nop fs shrl lock fcoms repz pop pop dec imul mov add mov xchg mov ja mul or nop das int and clc rolb outsb out (bad) rorb dec rcrl es test or insb insb mov mov xchg nop mov fs mov daa fimul inc mov or mov (bad) addb outsl push jg and adc and mov les inc pop fdivrl test cmpb inc out cmpsl adc into sub int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec lcall adc cld movsb sbb push loope inc push into sbb nop (bad) push add push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push hlt jp insl mov in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js mov inc mov je xor fcomps sbb xchg sub loope add cmpsb js cld cld clc clc inc inc adc cli jne pop add sbb jmp lret divl sub cltd mov enter (bad) pop pop rcl sub insb sub add mov scas stos leave fiadd stos test and lcall jae mov sub mov jnp jl xor adc push mov jl inc (bad) (bad) outsl pop push ret add in in popa popf xchg mov mov xchg sub out clc loope jae fdivs sub jmp adc push cs sbb adc cmp fildll dec ja pushl jb sub insb das pop pop xor (bad) lds xchg xor pop inc es cli repnz jecxz aad enter (bad) addl sbb movsl mov lds or cmp rcl aad xor cld loop jmp cmp adc lcall stos sub loopne sub sub jo pop dec es xchg (bad) shrb cmp mov mov test add cli popf mov mov js outsb scas jg and adc xor leave dec dec or push add adc mov pop in scas repnz cld out es ljmp fcoml jg cmp or jmp sub jo js push inc dec pop pop lea xchg pop or jnp lock adc repz out mov pop inc dec (bad) lcall aaa xor idivl xchg mov orb test adc and int fcmovnu mov adc push pop fwait mov movsl mov nop inc scas sti out sub mov (bad) into js pop inc mov pop push mov mov add ret cmpsl mov lock int3 (bad) xor js outsb or test push cs ljmp sarl ja inc push (bad) sbb push push pop cwtl nop call add div sub in xchg imul out lcall xchg push pop push cs into push or push inc inc xchg aas jb or mov mov jb xchg cltd dec dec cld hlt insl es daa cmp add jmp or dec lahf addb jmp js (bad) xchg sub adc mov sbb inc pop lea sbb cld std xchg dec adc call mov xchg xchg and ljmp jnp and adc sub sub ljmp neg fisttpll pop loope and add and sbb and roll pop mov out push dec push dec fcmovnb int cmpsl call repnz add repz (bad) icebp push sbb pusha imul sbb xor xchg lds inc insl outsl je cmp mov cmp cwtl fcomps push test xchg mov sbb (bad) jno jmp pop push push cmp cmp adc cmp (bad) jl hlt repz mov aaa aaa mov stc and das jl ss loopne and push jo stc stc mov aad leave iret fcmovb mov jae test sbb push push test imul jg add or add icebp (bad) jne repnz stos ljmp js sti cld ljmp inc push mov cmove sub inc mov mov (bad) jg push rol lahf (bad) push das divl jns test in movsb mov add inc pop sub xor pop int3 gs (bad) add push je cmp movsl mov daa test dec push dec mov xchg mov adc fwait mov out aaa sub xchg push cmp js adc f2xm1 in jg or repz adc std stos push push and loope sar jle inc push cs in les and add inc inc push sub mov loopne rcr enter int andl or pop pop dec movsl pop mov (bad) mov pop and dec pop addl add stos stos out xor mov in mov pop pop inc mov gs mov jmp insb out (bad) into mov repz mov ror mov or cwtl xlat cwtl xchg and mov xchg xchg daa das or bound ja dec fist push xchg mov rcrl bound jle stos cld negb outsl mov mov ret repnz pop leave jmp inc inc stos stos jb idiv cmc test xchg jge adc popa arpl ljmp sbb mov jecxz xchg outsb xor pop adc clc mov pop push (bad) into jae pushf mov in jecxz adc or and mov cld or sbb adc or fs or xchg inc dec pop ds push or sbb (bad) call xor jge js xor out jmp stos pusha jl lcall dec jl sub or sub jbe cmp push scas xchg lods loop sub cs cld fisubr test (bad) (bad) repz andb sbb adc sbb and mov les in inc inc mov dec mov push in mov aas es xchg mov or repnz sub js xor cmp add cmp (bad) cli insb push add cmc repnz mov and loopne stc add addl les and cmp inc inc sbb repnz fcmovnu mov leave nop test movb test mov into pushf (bad) jbe push or xchg add jmp cltd xor and sub ljmp or pop (bad) aam cmp sub or cmp (bad) add (bad) rol fldt adc push stos sahf scas (bad) adc mov in mov loopne lahf sub loopne mov or pop and ss fnop pop add repz inc inc mov dec mov pop in mov xor fcmovu call lahf fdivl ds fistpll call xor adc or push inc mov xchg inc imul repz mov cs out lea inc sbb inc xchg fdivrl out dec inc jbe xchg xchg jecxz ror aam (bad) bound test and enter mov mov xor ljmp pop sti xchg fsubrs sti mov dec mov ss gs lods jbe mov stos mov rorl mov cmp es imul cmp fdivrp in dec pop inc mov dec jb add or and xchg mov mov xchg or jae mov push mov jecxz push in sahf xchg pop inc inc inc mov cltd mov xchg pop jp pop insl ljmp fcoms sbb mov or jbe xor push sbb aaa inc jns mov call jecxz inc sub shll jg push jp sbb les push ret xlat inc mov cli mov jne jge cmc hlt in cmp cli sub dec sbb jae sub inc cltd addl out arpl ret mov sub outsb sub ja cmp popa mov int orl dec lcall jo add jo xchg icebp icebp dec adc cmpsb jmp add add add pop and or add data16 sbb mov lea jne ret lea aad jb aas jns cmp jmp sub jo adc push and jle jno dec pop lods jmp in push bndldx std adc imul push cli sbb das das or add mov push orb xchg clc cmp lahf mov int aad popa sub in je cmp push cmpsb movsb mov std jns add cmp xchg imull push in shlb sub and cmpsb (bad) pushf addl repz lods mov arpl ret (bad) mov inc push or push and lcall gs mov out cmp ds ffree fstpt fwait test xchg xchg dec repz loopne mov fs adc cmp leave andl cmp arpl dec mov imul sahf fwait mov adc xchg sarb jno jbe addl aas je adc ss mov jle push sti int3 repz adc std mov out mov add dec inc mov ss inc inc es lret leave fcom (bad) lods mov pushf xchg pop repz pushf pushf add and mov sti enter xchg test and mov and ss mov (bad) pusha addr16 mov xchg clc lock fs inc inc sbb add inc inc adc dec cmp mov pop inc movsb mov adc inc aad dec fs arpl imul mov xchg xlat or movsl mov in or adc ja mov jmp sub xchg add sti stos pop dec dec inc (bad) cmpsb sbb inc sbb adc jb or xchg scas fmull adc cmc shrb push jne outsl outsl jne xchg roll push dec pop loope add in mov mov sub enter adc adc jle mov outsl jnp out clc clc inc push pop adc jne add cwtl fwait xchg outsb cmp (bad) jmp cmp adc test add in mov fsubs vminsd fsubrl popa mov pop pop dec jl mov mov in xor insl mov cmc cmc mov rcrl out fwait jmp xchg in jnp pusha xchg addr16 jl add adc mov imul imul push adc test mov out xor shlb repnz sub sub push dec push lea rcrl (bad) pushf lock jnp repz std lods pop inc das and out stc sbb icebp es mov ret lahf and jl es pushf ljmp int3 std int add cli mov pop test mov iret pushf aad js push pop dec xchg add aad (bad) fadds sub cli bound gs arpl (bad) push pop xchg pop inc push sbb adc in dec pop scas pushf js lods pop ret fisubrl jg fstp fcmovnb mov inc push hlt cli mov insl xchg ljmp rolb sbb jl xor inc xor cli push dec push data16 add cmp in inc push cmc movsb ret test dec adc das rcrl jns xor mov setle adc imul je pop push lods stos rorl repz test aaa jne es cli mov pop pop inc dec (bad) (bad) dec push hlt call pop negl test mov andl pop pop mov movsl dec dec cmp pushf pushf pop pop bound cmp jge inc pop xchg xchg stos stos xor and mov push insl push dec into into cmp ss gs mov ret and xor inc inc push push or inc inc cwtl cwtl loopne xchg stos dec or dec jbe daa in rclb dec ja inc inc (bad) or push push push push inc pop nop nop mov aad mov in stos mov adc xchg xchg dec dec jno mov or add rol shll es data16 mov js in in lea and movsl movsl and in in or mov add xchg xchg loop scas scas nop nop movsb movsb push push push into into test mov incb add pop xchg mov aaa imul out sbb adc imul fnstcw cld cld movsb sbb inc adc cli jne add fwait fwait outsb outsb mov xor popa aas jg add stos ljmp and ret in sbb sub dec push and inc add xchg sub mov out adc out scas lcall test std xor mov mov imul push jne adc jae push out dec imul xor (bad) fs and mov mov mov test nop (bad) xor jns adc idivl stos jmp sbb jo cmp cmp jle pop adc inc inc jbe ret ret mov aas aas fstp xor sti sti adc arpl outsl pop cmp inc (bad) (bad) and in (bad) jecxz inc cmpsl push push mov cmp xor jo test push sub sbb sahf pop xchg sub rorl sub loope pop test call lods out jbe mov dec cwtl cwtl rcl imull mov into scas sub dec je sbb mov outsb push test sahf push push sub sarl nop icebp icebp nop inc or xchg lea insb loope loopne pushl xor inc int3 es (bad) inc es and sbb adc ficomp push dec push or cmp dec jae mov or mov mov push xor ss ss fdivrp cmp iret test repnz xchg or out add repnz jb pusha rcl mov out fs rcrb jb data16 sbb mull in in movsl inc dec fstpt jnp dec and and cmp arpl inc jg push jge mov mov pop sbb xor mov ja inc rcrl pop out fistpll jae xchg lcall pop test adc add sub and inc adc xchg fwait jle mov cmc dec pop dec or push mov mov cli loop mov mov sbb test adc lahf out jnp fsubr add add ljmp movsb or imul in fstps pop or (bad) repz jmp sbb leave out add lods xchg js or fisttp push bound mov aad popf adc gs ja adc rcr aam mov enter cmp mov xchg add cmp outsb bound fwait push faddl and divl jnp inc call xor call aam popa les (bad) (bad) adc xchg je lea jp stos ljmp jns xchg xchg lods and sub arpl xchg jl mov int3 cltd loop cmpb sbb aas xor adc push adc jbe je fistl vhaddpd or pop cmp jnp sbb idivl pop repz jo inc inc jecxz fucom jl lock push push lods sahf pop adc rol push jo pop mov icebp adc cmpsb or jno or dec push fisubr jno das in dec dec inc pop xlat jl sahf or movsl in push movsl cmpsl aaa ds in arpl scas pusha and imul stos and (bad) aad lods or jo gs mov out push andl cwtl cwtl shlb ss ret cmp dec lods push push sbb push push push or stos in test add sub push push iret xchg clc int shrl mov loope rcrb mov push ds jmp inc mov in adc fcomp scas xchg cmpsb bound push sub xlat cmp cmp jmp out jno mov xor lods add (bad) pushf pusha sbb imul jle and add mov push test dec inc push push (bad) push loopne call test jno inc aaa cmp dec dec xor jnp dec dec xor inc popa mov mov push lods arpl call adc (bad) (bad) lret mov ljmp mov lds jnp ds call sti (bad) es push (bad) pop cmp jae (bad) setg push fldl cld imul addr16 in push pop mov fs daa stc bound inc daa jle or push pop bound mov popf (bad) imul mov movsl pop pop lahf jae sub mov repnz lahf mov aas jmp sbb pop dec dec add add xor jmp sti sbb push cmc or in mov scas scas nop jg sbb jle cs test lret insl sub stos int3 test adc iret out sbb adc scas fistp push cld add es jns pop pop mov in decb fwait xchg push mov fs pop addb push cli ljmp pushf call sub shll (bad) std mov pop (bad) inc xchg xchg sub enter sbb lds scas scas fidiv and or push pop push ja insl insl js xchg xchg in sbb loopne push or push sbb mov dec pop in jbe je mov fidivr sbb scas fnstenv bound aam (bad) gs les jne lretw (bad) (bad) (bad) stc pop sbb push movsl push mov push addb inc popa pusha lock test push icebp adc es mov jo inc in rcl pop and jb and call leave mov or jno xor pop inc dec dec popf xor or test or cmp pop pop bound xchg xchg sbb daa (bad) adc (bad) aas ljmp jne lcall ret pop sub mov inc icebp add std dec call call rorb mov mov inc into lds insl insl mov movsl orl fwait fwait addl arpl cmc mov cli fist push fs or sarl pop test jns jge fst pop xchg cmp je insl pop lods jmp pop insb sbb sub jns inc imul xor sub popa pusha lock pop cmp sbb (bad) js leave enter enter cmp aam adc xchg test mov jg jno inc inc test add movsl cmc int or aad jnp xchg sbb xor in dec mov xchg shrl mov adc imul push out push jmp mov ljmp sub jno test inc arpl lcall cmp lock dec jl mov inc sub mov pop bnd ret loope (bad) mov add mov mov or fwait mov loope sbb sub mov mov sbb dec dec fwait stos push add and in (bad) das pop imul mov push cmpsb bound or push das and fwait adc pushl lret add (bad) ret movsl movsb push clc mov mov add lods test (bad) and xchg fwait adc data16 and loope xchg mov inc xchg sub add insb mov fidivr sbb mov xlat aam xlat cmp lods ljmp daa pushf jae test pop jl rcrl enter xor jb mov aas aas daa movsb insl jae (bad) push (bad) sti add or push outsb xchg lea icebp mov jae (bad) (bad) lcall int ss mov xor jecxz mov dec adc mov scas xchg fsubs sarb ret mov cmpsl lds sub mov mov mov (bad) mov xchg icebp test (bad) mov cli fidivrl inc cld and pop pop sub mov or mov out sahf cli mov mov addl sbb sub lret pushf pop pop jecxz icebp in jecxz xchg cltd and pop pop xchg push out push cld out and test ljmp lahf fmuls mov shll addr16 (bad) std adc movsl mov call rorb rol and lods or clc idivb push push xchg adc imul xor out int3 int3 dec je mov cli push sub and data16 fnop add popa popa flds fnsave dec lods lea xchg add les (bad) (bad) jo adc subl inc imul shrb gs (bad) loop push cli mov jle std std inc adc add stc stc add inc adc inc pop inc push sbb mov dec (bad) push ds andl in inc lods mov popf mov mov adc imul out ret ret sbb pop pop clc mov pop xchg aas bound (bad) xchg ret or enter loopne mov jbe or test or in add sub mov dec lea mov cmp push pop lret pop push xor push push cmc hlt icebp test (bad) mov outsb outsl dec fidivl cs pop or addl addl (bad) fwait mov cmpsl cmpsl addr16 pop add cli mov jae mov cltd xchg lcall call and push pushf fcompl mov imull scas outsl outsl pop pop jl iret jmp inc pop lea scas (bad) pop cmp sub and aas dec sbb in xchg xchg aad push push lret sbb add cs add mov daa ret fisub xchg cmp xchg decl or addb cli stos ljmp arpl xchg lods sbb or dec aas ret mov iret sub out cmp jnp mov inc jb cmc test iret mov cltd sub xchg xor loope (bad) or xor fadd push enter stos inc inc and xor cmp jbe jbe cmp mov xchg fdivl das das lock in rol or das (bad) mov cmc lock inc inc jle push sbb cmp sbb test inc lcall jo leave jmp sub jecxz hlt jle sbb inc es mov mov int (bad) test outsl jbe sub mov pop fldpi xor cmp stos loope mov mov push stos cs cmpsb push jo pop popf and arpl ret fsubl sbb pop iret aas push add mov mov sbb cmp ds (bad) daa dec popf in ret scas push rclb movsl in add xchg xchg xchg je cmp xlat xchg inc int ss insl inc add mov mov es push (bad) pop js cmpsb rcrb test sub hlt outsb pmovmskb (bad) repz and push and fdivrs inc popa pusha lock lock pop or and push pop popl jl (bad) call les ret sub sub and and iret es mov cmc fidivrl pop fcmovnb addl dec cmp adc popf mov daa aam repnz pop clc or ds stos out gs in mov mov int into cmp icebp jae out gs int or xchg stos rolb and f2xm1 push pop push int and addr16 out sti mov aaa pop jbe pop inc push lret cld jne (bad) aaa and hlt data16 inc push xchg sbb pop jp cs pop pop or pcmpgtb mov jno std movsb sbb or mov cmpsl adc movsl push xor in enter loope mov js and or push fbld sbb dec std std insl test sub push mov xchg (bad) call pop stos cmpsl adc inc int3 push iret xchg dec shll xchg aam xchg sub std movsb add pop xor fist cli cli jne add jg rcll lcall or cld out sarl ljmp fsub push or test lods pop in (bad) adc lret and cmp lods lods out pop sub jns test mov into jb cmc popf pop movsb xchg rorl ficomp dec sub mov out and mov (bad) fcoms stos stos in fs icebp mov lods shrb scas dec cmp arpl addb adc int (bad) jmp pop dec dec jno gs clc jle cld cltd lods lods push cld adc jmp test mov jno push adc (bad) stos arpl (bad) and adc ficompl repnz push imul insl je xchg andl test ret rcr adc lea add arpl inc stos pop test adc imul test loop adc push add outsl aam ljmp cmpsl cwtl fsubr out (bad) cmp mov ja sub ss dec mov inc push insl mov mov mov sub adc jo test lods xchg icebp icebp lcall sbb add inc cmp xor int3 fdivrl or cwtl cltd mov (bad) sub pusha popa jbe jo mov adc cmpsl cmpsb bound rcrb xchg xchg cmp xlat (bad) (bad) lahf add mov inc sub stos xchg fcmovbe dec push pusha pusha mov adc arpl push (bad) jb call aam mov jg (bad) repz mov push mov cmp andl cld cmp pop popf adc inc mov mov adc mov push call mov div int3 mov int xor ret leavew aam jne mov mov or movsb (bad) decb stos jmp cmp or xchg cwtl outsl cmp jle bnd mov mov fsubrs lret js out inc (bad) addb mov loopne outsl lahf aaa sub aad lods out push loope div mov push scas pop inc (bad) cmp mov cmpsl icebp push jmp aas clc stos push daa es mov fmul jns js add or push mov and rcr push xchg sti or mov test nop mov dec push adc pop into into pop test or mov aas (bad) fdivrl mov pop sbb aam push out flds call paddusw xorl cmp mov jg sub sbb fcomp loopne ret xor aam lock cwtl out mov mov xchg jne lcall test arpl (bad) (bad) mov push xchg ficom lahf cmc in loope xchg jae pop fimul push out sbb popa xchg sub test lea push iret jle leave dec div jo test mov movb sbb or xor rcrb jmp xchg jb jge jmp jl dec in ljmp mov add add push lods mov jnp out jns fnstsw iret popl in mov outsl das cwtl ficompl sub xor movl sahf scas std mov xor or in xor imul and cmp adc ret imul push ja push adc (bad) xlat sub sub fcmovu push (bad) mov push enter jge xor aad pop inc inc xchg xchg push sbb cmp xlat mov scas scas sbb test jbe insb gs dec stc pop sbb push sbbl cmpsl add int3 int3 inc mov stos cltd imul dec sbb jbe pop aad mov xchg sarb inc imul popa cmp outsb jo enter fidivl lea clc mov lods lods mov add out out in fnsave int3 rolb add mov orb or or inc inc in dec out push popa or test in out test pop movsl lret xchg hlt sarb (bad) jmp imul insb insb clc push sti fidiv popa mov dec into jb mov les mov shll push dec push ja ret and mov cmp (bad) sbb inc xor dec or sbb xlat daa lods mov cs fs xchg add sbb loop adc push fstps leave mov aad cmp cwtl push jle (bad) sbb push xchg aas in lahf mov jb,pt mov or cmpsl outsl mov rcl es sahf mov cltd cltd adc jb xchg in jge xchg or sbbl add fcoml nop enter std std sbb or xchg xchg push cld test pop push cltd (bad) (bad) (bad) clc enter mov cmpsl mov call loopne in cwtl adc cld dec out inc cmp ja adc test adc leave lds mov sbb in mov cmpb inc jl mov stos jo pop jb daa pushf xor mov (bad) jb cmp mulb jns cltd pop pop aas shrb outsl in push repnz push rorl xchg push pop adc cmp nop add mov insb fs jl (bad) sub test inc xchg je (bad) das mov in in pop (bad) push push mov inc jb lock push jae jns jmp lock push (bad) (bad) stc in jmp icebp add jle (bad) lods lods lahf adc ret inc testb out out bnd aaa inc inc dec lret add das lods bound add (bad) push cmp nop ret movsb inc sub pop mov jno push stos std mov jl jno ret test adc pop cmpsl xchg (bad) lds or ljmp jle pop pop outsl ljmp push (bad) aad cmp (bad) and mov sub sub enter sub xor arpl mov pop aas xchg daa cmp sbb lds cwtl mov mov or fsts xchg outsl insl push icebp sbb in xchg cwtl add mov cmp xchg ds cld or subl stos gs jle jbe fildl movsb cmpsb (bad) call inc cld fcmovnb or or scas aad jo adc push xor xor add mov adc cmp cs (bad) popl push out dec (bad) (bad) cmpsl hlt xorb xlat xchg fcmovnu or inc inc ss jge inc push jle sahf mov mov pop pop fldl imul bound cli stos adc xchg mov mov stos out fwait cmp lret imul es push loopne inc inc mov int loop dec inc adc add (bad) mov jmp sbb mov leave lods addr16 mov dec or push mov push mov and cmc icebp icebp test mov idivb out jge loopne jmp mov jno mov repnz sub add aam jmp in cltd cltd cltd not push dec xchg out pop jb or (bad) adc divb cmp dec ficompl aas outsl outsl pop xor xor ficoml mov std or (bad) add cs mov push mov fdivrl pop fisttp es test or jno sub fsubrl sti (bad) (bad) push stos sbb lds add cwtl xor add mov mov in je jo pop popf and arpl ret fisub hlt imul xor add xor outsl push mov loop pop sub lds push jns inc movsl push or movsl ret divb adc xchg add push and imul fcmove out out mov mov cli add xchg ret cmp pusha jbe push sub add inc xchg test adc cmp pusha push adc out cltd fadd (bad) push mov sti int lods lods lods lods lahf lahf out bound xor in mov aaa aaa (bad) xchg adc scas push fnstcw lds xor sbb lret mov prefetch pushl cmp dec xor mov int3 popa test out pop pop dec mov pop shlb sahf dec cmp mov inc pop xchg out ret and or adc lcall sarl aam es xlat rcl fbstp and xlat (bad) inc inc xchg out sub push push sbb and flds jo jnp sub mov (bad) sub nop pushf add jle ljmp add pop inc js push mov mov sti stos stos aaa in loope mov cmp sahf add lods dec dec insl mov das jnp jns (bad) cmc out idivl scas pop push sub lods adc add mov push movsb je sbb repnz jle in out add (bad) jl sub push jne movsb push fs out sub fistl inc cmpsb pop cmp es repnz test mov xor je xchg pop sbb sahf pop mov add (bad) inc cmc psrlq scas and pop xchg xchg sub and and mov dec (bad) mov inc cmp ss cld jne cld mov sbb int3 mov add inc jo int3 or in loope sbb jae daa iret ljmp xchg sbb xchg into cs ss mov or loope cmpl xchg sti push cmc repz call push dec jno inc cmp add movsb in jbe rcl mov jmp lretw loopne jns movl sbb (bad) cmpsl and adc cmc cmc cmpsb std ljmp push outsl outsl jecxz addr16 add pop push jmp pop push pop add xor in jg (bad) aaa inc rcrl in in cmp xchg fistpll mov adc dec xor outsb outsb (bad) imul xor sub sub insl push outsl ljmp dec xchg mov aam cld sub mov std std aad fidiv push dec dec push push sbb mov and arpl dec ret or jae xlat or mov cs insb adc insb adc js adc adc cld mov pop out sbb je scas cmpsb xchg roll das lock hlt rol or adc mov xchg loope scas mov inc inc subl dec and jnp lock dec pop out out add dec adc adc rcl mov mov push rcr jg sbb jb data16 or inc push mov jl popa test push (bad) loopne ds and lret nop lahf xchg mov dec and xchg adc fisub adc pop out daa pushf push in dec adc cwtl cwtl pop push out decb mov mov sbb push call mov inc xchg das (bad) jae xchg jo sarl adc insb fs mov xor push leave dec dec ret fisubl je jbe out push push cltd lock mov xchg movb sarb out cmp loope lods or bound addl testl add enter add push call jg test jg pop pop mov shl fcmovbe out std mov pop and (bad) (bad) in movsl push test lds ljmp fwait imul pop pop xchg jp mov je lret xor lret in test imul dec push aam add jnp test dec mov and or mov js sti jns and pop fldz je (bad) fidivrl mov push dec push test adc cmpsb mov adc xchg ds cmpsl cmpsl add dec mov je popa mov or outsb ja movsl cmpsl sbb xchg ret movsl mov and adc cltd push mov jl aam (bad) (bad) adc mov (bad) std out push or sbb test jbe pop mov call jge xor mov hlt int out cmp cmpsb dec sbb cld mov scas in nop add pop nop addr16 adc mov jns mov out xlat orl adc sbb repnz and inc mov sub jl ljmp pop insb dec push dec aaa cmp nop pop pop sub imul sbb lds ds inc mov ficom mov sbb rcl leave repz aaa out sub in jmp cltd mov xor mov dec int fnstenv fwait mov push push addr16 lods scas dec mov popf pop xchg sub jnp jns push out cmp sahf xor adc mov gs lods or jno,pt (bad) add pusha (bad) das dec jnp stc xor inc add enter popl test push (bad) lret scas sub fisttpl mov fmuls aaa push inc dec dec pushf xor xlat mov in movsl aad inc pop dec dec lds ds jge fs push push ja push adc push pop (bad) (bad) jno pop pop das sahf cmp pop pop aam lds je sub add xor adc and in inc shll jmp cmp outsl in push xor ficom cmc popf fnstsw fisubr push dec out add test lea xor push in xchg xor leave idiv popf sahf and jb dec inc push push mov je scas fnstenv (bad) jnp cmpsb rcl push jmp aas xchg idivl pusha mov jmp mov cmp cs (bad) mov out fwait add mov pop (bad) jo dec adc call sub add subb movl scas leave mov dec xor or mov in sub push xor cmp pop sahf pushf lcall mov inc mov insl push (bad) ja mov out and mov jmp add add xchg je negb sahf repnz movsb ja int3 or add jecxz cmc inc inc cwtl cwtl or pop dec or mov xchg sahf daa std icebp (bad) es mov dec ja rclb cmp stc loope add pop mov or jge popf pop and in dec dec jno arpl pop pop mov xchg jae jg movsl dec xchg in lretw mov wbinvd dec add push sti mov or inc (bad) daa jb pop fcompl (bad) js insl sbb rcrl xchg lcall sbb imul pop lds mov (bad) adc out scas add in fs cld fnstenv pop aas cld pop repnz ret ljmp xorl mov pop fwait lcall hlt ljmp popa addr16 mov mov xor sbb aam xor rcl in leave rcr fild jg sbb loop sub ds push mov mov clc push mov jl test jns pop fisttpll out in addl xor adc mov jo aad stos pop addr16 dec mov xchg adc inc sahf sahf mov push cmp mov xchg aam bound das sub je jno and sub push call orl fisttpll lods lods sbb psubb out add mov xor lea shlb (bad) and or das fcom push (bad) mov jg addl sbb dec ds lock sbb (bad) sub mov pop clc pop mov stos inc in movsb add aad cmp lods ljmp push imul sub adc cmpsb mov xlat pop vorps xchg repz nop xchg ja outsl arpl (bad) adc push das (bad) lahf shr (bad) (bad) xor pop sbb out mov add xchg xchg xchg cmp jno insb jb cltd xchg das into ss inc ret test dec dec das cs push in sub bound push push pcmpeqd add add stos cmp sub adc mov xchg loope in add pop fcomps popa xchg adc (bad) xor in dec std aaa aaa sub mov mov ret les andb add lods sub repnz lret inc add das lods stos xchg mov pop flds xor cmp sahf lcall pop lods xor cli clc insb pushf das pop out out and pushf jno mov dec mov test cmc mov sub mov mov mov mov or pop pop push or lahf push fsubs adc mov mov push push dec jecxz icebp icebp outsb mulb pop nop sbb pop sub xchg loopne and dec or negl inc mov push jo mov or xchg scas push arpl outsb fsts repz xchg xchg lods mov js in addr16 sbb orl fbld aam icebp mov add insl insl sbb outsl pushf push imul sub push test js add out pop dec inc mov xchg xor pop in sbb adc add push fs fdivrl push and out dec gs insb outsb (bad) sub mov lea mov subb sub (bad) sti cwtl adc popf pushf cmp pop sbb (bad) cltd rcl stos xor mov inc aas cmp dec inc dec push sbb mov push scas sar mov cmp pop fwait lea mov sbb xchg jl jl fs stc into into out out fdivrs push dec mov cli cli push push data16 cwtl inc dec movb test or cwtl or out jne loopne rcl jnp pop cld jle xor sub xor out imul imul mov jnp mov aam std std mov push fistpll inc inc add das fmull test push mov lret inc cmpl ret andl leave (bad) and mov xor (bad) pop push jmp bound mov mov mov std or xlat lcall stos jo pop push daa pushf jae test ficom test cmp leave lods mov inc xor ds push (bad) shlb inc push push push push iret (bad) sbb sub daa dec jo je out sbb cmp xchg xchg xchg sbb pop dec cmp movsl mov cli add mov lods in pop sbb scas scas pop mov add inc add sarb nop test cmp icebp or xor mov jno es call jnp repz inc push mov mov adc faddl and inc cmpsb pop popl es and aas dec fs mov push popa xchg pop or test dec cmp push sub xchg cmp pop test inc adc fisubr or dec or cmp or loope gs stos dec or push jecxz movsb pop jmp loopne pusha cmpsl dec sub mov inc scas xchg pop add jnp cmp ja fmul mov mov mov and lahf fild stc xchg bndstx cmp jae imul jmp dec dec mov arpl mov scas fistp pop outsl imul movsl dec cmp data16 wbinvd dec push add out lea pop daa movsl movsl (bad) adc sbb inc dec std cmp xchg int3 sbb xchg dec data16 sub call dec pop add mov imul out sti or test in or es clc inc (bad) push es scas add fwait adc hlt pop cld jmp mov or dec mov cmp sub imul lcall ret xor (bad) jb cmp fisubl stc insl xchg push sbb sbb mov jo push and (bad) jnp sub pushl rclb sbb or fwait fwait andl repnz mov mov je push js in adc scas out or cmpsb (bad) int3 das lds cmp mov add out lods movsb mov jmp push and jle xor mov lods push loop lahf je mov cmp aas inc inc cli lods ds pop xor fs adc je out sahf into mov xor and pop test sbb addr16 jbe movsl mov fldcw or andl loope rclb push push adc add shll outsl cmp adc fcoms mov cmp (bad) fcompl les fs std mov inc xchg xchg sub add dec push inc push sbb push test je push xlat mov or outsb aaa lea xchg out sub out loope (bad) int inc fwait mov sbb adc data16 icebp xchg sub bound push push mov or bound mov mov jmp sub sti cmc shr xchg xchg lods mov mov lods movsb lods lahf lahf (bad) lcall add aas push pop (bad) mov das xor (bad) fs lds cmp inc es cmp popf cli mov fmuls sarl pop pop in mov in push stc in pushf call cmp mov jg push adc out dec dec cmp mov add adc into jbe shr repz mov lret mov dec pop add mov xor cmc mov repz jecxz js ret dec adc mov daa mov lret mov push add lcall fwait repnz outsl dec xchg xchg pop pop or in sub ds jno mov sbb imul mov lretw adc push loopne mov out int3 jge push adc ret fcompl mov call xchg adc mov xchg (bad) jmp pop pop cltd enter call movlhps mov nop test xor in inc aam cmc icebp inc add mov add into mov adc andl test cld ljmp ljmp es and pop pop insb aad sub (bad) ficoml mov inc add push loop stc mov insb loopne lods inc push jge mov cmp and push push cmc jle sbb xchg jae jae icebp icebp cltd pusha loopne add sub popf gs jno adc xlat jbe and dec dec test clc je bound dec dec mov mov pop int3 jne push mov or popf (bad) jno pop jns,pt (bad) cmp xor adc jg xor (bad) xchg jno push rclb femms addr16 jecxz push std xchg jmp pop inc jo dec jmp xchg mov arpl mov mov leave mov aaa jne dec dec inc fmull push mov jo rcr mov mov call jno out xchg dec inc sub sub (bad) aad push push (bad) cmpsb jmp jo (bad) mov fsubr out cmp mov jl xor (bad) lret jp xchg xchg dec test inc push cmp outsl in push inc (bad) push mov adc (bad) pushf xchg xchg icebp jb or mov add inc and adc int3 es or test cltd fs or sub adc cltd test mov lock jnp xchg mov imulb (bad) (bad) jmp xchg jp and (bad) orl lock adc mov xchg cmp mov jo in and outsl das cwtl sbb cmpsl mov inc push cmp shlb cmc mov fdivs xchg and add jbe movsl pop mov call cmp pop pop mov adc lods lods int3 ja xor xor ret mov mov inc ljmp push imul jae test cmp or (bad) int dec rcrl sbb ret fxch into subl ja (bad) sti and hlt loopne leave cmpl mov mov sub or negl sbb xchg xchg loope fwait notb out ss cmpsl icebp cmp mov sahf fsts data16 imul (bad) repz lret lret sbb cltd out loop cmc dec les xchg xchg loop scas inc inc jle pop dec or adc mov xchg popf push loopne inc pop mov out lsl mov fnstenv subb jne jae ljmp jne inc addr16 mov jle dec mov jg sub movsl outsl ficom popl dec imul and mov inc scas sub aas push push sbb sub jle outsl in push pop (bad) push xchg jo jp sub sbb push mov out sbb in mov imul mov xor mov fsubr repz inc inc stos adc xchg push mov jns or jnp hlt insl (bad) les cmpsb lock add and and inc addl pop pop cmp dec xchg stc add enter lcall das in pop push (bad) pop imul push or cld cmc mov test test repnz sbb sbb cmp push sahf cltd cmp push and (bad) nop xchg and sub sub sub ficom int jae ret dec shrb sub jge repnz (bad) push std dec dec pop push mov pop aas nop push mov pop mov hlt push push and jbe or pop inc inc mov mov stc xchg shrl pusha mov xor test mov test icebp inc mov cmp ficomp dec dec xlat jns dec (bad) fst pop stos divb cmp (bad) (bad) (bad) jmp jp gs jle jno (bad) xor pusha lahf (bad) psubq divl jae stc add call inc cmpsb scas inc and pop jecxz inc movsl cmp jp dec mov int pop lds stos test cmp arpl mov and cltd and add xchg insb mov (bad) sub (bad) lret mov iret into cmp xchg xchg cld out mov mov jb stos cmp add icebp lock jecxz fsubl push jg sub mov imul sub xlat xchg loopne popf int cs or jge (bad) jae hlt hlt push cs push xchg fwait cmp dec dec pop fucom out push pop pop jnp clc imul jmp dec dec jno dec lret jb or cmpsl or jne sti aas aas cmc int3 push pop jmp data16 loope mov cli xor stos jb or fcomip fwait pop rcrl in in or xchg xchg dec loop popa jg pop rclb cmp pop nop fcomi jno incb call jb fnstsw aaa imul out in adc sub fldcw pop pop push dec add push jo add repz xchg xchg cmp mov or or das pop cli sub (bad) or test (bad) lcall fdivl fldenv hlt xchg shlb mov or jl mov lods out pop cmp push mov add loopne movsl ret roll push js jmp jl jl fs stc mov int cltd mov ss adcb stos cltd gs dec (bad) push shrb ss pop inc divb pushf popf rclb imul cmp lods sub push push adc jg xor fiaddl ljmp xchg add mov mov mov mov and or fnstenv out sahf cli mov xor push push sub iret mov test dec sub popf xor out adc pop clc test ja push adc pop add inc push stos stos ljmp mov out cmp cmp daa sub std mov push xchg xchg pop mov imul cmp fsts js jnp sub mov (bad) sub nop pushf cmp jle ljmp add pop inc js push mov (bad) fsub sti stos stos xor icebp test mov xchg stos inc fdivr ficomp dec dec insl mov das jnp jns mov mov decb cltd cs fcmovu (bad) sub test scas push lods lods lahf pop mov test cmp cmp pusha jb mov lret sahf sub fstpt and add stos push or jno aaa sub dec xor jnp dec jb rcr insb jns cmp aam call (bad) scas xchg push in clts xchg xchg sub mov (bad) mov cmpsb adc jne and jbe negb stos int3 ret arpl or lahf jo mov xchg cmc mov movsl sahf sbb sbb lock rcr xor sarl aaa ja push or inc push popf ficompl imul or testl in divl mov mov aad rolb insl mov in repz data16 pop or incl jl dec sbb xchg lret in loopne pop paddw mov das outsl (bad) push push push leave and ficoml loop cwtl and xor push add andl push mov ds mov xchg in mov ljmp mov outsb outsb add sub call mov push cmp movsl addr16 adc leave cwtl arpl dec xchg mov or sub std mov (bad) insl scas sub and cmp repz sbb or arpl xor pop cmp sub movsl movsl repnz cli add xor out int3 int3 ss test jbe je dec mov push in in sahf sahf mov xchg xlat sarb sub (bad) enter lret ja,pt out insl push daa cmp imul lahf cmp jl mov push adc pop mov mov pop rcl xchg cmp andb cmc repnz mov mov iret addl js test dec mov lds jnp cmp lds lods stos pusha mull and repz ljmp arpl ficompl cs sub jge sub jb dec dec cmp shr loope data16 ds mov scas movsb les jns (bad) test je and loop sub imul lods xor adc mov rorl negl push push bound je dec movb jmp mov dec mov mov xchg shlb jns mov divl data16 jmp sub je insl push daa cmp add mov lahf dec or adc mov popa jne or dec das das or sbb addb dec lods xchg (bad) cli fcmovnbe mov xchg cmc loope aaa in push jne aas push push adc call fisubl pop xor dec out out ficom repnz mov (bad) scas lret pop pop mov push movsb xchg add not add or ljmp xchg testb outsb pusha sbb call dec ds arpl (bad) test push jb movsl rcrl xor and mov jp imul inc mov aad xor leave (bad) out test scas test in inc dec out xchg cmp mov pusha inc sbb mov sti jle daa or cmc jge jb repz fsubrl mov jbe cmc call add pop inc jnp cmp xor push cld jmp or cmp ret mov out inc daa inc or xchg test jl insl imul add push sbb es push pop cli cli and inc shr clc (bad) cmp nop (bad) cmp inc push imul sub sub das leave rcll cmpsl (bad) aam sub inc jbe jo das cmp iret mov mov int xchg (bad) push dec jno ret scas lcall icebp mov (bad) popf icebp (bad) sbb and sbb dec jno pop xchg scas cmp push mov sub cmp and in sbb mov xchg fcom test imul jno dec sbb inc jo or mov es adc fsubrp in jnp outsl jnp movsl push pop test or fimul sub xor mov inc and cmpb xchg jmp into repnz rcr test addl js or and lret lods cmpsb repz jb shll pop mov bound xchg add dec jne dec inc pushf cwtl mov inc inc lcall mov push dec add pop inc dec dec add or fmull ror scas enter gs pop leave loope stc mov cmc fcmovb lcall icebp inc inc xchg xchg les sbb push sub sbb push pop jg xor ds adc jae xor je dec cltd cmpsl xor mov cli idiv (bad) cmp xchg pop ret mov dec dec test dec dec (bad) jmp sub das bound cmp jp enter (bad) jno or iret (bad) fnstcw push sub mov aaa ljmp dec inc sub and sub jns xchg fwait clc ror mov mov aaa in sbb test or (bad) (bad) sti movsb mov (bad) jb and push push out out rclb repnz mov loope lret pop pop mov inc (bad) scas or aad jg ljmp (bad) scas mov add pop push push xor stc lret xchg xchg pop and test inc push arpl cwtl pop inc push jnp ja inc addb inc addr16 add and in sarl stos jmp ja in in cmp in lock jmp xor out repnz pop xchg xchg popa mov cltd mov jge pmaddwd ja push add addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec add into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das add pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov add in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int andl test sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp add jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds test scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov mov cmp ss gs or or and (bad) lock pusha int3 dec inc inc push push jp mov cwtl cwtl out dec dec or cmp xchg daa cmpsl xor rcl inc mov inc (bad) or femms push push mov nop adc aad out cmpsl cmpsl lock or adc fcompl mov jb out cli repz fcom xchg sti sti iret aas cs in lods sbb inc cltd cltd sbb push dec inc xchg xchg jb or repz fcmovu adc hlt cmc inc dec std std push insb sbb outsl sub pusha shr jmp pop pop lea js (bad) (bad) and xor push in enter xor sbb sbb adc loope add es or adc add add and cli jne insb add cmp popl and dec jle sub sub xchg jmp ljmp xchg daa ret ret pop pop aam sub sub pop pop dec dec into add shrb xor push push std testb xchg xchg icebp icebp mov subl jl xor adc xor mov add data16 daa add (bad) std pop in in cs xchg rcrl mov rcl lret jg jns cmp testl jo movsb adc and (bad) jns fnstcw push sbb (bad) jnp repz std std aaa aaa dec inc mov add pop adc (bad) jbe roll push mov mov int addl sbb push push cmpsl movsl mov (bad) pushf adc cmp mov xchg stos stos out out and sub sub ljmp lcall or aam sub addr16 sub adc mov rol lods loop cmp push fisubrl and cmc in cmpsl rcrl jae xchg lahf icebp sbb in mov fs popa xor xor add sbb pop cmp in icebp sahf mov xchg loopne inc jnp jns cmp jmp sub adc and sbb jno push fisubr jnp,pt repz mov inc int3 (bad) xchg stc insl add ds sub (bad) push loope mov daa inc es out mov popa int push sbb and movsl fdivs pop pop push bound cmp enter notb push and mov dec mov ss shll mov inc or mov (bad) lock pusha or inc jns imul inc fistpl je dec cmp mov xchg dec daa inc xor roll and ja inc mov push dec push dec push aad sahf mov aad imul in fdiv or push push lods in jo mov ret inc and repnz mov mov pop aas dec cs cltd jmp je cmp xchg adc jb or xorl add ds mov cmc push dec scas std sub sbb pop pop lds xor pop out lea cmpsb call inc and mov xchg push xor js jp pop sub es clc inc inc cmp xor add fwait hlt xchg outsb cmp xor adc sub sub ljmp fcomp arpl ret push pop aad jl adc and aas pop cmp mov mov lds ds push cmc cmc test xchg xchg mov in sbbl adc jno pop xor cmp sbb scas (bad) ss fsubr sahf sahf mov xchg mov jns cmp jmp sub jno add inc and jle aaa jno push fsubrs adc repz sar push aaa aas inc ljmp das pop pop inc inc div and addl sahf sahf mov mov enter adc lods sbb pop pop dec push lea mov bound xchg xchg aam pop xchg xchg stos stos imul dec and sub ljmp arpl ret inc pop aam sub daa fs add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test sbb fwait jnp jb in subl jl xor adc xor leave leave dec dec add data16 dec add inc cmp (bad) shlb addr16 mov in loopne and cmp div jge jmp sub jo adc push and fistpl cmpsl in mov cmp fwait mov arpl ja ffree leave fwait mov inc (bad) (bad) and addb in xor dec xor add jl sbb jp fbld test and popf xor xlat cmpsl cwtl xchg stc lods pushf pop pop bound cmp add ret or inc fsubr dec jo push je cmpb iret add js adc mov ret jns inc adc dec mov mov pop push mov mov clc (bad) dec js outsl jmp leave loope or and add je fisttp rcll ljmp repnz add pop pop pop repz xchg roll dec xor mov dec loop test cs lods mov popa ljmp mov cld mov es jmp jbe out pop pop mov push daa fcomp (bad) mov lahf cmp dec popf (bad) jmp cmp xor pop jecxz xlat xchg push push stos lds push push push lods into mov out mov insb sbb call dec add push pop cmc mov push xchg mov mov out mov (bad) jo and out sbb xchg js stos out and ficompl les add sbb and mov leave cmp bswap mov push cwtl xlat iret jns lods repnz (bad) int (bad) in fisttpll (bad) jne rorl das int in xchg sbb in je dec mov push in sub int add or adc push push inc pusha cmpsb cmp sbb addl loopne and mov push push ja dec or or jo lret ljmp xchg push shrl inc (bad) (bad) and addb repnz mov int addl and adc (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out ret ds test push push xor (bad) jae adc in addl xor adc xor dec into dec dec dec sbb cltd je mov mov push in in mov push mov xchg rcl sti ja jns cmp idivl jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) and add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos add out out and mov dec dec into into cmp ss gs mov or sub jae out sbb inc cmp xchg popa jl ret cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out mov test insl fwait push pop and cmpsl movsl adc and jbe hlt push sub cmp fcmove cmpsl mov enter adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb nop mov iret popa dec call popa sbb fucom xorl mov icebp mov pop mov mov dec xor sub sub ljmp fcomp arpl ret pop pop aam sub addr16 add dec mov mov mov pop push jecxz xor adc sub test jg (bad) insb aaa push ud1 xchg jg jl (bad) fwait cld hlt mov clc cld push ja popa popa inc icebp jne inc aas sub add je dec dec mov push in in sahf rorl mov xchg popf popf rcl jnp jns cmp pop jle lds xchg rclb addb test shrl repz out mov mov jno call and jg out xlat xchg and es mov int addl sbb push push movsl adc cmp dec push je cmpsb jb sti les outsl push sbb push push and xlat mul fdivr out xor sbb mov mov aaa jns mov jne scas in push push clc push jo cmp notb loope push pop fxch mov out cmp ds scas scas (bad) push push cmc cmc test std in xor dec lods nop stos lods pushf lods mov fdiv les mov popf xchg mov (bad) lahf xorb cwtl mov pop jg addl inc sbb adc mov mov push pop jo adc push and mov push push adc repz mov aam pop inc add mov xchg jbe inc add mov addb inc sbb xchg dec jns jae outsl jg sbb jne lods xchg push dec in ret mov or js xor xchg mov xchg stos stos out sub cmp pop mov je mov rcl inc add mov cmp add gs pop xor movsl jae (bad) test (bad) enter pusha push and xchg jns inc in shl cli xor xchg mov push (bad) cmp daa sahf out mov push push push nop nop mov aad imul or mov lds dec sbb jne in sbb pop or jmp mov lods arpl pusha mov jle scas mov and cwtl mov xor (bad) mov xor pop and popa (bad) call xor pop pop lea add (bad) loopne add int mov mov ljmp dec push add imul mov (bad) int3 mov and inc inc pushf movsb mov lret mov mov xchg ljmp movsb jecxz sub lahf adc xchg ret pop pop aam sub addr16 xchg and pop push push inc sbb push or and scas pop push jns jnp fcompp outsb cmp push push jp,pn fsts iret enter mov mov lahf mov add pusha jne add mov mov xchg inc pop xchg loopne mov (bad) jb (bad) mov mov fistpl adc scas (bad) push push cmp repnz xchg in mov mov push sti mov aam out mov xchg jp push sbb hlt fstl (bad) icebp sti mov addl lret fisubl scas les mov and push or sbbl pop sahf sahf insb or push jb fistpll adc dec pop rcl addr16 jnp (bad) imul jle rolb fmull mov adc fstpl jb fnop pushf lods jl ds in mov testb and out and sbbl out jne jns sti nop (bad) lcall movsb in xchg add pushf cli int cltd sub mov xlat cmp stos dec jae cmp je icebp dec adc xor test xchg (bad) pop pop adc mov adc push jne cmc fidivr xor push imul jne fwait push sti and inc jmp jecxz cmp inc call es lods or and das dec push push jge cld lahf and in cli cmpsl inc negl adc arpl xor rcrl mov xchg push rcrl cmc xchg data16 out and inc out lret mov cli push rorl mov mov ret int3 (bad) lock lods sbb not shlb ja rcl repz movsl ret sub push lods das dec test aad xchg mov cmpl push push aad shrl sub xchg bound pop outsb mov fistpll mov jo aad cs int sub inc adc inc pop pop pop inc dec mov popf test popf hlt adc and mov bound xlat xlat add xchg test add xor aaa sbb insl adc std jp cmpsl (bad) les dec xor adc (bad) popf loopne sahf jmp scas rcrl sti mov je in inc inc adc stos stos (bad) hlt adc pusha sbb jmp rolb mov adc xchg or xchg pop pop push pop ljmp mov scas call sahf (bad) push je pop sbb mov pop sbb sub addb or xchg xchg icebp xor and xchg loope sti sti fdivrl cmp add xchg sti sti mov (bad) push push in in sahf sahf mov (bad) mov (bad) pushl mov rcrb xchg pop sbb xchg inc mov adcb inc lret nop pop push adc nop stos adc and jnp jb scas dec scas sbb dec mov js (bad) lods (bad) lods ret push cmp xor movb mov mov int cmp aas repnz mov jecxz pop enter mov imul cmc dec cltd push jnp incb mov adc ljmp int3 mov add mov sbb (bad) in fstl adc lods lods out cmp ds scas scas (bad) loop mov inc aaa nop add adc cli jbe bound sub idivl lahf mov rolb cmpsb add je dec push popf add std push es pop and inc in sbb add lock div jge jmp sub jo adc push and bound jno add inc xchg cmpsb repnz cs and into jae push int mov cmpsb imul mov mov ds es outsl rcr arpl mov hlt fidivl pop push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and dec or xlat push inc sbb dec in sbb lds hlt scas (bad) ja push mov inc stos loop add int3 inc inc sarb lock and lret cmp mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or mov jg roll xchg out sub out sub pop int jno adc int3 cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg mov inc cmp inc cmp popf sub cmp inc rorl and cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas sbb adcl icebp icebp sbb in addl jge adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb add jecxz inc es mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo into adc push fcmovb movb orl (bad) psllq push add inc (bad) mov stc add iret das pop pop cmpsb inc (bad) xlat les addl repnz mov mov int (bad) popa pusha test push push and ret xchg adc (bad) std xor out push mov inc js xchg jmp adc pop fidiv mov jae mov xor ret ret leave leave ds mov or movsb (bad) (bad) call int3 inc push push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs jle cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg mov sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov mov xchg rcl push jnp jns cmp idivl jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int xorl (bad) sub lea xor and insl push push lea push pop xchg xchg mov xchg stos stos out out test sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test and mov popf sub cmp aaa sub popa cmpsb inc sbbl sub std push sbb cmp insl nop cmp sbb xchg mov jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add xchg hlt sbb push out xchg cmp add xor inc inc inc data16 mov call jg sahf add adc in (bad) (bad) sbb cmp xchg xchg mov xchg stos stos dec out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or mov ror stos lahf lret outsb and sub leave out mov loopne jle cmc xchg xchg repz sahf in add cmp xor sbb mov push scas outsl or sbb inc out repnz pop in sti sti pop aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc inc cmp cmp push mov xchg mov loope sub mov and scas inc adc xchg jecxz pop ds ss push and jecxz mov jnp in sbb mov popa add xchg jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop push out les movsl cltd lock add sbb jbe adc clc xchg sti push push imul sbb jl imul push add or es mov sbb jnp gs dec inc lock jmp je dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge sahf xor mov adc (bad) clc inc jge xchg push push pop test out ss sti mov inc jns xor fsub (bad) and loope aas pop push loope (bad) ss icebp lock into outsl (bad) or enter enter movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out jecxz push repnz sbb sbb sbb movsb mov adc out fsubr (bad) cli xchg fwait mov movsb push jo aaa jg adc (bad) int3 call pop push adc and mov and das jns int stos dec in aad cmp and add cmpsl mov dec dec add data16 dec dec mov push in in sahf sahf mov (bad) je sahf push sbb mov cmpb mov mov fucom clc (bad) jno xchg pusha pop push cmp fmuls das std rclb into fprem xchg stos xchg mov adc mov js inc mov cs int addl sbb push push movsl movsl mov (bad) pushf pop (bad) ljmp pop pop data16 std das sub pop adc xchg jb jb xor cld xchg hlt jge cmpsb fildl leave mov into dec jae add push cmp lods or mov xchg lea sub cltd cmp jno or mov add cmp add outsb jae or push push push push push nop nop mov aad imul ja data16 adc cmp repz inc or ljmp aad outsl and arpl jge test inc and in sbb aam or lea fsubrs popf insl pop cs loope mov adc mov sub leave imul aaa mov xchg xor sbb sbb adc sub and mov xor jmp push mov test sub insl and rolb int3 test adc mov and popa cltd fdivrl pushf out push nop aad fcmovbe call movsl xchg (bad) mov jl cmpsl popa pop or popa and es testl test xchg (bad) icebp sbb in sbbl nop mov leave cmpl call std rcrl cmp (bad) adc bound and loop dec xor mov bound (bad) or pop rcll aad fdivr test ret xchg push pop pop test cmpl loope dec xor inc call mov add das pop pop inc inc (bad) (bad) xor addb xchg pop or cmp inc adc jle sarb out stc stos icebp add adc outsl cmp mov inc inc push or and xchg fwait rcrl adc les insl and aam jle cmpsl push aad fstpl mov mov pop repz lock push in push dec lahf cmp ds scas scas (bad) push push cmc sub daa cmp xor imul repnz icebp lock mov into imul cmpsl clc icebp negl in cmp test and cli dec sbb jge hlt data16 jg enter mov inc inc xchg pop adc out rcr fistp xchg lret and fs or jmp adc std aaa aaa inc inc (bad) (bad) stc and ret push sub ficoml pop sbb mov and inc es push push jge cld lahf sbb in lds dec pusha popaw cmp xchg dec adc sti cmp inc adc xor cmp cld jg mov fnop inc add (bad) xor aad add xchg lock pusha int3 fs sbbb adc pop fcomp cmc pushf lods (bad) and insb add inc mov loopne mov xchg icebp pushf pushf loope or das sub xchg or stos test mov adc lret dec adc jae in dec push psllq sbb pop in rolb sub bound add jl mov enter xor fcoml adc popw bound dec fisttpl mov (bad) popa sbb mov sbb adc jns mov aam pop ss xor (bad) out (bad) in mov cwtl mov bound out jmp sbb pop mov cmpsb stc cmp lds cwtl int3 xchg enter loopne addl inc xchg loop ds xchg sti pop lods ret pop pop outsl mov in cmp and daa nop (bad) int3 mov roll mov (bad) xchg pop inc dec faddl dec rcr cmp arpl stos xor (bad) sbb imul and cltd in int mov test mov cltd stos lret aam mov cmp hlt adc arpl lods notl dec cs movsb lock ja div fldt inc fs jmp dec push mov daa loope sub out mov mov mov xchg (bad) xlat jno cmp andl (bad) adc call out inc imul (bad) lret (bad) or inc and xor jge stc jp and shrl cmp bound rorb xor jbe and mov and sub sub push add testb in push jmp sbbl cmpsb push mov aaa (bad) imul push es cmp mov jb mov (bad) xchg int3 fnsave test sbb or jecxz jbe adc cwtl repnz int push mov pushf cli into into cltd cli out mov xlat cmp stos jae jnp or ss pop pop pop call mov mov shrl test (bad) ljmp mov icebp xchg rcrl pop push jae lods xchg adc xchg sbb out stc add stc movsb sarl test jae mov mov pusha sbb sub inc sub dec pop pop jle negl movsb into into pop aas cs push push push repz hlt hlt cmp xchg imul push adc jno dec xor or mov fnop inc add (bad) xor jb inc pop sbb dec jne shlb inc inc or cwtl loopne xor inc test sbb add pop mov out mov pushf notl insb daa daa sub xchg (bad) or push push in in push pop (bad) adc cmp adc push mov cltd mov loopne,pn test mov imul cs and test lret jne stos pop insl sbb mov imul mov rcr mov add repz scas ror int3 push cs cmp mov mov xchg xchg les cld cld clc clc inc inc ret fwait cwtl int3 xchg call popa aas push enter lret pop lds popl inc xchg mov int xor xor inc icebp jmp mov outsl pop pop dec sahf cmp mov fmuls inc inc cs mov sub xor mov pop and stc pusha push jge xchg xchg push fwait (bad) ds fs xor adc xor leave leave dec divb xchg and aad cmpsl out cltd sub or dec inc jb (bad) mov fnstenv (bad) xchg fisub xchg sahf sbb xchg dec mov mov xchg adcl arpl movb jmp add xchg jge daa mov lds test rclb pop push clc cltd jecxz inc es mov int addl lret and mov hlt dec sub sub inc mov outsl aad mov lcall mov mov add movntq and clc mov sti pop aam loope adc loop es xor inc fdivrl data16 mov pusha test push push cmc cmc test xchg xchg icebp icebp sbb in addl push push ret outsl or pop mov adc or js jp iret insl les push and (bad) int jns xchg xor aas mov fucom icebp push negl push dec in into mov sub in je lcall test inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz test loop or or fisubrl sub adc enter mov add xor scas jle fcomps stos gs jge add mov out add loope mov pop pop (bad) enter (bad) sarl pop mov jb andl int3 inc inc push push or inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc lock int das (bad) xchg ss push push inc mov xchg sub (bad) ss push insb xor ja sahf sti aas aas cs jbe dec repnz dec jno popf daa jmp add sbb fcmovnu pop pop (bad) adc cmc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc push (bad) mov mov inc push int add push aam cmp add xchg das cmp ret hlt and enter addr16 jmp xor and mov pop in xchg xor jo lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test sub lret dec js sub xchg dec pop jp sbb loope add inc and mov test jne adc aam mov in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf nopl repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) sbb mov sub js aaa out cmpb xlat mov add in movsb cmp lret movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test push stc xor inc frstor inc (bad) ds adc cmpsb sbb mov pop adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods add (bad) lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl jge (bad) or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc in dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor mov adc sub adc jo lcall pop pop sub lods adc fadds add inc dec insl insb pop mov out inc cmp ds sub push or test insb xchg icebp icebp push sbb in subl test pop adc xor leave xchg dec push add je dec dec mov push in in popf sahf mov test rcl jp jns fstpt div jl jmp leave sub adc and jle popa jno push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc adc sub pop pop inc inc (bad) (bad) daa and and pop inc and repnz mov int mov lcall movsl ja rol pushf pop pop (bad) bound cmp push mov stos stos push out daa and sub sub ljmp fsubs ret pop pop sub cwtl addr16 std mov inc xchg xchg pop mov sbb lds ds push push push and push push (bad) test mov icebp icebp sbb in in subl add jl xor adc xor leave enter add je mov cmp lock sub and and sbb and jns push test fadds lcall jo outsl out push sbb cmp xor push adc aad leave inc sub mov push aaa fstpt (bad) push mov sbb (bad) test mov inc fwait je repnz clc mov or mov pop jmp jmp dec idivl add xor pop je shrl push repz or add inc mov (bad) mov rcrl push mov mov fs cld push int3 xchg rcrb addr16 jle ret xchg sbb daa lods pop mov dec lret inc jp js icebp mov pause push pop jo (bad) adc stos dec or mov pop (bad) push xor sbb pusha jg mov inc cs fstpl or (bad) adc sbb pop pop pop fucomi movb js cmc cli ljmp fstl push outsl movsb decb xchg aaa jge xor cmp jge xchg and adc mov xlat popf mov adc fsub jo pop xchg cli inc ljmp jne cmp xchg cmp xor or push push jg adc sub mov lcall xchg pop jns xor jmp or inc bound add gs dec cmp loope pop jb out add ds mov pop mov test jnp push stos jmp in ret jns pop cs flds xor mov test inc push (bad) xor je and (bad) mov fmull mov aam pop (bad) xlat jmp jns jno idivl jnp jo dec jb jecxz adc outsb cmp jle sub arpl xchg adc inc adc sahf aaa aaa mov popl add push jbe cwtl ret ret test addb inc leave mov sarl cmpsb addl imul push and pop xchg iret pop pop add xchg push adc pop pop clc stos stos or xor xor add lret ljmp sub outsb ds cmp sub ficoml (bad) xchg pop pop dec dec leave leave sbb call out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov icebp in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp xchg mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in fmul add mov out repnz pop push push cmpsb jecxz pop dec sahf imul cltd sub dec jno mov ret addl mov outsl sub inc jns add dec aam push adcl push push mov daa sbb mov test add inc or sub mov das or test mov xor add fistl xor stos mov cwtl add push push outsl or push push sbb sbb jo inc fstp add ljmp (bad) mov mov and dec mov cmp xlat xlat or lea dec dec les aad xor xchg xchg icebp icebp cwtl xchg push imul xor adc xor leave dec dec add jns je out mov push in in pop lahf mov push xchg sbb jnp jns cmp idivl jmp test jo xchg push movsl cmpsb cmp js jle orl jnp (bad) repz mov inc xchg add scas sub inc inc (bad) (bad) and addb repnz dec mov mov or add and dec lds (bad) je pop or dec (bad) aam ja jl inc call arpl xchg push sub mov lcall pop pop sbb adc lea add push or or daa insl cs stc shrb (bad) xchg ds in scas imul test dec jae (bad) mov movsb inc mov imul arpl pop mov das push mov lock xor rcrl cmpsb in imul xor jb pop (bad) imull sub inc mov mov jg (bad) mov jo nop out push mov fstpt add push push add lahf mov cwtl jp sub aaa cli ret or rcrb mov ret andl repnz ds xor add incl shlb movsl cmp scas lds jb notb dec cmp or mov pop clc shrl adc lret and imul jmp rcll mov popf pop mov dec pop lock int int3 mov pop push inc dec add loopne out or in aad daa inc jae ror repnz xorb or daa mov aad movsl insl stos cmp aas push dec aam push scas xchg sbb xor cs loopne sbb (bad) dec add sub (bad) arpl fdivrl sbb add outsl fbld xchg jne cmp repnz sub dec sarl aaa enter add xchg test sbb jo adc cmc das loope inc es hlt cld dec stos push inc jbe sbb lahf test jne dec fwait fwait push lret xor dec lods insl subb mov push jg scas bound sub ljmp stos inc arpl minps mov sub or sub mov addr16 pusha cmp cs rorb out cmpsb insb ds sbb (bad) push and jae inc loope icebp (bad) xchg fsub adc or fs push xor mov ds lret outsb push push sbbl add faddp mov int jno lret mov sub pop jb jmp jns std jae jge jmp pop pop pop jo pop and and jle jno push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov mov pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl (bad) mov lds cmp xchg mov and sbb xchg xchg cmp lret mov into into cmp ss gs cmp xchg fcmovbe aad stc xchg mov inc pusha pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne cli cli xor adc lea cmp dec dec ja inc inc (bad) or push push push mov cmp iret lock sbbl push in pop data16 push in in push mov push (bad) (bad) scas or add mov pop dec dec xchg inc dec out test popa popa xchg dec dec add push outsl outsl pop pop xchg xchg pop in pop pop aaa adc ds jmp adc lock jge gs xchg xor sbb sbb dec imul inc sbb xchg xchg xchg and dec add jmp add sub jecxz add les xor push push adc pop pop dec dec dec inc addl arpl stos xchg push pop pop pop jp add bound pop add cs or mov shrb or jmp pop imul xchg sub xchg and imul dec dec add inc inc push push cld pushf sbb add and sub pop push scas jbe push in mov pusha pusha xchg mov push leave leave in dec cs add mov pop sub inc inc push adc dec sub inc pusha pusha stc stc stos stos cmp inc enter roll mov add outsl outsl jbe out pop pop mov mov ja adc daa lcall mov movsb cmp push xor testl scas scas jge add xor xchg xchg add sbb fcmovu or add sbb fcmovu fidivrl into inc clc clc pop pop mov dec mov cld (bad) pop popf and sub gs mov xchg adc rcr dec dec xchg xchg nop nop push push add jo sub cmc ret cli cli pop pop mov test int enter fcomp xchg xchg mov mov imul js dec dec pop pop sti dec mov and xor sti sbb xor push pop pop sbb jge jmp cs jmp mov and or mov lret jnp repz std std add pop pop mov fcomip inc xchg lcall inc inc es sub pop pop sbb (bad) notl cli stos sbb push ja xchg pushf pushf pop pop bound cmp xor xchg scas add cmp pop out and cmp mov cmp ss gs (bad) jmp adc xchg xchg adc movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne rorl sbb rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop icebp icebp xchg xchg iret imul or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg iret iret add out in adc aam loope cld add sbb clc inc dec in adc jne hlt add cwtl jno cmp pop jmp aad or lods dec jg lret sub ljmp fsubs ret ret pop pop aam lods das addr16 and (bad) add ds cmp lods xchg push test push and sub jp sub mov push push out sbb addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs (bad) sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl add loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl add mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg fs pop aas out pop push sub sub ljmp fcomp arpl ret pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and mov dec dec into into cmp ss gs mov or movsb (bad) (bad) lock pusha int3 int3 inc inc push push or inc inc cwtl cwtl loopne dec dec or mov xchg daa daa xor rcl xor dec dec ja inc inc (bad) or push push push push push push nop nop mov aad imul cmpsl cmpsl div or push push in in push mov out repnz pop in sti sti aas aas cs sbb cltd cltd cltd cltd pop pop dec dec xchg or addl fcoml adc cmc dec dec std std insl insl sbb outsl pop pop xchg xchg jmp push pop pop lea js (bad) (bad) and inc inc mov xchg xor sbb sbb adc sub loope add es cld cld clc clc inc inc adc cli jne add fwait fwait xchg xchg cmp (bad) jmp xor dec jg sub sub ljmp lcall pop pop aam sub addr16 add dec mov mov out cmp ds scas scas (bad) push push cmc cmc test xchg xchg icebp icebp sbb in addl xor adc xor leave leave dec dec add data16 dec dec mov push in in sahf sahf mov xchg rcl jnp jns cmp div jge jmp sub jo adc push and mov push push lods lods lahf lahf (bad) (bad) jnp repz std std aaa aaa inc inc (bad) (bad) stc stc add das das pop pop inc inc (bad) (bad) and addb repnz mov int addl sbb push push movsl movsl mov (bad) pushf pop pop bound cmp mov xchg stos stos out out and out pop push insl push out cmp (bad) mov or add test add test mov test pushl cmp pop test jmp test test push test cmp xor test cmp pop cmp test ret test test test inc cmp rdtsc test cmp jne test pop test add test push test ret lock cmp sbb xchg pop xchg loop jge sbbb push push std and bound mov fimull ret data16 test cmp test test call test jmp test pop test clc adc test mov mov test inc cmp inc test inc test add test test mov test test call test push cmp cmp test jne mov cmp add cmp mov cmp add cmp call test jmp test pop test push test push cmp push cmp mov cmp call test pop test cmp jl test mov test sub cmp mov cmp sub cmp call test mov test inc test inc test inc cmp inc cmp inc cmp inc test inc test inc test inc test inc cmp push cmp mov cmp add test push test push test sub test sub cmp push cmp call cmp jmp test pop test test inc test mov cmp xor cmp mov cmp cmp jne test mov test test sub test pushl cmp pop cmp call cmp or test test jne test jmp test mov addr16 imul daa cmpsb sub dec mov loopne jge stos fmuls (bad) int lea jnp addr16 ja dec jb dec inc xchg popa outsl inc rcll test adcl mov and jns dec test or test inc rcrl mov int3 mov enter adc rclb pushf add movsb call inc leave aaa mov add ljmp xchg fildl jp and das mov flds or sbb lods shlb mov arpl fcomip cmp pop xlat xchg sbb rcl (bad) lock cmp sbb xchg pop xchg loop jge sbbb push push std and bound mov fimull jp addr16 imul daa cmpsb sub ret imul or cmp pushl cmp pop test mov test mov cmp push mov test mov cmp push test pop test add test cmp jne test push test pop cmp add test cmp jne test pop test mov test mov cmp mov cmp add cmp mov cmp mov test add cmp mov test add test lods test test je test add cmp mov test cmp jne cmp mov test cmp jne test mov test push test pop test push cmp push test push cmp push test push test push test push test push test call cmp add test ret inc fwait dec mov loopne jge stos fmuls (bad) int lea jnp addr16 ja dec jb dec inc xchg popa outsl inc rcll test adcl mov and jns dec test or test inc rcrl mov int3 mov enter adc rclb pushf add movsb call inc leave aaa mov add ljmp xchg fildl jp and das mov flds or sbb lods shlb mov arpl fcomip cmp pop xlat xchg sbb rcl (bad) call lods shlb mov arpl push fcomip cmp pop xlat xchg sbb rcl (bad) addl (bad) outsl lahf mov adcl test imulb ja xchg faddl cli scas xor repnz out pushl inc mul mov inc (bad) std test and in inc shl and (bad) mov jmp inc sar mov aam mov in in inc rol popf adc rcr inc iret call adc loope lahf test cmp sbb xchg pop xchg loop jge sbbb push push std and bound mov fimull jp addr16 imul daa cmpsb sub dec mov loopne jge stos fmuls (bad) int lea jnp addr16 ja dec jb dec inc xchg popa outsl inc rcll test adcl mov and jns dec test or test inc rcrl mov int3 mov enter adc rclb pushf add movsb call inc leave aaa mov add ljmp xchg fildl jp and das mov flds or sbb lods shlb mov arpl fcomip cmp pop xlat xchg sbb rcl (bad) lock cmp sbb xchg pop xchg loop jge sbbb push push std and bound mov fimull jp addr16 imul daa cmpsb sub dec mov loopne jge stos fmuls (bad) int lea jnp addr16 ja dec jb dec inc xchg popa outsl inc rcll test adcl mov and jns dec test or test inc rcrl mov int3 mov enter adc rclb pushf add movsb call inc leave aaa mov add ljmp xchg fildl jp and das mov flds or sbb lods shlb mov arpl fcomip cmp pop xlat xchg sbb rcl (bad) lock cmp sbb xchg pop xchg loop jge sbbb push push std and bound mov fimull jp addr16 imul daa cmpsb sub aam (bad) incl and test mov test inc test mov test mov test ret inc fwait dec mov loopne jge stos fmuls (bad) int lea jnp addr16 dec add sbb cmp cltd sub pop sub mov xchg mov push mov xorb (bad) jecxz or lret rolb jbe test or xor in jo js xchg outsl jmp je stos jl repz pop sbb mov fsubl xor push sbb inc mov mov loopne lock test fucomi mov lds mov adc out scas insb icebp pusha pop in ficomp and out push add xor mov jb add xor inc mov stc mov lret adc jnp arpl aas mov xor add sbb nop inc jne jg push jnp mov or movsl inc ret jmp push cmp ss add sbb cmp cltd sub jo dec dec push push xchg mov notl push inc xorb (bad) jecxz pop (bad) lret rolb jbe test or xor in jo js xchg outsl jmp je jl repz popf pop sbb mov fsubl xor push and subl mov fucom fdiv cmpsl test fucomi mov mov adc out scas insb icebp pop in ficomp (bad) and out push add pop sarl jb add xor inc mov stc mov sbb adc jnp pop arpl aas mov xor jle aaa sbb inc jne jg or and gs jmp push cmp ss add imul push cltd sub pop sub dec dec push push xchg mov notl push inc xorb (bad) jecxz or lret (bad) jbe test cmp mov sub xchg outsl jmp je stos jl repz popf pop sbb dec pop fsubl xor mov and subl mov mov loopne lock test call adc inc lods out scas insb icebp pusha pop in cltd lods sub adc out push add xor mov jb add xor inc mov mov lret cmp mov mov or jnp pop arpl aas mov xor jle aaa sbb nop inc jne mov mov or movsl inc gs jmp push cmp ss add imul push cltd sub sub mov xchg mov notl push inc es xchg (bad) jecxz or lret rolb jbe test cmp call in sbb and xor sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb fcoml cmp push test xor mov cmp inc jbe push outsl adc fnsave pop cmp mov sbb scas mov sub cmp (bad) adc xor mov aad xor aas mov xor dec movsb pop mov and sbb and cmp mov int lret cmp sub cmp mov int3 cmp enter in push cmp int xor pop xchg mov cmp cmp cmp mov sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in sbb in cmpb jg cmp mov int xor mov int xor inc xor mov mov or mov mov cmp mov ljmp mov int3 cmp mov dec ret xor mov jmp scas xor sub cmp mov faddl mov xor ja inc cld cmp cmp dec pushl pop int xor lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret mov dec inc lret test cmp pop mov mov lea outsl mov jle sub pop int3 mov (bad) nop int add inc mov mov leave rcrb push arpl gs jle xor cmpsl and sbb lret cmp repnz rolb int outsl push dec cmp jns sub rcr push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push inc jbe push mov shll cli test push mov enter mov mov xchg int outsl push mov mov mov cwtl int outsl push xchg ds mov leave shr xchg int outsl push mov xor mov leave sarb push (bad) ds mov leave rclb push sarl xor mov leave (bad) ja int outsl push (bad) ds mov loopne xor cli icebp shl mov pop scas mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov mov int xor mov or (bad) fidivrl xor mov mov int xor mov mov pop loope xor mov int xor lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr lods fisubr es arpl js cmp mov pop sarl xor mov xor notb adc mov inc int mov iret cmp mov (bad) cmp inc int mov iret cmp mov pop sarl xor js aaa xor mov fnstcw xor mov int3 cmp mov pop and int jmp or xor int push cmp cmp mov xor aaa mov dec cmp mull xor mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov lret mov mov cmp lea ja cmc add dec or xor cli sarl mov and mov mov cld sub mov int aaa aad push aaa xlat int xor testl mov aad insl mov loop mov repz xchg push mov leave les inc cwtl imul int xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov aad push xor mov mov xor inc xor cmc mov cli (bad) clc push push std cmp xor das mov divb in int (bad) ds arpl inc dec and xor pop xor inc gs xor pop xor inc std mov in mov mov mov mov cmp aaa arpl mov push xor out cltd (bad) in or neg insb or scas inc jnp jl inc cmp pop mov ss mov mov xor imul inc cmp xor hlt testl lock and mov and xor cmp mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov xor sbb inc xor lret jle push or lret jle push push sbb int xor mov dec cmp mov cmpsl cmp cmpsl cmp lret inc xchg xor mov int3 xor es lret daa xor mov mov mov xor lret movsbl (bad) mov xor lret jl out and mov mov pop sub vcvtdq2pd xorb xchg cmp inc xor mov cmp mov cltd outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl popa jmp outsl mov mov pop (bad) lret (bad) xor call cmp dec ret xor mov into sub xor lret aas mov inc sbb or jle push mov leave push pop inc cwtl movzbl xor xchg ret cmp ds dec xor int pop pushl mov int lret mov mov or sub xor mov jp xor int xor and cmp mov ret ror cmp mov inc insb cmp cmpsl inc jle jns cmp dec popa fsubl cmp es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lods es mov lret les xor lcall cmp cmp cmp aaa xor jns jbe mov jmp insb cmp cmpsl dec ret xor mov inc jno flds and movnti xchg int cmp adc xor xor xor das ss push push sahf mov mov or call ret mov cmp stos jb cmp cmp inc je js cmp mov int xor mov (bad) mov dec ror xor lcall cmp cmp cmp aaa xor push and push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll push pop shll cmp inc (bad) mov leave push mov cmp xor xor lea jmp inc int mov (bad) cmp jl cmp xor cmp inc xor movsl int outsl push test and int (bad) in xor xor mov int xor mov lcall mov jge xor mov lds push mov insl mov int xor fcomp cmp inc xor aad mov ds xorl jns xor inc inc in add xor add ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl ja popl int xor es xor mov xor xor mov or call leave mov mov in mov ss xor mov int xor mov or call lds xor and xor mov lcall push fsubrl xor bswap cmp mov js xor mov or call int insl aad push adc xor mov inc lcall xor aas fcompl (bad) cmp inc xor xor mov and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml rcr push and fcoml jbe push dec and dec xor mov mov xor mov mov int frstor sub mov mov ret xor iret cmpsl cmp cmpsl cmp mov (bad) inc pop mov mov cmp repnz rol cmpsl int outsl push sbb lret jle xor xor inc sbb xlat and cmp lret (bad) in ss xor mov mov les inc pop xchg xor mov int xor stos fidivrl xor inc xor out mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov popf imul fdivrl xor call xor mov int mov lret cmp rcr xor inc xor xor inc lret out inc insb cmp jb,pt xor int mov cmp lret (bad) cmp out xor push adc xor dec xor xlat dec cmp inc inc in cmpb rcl xor inc xor xor jno cmp inc xor xor mov dec mov mov int3 cmp mov int fcompl cmp sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb xchg sbb mov mov popf les cmp stos xor int cmp inc cmp mov int cmc mov xchg xor int jmp and xor mov int3 cmp mov int or cmp mov int cmp mov xor mov xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor lret inc xor or int cmc mov mov mov int cmp dec cmp mov leave cmp test cmp lret mov fildl lock inc shrb cmp mov int3 cmp lret (bad) push xor mov xor mov int3 cmp das int3 cmp mov int pop mov jp xor int (bad) sub cmp mov xor pop mov cmc repnz xor daa int3 cmp mov int3 cmp mov mov push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop shlb push pop xlat leave cmp xor or xor mov xor lret cmp xor or xor mov xor lret (bad) xor int int ret inc xor mov int mov xor lret mov xor mov mov les inc pop xchg xor ds dec xor int pop pushl mov or xor inc inc mov xlat iret cmp xor or xor mov lds xor lret aas inc pop scas xor mov add sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti jno cmc sti ss xor or xor mov (bad) inc pop xchg xor inc xor pop mov inc pusha xchg fildl mov orl mov std xor int xchg cmpsl int xor (bad) fnsave and cmpsb fnstcw xor mov stos mov mov mov mov add lret aad dec sti aas mov hlt mov int ret inc inc std mov mov imul pop inc int xor mov int xor cmpsl int3 cmp js ds js (bad) jae int insl push test rep cmp cmp pushf rcl mov mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov stc mov xor aaa mov int xor or aaa mov call mov jg cmp mov add mov push xor push xor xor xor xor push dec cmp mov inc jle cmp cmp inc jbe push stos sub push xor mov mov int pop mov and lret push xor aad push xor inc cwtl jae jns inc cmp xor insl lret cmp push sbb xor push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and ficoml aam push and mov aad imul cmpl gs int arpl imul jle mov inc arpl mov inc jle xor ja jge cmp inc mov mov mov lret inc lds cmpsl cmp cmpsl cmp cmpsl cmp int jne xor or pop mov enter int arpl ja inc cwtl imul int xor push jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test xor cmp cld repnz aaa (bad) xor jle pop mov int fcmovu inc aas cmp dec ret sbb (bad) pop repnz and ficom aaa (bad) aas cmp int hlt mov scas cmp mov or push js xor mov xor xor aad push xor mov cwtl jae cmp les int mov mov int mov int xor mov int xor mov daa cmp dec pop cmp jo adc int fnsave cmp xor xor mov mov shrb cli aaa push and jb mov std jb mov cmp pop cmp mov lds xchg or xor int cmp jle rol jns sbb dec int xor fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr push fisubr mov mov cmp fwait push xor jns insl lret ds inc jp xor and cmp int3 dec cs aas fcoml sarb in mov inc xor aaa mov xor mov mov cmp cmpsl cmp fwait push xor sti es cmp lret iret (bad) xor int lret add jl and xchg dec sarb insl inc daa and sti ret std dec cli aaa aas cmp push mov xor mov ret in and and xor xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out pop xchg out lahf mov cmp (bad) mov xchg int3 cmp (bad) int lret cmp inc xor mov mov int fdivl cmp ret xchg (bad) int xor jbe add mov (bad) mov leave xorl xor xor cmp fistpll cwtl daa add inc adc mov test xor xchg or lds inc mov cmp out pushf xor int hlt mov int outsb xor mov (bad) int3 cmp mov int3 cmp fsin mov cmp cmp stos mov lods dec cli aaa cmp cmp pop dec cli aaa cmp cmp lods cmp ss add int xor and cmp mov sbb int sub (bad) pop fsubrl cmp fwait jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp pop adc jmp cmp mov loope xor inc int push xor pop xor int out flds mov iret mov fwait int3 cmp mov stc cmp push add lret (bad) xor ljmp push mov jne xor out aas xor fwait inc jbe mov nop daa mov mov or out ss fdivrl aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) dec aas leave (bad) xor xor ret mov xor push or cmp or std out enter dec aaa ss mov cli xor pop xor jl adc or jp jl or decb ds mov aas xor stos (bad) jno sti jmp mov xor mov cmpsl (bad) lret cmp fwait leave std ss mov (bad) and lret pop push out mov dec js mov rcr push xor mov cs xor cmpsb int xor mov inc jae ss mov mov jne xor aas lret aas adc loop inc mov or mov ds enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter (bad) lret pop pop ror sarl fidivrl dec js test in lret pop inc shrl rcrl lret lahf pop push fistpl pop pop repnz pop int cmp cmp (bad) lret dec jns mov push inc mov xor mov int3 mov cmp je (bad) lret insb inc (bad) mov dec inc fisub dec dec mov xor cltd push push aam push inc sarl cmp jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz jbe repnz mov dec arpl test jp sahf pop push lret movsb push pop mov xor jmp dec pop (bad) mov push inc fisubrl lret dec jbe test inc ficompl pop jo int lods pop xor jnp (bad) dec push rorl cmp cmc sub lret jp shll insl pop int dec push roll inc xor mov fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and fsubrs and ror inc orl mov push inc fisubrl lret dec jb mov pop dec lret cltd push inc fisubrl lret dec data16 pop dec lret cltd push inc fisubrl lret pop inc cld mov pop jns mov (bad) rolb push pop fsubrl imul push push (bad) int dec push xor jb mov js fldt pop inc int3 int mov xor jbe test inc ficompl dec inc call xor jno scas dec push in test gs pop push int3 mov je cli mov inc mov int add stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc sidtl stc lgdtl fmul inc mov lret push lret movsb dec push out mov dec xor inc fwait push inc lret mov push inc fisubrl roll xor jns lods pop jns scas dec push int jp push imul lret push inc lret mov push pop fmull cmp cmp mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec rorl xor (bad) fisub push fnstsw push inc mov xor fisubrl pop lret test pop int pop push mov xor popf dec pop fmull inc mov xor lret popf dec pop sarb push push int3 mov (bad) lret pop push iret int sbb les mov pop jno scas dec push cli mov sarl int pop inc fimull cmp cmp (bad) lret push inc fimull shll xor jbe mov push push shrl (bad) lret js fisubrl push fdivrl inc bound int cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc cltd adc outsl xor out int xor inc mov or mov xor lret mov fimull inc lret test bound xor fisubr cmp mov movsl pop pop rorl dec push call xor jb mov imul push shrb out lret pop inc shlb inc shrb shrl xor jb mov push frstor test popa fisubl push bound int xor enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter and (bad) cmp push xor jp in jle int dec adc shrb dec cmp lcall shr push adc lret test push aad pop inc xchg out insb data16 push pop xchg (bad) xor xchg lahf lock testl pop inc ficoml push inc shrb push push sarb dec inc fisubl dec pop shlb je fsubrl aad inc out ss call test pop xchg lahf pop push call in push dec hlt test sbb xor pop xchg out imul (bad) xor movsl push sbb mov shrl xor xor cmp cmp inc int xor inc xor xor imul xor int frstor lods dec push xchg test push or jecxz xor imul lods push push xchg test push mov xor lret pop shrl (bad) fadds imul mov jle mov jnp mov call dec bswap rcrl dec xor ror xchg push xor inc test shrl les inc and lret cmp inc in pop xor sbb fucomip cmp sub push std mov pop sub inc mov or insb out sti lods neg inc repnz adc mov inc lret add roll xor dec sbb cmp (bad) das xor lahf into in clc mov sub js je rcrb aas sahf push in pop xor jl and pop fadds cltd scas cld xchg lds lods imul and jp mov scas mov inc push and lahf push outsl aas adc push push repnz popf add (bad) int3 lret (bad) xchg (bad) mov daa lods aad dec jb mov std mov ficomp rolb xchg jne sbb jo sbb push lock push dec sbb inc loopne push xchg sbb mov roll mov ret sbb mov bound int3 push mov inc mov mov inc adc push sbb gs rclb sti (bad) jne fs pop inc dec pop aaa push sub lods push dec jnp test imul movsb pop notl push popa fwait (bad) nop ss mov fdivl xchg jecxz mov mov dec xchg mov cmp stc jg shlb mov test scas add sub mov dec mov insl loope movsl scas inc (bad) jne imul scas cmpsb js dec mov push mov inc sub into rcll sbb and jg cltd data16 mov xor cmp add push adc sub (bad) lods adcl jle dec sub pop and mov pop mov cmpsb mov adc ljmp cwtl pop mov sub sub in movsb mov mov push test (bad) aam popf out xor roll xor and in cmp movsl pop xchg push nop sbb and sbb push mov mov dec das (bad) mov cmp out lret adc or xor test (bad) or jb mov divb in cmp shrb hlt loopne cs pop imul mov pop das andb inc jecxz (bad) icebp int mov pop sbb mov bound pushf xchg out cmp in test into dec gs mov ret out (bad) movsb inc lret pusha inc or dec loopne mov or xor fiadd push push or aad mulb mov pop dec jg xchg cmp jne lods out (bad) inc mov adc mov clc lock dec movsl xchg imull jg xchg inc (bad) jbe mov pop pusha pop xchg push insb cltd enter dec dec mov aam daa (bad) lret nop cmp xchg and popf dec adc or pop mov (bad) aaa jmp in loopne iret xchg je imul add sbb fisttp pop js lea sbb fidiv popa je rep pop (bad) test jle jmp int bound sub shrl insl xchg in scas dec ds push cmp enter push push xor jae xchg mov in mov jecxz icebp iret aas pop fdivrl ljmp (bad) lods adc sahf dec push xchg mov lcall aad inc inc ret das icebp (bad) mov mov mov pop stc (bad) aam inc dec inc sbb outsb fs sub incb adc int out lar out popa in jge and imul aad push xchg dec les mov cmp mov rcrl ds fwait mov pop insb rolb pop push inc lock pusha mov inc mov jb addr16 adc push and cli mov cld fistpll and jmp ret iret insb adc adc test jns mov xchg inc inc mov rol pop fld aaa mov cli data16 (bad) ljmp repnz je (bad) je cmp imul push cmpsb jg cmp jae ss loope (bad) ficompl cwtl sbb xchg pop outsl sub dec or leave mov cmp or sub pushf les xor jno and outsl insb push ss lret jp fwait dec leave dec ja out pop mov mov les ds out sub mov je adc lea xor sti (bad) out daa cmp mov mov xchg mov test lods fimull iret and dec mov jge sarl jns vpacksswb add lcall mov sarl jp aaa push loope and adc mov stos lods outsb sbb mov out jmp cmc jne std fistp (bad) data16 pop into and push pop and arpl (bad) dec shll int3 imul dec sub mov add out mov xchg jl jno mov xor or out stos mov xchg repz jmp cmc out adc fnstcw mov (bad) jns stos adc xchg mov xchg iret sub jecxz add lahf aas inc or sub fwait jle push rorl mov int3 outsb inc pop rcrb adc pavgb movsb push inc xor mov bound pop push push (bad) pop (bad) lock add pop xchg jnp das iret push ljmp cmp faddl mov push mov nop cltd xchg cmp pusha xchg xorl sbb loop jb test fs stos and pushf adc push xchg inc addr16 fiaddl out and add mov lods or sub mov es rcll (bad) lret sub pusha sbb stc dec pop mov aas sub xor mov sbb or and popa cmp dec xor inc and sbb inc xor pop mov push test lahf insb sub dec dec mov (bad) dec repz dec xchg and icebp inc push inc sub mov or push testb xchg mov rorb ljmp jo cmp or (bad) push add rep outsl test cwtl add xor cmc (bad) xchg and mov leave loop add jbe lds adc push cmp frstor dec cmp in sbb pop mov jb adc rclb inc lea stc sub jecxz (bad) mov mov mov pop sti shlb popf jp outsl jb fst mov or and jecxz adc popa cmp dec mov and sbb and pop stc mov push es inc scas push (bad) (bad) (bad) test fisttpll mov arpl sub cld lock inc cmp fwait and and call xchg add mov lods loopne xor dec mov aas sbb adc xorb rcrl fs roll xor jnp inc xor mov stos mov inc or mov loop dec out lds nop insl (bad) bound rol mov and adc (bad) xchg dec ficoml inc xchg add or push sub mov xor dec (bad) adc pop mov loope add lcall out daa in sub rcrb stos sub dec stos mov fsubrl xchg jb jecxz out imul jnp (bad) jbe xchg dec dec dec jae jmp les loopne test js ljmp and jo push popf lods adc mov (bad) mov ret push xor pusha (bad) push pushf sbb mov movsb push fsubr cmp push mov leave lret pop icebp imul in sub and addr16 subl shll mov repz sub cs inc int clc sub leave mov cmp aad push or pop ds xchg inc mov jmp std jb ss shll mov cmpl ret push add es pop popa mov (bad) mov pop lret dec mov cli mov into dec imulb push loopne ret loop nop mov jmp cmp jg clc iret out jecxz rcr mov fcmove (bad) mov push in sbb mov mov mov adc popf fs div or test sub pushf rcrb and ljmp mov movsb or push (bad) jne lret jns aaa imul mov test lcall sub hlt rolb fidivr and mov mov sbbb push cwtl (bad) mov pop adc add xor lret mov mov sbb xchg inc pop or xchg lods cmp sub pop fidivrl sbb or lods mov icebp scas fs push out sub notb outsb push adc or xlat push clc dec lock pop lods aam scas xchg jno inc int3 sahf sarl rorl push pop pop inc and mov push xchg mov arpl fildl js dec jne push mov sub add cmpsl insb pushf inc pusha lods std (bad) in add jle es out out xor and (bad) jb mov inc mov push nop enter cmc mov mov push scas clc jns xchg mov dec fsubrp push xor cmp test leave in pop xor add imul xchg loope stos inc les loopne jmp fldcw sbb das lods xchg mov out shr cmp aam cmp xlat jne out test ret jns lcall push sti xchg mov sahf mov cmp sub daa mov ret inc ret cli add cmp sarb aas pusha iret call scas xchg add leave adc pop push ljmp sub out jns sbb rcl adc dec dec adc jmp inc cmpsl mov int xchg (bad) fdivrl lds insl add jp push sbb sbb xor cmp aam popf cmp arpl gs push adc or lret pop cmpsb cmp cmp mov dec add bts in scas clc test jecxz (bad) inc (bad) lock xor rcrl mov je in bound out mov mov iret in (bad) mov dec jo ret outsl cmp ret cld pop outsb mov mov frstor rcl sbb mov insb daa adc les jne cmp and or insb mov add push jno xchg icebp call lahf add (bad) mov out test add movsl aam out mov or pop xor dec fwait inc int3 nop pushf xlat mov cs sbb sbb inc cmc fs add lock mov fcmovnu jg jmp cmp mov es enter inc in stos fistp in sub jle insl andb cmpsb ret push bnd mov mov pop popa dec lods sbb cmp in xor (bad) cmc stos xor lcall lret dec clc push popf push or push pop repz sahf mov iret les jb mov mov aas (bad) test cmpl rcl sub sub pop mov jecxz in add out add lds icebp push or ret sub lods fidivrl in pop iret dec sar imul fisttp ret mov stos xor xor testl push adc int3 sub stos mov pop or or sub and sub xor push cmpsl jne adc ret push inc in inc nop adc sub out test lret push pop pmullw shlb aaa pop pop sti scas std sbb mov icebp popf (bad) jge out je or and out pop jmp movsl xchg (bad) fisub pusha out pusha cmp mov push sub mov push in cli pop xchg and daa int cmp xchg and ret xor jae add add hlt dec cmp sahf sub adc cmp dec add xchg add pop ds scas jecxz aaa xor std inc das xchg inc pop arpl push aas xor lods and addb push push inc repz jns jle dec out bound and int inc or or xor js icebp enter ret lret xchg jo lods sub (bad) mov es call mov cld mov fcoml iret mov sbb or xchg pop jo out cmpsb mov movsl mov test sub add dec popf shll dec or sub subl pushf aad (bad) jmp mov inc mull notb xchg xor shll pushf js outsb jno fmul push jns mov pop mov loop adc sarb fsubs mov xor push xor and push call or negb fabs in leave test ret fisttpl lret (bad) pop (bad) sti sub inc adc mov lock aaa mov sub repz test pop call sti pushf jge out and jbe sbb jno adc push jg mulb pop xchg cmpsl arpl add xor xor mov inc mov test push inc cmp add push push mov cld xor cwtl mov mov popa cmpsb iret ret and xchg sub push xchg aad inc fadd jo pop fadd repnz scas ds insb xchg sbb xchg pop pop cwtl das in mov jg lds insl push pop and fcomip stc mov mov ss xor out sub aad rcrl sub imul aaa push fldt jno loop popa imul jne xchg inc ret dec jb jmp lcall cmp mov call mov stos push outsl mov icebp lea aam mov stos cmp adc psadbw mov pop clc jg pop jecxz xor sbb arpl mov or jle cld cmpsl add mov add mov or mov fdiv rcll imul pop repz call cmp test es xor cmpb sbb popa (bad) push enter push push pushf (bad) xchg aaa xlat pop repnz popf mov jae inc into lahf ret mov xchg stc cs aam and int3 testb test rclb enter ret adc and adc inc adc neg cmp push ror out loope das fnstsw fxch push mov mov add daa adc sbb loop mov adc and pushf arpl hlt stos or dec and fwait xor and (bad) jmp sbb inc push mov push adc icebp punpckhdq and js cltd test out jne xor or mov sub pop roll fnstsw in and (bad) push adc adc add sbbl xchg pusha test stc lahf mov sbb fistl and jno,pt or (bad) lods lock int cmpsb xor jg and xlat pop lds cltd sbb xor sbb pop daa rcrl inc lret popa (bad) mov fiadd push pop gs and cmp mov jbe fidivl mov imul pop push pushf pop insb cmpsb mov and js sbb xor mov and mov mov xchg inc add xchg hlt pop fistl mov sub push add mov xchg and mov enter cmpsb je les adc push aaa pushf pop jecxz fcomp pop dec cmp in and jb push mov mov mov inc mov loop andl sbb mov (bad) mov popa lds adc cs cwtl mov ljmp jne es add clc outsb shrl ret fstpt add inc push ds out inc push or jp stc add jmp or loopne js ljmp movups rcl dec mov adc adc pop push movsb xor cmpsb mov mov jns mov push addr16 cmpsb mov pop cmp ja sahf xchg pop jg jnp enter movsl cli (bad) and push push cmpsl xchg aas lcall cmp xlat cmp movsl jno sub and jo pop stos dec add push in sbb mov es rolb add (bad) pop sbb cmp stos cmp clc in xor js insl adc mov jl xchg add mov je jns decb gs (bad) pop test push lods imul pop xor icebp jnp dec enter (bad) mov imul shlb out jo nop lock jp int loop ffree sub mov stos scas lods aad dec mov mov inc mov (bad) popf pushf fisttpl adc rcr jo (bad) push and cwtl pop bound cmpsl add lret mov das push pop in in add sbb or cmp cmp (bad) push or sub sahf xor xlat sbb pusha push cmpsb sub iret sbb (bad) cli lods sbb mov mov xor pop mov jae lds fnstsw les movsl pop bound cmp fbld jnp mov sbb and insl xchg cmpsl or dec es mov hlt faddl mov jge ret in fisub aas leave mov scas add mov sub cmc popf adc testb add add cmp pop xor inc sub adc xchg xor (bad) adc jg cltd and inc inc mov add out js dec (bad) push fadds (bad) fcmovb pop push insl clc leave in mov fwait add jle test dec xchg jcxz subl pop outsl shrb mov mov push cltd into mov enter xchg or iret fldcw pop outsl push in movsl xchg lea xor (bad) push test sub js mov and pushf (bad) jbe hlt dec or gs dec cmpsl ljmp pop push jmp mov insb test cmc setp popl cmp xor out push or je push push or cli xchg shl popf cmp adc scas mov cld lahf icebp cwtl repz stc rorl sbb aaa push mov sahf sbb mov lds cmpsb or lret int3 and lea iretw or (bad) movsb ret lock bound fmull xchg hlt xor xchg (bad) and pop pop imul mulb (bad) imull sub sti sub (bad) mov icebp test jbe aas sub test movsl mov stc orl dec xor fsubrl jmp mov pop pusha and mov pushf cmc inc cltd or xchg rorb (bad) cmp xchg adc add dec adc out mov adc cs push cmp in jge adc mov fisttpl cld lods outsb repz clc in inc add and xor rcll es mov xlat test ret mov adc bound jbe ret xchg inc inc inc insl pusha in mov jg jne xchg xor mov jbe dec imul cmpsl or mov repnz pushf sub fdivl mov pop jge xchg adc mov lahf adc add (bad) lds movl clc add (bad) or push aad mov (bad) jno sbb mov dec dec out adc adc in sub lret lock xor pop scas pop (bad) sbb lret repz pop out jle lods shrb ror fdivs mov cltd insl pop lods xchg stc fs test cmp xchg sbb into mov push stos push xlat lods lcall mov cld fildll sub rcrl push dec lcall in clc aad lret cmc out (bad) dec int3 or or rcll fidivrl xchg xor repnz and aam inc nop mov or mov movsl pop mov jmp ds add cmp xlat cwtl push inc jo sub pop dec dec mov sti mov mov es dec loope iret loop bound or push fnstenv call test stos adc fwait dec push xchg mov cwtl mov mov in (bad) shrl add push out adc ret add (bad) lea insl inc sub aad adc xchg in test test dec call adc inc push nop imul or push repz jmp adc push gs sub testl into add push cmp popa push (bad) xor aas lahf cmp inc jo gs adc seta addr16 cmp out fdivrl and jmp int3 lods or out mov loop mov rolb imul into or dec sbb mov call mov sbb lds (bad) (bad) shlb jo xor add add fcomps xchg sbb and pop mov mov hlt cmp mov and mov pop int3 loopne mov repz mov int push loopne sub sub sbb fstpl aam or into xor mov fisubr mov stos push dec and cmp push mov (bad) movsb in aad call mov cmp cli push lret in inc shrd mov push in and xchg pusha or aad sbb cltd clc lods aas pop mov mov jae lcall les lods fdivl ret jg mov cmp xchg movsb faddp sarl mov and mov lods dec ljmp lret in cmp test and rolb jno add std xor cmc sub cmc je imul jne scas dec add add sahf cmp jne cli mov inc sbb adc push rcrb stos gs ret test mov jbe jl inc in pusha jge sbb xchg inc or cmp xor jbe out (bad) fldl ror mov cmpsb stos es cmc mov test inc dec jecxz lods sub fmuls cwtl jb xchg (bad) or fistl sti or pop outsb push in out mov xor lahf inc and xchg (bad) adc sbb es inc idivl inc test jnp dec js insl ret sub pop pop jo sub xchg out add (bad) cmp and jmp cmp jb in xor lods xorb or push xchg dec dec mov xchg mov pushf test jp loopne jle sub shrb xchg mov push loop adc mov cmp mov imul testl roll add push movsb cli outsb or scas xor pusha ss mov popf icebp cltd and bnd data16 xor dec (bad) sbb mov cmp fisubr xor sbb inc adc mov cmp dec bound dec aas inc xchg xchg add mov jae inc jle jae aaa test fs push push cld repz mov sti das or jp dec imul mov scas and adc sub push xchg roll lret jg lret fsubrs or aam xchg pop pop push jmp jle sbbb pop fidivr and add in popa sti jnp add and mov push sbb (bad) lahf es cmp or test shll gs xor add inc jo call fstpl mov out stos adc jns xchg mov or stc or sub cmc pop xchg ds or push les (bad) mov mov cmpsb roll enter mov mov inc dec movzbl add mov push sbb (bad) xchg mov (bad) xor cli (bad) je arpl pop inc dec push repnz dec aaa aaa test imul jg sbb fdecstp push or pop dec push pusha fwait adcl jb inc adc push mov jo or scas cmp addr16 xchg stc jle xor fdivl fsts into addr16 (bad) mov rolb or cmpsb ss mov fisttpll fdiv jp ja mov (bad) fs mov clc cmp dec aam scas cmp and fisub (bad) gs mov cmp and arpl (bad) dec shrb mov jbe jno popa insl dec sub rorl es xchg je mov cli je in bound icebp fsub mov dec xor ret fsubrl pop adc sbb in cmc repz fimul jbe inc ficoml daa loop add pop or scas hlt sahf or cmp sti add jle rol mov jmp mov inc inc sbb push aas movsb por loopne es inc (bad) in mov popa aam out mov or inc jb pop cs data16 fistpl scas gs lahf (bad) cmc inc sbb in rcr mov cmp (bad) les pop mov sar enter sbb addr16 fist push (bad) stos sub push ret and cmp cmp pop sub adc std bound scas stc lret jecxz movb mov dec pop sbb cmp jne lods in aad jns outsl adc mov imul sarl in sub jle xchg inc mov inc and pop pop xchg fsubs mov cwtl (bad) (bad) loop or cmp (bad) jl (bad) lret adcl lea adc or pop jno xchg ss mov xchg jae push mov sub sbb fcompl rorb mov aam sbb adc inc push adcb out inc addr16 int3 test adc inc call or sub jbe jmp xor push adc into dec mov adc push mov push lea mov dec data16 scas pop cmp xor pop dec sarl stos outsb (bad) imul pop (bad) cmpsb xchg stc cltd popf bound cmp hlt test sbb in jne mov or mov mov mov movl lds add lret (bad) mov cmc divw jmp jmp xor sub outsb hlt mov rcr jp push mov insb mov std dec aam (bad) xor rclb faddl push inc add mov out fild test fisubrl cwtl mov xchg mov stos mov pop or jo and sub mov std pop push flds (bad) xor sbb sub cmpsl push sbb dec loopne aaa xchg (bad) in push jmp lahf mov ss push ret (bad) dec pop repz out pop das test and jmp or shlb movsb imul notl pushf insl xchg inc mov push xor mov into lock xchg and xor je inc pop pop inc cmp mov loop sarb imull cmp pop mov cmc xor sti fmuls in repz nop xchg mov xchg pop pop sahf (bad) mov cwtl icebp lods xchg or int3 cmp sarb js les inc int inc or mov (bad) xor jns aaa push loopne and adc mov test clc mov out jmp hlt xor fwait push fisttpl jne mov test push ficomp push notl xchg pop jno xor add pusha test mov jns,pn jle dec xchg (bad) fisttpll mov add data16 mov fwait mov enter ret sub xchg and adc or jmp mov jg ror out loop das cltd jbe imul sub out add ss mov sarb pop lahf mov adc pop loopne popf fs cmc stos lds test and pop xor and (bad) jmp push or jge sti push mov push adc xor mov loopne and xor out jbe in mov hlt mov in fcmovbe inc clc fidivr in and enter mov push adc add sbb inc inc mov sbb lahf mov sbb fistl and jb,pt (bad) mov mov mov inc scas pop test paddq notb or adc jle lret testl nop push popf xchg sub (bad) je fiadd push pop and and cmp mov ja fidivl mov imul sbb adc insb cmpsb lea and xor les shrl fist stos test jno dec or xchg inc push mov popl bsf jp and jns js xchg mov dec fnop or into xchg sub cmp test gs or in cltd fildl and mov jno lret jnp movsb inc mov lahf das andl sbb mov (bad) jae (bad) (bad) pop inc dec pop xor push dec jns cmpsl sub ret int xchg xor pop int3 mov pop push (bad) push pop cltd orb fdivp fidivl test loope mov and movsl mov dec xchg sahf fwait inc fs jg cbtw xchg clc jge rcrb xchg fcomip scas fmul shll rorl lds jnp push jg gs push addr16 in lea mov (bad) jp jl adc jecxz and jo mov lods mov sbb xchg mov add pop fidiv sahf loope mov pusha loopne cli sbb mov push je and lcall xchg daa xchg movsl mov cltd je fs out add insb pop dec or cmp out jb lahf jne enter fsubs xor jae das cmc or lret sbbl cmp mov mov popf jnp xchg adc scas loope adc cltd shl mov or negl add negb pop cmp dec inc and jg mov add int3 pop std arpl stos out lahf out sgdtl cmp and push xchg aam ret test add mov cmp mov xchg sub stc enter rcr push sub push lock push inc inc cmc jp int jno addb mov sbb push cltd mov (bad) and sub clts jne adc jmp nop outsl cld mov out test hlt pop insb xchg ss sbb or ja out sub push mov icebp cli dec fidivrl dec xor (bad) jae cmp push (bad) add cmpsb jle (bad) push mov loope (bad) fstps and sub dec mov cli mov mov and jle les lret je xchg hlt cmpsl cmp mov mov push xor outsl ljmp stos rorb xlat jae mov push lahf sbb xchg dec pop inc mov jne pushf xor int3 in xchg push adc lods cmp out push fbld popf and ret out sub xor push xcrypt-cbc cmpsl push into adc ret jmp (bad) adc nop mov rcll push mov cld aam xchg gs movsb mov pop cmp jae mov xor mov in adc (bad) cmp mov sbb sbb mov sub sti mov push jmp inc xchg push loop pop cmc fsub lock stos ret in fist into aas les pop add leave dec push (bad) mov hlt cmp daa ljmp cmp dec dec pusha jmp loopne add mov jb ja inc mov inc je adc pop (bad) lods cli arpl pop xchg stos addr16 xchg jle stc xor mov inc mov lock arpl cwtl mov mov (bad) jbe js (bad) (bad) pop pop insb (bad) mov test in pop or inc sti in fidivl lcall mov pop fcmovnb notb jo push jmp push or popf in les jl dec sub sbb insb sub arpl add mov setno xchg adc mov push clc (bad) mov jae imul loop shl int pop ja aam out pop push mov movsl or mov jb pushf mov or jp jne ret sahf mov fmuls dec sarl out in mov data16 clc repz scas or shrb ss sub movswl add orb pop adc xor xor movsl cmp sub fimul sub leave pop push lock mov add call sti popf je lods xchg aas sbb push pop sbb mov pusha adc xchg add mov xchg int3 inc arpl rorb leave pop inc or ficom es dec xor faddl add or roll hlt movsl data16 mov clc loop xlat sub xchg xchg adc ficompl dec repz insb dec test xchg dec jge push xor inc inc xor add ret jg (bad) cwtl jecxz or lret lods add out and stc jge in fnsave mov sub adc in adc jo mov add mov sbb inc inc fistpll and sub shrl insl jns je orb scas aam iret dec pop cwtl rorb aaa mov cli into (bad) cmp in (bad) mov scas dec jnp clc dec xor sbb in xchg ja sbb in add adc or imul mov aam pop bound add mov insl sti cli add jne mov sar mov sahf push aas push cmc stos mov and or pushf add test jl pop mov mov sub jb and mov and daa mov cmpsl mov xchg roll ficom pop popf (bad) daa test push xchg (bad) aad pusha or or idivl cmpsb fwait data16 jns jnp push loope or cmpsl jmp push add xor in aas test inc or mov lock mov mov mov inc dec das adc dec sbb std sahf flds outsb popf add scas repnz cmc push add iret call mov decb ret mov jmp pop pop (bad) xor inc mov push mov or lods bt mov repz mov pop fcmovb jae jg outsl in sbb (bad) (bad) loope fwait test inc (bad) pop les into push outsl xchg inc leave mov stc scas insl popf stos lahf test inc ret pop test out ffree mov das mov aad mov test dec mov xchg mov cmp popa xor add rcrl mov repz xor jo and inc les xor dec cltd repz dec movsb cli push inc lea jp addr16 sub fidivrl mov loope sti lcall add das das stc out es xor cmpl fcomps add das stc mov mov mov pop daa sahf push (bad) mov aam pop dec sub adcl add fwait scas jb mov mov xor and icebp push pop cmovo mov xchg mov mov jg ret sbbl dec fs stos xlat inc lods cld movsb negl dec fdivrp (bad) sti mov cmp bnd cld je mov fcoms or mov push int3 out and cmp push inc mov fnsave push push sahf test push and add lret sbb push adc aad std push xor push pop in or jle xor push lret call cmp mov (bad) in xchg cwtl xchg (bad) arpl ja mov rcl pop cld andb out jg jne pop loopne int out lahf sbb mov lods push fdivrs ds (bad) out jae lds js hlt pop fiadd jl pusha out (bad) (bad) testl dec fsub sbb stc jmp mov ss or cltd scas das cwtl lret icebp and add xor dec das test clc inc jp into mov jns dec out inc sbb lea pop pushf ret pop imul xor jg pop cmpb cltd adc inc nop adc mov push enter mov sbb xor push and loop mov ficomp push arpl aam hlt dec jp mov xchg loope repnz (bad) aas and sbb out rcll xchg xor and adc pop push mov aad (bad) pop xor push gs sti or loop (bad) xchg aam pop and push lahf pop ds cmpsb xor dec shrl xchg lret add pop (bad) (bad) pop xor xchg das sub adc inc mov cltd cmpsb xchg (bad) or mov inc lds mov test mov cmp push les jle push clc push rolb cli sbb pop daa sub sbb jns movsl push cmp dec movsl mov add nop cwtl push mov test cmpsl sub (bad) cltd (bad) inc cmp sbb cmp inc push aam cmp xor cmc jb xor and xchg (bad) dec lock js jb (bad) repnz aaa xchg cld pop (bad) loop mov xor or mov inc xchg cmpl testb jbe aad jb jl jo inc cli mov inc sahf and xor stos xchg jl outsl mov mov xor mov fs sub dec test dec imul (bad) test fldcw ds inc pusha pusha ret jne jge fcompl sub jno insl cmp add out pushf push mov sub jmp pop lds fsubl pop jge fmull cmp mov int cmp sub sbb ds add stos cmp repnz popf add cmpsl mov inc arpl sti std pusha rcr mov jp loop pop stos cwtl lock int3 stos or mov jle ret ljmp xchg pop push push popa fnstenv js pop adc test add inc sub popf arpl imul sbb jecxz rorl add aas pop inc sub jle daa dec (bad) mull jp rol add xor (bad) cmc adc mov push nop clc xor xchg into into mov rol mov push pusha push push imul or scas mov jmp or push inc jb mov pop ljmp mov fnsave or fwait icebp jb scas adc stc fdiv in aam insb pop jno out xor out jno loop loope popa insl jbe lods dec xor je mov repnz stos adc jle xor mov and xchg (bad) (bad) fstl jge out loopne mov xor data16 sub mov sbb adc add cmp fwait (bad) push daa xchg sbb rorb aam xchg arpl fld jnp mov ret or mov push xlat dec cmp (bad) xor test jb scas hlt data16 lods inc cmp fsubrl and popa cmp jmp inc push loop inc xchg adc mov cmp or ss dec repz mov int cmp mov push xchg lods fidivrl lea mov test sbb xor aam adc (bad) and cmp (bad) shrb arpl mov cmp cmp mov out stos ss mov dec pop push adc push aad pushf jae jo or sub cltd negb lock push jp ljmp (bad) fadds addr16 jp loopne inc repnz fnstcw jne imul cmp mov mov mov cld dec add in call mov shrb mov xlat lea nop repnz scas push mov cmc add add mov mov ret inc test mov lret push popf xchg xchg int jne sbb mov es call jno movsb inc sbb add out (bad) pop pop lds jp add mov sub dec push dec lods pop adc xor int3 jmp add push (bad) dec imul add lds add pushf shrb push lcall jb call mov push adc push push jle inc dec and cmp cmp repz or jns add pop loopne or mov push lock and mov xor xor cwtl jae movq inc mov cwtl add mov and fstpt push rcll mov xorl movsb add dec jmp leave dec and js or push jecxz fcompl mov sub cwtl int3 dec popf sahf pop mov push jle mov rolb mov std loope inc cmp sub iret dec out stc and mov je test lcall jle sarl orl or pushf mov cmpsb sti jmp pop jmp cmpsb and out adc in sub test dec adc pop cs jp push lods and mov sub inc pusha cmp sti insl (bad) mov sbb jmp arpl sbb push repz outsb lret nop lods sub jae adc cltd sub mov cmp sti pop sub movsl pop outsl insb cwtl into mov ja (bad) fs mov das cmpsl les aas add mov icebp mov jg (bad) jecxz or jle mov repz push into inc pop arpl pusha push rorb lret and push cmpsl test ret fmul cmp jbe dec or lods fdivr arpl dec cmpsl lret xchg jp mov and pop (bad) fist sbb imul pop test incl dec push imul pop mov insl push add pop cmp mov shrl jmp and mov movsl arpl in insl out mov imul and push mov cmp pushf xor sbb int push inc mov mov in cmpsl or aas pop cmpsl imul rol xor or add clc fwait pcmpeqd pop je aaa or mov mov js xor outsb (bad) sub xor subl push dec les fwait xchg fdivs insb in test gs mov push pop jp jmp fldt loopne jmp jnp pop jp mov or daa (bad) popf enter jo fcomp jp xchg rcr sti inc out mov icebp and mov inc fcmove lcall mov pop inc das sub push push sub xchg xchg dec adc ja (bad) shll decb inc or repz sub clc call ret jae flds int3 xor cmpl push insb fistp xchg (bad) out sub loopne push stc test push das push outsl cwtl mov mov adcl stos push test lods jecxz lods and push mov rorb push loop (bad) sub xor (bad) je lea test fnstenv jno outsb xchg arpl popa push cltd jbe push movsl sub or cltd jns pop arpl dec xchg push and and dec (bad) scas push push adc fnstcw push roll data16 imul pop movsl and cmp push push sub orl mov and pop inc mov jae sub xchg enter andb (bad) aad rorb ljmp jno mov pop dec xor mov (bad) xor es cmp faddl inc sbb xchg xchg movsb xchg rolb bound and ljmp cli in daa xor adc repnz mov add add jne cmp push inc sub popf sbb jo outsb jge repz test nop rol repz xor notl dec and sbb ljmp in sti ret imul (bad) jb sub sub stos add imul sbb fisubr (bad) das fist leave dec arpl mov fwait insb xchg call push cld xchg ret lret cmp test cmp test push repz lds inc icebp fiaddl inc aaa sbb sbb pop jo imul pushf ret jecxz xchg inc (bad) xor and mov dec icebp fcoml (bad) mov outsb inc xor push or sahf out movsl or movsb mov test call mov mov stos xor or stc dec jbe rcr mov jle test mov dec ljmp fmuls add xchg inc imul mov int3 sti in cmc pop adc nop popa mov out push mov dec js fildll out (bad) ret cmp (bad) (bad) mov fldl mov imul adc pop ja xchg cmp popa xchg insl inc jmp (bad) jle icebp aaa sub push ret add pop mull jno sbb ds pop xchg aas sub (bad) mov push add pop mov std jb xchg aas data16 cmp outsb std lock or lock pop les cmp and dec outsl mov addr16 incb xchg pop icebp jo inc dec dec repnz cwtl cmp pop cli loope cmp arpl notb lds outsl int3 jo xchg pop js lods or and or cld push enter adc insw adcb mov dec jbe repnz js push add inc cwtl mov mov jg (bad) imul mov test and cmp or mov fwait int stc in jle sbb and roll dec jge xchg pop pop fxch pusha dec ror fiadd fadd xor jae arpl fdivrs cmp jne movsb fwait repz lahf dec adc sbb std movb idivl sbbl into outsb (bad) rep mov pusha daa pop add into push ficoml push unpckhps leave lahf aam insb and push jo subl xchg loope les mov xor (bad) loope xor push dec out cld mov mov xor push in jp ret test mov sub push shll push and ja xlat mov dec pop and popf pop je sub int jmp cmpsl push test mov jns testb cmp mov es fwait xor lock pop push jo es loop lret lret pop in cmpsb aas xor mull ss stos and (bad) mov jp stos sub mov jo out inc call xchg or leave pop add push cmp push icebp push in into or sbb mov xor js jo (bad) test fisubl (bad) rclb jecxz or push push out aaa addr16 mov pop cmp xchg shrl imulb jmp or rcll nop pop fmul push cs out sub test mov fdivl or dec roll jae insl add cmp dec xlat inc repz aam cli es dec add xor xchg pop push sbb or dec inc test mov mov adc sub daa sbb aam lahf push jg hlt dec inc xorl dec stos mov lret push xchg lock pushf daa pop push jmp popf inc (bad) mov stos push iret jns adc ja jne jl (bad) xchg mov in mov sarb inc and incb bsf or (bad) jl fucomp xchg (bad) jle sub jmp loopne mov fucomip cli mov push in adc mov cli mov sbb out insb mov sub jl mov aam out sbb dec dec loopne ffree call data16 pop inc outsb aas and sub out pop (bad) jae mov dec mov stc aas xchg mulb (bad) jmp and mov add pop cmp fnstsw sub inc ret repnz out sbbl jae mov pop pushf inc or inc call (bad) insl fstpl rclb cld dec lds xchg mov cs add lret out pusha sbb mov adc cmp cli mov jne mov xor ja dec xor mov inc push (bad) and rclb repnz dec negl jp mov movsb dec les xor pop add leave daa mov xor add outsb cmc notl mov hlt fs and cmpsb pop sub add sbbl xchg jmp cmp xchg push jmp dec sub fist rcrb xlat mov adc ljmp push sub jge stos clc cmp adc dec in add outsb getsec (bad) xchg scas rcll and test mov push pushf arpl xchg push jo lds les adc or fidivrl cltd sub ja mov pop xchg (bad) rorb mov cmp nop dec and insb and mov popf jle ja notl or push dec mov add lds pop lret push int add test jbe (bad) mov pop cmp (bad) in loope push fldl2t cmp sti pop mov jo ds pop add cmp lret movsb sub adc push out jecxz jb mov inc std mov adc dec push or int mov and xorb arpl subl ret in xchg iret adc lahf cmp jbe,pn sub lods outsl pushl mov push xchg es popa add lods mov pop (bad) jp and in fwait std pmulhuw mov xchg lahf adc fnstenv addr16 mov ljmp lahf push inc shll mov popa mov lock and jne add fmuls jns dec add loope ficom or cwtl lret jns pop xchg jl pop inc loopne fnstsw jb scas xchg int xchg mov in xor inc fimul test scas sarb and test adc loop imul arpl and inc jno push sbb call mov out sbb mov je sub xor jmp repnz push cwtl leave in inc fwait jne add mov xor addr16 idivl jne test mov leave dec xchg xor sbb sub stos sub inc xor pop movsb arpl push pusha mov dec mov in mov (bad) sbb nop imul jecxz ss sbb inc imul test loop (bad) out cld ljmp jg push adc mov loop cmpl cmp movsl call pop (bad) daa inc les cmp xor data16 aam jb sub lret movsl cmpsl push in test rcll stc mov stc or push mov adc adc sub mov in cmp leave xlat jle fisubl js pop in adc xor fidivrl icebp repz stc adc (bad) jns data16 fst mov clc pop sti sbb mov insb stc and (bad) insb cltd adc jp jb (bad) mov jae (bad) leave lcall shr xchg test fdivs xlat jae mov push inc mov scas mov enter mov and mov dec mov popf mov movsb mov or stos (bad) xlat ret std pop call out sbb jg lcall lret out scas das mov dec insl sbbb inc dec xchg xchg fcmovnb adc push in rolb mov xchg mov sub enterw xchg pop test jle je (bad) rolb mov fmul rolb in montmul cmpsb inc and mov jne inc cli ja scas rorl xchg jns cmp inc int lret aaa adc pop dec sub mov popa lret add fidivr sarl mov js push sbb sub push sub push jbe roll mov inc adcl push dec nop xchg sub repnz jae int rcrb inc mov (bad) xor lret xchg out roll ret aam out mov and fnstsw js sbb jns shlb popf adc cmpb cmpsl mov pop dec add dec xchg out xor mov adc repnz cld out fmull mov push pop hlt sub repnz int3 pop out xor jnp mov hlt repnz daa (bad) iret into jg pop jne mov mov shll jge popf sbb les popa insl into jo,pt add out dec int cmp xchg pop cld xor repnz inc mov or jnp jae iret divb dec (bad) pop mov jg ret xchg popf inc adc adc inc lcall adc out mov sbb out repz out push pop test push adc test cmp mov lcall mov sbb mov ret push loope (bad) jge dec and inc ret popf mov (bad) (bad) (bad) dec or push ds das mov adc jo ja dec movsl arpl fcmovnbe mov (bad) stos lcall adc mov mov in inc incl cmpsb push sub pop inc (bad) into int mov nop dec addb inc sarb outsl pop dec out loopne jb sub insl add imul notl mov int cli xor xor pop mov and push out and out pop mov mov pop hlt daa mov mov mov (bad) dec jle mov jnp adc popf jo and fcmovnbe out das movsl and cmpsl repz ror and ret (bad) in jbe push add (bad) inc mov scas xchg (bad) xor jns stc out jg push repz adc cmpxchg xchg add cmp orl inc adc cltd popa adc data16 hlt pop sub and adc pop mov aaa pop mov (bad) jbe fisub subl cmp add or fs leave mov xchg je arpl xchg les jle rorl rorb pop sub cmp fnstsw xor ja push outsl loope ljmp mov pushf dec adc and es mov xor stos (bad) rorb lods lods adc andl xchg xchg movsl cmpl das push sti stos (bad) adc stc repnz outsb pop fs rcrl shrl xor ds mov mov ret sub lds sarb sbb test daa dec mov sti cmc add jp jnp repz fldl cli in sbb rolb mov mov mov pop bound (bad) mov fldl leave andl adc xchg (bad) test or enter push xchg jle cmp (bad) mov imul sbb (bad) in mov inc push daa test cmpsb in cld aas jg (bad) cmp pop fsubrs les and cmpb imul cmp cmpsb inc jo and aad das fsubrl inc fcomps mov sbb sub or js sbb fstps xchg sub insl aaa iret dec push mov (bad) jo push add std pop mov imul add cmpl mov pop pop (bad) cld and dec popl mov maxps or (bad) mov ret fisubl sub ds mov int3 lahf jge rcrb pop mov lret out int3 fdivs hlt lock adc sbb pop mov xor (bad) cmp out andl cmc sub xlat imul mov clc cmp inc and leave (bad) int3 and mov add movsl xchg add xlat push mov jbe inc push arpl frstor adc push dec in stos and ja and mov add jp scas scas inc jp xor dec push sbb push shlb sahf out cmpsl sbb push sti xchg mov pop pop iret shll dec dec sbb sbb push jbe outsb jns xor shrb movsb sarl scas test or cmp mov push pushf xor shll or std and in stos imul or scas pop aad dec js imul push mov out xchg les lret cli rcrl leave andl and pusha loope pop mov repz mov mov test dec out fildl int xlat mov cli mov mov sbb adc leave pop cmp pop pop scas jo cld ret ret push bound and jmp idiv fimull inc jnp lret lds mov mul out jns dec push dec roll pop add stc cmc mov out add mov adc in push je mov mov orb aad push sbb push cmc (bad) fnsave aad push mov pushf loope push cmp imul mulb subb sti xchg addr16 cmp notl pop and xchg in lret xor ss bound dec movsl enter clc movsb leave xorl (bad) fiadd cwtl std mov mov out push int lret lds pop insb xchg xor cmp in out data16 cmpsb iret pop stos adc cmp mov jne outsb xchg dec pop push fwait dec das jnp xchg jmp jecxz ja jmp and (bad) jle push pop pop pop (bad) cwtl inc test ret dec add pop arpl cltd xor imul inc outsb mov int3 es sbb and pop adc iret addl jo pop and sub xchg insb jns push test pop lret hlt dec (bad) sbb and outsb or pop stos and jle push adc push outsl mov cmp rcll mov add adc pop cmp aas ljmp mov sub lahf loopne and imul inc pop (bad) pop in xor mov std outsl popa mov mov aaa (bad) mov mov pop dec pop pop arpl and sub or loop fwait divl mov xchg addl pop lret pop xchg mov add stos sahf push mov jne mov jno int pop push dec outsl jae jp sahf andl push mov mov and cwtl inc adc popf std iret add push fldl je push push and cld sbb inc jp sub jmp jae loope mov insb sub sbb xor (bad) mov repnz mov pop adc mov mov and aad je ljmp push repnz ljmp out lahf inc fistp pop jno outsb mov pop xor xchg repnz popf xchg xchg mov pop out xchg adc push xchg inc lds fisttpl mov adc sarb mov out arpl dec dec mov sub add lret sub pop jne push xchg gs and mov cmp mov mov in imul mov add movsb shrb sbb fwait cltd and lock xchg add shr push sub js es shrl xchg mov jne sbb mov cs hlt add mov adc mov insb mov lea jno jae dec pop pop mov shlb cwtl pop out jle and jne mov insl lret xchg jo (bad) mov push or shrl pop push scas in mov rcrb fmuls (bad) mov test cmpxchg mov xchg xchg sbb aaa add cmpsl ss jle xor imul sbb mov sbb fsts or xchg add enter inc sub sub add dec or orb leave pop mov inc loop xchg rcll bound sub add iret pop ret add test popl lock xor (bad) sbb divl in inc je xchg or push nop lods jbe pop movsl popa loope cmpsb (bad) shrl lret dec test (bad) jbe lods addr16 (bad) std xchg jecxz mov in or aas popf negl sbb xor repnz xor sub icebp or cld adc mov pop adc pop dec (bad) lods push xor (bad) cli loope jg in out (bad) xor out rcl add sub mov push outsl movsl sti push std and rep cmp mov int3 movsb popl push repnz lret test js stc push fbstp sbb ds jae xor or xchg js dec cltd sub push mov inc into or mov dec cli (bad) jne imul pop push inc or mov sti dec arpl sub cmpsb ret inc inc es inc sbb ja cmpsl scas mov adc out pop ficompl push mov (bad) cltd (bad) mov daa jb cmp mov stc add mov cmpsl xchg xchg cltd (bad) lods dec adc xchg mov fwait stc jne dec fcomps in dec in (bad) xchg jae push dec pop push cmp sbb pop fist ja add fwait adc xchg out jae shlb and bound and pusha dec jb roll sub push jo movsb int3 jnp cltd (bad) xchg fnstenv and (bad) mov fidivl scas jge dec aas std lods and mulb negb popf fs jge and div idiv rcrl movsl test pop inc insb sarl or int3 lcall cs shl out pushf js pop inc sub cmp mov movsl fucom idivl xor pop stc dec int sbb inc mov mov cmc pop mov movsl jecxz inc popf jns jno in inc outsl repnz mov and insl rcrl sar lods sbb je dec cs dec or and sti inc cmp adc out push inc fcomps jp jmp jg shrb inc add mov sub xchg dec imul pop js jno sub cmc add and cmpsl mov aam pop jne inc xor jecxz fdiv in adc test repz xlat push adc dec xor mov pop cmp ret (bad) jmp arpl cli and add loope mov xchg sbb pop cmp (bad) cltd addr16 pop nop adc out and mov int lahf mov aaa mov push test fnstcw icebp cmp fwait xchg decl stc mov or xchg jl aaa mov insb pop inc adc (bad) mov pop fild repnz xor sahf mov xchg xchg xor outsb push sub push imul mov ja pop adc addr16 inc aaa inc gs mov mov int3 scas jo aas (bad) cli jmp xor dec xchg das cmp cmp mov loopne ror std into lret mov cmp fildll aad xor sub and movl xor or push test cmc imul push (bad) mov cmp andl jl scas mov andl lahf xchg inc inc rcrl rep pushf mov jnp jecxz cwtl mov daa or pop pop push aas push and cli and leave xlat movsb stos mov xchg dec cmpsb lods inc sub xchg sub push ds push pop inc pusha xchg jg xchg or fs mov sub lods test mov jp and sbb inc enter imul movsb jg mov (bad) out hlt push sbb (bad) dec mov mov xor or jnp dec push scas jo push out sbb xchg mov and add aad mov xor ret jecxz movsb or pop mov mov repz fisub pavgb lahf push inc pusha insl or (bad) (bad) lock and std jle pusha pmulhuw mov inc mov movsb out lcall cmp or mov aad movsl leave (bad) xlat aaa (bad) jns sahf (bad) fadd ret into fistp scas push out in lods adc dec mov and fldcw rorl lahf int jo and fdivrs sbb push mov and add adc sbb ret add cmp xchg data16 mov dec call sbb xchg mov xor dec or pop adc mov inc sub lds sbb cld ror add cmp lea scas cmp xchg cltd sbb xchg outsb cltd sbb dec cmpb out subl xchg les int3 dec cmp fisubrl outsb (bad) sarb lods pop es inc lcall push mov mov and nop or out ss nop sbb (bad) notl xor sub pop sti lret popa xchg adc inc jmp lret xchg into dec stos add push mov adc lcall jge sbb movsb cmpsb xchg mov xchg cmp jecxz loope mov ret test push pop xchg int aad scas lret mov xor push lret (bad) dec stos dec mov xchg cwtl sub xor popa sarl in das inc fst in lret jns jle cli les mov dec add aas xor adc imul (bad) mov mov (bad) sarb (bad) xor pop ds imul pop xchg roll fs rorl dec dec lret xchg jae loopne cld cwtl insl outsl cli cwtl xor mov adc push and dec mov and mov push push inc push cmpsb lods xchg xor mov dec test roll push inc sbb cmp pop push lds inc push xorl outsl dec xchg or xchg pusha sbb cs addr16 fldenv inc push and pop mov inc mov addr16 imul jae mov sahf gs gs nop clc lea loope rcll xor push ret andl adc movsl test pop xor out and ja dec mov stos fstpl sub mov rcr ret adc xchg mov jns arpl cmpsb dec jge into fdivrl in jle das and fimul fimull mov test dec (bad) push xor faddp xchg outsb mov lret mov jnp lcall daa inc mov jmp in fnsave push lods and adc cs mov lock mov mov xchg es adc add sbbb cli hlt xor sub shrl mov cmc das xor fiadd adc test mov cmp aas mov mov pop out mov xchg jg daa pop cmp in stos add xor aad fisub ds mov mov cmpsb loopne mov cmp shrl xchg add (bad) jecxz out cmp icebp fcoms cwtl dec popa and ljmp (bad) mov stc icebp loope,pt xlat adc or inc mov js adc int3 inc sub cmpsl xchg (bad) cmc cmpl xchg or mov sbb dec mov push test enter mov or sub mov adc jb inc outsl daa (bad) or js and pushf cmp out scas xor dec sbb push sarl icebp (bad) xor rorb lock (bad) or repz out jne hlt pop push lods dec fstl xchg xchg xor sub imul out push xchg fcoml out push mov rol jg push cmpsb movsl cltd xchg cs dec idivb pushf gs clc in add pslld loop and sbb popa cli test mov in rorb push cmpsl enter lret int push movsb xchg cmc sub mov xor sbb iret jb nop sbb lea push and xchg lea dec jmp adc jb sbb fdivrl loop xchg cmpsb jnp jmp fcoms inc scas cmpsw jl int bound cmp xor mov gs push add mov jns scas add jb jns rcrl outsl jl scas aas push dec ljmp ds cmpsl xchg mov int sbb icebp ficompl movsb ret clc fistp dec mov xchg or ftst insb mov xchg stos or jmp xor jnp hlt imul pop inc add inc sar test xor lods sarb dec xor xchg (bad) outsw lret dec mov push mov mov add sbb mov idivb mov aas mov mov mov or popf int lds sbb cmc dec push pop (bad) push xchg cmpsb insl sub out inc inc (bad) cmpsl adc xor push orl orl test push (bad) xchg xor shr sti (bad) imul fwait xchg pop (bad) cmc dec add lcall outsl mov inc xchg stos pushl pusha xchg lahf rcrl jo sti ret aam mov ret add cs loope dec daa jne cmp outsl pushf js cld push pusha loopne adc adc sub pop cmpsb sub (bad) aaa mov popf int testl mov mov fimul adc imul pop jmpw mov test cli pop xor lods mov push call pop fisttp adc mov es jnp or jg ja and movsb xor (bad) dec popa dec (bad) in imul (bad) cmp std inc xor adc jmp std loop dec or or adc cmpsb inc pop inc in out out xor rolb dec mov mov lahf shr mov insl dec int in add int3 ja std int3 inc call fnstsw fimul xor adcb pop aam hlt sub cmp ljmp and pop adc xchg outsb insl push add insl push add test jg pop movsb sub sub outsb in xor cli jnp adc sub lahf fidiv sbb mov in mov roll (bad) mov jge mov arpl inc hlt lret cs adc ss dec or inc test sub pop (bad) mov cmp rcrl bound mov test mov xchg dec jg imul add mov sti shrl push mov dec mov dec or cmpsl xor cmpsl mov or inc inc out push mov popa xchg mov movsl push ret or fcompl xor ljmp sarb cltd lret test mov test xchg adc mov mulb push sub and mov js mov inc push repz mov pusha lock insb arpl les das xor into sub std cmp inc inc cmp jns ficoml jo jb adc adc idivl jae mov pop push outsl je mov stc imull pop cwtl lds lret test out fdivl sbb mov mov es js out gs and mov add (bad) xchg aam movsb adc faddl mov sarl ret std push pop cmc push loope mov sub cld (bad) insl arpl dec inc cmp xchg mov lods mov imul and nop gs pop jbe test mov negl mov pushf leave jmp ss adc pop jae inc jge mov aam add sbb sbb dec dec xor lahf push push je add adc pop or sbb lods fidiv or sarl aad fscale mov adc dec fwait pop xchg lods sub and or dec mov (bad) xor push fsubl test xlat lods pop stos popf jp xchg aam test (bad) jae popf xchg xchg mov xor sub (bad) jo icebp fcomi test adc mov xor sbb cltd xchg mov mov (bad) scas mov fnop xor push sbb dec (bad) data16 xor or addl mov cmp jle xor cmc sbb xlat in and jnp xor jbe mov pop push adc mov xchg push push stc dec inc mov or sub js lock jo mov sbbl mov adc pop (bad) arpl sbb pusha sbb mov das xchg or pop test loope lods jl cltd and inc adc lcall ret outsb and mov xchg sbb sbb push mov arpl dec call lock jne sbb mov js fwait mov shrl stc lock dec movsb push add gs or icebp (bad) sub sbb fs lea ja and xor sub pop push cli cmp mov jb cmp push jns jbe fnstcw shrl push (bad) mov insb stos add movl shr or movsl jnp lods inc mov mov mov cld ljmp or fcmovne out lcall sbb lret mov xor fdivl push xchg mov inc incb mov mov cmp cmp pop ljmp in loope and sti mov inc shll xchg inc incl cli cld fnstenv fcmovnu jne fimull test lock pop mov hlt in imull fsubrl push js (bad) cmp push fimull lea pop in dec jbe sbb int3 mov xor xchg jne xor cmp repnz jge and cmp (bad) mov pop pop sbb sub add (bad) adc fisttp je or push pusha in addb jge cmpsb loope push popf push mov outsl xor test popa xchg fnsave popf xchg jl fsts call pop es cwtl rcr mov loop (bad) andl jge jnp add and push in adc xchg add inc out outsb lods sbb mov je int sub jne xchg nop pop outsb or pop fwait int3 imul jge (bad) jae jb mov dec add or cli movsl xchg sahf cmp pop xchg cltd leave out mov xor inc add insb sbb lods xchg pop push enter jns mov ficompl and iret (bad) lock add jne adc sub cmp enter out shr lock or pushf cmp inc jmp in jb rcl fstp add cmp sub repnz sub icebp dec insl inc fstp ss lcall je mov pop rolb aaa in cmp add je jg jmp (bad) cwtl mov ret jne xchg or clc adcl lret stos cli mov cmp pop xchg popf pop test imul cs fwait test or jo cli pop inc pop push mov dec xor mov fstps jmp sbb out fisubl lret mov lret sub inc and repz bound dec push in ss mov arpl icebp jne jns xlat loop push mov sub cltd and jmp and sbb (bad) pop xchg mov (bad) test sub mov dec mov in sbb mov adcb test jnp sti xor pop push (bad) xor add pop or mov bound xchg (bad) (bad) cmc repnz xchg ss inc fstl add sub stc mov movsb xchg jbe xchg loop sub das dec outsb mov adc mov les lods push ret sub in sub sbb andb sub sub (bad) hlt and jmp mov or mov popa clc test sarl data16 dec js insb inc (bad) jae push fwait push xchg outsb push sbb sti xchg scas rorl pop pop sbb pop push outsl gs sbb ficomp dec adc cwtl sbb sub pushw rolb aas pop nop xor mov out (bad) movsb xor mov sbb mov dec jp mov push ljmp jne out repnz push pop popa mov scas shll movsl mov mov mov pop lods push sbb loope js shrb xor and mov xchg jge mov mov inc jl and dec push jne pop fdivs dec sub sahf pop pop cmp jle pop push or fwait in add (bad) jne shlb mov sub out push mov or in stc mov out frstor xchg inc mov rcrb lcall and dec (bad) pop sbb imul stos adcb out lret pushf les mov and mov sarl adc repnz mov aas jb xchg outsb popa or mov cmp pop (bad) dec jle push xchg mov aam push or fildl repnz ret cmp jecxz cmp mov mov push cmp xchg daa inc push and xchg and test dec xor daa call fstl cmp mov popa (bad) pushf push mov mov and lret lds enter imul nop push or test in xor ss or cmp pushf imull push jecxz jns push push lret iret pop insl pop in push adc das mov mov xchg pop std cs cmpsb or push addr16 jns pop aaa test subl jl dec fbstp ds lret rcrl repz test cwtl push gs jmp mov in test dec and scas in rcr repz leave incb je xor rcrb loop dec imul mov loop aas mov (bad) push and gs push xor mov sub xor adc aad dec cmc inc sub push stc (bad) sub stos pop nop or outsl rolb jnp out pusha insb sbb pop push cmp test and in jle je mov adc inc and sahf stos or dec sbb mov mov sbb add pop in cmp mov cmp push ret ljmp fdivs adc xor push jmp dec xor call adc mov icebp jl (bad) push or popa test clc jmp aas (bad) cmp scas aaa dec in ljmp insb (bad) lods cld insl xor jle imul or adc popa cmp popf ror sub cmp sbb fdivp outsl xchg lahf jge add int3 inc fstpl cmpsb pop mov popf sbb add enter pusha ds mov aad sbb test add icebp std add (bad) ss movsb shlb xchg and je xchg mov fdivl test ret cmp cmp lret dec jne xchg jl xchg or xor test pop cmp add imul push nop or inc (bad) lret inc mov mov (bad) sahf test lret cs js sbb push pop les (bad) lret inc not push (bad) mov pop notb mov into imul sbb mov int3 fsubr lcall icebp movsl and add dec mov movsb xchg mov scas mov cmp mov scas xchg insl movsb or adc sbb inc sbb xchg outsl cmp fdiv dec push pop fcomip mov cs inc ret imul inc xor repz fidivl fldt fstpt inc push ficoml in loope cmp dec pop mov cltd push jno icebp ja pop xor mov push inc loope jne push decl outsl (bad) mov jl pusha cmp mov or lcall popa cmpsb dec movsb popa mov dec or cmpsb into psubusb hlt shlb lret fild inc or pop insb sti jne dec sub and xchg stc outsl (bad) jo clc fnsave insb cmpl xlat leave sbb pop in sbb sbb hlt bound dec xchg cmp fisub jmp pop sbb xor jo loopne shrb mov jl push and jle int3 push je (bad) pop sub imul mov push (bad) je sbb hlt (bad) (bad) mov sbb lret pop pop and hlt adc sub sbb adc push mov xchg fst mov pop rorl insb imul ja scas (bad) sub stc push pop rcrb fnstcw ret in (bad) (bad) dec adc jle fidivrl jae mov mov mov jmp ja sahf inc stc jnp negb push loop cli jno mov push enter (bad) icebp arpl pop ffree test fdivl sti jmp cmp test ss sub cwtl jge notl daa pop sti mov xor lods jae (bad) js cmp test adcb cmp pop sub or add jle sbb aaa mov push fwait cmp lahf pusha clc lcall jnp out pop push pop je jp lock (bad) je cmc jge outsl inc aaa hlt xchg or das mov repz mov mov lret dec and cwtl and lds cltd cmp inc adc in test dec cmc (bad) sar xchg test inc jmp adc fs (bad) lock int3 flds fs pop add inc push adc sbb repz or repnz (bad) jecxz mov xorb test cmp xchg lods (bad) adc stos clc adc (bad) div pop cmp int daa sti pop push xor xor pop jg xchg or inc rolb mov int3 imul jge pop stos js shrl add aam outsl pop in sub xchg jae adc adc movsb scas orl pusha sub negb inc push or paddusb shrb imul mov fwait dec and iret xlat (bad) mov adc cld mov dec mov inc fadds out (bad) insb mov mov repnz es jno xchg mov ds cmc push push es mov loop lds mov adc test lds gs fimul das mov and in in mov psubd or cltd adc ret into cmp push dec imul jo int3 mov (bad) fadds sub adc inc pop in (bad) cmp test sar aam lret iret mov rol jo and inc xchg dec aad aam jmp sbb daa inc mov xor inc dec insl out out xor sbb jle inc fnstenv xor in daa and (bad) lret add adc cli adc bound push (bad) imul dec aaa int outsb and loop bound loopne in es loope (bad) add nop add lret push hlt out (bad) repnz inc mov pop pop (bad) iret insb xchg or (bad) push pop in push (bad) imulb push jnp mov ffree aam jecxz bound pop or sub cmp add and sub lahf (bad) mov jle mov mov inc unpckhps stc jp xor mov repz pop loope pop dec in mov mov mov sti dec (bad) or fs in push mov inc pop clc pop sbb add mov mov daa aaa jno (bad) mov cmp js cs test clc mov fnsave (bad) (bad) xchg mov fwait loope sbb (bad) and inc push sub jae repnz cmp test mov scas jae stc shrb or (bad) (bad) jge mov orb xorb and pop mov jns rclb cld dec mov inc hlt (bad) fcoml dec mul sub add call xor int lods daa add lret arpl fmul xor xor sysexit xchg pop aaa mov lds ret cmp mov ret popf adc pop push out (bad) lods xor jp sbbl movsb call push int stc mov add or cmp push fistpll les mov (bad) out mov loopne pop stos xor cmpsl aam pop fsub mov call lds xlat dec jbe sub bound cli jle or lret push push scas xchg adc and xor lahf pusha push out sbb mov popl pop insb hlt pop push lock jno sbb jbe daa jb add lret push aas cmp jle xchg and fstl sbb mov leave and lcall sub xchg cmp jo sub out jge xlat lea or adc lea stos std and inc hlt sarl das or (bad) push mov stos push pop xchg mov bound sub push inc pop mov mov pop jmp jae pop repz jle fsts mov cmp loope int3 test roll mov mov jb cltd jns xchg jecxz ljmp inc mov (bad) mov push jge loopne int3 nop push rclb cmpsb jge (bad) adc jg mov sub lds jns pop sbb mov jns push lret (bad) xor cltd call xchg cmp inc pop or mov ret inc js adc inc jg push in lahf sarb adc adc xchg cmpsl mov push addr16 jnp mov repz rcl and xor mov sti mov mov ja lods out mov mov popa (bad) adc jo and cmp iret sbb arpl xor in xchg pusha or ret into (bad) int push inc out imul fwait lods jae outsl xchg inc inc scas std cmp push push add push ret repnz lea sbb insl sbb push jle and and adc repz mov call and pop pop adc jmp scas loopne sub stc mov xchg sbb mov mov pushf lret push mov or xlat test jg adc inc lock mov js pop insb mov jb mov (bad) sbb mov pop push sti push les mov imul lods loopne leave dec and inc xchg mov test mov movb xchg jae inc sti stos sub mov negb jge ss xor lahf push mov mov mov sub or sti dec xchg imul push sbb xor pop sbb cmp popa pop jb sti cs jge repz popa cmpsb cmpl mov aad (bad) dec aas clc mov mov test pop out sahf bound stos sbb inc and and ljmp aaa jmp jnp test enter jae imul jl (bad) dec jp push (bad) jbe orl inc fs in out je (bad) adc mov lret mov out and cld pushf addl sti ljmp dec jl scas and movsl pushf fdivl fneni(8087 or fistp jne mov (bad) jp push (bad) lea mov sbb mov xor insb into mov std mov jmp adc lahf mov insl mov leave jbe mov dec (bad) mov aad adc movsl push xor mov (bad) adc or into test xchg sahf stos flds shlb loopne jns inc jp mov movsl outsb stos xor mov push inc sbb gs or ljmp loopne lea mov das dec and jmp stc push add in push loop jle sbb and xor sti ret imul lods jmp test lods push xchg sub push or mov mov sub jo push mov push pop call mov jmp pushf fldenv in aaa clc sub add pop dec sub and dec lds test cwtl push (bad) ficom es cld xor pop pop push enter push test xor sbb adc fnstsw (bad) out mov (bad) jge les jecxz loope dec mov mov std pop movsl xchg aam inc xchg jo sbb sbb sahf cmp jg jecxz ja (bad) repz rclb int3 cmp xchg jl pop adc adc cmpsb sub cmpsb (bad) mov (bad) or cli add cmpsb outsb subl es fwait dec xchg jle sub lods jg les fstl mov jo std add leave out fisttpll cmp pop sbb mov mov inc enter dec out xchg inc jns xchg add inc mov mov imul jmp fdiv cmp (bad) loope imul jno push cmovb loop cwtl iret sysret sub pop nop push (bad) aaa jmp adc mov cltd push push jae call adc (bad) out lock push pop jno mov cmp lds cld push popa (bad) xchg jg sbb xor jmp (bad) lahf andl cmpsb push (bad) out call push adc or cmpsb jns dec mov (bad) std fistpl out cmp lds sub orb pop icebp aaa push rolb mov imul ds push inc mov add pop sbb sar pop ljmp cld enter xchg sbb daa dec mov xor jb pop inc jecxz,pn xchg jns (bad) jne icebp addr16 adc pop inc rorl or shrb (bad) cmc ds mov or pusha aas ljmp jge in btc pop jmp imul mov cmc arpl out cmp mov inc dec jne dec loopne push adc or lods (bad) divb lods mov test sub pop jp inc sub fcomps (bad) je xor int cmp and mov inc insl aas mov test movl sbb xlat clc inc shl pop ljmp mov mov sbb xor inc sti mov or xor add es andl sbb mov cltd sub cwtl mov push rcll dec int stc and push adc mov sub push mov mov pop xchg fnstenv int3 inc mov pop cmp xchg mov repz shrl or pushf aad mov leave adc fs repz ja adc les and dec mov dec lcall repnz cmpsl mov and outsl dec inc fisttpl jbe fdivl jno das sbb das push in mov jge pusha jb dec sub add push (bad) xor or out sub ret pop fimul (bad) fisttp pusha fildl in sarl popa bndstx (bad) xchg mov adc dec jnp mov dec push mov lret addr16 jmp lret test lret in xor fdivs dec cmp es pop outsb pusha mov jo mov loope or out cld ret les inc inc pop loopne cmc les mov insb or sub xchg push sar lea add dec dec lea and jg mov (bad) xchg sahf into repz pop loop insb idivb xor xchg xchg lret mov (bad) fnstcw xor push popf push push jmp lret mov sbb xchg lret mov mov lock cltd cmp pop jle inc je fxtract add stos sbb movsb jp mov pop sub (bad) (bad) js xchg xchg (bad) mov js cli test push push push imul aad jl fs adc xor dec icebp psubusb clc out scas xchg push or cmp jne sti ja mov pop inc cmp jge push jnp (bad) idivb mov dec lret imul mov mov xor pop rolb sahf adc sub movsl sub mov add inc sbbl mov xor (bad) (bad) outsb sbb push xchg out jp dec fild imul cmc pop loop lret cs das je sub fldln2 lret sub sub mov (bad) xor sub iret rcrl adc sub dec jbe and sbb adc adc jle pop xchg loop pop sti icebp dec push xchg xchg xchg mov bound dec cmc mov ret push mov pop int3 lret jl pop movsb pushf data16 fstps clc push shr mov lahf je sbb and faddl adc mov rcrl fstps mov or or ret cli mov adc fisubl lods mov mov popf aad mov loop outsl jge call or in mov lret push inc mov (bad) les and je dec fdivrp lahf mov mov movsb mov neg xchg repz fiaddl rcl into cmpsb dec inc cwtl push xchg mov xchg push (bad) fnstcw je mov dec lods xor jns repnz xchg mov lods push sub pop pop add or nop loop divb pop add push sbb pop inc popa add and pushl dec mov mov (bad) mov mov jg hlt xchg (bad) loop pop test out in inc nop xchg add mov je (bad) enter ja xchg xchg imulb cmc cltd jo xchg ss in dec aas xchg test pop pusha pop mov or imul pop sbb cltd cmc sub xchg mov (bad) aad rcll sub push lret dec leave sbb add xchg push mov xor les incl jg push mov sbb inc pop lods add pop adc mov es aad xchg cmpsb mov int3 (bad) or cmp (bad) xchg inc fiaddl repnz sub mov mov or out incb gs fcomi adc fnsave lret xchg outsb movsl adc lret adc (bad) cmc loop cmc or dec or sub cli xor adc push (bad) mov inc mov mov inc not mov bound cli shlb jbe push jge push in cld call test imul xchg mov mov dec and or pop ficom xlat jo das jne cmpsb ds sbb in aaa into pop nop sub mov push lea add add cld push cld shrb xchg jmp mov adc out mov (bad) int3 inc adc mov in aad pop adc mov pop mov or jb jge cld jmp mov pop js (bad) divb gs rcll in pop clc mov je movsb pop push adc test (bad) jo insb adc fisubr ret out mov and loop cmp sbb adc cwtl aaa stc pushf mov inc jne not fldt add arpl push pop mov mov dec xchg jmp data16 out jbe int shlb xchg nop pop out sti pusha xchg enter mov mov insb in cwtl in stos sbb mov and inc xor sub fbld pop jo out (bad) mov lcall lahf mov pop mov pop add shrl fwait push or js inc sbb out (bad) push jb fnstcw jmp add jno inc idivb in lret sub int loopne push sbb adc lahf push mov mov jnp cwtl cld mov jb jae lods add stc in sbb sub lahf mov xchg in sbb mov mov jmp sahf mov cld push bound xor or cmp jg movsb mov dec fsubr popf and mov test loope pop push mov loopne sub das ret rcll outsl out lahf jb loop cli test out lea xor iret push js lret ret popa pop push fild mov cmp adc nop or mov cmp sbb iret dec add sbb mov sub icebp fwait dec adc xor data16 enter jl mov fadds or pop je mov sbb js test xchg data16 sbb fwait imul inc data16 daa ret addr16 mov out xchg stos mov push addr16 mov dec sub mov sbb xchg mov mov mov mov mov cltd or mov xchg sti inc lods cmpsl je das push inc jne test adc int xor sub scas push mov jmp scas inc scas enter aaa aaa mov push popf fisttp jmp pushf jno lret jl pusha imul (bad) push test pushf outsl ljmp rcrl fwait cmp jl dec gs jecxz pop mov sub call pushf movsl cs outsl std loope add mov lods test iret dec pop inc popf jb (bad) (bad) sub (bad) mov pop mov inc test sub pop leave jno ret jae (bad) rolb jae push imul sbb ret inc aam xchg add cmp mov pop dec jne push and xlat push mov xchg out les sbb test cmpsl jne daa mov (bad) pop cmp (bad) out rcll sub xor xor jno mov xchg mov outsb dec mov xor js dec cmpsb imul stc aaa lea sub gs (bad) xchg pop mov mov fnstenv and push and addr16 stos scas lea inc mov inc or fsubp adc dec movsb add mov and pop pop cs adc fsub push xchg mov mov add sbb dec lcall jo mov add fdivl and loopne jb and inc xor and or xor ret mov in addr16 addr16 test mov das insl cmp inc inc in dec pop (bad) push (bad) or lret aad inc cmpsw pop out mov sbb mov xlat ja mov inc sub fiaddl out jo in shlb pop and jae pop cs sub push (bad) sbb (bad) iret adc xchg sti (bad) cltd xor cmpsb lea out inc loop nop push push pop xchg and mov mov fidivrl (bad) (bad) or and fdivrs pop adc xchg add jns and loope,pn imul iret lcall out mov mov scas daa ss mov shll (bad) or jb lcall out inc xchg insb aad push or mov sub les xchg push or outsl or mov iret std in clc push (bad) xor mov repz (bad) add mov sbb push stc cmp mov xor or jp es int3 and arpl inc sbb sub addr16 sbb cmp sbb shl dec add xchg jle das dec jae dec and imul xchg cmp xor fwait rclb xchg sbb ljmp mov jle arpl inc sbb cmp sbb sub int3 test or repnz mov data16 test data16 lahf lock and adc rcll cld cmc push movsl nop dec add push xor xchg add cmp and inc xchg lods jne leave lret mul pextrw lcall dec fidivrl iret sub pop fisubrl mov push and hlt mov mov outsl mov stc mov xchg mov in mov iret cmpsl xchg fstps push inc or xchg lea call xor mov subb sti xor mov or xor xchg add sbb (bad) sub out xchg inc lcall fwait hlt rcr insl pop cmp call or mov pop sbb sbb cmp inc mov cmp xor cwtl orb mov ret xor or (bad) imulb clc out lods add fldt mov mov and stos test hlt xchg out bound ss ljmp dec sti xchg fsubs fs es fsubrl imul jno sbb fwait dec packssdw inc mov xlat mov inc add shrl pusha mov cmp xchg dec xchg out ret sahf pop and mov lret or mov xchg pop js pop pop mov sub or and jb adc (bad) dec imul xlat inc inc xrelease add imul mov push cmp lods push jns daa mov cmp enter popa mov sub orb mov lods (bad) fldt push loop jmp pusha xchg adc xchg sbb and push insl fcomps in cwtl in pushf push pushf inc cmp imul pop cmc cs repnz jns push stos lret fldl roll outsb mov int push and (bad) xor pop sub hlt push inc sbb adc cmp dec jle (bad) xchg (bad) push (bad) loope ljmp sbb or std cvtps2pi or inc inc ds adc lock imulb orb dec mov lock mov in out pushf add sub jp or mov scas mov sub xchg pop sub xor dec cmp jge add mov mov or push pop ds stos lea aam clc inc pop add repnz sbb xchg pcmpeqd cmp fstpt cld (bad) and xor mov sub call cmpsl pop xor pop ret sti inc adc or add enter in and jb and inc in pop les stc jo icebp adcl sbb repnz dec mov notl int3 notl fucom int3 xor jae mov dec xchg icebp xor dec dec cmp mov sub sbb and loopw adc (bad) out sahf (bad) aad int3 test jg xor mov mov mov or movl aas test mov insl out dec das or aas or outsl and ret mov lods cli outsl and rorl cmp test data16 jp sub cmp dec sahf jbe xor and or xlat cmp ror lds jg jo movsl popf loop dec pop inc xchg (bad) outsl mov cmc into sahf adc xchg fldt cmp and scas add jmp xchg dec push xor push mov das lea repnz pop ret in add arpl xchg fldt adc jnp mov (bad) rcrl push sub fwait add mov incl dec fucomi scas sub add xchg fcoms gs sbb hlt ret mov enter les pushf dec aam loop mulb stos stos (bad) gs jae dec call call push add or mov fsubl sahf sti xor (bad) ret jp lret push movsl test xchg int xchg (bad) decb in (bad) mov icebp adc mov xor lods das cld loopne cmp test pop mov inc jmp popf mov outsl push shrl jp cmp (bad) scas les push pop fisttpll mov cmc insl xchg mov lods dec mov testb stos pushf mov xor daa test popf mov lahf rcrl pop cmp mov xchg aaa (bad) pusha hlt sbb sub fdivr lods (bad) (bad) cmp std jmp js and mov icebp ret aad (bad) clc jge in xchg xor mov push push (bad) in in jo ja adc xchg jg inc or sbb add dec mov jge or cmp pop xor cmc or push rcr mov repnz lea inc sub in adc (bad) push jno mov pop lds and sub mov imul pop push movsl mov orl inc rcll adc out inc daa fninit sbb jae adc pop push addr16 cmc ljmp or push repz (bad) mov mov mov mov fs inc add in adc outsl jnp mov cmpsl repz ret ljmp js call cmc cmp dec mov adc or lret sbb notb negl (bad) rcrb test mov addr16 xchg cltd inc outsb inc push int3 push mov jge out mov jne mov xchg pop mov outsl (bad) adc (bad) sub sarb sbb pop movsb sub jmp pushf call lret or lods sarl pop dec lret cmp xchg mov das cmpsb arpl and je push mov jp or pusha jae sbb dec test (bad) sbb jae push out sub pop pop jno rclb push (bad) sub dec xor xchg sbb test push jae push mov shlb nop stos out cmp fisubrl std aad jns inc or xchg pop xchg outsb stc mov xor push test cs pop jb push sub arpl movsb mov push (bad) jnp gs mov pop jg mov lcall loopne and pop (bad) mov (bad) nop movsl mov (bad) cmc push inc mov inc jmp jns fs inc outsl cld mov and jne jecxz mov lret insb loopne stos shrb jns das or xchg mov xchg lea xlat icebp into adc sbb ljmp sti sarb pop cmp xchg dec mov xchg pop dec stc xor fcompl xchg (bad) and test cli sub jge add pop sbb je cmp test fsubrs jo dec negb (bad) outsb dec decl arpl or jb fadds add dec xchg sbb mov bound push xor stc and stos es pusha pop push movsl (bad) dec cmp and rcrb pop add cmp lret out mov sahf inc decl lds jno jecxz and push testb and in int mov popa jecxz cs cld lea jne push jl mov insl nop pop (bad) cs sbb push xchg jnp les in push arpl scas pop fwait call outsb xchg fs in repnz sbb jecxz push (bad) jmp and outsb fdivrs incl cmc mov outsb pop invlpg adc and jecxz arpl cmp xlat clc test roll enter pop sub cmc fadd inc or or mov mov jmp xchg (bad) xor lds jp (bad) loop popf imull decl adc out cld mov les fnstenv mov mov shrl imul out xor and mov dec faddl xchg aam adc mov mul or cmp jmp lock mov push aad jmp stos jle (bad) xor cmpsb popf and jge leave jbe sbb jle,pt dec mov push adc mov mov sub lahf cmpsl cmp stos xchg inc mov aas mov mov lds mov add cmp lret insb push clc popa stos mov or adc mov sbb out xchg pop test mov repz cmp push lret popf test lea ja rcrb popa inc jp or jbe sub sbb bound insb sahf adc jno (bad) div out inc fcmovnbe inc fbstp fsub std xor push adc in das push test repz fdivrs (bad) scas insb jle lea inc in jne mov cmp inc sub inc stos jns fcmovbe sbb gs xor insb pop pop dec nop adc stos cmpsb insb mov in in dec stos mov insl test jl pop jmp mov sti clc mov dec or lret movsb dec popa pop xor test jno addr16 mov (bad) imul movsb inc mov nop out pop push fiadd xlat arpl jge pop ljmp add sahf fsubrs pop adc adc fstl jbe sbb scas repz cmp pop sbb push pop daa push jae jg pop rcrb bound les xchg xchg pop add daa repz xlat test xor or push and negl mov hlt pop dec push mov hlt lea jne es mov popa (bad) sub xchg flds dec sub repz mov idivb fwait inc push ja push or ret cmpsb xor int3 dec or in or fwait pop adc jge mov ljmp or and xor pop rcrl daa push out pop xchg imull jecxz jge jmp push push adc call (bad) adc jle push add repz inc sub imul mov and inc sbb jmp aaa in scas es mov jo adc outsb scas mov in loop cmpl out dec push inc xchg das (bad) fs bound dec jno lods cmp mov lret stos cwtl cmp push dec xlat fisub outsb mov fs mov sbb push mov mov sub fs xor xchg daa push mov andl dec xor repnz je,pn movsb xchg cli xchg dec push bound jns sub xor adc mov sbb mov push arpl mov stc mov rcrl jl jb in adc int push jecxz mov mov xor mov aas cwtl nop lea jbe lods icebp sti stc sahf mov (bad) push ret test enter cld inc mov movsl push sub in sbb repz inc adc in xor inc pop push sub jl xor xor and shl les (bad) mov aam ffree (bad) scas push push les sbb loopne (bad) repnz loop scas ror cmp jbe int movsl mov subl inc xor lret cmc jb repnz mov das add loopne out sub inc and in mov lods jns xchg sub lret xor push adc lods push loope and test push add jg scas dec xor or (bad) mov jge add sbb nop das daa dec pushf dec pop popf scas and or imull push pop sub lret in xchg popa add or mov idiv jge xor scas jge les pop sub pop sbb inc adc xchg (bad) stc sbb add cs mov loopne dec test and mov hlt sub outsl or pop add test mov lret and mov adc push adc lds nop shrb adc repnz jns pop inc lret (bad) push (bad) mov sbb xchg dec test mov mov add aaa add rcrb clc push adc push out pop push mov push cmp mov std mov rorl sub or sbbb std sbb movsl in iret pop mov ds and fsts mov pop push ja test or and cmp adc jle imul and adc imul mov enter in add pop mov fwait add js mov jmp xchg jo in cmp enter sub or lret bound jbe push adcl bound jg dec push push (bad) inc push mov inc in insb int3 mov loope mov std lock xor mov jmp dec jnp dec ds jae movsl cmp das push (bad) inc jmp pop outsb stos test pop inc lret xchg pop loope push sarl outsl out (bad) call aam adc cmp cmp mov push push xor daa cli out jmp add addr16 mov xchg rorb mov cmp sbb or dec loop jns lea mov jne into enter or call stos je mov and dec push or mov cld (bad) push lods mov pop add mov push xor adc xchg js xchg inc iret dec cwtl cli leave cli cli stc ja pop mov adc test movsl or pop hlt add xor sub xlat push push cltd int lret (bad) xor and lock aaa (bad) cltd hlt imul cmovns jne ret movsb and sub insb popa addr16 pop das sarl xor pop imul (bad) mov (bad) cmp scas test or add mov add inc insb nop (bad) xchg xorl xchg mov xchg fs jp aaa ret (bad) lret push lods popa xor mov test pop hlt lds js mulb fsubs out scas fnsave push call imul insl int movsb push das movb mov loopne fwait xchg icebp fildl xchg cmp in dec into jb movsb aaa push ret iret mov pusha fadd mov mov ror test inc repnz pop pop sbb mov push pop inc sub cmp sbb and mov bound dec xchg lods dec bound stos pushf fnstenv iret call inc lahf mov (bad) mov fsubrs and dec call jle cmp sbb jbe dec stos cs add popf fisttp xor es bnd fdivrs (bad) sub nop cli mov jmp jg xchg out mov andl sahf push icebp jg cmp sti jmp xor ret ja xlat movsb xchg cmc repz lock jl popa add cmp inc push (bad) call adc xchg mov mov cmpsb xchg add xor insb fidivr xchg ja ja (bad) in and ds test inc pop mov sbb fist fwait imul add subb stc sbb pop inc jne and aas sti push push push add test jge push xor lcall (bad) dec dec xorl push jae pop imul xlat out gs mov scas hlt insb inc jno fisubl and out sarb mov pop xchg jb mov adc sbb (bad) scas sub lahf data16 fldl inc push pop shll pop and dec idivb xor inc pop leave xchg aaa jl daa jge dec dec inc stos daa inc iret jno or leave dec sbb (bad) leave flds dec cmp add aad inc xor xchg scas pop in mov ljmp pop xchg and popf add cmp add xchg push imul (bad) testl loope pop jns or push cmp pop cwtl mov mov insb fwait rorb sbb adc in enter stos cmp popa test (bad) (bad) mov mov mov xlat pop aaa mov pop shll scas xor fs mov (bad) nop push adc mov cmp leave cmc cmp insl ljmp lods fsubrs adc jae adc mov jo dec xor out iret jl mov xor inc xchg sbb pop in jbe adc test lcall and addl rcll (bad) cmp jl int3 dec sti mov hlt test das lcall mov mov jno mov insb out mulb cli (bad) jae sets mov push daa subl dec pop ud1 lcall mov stos jno add roll mov sti jmp arpl sarl dec test sbb pop xor ss cmp push add and emms cmp xor inc mov arpl xchg cmp in enter pop lock xor jno movsb xchg fadd mov mov repnz addr16 pop cwtl ljmp mov mov or andl dec addr16 adc outsb sarb fisttpl xchg jecxz pop es dec imul jno in mov iret pop adc jne imul adc cld sbb rcll sbb mov sbb fwait xchg pop (bad) lret mov xchg mov out or push das (bad) scas stc inc in (bad) jge shrl idivb add or sbb mov jbe jp xchg dec imul std jge dec outsl mov or xor add in mov mov imul pop (bad) mov mov or mov sti mov cltd (bad) mov (bad) imul pop mov (bad) dec or sub scas pop adc fisub loope out cmp dec jl test add inc cmp pop lds mov and push push adc or sbb leave imul jp sub cmpsl int3 sahf xorl inc aad push shrl enter inc sbb std add sub adc lods test xchg mov daa call and movsb fstpt add add mov mov pop sti push int3 popa daa mov mov jecxz push rol repz shr add mov fild stos inc push std jns push leave into push leave push aad sarl mov loopne jmp and sahf pop stos pop push je scas inc push dec pop sbb push dec mov cmp stos jge cmpsb into (bad) mov test push (bad) mov sub jle sub add jge pop xchg and or sub xchg lret or mov adc xchg mov xor jb pusha std and repz sub aaa xor lahf ret aad int3 repnz cmp sbb mov or xor cmp adc xchg jg incl cmc inc lret (bad) fnsave arpl es shll sbb sarb test je jbe in imul jp cmp xchg fnsave sahf add mov lahf (bad) mov inc dec gs sbb cmpsb (bad) arpl ret cld cmp es scas fnstcw mov sub adc adc or xor sbb outsl pop dec adc es cmp jle dec mov cmc enter jne xor xor insl icebp ds xchg popf mov cmp cltd sbb rcll fisttpll sbb push dec popf imul sub lods pop aam push loope xor (bad) inc cmpsl add in movsl add push test fcmovne ss xchg inc cmpsb jbe push push mov fldcw fisubrl out add pop ja and jp adc add sub mov mov fisub js mov shll es (bad) mov ds jmp push stc xor loope mov fisttp push cmpsb popa stos pop lcall pop mov pop sbb mov js mov scas bound repnz inc xchg cld jl test push mov pushf adc and sub dec fmull jne cmpl frstor ss push popf les (bad) add jbe pop arpl inc and ljmp pop pop jmp sub lahf or lods jmp repz cmp inc xlat in push push push repz pusha js in lahf cld xor pusha inc xchg xor sub loope xchg jmp jecxz mov movsb dec fisubr adc sub xor push dec das jns outsl lods cmp push sbb cmovne test mov clc loop mov dec mov ds adc gs loop jae inc sbb mov add inc inc stc (bad) pop cld mov jp push add mov (bad) mov movsb cmp cltd andl add lock data16 cmpsb sub inc mov pushf jecxz sub rcll sarl pop mov les lret cmc xlat xor rcll mov sahf rclb pop gs ss mov lcall fucomip popa jge cltd sbb sbb out addl fidivr bound popa adcl dec pop data16 je jb inc sbb cld adc mov int3 stos adc enter xor (bad) imul cltd add pop ja xchg pop jmp inc cmp ds xchg cltd sahf test cmpsb fs adc pop xor (bad) js lea aas addps js xchg cmp movsb stos rol sbb sbb push xchg out shll push add fidivr fs adc pop lret stos xchg pop mov adc int out rcl imul ljmp ret stos xchg pushf adc inc inc fldt lods jno out sub push push mov cmp and movsl fwait js xor lret lea mov push push clc enter inc add adc sub mov in and and or or rcpps mov mov fmull (bad) out test test push mov add fwait push mov loope or add jne lret mov aad loope loopne xor mov inc fiaddl push push test jl push xchg pop lods mov xlat mov shl mov pop (bad) fadds repnz and sbb push insb inc add xor pop push or dec jae mov ds rol mov xor aam mov pop xchg fwait pop jge sbb mov outsl inc dec cmp sahf cmp and test scas mov xchg or and lock xor xchg les imul sbb js lds (bad) or pop mov iret pop cmp sar lret mov sub sub mov pop add sbb call into adc jmp push xchg (bad) adc add adc mov cmp jns mov rcrb loopne ret sbb popa rcrb sbb cs (bad) mov mov xor addr16 ljmp xchg loopne and subl mov in push lahf cltd movsb mov xchg sub std lea jnp xor inc jle aam gs (bad) cmp xchg fs xor add std and add push and inc lahf andl cs test sti mov aas bound and out cli icebp (bad) daa sub mov mov inc push inc push (bad) dec jnp inc cmp inc adc mov hlt mov lahf add ja dec pop int ljmp sub sbb and inc fcomp outsl out cmpxchg out into add mov lock cld mov mov pop out or jge enter bound sub jb (bad) mov pushf sbb out inc mov xor push push (bad) loope xchg jg mov insb call ret cmp sbb xchg and call loopne fidivr and inc jge outsb pop cmp test fbld ret sbb cld xchg xor cmpsl push mov ret cmp stos orb mov mov sbb in jg mov repnz std fdivs jbe adc sub ds cmp das mov mov cmp xlat or dec xor imul cmpsl (bad) cmp jp fisubr mov push pushf pop lret inc inc imul shll sbb dec pushf adc ljmp pop mov sub in out sub mov loop insb lea sti inc pop push outsl fnsave inc mov mov leave lock push std push inc mov into inc push xchg pop addr16 sub lods sahf inc adc sub out lret lcall or mov cmp adc adc xlat and jns fmuls ret cmp lret xor out das test inc shr mov push mov add rolb push leave push pop xlat jle fidivr pop mov fwait cmp push iret mov sbb dec inc jmp stc xchg inc xchg and out pop imul adc out mov rcrl pop orl mov push xchg imul xchg cmpsb loopne (bad) call fcomps daa adc inc dec inc nop ror (bad) or icebp xchg cmp outsb xchg popf adc mov xchg stc mov ficomp jno popf pop mov in mov xor add add stos add xchg pop pushl cmpsb rorb sub inc fistpl fstps gs adc mov adc sub or dec pop xchg add subl cmp loop dec mov push xchg sarb js call inc ja ret cmp lea pop or lcall adc lahf (bad) icebp in push fldcw jne and je pop push cmp add add pop inc xor push out sahf pop jbe arpl negl mov cmp hlt xchg sbb dec dec (bad) ficomp mov nop mov mov das push test lahf add daa cli mov ja gs jae pop xor and push adc cs bound mov scas call sub mov and js jg pop inc in adc xor sbb cmpsl (bad) jne rcrl mov test (bad) mov mov jle inc mov loopne or out rclb jne pop fild mov daa prefetch rcr pop cs addr16 mov lock dec fisttpll xchg mov or jnp cmp jp std in xor xor and dec fdivrl movsl cltd or pop inc xchg mov inc test cli or fild jno test je mov mov mov xchg outsb shrl xchg jno sbb jno or mull mov xor hlt add xchg push jecxz pop repz xchg out stos daa es pop jne inc pusha lods hlt mov mov inc test (bad) stc mov shr fidivl aaa cs inc subb scas nop sbb das faddl loop pop mov in xor cmp mov stc gs ja fmull pop adc out mov cmpsb push adc (bad) jne decb jle arpl mov sbb xor repz jbe sbb movsl xchg test and push sahf jp jae,pn das xchg cmp lods sub and daa add inc inc xchg sti dec jmp xchg or or movsl stos daa fs push xchg arpl iret leave pushf stc subl imul rcrb adc addr16 xor insl scas dec (bad) mov add jmp dec mov imul stos sub xor pop mov pop lahf mov std lcall pop jnp push inc subl jmp lahf in fwait sahf movsb popa cs push fst or rorl jb sub push mov xchg cmp cmc dec test (bad) mov arpl dec ss aas mov push out sti bsf cltd enter adc fxch sti stos ss fnstsw adcl push (bad) xchg mov (bad) sbb test pop iret xor inc fimul push mov mov es mov imul mov jne test xchg xchg add lret mov inc add cmp les xchg pushf pop inc sub addps aam jmp fistpl jle outsb in das and hlt lahf sbb scas dec cmp cwtl mov cmpsl sub int jp sbb lods movsb add add xchg jo rcll orl or pop add xchg dec push jg pop mov and jbe jb mov sbb ret push dec (bad) mov call push xchg (bad) addr16 mov cld leave dec jbe mov test out out xor mov test cmp xor cld inc mov hlt movsb stos sbb pusha faddl inc mov sbb (bad) dec in ja mov pop jl (bad) xor scas pop int hlt js aad int3 jle scas repnz inc xor push sub divl xchg mov adc fwait dec lret (bad) je in and dec (bad) dec int3 push aaa outsb (bad) xchg mov xchg in fmull and lock adc movsl in fbld add mov imul mov test cmp mov decl ljmp sbb ds popa fstpt rorb stos mov push or xor fnstsw xchg mov pop cld popf (bad) jo jae stc xor enter daa decb xchg (bad) add push jno xor adc sbb mov or push scas xchg jb loope in out adc push or dec cmpsl mov push cmpl jno xchg icebp je xchg scas dec sub add cli iret sub sub xchg adc mov scas mov scas scas (bad) outsl mov xlat shrb insl stos mov inc pop es pushf mov icebp lds arpl (bad) and mov int (bad) repz iret repnz mov jle sti ds xor xchg (bad) jbe push aaa mov in cmp xor xor pop xor stc (bad) mov cld mov add aam idivb mov cmpsb add sbb mov in ret mov ret inc or (bad) jne pop pop cwtl inc inc addl adc fs push repz shlb mov sub cmp ja cmc aaa (bad) lcall jge push adc out (bad) iret jmp ret cltd out imul lret and jle aad xchg jecxz xchg (bad) mov fwait push mov add in push add push push out cmp shrl call in fs lret mov pop cs fnstenv icebp add cltd scas add push xlat inc addr16 jle mov adc je ljmp sub inc add jge xchg dec loopne dec adc pushl push test mov insl icebp int jb (bad) out (bad) out mov push imul repnz je dec add or sbb jae xchg add cmpsl sbb sub popf pop enter cs dec adc pop mov sub es mov sub sbb les mov cmp or into cmp sarl cmpsb xchg mov inc push sbb cmpsl daa pop in gs xor or icebp cmpsb mov les jb (bad) ficomp pop pushf cmp (bad) lret and mov pop dec adc sub test and dec mov xor cwtl and (bad) in mov inc (bad) cmp aaa rcl mov idiv aaa pop lret mov (bad) (bad) fcoml or sbb mov add mov sub mov lahf fldl2t (bad) icebp and sbb push fidivl sbb bswap mov (bad) loopne xchg das sbb icebp sub adc js data16 sbb xlat into jbe in mov add adc loopne je ror dec ljmp js or sbb dec jbe insl cmc je fldenv add or sbb mov imul xchg push ret lahf int jo and inc fcoml sbb sub jb xchg dec mov pop and pop push push mov mov fidivl mov mov scas scas push pop add pop mov mov push xor push into sub out sbbl cmp mov mov add cmp push frstor je cld xor imul lds out movsb lret or or adcb xchg repz ss mov add adc divl cmp pop xchg idivl in cwtl mov scas sub test out adc iret stos mov dec adc cmp in les insb xor mov fs (bad) and jp insl ja shrd imul sbb enter sarl lea imul jns pop sub push fs push shrb popa or add cmp test cmpsl fcoms ss cltd outsb inc les sub (bad) fmull mov call (bad) mov or sub mov add and xchg mov xchg jnp lret mov je pop or dec sub or pop (bad) adc pop vshufpd xchg fs out mov xor mov pop and mov mov xchg int test mov adc or int jge int3 out jb shlb push mov movsl sbb push xlat pop jbe mov rcll popa jae mov arpl pop scas rolb lock rcrb push mov pop push push in mov push fnstcw or pop mov addr16 mov inc xchg cld add stos (bad) into or jmp mov div add sahf push (bad) jmp jnp and add add and pop test insb mov push pop clc cld xchg rorb sub movsl sbb dec sub cmp aaa sub sbb cwtl sub pop aas cmp les inc mov add ja aam and pop loopne imul mov pusha xor movsb jb push clc or jae (bad) pusha push add out scas sub push pop inc sti and xchg sub sbb sbb jno test lcall mov pop mov jl test fidivl loop mov sahf nop out or fwait jmp pop dec iret enter xchg aam cli inc lds add outsb xchg out cli lds xchg mov out xor in fwait push lret (bad) mov mov loopne je mov or dec lahf dec test cmp mov mov pop pushf rorb ds fimul jbe loopne or push xor (bad) push mov xchg adc adc push push adc mov mov sub sub test lods in dec cmp push adc test iret nop jge movsl cwtl push in add popf fbld cmp mov pop imul xchg jmp cltd cmp shr (bad) push ja sub mov fwait jge lret test out xor cmpsl enter mov mov push pop jmp mov push outsl cli je push add mov inc daa pop out jnp (bad) xor jl stos je mov pop shrb add insl int3 popa sub dec mov idivl notb das mov sub (bad) das jmp iret adc ljmp mov repz mov sub add (bad) jae jo lods aas mov enter xor and cli (bad) and sub push ds hlt in dec adc ret add test push sbb or pop push xlat cmp xor les scas leave fwait mov pop out jbe push mov jno inc xchg aaa inc clc je pop cmpsl cld pop push dec (bad) repz out cmpsl incl pop xor jne sbb aaa jl mov push xchg mov xchg cmc xchg jecxz in or add in or pop into pop in add sub jl stc mov (bad) xchg jne and cs push add bnd pop inc mov lock dec push (bad) mov (bad) pop mov jmp rorl (bad) mov insl int3 (bad) ss adc cwtl add fwait adc push adc xor notl jae fcompl cmpsl in or in push adc push (bad) cmc jge sbb loope aaa dec xchg stos mov add mov imul sub lods std mov jae jmp mov iret sbb xlat std (bad) hlt out dec mov es jmp loopne lret int3 ret mov outsb scas fstpt popf mov js iret push cltd sub test test lcall mov repnz pop pop dec push mov sarl test aaa push je test jne stc sar pop les sti jg mov sbb xchg fistpl loopne cmp cmp dec icebp nop push aam xchg mov push js jle push jg jb movsl dec fwait inc inc jecxz lds push or cmovs jp xchg push cltd movsl subl lret xchg adc aaa and mov addr16 mov push lods lahf test cwtl or push sbb addr16 insb stos sub xor inc inc cmp in dec sbb jnp mov popf add sub mov aaa leave das das cmp call aam push ljmp pop jae lock mov loop nop je (bad) (bad) loopw sarl inc sub cwtl push stos cltd jp mov sbb push sbb fwait out test leave push test fild sarl xchg jle push pop mov adcl push popa mov jle xchg cmpsb sbb into add mov push mov adc dec adc ds fstpl cmp sub pop xchg jo lea xchg mov xchg out cli popf mov xor cld pop idivb inc xchg (bad) insb movsb cli sub pop push arpl sets inc in outsb pop lahf mov mov xchg (bad) mov or jne cmp jecxz mov jae adc jo sbb mov push xchg loope roll shr stos cli fld mov pop add loop xchg cmp sahf orl add icebp xorb popf stc int ds hlt ss test aas cs test arpl std adc jg fiaddl dec add fsubrl fs pop adc jbe mov push lods xchg add sub xchg add jp push and clc dec mov jno mov insb enter cld (bad) (bad) xchg xchg adc cmp mov cmpl ljmp lret xchg mov clc inc rorb knotb sub inc mov jl cmc scas cmpb (bad) enter fwait lret test mov adc and or int xor jg es mov mov icebp test cltd xchg pop push fcomip mov ljmp ja sub xorb arpl dec psubusb pop lods movsl mov movsb or imul mov dec mov mov inc pop push rep push and dec lods push loop repz cmp sub (bad) mov sbb adc cmp stc and and (bad) adc lret or sbb repz (bad) scas fwait add in pushf push jge xor jae repnz jne andb lods andb mov and imul xchg stos sub in pop sbb cmovp rcll test cs cld sub out popa xchg aad dec (bad) in out sbb jl mov scas xchg data16 hlt pop test ds out subl or pusha mov jbe iret sbb push sub adc insl (bad) ds xchg and ja fwait and mov lods push mov push and mov cmp pusha leave out mov std nop pusha imul sub test (bad) lea popl (bad) or mov (bad) negb lock or sbb test jae and mov xchg xchg or jl es clc shr (bad) mov test aas fadds stc and push ja xor and add cmpb aas xchg push sti sub movsl out add xlat mulb cld test fcompl and mov push fdivs jmp aam jl daa xchg insb ret cmp cwtl jl pop std sub jno ja mov mov cmpsl mov pop inc lcall push out mov push pop movq mov mov lea (bad) jge pop pop jmp add je jae (bad) jmp push push add mov enter in push mov adc adc cmp popf shrl lahf mov ret bound adc icebp pop (bad) out outsl push cmpsb aas dec repz jne xor in pop hlt (bad) in fisttpll mov mov pop dec cmpsb lahf cld ret cmpsl int3 loope (bad) mov jb out mov hlt add bound (bad) addr16 mov addr16 add movsl and stos xchg scas dec js loop mov es mov lea push cmp fisubl jne jae mov xchg in out push (bad) ljmp in loop jl outsb sub adc push dec lret pusha mov or jl push lea add push loop inc xchg sbb sbb call xor mov lods cmp push cmpsl mov jg vpsadbw xchg test xchg cmpsl mov fisubl mov or cld add int3 fs mov popf mov (bad) or push add adc scas enter sub xchg ds loope jp mov scas ljmp adc mov pop outsb jle outsb push out add push pop fstps mov imul inc cmp (bad) sub into icebp add std inc jmp data16 mov sub sbb stos mov movsb push sub movsb ror push das cwtl popf mov cmpsl push testl pop lods shrl cmp dec push shld adc out mov pop hlt mov dec pop pop mov push les iret loop fwait pop mov out aad cmpsl push or xchg cmp insl xor mov mov xchg outsb call lret sub xchg dec ret lods hlt sub lods jo cs negl sahf lods push (bad) in test cmp les pop ret jae ds stos mov mov push cltd sar cmc mov or push test lahf (bad) mov dec sub inc stc (bad) loope in lahf ljmp xchg lods scas mov dec mov sbb pcmpgtw call sub das bound or es xlat fistpll dec mov lods mov push and aad inc sub adc aad dec sub loope out sub aad dec enter sbb add mov inc ror imul push pop dec aad aam pop dec xchg or sub popf inc pushf int3 cmp xchg shrb lock outsb inc imul mov pop xor xchg gs lock cmc aas inc push mov loope xor scas mov loop mov fs repz push push push movsl mov subl push cli hlt (bad) xor imul lods inc xchg or xlat lods pop (bad) test (bad) repnz sub mov xor in (bad) stc and and scas or int or xor xchg out arpl jb cli jns mov movsl jle subl inc xlat adc sub aad adc pop dec test mov xlat ror xor adc xchg (bad) fs loope,pt mov adc push inc dec push adc sti xor out mov dec xchg xor bound inc adc mov ret xlat jno lods jnp fist mov push popa mov adc push add sar stos (bad) sbb (bad) and (bad) into insl ror sub out (bad) xor nop pop push pushf push sbb mov xchg sbb add inc das lds xchg add into scas push push or inc fs cld js out int xchg inc cli test pop arpl xchg pushf xchg addr16 fnstcw shr jne out cmpsl jecxz add call test sub cmp popa sub pop pop (bad) mov mov in xchg xlat mov ds mov push pusha jl or sbb jg inc push mov cltd push inc cs mov lea clc cld nop les xchg enter gs adc ja mov enter adc stos aaa inc movsl mov xchg xor cmp mov sub test jmp mov adc inc cmp ret and rcr push mov insl mov (bad) call mov sar gs cmp out dec int3 pop cmpsl leave stos inc sbb sub stos add cmc mov adc (bad) sub aaa adc mov scas xchg insb push push daa push outsb popa adc aam repnz es dec or pop mov shrb pop or or jo inc mov pop adc int xor pop mov lret shlb js (bad) (bad) test cwtl inc outsb scas test xchg aam mov and popf or jnp adc ret sarl pop in (bad) int3 fwait xor pop inc inc dec insb fwait notb stc add aad jae lcall or add lock sbb pop xchg lahf mov sti cmp rcrb out or mov xor xor pop call xchg mov loop and rclb fdivrl cwtl movsl adc outsl arpl es jnp fwait into sbb in out xor pop adc mov lods xor sahf aam xor es movups pusha push cli xor in jmp mov aam sti mov aaa scas and pop repz cli sub sahf add (bad) xchg xchg into scas stos jns cmp ds mov inc and fimull push (bad) mov push (bad) pop mul shrl xor mov mov shrb outsl xor dec adc fwait or cmc int push jb mov add pusha cmp adc mov push sti jbe jp pop jg mov inc and in dec mov fisttpl pop push add (bad) add pop mov sarb pop ret js mov iret xor dec ljmp or xor xacquire xor jge imul pop dec adc lea xor aam lahf roll xchg xor ss mov int mov dec dec (bad) push cmpl cli in cld rcrb pop bswap push lcall aam ret ja push mov insb and mov mov jnp jge mov cmp add sbb push shrl mov fs lret dec mov add inc dec loopne pushf inc outsl mov aas shrb cmp sbb sub jg mov leave pop xchg cmp xor negl and imul icebp data16 mov int3 push push (bad) arpl mov stc add push inc test push inc repz mov call push xchg xor xor and xchg sbbb imul adc andl inc xor addr16 add jecxz lcall jae push psllq int fmul ret add cmp (bad) or push outsl movl xor xchg xor mov jge (bad) mov fisttpl aaa sub lods dec push addr16 cmpsl xchg in adc jns or test fistpll insb shrl movsb in leave fwait (bad) icebp sbb mov lea pop pop (bad) and outsb sbb xor xchg mov pop adc mov mov sbb movsl or (bad) cli int3 stos lds or (bad) ret or xor jno ficoml jb ss rcrl jbe iret push repz test xor nop loop leave arpl rcll mov paddb es pop cmc pop sbb aas lods in mov clc jle fsubr mov out lahf stos mov sti jno addr16 push xor xor cwtl iret ja jb add sbb push rcl mov cwtl and push xchg jg mov (bad) arpl xor aam sarl test out sub xchg inc jb fcompl mov sub xchg scas fucomip mov and outsl push adc mov ljmp movsl add call jb pop inc xchg ret outsl push push cmp cld mov cli mov mov scas outsb jle mov pushf lret (bad) jp stos fstl add sbb mov dec daa rcrb sub fst js pop mov sbb or jne mov xchg fdiv xor cmp inc pop adc cli push fisttp scas xchg mov cwtl xchg mov popf cmp cmpsl lret stos outsb adc push cmp lock test push aaa cmp test lcall (bad) jmp or push sub loope rcll shll dec adc inc mov jl push push xor in add inc sti jb sbb or ret push dec inc scas aaa mov dec add repnz bound fist sbb pop daa ljmp pop mov imul mov lahf mov cmpsl mov stc out repnz inc test mov cmpl cmp jb (bad) sub mov jne loope shl push mov and mov ss or dec stc jns jb pushf and jb ja dec xchg mov sbb inc cli sub (bad) iret frstpm(287 scas notl pop nop mov insl cmp push cmc cmc cs cwtl gs outsb add into loopne fmul jecxz and adc cmp leave jns scas les fnstcw (bad) iret popf push mov mov mov in sbb fwait aad add fmuls imul jle stc cmp (bad) jo or xorl sbb loope loop (bad) mov push stc inc jl sub pop (bad) iret test out add push inc fistpl and add decl jp pop cs idiv nop inc (bad) jmp int in sub fisubr cli enter loop inc aam loope cmp lock repnz pop mov dec pushf scas sub push daa pop xchg fbld sub pop daa mov out pop inc out push sti push mov or adc xor or inc and int3 jmp adc in aaa push mov int3 inc mov jno mov andl jl hlt loope inc cmp loopne and test (bad) sahf nop and dec out xor jg or mov (bad) ds mov sub cmp mov stos insl ret enter outsb ret adcl mov ret call xchg rcrl and aas sub xchg jae inc adc lds or adc dec sub movl sahf loopne push outsl lock bnd jno jb (bad) cmpsl xor or mov clc cmp int3 pop and call pop jnp cmp mov mov mov mov push (bad) push xor cmp pop repnz daa (bad) sub iret lods dec popa pop shl (bad) mov jge popf std jl pop push lcall loopne test adc shlb pop pop cmc cwtl lods fs sub je or xlat mov rol fstp pop xchg push push inc pop xchg jno cmpsl rcrl imul aad mov jb cmp aaa and adc sbb je mov sub add call pop xchg lret jg daa mov das mov das cmpsl (bad) xchg scas inc stos inc and xchg mov arpl add jne push mov insb cmc pop inc adc push xorl (bad) mov sbb and xchg jmp mov cmp push cmpl xchg repnz call pop cmpsl nop gs sub push mov hlt in pop adc imul ret push adc lret (bad) lret adc xor lea iret fsts fs outsl jl clc jl push adc cld mov in mov daa sub fdivrs icebp loopw mov mov insl inc (bad) jge add pop mov test add loopne jns js js pop aaa inc das aaa cmc adc sahf sbb mov std aam lods je (bad) ror sub xchg pop mov mov (bad) clc dec push pop iret mov mov rcr mov cmp movsb jmp push cmp pop sbb push push out cmp or mov fisubr cmc ret loope cmp movsb orb js dec and or dec mov clc stc imul sti sbb fisttp shrl ja shll mov stos popa nop push push lcall mov sub add xor imul (bad) js inc xchg xchg and (bad) fwait (bad) cltd mov in jp dec mov dec inc dec rclb call mov mov aas inc jb push ficomp imul sub push push sub cs in in inc fnstenv and dec pop rorl add cmp leave in push inc enter in mov xor jb dec or mov mov aad jae xor fidiv push (bad) std std aam or nop fcoml mov adc pop push xor enter mov test outsb cmp out inc adc in lods lret sbb lret or addr16 shrb xor int3 jo pop xchg mov (bad) repnz inc mov test mov inc loop and and dec int3 push insb inc mov mov lret dec cwtl xor lret (bad) (bad) call push mov sarl scas mov jl es and mov fwait mov mov lods xor or daa int mov mov inc mov bound popa call shll pop lock inc xchg sahf sbb mov sbb inc sub dec cmpsb fisub bswap jp cmc cwtl jne in jne adc and stos and pop imul jbe insl pop orl cli mov jne sbb inc xchg jmp movsb in out in dec (bad) xlat ljmp sbb js adc cmp add movsl rclb fs ljmp jns (bad) fisubr jnp fimul (bad) loopne xchg cmpsb sub jne xor insl inc cld roll daa add or push mov mov lods and out scas rcll test add cwtl inc and stc gs fsub mov or sbb lods xchg test inc (bad) dec repz or mov mov aam adc ss jno out jo ljmp mov ret lret mov jb mov add push push inc pushf pop repnz enter sub fcmovnbe pop gs xchg mov jne fistl hlt gs pop test cmp imul jp sub mov movsb jno mov int3 aad pop push mov mov push es cmp push mov xor push scas mov das xchg lds xor (bad) xor repz sbb and roll data16 pop shr aad sbb and popf pop sbb aaa push mov shll jmp jnp mov lret xor fs outsb scas jbe dec xchg cmp daa mov stos repnz pop sar jmp mov lcall pop add ljmp out and dec jecxz sbb fsubr outsb in nop mov cmpl aaa push mov inc sub mov push xchg inc dec out aas das leave out lods imul sbb sub push cli aas mov or mov enter clc push xor push jb pop adc movsl test jne jo mov sub mov push lods aad and push sbb xor dec mov sub rcrb mov pand pushf add (bad) cli fimull imul outsb fiadd inc std add loop movsb cli lret mov popa and jle iret mov testb push adc jno inc pop xor inc mov je rol push fstps push mov fcompl je incl sub movsb jmp pop pushf push (bad) xor sti add sub je add pop ds cs insl xor movsb sbb mov imul je fdivrs and mov leave mov mov add repnz (bad) aas sub sahf mov (bad) (bad) loop cmc pusha mov mov cmp enter imul fnstsw (bad) (bad) cmpsl jns add leave xchg stos jae or stc mov inc fcomps push push ficom mov pop push sub jns mov push icebp or sbb cmp mov ljmp (bad) shrl and fcomps pop divb inc inc xlat iret vaddss (bad) (bad) sub les sti fstps pop push jne hlt and shrb pop adc pop lock je rclb dec mov cli dec add stos gs loop push fs call inc dec or push jb mov in stos or iret cmpsb iret insl inc mov out scas repz dec in test les fs es fldt cmc nop xchg sub in adc xchg nop dec loopne and push cli push add cmpsb pop or fstpl dec je add pusha or inc jnp sub lret jo inc data16 mov mov mov jge,pn call push xchg or dec cmpsb jge fiaddl push sbb test inc out sti mov loope out cmp ret mov sub ds in fcomp xchg xor push mov pop push push and adc push lock idivb push adc es jbe cmp xchg cmp bound mov or sahf js or mov dec xor cwtl and in (bad) cwtl push inc jnp jno daa jns jbe js rcrb cmc inc bound fnsave jnp sub gs dec dec jg fstl cmp xlat mov (bad) clc rorl push push pop jecxz adc test dec sub shll lea push rcll pop pop out loop push mov pop jp pop lret je pop push loope clc cmp mov mov cwtl cmp mov (bad) fldenv mov jg xchg lea xchg xor test clc jmp sbb enter sub sub (bad) in sbb inc and mov and xor mov pop pop push lret mov cmc sbb or in bound or pop stos fidivr mov or push or sti ja jbe fsubs mov dec pop sub mov hlt leave or jecxz (bad) cmp out jmp bound jbe push shlb sub into mov pop scas jmp (bad) repz dec and fdivr and xchg ss xlat in ret and cli add lock xchg pop push clc mov xor mov fnstenv jle iret pushf mov aas xorl in inc int dec push add dec jae pusha add jno outsb test add add or (bad) je jle mov shlb or test cmp fcomps or cmp or int mov sub push xchg gs push and and stc sub sarb std rclb xchg push dec sbb imul rcl fisubl enter ja js scas out sub (bad) mov dec es add dec mov in xchg push pop cmpsb sub movsb repz lret xchg pop jl mov mov inc cs push pop pushf mov (bad) xchg ljmp outsb mov lea fwait pop lds test jo cmpsb cmpsl or shrb fidiv repz cltd in cmp mov xchg cli dec cmp cmp ficompl cmp inc mov xlat dec rcl mov lcall adc fnstcw pop lcall pushl in and scas lods cmpsl imul xchg sbb shll fnsave (bad) mov cld push or push cmpsl loopne lahf popf in aad sarl mov call inc push gs xor stc pop dec inc push inc idivl int les cmc addr16 sbb dec lea jp (bad) mov xor xchg (bad) push (bad) jae icebp int3 loope jmp sbbb cld cld push test xlat (bad) cmc inc adc jg mov jmp xchg dec bound in and gs pop (bad) adc mov das cmp repz sahf out push xchg rcl lock ja cmp cld adc ss jae leave push adc out xchg xor (bad) rcr mulb sbb pusha mov or sbb xor xor jl sbb jge stc xchg cs enter ljmp xchg xchg rcrb mov jg in cmp xor ja call sub mov stc xor dec sbb xchg rclb js mov xor cmpsb repnz push pushf mov push in nop out xchg pop stos inc (bad) rcrb (bad) cmpsb mov mov pop (bad) sbb loope int xchg repnz jbe in std mov lods xor inc cmp mov in mov sub or sbb sbb mov pop cld add ja stc or leave (bad) dec and daa lds test (bad) cli es (bad) ret fcmovnu jo ljmp shrl cmp fstpl mov xor inc xchg scas inc pusha rol nop jns dec test (bad) xchg push dec outsl mov jo lock loopne xchg xor add cltd stos scas push mov out and (bad) cmp push lret and cltd mov inc jecxz xor adc xchg (bad) mov push fildll cld scas pushl dec push jl mov testl int3 inc and in pop dec stos pop cmpsb (bad) (bad) mov mov icebp movsl jno push cltd gs pop dec js outsl xchg xor repnz mov test (bad) xchg sub inc push pop dec cmp cwtl ja dec mov and pop xor xchg test fwait pop inc jb in sbb adc xchg lret cmpsl lahf (bad) jns fnstcw sub sti adc lret adc lret xchg push leave es (bad) divb jns (bad) imul add lods xchg nop ds or in dec add sub dec rcll aam adc jg cmc addb add pusha mov add lea mov xchg inc leave pop das daa fdivp in push and int3 push dec xor pop push cmp (bad) jbe frstor xor ja mov aaa fwait or mov xor fst aad gs arpl and and (bad) or cmc mov inc test mov in movsb fdivs jbe jae mov loop mov enter imul mov xchg push mov or sti dec arpl mov mov xor dec (bad) cltd mov and scas nop and movsl mov fbld pop faddl enter (bad) je pop mov mov cli insb and and sbb xor sarl sub push and popa outsb adc cli movsb ret xor loope xchg es popf shll rorb lods sarb aad and movsb stos repz out (bad) and test jbe push bound js xchg mov inc daa xor dec mov adc out or sub and in sub aam adc pop mov leave mov les testb pop pmuludq daa enter or std insl xchg xchg dec stc adc sarb mov mov mov sbb sub dec popf xchg fldenv popa leave outsb cmp pop dec lahf sbb arpl pop push insl sbb adc popa inc movsb test jecxz sbb std lock js fimull je mov insb int3 (bad) sbb imul inc (bad) pop add xchg clc stos aam adc les int3 nop movsb cmpsl jle imul add sahf bound mov inc xlat insl mov test dec cmp scas pop inc xchg (bad) into mov cmp std movb mov xor xor sub xchg xchg xchg and jg out lss mov jg cmp cmp std pushf sub inc out mov mov mov or imul cmc std jg xchg cmp icebp and (bad) bound (bad) fisubr jbe add sub adc mov aam inc sbb mov daa mov das stos mov lods pop clc adc push pusha cmp jle incl ret pop in fldl shll sub push fcoml adc mov xchg sub movsb mov mov (bad) pushf pop xchg mov int3 jbe pop ja mov push sub mov inc es stos icebp push mov xchg cmp fisttpll dec add dec mov jns nop push das cmpsb loopne je mov out xor pop out jmp ljmp pop (bad) jbe leave jbe out push lea xchg and test or psraw mov call test (bad) mov mov dec mov cmp sbb sbb rorl out fwait (bad) sar push add sbb leave cmc jno jne cmp sub push jecxz lret fwait pusha pop dec sbb dec mov ja cltd sarl in jp and in aad outsl xchg add mov jae sti cmp mov leave roll jmp pop add jmp test in rcrb add xchg xchg and outsl call sbb (bad) lock in adc mov arpl pop lock push (bad) stos dec sbb pop jne pop mov dec pusha pop lahf adc pop sbb in pop jge sub popf xchg add bound out pop lock std cld stos enter push stos xchg jg clc and test or icebp push aas clc mov inc repz push shll jns dec inc xor lds xchg push sub push lret fidivrl dec lea in dec add (bad) xor test adc in (bad) mov xchg imul add pop sub inc dec jmp pop cwtl ss daa jl sti push nop jg cmc pop dec ret mov mov xchg xor pop jne orl push (bad) add pop loop sbb mov int3 adc cs cmp ds mov ret push mov enter mov testl repnz mov pop sub roll xor and shll sbb cmp int sbb fst pop repz sarl outsl arpl test xor push sbb pop ror aam sub mov xor (bad) clc mov dec xchg cmp imul cmc mov in sbb adc js (bad) std xlat ret and xchg jl ss or cltd imul fs in push cmp inc and mov adc cmp ss push mov add (bad) mov cmpsl dec lds mov pop xor pop or xchg lret in adc and fs js push jne (bad) pop lds dec mov test and jns (bad) push pushf roll pop fwait adc sbbl (bad) cmp inc faddl loop call stos xchg shrb lock jle,pt cmp addr16 mov pop add push lods and mov xchg inc aad test mov cmpsl push mov jno popa addr16 sbb jl jg jbe (bad) (bad) hlt mov xchg or mov add and je out dec xchg je out out enter push dec mov mov and fadds out sbb cltd das cmp mov sti and sub clc push inc cmp xor cmpb cmc loopne cmc js cli std jo cmpsl in add lret jb jecxz,pn sbb xchg test pop pushf xchg pop in lods test adc jno out fstps inc xor mov frstor test mov leave and aad dec pop push adc push ret test jle push inc xor sub rcll mov fsubrl xchg (bad) xchg adc sub cmp pop adc mov mov out bound sub out sahf sbb ds mov add (bad) icebp rcrb xchg fdivrs cs add pop fidiv test insl xor fiadd jnp pop aam and or lret lea sub enter lods jl pop adc ds fsubrs loopne cmp dec xchg or scas adc pop xchg add xchg out sub push pop fldcw xor mov mov shrb cld mov in adc (bad) iret mov sub pushf cwtl test mul mov mov or or ret push gs nop in sub jle fmuls hlt push or and cmpsl add call cmp dec sbb fiadd push inc cmpsl mov xchg es (bad) into popf mov hlt cwtl fdivl leave and adc push jp jb cmp jge loopne sub call xchg jb push mov xchg inc ja mov and pushl xor adc jo dec out dec scas scas push or xchg and dec xchg inc dec test imul push or xchg dec pop adc sub sarb imul sbb and adc mov sbb aaa lock lods jge add mov dec mov cmp mov push daa mov (bad) cld pavgb insb scas or lcall adc mov lds jmp in inc inc out data16 ja adc dec ds adc jnp,pt ds xchg sub cmp cmp jmp add sub xchg or ret das bound pop cmp add pop mov dec push pop ja cmp mov pop nop (bad) and clc out and fisttpll outsb push or inc jnp and sbb xchg cmpsb pop lret nop push pop nop sub mov out adc repnz ljmp stos xor test pop lock or mov rcrl mov mov call lods (bad) ss inc jnp in mov push rcrl sub xchg cmp cmpsl mov add mov popf and pop test dec negb fwait loope add rorl add aad mov popa xor (bad) pop aad sub repnz movsl sub add (bad) dec adc add movsl arpl or and inc stos push pop and int fist loopne in (bad) mov inc rorb rcl int mov xchg cli and mov jp sbb add sub loopne aas mov mov adc push pop fnstenv inc xor push cld shlb pop rclb in mov (bad) test or jge in cmp repnz incb (bad) pop inc imul ss pop pop mov mov and xchg bound je scas mov repnz iret pop lods adc push mov out jae out es addr16 mov js and xor idivl adc pop mov (bad) lea or cltd or pushf sub or rcrl inc sbb sub andl xor and movsb iret daa iret (bad) pusha pushf and jb inc mov cmpsb (bad) aad call rol xor sub loop mov jbe xchg xorl xchg cmpsl repnz pushf sub add mov sbb js dec xor dec test sub pop jecxz out cmp outsb pop and mov jmp inc mov outsl (bad) sbb jp cmp aad int inc (bad) ja mov call cs and jae insb mov rorb cmp jbe sub jnp add jae dec xchg pop pop frstor out dec xorl push (bad) aas inc xchg cmc fbstp pop stos (bad) enter mov gs push ret push cmc add sub or push xor icebp add xchg sub ret push dec mov cmp sti jnp ret pop push jg pusha mov jo and mov fstl bound mov add fiaddl cmp mov or sbb dec sbb adc in add data16 ljmp lret jl jle cld mov inc xor loope xchg out inc imul mov xor mov idivl cmpsb sub cld test jg icebp pop pop push aam jb cwtl call loopne loopne ljmp xor mov sbb leave fisubl pop mov fsubrs jg jb cmp stc push mov movsl or test (bad) daa dec or popa pop test mov mov mov inc movsl ss lods jmp mov (bad) inc outsb jne stc push sub rcll mov loope or sub fcomip push pop lcall mov add outsl dec cwtl pop mov pop jecxz iret popa mov shll int (bad) lods mov xor xlat or arpl cmp pusha pop add fldl and sbb mov pop push andl xchg add mov xor jo push xchg fnsave (bad) dec dec cld cmp popl sub es pop and ds sub or out mov (bad) xor adc adc mov lods fdivrs and es popa mov push xor and sbb pop and pop push sti dec pop sub adc loope push imul imull xor sbb out or mov sbb fstl xchg pop rol jns add (bad) ret out fisttp mov dec mov push int3 adc jmp dec popa jl jns inc push (bad) mov lock and jae fs add pop (bad) pop in sbb xchg mov mov xchg mov inc pop add ret xor jmp pop mov xchg int push and push mov imul push inc nop pop enter push and mov sub or pop in xchg cmpsl rolb mov sbb add enter mov aas lahf cli mov shr mov dec adc or in call lcall push mov repz sbb sub xchg test fiaddl mov aam fwait (bad) cltd mov mov add push push mov jb outsl push mov fsubrp push push inc lret hlt adc sbb jp fidivrl scas bound mov cwtl fsubrl clc js inc bound jno inc and inc push cmp pop cmp push mov pop mov ficomp cmp pop xor dec jg add xor cmp rorb adc jg pusha mov adc fwait aas icebp mov jb movsb push addl insb int3 loop iret aad xlat push ds in daa push sbb add ljmp add test jge jge fisubrl cltd lret enter mov push das sbb fs inc (bad) sbb (bad) and mov (bad) mov sub arpl lock sbb ljmp inc jle sub adc mov lods cmp and daa and sub pop sbb (bad) iret (bad) sbb es push and jmp adc xchg mov adc addr16 adc aas ret mov jae aas call mov (bad) popa imul and cmp dec aam stc mov pop lret sbb outsl mov xor xchg pusha mov mov lret les or arpl les push (bad) jmp mov and pop into xor mov clc mov jb (bad) lahf pushf aas sbb pusha dec iret sbb dec shrl pop sbb rorb push jp or cmp and cli sahf lock xor xchg mov loopne lret mov mov enter mov xlat in cmpsb fdivs lock icebp cltd xchg loopne pop (bad) dec sub mov movl stos jo test xor fstps push or mov cmc and lods fwait jle fs (bad) (bad) xor adc cmp scas stos and repnz (bad) mov push and and insl jb out mov iret mov repz in dec stc mov cmc mov adc dec fsub sbb lods cld (bad) push dec out and lcall out nop or mov push dec jbe inc lods or mov imul dec (bad) jbe inc and (bad) sub sbb and xchg inc xor xchg fwait sbb pop pusha sbb clc stos mov stos mov mov scas xor test test or dec scas dec icebp test lods out adc cs loop call jne mov mov cmp out jecxz jae fadds sub popf sbb paddsw pop sahf pop dec test cld mov jmp aas add and cmpsb pusha mov cld xor cmp adcl add mov ficoml in adc pop outsb ret push jns sbb xchg sub dec lret mov ja (bad) cli inc cmp mov inc xchg faddp shrl pop pop adc test daa lea pop push mov mov mov in jno xor dec sub pusha aad fldcw cld mov mov popa in out pop mov mov jne dec adc std daa ljmp mov cltd jl cli nop nop xchg dec mov leave or frstor or ljmp iret decl dec sbb mov fnsave xchg (bad) mov (bad) sbb nop cmp mov dec or xor mov jmp mov pop adc add dec insb jge and shr xor mov adc scas jno xchg jnp enter mov add xor adc cmp and jae and clc (bad) inc ljmp xchg sbb jns fcmovnbe jecxz pushf dec jl sbb jnp jge gs and dec insb push ss popa lds and jbe scas mov dec pop cld test loopne cmp imul pushf jnp cmp sahf mov pop test mov inc and out or push xchg pop ret in mov js xchg pop lret int3 sti cli dec sub lea mov mov cltd inc in mov xchg daa dec clc adc pop mov mov lret mov movsl mov (bad) frstor loopne sub xchg cli cmp jb sub sub cltd mov cmc int3 andl in fidivr sbb (bad) sbb scas lea sub scas mov jb js sarb mov mov push cmpsl jp sub cmpsl sbb mov or inc sub mov dec imul ret in popa and adc cmp (bad) lret into loopw dec scas stos pop add add and mov repz rol xlat bnd jmp push movsl mov dec pushf adc pop icebp in enter ljmp mov cmp rcll adc push cmp jmp leave dec adc jns mov add rorl shrl stos dec adc and imul fbstp movsl and jg cmp enter pop mov push ja call sub mov push cmc jbe cmp cmp lahf add dec cmp out or and mov push xchg adc insb or es sub inc mov pusha push push jno jnp mov js pop lock lock fwait inc daa into shrl xchg mov je lret mov and fdivrl out push shlb in insb lea inc mov sub test mov fs mov lahf push pop mov jno push and or push mov out jb lock test (bad) ret mov scas sbb sub cli push dec xor lahf int xchg push push fdivs roll mov fs test jmp adc cli cli xchg push pop adc adc cmp bound ds mov sahf cmp fild rclb enter test dec cmp xchg inc ficoml pusha mov ss xchg lods xor mov jmp popf adc andl sub std call decb sub jb insb jg mov cwtl movl out sti sub push insl ds ljmp xchg mov push and out into lods (bad) xor adc mov aad inc xchg aaa sub sbb pop lret in or aas lret adc jl ret mov or (bad) ljmp lea dec ja jmp fistpll orl call test cmp sub lcall sar xchg (bad) jmp adc aas pop jb stc sub xor mov (bad) fimul les repnz jle lods hlt orl pop movsb iret imul cli and dec movsb mov mov inc (bad) jecxz dec imul fldl dec jge ret push push adc (bad) ret in xchg test in mov stc mov push jmp jae lock mov ficomp dec push or pop mov jbe lahf mov and add xlat shr jo inc out aam dec lods test xor mov rol cmp (bad) and mov xchg fs int push cmpsl sbb mov inc jp cmpsl mov cltd bound loope cld push daa mov sub loop or sbb inc add std adc mov xchg pop xor and mov or cmp jmp mov add and jnp lea (bad) inc jp adc daa or sarb add cmpsl fisttpl xchg imul mov xor push adcl push imul push cmpsb imul loop mov sbb mov inc adc lahf iret and dec and mov and shl cltd sbb xor movsl aad push xor sbbl out push cld cld sti in dec sti push pop xchg dec sub push sbb loopne fwait jle jo (bad) adc cmpsl jp jp aaa sbb jbe (bad) fidivr aaa or mov icebp mov mov add addr16 lods jge mov call sub pop in insl fadd les mov inc push out jg mov test mov inc lods inc pop and outsb sti jge sarb inc leave fcoms stos mov lfs test sti mov mov and lret inc loope push es mov pop shrb inc lret sbb mov iret adc inc in aam popa add cwtl jge cmp mov mov inc sub jno xchg dec (bad) jmp push (bad) jbe insl add ja outsb or sbb pop fadd xor gs insl and and xchg mov sbb pop xlat sub adc inc ds ret insl inc dec sub xsha256 cmpsb push mov inc cmp inc mov xchg add xchg adc and dec dec xchg nop (bad) scas fs aad mov push add fldcw push mov jb andl mov and insb inc into addl cltd decb pushf adc (bad) jmp jo jnp jecxz pop dec test nop sti sti out pcmpeqw xchg inc mov jl sub xor mov inc add push push jle (bad) cld jmp or inc int nop dec fmuls mov push jmp mov iret jns cli aas adc scas (bad) stos lods loope sub out int js mov imul mov xchg add (bad) mov call out int mov ljmp adc loop mov (bad) mov dec sub (bad) out sarb jmp push push mov adc cmp insl loop vmread xchg jge int3 enter inc fcos fiadd and or fcmovne ret pop lds and xchg adc inc bound cmp inc lahf push and push fistpll mov (bad) xchg inc add sbb rorb (bad) dec js xor cmp pop jb fsubs les jecxz xlat loopne ljmp lea mov loope das and imul mov xor stos cli push (bad) std add xor add mov fwait pushf mov test insb das outsl imul push pop add cmp xchg repnz push mov adc iret icebp jbe fsubs out out cmp sub mov sti mov sub outsl jmp mov and mov sbb xor scas dec stc data16 popf jo test xchg testb xor out cmp sbb pop xchg jno or or cmp dec inc adc arpl aaa mov popa jmp jecxz push dec sub pushf insb sarb loopne repz push ja popf dec mov icebp lds mov push xchg fidiv decl in (bad) mov int inc xchg aam mov mov mov testb outsl out and (bad) rcll das add ret mov je push imul insl sbb jno test out sub jo js ret xor movsb fs decl xor iret mov inc movsl fsubs adc jp lret addr16 adc mov dec sub xlat divb mov jae ss fwait pop adc add dec pop div jge inc mov pop xor push or xor stos in and cld push dec ret outsb cmpsb pop movsl loop cmc stos mov sahf fidivl push xchg xor push (bad) clc popa xchg push loop popaw add add out cltd leave adc lret ss sbb push out mov out in add xchg data16 xchg jmp xor jns subl jne mov pusha fcoml repnz sbb nop mov pusha fsts add inc or or movsb cmp sti push cmp sub pop clc mov setbe insl jbe mov add mov mov movsb cmpsl es inc mov test push stos cmpsl pop sub push or call nop aas scas push fsubrl push mov loopne jb sbb mov ror xchg int dec insl scas ds pop mov (bad) nop xlat pop aad or insl sub jmp arpl mov jae pop fwait (bad) out daa scas rol and enter dec dec xor or gs lods sahf jae ret mov dec cld jnp sarb (bad) es lods xor rol popa std add repnz dec mov pop cltd cmpsl jo xor xor lds enter sub xor sub pop pop nop (bad) fsubrs jbe push mov das pop sub cmpsb clc push lret sbb lcall fs test jae jne sub xchg and les sbb xor iret ret jle mov pop cwtl int3 jne mov js stc iret jle ficom mov mov out sbb fisubl pop xchg mov mov jecxz sahf cmp scas mov mov movsl mov mov and imul push rorl xchg fiadd xor mov xor xchg dec arpl das or sbb popa sbb notb arpl scas or popa mov std push sub mov imul lret sub je fs jns inc inc add fisubrl out jp pop push push sbb fst mov rcr fs cmp adc paddb stc mov xchg dec and rcrl adc xor std mov pop leave mov mov sarb cmp adc jo sbb sldt mov mov cmp add mov jns (bad) in cs ret (bad) (bad) mov test push cwtl mov xchg mov clc dec mov jp scas and faddl dec bound or js push inc fdiv in sbb (bad) mov out test (bad) adc stos movsl movntq out int3 fldt xor or xlat jo sub adc inc movsl sub test imul scas (bad) imul mov fwait sub aas sub icebp and cmpsb repz mov in in adc (bad) pop xchg (bad) mov cmp mov xchg mov pusha xchg scas jl push out inc je pop and test xchg sahf cmp cmpsl jb mov push xor in es jmp jmp mov stos lods rcll cmp or and ret and mov xchg add add dec fsubrl inc icebp xor cmp inc aad hlt cmp push and lcall mov lods lods mov (bad) cld xchg xor scas inc hlt mov stos xchg xchg push xor push mov (bad) cmp add inc adc pushf mov in adc mov jecxz mov les jecxz je and leave sbb dec push rclb lods addr16 clc dec xchg adc jae data16 inc int ss stos (bad) or fwait mov mov insl dec loopne xor bound cmpsb idivb rcr out sbb flds xchg xor daa sbb sbb cli jae and sarb mov pop push pop pop jb dec int push pop scas and xchg notb dec mov aad xor ds jl cli mov lods andps mov lret aaa mul adc mov cmp mov and inc dec fcmovu stos subl shll ficoml or sub movsl lahf int sbb or push xchg jnp sub pop inc inc idiv sbb ss adcl and sahf ret insl inc imul stos notb adc and jbe cltd push inc jmp add decl out aam in (bad) adc lret imul lods push and or lock loope jle out mov mov nop pusha imul enter jnp aad (bad) imul add xchg lds sbb imul cmpl push xor dec pop mov stc loop mov js cmp inc add sbb mov and and jg jmp call (bad) sbb stos or mov inc dec mov mov or mov push out out sbb cmp xchg imul imul shl dec and (bad) jbe arpl mov push mov aam (bad) jae push push in add xchg pop rcll fisttp mov in popf (bad) les loop jg arpl aaa movsb mov out push and pop mov hlt push jb jecxz fsubl jno lods lret das out inc scas std xchg insl rol xchg push jg dec inc push (bad) mov mov dec test (bad) add push fdivl dec addr16 popa sahf clc repnz in fucomi jge pop push cmp repnz xchg outsb out fcoml out sti sbb mov mov jbe aas cmp enter mov cmpsb das popa add mov cmp add scas sti aam sub decl sub ficom dec into or movzbl (bad) adc mov push jae (bad) fcoms cmp or sahf addr16 clc cmpsb in imul sbb push outsl adc pop jb iret arpl mov inc mov mov lret jmp (bad) jae loop sub or or jne shll sub jmp stc (bad) shr and push jmp xor (bad) int3 mov sbb jb cwtl push ret aam sbb mov and fistpll fistp inc xchg mov cmp jb test ret push cmp push in push jbe mov lds popa (bad) xchg push push fistpll dec imul push sbb aaa stc jo lods cwtl enter jo dec inc repnz lahf and jo xchg outsl mov scas push pusha push imulb int mov in dec push shlb ret ret inc cmpsb cmpsb inc cmp ss int3 inc cmp jge pop jmp dec inc into stos (bad) dec cwtl sub mov inc outsb cmpsl add fmul loope add out pop mov push mov push test sub sub cld xor mov and stos sbbl mov aas xchg xchg sub inc and lcall addr16 pop repz cmp test stos enter jp repz lret lds movsl pusha push shrb add popf sti sbb inc fstps mov movsb shll jecxz pop adc dec pop imul pop jg and inc mov push inc data16 push jmp mov (bad) fistpl push mov fmuls mov pop movsl push push gs jne push inc (bad) lods mov das jg or cld shl loopne dec int jmp mov lods pop imul xchg js stc clc pop cmp lret pop cmc mov xchg out hlt daa lahf inc mov out dec call inc pop je inc std int push loopne or imul pop lods (bad) inc lods scas mov fstpl mov leave ds movsl xor lea adc add cmp jae (bad) pushf dec cmpsl xor adc shrl push cmp mov add ss jno xor mov pusha loopne das aad cwtl dec lds dec cmpsb xchg xor or nop jl cmc sub test xchg (bad) into push cmp adc ljmp sub mov frstor jp fisubr inc fcmovnbe fadds hlt dec mov xchg or rclb mov ljmp fnop repnz cmp bound push hlt test lds pop es jne xchg (bad) (bad) mov cmpsb sub rorb fmuls data16 xor (bad) fnop stos ss sub movsb into iret xor sti sti lret adc icebp out ror mov jae mov mov (bad) and loop and leave call popf inc xchg mov imul xchg inc dec mov jle aad das repnz jo inc out leave pop jne int3 and jnp inc fld mov add lods lret pushf aam stos ret sub inc pop ret outsl stos and cmc ret mov mov adc (bad) inc cld xchg jmp (bad) repz dec in int3 mov and shll movsb mov add mov jge cmpsl fcmovbe xlat dec fwait movsl scas dec dec pop iret jle pmullw sub aam push loopne out into or adcl push cmp add ds mov pop lahf loope cs xor out cmp fist pop push add rclb push gs fwait sub mov stos push mov inc mov cmc in jp in sbb test lcall daa adc or mov xchg in and lds or ret pop dec add rorl mov jne aam or inc push cmp movsl mov in in insb add add mov hlt sbb pop dec imul out pusha xor mov popa in mov js xor popf xlat int and push push out mov daa scas testl xchg (bad) into adc push aam les insb jo jmp push adc inc add (bad) mov xchg les dec and imul sahf pusha xchg cld daa adc or sub jbe fmull push fwait jl,pt out out mov test push sub fistpl dec clc xor push xchg sub jns cltd mov shr frstor addr16 sub pop push mov push cmpsl dec lods hlt mov cwtl sub scas jg mov in mov push cmp push push lahf and fwait cmpl pop ss inc stos sbb pop int3 stos sub cmp sub sub mov push cwtl mov test movsl xorl hlt add push (bad) test mov into pop lret stos es mov adc repnz sbb cmp (bad) mov push inc push ret cmp and pop inc mov (bad) xor cmpsb mov dec sub mov dec cli repz add xchg das imul mov mov rorb or test into xchg mov cmp int or mov addb add popa mov cld pop pop or and fdecstp sbb xor (bad) (bad) mov aam repnz push icebp iret icebp mov lods cwtl stc or inc cmp clc ja dec out dec lods xlat push sbb stos fld idivb dec jb mov pop stos dec pushf inc mov int cmp sub out sbb sbb pop sbb insl pop xchg das adc repz mov arpl je or rep mov push xchg scas in cmovl push jge push pop cmp movl sbb int3 sub pop out repnz cmp cmp push bound pop sub sti loope popa pushf jle jb stos int mov fwait je jns pop mov sub xchg adc xor or and movsb stc std ds and pushf and or aad dec mov cmp call xlat nop dec rcr fisub dec arpl fimull sub out cmc out cmpsl mov and cwtl xchg inc mov lahf cmp dec rolb addr16 test or fwait push add movsb or sbb aas jp (bad) ss cld fisubrl repnz fdivs mov push add mov push out dec mov pushf dec ljmp inc xor and aas pushl or mov arpl in add movsl fs or popa ljmp sub mov roll xchg push pop pusha test pop sub call mov mov es loopne xchg adc lcall stos xchg xlat insl push and jle add mov inc in loop mov xorl xorl (bad) sahf jp xchg cmp mov outsb stos mov (bad) pusha xchg sub (bad) (bad) or ret sub xchg and jp mov mov jnp mov cmp fstpt push (bad) adc jbe push jbe mov lret lock xchg add and call xor mov jle or leave mov dec ret mov pop inc mov shlb jmp mov repnz sub das mov nop outsb rolb leave movsb push stos int dec xor xchg int xor jno sbb sahf ja cmp or push repnz sbb pop mov std les xchg add mov ret in in cld or cltd lock aas dec jns movsl push fstpt nop gs adc cmp sub mov repz xor and push xchg add xchg popf dec xor movsb jmp lock xlat and cmp jmp insl mov xchg cmp imul out ffreep aam mov repz in inc sub sub in gs arpl sti in in cmp fcmovnb ret insl imul mov and idivl (bad) shr xlat enter test push inc mov subl repz xchg stos fdivl sbb repz or or mov mov push and and add in addr16 mov orl lcall cmp loopne jne dec fs icebp (bad) xor lahf aaa scas dec pop daa and inc and fildl aad inc adc jno mov shrl popf sarl fcomps mov idivl inc push push outsb es jns xchg inc push sub xchg sub inc pop les sahf mov push dec add lock inc xchg aaa subl jns std std decl jno pop gs pop adc cmpsl iret ljmp sub mov cld sbb jmp stc pop (bad) lock cmp mov push rcrb xor repnz lcall xor inc insl inc adc push pop adc push imul fcomip mov pop xor aaa insb sarb dec cmp addl outsb lock test mov jp,pn pop adc enter lods xchg out or cld in inc jbe mov hlt pop ficompl cs push insb mov sub fdivrs xchg inc or pop ss inc inc je fmuls sub add xchg sahf imul lcall sub cwtl jl hlt push lret push jne mov ret push jl mov loop cltd and outsb mov adc jg fist sbb jmp aad scas sub dec loope jno outsb xchg leave push mov xchg mov jmp push jp mov sbb or add jne push jmp add mov or add nop dec leave ja and inc xchg mov fisttpll clc sub and jns adc xlat mov mov into xchg inc gs int3 xor sub sub lret rcrl mov out fisubrl rcll (bad) or add cmp cmp scas jns xchg out inc ret or jns inc aaa icebp pop xchg jp push je add mov hlt mov jecxz jbe outsb loope addr16 mov stos jns int3 mov push ret loop xchg xor lods jnp std int cmp mov ds pop stos loopne sbb or shl fwait dec xchg jae,pt mov sbb sahf cmp dec jbe pop fs add inc rcrl fdivr les fild mov xor mov fcompl push adc mov mov inc clc mov jbe es sbb mov leave sbb or les repz cmpsl push rcr (bad) clc idivl adc push imul dec xchg sbb ja call or mov add rorb out fcomi xor push sbb push mov inc daa or sub test je ret mov jb insb sbb sbb push or jp and push or or or cwtl addr16 nop mov clc enter test cmp cmp ljmp cs inc loopne mov dec pop adc push cs fs dec (bad) daa mov fisubrl fwait mov jp inc sbb fnstsw inc inc inc sub mov or outsb test test inc push and pusha (bad) or add sub stos fidivl out adc adc fsubr mov mov bnd dec fsub pop cmp int3 jbe (bad) dec dec clc rclb sub movsl shrb lock pop xor jge sub lret and unpckhps repz cs (bad) lret lds add ds ficom mov adc mov xchg dec in test or pop insl push aas sub xlat cmpsl add pop subl jmp adc test inc push out pushf es xor hlt add sbb sub adc rcll ss out cmp jb push in jge outsl lods stos fcoml cmp test out out inc pop movsb or rorb fild inc in xor lods mov xchg bound incb nop sbb ljmp jnp xor or dec xor add xor (bad) mov cmpsl xorl aas mov arpl pop adc test mov daa and jecxz push lea out push add insl mov mov lods mov mov adc add notb dec (bad) and inc pop (bad) xchg xor fwait pushf xchg pop test jmp mov xor push xor inc or jne ffreep mov dec insb fsubl mov add (bad) in das add push (bad) popa daa sub jl pop in idiv adc push dec or push cmpsl inc push out mov push jne lcall mov or jnp sbb xor (bad) loopne sbb ja lahf pop out cmp jl jne cmp in xor mov and adc xor daa loop xorl pop push call sub (bad) fildl push (bad) mov inc test call jecxz mov dec lcall das sahf vprotb jge bound loop lods jge imul iret dec mov mov loop lods out mov sbb call je dec repz lods mov jo and mov test dec lock imul sbb pop (bad) popa and mov inc inc cld jne lock jle xlat xchg les and sub dec mov dec and pop ds pushf and mov push mov movsl inc aas divb fdivl mov (bad) (bad) in mov push leave outsl sbb adc mov call add dec mov jmp and daa mov lcall rolb adc cmp mov outsb xchg or pop or lea mov mov jb add jl data16 aas dec xchg mov sbb shlb imul lret cwtl push sub lds xchg (bad) (bad) xor sti jmp push movsb sub stc add cwtl loope shrl inc (bad) lods or xor push loop sarb inc hlt adc sti gs cmpsl sub jmp pop mov sub xor call sub dec pushf inc cli lds ss mov sbb mov push sbb xorps sub add inc xchg daa jg pop movsb lock int mov push jmp out lret test mov jg insl (bad) test ror jl aad xor addr16 adc or fsts pop movb xlat (bad) mov dec les sarb xorl jns jle dec lea lock psrlw pop sub pop imul sub (bad) insl mov fsub int dec cwtl jne push or and push xchg ja dec mov push add daa stc mov xchg test je dec fdivr rcl sbb xchg fcoms xor adc ljmp xor mov mov and cld es dec or imul dec bound jne mov xlat gs movsl repz jnp mov xchg fadds xor push jne push (bad) mov das stos sbb xchg jno arpl loopne dec xor loop (bad) cmpsb lods sarl inc fcmovne lods push push icebp xchg std mov cmp cmp and movsl movsb cltd shr mov mov jnp aaa (bad) fisttpll mov loope xor pop fs icebp (bad) imulb movb call (bad) fisttp insl inc sub sbb pop out pusha or ss mov out imul adc push test mov popf mov xchg sbb imul loop les and dec mov subl dec ret push rorb fcomi loope idivb ja test out js push mov add push incl pop ds lods jge mov or jle aaa ss adc xor cmp ja fmuls enter bound cmp lock fsubrs incb clc es mov adc cld test out lods imul lcall test xchg pop fldl in test movnti cmp mov les sub sbbb inc sbb xor cmc and (bad) out inc xor ja sbb aam mov pop xchg push shl sub xchg mov lds sbb inc mov sbb dec push mov mov jnp add xlat sti sbb call mov jecxz lea fcompl addr16 and xchg (bad) (bad) ficomp inc in test mov mov cltd mov fs cld fwait mov inc cmp cltd (bad) fsubs popf cmp cmpsl pop mov popf ret into and into daa loopne jb imul mov lods sbb ds ret (bad) xchg aas mov xor (bad) push aad xor (bad) (bad) sbb psubd insl dec dec pushf shll push stc jg adc pop rclb divl pop inc or int3 call inc in les dec adc ss push scas xchg mov loopne fs add in jns mov lcall ficompl insb outsb dec (bad) xchg inc aaa xor dec jg xor pop add mov pop pushf cmp and repz xchg (bad) xchg jp jno dec pop push dec iret out js fistpll insl imul xlat mov fisttpl xor rcl ss pusha sbb adc addr16 ljmp in inc dec shll pop stos insb mov enter out (bad) inc aam push mov xchg push js jle mov repz push ss cmp mov test lahf pusha cld loope hlt xorb ficompl and cmp pop dec enter sub popf js scas (bad) fiaddl dec bound or cwtl cmp mov xor and or sahf cmpsl jl add jge inc push lea adc ret adc (bad) mov jmp mov fnsave (bad) mov enter in push inc sub fwait mov pop (bad) into lds and add or dec jp dec or and xor xchg (bad) xor aas mov or add movsb dec cld mov scas dec push inc es adc mov push dec inc call popf test addr16 loopne je jmp iret loope cmp repnz adc jl push add out stos xchg sub mov push stos sahf dec out ret aas fwait aas xchg mov sbb pop aad aam mov dec jae sbb pop jnp cld push and sbb cmp scas add lahf in push inc insl inc cmp cmp iret adc fcomps lret aad dec mov cmp mov (bad) cmp or xchg adc jmp enter push inc imul movsl mov sets mov cltd pushf mov xchg in repnz aad cmpsb push pop push inc cmpsl (bad) (bad) (bad) push mov out jp pop repz ficom stc mov jg imul push sti pop pop push faddl sub xorl mov ds xchg mov pop ret daa movsl stos test dec mov xchg add mov lret leave scas loope pusha loope pop (bad) mov inc js dec fwait xchg int3 stos mov aas xchg sub sbb or xchg dec jle pop (bad) imul aad pusha adc push inc mov jne cld pop dec (bad) daa fstpl push fs leave or mov mov push outsl les out pop out pop push push inc adc mov aas fcoml sub and jg pop in pop ret nop adc data16 incb add add out imul cmpsl (bad) mov adc mov in aaa xor push adc repz fcomps fnop cwtl xor xor add pop inc sub stc and add cmpsl mov jo xchg adc ljmp xchg roll (bad) adc sbb aas xchg call mov cli xor fistp sti into repnz jg clc test mov loop repz ljmp inc pop (bad) inc push lods mov out cmp ret push sahf bound inc sbb and je imul call push in pcmpeqb inc aad loope xor xchg cli mov rolb pop fildll pop cmpsl xlat add fsubs cmp inc in loop je pop cmpl inc add sar push out jae mov jae cmpsl jne cmpsb loopne sti cltd pop xorb imul in test ss flds cltd fidivr loope cmp aam aad mov call xchg mov nop ds std add xchg push pop sub lcall and pop jno sub arpl je cwtl in loope loope test ret sbb jb sub mov (bad) mov dec gs sub cmp push ror jecxz pand sahf (bad) int3 or addr16 ret xor aaa loopne repz xchg (bad) movsb mov pop or mov stos mov xchg sbb mov (bad) or out (bad) jle call lods (bad) cmc popf inc movsl mov adc adc test in mov xorb jo das add fistpl test push outsb jbe fsubl in lcall insl dec jnp pop dec test and dec inc add loope mov mov cmp adc mov pop sti imul jp scas dec dec or push pop pop xchg and sbb or in push add mov add imul (bad) hlt add lock test adc inc cmp insl sahf and push mov xor cmpsl jp rolb cmpsl (bad) dec pmaxub pop xor adc mov cltd daa (bad) add lea mov rcll cmp xlat mov adc lock insl mov mov dec inc xor aaa adc lret xor js ficompl dec sarb enter or pop loop push jge sub (bad) xor sahf jp out cwtl lcall mov repz inc sub loope adc pushf cmp push add push cmp setns adc daa dec sub sub mov test xor mov dec lcall cmp test loope xchg rcl mov loop in fisubrl xorl inc jg sub mov ja es mov sbb mov inc or mov out jecxz fcomip dec add and mov aam add popf jae push negl cltd xchg movsl xlat dec imull cmp or scas inc mov jmp mov mov cwtl sbb pusha into inc push adc push incl fdivrl mov mov js dec addr16 loop (bad) rcll adc push and sbb sbbl xor ficompl fdivl sbb inc addr16 sti movsb mov call xor addl lock test add mov int3 mov and in out sbb push stc lds inc lea mov stc lret pusha out mov push int lods sti sbb pop adc jnp push sub push xchg scas test push nop mov xchg mov das sbb cli pop mull js into jmp and pop mov adc ret insl xor sub lret sub jbe adc xchg xlat stos cs (bad) mov xchg lods lret ret cmpsl mov pushf jnp pop int3 ds bnd ljmp (bad) pusha push cli dec (bad) jecxz add call mov mov cmc hlt mov sahf sbb (bad) jp js mov je adc push sub push add push pop icebp lret sbb xchg add loope cs mov push movl lods fidivrl lds dec push xor xchg jae loopne xchg mov arpl xor idivb orl aas mov adc pop jge lock push shrb jge jcxz jae xor mov cmp rorl pop or jb clc sub cmp push pop mov mov mov inc or call mov (bad) repz mov les aas dec push pop scas or adc sub mov xchg xchg sub rorb repz popf (bad) adc (bad) pop or das sbb pop in mov mov sbb stc leave or add xchg fldt mov je rclb xlat and jo adc je pop cmpsb sbb outsb pop mov fcoml mov jg lods jne lcall mov ds pusha cmp adc sbb mov push push push aad add mov xor outsl dec mov ljmp mov adc das out out mov dec ss arpl scas (bad) sub add sub ds cmp or cmc pop xchg xor mov lea sbb inc push hlt jp sti pop stos addr16 jg adc sub int pop mull fistl add mov shll scas push (bad) cs int std inc mov test and sub (bad) pushl cwtl sub push sbb ja dec ror mov out dec lahf lods sub popf leave fwait xlat jnp dec pop arpl and in cmp push je fisubrl test ret push mov enter test clc and jp out rolb sub inc pop push imul mov mov into in mov sbb popf ja dec mov xchg fidivr (bad) adc daa daa icebp out lock jge sub call test xor jp data16 and pop imul push jno pop jmpw sub mov stc mov andb jge cld test test popa mov sahf mov cmp bound incl fbstp mov pop in and loopne into jle dec pusha mov cmp shrb lods movsb repnz or ljmp pop popa int mov inc ret movsb jmp enter stos xchg jmp int3 ficomp or dec mov cmp xchg cmp (bad) testb icebp inc ss dec int3 sub mov push mov pop popa cmc lcall sub dec cmp xor stos xor sbb int3 mov jecxz imul xsha1 cmpsb mov icebp push pop lds and inc mov int inc sub insb sti add notb shr add dec fs mov xlat shr cmp mov mov mov cmc sbb xchg dec aaa mov cmp sti iret jmp aaa push adc add or lahf repz mov loop adc pop icebp stc data16 or test rorb sub lods and stc add and push cmpb mov movsl push push mov xchg pop les shrb mov fwait scas scas xchg test and fwait in mov jge sbb sbb lret ret (bad) cld (bad) iret xor loope or mov cld or dec jb (bad) and bound addl dec out mov mov pop xlat mov imul loope into fwait and jo pop mov xor mov scas dec fsubl jno lods call rolb sbb pop mov mov pop mov xor (bad) lock mov lret stos (bad) sahf dec adc xlat sti xor mul and pop or push lea orb mov int cmp xor lcall in mov test mov push jo insb jne notl test dec inc jns cli fistp adc xchg pop sub jle jmp mov adc pop lret sahf gs movsb push aaa add les arpl bound add xchg xchg inc sbb push mov cmp lea popf in int cld imul nop hlt sub mov fdivr sbb sub and fstpl xchg ljmp add add in mov mov nop clc sbb cwtl pop daa scas pop cmp ljmp clc (bad) ljmp cld jno fldt push lock fcompl pop repnz xchg rcll cmp xchg lretw mov sti pop mov cwtl out pop loope sub jge or enter mov movsl mov add mov enter cmp cmp xchg push insl push test cltd aam add pusha fstps push pop (bad) cwtl subl nop sub rcll das loop add mov fisub sub pop xchg add pop adc nop jmp jecxz dec cmp ds fildll ficom negb inc test movsl mov std mov sub pop mov inc jns loop dec xchg pop add out push fcomps inc imul test jbe fwait ret inc (bad) das mov aaa and mov pusha sti in cmp faddl add pop scas push pop out xlat or mov repz pop push push dec mov xorl lods mov fldt ret rorb hlt stc scas cmp pop nop mov adc lock movzwl xchg push lods xor bound dec mov mov cwtl int3 std cmp repz adc fldenvs je and dec mov cmp lret jb fiaddl pop jne fbstp loopne dec inc xchg push je fsub js add pop test out imul xchg ret data16 cmp dec neg cmp mov mov push int jae dec mov and cmp inc push lods pop (bad) dec xchg adc movsb jb or daa loope and dec mov xchg out mov cmp xchg jns (bad) repz cmp ficom dec jo sbb jmp int3 or lahf sbb repnz adc arpl mov addl push jp and les dec div outsb mov adc popf push test pop sbb mov cli pop jb ficompl mov in xchg into gs aaa mov loopne,pt pop jo inc test repnz mov and (bad) cmp xchg xor cmp (bad) xchg std std xchg mov jl (bad) sbbb int3 mov ss mov pop loopne mov sub repz mov (bad) mov push gs push xlat (bad) lcall mov lds adc scas or daa push imul not mov pop sbbl outsl cltd xchg xchg xor mov imul sub inc pop mov add xchg dec sub mov pop or pusha movsb sar sub movsb into (bad) xor ljmp dec mov inc cmpsl ror and divl in lret mov mov pop xchg into mov cmc cmp sbbl mov enter dec dec iret lods mov sbb mov sub jno pop jmp push imul sar ja mov pop les dec (bad) iret out jns js inc fdivrs dec test xor das jbe ret jo ljmp shlb and jbe cmp movsb mov fnclex das lahf stc scas rcr iret xor inc gs sbb xchg and (bad) movsl adc and fcmovbe loopne (bad) (bad) mov jmp lret inc mov jmp sbb adc fldcw stos std lock nop movl sub pop jg cmp mov sub mov dec xlat out and test cmpsl push mov xor repnz inc and lods jno ds xor cltd out fdivs aas cmp xchg dec into xchg inc fs mov sub nop cmovg in popf xchg jo or pop movsl jae and mov dec aam (bad) sbbb aad or stc mov lahf jbe mov mov aam or mov lods js mov stc icebp rorb mov andb add pop fldcw ljmp enter dec divb imul or cld insl cmpb mov pop jl fwait sti mov pop aad adc dec and and sub inc cli inc cmpsl sti cli movsb rorb dec mov push in mov push rcrl jo inc test leave gs dec insl cmpsl dec inc sub jb,pt inc cmp add mov or out stos sub out mov aaa fistpll and cmp sbb inc sub adc pop les add aad les arpl fimull das sub cmc popa push xchg movups mov in out mov call daa imul dec mov daa cld dec mov std aam repnz cmc hlt into pop mov xor push bound mov push fwait push pusha imul mov jbe dec out xor inc sub and pushf fsubs (bad) xchg mov cmp add fucomi cwtl and inc sarb mov sahf aad fcompl lds cmp repnz (bad) leave outsb call movsb dec fs dec xchg xor rcll je dec insl sbb or stc lahf jo rdmsr xchg or sub jmp push pop and mov shll mov insb cmc sub xchg dec mov inc mov bound int cmp inc jnp sub movsb in xchg (bad) mov ficom in test pop repnz xor and ret push mov cmpl ret aam push and ss sbb rorb fcmovnbe call or movsl pop scas outsl jnp sbb dec or (bad) std scas cmpsl pop sbb xchg js sbb scas std mov lods popf mov pop test pop cmpsl aaa jle lock rcrl inc mov cmp fwait adc xchg js inc aam inc xor mov fidivrl mov cltd data16 fmull les and inc cmp loope fsubs ficoml aaa jns fmuls inc xchg and cli scas lea push lods sbb insb idiv cs inc lcall push sub (bad) or pop fistp mov shl cmp sti lds aaa xor dec cltd cmpsl (bad) in jno inc mov inc movsb cmp pop lods std data16 inc xchg icebp fiaddl rclb dec dec adcl push call xor repnz out or arpl inc js clc in jns jmp xor (bad) lea sbb adc loope and inc call mov mov push adc lock out push fcomi mov sbb leave pop cmp clc jae cs sbb and or jae sub jb in jo cld clc aad cmp mov fldenv cld pusha outsl push roll out sub lods test daa stc sub stc jl mov lods sub adc dec movsw scas pop outsl adc in sbb jg xor outsb (bad) lods adc dec fsin push mov or and adc jge out rcll lcall push cmp jo fwait cmpsb ret lock sarb int jne fsubrs jmp lds mov pop push jno or data16 inc rclb mulb (bad) sub sbb push ret into clc cmp negb in aaa daa mov lret xor stc mov and lods push sub xchg push ret jo lret lcall jns mov inc (bad) aam inc stos les leave fcomi and std or shr in lea adc mov inc mov sahf cli jns mov push fistpll jge sbb pop mov xchg das movq mov push pop xchg repnz in xor pop mov jg aam arpl push aas xchg rclb push enter popa jp testb jns xor inc fcmovnu imul push jmp imul in mov std adc add jecxz dec mov aas inc mov rcr sub mov stc movsb loopne dec pushl mov jne nop sbb les mov lret int3 pop sbb pop add mov out ds addr16 mov xchg fbstp jno fbstp push stos cmpsl xchg or jo ss ds jle mov es fnsave clc jne cmp mov sbb pop adc mov jl fdivr mov jmp adc sbb mov xchg stc dec aaa xlat out pop sbb push add cmp adc mov scas ss push push mov dec sbb ret bound cmpsb dec xchg cmp shlb test out (bad) sti mov pop and daa jnp xor xor movl cld mov fldt adc aas xor imul mov in xchg popf addl mov sbb rclb mov jl sbb inc and aad xor xor cmpsb and adc cwtl cmp popa cs stc mov into sub adc jae pop scas mov mov add mov sub and dec hlt cld push stos dec daa sarl les test push jl int3 jae fdivrl mov loopne jle xlat movsl pop adc jle and movsb xor fwait std xchg fldt push xor out mov cmp daa nop push push cltd fmull ljmp insl mov mov mov adc pop inc push xchg and xchg cmpsb fistl aad repnz shrl xchg out dec xchg aaa mov (bad) hlt icebp stos bound mov lahf xor addl inc adc shlb lret jmp aam adc lret xchg sbb fwait out xchg ss jmp xchg xor lds pop inc adc in popf icebp add cmc mov mov inc inc xor sub add negb xor insb inc lea jno jnp cmp mov lcall mov fdivr xor ja xor mov rorl mov and clc stos daa fcomip fisttp mov xor jb fldcw jl xor adc sti in mov outsl fild lea and and cwtl jmp mov int3 leave scas enter push jmp in in ja mov das int pop jmp mov les aaa sub ds insl pop cmp adc mov data16 adc sbb sbbl push stc push jnp jo mov loope rorb jne sbb jmp int3 ja xor rol add and out movsb enter out push fadds dec sbb and je xchg xchg mov ljmp and loope and add insb mov jne sub mov movsl (bad) mov adc int cmpsb pusha pop or inc xchg sub mov jno into jnp mov dec xchg xchg inc into lcall nop pop hlt mov xchg in mov mov xor push call cld ss xchg sti jno push lret bound das sbb (bad) pop (bad) ljmp adc mov aad addl and xor inc adc cmp sub or (bad) xor in inc bound pusha pop ret mov pop ja hlt fildl pusha pop fcmovu mov xchg fcom jmp mov je jp dec pop movsl adc cmp sbb test xchg out and mov pop js xchg pop mov imul jmp mov xor mov dec sub outsl loopne fsubl pop cmp nop sub push shlb in mov pop inc mov dec push add out adc aas inc xor jno (bad) xor xchg xchg into mov imul mov imul sub push xlat sub xchg lret mov js cmpsb sbb cs faddp dec dec fcmovne into fcompl inc out pop mov add inc or jb scas aam sbb mov and ss ret fsts fisttpl pushf jp aam popf cmpb out adc sub in xor push rcrl push nop push outsl jns loop pop jmp insl cmp or aam xchg imul jnp mov pop mov lret ja lock es mov mov push add xchg adc fistpll stos (bad) insb mov and test xchg mov xchg jno setg icebp inc mov sti cmp or loope add cmp imul pop (bad) lcall cmp in ret in fstpl adc daa cltd outsb xor loopne sbb daa push aam sub lods shrl outsl adc jp ss and out xchg sub add out mov mov mov mov test mov mov mov adc in inc fld pop jno lcall inc xchg popa in lahf lods mov mov sub fldcw inc dec cmp sbb push js mov inc repnz mov or lods jg jge,pt mov cmp (bad) leave sarb jno jne jl ljmp xor jbe pop sub cmp jae faddl stos mov pushf pop sarb fadds gs out cwtl das add loop or (bad) lods dec (bad) je cmpsl adc push (bad) cmpsl jb test scas jbe icebp movsl mov and and fnsave xchg (bad) (bad) dec leave (bad) jecxz inc insb (bad) mov lcall cmp hlt inc cwtl cld or push pop inc xor les mov sahf int3 dec and mov (bad) mov dec ljmp or arpl (bad) mov xchg (bad) sbb and and lods scas out jl pop out push push inc lock adc xchg (bad) stos adc outsb xchg xor popf mov jmp fisubr add (bad) dec sub push in cmpb dec enter out mov les ret mov cmp inc imul leave add cwtl pop and movq lea lods jp ret fidivr lahf sub (bad) ret xor sbb nop mov mov xchg ljmp and sub bound jb dec sbb test mulb mov push outsb pop cld movsl xchg adc and lds add pop add aad ret or dec int aad inc arpl (bad) dec cmpsb inc mov out insb dec or sub sub cmp sti sbb ljmp push pop xchg (bad) push leave pop in mov int push pop push fisubrl fs xchg cmovns (bad) sub push (bad) call lods dec ret int js iret sti add dec lret dec je xor dec cltd mov popf mov mov mov pop lret dec jbe lock rorl fwait bound cmpsl lods jecxz arpl mov add mov mov fs scas xor inc test notb pop mov pop movl in mov les sub pop insb xor pop in adc jle (bad) jo rorl loope mov jns xchg out push nop mov lods or std sarl mov adc daa jo scas lcall ja cli std sbb repz xor xlat jg xor or stc aaa push sbb (bad) nop dec lahf dec in add je test aam fs pop jne mov arpl into movsb cmp into or imul and mov jecxz pop data16 (bad) xor fistp xor fcomp cld mov enter imulb sub push cltd push mov outsl lods (bad) (bad) ffreep mov (bad) rorb mov aad adc or adc pop inc fnstcw pushf hlt xor sub outsl movsl ljmp push cmp jp mov adc xchg jge inc call arpl imul data16 movsl in pop out je jl movsl mov fs inc pop test lock inc dec int xor xchg outsl adc pop iret add pop sti pop mov jge xchg or mov test data16 inc in mov ds lods mov dec test jg and push or and lret or imul xchg dec jo mov inc mov jecxz cmp movsl stos insb call insb fsubrl mov addr16 idiv xchg roll pop mov jmp mov ds xchg and int adc (bad) and add jle sbb push fstps idiv rclb jp sahf int (bad) mov test push mov inc xchg ljmp jb sbb out mov mov movsb mov adc clc stos pushf pusha add mov ret mov and rcr xchg jle xor xchg dec repz cs pop mov in dec xor sub test xchg es adc push int mov mov sbb enter (bad) outsl lahf fcmovb (bad) pop addr16 fisubl push lret inc xchg inc and mov mov jne and xchg xor xchg and (bad) aaa xor ja fidivr pop std out push push cmpsl insl inc add std daa inc adc adc test outsl pop xchg pop mov pop add int3 adc bnd js xchg gs xlat dec movsb (bad) mov test jnp lock out xchg add scas mov adc sub scas mov loop jl sub and cmpl test (bad) cmp mov jecxz loop cmp mov inc lahf pop cmp cmpsb nop add xor divl adc aas mov push pop popa les cmp mov add movsl (bad) out jnp and sbb lock movsl stos adc cmc jne lahf loope mov sub cmpsb fwait xlat sub mov das mov jno (bad) lods add jl in push ficomp dec insl in sub xor loope push dec into and xchg mov (bad) idiv adc push and mov dec in jmp dec add lock loope popf es rcll sahf ja xor fsubrs push js dec xchg in (bad) xchg mov push jg testb mov mov adc mov arpl cltd leave rcr xchg (bad) setb sbb fsubrl divl cwtl sbb mov out cmp mov xor test inc fstpt mov aaa sbb fcomp mov jno xor mov mov sub data16 xor push push leave cmpsb inc popf rol aas sbb inc jbe push iret and xchg mov shl pop iret in inc insl call lock lcall rol clc fidivr das jl sbb xrelease pop xchg (bad) push jns scas sub xor sub rcrl inc sub (bad) aam xchg dec ljmp adc (bad) dec mov fucom xchg lods xor jmp xchg xor inc push out sbb inc lds lods jbe fdivrp xor mov mov dec pop in pop outsl jae xor jge pop cmpsl cmpsl mov ss mov push stos dec mov jo mov adc sahf test add cmpsb mov lea xor rclb out xlat sbb clc frstor (bad) sbb mov insl bound sbb push dec sarb cltd dec es sti mov dec ja adc out into stos or dec mov cwtl ljmp dec daa lods bound inc arpl cmp rcll and (bad) ja sbb (bad) sub fimul mov int3 push dec in pop out (bad) rcrl push xor pop scas mov pusha xchg sarb mov mov popf iret pop imul adc and jg push sub or mov fldenv pop scas adc aaa cs push mov fidiv inc add repz test int3 (bad) push leave fs xchg or nop xor and adc adc bound cmpsb fwait pop cld push push ficom jnp loope (bad) mov (bad) xchg push sbb pop mov arpl xor daa sahf sbb inc lods jno movsb push adc xchg mov dec jp mov fld1 pop shrb mov cld mov cmp and imul rcll ret fcmovnbe dec or mov aaa iret pop push xchg les push add adc cmp insl out test lods int mov inc inc dec fnstsw (bad) cwtl scas inc pop popf test and int (bad) jbe sbb inc adc scas mov daa icebp arpl cmp icebp mov out andnps push fdivrp dec jno lret fcmovnbe lahf jp xchg add mov sbb daa sbb sbb cs mov cmc pop jnp lods es (bad) in das lahf pop daa inc ss js jns xor std hlt adc pop jge into stos nop shl inc (bad) dec adc hlt leave aas scas repnz mov (bad) int stos push push adc arpl or repnz xchg mov pslld push popf iret mov fcomps and hlt pop pop jle dec or jne mov inc sbb mov lock sbb inc dec ss jl (bad) inc mov mov fbstp movsl adc bound push push cmpl shlb rcrb mov test lods mov jl mov mov les lea cmpsb jge push add in clc xlat xchg pusha inc mov mov (bad) aas add inc mov aaa mov rol adc and cmc push mov icebp jp sar xor insb pushf mov xchg loope inc (bad) (bad) out push xlat xchg inc aad mov es (bad) ja movsl push imul std pop xor popl inc decl cmpsl xrelease push mov js xchg cmp dec sub or (bad) xor movnti sbb xchg xchg dec fstl dec enter xor into jns sub cld mov push movsl incl push scas cmp xchg push jbe aaa sbb adc icebp inc arpl pushf push add hlt aas enter scas jo out push test push or inc dec xor inc mov xor inc into push fstps xchg shrb popa jno push jmp mov movsb loopne ret add loope pop jae push inc movsl test pop sahf jo xchg lahf sbb aam inc and cmpsb out lcall sub insl jo mov mov push xchg ds lea add sbb sub cmc sbb jecxz dec sub mov scas inc insb sub or push les dec mov aaa test popa add call in insl push or repz ja push mov inc xor (bad) sbb mov cltd data16 add (bad) dec pop cmp xor ja fstpt enter sbb iret xchg add aam push or cmp aaa sbb jo add sbb stc test cmp sahf xor lahf fisubrl ret xchg mov sbb cmp cmp xor inc out xchg int3 lock loop aas ja cltd pushf add leave add mov xor mov test sub cld or lods lods pushf mov mov cmpsl jnp lcall imul lcall xlat mov xor mov fs dec pop cs in aad add jmp (bad) lcall fildll xchg and insl push pop pushf (bad) inc sbb negb xchg jecxz enter push jmp mul jnp dec mov xchg mov in cltd pop sbb daa int adc divl test inc enter mov orl imul ret mov out or sbb dec (bad) negl sbb (bad) into mov in pop push jp out adc nop mov ret cmp mov xor inc (bad) ret mov fs (bad) cli aaa gs inc sub push cmp cmp int mov scas cmp mov clc xchg in out and pop sbb jmp pop sahf dec (bad) and push xlat shrl fstl (bad) pop xchg mov pop loop inc cwtl cmp and ljmp enter fcmovnb loop xlat fstl mov loope cmp js sbb cmovo dec rcll push fidiv ljmp ss fldenv jnp repz pop lock cmc lods lds mov fadds lahf fwait inc icebp push adc bnd inc ret xor repnz repnz xor mov push sub push (bad) hlt icebp jae jae sub nop out fisubr into jns adc dec dec popf and imul fstl jmp and ss mov sub outsb push dec xor fisubl adc dec mov pop push lret mov rorb xchg mov or mov notl lds pop mov out push stos out inc test repz jg sub test inc in jbe clc inc bnd aaa lods jmp mov pop (bad) pop loop cmpsb cmp (bad) out add hlt push push jno jae jns mov gs daa rcll jge xor outsl daa sarb rolb add mov rol out rolb sti pop xchg push sti lods out aaa push push inc fstpt cmp rorl cwtl (bad) jp fild inc jno orl cmc add xchg pop sbb cld push sub jl mov out lods pop mov lret xchg jbe out sub std adc pop mov fisttp mov adc or cmp movsl popa xor cwtl sbb loope movsl (bad) mov mov inc addr16 jge mov cmp push dec sbb imul xor mov adc xchg ret lds xchg out out arpl mov push stc adc std xor xchg xor inc leave cmp sahf ret cmp mov cwtl dec mov sbb and dec leave lret xlat enter push push xor (bad) fimull push mov cmpl add sbb add xchg and pop lods movsb loopne pop mov into pop cmpsl mov imul jg arpl in les inc (bad) push test and and or fnsave cwtl lock push mov dec testb lods pop insl inc or pop jae mov jo js dec and lcall jae xchg mov push sub hlt into outsb pop adc inc out pop add scas jl dec rol cmp lret rclb out adc cmp jno mov popa inc fsubp jmp fwait inc mov xchg movsb sbb fwait sbb adc inc or push mov std sbb jp jmp inc insb dec xor xchg test shrb lahf jl push ficomp pop or popa je mov pop lret sbb in add xor jecxz bound or jne cmp mov sub push jmp sbb adc dec xchg adc loop (bad) cltd fldl loopne push dec and jne into arpl mov inc rcll js or mov sbb cmp jmp sub jge push leave push xorl xchg test xchg or mov sbb int xlat mov call sti les inc int3 jnp lds dec inc inc inc cmp dec cli ret pop sub imul jmp ds cmp (bad) ja fs in mov lahf scas hlt sub (bad) xchg mov leave ljmp mov cli ret adc in xor ljmp mov sbb jg jg (bad) mov pop (bad) call (bad) adc xchg inc pop dec mov loop or pushl dec rcl mov repnz (bad) push adc mov or int3 adc out inc jnp imulb jge push push jns mov mov jo shrl sub or mov pop pop adc hlt fs cmp lea movsl xchg punpcklbw clc mov jae adc das sub mov push lods (bad) lcall hlt dec push out pop add mov mov int loop sbb xchg out fcoml fsts mov pop add mov nop or movsl adc mov xor gs adc add jnp out or inc repz dec mov inc mov addr16 jle cltd out movsl inc test stc js jg sahf imul out add lods lret fcompl jecxz pop daa (bad) push push xchg (bad) (bad) in inc mov pop jb pop inc mov dec pop sub mov xor rol insl mov sbb pop add stos lcall lea clc sbb (bad) popf in sub aam or and or jge push scas je sbb shufps mov int imul push push enter insb push out dec jl cmp dec test test pop cmp pusha lcall and sbb pop cmc or (bad) (bad) or sbb stc or push mov cli (bad) popf pop cmp fisttp in xor scas jmp pop cli mov imul and pop or scas arpl dec cmpsb js push xlat (bad) dec data16 pop scas stos scas jecxz push adc std mov cli das (bad) imul sti xor loopne subb or pusha push jp in scas lods fidivr (bad) jmp mov lcall adc xchg mov (bad) pop jns xor cmp pop pop jmp fist mov int3 xchg xchg cld bound insl xor mov fadds (bad) dec push mov js and pop jnp lea jns dec cmpsl cli xor jnp mov sbb pop add add imul (bad) aaa xor cltd popf xchg push inc and xor sbb (bad) mov jle ja jge (bad) cli fidiv jmp cs inc push pop in inc clc or mov mov insb add sub das test es push mov sbb hlt orb nop pop (bad) add lret mov or push mov push xorb mov dec xchg movsl jge pop movsl dec hlt cmp call jne lret jb (bad) fistpl pop into fldcw push xchg cmpsl sbb vmovdqu lods movsb xor lods add daa shrl lcall push adc pop mov jp movsb inc jbe (bad) sbb adc xchg bound adc outsl pop loopne sub push push es xchg nop iret mov mov xor push or fistl sub mov sub lcall or sbb popa scas adc sarb arpl mov xor (bad) lods ret (bad) mov ror loop int adc mov adc in and jbe mov test sahf cwtl sub mov add push mov sbb fisub mov mov clc lock pop push jb jae in mov icebp int3 mov popf and jne xchg mov xor adc popf mov jp sub xor cmpl stos adc fcmovu adc mov rorl test jns add ljmp out sbb inc and cvtps2pi pop aas (bad) push push js xor adc aad or jl jg aad mov inc lahf jne and and imul push imulb test jecxz xor mov and pop push pop sub add in adc push push mov stc shl cli and add inc fistpl fs adc push add or jecxz xchg mov (bad) popa sbb je cmp cmpl or push push es push push (bad) or mov sbb (bad) xor push in jo popf outsl xchg ret push mov jmp outsb jg test cmp hlt addr16 push cmp mov inc roll int xor out lock mov cmp or xor xchg mov imull mov push fbld lock cmp mov (bad) clc loop push aaa jle inc (bad) and popf mov and jmp (bad) jbe iret pop or mov dec cmp sbb add dec mov cld fnstsw adc subl dec lods mov jp push cmp sub xor vmovsldup or int3 dec in dec mov addr16 and mov (bad) std mov ljmp sbb out pop divb dec xchg jae scas inc pop mov mov adc int3 pop faddl jp mov shr imul mov or ja jae or push fnsave push and out xchg loope and mov andl xchg or push sub push cli cltd inc inc (bad) mull outsb cmp xchg ror mov lds adc inc testb mov ret shrl test xchg cmp sbb insl xchg add or sub and stos (bad) out push cmc nop cli (bad) push ja adc or outsb jge xchg stos es push ds stos push sbb (bad) fstpt xor adc push inc inc adc into cmpb push inc adc jns out inc mov dec lcall leave mov dec loop es sub push movsl lods gs adc iret push or mov adc dec adc les pusha push push inc pop mov jg sub test and ret fs cmc aaa arpl and and sub fdiv mov add and je sahf addl sbb push fsubl xlat repnz popf pop mov and call push jl dec andl or jo repz mov pop cmp jns (bad) jmp jp push and in mov pop jmp ds push enter cs enter sbb imul inc sbb (bad) jne inc les lods jmp cmp in lods or ljmp sti jecxz mov lods stc bnd fmull dec iret mov lcall (bad) aam xor dec sbb fild jge loop out aas or sbb inc or scas inc leave lcall sbb xchg sub outsl xor xchg imul ret pop jne push imul mov jne hlt and jmp bound lret cli mov pop mov cmp shll mov rcr mov lret and xchg inc and hlt jl pop sub xor in in in dec or mov ret pop in push insl shrb sbb stos bound mov ss gs ja mov xor xor bound arpl xor mov enter ret test and mov ret ret mov (bad) mov fidivrl xchg ficoml out hlt and fstpl adc push and ds pop lahf push mov lock in mov sub icebp rcll pushf or pusha popa inc lds fwait cli sub mov mov sbbb out mov sbb pop lock test mov test loope (bad) fadds dec sbb add test cmpsl push repz and int3 incl shrb mov sub push inc adc fs (bad) pop push leave bound cmp adc dec pop jb mov scas mov push cltd (bad) mov pop add sti jg and js or xchg stos cmp lret xchg push hlt add xor push jo and daa xor jno mov cmp out and adc fiadd mov pop std dec icebp jae lcall (bad) fadds ljmp in mov shlb mov add and mov pusha int3 mov rcll inc arpl cwtl fwait mov lahf repz mov rorb lock cld jle stos cwtl fwait or adc stos mov outsl mov lds pop cmp push mov push mov cmp jg iret xor or mov jno mov clc stc mov (bad) pop movsl sbb shll xlat sbb ret jg xor popf enter popa iret pop cmc fcomps ja (bad) fwait cmc stos fiaddl mov pop inc push iret push jecxz hlt push jp pushf mov fiaddl mov lea and gs sub adc sub scas dec xor outsb fdivs pop (bad) scas adc cmp outsl xchg dec shr sbb jns xchg repnz pop aam mov adc popf loope (bad) jle fcmovu popa jb sub pop out pop and dec mulb mov dec fstl cmp (bad) adc adc movsl cs aam call xchg fdivr lret mov cmc mov loopne movsl mov mulb mov sbbl fdivrl xor in (bad) (bad) test nop repnz dec and cmpsl jns icebp sbbl aas out sub xor cltd (bad) mov movsb stc push xor jns cmp jp xor add int add hlt test shrb and xor daa xor jl inc pop int and roll push movsb add pop sbb xchg lea call (bad) xchg add nop faddl divb sbb rcll addr16 lretw dec dec mov and test inc mov lds loop scas pop jecxz roll push outsl fimul and jnp xor xorl mov sbb pop jmp leave lahf mov or fs and fwait aaa enter pushl stos stos imul fdivs dec lds inc insl mov dec stos add xor jo adc icebp jne cmpsl push (bad) loop push test mov xor mov pop push mov and mov xorb or or sub xor dec aas mov test sub ja push ja mov mov (bad) sbb add push adc xchg (bad) and sbb loope imull xor mov xchg jl inc sub sbb imul inc mov mov aas (bad) fild pop aam lahf cs mov rcrb mov ss lret xor movsb mov push cmp push xor cld data16 int3 popf cmp in pop orl push (bad) dec mov fisttpl xchg cmpsb dec xchg or or inc leave fisubr mov andb into jo mov push sbb pop les push fldl stc movb lock jl dec xchg inc test xor iret (bad) fs adc or push lahf pop (bad) insb jl iret cmp jmp pop mov inc mov icebp cltd mov sbb push aad mov sahf in cwtl nop jb aas cmp adc xlat orb mov popa push jmp or mov adc adc inc pop (bad) jae add out or mov mov mov call mov jl jl loop jp andb arpl sbb or add lock mov pop add enter pop shl int pop mov nop ds in out inc add jmp (bad) mov pop push call insb insb sbb shrb fldl2e idiv out sbb icebp ret scas jns es (bad) (bad) adc ret je or (bad) sahf inc out jnp mov (bad) jmp pop pop test enter scas cmp rolb or mov jmp aam faddp pop sbb loop push xchg jmp and aam fnop fsubrl and pop mov int3 enter ds insb ds xor dec (bad) cld mov adc jnp and shl clc stc mov jo dec xchg mov in xchg inc xchg jge pop xor ds inc idivl jae add add dec lea inc arpl shrb mov mov cmp out add mov push xchg cmp (bad) insb (bad) mov add or sbb repnz adc xor dec fcmovnbe (bad) jo int and ret mov call fbstp cmp or movsb and je (bad) and gs add outsb cwtl dec or mov xchg xchg lret gs (bad) data16 popf scas adc int3 test outsb push xchg jmp or pop aaa mov mov mul fs test mov jbe mov mov vprotq jle repz adc ror mov pop fcmovnbe test enter fldl add push int jmp push xchg js gs insl in sarl gs repz dec pop dec out bound cmp pushf (bad) mov stos pusha mov enter xchg xchg outsb xchg cmp rclb sub sub icebp mov mov pop mov cmpsb push cmp daa pop mull or pop lret aaa in in repz mov push or repz int3 ja outsb aas xor dec fist out dec aas pop push pop (bad) adc orl test popf (bad) daa cli mov adc pop xchg cld and js cmc dec or jns clc popa scas (bad) jb jbe arpl dec jae js enter xor or sub cwtl push cld mov jge fldcw repnz mov shl add xchg cmc or adc fcmovb sub jl and lret jnp inc pop fnstcw jp (bad) aaa cmp mov lock ljmp mov fwait jp enter xchg int3 in xor dec mov icebp test (bad) cmpsb stos ss lret cmp insb inc daa lods (bad) jo sbb cmc dec adc insb jmp pop xor cmp add xchg dec and outsb xchg inc mov cs cmpsb into ja xchg push jl lea mov es movsl aam fcomps xor call xchg fildll sbb test scas sarb mov pop andb lea (bad) mov pop and mov inc xchg mov into or test pop xchg and std jmp (bad) xchg jns adc in insb ret fcomps es jecxz es stc mov sub xchg mov mov addr16 loopne mov mov adc mov (bad) push rcrb and (bad) pusha hlt adcl shlb dec fs cmp cmp jle test pop fcoms ds xchg mov ret cmpsl outsb pop push cli and ret mov xchg (bad) mov xor and add pop mov xchg push jmp les test int3 sahf repz push imul test dec sub fist cmp arpl cmp cmpsb and dec shr add cmp push int3 xor bnd dec pop add test test mov notb loope push pop lret in (bad) xlat fscale cmp (bad) pop jl pop mov lds aad sbb inc and cmp or in out push and sbb add repz test dec pop push in dec popa xchg xchg icebp addr16 inc mov test mov add sub sbb mov pushf test pop or enter jo xchg arpl dec mov (bad) in jnp mov dec push cmp xchg and cmp shrb dec xor and cmp pop jbe xor xchg adc ljmp test sub (bad) mov in cld mov adc jns repz or (bad) (bad) xor xchg sahf ja lock push add mov jle mov mov fdivl in movsb cmpsb fstpt add scas outsl sahf insl loopne jg adc pop jno repnz mov sbb xlat dec jp sub orl push pop add or test shr imul out xchg dec push mov (bad) inc dec insl es jo pusha lods cli scas jge popf pop push sub push insb js inc cmp subb daa xor and jno xor add arpl mov mov dec aad or push (bad) sti mov mov cld mov xchg je,pt dec lret mov cmp jns stos fbld cmp pop add push (bad) and dec cli xchg mov loope adc repz xchg or (bad) cld xchg adcb push pop sub testb incb inc mov mov inc pushf or and mov inc ret xchg shll push jmp jb fisub fidivl add or test pop cmp fyl2x inc mov jae leave inc int3 mov sbb pop in adc rolb cmp jecxz fildll shrl mov xchg or xchg call dec xor mov mov dec mov mov loop sti mov push gs int3 sub fisubrl adc addr16 dec leave xor cmp int mov sub cmp (bad) mov test popa inc mov (bad) push jnp loop xor add into sbb pop push mov fnstenv dec scas inc fsubrs movsl xchg popf cmp scas inc xchg mov pop enter cmp xor jnp inc pop pop jl lods insb dec mov ret cld add xor jp push sbb aaa negb xchg lock imul dec roll out in sbb lahf mov cwtl stos cmpsb sub jecxz push lahf out or jg sbb imul (bad) xor lret dec dec shrl outsl int out or add scas mov mov mov (bad) out fdivs loopne cmp adc pop cwtl cwtl mov push jecxz dec cmp xchg lret xor cmp push mov fnstenv xchg fwait adc addl adc ret cld daa add mov xlat js inc mov aas sbb adc addr16 push outsl and lods xor pushf xor sub cmpl imul push mov imul outsl jg inc xlat xor and ds arpl dec hlt cli or pop or stos mov cmp out ret push mov aam inc add sub and stos adc ss (bad) cmpsl push add cld jg cmp insl lods push jbe mov jge lret jnp sahf mov adc nop stos js push mov xchg lret or cmp jp cmp imul iret xchg cmc loope mov (bad) xor pop stos in les pop jecxz add pop push int add or push inc cmc fisttpl jge mov cmp or out outsl mov push aaa fst roll sbb lret mov stos push movsb (bad) mov push dec insb cmp mov mov (bad) std mov adc mov or (bad) mov enter sub loopne jb lea clc and lret xor call add popa adc push push std pop lret lret mov sbb in lcall push (bad) xor mov fidivr ja shlb or sub cmp sti scas mov nop pop lods insb cmp mov pop aam lret xchg fcmovbe fiaddl sahf push sub scas cmc iret imul mov mov arpl ds add call loop clc lahf dec inc xor ficoml mov ret cmc or add mov cwtl sub cmpsb jle (bad) push sub mov sub bound jecxz data16 and inc inc cmp lods into mov test sub repnz xor lods shl xchg rorl in dec inc lds mov (bad) pop sbb cmovns in pop cltd sbb into aas pop sub fstl or imul (bad) ftst bnd sbbl mov jecxz push inc sub dec mov jl xor and les cs mov data16 mov add cmc fbld roll push loopne aaa dec adc insb popa es lock push mov or sbb sbb js and or into adc cmp (bad) (bad) rcl add aaa mov xor incl rorb jmp (bad) idivb (bad) les shr jge push lahf mov mov out test sub mov data16 xor sbb or mov (bad) in jp sbb shlb inc dec and popf mov mov or jae or dec inc into jbe jnp jnp push xchg scas nop lea aas sub lret fwait insb push fsubs loope dec fs cli jmp pop ja lea fs pop call add scas test test mov mov and out cs inc insl insb push xchg (bad) test fwait dec cmp (bad) fucom mov mov std (bad) xor sub mov movb or (bad) cli push lret jb cmp and in adc jnp xor call mov shrd int nop xchg aaa pusha shrb push and (bad) ds arpl mov cmc mov sbb fisttpll std mov nop loop test push push push add sub push sbb lahf in in fwait xchg nop push btr jg pop int enter iret sub outsl insb rcl mov inc push jecxz add inc push xor in pushf or pop out xlat mov out daa adc out mov sbb shlb and xchg lods jne mov in outsb pop inc add (bad) loope mov cmc icebp dec xchg mov sbbl mov pop dec jmp cli pop inc mov push std idivb nop add (bad) jo mov mov mov mov mov cltd loope fcmovb andb pusha sbb xor xchg cwtl fstl outsb out xchg dec adc inc jbe movsl sbb in xchg insl push dec sbb fldl jecxz incb pusha xchg fwait cmp pop sub andl add negl repz and or out in daa roll xor pop movsl mov jne pop lea xchg out jge pop mov mov adc fs jbe mov mov repnz pop stos jecxz dec das mov add es leave arpl in imul ljmp in cltd ds mov xor lret push mov sub pop sub or call sbb xchg outsb lahf addr16 imul (bad) bound xchg jae or jmp push pop dec push push dec adc jbe (bad) sbb or xchg mov into rclb in ljmp ja ja ja loope xchg or add (bad) or aam repnz jno addb xchg in sbb frstor inc dec inc push enter lods pop cmp add data16 stos adc push pop cmpsl xchg add cld inc xchg sbb fs popf sarl pop lcall sbb push dec in push or scas sbb push xor add sti flds pop lcall cmp push sub and and iret in movups in ret add or sub inc jmp call and pop push or into test loope pop rclb add lcall in arpl adc in ja fs mov pop test mov inc push sbb mov mov mov push push xor xchg pop fimull xchg inc mov ret push lahf sub xchg add iret pop xchg xor and jmp pop mov dec xor repz ja (bad) idiv or xor xor mov and (bad) mov into xchg insl arpl push adc popa cmp mov outsl sub jnp xor push jns dec loope sbb fmull in push adc or inc out inc sbb lea (bad) and or sub decl lret xchg fidiv leave pop jmp (bad) loop jg sbb das push ss sbb push les sub je shll cltd add xchg aad mov xor ljmp rcrb pop (bad) cltd aam inc shrl (bad) mov lret sbb (bad) jmp or or jne movsl jo cld pop xor push inc cmc mov popf loope hlt loopne mov mov jns jnp or sarb add lock add out xchg lret adc pop idivb fchs in scas mov pop xor fist jne push cmpl adc js sub pop mov (bad) mov aas test sub lock cmpsl cmpsl dec mov jl (bad) sub add dec and sarl mov sbb test inc jno push into into ret lahf ja ljmp mov xchg pop outsb mov mov rcrb pop das out cmp sti data16 cwtl mull ljmp lret mov (bad) inc add sub movsl pop mov jbe pusha js ss jnp mov (bad) sbb adc cmpsl mov lret adc xlat xor pop sbb popa es sbb mov insl in aas xlat push pop cmp xchg adc rcrb fs sbb hlt jle bound mov or ror mov push and pop loopne shr xchg pop mov push push pop out jo push xor mov adc repnz inc (bad) cmc lahf lcall out and pop sub or in inc les jb and push and insl lahf mov (bad) lret jmp xchg lds jg out push cmp sbbl push xchg (bad) mov pushf add push pop mov ficoml gs ficom icebp insb xchg je sbb out mov push inc hlt xchg fdivrs nop fbld lret je loop and sub xchg xchg add cld add pop cmpsl int mov add test enter mov enter push cmp jns iret jle out xchg and mov cmp dec lea adc rolb adc xor iret lcall xchg aaa lret test aam pop mov jnp sbb or lea cmp or mov and sub lock cltd (bad) cs (bad) cmp jecxz push pop xchg in fstp sub and outsb fisubrl sub cld sub or test inc (bad) sub dec sub ss subl popf xlat iret cld movsb mov dec sub sub (bad) push fsubrl fsubl add xor loop pop xor push (bad) pmovmskb shlb xorl push jb je and cmp add negb jnp jmp lock movsb inc int fiaddl jecxz cmp pop cmp sahf xchg into sbb dec xchg psubsb pop adc in cwtl push pop gs imul sub lock lahf aas gs xchg cmp push mov or das push xor xchg inc das cltd call adc inc ret test ljmp fbld in mov div push or cmpsb out xchg fcomip sub or push jle mov out (bad) pop add (bad) lcall test imul push in call push push inc test aam cli pop cwtl ss call push ss jp cmp stos mov xorb push jne mov scas push push push (bad) (bad) push sti sti mov imul jbe lahf jmp adc fisttpll outsl pushf scas push imul and outsl xchg dec sti adc (bad) or mov jg lcall or cli sub inc loope movsb stos (bad) not pop xchg (bad) xor fcmove lret fcoml xor inc bound mov push sub sbb pop cmpl pop (bad) arpl pusha mov aas in ret sub push xchg leave hlt jg ja xchg test push imul jecxz mov jg into cwtl aas movsl fimul inc mov push aas clc jo fisubl adc lods inc mov ds push (bad) xlat push jnp arpl pop insl sbb jnp mov data16 mov sbb icebp stos cmp imul and jp mov mov inc mov sbb or fiaddl test add addl dec jp les xchg pop fistpl fsubs int mov cli or fstpl fsqrt imul or mov and or dec mov stc in dec mov (bad) mov lods cmpsl fisub sti iret inc push bound sbb add cmp pusha jb sbb dec add add or leave mov iret sub cs inc mov cs stos scas xchg inc pop outsl cs mov or sub sbb js cmp fcomps pop daa add mov xchg add push int3 dec divl or or popa sbb pop dec sub lahf loope mov jbe dec jg add aad incb cmp daa leave (bad) cmpsb dec xchg pop lods xchg inc add sbb outsl sbb xchg xchg divb push mov mov xor test adc adc mov stc and sti aad imul sub nop aam jo xor repz dec jp push enter sbb dec insl sub cld cltd jo int3 or mov subps test mov add daa loopne jne inc sarb mov add in pop mov cli mov stos icebp adc push jo push mov repz jno cmp scas dec adc jo cmp (bad) leave xor outsb pop fsubrp std cwtl mov psubusw fnstcw shr (bad) xor movsl push add xor (bad) push cld add sbb mov out cs lahf idivl jo int3 push (bad) pushf rol mov test popf cwtd ret and dec test das pop int3 pop push movsb push cmp inc inc adc ret repnz push push dec (bad) movsl insb adc (bad) xchg fstps or ss fsubs add cs adc daa int dec aas movsb cmc (bad) mov push mov mov pop (bad) ja and sub fsubl sub dec syscall inc (bad) push jo lcall add cld (bad) cmp scas repz add cmp sti xchg bound xchg stos (bad) scas and jb popw (bad) jae sub ss push lea xchg rep fmull jle xchg mov sti mov mov imull lea push mov inc sub adc daa push pop (bad) std jecxz repnz adc std or mov dec and add out das cltd (bad) lret jne pushf repnz jecxz mov push adc jge sarl push mov push dec shrb push pop xor inc shlb loopne jo add dec pusha out fstl push pop mov and or fs mov sahf repz cmp adc add mov in sbb sbb mov outsb mov adc xchg (bad) call ret mov add xor add jp pop pop cltd xchg fldl fcmove fstpl jp inc loopew mov (bad) imul jbe jbe pop loopne xor or repz push xlat nop or sbb (bad) adc rclb les aam lsl out inc sub cmp xchg mov add lahf lahf inc xlat jns push pop shrl test addr16 pushl push mov xor sub cmc pusha aas loope ds lds add push cmp lods in cmpsl out test call jl inc arpl call pop scas not data16 jae pop rcl subl or punpckhwd xor cmpsb jns push sbb jae cmp mov jge cmpsb call xchg xchg cmp fnstcw sti mov sub adc mov stos cmc scas cmp push int inc push in movsl int3 repz adc mov xor lods in repz dec adc out bound ret pop push push cld (bad) mov sarl mov leave sub inc mov pop test mov dec fstpt pop ja loop addr16 sbb push lret sahf aam rcl or and adc in add xchg jl cmpsb jle and ljmp pop xchg cmc mov (bad) dec mov lcall jp cmp jno pop cmp (bad) std cmp call ja cmpsb out lods jo imul mov lret sub popa sti xchg dec incb movsb fcmovbe pusha loop push ss and dec fnstenv call or ret mov cmp inc and fcompl mull pusha fimull xchg add int3 and idivl dec rclb sub ss dec add mov lret aad sahf xchg cmp mov jo stc mov mov pop jecxz outsl mov gs jg das lret and lret lds sub movsl or out add sbb imul ljmp imull popa lahf rclb push shrl dec xor hlt push pusha pop adc inc ret loopne pop arpl stos mov (bad) fdivs and jge push fmuls lods mov mov push sub and dec dec mov (bad) insl push test xorb mov jp jmp mov dec cmp jmp les mov xor push cmp outsl mov je mov movsl testb or xchg enter cmp arpl dec xchg pop int3 jb mov mov aaa cmp push mov jl adc es fldln2 test (bad) fldl popf sbbl pop les jecxz js adc call imulb (bad) pop stc mov jge (bad) mov (bad) out subl mov xchg xchg or fmuls loope fdivl sbb sbbl enter or mov cmpsl jb mov out sbb jnp adc sarl int3 adc mov mov and sti lea jmp jne adc outsb outsb mov cmpsl adcl push sbb insb adc or shlb mov fidivr ljmp ss es cmc sub or cld in dec in lcall push sti mov movsl mov mov cmpl add fs lahf lods rorb in loope lret xchg mov cmpsb dec lods mov nop xor pop stos rclb adc push sahf xchg mov fcmovu xchg mov or add fwait and hlt popw xor mov dec xor jmp aad sbb sbb hlt pop jbe push jge in stos test mov mov xchg jmp pop jae mov out mov sahf push mov imul add jp mov dec scas in jle xchg outsb xor xor popf and rcrl jg scas sbb imul aad daa sti fidivrl outsb inc outsb movsl dec out adc pop push movsl mov leave jns (bad) (bad) lret adc dec push ds std pop and mov jecxz es jle (bad) out inc sub repnz ss inc test jb push lahf btr sub mov pushf push xchg fucomi xchg or fistpl sub cmpsb or xchg cmp into jmp cmp xchg sub mov cmp in push (bad) fwait out sti pop rcll loope xchg (bad) sti dec xor adc jp xchg sarb push adc xor cli xlat lea jmp inc sub sahf ret jmp mov loop adc push test lea and mov cmp (bad) lods pop or mov mov mov xchg jne xchg add addr16 mov fbld cmp sub jb sbb out and jnp loopne popf and ljmp add lods mull xchg xor xchg mov test pushf mov xor push mov pop cmpsb bound inc mov cmp mov cmp fistpll pop adc dec dec mov mov rolb ss leave fwait push and jg into add or mov int xchg lea push shrl lds mov fldl lcall mov and mov jb sbb (bad) sbb sub jae push aaa mov push mull sub (bad) jp loop loop push fwait daa add test inc sti cwtl mov inc or xchg jmp mov (bad) loope std jge mov hlt mov push ss inc mov leave push or cmpsb and movsb orb pushf sti adc fmul gs adc mov cmp or aas cld jb jne push es not sub dec daa js sarb dec outsl dec bswap pop mov sarl and jns cli (bad) (bad) pop mov mov daa mov out dec ret sub and mov jmp push insb lods and dec add jmp and push add outsl out jo sbb sbb ficom ss mov cmpl mov sbb cwtl sbb aas jno jg add out pop in cwtl js shrl mov (bad) mov xchg add fwait jp jl frstor mov sub loope (bad) bound in pop jb inc push ja and fcmovnb push loop movsl stc mov fdivs in xbegin push in dec fldenv sub mov btc loopne lock popf stos pusha hlt imul mov repz mov ret lea mov popl jne jp daa xchg xchg fidiv gs repnz cmp sub fcoms adc shll rcr cmp lea ja jg stc jmp shrb clc push xsha256 cmpsb push jge push xchg fs xlat sbb inc adcl xchg jmp mov inc lods js test enter gs jbe sbb int3 sbb sub fdivs shlb add cld test add icebp enter es clc xor push mov jo es ds in mov lahf cltd cmc inc mov jne xor xchg sub add outsb push inc pop fistpl jo lods mov nop sbb sub fwait pop mov mov sbb mov add pop loop (bad) jns insl cmc movb shrl inc test (bad) lock add daa (bad) mov in adc (bad) lea sub sbb xchg mov sbb outsl pop and sbb mov mov xchg lock jg daa repnz es jge pmullw adc dec xchg mov jge popf or stos xchg push mov pushf jle out bound ds bound push subl push xchg imul adc push into sbb pop pop dec loopne mov jp lock push (bad) cmpsl add pop push jg add andl fistpll and xor mov or subl jae sbb mov outsl lds iret mov mov repz (bad) pushf outsb pop insb cmp test pushf dec fs out cmc adc push jne out sbb add xlat dec cmc cmpsl loopne sarb inc and mov push mov popa sub lea pop mov mov xchg ss into and fcmovbe ss sbb cmp mov in pop jmp insb fwait xlat rorb test aad adc mov mov in imul or nop into fs ss scas test and or leave movsl scas mov test frstor test cmp lods inc push jge xchg lock lock cmp sahf mov or popf or xor lcall add cmc repnz dec sahf and xchg rclb add xor or popf xchg out cmpl out inc pusha mov inc movsb insl repnz lods popa lods sbb xchg push dec add pop push roll xor icebp bound add jmp fdivrp (bad) loope mov and jecxz pusha add xchg or mov shrb (bad) movsb shrb sbb sbb xchg outsl sub ret hlt sbbb icebp test jge addr16 fdivp and add lret nop (bad) sub stos inc cmp dec inc push push js jecxz xchg pop (bad) pop movsl mov xchg fmul cwtl inc out mov mov jle mov adc sbb mov jge fdivp sbb stos xchg imul (bad) push stc cmp fsubl mov sbb sti out js sub jno incl (bad) cmp std rol fs insb fstl inc mov dec dec mov cmpsl cmp dec lahf sub xchg cmp jp cmpsl mov bound iret or pop push push dec cltd add daa cli in out fisub repz dec int3 add movsl adc imul sub bound gs xor fnop pop pop leave add (bad) jbe (bad) mov add jge pop jl push ret ret xor mov enter push (bad) popf mov pop (bad) fistpl pusha push dec or dec add (bad) cmp (bad) lea je aas dec ret les inc mov mov jmp call adc loope jmp mov add inc push mov cmc pop jecxz or cmc loope test mov sub cmc ja ljmp nop push or xor rcrl jns adc jecxz pop lods jbe lea sub cli xchg mov rcll fsubl xor jnp dec mov test lock daa mov mov mov fsubrl pop sbb jns in or and fdivrl sub lret (bad) xor out xor cwtl lahf sbb (bad) repz pop hlt stos (bad) mov imul adc pop stos aaa loopne inc leave fincstp mov popf pop shll sbb jnp lea jnp xor pand mov fs scas jp push adc icebp call out ret mov xor mov pop (bad) ds divb jae call ss xor xor or jns sbb jp and (bad) loop rcrl sbb sub clc test jl jns jnp repnz lods out test push add mov lahf testl hlt in repnz dec mov lret lret adc idivb idiv or or add jg xchg mov outsl jno push inc or mov mov int3 sub (bad) ret fsubl add or sub pop frstor (bad) sub mov mov leave pop sbb cltd jo divl loope mov adc sahf arpl adc dec out xchg aad push fsub adc repz cmc pop subl leave xchg cmp lret enter xor (bad) mov inc jnp (bad) hlt and push sbb rcrb pop xchg mov push pop jp test mov jno inc mov sti mov fisubrl inc and inc push jno mov out adcl sub (bad) dec push pop or pop sub push cmpsl fdivl mov cmp repz out xrelease xchg mov out call xchg pop setl paddusw stos or int push mov mov repz cmp mov and popf fdivrs mov loop shrb fcomps ret push mov xor pop das inc insb ds cmpsb xor dec push (bad) jg xor mov xrelease mov inc sbbb add xchg idivl cmpsl outsl sub dec inc enter cmp std imul mov addr16 (bad) jne xor das dec jno in lock mov in inc les ret or aas dec push outsl orl mov cmpsl out hlt es int jne dec add push push fstl ficomp (bad) cwtl mov mov dec pushf dec xor test mov fiaddl pop loop int repnz sub jl ret mov shr cmp cmp clc dec push mov data16 lods jne test fidivrl aam icebp add enter or xor jbe pop (bad) int3 add sub cs (bad) rorl cmpl push push std lds xchg push insl repnz jo jo push xchg cwtl jae aad outsl lcall adc jecxz cmpsb in out stos add stos add xchg jg pop daa or push fstpl cmp iret inc add inc aaa addl fbstp push es imul aas mov lret fcmovnbe stos xchg cltd jecxz and rclb out dec aas pop mov lret scas insb (bad) (bad) es mov mov cmp rcr or int and fstsw aam mov add into pop stc aaa clc sarl aad shll xor or in add in jnp inc mov bound test cltd xor xor std imul xchg movsl xor pop mov add lods fisttpll call icebp dec hlt mov stc pop hlt aaa cld xlat push scas pop call sub test add mov adc or in fcompl rcl loopne pop xchg icebp aaa imul pop jmp adc or inc out shrb or mov sub lds call je pop daa inc jbe (bad) xchg sub push out scas mov adc cld ret pushf jbe mov sub jns and out cmc sbb hlt adc xchg mov and je mov or iret inc or mov push xchg rol movsb sbb es fiaddl pushf subb cmpsb std dec cli movsl sbb pop sub repz in aas pop xor data16 adc xor scas test mov pop lahf add sbb cld icebp lock push ds mov mov add ficom ret nop mov jg and outsl call mov ret (bad) xor push add movsl adc pop pop sub daa popf mov jp fisttp int pushf inc xor ficompl data16 jne aad loop or stos js jnp ret sub dec jg add stc scas mov dec clc popa pop cwtl fsts add add dec imul in ret (bad) mov mov jmp ljmp push sub scas sub pop clc add pop add mull pop sbb (bad) aaa sub mov bound push push cwtl orl cmp pop in shrb add mov pop addr16 shlb out jne dec ss mov lret xchg push add pop mov test xor xchg jecxz and pop cwtl out jns mov cmc fs pop jae fild push inc (bad) mov jns mov int imul cmpsl ret inc jb push js or arpl lea jmp fcompl insb cmpsb mov jae cld xchg leave outsw push pop imul out jo inc pop adc xchg pop frstor int dec and test xchg xchg cmp aam rcr or or cs push rcl outsb fs inc shrb aam and addr16 mov mov sbbb mov or jne rclb lret clc aaa sbb imul fs ret cmp stos or loopne movsl scas test mov and mov mov mov shrb sbb cmp lods or (bad) cmp repz lods xor repz sbb jl pop add dec (bad) cltd sub test cwtl and adc jb stos ret cmp xchg std sub xor subl fsubrl xchg xor cwtl sbb call stc and loope jle or sub adc adc out xor xchg pusha rolb adc aam mov mov pcmpeqd stos shl inc lahf pop jb popa push or sahf popa (bad) pop or in jb stos jge repz push cli cmc push cmp pop stos out sti data16 inc aas adc pop imul jle test pushf mov lret arpl mov mov outsb push shll es mov movsb or sub leave ficoml jae popa push rorl addr16 push icebp pop cmpsb and fidivrl jg push cmp stc cmc inc dec pushf cwtl popa xchg sub loop (bad) sbb dec push lds cmp add pushl stos je jp jne pop xchg call and fsubrs lret sub pushf icebp mov test xchg adc dec mov xchg jb sahf lret mov mov mov xlat or mov sbb mov add lods fiadd insl mov cmp cmp add cmpb ljmp mov add jno sbb jle adc jae stc fidivl fistpll xor mov stos xchg sub psadbw jecxz sbb neg lahf arpl mov int push push clc push inc mov imul sahf xchg mov (bad) (bad) push and xor sub inc icebp fwait xor fxch dec aad mov outsl sbb jmp ss push out shll sbb sbb imul call jg dec xor (bad) popf or adc jae sahf jge jecxz aam and imul (bad) enter mov jmp pop pop cmpsb dec xchg addr16 sbb ds adc mov std test mov insl or pusha stos adc mov jb int3 loope xor gs jnp lods cmpsl (bad) (bad) xchg sub and fildl out mulb out push adc and inc xor insb mov xchg sti aam inc cmp int3 js mov fmuls insl xor out cli js sti fcmovnb push push movsb jb xor sub pop shrb mov mov dec (bad) enter push outsl scas and jg push ds and push rcrb data16 imul movb inc xchg and mov xchg shl mov int or push jecxz xor jmp icebp int3 cmp cli mov popa mov xchg gs xor xchg or arpl mov cmc pop push aas mov test leave mov movsl lock push mov pop scas add push enter pop insl mov push (bad) mov js dec mov push mov jo add add in or push dec push dec sub push xlat push fmull sbbb cmp test out sbb sbb add fisttp ret xchg test push jmp xchg sbb sbb adc push rcrb cmpsl jg mov push lds add rcrl ds leave jg fs stc add push (bad) lods flds popa out gs fwait mov and les adc inc and test xor ljmp mov mov loopne (bad) cmp xorb mov cmp popa xchg sbb icebp sbb mulps dec jno,pn stos test out call mov addr16 dec (bad) jbe movsl push dec jg (bad) (bad) pop and xor jg les pop mov add cs and sti rorl pop push stos push rcrl gs mov movsl push arpl fwait xor cld add loope pop mov mov fwait cmpsl das sbb mov rorl loopne fcmovu shrl mov and (bad) xor (bad) icebp jle int xchg out sub rorb out jl lods jne xcrypt-cfb cmpsl and cmovs xchg mull push push dec les sahf cs lods aas sti sbb mov cmp mov jae insl inc mov dec in lcall dec inc pop dec push dec mov dec or test mov jmp leave mov jl pop jecxz sahf loope adc xchg nop loope cmp mov in add data16 jns add outsl xchg inc ds lods cld mov daa mov fs pushf addr16 adc shlb jo aaa daa and adc cmp addr16 das je mov es arpl jg cmc inc push rorl and mov pop fmull (bad) and fisubl fiaddl mov icebp jns movsb (bad) stos adc jecxz pop mov dec fisttpll jnp mov das insb xchg or mov popf in je cltd pop mov ss ljmp lods popf adc (bad) push insl xor int3 inc push pop jmp jg dec add and insb (bad) or test and stos test popa dec fiadd aaa fldt mov repnz jge push or icebp jo sub not sahf xchg sub mov add fldcw js inc inc aaa mov sub sbb jmp or sub lret flds sub aaa fild add fimul shr fcomps adc mov in xor jnp (bad) icebp xlat xchg pop cwtl aaa outsb sbb fnstenv sbb arpl inc pop xchg (bad) ficoml mov xor sbb push stos pop xor push pushf cmp ds bound push xor pushw imul dec incl call sub dec lret lock jle,pt mov push divl sub jbe fdivs jbe sub lea push aaa push jbe js inc push or sub (bad) stos (bad) mov lret std les xchg (bad) icebp push or sbb fbld push pop sub mov popa jo push cmpsl arpl pop mov es out and dec pop mov push cwtl inc test loope adc push pop cmp xchg xchg push add (bad) jns outsl ficom (bad) sbb add push icebp and fwait int int stos (bad) dec or inc pop nop (bad) xchg adc shrb mov dec shlb inc xor jecxz sub (bad) mov ret inc aaa jge add test lds loopne and xor or cmp lahf fbld dec cmp sbb data16 fsubrs out loopne xor mov push mov pop scas das inc outsl mov mov (bad) mov popf mov jbe imulb and mov and ret push and add push dec setb jae jge push mov jae nop movsl fdivs in inc fnsave lfs pop mov sbb loop push add (bad) aas pop xlat cltd mov inc test mov pop cmp mov mov fstl cmp jecxz xchg push mov xchg sahf mov fisttp mov divb xor repnz ret push imul addr16 cmp stos pop test test fadds pop sub rcr xor gs aam sub adcb and add and sti cltd in xchg sahf dec incl jl andb scas dec into xchg mov cmp push jg jge inc sub jb mov push fistpl mov clc or scas xor dec inc daa sbb or mov push (bad) int or dec push aaa mov xor xchg icebp jl sub sahf andl push scas cmp das pop sub mov fnstsw xchg mov mov mov sub adc hlt sti dec ror or xor push fdivrl lods fisttp es jbe push ret je adc pop test (bad) rol or push fsubr pop test inc lcall loop pop dec mov test xchg push jae mov sbb mov dec insl lock aaa cmpsb fcoms mov dec mov mov pop pusha lahf out stos pop je mov push mov pop in call xlat sub (bad) cs mov rcrb cmpsl mov adc icebp xor (bad) leave fldcw data16 imul imul xchg vpsrld in out pop jne mov mov mov xor es (bad) mov scas inc jno cmc loope cmp xor imul hlt pop repnz mov pop (bad) sbb pop cmpsb sub sbb (bad) mov push dec dec in xor mov das adc (bad) dec bound cmpsl test addr16 jne and jg subl dec imul and or mov adc into push mov add sbb incb add mov jmp pusha (bad) (bad) push cmp xchg daa fdivl push outsb fdivl int3 gs cmp mov insl test mov (bad) mov xor mov xchg scas mov xchg and cmpsb aaa add and pop outsl xor dec and jns cmpsb push subl fistp lods xchg aaa aas cmpsb pop lods movsl aaa xchg cmp push dec ss out rclb repz pop popa daa mov xchg mov imull sti jp pop shl mov cmpsl adc dec roll les push xchg mov adc adc ja xor aad fcmovnu sub scas mov add fnstenv xchg ret sub mov add ret clc cltd dec cltd pop or das lods dec adc stos push rorl test pusha pop push (bad) jno jg das add mov xchg rorb cmp dec fnstenv push imul fwait (bad) cmp data16 pop pop loop enter push pop pop add lea mov or pop and (bad) test movsl adc in data16 stos mov insb lods jnp inc push mov dec jo,pt mov and push jns pop lds dec pop mov insl test jns aaa inc inc scas jl mov call mov adc push hlt into pop icebp push or cmp push (bad) pop xor fadds sbb std xor adcb mov xor subl insb fwait lock psllw orb testb jne mov jecxz fwait addr16 fdivp dec stos leave adc iret lods mov xor test rorb mov imul mov stos mov sub lds (bad) jae jns dec out fldenv iret mov dec movsl sub out jg push ss imul mov pop inc and push push dec cmpl push add push ret mov imul loop lret cmpsb test call push jmp pop dec and in into les inc lods fwait sbb or fimull cmpsl or or jmp jbe cmp add mov hlt out dec add mov out xchg and jae xchg test mov mov pop cs mov pop in add xchg stc inc std mov jle (bad) (bad) lock in test cmp call mov lea nop mov or ret (bad) and test lcall (bad) sub stos (bad) rorl push stos pop dec cmp dec shrb adc clc in mov out mov div test lcall pop mov sbb insb or and cmp (bad) pop movsl mov mov outsb maskmovq idivl add pop pushl and test insl jno mov test and cmp int or insb sbb mov and mov (bad) push rolb adc inc enter adc iret cwtl push or add rcrb (bad) adc xchg xchg add push cmp or ljmp lods stos sbb inc into mov aas cltd fisttp pop in pop mov out add test and loopne test jb mov ss movsb lea adc sarl addb fsubs jmp adc les test cmp xor cmp dec cmp add cwtl js cmp ljmp inc mov xor sub push call sbb push or stos push testb sahf iret fildl sub out int inc push cld pushf into loop add push and dec scas sub lods fs addl sbb mov sub mov test push mov (bad) and sub popa jmp pop jne (bad) repnz fxch push push out jecxz lock push cmpsb jnp push sbb fcomps jno inc addr16 arpl inc cmp imul dec mov or lea mov out or mov sub stos (bad) push adc dec push xlat and (bad) cmp cmpsb lods inc call jns sub xlat sbb cmc out (bad) rorl (bad) ss push push push push pushf test adc clc repz lret jecxz mov push fsts dec xchg imul inc adc xchg jbe mov lret lds push std outsb adc mov hlt sbb rclb js fwait add int xor mov adc lahf pop sbb arpl adc dec (bad) mov stos lret out cmp ret jge enter mov adc inc xchg daa dec adc jb mov (bad) sti int3 insb inc pop mov sahf sub push push stc ret adc or mov pop mov lcall mov add mov aaa adc xor fisttp and cmp mov fmul icebp jnp jmp iret repz xor sub out (bad) icebp push enter xor push cmp insl cvtdq2ps orl ficoml out mov in dec cmp test test sbb clc sbb dec cld inc push adc mov ret lods and ret xchg lods cli xchg sbb fadds or jne jg push in fcoml fwait mov sub cmp mov mov cmp xchg pop loop pop dec add sti adc add outsb cs or dec loope mov es (bad) jae push nop jno pusha insb addr16 xchg outsl (bad) aad mov arpl add and cmpsl pop int3 mov push rclb add addl add pop jmp cmp cld push into or arpl inc mov (bad) xor jle scas lcall call aad sub mov xchg xor cmp iret fildl movb cmpsb sbb add sub mov add mov jp pop orb push pushf fildl xchg xchg ret jo pop mov int3 lds cmp enter loope lret outsb test std lcall les dec mov loope xchg ret fisttpl and (bad) pop pop je sbb in ja (bad) mov jno arpl call sarb pop pop xor (bad) sbb cmpsb (bad) movsb adc in and xchg (bad) add fstpt pusha lret stos pop arpl mov out (bad) sbb mov cltd aam (bad) aaa mov int mov scas xchg ja push fcmovnu das inc orb add mov mov push decb jbe mov mov or in shr in add and or cmp pop ret and dec daa cmp ljmp sahf out dec mov lods int3 sbb mov and js sub rol mov mov mov test (bad) std out scas sti or std xchg loope lret ljmp lret cmc mov (bad) lcall ljmp cld lret stos lahf rolb adc dec inc icebp xchg pcmpgtb in sbb and jmp mov mov test mov xor stos adc lret out pop pop push mov jno push and sbb int3 dec xor hlt sub sbb in cmpsb es fnstenv pushf adcb stos fs add mov pop jg (bad) (bad) and lds mov subl mov ret mov stos mov aad ficomp rep push stos jmp mov gs sbb int3 cltd hlt mov mov std ficoml rorb jo test and es mov or cmp movsw xchg adc jo and mov push lret pop aas xchg ret push cmp push sub adc (bad) movsl lea push mov mov loopne lret push add cmp push ror xor cmp sti inc mov rclb xor sub fsubrl and mov hlt mov cld ja xchg pop lds test push dec pop fisubr add roll xor add mov mov fsubl lcall push mov push jb adc xor or add sahf sahf push mov cwtl xor xchg xchg test pop insb test call iret push and xchg insl hlt (bad) dec aad je or loopne into xor jae dec loope jmp es stc and out mov inc cmp jo mov mov cmp push lret addr16 lock ret ja test iret iret loope test es (bad) mov aad sbb scas xchg mov (bad) repz shrw sti dec pop xor insb jmp mov fidiv call cmp sub rcl fwait sub pusha movsb pop dec cmp sub out cmp test xor add and mov xor loopne push fisubrl std out aaa add aam fisubrl cmpsl mov adc sbb stos xchg scas sahf int add push or or pushf sbb and cmc xor cltd pushf xchg or pop neg xor leave (bad) or xor mov mov scas jmp inc mov cs clc xchg int in mov xchg adc ror movsl stc fistpll insl adc outsl xor ret pop lea popa xchg mov fstpl popl mov sbb jno adc mov mov push and fnstcw jno out cs jo test mov in pop push je jecxz jo lret jbe inc (bad) cmp fs mov mov xor mov adc xchg xor lock lret xchg cli xchg mov push aad fwait inc sbb scas js stc sbb fsubl stos das ret je jo cld push sub stos lret test outsl test push add ds ret jg push and (bad) xorl dec adc sbb test arpl repz sarb outsb mov push loopne push cld mov dec cld ds cmp outsl pop (bad) dec gs cwtl in xchg fmuls cld in repnz xchg arpl cmp das sub pop ud2 or lret mov cmp shlb data16 push lock sub and adc jnp add insb fcoms xchg pop jb cmp decl incl call inc popl lahf insb aas subl or mov jge ja xor pop rorl jb lret js xchg cld aam or movsl sub in out cmp jge fwait mov sti (bad) mov fstps hlt imul mov ret inc out sbb std mov add mov test or add fldl sahf jbe mov dec push mov and jg mov es sbb dec sub push mov cmpsb in sub sbb adc lods aaa pop lret sbb add scas lahf adc cmp popa dec scas xor mov mov pusha push or or shlb fisubr daa mov xchg add lods addr16 sub pop aam add shll rcrb add std mov pop adc cmp sub test jg lahf call out mov pop jp push fsub repz popf lock mov mov sub jecxz mov repnz movsb lock mov pop fidiv xchg sar dec dec rcrl decl arpl xchg jl fisub inc ret add pop sbb loop mov cmp rorl hlt jo (bad) pop or je jae mov (bad) push (bad) and pop (bad) ljmp sti inc roll push (bad) sbb in jg inc loopne mov mov mov sbb xor mov jnp sub xchg cmp ss xlat and fisubrl stos addr16 push and pcmpgtd pop out lahf xchg call and insl lds iret push xor mov scas fimull or ret push xchg pop mulb fidiv stos in mov icebp and ja call mov out fimul cmp sub lret shlb adcb out test adc icebp imul push repnz push icebp jp sub xchg lods rclb fwait or insl dec or or fstl or (bad) jno inc or fstpl jg leave test bnd repz push mov add pop mov orl leave int3 shr lretw std jb cld mov mov les mov (bad) (bad) lahf loop inc add mov (bad) pop cmp loope cmp push fwait push int dec aas data16 push cmpsl pop push js pop lods xor std stos loop jge push cli sub dec adc into push inc mov lods and aam dec sub push pop inc cwtl push test cmpsb stc ss shlb mov xlat testl js xchg cmp fisubr (bad) mov jge adc jns into fs cli cmpsb lods lock test dec add call insl xchg inc pop mov out push loope mov lods in jmp jne pop cmp jp mov in dec repz sub repz xchg xchg imulb xchg xchg shrl or mov insb adc jecxz stc mov jl pop dec mov (bad) clc gs insb ljmp dec sub mov ret dec rorb sub (bad) fnsave xchg xchg scas repnz pushf outsl jecxz jo negl add add pop add ret insl push jecxz in sub divb pop sbb sbb stos mov push mov ret jmp cmp mov jae xor and mov mov jle lret mov xor dec jb pop cltd jle mov push sub aad or lods sbb xchg push xchg jbe into enter sarb data16 sahf cli mov cmpsb (bad) and dec sub and cmp call mov adc loop xchg fcompl clc std fcoms shr jae pop pop test pop jge iret adc pop (bad) icebp cwtl test or jmp cld popf cmc repnz (bad) in es xor mov or out jp shrb push push nop test ret sbb cmp jnp cmp add in mov xor adc pushf fadd xchg loope xor jecxz xchg aaa insl popf sbb mov cli cli mov ret dec sti push loop loopne cltd fucomp sub xchg aad lahf cmp add call pushf rcll push pop add mov dec jnp data16 xchg lahf in lcall cmpsb (bad) loope dec test xchg ret (bad) lock jle xchg xchg fs dec cs loop adc cmp pop (bad) aaa in arpl fcompl mov mov sarb pushf xchg and and sahf jmp pop scas xchg cmp (bad) enter jp jle fsubrs mov dec mov insb sarb (bad) fidivr ret sbb (bad) das push cwtl popa hlt movsl push roll cmp jecxz insb in fimull jns jecxz (bad) mov mov daa gs xor mov adc mov loope cmc ret divl cmp xchg mov aad pop adc and out andl and pop pop or push pop xlat jl dec inc inc jge and (bad) mov repz xor cltd roll mov or pop in dec add or leave adc sbb dec add cmp movsb imul (bad) ja mov xor sub shr data16 lahf ficompl shlb ret adc decb jne cli and sbb adc adc inc popa insb pop mov mov fwait add lret lahf fucomi (bad) fwait shrb pop dec popf or fisubl ja outsb or or add (bad) mov add ret jmp pop dec das mov jae push xchg mov or pop popf mov pop sbb addl cmc adc add iret and test pusha mov loope mov mov repnz (bad) adc stc xlat pop out push nop fsubrp xchg and subl cltd aaa inc (bad) or jecxz je js dec mov fwait in repz jns int cmp mov negb aaa pop push jns cmp test add cmp sbb sbb negl orb aaa add xchg pop sbb insb inc push icebp iret int3 add sti pop push cmpsl lret mov xchg incl mov data16 add xor push aam and nop ss out or and test ja sti mov mov push sbb and adcl xchg pop jecxz es outsl clc das pop frstor roll out das stos add shrb outsl dec pop (bad) mov inc jae jecxz pop mov and movsl cmp (bad) jnp and inc cmc sbb stos lret add ret fs sbb or popa mov or jmp clc dec cmpsb pop jl loopne inc cs bound mov cmp out sub in fadds popf and push or lods and mov (bad) push fadd jge aad into pop mov cmp rcll sahf mov or (bad) mov sub das adc into std xchg pop faddl jge cmovle (bad) fidivl push (bad) movsl das or mov adc jbe or pop or sub jb cmpsl out test push stc scas adc in mov (bad) mov dec cmpsb xchg or jmp fwait cmc enter fdivs xchg mulb addr16 fistp arpl iret mov aas (bad) outsb inc mov xor or add sti push pop pop hlt mov in cmp mov and push or cwtl cli dec mov int add mov inc test shll push stos in loopne mov lahf into sbb icebp ret lret cmpsl jae jg xor mov addr16 sti cli loop sbb xlat push out daa hlt lock sbb adc xchg add daa push mull pop (bad) push (bad) lahf leave xor wbinvd dec adc cmp cs (bad) jecxz (bad) (bad) push sahf or jno clc adc pop jb in ja xchg inc out and lret add add lcall cmp js fisttp ret test in jno (bad) push sub daa loope mov push popa test jp,pt pop lods inc cmpsb fcoms adc mov aad and (bad) push in push fdivr jp into lcall addl stos ret lcall shr sbb movsl xor xchg mov repz fs mov sub fisttpl and xchg cmp or pop mov mov popa out xchg and mov in addr16 mov pop movb scas push mov xor mov lcall or lods test leave or xor dec mov enter pop xor push cmp adc ss inc icebp add push jno pusha xor sahf lods cmpsl roll pop adc cmpsb addr16 addr16 sti pop and and imul cmp (bad) aaa xchg aam and adc in cmpsl shrb push jle lock leave sarl or imul mov (bad) clc inc gs xchg loope sbb icebp in or jo mov mov mov cmc sbbl andl inc insb cmpsb inc outsb mov sbb lock dec dec sbb out pop adc cmp push push cmp or inc pop outsb pop fs movsb or mov in stc fucom cmp lock aas idiv and pop dec pop adc adc lahf xor sbb push mov push xor aad push mov (bad) xor lea jg pushf stos movsl btr mov fs fldcw repnz xchg fiaddl adc and pop sbb dec and mov sahf sbb mov sub xorl cmpsl inc mov mov ja mov test imul xchg dec ret lret and add jb jae cs lods sub pop lods sbb mov sbb imul xor stos mov cmp bound pop pop adc push in or mov (bad) icebp outsl push inc (bad) fldt pop xchg ljmp (bad) sbb xlat sub ret es lock push jge inc cwtl dec pop cwtl cltd call pop mov pop mov and dec and test out cmpxchg test jmp cli cmp outsl mov cltd jmp inc js pushf xchg add mov and pop imul sbb pop test add dec (bad) inc test sub and mov enter dec into fdivl shlb xchg adc xor push fist repnz inc jo fisub aas ret and (bad) mov or or popf out ret aas cmpsb test popa movl stos mov lock dec (bad) daa das jnp jmp xor add (bad) pop movsb cld push insl push js loope clc out outsl es cmp pop loope mov xchg fcmovb mov push adc add pop pop push mov cmp pop pop jne inc (bad) sub mov out add lcall add sub ds sti outsb test cmp xlat ss ja lahf scas push pop hlt xor pushf int and dec jecxz xor cmpsb into inc push jg call clc out inc push ret lahf mov icebp ss xchg mov test int3 and stc (bad) adc loop and clc ret loope pop sbb or fnstcw or (bad) sbb mov mov movsb aaa dec dec lods push jge cmp mov negb jb sarl add add mov mov or dec xor dec addl push dec in mov in inc inc stc push scas sbb aad shlb or (bad) sbb and fsubp adc jecxz push jns xchg pop fimul scas push ret aam jns in add mov fwait int3 pop mov data16 repnz negb std shrl lret mov jp pop mov mov adc xchg xchg jae in ja and and sub pop mov addr16 mov out rcrl pop leave push stos test fucom clc pop xor xchg xor les xor std movsb dec or xchg (bad) pop push sub mov xchg movsl pop out cmpsl mov std cmpl inc fbstp sti and sub pop or cli sub cmp int sbb jb jb cmp and sbb dec test stc cltd dec xchg jl cmp mov xchg in and sub pop mov jle xor scas bound imul sub mov mov ljmp imul arpl mov aas ss adc sub testl in fwait lods daa or pop andb daa imul test push mov (bad) mov adc ja and icebp mov outsl stc mov mov cmp lret fisubrl dec (bad) leave daa mov adcb jge add ss imul loope arpl xchg push xchg cmp repnz imul fldt push jno int3 mov lods jo (bad) in je add push adc xlat nopl mov push movsl iret jmp arpl ss jg bound fs jl loopne (bad) mov pop je or int3 pop mov pop xchg test mov (bad) andl cmp leave push xor mov clc mov inc push mov mov add ret test imul arpl cmp pop dec sub gs dec lahf dec cmp xchg mov sub inc mov pusha mov test sbb sti or and mov push and push cld repz cmc aam (bad) (bad) movsb jns mov pop lods xchg cmp enter xchg in cwtl mov cmpsb or insb bound inc std xchg stos push jmp fsubs sar add arpl mov push dec pop call stos push sarb cmp mov ljmp insl adc inc sar push sbb and shr aam jnp aaa iret cmpl call ds push dec addb in in push dec mov mov sub jne or stos cwtl ja sarl mov loop adc sahf jecxz adc mov rorl fcoms jmp sahf in cmp and sub out xor aas rcrl adc cmp sbb xchg rolb mov mov push js data16 sbb gs outsl add xchg mov sbb negb bound pusha sbb sub test cmp fcomi cmpl xchg cmp cltd lods adc mov adc xor stc dec cmp add sbb mov lds pop les arpl mov lock imul xchg subb mov jge addl mov mov movsl sbb fisttpll (bad) lods add mov mov and iret jb out ror sbb insl out adc test fcomip cmp adc xor out jbe hlt sbb pusha (bad) jmp ss adc push call cmp mov cmovge ss dec inc ja xor jae int xlat nop and xchg lods or ljmp push dec out or xor sbb or cmpsl push ficomp lods lock mov popa test stc jb outsl imull imul divb push scas mov mov dec adc or bound aaa xchg fistpll push inc inc decb push ljmp sbb and incl fisttpll push sbb mov and imul (bad) mov pushf shr jnp movsb orb mov les aam mov pushf out pop push test cmp push push mov push (bad) add dec lock pop jb imul cmp jmp pop mov sub adcl sarb mov pop pop out imul push adc cmc or push mov aaa test fcomps sbb adc push inc adc push (bad) (bad) icebp clc dec add cmp movsb dec push jne inc enter or sbb mov or jmp and pop hlt pop adc aam push leave shr xor pop inc cmpsb xchg movsb push divl jo xchg into pop mov imul sub mov test addr16 inc mov sbb fcomps sub mov xor dec mov sbb jle (bad) and pop pop or xchg roll andb or jl jns movsb or or popf inc pop xchg mov push inc (bad) cld in (bad) fs mov jp adc cwtl stos lods ds or mov lret sub xor ss and adc inc xchg cmc popf pop mov sub std inc mov and fucomp mov mov xorb movsb ja pop xor sbb mov jnp lea adc lds dec jp out and pop je out sbb add jecxz mov fnop out ljmp lret scas xor mov (bad) push sbb std mov add leave daa rclb addl xchg sbbl cmp push or scas sbb mov cmp mov sub inc add lods dec cmp mov cmp jmp xchg mov xchg push push mov sub dec sbb add sbb daa fsubrl lea scas aaa lds ret ret mov jp xchg cmpsl call sbb in out lds sbb or ja scas ds pop xchg (bad) fcoms lret cs mov jns imul jge pop push icebp xchg daa cmpl and fsubl mov push or popa jno pop cld int jl lahf imul test and fisub add mov cwtl fadds cmp mov fstpt mov (bad) (bad) repz mov lret fsubrl loop ds aad cmp jb inc ret pushf sub movsl fcmovu pop inc data16 adc mulb xor or xchg fiaddl mov inc push sbb jns mov loope sti cmpsb push or les inc sub and and mov ds in push cltd clc mov scas movsl cmp add xchg push cmp dec push loopne out fcompl pop out cmovge sbb and dec adc cld push push and mov movsl ljmp pusha pop mov es jmp daa addl fstl bnd push lret or mov jo mov push inc int3 clc inc mov imul pop (bad) in mov push (bad) push adc in mov nop cmc mov mov imul xchg pop cs imul int push push andl or movsb sub mov xchg (bad) pusha pop je add mov loope mov and mov xchg scas lret clc lods jno sub jne outsb js push fwait xchg jmp cmp mov jl aaa pop stos (bad) xchg push jl dec ret and stos nop fwait dec adc jl fmull frstor jo push (bad) pusha sub pop xchg jb (bad) mov lret es fisttp repnz fistpll mov (bad) pop (bad) (bad) sbb add xorb ret ss in out pop inc sbb hlt xchg js add mov cwtl pop call mov xchg xor lret (bad) fs adc xor add push or cwtl xor stc mov dec mov (bad) mov inc pop out mov cmpl inc in addr16 cs jmp jge push add ljmp jle inc dec int ds pop and pop inc cli adc push fidivr push jl loopne add xchg das gs xor sub (bad) movsl cld xor pop cwtl pusha sbb push notl mov sub sbb and push enter mov and mov or rcl xor cmp icebp dec (bad) adcl inc dec (bad) mov xor mov xor mov test stos and popa shrb imul cmp jle and inc jns dec add adc cmp inc in daa popa pushf stos mov add mov rcll mov (bad) cli fwait loopne cmpsl cmp out cmp pop jge pop adc or jbe pop (bad) xchg and rolb push jge fidivr cmp fmul or push mov sti lock sub dec leave gs cld adc lods ret inc inc out lock add adc or (bad) or sub push mov pop add insb aaa mov pop (bad) jo jnp add or shrl push movsb xchg adc push in sbb xchg aad mov jae test sub add dec je pop repz out (bad) xor rol lds mov or fistp repz mov mov pop insl xor mov call std adc pop inc dec ficompl imul fild icebp (bad) icebp fsub cmp or dec inc int mov pop nop inc or sbb fs jb pop leave or xlat sub pop and and sbb sti xchg add (bad) out dec dec cltd mov mov push lcall call (bad) adc push mov lcall stos jmp inc xchg loopne adc add sub or sbb aas mov addr16 ljmp repz push sbb jecxz inc lea lret mov push inc (bad) je out xchg sub mov fimull sbb mov mov adc mov jle or adc (bad) loope cmp fdivl lea cmp mov fidivr imul sbb aaa jb xchg lahf nop bound adc rclb pop shr xchg lret pop outsb lds pop pushf adc adc inc shr jmp jmp pushf mov xchg jmp lock push adc sub mov xchg cmpsb pop in xchg inc fisttp lret test ret sbb lcall sub icebp mov jmp arpl sahf rcll movsl jg dec mov dec fucom fwait and mov rep test into dec cli adc sar test adc cwtl pop pop loop test addl sub or xchg mov shlb jno xchg out test inc loop xchg xorl jb mov or cmp mov mov ds dec stos lods dec out xchg aaa mov pop or loope push cwtl movsl call adc movsl das pop nop sbb xchg adcl push pop jne dec je jl mov cmp or xlat sub fcmovnu imul test xchg xchg cmp lret jns push fs shrl cmp cli push xor and add into pop sbb bound test (bad) mov rcl fcoml mov mov xlat mov fldl and add arpl lods fidivr pop or sub outsb adc pop inc (bad) stc push mov sbb xchg inc lret sahf int (bad) jb repz fisubl sub mov push sbb pushf pop mov movsb mov (bad) fldcw mov das test mov jle test dec xchg hlt mov add push fstpt mov (bad) and imul inc in xor adc movsb xor mov aad xchg pop push pushf int3 cmp add (bad) jnp (bad) add sbb push cmp push mov imul (bad) in dec adc sar inc add insl jl pop mov std popf arpl std cmp push and (bad) mov in gs xor adc das mov push and aad jae in into mov mov mov adc leave cmc mov xchg insb xchg nop test jnp mov xchg repnz in jne jecxz not jmp (bad) mov lcall xchg notl pop jbe xchg sub ja popa cmp shrl inc mov (bad) mov negl push das stc imul mov pushf mov mov adc fninit mov sti pop (bad) sub or inc push aad xchg loopne andb clc fsubp lock push dec out lcall and mov clc mov adc pop mov lods lahf xchg out mov mov rorb or lock loope add mov add fadd and pop inc add add jb js lods lods push addr16 or into mov jnp inc sti ljmp stos ficom cltd push jne shrb fsubr pop test popa das adc gs add or sbb dec xchg (bad) sbb (bad) das mov push ret dec mov push mov (bad) ja into xchg cmp and nop lea aaa pop push lea mov pushf cltd pop hlt mov xchg gs enter or lods inc jo icebp pusha std ret mov and bound jns (bad) dec popf cmp sub sbb add std gs dec mov movsl xor repnz enter sbb xchg cmpsb shl cmc gs mov push loop pop dec inc cltd sbb xchg imull dec mov mov cli or ficompl add sbb jnp adc inc pop je lcall pop loop add mov sbb scas or hlt sahf fnstcw push imulb mov shll (bad) pop in pop or push dec addr16 push or dec fxam jne out lcall push or cmp imul sub xchg or or add adc (bad) loop xor push mov adc outsl pop mov or (bad) cli es xchg jo mov dec sahf loop push and les xchg sub data16 outsb jb cmpsl iret push mov ficoml div xor inc xlat out fbstp shlb mov mulps mov movswl sbb xor js arpl test test (bad) popf sbb pop sbb out cld clc addr16 test popa inc sbb xlat call dec test cmpsl je cltd mulb out in jmp roll mov (bad) xchg mov jo inc push lea xor ljmp xchg gs pop inc mov outsl dec xchg lret lret sub scas dec std hlt das inc mov (bad) insl clc test add mov movsb xchg xor loope pop call je and enter out dec jecxz and dec cs mov xchg push aam imul and jl or (bad) mov xchg subl mov push inc xchg adc pop add mov out insl outsl pop aad data16 xor xchg cld add add mov dec dec jo xchg pop cmpsl mov aam gs and or icebp call in cli dec popf mov xor push ljmp ror jecxz adc shrb jb xchg scas mov add es ljmp daa xchg lret inc (bad) lea dec rolb nop mov or pop xchg mov adc dec inc dec dec push inc dec jns jbe aam outsb jp pop lret cli inc in sbb ds jmp int or jg cmp test mov dec mov adc aaa popa lock int xchg add popf xchg bound sarl sbb xchg push dec push pop enter imul fimul pop aaa es emms js or jmp ds pop add sub fdivrp cs xchg aam loope outsl pop sub or push dec xor or daa sarl dec inc ljmp cmp jno mov decb (bad) pop xor xchg lock in (bad) jo das popa in (bad) push cmp outsl das xor lret repnz pop and mov loope icebp sbb ret in lods loope adc xor push xor arpl and (bad) jecxz inc fstps bnd (bad) fs lret aaa cmpsl cwtl xlat repz aas adc cmpsl add mov shll aas orl fild jno push sbb jp mov xor scas nop movsl iret cmp adc and jmp mov mov push xchg cmp repz shlb mov lock and insb sub sbb fs xchg rcl cmc sahf out outsb and repnz xor dec and out orb mov push scas mov loop mov jge mov scas andl mov (bad) push dec xor leave xchg ret rol pop ret (bad) test leave inc xor mov sub rcrl or iret pop xchg adc sbb jno jnp pop outsl ljmp int3 sub push mov or sub dec aad cmp ds jbe xorl cmpsb out lods into enter loop cmp repnz std dec xorl notb cmp movsb aam mov xlat jae push lret xchg ror outsl repz test dec push into mov dec push mov je ror xchg mov xchg mov test inc sahf dec adc in push pop xor and xchg mov outsl sbb inc cs xor push fs push imul jae rcr push jne (bad) and push cmp xor pop mov cli jae clc jb je sub in pop sahf push cmp addl jmp pop nop jp push cmp orl enter ljmp fildl sub loopne ss loopne jg subl jmp in outsl xlat pop xorb sbb mov sahf mov rcrb aad scas xchg inc and (bad) jae adc dec outsb (bad) jns jmp (bad) mov sahf addr16 push popa pop xchg mov adc pop xor sub repz xchg mov adc cld dec mov sub push mov xchg add jns das jl cmp sti jne js sbb or pop pop mov int inc fwait jl in jb out mov pop loopne sahf jbe pop xor pusha and int3 mov enter sub xor movsl fs and aas push add sbb xchg sub sub shr jne lahf fxch mov mov mov inc push and out aaa mov inc inc pop adc int into mov lock shlb lds aam sti adc xor pop pop cwtl aam inc addr16 test sub jmp sbb jecxz or push sbb and add sbb push xchg inc hlt scas xchg out iret outsb cmp push nop jl xor cli and sub sbb incl push popf adc dec jb (bad) aam (bad) aaa push loope sbb loope (bad) popf fs insb das sbb add push sbb rcrl shlb mov xchg inc cld adc nop mov or jno aam xchg jae jno iret dec cwtl fisub lods sbb sub fild ret xchg adc jp pop out xlat push fdivs sbb je fbstp jae mov sub xchg test mov push mov cmpsl dec stos lret adc icebp outsl (bad) (bad) adc scas adc add fwait jno push jbe or mov and ljmp cmp dec sub cld dec clc mov insl push xchg mov fildll mov outsb inc fxch pop xchg push cmpsl or lret jno sub rcll je roll cmpsb mov mov loopne mov sub (bad) iret push (bad) sub int3 test ja loopne lock lock neg jno adc xchg test pop fimul aas push in adc adc aaa add pushf lock and rcll (bad) push lods test pop add jecxz push out loope and loopne mov and jnp push cmpsb or movsb ret out sbb (bad) in inc insl movsl test jge xchg mov inc (bad) fisub or rcl add or movsb cld aaa fistpll push xor cwtl push divb mov and incl lock cld mov repz inc leave rcrb mov dec ss loop leave lret xorl stc cs lret dec cmp xchg push punpcklbw or popf in xlat ret mov push mov sub push movsb and mov scas mov cmc popf data16 mov push jo movl sub addr16 xchg add dec (bad) pop loope test pop lods (bad) xchg outsl xchg idivl lret push in repnz mov out push xor cltd push in jmp mov mov xchg push bnd xorl adc sub cmp and dec fist adc out push ret mov aas stos outsl pop fisubrl in rorl sar pusha outsb push and xchg pop lds adc mov sub (bad) negl repnz lret and cwtl pop and sub add rcll loope mov sbb mov inc in xchg leave sub out popf sbb jb fsubs sbb inc aaa ss xor into (bad) jb mov sbb loopne push xor inc inc xor sbb cmpsl xor pop lea enter mov shll sahf sbb or into shlb jle jp imul (bad) adc repz gs in mov clc cmp jns mov fsubs or aaa xor mov jae inc jo gs adc addr16 (bad) pop mov push frstor out loop xor push rclb int js mov cmpsb outsb dec insl inc inc add mov sbb jge mov fcoms mov je movsl lods jne fld1 mov mov cs or sbbl enter div pushf jp xchg push mov (bad) add loopne and pop pop dec mov cmp and fwait sub ret test scas (bad) cmc int inc pop adc movsl push xor sub push inc leave xor arpl sbb enter nop xchg pop add dec pop jmp mov rcrb aad and inc pop rclb popa ds xor mov jns int3 sbb lods jmp pop out imul adc lds subl xchg dec mov push icebp add das sub cmc aas lret mov sub (bad) mov aaa popa scas sarl or add mov out xlat cld jnp jo xor shll (bad) mov or or cmpsb inc mov jge add push jp and insl push leave dec mov clc mov int3 dec hlt mov add icebp hlt in (bad) jge and xlat scas lds shrl xchg push mov nop int xor cli xchg adc (bad) xor sbbb ret mov std jecxz cwtl cmp jl push ds call mov scas stc add cmpsb enter leave cld ljmp ljmp adc data16 rolb mov adc into inc jmp xlat ljmp (bad) mov cmp sbb xchg push pop cmp xor lahf xchg sbb jnp leave test (bad) cli enter adc test aas lcall cmp fdiv pop movsl jb in and jo push stos or push sub in sbb mov test loop lea rcrb mov aam cmc mov stc jae jmp mov out mov (bad) sub sub inc outsl ss xor (bad) pop push sarl or in hlt repnz xor push xchg sbb mov push push inc dec popf mov or loope test and mov insb lret pop pop add int mov lock jp and imul or outsb cmpsl mov in mov or push inc jno pushf sub cwtl gs sbb pop lods fs sahf inc hlt inc pusha add stos adc rcr mov cmp aad xorb imul ljmp jmp sbb pusha pop cmpsb shll adc mov xor fsubrs insl adc orb lret mov dec mov nop cmp in aam mov jle pop mov imul sarb jecxz sub jge xchg inc lea mov pop pop pop test data16 popa lcall scas dec dec mov cld sarb ss (bad) and add mov dec fidiv inc sub stc aad lret cmp sbb jnp xchg arpl add inc mov mov ljmp sbb (bad) mov (bad) jmp inc push mov jp andb xchg and dec jge sbb bound addr16 mov pop nop dec out push xchg lret jg outsl xchg adc or adc dec inc pop push xor dec sbbb call fistpll and cwtl mov add dec mov sub jl fs (bad) sbb js daa repnz gs xchg sub (bad) shrl xor jmp push (bad) sub add fwait movsl aas outsb or xor jp int loop frstor aaa jno data16 mov cmc mov roll ffreep into xor mov lcall cltd shr mov cmpsb aam leave push lret inc mov (bad) lret pop xchg mov dec pop inc fstl xchg lods xor jno je or fcmovnbe sbb push cmpsl jmp gs jecxz mul push (bad) outsl cmp fstps test push xlat ret icebp adc lods ds imul cwtl cs mov jle les push pop and fidivr cmp inc stc jg shll jbe test imul sub sahf movsl outsb in mov xchg scas (bad) daa in add ret jp pop out adc jns (bad) mov es movsb lods stos xchg jae lea mov mov xchg leave fstpl add push data16 push mov mov push fistpll push xor inc cmp xchg and gs (bad) std cli adc push cmc pop lds push clc mov push (bad) insb xor fbld outsb out fimull daa xor push arpl test mov inc sti adc fcomi cltd jo cmpsl subl pop cmp iret jnp pop sbb push dec movsl repz mov inc cmpb test sbb in inc sub js mov adcl xchg dec data16 ret out dec add sub inc aam and mov push test hlt mov rorl (bad) cmp xchg adc and sahf dec xchg jb cli cmp mov cltd adc or icebp cmc repz stc xor jns in and xchg push mov cld sbb mov push mov cmpsb test xlat insl int3 jg ljmp data16 pusha dec dec rolb out scas dec leave xchg push xor icebp punpckhwd xor imul cmpsl dec in je jne dec aaa int popf insb bound lret xor negl ret xchg push flds sub shrl rorl (bad) pop or leave (bad) je mov mov loop or pop aad jns mov out jb outsl xorl out xor call lock xor pop insb jge (bad) pop lds cwtl sbb xor stos cmp rcrb aas lret mov fnstsw outsb shrl pop fs and cmp idivb sbb int imul in lods push fisub test inc sub mov or adc add in ljmp call cmc and cmp or fimull sti cld push add icebp stos insl cmpsb jmp add mov xchg and jne enter jnp (bad) loope add cmp push dec aaa fwait pop loop cmp (bad) stos popf and xchg jns outsb pop shrl jno sbb mov dec cmpsb out jo mov add mov sub repnz jl and sbb les add repz push sti out fcompl je fcoms das add shrb roll fidivl add inc push cmp inc addr16 int daa or jns clc add call or fisttp ja jmp in sbb adc ror dec mov adc inc out push mov push shrl cld cmovae xchg xchg stos pop cmpsb (bad) repnz cmp jbe sahf nop push jg jp movl push adc loop dec jge cmpsl cmp xlat cmp movsb jo daa sub mov dec add or fsubp scas mov loope mov mov lret dec sbb mov mov divl ljmp xor sub outsb cmc mov inc mov push push test mov in jnp and mov fadds fs sti and pusha push lods push lea pop jg mov jp dec enter orl cli lret (bad) out outsl scas nop out add push mov in jno imul jb insl movsl (bad) jne rcrb xchg inc or lret aad inc jo lcall cmpsl push sbb dec loopne xrelease (bad) out push jmp mov aam ret (bad) or cmp (bad) dec or sub and ljmp pop add scas ret clc adc mov mov repz xor xlat outsw insb adc imul out adc push dec mov rolb in sub cmp je adc dec cmc in mov in loop sub mov mov xchg pop ret mov enter mov outsl outsb icebp pop pop hlt loope out mov lret jmp inc sub mov or dec popf jbe in push push call int dec clc jmp (bad) push addr16 cmp push and mov rcrb testb and fdivrs xchg mov adc mov test lret dec push mov in push and pushf and ret daa pop jae pop dec push cmpsb push int inc inc cli inc ljmp xchg sub pusha push dec sbb lock jns lcall cmpsl popf out xor jnp jo mov rcll xor and in push call mov jp sbb pop in pop and fs mov push ljmp clc pop cmp sub lret stos rol xor adc (bad) pop add std jno dec pop adc cmp pushf es push scas jp repnz pop ljmp orb popa aas mov test push rcrb out stc vfmsub213ps xchg (bad) ss xor mov stos or add jecxz mov (bad) xor dec leave (bad) ficom outsb mov stos test and out mov adc cs push cwtl xlat xchg enter xchg (bad) mov fldt or push fsubs mov xor lahf inc sbb push sub sbb mov and cmp ret cs sub jo pop (bad) xlat sub pop fs out add lods mov (bad) aad and cmpsl scas lods push xor dec or or stc xchg mov pushf xchg cmp adc cld jge xchg mov setle adc rorl sbb ss mov mov enter popf pushf les fnstenv test in mov (bad) gs ret out inc test aas jmp mov inc cli pop jecxz fmuls xchg (bad) imul into jp pop pop lret push mov aad pop inc jg lock jne aas sub cmpl adc xchg dec gs sub dec dec call mov rcrb mov lret push scas cltd rorb (bad) cmp jnp imul shll adc dec out dec inc adc pushf mov sbb rcrb dec mov sti inc lock aaa pusha push fdivr mov xor js loop rclb movsb and mov cltd mov movsl test jnp dec (bad) insb lret ret mov fnsave fs sub shrl dec mov jg dec enter jb jecxz xor lods and cmpsl push mov cmpsb dec in mov xor or mov iret ds mov mov pop jl xchg adc sahf dec adc lcall pop or mov mov loopne or aam mov in jno mov mov dec dec sbb pop inc cmpsl adc xor out push inc lret out movsb das and aaa and pop ret lret repnz xchg sbb push sbb jge stos rcrb rcrl ds pop mov cltd insb shrb xor test jnp int jb cmpb xlat lods daa add mov sbb cli and cld in jbe sbb adc jne into scas add in jmp dec mul sbb inc lret hlt arpl rorl push flds cli sti push inc mov movsl das xchg (bad) cmp cs icebp aas (bad) and je or scas cmpl movsb mov ret push add xor (bad) pop sbb xchg and sub dec mov cli mov mov mulb jg lds iret ror popa pop xor push cmc test adc mov lahf xchg sub xchg mov call fdivs mov xor ds mov subb cmp rcll adc (bad) lea mov (bad) aam insb sti add cmpsl xchg popa lret std jmp pop loop test lock into and (bad) mov jge js push ljmp inc daa fimul (bad) aaa sbb mov xlat and insl sbb cmp or xchg sub jne (bad) push int push mov notl and arpl (bad) dec shrl mov movsl insl dec insb aas xchg lods mov ret mov xchg je mov mov dec test stos mov fsub lea dec xor sbbb jnp mov div lcall fimul ja inc fcmovne sub int3 add vpshufhw lahf les cmp sti push cltd sub sbb jge inc test jmp mov dec inc sbb pushf sub xor imul mov stos mov (bad) popf mov (bad) fcomps jae pop ljmp adc fcmovnbe scas gs lahf add inc push mov nop cwtl movsb sbbb cmc mov js nopl test test in push push ficompl andb cmp sub pop sub adc (bad) bound mov lret in addl push xor pop sbb add clc dec cli jne in cmpsl imul cmp pusha mov clc lock in out jle dec inc (bad) jbe inc and sbb xchg and arpl imul loop or idiv nop jge (bad) lret dec cmp dec and pop push int3 into or pop jb xchg bnd mov xchg jae imul scas test push cmpsb sbb fwait or pop xor dec pushf inc int popf sbb adc sbb ret inc cmp push mov (bad) les cmp lcall and dec push movsb xchg adc mov sar call sub jecxz shl enter add int sbb cwtl clc or pop xchg mov pop ss jb cltd mov jp jbe ret jle (bad) lahf dec adc pop dec jns mov sbb pop mov test sti dec addr16 mov repnz stos xchg fmul xchg mov iret mov lods (bad) pop scas fwait loopne mov push and push test add movsl ja xchg add loopne ja sbb mov adc push jg negl fs test mov add mov jbe inc les pop jge (bad) data16 fwait push (bad) test loop imul test loope insb mov gs insl fisubr cli jno into xchg call inc add (bad) sub insb mov or mov test mov (bad) pop sti shr dec in aad jns outsb mov (bad) mov dec lcall call movsl ret out sbb sub dec pop add mov fsubrl nop cmp rdtsc jnp (bad) xor add dec jae ljmp inc js into jl cmp jmp mov lods push jo push popf mov icebp jmp pop loope fdivp and ds mov sbbl pop lcall xchg in test push xchg in inc inc leave xor mov rorb push fiaddl fptan jle jae mov test shr in imul daa push lock stc fistpl sbb (bad) (bad) dec adc pop aas dec repz pop scas xlat sahf mov xor inc iret mov test (bad) or pop add ds mov data16 fldl inc jp dec js insl shrl popa sbb pop pop push outsl stos sub nop out add cmpl enter xchg cmp cmp ror mov lcall int ja mov add aaa add mov sarb pop lahf mov adc pop loope pop and pusha cmc lods lds inc cmp hlt pop xor and (bad) cmpsb mov or jle cld push movsb stc insl or scas xor pop xor lock and icebp jo or (bad) stos jno insl inc (bad) pop mov mov cmp (bad) xor sbb inc adc mov cmp dec bound dec ds xchg xchg add mov mov xchg test cmpsl push sbb cwtl xchg inc aaa or fisttp jmp sub ret aad and movsb int inc scas and adc sub push xchg roll leave adc push aam nop push pop push call jge jg cmp (bad) fidivr pop adc mov xchg in pusha cli jp add and xchg sub iret adc pop std sahf and mov mov mov cmp jmp cmpsb xchg inc push mov nop test cwtl (bad) mov ss and jns js xchg mov or xchg sub hlt push test gs mov les (bad) mov mov movsl rolb (bad) sbb jbe push cli popa add lret stc pop inc or orl fistl and (bad) sbb or lods shlb icebp bnd push out outsb cmp fcoms sbb (bad) (bad) ret sbb cmp lock sbb sub loope mov outsl rorl xchg sahf fwait inc gs cmp cwtd xchg clc jge rcrb inc call jne push mov insl mov inc insb ljmp shr add ret sbb xchg push mov and (bad) jb out mov xlat mov dec aam and lds mov cld imul cmp fs hlt mov xor lret inc cmp leave loop add pop test jne hlt cld or ret (bad) pop add inc jge loopne stos inc les fbstp jno mov mov sub add and sbb cmp xlat mov mov push js xchg vmwrite jecxz lcall mov xorb ret std jle cwtl mov push in push cmp mov aas sbb movsb sub imul ror adc pop lret fwait lahf loope cld andl fmuls ja adc inc out dec xchg adc cs adc into push and xchg xchg shrl cmp pop mov xchg push pop cmp xor lahf xchg cmpb outsb loope mov test movsl arpl test sti fwait adc popf gs fdivrs cmpsb negb in loopne jb push out add lret push push pushf movsb mov add subl aad mov je in bound mov mov lea pop mov jge push ret inc mov aaa dec add xchg add and sbb inc xor and push orl les inc idivb xchg repnz dec fsubrl rorl lret pop adc repz (bad) mov push and out test in arpl mov or push inc mov jb cltd cs ljmp (bad) hlt fs inc rcr fadd mov sbb mov mov push or sub stos and in insb in popa pop and andb cmpsb sahf jo mov adc xchg movsl fnstenv cmp pop or push xchg dec mov nop pop sti cli cmp stos (bad) outsl aam jns in xor iret pop outsb (bad) mov dec idivl fs test xchg sub mov jne inc and fiaddl pop lcall scas push mov pop outsb pop lahf cmpsl mov aam mov mov insb xor lds ss or ja mov sub repnz xchg mov in fimull jae cmp lret and enter add (bad) imulb lock sarb xor testl jp int jno jg int3 in pop data16 test adc or sub loopne dec ds call xor lea arpl push mov inc nop adc xor lret mov aaa ret scas inc sbb mov icebp pushf pop jge jae or lds jmp movsl dec (bad) lcall out pop cmp mov dec (bad) outsb push in cli pop xchg fucom loop lods cmc movb int inc (bad) in sbb das lret rolb repnz dec divb jmp mov xor mov ja insl or mov jp push mov imul mov inc pop arpl pop (bad) jne and pop push lods addr16 les stos push dec mov stc mov jle dec xor dec push lods mov add lret push outsb stc mov in or fcmovnb lret xchg outsl dec fs jo stos movsb std dec mov mov fcoml iret inc cwtl inc leave rcrb pminub push sbb sbb movsl pop (bad) fucomip push test fcom rcrb add dec pop shll cmc or repnz cmp fstps cs add outsl mov inc cmp fbstp xchg je out repnz imul adc dec dec jne in push (bad) push mov rcrl in jg push jno cmp push jae adc dec cmp add xchg inc popa xor in (bad) repz mov xchg push pop sbb mov xchg lock xchg or int3 mov iret dec addr16 ja ret mov icebp add jo scas inc cld push mov mov aaa inc test imul cmc adcl cmp or repz dec cmpl ja scas call inc mov jns shlb aam xchg dec cli icebp ret mov xchg stc sub inc nop js mov pop popa pop mov imul lcall mov add ret int3 xchg cmp xchg and lahf dec adc inc fdivrs ljmp loope rcrl jb adc (bad) outsl hlt xor xor jns add and sbb loop adc sub push cld popf and loopne mov fsubrs mov aaa fwait iret pop data16 sub popa dec add inc outsb cwtl out mov aas xchg push cmp icebp xor fs mov test insb jne cltd mov in mov in repz fnstsw in and mov mov (bad) scas adc pop lahf push push xchg mov (bad) cs sub aaa or enter leave pop ljmp dec dec inc pop aam jp outsl data16 das push sbb adc into in adc xor jle and insb cmp xlat push sbb lds rorl push cmp nop pop stos rcrl inc lret pushf (bad) jae fidivr outsb rolb push pop push std and mov push inc repnz popa mov inc mov jae imul add daa fwait inc pop push and xor or adc jae jmp mov in mov (bad) xchg xchg dec rol and les mov sti push icebp cmp xchg and dec jbe leave jne aas jnp (bad) loope add test gs aas pop jecxz fcomp pushf inc cmp in pop sbb push mov jo lret jnp lret mov push mov andl mov lods xchg push loop xlat int cmc xchg ja jmp pop aaa adcl lret out pop mov mov aam inc aas mov sbb jbe adc add xor out sub outsb inc sarl mov pop mov stos sbb fdivp scas fisttpl shlb repnz nop iret jle sarb jp (bad) shll dec rcrb fwait mov aad sub xchg cmp jecxz and adc mov stos scas outsl sbb das mov sub inc and loope pop iret and push pop and frstor frstor aad lret call adc mov add add icebp mov jae mov loop movsl or repz mov ljmp adc sub leave jnp lods adc xchg mov cltd shrl mov in movl mov (bad) or dec pop ret mov push mov (bad) into outsl inc pop ret dec adc adc sub mov fs lods jp sbb enter dec pop pop add pop xchg jl xor pop in adc and or add iret add lcall bound mov jg lret xchg data16 stos imul fildl out and imul push repnz fs jo sub mov rcrl enter sub popa sbb jns dec pusha mov inc cs xor pop xor nop jae or or scas inc mov cmp dec xor dec and inc aaa imul mov insl sub dec dec mov stc dec cmc jle dec mov and (bad) fisttp int leave pusha pop je (bad) hlt cmpsl push adc test outsb ljmp stc and fidivrl aad and or add jl hlt scas jno out cltd add mov xchg and xchg jns lret mov lret push test inc adc push cmp fbld dec cmp sbb mov cmpsb jae adc rcll (bad) adc sub in test nop xchg iret data16 rcll sti aam nop fs pop aaa push sub lock lea in jb lds fdivrl les call movsb dec aad movsl and sbb and lret dec inc mov or clc pop xchg fnsetpm(287 loope stos hlt lds ficom sarl in pop gs enter (bad) icebp repz cmp popf daa mov xor es jmp mov scas cmpsl js dec mov scas loop xor sub into push adc (bad) sbb and inc cltd data16 mov xor cmp inc fsubrs push add pop pushf push insb cmp xor xor (bad) fwait (bad) fcmovb lret nop arpl rol mov and mov mov xlat xchg dec fistl int xchg or cwtl pop cld or push fsubrs sbb push in movsl mov movsb pop inc fsubrp push test sbb mov loop add jne and fwait shlb dec or sub cmp push nop sbb push sub imul fs cmovle (bad) mov cmp js cwtl dec dec dec je in push (bad) push mov pop xchg cmp jmp scas adc push jno setg aaa std add popl das les push jecxz (bad) ss mov sahf sbb mov cmpsb sbb mov lret into dec data16 mov (bad) movsb inc lret pusha mov dec loopne mov push jne xchg xchg xor push push or aam stos imul mulb mov pop or xchg inc mov jmp fiaddl jg je cmp adcb (bad) mov inc cmpsb mov push push xchg jnp dec daa insb sbb add (bad) mov pop int mov cld mov iret push imull push loop (bad) pop or ror cmpsb pop jbe xchg imul cmp or push insl jno cwtl mov adc jge sahf lahf adc pusha cmp dec mov fadd (bad) ja daa ja data16 div or push dec sub and push (bad) in and mov movsl movq inc push adc xor sub movsb fisub or mov lods dec add out mov (bad) sbb jbe inc cmp sbb adc jno sbb pop dec test dec rolb xor lret mov jae mov sbb xchg inc or inc fstl je xor faddl add shrb adc repz ljmp sub notl xchg jo test orb fstps dec repnz sbb pop insb push das in mov jbe popf aas and push add sub jne adc jb and xor sub out sbb adc insl sahf inc bound jecxz jnp pop lock mov es xor movsl or xchg inc mov xchg lret (bad) idivb push mov jp xchg mov push loopne push xor inc cmp xchg andl iret xor cmc inc mov pop clc out pop fst xor dec loop xor int3 or jle mov cld add dec xor jmp ret cmp int3 cmp fnstenv out stos mov push ss push adc fwait dec push xchg mov xchg mov mov les ds out sub hlt lcall not mov xor push lea insl inc sarb lret test loope jecxz incb lock dec adc xor sbbl dec push adc cmpsl aaa inc test push and xchg cwtl xchg sub cmp pop mov push push gs push sbb mov push ds xor xchg outsl lahf cmp sbb push xchg sahf stos in fiaddl sub es push add outsl adc jmp xchg in addl push xor ret sbb (bad) divl in arpl call sub out clc lea les cmp ret frstor pop mov sarb add sbb pop xchg and fs mov push enter or mov mov lret dec repz outsb rcr mov int3 iret enter std xchg bnd mov xchg je imul out test jno loope jg mov imull imul icebp xchg cmp push jnp push cmp inc push or jp clc add movsl (bad) adc pop enter pop loopne xor ljmp movups mov add test call xchg cmpsb mov mov js mov dec and bound sbb cmp out xor pop cmp jnp enter popa cli (bad) and adc cmpsl xchg aas lcall cmp xlat negb movsl jno jecxz and or push sub in sbb fsubp scas mov test iret mov rcrb mov (bad) jb mov clc jb ljmp xor sub sub inc outsb xor fisubl pop push sarb or jmp icebp fdivrl out and dec sar push fnstsw fcoms es add dec ret ret jae aaa pushf dec test and mov imul mov int3 lds out add push mov out sub xchg orl jecxz cmpsb mov in mov or push inc jo fwait sub lret cwtl fs sbb push lods arpl inc repz pop add stos pminsw fisubl aaa loop ret mov and ds test gs fstl xchg fcomp test or jge sub addr16 mov pop sub mov push out inc movsb fsubs insb adc jg int3 aaa push or dec ja out adc push dec mov popl stos jecxz sarl je into pop mov cmc in mov mov add inc mov fs pop pop test gs popa cltd repnz sti sarl xor scas mov inc push adc lahf push mov aam out push repz ffree int jno data16 sub (bad) mov sub mov (bad) mov ficomp cmp add xor inc andb mov fadd pop movaps enter or jge (bad) sub loope jg push fbld push sub push mov pop xchg push jmp incb rcll insb mov or aad out pop js cltd clc or pop aad cmpsl pop out xor mov rclb xor and sub push data16 add call pop sub mov repz cltd mov mov paddsw test and addl jno mov cmc xor iret outsl in fildll cmp imul mov pop jmp cld sahf jg lock aas mov inc jb adc push subb test fmull divl jbe mov inc mov stos dec popa inc fist daa xchg scas xor je jbe or add cmpsb stos in adc icebp in stc jecxz fdivs cwtl fistpl xchg fcmovb hlt adc mov dec outsb xchg sbb xchg pop pop lcall ja lahf test xchg outsb push pop es idiv mov mov xor inc jle dec call jmp rcrb stos dec lahf inc mov mov fsubrl xchg jb jecxz arpl push xor (bad) jbe xchg dec or clc xchg int3 loopne leave mov jle insb das push (bad) lock mov push loope push aaa ror jp inc cmp mov es addr16 test std adc (bad) movsb call cli sub in xor sbb xor adc test dec int out adc pminub xchg xchg lea repz imul popa dec push sbb sbb in scas pop dec cmp stos xor adc fwait ss and shlb stc push lret dec jp shrl sti ret cwtl push push dec pop in mov ret push (bad) arpl (bad) shrb inc imul lahf divl xlat push push leave aas add les xchg adc and jmp rdtsc lahf mov sbbb out jecxz xor mov fcmovne push mov mov add push sub jnp and mov adc sahf gs imulb shrb xor ljmp push ret lcall push aaa jbe out repz and jp fwait test xor or sub and inc fistpll and leave push push xorb jmp pop add movb cmp popa xchg xchg mov pop sbb xchg inc cmp inc and lods xor sub or mov add scas repnz mov cmp fnop pop (bad) mov mov lcall cmp sub fwait sahf xchg jno inc int3 (bad) mov jo imul inc and cmp arpl inc mov js (bad) inc mov push mov add sbb pusha insl cmpsl mov in add jle xchg push out adc xor and push jb lea jae xchg inc pop mov leave fstpl mov sub stos push mov mov dec fidivr push xor xchg test leave jecxz add jbe movb or sahf or sub frstor dec cmp out sbb sbb adc rclb inc lea stc sub jecxz (bad) mov mov mov sarb mov das out lcall les push jg lahf pop int push notb xchg pusha fiadd lock repnz push cld insb and cmpsb mov dec xchg lahf pushf xchg cmp cltd lret jl jle adc mov adc rcl dec rolb adc ljmp mov and lds jp mov push imul idivl xor cmp inc outsb popf arpl adc gs cld pop mov data16 pop in loopne cs pop push lret mov movsl insb dec imul add test es mov (bad) xchg je jo mov dec test jb mov out sub push xor jg and sbb jle sbb or xor aaa fnstsw and xchg sbb mov imul dec push pop dec (bad) mov scas cmp and dec cltd sub sarb insl dec lods mov pop push push aas movsb push das jae sub dec inc (bad) xor popa nop push stos js push push add mov pop jmp cltd data16 fcmovnbe push jle lahf (bad) mov sbb test cwtl pop cmp jne cmp (bad) (bad) lds mov rolb stos jmp test cltd test sub push ret arpl jg insl subb iret sahf jo and xor add add xor add add add add xor add add add add add and add add add sbb add sbb add add add add xchg add sub add xor add pusha add add add add add add add add add ror int3 xlat into roll add rcl leave mov jo add (bad) fadd (bad) int3 mov repz repnz aad enter mov rol add aam out rcl icebp aam in rcl fmulp lret mov jo add rcl jmp lret out into int3 out ror out rcl in (bad) aad ret (bad) mov mov add add enter (bad) out lret leave out sarb mov int in (bad) aad (bad) leave mov lods sarl add jo faddp (bad) jmp int3 out ret cwtl xchg in jno in jne jmp mov rcl jmp aad (bad) enter mov mov add leave lret jecxz shr (bad) lock mov repz icebp cmp in jns in mov out xlat aad fcomp iret mov mov add add add (bad) enter lock mov imulb sub or notl adc cmp in cmpb mov fcomp rol (bad) stos mov rol enter in lret int3 lock ret icebp les jo cmc xor stc push push cli add stc push push notl adc aas inc in jg jmp mov (bad) fmul rol cmpsl lods scas stos scas add jecxz aam mov repz (bad) mov jno divl xor push psubd add add stc add notb push icebp inc inc in mov fnop out fld mov mov mov add mov jecxz ret icebp lret leave (bad) call mov enter jo mov xchg xchg negb stc sub cli or cli add cli add stc add negb sbb push push jmp pushf in aam out (bad) in fxch mov mov mov iret ret (bad) int mov (bad) (bad) out lret lret (bad) (bad) mov into jns frstor loop data16 mov hlt xchg xchg negl stc sub sti or cli add cli add clc adc repnz inc in xchg xchg in rcl out (bad) out (bad) jecxz fld mov lods stos scas add add xlat fnop vpshuflw loopne ret cmpl int (bad) mov rorb in and and cmc inc xor lea iret movsb (bad) repnz notb cli and cli add repnz cmpsb movsl loop leave (bad) rol jecxz shr fnstsw loop fstpt cmpsl mov mov add xlat (bad) vpminsw aad fcom in int fdivrl pushf sbb push out sub sbb clc or std pop psubb ljmp lock (bad) mov and clc sbb repnz cltd fistpll fwait mov loop shr loope (bad) fstpt mov add cmpl add add add add rcl out aam (bad) mov in shr lret lret mov jne pop dec out sub cli adc cld or sti push add dec cmp xchg jno fldcw hlt xchg push push repz movsl jbe imul imul (bad) lock (bad) fdivrl movsl scas scas mov add fcomp sarl fcmovb ret mov mov int3 mov call (bad) mov roll cmc sub sti push add or cli or sti sbb call mov hlt mov stos cmpsb (bad) mov ss adc outsl lods imul in fcmovbe fidivl mov add fnop rcl mov fld mov mov cmpsb stos mov mov ror in (bad) mov jecxz dec cmc sub sti syscall sti (bad) sti push push cld and cmc bound mov (bad) in mov hlt mov lock mov xchg pop add adc cwtl xor jne int out fucomip out (bad) rcl mov mov add add loopne loope int3 fadd leave add add rcl int mov mov (bad) scas mov rol lret (bad) mov jb push dec cmc cs cld sbb cld sbb cld push adc xor fbstp mov mov mov pop and add adc adc xchg pop xor ror in loopne out xlat aam mov mov ror lret aam (bad) (bad) into add add add fcmovbe rol scas mov mov mov lods into mov jmp shl les out inc cmc cmp clc dec xor arpl test test mov mov (bad) mov mov push cwtl and xchg adc (bad) adc adc mov rcr lret icebp jmp out in (bad) lret add aam int3 mov mov add add add (bad) (bad) mov test mov mov mov mov out lret mov stos mov subl (bad) out outsl fidivl (bad) mov (bad) movsl (bad) ret mov xchg push xchg and nop adc mov pop xchg and stos popa (bad) rol out call ror roll add out fcmovnu ret (bad) xlat (bad) clc in (bad) rol mov add add rcl aad mov mov les loop mov cmpsb mov pushf (bad) (bad) mov rol lret (bad) dec aam ds je fnstsw mov mov cmp add adc (bad) adc popf cmp icebp jmp mov add add rol (bad) add add add add loop ljmp (bad) mov mov mov ret mov movsb mov mov mov (bad) stos lret iret aam shl das fucomi adc clc or out jbe ffree (bad) lret fadd mov mov ss cmp xchg sub mov fucomi in loop loopne (bad) fadds add mov int add add add (bad) mov add mov mov stos mov scas mov test mov out (bad) lock enter fdivl int cmp out push in push out add cld add sti or cli xor lock int (bad) fadd mov scas insb inc movsb dec pusha test in aad loop cmpl add add rcl (bad) mov add add fcmovu rol ret int3 rol add add add lret lret fcomp add add mov loop (bad) mov sarl in mov mov pop fucomip push call add sti add sti add cld adc stc xor ffree (bad) lret faddp mov mov fcom (bad) out fstp out loope icebp ljmp out (bad) xlat fcom rcl lds in (bad) add add add lds loopne (bad) fdivrl mov scas fnstcw in sarl fisttpl out sbb stc add cli add cmpl cli inc (bad) xchg into fcmovu enter mov ror out fcmovu in (bad) fcmovnbe roll add ret lds mov add add add mov lret xlat (bad) ret ret enter cmpsb stos mov mov lret enter call (bad) (bad) aam dec loop sbb cli or sti pop out (bad) stc pop in inc fucomp jle (bad) leave lret lock enter icebp aad out fnop loop aam lret add imul out out in add aam (bad) xlat add aad loop lret xlat add add add call cmp scas mov scas mov mov ffree shr mov (bad) les repnz stc and idivl out data16 jecxz rcl mov (bad) icebp lret leave icebp rcl out aad (bad) into aad int iret mov jmp add add int3 (bad) (bad) sarl iret mov mov cmpsl enter mov in ret rol int3 mov frstor jo in rcr mov (bad) ljmp int3 lret (bad) icebp loop jmp add add leave int3 cmpl add add mov lret rol add (bad) fnstcw mov mov shrb test into int3 in enter ret mov mov into (bad) jecxz enter test repz (bad) out int jmp fildl add add jmp jecxz fildl fst aad aam add add add in loope fcmovb lret mov add int3 mov fcmovb rol scas mov mov ret mov jecxz ret leave clc ror repnz out (bad) (bad) int3 jmp add add jecxz fcomi jecxz out fiadd add lret mov stos lds mov movsb mov mov mov sarb loope in out loopne add mov add add add (bad) mov add add add fcmovbe aad stos scas cmpsb cwtl pushf mov lods enter mov mov scas (bad) mov in int fcmovu out rcl out int xlat fadds add add add icebp jmp add add add jecxz (bad) iret roll ror int3 add loop rol enter ror lret add add into iret jecxz into in into fadd vpsubusb add add aam fnop fiaddl loopne fsubr in loope fildl add cmpl call ljmp sarb add add add add mov loope ffree mov add int ret mov shrl fcom aad add add cmpl add int3 iret add add (bad) iret (bad) fcmovnbe rcl enter lret movb loopne fmulp ret mov add add rcl lds in in add add add xlat fcmovb mov add add add (bad) mov add add aad lret rol add add add mov add add rcl add (bad) enter (bad) rol add aad into xlat rcl add add add add iret roll add (bad) (bad) (bad) (bad) incl add cmpl add (bad) jmp (bad) incl add (bad) jmp (bad) incl add (bad) jmp (bad) incl add (bad) jmp (bad) incl add (bad) inc jg add (bad) (bad) incl (bad) (bad) incl pop incl add (bad) incb (bad) add (bad) (bad) cld add incl add (bad) clc add incl add inc add incl add incl add incb add jg add lock add add jmp add add add inc add add add incl add add add incb add add add incb add add add cld inc add add add clc rolb add add icebp rolb add add jecxz add add add out add add add out add add add int3 bound add sldt incb add add add decl add jnp pusha add aas add (bad) clc rolb jg add jno add incl cmpl incl add call add incl add out loopne jg add std into loope (bad) incl add fsubp pop (bad) incl add mov add (bad) mov add (bad) (bad) xor (bad) incl add (bad) xor (bad) incl add jmp (bad) (bad) incl add jmp (bad) (bad) incl add std (bad) (bad) (bad) incl add dec (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) mov add add add add add add add sbb add add orb add cmpl add mov scas add into shll cmc xlat (bad) neg fcoml add add add loop (bad) repnz out aam hlt fstp mov add int3 mov cmc ror in int ljmp fcmovu (bad) js enter iret int3 in xlat aam jg in cmp into int fstp cmpl add (bad) mov (bad) lret enter in sahf pushf (bad) push push sti add in dec dec jmp fucomp (bad) fdivl js scas pushf mov int icebp int3 (bad) in mov sti add cli add cli add in push push jmp (bad) rcr jae je add add mov sarl mov negb sti add cli add stc add in pop pop jmp fnop int jno jb add stos cltd lahf lret stos mov rcl jmp sar into mov sub icebp sarl pop sti add cli add cld add icebp cmp in fcom neg loopne call jb jae (bad) mov (bad) jmp cmc aam (bad) mov pop inc out add add lcall jecxz (bad) mov mov cld add notb adc mov loop int3 cmpsb mov repz ja add add add cmpl add add mov (bad) mov fmul int3 ljmp jne cmp adc add add jmp cli leave mov aas inc lock cmpsb data16 cld in cmc lock jp mov rol scas mov xchg lcall std aad test (bad) adc cld or cli push add add ljmp (bad) mov repz enter add lar scas ret out repnz icebp mov mov add cmc xlat fcmovnbe mov add add mov in enter aam (bad) jmp stos lods xchg push dec call jmp sbb inc fcomip mov cmpl daa pushf xor nop or (bad) or (bad) lods repz div mulb add lahf nop xchg mov cmpsl add add add lahf mov cmpsl stos sahf mov fcmovnbe repnz mov dec cli (bad) pop (bad) xchg mov mov (bad) mov sub push xchg sbb lea and repnz out ror roll faddp leave fadd movl add fucom mov mov rol (bad) leave mov mov mov shrb ljmp fcomi or cld stos ret mov and add cmc in hlt repnz add add add add add add xchg mov add xchg mov scas scas cmpsl xchg pushf lods nop xchg out rcl std ror call (bad) es add incl call pavgb mov lds pop inc mov cmc jmp add into aad lods mov add ffree enter add add mov add add xlat test ret scas mov mov mov jns ljmp add std adc int enter sahf (bad) (bad) cmc fnstsw out in add add nop add add add stos xchg lcall stos fwait mov fnop clc enter mov ljmp std add pushl (bad) in (bad) int repz clc in mov mov cmpl add icebp fnclex add add add in aad add add add int3 rolb add add add rcl in int3 into add add add sti aam shrl loope (bad) scas out mov or pushl fcomip mov fcmovbe vpmaxsw ret (bad) icebp xlat fdivrs add add add cmpsl xchg popf movsl xchg cltd add add xchg mov mov icebp ret ror ret lahf iret fsubr enter mov lret (bad) cli aad fcmovnb les add add (bad) add add add jecxz (bad) add add add (bad) rolb add add add aad int mov mov jmp fistpll mov cmp repz in int (bad) fcmovbe ffreep rcl movb lcall add mov add add cmpsl fwait mov mov mov cmpsb lods xchg xchg sarl out rcr roll in fildl add add add leave iret add add add int rolb add add out fidivrl in aad (bad) call add add add cwtl xchg xchg add add mov add add add mov cmpsl mov cmpsl add add int3 rolb add add add ret movl rolb add add leave mov int3 mov (bad) mov add add mov scas fwait movsb add (bad) mov add add add mov cltd add enter cmpl add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) (bad) inc (bad) (bad) incl (bad) (bad) incb (bad) (bad) cld add lock inc add incl add incb add clc add add add add add add add add addb fildl add xchg inc add cld rolb insl cwtl add sti and aas (bad) (bad) fadds push fstps (bad) std cmpsb jg std lods jg dec cmpl pushl (bad) (bad) (bad) out (bad) ljmp add add add add add add add add add add pop add aad mov add add mov test cmpl out iret into sti call cmpl add add into into repz (bad) neg fcmovu int test mov stos out ret lret icebp pop pop (bad) or jmp ja lock (bad) (bad) int (bad) xchg add (bad) (bad) (bad) icebp mov add (bad) or jmp test in jmp rol xchg add lret (bad) fmulp rcrb mov cli add add cmc adc out mov sarl add add loopne ror ret test insb push loop or add std (bad) jae dec mov push push cli add sti push push loop (bad) mov mov add ret mov in int mov sti add incl add or xchg jp cmc mov imulb cmc mov pop mov cli ljmp add mov mov mov sar cmp sahf (bad) push inc (bad) or jmp hlt fldenv cltd mov add es sub rol (bad) clc jmp add add add add mov add stos lcall mov xlat (bad) mov cmc jge fnop mov rol mov cmp add jmp in in repz add add add add add mov mov test mov mov mov ret lods mov int xor out and hlt rol rcr mov add std repnz lds add add add add add add mov movsl mov cmpsb shrl lret leave cmc mov adc incl ljmp repnz (bad) aam mov in fcompp cmpl add scas mov scas lahf mov mov scas lcall ret fcoms jmp add incb in decl ljmp mul jecxz mov add add rol add mov test movsb test mov xchg fisubr fmul leave lret shr rcl add mov add sahf add add scas mov cmpsl stos faddp ret mov into lret enter add mov mov add add add cmpl scas mov test stos scas hlt into int3 jmp roll add mov add mov mov mov mov stos aam rcl mov add lret rol add add add mov add add mov add cmpl add mov add add (bad) (bad) incl (bad) stc incl (bad) clc incl (bad) clc jg push aas add rcrb incl pop add cmpl add add add add add add add add incb pop add inc jg cli cmp mull incl (bad) (bad) add mov incl and add outsb je outsb xor xor push or add add adc add add add add pop push inc add pop add add mov add add or stc push (bad) incl add add add add mov push adc add add add (bad) (bad) incl add add add add add add add add add mov hlt xchg hlt xchg je add add add add add inc adc (bad) incl add add xchg add add hlt xchg hlt xchg hlt xchg inc add add add add add or inc add (bad) (bad) incl add add xchg (bad) (bad) (bad) incl add add push inc add ret pop add push inc add inc add ret pop add push dec or add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp mov xor pop ret push mov xor pop ret push mov sub push mov push mov push pop call push push push mov movl movl mov mov pushl call mov lea call call push lea push call mov mov mov pushl call lea call pushl call movswl mov push pushl lea push call push push call mov call pushl lea push call xor cmpl sete neg movswl mov lea call push jmp lea call lea call ret lea call ret mov mov pushl call mov mov mov mov mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl cmpl jne lea push push mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl lea push push mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call mov call mov mov cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jne jmp cmpl jle mov sub jo push pushl call mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret call push mov sub push mov push mov mov call push push push mov movl mov and mov mov and mov mov mov pushl call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push lea push lea push call call movl movl lea push lea push call movl movl lea push lea push call lea push lea push call mov lea push lea push lea push lea push push call add movswl test je cmpl jne push push call movl jmp movl mov mov mov pushl lea push call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl lea call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea push lea push call mov lea call movswl test je jmp push call mov lea call push push call mov lea call push push call mov lea call push call neg sbb inc neg mov lea push lea push lea push push call add movswl test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp xor test je jmp mov movl mov mov imul jo mov mov cmpl jne jmp mov mov add jo mov mov push mov pushl lea push call call jmp mov mov add jo mov mov lea push mov pushl mov mov pushl call mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp mov cmpl jne jmp cmpl jne push push call movl jmp movl mov mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl pushl mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl lea call lea call movl push jmp lea push lea push lea push push call add lea call lea push lea push lea push lea push lea push push call add ret lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pushl call mov mov mov pop pop pop leave ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf cld mov add (bad) (bad) (bad) (bad) (bad) (bad) call mov add adc add mov add mov add mov add mov add mov add add cmp sbb dec mov add sbb js sbb mov sbb test sbb mov mov add mov add mov add mov add mov add mov add mov add mov add sbb pop mov add add mov add sbb sbb add fdivl sbb (bad) mov add mov add mov add mov add sbb pop mov add add andb add sbb push mov add mov add sbb (bad) mov add mov add add add push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add mov pop pop jbe popa inc jb gs popa jb add bound jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor xor pop pop jbe popa push je inc popa je sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor incl pop pop jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 pop pop jbe popa push je inc insl jo xchg add jbe popa push popa jb jae inc jno or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add pop pop jbe popa push je push outsl push outsb imul add fs data16 gs add scas add fs imul ss add bound push inc js gs imul pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec add pop jbe popa push je push outsl inc outsb jae add push add dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add lods add jbe popa inc jb gs bound add bound jb gs je 