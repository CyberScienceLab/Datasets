imul in mov push push mov test jne lea mov mov or (bad) (bad) mov push push push push call mov add test je jle movzwl std in testb adc push push push push dec add (bad) jle inc pop mov pop pop ret mov or adc pushl jge lcall test jle insb rorb push push mov jbe jbe andl or pushf pop xchg mov rclb push or je adc add jne sub sbb mov mov lea andl popa or mov mov outsl aas repnz jo roll mov or mov ret (bad) jne jl cli addl add or xchg jo push mov fstpt adc pop sbb and or jne test je movzbl xlat pusha dec lock jmp mov jp or incb pop sahf js jmp andl and xor push push push (bad) push cmp push cmp out sbb mov (bad) (bad) call pop pop pop pop ret ja sbb sub imul dec and enter outsb lahf mov and sbb cmp jne cmp je xor pop lock or add in adc loopne xchg push sbb nop or ret mov test clc or pusha or dec lock cld mov push subl cmp ds sub jp lods adc and inc insb mov push mov lea push es shrl loop mov in mov int3 sbb jl mov adc push pop and loopne sbb in push enter sti pop mov mov xorps movlpd sti mov test ror adc add mov mov sbb and pop out out and ljmp fild mov xor xor loop cmp movl es enter test sbb add lods ret cmp push int3 xor sub idivl lods (bad) cmp adc mulb in dec scas arpl mov insb add push xchg mov lea ficomp loopne xor xor adc std add add adc or jle cmp (bad) outsb decl shlb mov stc (bad) loopne xor mov mov xchg out cmpl negl sbb stos push pushl sahf and jns (bad) mov sahf xchg test leave je mov push xchg adc or mov pop cmp pop xor pop fimull cmpsl xchg call rcll in mov or mov mov stos mov fimul and or sar sbb loope shr or mov adc add push push sbb ljmp mov rcr push mov shr and (bad) dec stc sbb push (bad) add or shr es add sbb jl mov and mov and push inc and movsb mov mov mov push mov xlat (bad) clc or mov int adc and or scas mov invd (bad) adc (bad) pop xlat lcall mov mov mov pushf or out repz into mov or push adc lret adc iret jne jg mov adc out mov sub mov ljmp aas fadds leave subl int3 mov pop xchg cld pop out dec add cmp push jg adc rclb adc or (bad) jle arpl ret cmova (bad) inc jg sbb mov (bad) jns xor mov inc jmp cld add cmp jne mov mov mov jmp mov test je je enter xor xlat pop or (bad) test inc inc loopne lock adc shrb cmpsb loopne pop push hlt enter jge add call add push push push incl mov je mov es or mov mov pop aas or lret fmull jns jb jl and push fidivl lock ss push cld mov pushl mov shld jp shl or xor fdivp rcr adc cwtl dec sbb mov dec roll mov lea clc aaa xor add cmp ja cmp mov scas and cli insl sub mov sub je sbb fdivs jae lea jns dec mov mov nop pop sub jbe inc ljmp movups sub shll (bad) xor sbb push and enter fucomi shlb inc ss and ret divb sub sub mov test add popf mov xor mov xchg or inc dec jb inc shlb cmpl enter (bad) sbb es xor and leave cmp xor and mov rclb dec adc xor sti lahf sbb inc push incl or out add divl push int3 movb (bad) dec ss push in mov int3 push mov je pop insl dec jo stos repnz xor int xchg jne pop and das xor mov int or sbb pop mov jl repz or sbb sbb or adc adc adc inc adc xchg pop adc adc add stc ds add aad rcl iret add ja sbb xor rol enter mov push fcmovb call pop icebp std repnz ret (bad) (bad) lds adcl hlt dec add pop (bad) adc ret add or cmp (bad) jecxz out mov cmp push loope fisttp jg sub mov aas inc into sub pop lods loopne ljmp fstpt (bad) cs inc jp ret xchg xchg sub jb jg pop lea ret add rol mov sbb (bad) jo fldl ret jb test push xor mov cmpsb push icebp adc test xor lea xor mov aas lock sub ss push jae add jns jnp ret or or cmpl nop orl xor and adc addr16 fnstsw add xor repz sti push ret jns nop add iret cmp (bad) sub inc subl ror sbb subl jo jne sub sub pushf mov jnp jge jmp xor pop clc test add adc jne dec cmp add shlb mov mov clc add push push popa dec cmp pop ret and jne push push add call and adc rorb dec add jne jmp out or add xchg es sub insl or mov push dec aam mov int3 mov inc jg cmpsb mov or pop and push xor sti fdivrp push fmuls push or adc add xor push roll int rorb mov adc inc push fisttpll ldmxcsr jnp add (bad) or hlt fadds cld or aam or loope jo sub mov pop inc fnstcw (bad) outsb lods mov or add test leave sahf mov mov orl repnz cmp neg or push daa sub pushl push lea scas lea mov lock mov pop sahf popf dec loopne mov daa out and mov jnp pop push inc pop dec sub loope cmp push adc sub sbbl imull les or push cli xchg pop add mov sub mov clc jle imul call push bound fdivs cmp xchg or (bad) push inc sub sahf adc mov add mov sbb in repnz jle push sub sbb sbb adc les test cmp sbb sbb inc sahf (bad) out ss sbb or (bad) pop (bad) stos push scas daa cmp add ret bnd or dec cmp (bad) out incl enter adc push sbb rclb push imul add cmp je std mov pop pusha cmp jb movb adc jb add outsl xchg dec mov jne mov mov (bad) sbb jne xor ret mov pop idiv dec mov push add add (bad) je push xchg lock inc lock xchg push xor or jne je mov add cmp popf loope mov sbb iret or das push rclb jmp or testb mov sub mov es jp and jmp and pop neg pop sbb and adc sarb mov sub or les add aaa mov into add and mov pop and sti sub push lret loop call cld add cmp adc enter cmp mov jne mov or cmp add aaa sub push outsl jo push jnp mov inc and popf fsubrs in jne (bad) in (bad) in jmp rorb cmpl mov push cmp gs and shl xor jo in push addr16 cmp cmp in das xor psrld loope xchg dec mov cltd or test inc ds xor mov jmp fnstenv (bad) mov (bad) not and in loope in fmuls push inc lret pop sbb push add cmp mov loop sti jbe add push fnclex jmp sbb jp rcrl jo cmp aas insb and dec xor pop jns rorb push sbb jle or pop or mov xor and test xchg push shlb pop sbbl mov imul pop jae sub mov (bad) mov sbb pop icebp bound cmp cmp je inc dec mov and dec or cmp mov pop dec nop imul and faddp std push ss jmp mov shrb fmull xor cmp je push fwait push xor daa add push jle ss in mov or dec adc (bad) xchg or ss xor push xchg sbb jmp pop mov out adc sbb push or xchg out push in push mov scas test jne adc add stos push cltd mov jmp pusha or inc add loopne push push sbb cmp nop ret mov out popl jecxz xchg enter aaa es (bad) cmp shlb and add js iret or xchg xchg es js call xchg es fmuls dec iret iret int aam or mov pop addr16 mov lock in out sahf (bad) inc shrb mov xchg lahf sub dec add movsl push add (bad) out in test imul sub pop lahf xor xchg fsubrs fdivr or in ds pop imul and inc sbb pop adc sti add dec add add orb jo pop add dec dec hlt add fildl sbb mov adc adc push mov lock push push pusha imul lea push cpuid mov pop mov mov dec ficom in pop mov loopne xor sbb adc outsb je insb or adc xor neg repnz cmp leave xor shll (bad) test cmp and sbb jo jnp jge cmp push or sub xlat das dec scas adc clc or adc push orl pop sub or lcall clc pop (bad) xor push pushf jmp pop lods add fcmovnb cmp fsubrs je pushf mov pop pop je,pn insl iret popa jo add clc xlat add in out or adc lidtl shrb and es push add loop jne mov mov jbe es mulb mov mov add daa inc adc cmp fmuls xchg rolb cmp push push push cmpl jb push xor lea int3 cs cltd mov push push inc dec cld mov std sub mov or jl sub dec xchg movsb or jns popf je jo insb lods push mov xchg adc mov inc cld fsubl pop fisubrl cmp sbb sbb inc or jns out jg inc mov xor lea neg pop dec pop stos stos mov mov jge clc mov subb neg adc shlb cld arpl inc push push mov mov aam add push loopne mov jmp mov popw ljmp or jg cmp insl loopne and jne xchg adc and cmp jae sbb or dec das lock (bad) lods (bad) push sar bound mov loopne pushl mov test loopne inc xor lds inc clc cmp push push popf jo mov adc push add inc push repnz in sbb clc aas movsb mov dec out mov dec test mov rcrb hlt dec outsb mov and sbb push mov inc out xor in fwait (bad) std int or cmp jne mov test jne rorl inc into loopne mov ret notb fcomip rorl add xor mov xor add fistpll xchg jp hlt push repnz dec mov xchg mov fisttpll ret or ret push or or adc sub xor push pop pop aam rol push xor ja jp test sbb ds push push rclb push test xor in fsubrs ljmp and icebp lret sbb jae cmpl dec adc and push jne xorb data16 dec mov mov fcoml lods js,pn sbb cmp ret (bad) and cwtl testb sbb push test xor mov push mov xor adc int3 pop pop xchg jmp sub mov (bad) mov jl and jmp and push loop mov mov mov les scas out inc sbb add sbb mov xchg (bad) cmpsb mov add xor sar (bad) or xor push or inc shrl pop jmp fwait outsb push adc or inc incl inc or jb jecxz jae dec xor (bad) jmp jp lock pushf into adc std cmp stc into cmp inc dec add mov in add jge mov inc outsl ljmp xadd lea add orl fisubr push sub add jle jle mov add add mov adc stos dec fiaddl sbb jo fsubrs and out or dec or ljmp test or pop jmp mov push mov add test das jmp stos ss add adcl mov lds xlat mov mov mov test pop mov out out fimul mov push push je pushf xor dec or or mov pop std es (bad) mov cmp jne pop pop aaa imull ja dec ret cltd hlt or cmpsl dec add mov stc adcb ss inc sbb mov mov mov and lea adc push insb jp xchg push or dec sub cmp add ss int test mov adc in int aaa inc enter fnsave push add inc loope sbb sbb test mov mov mov and mov add fnstsw cmp rolb cmp jle jle stc orb mov out int add repz jo mov ret and or xorl add push jo int3 lock outsb push aas sti and sub test lea xchg out fistl pop push inc adc and inc aad test lea pop jg pop push roll (bad) out jae cmpb sbb test (bad) imul stos sub es push (bad) je lea push imul add sub in and repnz mov (bad) mov mov out clc je sub xor fwait or mov mov jne test ret je adc adc or roll (bad) in mov or clc jb rolb imul mov add loope push jecxz or pop ret adc stc jle test loopne cmp subl test (bad) nop dec out jae mov pop sbb lea pop jg and cwtl mov add sub sub insb sbb cvttps2pi push or out neg mov dec hlt inc hlt mov adc pop popf mov inc and xor mov pop outsl push cmp (bad) pop sbb ret xchg lret sbb in outsl and xor ss xor or and jb mov or or push addr16 enter cld add add mov adc mov shll adc cltd xchg xchg mov sbb mov push je mov pop fldenv (bad) repnz decl shr rep and jmp mov or lods mov ja nop cltd pop mov mov and fisubl daa or add (bad) out jge cmp push pop rcll xor decb adc lret decl sub jne gs aaa jl shll sub out add jns pop add inc nop or pop lcall add pop and pop das daa dec (bad) inc adc and cmpsl sbb jo jb,pt sub push push jl lahf out dec adc push and inc outsb push repz stc jbe jle inc dec dec jg repz out pop jg decb xchg stos or and lock and fsubrp and stos mov mov push dec loopne (bad) loope jmp inc dec inc cld pop das sarb shll pop stos das lock icebp lret jmp pop movb mov add cwtl xor jg ljmp push daa mov or pushf push mov in cmp in data16 mov add lea mov ss mov add sub sarl mov pop in je loop add adc mov mov add lahf test mov inc inc dec jne jge roll iret out js inc sub rclb ret mov je fcmove mov shr or hlt (bad) dec add mov dec in xor pop cld sbb daa xchg aas push pop imul and dec decb in fdivl add fisubr jl xor inc pop fldpi in mov in dec pushf aas inc lods pusha lcall loop cmp pop add push cli add shrb rcrl push movsb dec mov lea mov lret es call jo add scas and pop pop pop leave mov ljmp xor call cmp pop incl ss (bad) sbb fistpl pop jl mov out jbe ds and ja cmp push lea sub fwait jo or push stos sbb pop jo mov fwait and rol sbb cs pop mov push mov jbe xor cmpsb or mov mov jp mov mov cmp je call mov adc jmp mov (bad) das in jne ja les jno sub jecxz jg fnop jbe les add mov and (bad) cmp pop add ds xor xchg enter pusha pop push inc push and pop jne push inc pusha cmp enter inc sbb and jmp sbb push adc out jne pop icebp mov iret lods push jne push push xor add ret jmp clc cmp cmp cwtl pusha jmp lods push fs push inc adc add push pushf lods and adc loop inc dec adc in sub jg out pop scas push push sbb sbb add hlt test push imulb push jae stos pusha push imul enter xchg lods mov add dec jbe sar pmuludq sarb rclb add jae js js jae push pop in ds test fcoml fdivs orb xchg dec clc lock popa dec adc xor jb or lahf into xchg sbb xor jo push jns inc jb push pop rep pop shll adc mov add lcall mov mov (bad) sbb add cmp rcrb mov or (bad) mov std fwait inc dec and push push push push push sub ljmp mov cli out push mov mov pop sub sbb je fidivrl std xchg cli adc bnd lea lea or cmpl int3 push jo inc add xchg inc jo sub popl sti not lods add inc add and fsubrs push inc dec push enter push mov add adc sub sarl mov dec data16 (bad) jmp movsb cmp cli jno sub mov sub push cli test push rorb xor mov dec outsl and icebp mov sbbl push cmc sub cmp sbb in scas psubsb fsubrs push pop push movsb mov pop sti push out data16 punpckhdq cmp pop jmp dec lcall push and fisttpll pop fsubrl or or addr16 push push jbe add sahf in push lea pop jo imul jl or std bound cmp push or mov enter jl outsb pop inc mov rol jno push push movsb and mov cmpl pop out push pop push or push or mov push sbb dec push mov adc aas addb imul loope or call sub pop ljmp adc add add or scas inc dec test (bad) push loopne mov pop mov adc icebp mov cmpb testl cli mov mov das cmp push je arpl mov and mov jns jmp clc jmp rcrl sbb inc cmpb orl sub (bad) nop pushf cmp rolb and cmp push ror test pop mov or add cmp rorb mov mov add ret inc add aaa mov les and push insb lods cltd xor lret test mov (bad) mov mov ja je cmpl dec push imul nop lret jg outsl movl xchg adcl cmp test xchg xchg mov jns (bad) lea lea adc adc in lock iret push shll xlat pop mov dec (bad) mov cs mov enter insl add pop mov pop pop int3 outsl cmp js lret add adc mov in cmp cltd adc adcl lods sbb xor pop jno xchg pop fiaddl data16 mov scas sub sbb xchg mulb mov cmp cmp sbb mov cld test mov adc das jno (bad) lret enter lock jmp mov mov aaa pop enter cmpsb adc pusha push xor fs push adcl loopne cmp ss xchg inc add xchg das sbb hlt leave fistp mov xor mov mov into test and addr16 sahf jmp push xor (bad) adc test sub add cmpl sti out sbb cmpl aad mov inc (bad) jle push or adc adc faddl ret nop (bad) and or push sub or test (bad) pop cmpl inc adc rcrl inc insb rcrb add ficom and rorb popa sub dec ss xchg cmp imul cli pop xlat fwait add iret in add clc cs cmp add out into bound push mov jo lahf pop pusha xor xchg and test popf mov lea aaa rcrb movzwl fdiv jmp mov data16 push pop cmp je inc lea adc rcrl lcallw iret sar lea add pop push push jne mov or (bad) subb inc sbb incb and cld pushl jge inc push sbb push movsb lea (bad) sbb scas mov out pop out or aaa mov imul push inc pop push add add test add ljmp lea jle jne loopne mov jbe xor inc mov pop push rcrl add pop sub mov int3 jmp push pop jmp sbb xor pusha test jl jae jno decb add dec or push or mov sbb jne data16 fwait or add (bad) xchg dec (bad) xchg mov inc sbb cmpsl ret push adc add (bad) and sbb test in ret push loopne imul push add jne cmp mov dec mov sbb mov pushf dec scas or inc enter loope loopne pop xor jmp xchg jge xchg jp sbb inc jp rolb repnz sbb mov push call rolb pop sub xor mov repnz and xor mov adc push fmulp xor ror ror outsb mov in les dec lock ret or outsl jo jb cmp je mov insb xor ror pop retw mov mov mov call jbe mov inc add dec dec cwtl xchg mov adcb dec (bad) dec pop or dec hlt jne mov lock push rcll cmp jmp add dec push andb popf pop mov scas enterw lret xor into jle inc mov or in add fist sbb add dec sub inc dec push sub add mov fmuls aas orl cmp dec sub mov cmp ja mov pop adcl sbb push push xor in add or sub fs cmovno add mov cmp pop or subl or sub stos nop mov scas in sbb not stos mov cli and mov je hlt adc lds push push cli add lock std add dec add sub mov mov lea fsubl mov inc add sub xor pop andl das scas jg inc in push arpl mov xor xor int mov jmp (bad) cmp jne xor dec jo mov nop add cs ss jmp clc jl pop dec mov push cwtl popl or les jp jmp pop fiadd push cld clc add rolb inc mov scas call xor out cmp or pop sarb and mov adc out push adc mov push lock sub nop cmp jb cmpb xchg pushf ffreep (bad) and jo mov je mov daa pushl pop xor adc and push loope or dec adc int3 mov mov ljmp lock xchg in jge mov ret push jge stos add sbb pop pop stos insb push pop (bad) js (bad) out lea push je or je jecxz push loop mov mov fild test (bad) inc add jle pop mov (bad) add mov cmp fidiv wrmsr push push adc fucomi push cmp cmp je cmp jb fisttpll cmp xor jnp ss fs cld xchg outsl loopne jne sti outsb sar dec mov notl je fucomip dec lret mov cmp daa add jmp add andb iret pop cmp je (bad) repnz pushf inc (bad) ret hlt (bad) pushf (bad) mov fisttp or jmp aad or dec inc hlt ret ss es xor jo ja sbb jb mov xor push in xor bound test and or inc and or jmp incl rolb add or mov daa xchg mov loop pop pop shrb xlat or jb les inc (bad) jmp push fldcw sub pop adc mov movsb mov sub cltd fidivrl push lods shrb iret lea add inc roll lock jmp jecxz jbe pop inc push xor pop push cmp sti fsubr aaa andb pop pushl jno sub rolb call rorl cmpsb (bad) jne lea sub sbb fcompl pop je cmp or add sahf cmp mov xor aaa adc loopne add arpl sub sbbl push pushf test (bad) idivl or popf add shl sub sbb (bad) adc add mov sub xchg loopne inc ja cmp or jle sbb sbb rcrb or ja push xchg adc aam out pop imul inc adc ret and cmp cmp scas or dec push dec mov sub cmp xor or xor hlt or sbb not and aam push add adc or and cmp fsubs jmp rorl xchg pusha mov or lret or lea xchg cmp pop test sbbb adc in or cld pop bound mov mov and dec js mov stos mov dec lods imulb pmaxsw outsb adc push sbb cmp push adc push add in adc bound mov sbb cli int3 xor adc scas or pop cmp sbb test loope push leave das pusha movsl jae js loop or jmp fdivr dec dec and add dec (bad) pop mov mov mov js add pushf stos inc push lret fildl inc add inc xchg in xchg (bad) int3 loope outsl icebp loope,pn adcl lock jp cld je adc outsl or rolb xchg dec loop bound push dec outsb fisttpl inc inc jmp aas sbb je shlb add (bad) lock xor sahf imul addr16 sbb int3 pop movsl lods lds icebp cmp ja pop inc jmp xor jl add push out lods and cli insl or out or rcrl sub adc (bad) mov imul pop push push sub inc cld mov mov popa adc loopne aad push lods pop div jle jb stos add add (bad) adc xchg inc push jl (bad) mov decb xor fcoml adc jo pcmpeqb adc or inc and lea inc lods add dec mov push mov jae push pushl psubsb in push out test jne mov sbb adcl add repz jne lea loope or push xor xchg sbb pop add std inc push mov jbe cmp movsl rclb mov int3 clc in enter jb sarb loopne in hlt pop dec std and dec xor (bad) call insl in adc jcxz in enter push ret insl leave (bad) loopne lea push prefetch movsb and sub add enter adc jmp xor stc sub push mov push aad fisttpl lods add in mov inc or and movsl jg mov lds inc addr16 mov cmp push push add sbb lock daa xabort jb lea push dec mov nop or push push pop cmp sub scas ss out add mov push test or pop mov push mov fimull test imul (bad) iret mov inc cs das inc mov mov fldenv popf lahf fsubrs add add pop push or cli cmp push je push stc roll cltd inc clc push dec and cwtl xchg imul inc dec lock (bad) int cmpl add add dec inc inc ret add std inc aaa inc push mov adc jp js push cmp xlat sahf test pop ficoml or ss andl sbb or call and pop into insl lods inc jg adc sub loopne xor je or sbb adc xor fs dec cmp sub nop dec es inc mov (bad) pop add xchg sbb bound xchg sub cmpl repz dec lcall mov cmp mov adc push je cmpl sbb imul push pop cmp push push jns push aaa jns pop inc mov xorb clc push dec push insb dec add push or cmp imul xorps in sub test add push rcrb icebp pop leave cmpsl loopne insb pop xor xor or pop add push push push xor fs int repz sbb sbb pop inc neg or sub test movsl out cmp push inc or arpl cmpb mov sbb cmp pop or pop dec scas pop mov push rcr imul add add dec es mov dec sbb mov loope xor mov push shl pushf ret and or and xor jo push jo movlps add and pop pop and sar sbb enter add neg pop adcl js lahf push test push (bad) mov add dec mov stos jmp or shlb inc cmpsb lcall sub push stos or or bound sub rolb ja dec movsl jo mov ja mov (bad) (bad) nop or int inc dec jae push ret daa sub and out dec and adc test mov and adc sub push movhlps (bad) fidivl xor mov and lods imul test jmp push shlb call stc add push push sub call (bad) faddl cmp inc (bad) mov xor mov fwait inc xchg push add sbb xor push inc lods or mov push jae push data16 imul adc dec mov jecxz push and std fstps daa pop std inc leave mov mov ds jg adc pop or insl nop cmp lret mov icebp and dec sub sub dec dec cmc or outsl add (bad) ds lock dec sbb rolb sbb and or adc mov push subb push cmp push push xor repnz nop pop xor inc rol and adc lret (bad) orl rcrb fild je sub dec add push sub or xchg stos xchg mov or mov popf adc dec xchg in dec cmp push pop cmp jne movl jmp sub and push rep jmp cld sub xor shrb andl std rep rcrb xor lea jecxz jnp pop xchg xchg rorb inc sti lea stos add add mov inc int ret (bad) jg mov mov add cmc in addr16 pop mov lea jbe jne xor add mov xlat out sti idivl inc cmp jb mov or test mov dec mov inc jae add and out push mov jle insl cmpb push lea (bad) icebp outsl push add imul push pushl int je clc inc sub push inc jmp inc dec and lret (bad) popf push mov test test orb mov mov adc mov push add mov mov jmp push lea ret push out xchg add add in jae cld scas scas sbb mov inc notb cmpl jbe lea dec mov jmp mov mov or daa sbb pop jne push into psubb bound cmpl add push outsl inc sbb pushf and call call push pop or cs mov inc divb rep sub hlt andl push (bad) cmpsl pop mov jne dec mov subb orb cmp cmp mov dec jne sbb add mov xchg iret cmp dec dec push testb add data16 sahf aaa jp push add add dec cmp adc mov cmp (bad) inc loop pusha jge (bad) or into xchg and dec movb cmp in mov lock ds test ja iret sbb push in dec push lcall cmp and sbb inc gs addl jmp loopne inc pushf push push clc xor out adc test mov xor mov (bad) adc add ja dec aad xor lcall mov cmp mov (bad) xor sti call pushw xor push jmp xchg (bad) mov stos adc ja fwait call or xchg ljmp mov call jbe sbb jb je mov push mov jbe add jmp stos add lods loop popa lret add sbb (bad) cmp or divl ffree add dec and xchg nop add or push cmp cmc mov (bad) cmp imul mov or je mov push push scas out je adc cmp dec nop or inc cs lods cmpsb (bad) cmc cmp jbe enter aas sub cmp (bad) or add sbb loopne mov cli (bad) fwait or fmuls push lea and data16 add insb mov (bad) jne popa push cmp arpl xchg add pop insl sub in push push orl mov jb push fildl push xor mov jbe roll and lcall mov cmp jo adcb lea mov call adc lcall loope lea pop popa nop cli subl aaa popa xchg call sub sar lea test (bad) rcrb hlt or adc addb push xchg in and inc lcall pushf jmp rclb fs or clc push inc adc pushl adc (bad) fadd jns in adc sub lea push pusha lock (bad) inc sahf cld inc jl lock enter stos pop pop loope cmp pop hlt mov cmpw cmp jecxz cmp adc xor pop mov push cmp jl negb push push cmp or pop ret cmp inc or adc ret adc (bad) or push ror andb (bad) popf xchg sub loopne sar imul add xor inc sbb es pusha subl jne lcall jbe std std lock xor cmpl or and notb dec sub inc sub jo stos sti pop push or push xchg push pop pop xchg ss jmp mov xor scas or int3 cmp push and stos add cwtl mov stos mov test and pop add sbb or pop loopne adc mov je add test push pusha jo jo or add jg pop fnsave inc jnp hlt lock push (bad) fiadd push sbb sbb or mov cmp arpl flds orl sbb push xor mov pop cmp cmpsb pop add js (bad) mov push js and jl aam xor sbb jge in or sub lea pop add push push jecxz jne fisttp push sub es pushf shrb int3 test sbb or (bad) xor fstpt lods or jecxz out dec jne in scas pop popa cltd xchg jne loope push add test dec pushf inc pop dec xor rcrb push xorl (bad) and and and jo mov ror adc pop xchg add sub mov test nop ljmp adc xor xlat call cmp xlat push mov int3 or lea inc mov roll sbb shl insb cmc pop inc add inc sbb jne pop les sbb hlt lret or aam cld or enter cmp out or jne jmp mov add insl sbb mov orb nop xchg or (bad) sub push or scas (bad) xchg hlt aam pop int3 xchg jecxz push pop mov (bad) mov incl and lods adc dec daa jne jmp cmp mov movzwl push rorb adc cmp jg pop cmp push jmp test les inc xchg xchg mov xchg shrl sbb adc leave or mov or fdivr rolb fucomip jecxz int3 or sbb sub add inc loop les cmp mulb adc lret mov mov xorb lcall push enter pop ret test ja lods or xorl or mov and arpl mov or int3 adc xor imul or add mov and mov lock ds aaa movsb ret cmpb jne cmpsb test jo dec fcompl orb fsubr sub mov lret jecxz andl mov push pop cltd jns mov mov test insl push int3 mov lods cmp jne push notb sbb or cs cld xor mov and ss cmp into out sbb push inc push sub pop (bad) inc jo lock inc test imul jmp loopne or rcrb jne cmp pop or push adc subps outsl jnp push xor pop jmp add push push pop jp arpl pop sbb ret addb mov sarb (bad) xchg pop loopne or cmpsb xor push push adc pusha mov mov ljmp dec inc mov push pop mov clc je push pop or or push and adc inc fsubrs sub imul fsubrl fsqrt jmp lea pop add and push repnz pushf sub add data16 movsl mov mov sub sub mov adc sar test sti das cmp fildll (bad) and je push test push or add push sbb push in xlat push ret jbe lock stc add inc fimull ret dec mov (bad) mov inc cld and bound ja ret sub xchg adcl push push ljmp sti je (bad) mov leave and es lock push or shlb fs je bound dec test or lods repz push mov lea mov stos movsl cmp and fdivr dec xchg fbld adc push ret mov mov xor js mov insl jo int3 repnz outsb xchg enter push loope or lcall movsb arpl xor je jno outsb inc cld push popa adc push jle mov fnsave arpl lods add pop lret cmp add sub scas and gs outsl into push mov test cmp icebp repz scas pop jmp shll adc push arpl je push ret lret jne cmp xchg sbb and je push xor lret lods in (bad) add pop bound das push sub ret les aaa cmp (bad) into paddsb jmp ss lret cmp inc and or add loopne xor sbb lods lret pop push jl test das loopne (bad) outsl dec insb xor dec call xor jbe mov lea mov add clc add push test push jns adc fimull mov lret push pushl adc sbb inc push in in dec aaa lret (bad) cs cmpsb jp or push inc in bound and xorl or jl jnp jge shrb (bad) aaa jmp cmp std (bad) pop mov lock ljmp adc ja aas (bad) push mov and add pop jmp das cld das insb mov cmp test jb popa (bad) sbb add icebp inc cmp les call rclb jg (bad) jmp sub sar cmp push neg pop aaa sahf sbb push dec push mov jmp add pop lock lea mov mov insb push mov pop or inc sub push aaa and xchg jae mov roll push cmp je xchg (bad) inc (bad) and rclb xchg jle pusha loopne flds push (bad) mov pop aam movl inc fmull andb mov xor ficoml mov fldl push in and js loope or repz daa icebp aad roll xor xor rcrb mov and data16 jne imul iret std roll or mov push mov loopne ss cmp lock pusha sbb outsb (bad) leave gs jmp jae inc mov jecxz jmp xchg test sbb xor ss pop and fwait test test adc lods not js (bad) (bad) jae incl popf insb lods (bad) fdivs mov inc add add insl push call cmp js cld and data16 inc xor push jmp fildl or adc sbb orl add insb test mov test jne cmp jmp test js cmp loope repnz dec clc leave test inc lods in push mov cwtl jg adc pop pusha pop or jo add mov mov mov (bad) arpl cmp mov and cwtl cs pop cs sbb sbb and in test lods cmp in cmp inc xchg pop cs and aam add rcrl mov mov add or mov mov pop mov dec lret sub add mov add (bad) fnstenv (bad) cmp pop push lock sbb xlat push rclb push inc xchg push xchg mov rcll sub mov jns mov or inc and mov insl inc and add add pop adc es (bad) jmp frstor or jne push push movzwl mov data16 adc cmp je adc adc or mov pop push jne cmpb fisubl pop add pop cwtl (bad) lock jge mov mov inc ds les add adc add adc lds dec cld aam lahf xchg lock xor mov test je adc jg (bad) js sbb add pop mov int3 xor sbb ss mov (bad) pop clc imul mov and push push cmp dec insl dec and test popa jp push xor or push xchg cmpb xchg nop inc call fsubl xchg sbb notl dec or add aas lock push mov dec add mov mov orb dec mov mov lock adc add jns push cld pop rcll cmpsb jae mov pushl cmp cmp dec insb cmp sbb jl pop addl cmp sbb in mov cltd data16 pop inc sbb int addr16 jl adc insl mov sbb in add pop sub dec aam out pop sub and cwtl sbb or rcrb lea cmc push jle cmpl sbb jne lcall inc cld inc or cmc lods push push aaa ret fcomps out sub cs mov aas and aad je ss orb add ret cmc and push enter mov cmc or mov or pusha mov into mov movsb arpl dec sbb or nop add or movsl in mov adc clc push push sbb cs lret xchg icebp sbb inc dec push roll daa inc sub outsb add xor add cmpsl push pop in cmp dec xchg add mov ret les in mov push xor push scas push adc ffreep adc loop (bad) aas adc adc ficoml jmp cwtl retw scas test sbb into je mov imul je or xor sti adc or adc int3 add lock mov mov je add cmp je cmp inc push pusha inc scas adc or inc jo mov test pop and mov rol or add add mov xchg or rcrb fnstcw dec leave push mov push pop test or leave or je xchg sub test add push (bad) nopl or orl cmp mov mov mov xor cmp cli lods or pop paddusb lea or iret jmp mov (bad) jae cmp data16 mov fucom mov lret xchg ljmp sub icebp and or cmp je push lods (bad) jb pop cbtw fldcw jb stc cmp into xor xor into into into into or rorb sub sbb cmp imul xlat imul mov into loop pop aaa mov into into and outsb and movsb push (bad) lock dec hlt add mov or stmxcsr fdiv orl jb sarb fildll xchg test ret loopne jmp cmc icebp mov ljmp sub outsl push inc xorl outsl ror leave jecxz call punpckhdq jmp sub je sub mov jle jp inc adc (bad) and (bad) pop cmp cmc mov repz in int3 sbbb hlt or inc test pop push mov push inc xchg (bad) jbe pop add jecxz push popa (bad) jb (bad) jbe in in popa das stos pop add pop enter dec movsl push add add add sub mov repz mov inc (bad) or adc ret push fbld push pop out adc mov sbb mov push mov inc add add sbb and xchg xchg orb adc add jb inc cwtl test adc popa xor mov stos xor cmc bound xor sub jae sub push xor or cmpl xchg jg add jle cmp jl stos sub push dec ja push push or cli jmp sbb dec jb cmpb mov insb sub les add imul aaa jmp add jp test pop pop ss pop xor cmpsl and adc andl ret cmp aad fcmovu fdiv insl lcall jns push in out add inc decb imul in mov add leave jne mov jge lcall loope sbb in stc add mov add dec push (bad) push pop cmp ret test or ret and fs push mov pusha je mov adc enter jo cmp ss push ss add movl shrb test aaa mov adc (bad) dec lcall test pushl (bad) pop sbb push xor dec push popa jo rorb ret or fmul popa and pop pop push pop add aam mov ja movzbl jge adc push push cltd sub shlb push inc pop add (bad) xor and push into pop adc rol jb pushf ja mov mov pop mov or rorb mov push outsb enter lods fisttpl (bad) cmp shrb scas sbb pop ss lea add loope push cmp jle jmp sub rcrb ja js cmp add or pusha nop dec cmpsl iret xchg cmp jo jecxz roll sbb ret js in pop xchg jo push cmpsl or dec and or mov mov lods ds mov popa inc lea adc dec or adc imul dec add xchg lea hlt inc daa fdivp movl fidivrl xlat fcomps sub ffreep xor sub pusha roll rclb push or xor jmp test (bad) gs lret inc adc cmp and gs pop popa push add sbb test cmp dec sarl ss sbb fs cltd sar xor add cmp (bad) jmp cmp rcrb pop add sbb loop cmp sub pop cwtl cs movsl lods jmp adc mov in xchg and out jmp pop jmp daa inc pusha lods shrb push ss push bound sub outsb add jg fildl xor gs xchg pop mov mov cld andl adc or fcmovnu or faddp or (bad) leave hlt es lcall push leave dec jae and movzbl inc add jae int3 dec shrl add add add ljmp mov rolb call xor cmpb push push in xor adc adc or out mov nop js push es xchg push cltd and ret add and adc imul divb sbb mov lds in dec sbb sbb sbb adc push pop xchg lock lds shl aam lock sbb mov inc je mov (bad) test scas jne pop mov inc (bad) or jne cmp cmp incl jmp out sbb jle sti inc shr inc (bad) jne or jecxz outsl add out jmp fimull cmp lds mov push loop jnp mov fmull adc xorl fistp ret stos xorb sbb dec rcr jbe lods shrl test mov cmp ja jmp cs arpl and sbb xlat push push add dec jbe jle rcrl and icebp std sbb mov mov ljmp popf mov pop push sub mov mov mov mov fwait jmp es add pop or clc xor mov push pop dec cmp mov fnstcw in test or or inc cmp ljmp sti mov or jbe mov push lods je adc das cs jne dec cmp add sbb movl (bad) jb scas xlat push add mov or (bad) lea adc push lock or pop mov push mov jnp jg shr data16 fsts xchg ret popf lock xor adc mov imul test (bad) mov ret arpl cld pop push fwait xor mov xchg (bad) das and daa mov cmp jbe add mov inc push iret sub inc or jae mov mov xchg sbb shll cmp sub js pop pusha jbe xchg and pop push jle push test xor lret mov out jbe pop fistp cli (bad) jbe outsl mulb call loope mov push inc mov or pop adc fs pop mov fidivl adc sub dec repz std cmp jne outsb jge add pop sbb insb sub xor or push je sbb (bad) dec add mov mov or or sbb (bad) sub lret sub cmp mov jb jl clc pop add data16 jge test cmp jae mov popa mull push jmp jno pop xchg xchg mov dec gs jae mov xchg jno and ja xchg and push mov mov mov or sub dec add sub and rcrb add stos add jmp insb inc cmpsb pop jmp push or (bad) mov call pop leave adc jl movsl cmp jl sbb pop jl test je pop aaa nop add ldmxcsr jmp ds gs mov xchg rorb sbb movsb or pop or xchg xchg mov lds add jge fnclex movswl push imul shll in cmpsb fisub or data16 fldcw (bad) hlt adc push mov (bad) dec fild pop cld fwait cwtl adc jbe and pop hlt fwait sbb les fdivrl fldz fld1 fdivp fstp sbb je fldpi xor fisubl or dec xchg gs movzbl adc sub add ret push lock and mov jmp fiaddl je movl lock mov push dec mov cltd lret (bad) add mov add js and lcall andl inc jmp xchg (bad) push test and mov rcll sahf outsb and push sbb dec test mov and inc lods bound inc or mov sub cmp or pop inc cmpb lret hlt pop pop and stos gs push or test cmp and and rclb (bad) aaa pop rcr pusha mov pop outsl mov imul std xorl jecxz jno dec movsb inc cwtl sub sbb sbbl add lahf orl push xor testl cmp push in call popf ret jge and inc sbb inc pmullw inc add fsubrl cld rorl sbb ficoml aaa xchg cmp jp mov xor in decl mov mov sbb mov and cld mov lea cmc mov jmp mov mov mov (bad) (bad) inc mov cmp movsb rcll jo mov mov lcall andl xor pop cltd sub push mov sbb enter inc es into mov push call push mov inc (bad) aaa jge sbb mov pop cmp jb in in jne mov data16 pop in imul cmpl jb (bad) jl pop sbb add (bad) out push jmp mov mov mov pop icebp pop imul dec sbb cmc and sbb xchg (bad) cmpsl xchg push pop xor add jge pop nop (bad) pop clc jae cmp test loop and lea sub lcall pop adc fnstsw ss cld jb in sbb fisubrl pop and pop push pop je xor divb sub jmp loopne je xchg inc dec daa adc mov jl sub jns aaa sub enter xor jae pop jge lea adc scas pushf enter sti xchg add insb js sbb xchg sub adc std daa dec or sub add andl fadds sbb inc jmp fistpll jmp lea jae mov inc cmp loopne xor pop cli movb inc mov and inc jl call jb pusha push sub inc out (bad) hlt push and icebp sbb aaa add jb jno fnstcw push nop mov dec cmpsl xor stos mov mov add jmp or add sub fs or mov stos sub add pop inc pop int3 or jo sar adc roll out daa push fildl sbb pop mov mov mov js fcmovb gs int mov inc mov cmp mov or idiv jae cs idiv int cmp or adc or ljmp jb push push push cmp add jno rcl jb and rcll das pop pop cmpsl or dec xor scas pop jmp ret cmp push (bad) jecxz adc adc icebp mov or mov sub insb lock cmp inc jae mov sub mov iret and movsl bound mov push mov and cmp (bad) mov or mov jnp push loopne mov sbb (bad) lret add push jge pop inc dec aad jmp jns adc cmp sbb out in orl sub sub data16 loope movsb data16 sbb (bad) daa ret push enter mov mov insb pop movsl and in (bad) cmc push inc sbb std push imul mov adc cmp or or add sbb inc negb outsl sub and push call (bad) pop adc daa or fisubr test je dec loopne mov cmpsb ja outsb pop xchg lock mov mov out fcmovbe mov or int3 call or ret pop cs pop xchg int cmpsb test rcrl pop nop js ss mov push jbe lock adc scas adc sub mov cmpsb xor push jne jge movsl mov arpl and add lds pop mov jmp movsl dec pop jmp inc dec add call adc psubsb mov sbb add mov out loopne push mov pop and mov and pop push popa negb and loopne enter fisttpl (bad) clc jg fs jne (bad) xchg add jg xor xchg fstl add and (bad) mov lea xchg rcll add lahf or adcw push sub lock pop test sbb in fxch fyl2x mov std jmp inc es (bad) int3 std sarb push arpl aam inc sub dec add and fcomp lods nop int3 or pop mov mov cmp mov mov cmp mov pop ret lahf out or sahf mov jne movaps push fldcw clc jae xor jle xor adc pop popa mov rcl lret cmp jnp jl and lret or jg (bad) dec mov push push jg xchg ret adc (bad) jnp mov icebp mov aam ret or add outsb sarl pop cltd pop inc pop add fadd roll jbe and jg mov std loopne addps int xor ret add dec sbb adc out push jne or adc (bad) xlat jmp xchg add push das pop xor pop add std jle pusha cwtl pop rcl push cld and cmp imul (bad) pop into ds test into test test shl inc and cltd xchg add add test push incb jl fsts imul cmp mov and aad test dec jbe and jle mov mov out adc push add testb into push push or or add xchg jmp pop push addb call add adc dec mov lahf adc jg cld dec fs je cltd or inc mov mov shlb or mov je xchg and out push cmp ja add cmp adc add (bad) cmp jne call or adc mov neg mov pop sub leave or fcomi xor negb jecxz dec outsl push loopne cld push sub fildl xchg loop nop jne in xor mov call or and sbb call or or loop ss xchg call fisub test xor adc out mov fnstenv push push cwtl in jo add mov lahf adc push mov jb and dec push pop (bad) push pop hlt lods out (bad) repnz push les push (bad) sti inc and stc std jl out lock add pop sub loope incb cmp shl add mov aad fwait ss inc rorl adc out cmp push (bad) dec adc push cmc stos out mov orb incb cld outsl dec fdivp fidiv rclb testl out loopne mov adc (bad) sbb cmp ret pop insb mov enter or dec or inc xor jge insb push loope mov sub ret test frstor jmp dec pop insb pop mov sarb inc cli lods pop inc pop sarl mov in push (bad) in clc or dec push leave jp add ror mov adc scas or add or cmp sbb mov and (bad) jae and rol lcall pop mov xor jo (bad) imull lock jne xor or ljmp (bad) xchg lret testb jg sub ret add std data16 loopne adc je xchg or jle sbb sub aad loope scas cmp xchg das fstp sub roll fldln2 inc lods loopne sti in fnstsw inc jne push ret inc fnsave pop test pop in jmp iret mov scas inc mov mov push mov pop (bad) fldz movb xchg out mov xor jmp push lock ja or ja adc imul (bad) lea cmp add dec fcompp mov jb sbb xchg sahf lods mov daa jbe lock fcomp pop mov jne push fmull je ret add mov sbb push push je hlt or stos fwait (bad) or frstor and lahf add cmp inc and pop sub jne outsb popf pop add (bad) mov jmp imul xchg popf pop sub jo push mov insb sbb add call xchg (bad) shl sar rol mov and xlat movsbl push addr16 mov add add jmp int and lods push iret or add lods icebp in std rol mov mov or in or pop call xor ret adc imulb jp or ret fstpt test imul xlat in ret paddusb ljmp mov sbb jmp adc pop and inc daa fild nop cmpb mov sarl movsb jnp pop fnstsw push xor mov add scas negb fsub adc notb scas push pop shrl mov xlat aas cmpsl or data16 fldcw sbbl inc xor ret jmp or fnop pop nop and int3 cmp and or (bad) (bad) je mov shld pop jp outsb loope push jl and sub xor test or clc and xchg add pop pop ret popf scas (bad) imul je push cmpsl aaa (bad) cld adc or mov stos jmp lret test pop mov (bad) xor jne sbb mov movsb or cld jb popa stos stos out fcompl fist arpl (bad) jbe or mov jb in jbe mov jmp aas (bad) loopne mov adc mov rol sub push enter adc jle add push push push pop fsubrl lahf sti fldl outsb jge insl or outsl or dec xchg xor mov aas ljmp mov clc sbb (bad) and xchg dec mov sbb cmpsl add mov sub je add mov je setnp or sbb iret mov sbb frstor loopne outsb je push lea push add push sub push mov inc pop js adc and jb pop mov sbb mov out fcoml andl pcmpeqb inc xor cs pop jb add or fistl jmp push add fildl sbb dec call dec popf cmp je sub loop add loop fisttpll (bad) sub rcll xor in cmp lret ret and jne add xor fstpl jecxz mov out mov mov cmpsb push push movsl pop or or pop insb movzwl mov or rorb (bad) scas (bad) std add cmp ja push push (bad) jne popa pop jl or push scas les fadd fstpl fnstsw push jmp dec mov inc cld fucom andb jp push and aad dec pop mov push test jmp cltd pop adcl push cli add add loopne (bad) pop and in and (bad) or sub push add aaa push inc or rorb push lcall sbb mov adc push and addl fmuls testb adc sbb jne testb adc push inc outsl push and ss je jmp add push xor pop dec and (bad) fwait xlat sahf je std movb cmp add xor dec push dec mov test bnd fstl orl adc sbb jnp xchg mov mov push add mov rolb adc mov loopne mov in pop pop push sbb inc fldl fwait mov inc inc inc imul jne and rorb xor cmpsl jl je js clc fucompp inc push test push add add sbb mov mov (bad) cmp jne cmpl jne js rcl leave in inc incl or je cmpsl inc lahf repnz in inc clc and add and leave mov xor xor mov cmc lea cs addr16 insb inc adc mov test stos jle bound jmp call or test inc sahf data16 lods adc ss enter xchg (bad) lods sbb sbb enter jne push cmp fstpl xor incb push mov mov inc popa sbbl imul add ds mov and or push add sbb dec movsl jnp sub and push adc divb fs adc adc xchg out push cmp push and push inc mov jae insb add je push or mov lock adc rcr sub jecxz add pop mov add xlat inc jne or (bad) std fs push xchg mov inc cmp push cmovo cmp loope push sub or cmp jge adc mov adc aas frndint lret lea xlat dec add mov jmp test divl test and jmp pop je adc add sub push cwtl bound test mov inc jae mov or push adc or and movsb and cmpsb into adc imul pusha and or sbb dec (bad) les xchg cmpsl dec loopne lcall rol add outsb pop das sbb mov daa mov push test push neg test lods ja pop sub mov cs add subb dec cmp outsb or (bad) shl sbb inc mov mov (bad) je gs cmp dec sbb bound popf push mov mov fmuls dec sub sub jmp pop jb pusha sub push or fisttpl psubusw rcrb popa mov in imul xchg add sbb and call pushf sbb movsb shrb pop test into sti sbb mov leave inc jmp fcompp xor pop jecxz sbb inc pop idivb (bad) jnp inc xchg ss push testb jge add testb (bad) pushf repnz sbb add or hlt xchg js sti sbb adc shlb or add ret pusha clc idiv jnp sahf ret sbb inc jp sub roll insb pop add gs fwait mov cmp rolb inc push (bad) push inc push aad jo push mov or jecxz mov ds fistpll add or xchg adc imul add movsl and mov xchg loopne not xor adc and xchg popf or aam or and dec mov add sub and and sub rcrb pusha dec or push add inc fisubl or push or into sub push xchg and or xor xor and pop or jmp add add incb (bad) insb addb sbb lock and mov dec fisubl and jecxz sbb insl fcompl or or jmp mov inc adc loope sub and loopne in cmp sub pusha and mov (bad) pop adc pusha insl pop sbb or insl xor loope add xchg scas in push mov and adc inc lcall or fldl ds scas xchg or push sbb or jmp enter mov or add add popf cs add movsb mov out cmp or (bad) lahf push or outsl mov push and je add adc testl out and mov pop jecxz push mov xor xor and or inc or imul add pop pop (bad) (bad) or clc mov sbb fs mov mov push push sarl lds outsb sbb jl jbe and or jae out push sbb mov in lret or inc and and xchg call inc and cwtl inc add mov and dec pop push xchg push pop jmp xlat out ljmp and push lods adc mov fstpl jecxz pop push test push data16 push movzwl test or lret cli push sub add inc add push ja pop sub pop add mov inc popf xchg mov movzbl add dec das je movsl mov and rcrb cmp lret push or sbb in jnp push jge mov jmp and fsubs es sub out add out in mov mov (bad) xchg jg pop jbe adc inc fwait and loope je mov add push mov cmpl sub test test cwtl and push mov aad push push call into cmp adc inc or pop xchg push mov inc mov fimul jno or or xor and sbb pop xchg mov mov push in (bad) add mov js and fstl push out jle into fisttpll notl and lea adc mov loopne inc stos push sbb ja mov dec jo push xor pusha lock mov loope and fldt pop jb add aad dec test sbb jo lret (bad) or xchg into cmp jb inc cmp cmp jb loop nop push push fistp inc ret and mov mov cwtl arpl sbb js or or into add push fisubl push xor cld popa push inc or into pop not rorb pop movsl test add inc adc jb aaa (bad) aam jg mov cmc or mov cmpl inc pusha ret (bad) sti add or js pusha popf or and test sub (bad) lcall sub cs add jmp push pop and push add inc shr rcr shr rcr or jne div fldt loopne pop dec adc lret pop jb fstp fistpll jb cmp or xor and xor and sbb (bad) fadds das (bad) mov mov iret pop fwait mov pop xchg in mov test repnz bnd or mov hlt or sbb mul push push or movsb add loope rcrl mov inc jnp push lea loope jb mov rcrl pushf sub mov push add push adc inc movsl mov jmp adc sbb fdivs sub inc sbb fcoml sbb in sbb fcoms bound fiadd rcr push fcmovne and adc sub enter imul pop pop dec jne pop pop pop sar outsl fbstp adc shrd shr ret test xorb lods adc aas movsl ret shrb aas pop sbb xchg push or mov cvttps2pi leave ret shrb mov aaa sbb add pop adc movsl pop je jg add jb inc or pop fistpll insb pop fist stos adc cmp jmp mov xor inc add mov mov push adc jmp cmp fcomp in fisttpll fs ret mov mov pop xor add fsub insb push les lods cli cmp bnd sahf pop xchg out in sbb test and mov push in mov mov fs and lock jge mov nop or dec pop insb jo and sahf int push lock clc mov sbb push push inc aas mov mov cmp mov jg cmpb inc jb or rol inc loope or sbb pshuflw movlhps mov or mov mov into and shl sub fmull inc out rolb je lret push jmp lret cld lea fmull mov mov sub inc rol jle mov fadd movsb or ret fst lea lret je andb xchg jne or ret shl push adc (bad) jle (bad) sub divl lret add add xor lock iret xor jo push fscale data16 add xorl add mov test add inc push fildll ret je out cmp je test je jns cmpsl shlb sti iret jmp fs or js std mov fist jnp outsl and ja mov push push loope ret movq iret sub xor repz jb imul leave fadds popa bsr add gs (bad) rclb fldenv fcom loope sbb (bad) adc inc dec and pop dec inc ret inc into imul fidivr cmp xchg mov adc inc jbe xchg je inc sub loope (bad) cmp lock lea cmovb jne cmpb stos (bad) rolb mov (bad) (bad) clc clc and jne cmp addr16 out xlat cmp mov xlat jmp clc notb pop pop cmp scas ss sbb outsl outsb mov std sbb add pop cltd mov push inc or rcr push xchg fcomp es nop xor inc adc pushl xchg fildl in ret add into dec push inc es pop adc insb out mov pop daa push ret arpl dec mov je nop (bad) cmp mov test adc les sbb imul dec outsb jbe imul pop push gs jb and shrl enter popa add or std in std add xor xor add ja outsb out jns jo xor add and adc mov jg insb add or ja fbstp pop jns xchg push imul jge outsb or inc jbe outsb je push (bad) or gs push scas mov std pop aam outsl jb popa je outsl outsb das push outsb jb or (bad) push push jb outsb jae sub xchg mov insb insb outsl out sti (bad) mov daa inc andb ret insb jne aaa add popa add add mov imul enter inc arpl jns fsubs inc js les out sahf enter cld lds adc repz sbb cmp jnp rorb push inc dec push repz repz pop pop pusha fs repz push test repz mov iret repz mov mov iret repz mov cmp repz fmul repz fsub in in lock out cmp (bad) or sbb jns out inc push je mov cmp out hlt (bad) sbb jnp cmp js test mov ffreep mov and dec insb sahf out insb xchg mov (bad) into repz (bad) leave xchg leave mov call xchg clc push lret cmp fstps bound sbb add arpl rorl es daa sahf jecxz jne fs insb je xchg sbb bound inc data16 jbe hlt fisttpll insb jb gs bound jo popa mov je ss outsb xor test in daa jne push sbb sub pushf leave sbb and rorb sbb je mov or mov sahf shlb and push pop pop outsl jo (bad) jne (bad) popa negb inc fsubrl mov fdivrl pop push es xor jns sub push and scas push sub jns repz jle data16 jl jns jnp sub sub sub repz cmp es jl pop pusha jbe je sbb rcrb bound int adc pusha je push outsl data16 fs es sub jae inc and popa jb mov mov das add das xchg lock add jne sub mov push cmp push push data16 or jne je arpl xor push or fdivs pop ja insb pop mov jg jge imul push mov fadd fidivrl jne pop je mov jne fs jo arpl sbb add and mov mov stos add aas or add pusha jne and (bad) cmp sbb push push push dec ja bound push sbb and jp out adc outsl insl mov xchg xchg movsl shl dec jge xor lcall aam push mov stos or (bad) sysexit movsb cmp dec pop xlat test inc sub mulb fnsave inc cmp inc nop insl adc gs mov (bad) stos add add or roll je in rorb jmp and and push into and xchg jo mov sbb inc cmp or scas cmp sub inc jb jns mov dec imul call bound and ja insb cmp or sbb add lea and (bad) nop xchg pop jb xchg xchg xchg mov mov or and jae scas adc fisubrl dec and pushf jb out push jb rolb into fiadd aaa fisttp cmp pop dec mov pop idivb dec pop es add adc out push es inc pop mov pop pop or push (bad) mov subps push fdivp pop mov add popa mov sbb iret or btl or fisttpll imul daa adc adc mov xor in jbe push addr16 das push xorps pop imull push and mov out jb pop andb mov orl pop popf pushf cmp xchg sub cmp into aas xlat (bad) sti xchg aaa pop sbb add jo mov dec clc push xor js int mov iret pusha push mov jnp sbb push rcl pusha mov outsb push mov addr16 aaa sub outsl (bad) xchg xor out jne je sub aaa add inc push arpl mov jns insb xor fidivr xchg insb jle push (bad) and or mov inc dec or outsl cmp add aad pop ret fidivl gs jae push (bad) mov xor mov add xchg outsl add xor inc inc push or dec in jge cmp repz push pusha pop js dec mov xor cmp aas jne add or adc push mov xchg jns clc hlt sbb jae gs arpl mov js mov rcrb out xor addr16 (bad) adc sbb imul outsl cmpsb bound js imul jae (bad) mov mov fadds insb xlat adc dec mov push sub jb ss (bad) mov imul pcmpeqd dec popa jo mov das insb sti mov popa insl gs outsl inc dec inc stos xor cmp rorb push pusha insb push rorb inc dec fistpll add ds dec adc das push notl mov sub push es scas push push mov repnz je fs or out jae cmovbe dec outsb adc fnstcw adc sbb mov bound lods (bad) dec sub out insb push jne push gs or dec mov inc arpl aam sbb addr16 push mov push jle jle,pt fcompp imul mov aas mov test popa out mov scas and mov push dec dec das fs jns out stc jge add dec and sub shrl cld dec dec cmp cmp push pcmpgtd push push adc fs push negl push fidivr in (bad) outsl adc jg mov (bad) pop (bad) jae lahf inc insl pop mov and pop negl fisttp dec outsb push rorb mov (bad) mull jge,pt outsl jbe pop jns mov insb stos ret jge aas push cmpsl gs sahf (bad) mov dec jbe arpl mov mov jb and out out cmpsl insb fistpl ss out pop testl jecxz pop mov js ja outsl pop insb shll inc inc daa cmp pop pop mov (bad) dec das mov in cmp jmp (bad) (bad) add and dec push dec pop mov out add mov scas jb scas pop push mov iret repz jl test iret nop xchg pushf movsb lods mov (bad) int3 fcomp loopne cmp repz in lock dec or into clc jbe push add iret repz adc pop shrl sahf out push xor inc push pop out sahf out jo js iret repz rcrl lods mov cmp repz int3 aam in iret repz push and pop cmp repz push jns xrelease xchg out sahf mov enter out mov push aad or xor sahf out push push mov scas push cltd nop mov adcl xchg adc xlat es test add fcmovb push and add add add (bad) jmp (bad) addl mov (bad) call xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas (bad) (bad) (bad) pushl mov mov mov mov ret (bad) (bad) enter int3 int iret (bad) (bad) mov fcom (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call (bad) (bad) jmp in out out lock repnz cmc div clc stc cli sti cld std (bad) (bad) (bad) (bad) out fiadd add or or push movups adc adc push pop sbb sbb sbb (bad) (bad) (bad) lcall pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp (bad) mov inc popa bound push insb insl outsb outsl jo jb lds mov je jbe js jp pop push pusha aas and jnp jge jg pop xchg test bound inc inc dec dec dec dec dec dec dec dec mov lds fsubrl pop pop pop (bad) aas mov andb jne std or add jo xchg and js addb enter or inc mov or or or xchg push fmuls loopne call cmp adc adc add adc pop adc sbb and sbb jb sub xor cmp sbb dec push push pop pop and repnz pusha and fldl jo cmova andb daa nop sub enter sub sbb jb sub enter and cmp cmp jne,pt jb call inc out cmp mov push or inc sbb and and dec xor jb enter dec dec push push push and sbb push pusha pop push in jg addb js je repnz add insb add pop pop inc mov rorb enter xchg mov psubusb in mov in cld adc or dec adc pusha adc sbb jb adc mov sub cmp xchg and inc sbb pop sbb jb enter sbb and sbb and in xchg and and and sbb in daa clc sub add adc in xchg and sub cmp xor fs and aaa mov xchg cmp jb mov les xchg and rolb inc call lret hlt inc jmp and and sbb dec cmp dec dec push jb enter dec insb dec js inc mov test push pushf push test in xchg and insb pop scas cmp call ljmp and pop or prefetcht0 and cmp enter adc push push and sbb sbb sub jb enter ds shrb mov fadds or pmuludq mov bnd or sbb sbb xchg and cmp push add sbb jb fs pop jl mov sub inc mov inc pop sahf (bad) add add pop loopne in xchg or or or add inc pop push cmp cmp add cmp inc or enter or sbb enter mov pushf or mov int3 add fmull lret das inc mov or cmp add and jb enter or cmp sub or pop add mov je xor mov in xchg and mov (bad) mov enter or add cmp sub psubb inc out add decb xchg inc adc inc dec dec movaps dec stc xor push mov sbb es mov add jmp lahf xchg paddusb mov outsb jnp and dec jnp jbe pop and pop xchg out lods mov daa (bad) scas outsb outsb pop jo xchg mov das mov iret pusha cmp jno cmp setb dec sub fs jo jmp iret gs shr jg dec data16 jo pop jp inc sub jne (bad) ss insl cs popa jg outsb mov outsl outsl imul jb stc fisubr ja jne pushl das cmp das pop insl sbb scas pop popa pop out cmp iret imul push hlt xor add pop sub out daa push inc add mov inc xor aaa pop outsl sbb call das shrl push pop sub mov push pop mov jecxz ficoml das push pop je imul dec push bound jo,pn ds fimull inc push jb mov push xlat push pop pop fimull mov cmp push je inc mov sti jg push xchg dec dec outsb call das cmpsl push xchg jecxz pop pop cmpsl insb dec mov xchg inc insb xlat ljmp je xlat cmpsl push fildll sbb out dec out pop pop mov pcmpeqw lret rcl dec dec ds out jb pop js pop mov pop sbb inc addr16 outsl popl mov inc push cmp insl addr16 or pop fimul mov ficomp jns iret xchg cmp outsb push mov ja mov out (bad) divb daa rcl ficoml gs addr16 pop jb icebp loopne lods das pop dec arpl (bad) (bad) arpl push push cmp fldt cmp mov outsl aad cmpsl dec sbb stos push scas or jo pop iret paddq popa gs (bad) mov lret addr16 addr16 pushaw shlb outsb addr16 sub bound pop pop pop (bad) outsb iret inc (bad) (bad) js es dec gs dec sbb fisubl pop fiadd repz sbb push mov or out ss pop push out out add xchg loop pop cmp dec mov idivl (bad) dec fildll mov inc push (bad) dec lahf fcmovnbe mov inc (bad) push (bad) mov pop dec inc cmpsl (bad) dec xor sbb leave dec out movl aas out jae push (bad) pop test fist dec out fadds fild push das or or outsl scas popa xor adc push push daa pop inc vminss pop sbb inc bound dec lods call push dec addr16 sbb ss inc pop mov outsb adc dec outsb movl arpl jg push out push push je xlat dec inc notl inc adc dec das outsb mov loop dec inc inc pop push aaa or inc pop push das push iret (bad) in imul mov divb pop adc push mov pop stos xchg mov add test enter cmp push addr16 cmc xchg fmuls mov sbb mov mov in xchg iret (bad) call mov testb or sbb and jmp int3 cmp dec enter jae sub push fwait insb imul enter arpl dec test jge mov add mov int3 inc psubusb pop add push and mov mov or into out xchg mov stos movl cmpsl xchg pop cmp mov inc mov int lods insb leave in xchg and test cmp mov (bad) mov rorb addr16 int3 rcr sarl ftst rorl lock xlat clc or inc mov adc and sub cmp lods push fistp sbb jb loopne mov enter cwtl (bad) adc mov enter in xchg sub insb cwtl es enter (bad) or in dec fsubrs and jmp jae or stc add adc enter scas sub mov fstps pop dec mov jb in aaa pop jg rorb dec in fld mov pop jo xor sbb scas outsl mov or insb xchg sub mov (bad) cmp push cmp in pinsrw in sbb imull int3 cmp xor js cmp insb in pop cli add mov jne or nopl xor sub enter and mov cmp das dec mov sub lods and fs cmp pushf dec ja outsl jl call xchg and xchg ja jne push in (bad) adc mov sbb or fmull insb ss call push pop loopne add sbb ja sbb repnz or sbb into cmpsb add push pop dec pop sub mov andb pop pop cmp pusha loopne xchg mov (bad) cmpsl js test sbb nop pop js mov cmp ret enter and mov in fistp sbb cld or jecxz cmp adc cvttps2pi add mov jo cmpsb aaa xor mov inc cwtl or enter cmp in cmp rcrb add int3 outsb inc sbb add adc rclb pusha push cld pusha loopne fistp xor std or insb and pop cmp inc outsl mov jb add jo jl enter mov xor ss sub jnp pop or inc push sbb addr16 sbb jno loop pop imul outsb sub pop insb xchg pop jns lods lods sbb das jno imul xchg pop sub or cs aas das insb pop das mov cmpsl pop sbb pop ss pop in repnz jae ja test jmp jp mov ss ja,pn mov pop jg bound cmpsl aas pop or shll jne insl dec je jne daa (bad) jb xor ficomp popa dec pop bnd xchg sbb insl dec pop bound xchg popa aaa jnp pop push (bad) outsb ja in loopne push pop push pop divb xchg mov xchg mov in pusha xor pop pop push insb pop pop jb insl das pop fs mov pop call out jae jbe fnsave pop xchg js in movsb mov sub stos pop and jns imulb aam xchg ja push gs jmp imul dec or pop pop push or daa pop insl dec mov out dec ja pop clc aam imull mov lahf das out popa pop or or popa ret pop test mov lods rorb dec pop or xchg jo mov inc (bad) testb movsl xor jp mov das pop dec jb jns je cmc jbe or mov jnp mov pop stos jae mov dec mov push xchg cli inc jns or loop pop rclb in in addr16 or jae insl push arpl fcmovnbe (bad) push les or jb lods rcr pop or (bad) pop sti pop jae pop outsl mov or or jae adc outsb pop mov dec pop or imul in imul fistpl arpl imul mov or jae sti jno jno insb pop das add das pop outsl mov push das or das adc jbe pop (bad) dec pop dec fidiv imul movsb sub gs add cmp bound scas pop les mov addr16 xchg out outsb add or push adc xchg fimul mov out pop pop in inc push mov pop je pop divb mov push add fidivr jbe es (bad) adc das jbe es insb outsl xor add aas jnp lea xor mov incl sub aaa testb (bad) rcr movups push xchg or das popl ja mov inc vmread aas pop mov pop xor pop cmp imul bound xor lock jg (bad) (bad) decl stc into xchg (bad) adc xor or xor sar (bad) call xor cld aas negl push inc xor jp mov insb jp (bad) fld shr andb mov mov inc xchg adc ss or sbb xchg std jae adc (bad) loopne add jo dec xchg xchg subl lock sarl xchg fimull leave (bad) aas adc or inc or or add pop rorl jg imul mov divb inc cwtl rorb addr16 mov cmp xchg mov jae icebp popa arpl jae jb scas jne mov push insb and jmp decl test jl sbb push sub mov push mov add sti sti decb imul adcb sbb cld cmp mov ficompl aas sbb sahf rcrl xor (bad) (bad) fimul sbb arpl idiv mov icebp bound or mov aas out pop push pop cmpsl aas fistl mov nop ds aas xchg jg mov shlb inc ret sub pop inc fprem fstpt (bad) jo out mov jbe scas sub in pop pushf mov aam push push aas loopne std (bad) sti jmp sbb mov loop lds rep (bad) int les (bad) aas (bad) mov jae mov lahf jge and ret pop dec lea mov jp mov (bad) fild sbb in or mov int3 in cmp and mov mov cmpsb push addr16 icebp ss push mov mov and push sub stc incl es sub jmp insb (bad) mov mov repz and (bad) push add ja mov cmp fwait std mov aas inc cli loope lea or or mov jmp outsl mov aas mov sbb add (bad) push ret ja mov or xor push inc arpl or push jns jg sti or jb jns pop push mov les out scas cld xor mov cli and push push push cs or jne lds sub fistpll negb sbb push adc sub lcall (bad) (bad) aas rcrb in fiadd sub (bad) aas int mov bound xchg mov lds xchg push into data16 aas enter xchg (bad) and lock or int3 fbld lock shl out fistp aas in (bad) jp and inc call jmp push xor inc add (bad) jg (bad) pop sub push lds stos fs imul out push mov push jb js and xor mov jl push int lret (bad) out out jg aam xchg push jb out inc mov nop xchg jg in (bad) sti adc aas or sbb adc stos pop lahf jae xlat mov out aaa pusha jle cmp xchg repnz jg xchg adcl push push pop ljmp pop (bad) fistpl sbbb jge and or or and pop push call (bad) adc cld int sbb test push xor fisubl mov mov (bad) xor int incl xor fidivr mov mov (bad) imul xchg jp cltd pop sub pop lods xor jle jmp std in out ds cmp lock fisttp or cs daa sahf dec inc dec push es repz (bad) aas stc pop movsb sub jle adc sbb sbb jl inc (bad) jno jns sahf lods imul rcl stc add mov xor fdivs lods or enter lock jns add mov jns sbbb or dec and and in call pusha scas cwtl pop and or jo or jp xor aad or adc inc dec inc and in jb dec enter imul inc push enter roll jb cmp js nop pop repnz shl mov in pushf fdivrs dec mov and nop adc jo pop imul aas mov test rcr ret or and adc dec jns dec enter add mov inc dec enter and dec enter in pusha lahf add adc nop sbb (bad) int jb push rclb sahf nop sbb int3 lock test das mov pop repnz icebp cmpxchg ret je outsb push das cmp cs movsl mov fucom sub data16 outsl outsl xchg insb punpcklwd insl outsl outsw fstpl pop arpl pop push dec fidivrl fild jb jns push xor and bound outsb ss data16 imul adc and in sbb sbb or adc decb mov sub addr16 nop adc cwtl add mov test lods or enter adc mov jb adc sbb push in enter in and and and xor in and mov out (bad) movhps inc mov jne xor sti cmp fs jae sbb (bad) ds dec insb xor dec pop inc inc push inc push sbb add inc dec dec dec dec dec xor dec shr int3 sbb push xor inc push push dec jl movsbl int3 adc and push add jns les lret or jns out or or out loope push iret scas push and popf out push add add jbe mov push and ds push push out ja add or fimul push or or fidivr push push fidivr out mov push or or fcmovu fnsave xor push out out in out push jbe,pt jbe,pt push xchg loopne out ds push push mov and push push push cmp repz adc sarl adc psllq into mov push push add adc push pop outsb ds push sahf loope or push mov push push add inc and out fdecstp push negb add ds fidiv mov popf testb negb into out out in outsb mov push ds dec ds out out out push pop outsb negb push (bad) ja xor add out inc out or xor inc mov sub add jle cmp fidivr pushf add push or out cs jecxz mov jle imul out push push jle,pt add aaa daa jne roll or out sahf ja or or fstp jns or or push jns fstps push push or fstp fstp jle,pt push jle,pt xlat rcr push jle,pt adcl mov add rorl repz push and add add push adc or arpl pop push push adc add add add jno jns push adc mov add popf xor xor jl ds push ficompl ds push ds push add mov add push push pop push push push mov out push ds push ds push inc jmp push pop add sbb xlat mov push stos sbb lds in out push push push push push push push cs loopne,pt jno (bad) adc cmp push add adc dec adc fnstenv push push push push push xor out into jae (bad) adc push push cmp repz jae (bad) adc adc repz (bad) push cmc adc adc out out into adc push (bad) push ss out into out outsb (bad) push push (bad) push push push loop mov (bad) push roll (bad) sti mov add jns ja add add push or or pushl cmp or add addr16 jbe push jbe push jbe out fnstsw add add ja jne add sbb ds ficomp ds add addr16 push jbe push jbe push ja jbe jbe ds (bad) ds push or ja (bad) ds jbe mov dec sbb addr16 movsl std cmp sub sbb push push push sub dec jle push es out in out into push push jle push jle ja mov push push lahf (bad) sbb push push (bad) in push sub std push push push push arpl out into or add jle mov add add out push xorl or into pop (bad) mov add into mov es and or insl mov add push fstp push push push dec jge mov jle push push jle jo mov fmulp out inc mov push iret out sbb mov xchg push es and push push std fimul mov add push push push jle fstp (bad) std fimul jle push jnp push fmull jle add xchg into jns orb or addb dec push es add mov xchg aaa add pop popa (bad) out dec lea leave mov jg pop in divb mov xorb divb sbb addb pop iret daa aad mov testb jbe daa cmp adc pop divb (bad) mov ret imull push lahf dec daa mov fstp push xchg push fwait dec daa in add mov add sub fwait (bad) lahf add movl push inc inc cmp cmp add or out into fucomp daa add sub xor out pop testb pop inc movsl inc mov imul xchg std das mov notl idivl iret daa xchg inc sarl das arpl add inc out cmp sbb int adc repz add lea lds mov faddl ja daa mov xchg xlat cmpsb sbb cmp pop cmpxchg divl xor jnp mov daa mov cmpsl lods adc inc sti inc xchg inc xlat enter aaa std (bad) mov inc add add fcoms cs addr16 js jnp daa inc cmpsl xlat add cmpsl (bad) (bad) mov out lea pop aaa aaa mov xor imull or jecxz call fldl fnstsw inc push dec push fidivrl outsl or movsl fnstsw push addr16 inc aaa nop insl pop add outsl pop pop xchg outsl cmpsl (bad) (bad) (bad) outsb add xchg pop aaa sub push aaa pop ja mov js xcrypt-cbc cmpsl adc pop adcl cmp pop daa pop popa inc aaa inc pop mul ret aaa pop ja xchg fcomi fdivrl ja daa mov in add aaa scas lahf xchg dec or ss daa jg or (bad) pop maskmovq testl sbb pop inc out lock jg and addb jmp mov sub and mov loop sbb cs lds add ss jnp mov lea jg insl add addr16 outsl fistpll dec dec out or (bad) xchg (bad) scas xchg iret outsl cmp imul sub cmp cmp repz insb js nop inc jb movsl sub mov sbb jo dec negl clc enter sub cmp dec cld divl push add sub out lahf add dec add imul push mov inc inc imul (bad) ja add pop xor dec imul sti jae data16 pop out imul sbb dec iret mov call add push dec push cltd cmc xchg int3 je ret jg pusha adc and imul iret rol and and and in jbe loop and dec and add pusha sarb addr16 and and inc pop mov pop lret sub sub adc push xor xorl lahf dec cmp cmp (bad) (bad) cmp inc jbe or inc sub and jb push push or and pop dec pop pop push pusha daa mov fs push adc pop sahf jb das jb pop subb pop and js xor adc xor iret or ja test sub xor push es cmp xchg out and pop subb je inc fcmovb arpl inc push (bad) (bad) mov out sarb iret js (bad) dec in into sbb dec imul pushf lret insb testl (bad) xor adc in frstor lods sbb pop push xor sub jo pop in sub xor daa pusha addb adc cmp lds psubusb adc sub nop cmpl and sarb push aas in sti outsb lahf push sub nopl das decb push (bad) adc mov adc mov mov loop,pt out inc rcr inc cmp aas inc fnstsw aas push mov cmp aad jns and jg leave pop mov and dec jg fs daa xchg pop outsb add les cmp jnp pop and fdivrs rorl dec push imul inc repnz adc lock cmpsl nop adc or stos xchg mov push or mov add sbb push stc lcall nop in pop and mov movsl (bad) jno and adc inc xchg jns pop orb or xchg cmc in add xchg into fdivrp push int3 pusha (bad) jns and fisttp mov inc sbbl mov fisubl leave add pop inc cmpsl nop (bad) fbstp mov call ficoml cld jle push add push pop fisubrl xor fs lahf rcr fsubp stc xor int in movsl add add mov repz add sub mov xchg aas xor add popf rclb fadds movsl pop mulb pop es or call fdivs sbb cltd fistpl add xchg pop (bad) insl inc leave jbe push push test add or pop mov adc roll nop lret outsb add inc inc push (bad) (bad) aas mov aas push ss jnp fisub sahf loopne ret push pusha jle std sub incl out (bad) sarl cmp insl adc mov mov fs cmp mov insl cmc inc cmp fiadd (bad) mov inc jmp xor leave (bad) jbe cvttss2si xchg (bad) (bad) decl in cmp stc jp nop in jl je insl mov push pop into xchg test mov jns sub test (bad) jl cld cmpb dec fistpl push stos scas sub bound in jp (bad) (bad) call ja jle movsb mov push cmpsl subb lcall cwtl add (bad) call xchg mov sub andb xchg push ss shufps (bad) (bad) incl adc fisttp xor stc push jle dec repz je (bad) (bad) (bad) incl dec das pusha cmpsl jne dec sub cmp inc and psubb pop hlt jb (bad) (bad) (bad) cmp cmp fsubs mov lcall push stos fs (bad) mov add xor ss adc aas mov decl jge arpl mov (bad) aaa in lea dec test aas adc mov (bad) (bad) (bad) (bad) mov jge inc mov subb daa insb inc sbb int inc (bad) cmpsl mov pop aas push enter cli fbstp leave jmp (bad) (bad) (bad) jg orl push cmpsl fcmovb test fisttpl push ds repnz fwait pop dec mov sbb (bad) (bad) decl rcrb cmp xor arpl add lods imul sub pushf sarl fcoms inc movsb jl pop fbld mov dec xor aaa push mov sub into cmp pop inc int3 sbb jecxz (bad) dec out cmp jge add in lret xchg aaa popa shr arpl stos (bad) (bad) jg mov xor aad cmp xchg (bad) jno push cmpsl in jne stos sub (bad) (bad) pushl out push inc repz test fidivl je or cmp test (bad) (bad) incl cmp jg jb add adc mov adc mov movsl sbb out clc inc mov inc in and call dec inc test enter jbe (bad) (bad) call sar test mov outsl imul adc mov mov psubusw fstpl (bad) push xor fidiv push pushf js xchg sbb lcall insl or sbb jl (bad) (bad) (bad) push iret incb mov mov stos mov dec in mov or (bad) (bad) out cmpxchg lds clc or hlt pop jl sbb xchg shrl jle mov sbb in (bad) (bad) (bad) pushl out mov pusha mov inc fisubrl pop hlt js mov fwait xchg mov and lcall in mov roll fbstp or outsb lock sub mov inc mov pop sahf mov decl in pop faddp js or rclb sti mov aaa (bad) idiv (bad) (bad) incl pop xchg repnz mov icebp js shlb push jnp pop push decb xchg add xchg (bad) (bad) (bad) lcall inc cli pusha std arpl mov dec xor sub scas mov lock mov jae pop (bad) (bad) (bad) decl dec pushf jno sbb rcr fimull aaa jo bound mov (bad) jne (bad) (bad) (bad) jmp dec jecxz ja out push xchg fidiv push and scas mov add clc (bad) (bad) (bad) ljmp popa ljmp cmpl sbb std sub imul shl cmpsb cmp push scas and cmp inc (bad) pop lock dec lcall xor (bad) jo ja in add (bad) (bad) ljmp loop (bad) decb mov xchg or mov movsl aad mov loop sub (bad) (bad) jmp mov ds sbb push cltd (bad) xchg fwait or mov sarl (bad) decl loope adc push mov push pop je adc scas mov insl mov ret sbb js cmpsb jb jmp (bad) (bad) ljmp clc gs fwait inc lock pop aaa fsubp mov adc push (bad) pushl lods aad jne mov pushf in aaa pop or lea xchg add mov outsb std pop push cld lcall dec mov cli es sbb push aas inc xor fbld int3 (bad) (bad) (bad) call data16 cld bound ss and mov push shll pushf push out adc cli test fadds push movsb adc (bad) jmp push mov xor cmp dec sbb sti xchg test xlat xchg or jno and (bad) (bad) decl mov lret push outsb fdiv pop sbbl push ret adc lock (bad) (bad) lcall nop xlat push xorl in rcrb dec cmp sub pop pop inc xor dec xchg inc inc fild jg adcl mov bound mov sahf lods (bad) (bad) (bad) call push cmp pop mov loopne rclb fnstenv xor (bad) mov mov xchg sbb (bad) (bad) ljmp test mov stos mov sbb stos pop pop sbb inc jmp mov (bad) (bad) jg push mov out ret loope jno aad cmp lds pop sbb jg out inc inc pop pop dec cltd adc add add (bad) (bad) (bad) jg ret bound in lret mov insl jne inc push mov scas pop ds cmp xchg dec (bad) (bad) jg adc popa jmp mov dec xchg jmp pop xchg pushf ja loope lcall shlb lahf je mov push addr16 (bad) sbb mov es (bad) lcall (bad) loopne inc add xrelease dec add mov mov (bad) call sub xchg xor cli stc mov push data16 jae (bad) jg mov push movsb mov mov pop jbe ljmp xchg push jl (bad) (bad) (bad) (bad) jmp adc adc cltd movsl xchg in pop or xchg rorl (bad) ljmp cli jnp inc jb adc mov je ds imulb xchg loop lea (bad) (bad) (bad) mov enter sub push push cwtl shrb scas cmpsb icebp vandps lcall fcmovbe mov ret adc icebp int3 cmpsb out sub jmp mov inc pop adc (bad) (bad) (bad) mov inc pop mov stc jo lret mov int repnz ret add decl imul and int inc add (bad) call pop mov pop push push scas inc clc in inc arpl xor (bad) push (bad) (bad) (bad) call cmp (bad) push mov pop fs mov insb jb iret mov lahf outsb add (bad) dec inc js (bad) adc ror push popf lret bound mov (bad) (bad) jg xchg arpl iret test (bad) xlat and push jne xchg sti xchg jge jmp push mov icebp fild pop jecxz push ret out shrl (bad) (bad) ljmp adc mov dec js dec pop mov mov fisubrl mov lahf xchg (bad) test (bad) (bad) pushl and jge mov sub mov adc cmpsl pop js mov (bad) mov mov jl movsb sbb bound fstl cmp xchg rcrl lret (bad) (bad) (bad) pushl fwait gs add (bad) stc push mov outsb sub scas inc or fbstp call les sbb inc cmp bound xchg fistp into insl push (bad) aas adc (bad) (bad) pushl mov test or xchg js fisttp mov fsubr xor popf in insl (bad) mov mov jmp shrl incl mov pop cmp push lods adc cmp and sahf (bad) rcrb imul add push test jp mov sar clc shr pushf lcall inc dec roll call (bad) (bad) (bad) jg movsb add pusha sahf stc pop loopne dec leave and cmp dec pop mov ror notl lds dec sub pop jle sahf (bad) (bad) mov push sub and push ja lds mov (bad) (bad) (bad) jmp sti sbb rcll ds xchg xchg in push mov xor xor xchg rolb jecxz cld pop test fsubr sub xchg pop or gs rolb xor aam pop mov (bad) (bad) ljmp inc sbb dec fnstsw cmp enter and push imul (bad) (bad) (bad) decl jle js mov imul mov pop inc and ja adc jne pop lods (bad) (bad) (bad) lcall adc inc (bad) pop sbb jl lcall mov pop xor (bad) (bad) (bad) jmp sbb pop (bad) jp mov mov shl nop and les ret lods mov xchg mov movsb mov dec inc mul pop outsl outsl mov lcall mov imulb sub loop sti push lock repnz cmpb addl lock adc aam push hlt shl fisubrl (bad) (bad) (bad) lcall mov and dec cmp mov mov es dec mov lcall inc fmuls das jbe cmc fwait scas mov or cmp out sbbb es (bad) (bad) jmp data16 clc out pop jbe sbb mov xchg std jne sbb (bad) (bad) (bad) push lret jb mov test sub sub sbb jge test scas sbb (bad) (bad) push push or int mov test add test popf out lods int3 mov (bad) (bad) fild andb xchg imul or cli or mul ljmp (bad) decl sbb mov ds xchg repz (bad) lret (bad) jmp scas sbb push sahf out sahf hlt sbbl ja repz mov (bad) (bad) decl inc subl sbb pop add faddl and dec cmp (bad) incl loopne sti loope add int sub lret xchg push (bad) (bad) (bad) dec and add sub xchg (bad) enter hlt jns mov xor pop cmc stos mov add (bad) (bad) ljmp sub rcrl lds xchg pop (bad) (bad) (bad) jmp arpl pushf lds jle addr16 adc push dec adc (bad) (bad) (bad) in leave movsl (bad) pop sub xlat cli mov mov xor lret lods cmp (bad) (bad) (bad) lcall cmp or dec sarl fisubr loope loop stc adc or dec cli and (bad) (bad) (bad) pushl out push insl mov pop stos sub cli dec mov pop popa jne dec test xchg inc push outsl push lock fistp push pusha call or insl data16 sub in and xchg out or mov hlt cwtl mov fcos ljmp dec pop push rcrb jp clc es aaa cmp enter insb xchg jo jg incl and push jbe mov and call (bad) (bad) (bad) call fdivl addl jnp mov jae cmp bound jp (bad) xor dec cmpsl push aaa enter add sub xor mov stos in or or pusha sbb jae (bad) (bad) (bad) cmp cs push mov cli lcall sbb cmp (bad) (bad) (bad) cmp ljmp not icebp idivb pop pop push push movsb push call push shrb (bad) jmp xor inc mov rclb out repnz es lcall add jns and in mov test out jl pusha jmp ljmp (bad) jg mov in mov jmp test pop out adc (bad) (bad) lcall xchg inc (bad) in aas daa or add inc adc sbb inc sarl cs lods out adc and int lods sub mov adc lret imul call lcall mov push pop mov add and loop insl mov mov cwtl (bad) (bad) (bad) decl adc push dec dec ss sahf add fucomip sub cltd pop push loop,pt call adc std (bad) (bad) decl arpl cmp into push push std iret sbb dec lahf int xor fist mov pop pushl insl (bad) add jb fdivr adcl dec cmp jae or cmp movsb pusha mov push jmp mov (bad) (bad) cmp mov sub push test movsl mov push pop loope arpl sti (bad) jno push sub (bad) (bad) (bad) decl mov sarl addr16 in es or xchg ret scas outsb addr16 cwtl jns sbb adc (bad) (bad) fidiv cmc sbb cmp mov jmp (bad) (bad) (bad) call or mov pop and or loopne cld mov (bad) xchg pushf cmp adc pop icebp call pop loopne sbb pusha cmovbe inc repnz rol (bad) mov mov add lret xor mov sbb or jmp xor inc xor adc pop insb push cld and and fdivl incl cld pop jl bt jg sbb jecxz inc (bad) pop add arpl (bad) (bad) incl test lahf daa movsl adcl dec xorb mov or hlt mov push into bound int dec bswap cmp mov les sub (bad) jmp rclb inc jge sub mov add loopne xchg push nop dec les (bad) (bad) (bad) jmp or xchg cmp cld test xchg ds push mov lods stos clc mov xchg pop ljmp and fmulp inc mov (bad) scas stos push adc cmc or pop jb push mov (bad) jmp adc leave jns mov add ss ss ss jbe subl inc (bad) ljmp xor pop sub fisubl inc (bad) xor hlt sar (bad) incl sar stos mov test mov mov push clc xchg fimul cmp (bad) (bad) decl int3 int3 pop push mov rolb ror cmp sub push fcomi outsl mov lods xchg jnp faddp lret lcall jg pop adc scas push and dec decb or sbb jns add (bad) (bad) call mov hlt pop cmp mov pop lock into xchg pushf ljmp xchg pop addr16 stos or repz fsub (bad) xlat cs xor (bad) (bad) decl mov mov ss inc test dec inc arpl inc inc adc out call std (bad) adc cmp xchg cli pop rcr stos test jmp jb add sub inc add mov pushf lret dec into pop fwait dec inc add push add sub ret (bad) fdivr loopne adc dec inc lods fstpt out pusha add fildl inc mov add push add adc push pop pop pop or or or or adc or pop or pop or prefetchw pop mov jnp jge add dec or stos or cld inc add or add in es adc add les pop insb nop ret add imul movsl sbb (bad) call push pop mov (bad) (bad) incl add add push adc pop and xor inc mov adc xor or fdivs js inc inc or lea xor leave mov or inc or in fisttp popa movsb adc arpl xor stos scas add inc pushf into add adc push add scas cmp outsb decb lods adc push adc pop popa jno and adc (bad) out or push lock xor and loope icebp mov mov add es mov push (bad) cmpsl pusha scas fiaddl or js sar dec add add mov clc or mov int mov gs (bad) (bad) pushl popa sub xchg lods pop inc sub clc outsb js jne lods fwait sbb (bad) pop (bad) incl mov out xor xchg repz leave js (bad) (bad) pushl cld test adc cmpsb xchg xchg sub xbegin xchg loopne (bad) test outsl (bad) fcomip call fucomp and cwtl pop mov fnsave incl and mov out pop and hlt dec insb sub out pop mov pop pop adc dec mov jg test xor jmp dec push in (bad) (bad) incl loop xor into xchg (bad) adc jl sahf (bad) jae cmpsl xchg xor inc out cmp (bad) push pop sub aad outsb imul stos pop mov push fisttp subl mov in cmp mov dec adc cmp (bad) (bad) decl dec scas jmp inc inc leave scas clc sub sub jae out sub orl pop pop mov movsl lahf jl (bad) cmc or and imul cmp (bad) (bad) jnp bound daa les (bad) call fisttpl das sub xor daa inc jg arpl adc inc inc sbb jno jg (bad) decl fwait je into and adc fdivl mov stc clc mov (bad) (bad) call jecxz dec add (bad) hlt subl repz addr16 sub fcomi (bad) (bad) (bad) jmp jbe xlat inc jnp add in aad out cmp mov mov xchg adc imul (bad) jmp sbb sbb arpl jmp jae into jns jg xor js into (bad) fcomip ljmp out shr mov inc sbb xlat (bad) lret fs or jl push (bad) (bad) jmp and inc insl push mov pop fwait mov or fstpl cli (bad) incl mov xorl sub pop test fmull in decl inc xchg push shll sub jno jg es subb xor jl enter aas outsl aam fcos (bad) (bad) pushl jmp jo or repnz call rclb es movsb out (bad) (bad) lcall (bad) bound sahf mov pusha jle scas or insl cmp (bad) scas (bad) (bad) call pushf lahf cs inc sbb or leave sub xchg (bad) dec sbbb pop shl pop ret outsl or pop xor (bad) insl jp adc jo dec jl enter test lcall pop pop mov int mov push or mov popf jno negl cli add (bad) (bad) (bad) cmp mov push mov icebp cmp or push in or pop es clc adc mov sub stos test nop nop popf add (bad) call ds cwtl mov hlt add mov fwait xor pop outsl push adc cld push mov ret lock sub jbe mov insb pop jbe movsl or cs cwtl inc (bad) (bad) call scas or std push jg jb push (bad) xor vmovlps mov je xchg push (bad) (bad) lcall test and cmp movsl xorb adc popa movsb jg jle (bad) lcall add pop (bad) fs push aad int fwait inc adc sub arpl (bad) (bad) jns ljmp dec addr16 xor sub mov call inc lret pop xor (bad) mov adc and outsb popa das mov jnp jge or mov outsl push dec (bad) (bad) (bad) jmp mov cld bound or mov sub pop imul (bad) (bad) (bad) decl mul jno jmp sbb int3 inc insb push xor mov cmp (bad) (bad) ljmp add fwait int3 xor clc in cli ljmp lea dec ds (bad) (bad) jg inc sbb pop ljmp ret (bad) or out clc fbstp (bad) inc sub jp cmp sub fisttp lcall xor pusha jmp xlat cs (bad) (bad) lcall inc out pop dec addl das pop rol lods lret pop (bad) pop mov adc aam (bad) (bad) lcall jl mov xchg inc out mov imul aas push ror clc mov lret add stos sbb int pop (bad) xor hlt xchg fwait xchg ror ljmp or (bad) (bad) inc mov cld pop fsubrl sbb pop cli mov arpl ljmp (bad) (bad) (bad) jp push and jmp pop dec cmpsl (bad) test subl loop sbb incl das enter mov xor jb sbb movsb (bad) test add (bad) (bad) ljmp sub xchg xlat lods pop sub jmp fs mov mov lea (bad) ljmp sub jp jnp lret add xorl outsl dec inc (bad) (bad) (bad) jmp mov xchg cmpsb aam and mov outsl sub dec jecxz mov (bad) (bad) (bad) call or outsl cs fldcw int3 mov jno cmp mov out shrl ret sti scas jg (bad) (bad) (bad) cmp push ja fwait shll jae sahf mov (bad) fwait (bad) push fldcw jle (bad) (bad) (bad) mov xor adc movsb testb test and dec lock pop popa and int3 inc (bad) (bad) (bad) incl hlt cli sbb jg fistp and mov (bad) inc jo pushl (bad) jl sbb movsl sbb add cmp adc adc dec push (bad) (bad) (bad) (bad) fldcw push mov inc or fmuls jb mov jmp push inc mov jecxz out std (bad) (bad) jmp dec ss sub test push mov daa cmpl (bad) push fwait stos add call fcom test cmc in fs and xor mov mov and decl sarl or mov sbb mov lret push inc (bad) (bad) (bad) jmp aad dec sbb mov addr16 adc jbe mov cld (bad) (bad) jmp mov sti sub adc mov lret cmp or mov add loope jne int3 xchg (bad) mov (bad) mov jl mov (bad) push out ret sub (bad) mov dec inc das or (bad) (bad) decl mov mov gs adc rcll and lret or inc pushl (bad) cmp addl inc out xchg fisubr mov pop cmp in jb mov (bad) (bad) (bad) (bad) mov jne pop js out mov sbb inc loope,pt xchg fsubrl (bad) std jge add push (bad) (bad) (bad) pushl add xor sbb add loope sub mov sti push (bad) (bad) (bad) mov and incb mov pop and aas add mov adc cmpl loope cmpb rorb mov lahf fstcw xlat (bad) (bad) (bad) mov aam int ljmp outsb cmc mov mov mov (bad) cmp jnp dec jecxz jnp sub mov shrb add stc ret mov bound dec (bad) (bad) (bad) (bad) mov cmc testb cmc movsb loop (bad) (bad) icebp subl jl mov jno sub mov push mov xor mov (bad) call dec sub js and push and or push cmp jmp pop icebp (bad) (bad) sti mov aaa repz shrb loopne in (bad) sahf stc or inc mov (bad) (bad) call mov movsb sub test jb inc push xchg into (bad) je cmp loope and (bad) (bad) in xor mov cmp and out push addr16 movsb inc les fs xor (bad) mov pop add adc sub (bad) unpcklps mov sub push ljmp fisttpll adc xchg lea movsb dec pop cmp dec lret or (bad) dec (bad) (bad) in call daa sub sti sbb js cmc inc mov insl enter aaa aas xchg (bad) (bad) (bad) pushl push pop test rclb jp add icebp aas ret scas mov test fs sub (bad) (bad) (bad) inc lahf jp je inc cmp xchg jno jg aaa jae das ret and lahf fmuls fsubp dec pop cmc incl jmp pop mov stos lods enter mov xchg push (bad) (bad) (bad) fistp xchg imul sbb test inc inc in pop stos sbb dec mov in (bad) sar adc call es mov pop pop inc jmp jge fnstcw mov push stc rcll fs and mov (bad) imul xlat and cs (bad) (bad) inc cmp ret and pushf icebp jne jg xchg test mov adc jle subl (bad) (bad) cmp mov xchg pop or or add mov cmp mov shr xor or pop xchg adc scas sahf inc or cwtl jo out (bad) (bad) (bad) ljmp add xchg aam cwtl roll and adc xorl pushl in dec fchs sahf lahf adc xorl or (bad) (bad) (bad) out int3 sarb sub xchg adc mov mov ljmp lcall (bad) lcall push xlat xchg mov adc push shll lcall pusha xchg fdiv test adc xlat inc mov roll jmp out call mov in dec (bad) fcomip (bad) decl repnz test out inc xchg mov adc mov movsl ds (bad) (bad) incl pop lret inc roll aaa mov roll push rorl fimul mov movsb jle (bad) (bad) (bad) out outsl mov mov gs (bad) fdivs lret aam or xchg cltd xchg jns adc push push jne pushf sbb sbb jg xchg adc rcrb mov pop inc inc int (bad) cmp mov pop shrb pusha cmp fwait mov sbb fldenv sbb aad add pushl jmp xchg lcall xchg (bad) lock (bad) (bad) mov mov jl cmp sbb shll lret pop rcrl mov std (bad) mov popf jo cmp popf ss shll or mov (bad) (bad) ljmp movsb pushf and dec mov jle ja dec loope or ljmp dec adc hlt (bad) mov mov cltd out pop push adc mov popa loopne pusha into popa stos (bad) (bad) (bad) ljmp bnd cmc call ficoml xor movsb pusha and dec (bad) xor icebp jecxz (bad) (bad) (bad) (bad) fildll jne or ljmp cmp push int3 mov call (bad) (bad) (bad) (bad) jl dec lea mov inc jecxz jp mov jnp test sub inc push and cli cmp (bad) into lods (bad) js es inc pop mov or sbb pop pop fwait cmp test (bad) (bad) inc push fdivrs std pop insl shr jmp int3 mov add jmp aaa fs dec (bad) (bad) (bad) lcall ja test push fwait pusha popa inc cmc lock push outsl fdivs pop jae jno cmp (bad) (bad) (bad) pushl adc scas adc lea (bad) mov sub out (bad) (bad) out clc sbb push (bad) in dec lock scas decl inc repnz mov xlat (bad) incl in or pop jo lods ja rorl and inc ret outsl (bad) (bad) (bad) jp aaa xchg outsl out aas xchg scas mov sbb aam jb add and (bad) (bad) (bad) ljmp data16 mov shrl adc dec jnp rol mov and (bad) (bad) lcall dec jno push rorb push outsb cld in hlt frstor dec pop mov push mov (bad) (bad) jmp cmp sbb jns xor movsb jge mov adc (bad) (bad) mov jae,pn push mov xchg xchg jg adc xor sbb dec cmp leave pop pop ss (bad) (bad) (bad) decl insb (bad) lock dec pop xchg sub loope push inc adc push cmp jmp enter out (bad) (bad) (bad) decl inc (bad) aam inc and js sbb stc cmc fs mov ffree inc ret mov mov ret xor aas mov in xchg or movsl mov xchg cmp mov outsl (bad) (bad) jns mov pop mov push push in lods (bad) xchg push push aas mov push (bad) decl lock ss cmc sub dec xchg cmpsb dec es xchg mov sar fidivrl outsl xchg (bad) xor andb jl push push je fs add xchg repnz cli pop pop (bad) std (bad) (bad) incl fstpl fsubs cmp mov das sbb jo fldenv adc (bad) pushl xchg add cltd (bad) sub pop pop lcall ds (bad) mov (bad) call mov scas mov adc orl es (bad) call pop jo sub inc mov adc dec cs push ret ja (bad) (bad) cli mov nop js sbb xchg sub xchg mov pop (bad) mov mov push movsl (bad) les mov cmp pop lock sbb (bad) jmp add into adc xor xrelease sub test adc lret and dec jns stc (bad) jg fcos decl subb sti mov push mov (bad) lea pusha mov cpuid xchg push (bad) mov dec xchg jp add (bad) jb fistpl cmp gs std mov (bad) (bad) (bad) call jle das cwtl punpcklwd (bad) cmp loopne fisttp or inc insl (bad) decl inc fimul pop dec push in dec lcall cmp lret inc (bad) (bad) (bad) (bad) pushl cmpsl ret ja jne int aad mov xor sbb adc fnsave (bad) jno (bad) (bad) (bad) fldt push adc (bad) xor fsts mov inc sub divl cmpb sti (bad) (bad) call sbb sub mov sahf and nop/reserved mov mov or (bad) (bad) decl cwtl adc mov dec rcll jp lcall sbbl icebp (bad) (bad) push inc push icebp push and jbe add sbb std jecxz adc add ret stos inc dec dec add mov cmp mov add pop push jp fiaddl push sub push (bad) (bad) (bad) call outsl cltd mov or cwtl xchg rclb fcoms mov dec cltd xchg adc mov (bad) (bad) mov lds sbb andb dec jle pop ja mov rcrl (bad) (bad) (bad) (bad) fcoms mov cmpsb xchg nop fsubrs loop jl nop sti xchg jge adc mov (bad) dec mov xchg popa lea dec mov adc cmp repnz mov ljmp pushf sub and lret push out std rorl inc scas (bad) (bad) (bad) (bad) ljmp (bad) jo gs jb subb ffreep sub adc cs mov mov (bad) incl push das subl pop cmp xorb out add (bad) addr16 (bad) (bad) push or cli test push notl jno addl (bad) (bad) (bad) fnop out pop fs call lea mov out sub sahf xchg mov pushf (bad) (bad) (bad) incl adc mov mov jecxz or shl loope ret (bad) (bad) (bad) lcall pop sbb inc cmp adc fiadd loope mov xchg (bad) (bad) (bad) out cltd xor fisubl sti lods fs data16 cmp and aaa (bad) push (bad) xlat aad out mov cmpsl inc outsl jl addr16 repnz push icebp js adc (bad) (bad) (bad) (bad) pusha arpl cmp sbb popf scas and xor xor pop (bad) (bad) (bad) incl hlt cs inc icebp jae or mov sub push (bad) int3 jne cmp out dec jmp (bad) push (bad) fist rclb sub push sub pop mov aas xchg idivb call cmp add lds adc push cmp das inc pop std (bad) (bad) (bad) mov insl jbe sbb and dec cwtl repnz mov cmpsb adc cltd in jae fcoms test rcrb or dec femms or inc push imul cmpsb push or (bad) decl cmpsl mov cmc mov subl (bad) xor (bad) (bad) decl fbld adc jl xor test cmp (bad) xor (bad) (bad) (bad) dec sbb add bound xchg push jb shlb adc xor fiaddl sahf push inc adc cmpsl mov jo jb xor hlt add and mov (bad) decl add sahf imull pop lods jno sbb ljmp (bad) cltd scas or or (bad) (bad) (bad) jmp aam adc sbb fbld fisubrl and out ds inc incl (bad) movsl and int (bad) (bad) (bad) call leave pop and int jne in mov jbe xor inc (bad) notl add mov jmp and xchg or cmc adcl cmc js nop ja pushf add fwait mov mov fs (bad) lea mov dec lcall inc sbb mov hlt stos movb test jne xchg ss sbbl pop sahf jge subl mov xchg sbb outsb into push mov stos (bad) (bad) (bad) (bad) decl push in in xchg mov (bad) hlt hlt cmpl (bad) aam push test fcmove and daa pop icebp das cli adc inc repz (bad) sbb or pop std dec test (bad) (bad) push mov pop or mov insb xchg add cmpsl cmp xorl mov fildl (bad) (bad) (bad) (bad) fwait stc or jbe push arpl inc mov xor movsl mov xor (bad) ljmp or mov xor hlt mov mov xchg test inc jp dec out cmc ret out cwtl pop adc ljmp incl (bad) sub ja shr imul aaa fmull ss push jb (bad) (bad) (bad) push cld jbe jno loopne jae insl (bad) mov adc dec xlat dec cli dec jbe cwtl rolb call call addr16 sahf pop pop mov and mov and addr16 push cltd in mov data16 (bad) (bad) lcall repnz lret push push (bad) stos jge or inc mov cmp mov (bad) out cld js and fisubrl xchg fdivp add sub mov push (bad) (bad) (bad) (bad) call push pop mov sub mov inc hlt rcrb test lds (bad) (bad) (bad) jl (bad) scas cmpsb outsb jmp stos mov add mov and sar adcb inc scas mov aad test aas adc lret pop add push mov into notl inc adc mov lcall test outsl clc jmp jg adc push adc fs sub cmp xor pop ret ja nop shl outsl jmp jbe fsubrs daa (bad) mov (bad) (bad) jg xor sbb sub fcomp cld outsl in add into fidivr test sbb or cli add jge sarl sub dec or loop lea adc (bad) (bad) jmp inc jo fwait icebp orl rcll aas pop push rcrb pop sbb insb in cs aaa dec cmpsb (bad) (bad) lcall test dec pushf (bad) mov imul fucomp (bad) outsb cli (bad) decl push pop jae daa daa aaa mov subb enter (bad) (bad) ljmp outsb mov pop dec sub mov roll js lret add (bad) (bad) lcall pop (bad) fstl fdivrs xorb pop sti out pop stos mov jno jle (bad) pushl mov jl sahf in xchg sub pushf cmp jmp out add (bad) (bad) (bad) (bad) mov enter mov in jb sbb test and fidivl arpl (bad) (bad) call sub jmp pop sbb fisttpll mov pop sub sbb and arpl sahf mov push jnp jo andl xchg adc (bad) (bad) call jno and sarl repnz scas and cmpsl jle cmpsl (bad) adc outsl (bad) cld sbb (bad) (bad) call call cmp mov aaa pushf enter and je cli sub jnp (bad) (bad) mov lcall pop in adc test ljmp add (bad) pop enter shrl push or and popl es ja (bad) call mov andl dec add lahf add mov sar outsb dec out push dec mov jmp fstpl (bad) int push enter (bad) (bad) (bad) (bad) fistp sahf decl lret mov mov xor cmp sub clc and mov or xchg andl cmp and mov jecxz dec mov (bad) ljmp mov cmpsb iret js popf adc (bad) aam std pushl das pop cmpps mov pop lock (bad) cmp popf mov pusha dec inc dec popf push jns (bad) (bad) (bad) mov mov push lods pop stos stos les jmp insb aas mov mov (bad) (bad) (bad) (bad) mov outsl bound cwtl scas fbstp lds fdivl in fs dec or xchg call sub or movsb mov adc loop xchg pop ficomp mov call call movsb shrb push sahf lret mov xor cmp and jge aam adc xlat test sub push inc push and (bad) (bad) incl stos pushf add push jbe inc inc push xor mov cmp dec cmp sbb lods aad lahf sahf hlt test add dec iret movsl dec jge jg pusha mov (bad) call fcoms jp adc (bad) jo gs data16 insl dec cmp push hlt je je imul fsubs xor (bad) fcomip add loopne and fwait xor sbb add and jg (bad) decl push sub sbb xor mov cmp jle cwtl pop lods incl jns jns and xchg push les cs (bad) xor mov mov out cli lcall aaa fnstenv mov cltd or insb mov mov adc int3 insl das je (bad) (bad) (bad) pushl dec enter in nop sarl (bad) lret imull cmp mov in (bad) jmp (bad) push rcrl sub std aas pop xor std xor cltd inc add mov (bad) in pushl cs push push int cltd cld imul test pop (bad) out (bad) (bad) (bad) jmp sub gs insl add xchg sahf cmpsl (bad) mov xchg push test repz (bad) (bad) (bad) ljmp outsb enter sub iret fstpl (bad) xor mov cltd (bad) mov ljmp (bad) jmp push or (bad) movsb or and mov mov (bad) (bad) jp mov cmp cmp scas (bad) sbb in pusha ja cmp mov ljmp xchg repnz stc test sub rcl adc adc (bad) mov cmp outsl mov aaa ljmp adc (bad) (bad) jg addr16 inc hlt mov out xchg pop xchg leave cmc int3 and cmc into outsl add (bad) (bad) fistpll es lods loop cmp pushf pop sti jns cmp mov imul (bad) (bad) (bad) jmp xor int3 sbb xchg cld int3 out dec jl repnz push ds push shrl cmc adc mov jb cltd sub dec sub loopne jg (bad) (bad) mov enter mov xor dec mov xor int3 sub (bad) (bad) (bad) (bad) stc mov mov add (bad) movsl sahf addr16 fist add movsl mov jb mov (bad) (bad) jmp sub into cmp mov addr16 ss lahf repz inc pop loop jne popf int3 cwtl mov (bad) lcall dec xchg sti dec call jmp in cmp cmp jbe (bad) in lock pushl addr16 pusha sub push push leave pop and mov (bad) (bad) (bad) pushl inc (bad) xor subl cmp add or and (bad) decl xchg adcb in and (bad) into xor cmp vmovmskpd icebp pop std cmpsb mov inc sarb push js std arpl (bad) out add movsb dec mov cmp adc jns push sarl inc mov cmp in add (bad) incl dec push arpl lret sbb inc cmp fsubrl es cmpsl mov mov add mov ds outsl cmc ds leave jmp rclb jle les out cltd xchg sub rcr das lret or loope hlt cmpsl and outsl push repnz call mov cwtl xchg sbb mov call dec mov (bad) js enter lcall mov sbb outsb or lret flds pop ljmp mov hlt sahf rcll std rorb insl pop int3 repz in xchg (bad) (bad) (bad) call sbb pop lcall mov mov adc adc call or cwtl nop test call mov xor mov rol jb shl sbb pop and inc dec (bad) pushf pop (bad) fldt add add movb addr16 and enter xchg int3 sbb jge cmpsb push insb sub lcall lahf inc ss push lods movsl dec xchg mov clc test and (bad) (bad) jmp pop push mov sbb and dec mov test inc fstps or (bad) (bad) cmp mov imull dec adc pop jecxz mov add sti (bad) (bad) (bad) (bad) mov push roll pusha mov jl mov stos enter jbe push popa adc in or in xchg test pop mov push adc (bad) (bad) dec lods add loopne outsl sbb jns push movsl push cmp sbb fs jo out xchg (bad) (bad) (bad) jmp lret (bad) cmc xchg mov jmp xor cmpsl mov lret stos lods pop (bad) (bad) (bad) jmp repnz insl add popf adc inc push sahf and cmc inc jl dec ljmp push (bad) (bad) (bad) jmp xor imul pop shlb mov (bad) test test das xchg (bad) (bad) (bad) decl or iret sbb pop or pusha jmp lret push fstps (bad) jb lods jmp (bad) (bad) (bad) decl or loope ret movl shl push or xchg pop gs mov rol insb cmc adc call mov loop adc inc movl (bad) dec jno lret arpl adcl imul pusha mov pop fxch pop add and ljmp jmp add jg gs dec les out push and pop ljmp (bad) decl out lds rclb push xchg pusha sub gs ljmp aas into mov movsl mov sub dec mov (bad) ljmp sub (bad) mov fsubrl arpl fnstenv jmp imul (bad) jmp mov cmpsl loopne out scas ja out jmp xor and and ss (bad) (bad) (bad) (bad) xor jno stc nop sub out and pop push inc mov and cmp xor (bad) decl fwait sbb insb into push adc shll inc mov stos mov fstpt (bad) (bad) call bound imul mov clc (bad) xchg pop (bad) sbb repz xor (bad) (bad) incl xor mov adc icebp xchg xchg outsb insl aaa lods jno jns popf in lret aad cmpsl (bad) (bad) (bad) inc leave sbb jmp push and mov sbb (bad) dec sub push lea nop inc dec data16 (bad) (bad) ljmp sbb pop sub je pop iret push pop dec xchg aas mov loop jmp (bad) pushl push inc fisttpll ror in pop mov jp (bad) (bad) (bad) mov mov mov les push (bad) cmp cli inc insb mov call mov rorl (bad) dec add adc mov jne mov jp inc (bad) xchg jae std jl insb mov sbb enter lea movsl pop mov aad mov ret repz repnz loopne and cmpl (bad) (bad) ljmp xor call cld mov sahf adc stc cmp pop sbb (bad) (bad) (bad) call arpl cmp cli add push (bad) cmc stc imul sub or (bad) (bad) decl cmp outsb mov and mov mov pop mov (bad) (bad) pushl iret and jnp repz pop movsl xchg mov cmp inc enter (bad) dec imul push xor ret mov subb and mov jb daa (bad) (bad) (bad) (bad) fsts mov call ljmp pop pop das inc pop pop mov movsb xor add xor fwait xchg sbb or xchg inc cmp pop jne jnp pop std push sub (bad) xor mov (bad) (bad) std xchg mov ret nop addr16 pop mov xchg (bad) push (bad) jne cli jecxz aaa inc jne cmp test cwtl divl or add jbe adc dec pusha and lret dec jbe cli (bad) (bad) ljmp test cltd dec stc (bad) xor decl mov cmp pop mov loopne (bad) (bad) ljmp incb imul xor aam (bad) jge cmpsl and sbb (bad) (bad) (bad) ljmp mov inc aaa push (bad) fistl aaa and gs push cmp and xchg (bad) mov xor lret ja nop out out enter loope lcall movsb cwtl cld pusha int dec std test pop ret jo mov (bad) (bad) (bad) jmp pop popa jle push pop stos mov (bad) (bad) mov mov (bad) aam rorl testb lcall lods push ja push hlt mov pop bound (bad) (bad) (bad) jmp jle fbld jae cmp add sub movsb cltd sbb cmp xor jo mov (bad) (bad) (bad) mov data16 ret xchg pop pop push (bad) insl jne xchg or (bad) cli in mov cmp sbb jecxz push jns inc ficomp adc jo jae jae (bad) out sub insl sbb les clc adc jno out fisttpll push push or jge cld inc (bad) push fdiv ljmp iret repz fiaddl aam test sub (bad) fcomip pop jo dec push cmp rcrl lahf push outsb mov push (bad) (bad) (bad) lcall mov xchg mov imul addl mov (bad) (bad) call fwait mov xor iret test stos dec fdivr int3 pop lret cltd lahf dec subl std (bad) call jbe (bad) fnstsw dec fadd xchg cmpsl mov out or mov (bad) fisttpl and inc aad mov outsl nop lock (bad) mov sub pushl cmpsb lret jp pop adc push jne pop test (bad) sbb (bad) (bad) (bad) incl xor lods cmp outsb or cld xor divl stc xchg push and (bad) (bad) (bad) jmp mov mov adc cli cmpsb aad push fiadd lcall cmp mov mov sbb fist lret repnz cmpsl sti jg in mov add (bad) (bad) jmp push cmp int3 fbld push mov add xchg stc lret (bad) into (bad) cmc xor (bad) (bad) (bad) fcoml in dec lods jns insb or mov push add lret push iret mov into shrl decl (bad) lods gs mov out adc icebp outsl (bad) hlt scas cwtl insb nop dec sub js cmp pushl inc xchg mov sbb fidivrl aas cmp dec cmp mov (bad) (bad) fist mov jp pop mov push jge call lds gs (bad) jg decl pop repz sub mov xchg jae jo (bad) es (bad) mov idivb addl pop xor xor (bad) lcall dec in push stc sub xchg sub push sub dec mov clc and (bad) (bad) fcomip outsl xchg (bad) xchg mov push inc xchg mov cwtl push movsl inc jle das popl (bad) adc (bad) (bad) lcall push xchg movsb push loope jno sahf mov xchg lods push enter push xchg daa insb pop hlt (bad) jmp inc scas in popa jmp hlt or adc jge pop inc xchg sub inc (bad) call mov test add mov and jae (bad) (bad) decl xor jnp xor and int3 aas icebp lret push outsb push pop and or int jmp jmp leave enter cmp jbe repz inc nop mov jmp lret jns mov or (bad) mov xor or xchg and dec imul movsl test xchg or outsl ja mov (bad) (bad) ljmp in jecxz mov test add fnstsw int rcrb (bad) (bad) ljmp iret mov fyl2x mov out mov mov (bad) fnstenv (bad) sbb nop dec mov (bad) (bad) incl rcrb out orl xor ja in cmp (bad) incl lret pop push mov popa mov or sti aas pop sub (bad) (bad) pushl loop fldl dec sub lods loop mov ficomp insl jmp inc (bad) (bad) (bad) pushl stos daa xor sbb pop pop fisttpl or fnstcw out fdivr (bad) mov test insl dec cmp data16 popf outsb mov push lds sar ja (bad) (bad) push into pushf push popa push out pop cmc in dec adc inc ljmp (bad) (bad) (bad) pushl dec popf add mov mov (bad) fild xchg xor in mov into and mov mov ljmp jecxz cmp dec xor mov push ret push jns mov lods notb push xor mov (bad) (bad) decl ret je push xchg push sbb out mov sbb imul lahf xchg (bad) (bad) pushl cmc inc sub outsl aas fsubrs mov push and movsb outsb loop pop fstps or push (bad) andb aad (bad) mov (bad) inc cld cmp bound xor into inc push pop dec jbe mov je mov (bad) (bad) mov enter mov sbb arpl mov repnz sub (bad) (bad) incl xchg outsb and inc cmp loopne sub mov mov sub lret jg ljmp adc fistpll cs (bad) sti jge sbb xor and push fcmovnb (bad) (bad) (bad) (bad) cmp xchg sub dec pop cs xchg add std test mov push fidivr adc dec stos sbb pushl mov adc ficompl incl sbb xlat dec pop dec jno mov lods jbe sub and pushf push shlb sti xchg ss (bad) (bad) (bad) fnstsw and cltd rorb sub loopne cli in mov mov mov (bad) pushf xchg or push or (bad) inc insb xor (bad) mov stc adc rolb ja ljmp leave (bad) mul or and insb icebp jbe pushf mov and (bad) fcomps incl scas test inc imul or aaa and mov sbb enter (bad) (bad) lcall ljmp push loop in mov xchg loop jne cli iret xchg sbb (bad) jg pop ror sahf loope stos jo (bad) xlat cmp xor ja lret xor shrb (bad) (bad) (bad) (bad) clc fldt sahf pop mov adc daa jg pusha cli or mov xlat incl add js negb movsl pop idiv (bad) (bad) jg (bad) (bad) jno fs movsb sarb mov aaa or mov rorb (bad) (bad) (bad) in stos sub in nop xlat scas cs dec mov out rolb and nop pop fildll clc das clc xchg (bad) fs jge imul jae mov dec fdivr decl sub test out repnz cmp or dec and push (bad) (bad) (bad) incl test push les orl mov cmp popf int sub rcrb xchg jle sub adc pop add sar sar add popf pusha xor (bad) (bad) (bad) push inc add les jmp dec cmp fucomp mov or leave xor (bad) (bad) (bad) incl enter aas dec dec mov or jl mov repnz ja scas clc adc push mov fiaddl test xchg mov lcall arpl (bad) (bad) (bad) cmp je and int jmp mov mov pop (bad) ljmp ja rcrl fwait lock jg jle sub adc (bad) call dec std jo mov and nop mov push fwait cmpsb sbbb jb js mov (bad) divb lds fs movsb loope adc test (bad) scas clc (bad) jg jns push push int jge arpl mov lods (bad) (bad) (bad) call cs ljmp jmp cmc and xor xchg mov mov (bad) (bad) (bad) call and imul mov popf xchg nop adc adc xor sub xor addr16 lock mov cltd into mov pop out test inc adc (bad) dec ss dec jns jns pop fnop (bad) (bad) (bad) (bad) (bad) daa ds jge bound pop mov pop retw lahf mov rcll std aam ret dec popf (bad) (bad) (bad) ljmp ds (bad) lret xchg or cli adc mov mov inc (bad) (bad) (bad) ljmp jge cmp pop icebp loopne call test cmp sbb adc xchg ret mov sbb in loop xadd cwtl sbb sub enter aas jb iret aas mov jg daa mov aam cld dec sbb mov std lcall (bad) lcall enter mov mov sbb xorl and fsubrl icebp xchg ljmp mov loopne xchg test adc out das dec lcall ss das cli (bad) fcomps adc outsb lea dec (bad) loop add (bad) (bad) decl jo jmp pop push pushf lods push jmp test mov stos and je mov (bad) (bad) (bad) pushl or scas jne xchg cmp pop out pop jle aas or xchg fidiv dec je cs decl (bad) or outsl out push mov xchg or (bad) fldl push pusha scas push or sti pop in in (bad) incl xchg sub pop mov xor or jl sub std call xchg aam test mov cmp sbb xor (bad) std dec test loope jmp cmp mov cld push (bad) int mov ljmp (bad) out pop mov jg sbb iret pop pop xor jle sub jp (bad) (bad) (bad) call movsl ror and pop adc push into fisub test xchg pop jae (bad) (bad) (bad) (bad) fnop (bad) jbe incl inc and (bad) mov loop adcl ja xchg cmp incl pop and cmc adc mov dec sub push or lcall imul or (bad) fcoml jge shrb call pop pushf mov mov test (bad) jmp cwtl add scas test xchg inc mov jo mov aas pop cmp xchg ljmp nop jle xchg fwait pop fstl pushf xchg rcrb int roll scas fwait (bad) (bad) jmp (bad) aaa mov xchg loop jo push imul cmpsb mov push fstpt jo (bad) aad sub divb inc pusha daa jae rorl jg lcall sbb inc cld scas add cwtl cli test cwtl insb xor sub (bad) (bad) (bad) ljmp mov push out out add das mov or movb jne sub fwait (bad) (bad) (bad) cmp loopne popa pop shrl push sbb aaa fsubr pop loopne inc push into (bad) (bad) (bad) jmp sbb push inc outsb mull mov dec and outsl mov popf cld daa (bad) decl xchg adc aaa dec inc jae pop outsl jecxz xchg int3 imul adc (bad) (bad) call mov ds ss push pop sub pop push scas xor (bad) scas dec clc sti pop mov sub (bad) (bad) (bad) incl pop inc pop in sbb rcll jo cmp sbb mov (bad) cmp jne (bad) ljmp or jl push cmp jnp pop movsb sbb mov aad out test mov mov outsb aam scas mov dec and repz adc xor jno (bad) es xor push (bad) (bad) js scas jnp gs in (bad) push cmp movsl cmpsb repz icebp mov insl or (bad) (bad) jmp aam xor jmp andl cmp stc add (bad) (bad) decl daa shrl cmp adc aaa mov pop sub incb push ret int adc fucom mov mov mov sbb (bad) fsub cmp push mov (bad) pushl fs push fidiv sub out clc shlb jecxz fcompl (bad) (bad) (bad) decl int push add fdivl push or sub add ret push movsl (bad) (bad) (bad) ljmp lds popa add mov adc pop loope xchg (bad) fildl (bad) (bad) (bad) call inc push dec jns and in test xor cld sarb and decl sbb gs pop loopne push fistl push in outsb fsts mov and (bad) (bad) incl sarb mov add mov and (bad) (bad) call mov imul push orl ja fldl jecxz fs scas lcall jg test inc arpl mov (bad) (bad) out fstps pop xchg fs mov stc test xchg cwtl imul in mov sbb add sbb leave lea ret fcmovbe xchg xor lcall enter xor rcll in push mov mov cmp inc push inc mull xchg std (bad) (bad) incl lahf mov xchg xor inc sbb lret outsl (bad) lea stos call frstor and movsl ss xchg in daa or xchg sub (bad) decl ljmp nop lods lcall fmul loopne mov adc pop ret pop loopne dec loop in mov sub lock in mov ljmp pop or test push outsl xlat pop imul popa mov (bad) (bad) (bad) (bad) js adc test xor fcompl sti or lret mov fwait ret add (bad) (bad) mov jae push and out xor mov adc (bad) (bad) ljmp icebp xor fdivrs negb leave fldenv pop jmp mov js mov gs in das adc negl adc cld imul (bad) mov xor mov push dec fdivrl xor (bad) dec adc jns add call mov mov mov xchg rorl mov sub adc inc (bad) (bad) call inc loopne push dec daa in cmp test ds mov insl mov aas pop or pmaxsw and mov negl mov js scas nop mov (bad) jg (bad) aas mov sub cld xchg js loop je imul mov xor das jl jg fsubs fistl jge,pt sub (bad) (bad) (bad) lcall (bad) jge ret mov aam jmp clc mov jp pop aam add (bad) pushl mul mov enter hlt jg and push add dec std adc mov sub sbb (bad) push not ljmp or aam mov and mov pop movsb (bad) decl pop xchg pop jb movsb jb xchg cs mov cs push or ja add cmpsb push inc sub cmp push (bad) or clc (bad) pushl add ljmp dec sbb std rcr and cli mov fdivrl je cmpsb stc xchg sbb dec inc es scas inc arpl pmaxub mov pusha cmpsb decl (bad) aad rcll add sub (bad) push and pop mov jnp mov mov push mov (bad) addr16 xchg aaa mov test inc ss jge or adc and dec dec fistpl fwait jl lds push cmc mov jmp mov lods xor (bad) (bad) (bad) jge arpl adc popa adc fidivrl mov xor (bad) (bad) (bad) call cwtl (bad) push out cmp popa and lret arpl sub jo sbb sub insl adc ljmp in (bad) mov adc jnp std jmp (bad) jecxz cmp jne jecxz pushf cld mov neg in inc fidivrl (bad) (bad) (bad) (bad) jmp and xor cs aad pusha inc add xor aam aad fiaddl cld (bad) pushl mov adc dec (bad) pushw (bad) adcl push push (bad) (bad) ljmp mov push push outsb mov mov scas in stc (bad) into (bad) (bad) (bad) (bad) mov imul daa jl add test pop add xchg mov (bad) decl xchg lea repnz fs push add jbe mov (bad) setb mov cmpb je cmp inc sbb mov gs data16 add orb (bad) insb mov xchg sbb mov (bad) divb das movsb cld (bad) (bad) (bad) jnp repnz mov sti ret out mov mov push cld insl xchg and in push mov std pop sub popa dec cmpsl push call (bad) popf decl add pop dec (bad) add (bad) or pusha pop xor sub mov (bad) push std push out xor mov (bad) (bad) mov adc aad lret add mov ljmp sarl jne sbb cmpsb mov adc (bad) (bad) incl (bad) pop mov sbb or hlt mov (bad) (bad) jg jno sbb clc call pop popa in mov jp in pop and (bad) jmp sub nop ficomp enter loope gs loop test and xchg movsl pop (bad) mov movsb sbb cltd std (bad) cwtl push dec jp (bad) (bad) (bad) mov xlat leave xlat jne fs nop mov (bad) jge or mov sub (bad) cmp cld mov cmp push sub or imul (bad) ljmp sbb repnz je lods pop ds push pop cld and (bad) ljmp ljmp int xchg or pop sarl ljmp pop push jecxz leave sahf daa rcrl dec and lea int3 arpl adc out jo lea (bad) lcall push xchg imul stc jg imul and (bad) ljmp clc add cwtl mov mov sarb push fsubr jle and stos xchg push mov les aam xchg divl lds push add add dec clc popa jo cmpsl add pop fs clc ror jns pop or add and (bad) in pop loope fisttp dec pop stos popa aaa push int dec fidivr leave mov mov cmc scas fcomps aam (bad) (bad) pushl cli fstpl add pop mov pop jp lcall stc out xchg inc jmp mov iret or push sbbb jnp jae sahf enter lcall movsb push std in jo orl mov push int3 stos pop and xchg fdivs in (bad) lcall adc push sbb mov xchg out inc fwait insl cwtl (bad) fildll arpl call sbb sub je (bad) ret fcompl sbb notl sbb mov sub ljmp fcmovne in out mov push int gs mov and out test aam adc xor (bad) xchg mov dec stos xor (bad) (bad) (bad) lcall pop aas nop adc fildll add inc ret push lcall push bound aam mov enter inc (bad) ja push sub xchg insb and pop add or dec pushf (bad) cmc pop imul cmpsb mov add (bad) inc je dec aas mov outsl sbb adc cmp push (bad) xor (bad) push outsb and std push dec push (bad) lds cmc js scas stc adc insb stc lods pop and fwait ss (bad) (bad) decl lds lock lods sar ljmp sub jmp (bad) (bad) decl inc pop test dec push mov sbb out cmpsb push push dec (bad) lods imul (bad) ljmp jge or int nop dec out xchg dec jae xchg iret js lret mov mov sub int jns clc add cmpsl sub inc adc jg call outsl lods pusha enter dec mov and xor jl add (bad) (bad) call cmc push imul mov jbe jns sbb mov sub outsb (bad) fnop jl or dec lock sbb xchg pop jg (bad) pushl sti mov (bad) xchg xchg or icebp xchg jae (bad) (bad) (bad) decl subl mov or add mov std pop int mov add mov roll push push insl mov lds leave pop sub (bad) jle repnz push xchg ds sub mov fdivrl repz stos es xor mov ljmp jmp mov call mov fidivrl and (bad) (bad) pushl ljmp (bad) sub add out fs hlt fabs adc mov mov cld (bad) jmp lea push add jb push loope lds cmp (bad) (bad) incl (bad) cmp and cld lret andl es cmp jno lcall test mov data16 (bad) icebp and popa dec shr (bad) insb or (bad) (bad) ljmp push cli mov (bad) sub xor ret ljmp mov (bad) (bad) (bad) call (bad) ficompl mov call repnz sbb ljmp call push clc aam lret out call lods int mov inc or ds (bad) (bad) jmp insl mov in mov rcrb mov sbb clc pop push mov (bad) ljmp mov pop repz mov (bad) mov xlat jecxz popa sbbl icebp (bad) jg les push sub jmp adc mov (bad) (bad) (bad) jg int3 lods add fadds push xchg cmp repz pop insl loopne stos cmp (bad) (bad) call shrb fdivrs pushf fimull cld loopne data16 movsl mov pop push loop sub push push jge ja in arpl les into sysret sbb cmp ret (bad) jmp or jmp int3 jns jle leave mov xor loopne adc xchg jl mov iret mov dec (bad) (bad) (bad) pushl movsb add cmp inc lods pop jg pop fsubl (bad) adc (bad) (bad) pushl (bad) ret (bad) loop sub loopne adc loop xchg (bad) pop test int3 lods and std (bad) decl cmc (bad) xor insl inc pushf xchg loope popf cwtl inc sbb fstl out mov add addr16 and adc adc mov mov mov mov mov sbb outsb mov mov out (bad) in push int outsl add (bad) jmp cmp cli sahf es mov push mov idiv (bad) jg mov loope enter stos mov insb in fnstcw sbb (bad) call std inc xor xor fwait cmp call ret or scas lret inc test or (bad) fisttpll xchg xor sahf imul lea js mov addr16 (bad) cmp inc jno rcrl iret idivb repnz jge hlt fisub add push sub mov hlt enter add jae popf lods mov or push inc into in (bad) (bad) (bad) lcall insb test and in and sti imul cmpsb push adc cmpsl push xor lcall sbbl (bad) jb add push sbb cmc out dec adc mov lea aad push and pop repnz iret or imul out jmp push (bad) (bad) (bad) mov test pop in xchg stos enter js daa adc inc int3 int sub gs adc scas pop cmc cmp rol push dec test arpl ret cmpsl pop sub cmp push repz pop and push and icebp jle add lret inc jbe cmp dec pop gs mov nop stos and pop dec add imul or pop pushf js (bad) (bad) (bad) (bad) clc cmpsl and pop cs aam popa rcll bsf dec inc addb dec ret (bad) (bad) pushl adc push jle cs push push lcall add popf test mov fldl (bad) call add leave daa sbb daa cld xor cmp movsb nop/reserved jae (bad) (bad) inc pop add out (bad) outsl jbe (bad) aad aad (bad) aad insb es sub hlt negb (bad) (bad) ljmp mov and push (bad) jl dec fdivrp fistpll leave cmp andl or (bad) cmp cmp xor je dec jne jp inc (bad) outsb or and cli (bad) pushl cs push cmp into add add dec pop inc mov (bad) (bad) (bad) pushl push cmpsl mov ljmp out jb ds jle int3 and mov inc dec xor push dec sub lock inc lock imul fs (bad) lcall hlt jge hlt mov inc insl test pop inc movsl repz das out xchg pop sahf (bad) (bad) (bad) pushl adc sub sbb add repz push adc mov (bad) (bad) (bad) jmp pop push mov jb out jbe std xor xchg xcrypt-ecb cmpsl mov mov (bad) (bad) (bad) pushl repnz fmuls icebp cmpsl sbb leave sub push pop sbb clc ds cmp jmp mov pop mov cmp test jecxz (bad) (bad) fildll lahf mov ret data16 shll jl add ja (bad) mov xchg mov lods mov and and xchg push stos int3 xchg aad add (bad) mov (bad) (bad) jmp fsts loope fild xor dec lods outsl adc (bad) or (bad) (bad) ljmp push js push sahf inc cltd mov std scas mov jnp mov push push (bad) (bad) (bad) ljmp mov test inc cmp mov sbb push aad sub js xchg (bad) (bad) decl pop fnstsw aam leave sub mov pop mov mov cmp pop pushf lds and scas pop add daa xor adc xlat out cli (bad) (bad) mov sbb xor into jmp ret insl xchg (bad) out (bad) (bad) decl sub push mov adc or inc aaa sbb dec add mov (bad) decl fdivl mov mov xor es cmpsb pop ss movsl ja sub aad dec pop cmp push stos ss popf adc jb xorl leave mov (bad) jg test jbe dec inc jmp or add xor loop out push or ficompl ss decl iret sub xor xor ret ret loop fisttpll (bad) (bad) (bad) lcall aad and xchg and xor xlat cmpsl cmpsl aad xor cmp or mov scas jmp sbb incl lret call ljmp mov xchg jae sub pop call (bad) fidivrl mov and test lcall loop (bad) and pop and (bad) incl cs mov loopne aas fdiv test out xor xor xchg test push push inc lods dec mov pusha lahf scas subl lods decb cmp dec cmc mov (bad) ljmp add rclb xchg jmp cli sub mov sbb (bad) (bad) and leave fwait (bad) repz push (bad) mov inc fsubrs dec (bad) jae jmp cld (bad) call sub cmp imull sbb mov mov xchg inc xchg daa dec sahf pusha jmp sbb imul jp,pt daa movsb faddl mov cwtl gs dec push pop cmpsb fsubrs adc xchg (bad) (bad) (bad) jmp cld xchg mov push xor push out xchg in inc pop bound sbb loopne cli and mov jbe xchg inc pop xor jp addr16 cmp fcomip clc pop fildl jb mov subl push (bad) (bad) (bad) call inc push jnp mov sti in sub sub je and imul push aas into mov mov loopne or in xor (bad) decl (bad) enter mov fwait popf int3 std adc rcl in aad das clc fcomip add inc (bad) (bad) (bad) call mov in adc dec and pop stos mov or stos dec add or mov (bad) jmp js jns movsl adc rcll push add repz aaa iret mov cli insb in clc fucom xchg sbb (bad) (bad) lcall dec icebp xchg scas adc mov jp and nop xor jle imul andl out pop xor add mov movsb stos mov (bad) (bad) jmp lods cmp out adc cli das fdiv dec cltd sub imul (bad) (bad) incl hlt dec loopne pop mov insb rcrb jbe jle pushf mov adc push xor aaa test icebp (bad) inc int insl or adcb loope out aas das or insl dec ret cmp loop inc lahf sahf stos daa gs cmpsb test imul xchg shrb fdivr test (bad) incl push sub push mov jb mov pop or decl jmp iret inc aaa and les (bad) fistl cmpsb pop add add jb push mov and (bad) (bad) (bad) (bad) mov mov fistpl xchg arpl into cmp sub iret cmpsl mov cld (bad) jge pusha jo inc in jnp into push mov aad (bad) push fdivp push fbld mov push push outsl movl pop inc pop xchg and loop (bad) incl loope xchg sbbb cmpsb cli xchg mov mov ffreep push cld (bad) (bad) call rdtsc testb xchg iret imul cmp jmp (bad) (bad) call mov sbb jecxz icebp jnp ror xor jg (bad) mov shll loope ret lea aaa add loopne mov (bad) mov xor (bad) call and movsb xlat and testl stc mov mov (bad) (bad) jg xor leave push mov cmc fldt outsb inc lods outsl push and and (bad) (bad) (bad) fstpt push dec sahf pop leave xor xchg ffree xor repnz outsb fildll or (bad) (bad) inc pop xchg pop movsb or popf mov int3 imul decl ret (bad) (bad) call into les jbe sbb cmp into (bad) call jecxz in mulb (bad) (bad) decl inc scas hlt outsb fnstenv adc jnp stc dec std incb push dec movsl cmpb (bad) (bad) stc cmp dec mov int3 (bad) add aad xchg fs push xchg jbe pusha mov (bad) (bad) (bad) (bad) std (bad) js sti hlt in je out aas mov iret xchg repnz dec out jae xchg fadds insb xor (bad) (bad) (bad) decl jno sbb push (bad) leave in add push jnp fsts jge sbb lahf adcl or push xchg sub inc test mov xor imull fldl test jmp adc mov cltd gs jo shrl negb mov mov or (bad) (bad) mov sahf mov faddp mov adc in shlb adc pop mov lods (bad) (bad) incl fdiv jae xor or outsl sti pop inc mov mov incl xor xchg es hlt mov lahf aas enter push das xchg mov int3 sub stc mov (bad) (bad) jmp pop hlt push in ljmp inc xor inc (bad) test fldenv (bad) (bad) (bad) cmp inc dec ljmp movl dec js aaa out lcall sbb pop fsubr sub add addb mov jmp push mov or out jecxz jnp insb mov push jmp hlt mov jmp fnstsw dec idiv mov fsts (bad) (bad) (bad) fbld xor cmpsb std jns and sub popf inc jo clc sahf sahf sbb negb rorb push (bad) (bad) (bad) lcall jne ficompl ret and xor cld test push push dec add and in call inc adcl xor pop mov sub iret pop fldcw xchg xor sub sarl mov lahf loop rol out add and fstp push int repnz adc (bad) je (bad) (bad) call repz dec xchg shrb pop jle xor pop mov jge and (bad) (bad) decl mov rcl std xchg pop mov mov hlt xchg adc sbb sub xchg (bad) (bad) (bad) lcall imul hlt (bad) xor js in mov xchg pop popa fcomi sahf pop pop scas push (bad) mov xor mov dec out mov enter xchg (bad) (bad) (bad) inc and push fistl popa aaa jp pop ljmp aam out out inc adcl jge daa xchg push popf push aam jnp adc sbb mov fsubrl inc pop aaa orb mov (bad) decl lea xor cmp xchg inc xchg mov (bad) (bad) mov dec lock aam mov hlt pushf pop inc mov into dec adc (bad) sbb (bad) (bad) pushl xchg and das lods mov jb movsl rorb mov xchg pop cs mov (bad) (bad) inc cmp xchg push in mov les push loop xchg cli cmc or jle test test arpl mov xchg loopne xchg popa outsl lret aaa scas repnz xor cli sbb sahf imul (bad) (bad) call test and push jno in mov cmpsb mov xchg pop sti stos aam and push pop pushl decl adc inc outsl jle (bad) and rsm jecxz (bad) in mov loopne adc scas lcall into cli shl (bad) out inc xchg imul sub sbb pushl jle lods fs pop jge outsb mov mov outsl dec mov imul (bad) (bad) arpl or mov std add xchg jmp mov call xchg aaa shrl push inc and sbb nop jle or push std (bad) lcall add lret negl push inc int jns das imul mov (bad) (bad) lcall push push fnstcw pop mov stc pop incb push shrl mov cmp scas dec adc mov pshufw (bad) (bad) (bad) call cli rclb jns xorl shrb adc sub (bad) (bad) (bad) decl jle pushf adc testl pop sub mov popa jp (bad) (bad) ljmp std orb mov fs xchg push addl cltd xchg je xchg sub (bad) (bad) jmp sarb icebp pop fidivr fildl out ficompl js sub cmp pop jg (bad) pushl dec nop or bound inc hlt xchg sub aad sub cmpsb stc sub (bad) decl or (bad) add cs sbb jo push xchg mov sub xchg dec int (bad) repz (bad) (bad) (bad) (bad) in mov inc adc sbb out mov andb hlt mov stos or (bad) (bad) incl (bad) jge shll je jo les rorb adc lcall sub jl hlt call cld adc push lods aaa stos scas sub adc test sbb js mov xchg enter aam hlt in push (bad) (bad) (bad) mov out fildll adc jg sbbb xlat sbb push (bad) jmp (bad) (bad) (bad) call arpl daa push std mov fistl loope rcl outsb fdivrp enter sar (bad) call aam icebp fmull cmp push sub sbb int lcall lods xor lods inc lea (bad) (bad) (bad) inc loop movsb fwait stos sbb mov or fs (bad) pop xchg lods mov mov (bad) (bad) (bad) jmp mov scas ljmp hlt int3 push xchg andb xor push adc fwait sub sbb call jge out (bad) imulb cmpsb inc jno jbe adc shr shrl (bad) call cld cmp ljmp mov mov push stos and push into (bad) (bad) (bad) decl sub xor add fmuls mov insb and lea daa (bad) les mov lret (bad) (bad) (bad) lcall sbb (bad) ljmp data16 pop fnstenv push jne fimul call clc mov mov sbb push (bad) decl push cmp mov jne enter repz movsl xchg shll (bad) dec xchg das sar cmpsl push xchg in icebp jne pop or pop add dec fwait loop pop xor (bad) mov cltd mov imul ss icebp inc sub (bad) jmp cld xchg fsts (bad) pop mov cmp xchg insb fnsave (bad) aam (bad) (bad) (bad) pushl repnz push nop mov test xor fstps daa aam xchg cltd jge lahf lret push loope add (bad) arpl (bad) jp mov and push add mov clc adc mov xchg insl xor (bad) (bad) jmp push cmc lret iret dec outsb pop adc xlat sbb lret mov xchg (bad) (bad) fistpll lods (bad) fcmovne and cs xor adc sahf negb (bad) (bad) call and int3 dec stos movb jecxz cwtl dec ret mov sub mov lods notb mov cmpsb sub (bad) mov pop fsubs dec mov jb xchg out mov (bad) aad (bad) ljmp popa cwtl ficoml sub pop enter jno insl mov scas scas mov ljmp mov dec sbb shl xor mov (bad) (bad) (bad) decl push mov push adc fs scas cmovl xor mov rcll push std (bad) ljmp sub (bad) jno (bad) scas popa and sbb or inc js in (bad) (bad) (bad) push dec (bad) fsubrs testl xor fdiv dec dec sbb rcrb (bad) jge into dec dec rcl addl lret cli mov scas push repz push bound decl (bad) push cld cmp push cmp mov mov xchg sbb mov (bad) (bad) call int3 adc mov cmp dec fmul push push repnz lds xchg dec push sbb outsl xchg xchg inc jge decl mov push rol dec mov jo (bad) (bad) ljmp mov fnop push sub insb ret dec lods std push (bad) and lock incl pop fxch faddp into aam jb xchg xchg xchg dec icebp orb (bad) fucomi sbb scas into cmpsb (bad) or and lods lds lock xor call in test nop inc mov xlat and mov mov mov (bad) (bad) (bad) cmp in xchg adc addr16 andl mov subb mov (bad) jg in scas mov cmc pop mov addr16 mov das mov imul (bad) call pop ja pop mov sub lret sbb inc adc hlt dec rorb mov pop adc popa leave mov push jg adc les das sub mov lcall mov or dec addr16 aaa subl (bad) (bad) (bad) mov and stos cltd daa xor push cmpsb repz shlb (bad) movsl (bad) (bad) (bad) pushl leave out push mov fwait xchg shr fmull push out mov xor pop sbb (bad) (bad) call push dec mov mov pop std stc and ja rorl lods hlt inc push xor (bad) call (bad) out mov ds push mov in scas mov popa jae push je mov (bad) (bad) ljmp or mov cmc hlt adc pop (bad) xchg xchg jne repz pop push mov dec sub mov gs loop mov fstl movsb mov dec call sbb mov shr cli in cmp out cmp loope adc (bad) ljmp sub test call jmp (bad) (bad) jg jecxz imulb (bad) (bad) (bad) jmp out popa das arpl cld xchg pushf pop insl bound popf repz jmp (bad) jg ret add rcrb jnp xor mov mov (bad) (bad) (bad) pushl enter jnp pop pop mov stos push mov sbb (bad) (bad) (bad) incl and mov cwtl icebp sub (bad) mov dec std (bad) fisttp pusha xor (bad) (bad) (bad) incl or cld les cld sub std xlat jbe cmp (bad) (bad) call mov sub das adc jae dec insl divl inc dec push repnz ljmp scas repnz fs shlb (bad) (bad) (bad) decl int3 cltd sahf mov pusha sti fs push push and rcrb cmp addr16 pop movsl xor (bad) cmp inc xchg test jnp cld or mov mov cmp mov in pop (bad) ljmp pushl test push inc mov jb sbb mov nop xchg push nop inc (bad) (bad) incl push cmp out push dec movsb addr16 in aad (bad) iretw jo (bad) shl int3 (bad) (bad) (bad) ljmp int data16 cld lds imul (bad) pop and icebp push sbb (bad) ljmp je sbb shrl cwtl xchg int (bad) lcall cmp xor (bad) (bad) (bad) call push cmp or sbb push loopne lret addr16 push and adc (bad) (bad) dec lahf shr sarl or pushf daa push xor cwtl add xchg in push call testl jns mov or push int pop lret push push lea (bad) lcall outsb inc dec mov popa add mov add or cs cmp or xchg xor push dec pusha (bad) mov dec pop or adc xchg sub and fcoml jno (bad) mov ljmp lock insb lcall pop fcomp insb fwait gs call pop sub (bad) incl scas ljmp inc pop stc pop cmpsb xor popf push sub mov dec mov pop repnz (bad) outsl mov enter lahf dec sbb (bad) ljmp gs test and fwait push mov call outsb clc (bad) imul jo adc negb test (bad) xchg pushl dec adc leave sub add jp ljmp or and xchg mov xchg dec add call mov (bad) call inc xchg pop (bad) sub xchg push or stos (bad) call loop push js aam imull outsb sti adc mov xor xor sbb pop insb loopne cmpsl or sub call imul int3 jl (bad) (bad) in je mov (bad) fmuls gs out test inc push lock pop (bad) decl push aaa xor mov mov or push push movsl fistl or fdivl loopne jl pop in hlt xor mov push dec (bad) sub (bad) (bad) (bad) incl xchg stos call inc or lahf xor jg jmp cmpsb les mov (bad) (bad) decl pop out push cmp mov mov (bad) cmp out xchg arpl (bad) (bad) (bad) in shlb sub add loopne clc dec and ret inc sub ljmp ja les xor pop mov dec loopne mov lock je lret (bad) pushl jle test daa int3 and inc mov je add aaa mov es aad (bad) (bad) (bad) inc sbb mov movsl sbb popa aad dec mov mov daa add imul lods mov adc aaa push cltd push in mov in xor ss (bad) cmp aam lea aad dec add jg sbb (bad) jg mov cmpsb (bad) aad nop jb adc dec and (bad) aaa (bad) jae (bad) (bad) (bad) (bad) (bad) ljmp pushf lret mov leave ja shlb fist dec sbb stos cli test pop mov (bad) mov push cmpsb sub inc jle sub hlt dec in cmp lock xorb (bad) (bad) call xor test loopne dec pop loope fist aad mov insl push xchg push in (bad) (bad) jmp jge inc fistpll divb int3 jle subb xor popa mov dec aaa xchg fsubs pop lock popf cld ljmp push mov stos xor (bad) pushl std fnop and jl adc es add loopne sbb mov nop in cwtl shrb mov adc (bad) movsb sahf inc mov add (bad) in clc mov jne push ficompl (bad) sub mov (bad) jg std outsb rorl or (bad) pop fnop xchg addl mov and (bad) (bad) push loope push xor fsts fidiv mov xchg pop icebp shrl (bad) pop sti sbb shll adc in repz (bad) (bad) cmp and sub enter repnz test xchg mov cmp (bad) ljmp test push sahf call imul in add ds in dec pushf movsl dec shlb (bad) (bad) (bad) decl xchg cmpsl sbb or jecxz xor add (bad) xchg iret pop or xchg fwait push inc into (bad) (bad) (bad) (bad) clc stos xor dec js lods push std xor dec ret aaa cmp push pop aas jge or decl fisub adc insl or outsl mov cld jg lret sbb add popa lock dec cwtl (bad) (bad) (bad) call sarb decb push add cs movsl (bad) scas mov into jb mov decl cmp cmp lds mov jl dec xchg and leave sub (bad) incl pop xchg pusha daa adcl sub mov jg (bad) (bad) (bad) incl xchg sub push sti jns jns add paddw jno movsl push and xor jmp daa fidivr mov dec dec jno fucomi outsb push adc sbb jno push icebp (bad) (bad) (bad) ljmp gs adc enter icebp bound flds lret nop cwtl lahf or xchg notb xchg call adc shrl stc mov pop xor or stos (bad) mov es xchg push xor std dec mov lock (bad) (bad) (bad) faddp fnstcw stos dec xor pop add pushf pusha xchg es sbb lcall (bad) (bad) jmp cli dec popf push lock cmpsb es adc push mov test (bad) (bad) je,pn sbb jne add fimul movsb add insl jno add xchg (bad) (bad) ljmp fs dec or mov js jp test xchg inc fs insb ss (bad) (bad) jg adc icebp cmpsl xchg pop xchg sub pop mov hlt cltd jge call lahf pop push sbb mov icebp cld pusha push insl mov (bad) mov mov mov daa sahf add loope cmp in rclb bound sbb stos fisttpll fdivl (bad) (bad) (bad) lcall mov mov repz mov sbb stos or addb jmp loop xchg inc aaa loopne mov (bad) pushl dec fiadd add mov dec dec div das cmp (bad) (bad) (bad) (bad) call sbb add jmp in xchg aas adc jg fimull ror pop int mov fdivrp (bad) jg lahf loopne lock sub ss fild add (bad) aam repnz (bad) pop cld (bad) pushl imul mov pop shll push lcall (bad) mov lods xchg lcall ljmp jb mov out (bad) (bad) (bad) jmp por out insb push fcomp inc in ficom mov int3 mov (bad) aas fimul js sarl pop mov loopne hlt cmp (bad) xchg pop sub lcall (bad) movsb xor sub lret pop sar push mov add or (bad) (bad) jmp mov and pop and sbb sahf stos jae mov add loop and decl cli xor sbb jo inc xor xchg test mov dec cmp mov adc add (bad) (bad) (bad) jmp mov int3 mov iret adc cmp es push es mov mov ret rol in fstl test fadds cmp cmp lcall mov int3 push out xor jno fs dec aas mov xchg (bad) (bad) (bad) incl push mov jp sahf int dec xor adc mov sbb jb push data16 add xchg insb add inc sbb iret mov mov (bad) (bad) jnp test sub inc inc jp ja cli outsb dec or test clc jge dec xor mov (bad) incl cmp loopne in jbe mov mov xor jo cmp out (bad) (bad) (bad) pushl adc xchg imul and jmp or fs xchg cmp jle pusha lret aam (bad) (bad) push jae push xchg mov push push pop scas cli outsl les inc icebp enter dec add (bad) (bad) (bad) push dec test cli jmp jns in pushf lods and inc jbe adc adc jmp xor addr16 dec sub sti (bad) ljmp imul push xor or in jecxz imul rcrl (bad) (bad) fcomip scas sarb mov push push jp jg outsb aas sbb das rol xchg les (bad) (bad) jmp rorb iret and addr16 push push imul or mov aas cmp ss bound jle clc push movsb test mov xchg (bad) or push std ret psrlw stos dec (bad) cmpsl mov mov (bad) mov pop inc sub mov insl or roll aam jge scas std mov in (bad) (bad) incl outsl je and xchg icebp xor (bad) mov dec push dec mov test cld (bad) (bad) call mov lahf push push (bad) pop inc mov mov pop (bad) pushw cltd xor imul pushl push push das adc loope or or mov and sahf (bad) (bad) (bad) call push xor movsl xchg and pop xchg jecxz aaa or popa nop dec add nop neg loope add (bad) std stos js cltd pop add insl aaa (bad) pop cmp popf pop aad xchg call bound (bad) call (bad) hlt sti and shrb add mov xchg insl or ffreep dec (bad) (bad) (bad) jg insl jnp movsl rolb inc call add xchg fwait in pushf sbb pop ljmp (bad) (bad) (bad) incl pop cs loop mov icebp in bound and bnd jl (bad) ljmp clc rolb xchg add pop sbb add or shrb std (bad) (bad) in mov xchg mov push add (bad) bound push inc mov mov idivb scas (bad) ljmp mov bound bound adc stc pop aad (bad) (bad) (bad) decl and dec lea push xchg js add movsb add jne in cmp mov mov or pop mov lret xor and std (bad) (bad) jmp mov or testb dec xor cvtps2pi int3 cmpsl or gs adc pop pop mov push pop outsb in fwait dec repnz xchg adc (bad) incl fs (bad) out lods lds test jne (bad) (bad) (bad) incl shrb cltd xchg cmp dec mov add (bad) lea (bad) (bad) (bad) (bad) call repnz and ss mov pop aam loop repz ljmp or push sahf movsl add mov sub (bad) (bad) jg jmp cmc inc cs rolb in pop in xchg add (bad) (bad) jmp popf adc addr16 rolb ljmp xor and (bad) decl mov mov cltd and sbb std push (bad) mov repz (bad) mov mov (bad) sbb out jmp adc cwtl lret sbb (bad) mov xchg mov cmp mov nop jne pusha mov (bad) (bad) in test add (bad) xor mov pop add scas mov (bad) (bad) incl mov pop and inc push popf outsl test fimul cli rcll (bad) (bad) (bad) jmp pop int cmc pop imul pop xchg fisub and ret rcr aas adc (bad) (bad) (bad) fstpl lret adc imul mov in mov mov movl push add shll (bad) pop jl xor cmc add addl lock jecxz or (bad) (bad) jmp inc jo add out in mov sbb fmul xchg xchg hlt insl stos lods pop mov (bad) mov js scas loop iret xorl (bad) (bad) (bad) pushl insl dec cmp stos cmp mov push outsb ror ljmp push mov pavgw sub add (bad) (bad) incl gs loop pop aaa rclb imul adc lahf xor and xchg cs mov pop (bad) in (bad) dec aaa leave pop inc mov repnz in pop or push or cmp lock pushl jae inc sbb out stos adc insb push lahf call inc aam (bad) je mov (bad) adc push mov adc xor cwtl fildll sub (bad) (bad) ljmp stos push xor inc js (bad) aaa or xchg mov cmp xchg out sub (bad) (bad) (bad) jmp push (bad) cmp popa add jo les jae mov ret mov (bad) (bad) (bad) jp orl push cli mov ret int3 mov xchg jge and inc js arpl or loop ss dec ficoml mov imul sti pop adc (bad) jmp xchg inc int3 icebp fwait fs jnp lods dec cmc dec outsl fsubrs scas pop sub das cli mov outsb cmp divl popf mov (bad) (bad) lcall in xchg push fwait push jmp (bad) xchg shrl test cmp ret dec (bad) (bad) (bad) (bad) mov movsb mov and sti shlb ds std sarb cmp mov hlt inc (bad) (bad) (bad) (bad) fsubs jecxz mov lds aam test push fsubrp jne (bad) out cmc push add (bad) (bad) incl aam mov jnp outsl add test jl sub (bad) mov cmpsb push add mov pop cmp data16 jl (bad) sub push (bad) incl aaa or inc test jae out cmpsb lcall aas stos ljmp jmp lret mov fwait jae sub ficoml ds sbb add sbb movsb shl ret mov mov fs push or dec mov add ds jno loopne (bad) jbe insb push out in push (bad) (bad) (bad) out mov mov ror add mov sub xchg xor leave sbb in lock xchg (bad) (bad) (bad) (bad) ds sbb or inc mov mov pop popa sub sahf call push icebp icebp add jg das clc jns pop leave dec test push jmp push mov (bad) loop (bad) push mov cmp adc adc ljmp jno (bad) xor (bad) decl shrb int and adc and adc test jg imul jo cld pop jle pop dec cmp add stc (bad) push dec test aaa loop mov sarb and xchg cli dec mov xchg or jmp add (bad) jmp imul jp adc pushl adc mov mov adc push jg sub sbb fsin fcomip jmp bound hlt xor and jo es (bad) (bad) ljmp sub fwait sbb jecxz cs cli out sbb imul cmp jmp insl ret or cmpsl sbb ss (bad) (bad) jmp pop aas jg (bad) pushl stc cmpsl cmp mov outsl mov and sbb jo cmp lcall ret (bad) clc out ss ret in jp adc repz ret fsubrp mov mov sbb pop adcl adc leave mov mov adc (bad) (bad) dec jbe pop jge imul stos neg mov out int3 xchg mov dec (bad) ljmp out sbb out or xchg jo clc push das mov cmc pop cmp adc (bad) push and adc adc jg std sbb mov decb (bad) call inc or jno push jmp js adcl push mov int3 rclb mov ja mov ja (bad) fild pop cwtl mov dec ss and adc (bad) (bad) (bad) decl push mov sub mov das cld sub dec jno sub or (bad) (bad) (bad) ljmp testb icebp ret push dec or dec add mov mov popf (bad) (bad) lcall outsb push (bad) adc mov push mov inc jge or sbbb (bad) inc mov enter push and fsubs (bad) lock add cmp inc lds call (bad) xor icebp xchg push adc inc lods out inc repz fisubl xchg xor mov mov insl lret jo pop dec mov sub call adc sbb ja mov adc ja mov sbb sub and sbb mov lahf (bad) (bad) (bad) jmp outsb (bad) pop or gs or inc jns je xchg lret lods mov test ljmp rcr cltd xchg enter stc mov xchg aam jnp repnz jnp pop inc outsl (bad) (bad) (bad) cli lcall movsb icebp in mov loopne fadds stos jmp adc ja enter pushl rolb push test das hlt int3 fdivrs dec mov and xor mov dec jnp (bad) mov sahf pop std (bad) push inc (bad) jmp pop dec enter sti ljmp int3 cmp pop leave in lea js rcll mov xchg fwait les lods cli in (bad) (bad) (bad) cli xchg arpl in rorl mov cmp add pusha mov cwtl sbb mov inc movsb (bad) (bad) (bad) pushl mov sbb mov cwtl mov jg (bad) inc mov sbb insl push (bad) (bad) (bad) ljmp inc fbld pushf adc and pop mov leave into dec push clc mov scas pop cmpsl sbb lcall daa and mov hlt pushf loope push sahf out rorl ret mov jmp adc cmpsb adc cltd nopl xor imull xchg sub negl outsb arpl jns (bad) jo out push cmp and cmpsl into testb sub mov cmp sbb mov call mov mov movsl in pavgw (bad) dec test lret xor (bad) cmc cli and cmp idiv (bad) (bad) pushl mov sub sbb mov adc fbstp jle popw (bad) out cli ljmp popa jp dec cmp das and inc loope jae push jnp das sar es mov dec pop pextrw adc imul (bad) (bad) decl jecxz outsb cmp test jecxz add xchg mov jo (bad) call loopne pop aam (bad) and sub push ss mov or jmp lock jp inc inc push pop (bad) adc lock mov xor mov scas out mov mov cmp (bad) (bad) ljmp negb push (bad) test mov icebp dec (bad) in divl (bad) pop adc dec dec ficompl (bad) (bad) (bad) cmp pop mov add insl pop ja inc (bad) xchg dec push mov scas lret jmp mov (bad) add push jno das push rcrb (bad) (bad) (bad) lcall xor ficom xchg cmp mov add std mov loopne enter (bad) (bad) jg mov fs pop xchg in inc jo sub adc fnstcw push pop imul ljmp enter pop dec push mov jnp (bad) mov mov jle push (bad) add clc (bad) push das outsl xor je dec repz (bad) (bad) out loopne ret xchg das (bad) mov in sub fcmovne xor stos cmpl cmpsl clc push mov outsl faddp dec (bad) lock lret imul dec add jnp cmp inc ja jl xchg cmpsb xor mov (bad) ljmp es mov inc in mov int3 push push adc mov insb (bad) (bad) (bad) (bad) (bad) push es mov testl lret es sub popa aaa scas ljmp imul mov (bad) xchg push repz cmp inc add (bad) (bad) (bad) mov pop dec inc mov dec push rorl in mov aam jmp and (bad) (bad) (bad) incl jl cmp xor cwtl push call xor repnz (bad) (bad) (bad) jmp xor outsl movsl lock adc loope cmpsl rcr push ljmp pop sub xor (bad) (bad) (bad) out aas test mov cmpsb mov cld insb ss gs mov mov insb out mov mov inc negb out stos mov mov rorb mov loope adc pop hlt (bad) ljmp xlat aas adc lds xchg into daa and (bad) (bad) (bad) ljmp and rcl lret ds mov cmpsb push push idiv or ret arpl sub lods stos enter (bad) out ret or arpl sub scas xchg jmp ficoml dec (bad) (bad) jmp stc adc inc (bad) pop or adc repz xchg clc clc (bad) je (bad) (bad) (bad) std je xor call pop mov cmp cli int3 sub jecxz xchg add xor imul (bad) (bad) (bad) mov push or gs aas negb add mov jmp movsb xor dec out (bad) (bad) (bad) (bad) cmp xor andb mov adc fimull dec in pop inc sahf daa aaa std (bad) pushl sub pop and cld js addl (bad) lcall (bad) xor pop lahf jp stc les std xchg or popf lahf cli xor (bad) ljmp jne imul int3 das or fdivrl adc (bad) (bad) (bad) lcall insb cmp or out or mov sub rcrb or push xchg fdivr (bad) mov push sub je dec fs hlt xchg mov les adc (bad) (bad) out dec decb imul scas sub hlt xchg lret push fmuls (bad) (bad) (bad) jmp xor lcall inc sti xor xchg adc jecxz ret push ljmp jg (bad) (bad) jmp sbb add pop xchg call add loope (bad) sub (bad) (bad) (bad) std dec and leave rol pop adc jmp (bad) push aad sti mov push inc adc (bad) (bad) jmp clc pop mov imul sbb (bad) ss loope into fst stc leave decl lock mov fnop jl stos aad int dec pushf push and (bad) xchg (bad) (bad) (bad) jmp outsb sbb xor dec arpl xor mov fsubr out les and incl inc aam subl xchg int (bad) xor or xchg fistpl arpl (bad) (bad) (bad) out ds mov dec mov pop inc stos daa in imul lret sti dec int add dec mov outsl fucomp into negb stos aaa jp push add or (bad) lcall pop mov pop push xchg sbb inc in or cmp xor fidivrl (bad) jge push fs cld hlt dec gs inc inc jecxz xor (bad) (bad) lcall inc mov push cwtl fxch insb addr16 inc hlt mov jno jge or lcall cltd or mov js das aam sub out nop ficom (bad) call or pushf push adc dec add cmp std add adc xor in jo adc (bad) (bad) incl cmp push ret ljmp lcall dec push adc in js (bad) decl adc or mov and (bad) jg scas xchg lcall mov jge sub cs mov lds (bad) lcall ds add jo iret pop lds movl (bad) (bad) (bad) call inc movsb imul jecxz mov scas pop pop push jp lds lret rcrl (bad) push sub test jne iret xor std aaa xchg lea (bad) xlat mov jne mov jo mov stc jns enter adc enter addr16 test call es or jmp in addr16 jecxz pop aad add lock inc std jge jecxz xchg jne pop inc icebp mov aaa arpl xchg push jg ljmp push jge clc aad inc sbb ljmp popf fild cld pushl cld out (bad) repz add xor dec sub jl pop xacquire inc mov call push decl push fdivp (bad) xlat scas xchg xchg xlat movsb mov xchg lds (bad) (bad) (bad) mov jbe push stos clc (bad) cwtl imul or sub insb sub sahf cmp (bad) (bad) cmp jnp sahf or xchg sbb insb mov ret dec dec loope jbe xchg es aam popa sub adc (bad) incl jnp sub fsub inc bound and mov lods add pushl imul add sbb jl mov dec mov je (bad) (bad) (bad) jmp test movsb sbb adc bound and pop sub jo mov sti (bad) lcall or clc jbe mov push mov xor xlat int3 (bad) add shr and test insb rcrl iret movzbl fdivrp (bad) (bad) (bad) cmp and (bad) jbe test push mov jno add test jo test jg (bad) (bad) (bad) (bad) jle add jo sbbb mov in adc shrb pop iret flds (bad) (bad) (bad) ljmp pop add mov mov int3 mov icebp xor out cmp (bad) (bad) (bad) dec cmpsb xlat in pop jns mov lret mov das mov addb lret pop (bad) ljmp add inc test cmp jnp psrld pop pushf aam (bad) adc sarl mov add sub jnp sbbl decl sub cld popa dec insb scas jbe push (bad) imulb adc call daa push pop daa cmp (bad) call or aaa loop insl fldt mov sub push adc jmp enter pop in movsl inc fsub outsl adc out es inc lea (bad) decl sbb ja mov rorb loop inc and jmp adc and out push rcll fldt (bad) xor sub (bad) (bad) inc rcll xchg cmp daa jno xchg push jb pop fsubl and xor ds (bad) mov push xor ret jp or mov cmp (bad) stc jle (bad) out pushf add nop lret xchg mov mov repz shrb out out cld (bad) (bad) cli inc pop xchg icebp jbe stos xchg add adc jns cs ja (bad) (bad) lcall repz or out stos pop fistp cld pop dec cs lcall push test cld xchg adc mov in (bad) sbb xchg lds (bad) (bad) dec shll insl sbb jg adc jne add push cmpsb mov xor sbb jg pushl jo or test lods push cmp add (bad) (bad) (bad) incl xor push pusha out sub aas mov xchg push mov mov pop pop jecxz (bad) jg incl pop pop cmp enter sbb push lds lds outsl clc jmp xchg sub fwait js les mov shll call jae cmp pop cmp jp je push imul stos fiaddl mov std (bad) incl jbe cmpl ret dec xchg jo xor insb ljmp xchg dec in mov jae out inc lahf and xchg bound je push mov jl mov movsl or lcall jg aaa (bad) outsl cli stos fidiv test cmpsl and cwtl ds (bad) xchg sbb lret rcll (bad) nop pop xchg push es adc test fisttpl icebp out pop bnd call (bad) (bad) lcall jne mov gs aas cmp cld mov or jae or aaa xor inc dec mov cmpsl jnp jmp mov sub jbe push fiadd mov cmpsb jg xorl cld pop (bad) into mov das sbb sub jg ljmp insl ds mov pop inc push and mov adc mov call adc cmc jo xor inc pop js (bad) mov popa test push mov mov sbb (bad) out xor or dec aam sub jnp pop cmc (bad) out adc push and gs (bad) (bad) (bad) jg insb add nop lds loop push pop push stc xor mov jns aas ljmp xor sub mov out mov cmpsb adcl mov testl (bad) incl in sbb jnp pop xchg aad dec cmp cmp fxam scas cli movsb dec jmp (bad) (bad) lcall ljmp icebp into dec pop xor enter mov xlat (bad) (bad) (bad) fistpll pop push test or cmp iret mov jne xor cmp scas cmp pop jmp fisub enter xor loope aam dec lret jp mov inc pushf enter fwait leave xchg cmp (bad) jmp mov test cmp call repnz push inc xor xor pop call (bad) (bad) incl (bad) or mov cwtl int ja xlat mov (bad) roll inc andb sub cld (bad) (bad) dec cmp in aam adc addr16 inc or or aam mov (bad) mov sbb test loopne inc sbb mov inc incl negb add push iret or dec (bad) (bad) lcall pop and mov fsts (bad) rcrl dec pop (bad) jmp outsb pushf scas loopne lods push inc es movsl mov sarl lret lock outsb mov (bad) decl sbb jecxz adc cmp jp pop mov or lock in imul push outsb call stos mov pop dec mov inc or in xorl pop popf sub (bad) (bad) pushl into cwtl pusha arpl pop mov jmp adc jae test (bad) lcall jge pop hlt jmp fmuls mov xchg xchg xchg loopne std jno push fsub pop mov (bad) (bad) (bad) pushl ja pop add mov jle push daa outsl (bad) dec xchg xor cmp inc pop push popf (bad) fcomip decl mov rclb pushf pop cmp add sar (bad) incl repz adc sbb fisubl inc pop mov scas mov add mov mov lcall leave adc mov call pushf loop xor int3 hlt ret out int cmp jmp outsb (bad) (bad) (bad) pushl pop fisubrl mov inc jbe push fist loopne imul add (bad) jg inc adc rol pop add decb or xlat enter push (bad) stos or jmp inc (bad) mov repnz cmp mov (bad) shlb add dec mov adc adc dec aad bound jne loop cmp mov cmp mov xor imul (bad) (bad) fidiv mov movsl js inc scas inc stc and dec push or in jae (bad) jg inc imul pop iret xlat cltd mov mov mov (bad) (bad) decl in sti dec sbb fmull mov mov bound ret lock (bad) (bad) call rcl sub pop jb js mov pop fdiv je push cmp mov mov (bad) in das xor dec out hlt hlt adc cmpsl divl mov xchg lea push aam ret jg cmp rcrl gs cmpsl xchg jne fdivrp (bad) inc push ja data16 xchg xor int3 in jle mov punpckldq repnz and (bad) (bad) call mov inc jle test pop sub sub push mov lods cmp inc mov (bad) (bad) (bad) aas xchg repnz (bad) (bad) cli xchg push aam adc mov jmp (bad) (bad) ljmp insb ds cmpsl cltd or xor adc mov xor in sahf aaa xor (bad) (bad) (bad) call add into movsl xchg pop fxch adc enter loopne loopne adc and ljmp adc fwait mov (bad) call scas (bad) xor std mov clc cltd icebp (bad) (bad) (bad) call sub xor xor je mov cld push cmp and jle stc sub mov (bad) (bad) decl jle jae cmp push cmp dec mov jp push mov xchg or jno sub call sbbl std popf pop mov or sub les aad call cmc in scas cmp mov into mov mov sbb pop hlt xchg imul rorl leave dec add cltd pop and rcr (bad) (bad) call fdivs loop pop repz int3 (bad) jae das les push (bad) lcall out insb xor (bad) insl and jp inc clc (bad) (bad) push loopne fiadd cmp inc xchg add loopne xor in cs pop (bad) (bad) incl (bad) test fcoml mov pusha test cmc (bad) (bad) (bad) pushl orb cmc in jl push lret inc movsl mov mov mov es cwtl and inc (bad) ljmp xor loopne cmp je in sbb lret iret nop push sti movsb push inc (bad) decl pop push mov xadd mov addr16 add xchg dec (bad) (bad) (bad) jmp sbb dec lcall (bad) cmp pop insl scas mov loope mov mov (bad) (bad) incl pop push leave inc sub cld out push mov cmp pusha outsb sbb shl je mov insb mov addr16 (bad) clc adc cmp (bad) call sahf adc repz imull mov ljmp scas pop lods mov lock (bad) (bad) jnp fisttpl (bad) rep lcall or add ds and (bad) (bad) decl dec dec je mov sbb int dec loope dec scas jp mov sbb stos cld (bad) lcall lds xchg loope cwtl cmp mov int3 shll popf pop jbe fnsave xchg daa incl sub js mov mov stos jmp add mov (bad) (bad) (bad) jl pop mov push jb adc mov clc sbb fsts inc dec lea (bad) dec push jp xchg sub ljmp cwtl pop lahf cmp out in and aam fisubr fsubrl std mov ljmp xor data16 xchg mov (bad) ljmp or sti xor aad icebp (bad) cs jge mov mov (bad) (bad) (bad) fildll xchg xchg adc out rcll dec dec jmp rorb test adc pop pop (bad) mov out inc xor (bad) and xchg shll test (bad) (bad) decl sub inc (bad) (bad) popf mov dec mov pop mov popf (bad) (bad) (bad) call iret ljmp outsb aam in clc jl test add arpl mov (bad) (bad) incl jge ljmp dec push ljmp popa mov mov imulb lcall pushf xor mov into ljmp sbb (bad) gs addb insl js (bad) (bad) lcall push pop mov (bad) lcall inc and mov insb js sbb iret (bad) (bad) (bad) lcall mov mov dec sub movsb adc dec nop sub aam insb leave cmp (bad) (bad) call sub inc lds ds adcb jae lahf imul jbe inc cmpsb (bad) (bad) (bad) ljmp pop and sbb sub pop xor mov xor push inc mov clc xlat mov push mov (bad) lcall out or dec jmp add faddp pop push cmp sub jbe and (bad) pushl jmp lcall lods or test subb (bad) (bad) ljmp leave jl push fisttpll mov sbb shrl mov mov pop pop dec mov mov push aaa jb lock lock vaddsubps stos jecxz inc (bad) (bad) (bad) decl mov cmp in roll push push cmp lahf ja sub (bad) mov inc faddp and (bad) (bad) push imul jae xchg jns aaa push inc fstpl fcmovne bnd popf repnz (bad) (bad) pushl cli and (bad) rorl pop outsb int xchg jmp cmpsl outsl (bad) jg ljmp popf sub mov cltd mov mov iret and and inc pop sar incl mov xchg mov movsl incl data16 push jge mov (bad) (bad) decl into pop mov jl loope and sarl dec arpl mov decl and sub pop insb out mov dec push xor mov movsl inc push inc mov test call bound into rcr je cmp xchg (bad) (bad) incl hlt sbb sub scas mov adc push outsl xlat and dec pop (bad) (bad) (bad) jmp mov (bad) setb js push movsb cltd push push xor enter loop xlat jbe (bad) (bad) (bad) (bad) jmp sub roll sbb movsw push sub imul (bad) ljmp cmp mov cmp cmp cli stc dec loope jmp daa (bad) (bad) cmp fcoms mov cmp dec xchg mov (bad) (bad) jg bnd int loopne lret jp cli (bad) scas xchg pop ds repz push in enter mov (bad) (bad) (bad) lcall aad js scas ss iret lcall (bad) push push and dec leave push sbb xor jge (bad) (bad) (bad) (bad) fistp jle mov jp add cmp call sbb pushf and mov add sbb jmp inc aam aas (bad) (bad) (bad) dec xor fsub (bad) xor dec rcll mov push mov (bad) imulb mov (bad) rep sahf cs pushf stos pop cmp pop mov jns fwait add jo cltd pop cmp fiadd fcomip (bad) incl cld cld mov clc inc rcrl push and lock jecxz into cs (bad) (bad) (bad) js ja (bad) popa cmp movsb rcll call stc cmp clc mov pop (bad) call std cmp aas pop movsb xchg outsb ret jae and pushf cs jl adc lock incl repnz fs lods pop cmp xor loope sub (bad) (bad) call pop jb or adc aad repz out stc mov adc mov pushl and and jnp mov je and push pop cmp lret pop daa in (bad) (bad) (bad) fistpll popa out jno and fwait enter mov xchg add (bad) (bad) (bad) (bad) fistp dec adc dec cmp xchg pop sub mov or pop ljmp (bad) call cs or and xchg out mov add mov fwait push cli lock xor xor fsubr xchg addr16 push pop cmpsl pushl std jmp pop add (bad) pop clc xchg and iret xchg pop or fs (bad) (bad) (bad) (bad) jmp in jle dec into cmc stc nop add inc push pop sbb cmp push mov aam (bad) (bad) ljmp rcrl scas jge insb jge mov and jmp adc sub (bad) decl loop and add int3 lret add shll adc xchg fcoml lock (bad) mov ret sbbb lea or and popf lcall xor add pop dec pop dec aam imul jle add in nop add xor jg je push ds mov xchg sbb xor imul lock fdivrp sbb loop or xor (bad) ljmp adc or pop jae jns xchg sbb dec bound stos negl (bad) (bad) (bad) decl enter ljmp pop dec pushf add mov out xor das sar mov dec (bad) mov xchg fdivrp mov xor (bad) (bad) jg fidivrl adc je xor mov add (bad) fmull pop sar incl outsl cmp jmp jge or loop or mov cmp test mov and cmp (bad) (bad) ljmp fdivs mov fs add pop hlt mov imul ljmp dec cld or lods push aad in jae pop mov pushl (bad) repz mov shl std push push mov mov mov adc and (bad) fstpt insb into out lahf xor test cmp les (bad) out adc mov pop aam ja stos mov fdivr (bad) (bad) push dec pop inc xor xor dec cmp dec sub andl ss mov push je mov lods (bad) (bad) (bad) dec lahf cmp pop in iret sub and xlat in push movl (bad) (bad) (bad) lcall shr fdivl and (bad) mov fidivr sbb dec pop cmp add fcomip les push push mov movsl pop cmp cwtl shrb shl xchg sub dec sub aaa into or in add add mov ds fild push imul xchg xchg fdivrp jbe gs jecxz sarb cmpsb pop push dec cmp ds xor and (bad) (bad) pushl adc test xchg in push inc (bad) sub sub inc ljmp incl jge jnp or lods jnp and add imul mov gs mov shl sub jne in sub mov (bad) dec add test (bad) jecxz fidiv setl mov jp movsl loopne jp xor inc sub or xchg sbb (bad) (bad) (bad) call outsb pushf jl repnz fwait sub xchg dec rcl sbb aas stos movsb inc mov test call pushl xchg or cmp jo scas sbb sti div (bad) sbb mov xchg mov sub test shll add pop add mov mov ss (bad) (bad) call cli pop lret sahf sbb mov pop test cwtl sbbl out xchg push std lcall add sbb mov jl or (bad) (bad) lcall imul mov mov add dec jns (bad) (bad) (bad) decl clc shrb or mov xor xchg sbb bound dec dec mov (bad) (bad) jmp pop push add and iret in out and mov dec add jmp sti int3 dec (bad) incl xlat loope and mov push inc mov fcmovnu push daa movsb (bad) (bad) (bad) lcall xchg out and outsb mov aad imul lahf (bad) xor (bad) (bad) jmp aaa mov adc jge pop mov inc shrb jae rcrl mov dec or jbe jae inc shll loope adc lahf in dec adc data16 (bad) (bad) (bad) push and adc rcll push jb and jg mov in ret or inc popf loop (bad) jmp lahf cmovo jmp jae dec pop sub cmp or orl (bad) mov mov mov mov test sbb sarl call ret fldenv add outsl imul mov xchg js insb adc (bad) (bad) jmp inc pop jo cli lods sub mov cmp loopne sti push cmp sar pushl into cmpsb cmp lret cwtl or mov (bad) jg adc push push jge jns mov jns push insb mov mov mov incl ret mov jge mov jo std dec pushf add inc movsb (bad) and dec pop das decl movsl ljmp xchg je xchg pop shrl pop es (bad) xor incl clc loopne cmp lret les in scas push inc sti (bad) (bad) (bad) (bad) fidivr jbe imulb popl mov cmp test sahf imul aad fldln2 mov adc scas rorb push push mov adc adc das test (bad) (bad) (bad) jmp mov sub xchg mov outsb push (bad) out popa cmp inc mov fidivr sbb (bad) pushl mov arpl ss pusha sub dec call push das pop (bad) sub push es stos dec mov add mov push je lcall mov fiadd sub (bad) decl jne ss lret das gs lock ljmp push jg xlat in fwait out sbb ret cld jne leave notb out fldenv out add ds out inc push icebp subl cmp (bad) jmp std xor jno xor negb xchg mov adc addl dec mov mov clc (bad) (bad) jmp wrmsr and stc sub adc mov cmp out or adc (bad) incl sub lcall mov xchg push nop lret sub (bad) (bad) (bad) (bad) (bad) fwait jbe or add test cmpsl dec dec out lret movsl mov jecxz popf std lods xchg mov ret (bad) incl scas out fimul leave (bad) cs inc pop ret rorb ja adc dec stc (bad) mov dec push sub pushf nop into mov (bad) (bad) (bad) dec or (bad) repnz outsl sub test or cmpsl xorb pop push js adcl sub xor das cmpsb jle test inc lcall (bad) (bad) (bad) call jns mov sub pop ror or and push mov jb pop cli inc xchg mov push aas in mov jp xchg das shl cmp mov push pop push sub imul pop (bad) (bad) out andb lds lock push shrl rcrl (bad) push pop scas cmp or mov iret in andb std rorb mov dec scas (bad) daa mov (bad) (bad) mov sub (bad) sbb fisubl jge xchg sti mov (bad) (bad) push and bound cmc xchg push test xchg and cld ret jo sub cld jmp std mov mov pop fs push ljmp leave cwtl sbb jo xchg lods mov daa mov and adc (bad) (bad) jmp pop lahf cmp xor (bad) mov sti pop push adc xor cmp (bad) (bad) ljmp arpl or inc xlat or into negl xchg aad add enter mov fild (bad) iret mov fildl jmp xor jg sub test (bad) incl jl inc stos loop clc jb jmp (bad) xor imul mov add pop dec and cltd pop out sub scas inc sbb pop and int scas repnz sarl (bad) out negb lahf mov add mov ficomp movl push cmp mov dec (bad) (bad) (bad) fist popf push test mov int popl pushf cmp sbb jmp cmp adc or mov je sbb sub mov ds push cmp fcomps imulb xor (bad) call in xor fadds fxtract or push cmp pop shl push adc cwtl or (bad) jmp insl ljmp inc sbb out cmpb insl lea xchg fildll cmp cmp and cwtl dec imul test (bad) jg (bad) jbe lods jl fisttpl scas (bad) popf fidivr sti pop test adc xor (bad) (bad) mov xlat lds mov pop out xchg and add sub (bad) (bad) mov cld sbbb ret cmp into js push cwtl jbe stos jb (bad) incl enter lds inc je push int cwtl aaa cmp (bad) lcall mov call and outsb adc cmpsb inc iret inc mov adc (bad) pushf inc cmc push test pop in sub xchg (bad) xor in pop mov add (bad) ljmp pop daa and mov pop jp mov andb jbe xchg test sub or mov push push xchg jecxz cld jnp (bad) xor and (bad) call cmp fsubs mov loopne fldt jl jp fdivrs rcll movsb lret dec jg inc xor push (bad) (bad) lcall xor mov aam in xchg loopne loop mov push xchg std in clc cmp loop scas xor sub jnp cmc mov stos mov fs (bad) lcall pop push lcall fidivr insl jne icebp or add test (bad) (bad) (bad) pop push roll (bad) inc add mov pop sub rolb sti or jg std mov cli hlt push add dec lahf mov pop or es adc mov ljmp jg out pop sub or jno sbb pop pop mov outsl add pop fbstp or pop lock adc jl,pt and popf mov (bad) (bad) decl jl mov cmp sub sub sbb movsb (bad) (bad) mov add mov sbb lahf pop call (bad) mov add push sub pusha sub aam xorl mov add jnp mov push rcrb (bad) ljmp (bad) jbe ss mov test loopne jmp xchg jg test addl (bad) pushl inc fs cmp insb jge xchg pop insb sarb mov sbbb (bad) (bad) (bad) ljmp out addr16 (bad) or gs outsl mov ja mov jg cmc xor sub adc jl aas inc xchg mov dec add mov ljmp add bound (bad) (bad) (bad) (bad) cmp dec enter out into jno pop jo outsb inc pop mov fsubs or ljmp adc ds inc hlt and (bad) in out aam clc inc fsubrs (bad) ljmp add xor (bad) jp mov call and sub fwait or outsb pop aas (bad) (bad) (bad) (bad) aas dec dec sbb sub mov mov xor and mov add fidivr (bad) (bad) inc mov mov inc cmp xor inc es test pop xor (bad) mov (bad) jg xchg xor xchg pop or das mov pusha out cmp leave pop pop jg push push lcall (bad) or xlat outsl cwtl and mov inc inc sub js ret fdivs mov arpl sub pop std (bad) (bad) in push scas insl or pop xchg xchg inc xchg sub adc movsb pop test sub (bad) (bad) call adc scas mov cmp mov psubw jb dec dec xor test inc fnstenv (bad) (bad) call pop fsubr fiadd sub icebp inc add jbe jbe fs hlt outsl es repnz inc cmc xchg adc cli pop das loop (bad) (bad) fist sub sbb jge pusha lods imul das rol mov (bad) (bad) mov sbb in add adc mov push add (bad) incl push stos and xchg and or or or aaa cmp (bad) lcall mov scas std inc enter (bad) jns dec jns ret or jno (bad) (bad) (bad) (bad) out pop (bad) xor or imul cmp add xor (bad) (bad) (bad) jg inc in pop or sbb lcall int3 lahf push mov inc sbbl jg pushl hlt jmp (bad) into xlat xchg jbe arpl cmc mov aaa pop mov pushl (bad) lcall xchg cltd iret decb push clc xor pop dec mov cmp insl xor aas cmp and repnz (bad) pop and fcomip lcall mov ror and shr mov (bad) (bad) decl inc cmpsb pop xchg sbb lods hlt lret mov pop repnz arpl outsl mov movsl pop xchg dec cwtl mov add sahf in imul (bad) lcall roll fisubl fcoml dec (bad) fwait xchg icebp jg addr16 pop sub (bad) (bad) incl xlat iret pusha mov addl addr16 push push push pushf push outsl (bad) inc pop sub dec clc (bad) (bad) (bad) mov fistl adc rcl cmp fs adc loopne leave (bad) (bad) (bad) out in and (bad) roll ss xchg mov in (bad) (bad) mov mov lods adc push (bad) push shrl jl (bad) mov adcl aaa stos call sti or jne add test mov (bad) (bad) jmp cmp xchg fs jne pop inc (bad) mov mov stos outsb movsl lret ja stos xorl (bad) (bad) jmp add mov add shrb aaa cli adc test adc out mov loop cs cmp push bound or or sbb popa inc push (bad) out arpl lret mov mov mov das clc (bad) ljmp jns mov insb in jp enter icebp add and mov mov mov cmp (bad) (bad) (bad) decl notl fs out sahf lods inc sbb xor and cmpsl xchg and sbb pop (bad) (bad) (bad) (bad) cmp sub repnz in in mov fsubl mov (bad) (bad) lcall inc sti aam or mov and mov push shll cmp (bad) (bad) (bad) out cmpsb pop stc mov pop outsb test pusha xor sbb inc adc push and js pcmpeqd mov (bad) fldt (bad) and fistpl popa ja int (bad) test mov xchg push add pop cld pop jle test or xchg lods fimul xor (bad) xor and mov shlb pop popa imul sbb jnp (bad) (bad) (bad) jmp mov cmp daa pushf (bad) xor xlat ret sub clc sub andl mov jg shrl xchg int inc test insb cli test aad or and insl pusha fcomip (bad) dec cwtl sarb rorb mov cmp push call (bad) or lahf ds (bad) (bad) incl xor sub xor (bad) enter sbb jmp in fs mov ljmp mov bound insb test pop fs push addr16 or or outsl mov sub xchg adc hlt call cmc (bad) call mov push popa push popf pop inc icebp push pop mov pushf lods mov (bad) fisttp cmp mov lahf xor lea rcll mov lcall xor xor outsl mov fmull sbb add shll (bad) (bad) pushl sbb pop stos or sub icebp (bad) jbe xchg or xlat mov mov arpl mov (bad) jmp pop jno xchg (bad) mov jle insb dec cltd mov test movsb das sarb or aam xchg fiaddl les popf repz (bad) ljmp shlb lods movb jg movsl pop test dec mov adc mov shrl cltd cmp fadds add mov jp adc icebp mov dec or pop pop mov je dec lds call cwtl dec push icebp je cmp push call and (bad) (bad) (bad) (bad) cld xor push cmpsl adc jle xor inc imul push pushf xchg xchg push mov jge (bad) call insl in jl xor dec push sahf sub imul jg (bad) (bad) (bad) dec scas or xchg mov notb add push stos pop loop add nop jmp inc daa cmc (bad) (bad) (bad) decl arpl popa gs dec loopne xchg xorl xlat cmp cmp incl pop push popa mov dec cld maxps mov cmp out xor jl (bad) jg inc adc adc pop jl xor xchg mov repnz lods (bad) (bad) (bad) call or push scas jns push adc dec inc pop xchg push outsb mov jbe cld (bad) (bad) (bad) call cs push fidivl and mov mov mov stos mov (bad) (bad) (bad) pushl daa adc out mov push aad lcall jae enter fprem (bad) (bad) (bad) mov into sbb xchg xchg sbb call dec xchg (bad) ljmp ret inc sbb sbb mov ljmp cmp lcall pop mov jp sahf mov and loope (bad) (bad) decl mov jno sbb sbb xchg xor es shrl (bad) mov push or cltd fadds add rolb inc cmp pop (bad) (bad) (bad) out fmul test push loopne inc adc or or sbb add (bad) (bad) (bad) (bad) mov pextrw mov mov cld sbbl int popl (bad) (bad) jmp add mov dec mov jno fldl lods xchg mov sbb sub (bad) (bad) dec mov insb or jecxz cwtl outsl andb push cmp jmp mov rcrl (bad) dec dec es ret cld std mov fdivrs push mov cmpsb dec fsubp sbb adc pop cmp sub das (bad) (bad) (bad) (bad) clc xchg xchg cmpsb leave stos fdivrp mov out add lret stos sbb call idiv (bad) (bad) dec pop int3 mov jnp fisub sbb jl call fiaddl sbb idivb (bad) pushl aas xchg pop stos arpl outsl push int inc adc (bad) test out cli movsl pusha test clc (bad) lcall lahf je mov adc lret mov sti (bad) ds pop (bad) (bad) (bad) jmp negl mov (bad) lock popa sub shr in lock mov stos add inc add adcl add movl push std xchg mov loope outsb push and pop imul adc decl fidivr aaa mov and cmp xor (bad) stos (bad) push (bad) (bad) (bad) dec incl mov mov test xor inc jo push test sbb std xor fcomip (bad) jge les push cmpsl mov addr16 ja (bad) fildl push insl and (bad) (bad) (bad) jmp hlt pop xchg jp std fst pusha call push push pop sti mov add insl cmp fdivr (bad) (bad) (bad) cmp divl or add mov rorb lods push dec jecxz mov inc int3 (bad) (bad) mov dec jno mov fcoml sub push sti xor xchg (bad) jg cmpl push decb adc (bad) (bad) incl pop aad jbe in or cmp lret cmpsl movsl inc pop imull jnp xchg (bad) mov cli (bad) (bad) (bad) (bad) sti add or sbb mov cmp dec xor popf xor (bad) fld jo lret jns dec mov mov (bad) (bad) (bad) incl xchg icebp adc fsincos xchg push cmp pop dec and mov cmc (bad) (bad) pushl cmp mov pusha dec cmp rolb and pop adc fist (bad) (bad) lcall outsb subl add cmp adc pushf stc insb inc stos add test and jmp (bad) and insl movsb jno out call outsb pop mov mov sub loop push mov inc test fwait mov (bad) (bad) call cmp adc outsl jo aam fdivs int int sti in (bad) (bad) (bad) inc fwait loope dec aas ds cltd fildl cmp inc sbb mov sahf (bad) movsb sar (bad) (bad) fildll les ret mov int3 mov mov movsl mov jg repnz ljmp inc mov jecxz cmp push fadd fnstenv imul rorl das xchg (bad) (bad) push out inc ljmp mov mov mov punpckhdq sbb cmc (bad) (bad) decl xchg (bad) leave xor and fist mov lods push mov imull xor (bad) incl aam stos cmp (bad) daa mov dec dec (bad) in mov sarl pop outsl sub rcrl jno mov daa mov or (bad) (bad) (bad) jmp cs mov notl dec test sbb inc iret movsb jbe mov pop hlt jne sub repnz inc pop xlat cmp jmp sub lock data16 pop xlat push add incl loop and or aaa pop popa xor stos repnz aad popf inc mov xor rcll sub or lahf mov push mov fs fs push mov dec movsb in inc imul jg js jecxz icebp dec push inc cs (bad) (bad) (bad) lcall or ss pushf dec mov sub inc mov sub mov sub fisttp lcall xor inc loopne lcall (bad) (bad) (bad) decl xor mov call fmull xor add cwtl jle push mov out cli lcall or jb dec gs loop sarb mov (bad) (bad) (bad) aas popa cltd cwtl lahf aam pop scas aaa cmpsb fistl je add clc inc cli movsl ret std (bad) (bad) incl inc mov mov inc mov outsl inc orl and daa loop (bad) (bad) call and bound pop cmp cmpsl cmp out jnp xor cltd push movsl xor lock and (bad) (bad) ljmp std and sub mov mov inc dec mov inc push lock jmp and imul sar and pushl std jg inc mov sub cmp test xchg cmp xor cld (bad) (bad) (bad) jmp lret mov inc stc mov push push (bad) jns insb xor mov mov call jno or imul inc push jle cmpsb lock dec inc sahf inc fdivrp (bad) (bad) pushl iret aad add mov movb ficomp fwait dec pop dec out stos leave (bad) (bad) (bad) fist adc icebp es jb pushf sahf lock mov leave xor xchg insl pop cli mov jp or movsl mov xor dec push sarl aas mov enter mov lret movsl out cli (bad) (bad) jge lret mov fisub add aas cwtl out sub mov cwtl decl and cmc icebp bound mov movsb aaa adc sti rol stc mov mov test push aam xchg and (bad) incl mov imul into testl cs (bad) (bad) (bad) lcall andl ret mov les push icebp pop out adc (bad) (bad) mov clc pushf or add sub push scas add (bad) (bad) jmp mov gs pop or fwait dec pop xor cmc aaa xor gs mov call lods fwait inc out es test int3 flds icebp push ljmp loop cmpsb (bad) stos scas imul scas mov addl xor fimul lcall jge lcall inc cld cmc inc or lret lods inc call rcrb inc (bad) incl mov aad xchg inc sub push ljmp cltd cmc loope (bad) (bad) cmp sbb cmpl mov xor jp mov (bad) mov (bad) in xchg xor or scas cmp mov add fcoml xchg (bad) (bad) (bad) ljmp lds push add push add lea dec xchg (bad) pushl cld out lock repnz loop or out pusha je jmp inc dec mov cmp mov inc adc lret sub or fstl (bad) decl bound xlat adc jbe pop test icebp outsb mov (bad) xor cmp mov nop rcll jae mov push push (bad) (bad) (bad) decl lcall lds mov popf xor and fwait pop loopne daa das mov push push cmp sar call out int3 or inc xchg xor repnz pushf add scas cli (bad) decl push lcall sbb jl push add (bad) (bad) ljmp mov fisttpl jb cmp pop dec scas (bad) lods lock std (bad) (bad) (bad) fimull cmp pop lods (bad) cmpsl mov jp cs int jmp mov push inc (bad) (bad) call shlb sbb dec cld inc mov mov and add xor adc xor call imul mov pusha in lods movb imul (bad) lcall jnp jecxz loopne cmpsl or sub in scas std lret inc popf enter (bad) (bad) call and in xor fistpll cmp cli stos mov clc insl icebp dec icebp mov jne decl (bad) cmpsl out sbb mov push cmpsb lcall mov call adc repz (bad) xor mov out xchg (bad) jae test or (bad) ljmp adc fs lcall cld inc adc cmpsl ret cli clc (bad) (bad) lcall add hlt sbb mov jl mov hlt cltd dec xor sub scas (bad) cmp addr16 (bad) incl jmp sbb aad adc xlat inc leave lods cmc cwtl (bad) jmp icebp scas sbb leave das add jl in lret test adc insl xchg add (bad) xchg lret shrl clc outsb sub fpatan vpunpcklwd in lods mov data16 jle cmpb iret fiadd or ret leave mov sarl mov sbb gs fdivs mov cmpsb xchg clc jns leave stc ror (bad) (bad) (bad) (bad) fbld push add inc push xchg xchg pop (bad) push std andl xor mov (bad) (bad) (bad) inc lahf push sub fcomip jecxz push add (bad) (bad) aaa cmc sahf add cmpsl aam pop aam and add repnz in xchg out mov fwait outsl sbb add inc testl jmp (bad) decl jl in pop sbb pop ss jne cmp fadds out pop pop dec and cli sar (bad) (bad) pushl repnz movsb mov (bad) and push outsb loope and loope cmp fldcw and (bad) decl fnsave xor or sbb push loopne sub lock dec es (bad) dec cmp movsl ret push outsl out sbb cld sub movsb lds (bad) (bad) (bad) inc std push out loop cmp mov push call mov dec adc (bad) cmp hlt inc popf xchg adc div idivb fwait es and pop adc (bad) (bad) incl data16 mov outsb aam add inc test push or jecxz out je sarb (bad) (bad) lcall sbb outsb mov and dec lock mov pop or dec inc jge (bad) (bad) (bad) (bad) mov out stos loopne jecxz mov and out xor aaa mov jbe loop icebp call ja (bad) inc or data16 dec ja std int (bad) (bad) mov xchg pop imul ljmp mov push xchg outsl hlt dec xor jmp adc pusha jl pop (bad) or and hlt pop sub (bad) (bad) (bad) mov mov jecxz repz mov movsl or xchg iret adc pop cld incl mov das jg (bad) jno cmc fisttpll and push insb icebp fadd out inc pop push jecxz (bad) (bad) ljmp popa jmp pushf loop fs lahf or push mov mov sub add cli popa adc mov inc fstpl loope push adc jecxz es test mov lea pusha xor (bad) ljmp mov jmp mov xchg stc xchg mov jg setnp fs out testb (bad) (bad) (bad) lcall in mov xor inc shrb fwait pop mov (bad) adc pop or aad adc dec test mov lea dec ret std xchg cld icebp dec sub mov sahf pop out aaa push xor adc mov sti jle (bad) jmp in div in or test inc pop mov (bad) (bad) jg pop in sub cli mov or test (bad) cmpsl mov and xchg inc nop mov inc loop fdivrl ljmp push popa jmp dec jo and push add sub (bad) (bad) (bad) ljmp sbb clc mov mov jl or mov jne mov outsl (bad) (bad) decl mov inc ja cmp add sub xchg add xlat mov scas aad dec sar jnp cmp push lds sbb and (bad) pushl cmp enter (bad) mov jne (bad) fwait mov aaa push mov fld (bad) (bad) (bad) (bad) mov btc out cmp push fsubl fwait hlt xor or jp push lcall call int3 cmc adc cld cmp repz cli adc iret shll adc jne cmp add mov mov dec mov popa (bad) (bad) (bad) dec mov test in mov (bad) cmpsb jb or popa stc mov sbb mov popa inc xor jb xchg (bad) outsl cs lock or (bad) push fbld or sbb popf in inc jbe cli das (bad) (bad) (bad) jmp add repnz arpl negl push cmpsb inc sbb ds inc iret pop push (bad) mov sub jp push outsl out sahf mov cmpsb push xchg in or push repz mov xor push (bad) pop dec popf aam xchg dec (bad) icebp repnz mov sbb jg decl add mov adc addl (bad) (bad) pushl jge mov mov xor js or dec movsb or dec pop sbb ljmp into cmp scas fwait sub jle lods lahf lret sbb (bad) (bad) (bad) fstpt jno mov mov sub lock shrb imul mov incl pop stc push std pop das pusha outsb jp add sbb cmc push ja sub call (bad) (bad) (bad) (bad) fidivr jns mull ja pop outsb mov insb mov jmp jb xor (bad) (bad) (bad) incl mov ret addl subl xchg jae mov xchg jecxz pushf jge (bad) (bad) pushl sti hlt je sahf fs push (bad) push adc js int3 dec xor insl cmp testb sub push or dec ret mov aaa test (bad) call sub mov mov inc and es pop and push dec xor out out insb sub cs mov jge (bad) cltd sub ret call (bad) decl adc mov mov inc inc test movl push pop inc popf xor jno aas cmpsb sub ret or sbb (bad) (bad) (bad) incl mov aad and dec in jns jb xor clc mov (bad) (bad) (bad) (bad) jl jmp sbb xor xchg insl mov cmp xor negl lcall ja inc das and fwait and clc ret imul imul out data16 (bad) (bad) (bad) cmp cmp in pop loope je call insl push inc call add (bad) (bad) pushl or mov pop sub fwait (bad) mov insb popl test mov cmp decl adcb push inc jnp or ljmp cmpsb mov mov mov or cmp jecxz and hlt imul in pop mov push jg inc mov stos pop comiss leave push adc (bad) mov push xorl mov outsb xchg mov rcrl movsl pop fwait es (bad) (bad) mov and ror dec cli repz add rcrl mov mov mov cmp test (bad) (bad) (bad) (bad) mov and arpl lret js adc jl and add (bad) (bad) incl jge ds aaa loope pushf push jp dec inc inc sahf pop daa bound pop enter xchg (bad) (bad) (bad) dec add out mov push push lahf fwait or shlb adc push lods outsb sti adc (bad) call je stos arpl dec das in fildl mov lea (bad) (bad) (bad) (bad) stc movsl sub adc push (bad) loopne (bad) in jecxz in repnz mov je inc jge (bad) (bad) call jae mov shrl jl push fisttp aad divb adc bound (bad) (bad) mov mov ret mov mov loope mov rcrb (bad) or cld call aas fsubrl cltd loope push js test bound pop adc mov pushl or jb push sub aad int3 xor mov in push scas mov aas xor push sbb jae (bad) (bad) ljmp mov pop or mov jae fnstsw aaa mov and mov (bad) (bad) (bad) (bad) in inc ja push in mov out sbb xchg mov jmp xor jl adc das clc lcall sub fsubl loope shrb aaa std mov xor (bad) jge mov cmpsl fdivl and and cmc push loopne arpl mov sahf jnp int lds or out fmull (bad) (bad) (bad) (bad) in cmp sbb mov xchg inc or xchg sub cmp inc xchg bnd dec (bad) (bad) lcall bnd rcl mov xor aaa out dec mov push adc les decl nop lret and pop stos xchg inc pop xlat sub outsl xor insb pop out aas cmpsb mov nop or sahf adc (bad) cmp dec rcll mov les dec jg incb adc daa aas stos jae mov cmp xor sbb sahf pop cli jbe or scas in add sbb insl cwtl xchg inc and jg incl cmp leave in xchg (bad) mov outsb cli or xlat sbb pop jae (bad) (bad) incl push ss mov sti jne into rcr push mov stos mov in inc scas icebp rclb adc jo sbb jle (bad) (bad) ljmp fs mov xchg hlt stos jb loopne sbb pop xchg dec mov adc cmpsl pushl inc add mov push rcrb mov sysexit push (bad) (bad) (bad) (bad) mov sbb pop adc pop mov xor dec scas jge sub (bad) incl movsb inc xlat push cmp cli mov and adc (bad) (bad) (bad) (bad) fmuls stc gs ss pop outsb mov rorb sbb dec or call mov ret mov jge push mov xchg pop or fdivr and dec sbb inc fxch lock push les aaa (bad) and jno pushl cmpsl push aad negb pop pop mov adc mov push loope lcall (bad) (bad) std lods stos dec xchg mov mov xchg nop cmp jno mov jge push and clc mov (bad) (bad) ljmp jbe in xor in xchg hlt mov xchg push call ret cmp pusha stos (bad) (bad) (bad) ljmp test mov jbe loopne sti movsl sti sbb push jle popl jp repz js (bad) (bad) (bad) in shr popa adc xor lods xchg jo push call mov pushf lret sub jmp pushl das in and arpl ljmp jmp aaa sbb pop adc push jmp mov push xchg adc (bad) hlt pop sub ja mov pop (bad) (bad) cs loope xorb negb push outsb cmpsl pushl std mov test inc dec scas in xor scas mov (bad) pushl out insb sub dec and pushf push jmp aaa in ljmp (bad) (bad) jg cld mov mov mov flds es and sub arpl jo (bad) (bad) inc inc cmovne in leave repnz dec mov lahf sbb push pop cmp (bad) (bad) (bad) (bad) (bad) jo inc mov mov outsl cmp push loop or push inc mov cmc (bad) lcall dec xchg clc jl (bad) pop insl adc jecxz jb mov or pop mov xchg das add xchg cld push ljmp loopew push (bad) adc add fidivl icebp xchg (bad) ljmp pop fimul mov adc mov ljmp ror inc pop into sti in pop or bnd test pop mov mov mov lcall (bad) or adc push jne ds xlat rep pop (bad) (bad) (bad) incl enter fs test push pop dec fimul scas pusha and xlat push scas dec int xchg (bad) (bad) (bad) ljmp dec insb xor ljmp jo xor sbb mov inc arpl in test sar (bad) (bad) pushl add push sarl decl xchg mov lods (bad) (bad) (bad) ljmp loopne jne cmpsl sti into xor inc xchg std or aas add cmp push lcall dec add (bad) enter pop faddp xchg ja movsl jl push sub inc xor pop push (bad) pushl cld mov and in push mov adc lcall cmp (bad) (bad) ljmp fsubl push lret (bad) cmp jge lret pop decb dec (bad) pop js test adc (bad) mov clc xchg dec lahf push pop jl scas loope mov and das cli dec push dec pop adc jg cmp sbb (bad) jno gs int3 sub (bad) mov xor push inc mov mov mov and lea (bad) imul js cmp add jae jne lea call repnz mov push sub pop cmp inc push xor (bad) (bad) mov icebp je pushf pop lret xor and and mov aas push xor adc inc cmp mov mov (bad) fistl push fwait push cmc sti sbb or mov push nop pop addr16 jp (bad) (bad) jg pop les les dec subl imul cltd pop mov out loopne xchg xor (bad) (bad) ljmp jg and mov dec xchg lcall sub inc test adc je xlat (bad) (bad) jmp les aad popa dec jg mov leave or xchg sub mov lods (bad) (bad) (bad) jg cmp sbb call lods nop add xchg sbb cmp (bad) (bad) (bad) jmp fistpl in cmpsb adc js ss lods je sbb mov imul jecxz cmpsl sbb enter pushf or push loope add into inc push cwtl xor (bad) incl outsl xchg popa mov sbb xchg inc or call cmp push xor cmpsb sbb push (bad) xchg cld jo fdivrs ja pop fdivr add out out cmp outsb in (bad) mov rclb cmpsl or xor and int3 mov stos dec (bad) call cld push inc sub dec pop fsubrl stos pop call mov add loop pusha inc (bad) (bad) (bad) decl aad loopne clc lock adc pop (bad) push mov adc dec sahf addl cmp aam add shll aas mov mov xchg mov stos mov dec nop sbb push and ds xchg pop mov adc pop ffreep mov (bad) (bad) (bad) lcall movzbl sahf push jb iret daa cmp adc dec or add push fcmovbe (bad) (bad) (bad) jmp outsb fcomp jne push cmpsl fmul ja and inc xlat mov test (bad) (bad) (bad) add popa std add mov mov inc shrb ljmp jno mov out daa mov sbb mov test (bad) lcall lahf lods mov lcall icebp lahf bnd jne sub and push pop fwait dec fidivrl ss (bad) (bad) (bad) out ficompl mov or xchg dec add insl je dec and (bad) call and pop or mov pop jge inc sub cltd outsl push ds pop fwait data16 jns das inc xchg mov push sbb inc pusha sarb cmc dec scas mov xchg (bad) pushl rorl jp xor pop clc sub cwtl dec scas inc lds inc sbb (bad) ljmp xor ret stc lds or cmpsl adc (bad) (bad) incl addr16 pop jb andl jg (bad) lock gs jg mov pop adc ss dec xchg mov (bad) fnstenv loopne in cmp mov (bad) ljmp jecxz je inc gs inc jle add push jmp mov mov ljmp pop jecxz andl js les es pop (bad) (bad) (bad) ljmp sbb lods aad iret into mov iret mov movsl push mov pop mov popf cltd xor cltd insl rcrb xchg jmp int cmp aam mov push jl jge sar (bad) (bad) incl adc arpl add cmp insl (bad) mov jl or (bad) (bad) (bad) (bad) out cmc sub pushf sbb lret xchg repz jns xchg leave mov mov and cmpsl ss (bad) (bad) incl fsubs test mov shrb mov stos nop mov (bad) (bad) mov push mov mov ret add xchg pop xor addl lock pop orb pop in jle (bad) out fstl loope mov pop sub add adc push push mov push arpl inc cmp aad jnp shl pushf divb cmp pusha mov aaa fild inc push (bad) (bad) (bad) aas shr cltd rclb xchg mov mov popa adc lcall stos (bad) (bad) (bad) (bad) out jg jl add and add lcall inc out pop push adc js inc ljmp add mov cli inc sti jnp out or movsl pop pop cmpsb mov inc push sbb xchg fbld jo leavew mov cltd xchg pushl fwait pop pop (bad) (bad) (bad) ljmp cmpsb les (bad) mov fadds push jl insb and test mov add add (bad) (bad) (bad) jmp das dec lahf adc push cmpsl sbb add xchg sbb iret adc and (bad) (bad) (bad) mov pusha cmp adc rcl jbe pop repz ds add outsl nop xchg ja (bad) push (bad) not stos dec mov bound imul jle in dec js xchg jecxz push std (bad) pushl and ja mov les xchg stc add stos mov sub cld (bad) incl jge cmovns dec aas cmp ljmp incl lods inc cmpl dec sbb pop ret cltd pop xor (bad) (bad) push fs dec push mov jne xchg incb pop xor mov pusha sub (bad) (bad) (bad) pushl cld mov cld push jno mov xorl or imul adc (bad) fistpll inc mov arpl lret inc push in mov (bad) clc pop pop push cltd std mov repnz (bad) jg dec outsl cwtl aas push inc sub pop movb mov pusha enter daa inc ljmp lcall jg pop xorb repz mov pop setp or push xor mov push xchg jmp mov mov sahf mov jmp jl fild or jne adc ds mov fcmovnu mov dec (bad) (bad) mov add out mov inc sbb daa aas xor push and adc or (bad) mov ss ret mov add ret inc mov jbe fcoml outsb (bad) mov andl inc add fadd stos cmp xchg adcl das (bad) (bad) (bad) decl cmp push stc push popa adc xchg mov ja mov pop inc mov call push cs test sub cmp test xchg pop jl mov pop inc mov scas cli ljmp adc les xchg mov cmpsb fsubrl inc add xor fild sub aad aam (bad) pop mov sti jg lcall adc pop shl xor sub aam or clc mov (bad) ljmp cwtl inc push dec stos sbb cmpsb dec and jge xchg cmpl cwtl pop mov mov (bad) (bad) lcall adc cmp push call dec add lock sbb imul pop imul sbbl scas aas orb dec movsl and pushf test xlat vmovsd (bad) (bad) (bad) fistpl cwtl cmp mov inc cmp (bad) pushl and mov lds icebp pop xlat incl cld cs je pop add enter fcmovnu (bad) loopne (bad) jg push (bad) sub shll mov in rclb enter (bad) mov inc test js (bad) outsb lahf aaa push or test (bad) call adc int push cmp fildl jne lret fisubrl pop les add xchg or jecxz cmpsl loopne xchg mov cmc add les mov (bad) (bad) fstpt out and jnp adc jno jge cld incb mov iret xor ffree pop pop stos (bad) (bad) (bad) (bad) inc rcll fnop ja xchg and cmp adc (bad) loopne adc sbb (bad) (bad) (bad) std addl es sbb js push lahf pop rorb lock (bad) (bad) (bad) decl arpl mov movsb xor loop jp,pt outsl loopne rorl push xchg aam cltd mov (bad) (bad) incl xor push and add (bad) xor stos adc adc fdivr and lret add aas lods movsl aaa dec sub mov pop push dec xchg mov fdivrs dec (bad) cmp sub and dec test dec push ds or hlt ljmp lds cld push push jge or add (bad) lcall mov test xor mov mov (bad) int3 sarb push add inc jo lods in aam ret je lds loope inc out int3 clc out pop (bad) (bad) mov mov mov scas mov mov cltd fs push cmp (bad) call (bad) mov push iret int or mov sub out add test xchg fdivl in (bad) or iret (bad) (bad) (bad) incl mov outsl mov inc fwait pushf test (bad) ljmp ljmp push dec mov lahf push lea mov mov mov and (bad) (bad) jmp out fidiv outsb push orl or push sbb push fucomip leave pop push (bad) (bad) pushl mov mov inc (bad) (bad) and int3 pop mov inc mov pop mov and pop mov mov mov and push (bad) mov jg add push sbb fs mov ljmp clc stos jg xchg hlt cmp (bad) aas lea push in add fdivs add (bad) (bad) decl dec push push rorl daa pop pop xlat jnp cmc jbe fsts xor (bad) (bad) pushl sarb gs inc leave lea mov xor aam cld inc push sbb sbb (bad) mov pop or inc stc or xchg jmp rorb add add (bad) (bad) (bad) jmp xchg rorl pop mov sarb mov cmpsb aaa cld jl xlat jns test pushl jnp pop jl mov or sbb bound insl pushf div (bad) (bad) ljmp or add cli jmp bound fimull push pushf ficomp aas push scas clc (bad) fildll adc (bad) ret stos mov decl cmp loope loop movsl mov (bad) jl sub rorl outsl sahf cmp adc add into jl push popa ss mov adc lcall clc scas in cmpsb int3 jo and dec adc insl cmp cs cmp jae (bad) (bad) jmp int adc pop and mov pop in negb sar test cmp xchg cs cmp pusha jle adc mov push mov dec sbb xor (bad) (bad) pushl idivb add pop js aam ficomp outsb loope ss lock out xchg hlt lret aad es lock nopl (bad) (bad) ljmp jl or insb mov push mov nop sub and in mov xchg (bad) ljmp rolb enter (bad) idivb cmp push lods mov mov cld pop (bad) jmp and push fcomps cmp outsl dec fs (bad) (bad) (bad) dec jp sti pushf cmp xchg push inc cltd mov push jge cmp xor adc inc mov (bad) (bad) (bad) (bad) cld mov sbb (bad) imul xor pop mov pop fs (bad) (bad) (bad) jmp jecxz enter push adc fnstenv push mov fs loope sahf xor (bad) decl pop cmp mov inc incb movsl fsubrl inc sbb jmp mov xor pop sti adc jmp jno xor out sbb pusha (bad) jo fdivs mov lret int (bad) (bad) (bad) jmp out test or xchg movsl cmpsb adc sbb cli sbb insb lds mov (bad) ljmp fcmove mov adc mull imul and or fwait incl repz cmp test call test sbb call adc dec jne nop incb sbb push rcl fcmovb and dec scas lcall incl lods loopne fdiv cs mov sbb icebp pop scas call xor xchg and push push sub lcall mov dec xor das sub (bad) (bad) jmp or imul rorl scas cli cld dec (bad) or (bad) cwtl es jmp ds sbb pop sub into jae xchg jl test (bad) mov jbe inc push xchg cmp xchg ja push clc mov insb clc dec leave and (bad) (bad) (bad) lcall cmp rolb sbb xor inc popf push mov sbb push xor (bad) (bad) (bad) (bad) clc fbstp mov ret cmc xor outsb jge,pt adc cmc mov xor pop jnp lret (bad) xor jo (bad) out popf cmp sub out jge hlt jl hlt cld out iret aaa sahf xchg pop in mov (bad) (bad) (bad) jbe sbb mov mov call or lret mov dec mov out (bad) scas (bad) or mov cmp into jmp (bad) (bad) pushl pushl mov aaa xchg shrl dec (bad) and call inc test into insb sbb call loopne mov add mov fadd and cli dec ljmp mov movsb mov ds push (bad) xchg scas ds (bad) (bad) (bad) jmp xor (bad) fisubrl (bad) imul mov ljmp xchg repz and push sbb (bad) ljmp ret test sub hlt push (bad) mov xor mov jmp scas pop insl lods test push outsl mov test xchg adc movsl dec scas cli (bad) lcall xlat mull pop out mov jecxz adc ja cmp mov xchg jp jp and dec add (bad) out mov (bad) (bad) (bad) (bad) (bad) and in imul lock leave and lea (bad) (bad) ljmp mov add pop das lcall dec mov decl jecxz push dec daa and jmp aam outsl std adc and popf in lods mov sub (bad) dec push jp sahf add mov pop hlt js out test pop sub pop (bad) xor xor xor (bad) xlat push lock (bad) out xchg xchg jge or popa sbb xchg cld out push fs cmpl sbb mov push int3 sahf inc aad xchg jae pop mov test mov imul (bad) incl lods sub ret cli stos aaa lret mov test hlt int dec (bad) jbe jae (bad) repnz (bad) (bad) ljmp fnstsw mov pop pop dec push dec mov les mov cmpsb enter sub (bad) decl in jo out mov jle mov jle adcl (bad) pushl dec cmpsb adc jecxz adc in lret cli dec xchg cmp retw dec sub (bad) (bad) (bad) (bad) mov in stos cli mov cmp mov and lcall (bad) (bad) inc fdivl sub add cwtl ficompl push pop xchg adc fcomi sar jmp and pop push mov repnz push or mov mov (bad) (bad) jmp pop mov jns push (bad) xor jmp jmp mov stc mov (bad) (bad) (bad) pushl data16 and enter cmpsl cwtl in lea add pop std mov lahf test jmp stos mov dec mov aaa xchg dec outsb push mov xor test adc fist push or jle mov push test bndstx mov stos mov cltd pop push das mov sub push js sub push das sub mov rcl (bad) (bad) lcall popa add jno lret add mov adc lods lcall js out (bad) (bad) (bad) (bad) aas sbb push xor sti cs adc dec stc testb call fisubr cltd (bad) (bad) (bad) (bad) jl inc jmp ficomp ret jl add jno and jp push cld leave xor (bad) jg js mov mov sbb add sahf pop mov nop xlat inc in fcompl (bad) (bad) call xchg mov inc fistpll (bad) mov gs pop cmp add gs (bad) (bad) (bad) in xchg pop pop sub push adc xchg mov nop repnz out jge (bad) (bad) (bad) mov jmp adc nop mov lret add lcall mov mov sarb push and outsb pop inc xchg push ljmp xor jp stc leave mov sub mov nop (bad) dec outsb cmp (bad) (bad) cmp pop and dec arpl add mov sub outsb cmpsl js sbb int (bad) (bad) jmp scas mov clc mov sarb jns insl loopne (bad) xor sub jo in fldt in jae push lcall repz hlt loopne (bad) andl pushl mov test cmp rol icebp add xchg test mov jmp out mov (bad) cli jecxz adc scas int3 cmp dec mov sar (bad) mov loope std bound jne scas and in rorb (bad) (bad) (bad) jg jge nop lods fs out xlat lods push sub cmpsl mov lcall push (bad) xrelease mov and sbb jno enter jnp loope (bad) (bad) (bad) pushl into sti push pop and shlb (bad) mov ret cmp push frstor cmp (bad) (bad) (bad) pushl out push cmpl (bad) cmp mov inc movsb or xor inc adc dec out adc jge push lret (bad) das pop adcb repnz test mov insl mov cwtd xor in aad cmp mov sub sub enter xor (bad) (bad) inc out xchg push aaa lret mov sbb cmpsb imul dec or or and (bad) mov dec scas jmp sbb mov stc sub (bad) call add lahf push aam xlat les pop adc notb inc and mov (bad) int pop into test cmp popf outsb mov and lds adc pop xchg (bad) (bad) (bad) inc decb enter xchg mov add and addr16 dec cli xchg jbe fsubr jle push xchg mov sub mov mov stos xchg jbe test cmp loop sbbl popa jbe sbb (bad) jmp hlt dec jae jecxz sbb jmp icebp dec mov (bad) decl or test mov test mov mov (bad) call movsl jne iret inc and pop scas in jge ss (bad) data16 int adc test xchg (bad) (bad) ljmp sub and shr xchg pop lret ljmp pop decl push call sub push or hlt sbb cmpsl out mov inc outsb ljmp (bad) clc xchg jno inc sub fs jle lods xor (bad) (bad) (bad) mov (bad) fwait mov rcl aad test test push mov ss ja jns or pop loopne pop and jne es imul mov imull xchg (bad) mov xlat lret xor fbld jmp pop (bad) cmpsb nop mov sub (bad) mov cmp insl sbb lods mov inc inc sbb ror (bad) mov pushl mov sub in loope mov outsb test mov out fiadd hlt outsl clc lcall xchg inc pushf jnp test (bad) dec pop xchg jae stc pop mov (bad) (bad) (bad) jmp push xchg into push ljmp mov stc and lret arpl sbb xchg (bad) (bad) pushl push cs or push mov pusha sub xchg fwait imul sbb mov jo (bad) (bad) (bad) out cmpsb jmp fldl repnz mov and add inc mov not stc scas aad (bad) (bad) (bad) jmp pop hlt das cwtl hlt and mov xchg inc adc lods jge add xor sbb jnp lock sbb or lods pop sahf and push ds or jb (bad) decl sbb inc or test mov sub mov ret in adc (bad) (bad) pushl sub or inc dec gs in jbe dec (bad) repz je mov cld sub (bad) (bad) (bad) jl ja xor mov out cltd cmp (bad) outsl pop lea (bad) (bad) out clc incl lret and fs jbe xchg and or gs (bad) (bad) (bad) dec dec ds lock pop adc (bad) lret dec mov test jno cmpsb (bad) incl cmp fiadd repz mov fisttpl sbb (bad) rolb mov repnz mov divb jmp push (bad) (bad) (bad) (bad) mov sub bound leave jns sub mov out hlt daa pop mov gs (bad) (bad) (bad) (bad) mov dec aas rorb es (bad) jge mov xchg es jno insb inc (bad) (bad) (bad) (bad) stc inc cltd mov push jecxz xor xor adc sub pop iret (bad) decl stos cmp push add sbb ss jne xchg and (bad) (bad) decl dec jae fisttpll and (bad) xor cmp cmc loop (bad) (bad) jmp stc js xchg insl xor dec dec push pusha loope addr16 push or sub sub outsl clc je jmp mov mov leave (bad) call cmp aaa push pop xor arpl adc and incl inc push jbe aad sub xor jmp out inc hlt mov jle mov hlt lea js lea shlb sbb lock mov mov test fistpll and fidivl add mov (bad) decl (bad) jmp pop mov insl adc nop into jbe jecxz outsb call pop test (bad) (bad) pushl scas jge out repz bound jmp std setnp push aas (bad) hlt in shll sar std incl push sub adc mov push call cs adc jno (bad) (bad) (bad) jmp hlt xor jo pushf sbb or ss fstpl cmpsl popa fs ljmp (bad) test inc fs dec aad adc adcl ficom and repnz mov mov sbb (bad) cmp inc fmull cli adc out lods movsl outsb mov nop xchg mov decl insb lcall xchg xchg hlt mov adc (bad) (bad) (bad) pushl data16 popa icebp fucompp cld es dec mov mov push lock adc ljmp addb les mov and cltd sub (bad) incl add pop mov xchg dec sub pusha dec fiadd (bad) (bad) (bad) clc rcr hlt ss and mov orb out and movsb dec sub (bad) (bad) call lods fwait and sbb dec mov mov insl cmc mov out test (bad) (bad) call sbb cmp idivb push pop inc cli sahf add in and idiv (bad) (bad) call sar mov xchg out sbb pop sub fdivrs jb in cmp shl lahf xor out jne adc cmp sbb jmp (bad) (bad) (bad) inc jge push sbb xor cmpsl je xchg das arpl or test push inc sbb mov (bad) (bad) call jl js es jmp in sub xor dec or xchg (bad) ljmp fwait jle mov (bad) or call std testl add inc sub mulps xchg test aas or (bad) jmp cmpsb stos xchg into sub xchg cmp add lahf mov xchg sar pusha aam iret (bad) mov add xor dec dec outsl push lods int3 mov push cmp mov (bad) in int fwait xor add in das sub pusha fwait loope repnz jns cs jnp push push jg and xlat xchg jno inc lods jbe loopne jmp (bad) (bad) inc cmpsb sbb xor loopne fwait push loopne fcomps inc es stc mov lcall dec std pop inc or outsl jo mov call dec pop data16 mov (bad) (bad) (bad) pushl or test dec cmp pop das mov sub vunpckhps jl fisub inc sbb aaa es jb jg jg cmpsb adc push or dec lods gs out aad jo ss (bad) (bad) lcall and jae mov pop cmp dec pop sbb mov (bad) (bad) (bad) jg pop shrl insb sub xchg les pop mov fildll int sub (bad) (bad) jmp in or repnz add shrb jecxz jne clc mov cmc cmp jno pop loopne lods xor add adc pop lcall or pop cmpsb sbb pop cmc (bad) jmp outsb test adc imul (bad) (bad) jg ljmp sub ret xlat lods sbb dec adc sub jbe out and cld call sbb xchg (bad) outsb notb and or dec popa inc adc (bad) (bad) call out pop cmp icebp shrb sub dec lds lret mov mov (bad) ljmp sub daa clc pop mov test adc inc dec sbb push mov mov hlt sub jecxz mov sub imul push (bad) (bad) call int pop in xchg fnsave aam mov insb jg and fdivrs (bad) (bad) jg cmp adc cmp pop xor test add dec sbb jmp incl cmp imul xchg outsb and mov iret dec fsubrl push xlat sahf (bad) sbb jno cld (bad) (bad) ljmp mov sub sbb xchg xchg enter shl negl pushf mov dec (bad) pushl sub jecxz ljmp jle dec movsb shlb adc sbb clc (bad) (bad) (bad) mov fucomi mov or push push cmpl clc jp cs xchg pop mov cmp (bad) (bad) (bad) decl sbb pop sbb and and mov sbb inc in add fwait cmpsb mov (bad) (bad) (bad) jmp lods lret add cmp imul adcb xlat mov stos or test push call jle das stos stos ja out sti sub scas clc jmp hlt push adc aad xchg test iret pop adc ss std (bad) (bad) (bad) sti mov xchg iret in mov cld cmp xor sub mov inc call adc sahf jae arpl dec inc lret push sti sub mov (bad) (bad) pushl inc and lahf inc xor aaa lcall and sbb or sarb inc adc aad jmp xor xor adc aam in push sbb (bad) (bad) pushl repnz cmp mov fistl xchg sub loope adc xor jno jb outsl clc incl or stc sbb fidiv dec stos push adc insl mov pop (bad) (bad) (bad) (bad) decb fcoms push outsb inc or push rcll es sub inc sub pop push ss (bad) adc pop mov (bad) lcall movsb mov test (bad) dec push cmp decb ficomp mov dec in mov int3 (bad) (bad) (bad) push jmp movl mov rorb insb xchg xchg xor add (bad) (bad) pushl sahf push icebp push jl test je ret out lahf aad mov ja mov scas cli (bad) (bad) out outsb notl mov cmp dec sbb test or aaa cli (bad) (bad) inc sbb lock int loop xor push fucomip idivb mov mov (bad) (bad) ljmp (bad) lret xor xchg (bad) (bad) xor push (bad) popa les (bad) fadds (bad) (bad) (bad) pushl jecxz mov mov xor mov sbb (bad) xchg (bad) (bad) (bad) call repnz sub loopne bound bound pop pop imul test xchg clc or pop adc inc add lcall mov gs int jle sbb (bad) (bad) jmp push mov push cltd cmp inc (bad) icebp sahf stos ss adc dec fisubrl popa dec (bad) (bad) (bad) ljmp jae stos and sbb xor jae mov or fcoml movsl addb (bad) fiaddl dec cmp jmp lret add loopne lds ljmp (bad) (bad) (bad) incl push mov push int3 dec mov and jge dec mov popa dec call cmp (bad) (bad) jmp movsl out mov hlt cmpb outsb mov or jae fwait ret xor fadds (bad) decl adc cmpb lea jo mov pushl adc call push daa cmp and mov add (bad) (bad) (bad) stc mov loopne dec dec mov mov xor inc xchg aam sub jbe dec xchg adc (bad) dec cmp stos iret insl xor pop jle xorl xchg (bad) (bad) (bad) pushl sarl and in rolb loope pop rcr or or (bad) sar (bad) (bad) fisttpl pop push or lahf decb or pop inc repz jmp cs (bad) jne pop arpl (bad) (bad) (bad) pushl loope lret out addb std lcall cmp add cwtl bound stos enter push fwait (bad) push cli les jp divb lods or cmpsl (bad) (bad) (bad) pushl jns lock fistpl pop jmp movsl add mov incl pushl push jge in mov and fstps jb stc or es (bad) (bad) (bad) call and cmc pushf arpl add pop mov movsb mov sbb ret sbbl mov (bad) out clc mov jl les dec xchg fnsave push ljmp (bad) (bad) mov inc push cli xchg jge push xor jno cmpsb pop call (bad) call (bad) (bad) (bad) decl xor into jmp (bad) hlt (bad) xchg and xor pop jp (bad) (bad) jmp loop (bad) repz xor cwtl sbb es std call cld mov cs pushf aaa int3 add sub dec jae push pop dec jmp call scas negl xchg add sbb inc inc pop cwtl imul (bad) ljmp popf and ds sub push rcll lods shrb aad pop push fldl loopne jns js arpl xchg lods sahf xchg (bad) (bad) (bad) (bad) jmp in jno cli xor es out (bad) xchg dec dec movsb fisub add leave cmp (bad) (bad) (bad) ljmp cmp addr16 loopne popa push cmp stc jne les inc adc cmpsl nop leave cmp ret or mov subb pop push dec push (bad) (bad) pushl call inc xor sub test and adc and xlat je (bad) (bad) decl xchg ds jb jl adc and aad and mov (bad) (bad) (bad) pushl outsl push pop pop gs xor inc mov pop push sub into mov add incl and lods adc scas or push dec add xor (bad) incl xchg out lea lret insb mov or push jle out jo (bad) cmp cmp add (bad) (bad) (bad) jp mov cmp jge dec push addr16 popf xlat bswap xor ds and jge cmc (bad) jmp push or jmp aas repnz jbe std or das clc (bad) jmp mov jmp sti jbe xchg inc push sbb loope pop insb mov mov (bad) jmp sub inc shrl sub sbb adc and (bad) call mov dec cmp aaa lods call sbb mov aam (bad) (bad) out nop xchg dec stc (bad) cmpsb gs inc pop pop pop inc pop inc in addr16 and (bad) decl (bad) cmpsb sti je push mov imul push test xchg xchg push int loopne adc imul fsubp xor (bad) int3 fildll pushf rol sub movsb dec (bad) xlat push int sub (bad) mov ss push fsin inc test mov jmp and ret (bad) ljmp jmp movsb data16 push orl sub or pop icebp pop je sbb stos or cmp (bad) out xchg jp movsb sub add xor push loope inc pop out dec inc loope push ss xor sbb (bad) (bad) (bad) lcall subl xor scas push pop outsb nop sub pop lret gs aad into xor or inc xchg jb (bad) (bad) pushl mov mov pop sbb and or mull mov pop jno adc popf test je stos (bad) (bad) (bad) dec or mov lcall fistpl enter fidiv mov cmpw arpl (bad) (bad) call sub cmp xchg ret fisub xchg test pop push pop cmp push cld jmp xchg lret push cmc hlt xchg cwtl les mov out lcall outsl mov imul jg movsb test fdiv add (bad) (bad) (bad) lcall sub mov mov ret or in test cmp rcr mov jge aam aam xor fcomip (bad) incl and xchg jle call adc shlb pop lock imul adc imul test pop sbb sar (bad) (bad) (bad) dec and xor mov mov mov pop subb xchg flds dec mov jg nop or xchg lret xor lahf idivl loop clc (bad) (bad) (bad) mov ss jmp sub (bad) call test in arpl ljmp test arpl sbb mov cltd lahf sbb ja sbb es sti jp fwait (bad) (bad) ljmp dec cs cmp push sbb fidivrl jo sub xor cmc (bad) (bad) decl mov int pop xchg jne pop lock mov sahf inc ffreep aas clc xor dec mov xor addr16 imul (bad) sbb add dec or (bad) out (bad) (bad) pushl cmp mov shrb dec xlat inc or (bad) enter movsb rclb push bnd sar (bad) pushl mov clc jle stos mov push dec loopne pop ret mov cmc es hlt (bad) (bad) jg inc rcrl stos dec test sarl mov sub push scas mov inc sbb gs fistl cmp icebp fdivs movb stc adc clc (bad) (bad) jmp pop movsb mov hlt test xchg sbb fist push lea divl loop (bad) jl sub or outsl loope inc sti push icebp and dec (bad) xchg push dec xchg ds mov test imul mov (bad) decl jne in dec pop push inc ret aam subb adc mov sbb pop loopne lock mov xchg dec and sbb ja jl adc xor (bad) mov mov data16 lds jb imul (bad) pushl std and loopne mov cwtl pop dec out in out sbb mov xor rcrl (bad) (bad) (bad) (bad) cld (bad) cmc loop mov inc push xchg push mov sub xor add jae js push push cmp int mov sahf leave pop bound outsb mov push push xor adc pop out ljmp cli lock das and subl push push cmp push inc and in push fsubrs das sar pushf xchg int or insl or sub pop aam fsubs jae call (bad) (bad) (bad) pushl mov mov les mov and shl int3 repnz dec xor (bad) (bad) (bad) decl inc cmp adc push aad mov fs adc dec add loopne cltd fs repnz pop jecxz sub cmp (bad) (bad) lcall cwtl je and aas bound sbb xchg jge out dec movsl xor inc mov jg (bad) loop xor ret push push out xlat and mov inc or lret ret call pop adc xchg sub dec lock fdivrs imul mov xor dec (bad) notl adc scas dec mov (bad) ljmp pop cmp sub loop movsb cmpsl mov (bad) (bad) pushl enter aaa dec mov xchg int3 or pop rep iret cmpsb inc aad pop adc (bad) (bad) cmp adc pop and inc rorl cli jg jb iret push insb fwait mov pushl adc je cmp push inc lret mov fwait pop adc push sahf dec xchg (bad) ljmp mov or xchg lret xchg stc lcall (bad) decl or jp sub test pusha mov fsubr outsb in add das cli decl fwait pushl sbb test test sub fcomip (bad) (bad) (bad) (bad) jg (bad) incl in jg xor xor lcall mov jp decl std (bad) icebp and mov xchg sbb loop int3 in mov incl enter testb xchg rcrl fisubl and outsl repz (bad) mov jo stc add sub dec js push push (bad) decl (bad) ret (bad) sub sarb or subl loope push outsl or loope shl push bound jle pop mov jno mov jo int mov (bad) (bad) fcomip sar inc sti mov push mov int3 ss cmc cmp mov test cmp (bad) incl sub push add xchg rorb dec fsubl jae mov inc pop stos push popa cwtl (bad) pushl std (bad) xchg mov fs xorl (bad) jmp add or cwtl (bad) (bad) (bad) jmp sahf imul jmp hlt movsb stos inc sub dec arpl fcoml push (bad) jmp add andl (bad) pop mov dec (bad) (bad) (bad) ljmp sbb jbe lods test sub pop cmp cmp xchg mov lcall add xchg or sub loope mov (bad) (bad) (bad) incl adc fwait cld push outsl arpl loope in popf adc inc cmp push cmc xchg sub lods std (bad) (bad) pushl popf out or add xchg daa cltd lods sub cmp flds inc fldl call scas ss xchg add movsl pop mov xchg ljmp cld popa adc icebp pusha jbe mov adcl into and mov lret (bad) (bad) (bad) pushl mov jns imul ret cmc out pop dec pop out (bad) sbb push in mov mov test (bad) (bad) (bad) jle add dec ja cs and sbb xor aam push xchg std sti push or inc cld incl cmc into jo ja lods je add sbb lret (bad) (bad) mov aas fsubrs movsb or pop fisttpll mov jp sub loopne mov subb out les xchg fwait add or dec jle fld xchg cwtl cmp pop jae jbe xor cwtl xor sbb xor sbb (bad) xor inc shll push and mov pushf and sahf xchg sar cmp rcr ja jns scas out jl pop pop out test ds (bad) (bad) (bad) jmp js xchg sbb adc fist mov xchg mov jecxz leave inc lock cmpl fldcw lods xchg xchg enter inc mov or fwait data16 jle cwtl cmp (bad) incl mov push mov rolb int fistl mov xor popa cld call sar lods push or loop (bad) (bad) ljmp xchg into jae and (bad) jmp inc xchg aam shlb (bad) paddw xchg insw sbb ljmp insb test notb pop rcll push sahf xchg pop add adc mov mov rcrl xchg (bad) hlt lret sub aam xchg lcall sbb (bad) (bad) (bad) out addr16 (bad) fimull in pop adc mov int3 or (bad) (bad) jl pop mov (bad) mov push adc inc movsl xchg mov lret pop (bad) (bad) (bad) inc test mov jg sarl sbbl aaa fstl (bad) insb fidivl cmp (bad) (bad) decl aaa sti sub and (bad) hlt lock jo std enter je (bad) (bad) (bad) call popf add int es mov push arpl or or (bad) decl int3 dec mov pop (bad) jae xchg ss inc dec mov test add cmp (bad) (bad) dec imull loope (bad) mov dec jns stc test jnp pop pop push subl aas jle sar (bad) dec cmp call (bad) inc test sbb mov mov mov out repz (bad) (bad) (bad) out fcomps leave sbb mov xor xchg mov inc lahf inc sub sub lret pop push or mov lret push std mov movsb sub shlb (bad) (bad) (bad) call cli dec test and sbb xchg lds lret xor leave push call pop inc sbb (bad) incl shl inc sti mov les clc pop daa (bad) mov outsl cli decl enter mov push dec add test jmp (bad) (bad) (bad) ljmp jp lods sub loop mov stos sbb sbb das mov push jbe jg (bad) (bad) lcall sbb nop scas imul nop push and fimul mov add ljmp sar mov mov xchg cmpsb inc int (bad) fisub dec aas cmpsl push leave (bad) (bad) (bad) jmp fnsave cmp scas pop cld jae pmulhw (bad) mov pusha mov (bad) decl cmpsl jnp push push lock invd ret fwait imul jmp mov (bad) (bad) pushl and cltd jns xor pop push inc adc lods xor xor push cld inc push jmp xchg or into (bad) (bad) (bad) decl or test or je mov popf push and jns fwait inc jb inc nop pop xchg xchg mov pop fistl push mov xor mov hlt mov out xor pop loopne sbb xchg mov cld xchg aam lret (bad) out cli call popf mulb ret adc xor repnz stc pop std jae fsubrs mov sub push out es fstps lds xchg aas push mov (bad) (bad) (bad) jge mov mov out fildll add bound fwait insb test pop std incl sub (bad) adc test and and clc (bad) ficoml cmp mov ja hlt mov lret push test (bad) (bad) jg ds adc fistpll bound icebp movsb mov dec repnz inc in cmp mov fmuls cmp sbb push push jns dec push dec imul cmp and jmp insb imul ficoml nop jo (bad) (bad) (bad) (bad) mov push sub das pop sub icebp (bad) xor ja (bad) xor inc push (bad) (bad) (bad) incl cs icebp push in je in sub aas std cltd loope nop (bad) aad imul cld repnz (bad) (bad) incl jae lods dec add mov inc iret cmpsl in cmp sub mov imul push stos pop adc fidivl ja push fnstsw and shlb aas mov mov pop jne pop cmp mov in (bad) push bswap mov int3 loope insb push mov inc repz call mov lods or and adc lds gs (bad) (bad) (bad) call cli rcll pop popf imul dec mov sbb ret (bad) (bad) ljmp pop add xchg inc sub xor xchg and add les jmp mov bound ret dec data16 push movsb scas push idivl ds (bad) (bad) cmp nop stos pusha mov jge inc jmp jl mov and movsl lret mov mov ds or lds pushf inc mov cltd mov inc cmp or clc call std rclb test fwait lds aad daa sbbl adc (bad) (bad) ljmp fisttpl (bad) xor mov jg add enter loope insl cltd mov addr16 inc lods les loope jmp and nop fisttpll mov ficompl pushl dec jno dec jno in and pop sub je lods in jns inc ss (bad) (bad) (bad) call in or pop add jmp lea mov lret pop cmp (bad) (bad) mov mov dec and fdivrp cmp mov aam (bad) push jecxz aam ret lock (bad) ljmp clc inc mov dec addr16 sub test pop movsb xor pop dec and (bad) (bad) (bad) (bad) decl push scas dec imul or xchg and das dec pop cmp push xlat (bad) (bad) (bad) (bad) lcall das imul push dec les mov fnstenv mov (bad) (bad) jmp (bad) scas shr add xlat je les andl jae icebp and jle push (bad) fnsave insb push or bound add mov mov flds (bad) (bad) (bad) mov bnd imul jo or fiadd (bad) (bad) (bad) call pusha int3 sbb mov ja popf inc mov cmp or adc adc in out add adc sub fisttpll (bad) (bad) (bad) decl cmp sbbl mov xor loope dec adc pop dec (bad) call cld jmp lahf ljmp mov sti outsl icebp mov pop sub loopne (bad) (bad) jns ret das xor pop push inc andb insb insb lahf push add inc mov lea add jo cltd push cmp xchg (bad) incl cltd daa idiv inc scas mov cmp cmc dec xchg imul or fwait add enter xchg out clc insl mov add out mov (bad) cli mov cmpb lahf push mov in ljmp cmp mov jg inc pop or daa cmc or leave popa lret pop pop inc aam (bad) (bad) ljmp rorb pusha sbb sbbb mov mov (bad) incl addr16 fsts aad hlt sub lods std xchg popf std and in (bad) and inc and dec inc or sub cs mov (bad) lcall jmp jno (bad) fcoml adc jnp hlt test jecxz pop dec imul mov aad mov xor cmp fwait out (bad) call loopne cmp sub mov sbb mov das orb iret inc xor dec imulb roll (bad) (bad) (bad) mov pusha xor mov jbe mov enter outsl (bad) jle mov scas (bad) (bad) jmp outsb or dec mov jecxz insl int push xor call lock call cmpsl inc jnp aaa test sub mov mov (bad) (bad) (bad) ljmp test out test scas xchg pop cmp or adc cld inc mov hlt or (bad) decl shrb pop jbe std cmc mov das and inc (bad) (bad) jg mov sub jg pop xor ret cli and incl xor cmp or in xor icebp and xor stos daa sub aad lahf test imul jg mov dec icebp test pmuludq inc mov into movsb movsb mov xor repz (bad) mov inc and mov hlt pushf popa pushf fistl (bad) (bad) (bad) lcall jbe inc out sbb push aad loop (bad) (bad) arpl adc and decl leave mov xchg loope and movsb das cli call dec cld out jge xor jbe cmp mov out jl (bad) (bad) decl ficomp fbstp in repz xchg sbb dec jg mov jb (bad) jg das mov jb lock jbe mov sub mov push fsubl lods popf add call clc pusha popa ss mov (bad) out sub (bad) (bad) (bad) decl lcall scas faddl (bad) js out clc and leave clc adc jle clc (bad) fcomip stos cs mov dec xor adc ljmp (bad) lea push imul jp cli add mov (bad) clc mov push jl lcall ret push mov pop pop push cmp jle jl rorb mov (bad) xor outsl scas lahf fnstsw insl pop mov repnz shrb stos or sub mov in (bad) (bad) (bad) pushl sub in pop mov and (bad) cmp out xor sub andl adc mov cwtl push daa sbb lahf sub rorl cwtl add arpl rolb fnstsw (bad) (bad) (bad) lcall repnz pop daa repz fwait test inc ja aas mov inc push stos jne inc cmpsb mov (bad) (bad) (bad) push cld sub out mov or vmread add jecxz fdivs (bad) (bad) (bad) call jbe aad cmp cmp dec bound and insl mov add imul (bad) jmp mov mov mov dec test popa mov push (bad) (bad) (bad) (bad) ljmp adc imul stc cs icebp cli and xchg clc ljmp xor ja (bad) (bad) (bad) jmp inc xor fimul cltd data16 jmp lret outsb addl push sub or pushl xor push add push sub jg xor loop mov (bad) (bad) (bad) (bad) ljmp in fs sub jbe sti sub gs cwtl ret pop ljmp (bad) (bad) (bad) lcall clc inc insb cmc jg fadd (bad) rorl push inc (bad) cwtl rcl cmp sbb add lea inc mov (bad) (bad) (bad) in ljmp inc or dec je fcmovu push in mov pop arpl add mov out nop (bad) jb adc stos jae cmc inc aad cld call mov mov data16 add (bad) (bad) jmp lret xchg push or sbb shrl jnp into (bad) (bad) mov sbb mov sub (bad) pop pop stos xchg and (bad) (bad) jg test call add subb aas xor pushl cld ljmp aas inc and mov push rorb dec shrb fwait pop lock (bad) in lret adc or jo in adc push mov add inc and (bad) (bad) decl jl popa xchg adc insl mov test mov push mov mov (bad) (bad) jg pop es or lea cmp push (bad) cmp dec adcl out and push jecxz xchg mov cmp mov mov jns xchg mov (bad) (bad) (bad) jg sub jne inc sbb test and enter movsl outsl sahf in ja add mov (bad) (bad) pushl mov add mov loope ret (bad) pop adc cmpsb cmc dec dec mov mov sahf insb xor dec sbb decl out xor push add cmp (bad) fbld sbb das notl arpl cli lcall addl cmc scas mov push mov and pop loop sbb inc pop into icebp ret fsubp lcall xchg (bad) (bad) mov or or push out out aam mov outsl fisttpl (bad) (bad) (bad) jg add ss popa es dec mov mov jb jns movsb or ljmp movsl mov jmp dec add sub jbe mov sbb push lea xchg mov scas dec sbb (bad) (bad) (bad) decl sbb pop cmc push push adc adc cs mov (bad) (bad) incl xchg pop roll and xor js inc push cmovnp (bad) jg (bad) pushl movb std pop add push (bad) scas jbe push and decl jbe fcmove popf stc pop mov xor adc xchg xchg in dec xor popf loop (bad) decl mov aas rclb mov mov das dec outsl adc push (bad) (bad) (bad) mov or subl xchg movsb divb xchg pop xorl ret xor sahf out aas mov push adc or and xchg (bad) (bad) (bad) mov inc loope lcall cmc shl in inc testb insl and nop push dec mov inc and rcrl dec add push out movsb mov pop push adc push jno jo adc (bad) (bad) (bad) call xor inc inc popf or add je push stos mov mov pop fs push (bad) (bad) incl pop fild dec cmpl lret dec (bad) out fnsave iret (bad) mov mov pop and repnz fisubr xchg mov and (bad) (bad) (bad) lcall or adc das rorb inc sahf (bad) idiv popa jns ret ljmp (bad) (bad) (bad) (bad) mov out mov inc ja adc adc scas lret pushf xor aas cmp (bad) shl (bad) decl mov push movsb pushf imul sbb lahf stos daa xor lret jge (bad) (bad) stc mov and sub cmpsb aam jp ret sub (bad) (bad) call into test mov and mov lahf test test push fnstcw xchg push std sbb inc pop dec sbb (bad) cld xlat sub rorl cs mov dec and push sub (bad) fs in push clc (bad) stos pop adc rcrb aad ja cmp insl clc fcomip push std popa shl mov test mov rolb loop idiv (bad) (bad) incl cs cmpl punpcklwd mov aad jno (bad) call cld aas sti popf xchg frndint mov scas cmp popf lods inc inc add and je ret (bad) ljmp jl scas pop ds mov inc aam (bad) cmp sbb mov (bad) cmp (bad) (bad) (bad) dec mov mov cmc and (bad) mov mov sub cmp out out (bad) (bad) mov push push lahf (bad) int js es addr16 lock repz (bad) lcall (bad) movsl add dec pcmpgtd jo inc cltd push decb fiaddl xchg mov pop add aas ret pop xchg fcoml daa mov loopne mov nop imul out aad pop gs lcall push mov lds pop pop jp ficomp jmp push sbb (bad) (bad) jmp cmp mov jnp in mov popf (bad) (bad) inc sub lret jnp loope adc dec mov outsl cli push mov xor sbb (bad) out icebp ja enter (bad) (bad) (bad) (bad) mov mov adc imul les pop (bad) out pop mov mov sahf pop fcom aas int3 push lock xchg cs (bad) xchg idivl mulb loopne (bad) (bad) (bad) in popf xchg sub stos push or pop inc aam push movsb dec into adc out jg inc out inc sub (bad) (bad) (bad) call pushf mov push movsl mov and lret aaa orb mov push push int3 mov xor (bad) (bad) incl mov popf jbe inc aas faddp clc cmpsb repnz data16 repz (bad) jg das imul shrl cs pop jle rol (bad) icebp std push cld (bad) jmp jg,pt movsb sarl mov jbe les add push (bad) fstps sub pushf sbb les es sub daa out push jge mov inc sbb ja sbb ja (bad) jbe pop outsl sbb (bad) repnz (bad) (bad) (bad) out mov push add lods add and rcll mov aas dec (bad) (bad) xor lods push test jle hlt sbb loopne (bad) (bad) (bad) jmp sbb test into mov (bad) jb push call pop (bad) bound fchs (bad) (bad) (bad) in in rcr jmp sbb fdivl and mov btc inc (bad) (bad) call jl sbb mov xor pushl mov inc sbb out dec mov lods fsts (bad) incl sar out insb jb std mov dec inc and (bad) (bad) call pop out dec mov inc dec (bad) sbb sbb adc movsb sti adc decl xchg lret jmp jbe push and and xor push insb sbb (bad) (bad) in addr16 pusha rol scas pop hlt mov sub bound push cmp in mov pop xlat mov popf mov icebp fidivl xchg stos push or cld inc jb dec addr16 outsb ret (bad) (bad) (bad) call push fcoml dec push dec and fistpll mov mov jmp add (bad) push mov cli fisttp fiaddl pop add dec test mov dec data16 jecxz lock mov or sti sarb jg (bad) lcall daa sbb decl test stc hlt fdivs outsl push pop pop and jge jae scas rolb mov dec insl xchg jae add mov lock push aad or and dec xchg subl jg cmpsb pmuludq hlt aaa xor push mov xlat outsb leave lret pop sub cwtl dec (bad) (bad) incl push sbb fistl jl cmp pop pop pop mov (bad) (bad) (bad) jmp ja inc repnz (bad) add dec mov lods lock cmp cmp lcall sub inc or mov push aad arpl orl jo je pusha cwtl xchg mov lods dec les or sbbl gs lcall repz rcrb (bad) (bad) (bad) jg fnsave fisub inc xchg pop add mull xchg aam sub mov (bad) (bad) (bad) incl mov (bad) lret adc jmp inc jb mov or xor dec out (bad) (bad) (bad) (bad) stc push mov (bad) mov into icebp mov mov jecxz into test es (bad) (bad) (bad) call fstpl lret orl shl jl fsubl add mov mov jmp ret rorl pop xor (bad) js cmp ror insl lods mov (bad) (bad) (bad) (bad) cld push arpl adcl or pushf std lcall std push popf pushf ss cmpsb xchg loope cmp (bad) lcall loope fs mov pop call mov lahf xchg stos jle and call in cmp shrb sub push ljmp nop dec inc (bad) (bad) (bad) (bad) pushl (bad) jne fdivrp loope dec call out lea jnp,pt test call cld ljmp jb mov imul out push jns adc aas adc (bad) (bad) (bad) jmp sub fnstenv icebp xchg pusha push int lsl por jg andb das mov dec pop mov cmpsb sbb or loop neg int xchg decl xchg sub pop and iret mov pusha (bad) (bad) (bad) jg add push pop push pop mov mov pop push push jg inc aaa or (bad) into add (bad) (bad) (bad) cli cltd hlt cmp or jae sbb stos push mov pop cmp dec roll int3 sub (bad) (bad) (bad) cld fwait xor sub sar push aam xor enter in xchg mov or xorb (bad) jmp rcrl xor cmpsb push lret mov movsb or stos (bad) (bad) call push ret into lods mov in and insl ds aas in pop repnz decl mov lret or shrl rcr rcl cmove test mov mov leave add mov arpl rcl xor fsubrs cmp dec (bad) out xor lds inc add and push call std jmp adc ja cmpsl sub loop inc repnz out jno (bad) (bad) pushl gs repnz orl mov jmp push dec adc (bad) mov (bad) (bad) (bad) fnop ljmp xor sbb popf cmpb jb xor popf movsb sub and popa cli add cli pushl adc sub fmuls (bad) (bad) (bad) out stos push mov lahf or ds push adc rcr jns pop das cld mov adc (bad) (bad) (bad) (bad) (bad) jne sub mov adc adcl aas out aam cs add mov mov (bad) (bad) fistl jg inc and xlat rcrb outsb loop push jecxz push push test (bad) lcall and mov and adc sub mov cmp add (bad) (bad) ljmp mov adc push fdivr fwait daa inc inc outsl xchg lret sub or (bad) neg hlt (bad) jp pop xchg push push and aad adc int lock push cld jmp test imul cmp out xchg js call jg (bad) (bad) dec adc jae inc (bad) out xor hlt and jns (bad) (bad) (bad) ljmp push mov ds jge push cmc or jnp loope mov ret (bad) call je push xor das rol dec mov xlat lret mov xchg cld jmp cmp cmp sub mov lcall in dec pop xchg in in insb push in inc sub scas jg (bad) cmp int3 insb jmp imul stc and xchg lcall insl aad popa inc add add or loop or lods test ret mov (bad) (bad) (bad) jmp mov enter out xchg xlat das sbb mov arpl and or dec jne cli cmpsb iret aaa addr16 and scas mov push in mov rcl inc mov andb pop (bad) (bad) (bad) pushl imul inc sbb xchg loop inc sub xchg jne (bad) push pop clc call push jg js pop pop push mov je lock (bad) mul iret stos pop jl mov inc xor arpl xchg jo ljmp cli lea jbe scas call cmpsl adc and cmp (bad) ljmp mov cmp and cld lods add mov xchg mov decl sbb jp out add pop aas (bad) (bad) (bad) dec inc pop adc call mov arpl sub and adc cld jmp cs pop jmp xchg dec mov and pop ja (bad) pusha pushf jg sub mov mov xor (bad) inc or lret jo push mov popf adc icebp mov movsl pop sub jl jne imul inc cld lahf (bad) (bad) (bad) jmp mov es mov sub rorl push cmc es and incl mov push test dec (bad) xor mov cmp aaa pop std xor mov fs (bad) lcall xor lods hlt adc dec loope insl cld or mov imul adcb enter repz and xchg sbb sti xchg or xchg aas adc iret call loop push (bad) mov imul les dec mov es (bad) mov xor out add popa push adc dec pop xchg (bad) decl add mov jb pop add sbb lret int dec xlat (bad) cli ss push jnp (bad) pop cld (bad) jmp mov add pop lcall rcll out sub loopne inc or cmp testb xchg (bad) jg ljmp rorl loop fldenv inc push imul mov (bad) (bad) incl fs clc pop xchg or lret daa sub call mov lret dec push insb mov (bad) jmp (bad) pop inc shll cmp adc movsl mov sub (bad) daa sub sbb mov (bad) out sub hlt test mov jge or xchg pop dec (bad) (bad) call jmp mov or adc sahf popa sbb aad cmp repz mov dec sahf loope inc shr loopne push jnp fisubr xchg jno mov imul inc iret (bad) jbe push (bad) (bad) pushl xchg fstps inc insb cmp dec jns xchg repz stc addl (bad) (bad) (bad) (bad) cmp ja mov mov stos and jecxz or outsl jge cmp xchg dec out aaa (bad) (bad) aaa std call and or dec sbb xchg into outsb cmpsl mov sub add push ss jbe ret cli fisub inc mov loopne in call pushl xor sub and clc inc outsb incb adc and push sahf pop or (bad) (bad) (bad) push nop cmovbe pop (bad) lds mov mov mov cmp push call push (bad) (bad) (bad) mov pop push test and mov or cmpxchg (bad) (bad) (bad) call mov xchg fwait enter inc push in sbb add repz (bad) (bad) out mov pop and dec int aaa cs int inc add (bad) (bad) fildll jno cmpsb dec pop xchg mov outsl push stos cmpsl mov hlt mov push dec mov (bad) (bad) (bad) (bad) ljmp call addr16 je repz push xchg scas xor mov insb (bad) (bad) incl sbb mov and cltd (bad) sbb add dec inc paddsb pop fs addr16 push nop pop iret xchg fisubrl mov or add sar (bad) (bad) incl call (bad) ljmp and add lods cs gs (bad) lcall dec leave pop fnop sub dec loop es pusha (bad) jl pop sub (bad) ljmp pusha ret (bad) cmpsl xchg popl outsb inc rol xchg mov pushl (bad) (bad) (bad) lcall imul push inc sbb cli rcll adcb pop xchg dec add (bad) jge inc ret xchg repnz push in loopne (bad) mov test lret jg mov mov cwtl (bad) (bad) (bad) decl dec inc test xchg inc lahf pop push xor xchg mov xchg push mov (bad) jne int call jmp icebp fdivrl xchg aam and mov dec cmp mov mov (bad) decl scas jl mov add or push int3 push test out imul xchg scas push pop (bad) fcomip pushl dec cmp ss jmp cltd pop adc pushf (bad) jge (bad) (bad) lcall data16 adc scas movsl sti cwtl (bad) scas mov sbb or enter movsb cmc mov push fwait jg cmp dec xchg dec mov inc sub inc mov les cmpsl lock out push mov movl lock mov (bad) sub shrl (bad) fstl repz (bad) (bad) ljmp subl pusha inc adcl push aas add add outsl clc lcall pop aaa and add jbe pop sbb sbb sbb push push or gs mov xchg bound pusha xchg mov (bad) push iret (bad) mov xor insb in sbb pop push test andl mov sahf scas jno inc (bad) (bad) (bad) incl loope pop sub dec stos or xchg nop es mov clc inc out (bad) xor sbb nop cltd lock gs stc test push clc movsl adc mov (bad) (bad) (bad) call mov pop pop cwtl fmuls add jl (bad) or mov push testl sti mov aam clc mov jns int bound and cmpsl xchg (bad) (bad) jg out imul cmp mov and loop rorl daa cld sub ss (bad) (bad) incl (bad) pop or sbb test xchg or mov push push out adc xchg mov fnstenv pushl std loopne cmp (bad) out inc push cld mov aad (bad) jmp das (bad) xor dec cli jp push (bad) jmp and leave rcrl out cmp pop jmp (bad) (bad) (bad) inc test pop mov pop lea jle les aas jnp (bad) jmp and (bad) (bad) (bad) pushl stos outsb je repnz pop loopne dec out push ja out lds repz das test pop xor rorl xchg jecxz (bad) jg xor lret xor pop sub data16 cmp (bad) (bad) (bad) (bad) ljmp mull fcmovu or loope mov fisttpll repz out jecxz (bad) mov shrb mov push and ror repz stc add (bad) (bad) (bad) (bad) sti jb jp pop shrl in pop and ja and aas dec int3 or add sahf das mov cld (bad) pushl test push cwtl cmc sub add adc (bad) (bad) (bad) decl sbb daa mov insl push movsb lods stos and aam sar (bad) (bad) (bad) ljmp imul cmp test lods add xchg add sub (bad) (bad) incl (bad) jmp xlat out xor les incb or repnz xchg sub (bad) (bad) lcall leave adc leave xchg mov xor push xchg cmp push loope (bad) jmp shr add sbb and arpl call inc inc lods add aaa std stos add inc movb int3 aas mov xor lcall cs mov divb jne cmp push jb outsb out std out mov aaa sahf (bad) cwtl inc stos cld out in or (bad) (bad) (bad) dec loop out and mov cmc adc imul xor adc mov and inc cli (bad) fcomip push pushf lcall jns fistpll (bad) int3 and jecxz outsl cld sbb (bad) (bad) out mov or dec rol xor data16 xor in and jae or adc stos (bad) (bad) cmp (bad) aam sbb into int3 out add xchg mov inc pushf push (bad) (bad) (bad) (bad) cli stos aam aam decl loopne mov int lods ltr mov dec in leave (bad) lds dec ret cmp das fsubrs inc add ljmp (bad) sarl int movsb inc dec cmpb movsl jne sbb lds hlt and mov (bad) jg and xchg in sub push (bad) divb (bad) nop rclb push dec pmovmskb push sar (bad) (bad) jmp ljmp and leave sahf cmpsl in ss shrl aad sbb pushf insl sbb fidiv (bad) pushl cld fwait cmpsb (bad) test lds mov mov lret fcmovb repz enter jo add (bad) (bad) (bad) lcall lock pop mov sbb xchg mov mov add sbb mov jg cld mov into loope fmul dec or mov test (bad) (bad) call std mov and inc cmp jge and test fild (bad) (bad) (bad) incl cmp push xlat scas adc inc push (bad) xor std inc fwait pop or outsl cmc mov inc data16 fsts (bad) (bad) fucomip mov and inc xchg int arpl xor pop mov (bad) cmc mov and cmp (bad) (bad) decl aad int3 sbb cld adc mov rcll imul nop add cli (bad) (bad) (bad) (bad) cmp or imul adc sbb fnstcw cli inc xchg (bad) (bad) (bad) ljmp mov out dec insl fidiv ret gs mov mov (bad) lcall xchg xlat pop cmp sahf or (bad) xchg (bad) or inc sti mov add (bad) (bad) lcall pop popa cmc dec mov mov insb pop pusha popf xor inc mov outsb ret cmp (bad) (bad) pushl jmp js cmp pop mov imul inc xchg push aam (bad) (bad) (bad) jmp cmp enter push lcall mov lahf mov dec push out loop (bad) (bad) (bad) (bad) js xchg jb mov mov adc pop icebp push out push and pop xchg out adc dec aas xchg iret out (bad) jg mov sbb push neg mov push sub pop mov (bad) (bad) call sbb sbb mov mov std cmp or sub incl out shl fist xor push shll cmc push sub out push jns icebp (bad) (bad) jmp clc mov daa fimul push outsl cmpsb xchg push loope mov sub xchg cli (bad) movsb or xchg (bad) (bad) (bad) incl jae push pusha cmp (bad) jmp mov cmc cmp xor loop mov mov (bad) (bad) (bad) cmp daa mov test sub out fidiv popf adc add fwait (bad) sub cmpsb jne test out xchg inc push mov call hlt or (bad) (bad) call push and cmp dec fxtract imul cwtl fistpll dec fwait push std jg xchg add movsl (bad) sbb sub bound incl loopne enter mov pop cmc mov (bad) (bad) (bad) (bad) cmp push push push jnp jns inc orl xchg inc fcomp fisubr (bad) (bad) (bad) incl movsl call jae in lret into js dec lahf fsubrl xchg dec loop mov hlt jmp xchg mov add bswap fcompl or mov add add xchg push sbb jp xchg das ljmp push test inc data16 test and loope aaa cld stc stos mov sbb int3 mov push sahf fs jb das clc or lods add fcmovnu pop incl fdivl mov sbb and push sarb cmpsb sbb (bad) (bad) (bad) lcall push stc mov push subl or (bad) fsubl sbb stos mov jbe mov push jle (bad) mov cmpsl pushf test inc rorb insl fstpt jmp (bad) decl and popa mov lds xchg push data16 imul (bad) (bad) (bad) decl loope sti xchg int movsb shrl push idivb jbe ret pop mov and (bad) (bad) inc xchg or adc and out mov mov (bad) (bad) incl xchg mov mov jmp jmp pop (bad) (bad) (bad) (bad) out scas inc dec push mov cmc pop lods test test jecxz,pt (bad) jl ror push add (bad) (bad) lcall mov dec clc push jne out test cmp xchg xor (bad) xchg cmp fs mov (bad) (bad) out popa (bad) xchg or nop fimul xchg adc stc mov inc loopne mov (bad) decl jle inc cmp arpl ret pop mov (bad) or insl lcall (bad) (bad) incl mov push push inc fisubr xchg jbe test mov aaa loope xor lock mov adc shl loop movsb scas jecxz sub loope sahf adc or pop (bad) (bad) (bad) call mov mov add sbb outsb adc popa js into adc add ret bound dec sub clc repnz aam pop jns mul jno or rcr (bad) (bad) (bad) dec and mov cmp and arpl loope mov ljmp movl mov xchg xor push jo jbe cmpl cwtl ljmp pop enter jmp (bad) (bad) jg xchg push (bad) dec xchg and pop sti ret pop xor pusha lret mov (bad) (bad) (bad) mov cmp sbb xor mov add xor mov push outsb orb int cli xchg pop dec mov rcll cld xor stos stos cld mov mov fwait cld inc jno loop inc cmp std (bad) (bad) dec ficoml jmp sub dec ja inc xchg popa call adc cmp mov call push fldcw repnz js stos cmp out scas pushf (bad) mov mov pop mov (bad) (bad) cmp jmp jle lods shlb add mov and cld cli mov mov (bad) (bad) (bad) pushl or add push lock lahf dec fmuls stos add cltd leave shr (bad) (bad) decl push dec sub test inc out jmp xchg rcrb aaa in mov pop cmp dec add fildll adc aaa test mov dec mov sub icebp rcl jp (bad) (bad) (bad) decl lods mov insl mov inc jmp sub repnz int3 jge aaa inc clc call sti mov fdiv aad push into pop adc aad (bad) cmp inc (bad) out into (bad) lret ds ljmp jp (bad) mov mov pop pop lahf pop loop in rorl mov sbb (bad) incl repz fisttpll push (bad) (bad) out xor cmp xchg sub (bad) (bad) ljmp adc rorl or xchg mov shl or pop adc (bad) lcall pop cmc aad inc xchg int3 dec out add mov sbb ss jnp adc fisttpll stos mov stos rclb xorl pop clc mov adc xor xor ret adc jbe inc sbb add clc (bad) dec adcl idiv xchg sub rclb out mov outsl (bad) call dec or mov fldcw mov rcrl dec mov cltd das fnstenv ljmp ret out or cmp int dec shrb (bad) lahf (bad) mov scas inc arpl fbld ret incl mov rcr and inc jp sbb (bad) jg popf ret mov jb inc ds and daa push fist cmpsb add add dec ja (bad) (bad) jmp ljmp inc fiadd test add fistp in mov ljmp jne jne sarb leave (bad) ror sbb ss imul sarl mov (bad) ljmp cs cmp fwait push sbb in jae popf pop fnstsw clc scas flds (bad) decl inc mov mov sar dec cmp out scas pop daa jp mov imul (bad) (bad) lcall (bad) imull adc jmp in xchg loop dec xlat (bad) hlt push mov push (bad) (bad) (bad) call das push or aas push das adc adc ss or adc xchg xchg push mov (bad) mov fcomp jae out cli push arpl popa cs and mov (bad) push or out cli push sub pop fstps xchg sub cs in (bad) (bad) decl (bad) sub pop rcll mov outsb pop mov das cld std fs (bad) (bad) decl decl out js pushf jb sbb jnp jl mov push fmuls ljmp jmp out aas and xchg and cmpl sub leave sub icebp shlb mov rol add mov push push sub jne mov mov adc adc cmpsb jae shlb fwait sti outsb and (bad) (bad) (bad) (bad) pushl mov xchg inc loop pop inc dec or or (bad) inc add or repz loope add dec js (bad) test xor dec test gs or inc jns out cli fwait or adc fbstp lret push jge sub mov incl sti test and sahf loope dec ret pop dec xchg xchg stos enter outsb (bad) (bad) (bad) decl popa inc fstps dec mov sbb and lcall jge add pop out (bad) (bad) (bad) (bad) fmuls iret push sbb add dec (bad) mov mov or xchg leave lds shll decb fisttp loop xchg shrb (bad) pushl test mov xchg pop rcl imul sub jns dec xor (bad) (bad) jmp adc addr16 jmp iret insb push add fisubr les (bad) mov mov adc jb loope sbb sub leave sbb sub (bad) cli pushf push subb (bad) and (bad) (bad) (bad) pushl nop ss and xor rorl sub xor mov (bad) (bad) call jns mov xchg test cltd pop into mov or mov fcoml call jmp lahf bound bound inc mov push xchg push adc ljmp add mov movsb std out sub push shll mov aam movsb jge sar incl ljmp pop (bad) jle pop rolb shrl jg xlat (bad) ljmp jl lea add decl inc mov add push pop (bad) pushl outsb fcomps loopne mov xchg ds (bad) in pop fldl (bad) (bad) (bad) dec daa in push sbb adc mov jp mov and xor mov cli (bad) lcall jae push cmc jmp out insb fisttpll jmp loop loope lock and (bad) ljmp xor lods add mov or dec sub mov jnp (bad) lcall mov or cli jb fstl jge lods je lret cmc jmp push (bad) inc movsl mov (bad) mov lahf cmc xor fsqrt (bad) stc mov jb lock (bad) (bad) jg or ds rorl xchg popa xlat adcb pop aas mov push jmp jmp and (bad) js dec or int (bad) (bad) (bad) push fsub cwtl xor sub jge dec popa pop int3 out inc jecxz ja cmp add jo sbb mov push ret sub adc lahf push or nop lcall in dec xchg and decl cwtl mov subb repnz popf push xchg sti fsubrl (bad) (bad) call lcall fs iret imul imul loope test sbb (bad) ljmp in and jmp add mov sbb test movsl add (bad) (bad) (bad) (bad) adc add mov pushf outsl inc mov sbbl push (bad) ss pop (bad) (bad) (bad) call gs mov call stos out lds int xchg or jle (bad) call movl pop sbb lods push inc jb call inc mov push (bad) jno mov xor cli xchg mov cltd lds ljmp test aad push ficomp mov inc lcall xchg (bad) loopne (bad) fild push inc movsb cmp xor scas sub adc (bad) (bad) lcall push jo adc xor sbb pop test fadd dec fstpt jnp push (bad) (bad) jmp jp ja mov xor mov sbb in mov (bad) (bad) (bad) (bad) jmp mov out inc or mov ficoml xchg hlt decl ljmp fs cmpsb aad jo lcall sbb (bad) xor xor pop ds push decl mov mov jg lds jg ror or jecxz mov lds (bad) (bad) (bad) (bad) call cmp inc ljmp add jmp or int3 xchg (bad) rcrb (bad) (bad) (bad) ljmp dec xchg mov out fildl jno fdivl sub and repz insl js inc jae (bad) incl and push aam lds fcompp fnstcw sbb int (bad) incl in loope inc ficom mov sbb add inc (bad) (bad) (bad) (bad) mov ret inc sti pop arpl das movsl popa int3 dec shrl arpl (bad) push call xlat sub arpl push fcompl les lds (bad) (bad) (bad) mov push mov or dec inc mov je scas (bad) jg (bad) call mov ds xchg inc (bad) call (bad) (bad) decl xor jbe mov pop mov loope outsb cmc jae lcall (bad) (bad) jg repz call inc cltd rcrl into fwait xor sub negb xor aam xchg jle (bad) (bad) jmp int lea sub xor fadds jge cmp fucomi aaa mov bswap push dec (bad) (bad) (bad) jmp mov jb push jg push addr16 aas addr16 lcall pop push mov jbe (bad) (bad) (bad) decl pushf pop and pop cld cmp xchg sbb jecxz or fldt lock mov data16 xchg icebp fbld lret xchg jecxz movsb xor mov (bad) (bad) jmp bound jl sub mov fxam in imul data16 stos mov call or into mov pop scas push jae inc xchg mov adc clc outsl aam jns ret hlt mov jnp cmp mov mov (bad) pushl scas xor rolb push mov cmp jg mov int3 jne es cmp enter xchg loope es mov cmp into sub cmp push pop adc decl cmp hlt nop sti sub mov xchg repnz (bad) (bad) jmp pop enter shlb xor and hlt std mov mov repnz pushl loope cmp inc rcrb out fs imul push dec push fcomps pop imul and (bad) (bad) (bad) call adc stos adc or pop and popf into out outsl and inc ja in jmp (bad) call andl ret rol add mov cli add shrl into jmp cmpsl hlt (bad) (bad) (bad) in sbb scas in (bad) in push pop xchg pop xor incl push mov jnp (bad) lcall outsl ja and adc fidivrl cmpsb mov push hlt sbb in (bad) adc (bad) lcall setno lods aad (bad) gs sub jne inc shl iret add test (bad) mov push pop ja (bad) (bad) call movl sar out repnz dec mov test inc inc jns adc shrb xlat mov xchg mov lcall mov (bad) (bad) call xchg jae sbbl mov add adc xchg lea xorb inc push sbb mov mov jae mov (bad) (bad) jmp out ret adc cltd test dec dec cmp xchg mov loopne push adc and lcall push (bad) pop mov dec fild sahf insl add shrb lret and cmp (bad) lcall iret ficom adc fwait arpl jmp clc inc stos sarl sbb jb (bad) (bad) (bad) ljmp rorl jge or add aam bound xchg sar or sub (bad) (bad) call out sti mov sbb int3 sbb inc jle inc mov cmp mov das inc cmp fldcw (bad) (bad) (bad) (bad) jnp es sbb xor sbb xchg adc add jmp out cld pushl sub inc xor mov (bad) or dec push cmpl call sub or jnp fdivrs pushf push inc push add or xchg lcall pop mov adc inc mov lret mov clc mov or (bad) (bad) (bad) jmp shrb js fimul pop cmp jmp xchg fidivl loop (bad) ljmp sub fucomp push xor data16 and insb mov in (bad) mov or or shll mov insb addr16 (bad) (bad) (bad) incl adc or mov aas lock divps hlt cmc or xchg sahf sqrtps ljmp cmp (bad) sahf push mov push fidivrl or cld pushl jge jbe in in fidivrl outsb cs das cli decl daa cmp and pop andb out dec (bad) (bad) (bad) ljmp mov imul shl adc adc shll adcb cmp (bad) (bad) (bad) fildl jnp pop data16 repnz fldenv outsb ja lcall out cli pop mov and mov cmp fimul jp push hlt enter mov ja (bad) (bad) inc pop cmp or or sbb mov fcompl clc lret (bad) mov cmpsl pusha mov adc sub leave xchg push dec cmc scas dec dec add add sar (bad) pushl aaa cmp sub inc mov sub dec mov dec aas pushf stos (bad) (bad) (bad) pushl jae test xor (bad) ss jmp xor inc mov int out pop cmp ja (bad) (bad) incl adc out movl insl adc mov and push cmp dec pusha mov dec in lock lret sbb arpl add push scas cli decl sub iret (bad) mov dec add data16 jle loop (bad) (bad) decl arpl sar pop sbb inc sub sbb je into (bad) (bad) lcall add insl jmp push push xor dec pusha les xchg scas (bad) (bad) (bad) call aaa inc fwait push lea inc lret lea ds push sub fmul cwtl or mov cmp mov cld mov cmp push cwtl xor sbb mov cmp je (bad) ljmp push pop xor jle testb sub mov imul xchg jmp (bad) jg adc mov dec or iret inc stos pop stos inc xchg pop pop cmpsl imul loope ljmp fcmovne clc cmpl ret addb xchg movsl (bad) mov dec cli les add data16 jle std jbe sub (bad) (bad) ljmp push popf sti push lock sarb (bad) mov jle das arpl das push subl push mov mov repnz mov dec mov je ja not push (bad) (bad) (bad) ljmp pop and test push test xor imul xor data16 into and (bad) (bad) (bad) mov sti mov cmpsb cmp fldcw orl stos jb mov lret (bad) ljmp and (bad) cmp int3 adc mov cmp jne int3 shrl test ljmp pop daa xor scas xchg pop std bound das and pop push call sbb mov (bad) mov mov scas sbb pop lret push (bad) incl inc dec ljmp xchg rolb (bad) (bad) (bad) lcall popa add popf imul adc mov jmp ret dec (bad) (bad) (bad) (bad) fldenv mov pusha push aas mov xchg cmc popf push push or xchg (bad) sbb es xchg pop arpl dec add (bad) out cltd test fstps iret cmp push aas call inc cs mov or stos mov movsl jno xor add push mov cmpsl pop iret cmp fidiv dec imul in (bad) (bad) pushl cmp cmp lcall mov jnp iret sub mov (bad) (bad) (bad) call inc mov adc imul mov test mov leave adc scas (bad) (bad) lcall jo and (bad) out inc jb cmp cmpsb test mov pusha xor (bad) ljmp mov mov jno xchg push inc lea pop fidiv mov leave movsb decb pandn xor dec pop out (bad) cmc call (bad) (bad) (bad) call aam pop mov int3 mov xchg fs and mov pop xchg pop adc incl jae dec xor movb pop pop jne pop sbb arpl (bad) (bad) (bad) (bad) cld adc lret repnz cs rcrl jl or ret mov cmp das jp (bad) (bad) (bad) in cmc xchg xor inc cmp push fsubl movsl pop ror inc or scas fcomps gs jg test repnz fisubr lods daa mov (bad) (bad) decl xor repz dec dec mov push dec mov xchg push cmpl (bad) sbb scas cld sub dec push pop or mov pop in and xchg xor gs les mov test (bad) (bad) jmp addl adc add adc cmp iret xchg lods outsl mov cld push mov out out adc (bad) (bad) jmp mov mov stos sbb jno (bad) pushf or push push loop mov ds call xchg xorl sbb lea dec pop jns (bad) ljmp stos sbb inc test (bad) pop (bad) push (bad) pop pop jmp mov xchg rorl lds mov call sub cmp mov (bad) (bad) (bad) inc mov mov cmp shrl ja in add xor adc xor ljmp (bad) (bad) in adc push sti aad dec ss mov test scas rcl mov (bad) pop (bad) ljmp nop adc psubsb mov pop rcrb stos mov sarb jl and ljmp fldl sbb adc mov inc (bad) scas fldlg2 inc cld scas (bad) (bad) (bad) lcall or scas adc dec lea and push sbb jmp ja out mov (bad) (bad) in sti jmp dec cmp jb xor lods and out adc (bad) (bad) ljmp sbb scas mov lods inc dec dec mov push sub cmp (bad) (bad) (bad) pushl cmp fldcw pusha cli in sti xor mov jnp pusha loope and sar mov (bad) (bad) jnp mov enter xchg inc inc or test dec dec aaa mov push cwtl and stos out cli (bad) inc leave adc add repnz rorb imull imul (bad) (bad) in lret outsl mov int fwait push ljmp out cmp or ret aam inc pop (bad) (bad) incl pop push mov pop out pop inc and lods dec mov pop mov (bad) mov out stos shrb sub mov test mov pushf scas mov (bad) jmp popa mov les mov push lahf pop dec push pop push mov call (bad) ljmp fst mov (bad) shll sub push dec pushf jge les jno (bad) mov lcall pop pop lea (bad) (bad) (bad) jg xor mov mov pop jb xchg ret jns shl cmp rorb loop (bad) (bad) (bad) (bad) jle or sbb inc push insl cmp lahf shr dec test mov fidiv sbb fsubrp insb cmpsb mov sbb jbe cmp lea inc enter jne jp (bad) mov call add jecxz or cmp (bad) (bad) (bad) fcomps stos js in dec dec mov fprem imul loope insb cli (bad) jg movsl mov ds xor jg mov xlat mov mov insl repz (bad) call xchg stos dec or xchg pop into jecxz mov outsl mov jae inc mov ss (bad) ljmp fisubrl (bad) popf mov jns mov test jne or stos xchg inc outsb (bad) (bad) (bad) jmp push pop (bad) fstpt and push dec adc cli call mov jge (bad) (bad) ljmp sub dec pop movsl sub repz call sbb pusha cmp xor mov icebp (bad) (bad) (bad) jmp cli fidivl out mov shr xchg sbb xor mov sub das sar jp (bad) stos push enter in push mov into je (bad) (bad) lcall test mov (bad) jp (bad) idivl mov adc jmp or jmp add inc jg mov jne sahf aad sub (bad) rol (bad) (bad) call scas push and (bad) inc clc loopne out inc ret mov subl call jmp movsb lcall sub xchg inc cld jecxz jns in ljmp clc test mov mov dec mov pop (bad) out jnp addr16 loop das cli in repz sbb jb or movsl scas inc int sbb fild fs adc fsts int3 mov xor mov mov (bad) (bad) call ljmp addl fs mov flds test cmc lcall xchg jp mov out cmp data16 insb pushf cli outsl cli call xor int3 aas inc inc mov fdivrs adc mov mov (bad) (bad) mov push loopw jg addr16 mov loop std rcl das mov test (bad) (bad) (bad) (bad) mov rorl lahf dec ds out test fsubs jb pop rcll pop pop mov stos (bad) lcall sbbl dec testb mov les enter xchg loope clc (bad) (bad) (bad) pushl ja divl data16 and jg rcr mov insb inc jge sbb or idiv (bad) (bad) jle push mov xchg or repnz lods shlb and dec pop xchg pop dec xchg iret cmpsb hlt (bad) (bad) in sbb mov je test (bad) sahf outsb sub out mov or arpl (bad) out test pop jbe adc icebp in inc leave bound in xchg int3 fcomip (bad) ljmp lret mov sub xor cmp mov in and (bad) (bad) (bad) lcall bound sbb mov nop pusha pop cmc push mov insb fcoms movsb jg test leave stos pushf insl in cmp inc mov mov lods outsb (bad) mov push or jg imul jno pop xchg hlt call pop inc dec mov incb test adc ret or (bad) (bad) jg pop ja fdivp and mov sbbb and and test out sti add adc (bad) (bad) pushl adc mov fild inc test icebp imul cmp mov pop push aam pop enter mov fldcw jle push (bad) mov (bad) (bad) stc flds punpckhwd mov daa mov fiaddl notb dec js ror sub lods nop imul (bad) hlt adc sub jecxz repz push popa jo mov jbe xor addl (bad) dec mov (bad) push (bad) (bad) ljmp or scas sbb popa dec mov cmp inc cmp xchg xchg test mov (bad) dec pop outsb and dec pop cmp out sub mov into lret push jne mov adc idiv (bad) decl and sbb xchg sub (bad) ss loopne (bad) inc ljmp test pushf or test shl xor push jb xorl roll (bad) sahf es jb dec pop scas jmp rclb decl jno push pusha loope dec lock loop enter push sbb gs (bad) (bad) incl cmp xlat mov outsl xchg jae jle icebp cmp aas sbb lret (bad) (bad) lcall sbb leave shlb leave sbb pushf adc adc push std dec test pop cld std into arpl (bad) (bad) (bad) (bad) stos loop push xor aad mov in aad pop gs test cmp lock lcall jae les jl rcll xor subb pusha cmc aad add jbe pop mov fisttp cmp or mov in inc pop (bad) pushl mov mov or push test mov popa inc loopne fcomip (bad) mov loopne xchg mov cltd mov mov pop mov dec jns (bad) (bad) (bad) mov pop lret imul pop outsl mov int3 dec clc sbb add (bad) (bad) jg dec cli mov (bad) jl add sbb les std jecxz std jge push in inc (bad) (bad) (bad) incl dec ficompl xor mov push mov mov cmovl jecxz sbb (bad) inc add outsb lock nop cltd repnz mov inc (bad) xchg xor dec adc inc (bad) (bad) pushl sub scas inc jbe xchg dec cmp scas je jmp ljmp (bad) (bad) (bad) pushl mov nop inc int3 pusha mov sbb in push repnz mov xchg cmpsb clc test (bad) (bad) (bad) (bad) jns (bad) mov es test (bad) leave jge or popf or adc pop std mov mov cmc sbb in mov pop dec out inc adc bound push pusha (bad) (bad) (bad) (bad) mov movb jae push hlt mov in cmp ret sti arpl (bad) jg decl push and call loope loop andb cmpl into (bad) mov dec xor mov fistl addr16 sar rorb mov push repnz push mov jmp jne add mov push push push call movsl pop cmpsl fisubrl test (bad) (bad) stc rcrl adc xor inc sub stos sbb call std lcall movsb fstl cld (bad) leave aad je lret mov (bad) inc xchg aaa rep incb jle insl and (bad) in ljmp cmovnp pop cltd (bad) dec call icebp out stc xchg out shrb into pusha xor mov and jecxz pop dec jbe cmp push scas sub cltd ss cmp xchg sub jmp xor (bad) (bad) decl pusha push mov cmc imul aam xor outsl xchg (bad) sti xor mov mov mov pop out dec (bad) cli push out icebp rcrb stos mov and add popa cwtl pop movsb je,pn add movsb mov xchg and dec mov popa lret fistl mov sbb lods jae push in sub xor lods pop mov jno xor xor mov (bad) jns hlt stos fildll pop test mov cmp loopne pop mov lods push mov mov jg mov pop (bad) dec mov int imul jmp rorl push ret popf dec mov fnstenv mov outsl mov in push (bad) (bad) (bad) pushl mov inc pop pushf (bad) in or push fcoml lds (bad) (bad) (bad) call push les lea popa (bad) jg xor psubd dec dec sahf faddp dec xor (bad) (bad) pushl mov enter test orl and push pop mov jns add pop jmp (bad) les or imul daa sub decl mov jbe xor jnp push xor push xor movb std and clc adc (bad) (bad) adc adc and pusha lret mov cld or in adc lcall mov (bad) push and sar fidivl repnz insl mov retw xchg gs (bad) (bad) ljmp ror loopne cmp cli or mov lret lret repnz xchg or sahf fcomip (bad) call fistl cs roll cs mov (bad) (bad) (bad) jns cmp push sar clc sub xlat pop das dec cmp les std (bad) (bad) lcall pop aad pop imul je sub jnp dec pop movsb ljmp cmp es dec test push (bad) int3 (bad) jl test sub inc sbb jmp fisttpll pop sbb cmpsb push (bad) push mov push or out ret xchg add sub int3 aad mov and xchg ja repnz ss inc insl mov pop data16 mov stc lods enter jmp aas xchg pushf mov mov mov ret or ds (bad) jmp sub pop scas sbb sub sbb (bad) xor stos jle ljmp (bad) test mov lret pop popf dec pop cmpsb orl mov pop fisub jecxz jne xor loopne push aad xchg pop push or (bad) jmp ds cs fbld std mov adc sbb mov fcomps insb dec bound lcall ljmp (bad) (bad) dec call add inc (bad) (bad) (bad) jmp xor mov iret insl lock mov out push lret (bad) (bad) (bad) lcall aaa xchg push fdivrp and repz lock stc sbb scas dec xchg lcall (bad) (bad) incl cmp push movsb loop push mov (bad) jns shll (bad) loop je in jns (bad) lcall and lods dec test rcrb xchg mov jnp jle push lret lret mov cwtl mov add (bad) mov mov xchg out or test (bad) (bad) jmp cmp dec sbb add out sbb or mov (bad) cmp imul cs mov cmpsb push pop lock and test or inc stc loope mov adc jmp addr16 cwtl sahf and sbb pop xchg fcomps enter sbb ret mov sub lcall aaa idivl xor imul enter pushl sbb mov ret fisttpl popa aam dec imul iret inc mov jp cmp outsl inc mov (bad) (bad) (bad) decl imul cwtl jo xchg lods lea mov jge mov xchg mov (bad) (bad) push out sbb addr16 adc push leave je imul jne ljmp fs mov pop fs xchg fucomip mov cmp mov (bad) (bad) decl or inc cmp adc jb loopne popa add xchg test xor pop cmp ficomp pop test int outsb xlat negl orl jmp out mov xchg cmp cwtl xchg add mov mov (bad) (bad) lcall add js jmp cmpsb repnz xor fwait pop push xchg inc (bad) (bad) (bad) decl fidivl cmp or dec in stos mov inc cltd out add sub (bad) fildll cwtl divl mov pop mov mov ficom sbb fldenv sbb pop int3 into (bad) movsb cli pop ljmp test cmpsl insl jne dec leave rorl pop lret fisttpl xchg or dec cld (bad) (bad) incl andl jbe xchg jbe dec fistl imul pop dec loope notb ljmp or (bad) jmp push out (bad) xchg adc fs scas sub (bad) mov ret inc (bad) jae (bad) ljmp cs dec hlt or inc popa jb addr16 mov std dec xchg xor and dec imulb pusha dec mov test xor (bad) (bad) (bad) fild adc rcl leave hlt cli mov mov out mov mov cmp aad dec rorl (bad) repz fsubr xchg data16 (bad) lcall hlt in adc cs pop test sub lret cld (bad) cli fwait insl imul bound pop add decl xchg call sar movsb xchg mov loopne push xchg (bad) (bad) call adc shlb jmp imul (bad) (bad) lcall jae bound mov int and sub pop fcompl js leave mov setle out mov dec pop and lods and push dec ret lea lcall roll mov lret scas pop outsl add jmp pushl mov jbe cmp ljmp (bad) (bad) incl int3 push xor enter out push sbb inc jns test xlat or insb popa in mov (bad) fiadd mov jg sahf int enter cmp jle cmp (bad) (bad) (bad) ljmp insb dec in add xchg sub inc and inc ret or aam idivb (bad) (bad) (bad) in (bad) dec push scas dec aad scas and fsubs mov mov gs (bad) (bad) (bad) call inc inc repz push pushf mov (bad) mov cmpb aas xchg daa dec cmc daa mov jg cmp jp adc jb mov dec or lret (bad) call cmp iret dec rorl js or movsl aas xor sub test mov popa xor dec push (bad) (bad) (bad) inc sub fisubl cmp mov sbb cmc push dec lods sub fist xchg push (bad) (bad) (bad) pushl jg add repz fwait dec insb int sbb nop jl mov divl or (bad) (bad) incl clc sub xor imul rclb jno xchg push stc jne outsl inc (bad) (bad) (bad) cmp sbb popf (bad) xchg mov inc scas sbb test insw sbb enter lock jmp sbb daa or fwait jecxz jg pusha adc push je dec mov (bad) jmp xchg lcall push xor mov fnstenv jae rcll lahf cmp inc (bad) (bad) push xor scas lahf scas out (bad) mov mov iret jp mov mov mov push adc sub sahf mov cld insb mov add and movsb cmpsb (bad) jmp push aam sbb insb and mov (bad) (bad) inc sti mov push hlt ss xor insb or cmp jae mov jg out (bad) scas (bad) cmp pop int3 lcall in ret jl mov sub push dec sbb lret inc (bad) iret cld cmp add jbe mov les lcall pop and sub adc into cmpsb push imul add imulb jge (bad) (bad) lcall push psadbw sbb ds jmp dec fld jb addr16 and incb in ret mov loop (bad) decl mov adc pop jbe xor popa lods or (bad) icebp (bad) (bad) fildll rcrl inc push mov loope jns into sbb sub std jl,pn xor cmp daa pop fwait sbb jo fcomip and hlt (bad) (bad) (bad) jg dec and add mov leave enter pop stos insl push (bad) ja or inc js add add jmp loop mov xchg xorl xchg test sbb dec pushf fistl shlb jg fbld xchg orl xchg sbb test jbe lcall sarb jecxz (bad) sbb pop jmp pushf inc or sarl jle lds (bad) adc pop enter ljmp adcb (bad) (bad) (bad) decl jno push scas mov cmp push add mov add inc adc and (bad) decl cmp aas push dec ja and popf mov rorl dec std dec jnp (bad) (bad) (bad) (bad) cmp xor std mov sub fildl dec inc and and fmul test dec mov (bad) (bad) jmp xchg sub repz adc adc rorb inc xorl pop cmp loop push xchg loope inc pop lahf adc mov xor movl xchg divb jge cmpsl jp xlat stc xorl sub jo sub aam or sar (bad) jg enter dec cmp scas in push (bad) stos pop aaa sahf insb cmc (bad) (bad) (bad) lcall repz pop and cmp ss in lea int3 lock xor (bad) (bad) (bad) decl arpl (bad) cmc and aam jle xchg jae aad icebp gs pop cmp insb cmp (bad) mov or inc aam stc (bad) aad mov jg xchg cld ljmp movsb jge in icebp mov cwtl cmp (bad) (bad) jmp imul push lea outsl xlat mov pushf imul mov incl ret icebp sub adc lahf lock fwait pop int push mov xlat and (bad) ret dec sub adc (bad) cwtl jns (bad) repnz ja enter (bad) pop cld incl pop clc rcrl mov xchg xor mov mov (bad) (bad) lcall cmpsb cld rcl rcrl inc push and cmp scas adc (bad) (bad) lcall mov cmpsl (bad) dec lock adc mov or js,pt fidivl push bnd jno (bad) (bad) lcall fcom dec jmp outsb nop jns jae imul mov mov icebp mov push (bad) push call push cmp push push cmp add cld arpl pop loop scas ja imul subb scas shll push xchg leave push fildll (bad) in push mov push sbb call stos fldt pop nop cltd cmp aas xlat xlat and and cmp (bad) mov sub pop int andl fdivs pushf jl adc xchg (bad) (bad) (bad) call pop push lds mov inc mov scas jecxz clts int and jbe (bad) (bad) (bad) lcall jge cmp mov pop in cmp jne mov dec loop mov ds pushl xchg xchg call loopne jb and sbb dec clc adc gs inc sti fwait (bad) (bad) (bad) (bad) fcomps mov out movsb in ljmp and pop sbb mov leave daa pop (bad) repz (bad) (bad) (bad) incl or dec jmp push mov inc xchg enter lahf push cmp (bad) (bad) push push pop push xchg test in add fs je sub aam popl inc orl decl shlb jns (bad) push push int3 (bad) scas (bad) into and sbb and out insb dec mov adc sbb sbb jbe push pop out insl pop test or popf insl (bad) (bad) (bad) (bad) std icebp sahf dec pop mov jmp xchg adc clc fimull insl dec jbe pop xchg mov sub (bad) decl sbb movsb xchg dec xor mov mov and jp lods mov ret xchg inc cmp pushf cmc (bad) (bad) (bad) pushl inc sbb fstpt cld icebp stos daa mov loope mov sub xchg loope (bad) (bad) ljmp loopne sbb push outsb faddl jns (bad) mov adc fidiv inc je mov incl cmp clc in inc add int3 sub jmp dec (bad) outsb cli lea pop outsl jl adc (bad) (bad) jmp andw push jp sub inc call pop and ds (bad) (bad) incl (bad) pop sub jmp adc jmp cmpl xchg stos mov xor (bad) inc (bad) daa dec fwait in and sbb cmp mov fwait xchg call shrb or cmovp in stos mov jg (bad) mov ljmp movsb mov pop lock add mov (bad) (bad) jg lock (bad) and pop (bad) ja jnp popf cmovbe xor stc xchg lock pop push mov (bad) call mov andb insl sub shrb jl cli sbb (bad) (bad) (bad) decl push ret jno ficomp xchg sbb ret notl insb fwait arpl cmc imul (bad) call mov adc mov add out lret mov test push xchg rcrb daa call cld (bad) jns ljmp (bad) loopne test lea loopne push sbb (bad) (bad) (bad) ljmp lods mov push mov ja (bad) mov sub ljmp mov andb or inc dec jbe ret aaa or push fstpl add fsts pop pusha inc fidivr aas repnz jg jo xchg inc cli mulb sbb je ljmp sub aad cmp jge xchg loopne out xor (bad) (bad) ljmp pop cwtl xlat cmp adc and (bad) mov imul pop cwtl adc fsubrl icebp iret xchg enter stos xor adc or push gs testb out out sub sub fidivrl cmp cmp (bad) (bad) jmp dec cmp test lods ficomp out addr16 sbb mov (bad) (bad) (bad) incl je adc imul mov in push jle sub inc push rolb jno xchg int3 sbb or jge pop push repz and test xor (bad) (bad) incl in xchg dec cmpsb ss icebp ds inc sub cmp int jns jge dec cs (bad) insl in jb loop incl mov lods pop shr push pop adc dec ljmp test movsl ja mov xorb and add mov les mov hlt jecxz inc sub jecxz call loope stos stos loope add lret pop xchg xor xor pop cld push xchg (bad) (bad) incl std jae push scas sbb cmpsb sbb jmp dec xchg adc stos (bad) jmp iret mov pop sbb sbb cmc xor adc or roll sahf in inc fdiv fcomp push mov jnp pop push lock (bad) (bad) call mov cmp mov jb push in lret repz (bad) sti dec (bad) (bad) (bad) jg (bad) mov cltd jnp mov (bad) push rclb inc sahf pusha adc test (bad) (bad) out addr16 mov sub lret push insb mov xchg fistpl cmp inc ss pop rclb aam cwtl sar (bad) (bad) mov or dec pop imul dec rcll das cmp fbld (bad) es mov mov into jns cli imul cmp (bad) (bad) (bad) push push xor mov and cld xchg dec mov cs loop xor push adc push add call data16 jno lock pop icebp cld jg mov lcall xchg lds or icebp inc mov mov ss je dec sub (bad) (bad) (bad) (bad) clc out roll push mov inc (bad) mov fbstp sub into mov (bad) incl rorb repz stc mov lods push sub fnstsw or jmp (bad) ljmp jns lock adc in repnz popa push pop mov test incl xchg jnp and mov iret insb add rclb in mov (bad) (bad) jg mov jno js add es clc xor mov mov xor mov notl cmpsl add add cld fwait mov pop popf xchg (bad) fnstsw jl pop insb outsb cmc lods cmp cmp lods (bad) hlt pop xchg fidivrl push std add addr16 pop (bad) fwait jecxz sbb call out lret inc push jnp in xchg fildll cwtl xor dec sahf or fnsave shll push sbbb (bad) (bad) (bad) ljmp loope inc nop cmp and dec mov adc in fchs mov aaa ret imul jne sar push pop sarl adc test push enter shrb (bad) repz xchg adc (bad) lcall jno inc push sub push es add fild or jl pop mov (bad) dec ret stos cmpsb shrb je insb and inc lret cwtl and fmull (bad) (bad) fadd jbe es mov loopne imul leave minps and add imul (bad) call rolb lds into es (bad) (bad) jg jecxz subl jg mov push or aam mov incl fnstcw ss jo and aas xor (bad) aas add inc in vfmsub132ss (bad) mov mov lcall pop (bad) push stc (bad) int loop fs xchg hlt mov xchg rorl (bad) decl cmc loope (bad) sbb push xchg mov data16 sub push xor (bad) (bad) (bad) fcmove movsl and push xor sbb test iret and pop loopne rolb push lds (bad) (bad) decl cmp xchg shll outsl jle xor mov cmp (bad) std pushl std outsl cmp sbb inc pop xchg or inc mov mov jg (bad) pushl mov sub adc fisttpl hlt push inc inc (bad) sub jmp or sub (bad) (bad) call hlt lock cld xor inc aam or sar into clc dec (bad) leave ljmp (bad) jmp arpl jns push test mov std xchg test imul (bad) (bad) decl pop mov movsl mov ds pop add jne mov (bad) (bad) cli push jno pop lods test xchg mov test add int inc lds (bad) (bad) (bad) (bad) fcmovne sub mov enter out mov jg xor adc xchg ret insl stos mov cmp mov sbb insl pop xchg xor rcl mov dec shrb inc (bad) (bad) (bad) inc or fisubl adc (bad) pop mov sub psubw fidivr jle movsb loope (bad) pushl clc into imul (bad) scas xor mov dec jb insl sbb mov pop add and mov dec dec insl cltd jno mov mov (bad) (bad) pushl or xor jne push push sub aaa xlat lret andl and lock (bad) call push rcr mov jne xor jnp aam scas fdivrs ja cmp mov popw (bad) fbstp test stos push jmp arpl cmp (bad) (bad) (bad) mov push add jge imul adc inc ret aaa mov (bad) fcomip fwait cmp lahf or dec outsb leave and and jp or jg fsts fwait lahf shrl iret xlat cmpsb cmp push inc fild popa pusha xchg or adc nop add int3 jne cmpsb xor aaa xor or mov mov cmp ds fmulp decl sbb and loopne push fwait or fisttp mov (bad) (bad) pushl pushf pop cmp mov ss cmp pop fnstcw mov andl (bad) call es outsl imul movsl mov test sub call rcr sti (bad) (bad) decl push push jo imul mov cmpsl dec sti sbb jo (bad) (bad) (bad) jg add xor xchg add add adc idiv xchg cmp push and sbb cs sbb (bad) push std decl dec aaa int3 cmp inc mov mov add fldcw (bad) (bad) ljmp test mov mov jmp jge mov jbe jge popa (bad) (bad) (bad) lcall lock pop repnz push cmp loopne or xor mov and (bad) (bad) (bad) cld push rcr pop push mov and repz (bad) enter nop ja sbb in (bad) (bad) (bad) ljmp mov fistpl dec inc adc mov adc dec lret movsl add jp insl xor or int3 gs (bad) dec sub rolb rclb loope (bad) (bad) (bad) (bad) push jp mov mov test push mov stos or mov cli aaa xchg and inc sbb sub leave aam (bad) (bad) jg (bad) mov cmp int3 aaa sbb xor inc push icebp inc jmp xor gs aad mov (bad) decl imul add add sbb dec jb mov shrb inc cli call adcl fsubs add std (bad) inc loopne (bad) (bad) (bad) jmp pop cs popf sti xchg and inc and int mov repz ss stos loop cmc mov (bad) jmp pop xchg push mov jnp fisub jp pop fimul aaa mov push les pop gs imul (bad) (bad) ljmp in in sahf adc movsl es movsl (bad) int lret dec aad (bad) call (bad) (bad) lcall and push scas dec inc loop or jge icebp ljmp sarl inc mov mov and loope xchg pop adc dec test aaa jmp (bad) out cltd insl (bad) (bad) (bad) ljmp push xchg das or jmp sbb cmp pop cmpsb ds mov and loopne (bad) jp setl xorl and and adc (bad) lcall dec lods mov sbb sub cmp lahf and out lods mov call icebp jno or add outsl dec mov imul pusha test inc (bad) (bad) (bad) (bad) stc sub xchg jnp inc mov mov insl push add mov movsl mov or xor xor mov ljmp les push fldt test stos pop andl outsb dec mov sub (bad) (bad) mov (bad) decb jno mov sub fsubp outsl fs (bad) rorb loopne ljmp add xchg sbb dec cmp lods cmp (bad) (bad) (bad) decl push cmpb pop pop ror je mov mov ficomp or fwait dec les clc pop (bad) (bad) jns pop out pop push add incl push pusha jge imul (bad) (bad) (bad) fsubrp test inc push sub adc stos call loope xchg pop sub (bad) (bad) (bad) (bad) mov mov (bad) enter push inc dec sahf cmp mov sbb sub (bad) jmp adc cmp jle imul es (bad) mov jle dec rcr or mov ja lcall insb (bad) mov mov pop jns sub mov adc nop fs (bad) (bad) (bad) pushl cs and mov push sti adc adc fs and ss (bad) sub add (bad) (bad) ljmp (bad) stos in xchg out mov add sub daa cmpsl xchg jl xchg loope pop (bad) pushl pop idiv mov loop jno into mov mov jnp xor cmp in loopne clc addr16 adc pop jo call sbb (bad) (bad) (bad) mov mov and pusha mov sub mov inc pushf push lds add sub pushl sub adc rclb stos clc popa xorl adc xchg mov ja jns push pop sub mov jbe es push mov adc and outsl clc mov xor insl clc xchg (bad) cmp loopne loope jne ljmp (bad) in mov ret pop mov xor fstpt push lcall dec rclb test lahf dec ja cld mov (bad) (bad) pushl leave fisttpl pushf js ret jne cmc pop add aad mov fcomip pop pusha pop xchg int3 mov jno push inc push jmp sbb insb (bad) (bad) (bad) call lret stos in sbb enter push lock ret or xor test (bad) decl rclb gs outsl adc fucompp mov ljmp (bad) mov stos cwtl repnz xor cld xchg je stc (bad) (bad) (bad) incl adc les jo in popf push add lcall (bad) (bad) ds cmc cmp (bad) dec xor pop addr16 cld mov sbb push add sub xchg jnp (bad) (bad) lcall jp outsl inc or mov ljmp xchg stos jmp cmp (bad) fcmovnbe pop insb stos rclb add xchg mov fldcw je add mov fnstcw xor mov subb orl decl sub adc inc (bad) (bad) std or icebp (bad) sub repz sbb xchg arpl dec inc in in cmc (bad) decl cmp call pop inc add fbld gs (bad) (bad) fisttp sub jo movsb scas (bad) cmp (bad) loop,pt lcall mov (bad) mov cmp ja dec sub (bad) pop sbb adc lcall test sub (bad) xchg enter push jae (bad) fdivl pop call add test mov bound mov sarl or mov fdivr (bad) (bad) jmp cmp les pop push fmull lock and and mov cmp (bad) (bad) inc (bad) mov add dec loope xchg inc lods push dec adc sub add mov lret orl mov in add cld popl lock lret (bad) mov (bad) lcall es daa and decb dec push (bad) (bad) repnz (bad) shrb lcall fisubr (bad) outsb das popl mov pushf (bad) (bad) (bad) (bad) jp fbstp adc xchg jecxz jb lcall add cmpsb dec adc scas in or (bad) out xor jl ss imul fwait add (bad) out adc cmc mov mov pop aas (bad) sbb loop (bad) (bad) (bad) cmp sub arpl mov hlt xchg and ret sub xor mov (bad) (bad) incl daa mov popl lret dec mov jo stos or movsb cmp stos js push ljmp loopne (bad) (bad) jmp out scas in (bad) fisttp dec cmp cmp or xchg push ss cmp and (bad) (bad) ljmp xlat into cmc fnstcw and (bad) das js mulb jle outsb es or scas mov xor mov shlb pusha sarb in sub sub push sbb inc push pop adc ja (bad) popa mov cmp cmpsb (bad) jbe inc cli mov mov test dec dec xchg push or adc daa push and icebp ds arpl or (bad) je daa mov (bad) (bad) (bad) lcall pop add das test inc pop pusha imul jg xor (bad) dec mov js adc lcall sub addr16 lcall sti int3 xor pop test add (bad) (bad) (bad) cmp iret xchg sahf test pop nopl fldl fs loopne pop lods mov xor jg scas clc cld or scas dec outsl add xchg ds (bad) (bad) push cmp fistpl mov icebp addl mov or pop jge cld std cmp bound (bad) pushl inc pop out or sahf rol ds stos insb cld jmp jb dec popa inc cmp movsb or sub outsl or fadds iret movl ja jmp fdivp mov jmp mov pop out fisubr pop fmulp cs ret repnz add cld pushl mov pop cltd mov jp adc pop fdivrl (bad) jg jp aaa lret mov inc (bad) pop test adc sar decl mov shrl xchg jno jecxz cmp inc add sbb adc fcomip jg iret xor mov aam mov push xor push ror popf mov sub pop xor xchg mov gs mov inc xchg or cld dec cmc mov (bad) inc cmp or icebp cmp and test inc add or fdivr inc mov decl (bad) sbb and out pop adc js cs xchg push push adc ljmp out fadds icebp sbb dec mov or sbb xchg pop inc cmc inc push xchg mov jg (bad) jg das mov int3 mov cmpl scas (bad) sbbl into (bad) test (bad) (bad) decl icebp out ljmp iret jl xchg movsb movsl sub mov xor not mov jmp enter sarl clc rorl inc fdivs jmp lds sti data16 push mov (bad) (bad) (bad) (bad) jmp (bad) adc adc repnz insb sarb xchg repnz pop sub add mov (bad) (bad) decl pop inc imull test add jb pop je and les arpl (bad) (bad) incl mov cmp dec mov test fstl sbb popa rdtsc nop push adcb inc ss pusha sub cmpsl pop or (bad) ljmp ljmp xlat dec cmpsb je test fsubrs (bad) adc (bad) decl dec and enter and or clc jle xor (bad) incl lret sti imul (bad) dec and int lret adc (bad) (bad) cmp stos jmp clc ret pop (bad) dec shll std push and dec dec enter ljmp (bad) jnp call in xchg xor mov cli enter mov inc (bad) (bad) (bad) jmp (bad) adc pop scas mov add cmp sahf xchg out (bad) aaa adc outsb dec jecxz fildll movb idivb inc ja,pn out jge sbb jp or sahf mov in stc xor mov xchg mov gs (bad) stos dec imul jmp (bad) int int out mov inc jle sbb sar (bad) (bad) mov xor inc enter fs outsl dec xor sahf sarl mov incl cld jmp xchg sub pop inc push mov jmp sub pushl add sub sbb add inc sbb fdivrl loope xor or clc dec fist jg ds sbb fwait (bad) (bad) incl add pop int es ss pop xor fstl movsb dec pop (bad) (bad) (bad) ljmp mov (bad) sub pop cmp and lret lock bound sti or aaa cld lcall fmulp int3 pusha and push add das mov jg sbb stos pop call in (bad) (bad) pushl mov mov xchg inc xchg sti js dec mov pop push xor add dec jns test clc mov pop cmp and addr16 xlat (bad) lcall testl xchg insl xchg ror adc push adc (bad) inc sub sub adcb mov mov push ljmp push loop push jae out dec jg adc (bad) ljmp jg enter (bad) repnz cmp xor (bad) mov add fcoms or das daa into mov int3 push xchg pusha shr movsb xchg xchg mov push fdivl cmpsb inc cmp or (bad) inc ret daa rcrb ret cmp ret and mov (bad) (bad) ljmp daa (bad) mov sub mov ds adc loope inc xor xchg lret (bad) jmp push lods mov nop xor outsb ds (bad) dec rol je mov aas sub adc rolb in lock repz aas addr16 (bad) (bad) pushl fwait lds ja mov mov adc sbb or loopne lods xchg (bad) (bad) (bad) (bad) pushl std hlt jecxz int3 (bad) and lret leave lods jno icebp cmpsb mov lcall decl outsb lahf pop adc mov xlat sub jae cli (bad) dec (bad) mov aad test fwait aad mov cmpsb and xor pop lock mov lods mov jne fidivr aas or lods xchg jl (bad) (bad) (bad) ljmp movsl cmp adc adc pop adc imul dec in rcll pop js (bad) (bad) (bad) pushl lds enter lahf loopne pushf mov mov adc into or (bad) (bad) mov push xchg cmpsl or jmp mov or jb cmpsl leave (bad) ljmp clc clc push movsb jno mov data16 bound sbbb or ss das jle icebp mov clc rclb pop mov jg outsb push mov movsl xchg xor (bad) (bad) incl pop fwait neg xor cltd and mov pop aad mov adc and xchg mov (bad) (bad) (bad) (bad) jmp test ror xchg pop push in rcrb pop xchg out pop pushf dec movsl pop test inc (bad) (bad) (bad) incl in jns into dec sub xor cmp int3 or xchg jl pop mov (bad) call loopne pop stos jbe mov ficomp xlat mov push test (bad) (bad) (bad) call int idivl mov or pop push fidiv and push xchg cmpsb hlt inc mov (bad) ljmp rolb das sbb sbb inc lret ss sti sarl cmc (bad) (bad) (bad) jmp adc pop aas lods es stos in loope ret fcmovnb ret jge push push (bad) (bad) (bad) call test cli (bad) lock lds nop or out lds or xor and inc idivb xchg pusha mov sti xchg jp (bad) (bad) (bad) incl xchg and push inc roll cmp push inc loopw or lds std das xchg icebp clc xchg test dec imul aaa adc inc sbb cli pop or insb cld jle push imul je std decl mov inc pop subb cmc pop dec into push out (bad) call outsb push sbb sub popa jb out cmp leave xor jno fildll cld (bad) jmp add popa sbb jge sub inc (bad) (bad) (bad) ljmp sti lret add fnstsw push inc dec xor mov test mov in pop (bad) decl lock push sahf sbb pushf cmc lock test repnz ss lahf das in mov out lahf repz fmul fnstenv and add les inc lock cli (bad) out cli (bad) incl test fidivl mov pop xchg cld out adc mov and cmp pop loopne lcall adc stc pusha out xchg ret jmp sti mov shufps (bad) (bad) jg stos ret dec xor bound je lods dec loope lret pushw push test lods scas pop icebp ljmp xor pop xchg cmp insb mov inc (bad) (bad) (bad) inc out in (bad) movsb mov (bad) jb inc lock enter in aad push addr16 enter sbb (bad) (bad) lcall and pusha pop sub lcall seta std aas jnp stos js mov lods (bad) (bad) (bad) call stc das ucomiss lret push xchg jecxz dec lret inc btr aam push add scas icebp pop repz int mov jmp (bad) mov inc faddl hlt stc inc jnp cltd or sbb fcomip dec inc adc jl add js test adc fisttpl jns clc imul in int3 mov fwait out dec jl (bad) (bad) (bad) jmp int3 adc mov cs (bad) mov (bad) hlt sub adc xchg rorl and ret (bad) (bad) incl add iret jno test clc mov stos xlat fnstcw dec lcall (bad) jg push sti pop mov faddl add xchg push jmp pop dec in cwtl movb cld push int icebp dec lcall loope decl inc jns lea add test aas mov lcall incl in xchg rolb pop xor movsb clc cmp loopne push popf aad (bad) call dec and sbb fdivrl inc les xchg inc xchg dec cmp (bad) in (bad) decl fcoml int pop loopne andl push int3 dec aam addr16 (bad) (bad) inc enter push aam sub push clc rcl jl xchg inc push mov (bad) (bad) inc mov dec das scas inc adc push push sub pop (bad) lock iret pop and push into inc inc mov (bad) (bad) decl fstl add pop bound ret mov inc ljmp mov (bad) mov aaa mov or leave lods lret pop push sub cmc dec pop nop pushf or dec pop les fbld ljmp ds ret or (bad) mov sbb cmpl sub ss mov enter test jmp pusha test xor and cmovl (bad) js bnd repz in mov xor xor xor mov jb test sbb inc aam xchg and jae outsb and cmp (bad) (bad) inc jnp push push cmpsb and dec add aaa imul dec addr16 icebp dec nop pop pop mov ja xlat adc sar adc out popa pop mov mov jg mov aas mov lcall adc fstl out mov xchg mov pop rol jbe (bad) mov push mov xor mov sbb mov or (bad) (bad) inc rcrb cmp subb mov jge scas push push (bad) (bad) pushl xchg pusha push stos sbb lods xor out out (bad) (bad) decl lret in mov into lock dec insl out mov jl mov (bad) push xor je cli jecxz scas lods cmp xor push fstl (bad) (bad) ljmp sub xor jmpw or inc mov sti lods icebp mov pop inc (bad) pop (bad) incl xlat div jl ds sahf les jg aad (bad) mov (bad) lcall out fnstcw inc mov pusha mov cld cmpsb rorb pop push stos push inc and (bad) (bad) (bad) (bad) jnp push hlt or das dec mov adc stos lahf pop mov daa cs lahf int add (bad) (bad) (bad) call adc cmp dec rcl xchg stc fnstenv sbb xor fldl mov (bad) jmp mov jle and dec sbb add xor leave pop (bad) jp outsl (bad) ljmp dec das pop dec and jge cld popf inc pushf aam sbb jg sub dec pop cmp xchg or push sbb push stos add sbb lret in (bad) (bad) (bad) dec insb sbb inc mov sbb fwait sbb cmp sub xchg mov pusha (bad) test (bad) mov decb clc adc inc inc hlt xchg sbb dec in test (bad) (bad) (bad) call gs lock mov cwtl cld imul mov lods (bad) andps leave push inc push femms pop or (bad) stc push push cmp jmp xor mov mov add mov (bad) jmp ja cltd lods popf jns les into cld xchg dec xchg subl pop push and call jnp inc std (bad) (bad) pushl xchg push rclb idivl (bad) push hlt aaa dec sub imul (bad) (bad) mov (bad) cmc stc test iret push cmp inc jp inc mov pop lahf cltd jns cmp push (bad) (bad) (bad) incl dec cli sbb fdivrs out inc lods push loopne lcall rcr inc mov (bad) (bad) jmp xor jb jno adc mov fsubl jp xchg loop pusha inc rcrl (bad) (bad) (bad) mov movsl mov add lea mov sub pop jne dec ja je (bad) (bad) (bad) call add sbb lds jns (bad) inc mov cltd mov mov pop sub (bad) (bad) mov lods imul and jns push cmp push mov push lods pop (bad) (bad) (bad) (bad) mov movntps mov fucomi out in pop cmc js and push or ljmp jbe pop dec pop bound or (bad) (bad) jg lahf pop push loope (bad) cmpsb cli ret test mov and (bad) int sub movsb jnp pushl shr mov adc cmpsl (bad) (bad) lcall aas or inc mov sarb sbb or push dec ljmp mov push push xor mov out push insb sub push dec popa add lock in rcrl addr16 jge insl daa xchg (bad) lcall (bad) (bad) push lods pop sarl lds cmp cmpsb mov sub cs addr16 je sbb mov aad dec pushf pop jb repz stos sbb jae pop xorl sbb (bad) push dec push xor mov cmp (bad) shrb repz aam inc ljmp (bad) decl xor aam cmpsl xchg ficom loopne (bad) xchg aas repnz mov movsl mov dec call outsl (bad) (bad) call es mov sbb mov mov push fcmove rolb (bad) (bad) (bad) inc inc jge mov jae and xor cmc xchg mov jno mov sub push ja sbb dec mov loopne cmpsb push mov call inc inc cmpsl jo add repnz rcl (bad) (bad) (bad) (bad) mov xor insb xchg and enter and and les (bad) mov sbb cld inc je xabort pop add nop mov rclb (bad) (bad) (bad) jg rclb pop outsl test sub rol jmp stos test (bad) (bad) incl mov (bad) out (bad) push xchg mov fs sub pop iret int3 (bad) in das movsl cwtl fs pushl adc fildll sti mov sub movsb inc inc adc dec into (bad) mov mov (bad) (bad) in xor jne pop fdivs push sub mov push sti outsl lcall loopne fcmovnbe (bad) jo and mov and jg cmp sub imul and (bad) (bad) (bad) call imul add add xor cmp hlt (bad) (bad) (bad) lcall cmp imul aam jmp outsl pusha fwait leave cli cmpsb and dec (bad) (bad) (bad) (bad) fstl neg jle mov mov and dec xor ljmp push mov lcall mov sub test mov int3 inc pop dec fimul mov aas into addb out mov inc (bad) ljmp push ljmp cmp sbb (bad) incl pop (bad) fs fwait cmp jl aam icebp cmpsl sub fcomps or (bad) (bad) incl out push cmc or scas sahf xchg (bad) neg or fwait xlat enter mov (bad) (bad) (bad) (bad) lcall lock xchg add or mov scas jg xor (bad) rcl xorl (bad) decl aas decb scas xchg cpuid mov ss pop sbb aad aas cmp pop (bad) (bad) (bad) decl out jae xor push mov fcomp cmp pop jge decl data16 out clc (bad) cld fistp sahf mov rclb mov andl repnz mov lcall jmp movsl enter sub mov jae sub jmp push push arpl xor inc stos clc stos adc out int3 arpl decl pusha push sbb aaa lret inc cmpsb aam into lcall mov outsb loope test jns inc sub xor sbb (bad) (bad) (bad) lcall fisubr test xor jns push xchg mov insl (bad) jno loope test (bad) (bad) decl or aam insb dec dec addr16 inc and mov inc imul (bad) ljmp sahf in cmp gs xor ja sbb jp adc inc roll push or mov xchg xchg loope adc jne cld xlat in jg mov mov imul inc pop jg push jg (bad) dec ljmp decb pusha mov ss rcrb loop cld rclb pop lock push mov add sbb or sbb arpl (bad) call mov outsl mov aad int pop aam rcll fcmovnu mov (bad) pushl cld xchg aad gs cmp (bad) sub push mov (bad) ljmp or shrb mov cmp mov aaa sti push inc pop push ljmp sbb (bad) rcrb adc ljmp loopne cmpsl int3 push (bad) (bad) (bad) ljmp cmpsl xchg loope (bad) fdivrs add fabs (bad) enter test sahf (bad) adc sbb (bad) (bad) (bad) lcall jnp test push idiv ljmp cmp mov jge jns int3 pop (bad) (bad) (bad) dec sub incb pushf add cli test pop lds add (bad) (bad) cmp xor pop adc adc nop cmp pop jp clc lock (bad) pushl bound pop aas faddl int lret jmp stos ret out (bad) rcll (bad) inc pushf jae pushf leave push fldcw mov fsubs pop xchg mov dec movsb cltd dec push popf pop imul (bad) loope jns mov jp push mov dec repz inc sbb decl lcall mov adc in cmp jno sbb fcoms popf call std jo adc shlb sub add (bad) imul idiv sbb mov mov and sub dec mov (bad) (bad) decl and jno cmp mov pop adc mov mov (bad) lcall popf loop and cli ljmp jne rorb lods push mov adc push and adc in mov (bad) mov test and mov or inc inc sbb lret in sahf stos lahf in jbe ret popf inc add cs (bad) lcall or fimul push mov insl pop mov push fdivs ljmp incb inc fadds inc xchg sti push xor (bad) leave or (bad) (bad) (bad) mov ds sub pop mov cmc (bad) pop push cltd push add and test (bad) (bad) (bad) lcall outsl lds mov lcall test dec stc mov out das out insl pop inc mov xchg (bad) loope xor fidivr pop adc jmp loope out stos int hlt add jl rol stc insb xchg ja pop jns sbb inc aad pop cli ljmp inc or lcall xor (bad) (bad) mov mov and jl out sbb mov cmpsb aaa xchg xchg movsl cmp (bad) (bad) pushl mov dec jmp inc (bad) mov dec sub cmpsb lret or (bad) fdivrp mov out xor enter je je mov jecxz (bad) (bad) inc jp movb cmp ss add aas push out scas push lea inc cmp lock xlat sbb es add sub fidivrl sahf inc cmp mov out movsl ljmp add jle mov test (bad) (bad) (bad) (bad) lcall inc (bad) cmc or ret dec js mov xchg mov jns mov inc shrb dec fildl adc pop testb (bad) dec pop cmp test and jbe (bad) (bad) ljmp lock push push cltd jl ffreep and stc push leave pop add out cmp (bad) (bad) jmp into outsb popa mov jae cmpsb pop rorb lret (bad) pop inc lret ljmp (bad) (bad) (bad) push jmp fnsave sbb pop sub cmpsb dec jb dec jecxz cmc inc push insb mov sti (bad) (bad) fcomip cs sub nop les sahf mov cmp push pop ds xchg clc xchg (bad) (bad) jg adc iret and dec xor in xor jmp jbe outsb (bad) (bad) (bad) jmp jbe gs mov stc inc jle adc add pop iret pop mov add ret nop jne mov (bad) jg (bad) jns xor scas push dec jp lret daa and add (bad) (bad) mov pop dec mov dec inc movsl call jno ret jmp mov (bad) (bad) push inc lds add mov jmp fstl jg rclb dec jge push (bad) (bad) (bad) incl inc out imul mov aaa xor push pusha jecxz xchg mov (bad) (bad) jmp sub in cld mov and pusha imul cmp xor (bad) (bad) (bad) call push add ds sbb pop sub movsl mov jg test or lcall (bad) incl and jo arpl push jne mov js ja cmp lods xor jmp cmc loopne or fimull fwait dec lcall mov mov cmp addr16 mov mov cli sete cs inc repz decl push scas fistpl add sbb sbb pusha and (bad) add addb mov (bad) (bad) pushl mov cmc repz sbb or std push cmp adc and pushl push cmp jbe sub mov data16 add mov (bad) (bad) (bad) call push mov push cmp xchg pop addr16 sub mov (bad) mov pop mov (bad) jb cmp addr16 (bad) (bad) (bad) decl adc inc cmp std cltd int movsl mov xchg adc add jbe insb mov xchg inc pop lock (bad) pushl outsl xchg mov xchg mov arpl js add sub pop pushf sti cmovnp out lods jl icebp (bad) add adc xor jbe inc (bad) (bad) lcall lods ret mov dec in and cmp mov pushl jl imul outsb lret pop mov push (bad) (bad) (bad) jg pop mov add adc loopne cmc aas sbb mov mov in ds mov sbb lcall into (bad) sahf jg (bad) jg inc ficompl xchg push pop dec adc add xor (bad) call push mov mov cmp xor xor mov (bad) pushl and sbb addr16 scas lea hlt popf push (bad) mov dec mov out xor (bad) mov or out jmp or loop and add fwait inc jl adc inc jb or pushl (bad) (bad) pushl jl es (bad) arpl es adc mov (bad) (bad) jg jne jmp cmc fs cltd adc dec addr16 pop cmp dec adc idivl cmp aas add pop les xchg pop inc (bad) jo cmp (bad) jg test push mov pop leave adc lods arpl mov (bad) (bad) incl xor and fbld ret repz gs push fmull mov decl fdivrl push cs (bad) popa xor mov mov fcomip ja sarb push enter or (bad) (bad) (bad) (bad) cmp iret subl nop scas sub mov pop and sub in aam sub cmp (bad) (bad) jmp (bad) je nop stos lea imul repnz jb cmp or lea (bad) (bad) mov ret cwtl stos addb lods xchg jp imul repnz adc scas outsl cli (bad) call cld orl rcll subl (bad) (bad) (bad) pushl imul (bad) cmpsb push stos adc outsb push lcall les icebp shrl fwait (bad) (bad) mov jnp sbb mov pusha mov fucomp ret mov pushl sub fidivr and subl ja insb (bad) (bad) (bad) lcall cmp push push xchg cmp jnp sub jb dec push xor add data16 mov xor adc (bad) (bad) ljmp xor pushf lahf (bad) mov push imul cmp mov (bad) out ss mov lret or jb lock out mov dec (bad) sub iret xchg ds fmulp lock aaa call inc cmp xchg fidiv int3 mov imul inc pop jle jb pop push jp lret fistp cmovo (bad) (bad) jmp in mov sub stc (bad) hlt sar sarb in out iret xchg outsl adc mov lcall jecxz lret or jp js add (bad) jne scas clc (bad) lcall ss loopne dec aad pushf sbb and loopne rorl shrb js das mov imul mov xchg mov test es call push and lods push pop fdivrp mov jecxz stc inc jbe loop mov fcoml (bad) cmp scas icebp jle sbb xchg cmp jae dec mov fcomip fistl cmp dec (bad) inc xchg dec call sahf les (bad) (bad) fldt cld ret lcall iret ret (bad) repz out dec add adc jl (bad) (bad) (bad) call inc lods jecxz xchg insl imul mov push add cwtl adc inc fdivrs (bad) incl out xchg enter mov xchg sbb cltd gs (bad) pushl in lret mov jge pop ret cwtl cmp mov (bad) (bad) mov dec aam movsl adc jecxz fcompl cmp (bad) cli hlt dec mov ret inc adcb push or insl dec add fidivr push out xor cli (bad) pop rcrb popa aaa add cs inc xchg ss jl xor rolb push clc adc jb stos mov sub and test (bad) xor cmpsb fcomip sub insl mov fldt push insb adc int3 aas mov stos mov (bad) mov or push nop outsb add divl adc push pop pushf out mov and (bad) ljmp clc mov xchg andb js loop hlt fldenv or mov mov (bad) repnz (bad) (bad) (bad) ljmp loope fwait cmp sbb cmp inc std ds push lahf jmp xchg pushl sub mov sub and or (bad) xchg xchg scas mov (bad) (bad) jmp mov push mov xor mov mov ret (bad) ljmp je xor shll icebp xor (bad) neg add into mul push test (bad) (bad) (bad) jg es popf pop rclb mov mov (bad) in repz jp lds (bad) ljmp decb lock imul sub andb test jle mov arpl insl or adc mov addr16 mov push mov (bad) (bad) jmp mov mov (bad) das sub mov or mov cs fisubrl enter notb cmovne pop cmc (bad) decl aas movsb jmp jnp iret pop push sbb dec cmp cli pushl std add les sbb lods jne jmp in dec addl out or mov call ret inc lods jb call out sbb stos and mov (bad) (bad) mov outsl test push xor adcl movsb in cwtl iret xchg inc or lods loopne push cli (bad) (bad) pushl jbe adc insl add mov pop mov mov mov test (bad) pushl fnstenv xlat ss stos add xor mov fildll (bad) (bad) (bad) decl rolb gs mov mov in lock test pop stos outsl xor jmp sub ficoml (bad) push and aaa arpl adc (bad) (bad) (bad) decb popf add inc test pushf and cwtl pop pop dec pop arpl gs (bad) (bad) (bad) (bad) inc push cmp cmc pusha xlat std je rol lds mov jae add jnp nop inc (bad) incl pop xor xor enter test incl jl (bad) in xor rclb jo or cmp mov mov push (bad) lcall dec lret push jb jb xchg or push ficoml (bad) (bad) (bad) call je (bad) ss inc inc sub xchg sub mov scas (bad) ljmp lcall aad mov ret stos ficom dec mov adcb inc movsl cld push std sar jecxz decl pushf (bad) lds mov repnz mov and cmpsb mov pop fmul and xor inc loopne push into ret push (bad) ljmp cmp sub (bad) pop and das imul (bad) (bad) ljmp add jp jg cmp lea cmp inc pop ret loop xor push test pop ljmp clc lcall iret lods push adc cltd pop insb movsb pop cli pop mov jbe icebp and sbb loop xlat (bad) shrl popf inc mov mov fs mov cmp mov hlt scas mov jns dec mov es icebp (bad) jne (bad) jg lcall orl add movsb dec push idivb ds xlat notl (bad) (bad) ljmp mov xchg jmp push or fmuls aad inc sbb jmp cmp (bad) (bad) jmp dec das and fisubl mov dec sub ja mov lcall movsb insl hlt mov rcll or daa push in (bad) fmul aaa test or (bad) (bad) decl daa xchg push jle jmp cmpb out fnstenv push rcrb push ret push add ljmp pop outsb add inc test icebp dec aad mov sbb lods js sbb ljmp mov movsb inc xchg ds (bad) mov sbb leave or pop (bad) (bad) (bad) ljmp mov ficompl (bad) cltd lcall out push sbb pop nop bound shll lock (bad) fidivr lahf jp cwtl pusha data16 xor mov dec adc (bad) (bad) (bad) (bad) mov mov xchg xchg insb jae sub idivb xchg inc orb push ja loop hlt jae push push sub (bad) decl jnp out mov add cld dec rorb mov fsubl (bad) (bad) loopne adc (bad) (bad) lcall push cmpsl adc push mov push or int push js jle add (bad) push (bad) (bad) (bad) call jns (bad) sbb push ja pop ret pop mov aam cmp adc (bad) (bad) (bad) lods cmpsb icebp repz notb push test ret mov sbb mov push lret cmpsl adc rorb loope movsb adc (bad) in jns inc fsts popa jle cltd scas shll into add es jmp fimull sub xor leave jnp enter mov mov (bad) jne in scas adc pop loop pop mov (bad) (bad) call (bad) std pop pushf out hlt push icebp in jl pop or mov test shrb (bad) ljmp push fdecstp mov pop pop mov roll cwtl shl call adc jmp or mov inc (bad) cmpsb sbbl (bad) jmp aaa repz popa mov aad and mov cs (bad) (bad) jg addl call or or xchg outsl and (bad) (bad) jg rorb (bad) call dec (bad) push cltd out dec xor scas lds sbb or xchg call jge je (bad) movsb xlat jno pusha mov movsl fwait jno sbb decl pop sbb xchg (bad) jecxz pushf mov fstl cmp pop xchg lahf push std mov lock loope jg call inc dec out sbb inc xchg push rcrb mov mov push push (bad) cmp inc aaa xchg cmc std cmc mov pop repz outsb and mov or sbb testb cmpsb dec leave jb mull std js outsb or hlt cmp (bad) pop idiv (bad) jmp js mov int repz push mov loop or xchg add sub mov (bad) clc call pop pop and repz (bad) (bad) lcall je jb mov lret push hlt in shrl addr16 mov arpl ljmp cld push in in pop in sbb xor xchg cmpsb and (bad) sbb cmp lahf int3 in mov dec mov push add orb dec jmp movsl lods xor test (bad) incl repz loopne dec pop mov test fdivrs add sbb je and push xchg sub mov xor xchg sub push jbe les and outsb sbb xchg (bad) out inc sub nop sub fildll mov out and xor and mov add mov out push jne clc fcomps or (bad) fild gs (bad) (bad) (bad) lcall inc jne daa mov daa iret xor daa xor clc sbb push leave mov mov arpl lret or xor fs stos jb int3 imul jae (bad) (bad) (bad) cli dec mov adc arpl or out jnp rcll pop jmp cmpsb xchg fldl (bad) (bad) (bad) in jns sub lods in cs mov int3 jb cmpsb int3 popf or (bad) (bad) (bad) pushl sbbb pop mov mov xchg xchg ret cmp or and mov adc pop mov sub lcall sbb jns xchg sub inc mov mov (bad) lcall rcrb sbb incl or ds sbb insl sub mov (bad) (bad) (bad) ljmp xchg and cli and gs in ret cmp xorl push push lret cwtl mulb data16 xor push push jbe (bad) (bad) jmp cltd inc sub scas xchg inc in ljmp inc dec ja mov xchg and incl aad sbb repz push jnp mov sub mov mov cmp or dec xor jae fwait jmp divb xor shrl sar (bad) decl stos cmp sahf bound aad test pushf mov mov mov xor or mov dec xchg (bad) ljmp inc push inc fsubrl insb sbb das cmpsl rorl loop adc cmp jg (bad) ljmp sbb mov mov lret mov xor inc nop pushl sar andl test dec (bad) pop sbb (bad) (bad) jmp push add dec cmovns leave out jns push into popf pop jl sub das js iret mov (bad) incl pop adc mov push mov inc cld push std and push lahf push lods mov clc (bad) decl sbb mov stos push daa and or mov xchg jns daa (bad) (bad) (bad) incl (bad) aas (bad) pop cltd pop stos iret sub lret inc push fabs movsb lods lret test addb scas or (bad) (bad) (bad) lcall mov into enter push mov mov sbb (bad) inc push jno xchg in les pop (bad) add fstl loop (bad) push jecxz cmpsl jl add and xor jns das and ljmp xor pushf adc (bad) (bad) cmp jae push ret dec jo loop pop outsb jp sub lret lret (bad) (bad) (bad) push dec inc pop xlat lods xchg mov gs js pusha xchg xchg aaa les in or fidivrl (bad) (bad) incl jno cmpl add subb dec test push dec mov push push std mov adc pop adc xchg and lea (bad) (bad) (bad) (bad) mov pop dec nop dec add or loopne mov enter js fcomip (bad) (bad) decl xorl sbb in push call or fdivr (bad) (bad) decl mov (bad) mov dec jb sti sarb cs sub or lods jl scas xor adc (bad) jmp jl ret stos sub icebp xor add (bad) (bad) incl ret out mov es pop mov test stc inc call (bad) inc outsl repnz add or in int3 mov and ja hlt mov imul inc ljmp xchg fwait cmpsb add mov lahf xor (bad) mov je and xchg ror mov (bad) jge arpl and inc pop (bad) in hlt imul (bad) ljmp pop mov data16 sti mov sbb dec (bad) setb es xor stc popa inc cmp inc arpl adc dec jno dec out cld punpckldq ds fisttp adc mov add lahf add mov pop cld (bad) (bad) (bad) mov lods es stc pushf flds rcll pop sub mov fisubrl test add mov jle shll mov cltd sahf or (bad) (bad) incl inc cvtps2pd adc inc aas xchg fs lcall add pusha aad scas mov mov cmp cld mov pushf and adc outsl (bad) stc repnz sbb and jnp mov cmp sbb (bad) (bad) (bad) call xchg (bad) leave xor inc mov dec pop stos cltd ja lods mov idivl mov dec es mov (bad) lret movsb mov inc mov jmp adc push pop orl push mov mov scas insl shl shlb push mov sbb outsb sub clc hlt movsb sub pushl xchg jbe js ljmp xchg fwait stc in push push (bad) mov pop or int3 push cmpsb xorl push and (bad) (bad) (bad) (bad) jns adc pop fnstcw adc (bad) pop push outsb ret and rolb adc cmp push (bad) (bad) mov jo stc xchg inc mov inc arpl sti mov add (bad) (bad) (bad) (bad) cld movsb and ljmp and (bad) cmpsb cmp out pop mov cli jle fisubl ret jnp mov adc mov (bad) jne subl (bad) (bad) (bad) daa mov or lods leave jo lea notl jl xor and jne push test dec sar (bad) (bad) decl je mov pop push ljmp dec mov pop rorb (bad) (bad) (bad) jg out xchg and loop imul inc xchg jns jl outsb cmovo aas mov (bad) (bad) (bad) inc mov bound mov popa pop adc (bad) test out sbb mov out and (bad) (bad) (bad) ds fs jmp es cs js inc push xchg mov ds jp sbb (bad) (bad) call negb adcb jne repnz adc jae cmp push pop sub mov mov mov mov (bad) (bad) (bad) jg icebp lods xor loope pop aas mov pop mov arpl pop outsl (bad) jne (bad) push pop (bad) (bad) ljmp pop sbb aad jae lea sbb mov loopne (bad) (bad) (bad) call test rol adc lea ss sub add bnd out cmpsl lea mov (bad) (bad) push or add stc cld jno mov push (bad) push nop (bad) (bad) (bad) jg push sbb mov imul in mov push push mov test jne lea mov mov or (bad) (bad) mov push push push push call mov add test je jle movzwl std in testb adc push push push push dec add (bad) jle inc pop mov pop pop ret mov or adc pushl jge lcall test jle insb rorb push push mov jbe jbe andl or pushf pop xchg mov rclb push or je adc add jne sub sbb mov mov lea andl popa or mov mov outsl aas repnz jo roll mov or mov ret (bad) jne jl cli addl add or xchg jo push mov fstpt adc pop sbb and or jne test je movzbl xlat pusha dec lock jmp mov jp or incb pop sahf js jmp andl and xor push push push (bad) push cmp push cmp out sbb mov (bad) (bad) call pop pop pop pop ret ja sbb sub imul dec and enter outsb lahf mov and sbb cmp jne cmp je xor pop lock or add in adc loopne xchg push sbb nop or ret mov test clc or pusha or dec lock cld mov push subl cmp ds sub jp lods adc and inc insb mov push mov lea push es shrl loop mov in mov int3 sbb jl mov adc push pop and loopne sbb in push enter sti pop mov mov xorps movlpd sti mov test ror adc add mov mov sbb and pop out out and ljmp fild mov xor xor loop cmp movl es enter test sbb add lods ret cmp push int3 xor sub idivl lods (bad) cmp adc mulb in dec scas arpl mov insb add push xchg mov lea ficomp loopne xor xor adc std add add adc or jle cmp (bad) outsb decl shlb mov stc (bad) loopne xor mov mov xchg out cmpl negl sbb stos push pushl sahf and jns (bad) mov sahf xchg test leave je mov push xchg adc or mov pop cmp pop xor pop fimull cmpsl xchg call rcll in mov or mov mov stos mov fimul and or sar sbb loope shr or mov adc add push push sbb ljmp mov rcr push mov shr and (bad) dec stc sbb push (bad) add or shr es add sbb jl mov and mov and push inc and movsb mov mov mov push mov xlat (bad) clc or mov int adc and or scas mov invd (bad) adc (bad) pop xlat lcall mov mov mov pushf or out repz into mov or push adc lret adc iret jne jg mov adc out mov sub mov ljmp aas fadds leave subl int3 mov pop xchg cld pop out dec add cmp push jg adc rclb adc or (bad) jle arpl ret cmova (bad) inc jg sbb mov (bad) jns xor mov inc jmp cld add cmp jne mov mov mov jmp mov test je je enter xor xlat pop or (bad) test inc inc loopne lock adc shrb cmpsb loopne pop push hlt enter jge add call add push push push incl mov je mov es or mov mov pop aas or lret fmull jns jb jl and push fidivl lock ss push cld mov pushl mov shld jp shl or xor fdivp rcr adc cwtl dec sbb mov dec roll mov lea clc aaa xor add cmp ja cmp mov scas and cli insl sub mov sub je sbb fdivs jae lea jns dec mov mov nop pop sub jbe inc ljmp movups sub shll (bad) xor sbb push and enter fucomi shlb inc ss and ret divb sub sub mov test add popf mov xor mov xchg or inc dec jb inc shlb cmpl enter (bad) sbb es xor and leave cmp xor and mov rclb dec adc xor sti lahf sbb inc push incl or out add divl push int3 movb (bad) dec ss push in mov int3 push mov je pop insl dec jo stos repnz xor int xchg jne pop and das xor mov int or sbb pop mov jl repz or sbb sbb or adc adc adc inc adc xchg pop adc adc add stc ds add aad rcl iret add ja sbb xor rol enter mov push fcmovb call pop icebp std repnz ret (bad) (bad) lds adcl hlt dec add pop (bad) adc ret add or cmp (bad) jecxz out mov cmp push loope fisttp jg sub mov aas inc into sub pop lods loopne ljmp fstpt (bad) cs inc jp ret xchg xchg sub jb jg pop lea ret add rol mov sbb (bad) jo fldl ret jb test push xor mov cmpsb push icebp adc test xor lea xor mov aas lock sub ss push jae add jns jnp ret or or cmpl nop orl xor and adc addr16 fnstsw add xor repz sti push ret jns nop add iret cmp (bad) sub inc subl ror sbb subl jo jne sub sub pushf mov jnp jge jmp xor pop clc test add adc jne dec cmp add shlb mov mov clc add push push popa dec cmp pop ret and jne push push add call and adc rorb dec add jne jmp out or add xchg es sub insl or mov push dec aam mov int3 mov inc jg cmpsb mov or pop and push xor sti fdivrp push fmuls push or adc add xor push roll int rorb mov adc inc push fisttpll ldmxcsr jnp add (bad) or hlt fadds cld or aam or loope jo sub mov pop inc fnstcw (bad) outsb lods mov or add test leave sahf mov mov orl repnz cmp neg or push daa sub pushl push lea scas lea mov lock mov pop sahf popf dec loopne mov daa out and mov jnp pop push inc pop dec sub loope cmp push adc sub sbbl imull les or push cli xchg pop add mov sub mov clc jle imul call push bound fdivs cmp xchg or (bad) push inc sub sahf adc mov add mov sbb in repnz jle push sub sbb sbb adc les test cmp sbb sbb inc sahf (bad) out ss sbb or (bad) pop (bad) stos push scas daa cmp add ret bnd or dec cmp (bad) out incl enter adc push sbb rclb push imul add cmp je std mov pop pusha cmp jb movb adc jb add outsl xchg dec mov jne mov mov (bad) sbb jne xor ret mov pop idiv dec mov push add add (bad) je push xchg lock inc lock xchg push xor or jne je mov add cmp popf loope mov sbb iret or das push rclb jmp or testb mov sub mov es jp and jmp and pop neg pop sbb and adc sarb mov sub or les add aaa mov into add and mov pop and sti sub push lret loop call cld add cmp adc enter cmp mov jne mov or cmp add aaa sub push outsl jo push jnp mov inc and popf fsubrs in jne (bad) in (bad) in jmp rorb cmpl mov push cmp gs and shl xor jo in push addr16 cmp cmp in das xor psrld loope xchg dec mov cltd or test inc ds xor mov jmp fnstenv (bad) mov (bad) not and in loope in fmuls push inc lret pop sbb push add cmp mov loop sti jbe add push fnclex jmp sbb jp rcrl jo cmp aas insb and dec xor pop jns rorb push sbb jle or pop or mov xor and test xchg push shlb pop sbbl mov imul pop jae sub mov (bad) mov sbb pop icebp bound cmp cmp je inc dec mov and dec or cmp mov pop dec nop imul and faddp std push ss jmp mov shrb fmull xor cmp je push fwait push xor daa add push jle ss in mov or dec adc (bad) xchg or ss xor push xchg sbb jmp pop mov out adc sbb push or xchg out push in push mov scas test jne adc add stos push cltd mov jmp pusha or inc add loopne push push sbb cmp nop ret mov out popl jecxz xchg enter aaa es (bad) cmp shlb and add js iret or xchg xchg es js call xchg es fmuls dec iret iret int aam or mov pop addr16 mov lock in out sahf (bad) inc shrb mov xchg lahf sub dec add movsl push add (bad) out in test imul sub pop lahf xor xchg fsubrs fdivr or in ds pop imul and inc sbb pop adc sti add dec add add orb jo pop add dec dec hlt add fildl sbb mov adc adc push mov lock push push pusha imul lea push cpuid mov pop mov mov dec ficom in pop mov loopne xor sbb adc outsb je insb or adc xor neg repnz cmp leave xor shll (bad) test cmp and sbb jo jnp jge cmp push or sub xlat das dec scas adc clc or adc push orl pop sub or lcall clc pop (bad) xor push pushf jmp pop lods add fcmovnb cmp fsubrs je pushf mov pop pop je,pn insl iret popa jo add clc xlat add in out or adc lidtl shrb and es push add loop jne mov mov jbe es mulb mov mov add daa inc adc cmp fmuls xchg rolb cmp push push push cmpl jb push xor lea int3 cs cltd mov push push inc dec cld mov std sub mov or jl sub dec xchg movsb or jns popf je jo insb lods push mov xchg adc mov inc cld fsubl pop fisubrl cmp sbb sbb inc or jns out jg inc mov xor lea neg pop dec pop stos stos mov mov jge clc mov subb neg adc shlb cld arpl inc push push mov mov aam add push loopne mov jmp mov popw ljmp or jg cmp insl loopne and jne xchg adc and cmp jae sbb or dec das lock (bad) lods (bad) push sar bound mov loopne pushl mov test loopne inc xor lds inc clc cmp push push popf jo mov adc push add inc push repnz in sbb clc aas movsb mov dec out mov dec test mov rcrb hlt dec outsb mov and sbb push mov inc out xor in fwait (bad) std int or cmp jne mov test jne rorl inc into loopne mov ret notb fcomip rorl add xor mov xor add fistpll xchg jp hlt push repnz dec mov xchg mov fisttpll ret or ret push or or adc sub xor push pop pop aam rol push xor ja jp test sbb ds push push rclb push test xor in fsubrs ljmp and icebp lret sbb jae cmpl dec adc and push jne xorb data16 dec mov mov fcoml lods js,pn sbb cmp ret (bad) and cwtl testb sbb push test xor mov push mov xor adc int3 pop pop xchg jmp sub mov (bad) mov jl and jmp and push loop mov mov mov les scas out inc sbb add sbb mov xchg (bad) cmpsb mov add xor sar (bad) or xor push or inc shrl pop jmp fwait outsb push adc or inc incl inc or jb jecxz jae dec xor (bad) jmp jp lock pushf into adc std cmp stc into cmp inc dec add mov in add jge mov inc outsl ljmp xadd lea add orl fisubr push sub add jle jle mov add add mov adc stos dec fiaddl sbb jo fsubrs and out or dec or ljmp test or pop jmp mov push mov add test das jmp stos ss add adcl mov lds xlat mov mov mov test pop mov out out fimul mov push push je pushf xor dec or or mov pop std es (bad) mov cmp jne pop pop aaa imull ja dec ret cltd hlt or cmpsl dec add mov stc adcb ss inc sbb mov mov mov and lea adc push insb jp xchg push or dec sub cmp add ss int test mov adc in int aaa inc enter fnsave push add inc loope sbb sbb test mov mov mov and mov add fnstsw cmp rolb cmp jle jle stc orb mov out int add repz jo mov ret and or xorl add push jo int3 lock outsb push aas sti and sub test lea xchg out fistl pop push inc adc and inc aad test lea pop jg pop push roll (bad) out jae cmpb sbb test (bad) imul stos sub es push (bad) je lea push imul add sub in and repnz mov (bad) mov mov out clc je sub xor fwait or mov mov jne test ret je adc adc or roll (bad) in mov or clc jb rolb imul mov add loope push jecxz or pop ret adc stc jle test loopne cmp subl test (bad) nop dec out jae mov pop sbb lea pop jg and cwtl mov add sub sub insb sbb cvttps2pi push or out neg mov dec hlt inc hlt mov adc pop popf mov inc and xor mov pop outsl push cmp (bad) pop sbb ret xchg lret sbb in outsl and xor ss xor or and jb mov or or push addr16 enter cld add add mov adc mov shll adc cltd xchg xchg mov sbb mov push je mov pop fldenv (bad) repnz decl shr rep and jmp mov or lods mov ja nop cltd pop mov mov and fisubl daa or add (bad) out jge cmp push pop rcll xor decb adc lret decl sub jne gs aaa jl shll sub out add jns pop add inc nop or pop lcall add pop and pop das daa dec (bad) inc adc and cmpsl sbb jo jb,pt sub push push jl lahf out dec adc push and inc outsb push repz stc jbe jle inc dec dec jg repz out pop jg decb xchg stos or and lock and fsubrp and stos mov mov push dec loopne (bad) loope jmp inc dec inc cld pop das sarb shll pop stos das lock icebp lret jmp pop movb mov add cwtl xor jg ljmp push daa mov or pushf push mov in cmp in data16 mov add lea mov ss mov add sub sarl mov pop in je loop add adc mov mov add lahf test mov inc inc dec jne jge roll iret out js inc sub rclb ret mov je fcmove mov shr or hlt (bad) dec add mov dec in xor pop cld sbb daa xchg aas push pop imul and dec decb in fdivl add fisubr jl xor inc pop fldpi in mov in dec pushf aas inc lods pusha lcall loop cmp pop add push cli add shrb rcrl push movsb dec mov lea mov lret es call jo add scas and pop pop pop leave mov ljmp xor call cmp pop incl ss (bad) sbb fistpl pop jl mov out jbe ds and ja cmp push lea sub fwait jo or push stos sbb pop jo mov fwait and rol sbb cs pop mov push mov jbe xor cmpsb or mov mov jp mov mov cmp je call mov adc jmp mov (bad) das in jne ja les jno sub jecxz jg fnop jbe les add mov and (bad) cmp pop add ds xor xchg enter pusha pop push inc push and pop jne push inc pusha cmp enter inc sbb and jmp sbb push adc out jne pop icebp mov iret lods push jne push push xor add ret jmp clc cmp cmp cwtl pusha jmp lods push fs push inc adc add push pushf lods and adc loop inc dec adc in sub jg out pop scas push push sbb sbb add hlt test push imulb push jae stos pusha push imul enter xchg lods mov add dec jbe sar pmuludq sarb rclb add jae js js jae push pop in ds test fcoml fdivs orb xchg dec clc lock popa dec adc xor jb or lahf into xchg sbb xor jo push jns inc jb push pop rep pop shll adc mov add lcall mov mov (bad) sbb add cmp rcrb mov or (bad) mov std fwait inc dec and push push push push push sub ljmp mov cli out push mov mov pop sub sbb je fidivrl std xchg cli adc bnd lea lea or cmpl int3 push jo inc add xchg inc jo sub popl sti not lods add inc add and fsubrs push inc dec push enter push mov add adc sub sarl mov dec data16 (bad) jmp movsb cmp cli jno sub mov sub push cli test push rorb xor mov dec outsl and icebp mov sbbl push cmc sub cmp sbb in scas psubsb fsubrs push pop push movsb mov pop sti push out data16 punpckhdq cmp pop jmp dec lcall push and fisttpll pop fsubrl or or addr16 push push jbe add sahf in push lea pop jo imul jl or std bound cmp push or mov enter jl outsb pop inc mov rol jno push push movsb and mov cmpl pop out push pop push or push or mov push sbb dec push mov adc aas addb imul loope or call sub pop ljmp adc add add or scas inc dec test (bad) push loopne mov pop mov adc icebp mov cmpb testl cli mov mov das cmp push je arpl mov and mov jns jmp clc jmp rcrl sbb inc cmpb orl sub (bad) nop pushf cmp rolb and cmp push ror test pop mov or add cmp rorb mov mov add ret inc add aaa mov les and push insb lods cltd xor lret test mov (bad) mov mov ja je cmpl dec push imul nop lret jg outsl movl xchg adcl cmp test xchg xchg mov jns (bad) lea lea adc adc in lock iret push shll xlat pop mov dec (bad) mov cs mov enter insl add pop mov pop pop int3 outsl cmp js lret add adc mov in cmp cltd adc adcl lods sbb xor pop jno xchg pop fiaddl data16 mov scas sub sbb xchg mulb mov cmp cmp sbb mov cld test mov adc das jno (bad) lret enter lock jmp mov mov aaa pop enter cmpsb adc pusha push xor fs push adcl loopne cmp ss xchg inc add xchg das sbb hlt leave fistp mov xor mov mov into test and addr16 sahf jmp push xor (bad) adc test sub add cmpl sti out sbb cmpl aad mov inc (bad) jle push or adc adc faddl ret nop (bad) and or push sub or test (bad) pop cmpl inc adc rcrl inc insb rcrb add ficom and rorb popa sub dec ss xchg cmp imul cli pop xlat fwait add iret in add clc cs cmp add out into bound push mov jo lahf pop pusha xor xchg and test popf mov lea aaa rcrb movzwl fdiv jmp mov data16 push pop cmp je inc lea adc rcrl lcallw iret sar lea add pop push push jne mov or (bad) subb inc sbb incb and cld pushl jge inc push sbb push movsb lea (bad) sbb scas mov out pop out or aaa mov imul push inc pop push add add test add ljmp lea jle jne loopne mov jbe xor inc mov pop push rcrl add pop sub mov int3 jmp push pop jmp sbb xor pusha test jl jae jno decb add dec or push or mov sbb jne data16 fwait or add (bad) xchg dec (bad) xchg mov inc sbb cmpsl ret push adc add (bad) and sbb test in ret push loopne imul push add jne cmp mov dec mov sbb mov pushf dec scas or inc enter loope loopne pop xor jmp xchg jge xchg jp sbb inc jp rolb repnz sbb mov push call rolb pop sub xor mov repnz and xor mov adc push fmulp xor ror ror outsb mov in les dec lock ret or outsl jo jb cmp je mov insb xor ror pop retw mov mov mov call jbe mov inc add dec dec cwtl xchg mov adcb dec (bad) dec pop or dec hlt jne mov lock push rcll cmp jmp add dec push andb popf pop mov scas enterw lret xor into jle inc mov or in add fist sbb add dec sub inc dec push sub add mov fmuls aas orl cmp dec sub mov cmp ja mov pop adcl sbb push push xor in add or sub fs cmovno add mov cmp pop or subl or sub stos nop mov scas in sbb not stos mov cli and mov je hlt adc lds push push cli add lock std add dec add sub mov mov lea fsubl mov inc add sub xor pop andl das scas jg inc in push arpl mov xor xor int mov jmp (bad) cmp jne xor dec jo mov nop add cs ss jmp clc jl pop dec mov push cwtl popl or les jp jmp pop fiadd push cld clc add rolb inc mov scas call xor out cmp or pop sarb and mov adc out push adc mov push lock sub nop cmp jb cmpb xchg pushf ffreep (bad) and jo mov je mov daa pushl pop xor adc and push loope or dec adc int3 mov mov ljmp lock xchg in jge mov ret push jge stos add sbb pop pop stos insb push pop (bad) js (bad) out lea push je or je jecxz push loop mov mov fild test (bad) inc add jle pop mov (bad) add mov cmp fidiv wrmsr push push adc fucomi push cmp cmp je cmp jb fisttpll cmp xor jnp ss fs cld xchg outsl loopne jne sti outsb sar dec mov notl je fucomip dec lret mov cmp daa add jmp add andb iret pop cmp je (bad) repnz pushf inc (bad) ret hlt (bad) pushf (bad) mov fisttp or jmp aad or dec inc hlt ret ss es xor jo ja sbb jb mov xor push in xor bound test and or inc and or jmp incl rolb add or mov daa xchg mov loop pop pop shrb xlat or jb les inc (bad) jmp push fldcw sub pop adc mov movsb mov sub cltd fidivrl push lods shrb iret lea add inc roll lock jmp jecxz jbe pop inc push xor pop push cmp sti fsubr aaa andb pop pushl jno sub rolb call rorl cmpsb (bad) jne lea sub sbb fcompl pop je cmp or add sahf cmp mov xor aaa adc loopne add arpl sub sbbl push pushf test (bad) idivl or popf add shl sub sbb (bad) adc add mov sub xchg loopne inc ja cmp or jle sbb sbb rcrb or ja push xchg adc aam out pop imul inc adc ret and cmp cmp scas or dec push dec mov sub cmp xor or xor hlt or sbb not and aam push add adc or and cmp fsubs jmp rorl xchg pusha mov or lret or lea xchg cmp pop test sbbb adc in or cld pop bound mov mov and dec js mov stos mov dec lods imulb pmaxsw outsb adc push sbb cmp push adc push add in adc bound mov sbb cli int3 xor adc scas or pop cmp sbb test loope push leave das pusha movsl jae js loop or jmp fdivr dec dec and add dec (bad) pop mov mov mov js add pushf stos inc push lret fildl inc add inc xchg in xchg (bad) int3 loope outsl icebp loope,pn adcl lock jp cld je adc outsl or rolb xchg dec loop bound push dec outsb fisttpl inc inc jmp aas sbb je shlb add (bad) lock xor sahf imul addr16 sbb int3 pop movsl lods lds icebp cmp ja pop inc jmp xor jl add push out lods and cli insl or out or rcrl sub adc (bad) mov imul pop push push sub inc cld mov mov popa adc loopne aad push lods pop div jle jb stos add add (bad) adc xchg inc push jl (bad) mov decb xor fcoml adc jo pcmpeqb adc or inc and lea inc lods add dec mov push mov jae push pushl psubsb in push out test jne mov sbb adcl add repz jne lea loope or push xor xchg sbb pop add std inc push mov jbe cmp movsl rclb mov int3 clc in enter jb sarb loopne in hlt pop dec std and dec xor (bad) call insl in adc jcxz in enter push ret insl leave (bad) loopne lea push prefetch movsb and sub add enter adc jmp xor stc sub push mov push aad fisttpl lods add in mov inc or and movsl jg mov lds inc addr16 mov cmp push push add sbb lock daa xabort jb lea push dec mov nop or push push pop cmp sub scas ss out add mov push test or pop mov push mov fimull test imul (bad) iret mov inc cs das inc mov mov fldenv popf lahf fsubrs add add pop push or cli cmp push je push stc roll cltd inc clc push dec and cwtl xchg imul inc dec lock (bad) int cmpl add add dec inc inc ret add std inc aaa inc push mov adc jp js push cmp xlat sahf test pop ficoml or ss andl sbb or call and pop into insl lods inc jg adc sub loopne xor je or sbb adc xor fs dec cmp sub nop dec es inc mov (bad) pop add xchg sbb bound xchg sub cmpl repz dec lcall mov cmp mov adc push je cmpl sbb imul push pop cmp push push jns push aaa jns pop inc mov xorb clc push dec push insb dec add push or cmp imul xorps in sub test add push rcrb icebp pop leave cmpsl loopne insb pop xor xor or pop add push push push xor fs int repz sbb sbb pop inc neg or sub test movsl out cmp push inc or arpl cmpb mov sbb cmp pop or pop dec scas pop mov push rcr imul add add dec es mov dec sbb mov loope xor mov push shl pushf ret and or and xor jo push jo movlps add and pop pop and sar sbb enter add neg pop adcl js lahf push test push (bad) mov add dec mov stos jmp or shlb inc cmpsb lcall sub push stos or or bound sub rolb ja dec movsl jo mov ja mov (bad) (bad) nop or int inc dec jae push ret daa sub and out dec and adc test mov and adc sub push movhlps (bad) fidivl xor mov and lods imul test jmp push shlb call stc add push push sub call (bad) faddl cmp inc (bad) mov xor mov fwait inc xchg push add sbb xor push inc lods or mov push jae push data16 imul adc dec mov jecxz push and std fstps daa pop std inc leave mov mov ds jg adc pop or insl nop cmp lret mov icebp and dec sub sub dec dec cmc or outsl add (bad) ds lock dec sbb rolb sbb and or adc mov push subb push cmp push push xor repnz nop pop xor inc rol and adc lret (bad) orl rcrb fild je sub dec add push sub or xchg stos xchg mov or mov popf adc dec xchg in dec cmp push pop cmp jne movl jmp sub and push rep jmp cld sub xor shrb andl std rep rcrb xor lea jecxz jnp pop xchg xchg rorb inc sti lea stos add add mov inc int ret (bad) jg mov mov add cmc in addr16 pop mov lea jbe jne xor add mov xlat out sti idivl inc cmp jb mov or test mov dec mov inc jae add and out push mov jle insl cmpb push lea (bad) icebp outsl push add imul push pushl int je clc inc sub push inc jmp inc dec and lret (bad) popf push mov test test orb mov mov adc mov push add mov mov jmp push lea ret push out xchg add add in jae cld scas scas sbb mov inc notb cmpl jbe lea dec mov jmp mov mov or daa sbb pop jne push into psubb bound cmpl add push outsl inc sbb pushf and call call push pop or cs mov inc divb rep sub hlt andl push (bad) cmpsl pop mov jne dec mov subb orb cmp cmp mov dec jne sbb add mov xchg iret cmp dec dec push testb add data16 sahf aaa jp push add add dec cmp adc mov cmp (bad) inc loop pusha jge (bad) or into xchg and dec movb cmp in mov lock ds test ja iret sbb push in dec push lcall cmp and sbb inc gs addl jmp loopne inc pushf push push clc xor out adc test mov xor mov (bad) adc add ja dec aad xor lcall mov cmp mov (bad) xor sti call pushw xor push jmp xchg (bad) mov stos adc ja fwait call or xchg ljmp mov call jbe sbb jb je mov push mov jbe add jmp stos add lods loop popa lret add sbb (bad) cmp or divl ffree add dec and xchg nop add or push cmp cmc mov (bad) cmp imul mov or je mov push push scas out je adc cmp dec nop or inc cs lods cmpsb (bad) cmc cmp jbe enter aas sub cmp (bad) or add sbb loopne mov cli (bad) fwait or fmuls push lea and data16 add insb mov (bad) jne popa push cmp arpl xchg add pop insl sub in push push orl mov jb push fildl push xor mov jbe roll and lcall mov cmp jo adcb lea mov call adc lcall loope lea pop popa nop cli subl aaa popa xchg call sub sar lea test (bad) rcrb hlt or adc addb push xchg in and inc lcall pushf jmp rclb fs or clc push inc adc pushl adc (bad) fadd jns in adc sub lea push pusha lock (bad) inc sahf cld inc jl lock enter stos pop pop loope cmp pop hlt mov cmpw cmp jecxz cmp adc xor pop mov push cmp jl negb push push cmp or pop ret cmp inc or adc ret adc (bad) or push ror andb (bad) popf xchg sub loopne sar imul add xor inc sbb es pusha subl jne lcall jbe std std lock xor cmpl or and notb dec sub inc sub jo stos sti pop push or push xchg push pop pop xchg ss jmp mov xor scas or int3 cmp push and stos add cwtl mov stos mov test and pop add sbb or pop loopne adc mov je add test push pusha jo jo or add jg pop fnsave inc jnp hlt lock push (bad) fiadd push sbb sbb or mov cmp arpl flds orl sbb push xor mov pop cmp cmpsb pop add js (bad) mov push js and jl aam xor sbb jge in or sub lea pop add push push jecxz jne fisttp push sub es pushf shrb int3 test sbb or (bad) xor fstpt lods or jecxz out dec jne in scas pop popa cltd xchg jne loope push add test dec pushf inc pop dec xor rcrb push xorl (bad) and and and jo mov ror adc pop xchg add sub mov test nop ljmp adc xor xlat call cmp xlat push mov int3 or lea inc mov roll sbb shl insb cmc pop inc add inc sbb jne pop les sbb hlt lret or aam cld or enter cmp out or jne jmp mov add insl sbb mov orb nop xchg or (bad) sub push or scas (bad) xchg hlt aam pop int3 xchg jecxz push pop mov (bad) mov incl and lods adc dec daa jne jmp cmp mov movzwl push rorb adc cmp jg pop cmp push jmp test les inc xchg xchg mov xchg shrl sbb adc leave or mov or fdivr rolb fucomip jecxz int3 or sbb sub add inc loop les cmp mulb adc lret mov mov xorb lcall push enter pop ret test ja lods or xorl or mov and arpl mov or int3 adc xor imul or add mov and mov lock ds aaa movsb ret cmpb jne cmpsb test jo dec fcompl orb fsubr sub mov lret jecxz andl mov push pop cltd jns mov mov test insl push int3 mov lods cmp jne push notb sbb or cs cld xor mov and ss cmp into out sbb push inc push sub pop (bad) inc jo lock inc test imul jmp loopne or rcrb jne cmp pop or push adc subps outsl jnp push xor pop jmp add push push pop jp arpl pop sbb ret addb mov sarb (bad) xchg pop loopne or cmpsb xor push push adc pusha mov mov ljmp dec inc mov push pop mov clc je push pop or or push and adc inc fsubrs sub imul fsubrl fsqrt jmp lea pop add and push repnz pushf sub add data16 movsl mov mov sub sub mov adc sar test sti das cmp fildll (bad) and je push test push or add push sbb push in xlat push ret jbe lock stc add inc fimull ret dec mov (bad) mov inc cld and bound ja ret sub xchg adcl push push ljmp sti je (bad) mov leave and es lock push or shlb fs je bound dec test or lods repz push mov lea mov stos movsl cmp and fdivr dec xchg fbld adc push ret mov mov xor js mov insl jo int3 repnz outsb xchg enter push loope or lcall movsb arpl xor je jno outsb inc cld push popa adc push jle mov fnsave arpl lods add pop lret cmp add sub scas and gs outsl into push mov test cmp icebp repz scas pop jmp shll adc push arpl je push ret lret jne cmp xchg sbb and je push xor lret lods in (bad) add pop bound das push sub ret les aaa cmp (bad) into paddsb jmp ss lret cmp inc and or add loopne xor sbb lods lret pop push jl test das loopne (bad) outsl dec insb xor dec call xor jbe mov lea mov add clc add push test push jns adc fimull mov lret push pushl adc sbb inc push in in dec aaa lret (bad) cs cmpsb jp or push inc in bound and xorl or jl jnp jge shrb (bad) aaa jmp cmp std (bad) pop mov lock ljmp adc ja aas (bad) push mov and add pop jmp das cld das insb mov cmp test jb popa (bad) sbb add icebp inc cmp les call rclb jg (bad) jmp sub sar cmp push neg pop aaa sahf sbb push dec push mov jmp add pop lock lea mov mov insb push mov pop or inc sub push aaa and xchg jae mov roll push cmp je xchg (bad) inc (bad) and rclb xchg jle pusha loopne flds push (bad) mov pop aam movl inc fmull andb mov xor ficoml mov fldl push in and js loope or repz daa icebp aad roll xor xor rcrb mov and data16 jne imul iret std roll or mov push mov loopne ss cmp lock pusha sbb outsb (bad) leave gs jmp jae inc mov jecxz jmp xchg test sbb xor ss pop and fwait test test adc lods not js (bad) (bad) jae incl popf insb lods (bad) fdivs mov inc add add insl push call cmp js cld and data16 inc xor push jmp fildl or adc sbb orl add insb test mov test jne cmp jmp test js cmp loope repnz dec clc leave test inc lods in push mov cwtl jg adc pop pusha pop or jo add mov mov mov (bad) arpl cmp mov and cwtl cs pop cs sbb sbb and in test lods cmp in cmp inc xchg pop cs and aam add rcrl mov mov add or mov mov pop mov dec lret sub add mov add (bad) fnstenv (bad) cmp pop push lock sbb xlat push rclb push inc xchg push xchg mov rcll sub mov jns mov or inc and mov insl inc and add add pop adc es (bad) jmp frstor or jne push push movzwl mov data16 adc cmp je adc adc or mov pop push jne cmpb fisubl pop add pop cwtl (bad) lock jge mov mov inc ds les add adc add adc lds dec cld aam lahf xchg lock xor mov test je adc jg (bad) js sbb add pop mov int3 xor sbb ss mov (bad) pop clc imul mov and push push cmp dec insl dec and test popa jp push xor or push xchg cmpb xchg nop inc call fsubl xchg sbb notl dec or add aas lock push mov dec add mov mov orb dec mov mov lock adc add jns push cld pop rcll cmpsb jae mov pushl cmp cmp dec insb cmp sbb jl pop addl cmp sbb in mov cltd data16 pop inc sbb int addr16 jl adc insl mov sbb in add pop sub dec aam out pop sub and cwtl sbb or rcrb lea cmc push jle cmpl sbb jne lcall inc cld inc or cmc lods push push aaa ret fcomps out sub cs mov aas and aad je ss orb add ret cmc and push enter mov cmc or mov or pusha mov into mov movsb arpl dec sbb or nop add or movsl in mov adc clc push push sbb cs lret xchg icebp sbb inc dec push roll daa inc sub outsb add xor add cmpsl push pop in cmp dec xchg add mov ret les in mov push xor push scas push adc ffreep adc loop (bad) aas adc adc ficoml jmp cwtl retw scas test sbb into je mov imul je or xor sti adc or adc int3 add lock mov mov je add cmp je cmp inc push pusha inc scas adc or inc jo mov test pop and mov rol or add add mov xchg or rcrb fnstcw dec leave push mov push pop test or leave or je xchg sub test add push (bad) nopl or orl cmp mov mov mov xor cmp cli lods or pop paddusb lea or iret jmp mov (bad) jae cmp data16 mov fucom mov lret xchg ljmp sub icebp and or cmp je push lods (bad) jb pop cbtw fldcw jb stc cmp into xor xor into into into into or rorb sub sbb cmp imul xlat imul mov into loop pop aaa mov into into and outsb and movsb push (bad) lock dec hlt add mov or stmxcsr fdiv orl jb sarb fildll xchg test ret loopne jmp cmc icebp mov ljmp sub outsl push inc xorl outsl ror leave jecxz call punpckhdq jmp sub je sub mov jle jp inc adc (bad) and (bad) pop cmp cmc mov repz in int3 sbbb hlt or inc test pop push mov push inc xchg (bad) jbe pop add jecxz push popa (bad) jb (bad) jbe in in popa das stos pop add pop enter dec movsl push add add add sub mov repz mov inc (bad) or adc ret push fbld push pop out adc mov sbb mov push mov inc add add sbb and xchg xchg orb adc add jb inc cwtl test adc popa xor mov stos xor cmc bound xor sub jae sub push xor or cmpl xchg jg add jle cmp jl stos sub push dec ja push push or cli jmp sbb dec jb cmpb mov insb sub les add imul aaa jmp add jp test pop pop ss pop xor cmpsl and adc andl ret cmp aad fcmovu fdiv insl lcall jns push in out add inc decb imul in mov add leave jne mov jge lcall loope sbb in stc add mov add dec push (bad) push pop cmp ret test or ret and fs push mov pusha je mov adc enter jo cmp ss push ss add movl shrb test aaa mov adc (bad) dec lcall test pushl (bad) pop sbb push xor dec push popa jo rorb ret or fmul popa and pop pop push pop add aam mov ja movzbl jge adc push push cltd sub shlb push inc pop add (bad) xor and push into pop adc rol jb pushf ja mov mov pop mov or rorb mov push outsb enter lods fisttpl (bad) cmp shrb scas sbb pop ss lea add loope push cmp jle jmp sub rcrb ja js cmp add or pusha nop dec cmpsl iret xchg cmp jo jecxz roll sbb ret js in pop xchg jo push cmpsl or dec and or mov mov lods ds mov popa inc lea adc dec or adc imul dec add xchg lea hlt inc daa fdivp movl fidivrl xlat fcomps sub ffreep xor sub pusha roll rclb push or xor jmp test (bad) gs lret inc adc cmp and gs pop popa push add sbb test cmp dec sarl ss sbb fs cltd sar xor add cmp (bad) jmp cmp rcrb pop add sbb loop cmp sub pop cwtl cs movsl lods jmp adc mov in xchg and out jmp pop jmp daa inc pusha lods shrb push ss push bound sub outsb add jg fildl xor gs xchg pop mov mov cld andl adc or fcmovnu or faddp or (bad) leave hlt es lcall push leave dec jae and movzbl inc add jae int3 dec shrl add add add ljmp mov rolb call xor cmpb push push in xor adc adc or out mov nop js push es xchg push cltd and ret add and adc imul divb sbb mov lds in dec sbb sbb sbb adc push pop xchg lock lds shl aam lock sbb mov inc je mov (bad) test scas jne pop mov inc (bad) or jne cmp cmp incl jmp out sbb jle sti inc shr inc (bad) jne or jecxz outsl add out jmp fimull cmp lds mov push loop jnp mov fmull adc xorl fistp ret stos xorb sbb dec rcr jbe lods shrl test mov cmp ja jmp cs arpl and sbb xlat push push add dec jbe jle rcrl and icebp std sbb mov mov ljmp popf mov pop push sub mov mov mov mov fwait jmp es add pop or clc xor mov push pop dec cmp mov fnstcw in test or or inc cmp ljmp sti mov or jbe mov push lods je adc das cs jne dec cmp add sbb movl (bad) jb scas xlat push add mov or (bad) lea adc push lock or pop mov push mov jnp jg shr data16 fsts xchg ret popf lock xor adc mov imul test (bad) mov ret arpl cld pop push fwait xor mov xchg (bad) das and daa mov cmp jbe add mov inc push iret sub inc or jae mov mov xchg sbb shll cmp sub js pop pusha jbe xchg and pop push jle push test xor lret mov out jbe pop fistp cli (bad) jbe outsl mulb call loope mov push inc mov or pop adc fs pop mov fidivl adc sub dec repz std cmp jne outsb jge add pop sbb insb sub xor or push je sbb (bad) dec add mov mov or or sbb (bad) sub lret sub cmp mov jb jl clc pop add data16 jge test cmp jae mov popa mull push jmp jno pop xchg xchg mov dec gs jae mov xchg jno and ja xchg and push mov mov mov or sub dec add sub and rcrb add stos add jmp insb inc cmpsb pop jmp push or (bad) mov call pop leave adc jl movsl cmp jl sbb pop jl test je pop aaa nop add ldmxcsr jmp ds gs mov xchg rorb sbb movsb or pop or xchg xchg mov lds add jge fnclex movswl push imul shll in cmpsb fisub or data16 fldcw (bad) hlt adc push mov (bad) dec fild pop cld fwait cwtl adc jbe and pop hlt fwait sbb les fdivrl fldz fld1 fdivp fstp sbb je fldpi xor fisubl or dec xchg gs movzbl adc sub add ret push lock and mov jmp fiaddl je movl lock mov push dec mov cltd lret (bad) add mov add js and lcall andl inc jmp xchg (bad) push test and mov rcll sahf outsb and push sbb dec test mov and inc lods bound inc or mov sub cmp or pop inc cmpb lret hlt pop pop and stos gs push or test cmp and and rclb (bad) aaa pop rcr pusha mov pop outsl mov imul std xorl jecxz jno dec movsb inc cwtl sub sbb sbbl add lahf orl push xor testl cmp push in call popf ret jge and inc sbb inc pmullw inc add fsubrl cld rorl sbb ficoml aaa xchg cmp jp mov xor in decl mov mov sbb mov and cld mov lea cmc mov jmp mov mov mov (bad) (bad) inc mov cmp movsb rcll jo mov mov lcall andl xor pop cltd sub push mov sbb enter inc es into mov push call push mov inc (bad) aaa jge sbb mov pop cmp jb in in jne mov data16 pop in imul cmpl jb (bad) jl pop sbb add (bad) out push jmp mov mov mov pop icebp pop imul dec sbb cmc and sbb xchg (bad) cmpsl xchg push pop xor add jge pop nop (bad) pop clc jae cmp test loop and lea sub lcall pop adc fnstsw ss cld jb in sbb fisubrl pop and pop push pop je xor divb sub jmp loopne je xchg inc dec daa adc mov jl sub jns aaa sub enter xor jae pop jge lea adc scas pushf enter sti xchg add insb js sbb xchg sub adc std daa dec or sub add andl fadds sbb inc jmp fistpll jmp lea jae mov inc cmp loopne xor pop cli movb inc mov and inc jl call jb pusha push sub inc out (bad) hlt push and icebp sbb aaa add jb jno fnstcw push nop mov dec cmpsl xor stos mov mov add jmp or add sub fs or mov stos sub add pop inc pop int3 or jo sar adc roll out daa push fildl sbb pop mov mov mov js fcmovb gs int mov inc mov cmp mov or idiv jae cs idiv int cmp or adc or ljmp jb push push push cmp add jno rcl jb and rcll das pop pop cmpsl or dec xor scas pop jmp ret cmp push (bad) jecxz adc adc icebp mov or mov sub insb lock cmp inc jae mov sub mov iret and movsl bound mov push mov and cmp (bad) mov or mov jnp push loopne mov sbb (bad) lret add push jge pop inc dec aad jmp jns adc cmp sbb out in orl sub sub data16 loope movsb data16 sbb (bad) daa ret push enter mov mov insb pop movsl and in (bad) cmc push inc sbb std push imul mov adc cmp or or add sbb inc negb outsl sub and push call (bad) pop adc daa or fisubr test je dec loopne mov cmpsb ja outsb pop xchg lock mov mov out fcmovbe mov or int3 call or ret pop cs pop xchg int cmpsb test rcrl pop nop js ss mov push jbe lock adc scas adc sub mov cmpsb xor push jne jge movsl mov arpl and add lds pop mov jmp movsl dec pop jmp inc dec add call adc psubsb mov sbb add mov out loopne push mov pop and mov and pop push popa negb and loopne enter fisttpl (bad) clc jg fs jne (bad) xchg add jg xor xchg fstl add and (bad) mov lea xchg rcll add lahf or adcw push sub lock pop test sbb in fxch fyl2x mov std jmp inc es (bad) int3 std sarb push arpl aam inc sub dec add and fcomp lods nop int3 or pop mov mov cmp mov mov cmp mov pop ret lahf out or sahf mov jne movaps push fldcw clc jae xor jle xor adc pop popa mov rcl lret cmp jnp jl and lret or jg (bad) dec mov push push jg xchg ret adc (bad) jnp mov icebp mov aam ret or add outsb sarl pop cltd pop inc pop add fadd roll jbe and jg mov std loopne addps int xor ret add dec sbb adc out push jne or adc (bad) xlat jmp xchg add push das pop xor pop add std jle pusha cwtl pop rcl push cld and cmp imul (bad) pop into ds test into test test shl inc and cltd xchg add add test push incb jl fsts imul cmp mov and aad test dec jbe and jle mov mov out adc push add testb into push push or or add xchg jmp pop push addb call add adc dec mov lahf adc jg cld dec fs je cltd or inc mov mov shlb or mov je xchg and out push cmp ja add cmp adc add (bad) cmp jne call or adc mov neg mov pop sub leave or fcomi xor negb jecxz dec outsl push loopne cld push sub fildl xchg loop nop jne in xor mov call or and sbb call or or loop ss xchg call fisub test xor adc out mov fnstenv push push cwtl in jo add mov lahf adc push mov jb and dec push pop (bad) push pop hlt lods out (bad) repnz push les push (bad) sti inc and stc std jl out lock add pop sub loope incb cmp shl add mov aad fwait ss inc rorl adc out cmp push (bad) dec adc push cmc stos out mov orb incb cld outsl dec fdivp fidiv rclb testl out loopne mov adc (bad) sbb cmp ret pop insb mov enter or dec or inc xor jge insb push loope mov sub ret test frstor jmp dec pop insb pop mov sarb inc cli lods pop inc pop sarl mov in push (bad) in clc or dec push leave jp add ror mov adc scas or add or cmp sbb mov and (bad) jae and rol lcall pop mov xor jo (bad) imull lock jne xor or ljmp (bad) xchg lret testb jg sub ret add std data16 loopne adc je xchg or jle sbb sub aad loope scas cmp xchg das fstp sub roll fldln2 inc lods loopne sti in fnstsw inc jne push ret inc fnsave pop test pop in jmp iret mov scas inc mov mov push mov pop (bad) fldz movb xchg out mov xor jmp push lock ja or ja adc imul (bad) lea cmp add dec fcompp mov jb sbb xchg sahf lods mov daa jbe lock fcomp pop mov jne push fmull je ret add mov sbb push push je hlt or stos fwait (bad) or frstor and lahf add cmp inc and pop sub jne outsb popf pop add (bad) mov jmp imul xchg popf pop sub jo push mov insb sbb add call xchg (bad) shl sar rol mov and xlat movsbl push addr16 mov add add jmp int and lods push iret or add lods icebp in std rol mov mov or in or pop call xor ret adc imulb jp or ret fstpt test imul xlat in ret paddusb ljmp mov sbb jmp adc pop and inc daa fild nop cmpb mov sarl movsb jnp pop fnstsw push xor mov add scas negb fsub adc notb scas push pop shrl mov xlat aas cmpsl or data16 fldcw sbbl inc xor ret jmp or fnop pop nop and int3 cmp and or (bad) (bad) je mov shld pop jp outsb loope push jl and sub xor test or clc and xchg add pop pop ret popf scas (bad) imul je push cmpsl aaa (bad) cld adc or mov stos jmp lret test pop mov (bad) xor jne sbb mov movsb or cld jb popa stos stos out fcompl fist arpl (bad) jbe or mov jb in jbe mov jmp aas (bad) loopne mov adc mov rol sub push enter adc jle add push push push pop fsubrl lahf sti fldl outsb jge insl or outsl or dec xchg xor mov aas ljmp mov clc sbb (bad) and xchg dec mov sbb cmpsl add mov sub je add mov je setnp or sbb iret mov sbb frstor loopne outsb je push lea push add push sub push mov inc pop js adc and jb pop mov sbb mov out fcoml andl pcmpeqb inc xor cs pop jb add or fistl jmp push add fildl sbb dec call dec popf cmp je sub loop add loop fisttpll (bad) sub rcll xor in cmp lret ret and jne add xor fstpl jecxz mov out mov mov cmpsb push push movsl pop or or pop insb movzwl mov or rorb (bad) scas (bad) std add cmp ja push push (bad) jne popa pop jl or push scas les fadd fstpl fnstsw push jmp dec mov inc cld fucom andb jp push and aad dec pop mov push test jmp cltd pop adcl push cli add add loopne (bad) pop and in and (bad) or sub push add aaa push inc or rorb push lcall sbb mov adc push and addl fmuls testb adc sbb jne testb adc push inc outsl push and ss je jmp add push xor pop dec and (bad) fwait xlat sahf je std movb cmp add xor dec push dec mov test bnd fstl orl adc sbb jnp xchg mov mov push add mov rolb adc mov loopne mov in pop pop push sbb inc fldl fwait mov inc inc inc imul jne and rorb xor cmpsl jl je js clc fucompp inc push test push add add sbb mov mov (bad) cmp jne cmpl jne js rcl leave in inc incl or je cmpsl inc lahf repnz in inc clc and add and leave mov xor xor mov cmc lea cs addr16 insb inc adc mov test stos jle bound jmp call or test inc sahf data16 lods adc ss enter xchg (bad) lods sbb sbb enter jne push cmp fstpl xor incb push mov mov inc popa sbbl imul add ds mov and or push add sbb dec movsl jnp sub and push adc divb fs adc adc xchg out push cmp push and push inc mov jae insb add je push or mov lock adc rcr sub jecxz add pop mov add xlat inc jne or (bad) std fs push xchg mov inc cmp push cmovo cmp loope push sub or cmp jge adc mov adc aas frndint lret lea xlat dec add mov jmp test divl test and jmp pop je adc add sub push cwtl bound test mov inc jae mov or push adc or and movsb and cmpsb into adc imul pusha and or sbb dec (bad) les xchg cmpsl dec loopne lcall rol add outsb pop das sbb mov daa mov push test push neg test lods ja pop sub mov cs add subb dec cmp outsb or (bad) shl sbb inc mov mov (bad) je gs cmp dec sbb bound popf push mov mov fmuls dec sub sub jmp pop jb pusha sub push or fisttpl psubusw rcrb popa mov in imul xchg add sbb and call pushf sbb movsb shrb pop test into sti sbb mov leave inc jmp fcompp xor pop jecxz sbb inc pop idivb (bad) jnp inc xchg ss push testb jge add testb (bad) pushf repnz sbb add or hlt xchg js sti sbb adc shlb or add ret pusha clc idiv jnp sahf ret sbb inc jp sub roll insb pop add gs fwait mov cmp rolb inc push (bad) push inc push aad jo push mov or jecxz mov ds fistpll add or xchg adc imul add movsl and mov xchg loopne not xor adc and xchg popf or aam or and dec mov add sub and and sub rcrb pusha dec or push add inc fisubl or push or into sub push xchg and or xor xor and pop or jmp add add incb (bad) insb addb sbb lock and mov dec fisubl and jecxz sbb insl fcompl or or jmp mov inc adc loope sub and loopne in cmp sub pusha and mov (bad) pop adc pusha insl pop sbb or insl xor loope add xchg scas in push mov and adc inc lcall or fldl ds scas xchg or push sbb or jmp enter mov or add add popf cs add movsb mov out cmp or (bad) lahf push or outsl mov push and je add adc testl out and mov pop jecxz push mov xor xor and or inc or imul add pop pop (bad) (bad) or clc mov sbb fs mov mov push push sarl lds outsb sbb jl jbe and or jae out push sbb mov in lret or inc and and xchg call inc and cwtl inc add mov and dec pop push xchg push pop jmp xlat out ljmp and push lods adc mov fstpl jecxz pop push test push data16 push movzwl test or lret cli push sub add inc add push ja pop sub pop add mov inc popf xchg mov movzbl add dec das je movsl mov and rcrb cmp lret push or sbb in jnp push jge mov jmp and fsubs es sub out add out in mov mov (bad) xchg jg pop jbe adc inc fwait and loope je mov add push mov cmpl sub test test cwtl and push mov aad push push call into cmp adc inc or pop xchg push mov inc mov fimul jno or or xor and sbb pop xchg mov mov push in (bad) add mov js and fstl push out jle into fisttpll notl and lea adc mov loopne inc stos push sbb ja mov dec jo push xor pusha lock mov loope and fldt pop jb add aad dec test sbb jo lret (bad) or xchg into cmp jb inc cmp cmp jb loop nop push push fistp inc ret and mov mov cwtl arpl sbb js or or into add push fisubl push xor cld popa push inc or into pop not rorb pop movsl test add inc adc jb aaa (bad) aam jg mov cmc or mov cmpl inc pusha ret (bad) sti add or js pusha popf or and test sub (bad) lcall sub cs add jmp push pop and push add inc shr rcr shr rcr or jne div fldt loopne pop dec adc lret pop jb fstp fistpll jb cmp or xor and xor and sbb (bad) fadds das (bad) mov mov iret pop fwait mov pop xchg in mov test repnz bnd or mov hlt or sbb mul push push or movsb add loope rcrl mov inc jnp push lea loope jb mov rcrl pushf sub mov push add push adc inc movsl mov jmp adc sbb fdivs sub inc sbb fcoml sbb in sbb fcoms bound fiadd rcr push fcmovne and adc sub enter imul pop pop dec jne pop pop pop sar outsl fbstp adc shrd shr ret test xorb lods adc aas movsl ret shrb aas pop sbb xchg push or mov cvttps2pi leave ret shrb mov aaa sbb add pop adc movsl pop je jg add jb inc or pop fistpll insb pop fist stos adc cmp jmp mov xor inc add mov mov push adc jmp cmp fcomp in fisttpll fs ret mov mov pop xor add fsub insb push les lods cli cmp bnd sahf pop xchg out in sbb test and mov push in mov mov fs and lock jge mov nop or dec pop insb jo and sahf int push lock clc mov sbb push push inc aas mov mov cmp mov jg cmpb inc jb or rol inc loope or sbb pshuflw movlhps mov or mov mov into and shl sub fmull inc out rolb je lret push jmp lret cld lea fmull mov mov sub inc rol jle mov fadd movsb or ret fst lea lret je andb xchg jne or ret shl push adc (bad) jle (bad) sub divl lret add add xor lock iret xor jo push fscale data16 add xorl add mov test add inc push fildll ret je out cmp je test je jns cmpsl shlb sti iret jmp fs or js std mov fist jnp outsl and ja mov push push loope ret movq iret sub xor repz jb imul leave fadds popa bsr add gs (bad) rclb fldenv fcom loope sbb (bad) adc inc dec and pop dec inc ret inc into imul fidivr cmp xchg mov adc inc jbe xchg je inc sub loope (bad) cmp lock lea cmovb jne cmpb stos (bad) rolb mov (bad) (bad) clc clc and jne cmp addr16 out xlat cmp mov xlat jmp clc notb pop pop cmp scas ss sbb outsl outsb mov std sbb add pop cltd mov push inc or rcr push xchg fcomp es nop xor inc adc pushl xchg fildl in ret add into dec push inc es pop adc insb out mov pop daa push ret arpl dec mov je nop (bad) cmp mov test adc les sbb imul dec outsb jbe imul pop push gs jb and shrl enter popa add or std in std add xor xor add ja outsb out jns jo xor add and adc mov jg insb add or ja fbstp pop jns xchg push imul jge outsb or inc jbe outsb je push (bad) or gs push scas mov std pop aam outsl jb popa je outsl outsb das push outsb jb or (bad) push push jb outsb jae sub xchg mov insb insb outsl out sti (bad) mov daa inc andb ret insb jne aaa add popa add add mov imul enter inc arpl jns fsubs inc js les out sahf enter cld lds adc repz sbb cmp jnp rorb push inc dec push repz repz pop pop pusha fs repz push test repz mov iret repz mov mov iret repz mov cmp repz fmul repz fsub in in lock out cmp (bad) or sbb jns out inc push je mov cmp out hlt (bad) sbb jnp cmp js test mov ffreep mov and dec insb sahf out insb xchg mov (bad) into repz (bad) leave xchg leave mov call xchg clc push lret cmp fstps bound sbb add arpl rorl es daa sahf jecxz jne fs insb je xchg sbb bound inc data16 jbe hlt fisttpll insb jb gs bound jo popa mov je ss outsb xor test in daa jne push sbb sub pushf leave sbb and rorb sbb je mov or mov sahf shlb and push pop pop outsl jo (bad) jne (bad) popa negb inc fsubrl mov fdivrl pop push es xor jns sub push and scas push sub jns repz jle data16 jl jns jnp sub sub sub repz cmp es jl pop pusha jbe je sbb rcrb bound int adc pusha je push outsl data16 fs es sub jae inc and popa jb mov mov das add das xchg lock add jne sub mov push cmp push push data16 or jne je arpl xor push or fdivs pop ja insb pop mov jg jge imul push mov fadd fidivrl jne pop je mov jne fs jo arpl sbb add and mov mov stos add aas or add pusha jne and (bad) cmp sbb push push push dec ja bound push sbb and jp out adc outsl insl mov xchg xchg movsl shl dec jge xor lcall aam push mov stos or (bad) sysexit movsb cmp dec pop xlat test inc sub mulb fnsave inc cmp inc nop insl adc gs mov (bad) stos add add or roll je in rorb jmp and and push into and xchg jo mov sbb inc cmp or scas cmp sub inc jb jns mov dec imul call bound and ja insb cmp or sbb add lea and (bad) nop xchg pop jb xchg xchg xchg mov mov or and jae scas adc fisubrl dec and pushf jb out push jb rolb into fiadd aaa fisttp cmp pop dec mov pop idivb dec pop es add adc out push es inc pop mov pop pop or push (bad) mov subps push fdivp pop mov add popa mov sbb iret or btl or fisttpll imul daa adc adc mov xor in jbe push addr16 das push xorps pop imull push and mov out jb pop andb mov orl pop popf pushf cmp xchg sub cmp into aas xlat (bad) sti xchg aaa pop sbb add jo mov dec clc push xor js int mov iret pusha push mov jnp sbb push rcl pusha mov outsb push mov addr16 aaa sub outsl (bad) xchg xor out jne je sub aaa add inc push arpl mov jns insb xor fidivr xchg insb jle push (bad) and or mov inc dec or outsl cmp add aad pop ret fidivl gs jae push (bad) mov xor mov add xchg outsl add xor inc inc push or dec in jge cmp repz push pusha pop js dec mov xor cmp aas jne add or adc push mov xchg jns clc hlt sbb jae gs arpl mov js mov rcrb out xor addr16 (bad) adc sbb imul outsl cmpsb bound js imul jae (bad) mov mov fadds insb xlat adc dec mov push sub jb ss (bad) mov imul pcmpeqd dec popa jo mov das insb sti mov popa insl gs outsl inc dec inc stos xor cmp rorb push pusha insb push rorb inc dec fistpll add ds dec adc das push notl mov sub push es scas push push mov repnz je fs or out jae cmovbe dec outsb adc fnstcw adc sbb mov bound lods (bad) dec sub out insb push jne push gs or dec mov inc arpl aam sbb addr16 push mov push jle jle,pt fcompp imul mov aas mov test popa out mov scas and mov push dec dec das fs jns out stc jge add dec and sub shrl cld dec dec cmp cmp push pcmpgtd push push adc fs push negl push fidivr in (bad) outsl adc jg mov (bad) pop (bad) jae lahf inc insl pop mov and pop negl fisttp dec outsb push rorb mov (bad) mull jge,pt outsl jbe pop jns mov insb stos ret jge aas push cmpsl gs sahf (bad) mov dec jbe arpl mov mov jb and out out cmpsl insb fistpl ss out pop testl jecxz pop mov js ja outsl pop insb shll inc inc daa cmp pop pop mov (bad) dec das mov in cmp jmp (bad) (bad) add and dec push dec pop mov out add mov scas jb scas pop push mov iret repz jl test iret nop xchg pushf movsb lods mov (bad) int3 fcomp loopne cmp repz in lock dec or into clc jbe push add iret repz adc pop shrl sahf out push xor inc push pop out sahf out jo js iret repz rcrl lods mov cmp repz int3 aam in iret repz push and pop cmp repz push jns xrelease xchg out sahf mov enter out mov push aad or xor sahf out push push mov scas push cltd nop mov adcl xchg adc xlat es test add fcmovb push and add add add (bad) jmp (bad) addl mov (bad) call xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas (bad) (bad) (bad) pushl mov mov mov mov ret (bad) (bad) enter int3 int iret (bad) (bad) mov fcom (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call (bad) (bad) jmp in out out lock repnz cmc div clc stc cli sti cld std (bad) (bad) (bad) (bad) out fiadd add or or push movups adc adc push pop sbb sbb sbb (bad) (bad) (bad) lcall pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp (bad) mov inc popa bound push insb insl outsb outsl jo jb lds mov je jbe js jp pop push pusha aas and jnp jge jg pop xchg test bound inc inc dec dec dec dec dec dec dec dec mov lds fsubrl pop pop pop (bad) aas mov andb jne std or add jo xchg and js addb enter or inc mov or or or xchg push fmuls loopne call cmp adc adc add adc pop adc sbb and sbb jb sub xor cmp sbb dec push push pop pop and repnz pusha and fldl jo cmova andb daa nop sub enter sub sbb jb sub enter and cmp cmp jne,pt jb call inc out cmp mov push or inc sbb and and dec xor jb enter dec dec push push push and sbb push pusha pop push in jg addb js je repnz add insb add pop pop inc mov rorb enter xchg mov psubusb in mov in cld adc or dec adc pusha adc sbb jb adc mov sub cmp xchg and inc sbb pop sbb jb enter sbb and sbb and in xchg and and and sbb in daa clc sub add adc in xchg and sub cmp xor fs and aaa mov xchg cmp jb mov les xchg and rolb inc call lret hlt inc jmp and and sbb dec cmp dec dec push jb enter dec insb dec js inc mov test push pushf push test in xchg and insb pop scas cmp call ljmp and pop or prefetcht0 and cmp enter adc push push and sbb sbb sub jb enter ds shrb mov fadds or pmuludq mov bnd or sbb sbb xchg and cmp push add sbb jb fs pop jl mov sub inc mov inc pop sahf (bad) add add pop loopne in xchg or or or add inc pop push cmp cmp add cmp inc or enter or sbb enter mov pushf or mov int3 add fmull lret das inc mov or cmp add and jb enter or cmp sub or pop add mov je xor mov in xchg and mov (bad) mov enter or add cmp sub psubb inc out add decb xchg inc adc inc dec dec movaps dec stc xor push mov sbb es mov add jmp lahf xchg paddusb mov outsb jnp and dec jnp jbe pop and pop xchg out lods mov daa (bad) scas outsb outsb pop jo xchg mov das mov iret pusha cmp jno cmp setb dec sub fs jo jmp iret gs shr jg dec data16 jo pop jp inc sub jne (bad) ss insl cs popa jg outsb mov outsl outsl imul jb stc fisubr ja jne pushl das cmp das pop insl sbb scas pop popa pop out cmp iret imul push hlt xor add pop sub out daa push inc add mov inc xor aaa pop outsl sbb call das shrl push pop sub mov push pop mov jecxz ficoml das push pop je imul dec push bound jo,pn ds fimull inc push jb mov push xlat push pop pop fimull mov cmp push je inc mov sti jg push xchg dec dec outsb call das cmpsl push xchg jecxz pop pop cmpsl insb dec mov xchg inc insb xlat ljmp je xlat cmpsl push fildll sbb out dec out pop pop mov pcmpeqw lret rcl dec dec ds out jb pop js pop mov pop sbb inc addr16 outsl popl mov inc push cmp insl addr16 or pop fimul mov ficomp jns iret xchg cmp outsb push mov ja mov out (bad) divb daa rcl ficoml gs addr16 pop jb icebp loopne lods das pop dec arpl (bad) (bad) arpl push push cmp fldt cmp mov outsl aad cmpsl dec sbb stos push scas or jo pop iret paddq popa gs (bad) mov lret addr16 addr16 pushaw shlb outsb addr16 sub bound pop pop pop (bad) outsb iret inc (bad) (bad) js es dec gs dec sbb fisubl pop fiadd repz sbb push mov or out ss pop push out out add xchg loop pop cmp dec mov idivl (bad) dec fildll mov inc push (bad) dec lahf fcmovnbe mov inc (bad) push (bad) mov pop dec inc cmpsl (bad) dec xor sbb leave dec out movl aas out jae push (bad) pop test fist dec out fadds fild push das or or outsl scas popa xor adc push push daa pop inc vminss pop sbb inc bound dec lods call push dec addr16 sbb ss inc pop mov outsb adc dec outsb movl arpl jg push out push push je xlat dec inc notl inc adc dec das outsb mov loop dec inc inc pop push aaa or inc pop push das push iret (bad) in imul mov divb pop adc push mov pop stos xchg mov add test enter cmp push addr16 cmc xchg fmuls mov sbb mov mov in xchg iret (bad) call mov testb or sbb and jmp int3 cmp dec enter jae sub push fwait insb imul enter arpl dec test jge mov add mov int3 inc psubusb pop add push and mov mov or into out xchg mov stos movl cmpsl xchg pop cmp mov inc mov int lods insb leave in xchg and test cmp mov (bad) mov rorb addr16 int3 rcr sarl ftst rorl lock xlat clc or inc mov adc and sub cmp lods push fistp sbb jb loopne mov enter cwtl (bad) adc mov enter in xchg sub insb cwtl es enter (bad) or in dec fsubrs and jmp jae or stc add adc enter scas sub mov fstps pop dec mov jb in aaa pop jg rorb dec in fld mov pop jo xor sbb scas outsl mov or insb xchg sub mov (bad) cmp push cmp in pinsrw in sbb imull int3 cmp xor js cmp insb in pop cli add mov jne or nopl xor sub enter and mov cmp das dec mov sub lods and fs cmp pushf dec ja outsl jl call xchg and xchg ja jne push in (bad) adc mov sbb or fmull insb ss call push pop loopne add sbb ja sbb repnz or sbb into cmpsb add push pop dec pop sub mov andb pop pop cmp pusha loopne xchg mov (bad) cmpsl js test sbb nop pop js mov cmp ret enter and mov in fistp sbb cld or jecxz cmp adc cvttps2pi add mov jo cmpsb aaa xor mov inc cwtl or enter cmp in cmp rcrb add int3 outsb inc sbb add adc rclb pusha push cld pusha loopne fistp xor std or insb and pop cmp inc outsl mov jb add jo jl enter mov xor ss sub jnp pop or inc push sbb addr16 sbb jno loop pop imul outsb sub pop insb xchg pop jns lods lods sbb das jno imul xchg pop sub or cs aas das insb pop das mov cmpsl pop sbb pop ss pop in repnz jae ja test jmp jp mov ss ja,pn mov pop jg bound cmpsl aas pop or shll jne insl dec je jne daa (bad) jb xor ficomp popa dec pop bnd xchg sbb insl dec pop bound xchg popa aaa jnp pop push (bad) outsb ja in loopne push pop push pop divb xchg mov xchg mov in pusha xor pop pop push insb pop pop jb insl das pop fs mov pop call out jae jbe fnsave pop xchg js in movsb mov sub stos pop and jns imulb aam xchg ja push gs jmp imul dec or pop pop push or daa pop insl dec mov out dec ja pop clc aam imull mov lahf das out popa pop or or popa ret pop test mov lods rorb dec pop or xchg jo mov inc (bad) testb movsl xor jp mov das pop dec jb jns je cmc jbe or mov jnp mov pop stos jae mov dec mov push xchg cli inc jns or loop pop rclb in in addr16 or jae insl push arpl fcmovnbe (bad) push les or jb lods rcr pop or (bad) pop sti pop jae pop outsl mov or or jae adc outsb pop mov dec pop or imul in imul fistpl arpl imul mov or jae sti jno jno insb pop das add das pop outsl mov push das or das adc jbe pop (bad) dec pop dec fidiv imul movsb sub gs add cmp bound scas pop les mov addr16 xchg out outsb add or push adc xchg fimul mov out pop pop in inc push mov pop je pop divb mov push add fidivr jbe es (bad) adc das jbe es insb outsl xor add aas jnp lea xor mov incl sub aaa testb (bad) rcr movups push xchg or das popl ja mov inc vmread aas pop mov pop xor pop cmp imul bound xor lock jg (bad) (bad) decl stc into xchg (bad) adc xor or xor sar (bad) call xor cld aas negl push inc xor jp mov insb jp (bad) fld shr andb mov mov inc xchg adc ss or sbb xchg std jae adc (bad) loopne add jo dec xchg xchg subl lock sarl xchg fimull leave (bad) aas adc or inc or or add pop rorl jg imul mov divb inc cwtl rorb addr16 mov cmp xchg mov jae icebp popa arpl jae jb scas jne mov push insb and jmp decl test jl sbb push sub mov push mov add sti sti decb imul adcb sbb cld cmp mov ficompl aas sbb sahf rcrl xor (bad) (bad) fimul sbb arpl idiv mov icebp bound or mov aas out pop push pop cmpsl aas fistl mov nop ds aas xchg jg mov shlb inc ret sub pop inc fprem fstpt (bad) jo out mov jbe scas sub in pop pushf mov aam push push aas loopne std (bad) sti jmp sbb mov loop lds rep (bad) int les (bad) aas (bad) mov jae mov lahf jge and ret pop dec lea mov jp mov (bad) fild sbb in or mov int3 in cmp and mov mov cmpsb push addr16 icebp ss push mov mov and push sub stc incl es sub jmp insb (bad) mov mov repz and (bad) push add ja mov cmp fwait std mov aas inc cli loope lea or or mov jmp outsl mov aas mov sbb add (bad) push ret ja mov or xor push inc arpl or push jns jg sti or jb jns pop push mov les out scas cld xor mov cli and push push push cs or jne lds sub fistpll negb sbb push adc sub lcall (bad) (bad) aas rcrb in fiadd sub (bad) aas int mov bound xchg mov lds xchg push into data16 aas enter xchg (bad) and lock or int3 fbld lock shl out fistp aas in (bad) jp and inc call jmp push xor inc add (bad) jg (bad) pop sub push lds stos fs imul out push mov push jb js and xor mov jl push int lret (bad) out out jg aam xchg push jb out inc mov nop xchg jg in (bad) sti adc aas or sbb adc stos pop lahf jae xlat mov out aaa pusha jle cmp xchg repnz jg xchg adcl push push pop ljmp pop (bad) fistpl sbbb jge and or or and pop push call (bad) adc cld int sbb test push xor fisubl mov mov (bad) xor int incl xor fidivr mov mov (bad) imul xchg jp cltd pop sub pop lods xor jle jmp std in out ds cmp lock fisttp or cs daa sahf dec inc dec push es repz (bad) aas stc pop movsb sub jle adc sbb sbb jl inc (bad) jno jns sahf lods imul rcl stc add mov xor fdivs lods or enter lock jns add mov jns sbbb or dec and and in call pusha scas cwtl pop and or jo or jp xor aad or adc inc dec inc and in jb dec enter imul inc push enter roll jb cmp js nop pop repnz shl mov in pushf fdivrs dec mov and nop adc jo pop imul aas mov test rcr ret or and adc dec jns dec enter add mov inc dec enter and dec enter in pusha lahf add adc nop sbb (bad) int jb push rclb sahf nop sbb int3 lock test das mov pop repnz icebp cmpxchg ret je outsb push das cmp cs movsl mov fucom sub data16 outsl outsl xchg insb punpcklwd insl outsl outsw fstpl pop arpl pop push dec fidivrl fild jb jns push xor and bound outsb ss data16 imul adc and in sbb sbb or adc decb mov sub addr16 nop adc cwtl add mov test lods or enter adc mov jb adc sbb push in enter in and and and xor in and mov out (bad) movhps inc mov jne xor sti cmp fs jae sbb (bad) ds dec insb xor dec pop inc inc push inc push sbb add inc dec dec dec dec dec xor dec shr int3 sbb push xor inc push push dec jl movsbl int3 adc and push add jns les lret or jns out or or out loope push iret scas push and popf out push add add jbe mov push and ds push push out ja add or fimul push or or fidivr push push fidivr out mov push or or fcmovu fnsave xor push out out in out push jbe,pt jbe,pt push xchg loopne out ds push push mov and push push push cmp repz adc sarl adc psllq into mov push push add adc push pop outsb ds push sahf loope or push mov push push add inc and out fdecstp push negb add ds fidiv mov popf testb negb into out out in outsb mov push ds dec ds out out out push pop outsb negb push (bad) ja xor add out inc out or xor inc mov sub add jle cmp fidivr pushf add push or out cs jecxz mov jle imul out push push jle,pt add aaa daa jne roll or out sahf ja or or fstp jns or or push jns fstps push push or fstp fstp jle,pt push jle,pt xlat rcr push jle,pt adcl mov add rorl repz push and add add push adc or arpl pop push push adc add add add jno jns push adc mov add popf xor xor jl ds push ficompl ds push ds push add mov add push push pop push push push mov out push ds push ds push inc jmp push pop add sbb xlat mov push stos sbb lds in out push push push push push push push cs loopne,pt jno (bad) adc cmp push add adc dec adc fnstenv push push push push push xor out into jae (bad) adc push push cmp repz jae (bad) adc adc repz (bad) push cmc adc adc out out into adc push (bad) push ss out into out outsb (bad) push push (bad) push push push loop mov (bad) push roll (bad) sti mov add jns ja add add push or or pushl cmp or add addr16 jbe push jbe push jbe out fnstsw add add ja jne add sbb ds ficomp ds add addr16 push jbe push jbe push ja jbe jbe ds (bad) ds push or ja (bad) ds jbe mov dec sbb addr16 movsl std cmp sub sbb push push push sub dec jle push es out in out into push push jle push jle ja mov push push lahf (bad) sbb push push (bad) in push sub std push push push push arpl out into or add jle mov add add out push xorl or into pop (bad) mov add into mov es and or insl mov add push fstp push push push dec jge mov jle push push jle jo mov fmulp out inc mov push iret out sbb mov xchg push es and push push std fimul mov add push push push jle fstp (bad) std fimul jle push jnp push fmull jle add xchg into jns orb or addb dec push es add mov xchg aaa add pop popa (bad) out dec lea leave mov jg pop in divb mov xorb divb sbb addb pop iret daa aad mov testb jbe daa cmp adc pop divb (bad) mov ret imull push lahf dec daa mov fstp push xchg push fwait dec daa in add mov add sub fwait (bad) lahf add movl push inc inc cmp cmp add or out into fucomp daa add sub xor out pop testb pop inc movsl inc mov imul xchg std das mov notl idivl iret daa xchg inc sarl das arpl add inc out cmp sbb int adc repz add lea lds mov faddl ja daa mov xchg xlat cmpsb sbb cmp pop cmpxchg divl xor jnp mov daa mov cmpsl lods adc inc sti inc xchg inc xlat enter aaa std (bad) mov inc add add fcoms cs addr16 js jnp daa inc cmpsl xlat add cmpsl (bad) (bad) mov out lea pop aaa aaa mov xor imull or jecxz call fldl fnstsw inc push dec push fidivrl outsl or movsl fnstsw push addr16 inc aaa nop insl pop add outsl pop pop xchg outsl cmpsl (bad) (bad) (bad) outsb add xchg pop aaa sub push aaa pop ja mov js xcrypt-cbc cmpsl adc pop adcl cmp pop daa pop popa inc aaa inc pop mul ret aaa pop ja xchg fcomi fdivrl ja daa mov in add aaa scas lahf xchg dec or ss daa jg or (bad) pop maskmovq testl sbb pop inc out lock jg and addb jmp mov sub and mov loop sbb cs lds add ss jnp mov lea jg insl add addr16 outsl fistpll dec dec out or (bad) xchg (bad) scas xchg iret outsl cmp imul sub cmp cmp repz insb js nop inc jb movsl sub mov sbb jo dec negl clc enter sub cmp dec cld divl push add sub out lahf add dec add imul push mov inc inc imul (bad) ja add pop xor dec imul sti jae data16 pop out imul sbb dec iret mov call add push dec push cltd cmc xchg int3 je ret jg pusha adc and imul iret rol and and and in jbe loop and dec and add pusha sarb addr16 and and inc pop mov pop lret sub sub adc push xor xorl lahf dec cmp cmp (bad) (bad) cmp inc jbe or inc sub and jb push push or and pop dec pop pop push pusha daa mov fs push adc pop sahf jb das jb pop subb pop and js xor adc xor iret or ja test sub xor push es cmp xchg out and pop subb je inc fcmovb arpl inc push (bad) (bad) mov out sarb iret js (bad) dec in into sbb dec imul pushf lret insb testl (bad) xor adc in frstor lods sbb pop push xor sub jo pop in sub xor daa pusha addb adc cmp lds psubusb adc sub nop cmpl and sarb push aas in sti outsb lahf push sub nopl das decb push (bad) adc mov adc mov mov loop,pt out inc rcr inc cmp aas inc fnstsw aas push mov cmp aad jns and jg leave pop mov and dec jg fs daa xchg pop outsb add les cmp jnp pop and fdivrs rorl dec push imul inc repnz adc lock cmpsl nop adc or stos xchg mov push or mov add sbb push stc lcall nop in pop and mov movsl (bad) jno and adc inc xchg jns pop orb or xchg cmc in add xchg into fdivrp push int3 pusha (bad) jns and fisttp mov inc sbbl mov fisubl leave add pop inc cmpsl nop (bad) fbstp mov call ficoml cld jle push add push pop fisubrl xor fs lahf rcr fsubp stc xor int in movsl add add mov repz add sub mov xchg aas xor add popf rclb fadds movsl pop mulb pop es or call fdivs sbb cltd fistpl add xchg pop (bad) insl inc leave jbe push push test add or pop mov adc roll nop lret outsb add inc inc push (bad) (bad) aas mov aas push ss jnp fisub sahf loopne ret push pusha jle std sub incl out (bad) sarl cmp insl adc mov mov fs cmp mov insl cmc inc cmp fiadd (bad) mov inc jmp xor leave (bad) jbe cvttss2si xchg (bad) (bad) decl in cmp stc jp nop in jl je insl mov push pop into xchg test mov jns sub test (bad) jl cld cmpb dec fistpl push stos scas sub bound in jp (bad) (bad) call ja jle movsb mov push cmpsl subb lcall cwtl add (bad) call xchg mov sub andb xchg push ss shufps (bad) (bad) incl adc fisttp xor stc push jle dec repz je (bad) (bad) (bad) incl dec das pusha cmpsl jne dec sub cmp inc and psubb pop hlt jb (bad) (bad) (bad) cmp cmp fsubs mov lcall push stos fs (bad) mov add xor ss adc aas mov decl jge arpl mov (bad) aaa in lea dec test aas adc mov (bad) (bad) (bad) (bad) mov jge inc mov subb daa insb inc sbb int inc (bad) cmpsl mov pop aas push enter cli fbstp leave jmp (bad) (bad) (bad) jg orl push cmpsl fcmovb test fisttpl push ds repnz fwait pop dec mov sbb (bad) (bad) decl rcrb cmp xor arpl add lods imul sub pushf sarl fcoms inc movsb jl pop fbld mov dec xor aaa push mov sub into cmp pop inc int3 sbb jecxz (bad) dec out cmp jge add in lret xchg aaa popa shr arpl stos (bad) (bad) jg mov xor aad cmp xchg (bad) jno push cmpsl in jne stos sub (bad) (bad) pushl out push inc repz test fidivl je or cmp test (bad) (bad) incl cmp jg jb add adc mov adc mov movsl sbb out clc inc mov inc in and call dec inc test enter jbe (bad) (bad) call sar test mov outsl imul adc mov mov psubusw fstpl (bad) push xor fidiv push pushf js xchg sbb lcall insl or sbb jl (bad) (bad) (bad) push iret incb mov mov stos mov dec in mov or (bad) (bad) out cmpxchg lds clc or hlt pop jl sbb xchg shrl jle mov sbb in (bad) (bad) (bad) pushl out mov pusha mov inc fisubrl pop hlt js mov fwait xchg mov and lcall in mov roll fbstp or outsb lock sub mov inc mov pop sahf mov decl in pop faddp js or rclb sti mov aaa (bad) idiv (bad) (bad) incl pop xchg repnz mov icebp js shlb push jnp pop push decb xchg add xchg (bad) (bad) (bad) lcall inc cli pusha std arpl mov dec xor sub scas mov lock mov jae pop (bad) (bad) (bad) decl dec pushf jno sbb rcr fimull aaa jo bound mov (bad) jne (bad) (bad) (bad) jmp dec jecxz ja out push xchg fidiv push and scas mov add clc (bad) (bad) (bad) ljmp popa ljmp cmpl sbb std sub imul shl cmpsb cmp push scas and cmp inc (bad) pop lock dec lcall xor (bad) jo ja in add (bad) (bad) ljmp loop (bad) decb mov xchg or mov movsl aad mov loop sub (bad) (bad) jmp mov ds sbb push cltd (bad) xchg fwait or mov sarl (bad) decl loope adc push mov push pop je adc scas mov insl mov ret sbb js cmpsb jb jmp (bad) (bad) ljmp clc gs fwait inc lock pop aaa fsubp mov adc push (bad) pushl lods aad jne mov pushf in aaa pop or lea xchg add mov outsb std pop push cld lcall dec mov cli es sbb push aas inc xor fbld int3 (bad) (bad) (bad) call data16 cld bound ss and mov push shll pushf push out adc cli test fadds push movsb adc (bad) jmp push mov xor cmp dec sbb sti xchg test xlat xchg or jno and (bad) (bad) decl mov lret push outsb fdiv pop sbbl push ret adc lock (bad) (bad) lcall nop xlat push xorl in rcrb dec cmp sub pop pop inc xor dec xchg inc inc fild jg adcl mov bound mov sahf lods (bad) (bad) (bad) call push cmp pop mov loopne rclb fnstenv xor (bad) mov mov xchg sbb (bad) (bad) ljmp test mov stos mov sbb stos pop pop sbb inc jmp mov (bad) (bad) jg push mov out ret loope jno aad cmp lds pop sbb jg out inc inc pop pop dec cltd adc add add (bad) (bad) (bad) jg ret bound in lret mov insl jne inc push mov scas pop ds cmp xchg dec (bad) (bad) jg adc popa jmp mov dec xchg jmp pop xchg pushf ja loope lcall shlb lahf je mov push addr16 (bad) sbb mov es (bad) lcall (bad) loopne inc add xrelease dec add mov mov (bad) call sub xchg xor cli stc mov push data16 jae (bad) jg mov push movsb mov mov pop jbe ljmp xchg push jl (bad) (bad) (bad) (bad) jmp adc adc cltd movsl xchg in pop or xchg rorl (bad) ljmp cli jnp inc jb adc mov je ds imulb xchg loop lea (bad) (bad) (bad) mov enter sub push push cwtl shrb scas cmpsb icebp vandps lcall fcmovbe mov ret adc icebp int3 cmpsb out sub jmp mov inc pop adc (bad) (bad) (bad) mov inc pop mov stc jo lret mov int repnz ret add decl imul and int inc add (bad) call pop mov pop push push scas inc clc in inc arpl xor (bad) push (bad) (bad) (bad) call cmp (bad) push mov pop fs mov insb jb iret mov lahf outsb add (bad) dec inc js (bad) adc ror push popf lret bound mov (bad) (bad) jg xchg arpl iret test (bad) xlat and push jne xchg sti xchg jge jmp push mov icebp fild pop jecxz push ret out shrl (bad) (bad) ljmp adc mov dec js dec pop mov mov fisubrl mov lahf xchg (bad) test (bad) (bad) pushl and jge mov sub mov adc cmpsl pop js mov (bad) mov mov jl movsb sbb bound fstl cmp xchg rcrl lret (bad) (bad) (bad) pushl fwait gs add (bad) stc push mov outsb sub scas inc or fbstp call les sbb inc cmp bound xchg fistp into insl push (bad) aas adc (bad) (bad) pushl mov test or xchg js fisttp mov fsubr xor popf in insl (bad) mov mov jmp shrl incl mov pop cmp push lods adc cmp and sahf (bad) rcrb imul add push test jp mov sar clc shr pushf lcall inc dec roll call (bad) (bad) (bad) jg movsb add pusha sahf stc pop loopne dec leave and cmp dec pop mov ror notl lds dec sub pop jle sahf (bad) (bad) mov push sub and push ja lds mov (bad) (bad) (bad) jmp sti sbb rcll ds xchg xchg in push mov xor xor xchg rolb jecxz cld pop test fsubr sub xchg pop or gs rolb xor aam pop mov (bad) (bad) ljmp inc sbb dec fnstsw cmp enter and push imul (bad) (bad) (bad) decl jle js mov imul mov pop inc and ja adc jne pop lods (bad) (bad) (bad) lcall adc inc (bad) pop sbb jl lcall mov pop xor (bad) (bad) (bad) jmp sbb pop (bad) jp mov mov shl nop and les ret lods mov xchg mov movsb mov dec inc mul pop outsl outsl mov lcall mov imulb sub loop sti push lock repnz cmpb addl lock adc aam push hlt shl fisubrl (bad) (bad) (bad) lcall mov and dec cmp mov mov es dec mov lcall inc fmuls das jbe cmc fwait scas mov or cmp out sbbb es (bad) (bad) jmp data16 clc out pop jbe sbb mov xchg std jne sbb (bad) (bad) (bad) push lret jb mov test sub sub sbb jge test scas sbb (bad) (bad) push push or int mov test add test popf out lods int3 mov (bad) (bad) fild andb xchg imul or cli or mul ljmp (bad) decl sbb mov ds xchg repz (bad) lret (bad) jmp scas sbb push sahf out sahf hlt sbbl ja repz mov (bad) (bad) decl inc subl sbb pop add faddl and dec cmp (bad) incl loopne sti loope add int sub lret xchg push (bad) (bad) (bad) dec and add sub xchg (bad) enter hlt jns mov xor pop cmc stos mov add (bad) (bad) ljmp sub rcrl lds xchg pop (bad) (bad) (bad) jmp arpl pushf lds jle addr16 adc push dec adc (bad) (bad) (bad) in leave movsl (bad) pop sub xlat cli mov mov xor lret lods cmp (bad) (bad) (bad) lcall cmp or dec sarl fisubr loope loop stc adc or dec cli and (bad) (bad) (bad) pushl out push insl mov pop stos sub cli dec mov pop popa jne dec test xchg inc push outsl push lock fistp push pusha call or insl data16 sub in and xchg out or mov hlt cwtl mov fcos ljmp dec pop push rcrb jp clc es aaa cmp enter insb xchg jo jg incl and push jbe mov and call (bad) (bad) (bad) call fdivl addl jnp mov jae cmp bound jp (bad) xor dec cmpsl push aaa enter add sub xor mov stos in or or pusha sbb jae (bad) (bad) (bad) cmp cs push mov cli lcall sbb cmp (bad) (bad) (bad) cmp ljmp not icebp idivb pop pop push push movsb push call push shrb (bad) jmp xor inc mov rclb out repnz es lcall add jns and in mov test out jl pusha jmp ljmp (bad) jg mov in mov jmp test pop out adc (bad) (bad) lcall xchg inc (bad) in aas daa or add inc adc sbb inc sarl cs lods out adc and int lods sub mov adc lret imul call lcall mov push pop mov add and loop insl mov mov cwtl (bad) (bad) (bad) decl adc push dec dec ss sahf add fucomip sub cltd pop push loop,pt call adc std (bad) (bad) decl arpl cmp into push push std iret sbb dec lahf int xor fist mov pop pushl insl (bad) add jb fdivr adcl dec cmp jae or cmp movsb pusha mov push jmp mov (bad) (bad) cmp mov sub push test movsl mov push pop loope arpl sti (bad) jno push sub (bad) (bad) (bad) decl mov sarl addr16 in es or xchg ret scas outsb addr16 cwtl jns sbb adc (bad) (bad) fidiv cmc sbb cmp mov jmp (bad) (bad) (bad) call or mov pop and or loopne cld mov (bad) xchg pushf cmp adc pop icebp call pop loopne sbb pusha cmovbe inc repnz rol (bad) mov mov add lret xor mov sbb or jmp xor inc xor adc pop insb push cld and and fdivl incl cld pop jl bt jg sbb jecxz inc (bad) pop add arpl (bad) (bad) incl test lahf daa movsl adcl dec xorb mov or hlt mov push into bound int dec bswap cmp mov les sub (bad) jmp rclb inc jge sub mov add loopne xchg push nop dec les (bad) (bad) (bad) jmp or xchg cmp cld test xchg ds push mov lods stos clc mov xchg pop ljmp and fmulp inc mov (bad) scas stos push adc cmc or pop jb push mov (bad) jmp adc leave jns mov add ss ss ss jbe subl inc (bad) ljmp xor pop sub fisubl inc (bad) xor hlt sar (bad) incl sar stos mov test mov mov push clc xchg fimul cmp (bad) (bad) decl int3 int3 pop push mov rolb ror cmp sub push fcomi outsl mov lods xchg jnp faddp lret lcall jg pop adc scas push and dec decb or sbb jns add (bad) (bad) call mov hlt pop cmp mov pop lock into xchg pushf ljmp xchg pop addr16 stos or repz fsub (bad) xlat cs xor (bad) (bad) decl mov mov ss inc test dec inc arpl inc inc adc out call std (bad) adc cmp xchg cli pop rcr stos test jmp jb add sub inc add mov pushf lret dec into pop fwait dec inc add push add sub ret (bad) fdivr loopne adc dec inc lods fstpt out pusha add fildl inc mov add push add adc push pop pop pop or or or or adc or pop or pop or prefetchw pop mov jnp jge add dec or stos or cld inc add or add in es adc add les pop insb nop ret add imul movsl sbb (bad) call push pop mov (bad) (bad) incl add add push adc pop and xor inc mov adc xor or fdivs js inc inc or lea xor leave mov or inc or in fisttp popa movsb adc arpl xor stos scas add inc pushf into add adc push add scas cmp outsb decb lods adc push adc pop popa jno and adc (bad) out or push lock xor and loope icebp mov mov add es mov push (bad) cmpsl pusha scas fiaddl or js sar dec add add mov clc or mov int mov gs (bad) (bad) pushl popa sub xchg lods pop inc sub clc outsb js jne lods fwait sbb (bad) pop (bad) incl mov out xor xchg repz leave js (bad) (bad) pushl cld test adc cmpsb xchg xchg sub xbegin xchg loopne (bad) test outsl (bad) fcomip call fucomp and cwtl pop mov fnsave incl and mov out pop and hlt dec insb sub out pop mov pop pop adc dec mov jg test xor jmp dec push in (bad) (bad) incl loop xor into xchg (bad) adc jl sahf (bad) jae cmpsl xchg xor inc out cmp (bad) push pop sub aad outsb imul stos pop mov push fisttp subl mov in cmp mov dec adc cmp (bad) (bad) decl dec scas jmp inc inc leave scas clc sub sub jae out sub orl pop pop mov movsl lahf jl (bad) cmc or and imul cmp (bad) (bad) jnp bound daa les (bad) call fisttpl das sub xor daa inc jg arpl adc inc inc sbb jno jg (bad) decl fwait je into and adc fdivl mov stc clc mov (bad) (bad) call jecxz dec add (bad) hlt subl repz addr16 sub fcomi (bad) (bad) (bad) jmp jbe xlat inc jnp add in aad out cmp mov mov xchg adc imul (bad) jmp sbb sbb arpl jmp jae into jns jg xor js into (bad) fcomip ljmp out shr mov inc sbb xlat (bad) lret fs or jl push (bad) (bad) jmp and inc insl push mov pop fwait mov or fstpl cli (bad) incl mov xorl sub pop test fmull in decl inc xchg push shll sub jno jg es subb xor jl enter aas outsl aam fcos (bad) (bad) pushl jmp jo or repnz call rclb es movsb out (bad) (bad) lcall (bad) bound sahf mov pusha jle scas or insl cmp (bad) scas (bad) (bad) call pushf lahf cs inc sbb or leave sub xchg (bad) dec sbbb pop shl pop ret outsl or pop xor (bad) insl jp adc jo dec jl enter test lcall pop pop mov int mov push or mov popf jno negl cli add (bad) (bad) (bad) cmp mov push mov icebp cmp or push in or pop es clc adc mov sub stos test nop nop popf add (bad) call ds cwtl mov hlt add mov fwait xor pop outsl push adc cld push mov ret lock sub jbe mov insb pop jbe movsl or cs cwtl inc (bad) (bad) call scas or std push jg jb push (bad) xor vmovlps mov je xchg push (bad) (bad) lcall test and cmp movsl xorb adc popa movsb jg jle (bad) lcall add pop (bad) fs push aad int fwait inc adc sub arpl (bad) (bad) jns ljmp dec addr16 xor sub mov call inc lret pop xor (bad) mov adc and outsb popa das mov jnp jge or mov outsl push dec (bad) (bad) (bad) jmp mov cld bound or mov sub pop imul (bad) (bad) (bad) decl mul jno jmp sbb int3 inc insb push xor mov cmp (bad) (bad) ljmp add fwait int3 xor clc in cli ljmp lea dec ds (bad) (bad) jg inc sbb pop ljmp ret (bad) or out clc fbstp (bad) inc sub jp cmp sub fisttp lcall xor pusha jmp xlat cs (bad) (bad) lcall inc out pop dec addl das pop rol lods lret pop (bad) pop mov adc aam (bad) (bad) lcall jl mov xchg inc out mov imul aas push ror clc mov lret add stos sbb int pop (bad) xor hlt xchg fwait xchg ror ljmp or (bad) (bad) inc mov cld pop fsubrl sbb pop cli mov arpl ljmp (bad) (bad) (bad) jp push and jmp pop dec cmpsl (bad) test subl loop sbb incl das enter mov xor jb sbb movsb (bad) test add (bad) (bad) ljmp sub xchg xlat lods pop sub jmp fs mov mov lea (bad) ljmp sub jp jnp lret add xorl outsl dec inc (bad) (bad) (bad) jmp mov xchg cmpsb aam and mov outsl sub dec jecxz mov (bad) (bad) (bad) call or outsl cs fldcw int3 mov jno cmp mov out shrl ret sti scas jg (bad) (bad) (bad) cmp push ja fwait shll jae sahf mov (bad) fwait (bad) push fldcw jle (bad) (bad) (bad) mov xor adc movsb testb test and dec lock pop popa and int3 inc (bad) (bad) (bad) incl hlt cli sbb jg fistp and mov (bad) inc jo pushl (bad) jl sbb movsl sbb add cmp adc adc dec push (bad) (bad) (bad) (bad) fldcw push mov inc or fmuls jb mov jmp push inc mov jecxz out std (bad) (bad) jmp dec ss sub test push mov daa cmpl (bad) push fwait stos add call fcom test cmc in fs and xor mov mov and decl sarl or mov sbb mov lret push inc (bad) (bad) (bad) jmp aad dec sbb mov addr16 adc jbe mov cld (bad) (bad) jmp mov sti sub adc mov lret cmp or mov add loope jne int3 xchg (bad) mov (bad) mov jl mov (bad) push out ret sub (bad) mov dec inc das or (bad) (bad) decl mov mov gs adc rcll and lret or inc pushl (bad) cmp addl inc out xchg fisubr mov pop cmp in jb mov (bad) (bad) (bad) (bad) mov jne pop js out mov sbb inc loope,pt xchg fsubrl (bad) std jge add push (bad) (bad) (bad) pushl add xor sbb add loope sub mov sti push (bad) (bad) (bad) mov and incb mov pop and aas add mov adc cmpl loope cmpb rorb mov lahf fstcw xlat (bad) (bad) (bad) mov aam int ljmp outsb cmc mov mov mov (bad) cmp jnp dec jecxz jnp sub mov shrb add stc ret mov bound dec (bad) (bad) (bad) (bad) mov cmc testb cmc movsb loop (bad) (bad) icebp subl jl mov jno sub mov push mov xor mov (bad) call dec sub js and push and or push cmp jmp pop icebp (bad) (bad) sti mov aaa repz shrb loopne in (bad) sahf stc or inc mov (bad) (bad) call mov movsb sub test jb inc push xchg into (bad) je cmp loope and (bad) (bad) in xor mov cmp and out push addr16 movsb inc les fs xor (bad) mov pop add adc sub (bad) unpcklps mov sub push ljmp fisttpll adc xchg lea movsb dec pop cmp dec lret or (bad) dec (bad) (bad) in call daa sub sti sbb js cmc inc mov insl enter aaa aas xchg (bad) (bad) (bad) pushl push pop test rclb jp add icebp aas ret scas mov test fs sub (bad) (bad) (bad) inc lahf jp je inc cmp xchg jno jg aaa jae das ret and lahf fmuls fsubp dec pop cmc incl jmp pop mov stos lods enter mov xchg push (bad) (bad) (bad) fistp xchg imul sbb test inc inc in pop stos sbb dec mov in (bad) sar adc call es mov pop pop inc jmp jge fnstcw mov push stc rcll fs and mov (bad) imul xlat and cs (bad) (bad) inc cmp ret and pushf icebp jne jg xchg test mov adc jle subl (bad) (bad) cmp mov xchg pop or or add mov cmp mov shr xor or pop xchg adc scas sahf inc or cwtl jo out (bad) (bad) (bad) ljmp add xchg aam cwtl roll and adc xorl pushl in dec fchs sahf lahf adc xorl or (bad) (bad) (bad) out int3 sarb sub xchg adc mov mov ljmp lcall (bad) lcall push xlat xchg mov adc push shll lcall pusha xchg fdiv test adc xlat inc mov roll jmp out call mov in dec (bad) fcomip (bad) decl repnz test out inc xchg mov adc mov movsl ds (bad) (bad) incl pop lret inc roll aaa mov roll push rorl fimul mov movsb jle (bad) (bad) (bad) out outsl mov mov gs (bad) fdivs lret aam or xchg cltd xchg jns adc push push jne pushf sbb sbb jg xchg adc rcrb mov pop inc inc int (bad) cmp mov pop shrb pusha cmp fwait mov sbb fldenv sbb aad add pushl jmp xchg lcall xchg (bad) lock (bad) (bad) mov mov jl cmp sbb shll lret pop rcrl mov std (bad) mov popf jo cmp popf ss shll or mov (bad) (bad) ljmp movsb pushf and dec mov jle ja dec loope or ljmp dec adc hlt (bad) mov mov cltd out pop push adc mov popa loopne pusha into popa stos (bad) (bad) (bad) ljmp bnd cmc call ficoml xor movsb pusha and dec (bad) xor icebp jecxz (bad) (bad) (bad) (bad) fildll jne or ljmp cmp push int3 mov call (bad) (bad) (bad) (bad) jl dec lea mov inc jecxz jp mov jnp test sub inc push and cli cmp (bad) into lods (bad) js es inc pop mov or sbb pop pop fwait cmp test (bad) (bad) inc push fdivrs std pop insl shr jmp int3 mov add jmp aaa fs dec (bad) (bad) (bad) lcall ja test push fwait pusha popa inc cmc lock push outsl fdivs pop jae jno cmp (bad) (bad) (bad) pushl adc scas adc lea (bad) mov sub out (bad) (bad) out clc sbb push (bad) in dec lock scas decl inc repnz mov xlat (bad) incl in or pop jo lods ja rorl and inc ret outsl (bad) (bad) (bad) jp aaa xchg outsl out aas xchg scas mov sbb aam jb add and (bad) (bad) (bad) ljmp data16 mov shrl adc dec jnp rol mov and (bad) (bad) lcall dec jno push rorb push outsb cld in hlt frstor dec pop mov push mov (bad) (bad) jmp cmp sbb jns xor movsb jge mov adc (bad) (bad) mov jae,pn push mov xchg xchg jg adc xor sbb dec cmp leave pop pop ss (bad) (bad) (bad) decl insb (bad) lock dec pop xchg sub loope push inc adc push cmp jmp enter out (bad) (bad) (bad) decl inc (bad) aam inc and js sbb stc cmc fs mov ffree inc ret mov mov ret xor aas mov in xchg or movsl mov xchg cmp mov outsl (bad) (bad) jns mov pop mov push push in lods (bad) xchg push push aas mov push (bad) decl lock ss cmc sub dec xchg cmpsb dec es xchg mov sar fidivrl outsl xchg (bad) xor andb jl push push je fs add xchg repnz cli pop pop (bad) std (bad) (bad) incl fstpl fsubs cmp mov das sbb jo fldenv adc (bad) pushl xchg add cltd (bad) sub pop pop lcall ds (bad) mov (bad) call mov scas mov adc orl es (bad) call pop jo sub inc mov adc dec cs push ret ja (bad) (bad) cli mov nop js sbb xchg sub xchg mov pop (bad) mov mov push movsl (bad) les mov cmp pop lock sbb (bad) jmp add into adc xor xrelease sub test adc lret and dec jns stc (bad) jg fcos decl subb sti mov push mov (bad) lea pusha mov cpuid xchg push (bad) mov dec xchg jp add (bad) jb fistpl cmp gs std mov (bad) (bad) (bad) call jle das cwtl punpcklwd (bad) cmp loopne fisttp or inc insl (bad) decl inc fimul pop dec push in dec lcall cmp lret inc (bad) (bad) (bad) (bad) pushl cmpsl ret ja jne int aad mov xor sbb adc fnsave (bad) jno (bad) (bad) (bad) fldt push adc (bad) xor fsts mov inc sub divl cmpb sti (bad) (bad) call sbb sub mov sahf and nop/reserved mov mov or (bad) (bad) decl cwtl adc mov dec rcll jp lcall sbbl icebp (bad) (bad) push inc push icebp push and jbe add sbb std jecxz adc add ret stos inc dec dec add mov cmp mov add pop push jp fiaddl push sub push (bad) (bad) (bad) call outsl cltd mov or cwtl xchg rclb fcoms mov dec cltd xchg adc mov (bad) (bad) mov lds sbb andb dec jle pop ja mov rcrl (bad) (bad) (bad) (bad) fcoms mov cmpsb xchg nop fsubrs loop jl nop sti xchg jge adc mov (bad) dec mov xchg popa lea dec mov adc cmp repnz mov ljmp pushf sub and lret push out std rorl inc scas (bad) (bad) (bad) (bad) ljmp (bad) jo gs jb subb ffreep sub adc cs mov mov (bad) incl push das subl pop cmp xorb out add (bad) addr16 (bad) (bad) push or cli test push notl jno addl (bad) (bad) (bad) fnop out pop fs call lea mov out sub sahf xchg mov pushf (bad) (bad) (bad) incl adc mov mov jecxz or shl loope ret (bad) (bad) (bad) lcall pop sbb inc cmp adc fiadd loope mov xchg (bad) (bad) (bad) out cltd xor fisubl sti lods fs data16 cmp and aaa (bad) push (bad) xlat aad out mov cmpsl inc outsl jl addr16 repnz push icebp js adc (bad) (bad) (bad) (bad) pusha arpl cmp sbb popf scas and xor xor pop (bad) (bad) (bad) incl hlt cs inc icebp jae or mov sub push (bad) int3 jne cmp out dec jmp (bad) push (bad) fist rclb sub push sub pop mov aas xchg idivb call cmp add lds adc push cmp das inc pop std (bad) (bad) (bad) mov insl jbe sbb and dec cwtl repnz mov cmpsb adc cltd in jae fcoms test rcrb or dec femms or inc push imul cmpsb push or (bad) decl cmpsl mov cmc mov subl (bad) xor (bad) (bad) decl fbld adc jl xor test cmp (bad) xor (bad) (bad) (bad) dec sbb add bound xchg push jb shlb adc xor fiaddl sahf push inc adc cmpsl mov jo jb xor hlt add and mov (bad) decl add sahf imull pop lods jno sbb ljmp (bad) cltd scas or or (bad) (bad) (bad) jmp aam adc sbb fbld fisubrl and out ds inc incl (bad) movsl and int (bad) (bad) (bad) call leave pop and int jne in mov jbe xor inc (bad) notl add mov jmp and xchg or cmc adcl cmc js nop ja pushf add fwait mov mov fs (bad) lea mov dec lcall inc sbb mov hlt stos movb test jne xchg ss sbbl pop sahf jge subl mov xchg sbb outsb into push mov stos (bad) (bad) (bad) (bad) decl push in in xchg mov (bad) hlt hlt cmpl (bad) aam push test fcmove and daa pop icebp das cli adc inc repz (bad) sbb or pop std dec test (bad) (bad) push mov pop or mov insb xchg add cmpsl cmp xorl mov fildl (bad) (bad) (bad) (bad) fwait stc or jbe push arpl inc mov xor movsl mov xor (bad) ljmp or mov xor hlt mov mov xchg test inc jp dec out cmc ret out cwtl pop adc ljmp incl (bad) sub ja shr imul aaa fmull ss push jb (bad) (bad) (bad) push cld jbe jno loopne jae insl (bad) mov adc dec xlat dec cli dec jbe cwtl rolb call call addr16 sahf pop pop mov and mov and addr16 push cltd in mov data16 (bad) (bad) lcall repnz lret push push (bad) stos jge or inc mov cmp mov (bad) out cld js and fisubrl xchg fdivp add sub mov push (bad) (bad) (bad) (bad) call push pop mov sub mov inc hlt rcrb test lds (bad) (bad) (bad) jl (bad) scas cmpsb outsb jmp stos mov add mov and sar adcb inc scas mov aad test aas adc lret pop add push mov into notl inc adc mov lcall test outsl clc jmp jg adc push adc fs sub cmp xor pop ret ja nop shl outsl jmp jbe fsubrs daa (bad) mov (bad) (bad) jg xor sbb sub fcomp cld outsl in add into fidivr test sbb or cli add jge sarl sub dec or loop lea adc (bad) (bad) jmp inc jo fwait icebp orl rcll aas pop push rcrb pop sbb insb in cs aaa dec cmpsb (bad) (bad) lcall test dec pushf (bad) mov imul fucomp (bad) outsb cli (bad) decl push pop jae daa daa aaa mov subb enter (bad) (bad) ljmp outsb mov pop dec sub mov roll js lret add (bad) (bad) lcall pop (bad) fstl fdivrs xorb pop sti out pop stos mov jno jle (bad) pushl mov jl sahf in xchg sub pushf cmp jmp out add (bad) (bad) (bad) (bad) mov enter mov in jb sbb test and fidivl arpl (bad) (bad) call sub jmp pop sbb fisttpll mov pop sub sbb and arpl sahf mov push jnp jo andl xchg adc (bad) (bad) call jno and sarl repnz scas and cmpsl jle cmpsl (bad) adc outsl (bad) cld sbb (bad) (bad) call call cmp mov aaa pushf enter and je cli sub jnp (bad) (bad) mov lcall pop in adc test ljmp add (bad) pop enter shrl push or and popl es ja (bad) call mov andl dec add lahf add mov sar outsb dec out push dec mov jmp fstpl (bad) int push enter (bad) (bad) (bad) (bad) fistp sahf decl lret mov mov xor cmp sub clc and mov or xchg andl cmp and mov jecxz dec mov (bad) ljmp mov cmpsb iret js popf adc (bad) aam std pushl das pop cmpps mov pop lock (bad) cmp popf mov pusha dec inc dec popf push jns (bad) (bad) (bad) mov mov push lods pop stos stos les jmp insb aas mov mov (bad) (bad) (bad) (bad) mov outsl bound cwtl scas fbstp lds fdivl in fs dec or xchg call sub or movsb mov adc loop xchg pop ficomp mov call call movsb shrb push sahf lret mov xor cmp and jge aam adc xlat test sub push inc push and (bad) (bad) incl stos pushf add push jbe inc inc push xor mov cmp dec cmp sbb lods aad lahf sahf hlt test add dec iret movsl dec jge jg pusha mov (bad) call fcoms jp adc (bad) jo gs data16 insl dec cmp push hlt je je imul fsubs xor (bad) fcomip add loopne and fwait xor sbb add and jg (bad) decl push sub sbb xor mov cmp jle cwtl pop lods incl jns jns and xchg push les cs (bad) xor mov mov out cli lcall aaa fnstenv mov cltd or insb mov mov adc int3 insl das je (bad) (bad) (bad) pushl dec enter in nop sarl (bad) lret imull cmp mov in (bad) jmp (bad) push rcrl sub std aas pop xor std xor cltd inc add mov (bad) in pushl cs push push int cltd cld imul test pop (bad) out (bad) (bad) (bad) jmp sub gs insl add xchg sahf cmpsl (bad) mov xchg push test repz (bad) (bad) (bad) ljmp outsb enter sub iret fstpl (bad) xor mov cltd (bad) mov ljmp (bad) jmp push or (bad) movsb or and mov mov (bad) (bad) jp mov cmp cmp scas (bad) sbb in pusha ja cmp mov ljmp xchg repnz stc test sub rcl adc adc (bad) mov cmp outsl mov aaa ljmp adc (bad) (bad) jg addr16 inc hlt mov out xchg pop xchg leave cmc int3 and cmc into outsl add (bad) (bad) fistpll es lods loop cmp pushf pop sti jns cmp mov imul (bad) (bad) (bad) jmp xor int3 sbb xchg cld int3 out dec jl repnz push ds push shrl cmc adc mov jb cltd sub dec sub loopne jg (bad) (bad) mov enter mov xor dec mov xor int3 sub (bad) (bad) (bad) (bad) stc mov mov add (bad) movsl sahf addr16 fist add movsl mov jb mov (bad) (bad) jmp sub into cmp mov addr16 ss lahf repz inc pop loop jne popf int3 cwtl mov (bad) lcall dec xchg sti dec call jmp in cmp cmp jbe (bad) in lock pushl addr16 pusha sub push push leave pop and mov (bad) (bad) (bad) pushl inc (bad) xor subl cmp add or and (bad) decl xchg adcb in and (bad) into xor cmp vmovmskpd icebp pop std cmpsb mov inc sarb push js std arpl (bad) out add movsb dec mov cmp adc jns push sarl inc mov cmp in add (bad) incl dec push arpl lret sbb inc cmp fsubrl es cmpsl mov mov add mov ds outsl cmc ds leave jmp rclb jle les out cltd xchg sub rcr das lret or loope hlt cmpsl and outsl push repnz call mov cwtl xchg sbb mov call dec mov (bad) js enter lcall mov sbb outsb or lret flds pop ljmp mov hlt sahf rcll std rorb insl pop int3 repz in xchg (bad) (bad) (bad) call sbb pop lcall mov mov adc adc call or cwtl nop test call mov xor mov rol jb shl sbb pop and inc dec (bad) pushf pop (bad) fldt add add movb addr16 and enter xchg int3 sbb jge cmpsb push insb sub lcall lahf inc ss push lods movsl dec xchg mov clc test and (bad) (bad) jmp pop push mov sbb and dec mov test inc fstps or (bad) (bad) cmp mov imull dec adc pop jecxz mov add sti (bad) (bad) (bad) (bad) mov push roll pusha mov jl mov stos enter jbe push popa adc in or in xchg test pop mov push adc (bad) (bad) dec lods add loopne outsl sbb jns push movsl push cmp sbb fs jo out xchg (bad) (bad) (bad) jmp lret (bad) cmc xchg mov jmp xor cmpsl mov lret stos lods pop (bad) (bad) (bad) jmp repnz insl add popf adc inc push sahf and cmc inc jl dec ljmp push (bad) (bad) (bad) jmp xor imul pop shlb mov (bad) test test das xchg (bad) (bad) (bad) decl or iret sbb pop or pusha jmp lret push fstps (bad) jb lods jmp (bad) (bad) (bad) decl or loope ret movl shl push or xchg pop gs mov rol insb cmc adc call mov loop adc inc movl (bad) dec jno lret arpl adcl imul pusha mov pop fxch pop add and ljmp jmp add jg gs dec les out push and pop ljmp (bad) decl out lds rclb push xchg pusha sub gs ljmp aas into mov movsl mov sub dec mov (bad) ljmp sub (bad) mov fsubrl arpl fnstenv jmp imul (bad) jmp mov cmpsl loopne out scas ja out jmp xor and and ss (bad) (bad) (bad) (bad) xor jno stc nop sub out and pop push inc mov and cmp xor (bad) decl fwait sbb insb into push adc shll inc mov stos mov fstpt (bad) (bad) call bound imul mov clc (bad) xchg pop (bad) sbb repz xor (bad) (bad) incl xor mov adc icebp xchg xchg outsb insl aaa lods jno jns popf in lret aad cmpsl (bad) (bad) (bad) inc leave sbb jmp push and mov sbb (bad) dec sub push lea nop inc dec data16 (bad) (bad) ljmp sbb pop sub je pop iret push pop dec xchg aas mov loop jmp (bad) pushl push inc fisttpll ror in pop mov jp (bad) (bad) (bad) mov mov mov les push (bad) cmp cli inc insb mov call mov rorl (bad) dec add adc mov jne mov jp inc (bad) xchg jae std jl insb mov sbb enter lea movsl pop mov aad mov ret repz repnz loopne and cmpl (bad) (bad) ljmp xor call cld mov sahf adc stc cmp pop sbb (bad) (bad) (bad) call arpl cmp cli add push (bad) cmc stc imul sub or (bad) (bad) decl cmp outsb mov and mov mov pop mov (bad) (bad) pushl iret and jnp repz pop movsl xchg mov cmp inc enter (bad) dec imul push xor ret mov subb and mov jb daa (bad) (bad) (bad) (bad) fsts mov call ljmp pop pop das inc pop pop mov movsb xor add xor fwait xchg sbb or xchg inc cmp pop jne jnp pop std push sub (bad) xor mov (bad) (bad) std xchg mov ret nop addr16 pop mov xchg (bad) push (bad) jne cli jecxz aaa inc jne cmp test cwtl divl or add jbe adc dec pusha and lret dec jbe cli (bad) (bad) ljmp test cltd dec stc (bad) xor decl mov cmp pop mov loopne (bad) (bad) ljmp incb imul xor aam (bad) jge cmpsl and sbb (bad) (bad) (bad) ljmp mov inc aaa push (bad) fistl aaa and gs push cmp and xchg (bad) mov xor lret ja nop out out enter loope lcall movsb cwtl cld pusha int dec std test pop ret jo mov (bad) (bad) (bad) jmp pop popa jle push pop stos mov (bad) (bad) mov mov (bad) aam rorl testb lcall lods push ja push hlt mov pop bound (bad) (bad) (bad) jmp jle fbld jae cmp add sub movsb cltd sbb cmp xor jo mov (bad) (bad) (bad) mov data16 ret xchg pop pop push (bad) insl jne xchg or (bad) cli in mov cmp sbb jecxz push jns inc ficomp adc jo jae jae (bad) out sub insl sbb les clc adc jno out fisttpll push push or jge cld inc (bad) push fdiv ljmp iret repz fiaddl aam test sub (bad) fcomip pop jo dec push cmp rcrl lahf push outsb mov push (bad) (bad) (bad) lcall mov xchg mov imul addl mov (bad) (bad) call fwait mov xor iret test stos dec fdivr int3 pop lret cltd lahf dec subl std (bad) call jbe (bad) fnstsw dec fadd xchg cmpsl mov out or mov (bad) fisttpl and inc aad mov outsl nop lock (bad) mov sub pushl cmpsb lret jp pop adc push jne pop test (bad) sbb (bad) (bad) (bad) incl xor lods cmp outsb or cld xor divl stc xchg push and (bad) (bad) (bad) jmp mov mov adc cli cmpsb aad push fiadd lcall cmp mov mov sbb fist lret repnz cmpsl sti jg in mov add (bad) (bad) jmp push cmp int3 fbld push mov add xchg stc lret (bad) into (bad) cmc xor (bad) (bad) (bad) fcoml in dec lods jns insb or mov push add lret push iret mov into shrl decl (bad) lods gs mov out adc icebp outsl (bad) hlt scas cwtl insb nop dec sub js cmp pushl inc xchg mov sbb fidivrl aas cmp dec cmp mov (bad) (bad) fist mov jp pop mov push jge call lds gs (bad) jg decl pop repz sub mov xchg jae jo (bad) es (bad) mov idivb addl pop xor xor (bad) lcall dec in push stc sub xchg sub push sub dec mov clc and (bad) (bad) fcomip outsl xchg (bad) xchg mov push inc xchg mov cwtl push movsl inc jle das popl (bad) adc (bad) (bad) lcall push xchg movsb push loope jno sahf mov xchg lods push enter push xchg daa insb pop hlt (bad) jmp inc scas in popa jmp hlt or adc jge pop inc xchg sub inc (bad) call mov test add mov and jae (bad) (bad) decl xor jnp xor and int3 aas icebp lret push outsb push pop and or int jmp jmp leave enter cmp jbe repz inc nop mov jmp lret jns mov or (bad) mov xor or xchg and dec imul movsl test xchg or outsl ja mov (bad) (bad) ljmp in jecxz mov test add fnstsw int rcrb (bad) (bad) ljmp iret mov fyl2x mov out mov mov (bad) fnstenv (bad) sbb nop dec mov (bad) (bad) incl rcrb out orl xor ja in cmp (bad) incl lret pop push mov popa mov or sti aas pop sub (bad) (bad) pushl loop fldl dec sub lods loop mov ficomp insl jmp inc (bad) (bad) (bad) pushl stos daa xor sbb pop pop fisttpl or fnstcw out fdivr (bad) mov test insl dec cmp data16 popf outsb mov push lds sar ja (bad) (bad) push into pushf push popa push out pop cmc in dec adc inc ljmp (bad) (bad) (bad) pushl dec popf add mov mov (bad) fild xchg xor in mov into and mov mov ljmp jecxz cmp dec xor mov push ret push jns mov lods notb push xor mov (bad) (bad) decl ret je push xchg push sbb out mov sbb imul lahf xchg (bad) (bad) pushl cmc inc sub outsl aas fsubrs mov push and movsb outsb loop pop fstps or push (bad) andb aad (bad) mov (bad) inc cld cmp bound xor into inc push pop dec jbe mov je mov (bad) (bad) mov enter mov sbb arpl mov repnz sub (bad) (bad) incl xchg outsb and inc cmp loopne sub mov mov sub lret jg ljmp adc fistpll cs (bad) sti jge sbb xor and push fcmovnb (bad) (bad) (bad) (bad) cmp xchg sub dec pop cs xchg add std test mov push fidivr adc dec stos sbb pushl mov adc ficompl incl sbb xlat dec pop dec jno mov lods jbe sub and pushf push shlb sti xchg ss (bad) (bad) (bad) fnstsw and cltd rorb sub loopne cli in mov mov mov (bad) pushf xchg or push or (bad) inc insb xor (bad) mov stc adc rolb ja ljmp leave (bad) mul or and insb icebp jbe pushf mov and (bad) fcomps incl scas test inc imul or aaa and mov sbb enter (bad) (bad) lcall ljmp push loop in mov xchg loop jne cli iret xchg sbb (bad) jg pop ror sahf loope stos jo (bad) xlat cmp xor ja lret xor shrb (bad) (bad) (bad) (bad) clc fldt sahf pop mov adc daa jg pusha cli or mov xlat incl add js negb movsl pop idiv (bad) (bad) jg (bad) (bad) jno fs movsb sarb mov aaa or mov rorb (bad) (bad) (bad) in stos sub in nop xlat scas cs dec mov out rolb and nop pop fildll clc das clc xchg (bad) fs jge imul jae mov dec fdivr decl sub test out repnz cmp or dec and push (bad) (bad) (bad) incl test push les orl mov cmp popf int sub rcrb xchg jle sub adc pop add sar sar add popf pusha xor (bad) (bad) (bad) push inc add les jmp dec cmp fucomp mov or leave xor (bad) (bad) (bad) incl enter aas dec dec mov or jl mov repnz ja scas clc adc push mov fiaddl test xchg mov lcall arpl (bad) (bad) (bad) cmp je and int jmp mov mov pop (bad) ljmp ja rcrl fwait lock jg jle sub adc (bad) call dec std jo mov and nop mov push fwait cmpsb sbbb jb js mov (bad) divb lds fs movsb loope adc test (bad) scas clc (bad) jg jns push push int jge arpl mov lods (bad) (bad) (bad) call cs ljmp jmp cmc and xor xchg mov mov (bad) (bad) (bad) call and imul mov popf xchg nop adc adc xor sub xor addr16 lock mov cltd into mov pop out test inc adc (bad) dec ss dec jns jns pop fnop (bad) (bad) (bad) (bad) (bad) daa ds jge bound pop mov pop retw lahf mov rcll std aam ret dec popf (bad) (bad) (bad) ljmp ds (bad) lret xchg or cli adc mov mov inc (bad) (bad) (bad) ljmp jge cmp pop icebp loopne call test cmp sbb adc xchg ret mov sbb in loop xadd cwtl sbb sub enter aas jb iret aas mov jg daa mov aam cld dec sbb mov std lcall (bad) lcall enter mov mov sbb xorl and fsubrl icebp xchg ljmp mov loopne xchg test adc out das dec lcall ss das cli (bad) fcomps adc outsb lea dec (bad) loop add (bad) (bad) decl jo jmp pop push pushf lods push jmp test mov stos and je mov (bad) (bad) (bad) pushl or scas jne xchg cmp pop out pop jle aas or xchg fidiv dec je cs decl (bad) or outsl out push mov xchg or (bad) fldl push pusha scas push or sti pop in in (bad) incl xchg sub pop mov xor or jl sub std call xchg aam test mov cmp sbb xor (bad) std dec test loope jmp cmp mov cld push (bad) int mov ljmp (bad) out pop mov jg sbb iret pop pop xor jle sub jp (bad) (bad) (bad) call movsl ror and pop adc push into fisub test xchg pop jae (bad) (bad) (bad) (bad) fnop (bad) jbe incl inc and (bad) mov loop adcl ja xchg cmp incl pop and cmc adc mov dec sub push or lcall imul or (bad) fcoml jge shrb call pop pushf mov mov test (bad) jmp cwtl add scas test xchg inc mov jo mov aas pop cmp xchg ljmp nop jle xchg fwait pop fstl pushf xchg rcrb int roll scas fwait (bad) (bad) jmp (bad) aaa mov xchg loop jo push imul cmpsb mov push fstpt jo (bad) aad sub divb inc pusha daa jae rorl jg lcall sbb inc cld scas add cwtl cli test cwtl insb xor sub (bad) (bad) (bad) ljmp mov push out out add das mov or movb jne sub fwait (bad) (bad) (bad) cmp loopne popa pop shrl push sbb aaa fsubr pop loopne inc push into (bad) (bad) (bad) jmp sbb push inc outsb mull mov dec and outsl mov popf cld daa (bad) decl xchg adc aaa dec inc jae pop outsl jecxz xchg int3 imul adc (bad) (bad) call mov ds ss push pop sub pop push scas xor (bad) scas dec clc sti pop mov sub (bad) (bad) (bad) incl pop inc pop in sbb rcll jo cmp sbb mov (bad) cmp jne (bad) ljmp or jl push cmp jnp pop movsb sbb mov aad out test mov mov outsb aam scas mov dec and repz adc xor jno (bad) es xor push (bad) (bad) js scas jnp gs in (bad) push cmp movsl cmpsb repz icebp mov insl or (bad) (bad) jmp aam xor jmp andl cmp stc add (bad) (bad) decl daa shrl cmp adc aaa mov pop sub incb push ret int adc fucom mov mov mov sbb (bad) fsub cmp push mov (bad) pushl fs push fidiv sub out clc shlb jecxz fcompl (bad) (bad) (bad) decl int push add fdivl push or sub add ret push movsl (bad) (bad) (bad) ljmp lds popa add mov adc pop loope xchg (bad) fildl (bad) (bad) (bad) call inc push dec jns and in test xor cld sarb and decl sbb gs pop loopne push fistl push in outsb fsts mov and (bad) (bad) incl sarb mov add mov and (bad) (bad) call mov imul push orl ja fldl jecxz fs scas lcall jg test inc arpl mov (bad) (bad) out fstps pop xchg fs mov stc test xchg cwtl imul in mov sbb add sbb leave lea ret fcmovbe xchg xor lcall enter xor rcll in push mov mov cmp inc push inc mull xchg std (bad) (bad) incl lahf mov xchg xor inc sbb lret outsl (bad) lea stos call frstor and movsl ss xchg in daa or xchg sub (bad) decl ljmp nop lods lcall fmul loopne mov adc pop ret pop loopne dec loop in mov sub lock in mov ljmp pop or test push outsl xlat pop imul popa mov (bad) (bad) (bad) (bad) js adc test xor fcompl sti or lret mov fwait ret add (bad) (bad) mov jae push and out xor mov adc (bad) (bad) ljmp icebp xor fdivrs negb leave fldenv pop jmp mov js mov gs in das adc negl adc cld imul (bad) mov xor mov push dec fdivrl xor (bad) dec adc jns add call mov mov mov xchg rorl mov sub adc inc (bad) (bad) call inc loopne push dec daa in cmp test ds mov insl mov aas pop or pmaxsw and mov negl mov js scas nop mov (bad) jg (bad) aas mov sub cld xchg js loop je imul mov xor das jl jg fsubs fistl jge,pt sub (bad) (bad) (bad) lcall (bad) jge ret mov aam jmp clc mov jp pop aam add (bad) pushl mul mov enter hlt jg and push add dec std adc mov sub sbb (bad) push not ljmp or aam mov and mov pop movsb (bad) decl pop xchg pop jb movsb jb xchg cs mov cs push or ja add cmpsb push inc sub cmp push (bad) or clc (bad) pushl add ljmp dec sbb std rcr and cli mov fdivrl je cmpsb stc xchg sbb dec inc es scas inc arpl pmaxub mov pusha cmpsb decl (bad) aad rcll add sub (bad) push and pop mov jnp mov mov push mov (bad) addr16 xchg aaa mov test inc ss jge or adc and dec dec fistpl fwait jl lds push cmc mov jmp mov lods xor (bad) (bad) (bad) jge arpl adc popa adc fidivrl mov xor (bad) (bad) (bad) call cwtl (bad) push out cmp popa and lret arpl sub jo sbb sub insl adc ljmp in (bad) mov adc jnp std jmp (bad) jecxz cmp jne jecxz pushf cld mov neg in inc fidivrl (bad) (bad) (bad) (bad) jmp and xor cs aad pusha inc add xor aam aad fiaddl cld (bad) pushl mov adc dec (bad) pushw (bad) adcl push push (bad) (bad) ljmp mov push push outsb mov mov scas in stc (bad) into (bad) (bad) (bad) (bad) mov imul daa jl add test pop add xchg mov (bad) decl xchg lea repnz fs push add jbe mov (bad) setb mov cmpb je cmp inc sbb mov gs data16 add orb (bad) insb mov xchg sbb mov (bad) divb das movsb cld (bad) (bad) (bad) jnp repnz mov sti ret out mov mov push cld insl xchg and in push mov std pop sub popa dec cmpsl push call (bad) popf decl add pop dec (bad) add (bad) or pusha pop xor sub mov (bad) push std push out xor mov (bad) (bad) mov adc aad lret add mov ljmp sarl jne sbb cmpsb mov adc (bad) (bad) incl (bad) pop mov sbb or hlt mov (bad) (bad) jg jno sbb clc call pop popa in mov jp in pop and (bad) jmp sub nop ficomp enter loope gs loop test and xchg movsl pop (bad) mov movsb sbb cltd std (bad) cwtl push dec jp (bad) (bad) (bad) mov xlat leave xlat jne fs nop mov (bad) jge or mov sub (bad) cmp cld mov cmp push sub or imul (bad) ljmp sbb repnz je lods pop ds push pop cld and (bad) ljmp ljmp int xchg or pop sarl ljmp pop push jecxz leave sahf daa rcrl dec and lea int3 arpl adc out jo lea (bad) lcall push xchg imul stc jg imul and (bad) ljmp clc add cwtl mov mov sarb push fsubr jle and stos xchg push mov les aam xchg divl lds push add add dec clc popa jo cmpsl add pop fs clc ror jns pop or add and (bad) in pop loope fisttp dec pop stos popa aaa push int dec fidivr leave mov mov cmc scas fcomps aam (bad) (bad) pushl cli fstpl add pop mov pop jp lcall stc out xchg inc jmp mov iret or push sbbb jnp jae sahf enter lcall movsb push std in jo orl mov push int3 stos pop and xchg fdivs in (bad) lcall adc push sbb mov xchg out inc fwait insl cwtl (bad) fildll arpl call sbb sub je (bad) ret fcompl sbb notl sbb mov sub ljmp fcmovne in out mov push int gs mov and out test aam adc xor (bad) xchg mov dec stos xor (bad) (bad) (bad) lcall pop aas nop adc fildll add inc ret push lcall push bound aam mov enter inc (bad) ja push sub xchg insb and pop add or dec pushf (bad) cmc pop imul cmpsb mov add (bad) inc je dec aas mov outsl sbb adc cmp push (bad) xor (bad) push outsb and std push dec push (bad) lds cmc js scas stc adc insb stc lods pop and fwait ss (bad) (bad) decl lds lock lods sar ljmp sub jmp (bad) (bad) decl inc pop test dec push mov sbb out cmpsb push push dec (bad) lods imul (bad) ljmp jge or int nop dec out xchg dec jae xchg iret js lret mov mov sub int jns clc add cmpsl sub inc adc jg call outsl lods pusha enter dec mov and xor jl add (bad) (bad) call cmc push imul mov jbe jns sbb mov sub outsb (bad) fnop jl or dec lock sbb xchg pop jg (bad) pushl sti mov (bad) xchg xchg or icebp xchg jae (bad) (bad) (bad) decl subl mov or add mov std pop int mov add mov roll push push insl mov lds leave pop sub (bad) jle repnz push xchg ds sub mov fdivrl repz stos es xor mov ljmp jmp mov call mov fidivrl and (bad) (bad) pushl ljmp (bad) sub add out fs hlt fabs adc mov mov cld (bad) jmp lea push add jb push loope lds cmp (bad) (bad) incl (bad) cmp and cld lret andl es cmp jno lcall test mov data16 (bad) icebp and popa dec shr (bad) insb or (bad) (bad) ljmp push cli mov (bad) sub xor ret ljmp mov (bad) (bad) (bad) call (bad) ficompl mov call repnz sbb ljmp call push clc aam lret out call lods int mov inc or ds (bad) (bad) jmp insl mov in mov rcrb mov sbb clc pop push mov (bad) ljmp mov pop repz mov (bad) mov xlat jecxz popa sbbl icebp (bad) jg les push sub jmp adc mov (bad) (bad) (bad) jg int3 lods add fadds push xchg cmp repz pop insl loopne stos cmp (bad) (bad) call shrb fdivrs pushf fimull cld loopne data16 movsl mov pop push loop sub push push jge ja in arpl les into sysret sbb cmp ret (bad) jmp or jmp int3 jns jle leave mov xor loopne adc xchg jl mov iret mov dec (bad) (bad) (bad) pushl movsb add cmp inc lods pop jg pop fsubl (bad) adc (bad) (bad) pushl (bad) ret (bad) loop sub loopne adc loop xchg (bad) pop test int3 lods and std (bad) decl cmc (bad) xor insl inc pushf xchg loope popf cwtl inc sbb fstl out mov add addr16 and adc adc mov mov mov mov mov sbb outsb mov mov out (bad) in push int outsl add (bad) jmp cmp cli sahf es mov push mov idiv (bad) jg mov loope enter stos mov insb in fnstcw sbb (bad) call std inc xor xor fwait cmp call ret or scas lret inc test or (bad) fisttpll xchg xor sahf imul lea js mov addr16 (bad) cmp inc jno rcrl iret idivb repnz jge hlt fisub add push sub mov hlt enter add jae popf lods mov or push inc into in (bad) (bad) (bad) lcall insb test and in and sti imul cmpsb push adc cmpsl push xor lcall sbbl (bad) jb add push sbb cmc out dec adc mov lea aad push and pop repnz iret or imul out jmp push (bad) (bad) (bad) mov test pop in xchg stos enter js daa adc inc int3 int sub gs adc scas pop cmc cmp rol push dec test arpl ret cmpsl pop sub cmp push repz pop and push and icebp jle add lret inc jbe cmp dec pop gs mov nop stos and pop dec add imul or pop pushf js (bad) (bad) (bad) (bad) clc cmpsl and pop cs aam popa rcll bsf dec inc addb dec ret (bad) (bad) pushl adc push jle cs push push lcall add popf test mov fldl (bad) call add leave daa sbb daa cld xor cmp movsb nop/reserved jae (bad) (bad) inc pop add out (bad) outsl jbe (bad) aad aad (bad) aad insb es sub hlt negb (bad) (bad) ljmp mov and push (bad) jl dec fdivrp fistpll leave cmp andl or (bad) cmp cmp xor je dec jne jp inc (bad) outsb or and cli (bad) pushl cs push cmp into add add dec pop inc mov (bad) (bad) (bad) pushl push cmpsl mov ljmp out jb ds jle int3 and mov inc dec xor push dec sub lock inc lock imul fs (bad) lcall hlt jge hlt mov inc insl test pop inc movsl repz das out xchg pop sahf (bad) (bad) (bad) pushl adc sub sbb add repz push adc mov (bad) (bad) (bad) jmp pop push mov jb out jbe std xor xchg xcrypt-ecb cmpsl mov mov (bad) (bad) (bad) pushl repnz fmuls icebp cmpsl sbb leave sub push pop sbb clc ds cmp jmp mov pop mov cmp test jecxz (bad) (bad) fildll lahf mov ret data16 shll jl add ja (bad) mov xchg mov lods mov and and xchg push stos int3 xchg aad add (bad) mov (bad) (bad) jmp fsts loope fild xor dec lods outsl adc (bad) or (bad) (bad) ljmp push js push sahf inc cltd mov std scas mov jnp mov push push (bad) (bad) (bad) ljmp mov test inc cmp mov sbb push aad sub js xchg (bad) (bad) decl pop fnstsw aam leave sub mov pop mov mov cmp pop pushf lds and scas pop add daa xor adc xlat out cli (bad) (bad) mov sbb xor into jmp ret insl xchg (bad) out (bad) (bad) decl sub push mov adc or inc aaa sbb dec add mov (bad) decl fdivl mov mov xor es cmpsb pop ss movsl ja sub aad dec pop cmp push stos ss popf adc jb xorl leave mov (bad) jg test jbe dec inc jmp or add xor loop out push or ficompl ss decl iret sub xor xor ret ret loop fisttpll (bad) (bad) (bad) lcall aad and xchg and xor xlat cmpsl cmpsl aad xor cmp or mov scas jmp sbb incl lret call ljmp mov xchg jae sub pop call (bad) fidivrl mov and test lcall loop (bad) and pop and (bad) incl cs mov loopne aas fdiv test out xor xor xchg test push push inc lods dec mov pusha lahf scas subl lods decb cmp dec cmc mov (bad) ljmp add rclb xchg jmp cli sub mov sbb (bad) (bad) and leave fwait (bad) repz push (bad) mov inc fsubrs dec (bad) jae jmp cld (bad) call sub cmp imull sbb mov mov xchg inc xchg daa dec sahf pusha jmp sbb imul jp,pt daa movsb faddl mov cwtl gs dec push pop cmpsb fsubrs adc xchg (bad) (bad) (bad) jmp cld xchg mov push xor push out xchg in inc pop bound sbb loopne cli and mov jbe xchg inc pop xor jp addr16 cmp fcomip clc pop fildl jb mov subl push (bad) (bad) (bad) call inc push jnp mov sti in sub sub je and imul push aas into mov mov loopne or in xor (bad) decl (bad) enter mov fwait popf int3 std adc rcl in aad das clc fcomip add inc (bad) (bad) (bad) call mov in adc dec and pop stos mov or stos dec add or mov (bad) jmp js jns movsl adc rcll push add repz aaa iret mov cli insb in clc fucom xchg sbb (bad) (bad) lcall dec icebp xchg scas adc mov jp and nop xor jle imul andl out pop xor add mov movsb stos mov (bad) (bad) jmp lods cmp out adc cli das fdiv dec cltd sub imul (bad) (bad) incl hlt dec loopne pop mov insb rcrb jbe jle pushf mov adc push xor aaa test icebp (bad) inc int insl or adcb loope out aas das or insl dec ret cmp loop inc lahf sahf stos daa gs cmpsb test imul xchg shrb fdivr test (bad) incl push sub push mov jb mov pop or decl jmp iret inc aaa and les (bad) fistl cmpsb pop add add jb push mov and (bad) (bad) (bad) (bad) mov mov fistpl xchg arpl into cmp sub iret cmpsl mov cld (bad) jge pusha jo inc in jnp into push mov aad (bad) push fdivp push fbld mov push push outsl movl pop inc pop xchg and loop (bad) incl loope xchg sbbb cmpsb cli xchg mov mov ffreep push cld (bad) (bad) call rdtsc testb xchg iret imul cmp jmp (bad) (bad) call mov sbb jecxz icebp jnp ror xor jg (bad) mov shll loope ret lea aaa add loopne mov (bad) mov xor (bad) call and movsb xlat and testl stc mov mov (bad) (bad) jg xor leave push mov cmc fldt outsb inc lods outsl push and and (bad) (bad) (bad) fstpt push dec sahf pop leave xor xchg ffree xor repnz outsb fildll or (bad) (bad) inc pop xchg pop movsb or popf mov int3 imul decl ret (bad) (bad) call into les jbe sbb cmp into (bad) call jecxz in mulb (bad) (bad) decl inc scas hlt outsb fnstenv adc jnp stc dec std incb push dec movsl cmpb (bad) (bad) stc cmp dec mov int3 (bad) add aad xchg fs push xchg jbe pusha mov (bad) (bad) (bad) (bad) std (bad) js sti hlt in je out aas mov iret xchg repnz dec out jae xchg fadds insb xor (bad) (bad) (bad) decl jno sbb push (bad) leave in add push jnp fsts jge sbb lahf adcl or push xchg sub inc test mov xor imull fldl test jmp adc mov cltd gs jo shrl negb mov mov or (bad) (bad) mov sahf mov faddp mov adc in shlb adc pop mov lods (bad) (bad) incl fdiv jae xor or outsl sti pop inc mov mov incl xor xchg es hlt mov lahf aas enter push das xchg mov int3 sub stc mov (bad) (bad) jmp pop hlt push in ljmp inc xor inc (bad) test fldenv (bad) (bad) (bad) cmp inc dec ljmp movl dec js aaa out lcall sbb pop fsubr sub add addb mov jmp push mov or out jecxz jnp insb mov push jmp hlt mov jmp fnstsw dec idiv mov fsts (bad) (bad) (bad) fbld xor cmpsb std jns and sub popf inc jo clc sahf sahf sbb negb rorb push (bad) (bad) (bad) lcall jne ficompl ret and xor cld test push push dec add and in call inc adcl xor pop mov sub iret pop fldcw xchg xor sub sarl mov lahf loop rol out add and fstp push int repnz adc (bad) je (bad) (bad) call repz dec xchg shrb pop jle xor pop mov jge and (bad) (bad) decl mov rcl std xchg pop mov mov hlt xchg adc sbb sub xchg (bad) (bad) (bad) lcall imul hlt (bad) xor js in mov xchg pop popa fcomi sahf pop pop scas push (bad) mov xor mov dec out mov enter xchg (bad) (bad) (bad) inc and push fistl popa aaa jp pop ljmp aam out out inc adcl jge daa xchg push popf push aam jnp adc sbb mov fsubrl inc pop aaa orb mov (bad) decl lea xor cmp xchg inc xchg mov (bad) (bad) mov dec lock aam mov hlt pushf pop inc mov into dec adc (bad) sbb (bad) (bad) pushl xchg and das lods mov jb movsl rorb mov xchg pop cs mov (bad) (bad) inc cmp xchg push in mov les push loop xchg cli cmc or jle test test arpl mov xchg loopne xchg popa outsl lret aaa scas repnz xor cli sbb sahf imul (bad) (bad) call test and push jno in mov cmpsb mov xchg pop sti stos aam and push pop pushl decl adc inc outsl jle (bad) and rsm jecxz (bad) in mov loopne adc scas lcall into cli shl (bad) out inc xchg imul sub sbb pushl jle lods fs pop jge outsb mov mov outsl dec mov imul (bad) (bad) arpl or mov std add xchg jmp mov call xchg aaa shrl push inc and sbb nop jle or push std (bad) lcall add lret negl push inc int jns das imul mov (bad) (bad) lcall push push fnstcw pop mov stc pop incb push shrl mov cmp scas dec adc mov pshufw (bad) (bad) (bad) call cli rclb jns xorl shrb adc sub (bad) (bad) (bad) decl jle pushf adc testl pop sub mov popa jp (bad) (bad) ljmp std orb mov fs xchg push addl cltd xchg je xchg sub (bad) (bad) jmp sarb icebp pop fidivr fildl out ficompl js sub cmp pop jg (bad) pushl dec nop or bound inc hlt xchg sub aad sub cmpsb stc sub (bad) decl or (bad) add cs sbb jo push xchg mov sub xchg dec int (bad) repz (bad) (bad) (bad) (bad) in mov inc adc sbb out mov andb hlt mov stos or (bad) (bad) incl (bad) jge shll je jo les rorb adc lcall sub jl hlt call cld adc push lods aaa stos scas sub adc test sbb js mov xchg enter aam hlt in push (bad) (bad) (bad) mov out fildll adc jg sbbb xlat sbb push (bad) jmp (bad) (bad) (bad) call arpl daa push std mov fistl loope rcl outsb fdivrp enter sar (bad) call aam icebp fmull cmp push sub sbb int lcall lods xor lods inc lea (bad) (bad) (bad) inc loop movsb fwait stos sbb mov or fs (bad) pop xchg lods mov mov (bad) (bad) (bad) jmp mov scas ljmp hlt int3 push xchg andb xor push adc fwait sub sbb call jge out (bad) imulb cmpsb inc jno jbe adc shr shrl (bad) call cld cmp ljmp mov mov push stos and push into (bad) (bad) (bad) decl sub xor add fmuls mov insb and lea daa (bad) les mov lret (bad) (bad) (bad) lcall sbb (bad) ljmp data16 pop fnstenv push jne fimul call clc mov mov sbb push (bad) decl push cmp mov jne enter repz movsl xchg shll (bad) dec xchg das sar cmpsl push xchg in icebp jne pop or pop add dec fwait loop pop xor (bad) mov cltd mov imul ss icebp inc sub (bad) jmp cld xchg fsts (bad) pop mov cmp xchg insb fnsave (bad) aam (bad) (bad) (bad) pushl repnz push nop mov test xor fstps daa aam xchg cltd jge lahf lret push loope add (bad) arpl (bad) jp mov and push add mov clc adc mov xchg insl xor (bad) (bad) jmp push cmc lret iret dec outsb pop adc xlat sbb lret mov xchg (bad) (bad) fistpll lods (bad) fcmovne and cs xor adc sahf negb (bad) (bad) call and int3 dec stos movb jecxz cwtl dec ret mov sub mov lods notb mov cmpsb sub (bad) mov pop fsubs dec mov jb xchg out mov (bad) aad (bad) ljmp popa cwtl ficoml sub pop enter jno insl mov scas scas mov ljmp mov dec sbb shl xor mov (bad) (bad) (bad) decl push mov push adc fs scas cmovl xor mov rcll push std (bad) ljmp sub (bad) jno (bad) scas popa and sbb or inc js in (bad) (bad) (bad) push dec (bad) fsubrs testl xor fdiv dec dec sbb rcrb (bad) jge into dec dec rcl addl lret cli mov scas push repz push bound decl (bad) push cld cmp push cmp mov mov xchg sbb mov (bad) (bad) call int3 adc mov cmp dec fmul push push repnz lds xchg dec push sbb outsl xchg xchg inc jge decl mov push rol dec mov jo (bad) (bad) ljmp mov fnop push sub insb ret dec lods std push (bad) and lock incl pop fxch faddp into aam jb xchg xchg xchg dec icebp orb (bad) fucomi sbb scas into cmpsb (bad) or and lods lds lock xor call in test nop inc mov xlat and mov mov mov (bad) (bad) (bad) cmp in xchg adc addr16 andl mov subb mov (bad) jg in scas mov cmc pop mov addr16 mov das mov imul (bad) call pop ja pop mov sub lret sbb inc adc hlt dec rorb mov pop adc popa leave mov push jg adc les das sub mov lcall mov or dec addr16 aaa subl (bad) (bad) (bad) mov and stos cltd daa xor push cmpsb repz shlb (bad) movsl (bad) (bad) (bad) pushl leave out push mov fwait xchg shr fmull push out mov xor pop sbb (bad) (bad) call push dec mov mov pop std stc and ja rorl lods hlt inc push xor (bad) call (bad) out mov ds push mov in scas mov popa jae push je mov (bad) (bad) ljmp or mov cmc hlt adc pop (bad) xchg xchg jne repz pop push mov dec sub mov gs loop mov fstl movsb mov dec call sbb mov shr cli in cmp out cmp loope adc (bad) ljmp sub test call jmp (bad) (bad) jg jecxz imulb (bad) (bad) (bad) jmp out popa das arpl cld xchg pushf pop insl bound popf repz jmp (bad) jg ret add rcrb jnp xor mov mov (bad) (bad) (bad) pushl enter jnp pop pop mov stos push mov sbb (bad) (bad) (bad) incl and mov cwtl icebp sub (bad) mov dec std (bad) fisttp pusha xor (bad) (bad) (bad) incl or cld les cld sub std xlat jbe cmp (bad) (bad) call mov sub das adc jae dec insl divl inc dec push repnz ljmp scas repnz fs shlb (bad) (bad) (bad) decl int3 cltd sahf mov pusha sti fs push push and rcrb cmp addr16 pop movsl xor (bad) cmp inc xchg test jnp cld or mov mov cmp mov in pop (bad) ljmp pushl test push inc mov jb sbb mov nop xchg push nop inc (bad) (bad) incl push cmp out push dec movsb addr16 in aad (bad) iretw jo (bad) shl int3 (bad) (bad) (bad) ljmp int data16 cld lds imul (bad) pop and icebp push sbb (bad) ljmp je sbb shrl cwtl xchg int (bad) lcall cmp xor (bad) (bad) (bad) call push cmp or sbb push loopne lret addr16 push and adc (bad) (bad) dec lahf shr sarl or pushf daa push xor cwtl add xchg in push call testl jns mov or push int pop lret push push lea (bad) lcall outsb inc dec mov popa add mov add or cs cmp or xchg xor push dec pusha (bad) mov dec pop or adc xchg sub and fcoml jno (bad) mov ljmp lock insb lcall pop fcomp insb fwait gs call pop sub (bad) incl scas ljmp inc pop stc pop cmpsb xor popf push sub mov dec mov pop repnz (bad) outsl mov enter lahf dec sbb (bad) ljmp gs test and fwait push mov call outsb clc (bad) imul jo adc negb test (bad) xchg pushl dec adc leave sub add jp ljmp or and xchg mov xchg dec add call mov (bad) call inc xchg pop (bad) sub xchg push or stos (bad) call loop push js aam imull outsb sti adc mov xor xor sbb pop insb loopne cmpsl or sub call imul int3 jl (bad) (bad) in je mov (bad) fmuls gs out test inc push lock pop (bad) decl push aaa xor mov mov or push push movsl fistl or fdivl loopne jl pop in hlt xor mov push dec (bad) sub (bad) (bad) (bad) incl xchg stos call inc or lahf xor jg jmp cmpsb les mov (bad) (bad) decl pop out push cmp mov mov (bad) cmp out xchg arpl (bad) (bad) (bad) in shlb sub add loopne clc dec and ret inc sub ljmp ja les xor pop mov dec loopne mov lock je lret (bad) pushl jle test daa int3 and inc mov je add aaa mov es aad (bad) (bad) (bad) inc sbb mov movsl sbb popa aad dec mov mov daa add imul lods mov adc aaa push cltd push in mov in xor ss (bad) cmp aam lea aad dec add jg sbb (bad) jg mov cmpsb (bad) aad nop jb adc dec and (bad) aaa (bad) jae (bad) (bad) (bad) (bad) (bad) ljmp pushf lret mov leave ja shlb fist dec sbb stos cli test pop mov (bad) mov push cmpsb sub inc jle sub hlt dec in cmp lock xorb (bad) (bad) call xor test loopne dec pop loope fist aad mov insl push xchg push in (bad) (bad) jmp jge inc fistpll divb int3 jle subb xor popa mov dec aaa xchg fsubs pop lock popf cld ljmp push mov stos xor (bad) pushl std fnop and jl adc es add loopne sbb mov nop in cwtl shrb mov adc (bad) movsb sahf inc mov add (bad) in clc mov jne push ficompl (bad) sub mov (bad) jg std outsb rorl or (bad) pop fnop xchg addl mov and (bad) (bad) push loope push xor fsts fidiv mov xchg pop icebp shrl (bad) pop sti sbb shll adc in repz (bad) (bad) cmp and sub enter repnz test xchg mov cmp (bad) ljmp test push sahf call imul in add ds in dec pushf movsl dec shlb (bad) (bad) (bad) decl xchg cmpsl sbb or jecxz xor add (bad) xchg iret pop or xchg fwait push inc into (bad) (bad) (bad) (bad) clc stos xor dec js lods push std xor dec ret aaa cmp push pop aas jge or decl fisub adc insl or outsl mov cld jg lret sbb add popa lock dec cwtl (bad) (bad) (bad) call sarb decb push add cs movsl (bad) scas mov into jb mov decl cmp cmp lds mov jl dec xchg and leave sub (bad) incl pop xchg pusha daa adcl sub mov jg (bad) (bad) (bad) incl xchg sub push sti jns jns add paddw jno movsl push and xor jmp daa fidivr mov dec dec jno fucomi outsb push adc sbb jno push icebp (bad) (bad) (bad) ljmp gs adc enter icebp bound flds lret nop cwtl lahf or xchg notb xchg call adc shrl stc mov pop xor or stos (bad) mov es xchg push xor std dec mov lock (bad) (bad) (bad) faddp fnstcw stos dec xor pop add pushf pusha xchg es sbb lcall (bad) (bad) jmp cli dec popf push lock cmpsb es adc push mov test (bad) (bad) je,pn sbb jne add fimul movsb add insl jno add xchg (bad) (bad) ljmp fs dec or mov js jp test xchg inc fs insb ss (bad) (bad) jg adc icebp cmpsl xchg pop xchg sub pop mov hlt cltd jge call lahf pop push sbb mov icebp cld pusha push insl mov (bad) mov mov mov daa sahf add loope cmp in rclb bound sbb stos fisttpll fdivl (bad) (bad) (bad) lcall mov mov repz mov sbb stos or addb jmp loop xchg inc aaa loopne mov (bad) pushl dec fiadd add mov dec dec div das cmp (bad) (bad) (bad) (bad) call sbb add jmp in xchg aas adc jg fimull ror pop int mov fdivrp (bad) jg lahf loopne lock sub ss fild add (bad) aam repnz (bad) pop cld (bad) pushl imul mov pop shll push lcall (bad) mov lods xchg lcall ljmp jb mov out (bad) (bad) (bad) jmp por out insb push fcomp inc in ficom mov int3 mov (bad) aas fimul js sarl pop mov loopne hlt cmp (bad) xchg pop sub lcall (bad) movsb xor sub lret pop sar push mov add or (bad) (bad) jmp mov and pop and sbb sahf stos jae mov add loop and decl cli xor sbb jo inc xor xchg test mov dec cmp mov adc add (bad) (bad) (bad) jmp mov int3 mov iret adc cmp es push es mov mov ret rol in fstl test fadds cmp cmp lcall mov int3 push out xor jno fs dec aas mov xchg (bad) (bad) (bad) incl push mov jp sahf int dec xor adc mov sbb jb push data16 add xchg insb add inc sbb iret mov mov (bad) (bad) jnp test sub inc inc jp ja cli outsb dec or test clc jge dec xor mov (bad) incl cmp loopne in jbe mov mov xor jo cmp out (bad) (bad) (bad) pushl adc xchg imul and jmp or fs xchg cmp jle pusha lret aam (bad) (bad) push jae push xchg mov push push pop scas cli outsl les inc icebp enter dec add (bad) (bad) (bad) push dec test cli jmp jns in pushf lods and inc jbe adc adc jmp xor addr16 dec sub sti (bad) ljmp imul push xor or in jecxz imul rcrl (bad) (bad) fcomip scas sarb mov push push jp jg outsb aas sbb das rol xchg les (bad) (bad) jmp rorb iret and addr16 push push imul or mov aas cmp ss bound jle clc push movsb test mov xchg (bad) or push std ret psrlw stos dec (bad) cmpsl mov mov (bad) mov pop inc sub mov insl or roll aam jge scas std mov in (bad) (bad) incl outsl je and xchg icebp xor (bad) mov dec push dec mov test cld (bad) (bad) call mov lahf push push (bad) pop inc mov mov pop (bad) pushw cltd xor imul pushl push push das adc loope or or mov and sahf (bad) (bad) (bad) call push xor movsl xchg and pop xchg jecxz aaa or popa nop dec add nop neg loope add (bad) std stos js cltd pop add insl aaa (bad) pop cmp popf pop aad xchg call bound (bad) call (bad) hlt sti and shrb add mov xchg insl or ffreep dec (bad) (bad) (bad) jg insl jnp movsl rolb inc call add xchg fwait in pushf sbb pop ljmp (bad) (bad) (bad) incl pop cs loop mov icebp in bound and bnd jl (bad) ljmp clc rolb xchg add pop sbb add or shrb std (bad) (bad) in mov xchg mov push add (bad) bound push inc mov mov idivb scas (bad) ljmp mov bound bound adc stc pop aad (bad) (bad) (bad) decl and dec lea push xchg js add movsb add jne in cmp mov mov or pop mov lret xor and std (bad) (bad) jmp mov or testb dec xor cvtps2pi int3 cmpsl or gs adc pop pop mov push pop outsb in fwait dec repnz xchg adc (bad) incl fs (bad) out lods lds test jne (bad) (bad) (bad) incl shrb cltd xchg cmp dec mov add (bad) lea (bad) (bad) (bad) (bad) call repnz and ss mov pop aam loop repz ljmp or push sahf movsl add mov sub (bad) (bad) jg jmp cmc inc cs rolb in pop in xchg add (bad) (bad) jmp popf adc addr16 rolb ljmp xor and (bad) decl mov mov cltd and sbb std push (bad) mov repz (bad) mov mov (bad) sbb out jmp adc cwtl lret sbb (bad) mov xchg mov cmp mov nop jne pusha mov (bad) (bad) in test add (bad) xor mov pop add scas mov (bad) (bad) incl mov pop and inc push popf outsl test fimul cli rcll (bad) (bad) (bad) jmp pop int cmc pop imul pop xchg fisub and ret rcr aas adc (bad) (bad) (bad) fstpl lret adc imul mov in mov mov movl push add shll (bad) pop jl xor cmc add addl lock jecxz or (bad) (bad) jmp inc jo add out in mov sbb fmul xchg xchg hlt insl stos lods pop mov (bad) mov js scas loop iret xorl (bad) (bad) (bad) pushl insl dec cmp stos cmp mov push outsb ror ljmp push mov pavgw sub add (bad) (bad) incl gs loop pop aaa rclb imul adc lahf xor and xchg cs mov pop (bad) in (bad) dec aaa leave pop inc mov repnz in pop or push or cmp lock pushl jae inc sbb out stos adc insb push lahf call inc aam (bad) je mov (bad) adc push mov adc xor cwtl fildll sub (bad) (bad) ljmp stos push xor inc js (bad) aaa or xchg mov cmp xchg out sub (bad) (bad) (bad) jmp push (bad) cmp popa add jo les jae mov ret mov (bad) (bad) (bad) jp orl push cli mov ret int3 mov xchg jge and inc js arpl or loop ss dec ficoml mov imul sti pop adc (bad) jmp xchg inc int3 icebp fwait fs jnp lods dec cmc dec outsl fsubrs scas pop sub das cli mov outsb cmp divl popf mov (bad) (bad) lcall in xchg push fwait push jmp (bad) xchg shrl test cmp ret dec (bad) (bad) (bad) (bad) mov movsb mov and sti shlb ds std sarb cmp mov hlt inc (bad) (bad) (bad) (bad) fsubs jecxz mov lds aam test push fsubrp jne (bad) out cmc push add (bad) (bad) incl aam mov jnp outsl add test jl sub (bad) mov cmpsb push add mov pop cmp data16 jl (bad) sub push (bad) incl aaa or inc test jae out cmpsb lcall aas stos ljmp jmp lret mov fwait jae sub ficoml ds sbb add sbb movsb shl ret mov mov fs push or dec mov add ds jno loopne (bad) jbe insb push out in push (bad) (bad) (bad) out mov mov ror add mov sub xchg xor leave sbb in lock xchg (bad) (bad) (bad) (bad) ds sbb or inc mov mov pop popa sub sahf call push icebp icebp add jg das clc jns pop leave dec test push jmp push mov (bad) loop (bad) push mov cmp adc adc ljmp jno (bad) xor (bad) decl shrb int and adc and adc test jg imul jo cld pop jle pop dec cmp add stc (bad) push dec test aaa loop mov sarb and xchg cli dec mov xchg or jmp add (bad) jmp imul jp adc pushl adc mov mov adc push jg sub sbb fsin fcomip jmp bound hlt xor and jo es (bad) (bad) ljmp sub fwait sbb jecxz cs cli out sbb imul cmp jmp insl ret or cmpsl sbb ss (bad) (bad) jmp pop aas jg (bad) pushl stc cmpsl cmp mov outsl mov and sbb jo cmp lcall ret (bad) clc out ss ret in jp adc repz ret fsubrp mov mov sbb pop adcl adc leave mov mov adc (bad) (bad) dec jbe pop jge imul stos neg mov out int3 xchg mov dec (bad) ljmp out sbb out or xchg jo clc push das mov cmc pop cmp adc (bad) push and adc adc jg std sbb mov decb (bad) call inc or jno push jmp js adcl push mov int3 rclb mov ja mov ja (bad) fild pop cwtl mov dec ss and adc (bad) (bad) (bad) decl push mov sub mov das cld sub dec jno sub or (bad) (bad) (bad) ljmp testb icebp ret push dec or dec add mov mov popf (bad) (bad) lcall outsb push (bad) adc mov push mov inc jge or sbbb (bad) inc mov enter push and fsubs (bad) lock add cmp inc lds call (bad) xor icebp xchg push adc inc lods out inc repz fisubl xchg xor mov mov insl lret jo pop dec mov sub call adc sbb ja mov adc ja mov sbb sub and sbb mov lahf (bad) (bad) (bad) jmp outsb (bad) pop or gs or inc jns je xchg lret lods mov test ljmp rcr cltd xchg enter stc mov xchg aam jnp repnz jnp pop inc outsl (bad) (bad) (bad) cli lcall movsb icebp in mov loopne fadds stos jmp adc ja enter pushl rolb push test das hlt int3 fdivrs dec mov and xor mov dec jnp (bad) mov sahf pop std (bad) push inc (bad) jmp pop dec enter sti ljmp int3 cmp pop leave in lea js rcll mov xchg fwait les lods cli in (bad) (bad) (bad) cli xchg arpl in rorl mov cmp add pusha mov cwtl sbb mov inc movsb (bad) (bad) (bad) pushl mov sbb mov cwtl mov jg (bad) inc mov sbb insl push (bad) (bad) (bad) ljmp inc fbld pushf adc and pop mov leave into dec push clc mov scas pop cmpsl sbb lcall daa and mov hlt pushf loope push sahf out rorl ret mov jmp adc cmpsb adc cltd nopl xor imull xchg sub negl outsb arpl jns (bad) jo out push cmp and cmpsl into testb sub mov cmp sbb mov call mov mov movsl in pavgw (bad) dec test lret xor (bad) cmc cli and cmp idiv (bad) (bad) pushl mov sub sbb mov adc fbstp jle popw (bad) out cli ljmp popa jp dec cmp das and inc loope jae push jnp das sar es mov dec pop pextrw adc imul (bad) (bad) decl jecxz outsb cmp test jecxz add xchg mov jo (bad) call loopne pop aam (bad) and sub push ss mov or jmp lock jp inc inc push pop (bad) adc lock mov xor mov scas out mov mov cmp (bad) (bad) ljmp negb push (bad) test mov icebp dec (bad) in divl (bad) pop adc dec dec ficompl (bad) (bad) (bad) cmp pop mov add insl pop ja inc (bad) xchg dec push mov scas lret jmp mov (bad) add push jno das push rcrb (bad) (bad) (bad) lcall xor ficom xchg cmp mov add std mov loopne enter (bad) (bad) jg mov fs pop xchg in inc jo sub adc fnstcw push pop imul ljmp enter pop dec push mov jnp (bad) mov mov jle push (bad) add clc (bad) push das outsl xor je dec repz (bad) (bad) out loopne ret xchg das (bad) mov in sub fcmovne xor stos cmpl cmpsl clc push mov outsl faddp dec (bad) lock lret imul dec add jnp cmp inc ja jl xchg cmpsb xor mov (bad) ljmp es mov inc in mov int3 push push adc mov insb (bad) (bad) (bad) (bad) (bad) push es mov testl lret es sub popa aaa scas ljmp imul mov (bad) xchg push repz cmp inc add (bad) (bad) (bad) mov pop dec inc mov dec push rorl in mov aam jmp and (bad) (bad) (bad) incl jl cmp xor cwtl push call xor repnz (bad) (bad) (bad) jmp xor outsl movsl lock adc loope cmpsl rcr push ljmp pop sub xor (bad) (bad) (bad) out aas test mov cmpsb mov cld insb ss gs mov mov insb out mov mov inc negb out stos mov mov rorb mov loope adc pop hlt (bad) ljmp xlat aas adc lds xchg into daa and (bad) (bad) (bad) ljmp and rcl lret ds mov cmpsb push push idiv or ret arpl sub lods stos enter (bad) out ret or arpl sub scas xchg jmp ficoml dec (bad) (bad) jmp stc adc inc (bad) pop or adc repz xchg clc clc (bad) je (bad) (bad) (bad) std je xor call pop mov cmp cli int3 sub jecxz xchg add xor imul (bad) (bad) (bad) mov push or gs aas negb add mov jmp movsb xor dec out (bad) (bad) (bad) (bad) cmp xor andb mov adc fimull dec in pop inc sahf daa aaa std (bad) pushl sub pop and cld js addl (bad) lcall (bad) xor pop lahf jp stc les std xchg or popf lahf cli xor (bad) ljmp jne imul int3 das or fdivrl adc (bad) (bad) (bad) lcall insb cmp or out or mov sub rcrb or push xchg fdivr (bad) mov push sub je dec fs hlt xchg mov les adc (bad) (bad) out dec decb imul scas sub hlt xchg lret push fmuls (bad) (bad) (bad) jmp xor lcall inc sti xor xchg adc jecxz ret push ljmp jg (bad) (bad) jmp sbb add pop xchg call add loope (bad) sub (bad) (bad) (bad) std dec and leave rol pop adc jmp (bad) push aad sti mov push inc adc (bad) (bad) jmp clc pop mov imul sbb (bad) ss loope into fst stc leave decl lock mov fnop jl stos aad int dec pushf push and (bad) xchg (bad) (bad) (bad) jmp outsb sbb xor dec arpl xor mov fsubr out les and incl inc aam subl xchg int (bad) xor or xchg fistpl arpl (bad) (bad) (bad) out ds mov dec mov pop inc stos daa in imul lret sti dec int add dec mov outsl fucomp into negb stos aaa jp push add or (bad) lcall pop mov pop push xchg sbb inc in or cmp xor fidivrl (bad) jge push fs cld hlt dec gs inc inc jecxz xor (bad) (bad) lcall inc mov push cwtl fxch insb addr16 inc hlt mov jno jge or lcall cltd or mov js das aam sub out nop ficom (bad) call or pushf push adc dec add cmp std add adc xor in jo adc (bad) (bad) incl cmp push ret ljmp lcall dec push adc in js (bad) decl adc or mov and (bad) jg scas xchg lcall mov jge sub cs mov lds (bad) lcall ds add jo iret pop lds movl (bad) (bad) (bad) call inc movsb imul jecxz mov scas pop pop push jp lds lret rcrl (bad) push sub test jne iret xor std aaa xchg lea (bad) xlat mov jne mov jo mov stc jns enter adc enter addr16 test call es or jmp in addr16 jecxz pop aad add lock inc std jge jecxz xchg jne pop inc icebp mov aaa arpl xchg push jg ljmp push jge clc aad inc sbb ljmp popf fild cld pushl cld out (bad) repz add xor dec sub jl pop xacquire inc mov call push decl push fdivp (bad) xlat scas xchg xchg xlat movsb mov xchg lds (bad) (bad) (bad) mov jbe push stos clc (bad) cwtl imul or sub insb sub sahf cmp (bad) (bad) cmp jnp sahf or xchg sbb insb mov ret dec dec loope jbe xchg es aam popa sub adc (bad) incl jnp sub fsub inc bound and mov lods add pushl imul add sbb jl mov dec mov je (bad) (bad) (bad) jmp test movsb sbb adc bound and pop sub jo mov sti (bad) lcall or clc jbe mov push mov xor xlat int3 (bad) add shr and test insb rcrl iret movzbl fdivrp (bad) (bad) (bad) cmp and (bad) jbe test push mov jno add test jo test jg (bad) (bad) (bad) (bad) jle add jo sbbb mov in adc shrb pop iret flds (bad) (bad) (bad) ljmp pop add mov mov int3 mov icebp xor out cmp (bad) (bad) (bad) dec cmpsb xlat in pop jns mov lret mov das mov addb lret pop (bad) ljmp add inc test cmp jnp psrld pop pushf aam (bad) adc sarl mov add sub jnp sbbl decl sub cld popa dec insb scas jbe push (bad) imulb adc call daa push pop daa cmp (bad) call or aaa loop insl fldt mov sub push adc jmp enter pop in movsl inc fsub outsl adc out es inc lea (bad) decl sbb ja mov rorb loop inc and jmp adc and out push rcll fldt (bad) xor sub (bad) (bad) inc rcll xchg cmp daa jno xchg push jb pop fsubl and xor ds (bad) mov push xor ret jp or mov cmp (bad) stc jle (bad) out pushf add nop lret xchg mov mov repz shrb out out cld (bad) (bad) cli inc pop xchg icebp jbe stos xchg add adc jns cs ja (bad) (bad) lcall repz or out stos pop fistp cld pop dec cs lcall push test cld xchg adc mov in (bad) sbb xchg lds (bad) (bad) dec shll insl sbb jg adc jne add push cmpsb mov xor sbb jg pushl jo or test lods push cmp add (bad) (bad) (bad) incl xor push pusha out sub aas mov xchg push mov mov pop pop jecxz (bad) jg incl pop pop cmp enter sbb push lds lds outsl clc jmp xchg sub fwait js les mov shll call jae cmp pop cmp jp je push imul stos fiaddl mov std (bad) incl jbe cmpl ret dec xchg jo xor insb ljmp xchg dec in mov jae out inc lahf and xchg bound je push mov jl mov movsl or lcall jg aaa (bad) outsl cli stos fidiv test cmpsl and cwtl ds (bad) xchg sbb lret rcll (bad) nop pop xchg push es adc test fisttpl icebp out pop bnd call (bad) (bad) lcall jne mov gs aas cmp cld mov or jae or aaa xor inc dec mov cmpsl jnp jmp mov sub jbe push fiadd mov cmpsb jg xorl cld pop (bad) into mov das sbb sub jg ljmp insl ds mov pop inc push and mov adc mov call adc cmc jo xor inc pop js (bad) mov popa test push mov mov sbb (bad) out xor or dec aam sub jnp pop cmc (bad) out adc push and gs (bad) (bad) (bad) jg insb add nop lds loop push pop push stc xor mov jns aas ljmp xor sub mov out mov cmpsb adcl mov testl (bad) incl in sbb jnp pop xchg aad dec cmp cmp fxam scas cli movsb dec jmp (bad) (bad) lcall ljmp icebp into dec pop xor enter mov xlat (bad) (bad) (bad) fistpll pop push test or cmp iret mov jne xor cmp scas cmp pop jmp fisub enter xor loope aam dec lret jp mov inc pushf enter fwait leave xchg cmp (bad) jmp mov test cmp call repnz push inc xor xor pop call (bad) (bad) incl (bad) or mov cwtl int ja xlat mov (bad) roll inc andb sub cld (bad) (bad) dec cmp in aam adc addr16 inc or or aam mov (bad) mov sbb test loopne inc sbb mov inc incl negb add push iret or dec (bad) (bad) lcall pop and mov fsts (bad) rcrl dec pop (bad) jmp outsb pushf scas loopne lods push inc es movsl mov sarl lret lock outsb mov (bad) decl sbb jecxz adc cmp jp pop mov or lock in imul push outsb call stos mov pop dec mov inc or in xorl pop popf sub (bad) (bad) pushl into cwtl pusha arpl pop mov jmp adc jae test (bad) lcall jge pop hlt jmp fmuls mov xchg xchg xchg loopne std jno push fsub pop mov (bad) (bad) (bad) pushl ja pop add mov jle push daa outsl (bad) dec xchg xor cmp inc pop push popf (bad) fcomip decl mov rclb pushf pop cmp add sar (bad) incl repz adc sbb fisubl inc pop mov scas mov add mov mov lcall leave adc mov call pushf loop xor int3 hlt ret out int cmp jmp outsb (bad) (bad) (bad) pushl pop fisubrl mov inc jbe push fist loopne imul add (bad) jg inc adc rol pop add decb or xlat enter push (bad) stos or jmp inc (bad) mov repnz cmp mov (bad) shlb add dec mov adc adc dec aad bound jne loop cmp mov cmp mov xor imul (bad) (bad) fidiv mov movsl js inc scas inc stc and dec push or in jae (bad) jg inc imul pop iret xlat cltd mov mov mov (bad) (bad) decl in sti dec sbb fmull mov mov bound ret lock (bad) (bad) call rcl sub pop jb js mov pop fdiv je push cmp mov mov (bad) in das xor dec out hlt hlt adc cmpsl divl mov xchg lea push aam ret jg cmp rcrl gs cmpsl xchg jne fdivrp (bad) inc push ja data16 xchg xor int3 in jle mov punpckldq repnz and (bad) (bad) call mov inc jle test pop sub sub push mov lods cmp inc mov (bad) (bad) (bad) aas xchg repnz (bad) (bad) cli xchg push aam adc mov jmp (bad) (bad) ljmp insb ds cmpsl cltd or xor adc mov xor in sahf aaa xor (bad) (bad) (bad) call add into movsl xchg pop fxch adc enter loopne loopne adc and ljmp adc fwait mov (bad) call scas (bad) xor std mov clc cltd icebp (bad) (bad) (bad) call sub xor xor je mov cld push cmp and jle stc sub mov (bad) (bad) decl jle jae cmp push cmp dec mov jp push mov xchg or jno sub call sbbl std popf pop mov or sub les aad call cmc in scas cmp mov into mov mov sbb pop hlt xchg imul rorl leave dec add cltd pop and rcr (bad) (bad) call fdivs loop pop repz int3 (bad) jae das les push (bad) lcall out insb xor (bad) insl and jp inc clc (bad) (bad) push loopne fiadd cmp inc xchg add loopne xor in cs pop (bad) (bad) incl (bad) test fcoml mov pusha test cmc (bad) (bad) (bad) pushl orb cmc in jl push lret inc movsl mov mov mov es cwtl and inc (bad) ljmp xor loopne cmp je in sbb lret iret nop push sti movsb push inc (bad) decl pop push mov xadd mov addr16 add xchg dec (bad) (bad) (bad) jmp sbb dec lcall (bad) cmp pop insl scas mov loope mov mov (bad) (bad) incl pop push leave inc sub cld out push mov cmp pusha outsb sbb shl je mov insb mov addr16 (bad) clc adc cmp (bad) call sahf adc repz imull mov ljmp scas pop lods mov lock (bad) (bad) jnp fisttpl (bad) rep lcall or add ds and (bad) (bad) decl dec dec je mov sbb int dec loope dec scas jp mov sbb stos cld (bad) lcall lds xchg loope cwtl cmp mov int3 shll popf pop jbe fnsave xchg daa incl sub js mov mov stos jmp add mov (bad) (bad) (bad) jl pop mov push jb adc mov clc sbb fsts inc dec lea (bad) dec push jp xchg sub ljmp cwtl pop lahf cmp out in and aam fisubr fsubrl std mov ljmp xor data16 xchg mov (bad) ljmp or sti xor aad icebp (bad) cs jge mov mov (bad) (bad) (bad) fildll xchg xchg adc out rcll dec dec jmp rorb test adc pop pop (bad) mov out inc xor (bad) and xchg shll test (bad) (bad) decl sub inc (bad) (bad) popf mov dec mov pop mov popf (bad) (bad) (bad) call iret ljmp outsb aam in clc jl test add arpl mov (bad) (bad) incl jge ljmp dec push ljmp popa mov mov imulb lcall pushf xor mov into ljmp sbb (bad) gs addb insl js (bad) (bad) lcall push pop mov (bad) lcall inc and mov insb js sbb iret (bad) (bad) (bad) lcall mov mov dec sub movsb adc dec nop sub aam insb leave cmp (bad) (bad) call sub inc lds ds adcb jae lahf imul jbe inc cmpsb (bad) (bad) (bad) ljmp pop and sbb sub pop xor mov xor push inc mov clc xlat mov push mov (bad) lcall out or dec jmp add faddp pop push cmp sub jbe and (bad) pushl jmp lcall lods or test subb (bad) (bad) ljmp leave jl push fisttpll mov sbb shrl mov mov pop pop dec mov mov push aaa jb lock lock vaddsubps stos jecxz inc (bad) (bad) (bad) decl mov cmp in roll push push cmp lahf ja sub (bad) mov inc faddp and (bad) (bad) push imul jae xchg jns aaa push inc fstpl fcmovne bnd popf repnz (bad) (bad) pushl cli and (bad) rorl pop outsb int xchg jmp cmpsl outsl (bad) jg ljmp popf sub mov cltd mov mov iret and and inc pop sar incl mov xchg mov movsl incl data16 push jge mov (bad) (bad) decl into pop mov jl loope and sarl dec arpl mov decl and sub pop insb out mov dec push xor mov movsl inc push inc mov test call bound into rcr je cmp xchg (bad) (bad) incl hlt sbb sub scas mov adc push outsl xlat and dec pop (bad) (bad) (bad) jmp mov (bad) setb js push movsb cltd push push xor enter loop xlat jbe (bad) (bad) (bad) (bad) jmp sub roll sbb movsw push sub imul (bad) ljmp cmp mov cmp cmp cli stc dec loope jmp daa (bad) (bad) cmp fcoms mov cmp dec xchg mov (bad) (bad) jg bnd int loopne lret jp cli (bad) scas xchg pop ds repz push in enter mov (bad) (bad) (bad) lcall aad js scas ss iret lcall (bad) push push and dec leave push sbb xor jge (bad) (bad) (bad) (bad) fistp jle mov jp add cmp call sbb pushf and mov add sbb jmp inc aam aas (bad) (bad) (bad) dec xor fsub (bad) xor dec rcll mov push mov (bad) imulb mov (bad) rep sahf cs pushf stos pop cmp pop mov jns fwait add jo cltd pop cmp fiadd fcomip (bad) incl cld cld mov clc inc rcrl push and lock jecxz into cs (bad) (bad) (bad) js ja (bad) popa cmp movsb rcll call stc cmp clc mov pop (bad) call std cmp aas pop movsb xchg outsb ret jae and pushf cs jl adc lock incl repnz fs lods pop cmp xor loope sub (bad) (bad) call pop jb or adc aad repz out stc mov adc mov pushl and and jnp mov je and push pop cmp lret pop daa in (bad) (bad) (bad) fistpll popa out jno and fwait enter mov xchg add (bad) (bad) (bad) (bad) fistp dec adc dec cmp xchg pop sub mov or pop ljmp (bad) call cs or and xchg out mov add mov fwait push cli lock xor xor fsubr xchg addr16 push pop cmpsl pushl std jmp pop add (bad) pop clc xchg and iret xchg pop or fs (bad) (bad) (bad) (bad) jmp in jle dec into cmc stc nop add inc push pop sbb cmp push mov aam (bad) (bad) ljmp rcrl scas jge insb jge mov and jmp adc sub (bad) decl loop and add int3 lret add shll adc xchg fcoml lock (bad) mov ret sbbb lea or and popf lcall xor add pop dec pop dec aam imul jle add in nop add xor jg je push ds mov xchg sbb xor imul lock fdivrp sbb loop or xor (bad) ljmp adc or pop jae jns xchg sbb dec bound stos negl (bad) (bad) (bad) decl enter ljmp pop dec pushf add mov out xor das sar mov dec (bad) mov xchg fdivrp mov xor (bad) (bad) jg fidivrl adc je xor mov add (bad) fmull pop sar incl outsl cmp jmp jge or loop or mov cmp test mov and cmp (bad) (bad) ljmp fdivs mov fs add pop hlt mov imul ljmp dec cld or lods push aad in jae pop mov pushl (bad) repz mov shl std push push mov mov mov adc and (bad) fstpt insb into out lahf xor test cmp les (bad) out adc mov pop aam ja stos mov fdivr (bad) (bad) push dec pop inc xor xor dec cmp dec sub andl ss mov push je mov lods (bad) (bad) (bad) dec lahf cmp pop in iret sub and xlat in push movl (bad) (bad) (bad) lcall shr fdivl and (bad) mov fidivr sbb dec pop cmp add fcomip les push push mov movsl pop cmp cwtl shrb shl xchg sub dec sub aaa into or in add add mov ds fild push imul xchg xchg fdivrp jbe gs jecxz sarb cmpsb pop push dec cmp ds xor and (bad) (bad) pushl adc test xchg in push inc (bad) sub sub inc ljmp incl jge jnp or lods jnp and add imul mov gs mov shl sub jne in sub mov (bad) dec add test (bad) jecxz fidiv setl mov jp movsl loopne jp xor inc sub or xchg sbb (bad) (bad) (bad) call outsb pushf jl repnz fwait sub xchg dec rcl sbb aas stos movsb inc mov test call pushl xchg or cmp jo scas sbb sti div (bad) sbb mov xchg mov sub test shll add pop add mov mov ss (bad) (bad) call cli pop lret sahf sbb mov pop test cwtl sbbl out xchg push std lcall add sbb mov jl or (bad) (bad) lcall imul mov mov add dec jns (bad) (bad) (bad) decl clc shrb or mov xor xchg sbb bound dec dec mov (bad) (bad) jmp pop push add and iret in out and mov dec add jmp sti int3 dec (bad) incl xlat loope and mov push inc mov fcmovnu push daa movsb (bad) (bad) (bad) lcall xchg out and outsb mov aad imul lahf (bad) xor (bad) (bad) jmp aaa mov adc jge pop mov inc shrb jae rcrl mov dec or jbe jae inc shll loope adc lahf in dec adc data16 (bad) (bad) (bad) push and adc rcll push jb and jg mov in ret or inc popf loop (bad) jmp lahf cmovo jmp jae dec pop sub cmp or orl (bad) mov mov mov mov test sbb sarl call ret fldenv add outsl imul mov xchg js insb adc (bad) (bad) jmp inc pop jo cli lods sub mov cmp loopne sti push cmp sar pushl into cmpsb cmp lret cwtl or mov (bad) jg adc push push jge jns mov jns push insb mov mov mov incl ret mov jge mov jo std dec pushf add inc movsb (bad) and dec pop das decl movsl ljmp xchg je xchg pop shrl pop es (bad) xor incl clc loopne cmp lret les in scas push inc sti (bad) (bad) (bad) (bad) fidivr jbe imulb popl mov cmp test sahf imul aad fldln2 mov adc scas rorb push push mov adc adc das test (bad) (bad) (bad) jmp mov sub xchg mov outsb push (bad) out popa cmp inc mov fidivr sbb (bad) pushl mov arpl ss pusha sub dec call push das pop (bad) sub push es stos dec mov add mov push je lcall mov fiadd sub (bad) decl jne ss lret das gs lock ljmp push jg xlat in fwait out sbb ret cld jne leave notb out fldenv out add ds out inc push icebp subl cmp (bad) jmp std xor jno xor negb xchg mov adc addl dec mov mov clc (bad) (bad) jmp wrmsr and stc sub adc mov cmp out or adc (bad) incl sub lcall mov xchg push nop lret sub (bad) (bad) (bad) (bad) (bad) fwait jbe or add test cmpsl dec dec out lret movsl mov jecxz popf std lods xchg mov ret (bad) incl scas out fimul leave (bad) cs inc pop ret rorb ja adc dec stc (bad) mov dec push sub pushf nop into mov (bad) (bad) (bad) dec or (bad) repnz outsl sub test or cmpsl xorb pop push js adcl sub xor das cmpsb jle test inc lcall (bad) (bad) (bad) call jns mov sub pop ror or and push mov jb pop cli inc xchg mov push aas in mov jp xchg das shl cmp mov push pop push sub imul pop (bad) (bad) out andb lds lock push shrl rcrl (bad) push pop scas cmp or mov iret in andb std rorb mov dec scas (bad) daa mov (bad) (bad) mov sub (bad) sbb fisubl jge xchg sti mov (bad) (bad) push and bound cmc xchg push test xchg and cld ret jo sub cld jmp std mov mov pop fs push ljmp leave cwtl sbb jo xchg lods mov daa mov and adc (bad) (bad) jmp pop lahf cmp xor (bad) mov sti pop push adc xor cmp (bad) (bad) ljmp arpl or inc xlat or into negl xchg aad add enter mov fild (bad) iret mov fildl jmp xor jg sub test (bad) incl jl inc stos loop clc jb jmp (bad) xor imul mov add pop dec and cltd pop out sub scas inc sbb pop and int scas repnz sarl (bad) out negb lahf mov add mov ficomp movl push cmp mov dec (bad) (bad) (bad) fist popf push test mov int popl pushf cmp sbb jmp cmp adc or mov je sbb sub mov ds push cmp fcomps imulb xor (bad) call in xor fadds fxtract or push cmp pop shl push adc cwtl or (bad) jmp insl ljmp inc sbb out cmpb insl lea xchg fildll cmp cmp and cwtl dec imul test (bad) jg (bad) jbe lods jl fisttpl scas (bad) popf fidivr sti pop test adc xor (bad) (bad) mov xlat lds mov pop out xchg and add sub (bad) (bad) mov cld sbbb ret cmp into js push cwtl jbe stos jb (bad) incl enter lds inc je push int cwtl aaa cmp (bad) lcall mov call and outsb adc cmpsb inc iret inc mov adc (bad) pushf inc cmc push test pop in sub xchg (bad) xor in pop mov add (bad) ljmp pop daa and mov pop jp mov andb jbe xchg test sub or mov push push xchg jecxz cld jnp (bad) xor and (bad) call cmp fsubs mov loopne fldt jl jp fdivrs rcll movsb lret dec jg inc xor push (bad) (bad) lcall xor mov aam in xchg loopne loop mov push xchg std in clc cmp loop scas xor sub jnp cmc mov stos mov fs (bad) lcall pop push lcall fidivr insl jne icebp or add test (bad) (bad) (bad) pop push roll (bad) inc add mov pop sub rolb sti or jg std mov cli hlt push add dec lahf mov pop or es adc mov ljmp jg out pop sub or jno sbb pop pop mov outsl add pop fbstp or pop lock adc jl,pt and popf mov (bad) (bad) decl jl mov cmp sub sub sbb movsb (bad) (bad) mov add mov sbb lahf pop call (bad) mov add push sub pusha sub aam xorl mov add jnp mov push rcrb (bad) ljmp (bad) jbe ss mov test loopne jmp xchg jg test addl (bad) pushl inc fs cmp insb jge xchg pop insb sarb mov sbbb (bad) (bad) (bad) ljmp out addr16 (bad) or gs outsl mov ja mov jg cmc xor sub adc jl aas inc xchg mov dec add mov ljmp add bound (bad) (bad) (bad) (bad) cmp dec enter out into jno pop jo outsb inc pop mov fsubs or ljmp adc ds inc hlt and (bad) in out aam clc inc fsubrs (bad) ljmp add xor (bad) jp mov call and sub fwait or outsb pop aas (bad) (bad) (bad) (bad) aas dec dec sbb sub mov mov xor and mov add fidivr (bad) (bad) inc mov mov inc cmp xor inc es test pop xor (bad) mov (bad) jg xchg xor xchg pop or das mov pusha out cmp leave pop pop jg push push lcall (bad) or xlat outsl cwtl and mov inc inc sub js ret fdivs mov arpl sub pop std (bad) (bad) in push scas insl or pop xchg xchg inc xchg sub adc movsb pop test sub (bad) (bad) call adc scas mov cmp mov psubw jb dec dec xor test inc fnstenv (bad) (bad) call pop fsubr fiadd sub icebp inc add jbe jbe fs hlt outsl es repnz inc cmc xchg adc cli pop das loop (bad) (bad) fist sub sbb jge pusha lods imul das rol mov (bad) (bad) mov sbb in add adc mov push add (bad) incl push stos and xchg and or or or aaa cmp (bad) lcall mov scas std inc enter (bad) jns dec jns ret or jno (bad) (bad) (bad) (bad) out pop (bad) xor or imul cmp add xor (bad) (bad) (bad) jg inc in pop or sbb lcall int3 lahf push mov inc sbbl jg pushl hlt jmp (bad) into xlat xchg jbe arpl cmc mov aaa pop mov pushl (bad) lcall xchg cltd iret decb push clc xor pop dec mov cmp insl xor aas cmp and repnz (bad) pop and fcomip lcall mov ror and shr mov (bad) (bad) decl inc cmpsb pop xchg sbb lods hlt lret mov pop repnz arpl outsl mov movsl pop xchg dec cwtl mov add sahf in imul (bad) lcall roll fisubl fcoml dec (bad) fwait xchg icebp jg addr16 pop sub (bad) (bad) incl xlat iret pusha mov addl addr16 push push push pushf push outsl (bad) inc pop sub dec clc (bad) (bad) (bad) mov fistl adc rcl cmp fs adc loopne leave (bad) (bad) (bad) out in and (bad) roll ss xchg mov in (bad) (bad) mov mov lods adc push (bad) push shrl jl (bad) mov adcl aaa stos call sti or jne add test mov (bad) (bad) jmp cmp xchg fs jne pop inc (bad) mov mov stos outsb movsl lret ja stos xorl (bad) (bad) jmp add mov add shrb aaa cli adc test adc out mov loop cs cmp push bound or or sbb popa inc push (bad) out arpl lret mov mov mov das clc (bad) ljmp jns mov insb in jp enter icebp add and mov mov mov cmp (bad) (bad) (bad) decl notl fs out sahf lods inc sbb xor and cmpsl xchg and sbb pop (bad) (bad) (bad) (bad) cmp sub repnz in in mov fsubl mov (bad) (bad) lcall inc sti aam or mov and mov push shll cmp (bad) (bad) (bad) out cmpsb pop stc mov pop outsb test pusha xor sbb inc adc push and js pcmpeqd mov (bad) fldt (bad) and fistpl popa ja int (bad) test mov xchg push add pop cld pop jle test or xchg lods fimul xor (bad) xor and mov shlb pop popa imul sbb jnp (bad) (bad) (bad) jmp mov cmp daa pushf (bad) xor xlat ret sub clc sub andl mov jg shrl xchg int inc test insb cli test aad or and insl pusha fcomip (bad) dec cwtl sarb rorb mov cmp push call (bad) or lahf ds (bad) (bad) incl xor sub xor (bad) enter sbb jmp in fs mov ljmp mov bound insb test pop fs push addr16 or or outsl mov sub xchg adc hlt call cmc (bad) call mov push popa push popf pop inc icebp push pop mov pushf lods mov (bad) fisttp cmp mov lahf xor lea rcll mov lcall xor xor outsl mov fmull sbb add shll (bad) (bad) pushl sbb pop stos or sub icebp (bad) jbe xchg or xlat mov mov arpl mov (bad) jmp pop jno xchg (bad) mov jle insb dec cltd mov test movsb das sarb or aam xchg fiaddl les popf repz (bad) ljmp shlb lods movb jg movsl pop test dec mov adc mov shrl cltd cmp fadds add mov jp adc icebp mov dec or pop pop mov je dec lds call cwtl dec push icebp je cmp push call and (bad) (bad) (bad) (bad) cld xor push cmpsl adc jle xor inc imul push pushf xchg xchg push mov jge (bad) call insl in jl xor dec push sahf sub imul jg (bad) (bad) (bad) dec scas or xchg mov notb add push stos pop loop add nop jmp inc daa cmc (bad) (bad) (bad) decl arpl popa gs dec loopne xchg xorl xlat cmp cmp incl pop push popa mov dec cld maxps mov cmp out xor jl (bad) jg inc adc adc pop jl xor xchg mov repnz lods (bad) (bad) (bad) call or push scas jns push adc dec inc pop xchg push outsb mov jbe cld (bad) (bad) (bad) call cs push fidivl and mov mov mov stos mov (bad) (bad) (bad) pushl daa adc out mov push aad lcall jae enter fprem (bad) (bad) (bad) mov into sbb xchg xchg sbb call dec xchg (bad) ljmp ret inc sbb sbb mov ljmp cmp lcall pop mov jp sahf mov and loope (bad) (bad) decl mov jno sbb sbb xchg xor es shrl (bad) mov push or cltd fadds add rolb inc cmp pop (bad) (bad) (bad) out fmul test push loopne inc adc or or sbb add (bad) (bad) (bad) (bad) mov pextrw mov mov cld sbbl int popl (bad) (bad) jmp add mov dec mov jno fldl lods xchg mov sbb sub (bad) (bad) dec mov insb or jecxz cwtl outsl andb push cmp jmp mov rcrl (bad) dec dec es ret cld std mov fdivrs push mov cmpsb dec fsubp sbb adc pop cmp sub das (bad) (bad) (bad) (bad) clc xchg xchg cmpsb leave stos fdivrp mov out add lret stos sbb call idiv (bad) (bad) dec pop int3 mov jnp fisub sbb jl call fiaddl sbb idivb (bad) pushl aas xchg pop stos arpl outsl push int inc adc (bad) test out cli movsl pusha test clc (bad) lcall lahf je mov adc lret mov sti (bad) ds pop (bad) (bad) (bad) jmp negl mov (bad) lock popa sub shr in lock mov stos add inc add adcl add movl push std xchg mov loope outsb push and pop imul adc decl fidivr aaa mov and cmp xor (bad) stos (bad) push (bad) (bad) (bad) dec incl mov mov test xor inc jo push test sbb std xor fcomip (bad) jge les push cmpsl mov addr16 ja (bad) fildl push insl and (bad) (bad) (bad) jmp hlt pop xchg jp std fst pusha call push push pop sti mov add insl cmp fdivr (bad) (bad) (bad) cmp divl or add mov rorb lods push dec jecxz mov inc int3 (bad) (bad) mov dec jno mov fcoml sub push sti xor xchg (bad) jg cmpl push decb adc (bad) (bad) incl pop aad jbe in or cmp lret cmpsl movsl inc pop imull jnp xchg (bad) mov cli (bad) (bad) (bad) (bad) sti add or sbb mov cmp dec xor popf xor (bad) fld jo lret jns dec mov mov (bad) (bad) (bad) incl xchg icebp adc fsincos xchg push cmp pop dec and mov cmc (bad) (bad) pushl cmp mov pusha dec cmp rolb and pop adc fist (bad) (bad) lcall outsb subl add cmp adc pushf stc insb inc stos add test and jmp (bad) and insl movsb jno out call outsb pop mov mov sub loop push mov inc test fwait mov (bad) (bad) call cmp adc outsl jo aam fdivs int int sti in (bad) (bad) (bad) inc fwait loope dec aas ds cltd fildl cmp inc sbb mov sahf (bad) movsb sar (bad) (bad) fildll les ret mov int3 mov mov movsl mov jg repnz ljmp inc mov jecxz cmp push fadd fnstenv imul rorl das xchg (bad) (bad) push out inc ljmp mov mov mov punpckhdq sbb cmc (bad) (bad) decl xchg (bad) leave xor and fist mov lods push mov imull xor (bad) incl aam stos cmp (bad) daa mov dec dec (bad) in mov sarl pop outsl sub rcrl jno mov daa mov or (bad) (bad) (bad) jmp cs mov notl dec test sbb inc iret movsb jbe mov pop hlt jne sub repnz inc pop xlat cmp jmp sub lock data16 pop xlat push add incl loop and or aaa pop popa xor stos repnz aad popf inc mov xor rcll sub or lahf mov push mov fs fs push mov dec movsb in inc imul jg js jecxz icebp dec push inc cs (bad) (bad) (bad) lcall or ss pushf dec mov sub inc mov sub mov sub fisttp lcall xor inc loopne lcall (bad) (bad) (bad) decl xor mov call fmull xor add cwtl jle push mov out cli lcall or jb dec gs loop sarb mov (bad) (bad) (bad) aas popa cltd cwtl lahf aam pop scas aaa cmpsb fistl je add clc inc cli movsl ret std (bad) (bad) incl inc mov mov inc mov outsl inc orl and daa loop (bad) (bad) call and bound pop cmp cmpsl cmp out jnp xor cltd push movsl xor lock and (bad) (bad) ljmp std and sub mov mov inc dec mov inc push lock jmp and imul sar and pushl std jg inc mov sub cmp test xchg cmp xor cld (bad) (bad) (bad) jmp lret mov inc stc mov push push (bad) jns insb xor mov mov call jno or imul inc push jle cmpsb lock dec inc sahf inc fdivrp (bad) (bad) pushl iret aad add mov movb ficomp fwait dec pop dec out stos leave (bad) (bad) (bad) fist adc icebp es jb pushf sahf lock mov leave xor xchg insl pop cli mov jp or movsl mov xor dec push sarl aas mov enter mov lret movsl out cli (bad) (bad) jge lret mov fisub add aas cwtl out sub mov cwtl decl and cmc icebp bound mov movsb aaa adc sti rol stc mov mov test push aam xchg and (bad) incl mov imul into testl cs (bad) (bad) (bad) lcall andl ret mov les push icebp pop out adc (bad) (bad) mov clc pushf or add sub push scas add (bad) (bad) jmp mov gs pop or fwait dec pop xor cmc aaa xor gs mov call lods fwait inc out es test int3 flds icebp push ljmp loop cmpsb (bad) stos scas imul scas mov addl xor fimul lcall jge lcall inc cld cmc inc or lret lods inc call rcrb inc (bad) incl mov aad xchg inc sub push ljmp cltd cmc loope (bad) (bad) cmp sbb cmpl mov xor jp mov (bad) mov (bad) in xchg xor or scas cmp mov add fcoml xchg (bad) (bad) (bad) ljmp lds push add push add lea dec xchg (bad) pushl cld out lock repnz loop or out pusha je jmp inc dec mov cmp mov inc adc lret sub or fstl (bad) decl bound xlat adc jbe pop test icebp outsb mov (bad) xor cmp mov nop rcll jae mov push push (bad) (bad) (bad) decl lcall lds mov popf xor and fwait pop loopne daa das mov push push cmp sar call out int3 or inc xchg xor repnz pushf add scas cli (bad) decl push lcall sbb jl push add (bad) (bad) ljmp mov fisttpl jb cmp pop dec scas (bad) lods lock std (bad) (bad) (bad) fimull cmp pop lods (bad) cmpsl mov jp cs int jmp mov push inc (bad) (bad) call shlb sbb dec cld inc mov mov and add xor adc xor call imul mov pusha in lods movb imul (bad) lcall jnp jecxz loopne cmpsl or sub in scas std lret inc popf enter (bad) (bad) call and in xor fistpll cmp cli stos mov clc insl icebp dec icebp mov jne decl (bad) cmpsl out sbb mov push cmpsb lcall mov call adc repz (bad) xor mov out xchg (bad) jae test or (bad) ljmp adc fs lcall cld inc adc cmpsl ret cli clc (bad) (bad) lcall add hlt sbb mov jl mov hlt cltd dec xor sub scas (bad) cmp addr16 (bad) incl jmp sbb aad adc xlat inc leave lods cmc cwtl (bad) jmp icebp scas sbb leave das add jl in lret test adc insl xchg add (bad) xchg lret shrl clc outsb sub fpatan vpunpcklwd in lods mov data16 jle cmpb iret fiadd or ret leave mov sarl mov sbb gs fdivs mov cmpsb xchg clc jns leave stc ror (bad) (bad) (bad) (bad) fbld push add inc push xchg xchg pop (bad) push std andl xor mov (bad) (bad) (bad) inc lahf push sub fcomip jecxz push add (bad) (bad) aaa cmc sahf add cmpsl aam pop aam and add repnz in xchg out mov fwait outsl sbb add inc testl jmp (bad) decl jl in pop sbb pop ss jne cmp fadds out pop pop dec and cli sar (bad) (bad) pushl repnz movsb mov (bad) and push outsb loope and loope cmp fldcw and (bad) decl fnsave xor or sbb push loopne sub lock dec es (bad) dec cmp movsl ret push outsl out sbb cld sub movsb lds (bad) (bad) (bad) inc std push out loop cmp mov push call mov dec adc (bad) cmp hlt inc popf xchg adc div idivb fwait es and pop adc (bad) (bad) incl data16 mov outsb aam add inc test push or jecxz out je sarb (bad) (bad) lcall sbb outsb mov and dec lock mov pop or dec inc jge (bad) (bad) (bad) (bad) mov out stos loopne jecxz mov and out xor aaa mov jbe loop icebp call ja (bad) inc or data16 dec ja std int (bad) (bad) mov xchg pop imul ljmp mov push xchg outsl hlt dec xor jmp adc pusha jl pop (bad) or and hlt pop sub (bad) (bad) (bad) mov mov jecxz repz mov movsl or xchg iret adc pop cld incl mov das jg (bad) jno cmc fisttpll and push insb icebp fadd out inc pop push jecxz (bad) (bad) ljmp popa jmp pushf loop fs lahf or push mov mov sub add cli popa adc mov inc fstpl loope push adc jecxz es test mov lea pusha xor (bad) ljmp mov jmp mov xchg stc xchg mov jg setnp fs out testb (bad) (bad) (bad) lcall in mov xor inc shrb fwait pop mov (bad) adc pop or aad adc dec test mov lea dec ret std xchg cld icebp dec sub mov sahf pop out aaa push xor adc mov sti jle (bad) jmp in div in or test inc pop mov (bad) (bad) jg pop in sub cli mov or test (bad) cmpsl mov and xchg inc nop mov inc loop fdivrl ljmp push popa jmp dec jo and push add sub (bad) (bad) (bad) ljmp sbb clc mov mov jl or mov jne mov outsl (bad) (bad) decl mov inc ja cmp add sub xchg add xlat mov scas aad dec sar jnp cmp push lds sbb and (bad) pushl cmp enter (bad) mov jne (bad) fwait mov aaa push mov fld (bad) (bad) (bad) (bad) mov btc out cmp push fsubl fwait hlt xor or jp push lcall call int3 cmc adc cld cmp repz cli adc iret shll adc jne cmp add mov mov dec mov popa (bad) (bad) (bad) dec mov test in mov (bad) cmpsb jb or popa stc mov sbb mov popa inc xor jb xchg (bad) outsl cs lock or (bad) push fbld or sbb popf in inc jbe cli das (bad) (bad) (bad) jmp add repnz arpl negl push cmpsb inc sbb ds inc iret pop push (bad) mov sub jp push outsl out sahf mov cmpsb push xchg in or push repz mov xor push (bad) pop dec popf aam xchg dec (bad) icebp repnz mov sbb jg decl add mov adc addl (bad) (bad) pushl jge mov mov xor js or dec movsb or dec pop sbb ljmp into cmp scas fwait sub jle lods lahf lret sbb (bad) (bad) (bad) fstpt jno mov mov sub lock shrb imul mov incl pop stc push std pop das pusha outsb jp add sbb cmc push ja sub call (bad) (bad) (bad) (bad) fidivr jns mull ja pop outsb mov insb mov jmp jb xor (bad) (bad) (bad) incl mov ret addl subl xchg jae mov xchg jecxz pushf jge (bad) (bad) pushl sti hlt je sahf fs push (bad) push adc js int3 dec xor insl cmp testb sub push or dec ret mov aaa test (bad) call sub mov mov inc and es pop and push dec xor out out insb sub cs mov jge (bad) cltd sub ret call (bad) decl adc mov mov inc inc test movl push pop inc popf xor jno aas cmpsb sub ret or sbb (bad) (bad) (bad) incl mov aad and dec in jns jb xor clc mov (bad) (bad) (bad) (bad) jl jmp sbb xor xchg insl mov cmp xor negl lcall ja inc das and fwait and clc ret imul imul out data16 (bad) (bad) (bad) cmp cmp in pop loope je call insl push inc call add (bad) (bad) pushl or mov pop sub fwait (bad) mov insb popl test mov cmp decl adcb push inc jnp or ljmp cmpsb mov mov mov or cmp jecxz and hlt imul in pop mov push jg inc mov stos pop comiss leave push adc (bad) mov push xorl mov outsb xchg mov rcrl movsl pop fwait es (bad) (bad) mov and ror dec cli repz add rcrl mov mov mov cmp test (bad) (bad) (bad) (bad) mov and arpl lret js adc jl and add (bad) (bad) incl jge ds aaa loope pushf push jp dec inc inc sahf pop daa bound pop enter xchg (bad) (bad) (bad) dec add out mov push push lahf fwait or shlb adc push lods outsb sti adc (bad) call je stos arpl dec das in fildl mov lea (bad) (bad) (bad) (bad) stc movsl sub adc push (bad) loopne (bad) in jecxz in repnz mov je inc jge (bad) (bad) call jae mov shrl jl push fisttp aad divb adc bound (bad) (bad) mov mov ret mov mov loope mov rcrb (bad) or cld call aas fsubrl cltd loope push js test bound pop adc mov pushl or jb push sub aad int3 xor mov in push scas mov aas xor push sbb jae (bad) (bad) ljmp mov pop or mov jae fnstsw aaa mov and mov (bad) (bad) (bad) (bad) in inc ja push in mov out sbb xchg mov jmp xor jl adc das clc lcall sub fsubl loope shrb aaa std mov xor (bad) jge mov cmpsl fdivl and and cmc push loopne arpl mov sahf jnp int lds or out fmull (bad) (bad) (bad) (bad) in cmp sbb mov xchg inc or xchg sub cmp inc xchg bnd dec (bad) (bad) lcall bnd rcl mov xor aaa out dec mov push adc les decl nop lret and pop stos xchg inc pop xlat sub outsl xor insb pop out aas cmpsb mov nop or sahf adc (bad) cmp dec rcll mov les dec jg incb adc daa aas stos jae mov cmp xor sbb sahf pop cli jbe or scas in add sbb insl cwtl xchg inc and jg incl cmp leave in xchg (bad) mov outsb cli or xlat sbb pop jae (bad) (bad) incl push ss mov sti jne into rcr push mov stos mov in inc scas icebp rclb adc jo sbb jle (bad) (bad) ljmp fs mov xchg hlt stos jb loopne sbb pop xchg dec mov adc cmpsl pushl inc add mov push rcrb mov sysexit push (bad) (bad) (bad) (bad) mov sbb pop adc pop mov xor dec scas jge sub (bad) incl movsb inc xlat push cmp cli mov and adc (bad) (bad) (bad) (bad) fmuls stc gs ss pop outsb mov rorb sbb dec or call mov ret mov jge push mov xchg pop or fdivr and dec sbb inc fxch lock push les aaa (bad) and jno pushl cmpsl push aad negb pop pop mov adc mov push loope lcall (bad) (bad) std lods stos dec xchg mov mov xchg nop cmp jno mov jge push and clc mov (bad) (bad) ljmp jbe in xor in xchg hlt mov xchg push call ret cmp pusha stos (bad) (bad) (bad) ljmp test mov jbe loopne sti movsl sti sbb push jle popl jp repz js (bad) (bad) (bad) in shr popa adc xor lods xchg jo push call mov pushf lret sub jmp pushl das in and arpl ljmp jmp aaa sbb pop adc push jmp mov push xchg adc (bad) hlt pop sub ja mov pop (bad) (bad) cs loope xorb negb push outsb cmpsl pushl std mov test inc dec scas in xor scas mov (bad) pushl out insb sub dec and pushf push jmp aaa in ljmp (bad) (bad) jg cld mov mov mov flds es and sub arpl jo (bad) (bad) inc inc cmovne in leave repnz dec mov lahf sbb push pop cmp (bad) (bad) (bad) (bad) (bad) jo inc mov mov outsl cmp push loop or push inc mov cmc (bad) lcall dec xchg clc jl (bad) pop insl adc jecxz jb mov or pop mov xchg das add xchg cld push ljmp loopew push (bad) adc add fidivl icebp xchg (bad) ljmp pop fimul mov adc mov ljmp ror inc pop into sti in pop or bnd test pop mov mov mov lcall (bad) or adc push jne ds xlat rep pop (bad) (bad) (bad) incl enter fs test push pop dec fimul scas pusha and xlat push scas dec int xchg (bad) (bad) (bad) ljmp dec insb xor ljmp jo xor sbb mov inc arpl in test sar (bad) (bad) pushl add push sarl decl xchg mov lods (bad) (bad) (bad) ljmp loopne jne cmpsl sti into xor inc xchg std or aas add cmp push lcall dec add (bad) enter pop faddp xchg ja movsl jl push sub inc xor pop push (bad) pushl cld mov and in push mov adc lcall cmp (bad) (bad) ljmp fsubl push lret (bad) cmp jge lret pop decb dec (bad) pop js test adc (bad) mov clc xchg dec lahf push pop jl scas loope mov and das cli dec push dec pop adc jg cmp sbb (bad) jno gs int3 sub (bad) mov xor push inc mov mov mov and lea (bad) imul js cmp add jae jne lea call repnz mov push sub pop cmp inc push xor (bad) (bad) mov icebp je pushf pop lret xor and and mov aas push xor adc inc cmp mov mov (bad) fistl push fwait push cmc sti sbb or mov push nop pop addr16 jp (bad) (bad) jg pop les les dec subl imul cltd pop mov out loopne xchg xor (bad) (bad) ljmp jg and mov dec xchg lcall sub inc test adc je xlat (bad) (bad) jmp les aad popa dec jg mov leave or xchg sub mov lods (bad) (bad) (bad) jg cmp sbb call lods nop add xchg sbb cmp (bad) (bad) (bad) jmp fistpl in cmpsb adc js ss lods je sbb mov imul jecxz cmpsl sbb enter pushf or push loope add into inc push cwtl xor (bad) incl outsl xchg popa mov sbb xchg inc or call cmp push xor cmpsb sbb push (bad) xchg cld jo fdivrs ja pop fdivr add out out cmp outsb in (bad) mov rclb cmpsl or xor and int3 mov stos dec (bad) call cld push inc sub dec pop fsubrl stos pop call mov add loop pusha inc (bad) (bad) (bad) decl aad loopne clc lock adc pop (bad) push mov adc dec sahf addl cmp aam add shll aas mov mov xchg mov stos mov dec nop sbb push and ds xchg pop mov adc pop ffreep mov (bad) (bad) (bad) lcall movzbl sahf push jb iret daa cmp adc dec or add push fcmovbe (bad) (bad) (bad) jmp outsb fcomp jne push cmpsl fmul ja and inc xlat mov test (bad) (bad) (bad) add popa std add mov mov inc shrb ljmp jno mov out daa mov sbb mov test (bad) lcall lahf lods mov lcall icebp lahf bnd jne sub and push pop fwait dec fidivrl ss (bad) (bad) (bad) out ficompl mov or xchg dec add insl je dec and (bad) call and pop or mov pop jge inc sub cltd outsl push ds pop fwait data16 jns das inc xchg mov push sbb inc pusha sarb cmc dec scas mov xchg (bad) pushl rorl jp xor pop clc sub cwtl dec scas inc lds inc sbb (bad) ljmp xor ret stc lds or cmpsl adc (bad) (bad) incl addr16 pop jb andl jg (bad) lock gs jg mov pop adc ss dec xchg mov (bad) fnstenv loopne in cmp mov (bad) ljmp jecxz je inc gs inc jle add push jmp mov mov ljmp pop jecxz andl js les es pop (bad) (bad) (bad) ljmp sbb lods aad iret into mov iret mov movsl push mov pop mov popf cltd xor cltd insl rcrb xchg jmp int cmp aam mov push jl jge sar (bad) (bad) incl adc arpl add cmp insl (bad) mov jl or (bad) (bad) (bad) (bad) out cmc sub pushf sbb lret xchg repz jns xchg leave mov mov and cmpsl ss (bad) (bad) incl fsubs test mov shrb mov stos nop mov (bad) (bad) mov push mov mov ret add xchg pop xor addl lock pop orb pop in jle (bad) out fstl loope mov pop sub add adc push push mov push arpl inc cmp aad jnp shl pushf divb cmp pusha mov aaa fild inc push (bad) (bad) (bad) aas shr cltd rclb xchg mov mov popa adc lcall stos (bad) (bad) (bad) (bad) out jg jl add and add lcall inc out pop push adc js inc ljmp add mov cli inc sti jnp out or movsl pop pop cmpsb mov inc push sbb xchg fbld jo leavew mov cltd xchg pushl fwait pop pop (bad) (bad) (bad) ljmp cmpsb les (bad) mov fadds push jl insb and test mov add add (bad) (bad) (bad) jmp das dec lahf adc push cmpsl sbb add xchg sbb iret adc and (bad) (bad) (bad) mov pusha cmp adc rcl jbe pop repz ds add outsl nop xchg ja (bad) push (bad) not stos dec mov bound imul jle in dec js xchg jecxz push std (bad) pushl and ja mov les xchg stc add stos mov sub cld (bad) incl jge cmovns dec aas cmp ljmp incl lods inc cmpl dec sbb pop ret cltd pop xor (bad) (bad) push fs dec push mov jne xchg incb pop xor mov pusha sub (bad) (bad) (bad) pushl cld mov cld push jno mov xorl or imul adc (bad) fistpll inc mov arpl lret inc push in mov (bad) clc pop pop push cltd std mov repnz (bad) jg dec outsl cwtl aas push inc sub pop movb mov pusha enter daa inc ljmp lcall jg pop xorb repz mov pop setp or push xor mov push xchg jmp mov mov sahf mov jmp jl fild or jne adc ds mov fcmovnu mov dec (bad) (bad) mov add out mov inc sbb daa aas xor push and adc or (bad) mov ss ret mov add ret inc mov jbe fcoml outsb (bad) mov andl inc add fadd stos cmp xchg adcl das (bad) (bad) (bad) decl cmp push stc push popa adc xchg mov ja mov pop inc mov call push cs test sub cmp test xchg pop jl mov pop inc mov scas cli ljmp adc les xchg mov cmpsb fsubrl inc add xor fild sub aad aam (bad) pop mov sti jg lcall adc pop shl xor sub aam or clc mov (bad) ljmp cwtl inc push dec stos sbb cmpsb dec and jge xchg cmpl cwtl pop mov mov (bad) (bad) lcall adc cmp push call dec add lock sbb imul pop imul sbbl scas aas orb dec movsl and pushf test xlat vmovsd (bad) (bad) (bad) fistpl cwtl cmp mov inc cmp (bad) pushl and mov lds icebp pop xlat incl cld cs je pop add enter fcmovnu (bad) loopne (bad) jg push (bad) sub shll mov in rclb enter (bad) mov inc test js (bad) outsb lahf aaa push or test (bad) call adc int push cmp fildl jne lret fisubrl pop les add xchg or jecxz cmpsl loopne xchg mov cmc add les mov (bad) (bad) fstpt out and jnp adc jno jge cld incb mov iret xor ffree pop pop stos (bad) (bad) (bad) (bad) inc rcll fnop ja xchg and cmp adc (bad) loopne adc sbb (bad) (bad) (bad) std addl es sbb js push lahf pop rorb lock (bad) (bad) (bad) decl arpl mov movsb xor loop jp,pt outsl loopne rorl push xchg aam cltd mov (bad) (bad) incl xor push and add (bad) xor stos adc adc fdivr and lret add aas lods movsl aaa dec sub mov pop push dec xchg mov fdivrs dec (bad) cmp sub and dec test dec push ds or hlt ljmp lds cld push push jge or add (bad) lcall mov test xor mov mov (bad) int3 sarb push add inc jo lods in aam ret je lds loope inc out int3 clc out pop (bad) (bad) mov mov mov scas mov mov cltd fs push cmp (bad) call (bad) mov push iret int or mov sub out add test xchg fdivl in (bad) or iret (bad) (bad) (bad) incl mov outsl mov inc fwait pushf test (bad) ljmp ljmp push dec mov lahf push lea mov mov mov and (bad) (bad) jmp out fidiv outsb push orl or push sbb push fucomip leave pop push (bad) (bad) pushl mov mov inc (bad) (bad) and int3 pop mov inc mov pop mov and pop mov mov mov and push (bad) mov jg add push sbb fs mov ljmp clc stos jg xchg hlt cmp (bad) aas lea push in add fdivs add (bad) (bad) decl dec push push rorl daa pop pop xlat jnp cmc jbe fsts xor (bad) (bad) pushl sarb gs inc leave lea mov xor aam cld inc push sbb sbb (bad) mov pop or inc stc or xchg jmp rorb add add (bad) (bad) (bad) jmp xchg rorl pop mov sarb mov cmpsb aaa cld jl xlat jns test pushl jnp pop jl mov or sbb bound insl pushf div (bad) (bad) ljmp or add cli jmp bound fimull push pushf ficomp aas push scas clc (bad) fildll adc (bad) ret stos mov decl cmp loope loop movsl mov (bad) jl sub rorl outsl sahf cmp adc add into jl push popa ss mov adc lcall clc scas in cmpsb int3 jo and dec adc insl cmp cs cmp jae (bad) (bad) jmp int adc pop and mov pop in negb sar test cmp xchg cs cmp pusha jle adc mov push mov dec sbb xor (bad) (bad) pushl idivb add pop js aam ficomp outsb loope ss lock out xchg hlt lret aad es lock nopl (bad) (bad) ljmp jl or insb mov push mov nop sub and in mov xchg (bad) ljmp rolb enter (bad) idivb cmp push lods mov mov cld pop (bad) jmp and push fcomps cmp outsl dec fs (bad) (bad) (bad) dec jp sti pushf cmp xchg push inc cltd mov push jge cmp xor adc inc mov (bad) (bad) (bad) (bad) cld mov sbb (bad) imul xor pop mov pop fs (bad) (bad) (bad) jmp jecxz enter push adc fnstenv push mov fs loope sahf xor (bad) decl pop cmp mov inc incb movsl fsubrl inc sbb jmp mov xor pop sti adc jmp jno xor out sbb pusha (bad) jo fdivs mov lret int (bad) (bad) (bad) jmp out test or xchg movsl cmpsb adc sbb cli sbb insb lds mov (bad) ljmp fcmove mov adc mull imul and or fwait incl repz cmp test call test sbb call adc dec jne nop incb sbb push rcl fcmovb and dec scas lcall incl lods loopne fdiv cs mov sbb icebp pop scas call xor xchg and push push sub lcall mov dec xor das sub (bad) (bad) jmp or imul rorl scas cli cld dec (bad) or (bad) cwtl es jmp ds sbb pop sub into jae xchg jl test (bad) mov jbe inc push xchg cmp xchg ja push clc mov insb clc dec leave and (bad) (bad) (bad) lcall cmp rolb sbb xor inc popf push mov sbb push xor (bad) (bad) (bad) (bad) clc fbstp mov ret cmc xor outsb jge,pt adc cmc mov xor pop jnp lret (bad) xor jo (bad) out popf cmp sub out jge hlt jl hlt cld out iret aaa sahf xchg pop in mov (bad) (bad) (bad) jbe sbb mov mov call or lret mov dec mov out (bad) scas (bad) or mov cmp into jmp (bad) (bad) pushl pushl mov aaa xchg shrl dec (bad) and call inc test into insb sbb call loopne mov add mov fadd and cli dec ljmp mov movsb mov ds push (bad) xchg scas ds (bad) (bad) (bad) jmp xor (bad) fisubrl (bad) imul mov ljmp xchg repz and push sbb (bad) ljmp ret test sub hlt push (bad) mov xor mov jmp scas pop insl lods test push outsl mov test xchg adc movsl dec scas cli (bad) lcall xlat mull pop out mov jecxz adc ja cmp mov xchg jp jp and dec add (bad) out mov (bad) (bad) (bad) (bad) (bad) and in imul lock leave and lea (bad) (bad) ljmp mov add pop das lcall dec mov decl jecxz push dec daa and jmp aam outsl std adc and popf in lods mov sub (bad) dec push jp sahf add mov pop hlt js out test pop sub pop (bad) xor xor xor (bad) xlat push lock (bad) out xchg xchg jge or popa sbb xchg cld out push fs cmpl sbb mov push int3 sahf inc aad xchg jae pop mov test mov imul (bad) incl lods sub ret cli stos aaa lret mov test hlt int dec (bad) jbe jae (bad) repnz (bad) (bad) ljmp fnstsw mov pop pop dec push dec mov les mov cmpsb enter sub (bad) decl in jo out mov jle mov jle adcl (bad) pushl dec cmpsb adc jecxz adc in lret cli dec xchg cmp retw dec sub (bad) (bad) (bad) (bad) mov in stos cli mov cmp mov and lcall (bad) (bad) inc fdivl sub add cwtl ficompl push pop xchg adc fcomi sar jmp and pop push mov repnz push or mov mov (bad) (bad) jmp pop mov jns push (bad) xor jmp jmp mov stc mov (bad) (bad) (bad) pushl data16 and enter cmpsl cwtl in lea add pop std mov lahf test jmp stos mov dec mov aaa xchg dec outsb push mov xor test adc fist push or jle mov push test bndstx mov stos mov cltd pop push das mov sub push js sub push das sub mov rcl (bad) (bad) lcall popa add jno lret add mov adc lods lcall js out (bad) (bad) (bad) (bad) aas sbb push xor sti cs adc dec stc testb call fisubr cltd (bad) (bad) (bad) (bad) jl inc jmp ficomp ret jl add jno and jp push cld leave xor (bad) jg js mov mov sbb add sahf pop mov nop xlat inc in fcompl (bad) (bad) call xchg mov inc fistpll (bad) mov gs pop cmp add gs (bad) (bad) (bad) in xchg pop pop sub push adc xchg mov nop repnz out jge (bad) (bad) (bad) mov jmp adc nop mov lret add lcall mov mov sarb push and outsb pop inc xchg push ljmp xor jp stc leave mov sub mov nop (bad) dec outsb cmp (bad) (bad) cmp pop and dec arpl add mov sub outsb cmpsl js sbb int (bad) (bad) jmp scas mov clc mov sarb jns insl loopne (bad) xor sub jo in fldt in jae push lcall repz hlt loopne (bad) andl pushl mov test cmp rol icebp add xchg test mov jmp out mov (bad) cli jecxz adc scas int3 cmp dec mov sar (bad) mov loope std bound jne scas and in rorb (bad) (bad) (bad) jg jge nop lods fs out xlat lods push sub cmpsl mov lcall push (bad) xrelease mov and sbb jno enter jnp loope (bad) (bad) (bad) pushl into sti push pop and shlb (bad) mov ret cmp push frstor cmp (bad) (bad) (bad) pushl out push cmpl (bad) cmp mov inc movsb or xor inc adc dec out adc jge push lret (bad) das pop adcb repnz test mov insl mov cwtd xor in aad cmp mov sub sub enter xor (bad) (bad) inc out xchg push aaa lret mov sbb cmpsb imul dec or or and (bad) mov dec scas jmp sbb mov stc sub (bad) call add lahf push aam xlat les pop adc notb inc and mov (bad) int pop into test cmp popf outsb mov and lds adc pop xchg (bad) (bad) (bad) inc decb enter xchg mov add and addr16 dec cli xchg jbe fsubr jle push xchg mov sub mov mov stos xchg jbe test cmp loop sbbl popa jbe sbb (bad) jmp hlt dec jae jecxz sbb jmp icebp dec mov (bad) decl or test mov test mov mov (bad) call movsl jne iret inc and pop scas in jge ss (bad) data16 int adc test xchg (bad) (bad) ljmp sub and shr xchg pop lret ljmp pop decl push call sub push or hlt sbb cmpsl out mov inc outsb ljmp (bad) clc xchg jno inc sub fs jle lods xor (bad) (bad) (bad) mov (bad) fwait mov rcl aad test test push mov ss ja jns or pop loopne pop and jne es imul mov imull xchg (bad) mov xlat lret xor fbld jmp pop (bad) cmpsb nop mov sub (bad) mov cmp insl sbb lods mov inc inc sbb ror (bad) mov pushl mov sub in loope mov outsb test mov out fiadd hlt outsl clc lcall xchg inc pushf jnp test (bad) dec pop xchg jae stc pop mov (bad) (bad) (bad) jmp push xchg into push ljmp mov stc and lret arpl sbb xchg (bad) (bad) pushl push cs or push mov pusha sub xchg fwait imul sbb mov jo (bad) (bad) (bad) out cmpsb jmp fldl repnz mov and add inc mov not stc scas aad (bad) (bad) (bad) jmp pop hlt das cwtl hlt and mov xchg inc adc lods jge add xor sbb jnp lock sbb or lods pop sahf and push ds or jb (bad) decl sbb inc or test mov sub mov ret in adc (bad) (bad) pushl sub or inc dec gs in jbe dec (bad) repz je mov cld sub (bad) (bad) (bad) jl ja xor mov out cltd cmp (bad) outsl pop lea (bad) (bad) out clc incl lret and fs jbe xchg and or gs (bad) (bad) (bad) dec dec ds lock pop adc (bad) lret dec mov test jno cmpsb (bad) incl cmp fiadd repz mov fisttpl sbb (bad) rolb mov repnz mov divb jmp push (bad) (bad) (bad) (bad) mov sub bound leave jns sub mov out hlt daa pop mov gs (bad) (bad) (bad) (bad) mov dec aas rorb es (bad) jge mov xchg es jno insb inc (bad) (bad) (bad) (bad) stc inc cltd mov push jecxz xor xor adc sub pop iret (bad) decl stos cmp push add sbb ss jne xchg and (bad) (bad) decl dec jae fisttpll and (bad) xor cmp cmc loop (bad) (bad) jmp stc js xchg insl xor dec dec push pusha loope addr16 push or sub sub outsl clc je jmp mov mov leave (bad) call cmp aaa push pop xor arpl adc and incl inc push jbe aad sub xor jmp out inc hlt mov jle mov hlt lea js lea shlb sbb lock mov mov test fistpll and fidivl add mov (bad) decl (bad) jmp pop mov insl adc nop into jbe jecxz outsb call pop test (bad) (bad) pushl scas jge out repz bound jmp std setnp push aas (bad) hlt in shll sar std incl push sub adc mov push call cs adc jno (bad) (bad) (bad) jmp hlt xor jo pushf sbb or ss fstpl cmpsl popa fs ljmp (bad) test inc fs dec aad adc adcl ficom and repnz mov mov sbb (bad) cmp inc fmull cli adc out lods movsl outsb mov nop xchg mov decl insb lcall xchg xchg hlt mov adc (bad) (bad) (bad) pushl data16 popa icebp fucompp cld es dec mov mov push lock adc ljmp addb les mov and cltd sub (bad) incl add pop mov xchg dec sub pusha dec fiadd (bad) (bad) (bad) clc rcr hlt ss and mov orb out and movsb dec sub (bad) (bad) call lods fwait and sbb dec mov mov insl cmc mov out test (bad) (bad) call sbb cmp idivb push pop inc cli sahf add in and idiv (bad) (bad) call sar mov xchg out sbb pop sub fdivrs jb in cmp shl lahf xor out jne adc cmp sbb jmp (bad) (bad) (bad) inc jge push sbb xor cmpsl je xchg das arpl or test push inc sbb mov (bad) (bad) call jl js es jmp in sub xor dec or xchg (bad) ljmp fwait jle mov (bad) or call std testl add inc sub mulps xchg test aas or (bad) jmp cmpsb stos xchg into sub xchg cmp add lahf mov xchg sar pusha aam iret (bad) mov add xor dec dec outsl push lods int3 mov push cmp mov (bad) in int fwait xor add in das sub pusha fwait loope repnz jns cs jnp push push jg and xlat xchg jno inc lods jbe loopne jmp (bad) (bad) inc cmpsb sbb xor loopne fwait push loopne fcomps inc es stc mov lcall dec std pop inc or outsl jo mov call dec pop data16 mov (bad) (bad) (bad) pushl or test dec cmp pop das mov sub vunpckhps jl fisub inc sbb aaa es jb jg jg cmpsb adc push or dec lods gs out aad jo ss (bad) (bad) lcall and jae mov pop cmp dec pop sbb mov (bad) (bad) (bad) jg pop shrl insb sub xchg les pop mov fildll int sub (bad) (bad) jmp in or repnz add shrb jecxz jne clc mov cmc cmp jno pop loopne lods xor add adc pop lcall or pop cmpsb sbb pop cmc (bad) jmp outsb test adc imul (bad) (bad) jg ljmp sub ret xlat lods sbb dec adc sub jbe out and cld call sbb xchg (bad) outsb notb and or dec popa inc adc (bad) (bad) call out pop cmp icebp shrb sub dec lds lret mov mov (bad) ljmp sub daa clc pop mov test adc inc dec sbb push mov mov hlt sub jecxz mov sub imul push (bad) (bad) call int pop in xchg fnsave aam mov insb jg and fdivrs (bad) (bad) jg cmp adc cmp pop xor test add dec sbb jmp incl cmp imul xchg outsb and mov iret dec fsubrl push xlat sahf (bad) sbb jno cld (bad) (bad) ljmp mov sub sbb xchg xchg enter shl negl pushf mov dec (bad) pushl sub jecxz ljmp jle dec movsb shlb adc sbb clc (bad) (bad) (bad) mov fucomi mov or push push cmpl clc jp cs xchg pop mov cmp (bad) (bad) (bad) decl sbb pop sbb and and mov sbb inc in add fwait cmpsb mov (bad) (bad) (bad) jmp lods lret add cmp imul adcb xlat mov stos or test push call jle das stos stos ja out sti sub scas clc jmp hlt push adc aad xchg test iret pop adc ss std (bad) (bad) (bad) sti mov xchg iret in mov cld cmp xor sub mov inc call adc sahf jae arpl dec inc lret push sti sub mov (bad) (bad) pushl inc and lahf inc xor aaa lcall and sbb or sarb inc adc aad jmp xor xor adc aam in push sbb (bad) (bad) pushl repnz cmp mov fistl xchg sub loope adc xor jno jb outsl clc incl or stc sbb fidiv dec stos push adc insl mov pop (bad) (bad) (bad) (bad) decb fcoms push outsb inc or push rcll es sub inc sub pop push ss (bad) adc pop mov (bad) lcall movsb mov test (bad) dec push cmp decb ficomp mov dec in mov int3 (bad) (bad) (bad) push jmp movl mov rorb insb xchg xchg xor add (bad) (bad) pushl sahf push icebp push jl test je ret out lahf aad mov ja mov scas cli (bad) (bad) out outsb notl mov cmp dec sbb test or aaa cli (bad) (bad) inc sbb lock int loop xor push fucomip idivb mov mov (bad) (bad) ljmp (bad) lret xor xchg (bad) (bad) xor push (bad) popa les (bad) fadds (bad) (bad) (bad) pushl jecxz mov mov xor mov sbb (bad) xchg (bad) (bad) (bad) call repnz sub loopne bound bound pop pop imul test xchg clc or pop adc inc add lcall mov gs int jle sbb (bad) (bad) jmp push mov push cltd cmp inc (bad) icebp sahf stos ss adc dec fisubrl popa dec (bad) (bad) (bad) ljmp jae stos and sbb xor jae mov or fcoml movsl addb (bad) fiaddl dec cmp jmp lret add loopne lds ljmp (bad) (bad) (bad) incl push mov push int3 dec mov and jge dec mov popa dec call cmp (bad) (bad) jmp movsl out mov hlt cmpb outsb mov or jae fwait ret xor fadds (bad) decl adc cmpb lea jo mov pushl adc call push daa cmp and mov add (bad) (bad) (bad) stc mov loopne dec dec mov mov xor inc xchg aam sub jbe dec xchg adc (bad) dec cmp stos iret insl xor pop jle xorl xchg (bad) (bad) (bad) pushl sarl and in rolb loope pop rcr or or (bad) sar (bad) (bad) fisttpl pop push or lahf decb or pop inc repz jmp cs (bad) jne pop arpl (bad) (bad) (bad) pushl loope lret out addb std lcall cmp add cwtl bound stos enter push fwait (bad) push cli les jp divb lods or cmpsl (bad) (bad) (bad) pushl jns lock fistpl pop jmp movsl add mov incl pushl push jge in mov and fstps jb stc or es (bad) (bad) (bad) call and cmc pushf arpl add pop mov movsb mov sbb ret sbbl mov (bad) out clc mov jl les dec xchg fnsave push ljmp (bad) (bad) mov inc push cli xchg jge push xor jno cmpsb pop call (bad) call (bad) (bad) (bad) decl xor into jmp (bad) hlt (bad) xchg and xor pop jp (bad) (bad) jmp loop (bad) repz xor cwtl sbb es std call cld mov cs pushf aaa int3 add sub dec jae push pop dec jmp call scas negl xchg add sbb inc inc pop cwtl imul (bad) ljmp popf and ds sub push rcll lods shrb aad pop push fldl loopne jns js arpl xchg lods sahf xchg (bad) (bad) (bad) (bad) jmp in jno cli xor es out (bad) xchg dec dec movsb fisub add leave cmp (bad) (bad) (bad) ljmp cmp addr16 loopne popa push cmp stc jne les inc adc cmpsl nop leave cmp ret or mov subb pop push dec push (bad) (bad) pushl call inc xor sub test and adc and xlat je (bad) (bad) decl xchg ds jb jl adc and aad and mov (bad) (bad) (bad) pushl outsl push pop pop gs xor inc mov pop push sub into mov add incl and lods adc scas or push dec add xor (bad) incl xchg out lea lret insb mov or push jle out jo (bad) cmp cmp add (bad) (bad) (bad) jp mov cmp jge dec push addr16 popf xlat bswap xor ds and jge cmc (bad) jmp push or jmp aas repnz jbe std or das clc (bad) jmp mov jmp sti jbe xchg inc push sbb loope pop insb mov mov (bad) jmp sub inc shrl sub sbb adc and (bad) call mov dec cmp aaa lods call sbb mov aam (bad) (bad) out nop xchg dec stc (bad) cmpsb gs inc pop pop pop inc pop inc in addr16 and (bad) decl (bad) cmpsb sti je push mov imul push test xchg xchg push int loopne adc imul fsubp xor (bad) int3 fildll pushf rol sub movsb dec (bad) xlat push int sub (bad) mov ss push fsin inc test mov jmp and ret (bad) ljmp jmp movsb data16 push orl sub or pop icebp pop je sbb stos or cmp (bad) out xchg jp movsb sub add xor push loope inc pop out dec inc loope push ss xor sbb (bad) (bad) (bad) lcall subl xor scas push pop outsb nop sub pop lret gs aad into xor or inc xchg jb (bad) (bad) pushl mov mov pop sbb and or mull mov pop jno adc popf test je stos (bad) (bad) (bad) dec or mov lcall fistpl enter fidiv mov cmpw arpl (bad) (bad) call sub cmp xchg ret fisub xchg test pop push pop cmp push cld jmp xchg lret push cmc hlt xchg cwtl les mov out lcall outsl mov imul jg movsb test fdiv add (bad) (bad) (bad) lcall sub mov mov ret or in test cmp rcr mov jge aam aam xor fcomip (bad) incl and xchg jle call adc shlb pop lock imul adc imul test pop sbb sar (bad) (bad) (bad) dec and xor mov mov mov pop subb xchg flds dec mov jg nop or xchg lret xor lahf idivl loop clc (bad) (bad) (bad) mov ss jmp sub (bad) call test in arpl ljmp test arpl sbb mov cltd lahf sbb ja sbb es sti jp fwait (bad) (bad) ljmp dec cs cmp push sbb fidivrl jo sub xor cmc (bad) (bad) decl mov int pop xchg jne pop lock mov sahf inc ffreep aas clc xor dec mov xor addr16 imul (bad) sbb add dec or (bad) out (bad) (bad) pushl cmp mov shrb dec xlat inc or (bad) enter movsb rclb push bnd sar (bad) pushl mov clc jle stos mov push dec loopne pop ret mov cmc es hlt (bad) (bad) jg inc rcrl stos dec test sarl mov sub push scas mov inc sbb gs fistl cmp icebp fdivs movb stc adc clc (bad) (bad) jmp pop movsb mov hlt test xchg sbb fist push lea divl loop (bad) jl sub or outsl loope inc sti push icebp and dec (bad) xchg push dec xchg ds mov test imul mov (bad) decl jne in dec pop push inc ret aam subb adc mov sbb pop loopne lock mov xchg dec and sbb ja jl adc xor (bad) mov mov data16 lds jb imul (bad) pushl std and loopne mov cwtl pop dec out in out sbb mov xor rcrl (bad) (bad) (bad) (bad) cld (bad) cmc loop mov inc push xchg push mov sub xor add jae js push push cmp int mov sahf leave pop bound outsb mov push push xor adc pop out ljmp cli lock das and subl push push cmp push inc and in push fsubrs das sar pushf xchg int or insl or sub pop aam fsubs jae call (bad) (bad) (bad) pushl mov mov les mov and shl int3 repnz dec xor (bad) (bad) (bad) decl inc cmp adc push aad mov fs adc dec add loopne cltd fs repnz pop jecxz sub cmp (bad) (bad) lcall cwtl je and aas bound sbb xchg jge out dec movsl xor inc mov jg (bad) loop xor ret push push out xlat and mov inc or lret ret call pop adc xchg sub dec lock fdivrs imul mov xor dec (bad) notl adc scas dec mov (bad) ljmp pop cmp sub loop movsb cmpsl mov (bad) (bad) pushl enter aaa dec mov xchg int3 or pop rep iret cmpsb inc aad pop adc (bad) (bad) cmp adc pop and inc rorl cli jg jb iret push insb fwait mov pushl adc je cmp push inc lret mov fwait pop adc push sahf dec xchg (bad) ljmp mov or xchg lret xchg stc lcall (bad) decl or jp sub test pusha mov fsubr outsb in add das cli decl fwait pushl sbb test test sub fcomip (bad) (bad) (bad) (bad) jg (bad) incl in jg xor xor lcall mov jp decl std (bad) icebp and mov xchg sbb loop int3 in mov incl enter testb xchg rcrl fisubl and outsl repz (bad) mov jo stc add sub dec js push push (bad) decl (bad) ret (bad) sub sarb or subl loope push outsl or loope shl push bound jle pop mov jno mov jo int mov (bad) (bad) fcomip sar inc sti mov push mov int3 ss cmc cmp mov test cmp (bad) incl sub push add xchg rorb dec fsubl jae mov inc pop stos push popa cwtl (bad) pushl std (bad) xchg mov fs xorl (bad) jmp add or cwtl (bad) (bad) (bad) jmp sahf imul jmp hlt movsb stos inc sub dec arpl fcoml push (bad) jmp add andl (bad) pop mov dec (bad) (bad) (bad) ljmp sbb jbe lods test sub pop cmp cmp xchg mov lcall add xchg or sub loope mov (bad) (bad) (bad) incl adc fwait cld push outsl arpl loope in popf adc inc cmp push cmc xchg sub lods std (bad) (bad) pushl popf out or add xchg daa cltd lods sub cmp flds inc fldl call scas ss xchg add movsl pop mov xchg ljmp cld popa adc icebp pusha jbe mov adcl into and mov lret (bad) (bad) (bad) pushl mov jns imul ret cmc out pop dec pop out (bad) sbb push in mov mov test (bad) (bad) (bad) jle add dec ja cs and sbb xor aam push xchg std sti push or inc cld incl cmc into jo ja lods je add sbb lret (bad) (bad) mov aas fsubrs movsb or pop fisttpll mov jp sub loopne mov subb out les xchg fwait add or dec jle fld xchg cwtl cmp pop jae jbe xor cwtl xor sbb xor sbb (bad) xor inc shll push and mov pushf and sahf xchg sar cmp rcr ja jns scas out jl pop pop out test ds (bad) (bad) (bad) jmp js xchg sbb adc fist mov xchg mov jecxz leave inc lock cmpl fldcw lods xchg xchg enter inc mov or fwait data16 jle cwtl cmp (bad) incl mov push mov rolb int fistl mov xor popa cld call sar lods push or loop (bad) (bad) ljmp xchg into jae and (bad) jmp inc xchg aam shlb (bad) paddw xchg insw sbb ljmp insb test notb pop rcll push sahf xchg pop add adc mov mov rcrl xchg (bad) hlt lret sub aam xchg lcall sbb (bad) (bad) (bad) out addr16 (bad) fimull in pop adc mov int3 or (bad) (bad) jl pop mov (bad) mov push adc inc movsl xchg mov lret pop (bad) (bad) (bad) inc test mov jg sarl sbbl aaa fstl (bad) insb fidivl cmp (bad) (bad) decl aaa sti sub and (bad) hlt lock jo std enter je (bad) (bad) (bad) call popf add int es mov push arpl or or (bad) decl int3 dec mov pop (bad) jae xchg ss inc dec mov test add cmp (bad) (bad) dec imull loope (bad) mov dec jns stc test jnp pop pop push subl aas jle sar (bad) dec cmp call (bad) inc test sbb mov mov mov out repz (bad) (bad) (bad) out fcomps leave sbb mov xor xchg mov inc lahf inc sub sub lret pop push or mov lret push std mov movsb sub shlb (bad) (bad) (bad) call cli dec test and sbb xchg lds lret xor leave push call pop inc sbb (bad) incl shl inc sti mov les clc pop daa (bad) mov outsl cli decl enter mov push dec add test jmp (bad) (bad) (bad) ljmp jp lods sub loop mov stos sbb sbb das mov push jbe jg (bad) (bad) lcall sbb nop scas imul nop push and fimul mov add ljmp sar mov mov xchg cmpsb inc int (bad) fisub dec aas cmpsl push leave (bad) (bad) (bad) jmp fnsave cmp scas pop cld jae pmulhw (bad) mov pusha mov (bad) decl cmpsl jnp push push lock invd ret fwait imul jmp mov (bad) (bad) pushl and cltd jns xor pop push inc adc lods xor xor push cld inc push jmp xchg or into (bad) (bad) (bad) decl or test or je mov popf push and jns fwait inc jb inc nop pop xchg xchg mov pop fistl push mov xor mov hlt mov out xor pop loopne sbb xchg mov cld xchg aam lret (bad) out cli call popf mulb ret adc xor repnz stc pop std jae fsubrs mov sub push out es fstps lds xchg aas push mov (bad) (bad) (bad) jge mov mov out fildll add bound fwait insb test pop std incl sub (bad) adc test and and clc (bad) ficoml cmp mov ja hlt mov lret push test (bad) (bad) jg ds adc fistpll bound icebp movsb mov dec repnz inc in cmp mov fmuls cmp sbb push push jns dec push dec imul cmp and jmp insb imul ficoml nop jo (bad) (bad) (bad) (bad) mov push sub das pop sub icebp (bad) xor ja (bad) xor inc push (bad) (bad) (bad) incl cs icebp push in je in sub aas std cltd loope nop (bad) aad imul cld repnz (bad) (bad) incl jae lods dec add mov inc iret cmpsl in cmp sub mov imul push stos pop adc fidivl ja push fnstsw and shlb aas mov mov pop jne pop cmp mov in (bad) push bswap mov int3 loope insb push mov inc repz call mov lods or and adc lds gs (bad) (bad) (bad) call cli rcll pop popf imul dec mov sbb ret (bad) (bad) ljmp pop add xchg inc sub xor xchg and add les jmp mov bound ret dec data16 push movsb scas push idivl ds (bad) (bad) cmp nop stos pusha mov jge inc jmp jl mov and movsl lret mov mov ds or lds pushf inc mov cltd mov inc cmp or clc call std rclb test fwait lds aad daa sbbl adc (bad) (bad) ljmp fisttpl (bad) xor mov jg add enter loope insl cltd mov addr16 inc lods les loope jmp and nop fisttpll mov ficompl pushl dec jno dec jno in and pop sub je lods in jns inc ss (bad) (bad) (bad) call in or pop add jmp lea mov lret pop cmp (bad) (bad) mov mov dec and fdivrp cmp mov aam (bad) push jecxz aam ret lock (bad) ljmp clc inc mov dec addr16 sub test pop movsb xor pop dec and (bad) (bad) (bad) (bad) decl push scas dec imul or xchg and das dec pop cmp push xlat (bad) (bad) (bad) (bad) lcall das imul push dec les mov fnstenv mov (bad) (bad) jmp (bad) scas shr add xlat je les andl jae icebp and jle push (bad) fnsave insb push or bound add mov mov flds (bad) (bad) (bad) mov bnd imul jo or fiadd (bad) (bad) (bad) call pusha int3 sbb mov ja popf inc mov cmp or adc adc in out add adc sub fisttpll (bad) (bad) (bad) decl cmp sbbl mov xor loope dec adc pop dec (bad) call cld jmp lahf ljmp mov sti outsl icebp mov pop sub loopne (bad) (bad) jns ret das xor pop push inc andb insb insb lahf push add inc mov lea add jo cltd push cmp xchg (bad) incl cltd daa idiv inc scas mov cmp cmc dec xchg imul or fwait add enter xchg out clc insl mov add out mov (bad) cli mov cmpb lahf push mov in ljmp cmp mov jg inc pop or daa cmc or leave popa lret pop pop inc aam (bad) (bad) ljmp rorb pusha sbb sbbb mov mov (bad) incl addr16 fsts aad hlt sub lods std xchg popf std and in (bad) and inc and dec inc or sub cs mov (bad) lcall jmp jno (bad) fcoml adc jnp hlt test jecxz pop dec imul mov aad mov xor cmp fwait out (bad) call loopne cmp sub mov sbb mov das orb iret inc xor dec imulb roll (bad) (bad) (bad) mov pusha xor mov jbe mov enter outsl (bad) jle mov scas (bad) (bad) jmp outsb or dec mov jecxz insl int push xor call lock call cmpsl inc jnp aaa test sub mov mov (bad) (bad) (bad) ljmp test out test scas xchg pop cmp or adc cld inc mov hlt or (bad) decl shrb pop jbe std cmc mov das and inc (bad) (bad) jg mov sub jg pop xor ret cli and incl xor cmp or in xor icebp and xor stos daa sub aad lahf test imul jg mov dec icebp test pmuludq inc mov into movsb movsb mov xor repz (bad) mov inc and mov hlt pushf popa pushf fistl (bad) (bad) (bad) lcall jbe inc out sbb push aad loop (bad) (bad) arpl adc and decl leave mov xchg loope and movsb das cli call dec cld out jge xor jbe cmp mov out jl (bad) (bad) decl ficomp fbstp in repz xchg sbb dec jg mov jb (bad) jg das mov jb lock jbe mov sub mov push fsubl lods popf add call clc pusha popa ss mov (bad) out sub (bad) (bad) (bad) decl lcall scas faddl (bad) js out clc and leave clc adc jle clc (bad) fcomip stos cs mov dec xor adc ljmp (bad) lea push imul jp cli add mov (bad) clc mov push jl lcall ret push mov pop pop push cmp jle jl rorb mov (bad) xor outsl scas lahf fnstsw insl pop mov repnz shrb stos or sub mov in (bad) (bad) (bad) pushl sub in pop mov and (bad) cmp out xor sub andl adc mov cwtl push daa sbb lahf sub rorl cwtl add arpl rolb fnstsw (bad) (bad) (bad) lcall repnz pop daa repz fwait test inc ja aas mov inc push stos jne inc cmpsb mov (bad) (bad) (bad) push cld sub out mov or vmread add jecxz fdivs (bad) (bad) (bad) call jbe aad cmp cmp dec bound and insl mov add imul (bad) jmp mov mov mov dec test popa mov push (bad) (bad) (bad) (bad) ljmp adc imul stc cs icebp cli and xchg clc ljmp xor ja (bad) (bad) (bad) jmp inc xor fimul cltd data16 jmp lret outsb addl push sub or pushl xor push add push sub jg xor loop mov (bad) (bad) (bad) (bad) ljmp in fs sub jbe sti sub gs cwtl ret pop ljmp (bad) (bad) (bad) lcall clc inc insb cmc jg fadd (bad) rorl push inc (bad) cwtl rcl cmp sbb add lea inc mov (bad) (bad) (bad) in ljmp inc or dec je fcmovu push in mov pop arpl add mov out nop (bad) jb adc stos jae cmc inc aad cld call mov mov data16 add (bad) (bad) jmp lret xchg push or sbb shrl jnp into (bad) (bad) mov sbb mov sub (bad) pop pop stos xchg and (bad) (bad) jg test call add subb aas xor pushl cld ljmp aas inc and mov push rorb dec shrb fwait pop lock (bad) in lret adc or jo in adc push mov add inc and (bad) (bad) decl jl popa xchg adc insl mov test mov push mov mov (bad) (bad) jg pop es or lea cmp push (bad) cmp dec adcl out and push jecxz xchg mov cmp mov mov jns xchg mov (bad) (bad) (bad) jg sub jne inc sbb test and enter movsl outsl sahf in ja add mov (bad) (bad) pushl mov add mov loope ret (bad) pop adc cmpsb cmc dec dec mov mov sahf insb xor dec sbb decl out xor push add cmp (bad) fbld sbb das notl arpl cli lcall addl cmc scas mov push mov and pop loop sbb inc pop into icebp ret fsubp lcall xchg (bad) (bad) mov or or push out out aam mov outsl fisttpl (bad) (bad) (bad) jg add ss popa es dec mov mov jb jns movsb or ljmp movsl mov jmp dec add sub jbe mov sbb push lea xchg mov scas dec sbb (bad) (bad) (bad) decl sbb pop cmc push push adc adc cs mov (bad) (bad) incl xchg pop roll and xor js inc push cmovnp (bad) jg (bad) pushl movb std pop add push (bad) scas jbe push and decl jbe fcmove popf stc pop mov xor adc xchg xchg in dec xor popf loop (bad) decl mov aas rclb mov mov das dec outsl adc push (bad) (bad) (bad) mov or subl xchg movsb divb xchg pop xorl ret xor sahf out aas mov push adc or and xchg (bad) (bad) (bad) mov inc loope lcall cmc shl in inc testb insl and nop push dec mov inc and rcrl dec add push out movsb mov pop push adc push jno jo adc (bad) (bad) (bad) call xor inc inc popf or add je push stos mov mov pop fs push (bad) (bad) incl pop fild dec cmpl lret dec (bad) out fnsave iret (bad) mov mov pop and repnz fisubr xchg mov and (bad) (bad) (bad) lcall or adc das rorb inc sahf (bad) idiv popa jns ret ljmp (bad) (bad) (bad) (bad) mov out mov inc ja adc adc scas lret pushf xor aas cmp (bad) shl (bad) decl mov push movsb pushf imul sbb lahf stos daa xor lret jge (bad) (bad) stc mov and sub cmpsb aam jp ret sub (bad) (bad) call into test mov and mov lahf test test push fnstcw xchg push std sbb inc pop dec sbb (bad) cld xlat sub rorl cs mov dec and push sub (bad) fs in push clc (bad) stos pop adc rcrb aad ja cmp insl clc fcomip push std popa shl mov test mov rolb loop idiv (bad) (bad) incl cs cmpl punpcklwd mov aad jno (bad) call cld aas sti popf xchg frndint mov scas cmp popf lods inc inc add and je ret (bad) ljmp jl scas pop ds mov inc aam (bad) cmp sbb mov (bad) cmp (bad) (bad) (bad) dec mov mov cmc and (bad) mov mov sub cmp out out (bad) (bad) mov push push lahf (bad) int js es addr16 lock repz (bad) lcall (bad) movsl add dec pcmpgtd jo inc cltd push decb fiaddl xchg mov pop add aas ret pop xchg fcoml daa mov loopne mov nop imul out aad pop gs lcall push mov lds pop pop jp ficomp jmp push sbb (bad) (bad) jmp cmp mov jnp in mov popf (bad) (bad) inc sub lret jnp loope adc dec mov outsl cli push mov xor sbb (bad) out icebp ja enter (bad) (bad) (bad) (bad) mov mov adc imul les pop (bad) out pop mov mov sahf pop fcom aas int3 push lock xchg cs (bad) xchg idivl mulb loopne (bad) (bad) (bad) in popf xchg sub stos push or pop inc aam push movsb dec into adc out jg inc out inc sub (bad) (bad) (bad) call pushf mov push movsl mov and lret aaa orb mov push push int3 mov xor (bad) (bad) incl mov popf jbe inc aas faddp clc cmpsb repnz data16 repz (bad) jg das imul shrl cs pop jle rol (bad) icebp std push cld (bad) jmp jg,pt movsb sarl mov jbe les add push (bad) fstps sub pushf sbb les es sub daa out push jge mov inc sbb ja sbb ja (bad) jbe pop outsl sbb (bad) repnz (bad) (bad) (bad) out mov push add lods add and rcll mov aas dec (bad) (bad) xor lods push test jle hlt sbb loopne (bad) (bad) (bad) jmp sbb test into mov (bad) jb push call pop (bad) bound fchs (bad) (bad) (bad) in in rcr jmp sbb fdivl and mov btc inc (bad) (bad) call jl sbb mov xor pushl mov inc sbb out dec mov lods fsts (bad) incl sar out insb jb std mov dec inc and (bad) (bad) call pop out dec mov inc dec (bad) sbb sbb adc movsb sti adc decl xchg lret jmp jbe push and and xor push insb sbb (bad) (bad) in addr16 pusha rol scas pop hlt mov sub bound push cmp in mov pop xlat mov popf mov icebp fidivl xchg stos push or cld inc jb dec addr16 outsb ret (bad) (bad) (bad) call push fcoml dec push dec and fistpll mov mov jmp add (bad) push mov cli fisttp fiaddl pop add dec test mov dec data16 jecxz lock mov or sti sarb jg (bad) lcall daa sbb decl test stc hlt fdivs outsl push pop pop and jge jae scas rolb mov dec insl xchg jae add mov lock push aad or and dec xchg subl jg cmpsb pmuludq hlt aaa xor push mov xlat outsb leave lret pop sub cwtl dec (bad) (bad) incl push sbb fistl jl cmp pop pop pop mov (bad) (bad) (bad) jmp ja inc repnz (bad) add dec mov lods lock cmp cmp lcall sub inc or mov push aad arpl orl jo je pusha cwtl xchg mov lods dec les or sbbl gs lcall repz rcrb (bad) (bad) (bad) jg fnsave fisub inc xchg pop add mull xchg aam sub mov (bad) (bad) (bad) incl mov (bad) lret adc jmp inc jb mov or xor dec out (bad) (bad) (bad) (bad) stc push mov (bad) mov into icebp mov mov jecxz into test es (bad) (bad) (bad) call fstpl lret orl shl jl fsubl add mov mov jmp ret rorl pop xor (bad) js cmp ror insl lods mov (bad) (bad) (bad) (bad) cld push arpl adcl or pushf std lcall std push popf pushf ss cmpsb xchg loope cmp (bad) lcall loope fs mov pop call mov lahf xchg stos jle and call in cmp shrb sub push ljmp nop dec inc (bad) (bad) (bad) (bad) pushl (bad) jne fdivrp loope dec call out lea jnp,pt test call cld ljmp jb mov imul out push jns adc aas adc (bad) (bad) (bad) jmp sub fnstenv icebp xchg pusha push int lsl por jg andb das mov dec pop mov cmpsb sbb or loop neg int xchg decl xchg sub pop and iret mov pusha (bad) (bad) (bad) jg add push pop push pop mov mov pop push push jg inc aaa or (bad) into add (bad) (bad) (bad) cli cltd hlt cmp or jae sbb stos push mov pop cmp dec roll int3 sub (bad) (bad) (bad) cld fwait xor sub sar push aam xor enter in xchg mov or xorb (bad) jmp rcrl xor cmpsb push lret mov movsb or stos (bad) (bad) call push ret into lods mov in and insl ds aas in pop repnz decl mov lret or shrl rcr rcl cmove test mov mov leave add mov arpl rcl xor fsubrs cmp dec (bad) out xor lds inc add and push call std jmp adc ja cmpsl sub loop inc repnz out jno (bad) (bad) pushl gs repnz orl mov jmp push dec adc (bad) mov (bad) (bad) (bad) fnop ljmp xor sbb popf cmpb jb xor popf movsb sub and popa cli add cli pushl adc sub fmuls (bad) (bad) (bad) out stos push mov lahf or ds push adc rcr jns pop das cld mov adc (bad) (bad) (bad) (bad) (bad) jne sub mov adc adcl aas out aam cs add mov mov (bad) (bad) fistl jg inc and xlat rcrb outsb loop push jecxz push push test (bad) lcall and mov and adc sub mov cmp add (bad) (bad) ljmp mov adc push fdivr fwait daa inc inc outsl xchg lret sub or (bad) neg hlt (bad) jp pop xchg push push and aad adc int lock push cld jmp test imul cmp out xchg js call jg (bad) (bad) dec adc jae inc (bad) out xor hlt and jns (bad) (bad) (bad) ljmp push mov ds jge push cmc or jnp loope mov ret (bad) call je push xor das rol dec mov xlat lret mov xchg cld jmp cmp cmp sub mov lcall in dec pop xchg in in insb push in inc sub scas jg (bad) cmp int3 insb jmp imul stc and xchg lcall insl aad popa inc add add or loop or lods test ret mov (bad) (bad) (bad) jmp mov enter out xchg xlat das sbb mov arpl and or dec jne cli cmpsb iret aaa addr16 and scas mov push in mov rcl inc mov andb pop (bad) (bad) (bad) pushl imul inc sbb xchg loop inc sub xchg jne (bad) push pop clc call push jg js pop pop push mov je lock (bad) mul iret stos pop jl mov inc xor arpl xchg jo ljmp cli lea jbe scas call cmpsl adc and cmp (bad) ljmp mov cmp and cld lods add mov xchg mov decl sbb jp out add pop aas (bad) (bad) (bad) dec inc pop adc call mov arpl sub and adc cld jmp cs pop jmp xchg dec mov and pop ja (bad) pusha pushf jg sub mov mov xor (bad) inc or lret jo push mov popf adc icebp mov movsl pop sub jl jne imul inc cld lahf (bad) (bad) (bad) jmp mov es mov sub rorl push cmc es and incl mov push test dec (bad) xor mov cmp aaa pop std xor mov fs (bad) lcall xor lods hlt adc dec loope insl cld or mov imul adcb enter repz and xchg sbb sti xchg or xchg aas adc iret call loop push (bad) mov imul les dec mov es (bad) mov xor out add popa push adc dec pop xchg (bad) decl add mov jb pop add sbb lret int dec xlat (bad) cli ss push jnp (bad) pop cld (bad) jmp mov add pop lcall rcll out sub loopne inc or cmp testb xchg (bad) jg ljmp rorl loop fldenv inc push imul mov (bad) (bad) incl fs clc pop xchg or lret daa sub call mov lret dec push insb mov (bad) jmp (bad) pop inc shll cmp adc movsl mov sub (bad) daa sub sbb mov (bad) out sub hlt test mov jge or xchg pop dec (bad) (bad) call jmp mov or adc sahf popa sbb aad cmp repz mov dec sahf loope inc shr loopne push jnp fisubr xchg jno mov imul inc iret (bad) jbe push (bad) (bad) pushl xchg fstps inc insb cmp dec jns xchg repz stc addl (bad) (bad) (bad) (bad) cmp ja mov mov stos and jecxz or outsl jge cmp xchg dec out aaa (bad) (bad) aaa std call and or dec sbb xchg into outsb cmpsl mov sub add push ss jbe ret cli fisub inc mov loopne in call pushl xor sub and clc inc outsb incb adc and push sahf pop or (bad) (bad) (bad) push nop cmovbe pop (bad) lds mov mov mov cmp push call push (bad) (bad) (bad) mov pop push test and mov or cmpxchg (bad) (bad) (bad) call mov xchg fwait enter inc push in sbb add repz (bad) (bad) out mov pop and dec int aaa cs int inc add (bad) (bad) fildll jno cmpsb dec pop xchg mov outsl push stos cmpsl mov hlt mov push dec mov (bad) (bad) (bad) (bad) ljmp call addr16 je repz push xchg scas xor mov insb (bad) (bad) incl sbb mov and cltd (bad) sbb add dec inc paddsb pop fs addr16 push nop pop iret xchg fisubrl mov or add sar (bad) (bad) incl call (bad) ljmp and add lods cs gs (bad) lcall dec leave pop fnop sub dec loop es pusha (bad) jl pop sub (bad) ljmp pusha ret (bad) cmpsl xchg popl outsb inc rol xchg mov pushl (bad) (bad) (bad) lcall imul push inc sbb cli rcll adcb pop xchg dec add (bad) jge inc ret xchg repnz push in loopne (bad) mov test lret jg mov mov cwtl (bad) (bad) (bad) decl dec inc test xchg inc lahf pop push xor xchg mov xchg push mov (bad) jne int call jmp icebp fdivrl xchg aam and mov dec cmp mov mov (bad) decl scas jl mov add or push int3 push test out imul xchg scas push pop (bad) fcomip pushl dec cmp ss jmp cltd pop adc pushf (bad) jge (bad) (bad) lcall data16 adc scas movsl sti cwtl (bad) scas mov sbb or enter movsb cmc mov push fwait jg cmp dec xchg dec mov inc sub inc mov les cmpsl lock out push mov movl lock mov (bad) sub shrl (bad) fstl repz (bad) (bad) ljmp subl pusha inc adcl push aas add add outsl clc lcall pop aaa and add jbe pop sbb sbb sbb push push or gs mov xchg bound pusha xchg mov (bad) push iret (bad) mov xor insb in sbb pop push test andl mov sahf scas jno inc (bad) (bad) (bad) incl loope pop sub dec stos or xchg nop es mov clc inc out (bad) xor sbb nop cltd lock gs stc test push clc movsl adc mov (bad) (bad) (bad) call mov pop pop cwtl fmuls add jl (bad) or mov push testl sti mov aam clc mov jns int bound and cmpsl xchg (bad) (bad) jg out imul cmp mov and loop rorl daa cld sub ss (bad) (bad) incl (bad) pop or sbb test xchg or mov push push out adc xchg mov fnstenv pushl std loopne cmp (bad) out inc push cld mov aad (bad) jmp das (bad) xor dec cli jp push (bad) jmp and leave rcrl out cmp pop jmp (bad) (bad) (bad) inc test pop mov pop lea jle les aas jnp (bad) jmp and (bad) (bad) (bad) pushl stos outsb je repnz pop loopne dec out push ja out lds repz das test pop xor rorl xchg jecxz (bad) jg xor lret xor pop sub data16 cmp (bad) (bad) (bad) (bad) ljmp mull fcmovu or loope mov fisttpll repz out jecxz (bad) mov shrb mov push and ror repz stc add (bad) (bad) (bad) (bad) sti jb jp pop shrl in pop and ja and aas dec int3 or add sahf das mov cld (bad) pushl test push cwtl cmc sub add adc (bad) (bad) (bad) decl sbb daa mov insl push movsb lods stos and aam sar (bad) (bad) (bad) ljmp imul cmp test lods add xchg add sub (bad) (bad) incl (bad) jmp xlat out xor les incb or repnz xchg sub (bad) (bad) lcall leave adc leave xchg mov xor push xchg cmp push loope (bad) jmp shr add sbb and arpl call inc inc lods add aaa std stos add inc movb int3 aas mov xor lcall cs mov divb jne cmp push jb outsb out std out mov aaa sahf (bad) cwtl inc stos cld out in or (bad) (bad) (bad) dec loop out and mov cmc adc imul xor adc mov and inc cli (bad) fcomip push pushf lcall jns fistpll (bad) int3 and jecxz outsl cld sbb (bad) (bad) out mov or dec rol xor data16 xor in and jae or adc stos (bad) (bad) cmp (bad) aam sbb into int3 out add xchg mov inc pushf push (bad) (bad) (bad) (bad) cli stos aam aam decl loopne mov int lods ltr mov dec in leave (bad) lds dec ret cmp das fsubrs inc add ljmp (bad) sarl int movsb inc dec cmpb movsl jne sbb lds hlt and mov (bad) jg and xchg in sub push (bad) divb (bad) nop rclb push dec pmovmskb push sar (bad) (bad) jmp ljmp and leave sahf cmpsl in ss shrl aad sbb pushf insl sbb fidiv (bad) pushl cld fwait cmpsb (bad) test lds mov mov lret fcmovb repz enter jo add (bad) (bad) (bad) lcall lock pop mov sbb xchg mov mov add sbb mov jg cld mov into loope fmul dec or mov test (bad) (bad) call std mov and inc cmp jge and test fild (bad) (bad) (bad) incl cmp push xlat scas adc inc push (bad) xor std inc fwait pop or outsl cmc mov inc data16 fsts (bad) (bad) fucomip mov and inc xchg int arpl xor pop mov (bad) cmc mov and cmp (bad) (bad) decl aad int3 sbb cld adc mov rcll imul nop add cli (bad) (bad) (bad) (bad) cmp or imul adc sbb fnstcw cli inc xchg (bad) (bad) (bad) ljmp mov out dec insl fidiv ret gs mov mov (bad) lcall xchg xlat pop cmp sahf or (bad) xchg (bad) or inc sti mov add (bad) (bad) lcall pop popa cmc dec mov mov insb pop pusha popf xor inc mov outsb ret cmp (bad) (bad) pushl jmp js cmp pop mov imul inc xchg push aam (bad) (bad) (bad) jmp cmp enter push lcall mov lahf mov dec push out loop (bad) (bad) (bad) (bad) js xchg jb mov mov adc pop icebp push out push and pop xchg out adc dec aas xchg iret out (bad) jg mov sbb push neg mov push sub pop mov (bad) (bad) call sbb sbb mov mov std cmp or sub incl out shl fist xor push shll cmc push sub out push jns icebp (bad) (bad) jmp clc mov daa fimul push outsl cmpsb xchg push loope mov sub xchg cli (bad) movsb or xchg (bad) (bad) (bad) incl jae push pusha cmp (bad) jmp mov cmc cmp xor loop mov mov (bad) (bad) (bad) cmp daa mov test sub out fidiv popf adc add fwait (bad) sub cmpsb jne test out xchg inc push mov call hlt or (bad) (bad) call push and cmp dec fxtract imul cwtl fistpll dec fwait push std jg xchg add movsl (bad) sbb sub bound incl loopne enter mov pop cmc mov (bad) (bad) (bad) (bad) cmp push push push jnp jns inc orl xchg inc fcomp fisubr (bad) (bad) (bad) incl movsl call jae in lret into js dec lahf fsubrl xchg dec loop mov hlt jmp xchg mov add bswap fcompl or mov add add xchg push sbb jp xchg das ljmp push test inc data16 test and loope aaa cld stc stos mov sbb int3 mov push sahf fs jb das clc or lods add fcmovnu pop incl fdivl mov sbb and push sarb cmpsb sbb (bad) (bad) (bad) lcall push stc mov push subl or (bad) fsubl sbb stos mov jbe mov push jle (bad) mov cmpsl pushf test inc rorb insl fstpt jmp (bad) decl and popa mov lds xchg push data16 imul (bad) (bad) (bad) decl loope sti xchg int movsb shrl push idivb jbe ret pop mov and (bad) (bad) inc xchg or adc and out mov mov (bad) (bad) incl xchg mov mov jmp jmp pop (bad) (bad) (bad) (bad) out scas inc dec push mov cmc pop lods test test jecxz,pt (bad) jl ror push add (bad) (bad) lcall mov dec clc push jne out test cmp xchg xor (bad) xchg cmp fs mov (bad) (bad) out popa (bad) xchg or nop fimul xchg adc stc mov inc loopne mov (bad) decl jle inc cmp arpl ret pop mov (bad) or insl lcall (bad) (bad) incl mov push push inc fisubr xchg jbe test mov aaa loope xor lock mov adc shl loop movsb scas jecxz sub loope sahf adc or pop (bad) (bad) (bad) call mov mov add sbb outsb adc popa js into adc add ret bound dec sub clc repnz aam pop jns mul jno or rcr (bad) (bad) (bad) dec and mov cmp and arpl loope mov ljmp movl mov xchg xor push jo jbe cmpl cwtl ljmp pop enter jmp (bad) (bad) jg xchg push (bad) dec xchg and pop sti ret pop xor pusha lret mov (bad) (bad) (bad) mov cmp sbb xor mov add xor mov push outsb orb int cli xchg pop dec mov rcll cld xor stos stos cld mov mov fwait cld inc jno loop inc cmp std (bad) (bad) dec ficoml jmp sub dec ja inc xchg popa call adc cmp mov call push fldcw repnz js stos cmp out scas pushf (bad) mov mov pop mov (bad) (bad) cmp jmp jle lods shlb add mov and cld cli mov mov (bad) (bad) (bad) pushl or add push lock lahf dec fmuls stos add cltd leave shr (bad) (bad) decl push dec sub test inc out jmp xchg rcrb aaa in mov pop cmp dec add fildll adc aaa test mov dec mov sub icebp rcl jp (bad) (bad) (bad) decl lods mov insl mov inc jmp sub repnz int3 jge aaa inc clc call sti mov fdiv aad push into pop adc aad (bad) cmp inc (bad) out into (bad) lret ds ljmp jp (bad) mov mov pop pop lahf pop loop in rorl mov sbb (bad) incl repz fisttpll push (bad) (bad) out xor cmp xchg sub (bad) (bad) ljmp adc rorl or xchg mov shl or pop adc (bad) lcall pop cmc aad inc xchg int3 dec out add mov sbb ss jnp adc fisttpll stos mov stos rclb xorl pop clc mov adc xor xor ret adc jbe inc sbb add clc (bad) dec adcl idiv xchg sub rclb out mov outsl (bad) call dec or mov fldcw mov rcrl dec mov cltd das fnstenv ljmp ret out or cmp int dec shrb (bad) lahf (bad) mov scas inc arpl fbld ret incl mov rcr and inc jp sbb (bad) jg popf ret mov jb inc ds and daa push fist cmpsb add add dec ja (bad) (bad) jmp ljmp inc fiadd test add fistp in mov ljmp jne jne sarb leave (bad) ror sbb ss imul sarl mov (bad) ljmp cs cmp fwait push sbb in jae popf pop fnstsw clc scas flds (bad) decl inc mov mov sar dec cmp out scas pop daa jp mov imul (bad) (bad) lcall (bad) imull adc jmp in xchg loop dec xlat (bad) hlt push mov push (bad) (bad) (bad) call das push or aas push das adc adc ss or adc xchg xchg push mov (bad) mov fcomp jae out cli push arpl popa cs and mov (bad) push or out cli push sub pop fstps xchg sub cs in (bad) (bad) decl (bad) sub pop rcll mov outsb pop mov das cld std fs (bad) (bad) decl decl out js pushf jb sbb jnp jl mov push fmuls ljmp jmp out aas and xchg and cmpl sub leave sub icebp shlb mov rol add mov push push sub jne mov mov adc adc cmpsb jae shlb fwait sti outsb and (bad) (bad) (bad) (bad) pushl mov xchg inc loop pop inc dec or or (bad) inc add or repz loope add dec js (bad) test xor dec test gs or inc jns out cli fwait or adc fbstp lret push jge sub mov incl sti test and sahf loope dec ret pop dec xchg xchg stos enter outsb (bad) (bad) (bad) decl popa inc fstps dec mov sbb and lcall jge add pop out (bad) (bad) (bad) (bad) fmuls iret push sbb add dec (bad) mov mov or xchg leave lds shll decb fisttp loop xchg shrb (bad) pushl test mov xchg pop rcl imul sub jns dec xor (bad) (bad) jmp adc addr16 jmp iret insb push add fisubr les (bad) mov mov adc jb loope sbb sub leave sbb sub (bad) cli pushf push subb (bad) and (bad) (bad) (bad) pushl nop ss and xor rorl sub xor mov (bad) (bad) call jns mov xchg test cltd pop into mov or mov fcoml call jmp lahf bound bound inc mov push xchg push adc ljmp add mov movsb std out sub push shll mov aam movsb jge sar incl ljmp pop (bad) jle pop rolb shrl jg xlat (bad) ljmp jl lea add decl inc mov add push pop (bad) pushl outsb fcomps loopne mov xchg ds (bad) in pop fldl (bad) (bad) (bad) dec daa in push sbb adc mov jp mov and xor mov cli (bad) lcall jae push cmc jmp out insb fisttpll jmp loop loope lock and (bad) ljmp xor lods add mov or dec sub mov jnp (bad) lcall mov or cli jb fstl jge lods je lret cmc jmp push (bad) inc movsl mov (bad) mov lahf cmc xor fsqrt (bad) stc mov jb lock (bad) (bad) jg or ds rorl xchg popa xlat adcb pop aas mov push jmp jmp and (bad) js dec or int (bad) (bad) (bad) push fsub cwtl xor sub jge dec popa pop int3 out inc jecxz ja cmp add jo sbb mov push ret sub adc lahf push or nop lcall in dec xchg and decl cwtl mov subb repnz popf push xchg sti fsubrl (bad) (bad) call lcall fs iret imul imul loope test sbb (bad) ljmp in and jmp add mov sbb test movsl add (bad) (bad) (bad) (bad) adc add mov pushf outsl inc mov sbbl push (bad) ss pop (bad) (bad) (bad) call gs mov call stos out lds int xchg or jle (bad) call movl pop sbb lods push inc jb call inc mov push (bad) jno mov xor cli xchg mov cltd lds ljmp test aad push ficomp mov inc lcall xchg (bad) loopne (bad) fild push inc movsb cmp xor scas sub adc (bad) (bad) lcall push jo adc xor sbb pop test fadd dec fstpt jnp push (bad) (bad) jmp jp ja mov xor mov sbb in mov (bad) (bad) (bad) (bad) jmp mov out inc or mov ficoml xchg hlt decl ljmp fs cmpsb aad jo lcall sbb (bad) xor xor pop ds push decl mov mov jg lds jg ror or jecxz mov lds (bad) (bad) (bad) (bad) call cmp inc ljmp add jmp or int3 xchg (bad) rcrb (bad) (bad) (bad) ljmp dec xchg mov out fildl jno fdivl sub and repz insl js inc jae (bad) incl and push aam lds fcompp fnstcw sbb int (bad) incl in loope inc ficom mov sbb add inc (bad) (bad) (bad) (bad) mov ret inc sti pop arpl das movsl popa int3 dec shrl arpl (bad) push call xlat sub arpl push fcompl les lds (bad) (bad) (bad) mov push mov or dec inc mov je scas (bad) jg (bad) call mov ds xchg inc (bad) call (bad) (bad) decl xor jbe mov pop mov loope outsb cmc jae lcall (bad) (bad) jg repz call inc cltd rcrl into fwait xor sub negb xor aam xchg jle (bad) (bad) jmp int lea sub xor fadds jge cmp fucomi aaa mov bswap push dec (bad) (bad) (bad) jmp mov jb push jg push addr16 aas addr16 lcall pop push mov jbe (bad) (bad) (bad) decl pushf pop and pop cld cmp xchg sbb jecxz or fldt lock mov data16 xchg icebp fbld lret xchg jecxz movsb xor mov (bad) (bad) jmp bound jl sub mov fxam in imul data16 stos mov call or into mov pop scas push jae inc xchg mov adc clc outsl aam jns ret hlt mov jnp cmp mov mov (bad) pushl scas xor rolb push mov cmp jg mov int3 jne es cmp enter xchg loope es mov cmp into sub cmp push pop adc decl cmp hlt nop sti sub mov xchg repnz (bad) (bad) jmp pop enter shlb xor and hlt std mov mov repnz pushl loope cmp inc rcrb out fs imul push dec push fcomps pop imul and (bad) (bad) (bad) call adc stos adc or pop and popf into out outsl and inc ja in jmp (bad) call andl ret rol add mov cli add shrl into jmp cmpsl hlt (bad) (bad) (bad) in sbb scas in (bad) in push pop xchg pop xor incl push mov jnp (bad) lcall outsl ja and adc fidivrl cmpsb mov push hlt sbb in (bad) adc (bad) lcall setno lods aad (bad) gs sub jne inc shl iret add test (bad) mov push pop ja (bad) (bad) call movl sar out repnz dec mov test inc inc jns adc shrb xlat mov xchg mov lcall mov (bad) (bad) call xchg jae sbbl mov add adc xchg lea xorb inc push sbb mov mov jae mov (bad) (bad) jmp out ret adc cltd test dec dec cmp xchg mov loopne push adc and lcall push (bad) pop mov dec fild sahf insl add shrb lret and cmp (bad) lcall iret ficom adc fwait arpl jmp clc inc stos sarl sbb jb (bad) (bad) (bad) ljmp rorl jge or add aam bound xchg sar or sub (bad) (bad) call out sti mov sbb int3 sbb inc jle inc mov cmp mov das inc cmp fldcw (bad) (bad) (bad) (bad) jnp es sbb xor sbb xchg adc add jmp out cld pushl sub inc xor mov (bad) or dec push cmpl call sub or jnp fdivrs pushf push inc push add or xchg lcall pop mov adc inc mov lret mov clc mov or (bad) (bad) (bad) jmp shrb js fimul pop cmp jmp xchg fidivl loop (bad) ljmp sub fucomp push xor data16 and insb mov in (bad) mov or or shll mov insb addr16 (bad) (bad) (bad) incl adc or mov aas lock divps hlt cmc or xchg sahf sqrtps ljmp cmp (bad) sahf push mov push fidivrl or cld pushl jge jbe in in fidivrl outsb cs das cli decl daa cmp and pop andb out dec (bad) (bad) (bad) ljmp mov imul shl adc adc shll adcb cmp (bad) (bad) (bad) fildl jnp pop data16 repnz fldenv outsb ja lcall out cli pop mov and mov cmp fimul jp push hlt enter mov ja (bad) (bad) inc pop cmp or or sbb mov fcompl clc lret (bad) mov cmpsl pusha mov adc sub leave xchg push dec cmc scas dec dec add add sar (bad) pushl aaa cmp sub inc mov sub dec mov dec aas pushf stos (bad) (bad) (bad) pushl jae test xor (bad) ss jmp xor inc mov int out pop cmp ja (bad) (bad) incl adc out movl insl adc mov and push cmp dec pusha mov dec in lock lret sbb arpl add push scas cli decl sub iret (bad) mov dec add data16 jle loop (bad) (bad) decl arpl sar pop sbb inc sub sbb je into (bad) (bad) lcall add insl jmp push push xor dec pusha les xchg scas (bad) (bad) (bad) call aaa inc fwait push lea inc lret lea ds push sub fmul cwtl or mov cmp mov cld mov cmp push cwtl xor sbb mov cmp je (bad) ljmp push pop xor jle testb sub mov imul xchg jmp (bad) jg adc mov dec or iret inc stos pop stos inc xchg pop pop cmpsl imul loope ljmp fcmovne clc cmpl ret addb xchg movsl (bad) mov dec cli les add data16 jle std jbe sub (bad) (bad) ljmp push popf sti push lock sarb (bad) mov jle das arpl das push subl push mov mov repnz mov dec mov je ja not push (bad) (bad) (bad) ljmp pop and test push test xor imul xor data16 into and (bad) (bad) (bad) mov sti mov cmpsb cmp fldcw orl stos jb mov lret (bad) ljmp and (bad) cmp int3 adc mov cmp jne int3 shrl test ljmp pop daa xor scas xchg pop std bound das and pop push call sbb mov (bad) mov mov scas sbb pop lret push (bad) incl inc dec ljmp xchg rolb (bad) (bad) (bad) lcall popa add popf imul adc mov jmp ret dec (bad) (bad) (bad) (bad) fldenv mov pusha push aas mov xchg cmc popf push push or xchg (bad) sbb es xchg pop arpl dec add (bad) out cltd test fstps iret cmp push aas call inc cs mov or stos mov movsl jno xor add push mov cmpsl pop iret cmp fidiv dec imul in (bad) (bad) pushl cmp cmp lcall mov jnp iret sub mov (bad) (bad) (bad) call inc mov adc imul mov test mov leave adc scas (bad) (bad) lcall jo and (bad) out inc jb cmp cmpsb test mov pusha xor (bad) ljmp mov mov jno xchg push inc lea pop fidiv mov leave movsb decb pandn xor dec pop out (bad) cmc call (bad) (bad) (bad) call aam pop mov int3 mov xchg fs and mov pop xchg pop adc incl jae dec xor movb pop pop jne pop sbb arpl (bad) (bad) (bad) (bad) cld adc lret repnz cs rcrl jl or ret mov cmp das jp (bad) (bad) (bad) in cmc xchg xor inc cmp push fsubl movsl pop ror inc or scas fcomps gs jg test repnz fisubr lods daa mov (bad) (bad) decl xor repz dec dec mov push dec mov xchg push cmpl (bad) sbb scas cld sub dec push pop or mov pop in and xchg xor gs les mov test (bad) (bad) jmp addl adc add adc cmp iret xchg lods outsl mov cld push mov out out adc (bad) (bad) jmp mov mov stos sbb jno (bad) pushf or push push loop mov ds call xchg xorl sbb lea dec pop jns (bad) ljmp stos sbb inc test (bad) pop (bad) push (bad) pop pop jmp mov xchg rorl lds mov call sub cmp mov (bad) (bad) (bad) inc mov mov cmp shrl ja in add xor adc xor ljmp (bad) (bad) in adc push sti aad dec ss mov test scas rcl mov (bad) pop (bad) ljmp nop adc psubsb mov pop rcrb stos mov sarb jl and ljmp fldl sbb adc mov inc (bad) scas fldlg2 inc cld scas (bad) (bad) (bad) lcall or scas adc dec lea and push sbb jmp ja out mov (bad) (bad) in sti jmp dec cmp jb xor lods and out adc (bad) (bad) ljmp sbb scas mov lods inc dec dec mov push sub cmp (bad) (bad) (bad) pushl cmp fldcw pusha cli in sti xor mov jnp pusha loope and sar mov (bad) (bad) jnp mov enter xchg inc inc or test dec dec aaa mov push cwtl and stos out cli (bad) inc leave adc add repnz rorb imull imul (bad) (bad) in lret outsl mov int fwait push ljmp out cmp or ret aam inc pop (bad) (bad) incl pop push mov pop out pop inc and lods dec mov pop mov (bad) mov out stos shrb sub mov test mov pushf scas mov (bad) jmp popa mov les mov push lahf pop dec push pop push mov call (bad) ljmp fst mov (bad) shll sub push dec pushf jge les jno (bad) mov lcall pop pop lea (bad) (bad) (bad) jg xor mov mov pop jb xchg ret jns shl cmp rorb loop (bad) (bad) (bad) (bad) jle or sbb inc push insl cmp lahf shr dec test mov fidiv sbb fsubrp insb cmpsb mov sbb jbe cmp lea inc enter jne jp (bad) mov call add jecxz or cmp (bad) (bad) (bad) fcomps stos js in dec dec mov fprem imul loope insb cli (bad) jg movsl mov ds xor jg mov xlat mov mov insl repz (bad) call xchg stos dec or xchg pop into jecxz mov outsl mov jae inc mov ss (bad) ljmp fisubrl (bad) popf mov jns mov test jne or stos xchg inc outsb (bad) (bad) (bad) jmp push pop (bad) fstpt and push dec adc cli call mov jge (bad) (bad) ljmp sub dec pop movsl sub repz call sbb pusha cmp xor mov icebp (bad) (bad) (bad) jmp cli fidivl out mov shr xchg sbb xor mov sub das sar jp (bad) stos push enter in push mov into je (bad) (bad) lcall test mov (bad) jp (bad) idivl mov adc jmp or jmp add inc jg mov jne sahf aad sub (bad) rol (bad) (bad) call scas push and (bad) inc clc loopne out inc ret mov subl call jmp movsb lcall sub xchg inc cld jecxz jns in ljmp clc test mov mov dec mov pop (bad) out jnp addr16 loop das cli in repz sbb jb or movsl scas inc int sbb fild fs adc fsts int3 mov xor mov mov (bad) (bad) call ljmp addl fs mov flds test cmc lcall xchg jp mov out cmp data16 insb pushf cli outsl cli call xor int3 aas inc inc mov fdivrs adc mov mov (bad) (bad) mov push loopw jg addr16 mov loop std rcl das mov test (bad) (bad) (bad) (bad) mov rorl lahf dec ds out test fsubs jb pop rcll pop pop mov stos (bad) lcall sbbl dec testb mov les enter xchg loope clc (bad) (bad) (bad) pushl ja divl data16 and jg rcr mov insb inc jge sbb or idiv (bad) (bad) jle push mov xchg or repnz lods shlb and dec pop xchg pop dec xchg iret cmpsb hlt (bad) (bad) in sbb mov je test (bad) sahf outsb sub out mov or arpl (bad) out test pop jbe adc icebp in inc leave bound in xchg int3 fcomip (bad) ljmp lret mov sub xor cmp mov in and (bad) (bad) (bad) lcall bound sbb mov nop pusha pop cmc push mov insb fcoms movsb jg test leave stos pushf insl in cmp inc mov mov lods outsb (bad) mov push or jg imul jno pop xchg hlt call pop inc dec mov incb test adc ret or (bad) (bad) jg pop ja fdivp and mov sbbb and and test out sti add adc (bad) (bad) pushl adc mov fild inc test icebp imul cmp mov pop push aam pop enter mov fldcw jle push (bad) mov (bad) (bad) stc flds punpckhwd mov daa mov fiaddl notb dec js ror sub lods nop imul (bad) hlt adc sub jecxz repz push popa jo mov jbe xor addl (bad) dec mov (bad) push (bad) (bad) ljmp or scas sbb popa dec mov cmp inc cmp xchg xchg test mov (bad) dec pop outsb and dec pop cmp out sub mov into lret push jne mov adc idiv (bad) decl and sbb xchg sub (bad) ss loopne (bad) inc ljmp test pushf or test shl xor push jb xorl roll (bad) sahf es jb dec pop scas jmp rclb decl jno push pusha loope dec lock loop enter push sbb gs (bad) (bad) incl cmp xlat mov outsl xchg jae jle icebp cmp aas sbb lret (bad) (bad) lcall sbb leave shlb leave sbb pushf adc adc push std dec test pop cld std into arpl (bad) (bad) (bad) (bad) stos loop push xor aad mov in aad pop gs test cmp lock lcall jae les jl rcll xor subb pusha cmc aad add jbe pop mov fisttp cmp or mov in inc pop (bad) pushl mov mov or push test mov popa inc loopne fcomip (bad) mov loopne xchg mov cltd mov mov pop mov dec jns (bad) (bad) (bad) mov pop lret imul pop outsl mov int3 dec clc sbb add (bad) (bad) jg dec cli mov (bad) jl add sbb les std jecxz std jge push in inc (bad) (bad) (bad) incl dec ficompl xor mov push mov mov cmovl jecxz sbb (bad) inc add outsb lock nop cltd repnz mov inc (bad) xchg xor dec adc inc (bad) (bad) pushl sub scas inc jbe xchg dec cmp scas je jmp ljmp (bad) (bad) (bad) pushl mov nop inc int3 pusha mov sbb in push repnz mov xchg cmpsb clc test (bad) (bad) (bad) (bad) jns (bad) mov es test (bad) leave jge or popf or adc pop std mov mov cmc sbb in mov pop dec out inc adc bound push pusha (bad) (bad) (bad) (bad) mov movb jae push hlt mov in cmp ret sti arpl (bad) jg decl push and call loope loop andb cmpl into (bad) mov dec xor mov fistl addr16 sar rorb mov push repnz push mov jmp jne add mov push push push call movsl pop cmpsl fisubrl test (bad) (bad) stc rcrl adc xor inc sub stos sbb call std lcall movsb fstl cld (bad) leave aad je lret mov (bad) inc xchg aaa rep incb jle insl and (bad) in ljmp cmovnp pop cltd (bad) dec call icebp out stc xchg out shrb into pusha xor mov and jecxz pop dec jbe cmp push scas sub cltd ss cmp xchg sub jmp xor (bad) (bad) decl pusha push mov cmc imul aam xor outsl xchg (bad) sti xor mov mov mov pop out dec (bad) cli push out icebp rcrb stos mov and add popa cwtl pop movsb je,pn add movsb mov xchg and dec mov popa lret fistl mov sbb lods jae push in sub xor lods pop mov jno xor xor mov (bad) jns hlt stos fildll pop test mov cmp loopne pop mov lods push mov mov jg mov pop (bad) dec mov int imul jmp rorl push ret popf dec mov fnstenv mov outsl mov in push (bad) (bad) (bad) pushl mov inc pop pushf (bad) in or push fcoml lds (bad) (bad) (bad) call push les lea popa (bad) jg xor psubd dec dec sahf faddp dec xor (bad) (bad) pushl mov enter test orl and push pop mov jns add pop jmp (bad) les or imul daa sub decl mov jbe xor jnp push xor push xor movb std and clc adc (bad) (bad) adc adc and pusha lret mov cld or in adc lcall mov (bad) push and sar fidivl repnz insl mov retw xchg gs (bad) (bad) ljmp ror loopne cmp cli or mov lret lret repnz xchg or sahf fcomip (bad) call fistl cs roll cs mov (bad) (bad) (bad) jns cmp push sar clc sub xlat pop das dec cmp les std (bad) (bad) lcall pop aad pop imul je sub jnp dec pop movsb ljmp cmp es dec test push (bad) int3 (bad) jl test sub inc sbb jmp fisttpll pop sbb cmpsb push (bad) push mov push or out ret xchg add sub int3 aad mov and xchg ja repnz ss inc insl mov pop data16 mov stc lods enter jmp aas xchg pushf mov mov mov ret or ds (bad) jmp sub pop scas sbb sub sbb (bad) xor stos jle ljmp (bad) test mov lret pop popf dec pop cmpsb orl mov pop fisub jecxz jne xor loopne push aad xchg pop push or (bad) jmp ds cs fbld std mov adc sbb mov fcomps insb dec bound lcall ljmp (bad) (bad) dec call add inc (bad) (bad) (bad) jmp xor mov iret insl lock mov out push lret (bad) (bad) (bad) lcall aaa xchg push fdivrp and repz lock stc sbb scas dec xchg lcall (bad) (bad) incl cmp push movsb loop push mov (bad) jns shll (bad) loop je in jns (bad) lcall and lods dec test rcrb xchg mov jnp jle push lret lret mov cwtl mov add (bad) mov mov xchg out or test (bad) (bad) jmp cmp dec sbb add out sbb or mov (bad) cmp imul cs mov cmpsb push pop lock and test or inc stc loope mov adc jmp addr16 cwtl sahf and sbb pop xchg fcomps enter sbb ret mov sub lcall aaa idivl xor imul enter pushl sbb mov ret fisttpl popa aam dec imul iret inc mov jp cmp outsl inc mov (bad) (bad) (bad) decl imul cwtl jo xchg lods lea mov jge mov xchg mov (bad) (bad) push out sbb addr16 adc push leave je imul jne ljmp fs mov pop fs xchg fucomip mov cmp mov (bad) (bad) decl or inc cmp adc jb loopne popa add xchg test xor pop cmp ficomp pop test int outsb xlat negl orl jmp out mov xchg cmp cwtl xchg add mov mov (bad) (bad) lcall add js jmp cmpsb repnz xor fwait pop push xchg inc (bad) (bad) (bad) decl fidivl cmp or dec in stos mov inc cltd out add sub (bad) fildll cwtl divl mov pop mov mov ficom sbb fldenv sbb pop int3 into (bad) movsb cli pop ljmp test cmpsl insl jne dec leave rorl pop lret fisttpl xchg or dec cld (bad) (bad) incl andl jbe xchg jbe dec fistl imul pop dec loope notb ljmp or (bad) jmp push out (bad) xchg adc fs scas sub (bad) mov ret inc (bad) jae (bad) ljmp cs dec hlt or inc popa jb addr16 mov std dec xchg xor and dec imulb pusha dec mov test xor (bad) (bad) (bad) fild adc rcl leave hlt cli mov mov out mov mov cmp aad dec rorl (bad) repz fsubr xchg data16 (bad) lcall hlt in adc cs pop test sub lret cld (bad) cli fwait insl imul bound pop add decl xchg call sar movsb xchg mov loopne push xchg (bad) (bad) call adc shlb jmp imul (bad) (bad) lcall jae bound mov int and sub pop fcompl js leave mov setle out mov dec pop and lods and push dec ret lea lcall roll mov lret scas pop outsl add jmp pushl mov jbe cmp ljmp (bad) (bad) incl int3 push xor enter out push sbb inc jns test xlat or insb popa in mov (bad) fiadd mov jg sahf int enter cmp jle cmp (bad) (bad) (bad) ljmp insb dec in add xchg sub inc and inc ret or aam idivb (bad) (bad) (bad) in (bad) dec push scas dec aad scas and fsubs mov mov gs (bad) (bad) (bad) call inc inc repz push pushf mov (bad) mov cmpb aas xchg daa dec cmc daa mov jg cmp jp adc jb mov dec or lret (bad) call cmp iret dec rorl js or movsl aas xor sub test mov popa xor dec push (bad) (bad) (bad) inc sub fisubl cmp mov sbb cmc push dec lods sub fist xchg push (bad) (bad) (bad) pushl jg add repz fwait dec insb int sbb nop jl mov divl or (bad) (bad) incl clc sub xor imul rclb jno xchg push stc jne outsl inc (bad) (bad) (bad) cmp sbb popf (bad) xchg mov inc scas sbb test insw sbb enter lock jmp sbb daa or fwait jecxz jg pusha adc push je dec mov (bad) jmp xchg lcall push xor mov fnstenv jae rcll lahf cmp inc (bad) (bad) push xor scas lahf scas out (bad) mov mov iret jp mov mov mov push adc sub sahf mov cld insb mov add and movsb cmpsb (bad) jmp push aam sbb insb and mov (bad) (bad) inc sti mov push hlt ss xor insb or cmp jae mov jg out (bad) scas (bad) cmp pop int3 lcall in ret jl mov sub push dec sbb lret inc (bad) iret cld cmp add jbe mov les lcall pop and sub adc into cmpsb push imul add imulb jge (bad) (bad) lcall push psadbw sbb ds jmp dec fld jb addr16 and incb in ret mov loop (bad) decl mov adc pop jbe xor popa lods or (bad) icebp (bad) (bad) fildll rcrl inc push mov loope jns into sbb sub std jl,pn xor cmp daa pop fwait sbb jo fcomip and hlt (bad) (bad) (bad) jg dec and add mov leave enter pop stos insl push (bad) ja or inc js add add jmp loop mov xchg xorl xchg test sbb dec pushf fistl shlb jg fbld xchg orl xchg sbb test jbe lcall sarb jecxz (bad) sbb pop jmp pushf inc or sarl jle lds (bad) adc pop enter ljmp adcb (bad) (bad) (bad) decl jno push scas mov cmp push add mov add inc adc and (bad) decl cmp aas push dec ja and popf mov rorl dec std dec jnp (bad) (bad) (bad) (bad) cmp xor std mov sub fildl dec inc and and fmul test dec mov (bad) (bad) jmp xchg sub repz adc adc rorb inc xorl pop cmp loop push xchg loope inc pop lahf adc mov xor movl xchg divb jge cmpsl jp xlat stc xorl sub jo sub aam or sar (bad) jg enter dec cmp scas in push (bad) stos pop aaa sahf insb cmc (bad) (bad) (bad) lcall repz pop and cmp ss in lea int3 lock xor (bad) (bad) (bad) decl arpl (bad) cmc and aam jle xchg jae aad icebp gs pop cmp insb cmp (bad) mov or inc aam stc (bad) aad mov jg xchg cld ljmp movsb jge in icebp mov cwtl cmp (bad) (bad) jmp imul push lea outsl xlat mov pushf imul mov incl ret icebp sub adc lahf lock fwait pop int push mov xlat and (bad) ret dec sub adc (bad) cwtl jns (bad) repnz ja enter (bad) pop cld incl pop clc rcrl mov xchg xor mov mov (bad) (bad) lcall cmpsb cld rcl rcrl inc push and cmp scas adc (bad) (bad) lcall mov cmpsl (bad) dec lock adc mov or js,pt fidivl push bnd jno (bad) (bad) lcall fcom dec jmp outsb nop jns jae imul mov mov icebp mov push (bad) push call push cmp push push cmp add cld arpl pop loop scas ja imul subb scas shll push xchg leave push fildll (bad) in push mov push sbb call stos fldt pop nop cltd cmp aas xlat xlat and and cmp (bad) mov sub pop int andl fdivs pushf jl adc xchg (bad) (bad) (bad) call pop push lds mov inc mov scas jecxz clts int and jbe (bad) (bad) (bad) lcall jge cmp mov pop in cmp jne mov dec loop mov ds pushl xchg xchg call loopne jb and sbb dec clc adc gs inc sti fwait (bad) (bad) (bad) (bad) fcomps mov out movsb in ljmp and pop sbb mov leave daa pop (bad) repz (bad) (bad) (bad) incl or dec jmp push mov inc xchg enter lahf push cmp (bad) (bad) push push pop push xchg test in add fs je sub aam popl inc orl decl shlb jns (bad) push push int3 (bad) scas (bad) into and sbb and out insb dec mov adc sbb sbb jbe push pop out insl pop test or popf insl (bad) (bad) (bad) (bad) std icebp sahf dec pop mov jmp xchg adc clc fimull insl dec jbe pop xchg mov sub (bad) decl sbb movsb xchg dec xor mov mov and jp lods mov ret xchg inc cmp pushf cmc (bad) (bad) (bad) pushl inc sbb fstpt cld icebp stos daa mov loope mov sub xchg loope (bad) (bad) ljmp loopne sbb push outsb faddl jns (bad) mov adc fidiv inc je mov incl cmp clc in inc add int3 sub jmp dec (bad) outsb cli lea pop outsl jl adc (bad) (bad) jmp andw push jp sub inc call pop and ds (bad) (bad) incl (bad) pop sub jmp adc jmp cmpl xchg stos mov xor (bad) inc (bad) daa dec fwait in and sbb cmp mov fwait xchg call shrb or cmovp in stos mov jg (bad) mov ljmp movsb mov pop lock add mov (bad) (bad) jg lock (bad) and pop (bad) ja jnp popf cmovbe xor stc xchg lock pop push mov (bad) call mov andb insl sub shrb jl cli sbb (bad) (bad) (bad) decl push ret jno ficomp xchg sbb ret notl insb fwait arpl cmc imul (bad) call mov adc mov add out lret mov test push xchg rcrb daa call cld (bad) jns ljmp (bad) loopne test lea loopne push sbb (bad) (bad) (bad) ljmp lods mov push mov ja (bad) mov sub ljmp mov andb or inc dec jbe ret aaa or push fstpl add fsts pop pusha inc fidivr aas repnz jg jo xchg inc cli mulb sbb je ljmp sub aad cmp jge xchg loopne out xor (bad) (bad) ljmp pop cwtl xlat cmp adc and (bad) mov imul pop cwtl adc fsubrl icebp iret xchg enter stos xor adc or push gs testb out out sub sub fidivrl cmp cmp (bad) (bad) jmp dec cmp test lods ficomp out addr16 sbb mov (bad) (bad) (bad) incl je adc imul mov in push jle sub inc push rolb jno xchg int3 sbb or jge pop push repz and test xor (bad) (bad) incl in xchg dec cmpsb ss icebp ds inc sub cmp int jns jge dec cs (bad) insl in jb loop incl mov lods pop shr push pop adc dec ljmp test movsl ja mov xorb and add mov les mov hlt jecxz inc sub jecxz call loope stos stos loope add lret pop xchg xor xor pop cld push xchg (bad) (bad) incl std jae push scas sbb cmpsb sbb jmp dec xchg adc stos (bad) jmp iret mov pop sbb sbb cmc xor adc or roll sahf in inc fdiv fcomp push mov jnp pop push lock (bad) (bad) call mov cmp mov jb push in lret repz (bad) sti dec (bad) (bad) (bad) jg (bad) mov cltd jnp mov (bad) push rclb inc sahf pusha adc test (bad) (bad) out addr16 mov sub lret push insb mov xchg fistpl cmp inc ss pop rclb aam cwtl sar (bad) (bad) mov or dec pop imul dec rcll das cmp fbld (bad) es mov mov into jns cli imul cmp (bad) (bad) (bad) push push xor mov and cld xchg dec mov cs loop xor push adc push add call data16 jno lock pop icebp cld jg mov lcall xchg lds or icebp inc mov mov ss je dec sub (bad) (bad) (bad) (bad) clc out roll push mov inc (bad) mov fbstp sub into mov (bad) incl rorb repz stc mov lods push sub fnstsw or jmp (bad) ljmp jns lock adc in repnz popa push pop mov test incl xchg jnp and mov iret insb add rclb in mov (bad) (bad) jg mov jno js add es clc xor mov mov xor mov notl cmpsl add add cld fwait mov pop popf xchg (bad) fnstsw jl pop insb outsb cmc lods cmp cmp lods (bad) hlt pop xchg fidivrl push std add addr16 pop (bad) fwait jecxz sbb call out lret inc push jnp in xchg fildll cwtl xor dec sahf or fnsave shll push sbbb (bad) (bad) (bad) ljmp loope inc nop cmp and dec mov adc in fchs mov aaa ret imul jne sar push pop sarl adc test push enter shrb (bad) repz xchg adc (bad) lcall jno inc push sub push es add fild or jl pop mov (bad) dec ret stos cmpsb shrb je insb and inc lret cwtl and fmull (bad) (bad) fadd jbe es mov loopne imul leave minps and add imul (bad) call rolb lds into es (bad) (bad) jg jecxz subl jg mov push or aam mov incl fnstcw ss jo and aas xor (bad) aas add inc in vfmsub132ss (bad) mov mov lcall pop (bad) push stc (bad) int loop fs xchg hlt mov xchg rorl (bad) decl cmc loope (bad) sbb push xchg mov data16 sub push xor (bad) (bad) (bad) fcmove movsl and push xor sbb test iret and pop loopne rolb push lds (bad) (bad) decl cmp xchg shll outsl jle xor mov cmp (bad) std pushl std outsl cmp sbb inc pop xchg or inc mov mov jg (bad) pushl mov sub adc fisttpl hlt push inc inc (bad) sub jmp or sub (bad) (bad) call hlt lock cld xor inc aam or sar into clc dec (bad) leave ljmp (bad) jmp arpl jns push test mov std xchg test imul (bad) (bad) decl pop mov movsl mov ds pop add jne mov (bad) (bad) cli push jno pop lods test xchg mov test add int inc lds (bad) (bad) (bad) (bad) fcmovne sub mov enter out mov jg xor adc xchg ret insl stos mov cmp mov sbb insl pop xchg xor rcl mov dec shrb inc (bad) (bad) (bad) inc or fisubl adc (bad) pop mov sub psubw fidivr jle movsb loope (bad) pushl clc into imul (bad) scas xor mov dec jb insl sbb mov pop add and mov dec dec insl cltd jno mov mov (bad) (bad) pushl or xor jne push push sub aaa xlat lret andl and lock (bad) call push rcr mov jne xor jnp aam scas fdivrs ja cmp mov popw (bad) fbstp test stos push jmp arpl cmp (bad) (bad) (bad) mov push add jge imul adc inc ret aaa mov (bad) fcomip fwait cmp lahf or dec outsb leave and and jp or jg fsts fwait lahf shrl iret xlat cmpsb cmp push inc fild popa pusha xchg or adc nop add int3 jne cmpsb xor aaa xor or mov mov cmp ds fmulp decl sbb and loopne push fwait or fisttp mov (bad) (bad) pushl pushf pop cmp mov ss cmp pop fnstcw mov andl (bad) call es outsl imul movsl mov test sub call rcr sti (bad) (bad) decl push push jo imul mov cmpsl dec sti sbb jo (bad) (bad) (bad) jg add xor xchg add add adc idiv xchg cmp push and sbb cs sbb (bad) push std decl dec aaa int3 cmp inc mov mov add fldcw (bad) (bad) ljmp test mov mov jmp jge mov jbe jge popa (bad) (bad) (bad) lcall lock pop repnz push cmp loopne or xor mov and (bad) (bad) (bad) cld push rcr pop push mov and repz (bad) enter nop ja sbb in (bad) (bad) (bad) ljmp mov fistpl dec inc adc mov adc dec lret movsl add jp insl xor or int3 gs (bad) dec sub rolb rclb loope (bad) (bad) (bad) (bad) push jp mov mov test push mov stos or mov cli aaa xchg and inc sbb sub leave aam (bad) (bad) jg (bad) mov cmp int3 aaa sbb xor inc push icebp inc jmp xor gs aad mov (bad) decl imul add add sbb dec jb mov shrb inc cli call adcl fsubs add std (bad) inc loopne (bad) (bad) (bad) jmp pop cs popf sti xchg and inc and int mov repz ss stos loop cmc mov (bad) jmp pop xchg push mov jnp fisub jp pop fimul aaa mov push les pop gs imul (bad) (bad) ljmp in in sahf adc movsl es movsl (bad) int lret dec aad (bad) call (bad) (bad) lcall and push scas dec inc loop or jge icebp ljmp sarl inc mov mov and loope xchg pop adc dec test aaa jmp (bad) out cltd insl (bad) (bad) (bad) ljmp push xchg das or jmp sbb cmp pop cmpsb ds mov and loopne (bad) jp setl xorl and and adc (bad) lcall dec lods mov sbb sub cmp lahf and out lods mov call icebp jno or add outsl dec mov imul pusha test inc (bad) (bad) (bad) (bad) stc sub xchg jnp inc mov mov insl push add mov movsl mov or xor xor mov ljmp les push fldt test stos pop andl outsb dec mov sub (bad) (bad) mov (bad) decb jno mov sub fsubp outsl fs (bad) rorb loopne ljmp add xchg sbb dec cmp lods cmp (bad) (bad) (bad) decl push cmpb pop pop ror je mov mov ficomp or fwait dec les clc pop (bad) (bad) jns pop out pop push add incl push pusha jge imul (bad) (bad) (bad) fsubrp test inc push sub adc stos call loope xchg pop sub (bad) (bad) (bad) (bad) mov mov (bad) enter push inc dec sahf cmp mov sbb sub (bad) jmp adc cmp jle imul es (bad) mov jle dec rcr or mov ja lcall insb (bad) mov mov pop jns sub mov adc nop fs (bad) (bad) (bad) pushl cs and mov push sti adc adc fs and ss (bad) sub add (bad) (bad) ljmp (bad) stos in xchg out mov add sub daa cmpsl xchg jl xchg loope pop (bad) pushl pop idiv mov loop jno into mov mov jnp xor cmp in loopne clc addr16 adc pop jo call sbb (bad) (bad) (bad) mov mov and pusha mov sub mov inc pushf push lds add sub pushl sub adc rclb stos clc popa xorl adc xchg mov ja jns push pop sub mov jbe es push mov adc and outsl clc mov xor insl clc xchg (bad) cmp loopne loope jne ljmp (bad) in mov ret pop mov xor fstpt push lcall dec rclb test lahf dec ja cld mov (bad) (bad) pushl leave fisttpl pushf js ret jne cmc pop add aad mov fcomip pop pusha pop xchg int3 mov jno push inc push jmp sbb insb (bad) (bad) (bad) call lret stos in sbb enter push lock ret or xor test (bad) decl rclb gs outsl adc fucompp mov ljmp (bad) mov stos cwtl repnz xor cld xchg je stc (bad) (bad) (bad) incl adc les jo in popf push add lcall (bad) (bad) ds cmc cmp (bad) dec xor pop addr16 cld mov sbb push add sub xchg jnp (bad) (bad) lcall jp outsl inc or mov ljmp xchg stos jmp cmp (bad) fcmovnbe pop insb stos rclb add xchg mov fldcw je add mov fnstcw xor mov subb orl decl sub adc inc (bad) (bad) std or icebp (bad) sub repz sbb xchg arpl dec inc in in cmc (bad) decl cmp call pop inc add fbld gs (bad) (bad) fisttp sub jo movsb scas (bad) cmp (bad) loop,pt lcall mov (bad) mov cmp ja dec sub (bad) pop sbb adc lcall test sub (bad) xchg enter push jae (bad) fdivl pop call add test mov bound mov sarl or mov fdivr (bad) (bad) jmp cmp les pop push fmull lock and and mov cmp (bad) (bad) inc (bad) mov add dec loope xchg inc lods push dec adc sub add mov lret orl mov in add cld popl lock lret (bad) mov (bad) lcall es daa and decb dec push (bad) (bad) repnz (bad) shrb lcall fisubr (bad) outsb das popl mov pushf (bad) (bad) (bad) (bad) jp fbstp adc xchg jecxz jb lcall add cmpsb dec adc scas in or (bad) out xor jl ss imul fwait add (bad) out adc cmc mov mov pop aas (bad) sbb loop (bad) (bad) (bad) cmp sub arpl mov hlt xchg and ret sub xor mov (bad) (bad) incl daa mov popl lret dec mov jo stos or movsb cmp stos js push ljmp loopne (bad) (bad) jmp out scas in (bad) fisttp dec cmp cmp or xchg push ss cmp and (bad) (bad) ljmp xlat into cmc fnstcw and (bad) das js mulb jle outsb es or scas mov xor mov shlb pusha sarb in sub sub push sbb inc push pop adc ja (bad) popa mov cmp cmpsb (bad) jbe inc cli mov mov test dec dec xchg push or adc daa push and icebp ds arpl or (bad) je daa mov (bad) (bad) (bad) lcall pop add das test inc pop pusha imul jg xor (bad) dec mov js adc lcall sub addr16 lcall sti int3 xor pop test add (bad) (bad) (bad) cmp iret xchg sahf test pop nopl fldl fs loopne pop lods mov xor jg scas clc cld or scas dec outsl add xchg ds (bad) (bad) push cmp fistpl mov icebp addl mov or pop jge cld std cmp bound (bad) pushl inc pop out or sahf rol ds stos insb cld jmp jb dec popa inc cmp movsb or sub outsl or fadds iret movl ja jmp fdivp mov jmp mov pop out fisubr pop fmulp cs ret repnz add cld pushl mov pop cltd mov jp adc pop fdivrl (bad) jg jp aaa lret mov inc (bad) pop test adc sar decl mov shrl xchg jno jecxz cmp inc add sbb adc fcomip jg iret xor mov aam mov push xor push ror popf mov sub pop xor xchg mov gs mov inc xchg or cld dec cmc mov (bad) inc cmp or icebp cmp and test inc add or fdivr inc mov decl (bad) sbb and out pop adc js cs xchg push push adc ljmp out fadds icebp sbb dec mov or sbb xchg pop inc cmc inc push xchg mov jg (bad) jg das mov int3 mov cmpl scas (bad) sbbl into (bad) test (bad) (bad) decl icebp out ljmp iret jl xchg movsb movsl sub mov xor not mov jmp enter sarl clc rorl inc fdivs jmp lds sti data16 push mov (bad) (bad) (bad) (bad) jmp (bad) adc adc repnz insb sarb xchg repnz pop sub add mov (bad) (bad) decl pop inc imull test add jb pop je and les arpl (bad) (bad) incl mov cmp dec mov test fstl sbb popa rdtsc nop push adcb inc ss pusha sub cmpsl pop or (bad) ljmp ljmp xlat dec cmpsb je test fsubrs (bad) adc (bad) decl dec and enter and or clc jle xor (bad) incl lret sti imul (bad) dec and int lret adc (bad) (bad) cmp stos jmp clc ret pop (bad) dec shll std push and dec dec enter ljmp (bad) jnp call in xchg xor mov cli enter mov inc (bad) (bad) (bad) jmp (bad) adc pop scas mov add cmp sahf xchg out (bad) aaa adc outsb dec jecxz fildll movb idivb inc ja,pn out jge sbb jp or sahf mov in stc xor mov xchg mov gs (bad) stos dec imul jmp (bad) int int out mov inc jle sbb sar (bad) (bad) mov xor inc enter fs outsl dec xor sahf sarl mov incl cld jmp xchg sub pop inc push mov jmp sub pushl add sub sbb add inc sbb fdivrl loope xor or clc dec fist jg ds sbb fwait (bad) (bad) incl add pop int es ss pop xor fstl movsb dec pop (bad) (bad) (bad) ljmp mov (bad) sub pop cmp and lret lock bound sti or aaa cld lcall fmulp int3 pusha and push add das mov jg sbb stos pop call in (bad) (bad) pushl mov mov xchg inc xchg sti js dec mov pop push xor add dec jns test clc mov pop cmp and addr16 xlat (bad) lcall testl xchg insl xchg ror adc push adc (bad) inc sub sub adcb mov mov push ljmp push loop push jae out dec jg adc (bad) ljmp jg enter (bad) repnz cmp xor (bad) mov add fcoms or das daa into mov int3 push xchg pusha shr movsb xchg xchg mov push fdivl cmpsb inc cmp or (bad) inc ret daa rcrb ret cmp ret and mov (bad) (bad) ljmp daa (bad) mov sub mov ds adc loope inc xor xchg lret (bad) jmp push lods mov nop xor outsb ds (bad) dec rol je mov aas sub adc rolb in lock repz aas addr16 (bad) (bad) pushl fwait lds ja mov mov adc sbb or loopne lods xchg (bad) (bad) (bad) (bad) pushl std hlt jecxz int3 (bad) and lret leave lods jno icebp cmpsb mov lcall decl outsb lahf pop adc mov xlat sub jae cli (bad) dec (bad) mov aad test fwait aad mov cmpsb and xor pop lock mov lods mov jne fidivr aas or lods xchg jl (bad) (bad) (bad) ljmp movsl cmp adc adc pop adc imul dec in rcll pop js (bad) (bad) (bad) pushl lds enter lahf loopne pushf mov mov adc into or (bad) (bad) mov push xchg cmpsl or jmp mov or jb cmpsl leave (bad) ljmp clc clc push movsb jno mov data16 bound sbbb or ss das jle icebp mov clc rclb pop mov jg outsb push mov movsl xchg xor (bad) (bad) incl pop fwait neg xor cltd and mov pop aad mov adc and xchg mov (bad) (bad) (bad) (bad) jmp test ror xchg pop push in rcrb pop xchg out pop pushf dec movsl pop test inc (bad) (bad) (bad) incl in jns into dec sub xor cmp int3 or xchg jl pop mov (bad) call loopne pop stos jbe mov ficomp xlat mov push test (bad) (bad) (bad) call int idivl mov or pop push fidiv and push xchg cmpsb hlt inc mov (bad) ljmp rolb das sbb sbb inc lret ss sti sarl cmc (bad) (bad) (bad) jmp adc pop aas lods es stos in loope ret fcmovnb ret jge push push (bad) (bad) (bad) call test cli (bad) lock lds nop or out lds or xor and inc idivb xchg pusha mov sti xchg jp (bad) (bad) (bad) incl xchg and push inc roll cmp push inc loopw or lds std das xchg icebp clc xchg test dec imul aaa adc inc sbb cli pop or insb cld jle push imul je std decl mov inc pop subb cmc pop dec into push out (bad) call outsb push sbb sub popa jb out cmp leave xor jno fildll cld (bad) jmp add popa sbb jge sub inc (bad) (bad) (bad) ljmp sti lret add fnstsw push inc dec xor mov test mov in pop (bad) decl lock push sahf sbb pushf cmc lock test repnz ss lahf das in mov out lahf repz fmul fnstenv and add les inc lock cli (bad) out cli (bad) incl test fidivl mov pop xchg cld out adc mov and cmp pop loopne lcall adc stc pusha out xchg ret jmp sti mov shufps (bad) (bad) jg stos ret dec xor bound je lods dec loope lret pushw push test lods scas pop icebp ljmp xor pop xchg cmp insb mov inc (bad) (bad) (bad) inc out in (bad) movsb mov (bad) jb inc lock enter in aad push addr16 enter sbb (bad) (bad) lcall and pusha pop sub lcall seta std aas jnp stos js mov lods (bad) (bad) (bad) call stc das ucomiss lret push xchg jecxz dec lret inc btr aam push add scas icebp pop repz int mov jmp (bad) mov inc faddl hlt stc inc jnp cltd or sbb fcomip dec inc adc jl add js test adc fisttpl jns clc imul in int3 mov fwait out dec jl (bad) (bad) (bad) jmp int3 adc mov cs (bad) mov (bad) hlt sub adc xchg rorl and ret (bad) (bad) incl add iret jno test clc mov stos xlat fnstcw dec lcall (bad) jg push sti pop mov faddl add xchg push jmp pop dec in cwtl movb cld push int icebp dec lcall loope decl inc jns lea add test aas mov lcall incl in xchg rolb pop xor movsb clc cmp loopne push popf aad (bad) call dec and sbb fdivrl inc les xchg inc xchg dec cmp (bad) in (bad) decl fcoml int pop loopne andl push int3 dec aam addr16 (bad) (bad) inc enter push aam sub push clc rcl jl xchg inc push mov (bad) (bad) inc mov dec das scas inc adc push push sub pop (bad) lock iret pop and push into inc inc mov (bad) (bad) decl fstl add pop bound ret mov inc ljmp mov (bad) mov aaa mov or leave lods lret pop push sub cmc dec pop nop pushf or dec pop les fbld ljmp ds ret or (bad) mov sbb cmpl sub ss mov enter test jmp pusha test xor and cmovl (bad) js bnd repz in mov xor xor xor mov jb test sbb inc aam xchg and jae outsb and cmp (bad) (bad) inc jnp push push cmpsb and dec add aaa imul dec addr16 icebp dec nop pop pop mov ja xlat adc sar adc out popa pop mov mov jg mov aas mov lcall adc fstl out mov xchg mov pop rol jbe (bad) mov push mov xor mov sbb mov or (bad) (bad) inc rcrb cmp subb mov jge scas push push (bad) (bad) pushl xchg pusha push stos sbb lods xor out out (bad) (bad) decl lret in mov into lock dec insl out mov jl mov (bad) push xor je cli jecxz scas lods cmp xor push fstl (bad) (bad) ljmp sub xor jmpw or inc mov sti lods icebp mov pop inc (bad) pop (bad) incl xlat div jl ds sahf les jg aad (bad) mov (bad) lcall out fnstcw inc mov pusha mov cld cmpsb rorb pop push stos push inc and (bad) (bad) (bad) (bad) jnp push hlt or das dec mov adc stos lahf pop mov daa cs lahf int add (bad) (bad) (bad) call adc cmp dec rcl xchg stc fnstenv sbb xor fldl mov (bad) jmp mov jle and dec sbb add xor leave pop (bad) jp outsl (bad) ljmp dec das pop dec and jge cld popf inc pushf aam sbb jg sub dec pop cmp xchg or push sbb push stos add sbb lret in (bad) (bad) (bad) dec insb sbb inc mov sbb fwait sbb cmp sub xchg mov pusha (bad) test (bad) mov decb clc adc inc inc hlt xchg sbb dec in test (bad) (bad) (bad) call gs lock mov cwtl cld imul mov lods (bad) andps leave push inc push femms pop or (bad) stc push push cmp jmp xor mov mov add mov (bad) jmp ja cltd lods popf jns les into cld xchg dec xchg subl pop push and call jnp inc std (bad) (bad) pushl xchg push rclb idivl (bad) push hlt aaa dec sub imul (bad) (bad) mov (bad) cmc stc test iret push cmp inc jp inc mov pop lahf cltd jns cmp push (bad) (bad) (bad) incl dec cli sbb fdivrs out inc lods push loopne lcall rcr inc mov (bad) (bad) jmp xor jb jno adc mov fsubl jp xchg loop pusha inc rcrl (bad) (bad) (bad) mov movsl mov add lea mov sub pop jne dec ja je (bad) (bad) (bad) call add sbb lds jns (bad) inc mov cltd mov mov pop sub (bad) (bad) mov lods imul and jns push cmp push mov push lods pop (bad) (bad) (bad) (bad) mov movntps mov fucomi out in pop cmc js and push or ljmp jbe pop dec pop bound or (bad) (bad) jg lahf pop push loope (bad) cmpsb cli ret test mov and (bad) int sub movsb jnp pushl shr mov adc cmpsl (bad) (bad) lcall aas or inc mov sarb sbb or push dec ljmp mov push push xor mov out push insb sub push dec popa add lock in rcrl addr16 jge insl daa xchg (bad) lcall (bad) (bad) push lods pop sarl lds cmp cmpsb mov sub cs addr16 je sbb mov aad dec pushf pop jb repz stos sbb jae pop xorl sbb (bad) push dec push xor mov cmp (bad) shrb repz aam inc ljmp (bad) decl xor aam cmpsl xchg ficom loopne (bad) xchg aas repnz mov movsl mov dec call outsl (bad) (bad) call es mov sbb mov mov push fcmove rolb (bad) (bad) (bad) inc inc jge mov jae and xor cmc xchg mov jno mov sub push ja sbb dec mov loopne cmpsb push mov call inc inc cmpsl jo add repnz rcl (bad) (bad) (bad) (bad) mov xor insb xchg and enter and and les (bad) mov sbb cld inc je xabort pop add nop mov rclb (bad) (bad) (bad) jg rclb pop outsl test sub rol jmp stos test (bad) (bad) incl mov (bad) out (bad) push xchg mov fs sub pop iret int3 (bad) in das movsl cwtl fs pushl adc fildll sti mov sub movsb inc inc adc dec into (bad) mov mov (bad) (bad) in xor jne pop fdivs push sub mov push sti outsl lcall loopne fcmovnbe (bad) jo and mov and jg cmp sub imul and (bad) (bad) (bad) call imul add add xor cmp hlt (bad) (bad) (bad) lcall cmp imul aam jmp outsl pusha fwait leave cli cmpsb and dec (bad) (bad) (bad) (bad) fstl neg jle mov mov and dec xor ljmp push mov lcall mov sub test mov int3 inc pop dec fimul mov aas into addb out mov inc (bad) ljmp push ljmp cmp sbb (bad) incl pop (bad) fs fwait cmp jl aam icebp cmpsl sub fcomps or (bad) (bad) incl out push cmc or scas sahf xchg (bad) neg or fwait xlat enter mov (bad) (bad) (bad) (bad) lcall lock xchg add or mov scas jg xor (bad) rcl xorl (bad) decl aas decb scas xchg cpuid mov ss pop sbb aad aas cmp pop (bad) (bad) (bad) decl out jae xor push mov fcomp cmp pop jge decl data16 out clc (bad) cld fistp sahf mov rclb mov andl repnz mov lcall jmp movsl enter sub mov jae sub jmp push push arpl xor inc stos clc stos adc out int3 arpl decl pusha push sbb aaa lret inc cmpsb aam into lcall mov outsb loope test jns inc sub xor sbb (bad) (bad) (bad) lcall fisubr test xor jns push xchg mov insl (bad) jno loope test (bad) (bad) decl or aam insb dec dec addr16 inc and mov inc imul (bad) ljmp sahf in cmp gs xor ja sbb jp adc inc roll push or mov xchg xchg loope adc jne cld xlat in jg mov mov imul inc pop jg push jg (bad) dec ljmp decb pusha mov ss rcrb loop cld rclb pop lock push mov add sbb or sbb arpl (bad) call mov outsl mov aad int pop aam rcll fcmovnu mov (bad) pushl cld xchg aad gs cmp (bad) sub push mov (bad) ljmp or shrb mov cmp mov aaa sti push inc pop push ljmp sbb (bad) rcrb adc ljmp loopne cmpsl int3 push (bad) (bad) (bad) ljmp cmpsl xchg loope (bad) fdivrs add fabs (bad) enter test sahf (bad) adc sbb (bad) (bad) (bad) lcall jnp test push idiv ljmp cmp mov jge jns int3 pop (bad) (bad) (bad) dec sub incb pushf add cli test pop lds add (bad) (bad) cmp xor pop adc adc nop cmp pop jp clc lock (bad) pushl bound pop aas faddl int lret jmp stos ret out (bad) rcll (bad) inc pushf jae pushf leave push fldcw mov fsubs pop xchg mov dec movsb cltd dec push popf pop imul (bad) loope jns mov jp push mov dec repz inc sbb decl lcall mov adc in cmp jno sbb fcoms popf call std jo adc shlb sub add (bad) imul idiv sbb mov mov and sub dec mov (bad) (bad) decl and jno cmp mov pop adc mov mov (bad) lcall popf loop and cli ljmp jne rorb lods push mov adc push and adc in mov (bad) mov test and mov or inc inc sbb lret in sahf stos lahf in jbe ret popf inc add cs (bad) lcall or fimul push mov insl pop mov push fdivs ljmp incb inc fadds inc xchg sti push xor (bad) leave or (bad) (bad) (bad) mov ds sub pop mov cmc (bad) pop push cltd push add and test (bad) (bad) (bad) lcall outsl lds mov lcall test dec stc mov out das out insl pop inc mov xchg (bad) loope xor fidivr pop adc jmp loope out stos int hlt add jl rol stc insb xchg ja pop jns sbb inc aad pop cli ljmp inc or lcall xor (bad) (bad) mov mov and jl out sbb mov cmpsb aaa xchg xchg movsl cmp (bad) (bad) pushl mov dec jmp inc (bad) mov dec sub cmpsb lret or (bad) fdivrp mov out xor enter je je mov jecxz (bad) (bad) inc jp movb cmp ss add aas push out scas push lea inc cmp lock xlat sbb es add sub fidivrl sahf inc cmp mov out movsl ljmp add jle mov test (bad) (bad) (bad) (bad) lcall inc (bad) cmc or ret dec js mov xchg mov jns mov inc shrb dec fildl adc pop testb (bad) dec pop cmp test and jbe (bad) (bad) ljmp lock push push cltd jl ffreep and stc push leave pop add out cmp (bad) (bad) jmp into outsb popa mov jae cmpsb pop rorb lret (bad) pop inc lret ljmp (bad) (bad) (bad) push jmp fnsave sbb pop sub cmpsb dec jb dec jecxz cmc inc push insb mov sti (bad) (bad) fcomip cs sub nop les sahf mov cmp push pop ds xchg clc xchg (bad) (bad) jg adc iret and dec xor in xor jmp jbe outsb (bad) (bad) (bad) jmp jbe gs mov stc inc jle adc add pop iret pop mov add ret nop jne mov (bad) jg (bad) jns xor scas push dec jp lret daa and add (bad) (bad) mov pop dec mov dec inc movsl call jno ret jmp mov (bad) (bad) push inc lds add mov jmp fstl jg rclb dec jge push (bad) (bad) (bad) incl inc out imul mov aaa xor push pusha jecxz xchg mov (bad) (bad) jmp sub in cld mov and pusha imul cmp xor (bad) (bad) (bad) call push add ds sbb pop sub movsl mov jg test or lcall (bad) incl and jo arpl push jne mov js ja cmp lods xor jmp cmc loopne or fimull fwait dec lcall mov mov cmp addr16 mov mov cli sete cs inc repz decl push scas fistpl add sbb sbb pusha and (bad) add addb mov (bad) (bad) pushl mov cmc repz sbb or std push cmp adc and pushl push cmp jbe sub mov data16 add mov (bad) (bad) (bad) call push mov push cmp xchg pop addr16 sub mov (bad) mov pop mov (bad) jb cmp addr16 (bad) (bad) (bad) decl adc inc cmp std cltd int movsl mov xchg adc add jbe insb mov xchg inc pop lock (bad) pushl outsl xchg mov xchg mov arpl js add sub pop pushf sti cmovnp out lods jl icebp (bad) add adc xor jbe inc (bad) (bad) lcall lods ret mov dec in and cmp mov pushl jl imul outsb lret pop mov push (bad) (bad) (bad) jg pop mov add adc loopne cmc aas sbb mov mov in ds mov sbb lcall into (bad) sahf jg (bad) jg inc ficompl xchg push pop dec adc add xor (bad) call push mov mov cmp xor xor mov (bad) pushl and sbb addr16 scas lea hlt popf push (bad) mov dec mov out xor (bad) mov or out jmp or loop and add fwait inc jl adc inc jb or pushl (bad) (bad) pushl jl es (bad) arpl es adc mov (bad) (bad) jg jne jmp cmc fs cltd adc dec addr16 pop cmp dec adc idivl cmp aas add pop les xchg pop inc (bad) jo cmp (bad) jg test push mov pop leave adc lods arpl mov (bad) (bad) incl xor and fbld ret repz gs push fmull mov decl fdivrl push cs (bad) popa xor mov mov fcomip ja sarb push enter or (bad) (bad) (bad) (bad) cmp iret subl nop scas sub mov pop and sub in aam sub cmp (bad) (bad) jmp (bad) je nop stos lea imul repnz jb cmp or lea (bad) (bad) mov ret cwtl stos addb lods xchg jp imul repnz adc scas outsl cli (bad) call cld orl rcll subl (bad) (bad) (bad) pushl imul (bad) cmpsb push stos adc outsb push lcall les icebp shrl fwait (bad) (bad) mov jnp sbb mov pusha mov fucomp ret mov pushl sub fidivr and subl ja insb (bad) (bad) (bad) lcall cmp push push xchg cmp jnp sub jb dec push xor add data16 mov xor adc (bad) (bad) ljmp xor pushf lahf (bad) mov push imul cmp mov (bad) out ss mov lret or jb lock out mov dec (bad) sub iret xchg ds fmulp lock aaa call inc cmp xchg fidiv int3 mov imul inc pop jle jb pop push jp lret fistp cmovo (bad) (bad) jmp in mov sub stc (bad) hlt sar sarb in out iret xchg outsl adc mov lcall jecxz lret or jp js add (bad) jne scas clc (bad) lcall ss loopne dec aad pushf sbb and loopne rorl shrb js das mov imul mov xchg mov test es call push and lods push pop fdivrp mov jecxz stc inc jbe loop mov fcoml (bad) cmp scas icebp jle sbb xchg cmp jae dec mov fcomip fistl cmp dec (bad) inc xchg dec call sahf les (bad) (bad) fldt cld ret lcall iret ret (bad) repz out dec add adc jl (bad) (bad) (bad) call inc lods jecxz xchg insl imul mov push add cwtl adc inc fdivrs (bad) incl out xchg enter mov xchg sbb cltd gs (bad) pushl in lret mov jge pop ret cwtl cmp mov (bad) (bad) mov dec aam movsl adc jecxz fcompl cmp (bad) cli hlt dec mov ret inc adcb push or insl dec add fidivr push out xor cli (bad) pop rcrb popa aaa add cs inc xchg ss jl xor rolb push clc adc jb stos mov sub and test (bad) xor cmpsb fcomip sub insl mov fldt push insb adc int3 aas mov stos mov (bad) mov or push nop outsb add divl adc push pop pushf out mov and (bad) ljmp clc mov xchg andb js loop hlt fldenv or mov mov (bad) repnz (bad) (bad) (bad) ljmp loope fwait cmp sbb cmp inc std ds push lahf jmp xchg pushl sub mov sub and or (bad) xchg xchg scas mov (bad) (bad) jmp mov push mov xor mov mov ret (bad) ljmp je xor shll icebp xor (bad) neg add into mul push test (bad) (bad) (bad) jg es popf pop rclb mov mov (bad) in repz jp lds (bad) ljmp decb lock imul sub andb test jle mov arpl insl or adc mov addr16 mov push mov (bad) (bad) jmp mov mov (bad) das sub mov or mov cs fisubrl enter notb cmovne pop cmc (bad) decl aas movsb jmp jnp iret pop push sbb dec cmp cli pushl std add les sbb lods jne jmp in dec addl out or mov call ret inc lods jb call out sbb stos and mov (bad) (bad) mov outsl test push xor adcl movsb in cwtl iret xchg inc or lods loopne push cli (bad) (bad) pushl jbe adc insl add mov pop mov mov mov test (bad) pushl fnstenv xlat ss stos add xor mov fildll (bad) (bad) (bad) decl rolb gs mov mov in lock test pop stos outsl xor jmp sub ficoml (bad) push and aaa arpl adc (bad) (bad) (bad) decb popf add inc test pushf and cwtl pop pop dec pop arpl gs (bad) (bad) (bad) (bad) inc push cmp cmc pusha xlat std je rol lds mov jae add jnp nop inc (bad) incl pop xor xor enter test incl jl (bad) in xor rclb jo or cmp mov mov push (bad) lcall dec lret push jb jb xchg or push ficoml (bad) (bad) (bad) call je (bad) ss inc inc sub xchg sub mov scas (bad) ljmp lcall aad mov ret stos ficom dec mov adcb inc movsl cld push std sar jecxz decl pushf (bad) lds mov repnz mov and cmpsb mov pop fmul and xor inc loopne push into ret push (bad) ljmp cmp sub (bad) pop and das imul (bad) (bad) ljmp add jp jg cmp lea cmp inc pop ret loop xor push test pop ljmp clc lcall iret lods push adc cltd pop insb movsb pop cli pop mov jbe icebp and sbb loop xlat (bad) shrl popf inc mov mov fs mov cmp mov hlt scas mov jns dec mov es icebp (bad) jne (bad) jg lcall orl add movsb dec push idivb ds xlat notl (bad) (bad) ljmp mov xchg jmp push or fmuls aad inc sbb jmp cmp (bad) (bad) jmp dec das and fisubl mov dec sub ja mov lcall movsb insl hlt mov rcll or daa push in (bad) fmul aaa test or (bad) (bad) decl daa xchg push jle jmp cmpb out fnstenv push rcrb push ret push add ljmp pop outsb add inc test icebp dec aad mov sbb lods js sbb ljmp mov movsb inc xchg ds (bad) mov sbb leave or pop (bad) (bad) (bad) ljmp mov ficompl (bad) cltd lcall out push sbb pop nop bound shll lock (bad) fidivr lahf jp cwtl pusha data16 xor mov dec adc (bad) (bad) (bad) (bad) mov mov xchg xchg insb jae sub idivb xchg inc orb push ja loop hlt jae push push sub (bad) decl jnp out mov add cld dec rorb mov fsubl (bad) (bad) loopne adc (bad) (bad) lcall push cmpsl adc push mov push or int push js jle add (bad) push (bad) (bad) (bad) call jns (bad) sbb push ja pop ret pop mov aam cmp adc (bad) (bad) (bad) lods cmpsb icebp repz notb push test ret mov sbb mov push lret cmpsl adc rorb loope movsb adc (bad) in jns inc fsts popa jle cltd scas shll into add es jmp fimull sub xor leave jnp enter mov mov (bad) jne in scas adc pop loop pop mov (bad) (bad) call (bad) std pop pushf out hlt push icebp in jl pop or mov test shrb (bad) ljmp push fdecstp mov pop pop mov roll cwtl shl call adc jmp or mov inc (bad) cmpsb sbbl (bad) jmp aaa repz popa mov aad and mov cs (bad) (bad) jg addl call or or xchg outsl and (bad) (bad) jg rorb (bad) call dec (bad) push cltd out dec xor scas lds sbb or xchg call jge je (bad) movsb xlat jno pusha mov movsl fwait jno sbb decl pop sbb xchg (bad) jecxz pushf mov fstl cmp pop xchg lahf push std mov lock loope jg call inc dec out sbb inc xchg push rcrb mov mov push push (bad) cmp inc aaa xchg cmc std cmc mov pop repz outsb and mov or sbb testb cmpsb dec leave jb mull std js outsb or hlt cmp (bad) pop idiv (bad) jmp js mov int repz push mov loop or xchg add sub mov (bad) clc call pop pop and repz (bad) (bad) lcall je jb mov lret push hlt in shrl addr16 mov arpl ljmp cld push in in pop in sbb xor xchg cmpsb and (bad) sbb cmp lahf int3 in mov dec mov push add orb dec jmp movsl lods xor test (bad) incl repz loopne dec pop mov test fdivrs add sbb je and push xchg sub mov xor xchg sub push jbe les and outsb sbb xchg (bad) out inc sub nop sub fildll mov out and xor and mov add mov out push jne clc fcomps or (bad) fild gs (bad) (bad) (bad) lcall inc jne daa mov daa iret xor daa xor clc sbb push leave mov mov arpl lret or xor fs stos jb int3 imul jae (bad) (bad) (bad) cli dec mov adc arpl or out jnp rcll pop jmp cmpsb xchg fldl (bad) (bad) (bad) in jns sub lods in cs mov int3 jb cmpsb int3 popf or (bad) (bad) (bad) pushl sbbb pop mov mov xchg xchg ret cmp or and mov adc pop mov sub lcall sbb jns xchg sub inc mov mov (bad) lcall rcrb sbb incl or ds sbb insl sub mov (bad) (bad) (bad) ljmp xchg and cli and gs in ret cmp xorl push push lret cwtl mulb data16 xor push push jbe (bad) (bad) jmp cltd inc sub scas xchg inc in ljmp inc dec ja mov xchg and incl aad sbb repz push jnp mov sub mov mov cmp or dec xor jae fwait jmp divb xor shrl sar (bad) decl stos cmp sahf bound aad test pushf mov mov mov xor or mov dec xchg (bad) ljmp inc push inc fsubrl insb sbb das cmpsl rorl loop adc cmp jg (bad) ljmp sbb mov mov lret mov xor inc nop pushl sar andl test dec (bad) pop sbb (bad) (bad) jmp push add dec cmovns leave out jns push into popf pop jl sub das js iret mov (bad) incl pop adc mov push mov inc cld push std and push lahf push lods mov clc (bad) decl sbb mov stos push daa and or mov xchg jns daa (bad) (bad) (bad) incl (bad) aas (bad) pop cltd pop stos iret sub lret inc push fabs movsb lods lret test addb scas or (bad) (bad) (bad) lcall mov into enter push mov mov sbb (bad) inc push jno xchg in les pop (bad) add fstl loop (bad) push jecxz cmpsl jl add and xor jns das and ljmp xor pushf adc (bad) (bad) cmp jae push ret dec jo loop pop outsb jp sub lret lret (bad) (bad) (bad) push dec inc pop xlat lods xchg mov gs js pusha xchg xchg aaa les in or fidivrl (bad) (bad) incl jno cmpl add subb dec test push dec mov push push std mov adc pop adc xchg and lea (bad) (bad) (bad) (bad) mov pop dec nop dec add or loopne mov enter js fcomip (bad) (bad) decl xorl sbb in push call or fdivr (bad) (bad) decl mov (bad) mov dec jb sti sarb cs sub or lods jl scas xor adc (bad) jmp jl ret stos sub icebp xor add (bad) (bad) incl ret out mov es pop mov test stc inc call (bad) inc outsl repnz add or in int3 mov and ja hlt mov imul inc ljmp xchg fwait cmpsb add mov lahf xor (bad) mov je and xchg ror mov (bad) jge arpl and inc pop (bad) in hlt imul (bad) ljmp pop mov data16 sti mov sbb dec (bad) setb es xor stc popa inc cmp inc arpl adc dec jno dec out cld punpckldq ds fisttp adc mov add lahf add mov pop cld (bad) (bad) (bad) mov lods es stc pushf flds rcll pop sub mov fisubrl test add mov jle shll mov cltd sahf or (bad) (bad) incl inc cvtps2pd adc inc aas xchg fs lcall add pusha aad scas mov mov cmp cld mov pushf and adc outsl (bad) stc repnz sbb and jnp mov cmp sbb (bad) (bad) (bad) call xchg (bad) leave xor inc mov dec pop stos cltd ja lods mov idivl mov dec es mov (bad) lret movsb mov inc mov jmp adc push pop orl push mov mov scas insl shl shlb push mov sbb outsb sub clc hlt movsb sub pushl xchg jbe js ljmp xchg fwait stc in push push (bad) mov pop or int3 push cmpsb xorl push and (bad) (bad) (bad) (bad) jns adc pop fnstcw adc (bad) pop push outsb ret and rolb adc cmp push (bad) (bad) mov jo stc xchg inc mov inc arpl sti mov add (bad) (bad) (bad) (bad) cld movsb and ljmp and (bad) cmpsb cmp out pop mov cli jle fisubl ret jnp mov adc mov (bad) jne subl (bad) (bad) (bad) daa mov or lods leave jo lea notl jl xor and jne push test dec sar (bad) (bad) decl je mov pop push ljmp dec mov pop rorb (bad) (bad) (bad) jg out xchg and loop imul inc xchg jns jl outsb cmovo aas mov (bad) (bad) (bad) inc mov bound mov popa pop adc (bad) test out sbb mov out and (bad) (bad) (bad) ds fs jmp es cs js inc push xchg mov ds jp sbb (bad) (bad) call negb adcb jne repnz adc jae cmp push pop sub mov mov mov mov (bad) (bad) (bad) jg icebp lods xor loope pop aas mov pop mov arpl pop outsl (bad) jne (bad) push pop (bad) (bad) ljmp pop sbb aad jae lea sbb mov loopne (bad) (bad) (bad) call test rol adc lea ss sub add bnd out cmpsl lea mov (bad) (bad) push or add stc cld jno mov push (bad) push nop (bad) (bad) (bad) jg push sbb mov rclb imul inc xchg lahf pusha mov (bad) (bad) (bad) decl (bad) in mov fcomip ret into xchg mov (bad) hlt or faddl jmp clc inc dec cmp push pushf dec mov xchg cmc lcall andl mov nop (bad) (bad) (bad) jmp out xchg movsl imul push xchg gs cmpl push mov jg incl test inc mov push das (bad) pop imul mov daa xchg (bad) (bad) ljmp bound adc cmp xor call insb in dec (bad) (bad) (bad) pushl insb mov push (bad) sbb loop andl scas mov andl xchg xor addr16 (bad) (bad) (bad) (bad) in ret dec (bad) push clc pop aaa shll bswap add push mov pop add in fsubrs mov arpl or mov sub mov clc push lods (bad) (bad) (bad) pushl (bad) push add xor or sub ret mov ljmp add call decb cmpsb xor (bad) dec enter imul clc push adc jmp lret mov (bad) lcall lret or gs inc fcoml sub push mov mov fdivr (bad) (bad) (bad) in cmp sub popl push sbb (bad) int3 enter mov loop loope popa xor mov loopne lods mov (bad) (bad) (bad) call sbb jno mov pop scas inc popa xchg lret in push fs mov push test mov adc into mov icebp insl xchg sahf ja pop aam or dec outsb ja arpl sbbl daa jns inc cwtl adc incl sub mov (bad) or leave pushl andb inc adc ljmp imul inc push out (bad) fisubl mov pop bound test loope (bad) ljmp loop pop mov (bad) xchg jp test add outsl mov sub call fcomip call cmpsb movsb xchg and jnp out (bad) (bad) cmc or dec push pop jbe xchg (bad) (bad) (bad) (bad) mov out mov movb cmp mov mov mov jecxz (bad) jmp and in rcrb sahf mov xchg mull xor movsl loopne enter test ret rclb fdivr jne mov or pop scas aam jne mov movsl or cmpsb popf das sar lods or (bad) insb leave outsb lods xor mov clc sbb (bad) jg lcall or cltd pop outsb mov dec js movsl sub add iret bnd (bad) (bad) jmp insl outsl lock jno inc (bad) and sbb gs jmp mov (bad) jmp xor adc in lret or mov (bad) (bad) (bad) (bad) jmp je in add (bad) in pusha test (bad) rol gs enter (bad) (bad) ljmp cmp daa xchg or das testb inc push xlat and adc xchg int daa movsb (bad) pop mov adc fcoms and fisttp add push cld (bad) jmp jnp,pn pop insb das popa jae call xchg jl fsubrl inc cmpsb mov and repnz hlt jne rcrb adc mov and (bad) jmp jno es fisubl gs jnp jmp mov sub pop ficom in (bad) (bad) pushl xlat mov in dec testb mov pop int3 cld inc pop cmp repz sub (bad) fbld popa (bad) aam idivl cs xor and add adc add pop stos cmp push and or outsb (bad) jmp (bad) (bad) (bad) (bad) mov cltd cld in (bad) lods xchg xor je aaa inc inc scas dec add dec add (bad) incl std repz add sub fidivl xor lahf clc (bad) (bad) jmp ss adc rcrl or enter inc sub inc jo int adc add mov es mov (bad) (bad) pushl xor call sbb xchg dec jl xchg xor jmp (bad) (bad) out jge insb lea test lcall mov inc cmc mov outsl cmp and (bad) decl frstor lcall push test repz (bad) lea jmp idiv std and lcall sti sub pushf mov pop test sub (bad) ljmp in test cmpb adc pop and leave mov in incl insl mov fnstsw rorb (bad) (bad) (bad) call imul rcrb xor enter repnz incl leave sbb jae add push sahf fld1 push dec (bad) push jg (bad) call cwtl stos push push cmp pop mov (bad) mov int3 pusha sub add imul (bad) (bad) call dec push lahf pop jb movb stos rolb adc xor xchg (bad) ljmp lods out sub cs stos in lcall jno mov and sub (bad) (bad) (bad) decl jnp js (bad) inc or mov lock aas sbb mov sarl pop lock add iret js jl or mov (bad) test daa pop mov pushf sbb add (bad) loopne movsb out es pop mov (bad) (bad) mov adc push cltd jl pop stos xor (bad) sbb xor fbstp push cltd movl decl lcall mov js popf je into mov inc mov sarb stos fwait pop hlt ja dec aam out dec inc repnz mov and incl and or add jge push cltd test jnp aas push mov (bad) push and kaddw push push movsb cmpsb or pop pop mov cmp (bad) (bad) lcall out inc pop insb call jle and jmp insb and imulb mov mov (bad) (bad) incl sub adc and rolb inc push mov mov lret into pushf adc fcmovne (bad) (bad) (bad) (bad) cmp xchg fnstenv mov push stos jbe and out mov (bad) push jl xchg inc outsl (bad) lcall add cmc imul push mov or dec sbb enter sarl dec or inc mov insl sbb sbb xchg in cmpsl cld incl movsb fisub xor or inc add xchg sbb xor sub nop jl (bad) (bad) (bad) call xchg xchg cltd xchg lcall sbb and add je ss mov inc or add jae jl dec int clc (bad) jmp in hlt ja pop or outsb pop mulb add push jecxz jns dec cmp (bad) ljmp lods or inc daa fmul xchg sbb popa (bad) adc ds in xchg inc inc fisttp enter mov cmpsl mov cli (bad) (bad) jg inc and in outsl pop sub arpl push pop lret xor pop cmp lcall pushl and rol sub into add xchg mov sti jmp (bad) (bad) jmp pop mov mov xchg jb jno arpl je adc aad in cmp fadds cmc lcall ljmp cmp push cmp lret ret test in (bad) mov pop (bad) (bad) (bad) (bad) clc pushf lcall jns push test adc pusha jecxz mov lahf xchg push pop jg cs fcomip ljmp pusha (bad) ret mov ss pop decb inc jle or push pop jbe cli (bad) (bad) jnp outsl jbe movsb pop push xorw insb test out pop pop lret or decl mov imul pop (bad) jnp push inc cs lret lods sub sub dec (bad) (bad) (bad) lcall xor inc jnp pop dec test ds inc jp add mov incl aas fdivr pop mov mov pop in push adc push mov (bad) (bad) decl jp push cmpsl xor (bad) add outsb cmp std (bad) call jle adc adc pop mov icebp es cmpb dec push mov out and mov pop pop or ss jmp add pusha (bad) ret rol lods in stos into sar cld cmp push and bound (bad) mov jmp or adc dec mov inc mov dec or jne out mov jae fst push inc cld sbb push out xchg pop cmpsb jg (bad) (bad) (bad) jge mull jo cmp sub mov orb jnp sub (bad) (bad) fsts xchg mov gs lret lret fwait xor add (bad) (bad) (bad) (bad) cli fnstsw mov inc (bad) int3 je clc add data16 adc cmp jnp insb mov decl (bad) mov fldt push pop lcall sub (bad) (bad) (bad) (bad) ljmp xor popf push lret xor push or enter stos dec and push stc mov xor cld in mov imul dec ret xchg (bad) (bad) mov xchg shr pop cltd cmp imul dec or lock or sub mov cmpsl mov xchg xor icebp dec jle add les mov popf int pusha dec jae stc ret clc (bad) incl (bad) xor in add call mov iret pop (bad) fsubp (bad) decl or ljmp pop cmp loopne aad cli lcall cld pop hlt pop xchg out xchg les jg shl jbe (bad) (bad) out sub add or fdivrl adc clc and addr16 mov lahf mov sub ljmp daa insl mov pushf stc mov cs dec lret (bad) jmp gs in push mov inc xor pop ja or mov inc les aaa cmp jnp adc fcomps das or rclb xchg fcoms (bad) (bad) pushl fdivrl hlt and inc fimull pop adc mov xchg mov aam add (bad) (bad) call pop (bad) lds jp in xor ss idivb ss cmp xor (bad) mov insb xchg arpl in ss or mov pop int3 push and pop pusha mov decl cmovle fbstp cmp insl pop stc xchg repnz inc daa dec (bad) (bad) pushl (bad) je dec (bad) lods lcall call in pop cld outsl testb enter in pop in mov cli stc out mov aas dec sbb lock adc fbstp push imul fs jb or lret or pop (bad) in mov fnstenv clc add popa inc or xchg xor mov and or call incl pop mov icebp dec or (bad) repz fild cmp cld cwtl jp das sar dec mov and mov lea stos (bad) (bad) (bad) lcall out xchg xlat test (bad) enter pop push pusha gs clc dec addl cs out stos repnz lcall cli sbb sbb or repnz fsqrt jno aaa arpl mov (bad) (bad) jmp push fdivs or mov push subl pusha int3 jns pop jge push stos aas (bad) lret (bad) (bad) (bad) pushl dec push inc adc nop movsb in push rolb ret into out sub outsl xchg jp cmp jg (bad) (bad) call das xor and iret lcall sub inc sbb mov nop xorl mov jns bound pop (bad) (bad) (bad) (bad) cmp in lcall fs inc fisub push xchg push in xor cld addr16 ss sahf xchg (bad) (bad) incl add ret cld push fwait dec aaa (bad) mov fwait xchg cmpsl inc lock inc sti or pop cld (bad) (bad) call push scas adc cmp repz sbb add cmc add mov (bad) ljmp mov push push jbe leave jns cmp inc adc pop (bad) jp jbe jae or cli add cmpsl add jg call jo xor xchg jbe mov (bad) (bad) incl icebp sar rol fldl add pop repz test addl popf pop test xchg pop sti outsl cltd lret fisubrl (bad) (bad) (bad) (bad) jl js into xchg sbb dec hlt xchg pop mov adc pop adcb mov inc adc dec pop xor push sbbl mov pushf pop mov add adc (bad) (bad) mov sbb mov js push xchg and aaa dec mov scas (bad) (bad) fild sti hlt xor aad xor ret das sub test lcall pop call sahf cwtl ror pop xchg out fwait jg ljmp sbb aam sahf xlat pop push test (bad) enter mov (bad) decl daa mov pop sarb xor mov and (bad) imul decl (bad) sbb aas push sbb jmp or scas dec pushf ljmp jnp push jp push (bad) insb pusha out pusha js jecxz in cmp (bad) (bad) (bad) call das xchg cli ret movb jns aas mov inc jns mov push mov (bad) pop (bad) decl pop mov imul (bad) dec jo out xchg movsl jo (bad) (bad) call xchg mov mov jl scas mov mov add mov sub cs mov jg mov call pop adc add loope (bad) call cs addr16 fs push cmp adc xlat js sub push inc (bad) (bad) (bad) mov popa cli mov sbb sub dec sbb test lds mov lods jecxz mov daa sub jmp jp (bad) mov pop mov in xchg mov sbb mov mov ds mov (bad) (bad) dec pop cltd rcr dec cli or or int cmovp cmc adc xor jbe push xor fist cli scas cmp sbb inc movsl mov and sbb cmc (bad) incl pop (bad) xlat xchg mov jmp mov sub (bad) jmp lea inc mov call sahf or cmp in inc xchg mov inc or fdivr paddq insb xchg add hlt jge (bad) ljmp add addb sub fisubl sbbb out cmc imul add bound cmc mov sub pop cmp das loop repnz push add xlat jnp out push fiadd je ss lods (bad) (bad) (bad) ljmp add xor push sub jnp inc adc lock adc mov clc push xor lea mov inc sti push (bad) cld push push mov mov ljmp and mov aaa rcrb cmp rcrl (bad) stos popf add ret pop or je int testb (bad) incl push enter pop jl jns add ljmp mov mov dec mov ffreep stos mov inc rol jne lret fild (bad) in ret or pop and loope fnstsw mov (bad) (bad) ljmp and and ret add sbb lock sub stos int3 lea (bad) (bad) incl mov aad (bad) cmp mov pop out inc cld mov (bad) ljmp sub xor orb inc xchg test (bad) decl faddl fdivs xchg cmpsb push dec sbb and movsl sub aad or ljmp dec dec call mov dec (bad) lret sub sbb sbb add incl es aam sub jge push xchg push subl pop mov dec or hlt movsb xor (bad) (bad) incl fwait bts xlat pop xchg cmc and add in in int adc ficomp dec mov (bad) incl pop mov shlb push add mov adc sub (bad) (bad) decl repz or shlb mov out (bad) mov hlt fmul (bad) pop icebp (bad) call (bad) arpl jb popa inc mov push mov icebp jns cmp stos jmp call sbb pop fadds sbb or insl cmp or dec leave and ret mov (bad) (bad) (bad) call cmp sub push outsb jecxz xor xchg icebp or aad sbb aas pushf mov cmp int dec repnz xchg int3 out ret (bad) pop inc and xchg push jne clc fidivr pushf orl mov decb push jne jno pop je or inc movsb mov lahf inc (bad) (bad) (bad) jmp or jae push sub stos fs frstor adc je jmp es (bad) int (bad) (bad) (bad) mov aaa and mov jnp fstpl mov push pushl std pushl rclb xor insl hlt test cmp mov and loop mov jg or loop (bad) (bad) arpl fdivrp (bad) icebp fs xor xchg jae (bad) incl mov rclb dec mov sbb cmpsl adc (bad) lcall cmc push jae cmp lret insb (bad) dec sbb push sahf popa subb (bad) out pushf push cs sbb (bad) orb arpl in sbb jne ja (bad) call fwait xchg mov cmp mov (bad) jl enter (bad) (bad) jmp lret push (bad) mov scas pop scas pop enter insb inc mov (bad) (bad) decl aaa loope cmpl push addb sbb cltd sbb call stos insb mov cs jbe mov leave dec ss mov rcrb (bad) (bad) out jnp rcll mov or scas cmp cld pop pop (bad) push push in pop (bad) test xor (bad) (bad) jmp jae aad inc shlb adc lret iret pop jmp sub ret (bad) (bad) (bad) ljmp popl mov test push jp cld subb adc call clc mov mov mov add push cmpsb lret mov inc mov jmp clc jmp push fidivr das mov and push pop cwtl xchg pop call push popa (bad) clc add loopw add and xchg push push popa xchg outsl repz cs hlt dec arpl mov jnp ja jbe xor stos (bad) negb out or jo and aad std (bad) (bad) (bad) mov cld dec mov in sub pop clc adc mov fisub std out clc aaa xchg movsl jae das or jl loopnew pushl jg adc xor mov mov mov xchg (bad) decl inc loope (bad) (bad) inc and push push sbb (bad) (bad) (bad) inc xor dec dec jnp (bad) xsha256 cmpsb adc mov insb in mov cmp xor (bad) (bad) decl mov xlat xchg sahf xor loop lods inc jo nop popf cmp pop add (bad) jmp and cltd cmpsl and dec jb mov pop adc lret pop icebp loop (bad) decl cld (bad) repz and adc pushf (bad) sbb lea jle outsb push mov ljmpw fcom das mov jo mov and xlat cmp or clc push jp mov add inc and (bad) aaa add jb mov jg mov sbb mov addr16 xchg enter mov mov (bad) jl jp cmpl xchg je test push stc aam hlt inc mov insb into dec xchg clc lds inc dec bound mov xchg pop jle icebp (bad) incl mov (bad) dec cld add lahf loope and enter (bad) (bad) jge pop jne js sub xchg xorl movsl cltd mov push mov daa jg mov sub sub pushf in fsub pop xor jae (bad) jg pushl mov rcrl push sbb inc inc repnz je into pop push sub icebp xor or add ja out das xchg pushl test fcomip incl mov xchg mov sbb mov (bad) mov jg hlt mov pushf jmp mov aaa stos add out (bad) (bad) call dec fldenv xchg aad nop (bad) lret cwtl jecxz and cld xor dec xlat and sub lds xor push dec mov push aam inc fisubr sarb pop movsl incl adc ds cli rolb out xchg (bad) mov adc (bad) incl mov xor lock dec aad gs lret ja inc sti lock jp cmp ljmp (bad) movsl fmull jle cltd movsb popa cmpsb push mov ficompl je sar jg mov aas lahf mov loopne mov mov mov (bad) (bad) (bad) jmp xchg cwtl pop and aam mov fcomps fsubl dec xchg mov dec mov cld fs (bad) (bad) (bad) decl mov je loope int lods fwait xchg lret mov cmc iret outsl rorl (bad) (bad) (bad) (bad) (bad) ds sub lds sbb adc push dec dec ret cltd sbb dec mov je daa jmp (bad) (bad) (bad) pushl add jbe push jne aaa mov test push dec dec push leave repz cld (bad) (bad) lcall rcl ljmp mov push jnp (bad) jne sbb outsb das mov out adc pop sub xor dec mov jo into call pushl std pushf (bad) out jmp jmp rclb daa mov add mov (bad) pushl ljmp sbb push dec test xor loopne js stos jne jns pop fdivr (bad) cmp ss inc xor je out adc inc lret cmp ret test lcall push daa iret sbbl cmp add ljmp ret jge xor sbb mov (bad) call pop push jmp je (bad) (bad) (bad) lcall imul inc xchg insb idivb jp movsb test pop arpl jae (bad) (bad) (bad) call test ljmp xchg mov pushf in loop movsl push inc jle (bad) (bad) dec je push push xor movsl dec pop mov fs arpl popa push jae into jbe jae fild mov inc or inc icebp inc mov jbe (bad) (bad) ljmp adc cld push inc adc adc xlat mov ds cltd (bad) (bad) (bad) call xor dec es inc xchg inc pop js xor or add fcomip ljmp cld into loope mov (bad) ss popf xor xor in push in loop (bad) (bad) call stos mov leave mov pop rcrb daa mov rorb (bad) jg das sub mov mov jge sub iret test (bad) (bad) jmp mov clc scas jge mov lcall sbb jmp jns and call and stos imul (bad) (bad) (bad) dec cli adc mov clc and xchg daa lahf (bad) adc adc (bad) stos popf mov (bad) push (bad) ja pop jno xor add and xchg je inc mov orb ljmp mov sbb test mov lea mov push xchg xchg or (bad) (bad) (bad) incl cmp (bad) xchg inc add jno pop and das inc out jns rcrl lret cmc insl popa adc (bad) call add pop mov mov icebp movb mov (bad) addr16 lock sbb sub jecxz mov (bad) (bad) (bad) pushl sahf mov push repnz pop lret add mov xor xor mov outsl les cwtl popa std (bad) xor mov out mov les ljmp enter (bad) (bad) jg scas test js and stc pop mov xchg mov mov iret and dec mov cwtl push sbb aas sahf cmp ret arpl pop cmc cmpsb sbb inc arpl cmp or (bad) fidiv call mov xchg push mov xor push mov jae rclb lcall lds scas mov mov (bad) ljmp icebp xlat sbb add test push mov test lock decl mov loop sbbb add stos (bad) (bad) pushl mov sub mov and (bad) xor daa jg lds mov (bad) (bad) (bad) (bad) (bad) fimul inc xorl fwait les lahf xlat cmp shlb pop dec aad add insl cmpsl inc fldl (bad) dec mov pop fs bound pop rclb std or jmp jae mov pop push or or test pop dec popa mov pop cmp push mov iret xor roll clc fcmovbe je pop jle test mov fldcw ja add and sbb inc xchg push jne dec pop (bad) (bad) cmp dec loope pop dec xchg mov inc test pop popa mov (bad) ljmp rorb lods mov ds (bad) push adc xchg lods inc mov (bad) in out das jge pop divl dec jne and (bad) (bad) (bad) mov ret inc mov xchg push outsb and test push repnz inc popf xchg adc addl test mov pop pcmpgtw cmp ja mov lcall movsl cmp clc daa je rcr arpl pop stc sbb mov mov or out add xlat dec lcall dec cmp out test push (bad) (bad) incl loopne cmc inc outsb dec test xchg ret or fsubl sbb (bad) (bad) inc ficoml aaa pop pop dec lods cmp lahf xchg cld sbb sbb (bad) jbe fiadd outsb or jnp rorb lods add pop and jno pop test test loopne decl (bad) adc add xchg jge push gs fldl lahf mov pop pop (bad) mov jle repz loope out shl jl sar (bad) (bad) call out and jo jno in jno push and test adc dec cwtl cs mov sbb add (bad) decl pop push cmp mov xor in and lcall adc mov pop mov jge dec pop mov loop xchg mov add insb push mov (bad) (bad) lcall test jnp push mov jbe,pn sub jge inc (bad) rcl fcmovne (bad) ljmp mov fdecstp mov sub lret cmpsl nop (bad) xor outsl mov loope jecxz sbb xchg sbb fsubrl ja mov cmc nop inc mov fild sub push adc call dec fwait dec mov mov orb (bad) (bad) decl leave pop popf (bad) out mov lcall das sti lds (bad) (bad) mov cmpl jnp inc cs push xchg ja mov sub pop loopne call dec cmpsb lods mov out pop iret movsb sbb xor or add jne aaa cs inc lods sbb cmp aaa (bad) (bad) (bad) pushl repz mov fstps push cmp aam sti out jnp lods faddl adc clc (bad) (bad) jmp es fistp cmpsl popa and aas jmp daa out test daa dec push inc mov (bad) (bad) (bad) out xchg xchg fwait xchg jmp sbb pop insl push xchg or xlat orb (bad) (bad) (bad) (bad) std adc pushf in cmp in insl imul add sub cmc add (bad) (bad) (bad) jmp js lds movsb mov pop mov or outsl fs sbb adc ja dec or (bad) (bad) (bad) jmp xor and jmp ljmp push dec je push lods add (bad) (bad) (bad) mov mov xchg mov jg dec xchg in dec adc shlb es mov or ret or leave imul incl faddp jbe cli mov lahf movsb mov dec ljmp cld out (bad) (bad) dec movl push or or xchg adcb adc addr16 es (bad) (bad) ljmp pop sbb jg imul pusha mov xchg testl mov lcall and dec loop dec in popf push pop sbb pushf pusha loopne or (bad) (bad) (bad) decl jbe arpl add pushf sbb leave ja mov flds in (bad) (bad) decl inc sbb mov sbb rcrb adc mov mov jecxz (bad) (bad) (bad) cmp es cmp cld popa imul mov pop add mov pop xor daa clc in (bad) inc inc hlt cltd cwtl jecxz movsb adc xor hlt fdivl fisubr (bad) (bad) (bad) out enter adc daa pop addr16 jno sbb cli hlt inc mov add add lods ret (bad) xor adc mov jp jo pop out test mov xor (bad) (bad) pushl sub in dec popa pop int xchg sbb push mov mov repz mov movsl mov jp negb (bad) (bad) (bad) fisubr aaa stos xor std rclb mov push outsl mov ret decl clc inc notl push xchg add add mov jmp pop cld xor stos aas mov movsb xchg sub mov std and sbb xchg sar (bad) (bad) call mov mov popf sarl add mov adc out loop push sub inc cld add in leave inc xor insb mov jg sbb and inc (bad) shr xor in push mov pushl mov aam js mov xorl sbb pusha mov pop movsb movsb loopne push jno push push mov mov cmp (bad) pushl arpl mov faddp xlat mov pop mov iret aad push mov decl sub out jg in (bad) out sbb fdivrl xlat sub imul lcall ljmp cmc add push push (bad) and push inc sub push xchg mov call push xchg iret mov pop loope loop dec mov dec (bad) imul jae out imul (bad) jg cmpl add test xor ljmp call cmp jge mov sbb aas std mov push pop sub push scas pop mov outsl scas (bad) (bad) (bad) call xchg cmp scas dec mov ljmp je enter or adc (bad) (bad) lcall aas pushl cltd pop clc xchg fiaddl mov mov mov test xor add pop loop movsl (bad) (bad) call mov enter (bad) add sbb in pop cltd js cmp repnz decl adc lret icebp xor stos pop repz sub pop sbb sub (bad) call cwtl ficoml dec int test or lcall (bad) (bad) (bad) incl orl andl das mov xor vmovhps decl adc adc dec lods test clc (bad) pushl and mov cld ret jecxz mov xchg mov inc out and (bad) incl arpl mov sub sti jmp push mov push xor lcall pop stos sub sti mov stos movb nop aas adc xor lds (bad) jmp lods cmp push push inc stc jmp test stos incb aam call arpl lods lods push or sti adc (bad) (bad) out mov xchg loop cmp int3 cmp mov and dec adc lcall mov scas (bad) mov adc pop jae jo cmp sbb cmc pop aaa jnp fsubl sar xchg xchg jge adc jmp adc push sbb repz adc nop aad (bad) (bad) (bad) cmp mov adc int stos ret xor fmull push repz push mov pushl sub ror das dec sbb aam in vpaddd dec cmc xor clc pushf sub clc insb jnp jl test lock add imul (bad) pop push mov xchg dec and or ret mov xchg mov jge xor sub mov sbb (bad) (bad) lcall jge jl (bad) mov xchg insl xorl imul add and sub enter mov (bad) push repnz dec mov cwtl data16 sub cld mov int mov jle and out jg (bad) jmp cs icebp das pop fwait xor pop push sub loop jg inc fsts call rclb adc loope jle call (bad) (bad) (bad) jmp mov orl jg popf pop call cli pushf lods sti cld outsb or stos (bad) (bad) jg fs jno aas lahf ret push andl xchg jnp xchg mov (bad) (bad) ljmp lahf and push mov jmp aas mov stos jns fwait popa imul jg rcrb or out fwait and insb popf mov jmp cs lds xchg pushf fs jnp (bad) (bad) lcall insb addr16 push ficomp pop daa daa lahf pop ret cmp lret in (bad) (bad) (bad) call fisttpl bound pop push repnz outsb loop adc test and adc ffreep outsl (bad) (bad) (bad) decl add jb (bad) faddl push push mov mov push das lret cmp (bad) fbstp mov (bad) (bad) (bad) push push add test push scas push scas data16 pop jnp dec push or or inc (bad) (bad) (bad) (bad) decl in or cwtl lret loope lret add cmp fwait sub (bad) addr16 sbb decl in shll subb leave jle mov pop aam sahf ds (bad) (bad) call xor pop cmp and int3 les push pop rcll adc pop or adc dec (bad) (bad) jg mov push jne mov std bound in sarl mov negl (bad) mov (bad) (bad) decl mov add outsb cmp rcr ljmp aas mov lcall insb test les mov in mov mov lods mov pop jle lret adc and jmp ret inc aas cli add (bad) (bad) lcall dec scas movsl mov ficom mov sti in ds xor pop arpl movsl mov ljmp clc call mov sub push dec push (bad) loopne mov (bad) add (bad) (bad) (bad) inc sub out xchg push fistp xor and pushf (bad) xchg dec test sub mov mov arpl popf les les out adc pusha test outsb sti lea lock pop hlt addr16 jge fdiv pop clc xchg add mov lcall stos std loopne pop int fbld fildl nop repnz mov and pop sar ds dec mov aam adc fadds mov mov cmp mov mov call pop stos les shll cmp jbe cmc mov xchg (bad) (bad) (bad) jmp lret in daa sbb mov iret mov je inc leave test fldt stc inc sbb test and push jae jecxz std lods jns push sbb (bad) decl repnz cmp dec cmc dec add in bound sbb fcomip (bad) pushl push fsubs rcll push xor loop push in mov ljmp mov pop test sbb and mov sarb push cmp or js inc cmp cmp inc mov hlt (bad) or cld (bad) fisubrl stc xor clc mov add iret sbb ljmp aam rolb pop and int leave push xchg bound pop pushl test test cmc into fimull jnp mov cmp cltd nop (bad) (bad) fldl sub rorl pop in pushf outsb inc stc push jl (bad) (bad) call nop and pop mov adc pop push pop pop rorb outsl jbe aas or (bad) xchg rol nop roll adc pop lret and fildl xchg insb mov call jne sub jbe decl movsl cwtl or lods push xor cmp (bad) (bad) stos decl jnp sub mov shlb push xor aam das inc out (bad) (bad) decl dec (bad) xchg imul pop xchg dec jno mov (bad) lcall jb mov cmp sarb lods rclb pop sbb (bad) mov cwtl (bad) sub (bad) in cmc jo out (bad) jnp inc je add movsl into cmpsb (bad) (bad) (bad) jmp cmpsl loope,pn adc and inc cmpsb test xchg ret dec dec scas jl sbb pop cmc (bad) lcall sub adc lea loopne ss jp adc loopne sub (bad) (bad) (bad) ljmp fiadd sti jle pop lock add cmp (bad) dec push sti call (bad) push lods cli mov pop sub jne (bad) mov pusha loope jb cli lods icebp fwait shrl (bad) (bad) (bad) call sub adc add sub shrb lds shrl lds (bad) (bad) (bad) lcall sub imul sbb xor sub xchg and sbb push incl push sbb movsb je fnsave hlt hlt add ljmp cmpsb ret lds sbb and cmpsb fcomip mov xchg cs push and (bad) mov lea repz aad cmp pop arpl xchg xchg jb add jg mov (bad) (bad) mov dec xchg mov lods jns stos mov xchg rclb (bad) ljmp push jle cmp pop cld push push loope sub shl mov mov adc (bad) (bad) (bad) fnstsw mov ret jmp popa push andb (bad) lcall je scas sub fildl adc pop pop popa xor cmp (bad) (bad) ljmp mov jp (bad) pop cmc aas push or cmc xor (bad) or js stos dec clc jno (bad) (bad) (bad) mov mov shrb sarl fstpt sti mov xor lcall enter sbb mov dec stos push pop lret xchg pop (bad) (bad) (bad) dec push mov fbstp adc jns pop lea sbb ss add jp (bad) (bad) call test jl sbb loop (bad) sub mov (bad) mov adc jmp lods (bad) leave cmpsl enter cmp imulb (bad) (bad) (bad) (bad) cmp or (bad) push add cs add mov jl pop jnp inc int mov (bad) (bad) (bad) jmp into arpl xor ja fs subb hlt lahf push (bad) movsb adc xchg iret je (bad) (bad) ljmp insb xchg iret jg sbb sub iret sub enter (bad) (bad) (bad) jmp test jno leave cmc sbb mov push rcrl push addl (bad) (bad) incl in rcrb xchg fild lahf add enter xchg repz (bad) (bad) (bad) call dec addr16 dec xchg xor cmp gs lret mov jge (bad) loop (bad) (bad) (bad) (bad) (bad) jecxz (bad) pop imul iret xlat inc add idivb int mov lcall mov arpl jl pop outsl jmp stos repz mov pusha inc sub (bad) (bad) (bad) (bad) mov inc dec lods xlat jmp cmp or cmp push push into sbb (bad) (bad) (bad) lcall mov sbb addr16 mov xchg add imul cmp (bad) jg push data16 ss pop (bad) je nop mov mov pop jb mov cltd cmp movsb test (bad) call rcr mov xchg sbb jb (bad) aam cmp lds outsl jb cmp adc inc fistp pop push xor shrl jnp insl sbb mov ret xchg inc mov dec aad jo xor jp test mov sbb hlt ljmp scas xchg mov cld push cmp push mov jb scas xrelease add test dec int3 sbb push pop (bad) pushl lcall popl xchg mov out inc pushf mov jnp out add or das das adc (bad) jae (bad) (bad) jg rolb xor iret xchg roll out mov fsubs stos vpsllq (bad) (bad) inc push adc and fsubrl add int3 mov and inc mov (bad) call pushf insl rcrb xor or or push outsl cmp loope pop aam data16 ss jns pushf mov test clc (bad) jmp or jno sub js ja sbb xor dec lahf (bad) (bad) (bad) mov push lods hlt imul mov into jecxz mov jnp cmc lcall fwait or inc sti testl test insb sbb pop shr push xor call test loopne fisttp jmp adc insl and frstor (bad) pushl aas dec into adc jle cmp (bad) lock or test pop pop mov (bad) (bad) (bad) decl lcall fstpt dec mov xor hlt sub (bad) jecxz es insl call ljmp push hlt repz inc mov jno lock mov call push add mov cs xchg stos paddsw pop clc mov adc clc add out jnp lods scas (bad) (bad) (bad) incl pushaw mov adc imul rcrl cmp rcl sub (bad) or mov iret or test cmpsl cli (bad) (bad) (bad) jmp mov mov ss add sub out pop mov inc fistp (bad) jae and cli mov lcall jg cmp jp dec clc lret adc sbb mov (bad) int jne pop mov mov xor xchg inc loopne rcl push mov fistpll lods out inc jle mov je mov pop (bad) adc fs or sbb cmp arpl (bad) cld mov adc mov (bad) mov or push cmpsb pop pop or jae jl inc (bad) mov call lcall mov in hlt cwtl and (bad) mov sbb in inc (bad) incl cmp xor mov jge push jb gs punpckhbw pop (bad) (bad) (bad) inc mov aad or sbb in jmp and or in xchg xlat (bad) gs inc jmp (bad) decl sarl jae pushf aaa fwait mov stos icebp (bad) out mov aas lcallw inc jle mov xor jecxz (bad) (bad) pushl push mov push pop mov and int data16 dec add push sub lds (bad) das or or mov add mov imul pop or dec sbb xchg sbb (bad) (bad) cmp lods inc cmp cli inc or (bad) (bad) (bad) mov dec (bad) in xchg mov xchg mov mov repnz add lea sub aam lcall movsl pop cmpsb xchg (bad) adc adc inc jp pop mov test jg xchg mov sub fs sbb xchg ljmp nop sbb push inc cmpsb stos mov (bad) out or or and fadds fstpt jecxz loopne addr16 (bad) and (bad) jmp jno aam test in add je xchg mov cmpsb jl mov ljmp pushl cwtl int out mov into jne insb and push and mov dec cmp test lods mov stos mov out xor pushl dec scas xchg stos stos add jle xchg pushf outsl xchg shl mov (bad) ljmp inc mov pop xchg je imul loopne (bad) fisttpl (bad) (bad) mov test jb cmpsb jbe xor outsb popf mov mov (bad) push pop jmp imul movsb mov push sbb dec enter (bad) cmp fstpl fimul sbbb arpl jbe pushl cltd nop repnz test popf outsl jmp push xchg stos xor clc icebp (bad) (bad) lcall call adc push mov mov das (bad) (bad) out adc call lahf leave cmp sbb mov xchg jp ds cmp jg loopne add fisubrl popf sarb and mov fidivr sub pop ljmp push jg sbb test ss jns movsl push mov (bad) (bad) push xlat insb fcomp arpl xor mov lret std adc pop test decl (bad) cmp cmpsl adc sub je iret push mov ja pushl cmp lcall test jbe xor daa inc xor (bad) (bad) incl mov push sub jmp adc mov pop cmp sub daa (bad) ret cld ljmp sub add cwtl push pop (bad) stos jb test (bad) pushl cmp das xchg ret in fs push and xor bound pop sti mov inc lcall push cli mov fnstenv das clc (bad) jg stos push into push xchg xor shrl lods cmpsl cmovae (bad) (bad) inc pop dec jno out loop mov test cmpsb ret movsb (bad) mov jmp (bad) decl jge jo out shr rcr movsb cmp jp (bad) sub outsl dec in rolb cmc cmp jmp (bad) adc add sar incb int mov lcall mov inc icebp mov sbb xchg leave adc and dec push cmp push and add sub incl cs (bad) hlt jl push inc or jge fisubl iret aad (bad) (bad) lcall je iret mov xchg lds int3 mov out push jns cli aad lea add (bad) (bad) cmp push aad jle jne aad mov outsb add inc mov (bad) mov sbb or in daa xchg xchg mov push (bad) (bad) (bad) (bad) out push xchg mov adc aad add aas (bad) xor ljmp ret inc (bad) (bad) (bad) incl or xor popa mov icebp xchg jmp pop aas stc sbbl mov stos hlt and fistpll pusha pop out testl (bad) (bad) decl mov or es cwtl adc inc cs add lea mov outsb (bad) (bad) (bad) (bad) fimul sbb out sbb push push int3 xchg dec aaa mov rcrb add fcoms (bad) (bad) call scas bound repnz jle stos jecxz aad ret cmp mov sub sbb (bad) (bad) dec and mov subl sub xchg or enter fwait sahf add test sarb add (bad) iret mov dec sub add sbb (bad) repz div stc data16 (bad) (bad) push lods push push les fcoms pop out mov push emms add adc mov out xor aad cmp jmp (bad) (bad) call mov adc xchg in jbe add outsl mov aam jbe lcall mov scas or xchg and loopne xchg inc out stos dec xchg jmp test leave test dec (bad) (bad) mov fs sub pop add or push or test (bad) (bad) jns xlat jg dec (bad) adc scas add xchg (bad) movb mov insb or (bad) fst mov cmp mov inc loop add pop popa sub lcall mov test pop outsb sar (bad) incl cmpsb test pop mul adc out scas into jbe cwtl out pop aas jo sbb in xor xchg cmp cmpsb or popf mov test fs mov sbb outsl or outsl cli push xor push mov xor rorl aam aas testb (bad) ljmp add add hlt push adc cmp inc xchg movsb imul and repz nop cmp add pop (bad) xchg stos (bad) or dec movb inc imul jbe push mov (bad) mov push les push sub pop jns hlt xchg jg loopne jg pushl call rorb fmul cltd pop lret and scas add ljmp rolb inc dec inc lret xor push fistp mov mov (bad) (bad) lcall push int lea test dec pusha cmpsb pop push push mov fimul mov (bad) (bad) call (bad) lahf lods mov pop les lret inc cmp or pusha jmp es push das mov das inc mov addl fdivl (bad) enter scas clc aaa sbb lcall sahf fisttp out clc add cmpsl fistp and or xor jbe add jae jp (bad) ljmp sbb (bad) and push out (bad) fimul (bad) xor (bad) (bad) mov mov outsl xor xchg inc decl icebp and ret mov xchg push cmp adc mov mov rol and aaa cmp or adc push ss (bad) (bad) (bad) fucomip mov lret dec out and enter and popf and aaa shrb (bad) (bad) jg ja stos fcom (bad) nop or push cli jg and push mov hlt call (bad) decl mov inc lods xchg scas ja dec mov cmc dec out das cmp jle dec stos xchg (bad) (bad) (bad) (bad) mov jb and fisttpll cmp es dec orl cmp popf adc (bad) ljmp hlt insl lsl js cmp cmp sub insb fistl jp jg (bad) (bad) (bad) inc mov mov push push cmpsb mov ds jbe aas into in xchg gs inc (bad) or xor (bad) fisttp push pop lahf mov fs insl push clc or mov push sub decl dec or cwtl cmc lea push es stos push ljmp mov and (bad) (bad) ljmp or divl dec lahf add add pop adc (bad) (bad) (bad) pushl xchg clc xlat ror mov scas inc jge xor sbb not int3 and mov (bad) (bad) lcall xchg call inc lahf aaa (bad) dec in cmpl sbb aad (bad) jg incl sub dec jo fnstcw or dec pusha js pop inc pop jp pop loope add mov push call aam fwait add cmp and pop add lret aaa jae adc (bad) (bad) decl fcmovnb gs sbb cmp jmp je fwait pushf scas cwtl or (bad) mov (bad) (bad) ljmp test add mov jnp fsts cmp inc inc cmpl (bad) decl out dec fiadd js dec xor insl or mov pop inc pop ljmp sbb pop jle xchg lea rcrb adc sbb jo cli xor (bad) or jg xorb mulb fxch into mov push pop or shrb (bad) (bad) call sbb cli scas xor gs iret pushf enter jmp inc jbe,pt or pushf pop call sar (bad) incl and mov push mov scas mov or (bad) (bad) (bad) jg test push sub je lahf cltd ds push jne (bad) leave add aad in mov ljmp cmc jecxz mov xor dec mov add jmp sar dec sub push fnsave outsl sub out lret jle and mov cmc mov (bad) xor (bad) notl loopne lods inc mov (bad) incl adc or (bad) jb repz cmp and dec sahf xchg (bad) (bad) (bad) (bad) cmp mov andl aam icebp (bad) sbb idivb or mov fwait (bad) decl xor pop inc xchg xchg es fdivr jnp (bad) (bad) inc mov sahf (bad) mull mov loope in push aad xor (bad) es test idiv pop xchg push stc mov addr16 mov test and or (bad) (bad) (bad) call pop cmp nop pushf nop nop cmp int int3 lods pop mov out lcall (bad) (bad) decl dec in xchg lock jnp out and mov out pop sbb lcall gs adc (bad) (bad) jmp xchg aad mov mov mov xlat adc (bad) xor cmp js scas inc pop add lcall inc sub jmp in ror (bad) (bad) jmp aas xor outsl test test inc or sub mov dec dec sarb lods pusha (bad) mov mov push sbb or fildl add mov jg ljmp test lret test xor xorb leave mov xchg out lret jae push (bad) (bad) (bad) pushl loop mov cmpsl cmp mov ret daa sub dec adc data16 sbb (bad) call mov dec pushf (bad) ds dec push cmpsl test (bad) (bad) dec sub cwtl add pop jno mov pushl push out xchg aaa mov insb (bad) (bad) (bad) call push or cmp test inc push push test leave lods sbb or (bad) jg xchg sbb cmpsb mov (bad) dec scas pop jecxz inc mov jg (bad) jg lea lock push inc andb test lods (bad) repz (bad) (bad) incl mov jl sub popa int3 cmp jmp or mov xor call js pusha ss imul dec cmp aam mov cmp into imul cmc mov jnp pop or pop cmp sbb cmpsb test (bad) cmp pop setle stos xor (bad) (bad) decl pop out lret in pop sarl and or ficoml cmp dec cwtl add mov (bad) (bad) jmp inc in aam ljmp movsb mov ss repnz ret or dec push (bad) incl cmpl xchg and and xor jecxz fadd call (bad) fcompl leave iret inc cs fistpl mov lods fwait mov pushl int3 (bad) mov ret test push (bad) mov xor fildll xchg scas push add add sbb mov cli in sar (bad) (bad) ljmp mov (bad) test roll cltd btr pop lea ljmp neg insb lahf addl push dec imul sub dec repnz cmp (bad) (bad) jmp sbb sbb rorl xor xor or mov xor sbb arpl mov (bad) cmp lcall test les xor in mov lret cltd lret in sub and hlt (bad) lcall inc cli fwait mov mov dec sarb mov test mov les daa cli xchg dec scas ja mov sbb arpl (bad) (bad) (bad) jmp fmull pop and test push jmp shr push mov decl lock xor inc add mov mov divb aaa cld (bad) call and pop outsl lret aam js push xchg iret loop dec fdiv push (bad) (bad) (bad) jmp pushw jne cmp dec mov cmp aam mov fldt in hlt (bad) (bad) call scas fmuls dec int3 push mov out and fiadd push das inc (bad) (bad) out adc mov ret pop sarl pusha cs lret inc jecxz cld (bad) (bad) (bad) decl jle adc stos fdivs and test mov loope mov ret or outsb rorl clc fdivs adc xchg xor scas loop fwait mov jecxz daa dec aad cmp jg pop fs cmp mov nop addl sub sbb mov fsubl sbb cmpsb (bad) jmp clc test loopne int add lea or (bad) xor das pop inc nop cmc lahf jmp clc adcl inc push dec mov loopne (bad) (bad) (bad) mov mov (bad) cli shlb sbb ficom (bad) js ret (bad) (bad) (bad) (bad) std dec xor sbb ret pop xchg sub daa sti jne push out dec into fisttpll and (bad) ljmp stos stos and xchg inc repz or call xchg mov push (bad) (bad) (bad) push scas data16 sub xchg jl xchg mov xlat insl xor lods pop inc and or insb pop sahf xor hlt (bad) jmp scas and popf out idivb add fbld inc popf adc jmp (bad) jmp mov dec test sub mov repz (bad) xchg scas (bad) (bad) (bad) mov loopew lds jne sahf imul mov cli sbb pop enter cmp (bad) (bad) decl add jne test inc inc insl sbb (bad) in adcb jecxz pop push xchg push mov cld scas ds cmp inc popf adc sbb (bad) (bad) (bad) incl dec jle cmp out sarb mov rcrl adc gs xor (bad) (bad) ljmp jmp lea dec and inc sbb mov fisub jmp out (bad) icebp (bad) (bad) (bad) incl pop (bad) sub hlt mov movsl fndisi(8087 cmp jecxz js rclb scas lock loopne (bad) ljmp add jp mov mov (bad) aam lcall popf (bad) (bad) (bad) mov push dec push jb scas cs imul pop or cmp (bad) xor lcall (bad) div add sbb xor inc addr16 jecxz cmp cmp push loopne fimul repz pop cli rcrb or cmp aas outsb cmpsw pop cwtl ret mov ficomp sbb inc int imul mov das sahf and jae mov (bad) (bad) (bad) jmp test cs add mov mov out stos fsubl xlat in sub stos (bad) (bad) (bad) decl popf push xchg ja lock leave xlat aas pop or push mov push adc jecxz (bad) (bad) (bad) incl mov int3 insb pop pop jge and and ret adc iret xor mov (bad) (bad) ljmp jp add and icebp push data16 mov mov mov jns jg (bad) pushl jnp mov es and enter cmp jmp xlat aam mov and mov pop lret pop cld cmp jae lock fcmove jp lret xchg cmc adc out add mov mov daa jge xchg aas clc (bad) incl aad or jae je add sti imul sub pusha (bad) (bad) jg das pusha pop scas in and rolb push pop (bad) inc and in mov cld incl inc jns out ljmp sub xchg inc incl je and in xlat mov jo (bad) (bad) jg sub cmpsb pop mov xchg add or jmp mov cld jg mov cmp mov imul xchg jg xchg or adc (bad) mov push mov cmp loopne adc (bad) mov xor (bad) jp (bad) (bad) lcall or cld pushf or ljmp lret and ret lcall lcall imul push dec push std (bad) call sti lret les push bound icebp lock into ficomp ret cli (bad) (bad) (bad) (bad) jmp pop fwait enter jb push into punpcklwd mov scas mov xchg sbb (bad) lret add cmpb movb (bad) pop fs xchg leave pop inc mov lcall pop fcompl in inc popa mov mov ljmp mov inc push or cmpsb push sbb xor mov ljmp pop into gs dec jnp xchg mov scas dec inc leave mov push inc (bad) (bad) incl lods add rorb (bad) fdivl lcall or jg xchg dec sub adc dec sub fistp xchg adc cld pop push and fs jbe and (bad) call shl stos popa adc inc lcall (bad) decl int3 (bad) aas mov push aaa setle mov sbb mov (bad) (bad) (bad) jle fwait lahf popa hlt dec (bad) (bad) mov int add xchg rolb mov adc pcmpgtw add cwtl mov leave pop cltd cli mov jmp pop lods das es pushf pop xor add sbb (bad) imul xor rcll mov lods outsb out js popa add inc add aaa sub dec cmp lcall push call and add lea fsub (bad) fbstp ss std mov push sbb das mov inc lret addr16 mov fsubrs or jnp icebp (bad) (bad) jmp push pop arpl push aaa dec cld gs repz and shrb ljmp in jno,pt cwtl icebp or sub fcoml (bad) (bad) mov lret fisubrl es cmp inc and lods mov (bad) (bad) (bad) (bad) decl aas and mov pushf xor xlat dec test jo pop outsl mov sbb sub es mov sub (bad) (bad) call test pop push jp adc faddp in shr fsubrs stos mov shr cltd les fdivl cli (bad) decl sbb cmp cmpsl cmp push pop push mov notl sbb push xor (bad) (bad) pushl bound add or jp xchg xchg aam imul fildll mov pand sub xchg push mov lods clc ficompl cmc (bad) (bad) mov pop push jle push xchg jmp fucompp push push mov imul mov jno mov lahf lods out inc mov mov (bad) nop lcall (bad) pushl scas roll adc sub lods mov movsl adc (bad) (bad) (bad) (bad) ficompl dec fidivl sti mov fcoml stos push sbb test dec daa (bad) (bad) (bad) call sbb sub imulb xchg ret jmp add dec sub push (bad) (bad) (bad) (bad) jmp lock insb ret sub jge and sbb dec gs pop mov adc enter jnp idiv call loopne inc dec leave lods jae add pop movsb pop push mov push mov jge (bad) (bad) ljmp clc or sbb jecxz mov jno scas jno jle mov xor sti insb sbb (bad) (bad) (bad) decl push dec subl xlat jmp mov jae xchg inc pop cltd ja (bad) cwtl clc (bad) ljmp mov cmc fmuls xchg jle push rcll aam jmp (bad) mov and fcoms out push sahf and (bad) xor arpl rclb mov (bad) and (bad) fild mov xor call push fcomps pushl cld mov xchg push mov addr16 sub ret or je (bad) (bad) lcall outsl or cmp leave movsl push call pop (bad) pop add divb bound stos add mov inc cmp or std scas jp inc std popf nop and add jns subb mov test ljmp cmpl cmc test outsl movsb jnp lock push add or hlt (bad) (bad) jmp mov movsb adc mov roll or push (bad) (bad) lcall inc cmpsl aaa and or sub mov int stc and aaa ret sti sarb (bad) (bad) (bad) lcall jo mov aad pop or sub dec jns jmp jnp aam sbbl out (bad) aaa std fisttpl ljmp sti outsb dec or cmp clc xor sar out xchg loopne add push push loope or test mov decl jp mov je (bad) movsb lods cwtl pop fdivrs jp and or fildll jecxz sar add inc xchg loopne cmp jmp scas pop (bad) aaa xchg jg (bad) (bad) mov add inc push dec push ja (bad) fsubp fistp ja xchg out (bad) mov (bad) clc mov repnz fmull idivl inc mov jbe imul jbe mov dec scas sahf xchg sbb ds aas jbe sbb and imul jbe sub in stos xchg mov repz ret cmp (bad) (bad) (bad) (bad) ljmp pop jns int3 loope inc in cmp inc pusha sti adc sub cmp dec push pop xor aas in add and (bad) leave pop or ds aad xor lcall xchg xor scas xchg (bad) (bad) incl aam mov sbb dec push loop cld xor jle lret outsb push subl notl fnsave incl dec loopne mov push cmp pop mov cwtl (bad) aas adc inc lds adc aaa jo in es les jle xchg incl cld arpl pop fs inc mov aas mov gs arpl push incl es pop mov scas xchg data16 mov das jo,pt jg dec (bad) (bad) (bad) incl mov lds cmp fidivl pushf xchg push fmul dec cli push movsl jb or cmp rcll mov (bad) (bad) incl int3 insb mov nop xor dec fmul mov test data16 das clc inc decl scas jo mov pop dec push imul xor rsm ljmp xor (bad) hlt call in enter sub mov (bad) (bad) (bad) cmp and cli dec pop push rcl push (bad) or inc out push out xchg (bad) lcall fisubr in cmp jns fwait pop add cld inc mov (bad) incl lods mov mov or js fistpl dec outsb mov cmp mov mov jle pop push rolb jbe push mov mov nop sub (bad) sti std stos sbb mov out bnd jecxz (bad) xchg xchg push pushl sbb add dec daa push dec cmpsl cmpsb jb and mov push (bad) mov (bad) (bad) ffreep (bad) jae sbb mov stos cmpsl add xchg daa test push sbb push push dec pusha adc in js or push jmp icebp (bad) pushl push aam inc int xchg stos jnp jbe mov pop jl inc pop (bad) data16 (bad) ljmp mov call pusha sub pop rorb sub sahf jge pop jg (bad) (bad) fild lock push ljmp xchg jge js out (bad) (bad) (bad) jmp loope mov mov push fistpl lods lahf ja or fdecstp js mov ret in push int jg (bad) js xchg fldt fistl xor mov stos jne fs js pusha cld and in ret xor (bad) incl mov (bad) dec fxch cmp test shlb xchg push jb pop (bad) (bad) decl dec imul out jle mov pop gs or (bad) (bad) (bad) (bad) fidivrl mov lahf cmp mov aad clc pop xchg gs dec aas aas lret inc pop sub xor mov outsb or out cmp idiv out push popa ret mov inc sbb lcall inc dec cmpsl xor (bad) out (bad) out mov ret jle dec fnstcw cmp stos mov mov adc scas sub pusha cmp movsb inc add push decl cmpsb jo loope divl lret cmp ds (bad) out (bad) (bad) (bad) pushl push jnp arpl mov ret roll lds in add cmp popa adc inc sub insl mov sub mov cmp fistp insb sub pushf xchg outsb aas andb inc das int3 ljmp mov mov adc xchg es (bad) (bad) jg fcoms fbld cld stos mov mov stos adc lcall (bad) (bad) call cli mov dec ss sbbl or xor outsb pop addr16 inc (bad) (bad) (bad) (bad) pushl or sti jp test dec mov push sti xor dec jge sub stos xor stos in cmp aas in cmp mov das sar add cmp in sub (bad) sbb adc ljmp stos loope jno cmp aas pushl mov aad mov (bad) push jecxz arpl fcoms dec jp jecxz int3 je sub pop data16 pusha ds ds inc (bad) pushl lcall fcompl cmp mov pop sub mov in push mov (bad) (bad) (bad) (bad) mov jb inc scas shrl add and and jo sub lds fs (bad) jmp dec in xchg or rorb in fisttp bswap call cld fwait xor pop in mov jns sbb rorl add enter (bad) pushl or (bad) mov cmp lds sbb test jl (bad) mov (bad) (bad) lcall out adc stos std sub inc sub imul and loop mov mov mov inc mov add out pusha jnp jle xchg xchg das aam (bad) push push jl mov (bad) call insb dec cmp insl jno sti add popf je into pop fiadd (bad) (bad) (bad) jg jne lcall sub cwtl xor divl inc or stos movsl push mov aam fldl fistp das popf pushf sarl cmpsl hlt sbb push enter push int3 (bad) (bad) (bad) (bad) cmp adc sti test out ja or lret mov and ss xchg fsubl inc pop lock ljmp iret xchg jp jno cmpsb lods xchg jb aam in popa mov (bad) lcall mov dec pop fdivrl mulb lods ljmp movsb dec jg scas cli mov out push cmp push dec adc jne or (bad) in sbb inc inc iret sarb mov and fiadd fisttpll mov add daa icebp mov movsl xlat push xchg and loopne jmp mov sbb out lock cmpsb outsb adc inc pushl js inc adc fisttpl dec xor cpuid push or mov insl jg test mull xchg mov repnz repnz imul (bad) push fs xchg dec adc movsb jns test mov lods jbe (bad) enter out cmp jns (bad) (bad) jmp movsl (bad) in pop repnz aad dec (bad) insb lods xchg pop xchg leave test (bad) mov (bad) (bad) (bad) ljmp pop jmp popa dec add mov adc mov mov and js outsb dec adc (bad) (bad) incl push cltd scas dec push addl pop (bad) push xchg sbb mov xor bound in adc movsl (bad) (bad) (bad) jmp add call imul or lret int lahf dec es les (bad) (bad) call pop inc push cmpsb sbb das repz cmp out sub jo xchg mov (bad) (bad) (bad) pushl mov mov and into dec inc stos enter subl (bad) (bad) (bad) decl out jl cli lret in push ljmp or out aad movsl xchg sbb cld (bad) ljmp add cmpl in push jne jl (bad) (bad) jg adc sub call mov (bad) adc (bad) (bad) (bad) (bad) mov sbb je (bad) cld pop adc sbb dec sti clc push and data16 icebp test ljmp sub fidivr out mov out pop push jp dec adc imul mov popa sbb push loop cmp jp mov dec sar push in outsb movsl insb pop (bad) (bad) (bad) ljmp (bad) mov push data16 cmp loop lods je stos jle cld push jle ljmp mov (bad) in decl mov add fs lods jne jp aam push and sub mov mov pop sbb icebp das or sbb (bad) (bad) (bad) jmp cmp addl adc stos xchg je pop mov push and (bad) ljmp (bad) (bad) mov xchg (bad) mov sti repz and inc xchg mov js (bad) (bad) (bad) ljmp loop,pt dec or jns xor lret mov pop aaa sbb mov cld call movswl dec rcll idivb mov xchg (bad) (bad) (bad) call mov clc and dec fcmovnb pop popa movsb xlat jb xchg cmp (bad) (bad) (bad) (bad) call test lcall xchg sbb js bound sbb mov pusha pushf jne fbld loopne in push or jmp or cmp test jb (bad) (bad) (bad) fdivs xorl pop (bad) movntq fist push dec mov pop or (bad) (bad) (bad) ljmp int jle pop jmp shrb pop mov xchg jb outsl addr16 iret mov push jmp fdivr xchg gs cmpl xchg jl ljmp (bad) jmp outsl jle popf mov pop fist mov bound sub outsl cli jg je xchg push or xchg add mov shr pop out ss push push adc pop addb or mov push and lock pushl into subl add out pop (bad) clc data16 roll xchg (bad) push addl nop mov jmp push cmp xchg sub mov jge (bad) (bad) (bad) pushl fildl mov inc push xchg out add dec lea sbb js or adc (bad) jmp cmp add imul lea fistl in inc mov in dec daa sbb pushf (bad) add cmpl icebp (bad) call out adc xchg adc xchg mov insl pop lock (bad) (bad) lcall mov arpl pop loopne jmp popa push imul sahf (bad) cmp call in cld or and adcb cmp gs (bad) (bad) incl fldenv stos fwait nop and mov (bad) pop addr16 lea movsb dec cld pop hlt mov fcoml sub xchg fs das js add pop jp call js jno pop out (bad) call dec cmp mov and lds sub (bad) lcall (bad) xor mov mov pop sbb (bad) (bad) lcall pop fstps outsl push nop pop movsb jb std dec ret add jl jbe pop inc or (bad) jns leave out mov push pop ret inc adc push push xchg mov mov (bad) lcall push outsl mov mov jbe lahf mov rorb decl sahf aaa addr16 inc insb in lds push cmpsb xchg mov stc sub sbb (bad) dec notl xchg mov fwait sti or lds cmp pop test rorl jmp (bad) cmp mov mov jnp lds repz inc adc mov cs sbbl mov (bad) fisub into dec adc (bad) dec adc dec jg and test sub (bad) (bad) lcall pop dec movsl test int3 push jnp xchg xor cmc lea enter ljmp decl mov adc and mov sbb cmpsb (bad) (bad) (bad) (bad) stc xlat out dec dec aad pop ret fwait jae sbb cmpsb pop (bad) leave scas sub test (bad) mov in pop mov add sti pop js jno mov (bad) (bad) call sbb rcrb push movsl adc dec jle push xor clc ljmp iret rclb repz jle cli mov fdivp adc lods hlt dec out fdiv lds adc inc cmp mov mov mov mov imul movsb xchg scas pop hlt aas xchg aam sbb in in dec sub loopne icebp mov scas mov clc (bad) lcall test je ficoml xchg mov push pop mov lahf scas (bad) mov dec mov jo (bad) (bad) pop push mov ret mov inc adc cld push sub aam (bad) (bad) call in or cwtl jb cmp pop xchg sub sahf xchg push loope push (bad) pop (bad) (bad) (bad) (bad) cld test add xchg enter dec cmp jmp cmp ja sbb sub dec xchg push cmpsl sbb or sar es jnp sarl leave cmp (bad) (bad) dec add mov xchg ja push test (bad) dec push inc test loopne add sub cld mov dec stos adc cmp cmp inc popf and lds (bad) call mov bswap inc rorb loopne mov lret aam (bad) jg hlt cmp mov dec add xchg test cli (bad) (bad) (bad) jmp xor dec rorb test decb mov cmpsl and mov movsb ljmp ss movsl inc dec andl and pop in xor (bad) (bad) ljmp push or sarl mov pop xchg in sub (bad) (bad) (bad) (bad) decl pop adc cmp int3 xor and (bad) repnz and call mov outsb push sbb insl into push mov (bad) (bad) (bad) push pusha js jmp scas sub push imul fs cmp iret fstpt repnz (bad) (bad) (bad) (bad) cmp adc inc xchg int xchg sbb nop push xchg sbb loop (bad) dec lret ljmp std adc mov cmp shrb (bad) (bad) (bad) mov push leave loop in das mulb aam mov dec pushf add mov inc aad ret (bad) (bad) (bad) call repnz jns iret xor jb arpl mov ficomp iret mov inc lods (bad) (bad) (bad) ljmp mov arpl int3 inc fs cs rcrl sub or ret scas imul lcall xor and out mov jns scas jbe (bad) (bad) (bad) (bad) decl cld jmp dec jmp out jne ss cmc int3 mov das (bad) std xchg (bad) (bad) (bad) inc inc addr16 inc pop jl mov jb (bad) jge insl out addr16 loop jle cli (bad) jmp xor lods sbb stos xchg dec jae into loope push (bad) mov lret in push loope addr16 sub ljmp sarl loopne lret adc incl pop (bad) icebp cs cmpsl in (bad) (bad) ljmp stos xor mov jecxz pop xlat sub ffree sbbl mov xchg (bad) (bad) (bad) ljmp mov repz mov xchg popa fs sbb sti cmp gs pop sub out push addr16 push test std (bad) incl aas or sub and orl (bad) lcall mov es xchg adc mov idivl adc je bound (bad) (bad) (bad) cmp flds sub xchg jmp lcall or mov sbb (bad) (bad) lcall adcl repnz aas mov sbb aaa xchg push jns lcall call mov inc test add jmp xchg xchg mov add mov cmc jp nop jp iret cmp lock mov call ja cwtl sub stos sub xor jl les (bad) (bad) incl test or cs gs out inc icebp inc arpl mov daa mov (bad) (bad) ljmp test fidivr call inc insl maskmovq idivl or bound xor (bad) lcall pop jnp lods nopl cmp rolb sbb pop jge shrb mov sub loope es lock (bad) cmp and cmpsl movsb (bad) iret xor cmp repz push jb insb out mov xor mov (bad) lcall xor jns mov inc lret add push xlat cmp add inc fcoms (bad) push fcomi xor adc test aaa sbb stos pop add sti in (bad) (bad) (bad) call or xor sar push or int loopne mov xor (bad) decl inc jb lahf addl popf outsl or shrl xchg dec lret lea or call enter mov jg or mov retw loopne adc sarl cmpsl add dec inc pop fcom push adc and (bad) (bad) (bad) jg mov or dec inc cmp inc loope stos ficom adc loope (bad) jno (bad) (bad) (bad) incl mov shll sbb mul in inc out or aas test daa jo mov dec out adc xlat loope and test cmp in inc push or adc or and (bad) (bad) ljmp pusha fldenv push and mov or mov push mov add xor mov (bad) (bad) lcall pop mov pop mov into push cltd or or jb (bad) (bad) (bad) decl adc mov iret test push mov in mov sti xor into ret loop (bad) call cmp out inc xor aas std hlt leave xchg test in adc fcomip stos push in (bad) jmp push mov (bad) (bad) lcall rcrl imul mov test xchg ret push inc loopne cmp cmp (bad) ljmp adcl in insb add (bad) rolb dec and (bad) cmp jb or fisubrl lds xor test pop mov nop mov cmp add sbb fdivs movb (bad) (bad) lcall cmpsb outsb les push add dec sub xchg mov or xchg and stc repz (bad) (bad) decl sub push add stos push and jns sahf fstpl mov das push jle jp pop (bad) (bad) (bad) decl mov mov fnstsw lods rcrb mov cltd push inc testb mov inc lock (bad) jmp push push (bad) loopne add dec in je or inc scas test (bad) (bad) fist stos inc mov pop hlt cmpsl test mov xchg lret adc stos dec ja (bad) (bad) (bad) clc push and mov mov fwait mov insb adc cmp mov jg (bad) jmp inc call outsb mov xchg (bad) xchg pop (bad) aaa fidivl or jo rol (bad) (bad) (bad) incl stos lcall xchg mov movsb pop inc loope aas ja das push xchg sbb sahf cld pop icebp (bad) (bad) (bad) dec sbb fcomps iret dec fistpl jns sub daa cmp stc imul (bad) (bad) (bad) (bad) fisttp inc insb jae mov outsl orl adc stc dec loop jbe mov ljmp pop mov mov ret jno push or or (bad) call mov inc bound insb int3 out jne or cmp adc cld (bad) lcall sub and les repnz xchg (bad) decl sahf negl mov push in or cmp inc push cmp test lcall mov inc pushf mov and inc shrb adc (bad) addr16 call pop mov (bad) cmpsl xor and pop xchg lds gs cmp in dec push (bad) (bad) lcall add dec loop jg cmpsb mull shll sub mov or (bad) call jg push push dec sub ss mov xlat div lods push loopne cli cmp popf jno in add adc (bad) (bad) push push outsb icebp sub cmp pop jp dec or shll mov xchg or incl test loopne cmp dec adc lret xor cli (bad) (bad) (bad) fcompl cmp popf fcomi test out add sbb insb and mov add (bad) (bad) ljmp in adc (bad) lret push add jmp adc dec out push shl (bad) (bad) (bad) (bad) lcall cmp shll mov xchg repnz xor mov iret hlt sub fildl push add (bad) mov push sbb jmp jecxz adc xor ja addb mov push and andl add repz sub (bad) (bad) (bad) (bad) jl cs jge fnstenv lods int3 push mov xor xchg iret jmp call lds stc or mov pop inc push dec xchg (bad) mov cs mov cld cwtl aas cmp mov (bad) bound lret fbld test dec icebp cltd movsb ss (bad) pushf dec fs adc loop mov (bad) (bad) pushl mov sarb mov add fstpl mov loop adc movsb mulb popf add and sub scas (bad) mov stc add aad (bad) (bad) decl sti ret mov daa sbb cs rcll addr16 pop out adc inc mov (bad) incl into loop jns pop out popa jmp decl ja pusha pop pop dec jge out dec lock rcll arpl cld fs pop push xchg cmp push sub fwait inc das push and (bad) (bad) jmp sbb dec cwtl stos xchg mov sti sub push push in (bad) in (bad) ljmp out jmp mov out in or add mov bound (bad) (bad) ljmp (bad) jo sbb add fldt mov mov std cld popf jl lea std (bad) decl or cmp dec cltd mov jmp pop popf cmp cld stos or mov push xchg jmp decl (bad) popa (bad) mov pop pop cmp mov (bad) (bad) (bad) inc cmp les imul mov xor andl nop mov (bad) (bad) jg int3 fist mov movsl scas inc pushf jecxz cmp push mov arpl (bad) ljmp cltd pop or lds cli push jno mov stos lods jb mov hlt (bad) call je and push xchg (bad) sbb ss out nop pop mov lock mov icebp xchg xchg dec rcl out gs ljmp adc nopl dec aad jno fidiv xchg adcb (bad) (bad) (bad) jmp unpcklps and sub add mov out mov (bad) (bad) (bad) fdivp sub sub or into xchg cmpsl enter pop fdivr mov outsb pop aas xchg mov sub pop mov repnz in fwait jl or ljmp or push (bad) cs (bad) (bad) (bad) jle add ds jns mov sbb aas lcall or fstpt (bad) dec stos xchg cmp sahf sbbb and sti sar incl ljmp cmp pop arpl mov imul push cwtl push std test cmpsl in imul jge lahf xchg pusha jae,pn lock std (bad) mov fbld mov movsl (bad) ja jns ds call sub test pushf adc (bad) lcall and xchg cmp ss inc lock xor inc and ret test mov (bad) stc sub push ds jo push jbe sar xchg incl jb mov mov js adc cmp push in pop arpl (bad) (bad) call (bad) inc ret imul cmc jmp stos iret popa and jmp repnz or mov movsl leave mov pusha jnp std fwait xor data16 push insb cltd mov ds inc hlt ss (bad) (bad) call dec xchg stos rcrb in bound repnz popa lcall rcrl int3 xchg mov out sub jno (bad) pushl jnp xchg fs inc repz lock mov push daa add (bad) (bad) ljmp lahf jg mov (bad) jne jo dec shrb sbb push int push iret push or (bad) jg jmp mov push fidivl scas (bad) pop cs sbb dec and (bad) jg pop daa mov add cmp push aas pop and xlat je dec xchg add add lcall aad pop lods pop sub mov mov das mov (bad) incl adc cmp mov mov mov jg rep arpl and mov dec lods imul push pushf cwtl (bad) (bad) (bad) jmp lea add sbb cmc gs (bad) xchg cmp jmp stos xor (bad) cs push inc pop push mov lods sbb mov dec xor push or or jo pusha int3 (bad) pusha xor das xor dec imul sub jb jg cmp sbb cmc mov bound push dec (bad) lcall xor or cmp js notl (bad) je mov test (bad) jmp loope cs push push and sub dec adc mov call (bad) (bad) (bad) (bad) (bad) in std adc mov dec popf frstor imull stos xchg icebp arpl mov clc pop fs inc jns out js repnz mov call sbb test gs cli mov cmp je mov (bad) mov out jp jmp repnz xchg rolb mov das xchg loope (bad) (bad) incl in es rorb mov xor jp mov mov imul scas ss ljmp jae jne adc or lds repz cwtl jbe aam sti data16 (bad) (bad) push gs add cld or jecxz or mov lods lods fisubl dec or xchg (bad) (bad) (bad) call or add push jno pop (bad) lods xchg addr16 pushf (bad) in sbb pop adcb (bad) (bad) inc (bad) idivb (bad) cmp or insb test (bad) shrl lds (bad) aam jecxz jg lods inc scas sbb cmp add (bad) decl fdivrl jbe add mov mov mov jecxz leave sub fisubl add lcall mov or movsb (bad) (bad) (bad) pushl cmp popf cmpl mov cmp stos pop icebp push lods mov test mov sub test ljmp add scas aam jo stc test jg mov xchg or inc sub add (bad) (bad) ljmp mov leave or (bad) das ds mov and adc push sbb push (bad) and in (bad) rcrb jne xor bound shll icebp (bad) incl scas pop mov mov call fstl call mov enter notl mov int3 push out sub adc dec call (bad) xor pop xor loop add icebp (bad) (bad) call or mov jle in fwait pop mov push sbb sbb xlat push or outsb mov sbb aam daa push int3 (bad) (bad) (bad) pushl adc mov (bad) mov mov inc xchg sbb lock (bad) mov fs arpl (bad) mov imul pop (bad) xor jg lcall imul xchg popa xchg adc insl xor dec mov fstpl mov (bad) mov jge in sbb shlb (bad) cmpsl dec dec cmp cmp ja mov dec jmp out shl and cmp cli lcall lods fld xchg pusha dec in mov jl jge call pop pusha sbb test popa fwait or (bad) jae sub lahf clc scas inc dec jge pop cmc jmp jns mov xor mov aad (bad) clc popf xor insb out jg outsb xor mov xchg sub (bad) mov pushl jb xchg mulb cli test call stos mov mov mov (bad) mov xchg mov sub ss and imul nop jae add mov pop or sarl call incl lcall xchg pop mov lcall cmc pop pop (bad) xor jmp aaa adc ljmp jl scas xchg xchg fnstenv mov pop aas (bad) (bad) (bad) (bad) mov adc mov mov mov test icebp add (bad) (bad) dec cmc mov clc das popa dec fnsave icebp jp cmc aam inc sub js adc jg ret decl (bad) pop add outsb xor or xchg fwait push push mov inc (bad) (bad) (bad) jg mov fwait pop jno jo or sub test (bad) mov sbb incl cld out fldcw push sbb iret repz adc jbe add lahf scas cmpsb mov fdivs pop fadd cmp aam adc xchg mov or mov adc xchg (bad) ja mov push push mov decb cmpsl sub mov cwtl fild les (bad) jno fild mov lods (bad) (bad) (bad) incl xor sub inc pop mov leave not ror imul sub push sahf (bad) jge test jmp pusha push sbb add xor ljmp enter jbe pusha dec mov pop lds xchg in stc mov in xchg (bad) pushl fdivr inc push sbb cmpsb cmp and mov jns (bad) and notb lfs dec lea inc mov jle sbbl add (bad) (bad) call and test in icebp gs mov repz jae sub (bad) (bad) (bad) jmp loopne in rorb sbb pop dec add mov jl mov push clc (bad) (bad) call into std xor pop push adc repnz pop dec (bad) push movsb mov lock inc test ret pusha dec add jg call mov je and ss aam ficomp hlt (bad) mov in fdivrp (bad) (bad) call mov adc out cwtl mulb dec mov xor cmp cwtl loope icebp (bad) es nop cmc pushl jnp dec cmpsl dec inc pop sbb andl (bad) (bad) call pop mov jp (bad) mov movsl jae rorb inc mov cmpsl scas sbb and (bad) decl and stos or adc movsb xchg jge xor call and jo cmp aad mov jmp test add (bad) lcall ret scas cmp sub aaa js cmp cwtl imul (bad) (bad) (bad) (bad) cmp jb pop shrl jae cmpsb pop int dec jle,pn fprem lock lock std push mov fcomip aaa cld movsl dec inc sub int3 cmc fs (bad) xor mov test adc cli ret jnp nop sbb jp aad stos xchg mov decl cmp or inc clc mov (bad) dec popa ss enter (bad) push mov (bad) (bad) call rorb icebp lahf xchg pusha int sbb xchg test clc cld pop arpl push iret (bad) (bad) (bad) (bad) (bad) fcoms mov inc xchg mov mov cmp aam dec adc enter (bad) (bad) (bad) (bad) mov inc fwait std loope (bad) cmp mov or jbe insb mov std sahf push mov out scas (bad) (bad) (bad) sti cmp cwtl push enter repz cmp out adc sbb clc std adc (bad) (bad) jmp ret mov leave xor fstpl inc repnz iret aad cmp pusha orb mov roll in fs movsb adc pop and add lods pop mov lea xchg mov incl rcl lret jae mov pop add cmp jmp outsl xor nop xchg rorl not ds push sub push push adc xchg ja enter pusha pusha fcomp leave fmull int mov sar (bad) (bad) decl cltd scas and and mov aad push (bad) test outsb lret inc (bad) (bad) (bad) (bad) fistl bound insb insl mov insl shrl push and (bad) push sbb or mov js out insb mov jae and xor jmp push daa cmpsl dec sbb in (bad) (bad) (bad) pushl adc pop dec dec mov pop xor stc aas dec cmp sbb movsb fiaddl mov int3 gs out jle ja adc ret es jbe (bad) call lods and inc jl mov sub aaa in cmp lcall mov push jmp (bad) push cs pop scas shlb mov addr16 cli (bad) (bad) pushl call jge es stos mov ljmp popf or (bad) (bad) ljmp or inc sbb pop sbb adc mov xor fcmovbe xchg jbe push popa mov (bad) (bad) (bad) out loop in pop std sbb xor loopne shrl arpl fwait mov and arpl nop (bad) call mov fisubl loopne (bad) (bad) pushl mov ret inc mov inc cmc and mov mov sti (bad) jo (bad) (bad) (bad) lcall mov adcl movsl fdiv jge xor inc mov mov test and (bad) (bad) jmp loop pop dec decl loop xchg (bad) mov mov dec inc jmp dec sti sbb dec xor cmp add lock cmp sub dec lea (bad) into push sbb shll mov lcall lcall int3 jo out pop lahf jno jne,pt inc les test stos cld sbb (bad) (bad) jmp movsl sub cmp (bad) jecxz nop jbe inc js out dec sub into mov (bad) (bad) (bad) jge fnstcw outsl aaa (bad) jmp loop dec call rclb dec ret imul (bad) (bad) mov fnstcw data16 wrmsr iret cmp (bad) je sub pop loopne mov stos xor gs jb inc cmc pop in push (bad) (bad) (bad) jmp push lods clc (bad) dec mov aaa jne add mov sub insb lret fcoml (bad) (bad) (bad) clc cmp test bound iret movsb (bad) sbb add lods (bad) (bad) fild pop inc repnz aaa outsl js fist call mov jecxz decl sbb jns pop and or hlt div cmp push xor stos mov mov and inc sbb sub adc call fdivr pusha sbb imul outsl mov jp (bad) (bad) (bad) decl cwtl (bad) int jge xchg push dec adc call lret cld pop ss lcall inc dec lea cltd jg xor cmc jle imul repz pop or push or (bad) lock loopne cld xchg jg imul push dec popf stos ljmp (bad) call in xlat jle pop test inc jp xchg and mov sub lret pop dec flds out xchg icebp (bad) (bad) push gs out in pop bound stos mov cltd arpl push test xchg xchg jmp and mov and mov fsubrl call std mov enter aaa push (bad) xlat xchg es or sub mov xlat mov sub xchg (bad) cwtl loop mov mov dec add mov jg icebp (bad) jmp js in ljmp sbb lods xor (bad) (bad) ljmp xor push mov pop mov mov scas and aad inc loope mov idiv (bad) decl adc aam mov pop imulb mov scas mov iret int in cltd test (bad) (bad) pushl push add mov sub int3 ja cld sbb sahf xor lret mov loopne inc sub push cli mov mov (bad) and push outsb pop jne nop dec (bad) (bad) (bad) pushl in cmp popa ljmp xlat or mov jno cmp jbe out ret lcall inc outsb scas mov pop hlt cld add dec frstor stos pop push out jle stos (bad) (bad) call pushf int das fldl jo jmp loopne iret dec sbb daa (bad) (bad) (bad) lcall orb repnz jle push adc enter out ret mov popf lods (bad) (bad) (bad) jmp adc test outsl scas nop pop int aad xchg dec pop mov rcll mov test jg cwtl (bad) jl dec cmp clc sub push imul jecxz (bad) jg lock lock test sbb cwtl jne xchg lret ds aam and std mov xor mov dec or cs gs ljmp pusha test mov sub mov mov pop jle sub loopne inc leave cwtl jns pop sarl xchg lahf cmp in sahf and popa loope test cmp popa imul loop das shrb psllw sbb xor mov push adc in adc inc (bad) mov sub insb (bad) (bad) (bad) pushl (bad) dec cmp mov mov std pop sbb xchg jnp leave mov (bad) fdivrl adc (bad) adc (bad) mov jecxz ljmpw (bad) fisttp mov insl fwait mov jge inc jp icebp inc dec adc sub (bad) call mov ds faddl push aas and std push cmp icebp sbb dec mov (bad) (bad) (bad) mov cmp (bad) cmpsb pop sbb fdivs stos shl movsb push jnp cmp (bad) (bad) (bad) (bad) cmp mov lods addr16 xchg cmpb adc mov add mov dec mov sti lods mov scas xor jo push adc and std and pushf pop js ljmp aaa sbb push scas scas test loope outsb and dec cmp leave dec (bad) (bad) lcall inc stos or (bad) vmread xchg jl std mov pop pand repnz (bad) (bad) (bad) (bad) fcmovnb and jge insb imul dec je std cmpsb mov outsb and popa mov dec xor cmp jns mov lock (bad) jg mov xchg add add mov or xor (bad) (bad) (bad) jmp repnz mov inc icebp shll test arpl or xlat outsl push (bad) (bad) (bad) call mov xchg mov mov scas fwait mov xor mov outsl fwait or fadds (bad) adc pop (bad) mov jge xor (bad) jmp mov jecxz mov xchg mov pop add mov cli or aad and inc xchg in inc mov out jle repnz pop sbb cli xchg xlat mov jmp cmpsb and sub in and ljmp lcall mov xchg pop sbb jbe movsl add scas cmpsl (bad) xchg mov push repz dec mov push insb lds js cmp dec push sti sti mov sub ljmp push add jb cltd adc dec rorb setne stos dec jae mov xor decl scas sti stos mov xchg inc outsb (bad) (bad) decl insl mov inc cs jecxz jno pop (bad) mov mov mov (bad) (bad) fldln2 add push mov jle test outsl clc incl ss test out pop mov bound pop and (bad) lcall and popa ficom add pop ret push and pusha inc pushl incl jne (bad) les cld inc sbb pop cmp sub (bad) (bad) decl cli repnz lds or dec repnz jecxz ss stc mov (bad) (bad) (bad) jmp pop je mov dec (bad) bnd insl adc cmp pop rorl (bad) cld push sbb rcrl push int cwtl add mov fld js xchg lret iret sub lcall push popf daa mov lret rcrl ret (bad) (bad) ljmp sub pusha inc pop ret pminub xor add lcall xlat out cmp rcll jle dec scas or cmp add sub (bad) incl stc loop xchg fucomip inc or mov in dec dec outsl dec jb lcall mov jb mov dec repz cmp decl push in sbb jno pop xchg jae pop dec imul add (bad) (bad) (bad) ljmp fild mov stos ret xchg insl addr16 cmp xor xchg test (bad) incl (bad) scas xchg or dec jo ret sti cmp mov (bad) (bad) (bad) jg xchg and pop jbe mov scas cmp push inc jmp push out dec (bad) mov (bad) (bad) decl hlt sbb dec add pop addr16 fcomps mov push sbb cmp mov call push or jg jnp cmp and jg ljmp mov inc cmp push add loopne sar (bad) (bad) call les out int3 jle aad inc pop std out out xor idivb jo sbb sub out (bad) (bad) (bad) call sbb pop mov mov adc jae jne test (bad) (bad) (bad) (bad) (bad) fldcw arpl hlt (bad) adc jne fisubr (bad) sub adc aas lock mov sbb das shrb dec jnp sub test (bad) call jo mov repnz xor roll divl rorl decl fmull in nop ds push repnz mov mov lahf (bad) (bad) (bad) inc mov (bad) ficomp xlat sti push pop jns cmc lret xor jbe loopne mov aad aas and mov bound lock add or leave out xchg jecxz jecxz fcoml (bad) (bad) cmp xchg cmp sti and xchg pusha les out inc test in loopne and sub scas imul mov mov lock pop int3 (bad) (bad) mov scas pop xchg pop clc stos lcall push sub fidivrl jecxz cwtl pusha push or repnz bound inc cli int decl dec jns (bad) mov sub and adc push ret xor int test inc add inc push int sar jmp mov mov fsts mov inc lret arpl orb push cmp mov cld loop iret xor (bad) lods jb insl sub dec scas lock inc add je push cmp jecxz pop push (bad) (bad) (bad) mov sbb push adc pop mov loopne aaa sub in or in add aas dec inc outsb lods (bad) (bad) (bad) call insl testb es ds lahf sub fstl mov mov imull cmp inc sti shlb pop add sub (bad) (bad) (bad) (bad) in xchg repz push out arpl xor mov and (bad) jb fidivr xchg mov add lcall mov mov jns and mov pop (bad) fildll loopne ds xor movsb mov mov or stos decl sbb test cmp and out pushf lock (bad) (bad) ljmp jp daa jns mov push (bad) stc (bad) mov rorl or pushf loope cmpsl stos (bad) (bad) (bad) decl xchg push push imul dec dec and bound add mov in sbb jmp outsl xor push mov inc pop pusha (bad) out cli call pop dec xor scas inc pop inc dec cs out arpl dec icebp bound lcall dec fwait add (bad) into scas add cli cld ret sub sbb jbe test (bad) (bad) ljmp out push lods dec xor sub mov dec lcall test push outsl push scas mov push jo sbb (bad) (bad) jmp jl dec add lret ds out jge popf adc and jg stos and cld add xchg pop insb fwait xor outsb insl mov jbe pop add dec (bad) rorl mov (bad) (bad) ds sub adc xor sub js xor out adc mov (bad) ljmp jae out adc cld int mov adc xchg lock (bad) lcall fs push pop push xor popa sub cli inc push das ret mov outsl call xchg push jno fisubr pop or sub into icebp push outsl fdivr (bad) inc mov mov jae adc call push pop pop add ja add clc decl mov out int3 scas sahf mov ljmp adc push loop jl adc stc sti (bad) (bad) incl int3 dec and xor adc aam dec mov (bad) mov int sub mov cmp (bad) jg mov lahf ljmp aam pop push dec sti adc push iret enter decl mov mov ficomp dec dec sub mov (bad) (bad) (bad) in (bad) xor arpl dec push push orl mov or loope aad (bad) jg sarb jbe test in pop xor xlat subl (bad) lcall out (bad) bound pop sub jp rcl pushf mov out insl mov idivb sbb pusha icebp xchg outsb xlat cld jns or iret cmp xor fwait sar jb in jae xchg cmp pop rorb sbbl (bad) mov push dec add (bad) popa es popa test (bad) test repnz (bad) ljmp dec or or test adc pop in ret (bad) (bad) std jb add cmp xor xchg in test std popa jp mov (bad) cmp movsb mov je outsb orl mov ljmp mov repz inc mov add inc adc inc (bad) dec pop fiadd (bad) fimull insb fldl pop outsl (bad) popa jg add jecxz mov lock push setle int3 pop pusha call ljmp sbb mov mov add adc jb xchg xchg sub cs (bad) in (bad) push int3 std cmp lock push int jp mov test mov pushf mov adc push (bad) jmp or sbb int inc pop int3 jecxz stos (bad) mov (bad) (bad) (bad) fiadd pop mov ret sub fist je cmc popa jge cmpsl add (bad) (bad) (bad) (bad) jg insb jle jmp jge dec cmp call jle mov or jmp test mov test cmpsl jb gs (bad) (bad) mov sub push (bad) lcall fdivs pop mov popf aam jge arpl (bad) (bad) fcomip es pop enter and pusha inc cmpsb cmp fistl arpl lods (bad) or xchg pushl xor inc sub (bad) stc xchg movsl (bad) lea out das push movb cmp lret stos sub bnd add jb bound sarl je cld and movsb and (bad) call add (bad) loop lods jmp popa in push inc nop movl incl xor call arpl nop lret scas nop add clc pop decl or call or pushl push push jb pop pop mov jne adc mov dec mov (bad) (bad) (bad) decl or or cmp push and and (bad) cltd lods test pusha test (bad) incl xor mov push adc push inc nop fild push xchg dec or (bad) aaa add (bad) (bad) jg bound xchg ss jge pop fwait dec test mov cmp cmpsb pmaddwd cmp sub mov sub lcall lret push loope mov push ja push cmp sar (bad) (bad) lcall mov hlt fnstcw inc movsb sub cld and imul add in subb stos or pop imul cmovns (bad) (bad) lcall push aaa sarb int or jmp sbb mov xchg cmc mov mov inc mov dec loop xchg xor mov out (bad) (bad) lcall push or subb cmp (bad) cmc (bad) mov adc shl inc or (bad) jecxz (bad) inc fild insb movsb or hlt push xlat clc mov mov xor mov (bad) push cmp push mov inc pop pop mov pop (bad) (bad) (bad) (bad) out test pop int3 jb lret shlb add inc mov movl outsb lcall mov xchg sahf sbb mov add loopne adc add ljmp scas mov xchg hlt scas lcall (bad) lcall cmp shlb adc mov or repnz xor add out lret (bad) ljmp jae cmpsb cltd add ljmp and push add (bad) (bad) pushl aaa decl push stos xchg xor sahf mov and xor sub push mov fwait (bad) jmp cmp push pushf xchg xchg push cmp (bad) dec clc faddl decl mov push mov push out pop xor clc decl mov lahf aad and (bad) push sbb cmp pop bound push cli and ljmp push cmp pop cmp fnstcw fstps mov sub mov sub (bad) call aam sarb lahf insb inc in addr16 es mov push dec cmp sbb (bad) (bad) inc aas and adcl xor call adc test loop sti or and mov insl lret pop jne rol sbb lock fistpl jnp stos sbb push pop arpl (bad) sub incl pop scas xor data16 outsb mov mov (bad) lock scas jb xor call push push mov out sub mov ja (bad) std rcrb faddl (bad) dec (bad) hlt cmp or and cld jg jo (bad) sti (bad) (bad) lcall cmp and jmp xchg je cmc mov negl jnp adc mov mov in sub out jmp fcmovu jge pop fadd mov pop test jg (bad) lcall daa mov mov rcll mov xchg icebp pushl adcb rorb mov (bad) inc push pop dec das pop fimul call dec sub cwtl fldcw (bad) sbb pop (bad) (bad) (bad) (bad) mov repnz fwait cmp fildl lret ja sub loop outsl jge add inc (bad) (bad) (bad) incl (bad) fnstcw pop rcr repz dec xchg jno gs mov pop sub fistl (bad) jmp imul cmp je test popa les lcall fdivr pop idivb (bad) (bad) (bad) cmp js fsubr insl lahf cmpsl pop xchg imulb aas test (bad) push mov mov jae iret pop or adc mov push sbb out push je in cmp xchg and (bad) out (bad) (bad) shrb pushf jg fs xlat insb (bad) jg decl fs (bad) jo (bad) lods cs and and and dec mov (bad) (bad) (bad) jle fcoml pop and mov pop push mov xor mov jbe sub or clc push out sub das mov xor inc daa xor aam (bad) (bad) jmp ret dec aad sub int3 cltd lods shr ds push rcll and and lcall or push test testb pusha mov pop setne cmc (bad) pushl leave sbb mov or (bad) (bad) out inc or push add (bad) xor sub cmpsb pushf push imull enter lcall ss push mov inc xchg movsb xor (bad) notb mov push mov push (bad) (bad) (bad) jmp outsb pop mov xor aaa fnop (bad) mov lock and push add jg cld cmc aad int3 adc dec std call xchg je mov sbb fsubrl clc sub cwtl jl movsb or mov mov ja mov push dec (bad) (bad) (bad) fildll imul add pop inc push rcl jge cmc cld fsubrl js lock fnop mov movsl popa mov out js fs jne arpl push popa rcrb (bad) (bad) mov dec in or pop xchg scas ja add outsb mov ret sbb jmp cmpsb cmpsb (bad) (bad) dec sub xchg or daa ja mov ljmp (bad) xchg sub sub (bad) pushl mov or mov mov mov cld (bad) (bad) call push in lods jp shll int3 (bad) sbb pop pop jl xchg int3 jno adc decl cmp lods push ja fist xlat in cmp dec adc cs pushl les rorb aaa jo lcall jmp add in pushf dec (bad) incl lds movsb sub pop push and (bad) aaa cld jg or xchg mov pop repnz pop (bad) or repnz loopne aad ljmp mov repz test inc and push sar (bad) (bad) jg test pop or es xchg lock popf pop inc pop (bad) (bad) (bad) (bad) jg fisubl sub fs (bad) lods frstor ret out scas xor fsubrl xlat fcomps stos dec add (bad) lcall add test push rcl dec push jae repz test lahf push cmp std push movsl sar inc lods icebp cli cmc push cmp inc dec xor jmp mov cwtl or (bad) decl xchg push adc movsb xchg cmp arpl push mov je test inc mov sbb sub into hlt cld (bad) (bad) pushl or fwait ret mov xlat lahf inc imul push adc cmp (bad) call xchg pusha adc fucom push sbb pop sbb out push jne add xchg xor (bad) clc cmp cmc push jb (bad) and nop xor arpl int cmc mov xchg cmp jbe sub jo xchg jle jge mov (bad) (bad) jg inc add mov jl stc xchg xchg add push (bad) aas mov pop jbe (bad) mov add icebp flds cmp xorb leave jge cmp fwait lock (bad) call cmpsb jp cmpsb jnp mov js add adc mov add pop mov (bad) (bad) lcall pop js xor push loop pop cmp cmp mov addl cmc (bad) pushl sahf insb jns cwtl nop rcll cmp xchg mov daa jp push stc icebp jg dec inc add push jb fcomi add push fcos fwait (bad) pop fdivrs call je pop in fwait shlb (bad) xor mov mov (bad) pushl pop xchg int xchg pop in add dec mov pop xchg ljmp out (bad) lret stos sub xor iret (bad) mov add lret ja mov pop enter (bad) (bad) call repz lods cmp sub rclb xchg std leave movsb addr16 pop add adc pushl hlt add test (bad) inc cmp cmp arpl stos lods and pop fdivr (bad) (bad) incl mov lcall push es fs inc and fidivrl out fildll int3 insb dec sti ljmp add in pop fisttpl shlb (bad) (bad) fcmovne cmp fcomi shl fisttpll scas pop call insl adc out sub (bad) cld (bad) (bad) lcall aad inc dec mov add dec dec sar movsl shrb adc jg dec xchg rcr sub ljmp (bad) (bad) decl add es cs int3 add data16 int3 fisub (bad) and or (bad) (bad) (bad) decl mov pop and cwtl scas (bad) or enter ss push jmp nop or daa sub test shlb jmp add dec rcl and (bad) (bad) jmp adc rorb aaa xor (bad) mov mov popa dec mov mov (bad) (bad) (bad) (bad) fidivr mov xor nop cmp mov lret outsb pusha jge dec push dec inc pop popf inc sub (bad) ljmp andl or adc jnp and pushl cld mov push cmp jb pop je sbb cltd ljmp dec adc mov mov cmp (bad) (bad) decl (bad) pop mov aam and sub adc inc icebp and xchg mov imul cmp push pop andb icebp cmp (bad) (bad) jl mov vpsrad push adc inc push add sub xor xchg (bad) decl cmp dec cmp shr inc sahf inc ds loop push imul (bad) lcall rcrb dec aaa ja mov dec fsub bound pop pop jae pop popf xor sub pop mov jae jo push add loopne (bad) inc cwtl push mov nop popf push ret je std pop push les fmull cmpsl imul sub lds and out mov and (bad) decl push int es int3 mov movsl test sub (bad) (bad) (bad) jmp xchg bound pop cmp das push fwait push insl lret aas faddp sti popa pop int pop ret cmpb mov (bad) (bad) (bad) cmp pop adc cmpsb inc fstpt sub dec out add dec mov jne mov dec pop bound push movsb jge push cli rep xor (bad) (bad) jmp sti sarb cmp sub cmp jbe pop test sub das sar xor inc stos or mov push dec imul (bad) mov mov (bad) (bad) (bad) (bad) std bound jns iret add addr16 add or inc bound loope fdivr loope popf in (bad) (bad) (bad) mov lret (bad) scas jo push adc push inc xor cmc leave (bad) (bad) jno (bad) (bad) push test js add jle and call iret (bad) jg mov and push repz jae lahf jecxz mov fsubrs call push aam mov hlt rclb sbb icebp (bad) (bad) incl iret sahf push pop aaa loop pop or lds cmpsb hlt sub and lcall addr16 (bad) lock movsb jbe cmpsb pusha loopne fs call xor mov add sbbb insb lahf rcr lods and mov adc sub jmp pop ret dec lret pop std (bad) jmp lcall push xor cmp and jno sbb call adc daa cmp stc sbb jmp fcomps out jb inc icebp test adc out mov (bad) mov fdivl jnp sbb add mov (bad) or cmp push mov fwait adc sub jne clc mov inc xor pusha movsb std mov js fisttp aam inc repnz loope xchg dec push add stc or jnp sbb push sbb push xchg inc add sub xlat xor aas aad mov and aad or aaa jg imul repnz sbb push mov fildl xchg movsl pop push sti addl lret pop jle mov xor loopne pop dec clc mov into xchg int3 xor fs icebp ja clc (bad) mov xchg add jmp sarb (bad) mov out adc (bad) cli mov cmpsb mov mov scas pop bound (bad) (bad) stc out dec cwtl roll xor (bad) pop pop arpl jbe mov cmc aam scas cmp loop push rolb xor (bad) (bad) (bad) lcall (bad) xchg push xlat cltd lahf es jecxz dec sub xor jo,pt or xor jbe xor (bad) (bad) (bad) ljmp dec sub pop std pop inc jle jae ja fwait in popf or out xorb cld adc sub imul stos dec inc and lods (bad) cld dec pop (bad) dec (bad) call lss out lods pop int adcb ljmp shrb cmp adc iret and ljmp jno mov pop test (bad) (bad) dec fs (bad) mov lret adc jns jge insl push outsl aaa aas jmp (bad) ljmp cmp insb cmpsl int pop popa dec gs cmp popf mov mov inc sub dec jns (bad) (bad) (bad) call aad rcrb mov stos ljmp adc daa ds ss cmp shrl (bad) (bad) (bad) mov test repz imul or (bad) std arpl mov mov cmpsb add mov decl rorl sahf push in ljmp inc jno mov add cmpsl jmp (bad) lcall pop cmp mov fs mov stos mov lahf out jb outsl (bad) (bad) lcall ja fs jns ficom and jae xor mov (bad) fbld jmp cmc pop movsb pusha inc sub jl test lock (bad) (bad) (bad) dec sbb movsl push cmp cmpsb or test icebp fwait adc in test inc inc jle and imul push fistp idiv push ss ja lods add loopne push imul out (bad) jmp popa std cmpsl shlb pop fisubrl in je sbb sbb lods repz pop ret jle out shlb add test xchg (bad) (bad) incl xor paddusw inc jge gs enter imul (bad) ljmp (bad) jno test rolb jb js jmp jmp inc mov aas loop (bad) push std xor jo mov out js insb xchg aaa popa sub xchg (bad) (bad) lcall sbb or icebp mov cpuid pop (bad) (bad) rcll ja ret fisub jmp adc jle (bad) (bad) int3 sahf mov nop inc (bad) cmp (bad) (bad) (bad) cmp sub out mov xor xor pop arpl push dec mov push cmp and (bad) (bad) jg (bad) jb jg sub lock pop scas xchg (bad) cli sarl push gs pop cli and cmc (bad) inc lret popf and sbb jecxz nop mov das clc out cld nop (bad) sbb mov xorl dec push (bad) (bad) (bad) lcall mov adc scas xor push test mov lods stos xchg clc scas xor enter (bad) jg and and jle (bad) enter negb (bad) fldl iret cld cmp shl or (bad) (bad) lcall mov and bound outsl pop ret jl int3 jnp cmpsb push sub aam fcmovbe test and xlat jns sbb mov (bad) (bad) (bad) jg mov fnstcw popa cli xchg fisttp mov mov popa xor aas lret (bad) (bad) (bad) call add lods add cmp jl sub stos fadd stos es lods sub jl daa jl (bad) (bad) (bad) jmp and lods movsb rcrl and test xchg cmp push adc mov (bad) mov rorl mov xorl fild je test or cmp push add push mov sti mov loopne incl adc aaa inc repz rcr xor out stos aaa mov call or fdivrp mov push jb jns dec out fbstp mov pusha dec cltd and hlt enter push and popf fisubl mov pop inc cli push jo jb add mov mov shlb jnp and out mov cmpsl lods out into pop push ss daa fptan pop out pop (bad) (bad) (bad) lcall mov out xchg es test xor xor sub in xchg daa (bad) dec rorb cmpsl aam inc out lret sbbb (bad) (bad) (bad) jmp dec arpl jp movl stc sbb or sub lock mov xor aam lahf in loopne xor das dec inc and inc pusha add mov mov pop dec notb addr16 enter (bad) lcall cltd push sbb push and mov xchg add pop mov or (bad) incl inc popa (bad) aaa loope cs fwait jne test ja icebp mov add (bad) out (bad) mov add fsubl pop in jp jecxz into xor (bad) (bad) (bad) decl stos idivb mov and (bad) xor mov or imull insl cld (bad) (bad) call lret xchg clc dec push sub jns cmp gs hlt insb and adc mov cwtl imul cmp (bad) xor fcmovnbe xor push test imul (bad) (bad) call mov notb insl dec adc aaa int lahf dec loopne incb hlt xchg mov into out or jle (bad) (bad) (bad) (bad) mov test frstor jle xorl adc jecxz mov imul movsb lods pandn or jmp mov (bad) je add sbb mov xor ja xchg xor mov (bad) ljmp push inc lret mov inc loop fidivr loop mov aaa (bad) mov movsb mov xor popf cmc cmp push pop cli push sbb lcall (bad) cli leave mov (bad) clc mov (bad) pop enter jecxz lea (bad) (bad) ljmp aam jg and movsb sahf jge aas or int jo inc nop sqrtps enter jmp ret mov cmp rcl mov dec pop cwtl mov xlat sbb jmp repz lret loopne ret xlat sub cmpsb outsb dec arpl (bad) (bad) mov cmp cli daa loop sti fdivrl sub addl mov (bad) ljmp inc out pop mov loope mov jb mov aad mov cld faddl xlat lahf rol (bad) jmp xchg mov movsb adc stc les call aaa and rorl (bad) es add fimul je pop sti cmp (bad) (bad) (bad) decl push call hlt mov fnop test pusha (bad) jmp cli es (bad) (bad) jmp push imul add cmp and mov jbe and mov pop das (bad) (bad) (bad) call inc adc lods push add dec fnstsw mov sub add push add js stos (bad) in fwait xor push ljmp mov mov in in cmpl (bad) (bad) jp pop fistpl mov mov aas call iret mov (bad) (bad) cmp int3 test xchg notb (bad) incl fstpl loopne sbbl cmp (bad) decl add (bad) ja in out jb jmp push int3 mov cmp (bad) (bad) (bad) call fcomi mov mov rcrb clc dec push lret xlat add mov and jl movsl popa fwait sbb mov outsl dec in push jge (bad) in pop xchg dec dec sarl lea (bad) (bad) (bad) jmp xchg mov js stos xor xlat xchg xchg ljmp push cmp inc xchg in pop mov ljmp xor xchg mov adcb lds cli in jb (bad) (bad) ljmp and ja xchg xor push push sbb in jae xor test bnd (bad) (bad) (bad) pushl inc sti ret lcall lods ficoml stc les jl or inc jg bound incl jp lock in cmpsb (bad) (bad) std add adc loopne in cld jg or (bad) mov enter adc (bad) mov xchg adc repz lcall jp mov (bad) decl mov jnp repnz and and and jns pop inc push and (bad) call xor or xor stos dec push insb cmpsb jns push jo ret test clc xchg mov (bad) (bad) call inc jp xlat in fwait icebp bound fsubr popa sahf pop fscale xor push dec gs (bad) (bad) inc (bad) jnp addb cmp cmp les mov into or rcll mov call pop pop pop inc stos test shrb data16 cmp cmp adc add dec inc mov test (bad) ljmp pop push fldenv xchg and loop in cwtl int3 int3 leave into jge (bad) (bad) jg mov fdivrl pop rclb test stos jp xor call dec cld mov push jp cmp movsl sarb rclb daa push ss jne movsb inc cltd ss adc mov jbe fdivl into or adc or mov jle push pop cmc pop mov jns push repnz incl (bad) pop push adc or xor pop mov (bad) outsb lds pushf jmp jp fidivrl arpl sub fdivrs cmc xorl (bad) mov jp outsl sub or addr16 adc cmp inc mov (bad) (bad) (bad) incl subb loop push hlt push pop ljmp pop (bad) mov jg (bad) call icebp fistl dec outsl shrl mov mov ljmp lods jmp mov jl jne lock repz (bad) push mov and pushl fld xchg or ror cmpsl not pop in xchg outsb lea (bad) push mov out (bad) mulb in xchg xchg lock cld imul std xor (bad) (bad) jmp or mov inc xor aas fisubrl jmp jecxz test jno inc add call out ljmp add fimul mov fildl mov (bad) ljmp sti lcall movsb adc inc in or (bad) sub adc push mov insb loopne pushl fldl xor and daa add sahf sub mov ljmp dec cld loop dec jno fnstsw fidivrl add bound int mov nop (bad) (bad) (bad) jmp das xchg cltd enter push neg je pop inc pop aam sub shl jnp out sahf scas jo sub icebp (bad) (bad) dec push daa add cmc mov test adc lods in rolb lcall pop test fsubrl fstp nop clc (bad) int3 xchg jmp out fsts jo sub xchg pop ficompl std icebp mov cmp call (bad) fild out push or cmp adc dec (bad) (bad) mov jecxz je (bad) mov jb pop sar subb out (bad) (bad) lcall adc sub jmp mov push xchg rep je nop ret js ja sbb call repnz push pop pop sub ss jg call loopne add jg or inc les xor add movsb int3 adc gs (bad) (bad) (bad) mov lcall popf inc arpl sub les mov aas push mov jmp iret adc pop popa mov addb xchg out ds hlt (bad) incl and out dec sahf mov inc cmovs push fcompl pop (bad) clc (bad) (bad) incl pop (bad) ja imul sbb or xchg lahf out jge (bad) ljmp push push cmp mov mov inc cmp lds pop jbe icebp mov mov out xor fsts movsb pusha stc mov ret je clc mov out xor daa mov and js dec movsb lock sub push push pop xchg inc fistl mov (bad) (bad) (bad) ljmp test aas sbb test (bad) xor dec and mov jmp and push mov daa mov cld (bad) (bad) ljmp mov add jg xchg in inc mov int3 xchg cltd ret clc mov cs in mov ljmp sbbb xor arpl movsb push loop inc addr16 or (bad) (bad) (bad) ljmp jle sub pop and scas sbb xor sub (bad) call push adc pop lock imul sbb mov test cld call std pop adc jg or and out xchg insl pop mov js or cmpsb xor (bad) incl in pop jl inc and inc push orl jg std pushl dec dec sub aad (bad) mov ljmp xor (bad) call mov inc push (bad) movsb sub hlt pop sbb outsl popf xor (bad) outsl popa icebp call jne mov adc test sub movsl xchg sbb inc imul add pop mov test cmc pusha xor nop sbb mov push xchg inc aas and push aad (bad) cmp push mov xlat push add (bad) (bad) inc das dec mov or rcl sarb es daa push pop sbb cs aam (bad) (bad) incl dec into jo sbb imul not fdivs divl stos aaa sub call sbb jne mov push push or add js mov scas sbb jp sub add fwait sub push ret (bad) lcall lcall xchg stos cmc sub imul xor xchg push icebp cmp (bad) (bad) (bad) pushl in pop adc xor xchg sbb lahf ror out andl out pop test decl outsl std jns mov adcl (bad) (bad) (bad) call sub fistl mov xor jle xor sbb adc sbb (bad) (bad) ljmp rcll jp add sub movsb sub and sub rcl cmp (bad) (bad) (bad) (bad) jns outsl mov push mov cmovge inc sbb mov sbb addb (bad) ljmp jno scas push mov adc aas xchg sti rcrl pop dec (bad) fldl xor inc (bad) es dec cltd push and cli (bad) in jbe jb pusha fildl aam les cmp pop add xchg (bad) (bad) (bad) (bad) cmp pop and imul push paddsb push in je jae pop cmpsl mov adc jo mov ss xchg idiv jno cld dec mov adc push div push xchg scas adc (bad) lcall sbb xchg dec mov adc aaa adc iret fwait cltd (bad) jp test je (bad) (bad) pushl arpl icebp movsl dec clc arpl and fildl repnz dec add icebp cmpsb loope add jmp out fwait xorb add lcall (bad) mov outsb frstor add sub jno push push mov (bad) (bad) (bad) inc (bad) movsl cwtl jo lds sahf outsb hlt sub std cmp stc jno xchg inc scas sbb inc clc fcomp fisttpll (bad) ss or inc xlat outsl and (bad) (bad) mov sbb mov mov (bad) (bad) (bad) incl mov add mov xor pushf adc cltd mov rcrb incl mov repnz mov lea xchg daa xor fucomi dec mov (bad) ljmp or push pop lds fsubrp cltd cmp (bad) mov (bad) incl push inc addl loopne data16 dec dec ds (bad) lcall imul outsb sahf jae in dec popf jp call xchg mov inc jb pop lock cmp fcmovbe int3 inc (bad) ja pop cmp imul (bad) (bad) cli aam mov (bad) (bad) jmp loope fst scas sbb int test or insl mov pop fcmovnu mov jmp mov (bad) dec out cmc shrl push mov loopne sbb xchg dec add pop dec jns mov mov call jnp fsubl les xchg and repz mul (bad) mov or pop xchg arpl push arpl or cli stc xchg dec add int (bad) (bad) dec sti pop mov movsl jmp mov cmp jnp test mov pop mov or sub outsb push cmpsb mov xchg pop mov popa enter mov dec scas pop and sbb mov mov sbb cmpsb out mov ja (bad) (bad) ljmp shll xor insb cmp fidivl or lcall cld sbbb inc and xor enter mov pop lods imul stos jmp xor pop cs movsb jge adc cltd (bad) jmp loopne andb (bad) (bad) jmp jns lods add adc (bad) pop and leave addr16 xor inc arpl inc imul (bad) (bad) call stos rolb mov pop decb sbb cwtl jl (bad) (bad) lcall pop das (bad) or dec mov subb out sbb jno sbb cli (bad) jmp cmpsl pop sbbb popa cmp in or push cmp into add (bad) (bad) dec xchg int3 cltd adc mov test in mov lods (bad) and jmp fsubl fs jno enter jg clc (bad) (bad) (bad) decl lods mov data16 pop ja cmpsl jmp lret add iret mov (bad) decl js jns ret adc dec add sub stos imul bound inc dec and (bad) pushl cld xchg les dec stc sahf jecxz cmp dec rcr popa or out idiv jo dec (bad) jmp std sub mov pop imul cwtl loopne adc lods (bad) (bad) (bad) jmp jns push or flds dec fnstsw shr cmp sar cli loop incb ret mov cmp jbe inc stos xor mov (bad) (bad) pushl ret (bad) cmpsl mov fmul cli push add negl push dec popl or jnp mov js sarb push push (bad) decl inc or clc (bad) in lret imulb mov jl lcall or sbbl xlat sbb or cs jecxz fnsave fidivl dec pop ret xchg int pop sarb (bad) (bad) (bad) incl lock or (bad) loop mov das daa dec mov cs mov jmp pop push (bad) (bad) (bad) (bad) stc pushf insb inc and hlt repnz (bad) inc add sar pusha rcll cmpps aad test (bad) (bad) decl xchg sti lret imul shrb dec fs (bad) (bad) (bad) decl repnz mov xchg inc cmp cmpsl nop neg and mov loop test dec and push inc (bad) (bad) (bad) cmp lods cli jno push aaa xlat adc shll (bad) (bad) (bad) call insl push pop pop ret xchg cmp sub jo jmp lret mov add outsb repnz (bad) jmp sub and ret pop push scas push nop nop and dec clc inc inc and ljmp out (bad) jbe and lcall dec add ds cwtl fstps xchg jbe ret sti xor cmovae jno jmp cli cmc mov xor pop scas and xor ds lcall sahf mov dec inc lahf adc insl loop (bad) lahf cmc or in adc in (bad) (bad) (bad) decl stos arpl push dec repnz das cmpsb cmc adc mov jb outsb pop push (bad) fwait xchg setnp pop add cld (bad) ljmp cmp mov mov test in adc (bad) add movsb cmp push mov xchg pop dec mov jmp mov ds mov (bad) (bad) (bad) lcall sbb loop sub (bad) mov ret jae or lods aad imul mov (bad) (bad) (bad) (bad) cmp add popa or cmp pop movb sub sbb fsubrl stos pop into push (bad) (bad) (bad) ljmp sbb lods pop cmp sub lds sub lock add das addb pop inc lock dec xor ret (bad) (bad) incl or test in out mov into in das icebp pop xor xchg aam std es mov fnop (bad) decl dec sub pushf test push les loop pusha pop out mov (bad) mov cmp xchg and stc sbb (bad) mov repnz sahf bound inc (bad) aam (bad) (bad) decl push xor sbb insb loope leave lds xlat jg add (bad) (bad) incl repnz addr16 pop sub push ret shrb push xlat dec out dec repz push test in adc lret and xor mov jl jmp call es pop xor xchg stos lcall sbb inc cld idivb shll (bad) (bad) ljmp shrb jle mov decb loop inc mov xlat or outsb or cltd xor inc repz push aam ret popf jge push sahf cld or jno mov cld sub (bad) incl inc cmp mov dec test dec cmp out fsubs add cmpsl mov aaa (bad) pop xchg out mov daa or movd or jl fwait mov dec lds mov sahf movsb lahf mov jne push dec pusha aaa add popa mov (bad) (bad) call add mov mov repz push mov out inc mov add sar jmp pop fst fwait adc mov mov insl jp (bad) mov mov ljmp mov add popl (bad) pop and js stc fld popf inc push nop inc test call pushl and push xchg mov (bad) mov add jb pop pop cmp (bad) decl add dec iret jle xor adc xchg xadd pop in mov xor leave or clc (bad) (bad) jl out les stc add dec sbb das sbb scas adc (bad) (bad) call test insl xchg pop (bad) fdivrs das lret lods call adc mov pop enter pop hlt ficoml sbb js xorl jecxz mov aad jb hlt (bad) lcall js,pt das xchg loop rcll push cmp in sbb ficom int adc (bad) cmp incb and pop pop and fnstcw ss jmp mov and sub push sahf (bad) (bad) ljmp cmp sub pop nop dec cli movsb and test arpl inc ljmp (bad) jmp ja ja and test xlat gs repz push call pop jl xor (bad) ljmp adc test bnd lret push aam cwtl outsl pop ret xchg or call loop mov shlb mov pop int3 addr16 (bad) (bad) jmp inc mov mov repnz dec movsb cs fidivl cmpsb addr16 fcmove es out js stos hlt pushf pop pop imul dec push mov and pop adc mov ja fstpt jmp pop enter scas mov push (bad) aad fdivrs mov rcrb mov mov mov lock and or jge push dec aaa (bad) pushl repz lret xchg mov icebp adc cmp pop xchg lock push arpl lds xchg test mov js jno lcall inc cld roll mov or movsl outsl cmp bound mov incl mov jae arpl jnp (bad) jg add clc fadds int3 and sbb loop mov (bad) (bad) mov mov sbb jbe push ret pop scas pushf mov pop into push sub roll pushf aas mov mov inc push inc mov std push mov stos (bad) (bad) (bad) incl push arpl adc sbb pop dec les pop sbb adc jg and into out dec and daa ljmp jmp insb xor mov dec lods pop xchg inc push leave mov ret mov (bad) sbb std (bad) (bad) (bad) jmp add incb mov xchg xchg or xlat mov or fwait jbe outsl (bad) (bad) (bad) push adc xorl stos sub pop aaa lods jl push xor in lcall (bad) cmp adc inc fstpt pushl clc pop xchg sbb ljmp (bad) (bad) fidiv xlat sbb pushf jae pop stc lea movsl or adc inc jg hlt (bad) push add mov mov push inc cmp sub sbb (bad) (bad) jnp inc dec or pop mov jg mov stc or std adc das movsb inc aaa (bad) (bad) (bad) jmp sbb mov mov add and mov (bad) mov outsl ljmp add mov mov adc xchg fcoml xchg aas xor pop cltd clc (bad) (bad) call aam push das pop xor sbb rolb inc inc mov sub xchg mov (bad) (bad) ljmp jns pop mov int3 cmc lea inc push jp jb lds cltd (bad) (bad) (bad) jmp aas sbb ret push out inc clc cli inc jmp jle jmp and dec mov test (bad) (bad) (bad) fstps xor pop sti jl push cltd (bad) jo cmpsl inc aad shlb push in das fbstp push lea push and pop mov iret mov pop sbb jp stc push inc jo mov sbb add fiadd and jno xchg (bad) (bad) mov fsubrs or jle je xchg imulb decl push mov push pop lcall jo loope (bad) rep lret pop loopne jl cmpsl xchg (bad) (bad) (bad) incl cmp cmpsl leave sarb adc cmp ror adc popf mov (bad) decl sbb into dec js sbb fidivr sahf ljmp cmpsb test popf adc (bad) (bad) (bad) jl mov adc lds xor cmp outsl add imul xchg cwtl cmpsb sbb jmp jle xor jbe and cwtl inc mov (bad) (bad) (bad) (bad) (bad) decl jmp push mov xor test inc ja idivl push insb pushl cmpsb popa outsb mov call sub mov ret (bad) (bad) (bad) ficoml leave add jge aad cmp xlat add mov xor sahf and (bad) sti adc popf aas xor cmc aad repz faddp jb daa xchg mov (bad) (bad) (bad) incl call or mov popa jne mov daa hlt pop mov aas nop inc test (bad) (bad) call push mov mov loopne adc insb ja jne add fisttpll (bad) or in and (bad) (bad) pushl push lcall push jne loope or out int3 push xchg mov mov (bad) (bad) lcall and sub push fcomp pop pop inc sub add in adc es inc loopne and movsl aaa lret (bad) (bad) (bad) mov (bad) imul lods pop push cs sbb in cltd daa cmp jmp (bad) incl aam scas repz shll mov stos add xor pop hlt (bad) call mov mov std fcoms (bad) pop xor adc rcr push lahf subl daa mov aad add rcll shll adc dec (bad) mov (bad) (bad) (bad) lcall mov pop cld stc push adcl jae and dec inc sti add (bad) (bad) (bad) incl (bad) pop add gs ja lods test push subb mov xor inc xor fwait scas out lea data16 inc push (bad) jg mov and scas leave js (bad) xor bound xchg (bad) jg (bad) cmp rol jecxz pop movsb ja xchg lret xor (bad) xchg jmp inc mov incl dec in xor test cmp inc andl push push stos rorb (bad) lcall mov pop pop mov pusha cli mov inc push in (bad) (bad) (bad) (bad) cmp jl mov sbb imul outsl (bad) xor je jnp lds xchg dec (bad) (bad) decl mov dec push fcmove out mov inc sbb (bad) push cli ss (bad) (bad) call popa mov pop xchg popl nop shrb nop popa mov (bad) incl (bad) xor xor mov xor mov pop fidivl pop neg popf jb and and ljmp dec pop jno test divb into ja add js inc icebp mov in mov (bad) (bad) decl and pop ss (bad) pop loop push sbb or jno fiadd (bad) (bad) (bad) das gs mov ljmp pushf scas icebp ror mov call push xchg scas bound pop mov insl in jecxz rcrb xchg stos stos or jl mov pop pop bound test idiv insl push shrl xor mov pop add cmp jg gs cmp ror ja mov adcl roll xor adc dec test pop (bad) (bad) (bad) (bad) fdivrl and inc inc stos and iret mov xchg sbb sub (bad) (bad) jmp icebp scas mov mov mov dec cmp fnstsw dec mov imul incl cmp outsl jp (bad) xor loopne jp jle dec mov lds lcall clc hlt mov out sub sbb push jne mov clc sbb xchg jecxz mov test (bad) jg or rcrb push fmul jecxz xchg movsb inc cwtl (bad) ljmp test and cwtl loopne cld mov xor add pop clc inc (bad) (bad) (bad) jmp push xchg bound popa int idivb mov push jno rolb (bad) (bad) ljmp add and push loop int3 xchg pop lods and adc add (bad) pushl jae xor arpl imul popf fimull jnp (bad) mov adc fild pop (bad) jns xchg xor popf pop enter lock (bad) (bad) incl xor lods movsb cmp in push mov call sub sub (bad) (bad) (bad) jl cmp and sub int3 js adc pop fucomi xor mov cmp pop loopne imul les pop les dec sti data16 (bad) (bad) decl dec cmp pop xchg sbb and cmp cmpsl mov or mov jae cli sbb (bad) (bad) (bad) ljmp push xchg scas jb insb outsb jno fxch sub out movsb and das mov xchg ret or (bad) (bad) (bad) incl call cwtl xchg fs repz inc sub sar push dec add inc test sub lea repnz enter dec or fnstsw add movsb inc (bad) (bad) (bad) push or jb sbb mov lret inc aam push aad rcr cld adc cmpsl outsb or pusha ljmp xchg setl and cmp adc iret add cmp popa int3 add (bad) (bad) cli push frstor dec scas insl jbe test les xchg cli jg add fcmovb cmp mov push mov sub jae sub jns mov xor sub mov ljmp fbld jnp cmp lahf pop push cmp ja xchg xchg ljmp pop test (bad) (bad) (bad) ljmp mov lret add and ret stc stos inc jp pop cmpsb pop dec enter cmp (bad) call sub test lods sbb pop mov test add jbe (bad) (bad) jg pushl lock loop jecxz outsb mov cli push fdivs or xor (bad) fldpi xor pop (bad) gs (bad) arpl pop cltd mov pop pop sbb clc fnstsw (bad) (bad) cld xchg (bad) adc jl (bad) or cld adc (bad) (bad) xchg mov inc outsb pushl das mov inc inc xchg cmp jbe xor sub sbb (bad) ljmp dec or push jg rcrl pop roll icebp sub fs (bad) (bad) iret mov sar jg decl stos les mov cmpsb jnp cmp xchg int hlt jmp and (bad) ljmp daa inc jae,pt add (bad) loopne (bad) cmp js (bad) (bad) decl fsubrl js xor jmp aaa test imul cli (bad) (bad) incl insl aaa test mov add jns push sbb mov stos jg ljmp in push nop imul mov cwtl shrb jne enter (bad) (bad) pushl and movsl jno (bad) pop mov xchg xchg lods and outsb pop repnz inc stos xorb jns lcall sbb subb sub mov and sub mov (bad) hlt or aad sub push mov adc jecxz mov add sbb mov imull push loop mov jecxz push cmp add out and (bad) (bad) in std test add cmp dec dec and pusha jge jo fcmovnbe sahf or jnp lcall leave mov mov aas dec mov sti ljmp (bad) (bad) jmp and mov imul mov inc out movsl insl hlt cmp cmp cli (bad) (bad) out lock inc sbb (bad) out mov js and push jno or pop xor push in (bad) jb mov test or sub cmc rcll cmpsl int3 pop aam sahf push cmpl cmc je (bad) (bad) inc divl int and test mov std (bad) notb aaa (bad) jmp loop out sbb add inc pop mov cmc mov jg (bad) (bad) call lds cs imul sbb movsl (bad) loope icebp pop lods out xchg add pop arpl movsb ljmp (bad) push test add lods sub popa pop arpl imul loope (bad) fbld or mov test mov pop mov push cs push (bad) (bad) (bad) call lock loope xchg cmp scas jmp xchg mov test and pop repz mov dec das sar mov or fimul dec mov dec cmpsl (bad) (bad) (bad) incl mov mov xor jo cs jo dec xorl lret (bad) (bad) mov dec dec and inc xor and sbb ret push aas cltd mov mov jb (bad) (bad) lcall lods clc jg jecxz inc pop push or pop in xchg adc and xor clc inc mov ljmp add (bad) cmp mov xchg test int es add jg xchg divb inc dec jnp xor (bad) sbb xchg (bad) (bad) (bad) stc (bad) lea ds inc xchg cmp mov cmpsl cli movsb adcl jecxz pop shr es (bad) (bad) pushl mov jle (bad) cmp push xchg pushf ljmp xchg popa out test add ljmp clc xor insb adc lcall adc add sbb mov (bad) (bad) (bad) jmp mov and mov daa jecxz notl xor pushf jmp js (bad) or xor mov (bad) (bad) (bad) pushl incl mov mov xor (bad) mov mov inc imul sbb or call es mov mov push fnstsw mov cmpsb mov aad aaa sarb push in dec aad (bad) dec lods mov call jbe pushf pop xchg adcl ja add jbe pop mov pop cld (bad) cmp xor scas and mov outsb mov pop test or mov lcall mov add imulb push lret mov popa xor js out iret int pop (bad) loopne (bad) decl pop outsb pop mov jne repz pop cwtl jge stos into pop (bad) (bad) call ljmp fcoml jno pop sbb js sub jg adc mov pop fwait ret out add xchg fwait xor cld (bad) mov push movsl test stc je fucomp ret jle pop sub xchg xchg js pop pop adc fcoms sbb pop insb inc nop adc imull cmp test sbb xchg sbb sub data16 fprem cld mov rolb out push mov and fidiv sbb (bad) (bad) jmp lcall jb ljmp inc nop jbe addr16 jecxz pop add jmp jle mov cmp adc in sbb mov ja or push (bad) lcall (bad) adc cmp aad or mov mov aam fcoms dec and (bad) (bad) dec dec push lahf sti push cli sbb cld jle mov jae adc adc inc clc push jle mov (bad) mov push lcall jno pop xor jecxz pop xchg mov cmp jne (bad) (bad) (bad) mov xor jmp int3 xor dec es into fcomps nop mov icebp sub (bad) call jl jmp (bad) out inc loopne pop lds js xchg mov lcall (bad) scas roll hlt cmpsl xchg jl xchg dec (bad) cmp addl bound cmp ss das jmp jmp lock les loope xchg pop call jmp mov daa insl pop clc popf pushf lods lcall adc and jne insb es push clc mov (bad) (bad) (bad) pushl stos push ret dec testb ss pop adc ljmp sbb (bad) jg lcall mov (bad) lret adc add mov push pop (bad) (bad) (bad) fcomip stos jnp lcall jne inc stos jae mov repz push mov data16 (bad) (bad) jmp mov hlt jo push test and push shll (bad) mov (bad) decl dec repz enter loopne (bad) push (bad) out les mov dec fidivr sub pop jg (bad) jmp cmp inc sti cmc add inc adc fmul inc cmp (bad) (bad) decl or outsl pop inc add bound adc xchg dec and movsl jno pushf js aam adc (bad) (bad) ljmp sahf sub shrb cltd inc and pop std xlat or test pop inc (bad) mov jns jb enter cmp push insl or repnz (bad) mov fs or inc push push rcll frstor loope xchg inc fs (bad) (bad) (bad) call outsl push jmp fsqrt adc incb lret sub sbb mov in and jmp sbbl push cli xor push pop jg mov lea cs stc cli outsl clc mov inc mov xor inc or lcall push insb mov push cmp decb popf sub pop in (bad) (bad) call adc xor mov in loop add mov loop enter (bad) (bad) (bad) ljmp lret scas sub rcr cld push sub jge push mov or lret mov jnp sub in ficoml xor int3 (bad) je (bad) sub push cmc or ss inc jne (bad) (bad) (bad) (bad) mov test mov dec and dec mov and mov fdiv test xchg jns (bad) (bad) incl icebp out repz push cli cmpsb inc xor push je repnz xor add cmp lret cmp cmp jecxz (bad) (bad) fildll int3 movsl xchg push jge repnz jmp movsl sub add push fwait rcr fdivl (bad) (bad) ljmp gs sub push in adc mov mov enter les lcall (bad) js cmp cltd insl nop pop and cld (bad) cmc les imul ja (bad) xlat and cli stos inc ficom data16 insb inc adc call inc jns das mov imul push lret xchg sbb pop sbb mov (bad) (bad) (bad) jmp inc jg test js fsts xchg test adc cwtl fdivrs in adc test (bad) (bad) (bad) (bad) mov (bad) cli popf dec adc dec inc mov daa pop jae loope xor (bad) jg fisub js movsb xchg addr16 rol (bad) test xor mov shl lret xlat (bad) (bad) (bad) call xchg sar push jne adc fbld popa repnz sub ss adc adc outsl clc (bad) cli add lock push add sbb xor call mov pusha (bad) (bad) (bad) decl xchg mov lahf lods and jno jo test cltd inc test xchg addb (bad) (bad) (bad) (bad) lahf cltd dec imul out loop xor push lret aas adc mov add (bad) (bad) (bad) ljmp loopne es into sbb push add scas call (bad) ja sub outsl jbe (bad) decl inc shrl sub mov test and (bad) dec mov dec in mov stos clc cmpsl (bad) int stos ret scas stos or inc pushl pushl or sub stos pop xchg (bad) pop repz mov mov xchg (bad) (bad) (bad) jmp rcll ret inc mov or jmp call xor es sub dec push mov std jae jo pop (bad) mov xchg pop jmp push sub (bad) (bad) mov inc pop outsb mov scas lock cmp insb inc imul push add cmc leave and mov sahf mov nop shl mov mov (bad) test shrl sar les (bad) (bad) ljmp sti hlt pop dec incl int mov mov popa or (bad) ljmp pop sub and sub adcl movsl das shrb stos sbb cli add sbb js je (bad) (bad) (bad) pushl xor xor arpl add data16 fbstp sbb push mov inc cli pop lcall lcall cltd lock adc shr mov pop xor (bad) (bad) (bad) (bad) pushl lahf out or jl push (bad) jb xchg add nop shr (bad) inc mov (bad) pop push mov addr16 gs jo out (bad) (bad) (bad) pushl fs push mov loopne shr test lahf (bad) ja push aas out idiv (bad) (bad) (bad) js inc scas scas xor stos lea cmp fs scas (bad) mov insl adc dec movsb lret mov mov mov cs sarl movsb add es (bad) jl pop (bad) incl bound push and hlt pop ds xchg add (bad) (bad) incl test xchg (bad) adc mov lcall cmpsb out out mov mov je shld imul (bad) (bad) call nop mov outsb test insl cmc jecxz aad out pop cmpsl aam cmp xor (bad) (bad) (bad) cmp rcll add ja mov movsb imulb xlat scas lock pop std ret mov (bad) jmp adc xchg sbbb and pushf bound fbld jmp xlat sub scas pop sub push lcall push cld lcall cld xor mov jg jge pop dec pop pop (bad) (bad) (bad) incl jb sbb movsl dec shrb stc push push shrl mov mov mov (bad) cld not mov insl jl ss ljmp mov popf and (bad) jmp push movsb jmp pop cmp ja orb mov jne hlt popa imul (bad) pushl test imul and sti sbb movsl out fmulp xchg cmp decb in icebp mov inc dec or std movsl cmp add xor incl xchg inc jge cmpsb dec aas push clc add (bad) jmp cltd lcall in loope add std fwait out (bad) (bad) (bad) jg dec leave cmp out cmovle sbb pop mov popa in cmp mov mov negl jmp xchg movsb lcall fidiv mov test sbb call mov fisubrl out cmpsl lret daa (bad) aad add adc xor or test inc add jle jge out push cmp adc sub sub imull test fild pusha pop notl adc jg mov sub stos arpl jl int3 dec pop fwait cltd dec in inc sub lock insb mov ret fs hlt dec mov loope pushf (bad) (bad) (bad) (bad) fist cmpsb jmp scas cmp (bad) xchg dec cmp (bad) or bound xchg xor out pop push fildl (bad) (bad) decl pop pop je inc fsubrl icebp popf jns jnp xor dec (bad) mov adc mov pop and icebp fnsave pop (bad) mov (bad) or ret pushf sbb sbb add call enter mov call dec sarb (bad) dec out sbb lret xor lods mov ja clc (bad) jle lea test push fisub aaa add (bad) xor and mov push mov xchg adc mov arpl mov (bad) decl xchg mov (bad) cmc mov xor sub sub dec sbb icebp mov (bad) outsb or fsubl mov shlb cltd jns (bad) (bad) decl popa or jmp insl ficom clc sbb (bad) (bad) lcall or sarb (bad) call out out add pusha adc dec push fldcw (bad) (bad) out cli and aas fisubrl or pushf imul imul orl hlt outsb (bad) (bad) (bad) jmp hlt out xchg dec fsubs outsl rep dec (bad) ds sar insl pop mov push aaa (bad) (bad) (bad) (bad) mov aad dec push cld ja insl scas pop cmpsb inc fcmovbe dec xchg shll scas imul incl xchg nop rcll ja push cmc jo jge or outsl mov mov or jg pushf push sbb pop loopne cmp lods std rorb stc or sti push inc mov (bad) sbb (bad) out mov xor imul push jl outsb push cltd pop push outsl cli sbb out clc rcrb sub or outsb outsb (bad) cld aaa add (bad) pushf push cmc inc stc push cmp out lret mov jg ret (bad) in mov fisttpl dec insl outsb stc cmpsb sbb cmp lret dec icebp mov call mov sbb push sub popa inc popa jmp sbb mov dec xor push test stos push jle (bad) mov fisttpl (bad) (bad) (bad) jg sub xchg push mov flds repz pop dec pop mov iretw inc inc jmp jecxz je mov incb mov and (bad) (bad) jmp mov das negl cli mov jp jmp adc mov sbb (bad) (bad) call aaa out or pop pop test xchg push js jbe aaa ret xor hlt sarb (bad) (bad) dec adc arpl into cmpsb fist out stos push enter fidivl sarb pushf jmp cmp or rcrb movsl mov and fdivs in data16 std lret sbb (bad) jmp ret or and loope inc push dec lods jmp push (bad) out jmp xor icebp sub rol cmp loop stc dec addr16 mov (bad) (bad) call js outsl test loopne adc mov push jno xor and pusha or or mov xchg sbb cmpsb add jge (bad) (bad) lcall xor lahf hlt jmp ret jg mov mov stc cmp pop xor (bad) (bad) (bad) push ja sub rcl (bad) xor jo mov ret push shll arpl xor iret xlat jle (bad) incl icebp xchg mov jle ret dec paddusb fnsave cmp (bad) mov pop cvtdq2ps jnp lret sub (bad) (bad) fist add add mov fwait adc mov pop inc and jns inc (bad) (bad) (bad) call clc and roll or cmp dec jno xor imulb mov (bad) (bad) decl jmp lret ljmp mov pop mov (bad) jmp mov scas mov lods ljmp sub (bad) lcall out (bad) (bad) (bad) decl push loop lret and pop daa shll inc adc and pop or xchg insl rorb cmp in shrl or addr16 push adc stos xor leave sub add mov add das pop and mov xor sbb je sar sbb stc xchg jecxz jnp (bad) mov add pop out paddusw sbb outsl xlat xor (bad) (bad) jge loop andl cmpsl xchg ss fist iret pop xor lock arpl (bad) (bad) (bad) stc loop lret movsl mov adc cwtl leave outsb adc adc (bad) (bad) mov insb ret sbb (bad) out hlt rolb rclb jl into push add enter fucom xor jmp and (bad) (bad) (bad) (bad) cmp shlb jno out stos mov fadd std sub (bad) or ljmp fld clc pop cmp sub adc jno jl (bad) jno cmc xor daa test leave (bad) (bad) (bad) pushl inc aad mov gs fnstenv dec addl pop fcomip sbb fdivl scas decl xchg cwtl rorb push out xchg in fiadd pop loope pop jae negl std (bad) fcomip in mov inc subl aam jl dec push jg jae add push je mulb lcall push cld xor dec nop fs test push pop out dec push movsb icebp or xor and out lahf (bad) (bad) (bad) call add in sti sbb js fstpt jnp (bad) push lahf leave xor pop stc scas loope inc sbb mov (bad) fucomi dec sub daa inc sarl sbb insl xor fisub test xlat movsb out (bad) (bad) call sub sbb (bad) sub mull mov push cmp inc std cmp repnz cltd rcl repnz mov mov mov or jmp xchg bound movsb ret int sbb adc pop scas shl fwait (bad) (bad) (bad) mov dec fnstcw orl dec ret loopne data16 js push jbe hlt enter or pop rorl decl fdiv jnp ret js loop (bad) (bad) jg setae imul fldt in loope fwait and out inc or xor xchg sub movsl stos pop stos jbe rcrb loope inc cld (bad) pushl clc mov in (bad) mov lea and adc icebp (bad) (bad) incl dec push cld adc sti pcmpeqd movsl lahf and and sbb adc std nop sbb aad mov adc mov mov inc dec rcrb mov fwait pusha push add mov add xor pop adc mov or (bad) (bad) (bad) jmp mov dec or pop aaa sbb jmp out aad cmp push popa (bad) (bad) (bad) incl negb shl jae mov mov out pop insb mov (bad) (bad) (bad) (bad) mov jae pop popf iret pop ljmp push (bad) push and fsts (bad) call insb and js leave std (bad) push xchg out std inc mov adc jno ret (bad) call cld dec lods (bad) pop cwtl dec (bad) (bad) loop lods (bad) push out cmc add (bad) (bad) (bad) push push cwtl dec rcrb pop aas jns push mov mov cli rcl aas push das les jb mov pop mov cmp xchg lds std (bad) (bad) (bad) mov (bad) adc outsl ss xor mov iret sbb lcall mov xor push inc mov push or ja aad mov dec outsl jno pop cwtl out dec sub inc dec shr sub adc rorb cmp cs fstl insl mov mov not and push gs (bad) (bad) dec fisubrl mov lods enter aaa mov add adc dec icebp push inc lods cli push stos dec iret xchg lea (bad) jge in jp sub push or cltd cld push leave sahf cmpsb xor dec repnz xchg pushl (bad) dec stos lret mov inc xchg scas mov pusha insl mov jmp inc push push pop imul es ss jo hlt fldenv push or daa fisubl mov sahf jb sbb (bad) scas xchg mov add (bad) mov jmpw inc mov mov lret aad and sti iret js xchg cs (bad) (bad) incl mov mov or mov jmp jns mov inc divl (bad) (bad) (bad) jmp mov jl aas sti add imul into (bad) sahf call (bad) jecxz fs rolb dec cmpb xchg aas add push push sub cmp mov (bad) mov mov cmpsb sarl fcompl dec push and mov jl mov int inc push ljmp pop rorb jp inc xchg test test pop outsl outsl icebp roll add (bad) (bad) call or (bad) jmp stc xor or sub and outsl pop mov cmp (bad) ljmp jp sub les in jnp stos repnz lea inc jb xchg cmc mov jno sub adc fstl roll mov sbb daa dec mov (bad) (bad) decl movsl push sub push fldt cmp loop pop outsb cmpl (bad) (bad) decl pop stos sti daa sub pop ret fisttpll mov addr16 into cmovne adc ljmp (bad) xchg dec int ja cmp in cmovg pop dec dec sbb (bad) popa cli push or repnz sub pop push test mov aam push pusha push js sub imul (bad) jg pop rcrl mov iret cmc dec mull pop jp add lods inc jne inc rclb arpl xchg (bad) mov test pop push xchg dec pop mov mov mov xor jge push aam jb fs pop push gs imul out lea jb cld (bad) jmp xor in cmp test and daa repnz jne xchg push (bad) (bad) jg push ljmp pop out inc cs mov xchg (bad) dec jp scas cmp inc int3 cmp xchg push loop adc imul add scas adc (bad) decl outsb pushf cld stc daa or test mov (bad) jb lahf aaa (bad) ljmp mov jl loope sar pop inc enter inc (bad) mov jo mov inc stos push and inc cmp lock push sbb and in cmp (bad) (bad) cld push sbb inc fildl mov mov or xor addr16 adc fcomip jg lods mov inc mov dec hlt mov lods nop or adc (bad) (bad) (bad) inc inc adc pushf or fisub jg fistpll and mov aad incl dec clc es push mov dec jnp in aas (bad) cmp in shll and jle pop sbb push (bad) (bad) (bad) lcall pop andl (bad) fidiv ficom jb xchg push jae inc xchg dec add ret inc data16 or inc rol (bad) mov xchg fdivrl sarb (bad) (bad) decl das jge into loop fs mov out pushf nop addr16 daa cmp pop lret ljmp clc ss dec jmp lods push dec sti xor jmp inc ds fwait outsl clc push clc arpl jae ficom push ds imul xchg out xlat sub adc jne test mov fucom xchg xchg jp and int jo ret xchg fildl test xor add (bad) cld jge add (bad) mov push roll cmp pop push std or (bad) fcomip ret mov jecxz ljmp adc sbb pop mov adc or cwtl ss dec shll and xor pop (bad) decl push pushf in fwait or xchg inc scas test mov push fisub std jle aad loop imul inc sub adc lcall stos insl je repnz ljmp mov cwtl (bad) (bad) pop jo mov jmp push jb (bad) jnp mov ja xchg and mov cwtl xorl jb fstpl fcoml les cld dec pop sub mov sbb ljmp lods test lods inc dec cmc inc and (bad) repz test inc dec (bad) jg stos push cmp and mov jbe pop idiv call inc mov stos xchg jno pushf negb loop outsb adc xchg rol push cmpsl and std (bad) jmp pop es jge ljmp or subb cmpl push fisttp decl pop ljmp fcmovnbe jne push xchg dec loope icebp cmpsb pop (bad) (bad) mov jbe (bad) pop push inc mov clc js pop sub aas mov (bad) incl fimull fs push push loop dec mov aam push ret sarb (bad) cmc (bad) (bad) (bad) jg rcl dec or sub mov add push inc lcall xor cmp int jmp (bad) loope sbb push jp shl sub ret outsl jp mov cmpb jmp jl inc jmp out mul mov rol mov sbb out push mov (bad) mov dec ljmp into scas pusha inc xchg stc pop (bad) (bad) lcall dec out adc sub clc cld jbe push addr16 pop jmp ljmp (bad) mov jne les js mov out (bad) (bad) jg ljmp inc xchg aam mull ret cmpsb sbb fwait adc gs add call hlt add mov stos aad push fisubrl fnsave lcall sbb (bad) (bad) mov test movsb cmp outsl pop inc mov dec adc push lcall test (bad) (bad) jmp or int pop rol jbe ljmp aaa add imul pop call lcall mov (bad) cld loop cltd aam pop ror xchg inc mov mov iret shrb mov repz imul mov decl (bad) pop mov movsl into (bad) and inc iret clc movsb ss call cli adc (bad) (bad) jmp aaa psubusw movsb xor xor std push dec xchg pop dec pop lock (bad) ljmp add mov cmpsb rcll cli or (bad) (bad) insl jp in dec pop (bad) ljmp cmp jl or into jmp sbb and cmpsb scas (bad) (bad) mov cli leave cld sarb ljmp repnz stos lcall ljmp fcoms pop repnz jne and (bad) (bad) (bad) fnstenv sbb dec in add aaa push sub sbb insb ret and and (bad) incl jb sbb test outsb ret sub pop (bad) (bad) jg js mov mov xor movsb xchg dec inc mov fcomip incl notb dec sbb fstpl hlt push adc js jp dec aaa pop shrb ret (bad) pushf int lcall pushl daa push insb sub lea pop adc ds push mov adc lcall mov mov dec lods xor add (bad) ljmp or leave in lods inc sub shrl mov sbb (bad) jg test jo inc rolb push sarl bound insl sbb cld (bad) (bad) (bad) lcall loopne jnp outsl fcomi ss mov fwait xlat scas inc test dec andps (bad) ljmp incb cs (bad) push pushf dec xchg icebp add xchg loope loop int (bad) jg lods sbb enter imul jl or (bad) jg fstpl push cmpsb lret lock sbb adc and pop dec mov sti loop push lret (bad) (bad) call insb imul jecxz fldenv push mov test mov out xchg mov and lea (bad) (bad) (bad) fsubrl pop inc gs cmp dec cmp pop and sub inc fisubrl pushl pop les imull sub mov cltd (bad) (bad) (bad) mov mov jnp fwait lds nop shrb sbb addr16 lahf cld sub aam ffree call jmp mov push cmp xor (bad) (bad) incl bound push aaa repz hlt pop inc aam push std sub les or (bad) jbe adc (bad) (bad) (bad) (bad) jg inc jp rcrb mov xor push xor fstl int3 lds sub (bad) (bad) decl aas push lods jae cld and add fsincos adc repz push or cmp push ljmp cli (bad) cmp pop (bad) mov cld inc adc aas cs out lret sub shrb cmc mov xchg jne out (bad) push mov js adc xorl jg into test push sbb test fimul ljmp out adc xor divb jns mov hlt (bad) (bad) (bad) call (bad) popa sub dec std add xchg inc addl hlt outsb scas cmc mov cltd or (bad) (bad) mov mov xchg int js lret jg aaa out inc (bad) cli insb mov cmp out int3 fist scas dec adc in (bad) (bad) (bad) (bad) std fistpll call inc in sub in nop lcall jns subb pop adc mov (bad) cli add movsl adc (bad) lds xchg daa in (bad) jg pop xor icebp pop sbb icebp fistpll pop and jbe call sub (bad) (bad) lcall int cwtl jb ljmp or aaa pop pop dec (bad) jnp aad das es dec in mov mov (bad) cmp addb (bad) ljmp dec sbb pusha pushf cltd dec fstps das xchg mov ljmp fwait or push xchg das pushf icebp popf jb popa pop dec mov push mov adc (bad) (bad) (bad) in shrb push and aaa int3 popa pop cs test loope fsubr sar (bad) (bad) (bad) jle int in mul push cmp (bad) jnp pmuludq xor js xor jb mov sarb decl sbb xor shrl (bad) pop mov (bad) (bad) (bad) call add xchg add push inc js pop jge mov ret cmc dec out (bad) (bad) call mov inc in out and out in push mov ljmp (bad) (bad) (bad) call inc imul and (bad) repnz push rorb aam (bad) (bad) (bad) lcall es push in sbb outsl movsb out mov std aad inc push cmp stos (bad) push (bad) mov push push xlat jl sub cwtl out mov imul (bad) decl dec mov adc decl dec add sbb cwtl sub lock inc add fcmovbe pop loope cld popa pop sub lock (bad) decl les pop les dec addr16 gs dec adc ds dec cli clc ret push les sub stos pushf ss in cltd insb mov out lcall sbb ret sbb stos (bad) (bad) (bad) aas clc jo stos cmp nop std jb pop lret test icebp shrl js xchg lret shrb (bad) (bad) (bad) jmp or ret lods push rcr adc jmp imul ljmp cmp dec pop stc js xchg xchg icebp aas repnz cmc cmp pop insl jnp inc inc clc jmp addr16 cmp movsl out cmp mov int xor hlt cmpsl incl int3 jb stc cmpsl jno pop (bad) (bad) (bad) incl mov jno clc jae,pn and jae or pop insb and cmp lret imul or ja dec imul inc push or pop jb into jle or mov imul (bad) insl (bad) lcall xchg xor jle and inc cld push push xchg repnz je adc orl adc sub jmp or aad sub (bad) (bad) lcall sbb pusha dec dec ss dec lret pop mov xor (bad) (bad) (bad) jmp (bad) call or jb and test mov ljmp push inc fs andl enter rcrb stc xor imul sub jb stc jnp cmovbe das and push (bad) dec shrl mov xchg ret xchg and (bad) sti sbb jae push incl (bad) clc fstpt sbb je lods cmp lods std (bad) (bad) lcall test les push and inc test xlat lahf inc loopne cld xchg mov mov in insb ljmp and das mov cwtl inc dec (bad) (bad) (bad) push repnz jnp jno lods jp mov lea hlt sbb cli lahf nop xchg lret sub mov out xchg lods mov and fisub xor jo push xchg rep aas and mov add cmpsl push sub xchg push packuswb in sbb adc (bad) incl dec fstpt cmp imul jae xor outsl inc movsb lock (bad) (bad) pushl pushf xor push cs in cli mov jle out or lods push sbb inc or (bad) stc pop movsb and jp adc fsub dec jmp inc push mov addr16 data16 (bad) ja inc jbe (bad) (bad) (bad) (bad) out hlt mov push ret jno lods xchg andl or jbe jmp das mov dec mov rorb shrb mov push and (bad) (bad) (bad) jmp add xor push fcmovnb scas or fwait cmp repnz out divb dec (bad) (bad) jg mov or jne insl push jbe in adc ret pop xchg leave sbb (bad) pushl jmp aam adc xchg stos push cwtl cs dec (bad) (bad) (bad) mov in push jmp push sbb outsl gs mov inc pusha adc jns mov push das add pop outsb xchg stos mov imul (bad) jmp ja dec jae push jns pop cld pop dec cmpsl sti lock flds pop (bad) into (bad) jg and mov (bad) xchg mov pushl pop popf sub mov in pop mov (bad) cld sbb xlat mov aaa js xchg or daa dec call (bad) cmp pop jbe xchg out push dec (bad) (bad) (bad) pushl sub les int3 roll or or fmull (bad) pop mov stos incb in dec mov fmuls das cmp mov (bad) decl into or in outsl lea sti movsb std xchg adc xchg cmpsl lds (bad) (bad) (bad) jmp dec cmpsl fcmovu sbb out aaa cmp repnz sub jnp pushf les push sbb lock mov push nop mov push lret into lahf and xor push cmpl (bad) cmpsb adc adc (bad) (bad) jg pop pop mov add mov mov rcrb mov sub dec push scas push push data16 pop lcall (bad) (bad) ljmp vandps inc cltd (bad) cmpsl add push pop add cmp inc add xor (bad) (bad) (bad) dec (bad) jbe pandn iret je mov rolb in out add ljmp push sub lods sub pushf sti sti mov (bad) mov hlt push (bad) (bad) (bad) pushl mov or push aaa sahf (bad) (bad) (bad) lret in adc test push mov std ret sbb int3 lahf test inc sub sbb ret adc push std (bad) jmp mov sub mov jl outsb je xlat out movsb mov mov pushl pop add or mov xchg hlt aaa push popf cld (bad) (bad) mov or mov push lods pop xchg scas into pop xor shl mov push fprem pop mov xchg xchg inc push cmp sti mov xchg pusha pop mov xor inc sbb mov add xor (bad) (bad) incl mov mull loopne andl mov call aas ljmp jo or mov arpl push dec cmp loop subl aas (bad) (bad) (bad) ljmp adc (bad) je pusha shll inc std gs adc add cld (bad) decl pop xor cltd mov dec inc sbb sbbl (bad) fidivl jo sbb cmp (bad) (bad) call and push lahf jae push mov sbb jp mov call cmp imul xchg push out ljmp sbb ds mov test xchg (bad) (bad) call gs mov mov sub pop and stos ljmp sar (bad) (bad) (bad) jmp lahf push xchg inc jb fiadd rcrl adc daa xor outsb jno (bad) (bad) dec ss jns scas or aad pop movsb rorl mov decb into sbb adc clc (bad) outsl (bad) loopne out repnz and (bad) (bad) (bad) cmp nop push cmc int roll inc test out psubb add pushf (bad) xor (bad) (bad) (bad) decl in cmp sbb or cmp mov pop mov enter pop scas mov (bad) (bad) (bad) ds std cmp rorb and push sbb pop cltd push (bad) xor push or inc and dec cwtl fcompl cmp and lods (bad) (bad) out cli xchg jnp sub in inc clc push loop nop adc lock sub stos (bad) (bad) (bad) jmp pop pop or hlt xor xlat adc inc xor test std inc or (bad) (bad) (bad) call andl rorl imulb or sbb fmull xor repz (bad) jmp js push mov sbb ss adc hlt (bad) (bad) incl cmp movsb dec outsl pop jmp aaa out aam jl pop fmuls mov cmp loope cmc test sbbl push mov dec (bad) (bad) (bad) call (bad) fidivr dec cmp fisttp rorb shr test push in cld mov lods sbb jmp mov jge mov cmp add je pop mov out adc test cmpl mov xchg and pop pusha ljmp sbb pop ficompl stos jge push jle (bad) decl jl pop sti out or inc stos add pop in jae in sub (bad) (bad) call fidiv rorl push dec pop shll mov xor cli push loopne js mov (bad) jmp lcall shrb rcrb inc or cmp mov pop call (bad) fisttpl fidiv jge xchg movsl inc mov mov sub mov jo addr16 aas ljmp test cld (bad) pop cmp pop jno sub (bad) (bad) push popa or bound cmp adc xchg lahf and int3 cmpsb (bad) xchg mov fwait dec mov (bad) call popa popf out xchg into cmp repz jg sarl (bad) lcall in ficoml xchg in push push or push (bad) mov inc cld call jne loope jge xchg add sub daa iret or int cmp add add pop mov push jbe (bad) inc mov add mov add cmp mov test lcall and (bad) lock imul lock ljmp xlat lods xor dec cmp lods fscale fimull fdivl movsl sar out outsb and (bad) lcall mov mov ss cmp shrl fidiv (bad) (bad) in cmp sub cmp pusha and aam add push icebp add aas imul mov jno ds loop or (bad) (bad) (bad) push imul add push (bad) mulb rcrl and adc pop movsl push push (bad) call out fwait lret inc xchg add jne mov shll sbb (bad) sti out fs int3 pop ljmp imul jne mov ret addr16 sub push (bad) (bad) or cwtl mov push (bad) (bad) (bad) (bad) push mov adc (bad) mov inc jae inc jecxz sub js xor sub cmp push dec (bad) (bad) (bad) jmp or inc das repnz mov push sahf inc insl mov fidivrl pop loopne mov pop mov jmp dec mov adc inc pop pop add ljmp mov arpl inc (bad) mov outsl aam les sbb mov fcoms mov lahf jmp xchg outsl decb cmp loop cmp mov (bad) ljmp inc mov in aaa push aam sbb arpl in mov std adc (bad) decl test daa jnp pop jecxz xor xchg lds std inc (bad) (bad) decl js (bad) loop adc dec jl dec mov inc int3 inc mov outsl stos (bad) outsb push cld (bad) lcall stos sub hlt outsb adc cld jg sub (bad) mov scas cli daa xchg cld lea inc nop in cmp pop or dec adc mov (bad) (bad) call cmp inc sbb jbe (bad) jecxz mov xor in sub jg add push fadd jno imul sbb (bad) (bad) (bad) ljmp (bad) sub pop popf ret mov jg out vcomiss mov lcall cmpsb nop call incl jmp jnp pop sbb mov jp loop inc (bad) icebp xor or pop xchg ds pop cld (bad) (bad) mov mov rcr xor stc aaa jns out mov in clc inc stos mov dec loope and cmp (bad) call stos cmpl aam in sbb mov shrl mov loope cmc inc mov (bad) sub (bad) pushl jno scas data16 mov adc es adc xor mov stos es lret pop in push mov or pop sbb stc xchg xor fistl (bad) ljmp xlat push xchg xor mov rcll push fwait sbb fwait cmc push decl addb loop fdivrl adc jmp icebp sbb or pop ja push mov jb xlat xchg pop jg cmp add call fs repnz add test das sarb in sbb out mov pop aad (bad) (bad) (bad) lcall xchg aas adc fcompl push stos add (bad) sbb notb (bad) decl xorb xor mov dec testb xlat jae insb int3 (bad) sub (bad) (bad) cmp subl aas imul (bad) jg push test xchg pop lock add xchg mov incl pop ljmp movsb adc mov lods sbb call inc jo lods cmp jle lock insl cld and cwtl clc aas fwait xchg xchg (bad) das sbbb cld xor adc or shl push lret xlat cmpsl sbb cwtl fldcw shr in xchg lret (bad) (bad) jmp sbb shr mov es int3 ja scas (bad) (bad) je jne jmp inc push (bad) (bad) (bad) call jae sar jl insb mov and mov lret jg insl rorl sar das clc mov and call movsl xlat mov ret ret push dec arpl lods pop xor (bad) (bad) incl cmp sbbl and adc dec jmp cwtl sti jns cmpsl jmp (bad) (bad) decl push pop out or mov mov sbb out jo pushf cld mov (bad) out pop sahf and hlt imul (bad) int ret mov xchg sbb ja ja push jne cmpsl mov mov call stos (bad) jle imul sub rolb je sbb (bad) ss cmpsl outsl sar out ficomp lcall push sub jle stos add pusha cli mov ljmp xchg stos into cmp mov mov rcl ret adc (bad) call xchg lock iret fbld xor les push push inc mov mov enter dec or pop xor jns dec mov sub popf bound (bad) lcall jno bnd inc inc aas add dec out pushf addl hlt mov jg or cli xchg or jle cltd bound (bad) std je insb les add push loop,pn xchg lock mov xchg push cmp pop bound pop int3 mov (bad) (bad) (bad) jmp sub cli inc fisubl js inc imul ficomp lcall mov or add sub out inc pop ret fwait test (bad) mov test pop mov mov shrb dec call lret (bad) fs (bad) (bad) jg lods xor pop cli loope mov gs mov cmp loop (bad) xor add (bad) out xchg jnp cmp les dec dec cmpsl mov mov test sbb das push hlt (bad) out clc push xchg mov sbb loopne push jle gs mov roll (bad) lcall loope cmp mov (bad) lds xor test pop cs test (bad) incl incb test into fmul (bad) (bad) (bad) pushl cld repz cmp cmpsl mov mov push rclb out call (bad) clc jmp jge flds sbb dec mov mul mov (bad) (bad) cmp mov and pop std repnz lahf (bad) pop das stos nop xor (bad) (bad) (bad) ljmp cmp cmpsb add (bad) neg pop fwait add mov (bad) or dec mov pop leave ficompl push sbb jecxz jl and fdivrs popa jg lcall pop (bad) in ret repnz dec stos fwait jle ret mov mov sbb outsl (bad) lcall and ret cli cmpsb gs loop cld lods inc popf inc enter gs fisttpll (bad) (bad) (bad) (bad) call mov mov mov shrb idiv cli pop fistpl mov std scas insb aaa push jnp clc (bad) (bad) push lret pop dec rorb incl imul add add and mov hlt cs pusha pop cmpsb mov mov (bad) (bad) (bad) pushl and or cmp bound pop popa sbb callw jb push xor cld lcall lcall insl ret xor (bad) (bad) (bad) jg loopne pop mov sbb inc pop cmp (bad) in sub cs pop pop mov sbb jno (bad) (bad) pushl mov dec and push out rclb sbb jo aaa cld fisttp mov outsl and rcrl leave mov mov push and jae arpl (bad) (bad) decl sub shl lret jge inc aas testl (bad) pop cmpsl pop push xchg sbb (bad) incl dec popa dec repz mov out mov insb popf add scas pop sub jns and (bad) (bad) jg push stos (bad) loope lahf mov insl pop push mov jp dec das movsl lret ljmp std push push (bad) stos movsl cmc pop lds mov dec cmp clc fstl pop sub xchg testl data16 pop pop (bad) and enter mov lds fcos jg or xor out cmp inc push or (bad) (bad) ljmp mov adc sub cld sbb jp fimull mov movsb incl pushl inc ret daa in les hlt fldenv and (bad) (bad) (bad) (bad) (bad) cmpsb hlt or imul sahf incb test mov icebp mov xchg sti add cli lcall push mov dec cld popa add push add ret push sbb sbb lods jno xchg cmp sbb outsl ja push adcb push sub push push fcom push cltd es sar or aad cmpsb push sub push jnp outsb outsb mov andb dec mov jb sub fsub pop or shl cmc and into loope or (bad) decl pusha sub xlat in or stos or test mov inc cmpb rclb jmp jl sarl push lret mov mov mov or addr16 xchg leave pop cmp (bad) mov cmp xor nop mov sbb adc (bad) (bad) mov sbb cmp shlb mov es adc (bad) (bad) dec ss pop inc in int3 aaa stos shrl aas popa push and movsb push xchg cltd sub jbe adc sar xchg iret lods cs (bad) enter (bad) dec mov xor lods js (bad) (bad) (bad) jl in mov rolb loopne add int out ret test pop (bad) (bad) ljmp xor mov testb aam lds mov out pop mov hlt pop nop (bad) mov les cwtl (bad) (bad) (bad) jg out mov shlb cli mov cmpsb or call mov ss js das clc mov mov in rcrb rcr ja,pn and mov js sti andl push shrl jae repnz push hlt lahf test (bad) decl inc data16 sub fldl add aaa imul es (bad) lcall and in pop sub imul and incl imul fnop push fldl ffreep int3 xchg dec pusha xchg mov dec push pop out (bad) (bad) push (bad) dec lret xchg icebp xchg pop es addr16 outsl inc dec mov mov (bad) lcall ret push xchg js mov xchg sbb cmpb loope (bad) (bad) mov mov fstenv inc pop jge jmp ds fwait inc and repnz dec (bad) icebp aaa cld (bad) ljmp push shl and and sub pop xor inc into push (bad) (bad) jg push (bad) (bad) push xlat jae inc jns jo ret pop imul xor or std push xchg and jp dec pop mov xor outsl mov pop add or (bad) jg fldl add and (bad) cltd mov mov sbb sub (bad) (bad) jmp ja push xor xor mov xchg jmp bound test fcoms incl cld decl ljmp stc pop lcall cmpsl mov ljmp clc inc outsl xor pop dec les pop or inc xchg movsb and ret and (bad) (bad) inc inc mov rolb and movsb add loop sbb cmp dec lcall add in icebp icebp sbb (bad) popa inc (bad) dec add sbb (bad) fistpll cmp test stc (bad) out stos incl mov jne xor mov pushf jge in mov add out clc (bad) (bad) (bad) lcall arpl enter jne call sbb xchg mov or pushf mov iret (bad) (bad) mov inc rorb mov jbe or inc adc cmp (bad) (bad) mov mov sub xor lcall testl popa ret xor in aam mov inc js lcall sbbl rcll sbb out mov lret inc (bad) insl or and mov roll add (bad) call push test xor dec iret sbb (bad) (bad) (bad) jg flds ja mov adc inc xchg sbb xor push jl push mov inc ss add lcall push hlt insl jmp mov test shrl mov xchg pop mov xor idivb add fcomps ret lcall and orl data16 movsl outsb xchg hlt jae icebp add pushl push pop jg xchg or movsb dec adc mov xor sub jae jecxz mov std or (bad) cmp nop std xchg inc adc fwait add sarl cld adc sbb add xor xor outsl in dec push or (bad) (bad) jmp add jae inc shlb or push fisttp popa mov mov stos inc lret (bad) (bad) lcall or sub mov imul dec mov lods and rep ror jle stos mov cmpsl bound in xor (bad) pop lods mov aas mov mov (bad) (bad) fistpll push mov out fistpll (bad) sbb sbb repz adc in ja lret pop hlt mov cltd rclb mov push push lcall cld jmp lods xchg sar cmpsl sahf add mov inc mov push pop add add outsb sti jl stos outsl and xchg jg out and cmp sbb int movsb (bad) (bad) cmp mov jmp xchg lods sarl decl push cmp mov outsl orl xor ds push mov jbe (bad) (bad) (bad) (bad) add stc mov cs xlat fild and mov push test lea adc push lahf enter jns rclb std xlat dec frstor lock lods test add out jle adc (bad) push push pusha rolb xlat inc xchg pop sahf test xor xchg push fnstsw lret out ljmp jmp lea stos xchg xor mov pop clc inc (bad) (bad) lcall jne xchg repz (bad) and mov pop icebp call (bad) (bad) (bad) call pop outsl das popf mov add rorb push xchg inc jp imul add (bad) fmull xor cmp xor (bad) aaa movb push mov adc cmpsb mov ljmp pop clc (bad) dec enter jmp icebp fs lock cmp rcll add (bad) (bad) incl or int lods xchg or mov mov ljmp adc xchg xchg (bad) call or dec or lcall mov cwtl mov (bad) js lods push inc jb jmp fs into es bswap dec mov pop cmp dec and call dec ss cmpsl add mov jns insb icebp sbb xchg dec xor (bad) mov (bad) (bad) lcall xor xchg orb lods jp pop sbb cli jnp ds std (bad) (bad) (bad) mov xchg fmull cmc in pushf sar arpl ljmp (bad) es cmc (bad) lcall std mov mov push adc jae aas out aam mov xchg xchg (bad) xchg lods add (bad) (bad) ljmp sbb jmp mov xor xor add movsb push or (bad) (bad) pushl dec jb mov xchg notb xor jg negb and adc (bad) (bad) jmp loopne mov scas and js xchg arpl sub scas cwtl out sarl stos scas push mov (bad) (bad) jg inc gs jge pop cld daa xchg jg (bad) mov mov (bad) fadds or sbb out fisttp jae stos out (bad) cltd push push cli lret or sbb fnstenv push ret rclb js (bad) (bad) mov mov repz xchg dec inc (bad) push test lahf or cmp popf leave push jnp pop mov mov (bad) mov outsl ror xor scas fucomp add inc (bad) push orb (bad) jmp mov cli dec push push out rolb pop das loopne or jg fsub aam mov and ja pop arpl lcall push loopne and pop mov or dec je test pop gs fsubrl inc je push pop (bad) mov test (bad) (bad) (bad) lcall (bad) xchg stos orl (bad) aam scas lock lods fidiv jmp fwait das adc xchg outsl cli inc and aam xchg imul lock sub imul mov movsl sbb les inc pop jmp cmp jno (bad) (bad) call dec cmp xlat mov add popl xchg popf test pop mov sub (bad) out in mov enter (bad) jg repnz xchg pop push cltd pushf leave mov lret adc cmpsl xor (bad) (bad) (bad) in inc inc imul decb pop push xor dec cld int3 sti scas (bad) push loopne (bad) incl jecxz ja push cld xchg or mov xchg insl cs cld xor sub pop cmc ret jbe push sub or int3 mov mov sti sti out push pop aad ds cmp lcall pop cmpsb add (bad) adc mov sub (bad) int3 mul int push pop cmp (bad) incl iret sub mov push cmp scas or sar loopne js (bad) (bad) (bad) jg mov dec sbb bound movsl add bound int3 xchg push lahf mov lahf (bad) (bad) (bad) (bad) jns jmp cmp clc fcomps pop mov (bad) ret lock stc xor push add push stos xabort lcall je ljmp or adc or je jo mov xor adc js mov loopne popa loop adc cmp ret fdivr (bad) (bad) call ds cmp leave lds sub leave lock in dec xor (bad) (bad) (bad) (bad) ljmp stos bound mov enter xchg scas pop cwtl outsb decb inc movsl xchg push outsb out out rcll pusha or dec cld jb nop xchg add (bad) (bad) ljmp rorl dec gs incb sti int3 sahf push mov lea jno,pn sub (bad) (bad) (bad) inc mov cmpsb pop sub inc cmp js cmp push adc (bad) (bad) (bad) in push jl dec adc push mov repz pop cmp jp lock fiadd (bad) (bad) (bad) (bad) mov int3 inc sub pop stos push dec aaa dec cltd jl scas xchg ljmp jmp xchg incl jl lcall aas xchg fdivrl pop aas insl sti (bad) (bad) (bad) pushl sbb push cmp mov ret nop mov mov push or sahf mov dec cmp les (bad) (bad) incl xor xlat xor stc roll dec cli push inc add mov inc enter pushf in stos jp (bad) (bad) (bad) dec xor ljmp or mov sbb jp inc (bad) (bad) (bad) lcall popf test jg loopne cmpsl cs and pop xchg in push and sbb sub loope fildll test repz arpl dec adc test (bad) jmp mov mov imul (bad) (bad) ljmp repz inc pop out shr es pop jp sub sbb inc out inc out mov sbb fs and adcb (bad) (bad) (bad) (bad) jns in cmp cmpsl in test lock dec int3 dec sub inc mov sti adc xchg mov add lret lahf lret sub pop out (bad) push out addr16 std (bad) lcall hlt jae mov mov out stc mov push data16 (bad) decl and lret sbb leave rolb pop xchg cmp pusha xchg add fsubrs es pop enter fistl adc hlt int lea xchg fnstsw inc lahf sbb push add xchg pop nop fcoms push lods mov add mov mov lret mov in xchg cmp (bad) (bad) mov adc ds xchg mov push jge add hlt jno cmp fisubrl dec (bad) (bad) mov (bad) mov addr16 orb icebp dec mov int cmc lods jne,pt dec pop fcomip mov stc pushl mov idiv mov jp ret jmp (bad) (bad) (bad) lcall push loop inc push (bad) testb sbb adc inc add nop stos outsb into aaa jbe (bad) (bad) (bad) call test push bt imul insb cwtl (bad) jmp push ljmp cmc aam test aad fcmovu (bad) mov (bad) jmp fild je stc pop mov std or lods insl xchg push (bad) cmp int3 and jecxz std incl cmp lods sub loope movsb lods fnstsw push call xor (bad) mov clc stos push aas je outsl imul rorl (bad) (bad) (bad) jmp aad cmp lds lcall and cmp idiv shrl fdiv and jae xor push lods xchg outsl push enter (bad) jg scas inc pop mov dec nop das pop mov scas push mov xchg in or (bad) (bad) push icebp sbb push push xchg adc mov aaa mov and xor cmc mov in xor jge dec arpl sub inc (bad) (bad) (bad) call in ss (bad) jl mov push mov mov out add std push int3 pop jp inc push mov (bad) fistp idivb (bad) cmp adc dec repz testl add (bad) out add push mov dec and test jg (bad) (bad) (bad) decl in xchg stos pop or inc js jle xorl into movsl xchg andb (bad) cmp (bad) incl and js gs add enter popf outsl pop rol mov enter (bad) incl icebp inc xlat jae push imul pop push cmp mov inc loopne jmp (bad) (bad) push cmpsb xchg push shrb dec in or iret mov sbb mov pop xchg mov mov cmpsb fs lods in sbb inc adc (bad) mov aas aam (bad) jb insb cli (bad) jg out or test mov loopne movb in mov sub jno ljmp or incb int3 push sub jbe fnsave lcall mov push stos jno push (bad) add dec xchg adc mov xorl (bad) (bad) (bad) pushl jno inc (bad) pushf loope imul pop pusha mov or push (bad) enter push jmp lods dec rclb sub xlat push mov mov (bad) (bad) (bad) aas mov sbb jp pushf mov inc xor jb (bad) hlt lret (bad) ja mov sbb mov andb dec out mov pop and cmp lret mov and pushf pop ss (bad) (bad) jmp insb inc inc cmpsb push and lret mov (bad) imul adc not xor add call xchg loopne mov ljmp fadds test sbbl incl mov arpl (bad) and pop aad fsubl add std cmpsb push pushf xchg cwtl and incl cld inc in fcompl push push mov push mov fnstcw fbld mov (bad) (bad) (bad) jmp pop adc sbbb mov icebp adc iret xorb dec es frstor jmp mov inc es jecxz cmp fild dec fdivrp mov push cltd lock pop sub lock (bad) ljmp push push iret mov cs or imulb dec xchg sbb movsb into adc daa popa sub jb ret (bad) (bad) push leave xchg in push xor out es inc or mov fs ret (bad) mov es jae das adc aaa faddl les cmp (bad) (bad) (bad) jmp sub inc sbb jg addr16 mov sbb mov add jmp into mov lods sbb xchg loopne outsl mov cmp inc mov dec add jmp mov sub inc jbe cmpsb jg xorb or out lret (bad) sub xchg add lcall fldl or dec decl add nop mov adc imul sti pop or xchg (bad) pop aam jnp pop mov (bad) dec mov (bad) (bad) incl jno jmp sub xchg mov ficompl stc sbb cmp aad (bad) (bad) in mov nop fdivs pop nop pop sbb negb loope push rcrb imul jb mov (bad) (bad) jmp (bad) push rcrl cmpsl or push sub mov sub test cmp jp (bad) call std push lret mov cmp dec pop arpl adc mov (bad) fistl cmp sbb bound lahf jg pop arpl mov movsb mov pop (bad) (bad) fcomip (bad) in mov jp cmp cmpsl cmp js adc xor ljmp jae lret sub and mov jmp xchg test mov inc mov jmp inc (bad) jg (bad) clc pusha testl xchg movsl packuswb pop and xor decl loopne insb aam hlt ret add lret or mov xchg jl jbe decl lock (bad) (bad) (bad) fdiv (bad) pop ret dec pop in lret xchg or orl ret sub repnz pop (bad) (bad) (bad) (bad) frstor scas fs icebp ja outsl jp aad ss cmp pop xor xchg xor incl outsl mov repz push and inc fnstcw push pusha sub clc int3 fistpl mov (bad) lods out cli mov mov std (bad) (bad) inc mov test gs jno in mov (bad) and rcrl mov int push xchg inc add pushl and mov cmp sti jne testb cld (bad) incl testl dec and mov aaa ljmp sbb sahf push aam jle adc (bad) xor loop lcall ret (bad) (bad) lcall adc pushf add cmp push movsb sbb mov push pop jp (bad) (bad) (bad) call xor lea scas mov cwtl add cs push out call test jge in leave pop xchg movsb push lods push jb pop das push adc (bad) ljmp jge scas fcomps int3 lods out add mov dec jo (bad) (bad) mov add cmpsb dec push xor in pop pop (bad) mov pop inc mov (bad) (bad) jmp sbbl clc scas arpl pop dec pop lods movsl mov cwtl cltd inc (bad) (bad) (bad) lcall cmp cmp (bad) sub or cmp or sbb add push sahf (bad) (bad) (bad) decl xchg mov push mov insb mov jae lods (bad) js arpl repz decl enter inc das add jp xchg es sbb add call push loopne and clc das cs xchg test (bad) push xchg clc sub inc inc lock enter mov scas lcall ljmp push repz pop rorl add leave rorl or and (bad) (bad) (bad) ljmp push bndstx cmp scas stos add popa cmp pop negb (bad) (bad) jl (bad) or pusha dec movsl cwtl movsb les gs aaa lret lret push rcr icebp xchg mov mov shlb fnsave pusha outsl lret and xchg jmp xchg pushf leave (bad) (bad) jg sbb xchg adc test xchg lea sub push cmp iret sub jmp jo (bad) (bad) decl or pop iret sti stos fucom inc leave outsl mov dec or das sar test mov nop add sbb mov (bad) (bad) (bad) jmp movsb xor pusha aam sub xor call sarb add jl out dec adc mov insb dec jl (bad) (bad) (bad) mov inc loopne icebp sti lock add insl xchg ret aam aad and adc cltd lea (bad) (bad) (bad) inc ja jns (bad) and lods or ja push ds sub outsl pop xchg sub (bad) (bad) (bad) ljmp inc das xchg mov out test pop cmpsl iret int cmpsl xchg int3 jg xchg (bad) (bad) (bad) stc mov int3 aam fcoms loopne xor xchg jo movsl sbb (bad) aaa fwait dec jo sbb decl jb cmp cltd shl pop jbe mov adc and scas and (bad) (bad) call cmp scas adc sbb xor idivb ds icebp push call (bad) fmuls mov sub xchg std xorl test dec das sbb mov (bad) mov pusha pusha scas stos and mov mov pop arpl push fimul aas jns add (bad) ljmp aad imul cmpsb out mov daa push mov pusha cld dec cwtl jnp and (bad) (bad) jmp mov test pop repnz in sub popf mov ret adc ss adc push lret inc push cli (bad) (bad) (bad) decl cwtl int3 mov into loopne mov mov dec test cmpsb popf inc mov jb (bad) (bad) (bad) call inc xchg aad repnz in add ror dec lahf arpl (bad) ljmp pop lock les ljmp (bad) rcll mov inc mov sub stc xor jno fbstp and mov adc lcall (bad) (bad) ljmp rorb orl out aad jecxz mov or cmpsl xor leave sbb (bad) (bad) (bad) fistl cmc pop shr mov out lds lods jmp test (bad) (bad) jmp or cmp out lea jmp into ja pop das lahf jecxz les mov mov daa cmp and sub pusha xlat cmc mov notl in inc pushf pop je sbb xchg jp mov call dec orb xchg fidiv and nop lret fs loope push sbb add inc or cmp cwtl fcomip (bad) (bad) fdivrs lcall pusha test and icebp mov dec sar dec lret inc clc inc pop aam xor jo (bad) (bad) decl add pop push sub (bad) (bad) cmpsb add rolb aaa cs ljmp rorb jmp out pop mov pop inc rcrb (bad) (bad) lcall insb in ret mov cmp aam push mov pop pop cmc (bad) jae mov gs (bad) ljmp dec jg mov xor sub outsb loop dec xor or xor in sbb cli out push cmp (bad) (bad) (bad) sti mov cmpl adc outsl dec push jae push stos mov ret xchg xchg or cmc popa or mov shl or xchg cmpsl stos pop test pop mov cltd aaa std (bad) jmp inc mov or (bad) mov mov (bad) mov mov cmp or js pop call mov (bad) (bad) fadds (bad) fbstp js mov dec test dec push call (bad) add mov (bad) (bad) (bad) push movsb inc das pusha stos or sub ss cmp or loope mov cltd (bad) ffreep (bad) mov add sarb lea into xchg mov (bad) lcall mov adc insb mov adc lcall (bad) pushl (bad) and xlat rorl adc pop dec sbb pop ss mov call sbb sahf xor push pop movsb xchg or (bad) (bad) ljmp cwtl into cld ja insb pop push adc and mov in je imul incb pushf mov adc xchg and out in mov stos js popa (bad) (bad) (bad) incl fucomi mov out scas mov ret (bad) xor and adc into mov (bad) (bad) (bad) call xlat inc lcall xor pop mov xor mov xor pusha out (bad) (bad) (bad) jnp or bound jmp push mov sbb mov (bad) fdivs lock jg (bad) (bad) (bad) stc scas in dec je inc pop out stos mov jnp pop push pop sbb iret inc xchg fsubrs xchg (bad) (bad) (bad) lcall fist scas dec push jae mov xchg in push sub mov ljmp dec pop repnz add roll addl or xor clc jbe shll std (bad) jmp dec aas sahf jno jg and pop push mov lods and add (bad) fnsave cmp and and cmc sahf mov lock jg inc je outsb push in ss lods scas mov cmpsb (bad) adc (bad) (bad) (bad) lcall sbb movsl int3 imul and mov decl jle push jge loop dec sar rcrl sarb and pop popf xor pop (bad) (bad) (bad) ds inc xor (bad) lods sbb xchg push pop fcmovne out out xlat (bad) (bad) jg xchg jge pop fnstenv fsubrl les xchg mov (bad) (bad) jg lods adc jecxz (bad) sarb mov mov in and xor sti cs (bad) (bad) (bad) ljmp scas inc or outsb sub mov testl inc daa repz jp int (bad) aas pop (bad) cmp test out clc or daa aam xor fsubrl out xchg pop sub mov hlt sbb jo sbb icebp mov (bad) (bad) inc sbb psubsb mov mov xlat xchg movl mov lods dec fsubp test sbb int or les stos mov icebp repz or xchg imul xchg push sbb mov shlb xor test loop mov out jmp and (bad) (bad) jg and lock test sub adc xlat jle loopne (bad) rolb shrb jnp mov decl cld push sub dec test std xchg sti in call cli jb add or test loopne mov xor testl aam cmp cltd add (bad) (bad) jg mov push sbb xchg mov mov ret imul pop out sbb cmp fdivr (bad) (bad) call stc rclb cld push jnp or fcmovnb xor lock inc jns mov lcall inc sbb jp (bad) mov pop je adc cwtl xor (bad) popf dec push jle lcall mov lea mov out xchg lods add lcall cmp add pusha xchg pop push enter dec xchg sub (bad) (bad) jmp sbb add div movsb pop repz enter daa decb inc adc rclb stos mov ljmp nop cwtl sbb pop push clc jmp popf test in rcll inc inc adc (bad) (bad) jl jmp xchg or jb jns sti pop aad (bad) call mov into ret lret xor (bad) (bad) jmp cmp in mov sti and push fdivrp (bad) (bad) push and jae sbb jo scas je (bad) jno mov jno outsb iret xor (bad) pop jnp addr16 test (bad) dec sbb pop nop imul mov pop and jecxz (bad) pushl call repnz mov jne movsb ret mov mov adc ds test inc fidiv das pop and (bad) (bad) (bad) ljmp xchg jno ss dec das dec lcall mov lds mov pop stos push (bad) (bad) (bad) lcall mov sub leave je jmp xor outsl popa pop daa insl stc imul inc outsl or push sarl mov mov rol pushf sub out push pop dec (bad) out mov (bad) jg (bad) aaa fst cmp xor iret popf sti xor aaa xchg xor lea sub (bad) (bad) (bad) pushl pop add xchg daa in adc xor das or cmp outsb (bad) ljmp sar (bad) sbb aad mov hlt mov cld (bad) (bad) call or push xchg outsl pop jne mov cmpsl hlt mov mov push cmp and (bad) shrl adc and bound repz jmp (bad) (bad) (bad) lcall lock add adc int ds or addr16 xchg out je (bad) (bad) (bad) call into repnz sbb pop or repnz insl mov pop mov incl inc mov stos push adc and jg xor lret (bad) (bad) decl loopne pushf pop fwait pop insb fbld bound std jecxz pop mov (bad) pushl in cmp das in fs adc sub mov hlt (bad) rcl jl and jns pop stos fldln2 push aas jecxz aas mov (bad) jg ret div stc ljmp ljmp pop test mov jo mov stos daa jp popf mov push fldcw loop inc xchg jecxz add (bad) (bad) (bad) (bad) fldt xchg or out pop jg pop inc daa movsb adc jae dec or (bad) xchg inc mov mov cli out fidivr inc out bound and bound jle in dec inc cmp incl clc frstor roll dec or mov lds pop (bad) ret xchg fiadd jno (bad) (bad) (bad) pushl pusha sub push call jbe sbb icebp fldenv or hlt (bad) (bad) dec pop test lock push pop sub cmp dec add sub (bad) out adc in sbb divb in jns lods rcl gs (bad) (bad) lcall leave xchg loopne sub dec xor (bad) xchg stc and (bad) push jmp pop mov mov pop sti mov sbbl push popf (bad) (bad) (bad) push push std (bad) push ret mov fdivrp (bad) mov xchg scas daa lods mov jle mov xchg aam or cmc cmp push push adc xchg pusha add cmp xchg mov xchg push jno and movsl repz lock (bad) cmc es adc pop lcall jne lods sub sti sbb fldt cmp arpl push mov mov lcall (bad) jo or fmuls cwtl adc pop or sahf cmp loop pusha add cld (bad) (bad) cld sub scas mov fsubrs jmp mov cmp jp or mov pushf mov lods in adc inc rcrb pusha stos lret hlt (bad) jmp out clc jmp (bad) aaa mov test ja std rol mov sbb and das xor xchg jae stc movsl pop pushl jg xor cs mov or cmc imul jne scas push pushl rclb mov cmp jne inc (bad) call loopne jnp (bad) je lret rcrb sbb adc (bad) (bad) (bad) jmp sbb adc inc pop lock pop add xor xchg rolb in adc (bad) (bad) decl lea and adc sbb xchg pop into mov lock in xchg decl dec hlt mov xor pushf pusha lods push aad push mov sar (bad) jmp jne push sbb pop (bad) mov sub stc pop dec mov ja std (bad) std push popf movsb jmp jecxz xor (bad) dec cmp inc dec jecxz (bad) ljmp scas cmp movsl (bad) mov int3 out ss clc cli sbb pop sub xchg mov push sahf lock xchg stos stc mov pushf adc in jge rcll mov clc decl (bad) jns scas pop push inc cmp sub lcall ljmp clc cmpsb push insb sbbl cs (bad) das mov in decl lcall jae daa cmp repz xor dec push rcrb stos cmp jge test cmpsl lcall pop pop sub sbb pop fs or adc (bad) outsl (bad) (bad) (bad) decl sahf xchg mov lret out sbb outsb and cmp fsubrp or (bad) je lcall lret dec lcall movsb add fdivs (bad) (bad) incl insb xor addr16 stos pop int3 pushf (bad) inc mov sbb xchg sbb (bad) (bad) (bad) lcall pop dec les sbb xchg sub dec mov les out (bad) (bad) mov push jae jle push mov mov hlt mov mov (bad) (bad) dec (bad) bound cmp xor pop lea add jg (bad) mov sbb inc pop pop push inc cltd icebp xor test stos out aas jmp (bad) (bad) decl xor divl sahf mov or cmp aad and (bad) ljmp mov (bad) xor repnz into jecxz jle (bad) loopne cmp lods mov jecxz (bad) jmp jbe (bad) jo loop (bad) sti ss rorl mov pop (bad) enter xchg sub nop sbb (bad) (bad) decl popf stos mov (bad) ja call into inc movsl inc jmp jno xchg decl les jp shrb adc pop push (bad) (bad) (bad) (bad) cmp lods gs je mov dec lcall xor jb (bad) (bad) (bad) (bad) (bad) in pop dec jge pop push cmc sub jmp (bad) test add aas jbe stos xchg (bad) sub (bad) (bad) (bad) lcall jb (bad) dec mov cld es mov dec and sbb out cmp (bad) (bad) (bad) call jl mov lret iret outsl adc shlb mov lock ljmp cli lock mov hlt data16 xor (bad) jo push xlat movl adc (bad) push push xchg mov pop (bad) (bad) ljmp je stos pop out xor push orl into sbb push mov js mov out (bad) jg decl into xchg pop jmp mov xor jmp negb nop mov sbb and sub adc pop pushf std (bad) (bad) (bad) jmp dec sbb outsl fisubrl (bad) jp pop leave (bad) aad or push push fwait jmp cli inc test (bad) (bad) out negb testb ss mov mov in (bad) (bad) jmp call adc adc stos loope les adc dec or fsubrs ss test iret xlat push fs add ret leave push push in mov loopne jg lods inc jbe pop xchg and dec push pop (bad) sub in pop mov stos (bad) (bad) (bad) ljmp push and jg stos and or (bad) fisubr and jmp (bad) fisubr mov outsb xchg (bad) adc aaa incl (bad) sti sbb das leave pop and lock push xor loopne mov je dec test cld ljmp push roll dec add cltd out (bad) out nop sbb dec mov xchg dec mov push rcr mov (bad) jg scas jo mov jnp aas out scas das loope (bad) (bad) out xor in repz movsb pop test test push out mov add mov ja clc (bad) lcall cmc sti test inc out out cmp movsb out mov (bad) (bad) incl mov inc std cmc popa in mov cmpsl mov mov imul (bad) (bad) (bad) pushl mov sti in adc je std lods cmp test (bad) nop pop (bad) inc ffreep (bad) call loopne ss (bad) negl int3 test xchg inc mov jb,pt (bad) (bad) call jecxz adc clc xor and cmc notb lret sbb xchg fisubl ljmp lcall lahf arpl loopne cwtl flds sbb sbb (bad) (bad) jmp into idivl jnp dec jne cmp inc and push cmp pop es jg add (bad) cmpsb push sbb xor push pushf push inc cmp sbb jle pop jmp cmp (bad) movsl jge fcompl call loopne mov mov sub mov mov scas fs and ja das rclb je push sbb rorb inc jp cmpsl lea jecxz std decl adc lret out dec push sub call mov (bad) ljmp mov xchg out mov pop dec jae repz (bad) jne into (bad) mov hlt add lods mov (bad) decl js les inc (bad) sbb jmp sub push test fstps mov imul mov faddl push jmp xchg jb (bad) xor inc pop mov pop adc pop insb and fadds mov mov hlt call pop leave cmc mov test jg movsl popf xchg call scas and ljmp pop xchg jmp jbe enter (bad) (bad) jmp mov (bad) inc cmp dec pop mov mov fidiv add les sub add into mov jnp push xchg pop (bad) lcall dec inc jo aad lods cmp pop add and add adc mov or (bad) jg insb imul loopne mov sbb xchg cmc mov fistpll in int (bad) outsb je sub mov lcall enter call std jne fs pop cmp add imul xor insb test jo xor xor (bad) (bad) (bad) decl mov stc push push jmp mov sub aad popa ljmp cld cmp out (bad) lcall xchg out cmp test stos xor adc inc adc jnp lret ljmp sar mov decl push into (bad) dec fildl mov push (bad) (bad) (bad) (bad) fsubl mov mov jnp xor add das out mov call es sub xchg fdivs insl mov adc (bad) (bad) (bad) call bound popf push sub (bad) push cmp jmp stos jno scas imul dec lahf lock (bad) (bad) ljmp xor mov aas jmp fdivl imul jbe or cmpsb sub pop orl jl test lds push adc (bad) (bad) call mov sbb mov pop imul inc test sbb jnp (bad) pushl pushf mulb mov xchg cwtl int3 sub jg (bad) adc sub (bad) pop pop clc push or mov sbb (bad) (bad) lcall cmp jl sbb push lds or out dec rcll jbe pusha (bad) (bad) (bad) (bad) ds jp mov dec enter pop icebp inc test bound fcmovnu fcmovbe mov pop rcl in mov add popf inc xchg or (bad) (bad) (bad) (bad) jnp ss scas out sbb push or mov jle add jmp jns cmp out and (bad) decl stos jne mov and lcall call push int sbb mov add mov mov orb cmc pop mov test mov jl imul (bad) (bad) ljmp scas mov lock bnd cltd cmp jl sbb jae push inc pop (bad) (bad) jmp jecxz jl pop mov jne iret mov xchg (bad) (bad) lcall mov mov or int or into sbb mov adc sahf or sbb fwait mov jg mov cmp mov jg pusha lods in and cmp js mov inc cmp ljmp hlt or outsl mov insb sbb fisubr test sbb jae (bad) (bad) (bad) (bad) mov mov mov push push mov mov shll lock lds loopne inc jae,pt out mov push add in minps daa cmpsb hlt (bad) (bad) ljmp pop jmp sub mov mov pop cmp xor popf (bad) (bad) lcall ljmp dec and lret in and testb in pop orb jbe mov or dec sbb (bad) (bad) (bad) aas fwait push add mov jle adc dec dec pop cwtl lahf push push inc push (bad) (bad) (bad) mov mov add dec push fnstsw xor and inc daa iret icebp jg xchg in (bad) (bad) incl mov mov cli scas fucomp xor es rorl push sarb and fcomip fildll out and push mov shrb jnp shrb xor push or xor ljmp mov iret lahf or clc in lds pop push and push es lea add ljmp nop outsb xchg mov cmp fbstp sbb fild les pop ss push and loopne cwtl push adc cld fimull sbb cli mov mov pop jne dec int ljmp fwait insb dec jb sbbl mov cld (bad) (bad) (bad) aas test shll loope test dec and inc hlt test aaa nop cli sti (bad) (bad) call cmp aad jge cmpsl and leave pop into popa xchg cmpsl int pop jmp lods add insb (bad) (bad) (bad) lcall inc andl sub sbb shrl lods rcrl (bad) lcall push dec (bad) mov (bad) outsl je mov or mov sbb (bad) jmp jne mov mov add fdivl ficoml decl cmp add ret xor out lcall pusha adc imulb mov add xchg outsb xchg and fsubrs add sahf jge pop xchg xor xor or xlat pop mov pop dec (bad) and (bad) lcall ja inc push pusha imul lcall loope xchg test sti sub (bad) (bad) push mov (bad) outsl lret loop pop lret mov adc mov pop test js adc (bad) (bad) out shrb jbe add sub scas scas mov insl dec fistl sub outsl add ljmp and cltd or enter pop xor lock xor hlt shll adc xchg (bad) (bad) (bad) (bad) cmp mov hlt das xchg imul (bad) lea icebp inc xchg push jg (bad) pushl xchg pop xchg jmp cmp test mov xchg sar dec jge xchg xor mov xor (bad) (bad) pushl add stc push aad dec lods arpl mov xchg mov (bad) (bad) (bad) pushl dec gs pop jecxz lods or rol pop mov adc (bad) lcall fsubs scas and push mov jne mov fwait (bad) jmp ljmp adc jns push mov scas ret sub (bad) (bad) ljmp mov pop mov xor xchg pop adc mov (bad) (bad) (bad) decl push jno mov scas (bad) xor adc int3 and cli (bad) lcall rol jno sub lods xor and or sbb inc mov (bad) call faddl fsubrl xchg loop (bad) jno daa jns fldt movl inc push jle addr16 and mov (bad) (bad) fildll cmp (bad) stc cwtl push js mov out jbe push das clc (bad) ljmp ss push adc (bad) in pop inc aaa outsl sub xchg mov (bad) (bad) lcall push jl pop lods stc dec adc push test call xor cltd sbb lahf int3 stc scas cli (bad) incl dec add mov mov in push in test test or clc popf jb jnp (bad) fisubl sub dec cmp idiv mov sbb xchg mov mov repz decl ljmp cmpsb inc xchg xchg push pusha aad or sbb (bad) cmp (bad) in sarb out lret mov loopne stc shrb mov jle and das (bad) rcl mov sbb adc sbb shrl in jle clc lret xchg inc inc pop (bad) in and (bad) jge shl loopne xor push add push movsl test xchg mov decl (bad) outsl push dec jle xchg mov ss mov xchg je mov dec call outsl cli push dec jge rcrb (bad) decl sar pop xor push jmp push int3 pop jmp sub (bad) (bad) (bad) cmp call mov mov mov mov xchg dec sti xor lret jecxz insb xchg push repz mov push mov sub (bad) (bad) (bad) incl fstpt lea lcall xor push rclb (bad) incl rorb pusha jmp push adc pop adc movsb jne js mov or in dec loopne adc fwait into jmp loopne decl or and mov cmpsl mov idivl incl lods testl mov inc push aam cld daa xchg push adc shrb nop sub cld sbb mov loopne (bad) (bad) (bad) (bad) lcall xchg xor or xlat cmp flds xchg into xor fimul cmpsb call push push ss dec cs lcall mov aas push aad out cli jmp hlt popf orl in ret push xchg fdivl daa xchg or dec dec cld mov (bad) (bad) jmp pop and das popa add cmp movsl xchg imul mov pusha imul (bad) ljmp pop xor in add push int3 in out jecxz int3 dec in (bad) jg call popa mov jg cmpsb adc xor stc pop andl popf lock and (bad) (bad) jmp test add fimul in jno lea (bad) arpl (bad) insl scas scas cmp (bad) (bad) cmp xor mov dec pmuludq imul popa jecxz xchg rep (bad) (bad) (bad) decl xor push sbb mov cltd jg gs and mov xchg je (bad) (bad) (bad) (bad) ljmp xchg jno adc add dec xor imul jmp aaa pop test jg (bad) (bad) fisubl mov pushf mov cwtl push dec sub or mov jmp dec push push pop ficompl sti xchg js push pop sub jmp push gs hlt jg lds pop loopne or int into in xchg mov mov xchg sbb loope or into pop scas push inc outsb (bad) jle pop and (bad) (bad) in xchg fwait pop sub mov (bad) push or lcall frstor into jae scas or mov lahf mov mov (bad) jg pushl push out in mov lock movl mov jle xor mov ljmp cmp mov shll push lock (bad) (bad) jns dec mov jnp pop andl jg stc add jecxz dec mov pop pop (bad) ljmp mov inc mov arpl (bad) cmc jo hlt xchg sar pushl jg jbe repnz leave cmp (bad) enter add mov ljmp or in lea (bad) mov pop dec bound (bad) (bad) jmp out ret into xchg aad xor add leave out or fsubr fs inc inc mov aaa push rcrb mov mov test bound cmc data16 addr16 inc cmpsl sub push and xor (bad) aaa (bad) lcall add jne lock or fcomps fcompl jg xor add mov inc mov mov (bad) fnstenv or cld (bad) jmp mov lods cmc fidivr add mov ja (bad) (bad) (bad) (bad) cli xchg (bad) jo xchg pop mov aaa sub stos mov adc lret gs (bad) xchg ds (bad) (bad) lcall cs pop loop dec pop leave jo mov jp lcall inc fwait sub aad (bad) (bad) jmp lea pop (bad) daa in loopne sbb jmp push cltd cli stos pop or (bad) incl into bound inc movsl push cmp lods nop daa mov cmpsb sahf outsl dec (bad) (bad) (bad) lcall rcrb in packsswb jne mov insl pop xchg ss cmpsl clc stc lds cli or loope adc fidivl xchg stos cmpsl sub test jg cmpsb gs es sub xchg imul and jg out mov push sbb shl out insl mov decl (bad) call dec test popf into ret je push mov xchg pop lret and ja sbb rcll jecxz sbb aas insb and incl pop fist rolb mov push ret (bad) rcll mov add (bad) (bad) (bad) out jae ds xchg roll sti cmp add pusha pop outsb jo or xchg jb adc (bad) (bad) dec xchg inc rorl cmp out mov lea jbe add mov outsb push (bad) (bad) (bad) pushl shrb xchg popf push aam inc stc mov fptan cltd add rcrb jge pushf (bad) (bad) (bad) (bad) (bad) lahf sbb or mov call leave (bad) adc xor xchg fcmovnb inc adc icebp (bad) jmp int inc inc jp nop push inc insb les push mov adc andl sub arpl repnz inc lods pop aad dec (bad) (bad) (bad) jg or lret pop or jp fisubl adc fdivs xlat mov ljmp inc cmc loope cmpsb into bound dec xchg add inc in shlb out cmpsl fcomps pop sub (bad) (bad) fbstp ds push imul jbe aas pop jo pop inc cmp (bad) fist fxch mov int rclb and leave push (bad) (bad) jmp xor mov idiv mov sbb aas lret sti ret xlat add push cmp ds mov int sbb mov mov rorl mov (bad) (bad) sub jo push lock adc sbb push jle stos lahf std (bad) call or (bad) imul add jecxz and pop stc push fcmovnbe mov mov inc push inc imul lret or cs and in fisub lods adc aaa and pop sbb std (bad) inc inc cwtl jnp adc lods and push xchg inc hlt das popf cmp out (bad) das rcr repnz out (bad) xlat inc sti and xchg (bad) mov mov cmp (bad) icebp fcmovbe (bad) sbb or stos pop out (bad) dec or cmp lods repz (bad) incl cld push (bad) outsb cmpsl pop dec jbe imulb pop in cmpsl ret stc jb cwtl aas aaa ljmp in repnz xlat rol les xchg call pop or (bad) incl call in mov aaa cwtl psubsw out insb mov loop fildl sub push sub mov rcr adc jecxz add sarb (bad) (bad) (bad) (bad) jge cmp xor ficoml and push scas pop and mov inc hlt pop scas pop and outsl cli jmp or pop jl js jmp out mov decl pusha dec clc inc sar sbb out cmpsb mov mov sahf inc dec enter (bad) jmp lret jp pushf cli clc popf mov in (bad) sub adc (bad) je lret xor push in pop ja idiv lret bound fdivs repz mov daa mov push adc incl sub ss cmp (bad) (bad) ljmp lods xchg enter (bad) pop addr16 mov sbb inc and xor (bad) (bad) (bad) (bad) mov nop mov (bad) arpl popf lahf push and cmc daa push push into test (bad) lcall (bad) lock stos les mov fisub mov pop add (bad) std (bad) ljmp leave dec jmp mov ds and cmpsb (bad) (bad) decl mov jle aas ljmp (bad) push movsb test dec fdivrp (bad) (bad) xchg pop mov loop or xor adc js push aad push xchg mov ja cli call outsl cmp push jno (bad) pop enter (bad) (bad) cmp loop daa cmp cs lret push ljmp (bad) (bad) (bad) inc mov pop jg dec push and cli or aas vandpd lock xadd push imul lcall movsb pop jg ret dec repnz out mov in jo (bad) (bad) (bad) jmp insb sub fs std xchg ss rcl lret lock (bad) jne iret ljmp xor idivl sub sbb lahf (bad) (bad) decl icebp test and mov ljmp decl jmp jmp arpl fwait mov ret jmp js mov insl lea (bad) (bad) (bad) mov lods inc test pusha ljmp dec xlat test jecxz rorb adc push enter pop icebp popf insb pop push mov and push add (bad) (bad) out test and les push push cmp xorb scas rcl cld inc (bad) inc scas lods cmpsl mov (bad) (bad) decl cmp (bad) jne sbb mov jecxz mov out (bad) jp jnp cmp popf add les cli sub mov (bad) (bad) pushl add pop xchg cmp jg test movsl lahf xchg xor mull idiv (bad) (bad) (bad) mov je daa mov ret xchg fucomp mov pop call jmp dec je std and adc sub je mull mov (bad) jmp (bad) xor lret ror sbb sbb loop inc dec cmpb stos sub popa xor (bad) (bad) ljmp fcoms sub push fwait std popf dec out mov dec rorl xlat (bad) (bad) (bad) call frstor push cmp (bad) sar mov push fdivs push jns (bad) (bad) ljmp xchg cmp aam lcall ret pop inc push and out fs ljmp bswap jae dec out mov sub ljmp mov mov xor mov pop popa arpl jns inc call lcall cli das mov sub arpl sarl (bad) decl loope in mov jg cltd lds xor scas jecxz inc sbb popa lret cmp mov fisubl sbb push xor (bad) cmp dec mov xor mov push inc mov mov mov xchg mov aaa or mov mov nop add mov cmp jne sbb fnsave lods outsl ds imul push pushf xor cmp insb js mov mov (bad) (bad) jg lcall mov clc (bad) lret and fbstp ljmp or sub (bad) incl cmp push or push mov repnz sbb push shl (bad) (bad) (bad) call bts (bad) stos cwtl adc cmp out ds gs jg movsl jg (bad) incl mov lahf jno xchg lea shl sbb sbb lcall (bad) pop jns (bad) aas xor pusha and push and mov pop push fbstp sbb (bad) (bad) decl test ret ds or hlt popa movups imul or scas adc dec sub adc push or inc sar dec jecxz push add cwtl repz and (bad) mov dec pop adc clc lods xchg (bad) iret inc pop sub add mov fild in test stos rorl lcall enter hlt fsubp clc push fisttpll es daa std sbb jg outsl xor ficompl mov add test adc mov mov jecxz (bad) gs jmp or (bad) (bad) mov test xchg xlat scas out iret dec adc out pop int mov dec aam mov add popf (bad) mov jl jge test sub jg scas stos push jbe sarl mov mov mov inc (bad) pop xor in iret mov adc mov ja vmread mov clc es clc decl lods dec mov mov and (bad) js into outsb fisttpl mov je dec or jnp inc xchg xlat cwtl loopne outsl das (bad) (bad) (bad) call clc shlb sbb clc (bad) adc sub xor shll mov add sar push sbb call push leave inc shlb add or mov ljmp stos push cwtl push or sub add adc cmp inc inc mov (bad) mov movl data16 icebp fdivr (bad) call xorl and push loop pop or loopne lcall adc mov push pop fisub pop mov test pop aad adc mov inc cwtl xsha256 cmpsb aad iret idiv dec (bad) decl push daa xor addr16 test mov (bad) jb pushl out cmp lods (bad) push mov insb out enter sub (bad) (bad) inc and test sub push jno inc popa cmpsb (bad) jo push fdivl dec call (bad) decl sarb jle mov int je std pop push jp dec mov (bad) (bad) (bad) pushl dec xor je mov int aam adc pop dec rorb test (bad) (bad) (bad) jmp push mov insl out lcall xor in scas mov js add fildll xchg xchg mov jbe mov xchg out js xchg sahf jb push inc pop dec and xor in adc or dec adc push mov inc iret (bad) cltd and mov mov ss jle cltd mov fisttp (bad) fild les fs xchg mov pushf int popl popa lcall (bad) fsubrl pop jo add sbb jmp jg mov sub lcall sub xlat pusha or inc (bad) fs cmpsb xchg sbbb mov sub inc pop fimul (bad) shl push sub out (bad) (bad) (bad) out dec dec jne scas call popa nop ja pop dec mov (bad) adc (bad) lcall ja mov adc inc xchg popl jge inc jnp mov xchg inc cli add bound leave movsw sbb sbb adc mov dec mov xchg call cs xor sbb loope inc jecxz pop clc fsubs lods jecxz inc adc rorl cmp (bad) (bad) (bad) (bad) jl (bad) int3 push xchg and add call fldt xor nop rcl inc mov out push or sbb loop clc outsb bound adc xor mov or cmpsl and lds arpl lods xor (bad) (bad) ljmp lret shl jge lahf dec in fnstcw fs imul inc xchg mov (bad) (bad) andl lods loop imul pushf and je insb (bad) push xor (bad) (bad) jmp push push fidivrl (bad) mov mov cmp pop lret or mov (bad) decl outsl ja push nop gs push push mov sbb inc cmp (bad) (bad) jmp jle outsb inc lahf mov cld ljmp stos jg in xlat push lods dec lods in dec dec ljmp push ljmp cli add fild dec lods dec add dec cmp das mov (bad) jmp cmp jmp lods pop repnz sbb mov push mov rcl js (bad) (bad) ljmp xchg inc push rol add xchg jbe add std test xor push (bad) jg jmp mov (bad) pop repnz pop jecxz mov adcl xchg cmp out lock (bad) (bad) (bad) fstl push cmpsb xchg ljmp adc jecxz mov (bad) (bad) mov cmp sub inc stc fwait push cli into push lods (bad) or arpl pop push mov (bad) incl in mov add adc xchg mov int3 enterw (bad) jg sub in xchg leave out xor push xchg xchg adc loope int3 ss dec sub adcb jmp test test mov in push and sbb or jge mov lds lock jae xor inc fucomip mov decl hlt in xor imul mov (bad) mov rcrl cmc xor and daa (bad) outsl ljmp jp add mov imul loopne out add xor fnsave (bad) lret enter jmp cmpsl mov xor or xchg testl pop adc push jo mov test test in mull cwtl loop int3 mov sub mov (bad) (bad) (bad) ljmp adc jle push mov js shlb mov addb xor pop or incl out mov inc (bad) (bad) (bad) ffreep scas rorb std out stos jo mov fistpl pusha shlb jo pop idiv aaa (bad) fstpt pop mov or add adc push les dec jnp jg call aam sbb out ret dec mov dec das or and aam incl push xchg loopne mov xchg clc push scas xchg pop adc andl test pop cld mov push fsubrs add jb loop int jmp mov incl push xchg imul inc hlt or scas dec or dec xor jmp cmp and inc xlat idivl fwait icebp xor and (bad) incl cld sub scas inc arpl sbb xchg add cmc es (bad) (bad) (bad) jnp sbb xor ja loopne xchg fildl sub xor outsb adcb (bad) incl je clc add cmp adc pop mov mov test dec inc dec ja dec dec sti adc push aam (bad) (bad) dec ret inc enter dec (bad) jbe pop test lahf repnz aaa loope jbe sub int3 pop (bad) (bad) lcall test jp inc xchg xchg lcall loopne xchg sahf cmpsl lahf daa sarb jmp in fdivr (bad) (bad) jmp mov imul mov sbb push adc (bad) idiv in jge into mov aad rcr (bad) cmp pop mov jne sbb (bad) mov cmp outsb movl xrelease fs arpl int3 pop movsb hlt sahf test pop inc add repnz ds insb mov cli add dec pop sub (bad) (bad) pushl pop int jno insl cmovg and dec xorb movsb sub xlat scas mov call and push jp lcall decl mov mov xchg sti bnd and stos xchg punpckhwd pop in jge pop xchg mov call frstor js mov (bad) sbb outsb mov ficompl xchg addl xor inc dec popf and inc xchg (bad) jp sahf mov stos (bad) mov arpl jge mov call push mov xchg xchg in push push sbb xor mov and (bad) (bad) (bad) jg lds jle aam push adc fild jo xchg aaa jmp push sub cmp sar in sub or (bad) (bad) (bad) jg loop addb or add xor (bad) lret adc rcll lret jg inc cld push mov inc cmp int aaa call cld daa aaa lret cwtl loopne outsb xchg and imul cmpsl pop push dec xorl or (bad) (bad) (bad) fild jb and pop imul icebp mov and (bad) (bad) (bad) lcall push jmp ja add push mov (bad) lahf or test adc sub fdivr dec (bad) call inc inc mov jnp or leave aaa fcoms out cmp imul (bad) (bad) pushl mulb movsl xchg xor xor sar mov mov jns cld (bad) lcall pusha jnp (bad) dec mov nop mov dec (bad) je dec leave xchg shr inc rolb xchg mov in pusha arpl and jns stos (bad) (bad) clc (bad) (bad) (bad) incl mov enter call insb adc mov push scas sbb jl (bad) (bad) (bad) pushl jo mov pop mov mov or stc mov cmp loop pop sub mov pop mov mov sbb bound (bad) (bad) incl lock xlat push test movsl jb sar jnp imul mov sar cmp mov mov add movsl pushf (bad) (bad) (bad) incl xor scas (bad) shrl mov pop jno mov test insb or decl cltd jo popa mov jb mov out mov fisttp add push mov (bad) aam jnp adc int (bad) (bad) (bad) decl push and imul ja stos lret fwait nop dec mov out mov sbb test clc sbb bound jl repnz scas lcall push pop neg (bad) std daa add int sub out lods test cmp (bad) ljmp (bad) fsts or mov mov mov jl pop cmp (bad) sbb cmpsl out (bad) sahf push mov call and add cmpsb sarb mov sub cmp fbstp xor jmp xor and ljmp cmpsl fadd push pop or push mov jnp inc mov cltd push out jne lcall dec in lea xchg add inc push in cmpb loopne dec mov aas dec jg (bad) (bad) (bad) jmp cs cmpsl xlat xchg push jmp lret rcl mov mov push xchg xchg or cmp popa int3 jmp ja jecxz stos shr mov adc inc mov jb inc jg pop hlt add or inc add ja ret (bad) cmp test dec out outsb mov pusha dec addr16 xchg xor fsubs cwtl pop insl leave arpl addr16 out mov (bad) decl (bad) daa pop scas enter movsw sbb loopne stc enter sub lods dec dec xor (bad) (bad) lcall dec shll pop push in jne cld cmp mov insb imul cmp jge sbb mov dec add (bad) das xchg sbb xchg cmp inc test call pop fdiv or test pop and (bad) aaa xor mov mov (bad) mov pop add mov xchg aaa pop lea lds cmp into repz jge lea push cld pop shr jecxz push push sahf dec mov xchg mov pushf (bad) (bad) (bad) call lds mov mov push stos pop dec jnp dec cmp inc add shll (bad) (bad) (bad) jmp xor pop cmp (bad) syscall rcrl sbb inc mov addr16 ret ret sbb mov je aam mov add sub jge sbb cmp or mov notl pop scas clc sub mov or sub sub popa dec add adc jmp lahf xchg cmp test js (bad) (bad) (bad) dec xchg nop sub mov add sbb xor inc lea pushl (bad) nop imul pop adcl call ljmp nop (bad) popf sti lret xor cltd sub jnp add pushf insb push sbb pop std (bad) (bad) ljmp jbe inc mov push fiaddl (bad) sti and mov push (bad) (bad) pushl fcoml mov jb lock or pop and lds adc pop dec jbe in cld cmp stos loope test ret pop subb xchg sub adc adc les inc mov enter adc cmpsb add arpl inc test int fdivrs mov adc and mov cmp inc outsb fsubl (bad) (bad) lcall addr16 ror testl pop jge mov push cmp (bad) (bad) jmp iret cmp cmp inc jle lds fwait inc fnstsw mov ljmp out and add dec or push fistp cmpsl sbb (bad) (bad) (bad) incl or adc loop ret dec out push sbbl loope pop pop and mov (bad) (bad) inc (bad) repnz push cmpsb scas mov popa jne dec loopne add sbb add and (bad) (bad) ljmp jmp cmp (bad) mov std sub xchg int3 sahf lods inc loop in pushf les pop andb jp addr16 fldcw sbb out clc insb out mov (bad) (bad) (bad) (bad) mov int jle mov out mov fwait cmp xor loopne sub dec lret push (bad) (bad) push frstor pop sbb push mov mov je xchg xchg js pop dec imul call bound call adc lcall cmp pop push test xchg hlt mov (bad) (bad) (bad) pushl mov jmp sub movsl pop cmp push inc jmp mov gs push leave cld and dec lock mov das push xchg lods xchg or ljmp aad mov in mov push popf adcb adc inc add in xchg (bad) (bad) dec rorb repnz rorl jo push jle jo ja or imul dec loope sbbl pop rcl mov pop push je cmp pop cld (bad) ljmp dec mov (bad) (bad) dec ret jg sbb cmpsb gs (bad) (bad) call add push cmp lea inc xor (bad) (bad) repz sub push call cmp mov pop pushw cld les mov (bad) (bad) cmp and fimull xchg sarb test fucom and (bad) (bad) ljmp dec jae loop sbb xchg lods clc or pop das sub mulb fidivl fcomip incl ret mov insl jne rcll mov pop sub icebp add xor xchg (bad) xor (bad) (bad) call pop cmp push pop es arpl xchg ja xor xchg cltd repz pop xchg and (bad) (bad) (bad) jmp movsl mov fs repnz ret test imul in fild aad and cli decl jnp scas int3 test sahf sar xor (bad) jle or inc lret ljmp les in push sub cmpsl faddl push incb push fsub mov jp je,pn adc cld rcrb jb xchg andl lcall fcompl and inc jns pop xor sbb (bad) lcall scas notl jae or push icebp and sbb out ret (bad) (bad) incl mov mov pusha and les add imull lods inc xor jg inc push cmpl or dec dec push out pop call std call (bad) jne push sub inc mov gs shrb mov sub ret (bad) jmp jns adc loop bound mov sbb add adc push fwait (bad) call mov out pop cmp xchg inc push sahf or xor cld call push jae fimul cwtl loop (bad) (bad) (bad) jg inc je xor sub xchg in ret hlt aas mov lahf sub mov test (bad) (bad) call ljmp xchg stos stos faddl cmc mov jle mov and pushl adc les pop mov mov and bnd pop inc sti fisubrl (bad) jg call mov adcl mov rcrb xchg jp inc int3 aad cld and jp (bad) (bad) jg adc out movsb scas movsb mov outsl mov popa push in jo into loopne sub push (bad) mov jge (bad) rclb je sti pop jnp add aaa xlat push jg mov arpl aaa sbb (bad) jnp lods pop ds (bad) mov inc (bad) je or lods or lcall adc lcall pop dec hlt cmp andl xor (bad) (bad) (bad) lcall lcall pushf lcall out (bad) lcall xchg stos jp (bad) call pop sbb ds insl mov lea test and (bad) incl sbb stos add lock fcmovnbe scas stos jb cmp add mov cld xchg xchg outsb dec (bad) jbe sbb mov stc std mov (bad) (bad) (bad) ljmp mov ret aas outsb sub loopne jp inc pop lock inc inc push into mov gs and test jo sbb ret lods mov js fnsave sub nop jns (bad) shr shlb jecxz loopne (bad) (bad) jg pop pop or stos xchg sub mov lock fs dec (bad) decl ss xor pop test mov push (bad) jge inc ss dec dec adc pushl cli test (bad) sub (bad) call iret xchg cmpb mov jae movsl jecxz decb xor adc loop mov (bad) call wrmsr xor fcompl pop inc gs mov subl and addl mov push adc inc cld lock rol jmp imul xor dec pushf je mov jb fnstcw (bad) aaa mov mov data16 (bad) adc and (bad) call jbe or cmpsl outsl test notb add xchg in mov ljmp outsl mov frstor or xchg fwait lret je gs jmp mov jb mov popf inc fnop xchg rol jae icebp (bad) pop popf mov pop cli pop movsb lcall (bad) (bad) (bad) lcall sbb rcrl push ljmp (bad) jbe leave lcall loop (bad) (bad) (bad) call dec sub xchg or or pop mov stc jne pop in (bad) les lock fdivrs (bad) (bad) (bad) decl dec stc stc rclb xchg pop es mov cmp push push push andb cmp mov (bad) (bad) (bad) decl rcrl cmc cld std add cs es cmp loope add pushl popa bound sub and mov push pop es (bad) (bad) (bad) fisttpl dec mov sbb adc jg in add leave pop or hlt or decl cmp icebp pop sti mov (bad) (bad) (bad) inc inc fistl xor bound loope mov mov outsb pop (bad) jne cmp incl pop sbb pop ret push inc lret add cmp mov repnz dec pop icebp loopne push inc jp mov (bad) ljmp push push adc mov or (bad) (bad) decl popf mov jg leave orl adc andl dec incl jb (bad) (bad) push lret pop into dec sbb call pusha inc add inc popa cmpsl lret enter cltd cmpsl sti ja lods jno mov add ja sbb adc add ds mov mov (bad) (bad) decl add xchg sar xchg cmpsl inc mov fcoml fcmovb scas push aad xor sub sub mov cmp inc jg lds xchg jg inc dec push mov call in sub sub decl mov xor out add push and test nop dec sahf in ss or adc das mov int pop sbb stos es cmpsb (bad) call test and stc int push outsl pusha pushl adc mov pop xor add (bad) decl jo and aam cli cmp jge jne add fistpl jnp cmp out cs add dec xor dec cmp dec mov xchg in cld aaa cld dec mov jo dec push (bad) lods push repnz dec push lret xor bound xor cmp ret pop xchg mov sbb dec ljmp arpl (bad) (bad) jmp push arpl sahf pop mov cmpsl mov sub xor or jbe (bad) (bad) lcall inc mov rclb or clc push lcall les insl dec push inc icebp stos popa loopne mov cld cmc into int dec decl fmulp mov sbb es cwtl fnop (bad) (bad) call sub sub fs scas or outsb incl and and dec insl loope mov push adc addr16 jmp mov clc (bad) jmp fwait pop shr icebp aas jo inc push dec setnp (bad) push sub sub pushf (bad) out mov add (bad) (bad) lock ret mov (bad) (bad) jmp sbb adc out cmp in sbb fs sbb ret pop hlt sub (bad) (bad) (bad) ljmp shrb hlt mov mov int3 xchg (bad) iret mov cmpsb repnz sbb je push xor (bad) xor ret jb (bad) jmp lock mov cwtl lahf mov cmp ljmp (bad) (bad) (bad) (bad) fildl ficoml dec mov cmc sbb fld and adcl cmpsl (bad) (bad) (bad) ljmp sbb inc ret jno and mov sarl loope in popa push adc (bad) cld (bad) (bad) decl or xchg scas pushl cmpsl jmp testb sbb (bad) lcall aaa push sub int (bad) out clc fcomps dec mov sbb repz pop scas shr jo inc enter (bad) decl jl jb ljmp outsl jge add cmp int3 addr16 push (bad) (bad) (bad) jmp std lock out aad loop sub bound sahf out sub pop cmpl xchg xchg pushl incl jns bound cmp popa pushf mov push out push imulb insl lds pop pop (bad) (bad) push iret fistpl sbb ljmp mov and adc adc and cmp mov (bad) incl adc xchg fild xor dec inc lods inc es fistpll cmp or (bad) (bad) mov or xor cmc mov cmpsl pop pop stc add push jp dec xchg mov ljmp rolb inc inc and insb mov repnz or mov cmp mov and pop cmp lea std jecxz add sbb cld sub (bad) stc (bad) incl push stos pushf repnz call shll jb mov call mov gs fidiv cs in push jbe (bad) sbb in test (bad) (bad) call sbb cs dec loope shr dec ret fsts (bad) push push insb push sbb mov or add (bad) (bad) pushl fadd loopne xorl fcom insb jl or addl rcll pop (bad) (bad) (bad) fidiv mov pushf call xchg xor sbb mov mov in incl nop lcall sub mov imul ficompl pushf cmp adc pop xor call mov lods scas pushf xchg add loopne fisubr adc test mov mov divl xchg lods aaa adc push gs (bad) jecxz loope movsb or push clc (bad) fcomip pop jge push mov mov cltd or faddl inc pop ja aas (bad) ljmp je loope (bad) push ds pop rcrl (bad) (bad) mov fnstenv mov jno or mov xchg xchg popf mov jne dec stos mov or ljmp cmp lcall in mov pop loop,pt jge sbb jp jbe es push (bad) (bad) (bad) ljmp test fs pop sub cmp sbb mov fldcw (bad) (bad) jg xor mov jge xchg clc js (bad) imul sti jb pop int (bad) (bad) call push mov or bound mov das cmpsb daa push mov ret and pop (bad) (bad) (bad) call movsl dec call jae rclb push inc jle (bad) mov repnz in (bad) (bad) (bad) jmp jge inc lock cmpsl push mov mov dec test mov cmp insl mov mov (bad) cmp dec xchg sbb and mov (bad) jg loope sarb addr16 les xor xchg fldenv pop (bad) (bad) (bad) mov lcall xchg or xchg mov mov pop in in das lret in jmp mov or xlat pop out inc and jl (bad) (bad) pushl add clc rol jnp jo dec xchg fwait mov enter pop push cmp jg icebp jle mov dec inc imul dec xor push mov sbb shrl inc adc test mov (bad) mov (bad) and stc xor lcall inc dec ljmp call mov repnz ds fld jp jb enter xor (bad) (bad) (bad) call and cwtl push in push rcl jno jl enter iret adc fisubr dec cltd and xor (bad) (bad) lcall mov gs adc mov dec enter push movsb fs lds shlb (bad) incl cld push dec pop sub arpl bound xchg xchg fdivl bound (bad) (bad) push lret mov push lods pop xchg xchg and cmp lods aam sub add frstor jp mov xor dec (bad) mov push in pop xor sbb call (bad) (bad) sti (bad) repnz or (bad) fadds adc shll (bad) jbe mov inc sub divl ljmp jno xor test cmp inc rcl out (bad) push aaa xlat enter pop mov outsl cmp jg or sub xchg test imul daa icebp test loopne add adc push lret sub jno add (bad) jno mov jmp fwait clc pop lods push mov sub (bad) (bad) mov mov sbb lcall cmp xor push (bad) (bad) (bad) (bad) cmp adc jg mov push cmp adc int3 mov in xchg adc lret inc push std (bad) (bad) incl cmp mov xchg push cmp inc bound xchg pop pusha sbb (bad) (bad) pushl outsb (bad) (bad) dec add mov stc es and sbb pop jmp and and lcall adc pop push aas sub in movsb shll data16 and (bad) (bad) (bad) (bad) outsl mov in (bad) push (bad) sub pop mov pushf dec std push mov or fcomip (bad) incl fs pop push lahf stos mov jecxz add and in mov incl mov jle xor je ljmp mov xor (bad) mov mov inc mov lcall std sub mov cwtl pop xor mov xor mov push mov aas push insb fadd lds (bad) incl sti sub mov mov lods test lods lret dec daa jbe sub iret mov shrb into jmp mov mov dec sarb popa push dec in daa xor (bad) (bad) decl sarl ja,pt lea repz inc out loop scas fwait lea loop (bad) out fmull movsb sub les sti data16 jecxz mov decb dec js add cmpsb fnstcw (bad) rcrb decl mov out push mov jp inc rcll mov movsb das (bad) (bad) mov lret mov xor hlt dec mov mov addr16 (bad) (bad) incl pop lcall in std cmp pop lods mov push das movsl scas cmp mov hlt add (bad) ljmp pop mov jnp jbe jbe add or (bad) pop decl mov adc aaa pop test ds push (bad) (bad) pushl cltd lret xchg add mov cmp in shl push xor (bad) (bad) mov cltd jns sub adc movsb dec jns xor inc adc pusha inc scas and lods cld (bad) das add je pop cmp xchg dec mov cs pop dec dec stc arpl cmp push leave xchg xchg prefetch (bad) (bad) jg iret inc xchg inc neg lcall mov adc push stos cvtdq2ps (bad) (bad) (bad) (bad) (bad) fdivrl (bad) mov out lret imul mov inc sub (bad) push xchg push test add insl fwait (bad) or outsb aaa movsb stos sub outsb lret mov sbb mov jle add xchg adc dec mulb (bad) int3 (bad) push mov or push std call test xor mov mov in fwait (bad) (bad) (bad) (bad) jnp dec (bad) mov pop cmp js aam mov add out scas add pop std (bad) call ret aam xor mov inc gs sbb out push ret fs sbb fnstsw lret mov (bad) (bad) (bad) mov lock out movsb leave int3 fisubrl xlat pop popa imul std dec xor (bad) lcall cmp insb insl in push inc inc dec mov inc sub lock cli lcall movsbl xor movsl jmp mov aad pop pop mov (bad) ljmp mov lea pop mov cld xchg int jp pop (bad) scas cli outsb cwtl adc sbb pop xchg jnp xchg leave sbb dec inc lea push loope and (bad) (bad) dec fisubr dec xor mov push outsl add adc sbb pushf shll sub outsl mov mov je adc push adc push lock nop cmp push mov mov mov mov testb mov push notb in pop jge movl ljmp xchg outsl (bad) (bad) (bad) pushl test mov (bad) sub or add jge (bad) mov sbb pushw rclb and popa lods dec cmp cmpsb ret imul add cld imul test (bad) mov movsb ret and (bad) (bad) out insb in nop add pop xchg popf sub int3 fistl (bad) mov lods incb imul lock and cs or rorb (bad) (bad) decl adc cmp data16 push test pop inc pop inc lcall ja pop (bad) (bad) (bad) ljmp sub push jbe mov lret pop adc mov cmp lret lcall mov or cmpsl je out sbbl scas mov push (bad) arpl jae push inc (bad) mov mov sbb (bad) mov mov (bad) incl inc cmpsl jp test push pop jb imul (bad) incl adc mov cld add adc add mov dec jb aad fcomi addr16 (bad) (bad) decl imul (bad) pop pop dec (bad) scas in jnp out mov in dec jmp pop jge or (bad) and jae test movsl jno scas shrl (bad) (bad) (bad) cmp xchg ja cmp pop pop xlat sub xor adc xchg mov scas push shl fs xchg bound (bad) and adc out cs mov add rcll pop pop sbb cli jmp cmp (bad) push dec push aas adc pop cmp test mov ret addb jae in in add pop mov enter ljmp pop adc pop pop xchg xchg (bad) (bad) (bad) pushl sub push popf (bad) mov nop mov fild push and mov pop clc jle pop (bad) (bad) (bad) jmp add movsb mov repnz cmp xor pop jbe roll mov (bad) (bad) (bad) call push add mov dec xchg fs rorl sbb jge inc jp and mov jae (bad) (bad) call ror loop (bad) cld xchg mov push or flds mov lock sbb ljmp clc adc lcall test scas mov repz fcoml jno or lock pop (bad) jg call jecxz rcrl fdivs stos mov icebp push mov push mov test add jnp xchg mov js (bad) (bad) dec pop decb xor mov pop add fs push mov insl sub gs ret vmulsd add or cs push push clc xor pop loopne jle mov stos or jnp push pop ja (bad) (bad) (bad) ljmp xlat inc add sbb adc hlt ss out popa sub enter ror (bad) (bad) (bad) incl les mov push fwait jb fidivrl mov mov mov (bad) (bad) incl xchg popw sbb test or test hlt test push jge and inc or (bad) call inc cltd sub add ret mov into mov (bad) aad xchg dec lcall test dec fwait dec xchg push mov sbb mov (bad) (bad) call ja sub rcl sub or cmp lods sub cmpsb in (bad) (bad) (bad) (bad) incl xor mov je dec mov sub push and mov push cmc push (bad) (bad) (bad) (bad) call mov fs movsl xor mov in xor std push roll mov ljmp inc shlb dec cmp inc (bad) (bad) (bad) out push push rorl lods pop ficoml lret xchg push arpl clc sbb sub js push nop mov mov jp (bad) (bad) out pop call addr16 push ja jmp mov cli mov (bad) decl out imul stc adc popf and mov mov out cmp jnp inc fmull ret inc clc (bad) (bad) (bad) incl test jo cmp jg (bad) push and xchg jne xor decb repz sub outsb lea push (bad) (bad) (bad) pushl (bad) ljmp cmpb push scas mov jmp sub jl (bad) (bad) ljmp sub mov mov shlb shlb xor inc jge test aam push out sbb (bad) cmp ja int3 out and lods jbe fs mov xchg or rcr xor (bad) fist leave mov sbb fisubrl dec jecxz xchg in rclb sub (bad) (bad) pushl adc cmp mov dec cmpsb xor ret mulb or mov (bad) (bad) call push les sbb ucomiss call mov xlat or mov (bad) (bad) incl cltd lods test jne sub sub or (bad) popf inc mov repz xor (bad) (bad) fisttp or or adc lret mov inc jp ss (bad) (bad) jg sub ss fidiv jb push sbb cmc outsl cli adc (bad) (bad) call xor xchg push popa enter push test and mov xchg pushf std (bad) (bad) jg push cmpsl push in rorl sahf mov adc ficompl (bad) es mov push xchg jbe insl popf mov pushf pop orb es idiv (bad) (bad) mov (bad) in rolb mov aad mov mov idiv call sbb sub sub lea imul mov jns (bad) (bad) decl dec mov iret iret adc in sahf add or xlat rclb imul fistpll scas test inc imul imul fwait jge lock jmp lock sbb cmpsl ret cmp sub add xchg ret jge incl mov inc jge,pt xor push mov int out arpl add loope outsl notb test std xchg xchg cmpsb dec mov (bad) jg pushl adc cmpsb or add bound sbbl sti inc daa out dec ss hlt scas lds jecxz inc repnz add iret push (bad) (bad) incl xchg pop adc imul in jnp xchg shrl sahf mov fmull xchg pop or or mov ret daa adc rorl fild inc popa in out push fisttp dec cld (bad) fisttpl das (bad) mov lahf jle pusha daa sub and dec mov add xor ret pop jg sub sbb sbb jecxz sbb lcall int3 test xchg fdivrs outsl pop push (bad) ficompl ljmp push add sahf jl in leave sbb imul lcall pushf and shll clc mov test add mov loopne (bad) incl sub jb pop add jnp cmpsb (bad) jb and sub sub dec (bad) shrl (bad) (bad) (bad) pushl into pop icebp mov mov int outsb and fimull into aad xor call sbb inc leave pop jmp cmp (bad) (bad) call iret dec cmc rcl push sbb stc dec cmpsb cmpsl out mov aad into lret outsl clc movl (bad) (bad) decl out pop ja inc aam adc mov mov push add push cld (bad) (bad) call jle ret inc popf cmpsb sub je js push bound lahf jg adc das cli ja lods std loopne aas sub adc xor and sub add mov faddp xor mov in fisttpll push pop in enter adc iret fisttpll sub loope inc xor mov mov dec add out dec movsb sub into ss (bad) (bad) (bad) jmp enter (bad) or icebp xchg fnstsw adc (bad) (bad) (bad) decl insb pushf push mov pop fistpl inc add movsl push repz push push mov (bad) decl mov fisubl adc out aaa pop test cmpsl jp ret sub stos (bad) (bad) (bad) (bad) and cmpsl dec mov push loope push divl cmp and test (bad) (bad) jae mov decb call icebp fcmovnu bound xlat fdivl movsl nop adc (bad) (bad) mov xlat std (bad) jmp xchg dec je push call jecxz sub es aaa inc shll mov repnz lods xchg xchg iret mov and cmpsb (bad) (bad) (bad) (bad) mov adc add das lret add cmp sub (bad) pushl aam hlt xchg cld push lea inc jle (bad) push or jp ljmp lock xchg pop jbe rorb fisttpl (bad) (bad) push mul bound leave ljmp dec inc inc xchg ja xchg sbb (bad) incl aam les loopw or push sti daa repnz iret (bad) (bad) (bad) (bad) (bad) cld mov sbb call push xchg xor call (bad) mov pop (bad) (bad) (bad) pushl or lea cmp adc outsl jbe loopne adc inc add aad ds pop dec (bad) (bad) (bad) call insl and mov add xor in dec or jno or xchg add std (bad) incl or fs sbb in stos jno jo mov (bad) das (bad) (bad) (bad) (bad) ljmp inc push pop pop push ror loopne lea mov push sbb stos pop lds (bad) (bad) (bad) (bad) cmp xlat push lahf movsb mov and call int3 and jg push mov jb (bad) (bad) (bad) call (bad) mov ret pushl sbb loop int3 jae mov adc cli lahf dec (bad) (bad) (bad) ljmp pop inc mov jg cmp neg imul scas sub xchg sarl push mov ljmp mov (bad) clc push je jp stos cmp lds fcoms or (bad) jg stos loop stos sub mov mov jmp xchg data16 (bad) (bad) jmp dec in push icebp and xor inc adc stos inc jg out addl xor fistpll decl lret aam sbb fmuls aam mov bound cmp fnstcw xor cmp sbb fwait (bad) jmp inc cmc and sahf inc dec cs out jg out out mov lock call test gs sub hlt subb mov (bad) (bad) fstps stos in inc in aas fstp call mov dec jo insb pop pop adc pop push cmp lahf call out pop inc jnp cmc adc (bad) jle adc mov int3 sahf xchg clc (bad) (bad) pushl and xlat test loope pop jecxz dec jp or jnp repnz ret incl sbb arpl or out daa mov aaa shll add insb into repz xchg jmp mov adc lds loopne test (bad) (bad) (bad) fisttp dec or test dec testb subb mov push mov dec (bad) ljmp cli mov sahf popf scas fidiv fs xchg addr16 addb pop out add cli ret cld xchg (bad) decl pop das cmp iret leave push sub cld inc pop insb incl std dec daa sbbl xlat sub (bad) movsl ret or mov (bad) call xchg pop data16 dec sub jle mov and js adc les pop call inc (bad) test lods push repnz xorb (bad) cs das dec mov (bad) in jbe int3 lea fcomip push jle subb mov lret mulb insl fs call mov dec push inc pusha hlt pop push fwait ja xor (bad) lcall and in adc fwait je push mov hlt inc sahf xor mov loope nop cmp mov pop cmp insl popf das jns in mov inc in ds lahf repz (bad) (bad) jmp push mov push out xor mov mov int3 mov loopne cli dec xor or add add icebp insl enter dec sarl xadd xchg lods (bad) push int add and xorl push cld push ret cmc ds fbld (bad) (bad) lcall in fisubl mov lds inc dec xchg popa out or fiadd lret dec incl adcl mov jl call push int3 (bad) (bad) (bad) call sub ret xor cmc fisubr sti mov ja xchg (bad) fist adc jge xlat adc mul add lea cmp scas and lock push mov jae into cmp jmp xor xchg mov push mov je (bad) je add in lahf mov dec imul (bad) call arpl bound and sub cld repnz inc add fcomip scas push adc fdivs cmp jno sub pushf pushf (bad) lcall cmp sub imul addl mov (bad) (bad) incl dec add repnz leave (bad) daa js sbb (bad) sub push push sbb popf mov ss pusha adc std mov mov call lock xor sbb and test (bad) (bad) push mov repz imul repnz stos mov or bound subl cmpsb jae mov push loop mov sar (bad) (bad) jg ds out loope pop jg add lods and jo int3 (bad) dec jecxz adc mov pop test pop ficompl cld cmp and aas in add (bad) (bad) pushl push and jp sub cmp test pop lcall lea pop int xor pop sub or cmpsb mov xchg lcall cmpsl jge push inc mov (bad) clc (bad) jge pop push cld xor stos add jmp subl inc jmp adc or (bad) (bad) fldt ret lods mov mov adc fbld xor lods scas hlt aam lret stos incl les lcall xlat cmp (bad) cmp xchg push cwtl jecxz (bad) push push adc rcrl and inc xor xor call loope dec fidivrl inc mov inc cmp jecxz push push pop xor (bad) (bad) (bad) call jnp and jp xor sub mov insl test fisub pushf or dec cli (bad) pushl dec movsb ds scas mov sbb es push rorb push dec (bad) (bad) (bad) mov pop adc popf mov fcmovne dec dec ds jl mov mov in sbb push data16 ret or push or adc pop mov xlat (bad) (bad) (bad) ljmp int3 pusha dec int3 shrb push pop ja (bad) dec jl adc ja test (bad) (bad) pushl into and call out dec and shll icebp cmp (bad) (bad) (bad) decl arpl (bad) cmp add jnp mov pop and jecxz mov decl or call (bad) sbb fildll push sbb (bad) (bad) (bad) jmp mov sbb (bad) mov in push fisttpl imul nop push dec mov (bad) (bad) (bad) (bad) jg icebp mov fdivrs or ret jne xchg (bad) pop clc lea mov decl int adc outsb outsb push xchg cmpsl call lcall inc mov sbb jecxz int3 add cmp pop lock call and je (bad) lcall cmp into imul inc cltd popf adc xchg inc jle sbb pop push outsl and call cld call into sub iret out scas pop or popf add xchg jne jo cmp incl test lcall imul (bad) jmp ja bound or or mov xchg jle std enter (bad) pop push (bad) (bad) dec aaa addr16 jbe sub push call pop sbb fidivl (bad) (bad) ljmp or or jecxz mov xchg test jo dec pop and xchg sub adc sub cmp shrl xor pop nop mov xorb adc sti dec inc mulb (bad) mov dec fsubrs adc xchg pop cmp into add and bnd adc scas pop adc inc inc cli pop add sub sar (bad) (bad) decl loop xor rcrb lods cmp rcrl cli inc ucomiss pushl (bad) sbbl scas push mov jno idivb and ljmp (bad) jecxz or push sbb inc sub push and mov (bad) (bad) decl mov int xor iret decb jno,pn pop push mov out sub pushl lock or ret pop sbb xor stc sub in std (bad) (bad) (bad) adc mov jae push lock mov jns and ss ljmp and cmc xchg sahf sbb push lds sbb or ljmp mov fidivr sub pop lock add (bad) mov push cs xchg add sub xchg xchg push fistpl or in int inc ficompl inc movsl sbb frstor insb adc inc mov adc pushf rcrl mov mov inc xchg xchg xor pusha popa xchg stos fmul cli out jno inc aad add mov jg aas hlt jno bound lcall ljmp and insb adc push shl (bad) cmp addb fcompl inc out xor sub (bad) (bad) (bad) mov loop push movsl icebp or jg fwait xchg sbb fs xchg jg incl mov inc in jno mov xor sbb setbe pop dec daa jle cs scas mov adc (bad) (bad) ljmp cmc mov and inc pop and mov stos dec fucomp insl cltd dec xchg dec adc call cmc ds das adc inc shlb popf mov fucomip clc or outsl xor sbb fstpt or pop cld mov lods sar pop dec in push jg decl adc ljmp mov test lcall (bad) (bad) (bad) (bad) ds daa push xchg mov imul das xor pop lds mov push clc (bad) dec mov lcall mov out ds sbb jo jnp gs (bad) (bad) pushl lret cmpsb mov sub mov jg add (bad) or in (bad) lcall in pop jl out xor insl fildll stos jge mov jmp sub pop imul cwtl push es ds (bad) (bad) decl cmpsl dec out pusha xchg mov mov into cmpsl daa mov xor push dec pop scas xlat push dec push (bad) (bad) lcall rep insb mov les aam push js sub sub stc lods jo fwait je sbb pop hlt ficom add cmp sub je pop push sbb and mov cmpsb cld adc xor dec xor xchg notb push jo (bad) xchg cmp mov xchg scas pop sub dec outsb add and and mov jae or xchg mov pusha lret pop into loope cld (bad) cld inc bnd mov daa lods sbb out mov (bad) (bad) (bad) mov idivb fnstcw mov jl inc dec xor mov clc sub loope ja jne addr16 cld pushl mov cmp sbb sbb add jg mov pop mov gs mov push scas lcall or mov inc adc pop fwait lcall mov cmc (bad) (bad) fnstenv daa fnstsw lcall ljmp jge lds pop (bad) (bad) (bad) push test out (bad) dec jmp mov and mov lods sub lock out cli pusha xor push or cli xchg mov cmc out jne outsb mov inc mov mov push mov and push and (bad) subb cmp push push imull jecxz scas dec xchg jl nop xchg shl sub mov push mov xchg xchg sub call inc push ja inc xor fistpll sahf inc jo stos fild xchg ret es jle,pn cmp ja int3 jl xor jne jns pop out fwait js mov out xor rcll push pop outsl nop icebp push inc in mov sbb test dec (bad) (bad) je insw cmp mov shlb jnp dec (bad) (bad) (bad) pushl ret or ja sub mov jmp cwtl aaa scas cmpsb jns stos ss loope scas xor add (bad) (bad) (bad) incl sub fldt stc dec xor lods stos pop lods (bad) push (bad) (bad) mov cvtps2pd or add fwait out or mov push (bad) (bad) out cli xor inc mov arpl sub jns (bad) nop mov sub lock sbb pop and int3 aam (bad) (bad) mov popl jne or jl sti adc xchg outsl repz mov jnp (bad) (bad) jmp ss test push mov idivl push sub fs jmp push shrb pop test or (bad) cmp or jo enter fs (bad) (bad) lcall outsb sahf mov insl xor jmp cwtl ret xchg push cs xor dec call cli xor rclb mov data16 stos lock (bad) (bad) (bad) call (bad) (bad) sub ss dec xchg and (bad) adc jecxz btr cwtl sti (bad) (bad) push and mov movsl xor jbe xchg pop push (bad) out (bad) in mov mov mov rol jg adcb rcl (bad) cmp ret jnp imul mov jl (bad) lcall pop xchg lock xor pop (bad) fs mov add incl xchg pop fwait mov sub testl ficoml arpl lahf (bad) (bad) (bad) (bad) ds cmp mov adc mov cmpsl mov sbb adc ss (bad) (bad) (bad) call das sbb mov cld add (bad) incb (bad) cmc xchg lcall in cli decl aad pop xchg xchg bound (bad) adc push inc add aaa inc (bad) out out dec arpl sbb mov add inc jb mov inc pop mov pop or cld xchg push sbb std push mov push stc jecxz call mov (bad) (bad) (bad) call and gs outsb jb dec iret pop mov xor test ja mov je stos pop sbb (bad) (bad) decl xlat scas sbb sbb or jb jno xorl out out leave jno lock out xor and dec adc stc sbb (bad) (bad) (bad) out push clc jg pop push inc push sbb fiadd in ficoml test inc fdivrp (bad) (bad) call pop fs adc push fildl fdiv xor (bad) push mov aam push loopne (bad) jmp cmpsb test jns mov xchg dec mov mov pop loop xchg and (bad) call sarb loopne jge sub sub pop push add dec rol int3 ret dec add or icebp (bad) (bad) es fwait inc pop jecxz or mov insb pop mov stos dec sar test sub sahf (bad) (bad) adc dec jae cs enter and roll push icebp inc sti mov sahf push rolb seto xchg adc insl sbb and xchg test mov (bad) mov sahf test mov dec rorl nop sub cmp sahf cmp (bad) (bad) (bad) pushl (bad) std lret orb loop clc sti scas (bad) bnd and push (bad) (bad) (bad) pushl neg jge imul mov sbb sub (bad) jae sar aam (bad) lds pop hlt xchg (bad) ret fdiv rcrb lahf jns imul push into mov lds (bad) (bad) call push rep sbbl test out mov xchg inc (bad) dec mov lods cs and pop lcall dec cmc test js movsb and sbbl cs pop loope jge std (bad) mov arpl call jb stos xchg pop (bad) (bad) jg rolb divl (bad) push clc xchg cs inc jg cmp jg incl or xchg test push bound mov or (bad) call and cmp sub cmp (bad) sub sub and mov into push and cmp mov mov sub mov pushf fistpl lret mov add in pushf inc inc in lods and sub incl add out sub sbb adc lcall or xor fsubrs xchg mov pop lods jg clc outsl inc dec add dec sub psubsb mov dec dec and ljmp fldt popf lea mov sub mov inc lcall and je idiv (bad) (bad) (bad) pushl cld push jge pop xchg stc add outsb xlat and push adc jg icebp pop bound push xchg jecxz sbb sub bound rcll sub and mov and push or inc sbb loopne xor call pop cltd pop cmp into jnp clc push push mov add jb inc subl sbb lock sub loop negl jp icebp mov pushl adc pop or leave test add lods cmpsl lds cmp push ljmp jmp pusha adc sbb mov adc fnstcw pop xor sbb (bad) fidivl ljmp pushf lods sarl cmpsb call xchg imul lret ficoml push ss dec mov fcoms xor add cwtl js add (bad) (bad) (bad) (bad) call lahf loop pop jno das push sub in ja pusha xchg in add mov flds in icebp pop xor lods addr16 int3 push mov or (bad) incl mov andl addr16 (bad) (bad) incl jl push xchg movsl push mov inc cli leave pop mov pusha leave (bad) (bad) (bad) lcall lods sub in jb xchg (bad) mov mov jno clc icebp int3 add xor ja subb xor hlt push adc mov jne fcomip jl mov iret mov pop enter pushl mov mov (bad) scas into mov (bad) lret push cmp (bad) (bad) ljmp and push xchg lods mov pop (bad) fistp push repz dec dec dec call push into mov fdivrs (bad) call inc ds cltd sbb cltd scas lods inc add lcall movsl dec out fsqrt ljmp and cld scas push outsb inc push push data16 cmp out sbb rcrb (bad) (bad) dec sub out or inc cmovp andb data16 int3 xchg cmp outsb xchg imul pushl push andb jl pop sub ds and inc pop test xor aas in and (bad) (bad) (bad) (bad) jg aam sub daa movsl rcr dec icebp mov in jmp dec xchg fucom call (bad) sarl and dec pop mov push aad and adc add sub mov (bad) sti mov test loope nop cmpsl mov pusha mov lcall sti fimull inc sub in cli cmpsb fstl stc pop xchg negl push in pushf push adc rorl icebp pop lret pop je stos sbb mov insl cli and lret popa pop cmp mov (bad) (bad) decl movsl push cmc jbe dec cmp (bad) dec gs mov mov push das les fdivr (bad) (bad) pushl out jmp popf and mov es das push sar imul mov popa mov pop andnps subl lcall call mov pusha lahf repnz enter std aaa cld (bad) out jbe test jns call mov jb aaa mov ret sbb jl mov (bad) (bad) (bad) decl pushf ss mov retw mov mov in mov leave movsb fninit mov add mov mov jecxz aas and es stos (bad) (bad) jg sub (bad) lret add add (bad) rcl lret cld in and loop jg or ja lds je inc sahf movsb repnz outsb mov in sub jl dec mov repz aaa std lcall aam xchg sub sbb roll mov push push mov call dec mov mov pop xchg (bad) aas mov rorb xor dec or (bad) in (bad) pop jmp insl pop jb fiaddl xchg pop and push addl iret xchg lds jg (bad) lcall cltd jns scas (bad) fucomip pusha fildll sbb ficom (bad) (bad) incl xor cmp sbb push push sbb nop xchg enter int3 mov and dec (bad) (bad) (bad) jmp inc pop scas push mov jmp les call test jl dec negb pop std mov cs mov loope push iret cmp movsl jo cmpsb dec repz clc (bad) (bad) (bad) incl notl lahf xchg js xchg cltd cmp outsb or push and push mov imul pop cmp mov enter cmpl mov mov fsubrp or sbb sbb xchg in subb adc cli cmp movsb testb xor or je and push (bad) sub imul lcall sub ja xchg xorl pusha inc fnstsw test inc (bad) (bad) ljmp or insl jae in (bad) int das call repz aam (bad) (bad) ljmp lds add xchg dec shll mov mov ljmp repz jl mov adc sbb cli aad ds (bad) (bad) pushl out xchg (bad) adc xchg daa jbe sbb fimul push jmp and jne and push imul (bad) jmp sti test xor sub cltd inc mov push movsb mov sub (bad) scas push cld (bad) lcall rcll mulb sbb and push fadds and stos or rcll popf xorl (bad) call mov lahf sbb scas inc bswap sub push ret aaa adc pop in pop jns cmp mov out pop push insl pop nop (bad) les (bad) (bad) jg sbb fnstsw popf fdecstp pop gs iret lahf lahf cmpsl pop lret lds xchg (bad) ljmp add aaa cld daa cmp xchg pop xlat arpl mov aas ret jl fildl mov call enter scas inc cmp mov mov out in lret xor cmc pop cwtl pusha pop adc jle icebp pop push and fisubr mov sti mov nop enter out mov mov cmp iret sub sub cmp jle clc jne (bad) mov (bad) (bad) decl push lds fimull add xchg movsb movsb xchg inc mov cmp xchg (bad) mov and stos adc inc es mov inc repz (bad) aas xor xor rcl push add into rcll (bad) pushl (bad) clc push (bad) cmpsb add imul lcall (bad) jp or (bad) (bad) call and clc lock pop or call push dec inc xor push pop ret je das cli add sahf adc (bad) jmp or mov call mov jge aaa loope,pn lods pop add (bad) jmp dec movsl pop sub orl daa sub dec imul (bad) mov and ss xlat xchg mov mov sbb (bad) dec add ret add loopne mov das jbe cmp sub (bad) (bad) (bad) call mov enter xchg sahf (bad) add (bad) sub repz (bad) cli (bad) (bad) (bad) (bad) (bad) jg dec xchg pusha mov (bad) sahf add inc arpl std std int xchg adc std aaa sbb mov (bad) jmp bound push fsubs and jmp outsl pop cmp repnz lea or (bad) (bad) (bad) decl stos popf sub lret nop iret jp jbe dec fidivl out jecxz mov push mov pop add test ja clc decl stos mov clc dec (bad) xchg cmp sbb sti cmpsb mov mov sbb lock bound scas xor das xchg pop xor inc jbe push inc xchg jnp dec popf stos (bad) (bad) (bad) jmp (bad) mov lods pop mov cmp adc inc add es (bad) (bad) (bad) push mov fwait (bad) testb dec jmp add jne bound push stos jo (bad) (bad) (bad) ljmp pop fstl or lret jno icebp sub pop add movaps pushl hlt sbb inc mov xchg inc lea test mov xor aas (bad) (bad) jg sbb lods fstpt lods mov mov mov fcmovnb aad mov or leave ss (bad) (bad) (bad) dec out out or ljmp (bad) cmp mov cmpl bound or (bad) call fnsave fadds jbe stos mov xor pop or jmp xchg dec add std sahf std or mov dec inc std lcall cmp mov mov cs sub and and ljmp cli int3 dec push addr16 aam xor mov fcmovbe je sub jmp jp frstor mov notl dec adc jl cmp sub (bad) lods mov das test ds mov jb lock lahf sub or mov mov (bad) (bad) (bad) call mov fwait add inc cmp data16 mov jo cmp (bad) ljmp add mov dec pop mov jl or sbb incl fdivrs addr16 or fucomp out ror enter jecxz inc jg or mov xor jl (bad) out enter les (bad) (bad) (bad) jmp mov lret push or xor mov mov outsl out jnp je xor or incl leave popf (bad) cmp cmp (bad) (bad) decl lock int ljmp cwtl scas sub add jg jmp ljmp and js (bad) mov outsl mov leave inc and adc call movsl mov xlat xchg cmpsl sub push xchg jne mov add (bad) (bad) call lds in movsl mov inc push testb mov out jge sbb (bad) jecxz cwtl ds and (bad) imulb mov ljmp in stc cli ja mov inc (bad) (bad) (bad) lcall or je mov in lcall mov movsl ss lods dec add jl icebp (bad) decl cmp aaa fwait jb gs pop shrl divl (bad) (bad) lcall ljmp (bad) dec jno xor push jp and in sub adc sti xchg (bad) mov icebp add push sti adc repz sub into les mov (bad) mov sar int3 hlt dec push ja adc dec (bad) sub lret data16 lret into (bad) (bad) (bad) lcall or call neg push push test iret add jp mov loop or jg (bad) into fs loopne gs lret and fild decl sbb fs aad test inc add cmc xor jp loope or ret sbb into xchg out je (bad) (bad) jg insl pop and or jl in data16 mov xchg jle es add (bad) (bad) (bad) (bad) flds bound jmp add repz mov add mov cltd jo lret lcall (bad) (bad) (bad) cmp sarl imul jle mov xchg add (bad) xchg sbb addr16 pushl pop clc xchg sarb cmp scas jbe fbld (bad) (bad) (bad) sti add sarl jp popf inc adc adc outsb cmp xlat xchg xchg jle,pt call pop jg mov jmp lock xor sub lcall popa mov mov pop ret (bad) (bad) (bad) call int pop mov lods add or fadds mov dec sbb popa mov sbb inc pushf push fidivr aad xchg jno lds push sub outsb cmp pushl gs movsb inc cli (bad) mov movlps imul fnsave add or push data16 mov xor (bad) (bad) (bad) pushl lods adc pop aam push inc mov or lods mov dec call (bad) ljmp daa std test aam mov dec pop es adc xor (bad) out clc add pop jge jns xor pop rorl mov add xor inc outsb mov pop cli sbb mov imul decl dec adcb addr16 call mov jge or call jne xchg fwait push pop pop clc xchg or clc movsb mov aaa xchg cmpsl xchg stos std add mov (bad) (bad) (bad) lcall bound hlt js xor stos inc mov cmpsb fs outsb pop xor mov (bad) (bad) (bad) fnstsw xchg pop enter mov sub jno xor clc (bad) (bad) jmp dec ficoml test mov in test adc sbb pop std cmpsl lret (bad) jmp inc cwtl mov sbb xchg int3 xchg mov dec leave (bad) (bad) (bad) lcall add push mov mov scas (bad) cmp adc push lods pop jg sbb (bad) (bad) ja les cmpsl add je xor add movsl cmpsl xlat sbb std mov mov (bad) (bad) (bad) ljmp fistp loop jb xchg hlt int3 es add sahf outsl ret and fidiv popf ret fs xchg js cmp xchg clc push cmpsb or call add es movsl adc scas scas mov mulb sub (bad) incl inc inc mov xor clc mov loopne (bad) mov mull ret lcall add push cmp aad out xor xchg and sbb out or popa test lods sbb sub out je mov je into mov push cltd mov mov (bad) ljmp or push shlb dec xchg inc jg pop decl push add sub sub (bad) ljmp adc test dec insl lahf stos aaa mov cs (bad) push fisttpll dec (bad) incl mov sbb mov call fdivl outsl cli jmp (bad) ficomp in jl xchg mov stc mov dec mov mov pop pushf or mov add cmp dec dec add dec outsl jnp push je jno (bad) (bad) (bad) pushl pop pop inc dec pusha and fildll inc test and stos loop jge imul int mov mov cltd jecxz pop (bad) out jecxz mov push (bad) incl cmc js fs jl cli (bad) xor xor aad mov pushl push sbb inc sahf jmp xchg scas fistp mov loope cmp inc stc adc cmc jo and gs scas (bad) (bad) (bad) incl cwtl fldln2 xor cmp and cltd xchg (bad) into lcall mov gs (bad) incl push and xor icebp mov add (bad) pop cmp lods xor xor push xchg popa sub fs push data16 cmpl (bad) (bad) decl iret enter sub loop ficomp lods mov (bad) mov and mov (bad) lcall cwtl mov sahf mov xchg cli push popf inc sub xor lock (bad) lcall jno push daa sub add ret or add push xor (bad) (bad) decl mov adc int3 aam aad xor jmp pop in andl (bad) call mov mov test std rorb or (bad) ljmp jbe push rcrl ss inc mov and pushf gs mov push adc stos nop cmpsl sbb neg cmp (bad) (bad) mov js dec mov ret jno mov mov clc push je and dec inc mov popa xchg lods mov pop ret fsubl jg pop lcall pop aas out mov fsubl icebp imul int3 lea cltd mov add push add ret dec test (bad) push jecxz je out and and sbb aas (bad) add push cld out inc mov fimul or cmp add scas xchg xor mov cli (bad) in (bad) aaa mov jno inc lret xchg stos movsb mov inc clc out (bad) (bad) (bad) jmp mov scas cmp jns mov fs cltd test (bad) pop or jecxz mov (bad) (bad) lcall (bad) fistpl dec (bad) jb insb push movsl in out test fldcw lcall adc adc ficom push insl sub nop jecxz (bad) (bad) (bad) mov pop daa pop arpl fisubrl sti sub cmp push pop add pop (bad) cli (bad) mov ljmp inc gs out arpl mov aas sbb test sbb (bad) out fcoms jecxz enter sub jg movsl mov outsb xor loope xchg push ljmp test fs cmc jmp jg sub imul arpl enter in inc lret xchg cmpl lods xor insl (bad) xor (bad) (bad) (bad) mov dec pop ja sub stos sub sbb pop scas mov push and xor push jnp add bound in add add or sub adc fbstp sub (bad) imul sahf xchg lcall jl cmp cmpsl (bad) adc (bad) (bad) (bad) (bad) jmp adc or push cltd sbb dec dec jmp adc and sub pop pop (bad) out adc fwait test lahf scas mov (bad) decl (bad) jmp mov aas pop (bad) into mov pop push loope std add (bad) call jne sarl aam fdivrl add sahf pop outsb (bad) incl fnstenv nop xchg dec mov je (bad) (bad) (bad) dec (bad) xchg dec out mov orl test test adc add (bad) (bad) (bad) decl aad xchg xor (bad) xor inc je inc inc leave int leave push cmp inc or (bad) (bad) (bad) inc mov and cmc jp lock pop mov mov test cmp cmpsw mov or and incl inc call add repnz mov mov ja mov roll xor xchg (bad) ljmp (bad) jmp inc call sub push push decb mov sub pop xchg jle xor iret call pusha pop cmp push aam xor test insb dec loopne decl jmp pop cmpsb jg or pop sub adc and js stos (bad) lcall push test lods jne lret cmp addr16 or rol jb (bad) (bad) (bad) (bad) jns mov das decl movsl outsl mov je inc lret mov sahf movsl adc sbb lea ss les shrb scas lods inc daa out (bad) (bad) (bad) incl roll fs add jbe fdivrs dec add (bad) mov (bad) (bad) (bad) (bad) (bad) jmp push dec pop cmp pop push shrb aad les stos mov stos clc decl icebp xchg sub sbb and dec test adc lods hlt data16 inc fcmovnu or cmc dec int jns lods cltd jle outsl push arpl sar ljmp test out and jo mov es pusha adc inc cld (bad) mov (bad) bound jg and lret xor (bad) (bad) (bad) jg push push cli adc push hlt sub loopne fisubl cmpsl or xorl lock push sbb xchg xor pushf pop icebp (bad) lcall lret mov and mov ja pusha lret push (bad) mov or add dec lcall sub hlt jp int3 dec dec cltd or fs fs mov inc std sbb adc push dec cwtl cmc pcmpgtb inc scas lahf xchg push xchg and lcall xchg mov fdecstp sub mov lret inc sbb push xchg cmp (bad) int dec push cld (bad) (bad) out mov stos jmp hlt dec push jecxz sahf xchg cmpsb mov addr16 (bad) (bad) (bad) incl mov mov imul jmp xchg pop iret out loope jb xor inc dec leave jmp leave dec (bad) fcoms sbb (bad) in movsl jmp (bad) pop sub dec je mov mov out fnsave loop in sub cmp aaa push dec les add (bad) (bad) incl adc (bad) jecxz cmp (bad) daa je jbe or inc mov imul push xlat dec in in (bad) cld scas (bad) call mov fsubr test mov mov fidiv cmp pushl xor mov addr16 test pop mov imul bound mov mov xchg in xchg mov add (bad) mov cmc in pushf (bad) mov ficompl fs xchg fsubs xchg lea test (bad) lcall xor or jl mov (bad) sahf es jmp and gs (bad) (bad) fisttp push into sahf cmp dec add in lret clc cmpsl adc fdiv fadds or mov fwait in push sub aas jne xchg push in into inc test (bad) jg cld xchg inc inc mov in (bad) push ret rclb fs mov fistp mov jo mov test adc call xchg push imul or jmp (bad) call jmp sub jg push call scas mov jle mov sbb cld add mov gs sbb mov cmpsb pop and (bad) fistp push cli mov (bad) (bad) jmp pop arpl (bad) push jne cwtl pop rol in jae inc dec cmp (bad) (bad) ljmp insl xor or ret cmc sbb lods ss or aam loope sar mov xor cmc pusha loope les stos lea stos ja push mov dec sub psadbw (bad) rclb cld (bad) (bad) ljmp daa outsb dec xchg in jg fidivr sarb pop js lret aaa std decl int icebp jmp fsts shrb mov mov stos add (bad) jbe jl fimull ret sbb sub push loop (bad) (bad) jmp mov sub push outsb daa xor aas mov enter lea mov popf sub (bad) (bad) jg push mov fwait repz mov (bad) arpl push push fcoms or (bad) pop inc lea cmp (bad) lcall pop out mov in cmp jp test test jae adc mov out lock dec fisttp lret test and decl lret push adc pop dec jle subl push lret imul aas sub xchg jno into (bad) ljmp cld popf test xor loope jbe push sbb push cmp data16 (bad) (bad) (bad) cmp xor stc pop dec mov fcomi mov or faddl push mov orl aaa dec rol sub ficompl ja pusha dec fildll add cmpsl fisubl mov pop sub cmpsb cltd adc std (bad) (bad) and inc movsb test (bad) jg into or mov (bad) outsb pusha sbb sub cld cmp scas mov mov std pop scas loopw (bad) (bad) (bad) push arpl jns out inc daa cltd (bad) mov push or mov pop mov inc mov cmpl (bad) (bad) (bad) pushl cmpsl hlt std hlt test and jle jmp xlat cltd xor mov repz jne test hlt mov mov pop movsl in jnp lea mov lret (bad) aaa or inc sarl mov fidivrl or cmp pop (bad) ja popf push sub inc xchg dec pop (bad) (bad) mov outsb addl (bad) inc popf fildl std or pop jg jb sar (bad) (bad) ljmp jmp addr16 and xchg mov sarb es std ljmp and dec into int aas scas hlt in lahf mov cwtl orl xor movl clc or scas imul xchg sbb mov aas mov mov (bad) (bad) sbb pop add hlt jnp dec inc mov jbe jno aaa push clc (bad) js lods mov dec aaa dec cmp (bad) call loop loopne cli imul cmp rol xchg xor cmp mov lods (bad) (bad) mov push loop notb (bad) fstps (bad) testb mov cli (bad) (bad) incl pop push mov or ret or sub (bad) cmp call push pop adc test notb mov mov mov jle add stos out add mov push mov xchg mov push adc xchg divl data16 sti dec mov dec cmp test or fcomip incl iret mov jp adc sti lds popa sbb pop repz pop (bad) ljmp sub sbb add xor pushf jo nop sbb mov adc (bad) lcall mov pop inc mov mov mov inc adc fs or sbb cli (bad) (bad) (bad) fildll sbb cli mov sbb add dec push lods cmp mov push loopne out test push push inc aam icebp ja fmull inc adc push addr16 inc (bad) clc (bad) incl in xchg push jbe lods xor mov xor inc inc cmp (bad) pushl push and pop mov xchg push and ret lods push stc mov stos (bad) lcall push ret lret cmpsb push sahf (bad) decl jns fucomip jnp lret inc in je in (bad) xchg adc orb in dec enter cmp cld (bad) (bad) ljmp push enter repz sarb mov aam dec xchg jnp sbb orb fldenv (bad) mov out in dec mov call pop (bad) (bad) fstl dec jae and (bad) sbb adc (bad) (bad) (bad) ljmp out dec ret jne xchg (bad) jg aam mov inc incl test (bad) (bad) decl (bad) data16 mov ret mov js dec xchg sbb and sub (bad) (bad) (bad) ljmp lahf data16 xchg jle xor or pop pop dec push fldt mov lret xchg (bad) (bad) incl push jbe repz add mov mov in xchg or adc (bad) (bad) ljmp or movsl sub cltd sub xchg cmpl cmpsb sbb mov cwtl adc push push mov sbb mov jmp dec inc out loop cld test (bad) lret stc ljmp mov cmpsb (bad) int inc xor pop gs cmpsl lret repnz xor (bad) (bad) xchg decb mov movl ljmp jp adc xor std std add data16 ficoml mov addl pop xchg loopne pusha popa dec inc loop (bad) ljmp pop outsl xchg push mov sarl jae test lods or (bad) (bad) lcall sbb xchg test xchg repz out jecxz movsb sub sub fs fwait jge std (bad) (bad) (bad) stc out gs cli dec or add mov scas cmpsb lods fsubs sub dec and push or lods sbb xchg (bad) ljmp aas fs mov dec adc push in cmp mov (bad) jmp jg pop fwait lods repnz xchg lock add lret xor pop or movsb mov incl movsb bound and (bad) (bad) lcall mov pop sub mov mov sete int inc imul jecxz sbb push push lods mov clc xor ficoml xor loopne rcrb call inc aaa xor mov mov js jp add jg mov jg xor push sbb mov jns cmpsb in (bad) (bad) mov mov inc (bad) int3 add cmpsb mov dec pushf mov (bad) xlat call mov into arpl js (bad) mov arpl mov lret les sbb push mov adc jbe xchg loope (bad) out cli fisttpll sbb repz dec sub sub and mov jmp (bad) incl xor pop inc sarb add in pop or adc mov mov outsb out (bad) (bad) lcall out push jge mov sbb fistpll mov mov sub inc in pop add inc xor inc fcmovnb daa fcom rcrl lret cmc cli (bad) (bad) out (bad) jbe add xor add inc push decb outsl push fstl call mov jmp popa sahf enter pop (bad) jmp out aam jge or pusha pop sbb (bad) (bad) dec fldenv fdivrl push sub xchg bound xor mov mov (bad) jmp sub xor xor push pop in loopne imul push mov (bad) (bad) (bad) decl lahf lcall nop loope pushf mov into (bad) mov mov pop (bad) (bad) (bad) cld popf (bad) int3 push aas nop punpcklbw sbb push xor (bad) (bad) (bad) jmp jge pusha push inc push clc mov xor sub jo jb and xlat cmp dec mov mov aam adc call cld es push popf jbe and lds inc fwait test and adc mov (bad) jne inc inc cltd sbb cmpsl int3 sar jg sub fsubrl inc cmp aad jp outsl xchg std push outsl repz (bad) (bad) (bad) incl adc dec rol sar xor xchg pusha xorl sbb repnz xchg (bad) bound add (bad) xor add jmp bnd call ljmp xchg mov adc and adc push jb lahf stc popf arpl loopne (bad) (bad) (bad) incl ret dec ret jnp inc mov xchg xor jne test (bad) (bad) inc and cmp fistl pop js dec adc insl mov (bad) or jmp or and jmp subb repz pop ja pop (bad) (bad) (bad) mov daa lock add jg insl push into sbb dec repnz cli push jmp sbb sahf cwtl sbb push (bad) incl cmp mov jo and cmp arpl jg std and sbb push xchg gs adc jp leave jle in lcall jg push dec jne sub icebp (bad) movsl adc std hlt mov push push cmp (bad) decl xor jle or jns mov jmp push mov (bad) (bad) mov mov push fsubrs data16 daa sbb push ljmp je mov pushl aad fcoml pop fs mov aaa fild std (bad) iret leave jge push dec cmp decl sub sbb lods sub in cli or loope test mov (bad) cmp outsl sbb mov mov out xchg repz pop popf push ljmp (bad) ljmp cmp jae fwait or mov movsb adc or cwtl xchg jbe and sbb (bad) (bad) push (bad) mov mov pop mov jmp pusha xor cmp stos imul mov xchg or push lea inc les mov out mov std adc xor shrb adc sti xor outsb mov fxch add (bad) (bad) jg cmp cltd jle mov (bad) (bad) (bad) jg jmp fisubr leave xor add hlt jp mov cwtl mov mov int3 dec sbb sub inc push mov lret shlb lret gs insl sar (bad) (bad) lcall add xchg pop lds mov insb add sub lea mov cld dec push clc fisubrl or and pop sub call sbb xchg xchg adc mov xchg dec pop clc (bad) fidivr rorb aas inc xchg fidivr push loopne dec (bad) (bad) (bad) jmp popa int jno pop test movsb ja pop xor sub pop add pop add sbb (bad) (bad) lcall or sti inc push outsl mov cmpsl enter pushf inc roll pushf pop in sbb xchg sub (bad) and jns mov out icebp mov movsl push lret fsubrl stc and lahf ljmp test pop jo js sub dec arpl popf in fwait ret (bad) (bad) (bad) jmp (bad) mov push adc push fidivrl jp mov (bad) mov lcall inc push rcrb rcrl jecxz hlt mov test push (bad) decl insb je sub mov push inc fcmovu fisubr sti push rolb sbbb loopne (bad) call cld (bad) or aas sub movsl pop and cs xadd rorb imul call xchg cmp dec pop aas sbb (bad) xor test (bad) jmp popf (bad) into cmp bound sub dec ficomp add push dec or sbb (bad) push rcll test add inc mov jnp rcrb push lea ret and cmp mov test imul sti sbb pusha adc shll or mov xchg mov jo and mov push xchg movsb jmp jg push push (bad) (bad) ds cwtl xor adc mov (bad) (bad) mov xor arpl into push push insl gs pushf xor fs add leave je lcall in lahf xchg mov stc (bad) cmp xor lcall leave adc pusha cld (bad) mov xchg or mov aad jmp mov in mov jmp mov jmp and jmp mov lret aas mov (bad) (bad) std mov jbe or sbb mov inc dec jge pushf mov gs pop jno adc (bad) adc das (bad) (bad) (bad) ljmp xchg adc repnz (bad) cmovb sbb das xchg sarb jns sub sar (bad) (bad) pushl movsl jnp xchg xchg mov mov or inc rolb xchg pop xchg loop outsb inc cmp or add popa mov test addr16 jo sub cmc outsb and add les pop cli dec in dec xor data16 push add cli data16 push mov (bad) ljmp mov leave cmp int iret aas cli sbb push xchg pop mov pop adc xor mov xchg inc fbstp (bad) sbb mov mov dec xlat jns add (bad) call mov fdivl mov popf xor xchg pop mov rcr jge sar (bad) (bad) (bad) aas (bad) jnp sarl popa fsts out jmp outsb leave out cltd rcll mov dec adc pop xchg and inc jge xor out lahf cmp dec mov fs pop or xchg sbb clc sbb je (bad) (bad) mov lods shrb inc fiaddl or dec hlt dec iret aaa cli and mov inc xchg mov (bad) cmc hlt insl icebp popa cwtl add insb cli (bad) (bad) jp (bad) fucom stos popf mov xor sub mov (bad) ja pop outsl mov adc mov xor jo out lods ljmp repnz push jo adcb sub or sbbl idivl fcmovnu xchg scas mov (bad) xlat aam adc cld lcall (bad) jmp xlat lret pop jae xchg push lret (bad) (bad) jg in sahf mov jp int3 or push mov shlb jmp stc test cmpsl mov jge lret and out mov mov mov out (bad) in dec cmp sbb dec stos jno push fsts (bad) addr16 fistpl or mov cmp push shr fistpll js cmp sti jg inc sbb loop aad (bad) (bad) call jnp mov jle lret outsb lds xor sbb adc jle (bad) pushf aas cs je outsl clc jmp or mov repnz mull testb loop clc decl mov push lret or and cltd and jnp loopne mov (bad) shrb and cmc cmpsl lcall (bad) jg ljmp ret add and cltd flds xchg pop (bad) xchg push das inc jns shrb dec test test lock ss add test mov xchg pop fisubl scas movsb push repz (bad) mov repnz cwtl frstor or vhaddps mov dec inc repz pushl call ret mov jo inc imul rol fs (bad) (bad) (bad) (bad) cld adc cs lds lods test iretw cmp stos orb imul jno jb (bad) (bad) ljmp negb ljmp pop data16 inc push mov aas pop push movsl xchg (bad) (bad) (bad) (bad) cmp jecxz mov call jle xor jb addr16 mov or mov mov (bad) into data16 cmp mov fsts (bad) or (bad) fild pushf stos fcompl jb mov sbb cwtl xchg mov jmp cmp imul dec fiaddl test (bad) (bad) lcall aam cmc sbb stos dec sub add pop lock mov pop mov cmpsb (bad) jmp adc popf or test sub xor popa (bad) and adc clc (bad) cmp and sarl mov (bad) mov (bad) (bad) dec xchg fistpll scas xor pop gs jg lret mov cmpsb sarb xlat (bad) popf (bad) (bad) (bad) lcall lds inc push push pop data16 jae test out and mov sbb (bad) ljmp fistl sbb cmp cwtl nop xlat xor push call mov jg hlt push sbb (bad) pop enter add dec fdivrs pushf call decl mov and mov shll das pop repnz adc (bad) (bad) (bad) inc and or js xor push pop jnp mull andb in jae adc (bad) call xor cmp out sbb in testl dec pop or aad in (bad) (bad) (bad) decl adc insl fwait push mov mov jnp xor dec sbb mov lcall jp out dec in (bad) in mov or xor jmp xchg push (bad) popa shrb mov sub xor repz mov push (bad) jae imull sbb dec repnz dec lods and nop (bad) (bad) (bad) ljmp test sbb adc das sub and push sahf push (bad) out cli jmp (bad) xchg fst and inc jmp das mov inc repnz mov movsl jns mov dec les push jp cli jecxz (bad) pushl outsb xor xchg stc mov xchg pop xchg gs (bad) (bad) (bad) mov pop or xchg mov pop repz mov popa push and (bad) (bad) decl push adc bound or xchg xchg or sbb arpl dec fdivrl xor mov mov decl xor sub pop add push xchg sbb mov nop mov clc sbb push lcall jae shrl sbb (bad) jmp lahf insl arpl inc sub bound xchg sub mov iret xor (bad) test outsb negl xchg mov cmp sbb int3 cmc lcall out dec scas repz mov pop dec mov jmp bound mov aaa jge std (bad) (bad) (bad) aas sub frstpm(287 aas xchg imul cmp mov clc jnp adc pop jmp mov iret jg in in out sub adc inc jge push lods cli sahf and lock mov jns fistpll nop or xchg cltd cmpsb and arpl jnp add enter decl test repz mov dec push dec mov inc sahf mov mov (bad) jo movsl xchg mov add rolb mov dec test mov add cli xchg xor and cmp pop sarl insb cmpsb bound mov dec (bad) (bad) (bad) call inc (bad) in add add arpl je add mov mov adc test fiadd adc jo loopne inc push or inc (bad) adc adc lcall or sub mov cmpsb cmp cli lea jmp dec fcomp add int3 out out mov movsl sbb xor nop jno scas or (bad) decl cmpsl mov loop test dec js (bad) (bad) call inc int3 test movsb hlt std sub sbb mov das mov push clc incl cld dec sub pop mov push sub or scas ret ja jg das repnz ja and jl (bad) mov adc (bad) (bad) ljmp push aaa jne popf jge inc (bad) test mov sbb test mov sar mov push lods in imul jo inc xchg add sbb shr cli lcall dec inc clc sbb leave fstps (bad) or lcall pop aam sub xchg pop pushf insb lods lea push ljmp (bad) (bad) (bad) mov mov xchg add mov mov or fcomps imul (bad) (bad) push arpl out or mov (bad) inc pop push inc icebp das es mov dec lock decl xlat lcall fidivl imul ret (bad) (bad) (bad) jmp rcl (bad) lret cltd jno ss mov adc lret pop imul or and xlat neg pusha mov movsb or fstl popf fbld (bad) (bad) jmp add xchg mov xchg sti or pushf add out jle icebp addr16 scas mov cmp out mov dec push mov les (bad) (bad) (bad) (bad) incl cmp add inc and add pop xchg icebp mov add xor (bad) (bad) inc fistl jbe pop outsb jbe test cmp or push fdivp cmp (bad) (bad) (bad) jg push cmc pop push dec add pop nopl shlb out adc sub mov insl mov jnp pop adc std aas fcompl jno test sub out test loopne (bad) inc inc adc icebp pop (bad) (bad) (bad) call xor mov ja clc shrl sarb cmpsb inc roll in test (bad) (bad) pushl ljmp pop xor aad test bound imul ljmp push out outsb lcall (bad) mov hlt sub leave ss push addb (bad) (bad) decl mov pop insb cld arpl adc sti (bad) xor jg cmp push outsl dec and incl and or pop mov adc and jo mov (bad) (bad) jmp or outsl es mov rcr lahf push or jbe in (bad) dec pop (bad) lcall xor adc pop out xor cmpsb pop ljmp out fcmovbe movsb (bad) (bad) (bad) jmp scas nop ds cmp (bad) mov push pushl fldcw sti lahf in add cmp fcoml jle sub fidivrl sub cmpsb adc pusha iret sbb pushl and pop cltd leave dec xor xchg icebp mov cmp (bad) out push push push xor adc test iret or out pop (bad) incl push xlat (bad) inc in pusha xchg push je clc mov adc cli (bad) ljmp daa add lds pop ret lea icebp and mov mov dec cs fwait sahf mov ja sub sbb mov xchg int3 out push xchg cltd jae (bad) call cmpsb enter call mov mov xchg and jmp ffreep lret daa jp movsb (bad) cmp call dec mov jg mov call std fwait (bad) pop or in (bad) fcomps cmp or lods repnz push and mov and mov pop (bad) testl pop xchg xchg (bad) (bad) (bad) cmp (bad) add das js mov adc cwtl clc adc scas fmul push adc add call (bad) ss fwait lods fs mov sub push js in jae push pop xchg (bad) (bad) lcall movsb pop push mov mov ficom xlat cmp xchg xor ret (bad) (bad) (bad) decl pop inc sbb jns add lret pop movsl cmp adc into (bad) int (bad) (bad) (bad) fcmove rclb cli out dec mov sub inc lahf sbb push out bound jg add jne call mov dec cmp rolb dec (bad) (bad) lcall dec loop stos clc in mov push (bad) loop (bad) sbb (bad) xor clc aaa (bad) (bad) (bad) lcall mov addl lret into add mov out in cmp stos cli mov cli mov incl hlt xor aam mov aaa adc ljmp sarl sbb (bad) (bad) (bad) jmp ret inc scas xchg mov jecxz or cld jbe add sub (bad) (bad) (bad) jmp push xor inc repz scas inc jne jno dec adc push cmp jge out aad (bad) (bad) incl imul test sub xchg and xor push sbb inc xor lret (bad) decl or adc pop (bad) out (bad) movsl mov test and ret jb daa cld ljmp negl sub lahf ficom stc or mov inc jne aad push xor mov or mov js icebp stc test pop imul xor mov stc mov xchg push (bad) (bad) (bad) jmp lret dec mov rcll dec jno or scas sahf inc popa sbb leave mov mov sbb (bad) mov or sti inc mov insl adc (bad) jmp fdivs push nop aaa lahf push or pop push mov xchg or (bad) jmp mov push push xor ficom xor lahf xlat sub int cmp pop xchg adc sbb in xchg lret pushf out dec fcoml aad int3 imull roll mov pop rorb mov hlt or pop addr16 jo or xchg (bad) jmp xor push in cmc push test aam lods into ret pop aaa rorl dec xor (bad) (bad) (bad) inc push mov test push out jmp sbb mov ffree xor xchg mov xor inc mov mov mov cs sbb xchg bound (bad) (bad) std pushf sub faddl leave imul adc mov ss mov test lods movsb push clc (bad) decl cmc lods test jb cmpsl push sub add stos mov test (bad) je mov pop and in (bad) (bad) (bad) (bad) js and xchg push lcall pusha xor add cmc je add adc or adc (bad) (bad) jmp cmp fldenv mov xor fisub mov (bad) jmp into dec mov xor pop push int3 leave sub cmp xchg add (bad) ljmp mov subl lcall fist das shrl mov sub mov and (bad) ljmp xor pop je repz fdivrp les test repnz movsb icebp pushl sub test insl pop andb stos (bad) (bad) (bad) pushl rclb dec dec js scas scas js cmp dec mov das xchg test (bad) (bad) ljmp loop stos sbb and test ret pushf jns scas sbb mov xlat fdivl sbb inc sbb jbe scas jp pop popf xor xchg rorl test mov xchg (bad) push mov aas test mov out or jg pop scas mov xchg sti pop aas je jmp xchg in lock inc (bad) (bad) (bad) pushl sbbl icebp and lcall mov insl jecxz pop (bad) mov add xchg or (bad) (bad) (bad) jge call sub sti and test out mov repz sub mov or mov out mov jle neg ds out out inc fildll xor es leave jp movsbl incb int ret shll dec aad out lcall sbb xor test test jecxz inc test cli mov jp push fsubrl and adc das in jnp xlat dec or mov (bad) xlat mov out test jecxz dec adc es push bound pop mov cmpl aam lahf ss adc loop mov mov mov aad gs scas mov add aad imul fist push leave lret mov sub fidivrl ret mov popf jno ret daa inc aas xlat mov adc sar (bad) jmp jno push sbb dec pop mov std imul aam inc mov sub lret cmpsb jg xchg repz fbstp inc jno arpl cmpsl add mov fcomip pushl mov cmpsb push movsl cwtl add sbb sbb cmp pop jae (bad) (bad) (bad) out in (bad) movsb decl adc test (bad) adcl xchg or sahf xor mov (bad) ljmp aad mov sbb (bad) std mov cmp pop (bad) incl pop mov jne mov mov adc add jge sub push dec mov fnstenv xor cmp inc (bad) hlt cmp xor (bad) loope pop or jmp nop call inc mov or push (bad) decl dec inc (bad) fsubrl cmp pusha inc sub push decb lret xchg addr16 sbb fsubl data16 scas add mov mov xchg jb in sub inc sbb (bad) call (bad) leave (bad) or and je or pop test icebp xor (bad) jae (bad) (bad) incl call jnp lcall mov xor push imul decl cmc mov adc test adc mov cmp (bad) decl or jmp mov test mov sbb cmp cmovle (bad) (bad) incl loop cmpsb int in cld aaa in das (bad) adc mov inc jge inc or (bad) in (bad) dec and leave (bad) sbb pop cltd (bad) pop xchg lcall pushl (bad) mov pop (bad) jae jae hlt fs mov (bad) (bad) (bad) (bad) out lock add xor sub mov push aam rorb roll lahf (bad) (bad) (bad) (bad) mov mov rorb hlt and stos shll (bad) mov xor decl cli clc pop rcrl jmp (bad) pop shlb (bad) (bad) (bad) incl orl ljmp (bad) push jge jl rorb xchg out sub pop mov (bad) (bad) (bad) incl add fucomi push hlt lock and cmc push inc cmp push je sub loopne or sub mov pop (bad) (bad) (bad) (bad) jg mov sbb adc mov fisttp mov or ljmp jg jmp xor loop jo pop stc sbb or mov cmpsb push jmp and (bad) incl inc push rep sbb cmp mov add adc or adc imul jns cmpsl pop mov sub clc mov test pop call sbb jg push push jnp inc mov stos inc repnz xchg fsubrs fisubrl sub jb cmc (bad) push popa lret (bad) ljmp jmp int mov xor push xor dec (bad) push inc push outsb ret xor cmp jl es dec fisubr shrb jle pop adc flds ljmp or icebp dec (bad) (bad) mov add shrl aas lods sub xchg loopne ljmp inc das (bad) (bad) (bad) pop jl add ss mov dec loope cltd out mov sti out xchg ljmp (bad) out fstpt pop (bad) cmpsl add cmp cmp call sahf rorl jmp repnz decl xchg inc decl icebp cs jp pushf sbb out aad (bad) jmp pop ds or adc jl icebp insl sahf inc mov mov xchg cmp and xor jg insl insb xchg cmp insb pop cmp (bad) (bad) push imul cmp sub dec inc out add mov repnz stos push sub (bad) decl inc sub ss addr16 push bound insb pusha pusha jns stos stos lock adc fcmovbe subl fsubrs movsb (bad) (bad) (bad) decl pushf mov pop sbb cmc mov mov das mov fldenv loop es (bad) lcall mov inc mov jle mov xchg (bad) fidivr test call and (bad) fstpl loopne out (bad) es pop jns (bad) arpl dec jecxz jo sbb ret (bad) (bad) jmp scas fsubr or incb ja test and repz jle (bad) (bad) (bad) ljmp lds ss stos cmp sbb and daa (bad) movsl (bad) dec (bad) iret mov addl (bad) (bad) (bad) call xchg out loop mov lods mov xchg adc pushl inc adc jg cwtl loope jns icebp jne dec mov cmpsb jmp cli ss (bad) jg or stos lods popa test jecxz dec mov (bad) lcall sub rcll stc scas (bad) mov adc test (bad) (bad) decl out outsb adc jp,pt rol or jae repz fs sub xor (bad) (bad) decl movsb gs popa das stos (bad) fistp loopne cmc jne or jb mov leave push (bad) jmp stos add mov dec mov push iret bound cmp loopne xchg mov rcrb pop sbb js je mov leave out and adc sbb mov movsb popf rorl cmp imul dec popf insb (bad) (bad) (bad) (bad) incl dec jne lret insb mov ljmp jle sub cmpsl dec adc (bad) lcall dec lcall out push int3 fimull push mov or push (bad) (bad) jg and jle inc dec xor (bad) lods addr16 adc adc je (bad) (bad) ljmp loop push arpl lea push inc and int3 loope mul stc cltd insb or adc xchg cltd or (bad) pushl ja insl sbb insb cmp xlat popf jle adc cmpl jo ret sbb mov sub jg insb stos sbb aam jl shrl ljmp push pop sub (bad) divl pop and mov (bad) loope lea scas clc pop mov dec pop mov mov adc xchg jg (bad) mov mov dec mov add dec cmp arpl (bad) (bad) (bad) (bad) cli dec and int idivl adc jp jbe adc mov pushf fwait loope das or add pusha (bad) cmp decl mov fimull mov sahf inc aam mov or (bad) ljmp jbe flds inc aaa mov push lret mov pop (bad) xor mov movsb add movsb jmp mov pop (bad) lcall addr16 orl push push dec mov mov (bad) (bad) (bad) call scas movsb pop push jo imul leave sbbl in push and rcr (bad) ljmp or adc jp fs mov (bad) pushl cmc mov mov xchg test cmp add jge sub pop xor aam and repz push dec clc push mov mov cmp stc jle push jno incl shll or mov jp adc jne sub insl mov push insb mov jae dec jae xchg idivb sub std dec sub and and cmp cld (bad) (bad) (bad) (bad) jmp dec adc das mov rorl pop add or jp xlat ret data16 mov push and mov je jae nop popf jge push cmp cwtl sbb xchg outsb ljmp (bad) push mov enter mov decl rcrl inc scas lret mov inc mov jp and incl lret inc add xor mov inc xchg push idivb call dec addl inc inc repnz pop adc mov hlt cmp mov push adc nop std out sbb ret lock cmp mov mov hlt push idiv (bad) mov push icebp lcall adc test (bad) call mov movsb sub mov add sbb or (bad) (bad) (bad) incl pop jno movsb std and xchg xlat push stos movsb repz inc outsb lods into cmp or mov sub lahf mov xchg jno push ljmp jnp (bad) rclb add cmp cmp ljmp adc adc xor push mov (bad) (bad) call (bad) js ret lret xchg jge int aam mov xor lahf jg cmp (bad) (bad) (bad) lcall in jbe dec fldcw call dec adc or push fbstp mov (bad) pushl lret xor pop in inc add ja ficom dec lea or (bad) (bad) call (bad) jbe int cmp dec (bad) pushf pop test (bad) fwait adc sbb fcoms lcall (bad) (bad) cld in dec xchg rcrl mov sbb pusha and loop jl dec (bad) (bad) ljmp imul dec dec push mov insb cmp pop cmp aas (bad) (bad) incl xchg cltd push lahf dec sbb jp call (bad) insl loope cmp mov js rcl lods dec dec dec cmpsb lret inc (bad) push and dec cli (bad) (bad) (bad) ljmp (bad) stos pop mov add push add sbb popf pop call (bad) cmc cltd ja push xor (bad) (bad) (bad) cmp and push into mov popf lahf out push bound andb (bad) lcall js (bad) (bad) (bad) (bad) pop push mov das in mov mov pop ljmp aas add jns (bad) (bad) (bad) (bad) cld pushf push jnp mov dec das insb push jge mov xchg mov in cs add imul (bad) fcomip mov xchg shll push inc sbb pop (bad) adc and ss stos dec mov cmp repnz icebp and aaa pop int3 aas hlt std pop (bad) mov jg or hlt cmp jnp jecxz (bad) (bad) mov pop fsubrl and and jmp das jmp fcoml lock pop in cwtl xchg mov (bad) decl inc divb add jb sti add iret fdivrl sbb (bad) sbb imul mov insl sub jg sub idivb xchg mov ss inc mov sub mov hlt cmpsb mov mov test pop mov (bad) (bad) incl sub push in outsb xchg loopne nop lret sub clc dec push jb (bad) ljmp and cs xor out sbb and mov loope dec xor jae dec aam daa or inc pop rorb push mov sub call std mov mov mov jge inc add add adc std js clc sar pop adc les cmp mov fs (bad) (bad) jmp in dec or mov inc (bad) fwait jmp (bad) clc ss jmp cld (bad) jg inc mov mov sets mov lock (bad) mov mov push pop lahf xor xlat jmp sbb mov les pop push adc movsb cwtl mov jle pop ljmp mov stc scas ljmp pop jae add adc pop xorl hlt (bad) fisubl pusha and arpl jp addr16 test in outsb sbb in jmp aam js dec outsl cmp (bad) (bad) lcall inc pop rcl shl sub loopne lahf loopne,pn add divl adc and fs xor sbb (bad) (bad) call arpl dec mov dec jle (bad) cs int3 movsl dec add (bad) jmp lods ret adc scas xor adc sbb idivl push and (bad) (bad) call lock imul rcrl sbb adc jns out pusha or mov jl lock lods inc cli inc add dec mov and push sub cld (bad) (bad) (bad) (bad) jns lcall out dec add insl xor jp pop cmp sub int3 mov (bad) (bad) (bad) sti lcall (bad) cli mov mov (bad) cli icebp movsl outsl cmpsl sbb das (bad) (bad) (bad) (bad) out inc xchg push adc lock pop aas push push mov testl cmpsb inc or jge pop movsl popf adc xor mov lahf gs cmp mov sar lcall lds cmp fdivr mov sub out scas (bad) (bad) (bad) jmp adc int3 dec daa adc ss movsl pop (bad) cmp out cs (bad) (bad) (bad) js das push (bad) or xor stc dec (bad) imul inc xchg (bad) jno mov mov icebp incl cltd cmpsl fildll aad test dec (bad) (bad) lcall or verr mov out mov dec pop mov in cld (bad) (bad) jmp in inc idiv xchg jbe std pop mov out gs adc or inc sar ljmp push cli sbb ljmp cmp mov nop jl aam inc hlt (bad) jmp rorb mov xor fldl pop lea push (bad) fldenv push sbb decl lods inc call out cld (bad) (bad) (bad) clc and xor cmp mov adc cmova movsl fiaddl int3 (bad) jg add sbb (bad) repnz (bad) sahf cltd cli (bad) (bad) lcall mov xor or mov fbstp (bad) ljmp jo mov int3 out call xchg lcall (bad) jo jo,pn ror adc jmp aam loope push jge pmullw (bad) (bad) (bad) jmp imul rcll push stos xor mov mov xor (bad) call (bad) mov jecxz inc (bad) jecxz xchg sti out jecxz ret mov ja (bad) (bad) decl fnsave and mov pop add xlat lahf mov jge popa popf cmp mov sbb lret loope scas push mov (bad) xchg push or ljmp imulb aad popa xlat dec jb subb daa dec sub (bad) fcomip fs fstpt add mov enter adcb ljmp shrb fldt inc jne rcr and push mov (bad) call ss cs jns adc test sub and or aaa jge xchg cs pop loopne mov ja loope sub sub pop movsb and fsubl movsb stc aaa lock stc clc mov cwtl mov das (bad) (bad) (bad) push pop aaa test fstl fstpt stos adc int and hlt stos sub in clc (bad) (bad) (bad) ljmp xchg lea add xor and addr16 push nopl sub xor fwait ss mov mov popf sub sub mov (bad) (bad) (bad) sti repz and lcall cmp in sti lods das das xor mov dec sbb fimul (bad) (bad) call dec xor lahf in adc or in sub and xor mov jl les scas cli (bad) (bad) fcoml sbb test insl cmp mov mov icebp (bad) (bad) pushl fbld xchg jbe or xchg int3 mov xchg push sub sbb insb loopne aaa sbb fbstp outsl in inc mov cmp xchg jge (bad) (bad) (bad) inc fwait adc inc cwtl and inc xlat inc jl cwtl sbb mov xchg sbb gs enter (bad) fdivrl and les pop jp rorb fstps ret (bad) ljmp sbb dec mov xchg jl adc jl movsb mov and jmp (bad) jl (bad) (bad) (bad) jmp mov in xor int3 cli outsl gs jbe lcall add (bad) (bad) (bad) call and adc mov imul mov mov jp fmuls sbb mov sbb (bad) jmp sti (bad) jmp pop add cwtl cmp and (bad) cmp aam jmp dec fnop fdivrp ljmp sub xor lock inc xor leave data16 shrl cmp (bad) (bad) (bad) (bad) cmp pop mov mov jle add aas pop lods lods and mov xor repnz mov fisttpll mov mov (bad) idiv (bad) fildll jmp js sub sub out lea popf pop ret cmp sar es and loopne sti lea ss xor and pushl call adc mov stos mov sbb lea sbb (bad) fs (bad) (bad) incl jle int mov sub lret test mov arpl and mov push aaa add (bad) call stc add das cmpsb push (bad) (bad) (bad) ljmp mov fnstsw mov jb cwtl mov (bad) testl or mov scas adc adc addr16 call std jb int3 call mov inc dec mov in lret gs (bad) (bad) decl fldt xorl xchg cld aas dec lock push addl jge (bad) ljmp (bad) xor cmp lret imul mov mov cld dec add inc mov push jg dec data16 push xor (bad) (bad) push ret mov ret lods inc (bad) mov loope inc push jmp jecxz cltd ss and (bad) jmp push gs lret pop fwait rolb cmp (bad) push mov popa (bad) dec mov cmpsl (bad) (bad) (bad) decl cli mov popf stos imul psadbw mov lahf xor mov push cltd lahf sbb (bad) (bad) dec notb ljmp (bad) pushl ficoml repz outsl jnp push scas orl cmp (bad) and xchg lds fisttpll das mov mov (bad) (bad) (bad) pushl dec push adc xchg adc cmp hlt fdivp push subl cmp (bad) (bad) (bad) call call mov cmp jl xchg and insb fildll xchg mov (bad) (bad) (bad) jmp pushf fcompl xchg pop jl fisttp movsl xchg sub xchg aaa adc lcall lcall (bad) mov jo jbe call or adc push mov out pop sub push data16 (bad) (bad) (bad) fiadd mov inc sbb adcl jmp aaa out or (bad) lcall cld xchg mov lret jno out dec xor xchg jge pusha (bad) ds jg dec divb and cmp (bad) call call cmpsb mov arpl xorb sarb icebp mov adc pop hlt add hlt (bad) stos ret clc push lret add dec cmpsb movsb scas mov mov stc jg sbb test in xchg push xabort (bad) (bad) mov lds mov add adc xchg add or (bad) ljmp mov test mov jp sub (bad) daa repz (bad) (bad) ljmp mov xor loopne dec jns or out ss push sub (bad) stos ror jl sub es imul test mov (bad) (bad) (bad) (bad) aas cmp test cld out sahf addr16 mov push lods add sbb aas ret push (bad) (bad) call in pop push insl scas pop or pushf jae enter xchg (bad) (bad) call cwtl or js push lods cwtl lock aas sbb (bad) mov gs (bad) (bad) ljmp inc dec push mov xchg jns inc mov mov xchg jecxz (bad) (bad) pushl inc sub pop inc adc sti push in (bad) mov or xchg je inc jmp lret mov (bad) (bad) incl nop test bound decb adc (bad) (bad) (bad) ljmp sbb xor jl popf sub adc cs pop fdivr (bad) (bad) jmp testb mov rcrl push imul nop add decl cmpsl arpl fwait movsb sbb ljmp jo fnstenv or mov (bad) decl in or jecxz paddb repz scas dec sub gs jne adc in jg xchg add cld jbe mov loop,pt data16 sub (bad) (bad) pushl rorb fbstp ds or mov push in mov in shrl jb pop mov xchg jg cmp and or cld fdivs or jmp mov arpl push cmp push mov xchg adc fdivr xor test lds dec sti cmp lock cmc adc mov mov add add xchg and decl dec ds aam aad dec cwtl inc inc xor imul inc call inc ljmp (bad) jb imul xchg movsl xchg fcoml stos mov adc imul scas push repz lret adc jnp inc mov dec push inc (bad) rol into (bad) (bad) jg ss pop dec xchg (bad) sbb inc jns xor cmc dec lret out jo mov or dec and lods cmp shlb es mov push dec lock (bad) pushl loope dec js push popf test push lahf js and add testl test xor and push dec mov mov sti mov (bad) ljmp in ja outsb dec mov popf rcrb mov and dec loopne (bad) (bad) (bad) incl testl or aas (bad) pop clc (bad) lods roll loopne aam jmp (bad) (bad) pushl ror stc fnstenv pop fs mov loop sbbl ficomp push pushf aam xor (bad) (bad) mov mov out orb push cmpl insb imul std call lods push enter push (bad) mov scas fisttpll rolb addr16 xlat scas sbb (bad) jg push xor xlat adc dec out ret (bad) (bad) pushl jo xor push test and addr16 push arpl sub pop lea mov dec mov in cltd mov or cmp xor call mov pop pop ja (bad) decl pop ret push sbb mov or repz inc pop pop mov insl (bad) (bad) fcomip pop insb mov xor and cmp fwait jo int push or daa xchg (bad) dec jne sub xchg xor xor cld mov mov negl pop icebp (bad) (bad) inc mov push push push fnstenv cld mov pop adc sar mov loopne loopne mov mov jg dec cmp hlt add or pop mov scas (bad) in sahf int adc and movsl sub ds pushf mov cltd pop xchg add add std (bad) (bad) jg jecxz jmp fnsave mov sbb dec repz inc mov (bad) (bad) jg ds jecxz lds mov sub adc fcomip cmpsl mov sbb jno dec inc movsl sub mov mov loope sahf test (bad) jg (bad) lcall fsts mov xor xchg repz (bad) (bad) inc push mov cmp repnz cld ss mov fldl addb or dec adc (bad) (bad) jg pushf cmpsl call pop call mov fstpt call call fdivs sub push ss push out in sbb je cmpsb jg xchg fdivrl mov or xchg add pop mov ret (bad) cmpsb ja push lahf dec aam mov out std mov mov scas cltd in dec add (bad) call andb (bad) negb xchg xchg insb jae (bad) lcall xor enter (bad) dec pop scas lea adc pop pushf cltd pop (bad) (bad) (bad) pushl sub push sbb in sub xchg repnz cmpl (bad) (bad) (bad) jmp test lea sub mov sbb push adc add call ljmp adc out push nop sub dec call xor (bad) decl test sbb mov dec dec jge sbb sahf loop adc hlt mov mov (bad) dec mov sub iret xchg cmpsl push scas jl mov sti mov push loop lods daa pusha jae aaa sub ret outsl test out aaa jp xchg pop shll pop sti mov (bad) (bad) jmp std mov test push inc and lds add cmpsb jbe fild pop je push popa xchg push sub push jo in sub and ret mov repz push (bad) and (bad) (bad) (bad) mov inc push in dec xchg ret xchg out dec das lcall pushf push gs aaa and mov push dec pop test mov jmp sbb js movsb (bad) dec push ljmp adc jne mov xchg dec (bad) jp (bad) (bad) call jne (bad) and orl loop sarl xor jp cwtl movsl add pop sbb cld outsl (bad) andb mov ret les (bad) (bad) pushl inc movsb lea or push sbb in xlat add mov jmp pop push outsl sbb (bad) (bad) incl stos add cmp mov or out das sahf sub adc leave stc lock add shlb adc and xchg fidivrl adc les es aas pop clc push cmp cmp aad call adc push (bad) mov (bad) cmp sub scas imul and xchg out ljmp or dec testb push (bad) sbb mov push xchg or (bad) je push jg (bad) lcall mov bound scas inc insl jecxz push adc (bad) xlat stos sub fnop inc dec clc popa in mov push test xchg and sub pop push or adc add jmp adc fsubr xor pop or lock (bad) (bad) mov (bad) cwtl aas fwait inc aas xor leave pusha push jg cmpsb adc and dec jae mov outsl dec fwait outsl mov xor xor (bad) (bad) push mov popa inc int3 jb mov (bad) jge shrb xor arpl and aam dec shlb jns add idiv or jo dec aam notb (bad) lock sub (bad) mov imul cwtl out sbb loop cmc aaa insl arpl stos aas sahf scas sbb ljmp stc jp scas jno aaa callw insb or and inc (bad) sbb push adc dec jo cmpsb daa cmc push cld xchg inc cmp jo or inc add mov ljmp (bad) (bad) fcomip and sbb lds idiv xor loope pop or (bad) (bad) (bad) lcall lea xchg movsb push or sbb in and jmp mov std hlt cmp ja hlt popa arpl loopne (bad) (bad) (bad) jmp jmp push lret mov rcrb xor stos add loopne (bad) jmp (bad) cmp test push mov xor cmp pop jge hlt (bad) (bad) call or pop or daa jp cmp mov sub pop mov (bad) (bad) (bad) decl add js mov (bad) idivl mov mov adc pop cmc call xchg and lock movsb out into mov pop pop and aam add pop cmpsb xor (bad) ss das cli aas jg (bad) dec pop fiadd sbb mov movsl stc call inc and and hlt in jl pushf inc lcall (bad) ljmp push pop imull dec cmpsb inc xchg cli jae inc mov divb xchg aaa ljmp push (bad) sbb es stos inc mov and pop outsl push clc jnp cld cld (bad) jmp inc cli nop cmp aam cmp or sub push enter pop dec test xchg push pusha xchg clc scas lods xchg sub loope ret mov jg ja in mov sbb sarb loop std pop mov xor or ret in mov (bad) fsubs (bad) decl push stos popf in adc nop mov mov (bad) (bad) (bad) ljmp and std add cmp aad test not pop iret stos adc inc fwait pop and es jne roll and dec out rcrb (bad) (bad) inc push test bound aas das mov sahf push ljmp rcrb outsl fmuls (bad) (bad) dec jae jge adc (bad) iret cld (bad) mov mov mov mov push jge xor adc imul jl mov insb loope inc pop scas xor (bad) (bad) call mov push jbe cwtl mov sub in inc mov imul flds cmpsb inc in out jg hlt popf addr16 xchg inc das mov or push xchg adc (bad) (bad) (bad) call out pusha or jbe and cmp or out cmp mov fdivp mov cmp sub cmc clc clc in pusha xlat mov mov push adc clc (bad) (bad) jmp and das (bad) push inc mov push lcall out mov mov sub ja sbb imul ss push leave ljmp ljmp lods outsl lcall loopne push mov jns sub mov stc mov push push jecxz stos aaa test xchg mov pop adc (bad) (bad) (bad) std out lock sarb in mov xchg add (bad) stc xchg cmp adc cwtl cmp (bad) (bad) jl sub pop cwtl (bad) fs or loope or xor insb dec adcb add stc test sbb mov lock ljmp in lods test adc push scas fidivl out fcoml sub ljmp xor (bad) lret pushl les add call or lahf call mov insb (bad) decl mov jp pop lock ljmp das cld mov sub int dec fldt (bad) aad (bad) call pop jns shr adc lcall mov std xor push ljmp jle add jge enter xchg cmpsb repnz pop mov ds add int mov or push or negb adc jne add ret jmp rcll in jne push pop icebp rol (bad) (bad) (bad) jg sub jae icebp scas xor sub xchg jmp mov ret insl pop test sar (bad) pushl fdivrl cmp fcoms xchg inc add outsb popf test (bad) (bad) jg pop (bad) jnp movsb adc lods pop es (bad) and insb sti dec adc fistp push cmp lock lea jmp mov fnstsw cmpsb loop imul ds daa stos push lret add jno ljmp loopne (bad) jg mov ljmp mov add (bad) jmp jbe jno dec xor pop aas dec out or inc dec xor cli sti nop repnz (bad) (bad) call add mov jge jnp xchg fs add jp (bad) sub sbb (bad) mov (bad) pushl int ljmp cmpsb ljmp cmp sub fwait ds jge cmc ret rorb cli aam cmpl (bad) call cwtl stos adc inc sub (bad) (bad) out stc cmp push adc cltd xor or ret mov pop lock xor inc fimull xlat lock dec adc adc incl test andb push or cwtl in mov push mov popf jns mov add incl xor mov and (bad) (bad) (bad) lcall and cli adc inc ja cmp mov lock leave addr16 adc sarl jns push jle xor mov xor rcll and mov (bad) sub fldl mov mov jmp cli jecxz cmp mov inc dec fs test push test addr16 sbb mov jmp cmp lret mov cmc (bad) jo fisubl dec scas inc xor lcall cmpb push loopne (bad) (bad) (bad) jl and outsl popl sub cmp adc cmp stos cmp addl (bad) jmp xchg stos imul push push sub xchg mov sbb inc xchg into adc (bad) (bad) call imul pop or aam pop or xchg mov sbb adc mov xor mov jae test and lods aad mov adc punpckldq dec or mov ret iret cmp push sbb aad push jae push js cld (bad) decl test push test shlb add (bad) (bad) (bad) mov jne in fnstenv xor xor cmpsb (bad) out stc loopne ret mov jmp xor sahf repz lret sub or pop cmp frstor daa ret (bad) (bad) (bad) ljmp out (bad) aas out adc mov mov scas pop inc inc flds xchg pop in aam mov (bad) (bad) decl adc push add and out mov incb add push outsb or movsl cmovo test loopne jecxz lds (bad) decl insl lcall loop repz stos mov clc pushl mov fisubrl scas ljmp test jmp xor mov xchg cli cs mov and mov xchg (bad) (bad) (bad) jmp lret in xchg fyl2xp1 loop outsb xchg pushf push (bad) xor int xchg int leave fidivrl (bad) call lcall pop dec mov pusha and ss fdivp (bad) inc arpl sbb xor jbe pop sbb mov xchg add xchg fwait adc jb (bad) (bad) ljmp xchg mov es sbb mov sbb lret sub fcomip pushl mov fadds jg,pt int enter cmp xchg dec loope mov pushl mov mov dec jle pop insb (bad) adc xchg aam xchg mov jae cmpsl (bad) out xchg or fldcw jb (bad) jg or rol mov push sbbl popa clc (bad) cmp stos mov int decl addr16 (bad) xor lcall and fadd test cmp xchg inc adc and scas cmp (bad) jg (bad) pushf imul es enter int3 push push hlt lock sub (bad) (bad) decl lcall rol and mov (bad) imul aam (bad) (bad) (bad) jmp stos xor xchg (bad) icebp pop aam xchg dec pop out sti incb movsl xchg dec out or inc mov or imulb aam jns sti mov leave lock adc xchg loope and or popa insl mov movsl or (bad) ljmp xor inc adc mov or cmpsl adc out cli sub jo loop repnz dec adc stos popf push or sbb mov pusha (bad) (bad) (bad) (bad) pushl mov xor flds add data16 shrb jp mov std ljmp lahf out out xchg sub gs (bad) out and in sbb xor mov bound and loop mov mov cwtl jae rorb hlt xchg mov add (bad) jmp mov inc icebp jl push clc inc adc hlt clc (bad) (bad) ljmp mov ljmp cwtl dec gs ds xor or lcall test xchg fwait inc ret test fdivl mov mov jg xor andl pop xchg jno sub push cmp (bad) leave (bad) mov aam mov (bad) mov out jmp push (bad) (bad) (bad) pushl nop (bad) jge mov lea std out xchg add (bad) incl xor add or cmpsb or mov or pop mull mov cmp sub adc sub jge mov dec enter xchg jae cltd or mov inc pushf fildl lea fcomip (bad) (bad) cmp jb insb adc cld into mov ror movsl and push repnz sub push out pop jl nop (bad) (bad) (bad) fucomip pushf xor dec inc std hlt (bad) dec mov add (bad) mov jnp mov stos ss fstp lock or add add adc sbb jnp xchg xchg lock (bad) (bad) (bad) (bad) jl scas jl sbb repz inc fildll push inc push add ljmp inc leave (bad) xchg in pop mov xchg jne jge (bad) insl add aas mov sbb mov rcrb lds and lods xchg push mov fistpl add or sti ja cmp jmp sbb (bad) incl lret (bad) pop add imul jecxz adc loope jge dec adc (bad) (bad) mov adc jl xor sbb xorb mov mov std ficoml pop (bad) (bad) (bad) (bad) fstpl xor (bad) dec push add clc cwtl xor and in jmp popa jno int cld pop and jl mov call (bad) mov fstl pop inc adc push out sbb lods out mov repz gs mov (bad) (bad) (bad) incl (bad) cmpsb push aad hlt inc loope fistpll js rcrw fs sub lods pushf mov pusha gs nop les mov (bad) incl xchg xchg inc lahf pop xchg push and push jne test mov sbb push (bad) (bad) (bad) jg dec push lahf xchg add ficompl pop adc popf jmp mov cli in dec pop (bad) (bad) (bad) decl and loope push fwait mov mov mov and add mov push je jp ficompl push test movsl push daa pop les push cmp ja mov fist jecxz push loope (bad) addl stc roll pushf pushf add dec test add dec inc pop lcall dec scas cli pusha dec xor fdivrl add ja dec arpl dec scas pop mov mov data16 in pop imul pop sub getsec rcrb sti daa pop aas ror (bad) (bad) (bad) lcall mov xchg aaa sbb sbb (bad) xchg fwait gs xor pushf es sbb shlb incb pop inc lahf add pop cmc imul adc mov mov ss (bad) (bad) (bad) fdiv xchg or xchg sbb inc sub (bad) mov bound pop push (bad) (bad) (bad) ljmp cmp sub call jns mov dec mov dec int3 insl jmp jl (bad) (bad) (bad) pushl addb xchg push or pop pusha jecxz inc xor imul push xlat sub fdivrl nop xchg lock imul cltd push cltd and insl sub or pop or push popf daa xchg inc fcoms jo bnd add (bad) mov (bad) xor in inc call in ret (bad) (bad) incl mov add sbb int call (bad) imulb (bad) xor (bad) incl mov add cmpsl and xor fwait adc and lcall inc mov fcmovb cmp xchg sbb test aas xchg leave testl or mov adc aad test popf out and icebp insb arpl sbb dec or mov dec test (bad) (bad) (bad) jmp add pop in pop cmp xor popa insl xchg stos pop xchg incl test aad jne (bad) jg repz cmp notl push jno ds (bad) repnz cs (bad) (bad) (bad) dec iret pop addr16 iret mov ret xchg test xlat stc lahf push push idiv xor jnp adc movsl sbb pop ret or out es add mov int3 aam in imul (bad) (bad) pushl (bad) cmp mov jge mov dec push jns lea lret outsl adc xor lret test jnp (bad) (bad) (bad) pushl jne movsb mov xor les lock roll lcall test cwtl inc (bad) cli cli pop loope dec and js rcl fs push div (bad) incl hlt mov mov add pushf and mov adc sbb mov mov inc cs cld stos (bad) (bad) decl rolb jp mov xchg insl cmp sub xor nop icebp dec aad adc adc mov cli inc (bad) call dec aaa inc cwtl mov int daa test je pop push jnp insl leave shrl fbld (bad) jge lods sahf out (bad) test sar (bad) ljmp insl lcall push aas pop sbb and out pop popa push ljmp (bad) (bad) jg jl dec sub out cmp out outsl ljmp xor movsl xchg sbb (bad) (bad) jmp adc jl mov cmpsb daa inc or sbbl cmp loopne xor (bad) (bad) lcall jecxz mov lahf inc add sub (bad) xor cltd xor outsl adc lds scas xor sub (bad) (bad) (bad) (bad) (bad) mov xchg inc inc push enter leave nop insl or aam cmp mov repz lock (bad) pushl repnz mov mov mov mov jmp or dec mov idivl addr16 fldenv hlt push das pop fist (bad) (bad) mov xchg imul (bad) xor adc call sbb (bad) (bad) (bad) (bad) out cmc hlt lock std mov mov push adc cwtl dec cs loop push xor push addb outsl inc pop pop fwait jno xchg cmpsl inc sub dec icebp jl arpl (bad) aad lods (bad) (bad) (bad) jmp mov in outsb or mov sub pop loopne (bad) (bad) (bad) lcall stos xchg aas push (bad) adc xchg mov mov popf scas mov jmp call (bad) ja es cmp repz daa (bad) int3 push jl mov ret pop mov test xchg loopne push jbe jmp inc fsubrl xchg lock push fldl stos outsl loope in es (bad) (bad) (bad) (bad) mov (bad) in jnp inc sbb inc jo mov das dec bound mov ja push xchg xchg pop int sbb xor lock fsubl sbb lods mov mov pushl adc (bad) je ds movsb add add lods mov movsl mov fs dec sbb popf sub inc iret (bad) (bad) (bad) jmp add (bad) es sbb loope call outsb nop push xchg repz mov (bad) pushl push jle fisttpl cmp ficompl and push xchg fisttpl jne dec ret inc jg (bad) ljmp in xor aaa shlb bound push fs (bad) ljmp dec jne jno xor fs lret scas incl (bad) (bad) (bad) (bad) fild mov nop addr16 lcall xor mov fdivrl xchg sub xor (bad) (bad) pushl int cwtl rcll lcall in jne js ja dec (bad) (bad) ljmp push test xchg stos sbb mov mov xor dec xchg xchg repnz jecxz call xchg fsubrl jns movsl pop lahf mov sbb outsb decl jo out sbb and fldt mov (bad) cmp jae andl enter je stos fiaddl lcall div push test pop jle addl es lock jg push or sub lock push out fidiv mov aad push push decb lock push loopne xchg mov jnp lods cld jg (bad) sti ror add cmp jo dec dec pop adc sub scas adc adc (bad) pushl jmp xchg sbb or icebp je cmp push add push test decb (bad) (bad) jmp jns or mov jnp subl sahf pop call jg (bad) ljmp call leave addb add sbb mov cwtl jp push push xor cmp shrb movsl xor decl shll orb xlat lock push mov mov mov pop in pop mov xor push fs (bad) jp jnp loopne (bad) jp fdivrp mov movsl cmpsb jbe jge jecxz cltd loope xlat (bad) loop (bad) (bad) pushl inc stc xor lret or add add lock fiaddl aam (bad) (bad) (bad) jmp mov mov push loope (bad) xchg ror nopl in arpl fstp aaa inc imul clc rcrl jle push dec push jle (bad) (bad) (bad) jg movsl and scas jno push adc mov lcall add mulb dec std (bad) mov mov push and mov mov (bad) (bad) decl leave pop sub je mov insl jge les pusha int3 and jp scas push sub incl test lea test push push rcrb fidivl ds imul (bad) incl (bad) int and out cmp sub in mov arpl incl mov jo shrb aad mov adc dec push cmpsb add cmp jg scas in es xchg mov pop mov sub (bad) lcall (bad) mov lea add mov pop popa popf test scas jne jl sahf loope daa xchg (bad) pop push pop inc clc mov sbb clc or in pushf dec (bad) (bad) incl mov mov add pop ret les add sar push jle cmpsl jmp xlat jno push pop sub mov fdivs push mov test cli idivl negl mov es cmp mov mov push (bad) aam push js add jb sahf push push sub add sbbb jb pop inc cmp mov fs cmp jne loope rcrb and int xor (bad) mov (bad) out out xor sub icebp (bad) (bad) (bad) decl push mov rcrb (bad) mov mov jmp icebp jmp gs (bad) fcomip (bad) xor jbe mov mov lds mov mov negb (bad) (bad) decl jge in lds int3 or jg push lock fnop in aaa faddl test sub test jo mov pop mov arpl gs repz mov and jp pop adc (bad) ljmp data16 inc sbb add dec jbe mov (bad) mov jl pop hlt enter dec (bad) (bad) (bad) push popa ret rol sbb inc decl mov loope ds push test out dec xor pushl dec sbb ds sub cmc push (bad) cwtl sub into jnp or enter sbbb clc sub lcall in dec (bad) (bad) (bad) lcall out cmp inc cmp mov aaa add aam mov mov xchg (bad) (bad) call or out pop inc int push rolb outsb mov jno dec dec nop add (bad) (bad) jg pop sub push jbe in cli jp sub and ret pop cmp pop adcb (bad) jg lcall jmp adc or movsb lods xchg adc add (bad) (bad) fbld repz imul jl ljmp lods mov ja repnz (bad) (bad) call mov cmpsl xor in xchg out leave pop (bad) je dec lods rclb arpl lcall stos inc mov (bad) pop pop clc (bad) (bad) out sub insl outsb movsb daa sbb cmp in imulb test mov (bad) ljmp mov cmpsl and scas jae jmp or (bad) (bad) fsubrl imul mov add mov (bad) mov mov xor popa das pushf dec jmp rorl (bad) (bad) call cmp push xchg inc bound and add xchg popa xorl mov in add cmc (bad) (bad) (bad) incl or xor or sub stos fs push loop mov mov sbb popa or mov (bad) push add sub jge pop sbb inc out fnsave cmp (bad) mov fsubl stos or push xchg pop setae cld or mov arpl pop int3 (bad) (bad) sub mov push fsubr adc mov push jecxz ds aad pusha or inc (bad) ja out fistpl mov lea jnp ret outsl xchg jg jmp sbb inc scas subl movsb add (bad) (bad) pushl int xor outsb mov into or pop (bad) xlat mov (bad) incl add jmp cwtl out sahf xchg jmp jmp and (bad) ljmp (bad) sbb lret cmp cld int3 in cmp nop fisubrl adc les ret (bad) (bad) (bad) jmp xor repnz cmp (bad) mov movl andl (bad) xchg sarl (bad) (bad) dec jge rorb pop xchg sahf iret push sbb pusha fwait sbb mov (bad) mov and jb sbb mov cmp (bad) (bad) push jns xor and inc sti pusha orl mov aas cli ror sub movsb stos std (bad) (bad) decl dec dec cld (bad) sub aam jle jnp push fistpll loop loop cmp (bad) (bad) incl fimul jge leave (bad) sbb lock in (bad) sti cli ret shll xor xchg (bad) (bad) (bad) pushl mov ljmp push sbb lea (bad) in push adc sbb pop repnz lods or idivb inc scas fistp jno mov (bad) lcall push cld xchg jl insl mov add mov pusha add pop mov insb aam scas (bad) (bad) (bad) (bad) out cmp mov adc xor and mov loop push cmp mov loopne pushl cli clc in outsb fcmovnu test mov mov (bad) ljmp ds (bad) mov mov stc aam or sub and mov (bad) (bad) (bad) call stos mov xchg out dec out adc int3 sbb sbb and jle fcomip stos insl cld popl mov or outsl rcrb push test addr16 xor push cmpsl ja push aaa cmp les xchg lods ret add add fwait mov or pop mov dec mov add xor popa cmp mov fwait gs mov or inc mov (bad) into (bad) loopne push jb dec xor fsubrs push int xchg dec testl mov xor cmp push fimull arpl cwtl sub loope incl dec xchg dec andb sarl imul pop repnz (bad) (bad) decl dec jae pushf (bad) mov push sub mov add imul in mov (bad) ljmp shl mov inc push pop push lock aaa jle jns fs (bad) (bad) (bad) (bad) fcom fsubl inc aas adc xor out dec pop adc push lds push (bad) mov pusha or jnp es add daa lret lahf divl call dec fimull or add call in push imul out (bad) fnstenv mov push sbb jmp push sbb cli test lods add push mov or iret lcall (bad) fild inc repz test test inc push sub pop out mov (bad) lcall jp xchg (bad) (bad) call xor cmp dec ret sahf in sub cwtl (bad) (bad) (bad) (bad) dec pop pop testb mov sbb loope (bad) jae movsl jecxz or sub test test (bad) (bad) inc mov lcall bound pop subl mov in into jb (bad) (bad) lcall andl inc inc and (bad) jae orl dec test pop js lods ds add dec xchg jl pusha push clc (bad) (bad) jg push pop mov leave stos orb or daa in mov jecxz lcall (bad) incl das lret pop (bad) xchg clc stc jge adc or fbstp mov dec inc jb out jle push add pop sbb dec cli out enter push inc dec (bad) inc add sub repnz loop pop imul mov pop pop xor jge je push push dec cmpsb pop mov push and or ljmp cwtl ljmp jle sub xchg (bad) lcall bound or test push inc xchg rcr rorl or pop inc sub lret orl sub mov sbb lea xchg jg cld push mov movsl add push imul (bad) (bad) dec dec pusha xchg xchg imul and mov jmp lods pop mov incl in movsb xlat mov shrb daa js cld mov mov sarb sti xor cmpsb enter cs push add (bad) (bad) ljmp mov (bad) mov ffreep dec push mov sarl jecxz add ljmp (bad) cmp cmp add xor lret loopne fisub pusha add jmp xchg rclb xor hlt sbb leave je sbb cwtl inc (bad) (bad) call les int cli adcl mov sti mov pop mov popf xor push (bad) and inc mov push or adc mov test lds (bad) out dec mov inc jp arpl lcall mov pop cmp jae push jne sub dec std mov aaa ficom (bad) (bad) lcall movb (bad) lret js mov mov shl call adc (bad) (bad) ljmp inc (bad) inc lahf cmp sbb (bad) add push mov in adc dec pop sbb jg cmp jae lock ljmp daa movsl stos inc lds add push stc enter pop adcl icebp fisttp push inc loope lea les push pop push shrl cwtl or (bad) pushl int pop pop lahf popa mov out data16 inc and ss cmpsl test aad arpl clc (bad) in (bad) adc xchg stos mov xchg jle loop push push sbb (bad) in outsl loope,pn mov sbbl xor sub cltd (bad) lcall mov in xchg xlat dec inc (bad) adc fdivp cmp jmp hlt enter loop inc pop clc mov jge push xor dec lock adc add (bad) (bad) (bad) (bad) (bad) fstl (bad) in int3 or dec pop ficom sbb pop lcall sub push clc (bad) decl cmp dec in pshufw ret (bad) (bad) decl inc (bad) cmp push fistl mov dec mov aam push adc dec fnop and add sbb dec cld dec cld jp (bad) (bad) jmp outsl mov stc rorl js and stos adc movsl push (bad) ljmp jg (bad) jmp pop xchg xchg dec addr16 (bad) and pop lret push sti adc incl jno sbb push stos imul scas xchg (bad) sub lock (bad) jmp sub pushf xchg sub sar rcr inc sbb or movsl repz (bad) jmp leave add rcrw pop jecxz insl (bad) xor cmpsl jno fcmove dec mov cld (bad) (bad) jmp scas and (bad) cltd pop push xchg sar jb repnz or push jp (bad) (bad) pushl jbe cs mov cld mov xchg aaa pop lret or (bad) (bad) ffreep pop cmpsb iret xor jno jle adc sbb xor jge or test fnsave xchg ret jns sbb dec push lcall ja (bad) cld jbe jno cli fimul adc stos push lods test mov lock ds (bad) (bad) (bad) (bad) cmp dec ljmp out testl adc xchg (bad) pusha daa icebp in dec jg pusha cld cltd stos aaa xchg cmp fwait push fwait (bad) (bad) (bad) call cmpsl cs sub sahf insb add cmp xchg cmp movsl or cmpsl fstpt sub (bad) (bad) (bad) jl iret pop mov jp and fisttpl test cwtl cmpsl inc mov add incl mov dec test jge shlb sti mov (bad) jg xchg ret push int ret lret popf icebp bnd jo,pt les mov (bad) ljmp sub insl mov dec arpl cmp call je push aam (bad) (bad) (bad) incl movsl lods out mov push xor fdivrp xchg push imul or (bad) (bad) pushl xor push and mov popa adc adc mov lahf sub mov (bad) (bad) (bad) jl or jns clc iret mov inc inc and jne mov pop or push (bad) (bad) (bad) ljmp or movsb dec lahf fistl andl push adc and je into add incl xor stos jno imul test movsb lods sub mov mov repnz mov (bad) push jmp (bad) (bad) (bad) (bad) mov jmp cwtd inc and aad rolb add (bad) xchg repz pop aas ds push or or lret rolb into lret inc or mov add jo loope pushf (bad) (bad) (bad) (bad) aas (bad) cmpsl cmpl mov (bad) outsl repnz xor add std fnstenv (bad) (bad) (bad) call or jmp cli rol jg pop out xor hlt movsb add or or dec push pop xchg jp mov (bad) fisttp or aam inc push fdivrs inc xor sahf std dec jecxz fisubrl ss pop push sarb pop mov adc push stos js add cmp pop pop (bad) (bad) (bad) jg ret clc add cli nop mov xor out pop rorb mov dec adc sub push jae cmpl adc cmpsb in adc push ja pop push dec xchg aas push sub xchg movsb jns out mov decl (bad) inc jmp addl in lahf insb (bad) (bad) (bad) jmp cmp test movsb pop adc clc (bad) ljmp aam out dec cmp cmp inc cmp sbb (bad) (bad) jg and push inc jmp ds aas mov mov iret lock mov test and mov inc test stos inc sub (bad) dec mov pop lret rol pop fidivr cmc or inc fldenv lods cmc cmpsb addr16 (bad) (bad) jmp push in xor mov fistpl or push xchg and sub repnz (bad) ljmp xor dec jnp adc or mov dec (bad) xchg int in lahf xchg fs xchg and das and jne xchg xorb dec outsb jmp jle mov cmp adc data16 push (bad) (bad) ljmp shlb out or fist lds sahf mov (bad) jmp sarl or inc js (bad) in das push subb mov scas adc (bad) ds jbe push push inc les lea jg loope out decl aam shl mov xchg (bad) (bad) mov sub lock mov xor ja (bad) scas jmp (bad) ljmp fcmovnu int3 in stos xor fcomip and movsl (bad) pop fidivrl scas (bad) fldl (bad) in daa dec lcall (bad) call daa pop (bad) mov cmp jl dec out (bad) lcall xor enter fbld out enter xor sbb decl stc stos (bad) arpl cmpsb aas insb aas aad shll push shlb outsb cmp dec (bad) (bad) (bad) (bad) jge fsubl inc inc ds fiadd jmp sbb das push adc sarb cwtl push lahf dec scas mov das (bad) (bad) lcall movsl dec mov mov scas cmc sub in ja mov (bad) (bad) ljmp (bad) mov or mov les adc cmp mov (bad) push (bad) mov jae cltd add and cmpsb popf cmp sarl mov sar pusha aam cmp scas test pop xlat inc fcomip inc xchg inc xchg mov test cli xor mov ror xchg mov loope fidivl cmpsb movsb adc (bad) (bad) (bad) incl out les repnz push cmp fwait inc push push push iret ja pop imul outsl push mov (bad) decl sub imul dec push int3 imul inc imul sbb (bad) (bad) pushl and cmpsl inc add iretw test mov sbb pop jbe dec mov aam inc jne push cwtl xchg add (bad) (bad) ljmp js test pop js cmp test lods inc and mov rcr lock test iret mov js and pushl aam mov or test leave jmp (bad) or pop sbb decl mov test push movsl cmp clc sbb dec xor jmp outsb (bad) (bad) incl jmp lds xlat xlat arpl dec call inc add add fwait and jmp jo ret pushf enter push pop fdivs pop cmpsb mov jne ljmp jl fld1 outsb ss or (bad) (bad) (bad) jmp jb das push std sarb daa lods xor (bad) cmc lcall (bad) cli and jno cli aaa orl and and ljmp lret jp cmp cmp cmp lods fimull (bad) adcl cmpsb aas lret mov xor or (bad) ja xchg add jle dec mov xor fbld adcl repz sahf adc hlt cltd sbbl sahf mov scas or push scas add jg fildll adc push dec push xchg call repz fisubr jns (bad) (bad) (bad) call pop and in adc and scas or (bad) (bad) (bad) incl aad or or mov or loop daa sti imul (bad) lcall adc push cmp pop out adc notl in (bad) mov add sub jg (bad) test (bad) in ds push dec jmp sub (bad) pushl inc xor aam and sbb aaa mov rolb xor and (bad) (bad) (bad) jl clc mov imul call fldcw sub adc cld popa (bad) (bad) (bad) dec hlt test xor jbe je ret fstl sub push inc inc or xchg xor inc or lcall or cmpsb pop loope sbb (bad) (bad) (bad) incl dec faddp jge cmp fdivl lahf test mov push cmpsb sub jge jg pop inc clc ljmp xchg je enter mov int3 and jg fmulp mov push sub (bad) mov push scas pushf and sbb cmp out lds mov lods inc (bad) (bad) (bad) pushl lds stos ljmp decl and addr16 jb push adc xor lods (bad) ljmp cmp cwtl loopne mov pusha arpl (bad) mov jmp cvtps2pd xor jmp push or lcall inc push in rorl jnp in and sub (bad) (bad) jg loopne leave mov call fldt xor (bad) (bad) inc sbb sbb scas scas mov cmp (bad) push mov sbb addl lahf sbb (bad) (bad) (bad) (bad) mov mov xchg aas fisub mov int call mov mov (bad) pushl add stc xchg addr16 inc mov cmp inc rol into xchg popa cmp mov cmpsl add pop (bad) mov pop jbe sub adc adc and (bad) (bad) push lods jne bound call sub push mov xor in (bad) sarl mov ljmp sub jno ljmp insb mov (bad) (bad) jmp push bound add cld subl xchg js (bad) arpl iret push (bad) mov (bad) (bad) (bad) (bad) mov jl adc jno pop jp push repnz dec dec or mov sbbb jge (bad) (bad) lcall (bad) lahf test pop xor inc or cmpsl mov xlat jg cmp inc jg stos (bad) (bad) (bad) incl pushf or sarb (bad) ljmp dec and inc int3 pop (bad) (bad) (bad) pushl xor arpl inc pop push stc sbb sub xor jge adc (bad) inc ljmp call fst icebp mov adc inc cmp mov pop fnstenv cltd shlb cs notb into faddl test movsb icebp jmp std cmp sub push out dec inc pushfw repnz (bad) inc call (bad) test stc sbb nop cltd add int xor shr (bad) inc in push std jg xchg mov rcr pop divb hlt push inc cmp (bad) mov in cmp in ret pop adc push cld (bad) mov orl (bad) add mov push add cmpsb cmpsb icebp jg jge scas jmp or std mov enter aad shll cmp cmc jmp push sub jecxz push (bad) (bad) (bad) (bad) mov icebp jg push mov ds and ds (bad) mov (bad) (bad) call or sbb mov mov movsb and jg lret aaa or mov cltd jne sub or (bad) (bad) (bad) decl push mov shrl and sahf jb xor add lret inc sub lcall inc mov cli xchg lods adc adc dec arpl clc (bad) (bad) rcr xchg sub mov jmp cmp pop cmpsl ljmp scas pop lds and push mov pop pop mov push adc mov dec inc out aas dec adc mov and (bad) mov ds push (bad) sub mov jge push fisubl aam xchg adc (bad) es mov clc (bad) jmp mov test out sbb sbb (bad) (bad) (bad) (bad) mov adc mov into call fbstp cs test repnz out test jmp push test dec (bad) (bad) (bad) call rcrl sarb mov pop pushf mov es test inc mov lret xor sbb cltd in fisttpl cmp loope loop mov scas leave jb sbb sbb and ret cs in jp jo (bad) mov sub jo mov mov sub xchg rolb jns (bad) (bad) (bad) call jl cmp adc sar pop ja clc dec jnp cmp ret (bad) ljmp nop dec stos rcr popa cmp (bad) repnz into dec gs mov add (bad) (bad) (bad) jmp popa mov leave fcoml insb scas or rclb sti shll decl dec loopne jp inc mov or stc or (bad) inc xchg (bad) and sti nop adc iret mov or cmp rolb js sbb inc (bad) mov lret xchg mov (bad) (bad) (bad) (bad) jge add insb mov pushf fs fdiv push mov test out cmp (bad) decl pop add in hlt pop dec push es cmc jbe cltd jbe aaa inc pop xchg orl call jle lods out cmp scas int3 sahf in test repnz lret fsubs nop (bad) sar decl xor pop or loop movl iret repnz call ret xor pusha fcmovb test push ljmp push and lahf cmpsl into pop sbb cld loop xchg inc mov sbb or fisttp mov call add push fstl mov in mov xchg fwait adc je (bad) fcomip call xchg add push js (bad) sbb mov mov jno inc rorl (bad) in cs addr16 xor push adc mov (bad) (bad) (bad) decl cmc cli test lret mov mov popa adc jbe loop dec inc xchg push (bad) (bad) (bad) (bad) jp dec pop push and jb in xchg xchg sbb fldt and mov mov sub xlat test stos xor mov add jae outsb or ja push add fisub xor add jecxz xchg mov add outsl add or rol jno into add mov xorb and fistp push mov sbb and (bad) ss mov or mov inc mul adc cli mov jns mov test pop xchg shrb mov movsl xor aad (bad) decl inc add aas add sbb mov mov cli (bad) (bad) (bad) (bad) in dec xchg sub mov sbb adc sbb ret xchg mov (bad) (bad) (bad) mov addr16 cmpsb or pop xchg movsl test pop and adc cmp cmc and (bad) (bad) (bad) pushl imul sbb repnz xor hlt in int pop xchg testl (bad) (bad) (bad) call push repz jl inc lock in imul pop push xor mov mov (bad) (bad) (bad) jmp cld xchg dec jbe,pt and aaa add jno js dec cmc ja push fsts cwtl (bad) (bad) decl xchg inc in mov into lock sbb fisttpll mov sub ja testl pop inc ret pop icebp jl cmp dec xor (bad) (bad) call fstpt sbb jae jbe test lcall dec clc (bad) decl mov push test ret xor out roll insb adc out es (bad) jmp popf xor jb pop cli les adc movsb pop lds inc (bad) mov inc sbb dec jl inc dec aaa std das nop jge imul test inc push or sbb loope push jns mov jnp pop add pop dec mov xchg push (bad) (bad) jmp fcomps mov mov in inc jo,pt out (bad) mov push test aas loope mov xchg (bad) sub fidivr testb sahf xchg add push (bad) nop dec or (bad) (bad) (bad) ljmp mov adc lods xchg fs xchg icebp stos add pop mov push adc jo mov cmp dec (bad) dec mov inc popf imul add cmp adc (bad) (bad) call imul movsl int imul cmp cmp insb pop jbe sub orb lcall push push loopne fsubrs pop cmp enter or hlt xor add imul (bad) (bad) mov mov adc push loope leave dec xchg fwait and repnz (bad) fildll lds adc adc jmp inc cmp (bad) pop (bad) mov dec cld (bad) decb xlat daa sbb sub push (bad) jg mov lahf mov and cli add loope (bad) (bad) (bad) mov dec loope push jb std loop lret and cli adc jmp das (bad) (bad) (bad) std out jb imul jle mov jge mov cmp dec (bad) inc cmp inc (bad) mov inc mov bound test jmp xchg sub adc mov mov sahf jmp icebp jno (bad) pushl mov jns xor aaa (bad) imull movsb mov ljmp mov cmp adc jnp lea call test insl mov sbb push aam jae in (bad) (bad) (bad) ljmp popa aad dec xor fwait lahf inc inc mov and imul pop dec data16 mov into (bad) (bad) (bad) incl xor push stc (bad) sub inc pop sub xchg xlat sub xor mov (bad) (bad) (bad) lcall add lea adc test mov bound stc mov xlat lahf in (bad) (bad) (bad) (bad) std dec add repz stc movsl cltd jno pop inc out outsb inc pop mov test add scas sub fwait pusha cwtl scas and adc test inc xchg mov cmp in dec ror jp mov jb lock testb (bad) (bad) jmp jo ficomp cs aad mov stc dec fsubrs pop sbb jne (bad) (bad) (bad) call (bad) stc mov bnd test mov sbb dec popa cs (bad) (bad) push test fsubs pop pop popa andb addr16 lea jmp nop inc add (bad) (bad) ljmp iret dec jp inc xchg or pushf das inc or jb,pn dec mov mov cwtl (bad) js clc xor cmpsb lock lcall es repz push dec or pop jo mov lea sahf test (bad) (bad) ljmp (bad) mov sub xchg mov leave xchg dec es mov xchg es (bad) lcall movsb mov dec shrb inc pop mov add incl stc ret lret lcall or push fsubrs (bad) (bad) incl mov adc (bad) test cld jg scas xchg cmp mov or push outsb pop pop mov test clc loopne test decl fadds fsubr outsl repnz sbb outsl inc cmp (bad) lcall dec and femms inc push dec ja adc push mov adcb imul (bad) incl test mov xor and pop sbb cld ret addl scas pop mov (bad) (bad) lcall mov outsl jle push imul in cmp movl js cmp pop mov dec mov jmp clc (bad) adc add cli enter xor (bad) (bad) (bad) jmp clc test push jns cmp ret in jbe rcr fldcw adc sub push (bad) (bad) incl bound daa cmp fdivl flds adc xor push jb or (bad) decl push bswap std sbb aad cmp and push pop out ja imul sub (bad) inc ret das shl mov (bad) (bad) dec stc jbe or popf mov adc loopne (bad) lcall fisttpl dec (bad) popa pop or lods dec add sbb (bad) cmc or mov enter loopne scas mov or inc adcb in dec repz inc or lea push (bad) jmp (bad) aad push mov push scas rcr push (bad) (bad) decl add jo rcr fld ds test jecxz cmp jle popa and mov push outsl xchg (bad) pushl cld in jae jp in rol test push rclb inc mov (bad) dec xchg jo pushl sti mov sbb ljmp loopne sarl (bad) decl cld leave clc mov bound pop test lret dec xchg js addr16 ljmp clc and xchg fistp imul sbb adc jge and xor (bad) (bad) jmp jmp je inc and outsl xor sbb rclb push jle push mov (bad) (bad) (bad) jmp frstor or xchg lcall mov or and out lods sar (bad) (bad) jmp jecxz sub std or (bad) (bad) sub inc sti pop daa (bad) cs mov rcrb cmp idiv incl fs in dec cli loopne sub or icebp xchg pushl dec cmp test mov jl dec aam outsb int3 dec incl scas add (bad) cwtl jg stc cmpsl int test lret push add mov pop and ror (bad) (bad) lcall sub mov push fcomps je enter xor (bad) (bad) call and test or stos stos cmpl (bad) ljmp sbb (bad) (bad) (bad) lcall out int popf adc pusha sub jmp mov mov adc add (bad) jle jl and push mov inc (bad) (bad) (bad) fildll xchg and sbb mov cmpsb add sub mov (bad) enter dec fprem or push int pop xchg cld lock (bad) incl sbb rorb sbb mov xchg cld jg (bad) orb mov fldcw shrl test and inc jmp pop fildll call inc and and popl cmp (bad) lcall and gs pop fs aaa les adc push (bad) stos adcb pop cld (bad) (bad) ljmp data16 sbb mov adc imul inc bound add pop sbb sbb jg add inc aas movsb xchg movlhps fsubs inc xor add fwait jmp push loope cmp insb mov pop lahf pushl cwtl (bad) lcall dec les mov incl daa nop xor std sarl push mov ljmp sbb mov ds or add and stos jecxz jecxz scas enter and xchg sub je dec outsb es test sbb js pop push jge (bad) mov (bad) (bad) (bad) out scas insl mov das sub mov inc stos pop cmc icebp pop fimull outsb pop pop push sahf sbb aad outsl cmpsb icebp incl roll addr16 stos insl pusha mov fdivrs jle jmp stos xor adc ret and cld (bad) (bad) (bad) ljmp xchg xor in movsl rclb lea lds mov jmp (bad) (bad) (bad) (bad) call movsb xchg mov aam jae test adc loope inc pop sub icebp mov ss jae iret imul jl cwtl arpl repz std scas add push fsts cmp (bad) jg pop or push sbb push xor mov jae sub push lcall jp ret inc ja stos ret dec xchg imul cmc stc push or lock std add (bad) aad mov outsb jle push pop xor pop mov cld (bad) lcall test add add mov sbb jle out pcmpgtd (bad) incl in pop push sub mov fisub mov add ljmp xchg imul ret mov cmpsb lahf and mov fwait fs and (bad) incl divb sbb je rep xchg add lahf in repnz jecxz (bad) lcall mov jo inc dec xchg cmp push and xor xlat idiv (bad) (bad) (bad) fildll dec stos adc pusha es mov push (bad) ja sbb mov (bad) (bad) (bad) mov movaps sub dec sbb call dec aam xchg sub or decl push insb adc xor scas mov (bad) flds les xchg and loopne (bad) (bad) ljmp jp aam sub adc into outsl inc negb loopne mov mov cld (bad) (bad) incl pop cmpsb imul cmp and xchg test into jae sahf sub add and shrb (bad) sub fbld clc les (bad) inc shlb mov stc lahf dec or (bad) (bad) dec out xor mov push fwait test xchg pop jl mov cli jno sbb cld push push jbe (bad) call cs std sub sti and cwtl test lock (bad) sti mov jle cmpsl inc inc sahf jo mov mov jbe test aaa enter in cmp push xlat jle nop sbb (bad) imul pop mov (bad) add stc imul (bad) (bad) (bad) (bad) jmp lods mov fistp xorb cmovle or imul notb add jmp cmp xchg cwtl jmp enter jnp jp scas popa jp jns (bad) ljmp rcl data16 xchg xchg and (bad) inc std (bad) mov sub hlt (bad) mov imul push mov jne sti sub jmp (bad) cmp xor lcall push pop pop inc out cmpsb popf lods fsubr insl jns xor add (bad) call std imulb sahf lret push das mov sbbl add imul pop test push gs dec nop lock pop fwait inc loope or icebp repnz repnz cmc mov cmp xchg (bad) push pop movsb dec mov and xor add (bad) (bad) ljmp clc mov mov int or lock and adc (bad) and adc xchg (bad) (bad) ljmp ret ficoml sarb (bad) repnz fcom pop insl adc popa mov pop (bad) (bad) (bad) (bad) fisub imul test and data16 pop ja cmp (bad) (bad) mov lahf pop sub push js imul outsl scas repz jg inc xchg cmpl add xchg imul sbb int adc push xor ljmp cmc hlt rcr lret and cmp mov int3 stos and fdivp pop or (bad) (bad) (bad) (bad) fcmovnb dec jmp ror mov dec les pop sub orl (bad) (bad) (bad) incl sbb mov rclb pop add add jae outsl and sub jl stc jb mov (bad) cmp jbe add imul (bad) incl or (bad) (bad) xchg xlat cli shrb insb pop testb push mov xor push sub sarl jg into pop aaa std ja mov sbb pop lea (bad) adc mov (bad) add pushl popf fbld cld cmp repnz mov fldl (bad) incl ret (bad) cmc push sub pop xor sbb push gs pusha (bad) (bad) (bad) (bad) incl mov pop subl cmc sub xchg mov pop jl sbb inc xor repnz clc (bad) ljmp clc cmpsl add sub pop scas fadds and cmp (bad) incb jmp push xchg or shll mov clc into inc mov pushf sbb (bad) mov pushf sbb sub mov sbb gs jae clc fidiv xlat out jo (bad) (bad) (bad) (bad) sub loop imul je cltd or lret aad shlb dec sbb (bad) lea mov cmc pop xor incl push mov jmp add stos je das dec inc (bad) mov push leave subl cli incl clc shlb and pusha (bad) pop std (bad) (bad) incl pop popf aad mov adc jae (bad) data16 cmpsl mov adc pop and pop mov dec in adc imul adc clc (bad) (bad) cmp sbb loopne pop push enter adc jns movsl inc std outsb les adc jg inc fisubr aas or loopne add inc mov (bad) inc or ljmp pop sub sbb cmp xchg cmpsl sbbb sub xor out pop and leave (bad) cmp adc xchg hlt rcrl (bad) (bad) ljmp cmp adc lret dec (bad) stos push xorb (bad) (bad) call ret ja mov fmuls inc lds lods imul inc scas ss pushl xor jne mov push hlt inc dec mov sub cmp (bad) (bad) call nop (bad) cmp nop pushf dec cmp stos push cmpsb cmp xor or mov mov and icebp sbb sbb jbe imul cmc cltd adc add push dec sti inc test call push (bad) (bad) ljmp cwtl xchg xchg push pop or pop inc lahf incb cwtl ffreep (bad) repz iret enter and (bad) (bad) dec adc mov and imul sbb (bad) addr16 or cmp adc ljmp mov dec lock (bad) lock in movsl roll inc xchg mov mov ljmp adc popf std arpl (bad) jne and int3 pop outsl mov test daa (bad) (bad) lcall or or jno mov xchg out push mov xchg loop (bad) fwait clc (bad) (bad) jmp push cmc lret rcll ljmp (bad) (bad) incl call and fnstsw mov cmpsl pop jno xchg lock or mov pushf adc dec sub jg mov int3 cs (bad) (bad) ljmp loope,pn xchg jmp add and add daa es pop lods cmpsb pop (bad) (bad) (bad) jmp jmp sbb dec cmpsb xchg cs mov dec sub aam sbb (bad) decl ljmp fs test outsb fidiv cs (bad) fildll sub nop mov fidiv icebp inc cvtdq2ps and (bad) call fiaddl (bad) mov pop stos (bad) jp mov adc out add int3 movsl cmp (bad) (bad) inc push fisubr sarb xor shrl into addr16 sub fbld and xchg in push pop movsb mov loope loopne bound or frstor jne icebp or mov dec cwtl mov std inc adc and mov jns movsb dec dec and loopne mov cmpsl fdivrs shll icebp nop sub adc pop data16 pop int3 inc mov mov dec inc hlt arpl popf push ds and (bad) (bad) movsb (bad) and sbbl sbb (bad) (bad) ror mov mov cmovns xchg (bad) (bad) incl cmpsb (bad) cmc cmp scas mov push lods (bad) mov dec xchg stos xor pop (bad) ljmp sar push cmpsb xchg call jnp mov mov jl fiadd (bad) (bad) (bad) inc test scas xor ss sbb rolb mov mov outsb sub adc cmc xchg (bad) (bad) (bad) jmp fistpll out xchg popa add xchg inc inc aad div pop jno aas inc pop jno (bad) (bad) (bad) jmp xor (bad) insl das outsl dec inc jo mov pmaxsw ficom lahf (bad) negb sahf add (bad) (bad) inc mov cmp dec stos les cmc mov xchg lret inc or push jae imul (bad) incl sbb mov inc mov jne hlt add adc push fmul call add pushf or mov imul imul push lock push outsl repnz loope xchg xchg mov lss pop cmp ljmp mul mov ja cmp add push adc add xor (bad) (bad) lcall mov addr16 xchg push push push fcmove lock jp bound ljmp lods xor cmpsl aam mov sub lret mov std dec mov ja cmpsb bnd in insl call xor add loopne (bad) (bad) (bad) incl aad cmp insl popa cmp mov in push pop cli inc imul jle (bad) (bad) (bad) decl inc sbb and pop jmp xor sbb ja (bad) (bad) (bad) lcall cltd imul sbb sbb lods push and mov mov fisttpl (bad) or es xchg stc leave mov mov inc hlt call std incl dec cmp sub mov sub and ret in xchg xor push dec mov jno ja xchg (bad) (bad) pushl or push jecxz push sbb push pop xchg mov test adc stos lcall (bad) mov mov out ds data16 xchg add push cli (bad) (bad) jmp mov enter pop sub adc orl lcall loope or mov stos sub lahf push pop daa mov fdivs (bad) (bad) (bad) (bad) std movsb daa mov std push jmp in subl js mov icebp das jae sbb cwtl (bad) (bad) (bad) (bad) jns out sub xchg ret popa clc sti outsl inc je jns (bad) sub sub add push jno jg (bad) call stos imul je push (bad) adc scas cmc fild inc xor dec xchg (bad) scas (bad) test enter out push mov dec andl adc sti or cld sub das xchg das cmp mov and (bad) (bad) inc mov add ja push jno adc scas mov jo scas gs (bad) (bad) (bad) ljmp mov pop dec stos jp push lock mov in push out mov aad mov push clc (bad) mov imul sbb add (bad) ljmp inc icebp call jg cltd mov lea push call popf inc (bad) add (bad) push aad testb (bad) xor insl pusha imul jle inc adc xor cmpsb (bad) jbe decl lock mov repz mov dec mov pop jns push rcr (bad) (bad) mov sbb inc xchg and pop scas cmc mov pop ds gs call cld in test add or hlt stos leave les stc rcrb pop (bad) mov inc adc push mov ljmp sar (bad) incl xchg inc in arpl sub ljmp xor rcll das cli ljmp test or jmp enter pop jbe test push fdivr lods test int es jge push jnp mov das (bad) jb outsl cli (bad) decl mov clc cmp bound and in sbb mov (bad) (bad) (bad) cmp xchg cmp scas std xor lret jne sbb mov bound out in in aaa (bad) (bad) (bad) fcomip xchg repnz mov (bad) div (bad) (bad) iret or and popa mov pop lahf or jle pop xlat push loop or rorb push jle es mov or nop scas arpl cmp es imul out ret dec cwtl sub push imul repz inc adc jecxz rol (bad) (bad) call test lret fmuls fwait pop repz fsubrp stos mov add inc (bad) (bad) (bad) jg push shrl inc ficom and movsl test push inc jb inc pop (bad) ljmp clc xchg dec (bad) ss mov adc ret mov mov adcl jecxz loopne fildll adc ret repz push push pop sti sub (bad) (bad) pushl mov (bad) fbld aam aad adc xor arpl add outsb rcrb or pop mov lret xor (bad) (bad) incl xchg mov mov int3 xchg aad jge call jb mov loopne clc mov std sub mov (bad) (bad) ljmp leave sbbl xchg cltd call push imul cmp ret incb sub add jne inc out mov imul jl (bad) dec mov mov lret xor push fstpt inc sub push imul and push add sar pop sbb adc mov lods popa dec sbb adc (bad) xchg test ljmp push and cmp cmp jmp (bad) call je mov sbb and (bad) fist mov or je cwtl push clc decl jmp add das sbb push (bad) out insb sbb ss jb mov ss lods xor pop (bad) (bad) (bad) incl repz mov sub aas sub push mov pop cwtl xor addl js mov adc lret xchg sbb add dec icebp test jns xor popl call mov (bad) (bad) jmp int3 pop mov aas dec pop pushf jae decb add xchg add gs cmp mov ja jmp lods jns hlt adc (bad) addr16 insb sar adc (bad) (bad) jmp xor sbb sahf das aaa mov in xor inc mov mov es sbb leave nop push push call clc ds dec repnz inc aas cmp ljmp sar dec or or dec mov aam or mov ret out loope mov scas out xchg cmp loop cmp sub (bad) (bad) (bad) in mov and call pop scas sahf out mov push xchg push jae mov (bad) jmp out pop loop add outsb divl push mov cmc dec outsb and (bad) insb fnstenv push test adcl xor scas dec jbe sahf or int3 rclb jle ret (bad) call les ss imulb sbb sbbb in fdivr popf cltd pop mov mov (bad) (bad) (bad) jl in mov and ds push daa jle mov push pop jecxz (bad) incl sti sbb xor add nop std sbb mov pop or fnsave movl insb nop mov xchg mov mov or jecxz adc push repnz rolb (bad) (bad) (bad) cmp lahf cs jl ss std insb (bad) xor iret sahf (bad) dec fildll mov outsl (bad) (bad) (bad) ljmp lea out push std adc rcrl rcrl ds lea or xchg mov adc push mov push sbb cs mov inc rorb std inc xor cmp jae shlb sub mov fbld inc jns out xor xor xor sub (bad) pop outsl in push sbb repz fnstcw push pop je call out dec into dec adc mov sbb xor jae jne ficomp pushl jge (bad) and jl push divb or repnz dec or aam notb (bad) incl (bad) mov mov mov push pop roll or xlat lret in jge jl xchg or pop or das sub and mov std fsubrp add jg and nop daa in gs mov repnz sbb cmc cli (bad) (bad) decl ret andl fldcw xor aam loopne repnz add (bad) out pushf jns (bad) ja movl mov mov add popa scas adc push jmp (bad) in popf jg int (bad) (bad) cmp jmp lock fidivr pusha jl insb inc add cld daa (bad) (bad) decl lods faddl (bad) je mov jge pop add scas imul mov adc (bad) imul pusha (bad) (bad) (bad) jg stos sub negl jo lret mov es aas and jmp xor outsl adc call xor cmc dec test in stc (bad) ja rcl sbb incl cld mov pop push jmp inc xorb inc jno jg test incl fsubrl ja jle out pusha sbb sbb xor cltd les ret stc decl clc (bad) (bad) mov cld cmp (bad) sbb test shll or (bad) (bad) incl lret into or imul ja and lret or (bad) lcall mov stos sarl xchg fnstenv imul mov mov (bad) or (bad) dec outsl arpl xor inc sbb (bad) mov adc int cld add into adc push xchg sub jg add mov fstps cmp (bad) mov push mov loope rorb cmpsb or xchg mov stos pop push lret add sub pushf push daa jae cmp fist sti ss scas jp and cmpsb imul hlt sbb call mov (bad) xchg in inc fiaddl or mov hlt ja hlt pop loopne cmp (bad) ljmp sbb and push pop jecxz or xor xor (bad) xor inc lcall fstps xchg icebp jg mov in dec pop cmp add jmp push ja (bad) (bad) out jb rcrb add outsl popa cld gs mov cs (bad) (bad) (bad) jmp mov sbb mov scas cmp mov ss sbbl les or ss icebp add (bad) (bad) (bad) call inc jecxz sbb push push scas jmp xchg rorb sti push dec loopne pop imul pusha sbb fistp mov (bad) (bad) (bad) inc mov fcoml pushfw xchg (bad) or incb jmp ljmp mov rorb enter and cmpsb mov fcmovne inc xchg (bad) (bad) (bad) decl xor out add fs push adc cmpsl out mov (bad) (bad) (bad) dec or mov pop adc mov pop mov push cltd ret jp stos jl add orl or negl insl jbe lock stos movsb out (bad) lcall or daa jg jne dec into data16 leave (bad) (bad) jmp or xor in (bad) (bad) push popa cwtl stos loop (bad) pop xchg sarl inc adc pop sbb and and notl out pop and clc stc addr16 (bad) (bad) (bad) (bad) jg or negb jg icebp pop and cld scas lret fwait xor xlat and stos (bad) ljmp xchg and jp xchg rcll ss add (bad) (bad) mov xchg je xchg mov cmc lcall scas insb in push xchg mov jle (bad) (bad) (bad) incl sub mov mov dec negb adc pop adc xchg push scas fadds mov out (bad) (bad) (bad) (bad) call inc out adc ret (bad) stos cli mov mov pop (bad) dec push pushf mov movsb movsb push pusha mov loop jge stos jbe mov push (bad) ljmp cmp mov jae pop orl pop or loop outsb (bad) (bad) mov inc insb jmp pop mov and dec dec in std xor (bad) call mov cmpsb inc sbb push test cwtl mov out dec sub (bad) call add push call adc das sti pop outsb sbb (bad) lcall adc fistl sarl or clc and push aad (bad) (bad) (bad) jmp dec pmulhuw jne xlat or aaa sbb inc popa adc outsb pop imul std jae dec mov out mov dec int3 add push (bad) (bad) (bad) (bad) mov dec mov stos or arpl loopne rorl dec jp test addl int3 aas jge mov jbe pop aam jno je sbb (bad) dec aam or (bad) pushl sub pop sbb push loope fldt cmp movsl inc ja mov cmpsl mov insb int lea adc (bad) (bad) (bad) decl mov (bad) loope idivl cmp xchg dec (bad) aad jl mov sar jge sbb dec ret jecxz lret test mov mov mov mov sbb test xlat push mov mov das cli aaa xchg jbe sti repnz in cli (bad) (bad) decl sub (bad) shr sbb test movsl xchg fsubrs (bad) (bad) lcall aaa mov xchg sbb mov ror or insl scas popf jmp bnd lcall (bad) jle xchg add (bad) shll mov mov in push shrl pop (bad) (bad) (bad) jmp or sub pusha test mov aas test aaa cmp dec rclb (bad) ljmp cmp inc mov pop loopne hlt mov xor and or int3 mov mov repnz jo scas scas mov pop int xchg int3 cwtl xor adc push outsb call call push mov or dec xor inc sbb (bad) (bad) (bad) clc jecxz dec jbe sti cmpsl imul in (bad) pop test inc cmc inc inc push (bad) cmc (bad) (bad) ljmp stos push or insl mov insb inc out mov int (bad) (bad) fist xchg ret loop and imul ljmp fsub dec repnz sub push mov (bad) mov pop (bad) ds jbe int3 (bad) (bad) (bad) (bad) cmp dec (bad) adc ss into mov cmp push sub inc imul pop stc xor (bad) in jae out pusha in mov adc (bad) (bad) mov or cmc inc jl jae lods mov push outsb movsb (bad) mov adc mov dec add pop cmpsb in inc int3 jno mov (bad) (bad) jg push cmp std push dec adc outsl mov jbe dec or (bad) sub (bad) fildll std and jecxz sub xor outsl clc lcall out push dec rolb dec pop mov or mov sub (bad) jg cs daa mov hlt sbb dec jp xor jecxz ljmp clc (bad) (bad) incl adc cwtl dec and shll dec jne xlat out pop call lret subl (bad) (bad) pushl int3 clc mov (bad) ja scas leave and xor cltd xchg les adc mov dec popf (bad) mov sub addr16 lds pop clc xor xor loope pop mov clc xchg push int test inc aas sbb flds int3 mov or sarl (bad) sbb pop pop pop push iret int lock pop loopne fmull out jecxz xor (bad) (bad) (bad) lcall movsb sub adc jge mov xor lods mov das loopne negb cmp das pop jnp std (bad) (bad) pushl dec sub adc mov movsl repz cmpsl mov inc jnp inc lret inc mov push in (bad) (bad) mov pop fsubl and and jne adc je xor cld (bad) dec les mov ljmp push mov jb cmp (bad) (bad) (bad) pushl dec ret add cwtl pop mov rolb mov pop cmc negb or pushl les push sub and iret imul aam pushl push aaa adc popf scas mov xor sub inc arpl mov (bad) xor pop orb lcall mov or (bad) dec mov ret out leave pop or test jae lret das mov shl lret andb (bad) lcall mov and adc loope xor pushf jl dec pushf push lahf shrl idiv jg ljmp scas ret cmp dec mov jecxz and fdivl and pop cld rol (bad) ljmp mov pop sbb and dec mov mov pop jnp xor dec (bad) (bad) jmp insb push dec push jnp outsl push cli iret inc (bad) adc mov stc lret nop (bad) (bad) (bad) push sbb sti xor arpl mov in cmpsb xor icebp sbb sub notl lahf enter mov in push add pop xor addr16 ja mov pushl std inc sub lahf repz pop cmp (bad) aam lea loop (bad) cmc mov mov (bad) (bad) ljmp test ret cmp jle jb sarl sub jns int mov xchg sub movsb lock (bad) (bad) call je xlat clc pop jae nop xlat fmulp push dec clc fimull sub or test or lods (bad) mov cli jge cmp scas xor out pusha movsl and mov jae daa mov mov pop cmp cmp xor sbb out xchg ljmp popa jl cmp aad xor aas jno xorl (bad) lcall xchg jae xchg dec adc imull les jno lds jmp call push repnz shll pop jnp push sub xlat xchg (bad) (bad) ljmp pop outsb jmp fsubp lods inc sti icebp movsl mov mov lods stos cli stos in and pop cmp out rcrl decl test mov scas xchg xchg inc std (bad) (bad) dec in xchg mov mov outsb cmp pop sub pop inc ret mov subl fildll adc and fbld out pop cmp int sbb cmp mov add popf xchg incl lret ja mov std add popl std adc shr mov lods push (bad) (bad) (bad) incl outsl dec pop inc mov sub cmp xchg test (bad) jno scas jmp push sub dec cmp loopne insb adc sbb (bad) cmp mov sub mov xchg xchg (bad) out clc cmp jns shll outsb ret das cmp mov cli incl or repnz andl imul (bad) incl stos inc clc je fldt jp pop std (bad) stos lahf stc sub inc adc sbb inc mov test fs xor dec add sub mov lcall loop mov in adc shll clc cmp mov scas (bad) (bad) call jl sbb dec arpl pop or test (bad) (bad) (bad) lcall sahf je adc daa mov jns push ss idiv pop (bad) jmp dec push ds mov mov mov xor scas sbb sbb (bad) (bad) (bad) jmp pop addb sets aaa cmp ror in popa aad mov or sbb and inc push (bad) mov fcoms int3 pinsrw orb js dec jae into push push and icebp aaa pop cmp repnz js mov bound sbb je sbb (bad) (bad) sbb pop inc in movsb dec dec mov or enter fs (bad) (bad) fbstp mov jnp cmpsl push add fimul ret xchg adc ljmp pop mov inc xor adc rcl adc sub cld pop xchg adc int icebp jae jg,pn mov sbb (bad) (bad) lcall fs insl fwait mov add or add push push insb push mov (bad) (bad) decl ret pop jne push and mov fmull mov jnp cltd outsb scas jge stc push jecxz (bad) fcomip int3 in fstpl mov test adc inc jno lods lcall add (bad) (bad) incl sub push inc mov ret test push imull inc inc jae push stos (bad) (bad) (bad) call inc add push fcmovb lds lea lret sub mov data16 clc (bad) jl cmp xchg movsl or mov (bad) (bad) pushl je push jmp fildl adc or (bad) and mov pop jns (bad) (bad) (bad) call clc inc loop jmp jge adc out or out dec push pop mov sub inc imul jg cld fisubr or scas jnp rcrb and cmp ljmp clc cmovae dec mov ret mov mov mov and add sbb pushf cmpsl push dec mov jns repnz std pusha pop ss (bad) (bad) (bad) ljmp and shrb addr16 push je pusha and inc mov xchg movsb rolb arpl mov call loopne cmp xchg (bad) jae rorb inc popa ffreep mov jmp mov (bad) (bad) lcall scas mov mov cltd jbe in lods (bad) xor jecxz and and imul jo (bad) jmp adc adcb dec xor fcoms inc fsubl add add (bad) out in inc cs pop das mov sahf cmp pop icebp ljmp cmp mov push sarb sub or lods inc int test ds xlat imul fdivr (bad) cmc ljmp or push hlt fldt push or pop stc xchg (bad) pushl mov inc clc sbb test jno flds dec xlat jmp push xchg mov ja pop xchg pop stos dec dec bound jmp cmpsl arpl jbe sti and sahf call fdivr mov mov dec movsb cmp cs (bad) (bad) jmp sub (bad) mov sub sbb xchg cli ljmp sbb test push mov sub out cmpsl pop dec or adc sar (bad) (bad) lcall xchg pop lahf (bad) repz call fcompl lahf pop fstpl data16 in js std (bad) jg pop jg cli mov (bad) iret cmpl or (bad) call shlb (bad) subl and mov and mov xacquire decl int test dec js lcall ret jge inc cmp sar (bad) call xchg cli sbb push jae int3 (bad) cmp dec inc ss cmp pop mov sub (bad) (bad) jg imul inc xor fwait xchg mov mov (bad) sbb xchg repnz dec inc cli bound (bad) (bad) (bad) sti lret mov dec or sbb and jb fldcw loop xchg repnz (bad) (bad) lcall fsubrl inc mov and jnp cs xchg sbb mov (bad) (bad) pushl push (bad) ja dec pop (bad) out mov lods pop mov (bad) inc fs loope push mov (bad) (bad) (bad) ljmp scas aaa pmullw ss dec ja (bad) xlat cs adc add (bad) lods sub iret leave aam ja cli fwait adc mov push nop and or (bad) ljmp clc mov test mov test int clc inc jnp adc inc outsl das sar add jle pusha outsb jmp jne out in add mov (bad) (bad) (bad) decl sub je inc xchg xlat xor xchg int dec popf mov loop cwtl and clc jmp andl outsl jno lea jnp inc pop mov mov pop jnp mov (bad) mov (bad) int sub (bad) (bad) (bad) call movsl leave cmp inc cmpsl gs aam scas loop mov es (bad) and out fcomip (bad) lcall addl daa mov inc cmp pop adc mov pop js clc cmpl int3 and xchg movsl xor pushf (bad) ja gs ljmp fsub out sti sub in inc sbb pop fldcw clc pop sub (bad) aaa add popa or inc adc mov sbb scas jne icebp stos lahf jno cmp cmpsl jns sti (bad) (bad) call jno ss pop dec in loope dec insl cmp shrl sub add jg nop pusha scas leave adc or mov arpl jg (bad) jmp jg popf lahf or mov jae (bad) out fnop dec (bad) in mov pop mov ss in xor (bad) shrb (bad) (bad) call incl jecxz int3 and popa js mov cmpsb push adc pop and (bad) (bad) mov outsb or aas push xchg popf lret lds (bad) aas aam sti scas (bad) lock in inc pop push rcrb (bad) (bad) (bad) jg daa lret daa dec mov adcl pop sbbl (bad) hlt mov (bad) fnop pop aas mov in (bad) jne lods sbb popf pop or pop data16 jbe and cmc jp in mov out inc xchg mov push enter pmaxub inc or (bad) push xchg mov add or (bad) (bad) lcall into pop xchg jl inc xchg orb or cltd pop psubusb pop mov mov fwait mull xchg adc push popf (bad) cld sub mov jo or (bad) (bad) decl je repnz jg sbb (bad) dec into (bad) pop cmc jns xchg cld popaw inc (bad) fcomps (bad) (bad) (bad) inc loope xchg cmpb mov mov inc js call push fs and push pushl mov and into add (bad) ljmp cmpsb lret sub fwait cmp mov push push (bad) into push fnstsw mov cmp dec fistp push std sbb mov add jge and dec or lahf popa and mov sub ret sbb (bad) (bad) pushl push inc fdivr or fcompl sub insl imul loop add fs hlt bound pushl mov adc pusha adc loope je xchg mov jl (bad) (bad) (bad) ljmp rcl cltd cli sub mov pop cmp pop cld mov pop outsl cmp int3 test dec test cmp mov sub xchg or adc in mov (bad) decl dec lea mov mov cmp sarb push push jle sub std (bad) (bad) jmp (bad) mov hlt les xor mov (bad) adc jae and xchg std push fs icebp das sarb cmpsl cld sub cmp mov imul (bad) mov push pop inc xor dec in pop fsubrs (bad) push or (bad) mov lret cmpsb sbb lock (bad) call lods (bad) leave lret stc movaps mov pop mulps mov mov addr16 (bad) (bad) fildll sahf arpl mov xor xor dec sti or (bad) js jg dec imul pushf cld inc clc clc (bad) (bad) lcall sub ds dec inc sbb bound data16 push add inc cmp sti test and adc (bad) (bad) (bad) mov and and fsincos cli enter xchg push add xor fsubrl sbb or adc (bad) jmp cmp imul loopne sub lret inc dec cmpsl mov ret pop mov pop inc sarb sti (bad) lock (bad) (bad) (bad) call jb cwtl aas mov (bad) insl negl lea gs dec aaa cmp imul lods lahf add push loope cmpsl call mov fcomip into dec (bad) (bad) (bad) ljmp add in hlt lret pop pusha stos (bad) lods dec mov jo lock mov pushf cli sbb mov cmp mov push add leave sbb (bad) aad andb das xor (bad) jmp xchg and xlat arpl push pushf xlat sbb mov push (bad) (bad) ljmp cmp pop add je pusha adc dec xlat std mov call add xchg push je ljmp out dec push push sub adc scas jmp inc mov test push movsb adc addr16 pop pop mov mov jmp cmp pop jbe push inc clc mov loope (bad) mov es (bad) (bad) (bad) stc leave in or sbb mov inc (bad) or pushf es enter jmp outsl inc sbb or daa pusha inc jne mov rcrb sub push jb or (bad) incl and lcall leave inc pop sbb les mov cli popf push (bad) xchg mov xor icebp (bad) (bad) (bad) ljmp pushf mov xorb cmp (bad) aaa sub push sbb sbb fstpt sahf mov pop mov push repnz mov gs mov push outsl sahf xor ljmp adc mov pop add adc sub mov cld pop xor int3 addr16 test lcall pop xchg rcll les add adc mov jbe (bad) inc sbb mov add mov fwait xorb mov cli sbb loop outsl jp ds scas scas push sub fxch mov (bad) jmp lea adc pushf call xchg push or cld scas mov gs jnp fnop fcomip (bad) jg add pop lock add cmpsl fsts fisubrl aaa rol adc sarb pop dec mov push adc mov out sbb int3 jno clc push and mov jb lods (bad) ljmp je and push inc mov aaa test cwtl xor (bad) stos call inc hlt jnp bound jl movsb pop (bad) (bad) call pusha mov ljmp mov test loopne mov (bad) (bad) (bad) incl jg adc fildll into les push sbb (bad) cmp mov lret rolb fcomip (bad) lcall xchg pop xchg repz xor add mov (bad) lcall mov jae adcb stos push pop int3 fisttpl test push mov or (bad) (bad) (bad) fcomip push inc adc jbe pusha idiv mov jnp cmp (bad) mov dec xor out fbld pushl dec add sub inc arpl jnp jne sbb (bad) (bad) lcall jmp fistpl decl out xchg lahf inc sbb push aam xor movb shll decl cmp dec addr16 pop scas inc push sti insl dec mov lds js push pop push popf call (bad) mov in and repz aad mov or ret loopne (bad) (bad) (bad) lcall (bad) mov or sarb popa sbb mov mov (bad) imul cmp xchg insb dec stc (bad) push adc loope pop xor imul in push sbb mov and (bad) (bad) inc rcll or bound mov mov out mov or xchg inc hlt movsl (bad) (bad) (bad) jmp (bad) lea test pop fwait xchg mov adc popa xchg ret ljmp repnz xchg xor es sub ljmp or xchg repnz faddl ljmp stos dec mov sub xor or bound inc clc pop xchg fs adc inc cmp pop fisubr cmp jp or dec std xorl (bad) call pop xchg cmp rorb or cmp lcall js jmp push xlat mov fmulp sub xchg popl push clc xor inc lock push pushl lods inc jb (bad) clc jl (bad) mov cmpsb dec scas fdivrs and inc (bad) mov (bad) (bad) (bad) incl data16 icebp mov mov nop cmp (bad) cltd pop jne imul imul call jb es push sub inc pop lcall pop mov stos sbb in or stos (bad) imul je insb mov aaa loop stc or xchg int cmp inc cmp mov pushl imul lret ror scas test inc pop popa cmc (bad) xor (bad) (bad) (bad) (bad) jmp inc mov mov xor addb mov cmp jg jecxz sbb test (bad) (bad) (bad) call loope insl jns or dec out (bad) cmp and icebp in sub fdivr out cli (bad) cmp leave ja imul cwtl jle adc mov outsl mov and adc addr16 mov rcrb push mov rclb int3 pop cmp jbe inc gs cmpsl ljmp sub (bad) (bad) (bad) jle out mov movsl inc cmpl testl aas cli mov incl cld adc xchg in push lret mov dec loope (bad) xlat (bad) (bad) (bad) jmp jmp cli stos (bad) push cmpsb push stos cld jne lock dec lcall push mov call lret xor adc jle jo add (bad) (bad) decl add test xchg int3 mov add dec movsb adcb mov push lcall dec pushf mov dec add xor sbb mov mov aam adc xchg insl leave into xchg xor xor add (bad) jg (bad) or adc sub out pop dec xor pop shlb (bad) (bad) ljmp dec ret dec inc out mov cli xchg or lds pop or sbb pop divb push in (bad) (bad) (bad) (bad) adc popf stos (bad) fwait inc mov jnp enter test or outsl nop ljmp cli ret push (bad) and jmp call jg mov int loope repnz cwtl test push dec icebp ffree (bad) (bad) mov mov (bad) jmp jae dec dec and addl add pushl xchg loop add lods lahf jl inc adc or pushl xchg stos loope dec inc cmpsb cmp adc js pop cmp cmpsb (bad) outsb insl (bad) mov sub fsubp and dec and ret mov inc in enter incl pusha lock lahf pop shll mov into inc (bad) sbb movsl mov aad test push jmp icebp (bad) (bad) (bad) ljmp xlat mov stc jne pusha dec dec out cmc js mov push int dec cmp lds jmp cmp clc lcall pushf mov int3 repz int3 testb (bad) (bad) (bad) cmp clc sarl movsl aam scas jnp and mov inc loop (bad) push pop fwait mov sbb cmpsl and mov (bad) ljmp int mov out fistl in movsb (bad) jle in push adc cs (bad) (bad) dec stc sar xchg ret mov jae mov int fsubr pop xor mov lods pop push call (bad) (bad) (bad) (bad) stc xchg and pop cmp jo (bad) push or sbb mov xchg sbb cmp inc mov push dec rcr pushf xor (bad) shrb aaa sbb or jo dec add sub jns xlat rcll std pop mov jns dec outsb test (bad) iret pop loopne decl js js ja lret mov cltd jne mov cmc in call out xchg push push jmp or popf xchg jo sar fstps incl lods (bad) aam mov out clc mov inc aaa pushf xchg test adc pop dec (bad) (bad) mov mov scas mov add jo je pop mov ret inc inc jb (bad) (bad) (bad) (bad) mov pop and add mov xchg push and data16 dec xorl insw jbe les (bad) (bad) (bad) lcall fdivs shlb adc add mov aad push cmp test (bad) (bad) (bad) call sahf es dec out xchg pop dec inc jb mov jmp fstpt jnp fsub fldcw (bad) jg xchg mov bound fistpll test cmc xor (bad) (bad) (bad) (bad) inc insl es pop cmp call aam ljmp pop mov dec movsl rcrl lock cmp add movsl (bad) and add jp test push add fimull pop js scas push adc (bad) (bad) ljmp imul out mov jno or outsb outsl scas jnp sub fldenv fisub notb cli jg cmp out or incl sub lcall and dec xchg push or push arpl test dec decb fidivr ljmp out into mov mov sbb das lcall mov fiaddl (bad) (bad) ljmp push std xor std sbb push out mov nop and cmp sar or push mov lcall mov decl stos add inc adc inc mov repnz jl pop insl insb (bad) (bad) (bad) pushl pop rcr cmp lahf idivb in insb sarl cs rolb dec push out (bad) (bad) (bad) ljmp in mov adc in pop mov leave int3 dec adc stos pop ja and call std (bad) (bad) jmp jo push cmp pop xchg pushf loopne dec enter imul xchg (bad) pushl mov clc mov push mov ret out testl (bad) incl cld inc data16 pop jo and fs push pop cli (bad) (bad) (bad) cmp inc jl imul dec mov inc sar (bad) or mov pushl sub lret xlat aaa add fsubl cmp ja (bad) fcmovb (bad) (bad) call nop xor xchg lds xchg call dec push movsb jno shl mov insb addr16 mov mov hlt out in sub (bad) (bad) mov and rorb inc nop arpl mov daa sub jmp push (bad) (bad) ljmp (bad) cwtl xor sbb std lret int mov dec rcrl arpl sahf pop insl cli leave iret jns adc ror cmp das addr16 in dec stos xor inc cmc (bad) (bad) incl cmp or imull sbb sbb std call cmp fisubrl or cs add (bad) call jbe mov xor sbb cwtl sbb jns pop mov (bad) (bad) (bad) jl and js lret adc int jle mov jl enter mov das (bad) (bad) (bad) ljmp cld insl negl out add outsb mov (bad) jo pop data16 das ret shr pop inc fstp divl push (bad) (bad) fnstcw mov mov pop mov mov mov mov pop dec inc fcmovnu les cs (bad) (bad) decl dec fcoms sbb jmp lret loop rclb int push (bad) ret cli (bad) cmp mov cltd inc aad sub and clc call dec test lret aaa js (bad) (bad) int mov ret jp loop add lcall ds adc imul mov (bad) (bad) mov icebp sub nop rcll es jae xor cli std fldenv xor insl mov push cmpb (bad) dec out sub iret call cmp (bad) mov test repnz mov add out clc adc data16 cmpsl or cli inc paddd (bad) incl bound or scas or sub rcrb clc (bad) pop and decl fcomps pop jg ljmp mov cmp cmc in fildll adc inc mov fs mov (bad) (bad) mov out testl mov stos mov jge lock mov (bad) (bad) decl ficomp lcall es dec out mov cli loope cld int3 movsb xor add (bad) fildll das (bad) push xchg xlat (bad) lcall cmpsl nop iret in call out rcrb pop (bad) dec sbb xchg roll decl mov mov mov jecxz pop or pop in shr dec sahf imul (bad) mov adc cmp (bad) notb movsl lahf fisubr mov int mov push mov pop stos loop ss xchg jbe gs pushl cmp je xchg sbb lock in cwtl (bad) (bad) (bad) jg nop and movsb repnz inc push mov pop push cmp mov cmc nop (bad) mov inc mov mov call popf jp jne (bad) (bad) (bad) (bad) cmp push dec jge xchg pop andl in cmp call mov push int3 fdivr (bad) mov (bad) (bad) mov jle mov or push rorl aaa cld sub jmp inc adc addl cld dec (bad) push repz mov xor mov dec or and (bad) (bad) (bad) call mov sti arpl mov jle push sub jp pop sahf mov cld or enter lret cmpsl (bad) (bad) (bad) lcall sbb inc pop mov xor imul lds test cmp sub (bad) (bad) call std or mov ret mul iret add inc pop jl pop inc pop xchg sub fmuls out cwtl push xchg sbb incl cld ds pop ljmp aas adc pop out clc (bad) fistp enter xor and in mov adc push pop push sub loop cmpsb ret mov js lods pop push stos fs (bad) (bad) lcall mov dec outsl rcr (bad) fild mov cmpsl (bad) je fimul ds jecxz inc (bad) mov jno dec and or daa pop scas lret (bad) xor jp cli sbb pushl aad inc adc and pop sub or into dec fildll out (bad) cmc pop mov pop std add in push or sub xor cmp (bad) mov and sti pop lahf sub jp mov push xchg outsb arpl xor add mov xor pop jge (bad) (bad) (bad) (bad) ds lods sub push jp nop mov cmp addb push aaa push and (bad) (bad) ljmp inc inc loopne mov push add negl ja xchg sub inc in dec lock mov sbbl dec lods jnp xchg jge sbb lea lock addr16 scas mov cli movsb inc push lock incl ljmp test out sti mov js jmp lods mov cmp cli xchg fs mov cltd pop or adc or (bad) and jp ljmp (bad) (bad) (bad) ljmp add lods shr add push repnz icebp xchg sarl cld jo scas (bad) fcomip jmp dec inc and (bad) insb in fdivl and cmova lods (bad) sbb (bad) ds int3 test (bad) or jecxz add daa in lea jbe (bad) (bad) pushl icebp and jo sahf add adc popf xor mov push popf xchg and (bad) in pushl out lock push lret lock dec dec mov sbb (bad) (bad) jmp xchg xor jne fnstcw push mov mov inc cmp pop or jg or mov int sub jge jno ljmp clc jmp jl (bad) lock pop mov js mov in and (bad) (bad) (bad) (bad) mov pop push imul popa aas or push aam dec xchg xchg daa popa cmpsl (bad) (bad) popa clc (bad) (bad) (bad) (bad) clc push adc jne cld (bad) lock lret nop addl dec jecxz movsl push mov xlat cs (bad) (bad) (bad) (bad) call lds sub mov xchg (bad) pop xor mov xor mov pop fnsave cmpsl gs sbb sbb dec push pop sbb dec div xor insl xchg or and dec push pop push les mov xor inc hlt pop stos out mov cmpsb lcall mov iret das rol js sbb jg loopne pop sub mov mov (bad) int3 add pushl mov lods clc add fwait mov mov ret (bad) ljmp imul dec pop dec ror mov xchg jp pop mov mov sbb rclb dec or scas mov mov ret andb cltd push mov divb call scas aas es mov stc pop or xor loopne fwait inc or xor cmp int3 or (bad) (bad) fdivp pop test enter out dec and and mov (bad) mov lret stos aam loop (bad) (bad) call adc inc cmp rclb and push xor stos les push xor mov lahf (bad) decl adc out xchg dec je xor xchg icebp sub and (bad) (bad) call js and jo leave jb (bad) aam flds jb movsb or (bad) (bad) (bad) (bad) cmp or or dec mov jg pop pop pop mov notl loope pop rol out je rolb ljmp lods fwait mov mov out push xchg ret sbb rcrl mov (bad) (bad) (bad) mov bound bound clc or mov jb mov shl insb dec add (bad) (bad) (bad) aas shl and push imul inc call xlat outsl lods or ret stos (bad) (bad) pushl jmp cltd sub imul adc adc jg adc test mov sbb add in shlb (bad) and (bad) mov inc lahf pop xor add jl fstl cli push std decl add mov or rorb out (bad) (bad) (bad) call xchg jmp mov mov (bad) rolb mov popa sub push cmp fnstsw test jge mov sub ficom cs sub fsubr cli dec xlat sbb (bad) (bad) (bad) mov iret sub popa in jl das daa xchg dec in data16 pushf push xchg mov cmp jnp pushf movsb mov ret sub call cli (bad) mov loopne add and bound cmpsb mov jns bsf mov push cmp rcrb (bad) xchg adc xchg (bad) (bad) (bad) jmp cmp mov jg (bad) pop jl popa inc in das sbb pop jge in (bad) push mov mov incl aas inc adc push test xor mov dec insb lods xor xchg shrb sub or fisubr or mov cmp mov lahf jnp int3 push sahf stc (bad) (bad) push adc or mov xor inc dec push daa shlb push inc cli (bad) out push jg clc pusha sbbb daa xor bound (bad) ljmp mov dec addr16 mov mov mov (bad) (bad) mov popf sti bound sbb pop push clc or dec push jl xorl (bad) (bad) jmp out lahf cmpsl aaa rolb fwait cmpsb pop ljmp (bad) repz push dec sub (bad) call adc cmc push jnp ret dec in rcll jnp pop test and push add imul lods scas jle std js fcom xchg jb cwtl test and push adc (bad) (bad) inc mov imul lds and cmp jecxz cmp or (bad) lcall xlat negl int mov push std or add xchg clc lock and lahf int3 bnd (bad) (bad) (bad) ljmp out stos lahf fwait mov inc sbb daa fidiv jno inc adc call out dec dec (bad) ljmp jns outsl dec xorl mov (bad) decl mov xor xchg mov sbb in jmp rorl push (bad) (bad) (bad) incl dec push cmp add sub data16 out or test cmp pop arpl mov imul sub or pop pop or in clc (bad) jmp sub int sbbb adc fwait add gs (bad) call lcall inc jp fnstsw popa stos lret (bad) incl (bad) (bad) call repz gs cs hlt ret inc in nop push aaa sbb icebp cmp sar (bad) (bad) call hlt or xlat jl test push dec int xchg mov fcmovne lret mov and aam (bad) (bad) (bad) pushl sahf mov mov sbb repnz pop inc xor push cld or rcrb push mov into xlat ret xor inc dec sbb stc insl dec arpl (bad) out add scas mov jg ficoml pop xor and mov xlat ja gs adc outsb popf ret add xor ret movl add fbld push mov incl and loop add sarb pop loope lcall sub icebp (bad) (bad) (bad) pushl rcrb sbb mov arpl and push pop xor jne push adc cmp test (bad) jnp dec ret inc push les add (bad) sub fsub arpl stos fwait (bad) jge or (bad) jmp xchg enter fsubl pop (bad) hlt sbbb cmp jg fidivl jmp daa arpl fs cli dec mov (bad) (bad) decl xchg xlat in icebp adc mov pop adc inc mov test loop test mov dec sbb cs imul mov mov inc jmp lods xchg clc aaa pop lret pop dec (bad) decl xchg push xor notb dec lcall (bad) ljmp insb inc push cltd lret into (bad) (bad) lock std lods xchg or adc mov sbb mov jg,pn mov jp cmc jmp sub mov test add clc ljmp iret fsubl fs ss sbb add cmp pop and push lahf dec imul (bad) (bad) (bad) call xchg (bad) push sbb lods jle leave rcrb pop lds in sbb imul (bad) (bad) pushl movsl pop aaa aaa xchg pop ds jae mov adc adc lcall mov dec jmp cmc push cmp imul das or aaa (bad) (bad) jmp adc pop aad mov dec xchg adc add cmp dec xchg (bad) (bad) (bad) jg nop jp jl rorb in push lods outsb inc fcomip mov mov dec ret add inc mov pop es loopne or adc inc in jbe pop pusha jg (bad) (bad) cli add xchg sub add stos push repnz cs pop add cwtl push or (bad) (bad) jmp out sbb dec mov adc jp and loopne out inc sbb (bad) (bad) (bad) incl pop rcrl js xchg iret shr or adc mov sbb (bad) (bad) (bad) (bad) mov fdivs sub dec lahf (bad) push push fcoms loop mov (bad) (bad) (bad) (bad) mov mov dec scas mov imul repz (bad) cmpsb lods mov push lods push jle xchg hlt and cmp xor push ja stc adc inc push addr16 ljmp push stc nop stos mov out ret jbe mov (bad) jmp and add aam jne fnstenv sub (bad) ljmp out sub xchg data16 xlat sbb cmpl mov ffree mov and jns sub (bad) (bad) jg mov jmp into cmpsb aaa lds in mov push je (bad) andb pop jmp mov decl bound repz cs clc (bad) call inc push dec out xor mov fildll ret xor mov sbb icebp (bad) fbstp xor sbb jb mov ljmp inc out fdivs ss mov push lahf test lea (bad) (bad) (bad) ljmp adc jbe sbb push loope into adc inc push (bad) cmp push xchg xchg jae pop ljmp jno mov popf xchg push jmp mov pop add (bad) call or dec pop adc ret xchg xor sbb or imul jne dec call pop push aas ret mov mov mov mov (bad) cmp inc cmp (bad) (bad) (bad) incl adc inc into arpl enter inc fwait sub out gs mov cli (bad) pushl xor (bad) jbe popf jmp cli push mov fdivrp and insb adc pop mov addl mov aaa cld incl les je xchg adc mov adc (bad) (bad) jnp add sub fucomip mov out pop rcrb lock adc lods hlt sahf push dec jns dec fs lahf pop mov jle (bad) (bad) pushl test faddl movsb fwait inc lret cmp notl inc cli cwtl ljmp ljmp clc (bad) call popa and mov lods sbb ljmp xchg fcos mov out inc dec lahf jnp xchg das inc adc xor movsl dec sbb popa rcr jecxz int3 push stos (bad) jmp sub (bad) call outsb sub testb push cmp inc dec imul jmp bound cld fcomip fldcw inc cmp hlt lods mov push pop imul dec (bad) (bad) jg sahf pop ret pop and imul sahf fs push or (bad) mov mov dec cmc xor adc push iret xor (bad) fcom loope das clc decl rolb lahf fidivl mov xlat sbbl jmp mov mov jbe cmp mov leave addr16 pushf jecxz (bad) jg cwtl jge,pt out scas mov adc bound dec cmp ljmp sbb push cmpsb js mov dec inc out mov or repz cmp (bad) (bad) (bad) jmp inc loopne pop aad pop jge testb out xor stos add addb (bad) (bad) incl fistl jae pop mov jns dec mov mov iret cmp fwait adc push loope sbb mov aas sbb (bad) (bad) (bad) mov aam nop cmp ja repz mov outsb add and jns jbe dec mov sub (bad) pop jo,pt dec in cmp (bad) (bad) jnp jbe das in scas (bad) jns fnsave lods or daa dec call (bad) (bad) (bad) call ficom push mov icebp xor push lret mov daa hlt (bad) ret (bad) (bad) int cmp mov (bad) decl das bound sbb and shlb xchg jle xchg cli outsl shrb outsl cltd mov mov incl cld lahf fdivrs into pop jl push sub cli cmpsb (bad) call mov adc mov repnz out adc ljmp sub xorb mov sbb jp (bad) (bad) (bad) decl jne mov mov add inc dec jb repz jno je nop adc cld lcall sub daa sarb cmp push (bad) mov in ja push sbb out push test hlt lds xchg (bad) je and mov lahf add and dec in sub jl xchg inc cmp jecxz pushf icebp fnop or pop cld (bad) (bad) js jo xchg jae fisttpll mov mov js mov pop clc pop cmpsl (bad) (bad) (bad) lcall stos adc mov adcl arpl mov mov ret adc cmp jbe inc ret add adc into or addl (bad) dec mov xor push lret add mov std dec nop push sti xor ret fsts stos (bad) incl fimul out fwait arpl pushl insb push (bad) (bad) (bad) pushl rcrl loopne sbb mov push lea fmuls add loope (bad) ljmp and in add sub test mov (bad) ljmp mov dec fiaddl test fstl or xchg repnz or inc add xor insb int3 inc adc (bad) (bad) jmp cmp push icebp ret cmpsl xor cwtl lret dec lods fiadd push (bad) icebp stos (bad) cmp lods xchg jo sahf ljmp fs dec inc (bad) call js shl ljmp test inc cmpsb push ret icebp pop test jl ljmp clc jmp dec in insl jo sahf pushw push sub or pushf mov ja hlt aas fdivrp (bad) (bad) decl cmp mov enter iret and mov dec inc mov mov fisub (bad) mov mov add pushf dec inc mov (bad) ljmp xchg add pop mov dec pushf test fsqrt (bad) (bad) (bad) (bad) jb mov pushl es pusha sub cli pop mov adc push or cltd cli fisttp (bad) fs pop jecxz (bad) incl add sti aas xchg movb jns fcomi popf movsl mov or cli (bad) (bad) ljmp sub std out nop jmp sarl ret pop fdivrp and std loopne (bad) (bad) out repnz or fwait int3 inc clc popa dec fimull bound xor sbb inc gs mov jg pop xor push (bad) (bad) fistpl data16 (bad) jo jle sub lret repnz jbe leave and sub test push xor xchg jl nop stc xor xchg (bad) ror loope (bad) mov sub mov add xchg add mov or mov icebp xchg xchg dec (bad) (bad) (bad) push in lcall sbb aaa ja aad fdivrp lcall imul loop (bad) lcall mov cmp je js mov lcall ljmp dec sub addl imul jle sub fdivr sub lcall imul (bad) ljmp sub mov xor xor test mov fidivr pop jbe (bad) (bad) pushl xlat bound mov cmpsb jns jle mov fnsave fmull (bad) call std popa cmpsl repz stos jne ftst mov mov test mov ljmp xchg in and mov push inc push hlt sbb pop out inc and jmp call lods lret lret inc (bad) xchg mov lock mov adc adc call adc jmp shll hlt (bad) ljmp outsb sbb cmp adc ds cmp or pop add dec scas inc push (bad) (bad) (bad) call jle pop aas sbb xchg lods sub mov or test mov cld xchg mov je rol std ljmp pop mov int3 ds xchg gs or cmp call dec je cs push pop jo (bad) mov sub fnstenv xor xchg (bad) and mov cltd (bad) (bad) lcall std test cmp (bad) mov inc fdivs (bad) (bad) (bad) mov lea jle cmp fcomps add push aaa xor stos dec stos dec test rcpps js inc pushf and and adc ss outsl inc andb and cmp mov test cmp mov fcomip ljmp cli push mov dec mov test jno cmp or (bad) in insb sahf cs mov push movb jnp popa test (bad) (bad) fbld movsb (bad) dec mov cmp stos cmp inc lods shr insl (bad) push xor lock decl jbe loopne scas mov adc fadds mov push sub xchg push xchg (bad) (bad) (bad) ljmp jb popa xchg push inc movsl ficoml in pop dec push imul pop in push (bad) ljmp daa mov (bad) sbb je imul (bad) push cmp sbb nop test fdivrp mov jns jno stc push mov shrb xor std jp lahf in and or shll (bad) mov sbb clc inc pushf movsb stos aad or push or dec jecxz (bad) call icebp stos fstp pop sbb popa jo fiaddl into inc daa or lock dec insb sub add sti sbb jo xchg push push or bound addr16 test (bad) call std movsl pushf out imul pushf jnp lret (bad) xor adc xor (bad) ljmp or popf jo loopne aad mov sahf mov decl jae movsl mov sub pop mov imul and popf (bad) (bad) (bad) (bad) (bad) (bad) mov mov dec dec or jo ss fistpl jmp ja movsb inc (bad) (bad) mov dec mov ret ret jnp jb ret sub push xor or (bad) (bad) pushl cltd sbb inc mov ficomp leave xchg fldcw mov push inc fildll (bad) jle xor or sbb cmp ffree inc add bswap jge xchg fild mov (bad) (bad) lcall pop inc dec sbb lods subl into out adc ja js push outsl xchg pop dec mov add lahf inc ret push daa xchg inc jne sbb fdivrp fcomip decl and imul aad xchg test adc inc (bad) (bad) (bad) (bad) cld hlt sahf fs mov push movsl pop jbe dec add movl xor ljmp and push inc add push (bad) aam adc les (bad) push icebp jle jecxz pop cltd rcrb pop sbb dec push stos maxps jp lods pop ja push std (bad) (bad) (bad) pushl mov mov jle gs jns mov xor sbb lcall incl mov dec popf push sbbl pop gs pop (bad) popa mov nop daa and imul pushl push mov cmpb popa jne scas insb sarl xor call jge push aaa sbb arpl movsl imull sub xor jns pop (bad) sti (bad) (bad) (bad) ljmp (bad) aas jle mov repnz fistpl jmp aad (bad) mov jns ljmp shrb pop (bad) fsub add pop cmp mov (bad) (bad) (bad) jmp popa iret xchg fadd pop cltd add fucomi fs imul jp (bad) (bad) incl fldt mov jp mov imul push sbb cwtl jge les leave jnp outsb (bad) mov sbb loop xchg sbb sub inc fs lret mov jmp sti mov jmp iretw cltd xorl daa jne lods mov mov mov in aas std mov xorl (bad) (bad) jg xchg fnsave loopne (bad) loope aas movb jle hlt pop rorb (bad) (bad) ljmp xchg mov mov pop stos dec and rcr dec sbb mov sbbb cmp jg imul pop (bad) (bad) (bad) (bad) mov cld loopne enter loope inc mov mov popf (bad) ss push loopne push loop mov and (bad) or (bad) (bad) (bad) incl iret stos xchg add cmp dec test jo xor push inc sbb (bad) (bad) (bad) jle and jmp sub movsb out jnp pop hlt cmp add test aad sbb lea (bad) (bad) (bad) sti add out sbb mov push in xor data16 xor inc lahf das jnp enter jg (bad) cmp mov fs mov pop sbb dec aaa (bad) std sarb sahf (bad) (bad) (bad) (bad) decl xchg jae out outsb lret push fdivl fisttpl jne and scas rcr (bad) inc lea adc pop mov jno push lods daa int and ja cli test cmp mov orb xor out (bad) jg sub imul push stos lea inc pop (bad) (bad) (bad) decl add jp mov loopne push fldcw leave ret xor jl mov scas in lods aas repz in scas clc sbb xor (bad) inc mov xlat pop lds js loope add jp outsb outsl xchg push std into jp sbb pop cli scas cmc (bad) (bad) lcall mov test inc jl jno pop roll fldl lret pop add rorb sbbl lahf idivl jmp sbb mov fwait xchg mov sbb fcos decl inc cmp nop lret (bad) jno xor inc in sahf push (bad) lcall pop lretw lea jmp dec add cli push (bad) (bad) (bad) incl test out jbe out les test dec add mov mov push test lcall push mov sbb popa out push hlt fldcw pop ficompl or fdivr (bad) mov mov mov pop dec and sti ljmp out mov test cmp lahf sbb (bad) jmp clc iret aas jl cltd imul sbb inc stos add into cmp xchg push jge (bad) (bad) call pop fdivp mov aam or xlat call ret xchg loopne xchg (bad) (bad) (bad) call push xor das rcrb (bad) lods sti (bad) jmp sub rcr inc add ret (bad) push aam mov fwait das insb inc (bad) decl movsl lret jp sahf int3 mov mov jmpw mov jmp lahf dec inc in mov subb and enter js popf es (bad) in loopne lock loope cld notb pop xchg pop pop hlt lret sub das (bad) (bad) (bad) (bad) fidivr arpl push fiadd js mov and lahf gs ds insb jecxz call xlat or xchg dec sahf mov jg mov fs mov stos faddl subl (bad) (bad) (bad) lcall mov (bad) leave das sbb xchg nop dec dec sbb shrl lods push sbb push (bad) (bad) (bad) decl xor scas ds push push xor inc add popf out adcl loop xchg fwait add addr16 cli fisubl mov aam (bad) mov hlt jbe (bad) (bad) (bad) jnp rcrl inc loope outsl add pop jg dec inc scas icebp or (bad) push inc mov add xchg and adc lds mov out pop lea pusha movsb (bad) lcall (bad) test (bad) mov hlt mov jo ret xor jo lcall jecxz push mov daa or push jge setg pop imul adc arpl mov pop mov in pushl ret clc in jge dec xor or aaa cmpsb repnz enter (bad) faddl lret mov incl stc and fcompl nop enter jg mov adc ds inc pop (bad) mov mov dec push xchg dec cld (bad) lcall sarl mov jno test jb cltd mov (bad) xchg imul jg cs sub roll xor enter pop fcmovbe jnp out std xor pop mov sub mov sub jge (bad) (bad) call pushf mov push mov cmpsl push imul daa inc add inc cltd (bad) (bad) (bad) lcall xchg out in (bad) ljmp aas dec mov ds xchg xchg (bad) jne push aas (bad) (bad) (bad) incl and xchg xchg adc js ficompl cld pop pop rclb mov arpl bound dec xchg pop stc test adc or ret sub mov test xchg inc (bad) (bad) (bad) ljmp jo repnz push jns lock mov pushf gs jp xchg jbe (bad) enter mov (bad) (bad) ljmp mov out mov add add jmp mov (bad) insb push cltd mov inc mov insl jmp mov movsb cmp and push lods mov inc fstpl mov mov (bad) (bad) (bad) (bad) fsubrl movsl and cwtl imul (bad) xor dec sub lods fs push or cltd (bad) (bad) (bad) dec dec orb es cmp xchg (bad) in sbb sub or fisttp mov add (bad) lcall stos sbb or mov das mov mov stos push adc (bad) (bad) (bad) call mov pop mov int jp cmc xor (bad) aad sub cli or test stos mov (bad) dec stc add (bad) (bad) (bad) (bad) mov inc adc jo and iret lds cmp mov imul or (bad) (bad) (bad) jmp push popa push addr16 pusha rclb push je adc lret mov dec sahf sti cwtl xchg sar mov pop sbb pop mov push addl mov (bad) (bad) jmp cmp inc adc (bad) notl jle sti xorb sahf mov daa lret iret inc xchg (bad) (bad) mov lret ret movsl dec mov aam mov xchg std sbb push sbb adcl jp xchg es jp out popf dec ret (bad) (bad) mov mov clc adc cmp push mov fsubs sub inc jns jns or (bad) (bad) decl jl push dec daa adc je mov cmp jns iret mov out (bad) (bad) ljmp push pop xchg test push and jnp mov push cmpsl jb into aas nop push pop fwait xor aad out xchg hlt cmp (bad) imulb push adc std decl repz sti ja lret rcrb lcall pop mov aaa es adc fiaddl xor xor mov xor inc lock fstps (bad) (bad) ljmp rcll mov aad mov decl push pop loopne mov jae fwait (bad) cmp add mov dec dec sub ljmp sar notl (bad) negb or clc lds push push imul add ja and mov leave pop inc inc xchg mov (bad) (bad) mov mov (bad) movsb cs mov cwtl add cmp (bad) (bad) mov gs (bad) out mov mov fucomip fdivrs pop pop fistp (bad) (bad) jmp popf xchg dec fwait push xor insb imul cmovae jle mov paddd (bad) (bad) in ss jns fcmovne dec ljmp sbb add sbb sbb mov flds jb pop dec in sar (bad) (bad) jg (bad) call jne icebp hlt pop lock jae inc pop sbb into mov (bad) (bad) (bad) (bad) (bad) fnstcw bound jne arpl cmp add jecxz ret iret xchg or stos and (bad) (bad) (bad) (bad) mov jl mov push pushf xor jg ret scas aaa push mov pop and cli fwait inc std mov (bad) (bad) mov push out (bad) sti aam clc das repnz push out and jno jne cmc (bad) pushl dec (bad) dec mov lea addr16 ja jno dec cwtl aam mov mov xor adc add pop lea fs dec cmp cmc lds icebp (bad) flds (bad) push cli aad inc ljmp loopne pushf mov and pop add mov fcmovnbe or cmp (bad) incl fistl adc (bad) mov dec dec lock xchg and les test sbb enter (bad) jmp nop or jae pusha inc (bad) mov inc mov loop mov (bad) (bad) fistpl push sub mov jle divl sti jbe mov dec notl mov mov (bad) fmul ljmp aad sbb pushl xchg jo pop insb (bad) xlat dec dec out inc test and subl jb outsl clc mov dec lods jnp cmpsb dec xor aam (bad) and gs push das mov test jmp je popf jno add cltd mov pushf fadd (bad) (bad) ljmp push mov mov int3 into add sbb in loop push int icebp in (bad) (bad) (bad) (bad) mov xchg sbb ret sahf jo or stc cmp testl sahf mov xor xchg push aaa cs (bad) cli aas inc bound sub push das xor and adc mov cmpsl and fbstp pop arpl mov xchg out nop inc mov decl das sub add pop mov lret enter fwait cs out push popf pop loope (bad) (bad) (bad) in movsl lods cmp fnstsw xchg lcall and and into sbb jmp out roll lods jbe divb ror rcl mov lcall fisttp cmp push mov mov pop (bad) (bad) (bad) jmp jle sbb nop jo insl jle pop cmp pushf inc dec mov pop divl adc (bad) jmp sti call icebp sub mov (bad) pop (bad) lea sbb (bad) (bad) call dec jle pop call adc push push sbb rcll repz insb and ljmp mov push xlat gs loopne mov movsb fdivrs dec jbe jecxz adc jns (bad) (bad) jmp dec aaa sbb push dec mov (bad) mov inc mov push inc divb out add (bad) (bad) dec xchg jl pushf mov mov lret imul fistpll xor mov mov lret add int3 dec mov mov sarl (bad) lcall lods jmp jle mov adc and or jmp (bad) repnz sbb or cmp push add add sbb xor addr16 mov ret mov fisubrl dec mov jbe xchg leave mov xchg js outsb (bad) cmc std addr16 and adc mov cld in jno xlat out sbb pop sbbl (bad) (bad) (bad) (bad) mov xchg pop lret cmp and mov mov std sbb hlt (bad) ljmp jl xchg sub mov loope out xchg dec leave enter (bad) (bad) jmp xchg xor sub pop mov xchg add into xor push pop fwait aas insb ljmp fdiv (bad) out popf xchg cmpsl lret inc inc (bad) stc sbb mov lods sahf clc (bad) ljmp dec push sbb push and out insb lock out ljmp call sub ja mov mov push add cmp adc ja push fcomip (bad) cmp dec lret xor testb xor dec mov adc (bad) (bad) (bad) jg and ljmp push mov lods pop jo out push jbe and (bad) (bad) (bad) jmp ja loopne ljmp xor arpl addr16 cmpsl sub incl lods in js sbb movsl hlt add decl xchg sbb inc xor rolb arpl mov or popa or leave popf mov out fsubrs adc call jo mov xchg dec push insl adc ljmp ljmp test mov cmp insl (bad) (bad) incl push les mov inc sub and xchg shrl mov (bad) (bad) ljmp push or jns mov int scas xor insl das stos inc icebp cmp (bad) (bad) jmp pop pop dec push pop add dec test push mov add inc mov imul (bad) lcall int3 inc xchg push in mov out mov fs mov cli sub mov and (bad) (bad) (bad) cmp aas jbe adc adc jno sbb mov jns push inc inc xchg (bad) mov dec test popf jo push outsl ja outsb mov aaa cld pop or repz cmp imul inc adc fdivp call mov imulb iret std mov lds incl cmp push or jmp hlt and in sub imul das clc (bad) (bad) in cld lods sbb popl movl push fs (bad) mov jle mov je aam imul out sub inc mov clc outsl and popa add int3 (bad) (bad) cmp xchg dec mov outsb add (bad) (bad) mov and cmpsb or mov fnstenv inc insl out jns push mov mov and mov cmpsl or cmc mov pusha fmuls mov imul adc push push cld call jae std (bad) lcall inc inc mov mov xchg into jo pop out mov mov mov adc mov sub push cltd cmp (bad) (bad) mov bound ret sarb and loop cwtl and insb mov jo std decl sub movsb lds cmpsl out jp ljmp aam call mov lret dec imul pop cli ljmp sub lcall mov mov pop push ds and xchg enter adc jbe es (bad) pushl stc dec jae lret xor sbb xor fdivl subl rcrl clc (bad) call arpl sub (bad) pop (bad) push imul (bad) decl das (bad) xchg lcall mov mov mov (bad) (bad) pushl mov lea std ret iret repz data16 xor (bad) jmp std pop mov (bad) scas jg test xchg pop ljmp pop sti aaa jl fsubl scas (bad) (bad) pushl dec fldenv and pop enter in xlat sub or xor icebp (bad) decl adc stos sub dec hlt insb xor iret xchg mov adc mov imul andb cmpsl and cltd lods jecxz and dec loop pushf lea (bad) jg (bad) mov jle fldl sub fsubs push push xor (bad) sub repz xchg out mov mov xchg stc or dec adc out es popf pop cmp aas jb hlt mov sbb mov (bad) out clc int pop xchg aaa pop and (bad) inc dec xchg sbb pusha rcrb rorl sahf (bad) (bad) (bad) pushf into fwait xchg and mov inc cmp mov adc popa jne mov jmp mov mov dec fdivrl sub (bad) push in or bound add (bad) jg dec stos ds test lea xor in scas pusha push pop push add in pop shll (bad) (bad) (bad) call push mov inc fwait pushf and loope lret mov scas mov mov aad add (bad) ljmp add jl stc cmp (bad) daa stc out adc xor lahf out mov (bad) (bad) push mov push sbb rorl scas pop fistpll xor ret fldl loop ret and scas (bad) (bad) (bad) pushl imul jae mov imul jo insl leave mov aam lret (bad) aas inc sub fldenv out sbb inc dec or push (bad) add or dec cmp enter lret sbb fiadd and mov jo or gs (bad) (bad) (bad) decl jo and dec into das push int sti pop ljmp js in xor mov cltd test add xor in and je sub (bad) call fldcw jp mov inc and mov (bad) mov orl (bad) (bad) (bad) jmp xchg sub lock ljmp cmp into mov std xor lahf loope and (bad) or mov sti call inc inc cmp out inc and faddl ror into sahf aad (bad) (bad) jmp sub ss sbb imul loop inc xor xchg (bad) (bad) jg out stc push (bad) fisttp lods adc mov arpl xor push pushf push push stos jo add iret aaa popa dec and cli cwtl outsb lock (bad) (bad) (bad) ljmp cli ret or gs sbb inc push nop adc test in lea repnz add scas sbb in pop mov imul lea hlt (bad) decl in test add imul cli xor call lds jmp aas ljmp adc decb outsb inc adc pop data16 (bad) push pop mov push call je daa adc (bad) (bad) (bad) aas imul mov lock fmuls jg sarb loop incl push call cs pop (bad) push mov mov jge mov and dec sbb push xlat ja into (bad) mov fidivrl xor pop sub mov inc add shlb mov testb mov sub (bad) mov stc cltd in cmp lret repz cli (bad) (bad) (bad) mov (bad) aaa push sub das iret pop outsl or popl int3 cmp jmp xlat int ljmp push popf mov int cwtl lahf ljmp and sbb adc cmp pop rorl ret sbb xor xchg fcmovbe inc mov sbb inc add imul sub pop loope mov xchg (bad) (bad) (bad) decl pop sarb jne in mov push dec mov sub adc loopne das mov (bad) incl fiadd dec dec lods sub cmp inc or aam and xor mov mov ds stos add xchg and lds or sarl mov popf cltd xchg (bad) (bad) jg and arpl nop jnp adc (bad) out adc shll insl lds (bad) (bad) mov iret mov into loop inc sbb inc add mov ljmp sub mov xchg icebp dec dec aaa dec lret xchg cld fcos (bad) (bad) ljmp dec sbb dec cmp mov test aaa pop cli shrl jl xchg jmp (bad) ljmp std lretw inc repnz pop fmuls cmc push sbb inc (bad) ljmp (bad) jg add mov xchg add pop xchg outsl push or and jmp (bad) mov mov jno int nop adc js pop cmc decl dec push outsb dec lahf aad cmp incl pop pop loopne fistp mov and push clc (bad) (bad) call and sub lahf jg bound dec fidivr cmpsb ljmp and out lock rclb int3 or (bad) (bad) incl adc sbb cld push cmpsb icebp out jl inc notb das sti into (bad) decl movsb inc xor push add out stc dec or sti mov push lock bound lock pushl jmp js,pn pop or push rcrl mov popf xchg popf pop cmc pop jno insl (bad) (bad) frstor push punpckhwd andb fcom mov fwait mov aaa cli test (bad) jg cmpsb cwtl jo mov (bad) cmp cmc incl cltd cwtl push test repz and (bad) push pop and mov (bad) fildll cld or enter mov and pop mov mov mov (bad) (bad) lahf es push push xor mov lds pop loopne push jns movsl xchg cmc mov leave in xchg orb or (bad) (bad) incl cld jnp loopew xor mov ja dec sub sub push sti movsb inc add cld ljmp push daa cmc inc xor into call jp scas movaps pop repnz mov ja cld (bad) (bad) ljmp je or jbe jno js (bad) sub cwtl xor and fildl (bad) jg insl inc mov push mov cmp dec ss cmp (bad) incl movsb out pop and jge or push lahf mov sahf shrb cmp std cld mov (bad) (bad) decl movsl cli (bad) add or mov fstps xchg cmpsl sub inc scas push jl cmpsb (bad) decl rcrl sub out ds scas xchg lret pop ljmp decl pop jb cmc adc fbld divb loop test repz (bad) lcall push mov cmp loope popf shrl mov jns (bad) (bad) (bad) (bad) cmp pop mov pop out push test xchg cmpsl adcl lret xchg call (bad) jg test or stos xor movsl ja gs (bad) pop lcall lcall testb fimull lock (bad) (bad) inc add add mov inc addr16 loope jnp daa pop cs je inc add decl mov xchg sbb nop mov icebp (bad) (bad) jmp dec mov add sbb sbb cltd les and int push push cmp enter outsb aaa (bad) (bad) psrld cmp incl pop clc icebp or cltd xchg inc imul push (bad) cmp dec pop fs aad xchg jbe (bad) (bad) pushl jle mov rolb shl mov inc xor jne dec (bad) adc (bad) (bad) pushl pop out push xchg adc push xchg jecxz aam das fdiv movsw adc (bad) mov add bound std les mov std (bad) push repz and sahf lods scas mov leave loopne and imul (bad) (bad) (bad) (bad) ljmp jmp sahf and in enter movsb inc fwait xor (bad) dec scas mov ljmp addr16 data16 pusha adc lcall xor push daa inc dec sbb ljmp jno dec cmp pop (bad) (bad) push mov test stos (bad) mov inc fidivl adcl or fdivl xor (bad) (bad) push inc push jg inc push fsts ret push aaa push lods repnz pop inc lds decl mov cmp sbb push (bad) test dec out fwait mov test (bad) call push es jmp test mov pop sbb jmp inc pop cld addl dec cwtl idivb shlb and (bad) (bad) (bad) call xlat js popa sub xchg mov or or vpunpckldq adc pop ficomp xor jne lea sub or fldl in push xor xchg ss stos sahf iret mov ljmp fs (bad) mov push stos (bad) in movsb leave daa outsb jns mov jne sbbb sub (bad) lcall test pop and lcall ret cli out clc int3 mov pop sbb mov lds fisub gs lret clc mov lcall loopne adc daa (bad) (bad) (bad) mov sub mov lret (bad) sarb std ljmp data16 lcall arpl push (bad) (bad) ljmp adc or call ficoml inc or xchg (bad) jmp xchg add pop push pop mov cmpsb pop test xchg pusha fstl outsb mov push jmp pop xchg pop insb or cltd arpl push (bad) jmp (bad) (bad) ljmp testl mov jle and push pop push aam pop das sahf aaa pop mov aaa inc jg or dec repz fldt sub lcall dec ljmp sub or pop inc arpl (bad) (bad) call sbb sahf mov mov sub mov subl ljmp (bad) (bad) jg mov push movsb and mov les push negb jmp (bad) ljmp js icebp jne hlt fstpl sbb int data16 cwtl sub (bad) incl ljmp nop inc imul mov test lods push outsb ja dec loopne xor mov ljmp pop jecxz mov mov mov pop inc add insl mov mov (bad) (bad) mov popf dec test mov and dec (bad) jne cmpsl cltd lahf (bad) lcall push or aaa jb mov pop (bad) cli jge pushf std (bad) xor cs and (bad) (bad) (bad) inc test mov lea outsb dec arpl cmp icebp add aaa mov sub (bad) (bad) (bad) incl stc test (bad) (bad) push notl movsl pop mov rcrb jg pop mov (bad) (bad) pushl cs aad (bad) fiadd pusha sbb pop lret scas mov sarl or fwait (bad) (bad) call movsl nop push repnz push call in cs (bad) (bad) ljmp aaa imull inc rcrb aaa mov push jg jmp push inc jle mov dec into mov or push cmc imul pop loop pushf out mov ljmp lcall inc mov jne mov mov mov (bad) pop dec call mov push xor jae (bad) js mov (bad) decl push cltd jno cltd fcmove sahf movsb jbe scas jle dec sbb fistpl incl clc pushf mov stc dec mov sub (bad) (bad) ljmp (bad) mov and arpl mov js inc inc gs and div mov add mov fldt push or aam jne je add inc xchg je mov loope (bad) (bad) (bad) ljmp fs push loop push movsb lods sar pop mov (bad) and add sbb (bad) (bad) inc pop or mov test mov int3 roll fisubr xor outsl add mov mov fsubrs mov ret gs loopne jnp sbb cltd loopne add ljmp movsl xor aad arpl xor mov cltd or stc mov push addr16 cld loope jmp loopne pushf xchg mov (bad) (bad) decl inc lret mov cmp xor imul mov (bad) mov cwtl dec adc aaa push lahf mov outsl imul pop cmp (bad) (bad) (bad) cmp jne mov sbb sahf (bad) mov mov std idiv ljmp bound ds negb push push outsl loopne ds cmpsl ja push arpl (bad) (bad) lcall mov jge xchg mov jno xchg ljmp mov (bad) mov mov mov ja xchg ret popf dec (bad) (bad) (bad) jg data16 adcl or adc xlat in push pop adc (bad) testl popf push lahf les sbb fldenv xor jbe lock (bad) (bad) (bad) (bad) mov jnp aam xor sub pop add mov adc cmp cmp (bad) (bad) jmp cmp add mov daa ss ficom xchg pop les std (bad) (bad) incl test ss into pushf daa loopne pop call in outsl nop shll ds test (bad) (bad) call push mov or and or mov sub inc popf mov pop loop (bad) (bad) (bad) incl inc pop lods pop jns adc xchg pusha leave int iret inc lcall inc sub decl add loope aas push lret (bad) test (bad) lcall inc pop enter add and mov cmc fsubrl cmp xorl mov xor test enter mov scas jb enter mov and mov cmp dec dec les (bad) lcall xor out push stos pop test icebp cmp popa inc ljmp mov mov push movsb scas mov into push orl incl sahf mov inc add jno sbb (bad) (bad) jmp push stos pop push xor (bad) enter jl repz push mov cwtl popa add (bad) pop push mov (bad) (bad) (bad) mov and mov scas test stc out mov sahf lock add (bad) (bad) call insl inc in xor shrb mov lods clc dec xchg int pop mov add jmp add mov pusha xorb push test cwtl xchg popa lock lahf mov cmp jnp pusha mov psrad hlt (bad) call xchg sbb mov cmp inc pop pop orl movsb lock rolb push mov (bad) dec inc in pop stos dec push cmp outsb jl in mov addl xor mov or cltd (bad) xchg das adc add (bad) jg lea rcrb jo fstpt mov sbb inc cwtl jae (bad) (bad) lcall subl js or scas call adc pop (bad) (bad) (bad) lcall ljmp xchg lea cltd lods jle xchg sahf inc sub stos std ficompl test (bad) (bad) inc stc or ljmp add adc enter nop cmpsl repnz aad xchg sarb jg or mov and (bad) (bad) (bad) ljmp mov xor lock dec ss fmuls lods iret mov xchg pop xchg sub mov (bad) (bad) fldl2t lahf jnp cmpsl lds mov test and mov (bad) cmp fmulp or add loope stos or cmp ret icebp pushl push cmp xor inc js lock mov or pavgb inc repz dec (bad) jle pop divb jne bnd (bad) (bad) ljmp mov adcl xor roll int3 call (bad) decl test sub sbb stos loopne and push adc andb and jmp jbe popw and add lods int3 fidivl sub (bad) pushl cmpsb xor pop out xor fsubrl lret mov (bad) mov sbb hlt inc in or and (bad) mov sub inc xchg (bad) dec xchg xor push xor inc (bad) (bad) (bad) (bad) decl pop imul shlb mov jg out lock mov push add out mov call mov loopne mov in out jb pop mov ja,pt cmp pop aaa out sbb (bad) jae jg or mov xchg addr16 ljmp clc (bad) xor sbb scas cli imulb cli jg notb (bad) dec jo mov clc scas jmp in iret dec adc mov adc popf fdiv (bad) (bad) (bad) jge sbb aas dec or cmp cs lds sub pop clc sub add aad dec (bad) push jg xor mov stc (bad) negl push adc nop jmp xchg clc dec (bad) sub incl cmp dec (bad) and enter pop mov lods adc mov pop fcom mov inc (bad) test mov adc out test or cmp mov fwait or aad and cmp add hlt call or fcoml pusha pop outsb jo loope fstpl icebp das xchg cli inc mov cltd std inc sbb outsb sub ljmp hlt out mov pop ret and mov jge ljmp adc mov mov xchg xchg idiv incl cwtl imul xchg fisubr stos jbe jle push mov sahf fild ret loope xorl inc fisubr (bad) jmp and and call das or mov xchg in out or aas into movsl pushf movsb movsb rcl std aad outsl fcmovu mov dec (bad) out imul stos arpl push inc jecxz cmpsl add lock fnop pop xlat dec adc jno (bad) mov lret inc std pop mov iret popa lods cs mov jmp and mov test sbb or es repnz movsb (bad) pushl and cltd lds fsubp ret cmc int (bad) icebp (bad) (bad) jg jnp mov rolb pop fsubp repnz and mov xchg push cmp lcall pop arpl adc sbb sub sub xor mov add (bad) mov stc shll mov pop sbb mov pop dec adc sub call pushl sub icebp push sub dec scas push rcr sahf decl jo push call iret pop add jg (bad) clc jne ss rcrb lret mov pop (bad) icebp push or (bad) decl gs mov lock and mov movsb cmp jb mov (bad) (bad) call or (bad) popl inc pop xor in leave xchg fs xchg ret sub xor decl mov jg sbb and push rolb xchg push arpl xchg (bad) (bad) call jnp cld insl mov sbb std (bad) ljmp sub xchg fidivr jbe gs lock jg inc in movsb jo div push jae adcb clc ja xchg jae jns sbb (bad) ljmp andl (bad) mov lcall in mov mov cmp es (bad) (bad) (bad) decl mov lret xorb dec push imull and out pop jg add dec or xchg lods sarb jg sahf inc (bad) (bad) (bad) pushl pop hlt std mov pminsw (bad) (bad) add out test inc repnz ja or aam mov inc lcall and mov or push imulb adc push pop adc out xchg les jae jg decl or test pop lret cmp push sbb adc mov nop loope dec loope xchg cmp arpl mov push sbb test or aad inc sub jl fidivl cmp inc dec sti add add add das lcall and and ljmp andb and inc pushf jne das enter and mov mov das jns add lock or jp xchg aad adc adc adc decl ds mov xor orb (bad) jg add fwait loop (bad) arpl call pop lock testb xchg js ds push ss jns xchg mov clc pop gs (bad) bnd fiadd aaa data16 mov mov in sub xor pop jg (bad) pushl and sub sbb mov (bad) movsb out mov (bad) (bad) (bad) fstps mov std push addr16 sbb mov repnz jno fwait mov add repnz imul adc xchg mov adc pop leave mov push (bad) sbb jbe lock jno dec (bad) (bad) (bad) jmp in mov sub pop repnz sahf xor pusha lret fsubr pusha out push (bad) aaa cmp out cld (bad) (bad) (bad) pushl aaa aam mov dec cmpsl and push lret arpl adc lcall lds das nop sub les aas icebp ja sar adc dec fmull pushl rcl xor jne mov sub sbb (bad) decl lcall rcr test push addr16 mov adc aam add pop insl (bad) jae fisub das inc ficom das jge inc ds cltd adc (bad) (bad) decl fwait clc mov adc subl movsl xor mov je test and push (bad) (bad) lcall movsb sub pop mov rolb cmp cmpsb test repnz (bad) (bad) decl xchg xor xchg mov mov xchg inc dec daa xor dec cmp dec (bad) inc push or mov repz test lcall xor loope fdiv mov and lods cmp pop inc and jp inc (bad) (bad) ljmp stos jmp lahf mov dec stc loop cmp push pop rcrl jb sub cli stc je repz adc (bad) call cmp cld (bad) (bad) incl ret adc pop ret cs decb add rolb js pop mov (bad) (bad) cmp lret std mov jbe into int cmp enter or jo jo pop rol push jbe loope push (bad) lcall push jns cmp push or lds ja test (bad) jmp adc sarb ret add and jmp inc fist xor pop mov lcall jne sahf dec push test sub sub (bad) push jge mov sbb cmp inc das cmc pusha add xor pop push mov pushf dec cwtl jmp jmp add pop and notb arpl dec sbb jmp aad jl and jmp pop lods add pop (bad) sahf (bad) out mov sub enter cmp jb,pn fisubl stc dec pusha cmpsb push subl mov lods pop pop aad (bad) (bad) ljmp fisub jmp push je iret ror cmp ret stc pop inc push insl pop mov mov in xchg pop sbb mov imul enter pushl std (bad) js outsl inc lock and dec test mov repz dec inc add xchg mov mov adc pop sbb mov scas cltd xchg out jg and lahf push inc mov scas push sub jnp (bad) (bad) incl sub arpl (bad) mov cmp or or leave jne mov (bad) pushl leave jb fcompl pop xorb or scas add (bad) (bad) ljmp je mov xchg icebp fidiv insb and push sbb out (bad) (bad) (bad) (bad) mov mov test cltd sub lahf mov push icebp mov (bad) add clc lcall std icebp or mov or and cltd je inc popa addr16 jnp and lret sarb or out xor std lcall lcall popf ds cltd (bad) fwait lods scas lret inc mov fidiv pop pusha and ja popa pop jno lahf (bad) ljmp xchg xchg pop out push arpl iret outsb jg (bad) (bad) out or jmp or or jge pop in test mov (bad) jne fcomip (bad) call cmp dec out sbb mov scas inc fwait pop inc arpl (bad) aad std jg cmpsl in xor mov out xor xchg aam adc call ss js lahf movsb insb sub sbb (bad) jmp inc sub shlb fimull out pop cmp jl xchg xchg enter inc loop call push cmp xor clc (bad) (bad) decl jecxz pushl dec jle add or fsubp cmp xchg stc jns pop incl (bad) repnz leave insl loopne pusha mov stos loopne bnd jnp mov lret cs mov push call sub jae ret xlat push mov repz subl sub jmp sbbl adc sub movsb shl inc aam (bad) (bad) jmp pusha cmp cltd mov imul fstp inc jl mov pop mov or push mov ret ret insb into dec jnp inc ss in xor packsswb inc pushf sub lcall arpl xlat pop dec jno sbb sub test iret in xchg das inc add push mov or xor mov insb outsb (bad) aam fwait pop cmp incl or hlt add mov jae repz adc (bad) (bad) decl pushf lds inc cltd cmp idiv test cli pushf ret jp gs jmp (bad) (bad) (bad) cmp or imul sub push scas mov pop std inc fmul inc mov fsubs int push imul (bad) mov decb ss adc dec aas shrb lcall or fidivrl mov jecxz int3 or iret mov std call rclb mov faddl sbb sub mov in stos dec pop loopne rorl in dec aad loop insl and mov hlt sbb (bad) mov in enter sbb lea outsl out jns sbb push (bad) (bad) (bad) fucom sub add loop xchg cld cmp adc inc adc adc aad (bad) (bad) (bad) mov lret in lahf dec push ljmp aad lcall arpl (bad) and (bad) (bad) cmp into push shll sbb pushf or aad sub rcrl xor mov push call ljmp in pusha xor mov push (bad) (bad) (bad) incl rcl pushf push outsl cmp and decl mov fidivl jnp cmc data16 int (bad) (bad) jp fs adc divl imul jecxz inc aas adc (bad) cmpsb rclb (bad) incl cmp add out cli xchg xchg mov scas repnz sahf int ret js mov incl adcl sti cmpsl (bad) sbb or (bad) (bad) fild cmp aad bound in and mov mov and movsl popa mov adc xlat (bad) incl mov mov sbb jge out dec jecxz add pop outsb dec mov mov imul mov push std push in aam mov (bad) ja or bound mov (bad) (bad) (bad) pushl ja cmp imul jne mov cwtl in push mov inc lret mov (bad) (bad) decl push sbb mov pop icebp and mov addb lahf mov sub ljmp xlat mov sub and xlat imul cmp xchg mov add push arpl adc sahf inc sbb (bad) (bad) fcomip dec sahf scas pop mov iret lret test mov inc ret mov iret bound mov out push sbb push insl lea repnz (bad) enter jle scas sahf iret (bad) jmp xchg cli dec adc lods inc (bad) push (bad) adcl jmp or xchg pop pop push jno cli sub popa div rcrb (bad) lcall cld cmc out call mov and loope shll adc lock jg (bad) pushl xchg mov stc and fisttpl and adc (bad) add push out ret (bad) pusha jae nop cmp push mov xor in mov aas jne dec or shrl push jno rcrl movsb std (bad) (bad) lcall pop push inc test loopne push mov (bad) cmc les adc xchg xchg (bad) (bad) lret or mov incl movsl sbb mov negl in fisubrl xor jb,pn jge in push fs sti or das cmp incl push repnz mov mov stos push pop cmc fiadd std add xchg push pop and mov ljmp je jno mov push lock pop and xlat outsb push (bad) (bad) incl popf popl jle pop push mov add (bad) mov xchg add xlat ret push or mov call dec jo inc lret (bad) (bad) out adc (bad) in test adc dec add or rcr (bad) (bad) (bad) dec push icebp dec pop (bad) das jns rcll ds out dec sub pop (bad) cmpsb jbe sti mov ret decl cli daa xor add lcall dec mov clc stc mov adc xchg fisubl jns and inc and jmp xchg jmp (bad) jmp test push or sub xchg ss jno inc (bad) jbe je xchg xor test push ljmp (bad) call mov lds adc loope jp cmp (bad) repz (bad) (bad) (bad) (bad) cmp repz add xchg add enter mov aad (bad) in jmp or (bad) (bad) decl cs gs negl sarl icebp sub insl sub inc stos sbbb scas divl and int3 iret mov inc pop push (bad) adc incl mov int pushf push aas lds gs inc cmpsb cmp arpl sbb (bad) orl sbb out and loope sarl xor lods push lahf ja mov std (bad) (bad) decl dec xor icebp or inc subl lods dec pop andb mov pop loopne pop insb (bad) xor fiaddl ret or leave inc (bad) and (bad) decl add clc rolb and add adc xlat jb mov (bad) (bad) (bad) call popa into in fdivl pop in xchg mov notb ljmp adc addr16 clc int ljmp mov adc cs xchg aas push or ljmp add mov stos nop scas jecxz cmp idiv fwait inc mov (bad) test sbb enter xor jb mov cmpb mov cmp pop lahf test cmp mov jnp cltd sub hlt jne out sub jo sbb std (bad) ljmp andl pop fimul das dec popf lret xlat mov ret shrb lcall ja sar cs mov mov xor mov jecxz mov jp xor xor leave sub sbb pop out out cmp xchg dec ret cmp faddl rorl dec sub xorl call inc insl inc push rcr jo mov xor (bad) (bad) dec inc jl or adc and push pop arpl mov aas repnz and adc mov (bad) (bad) jmp cwtl and mov repnz test xorl test les or sbb sub (bad) (bad) pushl in hlt pop pop sub cmp dec pop out in stc jbe xchg cmp cmp adc add push mov mov ret xchg mov ja inc outsb push out (bad) jnp test dec add call and pop lret sbb add mov imul cli dec cld das mov test mov jge push iret call or (bad) stos xor (bad) dec (bad) (bad) (bad) call xor sbb outsb in xor or xlat cmpsl mov mov jae inc dec aad sarl (bad) fisub adc int3 sub daa pop aam jmp fsub dec sub mov pop push fldcw push int3 mov mov (bad) (bad) pushl dec or sahf dec idivb out aam out cmp push mov cmp mov cli (bad) ljmp daa scas movsb jne sbb push sbb rep mov shll (bad) jmp call sbb pop int3 and in push pop jno inc aad (bad) lcall imul sarl rcrl push daa add jg sub jns nop cmp (bad) jg mov inc mov mov cs add icebp mov lcall (bad) decl daa fwait imulb adc aaa push inc pop stc int (bad) (bad) decl (bad) out cmp mov insl mov pop loope bound scas enter xchg inc sbb sub (bad) dec xor mov insl pop scas lret push fwait inc inc lcall scas fidivrl pop std push insl xlat dec adc test lahf (bad) mov inc in mov mov and sub jo dec insb insl inc inc (bad) (bad) (bad) pushl mov mov mov jno loop jae inc sub cwtl and xor push push (bad) (bad) decl pushf or mov insl das xchg mov and jmp insb mov inc loopne (bad) adc decl rol mov mov xchg or bound mov mov fistp adc scas and leave push (bad) sbb lret sbb mov pushf mov sub push add divl dec sub sbb add mov jmp sbb add adc and mov mov mov (bad) (bad) (bad) (bad) cmp ret jle repnz stos and pop insl and jl incl jl jmp loope (bad) (bad) (bad) call jnp adc dec bound iret loop loop inc push out ret loop (bad) mov add and pushl sub adc fsubrs lock imul outsl (bad) (bad) lcall fisttpll and sub enter add cli int3 mov ss push mov lcall ds in daa int3 (bad) es and mov add ss lock cwtl push ret in jno adc jb pop cmp stos mov xchg call push and into mov inc (bad) ljmp ret mulb movsb popa add jo outsl (bad) mov jecxz aad leave stos insl pushf pop push dec (bad) das sar xchg xchg outsb mov adc das jg or sbb add mov sbb jb repz lcall out in movsl dec (bad) push push test adc xor js ret adc lcall add mov jle xchg inc and sahf xchg lcall call les jne adc mov (bad) (bad) (bad) jg lea adc inc cmpsb pop int3 nop out jle xadd lret add enter lahf ss sub loopne push mov arpl repnz gs decl (bad) loopne pop ret ficom sub outsb into push add cs push dec fmuls or add xchg cld out or push mov jg jmp mov sub xchg out les add (bad) (bad) (bad) fisttpll pop shlb mov push push cmp ss pop (bad) (bad) (bad) lcall movsb push loopne inc iret orb icebp out pop cmp sbb int3 dec adc arpl inc (bad) incl (bad) (bad) (bad) fbstp inc lea (bad) mov xor add repnz adc stos push sbb jmp push nop pop dec add insl sti movl cmp (bad) inc add test mov dec push dec scas sbb jno mov (bad) call imul dec (bad) hlt xchg scas scas dec cmc ja cmpsb pop dec dec stc push inc jg sub or leave xor and sub jmp adc inc scas cs sbb call (bad) stc dec stos cmp in pop loop iret cmp ljmp ss inc cmp (bad) (bad) (bad) cmp add push or pop push xor test jg mov idiv (bad) (bad) lcall cmp (bad) jl push sub sti mov inc mov imul dec add test fsubl imul xchg (bad) jbe inc mov cmp push cli (bad) (bad) ljmp inc mov dec mov xlat pushf and lods mov sar (bad) out cmp test adc sbb es sahf mov lret dec push sub (bad) (bad) (bad) incl stos jl loope xor jg mov and jne stos push (bad) repnz push ret es lods call mov mov xor push or pop jmp pushl (bad) in popf (bad) cmp pop pop test andl xchg das cmpsb rcll ljmp mov imul mov loop rcll inc pop (bad) jmp cmpsb (bad) (bad) (bad) jg in jns mov and pop notb push lea adc xor outsl (bad) jmp jns cmp sbb cmp xor (bad) jg aad cmpsl sarb mov xchg inc jle test push add inc and xlat aaa cld (bad) incl jmp pushf movsb jl stos rorl and js lds (bad) (bad) (bad) call sub sti xor inc pop fdivrs push call mov aaa cmp jno ljmp jmp sbb inc sub (bad) (bad) jg push sbbb inc int std jo lret je fimull push pushf fs (bad) incl in dec popa mov (bad) xchg or lret lret jge mov (bad) call xor xchg adc mov stos lds mov inc mov xor (bad) (bad) jmp xchg negl cmp xor call push pushf (bad) fcmove push push (bad) jg notb xor ss (bad) (bad) incl mov cld les dec rcrb sub mov inc cld test data16 push dec push movsb clc adc push push out dec jecxz std fild jge lds decl jg cwtl jecxz jb add pushf dec fwait sbb xchg test (bad) xor (bad) (bad) incl lret cmp adcb ss push add or or mov xchg lea ret jbe or out daa gs dec push mov xchg and jg call cmp jmp mov loope fnsave fcompl xchg movsb xlat push das cmp and jno into cs into leave sub loope pop pop fmull or add dec ljmp adc sbb mov pop inc dec ret xchg sbb push sbb cmp mov cld (bad) (bad) incl stos add sbb sbb lahf stos lock jg pushf xchg cmpsb (bad) lods aad pop pusha push cmp mov xchg (bad) in lds loopne cs rcrb jmp xchg mov (bad) and cmpsl repnz push or (bad) (bad) jmp push lods mov or setnp add in scas repnz push ljmp popa sub leave in jg pop aaa cld scas push pop xchg mov (bad) (bad) (bad) incl sbb add xchg mov shlb xor push jne inc lods jp sbb ds inc sub (bad) (bad) jmp lahf test or into dec push jmp sahf sub fisttp xchg int (bad) (bad) (bad) push xlat xlat ja mov or sbb add xor push xchg rcrl jo enter sar call add mov xchg sahf pushf mov jns xchg idiv ljmp inc add sub into es dec sbb jbe (bad) out cli ljmp pop mov rclb cmp add sbb les (bad) push jae insb in jae lcall fild out push (bad) jb xor (bad) (bad) (bad) (bad) decl lcall aam xor cmp jp les sbb outsb scas pop sub call push in xchg shlb mov jmp (bad) (bad) (bad) decl hlt pop mov mov push mov movsb dec cmc add fistpl dec fidivl aam dec bound scas sbb js xchg sub and xchg cmp jmp or adc pop pusha faddl xlat mov inc (bad) or xor ret (bad) (bad) inc in ret dec mov push or push sub movsb dec mov sbb in (bad) jg push ljmp stos (bad) repnz shlb inc dec xor (bad) loop jge (bad) (bad) pushl popa or cmp rcr (bad) lret test lea (bad) mov mov in clc mov outsl lock out push push push sbb cmc test (bad) (bad) (bad) decl inc mov (bad) push imul push fisub movsb or mov mov cmp (bad) (bad) (bad) jmp cmpl outsl cmpsb mov cltd scas lcall push std xchg pop inc (bad) (bad) (bad) pushl stc popa test adc jno lcall sbb ficoml dec addr16 mov (bad) or je sub sbb (bad) (bad) ljmp and ds andb push leave ljmp mov xlat mov push fsubs adc es test ret adc (bad) mov jp adc and (bad) call out add mov ss lods test inc lock pop addl (bad) jg adc xor call mov xchg pop adc popf pop mov mov add pop notb mov jp (bad) (bad) push rcll pop or push fld mov repz lcall (bad) (bad) mov pop fcompl fdiv inc cmp add repz jb cwtl nop dec (bad) (bad) (bad) (bad) (bad) aas jl jl mov inc jae push lea lods in lods mov adc int3 in xchg in call pushl xchg inc insb push daa and dec test jecxz pop pop ret cmc popa mov inc enter (bad) (bad) (bad) ljmp xor mov sub fs push add pushf push int sbb jecxz xchg cld cmp or decb pop orl inc lock (bad) (bad) (bad) dec jno in cmc add sbb lret rcl aas cmp mov adc push out push lods inc xchg insl sbb outsb shlb lcall (bad) jmp pop or (bad) idiv or cmp bound mov push adc out call sarb push fldl or in xchg adc lret pminsw movsl into in test mov mov adc cli mov jge and fimul jmp cltd dec push inc jp jnp jecxz fidivr add out mov pop add test xor jne push dec add mov aam arpl dec jecxz call cld cmc mov hlt les popf dec outsl test xor mov out pop (bad) xor outsl inc mov call arpl mov fdivrl (bad) call (bad) flds add popa or add leave push (bad) (bad) (bad) pushl push iret jne xor jle aas in ljmp shll push cmp enter lock stos rcl ds push add (bad) mov movl int3 adc loopne (bad) (bad) decl lret pop lods mov sub movsl xlat imul mov add ret sar (bad) fnstsw loop and aaa and add jge dec dec push out lds iret and (bad) ss (bad) (bad) (bad) lcall push pop aad fcmovnb in mov lret jle insb sub jnp ret incl sub xor adc lods out ret mov jl loope mov call (bad) xchg loope jle jecxz pop in pop cmp (bad) sbb rorb mov out mov shll in lods shrl loope add scas add mov ret sub (bad) (bad) jg mov fninit xor dec es out sti push pop jle cmp stos jae inc rol sbb push pusha aad jmp adc (bad) das and jnp idivb pop into repz inc enter lcall clc push or loopne rclb inc cmc xor aad mov insl (bad) (bad) (bad) decl in pop xchg popf test addr16 pop adc js daa das dec inc popa push (bad) and pop mov (bad) (bad) (bad) decl sahf ret cmp fsubrl push cmpsb roll fldt jmp (bad) in into js or lret pop (bad) ljmp rorb out (bad) mov jle outsl sub sbb push js cmp pop cmpsb sub ret adc fsubr iret (bad) (bad) (bad) out mov test mov pop push xchg (bad) sub inc jecxz jmp inc (bad) (bad) (bad) inc (bad) push mov negl mov push add add mov dec loop call and ljmp jno or fcmovb ljmp push mov in (bad) mov fldcw lcall or jp insb xor ljmp jo push pop roll pop or stos sbb out sub mov pop (bad) call add in cmc ja (bad) hlt adcl dec inc clc add sub cltd cmp add (bad) (bad) jmp repnz mov push mov sbb dec movsb lods push (bad) pop repnz out aam out (bad) (bad) (bad) (bad) jmp aas into sahf dec sbb fwait loop jl pop add mov jg les insl lret subb pop decl jp or mov mulb (bad) cmc and dec cmpsb mov dec loop int3 icebp call or insl inc fcompl mov dec inc ja xor ret fisubl sub xor imul push (bad) lcall or les sub pop mov icebp jg lock (bad) fdivl ror stos cmp jecxz jmp adc jge aas lea push or decl pop sbb cmp xor sub pop fwait xor into lcall (bad) push mov in fcmovnbe scas fistl or or adc mov (bad) (bad) jmp jno repnz mov and pusha inc mov ljmp ss lcall jno pop cwtl xchg inc scas xchg call ljmp out and aam or pushf sbb mov dec push (bad) jmp or add pop push jg (bad) (bad) js icebp scas mov mov (bad) cmp pop (bad) aas push jmp (bad) (bad) (bad) jmp enter ja and sbb rcrb pop stc or mov lcall xchg fdivs pushf sub cltd xor jg scas mov or mov sub (bad) (bad) inc inc inc call int dec mov in and bound fidiv or (bad) (bad) (bad) mov (bad) sbb cmp push jo and lret out hlt cmpsb inc cwtl xor pop dec jmp (bad) aas inc subl loop jb mov mov rol sbb push lds mov leave jge popa cmp mov cmpsb fistl les push lret (bad) (bad) in idivl xchg and push mov pusha ret fcmovnu enter fidiv cltd jp (bad) (bad) lcall aad jae jne cmp or or push dec cmc call movsb insl cwtl (bad) (bad) (bad) lcall js imulb cli arpl bnd pop inc or mov xlat in cli outsl xor insl lock sub (bad) (bad) mov adc xor sbb ret inc js mov (bad) (bad) call mov jmp mov jl mov popa adc jge jo push pusha pop daa jmp push fwait cmpb into cmc out popa cli push ret pop loopne std mov cmp cs aam cmp inc pop mov ds js adc leave jns in xchg inc pop inc cmp (bad) lea decl add dec outsb cmp in scas sbb icebp int arpl es mov inc out push (bad) data16 add pop push push jnp mov iret push jns cmc sbb (bad) (bad) (bad) (bad) ljmp test pop cmp mov xchg cmpl pop lods je mov rclb adc cltd push pop jg test dec push push add rcrl out xchg bound adc push add ficoml hlt inc mov inc push movsb jo jl,pn lods es (bad) (bad) ljmp inc out cmp pop out mov pop rclb push lock (bad) lcall test xor and imul mov xor lcall cmp dec cmc movsl aad mov add movsl movntps cwtl jb out stos leave (bad) (bad) jg fnstsw scas mov faddl sahf push jl cs lods mov mov adc (bad) incl (bad) js jp in in lret sub cmp aad add (bad) jg fsubrp adcl jo or and test rclb (bad) lcall lods jp sub aam mov dec adc adc test adc jg test mov (bad) (bad) out out mov pushf jg mov pop and mov popf and (bad) (bad) (bad) call or push mov cltd mov add je and (bad) (bad) cmp inc movb mov lcall (bad) mov mov sbb lret mov sar pushl xor js pop dec iret cltd lds ret (bad) (bad) call dec or or in icebp in cmp aaa fsts popf insb xor add popa adc jmp mov or cmpsl cli jbe pop add push dec popl div or pop xor cltd pop lcall bound rorl incl jns ljmp fbstp push jmp adc mov xchg xchg movb pusha adc jmp pushl sbbl loop in push insb fst or push popa xor (bad) (bad) (bad) decl jmp dec cli jnp dec mov dec ss sbb push sub adc push lret scas (bad) mov mov shlb xor sarl adc repnz xor mov cs repz lcall sti push xchg and notb insb jnp jnp pop add push sub leave or call dec fsub push push jae mov xchg leave test or push stc add leave and fiadd (bad) mov push mov dec xor push mov (bad) ljmp dec jnp (bad) xor lods dec mov data16 fcomp hlt jmp sti movsl aam div mov js inc (bad) (bad) ljmp fs outsl dec fistpll sub cmc stos cmpl incl mov add adc in ds xchg pop int loop pop imul vmulss xchg xchg orb sbb ret mov adc add jecxz jne push push sbb ljmp nop mov out faddl lret sub lcall sub int3 lret jbe mov adc and adc fisub fprem push mov xchg icebp call or loope hlt xchg sti cmpsb dec ret pushf mov cmp aad push sbb ret xchg les xor inc loope dec xchg (bad) pushl sbb mov (bad) jnp jle pushf outsb aas or lods push pop xchg (bad) pushl mov outsl jno js or jl stc pop pop outsl cld xchg dec sti ljmp (bad) (bad) (bad) ljmp leave ja xchg lret push push lahf jno mov rcr shrb loopne jno pusha xchg sub cmp decl insl repz imul pop cld ljmp in outsb mov pop cmp jo cli fisubr (bad) (bad) (bad) jmp pop sub call mov and icebp out cmc cmp add aam xchg xchg out ljmp sub cmp dec inc arpl (bad) (bad) mov adc jge pop push or pop adc cmp mov sub fwait and cmpsl sub es or jns jae lcall jmp in repnz ja sub dec (bad) (bad) (bad) (bad) mov sub xchg (bad) js fiaddl adc popa push mov add push dec scas xchg loopne mov (bad) (bad) (bad) call add dec pop je hlt shlb fidivrl pusha cwtl jbe lret dec dec mov inc cli fwait mov (bad) (bad) fild sub cmp pop mov sbb mov repz inc mov negl scas clc pop shlb mov (bad) pop adc por mov sbb stos push sub insl frstor xchg cmp mov add adc adcl pop nop mov cli jg mov or or pop (bad) (bad) (bad) (bad) pushl repnz push cmpsb or mov stos lds arpl loope xchg or bound cli jbe push stos xor int3 mov or adc std call popa push fcoml lods imul stos add cmp ret (bad) (bad) call repnz dec sbb mov mov push ficoml push cmp (bad) (bad) decl mov cmp outsb or add xor daa loopne (bad) pop nop addb jge repnz (bad) (bad) ljmp ret jo fldl mov mov adc pop or icebp fldt sbb mov jp sbb outsl (bad) (bad) (bad) mov aas repnz (bad) scas cwtl decl fmul jmp addr16 icebp aad test inc cmp lret pop xor scas add (bad) (bad) pushl (bad) aaa inc int pop mov xchg xchg or push jne ds cli (bad) ljmp jmp outsb imul push cltd jecxz xor lcall std (bad) (bad) (bad) cmp add daa rcl imul mov pop bound xor inc addr16 mov sub (bad) (bad) (bad) lcall aaa xadd pop sbb xor dec mov outsl adc mov adc push xchg dec add int3 add (bad) mov pop out dec pop out push jne sbb popa (bad) xor and (bad) pushl dec pop in dec popa jne lret rorb xchg andb dec pop mov std incl fistpl sbb loop lret mov loop or pushf std jp or std (bad) ljmp ficomp jg mov lds ret not (bad) (bad) call xlat in lods adc push stos jbe pop stc or (bad) out (bad) and mov mov mov pop ja add mov jo clc lods call sahf inc iret test adc pushf sbb jb xchg mov cmp push ja mov loop scas inc test pop add push out mov jns add pop or pop dec lret (bad) incl je ret daa (bad) idivb in lcall jmp aad (bad) fs test lock cld fwait and mov mov pop lock xor (bad) (bad) mov clc pushf push mov sub pusha mov jge movsl pop add ss int3 (bad) (bad) (bad) lcall (bad) jmp push mov adc pop push sarl testl (bad) fildll loop mov push lea into adc mov jo (bad) (bad) (bad) ljmp lods sahf jnp lock pop cli je test jge and daa pop xor push ljmp inc jecxz mov clc orl fs dec lds rorl (bad) (bad) (bad) push test sbb cltd imul repz push mov cmp out mov mov adc xlat sbb jg dec cmpsb add pusha adc test fwait xor ljmp pushf push nop dec cmpsb in mov inc jno ds (bad) incl dec nop pop or push test and inc fxtract push inc jbe movsb (bad) and inc dec rcl in push (bad) (bad) jg into jno leave jmp mov push add lcall (bad) int decb cmp imul pop xchg jne and js mov adc mov (bad) jns fisubl xchg mov and cmpsb jg dec insl push loopne out cld push adc test les std ja ljmp jl test jae (bad) xchg movsl add mov fisubl lods pop xor push fnop iret jne sub in and or cli xchg (bad) pushf mov jb mov lock sbb xchg adc push (bad) ljmp sbb repnz das sbb fbstp push sbb lret jns inc imul xchg push jmp sub mov dec fwait lret jne xor mov es in add cmpsb fdivr (bad) jg mov test fsub dec xor mov jl (bad) rcr stos call cld jmp testl mov dec xor icebp (bad) (bad) jg sbb push sub sbb sub mov push aas jbe ja fs cmp (bad) (bad) (bad) (bad) decl mov and push jge pop cmp in stc lret mov test jg (bad) mov (bad) (bad) mov adc lret call pop faddl jns loope jmp gs test jle (bad) incl dec lea shrb xor pop xor dec lret xchg out imul into push in ja (bad) dec pop jmp sbb sub mov aad hlt push cmp mov push dec mov (bad) jo pop pushl (bad) mov sub fcomps cmpsb sbb pop cmpsb lret icebp pop rol cmp xor popf jmp cs nop xor movsl fdivr pop add xchg outsl cli mov cld test in (bad) cmc sub shlb mov jl cli xlat icebp icebp push movsb jnp ljmp loope (bad) (bad) (bad) std push (bad) jb (bad) ds stos popa ret xchg push inc shl fimull dec out push dec repnz (bad) (bad) decl and push rcrl mov std jo in outsb imul bound cmp pop dec (bad) (bad) (bad) jmp movups (bad) adc dec mov pop mov sub sub iret (bad) push or xchg lret or and out push pop sbb dec xchg and (bad) (bad) (bad) jg jp shr imul gs (bad) mov mov and std jbe stos outsl mov loopne std popa push fbld (bad) incl test aas jo sar (bad) jno mov add push lret pop mov (bad) jg (bad) mov jp jle push jo int rol adc or xlat mov pop and jle push std sbbb cs shl mov pop jg dec push cmp repnz jg or out fldl xchg (bad) (bad) movsb test inc or inc in loopne mov mov fisubrl in roll pusha addr16 mov push outsb pop sbb (bad) or lods mov or sbb xor push mov lret ret scas mov add dec pop push jb jbe (bad) mov (bad) (bad) lcall mov or jmp and sbb ror rcll fldt ss mov cld mov adc add fsubl repz xor inc sbb lcall jecxz cmp pop mov jo dec mov mov in pop cmc jg int push mov pushf out nop add movsb push or xchg imul cli in jbe (bad) (bad) ljmp mov pop std aad dec lods mov pop jo adc gs pop inc pop jns and sahf stos (bad) (bad) in and leave sub adc push lcall xchg sub and ss jae cmp inc jno or lcall imul jo test inc push dec mov (bad) (bad) ljmp mov adc clc das push sub mov sbb lahf cmp xchg xor or pushl stc xchg shrl aam pop cs (bad) ljmp mov xchg imul insb add gs sub mov std (bad) push xor nop or push xor adc (bad) jg cmp popf xor imul fcmovnu dec cmp cmpsb mov scas (bad) (bad) out cwtl adc outsb ds jle ss dec push in inc jmp and (bad) jge out mov in pop jle js mov pop fcomp jecxz add loop les mov mov fsts (bad) sbb (bad) jg je dec nop fdivl cmp or adc (bad) hlt lock (bad) (bad) push push divl sti or lea repnz fistp pop inc xchg xchg fildll fldl hlt or rcrl add and pushl cltd stos adc jp pop loope pop imul loop lret mov push push test (bad) (bad) incl sbb push or lea sbb (bad) sub mov dec jl (bad) ljmp push in cmpb ss mov ja fild stc push stc dec (bad) (bad) pushl es ds cs mov sub inc sar lcall inc sbb je xchg and pop fldenv es aam (bad) (bad) call mov push mov push in xchg dec jnp mov invd cmp jbe mov ljmp cmp sub sahf sbb cmpsb arpl out (bad) mov jmp rorl (bad) icebp (bad) cmp inc stc xchg int pop xchg jbe rclb lcall jle scas dec adc cli orb or cmp push (bad) (bad) (bad) call (bad) fbstp hlt cltd ljmp xchg push inc xchg ljmp mov dec (bad) (bad) (bad) dec jp aas addl xchg mov das loopne sub loope (bad) push inc lcall dec dec lcall call and cmp pop dec shll mov sbb les daa sub lds push xor add insb cwtl pushl adc insb in (bad) mov unpckhps mov pop in inc or repnz mov push imul adc gs push sbb int cmp roll lds mov dec dec ror lods cmp mov push (bad) push lcall xchg jge inc sti aam adc hlt dec fadds lret jno (bad) mov (bad) (bad) (bad) ljmp push lods shl sbb mov rcrl xor or adc (bad) dec int jae xor mov mov mov test dec inc sbb mov out and push (bad) (bad) (bad) dec ss hlt (bad) sti popf ljmp inc cli enter xlat mov test ret and (bad) jmp sub divl sarl push ljmp inc xor jge popf (bad) (bad) (bad) (bad) jnp xchg fcomps loop fwait lahf idivb test sahf popa and shrl cs (bad) (bad) fbld clc mov imul sarl adcb fld add (bad) pushl (bad) in push push (bad) fiaddl leave dec jle and push int3 fiaddl insl xor and mov xor dec repnz (bad) enter lcall loopne mov ds les push push push push xor xor stc or (bad) (bad) (bad) in nop daa icebp fidivl (bad) loope xchg or mov cmp clc mov sar incl sub hlt (bad) push and dec mov das pusha and xor aam fdiv (bad) (bad) dec cltd fdivs lea pop add jae fcmovbe pop imulb ja call bound mov idivb and (bad) mov rclb jl,pt lret aam ss dec dec add jg int3 push ljmp fiadd aam sub jg lds call pop repz mov hlt cs sub xchg (bad) (bad) (bad) (bad) jnp push out cmp push gs mov pop cmp inc stc enter cmp mov inc dec clc jnp lcall call push fsubl (bad) jg (bad) jns popa jno loope test and nop repnz xchg cmc sub icebp ljmp xchg adc rol push ss jecxz cwtl pop mov scas mov push sub lcall enter popf sbb inc (bad) fisttp mov mov psubw pop addr16 mov or sahf cmp les push es mov jbe lret add in mov call xchg fs adc lds sbb stos adc in sbb (bad) (bad) (bad) fldt xor bound inc or test lods mov mov stos add add push mov xlat into adcl mov loopne (bad) mov xchg call call out cwtl (bad) mov pop xor fdivr (bad) push push fwait pop push push insb sub jno xchg sbb (bad) (bad) fwait adc mov cld imulb sarl scas or ret sar (bad) jg xchg bound movd jecxz cltd (bad) lret das (bad) (bad) ljmp cwtl mov andl push add lret leave imul (bad) pushl xchg in push pop pop inc in sbb lods xchg imul mov enter repz imul sti subb jmp pop fnstcw cmp pop hlt (bad) jle imul pop out out cmp sbb and in xchg cmc out push xor jb xchg push xor dec ficoml jmp (bad) cmp dec test movsb mov das cwtl inc je cli add outsl clc inc movsl mov mov jle scas sbb ja pop insl add jb,pt pop pusha add pop aad leave add inc adc (bad) fist cli jmp and push adc (bad) inc jg cmp and add sub roll int3 aad bound sbb out and cmc (bad) scas (bad) (bad) call rcrb insl mov test cmp mov adc cld popa stos js (bad) (bad) ljmp mov mov stc add lahf jno pop in daa rep sub hlt xchg leave (bad) (bad) (bad) incl sbb cs outsl lahf std cmp (bad) mov (bad) mov (bad) (bad) (bad) incl add jno adc lcall xchg jmp sahf fstps push adc fbstp outsl add sbb (bad) jmp or xor dec cli sub aas xor (bad) lcall es notb sub sub lret mov aaa aam clc outsl (bad) (bad) (bad) ljmp rcrl ja test in gs test xor jne aas jl clc and repz (bad) (bad) (bad) ljmp adc leave sbb popa repz add mov adc sbb adc (bad) mov (bad) (bad) (bad) jmp clc pop pop or mov clc push daa loop mov inc rclb ret or call mov dec jno nop loopne sbb mov xchg inc mov mov hlt mov jo loopne xchg movsb out aad (bad) xor push lret (bad) (bad) call push or xchg daa xor jmp xchg mov aad and jle xlat xchg (bad) (bad) (bad) decl or jl fcmovnbe inc sar inc inc std dec inc inc push and es inc (bad) idiv (bad) (bad) (bad) mov inc pop inc into push cmp sbb push cltd push out (bad) out in jbe (bad) lcall scas (bad) or lock (bad) mov add adc lods stos xchg (bad) (bad) (bad) push scas pop sti jnp test out fs insl aam imul xchg push xor xor cwtd clc and xor mov inc cmpsl sub in or je jecxz sbb pop (bad) (bad) stc xchg cmp jle xchg cs je enter std (bad) (bad) jmp call iret test mov mov add fcomip pushf dec in pop xchg (bad) (bad) cmp andnps sub in es stos (bad) cmpsl sbb insb sub subl pop (bad) mov stos inc or sub mov hlt sti sarb pusha call pop xor sub jle orl (bad) incl xchg pop sarb enter mov int3 je pop (bad) jecxz mov xchg (bad) (bad) (bad) incl leave and xor push mov mov stos adc ret mov enter adc test (bad) (bad) ljmp sub test or push jnp xor cmpl mov pop cwtl dec cmpsl jnp sub (bad) (bad) ljmp or mov ds jmp arpl xor cmp lret popf (bad) out cli das pushf mov mov out nop or xlat push cld in leavew (bad) (bad) (bad) dec cmpsb leave xlat push inc mov jmp add setns imul jbe clc cli (bad) (bad) pushl adc pop cwtl aam ds iret pop dec push sahf sub mov stos sbb push adc and in js fist test adc (bad) (bad) ljmp in testb lock mov outsb insb xor outsl movl push (bad) (bad) (bad) call cmp xchg cmp bound js shll loop outsl xchg inc (bad) add (bad) scas sub xchg push (bad) nop addb decl jns jp mov add pop push (bad) cmc sbb jmp jl iret xchg vcvttpd2dq (bad) fisttp jl cmp rol lret cmpsb cmpsl xchg add sbb inc outsb test mov and xchg sub xor mov and pop mov sub mov pop jmp mov (bad) (bad) (bad) fistp add aaa sahf jmp pop ss or outsb scas mov jle inc in fidivrl mov in (bad) (bad) push mov xor movsl loope jp xchg out dec xor dec aam jns cmp clc fcomip inc sbb sarl mov push (bad) (bad) (bad) call out movsb jmp gs mov fistpl dec or jmp scas ss rcr jl lock (bad) pushl adc out (bad) push pop popf xchg loope repnz cmp mov push mov movsl jmp mov (bad) sub push cmp push xlat icebp cmp push add mov sar (bad) (bad) mov cmc ljmp cwtl jmp pop icebp in je ja lahf mov scas mov (bad) (bad) (bad) ljmp pushf mov es adc gs or loope adc sub push sub pop frstor cltd adc cmp stos std jl mov ljmp inc outsb (bad) push loope mov leave shrb or scas nop jno mov mov add xchg int3 call loopne sbbl icebp (bad) (bad) dec jb xchg jns rorb (bad) push (bad) xchg movsl add loop icebp jg push and cmp jg and test in cmp std std sbb and (bad) cmp xchg xchg ficoml adc loopne mov jno pusha mov out add (bad) jmp (bad) lcall push xchg flds popw dec out mov icebp xor lcall mov not mov adc push cmp or (bad) push mov int push mov add lock mov inc sbb (bad) jge mov dec icebp mov (bad) (bad) (bad) (bad) cmp insb mov jb or shlb ljmp and fsubrs sar mov pop lods dec in out (bad) stos dec test test (bad) (bad) aas pop fnstenv sub fs jecxz jae dec out scas push (bad) incl std xchg clc xchg pop sbb stos movsl mov cmp ret test (bad) jg out sub mov adc inc outsb mov cmp xchg (bad) out cli add xor push enter xor es fs jns cmp (bad) (bad) jg xor es addr16 lock cmp or adc addr16 out int fbld sbb mov stc mov or sub ljmp outsb ss rcl or cli adc lret enter loope inc inc add sub xlat dec fisttp jl,pt (bad) (bad) ljmp or pop mov mov inc lds push repz fidivl push push lods (bad) ljmp movsl movsl lret mov sbb inc outsl mov mov adc pushf dec mov pop dec in lods dec mov loope cmp jg or in jmp data16 xor (bad) call js mov loop jge fst int3 fistl or enter and outsl inc test (bad) (bad) (bad) fiaddl pop addl mov imul (bad) decl iret dec sub pop (bad) or xor je (bad) and iret sub lock std lret cmp mov icebp lods es and scas fild fucomi stos int (bad) pop or push leave sub xchg (bad) push dec add (bad) jg xchg xor ja fld1 sub dec mov daa xchg icebp int3 lcall sarb (bad) (bad) lcall insb cltd jae (bad) pop push int inc pop sub inc ja push push cmp sbb mov scas mov leave mov mov (bad) fstpl cmp mov movsl lcall (bad) in inc (bad) or das add (bad) (bad) fdivs inc inc pop jnp pop sub nop and call add aam (bad) (bad) mov xchg jnp cmp pop out (bad) dec or push mov mov pop sbb (bad) (bad) jmp push inc sbb fs jnp out iret test iret gs fnstcw bound mov fldl (bad) outsb mov outsl xor (bad) loop xchg mov inc in (bad) in sbb sub adc iret mov and aas sub lea fsubrl (bad) decl ror cmpsl mov enter mov test lret mov push mov pushl outsb cmp inc popf push push in inc xchg pop sub (bad) lcall pushf pop (bad) pushf (bad) daa loope mov xchg outsb mov scas or cmc lods cmc mov popf mov push icebp das faddp popa call and cmp divl mov inc sbb movsl aas dec inc push int mov cmpsb pop aas mov (bad) (bad) ljmp xor xchg sbb or jge stos add adc outsl (bad) jl test (bad) mov (bad) (bad) (bad) jle push (bad) out mov jg cs inc iret push inc sbb pop scas adc jl mov (bad) (bad) (bad) call movsl test inc fdiv stos cltd push mov or popa cmpsl adc jne add jmp repz cmp ret mov data16 (bad) (bad) jg lcall pop cwtl gs aam push test dec mov cmpsl xchg (bad) (bad) (bad) push lea xchg cltd inc pop jmp mov and adc std cmp iret inc mov xchg enter pusha push jmp dec jns,pt mov (bad) (bad) (bad) decl dec ret rcll adc bound cmp repnz or in imul dec ljmpw mov mov xchg cld int and lcall call push aam hlt sub arpl (bad) (bad) pushl mov pop lods js cld pop or xlat xchg aas xchg dec cmp mov xor (bad) (bad) mov inc enter mov adc inc daa stc add pop bound enter sbb dec lcall cmp (bad) insb inc rcrb mov data16 scas sahf scas icebp (bad) (bad) (bad) jmp jg stos (bad) mov (bad) xchg ret fdivrl xlat mov enter adc clc fistp xor subl push jg push pop adc adcl fs dec or or (bad) mov or (bad) clc mov mov sub mov pusha (bad) (bad) (bad) jg (bad) out mov sahf mov xor (bad) and xor dec add cltd loop in pop (bad) (bad) (bad) push or ljmp aas imul stos mov inc std xchg mov imull cmpsb mov outsb iret stos aaa movsb add sti jle jge outsl rcrb jne mov jle jge jle (bad) (bad) (bad) incl (bad) insl lea sbb nop (bad) loopne push dec push shl (bad) jns jmp mov aad popa and pushl adc notl mov rclb sbb and cmc xor or (bad) jmp cmp pop insb (bad) adc sbb bound and lods add cmpl push frstor (bad) (bad) ljmp movsbl out and rorl and xlat lds dec xor xchg subb iret decl or or mov mov adc (bad) dec std pop cli add jg ja xor xchg insb xchg xchg sbb pop sub out (bad) (bad) (bad) decl adc cmp repz adc sbb test fst arpl dec xchg fimull (bad) (bad) dec (bad) repnz popa or aam inc mov addl (bad) jg (bad) movsb repz inc xchg mov (bad) xor jge popa (bad) (bad) (bad) ljmp call dec push sbb mov and mov mov pop xor (bad) jmp (bad) into push adc (bad) push pop out jns mov pop enter leave hlt out jg les (bad) jmp (bad) loope mov shrb xor sbb stos (bad) (bad) cmp jmp or cmp xchg incb jmp dec ds rcll or (bad) fcomip jg mov lcall dec aam adc adc jnp push pop (bad) (bad) (bad) decl push xchg jg fisubr imul ds outsb movsl int3 out daa jg (bad) (bad) (bad) (bad) cmp jecxz xchg fnstcw inc pop enter les and and sbb sbb rcrl and mov pushl test jg push out sub push rorb dec pop cltd cld and ret ficomp xor test push loope jne fmul mov cltd inc int adc repz jno idiv or push sub mov mov and push adc or lock outsb les rolb cld test ja pushl push sub test movsb sti in fldt pop lret test mov (bad) decl mov push ret inc pop and sbb (bad) (bad) (bad) cmp lahf push orl js xor sbb (bad) pop and inc pop xchg push push lret and aaa ret decl (bad) cmpl add xor dec test iret shll jae mov mov insl in xchg repz imul sbb sbbl cmp ljmp jne cmc imul sub movsw push add and call out aaa jecxz pushf adc push scas mov push and cmpsl cs call jmp int dec pop push das in movsl cmp pop lds or (bad) (bad) call aad (bad) inc adc inc jle in ds scas xchg pusha out sahf fwait (bad) (bad) (bad) jmp push cli pop mov fiaddl mov notl mov test adcb cmp cmp sbb call imul mov hlt es add inc xchg pop fildll loope jg xchg sub pop aaa cmp cmpb (bad) (bad) (bad) call insb or mov clc out (bad) push (bad) (bad) pop and push pop push (bad) (bad) in jmp and insl movl add fiadd and xchg cmc aas dec sub add (bad) (bad) (bad) in push add pop add cmp cld outsl out jecxz xchg popa je ja push jne cmp (bad) (bad) (bad) decl gs dec daa rcrl fist in out ljmp ja out or adc sub (bad) lcall sub mov xchg mov es push pop adc mov pop fild ljmp incl mov inc lahf hlt sahf rcr jle mov hlt mov (bad) out pushf xor push jnp mov cmp (bad) (bad) (bad) (bad) call mov and sbb xor push mov ficoml cmp das clc (bad) faddl (bad) testb fs gs (bad) in jo dec pop push sarl mov pushl lods sub clc xchg test push bound hlt sbb (bad) ds pop push jl mov mov sbb sbb xor cli pop pop jge cmpsb idiv (bad) incl scas xchg hlt xor jp sti adcl and (bad) (bad) (bad) inc xor and das fwait xor rep out lret pop adc fiaddl mov lods lds movsb (bad) (bad) (bad) pushl enter pop jne push mov mov xor pop (bad) (bad) mov lods imul mov xor ss inc xorb jg (bad) scas push dec ficom push lods movsl imul int3 sarb add fldenv scas pop outsl adc fbld mov mov loope add incb or fdivrs push pop shrb (bad) (bad) (bad) mov inc xchg mov jbe inc mov mov cwtl test mov push outsb lcall adc jp imul jecxz lcall mov sub push pop js mov jp mov ds into cwtl mov js insl hlt lahf mov adc popa pop push inc and adc mov jge add sub stos sub sub fsubrs and push pushf jg scas sbb mov imul daa dec cs daa mov ljmp xchg fs sarl inc lret cmp (bad) (bad) (bad) in xor idivl (bad) mov div dec ret pop cmc cmpsb mov loop out in (bad) (bad) jg arpl push pop sbbl or aam sbb imul dec fst mov mov icebp mov jl cwtl add inc xor idivl xchg mov pop test sub or int mov pop xor (bad) sbb push fsubl test add sarb or and (bad) pusha mov and loop mov xchg jbe inc call push jl dec icebp or int3 mov decl xor xor aas (bad) je dec enter outsl mov hlt (bad) (bad) (bad) call stos imul stos push in dec pop (bad) flds paddq (bad) (bad) ljmp (bad) fcmove out xchg jbe jmp (bad) cmp mov fwait mov xchg push lods (bad) out push movsb mov cmp cmp push or mov pop mov push (bad) enter ljmp lret xor push int3 mov lea or sub lea (bad) jmp push mov insl out mov lods movsl inc dec xchg sub lods (bad) fsubrl or das xor pushl mov jle fcompl mov sbb dec (bad) (bad) (bad) pushl sub sahf pop (bad) jo pop nop mov cmpsb test xor xchg cmp ror pop orl xchg test loop std and or pusha or (bad) cmp and cs jno mov jl dec add in jmp int3 push and negb stos sbbb lods (bad) (bad) lcall jae sub sbb sub pusha inc sub movsb pop (bad) incl cld mov lret xchg clc xor cmp test repnz popa cld xor std (bad) (bad) incl dec jne fwait cltd mov ljmp mov sub popa int3 push pop aaa mov adc movl fildl cmpsl (bad) (bad) mov into hlt popa and scas cmc (bad) int3 push jmp pop mov push adc (bad) (bad) aas or adc aad xchg cmpsl les adc das xor sbb imul loop aad xor mov sub pop fisub push pop adc (bad) (bad) (bad) incl loop sbb negl dec or dec cmp in insl das leave mov xchg (bad) mov dec call mov cli in jecxz xchg int mov std (bad) (bad) decl cltd add jmp xchg mov pop push and dec fdivrp loopne dec ljmp cmp xchg sti es imul add nopl or loope (bad) ljmp call stc push sub sbb inc jae inc imul mov decl sti hlt mov in js mov (bad) (bad) cmp jo (bad) mov xchg sti jb adc fprem test pop dec lret xorb inc test and jb (bad) (bad) (bad) stc adc pusha insb jg sub cmc jp sti lret push xor pop (bad) cmc and loop push (bad) (bad) decl dec pop jl repz aas das (bad) pop xor in inc fcoms mov std pushw (bad) (bad) ljmp (bad) xchg jmp lock jnp jmp mov sbb xor movsl push fs (bad) (bad) (bad) jg movl or insl mov jle loopne pop js mov lock rclb or (bad) (bad) decl jo or inc lcall movsb mov xchg test hlt jecxz fildll push mov leave pop int repz iret jo in xchg mov or decl lret cmpsb push adc jb mov or inc js mov mov mov and dec das je cli pop mov clc data16 (bad) jg push xchg (bad) push shrl jecxz mov jl stos movsb push or and mov shrb mov xor mov je (bad) jg fnsave mov addr16 sbb xor mov sbb xchg sbb (bad) (bad) (bad) pushl pop xchg rcrb leave call xor out (bad) jmp sub ja fdivp (bad) lcall je dec push adc rorl sahf sbb rcll data16 aaa mov fild iret data16 push push xchg cmp adc (bad) decl pop lock mov fdivs push pushf andl jne pop sub (bad) sub mov sub leave push adc mov lock in imul sub (bad) ljmp and add mov jle pop data16 (bad) cmp (bad) (bad) decl sbb or xor add (bad) mov ds and rorb loopne (bad) in incl int3 jno stos mov mov test sub cmp (bad) fcomip lcall sbb bound cmp lcall sbb data16 in xchg cmc into mov enter jge repz (bad) (bad) (bad) jg stos and es fld fwait dec nop sub dec xchg or jmp sbb scas js adc (bad) pushl push sbb mov cmp and pop lods nop adcb cli add sbb dec xchg adc (bad) mov in lret and xchg push lahf ret adc or jns (bad) (bad) (bad) ljmp dec mov out sub nop inc mov jmp lahf dec loope adc add dec jns xor cmpsl movsb mov fdivr pop add xchg test sbb push or test rolb and sub jb and mov lock (bad) out push dec scas inc mov add xchg jnp shlb (bad) dec inc pushf stos test insl sbb lods cmp cmp mov ds pop mov (bad) (bad) (bad) jle adc and mov jnp int xchg fmulp or scas add (bad) (bad) fistp pop lods outsl sbb fsubrl mov lds pop ficom dec loopne pop iret push cmp jg (bad) (bad) incl mov imul mov sahf push fiaddl (bad) (bad) mov adc xchg xor fwait mov push int3 sub pop loope mov mov sbb es lock out inc lock insb xchg jle rcll mov addb mov jmp rorl std iret dec iret add inc mov push gs xchg in (bad) decl mov lds mov sub xor (bad) jmp rcr into xchg out call inc ljmp (bad) fstl sbb movsb and lods ljmp dec dec and xor jne xchg or inc rolb xchg std (bad) lcall and fsubrs stc sub xchg pop lds cwtl cld (bad) (bad) call inc pop cmp push cli or mov cs and jae mov addl (bad) push outsb loopne (bad) decl xchg ja push mov push jb mov (bad) call int3 fidiv rorl imul xor cmp iret lcall cmp out push push add sbb mov and out mov (bad) (bad) decl cli add push jb xor (bad) sbb mov (bad) lds stos mov adc mov into int push inc jbe xchg fidivrl cld (bad) mov outsb fcompl xchg mov cmpsb int3 rorb adc cmp loopne cmp xchg icebp lret leave dec mov pop pop mov or lock insb stos outsl xchg mov fwait ja and and int (bad) (bad) (bad) fisttpl int mov lret lahf pop pop in pop xchg insb (bad) mov mov add mov (bad) (bad) jmp repnz pop mov out loop push orb insl clc push cmp mov mov cmp pop jbe lods sub scas cwtl push fistpll loop and sar mov ret (bad) ficoml or jb inc lock (bad) mov lcall fucomp scas std sbb lcall (bad) decl xchg cmp mov inc push pop or aaa (bad) bound cli call lret sbb shlb nop xchg lock pushl hlt add lds dec pop in sarl cmpsl adc addl and std jg dec in xchg xchg xchg es jmp adc and adc (bad) jg mov cmp out cld jne sahf movsl xor push jmp (bad) (bad) (bad) (bad) mov out lods stos hlt xor mov stos in dec in ljmp (bad) (bad) (bad) call jmp pushf fs lahf add sbb xor mov and (bad) (bad) push arpl push jnp add bound int mov mov jmp lea mov fistl mov stc (bad) (bad) (bad) mov pop pop mov aas repnz adc andl test sar (bad) je pop add push hlt jo leave imul test or or push push daa in movsl sahf fistpl ss adc or mov clc stos (bad) jmp popw adc jmp ret nop in dec into adc add mov data16 xchg clc pop out (bad) cmp lods add es les out or repz (bad) (bad) clc (bad) add dec pop or push jns int addr16 lock xor test or cmp pushf shl (bad) pop aas add fdivr (bad) jg pop ljmp inc push gs pop jg push jae xchg jmp inc idivb pop mov ss (bad) dec (bad) jno loop jg (bad) scas repnz out mov cmp and (bad) mov jo mov (bad) mov fsubs sbb or add es xor push out cli incl icebp (bad) in das iret mov andb add (bad) (bad) (bad) pushl pop cmp adcl push jle stc push push adc push sar xor scas push pop mov mov adc mov mov mov fisubrl pop clc or mov pop (bad) (bad) (bad) jg cltd loopne jp imull fistp loopne cld fptan push mov lcall and arpl (bad) (bad) decl xchg adc add in push and mov sbb mov js xchg push fnsave pop lcall lock adc test cmpsl (bad) jg test cmp popa add push mov dec xchg push push pop xor adc rcl mov (bad) mov lds cmp jecxz add xchg cwtl std movsb jns lcall push gs (bad) xor push (bad) (bad) (bad) call xchg inc cmp (bad) out jg out add lret adc add xchg pop xor push adc ljmp jnp pop insl loop aad cltd jge enter mov (bad) inc pusha dec mov (bad) (bad) mov cld int3 lret mov in mov mov shll (bad) (bad) (bad) lcall mov sub gs std fwait mov xchg loop,pn (bad) xor (bad) aas mov incl lahf jmp mov sbb mov mov inc and adc roll (bad) (bad) (bad) mov imul dec adc or inc push or mov add call pop jnp inc loop sub sub push cmp lods aaa (bad) (bad) fbld push out or ds mov cmpsl mov add int loope jp or (bad) mov or pop fcomps xchg pop js lds jmp mov cmc insl cli scas clc ret popf add pushl je pusha push jmp xchg (bad) (bad) (bad) jmp arpl jbe mov mov decb pop jmp cmp imul ss xlat mov andl lea in lcall mov sbb (bad) test (bad) decl out jb adc mov inc jle jne daa clc idivl adc (bad) (bad) ljmp dec out in push aad or movsl pushl loop xchg (bad) jge lods aas xchg pop add pop add inc iret jo dec and nop lea mov mov push mov xor cld cmp jbe rorb jnp cwtl mov xchg out mov (bad) jmp (bad) cltd imul inc shll mov pop bound jae mov fnsave (bad) (bad) ljmp lret push stc sub lret je sbbl mov and (bad) in or orb nop lahf subb daa cltd cmpsb (bad) jae lea pop sub dec jo sbbl mov mov rorb cmp xor jge (bad) xor adc jmp (bad) ljmp fwait int dec jg imul sahf add (bad) (bad) call pop inc or dec mov hlt test out add mov adc xchg int3 (bad) decl decb add adc sub xchg (bad) ss ss gs (bad) jmp xchg mov insb iret cwtl dec (bad) mov push xchg push icebp mov rol and mov xchg fildll jb data16 dec loopne fbstp scas jb les mov push stos push jp mov sub push cwtl push cmp mov icebp adc insb adc push out std dec sti mov scas fidivl mov (bad) (bad) call les inc scas pop pushl xchg cli and cmp fs hlt movntq out pop mov aaa pusha cld mov lret roll (bad) jg mov dec and stos pop (bad) cmp (bad) out dec stos lods (bad) mov ljmp sub sub ret inc push dec sar jmp xor jae cmpsb (bad) (bad) push sub mov adc adc add xchg mov out sub out clc jg inc and mov decl lock aad lods adc or ljmp adcb jmp pop jl cmpsb sbb adc jp fwait dec imul mov xor mov mov fpatan dec adc push or jp (bad) pushl inc jl push mov out push or mov loope,pt lcall lcall dec xchg in xchg push mov adc sbb sub and mov xchg xchg (bad) pop int xchg clc mov popa mov add (bad) (bad) call add xchg xchg sub mov sbb addl xor stos (bad) (bad) (bad) dec lods xor (bad) ret pop cld push xor es xchg inc push adc daa lret clc decl test mov mov (bad) and in dec xorl xlat aam aad mov jle jo lods push (bad) mov pop jo pop jmp icebp mov ds add sbb mov (bad) push loope cmp xlat pop or jbe repz loop je cmp stos (bad) jmp push fild lret sbb ret sbb shlb (bad) sub jmp dec mov outsl sub jae inc inc ficompl lret (bad) adc jo (bad) (bad) jg and mov xor mov insb push xchg ljmp jns (bad) (bad) pushl pop jbe dec mov inc lods sub jae adc mov rorl (bad) (bad) call (bad) mov scas outsb mov je out pop mov cmpsl adc das mov cmc jnp loop and inc (bad) (bad) dec mulb xchg adc cmp stos lret insl lock mov aad loopne cmp sbb sbb adc xchg mov stos inc test (bad) jbe xchg mov sbb shl sub xchg leave mov (bad) (bad) (bad) (bad) mov push rcrb inc out or xchg xchg xchg push xchg je fsubs mov and push xchg push sub jbe subl clc push ljmp cmp push orb push (bad) xor push (bad) in or out sbb mov mov mov pop mov sbb mov (bad) fadds (bad) (bad) jmp cltd je xor dec xor mov jmp addl add loopne add das sar aad dec lret (bad) (bad) jmp popa (bad) xchg movsb int adc jle inc sub or (bad) cmp popf add (bad) jmp push cmp stos lods in jl (bad) mov rclb mov hlt (bad) lcall lock mov insl arpl lods cwtl aas jno outsl push push pusha cwtl (bad) mov mov roll and test clc push sar or (bad) jnp dec cmp loope (bad) (bad) pushl xor testb lret dec cmp stc cmpsl fimull xchg mov sub fsubr jo loopne mov sar pushf dec out xor (bad) test inc roll xchg adc pop ljmp inc rcrb sbb lock call rcrl mov test push xchg (bad) (bad) call push add inc (bad) hlt and in popa lret clc icebp sti shll enter xchg test loop jl xchg mov fcompl icebp pop mov fld aam outsb push cli les add sbb stos cld test (bad) jg cmc push shlb out push sbb idivl dec (bad) insb (bad) jbe sub sub (bad) sar incl movsb or add sbb out mov outsb push cmovns push lret (bad) (bad) decl jp and pop pop movsl sti mov lret cli xor (bad) (bad) (bad) lcall add xchg pop pop jmp xchg xlat mov add inc cwtl mov inc xchg push pop leave mov sahf mov hlt int jo jae xor icebp or (bad) decl aam jmp mov ss xchg (bad) loop addr16 and inc mov mov std (bad) call inc mov fwait xchg dec pop lock push in xor test (bad) (bad) (bad) call dec aas and test cmpsb jmp cld mov jnp sbb in mov (bad) jmp adc shl fcompl inc add jb jecxz pop jnp dec nop mov mov fldenv cmp loope sbb ljmp imul mov inc sahf mov (bad) lcall (bad) xor popf push push jmp or leave mov call dec cmpsb mov loopne adc push pop popa adc mov jg or (bad) (bad) (bad) call arpl fldl jecxz push test outsl mov dec cmp pop jge xchg gs (bad) jmp cs sub mov stos dec jl mov mov (bad) mov arpl jge mov push adc push idivl add out add gs mov fstpl mov jl adc fdivr (bad) (bad) (bad) fsubl pop mov add dec xor int sbb sahf and add (bad) inc icebp cmp divl mov jbe mov xor mov sub xchg popf xor dec (bad) pop lods repz clc cmc std stc fwait (bad) xor add (bad) add inc xor and xchg aad xchg mov je fstl sub xor mov out push dec jle roll pushl push rcr fiaddl push shrb es cwtl clc sbb insb pop mov lds cs push cld ja mov push mov fs (bad) (bad) pushl int3 addr16 adc jl push mov loope addl (bad) incl icebp fisubr sub jb in cmc gs lahf adcb int enter sar xchg push js addr16 pop shrl inc (bad) (bad) call (bad) aam nop repz mov aas test loope pop into stos mov mov call mov add clts scas movsb dec mov fucomp sub mov call pop mov sub or test out mov (bad) mov mov xor decl negl outsl add stc adc movb or push ljmp icebp mov sub popa (bad) out xchg xor nop nop (bad) (bad) (bad) (bad) aas and cmp inc lds out inc mov sahf sbb jmp std (bad) (bad) mov inc outsb out fsts lret scas xlat dec xchg test cmp loope push repnz insl aaa push and lea sbb (bad) (bad) pushl aas mov xor mov mov inc (bad) fsubs (bad) mov dec push sar aam mov lcall xchg (bad) outsl or mov push mov cli (bad) out jo sbb cmp stc xor (bad) stos lret adc (bad) ljmp enter mov (bad) cld mov jl jae xchg pop lods in (bad) (bad) jbe (bad) (bad) (bad) (bad) hlt (bad) inc (bad) imul popf imul pop addr16 call xlat jo lea push (bad) decl xor out mov lret aaa testb (bad) (bad) jp test loopne jecxz scas das mov push pop xchg cli ffree int cmp cs sub addl in and vpshufhw loop ret pop fistpl int3 dec dec jbe fdivl mov cli in (bad) das incb adc (bad) (bad) (bad) (bad) mov sti mov data16 test add or xlat dec mov decl xchg (bad) arpl rcr outsb test mov addr16 dec dec cmpsl push ret test cli (bad) pushl pop idivb xchg jne aaa sub adc add fwait incl cld (bad) cld adc fimul xor and or mov mov mov (bad) adc aad mov movsl clc pushf push jb loopne insl (bad) js mov aaa cld sbb gs add loop insl push and (bad) call lret pop mov insl fdivs out stos mov sub cmpsl dec out std lcall jp dec outsl cmp pop xor std lea addr16 sbb imul hlt jle fadds mov (bad) xchg stos aam cmc lods pushf sub aaa or mov (bad) ljmp and and push ffree mov icebp push sbb ja cmp cld test cld out das mov bound xor imul pushl outsb lcall iret dec rolb cmc repz (bad) (bad) (bad) shrb adc cmp inc scas fidiv fistpll or xor (bad) (bad) call insb in insl lods inc xchg ffree enter lea jb aas fsubrs je lcall (bad) (bad) (bad) in push jecxz hlt fdivrp xchg js scas push push ja js sbb push mov cltd rorb pop push sbb outsl clc (bad) call xchg clc pop sub cli call movsb movsb cmpsl ja stos into insb loope inc push (bad) xor (bad) (bad) lcall outsb adc jg loope lret or cltd adc push xchg mov (bad) jge add (bad) pushl add inc jae sub push mov jge in aaa inc mov dec es cltd mov inc (bad) (bad) (bad) js lods icebp (bad) inc lret roll aas lock push es (bad) (bad) (bad) mov jecxz mov xchg js add mov insb lock mov mov (bad) (bad) (bad) jmp adc pop popa sub mov sub fsubr lock in jbe test mov inc pop ss push imul out xchg jb xor rclb cli inc sub and dec xchg sbb leave nop (bad) (bad) (bad) (bad) fstpt and xchg mov arpl into std int pop scas adc orl jo adc dec sti mov (bad) jnp aam lret (bad) (bad) (bad) ljmp and pop je add or dec push lock inc xchg mov aaa or fcmove outsl (bad) (bad) call xor xor xorl adc lfs dec cmp scas jae (bad) (bad) cmp add rolb popf in cmc ds jmp cmc (bad) incl sub push in and sbb das popa push inc leave jle mov and test lock pop mov std call xchg add out es dec dec (bad) pushl or mov stc loope in (bad) fbstp daa cld add imull or rclb scas arpl fsubrl (bad) (bad) pushl adc mov fdivl add icebp dec mov or insl push sub (bad) incl sbb je out push notb pop (bad) js (bad) jg or jl cmc cwtl shll mov xchg cmpsl inc cwtl sbb and cli push pusha mov or mov xchg loop and and stos cmp or rcrl in mov sbb (bad) (bad) ljmp fcompl pop sahf lods loope push cltd dec dec mov lds jmp lds imul in outsb adc enter mov cmp icebp cmp jns mov ss push inc pop stc popa out xor in pop jge fistpl mov dec outsl loop (bad) decl (bad) jb adc sbbb cli xor (bad) (bad) decl (bad) pop jg pushf or out cmc in leave xor add (bad) xchg mov xlat (bad) (bad) fisttp adc out nopl fwait out ljmp cmp std aam in xchg xchg fucom sub push movsb jmp lock push mov pushl in iret mov or mov sub faddl jno loopne repz cltd xchg or nop les (bad) out add mov lods pusha sub pop push lock clc jbe sbb je mov fcmovnb (bad) (bad) (bad) (bad) jl (bad) fsubrs (bad) sbb mov jmp and ds mov (bad) (bad) (bad) (bad) out pop inc mov call fdivrs (bad) cli fwait sarl push pop daa imul jb mov (bad) (bad) (bad) ljmp xlat add in jg sub rolb out jno jnp dec imul sub add cld adc cld cmp jmp (bad) (bad) (bad) jmp arpl mov adc sub repnz (bad) jae lock cmc dec imul rcll data16 repz popa jbe mov dec pop js sbb clc and scas es (bad) (bad) (bad) (bad) fistp cmp cltd adc xchg xchg jmp js mov (bad) xchg mov test aad mov mov adc mov xor faddl dec or cld aaa cltd and (bad) (bad) inc fldl adc sbb int gs fdivr add orl dec (bad) (bad) ljmp ss lcall adc cmpsl cmpsl sbb mov add in outsb ret sub iret arpl jle (bad) call addr16 mov add inc cld (bad) mov xor dec ja inc outsb mov leave sub cmp jo stos or and mov inc cmp sub das adc pop rol jecxz call (bad) aas iret movsb or xor inc cli sub cmp and mov inc pop jp (bad) (bad) (bad) call neg sub shrl in lea mov arpl lock sub dec add mov (bad) int3 subl sub xchg (bad) (bad) (bad) (bad) pmulhuw movb xchg icebp mov jnp xor dec daa cmpsb stos sbb call icebp sbb jecxz push mov sub adc mov pop pop jae cmc loop jmp adc sbb inc not pushl call mov mov sbb jl (bad) sbb lods das (bad) push outsb lock mov pop subl jge adc and stc adc cwtl sar (bad) ljmp pop mov cmp add test pop lds lds dec inc (bad) (bad) (bad) jg lahf or jo or iret adc data16 inc pop flds xlat mov lds (bad) decb int3 test arpl mov test jge (bad) (bad) (bad) incl jno enter xchg std lds pop shrb add scas das xchg mov (bad) ljmp or call jno repnz (bad) dec (bad) loope inc xchg push out clc (bad) call sub sbb in mov lret mov push das jle push int hlt lods pop (bad) and or mov (bad) jge push fwait mov test adc (bad) adc push in in pop aad cmp ljmp cld sbb shlb adc cmpsb (bad) loopne mov cmp jl inc in dec xor adc (bad) mov hlt sbb cmc cmp mov cwtl fldl ficoml push test rcr stos in into icebp jbe sbb jae adc out xchg mov imul cld dec cmp push lahf adc (bad) mov mov lock pusha sbb (bad) ljmp lcall and xor (bad) pop inc adc lret or push cli xchg adc (bad) lcall dec xor mov out push xchg adc aad mov and loope xchg sbb repnz cmp icebp popa pop dec xchg bound sahf out (bad) ljmp pop mov pop xor push sub push pop imul (bad) mov or xchg (bad) xor test or jne add add stos int3 es mov adc pop mov lods arpl jge lock cmovb sbb xchg mov push notb loopne mov (bad) (bad) (bad) lret lea jl cmp mov or into mov (bad) (bad) (bad) (bad) call shll inc xor dec xchg jmp mov loop sbb jmp pop sar pop dec inc jbe in jle adc outsl call out (bad) (bad) jmp je mov add outsb cmp or in aam lock (bad) pushl mov sbb call inc mull push cmpsb mov or imul mov subl mov cmp mov mov adc mov cmp xchg int3 add adc and (bad) (bad) lcall out int cli in xchg cwtl movsb inc push and inc loop divl (bad) lcall shrb stos mulb cmp test fcompl cli int sar (bad) sti repz lcall xchg dec rorl and jle rorl dec orb leave (bad) push push pop mov xchg xlat in dec sub and add sbb icebp mov dec xchg or jl fsincos stos (bad) into test or mov clc (bad) fisubr push jp push mov mov or js (bad) (bad) inc fstl mov outsb shr adc dec rorl lcall (bad) jmp in mov daa sbbl cmpsl in ss add cli (bad) mov les ljmp push ret (bad) scas sbb loopne js jno jnp mov sub xchg (bad) sar (bad) (bad) fbstp and roll in inc outsl sbb insl push push fldcw int3 lock add (bad) (bad) jmp cltd mov iret pop sarl daa (bad) mov push sbb dec test sbb int xor jb mov mov ja dec outsb push icebp xor loop pop outsb sbb push and jecxz mov push fnop inc xchg jo add into clc popf out mul ret addr16 (bad) lcall jmp pop dec and stos lahf lahf outsb push imul call rdmsr in int in idiv (bad) (bad) jmp dec (bad) test cs inc das lcall stc mov pop lds nop pushf (bad) mov pushl cli popa test rcl pop and (bad) (bad) (bad) lcall out psubd pusha xor pushf popa lret js adc (bad) dec lods fidivr jg or lret add rcr push je movsb (bad) ljmp (bad) loop xor repz ds sub lcall add adc xor (bad) (bad) push fmuls and dec clc in out lods dec insl sar adc scas pop xor (bad) pushl jmp adc jg fisubr mov cmpl mov cmpsl jge jg ret pushl fldenv lock add scas (bad) jbe or addr16 mov lock jl jmp dec (bad) fcoml pop mov fidivrl enter out (bad) (bad) pushl sbb fildl adcl jg stos add inc in (bad) (bad) incl mov and sti inc inc add int3 xchg insl lds add rolb out sar jmp and mov mov push mov pusha push imul (bad) call jl mov (bad) mov dec popf popf and in scas (bad) (bad) (bad) (bad) mov insb out int jno fbld cltd (bad) test dec lds lods jmp sub pop movsl cli push push clc xchg lods pop test lcall ljmp nop mov pop lock addr16 test (bad) pushl cmp adc push scas (bad) outsb mov std pop fistpl jge (bad) (bad) incl js mov inc sub les addr16 cltd xchg iret inc out add lock repz inc xchg (bad) lea inc xor (bad) (bad) (bad) (bad) div sbb call in mov mov dec mov or push (bad) ljmp je sbb pop mov mov xchg sti cmp stos jmp ret inc ds jp (bad) (bad) (bad) stc mov push mov cwtl inc and sbb gs mov dec pop js xchg cld adc clc dec jns jmp fild adc push das mov xchg (bad) popf shll sub call jge cmp call (bad) (bad) mov xchg mov imul sbb jno mov enter dec jl (bad) (bad) (bad) (bad) decb add sub cli repnz aad ret push pop out cltd fmuls cmp (bad) (bad) push adc pop ljmp adc dec arpl out push mov dec (bad) pusha pop pop cmpsl dec (bad) (bad) (bad) incl jl mov inc mov pop movsb pushl lock cmp and (bad) (bad) (bad) fisubrl inc icebp scas inc mov mov sbbl mov mov jmp out jecxz (bad) lcall push int3 (bad) aam insb loopne imul pop or dec lcall push (bad) (bad) lcall sarl sub insl aam push mov imul and add push jl ret movsb xor rcpps and (bad) xchg and sar call dec add sbb aaa daa cmp (bad) clc mov into or (bad) lods clc xor inc xlat mov cmc xor jnp icebp inc and cs (bad) xchg je cmp mov pop repnz (bad) (bad) (bad) cmp mov push rcrb push add xchg leave mov cltd xor xchg test (bad) and lods cmc xlat (bad) (bad) ljmp insl xchg adc add fstpt mov ret pop cltd imul cmp inc dec je mov out sbb dec std mov (bad) test jle cmpb insb popf mov mov (bad) out cli and jbe pop inc popf out (bad) (bad) sarb (bad) lcall and and sbb cmp pop xchg (bad) fisttp and jle and xchg call mov or pop xchg loop push aad sbb sahf jne cmp cmp ljmp inc dec sbb sbb stos sub push sbb adc (bad) (bad) pushl mov aas and std outsl mov cwtl adc dec push jmp jg ljmp mov xchg and (bad) in pop xchg ret (bad) (bad) ljmp negl hlt inc jb outsb or lock shll xor in or out add pop cli (bad) (bad) lcall add stos sub (bad) fmuls sarb adc test (bad) call fsubl sbb lods pop mov nop xchg loop lahf mov pop loopne pop xor jp jmp enter sbb jge std lcall pop adc inc and shlb fdivp arpl hlt inc mov mov ljmp xchg lods push xor push ret ss mov push hlt mov mov pop stos (bad) (bad) (bad) call popf test enter xor push ljmp sub pop stos sbb push pop sub aaa mov jae cmpsb push inc jp cmc jg scas dec jp (bad) loopne jnp (bad) mov (bad) cli bound cld cmp sbb add jg jb adc jne repnz and fidivr mov sti andl stos mov das add lock pushf add (bad) (bad) decl inc fdivrl fild jae lods mov shll stos lds pushf mov les std pop cmpsb je ret or (bad) cmc scas fldt in xchg incl bound scas test lea jmp pusha movsl xchg fnstenv ds pop mov js or loopne mov es mov (bad) ljmp xor ja ror add jg fldt test (bad) (bad) ljmp cltd sub pusha lret lret mov pop (bad) or add fild iret aas popf mov push sub cmp mov data16 int iret mov in mov out xor and stos xchg pop stos mov stc mov (bad) (bad) (bad) pushl pop push movsb lahf test inc nop stc mov mov popa jbe sti mov js mov aad in inc pop cli fisttp inc adc xchg loopne repz jmp mov (bad) (bad) mov or jb mov clc fcmovnu sbb scas xchg and outsl incl dec mov fmuls daa pop pmuludq mov outsb test push sbb ds cmc test (bad) xor xlat (bad) (bad) decl mov dec fbstp mov mov mov fisub jle jge pop ret cmc hlt outsl xor mov jbe adc (bad) (bad) mov jns outsl int pop aas add stos test mov jo sbb xor stos das cmp and and (bad) pushl lods testl adc mov pusha jecxz test mov mov std ret mov arpl inc xchg ja push push pop and incl adc mov mov (bad) scas fsubrs pop adc sbb loope dec addr16 lcall sub mov cltd test (bad) int3 push lods ret outsl cli movsb (bad) into jle push shll push mov jo and inc cld mov (bad) (bad) (bad) dec dec rorb mov ror nop mov adc jbe fdivl aam rorl pushl popf fwait or sbb jecxz mov stos mov cmp aad insl mov roll (bad) call ret fs sbb je sbb jno test mov loope hlt jb (bad) jg mov cli inc movsl ss xchg pop pop (bad) xchg dec inc mov xor add (bad) pushl aam add lods inc js cmp scas adc movsl orl mov mov inc pop jmp mov jmp xor ror out lods jne pop pop cmp scas ja lds ss (bad) (bad) (bad) jmp dec mov test xchg mov inc sahf dec aaa mov inc aad mov call (bad) mov stc pop sbb sahf adc (bad) xlat mov push (bad) mov outsb push jp iret adc test stc lret (bad) (bad) call pop pop push xor movsb scas mov mov xor (bad) loopnew mov xchg jecxz (bad) loopne or leave inc out xchg xor mov jp mov (bad) pusha fadd das (bad) xchg xor insb or add cwtl es xchg mov fcomip (bad) mov sbb dec roll xlat imul push mov (bad) (bad) (bad) ljmp adc cmpsl inc lea xchg jb mov in add jge add sub cli (bad) (bad) cmp adc cmp xchg xchg sub subl (bad) out into inc call (bad) mov jae (bad) out cmovo (bad) (bad) (bad) lcall popa jnp or mov push aad paddq insb inc lahf aas nop lahf xchg and inc scas pop xor add (bad) (bad) jg push dec add cmc leave xchg push lock sahf push out insb int sbbl lods cli jl das cli (bad) pushl inc mull push jle dec adc lret out aaa push mov pop xchg (bad) in dec mov sbb lret mov (bad) pushl hlt sbb test fildl repnz sbb (bad) stos pop cld lahf pop (bad) int3 fcmovbe (bad) mov fbld add ja add sub xchg fisub cli outsb jp lock (bad) jmp mov enter pop das roll adc pop xchg call cli add icebp mov dec out mov (bad) (bad) mov enter mov mov iret jno mov xchg (bad) xor (bad) lcall inc pavgw mov inc or (bad) hlt and xorb repnz lahf ja (bad) (bad) (bad) fldcw call repz gs push adc out push jns inc pushf aaa loop (bad) (bad) incl xlat mov jne repz sub cs mov jnp fdivrs (bad) decl dec inc imul fcompl xor clc (bad) jg jne or fwait loop shrl ljmp js popa popa mov push (bad) ljmp into mov adc insb mov pop fdivrl test pop sbb int lock imul or (bad) out clc incl push test and mov inc rcrl lcall pushl jnp dec insl sub mov arpl adc test cltd inc cld stos rcrl push jg mov popa ret xor rcrb out pop pop push imul fwait and scas xchg mov ljmp in xchg (bad) aad ffree xor inc imul out daa cmp (bad) (bad) (bad) ljmp outsl out dec mov scas push push bound cmp leave ficomp sbb (bad) lcall test jbe fs cmp adc jp mov xchg ret jmp and dec push (bad) (bad) (bad) jmp dec cmc loopne dec in mov out sub mov cmp les and mov sahf mov leave fsts inc jns (bad) decl es sub (bad) dec pop outsb pop loope or dec sub pop sbbl cmp add pop mov ja xor cmp ds lahf mov sbb outsb adc ljmp xor mov movsb sbb mov (bad) jg cmp jmp and mov in push rcr cmp pusha loopne popaw iret mov lea xchg adc and dec xlat mov aad pop push ljmp (bad) decl or movsb jnp pop stos inc xchg mov outsl cwtl movsl hlt jbe push iret repz test (bad) add aas xor out cwtl (bad) ljmp jg les fnstenv shlb mov mov (bad) decl lock mov xchg add icebp cmpsb push addl lock and jmp sti mov (bad) (bad) lcall enter mov pushf mov mov vpmullw daa push out push adc push adc (bad) (bad) lcall sbb (bad) fsts add mov sbb mov in add outsb (bad) (bad) decl pop mov int3 push pop rcl mov fisttpl icebp sbb fnop repnz add (bad) (bad) (bad) decl pop xor (bad) cs daa adc mov incb into aam fimull and jecxz dec xchg (bad) setg or xor xchg stos pusha push pop pop jg lcall mov xchg stos in clc sub fidivl pop popf jno adc dec inc push sbb loope or jp or fcmovnbe loope and ror cmpsb (bad) lcall enter or pushf dec (bad) xchg jmp add std out clc dec push cltd (bad) mov ficompl movl adc jge or ljmp sahf xchg repz outsb shlb mov mov lock (bad) (bad) (bad) jnp or mov xchg test ljmp imul sbb fwait and xchg cmc in movsl cmp (bad) decl sub out dec daa outsl loopne mov fildl fistpll xchg add stos data16 (bad) (bad) ljmp aas mov pusha jmp inc in cmp mov jg nop faddl mov call xchg dec nop loop jmp pop loopne dec lock inc mov dec push aad rorb mov (bad) (bad) out lret into mov popa into fcmovbe sarb and or (bad) (bad) decl dec xchg push or pop mov mov xchg test fisttp in je push es sbb loopne icebp cmp pushl xor out inc je punpckhbw sbb pop dec mov inc arpl mov push push sub (bad) (bad) (bad) call xchg stc neg jmp xchg xchg mov sbb and addr16 pop sub ljmp subl inc std cmp add icebp mov std fimull (bad) (bad) (bad) in xchg add out lret sbb mov pop jmp mov ja and bound xor sbb incl cwtl (bad) xor and stc inc movsl es loop arpl lds xor sarb pusha cwtl call mov lea rorb jg mov and or fldcw pop jnp cmp call or addl sbb push xchg add js xor (bad) (bad) (bad) sti xlat dec leave mov mov pusha mov icebp sub bound jns mov pushl mov adc test fstl sub adc cmpsl aas lret xchg inc dec mov (bad) fbstp mov xchg xchg lods cmpsl in lcall add sub ja fldt ljmp or data16 iret lret or mov push out addr16 or adc (bad) ljmp ds pop jnp orb jecxz stc ffreep mov imul xor out cs lcall jnp cmp add fwait (bad) pushl and sahf aas lret mov js pop jnp pop and nop test xorl push in cld ljmp mov fstl push dec lcall mov es sub into pop xchg pop insb jmp sbb push adc mov int (bad) std lcall cmp cmp mov in out mov cmp (bad) (bad) inc test cmpb inc lock fisubl rcrl pop jle icebp das clc (bad) jg scas clc dec insl sbb mov and push hlt mov mov movb pop pop je and ljmp dec mov (bad) xchg jno mov hlt in in push or jle mov dec cld (bad) jmp in jecxz add nop xor (bad) ljmp movsb mov sti cmp jns loope insb add sbb (bad) (bad) fucom mov cmpsb je jbe cmpsl add push push pop fisttpll (bad) xlat and js pushl cld adc mov adc cs (bad) mov mov cld lcall dec and pop in test xor mov repz push (bad) (bad) (bad) (bad) mov mov lods ret outsl add pop inc xchg or out lds mov data16 (bad) (bad) in lcall pop sbb les adc and std ja cs in xor inc add test (bad) (bad) (bad) (bad) ljmp push (bad) out and test or jmp jp data16 jne mov js push stos das decl lock in sbb aas adc pop adc jo inc cmp fiaddl or pop or push dec std adc cmp xchg mull mov rclb aaa cld (bad) inc stc push ret pop jb adc outsb pusha es nop mov test in fwait adc out xchg icebp push test stc dec fdivrl icebp daa dec out ss je add (bad) (bad) push ja push jb push mov add dec adcb xchg pop fsubrs aam (bad) mov add jns pusha sub mov mov pop movsl pop xchg or lcall lret add add jecxz pop ljmp hlt leave or push (bad) (bad) (bad) (bad) mov push mov mov xor mov aad sbb je lds pop jo (bad) mov push mov repnz mov and push (bad) pushl sahf xchg sub adcb xchg lcall dec mov jmp (bad) incl leave daa jno xchg mov and pop mov mov lods and (bad) out (bad) mov in mov inc lret (bad) dec push or sbb mov mov inc mov mov push stc or cltd mov xchg push in push mull les cmp inc sbb sub (bad) (bad) (bad) out insb xchg dec clc aas push insl pushf adc sub and and call xor das fstl mov sub mov aaa pop gs orl lea dec sbb sahf cld fidivr flds cld or sahf mov in repz mov rcll rorl inc mov cltd popa push dec outsb scas ret imul lcall sub inc clc js (bad) (bad) (bad) (bad) out add mov push mov fisub lea cwtl push std das cmp or jns (bad) (bad) (bad) dec pop lret or jno lahf movsl push mov loope in jo pop cli inc pop insl add (bad) (bad) (bad) call sbb das and sbb sbb fcmovnu or mov pop jb mov test call std xor xor push adc iret test mov sti fdivp (bad) ljmp out (bad) pop outsl jb in mov cs lds and jmp lods ss (bad) jg sbb mov pop cmp xchg sub pop into sub daa (bad) mov jecxz icebp jbe test dec mov dec outsl (bad) jmp inc or push push lcall fsubrs (bad) (bad) (bad) decl sub sub and dec push inc hlt inc lret icebp and xchg mov outsb (bad) sub into adc ja inc sbb shlb jmp mov cwtl jmp lds mov jl adcl ret dec shrl mov divl decl mov sbb jo mov loop cltd out lret in daa push (bad) (bad) ljmp mov cmp sbb push jle jno ror shrl lds sub (bad) (bad) (bad) fisubr shrl rcrl pusha (bad) fsts mov outsb sbb and cld jmp icebp aas (bad) (bad) ljmp lret jmp push sbb js jne cli in xor mov ss sbb std into inc test loop (bad) and dec inc gs addr16 scas incl iret cmpsb jle fimull rcr das and push push (bad) (bad) (bad) lcall call mov stos sbb ljmp sbb (bad) (bad) (bad) ljmp popa sbb lock xor mov jns xchg fsubrl adc inc out push sbb xchg jp sub push adc (bad) lcall aad push mov es mov clc inc inc das call (bad) mov test xchg testb push xor incl dec inc inc sbbl shlb (bad) jne cmp lret lcall outsl stos fisubr inc pop in mov inc pop sub inc pusha mov incl (bad) and (bad) mov push pop (bad) (bad) (bad) mov (bad) mov aam ds or mov out test or mov jl inc and jb xchg xor jl ret cmp fsubl cld stos (bad) (bad) (bad) (bad) jmp aam out hlt aas lock mov (bad) or rclb jl cld mov pop das mov and enter pop jo into sarb (bad) (bad) (bad) ljmp xchg jge mov adc cmpsb cmp test (bad) (bad) (bad) inc mov adc fdivs ds (bad) aaa pop and ret std test je inc sarl xchg jle inc pop cli repz push pop aam adc arpl (bad) cmp inc ja (bad) pop mov add fimull cmp ffreep and fisubrl add push pop dec adc lahf sub insl negb (bad) (bad) (bad) js lea mov clc cld cmp ret push fsubr sbb hlt sahf popa xchg mov lds rclb mov push pop loope mov test push jmp (bad) divb lcall inc (bad) (bad) mov cltd cmpsb (bad) mov pop jmp jne rcr push or inc jns mov (bad) call sar dec test out dec mov xchg (bad) out cli sbb cld mov xor pop ret (bad) (bad) fcomip aaa inc xchg mov adc aas push repnz mov mov (bad) (bad) ljmp bound dec sub push lock push fs (bad) pop movsb jecxz (bad) es scas push jbe dec fildl add imul out (bad) (bad) jg dec push push sub pushf iret lods call xchg test push cwtl xor (bad) (bad) call hlt icebp mov pop jno insb xchg rcrl pusha pop mov aam adc mov lcall lcall inc mov cmp pop rol add xor fcoml add int3 mov (bad) pushl mov mov mov xor add lcall sub jp mov dec sub loope leave fmull add (bad) call (bad) dec divl test pop das sbb (bad) (bad) mov cmp lods adc jnp aam push pop pop jne lods mov (bad) lock imul out xchg xchg repnz cmpsb pusha incl inc fsubrp shll push sahf adc or (bad) (bad) (bad) cmp inc mov sbb xor fdivrl inc dec xchg movsl jno rcrl arpl nop (bad) (bad) (bad) lcall je das or clc aas xor push stos notb loope test orl (bad) (bad) (bad) mov sbb mov pop sar mov rcll dec lods push out aad xor or jecxz js gs fcomip incl stos loope in and push loop int3 ret cmp iret roll mov ret push (bad) (bad) (bad) (bad) incl xor negb aam pop push add leave pop bound int3 inc out in adc add movsb hlt xchg xchg scas cmp in iret ss push mov mov jg cmp xchg mov aad pop rclb pop or insl dec add das int cmp mov mov sub xchg ret mov fwait jg (bad) decl rcll jp,pn adc iret clc pusha iret sahf inc cmp fistpl pop jmp in mov xor or test xchg std adc inc int3 add test (bad) (bad) jmp pop xor leave fwait test cmpsl loope cmp mov sub push (bad) (bad) (bad) jmp add ss dec loope rorl mov mov push stos mov xchg xchg (bad) (bad) in (bad) faddp pop vmread dec add pop enter out dec imulb and jmp cmp (bad) insl jo mov aam xlat adc loop sbb push (bad) ret lcall xchg push out scas iret mov pop ss add js pop sahf in dec jg fsub or xchg (bad) (bad) (bad) (bad) in inc je clc rorb (bad) mov out scas out sbb xor (bad) mov cmp and dec mov xor xor jne xchg dec decl movsl jge pop out pop cmp inc icebp les pop lods (bad) (bad) (bad) (bad) shl sbb push stos jge fldl2e test jae inc or (bad) jg fimul (bad) js jle arpl (bad) dec or enter or lods xchg aas stos inc inc mov push adc add call or mov mov fwait mov stos iret rclb loope,pn int scas sbb arpl xchg (bad) call into scas sbb insb jno test fwait mov xor scas lret (bad) (bad) (bad) jmp pushf mov sub loopne frstor test or cwtl sub mov aam std scas cli (bad) cmp in adcl xor and sub ret or ja aam stos scas jle sub lret (bad) (bad) (bad) (bad) call outsb cli mov mov xor or push outsl or push sbb pushf xchg or xor push (bad) jmp cmp pop mov scas fimull outsb je popf (bad) mov rclb pushf push aad dec mov jmp sub scas jmp add push cltd push adc push dec ficom sub xchg add pusha push ljmp jae aam sbb sub push jae mov jne sbb cmc pop rclb fbld imul nop mov (bad) (bad) pushl jge addr16 outsb pop dec movb pusha das lcall sub xlat (bad) (bad) (bad) inc cmc aas push xor iret add cmp mov inc or or mov cli lcall (bad) (bad) (bad) (bad) incb cld mov ds leave xchg adc in imul (bad) (bad) (bad) jmp mov ds out loopne (bad) mov lods stc push adc xchg sbb xchg imul inc es xchg mov add pop gs fs or fist (bad) sub mov (bad) inc nop xchg or ficom popf cmp das in and je xor bound fwait inc lods inc add (bad) jg push out jmp push (bad) (bad) fcomip pop lcall stos stos shrb (bad) nop scas je pusha (bad) xor mov mov push divl adc addb cmp push mov pop (bad) lods (bad) jg inc and sbb pop mov das stc fbld sub outsl das xchg ljmp pop orl pop and std pop cld xchg (bad) pop push push insb push mov cmp pushf cld (bad) jg add jnp xchg mov push rcll or or cmp jl mov (bad) (bad) call enter xchg das push test es ss xchg jb cmp and (bad) (bad) call xchg out outsb xor cwtl cltd aas mov push jno out cs pop xchg push push xlat (bad) (bad) (bad) dec dec push mov adc add shr jecxz inc xor jnp rcll add lcall test insl loope pop jnp and sar xchg lds lcall hlt out sarb sbb push (bad) sbb cmp in fcoms sar push scas addr16 ffree mov or sub sbb (bad) jg fadds (bad) imulb lods push sar push ss mov pop pushf mov test (bad) (bad) jmp add scas or mov lea lods jle dec out jne pop pop int3 and push cli decl sarl es dec scas daa cld sarl lcall out sbb (bad) pushl int3 (bad) (bad) mov sbb add roll cmc insl cld (bad) lcall cmp ja add xchg and mov insb push pushf cmpsb (bad) (bad) (bad) cmp nop movsb xor pop outsl push cmpsb cltd or arpl fnstenv lock mov xor jo mov inc inc out mov jbe mov mov rorb xchg pop inc xor fwait dec sbb add loopne fisubr pop add mov lcall lahf pusha lahf mov and insb fcoms gs xor pushf bound mov dec out xor (bad) decl mov push movsb cli pop ljmp ja pop scas clc icebp add jo pop pop add (bad) incl xchg sub pop mov mov lea aad shl inc xor dec xor scas aas adc xor add ja jecxz sbb (bad) mov dec cmp fdivl addr16 (bad) ljmp jbe xorl mov repz ret gs mov fnsetpm(287 jno jg (bad) (bad) (bad) lcall cli push jns lret or lods shl subl (bad) (bad) (bad) ljmp imulb mov lea jmp imul aaa outsl mov scas push (bad) (bad) lcall mov cmp std loope mov sahf shrl loop mov push xchg mov cld push out mov hlt xchg add movsb mov inc jg sub in dec cli lcall mov or ret fistl (bad) nop or (bad) ljmp pop jg cs les xor imul sbb mov (bad) lcall push dec mov mov mov adcl (bad) (bad) lcall cmp mov xchg inc adc sbb bound int3 inc addr16 inc imul and stc das lahf dec test les (bad) inc rcrl mov repnz pop jecxz dec cmc scas xchg mov (bad) lcall cmp stc cli decl dec les mov stos and ljmp hlt inc (bad) ljmp pusha xor mulb aaa cmc js movsl push mov push ljmp xchg jecxz pop test mov add sbb loopne xchg jne,pn push in (bad) repnz (bad) (bad) cmp clc cmpsl push add and dec cmp pop lock push sbb out jecxz mov ljmp pop popa das add sub jae stos (bad) outsl clc into jne int dec adc inc and push pop push pop mov (bad) (bad) (bad) mov mov dec lock and mov insl jmp (bad) incl dec mov jge cwtl inc push inc mov loopne rcl mov ljmp aas int3 in aas xchg dec jae mov rol and out dec ljmp sbb icebp out fsub add (bad) push das insb daa lret sbb push cld stos dec int3 xchg shrl lods js fsubrs sbb (bad) mov (bad) fistp cmpsb fdivs xchg insb and mov in and cmp int3 jl pop (bad) (bad) lcall fstpl stc loope js es xor jl (bad) fild popa test jne xor jae inc pop or (bad) (bad) (bad) mov lea jns test sbb xor lcall pop out ljmp inc cli (bad) fdivl mov lcall (bad) incl mov mov hlt roll imul xchg movl adc ljmp mov mov inc imull sbb xchg (bad) pop aad push int3 lret rorb xchg push cwtl pop hlt mov jb pop fstl xchg mov arpl dec int (bad) decl aaa push lret sahf cwtl fldt test (bad) sbb sub inc fcomip (bad) (bad) jle mov or sar or cmp mov pushf cmp (bad) (bad) jmp addl dec mov aad xchg mov movsb insl loopne call loopne jne mov inc mov out outsb lret int3 cmp rclb pushl (bad) xor aam cli dec orl inc push and sar (bad) jnp jp fwait iret cmp dec (bad) je jg inc cld popf push sbb (bad) hlt adc (bad) (bad) (bad) incl adc ret and xchg cmp inc daa out xor mov cmp stos xchg pop pop repnz mov sahf and lods jnp jmp dec js into cld jo pop (bad) (bad) (bad) pushl lahf jns mov jae inc pop in je jle nop xlat cmp jns push std push fidivrl fsubr sti inc xchg clc hlt fwait jno mov (bad) int3 adc (bad) jg adc loop,pt into les ljmp in and (bad) (bad) (bad) (bad) jnp adc xchg push or cmc dec das cmp frstor xor sbb cltd pop jecxz or or jne mov push in dec mov lret adc mov add decl call mov adc loope lahf daa jmp sbb jge adc or out mov lds sbb int3 cmp jbe (bad) decl jle cmp into inc pushf cmp cmpsb call mov jae (bad) lcall push insl sub lea jb push pop cmp (bad) (bad) (bad) lcall or inc inc cs add pushf pop xchg fistpll leave test xor mov mov cmp adcb dec (bad) call sarl lcall sar in mov (bad) call mov cmp pop add stos and mov (bad) (bad) (bad) call push int sbb jae mov dec xorb scas rol xchg pop xchg lea xchg pop (bad) (bad) (bad) decl mov and xlat mov call sub (bad) lahf movsl scas iret pop push lods pop fistp lahf hlt mov (bad) pushl mulb xlat in ja (bad) mov or sti packssdw jne nop jno das out cmp dec xor (bad) cmp pop hlt clc ss rdtsc in stos (bad) (bad) (bad) mov push mov mov inc std pushf int3 add add arpl icebp test sbb jg or fwait push lods sahf lods xor les daa arpl pop hlt (bad) pushl scas stos stc jne cltd add in jecxz sbb (bad) cli enter loop popa stos in (bad) lcall adc (bad) popa mov (bad) mov adc popa mov lods ret pushf and test pop mov in jns pop inc sbb iret nop cmp test sub (bad) (bad) (bad) (bad) fcmovbe dec test data16 sub ds jle add or shrb push xor push (bad) (bad) (bad) decl iret jo addr16 jecxz sar push sub out jmp mov loop addr16 (bad) (bad) call in xchg pop aam xchg mov and jmp ret leave adc and (bad) (bad) cmp or mov fcomi jb (bad) (bad) (bad) jmp sbb jmp (bad) mov pop add push movsl xchg jno dec loopne sbb in inc lcall dec movsb ljmp dec inc mov (bad) (bad) dec inc fprem fsubrs sti dec cmpsl adc xchg popf sbbb inc sbb sarb push outsl ja nop (bad) incl lret insl (bad) push (bad) push pop adc dec pop mov (bad) (bad) sub movsl push mov (bad) (bad) lcall push lret ret int3 adc into and cmpl in das adc jnp jl (bad) (bad) ljmp sbb in int cmp aas sub or push sub (bad) or outsb cld and (bad) (bad) (bad) inc xchg lods sub add mov incb xchg hlt lods adc into sbb add cmp jno or push or sub mov gs xchg into dec jg dec cld ljmp fsubrl sbb add pusha (bad) (bad) (bad) dec jge in rorl push mov call les arpl (bad) sub and pop loopne cmp sub cmp xchg imul ljmp insb push int in and and jge (bad) fbstp xchg jecxz lret cmc lods and dec xchg (bad) iret xor mov (bad) (bad) fcomip mov jbe test sbb sub test xor xchg (bad) (bad) push insl pop push frstor pop (bad) add xlat fbstp cmp add dec jnp adc (bad) (bad) (bad) jmp mov icebp inc lcall xor mov add xchg sub push or or (bad) cmp add daa and dec mov scas leave ss call rcrl mov outsl popa ljmp adc dec mov jne into ret outsb ret lods (bad) arpl pop insb arpl inc pop test lods test outsb jecxz cwtl (bad) (bad) (bad) (bad) in add cmp adc out aas std dec xchg add cld sbb incl mov jg ret add push imul leave mov jb movsb mov pusha addl clc (bad) (bad) movsl mov jmp lea jno mov and lods cmp inc cmp xlat mov lock push and adc movsb (bad) ljmp out cs sub add push out clc fisttpll out xchg test cli mov cmp sbb and or outsl jae dec sbb test xor dec in xlat xchg push cltd rcl pushf jnp lcall (bad) cmp stos scas fnstsw pushf fistpll jl xlat and mov popf inc mov add incl dec push and add inc (bad) (bad) dec adc lret movsl adc xchg push jb add clc leave loop (bad) jmp pop adc rorb pop sub mov mov fcoms sbb cmp iret mov iret out enter int3 push add xor ret decl dec mov (bad) adc movsb push xor push push (bad) ljmp dec push repz mov inc pop push jle (bad) (bad) mov push into mov mov fist into loope push jle and js (bad) (bad) (bad) incl call clc or jbe stos mov icebp insl jo adcb cmc (bad) (bad) (bad) push push push mov xor scas mov sbb jl (bad) (bad) (bad) call add pop and rcrb inc les ret cmpsl js mov or sbb (bad) dec xor inc xchg jmp mulb call mov push xchg in dec or pusha imul js aad sbbl sub (bad) pushl insb aaa int3 stos insb rorb cmp xor shlb push cmc std (bad) (bad) pushl sub or mov test popa dec incl cld rolb or ljmp dec cmpsl mov orps test incl pusha sub push enter fsubrs les nop jo add pushl cmp sub cmpsb cmp inc xchg (bad) sub hlt (bad) (bad) pushl adcb push push push mov pop popf jno and or (bad) dec add test out mov mov pop movsl and lods movl ljmp fcoml inc pop loope mov arpl xchg std adc jp mov insb lods (bad) (bad) cmc decl mov xchg mov pop jl (bad) (bad) lcall (bad) mov cmp inc das jg fs rorl cmp cmp fs cmp adc sbb adc (bad) (bad) incl js js inc cmp cmc fs (bad) push nop add andl decl cmp adc les stc jp fcomip mov (bad) (bad) (bad) lcall or push pop or push imul lahf mov in test das dec divb aam mov pushf xchg mov outsb clc in or outsb (bad) sbb int3 in mov dec xchg and sti mov mov aas pusha insl movb inc icebp push insl sbb dec xchg adc and inc jl push mov loop inc (bad) ds fimul pop and loope sbb inc push int stos dec loope clc sub xchg fnstcw sub mov (bad) (bad) jmp xor ret sbb mov stos jmp lock add je jmp push jle cmp lock jecxz rorb nop xchg jge add or dec sbb gs push xchg ret clc (bad) xlat jecxz mov dec xchg jp inc xchg (bad) (bad) (bad) ljmp cmp lret push and insb inc lock xchg pop test adc jg ljmp mov loopne cmp ljmp jmp loop addb pusha call inc xor (bad) (bad) call roll sbb lret inc sub (bad) (bad) (bad) call out repz fwait pop mov add lods out jno and mov jb or mov pushl mov cmp xchg and push (bad) (bad) (bad) incl sbb cld xor ret stos idivl insl add bswap lock mov out xor test cmp pusha pushf movsb mov (bad) (bad) (bad) jg or (bad) repnz and js mov cwtl or das jb push cmp mov (bad) (bad) jmp push test cmpsb cld and inc and or xor sbb push je out icebp decl pushf test and mov ss lcall incl xchg xchg aas mov jb out ljmp xchg data16 mov lea jle fwait jmp lods add pop shl bound jg pop pop jne sbb cmp ljmp test mov andl imul (bad) js outsb adc shr sti push adc jo (bad) aaa mov sbb (bad) call cltd dec je negb jmp std inc scas repz mov dec dec lret push lcall das mov fsts rorl popf out sub or (bad) addl loope clc push xor imul dec mov (bad) mov jbe push inc outsl cmp mov fistpll push iret cmpb (bad) (bad) ljmp sbb pop in sub xchg add jo inc shrb xor sub inc pop lds cld pusha dec push test (bad) cmp iret pop inc cli add enter (bad) call (bad) ret cmp sahf adc movsb mov push test loopne push lcall mov add test lret xor (bad) mov (bad) fldlg2 push pop int3 cmp and das cli push add adc mov push fnstenv jo ds mov cwtl pusha frstor lcall lods cmp adc pop mov push lret sub cmc dec pop shrb cld (bad) (bad) lcall pop mov jecxz adc pushf pop icebp pop mov jbe cmpsl adc stos sub push inc ja mov pop and test xchg adc sub xchg add stos pop cmp scas cwtl jns push aad aad ss mov (bad) (bad) (bad) jmp xchg jle xchg hlt cmpsb test xchg pop lret ficom cmp je outsb pop out ja mov ljmp or les dec mov xorl fisubrl (bad) pushl mov je pop xor push sbb std cmp sbb (bad) (bad) (bad) ljmp mov or inc and lret pop adc popf or rclb ja pop lahf inc lods insl sahf cs sti and ljmp ss bound fdivl aas ds rorl in repnz xlat (bad) decl push cmp insb cld cwtl loopne pop leave jmp push (bad) (bad) jg sbb jnp xchg mov mov lea into adc sarl out loope (bad) (bad) call cwtl dec jp lock or push pop pop lcall xchg cmp add data16 ss popf ljmp xor inc je mov movsb (bad) cli sarb dec addr16 and jmp in test lds mov insb fisttpll into and xor adc push xor push xor (bad) call jae pop xchg in outsb movsl inc cmp cmp jge inc xchg mov dec sub mov xorl call and iret insl xchg mov ss jecxz (bad) (bad) (bad) call lods add pop add mov jo push push mov and mov sub (bad) pushl lret sbb sar sub sbb or movsb dec add std mov daa data16 (bad) mov (bad) je sbbl push mov mov pop daa insb mov sbb mov ss sub or into int adc mov shrb mov rorb (bad) xchg cld (bad) (bad) incl jle (bad) into in adc xor sub mov loope xor outsl (bad) mov pop dec aas sbb xchg jg (bad) (bad) (bad) jmp in xor mov dec pop jp (bad) aas pusha pop out out push or dec orb (bad) jg xchg add cmpl add pop cmp clc mov aas inc clc test ss pop sub inc adc rcr enter incl add dec out movsl dec arpl add (bad) lcall repnz mov jno imul dec cmp sub pop je scas nop mov pushf push mov mov dec add movsl outsl add incl ficom sti scas test jecxz pusha repnz std push jmp hlt test inc mov rorl loope sub mov (bad) inc add andl adc mov int xchg push sub outsl sub outsb mov or into jp push dec fnop jns aad jle jmp in cs jo lcall dec (bad) decl ds sub lret lods jp (bad) sbb jo pushf fs inc xchg subl movsb popf cwtl jge out jecxz jo sbb ja cmpsb lods adc pop dec mov cld (bad) out adc sbb push test mov mov (bad) (bad) mov out sbb test inc mov divl (bad) stc sbb pop cmp pushl test mov push clc fistl mov fidiv cmpsl fnstenv xor mov rcrl mov jg lock dec insl popa mov inc aam lahf or cmp (bad) test push outsb adc push mov out ljmp cmp or sbb and (bad) mov cmpb (bad) fistp (bad) mov pusha inc shrb scas sbb ds xchg mov add fnop push data16 (bad) (bad) (bad) mov and sbb aad hlt das mov xor mov xchg dec lds test cmp pop mov lcall dec mov push test pop ss stc pop dec stc cmp stos pop mov mov decl mov dec movsb or test das ljmp sub or enter push pop mov cmp jne dec lea add (bad) (bad) pushl jge scas cmc mov (bad) xchg push mov das pop sub aaa stos push jno (bad) (bad) call sub out mov (bad) cmp jbe or adc outsb lret cmpsl (bad) (bad) (bad) lcall dec cmpsl stos es mov jb push push jle ss jns imul (bad) (bad) ds (bad) jae out repnz rclb or dec adc outsb das fbstp add mov pop xchg mov mov add hlt lcall stos loopne mov shll lods xor out jl (bad) (bad) lcall addr16 mov stos adc fwait push out jne pop es adc or sub mov (bad) (bad) (bad) stc lahf or into cld jge push sbb xchg int es ljmp ficom jecxz (bad) (bad) decl inc mov inc (bad) scas pop dec xor mov jp insl test and adc inc hlt lcall cmpsb (bad) rol push mov add add (bad) mov in mov push jae (bad) inc cld adc ljmp (bad) add clc (bad) (bad) lcall cmpsb mov loope mov divps in push enter aad dec (bad) decl lcall fnstenv xchg cmp (bad) mov push or int3 bound stc xchg insb cld fildll aam (bad) push jnp mov ja das insl lock insb jo mov sbb pop push pop nop pop (bad) decl xchg call insb loope add and dec scas xor decl call mov (bad) (bad) (bad) jp add adc jmp dec nop mov nop aaa mov mov std lock xlat jbe sbb xchg sbb imul aas pop jl dec and cmove pop cmp sub les or pop jge imul cmp std call pusha dec push push in adc mov lcall jne cmp (bad) (bad) (bad) jmp xchg push mov scas ret pop push or clc push lahf xchg sahf lods jae jecxz mov push add sbb call bnd lea mov shll pop stos in inc sbb scas jp popa mov popf mov mov (bad) (bad) (bad) ljmp stos pop inc push pop stos dec (bad) jp rcll and call mov fiaddl mov (bad) (bad) lcall sub call push jns outsl push fmuls add jns pop (bad) (bad) (bad) pushl (bad) push (bad) xor lcall stos xor pop (bad) stc xor insl pop adc (bad) (bad) (bad) call loope push out bound adc inc mov inc mov mov xor cmp (bad) jmp inc insb pop int negl mov xor dec mov mov inc adc test mov xchg pop mov aam aam add pop test sub shll (bad) (bad) call arpl cmp repnz add imul (bad) insl (bad) push pop dec pop loopne dec pusha lods test sbb cmp sub mov ret sub add clc (bad) call test adc scas test ljmp and ljmp scas add lcall arpl rolb lcall ds push fidivl ds (bad) fbld mov lret add out fldl ficomp fcos (bad) (bad) (bad) mov mov pop popf sub or and jno in xlat movsb mov push add dec sub cwtl sbb cmp and and (bad) (bad) push inc mov or push sbb sbb in xchg lret js (bad) (bad) lcall mov inc sti bound xchg and push stc inc mov (bad) incl fwait int fwait sub fs add push cli (bad) (bad) lret adc pusha ffreep inc adc xchg jge adc inc fst push (bad) (bad) (bad) lcall sbb orl call dec mov push sub lods (bad) (bad) (bad) jmp mov lret rorb outsl movsl or dec repnz ja mov jo jg (bad) jmp test adc cmp out cmp das push (bad) xor push or jo cli inc ljmp (bad) xchg cltd imul inc (bad) decl mov cmp sub fdivrl adc lcall out mov cmc lods imul mov scas mov xchg pop push out adc inc rorl dec inc ret push fcomip outsl dec xchg stos add cld (bad) sub inc xlat mov pop mov jmp ret mov movsb popa (bad) adc out into xlat jecxz insl mov incl decl lock xchg shlb rcll and jmp dec mov mov (bad) (bad) call in (bad) bound cltd and fsubrp clc ss test sub inc sbb icebp decl mov xor pop jb cwtl and decl jne,pn jns xor mov xor (bad) lcall pushf icebp inc add push out xor (bad) push ret xor (bad) pushf sbb mov sbb (bad) (bad) call pop sarl xorb stc mov pop pop call data16 adc (bad) mov sbb and call imulb enter ret jl std leave push and (bad) mov daa dec pop inc fildl jmp jmp push jge movsb hlt push push sbb lret lahf bound (bad) (bad) jmp (bad) mov sbb movsb out jae sarl icebp add inc pop pop push lcall ljmp push xor add daa cs pop stos pop dec aam scas cmp and idiv (bad) (bad) decl cmpsl test fdivrp ret (bad) cmp and push push imul and (bad) (bad) (bad) jmp inc ret rorb push xor (bad) and adc out cmc rcll movsl (bad) ljmp push sbb arpl in mov fnstenv mov jo xlat lcall dec push (bad) (bad) (bad) incl sub adc inc cld cmc fldt cmc mov push bound cltd frstor pusha push out push sbb cmp int in decl imul ljmp xchg jo (bad) inc les mov (bad) aaa adc (bad) ljmp dec jne mov mov mov mov dec (bad) xor lcall call je popf mov mov dec mov pop jp inc lods cmp je sbb outsl (bad) (bad) (bad) call sub push push (bad) jmp insb icebp stc cmpsl mov dec mov mov inc loopne hlt xor in mov adc aam jbe xor loop sbb sbb sbb sbb inc popa clc (bad) decl stos pop mov mov mov jno inc call sub (bad) scas xchg dec xor lret mov push mov lahf jmp int fwait ss (bad) (bad) and dec sub push pop loopne push nop cmc pop mov dec out addr16 mov nop sub dec ljmp or mov shlb adc sbb inc std mov aas jno scas ret and and push and (bad) (bad) ljmp nop mov jne fadd dec adc jns adc sahf mov (bad) (bad) mov notb mov and out das stos xchg mov (bad) (bad) jmp or add fnstcw lds lds pop pop mov insl jne lock pushl (bad) and aaa mov push mov inc bound call pop add (bad) fsubp loopne sar dec sbb cmp push clc push loop roll push or push mov ljmp lea (bad) (bad) (bad) call fstl or bound push in add test sbb incl orb lcall jae repnz mov (bad) call stos clc sbb jno lcall sahf push call imul das fisubrl outsl jle or jnp in in xchg in les sbb push fucom jg (bad) out iret movsl cltd daa pop les cmpsb and bound mov (bad) ja (bad) ljmp and inc iret leave pop movsb and insl sbb or push (bad) cmp pushl inc ss cs jmp adc xor scas aad (bad) lahf int3 negb movsb loopne xchg mov mov mov inc popf sahf sub sar (bad) ljmp cmp jae fadd pusha jns lds mov outsl jo jne mov ret push cmp xchg repz jbe inc incb mov adc cmp mov fldt cs jge cmp cmpsl and or and gs int dec loop dec cmpsb (bad) fninit jg jmp sub and pop (bad) (bad) (bad) decl (bad) mov int out sub loope lret fstl mov lcall cld mov and dec add jp mov cwtl cli fmulp cli out mov in jae xchg shrl call pop int rorb jbe (bad) xor cmp (bad) ss push mov adc (bad) (bad) mov adc jmp adc xlat sti jecxz xor pop xchg scas es call xor ljmp test clc (bad) jg mov (bad) out movsl dec ror lock mov mov lock ljmp imull rcrl jmp sbb pop out jmp jge sub sub mov call subl test push dec out push arpl adcl (bad) (bad) (bad) mov sbb sbb out add mov cmpsl sub and jg sub sbb insb jmp lcall or (bad) (bad) call rcr addr16 cmp mov push std xchg call adc mov xorb sarb pop cltd sub mov ret jecxz scas sub (bad) (bad) decl xchg (bad) bound jne inc cmp out test decl xor add (bad) movsl sbb (bad) (bad) (bad) cmp cld mov imull cld jae dec xor cmpsb and int3 cld jnp mov mov mov mov inc mov js rclb ret (bad) cs fucompp ret sub xchg int push std movsb xchg ret or sub pushl call bound hlt xorb jle fs push push xor pop or sub aas cmp mov mov (bad) and and outsb fs add cmp (bad) jmp pop cmp (bad) (bad) (bad) mov jnp test jecxz insl sahf push (bad) mov pop aaa lcall (bad) (bad) pushl cmp ja or pop lea xchg push ljmp add xor ljmp and mov jecxz (bad) push pusha push dec ret and (bad) ljmp pushf pop jmp push mov loope sbb jg clc pop jne hlt and dec pop movsbl inc cli (bad) (bad) jb push sahf loopne mov (bad) (bad) (bad) (bad) call pop sub ret xchg push leave les pop lret paddusb lds (bad) lcall inc movsl mov add leave mov stos movsl add push sub cwtl cli ljmp xchg repnz addb scas jb loope cmpsb push adc (bad) ljmp add mov dec dec mov add jg repnz fnstcw clc out cmp (bad) (bad) call ja test cld xor sbbl pushf stos xchg sar lret (bad) adc pop insl push mov add fbstp xchg hlt push push or nop push jge (bad) (bad) (bad) (bad) mov jge xor shrb and or lods pop sub dec cmp (bad) (bad) (bad) fisub test test mov dec popa imul stos mov adc mov xchg subl mov insl mov je lock (bad) (bad) (bad) (bad) fldenv aaa sbb inc mov clc sbb pop ljmp (bad) pop subl (bad) jns cmp and jge sysexit mov mov add mov into and cwtl (bad) (bad) (bad) (bad) (bad) (bad) and or ljmp xchg fwait inc sub sub loopne bound mov (bad) decl xchg dec add xor jg (bad) fild xchg adc mov (bad) xchg fbld (bad) das cli cli scas push dec js lock adc push sub lock ret mov pop sahf test sbb or mov mov (bad) (bad) mov dec mov xor add aam sti inc jle push cmp (bad) ljmp jle mov mov lahf mov fs ret mov sub loope (bad) (bad) decl lahf dec push stos iret neg pop cmpsl insl insl xlat es addr16 sbb fcmovbe cld (bad) (bad) (bad) dec lea (bad) jb mov lret das cs ret insb pop jmp inc xchg stc mov sti mov (bad) (bad) jmp push fmuls inc sbb arpl nop mov leave xchg lcall and in push cld cmp mov mov test pop push bound int lock (bad) icebp and mov fidivl (bad) (bad) (bad) call inc shrb sub lods or sub bound jp (bad) (bad) (bad) lcall xor mov xchg mov insb test testl addr16 (bad) (bad) (bad) jmp xchg in xchg mov jge sub cmc inc add xchg loopne sbb scas xchg add sbb pop dec fsubr and or (bad) (bad) call aam inc call insb push xchg lods loop fidivrl (bad) (bad) ljmp daa cwtl ret enter sbb es push std mov push arpl cmc idivb mov pushl bswap mov cmp cmp pop jb xchg (bad) (bad) (bad) pushl sti out out mov cli jae fdivp in cwtl mov fs mov push mov (bad) jg pusha shll inc sti push xchg sti sub dec xchg dec repnz cmpsl in (bad) decl jnp js inc icebp mov lret pop push pop clc (bad) fdivs loope add js,pt mov lock (bad) (bad) (bad) (bad) cld dec xchg sbb out pusha mov push jecxz imul loope mov sbb or jmp adc mov dec in pop gs mov adc sub iret jnp dec (bad) (bad) (bad) call lods bound mov int imul repnz inc dec jmp (bad) (bad) (bad) jmp aam aas aas jne ds add push fwait push movsb push cmp mov push cmp (bad) cmp (bad) incl je and lds dec xchg xchg js dec clc (bad) (bad) jg enter sarl add pop dec out push pop sbbl and sub bound (bad) lcall mov adc mov dec (bad) pop out xchg xchg push pop dec cwtl sbb xchg ljmp push in movsl adc push mov jl mov ljmp mov pop and popa push mov cmp hlt sbb mov xor jae (bad) (bad) lcall leave push lods fstpl xchg fs aaa sbb loop aaa dec push cmp loope and sub pop add (bad) (bad) jmp aaa (bad) jno pop pop jp jle sub mov mov adc add fstpt mov dec (bad) dec or xchg mov popf in (bad) (bad) xor arpl in pop loopne or lds sub sar cmpsb (bad) (bad) call out mov xor mov clc lcall fdivp lcall or andb sub into dec push and (bad) cmp pop repnz pop lock adc pop das ss cs ljmp pop sbb (bad) jg push and sub divb xor out push cmc scas (bad) xor je inc add sbb scas js dec pop push (bad) mov (bad) call and cs xchg popf inc mov lcall hlt add (bad) lcall clc repnz mov mov jge loop test add movaps pop inc dec mov dec cmpsb (bad) ret dec (bad) (bad) lcall test push mov hlt push andb mov mov push sub (bad) (bad) call sub popa shll pushf (bad) imul shlb pop inc pop out psubq call rcrb inc push and (bad) pushl and rcl aaa xchg jg xchg in (bad) (bad) jg scas lods push xchg inc sub push jno mov xor int3 (bad) adc dec popa ss sbb xchg stos inc scas cli (bad) jmp bound sub xchg gs cmpsl sbb or adc cmp clc xchg iret out lret push inc repnz sti mull inc ja in mov (bad) jle test lcall cmp addr16 lcall pop sbb sbb iret les stc test add int3 in pop das test cmpsb jecxz (bad) (bad) jmp sbb cwtl sub call pop sbb push (bad) frstpm(287 fnsave insl icebp adc fdivr mov imul lcall (bad) (bad) (bad) incl pop gs (bad) sbb imul sbb sub mov mov push add lcall jmp and pop mov mov out jle push fadd or (bad) (bad) (bad) pushl pusha inc loop ds add add lret leave (bad) lods loopnew inc std dec inc das xor negb (bad) (bad) ljmp outsb loope sbb sub mov cmpsb into and and xor add sti movsl cld sub xchg mov (bad) (bad) mov iret adc hlt sub stos lods pop (bad) (bad) mov cltd fimul lcall in mov pop clc testb and stos popf fadds (bad) fcomip decl pusha cmp and cltd cwtl jb inc push cmp cmp ret fist dec (bad) push test push sub (bad) incl dec push sub bound xchg sti in mov or outsl ss out jg mov (bad) pushl repnz lock out and jbe les or xlat xor cmp mov add mov xor call loop incl rcrb fnstcw pop jb cmpl aaa fucom test xchg mov mov mov dec (bad) mov (bad) (bad) loope and push movsl sub mov (bad) (bad) (bad) ds movsb add lock (bad) or add aaa lret mov pop cmp out in push push sbb cmpsb insl stos popa xor push pushl call mov (bad) into rclb cmp ss and dec es xlat call int (bad) sub pop jle adc popa fimull (bad) (bad) jg addr16 sbb lock icebp sbb rcrl inc loopne mov add fildl shl orl loope sbb test xor negb push loope cld (bad) (bad) lcall mov lods pop call lahf dec jmp xorl loopne pop sar pushl hlt stc sub sub push (bad) rol fisttp stos mov cli (bad) (bad) jg adc dec das jg pop enter push inc movsl outsl mov pop (bad) (bad) ljmp add pop pushf cs fcoml adc mov (bad) ljmp mov xchg nop je pop dec mov lea mov push sbb (bad) (bad) ljmp sub push jae and push sbb andl inc je push (bad) (bad) (bad) call push sub adc ret sahf test jne lock mov xor add (bad) incl jns rclb inc mov mov and mov or aas jns xchg movsl xor (bad) (bad) (bad) call push push sub adc cld lret stc mov fstps inc and nop pop push xor jo scas mulb movsb (bad) (bad) (bad) (bad) js (bad) dec mov bound push int orb inc scas loope jnp sub mov cmc incl inc pop mov loop popl fdivs (bad) (bad) aas add xchg shl lcall xor add pop mov xor inc xchg sbb push mov xor cmc incl lret fs cmpsl cmc and fwait (bad) (bad) (bad) (bad) cld jmp add xchg mov push call std and pusha push insb mov push mov jg std inc fmull jle (bad) enter mov cmp rorb sbb pusha add ficoml xchg fxch out fistpll stos sub add rol sbb cmp jmp (bad) scas add dec sar (bad) (bad) mov or add jo insb (bad) movsb popf int push mov loop leave dec mov loope sub aaa lods jp xlat or lock pop pmaxub jg (bad) (bad) incl sbb sub lea add push das bound movl nop jmp (bad) ljmp push test cmp pusha negl leave out pop pop add push push jecxz pop pop dec add jmp jmp mov (bad) (bad) (bad) fstps pop add call out mov negl xor mov sub (bad) shl outsl jg (bad) (bad) js and jb in mov cmc imul and push sbb jl cmc (bad) (bad) jmp sbb enter jge xor gs cmpsb cmp insb mov adcl cld mov sbb dec dec inc int3 push sbb lods push sub es nop repnz popa cmc mov addb incl push cs mov ja and adc fmull mov pop lock pop bound scas cmc adc mov (bad) ljmp pop inc jle ljmp pop pusha jg (bad) test cli pop shrb xchg sub call bnd xor dec jg (bad) (bad) ljmp call out movsl pop xchg es xorl fistl and das (bad) (bad) (bad) incl mov or mov xchg cmp (bad) lret iret add ret incl js cmp insb loopne sti sub sub pop cmp fs pop mov (bad) pushl pop xor cs cs jmp mov (bad) (bad) (bad) call std inc add cltd mov fstl push es pop aas mov subl lea jecxz add push int3 xchg inc mov adc mov (bad) inc push pusha imul bswap clc xchg pushf xchg cmp push sbb ret call (bad) call sbb gs lcall xor aam outsl pusha adc cli (bad) ljmp mov les add push scas sbb mov (bad) fistp mov fs je sub mov push pop mov push (bad) (bad) jmp lods mov and arpl inc test dec mov das or test xchg sub inc xchg mov pop mov (bad) inc dec test (bad) jae shll popf xchg jo or dec push popf es incl adc les sbb mov jle fucomp outsl push (bad) (bad) ljmp int ds popf jle (bad) loop cmpb loope mov test movsl mov call xor mov inc int mov addr16 (bad) (bad) (bad) cli scas push lea repz xchg rorl dec push popf fild (bad) test jnp stos dec sbb jp fisttp cld cmpsb adc jecxz mov lods repnz (bad) (bad) (bad) (bad) fildll cld pop dec scas mov adcl ja adc aam mov inc insl inc jmp mov lds (bad) mov mov jmp jmp push xor outsb inc and push sbb gs lods out (bad) (bad) jmp sar data16 repz fistpl xchg cmp test jl (bad) mov cld test cmpl (bad) lahf sub nop nop add inc mov pusha mov cmp insl and mov push cmp pop mov push (bad) mov pop pop push jmp fidivr jne fimull ret inc test push in and (bad) (bad) (bad) jmp insb add pop mov (bad) xchg push shr mov mov or leave jge add push dec sub imulb scas dec loop inc mov adc add cld mov xor adc pop fs (bad) ljmp bnd mov xchg (bad) (bad) lcall leave pop pop (bad) in mov insb mov jo xchg xchg dec outsb ja jae mov xorl (bad) (bad) decl adc insb pop mov mov add js dec and ljmp andl sub xchg xor es lret aaa aas fsubs into outsl insb insb xlat pop jo dec or mov (bad) (bad) incl xchg mov sti cmp inc push jecxz gs and pop sub (bad) mov pushf cmc orb iret out mov fldcw ljmp sub fidivr cmp lcall jbe enter xchg adc adc out insl lcall or cs std mov lock sahf and jns push fidivrl jge dec xchg sti sbb in (bad) jg (bad) mov pop fisttp and cmp aam and pushf mov sub dec cltd mov or push in sbb mov jbe jge (bad) cli (bad) (bad) decl adcl and and (bad) (bad) adc adc fist jmp (bad) (bad) jmp inc xchg clc add cmp bound jae gs xor (bad) ljmp cwtl (bad) negb cmpsb aas and data16 dec sbbl push (bad) cmp (bad) (bad) (bad) (bad) mov xor mov and inc add cmp lea call and icebp cmpsb xchg xchg mov jo std scas (bad) (bad) (bad) pushl stos (bad) (bad) sbb mov or mov test jmp (bad) mov flds insl repz push push (bad) (bad) ljmp ret lret mov pop int3 sbb mov push mov pop sub repnz in xchg lock push push mov adc lods xor adc incl (bad) lcall lahf adc out (bad) mov fisubl ljmp (bad) repnz loop xor cli cmp data16 jge sub call adc mov (bad) (bad) (bad) jl fcmovne ljmp ret jbe aad dec sarl mov lock incl decl cld sub sbb fucom and stos repnz call das cwtl mov pop xchg mov loopne mov mov push sub push add pushl adc cmp test push stos or call push ret mov sub fnstsw jo cmc (bad) (bad) (bad) (bad) ds call fst sub sub push aam lods mov adc sbb rorl adc sub xchg sti xor sbb and xchg (bad) (bad) (bad) incl das jecxz jecxz and xor xchg or movsb and (bad) (bad) pushl not or cmp aaa mov xchg ucomiss inc sahf in les insb ret pop lock (bad) clc mov call cs in push mov add xchg aas lret int3 cmp lret test (bad) mov sahf (bad) mov cmc cmp mov (bad) xor daa cs or jmp jae jnp lods (bad) call outsb lret das mov lret cmp test (bad) (bad) (bad) jmp addr16 dec fdivrp inc or in sbb push lret jg pop lock aam loop (bad) (bad) pushl (bad) loopne popl (bad) sub je aam icebp jnp sub lods jg or cmp xor cs lea mov xor inc pushf inc mov ljmp (bad) push (bad) (bad) mov pusha (bad) mov ret cwtl negb out pop sub das in push and and cmp add lea mov or scas jle call mov pop xchg xchg dec sub mov push insl aad mov inc pop fsubrl enter dec outsl mov ret aas repnz cmp test pop push sahf xor (bad) (bad) (bad) incl das xchg not fs ffreep and push ret jnp dec pop sbb inc sbb hlt and cmovb (bad) (bad) sti dec pop push add js in push adc insb xchg pop arpl fnsave loopne movl mov clc negl or pop or lods cmc rcl pop loope push rorb mov int loope loope (bad) (bad) jg es test ret dec andl lcall out or insl loopne add mov jge or and (bad) (bad) dec incb pusha movsl in sub in push pop pop and sbb xor add jno inc daa cli jno das nop test lea shrl xor (bad) (bad) decl inc push stos (bad) mov mov push push imul int3 ret cmpsb rol aas xchg mov out incl mov push pop mov (bad) (bad) (bad) (bad) jmp scas dec imul push hlt (bad) xor test pusha daa int shlb jmp fstpl sub push lret xor mov mov xchg in iret decl and test pushf pop aad dec shrb inc jo push test rolb cs jns data16 xor call sbb push out xor adc out fisubrl mov jns inc repz fstl xor int inc fwait push int (bad) (bad) jmp faddl outsl fnstcw mov into dec sbb rcrb sarl enter (bad) push lock (bad) cmp mov call nop jo inc in mov xchg sub (bad) (bad) lcall xor sub cltd enter aas and adc jl aad pop movsb or (bad) (bad) lcall orb cmp sub dec xchg push inc repnz mov cmc cmc les or mov ljmp add jnp mov (bad) jae in cmp call (bad) call adc jg add lds push mov fcoml addr16 (bad) xchg jo (bad) decl loopne mov add mov popa and (bad) mov stos xchg (bad) (bad) jg shl push cmpsl ss mov dec in es stos add scas scas add ljmp out sub pop mov call push adc dec push push inc sbb (bad) ljmp call inc pop add test sti mov (bad) adc (bad) call lds and (bad) sub (bad) (bad) jg and mov arpl fdivl sbb cmp out push sub ljmp call gs mov mov incl sub add int ret cli mov push dec inc insb xor loopne loop (bad) (bad) lcall fildl jo push sarb fs push daa call cmpsb inc stc pusha cmc pop fwait jg fs aam and sbb (bad) fcomip (bad) (bad) clc mov cld ja lds (bad) aas xchg xchg scas and mov (bad) (bad) (bad) lcall out cmp scas dec aam loope sti adc lahf (bad) push ss inc (bad) int3 sar (bad) jmp pusha cmp xchg out mov inc les fsubr cld mov pop fisttpl (bad) (bad) (bad) ljmp leave dec or pop not inc add xlat pop fistpll lret lods add (bad) (bad) incl bound cltd push mov fwait insl xchg jmp adc cmc pop or and in out (bad) call (bad) ljmp (bad) incl sub cwtl test lret popa inc in rcr sub pop or jo lods pop das xor xchg fadds ja sub fbld dec push (bad) (bad) (bad) jmp sub mov insb inc stc aas mov jmp loope mov pop jae inc xchg mov jae sbb (bad) decl out mov loopne outsb fxch ret (bad) mov insb cmp out (bad) jg jbe jl inc push es orl sbb mov cmp ror xchg push sbb sti add rcrl pop xor mov clc ljmp mov push sub js scas mov shlb (bad) (bad) fnstenv cmp nop punpcklwd and mov mov add inc xlat push mov pusha loop movzwl in jb (bad) or or outsb rcrb ljmp adc jo (bad) mov adc (bad) sub (bad) add jle sbb push test push pop or out push add pop adc ret dec loop (bad) idivl ljmp idiv (bad) pushl mov rclb cli cli lds mov shrl ret shrd into dec cmpsb loop sub mov cs arpl xor andb jmpw cmp cli push push mov rcl inc jbe ljmp (bad) dec neg outsl jg pop cmp jg loop (bad) mov mov mov fist (bad) imul push lods mov cmp (bad) jg out ljmp jmp mul and (bad) xor arpl cmp (bad) mov and mov xchg scas push imul adc faddp xchg and aam (bad) mov or cmpsl sub mov stc adc icebp ja mov (bad) decl fistl lock mov adc bnd sub loope in pop mov (bad) cli mov loope lods mov pop ds (bad) (bad) jmp movsb scas movsl fwait loopne addb ret andl fidivrl cmc arpl pop cli and or (bad) (bad) pushl mov adc cmpsb sub push lds out xor xor loopne mov xchg data16 dec push inc hlt adc or pop (bad) (bad) (bad) lcall lret push aaa and mov rcrb inc jnp push fbstp mov (bad) (bad) (bad) jmp pop pop insb std out push lret cmp mov in push pop pusha adc call mov jne insb or mov cmp out sbb and and ss add in mov push shrb mov adc or jg lds arpl xchg sub adc dec (bad) mov sbb cli data16 or insl jns xchg loope cmp xor fisub ds lret (bad) (bad) (bad) incl inc ss imul dec sub jge xchg mov addl (bad) incl enter out pop jecxz inc add in repnz cltd cli ja (bad) (bad) mov mov mov push xchg outsb out mov insl nop or and inc loope mov (bad) sub xchg and fsubr int3 outsb inc inc (bad) (bad) decl xchg sbb sbb inc sbb in shrl xor mov (bad) lcall ror cs cltd push in add sahf add out mov insl mov pushf jbe mov jle or xor push or and (bad) (bad) call add push out lods push xchg into mov and dec mov add out adc ljmp push jl push popf (bad) xor cmp mov insl out movsb fidivl loopne loop dec inc (bad) (bad) (bad) (bad) mov subl cmpsb add scas mov xor lahf (bad) (bad) (bad) call xor sub pop ja mov add sbb push ljmp add jne and jne push lods popl loop jg add or mov test adc xchg mov outsl arpl mov ljmp cli ficompl push ljmp cmp dec (bad) (bad) ljmp inc insl cmp cli pop test mov movntps mov pop mov insl pop inc (bad) (bad) (bad) (bad) out dec mov (bad) sub fisttp in loop movsb loope sub push gs (bad) (bad) call adc ljmp ja and add cld lret (bad) decl mov add fcomps scas push roll sbb jmp jmp stos push aaa clc sahf jb inc daa mov add icebp ljmp ljmp or adc mov adc (bad) mov mov test popa or cmp test test sbbl cli (bad) ljmp adc mov into push xor rcrl add outsl ret call movsl call inc sti inc pop mov stos jge test push pop loopne mov hlt fcomip scas push les ljmp mov (bad) (bad) decl jno mov fucom adc inc push outsl cmpsl (bad) mov add lds push sbb call loop lods push mov leave insl mov std (bad) call dec push push mov mov aaa (bad) insb jp and (bad) cmp jg xchg int insb mov stos test and stos (bad) (bad) pushl call sbb cmp (bad) pop cmp cmp mov jno sbb scas jmp inc push sbb (bad) push stos loop pop sbb pop int3 add push popf hlt pop scas inc xor fbstp in push mov ja mov nop icebp popf mov (bad) mov mov mov cmp stc (bad) (bad) (bad) call loopne mov aad push add fsubrs pop jp clc test inc aas adc test and xor pop addb inc dec push adc incl sti xor dec add nop push into pusha sbb lds xchg (bad) (bad) (bad) pushl mov mov movsb inc xor dec es mov dec arpl push (bad) cmp push out mov popa lret out push push out leave stos out mov out mov (bad) pushl mov (bad) jl sub dec and fstl cmp and ror loope decl stc nop fwait cmp and ret sbb arpl (bad) (bad) mov pop stos mov sub xor dec fisttpl mov lock cmpsb (bad) (bad) (bad) (bad) cmp add aaa adc cmp out ss mov add inc aam and adc scas xor lcall decl call xchg sub xchg test jno cmpsb push aad mov aad pop call les ljmp test lea xchg int3 (bad) mov pushl test inc inc orl cmpsl lock fist in inc cmp scas cli ljmp movsl sbb inc mov xchg jg mov (bad) call outsb xor fdivrl push rorl jg scas sbb (bad) ljmp mulb xchg inc mov fisttpll pop es mulb loopne pop call insb in jno sbb (bad) (bad) (bad) call sub fildl (bad) jo pop jno dec adc fisubrl xor outsl dec fs loopne stc push fs sub cmc test test das push jnp jns add sar decl popa push cmp lret sbbl pushl push mov inc enter inc out cmpl (bad) sbb lods jae pop jg and xchg pop dec adc rcl jge popa roll pop div (bad) incl (bad) mov imul mov add popf test outsl mov hlt jo add movsl sbb out push leave aad in hlt clc in push and std lcall cmp stos js icebp pop insl push fiaddl (bad) dec mov sahf scas cli jg mov and mov dec (bad) ja outsl add je lret ljmp loopne mov jl mov jno (bad) (bad) (bad) mov mov call dec call dec mov and (bad) (bad) (bad) incl pop daa jne xor inc in sub gs rclb cmp push (bad) ljmp mov mov inc pop xlat in jne (bad) incl add cmp xchg add inc shrb fnop jl cli imul pop add (bad) (bad) jmp mov push loope or imul pop sbb add mov mov (bad) (bad) (bad) cmp fs push or and sti lcall mov or (bad) (bad) decl cld cmp sub imul mov mov dec (bad) (bad) mov (bad) push xchg xor sbb js in leave xchg vmovq aam push arpl rcrb fs push imul fwait int clc out xchg test pop add into int std lods mov (bad) mov jbe xor inc imul adc (bad) xor aaa and in ljmp es std mov cmp pop loope mov insl mov sahf push pop jg (bad) ljmp mov sub pop mov jmp sbb dec mov sub (bad) (bad) (bad) ljmp mov imul mov sbb test lcall std dec ljmp mov in sbb out xor (bad) lcall cltd and push int mov outsb mov adc pop mov dec pop ss sbb sub add fsts lea idivb popf xchg cmpsl push xorl std jg (bad) (bad) (bad) (bad) call dec and jo pop mov fisttpl inc push cld push pushf inc sti jns add mov outsb xchg xchg sti test sub mov enter xchg mov or sarb fmuls loop jnp mov mov (bad) (bad) (bad) lcall cmpsl cmp call stos adc (bad) lock mov xchg lods mov negl pop imul push rol fist ret (bad) jnp aam or inc mov subb xlat sti pushf loopne mov repnz fildll sbb fucompp fmul pop jge push movsb inc mov cmp rolb push insl add or pop fld jg mov into (bad) call lock (bad) decl pop ret push sbb pop imul jmp mov mov scas push xchg divb (bad) fild mov xor cli (bad) (bad) lcall movsb sub xchg arpl pop sub (bad) adc (bad) cmp jecxz sub inc push in mov jmp inc inc push addr16 xor add stos pop add pop sbb cs mov xchg (bad) mov cmpsb xchg shlb or or out xchg mov (bad) xchg loop push std or xchg mov ficoml push out test mov out lock dec scas (bad) or pop cld lea pusha cmpsl mov push or inc cmp jbe xchg lret inc std (bad) fisttp and fcompl push cmpsl pop pop push inc mov (bad) (bad) mov scas push push xor push add sub shll icebp xchg aas (bad) (bad) (bad) pushl daa mov ljmp test outsb jecxz int (bad) cltd mov sub incl ficoml pop ds lret sbb loop ret lds (bad) (bad) (bad) inc stos mov pop push sbb dec pushf sar loop mov pushf shll pop xor (bad) insb xchg out sub pushf jg (bad) inc mov mov and inc xor movsl and cli mov xchg cmpsb pop mov fldl pop xchg flds sub inc add and rorl mov loope (bad) gs imul incl and sbbl js cmpsb lods adc push cld lcall ljmp dec dec ss orl mov aad sub imul in and mov ret lahf adc jg ljmp mov inc shlb and cmp call (bad) (bad) lcall sub sub hlt repnz pop hlt aad (bad) xor rol (bad) (bad) (bad) inc js repz xchg and xor xchg bound push jbe pushw jecxz fdivl (bad) call xchg repnz or mov cs sti cmp ljmp pop xorl xchg call cs or or cli sbb hlt bound popf popf rorl loop (bad) ljmp sbb flds aaa movsl loopne imul nop lods cmp (bad) jg loop jns push lahf push repnz mov or jl int3 movsb inc (bad) sub (bad) incl dec sbb fmul das pop data16 pop pop sar (bad) (bad) call sbb mov inc jne xchg pop scas push push (bad) jbe pusha popf aam adc jecxz (bad) call int3 push ret mov out enter aaa iret lea dec xor jno out lcall hlt xlat fistl (bad) push cmp icebp push sub call (bad) ljmp inc xchg cmpsb sti or fwait ds jge cmp sub ljmp inc cli dec jle (bad) sbb xchg jo push mov (bad) (bad) jmp sahf sub xor dec adc add mov push pop popa jge or (bad) pushl push insb sub call jne inc addl add bound shrb clc jg out mov (bad) pushf pop mov add ss or js lds scas cld (bad) (bad) (bad) mov sbb jmp adc cmp andl ja (bad) (bad) pushl iret mov js and mov inc pop sbb lret push call fs jg (bad) negb in in jmp push jmp jp or xchg out add mov xchg pop mov test ficoml mov (bad) fbld mov lret mov push test sahf in mov add add jg incl mov aam add aaa cmpsl inc into jmp popf add inc (bad) (bad) (bad) ljmp aam jle jbe loope adc scas fcomi icebp mov aas and lock pop hlt cmp clc dec std pop xchg mov and ljmp repz daa xchg (bad) xor cli incl cmpsb and inc jge cmpsl mov mov ljmp jmp loopne dec mov (bad) (bad) mov push hlt sti test incl lret notl mov cmp inc loop frstor inc adc adc jl jecxz (bad) (bad) lcall (bad) loopne out js pop dec sahf or adc ret shll add notl out push dec fdivs inc mov jbe and jns mov sub or push cld jg (bad) fcmovnu xchg mov xchg adc and popf sub push inc and aam (bad) (bad) fbstp shl xchg xchg lret into shll orb lock sub jo stos lret outsl nop dec (bad) (bad) (bad) jmp mov inc push xor mov movsb xor mov jl imul xchg testb mov outsl ds sub mov mov pop icebp jbe inc test arpl or push out cmc repnz stos sub cmp sbb insl ljmp sar cmp (bad) fwait push lret ret push cli mov mov or (bad) (bad) jl lods movsb dec in addb adc xchg pop test add test incl mov setp pop mov mov pushl xor dec ljmp jnp push or add mov sub add pop fiadd ret sar push ss mov (bad) dec fnstcw int3 (bad) (bad) (bad) ljmp cs ret push sub hlt cmp je mov mov adc lcall mov add mov iret out bound popf call or or jno xor (bad) (bad) pushl fadd fiaddl push xchg mov and adc xlat or das ds (bad) (bad) push push js loope pop jmp mov mov mov mov out es notl out jmp inc pop (bad) clc test jns mov (bad) (bad) inc jns jae add iret out loopne pop leave (bad) rcll dec jge mov xor test insl push push fldenv fild rcll lods test or (bad) (bad) dec inc add iret cmp or pusha stos add rcrl jbe xchg (bad) (bad) (bad) call push mov xchg les adc std arpl lods mov xchg mov pop insb dec and repz popl icebp jg pop in mov stc cwtl ss lds movsl mov inc into and pop jg (bad) decl rorb pop lret sbb mov dec mov int3 (bad) stos pop in adc (bad) dec inc dec gs je movsb bound or mov push push jg inc adc sub inc lods cmp and fisub les hlt decl sbb mov nop stos sub inc mov inc xor ret fist adc pop mov jp push ja xchg ror cmp (bad) mov hlt dec pop cmc (bad) call sbb cmpsb and ss test jbe push sti gs (bad) (bad) fild cli loop jae (bad) xlat mov dec mov xor int3 cld data16 out arpl sub (bad) (bad) dec cmp scas sbb pop add aaa jne stos sahf ss adc xchg stos lock jg xor in mov (bad) mov (bad) fiaddl mov jmp fcomps fs mov (bad) mov mov mov mov sub incl sub xchg popf and pop pop inc pop or roll cld pop aaa inc aam adc lods fdivrl rolb dec nop outsb xor popa rorb (bad) (bad) (bad) mov adc jmp push popw std push stc pop push or or mov (bad) (bad) incl mov push mov xlat xchg adc cli xchg push mov (bad) fsubr enter enter idiv test bound in lret in popa sbb cwtl cmp cmp outsb mov sarb jbe and mov bound jno jmp xorl adc (bad) (bad) jmp dec (bad) lret adc (bad) stos inc movsb in ss popf inc pop stc cmp push xchg jae cmpsb push pop cmpsb (bad) decl test xchg xor imul mov jb mov inc mov sub (bad) ljmp and mov test inc dec push mov sarl cmpsb lds clc out and (bad) jmp scas insl add stos (bad) jl faddl ja xchg jg jecxz pop sbb sbb mov div sub ja mov insb mov mov mov aaa jecxz jg call sti js arpl nop shrb mov cmp rorb sbb dec push iret shr and dec xchg sub sti (bad) scas cmpl add dec or aaa mov adc daa lret insb inc add out clc (bad) decl cmp push out sbb mov and sarb lock aam (bad) cmpsl repnz pop rcr xor pop or loope jns fcomip aas pop fdivrs inc mov cmp mov and xor aad xlat (bad) jg add repz ret (bad) cltd (bad) (bad) (bad) (bad) jp popa mov mov in pop pop aaa xchg jo std or test mov inc sub pop cmp movsl lea enter (bad) ljmp shlb mov mov in cltd pop push loope jmp jbe cld (bad) pushl mov mov or inc pop enter add rolb xor pop adc mov repnz and pop add (bad) ljmp jp xor mov fsubs pop test les sub dec pop test (bad) push mov add or dec inc inc neg mov add shrb xlat xor adcb lcall repnz sbb adc hlt pop rolb (bad) out subb dec divb sbb das pop hlt mov and push dec out xor ret andb inc mov (bad) incl sub jmp scas mov xchg icebp adc cli outsl mov movswl loope icebp or push sar out mov inc jge jb mov push push cs std orl push xor fidiv lret test rorl jg call sahf imul push xchg add in cmp mov (bad) (bad) ficoml scas cmp adc arpl xor push mov mov icebp je mov js inc push sub mov (bad) lcall fdivl adc dec push stc sub jp je mov mov or sbb xchg fadds mov sub mov cmp lods out sbb xchg loop clc sahf mov pop in iret or adc xlat repz cmpsb loope shll xchg (bad) adc pushl add (bad) fstl pop pop out (bad) pushl mov xchg or adc das (bad) push mov inc push std cmpsb bound fild jmp loop into push xor jne dec sahf fwait xor mov lock mov sub add (bad) (bad) incl push pop imul xchg (bad) (bad) pop push mov test call aaa (bad) ret pop aad cmp mov lock lahf call xor inc scas std xchg es lahf movsb (bad) push (bad) (bad) pusha mov adc sarb (bad) movsl stos imul dec inc out pop call inc repz jbe stos loop cmp (bad) in lods ret (bad) (bad) pushl mov popa jo and jnp loope push mov cld das cli (bad) jg in cmp mov jp jle mov stos sarb (bad) (bad) dec dec push aas lret pushf aam int3 add jbe jae push jo xor cli int3 cmp incl push data16 (bad) (bad) jl movl (bad) (bad) decl movsl jle imul cmpsb push xchg cmpsl sub inc ja,pt dec dec in (bad) test sar incl imul fistl hlt mov xor sti sbb xchg out hlt lds mov mov test (bad) repnz loope dec lock icebp mull (bad) pushl or (bad) dec jl or fcoml xchg push mov jns inc and call pushf sub xor outsl (bad) outsb xor popf sub cmp xor in daa add (bad) lock inc push pop lcall popa sbb out cmp mov push mov adc sub xchg fdiv mov rol incl and jns jmp std jnp mov add incl and jmp push out pop pushf cmp push out aad mov (bad) (bad) pushl mov fstps repz dec mov rol fcmovbe iret mov dec subl lcall aad sbb pop cmp and lea in push mov (bad) (bad) (bad) incl dec in or leave mov cmp mov mov js repnz sbb xchg push dec add xchg mov (bad) (bad) (bad) mov xor lret sbb aad or jg mov xchg in leave addb les push mov dec mov outsb push in outsl pop jne gs mov in movsl and mov ficom call out inc dec inc scas add ljmp xor repz xor arpl (bad) (bad) pushl ret lcall rorb bt lea popa add push xchg (bad) (bad) (bad) call iret leave xor in test cmp cltd or mov fsubl xchg (bad) (bad) (bad) jmp jp lds rorl rclb pop mov and push std aas ret push fdivr (bad) (bad) call js or lcall dec and adc add les (bad) (bad) (bad) jmp (bad) push mov popf pop mov outsb dec add or fldcw sbb lcall pop cwtl xor scas xor xlat dec cmpsb pop push fwait pop lahf xchg mov js fs in outsb (bad) (bad) ljmp sbb xchg adc mov aas xchg mov mov (bad) add (bad) (bad) push test xchg xchg fwait inc js test mov fildll xchg xchg mov das das std xchg dec and (bad) mov push fisubr sub push insl aad dec jecxz inc mov cwtl lcall pop popa mov cmp fwait mov rcrb xchg xchg jp (bad) adc popl cmp cmp imul (bad) (bad) std shlb outsb add mov jno lods enter sub out cmpl daa lods (bad) (bad) (bad) (bad) jnp jmp xor mov (bad) loopne lret es push mov (bad) (bad) pushl lock adc mov or mov pop or scas sar and lret mov or dec imul jg fstl xor push cltd dec inc xchg lds add pusha and adc (bad) (bad) inc js movsl (bad) mov cli xor add xchg push insl jle lock clc incl mov jge ja sbb mov decl aam lock mov roll mov lcallw iret (bad) (bad) (bad) ljmp dec or pop dec xchg cwtl lods xchg pop pushl xor pop (bad) divl or stos pop add dec adcl cltd sub or rclb or (bad) (bad) pushl push in popa sbb ds inc insb adc pop dec fsub dec mov leave cmp std push sar out pusha mov arpl pop adc in or pushl and imul in roll std (bad) push push pushl (bad) add out fadds out sahf dec adc cmp (bad) (bad) (bad) jmp stc lds lea popa jmp pop (bad) (bad) (bad) mov scas orl std mov xor lret inc outsb ds int pop ljmp lret data16 incl mov fs scas push push clc push rcr insl adc cmc push inc lods outsb std (bad) call mov aas sub lret dec or xchg adcb inc sbb (bad) (bad) call stos jo pop insw xor pop adc insl jbe cmp cmp inc addl nop daa fs ljmp dec sbb scas fwait inc pop int3 pop stc (bad) (bad) ljmp cmp jnp into lcall xor pop (bad) (bad) jno into (bad) (bad) (bad) pushl mov push pop xchg sub inc mov inc push cli fsubp xchg bound (bad) lcall outsl push bnd dec inc shlb movb roll dec xor idiv ljmp mov xlat inc lahf and mov aas (bad) mov stos addr16 daa cld and lcall addr16 (bad) dec lods mov mov inc fdivs adc (bad) jmp mov loop pop rclb mov call scas stos inc and insl sub mov and mov jmp hlt (bad) (bad) (bad) decl cmp mov mov bound fiadd mov cmp jnp cmp call es jp cmp inc mov stos and push int push ret (bad) (bad) (bad) call mov int3 push cmp xor nop push mov cli jmp nop adc jmp mov (bad) pop inc lahf aam pop jns dec cmp js mov mov inc adc loope cltd mov (bad) call mov outsl sbb fldcw mov cwtl sahf std sub lods negb clc stc (bad) (bad) (bad) jmp inc popl and and mov repnz sti xor loope mov out (bad) (bad) ljmp and jl push cmc popf and loope daa shrb cmp inc out xchg (bad) (bad) incl je dec decl (bad) outsb shll jno mov (bad) push mov xor mov cmp push sti push lcall inc scas xlat in add mov and mov or mov jb scas adc inc pop ljmp out cli push push shlb hlt jg idivl shrb test mov ljmp sbb imul aam (bad) (bad) (bad) (bad) pushl pop and imul adc xchg jmp pop mov mov mov inc movsb (bad) frstor icebp fildl js cwtl cmp pushf es push outsl mov (bad) ss lods push add adc adc out sub decl decb jmp andl int mov ret xchg lcall push dec cmp push cmpsl or mov sbb fstpt inc arpl adc jg test clc mov addl and or in loope daa sahf push cld (bad) ljmp cltd cmp lcall or cmpsl pushf xor pop dec mov (bad) dec mov loop mov jg and cmp (bad) mov (bad) jecxz ljmp popa inc lret movsl add rorl cmp (bad) (bad) incl cmp push pushf into insb or push xor xlat fmuls jbe mov inc mov (bad) call mov xor scas fmulp lcall ss loop xor sbb ljmp cmp dec push jg push (bad) enter (bad) es sar pushl std outsl sahf jge scas adc imul or dec mov popa push ret or aad (bad) (bad) incl and dec in arpl pop pop push popa test shrb push jg scas ror sarb mov pop lea out cld jge incb insl fnstenv push and decl or fwait nop sub mov inc sbb (bad) (bad) (bad) call dec push pusha iret cmp or das inc cltd out cld and dec jmp inc ja (bad) (bad) (bad) lcall mov aaa xlat sub popa int3 pop in ret cltd fldcw xor mov (bad) fcomip popf xchg call push xlat add in arpl sub sub call mov aad and pop test (bad) jmp jle add popf inc test ljmp fwait (bad) adc insl call xchg sbb mov xchg leave jmp fimul adc (bad) push lret shl mov (bad) out das data16 fwait jne cmp and pop push call movsb iret pop lods aas push call repnz outsl sbb outsl lea arpl pop pusha repnz out wrmsr jge mov push pop jp test dec push xchg adc fwait inc clc push (bad) pop mov call sub stos ljmp dec cs movsb ret fisubl mov (bad) (bad) (bad) decl ret xor push das and (bad) lret sti or push leave cmp or sar xchg js loopne dec mov mov sub clc (bad) mov das adc pop adc add icebp (bad) ljmp inc shrb jae pop stc in xchg sub call lea rorl sahf stos dec orl xor (bad) (bad) (bad) aas lods mov iret sahf and push xchg hlt adc xorl lods mov (bad) jg and adc js sub dec push cmc or (bad) (bad) (bad) cmp xor jb jle push int3 ds mov add ss xor mov dec rol xchg ret (bad) fistl and inc cmp cmp mov add (bad) jne scas xchg adc xchg sub adc inc stos into sbb (bad) and (bad) call cwtl or in aam mov fcmovbe mov pop dec xor push xor cli push (bad) out adc xchg and scas (bad) cmp mov (bad) (bad) push jo add push dec ja jmp dec (bad) out enter lods cltd stc xchg sbb sbb lcall hlt fisub add stos adc stos mov mov fsubrp push (bad) sar or or mov imul sub mov mov push cli add dec mov xor mov imul sahf jp imul insb cmc call dec fisttpl (bad) fdivrl jns stos scas lods push repnz pushf and (bad) ljmp adc pushf call pop fisttp (bad) mov mov cld (bad) jmp mov mov je pop popa sti in or cmc push and les (bad) (bad) (bad) lcall and mov xchg sub orl adc (bad) jge push mov push call (bad) dec or and jmp es sbb imul push (bad) cltd mov pop test movsl (bad) (bad) gs mov (bad) mov jl sahf xor das xchg mov (bad) mov cmp loop hlt jg mov adc or inc out in (bad) ljmp (bad) (bad) jmp add pop or rol xor imulb cmp adc in outsb decl dec jecxz mov mov sub dec fdivl nop add pop mov test scas sarb (bad) incl movsl (bad) sarl mov imul mov (bad) (bad) call lea aad stc in or das sarl pop (bad) push daa (bad) cwtl into outsb xor jmp adc xchg or imul fsts and pop test (bad) jb dec lea mov inc lret push push xchg adc addr16 dec stos dec cld call rcrb jns dec or (bad) (bad) (bad) (bad) jle cmp inc sub pop fwait out or fildl rcll and jb mov push mov pop pop push leave int xor mov push rcr (bad) (bad) incl nop cmp fadd (bad) scas inc xchg mov mov pop negl addl fcompl or cltd movsl insl pop xchg or dec mov push pop sar jmp mov fld pop push dec push sub sbb adc xchg mul dec sbb es mov push and outsb jge out insb data16 xor xlat addr16 addr16 test out (bad) (bad) (bad) dec icebp mov mov cmc fisttpl jl pusha out negl aam sbb sbb pop xor push pop aad fcomip mov or sti lret addr16 adc and imul jmp push cmpsb cli enter pop int3 adc push repnz mov adc test and call jo rcl (bad) (bad) (bad) jmp push fwait add lods mov xlat mov inc cld and lahf aaa ret cmc jecxz dec jb fwait imul lods call jbe jbe outsl xor ljmp or jmp push aaa jg (bad) incl dec insb inc sub mov xchg push mov bound lret test decl mov lods (bad) fdivrs mov daa xchg lds outsl (bad) (bad) incl sbb inc shlb sub cmc push scas fcomi mov (bad) inc sub sar (bad) (bad) lcall mov mov and pop outsl sbb sub ja and (bad) (bad) ljmp movl and sbb xor dec (bad) test pop mov mov (bad) (bad) (bad) call andb orb dec fwait outsl cmp xchg jecxz adc pop xchg fwait inc rclb push das pop cmp (bad) (bad) jg jg sarb cmp je mov call jecxz (bad) fcomip (bad) call add dec int stos in lahf movsb pusha std sbb addl adc (bad) push push aas jl add lds (bad) (bad) mov js icebp sbb das nop (bad) pop or daa nop sbb mov popf jge (bad) mov outsb mov mov sti inc add ljmp add or or or cmp mov ljmp je clc (bad) call jbe aas int pop jno loopne push insl enter clc and mov (bad) (bad) (bad) decl dec jb xchg xchg mov or lods jge in mov stos test push cmpsl mov mov mov cltd ljmp dec dec jo test jmp jb (bad) mov (bad) (bad) push push outsb push dec mov ds jmp or add inc mov cli sbb out lret push dec cmpsb ja lahf xchg int or dec sbb and push icebp mov dec scas lock cmc inc fwait pop test mov mov pop push ss scas outsb test or out add mov icebp (bad) (bad) (bad) call pop fbstp or fimull push push xchg jbe dec test lds mov pop mov mov cld jecxz and (bad) in out test out mov lret lcall cmp leave sub xchg mov (bad) mov inc push push insb int repnz ja ss fidivrl add mov xorl xchg xchg and sub jle int push lds lods das (bad) (bad) (bad) (bad) cli mov hlt movsl or scas add or sahf cli stos push pushf mov sub push (bad) inc adc loope push and mov push pop scas std (bad) (bad) mov ds xor sub and or (bad) idivl insb mov inc fs stos inc (bad) stc cmp add or jl pop push (bad) sub pop test ret sbb pop ss and cli jl push xor (bad) (bad) call push in mov xchg lock push inc into pop cmp mov xchg inc ljmp ljmp mov mov pushf sbb inc aam inc pop and pushf xchg (bad) pushl jo lods dec stos push xchg xor mov movsl mov lret mov sub fs fadds mov cli mov mov ss inc enter inc sub popf mov roll (bad) mov (bad) lcall out xchg jge mov xchg les scas sarb sbb jb enter add xchg iret pop push dec push hlt jmp and sbb sub mov xchg cmc (bad) (bad) jns sahf inc jle ja mov sbb rclb call sbb int mov pusha push pop xchg pop cmp (bad) (bad) lcall neg pop add pop cmp and push lods dec cwtl dec jnp push ss or push mov es jbe lock dec pop fidiv je xchg cld popf add push call fucomp ss (bad) (bad) incl adc mov mov ja gs sub push sti loope add jmp pop mov mov ds imul jae mov (bad) push mov cld aam fisub xor xor push cmp insb (bad) out mov jno adc xor xchg pop loope (bad) aaa adc ljmp add (bad) fdivs or xor cmp (bad) (bad) jg fild clc imul mov test into test xor imul lock xchg jne cwtl sbb es ljmp cli pushl adc dec adc maxps mov out sbb cmp xor lods sub sarl push fisubl push (bad) jbe pop and int loope cli incl dec iret jle or pop (bad) sbb ficomp cmp fcomip mov push insb std mov inc frstor in dec or add xor jge inc dec dec (bad) (bad) (bad) mov mov scas test movsl decb mov pop scas in cmp sub (bad) (bad) mov test push add (bad) call sbb xor xor mov push (bad) ffreep jne and sbb ss (bad) (bad) mov xor inc dec or sub rcrb push sub ljmp jp mov cmp cmpl insb js insb out aad or ja stc mov (bad) data16 inc or add (bad) decl mov call dec pop out aam test push sub or ss pushl jp aad and popa faddl (bad) (bad) incl xorl push addr16 xchg jnp add aam cmc icebp sub pop mov lds adc out mov cmp xchg lahf jmp xchg outsb ljmp push sahf lods jne push inc pop lock and ret mov insl mov (bad) (bad) (bad) decl xor mov mov pop sbb in add add ja icebp stc jo lea out mov jns int test pop rep fwait (bad) (bad) cmp cmp les push lds (bad) ljmp (bad) ljmp mov out insb sbb gs dec hlt incl sbb mov push add lea (bad) lcall add (bad) imul jle mov in jnp pop mov int3 ljmp lahf xor sti (bad) push xchg les xchg out push dec fildl push jmp sahf push (bad) aaa xchg dec roll movsl sbb in insb sub (bad) call pop cmp inc gs arpl fsts mov and lahf incl mov mov sub insb scas xor or (bad) pop xorl (bad) (bad) decl fwait aas adc fildl icebp in dec (bad) mov mov outsl mov rorb dec out (bad) (bad) (bad) decl mov out and dec cwtl daa sbb aas mov push mov test push das and cvttps2pi lods (bad) mov fidivl sar lcall and sub and cmp sar and push sbb mov xchg imul sub into nop (bad) xchg and mov ja add (bad) (bad) (bad) inc icebp gs popf sbb popf (bad) jl pop inc clc sub inc shlb hlt ljmp jp test jge leave cmp daa call decl out fdiv frstor repnz movsb sub ljmp and adc or pop cmpsb inc or into dec loopne push sub decl (bad) call jo shl xor pop mov in pushf lea mov and imul popf test sub std mov pop jns push insl adcl inc push fldenv test (bad) cmp pushf or (bad) mov call out nop gs xor push ds stos pop les sbb inc aaa cmp insl fidivrl or in ja std test (bad) ljmp cld push sub inc pop xchg (bad) mov or fs adc or (bad) (bad) (bad) jmp lea lods pop ficoml add outsl das nop cmpsl ss pusha lods jg add jne pop jl xchg mov mov je fs adc pop cmp sbb es (bad) (bad) (bad) in arpl fadd repnz pop (bad) mov mov adc sub pusha stos les (bad) out ljmp inc test addr16 lods and fisubrl pop mov xlat or xlat push (bad) outsl pop cmc rcll pop (bad) stos xchg imulb xorl popf push add insb (bad) (bad) (bad) incl xchg clc xor push fidivrl lcall jb movsl ret mov pusha (bad) jp idiv (bad) (bad) (bad) cld fstpl mov xchg (bad) stc fs loopne push mov adc mov (bad) (bad) jg mov sbb loop inc jne mov dec test mov sub lock enter cs mov (bad) (bad) jmp popf cmp or push xchg leave fnstsw mov mov pop mov mov out jns add (bad) sbb std fs (bad) ljmp mov das jge cmp test lcall dec cmp or shrb push fisttpl test call dec negb fdivrp push clc int outsl lret jl fdivs mov push ljmp lcall outsb xor fwait addr16 rorl jno (bad) (bad) (bad) decl pop pop (bad) hlt cmpsl jbe rcl jbe int sub in jmp pop dec jns lcall push push jae sti fisub (bad) pushf jne popa in clc (bad) (bad) pushl sti mov push subl jno sub adc cld or (bad) (bad) call fwait mov ficompl cmp sub jnp adc lret lock (bad) (bad) call push add xor or push push loope jne data16 jle fcomip push loop jne cmp lea stos mov pop mul mov scas mov (bad) or imul jmp ret (bad) mov mull mov dec cmpsb out or fwait movsb pop repnz incl stos fwait mov imul push les (bad) (bad) (bad) ljmp jmp jge mov cs sbb outsl mov jne imul and push pusha mov mov cmp mov pushf inc push jg sub xorb jge mov sbb (bad) (bad) call daa sub adc imul sbb xor int3 jge std dec xchg dec cli pop std jne push sbb xchg dec mov clc (bad) cmp dec push mov decl sub mov cmp inc or lret jle mov inc (bad) (bad) (bad) lcall addl leave sbb add xor cmpsb jmp (bad) call jne and mov fcmovnb and inc cmp inc (bad) (bad) (bad) mov jg hlt (bad) jo in movsb push add push test mov adc push (bad) (bad) (bad) jge fcmovnu in add mov cmp sbb rorl jge cmpsl push jbe rcrb sbb (bad) jno sbb ljmp imul stos push mov das pushf xchg jg stc imul sub les loope (bad) (bad) mov lock ret cltd lahf adc popf jmp scas lahf inc mov ljmp dec inc aaa mov jbe xchg test (bad) dec jb bnd (bad) call or cli ret aas rol add xor int cmp jae push addr16 mov (bad) (bad) ds jecxz scas sti lret loope mov mov pop push sbb xchg inc fnstenv je xchg movsb call in test or sub jnp xchg insl jb push mov decl jl push lret and sbb add aaa push mov mov lahf adcb cmpb or incl test cmpsl mov xor iret ja sbb add pushl dec rcll push push pusha pusha movsl iret ljmp movsb aas in jno (bad) sbb out sahf into shr or (bad) pushl (bad) or arpl inc mov adcb mov mov lcall push xchg push faddl inc add push std dec dec inc xchg fmuls repz xchg mov lods loope add mov dec jmp sbb ljmp (bad) jmp xchg dec pop ss leave loopne xchg push clc (bad) (bad) mov and hlt sbb cld cli icebp std and rolb add jg scas int3 ljmp movsl out stos sbb xor mov and inc (bad) (bad) (bad) jmp ljmp sub incl mov imulb jecxz (bad) mov mov xor mov (bad) or dec out dec nop sub je mov cmpsb dec leave (bad) mov mov pop (bad) (bad) (bad) incl fdivrs lcall xor mov aaa fs subl cmp in or adc or aaa mov or (bad) (bad) mov int3 sub into lods mov call in sbb pop es (bad) (bad) (bad) jmp cmp jne mov mov std mov (bad) fist ja out std (bad) (bad) lcall mov jb mov bound aaa and dec dec mov lret rcll inc mov data16 xchg test lcall dec (bad) (bad) (bad) decl test pop aad dec movsl cmpsl fild cmpsb adc dec cmp jno sub push dec xor cmp (bad) (bad) call and fsts shll jmp clc mov pop loopne dec (bad) icebp ret add insl loope inc push (bad) jbe lock mov sbb mov inc jne aaa pop aad pop push xchg xchg lcall (bad) (bad) lcall mov mov xchg pop aaa push ljmp pop inc or lock push pop xchg outsl aad inc jle stc mov xchg js cli das cmpsb mov sub mov call fdivrl inc out data16 cs test pop pop jl (bad) jmp mov sub clc adc adc iret mov (bad) incl insb movsl fstl lahf cwtl aam gs das mov xchg bound (bad) lcall push dec rcr dec push ret (bad) (bad) test dec lods stos fstp push sbb mov jbe (bad) (bad) jmp pop adc push push push xchg jmp push divl xchg popa arpl mov rcr sar jmp pusha decl cwtl or dec pushf xchg mov (bad) call mov jmp js (bad) popf jbe (bad) negl lret inc pminub xor (bad) (bad) call pop jl (bad) jbe push push fbstp jbe sahf dec sbb push push push int popf (bad) (bad) incl push push jno loopne sub es mov (bad) jge loop mov jg jge mov pop add ljmp loope mov sbb pop iret sub (bad) lret mov jbe adc aad mov loop mov and fs push aas xchg (bad) ljmp daa in push xchg jge in ja,pt pusha mov mov inc jae andl (bad) jmp pop sub or and sbb jnp lret fnsave pop push fstpt jge (bad) fcomip decl (bad) sbb movsb ds int3 repz fwait and and (bad) (bad) ljmp iret inc pushf aam mov pop sub (bad) xor gs xor mov inc clc imul jle (bad) into cmp jl xor (bad) mov cwtl adc jns into push (bad) (bad) (bad) mov adc cmp stos out sbb add ret outsl mov or add sub cmpsl (bad) fsts (bad) or pop into sub cs cmpsb fmull test (bad) (bad) mov sbb mov ret dec stos icebp fsub mov inc stc lods pop adc cld (bad) pushl mull pop (bad) cltd bswap jns pop xchg dec or jg inc sub mov mov jb shrl mov hlt mov mov xchg cmp gs and (bad) (bad) decl add adc fistpll push or sub pop mov imul inc or xor lods push push (bad) pushl addr16 cmp (bad) (bad) (bad) cli or jmp shl sbb popa sub sbb bound ja fdivrl mov fstpl add fbstp adc sbb (bad) (bad) fisubrl dec out mov clc out push fwait push (bad) mov sbb xchg (bad) out (bad) ljmp out xchg adc lea repz leave in repnz pop movsl push movb (bad) js jl xchg lea imul sub xlat dec mov mov fild pop pop rclb (bad) incl ljmp mov mov (bad) (bad) (bad) jmp xchg fstp jns shrl adc test pop test scas jmp sar pushl push fimull xchg add (bad) mov sbb pop sbb dec lock lods mov outsl repnz lcall sar (bad) pushl lods push call mov stos jge cmc jl rorl cltd (bad) adc cld popf iret in jg dec ds dec pop and insl jae xor insl pop (bad) (bad) (bad) jmp (bad) in fsubrp and pop adc ficompl adc xor xchg leave daa xchg xchg call cltd out and push push jg out mov aaa repnz data16 (bad) xor daa push mov (bad) (bad) (bad) fcmovnu lods int3 pop cmpsb push into call xor adc loop lds shrb cmp jmp call out push insb andl dec inc rorl sub cld fcomi (bad) cmpsl (bad) (bad) (bad) push mov xor jmp (bad) xchg cmpsb add push inc pusha out xor push aaa adc sbb jo (bad) (bad) lcall test stc outsb cmpsb adc sahf mov cmpsb (bad) cmpsb out lret and cltd sub push (bad) movsb in pop (bad) sbb dec (bad) repz fild ljmp xor (bad) mov jbe add mov mov pushl lods in mov testb (bad) lcall jle push pushf inc fistl lock jno fdivrs sub jns jo inc or adc cld xchg jns xchg dec cltd add ja xchg (bad) (bad) call dec cmp jbe movsb out add push push das mov jbe mov (bad) (bad) decb mov mov mov mov mov pop insb loop and sbb (bad) jle int3 cltd jge xor xchg shrb lcall dec loopne stos cmpsl subl test add mov aas rcll mov (bad) dec jb jecxz stos jecxz insb pop adc shll out pop adc ljmp push mov mov popl mov movsl rorl clc (bad) (bad) lcall jge inc push ss pop (bad) hlt dec xor ds imul add and es addr16 lock add (bad) (bad) incl push arpl adc leave out test stos inc dec mov ljmp (bad) incl into mov ror lods in and jo xchg and ss data16 fcmovu and or inc nop das cli adc sahf mov loopne or pushl loop cmp lret fadds aaa (bad) mov inc xor imul stc sarb (bad) (bad) out cli pushl test inc jge sub mov sar and (bad) ljmp xchg mov (bad) mov pop mov test decl sbb stos loop jecxz push inc and xor cmp xchg les mov jmp sbb (bad) (bad) (bad) lcall iret sbb addr16 idivl jne imul pop hlt jl addr16 insl and testb mov mov pusha insl ret out add dec and enter xor imul in push push mov shll nop jnp fstp mov jb fnsave xchg lods dec movsb addl les jg cmp sub fisub mov cwtl dec call sub cmp xor mov fbld pop sbb and (bad) (bad) (bad) cli mov push inc mov jle inc sub mov sbb sbb cmc mov ds jae dec lods and lea std cli out sub loope fsubr out xor (bad) (bad) jmp lds addl cli lods inc leave cld adc push fwait mov push (bad) (bad) (bad) (bad) incl push ja cmp (bad) mov sub pop (bad) (bad) jae mov lods add fs mov ljmp adcb push (bad) xor add xchg mov push pop mov in outsl pop hlt jmp in push mov fmull push bound ficom icebp cs sbb adc insb mov sbb xchg or xchg dec pop test dec insl jmp mov cli sub (bad) call sub popa fidivl xchg mov loopne int3 scas aas mov and add or (bad) pushl pop stos outsl aas ss adc or inc (bad) aad loope fstl lcall decl xchg mov stc and lahf insl pop dec add push (bad) rolb mov imul xor mov mov dec scas nop int3 mov or shrb cmp xchg (bad) (bad) (bad) incl add add sbb mov popa inc and stos test jb jecxz lcall sub loopne (bad) gs pushl sbb decl ja pop add inc mov test push lods out (bad) (bad) ljmp ret leave and mov push fistpll in stc pop outsl jl adc (bad) (bad) lcall cmp jge int int3 inc aad mov fadd out push ficompl (bad) jmp sbb mov fwait hlt add and outsl xchg fimull jg (bad) std test and nopl subl es jbe (bad) (bad) pushl inc push xchg pusha jbe movsb mov test inc sub inc outsl xlat das xchg mov sub mov fildll pop jmp idivl arpl (bad) insl push jg (bad) inc xchg inc enter dec sub xor jge adc add add das adc dec das and dec pop xor mov rol push sbb (bad) sti xchg cltd fiadd xchg xor dec cmp popf inc adc movsl add or jecxz rcrb ljmp push sbb jno and int inc pusha loope cmpsl jae dec roll (bad) (bad) call mov fs add jae nop pop (bad) icebp mov or stos jmp lea add fucom sbb pushf data16 lock sub jo ljmp adc in outsb mov sarl (bad) incl mov push rolb bound xchg aad outsb jo fisubl jmp dec out adc call (bad) fimul mov push lret addl stc adc mov (bad) (bad) incl pop (bad) out mov jmp movsl repz cmpsb ret iret imul loopne (bad) (bad) (bad) clc inc jmp sub cmc sub jmp mov lcall stos mov push out iret scas jmp fs int3 in jns adc sub lds (bad) (bad) (bad) lcall shlb decl in popf das loopne mov xchg ds pop pop mov push enter mov in push aam (bad) sub decl inc stos xor mov (bad) mov or stos mov lods aas mov out adc inc pushl dec cmpsl cmc jg ret push lods and adc sti rcl hlt pop push clc es adc pop stos movsb mov std enter (bad) (bad) fistpll cmp cmp xchg cli adc cmp pop hlt jnp sub (bad) (bad) (bad) jg int3 sbb (bad) in icebp jl imul ret cld push int3 jge icebp jg (bad) (bad) (bad) (bad) mov push xor jbe add pop jnp ret cmc sbb adc inc out dec mov outsl jp mov test in (bad) fsts loopne add dec pop in or or lahf inc cmp dec jmp sar (bad) (bad) jmp mov and push dec stc not rcll lea jg ljmp (bad) (bad) lcall lret cmp jb dec inc incl cld rorb xchg call cmc mov mov les fs add xor scas pusha cmp int ljmp lcall outsl and bswap jg mov push stos fistpl mov push std arpl lret call std or and xchg sbb je cmp xchg and (bad) lea call data16 inc xor stc cmc pushf fwait test cltd stos or xchg (bad) (bad) (bad) and sarb push jne js repz and push jb dec loop xchg loop and (bad) (bad) (bad) lcall xor cmp push xchg jmp stos jecxz mov jmp (bad) (bad) (bad) jmp (bad) lret xor (bad) int mov imulb loope iret mov (bad) scas mov lods push cs jg decl mov test xor push in fucomi push jb out mov call cmpsb dec clc stos pushf inc cmpsb xor incl mov xorl movsl add sbb dec and (bad) (bad) (bad) decl jmp imul dec (bad) into xor aam push fcmove pop cmp ror movsl ds data16 dec inc (bad) call or sub outsb jne push lods loope rolb pop hlt cltd cmpsl pop xchg mov xor out lcall outsl cmp cld and (bad) cld jecxz aas cli popa out js hlt sbb mov mov fs je push push adc xchg cltd add (bad) into lret push cli push or jp js xchg sbb std jmp data16 cmp enter lods mov std mov mov decl pop lods les xchg pusha in jb xchg adc dec fidivr jae (bad) (bad) (bad) inc inc std hlt jno fstpt or cmp mov push loop test sbb fidivrl lock or adc or hlt xor pop inc mov mov cli or test xor inc (bad) mov aaa cmpsb jmp xor sub (bad) (bad) (bad) decl mov jbe cmp les xchg mov pop fdivrs (bad) (bad) lcall mov lret inc jge mov aaa pop inc or cmp (bad) dec push bound add jmp imul pop sahf roll or fiaddl inc mov daa insb adc (bad) call push pop mov push fadd cmp fild popa or (bad) (bad) fildll lret pushf gs inc cs mov arpl gs (bad) (bad) pushl lods xchg dec fsubrs mov pop stos jb xchg pop fdivl mov mov cmp jmp and dec sub add ss push sub aad xchg scas popl jg and ss cld (bad) test xor (bad) (bad) lcall scas mov mov testl ja dec sbb cmp or test pop idivb clc stc push ret cmp jle pushf sbb out add pusha sbb stc mov aam jnp mov xchg mov (bad) push (bad) sarb pushf insl outsb pop loope add xchg (bad) (bad) (bad) jmp sti adc imul push inc pop std pop dec pushf jns mov nop cwtl (bad) xchg jmp dec or fmuls push cmp push jmp std pop icebp mov pusha jbe pop das mov (bad) adc xchg das push fsubl mov mov push push bound sbb addl ficom movsb lret mov lcall nop test das push lret sbb aaa divl movsb and lcall push mov adc mov (bad) pop and gs jecxz decl xchg and lods rorb loopne sub leave xchg (bad) (bad) jmp jb or sbb ljmp inc shrb and adc and push in and lret fsubs pop cwtl pushl or out sarl sbb jo scas lcall (bad) (bad) (bad) pushl inc idivb jo leave or fisttp inc xchg pop repnz outsl push xor clc (bad) push adc add fimull jge cmp (bad) incl or scas outsb cmpsl pop jle aad pop divl mov sbb cli (bad) jmp adc mov push dec xor mov (bad) dec sbb jecxz sub sarl jmp (bad) fistp lret in adc lcall and lcall (bad) pushl pusha inc dec fsubr sub fnsave push shlb (bad) (bad) (bad) decl lds mov rcrl data16 enter xlat lods mov add (bad) (bad) (bad) pushl notl (bad) je cltd out adc mov inc mov mov push sti inc inc ds icebp movsb inc adc pop clc cmp ljmp pop fcmovnb pop movl (bad) scas or jge (bad) (bad) mov push jno ja ret ja add popa push shlb mov xor dec dec js mov pusha int3 mov and cmpsl lret (bad) jg stc sbb jmp dec jo rcl mov ja adcb sbb cmp pop add (bad) jg icebp insb pop out mov sub push cld xlat js,pn inc xchg xchg inc lock adc dec loop xor cmc mov movsb sbbl (bad) (bad) dec and nop sub mov inc xchg sub jb int3 or incl xor mov mov xor (bad) push div into add fwait addl int push iret sbb (bad) cs mov cmpl decl mov adc gs or inc cwtl mov sarl in mov mov jae pop cmc leave lcall inc (bad) jmp inc mov adc sbb adc sub (bad) mov pop push xor (bad) cld mov xchg mov mov dec cld (bad) decl loopne push xchg sbb and flds jmp xchg lcall pop or or fwait mov inc lea (bad) (bad) dec ss fadds arpl cltd mov or fistpll lcall fstps jg (bad) ljmp adc stos xchg ret es push mov mov icebp (bad) mov mov call sub das pusha call cs incl cld xor lahf enter xor add test (bad) decl dec bound pop (bad) les mov xchg add das add and fstl scas stc stos fidiv imul arpl pushf in jge leave mov jle repz mov xchg data16 mov call andl sbb push loopne cmp adc mov adc ss loop lock (bad) (bad) jmp loop leave and xchg or stos out sahf inc movups sub sahf or xor jle es mov lcall stos pusha xor inc data16 mov mov (bad) (bad) (bad) pushl jg push ret fiadd loopne inc loopne xlat hlt cmp push jae psubb lcall sbbb (bad) sbb push mov decl mov cltd pop movsl jnp (bad) mov das jnp (bad) (bad) pushl ret (bad) mov adc push cs and fsubl lcall inc std call mov dec mov dec out add pop push mov iret lds and (bad) sub mov or lahf cmp adc faddl or jmp clc (bad) (bad) incl popf xor pop mov inc jbe loope cmpsl fs mov popf and and imul call pusha push movsl insb jb jae out xchg out imul (bad) (bad) (bad) (bad) stc and cwtl sti push sub mov adc and jne mov aas movsl (bad) ja mov (bad) (bad) (bad) jns sbb pop into pop dec xchg out pop pop fisttpl and insb int3 jecxz mov xor (bad) (bad) (bad) cmp out add mov xor push lahf cmp lock and pop lods jmp dec loope pop push xchg pusha std (bad) (bad) stc out xchg mov xchg xchg cmp or gs xchg outsb (bad) (bad) decl test pushl pushf mov sub sbb int3 or pop cmc mov add in int push fadds (bad) pushl xchg shll pushf and adc cltd add movsl aam jo cmp xchg shll (bad) (bad) (bad) pushl rcll dec out cmpsl jle imul dec xor daa addr16 repz push push cmpsl jmp outsl nop mov ror jle sub fdivs xchg mov les xchg ss lahf movsb scas cmc jo mov lock popa mov jmp sub jg push lcall scas jle push xchg incl push lret push xchg and (bad) mov call add sbb shrb jg inc std add xor dec xchg bound jb (bad) (bad) pushl bound js pop jbe jmp cmp mov bound or mov test and dec fwait call mov inc leave pause (bad) scas xor jb (bad) (bad) (bad) lcall pop int3 in pop mov test ss pop and (bad) dec sub jbe mov xor pushl lret mov addl outsl jg (bad) lcall fs repnz xchg mov clc cmp repnz lds lcall mov (bad) jg fs sbb sub push icebp mov sub or imulb ret xlat xor add push fild or (bad) or (bad) add (bad) (bad) ljmp pop jbe adc xlat inc pop ret in mov sbb jmp inc inc call add (bad) pushl push (bad) cltd stos std cmp lret mov lods push insl sarl cmpsl cli (bad) (bad) call jl enter and push jae adc pushf fdivrl ja sar out sub push push call pusha cltd pushf sbb cmp or jg into fcomps add es cli lea or outsb sbb xor incl sub mov in fistp pop mov cli icebp lods jge test add cli jg test mov sbbl addr16 pop out inc (bad) push incl add push add and (bad) jg (bad) adc sub add lcall test mov push (bad) dec test add jns mov das xor push into or and mov gs popf add sbb hlt (bad) fdivs pop popa js sahf cmpsb ljmp (bad) (bad) (bad) mul notl iret ror jmp popf mov (bad) (bad) (bad) (bad) mov lods xor (bad) in fcomps dec sub jae (bad) jbe dec movsl enter incl mov int3 pop mov test loope imul dec jl cmc xor inc loop (bad) (bad) ljmp fmull pop dec fldcw push fidivl lcall int mov inc push ljmp adc push pop hlt cmc inc inc add ljmp jo jle lock out pmaxub sbb lods mov fidiv mov rclb adc and dec test (bad) (bad) push (bad) ja xchg add lods addr16 fs xlat xor lahf (bad) (bad) (bad) dec dec dec jl xchg jno fcmovbe xchg adc js out (bad) mov dec jno xchg (bad) mov ficompl mov decl in or adc stos insl lahf push jnp sbb push xchg js jnp out xchg (bad) jge sbb and into push stos imul mov call (bad) pushl xchg or incl and cld xchg and and cmp sub xchg fild lods lahf out cmpsl out or popa xor push sahf sub (bad) adc (bad) (bad) js xchg mov lahf cmp aam and mov sub xchg lcall push sbb cmp xchg ds ja sbb loop pop aad push (bad) (bad) (bad) lcall pop (bad) adc lahf xor in mov cmpsb mov mov flds clc pushl mov int jmp xchg orl sahf fstps (bad) ljmp adc cmpsb jle xor and (bad) incl imul arpl call lret jg or and imul fcompl test (bad) (bad) call roll fcomi shr mov (bad) es aaa and test jb adc out (bad) (bad) jg jg xchg jg jne mov xchg lea dec lret (bad) pushf pop add mov cmp pop push and push (bad) sbb xchg pop nop scas add jmp std or fnstcw sahf jecxz ja enter adc sub ljmp mov fnstcw dec cs (bad) movsl adcl stos mov pusha std dec mov push out ret ljmp push (bad) mov add inc and dec and divb popa sbb (bad) jmp hlt in js bswap or inc add mov and cwtl pop pop adc xchg mov cmpsb inc push xor pushf out out pop (bad) (bad) (bad) call jg lret add and and ret xchg sbb repz or decl jnp jl out pop push aaa push fisttpll or sarb inc mov mov enter movsl cmp jg (bad) (bad) (bad) call mov outsl scas inc dec loope icebp pop stos push lds cmpsl ss pop xchg jne inc sarl movsl or movsb bswap test xor das jle es (bad) fisttpl jns stos es inc sub xchg jo xchg stos int3 (bad) jns decl into push gs sahf test out (bad) (bad) (bad) pushl ss sub xor mov pushw inc lahf (bad) movsl hlt cmpsb aaa inc je adc jmp add fimul bound mov lcall mov gs dec sti fbld into mov mov sub rcrb xchg icebp (bad) (bad) (bad) decl dec sarl movsl jnp (bad) test add (bad) loopne bound sbb sbb (bad) (bad) call inc pop out dec outsl jge sub mov add xor add mov call aam lods int3 fmulp call loop jge (bad) (bad) mov adc lret gs cmpsl aas jge gs js pop daa inc clc (bad) (bad) (bad) js pop or (bad) in jmp hlt adc insl (bad) fdivl xchg jmp (bad) call add jnp lahf push in adc popf inc xor decl dec dec lods fwait add jecxz (bad) int sub scas push (bad) mov cld ljmp out xor push xchg (bad) lcall fcomip mov xor out add movsl jl rcrb push xor fildll frstor pop js add sbb xor fstl or (bad) repnz xor mov pop or movsl je mov (bad) (bad) incl icebp push mov rorb addr16 xor nop out stos cmp ds int (bad) (bad) (bad) cld stos adc jb int xchg and fstpl inc or mov imul insl ljmp mov xor das mov mov decl (bad) add ret popf pop ds xor (bad) (bad) (bad) ljmp mov xchg sub enter pop dec xchg adc adcl arpl mov xchg inc xchg dec in jge push popa out jbe loop adcb jae shlb xchg sbb pop push stos (bad) (bad) (bad) decl int3 daa lret lock inc sub ja add xchg inc pop aas cmc mov sub pop mov jp sbb and add (bad) decl xor push test adc or loopne inc adc enter sub fwait and cmc inc push xchg (bad) inc mov and adc and (bad) (bad) jmp rclb arpl sub mov or stos leave inc cmpsb mov int movsl add (bad) (bad) call push jl fildl jno cmpsb pop push pushf rcll loopew clc mov out repz xor (bad) (bad) (bad) jmp test push lock mov vpslld mov sub cli dec cltd jg outsl xchg (bad) mov dec pop xchg cmpsl dec jmp or mov test imul (bad) js jbe mov insl ror adc mov mov xchg fiadd fwait inc inc fisubrl mov fld push sbb (bad) cs xchg out cld xor mov cmp cmp (bad) jp int3 xchg fsubl insl mov or rol std cmc pop test loop icebp ljmp or lret shrb je data16 out shr dec fdivr (bad) lcall mov popa das lahf clc push inc divl mov cmp or outsb push mov (bad) stc arpl aaa push callw imul ljmp and push inc mov lods push push iret shr aam lods pop or jbe pop adc cmpsl adc inc pop out ret xchg (bad) add daa xchg (bad) out (bad) out (bad) (bad) lcall sbb sbb stos insl inc addl out (bad) sbb pop jne out das xchg hlt pop idivb test xchg fidivrl (bad) (bad) mov int3 xor mov adc mov sarl dec sbb xor call jmp call rclb sahf jnp leave dec sbb daa push incl or or cmpsl xchg cs out mov xor loop jmp incl add loopne inc call mov scas mov fsts pop add push fistpl inc xor test cmp in outsl push add ret (bad) mov sarb adc mov inc fisttp aas stos xor in lcall jle mov (bad) icebp mov cmp ja mov aas imul sbb inc int dec pop (bad) (bad) mov iret (bad) in out sbb into jns fs mov cmc pusha (bad) (bad) (bad) in mov outsl (bad) jg inc mov lods mov les insb sub lods pop dec mov (bad) (bad) (bad) (bad) (bad) sbb ret dec mov mov jmp rclb cmp adc (bad) call add mov add dec adc pop pop arpl dec pop cmpsl in ffree pop push xor mov xchg outsb push call inc test fcoml (bad) (bad) (bad) (bad) cmp dec lret mov test mov cmp fist pop pushl arpl jo or test inc out frstor add (bad) (bad) call add mov jns stos aam fs aaa pop jns xor in leave lock (bad) (bad) (bad) dec sub xorl jmp inc xor add ds pop inc or decl (bad) jae stc cmp push push cwtl add cmp xchg push and mov sub lds push or mov shrb xchg fdiv dec es jae xchg push adc jg jp jp jg inc test xor mov insb repz adc (bad) jle loop push sbb aas lcall pop shrl jle push mov loope ljmp out xchg outsb pop and xor pusha or and jns fsubs icebp clc fistpl inc pop stos and imull xor dec xchg sub (bad) call (bad) add fmul popa dec pop insb test cwtl adc call cmp je loop mov xor insl repnz (bad) (bad) (bad) mov and rcl cltd cmp stos mov and in movsl mov push push cwtl adc nop lret (bad) (bad) mov lcall or cmp sbbb xchg nop mov and (bad) jle (bad) ljmp int3 mov cltd push sbb push mov cld cmp sbb add push (bad) (bad) (bad) jmp (bad) je sbb dec xchg incb clc imul sub jecxz push ds out test mov ror mov mov xor pop dec jmp cmc insb out mov (bad) (bad) jmp jle cwtl adc sub adc popf dec aad push call sub mov (bad) inc jge cld je add lods mov aam les sub loopne or (bad) (bad) (bad) (bad) std and xchg pop mov loopne lods cltd sbb push aam dec (bad) fmuls jmp cmp hlt stos sub sbb shll cltd test (bad) (bad) out add aam or push cmpsl xchg or repnz adc out jp mov sbb hlt outsl xchg mov lods aaa test fiaddl (bad) call lcall mov push (bad) test aam dec add in (bad) (bad) lcall jnp les mov jnp xchg enter fistpl jle cwtl xchg pop dec shrb mov lcall fwait enter mov stos (bad) and mov clc in popa into and out clc rorl add aas sub dec mov jle insb and add inc call lret pusha pop mov cmp sub mov sub int sbb pop jecxz mov push or (bad) pushl jo cmpsb cmpb or hlt and fucompp mov mov mov mov sbb jp addr16 call shlb pop movsl aam mov mov (bad) pushl std stos mov je dec and cmp sti adc jnp pop pop mov (bad) (bad) incl and loope fadds cmp dec imul (bad) jg sub sbb mov or insb mov (bad) (bad) (bad) mov movsl mov in aad sahf jbe mov xor mov pop dec push and sbb ss jne outsb (bad) dec xchg scas (bad) cmpb sahf mov push stos scas (bad) (bad) (bad) fdivr dec mov push sbb arpl mov jp (bad) (bad) (bad) decl push into pushf dec push push rcrl cs push icebp sbb dec jg imul loop mov jge lret lcall (bad) ljmp xchg add jns jb and (bad) sbb fildll add or imul inc inc test hlt addr16 jp mov aam repnz (bad) (bad) decl ja (bad) mov inc sbb in (bad) sbb sbbl mov pushl dec mov (bad) cmp fdivs idiv ljmp out cli lcall and xor adc jl adc xor inc push fdivrl push (bad) (bad) (bad) (bad) jmp test adc shrb fwait leave inc cmp ret jno or inc mov je mov or test cmp mov add push mov and jne dec jge cld movsb mov dec xor lds lea imul adc andl sbb pushf or adc (bad) mov stos dec (bad) aaa subl lret pop rcrb out (bad) lcall mov or mov xor pop mov mov cli (bad) (bad) (bad) inc jb mov jo dec lock cmp and in add fidivr xchg sub (bad) fcomip (bad) in mov decb mov push add inc js sar ljmp clc pop dec jns ljmp mov mov or mov xchg (bad) (bad) lcall mov push xor jns scas test fnstcw sahf jnp (bad) mov (bad) out in inc test leave mov clc lcall inc fxch insl xchg cmc cmp mov adc std dec sub daa dec push enter (bad) movsl mov data16 (bad) (bad) fstl add mov dec ror jmp adc or (bad) (bad) jg shr popf and std bnd leave bound jnp subb cmp inc lods js clc pop cmpb jb xor js (bad) and adc push cmp cmp adc (bad) (bad) (bad) jmp sbb insl imul call mov cltd mov outsb cmpsb cmp push push insl jmp xor cmp call push shrl outsl fsubs jge push out es jmp icebp lods sbb loopne mov ja call cmp mov arpl cmp (bad) cmp pop dec and push repz (bad) push ljmp loop cmp xchg sbb fidiv sbb mov fstpl orl es and repz push pushf stos pop clc (bad) (bad) call push clc or mov adc in loop imul xchg sbb pop jge xchg (bad) icebp into (bad) jmp mov std pop les mov mov jne nop insb add mov sbb pop loope mov inc mov jae scas out lods fildll (bad) jg into xchg sti popf test mov inc sbb gs push lods les mov (bad) (bad) (bad) call repnz movsl (bad) daa adc fistpl clc lret movlps in mov cmp sub (bad) sub mov sbb mov jecxz outsb incl adc jnp fcoms addr16 ficompl (bad) jmp mov jns jle icebp xchg jns add (bad) jg (bad) ljmp stc das jl sbb test frstpm(287 stos push (bad) sbb jl pop lods inc lcall std dec xchg add inc push dec adc (bad) (bad) (bad) mov stc sub (bad) in add (bad) aad dec xchg inc ss in mov xchg dec adcb fdivr push cld call mov pop pop mov push scas push pusha mov mov inc mov pop xorb and mov cmp mov mov (bad) incl pop sub or adc addr16 push (bad) loope int incl sbb (bad) mov ret or lock fucom jecxz sbb (bad) (bad) pushl scas mov cltd iret mov icebp stos mov mov ja cmp (bad) adc (bad) mov stos repz and mov lahf pop fistl sti sbb dec (bad) (bad) (bad) decl xlat loop aaa in xlat insb sbb mov xorb rcrb mov add (bad) ljmp sarb (bad) mov and into rcrb cmc outsb clc pop test xchg or (bad) jg outsl jb,pt cltd ret fsubp add push cmp loopne or out push test sub mov inc sub decl hlt add mov sub scas dec addr16 xor push hlt push into sbb (bad) out or es ret cmc (bad) lcall mov push pop movsb fwait add out xor sti nop (bad) (bad) (bad) incl out adc sub or add (bad) (bad) (bad) pushl jae cmpb xlat inc ficom jae push lock sub pusha (bad) addr16 negl (bad) (bad) call add fidivrl cmp inc repnz fsubl (bad) (bad) decl fs daa push or pop mov stos sbb jmp inc loop hlt jecxz (bad) (bad) inc push jae sbb lret cli adc cmc repz or sbb sub mov jg (bad) fbstp insl push dec jbe hlt shrb add xchg sahf adc mov pushl sub in imul into push inc popa mov out mov (bad) (bad) jmp aad loopne jge pop lods call push or sub adcb pop push mov xchg pop cmpsl ljmp mov mov ljmp xor fisttpl and push add dec push mov push iret lock mov decl and mov add fadds mov fsubs dec adc data16 cmc fwait (bad) (bad) (bad) call inc pop add mov mov lahf inc push aam insb inc inc call sub sarb (bad) gs sub dec fistl sti sbb inc fsubrl scas les rclb mov nop (bad) pop cltd sbb push cld pusha xchg jecxz mov inc jmp lret fdivrl push lar xor pop ss out imul lea movsb cwtl jnp sub (bad) pop in bound fs (bad) decl aaa mov int3 incw jl loope mov stc sqrtps mov addb mov mov decl cmp iret sti daa idivl call cmp imul (bad) inc sarb cmp sahf jp daa das mov push jle aas ljmp jbe aad popa add nop ljmp sarb (bad) sbb dec (bad) daa lret (bad) (bad) call jle jno and cmp mov lret xor add mov push mov sbb add jge das mov mov les mov hlt sbb fnop push sbbl mov fildl mov add or js adc sbbb pop ja mov pushf leave (bad) (bad) (bad) incl xor or sub mov inc push add das icebp mov or sbb fsubrl xchg push fwait sahf dec loop arpl and adc jg inc cld les xchg addb into xchg shlb (bad) pushl int3 or and xchg pop pop cmc lahf jp inc pusha inc mov xchg test fnstsw cmp (bad) (bad) (bad) ljmp push cmp fnstsw out xor mov (bad) mov or out inc mov push stos test inc sbb add or dec in test dec cmp mov (bad) (bad) (bad) call js repz sbb pop pop adc inc pop rcrb fisubl xchg imull cmp (bad) incl inc cli xchg jmp xchg loopw pop jge shr aas incb adc jbe in add sbb (bad) (bad) ljmp lcall sub inc push jmp out push je dec daa mov jecxz out sub aad dec out dec std (bad) fisttp out ja aas les out adc cmp (bad) (bad) jg push test sbb cmpl cmp mov scas pop stos out fsin insb mov inc xor mov add jg aad pop or (bad) lock adcb xor pop or add mov (bad) cmp ljmp sbb lods mov scas cli push lods xor out push dec mov sbb adcl (bad) call (bad) pop dec push xor (bad) adc jo int3 push not add mov push lock add (bad) (bad) decl rcll sub lds xchg stc push xor and dec add into sub sbb stos mov adc dec fldcw lea or (bad) (bad) pushl xlat das mov push lahf mov insl dec scas and sub movsl (bad) call lret es lds cs lret arpl call outsb out je xchg jne xor xchg push or mov mov xchg hlt mov adc xorl add test push cmp pop lcall aaa ljmp push adc test rorl push push mov pushf lds push dec imul lret cwtl xor fcomip (bad) incl sti xor jmp lea mov out adc push xchg loopne aaa std (bad) lcall add adcl push pop sub sbb incl clc sub lahf jno sbb inc push or test add jno outsl mov or (bad) fisttp fmuls jmp xor rcl mov (bad) fsubrp push pop inc jg icebp jmp fimull clc cld mov je dec pop ljmp inc mov ja test jp lock sub (bad) (bad) (bad) jmp jb imul pop add sbb xchg mov (bad) (bad) (bad) call mov fcoms (bad) cwtl mov mov or cltd adc repz (bad) (bad) ljmp dec rclb cwtl xor or lret jge add and (bad) iret ljmp and (bad) call jmp clc and sub stos add sub inc push xlat enter pushw mov rorb sbb xchg (bad) (bad) (bad) jmp mov adc cmp adc xchg adc mov sbb pop (bad) fsubs mov popf data16 jns jp jo sbb xor (bad) jo lds xchg push mov decl push pop movsb (bad) out mov loope (bad) nop add jg icebp lret adc dec aad mov nop (bad) pop dec loope mull pop test jne ret (bad) jmp mov sbb jae mov mov pushl pop icebp mov fstl push popf in or adc aam pop xor dec dec jne test mov (bad) (bad) decl (bad) stc stos stc mov in repnz imul movsb pop insl xchg cmp push (bad) dec sbb inc (bad) (bad) (bad) (bad) stc xor xchg cltd mov inc dec mov jnp mov mov jmp sar cli mov ret xchg or pop clc (bad) (bad) pushl jg scas ret jl mov dec xchg pop adc push fstl mov rcl in adc inc (bad) (bad) inc push (bad) mov add ret add pop pop in or decl push das clc jbe das outsb pop in stc pop (bad) (bad) (bad) jp in push test std mov lahf mov push rcll aaa pushf cmpb push (bad) (bad) cmp cli outsb imul push sub jne ja sti jle repnz ljmp rcrb (bad) push mov jae popa push lods mov xor cmpsl (bad) (bad) (bad) pushl or jo and inc xchg mov jne mov sbb (bad) (bad) (bad) incl jb enter sbb mov insl dec or cmp fcomps push cli pusha add jmp jbe (bad) (bad) call cltd pushl je and cmp mov ror cwtl mov inc cwtl lds ret xchg dec lret retw fucom aam pushf out sahf stos jle (bad) aad pop pop mov loop push cltd (bad) call loopne or adc cmpsb (bad) lcall outsl xchg fbld sbb pop lds cld fwait dec sub (bad) lcall cltd adc cli pop outsl xorl leave hlt jecxz sti inc out into or and and push add inc xchg pushf xor lea rclb mov stos std push lcall (bad) es in push mov movq inc xchg test (bad) (bad) ljmp pop (bad) sub cmp (bad) xchg outsl mov ja push xlat (bad) (bad) incl sti adc cmp ds jns pop and es sbb sub sub mov stos gs adc jle lods xor stos fisttp les or add pop std (bad) jp cwtl lret dec push jmp pushf scas sbb cli subb popa inc inc push sbb adc pop (bad) sar out mov insb aas sarl test xchg inc (bad) bound inc sbbl (bad) (bad) (bad) (bad) aas jg lret in sbb lods add pop and cmpsl jmp pushl pop sub fdivrp (bad) (bad) call sarb in lods cmp outsl pop loopne sbb cs mov pop std (bad) pushl inc loope je in icebp add scas lahf in insb xor xchg mov out mul (bad) lcall (bad) arpl ljmp sub (bad) movsb call rcr push out or (bad) decl sub lods outsb jl js imul sahf mov xchg mov sbb mov hlt (bad) out or test pop pop (bad) (bad) (bad) (bad) mov push add mov cli sbb xchg shrb mov cmp inc jno push jg mov mov sub mov xchg xor test fbstp sub adc dec mov or stc cmp jne mov insl push js fs mov pushf mov sub (bad) or push jnp push pop xchg scas imul fwait call add rcrl pushl scas pop mov lods in mov movsl cmp es shlb (bad) xchg loop js xchg jo add bnd add mov icebp push pop adc adcl push jle mov sub in popa mov xchg (bad) aaa int3 fs (bad) jl lret push std push lcall std (bad) (bad) push jle jnp mov out stos jg xor pop xor into pop mov pop push mov bound shrb (bad) (bad) jg inc cmp das scas push movsl add lods lea lret pop (bad) fdiv pop push push aam cmovno decl and fimul inc jne das pop add int3 call jbe jo add and icebp add xor out adc push cmpl and inc (bad) lahf aas jmp pop sbb fs in xchg in adc ficoml (bad) jg and mov xor orb pop fbld cli ret mov mov fmulp mov cmp and push pop sbb sub and mov sbbl out push int3 fcomps cmp pop adc add js pop stos in push ficoml decl push ljmp xlat mov inc push enter mov adc pop es (bad) cld sbb shll rorl ficoml jg (bad) push and and jecxz or stos fidivl dec mov and dec mov mov lcall addr16 and sar arpl repz mov jne jecxz (bad) incl pop sbb and test cld inc fcoms add mov outsb fdivrl mov adcl jo lds mov test lahf sbb (bad) (bad) decl mov lea or jge popf sub add outsl adc add mov cmp jecxz repnz cltd sbb sub (bad) add loop ljmp (bad) aas xchg pop and mov stc scas xor imul cmc (bad) jg pusha adc adc mov mov xchg jo adc lds lods mov (bad) (bad) fbld int3 add lods out divl adc in lock lods adc movsl fidivrl xchg cmc ljmp lcall xor inc (bad) mov in xor hlt aad dec or xor decl daa add jmp test jg and adc int3 mov loopne cmp push jne pop pop cmc (bad) (bad) fsubs loop and pop xlat fild add push les (bad) jo faddl pop je dec jp or data16 mov or add mov ja (bad) call arpl bound and hlt mov inc insb xchg test push shrl or push insb jne jp (bad) (bad) fistp movsl in data16 push in xlat idiv fwait pop test ss push jle (bad) (bad) (bad) (bad) in pusha push inc jecxz inc mov mov mov pop clc pop cmc mov fnstcw pop dec push decl sub das cwtl add cli sub inc es aaa dec adc add xchg mov mov (bad) mov cmp (bad) xchg rcl lret ljmp jbe cltd mov movsb adc lock jge adc jo ja pop mov aas mov (bad) pushl cld xchg dec es dec sub pop jns inc xor (bad) in mov push push jecxz inc add out movsl repnz insl pop jge fsubr (bad) (bad) pushl std xor xchg jae popa or lret cld and adc xchg pusha and jb lret (bad) jmp pop dec mov pop lods pop lods mov cli add cmc mov clc sarb sub inc sti (bad) call fxch push dec xor and add push or int3 (bad) cmp dec push stc loope fadds sub jle lods out pop lahf cmp mov (bad) (bad) (bad) jns xor jns push adc icebp std cld into xor jne ret inc xchg pop add (bad) (bad) ljmp test lods (bad) jge mov loop leave int3 jmp xor sub mov (bad) stc xchg and loopne aad and pop pop mov test (bad) decl xchg sti leave mov mov sbb push imul (bad) insl lahf nop inc add enter mov leave or sbb lret fiaddl (bad) (bad) (bad) jnp dec dec inc int3 ret (bad) xchg shrl mov movsl mov mov dec adc sub das xchg movsb (bad) dec mov ror shrb and clc (bad) mov and add push clc nop movsl mov dec (bad) (bad) (bad) lcall into dec pusha dec rorb jbe popa or into nop xor sub nop hlt sub dec out fisubr not push test into adc imul mov push fistpll inc and (bad) sbb jns push mov cmp cmp lcall stos stos popa out sarb ss xchg pusha add or (bad) (bad) (bad) incl les notl fst jg adc enter test nop cwtl sub mov pop inc cs outsl sar (bad) lock pop or inc and in sbb mov mov ja (bad) xchg ficompl cmp ljmp cli mov mov lcall gs inc (bad) jg jg stc loopne xor ret mov cli mov test xor sbb adc ds daa push scas lock add push jne mov sub or dec popf fdivrs dec std mov cmp setg inc in add (bad) incl (bad) fsubr and and and imul cmp add push (bad) jg loopne js repz xor ret add aam mov add cmc xlat mov cmpsb or add jecxz sbb and sarl (bad) (bad) adc stos out xchg mov imul or mov insl outsl insl jne inc insb dec pop mov arpl jp or call rcll outsl push and mov mov add sbb scas fs jecxz lret out cli decl mov lds test imulb cmp (bad) (bad) jg popa pop adc push add ja repz cmpsl data16 xor (bad) (bad) (bad) mov and mov (bad) xchg mov cwtl xchg or xchg push or (bad) (bad) (bad) (bad) fildl and adc pusha lock pop neg or insl pushf into ja jg fdivp popf mov inc mov mov lcall decl rcrl loop (bad) adc add lret ret xchg lretw data16 jl (bad) jg movsl sub repnz stos addr16 jg dec adc fistpll or mov push sub lods push sbb (bad) decl (bad) arpl lods fwait inc cmp clc dec (bad) cld outsl call (bad) decl dec adc or insb fnsave je inc push xor iret push inc gs sahf aad mov sbb dec outsl add mov pop mov or (bad) (bad) (bad) jmp sbb rorb repnz mov push xor or (bad) (bad) (bad) std push xchg loopne jne xor mov out test insb mov xor cmpsb push (bad) popf es xchg ds (bad) (bad) ljmp cmp fwait adc and orl pop cmp mov jmp (bad) jg outsl mov pop in add cmp scas cmpsb xchg jl dec adcl enter je roll decl push std lahf faddl popl mov shrb add pop adc cmp int xor (bad) (bad) ljmp std (bad) mov dec fnop call in movsb daa rcrb mov inc les out clc (bad) (bad) (bad) aas xor adc and sbb cmp repz dec js jae outsb cmp cs je ljmp and xchg inc push cltd xor cmpsb xchg sub lret ja add je dec fimul clc jg and push cmp fdivrs cwtl jmp push sbb sbb sbb scas add jl mov mov push pop or test jae dec (bad) hlt sti xchg scas out ljmp (bad) (bad) call jge xlat pop and sti (bad) test pop mov xor or mov mov xor test rcrl sub (bad) cld sbb mov and or pop mov xchg cmpsb sbb call pop sbb adc cmp add ljmp arpl push mov push fildll (bad) (bad) jmp or or shrl xor sbb jns mov pop jne adc out mov mov or ljmp pushf jne cmc xchg stos inc (bad) sbb pop ljmp mov mov jmp loopne push sub outsb dec sar cmpsl pusha fwait adc jge dec pop into add (bad) (bad) call xor fbld push add adc mov js pushf push out std sub adc (bad) (bad) (bad) incl iret inc cwtl cmp es cmp sub add hlt adc mov xlat in jge out cli fwait and push cmp les and jnp out fiaddl addr16 (bad) (bad) (bad) stc xchg hlt fstpl pop jne fisttpl int3 mov outsb mov mov push mov add xor mov rep cs mov (bad) dec nop push movsl push adc ljmp xadd cmp adc shll pushf (bad) je dec add incb xchg js cmpsl jg cmc pop cmp mov pop addr16 xchg or push cmp (bad) jmp popa xchg test xor rol addr16 test imul stos pop adc (bad) (bad) lcall fs sub mov mov out mov jmp mov call leave jmp and cmp insb fnstcw ljmp test (bad) sti fisub in mov jg test fs adc and dec jecxz decl push fcompl mov (bad) testl lcall ds mov mov cli adc insl dec cmp scas in es call loopne cmpsb cwtl mov scas cmp add mov mov hlt scas pushl lcall ud1 sub xchg ja lds (bad) pushl jle fwait xor and outsb add out fwait cmp dec dec xorl sbb (bad) (bad) (bad) jmp outsl sbb push mov cmp movsb xchg mov push (bad) loope inc popa (bad) (bad) (bad) call jle outsl xor or jmp lret inc and xchg mov and out insl clc mov dec int3 jo in dec fcoml mov mov mov cmpsb divl in cmpsb popf and pop xlat cs rcl dec js loopne jne (bad) (bad) (bad) mov push in mov xor mov push lret adc (bad) test daa push repnz sub out stos mov decl and jb test lods shll mov lcall sub mov xchg int3 lret sub (bad) mov or inc cmpsb cmpsl sub int mov push jge mov stos scas jl mov lret (bad) (bad) mov rcrl icebp mov push mov addr16 js inc mov xchg sbb call adc or (bad) mov and call das sub jg pushl pushf mov xchg or mov xor mov js ret inc dec add (bad) fist sbb ret mov (bad) fisttpl inc jno cmp repz mov fdiv sbb ds cmp rolb mov add inc mov nop icebp decl or mov or les (bad) (bad) (bad) (bad) lcall std fcmovnbe (bad) bound push add or cmp ja outsl orl fucomip lods sbb pop scas ficomp (bad) ljmp jl aad test fistp into adc mov movhps ret (bad) (bad) jg (bad) cmp xor and cmpsl test sub (bad) out xchg mov (bad) push loop jb lret int3 aas (bad) (bad) (bad) call loop sbb push ljmp pop adc sbbl xor dec test (bad) (bad) inc (bad) repz mov out or and inc mov arpl cmpsb divb cld fldl (bad) (bad) (bad) call mov push cmp aam jo jmp dec cld out fisubr pop decl (bad) (bad) sti sub pop cmpsl sub sbb sahf jno int mov test mov (bad) fwait sub lods (bad) hlt push jecxz push out cmc roll (bad) (bad) fstl enter dec loopne stos jecxz xor add (bad) mov (bad) icebp iret mov (bad) shll popf and inc fwait js and mov xor mov push (bad) (bad) (bad) ljmp pop out cltd push jo loopne movsb xchg les es mov ss xchg adc adc jo sarb pop lds aad test mov mov inc mov or lcall fbstp mov sti xor incl ret jmp push push rorl out adc outsb xor (bad) (bad) call out lods mov and outsb sub mov jge mov jle lea pop pop lds dec xor sub cmp imul cmp popf out mov pop aas inc sahf insb testb mov fcoms (bad) (bad) (bad) call into mov lahf aas fdivs jbe pop out scas stc out mov cmp test repnz enter mov (bad) (bad) pushl jg popf cmpsb (bad) es xchg shrl fwait cmp mov mov nop mov dec jnp (bad) (bad) jmp lods xchg push nop push jecxz add jp mov pop mov dec (bad) imul call inc scas (bad) mull push mov xchg lods adcl (bad) call push jg jnp or (bad) (bad) push cmpsl imul pop movups xchg mov pop cmp int3 push lcall jg (bad) fcomps fisttpll pop pop out ljmp xchg rcrl ds idiv (bad) (bad) call pushf addr16 imulb outsl mov pop sub das xorl insb jge loope in (bad) mov lcall gs mov or jno xor shl rorb iret or mov and pop decl fdiv rcrl test or nop (bad) (bad) (bad) call insb push in mov dec xor push les movsb outsb jl icebp sbb adcl pop lock fwait aam jnp ds in or iret cmp push notb rol movsl push mov call xchg sbb out lahf xor adc rcrl test leave xchg jg (bad) inc fsubrs adc lods mov (bad) incl mov or js shrl xchg fcomp inc loop fmull jo (bad) jg sub (bad) call mov pusha xchg (bad) fisubr fs sahf imul or jmp ret xchg or mov sarl sub jns (bad) call pop and popf mov mov xor and aaa lods jns stc mov jmp cmp int cmp js nop sub arpl cmp fnsave mov das dec dec push adc ss adc jmp (bad) (bad) (bad) lcall xchg daa xor or mov mov aad lahf mov mov scas jmp and (bad) pushl jo mov jne mov push idivb pop mov push popa rolb mov (bad) (bad) (bad) mov (bad) std aad pusha les sub popa adc roll xor (bad) (bad) jmp into jecxz mov (bad) and jbe push mov lea inc (bad) mov jmp inc mov mov mov dec (bad) (bad) (bad) decl cwtl mov lods shrl sub lea jnp pop cmp mov xor xor (bad) xor and and (bad) (bad) lcall aas enter pusha daa dec mov and fnop jo aad shll out call (bad) (bad) (bad) call clc mov xor push inc and jg adc jno mov sbb (bad) lcall pushf mov mov xchg sub add subl mov pop push add incl lock jl cli xlat in cwtl clc cmpsl aam rolb decl push loopne fstpl pop or sub jl cmp pop aaa cld mov subl adc (bad) (bad) (bad) (bad) in mov xchg dec mov cmp dec test add into inc adc ljmp xchg mov ja std mov popa stos lock shrb (bad) fsubrs adc ds dec sbb jmp push faddl stos inc out andb ja pop enter subl and into cmc add ret xrelease pop fs push out outsl cli cmp dec sub xchg std add call mov mov roll mov inc test push jg dec (bad) int3 mov pop inc jnp jg sub (bad) lcall (bad) loopne (bad) mov push loope xor mov int3 cs sub mov cmp incl ljmp mov and mov femms inc jbe out add adc (bad) (bad) lcall mov push insl dec xchg arpl iret push jmp inc adc xor decl pop int3 pop inc mov jo fdivrs cmpsl fiadd outsb xchg test add xchg mov mov rorb fbld (bad) fisubr add call sub xor push fnsave outsb push (bad) call mov dec xor xchg and fs or pushl push add daa ja fisub add push push add xchg loopne lock stc adc enter decl aas inc (bad) xchg adc mov sbb (bad) (bad) call and je and sbb je shlb push or push (bad) shr ss lods sbb xchg and aas fiadd push inc (bad) rcl jnp or (bad) (bad) (bad) jmp mov inc push jle cmp xor xor mov pushf test and (bad) (bad) (bad) decl xor (bad) or xor lea fnop jne int sub sub cmp cmpsb ljmp inc scas or dec or dec or addb shrl test out mov xchg sub (bad) cmp sbb bound dec (bad) pop mov arpl insl pop ss pop pusha inc pop aaa (bad) cli push mull sahf mov std ljmp iret cwtl push push inc jo adc fcomip call loopne pushf imul (bad) pushl loopne mov dec adc xchg out fimul in jbe pop dec cld decl stos xor cld ss pop jbe xchg loopne mov (bad) (bad) decl push out mov pop push in pop push ror or cli xchg mov (bad) (bad) incl cmp icebp imul (bad) push mov xchg pop push aas xor outsl mov insl out aaa jg gs (bad) (bad) fbld outsb test fidiv inc je xor mov mov mov sbb jg (bad) push push jle sti sub cmp adcl add jg and inc xchg jnp jno (bad) (bad) pushf aas fwait aas sub fbld cltd mov (bad) ds sar call pop imul or fs rol add mov dec inc iret add pop movsb cmc pusha add je je xchg fidivr and call (bad) jnp iret add xchg mov mov inc clc adc adc ds lahf jmp data16 (bad) ljmp mov addr16 push shl in gs (bad) mov (bad) incl xchg sbb in add xor jl mov movsl bound aam (bad) dec aad push test pusha push sub mov call sub dec punpckldq popf pop pop adc (bad) repnz pop rolb lahf clc xchg pop inc (bad) (bad) (bad) incl jecxz and xor popf insb adc mov inc clc sub inc ljmp sub cmp (bad) ljmp aad sub xchg mov dec movsl add push inc adc (bad) jle mov xchg lods cmpsl je or (bad) (bad) jmp and push ret insb xlat in (bad) mov test rorb (bad) ljmp (bad) (bad) jmp fidivr int inc bound push dec add mov add es scas (bad) (bad) (bad) jmp lcall sahf icebp pop or in cmpsb adc sub sbb (bad) stos rorb mov rcll (bad) call shr jl jmp dec hlt or stos loop mov into icebp sbb ds sarl mov or and jbe xchg adc xchg fdivrs out inc xchg fdivr (bad) (bad) incl xchg mov mov stos jecxz sub (bad) aad lock test mov pop cld out mov lahf fs mov loop imul dec std cmp sub incl dec mov mov repnz int3 fs loop adc xlat sbb int xor mov rep out mov loopne jo jnp xchg sbb sub mov aaa leave (bad) dec mov mov sub (bad) jb or arpl add sarl or sbb shl xchg push and (bad) (bad) (bad) pushl mov xchg cmp push add fwait pushf push mov sbb pop xchg (bad) (bad) (bad) pushl mov int mov pusha movsb repz sbb (bad) adc bound dec mov mov (bad) (bad) (bad) (bad) mov and sbb daa or push xor push xor pop lods fs ds (bad) (bad) lcall sub aaa add aad fcmovb sti sbb stos add fidivl adc xchg add rcl test push add (bad) jo cltd pushf (bad) fcomip jmp cmp and cs xchg mov cmpsl sbb pop aaa ljmp mov movsl jecxz xchg jmp rorl (bad) pushl mov (bad) jae adc aam lods jne mov jl or sub jp outsl adc mov lods pusha xchg sub dec xchg mov dec notb xchg push stc dec ret inc jl (bad) (bad) jg xchg xchg xchg test mov or xor ret dec or mov add and dec cli inc cwtl mov out cli adc sar xchg and cmp jno xchg pop push (bad) (bad) (bad) call pop jg out cmpsb (bad) int stos (bad) fwait rorl mov or stc enter mov fcmovne push inc fdivr mov add or inc pop out mov push jns ljmp clc lcall int3 jmp ss xchg idivl push sbb adc (bad) (bad) call xchg xchg mov mov test add mov add mov lea ret int pop (bad) (bad) (bad) pushl mov xchg shrb frstor mov call or sub or (bad) (bad) (bad) (bad) in push adc and ljmp adc xchg inc dec cmp xor jb call jl dec call cmpsb inc xchg iret xchg pop xchg push adc sti and (bad) (bad) mov fcmovnb ret inc or xchg jae orl mov adc inc and mov fnstcw or ljmp pop fisttpll pop xchg mov fs sbb (bad) sub inc adc pop inc xor (bad) mov mov xor (bad) (bad) jg mov decb in push or cmp mov out and ljmp loop xchg lea xor das es mov dec inc add (bad) lcall add fistp mov lret ja mov xchg push clc (bad) lea add (bad) call add popf clc xor cld fs stos aas mov fist jmp out or adc xchg dec adcl or add push mov inc mov cmp jge sahf call sar mov cwtl sub int3 push sbb mov out push xchg orl add xor cmp sub mov (bad) sarl outsl loopne sub pop jmp (bad) inc call mov (bad) jns aaa mov (bad) mov inc ret push pop add in es xchg pop or inc (bad) (bad) (bad) jmp incl jg insb shll xchg push push fs add cld lock int3 movb dec pop scas fwait and mov lcall (bad) call lcall test lret inc in lahf (bad) (bad) xlat cmc mov cli pop xchg cwtl popa push cmpsb sub outsl jle aad add je sub push iret fimull push mov dec outsl mov in pop push mov adc outsb mov (bad) jg or es adc xor xchg jg out ljmp (bad) fmull adc mov adc lcall lods fnstsw decl rcl ja jle xor sub lds fistpll pop hlt mov (bad) (bad) decl mov clc ficoml or push sbb repz mov xor pushl sbb pop mov loopne int3 (bad) mov push stos lods loope popf gs inc shl jg out pop ret mov sub jle std xchg rcll xchg (bad) call dec sti adc cltd sahf ja cmpsb imul rclb mov sub icebp (bad) stos jnp jnp fucomp (bad) (bad) (bad) lcall adc arpl xchg sub lea stos out xchg xor scas or aad inc and mov ljmp xor inc jl sahf (bad) gs movsl lods mov fisub lret dec mov cld (bad) (bad) incl out sbb fistpll vpaddd adc pop cld das test cltd mov push jg and inc mov nop mov xchg (bad) (bad) decl cmp in jge outsl and and and pop cmc js mov jno aaa push and into test cld decl shlb push push inc (bad) lcall jle cs (bad) jbe in dec xor dec aaa mov test (bad) ljmp sti in cmc scas aam sub push (bad) sahf xchg mov ror xor xchg test cld (bad) (bad) ljmp and sti das clc dec mov push repz scas jno call jns (bad) incl cmp leave xchg xor imul adcb movswl mov mov mov test mov pop mov stos negl cmp jbe outsl push cmp push mov cmp xor call lcall jecxz jge (bad) incl mov push cmp dec or fs xor bound popa and pop dec push call mov test or or (bad) decl addr16 test or aas pop mov (bad) jl imul mov sbb mov jmp jmp in cmp xchg into lea aam or sub mov adc addr16 (bad) (bad) mov pushf inc add inc dec or outsl xchg push or sahf xchg xchg sub ljmp xchg pop (bad) incl test lahf xchg dec pop loopne cli push or movsb sub decl xchg dec inc (bad) (bad) jg sub (bad) mov mov mov dec xchg add push push inc leave cwtl add jecxz (bad) (bad) lcall mov das (bad) mov sub sub out insl imul and or dec cltd and ljmp push adc push xchg test sbb cmp sub jge mov (bad) (bad) (bad) (bad) ljmp scas sbb lea push mov add pop icebp stos sbb dec mov jmp loop jle jnp mov inc xchg lds sahf xor push dec xchg mov fcmovnbe inc xlat popf insb and dec pop (bad) pushl das das loopne mov mov jo (bad) (bad) jmp cli dec dec push and test call push sub dec add add cli sbb or fs push mov xor popa das sbb es xchg lret das jae (bad) (bad) (bad) into ds jl xchg lret sub inc jno push push jmp pop test cmp repnz inc fstpt (bad) (bad) mov add jnp sbb push std fmul enter sbb and test lock (bad) (bad) jg mov (bad) (bad) (bad) incl test repz out mov cli sbb insl fisub (bad) (bad) jmp test lcall push clc out stos sar gs dec in pop inc or push ds (bad) (bad) dec sub je test mov lods inc incl imul xor arpl movb mov ret stc inc push pop int3 pushf lahf das (bad) nop cmpsl in adc cli iret jb (bad) (bad) call mov lahf cmp das mov sub cld inc fld1 outsl push sbb adc fcos jmp adc and orl sbb adc or xor ja (bad) (bad) mov mov jno adc (bad) rcrb pushf cmp incl dec lcall sbb mul lock push sbb and and hlt xor lcall (bad) (bad) (bad) (bad) decl cmp push jnp bound cmp sti sub mov inc (bad) xchg adc (bad) (bad) (bad) call xchg cmp and divb jo cmp cmp je (bad) jg lcall push push (bad) fnstsw int3 dec mov fadds jns xor (bad) jg call sbb xor lcall xchg sbb imul adc mov out rol ds dec inc or sub cld mov push pop (bad) (bad) (bad) dec xchg inc or and and add push popf mov dec jae out aam xchg insb xor (bad) mov js cmpsb sbb or push push dec lcall and decl pushf mov mov dec mov mull mov je or (bad) (bad) (bad) mov xchg or and pop inc pop test add fcomip decl aad cwtl shr out cmp lods adc xchg add pushf push add cmp (bad) (bad) fdivr call bound (bad) jp adc push dec push movsb imull pop pop icebp jg lods push xlat outsb dec push into add pop popf cli mov xchg mov call lock repnz (bad) (bad) (bad) (bad) js idivl mov cmp mov ret out xor into sbbl push dec out jae adc and arpl push cmpsb jp addl inc mov sbb (bad) fdivr adc sti push pop das sub mov mov lods (bad) (bad) (bad) call shl ret xchg sub mov xchg imul aaa mov pop mov add dec pop dec (bad) je lods (bad) mov test (bad) jmp jl popa xlat scas inc pop cmp and jne push push lahf test (bad) (bad) call data16 sti mov cmp (bad) add mov imul add mov mov hlt aas sub insl in (bad) (bad) call push aam addl out lods movups lcall dec jno (bad) (bad) ljmp stos dec adc sbb lock nop test inc pusha enter cs add (bad) (bad) lcall mov test aas sbb insb mov mov jp sarb (bad) (bad) pushl mov inc mov (bad) jo jmp sub push insl ljmp mov aas bound xchg (bad) enter jo insl fdivr (bad) (bad) (bad) jns movsb into call adc int3 lret lret mov xor xor jecxz mov jle test pop mov fs dec inc ss inc es or subl (bad) (bad) (bad) decl adc clc adc pushf mov stc mov (bad) fldt sar (bad) (bad) jmp fisttp add lahf xchg cmpsl adc aas fdivrs mov pop lds push cmp pusha and push jno and ret add (bad) jb das (bad) (bad) (bad) (bad) inc int3 aaa jb in cwtl arpl xor jbe inc in and jg push xchg dec pop xchg pop scas mov icebp push sar jmp and icebp int3 adc (bad) fnstsw adc lods mov or aaa mov roll adc mov mov (bad) (bad) (bad) cmp fsts in test iret adc (bad) push pop cwtl ret sbb or sbb fldenv xor pop (bad) dec and dec or inc insl mov repz push rcrb push cli xchg jg lds adc lcall insl pop mov cld adc mov and rcrb decl cltd mov inc cmpsl in mov cmpsl mov pop add (bad) jmp jbe sbb sub inc push js jno int3 mov lret movb dec and push fnop enter (bad) cld pushw rolb (bad) (bad) jg pushl or test xchg jns lcall cs (bad) (bad) ljmp inc or out dec jns ret push inc jp cmp (bad) ljmp push scas mov xchg andl (bad) lcall dec stos outsb cmp adc jbe mov inc adc (bad) (bad) (bad) jmp push lods or sahf test mov int3 ret or and pop fstl push add loopne mov cmp hlt int mov pop cmp mov (bad) (bad) jg mov xor pusha mov mov out iret jns cmp (bad) jmp into (bad) or (bad) jecxz enter ss lahf daa rorb (bad) jns or cmp das mov and bound stc lock xchg adc cmp (bad) jmp ss sub rcrl shrb dec push jns iret mov add (bad) (bad) call pushf addr16 clc inc stc add stos jmp loop adc je inc (bad) movsb out dec dec ljmp insl loop icebp cld loopne adc arpl (bad) mov (bad) (bad) (bad) (bad) push mov nop ds inc sti xor popa cmp mov mov xchg xchg (bad) cmc imul lcall pusha and popf pop dec pop mov (bad) jg outsl jp jmp cmp add imulb hlt pusha scas nop icebp (bad) mov cld mov lock add jg (bad) decl nop in inc push (bad) std cmp jmp das dec ss sbb cld jmp es (bad) in iret xchg aas clc jmp (bad) xchg cld xchg jg jne data16 mov les push shrb aam (bad) jg dec aas stos clc in (bad) mov into jl shll xchg and mov pushl sub or in pusha stos xchg cmp cltd mov into fidivrl push std aam (bad) incl jns sbb push std loop xlat adc aam movsb (bad) and lea sub mov and mov (bad) (bad) (bad) (bad) mov arpl notb adc dec (bad) mov jnp repnz imul xor sar decl push nop pop ljmp inc pop jno lahf and (bad) call sub les sarl push aam cmovno test into scas adc adc incl push push xchg xor and or es pop fstl dec (bad) (bad) call addr16 sti xchg test xchg enter test call dec insl adc cmp cmp enter push clc lock pop xchg (bad) lcall lret sbb adc sbb inc mov popa xor inc (bad) (bad) call (bad) pop pop dec sub mov fdivrp (bad) (bad) mov dec pusha into dec cwtl mov mov inc movsl lea mov mov rcl (bad) (bad) (bad) (bad) fcomi rclb outsb negb push jecxz stc rclb nop push int3 add adc test fldenv (bad) ljmp loope inc int3 jnp cmpsl cmpsl adcl sub push sub das push pusha (bad) (bad) (bad) dec mov les add sarb in loopne pop fmul xchg test pop scas inc je dec (bad) (bad) (bad) (bad) std mov xor add xor outsl push sti lods in mov jo insl (bad) jmp jp xor enter jno mov jecxz test jmp lahf testl xchg sahf pop cmpsl dec push cmp jg lret dec daa scas (bad) imul xor (bad) ss xor lahf loop lock fcmovnbe jb mov mov lret jb xchg inc (bad) (bad) (bad) call sarl test jp lods lock xchg add inc mov sub adc dec (bad) cmp shlb loope,pt pop cmpsb (bad) (bad) (bad) (bad) std sbb in insl test fildll xchg mov dec sbb add in fcomip outsl cli push jno lahf pop call clc add ret fcoms fbld (bad) js xchg push movsl clc clc xchg lahf sbbl cltd inc lcall je,pt cmpsb in enter mov into sbb xor cmpsl jae xor adc imul (bad) xor pop dec lret (bad) (bad) (bad) lcall (bad) in sub xchg jmp (bad) mov data16 jle xchg (bad) mov or cmp test movsb jle movsb sti sub push add jg or pop mov mov stos lahf mov xchg lods (bad) fisubrl cli aad add dec mov fistp (bad) jg mov mov jno sahf xchg pop ret dec sarl stc xor incl ds (bad) xor rorb inc loopne add (bad) iret outsb mov xor loopne gs (bad) jno fcmovnu add and add cli ljmp mov xchg inc sarb or (bad) mov dec push fidivl push sti sbb pop lea icebp (bad) (bad) pushl lcall test mov push xchg ja xor test (bad) (bad) (bad) push ucomiss inc call pop xchg repz xchg sbb mov mov icebp mov movsb clc inc movsb inc out fisubr in pop imul pushl jl (bad) inc jmp lods gs dec and (bad) (bad) jmp mov mov pop sbb push jge aaa in inc mov mov cltd cmp scas (bad) (bad) pushl push movsb clc adc aam rcr push sbb arpl scas out mov xchg sub xlat xor in (bad) out push pop insl dec adc (bad) lcall movsl scas ja sub xchg imul or jp (bad) les pushl mov (bad) adc or jae adc sub lret fcomps jg (bad) (bad) lcall stos xchg dec ret outsb and jg pop out popf mov push loope mov xchg imul loopne test (bad) cmpsl dec sub bound (bad) (bad) (bad) call pop hlt imul dec dec lret xchg mov cwtl adc or arpl jmp or nop mov mov ljmp xchg jae xor loop jo lret ds hlt ljmp mov fidiv cmc push pop push sbb in cmc dec subb (bad) push pop jae cli (bad) enter inc push mov rorl mov and or lcall cmp sbb test jl popf fs (bad) xor (bad) (bad) pushl inc add adc insl jp fisttp aam (bad) roll addr16 insl push sub sub xchg add testl jg into lods loope mov cmp jp ret jne aad push mov ja mov out jle sbb cs and cmpxchg push dec jno pop outsl push lods pushl rcr jmp nop mov je (bad) (bad) jmp jns or or mov lock jae insb movsb idivb sbb movsl push or lcall jle xlat mov popf test xor inc andb push push aad mov (bad) jmp (bad) and insb fsubs jp pushf mov mov enter lcall call scas rorl cmc lods addr16 movsl xchg jmp fwait dec popf out (bad) lcall inc mov sub xchg cmp xor mov pop mov pop (bad) ja rclb iret shrb jae out or (bad) mov adc mov push ror sbb sub (bad) (bad) jmp pop movsb mov (bad) rol pop push fcompl (bad) push adc jns inc movsb std (bad) out push pusha or (bad) (bad) call test (bad) ja push mull imul popf pop fsubl adc pop out xchg jecxz int xor ret daa sbb fwait int3 aad pushl (bad) xor into scas das push gs add (bad) (bad) (bad) jmp and dec pop in add lods in sub mov xor add jnp jb std (bad) jmp jne pop xchg push mov fisttpll (bad) in in inc push pushf bound stos cs cld idiv gs ja gs pop adc sbb (bad) jg hlt push stos fldcw test push lea xchg lods pop and mov loopne (bad) in sub int (bad) js ljmp aam pop test jb dec repz in cld (bad) push or outsl pop enter aam xchg push cmp in pop rorb jp (bad) (bad) push lret sub sbb call mov xor sub inc rclb push lahf (bad) mov (bad) lcall dec lret pop and xchg int arpl lret lcall (bad) xor ljmp cmpsb ja sbb lock dec mov outsb pushl push jnp into sub mov mov mov or inc inc sub int3 scas (bad) int3 mov cmp lret repnz jo negb nop cs add enter (bad) dec scas dec cmovns xchg ljmp dec push test gs bound clc negl xor imul (bad) incl sbb pop sbb pop add cs decl xchg pop jmp pop add xor lock loopne push xchg adc lcall popf add mov pusha jg jae sub or incl icebp lods (bad) test sbb je lods test push cli (bad) ljmp aam fist jecxz iret sbbl add (bad) pushl in loopne ficom (bad) mov (bad) stc xchg add pop xor add shrl fdiv jecxz pushf pop mov cmp loope mov lcall movsl cmp mov sub cwtl xor sbbl mov pop dec (bad) decl popa enter dec js mov sbb cwtl fsubl cmp (bad) (bad) (bad) call push mov in gs test push les push fdivrl sub ljmp cmp jp ss and sbb (bad) (bad) adc aaa mov mov mov (bad) jmp ja scas mov and orb cltd mov mov aam inc push ljmp into enter adc jo in sub mov loop lcall dec (bad) cmp es sub xchg (bad) das jg movsb jmp sar jle insb roll pop pop mov push push mov dec aas sbb sub aad aaa dec imul lcall sbb inc (bad) icebp push sbb fistpll mov je (bad) (bad) (bad) ljmp or arpl in notb push adc mov lds and rolb pop push lods ret cmp inc cwtl pop mov (bad) (bad) (bad) out push es sub jnp add mov adc (bad) incl cld jge loop jbe ret in iret out sub popf clc push xor (bad) (bad) (bad) inc xchg or push push dec sbb xchg out lds (bad) cli shlb (bad) incl and xchg iret mov or xor inc jle or movl jp adc popa cld jmp sbb or cltd jmp jae (bad) (bad) (bad) jg mov loope scas jo mov pop dec jbe mov call scas arpl adc ss sbb inc sbb adc mov push cmp lea repnz jg xor add (bad) (bad) lcall (bad) jo adc sbb pop cmp (bad) cs push shrl jmp and adc rcll mov (bad) (bad) (bad) in push out movsl jae dec fpatan sub stc push sub pusha gs (bad) (bad) incl imulb fisttpll mov repz and notl int sbb rcl (bad) cmp push fcom sbb cmp mov jg mov push cltd mov lods es sub imul mov jb cmp mov cmc pop or pushf je dec lcall scas mov sbb scas cli mov dec pop out (bad) lea lods cmp (bad) (bad) (bad) (bad) cmp stc lcall out rol pop pusha nop clc je gs or ja decl mov arpl mov out lret stos jo sub xchg push imul (bad) (bad) decl add inc mov add xor fwait loope mov mov cmpsb mov aad (bad) jg andb lret or adc jmp movsb mov (bad) (bad) ljmp dec mov aaa adc push or ficom jmp (bad) jns decb mov loope icebp int jne push dec dec pop test push ja lret pop or in cmpsl pushl incl pop or cmpsb pop xor stos mov push repnz (bad) (bad) incl lret outsl scas xchg mov pop clc pop (bad) (bad) fidivrl or aas in jne mov inc into je mov sub arpl xchg outsb loope lock and lcall xchg iret pop xchg into scas cmp push cmp fisttpl jg pusha add dec mov movsl ljmp cwtl int3 pop push mov fdivrp in (bad) (bad) jle cs sarb pop pop pop sti and (bad) fidivrl ljmp sub xor clc (bad) decl xchg mov shr insb lods into adc jl outsl inc xchg adc add push push (bad) insb add test (bad) and dec (bad) mov jmp xchg je xor push and (bad) (bad) (bad) mov ja fmuls pop fsubs xchg xchg cltd arpl xchg sbb or roll (bad) call iret mov and pop divl and inc jns (bad) fbld dec daa movl scas fiaddl mov jl lock (bad) jmp mul add popa cmp andl faddl (bad) (bad) inc loopne sub ret mov lds rcl sub mov jns jb push cwtl add (bad) lcall mov gs or inc mov mov (bad) (bad) jg rclb mov and sub and int in pmovmskb bound xlat cli push sbb (bad) (bad) dec xor (bad) repz into lea push in or (bad) (bad) (bad) mov xor ss xor bound or mov xchg mov (bad) (bad) (bad) (bad) in jmp fldcw mov aam mov mov (bad) xchg mov out dec push je shll push nop and mov mov mov movsb adcb dec pop (bad) (bad) (bad) call test ja mov sbb ret xchg xchg out or (bad) dec mov ss sub frstor xchg jmp and or mov xchg xchg (bad) (bad) (bad) call or fisttpl repnz std (bad) aam mov mov pusha jb addr16 (bad) ljmp les movsl xchg mov jbe push (bad) jmp mov js fsubs pop jae cld pushaw and dec jl out inc xor test scas add mov xchg cmc lcall ljmp xchg or cmp js ficom je andl shlb insb (bad) dec adc cmp cmp mov add (bad) ljmp adc xor inc scas or sub test mov pop nop xchg jns inc test (bad) incl dec xor add jns (bad) xor mov add mov push lret repnz ret xchg pop mov pop (bad) sar xorb lcall out xor scas test lcall cmp add daa pop cmpsb js scas xor call mov sbb adcl push nop pop pusha inc das repnz push sbb scas xor (bad) (bad) incl and in pop out sub cmp lret jo mov add jo jo std inc add jnp decl incl xchg int3 pushf add rcr dec int3 push ss xlat xchg ss (bad) jg mov aad stos imul je shll mov push xor xchg popa out inc mov (bad) (bad) (bad) ljmp xchg enter je cltd push add dec xor popf rcrb loopne (bad) ljmp div es xlat sar lret fiaddl push and cwtl mov xchg adc (bad) or jle pop add inc mov cmpsb push jg xor (bad) (bad) (bad) call leave adcb dec loope push scas mov mov sub stos mov incl cld lcall pop fnstsw push in test ljmp (bad) (bad) (bad) jmp int3 adcb in lock mov cmp fdiv xchg leave push and hlt adc bnd (bad) call outsl push addr16 and lods fidivl jp orl (bad) ljmp mov or push mov pop inc pop and cmp stos aam fs (bad) (bad) incl iret fcomip push sbb pop adc shrb rcl adc loopne test loopne insl outsl cli (bad) (bad) jp xor jbe pop mov (bad) loope xor sbb (bad) out leave mov (bad) (bad) (bad) ljmp pop lahf mov add sub std loop ja xlat dec gs pop inc and (bad) (bad) (bad) call inc into lds and fcomip repz mov sbb (bad) adc movl incl dec (bad) scas lea lret test and lock xchg lahf jno add ret cmp mov or push push xor pop sub lret mov xchg cld mov (bad) incl xchg mov clc in loop jnp push xchg mov and (bad) iret cltd (bad) and movsl test (bad) inc push add push enter sarb lahf jae fcos lcall cld movsl sbb bound jmp cltd and ja push mov pop push lret (bad) cmpsb sahf ret (bad) idiv mov cmpsb jbe lods sbb inc dec repz adc dec pop scas cld fidiv (bad) mov (bad) sti jp pop cmc pop lcall jmp inc bound lods mov scas ljmp inc mov inc cmp dec adc fwait (bad) sahf sub cli jmp and aas into xchg mov dec ss jp sbb sbb pop inc inc bound mov jmp xchg push in lcall pop mov outsl dec inc push sbb repnz xor test lcall or fldl inc rorb cmpsl pop add icebp cli in (bad) (bad) (bad) jmp mov push mov outsb adc lock sub fbstp push daa and clc jmp bound rorb and adc jg lods jb aad mov xchg (bad) mov jne mov repz subb xchg out mov sub adc (bad) decl in xor cmp and inc movsl out fwait (bad) (bad) lcall cwtl inc in and fwait scas loopne dec iret cmp popf (bad) sub dec dec (bad) jg cmpsl add cmp imul or (bad) ljmp pop stos sub bound sbb fwait cmp add add pop push pop ljmp clc push gs ja out sub scas mov push push int3 fsubrs inc test call xchg mov fdivr mov out loope xchg dec adc sub aas (bad) (bad) jg mov popf (bad) out cmpsb add ja repz stc adcb sub or pop xchg push je (bad) repnz (bad) js cmpsb sub scas stc jae (bad) (bad) (bad) cmp (bad) mov int3 (bad) test movb pop add mov aad dec (bad) fmuls mov (bad) imul lock fnop jg and dec push repz xorl inc out (bad) imul (bad) (bad) pushl stc mov test xor fisubr imul xchg xchg xor fnstsw std xchg lock jmp or jl mov xchg sub ja jo insb daa (bad) call dec imul sbb and cmpsl mov mov xchg mov push insb pop add decl (bad) and pop xchg inc icebp pop mov (bad) (bad) (bad) decl stos xor into mov movsl xchg push sbb jo mov in or icebp out enter (bad) (bad) (bad) mov int lods jge dec mov roll or fcoms add test ljmp stos xchg vmread js lods movsb test dec sub fdivr lcall sbb (bad) and mov gs sub (bad) ljmp xlat outsb mov sbb out inc sub push mov push scas les (bad) call jg popl sub sbbl shlb nop loop sbb loopne scas call movsb or (bad) cmp (bad) imul add or movsl (bad) cmpsb sbb lss repz dec push popl adc test sbb ljmp (bad) pop loop scas (bad) (bad) ljmp int jmp lret push sbb imul les dec ds dec aam icebp dec dec clc dec dec dec or adc or fildll jl fld or mov hlt pushf pop (bad) lcall mov ret xchg pop inc sahf push lea jmp (bad) pop (bad) incl clc dec test ret jecxz movsb pop mov hlt es call adc test cmp sub inc repz (bad) pop add pop mov inc push popa push jmp lcall call (bad) jp sbb (bad) (bad) (bad) call in mov mov inc insb lret lods js cli sub dec jb fistp ja jmp mov mov mov pop movsl (bad) int push xchg inc lock (bad) (bad) (bad) (bad) jmp aas aam sbb cwtl hlt pop xchg (bad) out fdivs and daa sahf dec inc ja mov rorl leave ss ljmp ret dec jl mov std dec push pop cmp popa adc imul loop push add dec xchg push dec xchg (bad) imul hlt jl sub jecxz (bad) (bad) lcall leave add inc fisttpll aaa inc add dec push and lcall sbb jle cmp lods inc loope mov hlt aam and test push sbb add push mov pop cltd mov and jp decl in pop mov jmp mov fs lds gs jmp jg cmpsl pusha push mov idivl push dec pop dec mov mov pop pop cmp movsb sbb lcall popf sub pop mov cmp (bad) (bad) jmp dec movsb es mov inc inc dec lahf fwait pop dec pop test jnp xchg jle mov mov mov (bad) jg or dec xor inc sub (bad) (bad) (bad) decl push shrl push ss push js add inc mov push (bad) mov clc cli (bad) ljmp xor mov or enter aaa add xor mov je mov cmp addr16 mov xor repnz pushf xchg xor push jb js lock add push fidivr xchg rcrb cmp mov push cwtl sar (bad) ljmp lret dec and xchg pop xchg cmp aaa les cli jmp cmpsb pop gs in (bad) (bad) decl arpl mov pop push mov fsubr out mov jge int xor jl (bad) (bad) incl sti out dec stos imul hlt inc and lock jl sbb inc fsubl frstor or lcall mov mov fbstp sub (bad) (bad) (bad) clc test ds (bad) jb sub sbb xchg cmp mov mov mov xchg add out mov fs (bad) (bad) jg daa sub mov xchg mov sbb push adcb bnd ror rcrl imul mov sub lret mov cmpsb ret pusha cmc mov lret pop push add dec adc (bad) (bad) (bad) lcall movsl (bad) (bad) xchg out repnz cmp mov inc in fwait sub jmp ret xchg push in loop repnz (bad) (bad) pushl push sbb enter mov mov dec rcl fwait (bad) jge rorl arpl lock dec imul mov ret hlt jp xchg test cld fild or lods xor (bad) pushl scas inc xor lahf ret lds je call repnz lcall and ret dec (bad) mov inc sti push pop loopne (bad) cmp xchg or call pop mov jp pop (bad) jmp (bad) decl das push fimul fsts sahf mov sub sahf mov cmc (bad) (bad) incl leave mov pop adc inc scas jns cmp sbb push jb xchg (bad) (bad) jg push ret addl or mov pop rorl enter call dec sub pusha mov (bad) addr16 push cld push fdiv (bad) jg (bad) cmpsl outsl inc cs dec testl jbe scas cld add mov mov inc sbb xchg pop cmp cmp insl sub cmp jecxz sbb xor (bad) (bad) (bad) incl (bad) xchg movsb pop faddl pop xchg cmpsl or jp aas rolb arpl cltd js (bad) ljmp (bad) in mov int3 mov add sti leave push cs dec jle cmp lcall call xor (bad) cli movsb xchg pop sar mov test and sub (bad) jg fucom xchg popa add cmp cmp mov and mov pop dec arpl (bad) (bad) (bad) mov sbb dec test push jecxz sub stc and loopne jnp sub loope fs jg pushl test xor hlt add pop fadds (bad) int3 iret add imul cltd push mulb sub xor xor dec stc (bad) std or jecxz,pt adc test lods (bad) push xchg inc add mov gs (bad) (bad) decl lods push push sbb and ret loop int3 rcr das test add adc sub ljmp flds push ss fist loopne lret jmp rcr mov int3 por pop cli lcall sub enter insl jmp pusha mov jmp push aas mov pop hlt fld ret jecxz dec mov movb jo outsl frndint inc xor mov lock (bad) cld dec roll cmpsl daa add (bad) decl jle mov jge xor fs test xchg push cmp hlt fisttp lock xor fdivrs (bad) (bad) (bad) (bad) in mov scas ret pop dec cmp aam (bad) or jg jge push mov (bad) cli mov cmpsb xchg inc mov fcompl push out jbe pop fdivs fsubs test lcall insb xchg out add adc fistpl push or jg push (bad) mov sbb int3 or (bad) stc iret js mov aas sbb sub cmpsb xor (bad) fbstp movsb mov (bad) jg ret int and mov xchg lock jl decl lock mov (bad) push test push cmp or shl and (bad) (bad) mov lret pop adc in in xchg shlb in inc inc pop or rcl call jno xor xor in jne int jb sbb dec cli int idiv lcall aad or mov push push dec sub nop push lds fcomip (bad) call aaa adc push incb popa dec jmp fdivl pop movsb pusha pop or movsl xor decl lea pop cli jno pushf or mov out pusha (bad) decl lock fcomps pop push cld call or ljmp lcall imul (bad) div and (bad) (bad) (bad) decl stos xor jns std fidivrl mov adc and push cs pushl mov int3 dec nop daa sbb fisttp cs idivl popa mov insb rorb pop dec sarl xor cli jp fwait push cmp das sub lahf push fcmovbe ffreep inc mov (bad) (bad) pushl push (bad) movsb lods jbe push pop jl jns cmc pop in leave lret add call call lock enter mov mov dec fcom insl adc (bad) jns xor xchg and jb xchg sbb lret out jno push in flds dec rorb (bad) xor sti sbb mov xchg insb pop mov dec jne and (bad) fnop or out push jg ss iret imul cmp mov and mov ss pushl cld fisttpl mov sub sbb dec call and repnz bound and ficoml daa shll cmp mov (bad) (bad) call jnp dec or dec xor mov insl inc cmp mov cld cmp and das sar scas daa outsl stos dec push fs adc or roll jb (bad) (bad) (bad) (bad) fucomi sub jo fwait pop mov mov push mov pcmpeqd imul xchg jmp fwait inc mov loopne insb jge inc lock push out fmulp jo cs sub cmp fadds sub lcall mov or ljmp xor (bad) (bad) (bad) jnp lods and divl mov sti mov dec inc jmp pop lods loop popf add push mov xor cs ds (bad) (bad) (bad) incl subl ja loop push arpl insl dec std stos or push sub mov in (bad) (bad) (bad) ljmp pop push xchg mov daa pusha jbe inc xchg dec mov xor adc mov call int3 xorl nop stc data16 loope (bad) (bad) (bad) jg mov adc lret aas sbb inc push dec inc push out test mov add (bad) (bad) (bad) decl pusha andl pop nop dec push rcr repnz inc cmc fadd sbb mov (bad) (bad) (bad) call mov mov popf push jo jp imul aad (bad) andl (bad) call hlt (bad) dec adc insb xchg cltd in int cmp lock dec stc mov in mov ljmp sub test cmp fsubl (bad) ds decb std jmp lea loopne cmp (bad) push or push sbb (bad) (bad) (bad) jge jmp adc sbb cwtl mov xchg sub inc sbb pop mov mov outsb fcoms xor std pushl sbb in sbb xor or jge (bad) decl push and ss das cmp dec fdivr mov incl jbe addr16 ljmp cmpsb sbb loop fild xor dec mov (bad) and out clc and test inc sbb (bad) fldl sti jo dec jb fs mov out (bad) (bad) (bad) push push or int3 push outsb cmp rcrb out (bad) or sbb sub (bad) (bad) jmp mov iret jns add xchg mov and rcrl out adc (bad) fild ffree fs dec fisub adc je jecxz loopne (bad) (bad) jge repz push dec mov (bad) jno push (bad) inc jb xor mov or (bad) pushf adc mov daa cmp outsb add std fcomip das out xor (bad) (bad) in ja jns inc push ljmp lock inc mov jmp (bad) sbb pusha jo inc test js or (bad) std xchg mov (bad) (bad) fwait add inc loopne push cltd or (bad) push mov je mov lods and jae (bad) in fnstenv pop xchg lcall mov sahf dec fisttp sbb pop ljmp pop out xor in and or or fwait cmp loopne pop and sbb mov pop mov push (bad) incl stc dec or xor sbb ret (bad) sbb adc push mov popa push sahf adc (bad) sbb push add inc scas (bad) rorb sarl mov mov xor pusha pop insb push addr16 (bad) (bad) call xor inc dec adc call sub ficoml push sub mov (bad) (bad) ljmp sarl jecxz jge xor dec or call xor cmp sbb cmc (bad) (bad) mov push jne ja fisub popa ss lret mov (bad) (bad) decl pop jnp out imul push sarb xchg int jecxz mov ficom jns test je (bad) (bad) (bad) pushl mov inc jae scas movsb add xchg sub arpl cmp jae mov test ljmp add iret js leave out repz dec and xchg or xor xchg mov fidivr jmp xlat fmuls sbb adc into arpl movsl (bad) faddp leave or pop or and loope push rcl (bad) mov cmp xchg (bad) lcall adc pop out jbe mov in mov adc dec xchg inc std lcall xor adc jg (bad) iret mov mov jbe mov jg and cmp cmpsl push jecxz leave push lods (bad) insl xchg pop sub stos xor repnz (bad) incl loopne push and sahf bound jo pop push push stos pop sub xchg rcl pop pop sar (bad) incl insl (bad) stos aad inc xchg gs push mov pop xchg notb and add adc cmp push sar das and or insb dec stos pop push (bad) sbb (bad) (bad) (bad) (bad) jmp sbb sahf sarb sbb test sbb (bad) shrl pop in movsl (bad) decl bound mov add add outsl outsl insb icebp jnp sbb push dec es push mov loop nop icebp adc arpl mov aad dec (bad) js cwtl (bad) (bad) (bad) jmp notl xchg repnz movsb flds clc lahf std bts ja sbb inc out movl xor subl push push adc push ret push movsb xor pop xor scas xchg insb fsubrs repz (bad) cltd mov enter jo hlt fnstsw into mov jmp push jmp std in imul call lea adc repz adc pop add (bad) mov cmp clc arpl lcall into rolb cmp ja rcl jl clc or fisttpll xchg pop or add (bad) (bad) (bad) (bad) out stos sbb pusha or and daa jne test mov jbe jnp fs (bad) (bad) dec and jo mov pop sbb lret xchg jne (bad) jmp or mov mov pop push roll (bad) (bad) lcall push (bad) lahf je and inc inc (bad) out int adc push ds inc push mov fs dec int3 es inc xchg pop fcompl into (bad) pop data16 nop xchg ljmp push sub xlat (bad) out adc sub ds mov xchg lcall (bad) (bad) (bad) jg es lods fsin pop leave xor repz push movsb xor iret jecxz cmpxchg mov incl sub xchg popf sar sbb in aaa lret and out fadds test stos out (bad) (bad) (bad) ljmp sub dec popf mov stos clc xchg mov test in shrl (bad) (bad) (bad) pushl pusha mov fistpll mov sahf jg and mov ret sarl lods inc add add push xor ljmp shrl dec mov (bad) (bad) (bad) mov repz dec cmpb xchg rcl jmp dec insl in cmc inc mov (bad) (bad) dec xor ss pop inc cmp mov gs icebp push mov test lcall adc rclb add imulb js call nop push or jne mov xchg xor sub (bad) (bad) pushl dec push popf inc int3 lea aam cltd pusha xchg sub das rcrl push ja mov decl sub and out les pop iret (bad) lds test dec sbb daa cs loope das addr16 fsubrp push jo mov leave xchg pop add or mov imul cwtl push std in (bad) mov ljmp add inc mov lahf mov out adc lods (bad) (bad) jg (bad) nop mov imul cwtl mov (bad) lock inc and imul or clc iret dec cmp test dec inc (bad) jmp mov cmp adc stos js rorb outsb adc test mov mov add enter mov sub int aaa fs js andl sub jg sub out out ljmp es jg pop push mov add movsb outsl inc adc lods loope adc ret add ljmp mov mov inc fwait in in lds stos pop divb lcall or (bad) pushl repnz and adc popf or cli pop fincstp sbb xchg fwait mov pusha rcrb fwait cs mov bound stos xor clc (bad) (bad) ljmp mov (bad) push add jns and dec ljmp or fxch daa int jmp pop xchg dec add cmp push add push cmc ret (bad) scas (bad) lcall mov mov ret push lods xchg cmp in inc or adc sbb (bad) mov test pop daa (bad) and jns add repnz cmp clc (bad) ljmp push ss jge jno cmp in lret sub pop cltd jo loop shll pusha dec in xchg mov ja (bad) outsb inc mov inc sub inc lock jne js sbb pop movsb popf xchg int3 push mov push int3 cmp add (bad) (bad) pushl jno sbb lea mov ret bound xchg fild or mov xchg mov jp mov cmp push dec fistp (bad) (bad) inc xchg jno pop dec push mov inc in push insl fsubrl dec sub hlt mov and cmp push adc jmp or sbb and sbb in ljmp xor push pop out dec adc xchg lcall lcall dec outsl mov ds movsb cmp inc mov jecxz (bad) arpl (bad) lcall mov xlat mov add fwait movsl ss pop xor xchg es aaa js jb fcmove (bad) cmc (bad) jmp xor push mov adc add (bad) mov fdivr sub outsl (bad) (bad) ljmp push roll scas cmp les sbb ds and inc rcrl (bad) in mov lock test push jle daa mov push repnz sub ljmpw mov and mov mov cmp (bad) (bad) (bad) incl imul fwait in push jecxz ret push cmpsb push sub mov push pop xchg jge (bad) (bad) jmp ret lcall lahf cmp adc (bad) jmp imul add jl rorl xchg sarb inc (bad) dec pop icebp rcrb cmpsb das pop xlat lcall cld jmp dec push xchg outsl leave xor and aaa push popf mov pop pusha (bad) (bad) (bad) incl sub cmp repz (bad) imul xchg xchg icebp pop cmp je test lret push cmpsl int xchg fmull mov mov cmp daa outsb lea aam add stos dec imul and std (bad) (bad) jmp and enter cmp xchg push test add imul test (bad) (bad) mov out je add jl mov outsb inc aam xor hlt xlat inc adc sbb (bad) dec imul imul push and fisttp cmpsb adc daa inc lahf push andl (bad) adc mov pushf imul call aas push mov xor (bad) (bad) (bad) pushl inc inc movsb dec (bad) fwait jne cltd fsubrp fist hlt push mov mov jo dec pop scas (bad) (bad) (bad) incl inc (bad) loopne pushf repnz dec dec pop jecxz into jge sub dec mov mov (bad) (bad) (bad) inc popf push dec out sbb lods mov push dec push fs lock adc cld out sbb call sbb pop decl xor mov pushf mov (bad) (bad) decl in jne sbb movsl mov ret jmp rcll mov jle ja (bad) call or icebp int3 nop jecxz (bad) xchg gs fadd xlat xor pop (bad) fildl xchg (bad) (bad) (bad) jmp sti repnz xchg push xchg imull daa mov jp out mov (bad) (bad) ds rclb sbb or sbb jbe mov (bad) (bad) pushl and adc or add rcrl push xchg jbe leave mov (bad) sbb icebp push mov pusha imul outsl push dec inc jmp push xor (bad) ljmp fdivl shlb sub scas popfw and ret jns lock dec ret lcall dec xchg mov out shl xor (bad) jg and adc sbb movsb js (bad) mov mov repz xor sub jb (bad) (bad) jmp xchg sub or inc repz mov sbb xorl add out inc cmp cld sub add sbb out fs (bad) lcall push popf ds lods xchg push cli test out int3 aaa or (bad) (bad) (bad) ljmp push test in lods imul int icebp mov popf xchg aas in mov aam sub shrl clc out cli pop js,pt lea mov inc mov ss push (bad) repnz pushl pop (bad) fstl xchg fcompl or cld inc lods loope jp cld jp movsb mov add push push sarb mov pushl cs hlt bswap addr16 pop xor xchg stc jo cltd fcomps add mov jo (bad) (bad) (bad) cmp jno mov cltd push stos ja stos orl inc les (bad) (bad) call lahf popf pop enter outsb push sahf (bad) cmpl push mov ret movsl or test push xchg outsb scas test shll mov (bad) (bad) (bad) lcall cmp popf scas xchg dec mov hlt dec adc jmp test dec scas jo jno (bad) jae pop mov mov outsb mov std or (bad) jmp iret mov dec or repz (bad) xchg adc mulb and (bad) pushl gs sarb scas aas in test adc sbb xor dec rcl enter sub mov pop or (bad) mov push arpl jecxz dec out jae dec xlat call (bad) (bad) incl adc jb sbb jmp movsl adc fcmovnb fcomp stc pushf mov mov and pop jge jg jp out pop push jp add add loope cli cmp and or (bad) call stos adc jge ja xor call push mov jecxz push push add mov movsb inc nop adc ficom pop mov (bad) ljmp jb pop xor pop fild ficom lret (bad) (bad) (bad) ds jo (bad) mov movsl mov adc pop pop data16 cmpsl (bad) lcall test call lods mov or inc insl cmp jg and jno cmp (bad) test and pop jp (bad) (bad) jmp push sbb and mov push cmc popf inc sub cmp clc lcall dec add jg cmc jle bound lea sub push (bad) or mov outsb (bad) ds adcl sbb lods je cmp rol jecxz mov into clc (bad) ljmp xchg sbb or add inc (bad) jnp pusha push loope int jg jp pushl (bad) sbb and inc dec sti fnsave sbbl testb (bad) (bad) jg dec xor movsl inc jge push dec mov bound bound sub sarb adc aam (bad) dec ret lcall pushf mov loopne notb outsb into cltd mov call lock sar (bad) (bad) (bad) jle adcl xchg repz adc add sbb xor sub lea decl jne shr call dec jb mov std jg mov xchg mov sbb add (bad) incl dec mov je (bad) or adc std outsl and and mov mov lods lock sub jg popa sbb lret sbb dec cld adc mov mov dec clc cmp or imul jmp push imul (bad) (bad) (bad) (bad) cld mov jno and outsb or dec loopne pop jbe lcall out sbb into cmp (bad) ljmp jnp add sub int mov movsl (bad) and cmp outsl test in mov sar or or mov (bad) (bad) incl or or outsl or xor sbb dec mov mov jo fdivrp (bad) call mov sub ss stc adc incl imul ret and mov data16 mov push mov in in mov cmp inc inc call mov lcall push jb ljmp popa (bad) (bad) cmp fprem1 into and jo leave lcall push xor mov add ror lock (bad) (bad) out mov xchg fldl test fildl ret inc arpl fisubr pop cld lea pop mov aam stos cli mov aam movsl fsubrl daa aas jmp pop jae dec sbb call aad fisubl shr lcall sarl pop insb int3 fisttpll test sbbl inc popa call dec xor leave mov xchg jp mov xor ss (bad) (bad) (bad) (bad) jg inc pop ret inc lahf inc inc fdivl cmpsl out xlat cli push lea inc cld (bad) (bad) (bad) decl dec mov pop (bad) mov js push mov sub push adc (bad) (bad) ljmp ret lea jl adc pushf adc xor loopne mov fisubl lods pushl adc inc mov nop and les rcll jl movb (bad) (bad) (bad) pushl scas dec fstl fisttpll mov lods sub call pop sub (bad) (bad) (bad) fnstsw dec and cs lret (bad) mov and nop or mov dec (bad) (bad) (bad) inc sub mov loop add ret int3 ja or pop and imul ret mov clc into mov outsl add out test sar pop leave scas xor (bad) call pop mov sarb (bad) mov add fbstp test xchg out xor std push fwait in in shrb ss decl (bad) shr aas pusha std daa jo leave js orb fiadd pusha sti (bad) mov cwtl stc ljmp jmp fwait outsb aam lret stc test (bad) repnz add inc (bad) (bad) (bad) jmp scas int cmp repz or fadd lods std inc into mov mov (bad) dec push aam xor cmpsl push sbb int3 (bad) (bad) (bad) jg fwait xchg dec testl pop mov inc rcrb pop (bad) (bad) (bad) pushl into push lods cmp adc (bad) addr16 jg cmpb push fadds nop cmpl (bad) mov test (bad) pushl mov cld aaa neg ss mov or sbb jecxz lcall (bad) (bad) decl fcmovnb imul stos imul push dec and movsb int3 fisubrl dec inc xor (bad) (bad) (bad) call adc push bound rcll pop push xor int sub push mov inc ljmp (bad) (bad) lcall stc aam lds xchg xchg cmp sar or mov cmp (bad) (bad) (bad) mov movsl sub mov xchg inc data16 jnp sub movsb cmpsb push in test add stos xor mov in in lods xchg in gs dec jne inc xor sbb es push (bad) pusha mov pushl lcall pop pop cmp xor xchg push popf insb xor jmp push push mov out (bad) leave mov pusha dec pop mov ljmp arpl (bad) (bad) in push (bad) push push insl aad dec cmpsl inc cmp (bad) (bad) (bad) (bad) mov jne mov leave fs mov fcompl dec sub shlb push mov (bad) call fcmovb insb push cmpsb fsts repnz fildll aaa mov aas cwtl sar mov clc lahf and ja mov out mov (bad) (bad) lcall lock daa dec add mov sbb nop pop std mov sar notb jne push jae mov call cmp dec sbb lods mov mov xor (bad) cmp xor lock out loopne jns sbb (bad) in (bad) cmp (bad) (bad) (bad) call shlb mov scas add (bad) test sub rcr inc ja push push mov cmp pushl sbb sbb sub xchg cmp outsl push lods or jmp fistl shrb imul xchg test xchg insb push ja (bad) call (bad) adc popa sub je pusha add xchg sar lcall (bad) inc xchg sti into mov fsubl call test jne inc pop test xchg jge adc in clc gs push jns inc xor cli dec ljmp mov push (bad) (bad) cld jo enter xchg mov pop dec jo pop lcall (bad) stos push or pop stos (bad) call ret and rol ds jno test dec mov inc add (bad) (bad) jmp adc and fnsave ja xor dec data16 sbb mov cmp inc test aas or incl xor jns (bad) cmp ja (bad) (bad) lcall pop or lock cwtl enter inc mov dec jg or shrb iret fnsave aam imul jne (bad) (bad) call into data16 mov dec add test cld push out mov push inc pusha cmpsb inc fwait (bad) (bad) call stc shlb or mov lcall fiadd jmp fnop fcmovnbe or push mov (bad) icebp hlt (bad) fildll pop xlat je push mov ljmp jae (bad) cmp in xchg mov movsb ljmp rcrb cvtps2pi cmp jge loop fcos (bad) jg out xor add pop jb in xor int fsubr inc mov jge (bad) cmp call (bad) jp mov les popf les inc mov dec jl add les sub int pop andl jns cwtl (bad) popa aad hlt mov pop push movsl jns push dec sbb (bad) pop in arpl iret mov inc mov xchg (bad) scas (bad) dec sbbb imul enter mov or jbe mov push ljmp iret dec out inc push mov sub fidivl es push jmp (bad) fistpll sti xor icebp (bad) (bad) mov mov rcll pop dec faddl inc loope scas hlt ljmp ret fisttp sbb jae repz loopne inc push (bad) (bad) incl dec xor xor test dec adc iret icebp sub add decl push jl lret subb xor (bad) (bad) (bad) jg adc push add and jecxz aas adc or sub das cli loopne lods jo hlt xor cmpsl or mov push sbb fistl (bad) incl push push jno or or dec stc push and aas pop mov test jmp outsb adc data16 xchg push or (bad) (bad) jg adc inc lcall and jns push cmc cmc stc bound jnp sti add sbb sbb sbb testb push and lock lods (bad) repz cmp push cld outsl mov add cld imul sub aas add push (bad) incl mov and clc rcr cmp ds or cmpsb sub add pop cld cli cmp pusha inc es out xchg rorb das gs (bad) ja aam movsb dec shrb and insb add dec xchg xchg (bad) jns pusha add dec repz mov pop (bad) (bad) mov (bad) xor stos int daa ljmp sub mov add cltd cli (bad) call lahf daa push sbb and test std jmp pop sbb add xchg (bad) jecxz mov mov clc or (bad) cld jbe (bad) dec lret (bad) ljmp cwtl and and adc sbb jp mov dec hlt (bad) mov mov adc ret fwait imul dec movsb cs std jle lods jl (bad) test push mov frstor (bad) (bad) (bad) in inc or fadd retw pop iret cmp dec lret adc lret ja jecxz loop push jp (bad) (bad) (bad) fstl in out cwtl std xchg pop inc sar mov pop xchg adc int shrl (bad) (bad) jmp cwtl test jno push sbb mov and clc clc jno cmp lods xchg cs out xlat sub pushl dec pop popf cld mov loop xchg pop enter adc call imul push imul and sub (bad) lcall (bad) ljmp clc lret movsb in loopne out (bad) sub mov push inc mov mov push xor aas or das nop test xorb mov add (bad) (bad) jge repz mov sbb mov pushf cmp (bad) fcomip and jnp push rcll mov and cld jno test cld std sarb mov (bad) pushf jl push mov (bad) and or mov sti mov (bad) rcrb xchg jmp fsubl (bad) (bad) call in icebp push sub sbb popa les xchg mov fisubrl loope movsb jo (bad) xor subl iret mov pushl call sbb lret cmp xor stc xchg adc fnstsw gs stc hlt ja (bad) test push lret xchg (bad) (bad) cmp fsub scas add (bad) push and xchg mov cmpsb outsl fmuls and (bad) bound jae mov (bad) (bad) (bad) incl leave mov cli out aad jns icebp dec and popa pop sti inc cmp and (bad) (bad) (bad) call pop lods adc pop sub aaa orl adc lret and (bad) (bad) incl repz adc outsb movsl mov mov adc mov addr16 in (bad) (bad) jmp jns dec lahf cmp iret jne sub (bad) and pusha ret mov add sub repnz loope mov (bad) mov and stc cld std lahf adc nop jno inc jl (bad) lcall (bad) in jno xor psrlq sub lds add mov pop fbld (bad) jp jmp rclb out das dec (bad) (bad) (bad) dec fwait xchg clc pushf (bad) hlt jge roll cmp inc movsl pop add dec aas mov cli (bad) jmp sub lret sbb jmp and iret (bad) jno mov (bad) decl dec inc sbb fcompl sbb sbb mov icebp mov (bad) (bad) (bad) (bad) mov das jle jle popf call stos pusha dec sub xchg aam push decl xchg mov push sbb mov jle cmc fisttpl cli lret mov pop sbb mov popa fcmovb jb sbb fwait dec mov mov sti cmc push and scas fist aam inc sbb addr16 and dec and jg fs push imul (bad) (bad) (bad) in stos pop popf push xchg adc mov aam cltd lods in call dec call test (bad) fbld push es and int3 mov (bad) (bad) jmp pop movsl push sahf xchg scas and inc mov stc pushf ret (bad) jnp loopne mov (bad) out clc xchg xchg cmp lcall hlt leave leave fstpt lods mov mov jle lods (bad) push xor jle jle (bad) mov (bad) sub outsl (bad) and jmp adcl inc xorb jne lret in jo xor adc (bad) (bad) (bad) in sbb das xrelease pop lcall push adc mov test dec cld hlt (bad) (bad) (bad) incl ss outsb sub ja enter xchg sbb test push cwtl rcll ret xchg cmpsl (bad) mov outsl inc test mov pop outsb test mov mov call add lcall adc lods inc pushf add pushf (bad) jle rclb or push mov cmc pop clc dec adc pop push xchg cmp adc test call arpl xchg icebp decl dec leave push mov jmp lcall fs add dec test jae fcmovnu mov or scas jp (bad) (bad) (bad) lcall push push cltd sbb scas ss ljmp inc xchg sbb sbb sbb in es rol jb sbb add (bad) (bad) incl je cmp cmp cmp (bad) stos adc test incl jl lcall test lock loope pusha out aam add sar fwait aam inc xor inc (bad) repz mov scas mov sbb stc ret sbb mov mov pop inc scas mov xchg dec dec mov test (bad) mov pushf or pusha (bad) push cmpsb stc (bad) es pop (bad) (bad) (bad) ljmp shrl push and loop or inc add lds jne movb fsubr out push ljmp mov out subb mov (bad) inc popf cmpsl xor (bad) out jae push enter (bad) rcrl lods sbb sbbb sbb std scas and dec adc xchg mov (bad) incl sarb xchg je cmp mov pop jns sbb (bad) shrb (bad) (bad) (bad) jmp and sbb jge push add js lods xor (bad) (bad) (bad) decl cli pop (bad) lret mov adc insl xorb inc cmpsb es test stos dec jmp jae loopne (bad) std mov dec pop dec sarl inc xor (bad) faddl mov (bad) (bad) (bad) jmp cmp xchg sbb dec inc jb push (bad) rol pop test pop push andl jl add frstor jbe xchg repnz pop rcll das jne mov out push insl call mov scas mov jnp jmp cwtl pop mov push das and out cmp inc adc push stos repnz dec mov push sub ljmp stos aam mov rorb sub or lcall into lods stos lods ss ret data16 push sbb sahf push das enter (bad) (bad) pushl pop xlat ret add cmp movsl test sbb inc and je addr16 ljmp sbb data16 adc test mov mov jecxz pop sub mov xlat ljmp test (bad) ficompl frstor aaa hlt rclb ljmp (bad) stc enter jno ret and cmp sbb outsl stc dec mov sbb lret fisttpl inc ljmp into ss pop add (bad) (bad) push rorl xor fisub xchg inc cmp mov ds push lcall lcall pop lret outsl out dec outsl call ds push loope in dec add and cmp and flds fisttpll ret insl or (bad) xchg adc cld push mov cmp (bad) sti jns out stos jae pop insb loope push mov jle xor dec clc cmpsb mov loop sub outsb clc or sbbl imul lea inc test mov (bad) (bad) incl xchg aaa rcrb sub dec inc popf mov xchg mov jmp scas insl hlt (bad) (bad) lcall pop ret dec ret in popa test (bad) mov pop ret xor gs (bad) lcall push (bad) cmp test test mov inc imul push (bad) push fsub or (bad) (bad) (bad) call mov inc mov push imul pop xlat jge outsl pop (bad) mov (bad) (bad) ljmp xorl mov dec and push cs clc das jb mov or mov or adc add outsl cmpsb test xchg shl ret xchg jb adc xorb nop mov pop insb adc jnp pop mov fs (bad) (bad) ljmp jle arpl xchg xchg test fs mov cmp mov stc in (bad) (bad) (bad) lcall pop inc or sbb cwtl sub cmpsl or mov into mov xchg (bad) mov fcompl jg mov mov stc jg das push fadd loop xchg cltd (bad) dec clc (bad) call rol sbb lret push rcll sub xor push inc ljmp and mov sti aaa cmp or mov xlat (bad) fcoms (bad) out xchg mov rclb ss (bad) (bad) mov or lcall xor repz loop out xor jmp and pop xor xchg movsl xor xor mov cwtl jbe sti lods cmpsl (bad) mov movl push mov into dec fldl adc mov sub dec in push xchg xor and sarb aas fwait es movsb aaa mov pop hlt incl mov sbb mov pop data16 and jecxz nop mov xchg pop jge (bad) decl int3 and je mov mov in lret (bad) loopne std (bad) jg cltd jmp adc jg push std mov mov shll loope (bad) (bad) (bad) lcall sub and dec lahf imul out or push lea mul (bad) (bad) (bad) incl (bad) addl rcrl mov and sub pushf jg sub adc sbb mov lcall pushf jp scas jo divb out xor cmp adc es sarl scas movsl mov sub andl incb lock ret pushl jmp lds mov ja mov dec push ss (bad) (bad) jns clc test ds fcomp jge ret sbb pop cwtl add add cmc pop sub mov (bad) decl jnp fisttp cmpsl lods or psllw jg xor ret movsl scas adc or cmp (bad) call and dec push bound mov adc movsl es fmull mov adc xchg lahf dec test icebp scas jg add iret jbe aas cmp xlat (bad) inc (bad) jbe lcall jns xchg roll out sub (bad) mov push push and ror jmp cmp outsb (bad) (bad) (bad) (bad) mov out dec sbb int3 jo outsl popf cwtl jmp cmp imul push scas push mov or jbe inc inc xor sbb cmpsl or pushf out inc sub xor aad je (bad) test in daa (bad) into adc (bad) ljmp xor sub inc jl dec and fdivs pop cmc cmp stos jl (bad) ja clc mov mov insl adc int3 std call shlb inc outsb add das or enter mov sub push popf xor and mov mov mov mov or mov xor hlt dec pop push inc sbb push mov jmp loop arpl mov cli push sbb sti scas mov (bad) mov divb (bad) push les xchg push push (bad) icebp push (bad) (bad) (bad) pushl arpl fs push dec inc pop fstl mov cwtl or xchg mov (bad) (bad) call (bad) sbb cs lea sbb cltd jae pop dec hlt mov in pop jo std (bad) (bad) (bad) jmp and cmp mov xchg jp and mov lret pop test gs lcall iret mov movsl mov aam fsts adc mov dec pop dec into in in es cmp xor jle sub adc xchg xchg pop xchg repz test (bad) (bad) incl unpcklps and imul int push cwtl fmul and call mov (bad) gs mov fcoms popf pop lds push scas cli ret adc sub outsb sub in adc add decl cli dec jne mov mov (bad) pushl dec cmp push push push push mov xor bound mov or int (bad) mov inc mov push inc sub pop sub pop inc adc fwait push inc sub lods lahf outsl pusha xchg xlat jp stos fwait (bad) (bad) call iret xchg (bad) jb movaps cld jmp stos or xchg jne out xchg icebp cmpsb jle inc ljmp decl or test mov add lahf je in sti sbb dec sbb das cmp and pop enter mov pop int3 add outsl (bad) cli sub pop mov sbb popf clc jne dec add nop push scas sub mov pushf imul hlt out movsl arpl push shrl je lcall (bad) (bad) call cmp or (bad) jmp and fldt mov lods inc mov das js scas mov sub roll sbb out bound mov daa mov pusha sub xor dec ja aaa push fidiv out imul jae jae pop cli nop aaa cld decl imul mov roll rcr out lret clc jmp push (bad) sbb es push loop (bad) (bad) call pop test cmp jmp lret outsl xlat mov and (bad) push pop cwtl ss cmpsl lret mov rcrl loope pop jae pushf out dec cld jg sahf push dec xchg popa ret inc add leave inc mov push clc rcrb add cmc jge in cli cmp jg add and gs (bad) pop mov add pop pop mov lock je aaa (bad) cmp (bad) pushl cltd lcall sub and jns (bad) (bad) push lcall xchg cmpb pop xchg mov pushf out inc and lcall mov dec (bad) (bad) (bad) jmp (bad) cmc push incb or mov cmpl lods aas clc movsb (bad) (bad) (bad) lcall cwtl pusha in addl inc in movsl sub and sbb push jo push add (bad) (bad) (bad) ljmp imul and notl mov push (bad) jae (bad) lods inc ja sar xchg fnstcw js call out or or mov pushf push sbbl call xor push (bad) mov js cmp inc stc shr into sarb sbb push movsb jecxz ret ret or xor dec xchg cmp xlat push mov push xor mov push sub jg (bad) (bad) (bad) fdivs sub jmp push pop js mov mov stos jp xchg sub dec arpl push cmp sbb repz pop mov mov int inc imul movsl inc out push cmp stc iret inc lret aas gs push (bad) jg pop and and test push dec movsl xor and inc jg or inc mov xchg nop les inc mov (bad) (bad) jmp and rcrb aas mov repnz jp inc or xor mov imul mov add push lock (bad) (bad) mov pop scas inc jb icebp and rol mov push std pop ret jmp add cmp jne and mov sahf xlat bound int out js xlat (bad) jmp loope mov inc mov daa sub mov inc ret call or jecxz jno dec adc in rorb ja,pn xchg icebp or stc repz dec mov (bad) ljmp lret rolb sbb and push pop cmovno push lods cmpsl cwtl mov fistpl hlt mov aad movsl pop scas sbb (bad) (bad) lcall js dec aam adc movsl inc pop iret lock je ss inc es nop (bad) cmp adc incl popa cmp mov sub inc or adc xchg fnstsw adc sub (bad) incl pushf dec lea sbb cli imul in rolb test lock cs fdivrs xchg push xor das shl stos fstps bound xchg (bad) (bad) mov movl mov adc rol adc (bad) (bad) (bad) incl pop jne pop mov dec (bad) dec cmp negl fisttpll (bad) incl dec int xor jecxz dec aaa add pcmpgtb das and jns jmp les jb jg sub adc pop and xchg int (bad) (bad) (bad) lcall mov int pop inc rclb push test jmp and dec pusha mov push adc daa movl cmp repnz lea test inc stos pop pushl ret lea pop fmull (bad) insl lods icebp int fcomip (bad) (bad) fdivs dec jle lcall sbb push mov (bad) (bad) mov ds out mov bound (bad) or sbb loope push pop sub call dec add cmpsb add or mov out sub and dec cwtl pop push jmp jp mull (bad) pop add lea jae js lock pop jmp (bad) (bad) call btc in jae (bad) aaa pop ds cli and (bad) push sbb mov popf dec aad idiv (bad) (bad) incl jle xchg or inc jbe cwtl lods lds xchg xchg scas dec ljmp es jae sub (bad) decl adc jns icebp hlt aaa outsb aam out pushf outsb fcmovnb fild imul and leave (bad) (bad) (bad) jmp adc lods and and push mov sarb shll pop mov jg jns mov push (bad) (bad) (bad) call test xor enter les inc mov mov iret sar cs dec in and je xchg mov ficom pop (bad) mov and cmp mov sub (bad) (bad) (bad) cmp fistpll mov int3 sub imul lea mov (bad) call mov loopne xor ja adc popf mov mov fsub push mov dec push sub cli outsl cwtl sub lcall ss (bad) (bad) pushl ss pop mov pmaxsw jno rclb das sub inc inc xchg cmp (bad) (bad) (bad) cmp ret fnstcw (bad) mov lret shlb push scas push jnp test adc andb es (bad) (bad) call (bad) out lea sbb aas adc sub cld aas add fstpt mov or inc or xlat and xor jg (bad) lcall push xchg ds in pop mov aas orb xor mov mov xchg xor (bad) jg decb mov mov push or jle jbe stos lcall lea in loope push repnz jmp std push mov (bad) icebp fisubr mov jge je jg mov and dec mov (bad) (bad) jg test fabs imull (bad) sbb push test mov lret aad (bad) pushl push fs fs lds dec ja mov ss add fst push pop jge (bad) (bad) (bad) (bad) decl sub sbb mov sub out ffree (bad) and jo mov sbb sub fdivs aam in adc (bad) fwait sbb out adc sub xor cmp fisub jg (bad) (bad) incl push mov das je and fcmovbe pop (bad) popa aaa ss pop push and pop lock mov and pop mov negb mov into aam ljmp push fcomip pushl dec scas inc ja push sahf into push in (bad) in push (bad) (bad) pushl inc xchg xchg pushf mov xchg std outsl jl jnp pop push int jae push outsb popa xor (bad) ljmp int3 dec sub xchg loopne mov je insl popf sbb inc inc (bad) (bad) (bad) ljmp divb pop bound mov ss pop in or dec stc daa imul xchg or jmp mov xchg fidivl imul mov lds call dec push cli adc lret hlt ret and pop push xchg or pop cmp pop add xchg xchg sub (bad) (bad) sti lahf pop dec mov incl dec aam mov xchg and popa sbb in inc pop cli jp arpl xor je inc scas mov in inc jmp sub bsr pusha std test negl je pop jge pop or add lods push jnp pop push jle pop in xor jg (bad) lcall pop das mov setb or (bad) ljmp (bad) (bad) inc mov (bad) jae out in adc cmc xchg xor xchg fcoml mov sub test (bad) (bad) incl adc dec (bad) movb sarl aaa add xchg cli cmpsl mov xchg add aam fmuls (bad) (bad) (bad) mov cltd (bad) cwtl inc inc sub ret mov ret mov push loope mov (bad) (bad) (bad) lcall jae inc loopne jnp,pt adc mov fstl jg push outsb push (bad) or jnp outsl (bad) jmp fcmove (bad) pop fisub (bad) and insb push (bad) dec and faddp pushfw aas add xchg rclb and mov pop inc and test outsb mov scas jne call sbb pop (bad) jb (bad) inc push adc cmpsb aaa pop adc cmp hlt add and add mov mov (bad) (bad) incl outsl cmp inc push cmp xor fs loopne lods xchg mov mov adc (bad) (bad) (bad) jns add mov sbb add adc mov adc daa rcrl (bad) (bad) (bad) jg stos mov shrb push pop push inc jp fisubrl pop mov ss lahf mov add pushf pop inc lahf shrb pop ja aam sub xchg sbb jge icebp icebp mov sar (bad) jns dec pop xor (bad) jle mov int3 test loop cmpsb (bad) insl lret std (bad) (bad) lcall cwtl out xor sub in dec fucomi out push movsb cmp push and aam (bad) ljmp sahf (bad) mov and mov leave xchg xlat ljmp fcmovnb mov mov ret inc sub out xor xchg call (bad) aad mov out enter insl sbb cmp push lcall mov mov or inc call insb (bad) push les mov sbb (bad) call (bad) cmc (bad) (bad) incl ja movsl in sbb movl adc lcall cwtl out int dec fcomps (bad) (bad) jmp cmp fdiv inc dec inc sti pop jmp add addl fbld sbb pop mov mov xchg int jg call sub out mov add in sub sub aam sub (bad) (bad) (bad) decl loop jg fs mov popa sar push jecxz cld pop rorl stc decl mov shrb mov mov stos dec push lcall dec (bad) js cmp call pushl mov cmp add dec data16 (bad) (bad) decl hlt sbb add push sub mov xchg scas cli imul aad (bad) (bad) (bad) sti push mov lea jns into xor jbe xor and sbb (bad) (bad) out xchg call into int3 sarl jno fsub (bad) fwait ljmp and jmp dec inc jl lret mov adc pop (bad) jl loope ret clc (bad) lcall cmp push pop data16 test imul (bad) (bad) incl pop mov mov push rcrl push jg flds (bad) (bad) dec adc push adc lods xchg ss dec outsb sub scas dec add out jb aas jns popa js ficomp sbb (bad) (bad) pushl pop int adc ljmp mov sarl bound pop std jmp cmpsb push dec (bad) jecxz sbb pusha pushl test push sbb dec pop hlt ljmp sbb and imul mov fidivrl inc js jp jae les mov push test mov pop icebp sbb xlat call sub push lret jge xor fiaddl pop rclb jbe jbe or imul call fsubs imul or xor fadd pop pop mov jg push stos pop pop sub add js adcl sub fs push xor mov jne std mov xor clc sub and jnp mov xchg ds repnz jbe dec jo mov (bad) mov lcall or fcmovu push sub mov or mov fsts push outsb cli jmp or jle imul dec pushf addl daa ds push sbb xor in fcoml xchg xchg scas push cld add lcall sbb push neg sbb mov mov data16 xor (bad) (bad) jg jnp jo push cmp pop aam pushf push ja in sti jae mov inc pop in sti in add andb mov loop mov adc hlt (bad) call inc leave inc loop cmc or repz imul add mov mov dec jb adc cmp mov adc xor stc call ja push jp add test out jbe or jp push (bad) stc jg loope mov cmpsl iret das jmp adcb or jecxz xchg sbb (bad) (bad) (bad) cli inc dec adc loopne dec mov inc adc insb enter in in cmp xor mov test dec xchg rorl (bad) adc cld (bad) (bad) call jb xchg cli (bad) rolb jne mov jl adc outsl bound fcomps dec test pusha push popa hlt dec cmp mov add movsl jae test dec fistl push ds and (bad) pushl mov shl mov out fisttpll pop or pop mov xor xchg decb pusha sar (bad) (bad) incl pop icebp or mov jge call and cmpsb xor dec loope leave mov xchg mov and inc pop dec cld mov sbb mov clc aaa lret cwtl pop in pop sarl pop inc js stos cmp (bad) (bad) (bad) jmp xor popa test (bad) scas dec and fwait mov mov adc lcall sbb shrb mov sbb jp sahf jge pop movsl (bad) (bad) (bad) (bad) in out icebp xchg daa add std or dec xor je dec jl mov lea mov aad (bad) (bad) decl aas inc (bad) fs js in aam hlt mov jmp out lea out mov (bad) (bad) mov test lcall mov jns jb adc sbb inc push pop fwait cli (bad) mov push pop adc popfw or dec call test dec lods iret (bad) (bad) ljmp lret call inc jne xor and push rcrl dec push (bad) (bad) mov (bad) jg pushl push (bad) mov adcl mov add or outsb cmpsb popa dec jecxz add jg inc cld in add js cmp imul mov std (bad) pushl or (bad) repz pop mov or jg in sbbl (bad) es clc xchg repnz cmpsb push pop icebp int (bad) (bad) call dec insb adc (bad) adc aad dec and push xchg sahf out clc (bad) jg cmc iret sbb movsl sbb xor inc pop aad jge imul mov cmp cmp jo mov fstpl mov cmp or das xchg arpl pop into mov loopne cmp cmpsb nop icebp add xchg in cld (bad) aas xchg into inc cli jmp xchg pop lods test xor xchg mov sti jns mov mov xor or sti jo sub aad lock mov and loopne pop push data16 (bad) mov les ds pop mov setbe sbb int3 cwtl pusha lcall (bad) out pop jg push push sahf add hlt sub lds mov add xor pop cmp dec ret fmuls adc repnz adc dec cmp inc mov inc cs inc scas lods nop mov pushf fstl xchg nop lea outsl (bad) dec lods lods mov (bad) loop push jno insl jne pop cli adc daa inc push mov sub ljmp push repz pop rolb pushf lock ficoml mov pop icebp insl scas repz test or jecxz cltd dec add cld (bad) fildll arpl addr16 icebp out mov inc (bad) or repnz stos (bad) jg gs insl cmc fistl or dec jne mov stc sub (bad) out clc fidiv mov pop cmpb mov dec out out aaa mov (bad) (bad) cmp mov mov mov (bad) mov ror (bad) das clc mov add dec mov pop xor (bad) ljmp call jnp xor and xchg xchg in insb sbb je shrl xchg pop in (bad) (bad) (bad) fbstp add shrb adc pop pop jno jmp (bad) call (bad) incl add sub sti mov in (bad) (bad) (bad) push inc lds imul pusha loope lcall and test fsubr add in sbb dec das cmpsb and fdivl cmp sbb ljmp (bad) pop rcll and mov adc add xchg pop add fs pop fs dec and xchg xchg in cli rcr es push add (bad) ljmp rclb sahf inc (bad) popf rcr sub ficom sub sbb dec (bad) (bad) (bad) (bad) js jo pop xchg or cwtl cmp push inc xor (bad) and int xchg adc sbb stc push mov or xor fildl push sub cli lock repnz (bad) (bad) (bad) ljmp xor xchg lods mov popf mov (bad) push push cli sub jno bound arpl call xchg les sub lds loop in icebp outsb jl divl sti out (bad) mov out repz bound mov xchg imul pop or cld xchg push mov mov push stc inc pushl lahf popa mov mov outsl mov mov (bad) push or sti or ljmp mov in int3 mov mov (bad) push roll cmp (bad) (bad) jmp sub xorl jae in push pop std ret mov ret sar (bad) (bad) jp jle das or int je arpl lcall mov jge hlt loopne xchg out and cli aaa inc dec or mov iret pusha outsl (bad) mov in lahf (bad) movsl xchg mov inc ljmp insl pop pop jae mov mov cmp xor scas inc mov xor (bad) not mov (bad) aaa clc out (bad) (bad) (bad) call enter stc pop add dec in data16 mov lock outsl cmc sub xchg or lcall sti mov (bad) mov lock sahf cmp pop push adc cmc pushl (bad) aad (bad) out and push adc dec mov (bad) ljmp jle sbb xlat aad outsl lcall jmp sahf or inc or dec cmp jns cmp inc stos je loop leave enter (bad) (bad) incl push stos mov cwtd out sahf xchg les mov ljmp adc cs out add jnp xor (bad) (bad) jg int jns loope (bad) mov (bad) addr16 inc (bad) sbb add or cs aam (bad) push int3 jns clc (bad) (bad) pushl xor inc cld push fwait fs sbb jle xchg in mov adc mov (bad) (bad) incl into and (bad) fsubs aad mov fidiv (bad) les notl aaa add les out repnz or and stos test or (bad) ljmp shr jle pop inc jae lods ja pop jae cltd leave movsb inc adc in inc in (bad) jg call int mov inc dec fisubl ret outsb sub push sub enter (bad) (bad) fimull clc inc inc mov mov push sub mov movsl (bad) (bad) (bad) jmp mov mov or xor (bad) xchg aas (bad) (bad) (bad) (bad) mov sbb adc arpl pop dec inc lret rclb cmpsb shll ljmp cli (bad) jnp xor pop mov aam push xchg (bad) jns cmp mov dec rolw je xor lahf pop jle mov cld ja incl mov cld cmp (bad) xchg pushf push les cmc loopne (bad) or (bad) frstor iret jb jmp pop cmp out sbb pusha cltd and cmc jg icebp jne mov xchg fsubrl xchg jns daa lcall dec mov pop into jg or into jecxz or insl (bad) out mov sti mov xor imul cltd andb push xchg fwait xchg (bad) cmpsl dec repz bound decl mov bound pop xor push frstor popa push ret push (bad) jne (bad) (bad) lcall mov mov jo mov mov (bad) xor addr16 inc xchg mov daa mov mov (bad) jmp scas rcl sbbb pop pop sub (bad) ljmp outsl lock mov mov jbe imul decl pusha xlat add clc push iret and mov sbb mov loop fs lret xchg jg ret jge cli and outsb in sbb js rcrb out (bad) (bad) pushf (bad) (bad) (bad) (bad) mov int3 out icebp push (bad) push add jnp into add sahf push enter mov adc xor andb push cwtl call (bad) (bad) mov fcmovb cmp jns sub fdivs dec cli call cmpsl jno adc add sub clc push pop sub dec add inc dec mov and (bad) (bad) (bad) fisttp mov and push and push mov out sub (bad) (bad) mov dec push shll sbb in outsb mov (bad) (bad) call push pop mov call cmpsb mov sbb and movsl movsb aaa xor (bad) fbld push adc (bad) cmp mov (bad) lcall dec in sub inc push mov and fstpl cli ljmp sub es jge jmp sti dec nop icebp inc js cld bound cmpsb dec (bad) stos decb andl xor and stc xor repz adc aad loop ds jmp imul mov jo ljmp arpl decl add addr16 mov pushf (bad) xchg ja popf xor rol jmp jno mov mov js lahf push sarl enter insb nop jecxz pop mov sub cwtl push sub clc fcomps push test or aaa nop xchg or leave mov add (bad) (bad) (bad) decl pushf clc jae fisttp int3 sub lahf leave pop add fwait jne lret (bad) mov divb clc mov icebp mov gs (bad) ljmp push (bad) jle push imul sti xchg mov xor loop out rclb pop hlt (bad) sti fdivl mov out push sbbb orl stos push sbb mov (bad) (bad) lcall and lret and sub mov lret dec mov cs (bad) pop pop adc sbb push inc inc push repz dec (bad) (bad) (bad) incl jns jg inc xor mov (bad) dec jge push sarl cmp pop cmp pop mov pop enter xor sarb aaa jle popl inc arpl bnd or scas ret cmp jb mov push (bad) pop das and sbb inc call aad xor (bad) ret stc cld sbb stos andl pop xchg rcrb push sbb mov ret mov and decl int3 js in icebp test out lock ret inc leave xchg inc and clc loope jmp adc mov jg mov (bad) (bad) dec jmp imul in add inc jl enter cmc gs (bad) call (bad) sub in push or adc jae jl ljmp fbstp lret and fwait mov cld mov enter (bad) (bad) jmp jmp add in jnp pop xor repz outsb cmp lret test xlat push lock call xchg mov scas xchg stc gs cwtl xchg nop rcr and decl xchg aas sbb in mov pop mov aad sub clc xchg mov lahf dec jb ljmp imul push adc cmp (bad) decl push test sti enter lock and or jno aaa in adc sub push imul adc mov mov fdivrp out xchg mov jmp (bad) cli test sbb jae sub pop das outsb aaa dec rcr xchg cmpsb pushf insb fs pop jecxz jle (bad) (bad) cld inc xchg and dec lret pop sbb and sbb into call psubsw lcall fimul or stos loopne sbb pusha std add (bad) lock cmpsl cwtl mov dec or ret imul lods jmp sub cwtl js and jns cli dec cmp xchg mov mov jecxz call (bad) jge adc (bad) xor mov imul cmpsb in push pop and (bad) (bad) decl in cmp mov xchg pop inc xchg (bad) fldcw mov jno (bad) (bad) fild dec lods lea outsl aam cs xchg fiadd cld (bad) (bad) lcall mov push mov ss incb cltd jl mov pushf movsb (bad) jg or enter movsb pushf push addr16 jnp push arpl popa jge pusha std pop mov dec sub loopne sbb xchg pusha pop shlb xchg push xchg mov sbb scas int3 (bad) (bad) (bad) pushl mov adc fnstsw incb pop aad pop int3 lods adc push ja pop clc (bad) (bad) jnp cwtl aaa out or mov sub fdivp add (bad) (bad) (bad) decl mov insb or dec sbb mov inc das or pusha sbbb and incl out jb icebp or add hlt imul or (bad) call dec icebp sub ss in xor jp or jl adc (bad) mov cmp sahf inc mov repz in push mov xor popf (bad) mov cmp sahf (bad) (bad) (bad) pushl jmp ret xchg call pop jno jl jg fmuls jb pop mov adc jge int3 call icebp push xchg jp lods aam xchg mov pop push dec dec out (bad) incl or test orl (bad) imul xchg outsb mov and loop (bad) (bad) (bad) decl les (bad) push jg mov lcall fldt mov sub jge or (bad) pushl out mov loopne loope add inc xchg push push shrl imul inc into dec in cli dec sub dec xchg das mov call adc add adc pop les ljmp out adc je add pusha (bad) in push pop mov xchg cld (bad) (bad) (bad) cmp push inc addr16 mov fs repnz (bad) mov adc push sbb fcompp xchg dec cltd add das clc pop mov clc xchg mul loop adc (bad) (bad) fisttp es mov mov stos xlat adc push shrb pop mov loope stos xchg hlt loope (bad) (bad) (bad) incl test mov push lock mov pop repnz inc in inc jo cmpsb icebp (bad) incl mov js xchg das inc lcall aad sbb (bad) xor sbb mov repz push (bad) std rcr pusha (bad) (bad) (bad) (bad) fadd shl mov push cmpsb (bad) shrl mov pop jmp icebp mov jnp (bad) fcomip (bad) mov cltd or xchg pop xor xor (bad) adc nop pop cmp dec cld (bad) (bad) hlt jb aam data16 inc imul and call aam sbb (bad) int3 frstor aam in decl std leave shl and hlt (bad) and cmc pop (bad) (bad) out and jns mov fcomip repnz jmp (bad) (bad) decl sahf fisubl adc repnz sarb mov (bad) (bad) pushl inc stc mov popa cmpsl clc push lret and mov ljmp (bad) (bad) jmp rorb pop fwait aam sbb mov cmc fs add (bad) gs (bad) (bad) (bad) jmp mov idivb imul and or sbb fs push xchg fdivrp (bad) incl mov xchg subl test sub ljmp stc lret jo call ljmp jne jno fidiv testl ret jno je dec cli iret leave scas pop mov add lahf std (bad) (bad) call jno in idivb sub fimull jg push inc pop sahf (bad) iret adc (bad) ljmp pushf data16 daa adc (bad) lret dec ds repz ss (bad) (bad) (bad) sti add (bad) pop into inc dec add roll xchg pop dec jg or call stos pop mov mov in inc push movups sub test icebp (bad) (bad) inc sbb jb sub mov fwait jbe mov mov add movsb adc pop hlt mov push push into stos out cli mov ret hlt stc jecxz mov movsb push xchg xorl dec and clc dec dec inc insl pop sbb scas mov and and aad mov jp cltd mov movsb or inc push push xchg cli lcall (bad) fcmovbe xlat mov xchg add (bad) (bad) (bad) call or clc cmp xlat sbb mov sahf rcll jnp pop push sahf aam dec and stos pop push xor jge push add inc fs loope shlb fs scas aas (bad) cli sbb pop or es sub xchg cld fwait sub ja cmpsb daa lret jp sti or push jmp or jg adc rclb ljmp data16 adc clc xchg stc js idiv (bad) (bad) incl push mov and stos lock out jae mov or add or adc push pop lock outsl sub pushf mov loope cmp (bad) (bad) decl js repz inc icebp dec push dec mov sbb jb lcall jg (bad) call ret or out into jne pop adc (bad) mov ljmp cli enter popl xrelease cmp inc int3 sbb shlb mov jae dec lcall (bad) ljmp fwait daa (bad) mov lret inc cld arpl (bad) (bad) (bad) mov xchg push jae sub dec scas push arpl (bad) dec (bad) test in pop dec test (bad) incl shrl sub js pusha in cmpsl fmul aas (bad) ljmp mov idivb mov push or mov (bad) mov push cmp (bad) jmp fcmovnb call and pop pop mov dec movsl std movsl popa ror loopne jno inc mov test lods cmpsl sub aaa jmp pop sbb inc jnp fistpl mov sbb dec nop (bad) (bad) pushl adc fsubr mov lds out out nop stc jnp fdivr (bad) mov jne std or push mov pop mov jo pop mov in (bad) (bad) jmp mov aam push and pop lea call pop sahf adc popa data16 es lock hlt lods xor arpl mov out in adc repz popf faddl (bad) ljmp in xor enter mov push insl out call add shlb push int ja rcl xor mov cmp insb push gs ret out add jg cmp aad cwtl out dec push test incl or stos lods jmp mov insl idiv movsb mov data16 (bad) (bad) (bad) mov or jo enter outsb rcr xchg jecxz adc sbb sbb les (bad) lcall xchg adc cmp shrb lock xor inc add fild bound sub mov jns xchg add decl inc mov push mov mov inc es mov popa mov (bad) (bad) mov (bad) in imul mov mov or xchg fisttpll daa ret mov jmp jmp iret scas clc dec cltd push xchg sub lcall (bad) repnz incb add jb dec jecxz in dec mov jp std (bad) jg (bad) jl jecxz test std (bad) aas pushf daa lods dec jmp cld or stc and push push mov mov mov (bad) jg insb out cmp xchg and pop loopne imul aaa sahf xchg (bad) (bad) incl outsl inc jnp push pop xchg mov xchg sub push jecxz std xor (bad) (bad) decl mov adc and push jbe mov or cmp mov xchg sub mov dec ds lods lret (bad) decl outsl (bad) cmc js aad fmuls cmpsb int3 push mov repnz dec jg pop mov push (bad) std test std dec mov sub fwait lea repnz add icebp push sbb or adc sbb mov cld (bad) (bad) (bad) mov enter mov ret mov scas lds cmp pop and stos mov mov std pop push outsl cmp push gs cli inc push test dec pushl or dec js pop (bad) int (bad) (bad) or mov imul mov (bad) call jge sub jl jno pop mov xchg in jnp inc popf jae shrl ljmp jmp fcos xor adc test lret push add push scas push pusha mov jne mov orl inc arpl (bad) fs adc repnz push mov sar (bad) (bad) (bad) std mov aam ror xor push addr16 jns fimull cs aam in stos pop loop mov push mov jle imul clc loop testb (bad) call adc shll xchg pushaw fimul cs (bad) (bad) lcall sbb std inc xor sub mov movsb sub adc scas movsb insb in cmp mov jmp scas ss pop push sbb in pusha sbb loopne (bad) (bad) jmp aam push out cmpsl insl dec mov daa arpl repz (bad) (bad) xchg sub and push aas mov leave xor loope push mov cld enter lcall push psubw cmpsl or (bad) test iret popa pop int fisttpl aam (bad) (bad) jg popf fisub outsb shrl shrl sbb sub jns test (bad) (bad) incl dec out mov cmpsl push loopne and (bad) (bad) mov aad lods xchg (bad) (bad) out ret push in lret lds cmp roll mov pop in (bad) (bad) (bad) pushl jmp jge loope int3 mov in into xchg test mov iret jnp and mov mov mov lods or outsb ficoml xor add add jp mov (bad) (bad) (bad) jns sbbl sub cmpsl fmul mov subb inc push and js cmp (bad) pop test (bad) incl scas xlat (bad) (bad) aam jge daa test sub xchg dec push adc mov es lds or sub add ds jo ds sar (bad) (bad) (bad) jge or in sub mov mov int mov mov call into push das fwait movsl (bad) (bad) (bad) incl dec xlat cs loop repnz jbe add xchg imul sub push cmpl inc leave leave adc sub fisubrl xor test lods (bad) (bad) jg mov repnz mov sub sub inc ret cmc sbb inc lods (bad) (bad) (bad) ljmp les mov mov outsb push pop into lds (bad) mov ja call mov push popf test jbe jnp test je sub xor stos pop jg cld es cmp cmp jp xchg insl adc sbb (bad) (bad) decl cmp pusha sar mov rcrb ss scas xchg push xchg mov out dec push xor inc andl dec xchg je (bad) push aad mov mov imull cmp pop int3 dec mov inc jmp ljmp add mov inc pusha push and ja fdivs cwtl repnz sarl xchg out cli lcall stos cld inc jmp xchg out mov scas loope ja mov nop xlat (bad) (bad) incl daa jns in lods arpl xchg sbb ja mov fistp clc mov jae cmpsl jmp jge scas jg push (bad) lret test (bad) (bad) dec gs in lret ret in imul pop mov out aas nop stos push adc cmp add fs nop push enter ja pop push in (bad) (bad) (bad) jmp dec repnz mov jecxz mov out inc push pop (bad) cmp lret or xchg (bad) adc pop cs mov sbb mov cmp cmp cmpl sbb cmpsl (bad) xchg sub (bad) mov mov shrl mov push adc mov inc mov decl out imul lcall fimul dec push cltd out push sahf outsb mulw dec xor (bad) (bad) (bad) (bad) (bad) pop dec mov add mov xchg add int3 xchg inc inc jo je stos in jnp icebp movsl (bad) (bad) (bad) ljmp mov rclb mov shl clc cli adc pop cmp pop mov (bad) (bad) js call aas iret lret je push jle,pt pop mov cmp pop addb mov push or dec sbb jb inc ljmp or mov pop add xchg out mov push and jle clc stc lret (bad) (bad) (bad) inc cmp and lock dec sti lock stc shrb pop test mov (bad) (bad) (bad) (bad) jmp inc mov xchg fnstenv mov mov jns mov out sub call pop mov xor push cmp push ret add xchg (bad) (bad) inc push nop mov add fiadd sub jmp mov hlt mov push xchg pop lods dec pop (bad) decl cmp push aam into fmuls (bad) add aas es lock inc cmp jns or cmpsb cmp fs and sbb mov (bad) call push cmp cltd push jecxz mov pushf xchg and (bad) (bad) inc idivl bound xchg in std pop out mov cld out (bad) aaa or data16 inc ret iret mov cmp ret out scas aam inc insb mov (bad) call lds repz or cmp cmp add inc fs out sti in cmp call xchg scas out daa lcall sub (bad) mov cmp lahf cmp mov nop mov mov (bad) mov jp mov loope movsb mov sub sbb and lahf (bad) (bad) (bad) decl clc jge fnstenv mov jae push add push inc mov rcrl pop cmp (bad) (bad) incl cltd cmp jmp or cmpsl and dec inc ljmp out mov xor lcall das stos ret outsb test jp pop lret int mov fwait dec js dec xlat cmp ja les lock cld or jmp (bad) xor cmp mov (bad) cmp arpl and (bad) (bad) ljmp test sub cmp mov cltd iret out add test sbb sub (bad) (bad) jmp push loop push (bad) (bad) cmc xchg (bad) sbb mov outsb sbb (bad) sub imul lods clc outsl incl xchg clc cmp nop jmp or int jl (bad) (bad) ljmp xor in push cmp dec testl pop popf jne adc xchg test aad pushf orb pop inc aaa (bad) (bad) (bad) (bad) fldcw enter adc jle push sub roll lahf aas xor or daa or mov and das (bad) jne cmp jmp inc mov repnz (bad) (bad) (bad) mov xor mov (bad) mov pop popa xchg xlat and aam jmp xchg test cli lods push movsb xchg push push mov lock out inc inc mov and out xchg jg sub fs nop jnp gs test (bad) (bad) (bad) pushl cltd leave add rcl push adc mov pop (bad) cmc inc subb js mov mov (bad) (bad) (bad) (bad) cmp mov push adc lret pop pop sbb int add or sbb dec lret sti cmp (bad) pushl mov ja jmp fstl pop pusha mov insl cmp inc lock (bad) (bad) (bad) push xchg fidivrl lahf (bad) xor dec sub adc xlat inc stos pop aam push in (bad) (bad) (bad) lcall jns mov adc xor or scas in and lods daa lock adc ljmp mov xor add es pop pop loopne (bad) (bad) jg insb and mov sub ds push (bad) mov js sbb push lock ficomp subl fcmovbe jns push inc popa cmp scas pusha push xchg (bad) (bad) (bad) call jge and ret cmp rorl scas sti or sub (bad) xor add add imul lret fs push faddl (bad) jg sub fwait pop jo mov (bad) push fwait dec cld (bad) (bad) (bad) mov xchg fildll xchg test insb sub adc mov cmc add into jle add (bad) ljmp add xor in mov test (bad) movsl (bad) (bad) (bad) lcall mov add push fdivs call dec bound leave dec aad mov sar popa into fisub clc lahf popf cmp jmp dec test dec pop test pop sbb mov ss push and ret sub mov push cld ret push jbe call mov arpl sahf out pushf addl jl imul cltd enter ret mov lods rcrl inc (bad) adc repnz pop and mov out add out (bad) (bad) (bad) pushl div mov xor fstpt sti xor sub dec sbb in cltd xor out xor add push loope mov push mov (bad) (bad) (bad) ljmp into sbb mov clc dec scas and test jg pop das push dec mov (bad) sub fstpt pushf cld outsl inc xor xor sbb (bad) (bad) mov add adc outsb push cmp xlat inc mov fildll add (bad) (bad) pushl inc bound aad test inc outsb or push test jmp dec xchg push into stos dec xor (bad) (bad) mov scas xor pop jne mov mov lea aas mov add sub jno (bad) lock add or imul in mov mov mov jae sub xlat and xchg in mov sbb pop inc int (bad) ljmp pushf adc daa mov (bad) (bad) (bad) (bad) jmp das stc pop or xor inc or add xchg or int pop pop add mov mov and jns jl enter popa int xchg xchg into add aad cmp (bad) (bad) call icebp xlat out adc jecxz jle pop insl daa sub popa cmpsl ljmp jmp or movsl call mov (bad) (bad) inc (bad) les dec mov leave dec jae cmp (bad) mov pop das mov call sbb in cld add icebp imul add sub into and add imul add rcll mov out pop sbb call (bad) sub pop (bad) (bad) (bad) incl test inc or push ficomp sub pop sub sbb and in icebp (bad) mov lcall inc int (bad) ljmp sahf sbb sub inc iret ljmp std scas js mov jge xor mov std pop int3 (bad) (bad) (bad) (bad) mov repnz neg add aad lds xchg lods (bad) ljmp insb sbb jg mov sub and mov (bad) (bad) (bad) dec and es popa dec push pop xor frstor cld ds cld sub out lds ja cmpsb jle xchg (bad) incl pop lock test mov sub push repz lods mov cs pop inc iret adc std (bad) lcall jge roll cld stos mov sub movlps daa (bad) (bad) (bad) out dec pop loop jl lea add add aaa push and jne sti sbb push decl push or cmp xor cmp xchg mov adc (bad) (bad) (bad) dec sbb jae fdivrp movsl push repz sahf inc pop orb call jl (bad) (bad) decl adc inc xchg and loop sbb std cmpsl call xor repz cld pop sub aam hlt push stos add xchg pop jne pusha mov sar stos je inc mov je ret pop rclb push xor (bad) (bad) (bad) jmp scas insl sbb xor (bad) adc xchg sub (bad) push and sti inc cmc mov (bad) lcall push jnp (bad) lret sahf dec stc or pop movsl mov push lea pop les scas and enter cmpsb adc (bad) gs int lock mov push mov les cli (bad) decl lock nop jnp jnp ljmp ss mov ds sti push (bad) mov shlb adc test je inc xchg jecxz mov fidivr outsb aam (bad) (bad) (bad) (bad) fstl cmp push aam xchg sub or or pop push mov into nop push (bad) jg push xchg outsb xor popa stc sbb into repnz dec mov pusha mov jmp fildll (bad) (bad) mov jge sbb add imul cmc lods and idivl (bad) ljmp sbb out icebp pop shl (bad) push scas or test xor xchg mov jl rcr (bad) pushl (bad) pop std dec imul xor dec xor std or push dec mov xor cmpsl cltd xchg loopne and (bad) (bad) jmp fcomps adc test cmpsb lea fildll xor (bad) outsb and decl adc mov adc add or fs aaa imul lock and (bad) (bad) jmp adc dec or dec xchg insb inc enter mov xlat divb (bad) (bad) decl (bad) daa lea shrb pop out add sub push sbb in test pop add jl xchg orl mov sbb data16 fisubrl mov in (bad) (bad) fcomip sarl jns mov push adc sbb jne or js out (bad) (bad) jmp cmp mov gs pushl add sub and icebp imul fsubs (bad) (bad) (bad) mov test xchg scas adc icebp ja jmp xor cmp ja add add addr16 mov in or xchg imul (bad) (bad) incl ja jecxz ss mov pop inc pusha jge,pn (bad) dec cmpsb mov hlt leave repz fmuls jo repnz cmp insl (bad) call shlb mov (bad) xchg cmp cmp push xchg daa leave jge lret (bad) movsb adc (bad) jbe sbb daa cmp (bad) jb popf js inc xor aaa (bad) jb adc (bad) pushl stos loope test mov inc dec or push dec icebp jae push lahf xor xor adc decl loope lods add mov add xor popl (bad) (bad) dec jg popa lcall out push fs mov in pop call dec jae mov (bad) adc roll cmpsl mulb repz sbb std inc fnsetpm(287 add sub jg xchg les xor loope jb sbb out outsl push mov and mov or or rcrl mov jg lret int mov insl xchg into cmpsl mov clc cmpsl or (bad) pop sub (bad) (bad) call inc and out sub scas jl sub sti dec (bad) out es lea jecxz (bad) (bad) jle jo sbb push dec mov xchg jle ret scas xchg inc or mov (bad) mov loop iret call cld ret or iret sub mov (bad) (bad) ljmp in lds dec push cmp xchg jo xlat ficoml mov (bad) call sarb fbld xchg dec nop out jne xor (bad) (bad) (bad) (bad) mov pop xchg repz (bad) pop ja cmp (bad) movsb repz fstpt sar (bad) (bad) (bad) out mov or push sbb in cli adc (bad) cld xchg roll adc and (bad) (bad) (bad) incl rcll jno adc sub mov sub xchg inc imul sahf mov cmp aam lret jecxz test (bad) jg push icebp push rcrl adc cmpsl scas or insb jno inc arpl pop sbb (bad) out lods dec in ljmp aaa loopne (bad) (bad) call pop mov cwtl xchg out popl mov bound jecxz xchg cld cmp nop iret out jo mov mov dec mov in mov xor aam inc jb (bad) pushf jno pop sbb cmp cld ret ljmp out add jmp push aaa sahf ret sub imul fisub arpl sbb imul sbb xor mov push es aam std (bad) (bad) pushl push mov dec dec jmp std ror shrb movzbl jmp cmpsl es jno jg fs sarl pop (bad) out nop xor sar (bad) incl push xor aas fsubrl mov cltd dec ficomp bound outsb cmp (bad) (bad) jg dec add sub test adc xchg jp mov (bad) inc std or in push sbb call and mov test adc jl fstpt rcll rorl call (bad) (bad) ljmp or push mov into xor pop idivb (bad) movsl mov xor mov (bad) jno jg jg push data16 pop mov cwtl (bad) push inc mov jae cs mov mov in push push pushl subb dec push popf mov ljmp jb clc in xchg pop mov sbb (bad) (bad) mov sbb popf jmp xchg pusha movsb stos adc (bad) (bad) (bad) (bad) call rcll xor push sub or dec jns xchg jb or (bad) lcall sub mov sti xchg sub adc xor aam (bad) (bad) (bad) (bad) mov mov stc orb mov jmp inc xor (bad) pop fmul xlat mov pushl mov pop (bad) cmp call lea (bad) push rclb and dec push test int loope (bad) jg incl jo push fdivr mov and mov mov outsl cmp repnz hlt (bad) (bad) (bad) mov ss dec ret loope push nop lret inc add dec and lods and dec cmp xor (bad) ljmp push test sub clc arpl loop std adc icebp mov (bad) lcall int out xchg das insb cmp mov loopne mov push jns mov or aas (bad) (bad) (bad) ljmp mov hlt cld mov inc sarb cmp jbe pop sub jae sbb imul adc lods in fsub jo loopne cmp cld or lcall xchg sub or xchg pop sar mov es aas rcr test xchg out lahf adc and into jmp and out or mov (bad) (bad) (bad) pushl push fimul adc and add mov seto lds xchg adc mov jp (bad) (bad) (bad) call inc sub mov push pop add push pop (bad) repnz fidivr dec push das or sbbl mov (bad) sbb (bad) (bad) lcall ljmp aam shll mov cs mov pop pop and int3 cmp mov jp cmp mov push gs inc imul cmp mov cld (bad) call mov jl jmp popf stos in mov in das and cmp (bad) jg inc fisubrl dec out (bad) jbe rol jae xchg lahf pop mov sbb outsl incb adc xchg jne push outsl bound insb (bad) ljmp test (bad) das adc sbb int pop fucomi pushf cmp out rcll jbe scas ljmp lods or mov cmc rol mov fisubr movsb sbb dec rcrb imul push stos mov pop hlt (bad) (bad) (bad) dec sub inc fisttpl xor inc mov pop lods sub ljmp in les mov leave xor mov stos iret or pusha lods adc lret shl outsl (bad) (bad) (bad) jmp pop mov inc push std mov xor pop add dec add (bad) (bad) (bad) inc jno fiadd testl mov add mov stos pop (bad) ljmp (bad) (bad) (bad) push inc stos out pop imul mov push cmp push insb adc repz xchg mov mov call test sub xchg cld test and cmp jbe jp xchg inc lcall icebp test push clc decl fsubl mov push xchg sub push ret and inc adc jle (bad) (bad) jg lods push arpl or arpl mov insl mov leave mov (bad) cmc sbb (bad) (bad) dec gs push mov movsl mov or mov sub xor lods ret pushw mov jmp (bad) incl inc imulb out sub inc ljmpw mov ljmp out vminss xchg fistp je add fistp loope mov dec ljmp pushf loop and stc lods aaa pusha (bad) (bad) ljmp in add out mov test add pusha push repnz (bad) (bad) jmp mov (bad) pop in pop mov (bad) mull popf inc mov xchg insb repnz or add ficompl lods xor call or push loop (bad) mov fsubs cli ret inc orb (bad) sub fwait daa xor fisubrl incl and test xor sub jp inc or push jnp (bad) ljmp addr16 and add pop test push mov push (bad) (bad) decl add push rcll fimul in push es mov (bad) out jne push cs loop inc dec fldl jbe loope rolb outsl inc fcoml push xor cmp mov cmpsl in sub call mov pop lret bound adc pop jb dec mov cltd insb push loope int insl push pop cmp (bad) (bad) call push pop aam sbb mov jbe jae les sti jmp push repnz mov cli (bad) ffreep int3 das scas sub jno mov rol cmpsb icebp adc (bad) (bad) call (bad) sub push add jge sub inc insb dec movsb jae rcl dec test (bad) incl mov jne lcall mov (bad) mov jge or cmp adc xor call mov push (bad) lock add pop adc lahf jmp xchg addr16 mov mov push xchg lret mov cmpsb push xchg clc adc dec cmp sub mov add sbb adc ja rorb repnz sbb sti imul call xchg push mov cmp scas (bad) push adc cwtl and notb xchg pop enter inc jo cmp (bad) lcall loopne in (bad) fsubs lret xor sbb rorl lcall les test jb add addl ja aam xchg mov (bad) mov (bad) addr16 (bad) and inc daa xor mov (bad) decl xchg gs inc mov add daa jmp aam (bad) ljmp cli push pop rorl add (bad) sbb cs lods mov arpl decl lock xor mov mov clc out lahf pushf lahf test dec mov (bad) jmp lock (bad) mov xchg xchg lret aas push movsl dec mov sbb outsl adcb repnz lods cltd jecxz mov (bad) lcall lcall xchg loope (bad) jecxz imul sbb (bad) (bad) (bad) call mov xchg pop xor pop jo mov insb sbb pop in dec (bad) lods push and (bad) dec pusha jnp sbb stos adc mov aas rorb jne jp test pushl (bad) lahf add push pop stos push mov (bad) mov sbb arpl pop dec dec mov int3 imul (bad) pop inc imul aas inc bound cs test fnstcw push inc cmpsl aas outsl jmp in dec adc push inc out mov mov sub adc lods mov pushl jb inc or mov dec scas and lock add mov test popa mov cld negl mov fwait pop dec and and adc jnp or aas bound mov push or mov ljmp mov rcll jnp xchg jmp adc ds xchg mov jns data16 mov and dec (bad) (bad) (bad) (bad) jmp xchg test subl (bad) mov dec inc imul mov pop outsb xor (bad) (bad) incl or dec xchg jb lea push test sub (bad) loope push pop inc sbb fnsave dec inc movsb lock mov in lea pop mov scas pushl pop pop pusha lcall dec or add lcall lods je add into dec sub push flds je imul fcmovnb jmp lock mov fs cmp (bad) (bad) inc mov lahf mov mov addr16 cmp mov xchg xchg sub sub insl pop stos inc ds (bad) (bad) decl mov mov outsl and es sbb cmp mov (bad) jmp or push mov push in rol mov rorl xchg xchg (bad) popa lret sbb lds cmp jmp mov and scas (bad) push mov xchg xlat test jecxz into stos push mov loopne inc orl scas (bad) out cltd lods xor push jecxz jl sbb je inc sbb (bad) ljmp fisubr xchg (bad) mov (bad) mov jno repz insl pop addr16 mov out add adc cld (bad) (bad) jg mov cmpsl cmp xor iret jns pop xchg cmpsb sbb sub ja (bad) adc pop add idivl jge sub mov push add cltd in (bad) jg loop out mov repnz or in xchg jnp inc xor es lock mov out jbe test xorb insb jg jg mov pushf fs push out pop mov push or ja xor mov pop cmp ss mov ficomp insl or inc cmp (bad) (bad) (bad) (bad) fdivs lahf mov outsb jge daa daa iret pop dec add rcl aas mov and mov js clc xchg inc fldl test aad (bad) lcall (bad) in cltd ficoml push arpl xchg int push push setbe add stc inc xlat (bad) (bad) call or ret ja jl outsl aam clc xor sub add push (bad) add (bad) (bad) jg push fstps ja out ret sbb (bad) fxch xchg jmp inc (bad) ljmp cmp pop sbb mov enter dec jecxz mov pop aaa imul ss jb dec fcoml stc mov and pop jne push das adc je mov or jecxz daa sub js inc pop dec push mov mov xchg jecxz push (bad) loope icebp addr16 lret inc test (bad) pushl fdivrl push lcall popaw xor pop dec (bad) (bad) out ss add mov out cltd nop enter lret add (bad) jmp cmc aam test (bad) stos call aas xor (bad) (bad) (bad) mov out daa popf inc aam push jecxz add popf test incl ja outsl sbb push ljmp (bad) (bad) jg xor lahf and notb in pop scas push in pop mov (bad) das clc (bad) pushl push dec in inc je inc inc stos dec testl ja cwtl xchg mov (bad) lds adc mov mov addr16 (bad) (bad) incl jl (bad) adc and fstpl std mov cwtl jp (bad) (bad) (bad) jmp inc mov jne ja jle inc pop out mov jg test xchg incl incl xchg jns divb inc sub lods adc adc ljmp cmp jp dec xchg xlat fadds push mov scas mov inc notb es jmp add je adc (bad) jg and ljmp or and xchg (bad) out add sbb fsts call lock scas aad (bad) mov xchg inc (bad) add lods imull dec jg jbe lods (bad) call or rcrl inc test sti add dec push push leave sbb pop fdivl mov or sahf mov jno adc das imul mov (bad) (bad) lcall push xor and lea xchg (bad) sti jl mov aam or dec pusha mov push or lds call pop mov jnp jg xlat ja test push dec jno push lods ss push bound loope cs mov and into lret xchg pop es push clc (bad) incl sar (bad) mov xor fcomp nop int iret in (bad) lcall out js bound pop insb loopne iret cmp and test sarb arpl arpl adc das outsb mov dec sbb aam mov call or xor inc (bad) (bad) call pusha cwtl sbb into add pop in add fprem dec add pop pusha add insb mov xor and sbb cmp add fcomps adc xchg jbe ss (bad) pushl rdpmc mov jb mov pop daa stos sub incb and (bad) (bad) inc es out sbb pop pop adc or pushf add push loopne (bad) push jb mov lods (bad) pushl out inc ds mov in scas add mov jl stos adc pop sbb (bad) ljmp lods ljmp pop in imull inc (bad) sub push and cmpsb stc dec mov pop std (bad) fist sub arpl mov ret push arpl fidivl cmpsl icebp call add stc (bad) ret stos mov jg push icebp call sub mov lcall xor xor (bad) shrl or sbb pop push push (bad) (bad) (bad) call data16 cmp in add scas xlat addr16 sub sbb fdivrs (bad) mov pop (bad) imull lret xlat (bad) mov scas mov push int3 and or push inc inc jmp inc movsl int mov loopne (bad) mov ret dec add dec push in push sub sti ret das mov (bad) (bad) jg loop loopne icebp inc inc pusha mov mov fs aad mov dec cmovne push (bad) mov pop pop sbb test out addr16 cwtl scas add scas in (bad) cmpsl (bad) jbe push sar (bad) (bad) inc xor pop xchg xor xor push adc ss cwtl jle scas pop mov mov push aaa cli (bad) (bad) (bad) fisubr push adc sahf cmc addr16 add cmpsb popa je out add lret jmp adc dec dec mov out and jg (bad) (bad) (bad) out dec mov pop xor clc xor gs pop mov sbb (bad) incl aas push or sbb add jecxz es push push fisttp ror pop push xchg (bad) decl mov movsb xchg xchg mov xchg ds jg add das arpl (bad) (bad) jmp (bad) fdivp std inc pop push dec add add mov sub sbb xchg mov in and in (bad) (bad) decl stc xchg mov or (bad) xor in add push inc dec cmp push out out ss inc jae pop (bad) dec stos add xor fsub or incl jecxz mov inc and pop add cmp ficoml push fs mov call inc mov out (bad) jmp cld pusha mov imull leave xor and cli mov call out lock lods pop push cmc (bad) popa mov or inc sbb aad icebp inc xchg lcall jne xchg dec pop pop hlt (bad) incl sbb std cmp fsubrl fsubrl lods jg push dec fimull sub sbb mov xchg inc sbb outsb scas inc sbb (bad) (bad) (bad) fisubr das xchg xlat xor jl (bad) jbe (bad) mov les add dec jne sbb (bad) cli cld ret roll mov cmp push adc shrb bound lcall repz lock insl and mov sub cmp (bad) (bad) incl jmp test ljmp shrb mov mov roll or xchg inc sub (bad) jns (bad) (bad) (bad) cmp cmc jge mov pusha jae push ds out arpl push lret mov (bad) (bad) call enter ja jnp addr16 mov xchg lret cltd push sti cmpsl adc jg jmp call or mov push aas std mov ja aad jns (bad) (bad) (bad) (bad) jns mov jp daa push pop jecxz cltd mov lea fmuls xor (bad) es (bad) (bad) decl lock or mov pop add ja sbb out addl inc (bad) (bad) (bad) pushl mov mov xchg sahf push test std jo sub (bad) iret int3 jle inc test push pop cmp insb jl clc xchg pop sar (bad) jmp lods loop push mov dec fdivrl mull ja add ret rolb bound jbe out xchg adc into std jp add mov jp (bad) (bad) (bad) lcall (bad) fsubs data16 (bad) xor add cmp cltd push add sub adc aad gs xor mov cmpsb jecxz stos or sub (bad) fcomip pushl sbb fwait adc cmp sub icebp movsl sbb push adc lcall dec dec push adc sbb mov icebp xchg (bad) (bad) (bad) inc cli mov loopne pop je pop sbb lret out outsb jle jnp je mov push aam hlt lock xchg mov lcall pop dec mov cmp pop adc (bad) (bad) (bad) cmp pushf (bad) jl aas scas pop push popa cmc mov (bad) (bad) mov sbb pop push sbb gs (bad) (bad) (bad) jmp aas gs or popa outsl aaa movsb or cmpsl xchg push xchg mov (bad) test jl (bad) (bad) (bad) (bad) in dec in aas loop add in lods das mov je int3 push jae sbb adc push add (bad) jmp stc lahf pop mov inc push mov inc pmullw cmp mov cmp push push mov insb lahf stos (bad) (bad) (bad) inc jnp fimull repz (bad) mov cwtl jge hlt into orl sbb (bad) fisttp sbb fwait ljmp bnd lcall dec loope push or xor add std cli (bad) (bad) (bad) pushl jmp repnz sbb (bad) into push int mov adc fsts popa mov and xchg sbb xchg subl cs out adc aaa (bad) lea inc dec xor jnp aaa or scas adc push leave mov incl push loop flds movsl mov scas mov mov cld es pop iret imul decl clc lock shlb adc dec jl data16 ja lods test in sar decl sbb rcrb inc mov cmp xchg das in call and jmp sbb das mov cld cmp lcall cli (bad) call sbb mov hlt psubw aam xlat sbb inc adc cmp incl or pop xorb xchg cmp insb cs pop (bad) cmp sbb mov outsl fidivrl fisubrl cmpsb xor bound mov push jae pop imul pop (bad) es sbb jle dec lcall pslld pop push jp call popf mov out mov inc lret add ds lcall and adc movsl xorl cmc add frstor add (bad) (bad) (bad) dec lds jle or jne cmp hlt push adc adc or mov pop hlt cs fstl pop std pop xor rorb std push loopne inc lods (bad) add jno lds ljmp cmp add cmp adc cli lcall jecxz gs inc xor aaa and or cli aas mov (bad) je adc enter cmp call loopne cmp rcrl jno sbb mov mov pop into scas mov or lret xchg movsl repz out mov add (bad) (bad) call xor inc out fwait hlt dec dec push pop enter movsl and imul lock insl ljmp test (bad) jp je cmp fisttpll lcall loope xor pusha cmp into push sub (bad) call in add movsb pop pop call fwait (bad) pop ss repnz sbb mov enter inc inc iret ror cmp ds sbb and mov xor (bad) (bad) (bad) ljmp fcompl loop or imul (bad) loopne jo shrl ret inc mov (bad) (bad) (bad) (bad) jp ljmp bnd mov or pop push xchg sub inc sti or xor pop leave test rorl (bad) sbb (bad) (bad) decl lods xchg imull cli jne inc and pushf sub mov rorb out add ja lret test adc lock sub std (bad) (bad) lcall push sub mov das in inc jge call iret imul push (bad) jg inc sahf scas popf dec (bad) push add hlt pushf or jg das decl add push gs or push loope and or lret movsl rcrl mov fwait test or ljmp and jno aam push mov jb xor (bad) (bad) (bad) (bad) mov insl iret or add jns arpl push dec shrb inc add fsubs jmp and fisubl setp sbb cmp pop aam mov aad (bad) aaa test fild jl or rorb data16 je push (bad) (bad) pushl call inc jmp pop jns (bad) loopne inc lea (bad) mov fs dec push imul sahf sbb fdivrp sbb push out (bad) and push (bad) ljmp out push cmc les jl jne (bad) movsl pop nop adc (bad) (bad) fs rolb push stos cld cmp loopne adc or xor (bad) (bad) (bad) jmp in and decl cmp xor push pop inc outsl out adc fistpll mov call and or in rcr mov sbb or add popa cmp sarl (bad) (bad) out cli inc out inc xchg (bad) xlat in push inc out test das inc pushf fstpt mov fild mov xchg lds mov lcall loopne jmp test fchs push sub dec cwtl mov js cmp push lods (bad) (bad) (bad) jmp cli xor fmuls in jle pushf adc lahf xchg mov xchg or (bad) call xchg sub pop inc mov dec xchg stos movsb cmp add (bad) (bad) mov repz push xchg push loope sti loop sti and (bad) (bad) decl in xor clc roll mov hlt jg pop xchg lock fs (bad) (bad) jns or std xor pop pop mov xlat push fnstcw dec (bad) aam scas xchg shl mov cmc std xchg pop mov test out push xchg in jl out dec pop aaa fnop cmp mov cli lock shrb jp or pop rorl sub lcall scas and icebp sub das and sti sbb push sbb xchg les (bad) out add adc push and sar (bad) (bad) call sbb cwtl push pop stos jae mov and mov call push enter ljmp and lock jae and jno (bad) ljmp cmp int3 xchg popf out out lock bound cltd das sbb mov fild xchg adc into in mov (bad) jnp sar mov mov jae add int out cmc mov (bad) inc popa mov fcomps stos into mov shrl icebp lcall ficom mov push scas jb movsb jnp xlat (bad) adcb in pop fimull iret nop jnp int lret mov and sbb pusha sbb (bad) jle xchg stos mov fisttpll jge xchg adc repz movsb gs loop adc mov dec (bad) repnz mov push divl mov pop adc test push xchg mov jae outsb or xor (bad) jg push aaa mov adcb mov fdivrs jno mov push int or dec loope test (bad) test icebp push sub adc gs ljmp sub push in int not fidiv fs dec pop int3 mov es pop mov (bad) (bad) dec iret clc and push (bad) or les cmpsl sti pop int3 (bad) jb push cld xor movsb push lret daa sub xor int3 push (bad) (bad) (bad) mov pop mov lret and add pop xorl enter call inc push imul or shr adc add call fwait adc movsb (bad) call cs mov insb cli cmp lcall or test mov mov bound ret test into mov cltd mov (bad) mov lock lcall sub cltd cltd pop and lock add push xor ret xchg dec add adc fildll gs sub int3 (bad) (bad) call xor out daa pusha sti ja jp je fdivs es (bad) (bad) incl mov subl hlt std nop cli mov insl popf fstps pop fidivl inc cld push ss or pop jo or outsl adc mov rcl cs mov (bad) (bad) jmp rorl inc mov out jo jb push mov inc or (bad) jmp push xchg data16 sub es xor (bad) push sub sahf nop js add jmp lret cmp dec dec dec sub je inc dec call hlt pop (bad) mov es mov lds and (bad) (bad) (bad) ljmp xorb aaa mov xor or push out pop and dec xor icebp (bad) decl and push sbb or pop cmp out or jl pop (bad) in and and icebp (bad) (bad) (bad) (bad) cmp xchg mov movsl push and dec es fsubrl sub dec aam cmp loope (bad) jmp xchg insl rcrw adc sti cmp add call inc dec xchg sbb xor xor in (bad) (bad) decl (bad) push adc inc push cli xchg in adc mov ss inc test and or jbe mul lret jo (bad) fcomip (bad) fist (bad) pop lock fistp rorl jae addl mov (bad) (bad) call lock push insb daa add jns push enter sub in add xchg (bad) (bad) inc xor jge mov bound sarl ljmp xchg ret fs (bad) call es repz in mov sti inc pop xchg sbb dec push cmc call xor push mov mov (bad) (bad) (bad) mov test ret roll popf sbb (bad) mov xor adc call cld inc test leave ds inc incb cmp jge in pop sub push clc mov loopne adc and ret pushl or repz (bad) jmp les rol mov add outsb mov test sar sbb movsb neg jp jbe xchg and test push popf lock stos (bad) (bad) (bad) (bad) fistl mov mov pushf inc inc sbb inc mov imul repnz (bad) ljmp add xchg fwait xor mov pop jbe cmc add jl push aad push dec das leave cli (bad) (bad) lcall shr mov aam ret add xchg dec xchg incl (bad) je addr16 mov repnz jnp mov pop aad mov jo xor (bad) into jno jbe add fwait add (bad) (bad) jg jbe loop xchg mov addl leave inc fisub incl push add pop mov (bad) jp mov mov out mov cwtl lret ds icebp rol jo stos mov (bad) (bad) decl lcall sti xor insl inc add in mov lcall adc fisttp imul mov jmp repnz mov mov add out push stos sub mov in mov sbb mov sub js cmp mov repnz (bad) mov enter push add mov lahf pop (bad) icebp sbb and out jp les dec cmp (bad) fistl insb xchg int ja (bad) (bad) call shr mov mov pop xchg add fmul pop arpl jae or (bad) lcall fcompl pop addr16 inc stos cmp fisub mov test les in dec inc ror lcall jg in mov negl ja xchg adc jg call loopne arpl pusha cmpsl (bad) ss lods int dec frstor pushf sar add (bad) (bad) (bad) aas mov adc jmp incl decl pop imul inc bound xor in data16 scas push shrb mov xor stos sbb call rcll imul in pop insl ljmp (bad) jg and fbld subl sbb jmp push daa cli push xchg (bad) or dec or dec jecxz (bad) decl int3 xchg ljmp xchg dec popf out ljmp dec movsb or mov dec mov xor inc xor add (bad) (bad) decl pop push mov and outsl daa rcrb test add popf sub adc or das clc sbb outsb cmp xchg dec and (bad) mov test mov push mov out sbb insb fsubl jle push aam and mov (bad) (bad) mov ljmp out cmp aam push mov les gs arpl add adc std call inc mov adc ficompl outsb push (bad) (bad) (bad) jg rorb xchg or lcall (bad) cmc cmpsb push xchg flds mov sarl push (bad) (bad) (bad) incl lods in jnp adc mov movhps out xorb push in sbb leave jp incl cld (bad) mov insb cmp pop sub (bad) push lods jg stos fdivs fs jg cmpsb aad add xchg call mov add pop shrl (bad) incl lret test test pushf fimull icebp or cld (bad) (bad) jmp inc pop shlb dec sub cmpsl jbe xchg imul in movsb outsb push into xchg xor aad (bad) ljmp or sti insb pop rcll push sbb xchg sub call loopne (bad) stos adc sub mov lret cmp shll cli inc fmull cmpl clc das xor mov inc movsl sbb push cmpsl (bad) mov mov cmc add fdivrl cmpsb insb jg (bad) lcall loopne inc sahf aad lcall fdiv push sarb lea mov mov push inc push enter aaa pop mov sbb cmp push adc xor daa (bad) xchg mov gs (bad) (bad) (bad) jmp inc cmp sbb mov arpl imul insb ja inc fistpll outsl and push inc cmp data16 out iret (bad) (bad) (bad) ljmp jne arpl lods gs das add movsb int arpl rcrb fwait lahf popf int xchg pushl orl cmp jl jnp mov add jmp add cmp nop/reserved ret (bad) (bad) mov cs mov and arpl cwtl mov testb call movsl decb jnp inc dec dec shll sbb int push cmp lret aaa pop sahf mov in (bad) decl jnp jnp stc xchg mov ja stc mov add stos stos js arpl or lock jae xor push jl ljmp clc lcall repz push mov or sub das push cmc push lahf (bad) call std mov add mov mov addb (bad) (bad) ljmp enter sti es xchg out push aam push push add and mov movsl stos test (bad) (bad) (bad) decl xchg fstl xchg cwtl in and sti je push mov aas adc push pop andl sar adc shrl xchg mov (bad) call pop dec jb call sub cmpl sub call or mov arpl and push (bad) incl xor and shll (bad) (bad) call add and sti andb mov imul call leave dec mov outsb movb cmp imul test call or cwtl outsl xchg pop xchg fildl jno xor xor stos (bad) push pushf int ja sbb dec fcmovu into jle push mov (bad) mov into or and out das mov lahf pusha (bad) jmp in jae inc dec (bad) lcall aas adc jg call (bad) jno nop adc test gs pop ljmp dec cld icebp (bad) jmp andl xor or mov pop scas cld add jo leave addr16 and cld je xor or sub add lcall fisub or xchg and xchg popf lret add dec cwtl subl decl push mov xchg (bad) insl mov push stc jo mov inc cld sub loop es (bad) lcall inc ficoml fcmovnu aad inc mov ljmp ret (bad) jg iret les xor push mov mov pop xchg sub cltd xor sti inc adc dec xchg jo aaa outsb jnp mov bound ss cmpsb movsl or daa or jecxz (bad) incl outsl xor push xor icebp rcr hlt adc cwtl push xor inc movsl loopne std add sub out mov xchg outsb adc (bad) (bad) (bad) call negl in xor mov push std iret push fmull insl vandps mov or add jge cmp push cld mov pop rol xor mov sub sarb cmc (bad) (bad) jmp cmpsl add stc mov lods mov push jmp inc fbstp subl adc mull push cmpsb (bad) in mov mov popa popa idiv inc fsub jg fs inc psubsw ljmp (bad) call (bad) pop sub ljmp cmp or cld out ret shll pop movsb aad mov jbe dec into or jg and add and inc xchg (bad) fnop in sbb or std fmull gs adc push call xchg sarb push mov std xor hlt cmp stos out pop lock (bad) ds outsl pop lea dec aad jecxz xchg ja jnp imul push enter mov int xor dec and adc push vmread jbe cmp dec popf sbb (bad) (bad) lcall lret add lret jo xor jge sbb jp cld (bad) (bad) mov jo hlt jge mov inc cmp arpl in dec roll adc ds jg xor xchg mov jnp add fsubs mov add in mov ror sub xchg lock dec push (bad) mov jecxz mov sbb (bad) decl incl mov arpl cld fwait cmp cmp cli arpl mov cli or mov sbb fstpt js pop pop (bad) push jl ljmp out cmc icebp xchg jae xor out cmc mov test push les (bad) (bad) lcall mov mov and dec push nop mov jns lods add lret in lods popf pop scas dec cltd call mov ficoml lret lret cwtl jmp out ds or add cwtl clc enter (bad) cmp mov imull imul (bad) (bad) fstps test popa lods inc or cmp rcrb inc daa std cltd loopne (bad) (bad) jae pop cmc ljmp and inc push pop sub inc pop jnp adc das mov push in jnp mov adc add movl dec push outsl out outsb jo jp push jmp imul and mov cmp inc ljmp rcll pop mov (bad) (bad) jmp xor mov jno push mov adc ret jp mov aad lds dec ljmp xchg mov incb js dec push cmp (bad) mov scas insb jge dec std std test push (bad) (bad) (bad) mov sbb sub dec mov sti int inc or (bad) lock mov loopne and ljmp xor fmulp push cmpb shlb (bad) mov imul scas xchg push jnp xor (bad) mov fistpll sub (bad) fdivs pop orb out pop push popa dec sub jg lcall cld fisubrl jecxz sahf sbb ss or sub jecxz clc (bad) (bad) pushl mov jmp xchg jns xor mov leave ljmp inc xchg mov lock xchg addr16 daa test (bad) decl jb sbb das cmp insb dec insb insl add mov (bad) ljmp or mov dec or aam bound sbb scas mov (bad) (bad) cli inc or or (bad) jbe es bound sbb inc lea adc fbld fldenv sbb mov imull mov (bad) fildll pusha mov leave jae mov push stos mov sbb pop leave jecxz cs frstor (bad) jg jg dec sbb push dec call (bad) (bad) movsl pop sub popa lock dec lcall add xorb incl inc jmp cmpb gs pop lret nop (bad) xchg jae std fnstcw (bad) dec and sbb sub in jae add push out add add lcall (bad) (bad) (bad) jmp pop fmull (bad) call in addr16 add adc push push xor mov pop hlt (bad) (bad) pushl push test pop loopne pop push or push pushf cmp repnz addr16 (bad) (bad) lcall lea stos and pop sub out add aam push pop adc xchg sub adc ljmp jbe jg push and lahf mov aaa cmc insl jl or pop xor scas out (bad) (bad) fisttp scas cmp xor in xor xor jg jmp adc in add xchg imul jbe sub daa loop (bad) (bad) jmp jb lret xchg xchg (bad) lods movsb ret sbb mov pop xor and mov and shrb lds ja cli ja xor out mov clc out lcall data16 test (bad) mov mov cli dec sub jg cld out add out fsubs push xchg sahf iret pusha mov pop jl stos adc lds icebp stos mov jno mov push mov mov loope (bad) ljmp pushf push inc mov das push stos stos mov inc and or icebp lret add pop jb (bad) (bad) (bad) (bad) ljmp xor lret lods add lea (bad) inc dec and inc scas loope and jg hlt (bad) mov out dec shll (bad) (bad) cmp mov in adc ljmp cmp mov adc es ja (bad) lcall (bad) pushf xchg insl inc mov jns inc (bad) aaa sbb fsts (bad) in je (bad) jg jmp aad dec mov js fldenv cltd fdivl mov add rorb push iret (bad) (bad) (bad) (bad) (bad) (bad) xchg int3 pop cmp pop add insl jae adc or dec aaa add pop aad loope repz push in (bad) (bad) (bad) push xor xchg (bad) (bad) in das push fxch icebp test sbb lods loop pop rclb ljmp (bad) decl push das aas jne cwtl je push std jno stos lock mov xor or push jbe incl loop cmp sahf xchg jmp cli push cs push jg pop test sbb mov push lret mov sub mov mov (bad) (bad) (bad) call sbbb push jmp (bad) in xchg push mov adc jns cld (bad) call adc mov sarb mov lret push add cld es mov add shrl (bad) (bad) incl cld dec stc pop inc bound adc inc imul (bad) hlt lock data16 jecxz dec punpckhbw in inc jmp fldl inc jns aad dec jo (bad) (bad) ljmp xchg les imul xchg sub cli pop ja movsl clc inc pop push gs fs (bad) (bad) jmp test out xchg or fwait and stc pushf dec bound inc mov (bad) decl sbb jmp icebp or insl cmpsl pop push push lods lods popf (bad) (bad) (bad) push inc push (bad) jmp mov xor sbb dec inc xchg notl imul dec xor push (bad) (bad) (bad) jmp adc divb inc xchg jg xor mov cmc inc iret mov (bad) (bad) decl cwtl jbe sbb bound dec dec push sti cmp fldt lock jb ret cmp and decl dec rolb test and popa inc test (bad) (bad) (bad) incl fmulp outsb cmp mov test mov push pop fcoml pop cmp sub aaa sar (bad) call xor addr16 pop fidiv cld popa daa out bound xchg xchg mov cld mov repz (bad) (bad) pushl aas push out xlat xchg dec add jl sbb jne in adc push dec in (bad) lods imul adc sbb mov mov (bad) incl mov ja jo and icebp sub push and lds (bad) call mov jmp cmp xlat test mov sub mov pusha outsb jmp std (bad) cmpsb call rcll hlt dec lods sar aaa scas movsb (bad) decl (bad) repnz xor inc test aam andl cmp or cwtl mov incl or mov cmp ret mov loop jmp sub icebp xchg pushf mov rcrb into cmp sbb or xchg sbb add insb jo sub lahf insl ljmp (bad) outsl xchg in mov insl cmp mov and call sahf imul out pop jl cmp es cmp test ret mov xchg xor movd je test scas pop test dec int3 test fistp push aam decl lock test idivl mov loopne push enter mov fldt mov (bad) sub xor dec test rcrl in push cmpb adc push (bad) ss push inc sarb or or pusha adc pop fsubr push aaa loop jp sahf movsb (bad) (bad) (bad) (bad) cmp jne fwait xchg push stos (bad) mov cmpsb (bad) lret pop out mov scas mov pop hlt in jo sbb call (bad) (bad) fild insb jecxz push adcl push insl in decl in push xor (bad) cli add scas in repz in xchg lahf push test xor test mov jne dec stos mov (bad) (bad) ljmp or gs out jne fsubl test adc int3 pop push and push je cmp xchg adc es (bad) (bad) (bad) call dec std mov pop aas xor push clc call pop add idivl xlat jg add call cmp scas fistl (bad) mov jns movsb xchg jb xor push jge repz xor js push push (bad) (bad) jmp pop jle pop imul dec fstpl push loop,pn into push (bad) jg xchg nop and and xchg xor xabort stos (bad) (bad) mov fiaddl lahf fwait cmp loop shrl leave inc jb (bad) xor pop dec pop ljmp and sub cmp (bad) fild adc jge call clc jle cmp (bad) mov mov cli adc sub cmpsb inc roll or (bad) (bad) (bad) decl push push aam pop push scas pop ret aaa pop cmp icebp mov mov (bad) xchg movsb adc lock mov cwtl mov jns rcl fcomip (bad) call jg xor mov push pushl add enter (bad) incl sar ret inc stc add xchg arpl jno add (bad) jmp clc cli xor cmp dec xbegin pop xchg sub inc test (bad) mov add insb insb stos (bad) mov ljmp ljmp jge movl xchg addb lds inc mov (bad) das sbb rorb add ss dec into enter cmp (bad) lcall ja jb ljmp shrl repz pushl fsubrl mov lahf fnstenv add repz mov out sub or cld (bad) decl pop out cmp mov insb data16 mov pop fisttpll ljmp xlat push xor and adc push mov lret (bad) pushl xchg lret add push mov or pop movsb rcrl (bad) mov sbb iret lods inc out shrl add mov (bad) (bad) incl test stos fiaddl lahf sub sbbb addr16 lods js,pn je stc sbb pop inc push ljmp test mov jl pop int (bad) (bad) (bad) call cmpsl ret cltd in cld pop mov cmp stos in or xor mov sub ljmp add xchg mov (bad) (bad) incl cmpsl inc pop test call test cmp rcrb adc mov daa lods lcall inc push mov adc add mov scas (bad) jg (bad) adc or dec xor insb dec stc adc mulb xchg movsb lods (bad) jmp push insl or inc mov mov ljmp jno into movsb test adc inc jp rcr xlat push xorps add xor xor push (bad) jg test int3 pusha (bad) mov adc lock (bad) mov lds and and sbb push xchg clc ljmp xchg inc imul ljmp cmp push jmp movsb popa lods cmp popa inc cmpsl call and inc mov fxch imul mov and inc dec jmp pop sbb aad (bad) xchg jmp push (bad) es popf test pop (bad) ljmp test fbld repnz add (bad) jg and addr16 pop out xchg mov add ds lcall push rcl std divl dec add mov adc or jo xchg enter adc sbb arpl sub lods leave xchg (bad) (bad) lcall inc aas int3 rclb mov pop addr16 das sbb into cld lcall fidiv pop shrb ret mov (bad) lret incb xor add lcall jle mov mov pop in mov (bad) mov jae das stos lock adc enter sahf and ja test xchg in and cli jg mov (bad) jmp imul ss ja ljmp fild pop jbe fs push mov lret cmp xchg cld sbb mov or ljmp lods pop jl pusha push mov outsl scas push stos jmp adc aam hlt das and in adc cwtl xor int pusha aad icebp decl adc pop fiadd xchg mov (bad) (bad) (bad) (bad) jle mov popf and or bound sbbb orl insl and js sub sub sti push repnz inc loop ljmp icebp sbb mov dec dec test cli fscale push ja add or leave dec sarb imul sub cmp dec cmp (bad) jmp ja ficomp jne dec push test and xor mov js sub call xchg js inc lret bound shrb mov addr16 (bad) sar pop adc jmp (bad) (bad) pushl rcll jne sbb dec into shr data16 (bad) rclb push in daa sub (bad) pushl cltd mov jl mull jge,pt mov mov jmp sbb mov leave cs push dec jle (bad) cmp inc (bad) pushl mov pop shll (bad) in mov mov and lret dec jo stos (bad) pushl inc cld test jne xor enter mov (bad) (bad) call or shll xor repz daa insl mov js outsb push mov in pop sub pusha fdivrl jb mov fistpl in mov fisttp les rorl flds (bad) (bad) (bad) out ljmp sbbl repz lods add sub fnop mov (bad) (bad) (bad) decl sub ja mov ret pushf fldl notb in in fdivrp pop test je adc jge inc dec popf and in xor (bad) (bad) lcall xchg mov rcrb jp mov (bad) lret jg add jle iret loope adc dec push nop mov out mov sbb adc push sbb in jo add sub fsubl call add imul dec arpl (bad) cltd dec aam test fild repnz push (bad) (bad) fbld inc push hlt xchg ficoml (bad) sbb int adc mov ss push andl repnz (bad) incl subl sbb ret inc movsb in mov stos cmp ljmp clc adc (bad) (bad) fwait popa repnz (bad) (bad) (bad) jmp mov sbb mov jno les test inc test ljmp (bad) hlt lcall inc cli jnp shrl inc jmp or push (bad) lcall les (bad) mov jge push stc fs or incl sbb lret jmp jne fsubrs add sub imul cli aas sbb leave in xchg (bad) das cli add fcmovnb (bad) (bad) jae and adc (bad) (bad) ljmp push mov cmpsb or xchg mov cmp or shr jle cmp (bad) iret (bad) (bad) (bad) (bad) cmp xlat sub fdivrl (bad) xchg nop movsb mov rorl lods mov outsb push pushf sbb jl arpl sbb lahf es pop pushf jo jg fwait insb sub flds les pop inc mov fs xor pop (bad) (bad) (bad) sub mov mov pop cmpxchg pop sub movsb mov and xchg call incl push aaa lret aas test movsl xor and or (bad) fist jp xchg jecxz sub (bad) sub or sbb out sub outsb sti test pop in fistpl xor cld outsl mov addr16 sbb sbb dec jle xorb in lock or setae outsl mov pushf (bad) call xor mov or sbb xor xchg hlt les in add clc lret jae lcall movsb inc mov inc sti or cs int3 (bad) dec and and rclb shlb cld and adc jg lds sbb or mov xchg push mov mov push (bad) lea sbb lods dec cmp (bad) xchg cmp (bad) incl cmc adc xor xor pop or xchg sub (bad) decl psrld jb dec movsb lret cld sti movl cmp xor pop fsts outsb push dec push fmul imul (bad) (bad) stc push fwait add mov nop ljmp push sahf in jge std mov lods push mov inc cmp cld (bad) (bad) ljmp rep cli xor add push dec dec dec push mov pop outsl (bad) jp test (bad) jg push inc push adc std sub add (bad) lcall xchg into or clc cli pop jmp cld mov in adc shlb (bad) jg lock sbb cld cmp mov cli cmp lahf jo les mov cmpsl sbb xchg jl jl clc sub jmp jne mov aam cltd or mov fstl or ja mov xor mov test cs ret mov cli shr add pop or pushl pop adc lods mov xchg lahf (bad) mov cmc pop jg test daa dec test xor ljmp add shr mov lret (bad) fimul adc leave sahf movsb jp loop loop incl mov int loopne mov and jle scas mov stos das sahf push (bad) (bad) (bad) decl mov fs inc out ljmp int popa and imul xchg lea repz (bad) (bad) pushl xor push adc faddp inc fildll mov test jl and mov (bad) (bad) (bad) out stc outsb pop aaa fs lahf dec pusha test xor push pop shl iret push mov mov push adcl adc lock mov pop mov push and repz push mov incl ror cltd aaa aas scas stc fstpl lods push sbb sub jae jbe (bad) (bad) ljmp pop es js sub sarl lcall xchg (bad) incl in out jnp (bad) and inc or out (bad) int xor (bad) divb cmpsb pop je in or (bad) jg pushf gs sbb inc push addl (bad) (bad) (bad) lcall jp aaa mov ja mov xlat pop and push es repz pop sahf test cli (bad) call sub push xchg inc adc rcll stc data16 popa push lret (bad) incl push ja mov jne bound out incb push (bad) xor arpl je lea insb jge nop mov cmpl cwtl es and lods (bad) mov sub mov or mov xor mov adc je aas or add add fwait in mov (bad) mov jecxz jmp fldt push jg sbb xchg sub imul cmc (bad) jmp test mov jg mov loopne mov mov ljmp (bad) (bad) mov jecxz rol jns cwtl jnp loop (bad) jg hlt push mov sub cmp xor pop (bad) clc add (bad) lcall popa cld xchg faddl sbb sub cld inc add aaa jge sbb and cmpsb mov mov sti pop cs jg jge add pop mov das xchg inc cs int stos cwtl std cld (bad) call push push push sub pop jge test jae push mov mov jg or flds mov out addb mov dec mov or les (bad) test sbb pop (bad) cwtl (bad) push call popa in pop xor cmp add cmp mov sbb dec jle in jne inc ret mov icebp call mov cmp xchg flds and xlat mov add mov pop das (bad) fistp cli (bad) jmp into cwtl sbb add adc test xor cmp (bad) pushl mov sbb mov and mov adc pop pop sub jno cmpb push mov sbb sub addl inc aam ljmp (bad) lcall (bad) in leave mov ss inc scas andl jns sub xchg jno (bad) (bad) cmp mov test cmp push in (bad) (bad) (bad) inc out in aad push movl iret push jl incb arpl (bad) pop gs (bad) (bad) ljmp pop sti sbb mov sub popf cmp dec sti test mov sbb pop and push lods js inc (bad) (bad) (bad) ljmp inc jg call or dec cli mov repz movsl inc and (bad) fildl inc and jmp ret or ljmp std mov xchg (bad) mov (bad) xor or jns sub (bad) (bad) (bad) lcall stc and pop xchg jno je lds xchg pop xor jl jmp (bad) call mov outsl inc mov xor scas fiaddl jecxz cmp add jg adc jl xchg sbb sbb loope jg (bad) (bad) decl arpl push fs ljmp xchg dec fcomi jg sarb inc xor jg inc dec ret ja insb pop lret push dec adc mov decl int or add inc push or (bad) decl push leave ror das sbbl lahf xchg clc xor popf add ficomp mov mov xor sbb jg fs mov jg sbb inc pop lods push or test pop and ljmp jmp xor mov cli push lcall aam push jo mov ja les fstps xchg push inc outsb mov dec (bad) ret decb push mov mov xchg mov (bad) jg sbb das (bad) xlat leave (bad) push mov cmc pop jne in jecxz leave mov (bad) (bad) incl lock sbb or imul cmpl or (bad) mov sbb (bad) (bad) (bad) lcall adc stos out out xchg loop in daa inc sub in (bad) mov jmp shr (bad) js movsl lods mov jno std mov xchg mov or jo dec jp stos int outsl sbb out cmp sti ss pop (bad) (bad) (bad) jmp xchg sub pop and pop adc scas pop enter call push lahf mov (bad) (bad) inc mov inc sbb pusha call pop outsb rclb add fnstsw jne inc stc (bad) call sar xchg in ret je cmp nop mov (bad) (bad) (bad) jl sub or push push imul xor xlat daa xchg test adc in mov pop enter pusha xlat in add adc (bad) (bad) (bad) (bad) mov jo lds imul mov sbb dec and (bad) incl xchg in push jbe xchg movsl add jbe (bad) push in push data16 (bad) jg fcomps cmp lods (bad) cmp lret add push ss rorb jo das pop mov mov cli ljmp jecxz rcll mov aas mov (bad) fildll cmp push add xchg sbb in shrb insl pop (bad) push mov inc add popa rclb add cmp inc push (bad) fisubr jg add shr xor pop and lret faddp cmp addr16 (bad) call fnstenv into mov (bad) aaa add cmc ljmp mov cmp pop hlt xor push (bad) out stc (bad) stc xor aad fisub lcall cld sub dec (bad) (bad) (bad) jg dec in sbb icebp pop aad pushl mov nop add es cs (bad) (bad) (bad) fldcw in rcl mov (bad) in mov mov and cmp outsl push pusha rclb push call sub pop dec je pop xor xchg cli pop dec (bad) pop (bad) jae jb out push mov inc mov xchg and fldt pushf mul sbb push dec push mov scas push arpl dec leave mov mov ss mov lock mov inc pop insl ljmp inc test (bad) jg (bad) outsb test mov cmp scas lock rcll inc push or jle dec add (bad) (bad) (bad) jmp add mov test outsl pop add dec insl loopne mov dec xchg dec sbb (bad) sar (bad) (bad) mov add sbb adcb pop (bad) cltd aad ljmp sbb (bad) rorl inc xchg xlat pop dec outsb clc (bad) lcall pop fidiv (bad) mov mov shrl sub sub flds insl loope push dec push rcrl fwait pop lock imul incl lds add push ret xlat dec fs test jno jne inc or adc (bad) (bad) decl sub xchg cmp cld jo lcall (bad) sub adc cwtl popf mov jb mov ret inc pushl sbb rol fsubrl push pop jnp sub mov (bad) fildll aaa fs cli dec xchg idivb jbe push cmpsl scas jae lods ja (bad) (bad) jmp fwait pop push mov mov mov jmp xor lret jb shrl pop sbb sub inc (bad) mov lahf add cwtl pop adc inc (bad) (bad) (bad) pushl in or dec add sahf mov lods or xor xchg adc jae mov add rcl pop pop jno jle popa fdiv adc xor add insl and push push (bad) mov (bad) std ljmp (bad) mov pop adc jbe incb or (bad) jg ja cs xchg jle mov enter mov in dec cs loopne (bad) (bad) (bad) pushl sahf jmp mov push dec xchg rdpmc cmp xchg fistl (bad) lcall fimull mov hlt add mov data16 push test repz (bad) (bad) decl push in jno pop outsb pop jne nop push jecxz stos push int fwait mov int3 mov add adc cmp lock shll mov or loop icebp bound hlt (bad) jg sub and dec ret push inc jnp cmp mov mov inc mov (bad) (bad) (bad) cli xor ret xor cld jnp popa loopne push cmp sbb std in sub (bad) inc aas lods (bad) or pop daa mov or icebp adc xchg mov fidivr (bad) (bad) ljmp dec pushf (bad) mov (bad) fwait std sbb notl or inc push repz incl sub dec fistpll push aaa and inc xchg adc push out aaa lret adc out cli (bad) (bad) call push mov scas leave jbe es (bad) mov jno xchg aas dec push cmp bound mov loope push repz mov call (bad) repz push or xor push lods pusha mov jmp ja (bad) fidivl fist lahf (bad) out mov sbb mov mov mov jmp and push xchg add dec bound xchg or out mov decl push mov stc aas pop push add xor addr16 mov (bad) (bad) out clc test cmp add out pushl lods jo or nop outsb cmp fcomip (bad) ljmp cmc jl sub mov adc aas insl mov in pop add call cli xor int in ret test in push lock (bad) (bad) mov std movsb jecxz movsb aam push (bad) ljmp pushf pop push sbb call outsb or jb jle je pop loope insb cmp pop sbb fcomp orl jae inc (bad) (bad) (bad) call repz inc aam jmp add mov scas sbb aas (bad) ljmp ret mov mov or xor call (bad) xor or je dec cmp dec (bad) mov push ss or pop (bad) (bad) (bad) fistpll decl pop xor loop imul xchg stc out mov loop (bad) ffree fwait xor add adc jb xchg out inc js mov cwtl shll mov sbb or pushf mov inc test add hlt (bad) (bad) ljmp clc lods sbb jb xor add pop addr16 xor and (bad) (bad) jg scas adc cmp into insb out mov sbb xchg test std incl inc or mov mov dec pusha lcall clc (bad) (bad) jnp aad cmpsb stos idivb ret into and imul ret int3 loope fwait or aam test js xor fsubp mov and xor sub (bad) lcall jb clc ffree int mov mov fldl call (bad) jl sti ret outsb add add fwait xchg sahf jbe jge jne lods pop mov iret (bad) push adc mov ds (bad) and push push dec mov dec lods sub js cwtl (bad) dec sbb (bad) (bad) (bad) lcall fwait push or lea sahf out push mov and out push cmp jg clc xchg pop call imul sub cmp ret lods hlt mov (bad) push das xchg hlt jmp aaa mov insl insw push imul (bad) jmp and xor pusha adc lods cmc dec rclw lret pop ror dec ss fcos (bad) (bad) call movsl les shr imul mov xor mov fsts sbb jg inc cld jnp cmp pop decb loopne out insl xchg mov (bad) (bad) call pop scas mov inc adc adc dec in loope test dec inc cli mov ljmp pop lcall sbb or jb out dec test jecxz jp (bad) jmp aam mov aad or pushf mov test xchg dec loope add push imul (bad) mov and lea incb pop daa out repz jl push push mov pushl add and fistpl add (bad) frstor lock mov es pop jo jno sub repnz pop inc push lahf subb in jno mov cld test fucom xchg xchg xor cwtl shr mov add fildll lea call hlt or sbb call int dec dec or lock sbb jmp adc popl pushl xor loopne dec add test sbb stc pop movsl cmp (bad) mov push xchg (bad) lcall (bad) mov les adc out mov sbb pop mov (bad) (bad) (bad) (bad) in out ss rcll (bad) fwait jne jb mov xchg adc mov (bad) test dec (bad) (bad) jmp movsb xchg test inc dec mov mov or mov sub ljmp pop cld (bad) (bad) jg les sahf jb mov fadds add (bad) std cs (bad) (bad) (bad) fcmovnu in cs push xor add pop popf sub icebp (bad) sbb xor ljmp mov dec xchg dec (bad) pop fs mov xchg cmpl subl pop pop rorb or sbb push (bad) push (bad) dec mov cwtl mov rolb push mov or jp aaa or test inc push (bad) pushl adc jle es (bad) out test inc or jmp incl adc rcl (bad) mov push movsb adc es repnz dec xchg inc loope cli jno cmp xor bnd sbb call xchg cli sbb push fisttp jmp cmp mov push sti fwait mov add fcomps jg call cwtl mov test in mov jo ja andb pop dec (bad) incl cld push push cmp sahf adc clc das xchg cmp push (bad) call inc push jp ljmp (bad) sbb imul push es inc (bad) (bad) (bad) call lock mulb dec jb jo pusha cmp stos mov (bad) daa test xchg xor (bad) (bad) (bad) incl cwtl call mov adc scas ljmp cwtl mov decl lds out sub test ljmp imul mov cmp inc add lods add jbe jg (bad) lcall les pop rol sahf out mov xor (bad) (bad) push call ret pop in and dec sbb loope lret mov jne pop xchg lods lods (bad) out push mov push daa (bad) movsl lock (bad) (bad) ljmp ja xchg imul jae lret mov dec push call in outsb (bad) clc pushl inc adc cmp sub xchg clc pushl ror jae adc cmp repz push xor mov sti xor out cli (bad) decl and jbe jae jecxz and pop stc aas mov mov test (bad) (bad) sti leave mov pop sbb sub enter scas sub jl addr16 pushf popf js sub out clc (bad) out int3 mov or mov test outsb test xchg in mov cltd add loope jmp outsl mov xor mov and call sahf pop cmp out iret (bad) (bad) or dec insb mov xchg adcl ret test add mov sbb (bad) (bad) ljmp xlat and inc sahf cmp test cmp ljmp (bad) (bad) call loopne lods imul cld mov push dec adc outsb fistp mov out cli (bad) jmp mov mov stos fsts adc ficoml les cmp (bad) (bad) (bad) decl test aad dec sub sbb ljmp mov push insb (bad) (bad) (bad) jmp aas sub pop push add lods dec ja fcoms adc insl fwait into push jge inc cmc inc cmp push push push cld incl into lahf (bad) je cmp and inc xor (bad) ljmp aaa push and add sub adc int and (bad) ljmp mov or loopne aaa mov cs cmp inc and (bad) (bad) (bad) jmp adc nop jb rorl sbb mov leave ret pop sahf pop add imul add test and or in aad cmc shrl (bad) mov lods mov push sti mov setbe jmp test and fisubrl or pop pushf adc mov mov fcomip (bad) pushl and xchg fbld stos sbb sahf or test fs push insl cld jnp into repnz cmc outsl xchg xor dec mov sbb insb sub pop pushf test (bad) (bad) lcall jno adc xchg sbb sbb loopne in add xchg xor jle std ret jge test (bad) cmp add sub popa xchg xor (bad) (bad) out imul lock xor and mov mov lcall inc xchg (bad) call fnstsw or cmp aaa sub (bad) lcall hlt ja mov cli xor not std dec stos test mov (bad) (bad) decl add push mov push sti inc data16 (bad) ret and mov insb pcmpgtb test out hlt xor xchg pop cld (bad) mov popa imul out ss sahf lds icebp lock (bad) (bad) (bad) jl lahf jl gs cmp xor cmp or sbb sub sub dec ljmp push push inc xchg les xor sbb mov in cmp sar (bad) jge jl mov mov push sub lret inc call ja mov pop (bad) insb in aas pop xor movsl mov and and or (bad) (bad) ljmp push dec jne dec dec daa jnp push (bad) sbb add popa ds fsubs push movsl das xchg (bad) (bad) (bad) lcall imul pop dec mov or das stos popf add pop cld (bad) (bad) (bad) jns bound adc pop sub mov nop adc je test mov fild or dec lret ss lock (bad) incl jne sbb fild adc les add dec mov jae pop add cli clc (bad) ljmp mov call (bad) icebp std mov mov dec test (bad) incl lcall aam adc jns (bad) pushf add pop (bad) (bad) (bad) (bad) incl inc scas dec xlat push ret rolb inc daa out mov loopne push cmp fdivrl inc jmp cmp (bad) pushl xchg lods mov aaa mov sahf fadds fmul fcomip dec add negb fsubs ljmp cmpsl xchg inc in lds gs mov inc push (bad) (bad) out decl (bad) (bad) (bad) call iret lar arpl cmp arpl mov (bad) mov or mov (bad) jmp add test adc push push and aam jnp movq cmc lahf inc sub pop cli (bad) decl ljmp out sbb push or imul mov mov sbb cwtl into adc mov test (bad) (bad) mov nop shl push mov scas xlat mov outsl stos movsb mov rol jmp adcl and in sarb sarb sub pop mov ljmp jecxz clc pop sbbb and repnz insb dec fstpl ds jb xchg mov sar mov dec cwtl cli adc add nop hlt ja push iret sbb mov popa mov xchg fwait jg sbbl mov into add aas movsl fbstp mov popf mov sub cmp cmp mov lret inc (bad) mov mov incl pop fldcw mov test sbb sahf in sub (bad) pushl test inc stos mov fisttpl subb lods mov incl hlt xor dec jno insl mov cld (bad) (bad) lcall and aas or scas jg ror mov leave sbbl pop fs push (bad) jge push or andb (bad) call push mov dec ffreep sub mov pop jecxz mov scas inc sbb (bad) jmp scas mov and and stos scas pop and fisub adcb sub call lgdtl xor and mov pushf xor jp xchg push icebp (bad) jle stos push sarl jl (bad) hlt mov pop fcmovb push fdivl outsl lcall enter sbb nop cmc (bad) ljmp sub push pop add jae inc ret sbb (bad) (bad) fstpl pop xor sub ficoml cmp inc test rcrb aam aaa fadd dec push and rolb repz fist stc out imul (bad) mov rcrb sub (bad) fs xchg sti lods mov iret into xchg cs sbb inc ds (bad) push lret out mov rcl xor mov cmp jns testl leave and xchg pushl mov fdiv mov leave cmc pop mov sbb inc (bad) (bad) ljmp xchg aaa mov dec push push insw insb out insb hlt cmp scas out mov (bad) call pop jo jle jnp lods push add adc xor sti negb inc mov xor outsb push push jnp repnz add mov or jb dec mov inc (bad) push cmp hlt (bad) mov cmp inc xchg cmp inc jmp sahf (bad) (bad) lcall mov mov pop and add ret call in aad or or pushl int3 test arpl inc xchg into mov cld dec mov (bad) or insb cmp in test and cld push jl add inc inc out and dec sbb jmp int mov add cmp lea aas gs (bad) (bad) (bad) (bad) jg or pop mov jns rorl sbb inc sti or test add and lock cmp xchg stos mov adc loop rolb scas lds cltd cmpsl cli cmpsl mov cmpsb (bad) jb jge xchg das mov mov dec shr lods (bad) jl stos scas cmpsb daa mov fneni(8087 (bad) ljmp add outsl xor test or sub shll mov lret stos cld adc xor dec sbb sub in and cld in rorl in add xchg sbb inc (bad) (bad) (bad) pushl js push pop push lret fadd leave cltd in dec fnstsw stos repz je outsb adc (bad) (bad) dec cmp jae dec ficom dec push shll push popf repnz scas in es mov or (bad) insl inc into std push jp das cli add mov (bad) (bad) (bad) jmp (bad) icebp lock imul add pop loopne repnz adc movsb fmull test mov out dec les ficomp jle cs rolb mov ss pop adc push mov push adc xlat mov call push (bad) out and les (bad) (bad) ljmp mov mov test sbb aam push gs repnz sbb loop and hlt (bad) (bad) jg sbb frstor popf jp stos and imul jle pop mull bound imul repz xchg push test mov xchg rolb cmpsl scas daa push push in in cmpsl xchg bnd ja ret push mov pop pop std out das mov ja out mov lea loopne int mov rorb pop loopne mov xor xor sub mov ljmp lods (bad) outsl xchg rcl xlat test test fwait insb ljmp jp lahf or insb cli sti inc (bad) (bad) (bad) push sti push mov mov dec mov mov or mov lcall mov sbb pusha nop or int3 repnz clc mov sar insb test ret fisttpll int mov dec fadds repz aad mov inc popf decl push popw mov xor pop das not xor cli sub fwait hlt inc mov (bad) (bad) lcall mov pop mov xor push xor dec adc ficomp bswap xchg popf add out dec cld pusha pop mov fiaddl (bad) (bad) jg push jmp and ret jl,pt mov xchg frstor mov sbb gs fimul loope jl popa inc jg mov pushf or fs mov jmp jl bound imul inc xor adc loope or add (bad) (bad) jmp (bad) jne fwait das jecxz or xchg lods add cmpsl js xchg test mov test push (bad) in pop jp sbb (bad) decl mov outsb xchg sbb mov mov cmp (bad) outsb aas lahf sahf xchg imul sbb ret xchg cmp gs jb pop xor inc enter ja push or pop or jmp add mov dec enter rcrb cmpsb sub sub popf into xor (bad) lds mov xor push jo (bad) (bad) (bad) (bad) stc and and sbb mov stos jecxz test xchg xchg andl (bad) aaa std mov mov push jnp out lahf (bad) (bad) incl sub lcall out sahf sub adc pop sbb imul push pusha push inc cwtl add clc (bad) xchg jno aad fsubs fs inc mov (bad) jbe (bad) (bad) jmp adc pop push pextrw xor ja nop sbb mov add dec push imul mov std in call (bad) decl je movb jb outsb pop mov fcoms call (bad) ljmp mov movsl js cmpsl imul fs mov xchg data16 lock push idiv (bad) cmp out inc cwtl lods (bad) or jne or push xchg jmp xorl cmp sub call push mov test sahf mov adc (bad) (bad) (bad) (bad) in mov in std repz xchg mov fnstsw lret pop add push cltd mov add scas and inc repnz dec mov xchg loopne (bad) (bad) call or push mov pop repz pop jae mov cmp push (bad) (bad) call mov fmul bnd xor jae rol in lea mov (bad) pop out and sub mov mov adc and cs cmpsl (bad) (bad) (bad) jmp sub add jbe and fisubr inc sbb popa (bad) jno pop loope int rolb (bad) (bad) in (bad) fndisi(8087 in cs mov cmp repz fcompl sahf aas add xchg incl cld (bad) mov iret sub fidiv movsb dec mov push push mov movsl inc cmp sub add insl add xchg mov add push dec mov dec xchg jo cmp xchg es fsubp (bad) (bad) (bad) call jmp mov call mov pop stos sbb sbb lock xchg fdivr leave cmp mov mov icebp mov jno cmp movsl or js hlt call (bad) mov push jp cli fcomip inc xor pop pusha std cmp in mov push rorb incl loopne sub stos (bad) xor pop cmpsb sbb sahf (bad) (bad) (bad) incl lea fisttpl out sbb popf dec ret xchg dec xchg inc fs push mov sbb jns notl dec adc jne dec sbb pop sub adc cmp inc inc int loop (bad) call loopne test add std (bad) fstl sarl mov shl in jge es sub adc jb arpl mov push mov ss call andl pop mov (bad) (bad) and adc or push lret jg sbb popa popf cwtl cltd mov xchg xor cmpsb xchg (bad) (bad) (bad) lcall sbb jne pop adc fldl or xor push iret sarb lahf je mov add push aas and outsl sub scas aad ret (bad) (bad) (bad) incl in rclb test and js jmp das pop pop mov push es mov in mov mov push and or inc cltd add dec cwtl sti adc sbb ljmp (bad) out xchg and and (bad) addb mov fucomi and (bad) (bad) lcall or fidivl mov dec into lods mov shrb fs lcall dec fdivrp rcll sti push xor pop pop xchg test in gs mov (bad) (bad) (bad) jg fdivrl ficoml cs outsb mov (bad) and repz pop scas aam mov (bad) (bad) lcall addr16 lods sub cmpsb mov ret test cld je xor pop cmpsb fwait aas sbb incl mov push dec xchg mov out call push cmpsb mov (bad) (bad) incl mov aad pusha int push sub inc stos mov sti cmpsl mov incl inc (bad) lock jnp mov shlb and xor iret inc adc xchg fcomps (bad) dec in int aaa sti loop clc (bad) fcmovnb adc rclb adc pop mov pop clc (bad) mov adc int adc addr16 ja (bad) sti cltd sarb xchg jns xchg jp (bad) mov mov (bad) jb push pop push int3 int cmpsb adc cmpsb cmp ss ljmp data16 or push xor dec fwait mov jne xorl xchg loopne aaa fcmovnb outsb cli and inc test and imul jmp xchg push unpckhps push jp inc xlat fmull hlt jg push and or (bad) jns add pop fwait clc inc aam nop and lods jg out cli lahf dec pushf enter cmc pop jnp cltd sahf adc out sti add arpl xchg rcrb and cld (bad) (bad) push push outsb sub xchg imul jo (bad) (bad) sub mov dec inc out and call test dec push pop sbb inc xor inc ljmp or popa jecxz adc aaa mov dec pop in in test and enter lods test int (bad) (bad) (bad) fbld push mov sbb les jge ffreep addb or pop (bad) lahf jbe lcall decl aad fidiv add cli hlt jle shrl cmp push clc decl fsubl sahf push sub (bad) (bad) decl (bad) les and jmp pop or js sub lret add shll sbb sub roll dec (bad) (bad) mov fild push xchg iret test mulb ljmp mov js iret cltd lods xlat leave aad mov adc mov (bad) (bad) dec jp dec lahf fcompl mov cs cli push loop pop add incl pandn and cld mov dec xchg out pusha jo cld (bad) (bad) lcall hlt dec cwtl lods mov push inc ds or stos mov scas lret vandnps pusha push test pop mov inc aad (bad) pop cmp dec ljmp xor cmp lcall insb cmc dec jbe push jne sbb leave xchg movsb mov adc (bad) (bad) incl sbb icebp xor arpl dec fidivr (bad) xor inc (bad) imul push jae or mov stos lret repz xchg xchg (bad) mov das clc call (bad) movsb fldl pop test lds adc popf nop inc cltd sbb js (bad) (bad) (bad) call mov imul fwait jb sar shrl (bad) (bad) pop hlt pop enter sub cli call adc push xchg (bad) (bad) (bad) incl inc icebp daa and mov test nop sub je xchg stc fsubs jmp xchg adc add (bad) and popf jo es stos push (bad) (bad) incl push mov sarl call sti aad cmc inc mov pop daa mov xchg lcall repz add push xchg or (bad) (bad) ljmp (bad) xor cld pop rcrl fwait jbe pop add cmp add sbb pop hlt call loopne cmp fmuls and add call incb aaa addr16 ljmp (bad) pushl sbb (bad) dec cwtl lods insb movsb mov push pop mov push push add hlt and sbb lea pop jns xchg rcrl or cmc sarl (bad) sub inc jmp (bad) mov loop sub or pop data16 mov in scas and pop in push and fs mov pop loopne test (bad) ljmp cmp (bad) cli pop hlt inc lea cmp mov dec cli mov jnp and inc or jecxz movsb repnz cmc ljmp mov dec insl pop aam push pop stos jne jecxz jp rol jmp sti mov loop mov daa sub (bad) incl je sbb jmp add ret ret rcll stos mov mov and in inc jmp call push add cmpsl jb lea cmpsl ds shrb (bad) (bad) ljmp int3 (bad) inc in xchg mov and pop inc decl sub xor cmp les out scas stos (bad) ds cmpsb push jg (bad) ljmp lret inc inc addl repz (bad) jmp (bad) (bad) incl ficoml mov push insl popf mov lods mov inc and enter (bad) (bad) jg mov xchg repz inc mov dec jbe es xor sub cmc (bad) (bad) (bad) in cmp adc fisttp jo mov cmp sahf pop in into fisubr sub (bad) (bad) fcomip lock and dec push les clc negl pop jb rorl xchg decl test push jl lcall push (bad) (bad) (bad) decl xor fwait fs dec inc adc rcrb sbb hlt (bad) incl and mov push jnp repz std mov jae dec (bad) ljmp push mov sar sbb pop sbb pop pop test sub sti jle cmp (bad) lcall rclb push loop mov pop icebp call loop or ret xchg sub dec dec in sub ja xchg sub jns adc or jecxz xor jp push dec cmp sub fs test (bad) push mov or dec cli (bad) (bad) jg cmp test mov jnp inc push push pop enter push inc or incl add fidiv icebp enter jmp (bad) js (bad) decl lock loope jmp aad shl adc mov outsl pop dec adc (bad) (bad) (bad) decl inc mov and (bad) mov add mov pavgb mov loop cmp adc sbb mov (bad) xor xchg mov fidivrl push enter pop jno push clc mov adc jp inc push adc mov stos (bad) mov (bad) xchg lds (bad) (bad) cmp neg xor cmp push jle in dec lods cwtl jge imul call add out xchg loop cmp movsl hlt mov stc fldt jo pop out xor xchg (bad) inc jg sbb js fisub mov inc inc (bad) mov and lret sbb mov pop add dec push push dec or fucomip out andl jno (bad) jg inc (bad) in dec fistp imul cmp lret push xor xlat lock sub fwait cmp add lcall in arpl add or fmuls sahf xor jle pop sub push ds adc outsb (bad) (bad) (bad) incl adc movsb dec andl sub adc in cmp (bad) (bad) fnstsw adc sub inc insb mov mov leave fimull sbbl (bad) out daa push jmp (bad) decl push add push xchg jecxz shrl stos dec jne (bad) lcall jle cmp subl adc or addl (bad) and (bad) xchg sbb test out nop (bad) jnp fimul sub roll outsl cmpsb icebp insl pushl leave les sub jnp ds sarl adc (bad) (bad) (bad) cld leave pop scas cmpsb outsl xor in insl fimul xchg lret push mov inc push sarl icebp ljmp out pop pusha scas lock aam scas jo test sbb adc (bad) fistp push push cmpsl sti or (bad) dec jl jle mov insb imull lds or (bad) cmp (bad) (bad) incl pop inc movsl inc or cmp add dec (bad) nop pop push lret loop (bad) (bad) fbld cmpsl clc insb xor mov scas fstpl pop pop es pop (bad) lcall in push aas inc mov cmp les daa dec mov jmp mov xchg std cltd push dec mov cmpsb je sub popf cmp lds push dec push adc or mov cld (bad) (bad) cmp mov jnp xchg push sbbl xchg xor lret (bad) (bad) jg jle ja inc out pop in aam data16 frstor fisubr (bad) incl bound movsl mov and cld fildl or cltd xlat insb pop sub cmp aas inc sbb out in nop inc sub test int3 cmp (bad) les (bad) (bad) (bad) jp mov loop xchg xor rorl int3 (bad) fsubrl jbe and push cld repz (bad) (bad) (bad) (bad) in xchg push or repnz notl fadds xor ljmp in push sub dec es jbe cli lds ljmp icebp test mov sbb push push inc jecxz clc (bad) stc or inc call pusha mov rorl pop push add push adc and mov mov jl mov dec (bad) iret xor mov add incl scas in jnp pop sahf xor imul jbe push mov popf cwtl lret adc mov inc or adc fbld or insb jno inc mov rorl cmp (bad) incl iret adc fdivr sar cmp js mov lret insl (bad) (bad) dec adc mov cmp inc dec fs push pusha cmc movsb or cmp (bad) (bad) (bad) cmp sarb push xor mov xchg pop (bad) sbb pop mov imul or pushf mov loopne ja (bad) add cmp ja (bad) je inc popf (bad) incl sbb test xchg into cmp ret push lods gs jg adc out lods cld mov xor sub inc fldcw sar (bad) aas xchg sbb mov out rcl stos in movsb sbb jle mov outsl (bad) decl out scas jmp add dec inc addb cmp ja ror loopne xchg push mov (bad) lret inc mov (bad) (bad) decl inc fldcw outsl mov pmaxsw pop mov push jo dec lret imul test gs imul inc (bad) xorb jns mov xchg or scas clc (bad) (bad) lcall pop imul dec test pop xor int3 add pop add lds ret aam lods (bad) jmp repz (bad) (bad) fst sbb test ficomp xchg fsubrp mov ds mov out (bad) (bad) (bad) incl jbe (bad) stos xlat cld sub xchg pop mov pop inc test push fdivrp sbb (bad) out dec (bad) (bad) (bad) (bad) mov sbb mov or into xor insl mov lods sbb mov ret jo icebp (bad) dec fs je ds movsb addr16 and repz lcall cmc outsl fildll hlt ljmp jle cmp jp js cmp outsl mov clc mov iret sahf sbb pushl sub std cmc and rcr lcall std aas inc lock push lods adc pop outsb cmp cld cltd mov xchg mov mov jge call xlat and push (bad) mov push sub mov sbb inc loope scas push inc cmpsl cmpsb or (bad) (bad) call and cmc lods enter adc xor mov push and out xchg and pop xchg sub nop push aas fcompl cmpsl (bad) (bad) (bad) (bad) out popf jp jecxz pop test xadd int3 aam int3 sbb pushl mov sub dec (bad) push fs xor xor inc mov adc std or lds or out jl mov mov (bad) lcall repz pop sub push xchg cwtl or das and loop loope lret push or icebp scas leave dec es pop aas jns stos or lds fbstp lret cli aaa inc push jne mov int3 mov cmpl inc loope mov in outsb out mov or (bad) scas push (bad) jmp imul mov push lcall push cli enter icebp jo pop stos pop sti (bad) js test lahf (bad) scas (bad) stc stos stos loopne rclb lock jno sbb rcrb dec daa ja je loop rcr (bad) (bad) (bad) jmp out inc add add jo repnz mov pop mov scas mov sahf xor (bad) mov cmc (bad) (bad) ljmp push sub aas pop insl adc add lds subl mov or dec push lods insb repnz in and xchg lcall (bad) ljmp clc cli (bad) outsb mov imul scas inc dec ret mov cmp arpl nop cli (bad) (bad) decl popa add cmp add cmp inc add sti add dec push mov fadd stc and xchg pop in cs fstpt loopne cs mov ljmp push dec push fldt xchg test adc (bad) popa outsl scas pop inc sbb xlat ja mov inc sti and jecxz and (bad) ljmp and cmp (bad) jg cmpsb shl lret shll push pop and movsb cmc lods (bad) push mov adc mov jg dec cld les pushf sub fist loop ret (bad) add cli mov daa xor mov insb lods sbb iret testb sub pop cli fistl push (bad) decl xor and add lock outsl fisub nop mov mov mov ret (bad) decl nop mov adc shrb pop sub sub out add mov jmp sti jmp fiadd sbb mov sahf push insb pop xor out xor std (bad) (bad) call fwait mov xor dec fstpl movl sbb clc jg and dec inc mov xchg inc jnp ljmp call cld and popa dec (bad) out (bad) (bad) mov xchg sti std stc mov dec daa xchg dec lahf sbb pop pop int imul cli (bad) incl dec std xchg sbb es ds and js faddl (bad) (bad) (bad) call out adc out jno adc scas (bad) sbb mov aam loop (bad) (bad) lcall iret lret mov (bad) pop jge mov cmpsb push fisubl jno imul clc or add mov std sub xor (bad) (bad) call rorb and mov and or and inc jnp scas fsub roll orl incl sbb cmp pop sub dec dec enter xchg xchg xor es push rorl lods adc mov push xchg out push mov xchg ljmp add stc push adc sbb jg pushf pop mov movsl push mov (bad) dec cltd incl push nop xor lret mulb aad add inc or (bad) (bad) (bad) clc (bad) dec inc leave es ffreep lods (bad) negl and (bad) (bad) out xchg mov push test rcl inc push fcoms stos add pop fidivl scas imul pop lret incl call dec push mov adc pop mov rcll iret (bad) ljmp and push clc pop ret cmpsb aam mov xchg test cmp cmp mov cmp mov negl inc ja jp or lretw pop cmc (bad) (bad) ljmp mov mov outsb enter daa sahf notl push jnp or into mov pop pop aam push test repnz push pop dec jle cli (bad) call add adc and mov jge lds (bad) lcall cld push mov lds clc imulb adc cld (bad) lcall (bad) xor out cmp and aaa mov mov cmp jp in (bad) (bad) inc add loopne jne sti adc push mov lahf nop push fstp cmp shrb mov mov je mov sar out mov (bad) subl lcall sbb out mov cltd push scas xor dec jae mov cmp ljmp and xchg sbb push in cmpl mov fs outsl cmpsb movsb stc ljmp bound out pop (bad) xor push push and cwtl pop les pop push insl inc sbb jp cld adc (bad) and mov dec inc in mov xchg cmp lods mov (bad) incl jle push mov sub or loopne (bad) call out or int xchg test dec sbb rol and (bad) call repnz dec jno in sub cmp xor adc test sarb (bad) (bad) mov imul cmp test cmp aad icebp push mov mov (bad) decl cltd orl xchg pop imul mov jmp dec (bad) xor rcrl leave leave outsb mov mov mov call (bad) jmp add pushf int3 imul (bad) jg sahf adc dec jg xchg inc out stos sar mov mov fisttpl sbb ljmp dec js insl (bad) mov lret (bad) (bad) (bad) decl mov cld (bad) push adc mov dec ds and mov mov push or and jno int mov push xchg push sar (bad) (bad) js jl fxch popa mov push mov xchg mov ja push into data16 (bad) (bad) (bad) fadd pop aas sahf aas jns sub xor sbb add ficompl mov (bad) mov (bad) jmp adc clc in push xchg loope inc dec pop outsb addl (bad) (bad) push cmp xor les mov mov scas xor sti bswap les pop sar fisttp add pop push cmp mov jg pop mov and inc jp add (bad) push arpl xlat xchg fistpl lock (bad) das clc pushl push lret ss mov sub loopne xchg add sub add jmp and dec or jmp inc int3 xor mov (bad) in ljmp push cmc shl fimull and loope mov fidivl cmp inc es ret dec fidivrl jmp (bad) incl push lods pop sub in dec arpl leave shr pop add out xchg xor (bad) lcall enter daa sbb or add xor (bad) ljmp pop test push fwait and je push cltd jl mov lret pop ret insl dec or popf dec lcall mov dec js int movsl mov aaa add pop (bad) mov imul fs xor iret xor fs cmpsb inc (bad) (bad) (bad) (bad) cld sti aaa mov int adc test and and cmpsb shrl aam push rcrb add or lcall push ds mov pusha int3 inc call pop aam loope sar cmp ret int sub pushf jne cld xchg (bad) (bad) mov cld jmp xorl push xorl in hlt jg (bad) jnp dec call xor push cmc xchg or (bad) (bad) (bad) (bad) fdivrl pop ds (bad) (bad) sbb cmp push push inc (bad) fcmovbe mov lock (bad) (bad) (bad) jmp mov cs stos (bad) pop scas add (bad) insw cmp rorb pop shrd (bad) (bad) pushl test mov cld iret jp cmpsb lods xchg push ret es ss mov popa inc xor xor xlat fisubr (bad) cmc das clc jmp jno mov addr16 aam stos pop cli stc xchg pop cmp (bad) aad sub mov clc inc sbb pop (bad) jg dec enter dec pop ror add clc ficomp outsl xor adc adc mov or aas xor ljmp cli call mov in (bad) and popa loopne ds sarl lods sti inc adc sbb and xchg dec cltd (bad) or mov movb xor cmp clc repnz bound test dec xor jp notb push push ret push push mov std sub push aaa test inc es jbe jbe xchg fwait mov pop (bad) (bad) jg enter jp popa and lds sbb mov add fdivrs (bad) (bad) call inc xor pop mov add cmc jp adc mov pop mov cmp or lods fwait rcrb cmp addr16 mov insl (bad) (bad) ljmp (bad) jmp outsl mov push out gs dec leave add xchg cmp imul cmpsl in loop dec (bad) sbb ljmp pop fcomps push or or movsb pop clc inc popa xor push push (bad) (bad) ljmp or dec dec xchg pop xor mov cmp (bad) pop mov or call outsb cmp xchg mov fidivl add (bad) (bad) jg xchg xor in lock adc es int or daa gs or sub je lds xor clc idivb in loope enter jmp stos inc and (bad) (bad) (bad) (bad) in and pop or outsl (bad) sti push push fidivl xchg div sbb lods stos mov mov and push push xchg and mov adc shr out mov movsl (bad) (bad) (bad) lcall jmp push jp cmpsb dec or pop movsl jbe adc ja add ret push aaa push cld (bad) (bad) (bad) call fisub add pop cltd clc lds out xchg pop lret adc cmp pop popf (bad) push testb inc (bad) (bad) (bad) (bad) std fwait adc jmp test mov repnz sti sbb jg (bad) jmp test push push mov mov sti stc movsl pop rorb pop cmc dec pop add call xor stos cmpsb jge xchg sub mov mov lods push lock test mov xchg cmp icebp mov mov bound xchg inc push mov stos (bad) jg decb imulb outsl lods add xor fsubs push fcomip call xchg and fidiv in add mov mul xor (bad) (bad) (bad) call push shrl inc jg xchg mov xchg leave mov in mov inc insb sbb cmp adc sti sub cld lret js popa push aas xchg mov sarl sub add mov cmp outsb and dec or xor add icebp inc fisubrl add push mov add rorb jmp adc lock outsb mov push (bad) (bad) fildll cmp adc add push dec push dec mov adc mov movsb mov or inc jbe das iret (bad) mov and mov (bad) (bad) out and xor lods pop cmpsl lock bound push xlat pusha push push jg pop adc (bad) (bad) ljmp pop and (bad) scas dec push daa je or pop sbbl imul es mov incl sti push lret in push and dec pushf imul adc fild xchg inc stos aam mov sti jns fdiv lret cld (bad) (bad) call sbb sub cli push and xchg xlat sbb jmp sbb call xchg ficompl (bad) pushl cli lcall nop xchg cmp pop lret mov and hlt std (bad) jg and daa fdivl cmp jbe xor rcl ljmp fcoml add mov push enter iret gs or pushl icebp mov push jl popf add and pop add dec push xor xor mov sub jmp jo lcall jg (bad) (bad) mov loop mov lods xchg sbb inc adc mov cmp cld inc inc stos cmp (bad) clc jle (bad) xor xor xchg mov mov stc inc out es jge add jmp or (bad) (bad) push dec sbb shll (bad) rclb mov pop js insl jbe stc sbb (bad) (bad) ljmp or jp jnp and inc divb daa std mov jp pop loope movsl cmp cmpsb push cld fsubrs push jae pop mov test mov mov sbb je dec fsubr or and das cli loopne nop mov pop mov or adc mov xchg int fcmovbe mov xor dec mov add outsl push lods adc popf lds cltd add mov sub xor sub pushf bound sbb rcr inc adc movsl or mov les sbb pop inc cmpsb test (bad) decl shlb ja xchg add stos or sub insl xor (bad) (bad) call cmp sbb push jnp push push mov or rorl push sahf int3 aas xchg add pop dec xchg hlt lcall fimul pop and pop rorl lds (bad) (bad) call push (bad) adc cli adc js out adc xchg (bad) xchg pop sub sbbb xor pop cmp pop frstor (bad) pushl (bad) bound andb mov sahf adc add push cmp push or pop sbbl cld (bad) incl cmpsb push outsl push inc into or jecxz pushf cltd hlt and xchg add jg or or xor or loop (bad) (bad) pushl ss mov push mov pop ja enter pop push cmp and jecxz adc (bad) (bad) (bad) stc iret sbbb sbb push test fdivr xchg add lods int mov (bad) (bad) decl xchg dec es mov test cwtl fs sbb xor (bad) (bad) jmp xor mov mov bnd add pop scas jmp loopne inc (bad) dec jmp add cmp lods stos mov push mov sub mov lea lock in (bad) mov lods (bad) (bad) (bad) pushl enter pop clc aas lretw add jle dec repz fisttpll lahf jnp jbe (bad) (bad) (bad) (bad) fbstp and ja data16 mov call int enter stos mov (bad) (bad) (bad) pushl in (bad) lahf (bad) jbe (bad) mov out mov aaa pop fimull out decl pop scas or sbb adc cmpsb mov cld inc testl test or xchg lea icebp popf test adc test cli mov pushl cmc call cmp in jns and push pusha jo push lea call fst int and icebp push daa jp mov xchg das jmp sbb mov jecxz icebp or movsb int xor push push bound jbe pop scas pop fsub xor cmp and repnz jg mov sbb outsl mov fldz notl dec enter mov adc (bad) (bad) (bad) (bad) mov jge out mul xchg (bad) cli sub or repz (bad) lret enter jbe (bad) (bad) cmp ret aad imull or inc inc xchg cmpl shrl lods xor ljmp mov dec sahf jp mov insb (bad) (bad) jmp (bad) inc adc test adc sbb fnstsw test pushl outsl fstl gs (bad) (bad) mov scas sbb sarl xchg data16 imul mov lret (bad) (bad) (bad) cld mov or inc aam stc lahf icebp push je mov inc in push movsb (bad) out stos push sub insl cld (bad) (bad) inc repnz jg xchg mov pop inc mov (bad) stc nop cltd and lea adc in (bad) add inc nop mov lret add aam data16 (bad) (bad) decl jmp mov in shll push movsl xchg lock (bad) pop push lock test push sub mov addr16 mov mov sub or jmp addr16 fdivrs add iret das push les aas push inc and sbb leave (bad) jg (bad) fild addb push pop and dec ret div mov repz scas fs js fadds inc pop inc pop data16 inc rorb adc inc fs mov xor mov pop add (bad) fmuls xchg dec adc mov (bad) (bad) incl inc inc jmp jbe addb adcl lea and mov fisubrl cld mov es and pop xchg nop mov decl mov xor mov or mov push push mov inc jecxz outsl scas lcall inc clc in xchg cmp cmc (bad) incl mov insb xchg int3 cmpsb aaa stos pop (bad) (bad) (bad) call mov dec jp jp push les pop mov push jp push int3 mov pushl ret movsb push mov push (bad) sbb std (bad) (bad) lcall pop xchg mov push push or mov rclb cmc jg and sub adc (bad) (bad) lcall out pop (bad) adc pop push frstor arpl rclb ja loopne pop adcl push cwtl es call call xor mov sar (bad) ljmp ja (bad) push movntq cmp jb fwait dec addr16 (bad) repz imul call push lods push jno mov test pop mov jmp or (bad) (bad) decl push lret add push fildl sub arpl nop aas repz mov popa out mov (bad) (bad) (bad) call cmp pop mov mov cmp pop mov fdivl add xor inc sbb repz (bad) (bad) decl add inc xchg repnz subb enter mov or pop lods clc (bad) (bad) (bad) ljmp mov sti repz (bad) fldl xchg jbe xor jge ljmp add jb fisubl cltd fcmovbe sbb (bad) (bad) call and sahf lods push xchg fdivs jne cmpl push pop (bad) outsl and sbb push aam movsl inc fsub (bad) jp add (bad) lcall dec loopne pop loop ret in enter leave and jg imul mov mov sbb xchg (bad) (bad) ljmp pushf sbb or push arpl leave sub jnp cmc jno cwtl add lock decl inc std and out or ljmp ret loopne andl mov pop adcl and inc ret mov cmp aad (bad) int inc test fstpt mov push movsb lock mov clc mov call dec or dec ret xor mov sub ret mov (bad) (bad) (bad) ffree rcrl and (bad) xchg jb adc mov push lret clc mov adc lea inc ds mov push push aam leave inc fwait cmp jle jecxz pop pushl mov push ja aas push in or cmp and lcall (bad) mov std ja inc popa push adc and repnz cmp sub mov mov sbb shl xor jg push inc pop andl mov lea dec daa jl out push jno cmc popa dec (bad) pushl mov and (bad) ljmp test (bad) sub call mov add sahf add jge (bad) mov incb pop cmp mov xor decl mov das push mov jnp rcll pusha adc jbe std shll pop and (bad) (bad) call aaa dec sahf sub xchg jmp inc cmc bound (bad) mov push mov decl test mov mov loope jo icebp cltd cmp jb icebp sub (bad) (bad) jmp (bad) sbb or mov es iret outsb mov jo xlat mov adc xor mov (bad) inc clc mov mov jmp daa lods lahf xor js adc and jg pop cltd sub cld scas movsl es out push xchg xchg loope and mov fnstcw pop xchg (bad) lcall or add or and insl inc sub or jmp lods mov push mov andl sbb mov xor test in push addb (bad) (bad) jmp rcll push test int3 pop pop js sbb insb imul aad js (bad) (bad) push xlat popa push sub mov mov hlt mov pop fcmovnu pop fildl xchg pop fs (bad) lcall xor inc push or in clc lret fwait out repnz sub xchg jne ret (bad) (bad) (bad) out push (bad) sub sbb sti mov xor test push js (bad) ljmp inc add ljmp lret (bad) dec xor push mov enter inc adc inc nop mov inc cwtl outsb pop jbe xor cmpsl jb xor sbb sub sbb cmp arpl int decl dec into and push js xor add cli cmp sub pop je push movsb pop ret (bad) (bad) (bad) (bad) clc (bad) fwait clc (bad) cld dec pop dec mov xchg std outsb mov pop sbb jb mov cmpsb adc mov shlb rcl (bad) call fcomps nop adc sbb pcmpeqd test pop std call sub push icebp cmp sahf pop mov or ljmp scas push add push xchg (bad) fildll pop jle sbb or scas adc fcos (bad) (bad) push cmp push shr scas push je lods sub mov iret mov (bad) push xor and push (bad) (bad) (bad) (bad) fisttpll aad or mov xchg cmpl adcb hlt (bad) (bad) call clc adcb push mov xor adc jb jno scas mov mov pop and fldt lods imul xchg mov cli cmp std (bad) (bad) decl pop ja or sbb call nop mov adc cs (bad) mov and popf int pop pop (bad) mov jne cld pushl dec fmul push or adc or insl ret stc jae push sbb xchg pop (bad) cmpsb (bad) call ficomp jl cwtl mov pop test les cli das mov fistp (bad) mov pop jl inc nop call add add pop lock clc mov adc cwtl cld pop fisttpll mov stos xchg mov jg (bad) incl mov fidivrl aas movsb rcrb enter gs or mov or mov mov pop pop repz adcb (bad) jae pop jno adc ljmp daa mov add aad outsl insl je mov add adc push pop push (bad) (bad) lcall and bound in stc mov add xchg cs xchg mov ret sbb (bad) (bad) (bad) jmp xchg es mov cmp mov xchg inc es xor jmp (bad) (bad) inc xor push inc cmp mov data16 or insl (bad) dec into push add (bad) (bad) (bad) fbstp loope fwait mov cmp inc pop rcll push bound mov dec (bad) (bad) ljmp inc and adc shll mov mov (bad) cmp mov stos mov in add decl (bad) cmp lods fnop adc lock test dec push xchg xorl fsts jp mov cli jno push pop mov xor out movsb pop pop stc (bad) (bad) (bad) jmp into and dec cli xlat mov sub arpl pop ja sub stos or icebp (bad) (bad) jg icebp sbb outsb cmpsb add popf pusha pop push add nop cmp (bad) (bad) (bad) out (bad) int inc xchg fimull in out jecxz popf js push xchg xchg stc xor mov (bad) (bad) decl add pop xchg or jmp mov and arpl daa ret mov (bad) (bad) (bad) call frstor das fstl inc pop jne dec sub xchg (bad) (bad) outsl testb rep push ljmp dec (bad) jg xchg or pop hlt xchg inc push (bad) (bad) (bad) out test movsb xor xchg lods ljmp inc and jb mov stos mov loopne mov ds cwtl add (bad) lcall and or xchg jl jns mov es jl (bad) pop cld (bad) inc jmp xlat bound sbb mov mov pop xor dec (bad) dec ret std dec (bad) (bad) and cmp cli mov (bad) call test (bad) addr16 xlat push adc cmp push scas ja out jb aad test dec pusha jns scas push mov (bad) (bad) (bad) (bad) sbb add xor pop addr16 ror mov (bad) sub cmp btr or (bad) (bad) (bad) incl sub cmp fisubl mov cs cmp (bad) fisubrl popa mov sub pop flds shll lock mov stos adc lcall lock mov xor xchg sti mov lods dec popf push scas xor or and mov stos (bad) ljmp in loop clc popa clc fbstp mov aaa mull xor incl rcrl pop mov add fs test mov dec inc in (bad) mov cwtl (bad) (bad) (bad) incl xor push mov or test fnstcw sub repnz call cld lea mov push adc mov clc rolb xor (bad) mov mov or cmpsl pusha pshufw enter push xor movb (bad) (bad) mov dec shlb outsb sub je fsubrs pop rcrl (bad) (bad) fistpll mov movsl fsubr sbb fnop pop std subl sub pop push sahf rorb test (bad) (bad) decl scas sbb movsl (bad) nop cmpsl mov movsb fs pop fwait mov pop dec push out dec and cmp lock (bad) mov insl cmpsl pop push int mov repnz push scas scas test pop dec add cs jp lea lods (bad) inc dec sub and sbb push dec or (bad) (bad) ljmp push addr16 dec pop dec jbe out int3 sub pop js jmp (bad) (bad) (bad) call push daa inc adc adc fcmovnbe pop std out daa lcall or (bad) (bad) decl push out sahf lahf push sahf jle cld fbstp shr inc (bad) xlat cld mov (bad) (bad) decl mov and xor mov jno int3 pop adc inc ljmp sbb (bad) (bad) (bad) decl (bad) xor (bad) and adc xchg push jl enter sahf mov stc sbb sub sub (bad) (bad) (bad) dec stos dec lret out sbb (bad) mov and cs pop dec adc pop (bad) (bad) and jg fcomps adc cmovbe (bad) (bad) lcall pushf dec rcrl jns inc sti jp jp pop pushl sbb rcll (bad) (bad) (bad) (bad) call (bad) add aaa fwait adc fs dec das add jb icebp imul (bad) (bad) decl push popa xor inc aaa shrl jnp daa adc mov dec das add incl dec push dec fs jg mov fisttp (bad) lret shr cltd pop scas iret decl inc (bad) dec push aam xor jne (bad) mov push jno ss cmpsl jp pop mov push ja jno pcmpgtb (bad) (bad) call into mul popa leave sub mov jle lcall call (bad) incl ljmp cwtl fs cmpsl lret pop ffreep ret fstps mov fdivr jae sbb xchg cmp decl mov mov sub rolb pop cmp cld push jmp (bad) add push es (bad) (bad) (bad) lcall shr xor dec stos lret push stos pop insl fidiv out es mov mov test adc lret jbe sbb adc adc pop sbb (bad) lcall sbb icebp scas jb aad add add push (bad) call dec shrl xchg inc sbb outsb imul pushf xchg movsb mov mov lea test pop lds out (bad) (bad) (bad) (bad) mov aad xchg inc shlb pop fstl fist inc sbb jg adc les (bad) inc dec or shl outsl dec lods dec pop sub sub cmp mov jg mov sub cmp xchg icebp adc push (bad) (bad) lcall or xchg and (bad) test cmp xor sub ljmp xchg (bad) (bad) jmp dec lret gs popa mov lds mov negl xchg pop sbb popa test aas cmp call adc std or sbb add xlat ficompl fimull sbb cmpb popf xchg jb out jo imul ljmp mov je insl mov push (bad) jecxz push mov mov ja ficom (bad) (bad) fwait jg adc sbb add aaa mov sar es outsl xchg add adc fisttpl mov aas cmc xchg cs mov pusha mov movsb sahf outsl clc (bad) (bad) sti or jmp fimull push push in jns dec pushf stos (bad) push inc out (bad) repnz in lock mov divb fwait mov pop adc xor mov mov (bad) lock pushf pop xchg out movl mov add sbb test into lret pushl rcrl xor insb scas xchg loope push enter (bad) sbb jae outsl cli mov adcb shlb addl popf xlat fld (bad) lcall lea insl nop xor xchg jo (bad) ja inc xlat imul push add cmp stos adc xchg adc jnp dec aaa out push mov decl jecxz xor cltd mov cltd popl fs lods sub cwtl mov or (bad) xor (bad) inc lods pop mov jp mov (bad) (bad) (bad) ljmp or ljmp push repnz scas jecxz pop cmp std int3 add insl out adc cmp push pushf test add int3 mov push cmp or and and mov mov fcoml mov xchg sub (bad) repnz shlb scas pop xor sub (bad) pushl into pop jl (bad) mov mov sub gs (bad) (bad) (bad) ds stos pop lods stos outsl push or (bad) lret mov xchg cmp mov hlt mov jno push inc (bad) dec xrelease es mov out or das (bad) icebp (bad) (bad) inc ret (bad) pop and xor aam (bad) popa mov pop arpl sub (bad) (bad) jg add ljmp into cwtl jg mov or pop sbb call notl push dec pusha data16 std call dec push outsl xor subb (bad) (bad) fldt xchg sub fldt popf jp push dec aad ja mov or (bad) mov mov (bad) and scas xchg mov rolb out add cmc incl les sahf cltd sub movsb push xchg (bad) incl add insl test sbb in mov (bad) das mov (bad) jmp push push push (bad) rorl jle int3 and (bad) (bad) (bad) call adc cmovno sbb shll fnstsw jns jae lret sbb jg nop dec sahf popf and add jle pop jmp fsubl inc adc incl xchg mov arpl (bad) sar popa fidivr push mov jmp dec (bad) (bad) ljmp neg push in cmp sub lds jle lods cmp adc lcall sarb nop (bad) push pop in and (bad) clc (bad) sarb inc lahf cwtl and bound inc sar fs ja lea push (bad) adc xor (bad) cmpsl push xlat test push (bad) fiaddl das (bad) (bad) ljmp loop test jmp jbe popa stos xor add xor inc dec or push pop out push inc cwtl decl lcall xchg jo es jbe jo mov sub (bad) (bad) (bad) (bad) cmp mov lret mov in repnz jbe pop stos add out arpl pusha jne test push xchg outsl pop (bad) (bad) (bad) jmp dec mov sbb imul jns leave lret jle jle xchg in mov int3 bound cli stc inc adc sbb (bad) cmp dec mov jecxz xor popa dec sub xlat out imul or stc rclb cmp dec push mov sbb arpl pusha fidivrl push pop mov dec mov insl or ret pop mov (bad) pushl cmp popf mov pop pop dec fiadd jmp (bad) (bad) jg xor pop addr16 stc cmp add or inc mov pop mov (bad) (bad) ljmp or out dec or dec aad sti shrl cmp jg sub push adc popa repnz sbb push pop inc mov mov xor sub stc ljmp incb xor pop jp out into sbb shr leave repz (bad) (bad) incl pop cmc cmc out pop mov aas imul jle push jo insb out xor adc andl cmp icebp fnop iret mov pop cmp jbe dec repz int negb push cmp mov pop and scas dec sbb int jge push mov push push lods (bad) jg flds cmpsb xor out sbb add imul ljmp sbb movsb ficoml xor xchg pop js in jbe sub jmp fdivr (bad) (bad) lcall aaa mov enter out shr cmp rorb sub or jb sahf insb sahf orb dec test add mov xchg dec pop sar (bad) fbstp cli mov rcl ret je sub xchg mov inc adc ja adcb test inc and jmp icebp add pusha clc inc or adc decb ja aam push fs rorb dec out scas mov mov lahf and xor mov xor (bad) (bad) inc in mov jae fwait test pop lods pop int3 outsl cmpl mov dec ret (bad) (bad) (bad) pushl shl (bad) jns cmp gs sbb cli pop aad movsb mov inc sbb lcall push int push jo movsl sub cltd mov fld pop cmp in (bad) pushl hlt dec (bad) dec mov fldt das adc jmp jns enter xchg pop xchg pop hlt mull (bad) sbb dec inc into movsb fwait pop dec push mov scas adc inc lea pop inc jmp push (bad) decl (bad) xchg inc fist xor adc cmp sbb fmul push cwtl or xchg mov stos mov cmp out xchg sub scas sub std bound pop aad lret xor pushl clc add push xor mov ret mov (bad) (bad) (bad) decl xchg cmp jecxz movb or imul mov mov dec divb test mov dec mov sbb xchg fwait imul jno mov mov xor (bad) (bad) (bad) jg inc arpl in hlt adcb xchg lcall (bad) std ret adc (bad) iret sti pop mov and mov (bad) lock cld (bad) out xchg dec (bad) in mov jl push loop decl jb mov pop add cmp xchg sub sub hlt test (bad) xor (bad) scas mov jb or ljmp jg incl inc adc cmp repz xchg cmp pushf ja adc inc xchg scas add ds imul pop cmpsl div add and jmp aas mov aas mov push xor (bad) mov lods sub subl mov test sub push mov decl fldenv mov push or add loope xor (bad) ds (bad) (bad) mov outsb or mov xchg and out mov sub lock (bad) (bad) lcall xlat jbe mov adc fucomi sub stos scas int3 dec movsl cmpsb cmpsb dec mov sbb (bad) lcall cmp and mov test push mov mov cmp lock sbb jns cld adc adc push cld (bad) jg mov (bad) sti jae js call cli cmp into fs pop pop ljmp push sarl ret sub movsl jb movsl or aam jg mov ljmp and lea mov loopne dec decl lock insb xor xchg data16 in xchg cs cmpsl add (bad) mov clc imul xor push decl xchg clc cld dec jecxz jbe pop mov adc jmp test lret jno jbe inc dec (bad) call sti in push cld mov cmp ja imul pop push push in into xchg jns push imul scas mov subl inc jp (bad) (bad) incl pop rcl sub hlt push dec fldl jg jge jns pusha (bad) mov imul icebp fmuls lcall add invd jecxz loop mov call (bad) (bad) (bad) dec xor stc (bad) in test stc shrl repz je pushf cmp xchg sub (bad) (bad) (bad) out lock jns lods jge xchg addr16 xor and adc add (bad) (bad) (bad) jg push daa xor sti imul arpl imul (bad) (bad) call jns shrd adc sbb test aad int sub cmp pop std mull fdivr (bad) out cli mov imul push and cli push movsl pop in out (bad) mov ja call (bad) (bad) (bad) (bad) jg loope jae sub lock lods pop in int3 mov pop lcall jo sub xor mov mov push stc mov jns mov cmp (bad) (bad) mov mov mov push or push fnstenv rcrb dec cli mov mov std outsl xchg lods pushl mov sbb loop sbb cwtl (bad) cmp (bad) mov cmp sub cmp add fiadd dec shr mov addr16 rcrl or push int3 sbb xchg loope (bad) mov retw fnsave lock (bad) ds xchg fwait and imul cltd cld sbb rorb cli mov fcmovb (bad) jmp das cmp lahf int sbb xchg dec cwtl loop adc (bad) (bad) mov repnz jg mov das and sbb adc adc cs push (bad) (bad) (bad) lcall xchg lea mov adc mov cmp add jp or add add mov sbb (bad) jmp in dec cmp in dec inc aam nop cmp insl push (bad) in or (bad) mov int3 fidivr jbe cld addr16 xchg out mov test cmovb fwait pop test dec or pop xchg jbe add xchg sarb idiv (bad) mov jnp in mov daa enter push push xor insl cmp (bad) (bad) mov test inc faddp into enter and or loope xlat mov incl insb jp xchg scas clc stc or outsl stc pop arpl (bad) (bad) jg mov mov pop cmp push cltd mov cmp loop decl je ss sbb dec add ficomp dec add xchg cmpl lret arpl aam aas mov hlt ljmp or sub xchg or fwait cli and shrb ljmp jmp jae adc clc inc dec (bad) push in dec push adc loop pop test lea es insl or icebp mov pusha or les jge jp jmp daa hlt lahf push inc push dec test sbb nop (bad) lcall jbe test lret (bad) mov mov iret sbb imul (bad) (bad) pushl jbe ja cmpsl xor mov jb xchg jo aas fbld scas lds jbe (bad) fbld lahf pop ret mov (bad) js clc cmp arpl (bad) (bad) jl fmuls ficoml fimull movsb xchg repz lods nop jmp and pop loopne loope andl test lock out push lock out cwtl ds push aad (bad) icebp add and pop pop movsl fidivrl lcall push in fdiv jns and sti rclb ror in nop dec (bad) lock imul sbb insb std incl jl pop push imull fistpl ja sbb (bad) (bad) jg (bad) add add cs cmp mov (bad) (bad) (bad) lcall stc lahf int3 arpl xchg lret in std sbb loope push lock (bad) std pop mov push or push dec or jp mov fcomp cs (bad) ljmp int3 xor dec push rorb ret or mov adc loop xchg mov and mov mov dec inc and mov push bound jo xlat xchg adc test (bad) clc (bad) (bad) cmp add daa mov gs pop fimul adc (bad) (bad) incl test push lods sbb sub push pop ret (bad) and xchg aas push (bad) fwait inc jecxz scas fcoms inc xor (bad) (bad) call jl add or ret inc add mov das imulb dec push clc inc sbb inc dec cli sbb sbb lods xchg xchg jle xchg lods movsl add and insl pushf add push mov lahf leave pushf fs pop push cld pushl rcrb push (bad) movups inc push sub lods int lods scas mov jb inc mov pusha lods (bad) ljmp adcb pop mov in inc push pushl cmp (bad) (bad) (bad) dec jmp lea sbb inc ss rorl xor cmpb (bad) pushl mov pusha icebp clc daa cltd aas icebp lahf push fbld lea dec dec cli (bad) cmp cmp jge ja (bad) call cmpsb fucomip stos outsb add arpl lock stos leave sub jge,pt mov jecxz cmp fldl scas or sub cmp cld sbb sub pushw loop or test jmp push test (bad) mov pop call stos cmp loope xchg icebp pushf in jno repnz mov jl sbb repnz inc inc jle movsb pop mov mov pop cltd dec xor loope (bad) (bad) ljmp and push inc (bad) cld mov mull das mov mov cmp sbb dec lret adc push popa out mov dec xchg jae cli (bad) call flds mov adc mov pop pop xchg (bad) pushl add stos dec ret lcall mov (bad) (bad) jg mov dec adc push or cli pop cld push jl shlb ror cmp fdivrp (bad) (bad) jmp mov incb jno xchg xor mov daa adc mov cmp incl mov cmp xor fucomp rcl add es xchg sub jp negb (bad) (bad) jg frstor sub pop test js jnp xchg pop push inc ret mov cmc fsubl (bad) (bad) ljmp aam push popf xor adc mov or (bad) (bad) fistp rolb (bad) (bad) sarb mov stc xchg xchg mov add nop jb pusha inc lcall andb inc je scas popa (bad) fbld xor aas dec mov inc (bad) xchg (bad) (bad) call mov movb daa sbb mov sbb pop mov xor sub jl out adc lods sti add (bad) (bad) inc and adc popf loopne (bad) dec mov cmp adc push int3 mov outsl inc mov insb js and outsl mov jbe es rorb scas pusha pop pop or subb cmc decl fsts loopne sub or sub (bad) (bad) decl shrb ljmp push iret add pop or sahf scas add ret ljmp (bad) lcall adc jnp out sbb add adc jl scas inc js and dec (bad) ljmp (bad) repz dec mov dec or xlat pushf add cmp rorl fisubl (bad) (bad) (bad) (bad) clc out xor sarl adc ja sbb mov (bad) and push idivb js (bad) (bad) jmp sbb popf xor sbb lock sub aaa dec dec sti (bad) jo lods adc inc inc push (bad) pushl xor xchg mov arpl enter fild pop dec mov aaa std (bad) in mov xchg lret loopne sub cmp daa xchg pop adc lods push mov je (bad) (bad) call cmpsb sbb bound nop lahf mov mov in xor mov push xor (bad) das or std cmpsl add mov jno mov test xchg (bad) out xor sub add jno outsl scas sbb lahf mov adc pop xchg fstp adc or aam outsl xchg mov add loopne rclb push sahf dec pushl xor (bad) (bad) ljmp (bad) inc insl mov adc fnop cmc dec pop jns push iret imul mov into imul jmp push sub (bad) (bad) jg jae and cli adc and les xor mov jg jns xchg mov (bad) (bad) jmp rcrb mov adc adc (bad) xchg and loopne cmpsl loop add jecxz add in clc pop (bad) call and sub xchg pushf and add dec iret mov hlt incl sar (bad) loope mov xor xchg jnp xchg and mov mov (bad) (bad) (bad) (bad) jnp sbb lret mov rcrb mov push sub movsl sbb jmp fadds popf cs push loopne or scas push into mov sbb cmp and lcall out pop fincstp dec add mov ljmp ret lahf jg (bad) inc shlb jae (bad) int3 in adc mov push ret or inc lock popf (bad) lock mov sbb es (bad) (bad) inc sti jmp pop pop or das aam inc or rcll outsb mov (bad) (bad) (bad) decl outsb lret dec lcall outsb test jge mov loop fsubl (bad) call add jge sbb rcr xchg das pop sub pusha pop mov fstl (bad) decl je aad mov pop push cmp mov lea cmp rolb inc mov (bad) lcall out pop (bad) mov insb aam cmp sbb xlat cmp mov (bad) (bad) lcall les sahf hlt cmp movsb (bad) xchg sbb out mov movsl repnz call cld movsl add incl jb pop into sbb pop and sbb lcall lods pop bound inc mov inc lea inc xchg inc lds adc (bad) (bad) (bad) (bad) mov push nop mov ret gs cmc or mov fisub pop cld inc hlt jae,pt and jo xchg pop mov pop in xor or pop (bad) (bad) (bad) pushl (bad) (bad) jecxz mov popa mov das pop push jecxz lahf or ljmp (bad) cmp call into test std pop int nop cmp repnz bound cmp cs dec jmp inc push cld adcb stc inc lods aas fwait and (bad) mov addr16 add popf popf xor lcall pop or test sub sub (bad) (bad) (bad) decl test push adc sub inc test call push dec or fisubl push incl arpl call scas cmp mov and add loop add mov mov pop clc (bad) (bad) call fdivl leave jecxz mov sbb xchg ficompl test xor cld ljmp or pushf push xor pushf imulb int lods incl mov or cmp xor icebp xchg and jnp xor decl cli push push dec stos jmp pop test and lcall lock ss repz inc mov test (bad) and lret pop ja sbb std mov test ljmp add popa imul jecxz pop adc mov in (bad) (bad) (bad) call fdivl dec pop js insl ror jecxz test cld into cmpsb jno mov mov into pusha fcoms icebp sbb decl mov cmp adc and add pop (bad) sbb mov jmp (bad) pop rol sbb adc inc or icebp (bad) decl jecxz imul sub lahf ds ss or ffreep popa out sbb inc cmp sbb popf (bad) icebp lcall pop cmpsl cld hlt dec aas cmpsl dec push call pop sbb cld nop lds imul mov lret pop addl fstps jmp jns sub mov and outsb leave push popf inc add adc leave jbe subl fldl fistpll incl cld scas cmp int3 addl xor inc mov mov and pushl aaa add mov lods xor xor fdivrl lock lea push add sbb dec scas scas xchg fnstcw cmp fisttpl xor sbb xlat jnp negb (bad) (bad) jmp jnp pop inc jno inc ss faddl pop pcmpeqd xor push pop or jb (bad) (bad) (bad) decl mov loop mov int3 or std arpl push jb (bad) pop dec dec dec ret in jg sar jge popf add idivb out mov ja hlt (bad) (bad) jg repnz ljmp pop push in loop dec cmp mov scas enter push sub lds cmp out adc shll jb xchg sahf add mov ja mov adc clc (bad) (bad) decl mov arpl lock insl push cmp pop mov pop outsl (bad) ljmp fistl ljmp mov in mov lret jmp xor and sub ror outsl scas and (bad) mov add insl mov js jg insb fcompl sbb lret jle loop (bad) cld stos out or mov in push rcll cmpsb fildl (bad) mul or hlt ljmp sub mov cmp (bad) and ss fwait jmp popa adc (bad) out mov fxch cwtl rorl insb (bad) (bad) (bad) pushl push jmp lret fdivs inc sub adc stc imul xchg mov (bad) (bad) decl sub add fsub adc jnp int cmp mov jg dec and and inc sub (bad) (bad) decl xchg hlt mulb lods jbe cmp mov xlat popa jp jnp jb cmp decl or andl push lock push lret cli call clc xchg mov mov loop pop dec sbb dec mov adc negb (bad) loop test mov add mov and outsl (bad) (bad) call dec movsb outsb ss adc cmp hlt and mov inc inc enter nop daa out leave les jg pop (bad) (bad) (bad) (bad) imul and xchg das cmp jecxz fstps lock add call mov jg jne movsb arpl aad fimul push mul jmp mov sar (bad) lcall test jno into insl out jp test repnz (bad) cli imul cld call inc cmpsb stc sub outsl jnp cs mov adc (bad) pushl push jge jmp add adc jle sbb cltd insl inc jp sbb (bad) jmp adc cmp mov daa mov hlt sub (bad) (bad) (bad) incl test pop (bad) fnstsw shl aaa shl push pop or cwtl xor and add add adc cs pop cli ljmp call pop or add bound repz (bad) decl jl sub add (bad) (bad) ljmp in pop fstps pop lods lahf adcl (bad) shrb pop cmp xchg sar (bad) les repz sbb cld inc loop (bad) (bad) (bad) pushl inc sub and push movb arpl roll rorl stos (bad) (bad) incl mov and popf jae dec lds dec push lahf ljmp add shr in or into jg mov xor or in jne dec popf hlt mov ja movsl ss (bad) jg jl mov and mov lret adc inc mov or xchg jg or dec dec imul lcall (bad) (bad) pushl xor sbb ds xchg call sarl shrl out (bad) jg movsl roll or lods inc test (bad) (bad) jmp negb fucomi cmp dec mov sti loope adc mov push add jp or out mov std int hlt pushf ds jg jne mov mov pop fisub pusha fadds cmp or es incl push in cmp or test (bad) mov jp stos les insl jmp lcall xchg (bad) ljmp sbb cwtl cltd mov (bad) fs xorl nop add (bad) loopne into xchg outsb (bad) ss dec or ja mov xchg mov test push mov aaa xor xor mov movsb xor dec push jbe aaa jecxz (bad) imul pop je arpl sti mov cmp lds std int push xchg scas lock out xchg jae decl dec jae (bad) call dec mov mov (bad) repnz or (bad) jmp in and popf (bad) repz mov adc jle (bad) fnsave jmp adc fidivr cmpl lret (bad) jmp je xchg cmpsl shlb out jmp inc mov adc add cmpsl jne push mov (bad) (bad) (bad) jmp popf loopne subb cmp mov pop sub and adc or xchg or dec push (bad) fmuls xchg and dec (bad) (bad) (bad) (bad) jmp mov adc or xlat nop push cmc arpl mov out jecxz imul mov push (bad) adc rorb popf outsl stos jns insb out inc and negb xchg hlt je cmp xor (bad) (bad) call popl xchg imul jle aad add movsb cmp inc push (bad) fistp (bad) outsb cmp push and sub or jae cmp jbe test (bad) call add (bad) dec call inc test mov push (bad) (bad) out mov pop jbe xor outsb mov mov cmp dec pop mov dec push xor inc nop inc xchg push popf mov (bad) stos inc xbegin dec xchg int3 sbb subl out or notl pop call cmp dec jb les or cmp cmp add cmpsb pop pop iret lods je (bad) out xchg or scas mov or jno or lret stos lods mov (bad) (bad) jle daa aad outsl fwait nopl or (bad) (bad) mov dec out jb inc rcrl test pop inc scas mov stc cmp dec (bad) jg sar ret (bad) dec pusha les mov sub (bad) call lcall sbb pop lds mov dec (bad) int3 lock (bad) in aam push dec int fyl2x faddl aam test mov jg scas push repz loopne popa inc out or incl push jmp mov icebp inc outsb and insb push iret inc sub (bad) (bad) incl cmpsb sub loop mov jecxz pop sbb or push lret clc setb (bad) out push pushf je push inc hlt pop pop adc (bad) (bad) incl jg xchg movsl sub or adc in inc cld in nop push lea pop push (bad) jmp scas sbb mov xchg cli mov adc cs lock decl push sbb sbb stos jb jp push movsb test iret lock jg push sbb dec mov jp movsb pop dec (bad) stc inc outsb or imul pop adc iret sbb nop dec std jbe cmc pop clc in or ja (bad) lcall out add adc dec push test (bad) ljmp fidivrl pop fdivl mov pop cltd xchg out sbb scas mov dec out sbb scas lds pop pop imul and dec ds xor (bad) (bad) (bad) cmp test jb loope aas push imul push daa add adc call add test xor mov xor xor xchg (bad) jg or sbb cltd push (bad) pop jbe addr16 cli jg (bad) mov movsl loope and bound dec sti outsl dec inc xor sbb jmp add inc sub (bad) mov test xchg out outsb lahf fisubr hlt lahf popf inc pop add adc clc scas cli lcall jbe test pop sub push sbb mov sbb mov lods out movsb inc loope mov icebp pushl push imul dec test jo mov mov (bad) jg or mov ljmp lahf in insb and jg popf adc lcall repnz jg mov call daa dec lret cmp shll sub nop jb mov popf cmp (bad) (bad) (bad) call das movsl xchg adc testb rolb add xorl xor lods incl cmp push cmp push loopne cli or jmp movsl dec or xor mov scas xchg movsl add (bad) (bad) pushl push pop ss jno sub ss movaps imul jle jo mov lcall cmpsl data16 (bad) in sub stos add (bad) (bad) mov int fadds out out (bad) or push pop mov push out (bad) (bad) (bad) (bad) call cmp mov jo aad mov out lcall (bad) (bad) (bad) inc xchg mov mov sub pop sub dec (bad) and push mov mov stos (bad) aam jg (bad) mov inc je cli outsb fcomps push mov adc push mov jg (bad) lret hlt es adc loopne cld pop ret popf mov add bound out test xchg dec adc aaa ljmp in xchg idivl (bad) (bad) lcall and cltd daa jns xlat iret insb clc inc aaa inc mov and cmp sbb jl (bad) (bad) (bad) ljmp sbb das sub cld data16 xchg test xchg inc fcoms movups or pushl jl mov sbb (bad) insb jo push and dec jge push sar or (bad) pushl out push xchg mov nop add mov std aad mov inc dec sarb dec loope inc adc push mov push cmpsl pop in push add xor xchg aas (bad) ljmp jns cmc in jbe mov pop sbb pop je dec fwait loop or dec sub lds jbe daa hlt es mov sarl xchg jo (bad) push jmp ret xchg sbb mov and pop test mov cmpl loope (bad) (bad) incl or sbb mov pop shr mov inc jns (bad) mov test subl (bad) (bad) mov xor loope and cmpl rolb jo xchg xor or (bad) ljmp imul (bad) or sbb test je mov pop cmp xor scas sbb mov xchg adc ja pusha (bad) push dec lcall lods push sbb jbe jecxz arpl and movsl das dec cmp ret fsubrl mov mov dec mov (bad) ljmp (bad) aas pop test pop std xchg jae outsb icebp stos dec fwait adc fbstp nop push in and out lock inc outsl mov scas psubusb out movsl dec (bad) mov or push shll jbe mov (bad) clc push mov test (bad) (bad) decl cmp int3 test ss lock stc iret cld test sti (bad) (bad) (bad) jmp pop movsb pop sti cs adc sub addr16 xchg ss xchg das pop bound xor cltd or loop (bad) (bad) sub stc mov mov mov into push into jp (bad) pop jo mov xchg pushf inc icebp sub (bad) fdivs add shl (bad) (bad) (bad) fucom (bad) mov stos xchg jp stos out subb (bad) lock fstpt inc pop (bad) (bad) (bad) fistpl je xchg cmp bound adc mov sbb (bad) (bad) decl sbb mov outsb pop (bad) ja pushf mov mov xchg and dec add fmuls (bad) mov mov inc and scas sbb cmp add cmc pop xor in decl mov mov mov test inc sbb mov jns mov pushl sbb mov and bound push add xchg cld add adc xchg jge mov (bad) pushl sbb sahf adc addr16 xor ret and pop cltd iret push sub fildll jne leave add pop adc mov mov jg (bad) adc push inc mov jg loopne es int cld (bad) ljmp push sti xor mov sub dec or mov lock xor pop outsb or dec call mov mov (bad) (bad) (bad) call xchg rcrl xor pop mov pusha mov pop loop pop mov mov mov outsb (bad) (bad) (bad) incl mov xor and xor hlt or push pop jb test (bad) pushl fcmovnbe or inc popf cs cmp (bad) insl xchg pop pop lds loop std (bad) lcall movsb inc out cmp (bad) push lods lahf mov jge jp and stos cmpsl (bad) (bad) jg sub aad outsl pop lock rorl (bad) xor xchg in push (bad) (bad) (bad) (bad) jge mov xchg fisubrl mov rcrb pusha push xchg (bad) mov pop cmp cld ja decl cld mov adc (bad) and pop cmp jo fisttpl loopne insb jmp or pop scas shl jb jb pop and clc stos and mov das dec mov lock scas pop pushf hlt call or xor loopne bound sbb mov insl ja dec and cmpsl lret pop dec dec stos push cmp lret or and out mov (bad) (bad) (bad) incl sbb pushf fimull fs js int pop xor dec or inc out jmp fisubrl stos sub mov jnp push and cld or xchg pop pop ficoml adc cmp xor add pop or in iret pusha xor insl cmp (bad) (bad) lcall push inc (bad) mov push (bad) push lret cs and repz (bad) (bad) (bad) decl test mov jbe pop mov or iret test imul dec or inc sub push adc adc mov std lcall or out pop sbb ret (bad) leave jbe pop push sti lret add std (bad) call mov (bad) cmc and cltd sub inc push xor and jmp in loope (bad) pushl fs adc cmp dec lods inc (bad) pop mov pop mov mov call std jmp cld jge jns cli aas cmp pop adc (bad) out frstor cltd push fwait (bad) (bad) fcomip mov xor sbb sub cmpsb cwtl xlat ret into aas les mov xor push jb inc js fwait lret ja xchg inc push test lods jmp inc cwtl mov (bad) movsb xorl (bad) ljmp nop cmp das jp sub int sub sar (bad) (bad) pushl (bad) mov or jno les je push rolb loopne fisttp sbb ja call (bad) lcall xchg fcoms imul mov jmp test xchg (bad) jg push cmp pop fstpt mov jbe stos int3 xchg inc dec lret test add clc xlat sub cmpsb (bad) (bad) (bad) inc sbb sub dec jge gs outsl int3 pop popa mov mov ret (bad) fs jmp push jns into add and fs mov (bad) (bad) lcall inc pop jp add and mov js das lods das aam xorl (bad) (bad) (bad) push je add flds cli or stmxcsr lret nop addr16 dec je (bad) pusha inc push inc ret and push lock ljmp aaa sbb mov clc (bad) (bad) pushl js xchg inc or es xchg hlt out fstps iret fidivr pop (bad) cmp (bad) xor ljmp or mov jbe adc (bad) ljmp jns cmp sbb imull xchg inc xor mov out ljmp call push mov and sti jno sub hlt imul cld (bad) decl cmpsl fidivl vaddss xlat xchg push pop mov (bad) (bad) (bad) fist icebp jne adc pop pop mov imul sub dec imul mov (bad) (bad) inc jnp ja mov in pop in pop xor xchg pop jl (bad) sbb dec lcall bound inc (bad) loopne mov cmp mov cmp lds shlb lea outsb dec add xchg insb xor (bad) (bad) inc movsb xchg aaa insb pop pop outsb adc mov pushf popf mov movsl repnz mov (bad) fnstcw mov scas rorl mov (bad) fs mov jnp mov lock sahf sub cld loop xor add xor jmp or (bad) pop sarb push pop int3 jne jl mov std (bad) jmp imulb aad inc leave (bad) xchg push cmp fwait mov fbld (bad) hlt fcmovnu test (bad) clc push cmp sarb inc jl popf iret cld add and cmc add inc decl mov jo nop hlt scas aaa cs push sub or and xor jo add mov push or (bad) hlt seto ljmp lcall inc in repz in pop out dec push adc je sub ljmp (bad) fbld sbbb sbb imul (bad) xchg sub std (bad) (bad) (bad) (bad) cmp lahf push int3 lods sahf shl imul (bad) nop dec loopne xchg jae push add (bad) pop add mov push sarl orb icebp idivb (bad) lcall adc fcompl lods sbb add pop push inc ljmp (bad) insl ljmp add movsb inc (bad) push dec ret test (bad) (bad) (bad) lcall push pop inc xchg and push xchg fdivrl loop xor loopne leave cmpsl leave imul inc in or add in (bad) mov aad sbb add ljmp dec ficomp stos lahf push xchg pop inc (bad) out pop pop clc push sub lods mov fsub popf outsl mov (bad) sub aas lahf (bad) cmc sub mov mov scas sbbb cmp icebp dec xchg bound (bad) (bad) jmp sbb ds jge or xor aam mov cmp (bad) out lahf das adc xchg decb ret leave push or add cli (bad) (bad) (bad) fcomip (bad) test add cli dec roll test mov or jns sub or mov mov sub fcomps or call jg lods leave jmp mov pop pop jg adc in or lds lcall xchg cwtl xor push sub pop sti jo or add nop in (bad) sbb (bad) (bad) lcall insb sbb pop mov push jp pop jle stos cmpsb repnz ds hlt push daa jl std (bad) out clc pushl or bound pop dec fldenv movb out rorb adc scas push stos (bad) (bad) inc repnz xchg pop cmc test (bad) (bad) leave mov or mov lods push push sarl (bad) (bad) incl out lods sub jae dec movsl pop jne popf daa mov lods cmp mov (bad) (bad) call pushf and push jbe push out xchg jge pop add stos xchg mov lea ljmp movsl into dec jge add (bad) (bad) (bad) incl repnz mov sbb mov add clc lahf and (bad) (bad) call loope ds jae cmpsb ja aas push cli push add xor sbb stc enter pop inc daa popa sbb mov push inc and fcomip (bad) mov rorl cmp jg mov adc (bad) (bad) dec cmp mov xor repz mov icebp jbe imulb shll jae lods xchg lea push cmp (bad) mov sahf mov jns xchg insb push ds and fistp inc popa lahf sbb je aaa add cmpsb call (bad) (bad) dec fcomp loope loop rcl cltd mov xor fiaddl jno jge les xlat pop sbb jg jg add mov imul aam je dec insl nop rcr fprem pop (bad) insl std (bad) jmp xor mov xor and xchg adc cmc mov (bad) jg rcl jb jnp jae test sbb sar xorb pushl pop sbb je popf dec mov (bad) jmp ret fisubrl cmp and pop (bad) cmp push mov cwtl push arpl stos cmpsb (bad) and cmp cmp mov int cs shrl inc int3 cmp (bad) (bad) call fwait aaa insl and xor loopne mov adc std pushf xchg out scas and mov xor (bad) (bad) pushl fistpll inc sub repnz fldt rol xchg mov hlt mov push pop add or aam int3 repnz addr16 fnop dec mov sub mov mov (bad) insb or pop mov movsb fcomp jbe xchg push fbld pusha push rolb sti test inc aam icebp (bad) mov and xchg xchg mov xchg xor incl cmp sub outsb inc (bad) cltd lret decl aaa out cli pop push orb push or fs xchg addr16 (bad) (bad) jmp push mov es add jae cltd psllq clc fstpt aaa push push jge fldl test (bad) (bad) aas cmp dec mov xchg iret dec fadd and (bad) cmp jne xor mov (bad) mov outsb fwait xchg pop sub sub pop test sbb xor (bad) (bad) fist add xor mov repnz jns dec cmpsl int aad (bad) mov ja mov mov mov lock cmp test (bad) jg sub adc push adc jb lahf cmp mov jmp loop or scas imul into jb (bad) (bad) mov das test imul or (bad) (bad) (bad) (bad) cmp pop cmpb es jle xchg push daa dec cmp loopne aaa call jle pop add (bad) (bad) dec mov popf hlt in cmpsb cmp test fiadd jle and cmp and (bad) sbb cld in pop xlat add std adc mov and (bad) (bad) (bad) call leave repnz enter andl (bad) cmp fwait mov add ds xchg (bad) (bad) decl pusha das pop iret scas adc (bad) push lret push dec outsb jle (bad) jg gs cld clc push push lret stos les (bad) incl in lods sub and fidivl push lea imul adc pop add das push pop cmc mov subl lock (bad) cmp sbb insl data16 lahf int (bad) mov insb dec (bad) (bad) (bad) (bad) fisttp setge push jmp jns xchg nop pop leave lock test push xchg ja fwait jmp sub push xchg lods ss mov (bad) adc stc fnsave jecxz popa fbld jmp in rcll nop sub jmp push test lret popf pop (bad) nop sub xor fldt std out in lret sbb and inc cwtl imul fimull (bad) jg (bad) out mov jecxz lcall or lret add andnps (bad) (bad) jg xchg enter jle aad in or insb jg or loop clc insb ret mov (bad) pushl adc xchg sbb cmp mov pop xchg jle dec data16 ljmp and jle cs outsl jg jecxz dec jp (bad) dec pop test (bad) ljmp pop fildll sahf add xor int out add test add leave ds (bad) mov test icebp sbb or test mov mov cwtl clc and jne (bad) outsl jp sarl pop xchg inc jp jmp or (bad) je jb testl addl mov mov dec xchg add mov repnz jg and js scas ss movsb xchg push lock fwait or (bad) pop sahf dec mov dec push jmp sbb xor jg sbb jmp (bad) push in dec ljmp and movsl out and out je incl add stc pop decb sub (bad) (bad) (bad) cmp rep mov cmpsb (bad) sub (bad) out sub ds addl and dec add mov dec popf mov popf and adcl cmpl xor out les jecxz inc into into repz mov shll maskmovq cwtl (bad) jecxz sub jne sub data16 push or (bad) (bad) (bad) (bad) jge int arpl dec adc push loop mov mov push addl loope fcoml (bad) (bad) (bad) ds aas loop outsl lcall sbb xchg rcll ret jo mov (bad) (bad) ljmp aam add lahf push push clc inc jno (bad) adc or stos repnz inc (bad) jle mov sub xor push hlt (bad) (bad) ljmp in cmp add dec and test ljmp dec xchg fcomip push movsb cmp mov sbb daa (bad) (bad) (bad) pushl sbb add xchg fdivrl adc scas icebp out pop mov mov (bad) (bad) out xor repnz jns pusha sahf ret or fimull jns jecxz dec ss (bad) outsl ljmp dec jge (bad) jg call xlat push inc pop sub cs insb ds arpl and sbb in pushf lock lcall enter or cwtl and hlt sub push xchg or (bad) lcall mov cmp addr16 push mov les ljmp pop jg repnz fild adc sbb mov xor push and mov mov (bad) ljmp sbb rcll lret (bad) clc xchg cld (bad) (bad) out sbb mov fidiv mov pushf popa push adc call loope add sub (bad) mov mov dec ret lret cmpl and xchg add sub sub movl xchg cmp mov rcrl jmp jg inc pushf sar add movsb sub jge pop aas aas xchg xor sub pop push xor (bad) (bad) (bad) jg div mov add jmp sbb or jl into lods daa sti jb xor inc inc pop aaa orb sbb fucomip inc push (bad) fcomip call dec push pop in xchg xor dec pop (bad) call jecxz mov popf enter push lret pop call (bad) (bad) jg mov lahf push and (bad) or lds dec ret clc push adc and test daa dec pop mov (bad) fcomip pop sar out inc pop mov jno push aam stc fmul lock push pushf imul fmuls bound lds jo sub fidivrl (bad) (bad) cmp (bad) std sub call cmp mov (bad) (bad) ljmp cmpl movsb dec mov jo mov fbld jge (bad) (bad) jmp scas pop and loope lea add push aam (bad) setno add pop dec pusha and pop ljmp mov xchg hlt clc lahf mov mov clc dec decl cwtl pop pushf mov imul mov in je clc sti stos xchg (bad) jp rol pop enter (bad) fisttp adc jo inc in cmp enter (bad) ljmp scas jbe mov xchg dec adc add lahf xor mov imul cmc decl ucomiss cmp jo in lahf mov push push pop fadd add pop mov jecxz (bad) (bad) lcall and js push stos ljmp leave sub fisttpll imul (bad) (bad) mov fdivl xor cs inc into cltd enter adc outsb xchg ss (bad) jg add mov adc sbb dec ds cld (bad) (bad) lcall dec and mov aaa xchg jo push stos mov pop pop mov xchg repz clc mov pop push add mov in (bad) (bad) jg ljmp push in xor inc adc icebp (bad) push bound dec hlt pop rcll xchg (bad) fidiv test in daa jno (bad) (bad) lcall lret fmull fwait lds icebp pop roll enter push (bad) xchg xchg jb (bad) (bad) (bad) (bad) ljmp xor and sub into mov aaa pop ljmp clc inc jmp dec mov cmp jbe out cli (bad) (bad) ljmp pop cli push int3 mov (bad) mov pop inc jecxz push or push (bad) fcomip mov push movsl xchg xor xchg rorl int xlat lcall ljmp cmp fildll movsb push cmpsb arpl lret in mov adc pop (bad) fcomps mov (bad) fs out mov repnz aas enter fwait jp xchg xor xchg lea ror add repnz xorl mov je lret dec cli mov out dec add xchg stos sub int int mov js into xor or (bad) ljmp mov cmp insb stos int scas mov or mov dec (bad) (bad) decl cmc mov inc (bad) loopne decl xor pop ljmp pop mov dec cs dec lods push adc clc (bad) (bad) cmp cmp fiadd test add movsl (bad) (bad) (bad) dec jo sub rcll cs and test mov and (bad) (bad) (bad) (bad) jg fildll mov mov mov fildll jno and mov sub mov subl push jnp cmc mov mov sub pop lock sbb add fs dec push into mov movsb mov xchg mov loopne sub clc inc (bad) xor fptan inc js sbb (bad) ljmp rcr mov gs je xor jbe stc sub (bad) jg aam pop sbb enter pop decb inc mov mov xchg hlt pop dec rcrl scas daa divb out stos (bad) (bad) ljmp (bad) and xor icebp jno sti dec pop iret roll adc (bad) (bad) ljmp icebp fld jge mov or inc clc jle,pt add add adc pop incl cli push sti dec adc mov (bad) imulb out sbb cli mov pop lahf cmp push mov rclb dec lcall pop stos stc push scas dec mov clc lods lea and xchg movsb mov leave xor or enter (bad) (bad) (bad) (bad) (bad) or push ret test ja add data16 lods mov mov inc pushl cld call mov mov mov out (bad) cmp pop mov (bad) fimul mov movsl adc pop or cmpsl xlat ds (bad) (bad) lcall xor sub xchg mov jno mov clc (bad) sub or dec in push dec cli ljmp pop jne mov clc stos adcl sub bnd sbb jb dec (bad) (bad) ljmp add out (bad) leave sub ss push xchg inc jl jo push imul and mov das xchg movsb lcall imul call (bad) (bad) incl sbb imul outsb dec inc sbb jns lcall (bad) (bad) (bad) ljmp sti sbb jne push fstl xor inc popa cs mov dec (bad) ljmp pinsrw jmp pop pop xchg and adc lock add sub inc outsl iret cmp in sar cmp dec nop mov jb cwtl dec sub sub add add sbb lds mov inc into pop sbb shlb les push mov lcall cwtl push pop cli cmp add ljmp ds pop cmp jg (bad) jle and shlb mov inc incb dec int3 dec mov xchg jns mov mov stos lea cmp adc icebp adc fdivp add (bad) sub mov and jecxz mov sbb inc xchg mov fimull pop fld dec icebp adc (bad) lods mov (bad) mov out (bad) icebp mov dec or dec xchg add xchg inc imull loopne,pn or ljmp pop (bad) mov (bad) test jne and loop and (bad) fistl pop dec movsb (bad) negl mov xchg mov in setbe repz pop call loop cmp (bad) (bad) (bad) lcall mov sbb out mulb popf xchg adc dec jbe push daa mov mov lock decl stc dec (bad) cmp mov je mov fildll dec xor outsb (bad) ljmp lret (bad) cli outsb inc data16 cmp jl xor sbb leave scas in fwait outsb clc (bad) jp ficompl cltd pusha push xchg call dec in fcoms inc (bad) (bad) (bad) jmp clc pusha cwtl mov (bad) ja or pop cmp xor scas fimull or sbb (bad) (bad) (bad) decl cmp in scas mov jg push aaa fisttpl ret fwait test and cld (bad) call inc xor sahf fsubrp lea int fdivs inc jo cli jg mov icebp or push lahf (bad) fdivr (bad) call sbb scas sbb push jge out add xchg cld xchg pop push int3 xchg out fs dec les adc rcr push call clc pushl pushf lods cld in daa inc scas leave outsb pop fstps or (bad) out movsb aaa dec xor ja ja lds out xchg push test mov (bad) inc inc cmp nop xchg rcrl push mov out lret xor leave (bad) sahf (bad) (bad) (bad) jmp xchg xchg push fsubl out adc jno add mov pop aaa lds rcll out lcall or mov (bad) ljmp aas mov inc or sub jne mov push or les mov xchg cld (bad) (bad) (bad) jnp lock or test cmp mov scas jne mov aam (bad) incl pushf jae sub mov sub fwait dec scas enter push (bad) (bad) (bad) ljmp pop sbb xchg cmp or cmp bnd pop dec xor lea (bad) push scas cwtl ss pop inc fcmovnu cmp dec (bad) mov pop das je lods mov popa adc and push pop je jbe (bad) fbld ljmp cmp ja pop and xchg fsts outsl mov sar push mov cmp lcall pop sbb (bad) pushl out shr sub push cld lahf arpl dec sahf stos jb iret cld repnz stos outsl cmpsb icebp jmp rcl pop pop sbb lahf das xchg cli scas nop ja (bad) mov mov jmp testl pop and mov fcmovnb (bad) (bad) (bad) ljmp cmp and mov popa mov cwtl jge mov pushl (bad) (bad) cwtl sbb jg mov je mov (bad) lcall mov add movsl fadd push xor and xchg mov or sar call jne outsl jecxz jecxz push add out enter ljmp mov add fwait ja js and icebp sbb lea popa ja dec mov (bad) std (bad) ljmp mov pop mov movsl sbb inc inc faddl pop xchg fwait (bad) (bad) (bad) mov ds adc insl in test jno fiadd pop test push pop cld iret xchg mov es dec jne (bad) (bad) (bad) push mov bound lret jecxz push adc push xchg mov cmp and adc ljmp imul add test incl mov push repnz int3 inc sti mov push (bad) sahf push ds (bad) cld aaa sti pop rorb (bad) jp lret mov mov jp repz decl decb mov addr16 fcoms pop es jb mov add fisttp cmc std jmp inc jae decb cmp (bad) (bad) mov fstpl arpl fidivr das xchg (bad) mov mov stos xchg (bad) (bad) (bad) lcall enter (bad) sub (bad) cmp cmp inc mov push and (bad) (bad) (bad) incl mov daa mov loope xchg outsl or mov insl mov (bad) (bad) (bad) pushl cmpsl stc jle cmp inc pop out and adc cld and jecxz cmp inc std stos adc xor push adc jnp in push sub jmp cmp dec mov xor sbb rclb mov add cmc (bad) decl (bad) fisttpll pop lahf aas lret xor xorb mov (bad) (bad) (bad) (bad) js push daa jmp les mov lods push dec push or cs push xor mov jl mov and push iret mov std jmp (bad) (bad) or ret adc inc or sbb jmp sub imul in js (bad) jg and std roll xchg mov mov jne and (bad) (bad) lcall or cmp sub imul dec cmp outsb cs sbb jmp or pushl (bad) cmpsl inc mov cltd leave push popf inc fmull scas pop xchg (bad) (bad) (bad) (bad) mov sbb and daa inc fsqrt xchg add or add ret leave (bad) fcoml int cmp sbb fcmove int or sbb movsb or jmp lock test sbb gs cwtl (bad) (bad) mov test xor xchg cmpsb loope (bad) pushl sbb or sahf and dec mov cli aas mov sub pop ljmp xchg jmp lahf in fsubr lahf inc or movsl int3 icebp add cli (bad) cmp daa iret int (bad) pop in (bad) (bad) mov jb xchg jge sbb sahf or mov je cld aaa cli pop loopne imul push mov icebp push push in mov insl clc (bad) lcall sub test adc adc int3 cli jg fs (bad) fsubr mov cmpsl mov jne (bad) out shrb (bad) push lret push mov lahf cs xchg sbb mov aas es mov pushf and cmp hlt sbb xchg das (bad) (bad) (bad) jmp cmp adc in sbb add and orl lds (bad) (bad) jg mov pslld jmp fmul adc std (bad) (bad) (bad) out adc xchg mov int shlb leave xor inc aas in sarb ret imul dec jle jmp movsl pop (bad) divl cmp pop or cmpsb je (bad) (bad) (bad) (bad) mov xchg jle je sub inc xchg in inc mov jae and (bad) (bad) mov xor mov or push outsb xchg fisubl xchg pop sar (bad) (bad) (bad) fcmove enter mov fidiv inc cwtl mov lds pop jge clc adc sub (bad) (bad) (bad) (bad) lcall les push cltd lcall push inc ret or jnp aad bound incl push jno pop aad outsl popf mov lods mov pop xchg mov cmp (bad) (bad) mov dec cmpl ficom test out popf xor xchg inc pop inc mov lods add imul into jl (bad) and dec mov mov mov adc shlb call cmp dec xor add in scas test mov pop and mov pop adc (bad) call sub clc mov cmp jg push ljmp jl popf add data16 push cld pop movsb inc loop mov jbe mov add mov (bad) (bad) mov sti cmp lret gs sbb sub in rcr add and imul int hlt pop mov push cli (bad) (bad) (bad) (bad) out add mov cmp push mov jnp xchg or ja add jno dec inc loopne dec (bad) (bad) jg sub enter enter pop mov inc cmp inc (bad) (bad) lcall mov cmp mov pop out mov mov es (bad) jmp cld cmp adc mov sarl insb imul stc dec mov decl in inc push dec cmpxchg sub test imul sbb cmp scas outsb call mov xchg cmpsl jb xchg lahf or cld pushl cmp jnp push add and test mov cmp dec push daa (bad) or push mov xor cmpsb out (bad) cmpsl push inc data16 dec (bad) (bad) (bad) mov sub pop mov or push xchg dec shrl sub add cld aaa je fdiv (bad) (bad) (bad) jmp dec cmp cmp lret nop leave xchg sar mov test cmpsl pop scas std outsl insl mulb or jae decl (bad) addr16 xchg sbbl ret cmp push scas or sub ljmp test or mov shlb xchg (bad) (bad) (bad) (bad) pushl inc repz mov lcall pushf pushf pop mov add lcall mov and sub and cmp in mov push pusha pop shlb or sbb dec jmp mov mov sar (bad) repnz cs (bad) (bad) (bad) (bad) incl push or test scas or test int3 cmp lret enter faddp (bad) (bad) (bad) (bad) cld pop in and push mov and ficom hlt cmpsl cmc and fldl incb idivb xor sub sub aam mov scas sarl call (bad) out and sbb push rcll clc push push sbb xor push xchg inc cmp jmp ud2 cmp xor push imul js xchg inc inc mov pop mov cs adc lds fstps sub (bad) or pop push shlb (bad) (bad) out xchg pop cli rorb int3 andl pusha mov sbb push lahf in inc mov dec mov cmc outsl jmp fidivl cld (bad) (bad) pushl out inc add push incb inc repz sbb xchg out pop aad pop sbb (bad) incl pop push cmpsb mov add aam outsl outsb push push and (bad) jg dec sub and cmp push int addb (bad) jmp pushl mov or outsl sbb ljmp nop cmp imul push vmovaps or sbb (bad) js outsb jbe dec adc xchg mov mov enter mov stc lret add mov sub inc xchg test (bad) (bad) call mov inc mov (bad) mov mov inc aad arpl call loopne jbe clc add loop sub push loope mov shrl (bad) (bad) lcall mov (bad) ss data16 sub and sbb (bad) outsl adc cmp mov cmp pop sub loope jle mov decl cmp push in adc insb jbe movsl out and out cwtl adc jo bound xor bnd inc cmp mov sbb hlt ljmp jb lahf cmp mov dec lock ljmp aas jle notl cwtl mov or or ds inc lods cwtl in cmp rorl decl xor and jl jb cmpl inc popf loope sti cmp mov call aad mov repnz bound xor popf mov addl incl xchg notb test cmp int mov pop ss aam test je fisttp adc cmpsb xchg mov insl pop adc pusha mov (bad) (bad) (bad) jmp sbb cmp les mov loopne (bad) out pop aaa jmp add lcall cmp (bad) dec sbb sbb xor fnsave push std (bad) cli sbb sti lahf and lahf hlt dec dec aaa sub xor les rolb cli jle pop sbb imul cmp or pop jns pop movsl lret repnz or lcall mov rcrl inc insb inc xor sbb dec sbb mov lcall int3 hlt sub loope sub aaa outsb cmp push pop int (bad) (bad) ljmp int3 push jno adc mov (bad) scas jns xchg (bad) ljmp dec iret std push popf jmp push jp (bad) xor xchg sbb pop sar shll xchg es mov out cli cmpsb mov lea sahf lret mov iret (bad) (bad) jg repnz lea call aad out ret out or iret sub push (bad) pushl lret jbe xor call xor (bad) (bad) (bad) mov and mov imull pushf stos sub cld sub push js enter inc out (bad) (bad) (bad) incl out (bad) jns push (bad) cmp xorl mov add mov jge xor mov pop xchg das push (bad) pop int3 test adc (bad) (bad) lcall dec dec out push jge mov fildll cmc add das loopne (bad) lcall movsl rorl xor dec aas bound movzwl (bad) (bad) mov imul (bad) sarl mov ja,pt dec out push inc inc cmp ljmp fidivr push xchg out jg nop jno mov (bad) (bad) (bad) pushl mov loopne imul pop movsb push adc adc into inc in (bad) ljmp cli test lcall lahf mov movsl pop (bad) outsl mov (bad) (bad) (bad) jmp or (bad) xor out and adc adc xor sbb (bad) (bad) (bad) pushl mov sub and sahf or add mov ret arpl test lock fdivrs fisttpll loop scas outsb jnp mov loopne sti icebp fs jg mov sbb xor cmpsl pop pop insb mov (bad) (bad) jg aaa sbb arpl ss sub ror lret test inc pop imul jo negl cmpsb enter and icebp jne loope call es push add mov vxorps sbbl int3 push out loopne mov fnop xlat xchg mov lret sbb jp,pt ljmp jbe mov cltd ljmp xor ror je nop xlat mov mov sub loop xor jo cltd pop add jmp dec addr16 (bad) jg xlat mov or xor fild (bad) ljmp (bad) cmpsl mov in test sub js movb scas sbb inc mov (bad) (bad) decl mov cmpl sub dec mov addl cmc (bad) incl sub ljmp cli inc movsl std in push in jg lock push cmpsl shrl (bad) cmp fsubl adc incl orl jno dec dec mov out lret idivb push and notb enter outsb cwtl outsl sbb (bad) cmp aad and into fild cli (bad) (bad) pushl in xchg (bad) jns inc pusha call lock scas mov divb inc pop sub push sbb pop mov fmull std call minps lret ljmp push xor pop (bad) mov mov (bad) call mov in pop cmpsb pushl or into or bound dec cld cmp sbb (bad) les xchg out mov (bad) add mov pop add lcall mov arpl rorb xchg sub pop mov dec (bad) (bad) (bad) incl stc lahf add ficoml inc sahf mov insl sbb outsb mov jge mov push (bad) push insb push loope jns mov mov (bad) ljmp data16 das or std cmp mov cli xchg pop adc (bad) decl scas xchg pop pushf sub stc (bad) mov push xchg scas xchg test sbb (bad) (bad) mov mov push cmp jnp sbb aam std jmp nop int and call ret pushf lcall push mov sar (bad) (bad) call xor adc sbb stos gs mov add sub push (bad) jg (bad) out sbb movsl lret orl sub mov xor mov (bad) (bad) (bad) sti cs jg mov int3 jg push jp dec sbb push mov (bad) (bad) (bad) jg pop js fs push cmp sub pop push mov int enter (bad) lret fwait fwait leave push test je cmp or in popa push (bad) icebp ds (bad) (bad) jg sbb cmpsl ss mov out mov fwait aaa push movb out ret cmc (bad) notl xchg ret pop sbbl mov inc lods ret push por (bad) ljmp ficompl push fstpl jo push cmc inc in jecxz jno inc pop lods dec call mov loopne ja pop sti loop push movb push add and loop dec xchg cmp cld fsubrp cli or jbe scas jmp xchg or pop mov lock in sub adcl test call push push repz inc and xchg dec cmpl mov dec dec movsb test inc ffree sub fistl clc jg jecxz pusha andb xchg fisubrl pop lcall call fdivrl xchg adc push out iret adc mov dec pusha movsb dec cmpsb jle adc cs lcallw fisttpll bound mov pop inc lea fbld inc pop add or sub push push fcomip or (bad) push xor sub or in call (bad) (bad) (bad) lcall (bad) scas dec es pusha mov inc into and lcall (bad) call (bad) ljmp dec pusha push out (bad) push das test mov mov (bad) (bad) mov (bad) xor loop and dec cmpsl out jmp hlt inc (bad) (bad) fisttp adc pop rcr jl gs lods or push fbstp faddl cmp cmp call iret pop mov adc aaa pop (bad) jg and stc iret popf adc cs aam rcrb repz sbb sub jp adc (bad) ljmp scas adc xor push rclb movsl ds sub mov or pop cmc stc (bad) adc xor aam in xchg (bad) (bad) jmp imul (bad) decl add pop sub addr16 (bad) (bad) insl scas das repnz mov pop (bad) (bad) (bad) jmp cmpsl push push hlt or addr16 push and add and xor push sub cmp popf outsl and int dec arpl dec jmp aad add loop or adc loopne mov repnz push xlat aaa imul add push jg mov dec mov call jne and ret push pop loop in into lds jbe (bad) (bad) incl pushf jle lret loop push push push or mov adc stos or lcall inc xchg hlt jmp lds fiaddl pop dec add scas into aaa rcl ja addr16 pop push les pushl xor mov ror ds xor lock aad xor lcall push fdivl lods mov adc xchg fcoms outsb roll (bad) (bad) incb jp xchg pop outsb out jo xor push and jmp (bad) (bad) (bad) (bad) mov sbb push loop jecxz rcl aas sbbl add daa notl sar decl xchg es ds daa dec lret jge sbb mov stc (bad) xchg ja scas push sarl sub (bad) mov stos mov cmp movsl cmpsl imul sub jo inc (bad) xchg xor mov push pop aas jnp ds insb pop mov sbb callw jmp hlt int3 shrb jg xchg test pop (bad) call dec push mov sahf cld push push gs fcomps and (bad) movsl mov lock xchg pop lods pop pop and cmc pushl scas or fcomp (bad) or lock std (bad) (bad) call pop aam and or xor loopne inc inc jg pusha pop xchg bound int push add jg pusha inc jae aad inc add xor (bad) jmp add fbstp add add mov or outsl pop (bad) fucomi sub loop push in mov (bad) (bad) mov inc jnp (bad) sbb sbb roll add clc cld outsl add ljmp cmovne mov jbe sbbl xchg mov test dec lret shl fadd fcoms and inc (bad) cld mov out sar (bad) incl mov push sbb mov mov push cmpsl jle (bad) mov pushf lret xchg movsl je mov or pop xor (bad) (bad) decl arpl push int pop cmc clc in shlb mov loope pop adc (bad) (bad) (bad) incl stc mov xchg and mov and push adc xchg xlat enter (bad) call dec jbe sbb test jl push cmp inc or (bad) (bad) mov dec popf cmpl aam add std (bad) (bad) jg loop or add dec sub and testb fwait outsl in inc sar decl insb es xchg or jl jl xchg popa (bad) pushl shlb stc ja lret push dec mov mov jl sbb inc fcmovnbe nop lret jb adc in or dec bnd fnsave cmp lock cmp enter inc mov inc add (bad) ljmp mov psadbw sub popa push pop dec pop outsb and sti inc mov push nop cli pushl in and dec mov xchg outsb mov nop inc lea push std (bad) ljmp pop insb mov jnp (bad) repz int jge sub lret fidivrl lcall lods into sahf orb jo cmp add mov repz push adc sub sahf pop cld (bad) lcall mov cmp (bad) lods imul mov sbb (bad) dec leave in mov jmp pop sub mov jnp or insb rcl add (bad) jg jecxz sub ret xor lock pop mov andb mov sbb ljmp mov loope les es ljmp rcrl enter mov (bad) mov fiaddl (bad) mov in test push xor dec cmpsl aam lds cmc lahf scas out sub lods mov bound leave xor push dec sub sbb loop aas invd in inc or and lock aaa xchg xchg movsb frstor pop adc and rcl xchg aas mov (bad) jg and leave mov gs (bad) (bad) (bad) call out js mov fldl jae sbb mov (bad) mov in adc jmp push inc cmp aas aas cbtw or dec (bad) (bad) (bad) dec pop add mov mov mov inc jge (bad) jge mov (bad) mov lahf lret xor (bad) incl popf leave enter sti pop mov test pop sbb scas sbb dec mov sub stc inc iret mov popf lcall (bad) (bad) (bad) jg test push mov xchg add nop or adc dec add mov test dec ljmp dec arpl push push or cmp mov push and lcall xchg test cmp pushf into and mov xor jg incb (bad) in ss inc add xor ljmp mov lds fldl or idiv dec dec xchg sbb jmp mov mov sbb js ljmp cmp ja push xchg (bad) mov (bad) (bad) fldcw adc insb and movsl inc push mov stos pop inc mov push (bad) (bad) ljmp push and scas stc scas leave aaa loopne hlt mov mov push mov cmp test incb in das scas jo or lret outsb std sbb (bad) jg push in pushf imul add inc mov rorb push fbld (bad) fcmovbe push push xor subb mov jno add outsl jmp (bad) ljmp add xchg iret pop and sbbl loope or stos (bad) ljmp mov scas cwtl xor fmulp mov icebp (bad) ja out jecxz sbb inc fmul leave leave lret inc or in stos jmp adc outsl adc dec in pop cmp cmp scas clc sub jo (bad) dec cmp (bad) outsb stos mov in clc test cmpsl inc jnp mov pop loope shl add push ror test push mov push xchg ljmp sti xlat or mov or aam (bad) (bad) (bad) fdivs inc jns adc mov xchg mov mov (bad) ficompl je mov int sub lcall call pop mov in adc dec push pop cmc insl test idiv call push adc jg pop xor mov adc add cmp push (bad) (bad) (bad) jmp sub push fildll add dec nop flds int jg mov jb aas ja loope jg incl mov inc popf jmp lods ss les mov js xlat xchg add xchg ret lcall (bad) jmp mov cmpsl xchg or or mov or lahf mov loopne cld jp adc into add add sbb call push jne mov dec les sub (bad) mov fxch cld pop int3 sub and xchg int aam or mulb xchg decl pop pop icebp pop jl popa lea jne,pn (bad) fdivrl xor xchg test xchg int pushf push or jg add pop out xchg xor in cmp ret cld jg mov sub sub rcrb scas (bad) (bad) jg jbe mov les push into loopne test cmp lcall insl xchg sbb fistpl lds sub decl pushf aam mov push sub ljmp (bad) (bad) (bad) mov out xchg inc inc sub rorl inc out mov out (bad) mov (bad) (bad) cld jno adc popa test loop jmp jno (bad) loope mov insl mov push cltd lcall ret in sbb mov and (bad) jg and lret xchg lds ret xor out inc inc add (bad) call aas jg (bad) mov jns mov inc cmp (bad) in (bad) pop lock add sbb sti fistl in (bad) (bad) (bad) (bad) decl xlat pop mov mov fcoms int jnp or dec loop cli xchg xor cmp xchg std and (bad) jg mov push (bad) pop push sahf test testb aam out jb mov daa insb push sahf idiv (bad) mov push sbb push sub mov in test daa cmc aam clc (bad) (bad) (bad) incl cmp nop pusha xchg sub nop lock pop mov dec push stc mov add sub ljmp sub (bad) jecxz cmc and jmp inc xor mov bound decl pop push dec xlat repnz mov push daa jg shlb mov inc arpl dec shl cmp inc ffreep lods out push and (bad) (bad) cmp mov mov jle mov mov (bad) lcall mov xor jge inc push jne (bad) (bad) (bad) fist jle pop lock sub jno mov or lcall ja cmp call xchg mov jnp jp sbb (bad) loope ficom fnop loop pop (bad) (bad) (bad) lcall cltd repz insb cmp mov test sbb xor (bad) (bad) (bad) (bad) fmull and inc scas dec mov cmp push mov jg popa or inc je dec add pushl inc shr mov cmpsl push gs movsl insb ja (bad) (bad) lcall or out test push aaa sbbl mov addr16 mov sbb jne fist mov ljmp call (bad) jg sbb mov pop xor mov iret inc mul test (bad) (bad) lcall adc dec int3 mov add in mov pop sub xchg rolb mov xor dec mov xchg mov (bad) (bad) incl sub sbb int3 cs mov aas (bad) rorb push add pop loopne push xchg pop aad (bad) (bad) ljmp jno es xor mov jmp call cs dec lret call or mov sub inc inc into int3 adc jecxz dec (bad) jb ljmp in mov jb ds fwait (bad) cmp jge mov mov popf mov mov arpl in clc (bad) (bad) (bad) jmp aaa mov xchg mov pop push xor mov cwtl add cs ja notl test aad mov mov je ja (bad) pushl cld scas fdiv dec loopne gs scas fisttpll into push lods in xor in pop scas ret add fist aam fdivrl out jo xchg push pop mov sub ds push push sub out aad jl pop lret out scas (bad) lahf dec call dec aad popa push notb sti cmp in pop mov push pop out and jg (bad) fildl fild cmp hlt xor mov subl mov aaa cwtl lahf adc lods jg setg subl push xor ds jbe rclb xchg push sbb adc (bad) mov push lret test mov push insb mov call xchg outsl insb xchg test mov bound rclb xchg fidivr lret or flds iret add add xor (bad) mov out sbb imul jne jecxz sbb mov call add mov (bad) (bad) (bad) add imul (bad) inc call adc (bad) leave pop mov push hlt aas std adc add jle inc mov pop jmp aam and lods sub aad sbb cmc mov ja ss loope jl dec jle xor hlt xchg push jne push ret es jp aaa xchg xchg or sti outsb cltd or rolb call loopne pusha mov in bound dec hlt adc dec push scas xor jne pop lock pop stc mov mov xchg or addl jp fdivr xor lahf (bad) dec adc les adc adc push mov cmp or sti sub cmp mov inc sti (bad) mov (bad) (bad) jmp push std dec shr pop pop addr16 out gs push int ja lock mov push lcall cltd andl inc pop nop mov test das popa sub subl (bad) out bound fnstsw insl incb jbe rcrb fwait sar call std in aam cltd pop lret pushl add mov dec mov (bad) (bad) (bad) sti jnp nop or inc sub push mov sbb ret xchg scas add dec std mov call xor fisttp pusha xor std data16 xchg (bad) (bad) cli mov sbb lret hlt add sbb stos jns mov (bad) call (bad) lea cld xchg push mov popa adc arpl mov dec mov cmp xchg mov (bad) jg jne rcl test mov ret hlt mov and (bad) or dec std inc jmp push test add hlt icebp scas fdivs test cs jne inc call sbb sbb fldt sub imul subl in fistp das aam and and jp loop ss adc or jno (bad) (bad) (bad) decl jle pop mov lea imul adc sub addb pop (bad) scas cli (bad) ljmp negb dec pop push xchg (bad) ja sahf es enter mov (bad) mov cmp lahf imul nop mov (bad) (bad) ljmp stc push rorb jmp leave add les push add adc dec shll xchg sub ficom cmp int xor mov cs je arpl movsb inc (bad) cmc jmp mov xchg xchg sub xor lahf xchg in sbb mov jo mov repz push cltd (bad) push xchg xchg stos and mov dec push cmovbe dec sbb nop lret loop sbb popa hlt mov mov or (bad) (bad) jg push add push cmp xchg (bad) sub mov (bad) incl outsl mov ljmp or mov clc out mov (bad) (bad) mov (bad) idivb push stos aas test add nop shr (bad) (bad) (bad) ljmp flds aaa add mov adc (bad) (bad) (bad) mov mov adc cwtl jnp cmc jl xchg adcl test cwtl mov (bad) ljmp rorb mov pop push (bad) sub jne test dec movsb and outsb (bad) (bad) jg and or std imul mov cmp inc aad popf (bad) (bad) (bad) decl mov aas mov or leave cmpl sbb movsb or (bad) ljmp (bad) mov stos pop push or and fidivl jo cmp arpl decl imul in enter dec inc xor ja sar loop loop add stos jno std fmuls inc (bad) (bad) (bad) jmp test sbb jg outsl dec xchg and fadds les in fcomip (bad) jle pop jecxz leave test fsubrl xor dec ret xor push cmp cli (bad) (bad) decl sbb fnstsw jmp dec push mov adc mov mov jecxz fwait ljmp lea and into data16 rcrl xor dec mov cld inc add xor sarb push add push push js sbb jae stos loope sub stos (bad) aaa or ljmp test jmp ret jecxz (bad) aaa cld pushl iret mov dec and sub pop repz xor cmpsl push mov add mov (bad) std movsl shlb inc fiaddl fdivrs or (bad) inc pusha and jnp mov (bad) aam xor and arpl (bad) in scas jle mov adc adc adc (bad) (bad) call push jmp mov sub inc mov popw mov lds push fstl movsb pop rorb loop push out (bad) (bad) (bad) decl loop int3 jmp xchg mov repz jo sub add push aam daa cmpsb (bad) (bad) (bad) call sbb xchg scas jne call dec adc in mov add outsb cmpsb mov pushl int scas test mov pop lods push push sbb xchg adc (bad) fmull in mov sbb add or fildll mov out js mov std jl movsl aad sbb mov and (bad) (bad) (bad) out push fadd sahf xchg or mov outsl stc pusha pop lea jp push cmp clc cmc (bad) fcomip ljmp lret cltd test mov dec fcomp mov xchg inc jle (bad) (bad) pushl (bad) repz xchg in jl dec sub jae push scas outsl (bad) sti test std sbb hlt adc mov iret mov and sub (bad) (bad) decl jge pop lret xor xchg jle mov lret mov icebp in cmpsb (bad) mov int3 test enter mov rorl jg (bad) ljmp jnp mov mov or loopne and test adc icebp scas cli and cli rolb test mov daa repnz jg mov imul jp mov jg adc pop movsb or add xchg mov std xor incl jl xchg cli pushf sub cmc mov cmpsb sub mov adc xchg mov (bad) out lret fistl imul lds cmp int es adc nop popa xchg inc cs xchg add (bad) decl (bad) jns in test mov xor icebp push push aad (bad) (bad) jmp lods dec cwtl inc sub inc cltd mov (bad) aad ret push inc mov (bad) (bad) incl ds aaa xchg cmp ret movsb fnstcw sbb nop mov lock sti mov mov dec loope sbb inc push aad adc xor stos ja (bad) aas cwtl xchg insb popa pop push sar (bad) (bad) jmp cmc sbb jmp int3 call mov and add xlat xlat sbb sbb orl mov daa loope adc jmp fldcw loopne push mov (bad) (bad) mov scas mov gs scas inc push out or loope or insb insl add jg cmp push push fcomps mov push pop loopne push insl (bad) ljmp aas sub (bad) testb ljmp lcall sarb imul ret cmp sub bound mov pop dec rcrb popf cli in sub out cs incl cld add sbb sbb cmp dec or dec or inc arpl inc jbe fiadd popa or mov (bad) (bad) jmp xchg repnz mov push addl rol int3 cld arpl lds movsl inc iret mov adc jnp call xorb pop mov rcrb inc add jg cmp sbb dec push fsubp push dec dec dec jl inc push jnp cs push cmp (bad) (bad) lcall mov dec pop push clc mov (bad) fsubs dec pop outsl iret push sub pop xor fnop (bad) jmp mov (bad) cmc (bad) incl into (bad) (bad) icebp or push out ret pop cmpsb arpl ljmp push xor mov xor loop inc clc popf (bad) mov out pop out ljmp sub ljmp out jo xchg ret mov (bad) (bad) (bad) incl and outsb pop jecxz mov mov gs lds xor pop sbb cld (bad) incl dec xor pushf sub daa adc push adc pop inc mov (bad) incl and imul loopne fstpl dec mov jmp in cmp (bad) (bad) stc gs cmpsb dec dec mov lods and xchg inc mov push lcall sbb (bad) (bad) pushl push aam add jl push push lret or fisubrl stos in xor (bad) (bad) (bad) lcall loop leave push xchg sub and rcll js dec popa inc adc push (bad) mov pop xchg mov sub mov sbb dec or and std cmpsb addr16 out ljmp js loopne xchg nop icebp jmp dec lret rcll xchg scas dec fadds cli lcall (bad) ljmp fdivr shrl jge add arpl mov push (bad) out xor stc loop bound nop push mov inc (bad) repnz cmp push sahf negl mov and aas sti rclb loope les fcos (bad) (bad) (bad) mov jmp xchg test mov pop (bad) int3 jmp subl push (bad) (bad) (bad) call jl lahf sub jae adc or out lea clc mov repnz out cmp and mov sub dec adc inc xor jmp jns stc (bad) (bad) (bad) decl mov and pushf fimull jno pop and paddw out xor push inc push pop adc inc mov icebp push push out clc (bad) (bad) stc mov add test cmp mov pop push (bad) (bad) (bad) decl or jo sbb lret adc cwtl inc jb popa jge aam outsb xchg cmc (bad) (bad) cmp pop adc js jmp and decl dec int3 ja enter in pop fildll inc sysexit (bad) (bad) (bad) (bad) jmp mov data16 jp pop iret jge mov in popa neg mov outsl nop mov loope xor cmp push sbb mov incb add cmpsb ljmp (bad) jb xchg pop fcomp mov xor mov into fdivr (bad) mov test cmp fdivp mov lea outsb popa inc inc cmpsl es ljmp mov push push ds testb cmpl hlt imul (bad) call jge,pn inc lods cmc and rcrl clc push fwait pushl sar outsl clc cld (bad) cmp jl xchg cwtl sbb pushf lods add ljmp inc stos cmp add mov nop outsb lods add pushf (bad) adc loope mov or lcall (bad) (bad) mov cmp jp in out add into bound in sti lock mov (bad) jmp sub aas adc inc dec out mov inc lea ljmp insb movsb pop or add insb adc jns and push loope pop cmpsl movsb inc icebp nop les add (bad) fistpll jb inc mov stc das fsubl test pop in (bad) (bad) jg test mov xchg std mov (bad) mov push adc add (bad) lea adc mov jg sub test fwait int3 mov dec stos cltd ja jns xchg ficoml aaa push sar and cwtl fiadd aas xlat popa (bad) and xchg mov mov rcr pop add pop fwait and jmp cmpsb xor mov add (bad) mov outsl mov in aas sbb mov pop cld ljmp xor xor sub fisttp scas sbb insb adc pop dec push push jl mov push jp xchg ds sbb xorb dec inc mov (bad) out cs out rolb movsb movsb lcall incl xchg mov (bad) lcall dec pusha add mov xchg or sub lcall std push (bad) cmp xor scas ds inc sub in dec aam repz bound imul bound (bad) (bad) jmp push fstpt iret rcll and (bad) (bad) call out adc adc mov scas push xor adc (bad) fidivr mov push loopne cmp mov repz enter (bad) stos jecxz (bad) (bad) (bad) (bad) mov je stc mov (bad) jnp test mov data16 js fmull (bad) (bad) (bad) call sahf add pop xchg pop addb push call jp jno mov daa sub call cmp daa push out sub dec (bad) jg fdivrs pusha inc fcoms repz into mov (bad) lcall scas leave loopne mov and xor rorb in pop mov (bad) incl fnop in pop or mov push mov test outsl outsb lock adc push mov or test mov sbb pop out add pop test fnstcw mov dec xor cvttps2pi mov mov dec int rcll or and scas jl pop jne jg jmp lock sbb xor lds in (bad) in andb or (bad) rclb jns das jle mov jg (bad) pushl push lods pop mov mov leave mov rclb pop xor fstpt (bad) fs add add (bad) pushw sbb mov jmp add nop jg icebp repnz decl lock lahf adc sbb push arpl mov dec mov cld (bad) decl fwait insb mov rolb aaa push mov mov subl call movsb outsb and add popf dec leave fisttpll sbb roll mov (bad) (bad) loop movsb (bad) ljmp icebp mov ljmp insl mov jae sbb mov aam and sbb (bad) decl sub mov out ja in popa nop mov enter mov int mov sub xor mov sub cmp in lea lods cmp mov cmpsb pushf jecxz push jae sub pushf popa mov (bad) (bad) (bad) cmp pop xor (bad) sub loop jle dec xchg dec mov repz add fildll test pusha jp lret inc (bad) mov (bad) jle cmc das cld inc add push movsb xor xchg and push rol mov mov loope mov decl jnp mov ds (bad) xchg mov mov inc movsb loopne push in jns or cmp pop fbld inc insl test or dec jl sbb call jecxz test aas test (bad) xor sar mov mov outsl int sti mov pop pop and jmp sub (bad) sahf jmp mov sub xchg cli (bad) cmp and push inc dec or out sub jnp jge (bad) (bad) mov das shll xor xor inc jl (bad) hlt test (bad) pop subl push out clc (bad) pushl daa and scas popfw roll (bad) out push mov sarb (bad) in push jno sub fstpt call (bad) adc inc nop mov xor into arpl pusha mov and inc fstl cmp push lret rol (bad) mov jbe or push loopne (bad) cmovb push cmc (bad) pushl add dec ljmp cmpsb and and inc test adc adc sahf les xchg (bad) pop in adc mov call sub sbb (bad) (bad) call cmpsl jl xchg jmp das daa mov in dec mov or insb cmpsl inc mov out int cmp fnstenv inc int in fwait mov jne (bad) sub cmpl jge mov test pop in arpl pusha sbb popa pop mov cli xchg mov xor or (bad) decl mov hlt push add into enter jb shlb es pop (bad) (bad) (bad) ljmp push es in test add in or xchg popl (bad) (bad) jmp jp fidivl push fisttp mov insl pop mov roll mov out movsl pushl xchg cmp enter sarb (bad) (bad) fcomi (bad) lret push lret out in push mov ljmp jns mov (bad) (bad) (bad) call push xor and dec add or sbb pop fwait out scas (bad) (bad) (bad) (bad) out es inc push pop inc xchg fs pop dec pop or mov jnp ss test dec xchg scas push inc in rorb cmp icebp (bad) (bad) cli lock dec cld repnz (bad) or jmp call or xchg pop repz cmp int jbe pop stos test (bad) (bad) call xchg fisubl adc psllw cmp xor cmp adc lods mov ljmp cli dec movsb jae sbb imul xor (bad) (bad) jmp (bad) fistpl icebp push push lock bound cmp (bad) push (bad) sub xor shlb (bad) (bad) (bad) incl (bad) insb pop les fdivrs leave lret sbb push fsubs sbbl (bad) lcall push adc sub in adc sbb xchg int cmp jg sbbb pop arpl adc jbe sub sbb (bad) decl push je push pop pop mov push sbb imul mov test outsl lret mov les sbb jmp push (bad) cmp push negb pop inc cmp push (bad) (bad) (bad) pushl ljmp mov loope (bad) mov daa fisubl (bad) stos lods fisttpll (bad) (bad) (bad) decl inc cld xor lret out dec seto push jo cs lcall cs data16 insb cmp js emms in add jno or (bad) (bad) (bad) stc push adc (bad) imull (bad) (bad) (bad) mov pop (bad) sahf adc pop push xor cwtl xchg out push mov adc negb sahf cld (bad) (bad) (bad) ljmp movsb adc addr16 dec mov dec xchg test mov (bad) (bad) (bad) mov imul movsb je add ds or sbb (bad) (bad) pushl and in xchg jo push insb (bad) mov in adc test jb mov in jbe cmp lret jmp ss (bad) mov mov jle incb push stos rcrl out dec pop lea test (bad) decl test adc insb es and addr16 (bad) adc or xchg (bad) mov insl pop sub popf data16 test leave dec jg cld (bad) fcomip call mov xlat lock call cld pop pop add clc aam add dec pop mov (bad) out cmpsb movsl int3 and imul das sbb (bad) (bad) dec sub flds lcall movsl lea adc push pop scas push divb mov out insl push lret pop dec pop or and xorl mov lcall sub cmp call cltd push (bad) in bound jae,pn dec xor (bad) lcall pop jns mov push jmp dec xchg dec shlw (bad) ja aad (bad) (bad) incl rclb mov or loope inc push fcmovbe mov sub dec mov mov outsl clc (bad) push js cmpl pushf add js push pop push and (bad) inc (bad) lret in das fcoml outsb and add add adc not jne pop cmp jmp int3 shrl cmc adc jns xchg ret add mov lcall pushl push xchg (bad) (bad) push mov inc cwtl popf mov stos (bad) push lds incl sbb adc jbe push in cltd movsl mov pop mov xchg dec cmc mov (bad) jbe (bad) (bad) jg mov and popf add lret cltd dec adc int3 (bad) ljmp mov push notl jae sbbl fs (bad) (bad) (bad) cld mov mov mov cmp push mov or (bad) call adc ret cmp xor xor xchg daa push push xchg dec call jno add insl dec notl push xlat stc jb dec add cmpsl int (bad) cmp and mov sti adc cli lret adc incl xchg into out xchg leave dec hlt push mov mov insl xor push mov xor mov inc sub scas jmp jmp xchg or out insl adc xchg jmp imul fimul sahf fsubr lcall sbb mov (bad) mov lahf fcomps (bad) (bad) mov das inc (bad) ljmp add jns test stos sub pop push lods cs add cmpsb xor push out (bad) ja incl cmc in pop jnp outsb mov xchg dec and popf push lcall call std notb xor lock xchg test (bad) (bad) (bad) jmp imul push mov mov jl xchg sti fcom jmp lock push mov mov jge mov mov scas fild ljmp jmp sbb mulb dec jmp pushl cmovno jbe mov cld fisubrl pop (bad) (bad) (bad) (bad) jl test (bad) aas mov push sti cmp test cmp adc fldl cwtl xor or clc shll mov add mov sub (bad) (bad) pushl mov (bad) or or (bad) xor inc or mov repnz fwait jns sar (bad) (bad) out ss pop adc test aaa out outsl cmpsb out stos inc je clc xchg push dec loop arpl mov inc sub adc sub or (bad) (bad) (bad) in push aam jl mov cmp movsb das dec jecxz push cmp popa stos pusha in loopne pop mov xor lods jo (bad) or fdivrl push push loopne xlat inc jo mov lods pushf and (bad) dec mov repnz xchg (bad) out enter sub sbb imul cmp mov idivb fstps rorl (bad) (bad) (bad) decl jno (bad) sub out pop data16 cmp jle cli mov mov cs cltd and mov pushl jb xor sbb push add lcall jae test imul or stos lcall fisttp mulb incl pop adc adc xchg add xchg (bad) xor (bad) lcall pop xchg push repnz lret ret sbb inc pop (bad) int sbb test ffreep fild sbb and (bad) call pop jp test pop scas inc fimul cmp sbbl xor sbb sbb data16 out dec mov ret mov (bad) das sarb xchg jns inc jecxz out imulb lcall pushf cld dec mov sub js adc ror push xor mov jle,pn les js (bad) (bad) (bad) push dec dec clc subl push fmulp add clc daa adc cmp movsl imul loope cwtl loop fsts jno xlat sub push and sbb xchg sbb incl xlat fdivs daa add mov sub stos sar (bad) (bad) decl sbb mov cmp nop dec and adc popa mov imul fs call pop dec dec mov mov outsl out (bad) (bad) (bad) lcall loop lea jae mov rcrl inc push rcll adc loopne fs (bad) (bad) (bad) mov jmp shrl xor push in stos in add lods cmp in mov (bad) (bad) (bad) (bad) jge inc stc daa outsb mov jle lds push xor sbb push (bad) lcall js or dec mov sti and mov outsb mov add aas push add jge or mov xchg xchg ret outsb int3 (bad) xchg mov adc xchg insb decl sti xchg lret pop push pushf clc inc xor fisubr movsb inc (bad) pushl jbe push inc out arpl int3 aaa std mov popf mov cmp lods dec lcall (bad) push sbb insb inc or cmpsb xor incl xor rol xor out popf sbb sbb jmp mov xlat adc xor inc mov pop push jbe hlt outsb jo push push xchg inc decl ljmp xchg and (bad) jg rolb pop hlt (bad) adc ja sub fwait enter popa push (bad) mov xchg add std dec jne dec mov lcall rorl add jnp add pop xchg pop les (bad) jmp repz (bad) dec std nop push adc frstor ss push mov and (bad) jns inc xchg popa mov inc and cmp xor xor push (bad) ja je sub (bad) (bad) (bad) lcall ss in xchg test in pop xor roll movsl cli pop repnz push (bad) out fs jg call mov cli int3 jp xor sbb in ret or lcall jg test je mov xchg (bad) cwtl mov (bad) fildl cmp mov hlt aad mov cmp mov jnp adc sbb outsb (bad) mov (bad) (bad) (bad) mov mov lock inc (bad) mov mov xchg push push jmp ret rcrl cmp sbb fsubp pushf fisubr in clc (bad) jg push int3 cmc ss mov inc jg arpl xchg cwtl pushf fistpl (bad) (bad) incl and xchg jo cmpsb jge dec loop (bad) bnd jmp fisttpll (bad) (bad) (bad) (bad) call hlt jp aaa jmp pop or jg negl in repz and (bad) lcall stc push ficom mov (bad) (bad) (bad) out add test int3 jo xchg mov mov icebp lret cmp (bad) (bad) jmp fsub dec ss les push mov rcll out pop adc mov call ljmp data16 push test ljmp cld aad insl mov outsl fld mov push xor scas ss cmc pop decl enter xchg adc lea mov push mov (bad) jmp (bad) inc sbb dec jnp (bad) ljmp (bad) in scas mov cmp sarb add jecxz add pop xor jae push ja mov xchg jg fwait push mov ja (bad) (bad) (bad) mov jno xchg jno test mov mov lcall ja pusha rorl push repz (bad) and cld fwait mov jecxz iret xor mov out mov push pop push and (bad) cmp fsubr (bad) enter lds add (bad) ffreep xchg lret aas pop add dec stc dec adc sub icebp rclb (bad) incl cltd push insl xor xor sub mov out and mov pop std mov lcall ret pop in pop inc test fnsave movl (bad) mov mov fst decl ret jne jg aam mov xchg adc jnp mov notl (bad) (bad) cmp push std cli and push cmpl jg mov sbb xorl orb sub adc mov or xchg cmpsb pop shrl pop cs add sbb repz push in and movb pop pushl jbe mov jne sub pop xchg lcall in es cwtl hlt push ret or loop data16 sbb xchg sar insb dec test test mov test add sbb pushf popf xchg xor mov (bad) jg sti cwtl mov (bad) jne xorb lea leave lods fadds aad (bad) fcomip inc jne jne mov test std rolb pusha lods mov lcall inc add cs mov cltd (bad) (bad) (bad) (bad) fdivrs mov dec je sub inc or addr16 cmpsb pop sti cld bound inc mov push push dec and jmp push (bad) lock push xor xor shrl movsb pop stc std into out mov hlt sbbl into vprotw cltd stos mov jno push push mov xchg mov xchg xchg repz imul ret mov jbe xchg pop sbb lock dec mov incl jle add push cmp loop xchg jl and lcall xor clc push mov pop (bad) (bad) lcall or add push push js cld test enter xor fsts (bad) (bad) incl pop push sub pop in lea hlt sbb mov mov dec inc mov or mov (bad) (bad) pushl push cli push xchg faddl insb scas mov xor sbb adc scas mov (bad) jp fwait xchg pushl sarb cmp (bad) stc les push jb adc mov divb push cmc push cld jmp inc xchg or fdivrs inc inc int3 insb cli std (bad) jg mov adc sbb cli pop fs mov jne mov mov push jo or fimul cmp xchg add (bad) (bad) in inc icebp mov stc mov fsubs mov (bad) (bad) jmp push push mov mov dec test imul xchg lret (bad) lcall insl sbb ljmp adcb outsb das xchg scas call repnz (bad) (bad) call sbb or xchg mov iret sti sbb mov arpl jmp jb das scas cmpsb test mov lods inc mov nop dec fmull add xor loope cmp push push mov (bad) (bad) cmp jmp adc fwait (bad) andl cmpsl popa add inc hlt pop mov mov sar mov out orl lea xlat mov fidiv xchg mov xlat and mov jbe push mov push pop sahf mov gs (bad) (bad) (bad) jmp mov test lahf cs inc aad xchg aaa and sahf jae or fldl into lret inc pop hlt ret (bad) decl push stc push cmpsl xchg fistpl (bad) fcmovu cmpl push and xor push pop push bsr jmp mov imul not incb push jecxz (bad) (bad) mov sbb rolb cwtl andl pushf fisub bound sbb (bad) pushl mov repnz pusha shll cld xlat push xchg (bad) (bad) (bad) jmp lea inc das out ja mov icebp inc push and jp push jbe adc pop add sbb push lock mov lcall mov jo inc or imul pop addr16 jg pop movb aaa xor daa jg popa std aad pop es loopne mov mov (bad) std lods out cltd stos push cmp sahf or pushl (bad) daa add adc sbb repnz std test hlt push xor rorb pop leave pop enter add dec and test iret mov movl pop cmc lods call or inc test loopne mov sub push add (bad) (bad) fildl loope push std lock push mov ficom ljmp or (bad) mov lret cmp pop std jg in jl divb loope sub mov shrb int3 xor and arpl pop xorl mov mov movsl mov sbb and inc psrlq xor lcall cwtl (bad) dec je push mov stos and (bad) xor (bad) mov pusha cmp xchg iret (bad) sbb icebp js (bad) fisttpll cmp lcall pushl pop ljmp mov pusha cmp jmp shll fiadd scas xor fwait ljmp mov imul add xor in shl pop insb call jg sub xchg add mov insl dec jo sar push dec out sub jns mov dec (bad) ljmp lret mov push or shlb push xchg lcall push jne sub shlb cltd pop sar enter fild cld mov add int3 push jp das mov (bad) jg in pushf sub push ret ret in mov lock add mov popa inc out cmpl push and adc (bad) (bad) (bad) call (bad) cmc jl test cmp push pop inc bound or cwtl mov pushl sub int jnp mov (bad) mov (bad) sub and fdivl rcr (bad) out xchg sbbl popf pop scas nopl insl cmp pop les inc js lea push leave stos adc (bad) (bad) call daa dec sarl ja lahf aad push xor and and fidivl lods stos (bad) adc outsl (bad) (bad) (bad) inc daa ja std repnz and out ret pop out or cmpsb cltd popf sbbb jecxz call jl pop xor mov sti call pop xlat push add pop cmp pop mov dec mov and mov push xchg arpl (bad) xchg bound mov mov jg pop scas (bad) mov movb push cmpsb jno jbe xor scas pop fistpl (bad) (bad) out pop cld je dec xchg movsb add push push cwtl das jnp hlt mov inc mov lds cmp rol ret (bad) add (bad) aad mov pop lock pushl fisub add lcall popf push (bad) fdivrs jg (bad) (bad) cmp adc std inc cmp enter sbb add (bad) (bad) pushl cmpsl scas jne movsl mov push sub insl xchg lcall ret enter int (bad) (bad) mov (bad) mov aad push and dec sahf jl mov loop pushl adc add fmuls mov loop push xchg sub ss ljmp es pop loopne mov fnstcw mov (bad) fiaddl mov ss mov ret jo push enter jg xchg xchg xorl xchg loopne adc out push inc add adc insl jl cltd mov and fs and std (bad) jmp fs xchg in pop xchg mov mov test loope xlat (bad) jg or inc ds cmovbe push pop or (bad) lret insl scas pop jg repz inc jp mov inc cld (bad) ljmp mov fsubrs fwait push adc mov sub mov sarl inc out jae push fcoml negb inc mov ljmp repnz lcall mov jne sub and rcll inc lahf inc rcr into cs dec icebp jg jmp xor outsl loop pop insl pushf stos mov pop int inc inc mov or or decl or data16 jp sub (bad) jg call mov aam cmp cmp pusha popa cmp (bad) jmp sbb jne or adc jnp scas (bad) jae ss sbb (bad) lock (bad) mov pop pop std nop push les (bad) cld movsl (bad) ljmp ret shl out or test (bad) (bad) (bad) decl outsl imul arpl xor rcrl or cmp (bad) (bad) incl mov popa lahf xchg movsb xchg cltd mov pop (bad) (bad) mov (bad) mov inc mov out sarb idiv (bad) decl data16 addl mov add xor lea xchg mov jmp add inc jle and and insl out test xor call clc rcll mov (bad) aaa jge mov mov (bad) (bad) (bad) call sub jo stos fstpt inc add popl stos mov outsb inc mov int sbb lcall sbb in shlb mov inc jecxz sub das clc (bad) fbld inc sti outsb lock mov lahf leave ljmp push mov incl js inc or or imul fildll and aam jns fnstsw and testl jnp push add sub mov jo (bad) xor sub mov mov sahf dec mov xchg div cmp pop mov dec and mov ljmp sub push jae pop dec std sarl dec sar std (bad) xchg (bad) stos (bad) inc push sub movsb xchg daa mov imull loopne or push ret cmc (bad) (bad) (bad) pushl jae out mov icebp (bad) sub sbb jge ljmp (bad) lcall mov pop pop (bad) mov (bad) xlat into pop leave push inc insb repnz (bad) ljmp (bad) ljmp jecxz aad data16 push adc lods cmpsl xchg or mov stos (bad) push decl push dec mov push or or jg jecxz (bad) pushl adc jb in and mov outsb test scas std lidtl adc cmpsl lods xchg out pop fsubl adc mov cld lcall decl pusha pop loopne adc cltd or das (bad) mov pushf mov (bad) ljmp hlt pop and test (bad) add call mov (bad) leave mov fisttp ljmp xchg and mov popa (bad) (bad) (bad) call and stos push repz lcall adc cmp sub pushf pop mov ret (bad) incl (bad) sub repz sub popf cld inc test pop iret adc arpl sar (bad) push lods ds in lods cmp aam sbb cmp out loop add jbe push mov (bad) (bad) ljmp sub push lods into loopne faddp inc test hlt cmpl push jno movsl xchg mov push xor movsb (bad) push push adc in cmpsb (bad) dec jg (bad) (bad) mov nop dec repnz rcll outsb cmp xchg push dec xor pop jg sbb mov aad (bad) mov and fidivrl sbbl cli push fsts cmp mov clc (bad) (bad) (bad) call fs fsubs mov (bad) push dec inc pop push popf sub and aas call aam (bad) jo sbb cmpsb jne cmp into hlt or pop fidiv ficoml int3 popf push scas lea test icebp xlat roll add outsl fsubrl pop (bad) es stos loopne movsb (bad) jno lock push xchg pop inc (bad) (bad) incl jb mov rcl adc inc mov xchg dec fidiv xor mov sbb pop xchg push stos mov adc adc mov incl or test lahf mov insl dec movsl popf pop cs dec xor inc dec pop xor (bad) call loopne arpl lcall sub in mov add fiaddl sbb ss (bad) (bad) jmp push ret ret xchg loope lds sahf (bad) out (bad) jecxz xlat fnstenv cmp cli decl mov sbb mov test jnp lcall lcall sahf jae cmpsb and or push int xor push push std (bad) lcall nop das call pop aad out and movsb cmp lcall (bad) jmp fbstp inc (bad) xor mov mov je (bad) (bad) cmp (bad) mov (bad) (bad) outsb add mov add (bad) (bad) call les or sbb dec fmulp sbb jle (bad) lods lods jp,pn dec stc push clc (bad) decl adc dec xchg add mov jae inc adc ss or lcall fisubr jg mov or (bad) scas push fxch insb xchg xchg inc cltd daa or (bad) pushl (bad) clc pusha xor nop inc fcoms hlt fidivrl decl lock mov orl (bad) xchg xchg mov (bad) (bad) cmpsb int3 inc (bad) mov add je lahf ljmp das iret add pop push insb in flds adc ret xor (bad) (bad) (bad) lcall pop xchg test lods dec mov mov inc fstenv cwtl push ds shlb push pop (bad) (bad) call je,pn sarl fsubrs mov mov sar scas pop or lods cmp les fs xchg inc mov cld pushl jno psadbw lock scas cmpsb mov xor pushl std inc add and cld (bad) (bad) jmp push dec mov cmp jo scas add and jb sbb push xor lock lcall (bad) (bad) jmp cmpsb xor (bad) (bad) (bad) (bad) lcall xchg push scas mov outsl jg sub aaa loop test pop jno adc jg incl jb jg lds sub sbb pop out inc es (bad) (bad) (bad) mov xchg xchg int3 jbe add aas imul dec pop out jno mov push mov xor out leave (bad) out sub xchg idivb int rorb jmp cld out jecxz out (bad) fisttp fistpl pop (bad) out add aam adc mov pushl out aas cmc mov adc call mov call sbb add shl in pop mov insl std (bad) jmp out xor mov push ret repnz in mov jg insb jbe inc mov mov jo std push and pop sub rcl xchg sti lret jecxz push (bad) (bad) (bad) decl xor push jle lret add outsb call stc lret sarl clc (bad) (bad) decl xchg cmp nop hlt aad mov lds out ret sbb adc pop lret cltd loope adc jmp adc mov je loope mov out cmp jmp (bad) incl mov in adc nop icebp std sbb adc push xor (bad) ljmp mov int3 add outsb mov daa cmpsb cli jo clc inc and call xchg les (bad) dec lock sbb fldcw aad dec (bad) cmpsl adc out aam mov inc fnstsw fdivrs (bad) (bad) (bad) (bad) jns push test ds popa adc lret je (bad) arpl add decl lock mov rorb cwtl nop mov lds mov daa decb add and xchg lahf (bad) aad lret test stos mov push pop loope inc lock aad es (bad) (bad) push aam dec in cltd fstpl jle daa popf fsubrs hlt into adc (bad) in in out mov inc (bad) (bad) (bad) cmp mov dec push lods (bad) sbb pop add mov dec pusha push sbb imul push cld lcall inc push mov ja adc (bad) jbe dec imul daa inc int3 xor enter adc (bad) (bad) cmp inc mov andl std out fsubs rorb loop sub xor cmp mov fwait add push (bad) nop push add xor insl add addr16 (bad) (bad) jmp mov aaa jno mov xor sbb mov mov loopne out (bad) (bad) call adc sub lock pop sbbb and (bad) icebp jne sub jae sbbl (bad) jmp pop fimul pop lds lea jmp cld in cld xor pop sbb (bad) in mov mov mov (bad) aas cld (bad) (bad) call lock rcrb pop sbb push jl je xchg push shr loop mov aas std lcall (bad) (bad) ljmp mov cmp scas movsl jno lcall lea mov out out test (bad) (bad) (bad) (bad) decl adc pop int shl mov jae call cmp jne ret and clc pop xor or or call aas xchg mov (bad) std inc pop inc call mov or jns xchg xchg fisubrl rclb inc sbb pop mov popa pop (bad) (bad) mov ss int imul lret fldlg2 clc lahf test dec in mov js and inc js sbbl (bad) and push dec movsl dec in or jl (bad) (bad) decl mov scas jo icebp adc dec xchg jnp (bad) fdivrs inc (bad) mov stos inc (bad) xchg icebp (bad) (bad) (bad) (bad) jge test mov pop mov imul std cli out push inc cmpsl sbb jg and (bad) jl (bad) and in je dec cwtl call ljmp mov mov iret cltd icebp or clts pop sarl (bad) (bad) (bad) dec bound imul shrb pop ficom setae dec (bad) sti loopne mov sar (bad) jmp push add mov test xchg jae nop scas jnp repnz pusha (bad) movsb call mov xchg jne jl inc je call xor sub (bad) enter inc xchg call xchg fnsave into cmp pop das dec stc inc stos lods push sub repnz push pop clc incl sbb inc mov dec rorb (bad) incl pop nop mov lea mov std push pop scas mov in fwait cmpsb pusha mov lods bound out (bad) (bad) call aam cmpsl out in scas test jo mov shlb sub adc push enter adc (bad) (bad) (bad) decl add push outsb cmp mov mov test rcrl inc dec mov (bad) cmp negb jns loopne xchg nop rcr dec push (bad) (bad) (bad) mov hlt test mov in inc pop test pop fcomp xchg das cld xchg and sub (bad) ljmp fist sti cmp lahf cld mov or insb and add (bad) (bad) fist aad adc test mov jbe mov mov rorl ds dec and (bad) (bad) (bad) cmp push inc iret push loopne pop (bad) dec in stos sbb adc sbb decl push mov jl sbb mov add stos mov xchg xor (bad) (bad) ljmp dec mov adc js push pop cmp and iret xchg jp fs push pop movsb mov call and push jecxz inc (bad) mov loopne sub jg xchg push test sbb clc mov inc icebp push sar (bad) (bad) pushl sub nop mov push push call mov jno test jg sbb pushl dec push dec sbb cmc add mov scas push pop ret mov and cmp rcrl cmp into mov movsb ljmp xor mov sbb pop jns inc cltd fnsave and rclb ja push or push je in lea sti sbb or mov insl inc enter xor xor and (bad) lcall push lcall insb in push aaa xlat mov mov pushf int3 ljmp (bad) pushl add lock and mov inc dec adc fldt mov jge (bad) sub (bad) (bad) fildll cmp dec insb pop sub cwtl push jno stc clc jl shlb icebp inc cs mov test push in xchg push (bad) (bad) cmp rolb lods shll fdivl adc loop mov or imul decl hlt push add mov dec (bad) pop mov jbe testb (bad) sub (bad) (bad) jmp sbb mulb bsf adc xorb xchg (bad) jmp inc outsl sub dec dec daa aad mov cmpsb scas adc fiaddl repnz test adc xchg pop andl fcomps subb data16 or (bad) cmp iret mov cmp lock lcall mov push sahf jp inc (bad) sub sub cmc arpl jecxz popl mov gs sub jbe jp f2xm1 and cli or sub pusha sub clc mov jl xchg shrb pop into and or push rcl lcall cmp sti (bad) adc icebp ljmp push hlt (bad) je push jmp cmp adc push sub (bad) (bad) out mov push xchg xor jae in stc int fidiv decl imul rorb xlat adc dec inc int aam dec push sub mov in pushf test test jl test clc (bad) lcall out jae cmc add jle ds ja test mov xchg fcmove xchg inc sbb mov enter lock (bad) (bad) (bad) ljmp jmp ss sub or pop aas enter mov mov data16 sahf xchg fisttpll es (bad) incl sbb and popa mov mov pushf cmp jbe xor jp dec jmp inc xchg arpl out mov lods dec inc sub sub lds inc push or (bad) (bad) (bad) dec out mov or iret insl adc adc sbb or lods mov lcall jl add movsl test pop rcl (bad) int3 add call xlat insb adc (bad) dec sti (bad) lods xchg jecxz std shl and gs adc cmc aaa jecxz rol les out fcompl (bad) (bad) (bad) pushl inc aas xor (bad) mov or mov jbe pop das std dec stos jg cmp or popa sbb sub add adc (bad) (bad) lcall daa xchg ljmp mov xchg hlt ret (bad) pop test dec movl or dec sub xor inc clc in insl mov pop hlt (bad) dec clc pop push repz xor push test push stos jmp out inc mov dec (bad) (bad) (bad) (bad) lcall mov ds xchg xchg jmp mov loop imul (bad) fild push (bad) mov sbb repz mul jns dec push incl pop cli mov rclb mov mul xchg (bad) (bad) (bad) (bad) sti imul scas shrb push xor push add (bad) (bad) cmp cmp mov add movsl jmp cmpb ljmp sbb (bad) incb cwtl and lock cmc sub call lds loopne notb add dec jl leave in out (bad) arpl aad (bad) jmp jmp mov cmpsb fdivl test mov xor xor (bad) jg jle pop mov mov adc lahf xchg pcmpgtw ja scas jle add (bad) dec cmp stc adc inc pop and or mov mov mov divl sbb mov stos (bad) int repnz cmpl stos and push push decl (bad) (bad) lcall adc scas sbb adc pop mov adc cltd into out cmp icebp cld add add je (bad) (bad) (bad) call outsl int xorl xchg cmp popa jno stos dec andl pushl mov and pop bound movsl cmp aam ss jmp jb mov (bad) (bad) icebp dec stos rorb sbb js dec adc inc and sub add insl mov sub frstor into jg lcall xchg add jmp movsl add stos out xor loope inc adc sbb rcl paddsw pushf lret add cmp pop push (bad) (bad) (bad) lcall pop insl add push and inc and stos (bad) lock cmpxchg jg pushl xchg (bad) lret jle clc inc sahf lea adc icebp push jge fidivrl (bad) fcomip ljmp bound add jbe sub and pusha stos les loope repnz mov call (bad) xor daa les jp xorl cmpsb sbb push clc cwtl lods adc lock inc insl pop mov jne add movb (bad) inc pop andl lcall and cmc pop jecxz push fcos (bad) pushl in add inc pop sbb push stc dec les fildll pop push sbb rcl jp pop loope imul enter adc stc cmpsb movsl pop inc cmp mov pushl repz jae loopne movsl clc lret nop and jp (bad) (bad) decl imul loopne adc lcall jo lcall je sbb sbb mov or dec pop sub lret and xor andl mov add iret mov popa and mov lret cld outsb add fcmovne inc mov sub xchg cmp mov xchg std dec aaa repz adc pop pop lods (bad) (bad) (bad) incl (bad) lock pushf (bad) fs mov dec jbe dec clc loopne sarb nop fwait sub incl xor cmp mov dec cmp aas hlt or adc mov inc mov jecxz lret gs adc int test push test loopne decl xor add xlat in xor insb pop mov (bad) ljmp pop rcrb popa fcom dec fidivrl pop mov sub dec (bad) lcall adc push mov adc stc in add push std or fwait loope push fistpll ja pop and ja mov aaa lods jle (bad) fisubrl ret repz (bad) (bad) (bad) jp or div stos and add mov scas fistpll (bad) cmp sbb pushl adc test adc jmp or test inc jmp fdivrs sub pop imul insb mov mov in jae fwait mov sar (bad) lcall cmp mov push sub or adc (bad) sbb aaa fadds xor xchg nop leave out xchg (bad) push (bad) fildll or addr16 enter mov (bad) (bad) (bad) incl push sub lods out inc call or inc roll or xlat lret call (bad) les push xorl lods aaa xchg pop in test adc jmp inc pushf xor negb mov and (bad) jnp jge fidivrl (bad) (bad) in adc pop ret es mov add (bad) dec (bad) call sbb xchg sbb or mov pop xchg incl mov jns sbb dec or (bad) (bad) (bad) (bad) mov sub mov shll jp and or cli (bad) call pop jp test sbb mov int3 mov (bad) (bad) (bad) mov sub outsb jbe mov add or test xchg repnz js into cli (bad) (bad) decl pop cs sub mov lods cmp incl (bad) or imul lods mov push inc (bad) (bad) ljmp add and dec out push pop out repnz sub ljmp dec cld mov mov in pop scas inc and (bad) fcomip decl cmpb ss push js mov insb and imul (bad) pushl ror pusha stc xchg push or inc iret cli and pop adcl roll outsl pushl clc mov cltd movsl xor pop clc push mov leave cmpsb inc aam cmc rorb mov test inc clc and or stos inc mov rcll (bad) decl xchg mov (bad) fild pop (bad) (bad) (bad) mov mov sti mov out cmc mov nop cs ja mov jmp xchg std push pusha daa popf incb ds sahf jl inc std mov test sti inc stos sbb xchg xorb push pop mov mov (bad) (bad) pushl aaa xchg mov mov mov andb pop mov aas jnp gs mov jecxz and hlt and jle imul push in dec xchg repz pop mov (bad) incl rolb sbb ret repz dec adc xor push nop inc cs (bad) (bad) call enter cmc inc sbbb fdivrl stos rclb out add sub (bad) (bad) jmp leave mov adc pop mov out cmpsb pop jmp lahf push lahf in cli mov int jge decl popa cld add test push inc pop mov sub mov xchg jl (bad) jg xchg mov jnp add jb pop pop add (bad) (bad) lcall add mov out lret loope sahf cmp es and mov in ljmp cli decl cmp inc idiv dec adc (bad) hlt aad bound rorl jne mov (bad) mov pop sbb and (bad) (bad) (bad) out into faddl mov xchg (bad) stc adc scas pop aam jns push (bad) (bad) (bad) pushl lret sbb loopne or xor and and ja xchg jg jbe lret or cmp stos (bad) (bad) mov test (bad) out jge retw jnp mov adc (bad) (bad) (bad) (bad) ljmp in xchg movsl aad adc call popf in jne push or xlat int3 dec xchg cs (bad) (bad) (bad) cmp fstpt pop jmp mov hlt (bad) lret xchg movsl stc iret addr16 mov clc (bad) lcall xchg dec mov cmc pushf int sti jno lret pop jne or push xchg mov insb dec (bad) jg sub roll mov xor outsl (bad) (bad) ljmp cmp pop xor leave dec jo roll popf xchg ret mov (bad) mov mov mov ret test clc inc xchg inc sbb lds (bad) ljmp and pop sub (bad) xor lret jbe push cmc decl and (bad) jno lods and and stos cli (bad) ljmp push rcrb inc (bad) jecxz icebp jns cwtl and inc movsb std lea das je test icebp jmp mov test test lcall lcall xor stc xchg cmp xchg mov jne cmp jmp mov (bad) inc hlt dec mov pusha inc leave xchg nop cmp push inc sub clc jbe sti imul adc dec jmp and shll stc mov rol inc fidivr xchg adc stos (bad) mov adc clc dec and xchg outsb push sub js pop sbb push pop inc dec mov (bad) lahf mov (bad) (bad) pushl orl loope xchg adc (bad) cmp movsb aad imul xlat push gs inc clc push or bound jle repnz and mov loopne and adc (bad) decl (bad) daa inc (bad) (bad) sbb in lcall popa cmp inc pop stos pop dec xchg add xchg or mov fucomp (bad) jg jmp outsb loopne loopne jge in push pop push test nop lahf cs ret lock (bad) incl pop jl mov ret pop stos (bad) (bad) inc int3 push pusha push xchg out test and xor and popa jp push shrb (bad) mov mov or fimul fbstp aam jae (bad) (bad) ljmp addl fdivl xchg in imul es xor imul (bad) jmp out push sbb int3 in jno rorl lods je in xchg fdivrl sbb daa jmp incl clc mov nop jno push lods xchg jmp dec cmp (bad) push jmp or push test mov cmp fildll cmp push add mov adc pop sbb push adc jecxz lcall inc jge pop outsl outsb mov ficom rcl (bad) call and int int (bad) pop out sbb add xchg jae pop xorb jge sbb fcompl and xchg (bad) clc incl jecxz adcl mov imul mov sahf pusha sub (bad) pop push (bad) (bad) pushl push push gs dec sub in loope out or sahf bound icebp fwait cmpsl xor pop (bad) (bad) (bad) pushl dec decb adc in maskmovq fisubr push das sbb inc jg insl std popa push test ficoml scas lcall (bad) cld in (bad) xchg fsub push ret inc scas push (bad) imul or xor jbe cmp push enter jmp es std or leave arpl sub hlt add rorl jb jo or push xor xor stos stos pop arpl sub cmp mov cmp inc push add add lcall or add jne pushf sbb xlat (bad) (bad) push decl adc xorl mov and imul mov mov sub (bad) out clc ljmp jns mov outsl enter arpl les (bad) decl lea sbb lretw stos mov das jnp data16 push jge repz push push fbstp mov inc ret (bad) xchg jb das sbbb orl jl scas sbb dec (bad) (bad) ljmp repz sub lcall xor sbb pop mov lcall sbb jo fwait xchg mov sahf cmp nop xor (bad) (bad) jmp scas xchg les das fs push sub pop les movsb insl or data16 mov sub fs sbb mov add (bad) mov outsl or imul sbb and mov sbb mov dec sbb cmpsb loop pop imul (bad) in xchg inc in fistp mov ljmp std (bad) mov scas sbb (bad) loop push inc pop aad (bad) aam lods rcrb jg cmpb in push js push test jno ss (bad) (bad) lcall xor hlt inc (bad) mov pop das xchg cmp aaa jno test loop sub (bad) (bad) (bad) decl pop xchg xchg in loope lds mov pop (bad) fistpll (bad) shll clc cmp push mov loope and js mov (bad) (bad) (bad) mov sub jnp mov outsl icebp stos inc dec or outsb sahf sbb or xchg movsb xorl and (bad) jg inc ret sbb or nop jl (bad) (bad) (bad) jmp xchg dec sub or or sub iret sbb sub cmp (bad) jmp lahf sbb mov or lcall add mov stc int3 or in lcall push test repnz push lds add hlt add add popf inc push enter std pop (bad) call mov in out ds (bad) pop sub clc adc fs test bound ds (bad) (bad) incl mov imul sub jo,pn mov xchg cwtl jne inc push addr16 stos xchg in test out add scas sti cwtl dec ret and mov call and sub jmp pop push loope idiv lcall inc stos mov (bad) mov imul nop push rorl and popf xchg sbb fnstenv or fdivr pop inc dec jb outsb cmp xor mov xchg sbb adc cmp (bad) (bad) das push inc std int3 jmp mov push test loope (bad) ljmp test inc (bad) enter or and pop lahf pusha xchg dec inc jge aad dec dec add leave ss hlt inc idiv lcall pop sbb out fcomps out or ljmp shrl inc cld push cld call push mov dec sbb mov xchg mov scas mov addr16 mov ss js loopne mov (bad) xchg das clc mov fs ret flds mov xchg (bad) (bad) (bad) lcall cwtl cmc cmp in mov aad add fwait or int3 (bad) or (bad) (bad) call loop xchg out xchg sarb adc xchg inc (bad) push xor pop fild (bad) (bad) mov mov mov sbb (bad) jne mov mov mov (bad) (bad) call dec xchg adc xor push pop pop ret movsb xchg xor jge sbb mov call leave mov out lcall fcomip call fnop aaa jmp out out xor adc test add cmp call ljmp sub sub mov sbbb cmp fiadd std pop aam icebp lcall ljmp and in (bad) test push xchg cmp (bad) ljmp jl mov mov pop int sbb or scas mov sbb pop push jb aam add std leave xchg (bad) (bad) call push insl and and insl pusha shrl xorb or sub test pushf subb add adc push cmp fisub dec js sbb pop adc loope cs movsb pop add (bad) pushl sbb cwtl movsb jmp fisttpl mov fdivl inc addr16 clc incl cmp sarl test int3 lret mov cli (bad) push mov je aas pop xchg (bad) push clc sarl adc iret sub mov add inc loop mov sbb pop fs (bad) out inc (bad) aam push sbb jbe es jecxz dec mov stos not cs and (bad) (bad) jg or and popa imul sbb cld lock divl push cld pushl rcrb push cmp loopne mov inc mov ja (bad) (bad) (bad) ljmp push fs (bad) and mov int dec dec out mulb mov outsb in (bad) (bad) call sub sub icebp push fiaddl mov xor sbb inc ja mov add or fiaddl lea dec scas mov out in lret (bad) jmp xchg imul int3 xor scas test ljmp dec loope fs xchg jo mov mov aas test scas pop (bad) dec sbb cs add jmp pop and in ljmp cmpsb mov inc stc lahf jo inc pushf rorb (bad) mov rolb mov xchg mov gs adc decb pushl popa xchg jecxz sahf test xor call test bound mov (bad) test dec test and jb xchg cmp mov in add jmp das adc lods mov mov xchg dec imul call mov push pushl jae mov sbb ss xchg aad mov rcl push sti pop mov fcmovnu negb imul out sub out adc sub shrb dec (bad) (bad) and out fldt aad gs jne aas mov bound and cmp out fcoms (bad) (bad) (bad) (bad) fisubr or notl pop jae lods mov mov (bad) (bad) out fmulp lods mov adc loope mov xor in cmp das (bad) (bad) (bad) fistpl pop push (bad) sti out repnz (bad) (bad) mov imul addr16 mov js sub mov xchg jbe (bad) (bad) (bad) (bad) mov add es (bad) mov jmp into or xor dec add push shlb push lcall pop into fidivrl jo mov lds pop push sahf (bad) decl jge adc cmpsl fwait sbb inc add push cmc (bad) (bad) ljmp mov ret leave mov rclb adc pop repnz incl mov pop jge inc sbb rcrl (bad) lcall xchg inc adc jbe lods addr16 sub in jbe aad adc pushf jo (bad) (bad) ljmp mov adc pop bound push jno dec and pop adc and clc test dec divb insb or bnd adc sar pushl xor rorb xchg lahf shlb jnp inc arpl (bad) (bad) jg les or jg test inc pusha add mulb loope aam jmp xchg pop cltd mov (bad) ja lea sbb mov mov int dec mov les sbb inc add lods arpl (bad) xchg aaa push ljmp loopne (bad) (bad) (bad) cmp daa insb cmpsb mov fnstsw dec mov lcall mov add (bad) mov (bad) (bad) decl xchg lock jb sbb dec or int3 fsubrs iret pop jmp mov adc (bad) fisttp int3 sahf repz inc adc sub dec (bad) lock push movsl repz in mov add cmp (bad) (bad) fbstp add (bad) clc lahf into xor jbe frstor (bad) (bad) ljmp (bad) (bad) jne xor dec sahf pop clc mov movsbl inc jg jne push fs push cld (bad) pushl sbb and inc sbb jae movsb daa hlt pushf bound (bad) mov das xchg mov cmp pop bound sub xor mov jg mov pusha adc pop pop and (bad) pop ret adc adc data16 lcall test add jl jmp das clc and mov lea test (bad) in divb ds (bad) (bad) jmp lret mov fwait lcall dec mul out lock test (bad) xchg dec xchg dec jmp aaa and pop xchg hlt cmp test (bad) ljmp adc outsb jge xchg sub and pop pop in test push push push leave add pop mov sbb addl lret adc push xor enter (bad) ljmp pop sbb test sarb lock lock add mov (bad) out cli and and cmp push andb aad dec pop ss popf into adc (bad) (bad) (bad) pushl dec sbb mov movsb jns,pt negl cltd daa pop mov cltd cmp pop mov (bad) pop add and sub addr16 (bad) incl xchg stos xor xchg stos in xchg xor in lock lods ljmp cmpl xchg outsb fdivs shl in mov mov push and mov addl cmp adc (bad) cmp incl cmpsb das fmuls fildll imulb bnd inc out pushf enter inc inc jmp mov cmp loop cmp xchg arpl mov (bad) (bad) ljmp daa push in sub mov je je cmpsl or dec pop pop clc adc cld (bad) lcall leave fnstcw xor cmp out push and aas and mov mov pop lcall mov jae (bad) (bad) (bad) fnstsw gs nop dec sub imul inc popa add icebp mov pop in mov inc popf bound (bad) (bad) lcall les in mov ja cmpb fcoms and enter ljmp std pop xchg ret pusha jecxz mov pop (bad) (bad) (bad) ljmp cmpsb neg adc pop fs inc mov sahf in and ljmp ret mov xor (bad) lock (bad) addr16 bound out popa dec mov ds pop movsb clc push cmc sub ret cltd les (bad) decl stos and lods inc push or cmovp test inc mov sbb lock cmp ficomp adc add lcall insl cmp pop adc stos ret mov push push (bad) push adc repnz sbb sbb cmp (bad) (bad) (bad) incl push mov inc mov imul movsl jb push das bound repz sub (bad) decl sub addb outsb xor icebp or out inc idivl adc (bad) (bad) fbld mov mov cmp shlb enter cli xchg jno and call mov (bad) cli (bad) fcomip enter mov inc cmpsl jbe mov decl lret dec mov or mov movsl cmpb ljmp test (bad) (bad) jnp (bad) or mov shr mov outsb dec fist pusha xorl fs (bad) mov (bad) (bad) mov or mov lahf int inc and loopne (bad) aaa push sti (bad) mov fs jnp push fnstsw dec and and cmp pushf shll add in popa jnp mov jecxz mov aam adc in dec rcll push mov (bad) (bad) pushl xor dec inc adc xchg xchg test mov push ds out outsl jo cld (bad) (bad) jmp outsb dec mov mov popf in aas leave push or cmp or ret add sub gs pop adc sub outsl (bad) insl mov push stos sbb lock or clc test fxch dec and push (bad) outsl test pop mov ret (bad) mov mov jp jmp mov inc pop fnstsw mov outsl (bad) sub jno push sub jno adc outsl (bad) cmpsb ljmp sbb (bad) dec sub push cld or pop das out loopne push icebp (bad) lcall xchg push jmp fmulp jnp adc jae sub sbb scas (bad) lcall xchg mov jo pop lods lcall clc aaa mov push imul jmp scas jp test ljmp popf loope jl loop mov pop das xchg hlt mov ss fld (bad) lcall and lea sbb mov push xchg inc xchg adc sbb (bad) loope cld mov adc inc leave mov pop movsl xor xor repnz call mov inc jmp dec add mov push mov (bad) (bad) jmp push inc lock or mov mov mov mov leave jne outsl iret sub ljmp out xchg mov scas or fwait sub cmp test mov hlt movsb dec pop jge adc mov std in cmp add out cmc bound or cld (bad) (bad) int3 push pop enter andb xor dec jmp xchg fdiv adc shrb add or (bad) rcrb das outsb icebp shl xor call fucomip sti adc out sub int3 dec mov or push (bad) (bad) lcall les push mov out gs dec test or cld (bad) (bad) (bad) cmp pusha ljmp pop push aam clc negb xchg movsb decl (bad) (bad) cmp arpl ja pop flds icebp or fnop xor bound inc int3 pusha cmc jne mov in lcall sub addb cmp fxch test and and incl fcmovb or push jns inc dec fwait sbb orb pop ljmp inc jp inc in pop hlt in mov inc (bad) enter das nop add lcall (bad) (bad) std mov (bad) mov aas sbb and fildl mov push fsubr sbbl (bad) pushl (bad) clc pop int repnz sub mov or jae fstps dec xchg sbb cmp xor dec hlt dec and (bad) mov push hlt push pusha ss or fstpt leave imul (bad) ljmp outsb data16 mov sbb xchg mov sbb loop js inc cmp (bad) incl mov xchg inc cmp fst push sahf je es decl loop mov adc push sub dec out mov aam (bad) ret xchg jnp mov (bad) lcall dec xchg fiaddl push jge iret test dec imul pop ds push sbb mov cmp lods imul jo in mov aad (bad) (bad) (bad) (bad) jp push fldl scas push call push out sub cmp stc mov cld (bad) pushl sub ja sub cmp inc mov mov jmp arpl cmp mov inc adcl cmpsl jo pop sub or mov iret lahf rclb std lods mov mov push pop mov (bad) jmp mov lcall fsubrl mov paddusw cld mov inc pop cmpl inc dec ja mov pop push fldcw sub clc insb hlt iret bound movsl ss shll jae xchg pushl pop pop test les xor movsb js adc jecxz push jge fdivrp mov lock (bad) lcall test push imul shlb mov adc test xor push mov (bad) lcall inc daa cmp outsb jno pushf jae cld mov push je in js xchg mov (bad) incl stc dec pop arpl fs xor mov es cmp add sbb push cld lcall inc aam roll xchg decl ret inc push daa dec das add std jmp sar data16 out sti push mov iret xchg int repz out lret popf xlat ficompl cmp mov out (bad) mov sub (bad) je in mov decl jnp push cmp hlt mov test or pop loope pushl jnp adc push add loop inc push popf dec adc aas (bad) (bad) (bad) in push sub push pop stc cltd loopne push sbb out mov popf mull call and mov ljmp cmc mov sahf cwtl insb mov push inc sar lahf sbb mov lret pushf jp addr16 (bad) (bad) (bad) call adc cwtl out and jmp (bad) adc clc add xchg (bad) push jne ljmp mov (bad) hlt and in push fsubs cmp xchg test mov cli (bad) jg cmc jge mov cmc sub jecxz mov add ljmp dec in lock ja sub mov call mov xchg lret (bad) ja test and decl adc mov cmc add in aam outsb pop sub sub mov call scas push test sarb sbb adc (bad) (bad) cmp ret pop leave fnstenv jle pop in pop dec sbb xchg lds aam out pusha push adc (bad) mov push add push fadds (bad) (bad) jmp adc repnz inc mov mov rorl lcall push jg lods push sub mov mov (bad) (bad) (bad) (bad) jge jge fdiv xor add sti xchg adc pop aas movsl aad aam pushf sarb enter xchg fs outsl cmp mov shrb pushf (bad) (bad) (bad) inc mov lret call dec xchg or or cmp imul test push (bad) (bad) call cmc adc aad (bad) mov mov enter dec hlt sbb jbe (bad) call lcall fmull mov mov or xchg cmc fbld mov xchg pop add dec xor inc mov mov add jecxz add pop aam push (bad) (bad) pop mov and inc and lret jecxz (bad) (bad) jl (bad) mov rclb ret jecxz mov imul (bad) lcall inc cli sub movsl cwtl push dec call mov dec cld (bad) (bad) in push inc test test loope movsl xor iret dec int3 cli repnz leave mov (bad) decl out imul cltd cwtl rcrl cmp jnp aaa fcoml xchg adc mov clc add dec das call mov (bad) (bad) (bad) ljmp push daa ret rcr dec bound jle mov scas jae add xor notl lret mov dec sbb sub in (bad) (bad) (bad) pushl inc dec mov cmp jns in cmpsl add xor jne cmc das push jne sahf rclb dec nop dec inc xor and (bad) sub or mov das and jle rcll add nop push mov js push cmp loopne push cmp push push xor mov (bad) jg cwtl icebp lahf loope add loop fsts add push xor inc add jne lock mov loopne gs xchg or (bad) sub (bad) (bad) (bad) dec fdivrl sub or arpl mov jno scas xchg inc bound mov dec mov fnstenv ljmp orb jl push jle mov shrb mov testl leave mov (bad) (bad) (bad) ljmp mov (bad) addr16 aad mov movsl xchg jne fsts js (bad) pushl cld lahf xor das xacquire pop or (bad) adc aas mov sub dec dec loope incl jnp sarb mov sub jmp lcall ljmp cmc es in inc push pushf enter insl stos push cmp test mov lcall push out shl cmp in jne lock repz cmp out cmp lcall xchg add dec xor pop fcoms jmp adc (bad) (bad) call inc fcompl cmpsl enter mov subl in stc out and (bad) (bad) (bad) lcall clc cmp xor aaa add das fstpl in mov int3 das mov jmp imul push or or fcomip (bad) jmp out stc je mov inc (bad) hlt int sti xchg sbb push adc jns loopne jecxz inc je add addr16 jmp cld in insb dec and pop add (bad) jle insb loope movsb fstpt mov mov cmp das and movsb jo push inc (bad) std mov into mov (bad) (bad) pushl (bad) mov mov or push jae sbb (bad) (bad) decl sub les rcl lret cs out stos (bad) (bad) (bad) (bad) dec arpl mov ret cld or xor mov stos jp pop test add (bad) mov jbe (bad) out decl mov addl in add out and (bad) call and sbb xchg pop mov imul inc ljmp jmp mov lds dec pop push pop icebp push test inc push lcall mov xchg stc mov iretw mov (bad) (bad) mov repz dec enter jmp and roll (bad) aas sub jnp decb xchg loope inc push sub hlt (bad) jmp lret cmp cmp inc mov into xchg jge xor (bad) (bad) inc scas jae push daa into movb or loopne add (bad) ss idivl (bad) mov adc cmp jg sub sub (bad) cmp adc adc or mov mov inc sub stos xchg test ljmp mov imul pusha push icebp sub div shlb (bad) decl dec ds mov cmpsl inc mov mov popa insl xchg and movsb (bad) jg decl (bad) aas test and xchg xorl xchg xchg (bad) xor fimul (bad) (bad) jmp mov mov in mov jno jecxz cmpl cmc sbb ljmp clc (bad) decl cmp cmpl or mov xchg push aam (bad) decl push popa shl ss pop jae dec xchg dec mov adc (bad) (bad) cmp mov add lock cmp xor dec add push jo mov xor jnp add js mov cmpsb cmp lahf fisubr add ja xor lret fdivs loopne es decl js mov push jge push mov dec mov scas mov out add ss std ds (bad) cli fcoms sar incl imul sub jmp mov stos (bad) add sbb lods (bad) pushl pop je cltd in iret pushw pop add int add (bad) jmp insl insb pop mov ja lods fadds sbb pusha add xchg sbb xorb (bad) (bad) decl lock ds pinsrw mov inc mov (bad) out (bad) movsl or jb cmp sahf scas and jns push mov repz lret repz pusha mov adc jmp pop xchg pop bound and or stos cmpsl (bad) (bad) (bad) jmp mov or aaa add jns jg xchg in call (bad) (bad) (bad) inc push iret add jne fucomp arpl xchg rclb (bad) sub sub ljmp rorb cmpb xchg and call (bad) (bad) mov dec cmp push ret and xchg fcmovnbe jo inc pop int adc cld inc rcll cmpsl mov nop fmuls mov ja mov adc xchg lret fdivrl clts pop clc adc xchg movsl test add insb divb (bad) dec sbb (bad) (bad) pushl dec lret inc in pop xor pusha out push jl sbb dec enter adc mov mov lcall mov fstl pushf outsl (bad) mov dec cli (bad) (bad) (bad) mov mov out push adc pop or adc xlat (bad) (bad) (bad) out pusha pmovmskb and mov xchg fcmove lahf and push outsl jb inc mov (bad) (bad) jmp mov push xchg mov loop inc loopne mov test xor xchg xor (bad) ljmp mov cmp (bad) pop sbb inc dec jl jle or xchg jmp mov cmc aas xchg push (bad) mov pop pusha sarl inc cs test lock repnz (bad) (bad) pushl lock push jb add xlat roll in addb dec sbb bound inc fs inc jmp nop cli cmp mov mov das insl cld (bad) pushl and or movsl adc iret and sbb sbb (bad) (bad) jg inc ds and lods stos out repnz sbb ja sbb test or jmp xchg (bad) lcall rclb mov mov cmp mov inc ja mov decl dec out fs pop push mov sbb mov pop xor ss sahf lahf push mov mov loope call add lea xor mov lcall outsb push sbb push bnd push fadds std push lcall cmp jae pop mov cmpsl sbb jecxz pop jge (bad) lahf inc or stc push pop and leave cmp cmc and shlb in shl mov insl pop iret aaa out xchg mov (bad) (bad) call push cmpsl clc adc jle and push ret or movsb xchg es jmp mov push inc (bad) (bad) (bad) pushl or rcr or add inc jns mov (bad) xor mov in arpl popa sub push jno insb xor fmul (bad) pushf (bad) idivl (bad) (bad) (bad) pushl mov add dec int or inc adc add inc sbb (bad) ljmp sarb cmp xor fildl and jmp xor xor (bad) (bad) decl enter (bad) jno mul sbb or rorl cmpsb insb jns sub dec (bad) repnz xchg std pusha cld xchg cmpsb jp lock (bad) (bad) push fnstenv jo insl dec insb ds sarb lods pop call (bad) add (bad) ljmp xor xchg clc dec or pop outsl (bad) lcall add or pop add nop mov mov dec push push aas ljmp lcall adc cmpb xchg pop jns or ficoml mov js and (bad) ljmp dec adc or mov (bad) call jb mull fstp test (bad) es dec loopne ljmp lcall push dec mov in std dec stc addr16 cwtl (bad) pushl jne inc pusha fbstp push jo pop test (bad) (bad) (bad) cmp out mov sub stos pop pop test dec cmpsb shrb sbb adc push mov stos decl jmp (bad) icebp loopne adc mov jnp cmp mov arpl jl push xlat sbb sarb cld mov mov or mov (bad) mov mov dec cmp xchg shlb sbb mov jg (bad) jmp inc lea cld test pop inc inc (bad) jnp ss mov xchg adc icebp (bad) lcall and and jl outsl xor movsl jg push (bad) (bad) incl out push jg ret adc test inc in outsl cli or add enter adcb (bad) jmp mov dec dec jb fs dec xor mov adc lcall pop cmp lods push pop int lcall mov fwait sub popa cmpsl (bad) (bad) (bad) ljmp mov or dec and loope mov or lock nop push (bad) (bad) (bad) jmp xchg insb repnz jl mov ret out int3 pop les movsl mov inc enter das js (bad) (bad) call sbb shrl outsl arpl testb scas stos fs into in cmp loopne xor add sahf jl clc jae pop dec xchg xchg cmp jl cmp dec (bad) (bad) (bad) push adc mov cmp out mov xorl push mov dec shrb add jb xchg adc inc or sbb push jl push popa xchg cld (bad) (bad) jmp mov xor test inc or push xor leave movsl sti rcrl ja into mov call adc in mov xchg int push (bad) (bad) (bad) jg imulb pop pextrw pop roll addr16 fcompl and cmpsb fisttp (bad) (bad) (bad) push jg add test mov mov and ret mov lret jbe mov xlat outsl in mov mov cmpl xor (bad) incl sbb rorb mov xor inc ljmp jo (bad) ljmp sub outsl ss repnz imul fildll (bad) (bad) push mov imull jns out xchg add loopne cmovle sub mov in pop ret and xor pop mov jp lcall dec mov int3 loope mov jmp sti hlt jno mov icebp push es xor (bad) (bad) call sub aaa pop shlb mov add (bad) and adc inc and push (bad) (bad) incl fstps (bad) in mov pop lea xchg lret dec pop sub (bad) (bad) decl adc data16 mov icebp nop inc xor mov rorb incb cs (bad) incl mov mov lods loop and cmp in movsb leave lcall jmp add out cwtl stos jge mov (bad) fcomip dec das (bad) out (bad) insl pop xchg arpl out xchg not into (bad) inc inc loopne pop mov repnz jge pop adc xchg (bad) (bad) cmp xchg pushf adc aad jb sub imul sub (bad) std mov jb sbbl xor jge mov cmp and (bad) lcall (bad) test call mov push xor je aam xchg lahf mov incl inc push cmp jae mov data16 fildll cmp inc add push mov push dec xor dec cmc push (bad) lds (bad) out clc inc popa (bad) je adc repnz inc movsb and xchg leave lret xor (bad) (bad) mov (bad) stc clc ljmp push lret repnz push mov (bad) jae pop and (bad) ljmp cmp mov xchg das bound imul in mov adc (bad) (bad) call (bad) scas dec inc pop pop ret and push std rcl adc lock (bad) fbld insb addl inc movsl lcall push cmp push jne jle and push mov inc inc mov imul test cmp enter sti jg (bad) decl mov leave push inc xor (bad) lcall mov jnp ja adc mov mov outsl repz (bad) (bad) call rcrl repnz mov fnstcw pop faddl insb (bad) shr push int3 lret scas mov aaa (bad) (bad) (bad) pushl lret and enter fsubs jnp cld add imul sub mov insb cld (bad) call push push inc in lahf repz (bad) cli pop mov push (bad) jg sbb or or daa or sbb cwtl mov addb or test add shlb cs sub xchg xor cmp clc imul cmp xchg sbb dec dec sub je (bad) shrb dec sbb sub xor (bad) (bad) jmp mov push add jno and repnz (bad) mov or jne push xor (bad) (bad) call imul in inc push xor cs out lods or scas loop movsl in shl pop aad (bad) (bad) (bad) (bad) jle sub outsb popf sub and pop insb arpl (bad) mov bound outsl loope adc fiadd js iret pop (bad) inc push lcall sahf and ret (bad) fbstp scas sub lcall mov or (bad) (bad) (bad) (bad) jp test or xchg test sub sti push mov (bad) mov pop sbb sbb (bad) push cmc push dec push aam mov daa push (bad) (bad) (bad) mov and adc lods cmp iret or or sbb inc mov mov cld and mov in pop mov mov int3 sti mov sahf xchg jp or in xor int3 out repz popf mov xchg sbb cmp pop inc sarb testl enter add (bad) (bad) (bad) jmp mov or xchg mov stos xorl cmp add enter jg and stos int3 shrl inc mov call adc add xchg xor xchg call movsb fwait imul dec jne jo push (bad) aas ja (bad) lcall out push jae xor mov or xchg sbb cld pushl test jp fwait cltd in pop fiaddl inc jo insl cld push pop in inc jecxz pop or pushl stos orb (bad) or adc mov pmaxsw add pop je sbb or in ja call aad cwtl push iret (bad) ret mov sahf fsubr cld cmpsl (bad) movzwl mov out mov cli je mov xlat int lock jp inc ss movsb or ljmp (bad) decl (bad) cmc jge adcb ret and xchg push xchg iret int cs add shrl hlt mov into sbb scas xor pushl or sub jle mov cmp (bad) inc sti sti xchg js inc sub mov mov les push and dec sub (bad) into out and (bad) (bad) call pop mov jno or int or int3 test imul xchg aas or icebp aas mov (bad) (bad) (bad) jmp movsl leave leave iret jbe fxch shll into inc mov (bad) int3 fxtract mov negl sub incl clc mov xor je xchg pop push xor decl insb mov dec scas inc scas js pop push leave jbe or (bad) mov lahf sbb sbb aaa loop in jo jb jns sbb jne ljmp xchg (bad) xor inc imul lcall es (bad) (bad) mov movsb (bad) (bad) ss sbb mov push jbe jo insb scas cs sbb fwait pop (bad) (bad) (bad) lcall push fimul sbb add push test push dec rcrb push (bad) (bad) (bad) ljmp (bad) lahf xchg add jmp xchg lcall rcrb popf inc inc jle and iret inc (bad) (bad) (bad) call aad test mov int arpl jno jno dec sub stos cld out mov lahf dec jp (bad) jg daa lods mov mov mov mov pop iret lcall adc xchg push cmc outsl xchg decb lods and sub popf loop loope sbb adc je cld daa and pushf mov leave add (bad) mov mull cs jb fcoms dec sbb pop ja jg mov mov aam mov dec pop lods add dec ret and (bad) (bad) jmp push mov out jmp xchg jmp dec (bad) mov and jne mov mov mov dec (bad) xor dec push inc add sbb lock cltd data16 adc sub dec push push (bad) (bad) (bad) ljmp rorb sbb inc lret sub in fdivl xchg mov and inc inc (bad) jmp int3 inc dec cmp mov cld inc test push rol (bad) ljmp sbb rcll sbb dec mov in ljmp push push jnp adc gs (bad) and mov (bad) (bad) (bad) (bad) jmp push fcompl mov (bad) xor cmp aas mov shll inc lret scas cltd push pop pop jmp fbstp repnz mov add int3 insb ljmp inc add mov out xlat jns (bad) sub jl cli lcall (bad) cmp out aas xor jmp int3 or jecxz add sbb sbb rolb xchg das mov dec jo mov sub (bad) (bad) (bad) inc outsb or inc cld shll lret ss push mov repz loopne pop test leave jp sbb popa stos lcall push adc push aaa pusha add cmp std cltd add das xchg loop aaa es or js sahf add push scas mov pop sub movsb (bad) clc fdivrl xchg inc call pushf push (bad) (bad) (bad) (bad) lcall pop and add rclb fisttpll xchg cwtl dec outsl cmp out pop (bad) jg mov jg push repnz pop dec shrb cltd cwtl xchg test add call cmpsl mov aad dec lcall popa imul push gs jae mov incl sahf cmp dec jbe int ds xchg outsb push int3 sub cmp inc (bad) (bad) pushl jo push mov test mov jno mov dec je sub cmc outsb gs imul int3 push insb ja push (bad) mov aam cmp xchg xchg cmp (bad) mov pushf add sub sub mov sub shrb pop inc (bad) (bad) (bad) incl and xchg lcall stos push mov mov fistl sbb int jae (bad) (bad) (bad) lcall mov dec (bad) iret or mov jmp out mov insb cmp jns jb push jg (bad) jl sbb lcall (bad) mov dec (bad) (bad) fbld jae out icebp pop fidivr (bad) and fnstenv hlt pop gs push sub scas (bad) mov cmp push sub insb push jle cmp pop xor outsb mov dec pushl pushl xor ja inc and dec js fwait sti testb sub (bad) ljmp (bad) ja aaa cmpsl cs insb call xchg (bad) xor mov and psraw mov add fildll cmp push pop mov jmp (bad) mov cmp or stos jmp mov es xchg mov push cmc jmp fsubrs mov pop xchg (bad) (bad) push dec xchg lret rcl mov ds xor movsl mov fidivr fimul dec stos decl fdivr pop out loope xor lret cmp jb sub (bad) fisttp test daa pop push inc push insb mov fcomip (bad) jmp (bad) rcl lods add dec cmp (bad) or stc xchg cmp and incl pop outsl jge pushf arpl lods (bad) (bad) (bad) call and xchg sahf or inc and mov mov ds fs jge xlat mov repz jg (bad) call cmpsb fimul lahf pushf dec scas movsl xor add sub (bad) pushl lods stos jne hlt in jp je fnsave pop mov outsl lcall fild fisubl cs cld push and pop cmp lcall mov sub out cmp jnp je cmp stos (bad) (bad) (bad) jmp mov jle mov mov into jmp sbb fsubs cmp (bad) fist aam (bad) inc pop mov sbb adc scas pop clc xor push or sbb (bad) pushl movsb dec mov stc cmpsb pop xor pop scas or fsubr add and lcall inc or xor std cli lret outsb and (bad) call xor sub in in fstpt cmp xchg and bound add clc (bad) jmp test stc jnp or inc sub sbb call mov inc cmpsl fcmovbe bound pop inc into xorb decl dec (bad) mov add xlat jno xor sub mov xchg pop and vmovntps bound cmp (bad) push push xchg jne inc sbb pop repz hlt pop pop jg cmpb (bad) (bad) out xchg (bad) ljmp or jp inc dec xor ljmp cmp add daa or (bad) (bad) (bad) (bad) lock lods mov outsl sarb push pop sbb arpl fisubr fist (bad) ljmp outsl dec mov xor ss mov dec test test or jmp out out hlt add mov xchg js mov (bad) out clc call pusha mov insl sahf jg inc lock fild (bad) decl pop push lahf jae add nop int3 mov jg (bad) ljmp lods cwtl pop and outsb cmp dec mov push jmp xchg or insl xor cmp mov andl cli stos stc test into inc pop jmp shl repnz jg dec fwait push inc cmpsb and mov adc pop cmp inc int3 addr16 and sub jne repnz arpl jb stos and push ret loope lea (bad) (bad) (bad) lcall xlat test dec mov inc loope loope and jo mov push je std or movsb (bad) stos (bad) (bad) cmp pop mov mov add pop xchg fs aad dec ljmp xlat xor mov fisubl test xchg popa or (bad) incl inc cmp push mov jb jp clc fcmovb push cmp ja jle arpl icebp jl movsl jecxz outsb jge (bad) (bad) ljmp sub aas pusha aam push ljmp push ja inc jmp aas dec mov push lcall inc les jg inc and ljmp pop jge pop mov xor mov clc aaa ljmp or mov push call int aam loop pop and push popf stos hlt dec adc xor out (bad) (bad) (bad) (bad) out fnsave mov jo fs xlat ret sub (bad) cli lods fucomp enter in loopne pop xor fisttp pop push out push mov in jnp movsb mov (bad) (bad) (bad) call jmp push mov jl sar sbbl (bad) (bad) (bad) (bad) mov xor insb mov (bad) fistpll adc or cmp (bad) (bad) lcall inc (bad) dec repz dec scas mov push sbb jns sub (bad) decl xchg jmp lret dec jbe inc push mov test mov mov inc mov insb addr16 pop test ds sar jmp mov dec lea fwait push push in inc sub (bad) (bad) (bad) jg leave add mov (bad) out sahf cmpsb mov pop out adcb add adc fisub lret loopne (bad) inc mull pusha mov popf jle add pop and jb sub xchg mov (bad) ljmp dec in andl dec ffree aam je sub pop inc (bad) (bad) (bad) ffreep ja cmpsb sub ja dec aas xor mov pop xchg test scas lods or loop pop or std jbe and sbb mov push or mov inc (bad) mov sub int pop pop lret fs xchg daa test (bad) (bad) mov cmp add iret mov mov (bad) jne add test hlt inc xacquire ret jo lcall ds test cmp dec (bad) (bad) mov adc and mov lods mov ret lds add mov (bad) jl add jge inc js sbb (bad) (bad) (bad) mov dec sti (bad) or adc mov push sub bound fstpl jae sub (bad) fcomip ljmp mov stos (bad) jbe xchg add pop lods sub dec sbb (bad) (bad) (bad) cld pop jge in mov push adc jle cwtl icebp pop loope push mov testl mov loop (bad) (bad) cmp cli mov mov sbb xor sub (bad) cmp lods shl lcall test jmp stos pop out stos out (bad) (bad) (bad) lcall sahf push xchg mov cmp and leave icebp or xor jne addr16 cmp pop jmp daa dec clc (bad) call mov shrb (bad) mov jmp (bad) decl es add dec out jecxz sbb sub mov les (bad) (bad) lcall adc lock pop imul stos into in and mov inc pushf cltd pop hlt jecxz jle mov mov jno pop dec repnz add push out xchg hlt jbe xchg inc or out iret xor std (bad) (bad) (bad) (bad) cmp mov xor sub mov lret loop leave fildll jp ja,pt mov pop lods adc jbe stos ret es mov add dec adc insb inc sbb (bad) (bad) incl mov cmp je aaa (bad) cmp loopne scas stos ds mov cwtl push fdivr dec shl xor loopne push (bad) (bad) ljmp mov or or xor sbb adc jnp imul (bad) cli mov push fstpl imul dec cmp popl jmp sbb dec (bad) xchg lcall (bad) dec jns pusha lea leave int je fnsetpm(287 push xor jg das (bad) push inc std pop test push lods mov pop movsb addr16 add gs mov int lock movsb jg and icebp insb jecxz (bad) dec call xor sub sbb cld cmp pop imul cwtl pop stc jne (bad) (bad) ljmp mov popf out or popf dec dec int3 test call outsb xchg pop lea aaa sbb pop push lds fcmove fwait loop incl icebp js and cmp sub mov (bad) pushl bound pop in push sbb xor (bad) (bad) ljmp jp adc jb mov mov xchg test dec xor push cmp inc cmp mov mov jge cmp rorl mov int inc mov xchg lret (bad) xor call maskmovq negl pop inc stos pop lock jp out bound scas adc pop int (bad) ljmp gs xchg dec icebp hlt mov pop insl cld call inc (bad) fild lcall rcrb adc (bad) (bad) pushl out push jns std lods in dec loop outsl dec push or xchg fild rclb push xor jns,pn pop aad push cmp int3 cmp in adc cmp (bad) push das mov mov outsb pop jmp mov mov rorl jl or cld and cmpsl jo xor (bad) (bad) (bad) decl test scas mov dec mov imull pop or enter push sbb in jno (bad) xor adc push cs movsb (bad) (bad) (bad) call push imul mov cmpsb jae es jbe xor scas jnp in jle out xchg mov lcall xor mov xchg dec xor mov js push (bad) (bad) call xor enter add fldt mov push dec fisubrl hlt (bad) out adc scas mov ljmp xchg mov lods mov mov insb mov (bad) ss jl or push (bad) mov (bad) jmp insl inc mov jl mov hlt (bad) lcall dec fild push repz sbb xor in xorb (bad) decl (bad) lea jmp cmc andl and bound push mov lock sbb rclb xchg or cld bound popf dec and (bad) lcall add cmp fisubl lcall cwtl in inc inc (bad) pop add mov lcall or (bad) (bad) decl lahf mov fcomp imul lods inc mov inc mov mov cld (bad) jg fs dec aaa sbbb xchg ret mov sub hlt call push js or jge jle (bad) decl jbe adc cwtl insl ficompl (bad) aaa push sub (bad) dec jg (bad) out ds ljmp daa stos test jne ret mov aaa or add pushf (bad) jle fnstcw call mov aad push aaa jecxz fs mov dec jmp test in (bad) (bad) inc aas arpl push push shll in imul sbb jle dec jns lock push repz je mov pop sbb sbb pop das lods into test dec (bad) pushl mov cmp inc jmp xor (bad) (bad) (bad) decl or and pop dec and jecxz fcoml loopne inc jle mov xchg pop dec push (bad) (bad) (bad) call dec mov xchg test movsb pop or ljmp add movsl sahf iret dec js cmp push lock cmp dec lahf push int3 or xor inc test xchg (bad) (bad) incl mov outsb push mov mov jge xor and push add das mov (bad) cld xchg out pop adc ffreep cmpsl dec js insl int jns int pop add adc repnz inc pusha fs push xchg inc fisub (bad) (bad) (bad) jg into lock cwtl jbe mov fnop popf aam (bad) mov and fidivrl add cld (bad) push dec scas mov jmp sti sahf or out pop push andl xchg xor repnz adc out jnp ret insl and incl call in jecxz sub pop xor shlb xchg jle fwait sub ret pop adc (bad) mov push shrl mov ljmp imul imul push mulb popf lahf sar inc inc dec adc jo insl pop jl sub (bad) (bad) decl test stos cmp mov adc jnp,pn sub mov mov inc (bad) daa jns ljmp (bad) (bad) call push fisubrl cli cmp lea insb mov cmp sub gs insb inc gs jmp mov and cs xchg lea jle xor adc cmp add cli (bad) (bad) pushl or xchg int3 adc pop arpl in sbb ss popa pop (bad) test mov or repz mov rcrl and dec cmp jge sub or aam aas call insb sti aad adc movsl push mov xchg ljmp sub mov ja clc mov jo pop lret ficoml dec sbbl (bad) (bad) (bad) jmp pop jbe lret in test add mov jl in pop xchg les call fcmovbe and call mov mov ret sar ss sbb cmp out jge xchg jno into jmp outsl call rcrb (bad) push ss or add test jg mov adc dec std pop xchg sub add js mov (bad) (bad) push cmpsl push fdivs sahf xchg fs sub push mov xor mov mov (bad) adc pop mov xlat inc rorl (bad) (bad) lcall cmp rorl pop test jp fisttpl adc (bad) (bad) lcall xor jecxz sbbl in pop (bad) call sub xor adc ljmp loopne xchg push jb aam mov dec inc cmp jns stc popa (bad) ss lods lret (bad) xlat or xorl cmp add scas cmpsb push mov outsl inc or (bad) mov rcrb mov (bad) jp pop int3 dec xor jne (bad) (bad) (bad) pushl lock out scas push icebp sbbb mov inc push push push aad (bad) (bad) cmp and pushf (bad) les movsl cmp sbb cmp faddl cmp fwait and jg add and cmc inc pop sbb ljmp adc fwait cmp icebp mov sahf mov inc (bad) (bad) (bad) call bnd sbb mov mov sub xchg sti sub mov mov nop dec mov cli xor adc popf cmpl mov push push icebp jg xchg shlb push cmpsb mov push pop outsb das insb mov loope jbe pop push aam in dec jbe add inc mov iret jbe popf mov addl sbb and push outsl push pop clc lea incb sar (bad) (bad) (bad) cli sbb imul pop mov (bad) enter xor dec sahf push (bad) (bad) (bad) jmp jbe xchg inc jo sarb addb cmp push js fisttpl pop push xor (bad) (bad) decl add test jb test test popa insb std test outsl and (bad) (bad) mov das addr16 (bad) jle mov (bad) mov mov call add jle jno ja cli pop test fsubrs std pusha popf loopne mov (bad) ljmp outsb sahf sub hlt or pop ljmp sbb ljmp or inc sub push xchg imul dec ret mov (bad) in repnz dec jne (bad) xor xor push (bad) lret (bad) (bad) mov in test xchg and cld add xlat and je (bad) (bad) (bad) dec int3 dec jno jns lods pop sbb stos int fwait lret in xchg out (bad) push cmp ret lea cmpsb mov lret cwtl lock (bad) (bad) decl ljmp (bad) mov in and jo imul movsb sbbb scas (bad) (bad) mov mov mov fldenv scas jl cmpsb scas test int3 nop test inc jecxz insl fist pop movsl xchg cmp mov lcall clc (bad) mov test test sbb loop sbb (bad) jg out inc pop pop or int push and ficoml pop jg (bad) lcall aad ficompl jle xor and dec cwtl loopne or (bad) (bad) (bad) jmp ljmp ret or mov mov adc dec jecxz imul ret mov jp pushf movsl jle mov cmpsl sub jne add adc cltd pop push out stos gs shrd xchg jmp add xchg test mov arpl (bad) (bad) (bad) call ss stos adc pop rorb (bad) adc sbb sub (bad) decl fcoms jle pop xchg (bad) sub inc mov fmull stos sub popf pushf lods or sub test rorb rorl xor xor aas pushf out push xchg test ljmp inc push fldenv pushf js aam add nop insb add loop xor sub inc std add sarb (bad) (bad) (bad) (bad) jg repz mov (bad) jns pop or mov mov cmp push dec dec rorl call xor jg jns aam pop pop pop xor (bad) (bad) mov gs pop clts mov jno lea fwait shr in and mov cs (bad) (bad) fisttp xor sbb xchg inc test repz out xchg mov cld (bad) lcall jbe xchg xchg movsl rcrb test hlt ss xchg mov xor xchg pusha (bad) (bad) (bad) pushl push and sbb popa sbb stos push idiv in adc lcall sbb sub clc test ljmp loop xor jecxz cmp popa inc rolb push shl adc dec mov leave pushl cld pushl (bad) cmpsb fdivp mov lcall xchg mov xchg adc insl push jns xor iret inc addr16 jge dec add popa add cmp lcall sarb push icebp cmp cmp (bad) xor sbb fcom lcall push mov (bad) (bad) jnp push adc cmpsb shll cmp mov jno or adc ret (bad) dec fistp stc dec xor (bad) mov (bad) pop adc and pop jmp and (bad) mov mov cld xchg sbb mov inc xchg mov dec imul xchg jecxz inc stos mov scas fisubr dec xchg and xchg mov mov (bad) pushl in call adc inc out enter xchg xor stos mov adc cmp adc mov scas test popf icebp popfw mov mov (bad) ljmp lds jno push aam add mov xchg adcl insl std cld inc test (bad) ljmp sar mul sub fwait cld imul cmp das (bad) pushf stos sub mov push es sbb inc jb mov push push test (bad) (bad) decl mov (bad) movsl add std jb mov gs or decl mov push (bad) dec fucomp in or adc xchg push in dec movsl pop stos std (bad) jg sbb clc fstl rorl js movsl jo mov test decl sbb dec inc fmuls mov into and xchg hlt pop jns lcall xchg hlt mov xor xchg fdivrl scas sub jge inc xchg icebp je adc cmpl mov sbb pop repnz (bad) push (bad) push shrb sub cwtl pop int3 xchg mov cwtl stos dec fnstenv notb inc push jecxz sub xchg ja dec sbbl dec jecxz lods (bad) and mov dec jl pop adc push sub (bad) inc pop sub ret fisubrl (bad) (bad) (bad) lcall push stos mov jmp sub jns inc sub or jp mov adc aad adc (bad) pminsw popa flds pop and movsl dec pop xor lret mov xor push sub and ds jg pusha enterw inc pop fidivr sbb incl loopne ljmp fwait in out mov push lods lcall std fs rolb pop add arpl int3 add lahf jmp leave mov inc add mov push ss xchg mov cmpsl (bad) (bad) (bad) pushl (bad) fstpt arpl add pop adc mov adc daa xor jmp xchg lods test sub cmp jl lods push and decl ret mov or int3 fwait scas lcall xchg cwtl loop add inc shrb mov dec ret nop fcoms dec lahf cmpsb pushf add aam scas fnop outsb cli (bad) mov cmp daa in inc out sbb (bad) inc lds push (bad) mov js mov (bad) (bad) ljmp mov cli push mov into dec gs out std mov shrl and mov stos cli dec out (bad) (bad) pushl lret lahf jecxz cld cli cmp mov (bad) mov daa and lcall call mov lret nop decb in add xchg mov pop in dec inc (bad) (bad) (bad) inc push insl pushf inc (bad) sar iret xor cmp inc mov mov in imul inc cwtl lods jae (bad) (bad) decl pop std or jmp popf dec pop ds sbb adc fmulp xabort xor add (bad) (bad) call cli push jno call or sarl add es fmull mov (bad) (bad) (bad) jl add into mov add push sbb push lcall fimul mov xlat push push dec fwait test xor ja (bad) (bad) dec jno test dec data16 push (bad) mov aaa jecxz xchg movsb mov xlat pop in (bad) out (bad) (bad) incl pop xor xlat (bad) gs or (bad) (bad) mov adcl cltd insb xor pop push sar decl (bad) cmpsb jl ret js jb test cmp sbb push arpl (bad) (bad) call shlb lds (bad) mov movsb mov mov push dec and clc xchg add in mov mov jmp xor ljmp imul inc pop cmpsl out mov jo mov mov jno or sbbb sbb jge mov ljmp into aas push js lahf add std outsb jo xlat (bad) cmp xchg movsl (bad) (bad) pushl test out out arpl mov das lcall inc cli out nop ret ljmp hlt (bad) ljmp sub mov dec dec xor mov test inc and icebp lcall mov lods cmpsb clc inc dec and dec (bad) (bad) call subl ja pop test xlat shll lea jg fcomip and xchg jne adc cwtl and inc cmp jg movsb das nop mov add icebp (bad) aad lcall jmp pop mov jge (bad) fisttpl mov (bad) cmp iret sub and (bad) (bad) incl and sub sub mov sahf dec cltd sub or mov push sbb dec icebp lahf or insl push repnz xor rcll rcrb mov pop (bad) (bad) (bad) ljmp push aam xchg sbb jge inc aaa adc shrb sbb lret push loop pop jmp lcall insl mov sbb out bound test (bad) mov and outsb mov inc pop jne repnz pushl mov stc xor jmp mov test aas mov and xchg pop push loop jns and or cmpsb sbb fcompl xor push mov cwtl repnz insb (bad) (bad) (bad) ljmp xchg xchg out ror iret adc loop mov fiaddl je fisubl (bad) ret xchg mov call insb scas pop outsl rorl lock stos ds scas cli (bad) fnop std fcoms dec scas mov cmp lods dec in aas inc jl or mov insb (bad) movsb test jb stc add mov pushf push dec (bad) fcomip (bad) call shrl nop and pushf or jp out orl (bad) jmp xchg xlat movsl rcrb jbe movsb inc dec xor sub cltd sub (bad) (bad) (bad) (bad) out insl mov xchg pop lret int3 jmp insb test int3 repnz xlat repnz movsb dec rorl ljmp cli popf mov fidiv jl xor cmp decl je out les (bad) cmc in or jmp pop push xchg test sbb jg mov fadds outsb fistpl out xor les and mov es fisubrl fdivrl int mov pop and mov push aas (bad) (bad) (bad) decl add adc mov in or rclb lock mov xor xchg push push cld adc push cwtl xchg int3 bound and (bad) (bad) (bad) incl jp arpl cmp and mov sbb dec sbb data16 inc pop cltd dec dec or popl (bad) xchg pop jns (bad) (bad) dec mov or dec jmp sbbl loop pop dec or loopne xchg lock (bad) pushl inc dec jl icebp scas outsb ret and xchg push out jp mov and ljmp (bad) fist fwait jmp call scas xchg mov jg imul jmp add xor push ficompl jbe xchg cltd je incl or scas nop hlt (bad) lret push pop jp mov stos mov (bad) (bad) (bad) (bad) jl (bad) lret inc in or ret sbb pusha and add jg adc push test pushl cmpsb dec fnsave arpl push jle or jmp jp dec gs decb or push cli stos sub roll sbb inc sbb incl popf sub or mov jle mov rcrb pop pop jg pop rorb sbb jmp (bad) jnp test int3 (bad) call push std pop scas jnp les subl int3 out jl adcb (bad) (bad) mov mov popa pop pop xchg inc sub fistpl push ljmp mov (bad) into pusha pusha jmp stc mov mov (bad) (bad) lcall cmpl insb call fistp lret leave ss xor add (bad) push pop adc mov pushl add pop les sbb push or jbe mov add sahf push xor mov iret jo (bad) (bad) lcall lods decl jnp mov fstpt sar loope mov jb sub jg inc push mov aam fs xchg rorl (bad) jmp cmpsl mov movsb insl inc mov scas mov (bad) popf xorb xlat repz mov and pop rolb or jns or leave (bad) jno imul std jp (bad) (bad) jg (bad) mov fcomi ficompl insl xor dec sub (bad) (bad) pushl sub pop push mov add cli mov aaa (bad) dec and fistl out pop inc jb add hlt movsb cmp dec mov cs cmpsl pop ja inc mov outsl out cli (bad) call mov int mov outsb sub sub xchg push or (bad) call int fcmovne and cmp xor mov hlt leave stc dec and cmpsb daa add aaa jle mov jmp pushf adc daa test sub (bad) ljmp cmp push mov pop mov push imul pop fiadd xchg xchg or pop out clc jmp jns xchg lret inc imul loopne call (bad) (bad) fild adc movl dec icebp mov or jg decl dec fwait cmc jbe (bad) mov dec mov in dec jb xchg dec fistp jecxz add lock fisub and xor and (bad) incl pop cmpsl imul xor lock std in dec xchg insb xor es aam cmc xor jge pop (bad) (bad) (bad) ljmp push ss xchg repnz aam or dec mov ljmp (bad) (bad) (bad) std mov lds adc pop jmp adc clc or test int mov outsl sahf mov orb mov (bad) (bad) lcall dec leave xor testl and mov or inc jp cli (bad) ljmp xor push fildll sbb push std cmp (bad) sbb dec aaa ljmp (bad) lcall add mov adc cmpsl aaa imul fdivs nop call rolb lcall jp pop jnp push jae cli add negb jecxz addr16 movl pop aad ret (bad) jmp enter xor fcoms mov cli (bad) (bad) dec push mov lcall push outsl pop jnp call dec mov rclb push outsl pop xor lock push dec inc sbb lock idiv jg in int3 sub push scas shrb mov jne stos loope and jnp jecxz (bad) (bad) lcall or dec inc mov fmull sub xchg js mov decl (bad) pop inc loopne in nop (bad) decl cld pop pop lds xchg lods mov (bad) mov sbb fisub cwtl fs mov ret xchg in (bad) (bad) ljmp and xor xchg dec dec daa mov movsb (bad) lods xor (bad) (bad) ljmp (bad) push pop inc pop aaa test aas cmp xchg out jecxz adc out pop and cmp jmp hlt sub das outsb (bad) or (bad) das test (bad) (bad) out cmpsb jbe clc pop pop dec pop bound mov cmp push hlt (bad) call mull jns mov das ret aaa inc inc xor out and lea (bad) adc cs pop inc shrb and cmc mov mov sar sbb stc fsts movsb and and ds aaa sbb scas cmp sbb pop (bad) in mov js jae aas push push push pop jge push lock cli jmp ja incb jp mov (bad) (bad) jg out iret push dec add mov (bad) iret rcrb aad dec mov cmp stos (bad) (bad) (bad) lcall xor cbtw outsb loop push js shlb ret add into pop in (bad) (bad) push jmp mov jbe adc pop mov jge and es mov call jecxz or jle pushl push mov xlat mov ja (bad) loop (bad) and sbb add adc mov test sub cmpsl repnz lcall xchg inc stos mov adc (bad) xchg pop bound mov (bad) (bad) (bad) (bad) decl fnsave jecxz or add jne scas push iret popf and subl mov (bad) (bad) (bad) call sbb addl subl lock lock mov rorl hlt lcall rcrb and je (bad) pushl stc inc out fcomp add insl mov je push cmpsl leave pop enter (bad) pushl adc pop add mov int test fsts js add mov cmpsb clc (bad) out mov mov cmp mov inc mov (bad) (bad) incl or cmp mov pop xor loopne push nop sub sbb sub shr (bad) (bad) lcall inc in int leave into push rcll in jo (bad) push dec call push imul popa clc int stos cmp mov movsl out push orl lcall insl sub leave stos sar addr16 push inc cmp movsl movsb sub int3 cmp sbb xchg push fisttpll jl fcomi sar decl mov mov jp orl mov sbb inc cmp fistp pop stos ret adc sub mov xor jae inc sbb adc jno out push inc (bad) (bad) (bad) ljmp xchg sub pop out adc pop and int3 push sub in outsl es push sbb enter icebp add call rcr mov inc mov repnz cmp mov mov sbb adc je (bad) mov xchg cmp mov push xor mov mov mov xor jmp sar andl mov in jbe push push idiv (bad) pushl leave add and pop (bad) mov push sub sub (bad) cs cmp (bad) (bad) (bad) ljmp and addr16 ds jnp dec jnp out js xor fsubrs inc jns test jae jg and pop xchg (bad) imul std incl pop jecxz loop mov ret mov in xchg push xchg js mov fwait or mov in pop jl pop in cmc (bad) ljmp ljmp mov adc mov sub dec fsubrl inc pop (bad) fcomip dec out adc cs insb mov clc fbld insl adc (bad) dec mov leave loop adcb mov cld (bad) (bad) decl sbb outsb cmp adc mov adc (bad) movsb icebp cmp jg or lahf mov sar push sub sub cmpl dec out add push (bad) bound mov xchg mov decl movsl xor mov (bad) mov (bad) (bad) (bad) call pop mov sbb test mov iret sub mov shrb outsb scas cmp push dec xchg es (bad) bound mov iret mov sub sbb into sub (bad) fisttp jg shlb (bad) and (bad) decl (bad) fildl sub arpl push setnp sbbb jns mov (bad) jmp sbb int3 mov mov mov mov add incl cmp fsubs mov cmp out cmpsb push mov lods and scas sbb or inc mov mov pop cmp jne cwtl popa sbb cmp cld add and lods sub out sbb mov mov cmp and pop outsl inc popa push mov (bad) (bad) (bad) incl push and rorb cs lea pop flds ss jae addr16 adc (bad) fistp push or cmpsb pop inc mov add (bad) (bad) (bad) (bad) (bad) sub (bad) mov test push ljmp (bad) ljmp (bad) mov add pop out add into lock scas cmpsl pop inc loop stos sar mov (bad) mov inc jle xchg mov daa cmc dec cmp pushf andb jg mov jp aam jg sbb add lcall adc mov stos push jae push pop push push std push std xchg and rcll sbbl sub add imul xor jb adc mov jg pop (bad) mov movsb add enter fsubrp cmpsb dec (bad) fild push shrb pop mov jo (bad) (bad) jmp adc pop push aaa dec or mov cltd scas mov negb (bad) (bad) (bad) fstl popa push adc aaa mov bound mov (bad) mov adc mov iret (bad) ljmp repz test orb mov inc jg and les in hlt jg jle inc and aam (bad) push xchg loopne mov aas sar mov adc pushl fwait push std dec mov out pop into pusha adc leave dec lock and push or (bad) ljmp push push xor sbb dec das mov (bad) icebp push sub cmc jecxz (bad) pushl cld and mov or (bad) sti mov ds outsl test je (bad) (bad) (bad) jmp sarb xchg adc mov aaa jg inc cs sub test push (bad) (bad) (bad) call lea leave cs dec hlt jle pushl or std subl pop loopne pop push push xor mov pop push jne out jg unpckhps (bad) ljmp pop mov scas sub je or add pushf pop mov cmp sar (bad) push xchg ret and lds jbe pop loopne fdivr (bad) mov movsl mov lret test bound dec or (bad) (bad) (bad) inc addr16 jns loop lahf shr sbb fdivr outsb jle add add xor jle mov loopne mov cmp add je jmp xchg hlt (bad) ljmp mov movsl and (bad) (bad) lcall push mov push jnp mov addr16 jge sbb mov and cmp popf push int3 (bad) (bad) (bad) decl arpl js mov je addl loopne and sub jne push (bad) (bad) (bad) incl add mov inc rclb mov mov out mov (bad) (bad) inc fldl mov dec std (bad) cs idivb xchg (bad) lds into xor xor push leave iret mov xchg xor hlt mov xchg push lea xchg mov dec mov cld mov ljmp pushf jecxz xor jbe or sub xor insb dec cmpsb sar (bad) (bad) (bad) mov xor je mov xchg jmp ret mov cmpsl (bad) and pop mov cmp adc (bad) (bad) (bad) fimul dec ret pop xchg and or or insb jae xor not mov ja sarb (bad) (bad) call cld cmpsl sub divb addl jl in jmp stos (bad) (bad) (bad) (bad) mov icebp xchg (bad) rcll mov sbb out cmp imul adc ss pop jmp (bad) jb ljmp jno sarb mov cld outsl cmp test or (bad) fcomi inc xchg push sbb ficom push into mov loop das sar push push push push xor aas rcl pop (bad) pop mul cs aaa repz stc and (bad) decl out cmpl adc idivb enter pusha daa xchg xor xlat add lock movsb ds cld shrb fisubl test push mov por mov fisttpll scas pop popf add mov mov clc or jmp sub cmpsb mov (bad) movsb push dec jge ss mov sbb jl inc clc (bad) jg xchg les pop repnz inc fcomi lret (bad) sar or divl jbe sbb pusha les hlt bsf bound clc bound xchg adc jg mov (bad) (bad) (bad) push mov xor or push fsubrp mull xlat mov imul jae (bad) (bad) (bad) push add inc mov or decb loopne lods lods lret xchg mov cmc xchg sub jmp shrl add (bad) (bad) fdivrs adc xor push dec xchg jnp and in aaa pop cmp mov adc sahf fcomp inc punpckhwd (bad) fcomip inc adc rclb mov test pop aas stc jns js leave push lods cmp incl cmpsl mov loop mov pop sahf mov nop push jo mov dec loop inc clc (bad) (bad) incl xchg and push aaa (bad) iret shll sbb insb mov das popf adc out cli das xor jecxz xchg mov inc hlt andb fildl movsb lea pop (bad) jmp repnz (bad) icebp cmp jle sbb add (bad) (bad) fbld cmp or lretw flds add add lcall jmp rcrl mov pop fstpt jae fistp (bad) ljmp push enter jmp mov sbb rcrl movsl inc xchg sti divl pushl push xchg jg mov scas jns std cltd push rcrb (bad) aaa fidiv (bad) aad jg inc mov pop mov push xor add push xchg (bad) (bad) (bad) dec (bad) (bad) fcmovne repnz nop divl sbb jg cld fildll cmp and adc dec mov loope pop sub loope (bad) rcll cli inc aam xchg or sar (bad) (bad) cld pop addb sbb dec pop cmpsb je mov iret test nop mov lods mov js js xor mov jle xor jp pop cltd fs dec stc xchg (bad) (bad) mov outsb nop in aas push fnsave xor js jmp dec xor dec cli clc lods push (bad) mov dec push cs stos dec sub (bad) fbld sub xchg pop xchg xor lock (bad) call sub cmp and nop push lret jg cmp xchg in push push cmc cmp call push jae push movsl pop les (bad) in mov fwait dec test jge aad (bad) (bad) (bad) (bad) jle (bad) outsl dec cmp addr16 (bad) mov mov push std pop mov clc fwait (bad) mov fsubs pop mov insb pop xchg mov xor cmp mov jl jp add dec cmp push fisttpl dec lahf inc inc pop stos lods push aaa (bad) pushl inc (bad) cli gs mov pop cmpsl mov sub (bad) (bad) (bad) (bad) fdivrs rorb dec jle iret pop pop push iret je shlb sub lods push cli xchg jnp (bad) fisttp adc ret xor test jne sahf scas inc arpl dec dec divb lods and push stc (bad) (bad) lcall cmp mov adc add xchg sub jmp jb clc mov sbb jmp mov imul loope xor and adc (bad) call loopne sub add js and mov adc (bad) ljmp push sub clc fldcw daa fisub movsl mov sbb push mov pushl mov ret insb rcl (bad) or cmp std jmp movsl aaa mov idivb sub daa outsl and scas mov push fwait movsbl sbb in pop pusha adc (bad) faddl mov out pushf xchg (bad) (bad) cld into xchg xchg sub jg outsb orl out add dec inc xchg pusha std popf popf movsb push push (bad) adc icebp xor out scas clc (bad) lcall movsb je cmc (bad) cld mov ret xor (bad) iret (bad) pop adc xor adc aam jbe jl push push jge (bad) mov inc test sub movsb mov (bad) jmp sub (bad) stc mov cltd jp mov lea inc lret jne mov arpl xor (bad) (bad) push das xor pop int jecxz outsb cmp mov (bad) mov pop mov cmp pop cltd sub pushl jg ds add popa cli cs dec (bad) ret mov iret add dec lock jge and decl fwait mov stos mov outsl push (bad) (bad) ljmp mov sbbl lahf and test add les (bad) (bad) (bad) (bad) mov out cmpsb sub js movb jmp cld add adc xor repz (bad) push es (bad) (bad) ljmp out mov or cld mov add and bound (bad) mov repnz cli fs push lahf fwait decb insb xchg leave add into mov or xchg sub add fxch and cli (bad) mov cltd movsl loop in jl jmp mov push test pushl int3 in (bad) adc lcall call sbb mov (bad) ret mov jne out mov (bad) (bad) (bad) call test mov inc (bad) sub sbb sbb xor jne mov popa xchg (bad) (bad) call push xchg imul mov jmp xor inc or add sahf gs xchg dec jecxz or rorb mov clc (bad) lcall mov cmp aad adc rolb fs push (bad) (bad) (bad) mov inc mov sbb cmp push jnp (bad) pop or mov mov jmp cmp pop mov test lods cmp xchg out bound loop icebp fwait xchg (bad) (bad) js mov mov push pop mov or mov jne repz cs xor lea movsb (bad) outsl (bad) incb out in ficom clc outsb in iret jns jae (bad) lcall push mov jge cwtl fs jp jno,pn leave lds (bad) fidivr jno jl xchg mov rorb mov fwait mov aaa lods adc pop in es movsb cmp in sbb pop mov pop fbld out inc xchg in mov (bad) ljmp or push xor jbe mov jmp jge enter mov cld pop enter (bad) sbb sbb out clc or sbb popl lods sbb les stc or mov (bad) (bad) std test loopne je mov shrl test or (bad) (bad) mov insl add in sub sbb and (bad) mov mov repnz cmp or add adc mov cmpsl mov xchg add rorb jl (bad) (bad) (bad) out adc in inc out int3 push clc mov pop movsb dec lret push inc repnz (bad) (bad) call sub cs shrl jecxz xchg sbb lods (bad) dec add incl xlat jnp xor in (bad) shr pop (bad) mov ret mov pop mov or ds addr16 xchg stos pop jl enter pop inc mov hlt (bad) pushl mov pop iret les das pop or mov mov (bad) (bad) (bad) (bad) push ret les in sub inc and cmp nop push ds and icebp std mov fmulp nop cwtl mov dec add xor mov test int hlt cmpsb mov movsb dec cltd mov (bad) jg pop lahf jmp push inc pushf sbb sahf push shrb push xor loope scas mov mov fdivl pushf jle in das or ljmp add sbb mov jg imul mov cli rorl push lcall jno push ss (bad) lret shll loopne lods pop xchg out lcall mov cld pop out clc mov fisubl jg inc adc push mov imul xor fdivs shrb pop lcall or sahf (bad) clc push clc mov movsb pop testl dec fimull mov lret mov (bad) fild ficomp mov dec xor out sarb incl call mov xchg mov hlt sbb jle dec inc les (bad) (bad) (bad) call and stos mov in sub xchg mov adc das and jmp xor push sub sbb arpl add push (bad) mov (bad) adc mov aas mov jno xchg xchg int cltd cld mov jo jmp arpl add sbb ret addr16 rorl inc push imul xchg or fcmovb push add (bad) (bad) (bad) lcall cmp nop xor add sub dec xchg cmp gs inc fincstp aaa insb add xchg sub scas cmpsb addr16 or (bad) pushl mov das fs push sbb jae sbb mov or rclb call out popa mov mov pop out jge pop mov idivl or pop xor insb je rcrl loope mov pop cmp adc es push std mov aaa jp push mov add ror out mov adc ret bnd sar xor or scas pop movsl lea and push rorb (bad) (bad) lcall out ss or sub (bad) mov (bad) test rcrl inc scas out fcoms lea push push adc stc push mov pop hlt pushl pop push and xchg push xor bswap cmp add push adc jl rep add das jns int stos test (bad) (bad) (bad) cmp je fisubl adc mov in data16 test xchg lds (bad) (bad) out xchg xchg (bad) jns hlt shrl in in adc data16 sbb aaa mov or insl fcomip (bad) (bad) ds ljmp iret jbe xchg into ljmp std imul call out mov inc js and sti sub (bad) (bad) call (bad) aad icebp mov inc dec scas jbe gs adc aam add or (bad) pop fucomi mov xor pop sbb fsubs mov popf imulb and incl (bad) psrlq faddl mov mov lcall mov jnp shll xorl add or push cltd std pop loopne sbb cld popl cmp out jbe mov (bad) jg inc (bad) pop xchg or add pop (bad) jno sub (bad) jmp inc scas fcmove xchg movsb sbb ljmp pushf mov inc std or shl pop xchg lock add jg arpl ss cmp sbb out cld inc xor push aam rcrl sub loop cs inc jb scas das mov (bad) divb add roll xchg xchg jbe mov (bad) mov test int3 mov mov fildll aas xor inc pop pusha or clc aad mov (bad) lret aaa std xor movsl out icebp push pop jno mov mov mov call xor xchg add outsl clc sbb jge mov jae mov jns out lods sub jg dec add (bad) mov movaps iret test xor (bad) (bad) decl xor idivl xor or cs or vdivsd mov mov fcomip or xchg jne into jno pop bound pminub mov data16 lock sub xor (bad) (bad) (bad) (bad) fisttpl subl sbb lret sti sub xor mov (bad) lcall cmpsl sti xchg mov push imul pop mov pop pusha jo sub pop dec aaa push js lahf mov (bad) test or dec into scas hlt das sbb add loop decb (bad) (bad) (bad) mov sbb dec mov (bad) mov push add movsb jg inc mov hlt or add xlat cmpsb imul popf outsl imul pop std push or push jle mov clc adc mov lock and xchg sahf repz (bad) (bad) ljmp dec dec sbb inc popa das jmp mov imul movsl or ret xor out es ljmp scas rcll js (bad) scas adc add pop pushf das (bad) (bad) (bad) lcall mov mov std inc (bad) cld in jmp je or pop mov (bad) idiv (bad) (bad) pushl das pop in lods (bad) cmpsl cmp repz sub movzbl rorl or jbe int3 mov mov jmp adc fsubrs xor arpl addl sub ds icebp (bad) lcall jne les insb push sbb cmpsl sub or inc xor jae cmp popf out xchg inc xor inc std inc aam cmp adc sub sti inc (bad) (bad) (bad) jmp (bad) xor arpl mov into jl cmp in bound sub sar pushl out cmpsb cmpsb push es push faddl push jecxz gs loopne aad sbb bound or stc push lds pushl std scas lret lods nop (bad) jb nop and cmp ret insb leave mov inc and (bad) (bad) mov mov add sbb dec test mov jg or sbb movsl xor into (bad) (bad) (bad) push int3 xor aam rcrb cmpsl push jno dec and sub test pusha cltd lret (bad) (bad) jmp pop nop es fwait aaa ret scas inc jae jnp xor cmp call mov pop in xchg mov fidivr jg or mov lahf leave add cs adc sub or decl jno hlt or ret adc pop fwait add out outsb fwait (bad) (bad) fisttp cmc sbb cmp gs imul push add int push (bad) pushl adc push cli es mov and (bad) repz mov incl and push jg jnp icebp push in jae mov shr mov loop pushl fidivrl std lods inc dec mov mov push test add movsb sar decl and xor push and inc andl mov pop push mov (bad) (bad) ljmp dec sbb je lahf add pushf dec lock pop jecxz push fdiv push movsl dec ret add call lahf xchg cmp pop rorb scas fimull jns and (bad) (bad) lcall loopne xor test loop or rclb xchg jge notl fcomip (bad) (bad) test rcrb sbb insb popf mov bound jno gs xor fiadd mov enter mov mov ret fs (bad) loope mov sub jg int (bad) mov mov cmp or ret mov xchg (bad) incl mov mov sarl jmp mov cmp mov lock xor rcrb xchg pop jl jb jns jle sbb (bad) (bad) ljmp push pop sysenter sbb movsl mov xchg cmpsl add int3 adc mov shl je imul push je out clc xlat inc ret (bad) decl push inc iret or ret xchg loopne inc and jge les (bad) incl dec add dec mov xchg xchg inc jmp ds jb and movsb nop mov pop cmp (bad) ljmp (bad) icebp fistp jg lds cmp cli loope jle lret dec mov (bad) (bad) (bad) lcall insb clc mov testb in in arpl hlt push fadd movsl int cwtl lcall clc jnp outsb adc pushl mov inc lds or jg or out cld cltd inc mov add and cmc stos sub add fstps das out repz fs mov sbb cmpsl les mov pusha pop ss jbe hlt mov fnsave jne adc mov cmpsl xchg mov dec aas sub add fistp sub push ficoml mov popf mov mov sub (bad) pushl movsb test mov push push pushf (bad) xchg std movsb jge fs adc cmpsl das mov addb movsb push (bad) (bad) (bad) mov enter shr rolb jl push adc xlat adc popa (bad) (bad) (bad) call jg fldenv mov sub add fnstenv mov jo test cmp jmp out xlat test and idivl sbb clc ja movsb shrl adc mov pop push arpl ret (bad) mov pop xchg das pop lahf xor movsb or push bound aaa sbb call (bad) ljmp mov or in pop data16 out std adc push daa push out xchg mov ljmp icebp jge xchg push pop adc (bad) (bad) jmp cmp out inc hlt adcl fsubr loopne insb mov jb and add (bad) pushl push mov dec xchg sbb data16 in lds jg ds xorl dec jmp mov push cmpsb mov stos or (bad) incl pop enter push xchg xchg sub fs (bad) pushl add rep mov mov sub (bad) add sbb jo xlat and xor jl (bad) (bad) (bad) (bad) fstl mov mov push or xchg jp test mov fadd mov (bad) decl ret arpl add and sbb mov mov cmc pop and mov push lret xlat pushf stc dec push ret sti pop cwtl or add das fcmovu rorb jb mov int sub sbb mov adc and dec cld divb push (bad) mov jnp lock mov dec push pop out push inc xchg mov inc pop mov inc std call pop push pusha cs jp jno sbb scas clc jg (bad) (bad) mov cmpsl or push or loope (bad) (bad) (bad) call fsub out aam sbb scas xchg (bad) jo jb inc aas mov mov and shll (bad) (bad) (bad) aas sar popf and psrlw js dec sbb lcall sub and (bad) call in xchg (bad) mov fs or and int loopne pop mov ja (bad) inc dec mov sub and cld test stos aaa xor div fwait and shrb cmp jl fnstenv lock ljmp in and mov aaa std insl pop fldln2 jmp xorl (bad) call sub sbb insb insb popa sbb mov sar lcall lods test out fdivrl cmp pop dec cmpsb adc (bad) (bad) jmp imul push mov dec jge mov sub xor (bad) (bad) call sbb mov add mov or fcoms aas in add (bad) jg sub adc negb in pop or add mov pop loopne dec (bad) repnz call mov test iret cwtl pop xor and call sub pop mov shlb inc mov in or and test mov mov jnp xchg mov aaa sub inc stos cmc add es (bad) jg loopne push scas clc sbb sbb jmp (bad) ljmp pop mov decb pushf lret jg andb xchg xor cmp decl pop xchg gs sub dec (bad) (bad) mov pop lea lock fistl mov xchg cmc js,pn addr16 mov ljmp notb imul lds sub les mov aad movsl in (bad) (bad) (bad) (bad) mov mov cmp pushf test scas sbb adc push hlt inc call mov (bad) cli cmpsl xchg add inc cld mov ljmp add movsl dec or cli adc inc mov lods or cmp adc (bad) pushl les sbbb mov cltd je test mov ljmp clc dec sahf mov int3 ret inc sbb movsb cli popf cmp (bad) (bad) ljmp and rcrb xchg sbb lods loopne and pushf mov or mov int3 movsl scas or pusha add es es stos inc std jmp (bad) xor jp push movb or ljmp jp pop pop into scas jg insl push mov (bad) sti mov and orl enter insb and or pushl scas jp cwtl jnp call mov aaa ret add jl pusha xor (bad) (bad) (bad) (bad) call je sahf mov sbb mov fnstsw out xor into xchg xchg jmp ja (bad) (bad) (bad) jp mov mov mov pop ljmp xlat pop jbe out mov mov mov clc pop jecxz adc test fidivrl dec std (bad) push and pop jp repz cld add push add jle adc jmp jno decl dec cmp adc or pop mov add inc (bad) adc mov pop decl mov fadds (bad) mov xchg mov sbb test cmp ret ret or js xchg incl cld (bad) (bad) movsb les mov push jb aam pusha in xlat cwtl ljmp jmp out pop std sbb add pop mov movb jl inc call adc cmc xor pop pop (bad) (bad) (bad) (bad) js ret add es scas push repz movsb out out dec xchg fdivr pop and jo mov xchg lret nop adc sbb xchg sar aam push outsl xchg in xchg movsb jo (bad) stos dec jmp or aam pop push push mov mov sahf into call ret lahf ljmp jg inc std xlat inc xchg enter push push xchg jae scas (bad) (bad) lcall fisubl adc stc out dec pop add int3 mov (bad) (bad) (bad) in cld adc or aas xchg mov mov cltd push push or aam push sti (bad) (bad) (bad) ljmp dec push mov aaa cmp push push frstors (bad) pushf (bad) frstor (bad) jmp cmp test or loope dec mov popa jae dec int addr16 mov xlat cli inc jle fmul insb movsb adc push xchg cltd jmp ds push lret (bad) (bad) sbb stc mov inc xchg ds dec xchg dec repnz (bad) (bad) jmp push into cwtl lods push push mov dec fs in jle nop ss xchg ds (bad) ljmp repnz xor mov aad adc je fisttpl incl test rcrb xor xlat aas scas jge out adc test dec jo fldl and lods leave pop xchg clc and xchg pushf nop jl dec (bad) ljmp and push xchg dec icebp popa (bad) push push jle sub test pop or lcall leave loope popa movsb rcl jno dec mov cs call adc (bad) fld (bad) push ljmp mov or mov mov (bad) (bad) call in sbb popf cmove stos in (bad) insb mov push cmp leave mov inc mov daa pushl std pushl ret inc aad jae hlt cmp mov dec movsl pop insb (bad) (bad) (bad) decl ja inc dec dec ljmp inc cld in pop inc cmc jno fild adc xor loop jg pop inc in ja call cli mov addb mov cli jmp push cwtl call pop push and mov xor (bad) (bad) pushl scas std mov aad cmpsl pop jne xor push test xchg or push (bad) (bad) (bad) ljmp mov mov icebp mov sbb fldcw push jmp test xchg xor sbb cmp pop stc mov inc mov movsb outsl mov jg xor jbe loope stos je mov (bad) jmp fsubs lock ja or in or pop dec mov sub (bad) pushl fistpll adc xchg push mov and fdivl push bound aas imul and mov mov push lds push push jge and mov std stc and fnstcw es (bad) (bad) (bad) inc ja fwait addr16 sti inc fcoml scas mov cltd les (bad) or scas push mov sbb inc push mov adc xor sub xchg pop (bad) (bad) incl (bad) pop jle mov test add leave cmp test mov cld (bad) (bad) pushl (bad) cmc in xchg pop pop loopne cmp push xchg adc jo push enter adc push stos and xchg xchg rorb mov bound ret rcr sbb push in lods dec sti sar jo inc movsb decb dec adc cmp (bad) (bad) mov test push lock xor and push push out lret mov (bad) (bad) pushl out in sub or jbe std popl adc push aam (bad) (bad) (bad) (bad) pushl or adcl adcb mov push loop add test and (bad) lcall xchg mulb cmpsb push sti test outsl ljmp (bad) lcall push hlt shl or push rcll cmp into inc dec push leave push insl mov mov arpl push scas cwtl mov add push push push mov (bad) (bad) (bad) jmp mov jp xor xlat rolb pcmpeqd inc fdivl inc xchg dec mov xchg jne loopne imul and pop sub push fsubrl cli (bad) jmp pop (bad) aad jns or cltd imul je cwtl or call add int mov lock std mov call test pop cmp pushf adc dec sarb (bad) (bad) pushl pop das stos xor jne mov (bad) mov in and (bad) jg aaa push pop mov out test mov lods mov inc data16 (bad) (bad) jmp push sub test xchg xchg mov js sbb ljmp xor and inc insb push jge dec repnz test jge lds mov pushl aam insb (bad) sbb sbb call (bad) jne nop jmp pop cmp cmc adc dec je xchg add aaa cld cmp mov push jl test pop dec int3 jecxz pop out dec jp (bad) (bad) call std sub inc repnz aam out inc mov clc dec aam push lea test fbld add xchg pop jnp pop cmp js push mov pop ljmp add mov jecxz pushl inc jmp imul movsb (bad) ljmp pushf push sub int sbb out xor cmp (bad) mov mov push pop cmp or pop and dec es int3 enter ja (bad) (bad) jg out xchg mov and in (bad) popf cltd nop rorl xchg mov mov stos (bad) xchg adc sbb jg mov repnz add xlat mov xchg lahf mov mov call mov shlb xchg inc mov loopne ljmp sub dec out inc popf mov jns sbb loopne mov pop jbe cmc lret sbb stos mov (bad) (bad) ljmp and fistp (bad) inc (bad) je mov lret xchg mov stos xchg loopne fisttp dec icebp cmp (bad) clc test xor xchg or cmp bound movsl push fcomip (bad) call sub sbb psubsw cmp push add jecxz dec aas inc arpl ret out inc pop insb pop cs push fdivr aaa add (bad) es mov adcl fwait mov sbb fbstp xchg js or jl (bad) (bad) (bad) (bad) fidiv inc jns das lods sub add lods inc jl aaa addb repz (bad) ljmp rclb jp pop mov rep lcall data16 inc jecxz mov movsl rcr push enter jg gs and and mov push and mulb fmull mov leave xlat jno jns push xchg ja shlb js lcall icebp cmp xchg fidivrl sar scas clc push sbb psrlw and iret push xchg mov or sub hlt jmp divl and inc fsubr (bad) cmp sub idivb (bad) std jne and (bad) pop insl push xor or cli sub in (bad) (bad) (bad) ljmp mull dec push dec push fsubrs movsl xchg je mov add adc pop sub inc insb mov jne add mov leave enter das jns push outsl sub icebp push pop (bad) mov push jb stc cld test sbb (bad) insl push xchg pop jne inc mov pop fildl ss jg pusha cld xor or (bad) cmpsb aaa sbb dec call (bad) icebp jge dec sarl fidiv pusha jge (bad) (bad) lcall addr16 into je lods leave jno sbbl adcl inc xor pop loopne clc sbb into mov faddl (bad) (bad) incl iret (bad) loopne test jns stos je adc or sub add adc div mov js lock ror lret push cmpsb or (bad) incl fimul data16 outsb or add push fs (bad) (bad) jg dec out icebp add (bad) leave (bad) cmp xchg outsb and (bad) rcrb or jg jecxz push cmpsl xchg pop or and test test std (bad) ljmp cli shrl pop es les loope aam ds movsb (bad) (bad) jg cli lods imul outsl out sti aad jl cmp adc mov pop add lcall bextr pop jge pop jmp outsl clc fild dec jmp ss ljmp dec stos dec iret arpl mov (bad) or dec fldl outsb in push dec mov fadds mov mov decl addl xchg push mov inc in sub sahf popa jne clc pop add (bad) ds push mov outsb cs lret jmp inc sub incl inc mov repz ja pushl xchg inc out clc cs sarl inc xlat in cmp enter shrb cld ljmp movsl mov jbe adc mov cmp sbb (bad) (bad) ljmp jno mov xlat pop (bad) fisubr dec adc mov dec dec mov dec (bad) bound decl in (bad) cmc addr16 stos sbb xchg add (bad) leave mov std and adc (bad) pushl sub inc xchg pop imul lret outsb insb mov lret inc (bad) call sub in sarb lcall frstor push ss fiadd stc pop mov ljmp repz and xchg cmp push inc adc fdivrs push std jg pushf pop mov sub push fild enter cli mov sbb in xchg aaa idiv pop adc in add mov out pusha add mov (bad) call push imul pop xchg fdivrs cmpsb in sub push or inc cmp sbb (bad) (bad) jg pop dec inc mov movsl pop dec xchg or mov js pop push xor imul pop fstpt mov clc mov inc mov (bad) (bad) decl insb mov insb icebp stos cmc cmc adc iret lock or cmp xchg (bad) fadds addr16 pop movsb xor lcall dec pop mov ficomp call add and push insb lds pop icebp aad push push (bad) push shl push pop mov inc inc out mov sub (bad) (bad) ljmp add mov test insl lods mov out cmp dec cmc (bad) xor fsubl (bad) (bad) ljmp lea push sahf insl stos and loop mov or pop sub aas outsl and in mov lcall stos (bad) (bad) pushl jo sbb mov adc mov lahf bound clc pusha fidivr cmpsl out inc push dec xor fmuls sbb lods xchg rorl aad sub jecxz mov enter scas add and xor lcall dec inc jle mov cltd clc ljmp push in inc (bad) or cmp jbe imul add and or (bad) xor sub add push pop cld pushl js pop sbb fildl push popf scas jl aam popf ja mov pop adc mov (bad) jg mov cmp int cmpsl mov xchg rorb cmc pusha push fwait inc jmp sar call push or pushl incl aad cmpsl pushf xor xlat ja xor jle push daa xor add xchg (bad) (bad) (bad) incl ficoml sbb pop mov ret imul mov (bad) jg popa xchg jg (bad) call std pop mov (bad) ja (bad) xor mov popf mov insb (bad) aaa loope cmc pop dec jp (bad) (bad) jmp jnp xor aaa mov push (bad) mov (bad) lret mov shll (bad) push jp daa (bad) hlt dec movd mov (bad) cmpsb pop jnp into loopne mov fchs add (bad) incl jne dec ret push je pop pop inc ja in movsb fwait mov jno es fbld jmp out add lods add ret aas adc fstps insl cld lcall inc or (bad) sti add mov sub fdivs mov fstpl arpl xor stc dec outsl (bad) (bad) pushl (bad) pusha mov sub adc mov xor xor cld bound jcxz int3 ljmp push or or cmpsl (bad) decl add stos push jbe loopne push or adc ret decl (bad) lret icebp or pop jns push (bad) fdivrs (bad) out jge mov (bad) mov cwtl lret ret xor mov xchg cmp stos sti insl ret xchg or decb (bad) ljmp int arpl test sarb sub add pop fadds or sub jmp test mov cmpsb imull lcall pop ja push xchg inc hlt js dec in (bad) icebp fistpl rcr pop mov sbb add add inc bound in aas out inc add (bad) pop mov mov rcll inc test movsl test andb decl movsb icebp pop xchg sbbl lcall popa add (bad) mov cs (bad) xlat outsl outsl insb mov mov aas and decl test jl cmpsl jp adc jle ret jno (bad) (bad) inc mov das (bad) mov enter inc lret imul jae dec add jmp enter movsl dec push lcall leave (bad) arpl lds cmp xlat (bad) out outsl dec dec jp xchg divl lcall movsl dec mov lods dec xorb xor fmul or lret cmc pop inc (bad) (bad) (bad) (bad) mov adc cmpsl lea push push xor lret rclb dec ds (bad) (bad) (bad) push xchg fiadd mov sti clc or xchg mov adc cmp out movb (bad) lcall mov lock mov pop push cltd sbb movl (bad) (bad) jl inc mov mov cmp mov into inc xchg into and mov ds adc mov cli push dec and mov xor cmc (bad) cltd mov pop leave sub ds (bad) decl or dec in sub cmp push test sub mov mov les pop push ja rorb mov mov dec test cmp mov cs cwtl es cmpsl aam jmp pop push jne cmpsl sahf ret cli mov lcall cmp mov lcall jl in mov pushl push arpl jnp or test insl aaa idivl stos fimul std incl loop cli push out push negb imulb (bad) cmp or mov ret sbb pop (bad) (bad) ljmp xor add sahf orl icebp mov sub (bad) out xor cmp in loop lea mov and sbb or in int3 addr16 fldt pop and aad cs and int pop and push fnstcw ss popa pop dec pop (bad) jmp or mov test inc mov (bad) lcall out inc movsl xchg mov dec xchg and fsts push lods cmp (bad) loope cmp lea (bad) xchg loopne insl and mov (bad) (bad) mov stos xor push mov (bad) fistpll outsl rolb jo and or inc jbe (bad) (bad) (bad) (bad) call stc xlat or cmp out mov sub or shll pop sti test push mov xchg mov stos mov imul xchg sub fnstcw pop add (bad) fisttp xor sahf sub aaa or into das stos push cltd negl jns inc push (bad) jmp pop rcll test sbb aas dec sti pmullw lcall adc xchg inc xchg push cmp fwait add movsl inc addl sbb mov mov pop scas inc cmp scas inc xor dec lahf or clc push mov popf jp scas mov bound sti lds inc xorl outsl push je pop sbb pop jecxz adc or stos mull fwait push sbb test in or decl (bad) icebp cmc lock dec xchg or lods cmp inc fildll in leave or insl inc push (bad) (bad) (bad) jmp mov iret add ss out (bad) mov pop mov inc stos shll (bad) ljmp jmp inc pop ss clc pop shrb xlat lret imulb dec xchg sti xor (bad) (bad) (bad) (bad) jnp cmp mov inc push dec and inc lcall xchg in fmuls dec sbb adc sub lahf sbb (bad) arpl lcall mov add adc sti xor pushf mov loop (bad) mov fcmove sbb rol xchg loope lahf divl (bad) jg jg imul hlt and jmp add dec stc stc cmpsl (bad) mov push cmp gs pop clc add sbb cwtl dec or adc fwait cmp adc push sub loop addr16 push xchg test cmp cmp xchg xor iret add das adc push addr16 xchg (bad) fisubl fldpi cmp push (bad) (bad) pushl jno add (bad) mov mov sub push add xchg cmp test lock (bad) (bad) decl cmpsl add out inc xchg sahf add lds into pop jg cmp push push repz (bad) (bad) (bad) lcall repnz bound fsubs sub scas mov rorl sub ljmp xor call lcall roll add (bad) (bad) (bad) lcall cmp arpl xchg cli lret (bad) (bad) mov rolb mov (bad) incl insb sbb jnp xchg in ljmp idiv dec mov mov (bad) (bad) ljmp insl lret fidivr (bad) rcl mov add mov mov push call ss sarb (bad) (bad) mov xor push mov mov pop and fimull pushf pop jns (bad) (bad) (bad) (bad) jns loope int and int3 gs test fisubl dec add mov sub (bad) jg in sarb mov int3 sbb lea sti ror mov hlt xchg and lcall pushf ret nop arpl cmpsb pop sbb out adc inc ret adc (bad) (bad) (bad) pushl mov stos xor lret pop ja jg xchg sbb add (bad) add mov enter sub leave and loopne push mov into lock (bad) (bad) jmp in clc add and adc dec fidivr sub out popa ljmp scas cli dec add push push jle add lret fiadd (bad) out (bad) pop scas (bad) (bad) (bad) decl lcall sub scas ja pop mov imul mov or fsubrl and mov sbb notl stc cltd add (bad) outsb inc xor (bad) jg adc or imull adc mov add cs (bad) decl mov and dec xchg fs bound inc scas clc orl push (bad) jmp into psubsb je cwtl mov lcall mov sahf (bad) decl lock mov dec sub cmpsb xor inc in outsl cli lcall xchg jnp,pn aas rolb adc mov imull lcall lahf xor xchg cld push mov sahf and enter scas incl (bad) (bad) (bad) jmp sti (bad) icebp jge sar or int loop ss push xchg divl xchg incl (bad) rcr or and push int3 cli fmuls push mov icebp xor je out add jmp cwtl movsb mov lret (bad) cmp cld (bad) (bad) jle arpl les (bad) sub or add movsb sbb mov js and sti (bad) (bad) (bad) pushl and rcll cmpsb jbe cmp cmp mov xor pop ja (bad) jg jmp repnz sub mov enter fwait (bad) pushl (bad) in xchg jb repz mov and je mull jecxz sarl cs fcomip inc test jb push inc int3 out fnstsw (bad) (bad) jg push call mov pop dec mov mov add jne cmpsl cmc fwait xchg sbb nop cmp jle (bad) jle out xor and (bad) lcall (bad) in or (bad) addr16 cmp mov push jp (bad) jg pusha movsb push push mov xchg in repnz pop inc mov pop insl or or lods sub movl int3 mov sbb mov push (bad) (bad) decl int3 fwait outsb push loope scas insb stos xor xchg loopne mov pop jnp daa push lock sbb (bad) (bad) ljmp add lods xor or sub popa inc jae inc inc (bad) (bad) cmp cs in bnd (bad) and or cmpsl pop test jnp das clc call push xor adc stos cltd repnz loop mov nop mov into mov (bad) (bad) out lahf or jle ret xchg mov and inc or fldenv xchg lock imul (bad) incl add and sbb xchg icebp jmp (bad) (bad) ljmp arpl cwtl pop or or or loop sbb and mov mov incl pop or dec testb jae push ljmp sbb mov lret jae icebp sbb ljmp icebp xchg loop imul mov (bad) adc and and cwtl pop push cli (bad) fsubl mov sub rcrl scas ret lea mov (bad) (bad) (bad) (bad) mov xchg sti inc out xor or js cmpxchg sub mov mov rcr lahf mov cld imul inc sbb lea mov mov xor decl pop lcall xchg dec mov fcmovne insl pop dec ja dec jl cli decl mov js test sub in pusha gs lcall jmp ret pop cmp test imul outsb (bad) (bad) out add inc movsl inc mov xchg lods mov jecxz scas imul xchg (bad) sub cmp cwtl mov push jae lcall (bad) (bad) fcomip sbbl mov sbb pop lock cmpsb rolb mov pusha shr sub push sub xchg push outsl repz clc call clc gs mov rorl adc (bad) decl icebp outsb jbe mov inc mov loope ss (bad) jmp inc sbb addb dec pop pop scas (bad) fmul sbb sbb (bad) (bad) cmp and jecxz call inc pop and adc sahf add inc (bad) (bad) (bad) (bad) jg jle xor in push fist gs mov and jo sub mov sar mov dec jbe (bad) insb aam pop pop xchg sahf mov (bad) (bad) mov dec jecxz adc (bad) cmp push mov and pushf stc lcall es sahf xchg (bad) (bad) fndisi(8087 jg rorb jo les dec (bad) shlb inc les adc jecxz ja repnz (bad) (bad) (bad) mov and sbb mov cmp xor mov jae sbb jne add clc ljmp dec pop cwtl (bad) mov xor out pusha dec adc out outsb pop (bad) push shll lcall pop js add pusha fidivl ret mov sub mov (bad) (bad) std fcoml sbb loope or sbb add (bad) (bad) ljmp testb ja pop xchg dec sbb xchg mov cmp adc cmp (bad) in jmp pop cmp daa xor jge enter mov sub sbb decl mov jecxz aam adc repnz push imull call mov mov imul dec mov test sarl dec (bad) pop adc (bad) je dec test mov mov mov (bad) (bad) jp lret cld gs aam movsb imul xchg inc push in dec inc call ljmp decl jl jnp jl adc leave scas ja fdivs in stos cs leave xchg jno and push popf mov cld call pop (bad) leave xchg out pop add test movsl leave push pop dec mov adc out adc cmp (bad) (bad) jmp fs dec (bad) mov les and push xchg outsl (bad) and es cmp cld mov into pop pop loope jmp ficom aad mov and lock jp cmp adc enter aad push push inc push jmp pop lret call jnp xchg pop jl ret jecxz es test push (bad) jg xchg loope icebp mov ret push inc fidivr and in (bad) loop ljmp fadd in sbb stos (bad) fldenv (bad) fbld push jge mov mov adc mov mov add ret test (bad) pushl pop xchg jl jmp pop add push lock icebp popf xor (bad) (bad) jg xchg clc outsl cli push lods in lahf bound xor jne (bad) push xchg push in sbb lock (bad) fcomip movhps je ret lret mov xchg mov pop ss mov das mov xor in cli iret cli add rolb mov push hlt imulb pop add pushf cmc ret dec sbb sbb (bad) ljmp mov and xchg jo cltd sbb movb stos (bad) ljmp movsl popf push nop jmp fldt in push (bad) (bad) (bad) mov js cmc mov test lock sahf mov adc in or or clc (bad) incl jle aad (bad) sub movsb inc movsb mov (bad) fcomip es xor scas test dec cmc mov rcrl in loopne mov xchg sub adc mov into rcl addr16 pop (bad) (bad) (bad) mov nop lea insb sub dec imul (bad) jne and pop (bad) (bad) push cmpsl xor mov xchg loop jns lret mov (bad) pushl fldt test loop mov rcrb cmp jmp xlat mov ret ret or out ret cmpsb push adc push adc clc (bad) (bad) pushl jl pop mov (bad) imul daa sarl push adc cmpsl imul scas les xchg das sub cltd cmp dec pop inc ljmp and and (bad) call mov lret inc ja jae add cmp cmp clc test out cli or (bad) call out rol out pop aad ret lods push mov or rcll data16 mov inc dec adc and pop shlb push ds (bad) or mov mov xchg addr16 pushf (bad) rcr testb sbb push dec and or (bad) divl je mov mov (bad) (bad) (bad) lcall addb xor out rcrb (bad) adc in test sbb (bad) (bad) call mov xor icebp push lret rcr jo movsb jl cmp and shlb inc icebp sar std test adc cmc push cmp add je leave stc pop and xorl sbb xchg mov mov lcall inc push push sbb push adc mov add int adc xchg out dec push (bad) (bad) (bad) dec sub in add outsb pop jae mov out inc mov push cld or int (bad) (bad) (bad) jmp or mull lea cmp mov jl ja dec iret pop dec (bad) imul popf insb dec dec pop (bad) (bad) fcomip addb in stos clc mov or mov xchg push xchg fwait push add jg add mov test pop in lcall (bad) (bad) ljmp arpl pop insb push and push pop lock mov in mov (bad) psubw mov cmp mov int (bad) (bad) (bad) call jae inc mov insl fstpt movsb lea pop adc test cmp popf and (bad) ljmp mov sbb sbb sub mov or and (bad) into lret mov sbb iret mov mov jg inc std jo jne and sbb test (bad) mov fcomps sub mov dec shrl std jle sti or push push sbb jno lods stc mov (bad) sub (bad) fistpll outsl mov sub mov sbb pushf jb jmp icebp xchg cmp pop enter or xchg (bad) cmp je pop lods sbb (bad) mov fdivr ljmp mov inc mov outsl add pop scas popa imulb clc sar xchg ljmp jns and decl mov pop clc xchg dec jmp dec add or (bad) (bad) (bad) decl xor fisubrl fwait xchg pop icebp sbb repnz mov (bad) ljmp mov ja push out and cmp jbe sbb lcall add xchg inc xchg add (bad) (bad) (bad) decl jg pop jmp sbb mov adc fildll popa and push stos (bad) (bad) fcmovnb cmp inc and adc inc lods and out aas shr into imul stc jl repnz mov sbb subl lods nop into mov or add lcall xlat inc loopne sub es cmpsl cmpsb sub test lcall push lret aam lcall test mov mov sub lods test je mov sub clc pushl lcall push (bad) (bad) mov cwtl xor ljmp cmp xor xor clc (bad) (bad) incl mov je imul test and or or (bad) out fcomps call int loopne sti movsl mov clc sub mov xor and and cmp dec stos and push jp mov and out cwtl pop in call je (bad) (bad) (bad) mov movl loop jl (bad) adc mov out fldenv test mov test (bad) jp xchg mov test jne xor sub xor mov sahf pop adc pusha imulb jge pop or call inc in inc add cmp pop cmc mov xchg fwait dec sldt or mov mov fldenv lret (bad) movsl (bad) aas loopne into shll (bad) (bad) (bad) lcall or mov sub lods ficompl ljmp lahf jbe popf test pop scas pop imul add sub repz mov mov xor sub ljmp aam ljmp cwtl xlat and rcrb shlb or out pop jb scas aad stos cmp into iret push rcll mov addb cmp xlat (bad) hlt hlt sub es jg and idivb addr16 push xlat leave bnd int stos (bad) lcall jl ja or sahf (bad) fmulp xor cmpsb les clc and lret loope (bad) call push adc inc stos popf cmp lahf mov xchg push xchg mov pop inc insb (bad) decl push push xor out js ds mov or daa mov mov inc icebp test mov mov mov (bad) ljmp les inc into ficomp pop mov fildll aas dec int pop (bad) (bad) (bad) lcall pop mov pop jno or mov sbb fsubrp jg in pop (bad) lcall sbb sbb dec mull xor out (bad) repz xchg mov (bad) fildll je xor mov pop mov in xor (bad) (bad) (bad) lcall jmp lcall sbb mov push xchg pop sub inc pop cmp mov dec mov lret sahf adc cli out cmpsb pop dec popa (bad) (bad) fisttp fldt outsb data16 out insb fsubl mov cli (bad) ljmp push sub xchg test inc mov test cwtl fnstcw mov pop add ljmp shl into push adc fwait lahf arpl xor xchg (bad) lahf adc mov xor ljmp mov and pop movsb cmc sbb or clc outsl push dec (bad) (bad) (bad) mov out fs add cmc aam mov adc ljmp data16 xor insb std in pop pop mov xor jbe (bad) mov iret cltd insb sub lret and cmp mov xor out aad push fisub jae scas jg (bad) mov pop jl mov in push mov cld mov adc orb xchg sub cli (bad) frstor enter test mov test adc push test rorb call dec push jle xchg xor hlt jns mov mov cmc xchg gs and bnd mov sbb aas test setl and sarb pop les scas mov (bad) (bad) (bad) jmp cmp movsb xchg cli stc inc in push xchg sbb cmpsb sti pop mov lcall dec iret addps xor mov mov jmp and jns xlat mov or xchg mov addr16 pop (bad) lcall jb xor push repz (bad) mov lcall imul mov mov orb inc fdivr in cmc inc mov stc or (bad) (bad) incl cld clc (bad) and mov sub aaa roll dec xchg jns sti pop inc dec (bad) daa xorb mov or cmp (bad) (bad) lcall cwtl gs or and fdivrp imul insb push cmc (bad) lods sub (bad) jg int3 movsl cltd lods lret push xchg xchg inc pop inc mov pop loop ljmp mov and sbb and lock fild dec inc cmpsb mov pop sbb mov and xor inc mov aaa sahf or sub ja icebp or sahf ss pop fdivrs cwtl dec divl dec mov jp inc fisubr mov and (bad) ljmp mov je stos push mov (bad) jnp or hlt add out cmp stc rcr aad sti push daa rol jmp ficomp movsb inc (bad) push pusha nop sbb aaa jbe fistl push (bad) xor in cs cli mov stc mov adc aad fidivr sahf xor jp xchg cmp movsb cmp arpl sub (bad) lcall mov pop pop out sbb es jge insl loopne scas pushf (bad) repnz and jg sbb cs enter rorl bound aas mov ret fsave popa jae sahf es xchg lods mov (bad) lcall (bad) mov iret iret jle cltd lret inc fwait aas sti and dec das imul inc mov jg sub or pop lcall or add gs add ds (bad) idiv (bad) (bad) incl dec adc jo bound sbb adc sub mov popf inc (bad) cmp jecxz pop movsl insb fnsave sbbl jmp arpl fnstsw js inc inc call hlt jne into (bad) rorb mov jle popf add fidivl dec jg inc xchg dec xchg mov cmc movsb xchg jmp cmc pop xchg mov mov test pushl pop add mov xchg insl scas cmp rcrl repz sbb xchg dec pop add lods aaa inc sahf push repz sbb lcall lcall and shlb or rolb jbe (bad) mov push xchg mov jbe cmp (bad) cmp pop in mov push test cld or (bad) jg or je fimull test out dec add sub lcall sbb (bad) mov mov jp mov jle and das add jmp cltd imul clc (bad) mov jo cli (bad) ljmp cmp fsubrs push aad push ljmp xchg int3 iret (bad) (bad) incl pop (bad) fildll lods iret dec lods dec jo out inc mov cwtl loopne mov call xchg insb push not clc cmpsl and pop push jle jg lcall (bad) jg pop movsl push lcall pop les inc hlt or pop sub (bad) (bad) (bad) jmp push push incb addl jmp sub fdivr and or fwait xchg jp rcr mov (bad) (bad) ljmp and sub loop pop (bad) int3 adc data16 xchg push pop ja sar push cmp test cmp js scas push sar (bad) jmp mov fcompl mov sub pop dec dec and add (bad) incl je stc sbb cmpsb cltd adc lods into and nop outsl cmc xchg mov pushl in daa cltd js dec mov and lcall loopne and (bad) (bad) jmp fs inc daa dec addl mov in test lret int xor (bad) (bad) pushl push (bad) pop or lds jmp pop repz push xchg leave imul lret xchg popa scas pop adc ret cs xchg add cmp pop pop movsb xchg pushl (bad) add in mov aaa push xor call mov or sbb mov fnstenv mov inc in popf (bad) (bad) (bad) mov sbb pop lret and lahf pop out aam loopne int3 mov jbe movl cmp popf pop lds mov xor jbe mov adc sub lahf sbb sub (bad) jg out jge ss lods pop gs mov sub test dec std ficomp pop xor test cmpsl add or (bad) (bad) lcall jne js xchg sub mov gs jmp sub pop jbe cmp (bad) jmp mov xor cltd push sub (bad) pop or aam (bad) mov divb lds pushl (bad) or psubd decl jnp dec adc adc cli (bad) ja fcmovnb test loopne fsub push mov sbb (bad) (bad) (bad) (bad) jmp xor mov pop sahf pop test inc push outsl jl pop mov sbb push ljmp cmpsb mov inc cmpsl andb (bad) xor pushf dec stos cmpsb stos in aam mov (bad) (bad) mov insb and clc jae sbb push push cld mov pop pop cli and xor jne ds jg or data16 mov leave popa or (bad) (bad) incl xor mov sbb add or push imul sub xchg ds jg jmp dec adc inc sarb sti hlt aas movlhps aad hlt sub mov push in jae (bad) cmp (bad) cmp dec adc inc push sarb es sub (bad) in in jae aam fistpl daa cli add mov sub loop (bad) (bad) jmp in xor sub cltd sbb sbb scas (bad) icebp sbb mov fs dec ret mov aaa aaa push pop lods lcall (bad) clc std (bad) (bad) jmp jg negl jg mov add xor idivl stos cmp (bad) lcall dec adc push xor and daa rolb ret mov (bad) ffreep int3 mov mov js mov cmp mov pop les dec shlb (bad) (bad) cmp sahf xchg mov outsb loop (bad) hlt adc or jno push or mov xchg add imul xor outsl jge shrb mov out and out mov pop cwtl out jbe jecxz adc repnz repnz (bad) movsb leave subl int (bad) je push cmp outsl lret ds mov jmp (bad) outsl dec insb jnp or outsb mov adc (bad) (bad) sti adc out inc xchg movsb cmp cmpsb (bad) outsl arpl push jo (bad) jg mov aam dec stos or sub and sarb or pop pop xchg movsb push packssdw ret cmc add fcomip repz in xor push popfw sub aam jnp das pop mov sti arpl push pusha xchg or pop std mov sub xchg lret je push inc or in xchg inc lods mov push std and mov cmp adcl mov pop xor vucomisd (bad) (bad) (bad) sti jo mov and bound sub mov cwtl sbb xchg (bad) push mov push and sahf sbb push fwait inc inc mov in aad jne or lret adc pop inc sahf jbe (bad) (bad) push arpl stc popf jmp mov das fidivl jle push sub mov nop or flds push xchg inc test mov push incl push jg jnp mov ret mov jmp in es mov xor sbb mov (bad) jg or inc je inc out fwait nop out add popf les xchg into (bad) ljmp dec js mulb mov dec outsl pop push int stc leave add (bad) lcall cmp xchg xlat jmp cmp sbb pop ja sahf cmpsb add (bad) (bad) (bad) (bad) cmp xchg sub iret mov dec push shll cmpsl inc dec sub hlt pop push mov jge mov (bad) call loopne (bad) add xor adc add mov (bad) decl adc outsl cld neg push roll push add into (bad) (bad) jmp in orl inc xchg pusha in nop dec in (bad) fcompl call daa stos dec xchg cs imul or hlt push cmp test in in push (bad) (bad) fcomip fwait rolb xchg and add pop out daa sbb (bad) shll mov div (bad) movsl (bad) inc inc jle jle lods jb dec sub xchg outsb ret (bad) (bad) (bad) out jbe xchg sbb das nop xchg ss lea push or add mov push (bad) cld (bad) (bad) call fimull scas outsl and push jno or inc jb cmpsl fwait lcall (bad) jg dec jo insw sbb jno xchg xor sbb scas cli (bad) movsb adc push repnz xor (bad) call pop push jbe out int3 adc ret orl aad mov jns nop icebp push push push sub dec je or clc incl or and cmp inc popf cmp std pop repz and (bad) in pop aaa pop (bad) inc cmp jnp popf pop pop je push adc lods sub (bad) lcall lret pop jmp cmp repz call sbb push ss add mov rorb (bad) (bad) frstor mov jp movsb jo scas push fxam push insl rcrl out cs cmpsl (bad) (bad) jmp sub cld gs lea lret insb and dec sub xor call pop in lcall cltd in pop scas es jno sbb push fsub (bad) (bad) ljmp mov mov faddl mov pop jnp outsb icebp and (bad) (bad) (bad) lcall push fs into xor (bad) xor mov xor (bad) and pop cmp or cli sub add mov xchg mov mov sar cmpsb (bad) aas mov scas int3 stos inc xor outsb fsubr cmp lcall jbe ljmp mov or fldt loopne inc insb nop es sahf jns dec push stos popa js clc inc (bad) mov test mov mov sub mov rcrb add add andl or ss lret mov scas enter mov icebp jge jle movsl add cld (bad) (bad) dec pop jg xchg mov (bad) ja inc leave bswap std loop and inc popa jl stos pusha cmp test fsubrs xchg hlt cmpl or sarl jp ret sbb (bad) (bad) (bad) lcall xchg xor repnz cli call or adc push cltd inc mov lods or clc push std pushf sub lret mov iret mov push dec pop icebp push mov mov out out sbb leave mov cmp lret scas push icebp aam cs (bad) (bad) jg jp sub lret sub ret xor (bad) mov (bad) pushl mov adc mov cwtl arpl jae xor xor push and (bad) (bad) inc jb add in dec push (bad) xor mov push (bad) xchg sbb dec sub decl aad movsl inc mov test enter and xchg mov xchg scas xchg dec mov incl pop xchg inc push or outsb sbb clc clc pop jge push xchg sar call shl pop jge xchg inc and adc xor pop pop cmc (bad) jmp sar add pop negb jne inc lahf lea push ljmp (bad) jno cmpb sbb xchg lock add lods mov shlb icebp adc jbe or push cld (bad) jmp mov repnz int mov popa xor mov (bad) popa test stos inc jno in inc mov (bad) (bad) incl fucom cmp xor imul ja in rcrb pushf popl and das push frstor out jb faddl std je mov scas int3 jmp push out sahf add jge dec fcmovbe shrb dec mov fadd xchg cs xor jae incl mov je lds (bad) fisub (bad) (bad) jmp (bad) mov das pop mov push or jg pop popa mul mov pop sbb pushl add or push and mov mov dec (bad) lret das and cmp (bad) (bad) decl inc mov repnz sbb enter das ja sbbl mov add dec (bad) mov xchg jbe popf ret decl and mov ret add sub fcomps in les roll xor sbb imul mov cmpsl outsl ja jne jb,pn frstor fcos (bad) (bad) push mov ljmp and fstps inc mov out daa lods iret mov mov fildl ljmp and cmp rorl rcl inc push add shll (bad) (bad) call pop ss out inc stos xor out aam and add mov rcr inc loop mov lcall pop int3 cmp leave (bad) (bad) (bad) pushl and pop nop (bad) lock pop popa dec aam cltd pop fcomip push cmp adc icebp aaa cld jp loopne cmp insb testb (bad) decl adc (bad) cmovbe scas pushf push cli clc adc aas xchg pop and lcall hlt jns and push cwtl leave imul ja enter cmp repz or movsl pushf pop push gs (bad) call in inc into push mov scas lcall mov divb xchg add hlt enter mov pop (bad) pop ret mov fist movsb lds push in bound mov mov or (bad) fisttp sub (bad) call or lock movsl dec jns mov lods or xchg pop push push test jns mov (bad) (bad) lcall dec test mov xchg jmp in (bad) xor and dec pop daa push and pushl std (bad) cmp mov fwait mov insb sub sub dec es mov mov xchg mov push loope cltd (bad) call outsl inc sub test clc adc xor mov sbb push cmp and fdivr jae (bad) (bad) decl dec xchg sub and in dec sbb or (bad) in xor push add adcb adc inc jmp adc pause imul or fwait mov mov (bad) incl jge stos gs xchg rorb mov jnp dec cmpsl iret sti (bad) lock loope in in and dec in adc fstl mov (bad) bound pop (bad) (bad) js or repnz fisttpll repnz inc add xor sti sub inc mov aad add pop xor stos add int3 fdivs or ljmp xchg sbb loop test lcall lret cmp xchg rcll cmpsb (bad) lds sbb out arpl jl inc push (bad) (bad) (bad) jmp stos or push push pop scas (bad) ret cmp popa mov dec mov jmp negl rcl jb movb leave xchg xchg adc stos dec pop lock (bad) mov inc insl sahf loop mov add data16 je or jmp (bad) sbb sbb push ret jl sub in pop fcoml test add or fstpt mov stc pop adc jno sbb mov in call jo dec iret icebp (bad) insb pop ds inc sti outsb rol mov cli ljmp and cmc and data16 cld adc idiv decl movsb mov cltd xor idivl mov iret cmpsb pop pop add loopne jg (bad) mov adc inc ss or cmc das call loopne cltd insl lods mov pop insb jae in cmp aam xchg arpl (bad) fimull or divl stc mov popf jg imul and inc inc (bad) (bad) (bad) jmp and pop and loope lcall ss fildl in xor (bad) fcomip loopne fwait scas adc rcll mov add xchg test push (bad) mov in push mov ds scas dec lods inc jge jg jmp lcall fisubrl cmpb jb out mov js mov mov mov inc rolb ret subl out aam adc jno clc (bad) ljmp bound fdivl sbbb dec aam cltd loope pop rol push and or cltd sbb (bad) lcall push out fmul insb fdivs sahf mov push (bad) (bad) incl dec subl nop jb adc flds dec fwait pop mov (bad) std add ret xor (bad) scas xchg adc dec pop (bad) pushl jnp lret jns sbb test dec das icebp push inc sbb push loope (bad) jg cmc inc push adc push fistpl mov push dec movsb out push cwtl sbb shll or nop scas xchg test pop lcall push faddl lods cmp in ss (bad) (bad) (bad) (bad) cmp hlt push pop in out roll pop xchg xor mov push inc pop lcall (bad) fadd mov hlt sbb (bad) mov sub inc lcall xor (bad) incl sbb addl xchg cs add not lret outsb sub ficoml fist mov xchg aam pop stc inc sbb push or (bad) mov aad lret xor mov xchg jnp (bad) repz dec jl lock push sub cmp (bad) mov popf cwtl in sbb mov push pushf jle out (bad) (bad) jmp pusha not push add jge cwtl cli adc pop mov push adc mov fstps (bad) (bad) cmp mov dec sbb mov and push mov mov das push lock sub xchg or (bad) fs adc mov (bad) lcall push mov jno push mov inc adc movsb decl cmpsb outsb sub push pop nop pushf clc (bad) (bad) (bad) dec mov mov push xchg mov sbb xbegin test xchg and stc (bad) (bad) (bad) lcall mov stc inc stc xor paddd fsubs sub (bad) (bad) (bad) (bad) ds adc mov aad jb les pusha stos and jl sub add (bad) jns mov popa into mov fisttpl sahf pop cmc call xchg or (bad) (bad) mov dec mov xor adc out add sbb mov and (bad) (bad) mov xor cmp arpl add insl sbb (bad) (bad) inc repnz xchg mov or pop (bad) stc sti mov mov xor dec outsl in or mov (bad) decl cmpsb lret jne add and ret mov or xchg mov mov adc ljmp mov pop hlt dec fistpl div imul das lds data16 (bad) incl cmp jo (bad) xlat pop or flds or xchg (bad) in (bad) mov xchg aad hlt lock mov xor (bad) (bad) mov adc cltd bound mov jle and pop scas ljmp xchg lea and push cmp ss inc clc iret mov fwait (bad) (bad) mov jmp stc pusha or (bad) cmp cmp stos adc in movsl mov (bad) cmp mov add push pop shrb pop inc cwtl das in push sub pop (bad) (bad) (bad) (bad) fnstenv cmpsb sub leave in mov jle fnstcw (bad) inc inc je add lds sbb (bad) (bad) cli xor and xchg lods repnz imul sbb fidivr (bad) push fwait mov or mov pushf out lahf mov incl insl movsl dec outsb movsb inc lret xor mov fs (bad) (bad) (bad) jg (bad) and jmp pusha mov jbe insb retw js movl (bad) cmp xor call (bad) xor mov xor inc push dec mov push js cmp jecxz jg out (bad) (bad) decl mov push aaa inc jmp xchg or sub stos testb sahf push fwait jmp jp push jmp (bad) (bad) (bad) js loope test (bad) idivb pop cmc aaa mov dec push push xor and bound lret ret cwtl ja pop icebp enter pop jne xchg push mov lea and arpl iret inc dec xchg (bad) pop (bad) xchg xchg xor xor sarb (bad) (bad) sti mov jb mov sub sub push aas rcrb scas out lcall lcall xlat mov mov mov movsb stc (bad) jg (bad) cmp mov pop jp and or dec add mov push fcmovnb or and clc ljmp outsb xor fild jl pop mov (bad) (bad) call fld or fsubs and push dec pop push inc (bad) (bad) (bad) mov or stos xor inc std addr16 enter or movsb pop (bad) (bad) incl in movsb (bad) jno sbb inc int3 aad mov dec lock lcall cmp jle pop int andl (bad) cli shrl (bad) jmp outsb rcll pop push les mov (bad) (bad) mov push pop or out mov sub in jo pusha pusha cld jne (bad) (bad) call clc xchg int gs movsl aas hlt mov aaa mov mov xor movsb mov inc add mov sbb mov out (bad) in mov ds ss or test sar pop xchg or (bad) pop mov call inc xor mov xor jno mov in stos sbb cmpsb cmc ljmp dec icebp mov icebp std call incl pop cmp mov pop (bad) imul add sub adc sbb add es (bad) ljmp ja pop and add popf adc add mov push add std fisttpll cli ljmp clc or push ljmp out mov in adc (bad) decl and and and mov cld xor add ljmp add xchg hlt cmp loope add cmpsb pop sbb (bad) jg sbb stos popf popf dec pop lretw inc adc lds jns dec push out mov pop mov add add add push rcrb ljmp (bad) (bad) jmp sbb adc imul mov adc stc push shll test int jbe (bad) (bad) (bad) fildll mov cmpsb xchg sub test fs sahf cld (bad) (bad) (bad) (bad) stc inc orl mov pusha mov fidivrl icebp xchg jl (bad) (bad) decl sahf xor aas add movsl bound stos sub mov fimull mov xor push loopne,pt (bad) (bad) jmp stc adc jno pop clc imul jmp in aad lcall mov lret jmp test jno das mov int3 mov pop and clc pop addr16 push mov cmpsb out daa dec inc std test cmp jl dec jmp mov cmp daa push dec stc sbb lcall testb mov ficomp inc pop (bad) (bad) mov in pop push mov pop xor ffreep jae jge cli iret scas adc mov (bad) (bad) call xchg mov scas pop rcrb out addr16 fldt inc cwtl out fldcw cli xchg (bad) (bad) (bad) call xor sub sub xor jg cwtl jnp cmp icebp fwait cli (bad) (bad) jmp popf xlat xchg mov dec rcll xchg std sub xchg inc mov rol std add int decl lret mov or fimull push sti mov mov inc pop out xchg pop or and test xor cmp (bad) (bad) (bad) jle scas aaa xor and and cmp xorb cmp jl imul out xor jp int ret jmp xchg js lods jae xchg dec fwait out pop insl clc (bad) call cmpsb adc jmp scas lods inc jb (bad) adc mov sub ljmp jbe iret adc mov sbb (bad) (bad) lcall aam (bad) push xor (bad) lcall lret aam call or (bad) (bad) jmp (bad) mov mov xor scas and js mov ret (bad) call cmp mov repz add cmp xchg mov mov (bad) cmp repz or in loope (bad) jmp and sahf or outsl test mov cmp iret aas (bad) cmc add sub das adc push insl mov ljmp xor lods adc sbb pop add (bad) (bad) jnp (bad) idivl cs or xor aam les loope (bad) jg dec jbe jno push mov add pusha xchg nop xorl addr16 bound (bad) (bad) mov test daa aaa loopne imul push int3 push fidiv pop mov subl sub jecxz pop or adc (bad) lea (bad) mov fild ret aas dec lahf aad pop xor decl inc push idiv inc in push out xor jmp mov dec nop mov xor outsb (bad) adc cmc push or pushf push mov jp je ss iret ja mov inc into or insb pmaxub icebp push push inc (bad) (bad) jae (bad) int3 push mov dec pop push outsb pop ficom mov (bad) (bad) mov pushf das pop xor jb rclb jp sbb das in test add pushl (bad) movsl fidiv or lds xchg ja sbb (bad) (bad) pushl push sub adc mov mov aam xchg fidivl mov lret xchg (bad) fisttpll fildll (bad) cmp in loopne jo add pop or clc ds mov in push pop mov cld (bad) mov push js and ffreep jg jbe sub xchg pop dec (bad) jmp fwait out mov mov addr16 (bad) (bad) (bad) inc dec push pop loop adc mov pusha push sbb inc movb mov in aad aas iret iret (bad) (bad) (bad) dec fisubr sbb adc (bad) jnp (bad) mov sar xlat aas jne into lock sbb sub jbe loope outsl mov push cld daa xor rorl xor loopne ljmp sahf iret in fnstenv add mov push adc (bad) (bad) mov jl movsl jne push or xor mov ret push nop (bad) incl and outsb push popf xor daa cmp jns in jb add in call ds lds (bad) fstl and test add (bad) (bad) mov cmp fdivrl mov push adc cmp repz mov rol dec arpl adc shrb (bad) mov ja out in cwtl xor into sbb add aad into fs mov cmp mov adc or clc sahf and or mov fbstp jne push xchg add cmc sahf roll mov (bad) (bad) call or stos outsl lds inc cltd js (bad) jno fwait int3 xor add (bad) (bad) (bad) incl lcall ret (bad) popf mov shl clc mov add add insl cwtl and in clc inc xor jne popa sub inc andl cwtl or adc test and add cwtl sar mov mov sub xor fcomi inc inc (bad) ljmp mov scas out es test xchg adc mov jb jle inc mov (bad) lcall push gs daa mov js test (bad) (bad) jg xchg and repnz mov mov pop shlb add xchg lret lretw clc aad mov or lock or xchg add push xor dec cmpsb stos sub ljmp mov jle int3 adc mov (bad) (bad) (bad) (bad) fdivs nop int3 fcmovnb std repnz enter jo sub fst mov push dec bound out fisubrl pop icebp sub mov scas inc (bad) (bad) (bad) pushl (bad) jg xchg cmpsl push inc enter ficoml lds inc loope pop nop popf out jle out std xor dec lret lock sbb sbb rolb cmpsl test (bad) (bad) jg orl push (bad) or or cmp jne into in pop cmp mov shlb out shll inc stc loope (bad) (bad) (bad) incl jle mov xor iret push aam test lahf scas mov cwtl xlat cmp int3 (bad) repnz inc jns aam inc sub adc lahf imul fs fwait jecxz sbb jg decl xchg xchg ret call icebp popf clc (bad) or cmp pusha push popa push mov rorl mov cmc popf aad js jno jae pop repnz (bad) push push (bad) (bad) (bad) ljmp sbb insl xor or je and mov dec xchg dec cmpsb scas negl sub (bad) (bad) pushl fcmovbe sub pop hlt sub mov xchg rorl notb sbb (bad) add (bad) incl xor (bad) popa lods xchg mov adc (bad) cmp push out addr16 sbb aas pop rclb enter (bad) pushl and lods gs adc mov add xchg cmp mov mov push or std dec outsb mov jbe out xchg cmp lcall cmpb test out push pop push lret sarl mov pushf jbe data16 pop dec mov stc jecxz and push rclb jbe stc test imul ljmp (bad) call (bad) cmc cmpsb fdivrs mov jge in push clc stos loopne xor and (bad) in (bad) jg pushl jp mov cwtl lods out mov sub add es into or (bad) push fldenv fadds adc nop and xor jecxz add sbb dec (bad) hlt test aad clc cmc ljmp cli call add int3 xor sbb dec lea inc inc jmp add ljmp add adc pop inc cmp leave add mov inc xchg push cmp add fidivl cmp js or sbb mov adc or loope (bad) pop xor sub push fnstsw ficomp aam ljmp mov rcll (bad) jno popa dec decl push aaa mov cmpsb mov jne or pushl cld lods jns out cli sarl or (bad) je jmp and adc idivb or call jmp adc inc ds pop mov ss xchg aas cmpl jbe test sarb push mov rcrb cld loopne xor fs fcomip (bad) incl mov xchg ret insl rolb ret or add and jmp push fsubrl (bad) (bad) (bad) ljmp rcr mov push mov lret pop orps inc or or movsl rcl and inc fimull int sub gs leave test aas stos push add jg call aas jmp sarb fwait in xor cmp loope push sbb (bad) (bad) jmp outsb push (bad) sti cltd jle sbb cmp fs inc and jmp pop sti (bad) aas (bad) scas imul clc sub icebp mov add cmp sbb test enter clc (bad) (bad) pushl jp iret xchg leave dec push imul sbb ja clc add (bad) (bad) ljmp nop push (bad) push in je xchg inc movsb inc in xor ja int3 xchg (bad) (bad) (bad) lcall push mov push scas adc loope cmp mov push mov jmpw leave movsl xchg icebp cwtl push adc mov pushf mov adc inc das rolb xor in (bad) (bad) lcall es jbe fwait jnp add call inc movsl cwtl pop mov dec insb call pop and scas movsl push enter hlt js inc ljmp pop stc es test test imul sub in test sarl xor push mov and (bad) (bad) (bad) incl inc stos sbb in into inc loopne inc shrl xchg cmpsl into (bad) jbe clc pop fwait (bad) (bad) decl data16 daa mov mov out es mov (bad) (bad) call clc in icebp or pop sub (bad) mov cmp dec loopne jb xor (bad) (bad) (bad) jg imul mov movsb and mov push add pop pop dec in cltd aad push (bad) clc in or outsb push (bad) lcall pop mov sarb bound inc and add sub mull imulb jg inc les push jae add movl adc mov mov jmp jp (bad) xor clc and mov (bad) sbb hlt scas repnz jp lock es (bad) (bad) jg fwait xchg push fiadd jle pop cmp pop aad jecxz push fimull (bad) (bad) (bad) cmp sahf loop je clc data16 ja jo cmp sbb xorl outsl mov xchg mov sub neg scas inc scas pop loopne jmp ss and leave lds mov adc fildll je adc sbb sbb outsb push jb mov int xchg imul dec dec or inc dec (bad) (bad) pushl push push dec clc adc shrl and pushf cmp out adc mov outsl jb cmp xor jb sbb or xor and mov inc mulb pop adc sub ljmp enter mov mull and insl clc cld mov std pop cmpsb loopne lea aam (bad) (bad) (bad) mov js dec adc mov arpl adc push idivl jg add shlb orl xor outsb ds sub (bad) es scas push mov in cmp outsb (bad) call lods ficoml push test sbb (bad) (bad) (bad) cmp push int3 enter call cwtl cmp dec mov arpl decl pusha mov insb lea mov bound xchg popf jl std lret test inc lret mov xor pop ret and clc adc fist in clc lcall mov int gs cmc cmp loopne (bad) pushl sarl dec adc les std jo fsub in add inc xor mov (bad) (bad) repnz daa adc movsl cmp pop fsubl daa (bad) (bad) fildll imul add push out ss stc inc mov or (bad) (bad) call insl jns push in inc or outsb sbb push lods pop insb (bad) call incl mov mov movsb hlt mov push sub (bad) call lds or jno ficom push jmp mov lods lea mov out mov sbb mov imul inc dec mov or ljmp iret hlt rcrl mov adc and sbb mov xchg (bad) (bad) cmp movsb aas jne fisubr xchg test (bad) (bad) mov dec into mov ss fstps outsl (bad) and test (bad) (bad) fcomip inc inc mov sbb outsl pop js bnd mov sbb (bad) xchg (bad) ljmp pop sbb sbb jg xchg ret lods shrl cmp push push mov xor adc decb call mov jmp mull jg sar (bad) (bad) jg cwtl lds repnz xor xchg fistpll daa mov cmp stc in inc adc cmp and (bad) (bad) pushl jle sti popf in mov aas test dec add xbegin in jo cmc jg and push in lcall outsl cmpsb cs inc xor mov cmp jecxz orl push inc icebp (bad) (bad) inc loop cmpsl addl icebp xor bound mov inc jae pop dec push fdivr lcall lahf jge jle push mov mov and pop test jb mov push icebp push std pop cwtl dec in fidiv les mov cmp ds fs pop call or dec (bad) mov lret sbb dec sub pushl cld stos rolb test pop (bad) mov scas push (bad) cli out mov lds (bad) xchg mov sub fwait dec pop stc (bad) (bad) (bad) pushl dec rcr dec xor push bound sub in ret lret js data16 (bad) (bad) incl dec frstor fstp aas stos fisttpl hlt addr16 pop mov xor push addr16 inc mov pop cmp mov dec out roll inc movsb fsubp push xchg inc pop cli jmp mov jns mov mov xchg push or inc mov popa sub fcmovnb and inc sbb mov sbb xchg repnz ja rcrl fadds fistp decl ret lcall mov stos inc cld (bad) ljmp sbb xor into ss mov xchg sub (bad) out xchg pop jnp push sbb and ljmp inc xlat (bad) hlt mov jp sbb xchg mov sub and cld add mov out push pop xor pushf mov (bad) inc ficoml jge fsub sbb jno fcmovne push push mov push or mov lcall test aam jb or (bad) (bad) call mov cmp jmp mov shll jmp jne or mov scas cli call insb mov and push insl cmpsb adc xchg mov mov es (bad) mov aad push mov scas lods xor push dec out add push cltd xchg mov inc pop (bad) push decl clc enter cmpsb ror ss push mov (bad) lcall std cmp jg mov or lock cmp xchg leave ja xor (bad) (bad) inc jg loopne fcomip cmp (bad) sahf std outsl mov lahf mov bound sub dec add das stos pop call stos popa mov test fbstp mov dec xchg fcomp fild leave push and or imul jle push ja xchg push movsb push (bad) mov (bad) (bad) (bad) pushl xchg (bad) aad fiadd mov outsb dec lcall ljmp (bad) ljmp (bad) mov fistpl sub sub mov daa lcall aaa cli pusha loop out xchg call pop stos aam push shlb cwtl test (bad) ljmp xchg jmp mov aad lods jns popf cmp ss mov (bad) ljmp test cmpsl ret cmp pop dec xchg lcall loope cmp in xchg adc fiadd aad (bad) mov mov (bad) (bad) (bad) ljmp xchg pop and std popa pushf jns icebp pop nop xchg or ss test icebp scas inc bnd (bad) call mov fs aaa or push jl (bad) xor nop cmp rcll movsl mov jmp (bad) int add repnz bound push (bad) (bad) lcall lret pop roll rclb mov or xor xor mov popf and sub mov mov push pop ret mov jg das cwtl outsl dec fildll and sub ljmp and pop xor add movb out adc cltd pushf jle int3 sbb pusha jo mov (bad) dec sbb mov stc cmp icebp fistl mov mov dec adc fstpt fcomip lcall or cmc fsubl out outsl aas (bad) push rcrl jmp (bad) (bad) (bad) push mov fwait ljmp xchg ss pop int shlb mov outsb mov xchg inc idiv imul mov (bad) jg pop cmp insb (bad) dec mov fimull aad outsl inc mov scas add cli or addr16 (bad) ljmp outsl int3 rcll mov ljmp mov mov lret mov enter push out fwait mov popa mov fnstsw inc cmp pusha and (bad) daa pop int3 pop lds push (bad) scas push lcall adc (bad) (bad) incl xor jbe int jmp or adc ret cwtl sub lcall outsb xchg sahf fdivrs mov adc add call ret stc or add dec cmp jmp lods fdivrl (bad) jl inc or loop mov jno push mov sti enter out add into in pop imul dec (bad) (bad) ljmp test mov push inc stc adc jbe in clc (bad) (bad) (bad) jge add in int aad je dec xor jae jnp fstl addl outsl pop jecxz test jecxz rcrl out add test (bad) cmp fdivrp (bad) addr16 mov aas shll jae aad ja xor inc (bad) mov ljmp cli add push mov mov pushl test lea stos mov adc call les jmp out ljmp hlt xchg lret xchg jnp xchg push (bad) frstor or cmpsl insl pop imul (bad) ja shrb (bad) jo into lods int or add and (bad) ljmp xchg push xchg sbb cmp pushl in push lahf fwait mov push sbb (bad) mov add cmp ret mov icebp jp xchg mov adc jae (bad) (bad) jg mov cli mov mov add mov push rcll add add jns adc cld rolb test push mov fnsave or (bad) jae inc cs (bad) cmpsb cli mov cmp mov sub lcall jmp jle jo push sarl ja jo jno or cli stos (bad) mov in out imull call ss ljmp push xchg jg jo ds add int dec xor xor fistl (bad) mov jecxz pop cs push push pusha loope cmpsb sbb test add inc sbb or js (bad) (bad) (bad) jp mov add dec or mov push xor rcrb (bad) es dec sub mov sti das jae jnp push sbb jg jmp adc fcomps movsl pop adc (bad) popa pop pop xor in mov lcall inc add in (bad) aaa popa push push push out out popf fist das and and jns loope jmp or movsb mov push stc push xchg add les xchg mov dec or and sbb (bad) jg jp xchg in aas movsb pop xor call mov data16 mov xor mov in das mov jo (bad) (bad) (bad) clc dec stc xor push or dec clc mov mov testl jnp pop pushf sbb pop mov incl lcall pushf mov inc lds add jo mov mov rcrl (bad) fadd jne pop in adc popa ljmp inc std cs (bad) (bad) and insb dec nop repz leave add sar idiv jecxz inc loope sbb mov cmp xchg sbb in (bad) (bad) jg inc xchg jp and mov adc xor sbb jb (bad) jbe jmp je mov (bad) cmp imul das mov (bad) (bad) (bad) ljmp jge clc sub test sbb sub cmp std loope fldenv arpl aam sbb (bad) (bad) (bad) out imul (bad) into (bad) fistl (bad) jbe aad jl mov jg mov pushf ficomp push data16 rcl jo jg mov jle (bad) sub push inc adc inc jecxz (bad) (bad) decl mov sub sbb jno mov adc or in or (bad) (bad) (bad) lcall aam icebp int data16 sarl add out lds ret (bad) and sbb sbb (bad) incl xchg lods dec push push mov jp adc int3 lock pop clc (bad) (bad) (bad) jmp jno jae sub notl sbb jae mov imul mov inc xchg mov cld pop pop and mov (bad) jg mov imul or or lret in aas xchg pop push jmp sbb adc or pop jl mov cld (bad) mov test mov fisttp jbe (bad) repnz adc mov idivl inc jp mov sbb mov cmc mov ds insl je repnz add mov faddl es sub call (bad) and pushl jp and std sbb add aas (bad) sub inc (bad) mov loope movsl loopne (bad) (bad) fistl inc dec cwtl std enter scas mov cmpsb sbb pop pusha rorl (bad) (bad) mov push cmp sub or bound jl cmc or hlt mov repz lret insb (bad) andl or out lret pop pop mull jbe cs add arpl push int3 xchg xchg mov in aad lret imul push jae mov add mov test xor (bad) pushf lret jmp js movsl outsb inc and outsl mov das sbb dec lret int push or dec or add or inc in jbe add ljmp incl add call in scas cmpsl push fwait pop movsl dec mov loop and movsl sbb cmp sbb lcall mov pop mov dec aad dec pushl cld scas fs adc dec (bad) jmp dec xchg mov pop shl dec jl sbb jno ljmp out lret hlt fstl inc cli bound (bad) fsubl hlt lods or outsl push jno repnz push push cmpsl popa cmp sti les jmp or xchg (bad) (bad) (bad) jmp mov mov es push clc pop sub in push dec loopne adcl mov (bad) mov inc inc (bad) xchg cwtl hlt xchg insb nop aad and comiss enter xchg gs (bad) (bad) jmp jbe mov cmpb ss dec jge xchg mov ret xor lcall fsubrl out mov pop push cli andl jbe adc or (bad) jg ds mov (bad) jecxz jp xor rcll cmp ljmp gs jb into adc xchg lds cmp (bad) lcall push jmp dec xor divl ret add mov mov cli sub push std mov inc mov sub lcall or fld adc mov mov cltd xor outsl mov cmp fdivl (bad) fs and (bad) (bad) jl fild jp test cs (bad) nop fimul jmp (bad) mov jnp (bad) (bad) decl mov fnstsw fistp in and addr16 je loope (bad) (bad) (bad) ficompl jle sub (bad) outsl fdivs adc jle (bad) jg stc (bad) (bad) (bad) lcall adc push push sub into je mov pop mov and je,pt pop (bad) jmp (bad) ja lret adc cmp mov inc sti aam (bad) decl sbb xchg add sbb mov xchg xlat fwait es push mov mov pop push cmp xor (bad) jg das push (bad) pop jbe stos adc sub mov addr16 (bad) (bad) (bad) js inc inc mov (bad) sub adc dec mov mov dec xlat sub (bad) int3 nop sub jnp jl cmpsl inc std les or push dec or (bad) jg pusha push push xchg inc mov mov add dec or jb and sub add jb scas aaa mov in add sahf ja (bad) (bad) mov fldl rcrb bound adc jnp loopne jmp call lcall fdiv mov inc cmpsl push pop dec (bad) (bad) (bad) ljmp cmpsb lret sub cltd jo dec add jge mov sbb jns add (bad) sub mov decl jo sub add mov xchg addr16 aad (bad) (bad) (bad) pushl out jmp sub jnp mov cmpsl icebp into (bad) hlt inc inc incl jp sbb gs (bad) call mov sbb (bad) icebp jle sub iret jbe push mov decl lcall cmp test mov repz sar (bad) lock jge xchg cmp mov (bad) (bad) (bad) jmp sbb fsts imul fsubs xchg sub sar repz (bad) lcall sahf lret sbb xchg push loope imul and dec sub fwait sub je lret push ficom jle (bad) (bad) out mov cmp movsl cmc outsl inc ret sti fstpt or loopne (bad) shrb dec jno sar (bad) pushl fadds ret or mov ljmp and movsb leave add mov (bad) mov es pop pop cmpsb add dec int (bad) (bad) incl cmpsb adc lock sub lods daa aam xchg push lods aas and or push push sbb (bad) mov in push imul fldl rcrl dec push cmp add or and cli (bad) (bad) lcall add jl xor and cmp inc xchg sub xor jns or aaa push pop xor mov (bad) decl jmp dec jo popf clc clc push das pop cmpsl ret sub mov (bad) (bad) (bad) dec fs imul sbb sbb or loope xlat add (bad) mov iret jg enter lock mov cwtl xor pop push (bad) fidivl adc (bad) call enter or adc jns in ljmp imul hlt xchg xchg mov push jmp sub mov (bad) call (bad) push dec dec add sub lret out mov (bad) pushl push daa dec fstpl add (bad) aad in ja mov xchg or sub (bad) jmp or dec jae arpl adc out cmp (bad) jg shl or push int cmp sbb fs in sub cmp add mov je movsb jp adc mov test xchg imul inc xchg mov push push test push cld mov mov adc test inc fs push inc ljmp sbb xlat and popf mov cmp test fbld sbb jg lret jo sub push mov (bad) jmp pop or stos jl enter or movsl pop repnz sbb sub out xorl mov or xorl ret push popa add es aad pop lea push mov xchg (bad) cmp or icebp (bad) (bad) jmp lret fimul daa mov das movsl add out mov push xchg xchg inc mov or insl jp cld dec and (bad) jge mov adc lods ljmp clc sbb (bad) in mov dec jmp (bad) pop mov jb les popf bound addr16 dec (bad) (bad) pushl decb or push cmp cld xchg (bad) (bad) fbld lcall dec add adc sbb sub (bad) jmp inc test mov dec or call jb sbb adcl inc ljmp movsw inc in lods add pusha xchg sarb sbb adc orb sbb jb sbb (bad) (bad) decl rclb test sahf pop ss cmc (bad) pop stos js push shlb mov pushl mov or out clc add cli sub enter sti test push mov push mov aam push arpl sbb lds pop (bad) pop pushf sub mov (bad) (bad) call sarb sbb repnz adc addr16 out out inc (bad) pushl in (bad) idivb stos sti adc xchg cmp out push cli inc push jb (bad) decl (bad) push mov push test ja xor lret and cmpsl lea (bad) jg adc cmpsb test rclb int or and aaa sub inc fiaddl inc movsl (bad) (bad) (bad) decl cmp pusha pop test inc inc add jge pop jnp and adc sti movsl pop ljmp inc cmpsb add imul clc adc clc fisubr jle mov mov jg xchg leave mov test add dec out fsubrl (bad) (bad) (bad) out outsb lock je daa dec jne dec rorl ss mov and push add das test mov popf dec bnd movsl test add adc pushf cmp ret pop (bad) jle mov loop (bad) (bad) (bad) call je sub shll jno adc (bad) mov iret int3 jmp (bad) call dec push fnop incl mov lret mov outsl cli (bad) jp or cmp ja (bad) jmp cmc dec lcall and in push or shlb sbbb add (bad) inc mul pop jbe movsb clc popa and test xchg push std and xor cmp or push loop lret loope cmpsb add (bad) (bad) (bad) jg cmp test push push fdivrl sub scas test incl addb jns jg xchg hlt (bad) aas jle ljmp adc daa mov (bad) ljmp in or jl sbb jg pop xchg mov dec and roll inc clc jb movsl sti (bad) jmp pop push jns sti insb push xor pop jecxz xchg xor lret and (bad) incl fldenv mov ret jp fisttpll cli rolb test stos jmp lock jnp push mov and jmp lods fmul xchg icebp out dec das mov mov sub pop or (bad) (bad) lcall mov in inc inc xchg xchg cs (bad) incb xchg mov pop aas mov xchg clc jmp lods lds jno fidivrl and ljmp (bad) (bad) (bad) jmp add je cmp std aad and cmp or mov or lds ss push (bad) (bad) (bad) inc push mov pushf push sbb mov pop fbld popl pop insb and call test lock aaa jecxz sarl inc adc ljmp xchg (bad) dec call and (bad) pushf or dec and test and mov das lods sysret mov call mov fldt mov xchg insb mov pop lods and push stos xor mov (bad) (bad) (bad) dec add fucomi loope fs pop les stc cmp adc clc adc push inc imul (bad) (bad) out mov lods mov insb lods jl fild jo and jb and (bad) (bad) (bad) clc stos dec addl push mov scas sub call mov add (bad) incl mov push repz ret adc xchg lock (bad) ljmp push cmp push subl adcb push xor fwait jp jp (bad) cld or jecxz (bad) out cli call adc xor bound ja push xchg addb jl sbb push cli decl divb pop mov xor (bad) (bad) fnstenv int push movsl movsb (bad) incl adc ljmp fcomps or cmp sbb inc arpl dec loop out pushf test jg dec std stos js jmp lods inc ret add (bad) pushl inc add enter idivl loopne mov out cwtl int push push cli (bad) (bad) decl mov pop mov add cmpl fwait add ds cli es and push and jp xchg jbe lcall incl push fchs cmp into rolb push (bad) cmp inc hlt cld (bad) lcall sti mov inc sub rcrl pop jge cmc inc mov movb push test jg inc adcb test xor (bad) push jb ss (bad) lcall xchg jbe xchg addr16 pop xor std hlt lret stc push cmp lods push sbb icebp (bad) call (bad) mov scas imulb sub push dec inc outsl push (bad) (bad) (bad) jmp pop or jle movsb jmp cld clc cmpsb cld stos jle cmp sub (bad) (bad) (bad) incl aam stos cmpl pushf mov ror adc call (bad) (bad) (bad) ljmp dec aas cltd rorb xchg punpckldq iret mov mov push mov repz pop (bad) leave (bad) (bad) (bad) pushl mov cld ljmp shrl lods cmpsb test xor (bad) jno mov stos decb popa addr16 ja orl add pushf out (bad) (bad) incl btc iret ja or (bad) mov add or jle cmpsl mov sbb mov call daa lods xchg je fdivrs repz and fdivr lcall out outsl mov pop push adc jmp rep lea call loopne sahf sbb mov sbb or (bad) (bad) jmp fist cmp (bad) (bad) pushl xchg jb cmc adcl push imul stos adc mov (bad) (bad) ficomp xor fwait cmp out aam fwait jl ret in push jmp out xchg jne,pt jae test ljmp nop lcall inc (bad) sbb mov daa (bad) call iret xor lahf cmp dec adc enter jge jnp (bad) (bad) (bad) mov (bad) popl (bad) push pop outsb mov add mov bound std (bad) (bad) (bad) call ret xor ljmp test and and aas sarb loopne add inc cmp ja shr lock pop lcall in mov shr xchg push movsb add lret cltd aad notl jno dec jl inc add (bad) (bad) call jge ret lret sahf rorb and pop sar (bad) decl mov mov cli cld ret mov and nop xor (bad) (bad) (bad) decl mov xor lea xor add pop push js rcll incl jae xlat xchg jle xchg dec xor pusha in insl aam ss std and enterw jbe repnz jbe iret (bad) (bad) (bad) pushl mov mov ret or lods xor nop into jl scas loopw in mov jmp popa (bad) xor add sbb mov sub (bad) (bad) mov xchg push (bad) jmp or jmp cmp test (bad) push jne ja cmpsb daa jbe mov pop das (bad) cmp pusha inc push (bad) mov pushl jo aam fmuls test test jno out mov iret in (bad) (bad) call daa or jbe add popa mov jno xchg sub mov rorl xchg adc fwait imul orb xor xchg (bad) stc sbb (bad) pushl sarl lcall cmpsb movsb fcmovnbe int xor call test jae aad adc dec pop mov adc mov push lcall xchg cld addl loop ljmp pop lret nop outsl sahf xchg sbb pop pop push imul (bad) cmp push jno push inc int3 pop (bad) leave add adc dec ljmp lods in sbb in xchg cmc fildl (bad) decl data16 sbb (bad) in fldl mov mov mov (bad) incl mov sbb xchg fisubr mov sbb (bad) (bad) (bad) (bad) cmp push push mov js xor jb mov int mov lcall test jg cltd mov div into lds sbb jb str into sar out subb mov fstpl push jmp pop mov cmp push imul icebp leave mov cs cwtl jle jmp jl adc or out cmp inc jnp ljmp mov mov mov outsb dec cmc outsb (bad) xor push ds mov call test (bad) sti (bad) adc or pop (bad) pushl arpl mov cmp (bad) inc in sbb adc pop incl sub imul jmp pop jle dec dec adc jb add fcomip call loope cld pop mov sbb in mov dec xor xchg xor addr16 pop fs pop fist call pop ja fdivs jmp clc negl outsb out push push (bad) enter or test xchg aas out lods inc jl sub or movsl xchg (bad) shll sahf frstor daa rcrb rcrl rorl jns push mov push lret addr16 mov ds lcall lcall lahf adc imull js sbb (bad) (bad) (bad) ljmp cmp cmp or out adc loopne arpl pop push dec sub std (bad) cli lods and cmp dec (bad) insl pop push call jnp nop push (bad) data16 in (bad) (bad) (bad) decl mov cmp inc (bad) cltd iret lods in dec or xlat add mov cmp mov mov pop or mov addr16 mov std cmpsb test ljmp add xor xor icebp test xor in (bad) (bad) (bad) ljmp xlat or mov imul adc gs cmovo (bad) (bad) (bad) (bad) fdivrl outsl cld cmp sti adc inc cmpsl lods pop or push xchg inc fwait sub test jge scas lret arpl xchg push (bad) (bad) (bad) (bad) mov jae pop lahf mov jg jbe sbb sbb icebp mov inc dec (bad) (bad) jp mov mov ss fimull xor fildll xlat mov jae jns lds in mov les in mov fild dec in cwtl mov push push aad add jmp adc (bad) (bad) fbstp repnz int pop mov fwait and cmpsb inc rclb lcall (bad) jnp (bad) fcomip jmp mov rcrb enter mov mov sub xor xchg (bad) (bad) ljmp cld gs xor push jmp adc mov inc inc (bad) push (bad) pushf pop and (bad) call add adc xchg adc stos and loope test fistp mov imul xchg sbb imul addr16 push stos mov jae mov dec sar ljmp mov pop xor ficompl in out inc push frstor orb push addr16 (bad) in (bad) jp loopne test in push jge icebp loop cmp dec xor xor (bad) (bad) incl pop jbe sbb mov rclb adc jg mov (bad) dec pushf mov das popl rclb push in pop in push push (bad) jg push and call and (bad) decl add stc lock into (bad) mov mov loop pop loopne (bad) mov and pop (bad) push lcall (bad) (bad) mov test push mov jecxz or idivl mov pop (bad) (bad) (bad) (bad) std fwait sti test mov mov or insl add push das pop jnp (bad) (bad) ljmp xchg ljmp xor sti test fwait call (bad) cmc ds inc sub fs jmp mov jl js xchg gs mov cs cmc cmp push xchg add (bad) jnp jno or ss cmp cwtl or inc addr16 add or jl mov or hlt aas fidivl (bad) (bad) (bad) ljmp adc or ret mov xorl push push sti xlat xor mov push (bad) (bad) incl add pop ja jecxz fcoms sbb rorb inc dec pop int3 outsl movsl ljmp mov sub aas xchg push adc (bad) (bad) jg in je lahf subl jae pop and mov push xor fwait or mov mov add sub in pusha jb mov bound lret mov sbb (bad) incl je jo jae not fwait and (bad) (bad) jge cld movsb push cmp (bad) mov cs jb pop dec sub cs (bad) (bad) pushl mov mov imul mov pushf cmp mov incl lock add cmpsb mov xchg outsl (bad) (bad) mov adcl mov add (bad) (bad) (bad) (bad) fcmovne lods mov cmp mov inc ja nop mov jp push mov sarb mov (bad) (bad) (bad) (bad) ds pop (bad) in scas jne jg bound mov in or sub xlat and inc hlt or call rclb pop cmpsl in pop cltd pop je sbb mov adcl loop sub push call mov mov (bad) (bad) decl (bad) movsb push xchg gs jl movsl pmaxsw push mov xchg out ja (bad) (bad) out (bad) add pushl jo out dec fidivl jne add fwait push adc mov (bad) (bad) lcall dec mov pmullw cmp test sahf or add (bad) (bad) (bad) fist push es xor adc out cwtl iret push mov mov (bad) (bad) (bad) decl out cltd leave and cmp minps outsb enter dec push das or (bad) (bad) ljmp imul dec mov sbb fmul pop jp add fstpl mov (bad) (bad) (bad) (bad) fildl add test sbb push insl jmp insb lds clc cs aaa and inc std (bad) call xchg out mov add xchg cmpsl and (bad) lcall movsb jl pop into sbb decb hlt fwait xchg out pop data16 mov pop pop cmp jbe rcr lahf push add out cli int3 (bad) (bad) (bad) (bad) cmp inc or or iret jb push aam mov dec leave pop cwtl mov mov (bad) lcall or sbb adc push rol sbb dec gs lret pop add mov xor or push inc mov dec mov push and cmp lret enter and lahf mov cld decl mov pop test inc fcoms push (bad) pop dec mov ja push pop popa xor out xlat aad (bad) (bad) (bad) lcall inc jae (bad) mov pushf xor mul int3 scas mov dec lds lcall push inc les negb or imulb repz push bswap pop jg aad push in outsb mov std push or fs out stc pop cmp ljmp xor mov in stc iret cmp mov push loopne mov sbb call ficomp (bad) (bad) decl cmp jno,pt in cmp imul push jbe and xor out repnz (bad) (bad) (bad) fstp stos outsb fcomi js push js xchg ds nop in sbb (bad) push mov pop popa dec xchg hlt jbe and mov (bad) (bad) (bad) (bad) ljmp and hlt jns cmpxchg ljmp mov js ljmp fidivrl jns jg or jle adc (bad) lcall jb pop nop (bad) pop mov sub add sahf icebp dec add adc test jle movsb lcall inc sahf daa jo mov andb aad (bad) (bad) jmp jbe pop std xchg sub push out jmp fmuls (bad) incl xchg scas out pop jecxz mov imul cwtl jns imul ret jge negb aaa mov (bad) cmp adc (bad) xor mov push into or dec rclb mov mov decl cmp adc in fwait pop or adc into sbb inc scas (bad) (bad) (bad) ljmp stos jbe loope add scas rcll push cld adc out cld dec popa mov add cmp dec lcall fiadd (bad) decl cld inc cmpsl adc inc fucomp add add imul mov leave add lret jle (bad) (bad) (bad) (bad) dec mov push aaa ja les pop popa ss cmp lcall mov adc ljmp cli jmp fdivl lods inc sti out sbb add int dec cmpsb add mov (bad) leave lcall dec or jecxz and daa cmp decl inc bound pop inc cmpsb add aad xor adc incl jg xlat ret rcll dec ja push dec in mov mov (bad) (bad) (bad) jmp and std jne push push lea ret movsl outsl mov movsb jbe xchg repz ja std push xchg js,pt sub sbb lret inc xchg imul sbb cmp movsl leave std (bad) (bad) lcall aam imul mov fimul icebp push test xorl hlt sbb mov out jmp fistpll pushl hlt xor mov loope dec inc ja roll mov push daa sbb rcr push hlt (bad) xchg sarb push es jbe inc insl xchg sar jg repnz mov xchg into pop fs sarl adc mov jbe ss sbb mov jge pushl pop xorb es ficoml inc mov cmc (bad) mov in jae adc test xchg sbb dec xchg das mov (bad) (bad) (bad) decl test and add jle sbb adc xor cmp ret dec mov mov cmp xchg xor icebp jg sub jno add cs sar popf xor jg push sahf add xchg (bad) call or cmp loop ljmp inc jne jmp jg hlt xor adc js (bad) (bad) out int3 dec dec cltd cmp push call (bad) (bad) jmp imul jne clc pusha lret loopne je das xor inc sahf (bad) (bad) fbld and test outsb pop ret push popf das stc mov movsl dec pop add jg sub scas cmp aas push jno fstl outsl push nop aam xor aam js (bad) (bad) (bad) fisttpl les cmp (bad) lods mov das sub cmp fdivs push cld (bad) mov and jecxz or cmpl (bad) (bad) call and scas adc sbb push icebp jp dec sub xchg inc inc xor (bad) mov mov popa out jne mov mov xor imul mov mov shll add (bad) sub sub pop xchg jle jbe (bad) (bad) (bad) ljmp pop hlt dec mov fistpl inc mov in stos test int or ljmp adc lods mov (bad) (bad) (bad) (bad) mov fldenv xor jl pop mov mov lea or adc sbb (bad) call sarb stos jg into fisubl push mov data16 mov std push mov cwtl adc add mov xor hlt int (bad) sbb les inc pop cmp jnp pop clc (bad) (bad) ljmp movl sbb jl ret test shrl push dec ljmp gs out loop fmull pop push mov mov (bad) incl xor push or inc sbb mov repz or mov cltd and (bad) cld jbe adc ja popa cwtl mov mov push ret dec add xchg insb xchg mov lds or scas xchg inc ret sub sub cld sub aaa adc lcall out mov xchg mov lds out mov jo sti out pop fs (bad) call ss xchg jge or mov out mov pushf mov pop movsb (bad) (bad) (bad) call jle sbb or les cmpsl les sub push mov inc sbb jle (bad) (bad) lcall push scas cmpb movsl mov add out adc mov aad mov enter (bad) (bad) decl sbb pop pop (bad) imul cmp push frstor std call shll add add and cld dec push (bad) (bad) clc xchg arpl inc into push ljmp (bad) (bad) lcall mov push and add insb (bad) sub inc sub dec scas dec xchg daa push push js (bad) (bad) incl ret pop in stc xor std scas cmovne push dec fldcw das incl add add adc fcoms scas mov rolb cld (bad) (bad) aas movsb (bad) je mov or dec repz and jg enter fwait push dec loopne inc mov pop fs jns inc hlt xlat lods decl mov sub dec loop lahf sub inc mov or push cmpsb (bad) (bad) (bad) decl outsb sub mov pop mov (bad) xchg mov dec iret in xchg (bad) (bad) ljmp or cmpsl mov jl or popa dec outsb lods fwait and xchg adc (bad) dec push mov pusha cld and xor in pop sub mov push (bad) adc jmp xchg cwtl mov shrl (bad) (bad) incl dec sub push rcrl mov pop mov inc mov sbb movsl adc (bad) (bad) push mov lcall out pop sahf enter xchg out scas xor lcall dec ljmp int dec cmp stos fmuls (bad) (bad) call ja inc mov dec mov mov fisttpl mov inc jns cwtl cmp (bad) (bad) (bad) lcall mov push mov in xor pop fistp adc inc xchg (bad) fmulp adc sub out or and stos cmc dec jno (bad) xor cmp mov dec call push mov fs (bad) fisubr adc (bad) (bad) (bad) mov int or imul add lea xor (bad) test lahf ljmp gs adc fadd jae add fstps rcrl aam lret push pushf fucomp add bound (bad) mov dec inc sar (bad) ljmp xor and das mov in iret sub sbb add clc mov cli xor (bad) (bad) (bad) aas sbb cld bound scas (bad) push pop sbb lret std aaa add inc adc cmpsb ficom jg cli outsb add dec lods mov jno xchg (bad) (bad) mov movsl pop jmp mov cmp jmp or inc test das movb ljmp cli fst inc inc sbb ret xchg jb (bad) enter inc lods loopne movsl daa (bad) (bad) out cli adc xor jns or mov mov jne test (bad) (bad) call xor lret cmp dec in (bad) dec jge mov (bad) xor (bad) (bad) (bad) (bad) pushl or sbb lcall adcl inc jmp jbe mov and push cld (bad) (bad) lcall test scas xlat test pop fstps or mov jb lea pop (bad) (bad) mov aam or js sbb cmpb sub xlat mov rcrl test je int3 pop out add jb nop sbb (bad) lcall inc pop sub fimull push inc inc add pusha inc aas out (bad) decl lock out inc or std out or sbb jmp call scas enter dec fcomps shlb jecxz (bad) (bad) mov fnstcw jmp sbb jmp add xchg (bad) jmp push cmp mov scas (bad) fmul sbb stos in pop enter (bad) jns fstpl icebp leave mov jnp lahf imul sub (bad) (bad) (bad) pushl and xlat rcrb movsb xor popf dec jle or push (bad) mov clc xchg (bad) incl xor (bad) jo sbb (bad) mov adc adc and adc fisttp scas decb or stc ret aas and mov inc loope dec and mov mov ljmp lcall repz or adcl iret js or pop outsb mov test insb (bad) sbb hlt push mov outsl cli or sub xchg jbe cli and lret leave fcoml int push in (bad) (bad) jg cmp daa add adc add sbb (bad) jne pop imul sar (bad) (bad) (bad) call inc lcall push mov jecxz push and dec mov dec dec enter (bad) cld jecxz inc pop jecxz xchg adc outsl mov es (bad) (bad) (bad) jmp inc cltd xor push shrb int sbb mov push add in mov dec jbe mov pop xchg (bad) (bad) (bad) fisttp gs and in inc popa je repnz ret js fstpl in inc daa idivl adc scas pop (bad) (bad) (bad) ljmp (bad) stos add out mov test mov inc pop cwtl mov inc test popa std pushl das cmpsl sub xor pop mov or (bad) jg mov hlt clc icebp movd ds jns hlt adc decl push call xchg sbb test std in outsl adc cmp adc das cmp xor dec hlt push pop jle lds (bad) ljmp cli pop mov xchg ret xor jg xchg push notb jp stc xor (bad) (bad) (bad) mov sub sbb push cmp jge cld adc xchg inc lea lock les stc dec mov add pop mov mov cmpsb sbb xchg and pop or ljmp repz (bad) inc xlat mov inc mov jae stos or repz nop (bad) lcall (bad) adc mov scas pushf jg pop std int xchg xchg add shrl je push test (bad) (bad) incl aad adc mov ret push rcrb adcl (bad) (bad) jg outsl sbb dec bound in scas pop repnz imul mov xchg push mov (bad) (bad) dec mov cmp jb cmp pop data16 sbb pop xchg push lock xor jg and pop sbb dec mov cmp adc lcall cmp inc or addr16 bnd (bad) xor aam (bad) (bad) fistl xchg outsl and pop arpl (bad) push insl (bad) (bad) (bad) mov mov loope or ret lahf push pop pop dec (bad) jg call jo std dec lods pop sar xor jmp xchg repz hlt ljmp scas out mov xchg out mov push adc or cmp sub mov xchg dec dec lods sti ss xchg scas fldenv cli add or jnp mov inc or sub cmp (bad) ljmp test or aam add sub jl cmp call lods ds in pop (bad) ljmp std pop andb (bad) ljmp dec inc fwait lock ret (bad) (bad) call loop leave testl xchg (bad) push xor inc push test fmulp and incb xor mov jne int3 and dec mov imul or jl mov fcoms (bad) (bad) fstl pop add dec jge test adc ja and decl sbb pushf mov push fisub sti mov sarl test xor dec push (bad) (bad) jg (bad) dec enter fldl jb pop mov or mov and mov hlt sub dec push fidivrl mov movsl cwtl iret jl xor aad push mov (bad) (bad) mov stos pusha mov dec imul mov (bad) pushl (bad) sbb iret cld mov cmp mov out scas in clc push pop push fimul loopne push mov clc inc dec adc div xchg (bad) imul dec (bad) mov sbb mov sbb dec daa mov (bad) (bad) ljmp movsb rorb push mov xchg subl imul push lods xchg or mov iret cwtl fld dec push jnp inc or push xor in mov loopne rcr les push inc in mov int3 lret loop outsl addr16 adc (bad) (bad) pushl mov add cltd mov sbb ret pop adc fidivl lcall ljmp in add jb out jg imul jb lods (bad) xor adc (bad) (bad) decl scas xor sub ds out popa lds ja gs (bad) mov in jp fistp push xchg inc repnz decl fild iret iret jbe leave fldcw xchg cmc (bad) fisttp xchg xabort push hlt cmp jge push xchg dec pusha push sar (bad) (bad) (bad) cld mov in fild pop cli fldcw adc mov fucomp (bad) (bad) (bad) mov jnp bound or add adc outsb add mov fstps aam add and (bad) pushl lock mov xor mov push jne je cli mov decl decl insb (bad) loope aaa fiadd out jnp mov rorl in sbb cmp enter or and sbb push pop pushf loop cmp push movsl mov (bad) (bad) jmp out test cmp push or pushf imul jl lds loop (bad) in adc cmc and sti and ljmp ja pop xor (bad) (bad) mov inc sbb call pop lahf test adc push incb mov xchg push jno loopne and xor mov mov push xor test xor js (bad) (bad) ljmp cmp (bad) mov out mov cmpl cmc aam fsubr sbb push adc sbb sub mov cmpsl push in lea stos hlt fdivs inc dec call jmp popf cmp sbb sub scas add fcomps ficomp add (bad) (bad) (bad) lcall gs jb jecxz jne pop dec rorb mov sbb cmp mov jmp jecxz inc jg (bad) pushl xor test fstpt in adc cmp xchg dec and push test jmp ljmp mov lea repnz fadds mov pop cmp mov call lcall adc fdivs es call pop dec je (bad) mov lods (bad) pop (bad) (bad) (bad) (bad) ljmp mov cmp inc jne std mov fmuls ret popf pop stc jno inc test mov (bad) (bad) (bad) lcall mov jno cld ret int3 adc mov fsubrs hlt mov lock icebp (bad) ljmp int3 jo test js ret out fcoms fadd mov shr inc inc testb xor sub jo mov (bad) (bad) incl imul pop xchg int3 fchs in cltd test sbb push test mov xchg (bad) (bad) call pusha jo fmuls loope push sub or push mov out loop jle mov (bad) (bad) decl dec xor add dec out jbe test jmp xchg add loop incl adc dec dec imul xlat int3 add dec push pop push ret push dec mov out clc (bad) (bad) jg fcmovu pop inc adc repz mov rcr push push sub movsb mov fldcw xchg (bad) popf clc adc test cmovns push push aas or (bad) jmp outsl push dec inc mov jmp (bad) out fidivl lds adc (bad) (bad) jmp faddl xchg jo mov xor adc rorb cmc (bad) (bad) (bad) pushl xchg adc jle jl xchg insb inc movsl cltd push xor imul sbb jo les cwtl les fdivs push das and (bad) cmp or xlat popaw (bad) jp jmp jp xor imul jae cmc jge or (bad) pushl cmp push lcall jae jl (bad) in stc dec (bad) (bad) (bad) jmp inc (bad) clc adc adc outsl dec cmp je mov (bad) jmp enter mov pop mov fisttpl push popf fcomps xor (bad) (bad) jle fwait decb (bad) lcall xor mov and jmp jbe call ja clc cmp ret mov inc push jns (bad) and cwtl (bad) jg mov neg jo mov aaa loopne xlat mov popa call inc shrb stos xchg mov int3 cmp (bad) (bad) decl out (bad) les rcrl sbb fdivr mov negb (bad) (bad) (bad) in cld loope sbb add fisubl pop and push fiaddl mov or add cmp imul (bad) hlt (bad) and sub les jle dec (bad) (bad) lcall inc fs cmp push fistl movaps xor push adc int3 push push dec add push jge xchg ret scas cmp or (bad) (bad) jg pop xlat les mov roll test (bad) loop (bad) jmp (bad) push insl cmc inc mov popa sub push fidivrl lret jp xchg pushf mov mov mov jno push outsl (bad) (bad) (bad) ljmp test pop (bad) out in stc aad xchg or add std cmp (bad) pop pop and jl clc scas lcall cmpsb mov (bad) (bad) sbb in xchg (bad) incl and xchg mov iret (bad) and std pop pop pushf inc movsb jle or mov std lods or loope call lahf sbb (bad) (bad) (bad) mov xor jg push cmpsb xchg or jg pop mulb fmull das cmc call dec aam aad cmc in xchg imul mov pushl jge pop push add lods mov mov (bad) js push addr16 jge mov jb shrb xchg (bad) (bad) (bad) (bad) jmp fbld out ucomiss jo rcrb neg iret out or cld jle cld int mov xchg push inc leave in stos fsubrs (bad) (bad) (bad) jg xor nop (bad) enter mov addl clc test mov lcall outsb inc and cs xchg mov and cs push add (bad) (bad) (bad) incl add xor add and push (bad) jmp jge sbbl jnp pop sub (bad) (bad) (bad) (bad) fistl pop mov aad mov inc mov inc mov jb lret add repnz mov (bad) (bad) pushl (bad) or fiadd xor mov test lret add sub push call adc fwait or or loop decl je mov daa lahf stos sbb clc or adc (bad) (bad) cmp sbb push pop xchg jmp mov xchg xlat jmp mov out sahf inc jnp push (bad) (bad) (bad) (bad) ljmp jle sarl pop rorl cmc jb pop or xchg xchg dec push cwtl sar inc cli xlat push rclb xchg dec push fwait lods (bad) std imul push mov push mov mov (bad) out jno lods mov add cmp cltd cld cmpsl shr cli (bad) (bad) mov test in arpl cmp loope mov push (bad) mov or jg push xchg pop fcmovb leave push (bad) (bad) incl bnd dec sahf xorb mov jno rcrl pop ljmp sub jnp cmpsl cmp mov outsl sbb outsb dec ret lahf in fs das lcall fnop iret jge dec mov popa std ja repnz push stc add lahf out (bad) (bad) (bad) jg shr out sub in push fidiv scas mov inc test icebp and (bad) (bad) jmp mov jle adc jns push jne fcmovne outsl and pop iret (bad) (bad) (bad) (bad) cmp mov lcall mulb inc in lcall dec popl push or (bad) (bad) dec lock call adc fwait cmp fldcw sub sub mov mov pusha add loop pushl mov repnz js adc jne sub ljmp cmpsb test cmp inc pop adc lahf sahf mov inc dec imul cmp (bad) (bad) (bad) (bad) cmp push sub adc or add pusha fdivrp ret adc popf mov (bad) push add stc (bad) scas mov mov incb xchg fs push in pop and jle (bad) frstor hlt mov jns in dec pusha out imul (bad) call mov (bad) xchg pop loopne xchg fstpl (bad) jge loop dec (bad) lret push mov jno test mov sbb fbstp xlat cmp push inc sbb test sbb jmp xor add lds icebp xor fisttp pop in sub xor ret std jg int cli lahf jbe mov into (bad) mov aam (bad) (bad) (bad) call pop loop jo mov jno stos (bad) icebp inc xor lret sahf ss sarl rep fisubr push lea pusha inc les pmaddwd mov and mov cmpsl (bad) xlat (bad) jmp loopne cli lret in xlat daa and dec push test sbb and mov or push jmp lret push (bad) (bad) (bad) lcall fsts or movl loopne repnz fildl ja push adc (bad) call adc inc and pushf cmp mov push sarb pop das movsb mov push (bad) (bad) (bad) pushl sub jbe pop dec testl stos cmp add ljmp (bad) (bad) (bad) (bad) jmp inc mov mov cltd in test mov cmpsl jge lock scas scas mov mov (bad) call and daa push sbb dec xchg fisttp xchg sarb dec pop (bad) fsts fdivrl (bad) (bad) (bad) in xor cld stos das loop xor jnp lahf les adc dec sbb lcall cltd and pop add ds sbb fs mov shlb pop lock ljmp iret pop sbb out cltd sub xchg (bad) cmp adc pop loopne aad call push pop aad mov sub repnz (bad) rcrb (bad) (bad) ljmp inc sbb mov sbb mov movsb push pop xor adc shr sti pop lods mov sbb ror dec test inc cmp push dec pop cmp popf in adc or leave pop jo mov insb inc mov (bad) (bad) pushl sahf pushf dec xchg inc fwait push sub in fidivl mov adc add push dec xor bound iret test mov pusha outsl movsl (bad) mov adc imul cmp xor and not sub sbb popf in fisubrl mov outsl jl push std das (bad) xchg fcoms ljmp add inc aas cltd jae js movsl inc test xor pop mov xchg sub (bad) incl cltd cmp ss inc pop jae dec fwait mov push sbb pop cltd push jl mov cmpsb std jle (bad) (bad) (bad) jmp add outsl rolb lods fwait pop popa popf or sbb aaa mov sub out aad (bad) jge (bad) (bad) (bad) push cmpl sbb in (bad) data16 push or xchg fidivr cmp cmp jecxz lock lcall ss fwait out mov mov sti es xchg add (bad) dec rcrb jecxz ja push pop (bad) idivb cld lcall inc jbe mov fistp vpsubsw and xchg ss and aas jg lret pushf (bad) jle jg xor leave fbld mov jp mov mov xchg sbb mov pop and mov xor mov sub clc add insb push dec out jae adc (bad) ljmp or lret fs push fimull sub push push and cmpb sbb (bad) (bad) (bad) decl cmp std mov mov adc aaa pop sti pop xchg xor loop sbb adc and (bad) (bad) call cmp dec jle dec cli dec fdivs mov mov xchg jmp cmp pop fimull jmp inc xor cmp iret daa incb mov test cmp push in xor mov pop jb jno lods jbe sub icebp clc push or lea cmpb cmp repnz jl loopne (bad) jecxz ret xor fs arpl (bad) (bad) (bad) decl sbb fcmovu xor push mov jge ds scas cmp dec push stos dec cmpsl lock (bad) jmp clc xor rolb cmp dec test or sarl (bad) decl jmp das stc xor dec (bad) jg mov add and xor pop mov cmc fcmovnu push push daa fsubrs test mov out xchg popf pop dec jns lock lret jg mov xchg test mov pop and push hlt ret or loop push pop mov jge shl (bad) test pop and and pop dec (bad) push rcrl push loop movsb stos int sti cmp inc push test inc dec push scas cld xor xchg push mov (bad) jg int3 in mov lret push packsswb pop inc stos (bad) jmp into sbb sbb clc jge sbb mov je outsb sbb aaa es and pusha sub mov pop (bad) (bad) (bad) call mov imul fcoml out pushf in xchg popa push pop gs fdivr (bad) (bad) jmp adc xchg and outsb mov hlt dec test pusha enter (bad) cmc lret adc jmp leave jmp jl fs dec enter (bad) mov mov out ds (bad) test (bad) lods push or inc and inc cmpsb cli jg add aam inc lods push cmp push std outsl movsb mov inc test (bad) lret ljmp mov jp stos lds ret add add xchg (bad) inc xlat jbe stos movlps loope xor (bad) call inc cld aam es imul sbb ljmp fdivrl jmp clc gs loope lcall dec jecxz (bad) loope sti (bad) jg test cmp xor dec xor and cli pop cmpl (bad) jb pop add mov sbbl sub pop push cmp (bad) (bad) (bad) incl int3 push add stos jae leave pushf xor ljmp clc jmp dec inc adc (bad) ljmp dec cli pop nop adc add xchg sbb push or jg scas xor and sub into xchg mov mov stos and dec pop pop stc mov insb adc icebp fstl clc mov (bad) (bad) pushl sbb addl adc stos push push dec pop fisubl imul ljmp sbb mov pop sub icebp pop ljmp mov jl bound out inc jp aas enter jle cmc pusha or bound and (bad) (bad) (bad) incl aam sub xchg outsb mov jmp cmp test cltd sbb xchg scas (bad) lret sbb fadds (bad) call sub hlt mov hlt (bad) (bad) (bad) incl and fildll divl loopne or dec and pop cmpb movsl adc (bad) (bad) mov jb scas xor adc mov push add (bad) (bad) (bad) call mov mov mov push loope jo sbb aaa loop pop pop fdivrs inc lret xchg jno inc inc jl jnp fsubrs clc fcmovb (bad) (bad) jmp mov cmpsl scas xchg cmp pop in lea arpl ljmp push mov lret sub fisubr push adc scas enter imul out (bad) (bad) (bad) std pop fadds mov xchg jmp gs repnz adc or inc adc push lods inc inc mov adc (bad) (bad) lcall xor push scas mov push push and cmp dec mov mov std mov shrb es xchg (bad) lcall rcrl mov (bad) mov (bad) (bad) decl (bad) sbb frstpm(287 scas dec cwtl imul xchg xlat pop mov push sub mov (bad) (bad) (bad) ljmp add jo (bad) mov push or adc jle inc fdivr mov inc andl (bad) (bad) decl sub inc or push dec xor sub cmp mov or mov inc loope scas insb sbb stos fmull push test movsb push ret lret jecxz jmp std push cwtl sarb testl jg push push lcall (bad) repnz dec xchg cmp daa std add incl es xor or or jecxz or jmp cmp push fistl jle loopne push call xchg push decb mov (bad) push ja xor cmp repz (bad) lcall aad mov push mov clc addb xchg (bad) ljmp ja add js xchg enter lods sbb rcll sbb xchg dec js push out (bad) (bad) lcall inc mov inc into lcall cmc out mov ds scas add (bad) lcall out aaa rolb sub inc cmp out movsl bound (bad) mov je pusha mov cmpsb movsl jno jle inc jmp jmp jg sbb mov or loope cmp loopne mov mov sbb adc jnp mov lock xchg inc xchg mov (bad) mov mov and cli cmp xor jecxz lret cmc daa (bad) push mov (bad) (bad) jmp mov fildll rolb inc add fwait (bad) xor sti loop jno repnz lods and loop or mov dec addr16 int3 mov mov mov repz push and or lahf lcall (bad) incl push jp or mov and rcll (bad) mov shrl (bad) decl adc test rolb test loop movsl (bad) (bad) (bad) (bad) fcomps pop das xor push and (bad) and xor push xchg jo outsl incl xchg cli adc je es adcl decl das fcom in iret mov sub push or dec lea pop (bad) (bad) (bad) decl mov into fmuls fwait scas aas ret int3 jbe pusha (bad) jmp cmp inc jnp push (bad) (bad) (bad) call or inc jge push jne push out lcall scas jmp (bad) fcoml sbb xchg fistl imul cmp negl aam xor test (bad) lcall push pop cmp mov pop jle pop push es (bad) (bad) ljmp popa jecxz add ret pop pop insl pop out gs cwtl sahf inc stos out movsb mov (bad) (bad) cmp (bad) sbb lods aas sub in and mov push aas test cld call (bad) (bad) mov rcrl dec xlat mov mov mov cmc dec jns mov push xor sti ffreep jmp (bad) lcall dec adc int into popa in int3 jmp sarb inc packsswb mov or (bad) lcall dec adc jl pushf movsb mov stos stos xchg pop xchg cmp ret xchg lods jno aas jp pop (bad) (bad) (bad) decl dec mov ss inc dec sbb loopne aam sub jge add cmpsb pop icebp loop (bad) ljmp mov hlt out fildl mov add lds sti lcall dec (bad) fidivr and mov std testb pop call push daa ds add and pop ret (bad) cmp jnp cmpsl (bad) add (bad) inc (bad) xor mov inc inc stc xchg push push mov movb pop dec mov incl or out fstl xor into movsb (bad) mov incl xchg mov jg dec cld out sbb pop jne outsl sahf xchg adc decl jmp jbe hlt pop or pop fistpll pop je pusha popa pop int in cmp js icebp popf (bad) (bad) jg cmp jg fdivrl cmc cltd cwtl movsb sbb cltd in mov jmp call add fs out test cmp pushl ds fistp mov cmp or (bad) call movsb (bad) push pop aas inc inc es push cmp lret sub leave notl (bad) (bad) (bad) jmp xchg add outsl lahf push orl out mov add push push cmp sub jg incl ja jae int3 in ja ficom in cli rcrb mov dec add sar jmp mov div stos mov cmc sahf (bad) inc (bad) adc mov push nop jmp lods jae sti out (bad) in cltd out je jne add (bad) (bad) (bad) mov andl mov fmull cli int3 pop or mov or mov sbb jae pop add decl pop sub mov lods (bad) push jmp arpl fnstenv mov push lock call inc pop cmp pop (bad) mov adc pop xor je test fstpl or call cmp lea xor add test aaa cld (bad) jmp lods and add ret lds loopne lret cmp (bad) (bad) (bad) out inc sub out imul out jo xor ret add sbb mov or out jnp xchg (bad) fcomip inc lock mov xorl push (bad) (bad) call cmp fnstsw shlb cmp out nop cmpsl pop int3 cli dec mov (bad) and jg test jo mov popf cmp dec xor mov cld pop or fldt addr16 add dec or call xchg mov jp mov xlat lods adc dec (bad) (bad) ljmp pop lret sub jb les mov mov fbld lock and into mov push adc mov xchg jne mov sarb shrb push mov adc or jl test loope,pt adc fs popf divl in push imul xorl lcall std mov add mov test popf cs push mov or incl stc int3 and push sbb call jg inc mov xchg dec jb out sbb (bad) (bad) mov push ja inc mov bound sbb loop bound inc mov (bad) mov lret xor hlt push mov call mov cmc setno push (bad) (bad) decl mov cwtl mov xor out push sbb inc clc (bad) jmp aad mov push pusha sub lret mov mov or xchg out scas pop jnp jg out pop pop (bad) decl or mov les mov dec jo push inc dec push aas in call lods jmp or orl cmpsb (bad) (bad) fistpll xchg jnp sbb sbb lock jae dec in xchg xor stos call or xor add cmp ljmp cvttps2pi sti add sti fsubrl add jg xchg inc mov jmp loope cmpsb (bad) (bad) pushl sbb outsl repnz ficomp mov dec xor fistpl jbe sar mov add aas push adc jecxz add adc adc stos pusha out sbb (bad) ljmp andps adc push gs ds dec test (bad) add movsb test jg decl ret mov sbbb push sbb cs mov pop add inc push cmp (bad) (bad) jg test insb mov jbe mov (bad) (bad) call adc in mov sarl (bad) out cltd xlat loope pop cmpsl sub pop lods (bad) jg (bad) cld ret push jge ljmp (bad) jae test (bad) xor out cld (bad) (bad) dec push popf fldl2t mov inc xor mov repnz dec aad push aad add pop fs pop push jno cmp ja cmp mov (bad) stos push ljmp push mov mov mov lahf jo (bad) cli push cld (bad) (bad) fdivrs stc pop xchg loope inc sbb js push in mov (bad) test idiv (bad) out out mov stc loopne hlt cmp pslld mov jmp pop ljmp sahf in fmuls lods push push es sub sub aaa push std lret xlat out push sub and push mov decl sbb mov repnz mov push pushfw and pusha push pushl inc ret jmp sub mov mov sub arpl stos jno adc ja adc (bad) jo xor loop sub sbb (bad) (bad) (bad) cli imull lret mov push scas adcl adc loope test and lds xor xor lds inc jecxz cwtl push pop movb sbb test dec ljmp insb (bad) or test int mov sub cs sahf cld (bad) (bad) jg loope repz pop sbb jecxz xor xor repnz or push jmp (bad) decl fisub testb pop lret adc push pop movsl idivb movsl leave (bad) lcall mov mov or cld out adc (bad) (bad) (bad) js movsb lock sub and scas fadds push cltd xchg jb repnz (bad) fdivl cli pusha into loopne xlat sbb adc sub popf aam pop and aad cmpsl je clc mov sti and pushl cmp cli mov cs (bad) sbb jge mov pop (bad) cli xor out cmp dec int3 inc movsb jp xor scas push mov imul and add in lcall and fisub (bad) call sbb jg sahf and cmc int lret ljmp xchg add push adc xchg and or cmc test (bad) icebp lret cmp nop sarl and pushl call sahf xor ret or and pop inc xor jns xchg xchg add mov pushl sub mov inc stos sub aad and xchg (bad) sub cs (bad) mov (bad) lock dec sub xchg mov iret test jle fs aaa hlt jle jg pushl in mov jle xor sahf sub dec data16 mov das xor adc dec xorl pushf mov xchg pop xchg fisubr pop cmc in dec jmp inc or daa (bad) jnp lds jle jp xchg add xchg (bad) lcall dec idivb sbb mov add (bad) (bad) (bad) call fisttp std jp mov sbb add sbb outsl dec out fsts popf sahf mov lcall and mov and add dec lea xor mov or lret cmp mov fisub fs or cmp xlat inc (bad) (bad) (bad) jmp inc cmp inc (bad) mov aad call jl mov shl xlat cld pop adc je decl hlt mov xorb sub cld and adc test (bad) (bad) lcall aas mov jo pop jbe mov xchg mov (bad) lret mov ja int3 stos dec mov pushl xchg jb and adc outsl mov xchg cwtl dec in sub add mov mov mov call push (bad) (bad) (bad) jg jae mov xchg mov jno iret xorl xchg xor mov mov xor (bad) push (bad) lret rcll imul iret mov sahf mov mov icebp nop std call push call push rol mov cmpb push pop sub fcmovne ds call jbe mov jae iret cmp sub roll test daa je sahf ret inc pop inc pop int3 cli sub sbb mov decl stos rorl push and push pop call iret cs shrb jg and in sarl jns cs push cs mov call mov incl popf fwait ja pop add insb in pop loope xchg pop je stos sub sbb inc and mov aad aaa stos sbb insb xchg pop (bad) (bad) out sub enter mov ror fwait or fbld add rorl pop mov jae cmp (bad) lods jecxz mov (bad) (bad) (bad) in push fbstp pop xchg adc cwtl xchg jns dec sahf pop xchg ljmp add push push ja ret push ja scas pop cld (bad) (bad) fiadd fsubs pop nop xor les call clc negb (bad) jmp icebp adc adcb push pop push jge xchg (bad) jne mov out cmp xchg outsl es mov (bad) mov sub cmp (bad) (bad) (bad) jg mov int3 test push test cld in outsl push mov fsubs push adc clc (bad) (bad) (bad) ljmp inc lods jns orb xor add and cmp pushf outsl mov cwtl cwtl iret lcall (bad) jg outsl lods or les iret push aaa xchg or sub out aam (bad) and xor dec adc test xchg fdivr jg imul jns pop xchg cld and pushf imulb (bad) (bad) lcall out xchg das inc xchg addr16 dec lahf das (bad) out movsl ficompl jmp pop in cmc aas xchg fcomip ja ret xchg push in popf xor or (bad) (bad) (bad) call or xchg jbe adc fildl loopne int3 fwait sahf sbb sub xchg xchg (bad) dec cmp jp push mov xor (bad) mov aad jmp lret sbb mov pop (bad) xchg jbe leave xchg and out arpl (bad) (bad) jmp in jne or stos push popf pop popa (bad) andb aam xor jbe (bad) iret sarl dec inc cmp dec call or mov cmp sub (bad) (bad) ljmp pop pop (bad) or mov (bad) add inc inc xchg imul bound addr16 (bad) (bad) jmp xchg out or imull shlb and sahf fyl2x add out sbb decl dec (bad) out lods stc movsl dec movsl jecxz movsl or (bad) in (bad) fiadd sub sbb cli nop sti shl jecxz fdivs icebp js and cs cli scas rclb loope push xor dec xchg add cmpl cli and and lahf cli mov mov push mov inc sbb sbb outsl stos dec ss lret nop push inc xor movsb rcrb adc add mov cld out (bad) (bad) call xchg faddl mov sbb icebp cmp sub mov outsl cli jb popf mov fcompl add imul or pop pop (bad) mov jns sub jmp je lods xchg (bad) jmp mov inc sub pusha xchg stos test mov sub fildll mov iret push dec (bad) (bad) mov (bad) mov xlat pop and shrb sbb scas outsl call push sub ja cwtl imul imul leave dec sbb (bad) (bad) pushl adc mov and pop bound pushf inc fwait mov cwtl cltd jnp movsb dec bound mov leave sub cld jecxz sarl add adc les call arpl push sub sahf sbb sti out mov mov cwtl add adc push push inc sub mov add pop push or jmp jno imul (bad) call in cmc test or ret pop pop ror movsl pop ret dec icebp xchg mov rcrl (bad) decl inc add jo mov inc mov add cmp sbb lcall jbe cmp or fs aam cmp cmp pop xchg xor (bad) jmp mov cld test push jmp sar (bad) ljmp xchg fmulp into and rorb mov jne je popf push or push sub mov insb pushf cwtl inc ljmp xor lcall push adc mov scas dec push or pusha adc imul push (bad) (bad) (bad) (bad) std jnp xor mov dec cmpsl ja call (bad) jno jmp mov sbb dec xor and and pop icebp (bad) pushl ss mov fistpll pop fcomps mov insl (bad) (bad) (bad) pushl and mov inc pop in jae mov mov rolb mov ret and xor call pop adc fwait mov jp sbb add lcall mov pusha cltd mov movsb loopne jb mov fstps lcall xchg ret into mov out std pop jo stc test or sub or xor cmp sbb add add into mulb lds jecxz (bad) lcall pop arpl lcall (bad) xchg lahf push mov inc cmp orl (bad) (bad) jg movsb dec xchg and pushf push lret mov bound or (bad) call jmp int jl mov test (bad) cld sub loop sbbl cwtl (bad) jg inc and xor cmc mov sbb add fimul (bad) incl pop mov xchg (bad) jg rorl jg lahf dec aam (bad) (bad) mov push outsb xchg movb in cmp arpl cli adc cwtl shlb (bad) (bad) pushl sub cmp xchg les add or sbb fwait in cmp (bad) (bad) call ss xorb push mov fisttpll cmpl pop cmp sti xchg repnz cmp adc pusha (bad) aas xor movsl mov iret popa dec data16 call xchg rcr lahf cmp jnp jp and mov scas popf pop sbb (bad) ljmp xchg jmp out inc insb hlt adc xchg call fwait add imul push lcall stos stos aad call add dec insb scas fwait lret jp movsl (bad) xor (bad) mov (bad) leave sbb lods xchg pusha jmp add mov (bad) (bad) (bad) call mov out nop loope or negl mov outsl add ror dec jae std scas mov (bad) enter xor dec jae add mov fs (bad) fnstsw (bad) (bad) mov inc xchg inc xor xchg xor adc add push xchg jo frstor (bad) (bad) call cs adc sbbl xor pop inc test or call mov icebp mov pop shlb movsb das movsl repnz xor pop sbb (bad) (bad) mov adc sti lcall loopne fistpl xorl or push adcl or push sub fldt mov aas cmp add dec adc outsl cli push shrb jno (bad) sbb jmp inc cmp (bad) sbb les add adc xor jg add lods stos cmpsl sub fs inc out ljmp call jp push lahf in cmp (bad) out jle mov stc fildll test pushl dec adc pop loope dec stc arpl mov mov rol xorb adc jo mov and push ret jl (bad) (bad) (bad) call scas mov jo in pop jp nop mov sbb test out sahf inc shlb cmp xor jmp cld nop cmc lret scas lcall mov ljmp or mov pop sub ljmp in ret ja mov int3 repz ljmp ficomp cmp decl jmp stos cwtl leave xor pop out mov cmp inc jge mov (bad) fild add (bad) jg and and (bad) shl ljmp clc push xlat jge xchg repz (bad) (bad) ljmp movsb or dec mov insl sarb jmp sbb movsb xor push pop sar add mov dec (bad) ret cmc jmp or jno xor dec in or inc mov xor lret fs push dec cmp scas rclb (bad) (bad) lcall cltd test out add mov pop jle mov adc orb insl nop (bad) (bad) (bad) (bad) jnp enter scas mov scas aad pushaw xchg popf push flds (bad) (bad) (bad) jg dec call in sub cmp inc mov movsl sub adc pop (bad) (bad) fcoml adc sbb (bad) (bad) (bad) (bad) ljmp lahf xor inc dec mov neg ficom sub cltd push inc or into mov inc pop jne (bad) dec adcl (bad) incl xor mov cmp out jns clc mov in jno jae lahf roll and jae push cld mov push adc (bad) lods sbb rcr cmc scas xor cmp mov inc mov push (bad) (bad) (bad) decl cld imul mov mov rclb ss nop in push xchg (bad) das nop lods lret sbb cli pushl ss or mov lods push movhlps cmp (bad) ljmp cmc pop and xor sub xor mov mov (bad) mov (bad) les pop jnp or pop cmc (bad) (bad) pushl mov adc push fiaddl arpl fmul aas fisubr sbb dec cwtl aaa cmpsl and in pusha fwait adc or (bad) call addr16 (bad) jae dec pop gs sahf lds and xchg sub adc (bad) (bad) incl lea data16 cmp xchg cmp add pop (bad) sbb lods imul inc inc (bad) arpl sbb scas mov lods pop sbb jp (bad) call ret jp outsb aas cli pusha insb (bad) aad cmc add (bad) lcall movsb addr16 test xchg jbe mov jae fnsave (bad) (bad) (bad) (bad) mov scas frstor fdivp stos call pop push pop fwait mov cmpsl mov mov (bad) (bad) inc repnz in mov dec dec cmc js or cmp cmp rcrb fdivrs pushf arpl cmc (bad) call enter lahf inc sub out outsb stos and sbb lret adc (bad) (bad) mov and push cmp test ret lock loope dec (bad) jg lcall and push or lods xchg cli cmp (bad) (bad) (bad) dec mov aas and mov mov xor test pop and push push inc pushl lcall popa lods in (bad) cli popa jmp adc (bad) lcall popa inc adc pop lock test lods mov push pusha pop in pop push into aaa mov jo adc mov lds pop cmp (bad) jmp push sub push dec cs fdivrl inc xchg icebp sti loop (bad) (bad) ljmp out fimull popw rorl and jp mov mov fstl fild ljmp and test loop sbb jecxz sub xchg sub and (bad) (bad) (bad) pushl mov sub orl xor scas (bad) lock test jnp lcall (bad) jl adc mov mov shrl scas xor (bad) sti sbb mov mov or sub dec cwtl ret jmp push in and cld repz (bad) (bad) (bad) in das fs test mov fisttpll cmp scas or fs sarb (bad) push lods scas ror movsl mov ds je sbb cmp scas aas adc add aam insl cld and xor outsl dec inc (bad) jmp jne push je sub add in sbb (bad) (bad) lcall enter inc lcall mov push pop (bad) adc add jnp xchg cmc (bad) (bad) jmp dec cli (bad) mov fsubrs rorl mov (bad) ljmp mov push jge sti pop push sbbl data16 push imul (bad) (bad) (bad) lcall pop dec dec pop inc xlat dec pop inc mov add fmul pop out insl movsl cwtl mov test mov (bad) (bad) fnop test lahf push push sub (bad) call dec mov jge pop sub es pushl shrl test push std sub push sbb jg (bad) jmp test cmp lods iret stos cmc inc shl sbb clc pop loopne xchg (bad) mov loope,pt pusha pop test sbb jb fsts incl mov fnstsw call mov in push cmp (bad) (bad) (bad) call sub mov adc or inc or test fwait sub jge in mov cmp or add inc (bad) clc push scas stos fildl lcall mov (bad) mov fs inc mov (bad) (bad) lcall in popf pop inc pushf fdivs fsubrs fs add xlat movlps mov fs push mov inc bndstx jmp shr imul subl sub shl jae dec roll scas push insb mov inc nop mov mov or dec sbb mov xchg insl adc and (bad) incl fucomp mulb push xchg stos out pop out int and add rclb mov mov inc imul and pushf jb (bad) (bad) ljmp stos ds or rcr push push fnstcw bound outsl out push enter aaa adc lcall xor mov mov int3 adc insl xchg sub repnz sbb cmp addb wbinvd sub adc pop outsb mov loope push movsb push test idiv (bad) (bad) ljmp and cltd push jg test jmp xchg inc out ja leave pop inc out (bad) (bad) (bad) ljmp mov adc and jb sbb cmp sbb rcll das cli (bad) push xchg mov test mov pop bsf das push cmc mov aaa cld incl xchg xor and popa xchg fcoml cmp fucomp xlat incb cmp je hlt mov imul ja (bad) mov clc ds loopne mov pushl sbb sbb cmp pushf call and and mov (bad) (bad) dec xchg imul cmp jnp dec icebp stc push xor xchg hlt pop popa dec js mov add (bad) incl jg dec mov inc mov jle jle (bad) (bad) call pop push inc data16 lds les (bad) negl adc imul mov pop or incl push aam pop mov inc enter test stc (bad) (bad) (bad) lcall ret mov lock aas mov aam and imul sahf (bad) ljmp clc pushl mov lock sbb adc cmc out mov sbb inc xchg (bad) (bad) (bad) ljmp test push xorl cs xor xor jo add adc rol int3 pusha adc pop mov icebp cmp scas in hlt add data16 push stos aaa outsl inc cwtl (bad) (bad) (bad) pushl add lcall inc push pusha sahf scas lock stos xchg add int3 push mov (bad) lcall cld sub aas shrl (bad) fcomip pop mov ja dec mov lock mov aam mov mov decl jl ficom add mov xchg xchg fidiv out dec adc decl jo lret sti mov sub cli lcall adc adc dec (bad) in hlt or xorb xor (bad) (bad) (bad) jmp (bad) aam mov test (bad) rclb pop cmp jbe xor cmpxchg8b out mov (bad) fimull xchg sub mov ret cmp mov scas pop jb pop pop sub in mov xchg popa mov sbb repz jle jl mov (bad) jmp or daa iret out cmpsl out jl hlt enter lock xchg inc addr16 jns stos lds and (bad) jbe (bad) (bad) pushl out cmp mov pop xchg or repz sub pop pop outsl add pop in push mov sar call mov or add pop or (bad) ds pop stos int dec inc lods call (bad) call (bad) cld pop imul push or test xorl call add push dec sub clc (bad) icebp xchg xchg push push ljmp lea into (bad) (bad) popa rcrl mov and (bad) ljmp enter je and mov (bad) cmp out pusha jg (bad) incl loope,pn xor mov int mov fisttpl out mov std rolb xchg cmpsb rcr test (bad) (bad) call pop in cmp dec jg sar fisubrl addb divl ljmp or jecxz xchg mov mov and incl call (bad) scas arpl bswap cmpsb (bad) call shll std jge push jne aad lret push mov jg sbb mov mov sarl (bad) dec loopne cmp pop (bad) mov fdiv call negb mov jl mov cld je (bad) jg pop lret sbb pusha push ret cli stc shll arpl pop mov sbb jns (bad) (bad) jmp shrb cmpsl xor dec (bad) lock out adc pop (bad) incl cwtl jl (bad) adc loop (bad) incl mov stc mov je add pop shlb sbb mov xchg ret dec hlt ja fadd cli (bad) (bad) (bad) decl lds mov loopne aas ljmp rcrb and mov (bad) (bad) call mov hlt mov pop jae clc rorb je mov add xor test (bad) aaa insl fnstenv pop xor andb fdivr ficompl xor test push cld jb int3 loopne sub push sub push (bad) pop (bad) (bad) mov ja repz xchg cmp call fcoms or mov or add pushf jns jbe xor cmp (bad) (bad) jg sub roll fucom imulb call inc jle dec addr16 (bad) jg (bad) loop sbb scas push decl movsl or test jle add pop (bad) (bad) (bad) jmp push out inc rolb lret cli mov stos scas or mov test stc jmp (bad) (bad) lcall inc adc sub sbb in add cmp les mov jecxz jle mov mov cmp or jbe fcomp mov popl sub cmc fdivrs test adc xor fucomp (bad) cld add lea adc (bad) inc (bad) decl inc sahf lods jge push xor imul lods pause inc ljmp or cmp sub ljmp mov int sbb pop dec out mov cmp inc push xor adc out cli incl inc mov (bad) lahf sahf sbb mov sbb leave adc xchg push js (bad) (bad) (bad) pushl in jae sbb sti in je pop imul jp push jnp sbb (bad) (bad) (bad) call xlat push sbb jnp cmp or sbb xlat xlat xor sbb mov sti and add stc pop push mov dec mov ljmp mov sub sub das sti aaa fcmovnb incl aas push fdivrl cld movsb add out aas xchg (bad) (bad) (bad) decl hlt lahf dec ret leave jmp mov std ss std leave out and jno hlt test (bad) (bad) (bad) push int pop inc mov mov cmpsl (bad) mov fimull inc das outsb lock sahf pop jmp icebp mov std fist loopne inc (bad) mov pop je mov adc out add ljmp test ret jo push xchg shlb in mov les push sbb ret or (bad) (bad) call add int3 test aaa popa shlb mov gs pop sub inc mov (bad) jmp pushf rcll std sub mov jp loope jmp aas sub push cli (bad) (bad) out adc adcl outsb inc movsb (bad) and xlat mov clc hlt (bad) (bad) incl sbb bound loope insl pop cmc dec cmp cmpsl pop lock inc jg (bad) dec xor addr16 ja cmpb test cmpsb hlt (bad) outsl mov inc mov mov in loopne pop imul cli jmp ret movsb rolb (bad) ljmp out (bad) decl cld popf xchg lds dec insl loop fdivs sub js daa mov (bad) pushl mov lcall sub rcrl inc das sub push lcall (bad) dec les jo fcomps and jp dec or push jp cmpsl inc (bad) (bad) call add sub add daa push cmc in add (bad) clc or (bad) int add xor pop mov xorl (bad) mov subl add fildll push (bad) (bad) (bad) push or mov adc push pushf outsb lods test or or mov sub jbe add (bad) lcall jbe (bad) mov loop lret (bad) (bad) (bad) fcomip jecxz orb push adc imul inc adc imul xchg iret adc rclb mov lock or xchg dec push gs adc lcall pop jo and cli (bad) xchg jge jle push out cmp mov mov jbe clc dec dec xorb (bad) (bad) (bad) dec dec cmpsl xchg cmpl sbb mov xchg pop sarb sti and inc pop loopne inc mul and push dec clc mov imul sti mov xchg mov cli popf lods aas das mov (bad) (bad) mov xor shr popa cmp push pushf vmovsd add (bad) (bad) dec push add add sti add xchg sbb mov inc call adc sbb ljmp incb insl adc test cmp mov (bad) call adc (bad) or in cmp loope and shl cli (bad) (bad) inc nop and aad lods jo in enter push ljmp pop mov call pop scas imul mov cmpsb sbbl xor (bad) cmp lods sbb shlb (bad) (bad) call mov aad fmul cld mov sbb pop push sbb das loopne (bad) (bad) call pop cwtl add ljmp pop cmp mov sub insb dec xchg ljmp xchg cmp mov mov xchg dec mov cld leave push jle (bad) (bad) pushl xchg lds push mov adc sub or loope and mov sbb mov (bad) popf xchg (bad) incl sahf (bad) fnsave fnstenv push sar lock cmp or rclb pop jnp (bad) ljmp repnz rol (bad) mov sub sub sbb insl or pop mov ret adc sbb cmp (bad) in fdivp test fildll xchg nop ficomp and into (bad) (bad) (bad) call dec xchg loopne out das clc push inc popa fwait cmp stos (bad) (bad) in es or (bad) xchg sub push fsubs push stos nop (bad) push or (bad) (bad) jg cs add stc xchg add dec rol adc loopne pop mov lds or jle sub inc jge outsb jno cmp das add jb dec ss (bad) mov inc lea pop fwait in inc xor mov mov lret stos (bad) (bad) jmp jmpw jg push jge xchg cmpsl inc mov add cli lcall mov dec jb pop adc iret mov inc sbb ljmp push lret push out mov lods adc packssdw xlat lret nop inc fdivr ljmp daa xchg mov (bad) mov fidivr cmpsb pop jo fprem test jg fcomip sbb or adc movsb mov cmpsb idiv (bad) (bad) incl repnz popf sub dec lock cld jne mov mov call mov imul sbbb repz sar (bad) pushl stos (bad) or fwait mov xor aam add and movsb adc popa mov (bad) (bad) (bad) jmp pop mov and xchg andb hlt test push add repz outsb ljmp mov jo stos xchg js aam inc adc mov (bad) icebp (bad) pushl loope imul ret jns iret clc mov into in in jp movb or cmp jne mov mov and loopne cmp ljmp push lcall mov in ret outsb popa mov inc sbb repz dec stc ss outsb mov or mov xchg sbb sbb pop hlt (bad) pushl inc sub push (bad) cmp movsl and scas mov sbb push mov dec cmp daa cmp mov mov xor jl (bad) out push test imul xor incl cmpsl iret dec hlt loope jb (bad) ljmp (bad) jg aam sub in mov popf jae mov inc jmp sub dec xlat js insb std add xchg lahf sbb sub fcmovb (bad) jg outsl jb xor mov mov sbb imul cmp mov cld hlt shr sub jb aaa sbb fcomps pop testb push cld (bad) (bad) dec add or cs mov xor lea fdivl div (bad) (bad) fisttp or mov rorb lods dec pop add add jns mov dec mov enter addb negl (bad) int in mov sti (bad) inc mov cmp mov lock ljmp pusha aam je pop and jne bound dec mov rol fs bnd notl inc fldt ret out pop and jmp or fs (bad) (bad) js popa lods or leave push xchg jg jnp fmuls (bad) jg fild xchg jno pop pop pop icebp es jno ja insl mov (bad) (bad) (bad) jmp cld mov sbb adc add stos or pop sahf push jnp gs lcall lret mov pop adc das iret mov (bad) (bad) (bad) pushl adc add add test in xor arpl and outsb dec sub bound fwait cld in (bad) (bad) (bad) (bad) mov shrb aad int3 jns test adc std mov pop cmp decl out push (bad) xor add inc je adc push int3 jmp enter (bad) push cs dec scas in pushl pop mov test dec ficoml dec xor mov push mov pop sub incl adc and repnz decl mov pop or lcall dec nop cli loopne ficoml jns inc push and pop (bad) jmp jg cs pusha and sbb out mov ljmp jmp in lea out fwait clc sbb sbb arpl cmp mov fcomi (bad) fcomip dec les pop cmp fisttpll pop rclb jle clc loop ljmp sbb jl ret jno jmp cmp jne pop sar jno mov daa loopne inc push mov (bad) (bad) (bad) pushl ret cmp mov nop dec jmp stos test lret stos xor in aaa (bad) fsubs pushl dec jno cmp jbe push out fisubrl int3 out cli (bad) dec jnp xor sbb repz lods pop bswap enter clc mov jp xor (bad) (bad) mov jecxz jg mov push leave popa jae (bad) (bad) (bad) fcomip dec push in dec (bad) mov xor pushf and aam cmpl inc (bad) (bad) mov or inc mov addr16 jp imul xchg and (bad) jmp push addl lret xchg jbe push inc fs jle std (bad) (bad) ljmp rcrb movsb mov inc stos inc xlat ljmp das adc pop scas (bad) (bad) call in cmp pop pop pop and xchg mov mov mov nop xchg out push sarl cmp pop xchg sahf adc sbb sbb mov cmp add ja pushf sbb lret sar adc leave jns movsb imul push add adc (bad) push jae jecxz scas mov mov (bad) sub inc aad jmp test pusha movb pop add imul dec cmp jmp dec add (bad) dec mov call add mov xchg cmp lcall sub ret cmc jecxz jmp cli cmc cs (bad) call je outsl inc xchg in jge into lret and in movsb inc data16 lahf pop test lods (bad) (bad) lcall xor pushf mov pushf or mov pop repnz popf xchg (bad) (bad) out cmp mov jbe jp mov mov sti cmpsb mov add and in push jmp and mov jmp push xchg push push xchg fsubrl fstps add jg repz ja sahf push cwtl and mov pusha inc (bad) (bad) mov adc insb push add test adc fbld loope mov pop or (bad) fbld out lods xlat jne test jne mov cltd sub repnz (bad) (bad) (bad) fiadd mov popf xchg mov std mov ss cmp (bad) (bad) (bad) (bad) mov out lahf adc or xorl into sub jne daa lcall bound test add fadds (bad) decl sbb pop pop jno inc mov aaa add sub rorl ret mov add cld cmp add std stos lcall cmc mov stos fdivs gs fildll lahf in add sahf pop loope add lea adc mov fnstsw cs xor jge out imul push lcall adc out popf dec jnp (bad) xor lahf loop (bad) (bad) (bad) jg mov jmp cs mov push in addr16 ljmp lods pop xchg stos xchg cmp fdivl pop push fs inc push cmp test sar or sbb pop jecxz dec sbb mov mov jp popf sbb or icebp call xchg inc andb dec pop mov cmp sub test call sub adc shlb call fwait insb add and mov dec call inc push cli movsl pusha and xchg add ljmp add cmp push xchg or test jmp (bad) (bad) inc sub xchg pop mov push pop fwait mov mov or dec loopne inc fistl or add sahf and nop js mov (bad) (bad) pushl xor cmpsb or (bad) iret (bad) xor jge sbb sbb adc adc jg decl int (bad) sbb je pop int3 mov stos inc mov (bad) (bad) incl insb rcrb inc test sbb sub outsb sahf push rclb ljmp adcb mov mov jae pushl sbb cmpsl push (bad) (bad) (bad) jg out cmpsb (bad) mov dec and in enter pop pusha roll iret insl call pushl out out add outsl sti dec sub cltd leave sarb pop jmp pop (bad) je (bad) lcall cmp int loopne and les push push inc dec (bad) (bad) (bad) (bad) cmp fiadd sub iret push or sbb lea repnz mov (bad) (bad) ljmp sub lret les sbb cmpsl sbb sbb xchg jo push push add call test jno jle aad stos sbb mov icebp (bad) (bad) call mov adc cld testl mov std (bad) (bad) fbstp mov jne mov or sarl jge jbe ds and push int add (bad) mov jl cmp aam push xchg daa sarl outsl pop loop ljmp add xchg jae cmp jmp sub adc push ret mov into push xor idivl dec lea inc pop mov sahf stos out insb inc push push or fldln2 mov div cmp mov (bad) (bad) jmp xor jl lret cmp in pop xor aam or in aas push mov in (bad) or push and mov pusha adc push rorl out jne and adc (bad) hlt fildll rolb inc pusha cmp jbe data16 aas jp (bad) (bad) call fimul std mov sub mov xor sbb scas mov (bad) ljmp xchg push (bad) fsubl inc jp xor sub mov nop hlt (bad) ljmp out scas lret cmp inc pop data16 pop dec jle push sub loope (bad) call fnop imul push ja xlat add inc daa pop dec push out inc jmp dec xor push lcall pushl cmp imul (bad) inc jns dec sub or dec mov icebp (bad) incl enter loop aam clc dec cmp out gs mov xor mov sbb add fnsave cmp add cmp sbb jae xchg and add adc leave pusha sbb (bad) (bad) jg (bad) sub (bad) in imul loope dec jne xchg imul inc or inc mov fs cmp das mov xor jo movb lcall fs sub loopne sarb adc mov add mov std (bad) dec je mov mov and add xor fimull test adc popa dec sbb (bad) (bad) mov movsb pop mov movsl pop out (bad) jne mov aas test test xchg nop icebp inc mov fsubr (bad) ret push rolb push leave jae lcall test aam out adc ss dec sti pop xchg (bad) out adc lahf jae fistp popa pop cltd outsb sub (bad) (bad) (bad) aas imul incb push pop pop arpl pushw (bad) mov cmc in and or adc mov (bad) hlt jnp mov out pop cs jg sbb xor (bad) sbb sar push push and push xchg aas leave add aad lock into pop clc (bad) (bad) ljmp js pop jb or or inc (bad) std jl pop jnp (bad) cld (bad) (bad) ljmp out mov mov inc (bad) push inc push out jmp push or pop (bad) (bad) (bad) jmp (bad) push dec add (bad) add divl cmp sahf sbb test jns gs pop std (bad) call or xchg rclb mov fmulp pusha lds ljmp bound enter call xor xor decl cmc mov fcompl mov or jl pop lock xlat xchg arpl (bad) (bad) in cmpsb clc cmp or arpl or sahf mov lds mov mov xchg lahf dec pusha pop push sub mov cli ffreep test ljmp ret inc jno pushf mov mov (bad) fs mov xor jo cltd mov nop push fs xlat push call push insb cmp roll ret sarb xchg repnz cmp xchg push inc inc int3 repz rorb xchg add out jae xchg inc mov aad add or (bad) pushl popf xor ror aaa (bad) sti rdmsr js and dec mov pop into sti xor pop ret mov pushl cmp daa dec scas mov ss lea lcall movsb test test enter mov add mov and rclb pushf imul jno sbb sub xchg pop and test (bad) call (bad) ljmp jnp (bad) decl jp sub adc js add cmovge andl cmp pop (bad) (bad) (bad) jmp lds cmp sub add jbe,pt daa inc xor (bad) decl jg sub adc xchg pop push (bad) (bad) fistpll dec mov rorb and mov adc lods (bad) jno xor cli jmp xchg inc or inc ja sub (bad) (bad) (bad) lcall xor push shll jb cmp xchg dec mov (bad) (bad) (bad) jg (bad) rolb pop mov movsl jae push and out mov addr16 mov (bad) (bad) push mov push sub aam pushf mov movntq jb inc ret or ljmp adc inc dec nop push xor (bad) (bad) (bad) call gs dec jp jge adc sti out cmp shl sarl fucomp test mov loopne bound cli jp xor stos scas cmp push cwtl xor out inc (bad) jp (bad) (bad) ljmp xor icebp push scas jmp push loope mov inc inc dec clc (bad) (bad) fbld mov xchg shll adc lret push (bad) (bad) (bad) incl lods jge and xchg xchg iret out mov push sub pusha xchg mov jge xchg pop jecxz (bad) (bad) jmp stos and loop into (bad) jmp sbb mov cmp cld add and incl jnp mov out mov addr16 decl push jb mov shr xchg loop cli pushf xchg add or jmp and ds xchg cwtl clc insl mov pop cmc incl push push aaa adc sbb repz ficomp push dec (bad) (bad) (bad) (bad) (bad) mov addl out push ret mov (bad) nop pop iret push or lea push cmpsl pop out push (bad) (bad) mov fsubs cmp cmp push mov inc jnp sbb mov incl adc sbb mov mov repnz pop cmp negl dec stos (bad) (bad) (bad) ljmp je ret rolb pop pop fsub fabs flds pop sbbl push loop mov sub xchg push addr16 fldenv add adcl (bad) decl mov out ret cmp sub inc mov nop call jne (bad) jbe test mov out nop mov xor inc test mov popa xor jl mov pop enter lcall (bad) xchg sub jne inc and shrb push lock or (bad) jne test and mov sub movsb push lea pop out xchg outsl adc test int3 sahf mov iret out test mov incl mov or mov mov into mov call cmc cwtl out sbb loop (bad) (bad) lcall into test insl in xchg int3 or jp fcomp xchg dec sbb mov stos (bad) incl mov push lods rclb adc adc adc adc ljmp fbld popf and lods mov push mov add lret mov add gs std es ss test js (bad) je std adc (bad) (bad) (bad) jmp lret sub mov push aam xchg scas cltd ja and test addr16 mov jl (bad) (bad) (bad) jmp movsl popf ja adc mov dec push ja lret dec aaa mov dec inc xchg adcl (bad) decl das std sub fisubr jle xor pusha (bad) dec ja mov (bad) (bad) (bad) decl test pop mov and mov jg (bad) jne idivl les inc cmp sbb and sbb push or pop push xchg dec in clc add call hlt add xchg pop sbb decb insl sbb (bad) (bad) call loop divl jp leave mov out ss jge js cld pop scas mov fisubrl adc cmp cmp inc push or (bad) (bad) (bad) pushl push test inc sahf movswl int jecxz lret cmpsb call movsb (bad) incl sbb cmpsb roll dec inc jno xlat xchg adc in jbe (bad) (bad) call mov and movsl fs inc jno cmpsl xor cwtl dec pop sub xorl push ljmp fcompl adc loope pop fstl push stos movsb fcomip mov imulb lret icebp (bad) sub inc (bad) ljmp ret in (bad) bound cmp loopne ljmp mov mov sub pop lret inc (bad) jbe lret nop xchg iret push push cld add or ja push sti mov (bad) (bad) incl loope orl test fistpl repnz sub ds (bad) call dec jno mov mov add jmp addr16 cmp dec clc (bad) mov rolb pop mov mov add mov mov push (bad) inc adc idivb ret aaa jo mov fistl pushl (bad) ret in adc (bad) or mov pop adc push inc ds movsl inc lret (bad) mov push lods lods aad cltd mov push aaa push (bad) fwait or icebp lock pop iret fbld sbb xchg (bad) (bad) (bad) cmp xor je jp mov fcmovbe jle insb add test (bad) (bad) jmp ds push scas lcall mov jno cmpsb and or dec pusha xor ja (bad) (bad) (bad) call mov pop test and insl ss mov mov and xchg push mov pushf cmpl lahf cmp out adc and adc lock mov imul jae mov es loopne (bad) (bad) jmp fdivrl sub mov xchg xor xor lods cmp add add mov pushl pop shl adc mov js into stc imul or xor das and adc call mov push mov popa add add (bad) jg sub (bad) sahf insb dec aas push jb pusha jbe das push cmc push xchg jmp and mov hlt dec lcall inc jp xchg xor push clc pop inc cmp outsb xlat jmp call lock xchg pusha aam xchg push aaa lahf scas ss decl lea or iret sbb aam pop nop (bad) cmp loope ljmp shl mov push ja push push loope shlb jg jl (bad) call loopne xor stos insl push outsl repnz cmp popa sub pop mov mov inc repz clc mov sbb cld mov ds dec inc pop (bad) out xor mov mov (bad) popa push incb push test mov aaa mov imulb cmpsl cmp (bad) jg pop jns mov movsb jns sbb push in dec incb ljmp xchg test and jmp lea cwtl (bad) (bad) (bad) jmp in test dec xor stc xor std push sub outsb inc jmp loope sar push and adc add out pop xchg ret mov or into scas (bad) (bad) (bad) jmp sti inc push fxch cmp sub cmpsl inc andb sbb inc inc adc (bad) (bad) sub mov pop test mov jp and leave inc xor addr16 mov loope mov (bad) decl call mov fldl (bad) call and lcall aam mov dec outsb mov pop outsb xor clc mov (bad) (bad) (bad) incl movsb xor mov dec dec enter xchg aaa ds adc cli push xchg xchg cli xchg jmp loopne ds mov ss cs decl inc nop std jne add jmp (bad) fstpt sub aam mov fld (bad) (bad) jmp lods sbbl sbb nop xchg cmp cld sar (bad) (bad) call dec in sub (bad) mov jno aas ljmp jecxz or das popf lcall pushf shl adc aaa rcr into pop mov push jne cld arpl std cmp rorl add mov icebp mov mov dec imul push push sahf scas outsl fucomip xchg icebp outsl sub jle int call cld ljmp rcl or push push adc mov push cs lahf movl mov mov pop inc inc xor scas or scas (bad) mov data16 xchg sub add mov sbbl imul insb (bad) (bad) (bad) decl shl xchg jmp and xor pusha loope ja xor xlat (bad) (bad) push scas (bad) adc and out mov cmp stos lock (bad) jg mov xchg outsb daa push stos in out inc bound pop iret sbb ret add out jns push push cli mov movsb sahf pop lret (bad) mov dec adc dec jge adc and xchg out add dec sub (bad) push addr16 enter jle (bad) leave pushf inc scas idivb stos test repz cmp or scas (bad) xor outsl (bad) (bad) ljmp in fnstcw pushf push xor (bad) hlt dec fidivr rcll mov loop pusha int3 ds mov addl fs fdivrl mov enter sbb movb (bad) stos out mov jl,pn (bad) (bad) jg and xchg fsubrl lock xchg pop jns fimul (bad) (bad) call test mov mov mov movsl mov std scas clc sbb xchg ja outsl jg out popf iret adc (bad) (bad) (bad) cmp xchg cmp pop dec pop push out das mov push add out inc and hlt pushl (bad) push rcll sbb test and pop and xchg cltd pop cmp sub imul pop jae (bad) in inc and loop and sbb jp sbb fwait dec rol cmc (bad) loop jne insl add inc cmp lods (bad) or jo xchg or inc sahf lods dec xchg and jnp fisubr pushl add xorb mov xchg int3 inc dec movsl (bad) xor jmp dec push movsl dec lods adc xor lcall jmp mov sub fcoml or pop hlt fcmovb sbb cmp pop repnz mov add (bad) (bad) lcall dec stos dec or lcall jp pushf pop sbb xchg dec (bad) dec loop imull fs (bad) fcomip (bad) out mov lahf fisttpll mov pop cmp cmc and cmc fnstcw in (bad) (bad) decl in sub xor movsb mov pop cmp fstpt repnz test adc cmp jno call leave mov int3 lcall jle mov jg inc ffreep inc fisttpll xchg daa jb cmp loop je fwait ret (bad) (bad) jg cmpl push popf mov sbb pop pop xchg or jb pop sub in jb int3 es sub mov mov bound push pop sub (bad) (bad) (bad) (bad) dec mov push aam sbb mov adc cmc cli push sub aas leave add (bad) (bad) (bad) decl pop cld fsubp inc push xor push mov loop pop pusha stos rcl mov xchg mov lcall sub je stos cmc int mov movsb (bad) inc push push and xchg into sbb scas decl icebp sbb xor mov and push (bad) (bad) (bad) ljmp fdivl adc aam mov dec stc push push push jbe leave std outsb mov jmp cmp sub fwait dec sbb cli (bad) xchg and into pushf rorb das test ds stos hlt aam xchg and cmp sub (bad) incl or loope xchg mov in aaa or jmp jl sbb (bad) (bad) jg pop sbb inc jl mov jne stc mov rcrb adc mov mov push mov sbb fdivl dec cmp (bad) (bad) ljmp xor cltd popf mov or pop and xchg cmpsb mov xor daa fs ljmp enter add call and xchg test push (bad) xchg stc outsl sbb mov (bad) out mov xor out inc inc inc sub enter and (bad) (bad) (bad) mov lds add xor fs pop xchg stos outsb dec mov mov mov ljmp cmc mov xlat fimull imul loopne or fwait enter pop push repnz insb jno daa xlat xchg out jp test push lahf cmp andl ret pusha (bad) mov add (bad) cld mov inc jl (bad) jmp xchg jecxz nop neg jns dec outsl pop cmovb scas (bad) fdivl incl je lock gs out fstl xchg cmc fiadd inc ljmp push cli push test decb push jp push cld (bad) (bad) decl add movsl push lahf mov jge inc jne adc inc shll add loop mov xchg pusha nop pop cmp cmp (bad) decl test sbb mov fmulp cmp fnstsw enter cmp repnz (bad) (bad) decl mov xlat xchg mov jno mov mov jecxz ljmp lcall xor int dec jl xchg push ds adc btrl mov mov cli (bad) (bad) mov insl call xor (bad) iret inc fstps or push cmp fwait (bad) data16 icebp pop pop frstor mov (bad) pushl aam sub inc fmuls inc sbb add icebp (bad) call popf jle adc (bad) jg (bad) cld xchg add push outsb dec mov iret xchg lahf mov addr16 (bad) (bad) inc pop mov fs sub (bad) das jbe mul pop mov (bad) (bad) lods cld fs iret mov gs xor out cmp (bad) (bad) call syscall movsl (bad) jne mov cmc mov sub adc cmc ljmp and mov xchg mov mov sub adc mov xor (bad) adc adc (bad) aas arpl (bad) (bad) (bad) jp in scas in out arpl sti outsl xchg and xor adc ss hlt lods jmp repz imul or xor or adc sbb in adc daa mov cmc sahf adc xor (bad) pop jl mov clc out jae ljmp insb dec pop mov gs mov in dec loop loopne js (bad) jmp aad cmp imul jne sbb mov aam cltd and and push popf mov mov pop sbb and and sar in and push cmp push fist fdivrs decb decl or and mov pop adc lods and fist fs xor imul movsb std mov ret pop jno or or fnstenv cmp push sarb and iret jmp call inc inc cli ficompl pop test test stos xor adc call rcrl inc adc sbb xor mov cli out js adc rorl (bad) (bad) (bad) incl jle cmp push or out jae sub shrb scas jmp dec xchg xchg idiv (bad) (bad) (bad) mov mov (bad) (bad) mov and fs pop fisubrl sar (bad) mov pop inc sub or lods stos jmp sub sub cli (bad) mov cltd pop movsb popf repz cli fucomp dec or mov sub clc outsb sbbb inc mov sbb cmc ss addr16 or pop loope jbe lods lock (bad) (bad) (bad) call (bad) rorb pop adc in shl cltd fildl outsl cmp stos jo sarb inc xchg call les sarb mov xor pop (bad) jmp jecxz xchg jecxz mov aad xchg pop (bad) (bad) mov cmpsb (bad) dec xorl xchg adc inc and lcall adc daa outsl dec add push ficoml pushf mov push dec dec repnz scas jo (bad) (bad) jg mov gs decb aad mov cmp mov ja ret mov jecxz lock je mov add lock jecxz pushl cli insb xor xchg mov hlt cmp jge xchg nop inc lcall mov hlt pop fidivr cld flds sbb mov cli (bad) (bad) cmp mov lcall pop clc jl sar xchg and sahf push out adc into jl xchg hlt outsl cli jmp in mov pop mov es (bad) int lea (bad) (bad) (bad) fisttp call mov (bad) fmuls in cmp repnz dec or cld test orl adc cmp xchg insl sbb push dec lcall pop negb mov pushf data16 sub jmp aad mov or jo or lret loopne incl mov es push push aam add push mov sub adc inc daa cmc xor push xchg xchg sbb aaa jae in jle lret xchg (bad) (bad) (bad) jmp mov inc lea jl mov mov cli push and (bad) (bad) (bad) inc push lea sbb mov mov xchg bound pusha enter xor (bad) (bad) (bad) pushl cmp lods insb je repnz test enter sti mov jae cli and (bad) (bad) decl add stos inc dec lods imul pop imul outsl xor out out push stos (bad) lahf loopne (bad) aas scas cli jg stos mov pushf cmp lods cli ret sub jg pop ret (bad) iret lods sahf jne sbb cltd mov and pop or aas pop jo outsb xor incl test adc es pop mov dec push aad sbb decl or insl lea adc adc call (bad) frstor rcrb xchg rorb pop pop and jmp out mov sbb (bad) (bad) aas cmp cmpl sub jns mov jge mov add or (bad) lcall sub mov aas xchg mov es shll into mov pop jle imul xchg bound clc or loope cmp adc xor incl adc sbb sti loopne pop ljmp add out xchg mov adc jle xchg es (bad) (bad) call jb jle pop jmp loop jp in enter outsb or (bad) (bad) (bad) pushl dec or rcll cmp add push sbb sub icebp ja sbb cld jmp push pop pop outsb sbb out aad out push (bad) (bad) mov xor adc dec cmp or jnp stos shll add fbld orb mov add mov iret fildll outsl xor call pop ja dec xor iret ljmp add pop mov cwtl lods mov hlt push push cld mov push iret lock repz outsl jnp push push mov cmp outsb mov cld (bad) (bad) (bad) jmp subb xor mov push xorl shr mov (bad) ljmp sub push fsubs adc lcall push int fadds sti movsb mov pushf sub dec sbb (bad) incl and ds adc mov or mov lock test adc xchg lahf in arpl leave (bad) (bad) (bad) (bad) jp clc fistl add mov mov loop xor psubq in enter xor sbb popa in push bound mov and jmp and and xchg cmp (bad) jg xchg aam int3 jno pusha dec aam dec aam push sti insb dec inc lret mov iret fsubrl (bad) decl jne repz loope cld push dec loopne mov cli sahf sub cli stos dec into out or cmp mov push and push aas jo (bad) (bad) (bad) incl nop imul je cs daa popa (bad) fbld dec jno mov and incl nop pop enter jmp insl stos sub push shr jl cmp ficompl out and movsl and or push cmpb lcall call jno ja mov (bad) ljmp xchg and add outsl jne xlat add outsb pop (bad) mov jnp xor and dec (bad) (bad) lcall jo mov mov bound cmp mov test (bad) jge xlat outsl xchg std xor jmp (bad) call repnz mov movsl xlat push lock int3 jmp dec mov (bad) cwtl insb mov xchg sbb out adc ret sub mov (bad) in and xchg aas and mov lret add (bad) (bad) jp insl add hlt inc aaa mov scas cmp les pop clc fdivr sarb nop clc pushl and xor adc push xchg std (bad) shrl cwtl xchg xchg dec popa adc jecxz pushl rolb mov push pop sbb in lret test (bad) (bad) incl or mov rcrb sarb ljmp cmp les (bad) (bad) (bad) call fnstcw pop push push cwtl fcompl adc push push jne mov sub std mov repz adc mov cli add mov movups ja xor xor aad popa dec call shrl fstps frstor cmpsl xchg adc test icebp (bad) scas cwtl adc adc pop or pop test (bad) ljmp mov sub movsb out (bad) mov cld outsl xor xchg sbb lret jp pop pusha xor mov mov mov sub enter add fmuls popa es (bad) pushl cmp cwtl sbb je sbb and sub fsubr icebp lcall (bad) add mov sub add stos (bad) lcall xchg (bad) add fcoms push and (bad) cmp lea xor mov dec adc pushf lret sub inc xor sbb sub lea xchg jp jbe adc xchg test (bad) (bad) decl push mov mov (bad) (bad) in dec jbe stos gs popf cmp ret movsbl js and (bad) jmp or mov xchg adc out push (bad) (bad) (bad) call inc fsubrs mov sub out xchg std lods aad je mov mov dec movb fsubrl call push mov xchg loopne ja xchg xorl ss and dec in xor push std (bad) insb pop outsb arpl sbb or lea flds nop (bad) (bad) mov mov or mov xor lcall mov push xchg or inc into cmp sbb fnstsw lcall pop mov jmp pushw adc or xlat outsl mov mov loop mov push cld fcmovbe sub jp ds loop mov push mov ret outsl (bad) and inc add jbe xchg pusha idivb repnz (bad) (bad) (bad) decl pop idivl test clc inc lods xchg cli pop xor (bad) in fcompp loop cmpsl fidivrl mov in add xchg dec adc lea (bad) jmp scas movsb cmp aad mov xor pop imul jg or (bad) cmp sbb add and mov lcall pop push jb sti push xorl adc sbb adc inc dec xor and mov pushf mov in add mov cmp lcall add loop cmp lock (bad) (bad) decl xchg cmpsl lds call hlt dec fsts lods fwait jae test shl inc fadds push sub movb push jmp sarl jnp addl cmpsl adc test (bad) (bad) (bad) call int pushf push ficoml stos and pop xor mov mov int and push inc push push jg pushl cld stos pop mov imul repz inc sub jg pushl pop cli vmovhpd pushf xchg xchg xchg pop adc cmp gs mov leave xor fisttp push (bad) jmp aam mov aam imul cli cmp xchg adc test insb mov (bad) fidivl sar ljmp pop jns adc mov mov push pop mov stos cmpsb dec jo cmp cltd fdivs mov addr16 int3 mov add insl in pop insb (bad) mov cwtl or pop dec mov inc adcb mul out lcall sub (bad) (bad) (bad) lcall movaps fstpl outsb xor mov stos lods dec fmul mov and idiv in lcall (bad) sbb push jmp and mov in dec lods (bad) (bad) lcall bound and insb lods aas add sbb lods jmp sbb lret mov and xor dec cmp or clc cs mov sbb je test cltd (bad) jg push mov or push (bad) mov sbb iret scas pop imul hlt dec mov sahf daa mov (bad) (bad) call hlt adc div mull sbb add ret xchg ffree ror mov xchg sbb xlat pop mov cli adc int lods sub mov test aas sub das (bad) cmc adc std and ja inc (bad) jo mov mov (bad) (bad) decl call mov xlat inc jnp,pn out (bad) fsts ja scas fidiv pop data16 (bad) ljmp jp push pop enter pop nop decb das (bad) jp sar (bad) (bad) jmp and cld test imul sub idivl sub loope in or sar dec mov push mov cltd dec aas xor fwait and ja inc mov loopne lds ljmp test adc fnstenv add xor aas or outsb add dec dec sar shufps (bad) rcl aas add (bad) fcomip sbbl (bad) (bad) pop push cmc aaa or push (bad) (bad) (bad) inc and das or cmc hlt sarl push fsubrl and dec adc das es (bad) jg inc push and aas ret cmpxchg mov sbb pusha cwtl gs fildll pop pushl add mov fprem scas adc jbe inc sbb pop dec shlb hlt nop mov mov cs jmp cmp cld pop call push xor push sub jg inc (bad) faddl xchg in lret add mov mov cmpb int3 cmc (bad) (bad) (bad) fstl jle sti jp sub or dec orb stc mov jg sub (bad) ljmp jno mov xchg xor mov xchg add int3 sbb adc out movsb test das ss iret ror or ljmp aad in mov push adc lock and jg push and in push xchg jmp add out push jb push loopne (bad) fist mov std (bad) pop (bad) imul and ds imul dec jp (bad) mov sbb cwtl les push mov popf insb jle jmp pop add push mov test fsubrl call in mov adc pop cld jp dec scas jge or je cmp or (bad) (bad) (bad) (bad) mov into mov and ret lcall stos xor sub mov pop mov ljmp icebp inc test sub hlt popa push adc fldln2 pop inc lret dec jmp aas push es mov andb (bad) lock roll loop mov outsb xchg pop add es xchg xor sub jb inc xor test xor pop fmul imul inc inc mov ficoml std (bad) pushl sbb push stc mov or adc pop jle push (bad) (bad) pushl add sbb insl lret ljmp into jb out sbb inc cmc push int3 leave (bad) (bad) (bad) incl mov int3 push test out fdivrp movsl add or out sbb xor fwait mov add pop mov cmp jmp jmp cmp ret (bad) (bad) (bad) call mov mov cli push movsb or (bad) in mov xorl aad mov (bad) (bad) (bad) (bad) fnsave xor iret ja dec sbb jl loope and cmp rclb movsb lock in add inc dec mov aaa mov sti push mov mov ljmp mov inc lods (bad) (bad) (bad) incl test inc je adc sahf add pusha aam cmpsl cmp imulb mov jo (bad) ss add decl mov arpl and imul add daa fwait (bad) je (bad) (bad) (bad) jmp adcb and je aam outsl mov adc inc mov xchg mov add jmp gs (bad) lcall xchg lcall mov lea mov xchg or mov inc push xor (bad) (bad) (bad) out mov sbb lahf cmp test adc out jns xor stos clc or sub cld mov xor (bad) xchg repnz mov pop sub data16 fcoml cwtl xor (bad) (bad) incl push push sbb scas cmpsb mov mov xchg adc aam icebp (bad) call sub add sbb push xchg mov xlat jge (bad) sub (bad) (bad) decl dec popa sbbb mov push pusha ljmp fstpt fisttpll dec aas les push sbb jmp mov ficomp rol sub (bad) sar (bad) call jecxz call out push jns jecxz insl out or fwait inc push mov mov (bad) decl inc imulb pop mov call pop std iret bound jle xchg and push fnstsw mov dec add das jne movsb adc xchg ja les test mov inc push test xchg orl push mov jae sub and push inc mov cmp pmaxub rclb xchg jecxz fldt mov bound out lret mov jno dec xor and movsl mov xchg (bad) xor scas sub imul cmp mov mov add mov shlb sar (bad) jmp clc sub aad dec fsub mov xlat pushf xchg mov pop ds mov push cld jg and repz (bad) mov jnp add ret and loope jp loop xchg incb popa push and lds push out sbb lods mov (bad) (bad) jg les cltd bswap dec (bad) dec outsl dec xchg mov test int jge es aaa dec rcl pop sbb or ja (bad) incl mov mov lret mov psrlw fbstp jl push cmp mov inc inc outsl call add sbb int jae pop jmp and (bad) (bad) jg nop cltd fistpl or test je sbb cmpsb in (bad) sti cmp sbb jmp push or movsl cmpsl mov ss jmp and sbb sub cmp sbb mov movsl int3 pop xchg int adc bound lret out mov scas xchg cmc jne jmp inc cltd xchg cwtl inc daa popa push aad (bad) decl xchg xor mov dec push out mov data16 jg (bad) fnsave push mov jl xor addl (bad) (bad) (bad) in fstps dec sub push jnp aam lret xor mov shrl loop mov mov lock (bad) outsl rcr stos mov adc call mov lds or cld (bad) (bad) dec xor inc enter cmp bound and sub popa jle dec call sar cld call arpl sbb mov out stos outsb daa (bad) mov push nop movsb (bad) fld cltd sbb sti add dec (bad) incl cli push inc test jno add jg jmp (bad) (bad) (bad) ljmp or mov push stos mov popf sbb xchg pop in jl xor aaa enter pop fs mov loope out inc aam dec xor push idivl cmc (bad) (bad) (bad) incl dec and xor push sbb and cmp repnz call dec ljmp jl mov dec inc cld scas jo mov pushl push fs sbb adc adc fcomip jg pop xchg sahf push jg ljmp add pushl ja (bad) (bad) (bad) push ror lds fdivl (bad) test sub cli fcmovb cmpsl loopne xchg sbb (bad) (bad) (bad) (bad) ljmp fimul jle mov and out adc xor or das sbb (bad) (bad) ljmp out fldl dec push jl or sahf push dec or sub out jl xchg adc (bad) (bad) (bad) ljmp ds sub outsb mov cwtl cmc aas xor repnz (bad) mov (bad) (bad) (bad) decl sbb pop lcall clc insb sub sarb adc pushf xlat jb pop out rcrb add sbb add (bad) mov movsl iret sub fidiv sub jmp incl pusha pop or fbld nop cmp xchg (bad) xchg and and stc sbb bound (bad) call sub adc jb xchg cmpsb push add gs out xchg std pop jb daa dec std lcall pop enter sbb cmp std pushl arpl ljmp call xchg and fnsave mov cs lods lock in (bad) (bad) mov ljmp lret push xor fimull scas or (bad) decl (bad) xor fidivl mov push xchg gs jge push xor bound lods pushl pop cli les out (bad) dec ds inc xchg aaa fstpl scas popf insb jmp orl (bad) (bad) (bad) (bad) fildll aaa lods add jnp mov sub sub sarb aas jne cmpsb imul or push test cs sbb (bad) (bad) incl mov movsl in fstpt out enter sti loope cld or and (bad) push dec loope pop or adc push sahf pop into (bad) or lea decl xchg lods (bad) lods inc jmp movsb ljmp xchg hlt scas cli (bad) pushl notb xchg mov insl imul lret xchg scas repnz es (bad) (bad) (bad) ljmp insb aad xchg sarl arpl jo dec lret (bad) loope or adc (bad) (bad) (bad) ljmp mov jl (bad) enter pusha cmpsl outsb jne jb ret jp or (bad) aas ror je sub call int3 mov sahf mov jo lock push xchg stos push xlat (bad) (bad) (bad) ljmp pushf stos xorb pop loope xchg out push in daa push (bad) (bad) push popl cmp lret push fcmovbe (bad) mulb add add add adc lcall (bad) lcall dec (bad) mov and fdivl jbe cmp sbb incl mov add (bad) addr16 (bad) incl orl push push pop aas in mov push std test and adc push jle mov cltd mov in push in pop (bad) xor jg push scas push dec test mov es ds (bad) (bad) (bad) mov test aam lret test loop xchg and adc fidivrl jg (bad) (bad) call add mov jg xor in stos cltd fcompl jge add mov sbb (bad) pop nop fs mov inc cmp jo test cld pop pusha loop xchg cmp insl jns ja jge pop clc (bad) sub hlt inc jae clc pop adc sbb and mov call xchg sbb lods push fdivl pop inc xchg negb decl inc inc mov je test sahf sub or (bad) jmp xchg cmp fnstsw outsl xor ret hlt pusha push icebp (bad) (bad) jmp cmpsl cltd into xchg mov roll addl test jnp in and fcomip (bad) (bad) xchg cwtl popa dec cmc je cmpsb decl xor sbb inc sub mov stc xlat cltd ror push jno ja fdivrs jge sbb fs es pop and (bad) (bad) (bad) jmp popf add inc in fwait cs adc jno (bad) lods cmp into ret scas (bad) (bad) (bad) (bad) js fsubrs and jp or dec (bad) ficom cmp mov jmp jg leave cwtl cmpsb pushf dec cld jae xchg or out ss sarl xor push mov pop push insb push cmp mov (bad) cmp iret sbb adc mov jns xor (bad) test daa jle cmp daa fdivrp (bad) (bad) call adc les ljmp or (bad) push inc xlat or push cmpsl adc adc pushl cld into or dec aad shrb lea jbe push rep jp mov (bad) call iret push add and in xchg js icebp or jne fistp test mov jb scas clc pop pop imul pop aam pop push mov adc dec aam (bad) (bad) (bad) lcall (bad) mov mov adc gs les jae test pop mov in pop rorb imul mov insb xchg xchg loop dec push out (bad) ljmp ret cmp out mov stos xor out mov cmpsb lock dec push fisubr xchg (bad) (bad) inc out fwait dec adc out xchg test scas xchg or inc mov inc pop xchg cmp jg jle push mov scas rcrb mov lret mov (bad) (bad) in movsl or aas int3 loop or (bad) arpl dec lea mov (bad) (bad) (bad) lcall ret push pop cmc ret cmp mov das stos lret pop or sbb sbb int or lock lods xchg jg repz icebp bound rclb jno loopne xchg (bad) or (bad) decl or sub jns cmp cmp stc (bad) (bad) (bad) mov sbb add mov repz scas pop les stos mov (bad) call and add push incb faddl dec jle xor (bad) (bad) (bad) pushl mov in xor mov jno fimul adc xchg jb iret div (bad) roll ljmp cmp push mov sbb mov inc outsb xor lea xchg lret movsb adc scas push (bad) jg mov divb jl (bad) inc jg dec and push (bad) (bad) (bad) incl sbb js cld cmc ficompl push fstl cltd shrl jmp sbb into mov cli and ss sub xchg (bad) (bad) jmp inc into mov ja cmp push mov inc fisubr or leave (bad) (bad) mov jmp push xchg xor cli cmp gs pop lock std xor (bad) xor push int3 add inc lock xor add aas and pop repnz pushl stc sarl insb int3 push ja mov mov mov jp jl int cmp push xchg ja sub add int3 mov mov push and (bad) (bad) lcall or or sub push push ds jae pop mov rcl jp lods outsl clc call mov xor push jo out lcall push cmp jmp les sahf push dec mov sti imul jl mov loop push fucomip ss sbb and nop je inc (bad) jg movsl dec mov mov xor decl out mov cmp mov incl push push xchg mov adc sbb mov jp jp sbbl in dec pop and call fidiv clc lods nop nop lock cld ret xchg jp aas push in cmp in (bad) (bad) inc icebp add aad sarl jb adc out int cmpsl and cmp fildl fist sub xor mov je inc jge inc sub out xchg stos (bad) icebp aam ljmp cmpsl inc xchg pop lods js ja cmc hlt loop call std out outsb mov fstps cmc in out lods (bad) enter and lahf push (bad) (bad) (bad) dec sbb out pop jmp cmp inc (bad) mov ucomiss (bad) (bad) call mov push xchg push pop lods add add out dec lods add and jo cmc fs inc push ljmp scas cmpsb lods stos sbb jno les xchg lcall repnz xchg mov lds mov xor xor lea xchg (bad) inc xchg roll sbb inc aam shl sbbb lods (bad) (bad) call pop push out clc (bad) fstpl popa mov outsl sti adc cmpsb lret addb xchg push sbb adc pusha xchg pop mov (bad) sti mov mov leave pop imulb or dec xchg in dec push (bad) call leave add inc jae,pn andl sar (bad) fistpll inc inc add mov fcoml call jb dec (bad) pushl adc and popf pusha into add sub cwtl sbb test cmp jle add xchg jb sbb movsl (bad) arpl inc (bad) (bad) decl ja pop dec aam push stos test xor add (bad) hlt outsb test xorb cmp jnp mov jmp fdiv mov jo addps (bad) sub sub and inc popa dec adc add mov cmp cltd (bad) ficomp daa dec fwait lock add xor dec dec cli outsl jno test enter (bad) (bad) jg add das nop incb jp push into xchg movsb lods mov (bad) push mov xchg insl lcall add fdivrl sub and call sub mov mov sub jecxz xchg mov ret call movsb loopne bound jb (bad) rcr cmc popf or pop mov adc fdivrl imul mulb (bad) (bad) (bad) frstor jge or jbe jae jle xchg stos leave in ret mov (bad) mov xchg fimull in or popa (bad) jmp pop int mov ja (bad) (bad) in jo mov dec pop fsubr and scas push enter inc cli and dec fldenv leave (bad) (bad) (bad) incl dec std cmpsl push fsubrl addr16 lds dec dec sbb or pop (bad) or cmp rcrl stos or push std lcall mov les sub (bad) sbb cmp sbb xchg cmpsl adc sahf iret mov dec test add in mov mov push xchg push stc cmp fbld sbb and xchg add lahf call decl int3 lret xchg in fwait inc ficom call test (bad) (bad) (bad) incl popa rolb fs jmp push push xchg in jecxz int3 idiv data16 and dec ret imulb (bad) (bad) (bad) mov add orb sahf repnz cs in or (bad) pushl imulb sub gs xchg jnp jp stos add ja in or popf popa dec nop lds popa loope int pop je push loope ja (bad) (bad) (bad) jmp loop lcall lcall jp xor xchg and sub lcall insl bound jge cltd lods and jo popf jmp push sbb adc hlt aaa in fbld mov xchg sbb or decl xchg pushl adc mov je adcl lahf aad cwtl and jge (bad) (bad) (bad) fnstcw xchg and xor mov scas fs cmp sbb call mov std (bad) mov mov jmp pop inc or (bad) (bad) jg mov mov out xchg mov aad sbb neg mov (bad) scas push out xchg mov mov fisttp push int cmp test pop lock mov push and call ljmp aas xor mov or lret mov in aaa jge cmp clc aaa aas mov adc push push hlt jno jne (bad) jg add xchg ja xchg add daa push ljmp (bad) mov (bad) data16 push sahf dec mov cmc aam (bad) (bad) (bad) jg pop orb dec mov xor jg inc add fstpt loope or cmp ljmp fldcw pop adc (bad) fcomps mov je xchg add imul clc out fst dec daa lock lods (bad) out xor xchg stc cmp xchg and fidivrl sbb xchg fxam sahf (bad) fidivl mov pusha mov add push push mov pop mov mov (bad) ljmp pop xchg mov pop out mov ljmp hlt push or sub (bad) push add hlt push (bad) jae xor sub (bad) (bad) mov push in xchg cmp jp xchg jmp xorb mov clc (bad) jmp mov stc mov bound adc cmp ret xchg test mov out (bad) (bad) decl loop loopne sti and aam (bad) pop mov pop in (bad) sti add (bad) (bad) decl jno fbld xor (bad) jns imul ds mov mov shl (bad) (bad) (bad) (bad) in dec jne push loope data16 mov inc xchg push les inc jne add add (bad) (bad) (bad) incl lods cmp jbe pop cmc pop iret mov stos mov insb in popa xchg shll popa test (bad) (bad) fcomip (bad) imul sub jne insb lret shrb movsb dec jmp xchg es push cli das iret call push (bad) mov cmp push sbb or xchg into (bad) (bad) call (bad) mov pop sbb push jl arpl sar mov dec adc inc or mov mov and sbb outsl add je enter inc enter in sbb popf rolb add decb dec inc add incl mov jo or jbe mov stos (bad) cmp adc and and sbb mov push into out test jmp mov lret push add lcall cmp (bad) fcomip push and fs pushf repnz mov add addr16 aas mov (bad) pushl aam add (bad) push cmc js insl aad shr cmpb aas outsb out jnp mov inc ljmp int dec out cmp test push dec movsb jns les mov movsb std mov jge mov pop pop jle pop dec pop js inc sub mov sbb adc inc mov jb cmp jbe or sbb (bad) (bad) (bad) push add lods and popa push aad aad (bad) pusha inc fwait mov add fistpll popf and dec cmpl mov ficompl lds out and mov (bad) (bad) lcall sub push ret xchg sub in inc insb add adc mov (bad) (bad) (bad) (bad) std sbb xor adc aas push lret push orl push and dec cltd jae cmpsl inc pop neg or dec cmpsl sbb ss mov sar push push std ljmp push pop les mov pop add (bad) sbb mov push out ss cltd add outsb add mov incl ffree jmp mov dec jbe sarb addr16 push pop sub loope mov data16 andl jns out outsb xchg loopne fstp arpl xchg mov inc jmp xor (bad) (bad) (bad) jns lods inc sbb in mov mov fwait sbb sbb or inc std call adc adc shrb sbb mov aam inc adc scas pop fild call add iret loopne mov jo lds je mov dec pusha adc cwtl in push cld lcall mov sti scas mov inc mov out (bad) (bad) call add test mov sbb pop add xor mov xor icebp mov adc call push push rol stc push jns xchg add and push add push dec aad mov ret in fisttp and js mov roll (bad) (bad) (bad) incl or in mov xchg inc mov test adc call bound pop cltd xor inc adc add mov cli fwait mov sbb mov sub push (bad) (bad) (bad) ljmp sbb aaa inc xor dec sbb pop pop pop aad nop mov movsl xchg ss inc sbb (bad) jnp xor (bad) jmp insb (bad) sub ljmp dec lds sbb les lahf or xor cld cltd (bad) (bad) decl add push and adc sub push dec cmpsb sub pop icebp jmp cmp pop test xchg cwtl and mov fmuls (bad) (bad) in daa adc sbb enter ja (bad) sub in and add aas rol pop and or ljmp cs jge je dec and xchg (bad) lcall xchg inc dec push cmpsb fwait ds icebp or repnz enter add shll (bad) (bad) (bad) lcall fsubs outsb adc pop test es cmp dec mov aas cli mov in les clc (bad) (bad) (bad) out and (bad) call or add inc out (bad) iret xchg adc sub js add rcl jle fsubrs scas data16 in (bad) pusha (bad) (bad) (bad) lcall rolb daa and popf dec jno mov scas int3 (bad) xlat jmp push push cmp mov mov out mov imul xchg jnp and jecxz jecxz jmp popf daa lds out sub cmp stos (bad) mov cmp in xor sarl pop nop or lea lods call add leave nop jo add inc les inc mov dec (bad) (bad) jmp push loope and daa cs fisttp jle lods push into xchg jbe stos cli mov push dec lcall cmp and outsb enter (bad) out fsubs xlat movsl jge xchg mov daa out stos mov dec xor pop mov movsb push mov mov (bad) (bad) decl add lock je dec xlat dec pop push fsubs xor jne xor loop call cmpsb out xchg or mul clc cs out xchg lock dec and aam xchg movsb fcomps inc iret fmul cmp sub adc (bad) call sub cmpsb inc aaa pop out lock sbb pop (bad) (bad) lcall mov lret icebp cltd outsb dec sbb fisub stos cmpsb xor call (bad) (bad) (bad) lcall sahf arpl sete push mov ljmp (bad) (bad) (bad) dec unpckhps and ret xchg imul cltd in push fildll (bad) push les fnstsw jb jge pop in (bad) enter or (bad) jg lods movsb or ficompl addr16 push xchg jb sub (bad) (bad) (bad) decl add (bad) lcall rcrb ret xchg push les pop jecxz and jne decl loopne fcmovbe mov adc inc daa int ljmp pop fs cltd dec mov sahf mov in mov (bad) lcall add ror mov mov mov cmp test pusha pop sub inc icebp dec dec xchg cld mov dec pushf insb jecxz xchg nop dec add call push inc mov xor xchg (bad) (bad) push and not add scas sti dec mov or push add decl cmpl push inc sbb out scas jge stc clc (bad) jg sub and lods pop stc hlt adc rol xchg pop push (bad) mov imul adc and je (bad) clc (bad) mov fcom enter sarl push add notb mov (bad) js js loopne (bad) inc scas fs aam (bad) popa mov pop (bad) jae dec lret addr16 jb gs fildll sbb jle push (bad) (bad) fild loope xorl lock (bad) xchg add and mov or fcoms lcall decl out cmc add bound add adc jecxz mov (bad) (bad) (bad) ljmp in je mov mov add adc fldl (bad) (bad) (bad) ljmp leave mov scas clc sub test jb test fnstenv mov (bad) ficom pop fsubrs lcall icebp call int3 sub mov add sbb adc (bad) repnz (bad) mov sbb or pop pop add xor ds divl clc (bad) (bad) incl scas arpl cs pop adc mov or dec and aaa test sarl mov sbb stos adc call dec dec jns enter push je call out dec mov jmp mov (bad) sahf test jg (bad) pushl adc add gs daa (bad) lahf sub out lret cmp ss lock fild pop add mov enter fnstenv clc xor pop (bad) (bad) ljmp xchg mov dec fnstcw pop mov and jg pop loopne ljmp jg xchg mov pop cmp das cli call dec mov mov dec mulb cld jl adc sti adc (bad) call cmc sahf push sub ss pop insl stc repnz cli inc mov mov push jne icebp (bad) xor or lcall dec inc cltd push out jecxz in (bad) int3 (bad) jne inc arpl shrl lock jg jecxz stc adc xchg daa pushf aad pop fdivrl add mull (bad) (bad) jmp xchg popf fcmovne cli int mov popf adc xorb jno pushl rorb cmp and mov int pusha in (bad) loopne dec popf cmp pop push push ficoml imul lods aas add lods lds lret xchg sbb add push test (bad) (bad) push negl push or adc adcl dec adc shr push jo popf scas test (bad) (bad) lcall int3 ljmp (bad) cmp bound sbbb decb (bad) xchg stos (bad) (bad) (bad) dec xor (bad) and out push les fs mov popa dec pushf loopne out sub (bad) (bad) decl inc lss push pop lods pop xor xor or inc pop sub jg cmp outsl adc adc mov std mov scas mov enter mov jmp push stos addr16 aaa lret dec pop pop les imul pop lcall notb pop dec ljmp push sub mov (bad) (bad) (bad) lcall mov dec fcoms ja cmp sbb (bad) or dec roll pop jns xor ljmp rol dec in and mov pop add sub (bad) (bad) (bad) pushl cmp cmp pop hlt cmpsb xlat jge mull lret add mov cld ss incl cli inc inc cmpsl xchg mov lret lret out test (bad) fcompl into xor cmp aaa loopne and scas pop sub pop mov (bad) (bad) (bad) (bad) incl imul inc mov inc xlat shrl loop fstpt push rcl stc ljmp add fisubr sub mov ret (bad) mov call push ret mov fisubrl (bad) cmpsb decb movsl add adc imul decl shrb xchg rol dec (bad) out (bad) push push inc loop int3 call pushl jl cli adc jnp icebp inc std stos stc je in cmc cmp test sarl loopne mov and or (bad) (bad) jg clc jle add xchg xchg out xor int int3 adc hlt (bad) outsl push mov push pushl insb cs fisubr pushf push mov pop stos sbb adc enter call dec idivb movsl insb jnp or push xchg and push stos sar (bad) lcall sub jle xchg lahf lods cmp scas (bad) dec sub inc add add jne (bad) (bad) pushl loop sub xchg cmpb or add jmp and (bad) jmp xor sub js pop stos pop mov (bad) mov (bad) and ret mov push and jne pop outsb stos inc push mov xor jle (bad) cmp xor pop pushf (bad) (bad) addr16 movsb sub pusha and pop gs mov inc inc hlt mov (bad) sub mov aad jecxz cld and pushf out int3 arpl or mov test incl pop sub decb das and mov rclb inc cmpsl (bad) (bad) mov push and sub sbb loopne push andb (bad) pushl mov test xlat xor mov iret push mov (bad) call mov test sti xchg mov adc repz xlat int add into je push lock decl push push sahf jne inc aaa mov lret xor clc push (bad) (bad) call in cmp repnz test sub (bad) mov incl ja stc mov loop pop or fisttpll in mov cmp sbb mov (bad) (bad) (bad) in xchg inc mov jae lea jne imul cld dec pop cmc dec or push inc mov (bad) jg sub add movsl ror rorb xor sbb (bad) (bad) (bad) lcall mov out das mov loopne test fldl or mov mov enter pop or ja and (bad) (bad) (bad) decl out insl jp aad jnp mov shr inc aaa rorl (bad) mov (bad) xchg ds (bad) jg (bad) (bad) (bad) decl ja cmpl scas pushf add inc jp push lcall hlt adc (bad) (bad) (bad) jmp fldt sbb cs stc cmc (bad) outsl call pop ret jmp (bad) (bad) decl dec and pop jp loop mov adc push mov jbe insb mov cld das clc ljmp int dec js cwtl mov call push jnp adc sar (bad) pushl (bad) not fisttpll sbb inc jmp inc (bad) jne js stc (bad) (bad) decl jmp push ret jmp mov add int3 sbb jge or (bad) jmp push bndstx push daa xchg es std popf int3 inc (bad) (bad) incl or push xor sbb cmpsl mov jge mov loopne ljmp std mov dec jecxz inc mov xchg (bad) (bad) (bad) mov push mov cs pop lods cmc inc dec and (bad) fisttp fimul loope shrl (bad) (bad) (bad) cmp mov loopne dec push int fbld mov mov lcall mov fdiv (bad) pop push or ret mov addr16 icebp test jle add stc out (bad) xchg (bad) sub divb xchg mov std testl mov jb (bad) (bad) notb add fld jo dec push dec adc idiv (bad) (bad) out ds cmp loope dec sub fwait testl mov jl add push lret (bad) decl adc cmp xlat xchg call inc cmpsb adc lods pop daa or pop adc xchg adc (bad) adc stos dec dec or out into push jmp mov (bad) outsb fdivrp jg mov push mov inc xor sti or mov push into movsl (bad) (bad) decl xlat mov sbb xchg pop cwtl faddl shrl jmp test mov mov xor fdiv mov out jecxz decl xchg enter dec popf mov (bad) fcomip loop (bad) xchg cmp lahf mov mov clc (bad) (bad) (bad) incl imul xor shlb in in movsb enter mov sub inc movsl (bad) (bad) mov bound xchg dec push iret push test inc sub mov pop sbb cld add or dec add jl xchg jo call ljmp mov scas sbb shrb lods es xor incl scas repz in jg fdivl sbb rcrb fsubrl xchg mov jecxz rol clc (bad) jmp jmp mov inc dec leave mov test loop push xchg in nop xchg aad cmp aam or xchg (bad) bnd jno push or repnz (bad) (bad) (bad) (bad) cmp stos push fldt pusha das or scas jne push xchg and sti int3 mov add sbb out ljmp xchg adcl xor mov fwait lcall rorl lret push mov loop cltd ficoml (bad) out hlt popf jmp adc pop xorb jo (bad) aaa movsl (bad) (bad) (bad) fild xchg inc cmp ss ret sbbb and stos mov sub (bad) mov bound sub fisttp scas dec outsb push pop scas mov stos decb jmp cmp and pushf sti fildll (bad) mov mov jmp xchg clc enter push imul nop mov repnz push aad (bad) (bad) mov ja das mov repnz ds rorl in xchg ret ss fist (bad) (bad) (bad) jg fldcw add imul repz dec out fdivl les add mov xchg and fsubl adc stos (bad) xchg pop add xor js into pop xor (bad) (bad) call lret lds xchg adc inc in fstl cltd adc scas (bad) mov and pop inc mov push xchg fcmovnbe inc or addr16 (bad) (bad) decl jmp iret bound inc mov out loopne sub mov fs mov das mov jle mov (bad) std fcmovnu xor (bad) fsubrs add insb or stos popf ret cmp out loope call (bad) jo jl bound push pop xchg lock dec shll ljmp clc test (bad) xor xor mov movsb (bad) push out idiv jbe pop mov jecxz (bad) jg loope fcoms cs add dec jg sub mov (bad) (bad) (bad) call lock cmc push hlt nop cmp mov push xor push push insb push enter mov sub (bad) sbb mov enter rcl cmp stos or movsb outsl (bad) (bad) (bad) fbstp push push or movsl repnz (bad) dec jle dec cmpsb or outsl jp mov jl xchg hlt decl xchg aad int3 mov dec (bad) jmp hlt cmpsb dec fcmovbe sbb (bad) (bad) (bad) fnop cmp outsb outsb lock push loop cltd pop sbb outsl inc arpl imul pop loope outsb inc adc dec mov test xchg (bad) (bad) (bad) lcall push ss test or loope subl lahf (bad) fisubr int sub decl (bad) cmpsl rorl adcb cmc je cld (bad) mov out loopne loope xor mov jb or cmp inc jecxz (bad) (bad) call inc loop loop inc inc mov jl push add jp sub adc mov in xor scas int3 push outsb movl push daa test xchg xchg jo jge mov fbld jmp icebp dec xor or and decl and int3 pop xchg outsl pop inc mov popa and jg movsl adc dec loop clc mov push popf pop in sbb (bad) (bad) ljmp mov out push enter mov sub jecxz insb cmc push push lock fisttp pop (bad) mov lret (bad) test mov inc cmp push dec mov dec push sbb ss lods mov add stos lods (bad) add xor test (bad) (bad) (bad) ficompl lret in cli cmp xchg pop loopne jle jo test out testl xchg push (bad) (bad) ljmp mov addr16 dec into xchg inc push fadd sub mov pop fldt mov outsl pop sarl jg sub test stos (bad) (bad) (bad) (bad) fcoms xchg xor jb hlt ret inc inc shrb adc call jno (bad) (bad) jmp adc popa fisubrl popa or sbb dec (bad) pop sbb mov out or js (bad) (bad) call dec subb mov push lcall leave cmp sub push cs dec (bad) (bad) (bad) mov jns push and pop mov pop aaa fdivrs out sbb push mov in test mov (bad) std pop rcrl mov push fwait inc jbe lret jl xor cmp push loopne fildll sbb loop pop (bad) lahf arpl std sti dec hlt (bad) (bad) decl daa jmp sbb xor in arpl ds xor and (bad) lcall jecxz stos or push mov aas add (bad) (bad) decl imul add mov jl (bad) push mov pusha jns inc cmpsb fcomip ljmp pop insl xor jle dec dec rclb cmp (bad) (bad) pushl scas cwtl xchg mov (bad) lds mov sbb add cmpsl inc or (bad) call into add cmp sbb shrb inc sbb fcomip icebp add cli sub mov cli (bad) pop dec pop (bad) mov pop push ret lea jp mov xor add repnz jo push fimull cmp out add jl xchg jmp mov (bad) ljmp clc fcmove scas test xchg push dec mov push xor int inc lcall incl sbb pop push loop lret or pop mov mov xlat stos push (bad) (bad) mov dec mov int3 xchg jmp in xor sub pop cwtl ret (bad) (bad) std (bad) inc das aam daa int or (bad) sub call je sub (bad) (bad) incl pop mov pop sub push cmp repz cwtl mov iret and pop pop (bad) mov loop jmp int sbbl test mov mov fnsave clc lcall fild sbb xor cmp cmp sbb jp dec cmp push icebp (bad) xlat stos repz lret inc stos hlt cmp popa push fmul mov inc and pop mov cld out loopne sbb add (bad) pushl (bad) or inc dec fdivs mov (bad) jg mov or fldcw lahf int3 cmpsb daa leave (bad) mov lods inc xchg stos (bad) (bad) (bad) mov or mov mov das int3 and gs repnz (bad) outsl cli pushl mov loop push insb jle fstpt push (bad) inc xor enter addr16 mov mov jmp (bad) outsb test fwait (bad) pushl push addr16 outsl rolb lret mov adc jecxz sub push and mov (bad) incl data16 lahf sub js mov (bad) (bad) call inc xchg or pop pushf ss adc nop cmp xchg pop mov shll mov fucomp adc mov or mov mov clc adc subl ljmp adc loope popf lods les out out stc clc (bad) (bad) (bad) fbstp les popa test clc fidiv pop ja push sub push jo popf minps mov add iret clc or and xor outsl es call outsl (bad) jbe pushf fwait and inc mov mov out lock sahf lcall loope ss sub lcall test (bad) jo cmc incl adc mov cmp mov pop (bad) (bad) (bad) (bad) lcall and mov xor pop mov pushf sbb xchg or sahf pusha xchg push and and mov insl cmp add mov (bad) into mov insl mov stos (bad) cltd (bad) (bad) (bad) lcall push push dec lods test sbb insb sahf in fiadd push hlt add lret cld xchg (bad) (bad) (bad) call push jo cs inc mov ljmp and cmpsb mov sub cmpsb xchg inc inc mov add dec (bad) jg outsl inc ret inc xor mov clc xor inc xor fistpll pop mov cs add inc cli ljmp cli push out push push mov and dec adc inc idivl jge (bad) mov mov inc ret adc (bad) jg outsl inc jno notb icebp or push test mov incl mov and xor std push lret jecxz cli out in add add lds (bad) mov jne stc sti inc xor lret jne movsl mov andl jae test push mov std push push aas repnz push jmp (bad) (bad) (bad) mov mov test cmp jg dec cwtl outsb add adc pop out call or add add aaa fmulp jge subb mov (bad) (bad) jmp dec or sub sbb push jae add jae je rolb aam fisttpll adc cmp and mov pop cmp jae popl ret sub jg mov adc lea (bad) fnstsw jp jne or test add lods xchg cmp xor andb push ss cmp rcr cmp repz cli (bad) (bad) (bad) jl inc jp test sbb and mov imulb inc subl ret repnz (bad) fcomip jmp gs cmp call push cmp fdivr retw pushf lret or xor pop jb (bad) (bad) (bad) (bad) aas and leave xchg jle scas mov arpl push ss imul or (bad) (bad) (bad) ljmp iret das adc lea jle bound incb xchg push gs (bad) (bad) (bad) fldcw fldpi xlat jl data16 or int mov sub test andl push jbe mov (bad) (bad) pushl add adc jnp cmc pop push into cmpsb es pop movsb adc cltd mov xor jb ljmp xor cld and xchg popa dec and nop movsl jg dec sbb or pop call cwtl rorb adc pop mov jg inc std shrl fisubr shlb pushf shll test ljmp mov pop inc fnstenvs push cld (bad) jg fdivl lods outsb sbb frstor bound decb (bad) pop and push mov (bad) decl sub aaa mov or inc jae (bad) (bad) lcall ss mov dec or xchg mov fsts jl dec xchg xlat mov icebp sub incl (bad) lods mov cs test xchg xchg sbb jg mov daa adc jl sbb mov mov and (bad) (bad) (bad) (bad) mov mov pop stos jae ret clc addr16 xchg shll (bad) (bad) (bad) decl or outsb jmp fsts bound mov addr16 sbbl sbb adc xchg (bad) (bad) push jns push jb push mov xor movsb dec je (bad) xchg mov fs sbb jmp enter and outsb in rorl mov loope call jmp mov cmp adc jae pop (bad) mov sub das clc (bad) ljmp push cwtl adc pop rorl out pop pop (bad) adc stos enter movsl (bad) (bad) (bad) pushl dec loopne,pt mov adc push dec mov cmp xchg dec fucomp aam jecxz mov mov ljmp ljmp call cmpsl sti aas cltd and (bad) rorl jne cmp inc call aam add ja xor daa fnstsw xchg or and icebp (bad) cmc (bad) (bad) ljmp inc sbb pop pop out outsl outsb lock sar sub incl or adcb cmpsb ljmp (bad) ja btl ds mov std or cmp cmp add xlat and add push sub push test mov and mov and xchg jg (bad) jg jmp popf dec cs adc mov dec idivb ljmp clc shlb add in push or sarl (bad) (bad) pushl xchg ffreep pop adc mov dec out lods xchg jge dec outsl inc push fwait addb or (bad) (bad) call iret add ss out sahf and jae push insb std inc cwtl in mov inc fsubrp lds jge (bad) idiv (bad) (bad) call aad (bad) ljmp cwtl out or ds jl mov pop loopne loop andb xlat scas clc sub or iret cmp pusha fildll out loopne xchg dec sti (bad) mov ret orl and cli call (bad) xor mov or pop sub xor (bad) (bad) jg pop std (bad) push adc rclb mov add jns inc and decl add sbb cmp (bad) (bad) fildll loop inc faddl sub mov xor dec push mov icebp inc jbe jle int add sbb pop (bad) xchg (bad) (bad) decl cmp cmpl (bad) mov (bad) mov cmp rcrl pushf int cmpsb ds repnz dec jb push pop rcl lods ds jne enter rcrb push popf or push jg (bad) ljmp in lods mov cmp aad and sbb pop pop push mov jo cwtl or or jp (bad) (bad) mov mov cmp cltd cmp cmpsb pop es sub pusha dec lods push pop xchg (bad) ljmp ljmp fcomip (bad) les and inc pop mov pop jg (bad) (bad) pushl lods mov es jno inc ja clc (bad) xor sub lahf mov and xor jmp mov sub pop enter and in jne adc test sar adc (bad) (bad) jg xor in fldt addr16 repnz add test rcr int3 (bad) (bad) (bad) (bad) cli or in push icebp adc fs daa mov cmp inc cmp imul test loopne xchg cmp inc outsb jo push rcrb (bad) out test cmc adc sbb jmp or js mov add add pop push and mov (bad) lcall test leave iret mov (bad) idivb sarb rcl push push jge rclb mov inc out xor push mov sbb pop sub cmp add inc sbb inc aas and cmp dec insl ror sahf cs and sti nop (bad) mov addr16 pop lea mov lock fninit iret or xor add (bad) (bad) (bad) (bad) ds pop int3 xor repz aaa movsl ret rorb jb lods jb and sbb ficom dec dec imul out out scas sub (bad) mov mov sub mov mov jae cmp (bad) jmp (bad) xor popf repnz jecxz fidivl pop or das fwait aas cmp (bad) (bad) (bad) push rcl or dec mov dec cwtl nop jbe xor jmp adc inc add (bad) jo scas xchg sub pop loopne and (bad) in (bad) lcall fcoms jmp scas mov adc push in push push rcrl (bad) (bad) ljmp sbb xchg test jae mov loope mov mov ja xchg xor cmp (bad) incl add xor pop shrb ret fstps cwtl or frstor lcall jecxz hlt (bad) jb push (bad) in (bad) outsb add lret adc (bad) (bad) decl (bad) sub mov jg cli scas pushl scas rcrl out fstp aad movsl popa out xchg xchg mov add mov (bad) mov imul in psraw cmp clc inc popf (bad) pop faddp out and pushf add cld jmp fsubrs and jne fcomps mov cld movsl jmp sub adc pushl nop addr16 stos dec mov in rcrl call sbb outsl clc pop cwtl add dec push pop stc test cmp (bad) jmp test jno inc aas insb leave xchg ja and xlat hlt lock sub and shrb jbe leave pop scas add scas sarb (bad) (bad) call xor test test sti xchg (bad) xchg xlat loop mov ss sahf inc add ss (bad) jmp loope or popf mov fldl xor xchg shrb std call push rorb ret mov lock into insb xchg rcl call lea jno pop fdivp (bad) jmp bound movsl pop and inc test xchg add push cmpsb rcrb jp loope (bad) decl cmc popa pusha jp sbb mov push in fsts cli (bad) jg scas test insb push (bad) repnz js jbe cmp jp jnp cmp pop mov lcall cli cmp mov pop push fwait call incl je jecxz push ss fwait or adc lcall sub cmp jmp out cwtl inc idivl push inc add ljmp cmc loop aaa sarl cmpsl sar jecxz ss push jp sahf clc cmpsb cmp sbb inc inc add (bad) ljmp fmuls cmp (bad) mov jg push fldcw outsl lahf pop incl or adc xchg (bad) (bad) out pop add xchg je mov out pop jg (bad) (bad) (bad) call int push jl ds inc test add jb xchg adc push xchg jg gs mov hlt mov test fs or dec test mov insl push enter stos (bad) test pusha aad xchg fsubr stos cmp pop enter pop test fwait aad (bad) jecxz pop insb push in outsb ja not movsl out cmp adc fild (bad) pop xor aam (bad) ljmp xor outsb repz mov shrd (bad) (bad) out (bad) (bad) jg lock daa sub shlb sbb xchg fmuls (bad) pushl cmpsl gs popf push mov decb scas cmp loopne xor inc neg dec adc sub int mov pop adc pusha jno imull mov sub bound push fnsave inc (bad) ljmp shrl loop ss inc pop call (bad) fcomip mov and cwtl lods cmp jae stos jb stos jns stc push call add je jb fdivrs ja stos or (bad) jbe pop mov inc decl push das push cmp mov cmp jmp insb inc ljmp dec mov mov out (bad) (bad) (bad) incl ret mov pop icebp push shlb loop sahf add xor loope repnz xchg mov mov (bad) jne clc pop and dec mov push push xor mov add mov (bad) (bad) pushl (bad) lret adc in xor sbbb cli divb (bad) (bad) mov jbe,pn push sarb pop imul pop clc addr16 (bad) incl imul mov and daa dec in (bad) adc movsl inc add inc dec dec mov shlb icebp xor pop push mov push dec xor cld ljmp sarb cmp cmc and stc cwtl cmp pop pushf (bad) (bad) pushl es mov xchg imul push lea (bad) push xchg (bad) (bad) mov mov repz (bad) jg lret (bad) lret jmp add or mov pop out out pop hlt mov (bad) lcall insl cmc and popf test fildll outsl and inc xchg test pop xor into sbb iret push loopne cltd call (bad) (bad) decl adc rorb mov lea mov test jge adc (bad) loopne (bad) (bad) lcall cmp aad lods jo std iret cmp hlt ljmp add xor mov sub xchg cmp inc into mov popf jne aaa out and sbb dec xchg mov ds xchg scas pop mov add dec aaa sbb and push cmp pop jae (bad) decl fbstp dec push sub cmc xchg xor xchg addl adc cmc loope ss fnop leave push sarl rcrb pop cmp (bad) (bad) ljmp sub push (bad) mov popf je jp hlt sbb aaa xchg xor mov xchg lret xor test out push int ret hlt (bad) (bad) inc adc sahf cmpb pop or daa jmp jge and fistp fmul mov lcall test mov jb (bad) (bad) incl testl lahf imul jge inc jg mov dec inc pushf mov rcrb push pop xchg (bad) (bad) ljmp test js jno mov and ljmp add mov out jo dec and push lods (bad) mov pcmpgtd (bad) and daa sbb ljmp xor mov pop mov adc fwait (bad) mov sbb cld ret aaa aad mov lds add pop push movsb decl imul das xor imul lcall fisttp call pop push test cmpsl inc lahf popf mov dec stos add (bad) (bad) mov or lret sti xor adc mov mov push das add aam nop or in jp jb rcrl mov popf scas ja adc je mov (bad) ljmp mov stc lock stos inc fcmovb inc cmpsb loopne test jmp data16 dec (bad) (bad) (bad) decl xor or mov les xchg and out dec aas data16 add movsb pop stc cmp pop sbb adc ljmp mov movsb jo ljmp (bad) movsl insb or cli fs inc xor imul pop stos xchg sub push cmpsb dec movb jmp push nop dec (bad) xor add pop cmp pop inc dec scas sbbb lcall mov dec call rol inc and daa aam cmp addr16 or call add pop jae ja je adc (bad) (bad) (bad) lcall inc mov fs insb inc ret xchg (bad) dec bound push bound out sbb lcall add pusha loopne stos movsl lcall hlt xlat or movsl dec jno fwait pop out mov (bad) icebp inc xchg or mov xchg jae imul push repnz test addr16 add mov das (bad) xor adc clc jmp popl xchg pop nop pop sub push mov (bad) xchg mov add clc mov mov out cli push add arpl ss pop mov inc cwtl pop (bad) mov add jb dec fdivrl out fdivr push mov mov xchg mov loopne int std jbe jo jg lods ljmp jnp and dec test (bad) cld iret cmp sub sbb cwtl fidivr sbb cmpsb (bad) incl adc add sahf pop leave or push (bad) jo popf (bad) (bad) (bad) lcall lods xor imul imul mov dec sbb mov inc push mov push shll jae lret mov call test (bad) (bad) (bad) decl pop add jp jmp in adc jns lahf xor cmp sub (bad) ljmp test fcompl xlat mov mov mov xchg pushl sbb mov xor (bad) mov pop nop stc jmp (bad) mov xchg addr16 jp add xchg fwait mov (bad) mov mov and mov jp fcmovnb pop cld incl stos jp mov mov (bad) cmpsb arpl pop add adc je andb jo sub (bad) ljmp psllq sub mov out out push push (bad) nop repz pop (bad) (bad) jg jo inc pop outsl dec insl pop and addl adc cmp (bad) call lods out jle xchg inc push ss cmp and jo dec or mov jnp aad call (bad) (bad) (bad) decl insl leave and ss cmc lock push sub pushf xchg insb jl mov ja (bad) (bad) (bad) jg jecxz loop mov arpl clc out cs jns mov test add ret sbb sarb int3 cmp add pusha ss pop leave cmpsb pushl std jg fmul jns add stos jnp xchg mov loop ja push icebp cmpsb roll sar sbb sbb inc mov incb add lcall add jbe ret fmul sar (bad) mov cwtl sbb sbb aas pusha clc adc loop (bad) rclb inc pop (bad) (bad) (bad) jmp lods push jg seto pushf popa push jge lret mov mov ja enter adc incl out lds nop mov popf or out arpl jb rorb and pop (bad) out add in loop cmp dec or fs ficomp mov nop inc jp cld push mov in aad lock adc (bad) (bad) (bad) inc xchg dec lret inc xor mov dec mov sub jae,pt or rorb mov (bad) (bad) ds mov cs mov mov jle out and sub test inc mov (bad) (bad) jmp es psubq ret fild mov or and ljmp incl lret mov pop lcall lods xchg add or sbb clc cmp pushl dec jge xchg aad or xchg push mov adc loopne std (bad) ljmp (bad) aaa jbe mov push stos add and ret sub adc aad xor insl pop sub sbb jo jne push lcall incl sbb jp subb lea (bad) stos inc xor aas mov (bad) (bad) decl mov orl outsl mov mov lahf sti jl sub push mov jge (bad) decl fimul mov dec jae hlt test xchg cmp mov (bad) jge out and and push (bad) (bad) ljmp in cmpsb cs or push push cmp lret cld std xchg fldenv loop daa sub jmp cltd or mov (bad) gs (bad) out cli ljmp ljmp push mov mov pop push (bad) (bad) (bad) pushl pop ret in js adc cmpsb mov pop std inc das xchg mov (bad) (bad) (bad) decl call out and and cmpsb xor movsl cmp (bad) jns xor lret jae dec or pusha xlat (bad) call movsb push jp andl ljmp xchg pop ja stos or fwait daa xchg push push xchg lds (bad) (bad) ljmp cmp gs adc fs out add dec out (bad) (bad) mov js,pn mov push cmp (bad) ja pop (bad) int lods mov jmp std jne push or (bad) lcall add jae mov stos gs (bad) int3 or lock jg mov add (bad) (bad) call adc xchg shll popa (bad) shrl int3 rclb adc lcall es mov xor rcll decl fcoms decl inc cmp repz dec fisttp mov into cli das xorl inc ss scas mov ds fild sub mov sbb add subl inc cld (bad) (bad) call jecxz push je or out add mov mov cmp mov out (bad) (bad) call je pop test push adc shlb xchg mov outsb sub push mov pushl popa clc sbb out loope add pop data16 or fldenv push and (bad) (bad) mov insl cmp adc (bad) hlt in dec int into lret (bad) (bad) (bad) fdivp adc dec orb xchg ud1 ds pop inc jns push jge and clc push pop mov dec lds cmp push sub dec (bad) (bad) (bad) (bad) lcall adc pop ret xchg hlt js xchg cmp mov cwtl jbe jl lds xor pop mov rcll jno mov (bad) incl fdivrl mov pop inc sub pushf pusha or call aam mov jmp aad (bad) (bad) decl dec cltd mov jl sub cmp push sarb sub (bad) incl (bad) sti sti cmp test pop js mov insl fs mov popa cwtl addl add (bad) mov mov (bad) lcall pop sbb jge sbb test test add dec dec (bad) pop cs in or out adc mov arpl xchg lret pop sbb insb inc nop or fstpl lcall dec mov mov push mov xor jne lods scas iret inc (bad) (bad) (bad) call inc xchg and adc xchg in in cli sub popf dec fcmove ficom popa and es jg (bad) call aam sbb mov xor arpl leave push add add jle add (bad) mov inc inc jl push mov loopne sub jno hlt inc pushl cld lret add popa cld jmp and sar (bad) (bad) out adc jo scas xor adc stos int scas lret sub insb sbb es (bad) cmc mov lcall cmp lret pop cwtl int3 lods jle ret test out scas jg in cmp decl fdivs test shrb dec jb lea and xor push jns mov push ds mov or loope or insb imul (bad) incl pop jp xchg sar jo add add dec or inc dec js (bad) (bad) (bad) dec jle cmp push rol arpl fnsave mov imul fdivr scas mov push and (bad) int3 adc scas (bad) ror push mov (bad) cmp pop in add push movb loopne inc or xchg imul dec in jg (bad) pushl outsb int3 iret xchg (bad) cmp cwtl outsl or mov jl dec cmp in (bad) (bad) incl push cmc xor stos out sbb mov pop popf mov (bad) (bad) call fisubr pop xchg xchg call add dec mov and mov (bad) mov test or xchg (bad) pop ljmp ret loopne sub imul (bad) inc mov jne xchg push negb cld sti mov xchg mov (bad) jmp cmpl or mov or insb out cmpsb aaa gs test dec jmp sar pushl outsb pop sbb sub pushl push push iret lret jecxz jecxz movsl lret push scas sti pop enter xchg stos inc rorl in mov (bad) cmp dec sbb mov (bad) inc sbb sub mov inc pop daa cmovbe dec (bad) (bad) (bad) (bad) lcall inc test sub sub popf faddl scas shll movsb (bad) (bad) (bad) lcall bound loop jmp fmul aas mov and push push imul decl mull jmp loopne sub inc aam and popa xchg and mov scas sbb icebp imul cli sub aas sbb or int jle,pt les and out (bad) (bad) (bad) pushl cmp cmpsb or push xorl and mov xchg push jmp (bad) jmp dec fmuls cmp or pop jg mov (bad) (bad) mov notb xor fisttpll in call cmp cmp mov (bad) (bad) (bad) (bad) mov push sub mov push push pusha popa iret dec add push sbb xchg (bad) (bad) (bad) lcall iret pop nop das je push cmpsb leave and fwait pushf inc xchg stos and sbbl pusha push mov shl inc xchg jbe notb les (bad) sub and mov push (bad) mov hlt pusha mov and cli xor xchg out inc outsb adc lock lods rolb (bad) (bad) jg lock (bad) call stos in cmp mov int3 (bad) sbb lock push push sbb lcall sahf fisubr pop sti addb and add sub cmp (bad) decl xchg and shrl cmp sub add std pop sub and loope (bad) jmp out mov push jb (bad) jns movsb pop lock xorl lods cmp scas lds test loop ret or inc mov rorb inc push cld (bad) (bad) lcall out (bad) (bad) lods push sbb mov jl pop sub (bad) xor xlat mull and and mov push dec jns addr16 inc xor rolb shr loope in jno enter xchg sub out cmpsb jnp (bad) (bad) lcall sub into sub inc (bad) jne insl inc repz js jno outsb mov pop movsb (bad) (bad) (bad) cmp add mov dec gs fimull mov gs (bad) decl adc lahf test cltd aad jl xor adc (bad) lcall xchg cmpsb xor daa push iret icebp fs pop mov fs xor mov cld decl push pop sub sbb lret (bad) mov (bad) (bad) jg push cmp fs leave sub adc cmp mov ljmp repz dec (bad) (bad) (bad) ljmp cmp or out jmp incb jmp repz out incl xchg jo xor flds icebp mov adc sub scas in inc mov mov dec (bad) cmpsl and jb (bad) ljmp mov ficom push mov cltd or ficoml (bad) sub (bad) (bad) ljmp cmp inc push imul or xor cmp dec jae sub push or popa mov or fcmovnb dec (bad) (bad) decl arpl xchg aad inc aad (bad) xchg or cld pusha mov imul (bad) mov xchg dec ret jns xor push jp add sbb mov loopne (bad) (bad) jg xchg ljmp sbb push inc or add std dec pop (bad) jg (bad) out daa aas mov (bad) sbb fildl das movsl mov mull mov jg (bad) incl mov add lahf cmpsl pop xor push (bad) pop lret add xchg push call loopne jmp mull je std mov (bad) push call fsubr movsl ds jp cmp or push cmp ja sti push sub in rorb add (bad) jg test mov cmp out push (bad) xor cmpsl mov test mov jae into (bad) (bad) (bad) jmp jg in jl loopne gs sub sbb push ljmp jno sub fisttp sub les adc lcall call stos fldt lea mov sub stc jl ds jg cmp aam ja xchg jl add lcall jmp ss xor mov aam inc pop test add lahf aad fdivl (bad) (bad) (bad) jnp cmc ss jecxz cmp and push mov aam stos xor sbb or adc sbb ret sub cs (bad) push incl adc ljmp xchg dec pop mov inc stos cltd cmp add decl sti scas hlt jg rcll adc mov (bad) mov xchg ds inc mov jno popf mov pushl shrb pusha (bad) lock out dec inc mov fs and (bad) jmp in insb aam cmp add ljmp cmp and bound mov mov pop in mov aaa adc jmp or ja mov je dec ficoml fstpt push mov imul ljmp pushf mov into adc fcmovbe mov mov daa jg cmpsb jp sbb (bad) pushl jb nop mov jne stc je pop and pushf test fnsave enter dec cmp ljmp lods cmp push lahf sub or xor ljmp add repz mov je jnp adc ljmp insb clc mov mov (bad) sub (bad) (bad) fistp (bad) aad xor dec aad std (bad) xor clc inc sub xchg push push push clc out xorl inc insb mov rolb (bad) (bad) (bad) incl push lods gs fsubrl sbb mov addr16 test (bad) (bad) in push push cli fwait inc movsb outsb sti pusha pop (bad) mov cwtl popf clc (bad) mov jbe mov mov nop push imul lods test mov pop add out ret les ret xchg xchg insb cmp dec lret adc hlt mov test ja push mov sub movsb aas fwait add cwtl cs into ret (bad) jg enter imul xor pushf les push pop loopne ljmp pop je lea pop ror idivl sti jnp rcr xor pop jnp xchg pop pop out xor bound push or es (bad) or cmp (bad) ss mov dec pop xor jl out or clc (bad) push push les repnz nop loope out cmp pop loope (bad) (bad) (bad) call popa lock inc push mov mov cmp pop sbb and aad lods jge test dec mov loope dec inc dec cmp mov jl mov lret fcomps std push stos mov imull hlt scas xor ljmp add sbb inc les repz (bad) leave out cmpsb (bad) (bad) (bad) call xchg repz pop add mov jbe push shr cwtl and cli dec jae jecxz (bad) (bad) lcall sub jle adcl insl repnz jp ret fdivp xchg dec dec pop (bad) (bad) (bad) incl mov cmp ja loop or popf in mov sbbb pop (bad) les inc subb sub aam scas popa scas adc ret rolb and xor fwait cmp sbb lret pop out outsl stc lret mov (bad) incl push inc stos mov lods dec ficoml fs add sub cs (bad) (bad) mov dec lods lret adc std mov (bad) adcl jmp (bad) (bad) incl jne lret cmp jb leave (bad) push daa aaa nop nop mov fmuls shrl sub inc repnz test jg or or pop mov test decl add shrb mov pop sbb jg mov (bad) cmp pop (bad) in mov (bad) (bad) (bad) mov in cmp bound (bad) adc ljmp jmp mov adc sub movsb call insb dec int3 mov (bad) (bad) (bad) incl push ljmp pop mov cmpb xchg inc push lcall jne in push repz jge push iret fcmovnbe aam (bad) lcall loopne inc xor (bad) and (bad) lret xchg sbb fsubl ljmp mov bound incl add push cmp es fsubl lods add pop sub mov push cld decl add jge and and or cmpl and (bad) (bad) (bad) inc add addl pop xchg sub jge loop divl dec mov call adc sarb add jp push pop adc and (bad) (bad) call pushf inc popf scas mov ja cmc mov dec mov test out in and ret lock (bad) (bad) lcall mov xchg ja mov cltd dec (bad) jp adc outsb jp lahf push xchg in (bad) out cli call xchg leave or popf sbb sub lods mov sub pop push fbld or sub decl rorb lea mov punpckhdq call mov out (bad) ljmp pop test stos in lods lahf cmpsb insl ja popf xchg (bad) int3 sbb mov push (bad) (bad) (bad) decl xlat repnz sahf xchg (bad) jg pop iret (bad) pop in add cmp insl ds inc (bad) (bad) (bad) (bad) fldt push push (bad) pop xlat ret pop cmp inc jno (bad) pop push (bad) test enter sar incl sub mov push cli mov std call enter dec jae movsb in jno loope cmpsl sbb (bad) xor or pop aam mov (bad) (bad) (bad) mov jg xchg sbbb xor and fucomp mov cmp fimul stos xchg (bad) setge xchg inc cli push leave sarb lds fdivl dec fwait (bad) (bad) out or (bad) jmp addr16 sarb cmp xchg xor push mov lock mov and negb lcall (bad) (bad) (bad) mov xchg dec push fwait dec int3 lods fcompl fldl fstpl mov xchg adc (bad) lcall add cli push shr jmp and js (bad) jmp mov test lods sub out dec mov xchg lret incl (bad) (bad) ljmp jns adc ret clc test jbe jae imul pop cmp push lret ja xchg sub sbb fs popf dec das sti add std incl aad jne in imul jp push jne lret notl (bad) ljmp mov test xchg jae lods movsb cli pusha dec pop leave or ss test mov jecxz mov icebp xor mov lock test add fcompl stos and fisubr lret ds mov sti mov dec outsb bnd xlat xor inc mov (bad) decl sub popf out or pop je push rorb sbb inc jge incl adc scas cmpsb invd hlt mov ljmp (bad) cmp into and scas fs cmp adc pop pop shlb clc ret divb data16 ljmp xchg cli cmp xor jno leave mov data16 add (bad) decl push inc aad pop jns mov push cli pop add adc cli mov fs (bad) decl push adc js inc mov adc in insb fildll bnd cmc xor daa movsl and int3 adc (bad) pushl (bad) lds out or inc (bad) (bad) (bad) (bad) out cs cmpsb mov cli pop test out dec jg (bad) ljmp push shl ljmp pop ljmp xchg mov pusha sbb clc push sbb xchg stos jb jge push lods pop cmp inc jnp sar (bad) (bad) (bad) mov sub adc lret push or mov mov mov int leave ljmp test pop jl adc ret push sbb (bad) pop mov cld nop dec cmp mov (bad) dec sub pop sub shrb jae pusha sbb xor add ljmp push pop jmp sbb xor mov pop lds (bad) mov mov (bad) adc adc mov push pop fwait push dec test inc test aam dec or iret sbb sub mov cld inc stos add fistpll in mov mov mov fldl fimul into add push adc xor or mov fcomip push leave adc arpl mov jge sbb pop lock jg divb jmp cltd leave jo lret enter fs (bad) (bad) ljmp push mov cs ds in nop fdivrp icebp mov pusha mov xor jg fdivs pushf insb std div push push je icebp into push mov (bad) (bad) ljmp ficomp pushf hlt pop lret xor out inc shl std dec sub pop test les gs (bad) (bad) (bad) incl es xlat unpcklps inc aam popa dec add (bad) inc inc js fwait sarb adc (bad) (bad) call inc xchg faddl repnz or decl cmp loopne xor rcll pop cltd mov scas ficom jle out dec mov fwait lcall sbb xchg jo inc icebp fwait inc mov (bad) mov enter push jb (bad) int fcomip ja cld test aas les fcmovu push sub (bad) out add mov loope outsl push (bad) (bad) (bad) lcall push test mov fmull inc xlat adc ds fildll ret aad add (bad) jg pop das clc stos frstor int call jmp push xchg pop jmp (bad) fcomip in je test push mov loope lock sbbl rolb in addr16 (bad) (bad) (bad) mov pop cltd lea outsb (bad) fdivs dec or dec add lahf sbb cwtl sbb dec push cli lahf jge push lods and mov lods out in stos in jmp in rolb test imul (bad) lds ss mov fisttp and adcl add pop (bad) ljmp xchg jecxz xor sub nop adc and sub movsb adcl or dec out sub out enter mov dec cltd data16 in push sub cld push add dec ret stos add incl inc aam aaa xchg xchg and inc fcoml mov lds enter sub aam lock (bad) (bad) jg mov mov add push repnz ret ret int3 outsl jecxz sub mov aad mov jb push imul (bad) xchg xor call int3 outsb jg add (bad) (bad) call aas in movsl sahf mov (bad) cmp mov clc cs xor mov (bad) fcomps rcrl shlb sbb jne dec add js xor mov xchg add fs jo mov add incl std imul jp adc rorl mov and pop decl lock and and dec lret je stos pop mov movsb inc lea sbb ret int3 test jg or lahf xor (bad) cmp lods lahf inc sahf fdivrs xor sub icebp adc (bad) jmp aaa mov ficompl inc mov jae inc rcrl adc incl dec cli xchg stos insb xor cmc inc xchg sbb jae mov push add lret pop mov out jb lock xchg clc mov sbb mov and out push out ljmp icebp popf dec jbe xchg cmc mov lea (bad) (bad) lcall xlat and clc nop daa shrl and and aad decl in mov loope xchg in je mov add rcl ljmp mov inc (bad) call jo jecxz orl mov lcall push imul or sub aas pop dec (bad) movsl js add lahf stc sahf sbb (bad) out clc mov jle ror pop test mov pop movsl push imul scas clc inc arpl xlat rorl ds outsb or ljmp (bad) es xor std out es call (bad) (bad) (bad) mov adc jge pop pop incb sub leave sub mov push mov mov (bad) (bad) cld insl into popf rcrl (bad) ljmp scas es test ds mov imul add (bad) (bad) incl int3 imul mov ja push sub add loope test popa pop scas or sub scas dec adc call mov jo or addl sub mov cltd hlt idivb adc sbb mov iret not int3 (bad) (bad) (bad) jg sub sbb lcall mov inc cmp enter jle sbb lret and call add jae xor pop (bad) push outsb or aam outsb push mov jl or test mov fwait sub loopne (bad) (bad) cmp shr pop pop call fsts fistl ljmp and in push hlt dec mov out scas popa lcall xor sbb out in cmp adc adc adc clc scas push jbe decb mov (bad) ret (bad) call xchg or aam xor push jne push sbb mov jg jmp hlt xchg inc (bad) iret inc xchg mov scas or cmp inc push popf fdivrs jg stos fsubrs jns je shrb test mov mov jno jns xchg push ss mov in xchg or xlat scas cli (bad) aas mov and mov pop pop sub icebp push xor (bad) (bad) (bad) jg and fs adc (bad) mov jmp mov es ljmp pop and lret scas shrb xchg imul movsl (bad) test lret xchg out pop pop or out mov das inc in fidivr (bad) push xlat sbb sarl push and cmp pop and ljmp xchg xor cmc (bad) incl movsb (bad) and int xor dec in std cmpsb (bad) (bad) (bad) frstor jmp adc movb lock (bad) daa xor (bad) pushf ljmp (bad) (bad) jp mov (bad) lock xchg cmc mov lcall jnp mov in fs mov pop mov pop and mov inc ss (bad) jmp xchg fcomip jbe cmp orl iret ss mov push xchg cli sbb in jbe pop jg pusha std xchg or cwtl sahf inc (bad) push push (bad) (bad) (bad) (bad) jmp xchg repnz jne movsl movsb jnp inc sti pop mov imul cmp in (bad) (bad) (bad) (bad) fist cs and cli out xchg cmpsl fnstsw nop in movsb mov fildll jge clc (bad) ljmp and in cmpsb mov sbb mov xor (bad) decl cmp xor dec cmpsl pop xor fisttpl xor mov (bad) (bad) decl sti mov arpl test push push outsb sbb jge bound lahf (bad) (bad) (bad) pushl dec (bad) pop jae jle and jmp or jge dec and dec jns jb sar xchg mov jo lret ss push or lahf inc stc popf sub clc aaa fcoms mov sbb mov insb pop dec xchg loop push and (bad) (bad) jmp mov ret out cltd jg ss jg pop pop and xchg inc std call lods push int sub and call add dec (bad) aaa push (bad) jg jmp das mov sub loop aam icebp scas cltd es aad (bad) or cmc and add insl out movb (bad) mov pusha inc xor addr16 sbb or jp ss stos (bad) pop mov test insb enter adc outsl cli adcb xchg movsl jno scas fild sub sti inc test push pop push mov test sbb sbb arpl xchg shl stos xchg jg add xchg fstpl push jnp jmp pushf mov xor (bad) incl inc dec add add rcr gs in sbb nop inc pop fwait xorb dec ljmp cmp pushf push int3 mov lahf mov inc lock (bad) (bad) (bad) fidiv or das cmp sbb add push les mov xchg sub jnp push fs sahf pop xor jmp adc cmp addr16 (bad) inc cs and xchg adc sbb rorb xchg ja (bad) call fistpl imul mov mov hlt mov (bad) (bad) jmp (bad) rol test xchg enter popf repnz repz ret insl popf cmpsl insl dec mov (bad) decl pop push popf ja sbb mov lods fdivr (bad) mov xchg pop into push mov pusha hlt cld sub mov sub or leave fs pop decl fcoml mov jns jbe dec jecxz das clc jg pop sub jl xor outsl ret outsb (bad) push in lds or xchg popf repz stos mov add leave dec xor (bad) (bad) pushl cmp add gs and outsb push push sarl pop adc cld pop arpl daa enter push std jne (bad) sbb push scas dec popa jecxz push dec dec cwtl jecxz out push mov pop aas adc jmp lods cli lcall out hlt lret ds (bad) (bad) (bad) decl add jns outsl mov pusha sti add jle in dec roll clc xor arpl pop es pushf push dec dec add adc mov cmp lahf push push loope xor push outsb push scas mov mov mov jno xchg push inc jnp (bad) mov dec jns gs (bad) (bad) (bad) (bad) lcall movlps test outsb or aaa loope and idivl push push xor testb repnz push iret (bad) icebp sub movsb mov pushl (bad) lcall mov jae insb add lock loope mov clc decl lods dec mov test sbb enter xchg sub ljmp es jnp push sub stc push imul icebp nop mov xor lds (bad) (bad) mov adc faddp nop fidivl std mov add sbb and ljmp iret mov (bad) add adc ljmp mov sub sub pop xor or push jbe mov (bad) incl sbb out lret jl mov inc aas nop mov aam mov mov jmp mov mov (bad) aam jg add nop daa out mov (bad) pushf inc inc decl outsb scas lock adc subl mov xor int3 jl xor aas cmp adc (bad) (bad) (bad) sti imul in pop sbb (bad) popf lock shrl movsl xor mov mov decl jmp xchg stos in mov pushf dec std out dec push (bad) in scas es mov inc sub (bad) in jno stos add insl movsl inc push out adc (bad) lea mov (bad) (bad) jp jl mov mov je in mov cmp jbe outsl sbb fs mov bound pop lcall xor es mov gs xchg xchg test (bad) adc jmp and cmp data16 fadds test ficomp lock sub pushf aam adc mov add or xor rcrl dec stos js pop mov ss aam mov jbe clc ja rcr push and enter out jo stos pop call loopne xor sbb ljmp sbb fs (bad) pushl stos add test xchg icebp dec xchg lods pop pop imul gs (bad) mov test and clc (bad) (bad) (bad) decl mov xor dec rcll out pop in and sub inc int ret pop fwait in (bad) (bad) ljmp jnp sbb dec add stos fcompl sub stos jbe stos stos adc ret mov movsl lcall inc xchg cmp inc out dec rcll outsl ss adc add rclb outsb sub sarb fcmovu push js (bad) (bad) fisttp jbe testl decb add (bad) je (bad) mov dec (bad) out or test adc andl aas mov lret enter fwait sbb pop or call sub rcl cmp pop ljmp lock (bad) cmpsl jne jae sub andb cli lds scas repz (bad) aad sub imul sbb mov (bad) (bad) (bad) clc sbb or fs test unpckhps stos dec dec lods aam or out fs (bad) push addr16 stc inc push xlat (bad) out add add (bad) into xor dec or or ja ret pop gs loopne xor add fcos (bad) (bad) (bad) fnsave push mov sbb pop and aaa sbb pop bound sub (bad) (bad) mov fwait inc and and jne pop stos mov adc (bad) cmp jmp inc cmp pushf repz nop xchg xor inc lret jp (bad) (bad) (bad) jg mov or cmp aaa (bad) xor add enter mov dec movsb (bad) jmp add jno push mov or dec xor jo rorl aam (bad) pushl pushf nop adc mov mov push and (bad) cmp mov call mov test push mov int3 insl push in ja pop lds scas cli mov xchg cltd xchg add lahf mov push cli (bad) jg ret cmp lahf enter hlt inc and and adc or roll rcr std and mov (bad) decl or xchg mov inc nop jge jo mov jmp xor movl cli mov lcall sub jb mov mov push cld sarl (bad) std dec mov dec push cwtl sub ljmp (bad) adcl mov in in xchg jae scas cmp int dec cmpsb test jp inc inc nop and lods fsubl adc clc sbb sub xchg xchg jbe call lds dec push (bad) decl mov fisttp aad mov add cmp imul xor (bad) (bad) call bound outsb add cmpsl jbe into lods cwtl sub jg fimull xchg (bad) lcall push adc inc xchg cmp int sub push cld outsl clc fmuls dec addr16 xor in pop cmpsl xor jg insl cld lcall sub or xchg movsl in sbb (bad) decl mov xlat std fist push dec loopne jnp repnz clc cld (bad) call jb pop xor jae mov inc cmpsl sub mov test (bad) fnstsw mov aaa push in lahf mov mov in or movsb xor mov ljmp cmc sbb jge ds lret scas mov faddl mov inc daa pushf mov fsts loop cli xchg and jns sub ljmp mov add test (bad) (bad) (bad) mov imul pop das xlat push mov insb rcrb ret (bad) (bad) pushl clc arpl sub mov jnp and add dec inc stos dec scas in cmc mov push aaa ror lock (bad) inc imul jl sub or cmp mov int3 push mov das mov testb pop jnp pop fistp and sti (bad) (bad) (bad) ljmp je lods pop inc out mov fucomi jle popf mov push xor (bad) (bad) mov dec fsubr mov nop loop (bad) (bad) ljmp aaa dec adc xor and ret idivb xchg lcall sahf fstl mov and mov (bad) (bad) jmp mov scas lea mov xor jmp dec dec out int3 je daa lret lea stos std pop xchg add out hlt mov push (bad) (bad) (bad) ljmp adc push lods lods inc outsb in rclb cmpsb lret push or adc clc lret rclb out xchg shrb or ljmp sub stos (bad) (bad) inc xchg push fidiv adc mov xchg mov adc pushf dec je sub aaa pop clc jmp push imul jnp out ret decb xchg cmpsl sbb loop shlb or add call xchg dec add test lret aaa dec jecxz orl mov (bad) (bad) ljmp in mov outsb mov rolb xlat int3 pop mov clc (bad) imul (bad) (bad) (bad) lcall lods xchg push mov mov clc fsubs mov call or cld mov mov dec mov xor xchg adc xor inc or std test or into ds (bad) decl fsincos mov push add adc hlt mov mov push cmp pop arpl inc fcoms and jge int pop arpl cmpsb add inc call fcmove add cwtl imul mov insb in dec sbb aaa xchg pop add dec mov jmp xchg mov mov (bad) (bad) (bad) (bad) lods jl inc xchg outsl push stc add jne jge iret xor jp mov popa push fdivrp (bad) (bad) call adc ret pop lods push push add adc cli stos mov push (bad) (bad) decl mov ljmp (bad) clc stc sub push mov imul push pop in decl shrl test cld lret add cmp dec mov pop pop leave inc or in es cld into dec test xor ljmp pmaxub (bad) mov inc loopne leave lods dec push pop das mov popf leave stos int3 jnp in (bad) fild adc push addr16 movsb cld cltd mov sbb cmp sar (bad) dec adc inc dec std aaa loope jle add pop es outsl mov mov dec (bad) jg incl stos jp popf and andb cmp adc ljmp (bad) call leave xor andl lock (bad) incl sbb aam outsb push sahf ljmp mov leave inc push aaa inc pop insl ret int3 loopne aaa cld (bad) (bad) jnp sub mov movsb (bad) mov iret cmp inc aas or jp pop push repnz add mov mov or sbb pop cmpsl movsb mov fidiv mov cmp mov jns clc adc cmpb rcrb mov pop aad push in jg push enter (bad) test (bad) ja (bad) sbb and sub adc (bad) mov mov hlt (bad) pop xor dec ljmp arpl mov add inc mov cmp push loopne rol jae push adc xchg outsb push xchg into xchg or bound (bad) xor push inc (bad) lcall in sbb and cmc inc enter fidiv fdivr xchg push cmp (bad) incl mov inc inc cmp mov sub repz cwtl xor loopne pushl dec into sahf rcl lret imul lret fsubl xor movsl test pop cmp ss and mov xchg adc leave push in insl lcall jecxz fdivl bound pushf push cli jp je enter pop or (bad) mov dec fcomi inc push sub pushl nop rcr inc push stos xor dec adc scas fdivr (bad) (bad) call lret pop cmp jno ja jo rcll ds xchg pop jns mov leave (bad) pusha (bad) (bad) (bad) jmp scas mov (bad) jns xchg stc sbb adc sub xor push (bad) stos jmp (bad) out cli (bad) jl mov cmp fisubrl mov fcoms lea jmp add push popl (bad) call mov daa sbb or push in std mov adc stos dec xor dec (bad) call jl mov (bad) fcomip jmp (bad) mov sbb cvtpi2ps and or mov push cld mov push (bad) cmp adc hlt add pop test add stos or sahf add out xchg hlt sbb pop movsb mov inc sbb lret js dec adc fidivrl lret je (bad) (bad) jmp es cwtl hlt int3 out test int lods jp lret mov scas mov les (bad) adc dec int lret xlat rcrl (bad) cld outsb insb or pop scas shr jmp out xchg cmp sar lcall sarb jl sub sbbl into cmp pop pop pop mov je das xor sub (bad) lcall lret (bad) iret sbb push push nop ss lock call mov inc add mov push stos out push pop cmp call (bad) (bad) (bad) pushl es xor jmp (bad) or push das into repnz or fs xchg cmp fsubl (bad) mov and add test in (bad) call jmp ret jge mov pop pop xor sbb xchg test and ud2 ljmp xchg xor shlb outsl lahf (bad) sub (bad) mulb std incl add mov popa dec cli pop (bad) enter cmp (bad) pushl (bad) ds mov xor pop out xchg sub push sarl (bad) (bad) decl cmpsl pop insl loope repz jp jg jg cmc int3 dec xchg mov scas mov (bad) (bad) call movsl ficom cmp mov (bad) cs mov inc js cmpsl xchg mov adc pop push jg int3 test (bad) inc (bad) ja call outsb movaps push in jno cmpsb into mov aaa fcmovbe incl in mov adc push jnp xor cwtl fmul push cmp lret ljmp mov pop and xor (bad) (bad) call mov or push pop popf push stos je cmp sub out pusha sar mov (bad) (bad) decl adc (bad) xlat jae idivb mov stos mov popl incl fnop add xor sub loopew out leavew cli call (bad) jge jmp adc (bad) (bad) decl scas mov pop mov daa loopne mov (bad) mov (bad) call data16 repz cmpsl mov pop imul xchg xchg push lcall decl inc (bad) mov mov cmp insb cltd dec mov cwtl in (bad) (bad) test pop mov add push (bad) (bad) out scas test (bad) (bad) (bad) incl repz jmp jp sbb sub mov stos inc das xchg and fistpll inc (bad) ljmp push (bad) cli ja stc sub and mov or fucomip cmp outsl insb fimul (bad) pushl push lahf or (bad) aad jbe int3 add call ljmp loope pop sahf cmp jb rolb add jb or pop jae (bad) ret pushw mov and iret (bad) (bad) mov test and sbb inc mov (bad) pushl jmp arpl inc (bad) dec lret push lods loop jae or jecxz (bad) (bad) ljmp lahf sbb orb cmp xchg fbld das sub xor addr16 xchg pop (bad) xchg cwtl push pushf (bad) (bad) (bad) incl adcb mov outsb jecxz xchg movsl jne cmp mov cli sub (bad) lcall jns (bad) test icebp shr lods int3 push xor lcall push xchg inc repnz pop insb scas jnp push in sbb in movsl dec cmc dec stos (bad) (bad) movsl dec call rclb (bad) ljmp push out jb inc (bad) jne mov and hlt (bad) jne (bad) (bad) jns decl mov jns loop dec mov mov adc push cmpsb test imul ljmp adcb add enter clc loopne in mov dec js lret std sub (bad) incl inc out mov ljmp (bad) ljmp xchg in ret adc push xchg lret aaa (bad) (bad) (bad) incl aad jnp mov xorl stos into jne mov lcall inc mov pop adc push mov xor or ljmp fdivrl dec cmp xchg inc inc mov cmp enter add (bad) mov test cltd and jg mov cmp pop jmp imul mov ljmp pop dec fcmovnbe and nop sti cmpsb cmpsl inc das mov fild xor dec int3 in adc sub (bad) mov jle push outsl inc outsl sub ljmp inc mov clc fistp sbb sub or ds push cmpsb mov shrb push test adc jae mov or (bad) (bad) out sub fwait ljmp jg popa xchg sub sahf mov fbld jmp mov mov or insl les fxch mov xchg icebp mov sahf test add pushf nop (bad) (bad) (bad) (bad) in cmp and test inc fadds mov sti insl out inc ss dec pop dec std push nop push (bad) (bad) call xchg and (bad) rorb jne movsb or cmc pop clc fmull push xlat pop xor js test fimul xor movsb loop adc inc (bad) ljmp cmp mov and mov sbb cld out (bad) (bad) (bad) decl add pop cmp into repnz push sbb and aad or fwait sub sbb xor pop cmpsl mov (bad) (bad) (bad) cmp mov jns jle sbb dec jp inc cwtl jp lea xor jg add mov xchg pusha adc mov hlt shlb adc int xor loopne add sbb sub jge test (bad) lcall movsb outsb cmp ret ja pusha xchg mov add adc inc dec fs psrlq clc call les lock mov and sbb (bad) (bad) pushl xor inc jp mov fbld insl outsb sar cmp call nop icebp loope xchg dec cmpsb dec mov add (bad) (bad) (bad) (bad) js dec sbb cmp repnz push inc fstps jo add test push mov mov lods enter (bad) lcall jge mov mov popl mov rcrl lds lock push imul call icebp test sbb push mov push and clc ljmp sub stos add fcompl cmpsb xorb inc push in clc push mov lret or pop (bad) (bad) in jmp cmp imul jo adc icebp aam lcall popa out lds roll repz xchg movsl pusha sahf iret sbb xor (bad) aad push xlat dec imul add lds es cmp in mov ret stos int3 pop sub (bad) ljmp imul mov (bad) lret mov pop movl lcall loope mov jnp and xchg xor dec mov jp mov lcall (bad) aam add or adcb push inc imul insb sbb add test hlt gs add cmp (bad) (bad) (bad) cmp xor (bad) inc icebp rcrl add mov and loope inc (bad) pop cmpsb jecxz imul dec iret jle (bad) ljmp mov jbe sub std call pop jne cld (bad) mov sbb and mov mov aaa sbb sub lahf (bad) mov xor adc call jecxz xchg sar (bad) (bad) (bad) jl sub outsl push icebp push and jle repz icebp sub ret loope out std (bad) (bad) ljmp adc decl or scas sbb out push lods mov mov cmp adc adc pop cli mov inc sti lea cmp cmpsl ror adc pop fiaddl or pop push lahf mov sti cs mov (bad) (bad) call add sub jecxz fsubr lea cli out repz push aad xor (bad) (bad) (bad) call call mov push stc mov fmul mov lret lods das aaa add inc das les (bad) (bad) (bad) ljmp add std or sti mov (bad) mov les repnz (bad) (bad) (bad) fst aam std xor popa xchg std add dec mov sbb pusha and fdivs sbb xchg (bad) adc test cmp xchg cltd clc (bad) (bad) jmp push xchg shrl lods pop in sub mov jne or push add mov lahf (bad) int3 push (bad) (bad) (bad) lcall cmp das loop xor add (bad) or icebp and xchg sub (bad) (bad) (bad) mov push mov dec mov in lods push emms arpl call add je dec int3 cmp pop jne ss (bad) (bad) (bad) clc pushf (bad) jb repnz addr16 inc dec sub fwait aad xchg inc sub (bad) (bad) (bad) push sbb pop fwait mov imul bound pop add mov repz xchg jno sub ret popa mov aam push cmpsb xor add xchg dec mov sbb (bad) ljmp cmpsb mov dec push outsb sbb sahf sub mov dec (bad) (bad) (bad) fisttp sbb xchg xor inc mov mov dec scas mov (bad) fildll aad xor stos cmp adc (bad) (bad) dec jg push out (bad) sbb add fisubr jmp cmpsl (bad) shl mov cs (bad) jmp and xor jp fidivrl dec xor loop xor (bad) mov ret cmp or sbb xor xor cli (bad) pushl in loopne mov lahf mov cmp jb (bad) jle jo outsb lret lcall insl mov inc xor and (bad) (bad) incl mov out or or adc in cld fs (bad) (bad) (bad) (bad) fsubs add mov mov movsb scas fdivrl into sbb sub (bad) (bad) (bad) (bad) cmp mov jecxz imul push ret pop push push pop pushf push clc add pop inc (bad) (bad) (bad) decl fucomip jmp add cltd (bad) adc push faddl inc lds (bad) pushl sahf jmp rcll jns mov mov sub mov (bad) (bad) jmp je sub sbb loop sub cmp sub and push cmpsl mov xor xchg pop (bad) (bad) (bad) (bad) jnp ss cltd enter sub sbb leave cli cmp adc pop xchg jg cmp out stc fwait cltd dec push aam roll (bad) (bad) dec mov pushf mov lods rol jecxz das jg fnstcw and nop arpl insb push xor fldl fsubrs jbe cld sbb (bad) (bad) ljmp or scas icebp or test gs mov leave mov aam (bad) (bad) (bad) lcall add test imul mov dec out xor pop dec ja hlt (bad) mov add loopne repnz movsb test call je jecxz call push add push popa mov loope or lcall loope inc fsubl cmpsb or movsb test int3 sub (bad) (bad) lcall scas and dec test rcr loope jp scas inc negb adcl (bad) (bad) (bad) incl pop pop inc lods adc test scas mov and nop add jb iret pop mov or incl xchg adc nop (bad) cmovl or push xor fisubrl and xor test cmc or out pusha and sub mov lcall add mov and mov jecxz xchg js gs fildll cld stos fidivr (bad) not xchg and pushl jns jns mov pop sbb cmp (bad) (bad) mov jbe jl sbb mov jp frstor cld (bad) fisttpll int mov outsl les outsb mov fistp mov (bad) (bad) xchg mov int3 (bad) (bad) (bad) (bad) out xor xorl sub and je ljmp ds jg test inc call rcrb xchg jb out test incl dec mov inc (bad) loopne pop inc aam jmp (bad) (bad) ljmp outsl push or movsb andb pop sub pop aad js and icebp xchg fs lea jae iret mov adc sti jl sub mov xor (bad) (bad) decl xor insb push les ret psraw pop (bad) mov cld dec lahf dec or mov loop (bad) (bad) (bad) jl mov mov lods or ror repz push sbb jl sarb adc cmp push lds pusha (bad) (bad) (bad) call and pop fsubl mov pop (bad) mov mov cmc mov cli mov (bad) lcall xchg xor fbld leave jb mov icebp jnp mov jns lock jne push int3 imul imul mov int3 aam cmpsl xor sahf popf cld (bad) (bad) jmp inc cli push push lret loop pop pop sub leave or in cmpsl cld pop imul dec ljmp imul sub loope adc lcall outsb addr16 adc cmp or inc jle in (bad) (bad) (bad) fsubrs inc arpl push sbb fbstp fwait in push (bad) jg jp stos rolb jg xor gs fs decl push (bad) shlb cmp daa rcll xchg add xor xchg pop dec mov adc (bad) (bad) mov push add xor mov mov test jbe or sahf shll sbb dec xchg sarb mov cltd fbld out xlat xor pop mov ss out xor (bad) (bad) mov xor outsb sahf ss pushf inc in adc pop and xor xchg incl cld push mov inc sbb shlb sahf (bad) lcall inc mov sub adc mov xor (bad) (bad) push data16 xor inc mov jb gs ja aas clc (bad) mov fwait out cli cbtw add add cwtl daa int3 cmp in dec mov incl or sahf mov push insb idivl call xor push (bad) mov (bad) (bad) decl mov stc xlat test je rol adcl sbb xor jb (bad) ljmp stc add incb insl mov stos xchg (bad) icebp (bad) (bad) ljmp sub les repz (bad) ljmp or nop jg sub fisub in cmp push test inc sub popa mov pop mov test arpl lods push jnp outsl in loop inc fildll call loope mov int aas lds cmpsb call inc push mov sti pusha in popa rcll fistl sbb (bad) (bad) (bad) call mov dec ret cmp add subb daa mov dec fsubp hlt jl (bad) (bad) pushl out sub jne test jecxz repnz pusha cltd stc cld out leave fnstcw fsubrs popa nop or (bad) (bad) (bad) mov ficompl jo cs and mov push lock cmp sbb inc xor enter xor or (bad) xchg push (bad) (bad) (bad) pushl stos mov insl mov pop inc js jns (bad) adc add ret lock incl dec loopne jbe insb fisttpl mov mov imulb jp (bad) (bad) (bad) fild jae imul std inc inc push dec inc sbb lods mov sahf stos daa ljmp add mov stos jo push stos mov leave push call mov es (bad) (bad) jle stc (bad) fs sbb icebp das push insb cmpsl daa lret (bad) call cmpsb test jl ja cmp imul cs push sub inc cmp (bad) jg xchg sbb int outsb add gs in sub subb (bad) (bad) jmp inc sub int adc shll std or ret mov adc (bad) lret mov cmp mov mov mov stos or cli push hlt leave lcall mov insb cmp adc into das fimull (bad) aaa push push pop cmp and pusha jl addr16 push ret sbb xchg mov jg (bad) aas mov fidivr nop js das (bad) mov xor inc push mov dec pop push std idiv ret aaa cmpsb mov cmp out xchg cmp clc add lods xor (bad) (bad) (bad) lcall inc push fstps out in or xchg fsubrp loopne iret aas out (bad) xor xlat incl outsl mov adc push adc xchg adc jae lds test dec data16 fdivr (bad) (bad) pushl dec cmp xor or push lret movsl and cmpsb cmpsl sub imul jecxz push scas (bad) (bad) ljmp mov lods stos jb push and gs rcrb push jno mov and scas cmp clc and (bad) (bad) ljmp ss push cltd repz cmc jno cld jbe std sbb test mov mov (bad) (bad) jmp ficomp loopne loope inc fs adc push insb cmp xor add js push jle pop in fsubl cmp jo (bad) (bad) (bad) pushl sahf (bad) cmp push (bad) or push iret mov mov fadds xchg stos stos (bad) (bad) (bad) mov fdivr fstpt jle rclb cmp dec sbb fwait inc jmp ret cmp stos push ret xchg dec or adc repnz mov xor or mov push ror mov imul pop mov or (bad) push push add pop mov push push xchg inc push addr16 xor mov (bad) in xor dec pop mov mov add inc mov cmpsl mov mov adc es sbb xchg cmp lods cmp decl dec fbstp loopne repnz mov cmc (bad) ljmp xchg hlt test (bad) fild xchg sbb sti ss (bad) adc inc jg into popf cltd and cmp jo mov je cmpsl cld pop es push mov (bad) (bad) (bad) lcall pop pop cmpsl or aaa mov insl mov into loope lds add jmp dec lret and jg (bad) (bad) lcall ss ss inc in cmc fptan pop sbb push addr16 pop (bad) (bad) (bad) (bad) mov pushf movsl xchg jle sbb sbb mov ljmp xor pushl add jle lret loopne xor dec iret xchg xor aaa xor call cmp shrl sbb dec cmpsl xchg sub jle jmp les jne (bad) (bad) decl and sub mov cmp imul sbb mov pop cmp mov dec fcmove test (bad) decl out xchg andl dec bound pop push jno testb xchg mov js imul jmp add (bad) decl add les xor cwtl fsubrl (bad) incl jnp xchg mov push sbb lods aad inc adc add std ja rolb dec ret and jg inc loopne pop sbb xor pushf insl sbb inc ret add std (bad) call push mov (bad) inc mov test scas (bad) (bad) jg nop out push sti lea in xchg ror mov pop (bad) jb jb xchg in pushl loop pushf jne and jnp (bad) lods out inc enter mov sar les pop (bad) lods fwait cmp js leave (bad) idiv (bad) (bad) incl mov imul xchg mov adc jle out mov bound push (bad) jg ljmp push mov out into jl out xor push in loope (bad) (bad) (bad) ljmp sub mov and xor inc (bad) jle pop icebp nop dec inc cmpsl pop movb dec jne outsl cmpsb test and pusha das loope mov (bad) (bad) jmp sti cmpb js xlat add and and ljmp or adc (bad) call cltd add and cmp mov lods in (bad) xchg adc (bad) ljmp mov mov popf add aam popf das scas mov (bad) ljmp cli lahf cmp sti dec xor adc inc jne pop or xchg sbb stos iret cltd jno lea hlt add stos push ret mov cli (bad) cmp (bad) jno dec xchg lcall mov and (bad) (bad) call (bad) lar xlat jb mov dec lds dec roll imul inc leave ss xchg (bad) (bad) mov mov out ss cwtl je (bad) (bad) (bad) dec pushf mov xchg or fs je cmp addr16 aas add cld and in mov pop cmpb dec out hlt xlat pushf adc mov jp and mov xor or ds or dec mov and lcall pop adc cmp ret push sub sbb jp sub mov push mov xlat add adc push adc jb pop (bad) out in (bad) (bad) call mov fucomp je out lea arpl enter sub mov dec fdivr mov (bad) inc ficomp jmp add xchg dec mov int3 scas imul push sub push fbld pop add cwtl adc adc jo mov jg xchg std pushl imul adc add jg xorb cmpsb mov inc aas pop (bad) mov xchg sub pop and add xchg xchg mov add (bad) (bad) sti push lock sbb jmp pop xchg in arpl (bad) jg sbb inc push mov cs hlt cmc incl jno in pop imul and aas mov sub mov (bad) (bad) lcall lcall jmp and push pop inc inc (bad) (bad) out adc in clc (bad) (bad) mov clc or lcall jge,pn cmp inc and xchg in es rorl fs mov (bad) mov adc and insb repz xchg (bad) sub insb jne,pt (bad) (bad) mov adc pop ja push pushf adc xor (bad) dec or (bad) (bad) call or loope add sbb cmp lods scas xor push inc addb mov rclb adc dec sti jnp (bad) bound (bad) call sbb int stos std aam out jb push mulb (bad) pushf (bad) (bad) (bad) call repz dec (bad) and lods xor repz cmp fdivl in je inc pop jmp xor (bad) (bad) jnp lahf stos mov fistpll cs mov cli mov popf sub cli fild adc imul decl xchg in adc (bad) int3 scas mov sar aaa sbb push addr16 movsb dec adc stos or cmc jmp fs mov dec xchg sar (bad) divl pop pop mov jne pop dec mov dec cmp inc add (bad) (bad) aas out fsubrp (bad) mov mov cmpl and popa sti outsl bound test push ljmp mov mov lds push add cs pop call pop inc mov sub lret xor daa xor insl repz add out push pop pop jl nop fcomip (bad) jmp adcl xor daa ljmp jb cmc cmc sub jecxz jo push push xor adc or dec jmp adc sub mov add cmp mov outsb enter push pop ss (bad) call xchg sub cmp dec xchg cmp cld outsb es (bad) out aam jae loope popa scas jecxz adc lds cli fcomip ljmp stos rcrb loop push lods les out (bad) incl xorl mov insl fisttpl (bad) adc jae (bad) (bad) out cli adc dec dec mov scas jmp popf sub lret in add and sbb dec addr16 and fld repnz sub (bad) cmp jge mov bound xchg aas daa push lret pusha inc aaa (bad) (bad) (bad) incl push leave dec adc cmp sub jb xchg pop push ja lds cli das sar jle push out mov insl xchg pop (bad) (bad) call dec mov fimull aam int and repnz cmpsl imul pop mov test (bad) (bad) (bad) incl pop in repnz adc dec and mov cli test aad xor (bad) (bad) (bad) incl mov out xor outsb ss lock (bad) lds insl mov ja shrb cmp (bad) jl sbb ja adc adc xor and and (bad) mov jns fwait int3 (bad) test clc pop loopne and aad sub and sarl aam or pop fstps add (bad) lcall xchg je inc mov push mov test daa mov xor popf mov jmp push or pop fisubrl push push sub das sar or enter stos and add aad inc cld (bad) (bad) in (bad) xchg xchg sub (bad) sub nop aaa ret sub stos loopne xchg pop cld mov in and pusha std ret hlt sub lock (bad) jg flds loope,pn sbb or and xchg cmpsb adc (bad) (bad) decl scas stc mov fcomps mov out mov outsl xchg sub lahf sarl nop lea in xchg (bad) jae push (bad) lcall lods test incb sub mov dec sbb mov jp and mov (bad) out (bad) hlt xlat jp aad cmpl jae stos mov fiadd inc sub fucomp std mov jp testb ds (bad) (bad) pushl sahf push fidivrl cld add sub sahf cwtl jmp dec adc (bad) repz mov or or xor mov inc test push lea mov dec addr16 mov dec sbb xor mov cmp es hlt mov jmp push fdivr cwtl enter add lods mov (bad) (bad) mov pushf sbbl lret sbbl andb call lods (bad) push nop pushf (bad) jno scas push adc stc adc std sub in (bad) sarb stc cld (bad) (bad) (bad) (bad) js inc adc cmp mov test push insl inc nop mov xchg movsb pop sbb lcall jbe mov rcrb andl fwait sbb inc ret inc xor inc mov hlt lods adc (bad) mov lods into mov (bad) stos cltd jle into mov scas fwait mov rcrb (bad) lcall adc mov dec pop aad (bad) lea int3 pusha inc (bad) xor fistl clc ljmp dec icebp dec fistl adc jo imul push pop (bad) (bad) (bad) jmp imul lcall (bad) aaa mov jne xor je ss inc inc push fnstcw (bad) decl hlt or mov call stos aaa add pop push pushl pushf and adc insb loopne push addb iret lds inc ret lret das std (bad) (bad) (bad) clc sahf jge out push mov mov adc mov dec out shrl lahf test imul outsb out sbb shl lret (bad) lcall das dec add jl fsubrl inc and cltd mov cmpsb sbb (bad) (bad) (bad) call imul sub imul mov loop iret (bad) out clc call cs outsl mov mov int3 or test xchg not popf (bad) (bad) (bad) call fnop and nop add jp sbb cmpsb pop adc pop jno test std (bad) (bad) incl fiadd call js in mov cmc repz jbe sti mov sbb ss pushf pop jbe repnz cmp jb mov scas movsb movsl pop add aad arpl push xchg add cld cli mov incl das leave loope mov push or lds int jbe mov mov cmc ljmp out adc mov scas xchg mov inc and cld incl insb jp fdivrl mov sub jno cmp lret (bad) sub bnd fisttp into fcomps ljmp pop mov add pop add repz pop (bad) (bad) (bad) decl and ss int3 fisttpl scas pop jo jns push int (bad) pop inc jp outsl sarb (bad) (bad) (bad) incl cmp add pop repnz push outsl outsl icebp mov xchg lods cmc cmp mov and mov jns pop (bad) (bad) (bad) call in ret loopne jecxz inc lock mov ss jecxz fildll mov lods sbb cmp (bad) (bad) incl inc negb or mov mov scas and sbb lods cmp add loop imul outsl cli decl cmp pop lock mov xor mov int3 cmp jns orl dec mov add movsb cli add popf mov and mov iret mov call pop fdivrs push mov sbb dec add or fadd dec inc xor incl push hlt rorb add jg jmp mov into dec xchg inc fwait aas mov (bad) lcall hlt popf xchg bound test jb imul jb sbb sarl test cmpsb in fs out sbb aam fildll loop addr16 xor push fidivrl mov (bad) pushl bound jp and shr testl lcall add rclb push outsl leave imul outsb leave (bad) (bad) (bad) call push stos sub jmp push mov mov or jg xor jmp das das fidivl jnp add (bad) (bad) push cmpb test mov jmp fcmovu sbb (bad) outsb (bad) fbld je sbb out mov dec xchg out in (bad) decl jb add jge push imul pop (bad) cwtl mov jo repz jo pop fimull push pop (bad) mov xlat (bad) (bad) (bad) (bad) ds out lods adc mov adc clc mov lcall fisubr push lret icebp (bad) ljmp loop fwait lods push in dec in adc dec pop into sbb (bad) (bad) (bad) (bad) incl mov call xor shrl das aad fcomp and (bad) (bad) call scas sbb es mov xchg mov pop rorb std pop (bad) ljmp add ja test aad sti sub (bad) call shr fldcw jmpw das pop sar (bad) (bad) call fsubl push imul pop sahf add inc inc rclb addl movsb inc lret cli ja popf add packsswb dec or imul dec inc addr16 add in das fsub inc inc dec jno xchg icebp (bad) jmp xor fiadd lods sub pop cld mov nop roll inc inc push in icebp sbb dec rcrl cmp mov jbe int hlt add xor mov out cmp sub ja xchg push in ret enter incl pusha (bad) sbb fistl loopne xor fiaddl les (bad) lcall sbb pop lock sbb jp xchg pop jne push (bad) jmp cmpsl dec lods cld test das mov or xor (bad) (bad) (bad) fbld test (bad) iret daa cli sti out mov movsb cmpsb push xchg aaa call jl call add test addl jle (bad) test mov mov das popa ds fcoml jae cld cli sbb in mov je mov xchg outsl xor inc inc sub inc (bad) (bad) (bad) jmp pop pop push inc pop addr16 stc insl mov jnp cmpsl ret nop jmp mov xchg sbb xchg stc ds pop scas ja xchg dec push xchg cmpsb xor imul lcall pop xchg lods movntps lret add sarl out pop aaa pop cs and nop (bad) cmc stos in inc (bad) (bad) (bad) jmp pop and adc mov gs fcomp push dec nop rorb cmpb push dec (bad) fistpll movsl adc orl out jbe hlt imul into hlt xor mov jae (bad) lcall cltd aas rclb or leave into adc test loop (bad) incl adc push dec mov adc fcoms (bad) (bad) (bad) lcall add out sub sub shrl (bad) rcl push and dec jbe lods (bad) (bad) (bad) pushl lahf mov xor fdivr adc mov pop std (bad) and das push adc test xor outsb loopne pop cld (bad) call mov ret sbb push or push mov add jecxz mov push fdivrp (bad) (bad) ljmp ds dec pop mov rclb jns push repnz scas jnp repz (bad) mov in cwtl jmp pushl fld cmp mov test out mov scas mov pop lods ds mov sbb mov lea jne inc out lcall mov (bad) jp or mov in push mov jmp test add in arpl (bad) decl lcall adc jns in stos mov jg add std or lcall push (bad) (bad) (bad) (bad) mov mov enter cltd push in push dec cmc mov pop cmp mov mov pop xchg and cs fmull mov (bad) cwtl mov das mov data16 and fsub fldl les and scas addr16 jle dec fisubl push (bad) (bad) (bad) pushl pop jbe and fsubr mov xor lea xor (bad) (bad) decl sar (bad) push inc or clc or or mov lock xchg sub cmp lods adc ds and add cmpsb rcrb fsts (bad) (bad) ljmp pop sub jmp les mov jecxz leave out popf imul adc std (bad) (bad) call mov mov mov mov xchg imul fistpll rcll push (bad) lcall push jbe inc (bad) daa imul lods imul testl repz sar (bad) (bad) jmp (bad) out mov mov sub adc cwtl dec cld sbb adc (bad) (bad) (bad) decl mov pop mov jns and adc dec xor aad shlb aad xchg (bad) (bad) (bad) call mov pop adc sarl or aaa mov xchg shrl (bad) jg (bad) insl insb add (bad) lods add sub test cmp and les lahf in in (bad) (bad) (bad) mov sbb jne jno jmp pop clc mov and jb stc push popa call loopne dec shrb xor divl cmpsl popf push movsb mov sbb dec bound cmc or mov inc push sbb or cmpsb cmpsb dec rcll in (bad) out lock (bad) (bad) dec sbb add or lahf call adc xchg pop arpl cmp cmp push push clc icebp jecxz sub and (bad) divl or sub (bad) (bad) ljmp dec loope dec test lea fiaddl mov inc popa push jno add (bad) (bad) inc adc nopl lcall mov cmp roll xor add stos rcl jp into scas sbb xor sbb inc mov xor not push sub sub mov mov (bad) jg sub repnz push pop cmp mov (bad) jg push cmp stos cmp pop sbb dec into sub test jno cwtl xor das sub (bad) (bad) jmp adc or je,pn mov fucomi fxch lods rcll add (bad) (bad) call outsl inc xorl xchg daa cwtl lds in inc call jge push lock xchg cmp js mov dec (bad) (bad) incl mov mov cli sub push xchg popa xor jno (bad) mov (bad) mov add movb mov add in jbe dec dec in mov pop mov sahf mov test decl mov (bad) fs test (bad) (bad) (bad) jg sub adc pop xchg jmp and rcrb xchg and adcl (bad) (bad) (bad) jb add es push or ret fbstp jge or arpl pop lea in (bad) (bad) (bad) ljmp out ds xlat mov popf push push je sub xchg imull mov mov scas decl aad and into insl xor arpl mov enter hlt je aam sbb push cmp and (bad) (bad) (bad) mov sbb xor cld ljmp pusha xchg add int cmpsb pushf scas lods mov pushl jecxz xchg push add jne add sub repnz mov popf sbb ret sbb icebp jmp or add fsub and push (bad) (bad) (bad) pushl cmp sub test fisttpl inc popw mov inc sbb jg mov (bad) fcomps pop out dec mov lret cmpsb add (bad) (bad) ljmp jae stc cmp icebp jne outsl cmpl push push inc test xor push and jo or jg lods xchg loopne mov in lret jmp leave cmp (bad) (bad) pushl aam shrl outsb dec sub mov sbb add push sbb clc (bad) ljmp mov xor xchg rcrb (bad) negl adc xchg jb stos std jmp lcall daa and adc inc test (bad) sti stos xor add dec pop add mov nop mov rcl loopne inc adc (bad) (bad) jg cwtl push cwtl js pop scas fidivr xchg add inc enter sub mov cwtl shrb jo mov loop (bad) test movsl mov mov cmp (bad) call std jae stc std je jo loop jle mov lods mov add daa (bad) mov sahf sbb fisub cld mov (bad) (bad) (bad) call mov daa push push rcl jnp es ret stos call adc scas xor or mov ficomp lcall inc push popf or fildl or jns or pop cwtl rorb outsb sbb push jb scas clc jmp add mov pop sbb adc test hlt (bad) ljmp pop rcl xchg xchg in adc call mov push or xchg orb sbb insl rcrl xchg mov (bad) (bad) (bad) fistp lods push mov into aaa pusha inc add mov xor (bad) enter (bad) (bad) ljmp mov lock data16 jge or jge adc jge fbld incl and leave je clc das clc cld ja pop enter (bad) imul pop xor sub js mov pusha leave jge sbb mov cmp push cmp cld pop mov (bad) (bad) fcmove cmc gs loopne aad jl test ja (bad) (bad) decl sbb sti xchg pop fldcw inc ja in icebp dec add add mov dec decl dec das (bad) addr16 jge das (bad) int pop (bad) jmp (bad) fnstsw scas (bad) xor into dec decl dec adc or ficomp sbb xlat ljmp inc or in outsb mov (bad) (bad) fistpll aam sbb ficoml pop fcmovnb std test jnp jle in pop add xchg scas aam pop (bad) (bad) (bad) lcall insb sub push sbbl icebp pop mov fwait or or dec jle bound adc loopne xlat ret adc mov jbe ret pop enter pop icebp pop (bad) scas fcompl push push aaa jne lea (bad) jmp dec insl imul inc xchg fwait (bad) or jne scas sar ljmp cmc pusha dec outsl fnstsw pop aaa or aaa jg push scas scas xlat data16 (bad) mov movsl (bad) bound cli ret (bad) (bad) cmc (bad) aaa xor cmp and in sbb cmp mov (bad) (bad) mov jns xchg xchg dec push ret and icebp inc jge fnstcw mov call xchg stos pop cmpsb dec mov sbb cwtl and pop cs incb mov ret inc xor (bad) ljmp xchg mov jne and fist sbb or cmp inc adc das es push and adc cwtl int3 or ljmp cli lcall add jns adc scas cmpsl bound pop imul adc add mov fsubs sti fwait xchg stos pop clc (bad) fnsave mov xchg push inc fwait cmp not adc decl ss add inc fcmovne (bad) xor insl dec hlt (bad) fild popa mov in xchg pop mov (bad) decl cs sbb pushf mov sbb mov cmpsl inc mov (bad) pushl stos mov test gs and loop xor pusha dec pop aad push (bad) (bad) push mov scas (bad) in stos pusha mov test fiaddl mov adc mov (bad) (bad) (bad) jle cltd (bad) add cld nop xor test push or mov or inc aam dec lea mov mov push mov out dec mov xchg loop lds out sbb sub sub (bad) (bad) (bad) pushl jnp mov mov xor (bad) jge jl dec mov cmp add ktestw sbb arpl repz (bad) cmp xchg jbe adc in (bad) (bad) jg jmp sbb lahf xchg xor and fistl jle pop bound (bad) (bad) (bad) (bad) out ss rclb add sbb add (bad) mov pop xor jno test (bad) (bad) (bad) pushl int aaa out ljmp sahf imul ret (bad) mov mov cmpsb push (bad) loope xor (bad) (bad) jmp adc jl data16 aas sub test insb pushf ljmp aam enter and sub data16 pushl nop pop pop jp hlt pop aad (bad) (bad) (bad) pushl mov lcall xchg fsubl mov daa mov (bad) pushl adc cmpsl cld and les and subl mov dec or push xor std mov push xchg mov cld or dec dec mov jp inc push xchg scas cli vcvtsi2ssl mov push dec pop push (bad) (bad) (bad) (bad) jl ljmp lods or add lds pusha xchg push repz sbb incl sbb ret xchg lea pusha lock idiv sbb cld gs movsb lock (bad) (bad) in outsl pop dec sub push test mov aam and xor (bad) pushl cmp outsb mov push dec aas (bad) lret lcall fcomps or ret push out clc (bad) (bad) fnstenv xchg cwtl stos push ss lcall scas ret cltd push push scas mov icebp (bad) (bad) (bad) sti add out cltd and pop aaa jecxz lcall js (bad) call xchg xchg ret pushf daa addr16 sub xchg fnop or cli or out pop (bad) in mov and cmp xlat xor push loope dec push mov pushl addr16 mov mov dec fdivr (bad) ljmp faddp mov leave cmp gs inc xchg push sbb fwait daa je pop and mov or fnstenv jo cmp sarb jae lds mov loop (bad) (bad) push cmpsl and or mov out int3 std sub mov in jg xchg dec std jmp faddl cmp jmp (bad) (bad) (bad) jg in fadds inc popa cld leave mov icebp fimul movsb addl push cmp aad stc push xchg movsl (bad) inc inc mov jl and pop dec pop xchg (bad) (bad) out inc pop stos inc out lret mov dec jmp lcall fidivl pop inc aaa stc fbstp dec jp es cmp roll das add int push mov sbb fwait and sbb add lock jge push cmp sub pop dec sbb jp sahf sub mov sti jae popa cmpsb clc outsl mov push sub pop cmp aad out and dec sbb xor ljmp adc decl test pop jo popa mov fwait ret jmp fstpt xchg imul pop jle stos mov mov jb rol cmpsb push dec inc sahf (bad) repz enter adc pop jge outsb sub push in rcl icebp aam (bad) (bad) call stos in insl clc outsb and xchg mov divw sbb roll or aas mov (bad) incb jnp fs xor into lret mov xchg fcomp mov push test call push out daa (bad) xor jns addr16 (bad) (bad) (bad) mov mov pop pop xchg inc outsl insb lods and fisub xchg les out ds cmp (bad) (bad) call hlt pop in int3 add jge pop adc cmp (bad) out pop and aas sahf (bad) (bad) (bad) (bad) mov pushl sbb stos jle int3 notl jne out lock ljmp (bad) out clc dec jg (bad) mov jae iret jp push cmp pop aas pop sbb pusha (bad) (bad) (bad) ljmp dec cltd out sahf push push sti mov in pop lds sub fistpll pop xchg int3 mov (bad) call sti inc sub daa notb jp xor mov (bad) pushl std add jge fbld lahf test mov fistp loopne pop mov mov push stos dec (bad) jbe push pop or mov insb jg and inc sbb (bad) (bad) (bad) (bad) fldenv jle push (bad) xor jns in inc mov and xor mov xor (bad) (bad) call add and sub mov mov (bad) (bad) (bad) decl pop xchg cmp inc xchg lret add mov mov and or cltd (bad) (bad) (bad) ljmp pop addr16 sbb jle mov in in sbb ret xor jecxz or push into icebp add and add cmp (bad) (bad) jg je push dec js (bad) sahf lret std jnp cmp les je mov xchg fisubr (bad) (bad) call or negb push mov xor dec jbe add in pop or sbb mov and xor sbb dec cmp repnz loop jmp mov mov stos adc xor jno dec adc (bad) (bad) pushl jg sub pop fxch adc mov inc fs xchg lcall sar push decl lock mov lock mov (bad) inc pop repnz jno add inc inc inc test sub push out mov mov decl inc int3 bound out jle mov pop cmc incl mov mov ret mov out push (bad) (bad) (bad) call mov mov int3 mov addl pop rcl cmpl inc jg add fxch xchg push movsb xchg sbb jg stos mov xor xchg add pop jns (bad) (bad) lcall (bad) xor cmp sbbl inc (bad) xchg mov cwtl in jns jmp inc and (bad) (bad) (bad) cli (bad) out inc fistpl movsl mov or jp div call out sbb (bad) (bad) push cmp or lods push mov sar and cmp push mov adc lcall dec push dec (bad) sbb ret shll ficomp and shr xchg lahf pop aas (bad) inc sub clc (bad) jmp adc add cli outsb xor xchg sub test mov (bad) (bad) incl mov dec mov outsl inc fnstenv mov decl loopne (bad) mov xchg jg and xor (bad) dec outsl pop rcr xlat and bound ret pusha dec loop addr16 (bad) (bad) xchg decl (bad) (bad) jg cmp inc xor lcall lcall mov mov sar ljmp push cmc out push cltd pop inc ficompl jle dec in cmpsb dec push arpl sub call insb in rorl imul add cmc (bad) es ret daa xchg nop icebp out cli decl stc insl fild (bad) imul inc xor (bad) call test shl movsb fs fwait lods xor xchg sub jmp std mov ret imul mov test out outsl fstpt or (bad) (bad) out cmp dec xor mov ja fdivrl cmp pushf push into lcall (bad) stos rcl pop (bad) jle (bad) insb flds addr16 fstpl decl pop sbb mov cmc mov jecxz or (bad) (bad) mov gs and xchg ds xchg pusha cmpl arpl jbe jmp (bad) (bad) (bad) lcall loope rcrl and movsl and or fidivr dec mov xchg clc in add popa push call inc add (bad) (bad) ljmp and jne push lret jecxz lahf jcxz push scas mov in or (bad) clc ds mov inc sbb out scas cmp inc test (bad) lods call jl push xorl xchg jae (bad) (bad) (bad) pushl sub mov cmp sub and jmp fyl2xp1 sub loope and sub mov jns stos sub fucomip lret xchg fsubl fcmovnbe cmp cmp add sub cmp cmpsb (bad) (bad) call notl arpl push add sarl cmpsl sahf popa xor ret pop loop sbb cmp inc incb mov mov add out and clc jg push cmp jle fwait xor int3 pop fucomip mov (bad) call and les scas ja push add mov div adc and decl or pusha ret nop xchg dec push fcom jmp jb fcoms fxch pop cltd jbe dec mov pop dec mov inc xor sub adc ss sbb (bad) (bad) pushl out mov lcall nop out xor push or mov xor (bad) (bad) decl inc sti cmp cmp and push cmp mov adc xor sbb or fcomip decl pop push test clc cmpsb jp,pn leave fmulp jge aad incl sti adcb fiadd dec mov inc pusha cmp and jge pushf mov je jno ss out ds mov push adc popf sbb cwtl mov xchg fsubrl (bad) jmp sbb dec insb push cmpsl inc std incl fdivs inc lods push xchg scas mov ljmp gs iret lret and xlat jae xor ja cli sarb (bad) (bad) mov pop sarb shrb rcrl leave xor add das nop loop scas leave jbe fucomip insl data16 mov enter adc jno lods add insl dec mov (bad) ljmp pop xchg lcall mov jne sub je lret lcall pop sbb cltd xchg (bad) fistl aaa arpl xchg fiaddl (bad) ljmp mull inc sub lods push hlt mov (bad) call jo rclb lea cmp cmp xchg mov pop push loope es scas or mov ficoml in or (bad) (bad) jmp insl cmp mov sbb add sbb and lock xchg mov aam fild xor aaa (bad) jo or inc sar (bad) (bad) pushl inc sbb stos (bad) cwtl xor inc out test sahf inc out sub dec (bad) (bad) decl dec loope and popf pop lods xor (bad) out (bad) fisttp mov cld nop loope xor xchg and cmp cmp (bad) fld and fdivr in add and out cmp mov dec cwtl dec cmp jl jg decl icebp outsb cmp jno jae int3 (bad) ret push push imul int sbbl (bad) (bad) aaa push pop mov dec inc test aas push aas addr16 je xlat cwtl jns iret cs (bad) jg and add mov and dec cmpsb xor fucomip sar (bad) (bad) incl fwait sbb mov pushf pushf xor jmp fild orb mov push leave or fistp pop fstl sub hlt (bad) loopne (bad) je dec jp popa mov (bad) lea (bad) jmp jecxz xchg push scas in jne adc inc jb inc dec scas (bad) iret rorl lcall adc adc dec xchg push (bad) lret jl sub lfs (bad) mov stc mov pop ljmp jns push lock mov out push mov sub add jmp bound jp cwtl mov pop shl cmp in das add sub inc pop dec (bad) (bad) pushl popf stos push scas cmp ja dec (bad) xchg ret or flds xor out add mov sub imul mov fimull clc call push imul mov scas shl mov std (bad) (bad) incl mov adc mov roll lods mov inc sub loop mov add (bad) (bad) call xor jecxz pop pop add add or jnp rolb xchg sub cmp xchg and loope (bad) decl rclb in push pop aam dec sbb adc jmp dec mov loopne stos mov add mov push push push test push shrb lock add jno add lcall xlat mov movsb ja inc loope add sbbb xor inc jmp mov je push xchg add rdpmc jb or nop stos dec jno ret inc mulb cs (bad) (bad) mov movlps les lds inc add les xor (bad) (bad) pushl inc jbe mov mov or fistl or mov nop (bad) (bad) (bad) (bad) clc loope divb lea push pop add nop or and cmp xchg adc int mov loope mov and pop dec lcall add push fistpll and push arpl cmp idiv xor outsl and (bad) (bad) (bad) ljmp sub pop lahf out cltd inc mov popf data16 aaa lcall sub dec (bad) (bad) (bad) decl es jo arpl mov sbb repz scas sbb leave mov (bad) (bad) (bad) call and xchg lock enter dec xor in pop out mov push sub or bound inc and cmp xchg jg dec (bad) cmc dec mov hlt (bad) test push (bad) mov lcall sbb or scas mov pusha popa jmp sti and stos jmp (bad) (bad) (bad) push jo gs push push jno inc and imul mov mov jnp cmp jae xor jne fldl pushf aam outsl sysenter push pop add cmpsb push fs push (bad) dec or (bad) (bad) (bad) (bad) cmp xchg stc or mov jno push loopne and or jl mov (bad) decl mov outsb adc movl jp dec and dec inc mov sub push sub (bad) (bad) (bad) sti popf fwait adc or out jg add test (bad) (bad) (bad) mov (bad) jmp in shr iret out sbb and dec pop imul mov inc push xchg cmp test sub sbb test fimul outsb lock std (bad) call jg and pop shrb or shrl imul and call das pusha mov xor push mov adc mov push sub test mov xor ret fnsave and popa cli cli and jmp add xor imul jbe mov mov mov sti mov xlat out add pop cli inc andl stc sbb stc nop loop mov aaa cld ljmp mov jmp cmpsb push mov inc cmp fdivr lea xchg pop add push push imul (bad) decl ret js sahf (bad) (bad) gs hlt jge pop xchg pop pop sbb rol shrb jg movsl sarl pop push push leave sbb ret adc gs add adc xchg aas push aaa loop lcall fs pop cld sub adcl xor out jp arpl (bad) (bad) (bad) incl les (bad) ficom push xchg inc dec push mov lahf cmc xor xor or (bad) (bad) push mov cmp aad push out fstpt jo add add rcrb cmp out mov pop xor mov nop stc ljmp ficoml xor (bad) jmp sbb (bad) js cmpsl loopne pop ret out mov cmp adc sti push jmp mov scas xor cwtl rcll sub jmp inc or inc clc (bad) ljmp xlat es int lcall push ret or lock pop mov mov movsb jmp jns (bad) decl int3 sub xchg imul out inc jns je sti fisttp loop pop pop ficomp xorl push hlt cmc loopne imul adc sbb (bad) (bad) lcall bound ffree loopne mov loope sub popf cvttps2pi cmp int3 xor loope (bad) decl ljmp cmp popf imul aas (bad) jg mov and divb (bad) ror xchg xor jmp incl mov jno and pushf es (bad) mov pop int3 lock jmp je sub out dec jbe subb (bad) (bad) (bad) (bad) ljmp xlat enter and pop xor or sub xor fwait jl push cli (bad) decl lods mov dec fwait lea inc gs in jecxz scas push push jp push mov sub jmp cmp es push out in cli mov ljmp cli popf push pushl inc push adc outsl and mov in mov (bad) lea pushf movsl call mov fmuls out xor jmp lret fild lcall repnz mov dec mov in ror or incl dec fs mov lahf xor sbb (bad) (bad) (bad) (bad) pop xchg mov sbb pushf rcrl pop repnz xor (bad) (bad) decl sbb dec (bad) cmc xor out (bad) scas jecxz jge or adc sbb (bad) pop ljmp int (bad) (bad) (bad) mov jns insl cli fwait push pusha dec shl ljmp aaa mov sub or cwtl addb loopne xor mov mov daa fwait in test jecxz (bad) (bad) incl inc mov popa and jae jge pop hlt xchg sahf jg mov rorl cld (bad) decl fimul int frstor xchg das rol push gs jns xor sub xchg in aam mov sub cltd jne imul leave mov lock jp mov jae sub pop cmp xchg xor mov incl (bad) push fildll xlat (bad) lret lods ret popa out sahf mov lcall sbb ror out sahf mov scas pop cmc (bad) decl fsubs adc rorb out xlat (bad) movsl leave fisttpll mov xor pop enter (bad) ljmp in call ss insl mov push or cmpsl scas xlat jno xorl (bad) call sbb leave pop push mov scas scas shrl sahf cs sarw pushl push shll sub or aam das cwtl (bad) decl mov adc out cld es xchg fadds movsb mov nop orb or fwait insl divl jle outsl clc or (bad) (bad) (bad) call ljmp jg fdiv sbbl cmp lods add lock ret cmp (bad) nop pop push mov pop xchg (bad) (bad) decl mov inc jnp in mov daa pusha and cmp push xor (bad) (bad) jmp inc hlt and aam sub cld mov push xor adc cli pop xor out mov es cmc loop repz adc xchg sbbb stos push (bad) (bad) (bad) jg stc lret inc jae add fidivr cmp sarb mov imul xlat xor (bad) (bad) jmp xchg orl pop cmp sbb mov insb in inc sbbl mov mov inc (bad) mov push daa test enter lea hlt adc inc pop jae mov (bad) cmp (bad) inc lock pop push lret mov stos into push ljmp and lcall outsl insl add jno imul xor (bad) (bad) (bad) jnp out insl popf inc out insb mov mov sub adc loope push dec adc mov add mov add xor or add ljmp adc std lea sbb in (bad) cmpsl jecxz push jmp pop cs jg and adc sbb push decl cmp or ljmp inc add out adc (bad) call adc inc xchg gs pop or fucomi out (bad) (bad) pushl faddl (bad) cmc mov inc cmp mov mov aaa pop sar mov lods cmc rorl add push mov call ss dec push pop in mov jae mov inc lds push mov cmp mov dec in mov xor cli (bad) ljmp sbb int3 xchg or lds fmuls shll inc xchg jmp nop pop pop push cwtl cld and pop loopne inc push sub xorps stc push (bad) mov lods aaa cmpsb and jge push mov xor rorb jg bound adc inc cmp xor aad or (bad) (bad) (bad) ljmp dec icebp stc inc pushf jge dec pushf or xor xor mov mov outsb mov pop (bad) fild (bad) nop xchg or xor pop adc jge xchg push stos cmp sbb pop hlt in sbbl push sbb icebp lds repz movsl addr16 cmp sarl xor sub sbb es xchg jmp std or (bad) call (bad) mov mov mov shrl dec into aaa std (bad) call hlt shr in cmpl push inc in jno cmp clc ljmp sbb xchg cmp andl lcall int mov mov int icebp pop dec adc je inc pusha push mov inc (bad) call jge call enter jae iret loop (bad) (bad) (bad) fst (bad) clc loope (bad) int pop cmp shr adc jb sbb push xchg out add (bad) (bad) (bad) fildll in lret movsb and xchg fildll adc lcall out xor sbb sub (bad) call mov orb jo or sti jo inc je dec pop insl add js gs xchg (bad) (bad) ljmp out inc jmp pop insl push jnp in inc sub jmp int3 lods into lret pop jmp int3 sub and test clc movsl dec push cli ljmp sahf sub mov stos call cmp xlat add pushl and ffreep and (bad) std cmpsl jae adc fwait xchg add mov (bad) mov mov ljmp outsb cmp push (bad) bound sbb and lret jecxz inc ficom icebp pushl xchg aaa mov outsl jne jnp cltd pop (bad) cltd clc call loopne ss nop push jbe (bad) (bad) xor scas movsl enter add pop int3 sub or mov rorb xor sub mov std xor dec mov sbb xor inc aam stos je ljmp add sar (bad) mov and jle lret cld repnz jo jecxz jnp pop sub push or ljmp fsubl lcall jg mov push mov cmp pop repnz movb xor test pop fcoms pusha add ja scas sbb push lds aaa (bad) aas jge push pop fbstp data16 loopne repnz adc cld (bad) dec nop out (bad) into jno dec and xchg mov in inc decl jg adc push xchg and daa and loop xor and cwtl shrb adc (bad) jl and and mov (bad) lcall pop dec add outsb add aaa ret jmp (bad) (bad) lcall rorb pop pushf rolb imulb push push outsb fsubs (bad) mov ljmp (bad) and pop les xchg add jecxz sarb lea dec sub jle push cli push mov push enter sarl xor lcallw (bad) decl cmc jne fbld cmp fcomip adc popa fbld pop mov mov add mov inc cld mov test mov shlb (bad) inc decb sub inc inc imul test loop mov fwait pop push (bad) (bad) (bad) (bad) call dec add scas mov cmp inc mov pushf icebp (bad) (bad) (bad) decl ret inc popa pop test aas in ja stos movsl jns jne loop cli pop outsb mov mov (bad) inc (bad) repz inc xchg mov jbe mov push (bad) jae andl push fist (bad) (bad) mov js pushaw mov aam shr subl add push test fst jmp adc (bad) scas cmp push ret (bad) jmp fidivl test or je pop adcb and in fisubl stc mov or jnp (bad) incl xchg adc mov rolb mov aam decb enter or (bad) (bad) (bad) decb cltd xor and stos mov inc push mov jbe xchg pop shr (bad) (bad) (bad) (bad) mov adc loope rcrb (bad) pop mov ret imul and (bad) (bad) (bad) lcall repnz gs mov cmpl rcrb dec push sbb push mov xor mov and sbb (bad) lcall or jmpw shrl xchg dec les jp and add outsl jg dec aam cmp and sbb stos iret jg pop daa and ss xor xor scas js jnp test xchg enter mov adc dec lret mov (bad) rol addb xor add jp push dec stos mov fiadd call lea rcll jb test fsubrs and icebp xor (bad) (bad) (bad) push stos sti shrb mov mov sub add popa jg add std data16 sbb (bad) (bad) ljmp aad adc lret adc hlt mov pop jg push lea sub xchg scas insl mov push dec push (bad) sar xchg jns cs xor or in sub nop hlt inc hlt jns inc fucomi lret push (bad) (bad) (bad) jmp push push add and ljmp mov outsb xchg mov cmp adc gs aam loop pop cmc sub arpl shr xor (bad) (bad) mov push jne jge xor fisttpll ja adc jecxz mov push incl stos iret adc inc bound jns xor frstor mov lods sub xchg dec mov push adc aas dec jbe push icebp (bad) out jbe ss sahf push mov pop aaa add retw ljmp sbb add inc xchg and imul mov (bad) (bad) (bad) fldl mov es loop fildll pusha mull lods mov decl jae out xchg xor lock add std or pop xchg mov inc aam rclb sar (bad) (bad) mov sbb mov cmc jge adc xstore-rng cmpsl inc out mov std mov stc in adc aam push dec sbb lock aaa (bad) mov shrl dec insb sbb adc test ficoml pop xchg (bad) data16 stc mov inc popa mov dec add (bad) or insl xor popf cmp jecxz cmpsl add or and xor (bad) (bad) mov push sbb cmpsl push lea jp cmpsl adc popa inc jp movsb sbb fs ret sysenter cld (bad) jmp xor sbbl sub fnstsw nopl aad (bad) jg imul add mov dec es (bad) out clc cltd imul and sbb or fs (bad) (bad) call push sub and jno and dec lds mov mov bound mov leave adc mov jnp xchg adc imul jmp jnp aam (bad) (bad) (bad) lcall jmp jl inc add pop fisubl das js xor cwtl loope das or sub stc xchg cmp cli cmp les mov ds lock pop sub push stos clc mov dec jo adcl mov jecxz shrb mov (bad) ljmp gs fldcw lahf (bad) pop jl adc pop lock das mov mov or fsubrs jle fwait xchg (bad) (bad) (bad) cmp cmp repz sahf push es lods xor pop xor add in sub cmc push (bad) sub fldenv aad or push fidivr dec lea lahf out lods xchg inc pop pop sbb movsl sub loopne stos mov jb adc data16 jb pusha (bad) (bad) out cli js std mov mov enter push in adc adc xchg adc (bad) decl adc cwtl ret mov mov xchg popf xchg jle arpl movsl xor (bad) jmp xor les push push subl push cmc ret ret (bad) (bad) (bad) fnstcw cmp push cmp mov into mov sub mov mov dec xchg hlt jmp call mov mov std lcall rorl pop shl (bad) enter fwait add mov fs push mov fnstenv xor lods pop stos imul sbb mov xlat cld adc mulb out (bad) lcall push sub push adc pop ja mov adc movsb test into ret adc or cmp ret sbb cmp and les clc (bad) jg cltd (bad) cld add mov ja xchg pop out imul (bad) inc lcall and fiadd xchg adc (bad) jg pop xchg leave xor push pop cmp outsb fs add dec mov push lods xchg mov (bad) (bad) (bad) jns xchg jbe mov hlt adc add pop jecxz outsl addl and insb sub (bad) lcall iret (bad) xor imul dec into mov push addr16 fcomps (bad) (bad) jmp push ret cmp cltd ljmp lret stos in (bad) cmp decl rcr es xchg outsb xchg (bad) xchg cmp nop pop and xchg mov push sub push nop cmp cmp bound lcall jb (bad) pop leave cmp pop leave mov add mov imul out mull popf nop (bad) incl into repnz mov or mov nop int3 mov mov fistp (bad) ljmp mov or rorl cmc mov (bad) cmpsb fwait aaa push mov push loopne (bad) ljmp mov xlat dec lock pop inc jmp aam push push mov leave test test arpl pop in ljmp test outsb and jb inc aad pop adc add xor mov push cld jmp scas jecxz sar mov into movsl icebp outsb cmp les inc add cmpb sbb cmc (bad) lcall adc enter and cmpsl cs jecxz call inc mov or add xchg pushf mov (bad) (bad) mov std jmp sub test jle in out fnstsw outsb push mov loopne neg clc (bad) (bad) (bad) pushl inc sbb fildll fstpt jno inc sub repnz and jg push dec or xchg cmp loope iret int3 es sub mov xchg inc jae in adcl mov cmp repz sbb loopne imul xor mov xor inc dec in mov jne dec lret mov das clc pop xlat and mov push out lret push cmp fldt mov shrl adc shl test mov lods (bad) cmc stos int sub lcall call popa dec js pushf push int imul cmovae (bad) mov fsubs sbb data16 jno loop mov (bad) call push mov inc bound ror mov (bad) call sti adc das mov into mov or jmp (bad) (bad) fstl sub stos (bad) jmp (bad) das pop mov or pop sbb decl inc xor jb push and mov mov fs xchg test mov cli and rcr jge add push dec mov jle pop test mov imul xchg ja sbbb pop sbb (bad) (bad) (bad) jmp mov stos jle dec lds orl lret sub nop incb mov (bad) decl cmpsb adc (bad) xor dec mov imul sbb (bad) (bad) lcall dec (bad) cmp aam mov xor pop jno adcl inc lds add ds adc dec xor and test incl xor pop jg leave pop and stos (bad) mov adc pop faddl call testb mov jge pop mov shrb aaa cld (bad) jnp xor xchg xor pusha inc add into mov cmp ret pop hlt pop daa mov push cs (bad) es loopne stos cs (bad) (bad) (bad) lcall push add cmp add pop xor call popa sbb (bad) pushl push or inc or mov cld mov fisttp adc push jbe jne outsl leave push fmuls daa (bad) incl mov pop test (bad) cwtl mov sbb fwait xchg mov push adc (bad) aaa mov push mov (bad) (bad) ljmp sti data16 add sub or movl push pop (bad) (bad) (bad) inc xor inc insl fsubrl test jae xor enter dec shll daa push sub or mov divb cmpsb (bad) decl (bad) xchg jge push mov jno pop insb jecxz lcall (bad) (bad) (bad) jle jmp cmp dec stos pop pop pop pop pop mov mov (bad) (bad) (bad) call iret fdivr jns sbb or (bad) pop in scas pusha pop arpl inc xor push scas in loopne aas mov gs mov (bad) (bad) mov add (bad) jg push pop stos stos sub icebp push aam cmp xchg test idivl es ljmp and rolb sub (bad) (bad) (bad) lcall out pusha lods subl or loop mov insb pop sahf cmpsl sti mov dec popa dec pop cmp sarl cmpb into jns loop mov add es dec (bad) (bad) (bad) dec dec adc scas jmp int sahf xor arpl addr16 cmp adc out mov xchg cmp jb fldt pop clc xchg ja repnz xchg movsl (bad) (bad) decl cli leave ja sbb fsubrs mov repnz test arpl fwait (bad) pushl cld xchg xchg xorps mov dec mov aas jo jecxz dec (bad) (bad) lcall insb jmp mov mov dec lds std cmc or xor gs add aam cwtl dec adc mov adc and ja and cmp dec pop (bad) jae test ljmp push sbb jnp cmp int3 popf (bad) ljmp mov push mov outsb kmovd sbb sub push xor mov adc push push dec dec adc cmpsl add int3 mov mov mov gs inc std (bad) (bad) mov xor sub mov adc inc adc daa repz add aaa cld outsl cli mov inc pop jb jp mov repnz (bad) incl mov popa sti push in roll cmpl daa sub xchg out push decl and cli inc or push xorb (bad) (bad) (bad) jmp hlt xor arpl call cwtl mov js dec das daa test imul mov or and rcrl and jne push ja pop in fld pop mov lcall fldenv in cmp inc adc mov sub jecxz sar (bad) inc (bad) cli gs inc inc in daa lea pop into aaa or dec cmp loop adc mov pop push lods inc mov cmp in (bad) (bad) (bad) lcall sub add jb cwtl cmpsb rolb mov and xor xorl mov sbb push adc inc fsubs mov outsl dec jne fwait adcb insb mov fwait (bad) jecxz ljmp das aas mov adc call inc mov bound pusha mov sbb jo call loopne xor (bad) sbb mov (bad) (bad) out mov inc dec mov insl hlt in les es cmc test std (bad) jnp idivb sbb xchg adc int3 mov mov xor pop jp jp inc fwait or pop pop or incl pop mov cmpsb sbb sti (bad) push push movsl xchg mov push (bad) cld (bad) (bad) (bad) (bad) jnp xchg insb mov mov xor pop mov mov xchg xor dec pop (bad) xchg jmp fist jge cltd popf stc cmpsb in xlat inc add jae loope or sub hlt test das pop sbb ljmp insb push sub lret (bad) (bad) (bad) call or into jecxz fnstcw mov dec xchg pop movsl popa pop outsl jecxz adc fldt jg cmc or (bad) jmp cwtl sbb xor gs imul cmpsb cmc (bad) cmp (bad) lcall or icebp enter push adc mov aad sub (bad) (bad) pushl jne xor add xor dec lods xchg clc outsb or adc (bad) jge pop pop mov xchg pop (bad) (bad) mov xchg cltd pushl sbb sub out daa (bad) (bad) (bad) (bad) jnp and in or (bad) loopne jbe in mov addr16 cmpsb in cmpsb adc decl sbb insl or push inc hlt mov insb push les sbb xor pop loope inc ret dec mov cld xchg sahf sar cwtl xor lret or sub xor adc pusha scas xlat and jo mov clc call sbb les stos into std or xchg test pop (bad) (bad) decl adc pop and ja lahf mov sub and clc add mov push inc jecxz lods mov jne jp inc cld jge jb repnz sbb push dec test sahf popf leave (bad) dec mov data16 pop mov adc jnp (bad) jmp mov xchg jno jecxz mov call stc xchg or push leave orl jnp adc pusha js dec ret ss std xchg (bad) (bad) xor loop inc pop ret (bad) (bad) (bad) dec xor test sub and out cmp inc inc pusha fwait add (bad) cmpsb jp (bad) (bad) (bad) cli push hlt je nop push fmull xchg test adc cltd jbe inc pusha (bad) (bad) (bad) (bad) (bad) pusha cmp lods xchg repnz xor jp repnz pop fstpl es cs or jne test pusha (bad) (bad) incl loopne,pt std mov mov sti (bad) test lret add (bad) (bad) jmp ja mov pushf call mov jmp sub sub shll xchg mov out jb sbb das sbb idivb inc gs pop pop cmpsl enter mov fwait jns cmc stos cwtl sbb cmp cmpsb pop cmc lcall mov jb pop jle push and out push jnp (bad) (bad) fbstp dec bound or pop (bad) sub jmp jbe sub mov call nop cmpsb stc xchg lea mov aas mov lds jns ljmp jge in sbb xor bound cli jne ss sbb (bad) (bad) (bad) (bad) jl push push jo (bad) mov sub mov cmp out lods (bad) call lahf or sub out adc dec xchg mov popf inc (bad) je (bad) (bad) jg loop xor lahf rcl repnz (bad) xchg push inc femms pushl sub xlat clc int3 sahf loopne xlat jmp adc push cmp add nop (bad) sbb cmp ret cwtl push mov sub call rol push jb cltd xor xchg subb (bad) fild mov dec icebp bound pop inc mov push movsb jge add adc (bad) (bad) cmp cmc lret cs dec hlt push shrb push stos int ds cmpb inc add fwait and call xchg and imul (bad) jg pushl ret jge xor rolb and std jno movsb mov fild std mov cmp push orl (bad) call daa mov push sbb push movsb sbb in sub ja call mov mov pop mov push fsubrs test std push pop sbb sbb (bad) pop jnp mov xchg jnp lds nop decl (bad) aas shl pusha or cmc xchg inc int3 jmp cmpsl mov pushf lods bound enter (bad) (bad) ljmp and pop xor adc inc adc push mov (bad) mov popa fsub test mov ds int3 mov pop jecxz cmp dec dec push push jg and mov shll mov (bad) jnp scas (bad) sub push (bad) (bad) (bad) call add outsb inc call mov sar push popf cld cltd (bad) mov jae mov pusha ja cli (bad) push cmp cli pusha (bad) imul cmpb (bad) je (bad) cmpsb pushl loopne sbbl cmpsl sub fcoml xchg (bad) in ljmp mov outsb and dec xor loopne in mov push (bad) (bad) (bad) (bad) pushl aaa cs lods adc scas popa sbb xchg jl and dec movsb pop jg cmpsb in mov repz push cmp mov and ret xlat xlat adc inc or idiv jl (bad) (bad) (bad) ljmp decl fs in loopne add jno out vcvtps2pd cmp push jns stos fs mov sbb dec mov bound xchg cmp inc xlat rcrl (bad) cmp stos mov arpl sar inc jp push cmp pop mov pop mov (bad) pushl cli xor mov mov push sub jg (bad) ljmp or cld add fwait jbe jl movl dec lahf or jg (bad) xchg mov out fildll jl push insl jp jmp xor std (bad) jp rol adc push xchg lock stos sti sti rorl (bad) (bad) call gs push push mov movsb pop in popf hlt and imul (bad) lods incl dec pop dec push jl mov scas jnp add call jmp test inc loop into test leave shll pandn pop incl cmp pop lods and and (bad) (bad) call dec stos test xchg movsb out arpl imul cmpl jg (bad) ljmp sahf mov int fincstp scas ret xchg and fstpt mov (bad) in out push inc clc (bad) push in and cwtl in repz cld (bad) (bad) out jb hlt push gs sub ret test lods arpl bound (bad) pushl loop iret add cltd sbb pop pop add andl add lahf (bad) (bad) mov loop mov lea loope (bad) sbb or clc pop adc call mov xorb mov pop mov lea iret scas test adc (bad) (bad) ljmp pusha ss mov jl inc (bad) (bad) mov inc mov mov add jno mov dec (bad) in std (bad) (bad) pushl (bad) idiv jp ficomp push aas int3 test or or sub mov jg inc push and xchg popf sbb cmp inc sub stos hlt aaa xchg movsb sub mov cmp call outsl cmpsl int cmc iret (bad) (bad) (bad) jmp stos mov xlat ss xor aaa sub xchg dec pop xchg xchg mov (bad) jmp cltd mov xor push mov or repnz pop repnz into popa adc mov jecxz mov inc (bad) jg (bad) stos addl mov jne test inc adc dec dec (bad) call aaa sbb jb xchg je dec jecxz (bad) (bad) lcall or xchg dec sub cmp xor shll mov cs sbb (bad) xor or (bad) sti xchg sahf sbb dec sub mov lahf xor mov push mov psadbw jp fmulp xor cli call mov mov mov (bad) lcall jl fsubrl ljmp mov (bad) sti cmp (bad) (bad) (bad) pushl xlat rcll lods push push mov jge jmp mov es dec (bad) aad aad loope popa cmpsb (bad) icebp pop jae and rolb hlt ds jg shr movsl lret loopne mov adc (bad) (bad) (bad) decl nop fmul dec xorl scas dec add and xor (bad) inc cmp rcrl ljmp cli push popa inc jnp fdiv mov ds nop mov add or (bad) (bad) jnp scas cwtl sub iret sbb fld cmp xor add xor jg sbb cmc nop cmpsl hlt (bad) sub outsl cmp pop popf arpl aam sub add mov inc shll sub repnz fcomip ljmp stos inc sub mov xor jo clc mov divb es js mov jl or cli (bad) (bad) mov sbb xor mov jge loopne pushf xchg jle sarb xor repnz cmp mov (bad) (bad) decl gs sahf (bad) push push repnz pop orb push xchg scas xor fcmovbe jnp jecxz fs or or loop sub addr16 bound in sbb idiv incl fist sti shrb dec leave jl inc sub add cmpl fstp pop cmpsb ret (bad) jg je mov fistl sbb xchg cwtl adc sub adc lcall inc aam push adc jne clc cmp inc dec adc rolb incb jmp and les sar (bad) lcall fimull mulb pop xor lcall push cmc add add or and icebp (bad) (bad) call jle mov lea je and dec mov cmpsb pop or cld xlat lcall xor cmp mov mov (bad) cmp imul add mov push popf mov mov jo dec outsb mov lock (bad) ljmp fldl push ja push add loope adc or outsl sbb or mov fwait adc push call push mov sbb dec mov mov inc mov sbb xor push (bad) (bad) (bad) lcall lcall daa je,pn nop inc repz aaa jbe iret pop or ss (bad) jg or xchg mov adc and ja je loop je repz decl lock pop popf xchg int jg ss int3 xorl mov (bad) (bad) call xor add mov cmp mov in aaa in xchg adc (bad) mov js scas cmp out mov cs decl repnz aam jge mov or jo dec cmc (bad) ljmp mov sbb mov dec pop shl add dec add (bad) ljmp push icebp out shlb add ss inc in add pop or or inc movsl test (bad) aaa lds test (bad) (bad) jg pop mov ret mov lods (bad) mov mov push lock adc (bad) fcomip jmp adc lret xchg pop or stos popa push xor (bad) jp mov jge subl (bad) jg (bad) add fimull xor cld pusha or lahf push push sar push sbb (bad) loopne (bad) (bad) cmp push out mov jno mov fldenv cli test xchg dec pop (bad) xor (bad) (bad) call fadds push ja mov cmc jmp pop (bad) aas fadd lea je jae (bad) (bad) (bad) call cmp in xchg (bad) sbb dec stos or loope xchg jp cltd fildl cmp (bad) (bad) decl scas popf sbb pop cmpsl jl data16 icebp xchg out out add mov pop dec (bad) in sbb in outsb mov ror cmpsl mull mov dec cmpsb sbb incl jg xor (bad) xor (bad) fs bound das sar (bad) call cld push or mov pusha and pop (bad) insb loop mov sub push shlb xchg lods dec sbb icebp inc pop sarl lods xor test (bad) cld rcrl jl sbb jp icebp (bad) lcall pop adc in js sub jno ss (bad) (bad) decl sub inc fwait or fbld inc jl xchg or testb (bad) call repnz add push or lods imul push cmp dec aam fs dec dec sub fcoml in fwait orb xor insl nop xor out dec xor cwtl sub or sahf jl (bad) lcall and jle pop mov push js stos dec jg dec add (bad) (bad) ljmp sub ret lahf cmpsb xor das hlt lcall std scas (bad) mov push add inc cmp repz es (bad) (bad) jg dec mov jge ss mov data16 mov sti daa xchg cli (bad) dec or mov iret insb test cmpsl pop cwtl xlat lods adc fistp pusha out imulb (bad) (bad) ljmp pusha sbb jecxz sbb dec clc or pop and popa push sub cmp int sbb in loopne push (bad) (bad) es notl lods push push rorl (bad) mov adc (bad) (bad) decl jae mov fist sub mov pop and mov cmp mov mov pop arpl int aaa lea lea xchg fmul jg in stc fdivr (bad) (bad) jmp sar sbb mov push loopne pop jp mov adc push xlat rcr sub repnz test mov divb and (bad) hlt imul loopne xor inc imul nop pop lcall lcall push xlat cmpb jl xor (bad) (bad) lcall mov arpl or mov mov push fcoml (bad) xor lea incl xor mov popf cwtl clc lret jne sar pop jmp xlat adc loop (bad) jbe out mov (bad) (bad) (bad) (bad) cli sbbl hlt sub dec jno (bad) push xchg notl scas push (bad) scas xchg push dec repnz outsl pop cmc xor pop rclb jg pop adc dec jbe std inc in fsubrl push xor xchg clc outsb scas lahf fsts sub push jnp nop sub add (bad) (bad) call pop mov xor or push popa mov jg inc (bad) xor inc dec jae nop rorl dec cmpl inc push adc ficom sub adc cmp aas (bad) decl xor nop push adc sahf and mov mov mov (bad) (bad) (bad) (bad) fdivrl add xchg xor daa sbb test fs push xor sbb inc mov cmc imul xchg mov push outsb sub (bad) (bad) cmp icebp jnp inc popf in cmc aaa mov ds je jg inc or out ljmp int3 repnz dec mov inc std mov (bad) (bad) (bad) ljmp and inc sbb jecxz loop pop enter sub test pop sbb (bad) (bad) (bad) push jns pusha inc cli push aas lcall test lret push xchg cmp dec bound inc (bad) pushl cmpsl decl enter gs mov fld insb sarb cmc pop cmc or mov imul push sbb jl (bad) (bad) dec xchg jge bswap xor push fdivrp (bad) call nop push push hlt push xor notb shr xchg push daa push insl lret fisttp js push sub sbb out sar dec (bad) dec (bad) lock js jle or (bad) lods jb jns rclb xchg mov mov fneni(8087 lahf mov adc jle lds mov xchg jmp lcall jg pop sbb imul scas mov and jne or push xchg fsubp inc nop adc sub adc push (bad) ljmp test mov push xchg (bad) push xor insl mov test (bad) (bad) lcall jb das sbb jp int3 push nop out in (bad) aaa (bad) das add insl mov imul and sub call jbe push dec jg imul mov sub and (bad) adc fild or xchg mov push sub (bad) (bad) icebp je int and (bad) push mov mov mov mov push and (bad) mov add sbb mov cmp iret shr add sbb (bad) jmp sbb int3 fimul fsubr fnsave mov fcompl pop aaa pop add cmp ret dec pop and cli sbb pop lea jl (bad) (bad) fst xlat cmpsl pop int jecxz sahf pop xor fxtract xchg mov xlat test (bad) (bad) (bad) (bad) js in testb inc mov inc pushl dec and pop ja add dec (bad) test (bad) pop inc push ljmp push lock std or or add cmp (bad) out dec add (bad) call sbb lahf lahf ss xchg scas aas into repz mov mov cwtl sbb out or cmpsb (bad) jmp pop sub (bad) cmovno sbb pop xor (bad) std push cltd insb std pop out dec mov scas cld jle cmp pop std jmp push dec stos add push scas (bad) imul enter fs (bad) jmp pop bound add push jnp push cmc jge dec add push (bad) fbstp mov pop cs scas out xor and test lock (bad) decl push xor push leave jnp cmp movsb add sub adc bound inc pop inc nop inc xchg mov sub decl fs aas pop and fistl pop je sbbl fmuls cmp cmp cmp lret push or fsts inc pop add ret pop xchg bound add (bad) (bad) (bad) (bad) sub ja mov out decl xor emms int sub insb sbb (bad) (bad) mov outsl jnp jno les mov adc mov pop outsb cmp add cmp rorl in cld ljmp test into jl mov lahf fdivrs rcrb cmp (bad) mov int3 in aas push clc out xchg icebp (bad) (bad) jg pop sbb and push ret notb add mov xor push (bad) add movsb int3 insl sbb jns incl adc rdtsc cmp sbb loope in cli (bad) (bad) lcall (bad) jp xchg popf aas sti xor jo sarl imul clc cmpl cli (bad) (bad) fucom lods lcall cld xchg cli mov insl (bad) (bad) incl sahf xchg addl adc outsl pushw adc sub repz push adc jg mov or enter ja (bad) or into ret jmp sar cs pop aad mov adc mov pop cmp repnz inc push cli sbb xor sub es rorl scas or (bad) out push sub stc pop popa pop mov pusha or lcall and imul push xchg repz cld addr16 ret mov mov hlt inc lcall push jp mov cld inc cmp mov enter movsl jo divb mov repz cld jg movsb inc push or mov and cmp pop pop sahf (bad) ret (bad) (bad) call push (bad) mov sub mov aaa cmp xchg imul hlt fwait dec xchg pop and mov mov (bad) lcall sbb push enter jl int mov fnstsw jmp stc (bad) enter or stos dec loopne test les divb jns and sub jecxz jo fmulp pop je lea ljmp enter push dec (bad) out sahf and (bad) (bad) (bad) lcall cmp fdivrp repz mov fwait imul adc pushf scas adc inc out xchg cld sti xor jns movups jge inc jae cmp cmc ja xchg cwtl fcmovbe pop ja leave dec (bad) (bad) (bad) (bad) fild sbb xor mov cld sahf pop jge gs jge dec xchg es std mov movsb fs xor loope or sub cli (bad) jg and loop push out dec cmc mov sarl sub (bad) out mov pop or aam pop jne mov (bad) (bad) (bad) lcall xlat dec xchg cmpsl mov xor ret daa xchg pop inc in gs gs scas scas jecxz bound arpl fimul inc xchg loopne scas es push and (bad) jmp stos shrb nop mov popa shrb push sbb sar and mov pop test dec mov leave (bad) das sbb push sarl or iret (bad) (bad) (bad) call xchg ficompl mov js fidiv jle outsl cmp sbb mov divb dec xor push mov dec and cwtl jle lock dec lcall push xchg jle rolb cmp mov xchg mov fnstsw xchg sbb jne pop or adc popf jle (bad) pushl push jae adc ljmp jg push push adc xchg dec add loop xchg mov (bad) mov clc (bad) (bad) pushl dec mov rolb push mov sub js rcl push (bad) jmp fidivrl jge or addb push mov (bad) (bad) (bad) decl jns sub xor add popa clc test outsl xchg pusha ljmp arpl dec dec mov lahf xchg loopne repnz insb std adc jno movsb jl in adc mov sarl mov (bad) dec mov (bad) mov into fdivrs mov notl out lds add cmp test je (bad) (bad) (bad) pushl mov (bad) arpl mov mov add jae in icebp je adc push inc inc dec mov aaa (bad) idivl decl rol jb xor das and das push (bad) (bad) mov push addl out push imul pop out push jno (bad) call out push out lea test orl scas xorb ss sbbl in cltd xchg lcall xchg xchg ret and mov repnz cmpsb push lock mov adc incl xor mov iret aaa sub jmp std xchg (bad) (bad) (bad) lcall jmp out xchg jae xchg in xor cld lods fimul incb stc incl push cmp mov adc pop xor and push jne xchg pop push jno push nop (bad) (bad) mov xchg add or repnz out lahf imul add ljmp mov lahf jnp ljmp pop es lds jle clc add dec in adc cmp clc add js (bad) test (bad) decl add inc adc mov push loop (bad) insb (bad) jg mov adc jg loopne lret inc pop (bad) mov daa jge adc mov out adc push std jmp jg mov fs repnz aam lret xor sbb add incl and mov dec shrl out or pop dec ss pop bound sbbl outsl sbb push lahf adc fcoml adc push dec lcall out mov mov xor jmp fwait cmc mov jecxz,pn inc (bad) inc mov call lret rolb push sub popf cmp (bad) (bad) decl rcrl ja out int3 push (bad) xor cwtl cmc or dec sbbb (bad) (bad) decl push mov add push pop add mov pop addl mov inc faddp (bad) (bad) (bad) push jo,pn sti xchg cwtl cwtl shl cs adc popf sbb jp cmp xor jbe cmpsb (bad) jmp cs mov repnz mov jg push pop add jge inc pop aam aaa ror xchg std call xor jmp (bad) sub cmp cmp (bad) fwait and dec adc (bad) mov push dec jmp mov popa pop sbb ja push cmp (bad) lds xor decl xchg and cwtl mov sbb fdivrl std jge (bad) (bad) lcall or and pusha mov dec pop xchg push jg loopne lods mov js mov ljmp sbb mov push push (bad) (bad) incl flds ret and mov dec pop push movsl lock or sahf inc inc fs cmp mov (bad) (bad) ljmp cmp sbb imul movsl bound negb or ret jge add sar (bad) mov or ja roll jns sub lret addr16 pushf addr16 (bad) (bad) ljmp loopne xchg je std lds xchg test dec in sbb dec stc pop push (bad) fbld adc pop fnsave mov xor (bad) (bad) (bad) out mov xchg xchg lahf jbe stos add lret sub mov push out and fdivr test (bad) (bad) (bad) inc and mov jbe adc xchg popf push and negl xchg leave enter das push push aaa inc ljmp cli add add sbb adc mov pop rolb mov xchg in pusha lea mov inc leave push mov push pop dec ret scas lock (bad) (bad) call nop icebp aad icebp rcrl in and pusha fwait cmp popa jg push sub pop popa add lret xchg or ljmp xchg lret ljmp (bad) fwait inc loop add (bad) daa push dec cs (bad) (bad) inc cmp shr mov sahf push push leave xchg push mul xor mov (bad) out push inc (bad) (bad) jmp xchg cmp sbb inc or or fdivr (bad) (bad) decl add std add cs push stos jns in in test stos inc sbb and das clc clc outsl (bad) lock repz and (bad) ljmp cmp out adcb movsl ret mov xor xchg shl xchg inc cmpsb xchg in in (bad) (bad) ljmp jg mov or xor fistpl push mov shrb mov xchg (bad) and stc adc sub das imul jp pop test enter stc cli mov cmp pop mov push push mov jg pusha enter sbb clc jne pop fisttp (bad) (bad) (bad) aas sub and enter das cmpsl imul int3 in shll cltd push jnp incl or lret sub jb dec stc add mov jmp (bad) cmp and sub mov loopne xchg push rcrl nop call (bad) (bad) (bad) (bad) jns test gs mov push xchg push adc sbb mov popf cmp in fdivrp (bad) incl enter fcomp xchg bound mov adc mov mov jno iret aas adc jne and in mov stos adc sub xchg (bad) (bad) mov (bad) sub mov (bad) movsl call insb dec scas adc add cwtl mov cmp std (bad) (bad) decl or jg (bad) cmp push cltd xchg (bad) push push gs sbb out jp sub imul sahf scas dec icebp push lock (bad) ljmp pop movhlps add jnp jmp mov adc repz lcall mov out out pop xor lods aas xchg xor decl dec xchg enter jb ss and test loope add imul push or mov sahf push jecxz jg sbb adc inc jle inc mov adc mov or add jb mov push pop sub ss lea jns enter call ja aaa jo and in vunpcklpd mov xchg mov mov (bad) (bad) (bad) jmp mov ret (bad) xchg push lsl mov add orb inc adc or mov fs ret (bad) call (bad) dec and mov mov xchg aaa scas mov pop mov scas ret (bad) into or push stos (bad) es mov cmp sbb inc into cmp js (bad) (bad) mov ret mov jl add jne ja jecxz jmp mov dec jbe aad cmc cli sbb insl or jb or push fucom xor jns and enter jb dec xchg enter or adc movl adc xor add push (bad) mov fninit pushl adc mov mov and aas inc cltd rclb inc cmova sti jle fild insb push pop stc cmp mov fistpl mov or xlat (bad) repnz fidiv cwtl jecxz insl sbb inc jmp (bad) (bad) (bad) pushl xchg ja daa daa mov daa jmp push enter xchg dec push cmc stos (bad) (bad) (bad) (bad) (bad) fcomps fs add cmp iret cmp lret dec rcl inc ret push sub pop push (bad) (bad) (bad) jmp out xorl in and mov sub pop jno jl push iret inc rcrb in gs (bad) (bad) ljmp popf cmp push mov loope cmp es push lea dec lcall idiv pop lds add pushf dec mov outsb cmpsb jno into mov cld loopne xchg or rcrb arpl cli sub adc loope push movsl aaa je (bad) (bad) lret cmc int3 jmp and ds inc sbb (bad) icebp xchg lds inc xchg inc lods cmpsl (bad) (bad) (bad) dec jmp sub stos sarl rcrb mov je (bad) lret xor mov outsb or sub lahf xchg fbld iret pop cmp dec mov jle mov mov in (bad) mov push xor ss fmuls and leave sarb (bad) (bad) call insb inc call into dec add xchg cmp or mov les loopne sub movsb add inc int in and (bad) mov rclb jg repz adc push ja (bad) (bad) (bad) pushl or add (bad) stc fnstsw aas gs inc fdivr push inc stos roll and push mov (bad) (bad) (bad) jmp jge cmc lods mov int3 test inc mov test cwtl (bad) or ljmp cli cwtl mov mov or imul xchg movsb add (bad) xor xchg inc sbb call ljmp pop push out stc xor (bad) xor stc push inc (bad) (bad) (bad) jmp mov cli (bad) inc jno sub pop stos cltd (bad) jno sahf dec test insl negb pushf mov lea inc sub mov jo mov cmp xchg std (bad) (bad) lcall mov fcomps sbb adc mov lcall push repz mov jg or fisubr pusha jo aas or sahf ret dec std (bad) (bad) fnstsw decl jl adc repnz and (bad) (bad) (bad) xchg out ret fildl in out lds or push ds (bad) mov pop enter loopne pushl adc inc jb sub insl addl mov decb addr16 push pusha pop insb shlb (bad) jg test and pop push xchg inc insl jmp and cmc dec (bad) mov fnsave jge push pop mov into fidivr mov inc loopne mov (bad) ljmp adc outsl jo andl adc (bad) jmp (bad) (bad) incl dec pop int3 jae push jle les out lahf mov mov (bad) fcomip decl xchg cmp rorl in adc mov jne adc inc cmp loope xchg xorl mov cmp cmp incl dec psllq lock and loopne,pt pop in mov pop xchg xchg imul lea (bad) mov inc cs push sbbl mov mov inc pop jns repz xor pop (bad) outsl gs dec dec mov mov je add mov (bad) (bad) (bad) pushl mov stc (bad) fcmovnb add add mov dec imul sbb inc cmp pop test std ljmp loopne js sbb test dec inc in (bad) ljmp mov mov arpl add sarl cmpsl sahf sahf mov push add mov ja cmp mov cmpsb jns inc ja sbb pop mov push shrb push clc mulb inc dec mov pmaddwd xchg mov (bad) (bad) (bad) lcall lods adc cs push inc or push fmulp jb xchg scas push mov popa lods in (bad) (bad) int ja (bad) (bad) (bad) lcall test jp mulb insl shll mov lcall pop mov leave (bad) (bad) (bad) (bad) out push sub cmp jl outsl jmp ss test fucomip movsl leave mov xor fmuls pushf dec shlb pop cmp icebp sahf pop test sbb (bad) jl inc cltd add ja in dec ds gs je test pop out lahf pushl adc stc xchg and sub in mov cld (bad) out clc (bad) jmp into inc mov jp loopne mov jae lcall sub mov add orl jb loop lcall or popf add mov fsubrs decl mov and popa mov dec jb jmp stos xor mov mov dec daa xor ret add cmp lcall stos (bad) (bad) incl test out adc lods xor mov push notl add pop sub (bad) (bad) (bad) pushl inc xor dec ret or inc ss fs dec hlt aas in shlb pop dec inc imulb xchg jbe loopne (bad) cmp ds mov or (bad) ljmp stos push jecxz es (bad) ljmp add and (bad) fs pushf lahf jge mov call xchg lds mov fwait mov pop inc xorl push sub cmc jle mov (bad) jg ljmp icebp stos aam xchg dec dec xor sbb inc outsb lods and jbe call dec shrb push jp mulb in std pop lods (bad) jno jge loop add mov sar inc xchg fcoms outsb cs push xchg das sar call xchg in fisub sub sub inc or rcrb aaa push pop les aad cmp (bad) (bad) cmp adc aad hlt xor fwait add (bad) inc std jge jmp push add dec sub cmp sub mov scas mov out cli int cmpsb addr16 call jle,pn pop or sbb push dec test fdivr jg mov xor (bad) (bad) decl xchg loopne out mov hlt inc xchg fnstenv mov lahf sbb (bad) jg or lods mov dec push pop insb mov lods in pop sub popl inc call jl and adc ja fisttp pop xor jnp or (bad) icebp mov addb (bad) (bad) (bad) call sbb push je jl sbb dec mov aad (bad) scas and add and (bad) jmp icebp cmp jle stos sub xor cmp mov (bad) (bad) pushl and lds mov push dec out rcrb icebp mov sub (bad) (bad) call sbb ficom sbb mov jmp pusha and jg xor xor xor push jl and stos jo repnz sbb cld dec loopne ret push (bad) (bad) (bad) (bad) out lea loopne mov dec mov les pop stos sub insb (bad) (bad) jg mov push movsb push mov or mov sahf fwait aad mov rcl dec inc sar (bad) ljmp dec test aas out push sbb dec inc insl cwtl cmpsl mov jo cmp adc push packssdw push movsl in (bad) jno push test (bad) (bad) (bad) (bad) std lds fwait into sahf mov dec outsl test or test inc lods or gs lods (bad) decl in in cli and (bad) fildl (bad) icebp call lret mov (bad) jmp lods jno loop jae dec mov (bad) (bad) mov and sbb jmp (bad) in (bad) cmc dec nop adc stos hlt add (bad) ds xchg enter add fbstp and ficom aaa push (bad) jg cwtl jl inc seto cli mov mov adc sbb addl (bad) (bad) fildll fildl test popf push daa push jp jne lret movsb fsts cltd imul ljmp jno (bad) mov inc xchg lret mov (bad) (bad) (bad) (bad) cmp into inc fcoms aaa (bad) xor (bad) mov mov xchg jno insl xchg jae pop test inc push add (bad) fsts and bound push leave cli jg (bad) lcall rorb imul mov mov cmc call loopne dec out sub out jg mov push push fcmovu (bad) (bad) (bad) fild lret mov movsb add fsubl add fdivs cmc lds jg add jno imull adc into ss mov divb (bad) shr andl fmull je mov pop cltd push and pushl lods push cmp jl mov (bad) (bad) pushl cli cwtl xor sbb je and fdivrs pop negb mov pop (bad) (bad) (bad) jge add mov mov lods inc push dec out test inc fdivrs pop aad shrl test push cwtl xor pop repnz xor lea cmpsl adc (bad) incl push (bad) dec loop jae in push inc neg pop inc (bad) fldt (bad) (bad) out pop jg push lods mov ja (bad) xor (bad) adc cmovne mov jge xor sbb and jmp clc mov dec decl lock clc loop lods stc pop daa xchg and mov inc sub jb xchg test imul (bad) (bad) fcoms cmpsl adc sub (bad) lcall jg pop scas push sahf fmulp cmpsb add loop dec fcmovne adc sub (bad) (bad) jnp xchg shrl divb (bad) mov test faddl and mov andl mov mov dec dec mov out dec cmp insl jecxz (bad) icebp shr sahf push idivb cmp clc add cmp fdivs repz (bad) jg add ret push mov pop jno sbb enter mov (bad) (bad) push (bad) mov neg xor sbb mov loope mov sbb jae pop add sub (bad) (bad) push adc fsts add inc icebp and (bad) add sar mov and inc out or popa xchg sbb cmp push into xchg lods add lcall mov or pop pop pop add pop out movsl outsl xor jge repnz mov pusha (bad) ljmp (bad) jae mov andl sbb sarb call addr16 das pop call adc cld lcall sbb imul inc out scas rorb ret (bad) decl sbb lods or sahf mov push jb inc mov (bad) (bad) (bad) lcall (bad) in hlt dec jns cmp and add out push dec dec sti lret mov cli outsl cli call andl xchg xor add jmp or jecxz mov jbe (bad) pop inc imul (bad) (bad) (bad) ljmp mov pop loopne jl xchg arpl js pop sub incb lcall jg add pusha xchg fbld in cld add cli (bad) scas int add pusha and sbb cmp sti mov cld imul insl in repz pop call (bad) fsub pop push inc sbb sub (bad) lods mov xchg inc movsl (bad) cwtl push mov ljmp (bad) je mul ja in xchg in scas mov lock jbe (bad) (bad) (bad) out aad stos sub mov inc dec cmp mov out and test add decl loope cmp jp in push mov das ds jae (bad) popa test inc inc jb aas mov dec adc decl pop mov push add mov into cld mov outsb xor ljmp add ficomp jp and sbb (bad) (bad) incl push and pusha jle cli (bad) xchg inc and icebp test (bad) lcall jns out imul jae xlat sbb jle and jo sbb dec and (bad) (bad) jmp std lock and xchg lds daa xchg test ljmp dec loope mov je inc xor out andps (bad) dec fptan frstor aaa sbb xlat or jbe jno sarl pop xor (bad) (bad) (bad) jmp dec mov and sub stc ret outsb mov xchg ss aaa (bad) dec incl cli sub dec cmpsb mov dec mov xchg mov sub (bad) in add addl push (bad) (bad) (bad) jmp in sub mov ret js,pn sti mov mov aaa pop push xor cmc rcr mov and (bad) (bad) ljmp shrl fimull frstor std lret inc or xor div lods incl jge mov int mov sbb decb mov decb fisttpl (bad) lcall test xor orl in pop dec mov (bad) jle (bad) (bad) (bad) dec add push mov sbb xchg icebp dec pop mov push aam add faddp cltd (bad) (bad) (bad) pushl adc or cmc popf movsl popf mov (bad) fmull sbb les (bad) (bad) (bad) ljmp lds xchg pop int3 dec ljmp ja das xchg ja in pop call (bad) (bad) (bad) call ja sub push dec push sbb lds cltd fimul pop push in pop fstps xchg jp pop fstl or (bad) (bad) lcall or jle stos inc test adc aas in out dec out xchg or push arpl push dec or sbb and (bad) lcall movsl stos sub std test xchg mov aaa lods mov or inc push jmp xchg imul enter jno icebp push mov jnp jns stos ja pop add je push dec mov inc adc lock (bad) ljmp mov daa mov adc sbb sbb shl sub adc sbb (bad) xchg mov or in out dec dec sarl push xchg sub (bad) jp enter enter shr push inc mov (bad) incl inc pop inc pop sbb sub gs mov push ret scas nop js pop pop mov fsubrl adc pop push (bad) (bad) (bad) inc xchg mov call (bad) or fmuls pop (bad) repnz gs pop sarl cmp test jnp insb mov jb inc xchg (bad) (bad) pushl mov ja (bad) fwait pop inc push xlat jp cmpsl (bad) mov dec xchg scas movsl sti mov (bad) (bad) (bad) jmp test sbb fs outsb and cmpsb cmp mov sub (bad) pushl daa pop das and js pop pop rcrb sbb addr16 adc inc popf rcl inc cs (bad) rorl push int sahf dec fdivrs cwtl (bad) dec pop mov jmp dec and jle sub decl inc inc adcl (bad) jg repnz scas sti scas lcall dec pop movsb push fdivs sar arpl aaa cld call jne and jno mov lcall or and (bad) (bad) (bad) incl push inc jl add xor pop mov popa push inc pop xor cmp (bad) (bad) fcmovnbe (bad) fsubs add dec pop jae add repz fwait dec xor jns pop or lcall iret mov in mov xor decl mov insb gs ljmp dec xchg (bad) xchg xor lds out fiaddl adc xchg call pusha rcr and bound jmp (bad) (bad) jmp out pop mull fstps cs js xor std aaa mov test sub insl orl sar das xor ljmp decb into and inc dec ret push push (bad) pop sub pop std xchg or cmp cs ljmp adc jnp ret mov mov pop xorl add inc divb dec xchg xor cli aaa std incl inc push repz mov jb mov dec fcmovnbe cmp (bad) (bad) ljmp xor pop xor mov mov xlat lret js (bad) in or pop std jmp movsb lret pop jne dec jmp mov pop fisttp rorb in sbb gs (bad) (bad) inc xchg aas mov test bound jmp mov dec insb push aam xor and (bad) mov insl push into test lret pop add hlt ret push add out add fcomip clc js mov (bad) mov leave pop (bad) (bad) mov ss in cwtl addr16 rorl test (bad) icebp jb dec and xor decl jp xor mov cli data16 xchg faddl adc pop repnz cld (bad) jmp jge int3 xchg pop insl loopne xchg pop enter xchg cmp jg push sub add cmp xchg shr fisttp sbb (bad) (bad) (bad) (bad) cli ret xor dec sub (bad) movsl xorl fildll pop mov lods ds leave scas mov (bad) (bad) (bad) movsl and addr16 jae inc mov pop mov pop aas mov sbb (bad) push and test ljmp and insb push pop cwtl pop in arpl xchg add (bad) out clc jmp push int sbb lea mov out rolb adc jne dec pop jmp sbb lcall push jle enter (bad) mov or dec mov (bad) div inc add mov stos (bad) adc in mov adc push sbb xchg mov fwait pop sbb sub xor fisttpl adc xor (bad) pushl jbe jno or gs inc sahf jno sarb in cs into insl sub shrb dec push (bad) or lret imul sbb ljmp dec adc pop xor (bad) (bad) (bad) incl cmp mov push ljmp cmp sbb stos ficoml popf xlat or sbb adc mov enter lcall ljmp cmpsl mov xor pushf imull mov xchg lds mov or pop jnp cmp clc inc (bad) out xchg (bad) (bad) (bad) std loopne andl jmp fs inc or pop les xchg enter jg and ror mov jg xor sbb out cli (bad) (bad) jnp push shlb sbb xchg nop lea dec inc dec mov push in mov ja les sub xor push or cmc (bad) pop scas sbb (bad) (bad) decl sbb das or sub repz sub ret lods dec (bad) fdivr (bad) (bad) dec das jnp loopne add jno sbb lret popl mov enter scas (bad) (bad) (bad) (bad) mov add mov insb mov or sbb dec leave aas nop ficom decl inc pusha push movsl aam pop stos ljmp (bad) clc push xchg adc ljmp pop (bad) jg mov jecxz inc mov lret pop xor lcall and ret push in jmp adcb lcall xor and inc ror xor mov push mov xchg subl push lret jg (bad) sti subl xchg mov sahf dec inc dec push mov inc jmp aas jmp es mov ljmp mov mov (bad) push stc push (bad) (bad) (bad) mov mov and mov sub sub mov and mov xchg (bad) (bad) (bad) pushl (bad) dec movsb cmp (bad) xor xlat or scas out mov adc jns xchg fcomi mov ficompl stos dec push daa loop mov repz cmp lret push cmp sub xchg enter (bad) (bad) (bad) out jb lock pop test nop jg inc aad jb lds mov jne data16 ja (bad) fisttp dec cwtl sbb imul in (bad) sbbl inc test in test inc cmc pop outsl mov test xchg das mov lret lea movsl push (bad) (bad) decl xor or inc pop stc inc mov cmp xchg inc jae mov (bad) jmp inc push xor dec push cmpsb mov add mov xor (bad) jg aam into out jns imul push lock dec add js mov cld (bad) mov bound jo out mov std (bad) jg pop aad shrb cmp insl lahf or cmp shl sub cwtl out clc (bad) jmp sub fwait adc jb push fdivl push call test out cli (bad) cld sbb popf leave push movsb test sub aam mov and (bad) fisttp push pusha sub xor imul test cs cmpsb imul lret push push jecxz jl (bad) (bad) (bad) (bad) fisubrl or inc repnz inc inc int3 repz gs ss ss insb in xchg test cld (bad) jg fimull mov ret xchg mov clc dec add jl sub dec popf cli (bad) (bad) (bad) decl and movsb sub scas mov sbb and divb cmp outsl cli (bad) orb xchg repnz vmovapd add xchg in cmpsb and fwait data16 das xchg (bad) incl mov mov out imull push xor test pop xor jmp lea sub int3 call jg pushl sbb or or xchg xchg xchg mov cli (bad) (bad) jmp or (bad) pushf insb in adc cli sub mov cltd lcall or jmp loope push mov out push cmp push mov decl pop aam cs pop popa dec jae lret dec (bad) cmpsl dec jno pop inc cmp sub std jnp,pn inc stc pop hlt test jl loopne in fnstsw (bad) (bad) (bad) pushl xor enter aam leave sarl loope mov cmpsl nop fistpll icebp incl mov adc pushf loopne fs xorl lcall inc adc sar adc cmp mov js xor stos pop in adc das xor (bad) (bad) dec es loopne cld incl pusha cwtl pop or push imul (bad) jg stos push sahf pop loope outsl cld xchg and xlat mov inc mov aas pop push add (bad) (bad) jmp mov jle imul icebp cmp fisubl mov iret (bad) jmp dec dec incl (bad) (bad) stc mov clc and xor (bad) hlt iret test adc test fisubr and push or jo mov (bad) jmp orl mov fistl fcmovb jo jne aas (bad) (bad) (bad) incl and and and add mov mov inc mov mov sbb in dec data16 mul (bad) (bad) (bad) incl loopne jbe out jecxz je ss in imul dec push xor pop popl jg (bad) out inc shll dec mov xor xor dec xor jl sub mov insl shll cmpsl dec rol idiv jg (bad) mov out mov and lock rcrb js jne pushl rorb pop adc push mov int3 fdivr bound neg data16 movsl lret adc sbb call dec out push jecxz lods int3 push or es pop or aas fsts movsl ja (bad) mov fidivrl fwait out mov flds sbb ljmp xor mov push insb data16 enter enter cli jg js sub sahf sub sbb dec (bad) into in fs (bad) (bad) pushl mov aas mov mov mov into mov sbbb mov (bad) (bad) call cmpsb outsl sub mov das mov in xor (bad) fnop mov loope mov push loop cmc add icebp ljmp mov sub dec std (bad) (bad) jmp dec pusha jmp sahf das and outsb push jg jo sub push push adc (bad) xor (bad) ds and mov loop mov jnp ss popa lcall popf fildl mov push push in jmp ljmp (bad) cli or jae pop scas xor mov inc js and js push sub mov push mov dec (bad) ljmp add add lods mov les jbe loope les call jmp adc in vdivss (bad) fsubs (bad) mov lcall push mov or xlat loopne cmp loop sti or test and dec add (bad) (bad) dec movsb repnz stos ss out add andl xor add sub mov clc test (bad) dec inc in mov popa (bad) and rolb add push mov mov (bad) incl fsubrs popf mov mov insl daa ss lret ss jmp adc or or xchg inc (bad) (bad) (bad) (bad) jg out (bad) push scas out (bad) in add shrb lea arpl int imul cld mov das sub nop test in sti sti sahf pop pop out adcl dec call das out push jo shlb mov adc lea sti jmp scas mov fwait xchg push xor (bad) std xor push xor (bad) or or int3 decb (bad) fs popa xchg and mov cld inc add push out mov push or lock lcall (bad) xchg jecxz xchg adc (bad) push sbbl push push ja (bad) sbb call add jle xlat dec aam xchg (bad) (bad) (bad) jmp stos adc mov clc ss cli xchg sbb mov inc (bad) xor imul cld adc adc stos inc data16 lea lcall rcrb les push jo into test mov adc insb dec push outsb pop lock (bad) mov loope fildll mov adc push pop inc pop test mov out add hlt mov pop out push push (bad) hlt int (bad) (bad) (bad) decl incb sbb mov out pop push push or mov sbb lcall pop jno mov mov (bad) fistp je pop or push push adc adc imul std pop sarb (bad) cli ss lret push add addr16 push jecxz in pop int3 inc out lods mov mov inc cltd mov call xchg hlt add or (bad) (bad) decl insl xor sub push sub cld lret ja sbb xor adc leave pop test inc mov inc pop and in movsl mov lcall pop ljmp mov das mov mov (bad) in jl sti sub out jge (bad) ficoml and and (bad) (bad) (bad) jmp cmp adc push loopne sub xor sbb push and sub push jmp (bad) (bad) call (bad) sbb ret sub add insb xor mov imul hlt sub sarl and cmp repz stos inc decl sub push add pop sahf lock int3 cli cli roll cli mov push std (bad) ficompl mov adc cltd dec push cmp push or repz notb mov add pop jne xchg std (bad) (bad) (bad) mov or popa sti mov fwait dec outsl addr16 jo xor xchg cmp or test iret ja test aaa mov mov (bad) (bad) jg shlb (bad) iret jecxz stos cli mov daa xor jno inc mov (bad) std mov sbb lahf bound popa es mov into clc pushl add or pop jno xor mov cmp and inc inc popa lea jae push in ljmp lret pusha sbb push xchg pusha mov xor mulb andl adc lods pushf xlat cmp lods jp jecxz mov scas push push or ljmp sar push mov iret xchg ja loope icebp scas push shrl (bad) call mov mov cmp mov or xchg es out inc gs insb push rolb xchg jae add dec xor push pop push lret pop or aam inc test fidivrl cmp adc (bad) (bad) jmp mov add (bad) out andl jb and mov (bad) (bad) (bad) mov push jbe inc jp call dec xchg cmp ret dec dec loopne rolb loopne sar scas mov xor adc cli and out loop negb mov mov mov jl (bad) ljmp jg jecxz mov and add mov leave cmpsb sub and mov fwait pop outsb ljmp pop out xor ss popa xor sbb cltd lcall (bad) (bad) pushl mov xor adc adc inc mov add orl mov dec or mov pop fwait repnz test (bad) (bad) incl sub fstl sbb xchg incb sub es icebp mov push dec or jecxz push (bad) (bad) out and and pop xchg xchg inc cmp ja xor lcall outsb mov jp mov pop mov (bad) ljmp fidivr or mov jecxz fiaddl xorb inc and push push pushl add pop lret inc idiv imul cli jl icebp (bad) (bad) (bad) call sub das inc jno mov dec sbb pop xor cs xchg xor (bad) (bad) (bad) decl add add add add and fcomps pushl imul stc inc xor fidivr (bad) dec sbb xchg xchg and es es inc xor negb in add pop mov (bad) call inc das not inc lret fdiv nop mov lret dec pusha outsb lds inc adc aam outsl xchg ss popf roll (bad) lock mov ret dec push shrb mov jmp mul jne cmp pop cmp das xchg test ss xor push test inc jecxz into jge (bad) (bad) call callw lock arpl mov lret mov lret pusha cmp cli pushl cld (bad) pop add sub lret adc (bad) (bad) call ror int3 inc inc imull clc xchg icebp xor add pop (bad) fisub test push cwtl push (bad) decl lds push xor jo adc mov and movsl jno dec ficomp stos push cld push in xor fldt mov dec sub insl jle push sub mov xor (bad) (bad) inc in xor jo (bad) mulb loop mov les pop (bad) sti mov lcall jl pop mov mov or test (bad) incl clc and mov jecxz xor push sti shll xchg xor aas cmp xor pop cmp cmp xchg out iret jo loopne mov test (bad) (bad) (bad) (bad) pop jmp rcrl pop pop ljmp fsubrl lret push cmp (bad) mov xchg pop fs shr outsl push cmpsb cmpsl lock ljmp adc mov sahf fsubl fs test loop dec mov movzwl or mov (bad) (bad) (bad) jmp lds movsl xchg sti cs fnsave mov cmc jmp (bad) sub push (bad) (bad) (bad) incl inc sub and add inc clc enter sub push dec xchg hlt jp sbb push fcompl aam loop (bad) (bad) jmp imul adc and mov fnstcw cmp fist push (bad) (bad) jl sbb mov lea mov sub push pop les fstpt call (bad) jg in jbe stc xlat das ds mov jns hlt mov jl outsb sar (bad) (bad) jmp push pop btc out jl popf cltd add push mov push (bad) pop and sar shll inc and jae sub pop inc inc movsl into mov and sar (bad) fild push dec out int dec arpl push cli (bad) add inc ja or (bad) lcall cmp test sti mov jns xchg insb data16 hlt pop stos nop icebp add push lret and (bad) call mov sub loope aas and sbb data16 pusha and ljmp mov jg xchg cmp and xchg pop clc (bad) jg add in adc sarb sarb outsl clc mov dec rorl enter sbb jo sub (bad) (bad) cmp inc rorl (bad) repz hlt aaa in out dec (bad) and lock sbb pop xchg add push in scas fisub (bad) incl popf push inc sti loope cmpsb mov xchg (bad) sti scas test mov and movsl test dec decl (bad) (bad) jg out (bad) fcoml sub adc rclb push test rcrl push sahf mov out xchg push nop mov (bad) (bad) (bad) jg rorl lea lock stc (bad) test push icebp sbb data16 push mov (bad) (bad) (bad) cmp pop (bad) mov dec scas ficompl dec test jp jb or push cmp sbb (bad) (bad) (bad) out out stos sti popa mov cmpsl int stos loop out imulb inc dec (bad) ja lret or sub push fwait adc ja pop mov dec sets cli pop and ja mov cmc rep pop jne mov inc sbb out lds xchg test mov dec ret jg cld dec xor int js push cmp inc outsb jb data16 clc jg push sub addr16 (bad) (bad) (bad) jmp enter popf pop cld repnz lods imul cwtl arpl outsl iret cmp cmp loopne (bad) pushl xchg shrl (bad) mov ds outsl push inc push mul jbe jne (bad) (bad) (bad) mov jmp xor ficomp mov xchg leave jmp adc jp jbe das stos movsb std jg hlt lahf xchg sub or or pop ljmp loope (bad) ljmp in ds mov jp fdivr hlt pop pop mov incl cld pop push cmp push fsubl xor adc jb mov scas xor scas pop idivl xor movsb (bad) (bad) (bad) incl repnz xor push push stc je cmpsb sbb xor lock inc out lret popf fsubrs outsl (bad) ja loopne xor jmp movsl fwait or xor jg cmp mov js dec or (bad) mov push add mov add mov rcr test fisttp dec (bad) sub dec xor loopne mov jge (bad) (bad) (bad) decl xchg shrb cmp rorl punpckldq add inc cmp lea std mov das pop popl (bad) jmp fwait xchg mov mov (bad) out mov das clc dec scas and mov cwtl stos mov pop cmp xchg lds and xchg repnz pop add outsb lods lods xacquire (bad) jmp pop push repz xor xchg xchg jg push add and sbb in (bad) call xchg lods pop dec cli cmp or nop adc outsl int3 dec movsl addr16 inc fistl pop pop popa (bad) (bad) (bad) jmp adc jmp mov xchg push adc imul and (bad) lcall int3 out cmp or and mov inc fprem outsb leave hlt mov decl gs nop ja aam pop stos mov stos jnp push pop mov cli int3 daa or xchg data16 lock cmp xchg loopne sub enter push ret jl iret dec pop cltd inc and stos dec (bad) (bad) lcall mov xchg stc jno mov xor inc lahf or sarl (bad) lcall jl daa push fstpl ja pop add mov (bad) (bad) push mov pop xchg cmp sbb xchg ljmp mov (bad) lahf mov nop (bad) (bad) (bad) jmp jno sub imul aad pop jb mov dec jmp and iret and inc xlat mov dec lock pop xchg out (bad) xchg out (bad) (bad) jg cld push inc das mov outsl jo (bad) cmc sti sub dec adc pop or adc or (bad) call mov pop dec lea test je in test mov pushl std dec push cmp push fsubl loope cmp pop hlt (bad) (bad) (bad) mov inc sbb pop sti in push into and stc addr16 push aam jbe in call add fsubr int3 jge dec (bad) cmp outsl xchg mov mov xlat adc lds std (bad) ljmp pop push outsl test push call inc push repz add (bad) push pop cmp add scas lret push fimull sub inc lret stos cmpsl xchg shlb cmp scas fstpl dec xlat cltd push sbb push add inc sbb inc dec ret inc icebp enter loope,pn (bad) (bad) call xor (bad) lds add dec jle test daa xlat out incb inc push cli (bad) js pusha je add dec jns,pn test cmp (bad) (bad) cmpsl pusha jmp xchg (bad) incl jle (bad) sbb jnp pop sub sbb inc call and inc loop cmpsb xor sbb clc stos pusha sbb or (bad) cmp jle cmpsb adc outsl pusha faddl add (bad) pop into mov (bad) dec ret ret cmc test (bad) xor lea jo into jo decl ja scas lock int3 cwtl int fnstenv pop xor mull mov lods out xchg sbb pop repz inc (bad) (bad) (bad) ljmp mov sbbb jmp cmpsl dec pop adc ret loopne js adc ljmp clc mov ret inc sub push adc (bad) fildll jo sub adcl cmc sub pop addr16 mov out push add js stc test jl movsb push pushf sahf push bound imul xchg outsl sahf scas xchg lods and xchg push pop (bad) (bad) cmp sahf sahf xor rorb movsb mov (bad) lcall lock or mov iret mov jge pop mov adc mov xor std cli (bad) (bad) (bad) jnp inc xor mulb xchg lods pop mov jae paddd push dec push mov or aaa std adc or push dec xor (bad) jg inc add and mov pop mov jb adc lret xchg sub fidivl iret inc (bad) mov addr16 ja sbb test daa cmp (bad) mov out aas into adc movsb lret daa lahf rcrb pop mov hlt stos dec in cmpsl inc js xchg pusha mov pushf mov sub jb (bad) (bad) call fsubr in movsb aam mov stos hlt rclb test leave sbb lods xlat (bad) (bad) (bad) lcall int adc push push or (bad) cmp adc repz stos mov pop mov test or inc in loope ljmp cmp inc adc xchg shrl pop cmpsb mov in sub arpl (bad) lcall add or jmp sahf int3 cmp sbb loopne in je mov jnp sbb jecxz sarl mov pop sbb mov inc xor push scas push dec mov jg cld pop int3 lea pop lods jp mov inc push test (bad) (bad) mov xchg imul fiadd push fs xor dec mov or dec mov ds push push (bad) adc (bad) dec (bad) (bad) (bad) (bad) fcoms and adc fs inc add sub xchg popf jl jl push cmp (bad) incl and mulb sbb shrl (bad) pop test sbb test mov rolb arpl pop hlt ljmp lahf scas xchg mov call inc je mov jle mov (bad) (bad) (bad) jmp jno movsl dec xor icebp stc mov sarb xchg (bad) xor aaa adc (bad) ljmp xchg sahf ret jp (bad) int3 addr16 lds xor cld sub fnstsw jge shrb repz pop adc cmp pop xor nop and xor inc or add std test mov xchg dec stos iret mov adc mov outsl lretw sbb int3 push cmp add pop scas fldl test in fisttpll (bad) pushl div pushf cmpsb into fwait xor popa mov movsl nop sub (bad) arpl (bad) (bad) call jne and sub iret and outsb push clc mov pop add sbb data16 (bad) mov sub xchg dec out lock lret mov jg es (bad) (bad) lcall repz sub or pop and jb mov cltd xor xchg adcb pop into jecxz jmp mov jp fcos outsl adc loopne dec jnp inc fxam sbb or bound inc ljmp (bad) repz sbb xchg inc lods add lahf and mov jl loope (bad) mov stos mov ficoml outsl insb dec scas (bad) (bad) lcall and shr push mov in aad out xchg jb sbb orl cs mov push inc ja jp gs (bad) fcmovb into cmp scas fimull or mov in rorb lahf and (bad) (bad) fcomip lcall gs dec out idiv mov and test jl xchg inc (bad) (bad) ljmp hlt mov fs or pop inc addl (bad) jbe (bad) sub pop and scas mov aam movsl dec int cmpsb sub mov fwait (bad) pushl adc sbb add (bad) mov adc push or push pop or mov ds lea fcmove inc push jmp repnz adc cmp inc pop (bad) (bad) push mov jg push frstor test mov insl inc push fisub jnp cs mov pop stos enter dec xor loope mov cwtl adc fs xor fcomip jmp cmc push cmpsb push in jmp mov (bad) jge dec add mov cmp subl (bad) (bad) pushl pop cmpsl xchg cmp insl push sti xchg inc fwait lcall sub (bad) call inc stos mov add jnp pusha mov push add movsb adc (bad) (bad) ljmp mov xchg mov and shr aad lcall decl and inc mov stos adc lods movsb (bad) (bad) incl not pusha mov pusha and popa mov cmp js mov xorb jle (bad) push imul mov loopne fidivrl incb xchg push (bad) (bad) ljmp pop ljmp (bad) lret in mov push test test sbb add pop icebp inc push ljmp fs out push (bad) and or scas call xor nop (bad) sbb lods inc inc jo lcall lea pop jge test adc (bad) mov andl ljmp inc loop (bad) xor push sbb orl add outsb pusha cs inc mov pop rorl xchg fdivr (bad) aas xchg cmpsb insl cmp scas lcall jecxz rcrb (bad) (bad) (bad) call jne js and (bad) mov add mov add dec push xorl gs cmpsl (bad) (bad) (bad) (bad) mov cmpsl ret fmull nop cmp mov out sarb jmp xor push rcrl mov xchg repnz mov xchg sar (bad) dec in add into lock inc ret (bad) mov adc mov gs (bad) (bad) decl jae inc or mov dec dec mov pop jecxz out add fldcw (bad) out movsb hlt xchg or (bad) idivb (bad) (bad) (bad) call cmp pop dec xchg xor mov cmp xchg pop mov cmpsb (bad) (bad) (bad) jle adc adc xchg xchg mov pop mov mov outsb xor fcomip (bad) call xorl insb pop mov cmc add and (bad) (bad) (bad) sti jg pop push add inc xchg pop fidivrl lods and mov out push jge add test mull sbb (bad) clc (bad) les mov xor (bad) pushl je mov arpl and data16 xchg adc jno sar (bad) cmp pop lds and clc sub and dec cwtl add test (bad) (bad) incl xor pop enter test push mov stc sub cld inc les mov (bad) incl pop or lods xchg cs aam add dec addl (bad) (bad) (bad) incl notl (bad) nop mov (bad) xchg outsl iret pop das push mov insl sbb int3 mov dec sbb add jp jle cwtl int sub (bad) (bad) incl popa jo xchg cmp sbb or in adc add pop stos jge lods push inc sbb jmp pop scas jmp sbb mov orb mov ds cmp (bad) (bad) incl sarb sbb cli add icebp adc ss fdivs pop arpl adc sub decl das (bad) pop inc mov adc (bad) (bad) aas push cmp dec mov shrl jno sbb mov mov dec mov cmp and inc adc fisub or sub cli dec inc dec in cld ss orl call mov fwait out out mov test jae adc pushf jg into adc (bad) (bad) (bad) call outsl xor out xor ljmp mov jecxz push pusha sti (bad) incl jmp push push adc (bad) hlt icebp or push mov lock xchg jo idiv (bad) incl shrb mov push outsl clc cmp sbb loop jmp andb xchg js xor sbb ljmp mov dec outsb cmc pop les xor test mov cmp lock cmp test das (bad) ljmp pop jo (bad) clc adc and jo mov jmp mov xchg xchg push out adc clc cmc cmc ret cmpsb jmp popf (bad) or inc paddsb and addr16 add test push mov pop push (bad) ljmp adc movsl sti movsl xchg lcall in jae xor data16 (bad) cmp dec cmpsb repz jo pop jo add fstps mov cmp dec mov (bad) (bad) call jmp push xchg clc nop or add inc out mov pop int3 adc loop push loopne dec pslld inc iret push adc ficomp lcall push ljmp orl mov stos or ss out sub aad (bad) jle loopne fdivrp add cmpl cli cwtl lea cli (bad) (bad) decl xor push pop popf stc loope (bad) sahf jne pop test lcall mov adc sahf xlat dec fimull push lret into ret in je dec mov pop cmc aad mov insb sbb xor add fisttp call in push daa cmp jb mov and incl insb xor stos jg mov (bad) (bad) inc stc into pop cmc xor popa test (bad) lds shl cs mov out out mov (bad) (bad) (bad) call ljmp (bad) clc out and call cmp inc adcb (bad) jmp cmpsl mulb pop sbb es or pop inc roll sti cmp test out (bad) out clc (bad) call mov jb pop mov shlb xlat push std test (bad) lcall inc hlt outsl sti push cs xchg pushf xchg (bad) outsb ss stc xchg stos mov add lret leave mov sub push je das ja into xor in jp mov push push fs mov std or mov addr16 add mov in adc (bad) (bad) (bad) js jae imul data16 clc decb push test cmpl jmp xor add xor mov repz cli (bad) out movsb ja or repz ret imul lcall pop cmp inc loop and adc mov imul (bad) (bad) (bad) ljmp or and fwait in and inc imul arpl mov fld jbe popf or mov mov (bad) fstpt adc stos out shrl jmp incl ja sbb imul sub adc es insl ljmp and popf lret shrl sub cmp xlat lods (bad) aaa inc loope mov inc lret (bad) (bad) jg xchg pop xor mov mov push insl lret ds stos add ja rorb dec xor mov mov (bad) (bad) jmp movl jb cmp ja (bad) pop xlat adc and jmp (bad) inc or out xor sbb test icebp (bad) (bad) jmp int3 and sar in pop jns xor xchg dec mov pop out imul test pushl mov push in aad iret mov and mov dec sarb (bad) push and sbb lock lret xchg inc (bad) (bad) call mov mov fstps inc jns and inc fisttpl leave icebp (bad) (bad) fbld stos cmp cs lds out in sbb call lcall call sbb inc mov mov jle or inc dec movsl sbb add ljmp (bad) (bad) fist das call (bad) mov inc fimul (bad) jnp adc ljmp mov sub iret cltd popa and es push jp (bad) (bad) (bad) dec add xrelease in enter out mov and fldl outsl (bad) (bad) (bad) pushl or xchg and fisttpl iret mov adc lock mov ror (bad) pop ljmp (bad) push sahf inc in pop dec push inc inc or jg jbe mov (bad) int3 pop repnz jp scas push xchg inc pushl or arpl bound jns and call fs jmp bound sub adc or mov push repz push xchg xchg ljmp lods movsl push and sahf sti in push adc pop lock (bad) (bad) (bad) pushl lods out cmp leave fdivs pop push insl lea and hlt fldenv scas xchg and (bad) in arpl adc sub scas (bad) sarl pushf dec lods sub jecxz cli jg mov in cltd loope sub (bad) sub inc (bad) xor jle shlb nop loop lret (bad) or fisttpll imul data16 enter lret pop mov jecxz into popf pop adc in incl imul cmc sbb ljmp (bad) lock addr16 addl loop mov into push jns les stos xchg icebp loope or (bad) (bad) in jae leave add jp adc les xchg lret in mov add fsubrl decl add sub mov cmp and dec pusha repz add clc (bad) decl mov pop loop xor decb loope adc add scas orb insl into mov sahf test stos jle (bad) (bad) (bad) pushl loope mov int3 cmpsl jmp jo cmp inc push xor cmp js lock inc les (bad) (bad) (bad) jmp ss frstor ret imul stos loope jae cli jg jle test in pop and (bad) jp pop mov pusha jge mov (bad) decl cwtl inc lds out arpl pop push mov and push mov or or idiv push adc cwtl dec ss out jg jg cwtl sbb (bad) (bad) (bad) (bad) cmp adc test mov cld lcall ret mov in jo push decl inc jmp les es into jp je mov (bad) (bad) decl pop sub scas dec lock xor test addr16 mov sub xchg (bad) and mov or insb xlat into int add out push xchg in lahf add xchg (bad) jae push or outsl leave add (bad) (bad) (bad) call cwtl (bad) aaa movsb fs loope mov and fsubl (bad) mov ret mov test or enter aas (bad) (bad) (bad) jmp cmpl pusha dec xchg sub clc gs sbb sbb sub push xor (bad) (bad) (bad) fstps inc std push test or and shrb andb dec mov add mov sub (bad) (bad) jmp fildll aas push int (bad) js test xor jge lret pop sub lret fist pop push (bad) (bad) (bad) (bad) fdivs or adc ljmp imul xorl xchg mov (bad) rolb dec lea adcl adc ljmp mov adc or inc push popa lds (bad) (bad) (bad) call sahf clc mov addr16 mov mov push in or mov (bad) fcmovbe pop daa mov mov dec dec mov jbe sub jmp cmc clc inc loopne jnp int (bad) lcall hlt pop cmc xchg test adc lds push jo adc sbb cmp lock (bad) (bad) (bad) xchg push iret pop and in mov mov and push mov (bad) (bad) (bad) fistpll ret push js nop sbb mov movsl fild mov xor pushl (bad) loope mov les incl xchg xorl mov loopne shr daa pop js dec dec lret ret cmp dec jg (bad) lcall push inc test sbb fcoml cmp mov subl inc out jge cmp shll xchg cs sub xchg (bad) ljmp xchg test test fbstp aaa repz sub push ret jo (bad) jg fstl repz outsl pop imul std call in jno jg (bad) push mov lahf mov fs and inc out in sub jecxz scas ds (bad) call or iret in mov push add mov cmp inc pop negb mov aaa jge mov out (bad) mov lock jne std cmp (bad) (bad) (bad) (bad) lcall mov and add mov pop xchg mov cmp xchg loop jb push ds outsb push into xchg sub rclb (bad) mov subl test cmc push fdivr pop call repnz into mov ljmp inc out (bad) (bad) (bad) decl mov xchg xchg out loopne in ja sub adc xchg rorb stc mov call es dec mov push inc push jg in lcall rcrl mov mov add sbb mov (bad) mov stos xor ror adc lahf jne xchg (bad) pushl xchg mov out push in mov in push (bad) xchg mov lods or jno push sar (bad) jmp outsb dec ret mov clc mov dec xor cli (bad) (bad) (bad) jg mov mov mov mov inc push adc mov ds inc leave push (bad) mov test orl ret adc gs mov incl test and in mov and or into (bad) lcall mul sti push cmpsb mov xor xchg or jb dec dec insb (bad) (bad) (bad) (bad) jns fiadd push mov cmpsb fwait mov inc dec cmp pop jp xchg (bad) (bad) (bad) (bad) decl pop or (bad) ja fs xor iret test jae dec mov decl dec (bad) je data16 cmp inc push dec pmullw lods adc test stos cmp jmp notl fs repnz (bad) ljmp dec mov lds mov dec push out bound cld (bad) movsb sar ljmp and das outsb jbe adc and fwait xor push enter outsb orb (bad) (bad) (bad) pushl mov lret jle jge mov cmp imul xchg cmp xchg pop (bad) (bad) decl int3 xor movsb pop pop imulb int3 push mov decl aaa loopne adc repz dec lret cli inc adc (bad) dec cmp push popf fwait clc repnz (bad) jg xor insb mov add pushw dec ss inc repnz sbb (bad) (bad) (bad) mov dec inc cltd in imul popf pop push les and enter sbbl xor fst inc cld add pop mov push mov ds decl (bad) lcall mov mov lahf sub and loope and jne adcb sbb (bad) pushl movsl sbb push lods sbb sub sbb cmp ja ret rorb outsl mov cli (bad) and and gs cmc cltd lret xchg div mov addr16 (bad) (bad) js test dec pop jo enter ucomiss vmread push ficoml leave add pop (bad) (bad) (bad) call test cmpsb fbld cs stc adc pushf mov andl pop xor (bad) (bad) jns mov xchg push cmovl fwait sbb (bad) (bad) fucomip sub test cwtl cmp out mov loop out lcall cmp xchg mov jg out mov lcall push sub insl adc jle lcall (bad) jo aad xor mov ss push movsb stos inc in mov push clc mov es clc (bad) call dec insl push fimull fstl insb mov mov push and ljmp xor mov add (bad) adc add or push data16 mov (bad) cmp (bad) jmp les mov and sbb cld loope (bad) cmp xchg mov push out cmp push jl jbe adc lods (bad) ljmp ss cmpsb jns test add pop sub adc push lahf sub stc mov (bad) cmpsb mov push fbld incl repz inc dec xchg js in divb (bad) (bad) (bad) jmp mov arpl es and push mov test test pop adc lock (bad) out fidivr jp (bad) stc (bad) jnp movb (bad) jmp outsb mov jp cmpsl jmp enter mov push (bad) (bad) (bad) cmp push fist fidivl out mov out (bad) cli cmp inc sbb (bad) (bad) (bad) call lods enter or sub imul jle jecxz mov iret (bad) (bad) (bad) (bad) lcall rorb icebp jae call xor lock xchg mov cltd scas xor loopne (bad) lcall dec incb in jae repnz pushf aaa mov outsb mov cltd inc xchg lcall mov sub cmpb push cmp (bad) mov leave daa lods push rcll pop push lret mov lods pop or lea (bad) (bad) (bad) jmp mov push das or xchg ljmp movsb push idiv sub sub push out xchg and (bad) (bad) (bad) faddl loopne xchg pop cmpsl or jnp std (bad) popa sbb mov xchg xor or es jns add lods ljmp mov sub imul sbb popa pop (bad) (bad) incl sbb popf mov aas fwait pop mov or stc out (bad) (bad) (bad) ljmp mov jae mov je mov pop mov pop movsl inc in xchg xor hlt (bad) (bad) decl or loopne fdivs (bad) das mov rorl xlat repz push outsl (bad) (bad) fbld icebp hlt jne enter fwait js cld pop cld jecxz pop push pop nop mov jmp std incl jge jne inc in in push std jnp lret std (bad) sbb (bad) fildll cmpsb pusha daa imul pop sahf adc sbb jnp std (bad) (bad) (bad) lcall mov repnz ljmp int jns lcall fwait and inc mov (bad) incl xchg rorl xchg aad mov sbb popf add leave xor fcomp push les (bad) incl and ret cmc jg (bad) pushf sbb mov dec test xlat mov es in (bad) decl sub outsl (bad) xchg not or sar dec test xchg (bad) jg inc bound arpl dec mov pop loopne idiv fcomip jmp xor jb push sbb lods fdecstp cli mov (bad) (bad) (bad) jmp lcall jae lods sub pusha inc dec daa dec sbb sub add jbe notb mov sub push shrl lea pop (bad) xor mov (bad) jg push jbe push sbb loopne cmp push xchg arpl jle inc pushf repnz (bad) lcall (bad) test mov testl dec or xor leavew dec hlt cmp ljmp leave xchg add add cmp clc (bad) cmp (bad) mov pop cli jae pop xor insl dec je lahf push xor lcall cmp scas push call test cmpsb icebp incl mov xchg lret (bad) (bad) push adc pusha mov adc rcrl xlat std inc out dec aad lods sbb pop xchg lods inc pop dec (bad) mov adc mov push mov push icebp sbb fdivp jbe mov outsb notb decl repnz sub mov scas push lods dec (bad) (bad) (bad) decl and sbb xor (bad) mov int nop sub xchg xchg into popa iret jb fcomip pushl loop cmp imul test lods jp lods xorb (bad) (bad) push fstpl jg and call std mov pop movsl data16 sbb (bad) (bad) (bad) jmp cmpsl mov sbb sahf jp jne jmp pusha loop fdivrl stos add push mov js stos (bad) pushl rcll xchg fbstp leave leave mov jnp fcoms xor jbe outsb xchg xor sbb ds scas gs wrmsr in mov inc ljmp cmp mov test repnz popf lcall push mov dec sar bound mov scas iret fstl push inc and in stc daa (bad) in pop fs insb mov (bad) sbb jp fdivr (bad) (bad) (bad) mov sahf data16 xor dec repnz je cmp decb sub (bad) (bad) (bad) (bad) fbld lods mov jno or sbb jp sti scas sbb sti aad pop (bad) hlt (bad) (bad) (bad) decl inc push push rcrb sub scas mov add pop in loope test in (bad) (bad) (bad) decl xchg ss fnstcw inc pop (bad) dec push mov sbb and mov iret xlat fs outsl sub mov pop mul push pusha clc das sbb jb movsl xor sbb or jle ffree out jb dec sub sub aas int in mov ret add stc imul (bad) (bad) pushl mov sbb lds push push cmp lret mov pop sbb sbb add or out dec mov push xchg mov (bad) xchg int3 inc ljmp ljmp (bad) hlt inc outsb sub (bad) fcomps mov add addr16 or xchg push das cmc lret lds (bad) pushl std sub inc leave ljmp divb mov out mov decl push cmp cmp adc xchg sti ljmp jmp push popf aaa dec pop inc popa (bad) xchg (bad) jne jo fnsave pusha (bad) lcall imul push push push add sti cld add incl sar mov cmp jge or mov mov fsubrl negb lret or ret incl jmp and jl add lock ds test pusha repz pusha mov (bad) (bad) (bad) mov jo adc test pop insl test mov cli fild sbb add lods fdivs adc xor mov lcall jle dec pusha fwait cmp ret (bad) mov fs push mov xlat (bad) jg call pop hlt lcall aaa cmp fisubl mov cmp (bad) (bad) in sbb pop jo xor xor rclb jae dec cmp ss xor outsl xor sub lcall iret mov sbb push xor in xchg mov xchg (bad) loopne add cld rorl pop lcall dec lea (bad) call hlt ret fstps and and imul outsl jle leave add jae jecxz test fadd pop lds outsl sahf inc push jecxz jecxz (bad) jbe push sbb (bad) inc mov int3 stos push and fidivl add cmp sar (bad) (bad) ljmp ss pop out testl inc mov into push test inc (bad) incl jne inc arpl pop arpl push xchg or mov aad adc (bad) (bad) inc jnp xor (bad) mov xor push dec mov xchg pop into insl bound mov arpl jbe in (bad) jns mov cmp mov aam jae int rorb shrl sbb xor in shl xor cli push jb adc jge inc (bad) jmp in gs and test (bad) lcall mov daa es cmp ret mov scas cwtl ja (bad) push cmp sar mov push and fsubl test (bad) mov pop pop add jmp loope cmc and fcomip incl mov sub imul lret mov (bad) (bad) (bad) mov jge mov push inc mov pop je xchg inc addr16 inc enter add std (bad) (bad) pushl xchg inc jle (bad) xchg xor hlt mov cmp fistp push mov mov sti cli (bad) mov sbb sahf test orps (bad) (bad) call in cmpsb cmp arpl mov jecxz dec in sbb cmp adc cmpsb insb jmp stos mov int push stos push xchg mov add inc call lcall insb push icebp test xchg into mov add inc adc sbb call mov (bad) out es int3 xlat enter (bad) jmp pop mov jg push inc push mov add adc (bad) (bad) dec push sub xor sub jae or sbb xor push inc pop outsb mov (bad) (bad) (bad) incl cld xorl mov push aam pop mov jmp cs mov inc loop push mov mov hlt out push xchg daa iret cmp cmp sbb decl cmp icebp (bad) hlt inc push nop mov pop fbstp mov cmp nop jg push push dec (bad) xlat mov sub imul mov add call test in lret pop ja ds mov mov (bad) (bad) (bad) call lret jbe sti andl pusha cmc jbe inc and in movl sti xlat jne adc dec in movsb sti sub ss mov lock jmp pop jns xor dec xlat add mov mov and int3 fcmove out (bad) (bad) (bad) pushl and stc xchg pop iret cmp bound pop test rol inc xchg push (bad) decl mov pop sub pop dec outsl adc mov jnp add jb in mov (bad) pushl or push and mov push cmpsl jecxz clc rep pop imul lock int (bad) (bad) (bad) jmp stos dec xor les dec stos je sub mov (bad) pusha cld fwait adc fcmovne rclb push imul push add dec lods adc add leave xchg pop aas les adc jg inc lods push (bad) lods push rolb push fmuls pop add sub (bad) call ljmp lea jl xchg jnp and gs adc outsb cmpb adc sahf mov xlat push pop and cmp and (bad) push inc jns jo (bad) out cli cmp xor or sub xchg pop scas jmp sbb xchg pop mov xchg js adc adc mov hlt jg inc mov adc push mov (bad) repnz xor mov (bad) pop enter (bad) ljmp repz lea mov pop stos push jmp (bad) (bad) inc sti jg aas (bad) add popf push pop jecxz ds rcrb mov in mov adc dec out rcrb fimul mov (bad) inc mov mov xchg inc out out adc adc mov or stos push (bad) push (bad) (bad) fist scas jns xchg jecxz pop xor lds loop int3 add incl rorl add jb dec lahf lret stos (bad) (bad) (bad) fisttp std fcompl or pushf cmp push adc ffreep sbb decl imul inc test xor faddl ljmp push mov int insl sbb je push pop (bad) psubusb mov jg xor push mov inc inc cld outsl mov jb sbb (bad) (bad) sahf das stc mov movsb ja stos es sub ret mov dec sbb sbbb cmpsb xchg jbe mov fimull mov (bad) (bad) (bad) mov sub lods aas fcoml cmp dec jno test xchg (bad) (bad) mov in mov ror sti push xchg push ds xchg jno mov dec adc mov xchg (bad) imul or int3 js int3 dec lea mov mov dec cmp (bad) jmp cli dec adc (bad) ljmp lock out xchg bound and lahf jns mov fbld pop cli cmp aaa jbe into pushf push int3 pop loopne call mov xchg ss lahf idivb cmp pop xchg cmp (bad) (bad) decl push sub popf mov inc int3 or push pop cmpsb xchg clc mov jo mov push lcall push rclb sub rcr or mov or (bad) (bad) (bad) cmp add mov fwait cmp cmp mov push aam push outsl (bad) (bad) (bad) incl adc xchg arpl xchg test add push leave test xchg test ljmp jle and stos (bad) mov mov es sbb dec imul (bad) (bad) incl mov ror push call mov (bad) mov adc adc push sti in (bad) dec fdivrs xchg int3 cmpsl dec cmp mov push push pop jl inc dec out push lods sbb lods scas fstl mov add popf insb cmp xor mov mov (bad) (bad) (bad) incl cmp test repnz inc movsb hlt je and sbb push pop cmp (bad) (bad) call or and mov aam push push fsubp mov xchg and xchg sbb pop xchg jge loop or test lods mov jp pop pop (bad) lds (bad) mov (bad) (bad) decl push repnz in jb loop loop lods jl ds stos int mov add lea call scas in sbb icebp jl lods notl scas add leave xchg jbe or dec insl popa popf stos jp inc (bad) incl cld in lods out push (bad) fidivrl and dec sub jbe loop (bad) (bad) (bad) call cmpsb daa mov cmp ja and stc aad inc sbb (bad) mov repnz rcrl std cmpsb pop lock imul mov fwait das sub mov call and scas push ss mov notl push repnz outsb xor dec lock pop popf mov icebp xor jmp push and loopne scas test insb scas sahf cli outsl push jne xchg mov (bad) (bad) jmp mov mov lock sub xor movsl push repnz (bad) (bad) ljmp add sub ret dec cwtl aaa dec sar sbb test (bad) lcall cmc pop rclb sub jmp es jmp and loopne in fadd nop or pusha imul imul movsb imul lcall scas (bad) or mov and cwtl outsl push mov mov (bad) decl lea inc fldl iret add les xchg cmp out shll (bad) js je mov div mov hlt cmp adc subb fs and inc test xchg (bad) sub aaa add push inc mov subl pushf fwait mov out stos in lret mov mov jo push aad sahf pop outsb (bad) (bad) (bad) pushl pop iret mov lods test jae sub movsl mov dec ret cs imull pop lret rorl add mov push and (bad) incl xchg inc jns incl hlt dec pop movsb mov sbb (bad) (bad) (bad) decl pop or or dec dec mov aad mov ljmp cmpsl (bad) (bad) (bad) (bad) jl rcrb jno jmp push sub and mov mov (bad) inc test gs push add pushf adc pushl xor adc push cld stos inc push cld inc data16 ljmp es cmc in (bad) (bad) call aam xchg adc test ret jmp faddl cmp or js scas clc (bad) incl pusha push scas inc shrb jle jle fisttp xchg cmp (bad) (bad) fcomip jo jmp loopne xor mov dec inc jb in (bad) xor sub (bad) lcall lahf cs imul pop or imul push xchg pushf mov jne call in (bad) (bad) cmp cli jns fsubrl aad aad mov add aas enter pop add lock (bad) inc aad sbb or fs jne mov xchg xcrypt-ofb cmpsl in (bad) ljmp and mov mov inc inc and into jbe mov aam jbe xchg xchg sbb pop pusha dec insb mov add mov fdivrl sarl inc jb xchg mov jb adc adc jnp (bad) (bad) (bad) (bad) lds outsb out imul pop cmc sti xchg cmpsb (bad) (bad) mov das repz xor jmp dec add push pop mov inc sbb push mov cmp pop mov fist jno jmp rcrb fcom call inc (bad) scas mov ss repz adc mov pop or aam out call pop jl cmpsb add arpl jmp leave sbb aas out shr fldt jle mov and cli cs adc and adc push (bad) (bad) pushl xor mov lds cmc mov int3 jbe add fisttp add inc icebp mov jg mov (bad) xor ds daa inc sbb and push pop mov test incl push icebp mov or and pop mov sub ljmp adc outsl popa xor pop enter sahf sahf sub or insb adc lret mov add add or jae pushl mov scas (bad) (bad) jmp dec lods and into xchg mov icebp pop cmpsb (bad) jg dec cli lahf (bad) inc das inc ret inc pop inc aas lret jle and xor in bound (bad) (bad) (bad) decl in cmpsb fistp mov call jmp pop mov dec out (bad) (bad) inc cltd mov (bad) imul sbb xchg out ret mov (bad) (bad) mov clc out data16 (bad) (bad) (bad) lcall mov cltd push add rol imul stos push xchg lea lds clc (bad) (bad) fistp faddl popa cmpsb test fbstp out shl sub mov incl pop mov dec mov and xchg loope add out into lcall mov push add push mov jle fsubrp push inc repnz and (bad) (bad) js daa sub loope sti inc flds push adc and (bad) idiv fisttp arpl dec aas pop into dec ret pop mov out pop ljmp xchg mov cs sbb lds add mov iret mov pop and (bad) lcall pop pop mov outsb movsl daa jg lcall call aas mov fcompl es pop sub cld out xor cltd jne pop sarl not outsb jge popa popa mov pop sti test jge dec fildll stos cmpsb xor in (bad) stos cmpsb lods inc or xchg (bad) mov xchg dec fdivrp sbb mov push (bad) decl sbb sbb or cltd xor pop das ficom pop push mov adc lods in (bad) lcall mov mov mov out icebp cmp sub sub mov and mov jg pop repnz clc fstpl (bad) pop (bad) (bad) cmc mov cmovo fadd stc scas adc stc pop and fisttpl std dec sbb mov pop popf jp mov jge mov sbb push (bad) (bad) (bad) jmp mov xor daa js movsl xor and adc adc push mov ja adc (bad) (bad) (bad) pushl out divl rcrb jo nop stos jp xchg xor out push mov cmp (bad) (bad) (bad) incl mov in repz sub stos add insl out call and rol repnz iret jl push mov pop dec loop dec repz dec sqrtps ljmp addr16 or mov outsl fwait jnp inc ficompl dec fmul je cmp jg jge inc xlat jno repz out gs mov mov nop (bad) (bad) call and jnp push (bad) jae xor mov adc gs pop (bad) js (bad) (bad) (bad) decl mov mov pop (bad) clts push sub cmp mov (bad) dec mov cmpsb mov pop incl xor mov hlt sub jmp loope push (bad) sti dec and mov add inc imul mov push adc dec or jecxz lds jmp xchg cld mov pop es js add cmp (bad) (bad) pushl pop inc lods popa nop imul pop call in dec dec pop or dec mov jne arpl (bad) (bad) (bad) inc fs xor pop ret sti movb cmp mov adc and inc xchg fnstsw movsb daa inc cltd sub sti ljmp pusha rcr and inc loop mov hlt mov (bad) incl insb ret (bad) sbb outsb xchg mov add (bad) (bad) (bad) pushl int3 test icebp lret mov xchg fwait pop xchg adc test mov (bad) aas or (bad) cmp pusha xor imulb adc shl cli fistp and call or scas push ljmp test cltd xor pop les cltd xchg sub push pop mov push in outsb cmp pop jge mov test incl (bad) inc nop and sub mov (bad) pop inc mov roll (bad) fsubrp jg mov call inc mov ret (bad) (bad) (bad) lcall pop mulb sbb push mov std gs sahf mov movsl xor lret sub jb es cmp (bad) jle xchg shrl pop out cli jle xchg icebp shl dec pop pushl das inc rorb das (bad) lock or push cmpsl std cmp std push jl (bad) (bad) (bad) incl data16 mov fistpll bound test (bad) int3 (bad) xchg (bad) adc or (bad) (bad) (bad) push or loopne pop out add sahf xlat cmp or out xor adc or loop (bad) (bad) (bad) call jne scas dec mov cltd aas (bad) adc cmp in ja cmp (bad) xor pop inc loope std (bad) incl hlt xchg lds cmpsl xchg xchg outsl sub mov (bad) mov scas cmpsl adc lahf cmc sti push icebp sbb test jle (bad) (bad) push fmull or or mov and jae or pop xor mov pop shr (bad) (bad) (bad) mov sbb (bad) inc push push dec dec cmpsl jo jae outsl loope popa dec ljmp xlat in pop or (bad) outsl mov (bad) ljmp (bad) fistpl enter pusha mov push xor mov dec mov (bad) (bad) (bad) fidivr outsb (bad) jecxz fidivr dec test outsb xor add mov jmp test jecxz (bad) (bad) (bad) mov adc and adc fdivl movsl sub mov xchg test aaa xor in sarb xor mov incl adc push mov jg sub in xor xchg dec xor and enter lds aam popf jmp mov lret aad int movsl xchg loope dec add sub std and dec add repnz das add sbb stos jp sbb (bad) (bad) lods outsl xor cmc lock imulb push popf jnp jg fs cmpsb mov sub hlt cmpsb mov rcll lods mov cmc rclb incl movsb adc (bad) loope stc pop cwtl stc test cli scas outsb push sar decl dec aas jo outsl pusha mov xchg inc dec sbb lea mov ljmp jmp in xor jl sub divl pop inc sub out pushf stos push in rcl mov rcrb test aaa cmp movq push leave scas sti mov jle dec push pop xchg dec pushw call pushl inc mov sbb (bad) popa xchg xor inc adc push add push (bad) (bad) (bad) lcall call or xor or cmp sub sub hlt decl daa add arpl pop movsl enter (bad) imul mov fistp out cmp xchg imul mov cmc je enter (bad) mov dec ljmp and outsl mov daa adc cmp popa imul (bad) (bad) (bad) decl jmp cs or dec mov xchg adc jp xchg push in inc and outsl jnp (bad) (bad) (bad) call mov ret scas push test mov sbb mov inc inc jno divl mov (bad) call lcall push (bad) imul dec (bad) (bad) lcall or xchg std lret add xlat addr16 mov hlt incb push push pushf xor adc cmp aaa cld incl pop in imul mov jbe adc xchg in sbb mov insl pop mov cmp ret cmpsl mov fbstp fs dec xor clc (bad) aas mov pop jne sbb (bad) (bad) call inc add xchg and orb cmpsb adc imul imul sbb cli jg lcall imul adc les (bad) (bad) (bad) call cltd jp je and not xchg jae mov lods cli dec (bad) (bad) pushl into push (bad) insb cmp push add lods lret in or insb cmp (bad) repz (bad) (bad) pushl pop cld xchg push jbe xor in loope pop fdivr mov mov pop adc (bad) (bad) ljmp repnz xlat inc jl shrb loopne adc ret sbb test (bad) lea icebp (bad) (bad) cli mov ret adc push sti arpl xchg ret cmpsl push dec cmp add xchg dec xor addr16 int addr16 (bad) decl repnz cmc js mov or adc outsl sbb ss inc xor pop dec add jmp and leave mov sti jmp nop adc (bad) sarl jnp and call shrl xchg cmp jb sub mov dec iret out (bad) mov (bad) jnp add cmpsl shl dec scas clc mov cmc mov into in adc and cli (bad) (bad) pushl sbb mov jnp adc data16 imul pop mov aad idivb (bad) pop subl sub pop loope es in fisubr cmp call sbb ljmp add push mov or hlt iret aad inc push aam lcall call std (bad) mov sbb cmp nop mov cli xor addr16 leave (bad) (bad) (bad) lcall mov lret out call shrl sub push xchg pop outsb mov pop or jg rorb scas dec lock std sahf loope add nop fldenv out push lods dec stc jo inc aaa incl dec scas xchg bsr (bad) (bad) lcall inc jle push inc xor jae rorb push mov pop xor outsb mov in mov daa nop inc jbe fs movsl pop sub (bad) (bad) (bad) pushl fmull aas mov dec add xchg fnstcw mov cmc jo in jbe (bad) (bad) (bad) incl ret or pop push mov rorl stos xchg inc fidivrl cmp loopne cli (bad) (bad) call mov fstpl push movb test mov pop xor das push pop or push or popl cmp (bad) (bad) (bad) decl sbb jnp mov arpl fld sub sbb or cli (bad) pushl out stos int3 cltd out fisubr pop sub repnz ficom push inc ja in rol mov inc sub lret call add lahf pushw les dec mov movsb stc mov inc jbe loope movsl gs out push test push lock (bad) lcall cmp in test xchg adcl pop rcrl jno sub lcall xor out or hlt nopl pop xor push and pop or lods pop xchg and sti push jae in mov mov push (bad) incl xchg inc and aad arpl add fldcw dec jl push fistp je mov (bad) (bad) incl or mov shrl lock pop mov ss fs inc push push mov push add lcall push inc xor xor nop lea sub jne,pt fsubl mov outsb (bad) (bad) (bad) pushl pusha adc scas (bad) cmp sub repnz int jp cmp lods loop mov xchg (bad) mov dec iret sub adc and addl lcall inc scas fcompl inc add pop sub cwtl pop in sub ja or fcomip (bad) decl sub into mov out jmp pop popl stos jo dec lea decl fldl lock adc sbb inc sub lret mov mov stc xor mov lea jle (bad) (bad) jg (bad) movb icebp mov test insb cltd inc jae rcrl divb and dec loop xchg jb icebp sbb cltd sbb sbb or and incl mov sar (bad) (bad) jg dec aas mov sub sahf mov inc inc mov adc out mov scas imul lcall dec faddl (bad) scas dec jl data16 clc jns xlat mov je (bad) (bad) incl out aad mov sbb or int jbe adc push sub fstl cmp mov (bad) (bad) (bad) incl cmp mov pop lret add into in jmp adc xor fwait ret pop push out std (bad) lcall aas cmp mov push mov inc push cwtl pop push adc cmp lock (bad) (bad) (bad) jns jg int3 xchg cld sub sub dec lahf inc ljmp jb out pop ret es ljmp jge loop push aad mov (bad) (bad) (bad) incl add sahf mov fdivrs mov dec cmc imul jb das or (bad) (bad) ljmp mov jnp dec and jo adc (bad) mov fistp dec (bad) (bad) out xor xor xor mov movsl inc jl sub xchg or cmp or daa push repnz mov fcomps icebp (bad) mov mov cmpsb and ss add (bad) dec je or ljmp xor out sarl cld call (bad) push in xchg cmc dec cmc xor mov pop push inc lock lcall jae negl mov repnz add jge cmpsb jg mov cld incl leave frstor data16 mov ljmp (bad) call push (bad) repz adcl mov pusha lock add mov fnstsw test sarl (bad) (bad) jl push xor mov (bad) mov or fstl cmpsl inc mov stos pushl out mov mov mov imul aas stc mov lock dec jg mov mov (bad) (bad) mov ror inc sub cmp adc (bad) pushl xchg dec outsb or add pop out mov or scas mov daa cmpsb push xor pop or mov xchg inc lea (bad) jmp es jbe jmp jb iret in mov add incl pop mov and in pushf sbb (bad) lcall mov (bad) sbb icebp jle insl xchg pop (bad) (bad) incl mov push je sbb ret inc mov push mov push cld and js jecxz inc cmc lds fwait int3 jns mov ds (bad) (bad) (bad) call out pop sub insb add outsb push push bound cwtl push inc sub and cmc ljmp lret ljmp cmp mov aam adc sar mov mov dec jne dec pushf push test mov xchg test mov call fbld es dec push fist or ljmp rcr stos movsl mov cmp into scas cmpl inc mov mov (bad) pop (bad) (bad) (bad) (bad) ljmp pop or cmp or mov pop pop arpl push loopne sub loopnew xor clc test jle jae ja insl in loopne sbb fsubs (bad) (bad) jmp int3 das loope lock stos adc push (bad) (bad) (bad) ljmp js mov inc jo and or mov int3 push inc out incl cmp pop push dec popa jnp xor sahf test (bad) (bad) aas push call cmp in fchs lock fdivrl push ljmp ds clc cwtl mov add adc iret push jns jl fdiv test or add fwait and dec sub add fwait ljmp add xor andb and add jnp movsb cs rorl push xor mov sbb jb lock (bad) fisttp movsb fstl mov adc lret loop lret mov dec mov adc repz fistpll aad ret cli (bad) (bad) fist test cmpsb add jp mov das inc jb stos jle mov das fldcw pop call rorb iret gs xchg js icebp call out mov push in xor add mov gs ror in in sar adc shrl pop (bad) (bad) (bad) call push fimull sbb outsl addr16 adc movb (bad) (bad) (bad) (bad) mov dec push add subl or movsl cs out fdivr sbb dec dec add pop push cmpsb je pushf mov push jns (bad) jg (bad) addr16 sbb or lahf cs cmpsb sub (bad) call and imul push mov and scas leave mov dec xchg jno scas ret das mov pop (bad) (bad) incl dec js std mov sbb mov cmp cld (bad) (bad) call mov repnz incl push push popa sbb ja push movsl dec dec mov sub adc adc rolb mov push inc mov outsl clc (bad) (bad) call push idiv mov jge cmp pop mov data16 sub lock mov pop in call (bad) (bad) out xchg fwait push mov (bad) loope inc inc pop fidivl xor push jae jp (bad) (bad) call cmc es shr (bad) es cld mov dec pushf clc repz loopne scas xchg (bad) call pop add cs cmovp into in mov mov adc adc call adc scas lock mov pop push jnp (bad) (bad) (bad) jmp mov scas dec sub and add mov push fbstp lret sub (bad) (bad) incl andnps out aad jns test ret fwait xor and movsl movsl aaa adc and into mov mov (bad) (bad) (bad) (bad) cmp outsl and sti repz pushf popf cli sbb shlb mov cs or daa cmpsl ret and test sbb push fild scas xorl xchg ret lea movsl test pusha ljmp and incl fisttp push int mov je,pt dec (bad) (bad) (bad) ljmp jl push mov or scas mov aam mov pop adcb sub pop jg (bad) (bad) fsubrs imul fs repz cwtl out pushf add inc mov std (bad) dec xor repz mov xchg mov notb in ret sub ljmp test or and inc jae outsb dec sub (bad) lcall fidivl push sbb xchg out mov or mov mov lahf pop enter cmpsb push or out rcrb push jne sbb jne fnop sahf push push in imulb aad iret (bad) (bad) (bad) pushl push or xchg jp push pop movl mov sub aaa loop fbld adc pop inc or ss je and movsb pop lock (bad) (bad) (bad) mov cmp movsb fnstenv jecxz add ljmp loope lea or test (bad) (bad) dec int3 mov lods ds jle stc dec jp sbb or pop std adc shlb inc jb xor mov cmc xor xor jge lock rorl fisttp popf adc hlt repnz cld std push clc cmp cwtl call sub sbb add push sub push (bad) mov (bad) (bad) call xchg fnstsw inc mov adc jne call rorb add lcall or sub or or pop add repnz jecxz insb sbb add (bad) hlt xor fmuls cs inc and mov sub test into cmp (bad) (bad) cmp xor aaa dec fistp (bad) and fisttpll loopne jno mov sub (bad) ljmp add dec es sahf jbe mov bnd ljmp dec mov (bad) (bad) (bad) decl xor mov cmp imul out pop fucom lods iret jle cwtl (bad) (bad) (bad) dec sbb jne (bad) and inc das cltd or lods dec test out std sbb (bad) (bad) mov cltd push sar cmp sub xor cmpl outsl (bad) sar call cmp mov js or pop fs mov pusha out xor xchg mov push sbb (bad) pusha add movsb jg add or test int3 mov mov aaa (bad) sar jge cltd pop cmc enter aad loopne test lock pop xchg mov andb shrb (bad) (bad) decl cmc push push adc jbe mov test dec fmull jb or leave rorb push sub (bad) fisttp (bad) rolb rclb iret xor sub cmpsb or jmp mov fisubrl jg jmp mov leave fidivl fistpl mov js add call mov mov in shrl or stc cmc mov ljmp inc xor mov add dec js mov aaa jecxz mov mov (bad) stos sar jmp lret mov call popa clc dec fs and (bad) call mov push push out xchg pop cli mov inc (bad) xchg (bad) test sub sahf test mov negl xchg das cmpsl (bad) (bad) incl pop xorl jle lock (bad) lcall xor aaa push dec pop cmpsb mov mov ret cmp jp call nop fisub sbb push and (bad) jmp xorl pop fistpll aaa (bad) mov pop js (bad) (bad) ljmp cwtl push and xchg ret outsb dec or jnp mov (bad) push (bad) shrb (bad) decl and cwtl add stos not mov (bad) (bad) push dec push adc pop mov in sub fcomp jle mov (bad) add push and (bad) pushl ljmp jg and and mov cwtl fstpl cmp (bad) ljmp xchg loop dec or pop mov mov adc and pop cmovns imul push jle repz xchg sbb sub sbb xor mov (bad) mov add sub mov cli mov inc call icebp (bad) (bad) lcall pop out mov dec cmc xor popa leave add fidiv xchg cltd (bad) pop jecxz inc call pushl test insl xchg or sarb (bad) cmp hlt sahf call (bad) ljmp sbb mov cmpsb pushf xchg cwtl mov and (bad) and lcall or pop lock cmp jge pop lock cs xchg icebp (bad) (bad) ljmp (bad) lahf out sub or mov mov fwait xchg orl aas adc jmp dec (bad) xchg dec (bad) or ljmp mov push jns pop mov mov (bad) (bad) incl shlb jmp sbb leave inc add jne enter mov fdivrp (bad) (bad) (bad) jle stos mov in cld out ror (bad) pop add call xchg loop (bad) int (bad) (bad) (bad) jmp in mov pop cmp dec cmpsl in adc leave mov mov ljmp arpl fidivrl popf fidivr addb aaa add cltd mov (bad) (bad) incl sbb xchg sub pushf clc out lods (bad) fwait jae (bad) (bad) (bad) push es inc (bad) mov in jecxz push lret adc cmp jno hlt popf or cmp faddl (bad) (bad) lcall mov mov xor cmp cmp xchg cli and xchg ljmp push or inc cmp push push das movsb call jo (bad) cmpsl out js mov (bad) inc sarb pop and sub push subl push xor or cmpsb xchg (bad) xor and adc ret adc decl insb inc push test (bad) call pop jle cmp mov clc mov xchg cld (bad) imull inc mov (bad) (bad) ljmp inc aad jb xor push je popl aad lods push test es inc dec xor sub sub adc xchg fwait scas pop lds mov mov lods or lds jmp data16 es mov xor (bad) (bad) jmp push push cs arpl loopne (bad) rcl movsl mov lds sbb cmpb popa mov mov push aas cmpsb cmpsb (bad) mov outsl mov test mov (bad) incl clc adc pop mov mov hlt iret lock adc fldt test cwtl mov (bad) (bad) ljmp (bad) ja fildll lret ret jb loop cmc (bad) cld in push pop xor sub clc lcall ljmp cmpsb stos xchg xlat jno xor cli and mov mov xchg cs mov in fsubr (bad) fwait insl inc push lods jecxz mov ljmp inc int3 popf or jg pop push lcall or xor jl (bad) (bad) (bad) jmp loop test pushf jo paddb aam mov adc (bad) ds int3 test (bad) (bad) (bad) clc cltd pop push lds fnstenv mov jb hlt inc sahf shrb pop add cmp pusha ljmp jmp inc xor (bad) jbe je pop lock test into lcall test ret addb xor test fcomps (bad) mov inc adc pop mov xor mov push (bad) (bad) (bad) dec xchg sub sbb push mov lahf aaa dec push cwtl dec pusha or movsl in stos push out inc fsts loope mov inc push xchg cmpsb inc xchg sbb sbb adc jne and push jmp add cld push inc fdivl pusha add jo jae pop sub add cwtl inc lods sub test test (bad) (bad) lcall add push das loopne push fwait (bad) mov mov scas fcoml dec add pop xchg add push sbb scas lcall xlat or push sahf cmp pop sbb enter lret (bad) arpl jecxz (bad) fbld add cmp add push fnsave sar push pop pop and clc in (bad) mov mov cmp shrl and adc icebp (bad) ljmp jecxz jns push (bad) fdivs adc (bad) mov dec insl mov jns in push inc popa inc sahf dec sbb lods xlat iret push adc pushf ljmp icebp mov fisubrl (bad) (bad) in add (bad) (bad) out push test mov add push sahf mov imul and push (bad) (bad) (bad) lcall mov xor orb sub mov mov sub (bad) ret cmp popa (bad) (bad) (bad) inc int mov xchg cmc jg mov sahf ffree mov stos lea mov cmpsl movsb (bad) jmp push fwait adc inc dec ds (bad) ljmp fdivl inc sub mov call enter (bad) (bad) call lea repnz xor push movsl outsl out std fldl sub das clc (bad) cmp daa fcoms pop lcall outsb mov cld cmp test decl test pop scas push mov adc xchg sbb out pop jge ficom xor mov (bad) (bad) (bad) decl gs pop xchg ds mov adc inc loope inc test sbb mov stc (bad) repz lea xchg pop push dec lcall (bad) (bad) (bad) pushl ljmp ret dec jmp je int cmc mov dec popl imulb mov ficoml push or push sbb fbld jmp adc lods push gs (bad) cmp jp cli (bad) (bad) pushl flds iret inc mov hlt push ret inc push (bad) je pop and ljmp sarb sbb loop or xorl cli xchg cld mov (bad) (bad) (bad) (bad) mov in scas cmp sub or pop les sub xorl mov das mov enter cmpl incb mov mov mov or inc fildl fnstenv int cmpsl test lret xor adc icebp idivb xor bound leavew lret dec push loope rcrb pop mov (bad) ljmp xchg fs jge jl and dec cmp lahf (bad) (bad) lcall and loopne dec cmp lods xchg add xchg lods jns jmp pop xor fcompl add arpl adc or lock (bad) mov scas movsl jmp jno xor insb push aam cmpsl test js imul xchg fisubrl mov dec (bad) (bad) decl and xchg and outsl jno ret out push lock xor dec inc cmp pop mov dec pop and push mov (bad) ljmp or jo push les xor xor sub outsl add pop push mov pop xor pushl mov fcomip jb mov sub push push cmpsl les push cmp movsb inc pop iret adc (bad) (bad) jg sub lods (bad) mov repz add fdivr (bad) jg pop dec xchg or or sub sbb into pop and loope ss add (bad) (bad) incl sub mov test mov jg xchg jns popa and lea mov (bad) lcall rcll hlt in mov in dec ja cmpsl ret jmp adc mov xchg insb inc jl insb adc jecxz dec in fwait test ror cmp mov std (bad) incl fcmove jnp mov mov sti jmp loopne push push (bad) mov mov mov sbb test push adc cmp mov (bad) (bad) ljmp add (bad) jo jmp in mov sti pcmpgtw js dec inc jmp subl popa dec addr16 lcall and mov cli (bad) (bad) dec stos pop sbb in pop test jnp jae xchg fcomps in mov bound dec call and jae lcall fisubl cmp mov or (bad) (bad) jmp setl sbb xchg jns je fimul sub imul or cmp (bad) (bad) incl adc push xchg mov movsb push insl xor xor push sub lcall out and js cmpsb dec xor out push ja out (bad) stos mov mov pusha lods mov mov mov repz sub out jg aam out sub jmp dec clc (bad) sbb and lock sub and fcomip subl jl std lcall loopne (bad) imul out dec ret cmc and popf push (bad) fdivrs lret pop lahf pop mov mov pusha clc (bad) jmp lea jbe lret mov dec movsl daa and jmp insl xchg sbb aaa std (bad) out lcall push shlb movsb pop lods or outsb cmp pop or inc pusha addr16 lods aam jge xlat fs (bad) (bad) ljmp loope add xchg faddl or lods cmp test mov xchg mov cmp gs int3 mov mov mov (bad) xchg xor inc scas xchg outsb insb jmp sti push pusha or (bad) (bad) incl inc fwait pop mov (bad) jae mov xlat xor sub cli (bad) (bad) (bad) jle es fsubr mov repz fdivr (bad) or (bad) jns call push (bad) lock jae mov movsl mov shrb (bad) (bad) call cld dec mov xchg fldenv xor lcall ljmp insb imul iret faddl jl push pop stos dec push cwtl scas xchg movb (bad) (bad) jmp stc loop cmp addr16 pop lock (bad) sub push inc fucom into dec imul imul inc iret jl cmp sub add fildl test test (bad) pop test push fildll ds push (bad) mov mov or shrb (bad) pop push lods jl push in mov rorb leave roll cmp decl push adc (bad) xor loopne fs call (bad) (bad) (bad) jnp xlat test (bad) jp and sbb push fmuls sub (bad) (bad) (bad) aas pop push jo aam inc and or call jmp ror push (bad) (bad) (bad) jmp or inc sbb orb mov fmulp sub decl adc push arpl (bad) cmc mov idiv or (bad) (bad) in mov jp mov fidivrl data16 jns mov sbb and repnz xchg (bad) (bad) (bad) decl (bad) ds and movsw cli arpl inc push mov add xchg (bad) (bad) lcall lock or pop jecxz fs add out (bad) (bad) (bad) mov daa sub inc fldt es lods insb or cs push sub and (bad) (bad) (bad) call stos scas daa lret lret clc lret lret repnz mov das or mov xchg adc cwtl pop stc fild ljmp fistp lods hlt movb sub inc ret test xor call ljmp outsl es mov sbb or jp xor lock (bad) decl (bad) or fsubl movsb lods fisttp and in mov pop adc lea add mov cmp fcmovu leave (bad) (bad) (bad) pushl inc dec and mov fsubs sbb (bad) sub cli outsl xor add cmp xorl lock xor jecxz dec sbb adc bound call in xchg sti out je sub inc jg cmp fimull adc gs sbb data16 (bad) fidiv pop sub and js jge pop sub mov (bad) leave pop sar (bad) lcall ds into rcr ret je xor pusha scas mov mov xchg xor pop mov (bad) jmp jg or in and or mov int3 outsb and adc movsl ret (bad) (bad) (bad) mov daa sub lret jp xchg sub inc adc fldl (bad) xchg mov jp ja fildll ljmp mov pop fisttp loop je (bad) dec jmp jb loop je lret mov ljmp or jge,pn xchg xchg xor jbe mov pop sub bnd (bad) call pop inc sbb lods lret adc push (bad) jo jmp jns out out call (bad) ljmp shlb xor inc add cltd (bad) (bad) cmc xor daa jne scas fildll js mov icebp fildll or clc push add movsl sub mov test (bad) jb test das push cld jmp sahf cmpsb nop add ret inc je lds mov push cltd leave clc (bad) lods push (bad) (bad) jmp sbb or xor decb cwtl pop mov (bad) dec dec cmp scas jno mov loop mov incl (bad) mov popf xor clc jecxz sbb loop aas xchg xchg mov (bad) cmp test mov cmp daa cmpsb (bad) out cli adc and fmul push mov pop (bad) jmp mov mov jl pushf cmp inc and (bad) (bad) (bad) jns mov sarb cld ds sti xor call imul fldl in inc jle dec dec mov add jl adc loop daa mov fdivr sbb push adc out lods stos xor adc (bad) (bad) (bad) incl iret movb cmp lods mov outsb cwtl nop xor ret std lcall repz gs adc push xchg sahf mov pop inc xchg mov fldl mov sbb aad (bad) insb and xor inc or repnz test and dec (bad) and bound add push pop fmuls mov (bad) jmp cmpsl roll pop xchg (bad) mov inc push mov loope mov incl push nop sahf adc add and ret add frstor fiadd (bad) (bad) (bad) (bad) mov lds xchg jmp mov out je sbb sbb cltd clc mov (bad) (bad) pop inc mov fild (bad) sbb out pop enter (bad) inc add add mov mov nop scas pop mov pop rolb mov addr16 mov or in int fwait jle add add inc enter aas push (bad) mov cmpxchg inc cmp sub jp stos cmp add (bad) (bad) (bad) jg std xchg xchg pop pusha add fimull fldz out sub aas stc xchg xchg cmpsb xlat call (bad) lcall push jb insl push jbe cmpl push pop es jne into (bad) in jp xor icebp (bad) (bad) (bad) incl fsubs fldcw sbb fnop push int or sarl ss (bad) (bad) (bad) lcall imul jb ljmp or (bad) jae pushf (bad) push mov sbb outsb int or sbb mov sahf push fs pop sbb jnp cli jbe data16 (bad) (bad) (bad) jg dec mov addl xchg pop mov nop (bad) jbe adc faddl (bad) jg mov xorb in xchg repnz pusha jnp iret add (bad) (bad) incl push sbb nop sub mov (bad) pop in add or test pop insb fdivp sbb adc out mov xchg jg (bad) (bad) jmp fistl call dec inc mov repnz in es repnz (bad) (bad) decl push lcall shll cmpsl loop push cmp ds dec daa ds mov inc cmp xorl adc pop hlt decl jno sbb fild pop sahf mov push andb inc and dec sbb or push jbe cmpsb repz (bad) out iret push mov aaa inc clc ljmp inc ljmp sub (bad) lcall cmpsl dec sahf std and nop out sub xor cltd mov mov (bad) (bad) call mov or pop imul mov xlat sub xchg movsl cmpsl leave sub xchg ret (bad) (bad) (bad) jg xor addl lret xchg dec mov push mov call sub cmp (bad) decl push int3 ror sub ljmp jo and sbb (bad) (bad) jmp test push roll mov push xchg pusha mov pop jo call push in rcrl jge scas adc pushf test push stos add mov mov add dec das add cs stos (bad) (bad) (bad) jg pop xor fistp js sub xchg mov sti and aaa (bad) (bad) test sub (bad) (bad) jmp mov movsb gs xchg lcall in xchg inc call dec (bad) pushf mov data16 daa (bad) mov (bad) (bad) (bad) aas adc pop out daa test popl mov mov jle adc pop sbb je mulb lock sbb mov cmp sbb in jmp jecxz add lret push mov divb outsl dec shlb pop (bad) jg fs ret mov in decl xor lods jg mov add (bad) (bad) decl xchg sbb ss xchg fiaddl mov bound sbb pop sahf (bad) mov inc adc fwait add or push xchg test add lahf mov das adc loop shlb repz pop sbb pop inc mov loopne mov push je mov (bad) (bad) decl push out push cltd iret pop insb (bad) lods daa clc xchg push lcall insl push sbb or call jp cmp jmp insb sub in mov lea mov lcall jb xor adcl (bad) std call mov mov inc push (bad) fdivr decl pop lret enter and xchg sub sbb mov decl adc pop (bad) mov jne test adc xlat into push cmp mov fnsave sub lret fist dec mov dec test repnz mov (bad) push or pusha xchg xchg (bad) cmp mov push mov push les divb insb pop fwait mov das out mov jge movsl fs and pushl inc fisub dec inc es cmpsb (bad) mov jbe dec or loope,pt mov dec push mov cmpsb test cmp mov push or jle xchg jmp jmp shrl or cli xchg (bad) lret mov (bad) (bad) jg pusha (bad) xchg (bad) in out cmp jp push ss out xchg mov ljmp mov (bad) jmp sahf or daa pop jg aas inc add aaa ds stc leave add ljmp cli sub cmpsb fisttp ss popa sbb push ret and adc or dec pop iret loope test pop sbb (bad) ljmp ja cmp cmp sti std mov fcomp sbb popa or repz (bad) decl and inc lea loopne cmpsl iret mov push (bad) scas ljmp dec xlat outsl mov (bad) xor scas mov jmp adc sbb cmc (bad) call mov iret lock cmp cmp in (bad) (bad) (bad) fisttpll xor push mov push sar sub xor (bad) mov mov andb mov cmpsb (bad) jmp xlat mov mov loop xchg mov movsl inc jns std (bad) (bad) mov jmp lret jae arpl adc xor jne jae push in sub jbe inc (bad) (bad) call pop or xchg or pushf xchg pop bound incb (bad) (bad) pushl jbe jo ljmp clc cmp shl stos mov movsb cmp (bad) (bad) call test xor mov loopne insb dec push test pop (bad) mov push int das or hlt into aas or sub (bad) lcall rcrl lods pop pop push push xchg sub mov lods jno out mov jg dec cmp jnp push sub out ljmp (bad) clc pop aas push lods fistpll lret (bad) ljmp clc sbb mov test (bad) (bad) mov xor (bad) (bad) cmp cs push test sub pop orl jecxz rorl sub xchg jge sbb mov push js (bad) mov (bad) jp ret out shlb insl mov jne (bad) jns int3 loop cmp ljmp push add (bad) (bad) lcall mov imul rorl imul into loop stos (bad) (bad) (bad) out andb push xchg sub jp push add inc rol ss and jne (bad) (bad) (bad) pushl xchg sub push out jbe xchg cs test repnz xor inc xor mov pusha jmp arpl mov mov fistl out pavgw pop inc (bad) (bad) (bad) ljmp push es in and das out rcl test push jo mov pop stos loop mov ficompl add lods cmp ds (bad) fcomip addb in adc push stc insl add movsl (bad) aad jge sub sub or decl stc xchg clc insb inc sbb call fwait xor incl mov lcall std out popf clc push ljmp sbb rcl popa push jbe pop adc mov and int3 scas xchg cs dec adc incb sahf lods mov mov mov jnp adc xchg push bound inc jecxz iret cmp pop cmp movsb pop xchg mov mov test (bad) jmp es dec push and (bad) (bad) (bad) (bad) ljmp pop cli scas sbb or and stc pop dec dec or cltd enter (bad) decl lods add lret test test push push sbb jae (bad) (bad) (bad) dec test push sbb add (bad) sbb hlt mov in sub pushf repnz adc push out sub sbb movsb fs fidivr gs fs mov lods cmp adc mov fild jp xor and (bad) (bad) (bad) (bad) (bad) mov mov adc xor lock mov xchg xor (bad) cmp (bad) (bad) lcall pop pushf push sbb jns xorl arpl cs es lds popa cs ljmp mov ret dec pop test std imul sub out gs lock dec das push mov cmp jg call fnstcw bound fisttp xchg jmp sbb int int jnp out push (bad) (bad) (bad) lcall aam add movsl test adc add jg into xlat lret stos aad sbbl (bad) lcall ja pop cwtl fxch (bad) add pushf out ja shrl push data16 inc lret fs neg test push ret shr cld xor aam inc and sarl test (bad) jb (bad) pushl push aas jmp pop pop jbe pusha pop or xchg rcll adc dec (bad) (bad) pop dec adc daa data16 xor xchg lret xchg icebp out mov (bad) jg out enter push add hlt fcoms test adc (bad) (bad) jg sbb inc jnp adc adc out iret test fbld inc dec xor (bad) mov (bad) (bad) (bad) decl btc adc sub scas or fsts jns sbb jecxz fwait jp loop call dec mov sbb loopne cmpsl aad dec mov ljmp push cwtl inc mov adc (bad) mov (bad) outsb adcb pop cwtl mov adc xchg mov cmc xchg mov mov js ss out dec inc (bad) (bad) jg add push lods or push sbb sub loope addl sarb int fisubrl je push sar out mov push sbb inc inc xchg fbld aad hlt sbb pop push in lds clc fdivs sbb pop (bad) rcr imul adc pop (bad) in pushf xor imul call es dec hlt (bad) push xchg aad or (bad) pushl loope or pusha and mov sbb data16 sbb pop rcrb sub repz pop out add push xchg sahf (bad) pop pop stos sub ds push and inc inc (bad) cmp (bad) incl and ds sbb push bound mov push (bad) push stos cwtl and call mov cmp lock mov inc aam push pop aaa adc rorl lea push icebp (bad) mov pop cmc aam bnd iret cmp int dec loope xchg mov imul (bad) cmp jecxz (bad) mov push jnp adc cwtl dec stc jg push push test (bad) mov dec icebp lcall loope lahf cmp mov inc and loope (bad) sbb ds popa cld call gs push xchg xchg mov sbb (bad) decl push jmp es hlt xchg dec movsl add cmpsb movl (bad) ljmp bound pushf js mov pop xchg clc (bad) lcall imull fistpll cld xor std sbb cmpsb sub nop xchg or cmp push lds les (bad) incl mov aaa push cmp push fwait pop xchg adc int3 movb jmp ss popa pop stc in sub icebp (bad) decl loopne pop mov xchg xadd mov or incl fwait lock push popf jb mov mov pop sub and mov mov jo aam adc push movsb jge pushf push sub sbb adc (bad) (bad) ljmp fisubrl enter pop xchg outsl daa loopne enter mov negl xor int3 jmp stos dec pop adc cld push push sarl jo int jno (bad) ljmp iret (bad) (bad) jmp rcll mov mov das or call (bad) (bad) mov lock outsl and ds and adc mov push inc jno (bad) jecxz pushl sbb hlt out jbe pop xchg (bad) dec xchg je or lcall enter (bad) push push stos xchg push hlt adc adc mov sub cmp jp cmpl or decl enter dec push imul fdivl lret leave into sbb test pop add arpl (bad) (bad) decl cmp aam test loopne cwtl push stos jb xor loope nop or cmc ljmp decl addb (bad) adc add dec mov test icebp xor jge xchg or das or (bad) (bad) decl ljmp pop dec push mov sti rorl (bad) call dec and pop push je xor cli jmp (bad) (bad) jmp jg mov (bad) push stos sbb rcrb cld mov jne adc xor pop rcrl stos (bad) jg and xchg (bad) adc jns test ja push scas (bad) (bad) (bad) dec inc adc arpl test pop pop std mov mov push or sub call ds jb mov sahf in pop cli sbb addr16 mov cmc sbb xlat xor sub push xchg andb push mov sub xchg je pop nop mov roll pushl stc lcall pushl lods mov pushf in scas out js jns mov xlat inc jp or (bad) jmp push xchg push add mov ret in mov mov mov in or ljmp mov js xchg and insb sub cld ret int3 fsts cmc (bad) mov into and dec imul pop scas add fbstp cld (bad) mov imul int3 fldl lar mov call hlt ljmp mov outsb sti movsl fs cmp mov adc jle iret xchg outsl scas or jl xchg inc dec scas repz (bad) pushl push fidivr sub in sub inc inc mov adc std incl stc inc add (bad) je in lcall movsl lods gs (bad) mov aas das mov fcomip inc cmp mov stos (bad) (bad) incl pop mov call lret dec lock cmc (bad) jmp mov push xchg mov pop mov inc push ret imull (bad) clc and adc sub mov lahf (bad) ljmp sbbb add xchg adc dec pop mov outsb and sar adc sub mov jae bound (bad) (bad) (bad) jg xchg mov mov xchg jecxz mov dec add add outsl sub loop pop leave xchg xchg cli pusha jg dec aas incl xor (bad) (bad) call mov cmpsb sti mov fs jb outsb inc add dec mov jnp insl and mov push test or xchg stos cmp fwait sahf fstl inc xor dec (bad) leave sub pop pop std (bad) lcall sub jbe lods pop in gs dec cmp lahf clc inc (bad) (bad) (bad) call pop adc sub ds bound mov push mov (bad) push sahf or (bad) (bad) (bad) jmp dec dec loope jo sbb aaa cmpsl mov sarb or cld adc sbb nop jmp cmc mov iret shlb or adc lds sub repnz push lcall clc push mov add (bad) (bad) cmp sbb aaa inc popf in fadds cmp enter (bad) (bad) jg loopne sub xor sub xchg das xchg rolb aaa (bad) mov data16 push std outsl dec sbb pop loop (bad) call xchg sbb pop jne add jl icebp push fdivs gs mov loopne cmp cmp pushf xor (bad) enter (bad) (bad) jg xchg cmpsl enter lods dec xchg dec fs xchg das cmp sub mov add xorl pop test (bad) (bad) (bad) jg push daa adc mov mov in push add sbb bound popf mov pusha cmpsl pop std inc aaa mov mov lods fiaddl decl lret adc in paddq sbb ss call inc pop xor cmp xchg xlat sti inc outsl leave inc mov nop xchg pop mov lock dec ficoml std call mov repz push (bad) mov inc fmul orb lcall outsb sbb push push fmuls cld cmc add push scas add aad adc ja sar pop les in jle pop lock (bad) (bad) call add hlt push cmp loop shrl movsb enter cwtl jo sar jg add push sbb dec imul adc hlt (bad) pushl xchg js jbe popa negb sub xor (bad) incl mov xor in in lods jo jae mov cwtl mov es dec std (bad) (bad) jmp push icebp xor push sbb add sub and test jg dec push dec add xor mov inc mov jecxz les cmp es cli pushl inc mov and pop daa mov (bad) incl jle jno or push and pusha cmp lea (bad) stos lock (bad) jmp lock daa (bad) mov mov inc lods pop sbb pop mov fucomip js xchg lcall sbb fmull into inc mov and sub mov jmp call mov pop cmpsl lock and rol add xchg imull sbb (bad) sbb sbb out inc loope cmp xor cmp leave cmc outsb cmp or (bad) (bad) decl (bad) cmpsl mov popa jo sub xor mov mov (bad) (bad) fcmovu roll mov daa in cmp mov push imul mov push in mov xlat mov (bad) (bad) lcall pusha pushf cmpsb test ja hlt stc cs mov out in (bad) cmp sbb sub fisubl cwtl mov inc aam int3 clc sti dec mov (bad) in push cld mov rcrl (bad) mov jmp pop sti fcoml mov sub and (bad) (bad) (bad) pushl cwtl xchg lods (bad) xor sub push fiadd stc mov (bad) incl fidiv and popf sub lds mov pop adc pushf sub lcall sub mov (bad) (bad) ljmp cmp push les out pop (bad) data16 scas das push xchg sub sub add sub dec cli (bad) lcall cmp xchg xor mov xor and cs push test ljmp cld insl adc sarl xchg mov lcall jno fs mov aas mov sbb incl lods cmp mov pusha outsl incb jmp cld lcall push push dec frstor cli scas xchg mov loop (bad) fisttp xchg sub sbb xchg and das neg jl popa add jg lcall in and inc inc inc (bad) (bad) (bad) (bad) iret xor popf out inc adc aaa insb loope daa hlt jg xor inc cltd test ret mov mov or sahf xchg (bad) (bad) (bad) cld out cmpsb or mov push mov mov inc jne sbb (bad) decl test jns sbb and push xchg mov (bad) (bad) incl nop loop lret adc xchg out outsl clc mov push cmp pushf in (bad) mov (bad) xchg (bad) dec in pop loop ss adc (bad) (bad) (bad) lcall insb ds js sahf mov movsl mov fwait int3 sarl iret adc lea mov pop popa shlb push rcrl and (bad) dec aas pusha sbb lcall add dec imul popf scas xchg lods lcall ljmp into lcall pop xor xorl fsubl push push jne mov xchg (bad) (bad) call stc adc sahf inc out xchg repz lcall stos xor insb (bad) (bad) lods jge mov cld repz mul ffree xor iret hlt sub jmp sub or mov dec fmul outsb xchg lahf aaa cld (bad) (bad) jmp mov stc mov and push les sub aad cmp dec inc push decl (bad) fisttp push xor mov mov or repz (bad) ljmp xchg xor loope out into push jg xchg cmp fildl jl sbb repnz push (bad) decl scas push jbe add jg arpl adcl jb and dec sahf incl xor add mov xlat add mov jnp sbb (bad) hlt xchg clc stos mov outsb dec xchg cmp daa scas add mov aaa pop pushl lcall push mov pop das inc repnz fcomip lcall sbb dec and roll cld jo cmp jecxz cmp and (bad) call leave xchg sbb nop lods int3 and loope mov loop jle fs xor shrb jg inc or pop (bad) dec xchg icebp bound in pop fist mov out arpl loopne in inc inc nop push inc pop cmp ljmp dec stos scas sbb dec adc jns les push sub std repnz mov fs sbb int sbb ljmp dec lcall fs push xchg dec pop pop lret or pop aam flds clc pop stos add es inc sub pushl dec repz loop mov mov jmp dec into lods sbb ret (bad) (bad) cmp pop in test add hlt fisubrl inc dec pop cmpsb ds (bad) (bad) jmp mov dec in nop fldenv mov (bad) lock out out mov js rorl scas cmpsb mov lods xchg cmp pop jge mov movsl mov popa dec fsubl test les popa jmp xor or pop es in dec xor scas push mov cmpsl mov push sub inc adc push (bad) mov jns mov sbb gs and std es scas out outsl add xchg xor push lock (bad) (bad) (bad) decl aas cmp pop arpl or fcmove idivl xor sub ljmp sub mov popa test mov mov mov xor int3 xchg fisubr in (bad) jg sub hlt push xlat jg sub in cld lret (bad) (bad) jmp test adc push mov xchg mov jno test inc mov or dec (bad) mov fs fwait or jb scas (bad) lcall hlt fdivs cmpl pop sti push add sbb bound lcall lret inc call pop ja int3 cmp xor call aas pop shrb sahf sbb adc ja add incl xor imul call mov mov sbb (bad) leave out aas test call pop repnz movsl cmpsb inc pusha mov (bad) pop nop (bad) (bad) (bad) jg mov push mov xchg ror sub jo inc sbb fidivl jbe inc cwtl js dec push pop int3 sbb cmp xchg jp lods push mov addb ljmp decl insl cltd imul fiaddl in outsb mov out pop xabort dec (bad) (bad) (bad) ljmp iret js movsl int scas clc cmp loope fstl popf or (bad) dec inc dec mov or sbb cltd mov and xor adc inc jbe push mov ret mov sti cwtl je fstpt jb push movsb cmp pop inc and mov (bad) jmp in xor cld pop outsb push add xor or mov sub (bad) cmp rorl aam lret push pop jp arpl cmp (bad) stos sub dec adc mov (bad) pushl cmp scas (bad) jecxz sub bound repz aad sbb push mov sbb (bad) inc ret add inc (bad) mov mov leave call adc loope add mov out push popf lea dec xor (bad) inc mov adc mov sub xor xlat adc xor add scas xchg fwait icebp mov aam outsl jmp push aaa or leave aam outsb jb cmc repz iret jecxz jae jp lods icebp (bad) (bad) pushl mov fmulp lcall pop jae (bad) imul mov (bad) incl decl mov addr16 stc into xchg lcall (bad) decl movsb and adc popfw scas inc lea pop sbb xor inc inc dec loopne decl clc xchg pop repz xor pop mov test (bad) (bad) (bad) call jmp mov cmpsl add aam pusha (bad) mov cmp in das mov (bad) jmp hlt sbb mov jo andb fisubl ds movsb sbb mov decl pop in nop add imul cmp out imul (bad) call shrl cmp pop push fcomps popf lcall pop lcall adc (bad) icebp fwait insl jnp add adc rcrl movsb adc imul js xchg stos and cmc push or decl (bad) pop sbb popa or inc std (bad) fbstp fnsave loopne lods (bad) sub repnz xchg (bad) (bad) jg mov imul mov or cmp adc aam fisttpl (bad) (bad) (bad) decl ficom (bad) mov das sub out mov inc imull fbld adc fisttpll or mov das fstpl ror test dec repz xor mov call mov push (bad) iret jae inc lea jbe cs pop ljmp jno mov (bad) aas mov dec adc adc pop jl and jnp (bad) (bad) incl mov fstpl stos add or ja addr16 (bad) (bad) (bad) call lahf inc test stc sub mov push (bad) (bad) fnstcw jo imul mov into add ds jp lahf out xchg (bad) (bad) (bad) ljmp mov jg or push add sbb out adc jmp orl (bad) incl rol jno in mov jns jb dec clc sti dec cmpsl es in mov int3 xor insb jno shll rcr push (bad) (bad) lcall das (bad) xor mov xchg xchg push test rolb cmp cltd int mov (bad) (bad) incl cli or mov and lds cmp lcall cmp jmp mov ret mov and sbb (bad) (bad) jg push add loopne aad or scas enter out loop add xor lcall sub pusha inc xor mov mov fsubrl dec cltd (bad) jg and es ret int3 pushf outsl dec jo dec mov mov and xchg adc mov aaa mov inc flds dec jne out cltd and mov lar lds lret (bad) mov dec mov rclb sbb pop icebp (bad) scas rcl adc sbb pushf push fsubs mov sub or es lds jle mov push xor insb xor xor in jle scas shr mov (bad) jbe xlat std mov loope sub inc loopne aaa adc (bad) ljmp lea aam mov shll xchg (bad) xchg push ds imul stos push push sbb leave repnz mov xchg iret cmc pop adc into fs pop das add push daa lret xor (bad) (bad) decl mov mov mov cmp sbb mov sbb (bad) dec les aad pop inc or leave cmp (bad) pushl mov (bad) pop mov out push popf dec push add xchg push cmpsl jo (bad) (bad) (bad) ljmp jl mov mov jo insb inc add sbb sbb mov mov and (bad) (bad) fbstp mov lods lret call sar sub add sub pop jle or jns lds pop sbb (bad) (bad) incl (bad) sahf push (bad) les xor popf (bad) push mov or xor fs decl dec add repz or sahf mov and (bad) incl (bad) push dec and xchg xor push push mov test jno mov lods xor (bad) (bad) jg (bad) fst xchg sub clc (bad) cmp das ficomp lahf mov jno push xorl int or sti lret cli imul inc push (bad) jg mov imul mov inc (bad) (bad) (bad) incl aas dec mov or rep adc lds aaa inc cmp xchg push (bad) hlt sbb lcall sub fcompl sub push js mov (bad) (bad) jmp ja push lret stc add jb stc (bad) leave popa ret lock push ret adc mov sub xchg cmpsl loop sub jno cld jns pop and imul fisttpl lods dec mov dec (bad) frstor jns (bad) fs dec xchg mov test push rcl inc popf pop sti push cmpsb fcoms sarb (bad) (bad) clc (bad) (bad) xchg vcvttsd2si lret xor push popa enter add je ret clc call cmp int cmp xor rcr or xor dec xchg mov push mov invd cltd xchg repnz adcl (bad) fidivrl dec rol lods mov jle push hlt cmpsb dec roll mov xor cld fs push cmpsl adc (bad) decl or sub inc and scas pop in inc jns movb dec lods (bad) xor adc pusha or cmp loopne ss ljmp std int3 or mov (bad) cs xor scas xor xchg and adc pop (bad) jg inc clc ffree mov dec (bad) xchg lcall or (bad) (bad) decl pusha mov (bad) orl mov add mov xor int cmc incl incb je ljmp (bad) (bad) jmp mov outsl leave xor aaa and pop or sar or scas clc incl mov xlat lock enter xor mov or pop cmp clc (bad) (bad) incl add mov push xchg sub sub push es jmp pop inc push sbb or fwait outsb cs (bad) (bad) call leave dec dec pop cwtl jl xor mov fmul dec mov aad (bad) (bad) dec add lahf decl and imul in test idiv (bad) (bad) ljmp xchg (bad) xor mov pop inc fldcw mov aad mov mov sbb das ret mov cmp fs and inc nop pushf and (bad) cmp or (bad) icebp push mov cmc lods mov int lcall pop (bad) mov imul and push xchg lahf or icebp (bad) (bad) (bad) std orb dec xchg shlb mov sbb mov aam dec sub add addl push xchg into cmp push enter lcall cli incl cli and dec sbb aas jp pop (bad) (bad) (bad) (bad) (bad) fidivl mov cli jg orb (bad) push mov cli or ds or sbb (bad) ljmp jle and xchg movsb enter roll cmp fmuls adcl xchg jnp cld jnp les mov mov or sti mov sbbl mov (bad) ljmp push stos das inc add cmp jg inc fcomip (bad) and (bad) out mov inc outsb outsl out rcr and dec nop lds test loope inc xor lock xchg cltd jnp xor (bad) (bad) ljmp (bad) ja mov gs into jmp out sbb adc (bad) (bad) fstpt jne mov push mov mov and fcomps cwtl push (bad) (bad) (bad) push pop hlt cmp push add adc lea cmp addr16 push aaa sahf push fcmovb sbb cmp mov sbb insl test add mov outsb call sub sbb int sub popf daa out scas jge nop mov (bad) jge pop cmp pop mov test cmp lds fs and lock jmp arpl (bad) incl stos cmp sbb push cmp sbb push cmpsl add loope inc jge mov dec cli (bad) (bad) cmp add adc mov cwtl mov mov cmp inc call (bad) decl inc pop xchg and dec adc repnz movsb mov mov inc sarl dec icebp xor mov inc loopne sbb jl idiv (bad) (bad) push vmwrite sbb js inc pop rcrb out xchg icebp push decl enter ss or and ljmp push cmp dec dec mov lds inc dec mov sub cmp addr16 std insb mov push mov dec jae data16 aas or (bad) (bad) lcall lds mov and xchg cmp clc (bad) fisttpl push mov in (bad) push out ffree pushl inc shlb jp push (bad) xor xchg lea push push sarb int3 out jg xor adc dec dec push dec xor rcrb adc mov jmp mov mov stos dec jmp lods incb repz movsb les mov push inc iret adc aas jge lcall dec add stc aad mov push outsb ss mov (bad) (bad) out (bad) mov jnp test in outsb jns jnp (bad) loop decl rol cmp dec push sbbl (bad) jmp adc call pop pop inc adc cmp jmp sbb and lahf and scas jecxz push shlb add mov pushl push jne out fisttpll mov inc mov cmp jb inc or jl push cmpsb (bad) mov adc cmp and into test mov aam cltd (bad) cld call (bad) mov fstl in inc out dec dec (bad) adcl adc cwtl jge add dec cld push scas pushf shl pop imul loop (bad) (bad) (bad) (bad) mov push cmp cmp in mov test rolb stos push (bad) (bad) (bad) lcall fcmovne stos fistpll enter or in sub cmc add (bad) call std dec mov int3 cmc inc out or std mov mov (bad) (bad) pushl sti popf je aam cmp test pushl jb imul add pop stc addl (bad) out je mov lods call sub cmp (bad) dec push add loop push sub repz mov push addr16 xlat stos or sub cs sar (bad) dec inc mov and xchg imul (bad) lds xchg mov scas pop cmp add cmp hlt jg adc xor (bad) (bad) (bad) incl ror cmp mov pushf pop mov adc mov add test stos adc test lock fimul jno pop repz (bad) jne mov mov jg xor jae xchg jmp adc pop cmc (bad) call imul dec and xchg pop xchg test add mov sub bnd mov addr16 call call outsl stc (bad) mov imull xchg push pop out dec loopne sbb (bad) (bad) jmp fimul xor sbb icebp pop jge mov push adc outsl test mov fwait shl inc mov imul movsb cwtl mov (bad) jg cmp xlat imul scas ja dec aas loope jge mov loop (bad) (bad) call cmp jecxz lret jmp sub cmpsl sub cltd xchg (bad) (bad) decl notb mov les adc test dec fistl and clc (bad) dec cmp mov in mov jge ljmp enter inc cli dec ret popf sub mov jo mov mov enter clc (bad) pushl bound mov push xchg dec sbb jge loope (bad) jg mov icebp mov jle push divl movswl fwait mov lea in inc fwait mov sbb mov out fsub imull push xchg out sbb cmp call pop insl std mov into loopne fcoml adc (bad) (bad) jg (bad) pop fdiv stos cs fs mov sub inc aad pushf pop stos aam cmp ljmp decl adc (bad) (bad) jb mov lock mov xchg (bad) (bad) (bad) decl cwtl pop gs (bad) sub sbb out movsb lret in aaa lea push hlt mov das loop push adc movsb dec nop xchg sub call xor insb clc xchg pop adc or mov (bad) ljmp cmp push and xlat outsl leave test add mov mov imul push inc (bad) (bad) (bad) jg ds and pop add mov cs mov (bad) (bad) mov int3 popl sbb mov cmp pushl adc pop jb ds pushf mov xor call xchg dec (bad) mov int3 sbb fstpl cmp jg adc (bad) in push xchg dec cmp lret movsl and dec (bad) (bad) (bad) decl xchg mov cltd aad fnop pop xchg ja dec sbb xor sbb (bad) (bad) incl inc jge jnp ret dec into pop push sub stos inc jl cmpb ljmp sub sbb sub or inc sub ljmp adc test movsb xor ret cwtl std add sbb (bad) mov dec sub sahf fwait lods or and fwait sub xchg fs inc xchg scas imul lea jle not pmullw push inc repnz insb test jg scas sub movq fnclex movl scas dec mov (bad) jmp mov (bad) sarl xchg aas (bad) cltd mov xor call loope sub andb cli xchg jnp (bad) (bad) incl outsb dec or jge push xchg std test push cmpl mov ret lret and (bad) incl (bad) (bad) cmc es add aam mov mov fwait pop pop jnp cs mov decl mov pop sbb sbb ljmp pusha sbb push insb (bad) (bad) mov adc fsubrs jbe dec mov jg push cli mov (bad) mov pusha in inc loopne inc pop in aaa sub cmp (bad) (bad) call mov dec sbbl sbb pop mov divl lret call aam (bad) (bad) (bad) decl test add ret sbb jno imul mov push mov cld (bad) (bad) incl inc add sar in mov xchg (bad) (bad) (bad) lcall inc js adc xchg and add std ds in subl mov (bad) cmp repz jmp in (bad) (bad) incl std push pop lcall add jns fdivl mov dec jns sub dec (bad) push aas test std fadds push inc dec adc (bad) fucompp or ljmp pop push js xchg mov adc push dec imul decl push enter pop push lcall (bad) (bad) fcomip jmp lcall xorps fnstsw or dec mov (bad) (bad) ljmp sub add push mov jge adc in (bad) call sbb adc nop mov push hlt or (bad) (bad) (bad) fdivrl push ret scas loope (bad) ret lds xor jae xchg cmp lcall pop fdivrl or mov outsb cli and out sahf in sbb lcall and xchg xor loopne cmp xchg sar (bad) decl fwait je addr16 xchg inc outsl ret dec xchg in jbe pop mov lea jg pop push (bad) mov popa lcall sub pushl dec aam loope mov (bad) (bad) (bad) decl les test jp xor mov (bad) (bad) fimull xchg enter dec (bad) (bad) (bad) incl pop xchg xor into cmp fimul arpl mov stos popa add scas ljmp insb mov ret outsb stos cmpsl icebp aam addl push lret loope outsl mov dec out or fldenv loope inc dec call push xor rcrb nop adc xor (bad) (bad) pushl adc push aaa xchg inc movl jns movb mov ljmp jecxz xor add (bad) fcomip (bad) mov (bad) insl pop lods mov scas mov sub js mov (bad) (bad) (bad) lcall fnstcw ret std jp adc push adc add inc mov inc repz (bad) call imul push mov bound sarb jp je into out cwtl fsub clc fdivrl ja icebp mov lret add mov incl lds sbb mov cs arpl jno sti jno leave pop cld (bad) incl pop pop popf push hlt test pop mov jbe lea in dec push in jb sar pop inc ret cwtl (bad) lahf test pop lahf int3 dec sub (bad) (bad) (bad) jmp inc rcrb imul mov fldt cmp daa add add arpl push inc loopne dec push mov dec jb (bad) (bad) (bad) ljmp fimul int lret fisubrl xchg push les push ljmp pop aam inc dec push cmp das test xchg mov mov xchg xchg jae rclb in mov in scas mov and std out (bad) out push hlt push sbb add add (bad) (bad) (bad) fdivrs adc mov mov inc jno mov cmp mov imul sti (bad) (bad) (bad) (bad) aam ficomp in fimul in and dec jne mov aas push (bad) jg jae push mov jl js dec and stos push push out add out test hlt outsb xor add shld sub popf es pushl (bad) imul inc mov or add ret icebp dec (bad) dec xor movsbl (bad) (bad) lcall out ljmp xchg rcr lahf ss out and pop or (bad) (bad) (bad) dec idivb or mov push (bad) lods shll dec xchg out ss (bad) lcall addr16 pop notl out icebp (bad) ljmp mov iret fistl fidivrl pop push jae xchg sarb (bad) (bad) (bad) jmp push loope (bad) jge es mov aaa push push cwtl in int3 xor (bad) pop aaa pop sub xchg cmp add lcall (bad) (bad) jg fs fstp jb fs and out xor repz xor fsubp popf add sub es das cli pop lret idivb in cmp insb jmp mov mov sub out jo loope outsl movups push (bad) les mov (bad) push pop inc add out xor jno fdivr sbb (bad) (bad) jg cwtl jae decl fs pop out add je mov pusha jl test (bad) (bad) ljmp imul jns lret enter ljmp lea inc push aaa sub (bad) (bad) (bad) incl ftst cld sub push cld mov les xchg mov hlt jge imul mov (bad) (bad) jmp adcl scas ret adc xchg push xchg fisttpll (bad) push sahf fildll (bad) (bad) decl ret int movsb icebp leave dec add in fnstenv (bad) stos cmp movsl out jne push insl add push ret scas add mov jne ss push (bad) (bad) (bad) inc xchg push lahf jns fcompl pop (bad) aaa rol leave mov insl into addr16 jg scas push or mov bound nop sbb dec cmp aas ljmp xlat dec inc pop imul push dec push dec mov (bad) decl lock pop xchg push xchg stc (bad) jno ds and xchg adc test jp adc ljmp or cs rcrl xor and (bad) rcl test pusha push or int3 mov cmp mov lret (bad) (bad) (bad) jmp (bad) cmp inc das mov add loope and pop test pop fisttpl (bad) incl cmp nop out adc jb dec je fwait cmp and inc sar mov push les mov ds (bad) (bad) (bad) mov pusha adc fisub jle mov (bad) into mov or (bad) (bad) incl mov jno cmp mov mov inc ljmp pop sbb hlt xchg (bad) in push push jmp push push loop push jl (bad) aas mov jnp scas cli pushl xchg subb add mov xor cmp and push adc sti push int3 jo sub ret sub push jmp (bad) (bad) (bad) pushl and ljmp fisubrl or scas decl adc ljmp sti cld clc nop adc pop cmp dec cld (bad) mov out sti jo stos lahf icebp sub xchg aam cmpsl ud2 pop loopne (bad) mov xchg ret add inc inc xchg xor sahf or sub cmc rorb (bad) mov xor (bad) (bad) (bad) call push push fdivrl test ds xchg jbe jb adc std mov xor push leave cmpsb int3 (bad) dec sub push jmp (bad) (bad) call xchg pop mov mov jp lcall lds adc ret jno xchg inc xor (bad) (bad) incl and or adc xor adc mov add imulb (bad) decl outsl push aam loope or test mov lock scas (bad) call inc sbb int3 pop cmp in xchg xor js (bad) (bad) jmp mov and in test into jnp mov mov mov mov imul dec enter mov or pop ljmp pop xor pop mov sbb mov (bad) jmp jb in enter dec fwait std pop je jo (bad) (bad) lcall inc inc and dec fdivs jp xor idivb xor int3 pushf mov adc push xor push pushf adc jg cmc ljmp (bad) xor and lds pusha out and fmuls (bad) jge lret lea dec sbb dec xchg mov repnz (bad) inc in cltd ss out pop add push mov sub add cld inc lds rolb adc (bad) (bad) decl push lds repnz jl dec inc and xchg pusha cmp (bad) mov push and sub and (bad) enter mov jb (bad) cmp adc loop incl mov aas xor add mov mov mov mov dec mov and outsl test xor jg mov (bad) (bad) (bad) (bad) cmp lods inc or fmuls daa lods mov and or inc pop cli mov cmp (bad) (bad) jmp aas das mov xor cmp lcall pop inc mov decb outsb xor outsl je mov push popf (bad) (bad) (bad) (bad) fisubrl xor add dec mov inc jb repnz mov jns push jne push add subl cs stos jne push (bad) (bad) (bad) inc outsl stos in icebp test lret lods inc and movl mov mov sub push clc xchg xor in xchg ss push cmc cmpsl xlat push jns pushf dec xor xorl pusha mov mov (bad) lcall pop and movsb in inc inc sarl push xchg call cld push inc call inc in aad dec roll (bad) (bad) (bad) call sar add push and jae pusha sbb movsl mov pop xchg push (bad) stos (bad) (bad) lcall add loope rcrb test leave in jl,pn add inc (bad) jge pop jle scas mov (bad) (bad) mov push jns or and pop (bad) es (bad) lcall pop aam aaa push inc mov pop push pop mov dec sub les pop (bad) lcall outsb insl jge imul pusha pop mov sbb push push ss (bad) pushl test loopew stc push cmp adc jne bnd (bad) push lret (bad) ljmp mov out sysexit movsb inc xchg clc out jmp lock add (bad) (bad) decl add xchg adc test cmp adc nop rclb hlt dec sbb adc mov add (bad) lea mov mov cmp (bad) (bad) jmp scas enter das or mov mov shlb dec cmp push clc std ljmp pop cmpsl push mov sub clc push or int (bad) call xchg add adc in jg and outsb push cmc adc push xor sar add adc fstpl xchg xchg add lods push lea pop outsl ljmp clc pop cmp pop stos or fcom sbb push stos rcll test (bad) jmp push xchg daa push or pusha aas jne rorb push ds (bad) (bad) (bad) jmp cmc punpcklbw cmp and pop fs scas inc (bad) (bad) (bad) jmp scas lea add aas sub incl imul (bad) xor (bad) (bad) jmp mov aam mov sti lahf insl adc int mov adc cld inc jle daa dec xchg (bad) mov leave lcall sbb les call jmp cltd xchg insl in (bad) sub movsb push xchg dec cmc mov inc mov (bad) call mov leave out lods repnz sahf (bad) imull (bad) pop (bad) (bad) (bad) (bad) mov cmp jbe sub cmp scas int3 adc mov fwait addr16 (bad) xchg (bad) mov pop (bad) (bad) jmp push mov int adc fcomps mul int je or incl (bad) mov push push into xchg in shlb jg pop xchg or pop jecxz jp push (bad) (bad) call divb test push pusha lods xchg add mov hlt xchg lock inc gs call loopne rol cwtl jns (bad) loope mov icebp xor ret mov out inc push mov lods es push pop xchg out sub aas push push (bad) cli xlat cmp mov xor (bad) (bad) ljmp cmp and inc outsl dec jge and and xchg pushf ror push (bad) sub inc mov cmp pop jge,pt sub mov incb (bad) (bad) lcall jmp dec mov add inc xchg fxch loope jle int (bad) (bad) (bad) ljmp imul add repz notl lds enter mov pop push mov es jge or sub adc dec mov jmp add into jl xchg cli (bad) xlat jp jg pusha std inc (bad) fs lret sarl (bad) (bad) ljmp mov or (bad) jne int inc dec mov aaa cmp std inc xchg and (bad) jmp stos add stc and push into leave cs inc xchg push ljmp hlt inc push clc addr16 jns (bad) (bad) (bad) call into push fwait ljmp lds cli sbb adc aas pop inc scas (bad) (bad) cmp (bad) jmp insl loopne inc jge imul xchg aam outsb leave sbb (bad) (bad) (bad) dec pusha ja mov ljmp popa dec (bad) cmpsb xchg inc in lret outsb xchg adc cmc rclb ljmp orl inc lds ret jge (bad) (bad) (bad) jmp ret inc xchg imul and jge ret icebp mov adc adc (bad) decl ret or mov xor nop in icebp jae or and aad pop xchg popa xrelease std (bad) mov and push add xor jg fiaddl or adcl push adc ss mov (bad) (bad) (bad) lcall lahf jb sbb mov int3 cld stc push mov mov nop sbb xchg imul fisubrl ficom cwtl xchg loopne and push mov (bad) xor ret pushf leave sub (bad) xor mov je js cmp push cmc and insb fs jge and (bad) sar ljmp push cwtl inc cmc cltd imul pop mov (bad) incl rclb sarb adc mov roll adc push pop mov or mov dec icebp loope scas clc call pop out adcl cli rorl cmpsl iret nop repnz add and mov inc stos insl mov jno mov test ljmp in adc and xchg (bad) pop daa fwait or sub in or call fs dec in out jb pusha outsl mov mov (bad) lcall loop std xor cltd adc cs xchg mov add mov add jmp (bad) (bad) call push test out add in jecxz fdivrs (bad) ljmp inc push (bad) ja jmp add cli sti cmp push jmp adc out clc ds sbb or or mov cli cmpsl test mov sbb data16 stc xor in jecxz nop outsl aas decl insl loop dec stos mov or and mov cmpsb jne push rolb ja daa outsb out pop inc ljmp pop sbb mov and push adc ret add cmc mov loop,pn fild inc pop inc popa in xor pop sbb rcr (bad) cmc loop mov dec js jmp mov mov sbb (bad) xor shlb (bad) decl cli bound test popa inc xchg shlb test xchg call dec jnp (bad) (bad) jmp mov cwtl add in sarl fwait mov dec lret mov call xor xchg mov xor push cmc ret cmp repnz dec xchg (bad) (bad) in xchg fwait push mov je adc pop popa inc mov push dec adc jne push xor (bad) (bad) mov mov je push add push mov xor mov lcall pop in jne fcmovnbe lcall pop test outsl push cmpsl add jnp test mov inc addr16 mov cmc repz popf imulb clc scas cmpsl jle xchg clts scas pop mov hlt icebp stc mov dec movsb in aam xor push jb lcall aas jns dec pop push rcrl jecxz pop cmp jg (bad) loopne (bad) (bad) ljmp pop fadds loopne mov dec mov mov pop ss mov cmp sbb or ljmp xor pop fldt (bad) jg jg jns clc dec inc cli sbb lock sarl lcall aas adc pop mov pushf dec xchg push xchg lahf mov (bad) jg inc sub sub outsl insb addr16 pop xor push fildll ljmp pop pop pushl push and sub xchg (bad) nop xor imul push pop dec (bad) or insb mul mov (bad) pushl xor cmpsl aad dec fistl or fildll jns jl pop push cwtl clc jmp rcrl test xor jno out sub inc pop inc aad imull pop rcrl (bad) ljmp popa mov pop loope scas dec loope pushf stos cs aaa ret and pop cld pushl jno push or bound clc adc cltd add sbb dec inc push jg (bad) xor mov sub push push or (bad) mov sti divl add adc incb mov mov ss push (bad) call jb test out aaa test test lds cmc push xchg mov add xor jg inc cld inc inc fstl lret fwait (bad) bound sub push mov add aas test ljmp add pushf (bad) sbb mov jl (bad) (bad) (bad) test dec cmc dec inc ss icebp test cmp insl insb in in imul out cli (bad) decl add push call int outsb (bad) xlat frstor pop jg (bad) call push or in imul enter dec or cmpsb jmp loop (bad) dec loopne jns dec lds pop xor mov movsl aas les aad cli inc cli jbe (bad) (bad) incl test mov xor js cmp (bad) (bad) (bad) (bad) loop cltd (bad) movsb mov jbe scas daa mov sbb mov pushl inc test outsb rorl pop stos push xchg leave inc rorb sub call xchg enter fsts add in stc fsubrs pop (bad) (bad) fildl repz jp stos mov divb hlt out mov and pushl (bad) cmp punpckldq out inc push popf pop jne mov sbb mov fcomps clc (bad) (bad) fistp bound jge jne loopne rcrl sub (bad) ljmp push in outsb push xchg popf jo movsl pop in pop push (bad) mov (bad) lahf adc push fildll lods (bad) decl dec cmp xchg outsl loop mov movb call push aas fs jg cli cwtl mov xchg push mov (bad) mov fsubr out je aas mov mov (bad) inc jmp daa test das aaa lds scas js xor test xchg jns dec xchg shr aad or and ljmp (bad) sbb sub adc fstl add jmp dec (bad) fnstsw mov or in test dec lods adcb and pushl es dec cld stc or nop jae ljmp jl mov mov (bad) (bad) decl iret dec rclb lds xchg enter sub cli cmp jp faddl test jge jl push shr push shl cs pop xchg (bad) call aas cmp jns mov movsl jns jb cs adc ljmp mov call pop pusha in cmp mov movsb inc sbb pushf inc xchg and xchg xor or jno adc stos xchg iret cmp dec inc xor idivl or addr16 icebp and loope scas andl in test (bad) (bad) mov xor mov clc or jo sahf inc enter bound into mov push xor inc push gs jmp adc hlt mov scas lock ja js add mov xchg (bad) (bad) incl sub repnz mov data16 mov cmc (bad) (bad) mov iret fisttpl cmp lods fnsave aas pop and mov cmp jle add mov jnp dec mov out xchg lcall ss fcomip push jns out clc (bad) call mov jle sbb (bad) (bad) pop sbb push xor mov jg lcall mov fcom aas cwtl (bad) pop cmpsb dec fistp sbb adc std pmaddwd (bad) (bad) jg pop incl popa dec call xchg jo sbb jne xor es loope jb arpl (bad) lret or int shlb jle (bad) (bad) (bad) ljmp daa jle divl cwtl mov addr16 es lock daa iret rcll lock mov repnz lahf in jg (bad) (bad) (bad) incl pop fidiv jecxz fdivs fisubl jo xchg scas xchg dec adc loop xor pop lcall xchg xor mov popa clc mov add (bad) jmp stc mov (bad) fistpll mov jp addr16 stc mov incl aaa sub in sti lods and mov xor (bad) pushl cmc or mov int3 pop pop loopne jp sub out push sar jecxz xchg and mov pop adc mov push mov and cld outsl lods (bad) jg (bad) aas or jb add and (bad) int3 dec mov sub mov (bad) jmp cmp mov call ljmp cmp jae push js sahf pop imul leave rorb je cmpsl bound shrl xchg rcr fs or mov add aaa fcmovnu jg pop sbb aas pop aas mov (bad) jae stos ret cmc xor adc or and loope fs or pushf lahf jg (bad) (bad) jmp cmp arpl push xor out frstor mov mov out mov call add repz je dec lds jno (bad) incl push lcall jnp mov jg (bad) (bad) jg adc dec mov jnp loop cmpsl dec iret xor loopne xchg test ret sar fs cld (bad) (bad) incl test mov in sbb repnz push in ret jecxz addr16 dec adc and pushl jge jne scas cmp icebp dec jne loope (bad) (bad) (bad) lcall pop mov mov dec push xlat out inc stos cs inc adc push (bad) (bad) pushl jo movsl cs push into inc or pop incl (bad) aas adc mov inc or sbb lods sub pop int lahf jns sbb jmp incb xor jmp or sub inc (bad) mov inc xchg cmp mov xor loope sbb sahf rcrl mov cmp (bad) (bad) (bad) (bad) ficomp popf out xchg cmpsb in adc imul cmpsb cwtl lds inc jmp cmp (bad) (bad) call dec stos rclb sub cltd cmpb cs jns or scas adc (bad) mov push mov ficoml inc fisttp movsb mov gs mov pushf bound push lea jb push mov xlat pusha incl les es xchg push jp and (bad) xchg hlt push clc dec lods sub inc push fwait test leave mov fsubl mov out sbb xchg (bad) (bad) call mov ljmp shrl jl mov aaa shlb xor das xlat jle add xchg sub pop or inc mov movsb rorb pop lahf loopne add xchg fimul call mov out outsb dec out mov mov mov clc xor xchg ficoml xor or out inc push cli (bad) (bad) lcall pop cmc xchg mov les mov jo dec mov fwait (bad) (bad) jg pop loopne cmpsl popf xchg xor sahf cmp inc (bad) (bad) fldenv sub (bad) in and adc test dec jo xor cld imul inc pop jp movsb push sbb incb insl dec mov adc jge lahf and divl je scas out outsb (bad) (bad) (bad) jmp cmpsl dec jecxz loop jnp int3 movsb sahf dec in outsb cmp sbb and xchg outsl mov in jg pop or adc mov popa or cmp nop xchg mov mov jb mov dec or jmp mov mov ret adc jg aaa lock and nop jg pop and jg pop das les xor (bad) xor inc imul (bad) (bad) jmp dec aad sbb xchg add cmp pop int3 sub push imul repnz sahf and (bad) call or mov xchg divb dec jb mov (bad) (bad) cli and (bad) (bad) inc mov popf pop fdivrs cmpsl fldt jnp xchg pusha fisubl sub lods push clc pop push sub mov incl lds (bad) fldcw xchg dec inc rorl pop dec sbb aas jl mov btr and scas dec mov (bad) mov enter xchg lods (bad) xchg decl mov popa mov or mov cmp xor ljmp cmp pop rol ljmp stos or (bad) pushl xor fistpl scas adc and xor out nop sbb cmp (bad) (bad) out pop push decb push incb roll or (bad) js and sbb (bad) jp mov push push (bad) decl and cmp mov push jb add jge jno mov stc (bad) (bad) call fs mov pop inc or or icebp pop (bad) decl xor sbb pop push jb shll sub mov gs pop (bad) (bad) (bad) lcall mov pushf fisub sub hlt (bad) repnz sbb or sbb mov (bad) call scas push outsb pop pop dec pop xor inc rcpps fldcw xor fcomps cmp loopne xchg adc dec or lock inc bound in ret sub or (bad) call cmp sub pop loop jbe fistl sbb fdivrl inc movsb sub lret dec cmpsb add shll cli (bad) jmp stos jle xor mov test loop cmp lcall sub test mov jp (bad) (bad) decl push mov ljmp sbb add aam xchg (bad) lock fbld movsl cmc jg (bad) in xchg xsaveopt sub repnz inc aas adc inc test lahf jle or cmp cmp pop test int3 sbb call mov (bad) mov rcll test cmp ret lcall (bad) pop mov fcmove aam xor arpl xor and (bad) (bad) call lock jmp cmpsl aaa jmp sarl aaa jp mov test push push mov popa jmp adc (bad) (bad) incl jno lcall jns (bad) int xchg push cmpsb int3 popl gs call add loope lods pop dec popa mov jle pop cs outsl lahf jmp adcb std jg aas push adc xor lret les jno xchg jb mov (bad) call ffree cmpsb xchg cmp aas sub pop mov xor mov sub pop or jmp xor dec push ret loop add lcall pop enter shrb xor mov jge (bad) loopne mov mov (bad) out dec leave add ret or popf xor sbb (bad) incl dec adc in push mov xor aas and movsb pop push lds std (bad) mov les ret add ret rcrb jae flds (bad) incl pop (bad) pushf pop push cmp clc jle popf jbe inc int3 leave cmp (bad) (bad) lcall cmpsb push lods loopne push test dec movb in mov jg mov sub jmp (bad) call sbb in js add mov xchg xor movsl jb push add (bad) mov jmp scas cli (bad) ljmp and jge adc test gs lahf dec (bad) (bad) (bad) decl test ss pushf popf out jecxz sub sub clc mov aam mov pop and cmc and mov ss imul cmp or sar pop xchg (bad) lret lea cmp add incl mov movsb imul cmp pop push pop fadd (bad) std inc xchg dec adc stos cs fstpt xchg in (bad) (bad) incl or popf ljmp xchg lds sbb in mov inc mov imulb add loop pop jb lds clc bound mov bound (bad) inc repnz mov popf (bad) (bad) (bad) call dec mov inc in and sbb sahf sbb push fmuls adc xchg imul sbb mov in (bad) push mov sub repnz mov xor xchg (bad) decl call pop push (bad) ja jo (bad) (bad) (bad) jmp inc push mov icebp mov lea repz xchg jo add insb pop mov (bad) movsb add pop inc dec idiv mov outsb adc cmpsl dec adc push cmpsl shlb add lods lea aas and jg lret into stos add push fidiv mov push std mov movsb (bad) jmp into mov and test (bad) (bad) lcall fistpll xchg (bad) pop add mov daa dec es stos add daa sub add out outsb fwait push in sti mov adc stos or pop rorb mov mov call clc lods mov adc jmp add and dec cmp sub fldcw (bad) (bad) out add add inc scas jae xor test (bad) (bad) (bad) decl mov mov adc mov icebp mov cmp sti or dec xchg sti mov shrl mov imul std push jbe addb loop aas shrb int3 (bad) jb pop ffree (bad) mov notb bnd insl cld out inc fwait sahf int3 fbld dec repz repnz imul cs jge dec xchg xchg (bad) pushl fimull aam mov ja or push orb mov repnz add mov roll jg leave jmp std decl lret jle pop jne or sub and xor mov fnsave push inc cs sar ljmp dec rorb scas pop insl call mov or jmp mov imul aam aad jno sbb iret push push popa cmp out sub dec jmp lds test iret lcall (bad) jg test int3 pop mov push ret ficom popa jbe sahf xchg mov xlat pushf in es js lret mov imul mov mov in and adc aas call loopne adc dec or xor cmpsb jge sar (bad) (bad) call push repz jle insb lock rolb in xor aam push (bad) mov sbb jp mov out idivl or pop fcompl push test add popa push mov clc shl mov (bad) dec xor xchg insb gs dec aas and aam loopne sbb das mov (bad) aam call fildll in jg fs subb stos lods dec add adc mov (bad) ds inc rcrl sahf xor (bad) call (bad) mov adc and inc push xor jno (bad) hlt sub cmp jg dec (bad) jne shrb mov xchg jmp clc pushf lock or (bad) and mov andl jb,pt push (bad) (bad) (bad) lcall sub dec cmp in outsl pop into je ljmp mov sbb mov insl cmp int3 lcall into xchg and insl subl js,pn or call mov (bad) jmp lds push (bad) rol sub cli and stos (bad) (bad) push jns lods mov mov xor adc dec mov mov or jg arpl das popf fistpll aaa mov xor jp sub jo icebp cmp inc (bad) (bad) mov push cs and or pop cmc in push in sbb mov shrb xchg scas or rclb mov cmp jg sahf mov insl xchg push and xchg test ljmp (bad) ss lret push cwtl cmpsl mov ljmp mov xor outsl dec sub jecxz adc (bad) (bad) call fistpll add xchg fcompl imul lock cmp (bad) (bad) fnop sbb and pop in jp test xchg aas incl icebp dec mov dec js and (bad) iret ss (bad) (bad) ljmp int3 bound jo loope sbb pop std sbb fucomp mov in mov movsl adc das loop inc or cmp arpl pop je mov rorl xor shl incl inc hlt divl movsl ret decl aam into rolb sbb lds pushf pop adc ss (bad) (bad) pushl add jmp xor inc lea xor (bad) call rolb or mov aas mov imul rcrl push enter (bad) (bad) jmp inc mov or (bad) cmp movsl ja lock xor ret push mov adc (bad) jmp incl adc xor add (bad) decl movsb es fwait pop addr16 data16 std rcr mov cli fistpl test es (bad) (bad) call sti cmp gs rcr sbb lea add ror adc mov pop popa dec movsl aad mov dec dec adc test push jmp ljmp push aas test lea out push dec push mov mov jg aas ffree stos mov xlat push outsl mov mov pushf scas subl mov or out insl test gs pop lret cmpsl lock call push mov lock dec mov lcall movsl lahf inc (bad) call cs loopne mov or stos add cmp jle push test sub pop (bad) jg (bad) and xchg int3 (bad) cwtl fisttpll mov and xor in dec xchg aad gs idivb cmp dec jl pop sub decb addr16 addr16 fisub iret (bad) (bad) (bad) decl ljmp daa and mov adc cbtw jg xchg lock xor push xchg and leave jne lds nop jbe dec push mov pop push ljmp xchg inc pusha loope ud1 pop idivb cli dec (bad) sti lock mov sbb mov hlt jmp xchg fs jae xchg xlat loop aas aas je (bad) incl fstpt add mov test inc xchg cmc pop jg lcall icebp decl (bad) push sub jg ret ret out pop ficomp push sub or decl dec dec xor mov inc inc pop inc lahf mov decl das lahf mov cmp hlt int gs cs cmp adc dec sub (bad) (bad) call lock loope cs (bad) enter xchg (bad) or enter pop in bound dec pop push (bad) (bad) (bad) dec mov fs sub xchg mull sbb xor push pushf pop sub jecxz sub (bad) rclb loopne (bad) lcall fxch neg aaa test mov clc mov fwait leave sti xor in sti push sar pop xor outsl test or inc sub push cmc aaa rorb xor dec les call outsl and and adc push cmp jns lahf (bad) (bad) (bad) lcall incl dec call (bad) aaa inc mov mov ja (bad) cmp push rcr mov gs (bad) (bad) incl fnop inc inc cmpsl loope gs into sbb mov leave in fst sbb lods mov (bad) jmp xchg inc jp mov inc repnz sahf and mov mov pop fs push jno (bad) jg movsl ds stos or mov or aad push mov jl data16 cmp std aaa (bad) push add (bad) fbld fisubrl mov jo push mov lahf cmp lods or (bad) in jmp (bad) insb cld sub lods repz aad sbb ljmp (bad) jmp push jg mov test jbe popa add aad (bad) (bad) lcall push mov fcmovne and dec cmc sbb sub lahf push mov lea test push nop out xchg pop popf in (bad) cltd jne xchg lea xchg sub (bad) call push inc jns jo dec fnop nop test sbb bound fistl mov loop (bad) ljmp push inc fidiv les out notl shlb cmp ret mov cld lds icebp mov dec inc movsb inc icebp mov mov mov and jo outsl (bad) call loopne mov xor cmp cmp push dec scas fadds mov and (bad) mov lea pop repnz imul mov mov ficoml inc addr16 popf imul push les cmp rcr mov xchg xchg dec sbb or test jmp jne cmc and sbb mov stos je sbb cmc loope movsl cmpsl sub xchg sbb sbb inc ror mov jle out jge pop adc (bad) (bad) decl jl push fwait notl ret cmp pop jno inc mov mov jnp add cld movsl unpckhps js es xchg dec xlat jmp sbb imul (bad) lcall dec dec test (bad) es pop inc xor (bad) mov jns cmpsl fwait imul (bad) incl lahf and leave push and call in sti sbb add pop or dec aaa dec lods (bad) pushl cld movsl and lods pop sahf lea jp dec mov test fmuls leave cmp call aas div adc dec fdivr fsubr cmp dec mov jg (bad) (bad) mov sbb ret adc and sbb mov pop cmp push jg pop pusha adc test (bad) push xchg incb ljmp outsb loopne sbb jns inc jns cmp test ds mov push and out test jecxz (bad) lcall aad lret xor and imul test or adc insl clc ss mov (bad) pop fsts or push add add mov cmp push mov std (bad) (bad) mov push add ja jge fs (bad) jmp bound add adc dec cld ja lcall add mov leave fcomi xchg adc sti xstore-rng cmpsl (bad) fstl push and lea andl push lock (bad) xchg push call add xlat or xor push lahf or xor fbld loopne jg fbld mov jp xchg cld fwait or pop std mov xor cmp lahf sbb mov lcall ret (bad) fsubl sbb sbb xchg in iret sbb stc inc mov test and dec add jmp jno xchg cmp push mov (bad) lcall aas stc lcall lcall inc jecxz (bad) mov out mov repz test fistpll adc and test mov add sbb jno add (bad) (bad) (bad) inc and mov test shrb movsb adc mov cmp jecxz popf sbbb popa add (bad) ljmp test lret push outsl icebp int mov jecxz or adc insl fdivr (bad) (bad) ljmp stc loopne aam jne and adc adc cvtpi2ps jle test add jno (bad) (bad) (bad) jmp mov mov mov dec (bad) mov ja (bad) jmp adc or xor lods addb incl mov mov mov xchg mov inc adc (bad) mov or movsl fsub scas push inc (bad) (bad) jmp xchg leave xor jge hlt or push or jle test movsb (bad) jmp je jle mov push fiadd sbb stos mov mov inc inc jne and inc jo cmp (bad) incl iret lret adc and sub mov adc rorb sub pop pop stos xchg (bad) (bad) dec xlat mov jno sub fstpt int3 sub pop mov rorb or add adc (bad) jmp xor jnp or sub insb mov adc pop sbb enter pop (bad) stc sbb (bad) (bad) cld mull es push mov add mov add and lcall pop fdivl and inc sbb int3 jnp mov (bad) fmulp add pop adc mov push jne (bad) (bad) call loop mov das mov sbb fistl jmp lods or sar (bad) mov push add dec cmp mov scas and and je dec sub add mov test (bad) (bad) decl aad add (bad) mov mov mov pop and mov aaa outsl imull (bad) mov jl or (bad) incl clc popa push cmpsb nop push rcr jecxz sbb mov (bad) jno mov es lcall adc xorl jle inc mov repz dec (bad) pop stos xchg fidivr sub pop out enter adc test pop aas mov or add aas (bad) jmp xchg movsb pop fldl into mov incl aas lods sbb imull stc mov sbb into xlat mov clc pop jecxz aam and (bad) incl fstpt mov push pop mov rcrl dec (bad) jne cmp cmc outsl clc out push icebp jge jecxz sub push cmpsl xchg push stc xchg sub and mov into sbb loope pop sbb inc mov (bad) jl into push fcomip (bad) lcall std cmp sti imul stos inc mov add call lock push mov or mov popa fisttp add ljmp ljmp outsb loopne repz jg mov sahf cmc (bad) inc or test adc lret adc push dec sub jnp test dec push in jg test add aas xchg (bad) ljmp cltd sets pop hlt or or pop pop cld incl leave aaa sub ja stos dec gs lds out cli (bad) aas scas mov inc push mov cs mov xlat ret clc fcomip call mov adc rcrb je das nop jecxz out adc jg mov adc adc (bad) ljmp xchg xchg adc stos xor jb iret sub or mov (bad) push rorl pop andl jno mov stos js or mov stos aam mov mov lds ljmp icebp and (bad) das jecxz jl js add imul mov adc je jg push add xchg push pop mov dec xchg push lret cli or ljmp sbb (bad) (bad) jg fbld mov push mov dec mov imul pushf mov xchg stc push (bad) nop divb jmp scas cli mov fucom les (bad) (bad) (bad) jmp mov sbb int pop sbb rcll fldenv hlt pushf lods pop imul jb (bad) (bad) (bad) in (bad) daa ficoml or mov dec aam cmp fstpl mov mov (bad) outsb adc jo ret cwtl outsl daa and (bad) (bad) jmp dec (bad) or jno inc push cmc add xadd in (bad) jmp mov fwait sub shll arpl iret das icebp (bad) dec daa or fstl inc ds lret hlt adc aaa push jge cmc pop out test pop dec (bad) sti fxch scas shl pop call mov sti std fwait xchg mov (bad) (bad) (bad) dec push mov xchg xor push (bad) pop test in inc in dec and jbe in repz xchg lcall test xor repz inc xor mov popa rcrb pop lds inc cld mov (bad) and mov in insl loop (bad) dec or xor fmul mov jge mov ja sar aas in ja jle data16 cli dec lret das clc (bad) decl jmp pop sbb jbe pop jmp stos inc insb jb (bad) (bad) (bad) incl inc in mov lahf and sub imul scas (bad) push mov (bad) (bad) incl jno ljmp jbe dec xchg xchg or ret xchg les je fcomps mov (bad) in iret mov gs xchg mov pop add dec hlt fldln2 pop add dec (bad) insl mov imul (bad) (bad) jmp aam xor xor and dec int enter loope mov dec and pop or (bad) fmul pop stos repnz add and fsubl mul in mov mov fprem lcall aas cwtl rcll and xchg or decl sbb mov push ljmp call and jmp mov lret mov cmp mov and aas cli (bad) call inc sbb jno mov mov mov push adc add lods and push clc pop jp sub cmp test (bad) (bad) lcall pop js daa in jmp adc sub push xchg inc or (bad) push insl test mov pop leave xchg xchg jno hlt (bad) or cld (bad) sub arpl fdivs inc and and lea leave (bad) call lcall mov adc mov aam (bad) sub rclb sub movsb jmp sub lock (bad) arpl in jnp ljmpw stos aaa mov adc fucomp and adc sbb loope addr16 (bad) (bad) (bad) out fstl mov outsl out js dec xchg jo jnp dec test xor pop or and push lods nop lods (bad) or add decl xchg sbb pushf xor sbb inc je pop pop jge pop jg (bad) jg push lret pop pop add pop test add lahf sbb ljmp (bad) (bad) sti mov inc out in push and es xchg je lret mov add sbb (bad) (bad) call or mov push nop rorl jle sarl inc (bad) (bad) (bad) pushl mov jmp outsl jnp imul rorb jno pop test add ja movb add jl sub ljmp sub scas sbb js sub add lahf xchg ret jne sbb fnstcw call push jecxz scas mov adc js mov mov imul cmp lock dec jecxz jmp dec fstps call xchg mov repnz scas (bad) (bad) jg aas daa ret fstps inc or cmc (bad) sbb and inc (bad) aaa (bad) sarb sub sbb lods mov or mov shrl cmpsb icebp mov mov mov mov sub fdivl ss pushl les adc les push repz hlt mov xor mov push jg (bad) (bad) call sarl rcrl push xor xorb xor addl ror int (bad) (bad) (bad) sti sbb iret cld cmp ja bound incb (bad) call cmp or add xchg push cmp bound (bad) lcall cmpsl sub (bad) fisttpll ret add fsubrs shll and dec pop in call xchg inc ljmp mov add push mov fs pop cwtl (bad) pop cmpb push rcrl (bad) push (bad) mov cld into fsubrl jle in mov xor push pop pop jno idiv pop cld out (bad) decl xchg es lods cmp mov push mov or xchg inc mov push mov test (bad) hlt cmp add mov loope xchg (bad) (bad) (bad) inc es or sahf sbbl mov (bad) dec std ljmp adc (bad) (bad) pushl xor inc jno xchg loop pop mov es xor cwtl aam (bad) or cmp push add test outsb (bad) aad adcl cmp (bad) jmp push pop orl test cmp mov loope sub loope add scas inc xchg xchg (bad) jg sub stos sti mov push lahf sbb pop inc cmc xor out sbb sbb adc inc sahf stos jo pop jmp icebp lcall cli mov jno cmpsl dec pop into add popa add incl (bad) (bad) out xsha256 cmpsb xchg mov and or jge (bad) lcall mov xor add in xchg dec (bad) stos and insb (bad) je sbb adc cld jmp sub xchg insl push pop jb fwait pop mov dec loop lahf sbb and ret aam call and pop add inc xchg hlt mov xchg dec (bad) call std iret sti ficomp sti call xor sbb or std stos dec jmp adc ljmp mov std sub inc (bad) (bad) (bad) (bad) ljmp test pop mov inc das sbb mov mov addr16 cmp loope push (bad) mov repz xchg inc mov cmpsb cmp movsb mov mov xor (bad) decl jge or sbb add dec mov out push xchg in and (bad) (bad) push lcall push jle and cmpsl sub push test jno lods cmpsb inc stc or dec fucomip (bad) lahf (bad) (bad) (bad) pushl mov xchg clc xchg xor or cltd cmp cmp xchg imul arpl jae sahf jns push or cld jp iret fstpl or (bad) (bad) (bad) out mov (bad) adc jnp and add jecxz js inc insb and dec (bad) out aas sbb int3 adc xchg add lods xchg es mov cmp cmpsb lds add int3 add bound in loop mov ljmp mov imul pushl jbe (bad) dec sahf std mov inc mov and (bad) rclb dec xchg push or add arpl (bad) mov push insl cmpsl jb add (bad) mov xor call rclb sub outsl sub mov (bad) (bad) inc sub jb and jg cld jae ss insb outsl xchg jne sarl push (bad) insb pop scas packuswb and sarl repz leave xchg push cmpsl push lods sbb insb out lods sub mov hlt pop or jmp call or sahf inc cld sbb mov mov push popa cmp mov jg (bad) (bad) (bad) (bad) jg sbb cmp push inc jg pop and out xor jmp lods xor cmp or pushl push jnp cmp pop les cs cltd mov iret nop sbb out test lcall push push subps movsb enter xor dec arpl and sub or cmp es test inc push xchg ret sbb ljmp xor pop insb mov fimull cmpsb lods mov or call adc ja int3 xlat push mov push mov push xlat or call cmp or sahf shlb pop or ret lcall inc test outsl pop sbb push call (bad) pop sahf insb cmp mov sti gs rorb add (bad) iret testb mov (bad) pushl pop jne lock jbe add stos xchg cmc out add jl add (bad) (bad) lcall stos (bad) xor test shrb pop mul dec xchg adc clc subb pop jnp hlt and (bad) (bad) lcall cwtl ds enter or jge mov pop adc (bad) jae push (bad) (bad) (bad) (bad) cmp std fst pop xchg mov mov inc lret cmp imul mov mov (bad) ljmp ficom lods jbe popa aam leave jo dec inc mov cmpsb cmp lret std call loop dec add mov call pushl ds or imul mov leave xor add or gs (bad) ljmp (bad) and ljmp test push fs cmp sbb pop pusha mov (bad) (bad) (bad) decl sarb mov fstpt push arpl mov scas repz mov cmpsb rcrb (bad) (bad) (bad) call jge dec gs ljmp jge dec xor out leave mov cli cltd sahf jg cmp xor (bad) (bad) ljmp inc mov sub cmp imul mov popa jbe push (bad) (bad) (bad) call mov cmpsl cld nop push fildll sbb xlat jmp mov stc mov in add (bad) (bad) (bad) pushl (bad) mov jb cmp aad add pop jne xchg jl fsub sbb jmp or cmp enter mov movsb pusha add sarl dec dec inc cwtl mov mov incl (bad) adc sbb adc call and and loop jge int3 push test (bad) fildll je jbe rcll mov adc repnz jp (bad) (bad) (bad) cmp repnz add mov or xchg into faddl popf addl test (bad) fldenv dec (bad) jmp out xchg push daa xor or pop or es jb or aad mov (bad) (bad) (bad) (bad) lcall pop sub or mov in add hlt mov sbb pusha das das (bad) (bad) (bad) call push mov mov push push mov mov and hlt xor enter push mov (bad) pushl test push dec inc mov jnp ret push std hlt mov jmp and dec test mov and clc mov push (bad) (bad) (bad) decl gs or lea sahf jge push dec xchg mov stos gs mov mov (bad) (bad) jmp jg cmp push xchg ret ljmp (bad) bnd (bad) repz test dec call dec lock cltd iret cmpsb and sub in cmpsb fwait pusha jne lcall fdivr pop dec xchg mov sbb into insb cmpsb out jl cwtl out or (bad) decl hlt aad jo lahf jle (bad) loopne mov std fwait daa js call gs (bad) call int outsl std imul lahf std or lods insl mov inc add (bad) mov sub sti cmpsl ds lret jl jg vpsraw or mov inc and xchg cltd xchg ljmp or jg mov sub pop fdivp inc xlat adc (bad) decl xchg (bad) (bad) repnz int3 clc test xor ljmp and sub ljmp and jne sahf addr16 popa (bad) (bad) (bad) jmp sbb jp add jae sub or and mov xor or incl outsb xchg pop icebp xchg lahf test rolb pop pop cmp xchg aam lcall in nop xchg int3 sub fild pop out mov std pushl mov imull inc add jno push add lcall cmc pop ret lds fcos incb lea lds cmp sarl inc cld stos adc dec mov insb lahf add (bad) mov mov pop and pop mov jb repz and stos dec dec (bad) outsb pop std in scas fldpi pushf (bad) (bad) (bad) incl sbb lahf pop mov adc sbb push clc and leave pop inc push std mov pushf (bad) clc cltd andb cltd push push imul sbb (bad) pushf mov fidiv inc xlat push rorb and decl pop stc fdivs mov (bad) pushl data16 and je xchg jnp (bad) mov pop sub (bad) (bad) lcall sub loopne push insl mov xchg scas cli or ja add std lds mov rorl push jo or nop push push (bad) (bad) call aas xchg or leave sti loop inc xchg mov push add in iret inc loopne into xor cmpsl inc bound xchg fcompl incl arpl stos or ja dec bound xchg in push loopne push inc icebp pushl jb mov sahf aam lods (bad) (bad) (bad) (bad) lcall dec pop and adc cwtl (bad) fdivl mov xor or testl test jl scas into cmp mov (bad) (bad) cwtl push pop adc push les add lret fadds cmp adc ret test ljmp mov add pop loope inc icebp (bad) (bad) jl test mov mov addl cli sbb cmpsl test incl and std or (bad) (bad) (bad) cmp cmc push mov xor sbb lea mov jne dec js (bad) fldenv test dec insl push mov mov xchg (bad) jg or pop mov mov xor (bad) (bad) (bad) dec sbb (bad) add xchg mov lcall test mov push inc clc pushl sti pop repnz and lcall fs sub or sub (bad) decl mov aam (bad) inc adc cli aaa lret rorl (bad) (bad) mov jle push mov popa imul or lds (bad) incl sub fisubl popa scas (bad) cld mov cld or xchg push jp and cmp add jnp jbe outsb and cs (bad) (bad) (bad) lcall les sub popf aaa inc in sar dec lret pop stos jecxz pusha fs loop icebp xchg idiv js (bad) data16 dec leave fwait xchg das es jmp adc daa add imul (bad) jmp push cmc addr16 cmp xchg mov xchg aaa sbb addr16 push push (bad) call shlb (bad) lret mov aad icebp call mov pop (bad) (bad) (bad) ljmp xchg test gs pop in das fdivl addr16 imul mov (bad) (bad) ljmp cmp fistp xor js leave inc inc jne dec addr16 cli xchg mov gs loope ja sub xchg out mov addr16 sti jno rolb in (bad) (bad) (bad) pushl adc imul shl xor xor test (bad) (bad) (bad) incl cmp xor das or andl fs dec stc cmp mov test (bad) decl and xchg and fdivrs into scas shrb pop lcall loop daa addr16 arpl andl pop ljmp lcall add adc push sbb notl mov and jb clc mov mov adc (bad) mov (bad) out xor inc pusha mov loopne arpl cltd add pop sub js push sub jl mov hlt (bad) (bad) (bad) pushl insb in fxch add pop scas lahf sbb dec mov aad mov or push bound cli ljmp in rcrl clc outsb sbb (bad) call loop inc fidivl and fbstp ret dec push fisubl mov (bad) call das inc or xchg mov push rcrb call cmp xchg cmp pushf dec (bad) lcall aas mov mov push cli loop push jecxz (bad) call imul mov push lret dec or xchg int sub sbb jg clc decl jne dec orl sub mov pushl leave cmp sahf cmpsl push xchg stc jmp or mov xor in stc mov push shrl jmp pop (bad) (bad) dec in push mov xchg arpl adc lea mov fcmovu sub jg (bad) cmp add or mov mov enter mov lcall mov xchg cmp in mov lock cmp pop ljmp or jg sub ret jbe mov sub push icebp fstps mov mov jg ljmp (bad) jbe push jmp mov lcall jo insb sbb (bad) decl pop mov inc add mov loope jle popf fnstcw dec push int dec sahf adc int3 sub fs (bad) incl sub clc push les enter cli mov movsb push inc into cld or and mov pusha sub pop mov scas xchg (bad) les cli test mov das mov and add jnp push mov (bad) and ljmp aas and pop lcall call sahf pop sbb jmp fldpi enter or imul js dec sti rolb cld sahf in dec fcom or (bad) jg pop xchg sub aad cwtl or (bad) pop sub inc push inc push mov into mov lds (bad) push (bad) push pop fsts jmp insl and shrl add lret mov lods xchg in mov and mov lcall pop xchg scas inc cmc dec jecxz test jle outsl (bad) adc test sbb (bad) (bad) jmp sahf and jmp in pusha (bad) pusha stc add or cmp ret (bad) mov aas push cld es push outsb mov decl or mov decl mov or cmpsl mov jmp push fdivl aam jle,pt movsl repz adc hlt imul xchg iret mov decb fsin loop jmp push inc lea ljmp and into sbb jne add stos icebp jb in (bad) (bad) (bad) dec jmp inc mov sub mov ljmp adc mov mov int mov pushl mov outsl (bad) mov and scas jbe clc xor mov (bad) (bad) decl cmp dec mov int3 fstpt int3 push pushl scas dec or cli (bad) (bad) (bad) ljmp mov mov inc outsl push cmp fucom xor mov pop and decl add xor out mov (bad) (bad) decl rcr sub arpl jge mov cld xor mov adc add (bad) mov fimull outsb (bad) mov shll push push jmp pop cli fisubrl loope and xlat pop (bad) (bad) (bad) (bad) out jno pop insl sti xor cmc (bad) repz test int3 gs mov das out jl mov popf sti aas push (bad) aam mov fnsave imul jmp xor push and push std xor rcrl pusha pop bound add mov aas orb sub sub out mov js sbb lahf inc pop fisub idiv (bad) (bad) jl and adc movsb xchg dec add mov idivl jge addb (bad) incl xchg sub jbe fstl jns hlt call (bad) (bad) sarb hlt jp mov and (bad) (bad) cmp dec xor or fild out scas mov xchg mov pop (bad) (bad) mov jecxz mov and dec std ret in cld (bad) call (bad) jbe sub insb cmp push in loopne inc mov mov test lahf jno leave mov insb lsl ljmp sub or pop popa sbb subl inc cmp (bad) (bad) dec jecxz addr16 push mov adc inc mov inc test outsb mov or (bad) rcll jae push cmp ret enter mov shl inc jp,pt sbb lods xor imul pop adc jns mov mov dec xchg aas aas push ret decl insb cmp inc jmpw mov pop inc jg dec cld icebp ja test bound mov jb push loop and pop mov jmp pop jg and fs shlb decl cmp mov (bad) (bad) (bad) mov ficompl or xor mov or mov mov pusha call mov bound in jo xchg les lods pmullw or ljmp (bad) in sar add cs dec fsubs test push lahf data16 jp out or adc pop je lock jno aas dec mov pop fsubs (bad) cmp out add cmp cwtl or mov xchg inc cmc ja cmpsl and (bad) (bad) decl jae pop mov (bad) adc imul ja imul ss jl jno jg mov cld imul daa repz xchg (bad) out std push jmp add mov lret push pop andb mov out push or inc aad mov cmpsl iret xor (bad) aas push shl push (bad) xchg add loop or call nop push xor fsts pusha pushf inc int add icebp fld jg add arpl pop dec cmp (bad) pushl or adc roll idiv xchg dec (bad) aas sub add ficom cmp mov cmpsl in enter xchg stos (bad) (bad) (bad) mov mov sub mov mov sub pop jno rcll sub or pop sbbl dec xor bound outsl js xchg (bad) jle dec je xor pop jge cltd adc sbb ljmp out (bad) aas push (bad) icebp mov repz popf les jnp fadds lcall cmc invd lretw ljmp aaa adc or mov scas (bad) mov xor aas sub push je jl mov dec jg leave call jp inc push xchg fcoml outsl xchg fbstp popf movsb inc (bad) (bad) ljmp push mov sub adc (bad) xor add aam dec (bad) push out inc xor mov test xor jne mov mov shrb mov call repz xlat mov sbb xor test movsl push add xchg cmpsb je adc push mov nop add fsub push ficompl sbb lock fdivr jmp pop pop mov lods mov inc outsl mov fcmovbe adc or pop xchg int insl (bad) (bad) call push lock mov rcll clc (bad) dec lret or mov cmp (bad) sti call inc cli js cmc lret jo call dec rcrl push mov inc mov xchg push mov xchg push fdivl pusha out dec pop icebp imul dec fstl cmp mov xchg nop or cwtl push push clc jmp sub decl sbb mov (bad) mov adc xor test cmp jg (bad) ljmp ret and cltd inc add lahf sbb push lods mov xorl ljmp jge mov pop in aad pop dec das es sub lds dec push mov cmpsb (bad) jmp (bad) orb out mov fwait or jns mov dec insl xchg push add xorb cmp (bad) in ljmp sbb loop or pushf inc fsubrs or push mov inc xor (bad) (bad) (bad) jmp icebp mov sbb mov shrl inc ret push jl or ljmp dec iret arpl xchg add sbb pop pop in jge or dec add pushl out jae int pop fcmovne (bad) (bad) (bad) pushl adc fdivl arpl dec mov mov adc test call cmp das push inc fistl mov push fild cli (bad) (bad) pushl add in inc dec ss ja (bad) add lds jb incl inc lahf mov push and (bad) (bad) (bad) (bad) inc or add mov repnz fwait adc jne inc (bad) lods testb lret (bad) (bad) fcomip mov icebp inc enter pusha mov iret mov (bad) loop (bad) (bad) jmp add scas inc mov mov xchg rcll lret cwtl mov push fwait (bad) out inc jl or xor inc and mov incl xchg mov std loop xchg imul jge or (bad) call daa mov pop roll sbb adc push scas lahf pop loopne incl xchg das push popa jmp test cmc cmp stos ja add mov sbb (bad) lretw lret sbb into (bad) (bad) pushl (bad) insb or clc cld add and add mov mov pop mov int push jae aaa outsl insb inc mov ret cmpsb inc sbb aaa push daa inc (bad) lret push je and lcall or pushl dec push and jg decl xchg cmp out dec into inc lcall pop clc sbb pop das nop mov aad mov inc add mov (bad) (bad) ljmp cmpl dec sti jp push aad jae xchg popa and jb pushf mov mov adc stos sub lea fdivrp lods lret lret les nop jge inc dec call jno iret fs jg fwait jle lcall mov ja,pt jp push jae xlat xlat xchg repz (bad) (bad) xchg (bad) (bad) ljmp cmpsb into fisttpl mov xchg pop test in mov cmc fstps (bad) out pop or mov (bad) (bad) decl push add add pop xor dec inc lock (bad) (bad) out or xchg movsl jne jge dec das sub lcall xor xchg mov xchg jge shlb sub cltd roll xchg popa cld inc jno adc inc xlat add mov xor sbb imul (bad) (bad) (bad) (bad) fdivr mov push jmp xchg mov and push adc push push (bad) push js roll push xchg jnp ljmp push dec (bad) enter adc mov inc mov and inc (bad) lcall addr16 and fisub jg out jg (bad) ljmp jp addb scas aaa mov cmp ret jbe mov mov (bad) frstor sbb dec mov inc hlt movsl ljmp repnz adc or ljmp dec fsubs dec jp (bad) (bad) incl sub sbb push fwait nop loope test fwait xlat in inc jbe or cmp dec insb xor xor ja push mov clc test das pop test mov stos notb inc xor jo xchg (bad) mov add fdivl popf push mov dec mov xor sub dec rorl loope (bad) ffreep popf loop inc sbbl das aaa ds xchg pop pop (bad) fidiv ret mov (bad) pop push fucomip movsb sbb rol xorb (bad) (bad) fstl and jp and test pop fcos decl xor in push jb (bad) in sbbl mov (bad) (bad) inc xchg adc cmp jno jmp fnsave inc mov enter loopne (bad) call jbe out lock popa mov inc mov dec mov popf adc stos pop jle lods aas dec sub push clc cmp jo in or imul and (bad) (bad) call lods insb inc lret adc cmp add bound xchg insb fstpl std (bad) (bad) incl or mov pop mov loope xor mov add sub push mov jge cmp xor (bad) decl and js cwtl insl sub sbb mov lcall mov xchg dec sub lahf fsubs (bad) mov adc call cwtl cli sti outsb push jecxz cmpsb stos inc inc fadd js xor pop dec (bad) (bad) (bad) jns (bad) cs fldenv mov inc xchg jl xchg in out push negl movsl mov push cmp in mov mov lds call in mov jl lahf (bad) (bad) (bad) (bad) jle jp jmp add jecxz out cli dec sar aam sbbl adcl mov imul (bad) mov sub dec leave stos (bad) (bad) (bad) lcall repz mov pop fcompl daa xchg insb stc fsubl adc in jne (bad) (bad) jg test cs inc in in adc dec into xchg data16 cmp adc (bad) jmp cmp (bad) sbb call push test shrl and xchg dec lods add push or ret adc inc cld (bad) inc (bad) insl test push dec pop push gs leave inc rcll lods mov pop push cmp adc xlat add daa fmuls insb (bad) adc std (bad) call mov ret push test xor inc out pop fidivrl cmp aaa cwtl (bad) (bad) (bad) lcall push pop add mov aad add jns jae cmpsl jne imul add (bad) negl cltd (bad) bound subl mov rclb addr16 pop pop fs cmp ljmp cli ljmp jle pop mov pusha dec shlb adc (bad) (bad) mov into jb call cs adc lahf adc xchg fsubrl outsb std (bad) (bad) lcall (bad) cmp jg es (bad) push mov pushf and or lret jg inc push into and in sbb mov ljmp mov into push jl mov inc jmp push cli bnd inc fwait xchg in js xchg or cli (bad) jmp sub adc test pop pop mov aaa cld ljmp jl pop ret repz stc lret and fiadd lahf (bad) sbb int pushf int3 adc xlat mov pushl out fnstsw push push fadd jno fs adc test imul pop daa sbb sbb incl mov repnz dec adc (bad) (bad) ljmp push loopne jecxz dec aas mov jae dec dec push jecxz scas outsl fldcw dec sub and gs lock mov push xor or ljmp arpl test loope adc or xchg dec pop pop xchg (bad) fnstsw stos inc (bad) rorl (bad) movsb or fistpll xor adc and push jb mov push cs clc sahf in cmpb add inc (bad) (bad) (bad) incl lcall push sub ss jbe push fldl mov sub add (bad) (bad) jmp sbb sub sbb idivb dec test pushf jmp xor loope inc add cmpsb mov call add cmpsl mov xor dec hlt je or rol inc lret cmpsl popf mov pop in xor mov rclb fsincos pushl sar sub add call out sub jb sti xchg or (bad) (bad) (bad) inc or fwait notl mov fdivs pushf ret adc pop xor sub movl cmp popf cmp (bad) (bad) call mov mov xor aam movsb imul imul call (bad) ljmp jp stos sbb xchg fcmovne or add add fisub scas mov or mov push pusha insb jns push dec in loope decb adc cmp pop (bad) jl add pop pop fcmovnu jb mov or in sahf loop lahf (bad) (bad) (bad) (bad) fiaddl lahf dec pop xchg dec dec cli dec out ss decl jb loop cltd jecxz in gs or push (bad) (bad) jmp int lret inc inc mov (bad) cld adc jl sbb push or sar call inc out push mov sub and pcmpeqb movsl cmpsb lcall fmul pop xlat push repnz idiv aaa je xlat and mov int3 test and fnstenv lcall pop sbb out insb push loopne add rcrb sub add mov mov lds ror jge icebp (bad) (bad) in imull test jmp repnz sbb pop push adc jg lcall add mov mov inc mov dec lods add (bad) (bad) pushl (bad) jle xchg mov add xor or inc pop cmp fsubrp fstl pop (bad) jmp je test push jg fiadd add int3 push cmp mulb scas xor pop aam lahf popl in cmc xor sbb mov cld pop cmp pop es pop xchg clc repnz cld loop js popa stc sahf mov cmp (bad) jg inc dec mov loopne xlat push mov clc (bad) (bad) lcall pop lea jbe sub push fimull sahf lock mov mov and and inc xchg mov push jecxz mov mov sbb and or cwtl lods push push inc lahf fistpll cmp (bad) (bad) push mov loopne mov imul xchg dec call (bad) mov xchg pop gs inc xchg mov ficoml das xor (bad) (bad) js sarb ss pop xor adc pop cmpsb xor fwait inc and loop inc (bad) incl pushf adc pop jg imul sub jecxz dec xor fcmovnb negb repnz (bad) (bad) incl popa pop push les loope fbld add and lods popf jns inc push (bad) dec ffree sub mov sbb roll (bad) (bad) lcall push lret cmpsb xchg aad cmpsl sub data16 (bad) out leave (bad) in ja push push pop push (bad) (bad) ljmp mov dec icebp vpmadcswd addr16 mov mov movl (bad) call or inc pop pop jns mov add mov pushl lock lcall and (bad) call call mov (bad) and aaa addb jae in push pop hlt fildll fisubrl inc int jmp add sbb lea arpl clc insb rorb ret push aaa (bad) (bad) (bad) ljmp xchg push xchg (bad) lods jno mov sbb push mov xchg and dec pop shl mov cmp pop xchg test jno mov mov std push je cmp add xchg pop (bad) (bad) (bad) jmp hlt lods rorb sub int3 sahf inc fsubl push sarb scas cs pushl hlt mov jo test sub arpl adc lods call cld (bad) les pop adc push es cld pop es add das xchg repnz push (bad) (bad) (bad) jg scas cmpsl test (bad) cmp mov jb mov and jmp push mov fdiv fiadd fmuls jl (bad) in pop (bad) pop dec mov mov or inc xchg and arpl mov movb inc lcall mov subl xchg lods ss pusha les xor (bad) (bad) jmp push mov xchg (bad) std mov mov mov adc jg test aad cmpsb mov pop dec gs dec fprem pushl cmp imul (bad) (bad) dec (bad) adc fs (bad) add sbbb jp nop mov mov pop xlat in out test sub incl lods push push fdivl (bad) mov (bad) mov std (bad) decl into jo aas loopne and int fisttpll (bad) out (bad) mov out out sahf lock add (bad) (bad) inc inc cmp fild push pop ss out xchg lcall cli inc inc addr16 push xchg sub (bad) (bad) pushl inc adc in mov adc movsl xchg popf andps loop icebp scas (bad) (bad) (bad) call xchg jb inc scas jno push mov ljmp stos and sub (bad) incl les fmuls xor movsl loopne ror sub xchg mov (bad) (bad) dec xlat ljmp je push add fisttp fimull add outsb loopne,pt frstor clc (bad) decl insl (bad) xchg mov (bad) xchg pop or das pop mov cld incl mov and (bad) mov sub add test fild fiadd sbb popa sbb ja sub into xor pavgb mov mov call notb add (bad) icebp cmp jge scas inc out scas (bad) jmp ret jne mov js icebp dec insb js sub clc and je gs (bad) (bad) push inc cmpsb sub xor cs ret pop cmc lea lcall jo les cmp mov xor (bad) (bad) (bad) jmp int3 pop addr16 sub lahf (bad) mov dec add arpl pop mov (bad) (bad) (bad) incl sub outsb out jne mov xchg pop out xchg int (bad) or mov out lds mov cmc les jp xor js fwait adc or es pop push fnop imul sbb inc push push (bad) mov ret or dec and sbb xchg outsb or dec mov iret jecxz (bad) (bad) ljmp jb hlt push sbb adc enter mov push xchg adcb lods (bad) (bad) fcomip outsb cmp adc (bad) sbb cmp sub jo negb loop stc mov mov aam pop jno sub cmpsb cmp je pushf loope cmp pushl ja dec jnp xchg out mov dec adcl inc xchg and push (bad) cmp dec adc inc xor pushf push lds pop push or sar outsl ljmp mov ffreep and dec sub fxch push cmp push (bad) (bad) (bad) aas adc out ret (bad) pop xchg and push adc xor mov mov stos pushf stc mov out imul imul out idivl (bad) incl mov pushf pop and jbe add mov adc insl mov mov cli and (bad) (bad) (bad) lcall and (bad) iret (bad) adc stc cmp xor lcall insb lods bound rcl mov (bad) pop hlt jmp sbb cli mov sbb xchg (bad) or add pusha movsb pop in and (bad) ljmp cmpsb and add les js popa rcl mov xor xor cld mov mov mov stos jne push sar sbbb adc incl (bad) (bad) (bad) pushl and jne xor push dec scas dec dec dec cmpsl jbe sub or (bad) inc arpl push or mov mov cmp jmp clc cmp lea xor das or cld sbb lcall pop cmpsb pushf sbb (bad) mov ret push jmp clc dec cmp hlt nop test ss (bad) incl xor mov mov mov sti mov fcom inc iret mov (bad) jg aad inc loopne inc insl addl insl push adc sbb xchg (bad) jg pushl aam (bad) out xor lret mov jae or mov push fwait or push or fimull push xor lcall lcall sub inc pop mov mov iret push nop mov mov lcall lcall push loopne jp dec mov in cmp sar dec adc out cmpsb pop jbe fadd or push sbb (bad) pushl cmp mov aas or sub stc pusha lcall cs cmp mov (bad) (bad) (bad) incl ljmp lods mov cltd mov mov jmp sub (bad) (bad) (bad) call add aas shr lcall inc and xchg or cwtl inc fs je (bad) (bad) incl lock data16 jns sbb mov sub outsb pusha dec ret dec xor push std popa jne adc lods out int xchg or int3 addr16 (bad) incl (bad) push cmp mov adc (bad) (bad) mov pop jo jg sub (bad) mov call push lds mov inc and int and push mov mov leave push adc (bad) (bad) inc clc sbb insl inc fdivs ret jl std in inc and adc jno jmp xor jp jp or daa push popa repnz and lahf sub sbb rol and pop in jne jl test ljmp dec enter stc arpl dec jle clc nop (bad) (bad) out out mov (bad) (bad) decl push aaa out inc (bad) nop enter mov xlat pop dec ss leave incl push scas ja fldl ret aam pop ret lcall incl out lret mov or fdivs mov in dec jbe in insb mov adc pushl jae inc mulb jmp mov sub jl mov ljmp and scas ret sbb adc cli (bad) (bad) jg dec ret add sbb loopne inc and sub dec add mov sbb decl adc xchg (bad) xor push test mov mov xor pushf dec adc push mov mov (bad) (bad) decl sub test lods push notl mov inc cmpsb sti xchg push add ljmp (bad) daa (bad) (bad) (bad) (bad) jmp jno ds sub jb rorl in xor sbb call inc cmc in fs int3 into ficom inc cmp stos std mov imul xor cli (bad) out pop pop jno scas (bad) out cmp test decl lock leave cmp xchg divb pusha pop out (bad) idivb fst inc add imul incl pop and dec dec out jnp popl mov mov (bad) (bad) (bad) call fidivrl cmp mov jmp adc outsb dec cmpsb xchg hlt (bad) (bad) call and adc or jno or or insl pop push sbb inc nop mov push inc xchg mov popa add xchg (bad) mov outsl mov push clc scas jp jle call outsl adc sub dec (bad) (bad) ljmp dec cs cmp mov push xor (bad) (bad) decl jb push arpl cmp das xchg loope sub daa xchg (bad) dec ret (bad) cld adc icebp mov cwtl cmc (bad) or pop mov sub lods mov (bad) (bad) fildll xchg icebp (bad) lahf hlt sub jns lret (bad) pushl nop dec leave ret in iret xlat popa fstl fwait test int sub js (bad) (bad) (bad) incl or repnz mov imul xor pop sub jmp xor sbb mov mov add js call (bad) ljmp or (bad) je mov aas xor cmp es pop add sbb adc dec stos mov std (bad) (bad) incl jl int3 jb push inc in adcl sbb fsub stos mov mov mov out (bad) jg dec pop mov dec mov aas push add pop repnz pushf mov (bad) lcall cmp sbb sub (bad) sub add scas sbb xor and dec xor jp pop arpl inc (bad) xor push jmp jne hlt (bad) (bad) jno dec jbe (bad) (bad) jg repnz cmp outsl cwtl sbb pop mov mov pushl sbb jmp mov stos adc mov das fmuls xchg add insb mov pop ljmp aas adc mov mov adc fildll adc iret gs push dec sub xor (bad) (bad) (bad) decl pop push leave (bad) lea dec xor sub hlt shll xchg pop and inc les inc les mov xor or (bad) (bad) decl out mov aas or aaa push push lahf mov cmp in imul loope test icebp pop push loope sahf dec xchg (bad) mov jle dec aam (bad) xorb pushf sbb jnp push ss inc jmp insl cld (bad) mov and inc mov or pop cmp add sbb mov jmp es lcall xor es lcall stos mov pop ss mov adc iret stos inc fmul loope clc lock into jae and sahf sub (bad) ljmp add ja xor (bad) and adc call out jp pusha js pop sbb call adc test mov xchg (bad) (bad) jge add cltd (bad) jg add fcomi in xchg lret xchg (bad) (bad) (bad) ljmp and (bad) in push adc out jl and jecxz mov dec inc push and jg sbb lock and das (bad) (bad) out push test xor test cld insb aas jnp sub lcall xor or push (bad) (bad) cmp fnstsw bound out sbb sbb inc aas lock dec or out cmp (bad) call roll subb mov pushl and jg aas (bad) popf int3 std loope push (bad) aaa xchg rol imul out sbb and cmpsl sub sub push inc (bad) mov lock push xchg xchg mov fcomip mov pop call out or xchg xchg outsb push js int3 sbb xor and imull jmp jl (bad) (bad) (bad) (bad) jns add aam pushf sub cmpsl shrl addr16 jle inc loop pop pop movsb pop jmp or lcall pushl ret lods stc (bad) adc jb (bad) (bad) pushl sub xor xlat in cmpsl sub fidivrl inc mov test mov ljmp adc aas jnp push lods xor sub add mov (bad) (bad) pushl jle jecxz xor (bad) testb test popa cmp je jl int xor sbb (bad) push scas loop lret cltd adc sbb ja fisttpl cmc mov mov (bad) fadds mov int repz jmp cwtl add les inc jmp orl push and (bad) mov xchg cmp mov jmp incl xlat jge xchg sbb test adc adc or sbb dec add xchg dec mov js pop repnz stos (bad) jmp aam jmp xor xchg (bad) adc clc jmp loop arpl outsb call pcmpgtb jb sbb cmpsl movsb or call dec aas pop les mov lea sbb (bad) ljmp test xchg pusha push lcall dec jmp fwait cmpsl and or divl clc xchg cld dec dec andl or mov stc scas pop dec (bad) lock decl inc cmpsb jbe test hlt xor in std jp notb cmpl dec add ret sbb inc (bad) (bad) (bad) (bad) mov nop/reserved xchg push sbb xchg and lock mov cld (bad) push cltd xchg sarb movhps (bad) (bad) call inc mov (bad) outsb mov pop and mov js cmc out and sub incl clc mov jmp ja push mov jl add shr xchg sbb adc call ljmp daa cmp dec jmp (bad) stc jg and or mov mov iret cli mov mov mov cld (bad) (bad) (bad) ljmp pop sub and xchg pop fwait mov mov sbb jmp shl mov pop popa clc pop call jl fwait add in pop out push sub mov out loop adc (bad) (bad) pushl test out dec in push push sub push sbb dec mov (bad) (bad) ljmp je add xchg jp and inc scas loopne xor mov (bad) mov jnp push (bad) stos mov inc pop mov (bad) (bad) call mov cli movsb bound (bad) sub ljmp and cwtl fadds (bad) (bad) mov pop xlat rorb lea inc inc rcll push scas in mov xchg pop (bad) (bad) (bad) lcall mov movsb incl mov hlt repnz scas adc fisttp pop incl lahf lods pop lcall push mov jo jle xor xchg das mov es (bad) jmp push int3 lea lahf dec imul aas add ljmp inc adc popf or xchg ds rcr mov sub nop mov cld mov jb jns lahf mov imul int int3 cmp cld (bad) (bad) cld lcall mov lods enter daa sarl das mov (bad) testl mov test mov mov ja xchg (bad) test dec js cmp xchg push jg pusha std movsl fdivr mov int3 dec rcrl add push cli mov cmp jmp int3 inc dec xchg es pop xchg cwtl imul (bad) mov mov popa fs and jl hlt jg mov mov mov out js (bad) jg loope xchg aas mul fsubr mov enter int push das in (bad) out stc xlat lahf mov nop test mov sub dec inc test sub aaa dec (bad) icebp cmc loopne or out adc xchg lods and insb cld (bad) lcall and adc push xor (bad) jg fdivl out and pop (bad) (bad) ss iret sub (bad) incl decl mov mov xlat xchg loope xchg push in cmp (bad) (bad) incl es leave sbb mov (bad) adc jo sarl fcmovne mov and adc xchg jno repnz sub xchg dec lds adc (bad) (bad) (bad) jmp inc inc vmaxss inc in sar fsubl fnstsw cld push fldcw cmp mov (bad) (bad) ljmp rorl sbb int repnz jmp xchg scas decb dec push ficompl xor mov xchg xor jns (bad) (bad) ljmp nop push fiadd xor fmull mov push int3 clc push push incl insb lret fsubl and mov mov les sub ja xchg (bad) call xchg out mov mov and mov cld (bad) call mov inc xor xchg enter mov xor push (bad) les (bad) (bad) jg jbe cmpsl test inc mov repz aad add and (bad) fldl enter aam jge scas les cmp mov jb iret push decl decl hlt push or and xchg (bad) (bad) incl sub scas in mov push (bad) xor clc fbstp hlt pop hlt (bad) pushl std ret insb add ds jbe xor faddl sbb (bad) (bad) decl xchg dec adcl mov cwtl insl (bad) mov sti lcall inc decl jp ffree lock inc mov inc adc (bad) (bad) (bad) (bad) (bad) cmp mov test adc es sub add and je ljmp jmp imul xor pop mov lcall testl sarl orb shrl xor aam pop mov (bad) jbe addb and ljmp rcr cmpl fdivr ljmp movsb inc shll (bad) mov movb fwait add mov jb mov inc adc int bound icebp or rcrl add jl inc in mov cmp ud2 sbb cld sarb (bad) (bad) (bad) (bad) mov xchg mov or fistp in bound cwtl fwait data16 dec fsubs adc insb adc xor pop cmpsb cmp imul fcoml (bad) arpl mov sti les in push or mov mov fmul out adc cli (bad) call inc (bad) imul or lret mov (bad) call adc jecxz inc mov mov cmc mov inc or jno ret (bad) popa jecxz jmp ljmp push inc mov outsl (bad) jnp xlat sub es adc imul cmp nop xlat adc add js inc test sti (bad) (bad) lcall aas sbb sub cmp mov in (bad) (bad) (bad) (bad) sti movsl xchg jl cmc rclb pop test mov ja sub mov hlt push outsl cmp (bad) lcall lahf aam cwtl xchg add jmp aad mov stos sar push dec inc push adc insb mov ds (bad) mov movsl (bad) ss cld sub dec popf sbb loop lds incl arpl repnz repnz or imul or xor pop (bad) (bad) (bad) aas adc dec inc mov imul push cmc xor (bad) incl mov push (bad) in cmp and hlt mov xchg (bad) xor adc ljmp lea setnp sbb jb lret mov sbb cld (bad) ljmp in dec sub insl pop cmpsl pop xchg or stos (bad) mov dec (bad) (bad) incl xor pop rcr and cltd jno (bad) jp (bad) int outsl scas (bad) lcall xchg lret add aaa push xor ja lods and xchg mov (bad) (bad) pushl cmp fsubr sbb mov and nop test mov (bad) (bad) decl cld jns out fdivrp test aad iret push test sbb outsb and push jge xlat fiadd jmp decl in divl xlat inc and (bad) (bad) (bad) (bad) (bad) fisubl pop cmc je aaa dec xor and mov sbb test stos gs and loope jae aas push xlat mov xchg cld lcall pusha pusha mov call cmp lea insl lcall xchg lds es mov (bad) jg or pusha jp mov pop or lods mov (bad) (bad) (bad) jmp jecxz mov popa lret sbb lret lret and adc rorl pop cltd faddl mov xor frstor (bad) (bad) ljmp jl adc cmp pop push jns or outsl push push sar icebp stc outsl je lock fsubl pop sar jge adc mov into xchg js inc (bad) (bad) (bad) jnp adc jp std mov mov adc aam jmp (bad) fild int3 adc incb sbb cmp popf std adc dec pop rcrb pushf cmc fimul lds adc adc and inc daa push cmp (bad) stc popf cmpsb lock aam sbb or and dec loop lcall test sub dec repz add adc and enter sub mov sar popa std incl adc scas int pop fimul mov adc inc clts xchg ss and jb popf cmpsb lock (bad) int3 or mov aaa mov dec std decl pop fs pusha (bad) imul sbb (bad) (bad) (bad) jg iret push dec ljmp cmp mov fistpl jl test in call std (bad) repnz pop mov sar test xor test and pop lock jp test sarl stos xor fimull push push inc gs int cmp ljmp push cmp xchg pusha in mov scas in clc mov (bad) ficoml xor and loope sbb insb jl out pop cld incl adc rorl jecxz xchg or mov xor cmp and adc lock or lahf das fdecstp stos scas inc icebp push (bad) incl (bad) mov sub sahf (bad) dec ds mov rorl pop loopne adc jbe jl push scas push add sub call outsb fbld mov adcb sbb (bad) decl in leave outsb jmp cmp dec outsl pop push repnz (bad) (bad) pushl inc mov inc movsb push lret (bad) lret lods inc sbb add adc and ja cwtl gs jl dec test shr or test stos (bad) lcall mov pop loop jg pop aad dec test push add (bad) pop or mov fbld pop cli xchg fwait insb movsb inc xchg xor xchg test jg into sub jmp jbe inc nop and aad movsl loop adc lock mov sub test aad mov test sub (bad) (bad) (bad) jmp lock lock sub imul daa cmp adc mov rorl jg nop outsl cwtl jle xchg imull (bad) xor (bad) call mov dec or orb or call les pop dec (bad) call sbbl insl stc mov xchg xchg xchg xchg movsl add mov jb test (bad) (bad) jmp xchg adc xor ljmp cmp lea test test jg and pop jecxz push faddl (bad) cld enter outsb inc pop pop (bad) fisubrl xor mov mov leave sub mov das dec jmp out rep inc sub adc (bad) jmp xlat (bad) cli mov push popf lds out imul (bad) (bad) (bad) aas push pop cltd jmp decl xchg jne (bad) push js dec in nop xor sub lcall (bad) (bad) incl fildll push cs sub push xorb notb ljmp adc xchg or pop xor je fistl mov sbb mov pushl push pop push or xchg mov int lds inc mov mov (bad) (bad) ljmp insl test out xor sbb jecxz cld cmp les xor js adc xor ljmp sbb cmc idivl jg xchg sbb mov popa mov inc (bad) lcall loope push call push pop decb out xor (bad) mov inc sbb (bad) loop lcall jle (bad) iret lahf das int3 ds hlt popf adc adc pop test push stc mov fsubrl sarb pop imul rcl call mov ret aaa imul (bad) (bad) call (bad) loopne in jnp cmpsb cwtl lret shrb cmp or ljmp mov xor sub into lahf (bad) jmp jmp xor pop scas hlt jg sub mov xor fisubrl mov push adc dec dec pushf test adc fcmove movsb dec mov outsb idiv pop orb push mov xor shll (bad) mov lret mov daa test sbb mov (bad) incl popf inc mov test xor jns in jle dec loope inc fiadd jo push lock dec nop shr stos or mov xchg (bad) stc sarb aam pop test aas lcall out mov dec in stos pop cltd dec pop jge test (bad) jg arpl xchg pop addr16 mov sbb fucomip (bad) aas adc push jbe stos xor lahf add repz nop mov mov pop leave xor or and aaa xchg mov pop stos lods (bad) adc pusha xchg aad insl mov xchg std leave jge lods (bad) sub cmpsb mov xlat push cmp inc ss je in jno sbbb xchg (bad) (bad) ljmp inc dec pop dec pop insl mov cmp pop inc out cltd dec adc adcl or incl nop or jg dec sahf xor mov inc lds decl mov jp and inc ret pop sub cmc dec mov ret push (bad) (bad) push sub in pop mov fwait pop gs out movsl hlt sbb gs (bad) (bad) lcall or sub int (bad) xchg (bad) sbb hlt sub xor xchg push pusha and addps cmp and clc ffreep dec sub test jg lcall scas sti dec mov gs popa fmulp mov mov mov (bad) (bad) call test cmpl mov dec sbb setle pop icebp sahf cwtl (bad) incl lahf mov xor popa scas xchg sub ja pop lock mov movsl mov cmp fldenv cld jg inc push inc or lock inc and adc dec repz inc (bad) pop (bad) (bad) lcall cmpsl mov cli fisub mov imul aas sbb daa adc cmpsl push add in incl sti shlb rolb (bad) outsl nop out push hlt js mov xor lods cmpsb (bad) (bad) (bad) cld mov and icebp sbb jge shll enter jg and shrd pushf xchg mov jmp setnp adc jg andl (bad) shlb mov imul hlt pop inc sarl inc mov aam jle inc out mov mov sbb mov and push (bad) (bad) (bad) decl mov std ds gs fs xchg xor mov mov fidivl (bad) jmp inc xor sub mov or add cmp pop sbb (bad) jmp or sub addl rolb dec mov bound fldcw mov sahf (bad) (bad) (bad) lcall shr in mov pop pop jns dec mov cwtl sbb lock jg adc addr16 jmp rcl mov int movsl fcmove aaa loope enter and push pop jb sub cmp aaa (bad) mov movsl push (bad) push cs jmp (bad) (bad) (bad) fldt pop xchg cmc xor push fsubr out nop mov add xchg xor lds fbld xor xor mov or dec pop addr16 outsl sbb (bad) (bad) jmp fidivrl mov sti jae sub mulb lods test hlt pop cld mov loope loope loop call in xor call jg xchg jle and fsubl inc das inc fnstsw cld sbb mov fmul jnp mov ficompl mov (bad) mov adcb sbb fs adc inc jbe test (bad) (bad) dec sbb jae mov push int clc inc cmp xlat orl leave rclb das mov pop jae xchg push pop xchg das jmp fsub nop lahf dec clc jmp out js mov adc lods inc test pop adc mov in outsb xchg push or jno out lret lock fs call std jno mov mov outsl cs mov jbe adc inc mov xor nop mov mov pop mov fadds sarl cltd in loope or clc (bad) cli xor (bad) add ret scas dec xor xor pop sti or sub sar (bad) (bad) pushl loopne les lods repnz push cmp adc adc pop in dec call pop adcb cmp ds dec sub mov add (bad) (bad) inc repnz repnz lea adc mov sub (bad) test jno (bad) jg dec cmpsl js pop and xchg xor mov adc jge (bad) jno (bad) (bad) incl and imul cmpsl sub (bad) ja rolb les jmp push lock call imul mov int3 and xchg push and in xor call icebp xlat jo sbb (bad) sbb je sarl movb test and pop and (bad) (bad) (bad) jmp jo or into std dec mov pop add in dec mov (bad) call es ret stos popa pop mov jp gs jmp loope and inc jns (bad) (bad) incl pop inc lahf jnp xor sbb sarb int3 (bad) mov (bad) incl pop xchg popa xchg lahf inc enter jmp hlt imul push push sbb (bad) mov int3 pop push test add arpl loopne dec movsb mull arpl jle rclb daa and call and loopne out cmpsb nop jp mov call cmpsb dec sub cmp nop dec int leave hlt (bad) imull xor (bad) dec (bad) (bad) (bad) mov pusha or mov xchg jg and lret xor subl insl inc mov xorb call mov jb sub jmp xor xor insl (bad) rorl xchg xchg cli push decl addr16 or pushl shlb inc ret pop aaa int3 push loop push (bad) icebp push or jge aaa dec pop std lret dec inc mov aaa dec xchg cld jmp (bad) incl sub mov js xchg dec (bad) shrl pop inc jp pop insl loopne pop (bad) pushl stos cmp stos popa add mov mov ja sbb leave outsl sbb (bad) jg xchg inc cwtl bound mull loop mov mov mov insl in (bad) (bad) jmp adc dec push cwtl cmpsb xor xchg mov jae cli insl and inc mov popf int3 adc insl jecxz adc push in (bad) (bad) (bad) call mov ss push fs mov push test das add decl test add lds divb xor stos pop push clc out jp mov push (bad) in cmp lcall insl xlat xor push or fistp popf xchg adc push pusha adc xchg cmp xchg je mov (bad) (bad) pushl mov mov mov cmc inc mov fisub das pop xchg aad hlt jne or jmp ljmp das cmp push xor push loopne mov push orl gs pop mov daa faddp call std mov fisubrl sbb push and aas and loope pop adc clc lcall jg mov ret inc sbb cmp fisttp push push int dec rcll sbb or test add (bad) jmp fstl rorb jg fstl lods mov call sub dec adc dec outsb mov (bad) (bad) (bad) out cli imulb mov dec mov inc into sbb ret dec imul mov out pop push bound xor cs push lods inc jge clc dec test jno mov push gs or (bad) (bad) (bad) (bad) mov adc or ds pop movsb or xchg pop jae cmpsb jle ljmp ror inc pop test and sahf or loop sbb leave cmc mov push fcomip or ss mov sbb dec mov dec out (bad) out and sbb int jno add (bad) (bad) mov aaa pop push shrb iret mov sbb dec sub sub add call jle stc (bad) lods mov push mov (bad) (bad) lcall push cwtl cmp jbe mov fucomi dec add rcrl test ljmp mov xor mov in pop and sbb loop into cmp jmp or daa sub int mov and (bad) cmp insb mov aas and fnstsw es (bad) push sub lcall incb sub add lock push ljmp push mov mov pop (bad) hlt jg (bad) in (bad) (bad) jl mov cld push fnsave or cmp add add (bad) (bad) mov int3 xchg sarl fnstsw inc fwait push cmp mov (bad) fisttp insl stos test fadd push xchg ret (bad) (bad) pushl or mov add xor sbb mov pop (bad) (bad) (bad) lcall lret cmpsb int push (bad) mov dec bound add push fdivl roll (bad) jg mov repnz clc test in in out add xchg jae or push pop adc pop jne cltd (bad) idiv jg aas ret jl inc sbb loopne incl mov and cmp call sbb push cld (bad) cmp lods call mov xchg or fwait lods sarb arpl sbb pop ret sbb xchg (bad) (bad) (bad) jmp iret jge movsb mov push fnstenv scas sbb fsubs pusha stc pop aaa push fdivrs (bad) jmp sbb into lret inc push inc test mov mov ret jecxz ljmp into cmpsl shl aam sub lcall pop add repnz (bad) test xchg sub jge mov pop inc clc (bad) incb cld decl jo aaa subl inc negb fisttpll pop shrb (bad) mov (bad) fiaddl xchg fcomi lods sub cld add pop hlt xchg pushf mov or inc inc repnz loopne mov and mov jecxz xor cmpsl imul jmp cmp es sbbl repz js sbb adc push cld (bad) ljmp inc mov shrl xor and cmpsb adc int3 icebp lock xchg decl xor lahf dec out imul cmpsl mov pop (bad) (bad) (bad) decl mov negb cmp sub test in loop and pushw pop xchg enter inc cli test stos int (bad) (bad) jg lods push lcall and or (bad) repz add (bad) (bad) (bad) call dec jb out (bad) ret push or adc jle mov mov mov (bad) (bad) (bad) lcall gs add xchg sub movsl adc jl xchg xchg adc mov sar pop push mov add adc push mov lcall (bad) lcall adc int je ljmp cmp inc in push ss sbb (bad) (bad) incl (bad) repz xor es fldl sub push xchg pop repnz sar mov pop inc popa or je push (bad) hlt xor es loopne (bad) call rorb repnz idiv mov mov xor xchg mov (bad) (bad) jmp bound lods enter cltd xor lret push lea cmp stos pop sahf xor ss ljmp pop mov jbe pop sub sahf fistpll pop mov xchg iret pop (bad) mov cmp add push pushw rcrl bound mov daa xchg sar (bad) lcall jnp xor cmp out hlt or aam stc fldcw sub jbe call and cmpsl inc cmp mov int mov (bad) lcall or imull xor fcoms imul pusha push jbe jecxz ret push jg (bad) call and in outsl xchg daa icebp lods jmp add rorl xchg dec and push nop (bad) (bad) mov fidivl xor ja jp mov push ret mov mov stos cmc imul adc mov push mov sbb incl fsubl (bad) sub cltd lret push cmp (bad) jns into ret (bad) cmp add (bad) dec sbb decl mov int movb fldenv mov repz out add jmp push push arpl pop (bad) into sar lret (bad) (bad) (bad) jg arpl pushf pusha add aam jge push shl jns rorb std (bad) incl mov push mov leave lea add lcall jle mov cld in fmul (bad) mov sub fimull imull sbb jge or addr16 (bad) outsl pop pusha cmp or ljmp cld cmp aaa mov push or mov sub sbb ret (bad) aaa mov dec mov fs dec mov (bad) jg fstl cs jo pop mov jle mov cs cmp sub pushl rcrb sahf adc pop incw pushl lahf mov addr16 xchg add popaw in pop mov jno setl popf js cld cmc xchg movsb xchg (bad) lret xor jg add pop icebp out pop (bad) pop dec imul incl addl cmpsl sub and xchg sbb inc fimul push inc (bad) (bad) jmp mov and fcomps sbb jp aad mov sbb jmp xchg cmp lcall mov cli adc mov popa dec faddl mov jle mov inc (bad) mov jmp jg mov or cltd lret mov jmp fdiv mov lcall stc adc adcl fwait sbb daa fistp sbb sub push jecxz cltd dec imul add (bad) lcall js xchg xchg inc jge repz pop ja xor mov cmp imul inc sbb inc jae and lret decl clc lret push rcll loop sbb pop icebp incl (bad) (bad) jne sub sub push inc add inc es sbb xor aam loopne jecxz (bad) (bad) call pusha dec aaa pop pop jge sub inc push int fisttpl inc mov rcr fistl lret lock push push cli call push aam pop dec imul (bad) jle movl (bad) sub mov cli mul ljmp (bad) std in movsl arpl push fsub int3 add clc mov dec shr push movsb (bad) (bad) (bad) jmp icebp data16 icebp repnz call xor push and stos mov sub arpl test dec mov je mov das movsl insb add mov (bad) jg loopne jg jg push test aaa data16 dec sbb shl (bad) (bad) (bad) ljmp and jle test lret adc not inc cltd mov in xchg mov sub pop cmp cmp scas (bad) (bad) (bad) ds insb inc rcr fisub inc sub and notl pop cmp sub push das push xor (bad) lods outsb pop mov add movsb (bad) jmp mov popf stos push xchg dec lock mov cwtl sbb and outsl xchg jmp es (bad) (bad) mov in dec out inc xchg std sbb bound push jne leave (bad) (bad) incl stc (bad) rolb iret mov mov cld (bad) (bad) decl clc fwait cwtl pop dec mov jg xchg and jecxz xor jl cmp (bad) in mov jg sub andl xor (bad) (bad) jg ljmp xchg das cmp subb gs std rcrb scas mov mov mov xchg xchg sub test and push xchg clc les push adc (bad) in mov (bad) (bad) (bad) jmp fnop js pushf push and outsb mov inc enter sbb or pop sub push cmpsb adc adc mov inc adc xchg insb loope pushl xchg (bad) cmp nop mulb xchg xchg pop mov fcomip lcall mov sti ret xchg popa or push and inc (bad) sub (bad) in (bad) in xchg xchg mov sub (bad) lea nop lret arpl pop lcallw push jo push pop push sbb rcll or push shlb sub hlt pop pop das jns les pop dec or dec in aas lods (bad) fcos (bad) cmp and xchg enter jae xchg (bad) fisttpl outsl inc test (bad) lcall into sbb mov (bad) lock in and jg mov pushf xor call je pop inc mov dec (bad) aad scas xor add mov or sahf stc fsubrs mov nop mov (bad) (bad) lcall out iret add mov xor cwtl fwait inc (bad) cli jl (bad) (bad) jmp xlat loop sub dec data16 pop popf in test (bad) (bad) incl enter adc jns out dec lds push std pop and (bad) ljmp out adc cmp out pop xchg pop arpl sbb jle xchg (bad) xor pop sbb (bad) jmp jne pop rcr clc (bad) (bad) (bad) clc pushf mov lahf not dec insl jmp ljmp fnsetpm(287 repnz inc push jmp dec out xor or sub les xchg mov pop xlat or repnz push sbb sbb int jno add sbb jl (bad) (bad) lcall jge mov pop xchg ss push lods mov clc jg xchg mov (bad) xor jne movsb dec adc (bad) mov jmp clc fildl jmp out fdivs (bad) pusha add test xor push sub (bad) (bad) (bad) call sub dec test cmp pop mov jp fildl pushl jnp,pn sti cmp inc jno mov subl jbe sub stos dec and pop hlt mov pop or mov sub add ljmp adc jmp pop popa insb ljmp ljmp xor (bad) (bad) incl and ss and aas ret dec dec pop xchg sbb sti insl sub (bad) (bad) (bad) mov mov (bad) lds and push jmp fstpt jo push (bad) push cmp test (bad) (bad) (bad) ljmp lods es and or fisubr popa outsl adc add into and test (bad) (bad) mov shlb mov cmp shrl adc inc divb aad mov (bad) fild or stos insb adc (bad) jp inc (bad) decl (bad) call dec add dec out cmp mov sarl (bad) out push sar sub mov jo movsb add xor lea scas jg (bad) (bad) dec mov sub mov mov repnz and mov jg decl (bad) pusha mov rorb imul mov lods std mov mov push sahf cs mov and cmp pop mov adc pop sub (bad) (bad) ljmp ret sahf outsb dec sub ja mov lods ds inc jmp scas sbb (bad) (bad) (bad) lods cmp in jle mov inc sahf icebp adc mov stos sub mov push sar pop nop cld in addr16 add xor aas jbe mov jg (bad) (bad) call and push (bad) push or jge xor push (bad) stc pop test ljmp loopne sbb inc mov and and mov inc xor iret and cmp mov push orb les scas push sub ja fldl2t sub (bad) (bad) (bad) ljmp or popa xchg xchg sub inc lods clc cmp aas cmp sub cltd lahf fcoms xchg and mov push lret aas sbb push fsubrs adc (bad) (bad) (bad) (bad) sti repnz mov add pop fcompl (bad) fbld hlt mov adc xchg cld xchg and stos (bad) decl sbb cmp in lahf xchg push xchg push imul sti arpl dec push pop out outsb lock (bad) inc jns xlat pminub ficom aad popa shr test inc sbb and and (bad) decl insb jnp push and (bad) push xor cltd vhaddps jecxz xchg (bad) jmp in add in sub sarb lcall (bad) nop (bad) and mov jecxz push int sub pop (bad) mov les pop loop xchg (bad) dec jl (bad) (bad) call or jae iret clc aaa dec jmp mov mov push mov popf loope cld push mov sbb (bad) (bad) jg xchg mov fadd cmp jl lahf js sbb push test (bad) (bad) (bad) decl jb pop xchg push jb decb xchg and jae rorb stc push (bad) (bad) (bad) mov pop jb loope and mov mov sbb aas or push adc cmp popa sahf cmc (bad) (bad) decl fwait jecxz pushf push cmp mov in insb daa cmp leave dec cmpsl dec (bad) push push imul rorl mov lds cli das clc loop pop mov je dec sbb jmp sbb xchg lea fidivl cld pop cmp arpl mov pop sbb movsl push xlat inc loopne pop repz movsl sar inc lock mov dec xchg or (bad) (bad) (bad) imulb stc cmp mov add add repz fimul (bad) (bad) (bad) jmp adc in js and or test xor xchg jo rcll mov dec (bad) (bad) decl mov fimull sub icebp aad jp pushf xor (bad) jg in fld push mov sub push movsl (bad) decl mov (bad) fnstsw adc sbb pop dec fsubrs inc mov call jmp adc mov or inc mov xchg outsl xchg inc es and adc push lock fbld dec movb lea sarl (bad) jmp clc xchg pop pop faddl (bad) dec clc sti jno popf or (bad) (bad) (bad) mov or movsl xlat push pop cmp xchg mov or lock hlt mov (bad) (bad) (bad) fimul jne call sub sbb mov jge cmp dec fdivrp outsl lret pop outsl daa lock lcall sbb loope adc dec jl xor jg sub push call jg xchg mov mov mov (bad) jmp ja lcall dec sahf cld lcall dec mov xchg push (bad) cmpsb loop,pt jns ret (bad) pop sar and sbb dec xchg (bad) mov or cmp adc lods movsb pop (bad) mov fldenv mov xor mov mov aas push pop lcall pop add cs pusha aad (bad) fdivrp aas aam pop xor rcrl sbb mov lahf bound inc loopne ret test push xchg lock inc sbb dec lods and (bad) jmp mov ljmp jle xlat jge fildll out (bad) (bad) (bad) (bad) sti xchg rorl (bad) iret adc mov push dec sbb sbb sbb inc sub (bad) (bad) dec mov pushf dec stos xor roll das mov insl (bad) jg loopne cmp out or or pop xor ja mov out dec shrl (bad) (bad) ljmp cmp sbb xchg enter adc pop push push pop add push sub mov scas (bad) or rolb and sub (bad) jns inc jmp pop dec mov aas aam gs decl lds mov ficompl (bad) (bad) loope dec nop cltd sbbl into sub cli adcl lcall loopne js aas ret cwtl jg scas sbb mov insl lcall mov jge xchg lret dec pop mov (bad) decl adc cmc mov mov pop adc into je aam outsl negb pop lock cmp and data16 mov (bad) call cmp cmpl xchg lret shr sub mov aam (bad) ljmp or data16 (bad) ljmp ret jmp inc push jl (bad) mov test jecxz mov push (bad) jmp (bad) aam xchg jno es les decl xchg inc sbb mov fmull pusha or adc mov mov je idivb in xor lahf xchg hlt scas mov and or test xchg aam (bad) mov pop scas mov or cmp or mov push jae shll cmp inc add (bad) hlt xchg (bad) xchg call pop (bad) test stos jns cld cmc add sub inc pop (bad) (bad) jg pop sahf dec popf jp jecxz scas or push mull sahf mov sub out and mov (bad) lcall or pop inc fistpl in xchg test xchg dec popa xchg cmp (bad) aas (bad) scas cmp sub add (bad) xor fisubl inc dec cmpsl in popa mov ret xchg or insl cli push popa dec and stos (bad) (bad) pushl mov fidivl xorl loop mov sub inc aad outsb (bad) jne add decl jg lods data16 inc and aaa in (bad) (bad) (bad) lcall loope cmp lock ret sub js pandn ljmp sbb xor scas sar jg stos jo lds xor rcll ja mov mov rcrl call packsswb inc mov mov and daa mov clc ret leave jo addr16 dec stos adc xchg inc pop add push (bad) nop fbstp fnstsw inc or fldenv (bad) decl scas (bad) fldl mov jl lods ss sbb loope pop xchg (bad) (bad) (bad) sti lock and (bad) lock adc sbb and popa xchg xchg push and mov mov inc mov rorl decb push and test imul push cmc inc pop int3 adc dec dec sub dec sbb test popa dec or (bad) jmp sbb ret icebp and pop into sub inc mov les fisubr mov sets mov test decl lock cmp xlat pop pushl cmp or adc loop pop aam inc inc jmp xlat sbb pop arpl (bad) (bad) lcall push scas inc and cmpb rcr ja cmpsl fcompl and cmpsb (bad) (bad) (bad) call shr mov test cmp cmpsl xchg cmp (bad) and ret (bad) (bad) (bad) decl cmp sahf aaa gs jnp sub data16 fdivl mov (bad) call out xor and mov arpl stc add dec popf outsl ja adc cwtl cli (bad) (bad) cld ss shlb insl jnp pop leave cmp push mov add mov sub sbb mov icebp gs mov rcpps mov sbb inc adc mov pop jmp lods aas (bad) (bad) (bad) ljmp sbb mov dec pop fwait adc jnp cmc mov rolb ror and std (bad) call movsb pop nop lret sbb ja (bad) push jo sbb loopne jmp and loop push push mov mov xor dec mov fldl std (bad) jmp (bad) pop lock addr16 push and push add jecxz xchg xor (bad) divl jmp out mov (bad) (bad) cmp adc fbstp mov inc ret (bad) (bad) mov sti and repnz push xchg int3 cmp jg push sahf sub fmull mov add int3 in xor fadds add lret mov les push ja xor pushl dec or popf xchg fdivr (bad) (bad) jmp mov out int dec add lahf jge in rcll dec stc adc aaa mov push push cmp test mov add xor sbb adc sbb sahf (bad) aas mov cld inc outsl adc xor jecxz ret or jns sub (bad) call adc lcall int mov out das sub ljmp push fcomps push fwait push andl icebp cli (bad) arpl sbb adc inc pop mov adc mov pop or or fwait (bad) fistpll shrl ret lds mov sub ds adc (bad) mov sbb add (bad) out sbb rorl inc loopne jb and enter jnp mov (bad) (bad) jmp cmp (bad) mov or sub mov lods daa out cli (bad) (bad) (bad) jge inc addr16 aas or push movsb adc mov sbb xchg dec (bad) ret push and je (bad) jne lcall (bad) push sarl pop mov push cwtl lcall std incl pop dec or (bad) pushl mov or jno in leave sti adcl and adc and push adc or fnsave push pop sub ret andb test outsl clc (bad) ljmp dec push mov (bad) jle out int insl sub das cld inc inc sub (bad) aas mov lcall sub test in mov cmp inc iret outsl push ret cltd (bad) (bad) (bad) jmp movsb call in lods mov (bad) (bad) dec xchg push roll aad ss sbb mov mov icebp push mov xor pop fwait xor test (bad) (bad) (bad) sti int add xchg stos les dec fcompl push or fscale push add cltd or add cmp mov (bad) in clc in hlt jno mov fcomip (bad) dec sub clc clc leave cltd push loope,pn in adc shrb cwtl scas pop dec sbb jecxz (bad) xchg in divl cmpsb rcrl pop (bad) (bad) (bad) ljmp lret std in or pop sbb clc repz or mov (bad) jle hlt aam lea iret enter pushf or les (bad) (bad) (bad) jmp push (bad) rcr sub rcr data16 in test sbb adc (bad) idiv pop and push leave xlat jnp mov xor mov (bad) xor out mov jnp ljmp and std mov mov and rcr test data16 inc cmp cli pop (bad) pop pop popf out (bad) jno incl scas (bad) sbb add lahf call outsl scas test aad push fisub add xor xchg je push xchg lock mov dec sbb xor sbb sbb (bad) (bad) mov push mov mov ret (bad) loop out lcall loop fistl out cli mov mov mov (bad) (bad) ljmp aam mov loop out pop loopne call addl icebp jle (bad) movsb jns inc sbb pop mov mov dec jg lods add or fldcw (bad) (bad) (bad) cmp outsl out scas ret ret mov pop lock dec mov jp adc mov aas imul lret test int pop repnz loopne fs addr16 or pcmpgtd xchg xchg dec stos inc int (bad) (bad) (bad) (bad) fsubrp fisttp or insl cli add mov cltd mov push mov add xor jg cli frstor in mov out (bad) call cmpsb rclb inc mov loope dec (bad) dec out sbb sub (bad) inc subl push jnp push dec push fisub test daa dec cld in incl adc scas jle outsb inc inc xchg inc mov lcall inc or push fdecstp out (bad) (bad) call dec mov cwtl insl in or loop add (bad) jge cmpsl xchg out and mov incl inc icebp scas mov andl or (bad) decl push mov inc jns adc inc xor fld (bad) (bad) (bad) decl xor mov mov repnz outsb push (bad) mov jmp mov lret call and push inc or ljmp or xchg adc out or sub incl (bad) ljmp data16 inc mov (bad) (bad) jg jle adcl dec (bad) push cmp adc sub scas mov int3 fmuls push push dec sbb jg push cld rcrb (bad) fsubs inc loope mov iret (bad) mov or cmc add int mov xor (bad) (bad) (bad) decl ljmp xchg push mov bound add pop jo rolb xchg cmp decl (bad) (bad) mov std or jp nop ret mov leave data16 sbb cs cmp mov popf stc mov mov mov shlb push fdivl loopne bnd sub adc (bad) cmp pop popf ss addr16 mov sahf (bad) jae (bad) (bad) lcall mov popa mov adc mov dec lods cmpsl (bad) push fld aaa sahf (bad) decl push mov push cltd dec ret mov (bad) (bad) (bad) mov popf jbe dec push lock add adc add jecxz dec push dec push call inc push push insb pop push lods movsb (bad) dec xchg js xchg les xchg push stos or std fisttpll call push inc jg cwtl push dec lret mov jae shlb (bad) gs and push (bad) cmp cmc decl (bad) (bad) outsb mov xchg pusha cmc decb subl (bad) mov inc fcomip xor jp (bad) (bad) incl adc mov rolb clc fmuls cs add out and and loope imul test pop inc pop test shrl and (bad) decl das (bad) jg cmp push mov dec fldcw adc sub cmpsb xlat add out cmpsl jns or loop stos pop (bad) pop pusha push jno sahf ljmp (bad) sub fstpl repz cmpsl mov movsl dec hlt iret in inc std es incl outsb add js ret lret js jne out dec test xchg add lret cli (bad) out in insl pop xchg sahf mov iret leave mov (bad) cmpsl subb push sub fs clc test (bad) (bad) fdivrl out adc outsb jg push sti jg arpl sub or rolb xor fs (bad) (bad) lcall push iret dec in notb scas jae jp mov dec xlat stos imul mov push (bad) (bad) (bad) lcall jbe jno rcr xor lret add int3 (bad) rorb and sbb hlt cmp mov inc dec clc mov jmp push push pop hlt mov mov mov lcall (bad) lcall das pop xor xchg mull and sahf xchg (bad) ljmp loop mov pop mov xor loopne sbb cmp out data16 insb xlat pop stc xchg xchg mov scas (bad) jb sbb cwtl rol jne jmp inc pop pop int3 xor cld (bad) jmp fwait aas lret dec cmp or (bad) bound jle (bad) (bad) jg imul stc sub fwait jo fdivr (bad) (bad) (bad) jmp fucomip fwait popf scas int fdivrs stos out sti es xchg fistpl scas stc mov (bad) in mov push repnz loope decl (bad) in js test icebp mov lods cmp ja (bad) (bad) push dec repz pop sbb inc mov mov add xchg cmpsl xor sbb (bad) (bad) (bad) call and ret loopne push lods pop shll cltd mov stos data16 addr16 jmp loop (bad) (bad) push jle test frstor inc xor aad cmpsb sbb syscall mov out adc xor daa push sbb (bad) fild scas nop lds lds outsb outsl pop test jb mov mov insl or aam insb pop push push repnz repnz inc and sbb xchg (bad) hlt cmp (bad) (bad) jmp xchg js sarl ljmp bound xor sahf sbb pop cwtl jbe cwtl or loop out out adc lcall sbb aam clc dec push dec push jb inc (bad) (bad) mov into jmp jno xor lods sbb cs or hlt out (bad) (bad) (bad) call loop jb movsl and pop adc cmp or add (bad) (bad) mov xor push mov xchg mov insl fst ss jmp pop lret mov ret (bad) xor mov nop inc (bad) (bad) (bad) mov and add mov ret int3 out inc jbe sahf test mov movsb (bad) (bad) (bad) (bad) incl out test add xchg cmpsb inc push rcrb sub xchg lahf xor sbb test (bad) (bad) pushl add or mov pop jmp mov idiv pop je mov mov rcrl jecxz into mov es push sub pop out lock jl ljmp fwait pop pop pop cwtl dec xor popa dec and (bad) push jle mov js pusha or rolb push rcrb fisttp push negl pushl sbb cs (bad) xor mov inc xor xor lret mov xor incl push dec (bad) ja mov stos (bad) (bad) (bad) cmp or sbb iret loope bound in mov (bad) dec insl loopne repz out das rcll loopne pop ret insb fidivrl jbe cld shl (bad) (bad) call lahf mov mov mov sbb test push sub cmp add scas lods xchg ljmp sbb mov (bad) ljmp repnz daa jo jbe lods sarb nop and dec sbb xchg imul cmpb shll icebp jg je mov or pusha out (bad) (bad) decl ror lahf inc or mov dec and cmp inc xor mov (bad) (bad) (bad) lcall mov fs pop push out cmc dec call pop aam scas xchg hlt dec inc adc mov (bad) (bad) ljmp mov repnz shll xor sbb adc mov (bad) (bad) decl (bad) loop cmpsl lret movsb fucomip and nop outsl lds cli gs ja (bad) (bad) lcall pop ljmp dec pop mov or pop inc in add ret mov (bad) (bad) incl push enter insb ljmp lock out jp jmp stc push inc sbbb lods ljmp (bad) lcall arpl mov adc cmp decl add mov insb inc inc fidivrl lret add call jecxz dec cmpsl aad mov ljmp sbbl je push fcomip mov cli push sub int3 adc pop jno mov add ljmp cmovo stos xchg mov or mov test out cli (bad) (bad) call fwait dec jmp icebp jne lods mov mov pop je es inc (bad) ljmp ss dec pop sbb js out adc cmpsl (bad) (bad) (bad) inc ret inc rcrb insb int3 sbb mov ror mov cltd lret je dec mov adc cmp scas test mov sub mov add arpl cld std add push sbb negl (bad) incl out das mov mov mov push push rorl out lods xchg mov cld andl (bad) (bad) (bad) ljmp outsl pop jg push pop mov pop add scas fdivrs inc fcomi ret push pop lcall (bad) (bad) jmp xrelease ljmp xchg ret mov sub rcl xchg xchg fsub clc movsl js (bad) cmp stos xor mov xchg call add std push movsb add shl cmp (bad) mov (bad) (bad) incl jmp or hlt push sub jmp inc dec mov xor jnp (bad) and (bad) (bad) (bad) jmp imul insb out loop cli mov or xchg xlat mov (bad) fbld add jl xchg fcomi push pop inc or or jmp mov push dec xchg scas jle cmp pop loopne cli repz movsl mov cmp call sub repnz (bad) out in adc mov stos pop daa cwtl and ficomp std cmp jmp mov stos sahf aam dec std mov jp insl sbb iret cmpsb sub (bad) jg push fsub xchg stos rcrl push jo lods dec pop daa jmp imul pop (bad) cmp call loop mov sahf loope or loopne (bad) mov xchg add jns xor xchg orb mov xchg stos insb sarb pop movsl push pop push sub and add xor and stos cmp stos and push in adc sti cltd inc mov or sub ljmp inc jmp sbb fistp mov inc (bad) mov or (bad) mov mov ficompl addl aad cld (bad) call jle jle daa mov in add mov ljmp in fmul movsl ja mov lcall gs popa rol lock insb xchg loopne dec or push inc aam xchg aam xchg call das jo fnop cli (bad) ljmp rcr outsb into (bad) jl mov mov movsb (bad) (bad) jmp inc aam mov mov fidiv add inc and aad add arpl (bad) mov clc pop insl popa (bad) cmp (bad) (bad) call cmp cltd and push inc sub xchg mov xchg xor test lret loope std (bad) or pop and jmp pop dec mov xchg fnstenv and mov xchg jle (bad) ds (bad) (bad) (bad) jmp imul sbb xchg mov aas xchg (bad) push sbb xchg pop es das and out push dec jo int insl subb dec enter outsl (bad) (bad) pushl test add cld sub sub lds push imul (bad) incb fbstp pop arpl loop and mov in call xchg je and cwtl sub rclb ret (bad) (bad) decl lret mov mov mov pop mov mov pushl jg jle fwait mov popf mov repnz mov cmpsb and (bad) incl or xchg rorb or xor int3 mov enter out inc pop (bad) (bad) (bad) (bad) lcall fs cmp ds pop adc hlt inc push mov lods xchg jbe outsl dec arpl lcall stc push rcrl jnp leave and test xchg (bad) jl in or jbe push into leave hlt add (bad) call push push test loop xor lret jl in addl in ret pushl pop (bad) dec dec jne stc scas aad cld add nop stc popl dec in ret addr16 roll jmp jo pop lahf mov outsb test (bad) push pop sub sub test jo (bad) (bad) dec cmp xor jno popf sbb and negb jae (bad) (bad) jmp inc data16 in test movsb sub push push (bad) push (bad) daa ljmp out mov push push lds loope pop notl push and add jbe int aam (bad) (bad) jmp xor dec add ret std xor mov jl mov mov (bad) (bad) (bad) push xchg inc dec jnp test sarl sbb mov hlt les loop xchg push inc xor jo test imul sub pushl (bad) call leave imul (bad) dec xchg mov lret ss add jno push ds imul lahf (bad) decl out lcall pushf jmp aas lsl repnz clc dec mov pusha int jb xchg (bad) inc jge mov inc (bad) (bad) jg sub and daa cmpsl jnp lcall mov sbb orl pop mov out pop repz (bad) (bad) decl out pop dec pop push sub inc adc pusha or fistpll pop mov sbb xchg ljmp mov mov mov or add add xor scas adc or (bad) (bad) (bad) inc dec and outsb mov test add cld (bad) push pop into adc lret push (bad) (bad) (bad) pushl mov sbb push xor push fidiv mov cmp or movsl adc (bad) cmp sti hlt cltd decb jb sarb dec cmp add test xor xchg dec (bad) jmp andl stos (bad) lds (bad) cwtl ret fldenv adc push sbb xchg out or (bad) repnz push sarb mov mov add xor iret adc pop cmpsl sub mov (bad) and xor and xchg cwtl pop sbb lcall lret dec lcall in (bad) into or sub (bad) (bad) (bad) fstl xor sub mov cwtl push stos (bad) mov out mull or loope scas push loopne (bad) dec icebp divl outsl hlt rclb pop std lret pop push bswap lcall pop or test dec cs or pusha xor and scas clc (bad) inc ret xchg call daa fnsave repnz xchg (bad) sarb xchg insl xchg (bad) mov sub loop repz fist push insl loop mov arpl mov lea mov mov and push inc in cmpsl mulb push (bad) (bad) ljmp sub jne in and add add dec pop push push mov jae out and fisttpl push (bad) (bad) mov es (bad) (bad) (bad) in mov cltd cmpsl je lea leave popf cmp js dec mov cmp jg dec adc ljmp mov enter fstpt and lret or push lcall xchg rcl aam dec cld stos push mov icebp (bad) (bad) (bad) jg dec push arpl xchg mov jmp mov decl daa pop ret mov mov cmp inc xchg inc leave cmp mov ficoml bound mov decb insl rolb (bad) ljmp repnz (bad) icebp dec movsl movsl in stc jb inc rcr ljmp test inc lds sub push mov or (bad) (bad) (bad) mov dec mull inc and pop xchg loope cmp jg sbb cmp mov cmpsb mov lock mov and lods call lods jns xor out enter call ljmp xor movsb cwtl insl dec sbb (bad) mov fisub mov pop add stos push mov lods jg adc add iret jae,pn xchg orl xchg cwtl pop or vpxor outsl mov or mov xor cmp in mov lock dec xchg adc xor adc ret add pop (bad) mov fidivl (bad) mov loop cmp lahf ss lcall jns sahf addr16 mov jl out adc sbb (bad) (bad) (bad) jmp mov repz dec jle stos pop mov fmuls pusha lods (bad) (bad) (bad) incl mov outsb jae dec mov lods xchg mov fsubr call cmc xor pop fildl lcall nop test xchg nop ret data16 sub arpl std (bad) cli out bound pop in xor (bad) (bad) jg aaa pop sub iret xor stos xor cmpsl ljmp xchg int3 pop sub inc mov rcrb (bad) (bad) (bad) (bad) fldenv aaa xor ficom jmp lret mov out or mov inc (bad) (bad) (bad) pushl or inc jecxz fiaddl lods cmpl add movsb mov adc clc ljmp dec mov jge push (bad) decl rcrb out inc and pop pop out xor cmc in mov sbb incl mov inc cmp loop (bad) jo pop mov sbb into push push sub rclb icebp mov fcomps cmpsl loope out push data16 hlt (bad) call jns push mov loopne inc inc xchg push ret pusha cld pop pop or push jns inc sarl pop xlat lcall mov call or fsubs mov mov mov (bad) (bad) decl mov inc fdivrs mov add jns xlat stos incw push jge jg mov xchg cmp pop mov stc call push outsl aam ret push push ret shlb push pop add mov stos mov and (bad) fbld mov imul das gs push (bad) sbb and jne fidivl lods test sbb pop pop xor les lcall popa call inc sbb js ret ds push (bad) (bad) (bad) (bad) jmp jo outsl adc jmp sub outsl test mov je data16 jns decl lock xlat outsb mov mov jb sub inc mov jmp jg (bad) (bad) mov les test (bad) int push mov sub loopne test mov icebp mov cli (bad) (bad) lcall xchg pushl nop xor mov adc mov (bad) pushl in rolb push mov (bad) cmp jp mov das push (bad) (bad) (bad) ljmp aam xor adc sub xor aad mov ss jl les mov (bad) (bad) (bad) lcall orl clc and hlt and mov popa hlt xor (bad) (bad) jp andb and add push cltd mov call (bad) pop sbb sahf sbb mov lcall clc into fcomp scas push ss jne cmp call subl mov xlat add sub rcrl mov ret jne pop ret inc fildll inc sar scas cmpl fcmovnb in jb (bad) (bad) (bad) call jae clc lcall ja dec xchg push incb gs pushf imul movsl jge fadds (bad) (bad) clc lods sbb sbb bound mov adc in dec rcll lret adc incl sbb pop sub leave ja dec (bad) out cli push and mov sbb inc adc mov inc (bad) repnz mov addr16 popf add decl aad bound mov sbb jmp sub mov mov insl rcrl (bad) (bad) decl xchg add fldt out sbbb cli lahf mov sub sub stos sbb cltd push incb inc bnd mov jg cmp cmp jl mov in push cmp xchg idivl pop jp (bad) sar ljmp sti fdivrs dec call cmp fnsave pop dec pop gs jo inc (bad) ljmp lahf stos inc push push inc jg jnp gs bound repz cltd popa mov (bad) dec mov rclb test dec and loopne ret fimull ss push scas into sub jmp xor (bad) (bad) inc pop xor add (bad) jno mov mov sbb adc sbb decl int3 dec jb add inc mov std (bad) jmp loop out cltd inc inc pop cmp cmpsl or (bad) jg mov idivb jmp (bad) sub and jb pop (bad) pushl sbb adc lock std mov or ret add stos xorl fcmovnu mov dec fcmovne dec loop xchg data16 test xlat imul sbb cmpsb push cmc xor lret xchg notb (bad) call xchg je jge orb mov or out jg ret xchg mov aad (bad) cmp inc cli ljmp (bad) scas cmp enter push jge or inc dec add mov mov inc outsb std dec outsb xor in loop loop push cmp jo sub loop jg sub ret sar in test or pop push mov jmp outsl jne pop stos jmp push nop xchg inc xchg (bad) adc dec inc sbb (bad) (bad) jl mov (bad) icebp movsl decb js pop incb cmpsb mov arpl jg pop pusha inc cmp cmp xor ja lock call adc cmp scas xor loopne jae cmp jae jo xchg movsb (bad) ljmp repnz mov test rcr dec insb ficompl int3 mov test and sbb movl out lods popl xor std imul push jmp jp inc (bad) or sbb cmc lret jg (bad) (bad) (bad) (bad) (bad) jns xor push out dec push jp stos or inc sub jle stos mov adc decl daa or frstor cmp lods scas inc pop dec push xor lds sbb dec (bad) inc push int3 and popf sbb icebp icebp inc inc insl mov sbb pop movsl add push adc cmove (bad) ljmp cmp pushf loopne imul out pop xchg dec (bad) (bad) fmulp push iret adc fsub ds add or (bad) fbld xchg (bad) mov mov lret sarb mov (bad) (bad) ljmp mov cmp mov stc rolb push enter mov pop xor (bad) (bad) (bad) jmp popf mov and xchg xlat jo and dec cmp cmp adc xchg (bad) (bad) (bad) push icebp cs cmpsl sub push jmp scas push outsl or mov sbb (bad) (bad) fimull mov add xor mov add dec arpl loope jmp pop xchg (bad) mov pop lods (bad) in pop pop aam (bad) (bad) (bad) lcall pop lcall lds test xchg push jecxz pop sbb gs dec aas gs jg fild sbbl int3 flds mov fcoml int3 outsl es call loope rolb es stos stc mov (bad) inc and and gs jge add int3 aaa scas outsb cwtl mov sbbl jns ds add fmul out mov cld (bad) (bad) pushl (bad) mov imul idivl push pop leave add sub out popf cltd push xchg or (bad) pushl lcall jno daa (bad) and push jle test cs call stos pop jo dec stos mov or pop pavgb stc add sahf jnp outsb int xchg imul ret pop inc adc ret int3 (bad) (bad) call subb dec push nop pusha fsub xor mov jmp xchg jbe (bad) mov (bad) movsb fisttpll fistpl mov icebp (bad) dec and xlat jle mov loopne mov xchg mov (bad) (bad) (bad) pushl dec push aam cmp and cmp iret iret inc ds es mov pop push and mov pop adc fisttpl pop xor js inc pop pop add inc dec mov out in cmpsl cmp xor push mov push xor jnp jp jmp call mov iret and mov inc (bad) loopne mov decl adc sbb jno cmpsl dec cmp (bad) or (bad) (bad) decl lods je in sbb dec and adc dec adc inc andl add clc (bad) jmp std push jb arpl (bad) push mov pop (bad) (bad) push xchg ret dec bound movsl fdivs sub insb jmp jmp sub add iret or (bad) div add sub push aas xlat pop mov fild add scas adc out push jb (bad) (bad) (bad) sti ds inc insl icebp pop aas lcall xchg jge inc pushf (bad) ss out add std (bad) (bad) ljmp stos cli cmp inc icebp gs int fsincos sub xor inc stos out hlt xchg mov (bad) xchg mov mov (bad) ljmp sbb pop pop mov mov add or or ss (bad) incl lcall mov mov xchg jl cli ja pop in insb xchg mov xlat xchg mov mov jb (bad) (bad) ljmp (bad) aas stc ret subl cmp (bad) mov adc mov sbb incb sub std int3 xor and sub sub adcl lds xchg and (bad) (bad) (bad) decl pop inc out inc jg dec inc jle divl jl lcall mov xor (bad) (bad) (bad) pushl sbb in clc repz jo xor cmp xchg repnz cs out std (bad) (bad) ljmp xor (bad) xor sub pop jge sbb inc repnz lods mov ret pusha cs add scas mov xor jmp fwait mov mov pop mov ljmp cli mov inc cld push out sbbl jle (bad) jmp jl (bad) icebp push rorl std idivl cmp imul sbb sbb (bad) (bad) call inc stos scas push push cmp add fldcw mov pusha mov cltd popa test in ja mov (bad) (bad) pushl pop nop inc stc sub mov push pop dec leave jb js hlt dec (bad) cltd xchg std cld ljmp (bad) jle sbb outsb lds cmpsl test notl sbb (bad) fcomip call into xchg rol or int3 aam leave movsb insl cmp loop mov sar jecxz call add pop icebp xchg mov cmp ljmp cmc push and ja mov ret push adc das cwtl fisttpll stos adc clc incl sbb dec mov and dec bnd stos push test cmp (bad) (bad) jmp dec int push mov sbb sub std pop mov mov clc xor (bad) (bad) (bad) decl dec jge pop popf push push mov sub jp outsb xchg jecxz adc (bad) (bad) lcall stos popf push dec lret subl jne imul leave and (bad) jmp xchg push idivb ja scas cmp cwtl (bad) call sbb mov or cvtpi2ps enter add mov dec cli (bad) fist and pop insb popa inc mov (bad) incl cld repz bound adc adc cmp jnp push ss pop fildl inc sub and inc sub (bad) (bad) (bad) incl pushf faddl xor gs sub add mov add (bad) icebp lods (bad) (bad) ljmp sbb jmp fadd pop push aam repz rolb mov adc add fdivrl cmp pusha xor je (bad) decl fsubrp cmp loope xor outsb stos push (bad) int or dec call imul into loop lret xchg push cld call rcr lds pop sbb xor das sub (bad) (bad) jg push push std and stos fwait aaa push popa xor and lahf lods sahf mov dec mov mov mov sbb movsl push pop insl jle orl jns dec mov test hlt (bad) lcall cmc test sahf mov mov or (bad) jb addb (bad) lret (bad) scas decl (bad) (bad) out mov jmp scas jns (bad) aam push pop mov incl (bad) jp inc push jmp repz push stos mov push mov mov addr16 push and movsb not add xor test dec (bad) mov add fsubrl int push jo (bad) mov push (bad) mov and fs repnz jmp cmp (bad) (bad) cmp test lods and aaa jno jle lcall cmpb sub enter mov addr16 ljmp adc loop (bad) ja mov (bad) (bad) ljmp inc jo test aas fildl inc or ficompl lcall (bad) jmp in xchg push cmp sub daa sahf fbld mov or mov mov cmp call mov in (bad) cmc dec pushf aaa (bad) call push dec cmpl xchg lret gs mov push sbb or xor sub cmp (bad) (bad) push loopne or addr16 cld into mov inc mov cmp push (bad) (bad) (bad) ljmp push mov sub xchg fsubl mov out xor and (bad) (bad) call cmp aas insl popf or rcrb sbb pop cs in adc es (bad) stc sbb dec mov ss andl ljmp jno mov (bad) lcall (bad) hlt add jg pusha mov das dec pop or mov incl or fldt out mov ss das mov loopne jbe aaa shrl leave inc sbb (bad) call loopne imul mov lods xor jb cmpsb stos stc mov (bad) lcall scas sub fnstsw dec setbe (bad) (bad) fild push jge push les mov mov mov rclb and (bad) (bad) lcall pop mov push add pop sahf stos (bad) xor add fs sbb data16 cli cli (bad) (bad) jg dec push or fcoml cmp adc mov add fcomps (bad) (bad) lcall inc outsl je addr16 stos pushw add sbb mov push or jo xor dec scas test (bad) (bad) sti mov sub inc push out fsubrs js and cld fwait inc arpl pop sahf inc sub jmp or cmp or sbb mov adc mov jb lock ljmp (bad) and xor pop and stos ss lea enter jge rdpmc mov fsubp push in ficompl incl cld (bad) es clc jmp jmp mov js and mov std push fstpt cmp (bad) pushf (bad) mov mov mov pop stc add mov ja add bound dec (bad) enter pusha mov test lock fwait jo call (bad) (bad) decl add sub jo adc inc js repz (bad) call inc pop in xchg jle push fdivr lods mov call cld (bad) push push lock (bad) call fstpt out loop inc repz and sub fwait sti fs decl push xor sahf adc cmpl cltd popa ss cmc xchg dec mov (bad) (bad) (bad) push sub sbb ds and xchg cmp inc cmpsb push cmp nop mov inc inc and scas inc and jp sub xchg movsl fist push (bad) (bad) (bad) ljmp lods imul dec pop cmp (bad) or mov out inc adc mov (bad) (bad) jg shrb in push dec cmpsl test out ret sbb cmp fadd (bad) (bad) jmp pop jbe cmp leave push adc ret cmc stos adc aam xchg fbld jp xchg (bad) aad inc sarl (bad) pushl sbb sub out xor mov loope (bad) lods add dec orl lahf push icebp (bad) (bad) decl lea dec add nop jne jl (bad) jb outsb jae aad or incl call (bad) jae dec scas arpl (bad) (bad) ljmp or divl (bad) and test adc test les pop movsb loop and xchg xchg cmpsl enter data16 jnp jbe cmpsb loope jae in enter in iret jmp (bad) (bad) ljmp lahf call stos pop decl mov lahf ret or mov jbe cli outsl cli call xor rcrb aaa lods dec outsb push xchg out inc push out decl jle mov pop mov mov push mov mov xor aam jns dec sub inc nop (bad) (bad) jg pop lahf fisubrl movsl xchg push insb bound mov pop adc dec arpl (bad) dec cld push cli mov jl in (bad) in test (bad) xchg into (bad) mov add fdivp jle inc cld (bad) (bad) pushl lods in sbb adc adc sub out cli int3 (bad) jne std call test cmc popa lods jecxz jl inc jne cmc fwait cmp jge (bad) (bad) lcall push jno pushf mov mov sbb cmpsl rclb daa fstpl mov gs call or (bad) je repz push cmpsb push (bad) push clc (bad) (bad) jg mov mov ja mov scas rorl push sbb inc (bad) incl jo sti adcl mov in mov sub clc insl mov (bad) (bad) jg aad scas push rclb mov xor adc sbb ret lcall (bad) push inc out into arpl imul nop inc lea jge arpl (bad) cmp scas jecxz or add lret and mov push cwtl add divb mov xchg jecxz rorb aas sbbl mov jg (bad) jg adc mov xchg lret push dec (bad) add sub lock test popf and ss jb push clc xchg ret (bad) (bad) (bad) decl inc (bad) adc imul ret fcmovbe jo jl bound mov loopne (bad) (bad) lcall xor inc clc cmpsb imul sbb jg testl (bad) incl stos (bad) fidivl mov mov mov xlat test es cmp incl data16 add add pop mov ss mov inc lret cmpsb push mov cs (bad) (bad) pushl mov and mov icebp pusha mov insb sub (bad) jae cmpsb cmp aaa pop cmp mov int3 sub and out xchg mov repnz stc mov leave push xor push dec nop xorb mov (bad) aas cltd icebp (bad) ds fdivrl mov pushf xchg insb sbb iret shlb cli decl jno pop sub inc mov repz stc adc mov mov incl les stos jb mov push jne push test sub movsl cmpsb (bad) adc and (bad) (bad) pushl ss adc cmp cmpl adc int3 (bad) pop (bad) (bad) (bad) (bad) fldt or xor pop call (bad) (bad) out push negl jb pop and sar mov dec cmp pop cmp out (bad) dec push dec push les nop (bad) (bad) out cli sbb add jg jmp mov and dec or mov inc mov (bad) (bad) (bad) inc mov sbb aaa mov add test js xchg (bad) (bad) (bad) jmp sbb addr16 push push and (bad) loope insb je gs sub ja (bad) cld enter add mov mov push xchg jp pop cmp adc add or cmc clc or (bad) bound out enter mov xchg push sub int3 mov and cmp inc mov movsb sub stc pop jo mov fsub dec ffree sbb (bad) (bad) jg call or cmp aaa push in dec rcll flds sbb in call (bad) dec add add inc fstps mulb inc out in movsl adc icebp test (bad) call adc (bad) pop into sub adc cli xchg movsb iret pop test enter xor ljmp mov (bad) fisubrl pusha ja fdivs call aad fistpl xchg sub lret cmp push mov in adc mov (bad) ljmp mov xor into fldcw add jecxz mov cmp stos pop jne and push decl lock push and mov call sti inc mov jbe incl imul lret clc push push test mov dec sbb sub aaa dec or (bad) int mov fcomip test rolb push mov (bad) outsb icebp in mov (bad) incl test movsl cmpb (bad) xchg dec mov mov sbb mov clc aas (bad) add push xor sbb sbb (bad) cld xor ds cmp in addr16 test pop arpl subl ss call (bad) jge mov pop orl (bad) decl enter je or lods xchg out cld mov (bad) sar push cmp pop out or and (bad) mov pop or rclb sbb leave xchg out and lock jbe mov (bad) pushl aas sub or or (bad) (bad) mov sbb inc test mov out inc jge repz and fmuls (bad) (bad) jg clc mov mov test adc test pop into push or cmpsb lea sar jg pushl adc sbb sub add push sahf ja gs add popa cmp xchg push addr16 sti test add ret popa (bad) call rclb outsb cmp xchg aas insl dec arpl test and into adc aas sbb and xchg gs sub and jne scas pop pop dec aam stos pop sbb or sub or in jno (bad) (bad) (bad) mov cmp (bad) xchg jg or lods mov mov popf sbb call lea inc or inc jae dec loope mov dec mov xchg sbb (bad) (bad) (bad) (bad) pushl arpl pop loope inc mov rol push pop pusha lahf std lcall sti sub mov add jno aad fnstcw mov ficoml mov movsb pushl push popf iret xor insb push and popa jae fcomip (bad) call mov dec mov fsts inc mov arpl mov notb dec cmp fbld aad lods adc scas ret xor lods data16 out sbb (bad) pushl pop mov jmp test pop pop push fdivrs test incl jmp pop daa (bad) (bad) fnop mov mov mov (bad) (bad) dec mul pop push xchg das dec push cmpsb stos push movsb xchg mov (bad) incb ljmp cli call push outsl inc jl cwtl test in (bad) out fidivrl (bad) (bad) jmp rcr mov inc enter sti faddp sbb int3 test stc add (bad) (bad) (bad) pushl mov mov and fcoms push push popa loop add out xchg mov mov cwtl cmp clc ret mov inc mov (bad) jg or adc repz (bad) (bad) mov out push push fldcw in lahf rcl das cli data16 jo and dec (bad) (bad) (bad) ljmp dec (bad) or mov fcomps mov cmp aaa pop and adc (bad) (bad) (bad) pushl jg scas into mov aam pop fwait xchg lret not cwtl sbb cmp sbb lcall mov cmp lret or jne ret (bad) (bad) call dec pushf cmp add or xchg mov dec sub (bad) jmp out and pop add sub pop push adc mov push and cli cmpb or decl out (bad) adc xchg mov xor dec test mov (bad) call (bad) sbb sbb mov pusha adc mov cmpsb inc pop ficomp incl push jge outsb adc in rcll lods call inc inc ja rcr cmp xor js mov mov inc add or (bad) (bad) jmp shrb inc lea js sub and dec jnp or orb pop (bad) cmp mov pushf add cmpsl sbb add xor xor sub dec dec arpl cli (bad) (bad) pushl js adc fwait into jae shlb adc dec test xchg popl push aam sub cs arpl jmp inc adc (bad) pushl pusha ret xchg mov les inc addl ret mov xchg push cmp inc shl stos or pushl add int mov (bad) lcall xor movsb cmpsl xchg cs and or push cs pop jp dec jmp push hlt sub xchg into dec lret lea out push popa sbb call xchg ss (bad) rclb dec enter (bad) cmp call and lea (bad) (bad) jmp sub mov and nop gs xchg test leave shr xor xchg inc push loop dec cmp (bad) (bad) (bad) pushl mov imul mov push nop add (bad) pop sbb inc sbb xchg imul (bad) jmp (bad) or fs or sbb in fdivl or mov sti mov (bad) pushl int3 jae outsl sub cld repnz pop hlt mov jg stos clc jo add int3 fsubs push jg add jo ljmp xchg loop xchg dec dec cmp out xor xchg test decl div mov enter mov mov pop inc sbbb (bad) insb sbb adc mov (bad) (bad) ljmp push cmpsl popf mov in es push jbe sub outsb mov lret cld cmp or jmp fcompl ret stc adc outsb lods ljmp push mov push ds ljmp sbbl (bad) mov add movsl sarl ja sbb pop rclb (bad) (bad) lcall (bad) jecxz aas pop cmp and xchg icebp out fadd xchg call mov inc push sub inc scas cld pop into ljmp xor repnz in lcall cmp (bad) ds sti (bad) movsb add in sub adc lods push in into mov lods arpl sbb das dec (bad) (bad) (bad) dec dec add (bad) inc xadd sub movsb inc and mov repz std fild jmp mov push je and arpl (bad) (bad) pushl dec rorl mov adc add xor inc jns popa cld dec cld out (bad) sahf xchg or sub pop jne jp inc (bad) jg jne (bad) cmc loopne and lret push out cmc mov incl and pop or lods jmp sbb cmp je cmp jb call (bad) (bad) (bad) call pop lahf fmulp pop fidivl clc pop xor and xor mov into cmp aad xor test in mov enter (bad) mov ss rcll dec hlt xor xchg xchg cli pop lret jecxz pushf aas in inc idivl or and icebp mov and stos fisttpll (bad) inc xchg inc insb aas or mov sbb (bad) fistp and push and dec add dec push cwtl jb push outsl jp xor lahf pop (bad) (bad) (bad) lcall push fidivrl stos cld pop in js inc xchg insb xor inc dec jecxz int int (bad) cmp and fcoms mov xchg insl (bad) mov (bad) xchg and imul (bad) lcall int3 adc outsb sbb jle sbb mov sarb lcall mov scas stos dec or decl fnsave xor jg clc repnz loopne add mov mov adc (bad) (bad) call ss mov dec sbb sbb ret dec push xor stos cmpsl lds adc push push (bad) (bad) (bad) call lods mov mov (bad) popa mov fimull rcll addr16 test sub jmp mov lcall out pop lock idivb in mov lret lds xlat test fidiv inc sar jmp out dec dec sub mov pop rorb mov dec out add out clc decl test jmp repnz leave and mov push mov cmp shrb aaa or xchg sbb mov rolb call sbb push cld (bad) jg sahf or adc mov push lahf mov (bad) (bad) call xchg lcall (bad) sahf xchg push mov aaa sub movsl repnz sub sbb icebp mov cmp pop sar (bad) (bad) mov sub loop cld jle fsubr cltd imulb in dec (bad) (bad) mov out stc lods mov popa sbb into sub push cmp sahf cli in jnp sub add cmp fisubr (bad) (bad) mov call cli ret popf jbe adc and or gs (bad) (bad) inc xchg add add pop movhps repz adc sahf test popa adc pushf popa push pop (bad) (bad) (bad) push push jae sbb sub in mov push inc cltd jmp mov mov inc adc (bad) (bad) lcall dec out into adc lock mov psubusw dec roll daa call or (bad) (bad) pushl js fimull fstl aaa icebp je fiaddl cmpsl add cwtl mov hlt mov jp test mov adc gs mov mov xchg push (bad) (bad) ljmp sub lock push dec stos scas sub fxch mov ljmp (bad) mov pop pushf cmc pop cmp cld movsl aaa and and push cltd in add (bad) (bad) (bad) ljmp mov add dec mov adc lods adc stos cli pop jae (bad) (bad) pushl sub mov divb xor adc push push js mov or (bad) (bad) (bad) mov cmp movsb push sti mov dec push clc lds ret lret insb imul fcomi sbb out das cli pop es pop fwait pushf mov jns push mov cmc decl xor aas in xchg cmc jle (bad) mov js (bad) (bad) out rolb push sbb sbb fs ja cmp xchg push insl sbb (bad) jmp pop cmpsl cmp adc aad cwtl xchg push jmp fcomip pushl sti test jmp push leave push inc add xor cmp inc cli fdivs sub fimull jg (bad) jmp les dec cmp nop sahf das lahf inc pop cmp pop mov pop jge mov cmp dec es (bad) repz imul hlt packsswb test ss jp shr cmp xchg cwtl push (bad) mov pop enter pushf outsl xchg xchg lret sbb xchg add (bad) jmp sar scas popf jmp into sar jmp (bad) fcomip mov enter dec into hlt rolb mov sbb jb js call ret push js frstor cmp lret or (bad) cmp ss les dec gs sarl fs aas push cld sub xchg movsb cli jg and jo clc subb push (bad) (bad) ljmp pop adc cmp mov push std sbb dec xchg mov rolb and popf mov (bad) (bad) (bad) fcompl leave lcall jle dec aas clc in mov and inc push pop adc (bad) lcall js cltd je dec fsubrs inc inc data16 xor (bad) cltd test mov flds ja jb mov adc movsl and and lcall adc gs jne dec cli decl jno mov pop mov (bad) in push addb pop mov pushl in psadbw (bad) lock cmc mov (bad) (bad) (bad) out push jbe sbb mov adc and xor bound pushl lcall loop jmp lcall xor jge mov xor adc ljmp xchg outsb js sbbl mov scas cld lcall es lret xchg push lods push iret adc in sbb sub (bad) decl dec mov hlt add int3 in outsl sub push mov inc movsb and test sub adc (bad) int test mul daa dec jae (bad) (bad) decl sahf in sbb (bad) mov inc fsubs push sbb dec ss sub call xor cltd adc enter inc mov (bad) (bad) pushl cs sub movsb pop jmp cmp cwtl data16 bnd xchg adc lds pop sbb mov out push faddl xchg fmul cmp jg les and jge mov (bad) (bad) call arpl jmp cmp insl mov xchg jp dec shr sbb pop or (bad) (bad) incl push adc cmpsl jmp mov mov adc jl mov jmp fcom mov fsubl cwtl ljmp (bad) cmp arpl fisubr pop xchg add pop lret (bad) out add jp adc mov aad xchg push add int3 mov jp (bad) aad data16 mov ss jmp cltd xlat test xlat and inc outsb cmp (bad) (bad) (bad) mov cli sub jo lahf push test cmpsl sbb or (bad) std (bad) (bad) (bad) (bad) (bad) ficoml xchg iret fwait or leave push and dec lods cs es pop decl mov jmp movsl or fdivrl cmp ds and add push sub (bad) (bad) (bad) mov jge fcomps (bad) out imul (bad) jg jmp pop lret xchg mov jae pop (bad) (bad) ljmp fldcw adc std out add or call pop or push mov loope or incl or aaa lcall dec cmp divb std (bad) call add add push xor push sbbl adc pop sarl dec loop jg pusha loope and xor sub (bad) rcrb mov (bad) mov inc fsub xor (bad) jg sahf push jge mov adc mov adc ss lcall push xchg push jl outsb (bad) in jno es fwait cmpsl fistp into add or (bad) (bad) call imul jbe or ljmp insb cmp fprem (bad) jmp mov sub jg (bad) (bad) (bad) cmp dec out lcall xchg addr16 sbb inc aam mov jb (bad) out (bad) (bad) (bad) ljmp repz test mov (bad) imul push dec test nop xchg out inc cltd jnp pushf dec mov les sbb insb jo fldt outsl cli mov cmc rorl dec das nop or (bad) lcall ljmp sub jne fiadd mov jecxz cmp fwait jae bound fdivr cmpsb repz add (bad) jns hlt sbb inc out pop adc inc js pop lock sbb jns cli mov pop or test cmp hlt dec jnp lds dec call push ret cwtl xchg leave adc add cmp inc mov fistp adc or in (bad) pop inc mov rolb mov data16 mov outsl xchg mov fcmovnb sub xchg pop mov inc loopne daa adc jle mov sub arpl add int3 pop in int3 (bad) (bad) fnsave pop (bad) js hlt mov xchg and xchg popf ficompl stos cmp adc (bad) iret add (bad) (bad) dec inc jno and mov mov les xor scas test mov in std incl cmp pop cmp js js and icebp and fidivr hlt lahf mov mov syscall jg pop sbb pavgw push ret push out (bad) (bad) incl push add out and lcall inc jmp dec sbb mov mov inc inc lcall or push inc mov push int (bad) (bad) ljmp lret mov add pop test call in push bts dec inc cmpsl (bad) (bad) incl jg push push iret xlat mov pusha inc or and mov sub cli ljmp scas loope cwtl and xchg lahf mov (bad) (bad) (bad) call xchg sarl push js or fisttpl jne push cmpsb jo sub call das inc cli (bad) decl dec jp push imul xlat subb lahf fldenv out mov (bad) lods jno stos (bad) adc and jg (bad) in (bad) (bad) incl loope mov mov or test js inc dec loopne stos int dec incl decl push imul sub das fcmovb popf call (bad) (bad) (bad) stc push test lcall out adc add cmpsl outsb push mov xor stos ss push and add (bad) incl xchg pop das xchg push or div jmp mov scas sahf (bad) fild cld lcall (bad) inc jl xor insl add jp add or repnz (bad) aas (bad) (bad) lcall std or aas jno fcomi roll fwait jge jno mov das or fmull sub aaa xor cltd out mov lahf out stos mov insb imul stos adc gs sbb rorl jecxz pushl loope rorl aad mov fcomip loop dec mov (bad) (bad) (bad) jmp xlat push pushf lods jnp aaa sbb sub dec ret lock fistl mov das cmp and sub ds mov push outsl fdivrs (bad) (bad) (bad) jmp push (bad) jb xchg dec sbb enter ja loopne out push or mov xor sub (bad) (bad) jmp mov dec or aas fwait xor inc mov (bad) xor add inc addl jp dec out test dec adc push pusha push dec cmp incl mov data16 push jnp fstpt xchg icebp (bad) (bad) cmp repnz das cmp cs and (bad) (bad) (bad) jg and cmpsl out dec enter in (bad) jae ret mov xchg int3 lcall and stos pop mov call loopne stc ss (bad) lret push mov (bad) ljmp xchg xlat sub aaa mov (bad) (bad) (bad) call pop push int3 arpl insb or aad sbb pop daa rcrl or xchg (bad) jmp daa push daa cmpsl xchg fistp lods scas xchg fcomip pop or mov sub sbb dec adc (bad) (bad) call mov pop test stc (bad) jge out xchg data16 decl popa daa mov pop bound shlb data16 mov xor mov (bad) add test aaa popa mov sub imul pushl test fnstcw in mov pusha pusha adc push cmpsl mov (bad) (bad) call std into (bad) lds sbb das lds imul mov xchg loope push push push sub ret xchg adc out (bad) mov fsubrs sub add hlt sti outsl mov mov push push (bad) jmp repz pop xor sub jge inc adc cmpb gs xor js cmp mov iret aas movsb fsubrl test popa mov cmp loopne ficomp (bad) jmp hlt ret cmpsb xchg cltd sarl mov push pop (bad) pop shlb mov mov (bad) insb cld (bad) jg mov scas pop call fcoms popf (bad) ljmp pop mov xchg fcomps jp and ljmp jmp dec mov cmc lret cmpsl jmp fs test ficomp mov mov das jp adc adc es sbb int3 les in je out sarl (bad) pop mov mov (bad) jg (bad) enter test rorl (bad) fidiv xor aad xchg mov call sahf inc mov mov xchg lods es (bad) ljmp pop mov (bad) clc les cmp (bad) pop je clc dec nop cmc dec mov (bad) jmp xor movsb dec daa xchg pop dec rclb mov add dec pusha pop les jo xor pop fdivrl push sbb cmp add lds cmp (bad) ljmp lcall or xor pop sub and add fcomi add lcall mov gs aas movsl (bad) incl (bad) xor mov jle mov iret cmp ljmp movsb or adc mov or cli loope mov cli jno mov aas and ss test cltd pop fbstp gs lret call (bad) in jp std (bad) call inc pushf xchg push lods inc sub test cmp cltd movsb xor (bad) pushl test xor dec mov inc leave mov push mov stos (bad) lcall (bad) push inc nop jbe mov call or lock clc popf shrb sahf push in jns fwait inc xor ret sbb cmp mov fsubl add (bad) (bad) pushl jbe inc xchg or fwait sub jge mov jp sbbb fldl xchg xlat mov cli mov xchg push mov das (bad) (bad) scas cmpsb mov inc inc mov pop ror aaa or (bad) dec jnp cmp push sub out imul inc xor (bad) (bad) (bad) lcall sarb and cwtl in mov insl cmc ja xchg sub mov xor jmp push adc ljmp jne (bad) mov pop sub xor mov outsb sbb xchg jge fdiv xchg mov ljmp aad mov aas pop faddl sbb fildll jns ret dec sub insb jne cmp cmovge sbbb lcall test pop outsb enter (bad) jmp in xor or mov ljmp mov lcall jns hlt ret test mov in xchg xor rcrl pop jge mov loop clc (bad) ljmp dec xchg sbb ljmp cmp push js fmuls call mov xlat lods inc xchg test es jo inc xor in fisttpl and les ficom movsl lcall sahf notl les hlt fisubr punpcklwd (bad) (bad) (bad) call xchg stos push es inc cmp fcomip mov movsl mov xchg test pop xor (bad) (bad) (bad) decl xor jge sub add adc dec xor cli sti loopne jne inc bound mov and push fldl xchg sbb mov fcomip decl idivb push sub mov adc (bad) decl gs int3 icebp sbb aam dec test jns jmp pushl dec cld icebp dec pop push dec inc mov out dec mov decl enter das dec cmp (bad) (bad) (bad) mov mov icebp arpl xor aas nop add fisub (bad) (bad) decl and xlat (bad) cli mov call push cltd (bad) mov dec or mov int decl dec rorb xor mov jp mov lock mov and gs or jg or (bad) push cmpsl pop jno int3 push insb negl and adc ret jno (bad) (bad) ljmp jae insb xor add mov fs lea xor andl imul stos aas ljmp loopne pop clc pop cmp icebp push lahf int3 test add xchg imul cmpsl lahf inc in sarb das (bad) (bad) (bad) ljmp loope es jno mov out dec rcll push xchg addr16 fcoml jmp (bad) sub dec testb mov mov jecxz fnsave xor es mov fnsave dec mov inc or inc adc sub mov and (bad) fildll pop sti test mov cmp ljmp movsl dec dec xchg mov add pop js xlat (bad) cmpsb mov addr16 ja inc adcl xor or std (bad) call mov in lahf addr16 push test pop popa (bad) les ss push out jecxz sub (bad) mov ja pop data16 mov std fdivrs mov lret push cwtl sbb push lcall in fisttpl lock pop test or cmc fisttp outsb mov mov ljmp inc (bad) mov add stos (bad) (bad) mov lahf push andl enter add addr16 cmp lods repz jae pop xor (bad) aas and push xchg rcl mov scas jg (bad) (bad) lcall loopne pop cmpsb pop cmp (bad) ss out mov cwtl push sbb and loopne ficomp pop adc rcl icebp (bad) (bad) (bad) incl fcom out mov sub push xchg push push addr16 loope aas jp mov insb test xchg (bad) (bad) (bad) call sub pushf inc adc mov add sarl popa outsl inc xchg aam idivb icebp movsl jge aad (bad) (bad) call jmp mov arpl roll or jge dec mov jns and cmp (bad) jmp pop inc aaa int3 es lods xor movsb push (bad) ja sub syscall dec mov pop sbb in sti or inc cmpsl ljmp outsb add xchg in and (bad) mov jns or dec xor (bad) (bad) call inc int3 je dec adc ret mov (bad) lds push data16 sub imul es into xor syscall aad stos pop mov (bad) call push ja push pop repz out aaa test pop lds inc adc pop hlt scas sub push call and inc mov aas mov ds cld lcall pop fcmove xchg ljmp stos xchg mov sti push inc popf mov cmp or in lods ret aad jg fistpll pop dec dec int repnz js paddw leave maxps (bad) jg xor call jne addl add push pushl rol or xchg and jle (bad) pop (bad) mov imul push or test iret imul aas (bad) jmp mov (bad) dec loop into xchg leave inc cmp sbb ljmp in and xor aas (bad) (bad) ljmp (bad) and icebp mov push scas out xor push or mov xchg (bad) (bad) dec ja out (bad) pop mov inc dec jne inc ret bound out ja int3 jne add (bad) out xor cmp fwait fwait pushf pushf mov xchg pop (bad) mov cmpsl mov xchg or scas in fwait and jno mov cmpsb xor test mov ljmp cmp inc xchg dec add pop xlat cmp (bad) (bad) cmp pop cmp (bad) aas decl pop push test test push lock jle idivb bound sarb int3 and sbb mov push outsb stos fnsave adc (bad) jmp out adc jno repnz call or and imul jl lcall xchg lret sahf mov or xchg sub insb shll movsl jmp das sarb jo (bad) mov outsl cli sar (bad) sti jp inc lock sahf fidiv cmpsb inc mov pop inc and fs ljmp push jl ficompl clc jecxz pop gs test pop jg test lcall dec cld mov mov jle pop xchg stos ret test inc cmc aaa bound sbb lcall icebp inc pop js pop jae mov lahf pop sbb cmp imul xor (bad) call lock ret fdivrl push jb out and pop pusha rclb shr daa repz and fcomi pop jmp (bad) decl xchg xchg pop mov jmp fistpll inc sahf mov (bad) into mov sub (bad) lcall lahf jge jb call cmp sti dec bound mov repnz mov lahf insl sub cmp xor icebp sar lcall fstl (bad) inc and inc aas adc popa mov sbb lcall mov out push sub cmpsl lahf (bad) frstor inc out xchg jo (bad) loop test lahf lahf (bad) (bad) ljmp insb punpckhbw add daa js adc xor ret mov mov or push mov jmp adc mov push pop and mov adc decl push or aas pop jmp call pop movsb add divb rcll int3 mov mov dec mov xchg ret pop aaa into (bad) (bad) (bad) (bad) fucomip cmpsl or cwtl outsl jno adc or cmpsb stc arpl sub ret addr16 (bad) (bad) (bad) incl inc mov xchg pop insl jmp js inc std loope and cmpsl movsl addr16 call push inc push xor adc call adc xor mov call sahf pop inc mov sbb mov into cmp sarl jns push shrl jecxz fbld test adc decl call jg dec imul pop (bad) (bad) (bad) jg mov pop mov mov int scas rclb int fmuls mov cli mov cmp (bad) (bad) fcmovnbe mov (bad) lahf jnp cmp pop dec xchg add lahf je cmc aaa and icebp pushl mov lea mov pop dec sbb les xlat mov pop fwait stos dec clc decl fildll ljmp sub mov sub and mov cs pushl jns popa jae mov (bad) iret ss sub inc loopne cmc das (bad) lahf mov in sub sub cld inc cmpb repnz (bad) mov insb cmp cs mov or mov nop push and and ja sbb js enter mov das or push adc pop ret mov lahf inc (bad) aaa ret (bad) call cmp pop push xor test data16 (bad) jmp pop out (bad) mull sbb sbb push (bad) xor add ficompl imul shrb fs insb inc jno jbe jb insb lcall aaa lahf call movsl pop pop mov inc adc sahf cmovs hlt cmp xor aad (bad) mov leave lds stc or adc jbe icebp aas or decl int sbb test sub jb in (bad) (bad) incl sub sub sub cwtl stos push cmpsb push imul add jmp test jns pop call cld lock jae cmc fbld enter or xchg ljmp (bad) mov mov sar push nop jb xlat ret cmp jge pop fs jp decl xchg shll ret fdivl (bad) cmp ljmp mov mov enter in out cld (bad) lcall (bad) loope jnp mov lods daa repnz or sbb dec (bad) call pusha mov (bad) paddsw lds decl mov adc sub call mov push cli outsl rcll sbb frstor orl addr16 or xor (bad) fcompl lods inc jg stos and movsl ljmp (bad) jo std fcmovu daa ret inc pop test movb pushl rcr movb dec ret (bad) jb sub imul and pusha pop mov das mov pop sub mov scas rcl add fcmovnu pop jbe sub pop adcl daa lock cmp pop cli lret xchg movsb dec mov inc dec jbe aaa (bad) dec sub and call add pop lcall mov and (bad) jmp shlb mov int cmp or clc add mov popf pop adc sti xor pop inc sbb or or cld xor incl xor jo jg (bad) (bad) (bad) incl sub test pusha add int3 sahf cmp movsb mov fcos sti xchg mov out or add fbstp mov mov jg pusha and push movsb inc das stc movsb (bad) adc lahf test (bad) decl add mov push xor leave pop insl jp xor mov push dec (bad) shrl add ljmp jg fisttp push pop sbb movsb cmp (bad) jg js inc popf leave ret rcll mov mov ja or loopne sbb or jno rcrb repnz jno aad jb mov push adc fsub lahf decl (bad) push popf std fs dec out (bad) (bad) (bad) lcall insl push into sbb pop divps ficom fmuls sahf lods and ret movl shlb ljmp inc and test leave xor push dec sbb inc jge gs or cmp aas push cmp cs (bad) mov pushl loopne add push inc les add (bad) adc pop push aaa lock aas cmpsb mov incl inc std inc xor fs loope adc lcall arpl cmp jnp jge xor xor jg (bad) jg and lahf sti xchg aad imulb ss xlat push sti rol mov icebp mov mov mov pop push movsl mov jecxz inc xchg sub call cmp js and incb add out inc (bad) (bad) (bad) (bad) call jl sub xor sbb inc jnp lahf xchg cmc pushl dec pop call insb xor das (bad) dec pop insl ja ret add xchg cld outsl cs adc mov mov jnp mov pop sub (bad) (bad) js add mov and mov mov mov pop adc movsl loope lcall pop mov stos xor mull mov sub sub call test lods adc fs adc inc cmc out sub ljmp jl pop enter mov mov xor jmp pusha push pop mov xchg stos or decl jbe sbb daa adc decl mov xchg xor pop fild (bad) jmp lret sub sbb cmp aaa int (bad) incl lahf cltd pushf mov mov (bad) aad test incl sbb aaa nop test (bad) (bad) (bad) jge js shl popa cmc int add mov pusha ljmp xchg mov lea pop adc stos xor incl jecxz lock imul xchg rcl out xchg pop dec cmc mov icebp xor sub adc loope pop aad sub fildl outsl sbb pop cmp ss xor test mov inc push (bad) cmp lcall xchg fildll push inc jl or leave aam fnstcw sarl (bad) fidivrl aam incl push fimull sub inc sbb pop inc or fwait mov jmp inc aad or jnp (bad) (bad) mov xchg (bad) ds ljmp popf hlt xchg loopne or mov sbb mov push push jge (bad) add (bad) cmp fdivrs push mov add add (bad) mov jp ret test xor jge sub cld sbb gs sub (bad) (bad) (bad) decl test les dec jecxz xchg inc int3 out push (bad) and (bad) (bad) jmp js inc gs sahf dec jno imull xor aaa sub inc movsl (bad) jmp sub inc or ss iret sbb jg leave fsubl out inc add outsl adc dec std pushl cmp inc mov (bad) mov mov and shll movsb pop mov cld aad sbb push lea sbb (bad) outsl push insb iret popf mov xor sbb mov pop call (bad) jg cmpsb inc call inc dec add or mov mov (bad) (bad) lcall stos cltd or or add jp rol jle addr16 sbb inc jo jbe imul and pop or push sub test (bad) jp psrld pushf mov loop,pt sbb imull lcall inc jg xchg bound lods into lds inc aad inc add fildll sub adc (bad) incl arpl arpl sbb inc xchg xchg (bad) sti adc stos mov jmp fcomip lcall sub sbb mov mov sub decl adc (bad) sti ret test or mov mov clc call divl pop mov sub inc inc icebp fcompl (bad) adc sahf jns (bad) (bad) (bad) mov sarb sbb jle (bad) mov and scas push test ret jns loope (bad) cmp xchg cmpl xchg adc xor lods pop (bad) mov sbb mov push sub cld mov adc outsl xor inc mov (bad) mov aas xchg push sbb and icebp (bad) lcall imul add xor negl mov lcall sub mov dec fcomp push imul jg adcl or fwait adc push cwtl lcall sub (bad) sub fnstcw test cmp fbld adc js sbb gs adc or loope outsl sahf lret adc shll aam pop inc repnz mov pop adc jae and or bound lds insl rorb and or add roll aad std push sbb xchg (bad) fisttp pop adc sbb fmull mov mov cli sbb movsl mov lahf inc cld scas (bad) test jnp and outsb dec mov pop fbstp (bad) (bad) decl xchg test mov cli cmc jae xchg mov fs dec pop jmp pusha (bad) jmp sub and fcomip add idiv jg enter movsb inc mov sbb iret cli (bad) (bad) (bad) pushl stc mov stc pushf pop inc std mulb cvtps2pd data16 mov dec xor mov loopne dec es test decl add fbld test mov jmp mov (bad) aas or lret lcall mov add push mov add sbb push pop jl lahf mov adc decl bnd (bad) popf dec rcll jne incl inc mov lods imul stos decl in out (bad) pop push aaa lahf add nop repz hlt pop push jmp cltd insl int3 call pop adc inc cmp sub les pop xor cmp xchg (bad) lcall popa xchg popa ds loopne mov jg aas nop imul pop inc jbe mov sub shl jg add sbb dec rcll outsl ret (bad) cmc inc fnstenv (bad) (bad) mov andb ret pop jbe inc push ljmp lahf aam fldl add gs mov jmp push (bad) (bad) in rorb xor cli xchg sbb pop out push std push (bad) shlb fist (bad) testl mov push xchg outsl stos jo (bad) jg mov inc jmp stos xchg dec inc test (bad) aas push (bad) xor es test test push push sub aas fildll pop inc (bad) imulb loop frstor xor xchg cs cld (bad) jg loope cmpsl mov rcrb and ja sahf leave and (bad) (bad) (bad) lcall adc aas cltd sti ja lret cmc sysret hlt cmpb inc dec jo push push and mov bound (bad) data16 jl jge out pop pop xor mov data16 decl inc xor ljmp push das out jl mov cmc and mov inc cld repnz sbb pop push cmpl inc ret clc (bad) call int3 bound call mov arpl jg das cld ljmp mov (bad) inc and add aam idiv or call test imul fdivp loop out push les sar lcall cli mov xchg sub mov pop lahf and decl hlt cmp mov es (bad) incl mov add pusha xchg aad lods or and mov sub jne or gs (bad) mov not adc xchg jnp in add cwtl xchg add jle sbb int3 fwait int push and mov or sub addr16 xor xlat mov xor fild cld lcall gs insb and testb loopne xchg clc pushl mov xchg addr16 (bad) push sbb icebp arpl pusha stos push mov not (bad) (bad) (bad) mov pop sbb pushl push sub xchg pop dec sub pushf xor push jmp inc inc cmc lret cmp das mov fldenv push incb fsubrs sbb call cwtl xor (bad) orl inc iret loopne adc and (bad) jg test sahf mov ja jecxz jg enter inc incb in mov mov ss rcrl inc scas dec pop popa xor ja repnz (bad) lcall loope pop and shl bound test idivb enter test pop adc push mov je in nop iret in add sbb test push insb mov movsl cmp sub mov fisttp jno es push dec xor rol in enter (bad) (bad) (bad) fistpll sbb xor push insl out addl out mov test aad test ffreep and push aas fnop decl adc cmp hlt (bad) dec mov mov cs ljmp push hlt int mov scas or or dec or ret insb mov xor dec stc jbe and incl jmp aad pop cwtl mov pushf add mov mov pop in dec shlb pop icebp and je mov es xchg aam pusha xor movsb mov les mov das dec adc test rcll adcl es mov push or push sbb add adc lahf jmp cli xchg in sti xchg mov loope loopne add ss pop adc adc (bad) decl pop cmp jecxz sbb push adc arpl or lcall repz popa xchg jg adcb std loope imul xchg std jns test and xchg mov lods add nop (bad) inc jg jmp mov mov dec outsl imul icebp jp sub sbb mov (bad) (bad) (bad) lcall in dec in mov or pop aam call addb repnz inc sub rcrb inc mov (bad) lahf lahf test push mov test (bad) call xchg popf (bad) mov adc shlb adc into xor sub out xor stc lahf or and (bad) mov lahf or lcall rcl dec push cmp mov (bad) ljmp sbb jecxz test adc lods clc and dec jb mov bnd std adc call xchg lock sbb and mov dec push inc inc add or into imul jg mov in pusha ss mov (bad) cmp mov mov dec (bad) jg sbb cmpsb dec test test in jb mov (bad) (bad) decl leave sti imul fiaddl xchg insl arpl dec lret xor pop pop adc aam (bad) inc add (bad) mov pushf adc aad mov aam scas mov inc xor inc push pop push xchg xchg jnp mov movsb leave movsb fildll push mov sub sbb inc jmp test mov ljmp xor scas adc (bad) fild call rol cmp or push jb movsb xlat push je (bad) decl cmp icebp fiaddl or jecxz cmc adc adc pushl dec sub scas jb test dec add imul xchg lahf and mov gs incl out aaa (bad) adc scas loop jg,pt dec aam mov add mov add nop dec inc push push test mov xchg sub mov out sbb les or and add ret aad xor ljmp outsb arpl pop aad jl mov pop cmp call cli fadds (bad) popf cmpsb xor mov lcall sub in jno pushl cmpsb mov insl push ret mov jg xor mov push jnp stc (bad) in sarb cmp pop stos push fldenv mov xor push pop cwtl ficomp les jg mov jmp push jmp imul nop (bad) incl jno mov je out cmc and jb mov jns pop enter (bad) xor mov repnz outsb mov mov inc adc inc xor lds fmulp test and cmpsl lahf sar mov push jle cmpsl jmp out ds inc mov push aas ffreep pop cld lea mov mov mov or enter fdivrs adc mov icebp jnp mov call (bad) jg xor dec (bad) cmpsb mov rcll push xchg cmc lock scas sub (bad) (bad) cmp pop push mov inc insl adc sbb push sub mov mov and das lret scas test push cli out test jmp (bad) call divl cmp fucomip adc dec dec xchg add sbb jns mov add xchg jb cmpsb insb lahf mov jge enter call (bad) push imul mov dec mov int3 lods popa cmp add cmovne fxch ret and cli push adc mov or push sub dec aas push shrl je jb xor flds lock add add test add lock scas add testl jle mov das mov adc sbb test push mov cmp jo (bad) sti fldcw mov cmp inc aam xchg lahf aas bound push inc lahf decl pop daa shlb cltd add and sbb lahf xor xor fistpll aas test lahf mov xlat mov movb mov pop (bad) call cmp push mov les push add mov jg mov jbe lret movsl arpl jmp (bad) ljmp (bad) cltd mov stc add or or enter jl mov das push and and mov lcall rorb stos or leave cmp clc mov xchg daa mov bound jmp jg mov push outsl mov sarb movsb mov or lret sbb cmc jg pop pop or xchg dec loop adc subb fwait rcr cmp fwait adc lea jp and inc and shll inc (bad) call sbb and faddl push or inc sub xor xor cltd dec in outsb sar rorb or (bad) push push movl and data16 subl (bad) xor push adc pop xchg stos popf popl repnz (bad) pop jmp (bad) mov push pop xchg push jmp rcrw or cld mov loop ljmp mov jae jecxz aas inc adc xor push (bad) (bad) incl fldcw add imul ret cmpsl sti addb and pop mov icebp ds push or pop and inc adc or cmp jne pop adc cmp cltd (bad) (bad) (bad) incl jbe leave or loopne fisub ss mov xchg pop mov imul (bad) (bad) jnp mov sbb mov fnstenv push adc sub push inc (bad) (bad) (bad) push fwait xor out (bad) rcl xchg gs sub rcr in popa stos clc in in push sub sub and adc add cli shlb cmp xor lea xor rclb in fstpl orl ss jbe icebp sbb loop (bad) (bad) (bad) jg stos or pop lock xchg ja lods inc outsl (bad) les aad arpl or xchg gs (bad) (bad) call push loop dec xchg mov popf inc loop mov mov pop xlat add jne popa pop sub (bad) call ret pop mov pop repz mov jmp jb call lret je push loope lret (bad) mov aam int pop insl mov or (bad) (bad) (bad) call pushf add cmp rcrb fisubl sbbl xchg mov adc jmp jmp cld cld rcrl ja push and cld ljmp cmp push push mov sarl push clc pop ds xor (bad) call scas fwait in into fnsave xor sbb out in lods addr16 sub (bad) call scas push sub addr16 bound div test push mov push insb (bad) (bad) lcall cmp adc cmp xor push sti xchg xor imul cli popa mov cmp mov and (bad) (bad) call pop shrb push inc les or and hlt sbb jo pop addr16 mov (bad) ljmp inc jg subl fwait mov mov cmp mov aas icebp sbb movsb fs adc push xlat jle (bad) jl nop xchg aas mov ja shrb jb xchg mov inc sub lea ret in fldenv ds fidivl (bad) (bad) decl pusha fisttpl insl inc and call xor push xchg xchg nop (bad) incl test imul cld (bad) (bad) (bad) (bad) (bad) ds aam pop (bad) mov lods xchg mov (bad) pop and jno mov cmc mov (bad) (bad) decl push mov adc adc or cwtl bound cmp das xor mov and (bad) (bad) (bad) (bad) lcall nop pop push inc mov (bad) xchg jecxz adc pop dec inc sti push imul (bad) (bad) (bad) jmp dec lods and (bad) (bad) iret in pop imul xchg or (bad) push xchg stc (bad) insl repz fstl test pop sub inc cmp (bad) (bad) incl in mov cmp test sbb in push (bad) (bad) mov outsl fimull cwtl (bad) (bad) mov jp or mov jmp mov out inc (bad) mov cli fild pop pop ret jne loopne jmp mov xchg add imul mov sbb insb pop icebp push adc push pop or mov xor loope (bad) (bad) pushl loope cmp mov pop push aad dec cmpsb jmp leave push mov mov fldl aas dec push cli (bad) std lods stos dec push iret push sub (bad) inc adc stos sub lret jnp (bad) in std pop lea jo pop inc cld (bad) (bad) decl dec sub jg sti inc xchg push mov outsl xchg scas cmpsb das clc pop cmc cmp je ret xchg jmp mov scas xchg (bad) (bad) (bad) push and popf lret out icebp fimul and stos and inc aas xchg and out sarl xlat fadds push repnz (bad) (bad) (bad) pushl pop add dec fs add (bad) popa out andl mov mov add add call jo mov xacquire jae mov lret fistl pushf aad in fbstp in sbb pop jns lcall or mov es adc std out popa adc (bad) (bad) incl inc inc add orl sub inc xchg mov jbe into es movsl std lock xor mov and xor add sti pop inc cmp ljmp cmp sub inc into jecxz xchg les loope mov mov hlt (bad) (bad) in clc aad push push and out iret test aaa pop mov hlt pop inc lock (bad) (bad) (bad) pushl out cmp push jno cmp mov jae movsb pop (bad) mov xchg push inc (bad) gs (bad) (bad) call aad dec pushf inc mov leave imul cli adc mov push inc jge cltd int mov mov lahf and sbb mov (bad) (bad) (bad) out stos inc ficom (bad) mov cmp xor sbb add adc cmp loope or (bad) pushl adc dec les dec lar shl js sahf sub fwait dec mov mov sti movsb jne jmp js lods push subb (bad) dec imul rcrb insl aas jo dec aas mov mov es push lcall (bad) (bad) call or jmp in ret push jmp fadds jnp xor push mov inc cld (bad) call scas inc movsl lahf enter out dec addr16 push pop pop fwait (bad) lcall fnstsw hlt loop fidivr or ljmp in xchg jg cmp cwtl aas lahf push jo lods les lock inc pop dec or lcall xchg pop and adc pushl xchg cmp mov jg fwait pop and leave and sahf mov or sbb cld (bad) jmp add cmp (bad) jmp std popf mov add (bad) pushl push sub or mov push xor leave lds push fldt adc mov push cmpsb and xchg inc clc dec std sti mov (bad) (bad) (bad) jg subl (bad) out mov xlat mov rcrb enter xor jo scas in (bad) (bad) (bad) incl dec sbb fnstcw rcl data16 bound data16 outsl sbb mov stos ficom sqrtps push add fwait add or cmp (bad) (bad) (bad) aas stos ljmp jg sbb (bad) popf popa ds pop inc xor dec (bad) fadd jne mov xor (bad) (bad) ljmp dec push cmc (bad) xchg mov pop lret rolb add mov imul mov hlt test (bad) decl and mov inc mov (bad) ja mov jecxz cld push pusha xchg loopne loopne fsub pop es clc (bad) (bad) ljmp mov popa (bad) je test jl stos hlt gs xchg cld int leave sbb mov (bad) decl inc push lret jl xlat sahf add shrl into clc mov push addr16 (bad) xor lcall lahf movsl sub shrl imul jg clc ljmp nop lret sbb mov mov lret add test cmpsb sti adc jne push and mov out xchg dec loop popa xchg adc mov jae pop int3 or inc mov sahf pcmpgtw out push mov mov sbbl push adc in cmp pop lock push adc add adcl xchg pop dec adc and and ja clc or jge cmp lret cmp out and (bad) jmp iret mov pop repnz sbb sbb gs sub rcl loopne xchg xor aas lahf or push (bad) (bad) (bad) incl paddusb in cmp jecxz jl inc outsb mov or inc dec mov stc or inc xlat sbb xor (bad) aam mov loop cwtl jg,pt loop adc outsl push inc cli incb (bad) mov or movnti stos mov push stos (bad) ljmp xor cmp jbe bound xor arpl push cmc fildll popa mov fcmovbe das (bad) aas mov ljmp pop xchg clc lods adc push fistpll in push mov inc ficoml aaa jge repnz sbb lret and insb push mov pop mov loop lret lds pop adc xchg (bad) ljmp jne xor add or in mulb xchg pop pop xchg push mov cmp stos in fistl lods out (bad) (bad) (bad) dec addr16 movsl lcall jmp in jmp jecxz mov ss cmp pop pushf mov fcomip jmp push jmp shl sbb or popf lahf pop jle fstpl pop push jmp xchg scas dec jb jge mov pop sub stc jns cmp xor adc dec (bad) lcall push xchg jne ss add pushf and incl ljmp adc or ljmp jae cmovl imul ja pop ja dec dec ret imul (bad) (bad) incl jmp push negb xchg popa mov das test ret ret push sub (bad) decl add jle jb pop cmp (bad) orb jns (bad) decl cltd hlt jg fcomps jecxz fadds mov or sbb lods std inc push ljmp jae cmp mov lret push fwait dec ljmp in hlt addr16 (bad) (bad) jg mov int3 xor xchg cmpsl (bad) ss jae cld out pop adc add xlat push jbe sbb jmp sub or (bad) incl jo cmp lods xchg dec rorb pusha (bad) ljmp or ljmp hlt aaa in pop sbb mov nop pusha outsl lds xchg fmulp xchg in dec inc xchg xchg ds adc pop pop jb mov ret test mov ret pop mov (bad) call pop xchg bound jnp or push test xor (bad) (bad) (bad) (bad) aas je jb cmp out lock test add imul sbb imul sbb lcall je inc adc ljmp (bad) mov push adc nop jg add (bad) (bad) ljmp push dec es inc add sub sbb sbb mov mov jge jecxz mov (bad) (bad) je inc sub or mov inc (bad) xor jae mov lahf (bad) (bad) incl adc mov out lret pop fisubl pop mov mov (bad) (bad) (bad) push pop pop iret ss inc sub inc sub dec cli ss mov xchg jg (bad) (bad) (bad) (bad) jns mov out sbb jns add xor arpl add repz mov pop jle mov std ljmp movsl mov inc mov or (bad) jg mov lock xor sahf dec push jecxz outsl fistp icebp (bad) mov out inc pop add inc mov cmp jo (bad) (bad) ljmp call cltd cmp fs inc dec in movsl mov jns mov sbb (bad) (bad) call lahf jb xchg mov adc in mov aaa cmp cld dec mov (bad) lods (bad) mov cwtl (bad) jg movsl xchg xchg inc hlt cmp jnp sbb sbb and mov or mov push jg mov pop pop loop push fwait aas decb bound pop pop dec fs xchg mov nop mov cmp jo pop mov ljmp stos les sti lcall sbb push scas pop jmp (bad) (bad) (bad) call jg adc je shr xor (bad) xor lea pop pop cld in (bad) lcall mov icebp lret cli or fisubrl (bad) cld daa pop daa mov (bad) cmp je push inc dec push aaa enter xor cmpsb cs lds (bad) cmp clc outsl adc xlat mov hlt scas loopne incl xor addr16 scas sarb adc clc cld cmpsl xchg push jmp in or out mov push icebp (bad) jmp (bad) (bad) ss test ret addb stos add addr16 xor push lcall jb mov jmp aam and pop std (bad) aas notl mov in rclb mov stos adc (bad) ljmp or mov lret fldt push jnp dec iret repz in adc push scas sbb pop lock incl inc cwtl sahf cld sub mov sbb (bad) mov fidivrl mov push out mov mov dec stos ja (bad) pushl inc adc (bad) mov adc mov (bad) (bad) ljmp cli out pop ljmp push sahf fdivrl mov pop cld fildll sbb lahf pop es popf xor mov xchg testb (bad) (bad) ds xor fiaddl xor (bad) mov pop insl sub frstor mov sbb test daa iret sahf xor (bad) ds or push adcl es daa ret jge xchg in push icebp repz scas ljmp call mov call inc fistpl push (bad) popf pop (bad) (bad) decl pop popa jle pop lcall fst jge push jl orb insb sti or (bad) (bad) jmp push addl or out adc enter lcall xchg sbbl mov insl (bad) mov sub pop and cmp mov addr16 rorb out jle fldl pop js sbb mov in fistp scas jnp jg loopw scas pop loop (bad) push in (bad) (bad) pushl (bad) mov sbb addr16 sub lods enter leave xchg cs xchg scas je cs xorl xor clc (bad) (bad) incl push adc jcxz pop jnp and fs mov int3 cmp jbe pusha sar out arpl in sti stc repz push mov movsb leave hlt (bad) call adc xchg jecxz jp sub push sbb inc popf cmp (bad) cmp movsb adc incl xchg mov iret into das fs sbb sti push push test loopne pop aas stc lret cmp movsb and loope lds (bad) pop and sub xor add push icebp nop push mov (bad) (bad) sbb sub pop lock ljmp inc rcl (bad) fimull xor into xor mov sbb or lahf cli arpl dec setg mov (bad) (bad) cmp push into push adc add mov lcall das (bad) call dec lods and inc ljmp xchg or pop fwait mov aam in int add adc add mov outsb (bad) lcall add test adc lods and movb (bad) (bad) call int and xchg dec pop (bad) mov jmp xchg adc (bad) ljmp cli pop and leave gs outsb (bad) daa dec and (bad) aaa mov lcall add cmpsw dec (bad) test mov (bad) fcomi inc cld (bad) call mov adc scas jo inc add std imul jecxz jg nop nop sub outsl xchg lcall repz or cmpsb (bad) mov push mov and cltd int fcomip mov test xor or pop or pop sar bound jno inc pop mov xlat fidivr push lods mov sub mov lret popa sbb mov mov jo sub arpl test xchg sub xchg sti cmp stc dec pushf repnz je push sub out movsl (bad) lea popf mov pop dec push mov ret pop push and sbb or inc gs mov xlat das adc dec loopne insl cs mov fild mov jo pop cld or mov inc xchg add cwtl jmp call push sub cmp pop or pop out pop loopne shlb aas ljmp test mov pop gs sbb lcall mov enter (bad) (bad) call inc gs clc jl sub cld mov mov sti mov mov das insb pushf mov and lea (bad) jmp inc mov or push lahf mov decl sar xor (bad) sbb std bound repz (bad) pushl mov stos xor jl repz xor and int3 xor aam inc xor mul das inc xchg adc lret lcall ljmp mov std xor cmp (bad) lcall je,pn pop adc or outsl call outsl stos stos and sar (bad) (bad) ljmp push inc adc shrl repz bound adc mov enter dec loop pop adc sub jl add mov ret cmp (bad) (bad) (bad) in dec pop ret insl aas subb call lahf sub pop xchg ljmp in jle or push scas push (bad) fldt or (bad) (bad) pushl xchg sub cmp xchg xor js add jge and sbb js jmp bndstx add xor inc mov fadds insb (bad) aas push icebp push sahf mov in cmpsl outsl lcall fdivrp jg call mov adc aad (bad) hlt (bad) (bad) decl pop jg popf imul add jno push ficoml jl (bad) lcall rcl cli lahf fisttpl sub push and pop cwtl ja (bad) (bad) (bad) lcall xchg lods add mov jns (bad) mov loopne mov xlat (bad) (bad) (bad) incl dec cmp test movsb popa repnz lret or mov (bad) mov xchg sub or xor xor in mov paddsw call xchg push ljmp mov and mov pop (bad) popf inc clc (bad) (bad) dec mov roll pop lds sahf pushf cmp sub inc push sti into cmp or decl hlt mov scas imul push jmp (bad) fdivr or loop fsts ds fsubl clc (bad) (bad) call dec addl inc pop sar jg cmp repz mov lcall ljmp outsl daa lret cmp jl test and ret clc decl mov out fbld ds or xlat push andl mov (bad) (bad) pushl sub pop out mov or outsl xor ja fdivs hlt (bad) (bad) (bad) ljmp push aad sub gs repnz jecxz push sbb jge or fsubrs cld pushl cli sub xchg mov pop cmp mov fbld jmp cld stc outsb ds sub pop (bad) fcoml dec (bad) xor jecxz sbb (bad) ficoml lock lods gs mov adc dec jmp sarl mov or lahf pop mov cmp loop out iret (bad) clc mov jg aad jo (bad) aaa (bad) scas mov add fimul decl mov pop jb lret push sub (bad) decl jb mov data16 lret movsb or cmp xchg inc imul call (bad) jg and idivb pop lods jp cmp (bad) jg mov mov cmp fisubl adc test cmc lahf push inc rclb sbb mov pop pop jns movsbl add aaa fcoms test lods scas hlt fcomip mov outsb sti push cmp add (bad) fcmovnbe (bad) lcall (bad) and xchg fdivs dec inc adc pop xor and das dec jl mov push es (bad) ljmp add mov sbb push jnp mov fsubrl hlt mov sbb and out pop pushf clc inc out xor pop mov fs ss or lds loop fwait pop pop in pop andl clc enter inc pop leave aaa sbb push jecxz xchg clc push mov sub shll dec sar lcall inc push cmpsb sbb and jg in and mov cltd lds ret pop mov add mov jno,pn dec inc mov (bad) (bad) (bad) push lods xchg sub mov testb mov mov inc sub sub loop cmp bound sub push push push imul fisubrl jns adc call adc rcl loop push ljmp lds or loope dec rol pop pop jo cmc push cmp (bad) (bad) (bad) ficompl aad cmp add jge outsl pusha push call jmp scas adc in jae ljmp ret xor loopne aas push pop dec je and leave clc clc mov jge pop leave cli jmp adc cmp in dec xchg or and sbbl mov out xor call push rcl xor lds int sbb mov shll mov lock mov mov (bad) (bad) mov shrb add add ja and subl movsb (bad) ljmp or or aad lods jp andl outsl cmpsb add and mov and dec pushf mov or popa aam outsb pop out mov ret ds fs or mov test and xor push pop mov pop je (bad) (bad) (bad) fistp jae mov cltd or mov xchg inc fwait jns xchg ljmp cli movsb sbb lock (bad) push jp fisubl clc nop (bad) (bad) (bad) call mov aas sbb (bad) outsl pop (bad) imul cmp cmp aad jg (bad) call in sub cmpsl mov add outsb int3 out es (bad) (bad) (bad) jmp bound rcrb in add or enter fidiv ror (bad) (bad) push push or andb sbb push jmp call dec or mov (bad) jg pushl outsb and enter mov and pop lods inc jg cmp call (bad) out hlt lcall push sbb lret aad scas outsl inc in enter (bad) in ljmp addr16 fmuls scas jo,pn push jecxz adc sub push (bad) (bad) (bad) call or data16 insb inc mov test sahf outsl push cmp ret sbb (bad) (bad) (bad) out mov popf add sub inc sub mov outsl aaa lock dec lahf jo xor scas scas test (bad) ljmp mulb dec xchg mov adc sbb sub lcall mov fwait loop jmp sbb test stc in (bad) mov pushf lds add outsl in outsl dec adc cmc scas cld mov negb pop add mov adc inc arpl lea add mov cmpsl inc lods mov call std test clc or (bad) fistp (bad) cmp (bad) (bad) jmp xchg adc jb shrb xchg cmp xchg ljmp dec pop xlat push dec (bad) cli mov aas jg (bad) lcall in cmp call cmp adc rorl mov (bad) (bad) (bad) jmp in pop test imul jb scas iret (bad) jo push les jmp div (bad) (bad) jmp cmp dec clc (bad) or inc imul jge out jno (bad) lcall nop dec lea in and jne (bad) (bad) pushl mov lods cmp cmp adc xlat call repnz xchg js push or adc addr16 and (bad) aas mov cmp adc push fidivrl jno sbb (bad) pop xchg push dec incl call aas sbb (bad) (bad) (bad) jmp (bad) (bad) dec loope cmpsb dec pop lret xor adc (bad) cmc cmp sub dec add push mov ja (bad) cmp fcoms add call push ret and jne sbb in pop pop adc (bad) (bad) ljmp in sub push in fstp cmc pushl or leave inc xor cltd mov xor decl push (bad) call lea cs jo lds mov stos addr16 xor imul into add testb mov or cmc fs rcl stc cmp aam xchg xor (bad) xchg mov pop call (bad) push sub jo sub outsl (bad) jmp std mov mov roll (bad) xchg or pushl ljmp mov pusha jb (bad) mov call sbb (bad) js icebp add jae add les (bad) les jmp call and (bad) lock addr16 inc hlt iret fldcw jecxz cwtl test mov sbb inc xor lods (bad) lcall pop dec jne inc nop fsubr movsl movsl in sbb imul call xchg aad add cmp iret loop ljmp dec or (bad) lcall jno jo mov test sub adc cmp test lret std test mov ret repnz and decl hlt sar mov add ret cmp (bad) (bad) call loop jns pushf pop ss sub nop push jge mov inc in loop inc nop adc adc mov movsl mov mov cmp jge popf push and movsb test das inc pop fstps pop movsl (bad) incl stc sub (bad) mov stc lahf jg (bad) ljmp stos pop movsb push pop (bad) notl jge mov incl lods or xchg lcall adc lcall add cmp les mov inc adc pop add (bad) (bad) call xor std xor daa pop ficom fwait pop pusha push mov lcall (bad) xchg xchg sarl aas mull daa mov push dec in std (bad) incl pop adc shrb mov fist fnstsw adc mul mov test sbb mov or cmp loop (bad) jmp pop add inc inc or jg rcr hlt xchg cmpsl adc mov mov das (bad) (bad) (bad) decl mov sbb cmp (bad) arpl mov mov insl aaa cltd les cmpsl in enter inc scas testl stos (bad) jns and incl push mov push in and cmp add lea std das pop push lret imul daa dec jb inc or adc mov push cmpsb xchg cmpsb cmp mov jae jecxz jae (bad) adc xor jne iret in jne and dec (bad) (bad) call pop or inc add sub xchg enter insb jmp test mov sbb jns ja xlat or (bad) fild jo (bad) mov dec jp repnz fs cmc push ja rolb dec in popa sbb jl xor mov imul out (bad) (bad) lcall hlt and ret ljmp rorl pop movsl add sbb mov (bad) (bad) jg test mov push in sub loop mov dec nop daa in adc repz incl (bad) aaa sbb clc (bad) bsr mov xchg stc scas mov icebp pop cld call cmp pusha pop loopne ljmp jbe jno adc aas aam pop xchg cmp add mov xchg xor mov cmp push std (bad) decl mov adc inc mov mov cld fnsave (bad) (bad) jg lahf push test scas xchg xor insl mov in mov aaa xor (bad) mov or push xchg xor arpl int mov (bad) and (bad) pushl pop mov pop lea cmp or mov xchg jg test mov aaa rol call adc jmp rcl or or inc mov push or dec inc mov or mov (bad) ljmp mov adc push mov (bad) push xchg lahf imul dec or test mov pop sub scas sub push repz cld mov add insb (bad) cmp in jg add std mov xchg pop insb ret in in sub push aas xor shll push xchg (bad) jmp xor xor sbb xor (bad) jg movsl xchg push jae les addr16 imul mov cmpsl fwait outsb push lods fisttpll fwait incb and int test iret imul jle fild repnz rcr inc (bad) (bad) (bad) fbld enter add sahf jb and outsb add enter (bad) adc mov xor sub dec mov (bad) aas pop xchg pop add (bad) ljmp fmul cwtl out dec jnp add insb lds push mov (bad) dec or lods inc popa sti ljmp jb push add mov push cmp or pushf js lret pop (bad) (bad) (bad) aas xchg dec xorb mov in clc mov in lret fildll mov xor xchg movb scas push nop ret and dec inc hlt or pop es (bad) mov mov jno mov pusha fimull push cmpb stos cli call aas rcl sbb fwait jnp mov xor (bad) (bad) (bad) lcall sbb bound out fwait xor or (bad) sub popf fsubrl into out shl call nop les xchg jo ds test sbb (bad) (bad) lcall sbb out outsb inc push (bad) loope jnp sti ljmp sub push loope adc inc in sbb (bad) (bad) call sbb iret jns sbb stos lock (bad) stc fwait mov push jp aad or dec (bad) (bad) (bad) (bad) mov dec clc cmp mov (bad) mov cmpsb mov pop stos lcall inc popf (bad) es cmp push lret movsb cmp lret test incl mov call cld push idivb mov add mov xor (bad) (bad) call out fdivrs xchg insl rorb mov sti jno cmpsl shlb or dec mov inc js lcall lcall mov jge jle push ds test fwait jp (bad) jg sbb es sti mov pop imul pop add dec pop ret mov lock lret pop jg pop sub jnp mov mov into jne cmp sti mov mov mov je pushl aas jne and cmc hlt (bad) enter loop lea mov and jmp es ret mov aas andb (bad) ljmp adc adc sbb inc aam pop xor out (bad) loope ljmp xor jge jmp or aaa dec mov cli xchg ljmp push (bad) idivb dec in xor xchg ret (bad) jmp xchg and sbb dec jo xchg jns pushf das cmpsl mov cmp cli xchg jb adc cli jp stos cli jg incl add stos add jg addr16 daa (bad) (bad) ljmp push adc inc inc lcall popf ljmp jnp movsl fbld in (bad) call inc xor in push mov loopne push (bad) pop sbb hlt movsl xchg pop (bad) (bad) (bad) call out (bad) jbe popa dec mov imul and pop or cmp sar incb xor pushl stos test nop sbb (bad) (bad) (bad) mov arpl stc les jnp mov lcall aam inc les stc jnp and xor jb cmp cli push les xchg xchg ss (bad) (bad) call std pop fs push cmpb adc xchg pop aam les and ret jmp mov xchg rcl ljmp dec pop xor xorl lret (bad) call adc cmc scas nop adc call inc std (bad) dec les xchg clc (bad) (bad) (bad) ficomp mov jne pop shlb mov jg out mov icebp int sbb add in nop inc dec cli (bad) pushl add mulb shll out dec ds (bad) (bad) decl (bad) dec dec sub and push pop mov arpl mov movsb sub in (bad) (bad) (bad) pushl es stc fsub mov testb dec xchg inc in movsb mov sahf aas (bad) (bad) (bad) inc pop xchg cltd adc imul mov mov and and push lods inc in (bad) (bad) ljmp add xlat adc je ret push inc popa mov xchg rep mov cmp inc std (bad) push test (bad) push out mov (bad) (bad) (bad) (bad) call shld mov pop mov in jg cmp movsl push xlat and add adc mov ss int movzwl out adc imul fcos (bad) (bad) incl aas push test int sarl push jne mov sti int3 (bad) inc add popa repnz cmp (bad) (bad) lcall aam int3 mov sub adc push rol sbb mov mov (bad) (bad) mov stc shrb xor and mov pop mov ja scas push bound call cmpsl lock jae loope insb and jmp (bad) clc rcrb jne mov mov mov icebp jmp sahf test popa or mov xor lea dec ret shll push (bad) call jl xlat jne clc inc addr16 mov mov jo lcall ljmp clc in arpl negb fidivr xchg cmp cmpsb ds movsl scas push xchg cli jns andl lcall outsl pop int3 xor insb or mov fldt in xor outsb ret mov or jbe inc sar xor int3 add sub pop and jg push clc out cmp mov cmp (bad) (bad) lcall sahf fnstsw das sti std and out in pop add (bad) ss sbb inc test lret and sub call sub std loopne (bad) ss cwtl (bad) cmp (bad) aas adc fisubr aam (bad) cli sahf inc add hlt outsb push sub lods jb sbb (bad) (bad) (bad) ljmp dec into (bad) cld iret sti push inc (bad) lock imull movb cvtps2pi xchg push cmc push sahf cmpsl mov jg (bad) jg (bad) cmovg dec call cmp lcall or (bad) (bad) jmp fmull out incl inc mov push dec aas popa out or out or cmp call lods sbb fidiv mov inc in imul (bad) sub imul jle repz (bad) (bad) mov inc lods mov and les pop enter cmp out push pop push rolb decb (bad) (bad) (bad) push mov int in mov leave icebp push sarb (bad) das push ljmp adc mov lahf or jg jl xor jns fmull scas cli out xor (bad) sub cmp fs ljmp cli aaa cld sbb cmp mov out aas sar lcall imul mov mov xchg out ljmp addr16 xchg push xchg into add cmpsl mov test sahf mov xchg in jecxz xchg push mov lcall (bad) in xchg shll push sub jl call nop imul in js test push mov (bad) outsl js jg dec cld aaa in (bad) fsubs or (bad) dec popf idivb cwtl enter fnsave (bad) dec mov decl insb cmpl shlb popf adc and xor flds dec bound (bad) (bad) jmp cmp sbb mov xor rcr sub (bad) (bad) jnp xchg test into or inc mov adc (bad) decl into pop add mov rclb insb clc lcall mov lds aas outsl cmp mov fist xchg cmp inc mov sub add or (bad) (bad) call pop (bad) hlt cmpl ficoml sbb sbb iret dec fsts out popf or popf and jbe jmp aad (bad) fadds and incl mov dec dec loopne into xchg fs das je sub ljmp mov sbb in push lret add aad pop sub adc (bad) (bad) (bad) jmp mov neg rorb repnz dec pop mov fcompl repnz (bad) (bad) (bad) (bad) jns xor inc cld stc push add cld aad xchg sbbl jbe mov test xchg (bad) in stc nop mov cmp xlat jmp out mov (bad) (bad) ljmp add and inc (bad) pop das xlat jnp mov aam mov xor (bad) jmp shrl dec push (bad) cmp add aas (bad) mov and sub les leave cmpb jae or (bad) decl jno push lret xchg pop xchg imul (bad) (bad) lcall sub mov ss incl mov flds mov (bad) (bad) (bad) dec insl or sub jns aad push push nop lahf cmp insb cmp sbb pop pop cli aad and adc or femms mov test adc (bad) pushl dec cmp test mov and mov cli mov and add sar add push outsl pop aam mov inc jg (bad) call ljmp or lods popa sbb push in nop pushf mov cmpsl (bad) (bad) (bad) ljmp sbb ljmp push outsb cmc cmc pop (bad) pusha lahf cmpsl sti (bad) ja popf mov push inc aas lds sbb jmp add incl mov mov jmp add fist xlat sub inc (bad) (bad) mov addr16 xorb jg xor push aas mov jmp fmuls addr16 and push aad aaa std (bad) pushl test adc pop mov int3 add xor (bad) (bad) (bad) incl lds mov cmp cli push iret outsb call (bad) jmp lahf jne cmp sbb sbb adc out xor push (bad) ret lahf call push push dec sub adc xor lahf adc aad mov mov add int adc pop or (bad) pushl mov cmc data16 sti push in xor xor (bad) jmp loope out mov nop adc jge insb (bad) repz call jp cltd add mov xor dec push psrad ret (bad) mov in xchg mov icebp sub test jno enter (bad) (bad) (bad) (bad) decl aam xchg out dec ds test adc mov pop lods or mov push (bad) (bad) incl dec jno xchg cs and outsl cwtl rolb xor pusha jnp adc test (bad) (bad) jmp fnsave and (bad) cmp jbe js cmpsb adc push aam (bad) cmp push mov sbb (bad) (bad) (bad) ljmp lahf shlb sbb fs sub jle sub jno sub adc jl cmp push (bad) (bad) (bad) (bad) ficom adc lea and (bad) fiadd xlat pop pop addr16 xchg (bad) jb out insl (bad) (bad) (bad) jmp arpl pop stc jbe insl dec fcompl fildl jae sub or mov add lret aaa mov or cmpsl (bad) repnz ror faddl push dec movq (bad) (bad) (bad) ljmp ret inc push inc mov sarl sbb bound or cmc xor gs add cmpsb (bad) (bad) cmp sbb loop mov xor cmp aad xchg insl dec (bad) pushl rolb push pusha cltd lcall mov dec repnz idiv cmpsb loop add fsubs (bad) (bad) decl imul xchg jg lret (bad) xchg jo inc in push int3 jp add xchg mov (bad) inc mov adc inc (bad) aas jge ljmp inc (bad) adc mov jnp jg pusha std mov sbb sub call loope jmp ret mov psubsb fwait scas and pop jmp cmp hlt add push popa out push lods ja mov pusha jp repz (bad) (bad) incl or call mov fs cwtl xlat mov cld xlat fsubs push add (bad) jmp sbb push addr16 outsb cwtl sbb out in xchg inc sti (bad) call in (bad) in test lods mov mov clc or mov sbb fisttp push icebp mov negb mov add (bad) pushl outsl insl arpl jae out dec (bad) (bad) (bad) mov nop nop pop push sub int imul push adc push push jmp (bad) jmp out js xor mov xchg inc sub adc into jl cmc and mov cmp int jmp loope jp sbb mov into pop call insl cmp in adc repnz ja jle rcrb mov push (bad) (bad) jmp inc push bound in or scas sub cmp xor das jno (bad) (bad) (bad) mov aam mov rorb add jnp lret mov ljmp pop mov les add and xor cli (bad) (bad) (bad) decl adc mov push mov cmp imul sahf hlt bound lcall mov mov mov push xor xor ficomp aas mov hlt ret push cli (bad) inc mov push push adc or (bad) mov cmpsb das push hlt push outsb mov jns in cwtl lret sub push mov xchg mov ljmp or rclb repz push (bad) (bad) (bad) push push cmp push push xchg push daa and bound sbb das leave or scas (bad) (bad) decl mov data16 adc aad inc icebp xor jmp mov jg loopne (bad) xor lods ret scas xor mov xor (bad) xor sub imull add xor jmp test jg insb fnstsw js in pop (bad) sar (bad) jp mov dec int3 je stos or dec xlat fisttpl imul (bad) jg xchg cmp jnp aas cmp mov cmp mov xor lea xor lcall xchg das dec aam xorl push cmp push mov mov (bad) ljmp fistpll aam ljmp fisubl xor cmpsl bound pop and adc inc xor jns inc repz push mov jno lods xor in pop les mov push xchg cmpsl inc inc movsl test es add (bad) (bad) (bad) inc imul pop sbb std enter mov lret inc cld cltd cmp hlt lea pop sub lcall lret (bad) lea sub adc std (bad) pushl pop sbb int3 and xlat shlb push lea jg sbb je push in pusha int3 pop sub mov outsb jp jmp jecxz shlb in mov xlat jg and enter push stos cmpsl cmp mov or xchg es sbb sbb push mov je test stos pusha adc (bad) (bad) (bad) mov xchg pop gs jb sti cld and jge hlt sbb xor lock cs (bad) (bad) decl sbb lods xor xor stc pushf outsb lea aam and cltd (bad) mov icebp aaa xchg (bad) (bad) mov test daa xor ss mov (bad) mov jmp pop jg stc fs add adc (bad) incl jp adc xchg inc xchg (bad) or ret push jae cwtl push fnop (bad) decl push cmc test inc jbe jle push and (bad) pushl outsb mov pop (bad) mov movsl aam inc scas sub adc pop add (bad) (bad) (bad) mov mov mov lret and jns adc lock add neg mov lret (bad) cld movsb push (bad) aas es cwtl aas jecxz,pt sbb lahf add je stos ljmp dec cld test mov jecxz ret push test and inc std mov (bad) rol out ds paddsw xchg sbb xor push jbe loope aad sbb (bad) call sbb push fcoml xor mov dec adc ljmp add sbb fwait jnp cli or push mov xor mov aam (bad) (bad) (bad) decl cmp adc adc xchg rorl sbb jl sub cmpsl and test ljmp dec xchg fdivrs xor pushl sahf aad lahf nop stos xor adc adc je jl jb inc std jg call in sub notl lcall test test stc push sbb push mov inc fdivs ja loopne pushf (bad) (bad) jg jge or xor lcall jmp iretw jno inc dec ljmp xchg mov (bad) and leave jle (bad) ljmp loop imul mov jno js pushf push ja dec jp pop scas ret jno push sar cmp hlt xchg stos jb movsb sbb incl push sub pop icebp rorl sub (bad) call mov push stos sbb add in jge lods (bad) (bad) (bad) mov clc sbb test inc or xchg jnp roll xchg cmp mov jmp scas mov aam iret loopne fs or fcoms lcall inc aas mov (bad) push rcl cmp roll in dec or jns inc mov in loope lcall stos dec jmp mov push jns dec mov ffreep (bad) jmp gs jnp pop xchg cmc call test pop aas cld (bad) (bad) mov push push (bad) xchg add jns les repz fwait out aam int mov pushl xor sbb and mov and in xchg in fildll (bad) aas add (bad) in ror loope jmp cwtl mov inc xor (bad) js out xchg je sub fistp push push mov add in mov add call (bad) (bad) (bad) pushl test mov cltd gs xchg js fcmovbe mov neg aad cmc pop sahf int mov (bad) mov add xor jl bound sahf xchg xor sub add cli jle syscall mov hlt xchg pop (bad) mov cs push xor imul jmp in cmpsb lahf clc mov xor daa adc mov test (bad) js adc fldt stos jo (bad) incl mov call (bad) and inc jmp lods mov call mov icebp push cs mov pop inc loop (bad) flds cmp jle or mov nop incl add pop lods repnz xor inc ljmp mov dec call mov mov cmp add lret cmpsb mov idiv (bad) pushl xchg jns inc pop xchg pusha call cmp (bad) (bad) (bad) mov das lcall cmp in jno xor test (bad) incl decl (bad) mov mov test cwtl mov xor into jo enter inc dec (bad) lcall stc nop iret sbb cld pop into clc test enter decl mov push xchg sbb sar (bad) stc (bad) in into pop pop fisttpl adc jmp (bad) (bad) call pop mov adc ret sub mov mov (bad) (bad) (bad) pushl cmc xchg xchg cwtl mov in in xchg (bad) cli hlt sbb push mov push mov pop lcall pop sub ss cmp add sub incl lock xchg loopne pop std je ficomp xchg hlt push mov inc ja push xor xchg adc pop test push insl inc mov test decl jmp ja add (bad) (bad) (bad) std lret int3 jne add int3 enter aam mov jmp (bad) jno sub pop xchg cld (bad) (bad) cmp lods push adc mov push pop fcmovnb std xor (bad) jg insb je dec mov inc scas xor lea pushl mov stos and rorl cld fmull xchg adc xor mov or and add movsb dec dec mov (bad) (bad) mov pushf xchg xchg jo adc fimul mov mov (bad) jg pop mov mov jbe and push gs mov jge in popa xor xor cwtl mov cld push mov adc scas sbb sub cmc sub push cmpsl maxps das mov pop rcrl xlat or jmp (bad) push (bad) jmp dec inc cmc nop mov inc pushl int sti pop lret inc pop fidivr add hlt pushl xchg enter jg (bad) (bad) decl xchg pop pusha dec negl add or or xor push out enter jno das inc dec push dec xor iret (bad) mov test fadds int push cs and cli call cld dec nop ss push nop subb push adc push cmp jbe xor (bad) lcall jecxz adc pop mov test cltd dec int3 idivb and call pop fstpt mov sbb flds adc rcll mov test push inc xor repnz outsl ret push jns pop xor call mov pushf ss jb fdivl mov sub mov inc fsubl int fcoms xchg push jbe mov ret ficom mov rolb (bad) dec (bad) (bad) call das add sub (bad) lods cmpsl mov mov test cltd add (bad) jmp or xor cmp out (bad) jns push inc mov inc test pop mov mov fist rcl pop mov das rcrl mov sbb jnp test push clc fwait ds (bad) jmp aam pop jne pushf lret add dec pop call (bad) (bad) (bad) jmp mov or test sub insb sbb cmp push add imul ret (bad) mov mov inc push cs lods test mov fidiv in arpl ja loopne jmp xchg clc mov xchg xchg inc xor inc (bad) mov dec cs mov out pop and jmp and lods mov aam mov mov mov xchg movsl (bad) jmp add sbb fild lea mov scas add mov je dec cmp ficom fs jg (bad) (bad) jg inc aas dec fbld mov lock pop sub push frstor lahf sar sti popf pop dec clc ja xor (bad) mov xchg jg add jmp aaa pop mov jge aam dec aas daa mov or pop call in arpl inc les lock test cmp outsb fbstp (bad) dec enter ret (bad) fild sbb movsb stos adc dec (bad) stc push xchg inc mov push mov jmp add lcall push inc add add (bad) incl aas push jno cmp mov scas mov cs lea lcall maxps push add pusha jbe (bad) dec lcall fcmove (bad) cltd pop inc mov inc lcall pop test mov mov dec arpl (bad) mov jmp cld (bad) (bad) jp out enter fs sub jecxz push mov (bad) ljmp in and mov sub les adc lahf icebp mov iret xor pop mov (bad) roll xchg clc scas daa push std (bad) jmp aam pop or jbe pop lcall cld mov pop inc (bad) lcall ljmp (bad) cmc int add ret add pop out cmp inc mov sbb (bad) ljmp in or sahf xor scas pop xor bound mov pop pushf jg cmc mov lahf push xchg (bad) mov (bad) fbld (bad) xor sbb ret jl scas push test (bad) (bad) incl mov xor or movsb stc mov imul into mov imul adcl ja loopne imul mov gs xchg dec icebp push (bad) pushl repnz cmp pushf ret (bad) mov ja cltd push pop sub fcomip (bad) fnstenv sbb je cmp lea push xor outsb and (bad) (bad) (bad) (bad) jp sub mov ret mov sbb fsubrl into mov xor movsl push pop leave mov testb pusha xor testl mov cltd das mov (bad) (bad) jmp call lcall pop into adc jno arpl sbb sbb pop push aam xchg cs (bad) loope pop mov pop lock dec in aam hlt xchg dec and fcmovnbe inc test inc (bad) ffree incl ljmp add stos push movsl out cmp outsb mov pushl mov out mov mov enterw (bad) (bad) pushl mov int3 or cwtl notb adc in ja mov (bad) xchg jbe push add (bad) decl or popa lds fdivs loop pop sub jg (bad) jg jg pop xchg push mov (bad) jecxz fild jb (bad) (bad) (bad) jmp adc je mov stos mov enter sbb insl std pop (bad) cmp (bad) jae and (bad) (bad) incl clc add ror xchg mov loope adc and fisttpll mov aad (bad) (bad) (bad) (bad) data16 loope push push in inc push mov lods mov arpl (bad) (bad) (bad) mov push rcll xlat dec push outsb es mov mov jmp push mov (bad) (bad) (bad) (bad) fstpl popf push cld and addr16 xchg loop mov inc mov jae dec (bad) out push or (bad) (bad) (bad) fsubrl mov repnz pushf pusha (bad) mov adcl dec (bad) pushf mov (bad) in cmp (bad) fdivrl xchg out pop int sub mov fnop (bad) decl xchg fistl popf jnp outsb xor ljmp stos (bad) call pop fyl2xp1 pop sub mov fisttpl cld decl ret mov mov dec es outsb cwtl fimul mov push lcall cmp mov add xchg dec stos aad scas nop decb cmovs arpl mov test clc jge sbb lods pop test repnz add repnz (bad) push std (bad) (bad) js movsl pop mull hlt mov or push bound enter clc das sarb repz (bad) fs jo movsl jmp mov push iret jbe mov mov fstpt incl jge and scas jp push jbe mov pop insb push (bad) cld cmp pop jmp loopne loopne cld (bad) mov scas (bad) cmp xor mov (bad) (bad) jg dec cli mov mov sbb cmp (bad) (bad) mov sub ret pop cld (bad) pushl movsb or jmp sub xor jp xchg aam (bad) (bad) call sbb fcmovnu mov ljmp mov (bad) jb xchg movsb pop outsl clc mov jle or inc dec push les sbb dec scas clc (bad) lcall fs lcall loop pop mov mov and (bad) (bad) mov mov add adc xchg ja mov sub stos jo pop in cmp das dec loopne add pop loope or pop xchg push cmc sar and cli or jecxz into cld mov inc jmp lcall sub in cltd int3 sub pop push jge adcl or fsubr mov out pop jne or rorb jns cmp aam and mov add dec sbb sti jo adc decl (bad) int3 sub (bad) (bad) decl push ja cmp push mov mov add mov sahf js aaa cld (bad) call xchg cwtl ja jne xchg inc lods xchg inc es pop add jge dec push icebp pop aaa adc sub iret jg out or pop mov jl lret (bad) (bad) (bad) mov test lret mov mov (bad) idiv call popf pop pop fs ljmp push inc mov jmp push lods lret movb repz sbbl xchg int js and stos mov lods and imul or sub test or addr16 mov inc mov mov out daa lea dec mov (bad) ljmp stos adc lahf std pmuludq push (bad) inc push not roll lods jmp inc mov add enter pusha sbb (bad) fisttp (bad) pop dec jo jge cmpl lcall xor pop rorb lret sub ss (bad) (bad) fildll shr (bad) jg sahf das and pushf sub pop cmp sbb (bad) incl inc loopne (bad) inc mov xchg cs (bad) (bad) (bad) push dec mov or js aaa inc (bad) (bad) cmp pushf call mov (bad) sub pop std add ds clc fldl mov fnsave sarb sub hlt or jp fist ljmp test add (bad) jmp and in xchg cmpsb repnz pop xchg mov cwtl xor push lcall lret add pop pop (bad) (bad) (bad) (bad) jnp inc or add push cs lcall hlt mov lcall repnz add jecxz fisttpll negl inc popa out mov xchg lahf (bad) (bad) call rcll push xor add bound ret sub xor icebp add (bad) mov cld cmp cmp xchg fcomps fmul push jb lahf (bad) ljmp jp lock sub pop push and (bad) ljmp adc and aad or hlt pop xor (bad) (bad) mov fdivs inc test sbb pop cltd enter mov imul jp clc (bad) and and pop hlt decl adc in mov mov lret inc (bad) out lods jae rclb (bad) cmp jmp push leave clc lock aam (bad) (bad) jg mov xor js cmp or sbb push jae jmp imul (bad) stos ret orb addl fsqrt mov xor inc es shlb scas test inc mov movsb mov shrb call into fadd push incb jae (bad) (bad) ljmp jl fild mov aas or push push stos lock fs mov xchg sbbl inc pop ja into add call in jg or stc popa adc add insb adc les inc inc mov jp push or xchg ret mov sbb cmp jno scas fdivr (bad) incl or lods (bad) dec pop add sub cmpb (bad) jg and test int mov out scas xor stos mov sub daa std (bad) and (bad) ljmp xor lcall push lods lret (bad) (bad) call mov popf popf clc jns add add mov (bad) cmp pop aaa cld (bad) ljmp and pop aaa lcall lds inc mov push lret jne mov rorb cmp scas in into inc adc (bad) lock mov lods cmc lods add jno (bad) push pop sbb sbb nop cwtl repz (bad) mov mov call adc rcr jbe inc in outsb fs out leave xor mov aas mov imul mov outsl xor and cli dec decl sbb mov loop repnz or mov sub nop repnz sbb movsb push leave vmovaps pop adc pop fistpll ret les incb push jne sbb fbstp and imul (bad) (bad) pushl imul inc ret mov and ret popa (bad) jno cld lcall mov mov test or (bad) incl sbb mov or fisttpll sub sahf mov (bad) (bad) (bad) ljmp xor in dec inc (bad) call jae mov pop adc (bad) jnp or and (bad) (bad) (bad) pushl imul or into dec push inc leave sbb jle jnp scas int sub xchg cli aaa ds pusha jae test adc add pop in and mov pusha and clc (bad) mov push hlt cltd (bad) and (bad) call adc add pop cmp ljmp stos test lds mov (bad) (bad) (bad) jmp fs (bad) mov and sub pop aad sbb stc (bad) mov mov mov inc lcall loop (bad) (bad) lcall imul test imul add push in (bad) (bad) mov pop aaa inc cli pusha scas sub mov sub lcall daa inc sbb popl jg popf repz loope mov daa sbb add out add mov jae lahf call adc fcompl jl push xchg (bad) fnstsw fmul add adc mov lahf outsl dec jecxz popf les (bad) call fstpt imul or pop inc fild push cli (bad) lcall push or cmp sar (bad) imul imul add push fistp lcall rcrb pop int ret (bad) xchg pop (bad) mov (bad) lods jg dec (bad) fidivrl or ljmp and lahf mov add insl xor enter test cld xchg push xchg nop (bad) (bad) (bad) decl movsl lods cmp insl mov xor mov and jl insb pop imul or jnp arpl sub (bad) out cmpsb mov vpacksswb push js fnstsw sbb xor loopne lcall inc imul das rep jge inc int mov mov call aam mov sbb pop cmp sti mov push push add pop ja (bad) ljmp imul rorb mov enter pop fsqrt (bad) (bad) jmp std mov and cmp mov adc adc incl sub insl push adc ss (bad) adc mov fidivrl scas int in aad popf clc mov divb mov jg adc incl cli hlt push fsubrp pop mov (bad) daa das add shrl loop scas mov aaa dec lods roll and cld imul in sbb inc add and (bad) jmp lahf adc pop pop xchg add psubusw xchg jmp lahf jb and scas shr mov popf test jno xor jg movsb (bad) call sti es jge adc (bad) repz xchg mov lahf (bad) (bad) mov ficoml test xchg xor adc pop push leave (bad) cmp lahf movsb mov shrl push in mov ret mov mov (bad) mov subl sub (bad) jg add adc push xchg sbb xchg loop sbb (bad) (bad) in pop js test popf lods out push ja cmp pop xor adc sub pop mov aas (bad) (bad) (bad) pushl stc lock cmp lret (bad) adc cmp stc cmpsl fcoms (bad) (bad) (bad) jmp gs mov sbb out xchg roll out (bad) fwait cs hlt fdivrp pop mov sub nop inc lods ss inc loope push mov dec mov dec mov rolb mov sbb das and aad add sarl loopne adcb push pop decl or sbb out lea (bad) (bad) (bad) fnop cld xor sub (bad) sub push mov negl pusha ss push inc mov decl iret sub in das cli stos xor push push add (bad) jle es dec popa movsl push xchg fdivl in lea (bad) jmp dec test aaa pop test call sbb mov and mov cmpsb fs call jb (bad) (bad) (bad) jmp cwtl out mov into mov cmp inc mov ret arpl push inc jns xor js stos dec loop inc imul or xchg lret (bad) jmp (bad) jns jg jae test fsubl jnp movsb pop shlb les mov pop xchg iret popf jae insl lcall add jnp pushf in push push jl,pt mov (bad) (bad) fisttp (bad) mov jb and adc add or cmp in sub test cmc loop jg push out in mov aaa inc inc test ficoml adc popa xor (bad) ljmp push pop and inc hlt mov sahf out push mov lcall mov arpl mov aaa inc (bad) pushl jmp loop sbb enter pop adc (bad) jg loop shl aas mov rcrl push fwait sbb add adc call mov loop mov fcmovnu pop mov (bad) insb testb mov lcall and lds ret (bad) jmp in insb jmp enter mov push outsb inc imul stos or mov inc mov pop aam pop stos fbstp dec aas xor idiv mov inc xchg mov mov adc movsb pop mov ror daa (bad) decl sub cwtl sub xchg fwait lret pop fcompl clc lcall pop add test push push pop xor sbb fisubr (bad) incl pop sbb mov int3 imul xor incl sarl lahf int3 aam jae (bad) (bad) mov sub inc cmp add (bad) jecxz and lcall push stos push mov rcrb cld push add or xor cmp push or add repz popa ficompl (bad) (bad) mov (bad) out jbe pop lods ds sbb and cmp (bad) (bad) pushl cmp jno add pop daa test push sbb mov and pop or ror xor add xor (bad) (bad) call in icebp cmp or loope outsb pop stos ret push test sbb in jg (bad) jmp xchg mov roll loope int3 pushf cmp push je (bad) pop pop xchg dec jle (bad) (bad) (bad) pushl pop fbstp add loopne inc nop cmp das out mov xor cmp shrl (bad) jmp lds sub or loope (bad) pushl push adc mov inc fwait lds pop add inc test (bad) pusha dec imull push lods icebp in icebp test std (bad) (bad) (bad) decl xchg nop or jmp pop cwtl std adc xor pop scas into notl sub (bad) (bad) ljmp pushf mov sub jns mov jnp cmp mov inc sub xor cmp pop arpl clc (bad) call xorl rorb push roll outsb scas into push sub or sbb pop push ds fs dec aam sub hlt pop stos shlb fildll roll pop mov xor ljmp pop lock pop cmp test fstl enter dec gs sbb sbb and in pop (bad) (bad) (bad) (bad) incl ljmp pusha (bad) stc jge aam loop adc aad mov arpl (bad) mov jecxz push or pop (bad) push fsincos or cld scas pop (bad) dec push out and loope lret jl imul sbb (bad) (bad) pushl loopne push outsl imul cmp sub js sbb inc scas cs dec mov and push sti mov lcall and xchg inc mov clc fcompl push inc test or imul cmp imul xchg repnz sbb inc js adc les push push mov sub sahf arpl push (bad) mov lcall xchg push imul fcomps (bad) (bad) (bad) (bad) ljmp clc pop jge add add sbb scas in inc (bad) xor push mov (bad) (bad) lcall push cltd enter (bad) hlt jne sub xor cmp sbb mov (bad) cmp aad cmp jbe jle mov adc cld out sahf inc insb movsl sub xchg cmc ret das and sbb push rorb mov jg push bound xchg aad jge (bad) (bad) out cli mov js sbb in add or stc call arpl pop mov (bad) fiaddl lds lds xchg scas cmpsl sub jecxz movsb adc mov cmp dec add adc mov out cs (bad) (bad) stc push out scas or jl aad sub or sbb scas sub dec fidivrl jecxz mov (bad) (bad) jmp sub imul pop mov sub push jno fstpt into ss mov and (bad) (bad) (bad) incl dec fdivs cs nop jb sti imul cmpsb imul push and push mov and movntq decl insl jmp cmc lock ret add enter sub sbb incl sbb stos or andnps decl dec das imul sbb loopne (bad) (bad) (bad) jge andb jbe xorl cld jb lret or push xchg mov into es lcall and or mov sbb outsl int mov paddusb (bad) (bad) inc mov jge stos mov in sub push sarl push jnp xor cmp cmp sbb jb pop push icebp inc cltd pop (bad) mov xlat int3 mov rcrb xor cld mov add add (bad) jnp cmp sbb mov jmp (bad) lods (bad) (bad) jmp lds (bad) loopne stos dec leave stos addr16 cmp iret xor das movsb adc mov push xchg dec repz xrelease (bad) decl cld bound push xor mov rcrl cmc scas lret inc hlt sub (bad) incl pop cmpsl fwait push jb mov mov jg das lods cld negb scas arpl pop xor (bad) (bad) (bad) fucomip sub pop shlb sbb movsb fildll add dec xchg xlat xchg and sub pop rcrb imul ljmp or sarl cmp ljmp jns scas push cmp fiadd add loope (bad) (bad) jg pop xchg or add xor pop (bad) jg lds xor pop adc pminsw xchg test adc and xor sub xor pushf push mov lcall and jmp inc loopne sbb lahf xchg jnp xor decl clc adc mov fistp cli (bad) (bad) (bad) jmp lret aad icebp pop cmpsl push and cmpl fcmovbe or pusha insb pop jbe es add adc (bad) mov fldenv imul xchg lock lcall pop outsb mov fiaddl (bad) mov js xor dec test mov negb inc adc lahf gs decl and dec popf jg inc (bad) fidivl in pop das sbb fldt mov pop bound adc and dec cs sbb js cmp cmp decl int imul mov jnp xchg jle xlat sub (bad) (bad) fcoms sub movsb adc add repz sbb cmp sti or imul sub inc xor je or pop lods adc (bad) (bad) (bad) lcall insb mov jae aas mov dec popf lcall aam ljmp and adc ss xor fbld pop add (bad) lcall inc push add inc mov lret clc add inc inc loopne inc and (bad) incl mov int inc dec mov (bad) (bad) inc fild les lods jl fsubr xchg inc dec frstor xchg (bad) (bad) (bad) jge cmpsl pop mov add inc mov push nop jb sahf ret mov pusha dec inc jmp mov adc bound enter test (bad) (bad) (bad) lcall add inc cmp das jge (bad) xor push pop scas icebp adc out mov mov xchg loopne ret or inc (bad) (bad) (bad) (bad) in lret mov fwait out aas pop sbb repz mov jp in xchg xor cs ljmp (bad) (bad) decl mov pop rolb push push inc cmpsl sbb push and lds icebp in xlat bound or xchg lock sbb arpl adc jno repz xchg pop outsl cmpsb mov add pop push adcb pop jge scas push cmc lahf cmp sub push std pop fs mov xor mov xchg js xchg imul pusha push std or adc xchg jp jnp push xchg ret cmpsl cmp call icebp sar (bad) (bad) ljmp imul fwait cmp ds daa xchg mov xchg stos stc cmc leave fisubrl test adc mov cmp andl aaa cld mov loopne pushf mov in stc xor adc cmpl aam (bad) incl xor or es (bad) cmpsb xchg mov or dec inc call xchg mov adc push sar dec mov enter or mov cmc pop push mov push push out xchg push push loopne aad icebp mov je mov call mov push shll pop out push xor adc loopne in or (bad) call xor mull pop jge xchg movswl push dec xor adcb (bad) call fcmovu cld mov jmp adc sub (bad) stc aad cwtl mov jo adc ljmp mov cmp add lcall mov repz add lret (bad) ljmp (bad) (bad) insb ja stos push pop mov mov mov mov sub loopne (bad) lcall les pop stos adc and pop mov fucomip sbb push pop (bad) icebp cmc push jne fisubl (bad) cmp nop pop in push in nop and dec and fdivl xor (bad) call or jmp inc sub (bad) (bad) jmp or jecxz in xchg imul movsb in arpl gs jnp push cmp sbb pop jmp fadds (bad) incl loopne or cld mov mov jg pop test xchg call ljmp push xor out dec mov sarl scas jae add test (bad) in incl dec orl ret std iret ja xchg notb adc fistpl sahf add mov cltd (bad) test mov imul (bad) jmp sub xor jbe lock (bad) or add test cmp add ret pushl lods fdivrs fcmovnu cmp aas (bad) out cli inc push adc adcl add addl (bad) lcall nop inc jns push imul xlat fcomip xchg adc js outsb cwtl movsl inc add ffreep fstl sbb aaa sbb xchg mov aas cmp mov mov cmp xor lahf inc mov fild dec mov and (bad) pop inc mov xor std ljmp xchg icebp sbb adc aas fabs cwtl xor lcall add sbb add jl std jb cmpl jg aaa and xor push hlt popf mov jp adc (bad) jg std lret dec fcompl movsb cld fldt push int3 aas mov mov jg pop jmp out mov in cmp cmp call mov adc dec xor xchg (bad) mov sbb dec lret xchg ja (bad) jg and mov movsb fwait sub leave iret lcall mov add xchg lods pop and out repnz outsb arpl inc mov sub sarl or (bad) fcomps (bad) int3 pop adc add aas pop fisttpl lret fwait lret pop aad incl std fstl (bad) cmp fucompp out scas mov pop js lock or rcr (bad) (bad) mov int3 sti (bad) cmp out subps popf xor sub push nop je push and arpl jg pop jg cli push ljmp lret shlb and inc call pop xchg pop jg lock mov cmpsl push ja xchg jns cltd in dec or fnop lcall jne gs mov dec mov sarb pop mov decl in lahf mull ss or cs in jo jb inc add add cmp mov jo add dec stos sub std insl cli cmp int adc (bad) jmp cmp stos mov lahf sub add jg fwait cmp push into sbb xchg xchg bnd pop inc clc lcall mov repz sahf add test mov sub cld pop mov nop loopne dec jo (bad) mulb cmp cli lcall cltd frstor and pop rolb mov sub jle or mov cmpsb loop xchg xor mov test outsb rclb mull repnz subb icebp ljmp adc inc mov pop mov add mov pusha stos mov rcr jg pushf test (bad) (bad) mov mov cld paddq inc xor insb shrl xlat ljmp mov mov (bad) gs add add shlb mov ret inc and pop mov jg mov stc int3 leave jp (bad) pushl cmp cs (bad) rorl clc adc mov push xchg hlt (bad) lret pop pushf shlb jg dec mov (bad) cli mov push pop dec fstpl mov mov inc cld pop clc lcall fildll (bad) sti inc cmp mov cmpl pop adc push jg or adc icebp push inc vandpd leave adc (bad) bound nop out clc (bad) (bad) jmp push adc pop mov or pop jp adc (bad) insl lret cmpsl (bad) jmp add sbb mov cmp (bad) incl ljmp pop add push push movsb pusha dec (bad) std and xor ja shr push and stc test xor es (bad) (bad) decl sub push mov dec or rcr es push iret xchg cmc pop pop mov imul call push sbb sahf mov or test das sub inc push dec pop or gs pushl add aad jg mov pop jg inc imul dec mov sub fisttp pop nop (bad) mov fadds pop sar jmp lret mov jne arpl jns popa pushl sub add incb sarl or js lds xchg and fwait cwtl aam in push dec dec or push aam cs cwtl (bad) dec outsb icebp mov incl pushl repz test sub ds (bad) mov pop in jmp xchg mov sarl sbb mov pop pop xchg ds mov fnsave sub mov inc cld int xchg add sbb dec cmpsb cld pop (bad) incl sbb inc leave insl mov xchg (bad) jbe fildl pop jo int3 dec movl pop adc lret mov add loop inc adc bound pushl xchg (bad) ljmp mov dec and data16 call aad (bad) (bad) fistpll pop fistl ficom (bad) (bad) (bad) (bad) mov cmc mov pop adc ds loopne sbb jbe (bad) push lcall add (bad) (bad) (bad) jle outsb mov pop and stc cmpsb into sub mov sub mov mov mov dec adc pop adc add xchg mov mov aas (bad) add mov (bad) (bad) jmp pop add mov or (bad) (bad) les push fild xchg push pop sbb (bad) call push das sbb ds mov (bad) (bad) lcall cmp cwtl add cmpsl ja pop mov lock mov jg or movsb (bad) aam fnsave pop fdivrs mov jg imul (bad) lcall pop sbb sub scas fcoms adc mov cli mov jns xor xchg (bad) push dec stos aam fwait pop pop (bad) (bad) ljmp int xchg hlt xchg and lret sbb mov loope pop enter nop imul inc adcl fisttpl push mov xor (bad) repz lahf lcall ret cmpsl mov adc mov (bad) (bad) ljmp cmp inc pop aad decl mov dec sbb stc pop scas rclb pop adc clc cmp push push in (bad) adc cs decl movsb mov inc jl nop jbe mov mov lods jo xlat in cmp (bad) (bad) mov sub cmp loop adc call dec adc adc xchg pop mov push mov cs push xchg aam adc insl cmp (bad) call enter repnz push std popa pop cld rcrb es xchg xor arpl xor lcall dec pop mov add jmp int3 sbb and mulb push jbe fsts cmpsb (bad) cli (bad) and (bad) mov push rcrb cmp mov lcall mov arpl xor scas std sti xchg (bad) (bad) ljmp mov lods pushf repnz jmp inc (bad) adc ret push ds jo sub lahf jno mulb or aam (bad) (bad) mov fs imul push andl xchg movsb and pop mov jae dec sbb jl xor xor cld jg sub mov mov sub (bad) (bad) pushl lods lahf mov divl inc sti pushf dec add jge in (bad) cmp rcl or (bad) mov xor lods add movsl sub fwait std gs fcomps mov ja dec (bad) inc (bad) out cmpsb (bad) test sub rcr shlb add xchg aaa ds inc hlt sarb icebp (bad) call xchg popa push out jle rcl cmp mov inc jl xor xchg mov dec (bad) (bad) (bad) incl xor mov add ret bound lds mov sahf or (bad) (bad) decl cmp cmp cmpsl jns ss aaa jbe pop gs test mov sbb imul sub inc xor aaa dec sub fsubl push lods jnp pop (bad) (bad) (bad) call stos mov and out popf pusha call cltd loope test std pop hlt cwtl je xor int3 clc call bound cmp mov das (bad) jg or and les jne push pop das nop cmp sti sbb rcll (bad) (bad) (bad) lcall add loope mov pop je in xchg push fsubs sub pop orl xchg test (bad) lcall scas mov movsb jp mov and (bad) (bad) je mov inc mov push sbb push repz pop (bad) cmpsl out cld dec or cs jg xchg push in cmp ret ljmp es pop sub aaa out jmp out clc sbb push cwtl cmp int mov test pop lds mov mov insb in insb dec push stos movsb mov (bad) cmp arpl xchg daa sti mov bound bound jecxz fcomip outsl cli adc dec sub jb pop mov inc icebp mov jmp adc sbb test fnstsw stos out jmp mov xchg (bad) call hlt fnop stos in push ret mov fbstp lods mulb test call outsl and sbb (bad) jo ljmp and gs insl cmc aas adc push push scas ljmp (bad) jae (bad) jge sbb (bad) fbstp mov cmpsb fmull add push pop int3 outsl clc (bad) call int xlat xor dec fiadd (bad) jmp xchg mov mov (bad) (bad) ljmp or mov and rcr jge das sti in inc sbb cwtl lock sti xor push outsl popa push sbb sbb add inc and ljmp jle or lods mov mov mov mov (bad) mov mov push dec sahf (bad) lock xchg pusha in xlat ret jge mov dec idivb jmp fistpl push testb and mov test jle add repz cmp sbb testl (bad) (bad) (bad) call add fsubs sbb mov cmp jb rclb mov (bad) sar (bad) lcall dec jno imul mov cwtl lcall push or add (bad) xchg mov scas jmp loop mov cmpl mov stos sahf test inc sbb inc cmp lahf sti loope daa cmp add mov sub enter mov (bad) (bad) (bad) jg (bad) adc test inc (bad) data16 pop mov out stos lahf iret jl loop (bad) call es std sbb (bad) incb xchg insl pushf aad jne test mov aas enter mov push (bad) (bad) in popf xor fimul or insb jmp cmpsl pop (bad) (bad) (bad) (bad) jg dec stos ja cld mov xor xchg test rolb adc test mov cmp (bad) lcall (bad) outsl and sbb xchg fcmovnu scas fdivrs cmp dec mov clc stos (bad) (bad) (bad) in add push cltd mov (bad) cltd (bad) mov mov mov jne xor (bad) (bad) incl pop mov and jl fiadd dec sbb xchg add add sbb and (bad) mov mov dec dec xchg jg fadds xor mov (bad) (bad) jg cmp das fdivl pop test xchg ja nop push in rol mov (bad) divl (bad) (bad) pushl add test or lea dec test cltd (bad) (bad) jmp test jp lcall popa and jae jecxz (bad) (bad) (bad) dec flds sub mov xor push dec inc repz lret aam lcall xlat popl cmc (bad) ljmp pop mov jnp ds test (bad) (bad) fstl pop xor int lahf test and hlt adc xor adc (bad) (bad) in xchg ficomp fiaddl jp jp out push mov dec xchg leave mov add mov dec adc fstps sbb mov jnp and mov (bad) decl popa je hlt (bad) mov scas sbb lret (bad) sub (bad) (bad) (bad) mov add and mov or in or mov cmp movl jp subps xor loop,pn adc ret inc int3 sbb cmp or mov std movsl push pop xor lds cmp or movsb decb pusha in js stos lret jmp (bad) (bad) out or gs mov adc out fdivrl mov inc lcall mov mov sbb push movsl pop or ljmp sbb mov aaa ret dec push nop fisubl jg dec std add dec mov jge gs movsl xchg xor ljmp sub add adc jp and fiadd pop or mov and jecxz xchg push mov mov cs inc test inc inc popf or and call dec cli subl je adc inc adc pop adc (bad) dec subl (bad) mov adc (bad) mov fisubl inc gs xlat repz inc ja (bad) lock decl adc jmp or in out (bad) dec mov lret test pop or (bad) mov (bad) fdivl push inc fs and add addl pushf mov dec mov pop mov (bad) (bad) (bad) (bad) jl (bad) lds test xlat test push mov or mov mov push mov xlat das in rcr sbb out js (bad) cs call lea sub dec inc cmpsl mov sub sub (bad) pushl dec jae mulb adc std mov (bad) (bad) out leave dec dec aad lret jecxz lods (bad) (bad) (bad) (bad) inc adcb push (bad) adc out jnp movsb push outsl jecxz mov jmp lcall loopne (bad) (bad) (bad) decl mov dec lock and dec xor cmp (bad) or (bad) (bad) (bad) push push aas addl push add sub outsb inc out inc out adc loopne mov lds pop xor pushf imul pop and bound add or add ljmp dec sub mov jb (bad) (bad) ljmp inc dec push dec cltd xchg inc ljmp jp sbb or mov mov cs icebp cmp push into aad push adc cmc leave lcall pop jp sub (bad) (bad) pushl pop sub dec mov pop test add insb xchg loopne ljmp stos popf mov enter or sbb sbb mov mov and int3 lea popa inc mov or cvtdq2ps (bad) mov cmp repz popa (bad) mov in sti (bad) (bad) (bad) (bad) ljmp loop loope or repz xchg enter divl or ret (bad) (bad) (bad) lcall dec repz ljmp push pop mov xor shrl (bad) (bad) (bad) ljmp pop mov or clc ljmp mov mov inc (bad) (bad) (bad) lcall lcall mov mov xchg insl loope pop lods loope dec ret lea hlt pushf push (bad) mov lahf (bad) lcall cmp adc pop adc or adc cs into add mov (bad) jl mov pushf cs jl jecxz inc sar jbe adc fwait and lret jecxz fild adc popa pop js in pop pusha rcl aad stos dec addr16 (bad) (bad) call imul lret cmp jb pop pop add jmp mov xor (bad) pop dec lcall jecxz lret lock pop mov cmp cmp sub dec jnp jmp fucomip or out js add mov (bad) mov jo (bad) (bad) dec fidiv notb push mov push ficompl outsl mov loopne lea pop mov stc rcrb push jne popf xchg out sbb xchg push mov (bad) jmp call fwait xlat add mov ljmp jg mov jecxz pushf call adc mov int mov andb adc (bad) (bad) decl sub or mov xchg push mov loopne jmp sub sbb jge inc inc (bad) and inc (bad) mov or push inc xor jae cwtl icebp (bad) decl fildll gs cmp xchg xor pop (bad) (bad) pushl mov fs mov (bad) push pop pop mov xor aas mov jno notl outsl addb mov enter add std push rolb mov ja sbb inc adcb mov and test (bad) (bad) jmp adc sub add std pop add sub pop aad lods inc cmp in jg pop pop sbb stos xchg pop xchg rcll xchg adc mov decl sub subl and add (bad) push (bad) xor cmp adcl fsubrs ljmp push xor or push sub mov fcomip fnstsw or sub in jbe mov (bad) (bad) (bad) jmp push out mov xor enter push aad outsl inc (bad) movsl out jmp mov jmp stc int enter psubsb jecxz pop cld sbb mov sub cmp stos add mov dec adc xor add pushf mov pushl push rorb sbb pop xchg dec cmp push cli sahf jne jg cli test adc adc incl fistpl adc gs inc gs aas (bad) mov hlt stc mov (bad) (bad) pushl pop ret sub (bad) inc mov push add pop daa xchg iret ljmp pop xchg mov push addr16 adc mov lcall popf insl lods adc dec in push cli cmpsl stos iret or incl inc jnp mov mov jmp fwait dec mov ja adc test pop jge add and xchg or ror adc mov jno inc mov jg inc mov dec adc mov test hlt (bad) (bad) decl das cmpsl roll inc nop cmp call xchg sub mov dec inc orl mov lahf add push adc sbb and mov pusha push rcll popa sbb std pop aam ljmp adc shlb inc mov aam jmp push (bad) jg mov lret pop int outsl ljmp das stos push pop ja jp sub cli xchg jmp clc sbb jmp (bad) cmp out dec scas cltd sbb cli (bad) (bad) (bad) jmp enter out jmp pop (bad) jbe (bad) push sub jno enter das adc push cmp dec (bad) (bad) jns sbb das inc leave scas and stos mov cmpsb sbb decl or ret ret mov clc mov cld xchg (bad) mov pushl lret dec sub xchg sbb mov sbb enter push xor push lods rcpps (bad) (bad) call pushf xor jbe clc mov cmp cmc pop pop add jnp dec dec out fidiv cmp mov jne jg lret and cmp mov xchg fistpll (bad) (bad) jg mov adc mov iret mov stos push daa sbb dec (bad) (bad) (bad) incl loopne int3 arpl jle and rcll or push push or (bad) (bad) (bad) ljmp mov add xor idivl and sub dec mov mov dec mov sub daa sbb cmpsl add (bad) (bad) (bad) pushl pop adc dec xor push xchg pop jne arpl es (bad) aam fldenv add jnp jae scas aas (bad) lcall fisttp ljmp fistpll ficompl jb jns fwait cli (bad) (bad) ljmp dec cmp jmp mov bound paddw (bad) ljmp mov (bad) mov sub inc or jge or or or add mov outsl xchg shlb pop insb pop xor jp xorb (bad) jmp dec mov lods sub imul mov cmpsl xchg dec faddl movsl lods sarb in into inc adcb outsb fbld cmp imul in sub (bad) (bad) pushl mov pop cmp cwtl mov push ds daa xor cli push inc push scas stos xchg int sar push mov lret daa insl arpl loope push push jmp decl cmp dec or (bad) call xor outsl js jge pop lock arpl testl decl jge cmp xor inc stos jb (bad) fistl into (bad) (bad) (bad) call les pop or loope jbe jne je xchg sarl (bad) (bad) (bad) call xchg dec pop outsb push mov je jp adc adc jb fstps ljmp jns out jae mov xor imul dec cwtl (bad) (bad) decl dec jle ja out jnp push sub dec inc sbb lahf cmp inc loope in stc sbb cmp sub pop outsb div data16 js mov lea dec jns mov jg frstor dec push fistpl fcmovne lret jmp xchg pop mov dec ljmp xchg and pop lahf sar and mov imulb xlat push (bad) mov inc clc lcall mov add (bad) ljmp scas outsl call xor pop sbb pop add add arpl xor out popf and loope jg call dec mov xchg add lds jg inc inc jmp adc (bad) (bad) (bad) (bad) cmp and push repnz nop inc loopne mov bound xor rorl (bad) call inc adcl cmp int mov xor jecxz inc fs (bad) xchg jg pop inc pop add push adc sub mov pop and xchg cmpsl je loopne insb add push inc push (bad) and push inc push incb and out mov aas inc popa sarl pop cmpsl mov jne lahf lods lods xor fistpll or pop add dec jo push (bad) psubb xor cli pop mov (bad) out add add adc mov or (bad) (bad) incl sbb dec jmp sbb mov test outsb (bad) jg add repz std cmp iret sar and pop add (bad) or incl inc cld out jp jmp pop ss pop adc imul test scas push adc jg push or pop mov add jmp pop xor jne add and fdivl lock sub mov sarb cld ljmp and push addr16 mov ja repz shrb fist mov push jg pop mov (bad) fisttpll pop mov lcall (bad) lcall sbb rol xchg xchg outsb (bad) adc adc (bad) push repz out push push and mov (bad) jle out bound mov mov outsl fidivl mov dec xor jbe scas pop ss jmp stos push mov outsl mov dec cmpsb pop cltd cli (bad) jnp in repz xor push decl pop clc add aaa xchg repnz cltd mov arpl lock lcall and add decl jnp or sbb hlt scas xchg push mov and inc push (bad) call aas fadds xchg sti inc stos cmp out (bad) jg fisubr pop mov icebp jge push (bad) sbb jae imul dec (bad) decl push es ss jb ss lock mov and add add pop pop test pop scas sbb and (bad) mov push fcmovb stos add or sbb (bad) adc and push fnstsw (bad) (bad) (bad) decl pop pop lret inc sbb mov aam and add mov loop xor decl xchg subl lds inc jns (bad) les sbb and dec (bad) mov (bad) (bad) incl mov xor out icebp or jns mov fldenv mov pop fs (bad) (bad) lcall (bad) add push mov adc mov mov repnz loop lds (bad) lcall nop lret jno dec dec (bad) scas out ret inc cli arpl or (bad) call add mov daa cmpsl (bad) xchg cmp arpl pop lcall jecxz push inc jo and push bnd or mov xor imul sub push stos data16 decl or adc push or or mov stos pop imul add lahf pop ljmp ljmp push dec test mov cmp sub mov and stos jg add loop xor xchg jb sub fcomp dec dec add incl mov addl stc jle jp (bad) decl sbbb neg jecxz or cld pop jne fcmovbe jg out call xor (bad) neg (bad) sbb and lcall lahf (bad) jnp xor test jae adc adc push jmp mov push fild enter mov mov (bad) (bad) ljmp dec jb push test in ljmp jg pop jo (bad) or jno xor lahf fist mov pop cmpsl outsb bound push (bad) jo jno movsl lods pushl inc inc pusha push lahf loop mov ljmp mov stos jg sbb add jnp (bad) (bad) inc aas inc outsb sti dec sub or xchg fcmovnu sub add pusha inc jle cmp ljmp adc rclb and ja (bad) sbb pop addl pop adc push mov lcall lahf aad int lcall mov inc add inc jne test jae lock mov mov sarl fnstsw xchg add addr16 xor add std and rol cmpsb pop sub cmpsb sbb mov inc inc sub test and rcr jae pop push aam stos icebp call pop xor (bad) ds mov test push mov fistp push sbb (bad) mov bound loop pop (bad) (bad) (bad) call fbstp adc shl popf xchg out inc mov xchg out bound out mov lcall xchg sbb int or mov enter incl adc push mov jmp rcrb mov mov mov pop inc ja (bad) roll lcall data16 mov push stc in test js cltd add xchg shrl inc test cli aad fcmovnb imul xor rorl mov inc or jg adc aas pop les (bad) lcall lahf mov les cmpsb (bad) jne mov in adc clc pushl xor adc (bad) (bad) (bad) jg mov sub sub loopne inc adc xchg sub les scas jle pusha jno push in pop lds pusha push mov ljmp pop test test add xor push inc (bad) (bad) (bad) (bad) fsubs das leave xor movb and idivb add inc mov iret das test test cld in sbb pop test mov fistpll push rcrl jns dec pop out pusha jo (bad) mov sbb mov and lods pop into in mov add (bad) js in xchg mov add sub or pop mov pop roll fs mov rolb xor (bad) call nop repz (bad) pop pop pop xor cli scas es fcomi stos in mov jnp sub data16 jg add cmc lea outsl lret add cmpsb (bad) inc inc cmp or xchg pop add push mov js leave push loope lock add mov fild sbb jg pop xor lcall or (bad) lcall mov mov mov jp mov add daa pop outsb or cltd lahf jmp xchg inc jmp sub imul insl adc fildl pop dec xor call icebp sub lcall (bad) scas cli call cmpsb push imul in or inc sar mov mov xor (bad) (bad) mov cmp xchg lea add mov cmp ds add lcall adc imulb aad pop aas das add mov xchg dec (bad) ljmp ret sti lods push dec mov pop (bad) mov (bad) repnz dec dec jo (bad) jg shll sub aas cmpsb (bad) or (bad) jmp (bad) (bad) call test push mov mov rcl cmp cmp mov mov popa dec mov push xor test push stos enter push push incl pop add and ja (bad) (bad) ljmp mov hlt mov lret inc cmp imul xchg or int3 (bad) push push adc cli (bad) clc cli dec out push cmp incl fsubrs pushf dec adc pop mov sub or jb (bad) dec in pop popf fs pop adc lahf in daa xor shrd loopne inc clc (bad) inc pushf icebp lcall cmp lret inc mov call nop inc xorl test mov inc inc mov adc stos gs or sbb cmp ret jg add and or xor xchg inc push pop in daa push inc (bad) (bad) cmp int3 into pop sub sbb lret cmp add add or xor push aad incl cs cli pop test pop call mov pop mov out push sbb push and scas (bad) arpl ret pop das xor push arpl push dec call lahf inc lret mov lock (bad) decl cmp fimul inc dec cmc dec das loop adc das loop pusha sub pushf mov fcmovnu dec xor stos (bad) decl sbb jle adc adc jae push inc add clc mov lods imul push pop mov push or (bad) ficoml (bad) push scas insl test rclb xlat stos push and pop rorb mov aas dec jmp jg inc pop add push test sahf idivl sub cwtl add ljmp push outsl pusha mov (bad) and xchg das bound mov enter data16 fcoml inc cmp jg adc mov mov jmp or in jnp jbe sub push mov inc fistp les add (bad) call or lods sub jb popa out nop sbb cmc pop jp dec jo insl pop add push adc and sti mov (bad) (bad) (bad) incl cs mov xchg into fimul movsl jae movsb push mov dec ret push inc icebp cmpsl add fnop sar (bad) in ljmp ficompl mov out pop mov fsubrl cld call and inc aad xchg pop shrb cmc scas mov ret adc push nop sarl pop xchg mov or cmpsb lahf and pop incl fwait mov (bad) fild and into xor mov fs orl stos add cli aas fadd (bad) inc dec loopne insl jo add cwtl in xor stos pusha pop cld (bad) jmp jno mov jmp push inc push xor gs (bad) (bad) call hlt sbb test fs mov adc dec cmpsl sub and shlb push ret ret adc jp dec bound mov pushl adc dec xchg mov cmpsw int dec leave push (bad) xchg mov rcrl (bad) call push sub dec pop (bad) pop jno push add fcoml xchg push stos lret dec pop jae xor (bad) (bad) decl xchg mov or sbb loopne push es jge (bad) mov and outsb jge jmp (bad) (bad) (bad) push jns aam mov sar cltd std xchg aad lret (bad) jecxz mov push add mov or decl xor bound lods cmp repnz pop ljmp inc push stos or shl bound or dec mov jmp dec and stos adc (bad) call repnz icebp pop insb and mov incl aas dec lcall (bad) inc push fmull (bad) (bad) (bad) call push call lods fwait std out and lret push xchg xor pop or mov movsl pop jnp jmp jl push adc mov fadd sbb (bad) (bad) ljmp cmpsl push mov fistpll sarb adc ficompl cltd cli mov jp (bad) fs jmp call std mull inc and jae xchg (bad) test adc (bad) (bad) (bad) ljmp jmp xchg in push push lods jp or adc pop movsl xor and (bad) (bad) (bad) call mov das clc ret scas cs xor xchg or es sbbb (bad) decl insl mov mov test imul daa fmul es cmp adc lahf lock mov xor push jno push sahf arpl xor push test mov jbe aaa (bad) (bad) lcall clc (bad) lahf aas dec je xor cmp std jno shll dec mov jns push mov ja push inc jg push sub pop outsb (bad) sub test adcb mov jne pop jno,pn xor sub xor lcall rep jnp pop js cmp (bad) jo (bad) xchg inc cld ljmp and std test fs dec pop adc aas jg sub call das bound loop daa ret cwtl daa lea xorl and and mov (bad) aas push sar pushf (bad) xchg push jge lods adc in aas mov pminsw mov add test enter push repnz sbb (bad) decl cld sbb ret imul add jmp je fistpll ss ret mov xor and jmp std incl aad andl lret sbb pop push pop cmp cvtps2pd movl and or cld push push cmp push iret sub aad mov pop subl aam and (bad) adc cmp jle adc xor jno lahf std jg or pusha loope mov fsubrl inc or sub (bad) pushl mov adc cmpsb sbb pop xor (bad) pop int3 xor mov mov xchg (bad) (bad) sti or xor cmp inc insw inc (bad) (bad) (bad) mov fsts adc or lods jnp adc outsl out adc (bad) (bad) fistl mov jecxz sbb sub test test add add repz loope jb or (bad) (bad) inc jl dec fwait in fs loop fnstenv adcl (bad) xor std andb sbb (bad) lcall mov (bad) xchg push cmpsb mov push add xchg cmc das (bad) jmp or add loop lcall das xor cmp imul (bad) (bad) mov test mov lods sub pop ret (bad) pop cmc cmp push mov mov cs dec push mov mov xchg insb jo xor mov jg in xchg xlat mov and jecxz jae inc daa lods (bad) cmp imul add and inc dec inc xor xchg das orb fwait clc add jg mov insb (bad) es negb jg add (bad) (bad) mov test test (bad) dec stos sarb cld jmp push add add stos push enter in cmp jg call cli push pushf inc out push imul imulb xchg pop adc cs stos jne imul cmp insl push add sti xchg leave mov add dec fs call pusha mov dec out or (bad) fcomps sbb or mov inc mov les inc daa test test sub dec fwait mov sbb or cld (bad) push stc xchg pop adc (bad) (bad) in jno mov inc (bad) jnp and lret fs ds test (bad) (bad) mov aas lahf xchg les cmp popa popa lock call stos in pop loope sub cmpb fistpll pop push fistp (bad) loop push adc push lods ret pop daa ja jl push fmulp or inc stc out into and push lret push jg xchg shlb jmp and aad push adc adc push jb (bad) incl shrl cli push inc inc mov mov add and pop and xlat leave add pop sarl loope jg cli xchg pop inc cmp aam ja dec adc pop lea push leave pop push mov sub mov push aas (bad) decl cmp pusha or add cli xor outsl adc mov mov cld (bad) (bad) (bad) fnclex push jmp out gs rcll xchg or lods pop pop icebp mov and ljmp mov mov or push popa xor dec gs out and push sbb sub mov adc pop fld loop (bad) call pop inc push sbb test inc mov mov stc incl xchg fnstenv lock mov (bad) push clc orb dec and repnz xor aad sub repz add jmp std pop dec sub or jg mov and dec sub add rcrl fnop ret push gs outsl repz sbb sbb mov push leave mov bound jg orl pop (bad) (bad) (bad) pushl les dec cmp dec mov scas xor test cs push iret mov pop lock loope mulb xor test cmp sub pop inc push fidivrl lods call ret jg adc js mov aas (bad) (bad) (bad) mov popf mov mov (bad) scas ss popl jle add mov cmp mov aaa dec xchg (bad) les jle inc inc sub test cmp into cmp sahf pop rcl sub lahf (bad) decl sarl jne scas rcrl fisubr or pop inc adc push lcall fwait call rcl xor or sbb out loop cmp jg inc mov push daa jg xor adc adc mov adc mov cld mov dec (bad) and fcomi (bad) jae add das push fbld push imul aad jmp addl sub ja push out sbb rcrb pop aas push add mov mov cmc (bad) (bad) jns fiadd push adc jmp xor inc sub pop xchg xor lea inc decl mov (bad) call push aas mov and jp pop and pop pop push mov add leave mov je adc (bad) mov (bad) push mov mov add pop cli decl icebp sub push push stos jne insb sub push mov xchg icebp or fstpl mov jmp (bad) jg pop mov cmpsb (bad) and cltd add pop push sub (bad) xor les stc ja iret xor inc aas add mov mov fs clc (bad) (bad) lcall pop bound loope je lods or stos dec dec das divb push mov pop mov (bad) push addr16 fcomip fsts ret mov mov lcall (bad) aas mov mov add push inc mov test jb clc or mov jbe push rcll sbb mov mov sub dec and lahf push (bad) decl ljmp push mov mov fisttp (bad) pop test popf cs xchg dec rcrb mov leave mov cmpsl mov int3 inc xchg adc dec inc pop mov push decb stc xor (bad) cld ljmp push mov (bad) xor (bad) notl repz mov scas cmp cs mov lea out pop mov push gs rorb add lahf lahf lcall (bad) pop fidivl sbb push jg fs dec and sbb mov and dec std loop jge or lcall adc pop aad cld (bad) (bad) lcall xchg in inc js data16 rclb jb (bad) dec outsl ja aas lahf xor es sbb decl jp jle push mov ljmp hlt lcall inc push cmp (bad) ds fldl2e inc mov and xor (bad) (bad) decl pop inc add jge (bad) cmp pop lods xor loope sahf mov jo das push mov sbb ret inc xor aas pop popa jp into mov (bad) aas inc imull repnz cmpsl lahf and jo outsl push cmc push enter adc lahf pop (bad) loop push (bad) jmp mov push fstp add mov (bad) (bad) (bad) ljmp loop mov push jle mov scas mov xchg mov imul mov shrb shrl icebp decl imul jg (bad) (bad) mov push pop sbb (bad) fsubr fcoml pusha (bad) xor inc (bad) stos (bad) (bad) ljmp rolb sti cmp ror mov add mov jle xlat jmp push pop mov (bad) jl clc pop add aas mov mov into in xchg int pop sbb test mov mov sahf mov sbb jg jl incl fistp jns shrl push jae outsl adc negl fcmovnu cmc (bad) (bad) (bad) call aas es in (bad) jmp sahf pop daa in loop mov pusha cmc call lods mov or pop push and and popf test mov mov enter xchg inc movsl aas dec adc jo pop pushf std sti push movsb (bad) (bad) in jae and fs push jbe or bound jne dec callw das and pusha push add (bad) call cmp addr16 pop cmc cmpsl ret addr16 push mov xor sub mov mov ret lea add test inc gs adc jmp push pop (bad) inc cli or mov cmpsl test sub sub je roll mov lahf push roll or jg xor test pop test incl (bad) cmp jns pop (bad) jnp mov call adc or jmp cmp cmpsl test push cli das (bad) loopne lods bound dec cld sbb mov pop adc sahf jb lret push add dec lock dec les pop scas jg pop xchg and add push and lcall jbe inc jo clc xchg xchg aas mov pop dec mov push adc (bad) jmp out mov inc cmp pushf (bad) and pop push xor pop pop push and inc fwait clc lcall insl inc ds dec dec cmp mov ljmp (bad) sbb fisttpl ret pop enter pop adc cld ret cltd es in clc dec clc (bad) (bad) decl mov lods les adc cmp xchg addb sbb or ja out mov xchg or (bad) fldt mov pop dec test dec icebp and popa sub cmp ljmp jnp push insb xchg dec shl cmp cld scas xor or mov cltd sbb rorl and pop jmp or push andl (bad) stos and (bad) jg lahf sub lret mov mov cwtl pop xchg add (bad) mov stos and in and js dec cmp sbb (bad) lcall dec jecxz hlt inc call or lahf dec sub jg adc push addr16 sbb les ljmp movb mov nop push pop cmpsb xchg adc (bad) jmp loopne pop test adc fiadd adc lock fwait pop and add (bad) fisttp ficom jecxz sbb fidivr popa push dec fistpll (bad) ljmp data16 jnp fwait cmp jno cmp mov push out leave or pop xchg or call cmp push call and and push jbe xor cli push xor clc mov adc sahf fildll sub add (bad) cmp fwait push jecxz (bad) (bad) in fisttp mov xchg mov (bad) jg test fcompl nop clc (bad) cld pop leave and (bad) (bad) clc jo popf jne gs das mov push jle mov push dec mov (bad) out mov call (bad) fdivrl test (bad) in addl xchg push push jg pop mov (bad) (bad) (bad) (bad) jns mulb enter cmp push mov cwtl lcall (bad) (bad) (bad) jp jne xchg sbb arpl adcb fdivr (bad) (bad) lcall fs push rcrl hlt enter mov cmp dec dec gs (bad) (bad) jmp (bad) ret pop test sub mov rcll leave fdivs pop mov mov (bad) pushl arpl pusha inc fs call sub push mov sahf fs outsl decb dec lcall decl adc rorl mov (bad) call jns inc inc xor div out lock xchg push (bad) cmp cs or (bad) fldl xchg clc (bad) call cmp addr16 loop adc (bad) repz inc cltd (bad) (bad) jg pop pop push imul push or outsl divl (bad) in adc inc sub rorl add mov (bad) (bad) mov dec (bad) push sbb mov out sub (bad) jmp loopne dec ljmp xchg jl or aaa (bad) pop inc pusha aas sbb and nop add popf adc stos lahf scas and inc pop xchg (bad) lcall (bad) (bad) (bad) (bad) cmp loopne loopne clc int movups and movsl sarl testw andl lcall push jg loopne pop cmc cs mov xchg lret (bad) call sarb scas cmpsb clc cltd dec inc lds sub outsl or fs lahf icebp (bad) (bad) jg jg jbe cs into xchg inc imul out sub cmp ret cld lret clc (bad) call lock pop popa fmull fistpl jnp (bad) or xorl xchg mov mov int3 jb add (bad) sub cli incl scas push leave into jle movsl icebp aam push fdivr jmp push mov (bad) fcoms xchg jnp (bad) (bad) (bad) jg stc and dec aas or sahf pop add cli and jge fdivp mov cld fldenv (bad) (bad) (bad) call (bad) (bad) (bad) mov mov jp cwtl mov and or aaa jbe (bad) (bad) (bad) (bad) jmp mov scas xor sbb lds daa pop mov lds adc fldenv jmp cmp movsb lahf je test jno ficomp sbb enter cld (bad) incl pop out jb or pop mov cmp (bad) (bad) call pop pop add xor xor es ds mov fildll gs sar cltd (bad) negl xor (bad) (bad) pushl adcl or (bad) rcl pop out out add dec sbb jg pop mov push gs cld mov scas dec aad das scas mov rorb (bad) incl and das mov mov and cmp mov pop mov std mov pusha (bad) test pop std incl in jns nop jbe jl adc jmp das mov out jne pop xchg adc jecxz pop mov lods adc (bad) incl cltd cld jno inc add mov sub sahf jns insb bound rorb pop push mov mov mov and clc (bad) (bad) dec out faddl xorl out jns mov jl mov pusha adc dec ljmp inc mov mov (bad) rorb int sbb mov dec jg dec jecxz jg iret xor hlt daa ret jne rorl (bad) jg fist dec fiadd or enter push (bad) ret imull (bad) (bad) jl das jns xor mov or sub icebp inc loop jg push stos (bad) outsl mov lahf imulb and mov mov pop add mov adc mov jo les and aad (bad) (bad) (bad) (bad) (bad) fsubl sbb xchg and jg shll dec pop pop repz pop adc cmc jnp mov mov jg adc lcall pop dec into pusha xchg xor mov and (bad) jp fdivl daa or test fcoml lcall (bad) (bad) dec lcall rcrl xchg push pop add or jg pop and lcall xor mov mov push mov loope pop jbe jno cli mov pop (bad) jg nop ret xchg cmp pop test dec cmpsb inc adc pop (bad) aaa dec rcrb mov loop scas loopne add mov fildll arpl push adc call std dec lret lea fmuls sub (bad) jg push cs sbb xchg or int3 xor out add sbb pop push xchg dec xchg fcmovbe or lahf inc dec sub lcall adc xor cmp dec sarb xlat movsl mov xchg inc jo lea add incl sbb lahf inc (bad) push add xor jne adc mov jg jo out es mov jmp dec dec mov sub lahf pop pushf (bad) inc jge pop dec xchg cld fisubrl push add (bad) mov xchg push sbb cwtl std cmpsb push insl aad movsl mov (bad) (bad) jg (bad) adcl adc mov pop icebp adc and add int dec incl adc mov imul and (bad) incl rorb cmp fcmovb mov mov add xor inc fwait or inc subl mov fs mov add jmp outsb dec mov (bad) (bad) ljmp test pop call adc sbb clc mov inc (bad) ljmp cltd dec jge fnstcw aas lahf js sbb adc pop cmc and subl inc enter (bad) (bad) das push pop (bad) inc addl (bad) and std popa adc push adc (bad) call xchg pop enter fs clc cmpsb fcomps in sbb scas inc bound mov (bad) jns in inc pop mov dec (bad) mov push inc fildll fcoms jnp mov xor icebp (bad) jl and nop adc inc ja mov inc mov sub xchg ret popa mov xchg (bad) ljmp (bad) mov les rorb or push aam cmp icebp inc test (bad) (bad) (bad) ljmp jmp xchg xchg dec daa out inc (bad) mov inc push inc inc adc nop mov push adc (bad) lcall int3 sub fildll je pop inc add in cwtl sbb jno rcrb das bound mov rcl adc inc dec (bad) (bad) call push jg mulps fimul rorb mov pop jmp dec (bad) cmpsb xchg shll lahf and cmp in push std xor ja ja sbb pop (bad) incl pop test jno xchg mov mov incl xchg mov out sub cmpsb outsl fwait mov out pop lods lcall (bad) xor lcall dec mov mov nop test call punpckhbw mov or jle adc out in mov push dec add lcall lret rcrb push mov (bad) lcall cli jns dec cmp mov mov push adc out cli hlt std xor (bad) (bad) lcall and dec cld jo xor adc jae cs leave or adc sti cwtl and dec call jecxz xor lods xchg or mov (bad) (bad) (bad) lcall push out cmp leave mov cmpsb shrl shr jb stc les mov lock (bad) (bad) (bad) decl push add pop imul popa sahf ja xor arpl mov jmp mov lcall sti les xor xchg daa push mov jbe adc add (bad) (bad) (bad) call mov dec pop (bad) mov sti inc neg test and aas mov repnz pop xor mov push sbb sbb movsb int sarb mov adcl fs ret icebp leave xchg or incl out mov addr16 cmc pop jg dec pop pop xchg xor push or pushl xchg pushf fmull dec int test lahf pop aam sub inc mov jg xor pop push aas bound pop pop mov pop rcr mov cmp or jecxz inc xchg clc and call popl or test mov inc sub fidivrl lcall stos dec sub cli lcall mov cs into xchg dec mov stc popa sub outsb cmp pop add mov add movsl mov sarl jg adc xor jns and push inc or (bad) (bad) ljmp scas dec loope scas sub leave stos dec js insb fldl or roll aaa pop inc gs mov in and cltd pop xchg mov cmp fistpll cmp call pop jl jle cwtl popa stc cmp and pop mov xor add mov decl (bad) call dec or cmp jl add mov mov adc (bad) les and fild dec adc (bad) call push xchg xor push shrl mov pop adc xlat push flds jbe jmp xchg lcall add inc aaa add xor fcompl fist cmp decl dec popf inc sbb hlt xchg jno and (bad) out mov clc cmp jecxz push int3 or (bad) jmp push cmp popf xchg and cltd aam jmp repnz je adc test int mov jg adc mov jmp sub inc push lahf clc (bad) (bad) jg dec sbb jg aam fstl stos cltd jnp outsl inc std cli inc ret mov das add fbld mov aaa sbb lods fwait mov cmpsl adc je ret mov js add dec mov (bad) (bad) (bad) (bad) call cli sahf xlat aaa mov mov sti pop sti out mov in sub or mov lods loope push (bad) mov lahf in push mov cli mov pusha inc xor rolb inc or loope mov xor stos js sbb out (bad) adc in fnstcw push clc fcomip pushl gs mov sub je out sbb iret cmpsb dec adc cs cmp enter and imul mov jge add aam and aas lods push push (bad) sub dec add sar (bad) (bad) pushl (bad) jmp jp sub and test fdivrp inc sti push push imul adc (bad) rcrl cmp sub inc inc adc icebp (bad) call aad stos fldt aad in xchg adc ljmp in int3 mov and (bad) jmp (bad) (bad) jmp jg ret sub std cmp fucom jecxz jle cmp cmc xchg (bad) aaa xchg jl lahf fld (bad) pushl imul call testl cld out adc mov lds into dec mov (bad) lcall and push out pop mov (bad) fidiv insl inc and mov stc push xchg test ffreep or inc test or jnp pop jae mov das lahf or ljmp call mov popf fimul shl adc pop inc sarl mov mov ss ret (bad) jp mov loop (bad) inc sub xor add push rcl and and and lahf std ljmp add pushf or xchg ret test mov das sbb int fdivrl jle mov aas (bad) fstpt push add xor (bad) (bad) (bad) (bad) jns pop fldt dec loop jnp sub in push xchg and (bad) xlat clc mov das lods lret call ret sbb lret aas sub sbb fxch leave push je add pop ljmp test jae (bad) (bad) jmp mov dec mov cld dec or xchg inc push stc adc lret call ljmp (bad) (bad) aas arpl movsb outsb xchg icebp clc sbbl lret push stc pop push pop mov (bad) jg into mov lea std call out nop (bad) cmpsl jg (bad) decl or push adc call mov lahf cmp push add negb test jno fcoml mov (bad) jmp adc outsl hlt movsl dec (bad) xlat icebp mov psllw inc lds movsl ljmp aam cmp iret lahf push sar out jno jecxz dec mov movsb sbb jmp (bad) mov sbb mov cmpsl adc outsl inc pop std ljmp add aaa xor xor ja stc idivb add ret or (bad) (bad) incl push mov inc insl jns es in in repz movsl pusha sarw (bad) ds pop pop push rolb (bad) jg xchg lahf nop (bad) jo outsl loopne imul popa loope in cmc lahf shrl mov test bnd push lahf and loope mov arpl adc add leave xor push push sub (bad) call dec insb xchg mov lret mov mov cld lahf add pop aam fisubrl pop pop decl jnp (bad) mov (bad) imul push cmc add jne pop adc push push or xchg sub mov and lds (bad) cwtl xor sbb mov stos lret (bad) pop inc mov (bad) decl es cmp mov xchg mov mov xor cmpsb inc dec dec pop push movsb mov pop in mov adc add mov das inc aas xchg les mov jae cmpsl (bad) (bad) (bad) decl arpl ret stos xor jmp outsl cltd mov fwait cmc xchg jg addl mov cwtl shrb mov les mov decl movsb (bad) jmp test (bad) iret add adc test in cmp or pushl ret mov push lret mov orb mov mov cmp mov mov jmp add add or xor call jnp and lea mov pusha std jmp in ficompl iret mov mov sbb test sbbl xchg loop sub icebp (bad) mov repnz insb and clc sub out loopne stos cld lods leave and adc (bad) call push xor imul mov add xor incl popf mov mov or mov xor jne ljmp divb xchg stos sbb popf add call xlat in loop (bad) (bad) ljmp mov sbb leave ds xchg or add nop (bad) mov loop imul outsb mov adc push push test cltd adc xchg jle ja cli int3 or (bad) lcall shlb xchg jle pop jge out loop mov subb sarl adc xchg and cmp push movsb mov add mov fisubr bound addb jb cmpsl loop mov lcall sub xor jns xchg inc push (bad) pop push mov inc bound push (bad) (bad) pushl mov sbb mov or pop repz push imul addl popa dec push and std push xchg pop (bad) mov sbb daa cmpl in je (bad) (bad) (bad) incl cwtl xor fcmove js js test dec test out inc pop push outsl and cli fcoms add decb add fsts inc cmp fisttpll dec add push and add (bad) sub stos jl rolb gs gs jo sti (bad) xor popa je inc push gs std movlps movsb dec imul add hlt inc fs int jae push inc or gs sti fistpll arpl gs outsl imul not and fs js nop fistp xor inc sub cmp ror push cs test insb lock mov dec jae outsl jb add add xor jne addr16 dec lock dec jo clc ds push and jne cltd insl fild or push jne jns push cmp adc outsl jne sbb rol sub clc (bad) daa push jns insw push imul jecxz or imul pop dec popa inc movsb mov pop clc fcmovb or push je sbb addr16 push popa mov dec test push inc push inc fstpt int3 jbe sub sbb sub bound ljmp jmp and sbb addl inc add push outsl pop sahf inc lds or sti inc dec sbb inc jns push inc imul inc inc out adc mov lahf fs psadbw xor inc inc push push (bad) jo sub add mov dec pusha jae ss inc arpl ja inc dec jnp pusha ret repz push adc (bad) outsb insl fdivrs jp xor rcrl repz xchg (bad) adc (bad) mov mov and jae outsl jno daa enter mov jb cltd pop and js sub and int3 shr push or adc fdivs outsb and jae addl mov dec pop and and sbb faddp pop gs pop ret inc jno and inc push out sub inc scas mov das inc jl aas sbb cmpsl xor ss adc jo jae dec inc jl jb cltd adc insb mov pop add mov sub or push (bad) (bad) jmp add adc adc push push and sub (bad) adc or std mov pop push add or or sub sub mov or adc or pop (bad) (bad) je jmp adc adc or lock ljmp incl and xor cmp sub adc or adc push or sub inc mov and push and add or fcompl pushf adc or push outsl (bad) jg mov pop or stos pop or mul outsl (bad) or sub or inc add (bad) push push add inc pop sbb adc sub or push inc adc adc push lock add fildl add or arpl sbb incl sbb push xor adc or sbb (bad) xor loopne and cmp add xor sbb mov and push push xor or pop or jmp lock add xor sti or sbb push pop pop or add jg push adc dec adc or adc inc adc adc cs sub outsl mov adc cmpsl and dec sbb pop jle adc mov data16 jbe (bad) push or push push push in ret aaa add xor or and loope jo or stos add daa sbb and xchg sub sbb sub jecxz mov pusha out inc xor xor cmp popa clc cmp xor dec lock inc jl pop sub mov or pop inc and or sbb repz sbb or mov or push and adc and or mov adc (bad) inc jb movlps sbb stos adc xor pop cmp lock sub int3 dec or xor adc test pop popa or or cmp sbb aaa repnz fiadd pop shrl push sub push or ds or add (bad) jge sbb sub lock add daa ja lock add inc femms sbb aad xchg incl pop push cmp push adc adc or jle jmp lcall cmp and and push or or push adc or (bad) (bad) mov dec push xchg cli add adc pop add sub dec (bad) inc sahf xor xor or xor jae and sub std mov adc sbb xor aaa pop push or push outsl sub push jle (bad) (bad) mov xor sbb outsl or inc imul xor adc (bad) (bad) lcall test sub dec or push or xchg aaa cld inc int sub cwtl lock xor sbb cmp (bad) add insb or pop push or fistp push mov push and xor incb je adc popa pop outsb pop incl inc cmp sbb lock add add adc (bad) mov insb pop add lock add lock add data16 dec and or or sub mov ljmp unpcklps in or (bad) insb pushf and cld or or add inc inc out leave lods fcomps fwait sbb or or out fnstenv sbb pusha mov add or and push add pop (bad) outsl mov lock add sbb adc adc sbb or add push imul add scas loopne mov pop push daa push and scas cltd pop aaa rcrb inc pop add aas cmp add sub fisubr inc adcl adc add or pusha or (bad) xchg inc sahf loopne loopne,pt cmp lds fcoms das xor movsl jg mov pop addl cltd (bad) lcall loopne imul cmpsl insb out add dec and sub sbb add daa (bad) push pushf push xlat jo les dec cmp gs pop nop sbb pop inc add dec inc aaa loope and movsb inc aaa sbb and add inc jmp add add call or pop inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add inc inc add add add roll add 