jo add add add dec add add add add add add add inc add push cmp add xor add (bad) mov mov adc push dec cmp insl mov enter inc popa gs xchg bswap sub inc xchg lret cltd xadd cltd mov lahf out cmp mov cmp add lea add int3 add push rolb add add add add pop add pop inc add pop insb add pop cmp add inc xor add pop xor add popl add add sub fldl add mov add mov add sbb add mov add jnp add jno add xor add inc add add add (bad) mov add addw fldl add add fwait call add rolb add xor add insb add loop add xchg imul lret arpl add out add and add stos add iret xchg add xchg add mov mov add mov add sub add leave add mov add pop add add add fdivs add add add pop add or enter jae add and add add nop stos add jnp add inc addl add add add add fild add add xchg stos add push mov add stos movb loopne add jo add (bad) jp add adc add in add aas popf add xchg mov add add insl pop add movsb mov add pop add mov add mov add xor adc add sbb add or add add add pop add scas xchg add add mov jmp add xor mov add repz mov mov add ja add addl add jae add add (bad) aad add add pop push add and add pop and add mov add repz lods add add sbb add jno add mov add add jnp add inc mov add cmc add sub add lods jae add add ljmp add or add lds add add add add into in add jecxz add push hlt add stc add push xor add or add fadds add add fisttpll add insl or add mov add pop pop add or add dec in add add xor in add add out add and add or add clc add inc hlt add mov or add lds add mov add dec jmp add add mov sbb add push add and add add fsubrs add add add mov popl add lret add jns add sbbl add add add or test add add xor add mov add add addb xchg dec add call jp add sbb add inc add fisubl add jge add xchg add (bad) sub add mov add cli loop add add mov add push ret pop xchg add dec rolb das fiaddl add xor add enter addl mov jmp add push xor add push or add addl test add xchg add push add icebp xor add dec add adc add pop add sub add or add adc add pop add push stc add clc xlat add xchg aam add and add add adc add cltd int3 add adc add pop dec add negl add sbb add xor add pop add push jmp add add in add jne add lea add fwait sbb add clc pop add mov add pushf pop add jbe add repz add or add je add mov add inc add or add lock mov add add jnp add cmp add adc add jo add cmpsl cmp add add inc cmp add add mov add in add inc cmp add addb jbe add sbb pushf add insl add add jbe add add add add cs inc jl add nop add pop flds add cmpsb add and add lret mov add xchg add push xor add popa data16 mov add push and add lock cmpsb add xor add popaw add add add in add add add std or add scas lods add imul add add jb add iret sub add bswap add or add das in add outsl add sub pop add mov jo add call add fcmovnu add fdivrl add pop dec add mov testb xchg into add mov adc add add jbe add mov pop add dec (bad) add push ja add add gs add push pop add xlat inc add jno add push adc add stos add cltd into add sbb add push jno add add push mov add fwait add iret enter push add mov add push mov add sub add les add mov add xlat add adc dec add push cltd add push test add add movd add insb add mov add (bad) rolb add add loop add cmp add xchg aad add adc add add inc jno add add push mov add cmp add xchg add pop add add add stos add xor add mov add (bad) mov add cmp sub add add add adc add add mov sldt popf incb add add leave add dec (bad) add cwtl inc add jp add mov add or add leave cli add inc xchg add pop imul add xor add sbb add fiaddl add sub add add sub lock lcall add adc add mov add mov lahf add or add into sbb add daa add xchg add stos add push xchg add incb add add add xchg add push roll add xchg add ja add outsb loopne add add cltd rolb pop pop add std in add lea add add fldl add in add pop cmp add dec add sbb add loope add sahf dec add add add sbb ret add xlat cmp add cmp add mov add fldl add add sar add mov add mov add in add pop add data16 add push add xlat fldl add lock pop pop add and add mov add xchg testl add add pop xor add sbb add or add pop add add xor add mov add cmp add add scas cltd add and add jnp add daa jo add sahf add mov mov add aam add add out pop add (bad) pop add push pop add mov fadds add mov add add test add scas pushf add xor add push addb or add sub add ret mov xor add add dec roll add inc add mov add xor add daa add sti add mov add mov rolb add addl add add sub add test add add add sbb std add sub add (bad) add (bad) mov add add mov add xor add add cld pop add icebp cwtl add add add call push add in cwtl add in add and add add pop sbb add cmp add addb test add jne add sarl add and add aaa add xchg and add add cli call add imul loop add lahf imul xchg xor add adc add add scas adc sub bound arpl cld or int3 inc sbb inc std jae and fwait ret mov fs add je ret cld not xor jno mov subl std pop test dec call loope outsb iret (bad) (bad) mov movsb sbb xor sub cmp imul pusha xor addl pop fcmovnu fldcw mov lret mov call or in jbe sahf lret sahf sahf shrl icebp addr16 xchg dec insb sbb adc inc add bswap sti cwtl push pop or bound test data16 enterw lahf jne mov jb pop out inc in pop ret pushf cmp jg mov or mov insl ret cmp cltd out fldl lods push pop sub cmc sbb das cmpsb stos scas cmpsl data16 pop or roll cltd push scas jl or jb push lds clc dec cmpsb adc dec lods out rcrl inc add orb dec scas lret sub lds jle push bnd out pop ja inc (bad) idivb jle stos mov insb sbb cmp xchg js and xchg pop mov adc xchg rclb jl push push scas adc fcmove add sahf aas clc std xor add jmp stos ret je mov add add inc jge aad and jge add adc and dec jge sahf jbe inc mov mov hlt xchg push enter xor xor sbb lret loop inc call cmp pop push mov inc jae adc and loop sbb or and fwait adc sub push repz jle jle jbe jae jbe xchg sbb pop adc mov xor arpl push or pop add pop jnp add add jne add pop addl add mov add fadds add add (bad) bound add add sti add or arpl add add lock add incb add add (bad) out add rolb imul add rolb cmpsb nop add int3 and add and add xchg add mov add lods push add scas dec add push push add dec add dec mov add lds add jne add (bad) mov add mov add push sbb add jae add add sbb add incl add xchg add add add in add lods fwait add out loop add cmpsb add pushf out add mov add loop add mov and add push add mov sbb add push add cwtl sbb add add mov stos add imul out add outsl adc add cld add add add dec add data16 add call add cmc int add sub add cmp add mov outsl add ficoml add jbe add mov mov add add adc add lods cmp add add add sbb add sub add push add push and add test add xor add in outsl add inc mov add push mov add dec lods add adc add xor add mov add add add mov add xchg cwtl add hlt inc add mov jmp add lahf ret add xchg add sub add in add out jae add inc add mov js add add or add (bad) incl add mov add add daa add xchg mov add jbe add jns add test add dec jae add add lcall add add in aad add add cli add notl add xchg aaa add mov jo add out add fwait push add add add mov add add cmc test add add xchg jmp add inc add popa xchg add dec push add icebp roll div add lahf iret add push cmpsl add (bad) add cli rolb add adc add jmp stc add sti addl inc iret add out mov add mov add js add sub add movl add add fmuls add pusha add (bad) cmpsb add ljmp add add (bad) jb add sub add add add add sbb add dec add popf (bad) add push std add mov sub add push add add add add and add add xchg add leave add inc or add add mov mov add imul add movl add add push mov add xchg add mov fwait add mov add (bad) and add mov add jnp add psrlq add or add add push and add movl add ljmp adc add in add out add add stc fldl add push add mov rolb add je add push add fs add scas add (bad) add daa jge add jne add add add iret add add add add test add (bad) add and add out add rcr add add push push add sub add add push imul mov mov add cmpsb dec add sbbb add adc add add push fiaddl add add stos sbb add pop add data16 add mov add cmp bound add add aaa jno add fwait add aas add (bad) add push add cld jbe add and add bound add xor add shlb add fldcw add in arpl add outsl add hlt roll add xor add xor add js add sbb add push sub add leave outsl add cmp add add dec add lds add sbb add test inc add cmp add lods sbb add mov add shrb add frstor add mov add add mov addr16 jb inc push pushf xor ljmp clc scas out movsl cmp pop dec (bad) xor lods imul xchg popa movsb adc repnz mov and cli sub pop push mov pop scas pop push and cs movd sub lea mov dec mov int pushf mov clc xor push fdivs lret scas adc scas bound rclb and scas fdivrs fisttpl jae and lea arpl dec mov mov ss mov sti out mov (bad) mov inc btr pop cwtl xchg insl dec push push mov inc je stos cwtl xor mov pusha pusha xchg (bad) and jno jle es out test js mov (bad) dec (bad) aam mov or scas insb rcrl iret xorb push shll fsubl push fmull daa pop out adc insl stos roll ljmp sarb data16 leave cmp jno fwait xchg addr16 out add mov frstor jmp mov xchg jb xor fwait arpl push nop xchg cld rorl ljmp aaa dec hlt (bad) in mov clc (bad) sub push lea hlt aad fwait sbb in or clc in call and movsb int3 mov mov loop sbb and cmpsb mov sub lds inc mov aas sbb mov jg jmp pop fcmovnbe (bad) lret movsb mov inc outsl dec push fwait mov pop xchg mov mov fcom push add test sub xor push add stos repnz push mov pop sbb xchg fdivr fs xchg hlt cmp sbb loopne add jge and jae daa xchg mov cmp push pop xchg or out subb int cwtl xchg sahf dec aas jne mov sbb (bad) fwait into mov pop push std addl scas loopne jne cmp pop xor popa and cmc lods roll xchg bnd fs pop cltd popa pop int3 loope push ret call (bad) imul mov inc mov sub je push dec mov add jo dec dec das and shl xlat scas sbb mov xchg jbe imul divb jbe mov mov adc (bad) sti clc cmc les ds fidivr xchg int3 and pop (bad) aad mov int enter cli lahf sbb lock jno loop scas je imul cmc jge jle add mov push pop (bad) mov xchg cltd push call sub stc in inc and ss shlb stos xor jo dec sbb lret mov aas push and push daa pop loopw (bad) repz sbb and mov mov or sbb adc addr16 xchg mov mov lds mov pop add and mov inc cltd popa sbb sbb repz fs adc dec out jo aam sti cwtl add outsl pop xchg adc push fstpt cmp mov cmp mov mov push scas aam loope lods dec movsl and nop loop sub das imul jns xor inc mov sar shll out dec pop pushf imul mov fs rolb ds (bad) call ss push cwtl mov imul inc stos in mov adc cmp ja into mov (bad) into mov dec push aas aaa mov jmp imul in insl je or push jnp sub push xchg mov (bad) int3 stc movsb jecxz hlt ret inc in nop rol in cld ds in addr16 xchg inc test pushf mov movsb popa ret stos dec adc add in std xor clc sbb cmp out sbb add pop adc scas outsb pop jmp popf mov push sbb shrl mov mov sub ja shlb in ret dec xor cli pushf in in call dec dec xor dec lret int3 jle mov add xor and mov mov fcompl dec fwait cmpsl push jl stos fistp cmp jle scas xchg imull dec rclb pop push insl fcomp xchg imulb add or jb or xchg mov inc pop sbb cmp pop push iret dec mov and (bad) pop xor sbb adc (bad) add int shrl fnsave adc int dec nop mov daa xchg xchg faddl mov xor out push icebp mov cmpsl test aas (bad) pop cmpsb lods jl push inc push or jmp outsb push jb aad or cwtl fsts popl test mov and dec (bad) (bad) aas aaa xchg dec jmp xor leave mov jne pop rcll and repz xor out sub fcmovu aam add push adc pop push mov pop inc into cli les roll pushf in mov add xchg stos (bad) jl jmp fimul imul sbb (bad) mov cwtl test mov es sbb xchg push ljmp nop jge jmp push sbb fdiv das int3 shl push push xchg repz test jl sbb inc mov sbb ss jae jns jmp push shll cmpsb les dec cmp dec push dec inc inc mov adc or fstp xchg (bad) int3 cmpsb mov push repnz xor ret xor mov adc xor push xchg xlat imul rclb clc loope or dec rorb ficompl mov mov sub movsl ret adc ds outsb ret out sbb out cld pop in or repz std int3 lret (bad) ficompl das jno push (bad) sbb jo cli cmp jp pop pop fwait pushf out dec sbb jge cmp dec js (bad) das pop andl stos out sti add hlt fcompl push mov testb out popa lds loopne add pushf je push test inc scas sti mov sbb repnz and dec pop xchg pop js popa cld loop inc mov clc mov fdiv int orl clc hlt xchg pop jb cwtl xor pop or cmp mov call leave notl and cwtl xchg mov out sbb dec loop mov and into int3 setno sbb mov (bad) or jle jnp aaa inc mov mov stc sub lods test sbb test mov lahf sub lods pop mov test fldt mov add movsb js sbb mov sub add or lds and in cwtl rolb dec lods jne jg loope cwtl bsr loope insl nop mov leave out repnz mov sub ljmp repz xchg or sbb dec scas ret scas test inc and icebp cltd int3 mov ss xor roll mov xchg lock popf jge push imul xor scas cmp vpshuflw xor daa xchg iret arpl leave mov sub push icebp or ffree fnsave mov adc adc dec add and pop das movsb (bad) out mov inc push sbb iret repnz jle pop les insl or push sub dec cmc popf ror mov sub jns (bad) cltd movsl sub js mov iret (bad) xchg mov (bad) call nop sahf andb das cmpsl add (bad) (bad) fmuls xor adc sub (bad) push add and mov (bad) pusha inc push out sub cmp adc cld inc gs jmp dec mov cmpsl pusha dec mov frstor fiadd decl scas cmp or lods lea shll mov mov xchg (bad) xchg in cmp cmp ja xor add jne mov inc mov (bad) fidivrl adc insb test or and xor es inc xchg gs jg push sub sub arpl fiaddl jl in lahf jmp mov xor push ss mov test call inc add in mov imull (bad) jb cwtl js push push stc mov shlb push dec rcrl lret inc adcb fs mov (bad) imul xor jl scas mov hlt lods and fstps inc divb and fdivs movsl arpl lods xor push jb push push mov icebp lock xor aam xchg lock sbb sbb push xchg bound into cmc test xor and lahf mov insb xchg (bad) rolb mov add int3 xchg or std add fisubr test mov dec jb xchg cmp clc fnstcw je sub or sub cwtl dec lcall mov std call jle or pop repz jle dec lock cmp jecxz das in xchg inc and jge cmpsb sub adc cmpsb jmp adc bound inc outsb jbe mov adc mov cmp stos lea mov sbb lcall inc xchg es hlt das push mov ret lret pop test adc ss push inc jmp sti pop ss rcrb mov and loopne ds or inc outsb (bad) cmp dec mov (bad) sub mov fcmovbe into xor push fs addr16 mov lods mov repz pop imul or jge loopne call mov cwtl inc into push stc inc sbbl cld popa push add insb jae jg cs adc adc sbb mov mov arpl cs testb fcmovnu pop ret movsl (bad) daa cltd adc mov dec in clc loopne add pop inc cs into into loope xor stc stos jl in xor fbstp add xchg mov (bad) mov fildl push adc push xor inc loopne push ss fcomp mov pop sub movsb pop (bad) jb add mov mov repz and in test xor mov push adc mov push xor jns iret pop adc lret add test fildl push loopne dec mov adc cwtl xchg mov lea fmuls mov mov fadd stos xor ret bswap mov leave cmpsb lods imul (bad) int3 arpl sahf fs fidivl dec cwtl (bad) mov push mov xchg popf xor unpcklps es dec in xor pop xchg fnsetpm(287 mov adc pop jg mov mov neg (bad) xchg pop push and mov pop jae insb (bad) mov test xor jecxz cli adc jg pusha adc (bad) push (bad) cli inc into xor jno (bad) or push fisttp mov pushf mov mov adc test jne pop mov maskmovq idivl jle push (bad) ja int3 inc xlat cmp adc xor test xlat dec sbb outsl mov pusha or xchg ja test adc out outsb adc add add sbb jo jg inc push aad mov call in jl mov cld push clc int3 cmpsb mov dec daa adc out cld and ret and iret insl cwtl jmp and pop (bad) push jnp rorb sbb jbe ret and adc dec shrb or pop into mov sub and cltd xor lret mov mov in imul and push fs adc movsb int3 (bad) (bad) fisttpll sub sbb sti lea lds or pusha pop sbb test cltd push lea pop int xchg cmp dec adc cld sub and clc ficomp popa mov loop jp inc icebp scas subb jbe push adc lahf mov cmp push sbb sbbl pop sahf dec add arpl (bad) jp xchg add mov punpckldq (bad) addl stos adc xchg je,pt xchg sub pop or jbe rorb ror das pop cmpsb int3 jl pop lds pop pop and negl dec loop lahf test outsb ds pop ror xchg pop sbb mov xchg in jle (bad) mov aaa inc mov xor (bad) stc cmp icebp stos xchg xor hlt jle push sub push add movsb lods pop test int3 xchg call jbe jg pop movsb data16 movsb jle xor lcall sbb sub into popf outsb adc cmc pop les negb dec jne rol or sahf inc aad xor ds icebp mov out roll dec lods repz mov dec inc mov nop loop sarl sarb out mov xor scas ficoml sbb push pushf test leave cli jp movsb mov icebp xchg movsb daa cmp jl mov (bad) cld ror sub and sub lds out jmp and int3 pop arpl adc ret mov and test leave mov sub mov scas mov imul gs (bad) mov sub rcr mov aas pusha fs fistpl sub iret int3 repnz rorb or loop push mov imul dec rol aam or repz mov aas shll push mov das insb and daa into fwait jb loope orb rolb dec clc (bad) outsl cld sub sub sub dec dec cmpsb cli lea pop call loop adc pop jg xor mov aad test test cmp clc pushf aam xchg mov and inc stos xchg mov mov dec adc jl inc push fwait mov call sub frstor cmp lods sbb jle adc mov xor mov gs adc adc sub pop shrb adc out sbb ljmp aam jge in and imulb repz in push (bad) pop xchg mov push jmp scas sub popa jb mov push push xor inc sbb pop hlt dec jg cmp arpl adc ja mov (bad) dec cltd nop adc mov test cld andl lods jge movsl cmpsb cmp je inc push (bad) lret mov sub in fnsave iret pop mov lret pop test mov adc lods movsl cmp and jnp mov add int3 shlb jno mov cmp mov cmp std push push js ficoml and (bad) dec inc push (bad) mov pop mov push cmpsb into pop outsl mov sahf xlat xor std lods dec stos dec pop ja inc nop push loop sub pop mov sbb and add or push cs mov or lahf inc pop cmpsb icebp leave in dec inc scas cwtl push push or mov jl adc pop stos lea lahf xchg cld repz xor dec subl jno inc fwait mov fcompl rcrl adc xor js add sbb ljmp or mov incl out lcall lds in mov xchg pushf mov in addr16 sub inc lahf sub js out cmp push lret push inc iret repz repz sahf jo out mov mov (bad) ljmp aaa pop xchg out imul pop icebp gs and fimul jle push enter mov mov mov adc pop ja in jecxz stos push lods dec xor cli popf std mov xchg daa dec inc sub push xchg fbld xor jmp data16 mov xchg inc push test popa dec mov fwait xor das dec push and rclb push add fsts pop cs push pop (bad) jl dec cmc mov jecxz xor xor xorb mov imul mov sbb repnz scas sbb adc or orl dec fldenv jo enter mov sub orb adc dec or mov aam ljmp xchg stos adc lcall imul sbb test data16 outsb inc push push sub pop mov cmp (bad) cltd push mov or mov mov pusha sub ret mov aas icebp mov mov fmuls sbb push or vpaddusb hlt rcrb push (bad) ficoml cmpsl hlt or icebp add mov icebp fcomps mov push push jmp (bad) addr16 jne unpckhps lock ljmp xchg idivb and and cli mov popf cmpsl push mov xor data16 sbb sbb jg aaa xchg psllw push cmp adc adc arpl and stos mov repz into push dec adc lods loope cmp pop int insb sub fwait dec or out pop mov dec outsb mov mov lods mov adc jg push rcll mov call lea fxch sar jle int3 cmpsb mov ja adc inc int3 iret jb fcos iret insl sahf enter mov in shrl rorl xor sbb aas addl pop cmp and push mov and xchg gs lret sub mov in outsl leave jmp stc out mov or cld outsl and insb push jecxz int3 lret xlat mov stos push and sub add adc push pop adc mov inc and data16 std dec sbb add pop push (bad) push icebp cmp inc and repz fs jge in jmp in cmp int3 lret (bad) in mov dec and scas inc inc or add sub iret jg and fs xlat stos dec outsb (bad) or hlt push addr16 cwtl lret xchg jae mov adc mov or cltd mov repz cmp xlat dec mov (bad) pop insl outsl rclb lret repnz lret and push movsb xchg lcall sbb dec call cmp and dec mov fstl test bound pop adc sub cmp jae cmpsb xchg in push lods mov inc sarb push imul scas lret lcall imul (bad) out push inc xor js pushf mov lods add lret clc mov (bad) xchg cwtl or or cmp lret loop cmpl int in dec jl jo xchg add fbld aad out fsubl push adc hlt imul push xchg (bad) pop data16 mov and pop dec lahf cmpsl mov repz sahf fisubl rcrb push sarl aas sub sbb jno mov leave daa les (bad) js lcall fwait push and aas popf cmovl cmp loop ljmp and xor cmp sahf lret cmp ljmp lret xchg cwtl push lods adc adc xor jo test loop popa add data16 mov maxps ds and and mov cmc stc rcr mov add js mov movsl add cmp fs jl les rclb in nop sub outsb dec jp cmpsl jne fcomp jecxz jp stc adc xor dec mov adc sub push cmpsl (bad) loope jp sbbb outsb lds repz pop test scas dec data16 aas jmp dec mov jo leave sub pop loop adc push cmp pushf push pop lret mov xchg mov not pushf sahf pop adc lcall subb jno fs push mov movsl push jne push cmp lret add movsb xor je cmp movsl orl xchg adc sub push arpl pushf mov pusha stc jmp xor xlat cmpsl xchg xchg push pop imulb (bad) xchg insl subb test stos lcall or inc mov pop mov cmpsb jo mov push push and mov mov jbe sti aad xchg lods mov pop cld int mov divl (bad) popa mov lods gs xchg fistpll mov mov fst hlt adc cmp mov movsl gs movsl insb arpl dec cli arpl mov lock aam aad leave cmp pop adc mov in es mov xor mov outsl ja add (bad) loopne xchg or call fldl fcoms xor mov jl ds mov sbb xchg addr16 cmpsb into jns cwtl dec cwtl std ss test mov dec aad ret sub or pop jne pusha aas loope outsl pop inc repnz cmp or mov mov adc add stc (bad) dec imul lret (bad) lds push cmp xor lea popf std fcoml jb mov cmp xchg dec daa sbb jno ljmp ficoml mov inc pop adc jmp dec pop aam mov cmp mov and jle sub push test shlb in (bad) xchg test and es cmp dec es popa push mov inc mov mov jp movsb popa push orb cmp xor or repz sti pop icebp std pop enter mov call fnstcw adc cld dec pop adc std gs icebp inc cmp mov or ret jl sub lcall (bad) mov fcmovnb jg dec xor std popf divl jmp pop movsl dec aas lock xchg fildll xchg out push icebp stos js add and ja xchg lahf mov fildl pop adc push sbb mov dec orb pop lret cmpl add add mov adc sbb mov aad sub mov es dec adc add jl jge mov sbbl ljmp sbb mov daa xor movsb jge div sahf mov dec push stos data16 mov and push loope jo,pt cltd push (bad) hlt cmp adc push jge vsqrtsd push iret arpl sti fcompl inc scas int mov aam bndldx mov ljmp cwtl loop sub mov pushf popf scas jge jne inc lea fsubrl (bad) or (bad) aaa arpl sbb arpl mov add sbb dec ret adc in jl cmc frstor decl add pushf push mov insb xlat add ljmp arpl adc call int jo xchg ffreep mov stos or es lods imull dec nop cwtl sbb pop xlat and jne dec mov or popa adc mulb xchg movsb sub scas mov out inc pusha mov cltd sbb movsb inc (bad) aas iret fs negb jno add pop pusha loope scas sub test jno decl iret stos arpl rorl jle movb jno xlat add into (bad) call adc popa ret xor aam mov outsb je or jns repz sub loopne (bad) add scas lds adc or nop das ficomp mov adc and fildl leave mov leave dec pop lea push xor jl rcrb xlat dec cwtl sbb ret lcall and mov push xor pop adc push (bad) repnz test xchg insb and mov jns xchg ret push inc lds movsb fwait mov push add jmp dec aam loop test pop sti jmp cmp imul jle js inc mov sahf into pop fisubl jae xor lcall movsl adc push cld lahf mov (bad) jne push cmp enter add xchg sub fxtract push daa fsubs inc inc out sub (bad) int3 push (bad) or lret fcoms cmovno cmp (bad) fsubrl cmp pop pop or mov dec fnstsw jle jecxz pop pushf stos add sahf outsb loop in mov nop popa movsl (bad) rclb mov (bad) mov out les (bad) repz pop cmpsb xor out lret pop std ds pop cld fstp outsb pop fs fsubr sub fwait jb dec daa lods out xor lahf (bad) xor icebp mov add mov xor (bad) sub or je sarb mov leave (bad) sbb sub ljmp pusha mov push rcr rcr test pop pushf jle adc arpl int inc inc clc or repnz mov push mov cmp (bad) dec aad cmp inc mov xchg or xchg rcl sub sbb repnz dec lds icebp xchg or lcall cmp fisub subb jne xor ljmp shlb lods mov adc and push dec inc push push sub push out dec clc enter out jbe cmp push outsl jecxz and push gs mov xchg ret fsubs inc movsb in dec ficompl aam xchg insb (bad) rorb lahf mov and push cmpl jmp sub in push mov and into sbb repz ds push in hlt fistpl cmpsl popf xor into notb cli in mov push outsl push int3 int aad pop push and add adc jne int3 adc mov pusha xor lret xlat test dec mov aas dec dec (bad) nop add insb fcmovbe mov popa xchg push int jl pop icebp in std and push movsb mov fwait sbb mov cmpsw xor jg and or inc inc xorl arpl cmpsl pop lret call sub cli imul or and adc jmp mov lcall mov mov movsb mov clc pop data16 add sbb pop mov call mov pop (bad) popa ret ret xchg push dec dec dec sahf call add or stos popf cmp insb cmp dec out repnz pop nop cmc and jnp or push sbb imul mov stc out mov arpl fisubl cmp add and xor inc or iret popf jg jb sbb in lock sbb jg jmp xchg sub push inc enter out pop xor adc fisubr ffree repz push mov stos lahf cmp dec sub je aaa pop mov inc stos test xchg cmpsl test inc sbb mov mov inc sbb fwait lret dec lcall in jne fwait arpl adc daa jne inc inc les xor test (bad) (bad) int3 int3 pop push enter es xor arpl roll out loop sti mov pop gs test dec jmp dec adc xor push sub mov xor outsl mov divb scas dec mov fstl xchg cmp sub dec cld popf shrl mov outsb js movsb fldt sub lret mov or scas cmpb xor fmull shl or xor xchg jg cmp mov push or mov push jo fcoms cli jne aaa lods dec aam or cld cltd imul mov mov inc sbb shlb rorl jmp jmp adc cmp flds mov test clc rcl leave xchg sahf pop ds test add adc rcrb or inc mov push je pop shll add ds sub je push cmp cwtl mov das jo call or sub cmp inc xchg loopne xor jecxz (bad) mov notl mov cmp ljmp ds pop inc mov addr16 lock push mov mov add or or mov leave pushf ret adc dec addl mov insb aam or jle mov mov adc cmc scas js mov gs mov jae shrb lea (bad) jmp iret add mov mov push jb (bad) arpl loopne lock cmc shll adc mov xor cmp mov insb aam sti sub sti inc pop outsb xor xor popl lds add repz xchg ficom xor xchg or adc xor or mov cwtl dec sahf pushf sbb and nop mov stos dec sbb je pop testl mov mov cmc inc push fwait cs loope mov or aaa inc (bad) cwtl insb jbe int3 fwait adc sarb cmp sbb lea out shll mov test fldt and pusha nop aad adc arpl push cwtl pop scas jmp lcall mov or lock push sbb mov lds dec cltd nop aad push mov adc sub push in cmp daa imul sbb popf dec jp repz sbb mov sarb out push divb pop xchg mov adc jg pop imul jp xchg mov sub add mov pop add fsubs adc and scas dec out lods (bad) mov xor aas mov ret iret mov stos fsubrs add es pop fidivl lahf fildl jb stos fbstp adc push ss xchg std inc orb pop aad call fcomp popf mov add and nop testb daa xor mov inc ja cmp xchg sub outsb xchg dec mov mov push adc xchg jno sbb clc inc (bad) sbb adc (bad) or sub popf hlt push shrl fldenv jp loopne dec xchg stos nop ret ja and jb flds stos movl fdivp adcb xchg les iret stos rcll mov xlat imul pop pop push cmp pop fstp arpl fs repz ss nop push adcl pusha add inc mov xor pop sub inc (bad) or (bad) out (bad) mov xor add fstp push aad sub stos cmpsl aam or xor mov jmp sbb (bad) out and jae jmp stc inc xchg movsl jg sub notl sbbl pop aad push inc add arpl pushl xchg mov loop mov sub clc mov ja jno dec xchg shll push call jg popa mov add out jmp add test sub bound or jl jnp inc jp sbb add sbb lods test clc sub inc daa jne xchg call xor test ds mov cmpsl jle outsb aad pop movsb divb mov les cltd xchg push xor imul mov mov fimull xchg and jl jnp popf jge sub stos or fsts mov cmpsl or mov daa ret inc rol pop imul (bad) loop leave iret ss inc popw stc xor pop iret sub and pop paddd mov sub mov daa test add jo ss in mov xchg pushw inc inc or adc add xor xchg shrb test cmc mov adc out inc dec stc cmp dec imul mov mov (bad) dec or pop test daa sub outsl test sbb mov scas aad out mov les push mov movsl divl pop push (bad) lret xchg push mov add shrb push xor xor jp dec int3 ret in cmp xor inc jne subb movsb scas (bad) out sarb imul xor pop mov in fiadd arpl enter jge push inc mov lret pop xchg in les adc or shll cmp sahf pop shll inc int xor dec outsl xchg insb inc aaa aaa dec dec mov jo stos xchg push fisubl mov out insl or pop mov cmpsb xor push mov fisttpl subl cmpsl dec xchg adc mov lret dec arpl dec sti iret xchg fcoms loop inc adcb lret int sbb xchg fmul ficomp dec pop inc nop and fsubs (bad) mov ret jns mov out icebp mov lock or daa dec aam cmp pop or mov inc dec es pop pop sbb push jle rorl xchg mov mov jecxz push jp adc jne or lods mov daa and mov mov sbb mov nop or fisttpl pop fist and mov cmp and js mov push pop rorl jl icebp xchg mov notb (bad) out rolb sub xchg mov mov push nop jae and test loope (bad) add iret stos cmc pop mov xlat popa (bad) ds rcll sub jl shll into push mov xchg mov testb das mov inc sub push adc mov or add int3 test fdivr push mov std cli pop dec sarl jmp adc cmp adc or fyl2x cmp fisttpl test lods fs jle dec leave loop xlat loopne jae adc sub or jo repnz movsb push xor fbld loope mov or std sbb jne notb mov cmp ror inc xchg cmp outsb push (bad) les cmp fninit adc pusha jnp dec shll mov aad leave xor mov iret dec fist les ret clc es mov rep add (bad) or lahf fnstcw incb cmp (bad) sub mov add adc ret inc mov pushf ljmpw test adc enter jno push sbb repnz lock dec sbb insl adc xchg adc mov sub gs in test mov popf pop fdivrp inc push adc add icebp sub mov xchg xor sub inc lcall push dec dec jno outsl jle sbb ljmp pop sbb dec int3 cmpb hlt push stc into rolb cmp xchg mov mov outsb and lods lods push jp lea add jns jmp nop xchg jae pop in cmpsb sarl inc rol cld push jmp xor add hlt idivl fildl pop gs notl lret mov xchg mov out pop nop int3 cmp adc inc popf push (bad) xchg loop in daa sti mov insb and xlat test insl pop (bad) or enter jne iret loop sbb add shll cltd jp jno jl add mov and adc lahf xor pop cmp mov jne test or aaa rcl in cmp mov gs imul test push js adc test mov and sub aad outsb jmp fwait lock pop xchg mov sub xchg fsincos scas sub xchg int dec outsl push insb mov shll negb lret (bad) cmpsl cmp into test jge xor cli cwtl inc out mov adc cmp es popf decb pop cmp (bad) adc cmp int pop lret notl xor lcall pop jmp jecxz aam cmp loopne aas je clc and mov jbe jb and and mov cmpb and scas add loopne (bad) out adc mov call adc dec mov lock stos stc imull movsb jns rorl cmp cmp push dec jp movsl frstor push sub cmp mov popf fnsave and mov imul jmp ljmp sbb jnp,pt in leave (bad) xor scas (bad) jo movsl mov fdivrp cmpsb pop outsl sbb push psrlq xor mov int3 fiadd mov orps jge xchg test stos mov cmpsl je popl cmc stos dec dec jp (bad) ds ljmp dec imul dec pop adc lock cmc xchg xchg cmc or jg cmc mov jge gs mov jecxz or and cmpl lea or in jecxz jae push push xchg xor sbb cmp out mov jno fildll dec cmp add mov aam lea js nop and mov xchg lods aad or dec ja xchg xchg cltd and xor addr16 cmpsb jl lock mov shrb mov ja lret mov push and mov test lret insl inc pop mov dec sahf lods pop lods sbb (bad) lock mov imul sarb iret push outsl bound data16 or movl mov pop dec cwtl and adc and mull xor mov (bad) fwait movsb pop in sbb cmp (bad) cmp addr16 in (bad) repz popa (bad) fnsave icebp sub ja out lods or or das loopne pop loope adcl std adc mov mov idivl bound testl int inc mov adc dec scas cmpsb (bad) mov (bad) mov shr leave sbb ss pop test jmp or and inc sub scas mov in push cmp cmpsb lock xchg stos push inc addr16 pop and cli mul mov fxch push mov dec cltd inc jbe or lret testb jle adc and mov lea push (bad) push in xor insb in pop leave or inc outsb rorb dec jmp outsb pop xor mov imul addr16 test lds sbb lods lock mull mov mov test cmpsb or lods jns mov add scas js sub clc in loope sub xrelease mov lret icebp rcr inc jbe test lahf fnstsw sub mov (bad) mov mov outsb sub scas sahf hlt test icebp repnz push pop fstps mov xchg mov mov inc pop insb inc cmp mov ffree xchg mov mov xchg scas and xchg jmp cmp loope ja push push ds loope mov jns add repnz dec cmp sbb adc insb sub dec jecxz xor (bad) mov stc rorb js mov push jl test fsubl int3 and (bad) stc aad or pusha and mov jne jae adc push mov xchg sbb int3 aam pop inc jnp outsl pop outsb jecxz xchg adc aaa rcll nopl cmp sub lret and out push mov sbb (bad) mov test fbstp jae daa or mov xor cmp fsubr cmp pushf fdivl cmp das clc sbb ljmp int pop mov dec cmp jne jno shr pop adc mov dec jb adc jns in inc mov fcos fcmovbe call xor xchg and js in xor popa inc sbbb sti xor in sub pop mov cmp mov int3 sbb mov (bad) mul and cltd or sub in and (bad) dec xchg sbb call fcoml aad add clc negb sub push icebp int3 cmpsl in add mov fcomps xor jns push sbb adc ret pop jns lahf scas cmp stc jo sub mov clc cmpsl fsts push lock mov stos push inc mov mov ret mov dec cmp enter jmp insl nop mov cmpsl shrb mov xchg incb or inc iret (bad) cs xchg inc push lock or shl cli or das xchg data16 or fnstcw inc xchg jae adc pop xor leave ss add mov out ljmp and sti loop push dec pop fsubrs push jns jo ljmp cmp (bad) fist in and (bad) cmp iret cmp bound cmpsb (bad) mov sub jl xchg orl (bad) jbe adc (bad) pop mov mov inc out mov mov (bad) push jae inc fidivr pop sbb mull mov call dec mov int3 mov mov mov or or dec xchg ds xchg incl mov (bad) int jg mov mov jno pop push insl cmp das jmp sub or fstpt pusha cld pop mov and dec mov pushf xchg pop lahf imul stc xor xchg xchg xor aaa das (bad) mov xor divb scas insb or jb cmp inc into clc out push ljmp inc imul iret mov les fs popf lcall and mul outsl in jbe popf mov mov test and in outsl (bad) aad test les insl xor sub mov mov fxch cmp je mov jl cmp stc std or sub xchg cmp or lods lods clc out addr16 sub cld stc xor add daa jp lret xor add dec jb push inc pop push loop push int inc sbb cmc or movsl push push inc repnz jl xorb jae hlt test scas sub sub mov mov iret jno inc adc mov lcall mov cli cwtl ret lods icebp mov test dec mov in (bad) fadd addr16 iret add or mov outsl jbe mov sbb inc cmp pushf rclb int into dec cmp rclb mov inc addr16 mov ljmp ss jg jge sbb mul pop clc xchg daa mov pop (bad) aad pop imul fidivrl mov cmp nop call inc or sahf test das cmpsb jge cltd pop out pusha push jg in push repnz ja pushf pop sti dec inc aaa pop sbb rclb add pop call or jg loopne cwtl inc mov mov pop fs dec cltd mov mov add xor dec les jb outsl int3 loopne mov loop rcrb lods lods jle mov enter insl fcomp sbb sub sbb sub cmpsl insl fmulp (bad) jg inc mov (bad) mov and inc sub mov adc int3 arpl iret mov ret cmp les mov arpl and lahf lock cmp addr16 cmp xchg inc cwtl push (bad) (bad) outsl dec int3 and jl jo mov mov test orl fwait std (bad) pop cmpsb stos jp add cmp movsb cmpsl cmpsb fstp fistl pusha das and add push pop adc dec js jnp pop sbb mov cmp add mov jno jmp clc push pop adc add sbb xchg in add and mov stos and adc cwtl mov mov out xor add lret xor outsl outsb cli mov je push push sub out xchg xchg and inc (bad) rolb or imul movsl mov lock push mov mov inc ret push popf aaa sbb pop jg (bad) mov sbb mov push xor sbb vmread xorl cmpsb fisub adc cmpsl mov sub cli xchg mov seta sub dec inc xor push test xchg (bad) out mov push nop and movsl jnp insl (bad) enter stc fisubr sbb and sbb push pushl push enter data16 pop std je push xor cmpsb repz add pop scas nop inc cltd mov leave outsl sub push cltd ret into std mov mov sbb lahf fistp jns mov repnz push mov (bad) scas jl sub cld out loopne pop cmp rep (bad) mov (bad) xorl lahf cld test dec jo sbb mov lods pop test push rcrl push sub push jp xor mov cmp popf mov push pop pop sub arpl jmp inc fstp (bad) mov rorl (bad) (bad) jb mov pop in and push push aaa pop test jmp dec and fisubr lcall dec xor pop fwait xor nop cld movsl mov and or movsb xchg not jle dec sub mov add stos (bad) divb icebp mov dec sbb mov lods jge xchg ds pop (bad) pop mov fcmovnb shlb jp jge cs std mov cmp std add movsb addr16 lahf sub ja (bad) pop ret (bad) out push movsb xorl mov negb cmp outsl xor adc mov adc cmpsl and sbb int3 pushl mov clc sti sub and jmp push push (bad) aas push xchg pop inc and jb pop (bad) aam adc jmp mov xor inc sbb inc mov cmp pop fcom lret (bad) in inc jae aaa daa fadd pop inc pop outsb data16 sbb adc or adc hlt mov add icebp xor or imul pop (bad) out sbb fmuls jmp (bad) into sti inc mov inc outsl and div fcoms pop loope insl and mov mov fwait sub xor aam je aaa pop roll jp mov in and out or rcr cli mov loopne lock shl mov mov mov rcll cmp adc test push incb pusha fdivrl jnp sbb das cwtl or iret lret jbe pop dec or insb (bad) mov pop jnp xchg adc push push fwait mov mov xor xlat movsl in dec fsubrs push test mov out inc add sarl cmp mov add push jmp lcall les adc cmp jmp dec inc dec or dec aam int3 dec out cs aaa les into stos mov stos pop fcompl mov push xor jl sub lea cmpsb fdivs imul lahf into xor (bad) std push jle pop mov lea daa xchg rcl and in jmp push cld add lcall mov (bad) imul or out insb push and pop mov rcrb (bad) outsb sub loope jae pop pop or (bad) add int3 mov repnz or and pop movsl inc dec jo xchg stc pop test adc adc xchg xor fistp ja scas insb adc imul sbb xchg inc js sbb shlb popf fstps sbb stos rcrl jl repnz shlb cmp mov mov xorl fidivr inc jge push mov hlt repz mov mull cmp mov data16 mov jecxz (bad) repnz mov xor push in in push sub (bad) rolb add das add jg xor xchg sbb jecxz (bad) cmpsl daa adc cmpsl xor stos daa mov sbb movb pop je pop (bad) dec mov lcall in mov adc out stos hlt cmpsb adc fs out shr adc mov mov adc in dec popf mov jns andl mov flds cmpsb imul add push je sarb mov mov xchg pop iret lcall sbb popa (bad) adc je mov lock ret sahf (bad) scas in cmpsb sub jnp hlt ljmp mov imul mov mov cmp or stos xchg mov and (bad) std stos dec mov adc mov inc mov in dec push push mov mov ljmp dec es outsb push icebp mov das xor aaa les stos xchg jmp clc sahf inc test stos adc repz (bad) mov popf subb and jnp pop mov cld mov xchg and jbe xchg adc sar jne add sbb push dec inc jne and cmp and (bad) jg inc movsb nop xor jle test pop adc addb inc cmp mov lods das push loop xorb cmp les cltd sbb pushf push cmp add mov pusha pop dec mov out dec lcall pop rclb je dec scas nop jl jbe push rolb (bad) ja mov std dec ret test jae xchg add add int3 mov dec fs sbb arpl leave or les das sbb (bad) mov cmp or lret dec push in cli pop sub cli (bad) jge jno and mov (bad) fwait stos or adc push mov xor lea test (bad) mov loopne inc clc or sbb cmp outsl jo xchg cmpsb add or cs or jno ljmp test push cmp rcll mov ffree push mov mov lcall add cmpl xor clc movsb xchg sarl push cmp andb mov pop and inc pop ret stc push or lcall dec cmpps inc cmpb jns (bad) mov mov int3 fwait jle pop add add cli jnp sub movsb xor lcall out dec (bad) jae dec arpl scas jo inc pop xor jo popa jge xlat clc mov xlat jae cmp in out cli add ret sbb xor mov lret enter ljmp push hlt leave sub ret rolb dec push lock push dec cltd addl data16 ficompl inc pop mov (bad) into mov adc mull repz jl out mov xchg jae out sub sbb std outsb mov in fstps sbb (bad) jge scas adc scas rcrl outsb fdivrs jbe mov int repnz arpl iret mov int addr16 xchg daa sub dec xchg stos lcall or inc mov jb cltd (bad) jb mov adc and mov fstpt pop push sti aad lods inc ja mov pop aam or ja mov xchg sbb imull addr16 xchg loope out scas fistpl sub jns cmp (bad) xchg xchg mov and or popf das fnsave pop testb pop cmp jo sub rolb or jnp ret mov (bad) mov mov insb aam repz mov push stos sbb out (bad) mov lret add hlt mov push sar in lea push fstpt stos mov ss lods push cmpsb into push adc sbb and nop loop and jno or pop jae dec pop testl mov mov mov cwtl lods push mov pop cmpsb call (bad) lret addr16 cmp aam les mov jecxz (bad) stos sub jnp or rclb sbb add scas pop (bad) jae dec mov push push pop mov xor imul pop mull in cmp xor sti jae ficompl jo inc inc aas pop (bad) or mov push fcmovnb aaa jbe insb push xchg and pop lret cmp or addr16 mov inc mov pushf lea mov adc or repz stc pop icebp sti jne cmp stc inc mov repz jg pop xchg cld popa pop adc jg pop icebp outsl cs rcrl loopne hlt or test loop dec ficom call pop inc mov pop sarb out and sub and (bad) cmp mov fidivl (bad) and jbe (bad) inc aaa pusha add fs pusha inc push test jno mov mov xchg lret fcomp popf mov add and nop pop (bad) jbe dec cmc mov aaa cmpsl mov inc ja cmp cmp pop imul popa mov push adc xchg (bad) pop sbb clc inc (bad) sbb adc (bad) or xchg mov jb mov loopne jne mov mov icebp push cmp daa loope stos out jo test fnstcw jb inc (bad) sub inc rcrb push repnz pop ret sbb push leave bt dec loopne xchg iret andb and lahf addr16 jmp leave xchg mov scas popf iret pop lret rolb pop sbb cld bound icebp in fadds sbb pop jnp popf cltd mov cmc fadd fcoml mov aam or and mov icebp rolb jmp (bad) jmp pusha adc (bad) jl cli inc enter outsb mov mov jo xlat cmp repz out mov sti mov aad mov pop lock pop mov arpl loopne xchg insb add (bad) xor js or int3 idivb jecxz dec test xor rol push nop sti fimull jbe jmp mov sub insb adc inc sub xchg mov das push fcoms inc push shrl mov call in cld fnstenv int3 cmpsb mov ja adc out and int3 and iret insl sahf ret jl andb shrl rorb xor jbe ljmp and push add or jmp add ja push or aam inc jge or adc and cmp add movsl nop pop xor and shr rorb sahf pushf cmp adc out inc movsb shrl sbb cltd imul and (bad) insb js mov out push je add clc in in jge popa (bad) push in push flds movsb hlt push (bad) ljmp dec popa mov dec cmpsl push sbb repnz jg and inc pop xchg dec outsb andl push insl cmpsl add xchg jae mov sbb (bad) fildl mov mov or mov or nop popf aam mov sysenter scas scas xchg pop daa dec mov inc lea loop (bad) outsb jg pop sub cmpsb stos xchg fdivrl push shrl lea dec jbe stos fsts mov (bad) out cmp add mulb inc aaa xlat jnp sub stc fisubrl insl adc cmp cwtl push xor add pop jle inc pop movaps lds js in in aaa jnp mov imul jae mov fsubrl addb imul cmp mov add cltd test or xchg aad repnz push in xor xor mov xchg ret loope inc jle jge cmpsb cs xchg push insl rcrb push mov jp jo inc icebp (bad) rol int3 aaa mov inc mov mov scas (bad) aad outsb xchg push jb adc xchg movsl adc jo sahf dec jnp out xor mov xlat ljmp or xor pop xor in push sbb mov sub add dec inc cmp add rcll mov rorb mov push je xchg mov sbb outsb sub pop mov repz mov lret cs and je ret push push fisubl in cmc adc xchg xor xchg insb stos pop jp and adc mov movhps shr and popa cwtl pop ret sub fdivl mov mov lea dec clc mov pop cli cld dec push mov inc dec mov adc dec mov ss xor lods in rcrb test push out sub sbb mov int pop or arpl ret (bad) adc push push mov push mov push (bad) mulb call mov mov push stos sub leave (bad) pop mov cmp push jecxz hlt mov push orl sub mov mov xorl pushf jecxz pushf adc push (bad) or aam inc jg je test stos lcall or inc mov jb cltd (bad) jb mov adc and mov and ret dec (bad) xor rorb es loop jmp sub imul popw mov loopne dec xor adc xor mov inc (bad) fstpl xor (bad) jns (bad) mov lea fs cmp jl orps add adcb fidivrl cmpl out fldcw scas pop xor stos dec push mov pop pop inc or mov out add into xor pop fcmovnu ds push fstpt stos mov ss lods push cmpsb into push adc sbb and nop xchg dec push aam aaa xchg out out cmpsl mov imul push dec sbb inc dec nop leave mov (bad) mov lea sbb bound fs cmp jb mov add pop std xchg xor sub vandnps lock lds loop ss inc jbe out outsl dec cmc je mov xchg push cmp push xchg fistpll les mov ljmp jmp dec jae cmc dec fsubrs or nop xlat into cmp or addr16 mov inc mov pushf lea mov adc jg mov insl addr16 dec sbb or or imul in pop push fiaddl (bad) enter test loopne mov pop cmp dec pop dec adc and leave pop and test mov pop jnp ja add push adc daa das fwait mov mov mov icebp add jmp inc shll sub out gs jmp out push cmp jg jo dec lret scas pop jns fcomp popf mov add and nop pop (bad) jbe dec cmc mov aaa cmpsl mov inc ja cmp cmp sub lock adc enter sahf adc in push in mov mov insb fucomi shlb xchg jge cmp mov or mov xchg mov push cmp addl dec pop outsl lahf lcall inc cmp je xor jg sbb push cwtl push jbe add lods (bad) enter mov mov aad inc ss es adc xchg insl imul cmc stc fldcw mov rclb xor pop xor fadds sbb pop jnp popf cltd mov cmc fadd fcoml mov aam jge mov xchg (bad) and lahf inc (bad) mov push fisttpll int3 lahf adc (bad) xorl outsl mov push fsubr in dec mov insb cmpsb dec (bad) es cltd xchg push xchg inc sub sub jns femms outsl push mov (bad) xor sbb notl gs sbb jecxz loop mov jp adc cltd repz mov das adc add mov xor pop icebp aas mov mov adc dec inc push shrl mov call in cld fnstenv int3 cmpsb mov ja adc out and int3 and push icebp add mov call insb aas jo pop jp push iret push movsb mov enter rorl cli fisubrl add fcmovne jnp dec mov pop fcmovnbe jg loopne repz roll dec mov nop test out and mov cmc lods in jb dec setae sub imul (bad) push mov and enter pusha add fsubrs xchg xchg cs in jbe lret insl mov mov ljmp hlt (bad) mov leave jge popa (bad) push in push flds movsb hlt push (bad) ljmp dec popa mov dec cmpsl push sbb repnz dec clc rcr or mov adc xor mov cmp insl cmpsb out loop and scas jo data16 inc jmp inc icebp insl stc pop mov dec adc enter xor repnz xor push sub pop mov dec xchg loop lds sub sbb xorl (bad) mov inc or add push repnz pop push mov repz cwtl push (bad) adc push push lods mov scas jle add cld inc aaa xlat jnp sub stc lods pop mov movb jb mov pop movsb or xor mov push lock insl test push (bad) hlt loopne loope mov std adc push in or cmp cmp xchg add and push call ss cmp xor fidiv push rol mov jle je cmpsb imul and xor fsts ja pop loopne repnz xor xor hlt and jbe mov push and orl repnz mov mov fwait mov xor mov addl into leave push or xor sub rcrb out jmp sti test pop dec xchg cwtl pop dec jmp cmp push stos mov pop sub mov arpl pushl js mov out push stos (bad) bound xor in add or cmpsb stos inc sar push movsl pop pop adc pop jge ror push jmp mov adc loop add aad (bad) jg jp xchg xor mov das cs iret and mov cmp sbb lcall pusha arpl inc xchg adc mov xchg sbb div inc xchg jae repnz mov inc push pop adc dec mov fdivl iret pop jmp loop adc sbb xor lcall xchg dec adc add dec or dec add mov fidivl push (bad) jmp mov mov in mov movb sbb movsl fimull (bad) xor call outsb and mov stc sar xchg mov in mov adc jg nop rorl pushf push lea or push arpl jns mov push mov mov sahf lods fldt in arpl cmp mov xchg nop in jb mov adc and mov fstpt pop push sti aad lods inc ja mov pop aam or ja mov xchg outsl mov push xlat add sbb dec push imul inc sub fnstsw out push mov pushf jns rcl lret out js fs cmp pop imul dec imul xorb ret loop xor xchg mov inc xchg sbb aam or xchg add sub in push or push jp in and lcall push adc mov mov scas add or dec mov dec call jno or pop jae dec pop testl mov mov leave xor fs xor addr16 data16 (bad) fnstenv addr16 jae cld dec (bad) mov imull sub or out mov jns and mov (bad) je in pop pop sub push sub imul jne imul sti (bad) jne pop mov cmp lcall rclb push sbb jbe leave pop cmp jnp xchg loope push outsl clc decb dec out cmpsl aad jl,pn inc je ss push mov mov adc or repz stc pop icebp sti jne cmp stc inc mov repz jg pop xchg cld popa sub in cmp mov nop movsb stos bound out jns cmp loopne ret and jl jbe xchg call jl pop test shrl out add jnp jae inc dec mov or xor gs lahf lods mov insl daa mov pusha cmpsl jg push rcrb stos in push and (bad) add or (bad) or and pop addl outsl pusha mov mov setg dec ja cmp cmp pop imul popa mov push adc xchg (bad) pop sbb clc inc (bad) sbb bound and push xchg sub (bad) xchg jno leave dec push mov scas push test xchg jbe in fucom cmp or jecxz sarl stos jl out jnp mov inc push cld pop and mov cmp (bad) jp lds movsl xchg push sub loopne mov cmpb and ja std sahf fcmovne test mov lea cmp sub lahf or arpl or jno push jg jmp sbb std data16 (bad) jae jecxz and xchg mov mov aam or and mov icebp rolb jmp (bad) jmp pusha adc cmp push mov clc or or icebp pop imul rorb mov inc sub aad rorb lock outsl xchg jg in imul (bad) xor js or int jle jg xor nop insb inc nop mov push adc xlat ss mov shrb bnd jle fwait xor xchg inc push mov dec mov je test adc xor lods or mov addl out adc fcoms mov cld and int3 and iret insl sahf ret jl andb shrl rorb xor add (bad) mov xlat sub pop xchg cmpsb xor fbstp loopne or inc loopne cmp nop xor out and pop test fwait add dec jle xor and shr rorb lcall xchg and cmp cmp add jl cmp mov push outsb xchg mov aaa lret sahf enter sbb or (bad) scas push and (bad) mov out inc add sub dec cmpsl push sbb repnz jg and inc pop xchg dec outsb andl push insl cmpsl add xchg jae mov outsb pop cmpsb cmp frstor add push xchg cmp xor cwtl nop xor sbb xor and pop xor fisub dec xchg loop sub dec mulb cmp lret fs sub lock mov xor adc fstp rcrl xchg testl jo lock pop in jo cmc inc sti xchg pop xor jmp adc pop mov pushf mov popa xor scas xor and sbb jae or iret popf outsb jp push sbb in in fiaddl movl pushf mov xchg and cmp dec push test push lock xchg mov or fcmovnbe or clc cltd xor fidiv push rol mov jle je cmpsb imul sub sbb xor rcl lret xor sub cmp cmp add outsb fcoml fs and push sahf into ss ret xchg sub pusha (bad) dec inc push rorb pushf pop mov adc sbb jecxz int pop dec xchg cwtl pop dec jmp dec adc test call sbb (bad) repnz imul sbb cmp mov mov outsl pop mov movsl aam fwait xchg pop (bad) cmc ret rolb arpl cmp mov adc pop repnz xchg mov (bad) aaa and (bad) iret push out jo dec ret cmp mov neg out (bad) jnp xor mov rcrl enter xor push daa sub fildll (bad) push leave out and fwait clc aad lahf push outsb rolb xor push sbb xor lcall loopne jl mov xchg (bad) pushf sahf pop cmp lcall scas cmp orl movsl pop pop sbb call mov push or call add rcr into pop notb flds xor adc bound not mov out adc mov xor or pop cmpsb pushf in jmp jecxz inc shrl or or out lcall and push fisub mov stos (bad) leave cmp sahf mov scas mov sarb adcl add jns ja,pn mov pop aam or ja mov xchg sbb imull addr16 xchg cmc adc and fidivr ss xor (bad) jns (bad) mov lea fs cmp jl orps add adcb ret andl test fxam fstl dec inc lock dec mov dec and cltd jmp ds push outsb xchg (bad) jbe popa cwtl dec or or fild sbb mov jb push sub rcrl cmp into xchg fdivs mov outsl xlat mov add dec aam lds jae dec pop testl mov mov mov cwtl lods push mov pop cmpsb sti (bad) bound cwtl outsb jbe int3 enter out bound (bad) fs rolb sub outsl out lea rorl sbb in pop sub and mov ret ljmp xchg les xchg test bound mov xchg mov pop lret xor adc dec push notl xor mov test push fbstp ret (bad) cmc ds enter add xchg repz icebp sti jne cmp stc inc mov repz jg pop xchg cld popa pop adc jg pop icebp outsl cmp mov xchg mov sub add jns jae xchg mov and jl pop lret xor adc bound jnp jae inc das mov inc or repz daa aaa jne gs in lahf iret mov push sub push jne fs enter test mov popa fnstcw pop or vpand inc add es jge ljmp and (bad) int outsl cmpsb (bad) (bad) lock sbb (bad) jmp popa mov push adc xchg (bad) pop sbb clc inc (bad) sbb adc (bad) or xchg mov push shrl fldenv jp loopne dec lcall pop adc sbb lcall and sahf and je inc jp mov cmp pop or push cs xor mov movl inc lret aad add dec imul aad mov jecxz inc cld mov lret fidivr sbb adc sub (bad) out bound inc pop and xor push dec and test and std (bad) lret sbb dec fcomip rolb jmp (bad) jmp pusha adc (bad) jl cli inc enter jno stos push and hlt mov mov aas mov push xor push pop pop push lret add inc jns js outsl push movsb mov imul shll push or out div xchg negl (bad) dec xchg loop sbb jp mov loope into add mov mulb cld fcmovne sbb in aas and (bad) mov sbbb mov or push gs add aam xchg and pop in shrl rorb xor jbe ljmp and push add and pop into mov and pop xor (bad) sub rcll into in adc adc xor into or add pop outsl pop xor (bad) fstpl fbstp add adc xor adc mov dec sbb cltd mov (bad) jb icebp mov ss (bad) jl push sti add inc fistl leave jge sahf inc push in push fnstcw fidivl adc lcall sub dec cmpsl icebp jecxz repnz jl and inc pop xchg dec xchg jl div push insl cmpsl (bad) xor jae mov sbb leave fildl mov mov jb,pt xchg push stc pop and outsl lret mov or pop pop int3 adc pop lds pop or xchg orb dec or push int3 seta dec xchg fs rolb lock pop xor and mov mov lods mov lods addl (bad) test sub push lods pop mov cmp (bad) mov pop movsb or xor mov and sbb or iret popf outsb jp push push xor add fiaddl fdivrs jmp imul xchg movl push sahf in ror pop into hlt imul mov rolb leave repz mov mov xchg mov pop xchg repz fisub sarb inc push xor aas sub xor jno mov ret sub push lcall fwait push or cmp push (bad) mov orl push das popf fnstenv sbb sub mov jg push fstpl pop dec xchg cwtl pop dec jmp dec adc test call adc loopne mov inc dec repz lcall sti adc aam inc out or lods frstor movsb fistpl sub lret mov xchg xchg jae stos ret aas insl mov sub mov mov iret (bad) cmp mov dec adc mov xbegin add rcll xchg jno lods dec jge adc push stos xchg (bad) mov pop pop or jnp sahf jecxz jnp cmp xchg loope sub push jg xor lcall loopne jl mov xchg (bad) pushf sahf pop add (bad) jl,pn pop (bad) icebp cmp into in mov push xchg lret pusha scas (bad) mov fdivrs and and and mov xlat je pop aas lods xchg mov es lods xchg gs and fcmovnbe std cmpsl or or stos adc mov jne and in shrl push addr16 mov fsubr fisttpl inc jge fbstp (bad) sahf or adc mov in test jle xor push in mov and mov mov pop aam jp lods loope call icebp out or data16 cwtl mov das push or imul fist (bad) bound or sbb adc jb (bad) clc arpl pop push push push sub jle xor ljmp fs lret hlt flds xchg cmp aam push pop mov daa mov or aad arpl cmp mov cmp adcl inc dec (bad) adc dec push ja xor adc dec xchg xchg jle mov rclb inc inc or pop cmp dec pop testl push mov inc ret mov push lods dec cld mov aaa popf mov pop xor pop pop dec jae sub mov jecxz jae sub in mov mov shrb (bad) je in pop pop sub push sub imul mov sti inc leave push pop push and mov shrl clc push scas lock mov or xchg icebp mov outsl jmp push dec add xor adc mov mov roll push jns stos sar testl icebp sti jne cmp mov cld sbb enter sahf mov push fiaddl (bad) enter test loopne ret daa lahf cmp mov pop or ja divb loopne les dec xor add jnp jae inc dec mov or xor gs lahf lods mov insl sub outsb pusha inc lods repz cmpsl push push adc push ss xchg std xor jge,pt das mov xchg scas scas (bad) lcall shrl push int das cmc add inc ror int3 (bad) and mov dec pop sub xchg dec mov popa mov push adc xchg cmp iret push inc (bad) sbb jmp add xchg (bad) or jns jle cmp fisttpl inc jecxz dec lcall cwtl xchg mov andl test mov stos adcb add (bad) xchg mov push cmpsb test out pop pop dec cmp rcr jg push insb fcoml push cwtl jnp cmc ss mov xchg pushf xor jg fbld ss mov xor pop xor enter sub cmp xor popf pushf mov dec cmc fmul fist mov xlat dec or ja cmpb rclb cli ficomp jmp lea pusha pop adc lret jne mov jno stos push and hlt mov mov aas mov es pop outsb pop xchg jne ss psllw push sbb clc imull inc rcll cs xchg rcll in stos push or iret xchg mov adc ja jbe out jo mov cmpsl insl xchg and lds adc dec notl sub lea and cld mov mov cmpsb (bad) ja mov inc mov add insl lahf ret dec and pop (bad) pop xchg mov shl xor ja test subl aam xchg and xchg pop into mov and pop mov mov pop cld mov in pop fisttpl into or cli add test fwait ret push inc adc leave add adc arpl adc fstp daa sbb data16 cli dec adc mov xchg pop dec add push inc dec imul push in in flds icebp int (bad) fistl movsb mov fwait adc mov dec cmpsl push sbb repnz add insl pop movsb dec outsb orl push insb cmpsl dec lret std jae mov ja mov mov setle push lock ds ret sbbl clc jbe lret mov cmpsl lret xchg (bad) pop mov (bad) sub jns pop insl mov orb mov pop cs stos (bad) push inc dec mov stos movsb repnz fisttpl addr16 and inc lahf cmp jns (bad) (bad) dec icebp lret int3 ret jle pop dec cld and mov dec sub movsb addr16 stc (bad) pop shrb push dec movb je mov push movsb jnp pop movsb pop pop pop pop fsubl pop sbb inc pusha cmp push je addl jmp jg jmp xchg xor aad push mov in stos xor pop mov sub pop data16 (bad) jp aaa dec jmp pop loop inc scas mov nop lods test inc sbb jnp inc cmp add faddl rcl ret dec ret js repz xchg xchg sahf jl fwait gs pop mov dec ljmp mov xlat jmp lea leave jne dec es aas dec inc mov out jge shl mov (bad) mov test dec xchg test popa jmp jl mov adc test add push data16 repnz imul pop dec mov jmp xor imul (bad) in lcall or lock adc stos mov or out int3 mov stos pop bound pop mov test jno xchg jle dec xchg dec mov rcl lods adc jno jb sti mov jnp test cmp aaa fwait xchg and adc (bad) jp fdivl and insb cmp sahf cwtl (bad) mov bound push jge outsl outsl sub jmp cmpsl mov rsqrtps test lock divl inc clc cmp sub stc dec add jge or cmp pop sbb and out (bad) lock add xchg mov dec jg inc (bad) bound push jb int xchg enter dec add or lea (bad) cmp or addr16 adc loope orl pop fsub cmp or mul or test stc pop cmp sub into jmp repnz and adc cld out adc jg xor out pop mov cmpsb and mov lcall xor jnp mov lret sti inc add repnz repz int3 xorl jecxz push lret pushl sbb fnop or flds add roll fdivrp cli ljmp enter pusha cmp (bad) xchg je addr16 push and mov data16 repnz sahf lret sbb xchg pushf pop mov das lds (bad) jno xchg sti mov repz stos je add sub ja lods push cmpsb into push adc sbb and nop loop and jno or pop jae dec pop testl mov mov mov cwtl lods push mov pop ss (bad) bound lods outsb jbe int3 enter out bound adc sbb lea mov cld repz sub in mov cltd and xchg js fwait mov fcoms mov arpl ss jo jmp add aam mov outsl je or push jle sub push scas lock mov daa test imul in nop xlat into cmp or addr16 mov inc mov pushf lea mov adc or repz stc pop icebp sti jne cmp stc inc mov repz jg pop xchg cld popa pop adc jg pop icebp outsl cmp mov xchg mov sub add loopne ljmp ss les dec xor cli popf negl jmp daa dec dec aas lock enter stos js add and pop fidivl lahf fildl push adc push ss xchg std inc orb pop lret scas pop jns fcomp popf mov add and nop pop (bad) jbe dec cmc mov aaa cmpsl mov inc ja cmp cmp pop imul popa mov push adc xchg (bad) pop sbb clc inc (bad) sbb adc (bad) or xchg mov push shrl fldenv jp loopne dec lcall cwtl xchg mov andl test mov out pop loop les iret mov pop cmpsb lods outsl shrb out pop pop dec cmp pop rcr jg fs fcoml pop cwtl (bad) mov ss out cltd push mov push adc jg fsubl push dec mov xor pop xor fadds sbb mov add jb lcall cmc mov sbb push mov cmc adc jge (bad) in mov lods dec stos push pop adc mov shrb jg (bad) pop pop sub or xchg jp mov (bad) fisttpl inc loopne pop push in ret push pusha cwtl xchg mov (bad) mul xchg addr16 ret add lock loop lds mov or shrb mov sbb (bad) lret ljmp sub mov dec xlat push mov dec adc jns push cs dec mov sub cwtl faddl lret cld pop jnp mov mov fnsave fcompl (bad) xchg or or sarl repz jmp cmpsl cli adc jg pusha adc (bad) vmread inc ret std pop xchg mov popf lea mov es insb imul movsb adc xchg mov std xor (bad) imull lret adc cmpsb xchg std into daa xor mov jle into push insl sbb outsl mov data16 jne or out pop hlt mov nop xchg or daa push lods mov adc sbb fldcw aam jmp mov rolb xor popa cld repnz push enter push mov push iret insl xchg lods (bad) and inc in shrl xlat (bad) arpl ss sti inc dec movsb jbe test push std adc push add dec xor mov mov jo xlat repz sarl inc cmp cmp mov push push fs jle lock pop add lret (bad) cmc loopne push sub cmp popl adc outsb stos pusha and addr16 mov inc bound data16 in sbb mov push jo (bad) xor add (bad) (bad) ss jnp popa xchg arpl in flds mov mov sbb addr16 adc xchg inc mov lds or inc jae dec outsb mov (bad) push insl mov clc mov sbb ljmp mov mov jb stc jno,pt push push stc push and popa imul mov or daa (bad) int3 adc das cltd adc pushf sbb adc aam and pop xorb push fwait jmp cli out jmp stos pop xor or inc mov in mov pop rcl lods and stos push lret cli push add movsb push mov (bad) lock mov (bad) mov outsl (bad) cmpsl (bad) mov sahf aaa movsb pop pop xor mov es cmp mov popf outsb jnp sbb dec in ljmp jne jg loope sti js xchg int lcall xchg test (bad) jg cld sub int xlat ret int std and insb mov (bad) mov sub les ret fwait in test pop xor imul mov scas mov mov stc lret sub dec in stc xchg hlt push popa fwait push pop cs jno inc ficompl xlat mov push mov (bad) xor ljmp and xlat cs int out lahf call lret sti push sti test addr16 nop test loopne mov lcall pushf mov xor adc sbb mov nop outsl and mov sub fprem1 xor inc mov movsl sub enter repz and (bad) in xchg jae sub stos cmpsb push pop outsb dec jo clc fmuls sar fist mov cmp int mov jnp and ds test push adc cltd jnp adc pop cli mulb repnz addr16 dec mov leave roll xchg int sbb test pop (bad) pushf mov adc sbb (bad) cmp xchg les loopne jbe xchg cwtl push (bad) sar (bad) lcall clc lods lcall scas dec add pop and adc mov mov cmp bound and das push popw lret fistp aas cmpsb pushf scas sub push stos aaa jbe insb and jns xor jle inc addr16 xor jge xchg push addr16 pusha ror or outsb sbb sbb xchg xchg jp (bad) dec cwtl in test xchg cmp adcl jne lock das inc subb popa je (bad) (bad) jb cwtl or mov fstpt jbe sti aad push push jo sahf lds sub arpl aad mull addr16 adcb add xchg loopne and iret imul imul mov mov mov jle arpl ds lret aam rcr out sub sbb scas cli clc (bad) daa xor es mov rcrb mov dec jg je ja mov sbb inc aad aad gs dec sbb mov push bound mov cmp popf out mov push adc xchg and xchg mov jnp nop or and outsb stos or and dec sbb shrl fsubs cmp in sbb pop jbe push mov andl inc push cmp cltd (bad) cmp sbb aad fistl sub int mov mov sbb ja popa std mov into adc pop adc imul dec rclb mov popf mov sub mov (bad) cmp lock std cli daa test inc xchg dec in xchg mov mov sub into addr16 mov imul pop lcall xchg dec adc or insl imul sahf push jne xor ljmp xor cmp popa push mov adc or jns les or ss rclb push lods aad pushf mov pop jno pop ss popa sbb or xor jmp daa dec dec sub sarl cmpsl inc push stc mov and push rcrb lock push push add push xor cmp inc mov cmpsb xchg pop lret leave in jno inc fcomp repnz add std inc mov jle scas mov xor adc and cmp adc imul popa mov pop sbb lret pop mov rcl (bad) jno lods and std fisttp mov bound jne enter lods cld outsl addr16 cmp jae aam (bad) xchg addr16 shrb mov out add mov cld (bad) xchg cmpsl bound rcrl or dec dec pop sub rcr insb dec insb inc mov pop idivl cmc cmp mov test jg fnop add dec (bad) iret sbb xor in (bad) hlt shrb out aad push jg cltd mov jns pop push in nop stc sbb and jae insb sti loopne push inc imull enter shr and push sbb out mov inc ret divb mov and hlt in pop pushf mov cmc aas mov xor mov pop sbbb jae xor jns cmc je sbb imull lret add cmp pop aam nop and insl sbb outsl mov data16 lret lret mov addb lods jnp add inc inc inc push pop ret mov ficomp std ret aam (bad) clc jle loopne cwtl inc ja adc hlt lock jb lret (bad) aam lds lds xchg mov jb in cmp dec sbb repz movsb jbe rcrl and test dec aam in dec add and or and jae mov out sti outsl into jmp xchg adc int push ds fidiv movsb int3 iret (bad) leave mov pop or adc fs adc lret sbb sbb daa cli dec pop leave lea ja pop test pusha out and adc (bad) mov stc je inc cld inc in push cmpsl (bad) xor ljmp xor scas inc cmp sbb and inc pop xchg adc jp push lret xchg ja nop jecxz or loop addl loop cs cmp xchg push std dec mov bound mov ror loop cmpsb int3 adc lds jnp mov xor pop lock mov and jmp xor mov movsb rolb (bad) aad adc es cltd xor push sub mov enterw inc adc push mov stc test scas dec dec (bad) out jg (bad) clc mov and or sub add iret pushf dec insb bound mov js arpl push or push imul dec xchg btc xchg inc aad and leave push (bad) cmc imull pop les jecxz jl rolb mov mull mov inc adcl scas aam xchg mov cmp test mov mov sub cmp ficompl std mov ret insb fidiv mov push lcall lahf push or cmp push shll xlat ljmp add cmp arpl ficomp fdivr push sarb pop fiadd (bad) or pop adc xor imul xor rclb aam mov add push xlat dec xchg jmp xor inc movsl repnz std vpmullw sub daa (bad) fldl xor and lahf bound int jne shr mov adc int3 int fcmovb sti dec add cwtl ret mov mov ret test or mov into mov (bad) (bad) xor sub dec ja jp cli cld inc bound and movsb dec dec mov jnp dec mov lock mov jno loop add sbb cmp lcall sarb push cwtl push sar xchg (bad) mov pop cmp nop or mov daa movsb outsb jo jno inc adc push xchg jle jp (bad) aad cmp int3 and and popl xlat je or lods xchg movsl movsl andl scas out sub push jo sub and pusha xchg jns xchg dec inc sarb jmp or cmp hlt jo repnz gs sub into mov jns sub inc mov popa test (bad) add and mov mov pop adc lret sbb int mov mov or inc mov into fnop dec cltd test dec add mov pop mov mov fdivs imul int dec cs jg adc or jmp pop mov nop sbb sbb xchg xchg std decb push adc xor jbe adc outsl cmp add mov into xchg push cmp and mov scas mov xchg js jecxz mov mov mov push mov (bad) xlat sbb and push dec sti mov icebp mov sbb adc imul pop in ds adc fnstcw push mov pop cmpsb test subl out bound jg dec sbb stos imul lods cld repz push sub push fdivrs dec jne pop mov call mov sti inc out xchg pusha mov arpl ss push call call mov dec ss inc push jle sub push scas repnz mov lcall xlat fdivrs mov adc sub or inc push mov adc pop imul sbb repz cli pop icebp sti ja cmp cli inc mov mov xchg cld popa pop adc jg pop icebp outsl cmp mov xchg mov sub add loopne ljmp ss ret inc or ret (bad) icebp pop movsl loope aad rorb dec aas neg mov enter mov cmpsl rcrl negl (bad) roll out fwait int rcrl lods fistp scas lret mov or aam scas mov push aad popf mov and popf sub push sub cmpsl dec cmp sbb (bad) sub fs inc mov popa xchg ret push and ret rorl pop jno cmp enter roll push (bad) mov pop aam jp in push inc pushf stos lret les jno cwtl add (bad) roll scas ja (bad) mov adc into sar lret xchg mov adc sbb xor sbb jecxz pop fs sbb pop cwtl mov xchg out sbb sahf fwait xor insl add pop mov and inc out sbb aas lock (bad) lahf mov movsb rol fdivl xlat repz mov jno push mov add les scas fidivr (bad) mov and pusha adc clc sti ffree jp sbb neg lcall loopne lcall cmp dec aaa arpl xchg daa jg out mov pushf subl or cltd (bad) mul lds ficom dec mov loope nop and repz push sbb popa mov sbb ss cmp gs out lock sahf inc push sahf push add mov xchg das dec in sbb rcll and adc in jmp (bad) notb dec mov out and inc lret lods stos add insl jle in xchg ljmp loopne (bad) sti cmp cs xchg mov pop aam pushf push or and pop jl and push adc pop ret mov mov ljmp mov or out cmc test and fst test sub jne or outsb daa cmpsb data16 sbb pop xchg rcrl adc add inc je xor and mov push push push jno and (bad) in iret jge popa rcrl in fcoms cld mov test fisttpll push push es inc stos pop adc xor rorb xor xchg sti std repnz pop mov lret xchg jae mov sub jp sbb fldl mov or mov rcll or pop shll cmpsb jl test inc fdiv (bad) mov mov sub mov sbb dec loop mov pop push push int3 seta dec nop fwait jmp rolb leave stos pop xor and inc mov dec jnp mov mov mov (bad) jns sarb sub cli mov imul movb push pusha mov dec movsb sbb pop mov xchg es xchg add jae or push push or les in ficoml xor jg jmp xchg bsr push jmp jl mov fbstp mov repnz (bad) jns rolb int out mov dec cltd addl fcmovbe cltd nop mov xchg mov mov and pop and ret mov xor stc xchg test hlt or sarb rclb jae int3 pop mov xor sub insb cmp push out imul ffree dec pop or call dec adc ss pop (bad) test jmp sbb (bad) pop mov push nop outsl test jecxz xchg inc inc sub rcll mov pop sub js int movsl cmpsl or add lahf jge iret push test gs out lea (bad) jno enter shr fildll jbe cmp cmpsb mov andb iret lahf jb ficoml sbb ds jle adc lock push jnp inc dec mov adc dec jmp sbb test lods pop loop adc sbb xor out jnp aad test mov push movsl clc fcmovnu or popf pop cmp out sub test dec pop (bad) jge dec cmc add cmp sbbb adc cmp int3 jbe clc jge pop inc mov roll fdivs sahf xchg mov inc inc stos xchg push sub insl out lods and (bad) and insb mov dec and sahf jbe dec notb pushf insb pop mov ja lock cwtl cld mov xchg sbb inc (bad) lods stos and inc das lcall andl sub adc int fcomi push jle jecxz sub sbb cmpsl mov (bad) or lcall in (bad) (bad) clc es pop or addr16 cmpl cmp imul xchg arpl add inc jb popa jge mov movsl mov cmp adc adc lods lret aaa xor mov insb mov mov inc in xor fucomi xchg test inc stos test lock xchg mov xor xor fs xchg cmpsl rolb in lods jecxz dec jge stos add ficompl sahf sbb jg int add lret loop jnp je or dec dec jl cmpsl outsl jp xchg cmp sbb in inc push popf rcrl sbb lret sahf cmp or push insl (bad) mov mov cmp cmc and leave ljmp fwait int adc rol push movsb xchg pusha and xchg adc arpl jb cmp enter movb aam cmpsb jnp fistpll add xchg jbe roll add jmp inc dec xchg ror xchg mov adc stos jo repz (bad) je ljmp outsl hlt loope movsb in leave push rcrl xor sbb sti jmp mov sar cmp repnz sub pop xchg cld popa (bad) sub jg ds outsl cmp sub add sub add loop ds ja addr16 roll push scas dec push xchg jae sub repnz dec dec aas arpl adc movsl int3 mov stos js test sahf into pop fidivrl lahf fistl jmp pop adc (bad) xor and in inc addb jge (bad) scas enter setnp and nop leave (bad) andb (bad) daa arpl xor es xor xchg dec xchg dec mov addr16 lret dec xor xchg (bad) pop mov ret sbb pop adc (bad) dec ret push je lods cmp pop xchg mov and loopne lcallw fs daa mov cmp xchg negb mov repnz pop loop les iret stos in pop cmpsb lods outsl inc imul dec xor frstor lret fs fsubrl dec cwtl dec sahf cmc ss out or xchg cwtl xor adc mov bound pop movsl pop xor pop cwtl out sub add sbb cltd mov test (bad) fisttpl xlat mov xlat addr16 sarl fst sarb (bad) jmp ja push in jmp out lret dec add out nop mov xchg daa hlt mov movsb inc cmp outsb pop xchg xlat nop sub push psllw sbb lods (bad) das int3 inc rcll adcl dec push pushf cmp sbb mov cmpsl data16 jb jbe ficoml fmulp dec incl jge stc fwait push sub add pop push dec jne scas sbb pop xor mov clc jle dec cmpsb es or cld and dec and mov stos ret jl andb fimul xchg (bad) (bad) rcrl xor mov lret and add fwait lds mov xchg cmp mov push int3 repz sarl addr16 jmp sbb ret into or bnd mov cli lret (bad) fstpl fs add and repz push push pop pusha xchg adc dec sbb stos das mov cmp mov fdivrl jecxz mov mov sbb hlt (bad) mov pop jne pusha leave push (bad) xchg out inc icebp movsb hlt popf shl movsl mov lods arpl mov add iret jg and or dec xchg (bad) scas cmc lret ret mov sbb into leave orl out cltd mov mov ss rcr ret xchg addr16 frndint repnz pop sbb mov pop pop or fadds or push xchg lods push or fwait jmp inc mov or lret stos push add aaa inc xor loop (bad) lods mov cmp notl stc jnp mov sub test xchg mov cwtl imul dec movb cmp jmp xor and sbb lahf xor and cld in in ficoml pop jne lods fadd xchg bsr iret inc (bad) xchg leave ret enter xor push hlt and repnz push jmp (bad) imull (bad) scas decb pop dec cltd addl notb scas adc rcrb push pop or adc cmp inc mov ret cwtl pop cmp push lods push or jecxz adc xor mov dec leave xchg leave rdtsc sub xor mov xlat movsb out ds mov lret repz xlat xchg (bad) std pop outsb stos cwtl pop dec jmp pop pop mov test call push daa insb data16 repnz imul and jg icebp (bad) aam mov sub jo (bad) mov mov (bad) sub mov cmc cld stos jae mov or jne pop lock shrb ljmp add xor xor mov or ficomp test cmp lods dec jge xchg call push adc scas inc dec sub dec adc jecxz int3 or fidivl adc mov jg mov test mov inc out pushf sahf pop stos mov lcall adc daa scas fcoms sub add pop out or jb sub (bad) and test aas test es adcb pop sub jns xchg sub mov and repz rol and cmp test jns negb mov xor scas mov pushf lock pop push push sti fs cwtl aam jb mov xchg cmpsb call loop pop push sti inc inc inc dec cmp lea mov xchg cld push mov scas dec cltd adc xor popf lods nop cmc adc jb in jb (bad) push add jb scas bound out data16 in imul push shl push leave lret aam (bad) out into daa adc mov and ds fldcw inc sub arpl call mov in inc ret leave arpl push int pusha mov fstpt stos mov lods rcrb sti sbb jge dec push sbb nop mov das xor cmp not imul push sub xor fwait lea into cmpsb mov jno es push mov pop adc pop fs sbb (bad) cli aam fmuls ss mov iret mov xchg js ret jno ja les mov sahf adc lods adc dec xchg ret test call mov sub and mov mov (bad) imul ja fwait into mov cmc or loop push ret leave test imul inc add sbb sub sti cmp mov rorb shl mov xchg cld popa into adc push adc ja sahf and outsl cmp sub push mov sub add mov scas cmp pop ja pusha cmpsl int push cli dec arpl imul (bad) (bad) out daa dec dec aas popa fsts leave repnz loop subl not out fsubr xchg lret lahf fistl jmp push adc push mov test (bad) scas iret jns fidivl (bad) sub into (bad) aad pop cmc jmp shl mov inc (bad) xor sub in mov aaa fimul push push sub push inc add adc mov (bad) mov int3 dec push ja shrl fldt and stos xchg ret divb fbstp faddl xor dec mov out pop loop fcoml xlat xchg mov pop cmpsb lods outsl inc jae (bad) jmp pop rcr jg jl int sub cwtl xchg pop dec pop test sti jg fsubl push inc mov xor test in pop cwtl out jmp jge pop jnp popf lcall (bad) pop push leave xlat mov shll push mov lock jecxz (bad) ficom jecxz ljmp adc lret push sbb xchg fisttpl and hlt mov mov cmp cmp inc data16 adc jp sub lahf sub mov xchg pslld test adc rcl das add xor and dec pop push cmp test xor out adc int3 dec call xchg roll lods mov rcrl pusha dec pop inc into push shrl mov jmp sbb cld loope hlt push mov clc jle iret cmpsb jbe jbe adc and iret and sbb and pop cld aam fwait pop (bad) arpl sbb cli xor clc push pop addl push pop int jb into mov and push sbb xchg mov ret outsb fsubrp das rorl xchg xor into or sti or movsb int3 lret (bad) ficomp sub add adc jne out js into pop cmc xchg mov dec sbb data16 es mov xor sbb imul jl fs pop and push flds cmpsl hlt mov lret mov shll fwait arpl mov fisubrl iret jg and aam pop dec outsb andl push stos cmpsb add xchg jnp mov sbb fisub xchg sahf add mov mov aas (bad) movl mov outsb sarl lret repnz or and mov pop pop or inc adcb push push push or dec xchg fwait call or or and inc jae les ja sub lods mov int3 sub dec jmp mov sub cld xchg pop inc imul movb cmp jmp xor sub sbb jo mov jae mov lret in out fcmovb jp inc or mov xchg or push (bad) dec shlb and in fdivl imul xor repnz push jmp dec out mov aas cmp dec lcall sti sub fisub rcrb inc rorl or sub repnz jo je xchg xchg sub dec es mov imul mov inc ret xor mov (bad) mov (bad) loope sub enter xor jmp int3 rcr out sub aam adc pop dec xchg cwtl pop dec jmp into adc int3 call (bad) dec addr16 repnz imul add mov sub sar mov sub jns ficomp sub or (bad) mov xchg xchg jae mov or addr16 enter fdivr fisttp xor cmp mov pop or mov inc jge rcll xorb xchg rclb outsl ja hlt sub movsl inc dec mov adc dec mov int3 lods sbb or cmpsb pop loop adc sbb and aad cmpb cwtl push sar push lret aad pushf pop jle dec mov leave cmp int dec pop cmc jno dec jl push pop jne adc int3 fldl sahf xor jne aad lods xchg mov es pop andb or cld jns adc push push dec xchg dec aaa ja xchg inc ljmp mov xor imulb mov push sub stos cwtl and dec jnp icebp ss pop test mov xchg into sbb and ja ret sti rorl dec ja mov jmp iret or ja mov (bad) mov pop xchg mov mov xchg orl sub jo (bad) jp cld cmpsb arpl dec cs jb jno arpl div lea xchg aam sarl adc mov xor movsb push mov sub mov inc jne aaa add iret xchg push pop ljmp xchg fstl xor fwait ds pop fistl in stos mov mov cmpsb add adc push xchg jns dec leave and ja dec out xchg loop and pusha test sbb jmp outsl sbb and in jl mov sahf lods push mov aaa mov (bad) dec scas cwtl outsl jbe (bad) enter add cmp or lea add cld repz das (bad) in mov cltd and push ja iret fwait mov fcoms mov arpl push cltd jo call add aam test (bad) jge or push sbb scas dec xchg mov daa fwait rcl xchg test nop aad jne cli adc sub or gs nop fild je xor dec mov loopne or imul stc pop lock adc cmp stc inc mov mov xchg dec bound xchg adc pop inc insb cmp mov xchg mov sub dec adc cmpsl ljmp ss mov dec xor clc popf ret jmp daa dec dec aas mov lret jmp xor xor fildll mov mov (bad) mov fildl push push adc xor and mov mov fimull fsubrs sub and jae cmc mov add mov repz in mov fs push adc xchg pop sbb cli push (bad) sbb adc orl (bad) hlt push aam int3 rcr mov flds inc loopne dec outsb mov push adcl movl fsubp andb add (bad) movsb lods or mov outsl shrl sti pop pop dec cmp or frstor pusha insb fcoml lret mov ss cltd push mov push adc and pop sahf (bad) xor pop xor xchg xchg pop shrb out lret pop jnp popf sti mov lock leave xchg pop insb sar fstpt sarb jae jg mov icebp rolb mov loop xchg and jg pusha or icebp jmp (bad) lods fdivr inc int3 sbb in nop scas push mov pop movsb pushf push mov aas into sub inc outsb outsb dec xchg mov and cmp nop js stos xchg push int3 inc rol cmp xchg negl (bad) xor test add inc sbb outsl les jns xchg ja jbe loopne faddp dec push (bad) shll lods mov adc inc inc push shrl mov call icebp inc cld fdivs into cmpsb decl daa adc jecxz and mov jb fildl (bad) popa sahf ret jg je in jae mov imul sar xor mov inc and pop and push add in pop int3 mov mov adc repz cld sarb jp in adc sbb inc push fs add cmpsb int3 jecxz fstpl das jno add add push cmp adc mov dec sbb jae daa sti dec xchg lea jae add and inc gs (bad) mov lahf ja popa xchg icebp push flds mov movsb sbb and mov dec cmpsl or out jg and inc pop movsl inc outsb andl insl cmpsl add hlt data16 mov sbb (bad) xchg test aad inc sbb sub xchg push scas push and outsl lret mov ret iret pop cmpsb iret adc lds pop js xchg cmpb xor inc jne cmp xchg push aaa dec ficomp add or icebp stos mov adc xor jns (bad) (bad) imulb lods mov scas jle pop int inc aaa aad addr16 test pop mov rep pop mov movb jbe push ljmp js xor mov xchg scas pop jae add add in in in fimull jno inc test jmp xchg dec mov movl outsl jmp xor icebp into sub push jmp repz mov aas cmp dec test xchg mov pop (bad) out scas fbld (bad) cltd nop lods test push adc or sub and inc xchg rolb test push cltd scas or fwait xor push imul (bad) xor aam cmp ljmp or add sub (bad) lahf out sub out ljmp dec xchg addl ss add xchg (bad) lea fwait or (bad) loop xchg imul popf jl clc cmp ror into mov dec cmp js lret iret or jl fdivp mov (bad) xchg mov cmpb outsl popa jno leave xor (bad) jne and les push jbe xor scas std shrb loope mov shrl adc cld pop mov adc fs dec iret lods cmc mov xchg sub test push adc jecxz xor adc sub ror test loopne jne mov nop fisubr imul test bound pop add das pop mov adc adc das cmp inc mov lcall jo cmpsb testl scas and les pop fisub test pop sbb pop enter (bad) sarl jmp inc mov (bad) rol or popf sbb or sbb test out xchg imul sbb pop arpl outsl sbb dec xchg insl and mov cmp push les jbe jp cmpsb fcoms sub lret (bad) lds pushl out popf mov jo int inc (bad) lock or cld sbb xor jo movsl mov jno or pop insl sbb adc rcll test push std clc pop or fldt iret aad push loope movsb mov mov roll test xor dec push push push jge sub lahf jnp xlat pop popf mov mov pop repz sahf (bad) xor push and jg cmp inc bound xchg not aas pop adc sub sub mov fnstcw adc lods cltd stos and jns stos xchg addr16 jns sbb bound xor loop mulb stc fwait mov outsl popf out cmp repz pushf out pop hlt sub test nop and icebp and push mov xchg cwtl nop sub mov fisubrl es aam rolb movsb rcrl pop out jns gs dec xchg mov mov mov cmc pop xchg mov testl repz dec mov mov xor in push jno add hlt inc or negb arpl lret or sub jnp mov fimull sbb cmp add mov arpl cmc or shll ficomp xor cmp fidivrl sub movsl sub scas (bad) movsb mov sub pop xchg adc jno lret ret stos adc sub pop bound push outsl loop dec xor fsubrs lcall fistp ljmp sbb jle enter aad push xchg adc insb aad xchg sti (bad) jno lods aaa in sarl pushf and (bad) xor push mov or (bad) pop shll imul mov jp clc add or cwtl add inc decl jno repz (bad) mov jns dec int3 xchg (bad) shrb (bad) xor ss pop out imul cltd sbbl aad inc sbb out fdiv dec fstps cmp cli dec mov loope mov dec push xor pop cltd pop test daa jle and out aad scas (bad) mov lcall sub add in ljmp mov fsub push mov add pop jmp iret (bad) rcl pop dec inc cmp fsts dec sub mov adc daa lcall lcall xchg imul add inc xor inc mov cltd lock xchg pop fcomps mov jno fdivrp pushf lcall adc cmpb aad xor mov xor push mov gs stc cmp inc dec xchg jl (bad) push push sub fadds adc out adc addb test movl push frstor pop xlat aaa cli mov movsb xchg ret outsb inc xchg lcall mov xchg bound jae xor orl add mov add jns aaa push jl sub sahf dec in aad sub or mov and out sbb cmpsb lahf push xchg fldt cmp pop cwtl push xor pop sbb push loopne roll add lods pop mov int sub aam mov fdivrl dec jge jbe mov not pop cmp sti push bnd in aaa ret bound or jle repnz (bad) sbb jae mov and test mov aas mov pusha sbb push (bad) repz ret inc fwait xchg lahf (bad) jmp les movntps (bad) xchg das or into push push lcall ds (bad) ret xor ret (bad) xchg rcr leave jg shll test mov dec adc stc cmp cs adc test push sub mov call nop dec ja push add repnz int3 and iret imul pop out shrl les stc xor movsb jb ljmp and push push cmc and jns mov pusha mov pop into repz leave ds fucomip mov or clc push xchg icebp outsb pop imul pop cmp ja gs arpl (bad) pop pop pop dec leave mov pop dec sbb jae dec pusha mov ds dec xchg and jae les add out mov (bad) add inc fs fist lock divb mov push negb mov mov sbb and bound add inc insl test lock jl mov xchg bound shrb mov (bad) fiaddl mov mov cmp popl jmp and bnd leave mov rol fcomps aam xor mov pop pop or xchg test fisubrl and xlat fimul xchg xchg jmp rorb stos pop sbb inc mov shlb in lock jle inc cmp pusha ss movsb movsb add cmp ja rolb aas leave repnz stc push mov and das sub xor adc iret lahf jbe jge sbb in sbb ret inc (bad) mov (bad) rclb mov fcompl shll clc int push adc int3 sub movb pop arpl std stc and dec test out sub test pop mov mov mov cmp jae mov (bad) sub push mov pop mov scas and xor inc push and xchg inc push out int3 push add cmp sub out mov out ret push aad ret into dec iret push nop daa dec loope int3 add xor cmpsb pushf (bad) hlt lods jo or cli mov inc (bad) cwtl xor andl neg (bad) mov cmpl and leave sbb add cmc fsubrl pop call sti fwait mov stos testb or (bad) into int fdivp (bad) adc lock xor int3 push add xor int3 fcompl (bad) cli icebp adc cmp pop fisubrl inc dec jae out and mov fdivs or inc mov fisubr (bad) jne into adc pop lock inc adc lds adc mov aaa push lret xchg cwtl jmp xchg pop (bad) xchg test sahf (bad) and and arpl cmp add cli cmp fisub dec add (bad) or mov add jo movsb xchg gs jns adc subl adc mov pop sbb in and test out adc xor imulb in xchg dec nop or mov cmpsl lahf mov std lds daa fs jno dec adc mov mov fstpt pop pop sti aad lods push jbe cmpsb divb movsb mov (bad) xor xchg fs and idivl dec push hlt fmull mov orl cmp les pop push sti popf (bad) pop mov jae clc stc arpl loopne movsl mov mov leave dec mov or movsb mov sbb clc fnstsw inc jg ljmp mov lock adc or loope insl sub jge jp or add int mov add daa divl lret dec ss icebp xlat pop pop sbb cmp ja mov push jne xchg dec and jmp es cmp fidivr aaa sar push or mov jge mov add xchg adc dec mov jmp push mov sub inc fcompl xchg dec mov (bad) cli xchg or fbld sbb pause jmp lahf arpl fldt lock (bad) hlt jns scas clc mov adc xchg adc xor dec adc inc mov mov out movsb mov dec dec pusha pushl or imul mov inc mov push jo dec sbb mov hlt push jb aam lods jmp pushf push aas popf lds (bad) inc jo adc std icebp inc add ss or ljmp lea rorl shrl outsb sbb xchg dec fldt jge (bad) mov push jnp sub pop loope js sub push gs cmp cmp xor xor inc pop fmuls out pop cli sti mov rcl test faddp inc xchg mov sub pop add sub (bad) psubsb jp pusha cmpl das mov popa push push jmp pop ror xor data16 das jo mov xchg dec neg imul push (bad) mov lea push jae dec (bad) or jb imul outsl jmp mov jle fmul xor aaa int3 (bad) test inc sti push das mov neg add or out stc mov (bad) int xor push jne mov inc mov cmp les xchg int3 push lods inc (bad) sbb outsb shrb and pop pop pop neg jae bound and mov jle cs icebp bound jae in jmp pop imul inc xor outsb into and push out jp stc lahf cltd pop stos jmp (bad) out jo inc add imul adc repz pop loope das jg pop nopl fcmovbe inc pop lock loopne aas xor std pop lods ljmp adc les xchg rcr push ret sbb sub push outsl data16 and in f2xm1 dec out outsb ret xor outsl mov sarb or ja xchg cltd sbb cmpsb lret (bad) pop push scas stos (bad) or notl fistpll and rorl adc ret fwait dec fucomip shrl jns inc pop fdivrs mov mov ss in xlat cmpsb jns fistl xchg aam jmp push scas or push jmp mov (bad) mov cmc test fs mov cmp inc dec mov das inc adc jle stc mov lods xchg and bound or mov push lods insb pop push out push hlt mov sbb add imul jb inc cmp ja jno inc inc add jb cmpsb loope and int3 lret jnp pop das loope out push mov dec inc insb pop pop xchg imul repnz mov xchg (bad) inc jno std mov mov sub sbb out jnp (bad) popa push push pusha dec xchg pusha in xchg xchg repz jle and inc int add data16 or js insb xor or int push lods insl dec mov xlat pop push pop fiadd dec lcall pop gs pop sub mov in and int push inc inc xor jecxz and int3 (bad) mov add push xlat (bad) (bad) fs pop fisttp sbb push ss in push and and stos test lret xchg jae cmpsl cmc mov pop jb in jne mov mov xlat inc inc or faddp dec or out in push sti pusha mov cmp dec inc jg push outsl adcl leave inc int sub js and les mov fwait inc (bad) cmp or dec cld sub xor ss jl out stc mov bound jmp xchg pop cltd leave inc inc cltd inc pop (bad) iret in test mov lret aam cmp xchg lock fwait push or cmp push (bad) mov orl push or xor std (bad) int cmp lahf out sub or mov testb lcall (bad) pop dec pop sub stos pop and mov repnz imul outsl and mov sub rcr mov sub push movsb fstpt mov lret mov xchg adc mov or das enter sar fbld stc nop lea cmp mov pop or cmp fwait repnz rcll pop jno mov adc push mov inc dec mov adc dec mov fdivl iret pop jmp loop adc cmp lcall loopne jl mov ss pop cmp lcall scas dec pop hlt jno push jl push fwait mov (bad) fidivrl inc adc and pop sbb xor je pop aas lods xchg mov es lods xchg gs fs in jns adc push push arpl mov inc ljmp mov xor imulb in mov lods dec xchg sub pushf lock inc mov jae cltd (bad) jb sub and mov fstpt pop push sti aad lods inc jbe mov add iret lea pushf mov xchg sbb imull addr16 inc cli jl push or adc and fidivr imul mov lds mov push jb (bad) clc arpl movsb and lret aam rcrl adc mov mov es push mov insb xchg int3 push sub outsb mov imul bound xchg or adc repz xchg mov gs sarl fildl sub ja lods push cmpsb into push adc sbb and nop loop and jno or pop jae pop push out js jl cmp cmp in ds inc push mov inc cmpsb adc mov aad enter cwtl outsb jbe int3 enter (bad) jae mov mov sar repz sub in lods dec pop mov xchg cmp pop call mov flds lods xchg lcall popa mov call mov jle mov xor popf cmp push scas lock mov daa test or pop std add or sub in addr16 mov push cltd bound lea mov rcrl repz call imull mov jbe call push jg pop xchg cld jo add outsb jae loopne sub mov xchg mov aas or fsubl or ja divb loopne les mov adc dec negb daa dec dec aas lock in pop inc cmp clc pusha lret push xor mov mov hlt sahf add sbb inc and adc push ss xchg std inc orb imul pusha and push mov and nop pop (bad) jbe jnp mov dec pop dec and xor repz pop imul sahf je inc fs in pop sbb clc inc (bad) sbb add and jge and shrl fldenv jp xlat jbe gs insb cmp or xchg mov notb adc repz xor and les mov (bad) jp lds ret adc dec imul fstl or adc stos and out movsb movl dec push arpl or pop push jno cld mov push push lret or rcrb insb mov or ljmp dec push sbb adc leave xlat mov sub xchg sub rolb test cli xchg stos scas (bad) dec call es hlt inc jb enter jno fnstsw lahf insb add (bad) add mov mov mov ret pop xchg in lret scas (bad) jp imul push xchg clc imull int3 movsb insl cmpsb (bad) bsr sbb out inc daa inc sbb sbb jp xor cltd (bad) imul outsb adc je int repz cmp pushl shrl mov call xchg aaa mov (bad) inc pop dec mov push adc out and aam jne sbb mov fnstsw in jne in shrl mov adc imul pop gs paddusw add xchg and push fwait cs lods cmp push addr16 mov fwait sbb aad xor into or std ja lock pop outsl sarl push test out fdivs add adc add imul inc and out iret daa std ds mov ss pop hlt test mov xchg or notb cmc push in push fnstenv xchg sti icebp and pop adc pushf adc push enter pushf dec cmpsl jns cld or stc sub jecxz sbb arpl hlt push insl cmpsl jbe in (bad) lret mov insl cmpsb outsb pop cmpsb mov addl mov dec add sub (bad) leave mov adc lret ja or sarl (bad) lock (bad) push sub or in cmp and push xor mov js and movsb push cmc sahf jp js (bad) inc arpl xor dec mov mov movsl call fmuls xor dec mov inc mov movsb push mov stc lods pop pop xchg cltd scas mov (bad) out xchg into sub mov cmpsb pop imulb xor dec and out popl cmp popf xchg test add and stos sbb xchg bsr adc push ror xchg add fbstp scas pop xor test (bad) stos push add data16 repz jne scas aas cmp push mov pop xchg repz popa scas rcrl inc adc jmp iret mov pop inc (bad) rolb mov push lcall xchg push or cmp push (bad) mov orl push or es sub rcrb lret add rcr ret inc insb cwtl pop dec jmp dec adc jnp call adc push data16 repnz xchg maxps dec nop outsl and sub fnstsw sub js and movsl or lret mov xchg xchg jae mov or das enter sar and xor adc and popa mov pop or mov fwait jb rorl jg jno lods dec bound adc push mov inc dec mov adc dec lahf push lods jnp jo addr16 test xor dec push xor add lcall loopne jl mov xchg (bad) pushf sahf pop cmp lcall scas dec pop lock dec jne arpl mov loope sbb ss mov out cmp or es pusha dec inc lods test sub jg pop sub cmp xor fs mov ljmp loop jge mov jl (bad) cmp je,pt dec lea pushf out sbb push mov ljmp add adc addr16 mov fcmovne pop jecxz pop es lods push adc mov das (bad) push imul mov inc jno mov movsb mov fisubrl clc andl push movb push mov and (bad) sub mov mov addb mov lret push pop or lret pop xor jg inc fucomip mov xlat (bad) movsl sub les cmp fildl mov push xchg mov movsl pop gs std inc (bad) insb mov out push fcmovb sub shrl xor jns xor and or dec insb cld iret aas stos inc dec stos lcall divl stos outsb cmp pop and or sub mov (bad) push jge xor bound cwtl push inc int3 lds cwtl shr inc clc mov sbb icebp aam in repz dec mov pop push mov cltd and and jno cmp fdivs add cmp pop ret repnz pop add in mov jg or fs mov iret in scas in dec mov sbb (bad) sub or out test sub lret in pop add leave pop enter ret repz push mov and dec mov test rclb repnz xor jb outsb adc rorb jge dec dec and dec rorl cmc gs (bad) int pop mov push cmc pop push decb ss cmp add dec sbb int3 ss sarl jecxz jae ss subb mov mov fist mov aas lahf popa mov jmp add outsb data16 push pop std and mov std daa add mov mov mov ljmp push inc nop and jne daa dec sub in jae add cmpsl test pusha int adc pop lret fadds test imul pop jno mov aad fildll lods mov jne cltd inc mov jle dec or cmp cld (bad) xor cmp test imul dec sub sbb xor mov pop jae cmpsb pop (bad) test in lock mov in faddl push gs cmp and xor pushf aam pusha mov xchg out loope popf sbbb sub in out jg jnp sub shlb or pop inc imul jnp xlat add mov push js push negb and mov sub lea adc adc push sub add mov mov (bad) mov inc pop fs data16 inc mov xor sub pop add sub (bad) xor mov mov (bad) into and sar ret std xchg sbb nop frstpm(287 jo outsb mov push mov push ds leave outsl inc jp int data16 xchg ja jbe out adc iret dec outsb adc add adc dec inc push shrl mov call in cld fnstenv int3 cmpsb mov ja adc out and int3 and iret insl ss adc int and xor psubq sar xor jbe ljmp and push add and pop into sbb iret dec fdivs jae lahf shrl nop lods push addb in adc out mov or cli add movsb int3 lret (bad) fnstsw (bad) cmp inc sbb or sbb bts std fsubrs daa cli dec jb lea jno dec xchg ss jo (bad) push mov sub cwtl mov in or ds popf enter jbe ljmp dec popa mov dec cmpsl push sbb lahf mov (bad) or aaa clc and out setnp cmpsl lcall xchg and sbb (bad) fildl mov mov push push scas (bad) arpl push jg rclb cmpsb (bad) loop push popa lods cmpsl sahf mov add adc pop lds pop or xchg cmp push fs scas mov and sbb popa addr16 adc aaa inc mov lds (bad) xchg loop icebp mov adc fnsave dec adc enter mov jae pop or movb jb mov pop movsb or cmp dec dec ljmp push push mov jae cmpsb mov mov push stos inc stos sbb xor ret mov int3 push ror jns out (bad) mov rclb cmp movb cmp pushf cwtl dec in rcll dec cltd adcl scas rcrb xor lcall mov icebp mov inc cli popf push lcall fwait push or cmp cmpsb ret dec neg scas mov mov inc dec add add pop xor cmp sub push sti test pop dec xchg cwtl pop ret rcll dec out add call xlat out inc jb or pop les outsl and mov sub (bad) dec xor mov ja cmpl pop pop bound lds cmc xchg xchg jae mov or das enter dec fs xchg in mov ret fldl jmp testb mov fwait jb rcll xchg jno lods dec jge adc repnz ljmp jge stos inc fbstp aad orps sbb sbb pop jmp loop adc sbb xor lcall jle (bad) mov push scas das pop imul cmpsl daa aam fdivs pop xchg ja adc daa scas dec pop hlt jno dec jl push fwait mov fisttp in push out faddl iret xchg imul rdmsr and es lods xchg gs jns adc push push inc mov dec imul adc cwtl test mov xchg jl imulb pop testl add mov xor mov fs out xchg gs dec fwait (bad) jno jmp mov jb cmp sti sbb adc iret jne or add (bad) sbb and out ds sub aad shrl (bad) xchg ja test push push adc cmpsl ja outsb cmp lret rorb inc sbb xchg out lret inc ljmp sbb in data16 push mov adc divl inc mov stc ss aam je xchg cmpsb or dec (bad) mov or lods dec xor repz stos iret jns sub pop nop aaa movsl ja (bad) bound cld out in test pop rol pop daa call inc rclb fild and jno or adc xor or clc nop (bad) ffree xchg dec xlat pop sbb sbb mov lea mov pop or enter cwtl outsb jbe int3 enter push fisubrl loopne push shrl or setae jg out inc imul mov fwait mov fcoms imull test cli pushf addl in inc mov rolb test shlb push scas lock mov daa test (bad) mov mov outsb push test (bad) into cltd leave xor ret sbb scas insb jge cltd push xchg movsb pop ja cltd rcrl repz stc pop mov addr16 sbb cmp jmp sbb jmp cmpb loop add (bad) xchg out add mov xchg mov arpl add dec pop dec adc and leave pop and test repz hlt jge punpckhbw (bad) fcom daa dec dec aas lock jo sbb jnp xchg push xchg (bad) fscale pop mov sbb outsb push mov rcll push ss xchg std inc orb pop andl pusha popa and loopne add loopne into into (bad) dec jnp iret pop inc lret jno xchg dec (bad) xor repz pop imul fnstenv jae stos xchg sub mov movsl iret and out and mov (bad) notl xchg cmp fisttpl inc loopne cmc and sub les cmp frstor sub cmp add shlb test test iret mov pop cmpsb lods outsl cltd shll andb loopne aam out xchg loope adc xlat addr16 sarl js xor push mov add dec mov xor out lret mov cltd lods push mov xor ror pop scas repz ficoml fnsave aam or and mov mov and (bad) or ljmp (bad) lock ret into dec stos xchg xor push hlt mov mov xchg imul sub aad sub dec enter notl outsb and ror icebp add adc adc xor lret fiadd cmp inc xchg into cltd (bad) and shrb bnd mov push add adc (bad) or pop in loopne sbb pop orl bound mov mov and iret insl sahf ret aaa lcall adc xchg insb aas jo pop jecxz push iret scas pop mov daa stc stc sub inc pusha push xchg mov and pop into mov and cmpsl xchg addr16 jne and cmpsb pop nop movsb jmp cmp insl repz int3 lret (bad) fstpl das jno mov into adc mov jecxz sub lock mov icebp lret add jbe jno jo (bad) push sti add inc and hlt (bad) incl lds fnstcw jmp pop ljmp arpl sbb or fcomi flds push call xor jg and icebp jecxz cmc (bad) cmp dec dec call sub inc add xchg mov jle cmp es and mov push lock jb,pt xchg push stc pop and (bad) jb ss xchg loope je cltd out sbb xchg or in mov dec scas cmp loop mov pop push push jle fcompl jle fcmovbe mov inc inc inc mov outsl jl (bad) jae xor les sub lods mov scas jle pop cmp inc aaa sub mov push push out mov cmp jns xor lea scas int test pop mov fnstcw xchg sbb jae repz das popf outsb jp push out and in fiaddl cmp jmp imul xchg movb test leave push sahf in and outsl pop into cmc imul push call xor and mov mov cmpsb jbe sub fisub sub out out jp mov mov aam jno mov ret sub push lcall fwait push or cmp push (bad) mov orl add aas sub rcrb sbb jmp sti test pop dec xchg cwtl pop inc push adc pop mov leave and test call sbb cmp mov imul outsl and mov sub fnstsw sub cltd movsl sub daa pushf jl xor mov xchg insb jae mov repnz outsb dec jno enter sar fisttp xor out (bad) jbe cmp mov pop push ficompl outsb add rcll xchg jno shrl in dec push mov dec or adc mov fdivl out jmp loop adc sbb xor lcall loopne jl mov xchg (bad) popf sahf pop cmp mov xor xchg or std insl dec dec ds sub shr into pop and stos fisubl dec int3 dec dec addr16 pop movsl mov push cmp arpl xchg fadd loopne imul sub ja cltd sub or nop jno and xchg ja mov ljmp or imul xchg call nop adc jmp int mov xor popa or adc data16 lret pop xchg clc pop cs adc push mov call xchg aam push push sarl push js daa scas or jl xor jns add push xor repnz (bad) test dec mov arpl shrb cld push imul jge insb imul dec push lret popf lahf cmc in (bad) loope lret mov inc cs bound test fdivs (bad) inc push leave adc ss outsb mov sbb and lods out test sub pusha add pop xchg arpl test pop cmp ljmp jae lahf into negl (bad) loope cmp ss fwait mov out cmpsb pop and enter cwtl test shr bound adc sbb lea mov cld repz sub in mov cltd and xchg js fwait mov fcoms mov arpl ss jo jmp add aam mov outsl je or push jle sub push scas lock mov daa test imul in nop xlat into cmp or addr16 mov inc mov pushf lea mov adc or repz stc pop icebp sti jne cmp stc inc mov repz jg pop xchg cld popa pop adc jg pop icebp outsl cmp mov xchg mov sub add loopne ljmp ss les dec xor cli popf negl jmp daa dec dec aas lock enter stos js add and pop fidivl lahf fildl push adc push ss xchg std inc orb pop lret scas pop jns fcomp popf mov add and nop pop (bad) jbe dec cmc mov aaa cmpsl mov inc ja cmp cmp pop imul popa mov push adc xchg (bad) pop sbb clc inc (bad) sbb adc (bad) or xchg mov push shrl fldenv jp loopne dec lcall cwtl xchg mov andl test mov out pop loop les iret mov pop cmpsb lods outsl shrb out pop pop dec cmp pop rcr jg fs fcoml pop cwtl (bad) mov ss out cltd push mov push adc jg fsubl push dec mov xor pop xor fadds sbb pop jnp popf cltd mov cmc fadd fcoml mov aam or and mov icebp rolb jmp (bad) jmp pusha adc (bad) jl cli inc enter jno stos push and hlt mov mov aas mov es data16 pop xchg jne aaa xchg psllw push sbb clc imull int3 inc rcll adc xor and inc sbb outsl mov dec or xchg ja jbe out adc fcompl xchg (bad) mov lods mov nopl inc pop push jb das mov call in push jmp mov int3 cmpsb mov insb cmp add repnz outsl bswap and in dec fadds ret pop in shrl repnz and jle out insl movsb dec sbb int3 int3 push mov movsb xchg push add sbb jae jge push es lret std xor mov fucomi mov dec adc mov pop outsl movsb int3 cld ljmp jp mov fcoml arpl and push dec pop pop xchg mov jg sbb gs pop sub jb je inc fwait ss jo loope int3 xor jae pop ret fdivrs mov out jno xchg ret aaa (bad) ljmp dec popa mov mov push sbb repnz jg and rcrb dec outsb andl push insl test lret xchg jl mov sbb (bad) fisttpl mov mov (bad) jb cmp stc pop and outsl loop mov or pop cmpsb int add movsb xchg xor or xchg orb mov pop push push int3 seta dec xchg fwait jmp rolb lock pop xor and inc mov lds (bad) xchg loop icebp lods mov scas jle pop cmp inc aaa xlat jnp sub stc lods pop mov movb jb mov pop movsb or xor mov xchg xchg sbb jae or iret popf outsb jp push sbb in in fiaddl movl int popf setnp hlt inc repz shr fisubr scas xor imul loopne loopne fcmovne repz mov cltd adcl scas rcrb inc adc or sub xor jno mov ret sub push lcall fwait push or cmp push (bad) mov orl push or xor sub rcrb out jmp sti test pop dec xchg cwtl pop dec jmp dec adc test call test popf repnz push vmwrite nop dec xchg and or sub fstpl lahf lahf fs adc sbbl enter hlt cltd jno arpl and push adc dec cli mov fdiv dec out xor adc and popa mov pop or mov fwait jb rcll xchg jno lods dec jge adc push mov inc dec mov adc dec mov fdivl iret pop jmp loop adc sbb xor lcall loopne jl mov xchg clc popa setle dec dec stos repnz lcall push dec cmp daa push (bad) push das pop test jo cld lea and stos test or pop addl sbb or hlt adc or rorb cmpsb dec mov push add inc ljmp mov xor imulb in mov test stos lcall or inc mov jb cltd (bad) jb mov adc and mov fstpt pop push sti aad lods inc ja mov pop aam or ja mov xchg stos fdivp mov cmp push shll rorb cmp mov mov lock inc loopne xor add movsl inc push je or (bad) in dec pushf mov movb and (bad) std sub push scas (bad) ljmp dec add adc dec (bad) xor or rcll (bad) into xchg or ljmp xchg fcoml xor xchg ds push fstpt stos mov ss lods push cmpsb into push adc sbb and nop loop and jno or pop jae dec pop testl mov xchg rorl push mov add pop orb ljmp (bad) out adc xchg cmpsl ret dec cmp jb repnz aad lea push xor xchg in or mov pop int ffreep jle into rep out mov inc jmp ss dec xchg and sub test popf or push jle sub push scas lock mov daa test imul in nop xlat into cmp or addr16 mov inc mov pushf lea mov adc or repz stc pop icebp sti jne cmp stc inc test dec push jg jmp cld inc jmp xchg xor push and dec mov mov xchg pop pop and jb sub mov xchg pop clc or ret and adc jno mov xorl mov dec (bad) idivl push out loope das push sbb and getsec jmp add and hlt mov fistp push push adc push ss xchg std inc orb pop lret scas pop jns fcomp popf mov add and nop pop (bad) jbe dec cmc mov aaa cmpsl mov inc ja cmp cmp pop imul popa mov aaa inc sub inc mov (bad) push mov jge repz clc fwait inc cmp lcall add push xchg in andl and cmpsl aam fsubl or add push jg les cmp xorl sbbb rorb adc cld (bad) sbb je pop in fwait insb cli jecxz pop mov push dec cltd push mov push adc jg fsubl push dec mov xor pop xor fadds sbb pop jnp popf cltd mov cmc fadd fcoml mov aam or and mov icebp rclb clc jecxz divb xchg scas loope xor push mov outsl cmp jmp pushf sahf inc dec cmc sbb (bad) es xchg pop mov int jne cmpl inc outsl jns popa jg cmp imul fwait xor cmpsb (bad) xor lahf or ret xor into jno in sbb xor jp jmp cltd and and adc iret dec outsb adc add adc dec inc push shrl mov call in cld fnstenv int3 cmpsb mov ja adc out and int3 and iret insl sahf ret jl into xchg in cmp in hlt les fistpl sbb dec iret push (bad) ret (bad) inc fstpl mov or out fstpt xor (bad) mov add sbb into lret movsb and test lret ret call mov lock out nop movsb ljmp cs fwait mov inc ret adc sbb out outsb mov cld jecxz inc mov cli outsl (bad) mov xchg ss jo (bad) push sti add inc and hlt (bad) mov leave jge popa (bad) push in push flds movsb hlt push (bad) ljmp dec popa mov dec cmpsl push sbb repnz jg and inc dec ficompl xchg sub pop or xchg jno pop sti lods xchg aam outsb jle mov in shr mov rcl (bad) stc in imul jo inc mov repnz and mov and jo (bad) add pop jne ja aaa inc lds popf mov mov xchg js mov mov pop xlat test repnz and mov push lds (bad) xchg loop icebp lods mov scas jle pop cmp inc aaa xlat jnp sub stc lods pop mov movb jb mov pop movsb or xor mov xchg xchg sbb jae or iret popf push cmp adc jle loope mov in push xchg mov hlt sub jns adc lahf call iret aas mov clc outsl out or movsl add adc mov scas and and subl cmpsb xchg sbb mov xor or daa in test jg push repz iret add imul les push (bad) mov orl push or xor sub rcrb out jmp sti test pop dec xchg cwtl pop dec jmp dec adc test call adc dec dec iret pop mov aad sub xor std aam sbb or inc xchg inc sbb sub sub (bad) mov std sbb inc inc aam fimull test xor cmp xchg pop inc xchg aaa int popa das in jmp iret call or aam sbb hlt enter mov xor adcb jge adc push mov inc dec mov adc dec mov fdivl iret pop jmp loop adc sbb xor lcall loopne jl mov xchg (bad) test jmp pop xchg and outsb xchg test loopne dec pushf mov add sub add or xor and add add add add data16 jge add add pop add pop pop bound jge add add and adc or add out sub add add add bound jnp add add adc add shlb push add add add add add bound add add jnp add add add add aaa lret add sbb add sub add add add add and add sub add pop adc add xor add sbb mov pop adc jge add add pop adc jge add add push jae add push jge add add sub add sub add add add add add pop pop bound add add add pop pop pop arpl push jnp add add add sub add (bad) add add sub add push sub jnp add add add sub add (bad) add add push add sub add sub and add add jge add add scas add add add cs add jge add add add add add push jge add add push jge add add jle sub add push add jge add add sub sub add push jge add add ret das add push add add add add imul add add add add add imul sub add jge add add out jnp add add xor add jge add add add add add or add jnp add add pop jge add add add jnp add add pop jge add add push add jnp add add aaa add or add add push add jnp add add aaa add or add jge add add pop add jnp add add aaa add or add or add add sub jnp add add incb movsb add push jge add add sub add or sub add sub cmp add sub add adc and add add lret add add add sub add push sub sub add or sbb sub add sub sub add or push add add or push add add or xchg and add add and add add and mov add sub dec add push je add add push add xor add sub jae add or push add add or add add xor add sub add outsl xor add sub add add or sbb add or and add aaa add or and add cmp add sub add add outsl adc add sub add sbb add sub pop add push sub sub add sub pop add push sub sub add or push add add or cmp sub add sub add push sub jae add or and add add or push add add or sbb add or add add aas add or push add inc add or and add inc add or and add inc add or cmp sub add sub jbe add sub sub add sub ja add sub add sbb add sub add inc add or and add add or push add inc add or and add inc add or push add add or cmp sub add sub test add sub sub add sub test add sub add outsl dec add or add add dec add or cmp sub add sub mov add sub sub add sub lea add sub add dec add or add add dec add or sub add or push add add or push add add or cmp sub add sub lcall sub add sub pushf add push sub sub add sub popf add push sub sub add sub sahf add push sub sub add sub lahf add push sub sub add sub mov sub sub add sub mov sub sub add sub mov sub sub add sub mov sub add add inc add add add add add add and add lea add and add add add xorb add jo add lea add and add add add subb add push sub add add sub add xor add add add add add add or jae add push or lea add add or sbb add or pop or add push push push push adc sub add adc or pop shrb adc pop pop aas pop bound adc pop pop adc adc push xor or add add add adc outsl adc add pop or pop push adc add add sub xor add add adc adc pop adc and add sldt or pop adc or add cltd xor and or or popa or bound or pop sbb or or sahf adc pop pop adc adc pop adc ficoml adc adc add add push push sbb add add pop cmp add push adc sub adc adc pop adc or sahf adc pop pop adc adc pop adc call push push xchg or xchg popa sahf adc pop adc pop xchg or xchg popa sahf adc sbb push sbb sahf adc sbb push sbb sahf adc sbb push sbb sahf adc sbb push sbb sahf adc sbb push sbb or sbb or push push adc push xchg or xchg popa sahf adc pop or push pop or popa sahf adc pop or push pop or popa sahf adc pop or push pop or popa sahf adc pop or push pop or or or popa sahf adc pop or xchg or or push pop push adc pop push xchg or push xchg popa sahf adc pop movups pop setne pop setne push adc sub push adc xchg adc adc adc add adc adc add rcrb pop pop adc rcrb pop pop adc rcrb add add push adc pop pop adc adc pop adc mov pop adc add push outsb aas fwait (bad) (bad) call pop sub add push addb add add xor add add add add add out inc mov xchg enter add push or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb pop push pop jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or adc add add or add or pop add or or loop add push outsb push push daa pop lea add sbb add or (bad) sbb add sbb sbb add or mov or mov add push outsb sbb lods add add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc sbb sbb add outsl sbb add adc or push jle add add adc push adc pop sub add or push movsl add add or sub add adc push add add add add add pop adc lcall pop push or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb pop push pop jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or adc add add or add or pop add or or loop add push outsb sbb daa pop lea add sbb add or (bad) sbb add sbb sbb add or mov or mov add push outsb push push lods add add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc sbb sbb add outsl sbb add adc or push jle add add adc push adc pop sub add or push movsl add add or sub add adc push add add add add add sbb and stos mov add push or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb sbb pop jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or adc add add or add or pop add or or loop add push outsb sbb daa pop lea add sbb add or (bad) sbb add sbb sbb add or mov or mov add push outsb pop push lods add add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc sbb sbb add outsl sbb add adc or push jle add add adc push adc pop sub add or push movsl add add or sub add adc push add add add add add (bad) (bad) fdivrs pop pop popa adc add push or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb sbb pop jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or adc add add or add or pop add or or loop add push outsb push push daa pop lea add sbb add or (bad) sbb add sbb sbb add or mov or mov add push outsb pop push lods add add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc sbb sbb add outsl sbb add adc or push jle add add adc push adc pop sub add or push movsl add add or sub add adc push add add add add add jmp and mov sub add pop push or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb sbb pop jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or adc add add or add or pop add or or loop add push outsb pop push daa pop lea add sbb add or (bad) sbb add sbb sbb add or mov or mov add push outsb sbb lods add add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc sbb sbb add outsl sbb add adc or push jle add add adc push adc pop sub add or push movsl add add or sub add adc add fldl add add add add add add or add add or jnp add add xor add jge add add add add add add add add add add sbb add add jnp add add add add xor add jnp add add bound jnp add add adc add shlb push add add and add bound add add sub and add pop jge add add and add pop jge add add add add add jnp add add fs jge add add jnp add add add add xor add jnp add add bound jnp add add adc add shlb push add add and add bound add add sub add adc add sub add add add pop or adc add popl add add or add push pop pop or outsb pop add add add pop pop bound fldt add adc add cmp add add or jnp add add sub push pop bound jnp add add popl add add sub add push pop or pop pop or push xor push pop add add add pop pop bound adc add cmp add push add adc or or or sub jnp add add popl add add sub add push or push or pop or pop pop pop bound or pop or add add add iret pop sub adc add xor add push add adc or or or and popl add add or add or push or pop or pop pop pop bound or pop or add add xor add add adc add add add push jge add add adc add or pop add jnp add add bound jnp add add adc add shlb push add add pop pop or sbb (bad) add add xor add add add adc jnp add add add add add push or or or push pop pop pop adc push adc pop pop pop or pop bound adc pusha or and add add jnp add add adc add shlb push push bound or pop or add jge add add pop jge add add sub adc add fiadd add pop add adc and add add jge add add and add add jge add add pop or add add jge add add pop or add add jge add add pop or add add jge add add pop or add add jge add add jae add push jge add add jae add push jge add add jae add push jge add add pop jb add add jge add add sbb jge add add jae add push jge add add jae add push jge add add sbb add push jge add add sub add add add or push add add add sbb or add movsb add add push pop pop or push push in add adc add inc add add add add add add cs jge add add add add add sub sbb add jnp add add add add sub add add add outsl sub add sub xor add add add add pop add pop pop bound add add add outsl push add push add add add outsl push add push add pop pop jge add add add add xor add add add add adc jnp add add outsl adc add add add add add add add sub or addl sub sbb pop or jnp add add popl add add or add add add add popl add add or add pop pop pop or add add add lret add add add popl add add or add add add add popl add add or add add add add popl add add or add add add add popl add add or add push pop pop or pop or ja (bad) incl jnp add add and add push or adc add popl add add or pop pop or sbb out or adc add popl add add or add push pop pop or pop jb out jnp add add pop add push add add add pop add push add add or add adc push add add add add adc add sbb add adc (bad) adc adc sub add push or or or push add adc add add jnp add add jnp add add bound add add add or add adc sub jnp add add jnp add add push outsl and pop add add add pop outsl xor add adc add add add add add adc add add add jnp add add bound or add add add add add or add sub add add outsl xor add adc adc sub add push sub add add jnp add add add jnp add add outsl xor add outsl add push adc sub add add add jnp add add add and or jnp add add or add push adc sub add add add jnp add add jnp add add add add add add add or add pop inc loop add add add add jnp add add add add add add add or add sub add add jnp add add bound or add add add add add or add sub cmp add add add add jnp add add outsl xor add outsl xor add adc add add jnp add add jnp add add add add add add add or add sub sub jnp add add jnp add add add add add add add or add sub sub adc or adc or or jnp add add jnp add add or add push sbb or add aaa add push cmp adc or jnp add add jnp add add or add push pop adc adc sub add push add add add or sbb add add add add add push add push adc arpl or adc sbb or push pop pop pop bound adc pop add add add adc jnp add add push sub add push pop or sub add add push sbb adc add sbb or add add jnp add add sldt push pop or add or add jnp add add add adc adc add adc outsl xor add adc adc inc ja (bad) incl jnp add add das add push add add add add push add add add adc add sub xor dec add add add adc push xchg pop or add xchg pop or sbb sbb push or pop or pop adc xchg adc pop pop pop pop bound adc pop adc add xor add sub add push add push sub add push add sub add push sub add xor add add adc jnp add add sub add add add sbb add push movsb add add add add add sbb add push movsb add add push pop pop or add aam add add add add add xor add add add add add add or add push or add add add popl add add or jnp add add popl add add or pop pop or add add add roll jl add add or add add add or add add xor add add add add add add sub add push sub add add popl add add sub add push sub or jl add add sub add push sub sbb add popl add add sub add push pop or adc push pop or add add sub add push pop or sub add adc add je add or add add add add adc jnp add add xor add add add xor sub add add add pop add pop pop bound pop jge add add add and add add add add jnp add add pop pop pop bound add lea add add add add or adc add (bad) add add sub add pop pop pop or push aaa out adc add xor add or add pop add add add jnp add add pop pop pop bound push or adc add (bad) add add sub add pop pop pop or push aaa out add add xor add add add add adc or adc add popl add add or add push pop pop or and add add jecxz add adc add and add add add pop or pop bound jnp add add popl add add sub add push pusha or and add add loope shrb adc add pop add add add adc or add (bad) adc add add add pop pop push bound pop popl add add sub add push or pop bound pusha or or and pop push pop bound jnp add add popl add add sub add push pusha or and add add loope or and add add cmpsb push shrb add xor dec add add add add add add jnp add add or sub sub add jnp add add jnp add add outsl push add or jnp add add jnp add add pop add jge add add add add add sub add adc push add add add add add add pop pop pop or add add add push push add add add or dec push add add add add or jnp add add add add add pop pop pop jge add add add add add and pushf add add add jnp add add push add das add push add pop adc add xor add add add add add add add add add add push pop pop jge add add add add jnp add add push add das add push sub add xor add add add add add add add pop pop pop or add add add or add add add or jnp add add xchg sub add xor add add add sub jle add add add or inc or add xor add add add add add add add add add add pop add push sub add sub add sub mov add sub cmp cmp add or pop js or js pop or movsl and add add pop add add pop add push push je add sbb dec add add bound add sub add sub add add and add add add add sub add push adc or and scas add pop or pop (bad) (bad) ljmp inc add push sub sbb cmp (bad) lcall sub sub add sub add sub push sub cmp add es add add fild add jle add add fild add xchg jle add add add pop pop and sub adc pop add add push add adc add add or add add or adc inc adc add sbb add cmpsl add add add add add mov add add add add add mov add add add add add add add add add sgdtl add cmp add adc and and adc sub (bad) add add and add add lea add add add inc add push or xchg and or data16 (bad) decl jne add sbb add adc adc and and sub add or inc (bad) (bad) incl push or add adc xchg pop pop pop pop or or sub pop adc cmp (bad) (bad) call pop pop pop adc pop or or adc (bad) call pop adc adc or sbb pop adc cmp (bad) (bad) lcall push sub add pop lea add add add pop adc pop or or xlat (bad) (bad) call adc pop adc cmp (bad) (bad) decl je add sbb or je add sbb pop or or mov add xchg and loop add or mov sbb and add add pop push arpl pop or or mov (bad) incl sbb add add or arpl add add sub add jle add add sub add xchg jle add add in add add add pop or or xor pop adc cmp (bad) (bad) incl push bound pop and add add adc sbb or adc xchg push shlb pushf pop or (bad) (bad) call or pop adc pop adc cmp (bad) (bad) call or push xor sbb std (bad) call or and add xchg and add jmp add sbb adc push add add adc add add sub pop inc add add add add add add add cmp or lret add add pop or rolb add add add add add add add sub add add add push add sub add add jle add add outsl add add add add outsl add add and add xchg pop and sahf sub adc add add add adc add add pop or inc pop add add add add add add pop add add add dec add add add add or out add xchg and mov sub or sub pop sub add add add add add or and pop add pop or movsl push sub add add add add add inc add push add sub add or sarb add push es add add stos add add add add stos add add and add add sub add xor add add adc add jle add add jle add add push or inc or add add add adc add lret add add add add add add add add and loopne add sub add sub and add inc and add jae add or iret add add xchg add add pop add sub and add add jle add add mov add add mov jle add add je pop pop dec pop sahf pop or jbe (bad) incl pop and repnz add or add add sbb add and and add and add add or add or jp add xchg and or xor (bad) incl and add add add add sbb data16 push and add and add add or add sbb cmp (bad) (bad) incl and add add add sub add outsl and add push cmp add jae add or daa add or cmp (bad) (bad) incl push sub add or rolb add sub xor add add sldt adc add add sbb pop inc add add add add add add add js add and add add add push push and add add insl add add mov add or jmp and add pop or mov cmp add sub add sub inc add push sub xor add add add add adc add add adc add add adc dec adc inc sldt add add add add push add lret add add add add add add add add add add add add add add cwtl add add add add dec add push sbb adc mov push je,pt add sbb and in add add dec add push or add or add or add pop and add add add add sub add and add add mov add sub add or adc or add xchg and adc cmp (bad) jmp cwtl add add lcall add or add push add add mov add sub add add adc adc jbe and mov add adc adc (bad) call add add add cmp add adc and add xchg and std add pop adc cmp (bad) (bad) pushl add or add je add add add add sbb lcall add sub add sub adc cmp (bad) (bad) jmp aaa add add and add push add push adc adc pop jno and adc pushf (bad) (bad) incl adc and add xchg and inc add pop adc cmp push jne add sbb pop (bad) add add add pop add incl add pop shlb subl or adc push (bad) (bad) call pop pop pop adc pop adc cmp (bad) call pop push das or adc ss (bad) call sub sub add adc adc jne add sbb push add push push pop sub add adc pop adc adc or add xor add add add adc add xor add xor add add add imul add and add add adc sbb adc enter add or add sbb adc and popl add sub add sub or add adc je add sbb adc jne add sbb add and add sub add sub or adc jae (bad) lcall sub ficomp adc adc inc pop add add add add add add add add add add add add or add add adc and add add pop adc sub adc and add xchg and add pop sub adc jne add add push add push fcompl adc adc inc sldt add add lahf add add add add add add add add add add add add add cmpsl add add add add add movsb add add add adc je add add add and add add mov add sub add sub jne add add mov mov adc add pop jp aaa sub add sub add add add jle add add adc add jle add add adc add xchg jle add add cmp pusha and sahf pop adc cmp decl jne add add jne add add add add sbb add and add sub add sub or (bad) (bad) call add add lret add add into add add adc add adc adc cmp (bad) (bad) call or sbb push lcall add sbb or sub add adc sub add outsl das add or or sbb (bad) (bad) (bad) call push pop pop adc push adc cmp push adc sbb adc xchg add add pop adc cmp sub adc and adc and pop adc cmp decl jne add add je add add push add push je add add add pop (bad) (bad) call add add add pop jne add add push add push outsl xor add sub adc and add add pop adc cmp (bad) (bad) call adc fldl add xchg and add pop sub adc add adc add adc add add add add add xor add add add add adc add add add add add add or add insl add add add test add test add add add pop add add add add add add add add add add dec add push adc insl add add pop or pop or popa pop insb pop push popa inc add add add add pop or and and sub adc adc mov or ljmp push add push or add add or incl pop pop or and pop sub sbb lcall or notb add ret add pop or incl je add add adc add pop or incl add xor push add add add adc add add push jle add add pop sub add add add mov add insl add add add add add add add add add add add add dec add push es push or adc popa pop jge push popa inc add add sldt add push pop sbb pop adc stc adc adc and add xchg and adc add mov add sbb pop add push or pop pop jp and add pop adc incl pop pop or mov add or add push or pop pop xor add add pop adc call sub adc pop pusha xchg and addl cmp (bad) (bad) incl je add add adc and add add pop adc incl add xor add add add add jle add add add add add add or add addl add add add add add add add add add add add add add add add add add dec add push es or pop or popa pop dec pop push popa inc add add add or cli adc adc inc xchg and or add mov add sbb push add push or add pop add pop or incl pop pop or pop sub adc xlat add add add xchg pop or lcall sub adc add pop or incl sub add add pop or incl adc add cld add add add add add add push push adc add or add add add xchg add add add add add add add add add add add add add add add add push or adc lret popa pop pop pop push popa inc add add add adc mov sub adc add pop adc lahf add sub add push pop pop or les add or add add and add pop or pop pop xor adc scas lock pop adc gs (bad) call push and add add pop sub adc and add add pop adc inc (bad) (bad) ljmp push adc adc inc add add add add add add add add add add add dec add push sub dec (bad) (bad) call xor add add adc add add add sub add or add dec add add add add add popa add add add ja add dec add add add add add add add add add rorb add adc pop xchg and add pop or adc add add xchg and jnp add sub popa pop or push popa inc add add add add sbb sub and add add lock xchg add xchg and cmp (bad) incl mov add sbb add sub add or or incl pop pop or add pop push add sbb adc add add pop or lcall or notb add and add pop or incl jle add add xchg add jle add add xchg add xchg jle add add incb add xchg pop pop push pop sahf sub add daa xchg and mov add cmp (bad) (bad) incl add adc push add add pop add adc and inc add add add add add add add pop add push es or fsubl insb sbb add and add pusha add push jle add add outsb jle add add outsb xchg jle add add lcall aas pop sahf sub adc add in add sbb add jle add add push sub add add add add add adc add cmp add xchg add add add add add add add add add dec add add add add pop add push es add sbb add popa pop pop push popa inc add add add add add adc sub pop or hlt adc pop or add add push or or add ljmp popa add push or or add incl pop pop or cmp add in or add or or xor pop or add call push pop jbe and mov add in sbb add incl je add add sbb add call xor add add add add adc add add add sub add or add xor add add add or add push add add add add add add add add add add add add add xchg add rcrb add sbb sbb popa pop das pop push popa inc add add push add add add pop xchg and or cli adc sbb mov add sbb bound add or add mov add pop or incl pop pop or pop sub adc pop add add pop or lcall negl or incl je add add sbb call xor add add pop add adc and inc add add add add add add add arpl add es or fsubl mov add add add insb add push sub xor add add add adc adc and add insb add push xorb add lea push sbb call push sbb aas pop add popf push sbb mov push sbb add add popf push push and push pop and and add pop add popf sbb xorb add xorb add js add sub add push sub xor add add adc add add movntps push inc adc add xor add or add stos add add add roll add add add add add add add add add or add add add mov add add add add add add add shlb add sbb push sub or add or add add or add and sbb pop popa or adc sub add add add pop lcall adc cmp (bad) lcall or cmc or add sub je add sbb add add push add sbb adc or or adc cmp insl add push adc or add adc adc add sbb or pop xchg adc or push cmp (bad) (bad) call or pop adc push pop pop pop adc and incl add arpl pop sbb push cmp (bad) (bad) call push pop and adc nopl and mov add push cmp (bad) (bad) lcall adc cmc adc pop punpckldq or add adc xchg adc pop adc push cmp or add sbb adc pop movlps cmp add adc add add sbb or pop pop adc pop xchg popa adc jne add sbb or or pop adc or popa shrl outsb add push sbb push cmp call or pop adc pop movlps cmp (bad) call or pop xor pop or (bad) (bad) lcall notb add adc outsl add push or add add add pop or add mov add add pop adc cmp (bad) (bad) decl jne add add add add xor add add adc add add add or add sub add xor add push add add add xor add push add add add add add add add xor or add pop add add pop or popa pop cmp popa inc add add add add push or cli pop or add push push pop pop or and pop or or pop sub test cli sub adc adc inc add add add add add add add add add add add add push sub lcall add sbb add add add add or add pop add add add add add mov add bound add inc add add or adc into push add popa pop gs push jle add add fild add jle add add fild add xchg add sahf popa inc add add add adc pushf sbb add xchg add mov mov add sbb jno add push pop pop or movsb add add pop adc add pop sbb pop xor sbb add pop (bad) (bad) call add add pop sub sub adc adc inc add add add add add add add add add add add push sub push (bad) (bad) incl add adc add popf add add add adc add add add add add add add push add add add add add add add push add add or or int3 add popa pop push pop push popa inc add add add add sbb mov sub push or mov mov add sbb jb add push pop pop or and pop sub push or xchg sbb cli pop or lea sbb add add add add add add add add add add add add add imul sub xor add add adc or add push add add add add add add add add add add add add add add add add add add add push or popa pop pop pop push popa inc add add add add sbb cli sbb add add add jae add push pop pop or pop pop or sbb add or cli sub adc add add add add add add add add add add add add push add sub xchg add xor add add add add add add add or add add add pop add add add cmp add sub add dec add add add add sub add push or adc into add pop push popa inc add add sldt add add sahf push add pop adc scas sbb stc adc add pop adc cltd add sub push push pop pop or mov add or push add add sub sbb pop xor adc mov adc pop (bad) (bad) call sub sub adc adc inc add add add add add add add imul push sub arpl (bad) incl add adc push add add pop add adc and inc add add add add add add add jne add es or fsubl mov add add add jnp add jle add add outsb jle add add outsb xchg jle add add lcall aas pop sahf sub sbb pop add add adc add add pop sbb inc add add add add add add add add add add add add add rolb add sbb fcom adc add sub push and add pop adc add push add add add add add add add add add add add add add aad sub pop xorb add jle add adc push dec add push jae add or jg add sbb add mov or je add add addb push fcompl adc adc inc push add add add add add add add add add add adc sub sarb add adc pop jbe and mov add add add jbe sub jbe jle add add stc add add pop adc sub add sub add add add add inc add or add add xor add add add add add add add or add dec add add add add add add adc add je add aaa add add add cmp add push or add and add add les pop push popa inc add add adc add adc add pop adc mov adc cltd add mov add sbb addl pop or loop add or enter or icebp add add sbb pop xor sbb add fs (bad) lcall sub sub adc adc inc add add add add add add add jns add sub jb (bad) call xor add add add add adc add add add add push sub add or add popa add add add nop add add add add add adc add add add pop add add add add add sarb add es or add mov add mov add pop pop push popa inc add add push add add or add lahf sbb stc adc adc add pop adc mov mov add sbb (bad) add push or adc je (bad) incl pop pop or and pop or add and add add push (bad) (bad) decl sbb or adc dec (bad) (bad) call push and add xchg and add pop sub pop je add add sbb add sub (bad) incl add xor add add pop add adc and inc add add add add add add add addl push es or fsubl les add add add mov add jle add add outsb jle add add outsb xchg jle add add lcall aas pop sahf sub adc add mov add adc inc adc add add add add add add add jo add or add adc add ja add inc add add add sub add add xchg add sbb add push adc popa pop cs push popa inc add add push add add or add sub adc push adc add add add mov add or adc pop or inc add and add decl or or pop sub cmp call sub pop je add add push adc call xor pop add add add adc add add push jle add add pop sub add add add add add add add pop add add add push add add add add add add add add xchg add adc and add add pop adc push adc add push popa inc add add sldt add pop pop jbe and mov add add and add xchg and std add pop sub adc sbb add incl add add add sub adc pop jno and adc incl pop pop or cmp and add add or or xor add add pop adc lcall sub push adc incl je add add push adc incl adc add dec add add add adc add add sub pop inc add add add add add add add mov add or fadds add xchg and or shlb sub add lea add add add xchg add push sub add xor add add add add jle add add add sub add or add sub add push add add add add add inc add add add inc add add add push add add add push or or popa pop inc pop push popa inc add add adc add adc push add add pop or cli adc add pop or xchg add push push pop pop or and pop or or pop sub je (bad) call add add pop sub sub adc adc inc add add add add add add add mov add sub insl (bad) (bad) incl adc push add add add add add add dec or add add add mov add add add pop add add add add add mov add mov add add add add popl add adc mov add xchg and or sbb add pop pop push popa inc add add adc add adc push add add pop or and and sub adc sbb cmp (bad) incl mov add sbb mov sub sbb cmp (bad) incl pop pop or add pop push add sub inc add add add add inc add add sahf pop sbb adc add push add add pop or lcall sub sbb incl sub or incl add xor jmp add adc add add jle add add add or inc or add cmp add add add sub add add add addl add jp add push add add or or int3 push add and popa inc add add add add sbb mov and add add pop sub adc xor and add pop or xchg add add sub pop pop or add pop sbb adc add mov and dec add pop or fs (bad) decl pop inc xchg and sub pop or push (bad) (bad) ljmp sbb push adc inc add add add add add add add add add add add nop add push sub pop (bad) (bad) incl add adc add add add daa add adc add add push jle add add pop sub inc or add push add add add add add stos add add add add add mov add mov add add add jnp add rclb adc pop cmp pop adc adc and add add pop adc popa pop js push popa inc add add adc pop and add add pop adc lcall sub adc pop or add incl mov add sbb xchg add push or push pop push xchg and clc add pop adc incl pop pop or dec add add add rclb add or push pop pop xor push adc lcall sub pop adc incl je add sbb pop adc call xor add add add add adc add add add add push sub add or add or add add add nop add add add add add add add add add adc add or add xchg add add add add xchg add push es adc mov add mov add sbb popa inc add add add adc mov or add add pop adc mov mov add sbb cwtl add push or push and add add pop adc push (bad) incl pop pop or pop or adc push (bad) (bad) decl sbb adc add add pop adc cmp (bad) lcall add add sub (bad) (bad) incl add xor add add pop add adc and inc add add add add add add add add add add add cltd add push es or fsubl push sub add and add fwait add push sub add add nop add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc xor fldl xor fldl ss fldl jne add dec add add add add add add add add add add add add add roll add popa add add add add add add add add bound sub add add add add popa add add add add add add add add bound sub add add add and bound add add add add add add add bound sub add add add and bound add add add add add add add bound sub add add add popa add add add add add add add add bound sub add decl add popa add add add add add add add add bound sub add add popa add add add add add add add add bound sub add add add add add add add add add add bound sub add add add add xor add add sub add xor sub add add inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov jno inc inc push pop inc in fdiv and (bad) jecxz icebp xchg out cmp mov outsb cmpsb int dec dec fwait cmp lcall je dec dec jae adc cmpsb daa ds jecxz out lock icebp or and add je (bad) mov (bad) push in add loope fbld aas sti sbb pop sahf popf pop dec lcall xchg ret out negl or fsub lods sbb (bad) out stos cltd push pop lret pop push iret lret cmpsl mov jae push sub stos (bad) stos dec jle or push pop insb inc hlt push mov aas jecxz pop xchg jb js iret xchg xorl pop inc mov (bad) (bad) sub outsl loope pushf ret ja mov xor or sub ret sbb andb mov jmp fistl fiadd out js movsl xchg in cmp cmp cmp bound dec jle (bad) jns mov in in (bad) mov cmpsb call mov jg and push aaa fisttp das and (bad) in leave imul cwtl inc lret andl dec add ljmp cmp aaa enter in sbb or aas and rcl jl adc and and jo mov or in aam cld push xor and jbe xchg pop jecxz loop xchg sti fsubl lds and pop dec xchg push xchg aad ret les and sub fndisi(8087 stos enter push pushf inc mov in pop sbb addr16 dec sub enter adc jno add sub mov mov ret shrl inc addl adc sbb movsb mov sahf push mov xchg pop sub xor adc dec dec push add ret dec sbb jmp cmp inc jae push aas cmp test nop adc cltd lcall mov pop jbe out jbe ficompl out and sub xchg add ss jg shrb cld lock jo mov and lret testb xor jg std dec scas inc insl je hlt adc push push popf loope inc adc add movsl fistp push outsl les (bad) icebp mov call lds js cmp or loope das inc fucomip xchg pusha mov loop jecxz xor stos push cmp mov jecxz sub inc movsl pop ljmp negl rolb setp adc call and pop or bound mov xchg adc popf sub rorl jp xor inc (bad) xchg fnstcw sub movsb cmc xor mov cmpsb outsb xchg jg ds scas cmp mov cmp mov mov into int3 je arpl jb push cmp push mov sbb mov daa jge lea pop cmp out push jbe lds mov in cld neg or pop mov out cs sub imul dec (bad) sub dec mov fiadd int mov mov add aam test cmp mov jne insl mov mov dec adc fwait ljmp push and sbb lret lret and stos call data16 jl jno mov jp xchg xor xchg or mov sub loope repz xchg mov pop scas test mov mov push mov imul push cmp mov pop or fstps push clc sbb push lds pop into mov mov mov mov cs movsl jmp and lret stc push jl dec and cmp dec sti dec leave pop fmull (bad) sub das repnz cmc cmp pop sub testl push or mov cltd popa lcall mov (bad) mov xchg int mov push outsb mov mov ja inc mov (bad) lock ficompl mov test cltd stc or add push mov shlb xchg cmp mov mov or fwait cwtl test cmp sub cmc mov aam divps sarl pop ljmp cmp loope jnp std scas pop cmpsl cmpsb pop push scas or js (bad) ficomp loop cld xchg and int outsl outsb push xchg insl sbb inc jp fldl and push (bad) fistp dec and movsb add sub int xchg xor imul inc adcb jnp adc mov inc or into lahf pop cld test add push pop pusha subb icebp movsb and sbb mov or out xlat sub push xchg push pop or jge jp call push stc cltd mov lcall negb dec adc cmp insb push imul mov inc lds xchg jb jle cmp push inc jge dec into pop xchg out jle outsb ds movl movsl fisttp and (bad) add insl xor xchg xchg xchg rcr mov adc mov pop es lock dec adc data16 fs std pop or mov repz aas sbb sti push popa cmc dec shr sbb adc inc adc jecxz icebp mov (bad) sub dec sub xchg sub mov stc add es stos xchg xchg (bad) icebp and sbb lret cmpsb and pusha push jns add sbb lock idiv mov icebp rcrl jno cmc in rorl nop xor xor or push push lret and sub sub push (bad) repnz cmpsb out hlt clc aaa jle mov movsb repnz dec or aas inc (bad) push movsb push adc xchg push add xor adc and adc pop or lock sbb cmpl cmp movsb das pop sub inc mov popf jns push mull inc and xor mov xor push xchg jno leave test mov imul aas rcll enter or es popf movsl aas std adcl jbe inc (bad) adc inc loope pushf addr16 jne (bad) (bad) jb loop sahf in cmp cmp into pop xor push mov in sbb nop mov into cmc dec (bad) fstps addr16 or stc shr out jno jp mov rorb imul push mov and daa ds adc mov dec fstl mov or sub jecxz sbb in fisubr mov xlat mov jno test stos adc push adc test scas outsb mov nop cmpsl (bad) icebp cmp cltd dec push and mov call mov aaa xchg inc sbb loopne push ljmp jne pop repz lock sub lods and mov in inc and scas fmuls out sbb aas dec call xchg neg (bad) mov test stos mov push inc movsl inc dec mov push cwtl cmp add out mov aaa frstor pop movl or jo push xor push jns nop mov call iret push ds cmp push imul mov aaa (bad) lcall (bad) mov mov jle xlat aad or je xchg xchg subl dec (bad) iret popf sbb jge lret pop cli in iret lds arpl fchs jl push jno js mov rolb aaa les fsubr repnz xchg (bad) repnz test dec aam cltd mov ret jae nop mul ret dec insl xchg mov inc das cmc xlat dec in inc sbb inc pop aaa lods jmp clc aaa jnp cmp data16 mov mov or push sbb sbb mov or mov test mov lods lret aaa lahf push xchg inc dec jmp ljmp stc pop sub ja jmp loope cmp aam fdivrs mov xlat sbb dec inc inc jge xchg push mov aam inc push mov imul jmp or mov push daa out aam push add aas arpl mov fimul test xchg xor xchg fs and out or (bad) pop add call outsl in cmpsl push das cmp (bad) lahf sbb add jb fsubs xchg lahf adc xor (bad) (bad) or inc mov mov add mov lods int (bad) icebp std fwait jbe dec std test insb mov insb sbb push clc mov jle sbb sbb aas rorb xchg mov sbb push mov mov xlat mov insl sti test lea push sub movsb inc pushf sub cmp bnd pop jnp int scas pop cmp pop sbb (bad) pop push addr16 dec mov int xor mov mov aaa or xchg int mov adc jl jle or mov aad mov jge xor push test jge stc mov mov lock mov push sub sub cli test xor adc mov cld in cmp fsub aas or lea les jne sbb jae out pop movl sbb jo (bad) adc ret push add es data16 or add neg dec jbe gs rclb ja fcmovnbe mov inc insl mov loop cmp jnp inc fwait jp sbb xor mov loope mov lret mov loopne or lock mov pop enter jbe aam cmp outsb mov (bad) loop les lea adc mov mov adc (bad) out dec lock dec call xchg enter sti lahf lret addr16 jb fdiv leave adc xchg jnp cmp fs neg stos adc push in dec mov jge in (bad) mov cmpsl pop mov mov repnz pusha mov and pop test repnz sub inc cmp cld das int3 xchg adc inc sbbl cmp lahf fwait loopne or or jmp sbb cmc mov cmp mov mov insl inc push sub pop adc jns sbb outsl pop (bad) push fs pop lea rorb xor xchg cmp sbb add (bad) lcall sub in mov sub dec jae inc dec enter jp cmc add cmp push movsl js aaa aas mov fcompl add sbb dec pop mov and shll sbb mov dec lds push add dec pusha jns sub in bound mov leave cmp mov cmp sbb add dec cmp xchg mov push cmpsb daa (bad) in test inc mov adc adcb add inc fiaddl movsl lret push adc add xchg xchg add xor roll add cmp iret cld addr16 mov jnp fsubrp cmp xchg pop pop js ret jnp rorb daa loopne sbb dec insl jg popa xor mov and das cmp lea or test push leave std imul adc inc inc idivb push mov cmpsl cmpxchg cltd jmp or xchg enter shrl jns adc cmp lret mov mov xchg jmp xchg sbb lods repz stos sbb adc mull insl and jne sbb dec push add lock in pop (bad) dec inc (bad) loop and dec adc mov pop and mov add popa or nop enter lods fimul adc lock or and mov mov pop and movnti lods stc fisub mov xor pusha pop rcll push stc xchg call jno fs aad ja in sbb cmc adc xchg inc data16 in fbstp shlb popf or sbb enter mov jmp call or inc push push fdivrs sub xor fldl2e aas fidivl shrb call cmp pop sbb fnstsw gs loope xchg jne xchg aad fisttp jo sarl test clc rolb test pop mov inc push (bad) rcrl (bad) or cmp jno mov cmpsb fildl enter gs jge jge jo xchg bound or mov push pop hlt inc repz ljmp cmp xor repnz out push sub in cmp add fidiv xlat js gs push sub lods call or jp mov sub jg jne dec xchg jle popf inc mov imul data16 lock push mov dec out ret push xor rcr pop sub and lahf lock inc ja (bad) jle xchg andl xor cmpsl andb fildll dec (bad) xor imul pop cmpsl daa pop scas jne adc push and sbb addb inc push mov jnp add xor or loope sub jmp push loope mov repz xchg aaa ds hlt into dec xor or sbb popf sub jecxz lods push icebp mov mov rcr cmc mov loope and ret hlt jecxz rep dec into add xor arpl scas jno jge pop cwtl xorb xor (bad) aaa cmp insl pusha pop outsl adc push pop mov xchg lods add popf daa push sub or rolb stc lds xchg mov or mov mov add inc lea (bad) sahf and lods sbb outsl pop ljmp mov outsl jbe stc mov loop pop fstp push mov fs lahf cs leave pop or mov mov and lods pop cmp sbb jae dec and sbbl cmpsl (bad) jl cmp and mov sub jae fs fsubrs xchg push mov std insl lcall aaa xor pop push sbb cmc mov pushf xchg jbe mov sub mov loop (bad) clc xor xlat pop ss ret lret mov or mov add pop mov gs inc mov adc ss ss xor add sub bound add mov into dec ss fdivrs (bad) mov mov push push mov sbb push lcall adc test (bad) mov xor pushf pop or pop (bad) jne cmp sarl push in mov dec xor pop lcall add dec push ja inc mov (bad) mov mov adc xchg xchg fstl daa mov dec jecxz pop fstl push add repz (bad) pop mov imul mov add add or adc daa lock loopne sar cmp add xchg or add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov outsb dec inc inc push pop inc in fsub inc xchg lea xchg push mov mov jmp jmp sbb sbb out out sbb xchg out mov adc das add loopne addb jge in inc add xor out dec add mov xor std popf stc std sub mov inc lahf push mov dec mov jo lahf sbb pushf pushf mov fnstenv dec sarb mov leave cmp mov popa fisub je sbb (bad) push mov out xchg (bad) lret xchg inc fs pop xlat into test push ret adc mov push stos lods (bad) push cmpsl push and lret into inc test fidivrl ja xlat push jo sub cs lods mov push ljmp stos imul lds lret jecxz pop mov addr16 inc pushf or cmp xor push outsl sbb sbb rolb fs enter dec dec fdivrl dec in sub enter adc rcl imul call inc mov sbb xorb scas cmp sbb pop mov jb xor aas cwtl iret test (bad) (bad) stc mov mov cmp sub cmp ret stos enter aaa stos mov cmp inc and cmp (bad) stc scas jno sbb jge mov or push sahf stc movl leave adc and jge (bad) mov int3 in xchg mov lret pop lahf xchg jno das lock push mov jecxz inc decl sti ret jno jmp mov lret dec inc arpl add dec push popa je adc hlt nop cmp ja icebp lock mov mov sub pushf sbb push clc mov and pop push mov scas mov in loop incl lret aad push cmp daa cld inc add dec adc dec fcmovbe pop dec or adc and pushf jne xor sbb or cwtl push or cmp dec pushf out jbe ljmp int nop jbe,pn loop sub loope mov gs pop mov in iret je int pushf and jle inc stc int mov scas and mov jge xchg fucomip mov mov jns test xchg out ja mov mov fadds add mov pavgw mov lea mov add jle sti lcall adc sbb push lret mov movsb jae (bad) jp inc mov push mov stos sub adc mov sub test inc lock pop (bad) adc das lcall out fwait mov jns rol das jg cmpsl aas xchg cmp cld in mov pop enter mov jo data16 push push int3 and negb loopne add std insl fidivl mov rcrl aam sub jg out dec xor or pop dec push dec and mov mov xchg je popa lcall in xlat dec push mov movsb mov cmp cmp or push add pop mov les aaa rclb movsl lods lods jmp stos clc add (bad) xor dec and mov xchg mov scas push (bad) (bad) cmpb push inc xchg (bad) xchg pop pop push aam subl aam adc xor cwtl push stc inc push loopne das aas fnstcw adc pop jg test (bad) shr push cmpsb (bad) cld mov sbb mulb cmpsl aam int fisttpll jno pop movsb add popa adc (bad) dec ret lods je (bad) js leave (bad) cli jmp and popa pop sbb cwtl mov hlt or push sbb mov sub cmp loopne inc dec and mov les push pop mov in insl inc fmull pop xor push mov icebp aad mov cmp push pop mov pop or test (bad) mov shr sub insb inc sub rcrl xchg stos adc repz mov sbb fisub repz cltd movsl pushf sub push dec lahf pop andl xchg pushaw lret and xchg add pop sub cmc mov or pop jno lods test mov jge xchg xor adc fistpll sbb (bad) test je xchg test enter lcall xor ret ljmp xchg xchg pop inc nop jbe (bad) cmp lret xor pop ja out jle xchg ljmp (bad) dec lods loopne sub mov dec (bad) (bad) scas add xchg mov mov xlat aam jp mov sahf pusha jno add mov push imul fs fisub push mov fistp mov rcrb mov adc ljmp scas pop xchg and iret or out and pop add aad pop pop jecxz outsb adc push sub or roll sub push out mov test bound cltd mov jl mov pop lret incw lea fwait push stos enter dec fs addr16 in cs pusha and sub inc inc sbb pusha aam mov dec dec aas dec adc imul out mov sub sbb push das jnp (bad) ds jae sub gs pop jb pop iret sbb sub fdivr (bad) insl fistp stos stos jno xchg cmp mov xorl inc lds xchg jne hlt inc cli data16 fmuls adc xchg call imul cmpsl cltd sahf adc xlat out sub aaa mov jno xor mov fwait pop dec repnz popf or sbb sub xchg addr16 jno fcoml and inc cmc out adc (bad) pop push cmp add roll add mov std or cmp lret cmc xchg jne inc adc outsb add cmpsw out pop fwait xchg call jbe lods ret mov sarb popf fcmovnbe je imul lds notb lods or mov xor fcompl (bad) mov pop out repnz insb adc popf mov fs jbe lret fdivl jns push jb mov inc sub test cmc mov stc jne stos inc mov adcl xor xchg rclb mov or or repnz pop cmpsb jmp xor push fsubs ss dec and push pop sub xor pop (bad) xchg sub (bad) push cmpsb movsb fldcw cmp movsb xor ja add aad jg fdivs outsb mov movsl imul mov hlt xchg mov sub inc mov out cmp and test dec popf scas lods ljmp dec and inc xchg xchg jno divl mov mov sbb in push les sbb test jb ja mov or and sub cmp mov pop xchg cwtl jecxz xchg iret sahf js xchg addb out jmp in pop mov jecxz pop pop or fucompp xor inc mov in or fbstp push popf test clc mov jecxz aam ret xchg sub mov jae repz pop enter inc repnz mov fs adc cs jg and sub sahf pop add adc push (bad) jne and pop sbb cmpsb jne inc arpl inc mov jp jo stos (bad) fadd pop les lock dec (bad) mov out push push aas sub xchg test adc sub mov cmp sbb xor in jle fsubp (bad) push shlb dec mov mov cld repnz loope adc xchg cmp dec repnz inc outsl or mov (bad) idivl jp rcrl mov out cwtl sbb mov cmp and or cmp xchg cmp pop xor jecxz daa adc fimul pushf ffree jo xchg inc or pusha xchg sbb inc stos int jbe xchg xor daa js xchg jo xchg mov shrb aaa movsb add decl dec mov mov sbb int3 and movsb cld cmpsb add cwtl aad inc mov movsl dec xchg popa xchg mov mov pop push gs (bad) loope loopne mov add test cltd sbb (bad) test bound mov xor (bad) cmp xchg scas lcall pop dec loop daa loop fcomps je arpl mov aad int3 jmp or pushf std mov mov adc push out stc (bad) out dec pop mov sbb (bad) popa adc iret (bad) push lret fmull ss iret mulb rcll mov into pop adc mov xchg add xchg inc stos sbb add (bad) in (bad) ljmp pop loop sti push (bad) and mov mov int stos mov and stc cmpsb jae jnp std mov jp and cld cmp mov sbb dec mov cltd jl movsl add xchg scas sbb jae mov outsl xor dec xor out js lods out aam mov (bad) or cmp inc or (bad) and jecxz lret mov dec mov cld jbe push aad pop loop int es pop stos scas mov leave or xchg sub add cmc jb stos dec rorb xchg mov loop ret xchg fadds cmp pop adc je insb call and dec mov arpl stos cmp push jmp or mov mov jecxz (bad) xchg (bad) xor insb psubd cltd cld adc jmp pop add stos inc adc push les ja lds cmc jne mov nop cmp (bad) jno sahf push fldl test push inc push (bad) mov xchg in fs xor icebp in jge mov (bad) ret gs ljmp call cmp sti pop mov adc out data16 cmpsl push xchg jae dec or dec xlat mov mov lods (bad) clc sbb dec loope movsb push gs and push out hlt and aad faddp and js and jmp push xor or jmp movsb sahf repz lds mov push out cmp add pop inc insb cmc xchg mov xor push push cmp or mov scas mov (bad) mov pushf adc lcall out xor dec out shlb sbb xchg sub dec movsb into sahf inc mov add and (bad) push ss mov adc jl jg mov aaa xor xor and jmp pop ret subl movsb sbb mov je enter cmp xchg mov mov pop (bad) pop lahf xor xchg int3 sub mov jno mov pushf adc adc leave lret adc ret xchg mov push mov dec lock and mov push xor mov xor and xchg dec fs cmpsb sbb dec and dec test stos pushl shlw mov test xchg sbb xor lock push repnz stc iret (bad) push fdivrs cmp fldcw jnp les or enter fisubl sub pop popl aad (bad) int pop lahf xchg fsubr xchg xor push mov mov adc pop ret mov inc pop pusha fsqrt loop clc int adc aam fstps xor in cmc (bad) dec bound mov iret and int3 dec outsb cmp ljmp out fcomps jmp add add dec orb ret and fdivs test mov (bad) movsl in dec repnz lock push pop pushf sub sbb js push cli xor sbb movb lret dec push icebp jno mov icebp idivb ret or add pushf mov hlt push sub sub adc fildll outsb add jg out fstl and fistpl bound push mov or mov gs add cmp push movsb dec leave mov leave insb cld fimul adc fdivp lcall mov sbb shll and decb mov mov mov jmp stos push mov sahf pop pusha mov arpl test stc clc dec in or in cmc outsb repz je loope inc fcmove arpl rcrl xchg imul repz scas fmull pushf sbb scas push sbb (bad) cmpsl test (bad) sbb cmp xchg int3 test hlt popa test add test mov bound and xlat push imul out push dec stc add (bad) ds ja sbb mov xchg pop out sub int3 cmc shrb jbe xor jmp bnd push stc lret xchg mov loop push xchg aam push mov lods mov aas movntq shrl cmp mov ds mov xchg xchg sbb sub xor jae nop pop in inc push jae addl cmpsb jb dec push call nop ljmp ret gs mov es outsb jbe xchg add sbbl ret mov mov push xor mov rolb pop jne xor mov scas setno mov nop out notb inc jmp adc xor in fstpt pop sub jno sbb or adc push add inc idivl mov repnz xor mov pop jecxz (bad) loop iret ret or (bad) lods and push adc add sub dec repnz popf loope xchg pop fmulp xlat or cs insl dec insb mov dec jae cmc data16 (bad) aaa mov mov imul cmp les mov pop popf cmp ror mov push inc mov sbb icebp and fwait daa jmp cmp imul in scas aas mov add xor lods mov or loopne pop add pushf add cmp xor faddl and stc mov xor mov and sbb and stos jge xchg es lds pop (bad) mov push cli ret cs mov and aad ja (bad) push test mov sahf cmp inc clc out int xchg daa xchg xchg dec aad sub fucom imul inc jmp mov push mov mov (bad) push jg sti adc int3 or sar sub clc daa lock loopne sarb jg incl jg cld pminsw mov inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficom add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov jae inc inc push pop inc in fdivs fisttpll ret xor leave imul arpl jo ja cwtl out data16 mov jmp cwtl jbe sti jns iret scas xchg lock repz (bad) xor add add nop mov das cltd mov aam add ret pop adc mov inc inc scas (bad) std pop adc cmp lds fidivrl inc out jbe rorl and sbb fldpi mov out inc pop clc mov pop int cmpsl sub and aam mov mov repnz cmc add ret (bad) jmp jno pop std jg mov sbb dec mov test sub xlat adc test mov mov jecxz stos maskmovq testl inc jns jmp prefetch lret cmp daa idivl mov lods cmpsb loope sub xor scas add cs pusha add mulb pop fistpll out mov jbe outsw lea aam mov aaa leave xchg jl popa mov mov push loop fildl cmc in arpl pop jg lahf iret clc sub xor pop in popa imul (bad) mov popa sub ret mov pusha mov xchg es int3 out push jnp sbb mov dec int ds sbb cmp mov and in cltd out xor mov inc add mov mov xchg (bad) mov push push aas mov cld int loop dec rcr das inc movsb or jo and ja cli xor (bad) adc aam mov in mov jp pop and test push (bad) pushf xchg in and push fisttp mov mov call dec dec cmp pop and (bad) rcr push call out repnz (bad) sbb push outsl cmc jo fcomp pop or xor repnz dec pusha rol hlt push or mov dec pop push add ss cwtl cld adc dec ja lds cli stos scas xchg sbb cli xlat pop push and mov and fcmovnb mov adc bnd out sub adc xor push jae ret jne js sub f2xm1 cmp mov es dec mov inc or jnp inc pop fwait mov mov or iret (bad) cli loope loop xor int3 pop outsb jne mov (bad) sub adc enter mov lcall test loop int push stos popa addr16 jne lret mov and fadds ss test adc popf xor lds pop mov inc ror (bad) cld outsb jo pop fmul and cmpsl fs add sbb jg dec pop dec add ret mov iret ret jae arpl ret and call mov dec stos inc in mov add jp adc shr sbb adc or out pop (bad) data16 mov add sub mov jne ffree flds repz dec leave jge sbb jp outsl jge rclb outsl push je clc (bad) xor sub loope,pn push int3 hlt xchg enter add adc lods sub in xchg loop xchg mov jae jle out (bad) add (bad) xor sub dec dec js cmp fwait test mul xchg popa xchg subb ljmp pop jae fisubrl imul scas in sti or mov lock pop cwtl out jno pop fildll push or mov xchg fbld (bad) icebp mov cmp lcall in xor mov in pop movsb scas adc sbb aad push jae jge mov xchg and add call and daa pushf jle xchg dec xchg in inc ds hlt mov shrb mov cli xchg movsl pop sbb push cwtl push bound pushf addr16 lcallw mov inc hlt jge and repz pop in clc sub mov dec dec lcall scas mov and cld jp inc out out mov imul mov mov (bad) mov xor mov jl dec xchg andl fldcw xchg fdivr mov xor and add fwait (bad) cs ror pop inc pop push jbe std fwait (bad) lods arpl ficomp fidivr std lcall push lahf cmp js inc sahf xchg scas add and stc mov rcr sbb mov out test out add lcall cmp test fcompl popf xchg (bad) outsl ja mov jb adc push enter dec xchg loope ljmp imul cmp and adc test por adc test repnz (bad) idivl sbb cld sub sub mov cltd cli mov mov and push jb,pn popa subl fildll call or (bad) out adc mov mov loope cmpsl push sub mov test mov pop pop std aaa aaa in incl (bad) sahf fwait mov sbb or xchg add pop mov das int3 adc cltd (bad) xchg sub ret outsl mov mov into addr16 aad jg pop sbb lea push xchg test push stos mov (bad) add dec pop mov adc (bad) mov lea xchg shrb inc push ss mov cmp xor loope mov les cmp mov push mov cli and mov jb pop add lret cmp out xchg sub testl mov sar pop sahf pop lcall xchg xchg scas outsb mov ljmp lret mov jp rcll mov jne mov icebp les jg hlt hlt ret icebp fcom cmpsb jle and jp jge test or out stos fnstcw pushf xchg dec sahf lods fscale or pop movsl dec out push in mov stos mov lods or sbb push movb movsb xor mov dec xor aaa jmp mov pop cmp lods aaa idiv rcr (bad) jecxz fidivr insl push and sarl sbb pop mov pop stos stos pop xorl les xor test push inc sbb stos push xchg cli sub ja (bad) js lret mov clc lea inc jmp leave lock mov cli in pop mov (bad) mov dec ret jno stos pop adc es sahf xchg insl ret pop sti xorb push aas outsl movsl inc mov (bad) jmp sarl cmp movsb push (bad) xor xchg fsubr inc stc xorb mov lahf mov daa icebp aad (bad) loope xchg scas ss lret and mov xchg negb cmp popf popa lods lret jb and outsl dec push mov pop cli inc ljmp xorl dec jecxz aaa lods mov aas mov sti (bad) dec cmp sahf sub jno sar cmp std pop movsl movsl loopne sbb add jbe (bad) pop pop ss or cmp clc and movsb inc sbb push xchg push jmp es cltd adcl lea add sub mov mov ss sbb cmpsl test jecxz shlb mov and sub sub pop fistpll and pop jno or lods mov mov push mov pop jbe mov xor push sub dec dec repnz cbtw daa add aam cmpl xor mov jecxz sbb cwtl (bad) fmull mov push jb push jbe mov fsubrl add mov mov and (bad) mov out inc pop fnstcw pop dec das fdivr push lahf inc adc cmp aad push andl mov add mov mov in in (bad) push sarl and shrl icebp mov inc push cmp and test push xor add pop sbb jp mov mov fldl or xchg fmull dec mov popf call mov fiaddl jb dec int jbe aad ljmp dec xchg cmp jle pushf mov leave sub lahf ret and mov cld xor dec pop inc push cltd ja jns cltd fdivrl cwtl mov cmp outsl movsl cmp push mov xchg jg push cmc std rcrl pop lahf out jno xchg mov adc mov cmpl xor mov dec jl cli test cwtl mov pop sub mov (bad) xor cmp in inc jbe je sti inc sub sbb push xchg mov cmp xor pop xor adc cmpsb push ljmp dec pop mov scas call fisttpll rcr fnstcw sub int imul mov aam fs (bad) jbe push add insb mov in xchg jle imul test test mov dec and xor cmp repnz xor adc jae (bad) cmc inc cs gs mov lds xor or cwtl ljmp ficoml rclb lods repz dec aas and pop mov hlt or dec cmp shll xlat rorb push pop pop ret scas les setb sar xlat in cmp add dec (bad) std push jbe sub testb gs icebp out sub jbe dec jbe sub inc add inc out movsb sub decl push xor (bad) repnz xor sbb jae jecxz (bad) movsl nop movsb sub add out cmp sub jne push mov call jns add sub dec (bad) (bad) rolb cmp inc orl (bad) push lods call in pop fsubr js pop fisttpl fist adc adc sub mov push cwtl pop add mov cmp int cli mov stc ja mov and mulb movsb xchg leave ficomp stc dec aaa lods inc mov xchg jae lret add sbb sub cwtl dec fisttpll (bad) sti jg inc jecxz les mov (bad) out jo sub fnstenv push and (bad) jne fldt in jecxz fstl pop scas and in xchg rcl dec cmpsl pop mov push or stos xor mov int3 aam push pusha mov mov mov lcall push jnp cld dec mov hlt jne lock pop jg mov mov icebp mov jge idivl pop sub jns add add pop jns pushw aam sbb lea insl adc inc jno addr16 aam daa in insb sar cmc scas pushf xor xor ret sub dec outsb pushf imul and jno lcall dec mov jmp gs mov lcall mov jb pop cmp mov les jmp repnz sbb cvtps2pi cmp mov inc mov int jae ds adc cmp push adc jbe xor sub sahf imul add xor adc cmp cmpl mov lods fldenv pop outsb es test or mov ja add sub test ret inc dec lcall mov or rcll int xor adc mov sub imul cltd xchg inc xchg jmp addr16 outsb aas push push inc jg rorb fwait addb sub xor xchg add xchg (bad) gs aam inc popf idivb fidivrl add jp sub mov ret adc roll push ds jo lret or pop fs sbb or out xchg (bad) ss popf cwtl cmpl dec push cmp fisub or movsb (bad) in mov ficompl sti xor xchg fisttpll mov daa xor fyl2xp1 lret push into int3 mov test sahf and pop inc mov push out dec jl daa repz xchg dec shlb in mov repnz xor pop jns std jmp hlt pop push jbe inc ret or mov outsl mov inc push xchg xor stos rorl mov mov sub jge sti pop loope xchg inc push fcmovnbe adc inc cmp aaa sub mov sub jne xor aad mov cmpsl cmp mov add shrb jge leave dec jecxz popf test push xor (bad) fs (bad) std push outsl inc mov loop addl loopne (bad) mov clc mov sbb stos cmp rclw inc shlb outsl sbb push ja cmp add int3 fwait mov in xorb ss int3 sub loop leave jmp xchg sub cs pop stos ret jbe outsb xchg sbb das mov ret mov adc lods enter cmp jp and test mov call test xchg inc xchg js jg push and cs mov sarb cwtl mov sti add cmp mov hlt ret sti fsubl xlat dec xor cmp or mov jns loope psubw push sbb dec add xchg into nop test ja mov jp (bad) ds mov push mov data16 jno cmp dec inc cwtl cmp sub pusha adc dec mov jge idivb out test mov scas iret (bad) cli or adc mov jg dec sub (bad) sub push cmp insl out xchg pop es sbb add aaa add jnp in push adc in in push imull loope shrb inc and or mov sti or inc int mov jge mov mov jne mull or cli jne imul lea outsl pop xchg lret js out dec ss mov inc bound enter and bound lock sti sbb sti jg fbstp mov iret pusha add jno repnz (bad) iret or cs or cld inc rclb mov dec pop cltd js movl xchg scas jo push or sub fstpt stos xchg adc orl pop sbb push cmp xlat jns test dec nop xlat pop push leave sbb or sti cmp pop roll leave imul stos das addr16 jmp cmc sahf xor mov incb scas xlat xlat jge inc sub bound scas or add sbb mov pop incl or adc daa lock loopne sarb lcall dec sub jb push pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add loopne add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov jne inc inc push pop inc in fsubs xchg or movsb xchg out out add xor (bad) xchg je or add push and dec jmp movsb lret out pop out jge test jecxz add add add lock push xchg fcmovu cld xchg pop pop loope mov in hlt mov xchg adc fbstp ffreep imul insl cmpsb sbb mov aam bound push push cwtl jmp jge ja push repnz dec movsb push push (bad) (bad) xor push sarl iret ret outsl sub sar fistl or es popa and es xchg je addr16 inc icebp add stos pop dec push std jno push dec jg sti pop imull nop pop push mov push cli xchg sbb lret lods ljmp mov cmpsb lock std lock int3 xor fwait iret sbb cmc mov pop push test loopne mov nop (bad) leave xor xorl mov inc aam pop xchg jo out rep repnz or shll inc and nop push mov into and xchg sbb aas pushf mov pop cmpsb arpl xor xor aas or mov decl test (bad) xor and jo fmull sahf stc int3 or cmp jns ret notl jg cmp cltd (bad) mov int3 sub sbb or fs lds lret dec push mov repnz push pcmpgtb loope cmp and inc adc mov add fdivrl inc push icebp mov xchg int3 fcmovbe cltd dec ret popa loop add out addl push inc lock adc mov daa pop xchg and inc jmp ret add inc adc cmpsl cwtl push push outsl jle sub in out (bad) je mov inc pop jnp loop out insl push or mov test fld stc dec hlt adc sub inc (bad) xlat mov mov mov or xchg cmc inc les cmpsl xchg mov ja mov pop pop mov mov sub cmp shlb cmp and pop xchg movsl pop cmc in xchg and jle jle fs adc ficoml pop out dec adc mov movsb add ja (bad) (bad) (bad) push fs sub mov inc ja cmp shrb xchg dec insb push nop divl pop daa ljmp xchg cmp lock sbb cmpsb scas mov push or jbe lret ret mov popf push inc dec dec mov jo mov scas adc jbe (bad) and jb jnp clc int push mov sbbb xor outsb sbb mov jne dec mov out sbb lret jmp (bad) push push clc sbb adc fcmovnb sub pop mov adc jnp lods pushl call pop mov pop mov lods sbbb push xor mov in xor js andl popa out stc or adc scas jmp jp adc add imull adc inc std arpl (bad) fsubrl pushf sbb je sbb and or mov push jne or push pop mov gs inc push jge test mov pop mov add dec lea push push xchg or movsl insl xor mov dec aaa mov mov mov test shl jmp test pop cmp mov insb push js movsl pusha pop sbb ret fnstenv pop ret bound pop cmp inc xchg sub in jmp imul jmp mov fnsave pop lcall mov mov jl lods lret sbb cmc inc repnz cmpsb inc popf out sub outsb fs jne cmp lret lret jecxz mov xchg out pop mov dec loopne pushl sub bound lds insl mov inc pop outsl jle inc int xchg sbb repz lods sub adc pop xor (bad) jmp push aam push call das push jle xchg (bad) push lods insl daa pop and xor imul stc data16 call lcall ja mov mov enter ja lods mov add mov add xor mov mov sti pop xchg jae mov clc jbe pop xorl mov jmp stos sbb insl sbb xchg push push aaa adc lds sbb aaa je xor imul jne fimul jmp stos pop mov push notl jge loope mov arpl aad dec outsb xchg inc test test stc jl lds push inc in cmp hlt in cmp xchg pusha divb adc fucomi add push addl divl inc dec pop imul pop leave and or (bad) lahf test mov sub (bad) mov clc inc adc pop cwtl cltd out ljmp push and jb out fidivrl mov dec mov xchg jnp cld mov pop inc aas out loope test jnp loop jl in jno mov sub dec shlb push rcl ds dec ret jp sub mov (bad) mov mov fsubrs int and lods xor inc imul les sub sub sub sbb lcall dec out inc stos fwait mov stc ljmp add lret ss nop sub (bad) xor jno xor int mov dec inc and jle dec call test cmp aad mov in push or lock daa mov ret mov xchg inc jg iret push xchg xchg jb add sub mov sti dec xor aas popf jp rorb in (bad) mov mov in sbb es dec mov insb inc sub mov push out out movsb lret push jmp jmp lahf jbe xor subb xchg sub jbe jg outsb repnz cmp (bad) fldt adc loope mov xor dec dec movsb (bad) (bad) cmp sbb and jmp xor jo repz and push lods xor enter imull dec push xorl (bad) das cmpsb mov int3 xlat adc fidiv sub inc fiaddl les mov mov add ljmp out jbe mov call (bad) scas push fistl mov (bad) xchg push int3 cmc jp (bad) movsb repz jle adcl outsl roll mov xor popa movsl and divb xchg in cs cmp loopne xor jl pop scas repz push (bad) in jmp mov pop push xor pop xchg and (bad) pop iret das rclb sub pop xchg scas adc cmp inc mov fcompp xor sbb fmul mov mov shr lods out xor cld xchg lret pop lods cmp sub call in push mov adc repnz xchg sub mov stc mov jo xor sub dec (bad) jg das pushf in andl xchg (bad) xchg cmp lods arpl sbb test out insl jb mov mov sbb insb add sbb loopne push push out test in ds mov mov mov (bad) repnz mov (bad) jg int3 cmpsb faddl outsb mov push xchg sub cmp nop mov mov sbb lods inc mov out cld cmp outsl adc jp jnp pusha inc adc or or enter bound push in and add ret or pop movsl push push xchg mov scas xchg cmpsl test push pop pushf jnp pushf (bad) adc cmc sbb stos mov jecxz add (bad) xchg js sub jl inc mov imul mov clc pop fsubrl sbb add js pop mov movsb shlb fmulp inc pushl mov xor test int3 movsb jg,pn jne repnz int3 arpl test and inc insb mov jo jne sbb push cmp push (bad) dec push pmulhw fstps mov (bad) mov dec popa push es fbld lods cmc les dec mov xchg jmp xchg (bad) push arpl stc aaa push fisubl outsb jae sub dec add addb into xchg dec mov imul push movsl adc cmp mov xchg scas mov sbb das mov lods jecxz push call daa xchg outsl push or mov xchg adc sbb mov bound ja xor ret sub jge repz loope scas mov xor xchg adc mov rolb adcl sbb inc sub loope loop (bad) in or adc and in mov mov pop xchg mov jns push into mov fucomp inc mov call xor aas addr16 push (bad) mov clc mov pop pop pop mov and inc addr16 sub cmpsl insb jecxz sarb cmpsb cmp out out cmp and pop ror (bad) xor push push inc add scas or out xchg sbbl and lock push insl sub test sub rolb xchg pop mov testb and xchg push mov jne mov lret jnp fisttpll imul jmp or sbb xchg push mov loopne es inc mov loop call lods es xchg lcall (bad) dec out lahf cmpl cmp jae (bad) push jne in inc std addb push incb idivl jno mov in inc jns cmp (bad) std sub jbe (bad) test div fnop mov sub adc mov cmpsb rolb insb repnz push pop mov push in test dec fucomi xor fidivl inc cli insl jbe mov imul mov ljmp pop and mov xor add popl dec and out jge mov shlb outsl push sahf lods lods lods sete or and iret pop pop ret fs sbb test rcrl sbb roll out xchg mov lret or mov xchg cmp ret movsl adc jbe cmp out mov ret insb xor pop push pop in ljmp and pop dec sub mov lock add add adc jne push sbbl (bad) aaa aas fildll xchg xor jge pop (bad) push inc mov movsb cld jnp sti movzwl mov dec enter mov jno push jbe jns or stc out in outsb push icebp call cmp aaa mov (bad) cmp add pop push pop sub jmp sub enter in xor pop sbb mov push ret pusha inc jno jo test outsl ds ja mov xor inc inc aas pop (bad) loop cmp outsl std cmp jnp ljmp fcoml sti jne adc fadd js in stos (bad) xchg xlat cmc fs outsl popf sbb cmp mov mov int3 jb bound adc rcl insl mov sarb das daa sub int cs int3 add push std push aas pop hlt enter push dec jne jb xor mov push dec arpl (bad) jecxz fbld sbb fsts mov test cmpsb pop inc dec mov fucomp and mov js addr16 mov in addr16 xchg stc inc pop jne and dec test mov dec or into clc push mov xchg xor leave int icebp dec mov mov fucom movsl xor in popa mov cltd sbb mov popa push (bad) inc and mov cmp lahf jbe push xchg inc sbb fadds jp and sbbl xchg mov add mov repnz ss test leave xor push inc mov adc addl dec jmp stos push cld sub push mov jns test xor xor cmp push cli xchg (bad) jnp push sub ret cmp push mov xchg (bad) out cmpsl mov call mov sahf pop xor or or ret ljmp dec inc sub popf sbb fcmovnb adc jp das in scas add icebp mov mov and xchg movsb fisttpl or cwtl insb shrb dec push aas push ds jns addr16 or testb push sbb out aaa movsl int mov aad jecxz or insl aam (bad) aad fldcw xchg jp pop or rorb xchg fwait mov mov test lods stos jg dec adc lock dec pop mov add sbb lock lret std add push inc cmp pop test jle push cmp cmp sub mov loopne dec cmp dec sti les pop jl into jecxz cmpl cmp jnp scas xchg dec leave sbb pop (bad) adc call xor or icebp aas sarb in ja xor cmp (bad) lret mov fbld outsb outsl lcall repz mov loop sbb inc jge sbb loop add icebp movsb imul imul mov cmpsb hlt scas push lret adc xchg sub test mov dec add xchg mov in mov aad lds in nop jmp (bad) pushf scas outsl fxtract pop ss cmpsb dec fidiv pushf imul xchg ljmp scas inc insb out cld repz mov fs fisttpll push test jns inc in xchg mov aaa jne (bad) push ss dec or dec in (bad) lret cmp popf cmp cmpsl and and mov mov jg xchg jb dec xchg mov fs pop addr16 (bad) pop inc in push lahf mov icebp mov das test test fs sbb jmp jns jns (bad) lcall dec mov rorb icebp push cmpsl add cli lcall mov enter fs imul sbb rclb sub out int3 test sahf mov adc pushf cli sub cwtl leave nop jl adc (bad) jbe (bad) cld xor mov stc cmpsb (bad) rcl jns pop (bad) imul sub pop arpl scas adc mov pop cltd (bad) mov das aam inc shrl js js roll fsubs gs add call sarl daa lock sarb or daa lock sarb aas add out lock dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fist add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov je inc inc push pop inc in fdivs fisttpll ret je mov mov jmp sbb (bad) out outsb (bad) mov jo les rcr pop xor insl jb out fcomip mov pop xlat jmp pop add or add repnz jmp fadds scas imul dec mov cltd (bad) (bad) loopne cmp pop adc pop mov xchg pop dec in dec mov lahf inc lret or mov xor sub scas das pushl xor iret and scas xchg push fstpl xor dec data16 lret or pop jne icebp xchg das xchg in into imul imul in sub mov movsb pop mov in mov sbbl xchg rcrb in and jno xor fsubr fs jecxz jne push mov pop cmpsb scas repz imul jo mov mov cmp popf in jg sbbl mov inc sub pop insb jbe add pop mov sub ljmp cltd out and cmp cmp push int3 ja pop xor jnp in hlt dec mov js adc cmp scas mov (bad) and cmp cwtl mov jb (bad) nop dec jle in sbb pop faddl mov jecxz jns ret out out push lock add fs cmp mov imul sti mov aad xor nop or lds and cmp mov cmp push jbe cmp cmp xchg mov lahf pop mov push jecxz mov inc loope add inc mov sbb sbb in mov (bad) jp adc mov imul push adc out xlat push push in or (bad) mov clc jmp adc lods sub or cmp push test insb out or shlb pop push add mov ss imul jmp xchg jae shlb ja mov cmpl pop ficompl sub cld jge lahf lds loope decb jle add mov addr16 pop cmpsb test in dec xchg kmovb dec pop fisubl lds stos fnstenv mov es (bad) pop leave jnp and push jmp jp (bad) jno jle jl adc das out pop fs jne pushf pusha nop xchg dec adc (bad) outsl gs push into and adc xor jae sbb in mov and inc pusha aam test cmp jl imul (bad) cmp pop outsb dec fsubl mov push jp fwait jb mov movsl sbb push rorl and aam frstor movsl inc xor add ds lahf jne mov mov das sbb fs push fs mov xchg les andl mov adc int3 jne sbb out xchg sub fs push lea lods pop push rcll (bad) or sbb cmp mov sbbl cltd fwait ret xor in dec push jge lods ret and jbe cs (bad) hlt lods lods mov push push (bad) int dec int push push jns cmp mov lods add out adc mov test cwtl dec lcall or and scas scas sub test sub mov add ss shlb loopne add or imul adc sahf and lods mov and das push pop xor pop xchg in ljmp les add gs out mov ja mov xchg rcrb push bswap add int stos outsb inc mov cmp in popa jne and repnz xchg xchg lods js inc push scas lret add cltd dec and add cmc sbb sarb jno sub cld iret xchg cmp out lods inc mov mov fstpl hlt sahf mov xchg sub gs pop es test repz pop call decl jge adc outsl leave movsl bound cmpsb cmp pop pop sub mov scas cmp and xchg es mov mov xchg mov leave mov mov sub insl xor lds outsl sub push dec inc sub add xchg es movb paddq out fwait adc push bound mov mov jbe iret ret adcl jno pop les mull pushw hlt cmc fcmovu fwait push sub popa movsb push mov mov jb hlt rclb packsswb cmp fcompl test mov cltd sbb rcrb cmp inc cli popf imul (bad) jbe add mov idiv xorb int3 scas and fldenv fwait sub push (bad) jnp jmp xchg out (bad) xchg jmp ret push gs push add lea das pushf push (bad) shll push iret sub lea pop jmp pop jno out ljmp push lcall push jo out js les jb ret into sbb lods sub pop out sbb in into int3 xor xchg pop test popf mov hlt lds add fcomps mov mov stos hlt scas movsb arpl mov jne xor lea aas sahf sub test and xchg in mov fstpt je rcll stc xor cmp mov int3 sarb mov outsl out dec pop cwtl cli mov mull daa cmp xor add into test aam inc add mov pop (bad) int sub sbb jp xchg out addr16 pop sub inc jg cltd cs xor jo adc xor addr16 xlat push repz ret and in rorb or mov sbb xor inc adc bound call sbb out popa repz jge jmp popf dec inc cli mov ds jb cld cwtl das (bad) xor ret loopne sbb pop sbb pop xchg or push daa rclb cmp inc mov cli cmp (bad) hlt loop and xchg int pusha mov int dec mov aaa inc pop push adc stos out cmp lret jmp xchg int jne mov das ficom dec stos sub repnz adc stc ret mov dec pop mov adc push or ss push aam push cmpsl sub fwait push adcl mov pop gs xchg adc cmp cmp cmp jo and cmpsb or daa addr16 or pop jge jmp sub out inc add hlt ror push ret int3 stc sub and sub pop (bad) cld push mov (bad) out adc or fdivp fsubrl dec ret popf dec clc adc iret fucom dec and dec in mov imul dec cli insl adc cli sub js aam das mov insl pushf testl outsl xchg cld lcall pop cld (bad) push push (bad) fidivr pop and jns xor mov and inc xchg pusha popf or mov sub jae xchg dec stos push add insb inc mov xchg jae sahf mov dec cmpsl loope pop pop into fldl lcall fldt shrl insl data16 inc lret (bad) es les pop add dec loopne incb inc mov fwait js or (bad) jb pop rcrl pop (bad) jno adc cmpsl push shll pop xchg fimull xor add stc xchg sbb inc lock mov outsl and icebp int cltd les xor rclb xchg cmp cmp jmp or lods lea jge sub test andl arpl xor xchg lahf jno adc out fisubrl loope (bad) (bad) stos lods mov dec dec in daa lds xchg int3 push or dec cwtl fadds mov add push xchg or pop lea pop pushaw push int3 inc into mov (bad) in fistpl test sub xchg lea into addl sbb cld and repnz push adc and xor xor cmc add cmp repz bound scas dec sbb xor mov ja daa mov inc loop (bad) xchg cltd xor andl sbbl jo sbb out int3 bound xchg sbb (bad) sti pop stos pop arpl mov pop xchg in xlat sub adc rcr sbb xor stos fs jp call dec add repz sbb loop adc mov jmp nop dec and out dec mov and dec add inc imul mov movsl pop inc push lock lods sbbw daa pop and pop mov mov mov movsl add cltd mov sub push mov fucom cmp mov pop in pop movsb sbbb adc cs sub fcoml test ds xlat add (bad) insl xor xchg incl mov jle mov add lahf mov scas ss push jo aad xchg lock dec mov sti pop test cmpsl inc loop xor (bad) into lret mov push dec jnp cmp jo imul adc jmp int daa adc lret adc xchg out sub out lds lods push into jnp pusha and cmpsb int3 inc daa dec sbb add mov mov out and inc xchg out cli cmp sbb loope popf js inc in fistpll hlt mov pop xor adc aas mov ss cmc repz sbb pop sbb insb jnp mov andl mov jecxz mov xlat aaa xchg jno cmc mov cltd dec arpl sbb xor stos call and outsl cmp cld push popf dec mov dec inc add scas loop into clc or js into xchg dec les cld cmpsl call nop in cwtl mov and mov lret push orl test mov pop pushf sti mov ja iret pop ja enter fs adc sub jle push fcmovnbe mov sub imul test push aaa idiv xor scas push int3 jle mov (bad) arpl dec out lods nop lahf roll dec pop movb ljmp js pop repz out int3 ljmp (bad) dec mov mov cmp add clc imul sub inc aam mov pop jne mov js jp xchg xor or sbb inc fmuls in mov sub sti pop push cmp sub jne dec loop sbb enter (bad) inc pop mov dec lds sbb lcall add fstps mov in fmuls cs gs movsb push std test sub inc imul pop push in aam mov or dec cs push or and in pop lds test loopne fldt rcrl outsl sbbl int (bad) leave out insb adc clc lret push and xor inc mov jl inc jl pop dec gs hlt jmp cmpsb das jmp jmp xchg insb mov jbe dec in movsb xchg push std and cmovo sbbl fstpt das inc lcall dec pop xchg es int3 pop in or neg cs sbb xor outsb (bad) clc cmp dec or cld (bad) in in push aam cmc mov inc mov ja lods mov lret xor mov movsl lahf pop fs and mov mov sub xor loop (bad) sub icebp or je lds std (bad) mov dec repnz cmp icebp lods adc mov cmp outsl ljmp repz into (bad) int and es jne loope std inc (bad) xor sarl js jne cs xchg adc (bad) mov mov cmpsl cmp mov or addr16 and rcrl adc rcl mov mov sarl push loopne incb mov insb scas nop sbb lahf push pop loop push ss mov cld outsl jae test scas aas push jmp scas das loop jle das rclb pop ss loop mov jmp icebp and dec sub clc jb lods cs sbb pop cld mov add pushf or ss mov in xchg in fs int3 push out arpl test sarl pop outsl pop or ret lcall xchg (bad) jmp add lods inc stc ret or repz push ror insb xchg cmpsb ret or or xchg lods dec dec lret push xchg mov jae je mov shll add (bad) pop jmp xor outsl push lret inc in jns bound mov clc ljmp or arpl jmp roll aam pop mov daa (bad) outsb push xchg sbb jle scas dec (bad) fcompl xchg movb stc jo or test rolb loope add mov push or push cmpsl jle jmp mov aas push cmp sarl jae cmpsb mov push fdiv jns stc aaa int (bad) scas int sub fwait out pop jne fdivrl (bad) (bad) lret inc popl test cmc push imul adc push dec into int3 or rclb in mov nop imul mov sahf dec movsl sub jnp cmp loop xor push out imul divb pop adc cmp (bad) out lock mov ret aaa fdivrs or subl test adc loope,pn sbb cli mov pop cmc jae mov lahf and in jge cmp dec inc pop jne movsl mov jle pop fcomps loopne pop jle out mov push cmp adc aam inc lcall outsl xor mov and add fcmovnu inc into xor (bad) js pop adc push pop nop add loopne sbb dec adc dec push xchg pop div lret jmp iret mov mov push xchg mov cs pop dec popa xchg jecxz xor jae sbbl call dec mov mov jns lret stos pop cmovno xchg fdivrs inc dec dec xlat sbb jge sbb mov push sbb cmp iret rclb in iret jne scas or push inc inc test add jb ja std lret aas cmpl cld adc daa lock loopne cmpsl sar push mov jbe int3 test add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add loopne add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov jne inc inc push pop inc in fdiv and (bad) jecxz icebp xchg ss dec ja test outsb aaa fstpl mov or mov xlat in aam jmp aam rcrl repz js clc add mov add loop inc pop orl pushf sbb inc xor mov in data16 andl jmp sub test (bad) mov out neg xchg in mov mov aam lahf push (bad) sbb into cmpsb and mov mov mov loopne mov test jno hlt negb in rcrb xchg loopne dec cli leave leavew cmpsl pop add adc imul pop cmpsb movsl scas or mov cli pusha xchg push xchg cmpsb int jns lods fstp push or adc xor and sahf and add jns pop mov rclb or adc ja mov das in out mov mov fisubl mov jg cmp push dec xchg lods stc es mov mov mov xchg leave and xor iret mov push ret dec mov sbb idivb add div cmpsl loop imul xchg mov xrelease adc scas fdivr bound dec test lods and mov adc xchg jbe cmp rcrb (bad) mov dec rcrb add fdivrp out (bad) bnd (bad) sub mov lods ja xchg or jmp cmp mulb mov dec and cli pop sbb ret xchg cmc jle and js cmp fmuls or xchg push (bad) xlat out cmpl arpl fs push scas out ret dec jae loop daa pop push xor sbb cmp cmpsl pop addr16 je mov jnp mov add push jb cmp pop aaa jl or ljmp pop cmp test push mov cld push sub aaa adc cwtl rolb xchg sahf in cwtl (bad) adc cmc hlt (bad) and jecxz inc loop xchg dec pop sub ljmp in imul pop inc lahf mov stc ja add (bad) aaa dec or cmpsl fldt jo mov mov fimull aad xor out insl pushf push jne jne xchg pop loop (bad) stc xchg aas outsb push andl lret xchg dec iret dec fs xchg mov js pop loope sahf repnz scas dec xchg and mov jns call and jne lds mov push repnz and sbb mov out outsl add sbb jg ss inc or roll mov data16 fdivrs dec imull and (bad) idivl aad xor test lea adc aad sub sbb mov xchg repz je xchg dec popa add std xchg mov fwait les cmp xor xchg add gs shrl rcrl (bad) daa xlat pop mov shlb xchg jmp orl and jo js push andl daa aas inc sbb jbe add mov xchg and jmp sbb fs pusha mov sbb push nop mov inc stos mov pop in aam jge mov out cmp mov sub sti in (bad) fnop addr16 subl (bad) and ss jp mov sub push lcall push lods xchg adc lea mov into jb test rcrl sbbb push or sub adc mov lret push xchg subl mov jle and mov mov ret xor mov (bad) test pop add mov push dec xchg or push lock jg test xchg aaa (bad) jmp popa test push mul cs repz int3 (bad) arpl rcrb cmp arpl ljmp push repnz out shl sub mov mov pop out repnz outsb add xor stc popf insl (bad) pop mov mov cmpsl aas push in fsts or int3 inc adc movb mov or lahf inc adc mov sbb add xor jl testb out add test je jge push stc (bad) test bound cmp (bad) (bad) cwtl mov int sub xor mov xor mov mov lods cmpsb push (bad) or mov test rclb push xor lret enter subl scas xchg mov out mov add ja add scas clc push dec cmp pop cld xchg pop insb and aam rep jns jmp xchg aad xor cmp in adc xor inc out (bad) mov xchg out mov pop fildl fmull push mov mov lret addr16 xchg aam pop dec retw gs xor sub cmp int3 jno add inc je mov sub into (bad) mov push jae roll lcall out sub int add addr16 jge,pt cld aaa popa test out add sbbb xor negb gs bound jecxz jl,pt imul sbb out imul aad mov imul jns outsb sbb adc sbb jae (bad) pop jle pop cwtl jg in addps pop fwait pop fiaddl insb push repnz hlt jae sbb aad push fdivrs lods pop int add pop and xor mov xlat mov or vmwrite mov mov mov into into movsl xor jg mov (bad) fstpt jne mov xor fdivrl inc inc stos jmp jbe xchg data16 xchg dec scas mov into sub ds fwait sbb (bad) sbb lods stos aas inc sbb or pop lock outsb mov scas dec or test arpl out cwtl fiaddl daa rcll fsub jo pop mov fsubl out rclb sub sub movsb and xchg cmp jecxz adc add arpl inc xchg cltd (bad) dec sbb int out loope stc dec inc sub in cmpsl xchg ret inc nop scas insb ljmp dec sbb pop sub jno lods adc aas lock aaa push or push cltd adc jb xchg fwait sti rep inc es mov outsl mov adc inc or cld xchg movsl push push test loop sti mov lds or cmpsl ret sub (bad) adc arpl ljmp or push (bad) out sub fwait dec int xlat test xchg shll adc adc scas icebp mov pop mov or and lret int lcall cmp sbb push rolb cs xor inc stos sti loopne mov data16 shll ret and fs cmp dec rolb jb xchg repz das aam in lret push mov outsb fistpll cmp cmpsw xchg adc out ds and std add addr16 dec pop sbb push dec cs (bad) jno mov jl sbb icebp adc push les out pusha mov mov fwait or enter dec cmpsl int fistpll pushf mov decl xchg sti in arpl (bad) cmc out cmc mov loope out lods rcl pushf clc lods jmp xchg andl xchg ret pop rol fiaddl jp mov jp out sar cmp cltd mov mov (bad) notl fbld inc mov cld ja je inc sarl in icebp adc push or cwtl test inc imul inc pop in in rclb mov and cmp cmpsb data16 xor arpl repnz dec (bad) (bad) mov lds dec sbb mov clc mov xchg xchg push add sbb fbstp in cltd cwtl insl fisubl in aam aas rcrl pop lods jecxz push lcall xchg movsb push inc test inc or mov les or lret push mov sub pop dec push cmp dec inc and scas fiadd xchg lds pop pop jae pop out sbb xor push jp mov inc pop gs aad (bad) cltd or into sbb push loopne push outsb out mov in ficoml loop insb neg mov sbbl fdivrl fcomi sub xchg ljmp jb mov sub pop xchg sub xchg enter out inc push mov movsl es push cmp pop sbb insl imul xchg insl add scas jmp add fidiv es mov inc adc lods test repnz es mov lods hlt push repnz sub pop mov sbb fdivrs inc in fdivrl aad fwait sub scas cmpsl push sbb imul pop push in addr16 jge dec (bad) or test push insl pushf (bad) clc mov lods pop outsb (bad) hlt or push or pop add icebp cmpsl pop mov cmpsl and in jo jns out repz mov stos mov movsb mov int fidiv xchg xchg das cmpsb bound dec xlat icebp int3 jmp mov stc adc repz in jne out (bad) dec adc std jmp das nop scas sbb test lcall (bad) and movsl dec clc clc in mov (bad) jp xor and (bad) inc sbb push movsb es (bad) hlt sbb pop mov xchg std and pop mov dec out push push lcall jnp dec sbb sbb jb ljmp dec cmp or js pop mov add cmp scas push lods (bad) cmp sbb inc push pop les ja jl les es and push test ljmp inc movsb das xchg xor insb out sbb push repz movsb add and icebp and in push cmc inc dec push sub outsb push sub add jnp out sub pop or test xor push cld ss xlat dec aaa sar and cmp repz hlt lea mov loop (bad) mov out data16 sub jnp xor xchg std std pushf jbe out nop scas push cmp xor push pop in in jmp test aad out dec roll push adc mov cmpsb fwait adcl pop stos cmpb stos repnz jns mov insb out out testb xchg mov adc repnz pop repnz in hlt aas loope xchg xor push cli iret scas mov andl lcall (bad) test xlat xchg pop es scas jl rcll dec push fdivrp mov repnz cli sbb dec cs push xchg lods cwtl mov adc ja ret sub data16 jbe xor ljmp cmp cli (bad) sub mov cwtl jle test lahf gs pop imul cmp xor ret jno insl testl xlat dec into loop cld inc mov jns dec fisubl jo lret loope xchg fadds sub movb leave xlat mov xchg lods pop out inc scas push sbb popf xlat (bad) mov cmp mov ret sbb jle pop sbb jmp sub cmpb fimul out test out iret mov cmp cs stc popa sub lods cmp aad push clc aad rcrl xor loop xchg push lcall sti pop int3 into mov or fisubr pusha push clc jge,pt faddl out pop dec enter lret addr16 add in stc adc lea ret outsb push mov loopne aas add and push cli decb cmp repz push (bad) ss adc mov icebp sbb mov inc adc push jge,pt push cli loope add iret enter xlat jbe out movsb andl es mov std out pop movsl mov and lea scas mov (bad) cmc add cmpsl andl cwtl lea pop push dec adc cmp fcmove mov pop jecxz add call xor mov je lock std lock loope je or cmpsl mov sahf cmp (bad) hlt or jl inc sbb jo aam imul jns ss in test push es rcl sub dec or fnstsw cli out xchg push sbb je sbb pop (bad) lock dec add ja mov xchg mov push das in bound mov push (bad) cmpsb push xchg mov sahf mov stc lret lds adc loop ss arpl jnp add inc adc push push sbb jecxz cmp or xor fs add add jae pop aam idivb pop test xchg loopne push and mov stos xor mov (bad) adc ds lcall (bad) pop fldenv pop sub (bad) stos jnp jno fdivl fistpll orl add stc xchg sbb sub inc xchg inc lret xor ja cmp sub out pop jae enter dec js inc xchg sub (bad) cmp add push jmp dec lahf (bad) out pop dec and (bad) cld test cmp sbb push mov movsl fnsave enter push aas jecxz mov jecxz rclb leave int3 fs xlat (bad) icebp push mov das in fidiv sub adc nop adc xor std cmp cltd aam sbb int leave push or fwait dec cld bound sub inc push mov push xor test repnz mov pop or in inc lret ficoml mov xchg into add lock into jno sub jg push sub roll frstor pop adc dec negl (bad) cmp inc sub inc test mov push push mov adc dec imul setnp aam pop xchg pop and xchg lret frstpm(287 bound call insb xor mov add jns hlt push sahf xchg mov insb xchg insb xchg insl jb sbb test fs dec mov pop xor (bad) repz and push mov mov jbe push adc idivl sub aad jne js cmc and pop push inc inc jbe (bad) sub mov mov or fdivrp xchg mov in sarl mov xor lret xchg fild push inc push lret cli sbb dec clc xor push pop ret aas repz sub repnz rcr mov or inc popf shrb std sub sahf fwait insb or movsl and sbb and adc mov aas outsl iret bound ss dec sti leave dec aaa mov xchg in jbe (bad) movntq ds stos iret xor jb ficompl pusha (bad) rcl das cmc jmp daa fstpt loope aam inc jne inc arpl push mov je lds (bad) outsb sahf sub xchg out fwait mov shl xchg repnz pop loope pop sub xchg (bad) and dec xlat mov cmpsl xlat ds dec mov xor mov scas jg incl or adc daa lock loopne sar cmp (bad) fs mov dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov jb inc inc push pop inc in fdiv and (bad) jecxz icebp xchg out mov cltd imul push aaa cmpsb (bad) hlt jmp leave jae daa (bad) mov jge arpl jle (bad) out sahf jg jecxz daa add add jo add mov jbe out mov sub mov mov adcb sbb or adc mov aam jbe (bad) ja sub les sub push cmp sti cmp pushf jb (bad) das cmp inc repnz sub and lds and adc adc cmpsl call hlt adc inc xchg dec xor add mov es test cs dec dec loopne add cmp stos cld test mov cmp add push sbb dec inc insl insl jp push inc icebp addr16 adc dec cmpsb jge daa jbe loope dec sub cwtl dec fwait aas pop dec dec pusha mov adc push loope push ss ja pop add rol (bad) mov xchg sahf repz xchg aad jp xlat pop test and stos push cld scas adc mov fcmovbe in mov testb repz jl js andb xchg sbb xchg jno xchg inc sbb mov lret push jge dec dec lea aaa stos or pop jno ficoml movsb fldlg2 jne sub std cmp scas in int rol mov lret jmp aaa popf lret jecxz daa mov xchg (bad) jbe adc imul inc divb hlt lods inc mov insl fldenv mulb fmuls in inc inc or sub test (bad) fnstenv clc lods repnz enter loopne mov gs lea sub (bad) cmc fwait xchg fisttpl jmp mov push mov hlt loopne mov jno shl xor ljmp fsts sti pop or scas pop and cltd loopne aad mov xchg outsl xor dec mov loope mov stc (bad) or or cmp push test push mov bound xor dec mov xchg jg cmpb (bad) xchg lods icebp or cmp or add mov mov or xlat dec mov pop inc or add adc sbb push cmc icebp mov icebp in xchg insl mov inc stos cmpsl sbb insl push jno push (bad) sahf aam sbb imul mov (bad) and mov imul mov pop imull push jp push sbb mov mov pop test or call xchg sub idiv sbb int sti pop mov add scas fsubs fs lods cmp or inc mov stc adc pop lahf pop imul and mov mov ds push mov pop scas or cs xor cmp psrlw mov xor or jmp jno jp jg and adc (bad) cmc adc jle mov cwtl and mov idivb xchg adc sbb leave and daa sub sub gs call jmp aad xor ds sbb or sub pop lods cld (bad) jne push sub daa dec repnz dec xchg mov jns pop dec cmp xor pop mov repz das sti and xor (bad) lds call insb sub sti cwtl mov sti mov mov cmp (bad) jo aam xor js sti (bad) sbb pop push xchg push sti xor icebp and insl push dec inc sub sub js sub push call sub movl xor test in out cmp push add jb and fcomip and xchg xchg iret pop xor adc (bad) xchg inc cmpsb lret jp push scas test loop fisub mov fbld lahf syscall xchg rorl je and bound pop jo xchg popa push cli scas add (bad) outsl icebp or cmpsb jmp xor mov pop xor (bad) imul sarb xchg xor icebp int jne test scas out inc jp pop mov mov movsl lcall pop jle (bad) repz jecxz mov pop out popa (bad) lret andb push xchg xorl push sub fdivrs out scas pop out mov jg sbb push cwtl stc mov fcoml sub xchg mov clc ss ds dec add stos adc loope push push jns cmc inc dec ss je loopne pusha inc mov mov cmp imul inc es dec pop pop xchg inc jp mov pop rcr imul xorl out mov dec into pop test (bad) nop (bad) mov pop movsb lds lds rcrb (bad) or sahf pusha xor push call es xchg dec enter push xchg xor pop and sub xchg out xchg addl test mov mov loopne into inc add arpl mov jg fucomp cmp rcrl sahf repnz lcall shlb jb lea cmp cmp outsb leave ret xchg outsb xor or dec cltd sbbl movsl xor mov pop dec or das xor arpl cmpsb xchg popa pushf or aad push mov rcrl pop jge adc jle mov outsb jecxz jge fs ret hlt nop pop pop aad xchg adc mov cmpsl gs fsts push fwait cwtl insl push inc add popf push aas (bad) cwtl fild mov dec lods lea insb inc inc fs fdiv pop bound loop and lret xchg aam push jo mov push sbb lods repnz ss lods in and pusha repnz xor and sbb lret inc addr16 push ret xor test (bad) push pop push rorb sti pop aaa dec addl jge adc jo icebp andb adc cltd lret movsb int fmull int3 js mov (bad) in mov sub fcmovu mov pop sub movsl les nop shrb cmp jbe outsb sub lret sbb ret das inc fnstsw enter push jmp ja or cmp js test leave mov int (bad) xor push jns xlat dec mov mov adc and gs pop jge test lock pop cltd cmc fldl inc cmp (bad) sti imul or push mov adc sub je xor (bad) mov test jmp jnp orl jbe dec cmp cmp push sbb xor ret mov jg mov fsub adc ss lahf shlb and out mov mov or and fwait jae sbb cmp cmp mov subl sub xlat inc loop lods pop fistpl xor and fcoml pop or cltd outsl jo pushf xor loopne pop fstps push das push and imul inc pop in sub fdivp pop pop enter repnz dec or pop pop xchg dec sub out mov pop xchg les call dec js jo inc mov xchg push popf pop pop mov mov mov es sub and pop decl jmp ljmp inc pop pop ds mov inc mov jne or sub mov add sub xor add (bad) jae aad or in mov mov test cs stos jmp das out outsl (bad) cli cs in jb mov adc jmp xor in fs cwtl dec mov (bad) hlt mov mov sbb cwtl popf (bad) sub mov push mov outsb xchg out loopne push cmc sbb fimul mov lret (bad) fimul or ret loop add mov lahf xor pop jnp or mov mov push push lea add (bad) xchg inc out fst jmp inc movsb test testb (bad) hlt js jmp ss (bad) push (bad) out xor das stos mov leave mov cmp enter test cmp (bad) adc fidiv orl icebp aad push mov adc test (bad) jo sti adc xor push xchg add or sbb cli inc inc ret or pop jge and mov scas mov mov gs xchg jnp xchg xor xchg (bad) mov xchg and push ret rclb movsb mov push lahf in and xlat push xor clc sbb stos shl xor idiv pop lret inc jno adc mov rclb imul mov xor mov sahf mov int3 cltd stos fbld popf lods mov rcrb sbb je ret arpl cmpsl ret pusha jge pop xor negl cmp cli clc ds adc lods loop clc inc pop mov bound loopne xchg insl out inc add decl lret pop sub adc aad popf les (bad) pop xor dec pushaw insb int sub test pop jp scas clc enter cs cmp (bad) jp jmp aad dec in (bad) das mov ljmp shlb sbb jno ljmp sub inc lahf cmpsl jbe aas inc pushf xor outsl clc js inc add add add scas add xorb lods jecxz inc test cmp push test jns ret jno rol add aas cld ficomp xchg icebp in mov push push and in mov sti dec sub sti leave (bad) dec call clc pushf pushf repz and mov mov push jnp lods insl push sub es (bad) mov mov and push ja xlat lods add xchg das mov pop (bad) mov lahf rcrl cwtl pop mov lock lret add xchg nop stc rol inc jbe push sahf mov stc dec std repnz mov scas mov fidivr jnp in bnd inc mov pop inc lds in xor dec jp mov jp mov enter mov dec dec loope data16 fisub mov decb fldcw pop out mov cmpsl clc xor push fistpll movd push mov mov cmpsb adc in sbb xlat mov lcall or loopne fldl aad pop out adc loopne mov mov pop (bad) lahf jmp push jp cwtl and inc cmp lahf lock push daa push adc lcall sub sbb cmp cs nop in adc pop mov inc lods mov add dec loop cmpsb pop addr16 iret lret cmp and mov popa gs mov out daa dec fiadd add mov cmp dec sbb adc sti adc shrl mov dec insl xlat leave push push cmp into mov mov adc movsl xor mov mov pop inc mov or jg sub int pop outsl mov cmpsb pop or or sub mov into push lods lds call mov sti iret add js mov cmpsl jl out mov (bad) insl add clc xchg cmp inc (bad) int3 adc (bad) dec pop sub setno or add aaa mov (bad) orps cli es pop mov sbb fwait orb stos test out push bound aas fdivr into jecxz sbb leave adc adc out and jp inc jne fldcw in cli mov adc (bad) sahf sub aam gs scas jns cld mov add mov cltd adc cmp mov movsb rcrb mov xchg loopne mov lcall sahf stos pop nop (bad) xor add pop scas out jl xchg in sbb jmp pop dec out sub fcoms mov add gs inc rolb std xorl inc mov cmc dec xchg sub aas mov jae jmp nop repnz push pop mov daa jbe ret loope in (bad) xchg insb jns mov sbb aam int xor mov test and lods inc outsb mul and inc notl xor (bad) mov popa (bad) sub mov mov mov push std inc ucomiss inc and or add out lret out inc in push cltd pop mov stos sbb stos scas cmp dec mov mov jp and leave fist push inc pop push xchg cmp jle fsts imul gs push mov cmpsb mov dec add mov pushf into cmp loopne mov loope (bad) xchg and ds dec ss mov fcmovbe loopne adcl outsb (bad) imul xor mov inc (bad) pop insb out dec mov aaa mov aam pop xor jecxz xchg jecxz les xchg icebp fmuls (bad) cmp jmp cli xor movsl sbb xor mov sub mov adc neg ds add xor in or in cld jno add ja leave add popf push gs shll aaa inc jmp ss jmp push mov ja ret addr16 xor mov jbe lds mov test cmpsb push xor or pop in dec adc test hlt push fwait xor and and aaa stc or cs xchg mov jmp into push mov push jmp dec test mov dec dec flds js inc jbe fst and mov mov aas sbb xchg sub xchg sub iret inc (bad) xlat movsl pop cmp pop mov gs push ljmp outsl movsl rorl mov popf mov call repz sarl push cmp pop xchg xor call pop iret xchg nop test call clc and dec mov in ljmp out int mov cmp add mov cmp pop dec push clc or push cmpl pusha xchg jg fs lods shrl cmpsl pop and (bad) push in push mov and mov inc (bad) fstp cs add (bad) lret (bad) iret pop or xor rorl (bad) mov fs sti xor test push jmp jge inc fucom mov int3 inc jno js xor (bad) pop mov scas add fwait cmp mov bound inc cmpsl push arpl jnp lcall nop mov push fstp imul ret add or (bad) out mov sarb lahf es (bad) icebp out sti lahf paddq dec repnz stc and dec inc dec mov add outsl adc jmp sarb jg incl or adc daa lock incl cmpsb dec add stos xchg or add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov into dec inc inc push pop inc arpl mov pusha pusha push nop mov or and mov sahf pop fildll jmp mov jbe fidivr lods inc jl in and mov les lret fiaddl addr16 dec jle test fs ja (bad) xchg fnstsw frstor xchg jb,pn loop lods daa sti call push or (bad) mov (bad) scas mov jne lea push stos adc inc jecxz or sarl movsb cmp mov fs cmc daa enter testl jecxz out dec out mov insl add push sbb pop sbb lcall scas stos (bad) jae and stos push out push cmpsb push jecxz add dec sbb jnp lods cli leave add lods (bad) cmp jne xlat int fwait outsb jo aad outsb cld xchg mov out (bad) jbe xchg pop mov loop jno mov (bad) xor jmp and aas mov mov mov fstl lods cmp pop ret cmp xchg lds pop int3 jl leave jle mov push jg fmull mov mov rcll dec jne std jne mov cmc cmpsb sub int dec mov cltd (bad) ret call mov xor rol pop jae fisubrl and dec pop jnp iret xchg int3 loopne lahf fist xor xor jl xor imul mov pop push xchg cmc sbb mov stc stos (bad) pop sahf sbb cmp in jae inc jmp inc or (bad) out push div enter mov jle sarl mov stc lea mov xchg lock aaa movq aaa les xor cmp xor (bad) xor ja mov xchg in mov aas es sub pop (bad) fcomps jl xchg fwait dec (bad) mov mov stos mov cltd hlt xlat pop out push cltd int pop popa clc xchg fcmove aaa cmp cmp daa inc pop int dec aaa dec or jmp push and and xor fdivs adc jno lock lret lods cs (bad) mov outsl leave lret cmp mov ljmp cli mov (bad) fldcw xor jmp inc adc pushf loope call sub (bad) jg sbb mov adc dec sub scas stc jo mov sahf dec push outsb xor icebp icebp xorl scas xor aaa loopne shrb ss adc fstpt pop cmp jb xchg in in (bad) out cmpsb lods xchg aam adc xor rclb cmp push out mov fcomip aad jecxz cmc gs inc mov repnz (bad) jmp pop clc jmp (bad) repnz out test fidivrl out xor mov pop cmp movsl inc shrl xchg push push push push push push push push push push push or add scas addr16 and dec inc dec inc scas inc pusha (bad) or pop add dec inc add add add add adc add jbe xor xor add add add add and add adc add sbb add push je imul add add add inc push dec inc add add pop add and outsl bound add add add add inc add add or add add and add add add add and add add add add dec add add add add add add add sub add pop add add add or add or add add add add add sbb add adc add pop add add lret fs add add add add add add (bad) jg add add add add js push add js push add js push add loopne out or add in or add js push add or or add or add add ja push add add add or push or jbe pusha or js or sub in or add add in or add stos or add add adc or add add adc push add adc push add js push add add adc jne xchg adc xchg adc xchg adc ja push add push ja push add push ja push add ja push add ja push add ja push add add push mov push ja push add push ja push add js push add pop js push add js push add xchg adc js push add add add add pop js push add pop sbb add sbb sbb add add add add add sbb push add sbb push add sbb sbb add sbb sbb add dec sbb add sbb push add ja push add sbb sbb add mov add add add add add add add add add add add add add add add add add add add add add add add sbb push add push add adc and and or pop add or add or add add add or or add add or add add add add or add add cmp addb add or add add add adc add push push add or add add add add adc xor pop add add add push add adc xor arpl adc add adc add add add add add jne add adc mov add adc xor add add adc add add add add adc add add add add adc add add add dec adc add add add add add or add add add add or add add add add add add add add add adc add add add add adc add add adc add cmp aas add add add or add add add adc add add and roll cmp and in add add add add add add and jb cmp and mov cmp and cmpsb add add add add add add add add add add add add add add add add add add push add add add add add add add add add add add add add add add add add sub adc insb add add insb add add movsb add add movsb add add js add xchg push sub add adc add pop add add add add sub add sbb cmp add mov add add int3 or add out push add add or add sbb sub add add sub adc pop or add add or add add add aaa add add push cmc add add or add add pmaddwd adc cmpsb or add add add add clc add add sub xor push adc xor jle xor xor cmpsl adc xor rclb cmp xor stc adc xor and add add inc add std add add xchg sbb or add cmp add add adc dec add add add add add add add std add add xchg add in add add xchg add add add add add add add add add add add add add add add add add xchg add add clc add add addl add add add add add add add add add sbbl add add push or add add add add add add add or add add add add add add xchg add inc add add add add add add add add addl add add add add add addl add add add add add add add add add add add sbbl add add add or add add add add add add add add add add add addl add test add add addl add in add add addl add ret add add add add add add addl push jl add mov add add addl push das add add adc add add add add clc add add sbbl add add add add add add add adc add add add add clc add add addl pop mov add and add add addl pop mov stc add add addl pop ret add add add add add add addl or add add add add addl or add add add add add add add add add add add add addl or add add add add add add add adc add add add add add add addl or add add add add add adc add add add add add add add stc add add addl or add add stc add add addl or add add cli add add addl or add add add add addl or add add add add addl or add add add add addl or add add add add xchg push add add add adc add add add add adc xchg add push add add add add xchg add pop add add add add add add add les pop or sbb add add add add add add and add sar add add add add cli add add adc test add add cli add add adc fisttpll sub add cmp add add adc (bad) or add add cli add add adc adc add add sbb add add add add cli add add adc push or add add xchg add or add jl add add adc jno dec add add adc lcall and add add add add add add jne add mov add add adc mov add sti add add adc ret or add add clc add add adc fisttpll add add sti add add adc (bad) or add add sti add add adc push or sbb add add adc cmp (bad) cli add add adc xchg and add add adc mov add add add or xor add add or cmp add add adc clc or inc sti add add adc adc roll add add add adc cmp add and add add add add add add xchg push add add add add add xchg sbb or add push and adc aas or add add add add add add clc add add adc xchg push push add add add add adc scas push jmp sti add add adc leave push out add add add add xchg add add add add add add add add add daa add add adc push or add add add add adc pop or add add sub add add add or sub add add add sbb add insb sub add add add mov add sbb add add adc push ucomiss add cmp add add adc pop movhps add xchg sti add add adc jne cmp add fwait sti add add adc test add adc ret cmovbe add lods sti add add adc fisttpll or add mov add add adc (bad) cmovnp add mov add add adc add (bad) add add add adc add into sti add add adc dec adc add add add add xchg add roll add xlat sti add add xchg push add add add sti add add xchg sbb or add insb add add adc lcall das add add adc push or add jo add add adc push or add add clc add add adc mov add sti add add adc aad jle add cld sti add add adc add add add add adc pop adc add add add add adc cmp test add or add add sbb add adc add add add cld add add adc lcall xor add add add add cld add add xchg push add add add add add add xor add add add fwait add add add add cmpsl add add clc add add adc int push add add add add adc out mov add dec cld add add adc call mov xor add add add add add add xchg push add add add add add xchg sbb or add add add add add leave add add xor add add add rolb add hlt xor adc push or add add add add adc jno ljmp add add add or add add clc add add adc aaa adc add add add add adc push adc add add add add adc imul add add add add add add add add add add adc cmp add add add add add add add clc add add adc clc adc add add add add add add add add cld add add xchg sbb or add frndint add add xchg sbb or add out add add xchg sbb or add cmc cld add add xchg sbb or add add add add xchg sbb or add adc add add xchg sbb or add stos clc add add sbbl add add add add add add add addr16 add add icebp add add add add add add add add or push add adc push add sbb push add and push add sub push add xor push add add inc add add dec add add pop add add add pop pop push add push add pop jmp pop icebp add push add add add cld add add add add add add pop jle roll pop inc add add pop inc add add add add add add pop xchg add add add add add add in add add sbb add add addl jne test add sub sbb sbb add add cmpsb sbb add mov add das add push add add add popl xchg add lea imul jno push add add jmp sbb add mov push add sbb sbb add jmp sbb push test add push and rcrl out add or addl mov cmc sbb add push xor adc add add sbb add push stc add add jne push add mov sbb sbb sbb add add add or push add add jp add jp add mov add addb add int add mov add add add add add add add add add add add add loopne jae jo (bad) jg jg jg add add or add aaa add add add add add add add add add add pop add sbb add insb sbb add add add sbb add mov add add add sbb add mov add addb add or add add add add add add add add add add add add add add add add add add stos add aad clc add sbb and cmp push pop push addb push movsl push scas push les roll fiaddl out hlt push and add add cmp push push push and add add add add das add add add xor add add xor add add add add cmp nop cltd add cmp dec ret add cmp adc add cmp dec mov sub push cmp dec loopne std or (bad) lods inc aaa inc hlt jge push enter pop push push mov add add mulb fild add push inc outsb mov repnz mov fs push fnstcw cltd push mov sub xor es dec and call enter pop xchg push (bad) aaa idiv dec add dec add test add add outsl adc (bad) jg add add add add add add add add add add add add add add add or add add add add add add add add add add add add pop add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sldt add roll sahf or add add add add add add add add add add add add add add add add add add add add add add add add add inc add add add add add add add add aam adc add or xor cwtl add rolb jbe and jge pushf add and (bad) add push add add add add add add add or adc add add add add adc inc add add add add add add pop add sbb insl add add add add add sub add popa jb cs add gs das es and and xor push push dec and and push cmp fs dec inc inc cmp cmp sub inc push add arpl outsl jb inc inc das xor sub ds dec push outsb inc sub and insl jae outsl jb imul jns push jns je insl add outsb je insl gs imul fs add inc dec aas xor pop xor jne inc sub and bound add push inc pop das inc inc je jns push push sub push sub inc and gs jae aas fs dec jno data16 dec pop popa bound push add push daa inc imul bound xor push cmp add push sub dec pop push bound pop pop jl pop jge inc sub insl dec data16 jae aaa pop push pop inc cmp fs inc outsb xor push outsb and cmp jae es sub jb inc aaa dec xor pop insb sub push xor das ja and sub bound cmp push and inc and add insb jne push jns add push push and pop ja xor jae fs jne cmp fs inc popa inc daa and jp arpl and and push and inc cmp outsl and jb inc sub pusha sub inc je dec jl add cmp cmp jle cmp and inc popa cmp push and ds pusha and pop gs sub push and ss pop add push gs jne and and insb popa push dec sub and and arpl add sub jp push sub and inc pop imul inc jp and dec jp pop push popa ds dec and dec sub and push popa insb dec add jns dec inc cmp and daa xor sub push cmp pop pop jns push inc pop sub pop jns es pop dec pop aas xor and aaa cmp sub inc pop sub pop aas pusha pop sub sub sub dec bound arpl dec ja inc inc inc push dec pop push and je dec jb inc arpl popa sub jl dec xor cmp push cmp pop and inc inc insl arpl sub and and sub sub sub and cmp jl,pt jbe and sub gs insl add jae gs cs dec add imul aaa dec push xor xor push push and xor arpl push bound bound sub jbe insl and inc inc jp dec push xor and cmp jae push and push daa push push push and pop push and push inc xor add and outsl outsl push aaa jge dec cmp sub pop and and sub imul and cmp jo ds and jnp jno dec xor push pop jae aas pop jp inc dec and das das gs sub and pop xor cmp and jno jbe jne jns add and inc daa jne pop es push push popa dec xor jbe cmp and pop inc pop xor inc cmp es insl cmp inc aas arpl pop jae sub inc jno jle aas push xor pop inc jne dec and je sub jbe and jle gs sub sub inc xor push pop push cmp xor dec push dec fs aas push cmp jle ss popa push xor ja add push insl and xor pop xor fs cmp jnp jae das cmp inc and and pop dec dec cmp push dec outsb pop jbe ja inc jns dec push pop cmp dec cmp jle xor xor arpl push dec dec imul pop pop es ss inc js jle das and imul das dec cmp and push dec jns push dec push dec sub xor jp cmp push das es pop je inc push jb pop push and pop es xor and jne jno sub je inc dec and jo push xor es inc js outsl inc inc insl push js jl sub sub jnp add sub sub dec pusha pop je dec pop pop push inc dec inc push jne inc and pop xor sub xor inc ja jae outsl sub dec sub and inc and and inc and push aas inc xor and jne es imul jnp imul xor add cmp imul sub insb xor sub inc pop jge and add jl and inc sub jbe push bound dec ss dec dec add aaa inc dec jle arpl pop arpl outsb jle push jbe pop push pusha jge add sub cmp jb xor jnp xor cmp and dec inc jle cmp push jl popa pop and jle sub outsl xor add sub insl inc sub push es fs inc jne pop cmp jo cmp dec cmp xor pop pop popa daa xor sub and dec and and and jbe inc outsl sub inc imul and add xor insl xor inc daa jbe cmp pop dec aas js dec sub dec inc and dec xor dec and push and and dec jge sub add and popa sub pop das jo das inc xor and jb and jns jae and and outsl outsl xor jge inc and jnp pop inc jb cmp push push jge and inc addr16 add je insl push push insb dec push jno das push aaa das insb push and jbe addr16 jle arpl js xor inc jns cmp imul jl inc aas data16 jge dec sub jnp pop jnp push xor ja xor xor and and pop inc jl cmp push sub dec jnp dec xor pusha xor push sub jne push pop jo cmp add dec inc xor push sub push and inc cmp and and das jbe inc ds outsb push jns sub inc xor xor inc es gs pusha insl aaa pop jae xor push jne and xor add jb push inc pop jle pop dec sub imul sub ja and and ds aaa js push and and sub imul and push cmp xor inc js cmp jp inc insl push jb add ds ja fs inc push inc popa xor bound push inc dec inc and push cmp cmp inc and pop xor jae cmp je add sub dec pop inc jb inc inc push cmp push insb jb sub aaa xor pop imul jbe inc popa das arpl and push and je pop sub add pop pop jno xor inc je ja aas inc inc ss outsb jge pop and daa cmp dec jae arpl pop inc inc sub outsb cmp and xor ss js cmp inc push jl arpl jae pop pop ds add cmp push pop fs jbe and imul push aaa dec xor sub sub je and daa dec es inc dec and sub sub sub push push push push xor inc jb jb inc sub jae dec js cmp add push pop bound and jp dec inc push and inc sub das and jle jb add pop jle dec sub cmp and sub sub and aaa popa dec dec dec gs push dec bound cmp xor dec es inc sub add xor and jno inc dec dec xor cmp sub jo add js daa and push inc push outsl cmp cmp sub jo outsl sub imul xor cmp pop and inc and sub jp addr16 sub inc cmp imul jle and je jo cmp cmp daa push jne jnp ds xor jle xor xor inc push jnp sub aaa and pop cmp outsb dec xor add xor and and inc jne jno inc jnp jbe aas xor dec push and insl bound sub jne and data16 ds cmp inc jl inc and add xor pop das dec xor fs push jne imul xor push pop and xor arpl cmp aas jns xor jno add pop xor cmp das cmp and push jb pop pop and xor and pop and pop sub jl ds sub imul jbe inc push push sub inc push jae inc arpl aas jl push xor jae cmp ss xor and jb inc and sub dec arpl daa inc and daa xor xor cmp inc inc and pop outsb inc pop cmp jnp imul dec aas inc jl inc and aas and dec cmp outsl pop popa outsb push outsl and cmp and and je insl cs imul inc outsl jb jae inc outsl jb add (bad) lods add fs jns das jns and es ds ss pop add imul push outsl dec jns je inc insl dec and cmp add (bad) movsl add outsb je jb jae push js jb fs je add (bad) mov loope mov inc imul imul addr16 (bad) test js dec pop push xor xor xor cmp and jae dec aaa and daa sub das sub xor dec js cmp and sub pop jne imul inc pusha dec dec pusha pop dec sub inc imul add outsl arpl jae push jns je insl cs imul imul pop fs and and inc bound cmp sub and dec xor jns inc jo cmp dec sub inc inc dec and aaa sub add jns dec inc cmp sub arpl pop push push ss dec jge sub imul insb add dec inc jp push pop das cmp gs insw push arpl jns push and loope mov sub cmp dec outsb cmp bound dec jp xor sub pop add jae insl bound push jns je insl cs gs arpl outsb add jae insb jbe inc jbe outsb je jb jae loope mov add and add (bad) mov push jns je insl cs jb ja outsb add jp inc add (bad) mov jnp pop ja push inc inc inc arpl and xor xor sub dec dec and pusha inc jns insl inc cmp jb ss outsl dec jb and daa push xor xor push and and das bound push push addr16 dec gs outsl jb push je gs insl add pop xor pop sub and and pop arpl and and inc js inc pop dec jns inc and jb jns dec pop fs js push pop daa add insb popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add xor pop cmp and jns dec pop push pop dec push bound and aaa push es imul inc push dec sub dec ds daa add jo outsl insl popa imul je jp sub ds xor jno xor sub xor jno aaa push inc addr16 dec dec es cmp aas jno sub jp and dec cmp arpl dec gs jne pop jno pop sub ds inc pop dec and xor imul sub add outsb je imul je outsl insb add imul pop cmp cmp cmp pop push inc sub sub pop bound and daa push push and pop sub pop es push sub and js sub sub push jge inc insb jge ss jbe,pt add je outsl fs outsb outsw add aaa jge pusha outsb and aaa push push sub imul es and pop dec jb dec and imul pop and pusha es aaa dec data16 dec inc inc push xor fs insb pusha jle and inc popa jge pop bound pop sub push push and push push daa push cmp jp add dec push pop jnp das js bound sub outsl and add sub push sub cmp sub xor sub outsl daa add and add (bad) movsl loope mov loope movsl loope movsl add je push arpl gs outsl fs (bad) movsl loope mov add push aaa insl dec push ss imul bound xor jnp xor and xor push arpl xor jl jns jp jge push jb pusha and push je imul fs push jns je insl cs gs add cmp dec and dec cmp inc pop sub sub add and inc cmp pop and cmp xor popa and sub pop push sub ss daa ss inc sub add xor cmp and jo jbe jo pop push pop sub and inc pop cmp xor sub pop popa and inc push inc and inc outsl outsb je outsl insb add sub ja cmp sub dec xor inc xor ds and aaa add push dec aaa push sub push imul xor and cmp xor inc inc popa cmp je dec pop xor and and inc insb daa add imul push inc sub and outsl pop inc pop bound ja pop pop daa add imul jns je insl cs arpl imul arpl push dec ja jl cmp pusha push cmp inc inc popa insb and push cmp push cmp imul insl xor xor jge sub jo add outsb je insl gs jns gs popa outsb fs add xor push xor jge sub insb dec inc jae cmp push pop inc and outsb inc and push inc addr16 cmp and inc push sub outsb pop inc sub insl jo inc xor cmp sub inc and cmp xor xor push gs insb jbe inc jbe outsb je popa outsb fs gs pusha cmp inc xor aaa ss push bound das dec pop pop xor dec daa xor jl and xor cmp cmp push sub pop cmp add daa fs dec xor inc dec arpl sub inc aas dec inc jge push sub inc pop sub and sub outsb dec xor jle push ja inc push push inc dec push outsb inc ja jae sub push aaa cmp cmp pop push sub sub popa cmp push jnp je imul push cmp jb xor pop pop js dec inc pop pop jl jle cmp xor xor dec fs and sub and inc cmp loope movsb add inc jo sub das sub sub push inc das push das inc add jl push ss pop cmp aas das jl inc jno and inc dec and jo dec jp cmp fs sub jle jnp daa xor cmp dec gs outsl fs popa jae add xor push cmp inc dec imul insb inc inc das imul jno inc dec push pop jae and cmp cmp push push outsl cmp jle add xor xor push sub push xor ss dec addr16 jbe dec pop das aas jns pop jle dec jb aaa cmp imul and dec jb sub inc jo fs and jge push jb jp xor add inc jo cmp jbe pusha xor jge pop push outsl addr16 dec pop jl add xor inc inc xor xor inc inc xor xor inc xor xor cmp cmp aaa inc xor ss cmp aaa inc inc ss cmp inc xor cmp ss inc xor xor xor xor inc aaa inc cmp xor xor add aaa inc inc inc inc inc xor xor inc inc inc cmp cmp xor inc inc inc inc inc ss xor xor xor aaa xor cmp inc cmp cmp inc xor inc xor xor inc cmp xor inc xor ss xor inc inc inc xor inc xor cmp inc cmp cmp inc inc xor inc aaa inc cmp xor cmp inc inc inc xor inc add xor cmp inc aaa inc inc xor aaa xor xor xor inc xor inc inc xor xor inc add inc inc inc xor xor xor cmp xor inc xor xor ss inc xor sub sub cmp cmp xor inc inc inc and and dec js sub fs das inc jns xor and cmp inc outsb sub add inc and inc pop xor inc pop push jne push je push das sub xor sub cmp jo push and jno jp pop inc arpl sub sub cmp fs jns push push sub cmp and pop pusha dec jne pop es push jl jne push xor xor jnp jns cmp inc jl inc cmp xor pop aaa jae jge inc xor jns bound push and inc and dec pop pop jl xor js jo xor cmp add outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add ja push jno xor je cmp push dec push inc jno and and push dec sub dec jnp cmp fs and insl and jae popa jb add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add jo jb jae dec insb fs jae inc je jb bound add jae insl bound gs jb jo imul imul jae gs bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound imul imul jae gs bound outsl jo jb addr16 jb bound add jae insl bound jb fs popa jb inc je jb bound add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add jae insl bound imul outsl outsb inc je jb bound add jae insl bound jb fs je je jb bound add jb outsb add inc push push inc je jb bound add xor ss bound sub sub gs jne arpl jb,pn jae jne arpl add je xor push jne je insl gs gs jo jb add imul inc jb popa jns inc jns add popa add popa fs jns add je dec outsb addr16 add outsb je xor inc outsb arpl imul pop push push inc cmp inc gs je imul gs add data16 inc insb outsl arpl outsl jo add je jns gs jb insl dec popa outsb fs add je insb gs outsb je jns add gs je dec outsb jae popa outsb arpl dec popa je add js push jb je add jae gs cs outsl jb add jne gs bound push jns je insl cs imul arpl add outsb jne gs bound xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl push outsl inc jb popa jns jae je push gs add outsb je popa outsb fs gs popa fs dec outsl popa add jae insl gs popa jns jne add jo imul add je inc insb insb outsl ja jne je inc js je inc gs jne jb outsb je jb arpl jae dec imul je insl inc je jb bound gs jb jbe fs dec popa jb push push gs bound arpl inc jno popa je bound xor inc imul jb pusha xor jae je dec je insl add outsb je imul dec push gs popa insb imul push jns je insl cs jne je insl gs gs popa insb imul add outsb jne gs bound push jns je insl cs outsl insb insb arpl outsb jae push jne add je popa je add je dec popa insl add je js arpl imul insl bound jae je inc jne outsl push arpl gs imul outsb jae addr16 inc jne jb outsb je outsl insl popa imul inc outsb je jns outsl imul jb inc jo outsb add je imul bound imul jns gs push gs popa je add jae outsb fs popa jns jne add je inc jne outsl push arpl gs outsl fs je inc insb imul add insl bound dec outsb outsw add outsb imul je insl cs push imul gs popa fs push gs jne arpl gs insb jbe add je dec popa insl add je inc jbe fs arpl pop inc jae gs bound dec outsl popa add je outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je dec outsb jbe imul gs popa outsb imul jae jne arpl popa insl gs add add (bad) (bad) mov mov sub add push sbb sub add add mov pop push sbb mov add add add add adc add add add or and add adc sbb or add or add sbb adc add adc adc or push adc add adc push adc push sbb adc add add push adc and add add or and add adc add adc add add or push adc push and or adc add sbb add or adc or adc or add add and add adc add or add add or and add adc or push adc and add sbb add sbb add add sbb and add add add add add and and and pop add adc sbb sub or sub or push push add adc push add adc add push add add add adc add push add add add mov pop jg aad cmp adc add push add xor or add or add push add sbb add xor xor add cmp adc add sbb inc push add sub sub push pop add add inc adc or add adc add add adc or adc add dec push add add add inc push add adc sub push adc push adc add or or or add add add push or add add add or adc add push add dec or or add push add push push add add push pop add adc push add add sbb add add inc push sbb add add pop pop add add inc adc add add sbb push or add push add add add adc add pop push add push push add adc gs add add inc adc add add pop push push add adc sub adc add sub add adc add sbb add add adc adc add sub pop push add add add or add add adc push add add push or add sbb or adc add push add add add add sbb insl sbb sbb add adc push add sbb add sbb push adc adc adc adc adc push adc adc push adc push adc add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add add add add push add add add add popa add pop add adc jo jb addr16 and xor xor add sub add popa xor xor cmp sub sub sub cmp xor xor add add xor xor xor xor add pop or xor or xor and or and or and add add adc or sbb or sbb or or add sbb adc add adc push sbb add push push or add adc add popa pop add adc pop add add add or pop add or or pop add pop pop add or or or pop movups or or or add or or pop add or add or and add pop add or add add inc add add sub pop or or add or pop add or add push add push add push add or add sbb adc push add sbb pop add or or adc and add add add inc add add sbb pop add sbb and add adc or push sub sbb sbb sbb sbb adc adc adc or or or or or add push add inc pop adc push push push or sbb adc or adc xor pop add add add add add push or sub or pop or adc or push add pop push or or pop or or or sbb or pop push or or sbb and add adc and sbb add add add xor add or pop or and or or or insl or sbb and adc pop add or sbb adc add or or add sbb or pop or or sbb pop or or or sbb push add pop add or pop push or or or add add sbb and add dec add push or stc or or or sbb or or sbb and add imul pop push or or or pop or adc or and adc sbb or or sbb or pop add sbb or or or add sbb pop pop or add or sbb sbb sbb sbb add add add add add jo add add pop inc outsl jb js dec popa imul jb gs insb add add add and 